import { PropertyOption, WidgetConfig } from '../../types';
export declare class WidgetPropertyService {
    constructor();
    /**
     * 获得某种类型的全局默认值，在完全没有值时使用
     * @param prop
     * @param arrayItem 是否是来获取 array 的子项默认值的，默认不是。
     * 如果不是，若 prop.isArray 为真，就返回空数组 []；
     * 如果是，则不管 prop.isArray 是否为真，总返回 prop.type 对应的默认值，仅应用于增加数组项时获取新项。
     */
    getPropertyDefaultValue(prop: PropertyOption, arrayItem?: boolean): any;
    /**
     * 元部件加载、编译完成后，组装新的 properties
     * widget name
     * -> constructor name
     * -> widget + title bar + base properties
     * -> 元部件的所有可配置 properties
     */
    getWidgetProps(widgetName: string, widgetConfig: WidgetConfig): PropertyOption[];
    /**
     * mixin 已有pv + 元部件推荐的默认pv + 此类型的全局默认pv
     */
    mixinWidgetPropValues(props: PropertyOption[], propValues: object): {
        [propName: string]: any;
    };
    getColorsByColorOption(colorOption: any): any;
}
