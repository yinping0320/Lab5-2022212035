/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// import { datalessJumpOption, DatalessJumpConfig, JumpTypes } from './presets';
import { Property } from './widget-registry/widget-property.decorator';
/**
 * @abstract
 */
var WidgetBase = /** @class */ (function () {
    /**
     * 因为是父类构造函数所以无法依赖注入, 也没法传入参数;
     * compInstance.field = xxx 的方式又发生在构造函数后而不太好,
     * 所以考虑此父类不提供成员属性, 而通过依赖注入, 在子组件自取.
     */
    function WidgetBase() {
        this.title = 'untitled';
        /**
         * @deprecated 是否使用外部数据源。是的话，wc 就拿它的 portlet id 请求数据去。应改为 dataEngine 写法。
         */
        this.useDataEngine = false;
        if (this.widgetName == null)
            console.error("\u5143\u90E8\u4EF6 " + this.constructor.name + " \u672A\u6DFB\u52A0 @Widget({ name: <name>})");
    }
    /**
     * 元部件容器大小变化事件，参数 width 为容器宽度，单位 px。
     * 可重写此方法以处理复杂的响应式样式。
     */
    /**
     * 元部件容器大小变化事件，参数 width 为容器宽度，单位 px。
     * 可重写此方法以处理复杂的响应式样式。
     * @param {?} width
     * @param {?} height
     * @return {?}
     */
    WidgetBase.prototype.onResized = /**
     * 元部件容器大小变化事件，参数 width 为容器宽度，单位 px。
     * 可重写此方法以处理复杂的响应式样式。
     * @param {?} width
     * @param {?} height
     * @return {?}
     */
    function (width, height) { };
    /**
     * @param {?} propName
     * @param {?} value
     * @return {?}
     */
    WidgetBase.prototype.onPropertyChange = /**
     * @param {?} propName
     * @param {?} value
     * @return {?}
     */
    function (propName, value) { };
    /**
     * @deprecated
     * 请用 this.dataService.loadData() 代替
     * @param data 获得的数据
     */
    /**
     * @deprecated
     * 请用 this.dataService.loadData() 代替
     * @param {?} data 获得的数据
     * @return {?}
     */
    WidgetBase.prototype.onGetData = /**
     * @deprecated
     * 请用 this.dataService.loadData() 代替
     * @param {?} data 获得的数据
     * @return {?}
     */
    function (data) { };
    tslib_1.__decorate([
        Property({
            category: '公共属性',
            displayName: '部件标题'
        }),
        tslib_1.__metadata("design:type", Object)
    ], WidgetBase.prototype, "title", void 0);
    return WidgetBase;
}());
export { WidgetBase };
if (false) {
    /** @type {?} */
    WidgetBase.prototype.title;
    /**
     * 编译时将 \@Widget 中的 name 赋值给 widgetName, 构造器中会检查是否有值，没有就报错
     * @type {?}
     */
    WidgetBase.prototype.widgetName;
    /**
     * @deprecated 当前部件 id
     * @type {?}
     */
    WidgetBase.prototype.portletId;
    /**
     * @deprecated 当前部件实例 id
     * @type {?}
     */
    WidgetBase.prototype.id;
    /**
     * @deprecated 是否使用外部数据源。是的话，wc 就拿它的 portlet id 请求数据去。应改为 dataEngine 写法。
     * @type {?}
     */
    WidgetBase.prototype.useDataEngine;
    /**
     * @deprecated
     * assets 文件路径必需加上这个 base 前缀。注意在构造函数或之前使用时其值会为 undefined，
     * 因为实例化完成后，widget-container 才会给它赋正确的值。
     * @type {?}
     */
    WidgetBase.prototype.assetsBaseUrl;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2lkZ2V0QmFzZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3B3aWRnZXQvd2lkZ2V0LWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9XaWRnZXRCYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQzs7OztBQUV2RTtJQXFDRTs7OztPQUlHO0lBQ0g7UUFyQ0csVUFBSyxHQUFHLFVBQVUsQ0FBQzs7OztRQXdCdEIsa0JBQWEsR0FBRyxLQUFLLENBQUE7UUFjbkIsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUk7WUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLHdCQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxpREFBK0IsQ0FBQyxDQUFDO0lBQzFHLENBQUM7SUFFRDs7O09BR0c7Ozs7Ozs7O0lBQ0gsOEJBQVM7Ozs7Ozs7SUFBVCxVQUFXLEtBQWEsRUFBRSxNQUFjLElBQVUsQ0FBQzs7Ozs7O0lBRW5ELHFDQUFnQjs7Ozs7SUFBaEIsVUFBa0IsUUFBZ0IsRUFBRSxLQUFLLElBQVUsQ0FBQztJQUVwRDs7OztPQUlHOzs7Ozs7O0lBQ0gsOEJBQVM7Ozs7OztJQUFULFVBQVcsSUFBVyxJQUFJLENBQUM7SUF0RHhCO1FBSEYsUUFBUSxDQUFDO1lBQ1IsUUFBUSxFQUFFLE1BQU07WUFDaEIsV0FBVyxFQUFFLE1BQU07U0FDcEIsQ0FBQzs7NkNBQW9CO0lBd0R4QixpQkFBQztDQUFBLEFBN0RELElBNkRDO1NBN0RxQixVQUFVOzs7SUFFOUIsMkJBR3NCOzs7OztJQWdCdEIsZ0NBQVc7Ozs7O0lBSVgsK0JBQWlCOzs7OztJQUVqQix3QkFBVTs7Ozs7SUFFVixtQ0FBcUI7Ozs7Ozs7SUFNckIsbUNBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgZGF0YWxlc3NKdW1wT3B0aW9uLCBEYXRhbGVzc0p1bXBDb25maWcsIEp1bXBUeXBlcyB9IGZyb20gJy4vcHJlc2V0cyc7XG5pbXBvcnQgeyBQcm9wZXJ0eSB9IGZyb20gJy4vd2lkZ2V0LXJlZ2lzdHJ5L3dpZGdldC1wcm9wZXJ0eS5kZWNvcmF0b3InO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgV2lkZ2V0QmFzZSB7XG5cbiAgQFByb3BlcnR5KHtcbiAgICBjYXRlZ29yeTogJ+WFrOWFseWxnuaApycsXG4gICAgZGlzcGxheU5hbWU6ICfpg6jku7bmoIfpopgnXG4gIH0pIHRpdGxlID0gJ3VudGl0bGVkJztcblxuICAvLyBAUHJvcGVydHkoe1xuICAvLyAgIC4uLmRhdGFsZXNzSnVtcE9wdGlvbixcbiAgLy8gICBkaXNwbGF5TmFtZTogJ3RvcFJpZ2h0SnVtcCdcbiAgLy8gfSkgZ2xvYmFsSnVtcENvbmZpZzogRGF0YWxlc3NKdW1wQ29uZmlnID0ge1xuICAvLyAgIGp1bXBUeXBlOiBKdW1wVHlwZXMuTm9uZVxuICAvLyB9XG5cbiAgLyoqIEBkZXByZWNhdGVkICovXG4gIC8vIGljb24gPSAnJ1xuXG4gIC8qKiDnlZnnu5nnrZvpgInop6blj5EgbG9hZCBkYXRh77yM5YWD6YOo5Lu25Y+v5Lul6Kem5Y+R77yM5bm25Lyg5YWl6aKd5aSW5Y+C5pWw77yM5L2G5a6e6ZmFIGxvYWQg55SxIHdjIOadpeWBmuOAguWboOS4uiB3YyDnn6XpgZMgaWTjgIIgKi9cbiAgLy8gQE91dHB1dCgpIHRyaWdnZXJMb2FkRGF0YSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAvKiog57yW6K+R5pe25bCGIEBXaWRnZXQg5Lit55qEIG5hbWUg6LWL5YC857uZIHdpZGdldE5hbWUsIOaehOmAoOWZqOS4reS8muajgOafpeaYr+WQpuacieWAvO+8jOayoeacieWwseaKpemUmSAqL1xuICB3aWRnZXROYW1lO1xuXG4gIC8vIFRPRE86IOW3suW6n+W8g+aWueahiCwg5Lul5LiL5Li66L+H5rih5pa55qGI5Lul5YW85a656ICB5YaZ5rOV5YWD6YOo5Lu2LCDlkI7mnJ/lsIbnp7vpmaRcbiAgLyoqIEBkZXByZWNhdGVkIOW9k+WJjemDqOS7tiBpZCAqL1xuICBwb3J0bGV0SWQ6IHN0cmluZ1xuICAvKiogQGRlcHJlY2F0ZWQg5b2T5YmN6YOo5Lu25a6e5L6LIGlkICovXG4gIGlkOiBzdHJpbmdcbiAgLyoqIEBkZXByZWNhdGVkIOaYr+WQpuS9v+eUqOWklumDqOaVsOaNrua6kOOAguaYr+eahOivne+8jHdjIOWwseaLv+Wug+eahCBwb3J0bGV0IGlkIOivt+axguaVsOaNruWOu+OAguW6lOaUueS4uiBkYXRhRW5naW5lIOWGmeazleOAgiAqL1xuICB1c2VEYXRhRW5naW5lID0gZmFsc2VcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqIGFzc2V0cyDmlofku7bot6/lvoTlv4XpnIDliqDkuIrov5nkuKogYmFzZSDliY3nvIDjgILms6jmhI/lnKjmnoTpgKDlh73mlbDmiJbkuYvliY3kvb/nlKjml7blhbblgLzkvJrkuLogdW5kZWZpbmVk77yMXG4gICAqIOWboOS4uuWunuS+i+WMluWujOaIkOWQju+8jHdpZGdldC1jb250YWluZXIg5omN5Lya57uZ5a6D6LWL5q2j56Gu55qE5YC844CCXG4gICAqL1xuICBhc3NldHNCYXNlVXJsOiBzdHJpbmdcblxuICAvKipcbiAgICog5Zug5Li65piv54i257G75p6E6YCg5Ye95pWw5omA5Lul5peg5rOV5L6d6LWW5rOo5YWlLCDkuZ/msqHms5XkvKDlhaXlj4LmlbA7XG4gICAqIGNvbXBJbnN0YW5jZS5maWVsZCA9IHh4eCDnmoTmlrnlvI/lj4jlj5HnlJ/lnKjmnoTpgKDlh73mlbDlkI7ogIzkuI3lpKrlpb0sXG4gICAqIOaJgOS7peiAg+iZkeatpOeItuexu+S4jeaPkOS+m+aIkOWRmOWxnuaApywg6ICM6YCa6L+H5L6d6LWW5rOo5YWlLCDlnKjlrZDnu4Tku7boh6rlj5YuXG4gICAqL1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgaWYgKHRoaXMud2lkZ2V0TmFtZSA9PSBudWxsKSBjb25zb2xlLmVycm9yKGDlhYPpg6jku7YgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9IOacqua3u+WKoCBAV2lkZ2V0KHsgbmFtZTogPG5hbWU+fSlgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDlhYPpg6jku7blrrnlmajlpKflsI/lj5jljJbkuovku7bvvIzlj4LmlbAgd2lkdGgg5Li65a655Zmo5a695bqm77yM5Y2V5L2NIHB444CCXG4gICAqIOWPr+mHjeWGmeatpOaWueazleS7peWkhOeQhuWkjeadgueahOWTjeW6lOW8j+agt+W8j+OAglxuICAgKi9cbiAgb25SZXNpemVkICh3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcik6IHZvaWQgeyB9XG5cbiAgb25Qcm9wZXJ0eUNoYW5nZSAocHJvcE5hbWU6IHN0cmluZywgdmFsdWUpOiB2b2lkIHsgfVxuXG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZFxuICAgKiDor7fnlKggdGhpcy5kYXRhU2VydmljZS5sb2FkRGF0YSgpIOS7o+abv1xuICAgKiBAcGFyYW0gZGF0YSDojrflvpfnmoTmlbDmja5cbiAgICovXG4gIG9uR2V0RGF0YSAoZGF0YTogYW55W10pIHsgfVxuXG59XG4iXX0=