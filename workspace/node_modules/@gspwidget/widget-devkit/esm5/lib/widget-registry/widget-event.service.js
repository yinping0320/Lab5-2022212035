/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { curLang, FILTERS_WIDGET_FILTERS_PROP_NAME, FILTERS_WIDGET_NAME } from '@gspwidget/util';
import { WidgetEventMap } from './widget-event.decorator';
import { WidgetRegistry } from './widget-registry';
import * as i0 from "@angular/core";
var WidgetEventService = /** @class */ (function () {
    function WidgetEventService() {
    }
    /**
     * @param {?} widgetName
     * @param {?} pvs
     * @return {?}
     */
    WidgetEventService.prototype.getEventsByWidgetName = /**
     * @param {?} widgetName
     * @param {?} pvs
     * @return {?}
     */
    function (widgetName, pvs) {
        /** @type {?} */
        var ctorName = WidgetRegistry.getWidgetByName(widgetName).ctor.name;
        /** @type {?} */
        var widgetEvents = WidgetEventMap.get(ctorName) || [];
        if (widgetName === FILTERS_WIDGET_NAME) {
            return pvs[FILTERS_WIDGET_FILTERS_PROP_NAME].map((/**
             * @param {?} fc
             * @return {?}
             */
            function (fc) { return ({
                name: fc.i18nName[curLang],
                propName: fc.i18nName[curLang],
            }); }));
        }
        // 组装
        return tslib_1.__spread(widgetEvents, test);
    };
    WidgetEventService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    WidgetEventService.ctorParameters = function () { return []; };
    /** @nocollapse */ WidgetEventService.ngInjectableDef = i0.defineInjectable({ factory: function WidgetEventService_Factory() { return new WidgetEventService(); }, token: WidgetEventService, providedIn: "root" });
    return WidgetEventService;
}());
export { WidgetEventService };
/** @type {?} */
var test = [{
        name: 'click bar'
    }, {
        name: 'event 2'
    }, {
        name: 'event 3'
    }];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LWV2ZW50LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3Nwd2lkZ2V0L3dpZGdldC1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvd2lkZ2V0LXJlZ2lzdHJ5L3dpZGdldC1ldmVudC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLG1CQUFtQixFQUFxQixNQUFNLGlCQUFpQixDQUFDO0FBRXBILE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBRW5EO0lBS0U7SUFBaUIsQ0FBQzs7Ozs7O0lBRWxCLGtEQUFxQjs7Ozs7SUFBckIsVUFBdUIsVUFBa0IsRUFBRSxHQUFHOztZQUV0QyxRQUFRLEdBQUcsY0FBYyxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSTs7WUFDL0QsWUFBWSxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtRQUN2RCxJQUFJLFVBQVUsS0FBSyxtQkFBbUIsRUFBRTtZQUN0QyxPQUFPLEdBQUcsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLEdBQUc7Ozs7WUFBQyxVQUFDLEVBQWdCLElBQUssT0FBQSxDQUFDO2dCQUN0RSxJQUFJLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUM7Z0JBQzFCLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQzthQUMvQixDQUFDLEVBSHFFLENBR3JFLEVBQUMsQ0FBQTtTQUNKO1FBQ0QsS0FBSztRQUNMLHdCQUNLLFlBQVksRUFDWixJQUFJLEVBQ1I7SUFDSCxDQUFDOztnQkF0QkYsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7NkJBUkQ7Q0E2QkMsQUF2QkQsSUF1QkM7U0FwQlksa0JBQWtCOztJQXFCekIsSUFBSSxHQUF3QixDQUFDO1FBQ2pDLElBQUksRUFBRSxXQUFXO0tBQ2xCLEVBQUU7UUFDRCxJQUFJLEVBQUUsU0FBUztLQUNoQixFQUFFO1FBQ0QsSUFBSSxFQUFFLFNBQVM7S0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGN1ckxhbmcsIEZJTFRFUlNfV0lER0VUX0ZJTFRFUlNfUFJPUF9OQU1FLCBGSUxURVJTX1dJREdFVF9OQU1FLCBXaWRnZXRFdmVudENvbmZpZyB9IGZyb20gJ0Bnc3B3aWRnZXQvdXRpbCc7XG5pbXBvcnQgeyBGaWx0ZXJDb25maWcsIEZpbHRlclNjaGVtYSB9IGZyb20gJy4uL2ZpbHRlcic7XG5pbXBvcnQgeyBXaWRnZXRFdmVudE1hcCB9IGZyb20gJy4vd2lkZ2V0LWV2ZW50LmRlY29yYXRvcic7XG5pbXBvcnQgeyBXaWRnZXRSZWdpc3RyeSB9IGZyb20gJy4vd2lkZ2V0LXJlZ2lzdHJ5JztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgV2lkZ2V0RXZlbnRTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3RvciAoKSB7IH1cblxuICBnZXRFdmVudHNCeVdpZGdldE5hbWUgKHdpZGdldE5hbWU6IHN0cmluZywgcHZzKVxuICAgIDogV2lkZ2V0RXZlbnRDb25maWdbXSB7XG4gICAgY29uc3QgY3Rvck5hbWUgPSBXaWRnZXRSZWdpc3RyeS5nZXRXaWRnZXRCeU5hbWUod2lkZ2V0TmFtZSkuY3Rvci5uYW1lXG4gICAgY29uc3Qgd2lkZ2V0RXZlbnRzID0gV2lkZ2V0RXZlbnRNYXAuZ2V0KGN0b3JOYW1lKSB8fCBbXVxuICAgIGlmICh3aWRnZXROYW1lID09PSBGSUxURVJTX1dJREdFVF9OQU1FKSB7XG4gICAgICByZXR1cm4gcHZzW0ZJTFRFUlNfV0lER0VUX0ZJTFRFUlNfUFJPUF9OQU1FXS5tYXAoKGZjOiBGaWx0ZXJTY2hlbWEpID0+ICh7XG4gICAgICAgIG5hbWU6IGZjLmkxOG5OYW1lW2N1ckxhbmddLFxuICAgICAgICBwcm9wTmFtZTogZmMuaTE4bk5hbWVbY3VyTGFuZ10sXG4gICAgICB9KSlcbiAgICB9XG4gICAgLy8g57uE6KOFXG4gICAgcmV0dXJuIFtcbiAgICAgIC4uLndpZGdldEV2ZW50cyxcbiAgICAgIC4uLnRlc3QsXG4gICAgXVxuICB9XG59XG5jb25zdCB0ZXN0OiBXaWRnZXRFdmVudENvbmZpZ1tdID0gW3tcbiAgbmFtZTogJ2NsaWNrIGJhcidcbn0sIHtcbiAgbmFtZTogJ2V2ZW50IDInXG59LCB7XG4gIG5hbWU6ICdldmVudCAzJ1xufV1cbiJdfQ==