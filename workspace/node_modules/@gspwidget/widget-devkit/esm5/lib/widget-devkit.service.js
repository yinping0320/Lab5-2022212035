/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { JumpTypes } from './preset/preset.jump';
import { CHART_TABLE_FUNC_ID } from './util';
/**
 * @deprecated
 * 为了 widget-devkit 的兼容而暂时保留。不准再用了。
 * 元部件应该直接用 \@gspwidget/util。
 * @type {?}
 */
export var DASHBOARD_API = 'DashboardApi';
var WidgetDevkitService = /** @class */ (function () {
    function WidgetDevkitService(modalService) {
        this.modalService = modalService;
    }
    /**
     * @param {?} content
     * @param {?=} config
     * @return {?}
     */
    WidgetDevkitService.prototype.openModal = /**
     * @param {?} content
     * @param {?=} config
     * @return {?}
     */
    function (content, config) {
        return this.modalService.show(content, config);
    };
    /**
     * @param {?} funcId
     * @param {?=} queryParamsArray
     * @return {?}
     */
    WidgetDevkitService.prototype.openMenu = /**
     * @param {?} funcId
     * @param {?=} queryParamsArray
     * @return {?}
     */
    function (funcId, queryParamsArray) {
        window[DASHBOARD_API].openMenu(funcId, queryParamsArray);
    };
    /**
     * @param {?} appId
     * @return {?}
     */
    WidgetDevkitService.prototype.openApp = /**
     * @param {?} appId
     * @return {?}
     */
    function (appId) {
        window[DASHBOARD_API].openApp(appId);
    };
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     */
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    WidgetDevkitService.prototype.openInfoMsg = /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    function (content, options) {
        window[DASHBOARD_API].messageSvc.info(content, options);
    };
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     */
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    WidgetDevkitService.prototype.openSuccessMsg = /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    function (content, options) {
        window[DASHBOARD_API].messageSvc.success(content, options);
    };
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     */
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    WidgetDevkitService.prototype.openWarningMsg = /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    function (content, options) {
        window[DASHBOARD_API].messageSvc.warning(content, options);
    };
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     */
    /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    WidgetDevkitService.prototype.openErrorMsg = /**
     * options 参考 https://ng.ant.design/components/message/zh
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    function (content, options) {
        window[DASHBOARD_API].messageSvc.error(content, options);
    };
    /**
     * @param {?} dataOption
     * @return {?}
     */
    WidgetDevkitService.prototype.getData = /**
     * @param {?} dataOption
     * @return {?}
     */
    function (dataOption) {
        return window[DASHBOARD_API].storageSvc.getData(dataOption);
    };
    /**
     * @param {?=} reload
     * @return {?}
     */
    WidgetDevkitService.prototype.getUserInfo = /**
     * @param {?=} reload
     * @return {?}
     */
    function (reload) {
        if (reload === void 0) { reload = false; }
        return window[DASHBOARD_API].storageSvc.getUserInfo(reload);
    };
    /**
     * @param {?=} reload
     * @return {?}
     */
    WidgetDevkitService.prototype.getUserAvatar = /**
     * @param {?=} reload
     * @return {?}
     */
    function (reload) {
        if (reload === void 0) { reload = false; }
        return window[DASHBOARD_API].storageSvc.getUserAvatar(reload);
    };
    /**
     * @deprecated 应用另外两个 jump 方法
     * 联查跳转，直接把配置属性的值传进来就行。配成“无”就不跳转。
     * @param jumpProperty 跳转的配置属性的值
     * @param dataItem 当前跳转对应的数据行。如果是全局跳转，就传入第一行？
     */
    /**
     * @deprecated 应用另外两个 jump 方法
     * 联查跳转，直接把配置属性的值传进来就行。配成“无”就不跳转。
     * @param {?} jumpProperty 跳转的配置属性的值
     * @param {?=} dataItem 当前跳转对应的数据行。如果是全局跳转，就传入第一行？
     * @return {?}
     */
    WidgetDevkitService.prototype.jump = /**
     * @deprecated 应用另外两个 jump 方法
     * 联查跳转，直接把配置属性的值传进来就行。配成“无”就不跳转。
     * @param {?} jumpProperty 跳转的配置属性的值
     * @param {?=} dataItem 当前跳转对应的数据行。如果是全局跳转，就传入第一行？
     * @return {?}
     */
    function (jumpProperty, dataItem) {
        var type = jumpProperty.type, funcId = jumpProperty.funcId, params = jumpProperty.params;
        /** @type {?} */
        var queryParamsArray = Array.isArray(params)
            ? params.map((/**
             * @param {?} param
             * @return {?}
             */
            function (param) { return [param.key, (param.valueType === 'fixedValue'
                    ? param.fixedValue
                    : (dataItem
                        ? dataItem[param.fieldName.name]
                        : undefined))]; }))
            : undefined;
        switch (type) {
            case JumpTypes.None:
                return;
            case JumpTypes.Func:
                this.openMenu(funcId, queryParamsArray);
                break;
            case JumpTypes.ChartTable:
                this.openMenu(CHART_TABLE_FUNC_ID, queryParamsArray);
                break;
        }
    };
    /**
     * @param {?} dataJumpConfig
     * @param {?} dataItem
     * @return {?}
     */
    WidgetDevkitService.prototype.jumpWithData = /**
     * @param {?} dataJumpConfig
     * @param {?} dataItem
     * @return {?}
     */
    function (dataJumpConfig, dataItem) {
        var jumpType = dataJumpConfig.jumpType, funcIdSource = dataJumpConfig.funcIdSource, funcIdDataField = dataJumpConfig.funcIdDataField, funcId = dataJumpConfig.funcId, funcParams = dataJumpConfig.funcParams, url = dataJumpConfig.url, urlParams = dataJumpConfig.urlParams, queryParams = dataJumpConfig.queryParams;
        /** @type {?} */
        var funcParamsArray = Array.isArray(funcParams)
            ? funcParams.map((/**
             * @param {?} funcParam
             * @return {?}
             */
            function (funcParam) { return [funcParam.key, (funcParam.valueType === 'fixedValue'
                    ? funcParam.fixedValue
                    : (dataItem
                        ? dataItem[funcParam.fieldName.name]
                        : undefined))]; }))
            : undefined;
        switch (jumpType) {
            case JumpTypes.None:
                return;
            case JumpTypes.Func:
                /** @type {?} */
                var resultFuncId = (!funcIdSource || funcIdSource === 'fixed')
                    ? funcId
                    : dataItem[funcIdDataField.name];
                if (resultFuncId)
                    this.openMenu(resultFuncId, funcParamsArray);
                break;
            case JumpTypes.ChartTable:
                this.openMenu(CHART_TABLE_FUNC_ID, funcParamsArray);
                break;
            case JumpTypes.NewBrowserTab:
                // 拼 url
                /** @type {?} */
                var finalUrl = url
                // + urlParams
                ;
                // + urlParams
                if (urlParams && urlParams.length > 0) {
                    /** @type {?} */
                    var urlParamPart = urlParams.map((/**
                     * @param {?} urlParam
                     * @return {?}
                     */
                    function (urlParam) {
                        var valueType = urlParam.valueType, fixedValue = urlParam.fixedValue, fieldName = urlParam.fieldName;
                        return valueType === 'fixedValue' ? fixedValue : dataItem[fieldName.name];
                    })).join('/');
                    finalUrl += url.endsWith('/') ? '' : '/';
                    finalUrl += urlParamPart;
                }
                // + queryParams
                if (queryParams && queryParams.length > 0) {
                    /** @type {?} */
                    var queryParamPart = queryParams.map((/**
                     * @param {?} queryParam
                     * @return {?}
                     */
                    function (queryParam) {
                        var key = queryParam.key, valueType = queryParam.valueType, fixedValue = queryParam.fixedValue, fieldName = queryParam.fieldName;
                        return key + "=" + (valueType === 'fixedValue' ? fixedValue : dataItem[fieldName.name]);
                    })).join('&');
                    finalUrl += '?' + queryParamPart;
                }
                // 打开
                window.open(finalUrl, '_blank');
        }
    };
    /**
     * @param {?} datalessJumpConfig
     * @return {?}
     */
    WidgetDevkitService.prototype.jumpWithoutData = /**
     * @param {?} datalessJumpConfig
     * @return {?}
     */
    function (datalessJumpConfig) {
        var jumpType = datalessJumpConfig.jumpType, funcId = datalessJumpConfig.funcId, funcParams = datalessJumpConfig.funcParams, url = datalessJumpConfig.url;
        /** @type {?} */
        var funcParamsArray = Array.isArray(funcParams)
            ? funcParams.map((/**
             * @param {?} funcParam
             * @return {?}
             */
            function (funcParam) { return [funcParam.key, funcParam.value]; }))
            : undefined;
        switch (jumpType) {
            case JumpTypes.None:
                return;
            case JumpTypes.Func:
                this.openMenu(funcId, funcParamsArray);
                break;
            case JumpTypes.ChartTable:
                this.openMenu(CHART_TABLE_FUNC_ID, funcParamsArray);
                break;
            case JumpTypes.NewBrowserTab:
                window.open(url, '_blank');
        }
    };
    WidgetDevkitService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    WidgetDevkitService.ctorParameters = function () { return [
        { type: BsModalService }
    ]; };
    return WidgetDevkitService;
}());
export { WidgetDevkitService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    WidgetDevkitService.prototype.modalService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LWRldmtpdC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcHdpZGdldC93aWRnZXQtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3dpZGdldC1kZXZraXQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFnQixNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBc0MsU0FBUyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDckYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sUUFBUSxDQUFDOzs7Ozs7O0FBTzdDLE1BQU0sS0FBTyxhQUFhLEdBQUcsY0FBYztBQUUzQztJQUtFLDZCQUNVLFlBQTRCO1FBQTVCLGlCQUFZLEdBQVosWUFBWSxDQUFnQjtJQUdsQyxDQUFDOzs7Ozs7SUFFTCx1Q0FBUzs7Ozs7SUFBVCxVQUFXLE9BQVksRUFBRSxNQUFxQjtRQUM1QyxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQTtJQUNoRCxDQUFDOzs7Ozs7SUFFRCxzQ0FBUTs7Ozs7SUFBUixVQUFVLE1BQWMsRUFBRSxnQkFBNkI7UUFDckQsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQTtJQUMxRCxDQUFDOzs7OztJQUNELHFDQUFPOzs7O0lBQVAsVUFBUyxLQUFhO1FBQ3BCLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDdEMsQ0FBQztJQUNEOztPQUVHOzs7Ozs7O0lBQ0gseUNBQVc7Ozs7OztJQUFYLFVBQWEsT0FBZSxFQUFFLE9BQVE7UUFDcEMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFF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Z0MsRUFBQztZQUMvRCxDQUFDLENBQUMsU0FBUztRQUNiLFFBQVEsUUFBUSxFQUFFO1lBQ2hCLEtBQUssU0FBUyxDQUFDLElBQUk7Z0JBQ2pCLE9BQU07WUFDUixLQUFLLFNBQVMsQ0FBQyxJQUFJO2dCQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxlQUFlLENBQUMsQ0FBQTtnQkFDdEMsTUFBSztZQUNQLEtBQUssU0FBUyxDQUFDLFVBQVU7Z0JBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsbUJBQW1CLEVBQUUsZUFBZSxDQUFDLENBQUE7Z0JBQ25ELE1BQUs7WUFDUCxLQUFLLFNBQVMsQ0FBQyxhQUFhO2dCQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQTtTQUM3QjtJQUNILENBQUM7O2dCQXBKRixVQUFVOzs7O2dCQVhGLGNBQWM7O0lBaUt2QiwwQkFBQztDQUFBLEFBdEpELElBc0pDO1NBbkpZLG1CQUFtQjs7Ozs7O0lBRzVCLDJDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlLCBNb2RhbE9wdGlvbnMgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IERhdGFKdW1wQ29uZmlnLCBEYXRhbGVzc0p1bXBDb25maWcsIEp1bXBUeXBlcyB9IGZyb20gJy4vcHJlc2V0L3ByZXNldC5qdW1wJztcbmltcG9ydCB7IENIQVJUX1RBQkxFX0ZVTkNfSUQgfSBmcm9tICcuL3V0aWwnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkXG4gKiDkuLrkuoYgd2lkZ2V0LWRldmtpdCDnmoTlhbzlrrnogIzmmoLml7bkv53nlZnjgILkuI3lh4blho3nlKjkuobjgIJcbiAqIOWFg+mDqOS7tuW6lOivpeebtOaOpeeUqCBAZ3Nwd2lkZ2V0L3V0aWzjgIJcbiAqL1xuZXhwb3J0IGNvbnN0IERBU0hCT0FSRF9BUEkgPSAnRGFzaGJvYXJkQXBpJ1xuXG5ASW5qZWN0YWJsZShcbiAgLy8geyBwcm92aWRlZEluOiAncm9vdCcgfVxuKVxuZXhwb3J0IGNsYXNzIFdpZGdldERldmtpdFNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yIChcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2UsXG4gICAgLy8gcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50XG4gICAgLy8gcHJpdmF0ZSBzdG9yYWdlU3ZjOiBTdG9yYWdlU2VydmljZVxuICApIHsgfVxuXG4gIG9wZW5Nb2RhbCAoY29udGVudDogYW55LCBjb25maWc/OiBNb2RhbE9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RhbFNlcnZpY2Uuc2hvdyhjb250ZW50LCBjb25maWcpXG4gIH1cblxuICBvcGVuTWVudSAoZnVuY0lkOiBzdHJpbmcsIHF1ZXJ5UGFyYW1zQXJyYXk/OiBzdHJpbmdbXVtdKSB7XG4gICAgd2luZG93W0RBU0hCT0FSRF9BUEldLm9wZW5NZW51KGZ1bmNJZCwgcXVlcnlQYXJhbXNBcnJheSlcbiAgfVxuICBvcGVuQXBwIChhcHBJZDogc3RyaW5nKSB7XG4gICAgd2luZG93W0RBU0hCT0FSRF9BUEldLm9wZW5BcHAoYXBwSWQpXG4gIH1cbiAgLyoqXG4gICAqIG9wdGlvbnMg5Y+C6ICDIGh0dHBzOi8vbmcuYW50LmRlc2lnbi9jb21wb25lbnRzL21lc3NhZ2UvemhcbiAgICovXG4gIG9wZW5JbmZvTXNnIChjb250ZW50OiBzdHJpbmcsIG9wdGlvbnM/KSB7XG4gICAgd2luZG93W0RBU0hCT0FSRF9BUEldLm1lc3NhZ2VTdmMuaW5mbyhjb250ZW50LCBvcHRpb25zKVxuICB9XG4gIC8qKlxuICAgKiBvcHRpb25zIOWPguiAgyBodHRwczovL25nLmFudC5kZXNpZ24vY29tcG9uZW50cy9tZXNzYWdlL3poXG4gICAqL1xuICBvcGVuU3VjY2Vzc01zZyAoY29udGVudDogc3RyaW5nLCBvcHRpb25zPykge1xuICAgIHdpbmRvd1tEQVNIQk9BUkRfQVBJXS5tZXNzYWdlU3ZjLnN1Y2Nlc3MoY29udGVudCwgb3B0aW9ucylcbiAgfVxuICAvKipcbiAgICogb3B0aW9ucyDlj4LogIMgaHR0cHM6Ly9uZy5hbnQuZGVzaWduL2NvbXBvbmVudHMvbWVzc2FnZS96aFxuICAgKi9cbiAgb3Blbldhcm5pbmdNc2cgKGNvbnRlbnQ6IHN0cmluZywgb3B0aW9ucz8pIHtcbiAgICB3aW5kb3dbREFTSEJPQVJEX0FQSV0ubWVzc2FnZVN2Yy53YXJuaW5nKGNvbnRlbnQsIG9wdGlvbnMpXG4gIH1cbiAgLyoqXG4gICAqIG9wdGlvbnMg5Y+C6ICDIGh0dHBzOi8vbmcuYW50LmRlc2lnbi9jb21wb25lbnRzL21lc3NhZ2UvemhcbiAgICovXG4gIG9wZW5FcnJvck1zZyAoY29udGVudDogc3RyaW5nLCBvcHRpb25zPykge1xuICAgIHdpbmRvd1tEQVNIQk9BUkRfQVBJXS5tZXNzYWdlU3ZjLmVycm9yKGNvbnRlbnQsIG9wdGlvbnMpXG4gIH1cblxuICBnZXREYXRhIChkYXRhT3B0aW9uKSB7XG4gICAgcmV0dXJuIHdpbmRvd1tEQVNIQk9BUkRfQVBJXS5zdG9yYWdlU3ZjLmdldERhdGEoZGF0YU9wdGlvbilcbiAgfVxuICBnZXRVc2VySW5mbyAocmVsb2FkID0gZmFsc2UpIHtcbiAgICByZXR1cm4gd2luZG93W0RBU0hCT0FSRF9BUEldLnN0b3JhZ2VTdmMuZ2V0VXNlckluZm8ocmVsb2FkKVxuICB9XG4gIGdldFVzZXJBdmF0YXIgKHJlbG9hZCA9IGZhbHNlKSB7XG4gICAgcmV0dXJuIHdpbmRvd1tEQVNIQk9BUkRfQVBJXS5zdG9yYWdlU3ZjLmdldFVzZXJBdmF0YXIocmVsb2FkKVxuICB9XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCDlupTnlKjlj6blpJbkuKTkuKoganVtcCDmlrnms5VcbiAgICog6IGU5p+l6Lez6L2s77yM55u05o6l5oqK6YWN572u5bGe5oCn55qE5YC85Lyg6L+b5p2l5bCx6KGM44CC6YWN5oiQ4oCc5peg4oCd5bCx5LiN6Lez6L2s44CCXG4gICAqIEBwYXJhbSBqdW1wUHJvcGVydHkg6Lez6L2s55qE6YWN572u5bGe5oCn55qE5YC8XG4gICAqIEBwYXJhbSBkYXRhSXRlbSDlvZPliY3ot7Povazlr7nlupTnmoTmlbDmja7ooYzjgILlpoLmnpzmmK/lhajlsYDot7PovazvvIzlsLHkvKDlhaXnrKzkuIDooYzvvJ9cbiAgICovXG4gIGp1bXAgKGp1bXBQcm9wZXJ0eSwgZGF0YUl0ZW0/OiBhbnkpIHtcbiAgICBjb25zdCB7IHR5cGUsIGZ1bmNJZCwgcGFyYW1zIH0gPSBqdW1wUHJvcGVydHlcbiAgICBjb25zdCBxdWVyeVBhcmFtc0FycmF5ID0gQXJyYXkuaXNBcnJheShwYXJhbXMpXG4gICAgICA/IHBhcmFtcy5tYXAocGFyYW0gPT4gW3BhcmFtLmtleSwgKHBhcmFtLnZhbHVlVHlwZSA9PT0gJ2ZpeGVkVmFsdWUnXG4gICAgICAgID8gcGFyYW0uZml4ZWRWYWx1ZVxuICAgICAgICA6IChkYXRhSXRlbVxuICAgICAgICAgID8gZGF0YUl0ZW1bcGFyYW0uZmllbGROYW1lLm5hbWVdXG4gICAgICAgICAgOiB1bmRlZmluZWRcbiAgICAgICAgKVxuICAgICAgKV0pXG4gICAgICA6IHVuZGVmaW5lZFxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgY2FzZSBKdW1wVHlwZXMuTm9uZTpcbiAgICAgICAgcmV0dXJuXG4gICAgICBjYXNlIEp1bXBUeXBlcy5GdW5jOlxuICAgICAgICB0aGlzLm9wZW5NZW51KGZ1bmNJZCwgcXVlcnlQYXJhbXNBcnJheSlcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgSnVtcFR5cGVzLkNoYXJ0VGFibGU6XG4gICAgICAgIHRoaXMub3Blbk1lbnUoQ0hBUlRfVEFCTEVfRlVOQ19JRCwgcXVlcnlQYXJhbXNBcnJheSlcbiAgICAgICAgYnJlYWtcbiAgICB9XG4gIH1cbiAganVtcFdpdGhEYXRhIChkYXRhSnVtcENvbmZpZzogRGF0YUp1bXBDb25maWcsIGRhdGFJdGVtOiBhbnkpIHtcbiAgICBjb25zdCB7IGp1bXBUeXBlLCBmdW5jSWRTb3VyY2UsIGZ1bmNJZERhdGFGaWVsZCwgZnVuY0lkLCBmdW5jUGFyYW1zLCB1cmwsIHVybFBhcmFtcywgcXVlcnlQYXJhbXMgfSA9IGRhdGFKdW1wQ29uZmlnXG4gICAgY29uc3QgZnVuY1BhcmFtc0FycmF5ID0gQXJyYXkuaXNBcnJheShmdW5jUGFyYW1zKVxuICAgICAgPyBmdW5jUGFyYW1zLm1hcChmdW5jUGFyYW0gPT4gW2Z1bmNQYXJhbS5rZXksIChmdW5jUGFyYW0udmFsdWVUeXBlID09PSAnZml4ZWRWYWx1ZSdcbiAgICAgICAgPyBmdW5jUGFyYW0uZml4ZWRWYWx1ZVxuICAgICAgICA6IChkYXRhSXRlbVxuICAgICAgICAgID8gZGF0YUl0ZW1bZnVuY1BhcmFtLmZpZWxkTmFtZS5uYW1lXVxuICAgICAgICAgIDogdW5kZWZpbmVkXG4gICAgICAgIClcbiAgICAgICldKVxuICAgICAgOiB1bmRlZmluZWRcbiAgICBzd2l0Y2ggKGp1bXBUeXBlKSB7XG4gICAgICBjYXNlIEp1bXBUeXBlcy5Ob25lOlxuICAgICAgICByZXR1cm5cbiAgICAgIGNhc2UgSnVtcFR5cGVzLkZ1bmM6XG4gICAgICAgIGNvbnN0IHJlc3VsdEZ1bmNJZCA9XG4gICAgICAgICAgKCFmdW5jSWRTb3VyY2UgfHwgZnVuY0lkU291cmNlPT09J2ZpeGVkJylcbiAgICAgICAgICA/IGZ1bmNJZFxuICAgICAgICAgIDogZGF0YUl0ZW1bZnVuY0lkRGF0YUZpZWxkLm5hbWVdXG4gICAgICAgIGlmIChyZXN1bHRGdW5jSWQpIHRoaXMub3Blbk1lbnUocmVzdWx0RnVuY0lkLCBmdW5jUGFyYW1zQXJyYXkpXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlIEp1bXBUeXBlcy5DaGFydFRhYmxlOlxuICAgICAgICB0aGlzLm9wZW5NZW51KENIQVJUX1RBQkxFX0ZVTkNfSUQsIGZ1bmNQYXJhbXNBcnJheSlcbiAgICAgICAgYnJlYWtcbiAgICAgIGNhc2UgSnVtcFR5cGVzLk5ld0Jyb3dzZXJUYWI6XG4gICAgICAgIC8vIOaLvCB1cmxcbiAgICAgICAgbGV0IGZpbmFsVXJsID0gdXJsXG4gICAgICAgIC8vICsgdXJsUGFyYW1zXG4gICAgICAgIGlmICh1cmxQYXJhbXMgJiYgdXJsUGFyYW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBjb25zdCB1cmxQYXJhbVBhcnQgPSB1cmxQYXJhbXMubWFwKHVybFBhcmFtID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgdmFsdWVUeXBlLCBmaXhlZFZhbHVlLCBmaWVsZE5hbWUgfSA9IHVybFBhcmFtXG4gICAgICAgICAgICByZXR1cm4gdmFsdWVUeXBlID09PSAnZml4ZWRWYWx1ZScgPyBmaXhlZFZhbHVlIDogZGF0YUl0ZW1bZmllbGROYW1lLm5hbWVdXG4gICAgICAgICAgfSkuam9pbignLycpXG4gICAgICAgICAgZmluYWxVcmwgKz0gdXJsLmVuZHNXaXRoKCcvJykgPyAnJyA6ICcvJ1xuICAgICAgICAgIGZpbmFsVXJsICs9IHVybFBhcmFtUGFydFxuICAgICAgICB9XG4gICAgICAgIC8vICsgcXVlcnlQYXJhbXNcbiAgICAgICAgaWYgKHF1ZXJ5UGFyYW1zICYmIHF1ZXJ5UGFyYW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBjb25zdCBxdWVyeVBhcmFtUGFydCA9IHF1ZXJ5UGFyYW1zLm1hcChxdWVyeVBhcmFtID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsga2V5LCB2YWx1ZVR5cGUsIGZpeGVkVmFsdWUsIGZpZWxkTmFtZSB9ID0gcXVlcnlQYXJhbVxuICAgICAgICAgICAgcmV0dXJuIGAke2tleX09JHt2YWx1ZVR5cGUgPT09ICdmaXhlZFZhbHVlJyA/IGZpeGVkVmFsdWUgOiBkYXRhSXRlbVtmaWVsZE5hbWUubmFtZV19YFxuICAgICAgICAgIH0pLmpvaW4oJyYnKVxuICAgICAgICAgIGZpbmFsVXJsICs9ICc/JyArIHF1ZXJ5UGFyYW1QYXJ0XG4gICAgICAgIH1cbiAgICAgICAgLy8g5omT5byAXG4gICAgICAgIHdpbmRvdy5vcGVuKGZpbmFsVXJsLCAnX2JsYW5rJylcbiAgICB9XG4gIH1cbiAganVtcFdpdGhvdXREYXRhIChkYXRhbGVzc0p1bXBDb25maWc6IERhdGFsZXNzSnVtcENvbmZpZykge1xuICAgIGNvbnN0IHsganVtcFR5cGUsIGZ1bmNJZCwgZnVuY1BhcmFtcywgdXJsIH0gPSBkYXRhbGVzc0p1bXBDb25maWdcbiAgICBjb25zdCBmdW5jUGFyYW1zQXJyYXkgPSBBcnJheS5pc0FycmF5KGZ1bmNQYXJhbXMpXG4gICAgICA/IGZ1bmNQYXJhbXMubWFwKGZ1bmNQYXJhbSA9PiBbZnVuY1BhcmFtLmtleSwgZnVuY1BhcmFtLnZhbHVlXSlcbiAgICAgIDogdW5kZWZpbmVkXG4gICAgc3dpdGNoIChqdW1wVHlwZSkge1xuICAgICAgY2FzZSBKdW1wVHlwZXMuTm9uZTpcbiAgICAgICAgcmV0dXJuXG4gICAgICBjYXNlIEp1bXBUeXBlcy5GdW5jOlxuICAgICAgICB0aGlzLm9wZW5NZW51KGZ1bmNJZCwgZnVuY1BhcmFtc0FycmF5KVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSBKdW1wVHlwZXMuQ2hhcnRUYWJsZTpcbiAgICAgICAgdGhpcy5vcGVuTWVudShDSEFSVF9UQUJMRV9GVU5DX0lELCBmdW5jUGFyYW1zQXJyYXkpXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlIEp1bXBUeXBlcy5OZXdCcm93c2VyVGFiOlxuICAgICAgICB3aW5kb3cub3Blbih1cmwsICdfYmxhbmsnKVxuICAgIH1cbiAgfVxuXG59XG4iXX0=