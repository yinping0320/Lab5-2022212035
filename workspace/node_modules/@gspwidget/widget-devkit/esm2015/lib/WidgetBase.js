/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// import { datalessJumpOption, DatalessJumpConfig, JumpTypes } from './presets';
import { Property } from './widget-registry/widget-property.decorator';
/**
 * @abstract
 */
export class WidgetBase {
    /**
     * 因为是父类构造函数所以无法依赖注入, 也没法传入参数;
     * compInstance.field = xxx 的方式又发生在构造函数后而不太好,
     * 所以考虑此父类不提供成员属性, 而通过依赖注入, 在子组件自取.
     */
    constructor() {
        this.title = 'untitled';
        /**
         * @deprecated 是否使用外部数据源。是的话，wc 就拿它的 portlet id 请求数据去。应改为 dataEngine 写法。
         */
        this.useDataEngine = false;
        if (this.widgetName == null)
            console.error(`元部件 ${this.constructor.name} 未添加 @Widget({ name: <name>})`);
    }
    /**
     * 元部件容器大小变化事件，参数 width 为容器宽度，单位 px。
     * 可重写此方法以处理复杂的响应式样式。
     * @param {?} width
     * @param {?} height
     * @return {?}
     */
    onResized(width, height) { }
    /**
     * @param {?} propName
     * @param {?} value
     * @return {?}
     */
    onPropertyChange(propName, value) { }
    /**
     * @deprecated
     * 请用 this.dataService.loadData() 代替
     * @param {?} data 获得的数据
     * @return {?}
     */
    onGetData(data) { }
}
tslib_1.__decorate([
    Property({
        category: '公共属性',
        displayName: '部件标题'
    }),
    tslib_1.__metadata("design:type", Object)
], WidgetBase.prototype, "title", void 0);
if (false) {
    /** @type {?} */
    WidgetBase.prototype.title;
    /**
     * 编译时将 \@Widget 中的 name 赋值给 widgetName, 构造器中会检查是否有值，没有就报错
     * @type {?}
     */
    WidgetBase.prototype.widgetName;
    /**
     * @deprecated 当前部件 id
     * @type {?}
     */
    WidgetBase.prototype.portletId;
    /**
     * @deprecated 当前部件实例 id
     * @type {?}
     */
    WidgetBase.prototype.id;
    /**
     * @deprecated 是否使用外部数据源。是的话，wc 就拿它的 portlet id 请求数据去。应改为 dataEngine 写法。
     * @type {?}
     */
    WidgetBase.prototype.useDataEngine;
    /**
     * @deprecated
     * assets 文件路径必需加上这个 base 前缀。注意在构造函数或之前使用时其值会为 undefined，
     * 因为实例化完成后，widget-container 才会给它赋正确的值。
     * @type {?}
     */
    WidgetBase.prototype.assetsBaseUrl;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2lkZ2V0QmFzZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3B3aWRnZXQvd2lkZ2V0LWRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9XaWRnZXRCYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQzs7OztBQUV2RSxNQUFNLE9BQWdCLFVBQVU7Ozs7OztJQTBDOUI7UUFyQ0csVUFBSyxHQUFHLFVBQVUsQ0FBQzs7OztRQXdCdEIsa0JBQWEsR0FBRyxLQUFLLENBQUE7UUFjbkIsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUk7WUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLCtCQUErQixDQUFDLENBQUM7SUFDMUcsQ0FBQzs7Ozs7Ozs7SUFNRCxTQUFTLENBQUUsS0FBYSxFQUFFLE1BQWMsSUFBVSxDQUFDOzs7Ozs7SUFFbkQsZ0JBQWdCLENBQUUsUUFBZ0IsRUFBRSxLQUFLLElBQVUsQ0FBQzs7Ozs7OztJQU9wRCxTQUFTLENBQUUsSUFBVyxJQUFJLENBQUM7Q0FFNUI7QUF4REk7SUFIRixRQUFRLENBQUM7UUFDUixRQUFRLEVBQUUsTUFBTTtRQUNoQixXQUFXLEVBQUUsTUFBTTtLQUNwQixDQUFDOzt5Q0FBb0I7OztJQUh0QiwyQkFHc0I7Ozs7O0lBZ0J0QixnQ0FBVzs7Ozs7SUFJWCwrQkFBaUI7Ozs7O0lBRWpCLHdCQUFVOzs7OztJQUVWLG1DQUFxQjs7Ozs7OztJQU1yQixtQ0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBkYXRhbGVzc0p1bXBPcHRpb24sIERhdGFsZXNzSnVtcENvbmZpZywgSnVtcFR5cGVzIH0gZnJvbSAnLi9wcmVzZXRzJztcbmltcG9ydCB7IFByb3BlcnR5IH0gZnJvbSAnLi93aWRnZXQtcmVnaXN0cnkvd2lkZ2V0LXByb3BlcnR5LmRlY29yYXRvcic7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBXaWRnZXRCYXNlIHtcblxuICBAUHJvcGVydHkoe1xuICAgIGNhdGVnb3J5OiAn5YWs5YWx5bGe5oCnJyxcbiAgICBkaXNwbGF5TmFtZTogJ+mDqOS7tuagh+mimCdcbiAgfSkgdGl0bGUgPSAndW50aXRsZWQnO1xuXG4gIC8vIEBQcm9wZXJ0eSh7XG4gIC8vICAgLi4uZGF0YWxlc3NKdW1wT3B0aW9uLFxuICAvLyAgIGRpc3BsYXlOYW1lOiAndG9wUmlnaHRKdW1wJ1xuICAvLyB9KSBnbG9iYWxKdW1wQ29uZmlnOiBEYXRhbGVzc0p1bXBDb25maWcgPSB7XG4gIC8vICAganVtcFR5cGU6IEp1bXBUeXBlcy5Ob25lXG4gIC8vIH1cblxuICAvKiogQGRlcHJlY2F0ZWQgKi9cbiAgLy8gaWNvbiA9ICcnXG5cbiAgLyoqIOeVmee7meetm+mAieinpuWPkSBsb2FkIGRhdGHvvIzlhYPpg6jku7blj6/ku6Xop6blj5HvvIzlubbkvKDlhaXpop3lpJblj4LmlbDvvIzkvYblrp7pmYUgbG9hZCDnlLEgd2Mg5p2l5YGa44CC5Zug5Li6IHdjIOefpemBkyBpZOOAgiAqL1xuICAvLyBAT3V0cHV0KCkgdHJpZ2dlckxvYWREYXRhID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIC8qKiDnvJbor5Hml7blsIYgQFdpZGdldCDkuK3nmoQgbmFtZSDotYvlgLznu5kgd2lkZ2V0TmFtZSwg5p6E6YCg5Zmo5Lit5Lya5qOA5p+l5piv5ZCm5pyJ5YC877yM5rKh5pyJ5bCx5oql6ZSZICovXG4gIHdpZGdldE5hbWU7XG5cbiAgLy8gVE9ETzog5bey5bqf5byD5pa55qGILCDku6XkuIvkuLrov4fmuKHmlrnmoYjku6XlhbzlrrnogIHlhpnms5XlhYPpg6jku7YsIOWQjuacn+Wwhuenu+mZpFxuICAvKiogQGRlcHJlY2F0ZWQg5b2T5YmN6YOo5Lu2IGlkICovXG4gIHBvcnRsZXRJZDogc3RyaW5nXG4gIC8qKiBAZGVwcmVjYXRlZCDlvZPliY3pg6jku7blrp7kvosgaWQgKi9cbiAgaWQ6IHN0cmluZ1xuICAvKiogQGRlcHJlY2F0ZWQg5piv5ZCm5L2/55So5aSW6YOo5pWw5o2u5rqQ44CC5piv55qE6K+d77yMd2Mg5bCx5ou/5a6D55qEIHBvcnRsZXQgaWQg6K+35rGC5pWw5o2u5Y6744CC5bqU5pS55Li6IGRhdGFFbmdpbmUg5YaZ5rOV44CCICovXG4gIHVzZURhdGFFbmdpbmUgPSBmYWxzZVxuICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICogYXNzZXRzIOaWh+S7tui3r+W+hOW/hemcgOWKoOS4iui/meS4qiBiYXNlIOWJjee8gOOAguazqOaEj+WcqOaehOmAoOWHveaVsOaIluS5i+WJjeS9v+eUqOaXtuWFtuWAvOS8muS4uiB1bmRlZmluZWTvvIxcbiAgICog5Zug5Li65a6e5L6L5YyW5a6M5oiQ5ZCO77yMd2lkZ2V0LWNvbnRhaW5lciDmiY3kvJrnu5nlroPotYvmraPnoa7nmoTlgLzjgIJcbiAgICovXG4gIGFzc2V0c0Jhc2VVcmw6IHN0cmluZ1xuXG4gIC8qKlxuICAgKiDlm6DkuLrmmK/niLbnsbvmnoTpgKDlh73mlbDmiYDku6Xml6Dms5Xkvp3otZbms6jlhaUsIOS5n+ayoeazleS8oOWFpeWPguaVsDtcbiAgICogY29tcEluc3RhbmNlLmZpZWxkID0geHh4IOeahOaWueW8j+WPiOWPkeeUn+WcqOaehOmAoOWHveaVsOWQjuiAjOS4jeWkquWlvSxcbiAgICog5omA5Lul6ICD6JmR5q2k54i257G75LiN5o+Q5L6b5oiQ5ZGY5bGe5oCnLCDogIzpgJrov4fkvp3otZbms6jlhaUsIOWcqOWtkOe7hOS7tuiHquWPli5cbiAgICovXG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICBpZiAodGhpcy53aWRnZXROYW1lID09IG51bGwpIGNvbnNvbGUuZXJyb3IoYOWFg+mDqOS7tiAke3RoaXMuY29uc3RydWN0b3IubmFtZX0g5pyq5re75YqgIEBXaWRnZXQoeyBuYW1lOiA8bmFtZT59KWApO1xuICB9XG5cbiAgLyoqXG4gICAqIOWFg+mDqOS7tuWuueWZqOWkp+Wwj+WPmOWMluS6i+S7tu+8jOWPguaVsCB3aWR0aCDkuLrlrrnlmajlrr3luqbvvIzljZXkvY0gcHjjgIJcbiAgICog5Y+v6YeN5YaZ5q2k5pa55rOV5Lul5aSE55CG5aSN5p2C55qE5ZON5bqU5byP5qC35byP44CCXG4gICAqL1xuICBvblJlc2l6ZWQgKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKTogdm9pZCB7IH1cblxuICBvblByb3BlcnR5Q2hhbmdlIChwcm9wTmFtZTogc3RyaW5nLCB2YWx1ZSk6IHZvaWQgeyB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqIOivt+eUqCB0aGlzLmRhdGFTZXJ2aWNlLmxvYWREYXRhKCkg5Luj5pu/XG4gICAqIEBwYXJhbSBkYXRhIOiOt+W+l+eahOaVsOaNrlxuICAgKi9cbiAgb25HZXREYXRhIChkYXRhOiBhbnlbXSkgeyB9XG5cbn1cbiJdfQ==