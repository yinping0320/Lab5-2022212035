/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef, ViewEncapsulation } from '@angular/core';
import { JumpTypes } from '../preset/preset.jump';
import { WidgetDevkitService } from '../widget-devkit.service';
export class WidgetTitleBarComponent {
    /**
     * @param {?} devkitSvc
     */
    constructor(devkitSvc) {
        this.devkitSvc = devkitSvc;
        this.icon = '';
        /**
         * 标题
         */
        this.showTitle = true;
        this.title = '';
        /**
         * 数字
         */
        this.showNumber = false;
        this.number = 0;
        /**
         * 设置按钮
         */
        this.showSetting = false;
        this.clickSetting = new EventEmitter();
        /**
         * 刷新按钮
         */
        this.showRefresh = false;
        this.clickRefresh = new EventEmitter();
        this.JumpTypes = JumpTypes;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    handleClickJump() {
        this.devkitSvc.jumpWithoutData(this.jumpConfig);
    }
}
WidgetTitleBarComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-widget-title-bar',
                template: "\n<div class=\"widget-title-bar d-flex\">\n  <!-- left -->\n  <div class=\"left align-items-center\">\n    <i *ngIf=\"icon!=''\" class=\"material-icons\">{{icon}}</i>\n    <div *ngIf=\"showTitle\" class=\"title\">{{title}}</div>\n    <div *ngIf=\"showNumber\" class=\"number\">{{number}}</div>\n    <ng-container *ngTemplateOutlet=\"leftTemplate\"></ng-container>\n  </div>\n  <!-- right -->\n  <div class=\"right\">\n    <ng-container *ngTemplateOutlet=\"rightTemplate\"></ng-container>\n    <div class=\"tool-wrap d-flex\" [title]=\"(settingTitle || '') | translate\">\n      <img\n        class=\"setting\"\n        *ngIf=\"showSetting\"\n        (click)=\"clickSetting.emit()\"\n        src=\"assets/img/setting.svg\"\n        [alt]=\"settingTitle\">\n    </div>\n    <div\n      class=\"tool-wrap d-flex\"\n      *ngIf=\"showRefresh\"\n      (click)=\"clickRefresh.emit()\">\n      <i class=\"icon-refresh material-icons\" style=\"font-size: 20px;\">refresh</i>\n    </div>\n    <div\n      *ngIf=\"jumpConfig && jumpConfig.jumpType!==JumpTypes.None\"\n      (click)=\"handleClickJump()\"\n      class=\"tool-wrap d-flex\">\n      <i class=\"material-icons\">chevron_right</i>\n    </div>\n  </div>\n</div>",
                encapsulation: ViewEncapsulation.None,
                styles: ["@charset \"UTF-8\";.widget-title-bar{display:flex;padding:12px 20px 10px}.widget-title-bar .left{flex:1 1 auto;display:flex}.widget-title-bar .left .material-icons{font-size:18px;margin-right:8px;color:#3794ff;padding-top:1px}.widget-title-bar .left .title{font-weight:700;font-size:15px}.widget-title-bar .left .number{font-size:15px;margin-left:10px}.widget-title-bar .right{flex:1 1 auto;display:flex;justify-content:flex-end;align-items:center}.widget-title-bar .right .widget-select{margin-left:5px}.widget-title-bar .right .setting{width:16px;height:16px;transition:.3s;opacity:1!important}.widget-title-bar .right .setting:hover{transform:rotate(60deg)}.widget-title-bar .right .tool-wrap{width:20px;margin-left:10px;font-size:14px;color:#000;transition:.3s;cursor:pointer;opacity:.2}.widget-title-bar .right .tool-wrap:hover{opacity:.4}"]
            }] }
];
/** @nocollapse */
WidgetTitleBarComponent.ctorParameters = () => [
    { type: WidgetDevkitService }
];
WidgetTitleBarComponent.propDecorators = {
    icon: [{ type: Input }],
    showTitle: [{ type: Input }],
    title: [{ type: Input }],
    showNumber: [{ type: Input }],
    number: [{ type: Input }],
    showSetting: [{ type: Input }],
    settingTitle: [{ type: Input }],
    clickSetting: [{ type: Output }],
    showRefresh: [{ type: Input }],
    clickRefresh: [{ type: Output }],
    jumpConfig: [{ type: Input }],
    jumpProperty: [{ type: Input }],
    data: [{ type: Input }],
    leftTemplate: [{ type: ContentChild, args: ['leftTemplate',] }],
    rightTemplate: [{ type: ContentChild, args: ['rightTemplate',] }]
};
if (false) {
    /** @type {?} */
    WidgetTitleBarComponent.prototype.icon;
    /**
     * 标题
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.showTitle;
    /** @type {?} */
    WidgetTitleBarComponent.prototype.title;
    /**
     * 数字
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.showNumber;
    /** @type {?} */
    WidgetTitleBarComponent.prototype.number;
    /**
     * 设置按钮
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.showSetting;
    /** @type {?} */
    WidgetTitleBarComponent.prototype.settingTitle;
    /** @type {?} */
    WidgetTitleBarComponent.prototype.clickSetting;
    /**
     * 刷新按钮
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.showRefresh;
    /** @type {?} */
    WidgetTitleBarComponent.prototype.clickRefresh;
    /**
     * 是否启用跳转，开启后元部件配置中可配置全局联查
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.jumpConfig;
    /**
     * @deprecated 应改用 enableJump。全局联查配置
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.jumpProperty;
    /**
     * @deprecated 应改用 enableJump。为了跳转时能取到数据的第一行，用来拼接跳转路由参数。
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.data;
    /**
     * 传入模板
     * @type {?}
     */
    WidgetTitleBarComponent.prototype.leftTemplate;
    /** @type {?} */
    WidgetTitleBarComponent.prototype.rightTemplate;
    /** @type {?} */
    WidgetTitleBarComponent.prototype.JumpTypes;
    /**
     * @type {?}
     * @private
     */
    WidgetTitleBarComponent.prototype.devkitSvc;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LXRpdGxlLWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3Nwd2lkZ2V0L3dpZGdldC1kZXZraXQvIiwic291cmNlcyI6WyJsaWIvd2lkZ2V0LXRpdGxlLWJhci93aWRnZXQtdGl0bGUtYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQWMsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQzdELFdBQVcsRUFBRSxpQkFBaUIsRUFDL0IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFzQixTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQVEvRCxNQUFNLE9BQU8sdUJBQXVCOzs7O0lBOEJsQyxZQUNVLFNBQThCO1FBQTlCLGNBQVMsR0FBVCxTQUFTLENBQXFCO1FBN0IvQixTQUFJLEdBQUcsRUFBRSxDQUFBOzs7O1FBRVQsY0FBUyxHQUFHLElBQUksQ0FBQTtRQUNoQixVQUFLLEdBQUcsRUFBRSxDQUFBOzs7O1FBRVYsZUFBVSxHQUFHLEtBQUssQ0FBQTtRQUNsQixXQUFNLEdBQUcsQ0FBQyxDQUFBOzs7O1FBRVYsZ0JBQVcsR0FBRyxLQUFLLENBQUE7UUFFbEIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFBOzs7O1FBRXZDLGdCQUFXLEdBQUcsS0FBSyxDQUFBO1FBQ2xCLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQTtRQWFoRCxjQUFTLEdBQUcsU0FBUyxDQUFBO0lBSWpCLENBQUM7Ozs7SUFFTCxRQUFRLEtBQUssQ0FBQzs7OztJQUVkLGVBQWU7UUFDYixJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUE7SUFDakQsQ0FBQzs7O1lBNUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyx1c0NBQWdEO2dCQUVoRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDdEM7Ozs7WUFQUSxtQkFBbUI7OzttQkFVekIsS0FBSzt3QkFFTCxLQUFLO29CQUNMLEtBQUs7eUJBRUwsS0FBSztxQkFDTCxLQUFLOzBCQUVMLEtBQUs7MkJBQ0wsS0FBSzsyQkFDTCxNQUFNOzBCQUVOLEtBQUs7MkJBQ0wsTUFBTTt5QkFHTixLQUFLOzJCQUVMLEtBQUs7bUJBRUwsS0FBSzsyQkFHTCxZQUFZLFNBQUMsY0FBYzs0QkFDM0IsWUFBWSxTQUFDLGVBQWU7Ozs7SUF4QjdCLHVDQUFrQjs7Ozs7SUFFbEIsNENBQXlCOztJQUN6Qix3Q0FBbUI7Ozs7O0lBRW5CLDZDQUEyQjs7SUFDM0IseUNBQW1COzs7OztJQUVuQiw4Q0FBNEI7O0lBQzVCLCtDQUE2Qjs7SUFDN0IsK0NBQWdEOzs7OztJQUVoRCw4Q0FBNEI7O0lBQzVCLCtDQUFnRDs7Ozs7SUFHaEQsNkNBQXVDOzs7OztJQUV2QywrQ0FBcUI7Ozs7O0lBRXJCLHVDQUFvQjs7Ozs7SUFHcEIsK0NBQW1FOztJQUNuRSxnREFBcUU7O0lBRXJFLDRDQUFxQjs7Ozs7SUFHbkIsNENBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBDb250ZW50Q2hpbGQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LFxuICBUZW1wbGF0ZVJlZiwgVmlld0VuY2Fwc3VsYXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRhbGVzc0p1bXBDb25maWcsIEp1bXBUeXBlcyB9IGZyb20gJy4uL3ByZXNldC9wcmVzZXQuanVtcCc7XG5pbXBvcnQgeyBXaWRnZXREZXZraXRTZXJ2aWNlIH0gZnJvbSAnLi4vd2lkZ2V0LWRldmtpdC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLXdpZGdldC10aXRsZS1iYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vd2lkZ2V0LXRpdGxlLWJhci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3dpZGdldC10aXRsZS1iYXIuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBXaWRnZXRUaXRsZUJhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgaWNvbiA9ICcnXG4gIC8qKiDmoIfpopggKi9cbiAgQElucHV0KCkgc2hvd1RpdGxlID0gdHJ1ZVxuICBASW5wdXQoKSB0aXRsZSA9ICcnXG4gIC8qKiDmlbDlrZcgKi9cbiAgQElucHV0KCkgc2hvd051bWJlciA9IGZhbHNlXG4gIEBJbnB1dCgpIG51bWJlciA9IDBcbiAgLyoqIOiuvue9ruaMiemSriAqL1xuICBASW5wdXQoKSBzaG93U2V0dGluZyA9IGZhbHNlXG4gIEBJbnB1dCgpIHNldHRpbmdUaXRsZTogc3RyaW5nXG4gIEBPdXRwdXQoKSBjbGlja1NldHRpbmcgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKVxuICAvKiog5Yi35paw5oyJ6ZKuICovXG4gIEBJbnB1dCgpIHNob3dSZWZyZXNoID0gZmFsc2VcbiAgQE91dHB1dCgpIGNsaWNrUmVmcmVzaCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpXG5cbiAgLyoqIOaYr+WQpuWQr+eUqOi3s+i9rO+8jOW8gOWQr+WQjuWFg+mDqOS7tumFjee9ruS4reWPr+mFjee9ruWFqOWxgOiBlOafpSAqL1xuICBASW5wdXQoKSBqdW1wQ29uZmlnOiBEYXRhbGVzc0p1bXBDb25maWdcbiAgLyoqIEBkZXByZWNhdGVkIOW6lOaUueeUqCBlbmFibGVKdW1w44CC5YWo5bGA6IGU5p+l6YWN572uICovXG4gIEBJbnB1dCgpIGp1bXBQcm9wZXJ0eVxuICAvKiogQGRlcHJlY2F0ZWQg5bqU5pS555SoIGVuYWJsZUp1bXDjgILkuLrkuobot7Povazml7bog73lj5bliLDmlbDmja7nmoTnrKzkuIDooYzvvIznlKjmnaXmi7zmjqXot7Povazot6/nlLHlj4LmlbDjgIIgKi9cbiAgQElucHV0KCkgZGF0YTogYW55W11cblxuICAvKiog5Lyg5YWl5qih5p2/ICovXG4gIEBDb250ZW50Q2hpbGQoJ2xlZnRUZW1wbGF0ZScpIGxlZnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8RWxlbWVudFJlZj5cbiAgQENvbnRlbnRDaGlsZCgncmlnaHRUZW1wbGF0ZScpIHJpZ2h0VGVtcGxhdGU6IFRlbXBsYXRlUmVmPEVsZW1lbnRSZWY+XG5cbiAgSnVtcFR5cGVzID0gSnVtcFR5cGVzXG5cbiAgY29uc3RydWN0b3IgKFxuICAgIHByaXZhdGUgZGV2a2l0U3ZjOiBXaWRnZXREZXZraXRTZXJ2aWNlXG4gICkgeyB9XG5cbiAgbmdPbkluaXQgKCkge31cblxuICBoYW5kbGVDbGlja0p1bXAgKCkge1xuICAgIHRoaXMuZGV2a2l0U3ZjLmp1bXBXaXRob3V0RGF0YSh0aGlzLmp1bXBDb25maWcpXG4gIH1cblxufVxuIl19