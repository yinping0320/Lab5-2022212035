/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { FormControl } from '@angular/forms';
/**
 * @record
 * @template
 */
export function FilterOption() { }
if (false) {
    /** @type {?} */
    FilterOption.prototype.value;
    /** @type {?} */
    FilterOption.prototype.name;
}
export class WidgetTitleBarSelectComponent {
    constructor() {
        this.filterOptions = [];
        this.onFilterChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.filter = new FormControl(this.defaultFilterValue ? this.defaultFilterValue : this.filterOptions[0].value);
        this.filter.valueChanges.subscribe((/**
         * @param {?} newValue
         * @return {?}
         */
        newValue => {
            this.onFilterChange.emit(newValue);
        }));
    }
}
WidgetTitleBarSelectComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-widget-title-bar-select',
                template: "\n<select\n  [formControl]=\"filter\"\n  class=\"widget-select form-control\" >\n  <option *ngFor=\"let option of filterOptions\"\n    [value]=\"option.value\">{{option.name}}</option>\n</select>",
                styles: [".widget-select{font-size:12px;padding:0 5px;height:25px}"]
            }] }
];
/** @nocollapse */
WidgetTitleBarSelectComponent.ctorParameters = () => [];
WidgetTitleBarSelectComponent.propDecorators = {
    defaultFilterValue: [{ type: Input }],
    filterOptions: [{ type: Input }],
    onFilterChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    WidgetTitleBarSelectComponent.prototype.filter;
    /**
     * 若不设置，默认使用第一项 option
     * @type {?}
     */
    WidgetTitleBarSelectComponent.prototype.defaultFilterValue;
    /** @type {?} */
    WidgetTitleBarSelectComponent.prototype.filterOptions;
    /** @type {?} */
    WidgetTitleBarSelectComponent.prototype.onFilterChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LXRpdGxlLWJhci1zZWxlY3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcHdpZGdldC93aWRnZXQtZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3dpZGdldC10aXRsZS1iYXIvd2lkZ2V0LXRpdGxlLWJhci1zZWxlY3Qvd2lkZ2V0LXRpdGxlLWJhci1zZWxlY3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7QUFFN0Msa0NBR0M7OztJQUZDLDZCQUFXOztJQUNYLDRCQUFZOztBQVFkLE1BQU0sT0FBTyw2QkFBNkI7SUFReEM7UUFIUyxrQkFBYSxHQUFtQixFQUFFLENBQUE7UUFDakMsbUJBQWMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFBO0lBRWxDLENBQUM7Ozs7SUFFakIsUUFBUTtRQUNOLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUE7UUFFOUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsU0FBUzs7OztRQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQzVDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ3BDLENBQUMsRUFBQyxDQUFBO0lBQ0osQ0FBQzs7O1lBckJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QywrTUFBdUQ7O2FBRXhEOzs7OztpQ0FLRSxLQUFLOzRCQUNMLEtBQUs7NkJBQ0wsTUFBTTs7OztJQUxQLCtDQUFtQjs7Ozs7SUFHbkIsMkRBQWdDOztJQUNoQyxzREFBMkM7O0lBQzNDLHVEQUFrRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZpbHRlck9wdGlvbjw+IHtcbiAgdmFsdWU6IGFueSxcbiAgbmFtZTogc3RyaW5nXG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi13aWRnZXQtdGl0bGUtYmFyLXNlbGVjdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi93aWRnZXQtdGl0bGUtYmFyLXNlbGVjdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3dpZGdldC10aXRsZS1iYXItc2VsZWN0LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgV2lkZ2V0VGl0bGVCYXJTZWxlY3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBmaWx0ZXI6IEZvcm1Db250cm9sXG4gIFxuICAvKiog6Iul5LiN6K6+572u77yM6buY6K6k5L2/55So56ys5LiA6aG5IG9wdGlvbiAqL1xuICBASW5wdXQoKSBkZWZhdWx0RmlsdGVyVmFsdWU6IGFueVxuICBASW5wdXQoKSBmaWx0ZXJPcHRpb25zOiBGaWx0ZXJPcHRpb25bXSA9IFtdXG4gIEBPdXRwdXQoKSBvbkZpbHRlckNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpXG4gIFxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZmlsdGVyID0gbmV3IEZvcm1Db250cm9sKHRoaXMuZGVmYXVsdEZpbHRlclZhbHVlID8gdGhpcy5kZWZhdWx0RmlsdGVyVmFsdWUgOiB0aGlzLmZpbHRlck9wdGlvbnNbMF0udmFsdWUpXG5cbiAgICB0aGlzLmZpbHRlci52YWx1ZUNoYW5nZXMuc3Vic2NyaWJlKG5ld1ZhbHVlID0+IHtcbiAgICAgIHRoaXMub25GaWx0ZXJDaGFuZ2UuZW1pdChuZXdWYWx1ZSlcbiAgICB9KVxuICB9XG5cbn1cbiJdfQ==