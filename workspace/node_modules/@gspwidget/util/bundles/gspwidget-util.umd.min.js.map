{"version":3,"sources":["ng://@gspwidget/util/lib/util.service.ts","ng://@gspwidget/util/lib/util.component.ts","ng://@gspwidget/util/lib/rtf-util.service.ts","ng://@gspwidget/util/lib/trans.pipe.ts","ng://@gspwidget/util/lib/util.module.ts","ng://@gspwidget/util/lib/const.ts","ng://@gspwidget/util/lib/misc.ts","ng://@gspwidget/util/lib/igix-util.service.ts","node_modules/tslib/tslib.es6.js","ng://@gspwidget/util/lib/types/portlet.type.ts","ng://@gspwidget/util/lib/repositories/widget.repo.ts","ng://@gspwidget/util/lib/repositories/portlet.repo.ts","ng://@gspwidget/util/lib/utils/encryption.ts","ng://@gspwidget/util/lib/types/data.type.ts","ng://@gspwidget/util/lib/repositories/dataset.repo.ts","ng://@gspwidget/util/lib/repositories/datasrc.repo.ts","ng://@gspwidget/util/lib/types/common.type.ts","ng://@gspwidget/util/lib/repositories/igix.repo.ts","ng://@gspwidget/util/lib/utils/field-mapping.ts","ng://@gspwidget/util/lib/repositories/page.repo.ts","ng://@gspwidget/util/lib/types/page.type.ts","ng://@gspwidget/util/lib/types/widget.type.ts","ng://@gspwidget/util/lib/arr.ts","ng://@gspwidget/util/lib/colors.ts","ng://@gspwidget/util/lib/types/igix.type.ts"],"names":["UtilService","prototype","uploadFile","url","content","formData","FormData","Object","keys","forEach","key","append","JSON","stringify","this","http","post","responseType","Injectable","args","providedIn","HttpClient","UtilComponent","ngOnInit","Component","selector","template","WINDOW_RTF_KEY","RtfUtilService","openMenu","funcId","queryParamArray","tabId","isReload","gspframeworkService","rtf","func","appType","appId","appEntrance","queryStringParams","Map","closeMenu","close","openApp","openUserInfoMenu","window","frmEventSvc","frmEvent","sessionSvc","adapter","adatperSerice","session","translate","get","subscribe","txt","eventFire","active","code","src","sessionid","getUserSessionId","id","FuncName","closeCurRtfTab","route","_a","snapshot","queryParams","onRtfTabChangeToMe","condition","onRtfTabChangeToMe$","EventEmitter","curTabId","onRtfTabChange","e","pToTabId","pCurTabId","emit","TranslateService","onRtfTabChange$","funcSwitchEventRegistered","eventListener","TransPipe","ngOnDestroy","transform","query","_i","arguments","length","translations","currentLang","Pipe","name","UtilModule","NgModule","declarations","imports","TranslateModule","providers","exports","LS_LOAD_LOCAL_ASSET","IGIX_HOME_PATH","localStorage","getItem","BASE_URL","addBaseUrl","node","DATA_PREFIX","backendString2Json","original","result","replace","list2Tree","list","_b","parentIdKey","_c","rootParentIdValue","_d","idKey","_e","ifIgnore","_f","beforeProcess","_g","afterProcess","tree","filter","item","recurseAddChildren","nodes","layer","value","label","title","children","isLeaf","loadCss","href","eleId","allowRepeat","Array","from","document","querySelectorAll","some","link","themeLink","getElementById","head","getElementsByTagName","style","createElement","type","rel","appendChild","deepClone","obj","parse","getCurTheme","rawThemeKey","curLang","IgixUtilService","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","i","n","call","apply","Portlet","getSize","_getAxisSize","tslib_1.__extends","EppPortlet","size","widget","layout","grid","widgetId","_this","_super","i18nName","propValues","dataOption","dps","defaultSizeMap","rows","cols","minCols","minRows","maxCols","maxRows","BAPortlet","isBA","widgetUrls","GET_BY_ID","GET_USER_ALL","CREATE","EDIT","DELETE","GET_PORTLET","WIDGET_PREFIX","location","origin","convertWidget","logoImgUrl","previewImgUrl","baseUrl","WidgetRepo","getWidgets","pipe","map","data","getWidgetById","uploadWidget","util","editorWidget","deleteWidget","delete","findPortletByMeta","params","portletUrls","SAVE","GET_BY_MODULE_ID","DELETE_BY_ID","GET_PAGE","portletOps","GET_BY_PORTLET_ID","AES_SECRET_KEY","CRYPTO_CFG","PortletRepo","getPageByPortletId","portletId","getPortlets","portlets","convertPortlet","getPortletsByModuleId","moduleId","getPortletById","savePortlet","portlet","serverPortlet","convertPortletInverse","put","getPortletOps","savePortletOps","opIds","deletePortletById","CryptoJS","enc","Utf8","iv","mode","CBC","padding","pad","Pkcs7","error","encrypt","message","msg","AES","toString","decrypt","encryptedMsg","providerName","config","DataParam","ToDto","dp","camelCase","default","FromDto","dpDto","constantCase","datasetId","sortNo","isExpression","Dataset","toDto","dataset","datasrcId","datasrcName","creationTime","dataParams","datasourceId","datasourceName","dimensions","dataParamDto","fromDto","datasetDto","method","parameters","parsedConfig","measures","Count","Sum","Max","Min","Avg","Expression","Dimension","ComputedCol","expression","computeType","ComputedType","Agg","agg","dataSetId","resource","resourceId","aggregationType","aggType","columnConfigs","rowConfigs","filterConfigs","filters","computedExpressionConfigs","computedCols","aggDto","datasetName","dataSetName","DpValue","dpValue","dataParamId","dpId","Indicator","aggFn","RuntimeAggOption","runtimeAgg","indicators","ind","dimName","datasetUrls","IMPORT_QO","GET_ALL","GET_RAW_DIMS_BY_DATASET","GET_RAW_DATA_BY_DATASET","UPDATE","aggUrls","GET_BY_RESOURCE","dataResultSetUrls","GET_BY_AGG_ID","GET_BY_AGG","GET_BY_DATASET","DatasetRepo","getRawDimsByDataset","getRawColsNDataByDataset","getDatasets","datasetDtos","getDatasetById","saveDataset","importQO","ids","deleteDataset","getAggByPortletId","saveAgg","getAggResultByAgg","dpValues","body","aggDataDto","aggregation","dataParam","getResultByPortletId","headers","HttpHeaders","Content-Type","resourceType","datasrcUrls","TRY","GET_PARAMS_BY_PROVIDER_NAME","GET_ALL_PROVIDERS","DatasrcRepo","getDatasrcList","getDatasrcById","saveDatasrc","datasrc","deleteDatasrc","tryDatasrc","getProviders","getParamsByProviderName","Lang","igixUrls","bo","funcOperations","GET_BY_BO_ID","roleGroup","role","GET","userInfo","GET_ALL_WITH_INVOKE","langs","qoDataset","GET_ECP_BIZ_TREE","GET_DETAIL_BY_ID","GET_DETAIL_QUERY","ba","GET_ALL_PORTLETS","IgixRepo","getBOTree","Infinity","boList","getOpsByBOId","boId","getRoleGroupTree","roleGroups","getRolesByRoleGroupId","groupId","param","res","getAllRoles","getFuncTree12","funcTree12","of","getAllFuncs","funcs","parseInt","getQoDatasetDetailsByModuleId","entityFilter","FilterConditions","FilterField","Compare","Value","Relation","SortConditions","IsUsePagination","Pagination","PageIndex","PageSize","PageCount","TotalCount","returnValue","getQoDatasetDetailById","getUserInfo","reload","userInfoPromise","toPromise","getUserAvatar","userSetting","imgblob","getBAPortletsAll","getLangs","getLangsPromise","rtfLangs","rtfLang","resultMapping","fieldMapping","pageInfo","fieldMappingInverse","entityType","originKey","mapEntityFeilds","originEntity","inverse","mapping","mappedEntity","pageInfoUrls","GET_BY_ID_MANAGE","GET_BY_ID_PERSONAL","GET_ALL_MANAGE","GET_ALL_PERSONAL","GET_BY_ROLE","GET_PAGES_WITH_ROLE","SET_TO_ROLE_DEFAULT","DELETE_MANAGE","ADD","ADD_MANAGE","UPDATE_MANAGE","COPY","COPY_MANAGE","RESET_PAGE","SELECT_PAGE","pageRoles","GET_BY_PAGE_ID","PageRepo","getPagesManage","convertPageInfo","getPagesUser","getPagesByRole","roleId","getPagesWithRole","setRoleDefaultPage","pageId","success","getPageInfoById","isManage","savePageInfo","convertPageInfoInverse","deletePageInfo","deletePageInfoManage","copyPageInfo","resetPage","selectPage","tap","savePageRoles","roleIds","getPageRoles","instanceId","isBAPortlet","gridsterItem","PageConfig","AOT","DEV","JIT","ArrUtil","SwapByIndex","arr","j","tmp","Add","newItem","push","Up","indexOf","Down","Remove","splice","Unique","Set","PlThemeColors","SetColors","pure","gradient","SetPure","SetGradient","uuidv4","c","r","Math","random","appendScript","script","setArrayLengthTo","targetLength","fillItem","loadCommonStyleNTheme","curTheme","objectLiteralEqual","obj1","obj2","PAGE_DESIGNER_ID","PAGE_RUNTIME_ID","text","color","iconName","number","date","byte","boolean","unknown","Table","CroosTable","Products","Module","AppGroups","App"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  // TODO: ç§»èµ°\n  uploadFile (url: string, content: { [key: string]: File | any }) {\n    const formData = new FormData()\n    Object.keys(content).forEach(key => {\n      // TODO: å¤æ­æä»¶ç±»åãappend name ä¸ºå¥å»æäºï¼é®é³ä»\n      if (key === 'file') {\n        formData.append(key, content[key])\n      } else if (key === 'i18nName'||key === 'i18nDesc') {\n        formData.append(key, JSON.stringify(content[key]))\n      } else {\n        formData.append(key, content[key])\n      }\n    })\n    return this.http.post(url, formData, { responseType: 'text' })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-util',\n  template: `\n    <p>\n      util works!\n    </p>\n  `,\n  styles: []\n})\nexport class UtilComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AppOptions } from '../public-api';\n\nconst WINDOW_RTF_KEY = 'gspframeworkService'\n\nexport interface RtfTabChangeEvent {\n  appEntrance: string\n  appId: string\n  appType: string\n  funcId: string\n  tabId: string\n  tabName: string\n}\n\n@Injectable()\nexport class RtfUtilService {\n\n  constructor (\n    private translate: TranslateService\n  ) { }\n\n  // TODO: queryParamArray æ¯ä¸ª array å°±è¡\n  openMenu (funcId: string, queryParamArray?: Map<string, string>, tabId?: string, isReload?: boolean) {\n    (window as any).gspframeworkService.rtf.func.openMenu({\n      appType: 'menu',\n      funcId, tabId, isReload,\n      appId: '', appEntrance: '',\n      queryStringParams: new Map(queryParamArray)\n    } as AppOptions)\n  }\n  closeMenu (funcId: string, tabId?: string) {\n    (window as any).gspframeworkService.rtf.func.close({\n      appType: 'menu',\n      funcId, tabId,\n      appId: '', appEntrance: ''\n    } as AppOptions)\n  }\n  openApp (appId: string) {\n    (window as any).gspframeworkService.rtf.func.openMenu({\n      appType: 'app',\n      funcId: '',\n      appId,\n      appEntrance: '',\n    } as AppOptions);\n  }\n  public openUserInfoMenu () {\n    const { rtf } = window[WINDOW_RTF_KEY]\n    const frmEventSvc = rtf.frmEvent\n    const sessionSvc = rtf.adapter.adatperSerice().session\n    this.translate.get('userInfo').subscribe(txt => {\n      frmEventSvc.eventFire(`farrisapp-click`, {\n        active: false,\n        code: 'userInfo',\n        src: '/platform/runtime/sys/web/userinfo/index.html',\n        sessionid: sessionSvc.getUserSessionId(),\n        id: 'userinfo',\n        appType: '',\n        FuncName: txt\n      })\n    })\n  }\n  closeCurRtfTab (route: ActivatedRoute) {\n    const { tabId, funcId } = route.snapshot.queryParams\n    this.closeMenu(funcId, tabId)\n  }\n\n  onRtfTabChangeToMe (route: ActivatedRoute, condition?: (toTabId: string, curTabId: string) => boolean) {\n    const onRtfTabChangeToMe$ = new EventEmitter()\n    const { tabId: curTabId } = route.snapshot.queryParams\n    onRtfTabChange().subscribe((e: RtfTabChangeEvent) => {\n      if (!condition) condition = (pToTabId: string, pCurTabId: string) => pToTabId === pCurTabId\n      if (condition(e.tabId, curTabId)) {\n        onRtfTabChangeToMe$.emit(e)\n      }\n    })\n    return onRtfTabChangeToMe$\n  }\n}\n\nconst onRtfTabChange$ = new EventEmitter<RtfTabChangeEvent>()\nlet funcSwitchEventRegistered = false\n/** ç¨å½æ°æ¯ä¸ºäºå»¶è¿æ³¨åäºä»¶ï¼å¦å rtf service å¯è½è¿æ²¡æå¨ window ä¸ */\nexport function onRtfTabChange () {\n  if (!funcSwitchEventRegistered && window[WINDOW_RTF_KEY]) {\n    funcSwitchEventRegistered = true\n    window[WINDOW_RTF_KEY].rtf.frmEvent.eventListener('funcSwitchEvent', (e: RtfTabChangeEvent) => {\n      onRtfTabChange$.emit(e)\n    })\n  }\n  return onRtfTabChange$\n}\n","import { Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\n@Pipe({\n  name: 'trans',\n})\nexport class TransPipe implements PipeTransform, OnDestroy {\n  constructor(\n    private translate: TranslateService,\n  ) {\n  }\n  // TODO: ä¸å çè¯ï¼åèµ°è·¯ç±æ¶ä¼æ¥é provider.ngOnChanges is not a function\n  ngOnDestroy(): void {\n  }\n  transform(query: string, ...args: any[]): any {\n    const { translations, currentLang } = this.translate\n    if (translations && translations[currentLang] && translations[currentLang][query]) {\n      return translations[currentLang][query]\n    }\n    return query\n  }\n}\n\n// @Injectable()\n// @Pipe({\n//   name: 'trans',\n//   pure: false // required to update the value when the promise is resolved\n// })\n// export class TransPipe implements PipeTransform, OnDestroy {\n//   value: string = '';\n//   lastKey: string;\n//   lastParams: any[];\n//   onTranslationChange: Subscription;\n//   onLangChange: Subscription;\n//   onDefaultLangChange: Subscription;\n\n//   constructor(private translate: TranslateService, private _ref: ChangeDetectorRef) {\n//   }\n\n//   updateValue(key: string, interpolateParams?: Object, translations?: any): void {\n//     let onTranslation = (res: string) => {\n//       this.value = res !== undefined ? res : key;\n//       this.lastKey = key;\n//       this._ref.markForCheck();\n//     };\n//     if (translations) {\n//       let res = this.translate.getParsedResult(translations, key, interpolateParams);\n//       if (isObservable(res.subscribe)) {\n//         res.subscribe(onTranslation);\n//       } else {\n//         onTranslation(res);\n//       }\n//     }\n//     this.translate.get(key, interpolateParams).subscribe(onTranslation);\n//   }\n\n//   transform(query: string, ...args: any[]): any {\n//     // TODO: å°±ä¸ºäºå¥è¿ä¸ª\n//     args = [{ value: query }]\n//     if (!query || !query.length) {\n//       return query;\n//     }\n\n//     // if we ask another time for the same key, return the last value\n//     if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n//       return this.value;\n//     }\n\n//     let interpolateParams: Object;\n//     if (isDefined(args[0]) && args.length) {\n//       if (typeof args[0] === 'string' && args[0].length) {\n//         // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n//         // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n//         let validArgs: string = args[0]\n//           .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\n//           .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\n//         try {\n//           interpolateParams = JSON.parse(validArgs);\n//         } catch (e) {\n//           throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n//         }\n//       } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n//         interpolateParams = args[0];\n//       }\n//     }\n\n//     // store the query, in case it changes\n//     this.lastKey = query;\n\n//     // store the params, in case they change\n//     this.lastParams = args;\n\n//     // set the value\n//     this.updateValue(query, interpolateParams);\n\n//     // if there is a subscription to onLangChange, clean it\n//     this._dispose();\n\n//     // subscribe to onTranslationChange event, in case the translations change\n//     if (!this.onTranslationChange) {\n//       this.onTranslationChange = this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n//         if (this.lastKey && event.lang === this.translate.currentLang) {\n//           this.lastKey = null;\n//           this.updateValue(query, interpolateParams, event.translations);\n//         }\n//       });\n//     }\n\n//     // subscribe to onLangChange event, in case the language changes\n//     if (!this.onLangChange) {\n//       this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n//         if (this.lastKey) {\n//           this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n//           this.updateValue(query, interpolateParams, event.translations);\n//         }\n//       });\n//     }\n\n//     // subscribe to onDefaultLangChange event, in case the default language changes\n//     if (!this.onDefaultLangChange) {\n//       this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\n//         if (this.lastKey) {\n//           this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n//           this.updateValue(query, interpolateParams);\n//         }\n//       });\n//     }\n\n//     return this.value;\n//   }\n\n//   /**\n//    * Clean any existing subscription to change events\n//    */\n//   private _dispose(): void {\n//     if (typeof this.onTranslationChange !== 'undefined') {\n//       this.onTranslationChange.unsubscribe();\n//       this.onTranslationChange = undefined;\n//     }\n//     if (typeof this.onLangChange !== 'undefined') {\n//       this.onLangChange.unsubscribe();\n//       this.onLangChange = undefined;\n//     }\n//     if (typeof this.onDefaultLangChange !== 'undefined') {\n//       this.onDefaultLangChange.unsubscribe();\n//       this.onDefaultLangChange = undefined;\n//     }\n//   }\n\n//   ngOnDestroy(): void {\n//     this._dispose();\n//   }\n// }\n// export function equals(o1: any, o2: any): boolean {\n//   if (o1 === o2) return true;\n//   if (o1 === null || o2 === null) return false;\n//   if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n//   let t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\n//   if (t1 == t2 && t1 == 'object') {\n//     if (Array.isArray(o1)) {\n//       if (!Array.isArray(o2)) return false;\n//       if ((length = o1.length) == o2.length) {\n//         for (key = 0; key < length; key++) {\n//           if (!equals(o1[key], o2[key])) return false;\n//         }\n//         return true;\n//       }\n//     } else {\n//       if (Array.isArray(o2)) {\n//         return false;\n//       }\n//       keySet = Object.create(null);\n//       for (key in o1) {\n//         if (!equals(o1[key], o2[key])) {\n//           return false;\n//         }\n//         keySet[key] = true;\n//       }\n//       for (key in o2) {\n//         if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n//           return false;\n//         }\n//       }\n//       return true;\n//     }\n//   }\n//   return false;\n// }\n// /* tslint:enable */\n\n// export function isDefined(value: any): boolean {\n//   return typeof value !== 'undefined' && value !== null;\n// }","import { ChangeDetectorRef, NgModule } from '@angular/core';\nimport { RtfUtilService } from './rtf-util.service';\nimport { UtilComponent } from './util.component';\nimport { TransPipe } from './trans.pipe';\nimport { TranslateModule, TranslatePipe } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [UtilComponent, TransPipe],\n  imports: [\n    TranslateModule,\n  ],\n  providers: [\n    RtfUtilService,\n  ],\n  exports: [UtilComponent, TransPipe]\n})\nexport class UtilModule { }\n","/**\n * æ­¤å¸¸éä»£è¡¨âé¨ä»¶ç³»ç»âåâDashboardâä¾èµçæä»¶çä½ç½®ã\n * dashboard æ¬èº«ä¸éè¦æ­¤å¼ï¼ç©ºä¸²å¼å¤´å³å¯å¨è¿è¡æ¶åå°é¨ç½²ç®å½ï¼ä¸è¦ç¨å®ã\n * å¯¹äºå¯è½è¢«ç¨å¨ dashboard ä¹å¤çä»£ç ï¼æ¯å¦å ä¸ªå¬å±åºç­ï¼\n * å¿é¡»ç¨å®æ¾å°ç»å¯¹ä½ç½®ï¼ä»¥å½ä»£ç è¿è¡å¨å¶ä»é¡¹ç®ãé¨ç½²å¨å¶ä»å°æ¹æ¶è½è·åå°é¨ä»¶è¿è¡æ¶ä¾èµã\n */\n/** éè¿ ls ä¸­ LS_LOAD_LOCAL_ASSET æ è®°å¤æ­æ¯å¦å è½½ localhost/assetsãä»ç¨äºé¨ä»¶ç³»ç»å¼åäººåï¼åªè½æå¨ä¿®æ¹ ls ä¸­çæ è®°å¼ã */\nexport const LS_LOAD_LOCAL_ASSET = 'LS_LOAD_LOCAL_ASSET'\nconst loadLocalAsset = localStorage.getItem(LS_LOAD_LOCAL_ASSET)\nexport const IGIX_HOME_PATH = loadLocalAsset ? `` : `/platform/runtime/sys/web/home/`\n\nexport const BASE_URL = `/api/runtime/epp/v1.0/`\nexport function addBaseUrl (node) {\n  Object.keys(node).forEach(key => {\n    if (typeof node[key] === 'string') {\n      node[key] = BASE_URL + node[key]\n    } else {\n      addBaseUrl(node[key])\n    }\n  })\n}\n/** æ°æ®æºç¸å³ç base url, ä¸ºäºé²æ­¢è·å¶ä»çä¸å. è¥ç¸å, å¯å æ */\n// const DATA_PREFIX = `/jersey`\nexport const DATA_PREFIX = `data`\nexport const FILTERS_WIDGET_NAME = 'filters'\nexport const FILTERS_WIDGET_FILTERS_PROP_NAME = 'filters'\nexport const FILTERS_WIDGET_PROP_NAME = 'change'\n\nexport const DESIGNER_CONFIG = {\n  PAGE_DESIGNER_ID: `Epp-pagedesigner`,\n  PAGE_RUNTIME_ID: `Epp-pageruntime`\n}\nexport const dimensionTypeConfig = {\n  text: {\n    list: ['STRING', 'TEXT'],\n    color: '#2196F3',\n    iconName: 'texture'\n  },\n  number: { // TODO: integer\n    list: ['SHORT', 'LONG', 'FLOAT', 'DOUBLE', 'DECIMAL', 'INTEGER', 'INTETER'],\n    color: '#e91e63',\n    iconName: 'device_hub'\n  },\n  date: {\n    list: ['DATETIME'],\n    color: '#ff9800',\n    iconName: 'access_time'\n  },\n  byte: {\n    list: ['BYTE', 'BYTES'],\n    color: '#4caf50',\n    iconName: 'texture'\n  },\n  boolean: {\n    list: ['BOOLEAN', 'UNKNOWN'],\n    color: '#3f51b5',\n    iconName: 'invert_colors'\n  },\n  unknown: {\n    list: ['UNKNOWN'],\n    color: '#3f51b5',\n    iconName: 'help'\n  }\n}\n","import { IGIX_HOME_PATH } from \"./const\"\n\n/**\n * å½¢å¦ {key={key=value, key=value}, key={}}\n * è½¬ä¸º JSON æ åæ ¼å¼\n */\nexport function backendString2Json (original: string) {\n  let result = original.replace(/\\s/g, '')    // å»ç©ºæ ¼\n  result = result.replace(/=/g, ':')    // = å :\n  result = result.replace(/:/g, '\\\":')  // : åå  \"\n  result = result.replace(/,/g, ',\\\"')  // , åå  \"\n  result = result.replace(/{(?=\\w)/g, '{\\\"')  // åæ¥å­æ¯ç { åå  \"\n  return result\n}\n/**\n * ç¨åè¡¨æé ä¸æ£µæ ã\n */\nexport function list2Tree (list: any[], {\n  parentIdKey = 'parentId',\n  rootParentIdValue = null,\n  idKey = 'id',\n  // leafSelectableOnly = true\n  // ignoreLeaf = false\n  ifIgnore = (node) => false,\n  // isLeaf = (node) => false,\n  beforeProcess = null,\n  afterProcess = null,\n}) {\n  function recurseAddChildren (nodes: any[], layer = 0) {\n    nodes.forEach(node => {\n      if (beforeProcess) beforeProcess(node)\n      if (!node.layer) node.layer = layer\n      node.value = node.key = node[idKey]\n      node.label = node.title = node.name\n      const children = list.filter(item => item[parentIdKey] === node[idKey] && !ifIgnore(item))\n      if (children.length > 0) {\n        node.children = children\n        recurseAddChildren(node.children, layer + 1)\n      } else {\n        node.isLeaf = true\n      }\n      if (afterProcess) afterProcess(node)\n    })\n  }\n\n  const tree = list.filter(item => !item[parentIdKey] || item[parentIdKey] === rootParentIdValue)\n  recurseAddChildren(tree)\n  return tree\n}\n\nexport function uuidv4 () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport function appendScript (src: string) {\n  const body = document.getElementsByTagName('body')[0];\n  const script = document.createElement('script');\n  script.src = src\n  body.appendChild(script);\n}\n\n/**\n * å è½½ css\n * 1. é²éå¤ï¼å¦æç¸å href ç link æ ç­¾å·²å­å¨ï¼ä¸ä¼éæ°å è½½\n * 2. å id æ¿æ¢ï¼å¯ä»¥æ¿æ¢å id ç link æ ç­¾\n */\nexport function loadCss (href: string, eleId?: string, allowRepeat = false) {\n  // é²éå¤\n  if (\n    !allowRepeat\n    && Array.from(document.querySelectorAll('link')).some(link => link.href === href)\n  ) return\n  // å id æ¿æ¢\n  if (eleId) {\n    const themeLink = document.getElementById(eleId) as HTMLLinkElement;\n    if (themeLink) {\n      themeLink.href = href\n      return\n    }\n  }\n  const head = document.getElementsByTagName('head')[0];\n  const style = document.createElement('link');\n  if (eleId) style.id = eleId;\n  style.type = 'text/css'\n  style.rel = 'stylesheet';\n  style.href = href;\n  head.appendChild(style);\n}\n\nexport function deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\n/** ç´æ¥æ¹åæ°ç» */\nexport function setArrayLengthTo (arr: any[], targetLength: number, fillItem) {\n  arr.length = targetLength\n  for (let i = 0; i < arr.length; i++) {\n    if (!arr[i]) arr[i] = deepClone(fillItem)\n  }\n}\nexport function getCurTheme () {\n  const rawThemeKey = localStorage.getItem('gsp_rtf_themesKey')\n  // å¯è½æ¯ defaultï¼å½ä¸åæ blue\n  if (rawThemeKey === 'default' || !rawThemeKey) return 'blue'\n}\n/**\n * å è½½\n * 1. å¬å± style\n * 2. å¬å±ä¸»é¢ style\n */\nexport function loadCommonStyleNTheme () {\n  const curTheme = getCurTheme()\n  // antd ä¼åçº§æä½\n  loadCss(`${IGIX_HOME_PATH}xc-antd-${curTheme}.css`)\n  loadCss(`${IGIX_HOME_PATH}plain.css`)\n  loadCss(`${IGIX_HOME_PATH}xc-common.css`)\n  loadCss(`${IGIX_HOME_PATH}xc-common-${curTheme}.css`)\n}\n/**\n * ä¸¤ä¸ª obj æ¯å¦ç»æç¸åãéé¢çææå­é¢å¼ç¸ç­ï¼åæ¶åé¨å¼ç¨\n */\nexport function objectLiteralEqual (obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2)\n}\nexport const curLang = localStorage.getItem('languageCode') || 'zh-CHS'\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgixUtilService {\n}\n\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DataParam } from './data.type'\nimport { Size, WidgetInfo } from './widget.type'\n\nexport const DEFAULT_PORTLET_COLS = 5\nexport const DEFAULT_PORTLET_ROWS = 4\n\ndeclare type SizeKey = 'minCols' | 'minRows' | 'maxCols' | 'maxRows' | 'rows' | 'cols'\n\n/** é¨ä»¶ */\nexport abstract class Portlet {\n  id?: string /** å¯ä¸æ è¯ */\n  getSize (key: SizeKey) {\n    if (key === 'rows') {\n      return this._getAxisSize('rows') || this._getAxisSize('minRows') || DEFAULT_PORTLET_ROWS\n    } else if (key === 'cols') {\n      return this._getAxisSize('cols') || this._getAxisSize('minCols') || DEFAULT_PORTLET_COLS\n    } else {\n      return this._getAxisSize(key)\n    }\n  }\n  abstract _getAxisSize (key: SizeKey)\n}\nexport class EppPortlet extends Portlet {\n  constructor (\n    /** åé¨ä»¶ Id */\n    public widgetId: string\n  ) {\n    super()\n  }\n  name = 'æªå½åé¨ä»¶' /** æ¾ç¤ºæ é¢ */\n  i18nName: { [key: string]: any } = {}\n  // subtitle?: string /** å¯æ é¢ */\n  desc?: string /** å¤æ³¨ */\n  size?: Size /** å°ºå¯¸èå´ */\n  widget?: WidgetInfo\n  propValues: { [key: string]: any } = {} /** å¯éç½®å±æ§çå¼ */\n  dataOption: { [key: string]: any } = {}\n  // operationId?: string /** åè½æä½ */\n  moduleId?: string /** æå±æ¨¡å */\n  /**\n   * éç½®èå¨æ¶ï¼åç«¯å¨æå¢å ãåªåè¿è¡æ¶ä½¿ç¨ï¼ä¸åºè¯¥è¢«ä¿å­ã\n   * null ä»£è¡¨åå§ç¶æï¼[] ä»£è¡¨æ°æ®å·²å è½½ä¸ä¸ºç©ºã\n   */\n  dps: DataParam[] = null\n  _getAxisSize (key: SizeKey) {\n    return (this.size && this.size[key]) || (this.widget.layout && this.widget.layout.grid && this.widget.layout.grid[key])\n  }\n}\nconst defaultSizeMap = {\n  rows: 4,\n  cols: 5,\n  minCols: 2,\n  minRows: 2,\n  maxCols: 24,\n  maxRows: 24,\n}\nexport class BAPortlet extends Portlet {\n  isBA = true\n  name: string\n  // code?: string\n  // createTime?: string\n  // detail?: number\n  // gradeCode?: string\n  // isParent?: boolean\n  // layer?: number\n  // pid?: string\n  // tab?: number\n  // type?: string\n  // updateTime?: string\n  // userId?: string\n  _getAxisSize (key: SizeKey) {\n    return defaultSizeMap[key]\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { addBaseUrl } from '../const';\nimport { backendString2Json } from '../misc';\nimport { WidgetInfo } from '../types/widget.type';\nimport { UtilService } from '../util.service';\n\nexport const widgetUrls = {\n  GET_BY_ID: `metaportlet/`,\n  GET_USER_ALL: `metaportlet/all`,\n  CREATE: `metaportlet/upload`,\n  EDIT: `metaportlet/editor`,\n  DELETE:`metaportlet/`,\n  GET_PORTLET:`portlet/findByMetaId`,\n}\naddBaseUrl(widgetUrls)\n\n/**\n * url è½¬æ¢:\n * æå¡ç«¯ url: /su/åé¨ä»¶å/æä»¶è·¯å¾\n * full url: host/runtime/web/metaportlet/su/åé¨ä»¶å/æä»¶è·¯å¾\n */\nconst WIDGET_PREFIX = `${location.origin}/runtime/web/metaportlet`\n/** widget åç«¯ -> åç«¯ è½¬æ¢ */\nexport function convertWidget (widget) {\n  widget.href = WIDGET_PREFIX + widget.href\n  widget.logoImgUrl = WIDGET_PREFIX + widget.logoImgUrl\n  widget.previewImgUrl = WIDGET_PREFIX + widget.previewImgUrl\n  widget.baseUrl = WIDGET_PREFIX + widget.baseUrl\n  widget.layout = widget.layout && JSON.parse(backendString2Json(widget.layout))\n  return widget as WidgetInfo\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetRepo {\n\n  constructor (\n    private http: HttpClient,\n    private util: UtilService\n  ) { }\n\n  getWidgets () {\n    return this.http\n      .get<WidgetInfo[]>(widgetUrls.GET_USER_ALL)\n      .pipe(\n        map(data => data.map(convertWidget))\n      )\n  }\n  getWidgetById (id: string) {\n    return this.http\n      .get<WidgetInfo>(widgetUrls.GET_BY_ID + id)\n      .pipe(\n        map(data => convertWidget(data))\n      )\n  }\n  uploadWidget (content: { [key: string]: File | any }) {\n    return this.util.uploadFile(widgetUrls.CREATE, content)\n  }\n  editorWidget (content: { [key: string]: File | any }) {\n    return this.util.uploadFile(widgetUrls.EDIT, content)\n  }\n  deleteWidget (id: string) {\n    return this.http.delete<string>(widgetUrls.DELETE+id,{\n    })\n  }\n  findPortletByMeta(id:string){\n    return this.http.get<number>(widgetUrls.GET_PORTLET,{\n      params : {id}\n    })\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { addBaseUrl } from '../const';\nimport { Role } from '../types/igix.type';\nimport { EppPortlet } from '../types/portlet.type';\nimport { convertWidget } from './widget.repo';\n\nexport const portletUrls = {\n  GET_BY_ID: `portlet/`,\n  GET_USER_ALL: `portlet/all`,\n  SAVE: `portlet/`,\n  GET_BY_MODULE_ID: `portlet/findByModuleId`,\n  DELETE_BY_ID: `portlet/`,\n  GET_PAGE:`page/findByPortletId`\n}\nexport const portletOps = {\n  SAVE: `portletop/save?portletId=`,\n  GET_BY_PORTLET_ID: `portletop/getallpagerole?portletId=`\n}\naddBaseUrl(portletUrls)\naddBaseUrl(portletOps)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortletRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getPageByPortletId(portletId:string){\n    return this.http.get<number>(portletUrls.GET_PAGE,{\n      params:{portletId}\n    })\n  }\n\n  getPortlets () {\n    return this.http.get<EppPortlet[]>(portletUrls.GET_USER_ALL).pipe(\n      map(portlets => portlets.map(convertPortlet))\n    )\n  }\n  getPortletsByModuleId (moduleId?: string) {\n    return this.http.get<EppPortlet[]>(\n      portletUrls.GET_BY_MODULE_ID,\n      { params: moduleId ? { moduleId } : null }\n    ).pipe(map(portlets => portlets.map(convertPortlet)))\n  }\n  getPortletById (id: string) {\n    // return this.storage.getPortletById(id)\n    return this.http.get<EppPortlet>(portletUrls.GET_BY_ID + id).pipe(\n      map(convertPortlet),\n      // å¦æè¯·æ±åºéï¼ä¼è¿åä¸ä¸ª nullï¼èä¸åæ\n      // catchError(err => {\n      //   const p = new EppPortlet(null)\n      //   p.id = id\n      //   p.name = ''\n      //   return of(p)\n      // })\n    )\n  }\n  savePortlet (portlet: EppPortlet) {\n    const serverPortlet = convertPortletInverse(portlet)\n    return portlet.id\n      ? this.http.post<EppPortlet>(portletUrls.SAVE, serverPortlet)\n      : this.http.put<EppPortlet>(portletUrls.SAVE, serverPortlet)\n  }\n\n  /** portlet op */\n  getPortletOps (portletId: string) {\n    return this.http.get<Role[]>(portletOps.GET_BY_PORTLET_ID + portletId)\n  }\n  savePortletOps (portletId: string, opIds: string[]) {\n    return this.http.post(portletOps.SAVE + portletId, opIds)\n  }\n  deletePortletById (portletId: string) {\n    return this.http.delete(portletUrls.DELETE_BY_ID + portletId)\n  }\n}\n\n/** portlet åç«¯ -> åç«¯, åç«¯ -> åç«¯ è½¬æ¢ */\nfunction convertPortlet (serverPortlet) {\n  serverPortlet.widget = convertWidget(serverPortlet.widget)\n  if (serverPortlet.propValues) serverPortlet.propValues = JSON.parse(serverPortlet.propValues)\n  return Object.assign(new EppPortlet(null), serverPortlet) as EppPortlet\n}\nfunction convertPortletInverse (portlet: EppPortlet) {\n  const serverPortlet = { ...portlet }\n  delete serverPortlet.widget\n  serverPortlet.propValues = JSON.stringify(portlet.propValues) as any\n  return serverPortlet\n}\n","import CryptoJS from 'crypto-js';\n// declare var CryptoJS\n\nlet AES_SECRET_KEY\nlet CRYPTO_CFG\ntry {\n  AES_SECRET_KEY = CryptoJS.enc.Utf8.parse('1234567890123456')\n  CRYPTO_CFG = {\n    iv: CryptoJS.enc.Utf8.parse('0000000000000000'),\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n  }\n} catch (error) {\n}\n\nexport function encrypt (message: string) {\n  const msg = CryptoJS.enc.Utf8.parse(message)\n  return CryptoJS.AES.encrypt(msg, AES_SECRET_KEY, CRYPTO_CFG).toString()\n}\nexport function decrypt (encryptedMsg: string) {\n  return CryptoJS.AES.decrypt(encryptedMsg, AES_SECRET_KEY, CRYPTO_CFG).toString(CryptoJS.enc.Utf8)\n}\n","import { camelCase, constantCase } from 'change-case';\nimport { decrypt, encrypt } from '../utils/encryption';\nimport { I18nValue } from './common.type';\n\nexport interface ProviderParam {\n  label?: string\n  name?: string\n  type?: 'input' | 'textarea' | 'password' | 'checkbox' | 'select'\n  sortNo?: number\n  value?: string\n  placeholder?: string\n  options?: string[]\n  checked?: boolean\n  required?: boolean\n  encrypted?: boolean\n}\n// TODO: æ°æ®æºç¸å³çï¼è¦æ¾å¨ dashboard core ä¸­å\nexport class Datasrc {\n  id?: string\n  name?: string\n  i18nName: { [key: string]: any } = {}\n  config?: { [name: string]: any } = {}\n  groupName?: string\n  creator?: string\n  createTime?: Date\n\n  constructor (\n    public providerName?: string\n  ) {}\n}\nexport interface DataProvider {\n  label: string\n  name: string\n}\n\n\nexport interface DataParamDto {\n  id?: string\n  i18nName?\n  type?: 'queryParam' | 'pathParam' | 'body'\n  config?: string\n  datasetId?: string\n  name?: string\n  value?: string\n}\n/**\n * åæ°åæ°\n */\nexport class DataParam {\n  id?: string\n  name?: string\n  i18nName?\n  type?: 'QUERY_PARAM' | 'PATH_PARAM' | 'BODY' = 'QUERY_PARAM'\n  config?: any\n  default?: string = null\n  datasetId?: string\n  static ToDto (dp: DataParam) {\n    const { i18nName, type, config, id } = dp\n    return {\n      id, i18nName, config,\n      type: camelCase(type),\n      value: dp.default,\n    } as DataParamDto\n  }\n  static FromDto (dpDto: DataParamDto) {\n    return {\n      id: dpDto.id,\n      i18nName: dpDto.i18nName,\n      type: constantCase(dpDto.type),\n      config: dpDto.config,\n      datasetId: dpDto.datasetId,\n      name: dpDto.name,\n      default: dpDto.value,\n    } as DataParam\n  }\n}\nexport interface DatasetDto {\n  id?: string,\n  name?: string,\n  datasourceId?: string,\n  i18nName?:{[key:string]:any},\n  datasourceName?: string\n  dimensions?: Dimension[]\n  creationTime?: Date\n  method?: string\n  parameters?: DatasetParameter[]\n  config?: string\n  dataParamDto?: DataParamDto[]\n}\nexport class DatasetParameter {\n  constructor (\n    public name: string,\n    public value: string,\n    public sortNo?: number,\n    public isExpression = true\n    ) { }\n  // name?: string\n  // value?: string\n  // isExpression = true\n  // sortNo?: number\n}\ninterface AnyKey {\n  [key: string]: any\n}\nexport class Dataset implements AnyKey {\n  id?: string\n  name?: string\n  product?: string\n  module?: string\n  creator?: string\n  modifier?: string\n  creationTime?: Date\n  modifyTime?: Date\n  datasrcId?: string\n  datasrcName?: string\n  i18nName?: { [key: string]: any } \n  // datasrc?: Datasrc\n  config?: {\n    [key: string]: any\n  } = {}\n  cols: {\n    dimensions?: Dimension[]\n    measures?: Dimension[],\n  } = {\n    dimensions: [],\n    measures: [],\n    // computedFields: [],\n    // filters: []\n  }\n  dataParams?: DataParam[] = []\n\n  static create () {\n    return new Dataset()\n  }\n  static toDto (dataset: Dataset): DatasetDto {\n    const { id, name, datasrcId, datasrcName,\n      cols, creationTime, config, dataParams,i18nName } = dataset\n    return {\n      id, name, creationTime,i18nName,\n      datasourceId: datasrcId,\n      datasourceName: datasrcName,\n      dimensions: cols.dimensions,\n      config: encrypt(JSON.stringify(config)),\n      dataParamDto: dataParams.map(DataParam.ToDto)\n    }\n  }\n  static fromDto (datasetDto: DatasetDto): Dataset {\n    const { id, name, datasourceId, datasourceName, dimensions,\n      creationTime, method, parameters,i18nName,\n      config, dataParamDto } = datasetDto\n    let parsedConfig = null\n    try {\n      parsedConfig = JSON.parse(decrypt(config))\n    } catch (error) {\n    }\n    if (!parsedConfig) parsedConfig = {}\n    return {\n      // ...datasetDto,\n      id, name, creationTime,i18nName,\n      datasrcId: datasourceId,\n      datasrcName: datasourceName,\n      cols: { dimensions },\n      config: parsedConfig,\n      dataParams: dataParamDto ? dataParamDto.map(DataParam.FromDto) : [],\n    }\n  }\n}\n\nexport type DimensionTypeName = 'STRING' | 'TEXT'\n  | 'SHORT' | 'LONG' | 'FLOAT' | 'DOUBLE'\n  | 'DECIMAL' | 'INTEGER' | 'INTETER' | 'DATETIME'\n  | 'BYTE' | 'BYTES' | 'BOOLEAN' | 'UNKNOWN'\nexport class Dimension {\n  name?: string\n  label?: string\n  i18nLabel?: I18nValue | string\n  type?: number\n  typeName?: DimensionTypeName\n  javaClassName?: string\n  groupName?: string\n  comment?: string\n  notNull?: boolean\n}\nexport interface Filter extends Dimension {\n  hasValue?: boolean\n  // isOpen?: boolean\n  filterExpression?: string\n}\nexport enum ComputedType {\n  Count = 'Count',\n  Sum = 'Sum',\n  Max = 'Max',\n  Min = 'Min',\n  Avg = 'Avg',\n  Expression = 'Expression',\n}\nexport enum AggType {\n  Table = 'Table',\n  CroosTable = 'CroosTable',\n}\nexport class ComputedCol extends Dimension {\n  computeType = ComputedType.Expression\n  constructor (\n    private expression?: string\n  ) {\n    super()\n  }\n}\nexport interface Col extends Filter {\n}\nexport interface Row extends Filter {\n}\n\nexport interface AggDto {\n  id?: string\n  dataSetId?: string\n  dataSetName?: string\n  resource?: string\n  resourceId?: string\n  aggregationType?: AggType\n  columnConfigs?: Col[]\n  rowConfigs?: Row[]\n  filterConfigs?: Filter[]\n  computedExpressionConfigs?: ComputedCol[]\n}\nexport class Agg {\n  id?: string\n  datasetId?: string\n  datasetName?: string\n  resource?: string\n  resourceId?: string\n  aggType?: AggType\n  cols?: Col[] = []\n  rows?: Row[] = []\n  filters?: Filter[] = []\n  computedCols?: ComputedCol[] = []\n\n  static toDto (agg: Agg) {\n    const { id, datasetId, resource, resourceId,\n      aggType, cols, rows, filters, computedCols\n    } = agg\n    return {\n      id,\n      dataSetId: datasetId,\n      resource,\n      resourceId,\n      aggregationType: aggType,\n      columnConfigs: cols,\n      rowConfigs: rows,\n      filterConfigs: filters,\n      computedExpressionConfigs: computedCols\n    } as AggDto\n  }\n  static fromDto (aggDto: AggDto) {\n    const { id, dataSetId, dataSetName, resource, resourceId,\n      aggregationType, columnConfigs, rowConfigs,\n      filterConfigs, computedExpressionConfigs } = aggDto\n    return {\n      id,\n      datasetId: dataSetId,\n      datasetName: dataSetName,\n      resource,\n      resourceId,\n      aggType: aggregationType,\n      cols: columnConfigs,\n      rows: rowConfigs,\n      filters: filterConfigs,\n      computedCols: computedExpressionConfigs\n    } as Agg\n  }\n}\nexport enum AggregationResultSetType {\n    Table = 'Table',\n    CroosTable = 'CroosTable'\n}\n/** æ°æ®æå¡å®éè¿åçç»æ */\nexport interface AggResult {\n  tableData?: { [key: string]: any }[]\n  dimensions?: Dimension[]\n  columns?: string[]\n  /** ? */\n  type?: AggregationResultSetType\n  /** ? */\n  getResultSet?: Result\n  /** ? */\n  data?: { [key: string]: { [key: string]: any } }\n}\nexport interface Result {\n  data: object[]\n  columns: Dimension[]\n}\n/** widget component éè¦å¤é¨ä¼ å¥çæ°æ®æ ¼å¼ãä¸é¢çæå¡ç¬¦åæ­¤ç»æã */\nexport interface DataWithDims {\n  dimensions?: Dimension[]\n  tableData?: any[]\n}\n/**\n * è·åæ°æ®æ¶ä¼ æå¡ç«¯ç dp + value\n */\nexport class DpValue {\n  dpId: string\n  value: any\n  static toDto (dpValue) {\n    return {\n      dataParamId: dpValue.dpId,\n      value: dpValue.value\n    } as DpValueDto\n  }\n}\nexport interface DpValueDto {\n  dataParamId: string\n  value: string\n}\n\nexport interface RuntimeAggOptionDto {\n  dimensions: string[]\n  indicators: {\n    type: number\n    name: string\n  }[]\n}\nexport class Indicator {\n  dimName?: string\n  aggFn?: 1 | 2 | 3 | 4 | 5 = 4\n}\nexport class RuntimeAggOption {\n  dimensions: string[] = []\n  indicators: Indicator[] = [new Indicator()]\n  static toDto (runtimeAgg: RuntimeAggOption) {\n    if (!runtimeAgg) return\n    return {\n      dimensions: runtimeAgg.dimensions,\n      indicators: runtimeAgg.indicators.map(ind => ({\n        type: ind.aggFn,\n        name: ind.dimName\n      }))\n    } as RuntimeAggOptionDto\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { addBaseUrl, DATA_PREFIX } from '../const';\nimport { Agg, AggResult, Dataset, DatasetDto, Dimension, DpValue, RuntimeAggOption } from '../types/data.type';\n\nexport const datasetUrls = {\n  GET_BY_ID: `${DATA_PREFIX}/DataSetService/find/`,\n  CREATE: `${DATA_PREFIX}/DataSetService/create`,\n  IMPORT_QO: `${DATA_PREFIX}/DataSetService/importQO`,\n  DELETE: `${DATA_PREFIX}/DataSetService/delete`,\n  GET_ALL: `${DATA_PREFIX}/DataSetService/findAll`, // 500\n  GET_RAW_DIMS_BY_DATASET: `${DATA_PREFIX}/DataResultSetService/tryGetDimensions`,\n  GET_RAW_DATA_BY_DATASET: `${DATA_PREFIX}/DataResultSetService/getResultSet`,\n  UPDATE: `${DATA_PREFIX}/DataSetService/update`,\n}\nexport const aggUrls = {\n  SAVE: `${DATA_PREFIX}/DataSetService/saveAggConfig`,\n  GET_BY_RESOURCE: `${DATA_PREFIX}/DataSetService/findAggConfigByResource`,\n}\nexport const dataResultSetUrls = {\n  GET_BY_AGG_ID: `${DATA_PREFIX}/DataResultSetService/getAggResultSet/{aggId}`, // ?\n  GET_BY_AGG: `${DATA_PREFIX}/DataResultSetService/getAggResultSetForTest`,\n  GET_BY_DATASET: `${DATA_PREFIX}/DataResultSetService/getResultSet`, // åå§æ°æ®ï¼ç¨ä¸å°\n  GET_BY_RESOURCE: `${DATA_PREFIX}/DataResultSetService/getResultSetByResource`, //\n}\naddBaseUrl(datasetUrls)\naddBaseUrl(aggUrls)\naddBaseUrl(dataResultSetUrls)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatasetRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getRawDimsByDataset (datasetDto: DatasetDto) {\n    return this.http\n      .post<Dimension[]>(datasetUrls.GET_RAW_DIMS_BY_DATASET, datasetDto)\n  }\n  getRawColsNDataByDataset (datasetDto: DatasetDto) {\n    return this.http\n      .post<{columns: string[], data:any[]}>(datasetUrls.GET_RAW_DATA_BY_DATASET, datasetDto)\n  }\n  getDatasets () {\n    return this.http\n      .get<DatasetDto[]>(datasetUrls.GET_ALL)\n      .pipe(map(datasetDtos => datasetDtos.map(Dataset.fromDto)))\n  }\n  getDatasetById (id: string) {\n    return this.http\n      .get<DatasetDto>(datasetUrls.GET_BY_ID + id)\n      .pipe(map(Dataset.fromDto))\n  }\n  saveDataset (datasetDto: DatasetDto) {\n    return this.http.post<DatasetDto>(\n      datasetDto.id ? datasetUrls.UPDATE : datasetUrls.CREATE,\n      // Dataset.toDto(dataset)\n      datasetDto\n    ).pipe(map(Dataset.fromDto))\n    // TODO:\n    // , this.success()\n  }\n  importQO (ids: string[]) {\n    return this.http.post(datasetUrls.IMPORT_QO, ids)\n  }\n  deleteDataset (datasetId: string) {\n    return this.http\n      .post<any>(datasetUrls.DELETE, null, { params: { id: datasetId } })\n      // TODO:\n      // .pipe(this.success())\n  }\n\n  /** agg */\n  getAggByPortletId (portletId: string) {\n    return this.http.get<Agg>(aggUrls.GET_BY_RESOURCE, {\n      params: {\n        resource: 'portlet',\n        resourceId: portletId\n      }\n    }).pipe(map(Agg.fromDto))\n  }\n  saveAgg (agg: Agg) {\n    return this.http\n      .post<Agg>(aggUrls.SAVE, Agg.toDto(agg))\n  }\n\n  /** result */\n  getAggResultByAgg (\n    agg: Agg,\n    dpValues: DpValue[] = [],\n    runtimeAgg?: RuntimeAggOption\n  ) {\n    const body: any = {\n      aggDataDto: Agg.toDto(agg),\n      aggregation: RuntimeAggOption.toDto(runtimeAgg)\n    }\n    // dataParam ä¸º [] æå¡ç«¯ä¼æ¥éï¼è¥æ²¡æç´æ¥ä¸ä¼ æ­¤åæ°ã\n    if (dpValues && dpValues.length > 0) body.dataParam = dpValues.map(DpValue.toDto)\n    return this.http.post<AggResult>(dataResultSetUrls.GET_BY_AGG, body)\n  }\n  getResultByPortletId (\n    portletId: string,\n    dpValues: DpValue[] = [],\n    filter = '\"\"',\n    runtimeAgg?: RuntimeAggOption\n    ) {\n\n    const body: any = {\n      filter,\n      aggregation: RuntimeAggOption.toDto(runtimeAgg)\n    }\n    // dataParam ä¸º [] æå¡ç«¯ä¼æ¥éï¼è¥æ²¡æç´æ¥ä¸ä¼ æ­¤åæ°ã\n    if (dpValues && dpValues.length > 0) body.dataParam = dpValues.map(DpValue.toDto)\n\n    return this.http.post<AggResult>(\n      dataResultSetUrls.GET_BY_RESOURCE,\n      body,\n      {\n        headers: new HttpHeaders({'Content-Type': 'application/json'}),\n        params: {\n          resourceType: 'portlet',\n          resourceId: portletId\n        }\n      }\n    )\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { addBaseUrl, DATA_PREFIX } from '../const';\nimport { DataProvider, Datasrc, ProviderParam } from '../types/data.type';\n\nexport const datasrcUrls = {\n  GET_BY_ID: `${DATA_PREFIX}/DatasourceService/find/`, // ?\n  CREATE: `${DATA_PREFIX}/DatasourceService/create`, // 500\n  DELETE: `${DATA_PREFIX}/DatasourceService/delete`, // ?\n  GET_ALL: `${DATA_PREFIX}/DatasourceService/findAll`, // 500\n  UPDATE: `${DATA_PREFIX}/DatasourceService/update`, // ?\n  TRY: `${DATA_PREFIX}/DatasourceService/try`,\n  GET_PARAMS_BY_PROVIDER_NAME: `${DATA_PREFIX}/DataService/getDatasourceParameters/`,\n  GET_ALL_PROVIDERS: `${DATA_PREFIX}/DataService/getProvicerNames`,\n}\naddBaseUrl(datasrcUrls)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatasrcRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getDatasrcList () {\n    return this.http.post<Datasrc[]>(datasrcUrls.GET_ALL, null)\n  }\n  getDatasrcById (id: string) {\n    return this.http\n      .get<Datasrc>(datasrcUrls.GET_BY_ID + id)\n  }\n  saveDatasrc (datasrc: Datasrc) {\n    if (datasrc.id) {\n      return this.http.post<Datasrc>(datasrcUrls.UPDATE, datasrc)\n      // TODO: ç§»èµ°\n      // .pipe(this.success())\n    } else {\n      return this.http.post<Datasrc>(datasrcUrls.CREATE, datasrc)\n      // TODO: ç§»èµ°\n      // .pipe(this.success())\n    }\n  }\n  deleteDatasrc (id: string) {\n    return this.http.post<string>(datasrcUrls.DELETE, null, {\n      params: { id }\n    })\n    // TODO: ç§»èµ°\n    // .pipe(this.success())\n  }\n  tryDatasrc (datasrc: Datasrc): Observable<string> {\n    return this.http.post(datasrcUrls.TRY, datasrc, { responseType: 'text' })\n    // TODO: ç§»èµ°\n    // .pipe(tap(\n    //   () => this.nzMsg.success('æµè¯æåï¼'),\n    //   () => this.nzMsg.error('æµè¯å¤±è´¥ï¼')\n    // ))\n  }\n  getProviders () {\n    return this.http.get<DataProvider[]>(datasrcUrls.GET_ALL_PROVIDERS)\n  }\n  getParamsByProviderName (providerName: string) {\n    return this.http.get<ProviderParam[]>(datasrcUrls.GET_PARAMS_BY_PROVIDER_NAME + providerName)\n  }\n}\n","\n/** æ¯æçè¯­è¨ */\nexport class Lang {\n  constructor (public code: string, public name: string) {\n  }\n}\n\nexport class I18nValue {\n  [key: string]: any\n}\n\nexport interface ErrorInfo {\n  timestamp: string // \"2020-03-05T11:07:07.280+0000\"\n  status: string // 500\n  error: string // \"Internal Server Error\"\n  message: string // \"No message available\"\n  path: string // \"/jersey/DataSetService/create\"\n  trace: string\n}\n\nexport type Tree = TreeNode[]\nexport interface TreeNode {\n  children?: Tree\n  title: string\n  key: string\n  value?: any\n  label?: string\n  isLeaf?: boolean\n  [key: string]: any\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NzTreeNodeOptions } from 'ng-zorro-antd/core';\nimport { from, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { list2Tree } from '../misc';\nimport { Lang } from '../types/common.type';\n// import { Lang, list2Tree } from '../../public-api';\nimport { BO, RoleGroup, RtfFunc, UserInfo } from '../types/igix.type';\nimport { BAPortlet } from '../types/portlet.type';\n\nexport const igixUrls = {\n  bo: {\n    GET_ALL: `/api/dev/main/v1.0/business-objects`\n  },\n  funcOperations: {\n    GET_BY_BO_ID: `/api/runtime/sys/v1.0/funcOperations/business/`\n  },\n  roleGroup: {\n    GET_ALL: `/api/runtime/sys/v1.0/rolegroups/all`\n  },\n  role: {\n    GET: `/api/runtime/sys/v1.0/roles`,\n  },\n  userInfo: { // igix ç userInfo éæå¤´å\n    GET: `/api/runtime/sys/v1.0/userinfos?infoType=user`\n    // GET: `http://dscloud.chec.bj.cn/api/runime/sys/v1.0/userinfos/setting`\n  },\n  func: {\n    /** åå«äºææèåãèæ¥ï¼ä½ç§¯å¤§ãå è½½è¾æ¢ */\n    GET_ALL_WITH_INVOKE: `/api/runtime/sys/v1.0/functions/allFuncs`,\n    /** è¿ä¸ªæ¯ iGIX æçåºç¨ä¸­çèåãåè½ç»åè¡¨ï¼æ°æ®éç¨å°ï¼æ§è½è¾å¥½ */\n    GET_ALL: `/api/runtime/sys/v1.0/functions/funcGroups?funcType=4`\n  },\n  langs: {\n    GET_ALL: `/api/runtime/sys/v1.0/loginInfo?infoType=supportedLanguage`\n  },\n  qoDataset: {\n    // GET_BO_TREE: `/api/gsp/bcc/v1.0/botreefornavvo/extension/query`,\n    GET_ECP_BIZ_TREE : `/api/gsp/bcc/v1.0/ecpbiztree/extension/query`,\n    GET_DETAIL_BY_ID: `/api/gsp/bcc/v1.0/datasetdetail_frm/extension/retrieve/`,\n    GET_DETAIL_QUERY: `/api/gsp/bcc/v1.0/datasetdetail_frm/extension/query`\n  },\n  ba: {\n    // GET_ALL_PORTLETS: `/api/ba/bap/v1.0/category/getCloudCategoryList?type=widget`,\n    GET_ALL_PORTLETS: `/api/ba/bap/v1.0/widget/getCloudWidgetList?allWidgetList=true`,\n    // GET_ALL_PORTLETS: `/api/ba/bap/v1.0/widget/GetPortletInfo`,\n  }\n  // TODO: su http://10.24.20.77:5200/api/dev/main/v1.0/business-objects/\n  // http://localhost:5000/api/dev/main/v1.0/business-object-trees\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgixRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getBOTree (layer = Infinity) {\n    return this.http.get<BO[]>(igixUrls.bo.GET_ALL).pipe(map(boList => {\n      return list2Tree(boList, {\n        parentIdKey: 'parentID',\n        ifIgnore: item => item.layer > layer\n      })\n    }))\n  }\n  getOpsByBOId (boId: string): Observable<any> {\n    return this.http.get<any[]>(igixUrls.funcOperations.GET_BY_BO_ID + boId)\n  }\n  /** role, role group */\n  getRoleGroupTree () {\n    return this.http.get<RoleGroup[]>(igixUrls.roleGroup.GET_ALL).pipe(map(roleGroups => {\n      return list2Tree(roleGroups, {})\n    }))\n  }\n  getRolesByRoleGroupId (groupId: string) {\n    return this.http.get<any>(igixUrls.role.GET, {\n      params: {\n        param: JSON.stringify({ groupId })\n      }\n    }).pipe(map(res => res.data))\n  }\n  getAllRoles () {\n    return this.http.get<any>(igixUrls.role.GET).pipe(map(res => res.data))\n  }\n\n  funcTree12\n  /** è·åé¨ä»¶åè¡¨éè¦çäºçº§ bo tree */\n  getFuncTree12 () {\n    if (this.funcTree12) return of(this.funcTree12)\n    return this.getAllFuncs()\n      .pipe(\n        map(funcs => {\n          funcs = funcs.filter(func => parseInt(func.layer) < 3)\n          this.funcTree12 = list2Tree(funcs, {\n            rootParentIdValue: '0',\n            parentIdKey: 'parentId',\n          })\n          return this.funcTree12\n        })\n      )\n  }\n  getQoDatasetDetailsByModuleId (moduleId: string) {\n    return this.http.put<any>(igixUrls.qoDataset.GET_DETAIL_QUERY, {}, {\n      params: {\n        entityFilter: JSON.stringify({\n          FilterConditions: [{\n            FilterField: 'moduleID',\n            Compare: 0,\n            Value: moduleId,\n            Relation: 0\n          }],\n          SortConditions: [],\n          IsUsePagination: true,\n          Pagination: {\n            PageIndex: 1,\n            PageSize: 20, // TODO:\n            PageCount: 0,\n            TotalCount: 0\n          }\n        })\n      }\n    // }, null).pipe(map(res => res.returnValue))\n    }).pipe(map(res => res.returnValue.result))\n  }\n  getQoDatasetDetailById (id: string) {\n    return this.http.put<any>(igixUrls.qoDataset.GET_DETAIL_BY_ID + id, {}).pipe(map(res => res.returnValue))\n  }\n  /**\n   * è·å igix ç¨æ·ä¿¡æ¯\n   * @param reload é»è®¤ä¸ºåï¼ä¸åååºè¯·æ±ï¼ä½¿ç¨å·²ç¼å­çç»æï¼çåéæ°è¯·æ±\n   */\n  userInfoPromise: Promise<UserInfo>\n  getUserInfo (reload = false) {\n    if (reload) this.userInfoPromise = null\n    if (!this.userInfoPromise) this.userInfoPromise = this.http\n      .get<UserInfo>(igixUrls.userInfo.GET)\n      .toPromise()\n    return from(this.userInfoPromise)\n  }\n  getUserAvatar (reload = false) {\n    return this.getUserInfo(reload).pipe(map(userInfo => {\n      if (userInfo && userInfo.userSetting && userInfo.userSetting.imgblob) return userInfo.userSetting.imgblob\n      return null\n    }))\n  }\n  getAllFuncs () {\n    return this.http.get<RtfFunc[]>(igixUrls.func.GET_ALL)\n  }\n  getBAPortletsAll () {\n    return this.http\n      .get<any>(igixUrls.ba.GET_ALL_PORTLETS,\n        // {\n        // responseType: 'text'\n        // }\n      ).pipe(\n        // map(res => JSON.parse(res)),\n        map(res => res.data\n          // .filter(p => p.tab === 1)\n          .map(p => Object.assign(new BAPortlet(), p))))\n  }\n  // getBAPortletById () {\n  //   return this.http\n  //     .get<any>(igixUrls.ba.GET_ALL_PORTLETS)\n  //     .pipe(map(res => res.categoryList.map(p => Object.assign(new BAPortlet(), p))[0]))\n  // }\n\n  getLangsPromise: Promise<Lang[]>\n  getLangs () {\n    if (!this.getLangsPromise) this.getLangsPromise = this.http\n      .get<Lang[]>(igixUrls.langs.GET_ALL)\n      .pipe(map(rtfLangs => rtfLangs.map(rtfLang => new Lang(rtfLang.code, rtfLang.name))))\n      .toPromise()\n    return this.getLangsPromise\n  }\n}\n","/**\n * å­æ®µè½¬æ¢å¨\n * ä¸ºäºè§£å³åç«¯ - æå¡ç«¯æäºå­æ®µä¸ä¸è´ï¼å¨è¯»åãä¿å­ç«¯å¨æè½¬æ¢\n */\n\nimport { map, mergeMap, tap } from 'rxjs/operators'\n/**\n * æ å°è¡¨\n * åç«¯åï¼åç«¯å\n */\nconst fieldMapping = {\n  pageInfo: {\n    title: 'name',\n    // config: 'simpleLayout'\n  },\n  portlet: {\n\n  },\n  widget: {\n\n  }\n}\n/** ååæ å°è¡¨ï¼èªå¨æä¸é¢çæ­£åè¡¨åè¿æ¥ */\nconst fieldMappingInverse = (function () {\n  let resultMapping = {}\n  Object.keys(fieldMapping).forEach(entityType => {\n    resultMapping[entityType] = {}\n    Object.keys(fieldMapping[entityType]).forEach(originKey => {\n      resultMapping[entityType][fieldMapping[entityType][originKey]] = originKey\n    })\n  })\n  return resultMapping\n})()\n\n/**\n * æ¥ååå¯¹è±¡ï¼è½¬æ¢åºæ°å¯¹è±¡\n * @param originEntity å¾è½¬æ¢åå¯¹è±¡\n * @param entityType å¯¹è±¡ç±»åï¼åºä¸º fieldMapping çå±æ§å\n * @param inverse æ¯å¦ååè½¬æ¢ï¼é»è®¤ä¸ºåç«¯ -> åç«¯ï¼\n */\nexport function mapEntityFeilds<T>(originEntity, entityType, inverse = false) {\n  let mapping = inverse ? fieldMappingInverse : fieldMapping\n  let mappedEntity = {}\n\n  Object.keys(originEntity).forEach(key => {\n    if (mapping[entityType].hasOwnProperty(key)) {\n      mappedEntity[mapping[entityType][key]] = originEntity[key]\n    } else {\n      mappedEntity[key] = originEntity[key]\n    }\n  })\n  return mappedEntity as T\n}\n\n/**\n * è¿å rxjs ç map æä½ç¬¦è°ç¨ï¼ç¨æ³ï¼\n * ```js\n * this.http.get(url).pipe(mapFeilds<PageInfo>('pageInfo'))\n * ```\n * å¯å° http è¯·æ±å¾å°çå¯¹è±¡ pipe è½¬æ¢ä¸ºåç«¯éç¨å­æ®µï¼å¯æ¥åæ°ç»æå¯¹è±¡ï¼å¯èªå¨åºåã\n * \n * @param entityType å¯¹è±¡ç±»åï¼åºä¸º fieldMapping çå±æ§å\n * @param inverse æ¯å¦ååè½¬æ¢ï¼é»è®¤ä¸ºåç«¯ -> åç«¯ï¼\n */\n// export function mapList<T> (entityType: string, inverse = false) {\n//   return map(originData => {\n//     if (originData instanceof Array) {\n//       return originData.map(entity => {\n//         return mapEntityFeilds<T>(entity, entityType, inverse)\n//       })\n//     }\n//   })\n// }\n// export function mapEntity<T> (entityType: string, inverse = false) {\n//   return map(originData => {\n//     if (! (originData instanceof Array)) {\n//       return mapEntityFeilds<T>(originData, entityType, inverse)\n//     }\n//   })\n// }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\nimport { addBaseUrl } from '../const';\nimport { PageInfo, PageWithRole, SimplePage } from '../types/page.type';\nimport { mapEntityFeilds } from '../utils/field-mapping';\n\nexport const pageInfoUrls = {\n  GET_BY_ID_MANAGE: `page/`,\n  GET_BY_ID_PERSONAL: `page/pageofuser?pageId=`,\n  GET_ALL_MANAGE: `page/all/mg`,\n  GET_ALL_PERSONAL: `page/pagelistofuser`,\n  GET_BY_ROLE: `pagerole/pagesbyrole?roleId=`,\n  GET_PAGES_WITH_ROLE: `pagerole/all`,\n  SET_TO_ROLE_DEFAULT: `pagerole/settingrolepageenable`, // roleId pageId\n  DELETE: `page/`, // delete + id\n  DELETE_MANAGE: `page/delete/mg`, // post []\n  ADD: `page`,\n  ADD_MANAGE: `page/add/mg`,\n  UPDATE: `page`,\n  UPDATE_MANAGE: `page/update/mg`,\n  COPY: `page/copy`,\n  COPY_MANAGE: `page/copy/mg`,\n  RESET_PAGE: `page/resetsyspage?pageId=`,\n  SELECT_PAGE: `page/changepageselect?pageId=`,\n}\nexport const pageRoles = {\n  SAVE: `pagerole/save?pageId=`,\n  GET_BY_PAGE_ID: `pagerole/getallpagerole?pageId=`,\n}\naddBaseUrl(pageInfoUrls)\naddBaseUrl(pageRoles)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getPagesManage () {\n    return this.http\n      .get<any[]>(pageInfoUrls.GET_ALL_MANAGE)\n      .pipe(map(data => data.map(convertPageInfo)))\n  }\n  getPagesUser () {\n    return this.http\n      .get<SimplePage[]>(pageInfoUrls.GET_ALL_PERSONAL)\n  }\n  getPagesByRole (roleId: string) {\n    return this.http\n      .get<PageWithRole[]>(pageInfoUrls.GET_BY_ROLE + roleId)\n  }\n  getPagesWithRole () {\n    return this.http.get<PageWithRole[]>(pageInfoUrls.GET_PAGES_WITH_ROLE)\n  }\n  setRoleDefaultPage (roleId: string, pageId: string) {\n    return this.http\n      .post(pageInfoUrls.SET_TO_ROLE_DEFAULT, null, {\n        params: { pageId, roleId }\n      }).pipe(this.success())\n  }\n  getPageInfoById (id: string, isManage = false) {\n    return this.http\n      .get<PageInfo>((isManage\n        ? pageInfoUrls.GET_BY_ID_MANAGE\n        : pageInfoUrls.GET_BY_ID_PERSONAL)\n        + id)\n      .pipe(map(data => convertPageInfo(data)))\n  }\n  savePageInfo (pageInfo: PageInfo, isManage = false) {\n    return pageInfo.id\n      ? this.http.post(\n        isManage ? pageInfoUrls.UPDATE_MANAGE : pageInfoUrls.UPDATE,\n        convertPageInfoInverse(pageInfo)\n      ).pipe(this.success())\n      : this.http.put(\n        isManage ? pageInfoUrls.ADD_MANAGE : pageInfoUrls.ADD,\n        convertPageInfoInverse(pageInfo)\n      ).pipe(this.success())\n  }\n  deletePageInfo (id: string) {\n    return this.http\n      .delete(pageInfoUrls.DELETE + id, { responseType: 'text' })\n      .pipe(this.success())\n  }\n  deletePageInfoManage (ids: string[]) {\n    return this.http\n      .post(pageInfoUrls.DELETE_MANAGE, ids)\n      .pipe(this.success())\n  }\n  copyPageInfo (ids: string[], isManage = false) {\n    return this.http\n      .post(isManage ? pageInfoUrls.COPY_MANAGE : pageInfoUrls.COPY, ids, { responseType: 'text' })\n  }\n  resetPage (pageId: string) {\n    return this.http.post(pageInfoUrls.RESET_PAGE + pageId, null)\n  }\n  selectPage (pageId: string) {\n    return this.http.post(pageInfoUrls.SELECT_PAGE + pageId, null)\n  }\n\n  // TODO: ä¸è¯¥å¨è¿ä¾èµ nzmsgï¼åºç§»å°ä½¿ç¨å¤\n  private success () {\n    return tap<any> (\n      () => {\n        // this.nzMsg.success(`æä½æåï¼`, { nzDuration: 1000 })\n      }\n    )\n  }\n  /** page roles */\n  savePageRoles (pageId: string, roleIds: string[]) {\n    return this.http.post(pageRoles.SAVE + pageId, roleIds)\n  }\n  getPageRoles (pageId: string) {\n    return this.http.get<PageWithRole[]>(pageRoles.GET_BY_PAGE_ID + pageId)\n  }\n}\n\n/** pageInfo åç«¯ -> åç«¯, åç«¯ -> åç«¯ è½¬æ¢ */\nexport function convertPageInfo (original) {\n  const result: PageInfo = mapEntityFeilds(original, 'pageInfo')\n  result.config = JSON.parse(result.config as any)\n  return result\n}\nexport function convertPageInfoInverse (pageInfo) {\n  const result: any = mapEntityFeilds(pageInfo, 'pageInfo', true)\n  // ä¿å­æ¶ï¼å é¤ pageInfo.config.layout çåç´ ç portlet\n  result.config.layout = result.config.layout.map(item => {\n    const { instanceId, isBAPortlet, gridsterItem, portletId, link } = item\n    return { instanceId, isBAPortlet, gridsterItem, portletId, link }\n  })\n  result.config = JSON.stringify(result.config)\n  return result\n}\n","import { GridsterItem } from '@gspwidget/gridster'\nimport { Portlet } from './portlet.type'\n\n/** é¡µé¢çä¿å­ç»æ */\nexport class PageInfo {\n  name = ''\n  i18nName = {}\n  config?: PageConfig = new PageConfig()\n  // isSys?: boolean, /** æ¯å¦æ¯ç³»ç»é¢å¶é¡µé¢ï¼ç¨æ·æ æ³ç¼è¾ */\n  creator?: string\n  createTime?: Date\n  modifier?: string\n  modifyTime?: Date\n  pageType?: 'SYSTEM' | 'PUBLIC' | 'PERSONAL'\n  // TODO: å¸æâé¡µé¢ç®¡çâéï¼æå¡ç«¯è¿åçåè¡¨ä¸­ç page å ä¸å½åé¡µé¢åéç»çåè½ç»åè¡¨ï¼å¦ææ§è½æ²¡é®é¢çè¯\n  constructor (\n    public id?: string\n  ) {}\n}\n/** è¿è¡æ¶é¡µé¢å¾å°çé¡µé¢åè¡¨ï¼æ¯è¿ä¹ä¸ªç®åç©æ */\nexport interface SimplePage {\n  pageId: string\n  pageName: string\n  selected: boolean\n  pageType?: 'SYSTEM' | 'PUBLIC' | 'PERSONAL'\n}\n\n/** æå°é¡µé¢ä¸çé¨ä»¶å®ä¾ï¼åç«¯çæ id */\nexport interface PortletInstance {\n  instanceId: string\n  isBAPortlet: boolean\n  gridsterItem: GridsterItem\n  portletId: string\n  /** èå¨éç½® */\n  link?: LinkMap\n  /**\n   * æ¥èªåç«¯ï¼\n   * 1. è®¾è®¡æ¶æå¥\n   * 2. å è½½å®æèµå¼\n   * çæ­£ä¿å­æ¶ä¸å­å®ã\n   */\n  portlet?: Portlet\n}\nexport interface LinkMap {\n  [eventName: string]: {\n    [toPInsId: string]: {\n      dpId?: string\n      active?: boolean\n    }\n  }\n}\nexport class PageConfig {\n  type?: 'gridster' | 'func' = 'gridster'\n  /** å½ type ä¸º gridsterï¼å¸å±ä¿¡æ¯ */\n  layout?: PortletInstance[] | any = []\n  /** å½ type ä¸º funcï¼èå id */\n  funcId?: string\n  /** TODO: å½åé¡µé¢å¶ä»éç½®ï¼æ¯å¦ gridster options */\n}\n\nexport interface PageWithRole {\n  id: string,\n  roleId: string\n  roleName: string\n  pageId: string\n  pageName: string\n  createTime: Date\n  creator: string\n  enable: boolean\n}\n","import { Type } from '@angular/core';\nimport { I18nValue } from './common.type';\n\nexport interface BasicWidgetInfoAotMode {\n  name?: string\n  href?: string\n  baseUrl?: string\n  version: string\n}\nexport interface BasicWidgetInfoDevMode {\n  widgetComponent: Type<unknown>\n  baseUrl?: string,\n  name?: string\n  version: string\n}\nexport type BasicWidgetInfo = BasicWidgetInfoAotMode | BasicWidgetInfoDevMode\n\nexport enum WidgetContainerMode {\n  AOT, /** æ­£å¸¸çå¤é¨ç¯å¢åºè¯¥ç¨ aotï¼æ¯å¦ Dashboard */\n  DEV, /** åé¨ä»¶å¼åé¡¹ç®ç¨è¿ä¸ªï¼æ­¤æ¨¡å¼ä¸ TODO: */\n  JIT\n}\n\nexport interface Size {\n  minCols?: number, maxCols?: number,\n  minRows?: number, maxRows?: number,\n}\nexport interface WidgetLayoutGridConfig {\n  minCols?: number, maxCols?: number,\n  minRows?: number, maxRows?: number,\n  cols?: number, rows?: number /** ååææ¾è¿æ¥çæ¨èé»è®¤å¤§å° */\n}\nexport interface WidgetLayout {\n  grid: WidgetLayoutGridConfig\n}\nexport interface WidgetInfo {\n  /** æ³¨ååçæ */\n  id: string,\n  widgetCode: string, // åé¨ä»¶ç§ç±»\n  href: string,\n  /** æ¥èªåé¨ä»¶éç½®ä¿¡æ¯ */\n  su: string\n  i18nName: I18nValue\n  i18nDesc: I18nValue\n  name: string,\n  version?: string,\n  displayName: string,\n  // moduleName: string,\n  desc?: string,\n  layout?: WidgetLayout,\n  logoImgUrl?: string,\n  previewImgUrl?: string,\n  /** åé¨ä»¶å­æ¾çæ ¹è·¯å¾ï¼æ³¨æè¿ä¸ªç»å°¾ï¼æ²¡æ æ­£ææ  '/' ï¼ */\n  baseUrl?: string\n}\n\nexport interface FilterWidgetEventParam {\n  eventKey: string\n  value: any\n}\n\nexport interface WidgetEventConfig {\n  /** å¯éç½®ä¸ºä»»ææ¾ç¤ºåç§°ï¼æå½éå code */\n  name?: string\n  desc?: string\n  /** äºä»¶å¯¹åºå±æ§åï¼ç¨åºèªå¨èµå¼ï¼ä¸éè¦éç½® */\n  propName?: string\n}\n","export class ArrUtil {\n  static SwapByIndex (arr: any[], i, j) {\n    const tmp = arr[i]\n    arr[i] = arr[j]\n    arr[j] = tmp\n  }\n  static Add (arr: any[], newItem) {\n    arr.push(newItem)\n  }\n  static Up (arr: any[], item) {\n    const i = arr.indexOf(item)\n    if (i < 1) return\n    ArrUtil.SwapByIndex(arr, i, i-1)\n  }\n  static Down (arr: any[], item) {\n    const i = arr.indexOf(item)\n    if (i > arr.length - 2) return\n    ArrUtil.SwapByIndex(arr, i, i+1)\n  }\n  static Remove (arr: any[], item) {\n    const i = arr.indexOf(item)\n    if (i === -1) return\n    arr.splice(i, 1)\n\n    // arr = arr.filter(i => item!==i)\n  }\n  static Unique (arr: any[]) {\n    return Array.from(new Set(arr))\n  }\n  // TODO: æåç´ å¯¹è±¡çæå­æ®µæåº\n}","/**\n * é¨ä»¶ç³»ç»é»è®¤è²ç³»ã\n * ç´æ¥ç¨çç¼ºé·æ¯æ æ³æ¿å° home.config.json ä¸­å®å¶çè²ç³»å¼ï¼\n * å°½éç¨ colors\n */\nexport class PlThemeColors {\n  static pure = [\n    '#F5B805', '#FF9300', '#EC7658', '#897AFB', '#5E6EEB',\n    '#4D97FF', '#01BBC7', '#3DDB88', '#A4EA4D', '#93A3D3',\n    '#000000', '#ffffff'\n  ]\n  static gradient = [\n    '#FBDD0C,#F5B805',\n    '#FFB046,#FF9300',\n    '#FF9579,#EC7658',\n    '#8B99FF,#897AFB',\n    '#7F8DFF,#5E6EEB',\n    '#79B1FF,#4D97FF',\n    '#00DBE9,#01BBC7',\n    '#46FA9B,#3DDB88',\n    '#C1FF73,#A4EA4D',\n    '#B5C7FD,#93A3D3',\n  ]\n  static SetColors (pure: string[], gradient: string[]) {\n    this.SetPure(pure)\n    this.SetGradient(gradient)\n  }\n  static SetPure (pure: string[]) {\n    if (pure && pure.length > 0) this.pure = pure\n  }\n  static SetGradient (gradient: string[]) {\n    if (gradient && gradient.length > 0) this.gradient = gradient\n  }\n\n}\n","\nexport interface AppOptions {\n  /**\n   * æå®å½åæå¼çæ¯èåï¼Menuï¼è¿æ¯åºç¨ï¼Appï¼\n   */\n  appType: string;\n  /*** å¦ææå¼èåï¼funcIdéè¦æå®ï¼appIdãappEntranceå¯ä»¥ä¸ºç©º */\n  funcId: string;\n  /*** å¦ææå¼åºç¨ï¼appIdåappEntranceéè¦æå®ï¼funcIdå¯ä»¥ä¸ºç©º */\n  appId: string;\n  appEntrance: string;\n  tabId?: string;\n  tabName?: string;\n  routeUrl?: string;\n  entityParams?: any;\n  queryStringParams?: Map<string, string>;\n  isReload?: boolean;\n  isJquery?: boolean;\n}\n\n\nexport interface BO {\n  id: string\n  code: string\n  name: string\n  description: string\n  sysInit: string\n  sortOrder: string\n  isDetail: string\n  layer: string\n  type: string\n  parentID: string\n}\n\nexport interface RoleGroup {\n  id: string // \"Sys_Developer\"\n  code: string // \"Sys_Developer\"\n  name: string // \"ç³»ç»å¼å\"\n  path: string // \"0002\"\n  layer: number // 1\n  isDetail: boolean // false\n  sysInit: boolean // false\n  note: string // \"ç³»ç»å¼å\"\n  parentId: string // \"\"\n  sortOrder: number // 2\n  creator: string // \"admin\"\n  createdTime: Date // \"2019-05-10T10:27:51.403\"\n  lastModifier: string // \"admin\"\n  lastModifiedTime: Date // \"2020-03-11T10:37:51.117858\"\n  farris_selectable: boolean // true\n}\n\nexport interface Role {\n  id: string // \"4dd6d21-0f12-43d0-a70e-b1bd7d777a98\"\n  code: string // \"ceshi01\"\n  name: string // \"æµè¯åè½ç»01\"\n  roleGroup: string // \"Sys_Developer\"\n  roleGroupCode: string // \"Sys_Developer\"\n  roleGroupName: string // \"ç³»ç»å¼å\"\n  note: string // null\n  sysInit: boolean // false\n  state: number // 0\n  validFrom: string // null\n  validTo: string // null\n  createdTime: Date // \"2020-03-11T10:36:18.206543\"\n  creator: string // \"admin\"\n  creatorCode: string // \"admin\"\n  creatorName: string // \"ç³»ç»ç®¡çå\"\n  lastModifiedTime: Date // null\n  lastModifier: Date // null\n  lastModifierCode: Date // null\n  lastModifierName: Date // null\n  isRole?: boolean\n}\n\nexport interface Operation {\n  id?: string, name?: string\n}\n\n/**\n * æ¥èªå®¶å¥ç /api/runtime/sys/v1.0/userinfos?infoType=user æ¥å£\n */\nexport interface UserInfo {\n  address: string\n  code: string\n  email: string\n  id: string\n  idCard: string\n  lanName: string\n  languageId: string\n  mobilePhone: string\n  name: string\n  orgId: string\n  orgName: string\n  phone: string\n  qq: string\n  sex: string\n  tenantId: number\n  tenantName: string\n  userId: string\n  userSetting: UserSetting\n  weChat: string\n}\nexport interface UserSetting {\n  id: string\n  img: string\n  imgblob: string\n  userId: string\n}\n\nexport interface InvokeInfo {\n  Type: string;\n  Path: string;\n  Url: string;\n  Image: string;\n  Width: number;\n  Height: number;\n}\n\nexport interface RtfFunc {\n  id: string\n  code: string\n  name: string\n  tenantId: number\n  isModule: boolean\n  isDetail: boolean\n  isSysMenu: boolean\n  parentId: string\n  sortOrder: number\n  bizObjectId: string\n  bizOpId: string\n  icon: string // é»è®¤å¼æ¯null ?\n  invokingConfig: string | InvokeInfo\n  isWorkStation: boolean\n  lastModifiedTime: string\n  lastModifier: string\n  creator: string\n  createdTime: string\n  funcType: FuncType\n  path: string\n  layer: string\n  description: string\n  child: RtfFunc[]\n}\n\nexport enum FuncType {\n  Products = '1',\n  Module = '2',\n  AppGroups = '3',\n  App = '4'\n}\n"]}