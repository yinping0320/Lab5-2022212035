/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { IGIX_HOME_PATH } from "./const";
/**
 * 形如 {key={key=value, key=value}, key={}}
 * 转为 JSON 标准格式
 * @param {?} original
 * @return {?}
 */
export function backendString2Json(original) {
    /** @type {?} */
    var result = original.replace(/\s/g, '') // 去空格
    ;
    result = result.replace(/=/g, ':'); // = 变 :
    result = result.replace(/:/g, '\":'); // : 前加 "
    result = result.replace(/,/g, ',\"'); // , 后加 "
    result = result.replace(/{(?=\w)/g, '{\"'); // 后接字母的 { 后加 "
    return result;
}
/**
 * 用列表构造一棵树。
 * @param {?} list
 * @param {?} __1
 * @return {?}
 */
export function list2Tree(list, _a) {
    var _b = _a.parentIdKey, parentIdKey = _b === void 0 ? 'parentId' : _b, _c = _a.rootParentIdValue, rootParentIdValue = _c === void 0 ? null : _c, _d = _a.idKey, idKey = _d === void 0 ? 'id' : _d, 
    // leafSelectableOnly = true
    // ignoreLeaf = false
    _e = _a.ifIgnore, 
    // leafSelectableOnly = true
    // ignoreLeaf = false
    ifIgnore = _e === void 0 ? (/**
     * @param {?} node
     * @return {?}
     */
    function (node) { return false; }) : _e, 
    // isLeaf = (node) => false,
    _f = _a.beforeProcess, 
    // isLeaf = (node) => false,
    beforeProcess = _f === void 0 ? null : _f, _g = _a.afterProcess, afterProcess = _g === void 0 ? null : _g;
    /**
     * @param {?} nodes
     * @param {?=} layer
     * @return {?}
     */
    function recurseAddChildren(nodes, layer) {
        if (layer === void 0) { layer = 0; }
        nodes.forEach((/**
         * @param {?} node
         * @return {?}
         */
        function (node) {
            if (beforeProcess)
                beforeProcess(node);
            if (!node.layer)
                node.layer = layer;
            node.value = node.key = node[idKey];
            node.label = node.title = node.name;
            /** @type {?} */
            var children = list.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item[parentIdKey] === node[idKey] && !ifIgnore(item); }));
            if (children.length > 0) {
                node.children = children;
                recurseAddChildren(node.children, layer + 1);
            }
            else {
                node.isLeaf = true;
            }
            if (afterProcess)
                afterProcess(node);
        }));
    }
    /** @type {?} */
    var tree = list.filter((/**
     * @param {?} item
     * @return {?}
     */
    function (item) { return !item[parentIdKey] || item[parentIdKey] === rootParentIdValue; }));
    recurseAddChildren(tree);
    return tree;
}
/**
 * @return {?}
 */
export function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (/**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        /** @type {?} */
        var r = Math.random() * 16 | 0;
        /** @type {?} */
        var v = c == 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    }));
}
/**
 * @param {?} src
 * @return {?}
 */
export function appendScript(src) {
    /** @type {?} */
    var body = document.getElementsByTagName('body')[0];
    /** @type {?} */
    var script = document.createElement('script');
    script.src = src;
    body.appendChild(script);
}
/**
 * 加载 css
 * 1. 防重复：如果相同 href 的 link 标签已存在，不会重新加载
 * 2. 同 id 替换：可以替换同 id 的 link 标签
 * @param {?} href
 * @param {?=} eleId
 * @param {?=} allowRepeat
 * @return {?}
 */
export function loadCss(href, eleId, allowRepeat) {
    if (allowRepeat === void 0) { allowRepeat = false; }
    // 防重复
    if (!allowRepeat
        && Array.from(document.querySelectorAll('link')).some((/**
         * @param {?} link
         * @return {?}
         */
        function (link) { return link.href === href; })))
        return;
    // 同 id 替换
    if (eleId) {
        /** @type {?} */
        var themeLink = (/** @type {?} */ (document.getElementById(eleId)));
        if (themeLink) {
            themeLink.href = href;
            return;
        }
    }
    /** @type {?} */
    var head = document.getElementsByTagName('head')[0];
    /** @type {?} */
    var style = document.createElement('link');
    if (eleId)
        style.id = eleId;
    style.type = 'text/css';
    style.rel = 'stylesheet';
    style.href = href;
    head.appendChild(style);
}
/**
 * @param {?} obj
 * @return {?}
 */
export function deepClone(obj) {
    return JSON.parse(JSON.stringify(obj));
}
/**
 * 直接改变数组
 * @param {?} arr
 * @param {?} targetLength
 * @param {?} fillItem
 * @return {?}
 */
export function setArrayLengthTo(arr, targetLength, fillItem) {
    arr.length = targetLength;
    for (var i = 0; i < arr.length; i++) {
        if (!arr[i])
            arr[i] = deepClone(fillItem);
    }
}
/**
 * @return {?}
 */
export function getCurTheme() {
    /** @type {?} */
    var rawThemeKey = localStorage.getItem('gsp_rtf_themesKey')
    // 可能是 default，归一化成 blue
    ;
    // 可能是 default，归一化成 blue
    if (rawThemeKey === 'default' || !rawThemeKey)
        return 'blue';
}
/**
 * 加载
 * 1. 公共 style
 * 2. 公共主题 style
 * @return {?}
 */
export function loadCommonStyleNTheme() {
    /** @type {?} */
    var curTheme = getCurTheme()
    // antd 优先级最低
    ;
    // antd 优先级最低
    loadCss(IGIX_HOME_PATH + "xc-antd-" + curTheme + ".css");
    loadCss(IGIX_HOME_PATH + "plain.css");
    loadCss(IGIX_HOME_PATH + "xc-common.css");
    loadCss(IGIX_HOME_PATH + "xc-common-" + curTheme + ".css");
}
/**
 * 两个 obj 是否结构相同、里面的所有字面值相等，及时内部引用
 * @param {?} obj1
 * @param {?} obj2
 * @return {?}
 */
export function objectLiteralEqual(obj1, obj2) {
    return JSON.stringify(obj1) === JSON.stringify(obj2);
}
/** @type {?} */
export var curLang = localStorage.getItem('languageCode') || 'zh-CHS';
//# sourceMappingURL=data:application/json;base64,