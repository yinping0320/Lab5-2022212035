/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { map, tap } from 'rxjs/operators';
import { addBaseUrl } from '../const';
import { mapEntityFeilds } from '../utils/field-mapping';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
/** @type {?} */
export var pageInfoUrls = {
    GET_BY_ID_MANAGE: "page/",
    GET_BY_ID_PERSONAL: "page/pageofuser?pageId=",
    GET_ALL_MANAGE: "page/all/mg",
    GET_ALL_PERSONAL: "page/pagelistofuser",
    GET_BY_ROLE: "pagerole/pagesbyrole?roleId=",
    GET_PAGES_WITH_ROLE: "pagerole/all",
    SET_TO_ROLE_DEFAULT: "pagerole/settingrolepageenable",
    // roleId pageId
    DELETE: "page/",
    // delete + id
    DELETE_MANAGE: "page/delete/mg",
    // post []
    ADD: "page",
    ADD_MANAGE: "page/add/mg",
    UPDATE: "page",
    UPDATE_MANAGE: "page/update/mg",
    COPY: "page/copy",
    COPY_MANAGE: "page/copy/mg",
    RESET_PAGE: "page/resetsyspage?pageId=",
    SELECT_PAGE: "page/changepageselect?pageId=",
};
/** @type {?} */
export var pageRoles = {
    SAVE: "pagerole/save?pageId=",
    GET_BY_PAGE_ID: "pagerole/getallpagerole?pageId=",
};
addBaseUrl(pageInfoUrls);
addBaseUrl(pageRoles);
var PageRepo = /** @class */ (function () {
    function PageRepo(http) {
        this.http = http;
    }
    /**
     * @return {?}
     */
    PageRepo.prototype.getPagesManage = /**
     * @return {?}
     */
    function () {
        return this.http
            .get(pageInfoUrls.GET_ALL_MANAGE)
            .pipe(map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) { return data.map(convertPageInfo); })));
    };
    /**
     * @return {?}
     */
    PageRepo.prototype.getPagesUser = /**
     * @return {?}
     */
    function () {
        return this.http
            .get(pageInfoUrls.GET_ALL_PERSONAL);
    };
    /**
     * @param {?} roleId
     * @return {?}
     */
    PageRepo.prototype.getPagesByRole = /**
     * @param {?} roleId
     * @return {?}
     */
    function (roleId) {
        return this.http
            .get(pageInfoUrls.GET_BY_ROLE + roleId);
    };
    /**
     * @return {?}
     */
    PageRepo.prototype.getPagesWithRole = /**
     * @return {?}
     */
    function () {
        return this.http.get(pageInfoUrls.GET_PAGES_WITH_ROLE);
    };
    /**
     * @param {?} roleId
     * @param {?} pageId
     * @return {?}
     */
    PageRepo.prototype.setRoleDefaultPage = /**
     * @param {?} roleId
     * @param {?} pageId
     * @return {?}
     */
    function (roleId, pageId) {
        return this.http
            .post(pageInfoUrls.SET_TO_ROLE_DEFAULT, null, {
            params: { pageId: pageId, roleId: roleId }
        }).pipe(this.success());
    };
    /**
     * @param {?} id
     * @param {?=} isManage
     * @return {?}
     */
    PageRepo.prototype.getPageInfoById = /**
     * @param {?} id
     * @param {?=} isManage
     * @return {?}
     */
    function (id, isManage) {
        if (isManage === void 0) { isManage = false; }
        return this.http
            .get((isManage
            ? pageInfoUrls.GET_BY_ID_MANAGE
            : pageInfoUrls.GET_BY_ID_PERSONAL)
            + id)
            .pipe(map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) { return convertPageInfo(data); })));
    };
    /**
     * @param {?} pageInfo
     * @param {?=} isManage
     * @return {?}
     */
    PageRepo.prototype.savePageInfo = /**
     * @param {?} pageInfo
     * @param {?=} isManage
     * @return {?}
     */
    function (pageInfo, isManage) {
        if (isManage === void 0) { isManage = false; }
        return pageInfo.id
            ? this.http.post(isManage ? pageInfoUrls.UPDATE_MANAGE : pageInfoUrls.UPDATE, convertPageInfoInverse(pageInfo)).pipe(this.success())
            : this.http.put(isManage ? pageInfoUrls.ADD_MANAGE : pageInfoUrls.ADD, convertPageInfoInverse(pageInfo)).pipe(this.success());
    };
    /**
     * @param {?} id
     * @return {?}
     */
    PageRepo.prototype.deletePageInfo = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.http
            .delete(pageInfoUrls.DELETE + id, { responseType: 'text' })
            .pipe(this.success());
    };
    /**
     * @param {?} ids
     * @return {?}
     */
    PageRepo.prototype.deletePageInfoManage = /**
     * @param {?} ids
     * @return {?}
     */
    function (ids) {
        return this.http
            .post(pageInfoUrls.DELETE_MANAGE, ids)
            .pipe(this.success());
    };
    /**
     * @param {?} ids
     * @param {?=} isManage
     * @return {?}
     */
    PageRepo.prototype.copyPageInfo = /**
     * @param {?} ids
     * @param {?=} isManage
     * @return {?}
     */
    function (ids, isManage) {
        if (isManage === void 0) { isManage = false; }
        return this.http
            .post(isManage ? pageInfoUrls.COPY_MANAGE : pageInfoUrls.COPY, ids, { responseType: 'text' });
    };
    /**
     * @param {?} pageId
     * @return {?}
     */
    PageRepo.prototype.resetPage = /**
     * @param {?} pageId
     * @return {?}
     */
    function (pageId) {
        return this.http.post(pageInfoUrls.RESET_PAGE + pageId, null);
    };
    /**
     * @param {?} pageId
     * @return {?}
     */
    PageRepo.prototype.selectPage = /**
     * @param {?} pageId
     * @return {?}
     */
    function (pageId) {
        return this.http.post(pageInfoUrls.SELECT_PAGE + pageId, null);
    };
    // TODO: 不该在这依赖 nzmsg，应移到使用处
    // TODO: 不该在这依赖 nzmsg，应移到使用处
    /**
     * @private
     * @return {?}
     */
    PageRepo.prototype.success = 
    // TODO: 不该在这依赖 nzmsg，应移到使用处
    /**
     * @private
     * @return {?}
     */
    function () {
        return tap((/**
         * @return {?}
         */
        function () {
            // this.nzMsg.success(`操作成功！`, { nzDuration: 1000 })
        }));
    };
    /** page roles */
    /**
     * page roles
     * @param {?} pageId
     * @param {?} roleIds
     * @return {?}
     */
    PageRepo.prototype.savePageRoles = /**
     * page roles
     * @param {?} pageId
     * @param {?} roleIds
     * @return {?}
     */
    function (pageId, roleIds) {
        return this.http.post(pageRoles.SAVE + pageId, roleIds);
    };
    /**
     * @param {?} pageId
     * @return {?}
     */
    PageRepo.prototype.getPageRoles = /**
     * @param {?} pageId
     * @return {?}
     */
    function (pageId) {
        return this.http.get(pageRoles.GET_BY_PAGE_ID + pageId);
    };
    PageRepo.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    PageRepo.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ PageRepo.ngInjectableDef = i0.defineInjectable({ factory: function PageRepo_Factory() { return new PageRepo(i0.inject(i1.HttpClient)); }, token: PageRepo, providedIn: "root" });
    return PageRepo;
}());
export { PageRepo };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PageRepo.prototype.http;
}
/**
 * pageInfo 后端 -> 前端, 前端 -> 后端 转换
 * @param {?} original
 * @return {?}
 */
export function convertPageInfo(original) {
    /** @type {?} */
    var result = mapEntityFeilds(original, 'pageInfo');
    result.config = JSON.parse((/** @type {?} */ (result.config)));
    return result;
}
/**
 * @param {?} pageInfo
 * @return {?}
 */
export function convertPageInfoInverse(pageInfo) {
    /** @type {?} */
    var result = mapEntityFeilds(pageInfo, 'pageInfo', true)
    // 保存时，删除 pageInfo.config.layout 的元素的 portlet
    ;
    // 保存时，删除 pageInfo.config.layout 的元素的 portlet
    result.config.layout = result.config.layout.map((/**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        var instanceId = item.instanceId, isBAPortlet = item.isBAPortlet, gridsterItem = item.gridsterItem, portletId = item.portletId, link = item.link;
        return { instanceId: instanceId, isBAPortlet: isBAPortlet, gridsterItem: gridsterItem, portletId: portletId, link: link };
    }));
    result.config = JSON.stringify(result.config);
    return result;
}
//# sourceMappingURL=data:application/json;base64,