/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { camelCase, constantCase } from 'change-case';
import { decrypt, encrypt } from '../utils/encryption';
/**
 * @record
 */
export function ProviderParam() { }
if (false) {
    /** @type {?|undefined} */
    ProviderParam.prototype.label;
    /** @type {?|undefined} */
    ProviderParam.prototype.name;
    /** @type {?|undefined} */
    ProviderParam.prototype.type;
    /** @type {?|undefined} */
    ProviderParam.prototype.sortNo;
    /** @type {?|undefined} */
    ProviderParam.prototype.value;
    /** @type {?|undefined} */
    ProviderParam.prototype.placeholder;
    /** @type {?|undefined} */
    ProviderParam.prototype.options;
    /** @type {?|undefined} */
    ProviderParam.prototype.checked;
    /** @type {?|undefined} */
    ProviderParam.prototype.required;
    /** @type {?|undefined} */
    ProviderParam.prototype.encrypted;
}
// TODO: 数据源相关的，要放在 dashboard core 中吗
var 
// TODO: 数据源相关的，要放在 dashboard core 中吗
Datasrc = /** @class */ (function () {
    function Datasrc(providerName) {
        this.providerName = providerName;
        this.i18nName = {};
        this.config = {};
    }
    return Datasrc;
}());
// TODO: 数据源相关的，要放在 dashboard core 中吗
export { Datasrc };
if (false) {
    /** @type {?} */
    Datasrc.prototype.id;
    /** @type {?} */
    Datasrc.prototype.name;
    /** @type {?} */
    Datasrc.prototype.i18nName;
    /** @type {?} */
    Datasrc.prototype.config;
    /** @type {?} */
    Datasrc.prototype.groupName;
    /** @type {?} */
    Datasrc.prototype.creator;
    /** @type {?} */
    Datasrc.prototype.createTime;
    /** @type {?} */
    Datasrc.prototype.providerName;
}
/**
 * @record
 */
export function DataProvider() { }
if (false) {
    /** @type {?} */
    DataProvider.prototype.label;
    /** @type {?} */
    DataProvider.prototype.name;
}
/**
 * @record
 */
export function DataParamDto() { }
if (false) {
    /** @type {?|undefined} */
    DataParamDto.prototype.id;
    /** @type {?|undefined} */
    DataParamDto.prototype.i18nName;
    /** @type {?|undefined} */
    DataParamDto.prototype.type;
    /** @type {?|undefined} */
    DataParamDto.prototype.config;
    /** @type {?|undefined} */
    DataParamDto.prototype.datasetId;
    /** @type {?|undefined} */
    DataParamDto.prototype.name;
    /** @type {?|undefined} */
    DataParamDto.prototype.value;
}
/**
 * 取数参数
 */
var /**
 * 取数参数
 */
DataParam = /** @class */ (function () {
    function DataParam() {
        this.type = 'QUERY_PARAM';
        this.default = null;
    }
    /**
     * @param {?} dp
     * @return {?}
     */
    DataParam.ToDto = /**
     * @param {?} dp
     * @return {?}
     */
    function (dp) {
        var i18nName = dp.i18nName, type = dp.type, config = dp.config, id = dp.id;
        return (/** @type {?} */ ({
            id: id, i18nName: i18nName, config: config,
            type: camelCase(type),
            value: dp.default,
        }));
    };
    /**
     * @param {?} dpDto
     * @return {?}
     */
    DataParam.FromDto = /**
     * @param {?} dpDto
     * @return {?}
     */
    function (dpDto) {
        return (/** @type {?} */ ({
            id: dpDto.id,
            i18nName: dpDto.i18nName,
            type: constantCase(dpDto.type),
            config: dpDto.config,
            datasetId: dpDto.datasetId,
            name: dpDto.name,
            default: dpDto.value,
        }));
    };
    return DataParam;
}());
/**
 * 取数参数
 */
export { DataParam };
if (false) {
    /** @type {?} */
    DataParam.prototype.id;
    /** @type {?} */
    DataParam.prototype.name;
    /** @type {?} */
    DataParam.prototype.i18nName;
    /** @type {?} */
    DataParam.prototype.type;
    /** @type {?} */
    DataParam.prototype.config;
    /** @type {?} */
    DataParam.prototype.default;
    /** @type {?} */
    DataParam.prototype.datasetId;
}
/**
 * @record
 */
export function DatasetDto() { }
if (false) {
    /** @type {?|undefined} */
    DatasetDto.prototype.id;
    /** @type {?|undefined} */
    DatasetDto.prototype.name;
    /** @type {?|undefined} */
    DatasetDto.prototype.datasourceId;
    /** @type {?|undefined} */
    DatasetDto.prototype.i18nName;
    /** @type {?|undefined} */
    DatasetDto.prototype.datasourceName;
    /** @type {?|undefined} */
    DatasetDto.prototype.dimensions;
    /** @type {?|undefined} */
    DatasetDto.prototype.creationTime;
    /** @type {?|undefined} */
    DatasetDto.prototype.method;
    /** @type {?|undefined} */
    DatasetDto.prototype.parameters;
    /** @type {?|undefined} */
    DatasetDto.prototype.config;
    /** @type {?|undefined} */
    DatasetDto.prototype.dataParamDto;
}
var DatasetParameter = /** @class */ (function () {
    function DatasetParameter(name, value, sortNo, isExpression) {
        if (isExpression === void 0) { isExpression = true; }
        this.name = name;
        this.value = value;
        this.sortNo = sortNo;
        this.isExpression = isExpression;
    }
    return DatasetParameter;
}());
export { DatasetParameter };
if (false) {
    /** @type {?} */
    DatasetParameter.prototype.name;
    /** @type {?} */
    DatasetParameter.prototype.value;
    /** @type {?} */
    DatasetParameter.prototype.sortNo;
    /** @type {?} */
    DatasetParameter.prototype.isExpression;
}
/**
 * @record
 */
function AnyKey() { }
var Dataset = /** @class */ (function () {
    function Dataset() {
        // datasrc?: Datasrc
        this.config = {};
        this.cols = {
            dimensions: [],
            measures: [],
        };
        this.dataParams = [];
    }
    /**
     * @return {?}
     */
    Dataset.create = /**
     * @return {?}
     */
    function () {
        return new Dataset();
    };
    /**
     * @param {?} dataset
     * @return {?}
     */
    Dataset.toDto = /**
     * @param {?} dataset
     * @return {?}
     */
    function (dataset) {
        var id = dataset.id, name = dataset.name, datasrcId = dataset.datasrcId, datasrcName = dataset.datasrcName, cols = dataset.cols, creationTime = dataset.creationTime, config = dataset.config, dataParams = dataset.dataParams, i18nName = dataset.i18nName;
        return {
            id: id, name: name, creationTime: creationTime, i18nName: i18nName,
            datasourceId: datasrcId,
            datasourceName: datasrcName,
            dimensions: cols.dimensions,
            config: encrypt(JSON.stringify(config)),
            dataParamDto: dataParams.map(DataParam.ToDto)
        };
    };
    /**
     * @param {?} datasetDto
     * @return {?}
     */
    Dataset.fromDto = /**
     * @param {?} datasetDto
     * @return {?}
     */
    function (datasetDto) {
        var id = datasetDto.id, name = datasetDto.name, datasourceId = datasetDto.datasourceId, datasourceName = datasetDto.datasourceName, dimensions = datasetDto.dimensions, creationTime = datasetDto.creationTime, method = datasetDto.method, parameters = datasetDto.parameters, i18nName = datasetDto.i18nName, config = datasetDto.config, dataParamDto = datasetDto.dataParamDto;
        /** @type {?} */
        var parsedConfig = null;
        try {
            parsedConfig = JSON.parse(decrypt(config));
        }
        catch (error) {
        }
        if (!parsedConfig)
            parsedConfig = {};
        return {
            // ...datasetDto,
            id: id, name: name, creationTime: creationTime, i18nName: i18nName,
            datasrcId: datasourceId,
            datasrcName: datasourceName,
            cols: { dimensions: dimensions },
            config: parsedConfig,
            dataParams: dataParamDto ? dataParamDto.map(DataParam.FromDto) : [],
        };
    };
    return Dataset;
}());
export { Dataset };
if (false) {
    /** @type {?} */
    Dataset.prototype.id;
    /** @type {?} */
    Dataset.prototype.name;
    /** @type {?} */
    Dataset.prototype.product;
    /** @type {?} */
    Dataset.prototype.module;
    /** @type {?} */
    Dataset.prototype.creator;
    /** @type {?} */
    Dataset.prototype.modifier;
    /** @type {?} */
    Dataset.prototype.creationTime;
    /** @type {?} */
    Dataset.prototype.modifyTime;
    /** @type {?} */
    Dataset.prototype.datasrcId;
    /** @type {?} */
    Dataset.prototype.datasrcName;
    /** @type {?} */
    Dataset.prototype.i18nName;
    /** @type {?} */
    Dataset.prototype.config;
    /** @type {?} */
    Dataset.prototype.cols;
    /** @type {?} */
    Dataset.prototype.dataParams;
}
var Dimension = /** @class */ (function () {
    function Dimension() {
    }
    return Dimension;
}());
export { Dimension };
if (false) {
    /** @type {?} */
    Dimension.prototype.name;
    /** @type {?} */
    Dimension.prototype.label;
    /** @type {?} */
    Dimension.prototype.i18nLabel;
    /** @type {?} */
    Dimension.prototype.type;
    /** @type {?} */
    Dimension.prototype.typeName;
    /** @type {?} */
    Dimension.prototype.javaClassName;
    /** @type {?} */
    Dimension.prototype.groupName;
    /** @type {?} */
    Dimension.prototype.comment;
    /** @type {?} */
    Dimension.prototype.notNull;
}
/**
 * @record
 */
export function Filter() { }
if (false) {
    /** @type {?|undefined} */
    Filter.prototype.hasValue;
    /** @type {?|undefined} */
    Filter.prototype.filterExpression;
}
/** @enum {string} */
var ComputedType = {
    Count: 'Count',
    Sum: 'Sum',
    Max: 'Max',
    Min: 'Min',
    Avg: 'Avg',
    Expression: 'Expression',
};
export { ComputedType };
/** @enum {string} */
var AggType = {
    Table: 'Table',
    CroosTable: 'CroosTable',
};
export { AggType };
var ComputedCol = /** @class */ (function (_super) {
    tslib_1.__extends(ComputedCol, _super);
    function ComputedCol(expression) {
        var _this = _super.call(this) || this;
        _this.expression = expression;
        _this.computeType = ComputedType.Expression;
        return _this;
    }
    return ComputedCol;
}(Dimension));
export { ComputedCol };
if (false) {
    /** @type {?} */
    ComputedCol.prototype.computeType;
    /**
     * @type {?}
     * @private
     */
    ComputedCol.prototype.expression;
}
/**
 * @record
 */
export function Col() { }
/**
 * @record
 */
export function Row() { }
/**
 * @record
 */
export function AggDto() { }
if (false) {
    /** @type {?|undefined} */
    AggDto.prototype.id;
    /** @type {?|undefined} */
    AggDto.prototype.dataSetId;
    /** @type {?|undefined} */
    AggDto.prototype.dataSetName;
    /** @type {?|undefined} */
    AggDto.prototype.resource;
    /** @type {?|undefined} */
    AggDto.prototype.resourceId;
    /** @type {?|undefined} */
    AggDto.prototype.aggregationType;
    /** @type {?|undefined} */
    AggDto.prototype.columnConfigs;
    /** @type {?|undefined} */
    AggDto.prototype.rowConfigs;
    /** @type {?|undefined} */
    AggDto.prototype.filterConfigs;
    /** @type {?|undefined} */
    AggDto.prototype.computedExpressionConfigs;
}
var Agg = /** @class */ (function () {
    function Agg() {
        this.cols = [];
        this.rows = [];
        this.filters = [];
        this.computedCols = [];
    }
    /**
     * @param {?} agg
     * @return {?}
     */
    Agg.toDto = /**
     * @param {?} agg
     * @return {?}
     */
    function (agg) {
        var id = agg.id, datasetId = agg.datasetId, resource = agg.resource, resourceId = agg.resourceId, aggType = agg.aggType, cols = agg.cols, rows = agg.rows, filters = agg.filters, computedCols = agg.computedCols;
        return (/** @type {?} */ ({
            id: id,
            dataSetId: datasetId,
            resource: resource,
            resourceId: resourceId,
            aggregationType: aggType,
            columnConfigs: cols,
            rowConfigs: rows,
            filterConfigs: filters,
            computedExpressionConfigs: computedCols
        }));
    };
    /**
     * @param {?} aggDto
     * @return {?}
     */
    Agg.fromDto = /**
     * @param {?} aggDto
     * @return {?}
     */
    function (aggDto) {
        var id = aggDto.id, dataSetId = aggDto.dataSetId, dataSetName = aggDto.dataSetName, resource = aggDto.resource, resourceId = aggDto.resourceId, aggregationType = aggDto.aggregationType, columnConfigs = aggDto.columnConfigs, rowConfigs = aggDto.rowConfigs, filterConfigs = aggDto.filterConfigs, computedExpressionConfigs = aggDto.computedExpressionConfigs;
        return (/** @type {?} */ ({
            id: id,
            datasetId: dataSetId,
            datasetName: dataSetName,
            resource: resource,
            resourceId: resourceId,
            aggType: aggregationType,
            cols: columnConfigs,
            rows: rowConfigs,
            filters: filterConfigs,
            computedCols: computedExpressionConfigs
        }));
    };
    return Agg;
}());
export { Agg };
if (false) {
    /** @type {?} */
    Agg.prototype.id;
    /** @type {?} */
    Agg.prototype.datasetId;
    /** @type {?} */
    Agg.prototype.datasetName;
    /** @type {?} */
    Agg.prototype.resource;
    /** @type {?} */
    Agg.prototype.resourceId;
    /** @type {?} */
    Agg.prototype.aggType;
    /** @type {?} */
    Agg.prototype.cols;
    /** @type {?} */
    Agg.prototype.rows;
    /** @type {?} */
    Agg.prototype.filters;
    /** @type {?} */
    Agg.prototype.computedCols;
}
/** @enum {string} */
var AggregationResultSetType = {
    Table: 'Table',
    CroosTable: 'CroosTable',
};
export { AggregationResultSetType };
/**
 * 数据服务实际返回的结构
 * @record
 */
export function AggResult() { }
if (false) {
    /** @type {?|undefined} */
    AggResult.prototype.tableData;
    /** @type {?|undefined} */
    AggResult.prototype.dimensions;
    /** @type {?|undefined} */
    AggResult.prototype.columns;
    /**
     * ?
     * @type {?|undefined}
     */
    AggResult.prototype.type;
    /**
     * ?
     * @type {?|undefined}
     */
    AggResult.prototype.getResultSet;
    /**
     * ?
     * @type {?|undefined}
     */
    AggResult.prototype.data;
}
/**
 * @record
 */
export function Result() { }
if (false) {
    /** @type {?} */
    Result.prototype.data;
    /** @type {?} */
    Result.prototype.columns;
}
/**
 * widget component 需要外部传入的数据格式。上面的服务符合此结构。
 * @record
 */
export function DataWithDims() { }
if (false) {
    /** @type {?|undefined} */
    DataWithDims.prototype.dimensions;
    /** @type {?|undefined} */
    DataWithDims.prototype.tableData;
}
/**
 * 获取数据时传服务端的 dp + value
 */
var /**
 * 获取数据时传服务端的 dp + value
 */
DpValue = /** @class */ (function () {
    function DpValue() {
    }
    /**
     * @param {?} dpValue
     * @return {?}
     */
    DpValue.toDto = /**
     * @param {?} dpValue
     * @return {?}
     */
    function (dpValue) {
        return (/** @type {?} */ ({
            dataParamId: dpValue.dpId,
            value: dpValue.value
        }));
    };
    return DpValue;
}());
/**
 * 获取数据时传服务端的 dp + value
 */
export { DpValue };
if (false) {
    /** @type {?} */
    DpValue.prototype.dpId;
    /** @type {?} */
    DpValue.prototype.value;
}
/**
 * @record
 */
export function DpValueDto() { }
if (false) {
    /** @type {?} */
    DpValueDto.prototype.dataParamId;
    /** @type {?} */
    DpValueDto.prototype.value;
}
/**
 * @record
 */
export function RuntimeAggOptionDto() { }
if (false) {
    /** @type {?} */
    RuntimeAggOptionDto.prototype.dimensions;
    /** @type {?} */
    RuntimeAggOptionDto.prototype.indicators;
}
var Indicator = /** @class */ (function () {
    function Indicator() {
        this.aggFn = 4;
    }
    return Indicator;
}());
export { Indicator };
if (false) {
    /** @type {?} */
    Indicator.prototype.dimName;
    /** @type {?} */
    Indicator.prototype.aggFn;
}
var RuntimeAggOption = /** @class */ (function () {
    function RuntimeAggOption() {
        this.dimensions = [];
        this.indicators = [new Indicator()];
    }
    /**
     * @param {?} runtimeAgg
     * @return {?}
     */
    RuntimeAggOption.toDto = /**
     * @param {?} runtimeAgg
     * @return {?}
     */
    function (runtimeAgg) {
        if (!runtimeAgg)
            return;
        return (/** @type {?} */ ({
            dimensions: runtimeAgg.dimensions,
            indicators: runtimeAgg.indicators.map((/**
             * @param {?} ind
             * @return {?}
             */
            function (ind) { return ({
                type: ind.aggFn,
                name: ind.dimName
            }); }))
        }));
    };
    return RuntimeAggOption;
}());
export { RuntimeAggOption };
if (false) {
    /** @type {?} */
    RuntimeAggOption.prototype.dimensions;
    /** @type {?} */
    RuntimeAggOption.prototype.indicators;
}
//# sourceMappingURL=data:application/json;base64,