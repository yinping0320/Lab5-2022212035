{"version":3,"file":"gspwidget-util.js.map","sources":["ng://@gspwidget/util/lib/util.service.ts","ng://@gspwidget/util/lib/util.component.ts","ng://@gspwidget/util/lib/rtf-util.service.ts","ng://@gspwidget/util/lib/trans.pipe.ts","ng://@gspwidget/util/lib/util.module.ts","ng://@gspwidget/util/lib/const.ts","ng://@gspwidget/util/lib/misc.ts","ng://@gspwidget/util/lib/igix-util.service.ts","ng://@gspwidget/util/lib/types/portlet.type.ts","ng://@gspwidget/util/lib/repositories/widget.repo.ts","ng://@gspwidget/util/lib/repositories/portlet.repo.ts","ng://@gspwidget/util/lib/utils/encryption.ts","ng://@gspwidget/util/lib/types/data.type.ts","ng://@gspwidget/util/lib/repositories/dataset.repo.ts","ng://@gspwidget/util/lib/repositories/datasrc.repo.ts","ng://@gspwidget/util/lib/types/common.type.ts","ng://@gspwidget/util/lib/repositories/igix.repo.ts","ng://@gspwidget/util/lib/utils/field-mapping.ts","ng://@gspwidget/util/lib/repositories/page.repo.ts","ng://@gspwidget/util/lib/types/igix.type.ts","ng://@gspwidget/util/lib/types/page.type.ts","ng://@gspwidget/util/lib/types/widget.type.ts","ng://@gspwidget/util/lib/arr.ts","ng://@gspwidget/util/lib/colors.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  // TODO: ç§»èµ°\n  uploadFile (url: string, content: { [key: string]: File | any }) {\n    const formData = new FormData()\n    Object.keys(content).forEach(key => {\n      // TODO: å¤æ­æä»¶ç±»åãappend name ä¸ºå¥å»æäºï¼é®é³ä»\n      if (key === 'file') {\n        formData.append(key, content[key])\n      } else if (key === 'i18nName'||key === 'i18nDesc') {\n        formData.append(key, JSON.stringify(content[key]))\n      } else {\n        formData.append(key, content[key])\n      }\n    })\n    return this.http.post(url, formData, { responseType: 'text' })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-util',\n  template: `\n    <p>\n      util works!\n    </p>\n  `,\n  styles: []\n})\nexport class UtilComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AppOptions } from '../public-api';\n\nconst WINDOW_RTF_KEY = 'gspframeworkService'\n\nexport interface RtfTabChangeEvent {\n  appEntrance: string\n  appId: string\n  appType: string\n  funcId: string\n  tabId: string\n  tabName: string\n}\n\n@Injectable()\nexport class RtfUtilService {\n\n  constructor (\n    private translate: TranslateService\n  ) { }\n\n  // TODO: queryParamArray æ¯ä¸ª array å°±è¡\n  openMenu (funcId: string, queryParamArray?: Map<string, string>, tabId?: string, isReload?: boolean) {\n    (window as any).gspframeworkService.rtf.func.openMenu({\n      appType: 'menu',\n      funcId, tabId, isReload,\n      appId: '', appEntrance: '',\n      queryStringParams: new Map(queryParamArray)\n    } as AppOptions)\n  }\n  closeMenu (funcId: string, tabId?: string) {\n    (window as any).gspframeworkService.rtf.func.close({\n      appType: 'menu',\n      funcId, tabId,\n      appId: '', appEntrance: ''\n    } as AppOptions)\n  }\n  openApp (appId: string) {\n    (window as any).gspframeworkService.rtf.func.openMenu({\n      appType: 'app',\n      funcId: '',\n      appId,\n      appEntrance: '',\n    } as AppOptions);\n  }\n  public openUserInfoMenu () {\n    const { rtf } = window[WINDOW_RTF_KEY]\n    const frmEventSvc = rtf.frmEvent\n    const sessionSvc = rtf.adapter.adatperSerice().session\n    this.translate.get('userInfo').subscribe(txt => {\n      frmEventSvc.eventFire(`farrisapp-click`, {\n        active: false,\n        code: 'userInfo',\n        src: '/platform/runtime/sys/web/userinfo/index.html',\n        sessionid: sessionSvc.getUserSessionId(),\n        id: 'userinfo',\n        appType: '',\n        FuncName: txt\n      })\n    })\n  }\n  closeCurRtfTab (route: ActivatedRoute) {\n    const { tabId, funcId } = route.snapshot.queryParams\n    this.closeMenu(funcId, tabId)\n  }\n\n  onRtfTabChangeToMe (route: ActivatedRoute, condition?: (toTabId: string, curTabId: string) => boolean) {\n    const onRtfTabChangeToMe$ = new EventEmitter()\n    const { tabId: curTabId } = route.snapshot.queryParams\n    onRtfTabChange().subscribe((e: RtfTabChangeEvent) => {\n      if (!condition) condition = (pToTabId: string, pCurTabId: string) => pToTabId === pCurTabId\n      if (condition(e.tabId, curTabId)) {\n        onRtfTabChangeToMe$.emit(e)\n      }\n    })\n    return onRtfTabChangeToMe$\n  }\n}\n\nconst onRtfTabChange$ = new EventEmitter<RtfTabChangeEvent>()\nlet funcSwitchEventRegistered = false\n/** ç¨å½æ°æ¯ä¸ºäºå»¶è¿æ³¨åäºä»¶ï¼å¦å rtf service å¯è½è¿æ²¡æå¨ window ä¸ */\nexport function onRtfTabChange () {\n  if (!funcSwitchEventRegistered && window[WINDOW_RTF_KEY]) {\n    funcSwitchEventRegistered = true\n    window[WINDOW_RTF_KEY].rtf.frmEvent.eventListener('funcSwitchEvent', (e: RtfTabChangeEvent) => {\n      onRtfTabChange$.emit(e)\n    })\n  }\n  return onRtfTabChange$\n}\n","import { Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\n@Pipe({\n  name: 'trans',\n})\nexport class TransPipe implements PipeTransform, OnDestroy {\n  constructor(\n    private translate: TranslateService,\n  ) {\n  }\n  // TODO: ä¸å çè¯ï¼åèµ°è·¯ç±æ¶ä¼æ¥é provider.ngOnChanges is not a function\n  ngOnDestroy(): void {\n  }\n  transform(query: string, ...args: any[]): any {\n    const { translations, currentLang } = this.translate\n    if (translations && translations[currentLang] && translations[currentLang][query]) {\n      return translations[currentLang][query]\n    }\n    return query\n  }\n}\n\n// @Injectable()\n// @Pipe({\n//   name: 'trans',\n//   pure: false // required to update the value when the promise is resolved\n// })\n// export class TransPipe implements PipeTransform, OnDestroy {\n//   value: string = '';\n//   lastKey: string;\n//   lastParams: any[];\n//   onTranslationChange: Subscription;\n//   onLangChange: Subscription;\n//   onDefaultLangChange: Subscription;\n\n//   constructor(private translate: TranslateService, private _ref: ChangeDetectorRef) {\n//   }\n\n//   updateValue(key: string, interpolateParams?: Object, translations?: any): void {\n//     let onTranslation = (res: string) => {\n//       this.value = res !== undefined ? res : key;\n//       this.lastKey = key;\n//       this._ref.markForCheck();\n//     };\n//     if (translations) {\n//       let res = this.translate.getParsedResult(translations, key, interpolateParams);\n//       if (isObservable(res.subscribe)) {\n//         res.subscribe(onTranslation);\n//       } else {\n//         onTranslation(res);\n//       }\n//     }\n//     this.translate.get(key, interpolateParams).subscribe(onTranslation);\n//   }\n\n//   transform(query: string, ...args: any[]): any {\n//     // TODO: å°±ä¸ºäºå¥è¿ä¸ª\n//     args = [{ value: query }]\n//     if (!query || !query.length) {\n//       return query;\n//     }\n\n//     // if we ask another time for the same key, return the last value\n//     if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n//       return this.value;\n//     }\n\n//     let interpolateParams: Object;\n//     if (isDefined(args[0]) && args.length) {\n//       if (typeof args[0] === 'string' && args[0].length) {\n//         // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n//         // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n//         let validArgs: string = args[0]\n//           .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\n//           .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\n//         try {\n//           interpolateParams = JSON.parse(validArgs);\n//         } catch (e) {\n//           throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n//         }\n//       } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n//         interpolateParams = args[0];\n//       }\n//     }\n\n//     // store the query, in case it changes\n//     this.lastKey = query;\n\n//     // store the params, in case they change\n//     this.lastParams = args;\n\n//     // set the value\n//     this.updateValue(query, interpolateParams);\n\n//     // if there is a subscription to onLangChange, clean it\n//     this._dispose();\n\n//     // subscribe to onTranslationChange event, in case the translations change\n//     if (!this.onTranslationChange) {\n//       this.onTranslationChange = this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\n//         if (this.lastKey && event.lang === this.translate.currentLang) {\n//           this.lastKey = null;\n//           this.updateValue(query, interpolateParams, event.translations);\n//         }\n//       });\n//     }\n\n//     // subscribe to onLangChange event, in case the language changes\n//     if (!this.onLangChange) {\n//       this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n//         if (this.lastKey) {\n//           this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n//           this.updateValue(query, interpolateParams, event.translations);\n//         }\n//       });\n//     }\n\n//     // subscribe to onDefaultLangChange event, in case the default language changes\n//     if (!this.onDefaultLangChange) {\n//       this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\n//         if (this.lastKey) {\n//           this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n//           this.updateValue(query, interpolateParams);\n//         }\n//       });\n//     }\n\n//     return this.value;\n//   }\n\n//   /**\n//    * Clean any existing subscription to change events\n//    */\n//   private _dispose(): void {\n//     if (typeof this.onTranslationChange !== 'undefined') {\n//       this.onTranslationChange.unsubscribe();\n//       this.onTranslationChange = undefined;\n//     }\n//     if (typeof this.onLangChange !== 'undefined') {\n//       this.onLangChange.unsubscribe();\n//       this.onLangChange = undefined;\n//     }\n//     if (typeof this.onDefaultLangChange !== 'undefined') {\n//       this.onDefaultLangChange.unsubscribe();\n//       this.onDefaultLangChange = undefined;\n//     }\n//   }\n\n//   ngOnDestroy(): void {\n//     this._dispose();\n//   }\n// }\n// export function equals(o1: any, o2: any): boolean {\n//   if (o1 === o2) return true;\n//   if (o1 === null || o2 === null) return false;\n//   if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n//   let t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\n//   if (t1 == t2 && t1 == 'object') {\n//     if (Array.isArray(o1)) {\n//       if (!Array.isArray(o2)) return false;\n//       if ((length = o1.length) == o2.length) {\n//         for (key = 0; key < length; key++) {\n//           if (!equals(o1[key], o2[key])) return false;\n//         }\n//         return true;\n//       }\n//     } else {\n//       if (Array.isArray(o2)) {\n//         return false;\n//       }\n//       keySet = Object.create(null);\n//       for (key in o1) {\n//         if (!equals(o1[key], o2[key])) {\n//           return false;\n//         }\n//         keySet[key] = true;\n//       }\n//       for (key in o2) {\n//         if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n//           return false;\n//         }\n//       }\n//       return true;\n//     }\n//   }\n//   return false;\n// }\n// /* tslint:enable */\n\n// export function isDefined(value: any): boolean {\n//   return typeof value !== 'undefined' && value !== null;\n// }","import { ChangeDetectorRef, NgModule } from '@angular/core';\nimport { RtfUtilService } from './rtf-util.service';\nimport { UtilComponent } from './util.component';\nimport { TransPipe } from './trans.pipe';\nimport { TranslateModule, TranslatePipe } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [UtilComponent, TransPipe],\n  imports: [\n    TranslateModule,\n  ],\n  providers: [\n    RtfUtilService,\n  ],\n  exports: [UtilComponent, TransPipe]\n})\nexport class UtilModule { }\n","/**\n * æ­¤å¸¸éä»£è¡¨âé¨ä»¶ç³»ç»âåâDashboardâä¾èµçæä»¶çä½ç½®ã\n * dashboard æ¬èº«ä¸éè¦æ­¤å¼ï¼ç©ºä¸²å¼å¤´å³å¯å¨è¿è¡æ¶åå°é¨ç½²ç®å½ï¼ä¸è¦ç¨å®ã\n * å¯¹äºå¯è½è¢«ç¨å¨ dashboard ä¹å¤çä»£ç ï¼æ¯å¦å ä¸ªå¬å±åºç­ï¼\n * å¿é¡»ç¨å®æ¾å°ç»å¯¹ä½ç½®ï¼ä»¥å½ä»£ç è¿è¡å¨å¶ä»é¡¹ç®ãé¨ç½²å¨å¶ä»å°æ¹æ¶è½è·åå°é¨ä»¶è¿è¡æ¶ä¾èµã\n */\n/** éè¿ ls ä¸­ LS_LOAD_LOCAL_ASSET æ è®°å¤æ­æ¯å¦å è½½ localhost/assetsãä»ç¨äºé¨ä»¶ç³»ç»å¼åäººåï¼åªè½æå¨ä¿®æ¹ ls ä¸­çæ è®°å¼ã */\nexport const LS_LOAD_LOCAL_ASSET = 'LS_LOAD_LOCAL_ASSET'\nconst loadLocalAsset = localStorage.getItem(LS_LOAD_LOCAL_ASSET)\nexport const IGIX_HOME_PATH = loadLocalAsset ? `` : `/platform/runtime/sys/web/home/`\n\nexport const BASE_URL = `/api/runtime/epp/v1.0/`\nexport function addBaseUrl (node) {\n  Object.keys(node).forEach(key => {\n    if (typeof node[key] === 'string') {\n      node[key] = BASE_URL + node[key]\n    } else {\n      addBaseUrl(node[key])\n    }\n  })\n}\n/** æ°æ®æºç¸å³ç base url, ä¸ºäºé²æ­¢è·å¶ä»çä¸å. è¥ç¸å, å¯å æ */\n// const DATA_PREFIX = `/jersey`\nexport const DATA_PREFIX = `data`\nexport const FILTERS_WIDGET_NAME = 'filters'\nexport const FILTERS_WIDGET_FILTERS_PROP_NAME = 'filters'\nexport const FILTERS_WIDGET_PROP_NAME = 'change'\n\nexport const DESIGNER_CONFIG = {\n  PAGE_DESIGNER_ID: `Epp-pagedesigner`,\n  PAGE_RUNTIME_ID: `Epp-pageruntime`\n}\nexport const dimensionTypeConfig = {\n  text: {\n    list: ['STRING', 'TEXT'],\n    color: '#2196F3',\n    iconName: 'texture'\n  },\n  number: { // TODO: integer\n    list: ['SHORT', 'LONG', 'FLOAT', 'DOUBLE', 'DECIMAL', 'INTEGER', 'INTETER'],\n    color: '#e91e63',\n    iconName: 'device_hub'\n  },\n  date: {\n    list: ['DATETIME'],\n    color: '#ff9800',\n    iconName: 'access_time'\n  },\n  byte: {\n    list: ['BYTE', 'BYTES'],\n    color: '#4caf50',\n    iconName: 'texture'\n  },\n  boolean: {\n    list: ['BOOLEAN', 'UNKNOWN'],\n    color: '#3f51b5',\n    iconName: 'invert_colors'\n  },\n  unknown: {\n    list: ['UNKNOWN'],\n    color: '#3f51b5',\n    iconName: 'help'\n  }\n}\n","import { IGIX_HOME_PATH } from \"./const\"\n\n/**\n * å½¢å¦ {key={key=value, key=value}, key={}}\n * è½¬ä¸º JSON æ åæ ¼å¼\n */\nexport function backendString2Json (original: string) {\n  let result = original.replace(/\\s/g, '')    // å»ç©ºæ ¼\n  result = result.replace(/=/g, ':')    // = å :\n  result = result.replace(/:/g, '\\\":')  // : åå  \"\n  result = result.replace(/,/g, ',\\\"')  // , åå  \"\n  result = result.replace(/{(?=\\w)/g, '{\\\"')  // åæ¥å­æ¯ç { åå  \"\n  return result\n}\n/**\n * ç¨åè¡¨æé ä¸æ£µæ ã\n */\nexport function list2Tree (list: any[], {\n  parentIdKey = 'parentId',\n  rootParentIdValue = null,\n  idKey = 'id',\n  // leafSelectableOnly = true\n  // ignoreLeaf = false\n  ifIgnore = (node) => false,\n  // isLeaf = (node) => false,\n  beforeProcess = null,\n  afterProcess = null,\n}) {\n  function recurseAddChildren (nodes: any[], layer = 0) {\n    nodes.forEach(node => {\n      if (beforeProcess) beforeProcess(node)\n      if (!node.layer) node.layer = layer\n      node.value = node.key = node[idKey]\n      node.label = node.title = node.name\n      const children = list.filter(item => item[parentIdKey] === node[idKey] && !ifIgnore(item))\n      if (children.length > 0) {\n        node.children = children\n        recurseAddChildren(node.children, layer + 1)\n      } else {\n        node.isLeaf = true\n      }\n      if (afterProcess) afterProcess(node)\n    })\n  }\n\n  const tree = list.filter(item => !item[parentIdKey] || item[parentIdKey] === rootParentIdValue)\n  recurseAddChildren(tree)\n  return tree\n}\n\nexport function uuidv4 () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport function appendScript (src: string) {\n  const body = document.getElementsByTagName('body')[0];\n  const script = document.createElement('script');\n  script.src = src\n  body.appendChild(script);\n}\n\n/**\n * å è½½ css\n * 1. é²éå¤ï¼å¦æç¸å href ç link æ ç­¾å·²å­å¨ï¼ä¸ä¼éæ°å è½½\n * 2. å id æ¿æ¢ï¼å¯ä»¥æ¿æ¢å id ç link æ ç­¾\n */\nexport function loadCss (href: string, eleId?: string, allowRepeat = false) {\n  // é²éå¤\n  if (\n    !allowRepeat\n    && Array.from(document.querySelectorAll('link')).some(link => link.href === href)\n  ) return\n  // å id æ¿æ¢\n  if (eleId) {\n    const themeLink = document.getElementById(eleId) as HTMLLinkElement;\n    if (themeLink) {\n      themeLink.href = href\n      return\n    }\n  }\n  const head = document.getElementsByTagName('head')[0];\n  const style = document.createElement('link');\n  if (eleId) style.id = eleId;\n  style.type = 'text/css'\n  style.rel = 'stylesheet';\n  style.href = href;\n  head.appendChild(style);\n}\n\nexport function deepClone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\n/** ç´æ¥æ¹åæ°ç» */\nexport function setArrayLengthTo (arr: any[], targetLength: number, fillItem) {\n  arr.length = targetLength\n  for (let i = 0; i < arr.length; i++) {\n    if (!arr[i]) arr[i] = deepClone(fillItem)\n  }\n}\nexport function getCurTheme () {\n  const rawThemeKey = localStorage.getItem('gsp_rtf_themesKey')\n  // å¯è½æ¯ defaultï¼å½ä¸åæ blue\n  if (rawThemeKey === 'default' || !rawThemeKey) return 'blue'\n}\n/**\n * å è½½\n * 1. å¬å± style\n * 2. å¬å±ä¸»é¢ style\n */\nexport function loadCommonStyleNTheme () {\n  const curTheme = getCurTheme()\n  // antd ä¼åçº§æä½\n  loadCss(`${IGIX_HOME_PATH}xc-antd-${curTheme}.css`)\n  loadCss(`${IGIX_HOME_PATH}plain.css`)\n  loadCss(`${IGIX_HOME_PATH}xc-common.css`)\n  loadCss(`${IGIX_HOME_PATH}xc-common-${curTheme}.css`)\n}\n/**\n * ä¸¤ä¸ª obj æ¯å¦ç»æç¸åãéé¢çææå­é¢å¼ç¸ç­ï¼åæ¶åé¨å¼ç¨\n */\nexport function objectLiteralEqual (obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2)\n}\nexport const curLang = localStorage.getItem('languageCode') || 'zh-CHS'\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgixUtilService {\n}\n\n\n","import { DataParam } from './data.type'\nimport { Size, WidgetInfo } from './widget.type'\n\nexport const DEFAULT_PORTLET_COLS = 5\nexport const DEFAULT_PORTLET_ROWS = 4\n\ndeclare type SizeKey = 'minCols' | 'minRows' | 'maxCols' | 'maxRows' | 'rows' | 'cols'\n\n/** é¨ä»¶ */\nexport abstract class Portlet {\n  id?: string /** å¯ä¸æ è¯ */\n  getSize (key: SizeKey) {\n    if (key === 'rows') {\n      return this._getAxisSize('rows') || this._getAxisSize('minRows') || DEFAULT_PORTLET_ROWS\n    } else if (key === 'cols') {\n      return this._getAxisSize('cols') || this._getAxisSize('minCols') || DEFAULT_PORTLET_COLS\n    } else {\n      return this._getAxisSize(key)\n    }\n  }\n  abstract _getAxisSize (key: SizeKey)\n}\nexport class EppPortlet extends Portlet {\n  constructor (\n    /** åé¨ä»¶ Id */\n    public widgetId: string\n  ) {\n    super()\n  }\n  name = 'æªå½åé¨ä»¶' /** æ¾ç¤ºæ é¢ */\n  i18nName: { [key: string]: any } = {}\n  // subtitle?: string /** å¯æ é¢ */\n  desc?: string /** å¤æ³¨ */\n  size?: Size /** å°ºå¯¸èå´ */\n  widget?: WidgetInfo\n  propValues: { [key: string]: any } = {} /** å¯éç½®å±æ§çå¼ */\n  dataOption: { [key: string]: any } = {}\n  // operationId?: string /** åè½æä½ */\n  moduleId?: string /** æå±æ¨¡å */\n  /**\n   * éç½®èå¨æ¶ï¼åç«¯å¨æå¢å ãåªåè¿è¡æ¶ä½¿ç¨ï¼ä¸åºè¯¥è¢«ä¿å­ã\n   * null ä»£è¡¨åå§ç¶æï¼[] ä»£è¡¨æ°æ®å·²å è½½ä¸ä¸ºç©ºã\n   */\n  dps: DataParam[] = null\n  _getAxisSize (key: SizeKey) {\n    return (this.size && this.size[key]) || (this.widget.layout && this.widget.layout.grid && this.widget.layout.grid[key])\n  }\n}\nconst defaultSizeMap = {\n  rows: 4,\n  cols: 5,\n  minCols: 2,\n  minRows: 2,\n  maxCols: 24,\n  maxRows: 24,\n}\nexport class BAPortlet extends Portlet {\n  isBA = true\n  name: string\n  // code?: string\n  // createTime?: string\n  // detail?: number\n  // gradeCode?: string\n  // isParent?: boolean\n  // layer?: number\n  // pid?: string\n  // tab?: number\n  // type?: string\n  // updateTime?: string\n  // userId?: string\n  _getAxisSize (key: SizeKey) {\n    return defaultSizeMap[key]\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { addBaseUrl } from '../const';\nimport { backendString2Json } from '../misc';\nimport { WidgetInfo } from '../types/widget.type';\nimport { UtilService } from '../util.service';\n\nexport const widgetUrls = {\n  GET_BY_ID: `metaportlet/`,\n  GET_USER_ALL: `metaportlet/all`,\n  CREATE: `metaportlet/upload`,\n  EDIT: `metaportlet/editor`,\n  DELETE:`metaportlet/`,\n  GET_PORTLET:`portlet/findByMetaId`,\n}\naddBaseUrl(widgetUrls)\n\n/**\n * url è½¬æ¢:\n * æå¡ç«¯ url: /su/åé¨ä»¶å/æä»¶è·¯å¾\n * full url: host/runtime/web/metaportlet/su/åé¨ä»¶å/æä»¶è·¯å¾\n */\nconst WIDGET_PREFIX = `${location.origin}/runtime/web/metaportlet`\n/** widget åç«¯ -> åç«¯ è½¬æ¢ */\nexport function convertWidget (widget) {\n  widget.href = WIDGET_PREFIX + widget.href\n  widget.logoImgUrl = WIDGET_PREFIX + widget.logoImgUrl\n  widget.previewImgUrl = WIDGET_PREFIX + widget.previewImgUrl\n  widget.baseUrl = WIDGET_PREFIX + widget.baseUrl\n  widget.layout = widget.layout && JSON.parse(backendString2Json(widget.layout))\n  return widget as WidgetInfo\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WidgetRepo {\n\n  constructor (\n    private http: HttpClient,\n    private util: UtilService\n  ) { }\n\n  getWidgets () {\n    return this.http\n      .get<WidgetInfo[]>(widgetUrls.GET_USER_ALL)\n      .pipe(\n        map(data => data.map(convertWidget))\n      )\n  }\n  getWidgetById (id: string) {\n    return this.http\n      .get<WidgetInfo>(widgetUrls.GET_BY_ID + id)\n      .pipe(\n        map(data => convertWidget(data))\n      )\n  }\n  uploadWidget (content: { [key: string]: File | any }) {\n    return this.util.uploadFile(widgetUrls.CREATE, content)\n  }\n  editorWidget (content: { [key: string]: File | any }) {\n    return this.util.uploadFile(widgetUrls.EDIT, content)\n  }\n  deleteWidget (id: string) {\n    return this.http.delete<string>(widgetUrls.DELETE+id,{\n    })\n  }\n  findPortletByMeta(id:string){\n    return this.http.get<number>(widgetUrls.GET_PORTLET,{\n      params : {id}\n    })\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { addBaseUrl } from '../const';\nimport { Role } from '../types/igix.type';\nimport { EppPortlet } from '../types/portlet.type';\nimport { convertWidget } from './widget.repo';\n\nexport const portletUrls = {\n  GET_BY_ID: `portlet/`,\n  GET_USER_ALL: `portlet/all`,\n  SAVE: `portlet/`,\n  GET_BY_MODULE_ID: `portlet/findByModuleId`,\n  DELETE_BY_ID: `portlet/`,\n  GET_PAGE:`page/findByPortletId`\n}\nexport const portletOps = {\n  SAVE: `portletop/save?portletId=`,\n  GET_BY_PORTLET_ID: `portletop/getallpagerole?portletId=`\n}\naddBaseUrl(portletUrls)\naddBaseUrl(portletOps)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortletRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getPageByPortletId(portletId:string){\n    return this.http.get<number>(portletUrls.GET_PAGE,{\n      params:{portletId}\n    })\n  }\n\n  getPortlets () {\n    return this.http.get<EppPortlet[]>(portletUrls.GET_USER_ALL).pipe(\n      map(portlets => portlets.map(convertPortlet))\n    )\n  }\n  getPortletsByModuleId (moduleId?: string) {\n    return this.http.get<EppPortlet[]>(\n      portletUrls.GET_BY_MODULE_ID,\n      { params: moduleId ? { moduleId } : null }\n    ).pipe(map(portlets => portlets.map(convertPortlet)))\n  }\n  getPortletById (id: string) {\n    // return this.storage.getPortletById(id)\n    return this.http.get<EppPortlet>(portletUrls.GET_BY_ID + id).pipe(\n      map(convertPortlet),\n      // å¦æè¯·æ±åºéï¼ä¼è¿åä¸ä¸ª nullï¼èä¸åæ\n      // catchError(err => {\n      //   const p = new EppPortlet(null)\n      //   p.id = id\n      //   p.name = ''\n      //   return of(p)\n      // })\n    )\n  }\n  savePortlet (portlet: EppPortlet) {\n    const serverPortlet = convertPortletInverse(portlet)\n    return portlet.id\n      ? this.http.post<EppPortlet>(portletUrls.SAVE, serverPortlet)\n      : this.http.put<EppPortlet>(portletUrls.SAVE, serverPortlet)\n  }\n\n  /** portlet op */\n  getPortletOps (portletId: string) {\n    return this.http.get<Role[]>(portletOps.GET_BY_PORTLET_ID + portletId)\n  }\n  savePortletOps (portletId: string, opIds: string[]) {\n    return this.http.post(portletOps.SAVE + portletId, opIds)\n  }\n  deletePortletById (portletId: string) {\n    return this.http.delete(portletUrls.DELETE_BY_ID + portletId)\n  }\n}\n\n/** portlet åç«¯ -> åç«¯, åç«¯ -> åç«¯ è½¬æ¢ */\nfunction convertPortlet (serverPortlet) {\n  serverPortlet.widget = convertWidget(serverPortlet.widget)\n  if (serverPortlet.propValues) serverPortlet.propValues = JSON.parse(serverPortlet.propValues)\n  return Object.assign(new EppPortlet(null), serverPortlet) as EppPortlet\n}\nfunction convertPortletInverse (portlet: EppPortlet) {\n  const serverPortlet = { ...portlet }\n  delete serverPortlet.widget\n  serverPortlet.propValues = JSON.stringify(portlet.propValues) as any\n  return serverPortlet\n}\n","import CryptoJS from 'crypto-js';\n// declare var CryptoJS\n\nlet AES_SECRET_KEY\nlet CRYPTO_CFG\ntry {\n  AES_SECRET_KEY = CryptoJS.enc.Utf8.parse('1234567890123456')\n  CRYPTO_CFG = {\n    iv: CryptoJS.enc.Utf8.parse('0000000000000000'),\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.Pkcs7\n  }\n} catch (error) {\n}\n\nexport function encrypt (message: string) {\n  const msg = CryptoJS.enc.Utf8.parse(message)\n  return CryptoJS.AES.encrypt(msg, AES_SECRET_KEY, CRYPTO_CFG).toString()\n}\nexport function decrypt (encryptedMsg: string) {\n  return CryptoJS.AES.decrypt(encryptedMsg, AES_SECRET_KEY, CRYPTO_CFG).toString(CryptoJS.enc.Utf8)\n}\n","import { camelCase, constantCase } from 'change-case';\nimport { decrypt, encrypt } from '../utils/encryption';\nimport { I18nValue } from './common.type';\n\nexport interface ProviderParam {\n  label?: string\n  name?: string\n  type?: 'input' | 'textarea' | 'password' | 'checkbox' | 'select'\n  sortNo?: number\n  value?: string\n  placeholder?: string\n  options?: string[]\n  checked?: boolean\n  required?: boolean\n  encrypted?: boolean\n}\n// TODO: æ°æ®æºç¸å³çï¼è¦æ¾å¨ dashboard core ä¸­å\nexport class Datasrc {\n  id?: string\n  name?: string\n  i18nName: { [key: string]: any } = {}\n  config?: { [name: string]: any } = {}\n  groupName?: string\n  creator?: string\n  createTime?: Date\n\n  constructor (\n    public providerName?: string\n  ) {}\n}\nexport interface DataProvider {\n  label: string\n  name: string\n}\n\n\nexport interface DataParamDto {\n  id?: string\n  i18nName?\n  type?: 'queryParam' | 'pathParam' | 'body'\n  config?: string\n  datasetId?: string\n  name?: string\n  value?: string\n}\n/**\n * åæ°åæ°\n */\nexport class DataParam {\n  id?: string\n  name?: string\n  i18nName?\n  type?: 'QUERY_PARAM' | 'PATH_PARAM' | 'BODY' = 'QUERY_PARAM'\n  config?: any\n  default?: string = null\n  datasetId?: string\n  static ToDto (dp: DataParam) {\n    const { i18nName, type, config, id } = dp\n    return {\n      id, i18nName, config,\n      type: camelCase(type),\n      value: dp.default,\n    } as DataParamDto\n  }\n  static FromDto (dpDto: DataParamDto) {\n    return {\n      id: dpDto.id,\n      i18nName: dpDto.i18nName,\n      type: constantCase(dpDto.type),\n      config: dpDto.config,\n      datasetId: dpDto.datasetId,\n      name: dpDto.name,\n      default: dpDto.value,\n    } as DataParam\n  }\n}\nexport interface DatasetDto {\n  id?: string,\n  name?: string,\n  datasourceId?: string,\n  i18nName?:{[key:string]:any},\n  datasourceName?: string\n  dimensions?: Dimension[]\n  creationTime?: Date\n  method?: string\n  parameters?: DatasetParameter[]\n  config?: string\n  dataParamDto?: DataParamDto[]\n}\nexport class DatasetParameter {\n  constructor (\n    public name: string,\n    public value: string,\n    public sortNo?: number,\n    public isExpression = true\n    ) { }\n  // name?: string\n  // value?: string\n  // isExpression = true\n  // sortNo?: number\n}\ninterface AnyKey {\n  [key: string]: any\n}\nexport class Dataset implements AnyKey {\n  id?: string\n  name?: string\n  product?: string\n  module?: string\n  creator?: string\n  modifier?: string\n  creationTime?: Date\n  modifyTime?: Date\n  datasrcId?: string\n  datasrcName?: string\n  i18nName?: { [key: string]: any } \n  // datasrc?: Datasrc\n  config?: {\n    [key: string]: any\n  } = {}\n  cols: {\n    dimensions?: Dimension[]\n    measures?: Dimension[],\n  } = {\n    dimensions: [],\n    measures: [],\n    // computedFields: [],\n    // filters: []\n  }\n  dataParams?: DataParam[] = []\n\n  static create () {\n    return new Dataset()\n  }\n  static toDto (dataset: Dataset): DatasetDto {\n    const { id, name, datasrcId, datasrcName,\n      cols, creationTime, config, dataParams,i18nName } = dataset\n    return {\n      id, name, creationTime,i18nName,\n      datasourceId: datasrcId,\n      datasourceName: datasrcName,\n      dimensions: cols.dimensions,\n      config: encrypt(JSON.stringify(config)),\n      dataParamDto: dataParams.map(DataParam.ToDto)\n    }\n  }\n  static fromDto (datasetDto: DatasetDto): Dataset {\n    const { id, name, datasourceId, datasourceName, dimensions,\n      creationTime, method, parameters,i18nName,\n      config, dataParamDto } = datasetDto\n    let parsedConfig = null\n    try {\n      parsedConfig = JSON.parse(decrypt(config))\n    } catch (error) {\n    }\n    if (!parsedConfig) parsedConfig = {}\n    return {\n      // ...datasetDto,\n      id, name, creationTime,i18nName,\n      datasrcId: datasourceId,\n      datasrcName: datasourceName,\n      cols: { dimensions },\n      config: parsedConfig,\n      dataParams: dataParamDto ? dataParamDto.map(DataParam.FromDto) : [],\n    }\n  }\n}\n\nexport type DimensionTypeName = 'STRING' | 'TEXT'\n  | 'SHORT' | 'LONG' | 'FLOAT' | 'DOUBLE'\n  | 'DECIMAL' | 'INTEGER' | 'INTETER' | 'DATETIME'\n  | 'BYTE' | 'BYTES' | 'BOOLEAN' | 'UNKNOWN'\nexport class Dimension {\n  name?: string\n  label?: string\n  i18nLabel?: I18nValue | string\n  type?: number\n  typeName?: DimensionTypeName\n  javaClassName?: string\n  groupName?: string\n  comment?: string\n  notNull?: boolean\n}\nexport interface Filter extends Dimension {\n  hasValue?: boolean\n  // isOpen?: boolean\n  filterExpression?: string\n}\nexport enum ComputedType {\n  Count = 'Count',\n  Sum = 'Sum',\n  Max = 'Max',\n  Min = 'Min',\n  Avg = 'Avg',\n  Expression = 'Expression',\n}\nexport enum AggType {\n  Table = 'Table',\n  CroosTable = 'CroosTable',\n}\nexport class ComputedCol extends Dimension {\n  computeType = ComputedType.Expression\n  constructor (\n    private expression?: string\n  ) {\n    super()\n  }\n}\nexport interface Col extends Filter {\n}\nexport interface Row extends Filter {\n}\n\nexport interface AggDto {\n  id?: string\n  dataSetId?: string\n  dataSetName?: string\n  resource?: string\n  resourceId?: string\n  aggregationType?: AggType\n  columnConfigs?: Col[]\n  rowConfigs?: Row[]\n  filterConfigs?: Filter[]\n  computedExpressionConfigs?: ComputedCol[]\n}\nexport class Agg {\n  id?: string\n  datasetId?: string\n  datasetName?: string\n  resource?: string\n  resourceId?: string\n  aggType?: AggType\n  cols?: Col[] = []\n  rows?: Row[] = []\n  filters?: Filter[] = []\n  computedCols?: ComputedCol[] = []\n\n  static toDto (agg: Agg) {\n    const { id, datasetId, resource, resourceId,\n      aggType, cols, rows, filters, computedCols\n    } = agg\n    return {\n      id,\n      dataSetId: datasetId,\n      resource,\n      resourceId,\n      aggregationType: aggType,\n      columnConfigs: cols,\n      rowConfigs: rows,\n      filterConfigs: filters,\n      computedExpressionConfigs: computedCols\n    } as AggDto\n  }\n  static fromDto (aggDto: AggDto) {\n    const { id, dataSetId, dataSetName, resource, resourceId,\n      aggregationType, columnConfigs, rowConfigs,\n      filterConfigs, computedExpressionConfigs } = aggDto\n    return {\n      id,\n      datasetId: dataSetId,\n      datasetName: dataSetName,\n      resource,\n      resourceId,\n      aggType: aggregationType,\n      cols: columnConfigs,\n      rows: rowConfigs,\n      filters: filterConfigs,\n      computedCols: computedExpressionConfigs\n    } as Agg\n  }\n}\nexport enum AggregationResultSetType {\n    Table = 'Table',\n    CroosTable = 'CroosTable'\n}\n/** æ°æ®æå¡å®éè¿åçç»æ */\nexport interface AggResult {\n  tableData?: { [key: string]: any }[]\n  dimensions?: Dimension[]\n  columns?: string[]\n  /** ? */\n  type?: AggregationResultSetType\n  /** ? */\n  getResultSet?: Result\n  /** ? */\n  data?: { [key: string]: { [key: string]: any } }\n}\nexport interface Result {\n  data: object[]\n  columns: Dimension[]\n}\n/** widget component éè¦å¤é¨ä¼ å¥çæ°æ®æ ¼å¼ãä¸é¢çæå¡ç¬¦åæ­¤ç»æã */\nexport interface DataWithDims {\n  dimensions?: Dimension[]\n  tableData?: any[]\n}\n/**\n * è·åæ°æ®æ¶ä¼ æå¡ç«¯ç dp + value\n */\nexport class DpValue {\n  dpId: string\n  value: any\n  static toDto (dpValue) {\n    return {\n      dataParamId: dpValue.dpId,\n      value: dpValue.value\n    } as DpValueDto\n  }\n}\nexport interface DpValueDto {\n  dataParamId: string\n  value: string\n}\n\nexport interface RuntimeAggOptionDto {\n  dimensions: string[]\n  indicators: {\n    type: number\n    name: string\n  }[]\n}\nexport class Indicator {\n  dimName?: string\n  aggFn?: 1 | 2 | 3 | 4 | 5 = 4\n}\nexport class RuntimeAggOption {\n  dimensions: string[] = []\n  indicators: Indicator[] = [new Indicator()]\n  static toDto (runtimeAgg: RuntimeAggOption) {\n    if (!runtimeAgg) return\n    return {\n      dimensions: runtimeAgg.dimensions,\n      indicators: runtimeAgg.indicators.map(ind => ({\n        type: ind.aggFn,\n        name: ind.dimName\n      }))\n    } as RuntimeAggOptionDto\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { addBaseUrl, DATA_PREFIX } from '../const';\nimport { Agg, AggResult, Dataset, DatasetDto, Dimension, DpValue, RuntimeAggOption } from '../types/data.type';\n\nexport const datasetUrls = {\n  GET_BY_ID: `${DATA_PREFIX}/DataSetService/find/`,\n  CREATE: `${DATA_PREFIX}/DataSetService/create`,\n  IMPORT_QO: `${DATA_PREFIX}/DataSetService/importQO`,\n  DELETE: `${DATA_PREFIX}/DataSetService/delete`,\n  GET_ALL: `${DATA_PREFIX}/DataSetService/findAll`, // 500\n  GET_RAW_DIMS_BY_DATASET: `${DATA_PREFIX}/DataResultSetService/tryGetDimensions`,\n  GET_RAW_DATA_BY_DATASET: `${DATA_PREFIX}/DataResultSetService/getResultSet`,\n  UPDATE: `${DATA_PREFIX}/DataSetService/update`,\n}\nexport const aggUrls = {\n  SAVE: `${DATA_PREFIX}/DataSetService/saveAggConfig`,\n  GET_BY_RESOURCE: `${DATA_PREFIX}/DataSetService/findAggConfigByResource`,\n}\nexport const dataResultSetUrls = {\n  GET_BY_AGG_ID: `${DATA_PREFIX}/DataResultSetService/getAggResultSet/{aggId}`, // ?\n  GET_BY_AGG: `${DATA_PREFIX}/DataResultSetService/getAggResultSetForTest`,\n  GET_BY_DATASET: `${DATA_PREFIX}/DataResultSetService/getResultSet`, // åå§æ°æ®ï¼ç¨ä¸å°\n  GET_BY_RESOURCE: `${DATA_PREFIX}/DataResultSetService/getResultSetByResource`, //\n}\naddBaseUrl(datasetUrls)\naddBaseUrl(aggUrls)\naddBaseUrl(dataResultSetUrls)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatasetRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getRawDimsByDataset (datasetDto: DatasetDto) {\n    return this.http\n      .post<Dimension[]>(datasetUrls.GET_RAW_DIMS_BY_DATASET, datasetDto)\n  }\n  getRawColsNDataByDataset (datasetDto: DatasetDto) {\n    return this.http\n      .post<{columns: string[], data:any[]}>(datasetUrls.GET_RAW_DATA_BY_DATASET, datasetDto)\n  }\n  getDatasets () {\n    return this.http\n      .get<DatasetDto[]>(datasetUrls.GET_ALL)\n      .pipe(map(datasetDtos => datasetDtos.map(Dataset.fromDto)))\n  }\n  getDatasetById (id: string) {\n    return this.http\n      .get<DatasetDto>(datasetUrls.GET_BY_ID + id)\n      .pipe(map(Dataset.fromDto))\n  }\n  saveDataset (datasetDto: DatasetDto) {\n    return this.http.post<DatasetDto>(\n      datasetDto.id ? datasetUrls.UPDATE : datasetUrls.CREATE,\n      // Dataset.toDto(dataset)\n      datasetDto\n    ).pipe(map(Dataset.fromDto))\n    // TODO:\n    // , this.success()\n  }\n  importQO (ids: string[]) {\n    return this.http.post(datasetUrls.IMPORT_QO, ids)\n  }\n  deleteDataset (datasetId: string) {\n    return this.http\n      .post<any>(datasetUrls.DELETE, null, { params: { id: datasetId } })\n      // TODO:\n      // .pipe(this.success())\n  }\n\n  /** agg */\n  getAggByPortletId (portletId: string) {\n    return this.http.get<Agg>(aggUrls.GET_BY_RESOURCE, {\n      params: {\n        resource: 'portlet',\n        resourceId: portletId\n      }\n    }).pipe(map(Agg.fromDto))\n  }\n  saveAgg (agg: Agg) {\n    return this.http\n      .post<Agg>(aggUrls.SAVE, Agg.toDto(agg))\n  }\n\n  /** result */\n  getAggResultByAgg (\n    agg: Agg,\n    dpValues: DpValue[] = [],\n    runtimeAgg?: RuntimeAggOption\n  ) {\n    const body: any = {\n      aggDataDto: Agg.toDto(agg),\n      aggregation: RuntimeAggOption.toDto(runtimeAgg)\n    }\n    // dataParam ä¸º [] æå¡ç«¯ä¼æ¥éï¼è¥æ²¡æç´æ¥ä¸ä¼ æ­¤åæ°ã\n    if (dpValues && dpValues.length > 0) body.dataParam = dpValues.map(DpValue.toDto)\n    return this.http.post<AggResult>(dataResultSetUrls.GET_BY_AGG, body)\n  }\n  getResultByPortletId (\n    portletId: string,\n    dpValues: DpValue[] = [],\n    filter = '\"\"',\n    runtimeAgg?: RuntimeAggOption\n    ) {\n\n    const body: any = {\n      filter,\n      aggregation: RuntimeAggOption.toDto(runtimeAgg)\n    }\n    // dataParam ä¸º [] æå¡ç«¯ä¼æ¥éï¼è¥æ²¡æç´æ¥ä¸ä¼ æ­¤åæ°ã\n    if (dpValues && dpValues.length > 0) body.dataParam = dpValues.map(DpValue.toDto)\n\n    return this.http.post<AggResult>(\n      dataResultSetUrls.GET_BY_RESOURCE,\n      body,\n      {\n        headers: new HttpHeaders({'Content-Type': 'application/json'}),\n        params: {\n          resourceType: 'portlet',\n          resourceId: portletId\n        }\n      }\n    )\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { addBaseUrl, DATA_PREFIX } from '../const';\nimport { DataProvider, Datasrc, ProviderParam } from '../types/data.type';\n\nexport const datasrcUrls = {\n  GET_BY_ID: `${DATA_PREFIX}/DatasourceService/find/`, // ?\n  CREATE: `${DATA_PREFIX}/DatasourceService/create`, // 500\n  DELETE: `${DATA_PREFIX}/DatasourceService/delete`, // ?\n  GET_ALL: `${DATA_PREFIX}/DatasourceService/findAll`, // 500\n  UPDATE: `${DATA_PREFIX}/DatasourceService/update`, // ?\n  TRY: `${DATA_PREFIX}/DatasourceService/try`,\n  GET_PARAMS_BY_PROVIDER_NAME: `${DATA_PREFIX}/DataService/getDatasourceParameters/`,\n  GET_ALL_PROVIDERS: `${DATA_PREFIX}/DataService/getProvicerNames`,\n}\naddBaseUrl(datasrcUrls)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatasrcRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getDatasrcList () {\n    return this.http.post<Datasrc[]>(datasrcUrls.GET_ALL, null)\n  }\n  getDatasrcById (id: string) {\n    return this.http\n      .get<Datasrc>(datasrcUrls.GET_BY_ID + id)\n  }\n  saveDatasrc (datasrc: Datasrc) {\n    if (datasrc.id) {\n      return this.http.post<Datasrc>(datasrcUrls.UPDATE, datasrc)\n      // TODO: ç§»èµ°\n      // .pipe(this.success())\n    } else {\n      return this.http.post<Datasrc>(datasrcUrls.CREATE, datasrc)\n      // TODO: ç§»èµ°\n      // .pipe(this.success())\n    }\n  }\n  deleteDatasrc (id: string) {\n    return this.http.post<string>(datasrcUrls.DELETE, null, {\n      params: { id }\n    })\n    // TODO: ç§»èµ°\n    // .pipe(this.success())\n  }\n  tryDatasrc (datasrc: Datasrc): Observable<string> {\n    return this.http.post(datasrcUrls.TRY, datasrc, { responseType: 'text' })\n    // TODO: ç§»èµ°\n    // .pipe(tap(\n    //   () => this.nzMsg.success('æµè¯æåï¼'),\n    //   () => this.nzMsg.error('æµè¯å¤±è´¥ï¼')\n    // ))\n  }\n  getProviders () {\n    return this.http.get<DataProvider[]>(datasrcUrls.GET_ALL_PROVIDERS)\n  }\n  getParamsByProviderName (providerName: string) {\n    return this.http.get<ProviderParam[]>(datasrcUrls.GET_PARAMS_BY_PROVIDER_NAME + providerName)\n  }\n}\n","\n/** æ¯æçè¯­è¨ */\nexport class Lang {\n  constructor (public code: string, public name: string) {\n  }\n}\n\nexport class I18nValue {\n  [key: string]: any\n}\n\nexport interface ErrorInfo {\n  timestamp: string // \"2020-03-05T11:07:07.280+0000\"\n  status: string // 500\n  error: string // \"Internal Server Error\"\n  message: string // \"No message available\"\n  path: string // \"/jersey/DataSetService/create\"\n  trace: string\n}\n\nexport type Tree = TreeNode[]\nexport interface TreeNode {\n  children?: Tree\n  title: string\n  key: string\n  value?: any\n  label?: string\n  isLeaf?: boolean\n  [key: string]: any\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NzTreeNodeOptions } from 'ng-zorro-antd/core';\nimport { from, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { list2Tree } from '../misc';\nimport { Lang } from '../types/common.type';\n// import { Lang, list2Tree } from '../../public-api';\nimport { BO, RoleGroup, RtfFunc, UserInfo } from '../types/igix.type';\nimport { BAPortlet } from '../types/portlet.type';\n\nexport const igixUrls = {\n  bo: {\n    GET_ALL: `/api/dev/main/v1.0/business-objects`\n  },\n  funcOperations: {\n    GET_BY_BO_ID: `/api/runtime/sys/v1.0/funcOperations/business/`\n  },\n  roleGroup: {\n    GET_ALL: `/api/runtime/sys/v1.0/rolegroups/all`\n  },\n  role: {\n    GET: `/api/runtime/sys/v1.0/roles`,\n  },\n  userInfo: { // igix ç userInfo éæå¤´å\n    GET: `/api/runtime/sys/v1.0/userinfos?infoType=user`\n    // GET: `http://dscloud.chec.bj.cn/api/runime/sys/v1.0/userinfos/setting`\n  },\n  func: {\n    /** åå«äºææèåãèæ¥ï¼ä½ç§¯å¤§ãå è½½è¾æ¢ */\n    GET_ALL_WITH_INVOKE: `/api/runtime/sys/v1.0/functions/allFuncs`,\n    /** è¿ä¸ªæ¯ iGIX æçåºç¨ä¸­çèåãåè½ç»åè¡¨ï¼æ°æ®éç¨å°ï¼æ§è½è¾å¥½ */\n    GET_ALL: `/api/runtime/sys/v1.0/functions/funcGroups?funcType=4`\n  },\n  langs: {\n    GET_ALL: `/api/runtime/sys/v1.0/loginInfo?infoType=supportedLanguage`\n  },\n  qoDataset: {\n    // GET_BO_TREE: `/api/gsp/bcc/v1.0/botreefornavvo/extension/query`,\n    GET_ECP_BIZ_TREE : `/api/gsp/bcc/v1.0/ecpbiztree/extension/query`,\n    GET_DETAIL_BY_ID: `/api/gsp/bcc/v1.0/datasetdetail_frm/extension/retrieve/`,\n    GET_DETAIL_QUERY: `/api/gsp/bcc/v1.0/datasetdetail_frm/extension/query`\n  },\n  ba: {\n    // GET_ALL_PORTLETS: `/api/ba/bap/v1.0/category/getCloudCategoryList?type=widget`,\n    GET_ALL_PORTLETS: `/api/ba/bap/v1.0/widget/getCloudWidgetList?allWidgetList=true`,\n    // GET_ALL_PORTLETS: `/api/ba/bap/v1.0/widget/GetPortletInfo`,\n  }\n  // TODO: su http://10.24.20.77:5200/api/dev/main/v1.0/business-objects/\n  // http://localhost:5000/api/dev/main/v1.0/business-object-trees\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgixRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getBOTree (layer = Infinity) {\n    return this.http.get<BO[]>(igixUrls.bo.GET_ALL).pipe(map(boList => {\n      return list2Tree(boList, {\n        parentIdKey: 'parentID',\n        ifIgnore: item => item.layer > layer\n      })\n    }))\n  }\n  getOpsByBOId (boId: string): Observable<any> {\n    return this.http.get<any[]>(igixUrls.funcOperations.GET_BY_BO_ID + boId)\n  }\n  /** role, role group */\n  getRoleGroupTree () {\n    return this.http.get<RoleGroup[]>(igixUrls.roleGroup.GET_ALL).pipe(map(roleGroups => {\n      return list2Tree(roleGroups, {})\n    }))\n  }\n  getRolesByRoleGroupId (groupId: string) {\n    return this.http.get<any>(igixUrls.role.GET, {\n      params: {\n        param: JSON.stringify({ groupId })\n      }\n    }).pipe(map(res => res.data))\n  }\n  getAllRoles () {\n    return this.http.get<any>(igixUrls.role.GET).pipe(map(res => res.data))\n  }\n\n  funcTree12\n  /** è·åé¨ä»¶åè¡¨éè¦çäºçº§ bo tree */\n  getFuncTree12 () {\n    if (this.funcTree12) return of(this.funcTree12)\n    return this.getAllFuncs()\n      .pipe(\n        map(funcs => {\n          funcs = funcs.filter(func => parseInt(func.layer) < 3)\n          this.funcTree12 = list2Tree(funcs, {\n            rootParentIdValue: '0',\n            parentIdKey: 'parentId',\n          })\n          return this.funcTree12\n        })\n      )\n  }\n  getQoDatasetDetailsByModuleId (moduleId: string) {\n    return this.http.put<any>(igixUrls.qoDataset.GET_DETAIL_QUERY, {}, {\n      params: {\n        entityFilter: JSON.stringify({\n          FilterConditions: [{\n            FilterField: 'moduleID',\n            Compare: 0,\n            Value: moduleId,\n            Relation: 0\n          }],\n          SortConditions: [],\n          IsUsePagination: true,\n          Pagination: {\n            PageIndex: 1,\n            PageSize: 20, // TODO:\n            PageCount: 0,\n            TotalCount: 0\n          }\n        })\n      }\n    // }, null).pipe(map(res => res.returnValue))\n    }).pipe(map(res => res.returnValue.result))\n  }\n  getQoDatasetDetailById (id: string) {\n    return this.http.put<any>(igixUrls.qoDataset.GET_DETAIL_BY_ID + id, {}).pipe(map(res => res.returnValue))\n  }\n  /**\n   * è·å igix ç¨æ·ä¿¡æ¯\n   * @param reload é»è®¤ä¸ºåï¼ä¸åååºè¯·æ±ï¼ä½¿ç¨å·²ç¼å­çç»æï¼çåéæ°è¯·æ±\n   */\n  userInfoPromise: Promise<UserInfo>\n  getUserInfo (reload = false) {\n    if (reload) this.userInfoPromise = null\n    if (!this.userInfoPromise) this.userInfoPromise = this.http\n      .get<UserInfo>(igixUrls.userInfo.GET)\n      .toPromise()\n    return from(this.userInfoPromise)\n  }\n  getUserAvatar (reload = false) {\n    return this.getUserInfo(reload).pipe(map(userInfo => {\n      if (userInfo && userInfo.userSetting && userInfo.userSetting.imgblob) return userInfo.userSetting.imgblob\n      return null\n    }))\n  }\n  getAllFuncs () {\n    return this.http.get<RtfFunc[]>(igixUrls.func.GET_ALL)\n  }\n  getBAPortletsAll () {\n    return this.http\n      .get<any>(igixUrls.ba.GET_ALL_PORTLETS,\n        // {\n        // responseType: 'text'\n        // }\n      ).pipe(\n        // map(res => JSON.parse(res)),\n        map(res => res.data\n          // .filter(p => p.tab === 1)\n          .map(p => Object.assign(new BAPortlet(), p))))\n  }\n  // getBAPortletById () {\n  //   return this.http\n  //     .get<any>(igixUrls.ba.GET_ALL_PORTLETS)\n  //     .pipe(map(res => res.categoryList.map(p => Object.assign(new BAPortlet(), p))[0]))\n  // }\n\n  getLangsPromise: Promise<Lang[]>\n  getLangs () {\n    if (!this.getLangsPromise) this.getLangsPromise = this.http\n      .get<Lang[]>(igixUrls.langs.GET_ALL)\n      .pipe(map(rtfLangs => rtfLangs.map(rtfLang => new Lang(rtfLang.code, rtfLang.name))))\n      .toPromise()\n    return this.getLangsPromise\n  }\n}\n","/**\n * å­æ®µè½¬æ¢å¨\n * ä¸ºäºè§£å³åç«¯ - æå¡ç«¯æäºå­æ®µä¸ä¸è´ï¼å¨è¯»åãä¿å­ç«¯å¨æè½¬æ¢\n */\n\nimport { map, mergeMap, tap } from 'rxjs/operators'\n/**\n * æ å°è¡¨\n * åç«¯åï¼åç«¯å\n */\nconst fieldMapping = {\n  pageInfo: {\n    title: 'name',\n    // config: 'simpleLayout'\n  },\n  portlet: {\n\n  },\n  widget: {\n\n  }\n}\n/** ååæ å°è¡¨ï¼èªå¨æä¸é¢çæ­£åè¡¨åè¿æ¥ */\nconst fieldMappingInverse = (function () {\n  let resultMapping = {}\n  Object.keys(fieldMapping).forEach(entityType => {\n    resultMapping[entityType] = {}\n    Object.keys(fieldMapping[entityType]).forEach(originKey => {\n      resultMapping[entityType][fieldMapping[entityType][originKey]] = originKey\n    })\n  })\n  return resultMapping\n})()\n\n/**\n * æ¥ååå¯¹è±¡ï¼è½¬æ¢åºæ°å¯¹è±¡\n * @param originEntity å¾è½¬æ¢åå¯¹è±¡\n * @param entityType å¯¹è±¡ç±»åï¼åºä¸º fieldMapping çå±æ§å\n * @param inverse æ¯å¦ååè½¬æ¢ï¼é»è®¤ä¸ºåç«¯ -> åç«¯ï¼\n */\nexport function mapEntityFeilds<T>(originEntity, entityType, inverse = false) {\n  let mapping = inverse ? fieldMappingInverse : fieldMapping\n  let mappedEntity = {}\n\n  Object.keys(originEntity).forEach(key => {\n    if (mapping[entityType].hasOwnProperty(key)) {\n      mappedEntity[mapping[entityType][key]] = originEntity[key]\n    } else {\n      mappedEntity[key] = originEntity[key]\n    }\n  })\n  return mappedEntity as T\n}\n\n/**\n * è¿å rxjs ç map æä½ç¬¦è°ç¨ï¼ç¨æ³ï¼\n * ```js\n * this.http.get(url).pipe(mapFeilds<PageInfo>('pageInfo'))\n * ```\n * å¯å° http è¯·æ±å¾å°çå¯¹è±¡ pipe è½¬æ¢ä¸ºåç«¯éç¨å­æ®µï¼å¯æ¥åæ°ç»æå¯¹è±¡ï¼å¯èªå¨åºåã\n * \n * @param entityType å¯¹è±¡ç±»åï¼åºä¸º fieldMapping çå±æ§å\n * @param inverse æ¯å¦ååè½¬æ¢ï¼é»è®¤ä¸ºåç«¯ -> åç«¯ï¼\n */\n// export function mapList<T> (entityType: string, inverse = false) {\n//   return map(originData => {\n//     if (originData instanceof Array) {\n//       return originData.map(entity => {\n//         return mapEntityFeilds<T>(entity, entityType, inverse)\n//       })\n//     }\n//   })\n// }\n// export function mapEntity<T> (entityType: string, inverse = false) {\n//   return map(originData => {\n//     if (! (originData instanceof Array)) {\n//       return mapEntityFeilds<T>(originData, entityType, inverse)\n//     }\n//   })\n// }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, tap } from 'rxjs/operators';\nimport { addBaseUrl } from '../const';\nimport { PageInfo, PageWithRole, SimplePage } from '../types/page.type';\nimport { mapEntityFeilds } from '../utils/field-mapping';\n\nexport const pageInfoUrls = {\n  GET_BY_ID_MANAGE: `page/`,\n  GET_BY_ID_PERSONAL: `page/pageofuser?pageId=`,\n  GET_ALL_MANAGE: `page/all/mg`,\n  GET_ALL_PERSONAL: `page/pagelistofuser`,\n  GET_BY_ROLE: `pagerole/pagesbyrole?roleId=`,\n  GET_PAGES_WITH_ROLE: `pagerole/all`,\n  SET_TO_ROLE_DEFAULT: `pagerole/settingrolepageenable`, // roleId pageId\n  DELETE: `page/`, // delete + id\n  DELETE_MANAGE: `page/delete/mg`, // post []\n  ADD: `page`,\n  ADD_MANAGE: `page/add/mg`,\n  UPDATE: `page`,\n  UPDATE_MANAGE: `page/update/mg`,\n  COPY: `page/copy`,\n  COPY_MANAGE: `page/copy/mg`,\n  RESET_PAGE: `page/resetsyspage?pageId=`,\n  SELECT_PAGE: `page/changepageselect?pageId=`,\n}\nexport const pageRoles = {\n  SAVE: `pagerole/save?pageId=`,\n  GET_BY_PAGE_ID: `pagerole/getallpagerole?pageId=`,\n}\naddBaseUrl(pageInfoUrls)\naddBaseUrl(pageRoles)\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageRepo {\n\n  constructor (\n    private http: HttpClient,\n  ) { }\n\n  getPagesManage () {\n    return this.http\n      .get<any[]>(pageInfoUrls.GET_ALL_MANAGE)\n      .pipe(map(data => data.map(convertPageInfo)))\n  }\n  getPagesUser () {\n    return this.http\n      .get<SimplePage[]>(pageInfoUrls.GET_ALL_PERSONAL)\n  }\n  getPagesByRole (roleId: string) {\n    return this.http\n      .get<PageWithRole[]>(pageInfoUrls.GET_BY_ROLE + roleId)\n  }\n  getPagesWithRole () {\n    return this.http.get<PageWithRole[]>(pageInfoUrls.GET_PAGES_WITH_ROLE)\n  }\n  setRoleDefaultPage (roleId: string, pageId: string) {\n    return this.http\n      .post(pageInfoUrls.SET_TO_ROLE_DEFAULT, null, {\n        params: { pageId, roleId }\n      }).pipe(this.success())\n  }\n  getPageInfoById (id: string, isManage = false) {\n    return this.http\n      .get<PageInfo>((isManage\n        ? pageInfoUrls.GET_BY_ID_MANAGE\n        : pageInfoUrls.GET_BY_ID_PERSONAL)\n        + id)\n      .pipe(map(data => convertPageInfo(data)))\n  }\n  savePageInfo (pageInfo: PageInfo, isManage = false) {\n    return pageInfo.id\n      ? this.http.post(\n        isManage ? pageInfoUrls.UPDATE_MANAGE : pageInfoUrls.UPDATE,\n        convertPageInfoInverse(pageInfo)\n      ).pipe(this.success())\n      : this.http.put(\n        isManage ? pageInfoUrls.ADD_MANAGE : pageInfoUrls.ADD,\n        convertPageInfoInverse(pageInfo)\n      ).pipe(this.success())\n  }\n  deletePageInfo (id: string) {\n    return this.http\n      .delete(pageInfoUrls.DELETE + id, { responseType: 'text' })\n      .pipe(this.success())\n  }\n  deletePageInfoManage (ids: string[]) {\n    return this.http\n      .post(pageInfoUrls.DELETE_MANAGE, ids)\n      .pipe(this.success())\n  }\n  copyPageInfo (ids: string[], isManage = false) {\n    return this.http\n      .post(isManage ? pageInfoUrls.COPY_MANAGE : pageInfoUrls.COPY, ids, { responseType: 'text' })\n  }\n  resetPage (pageId: string) {\n    return this.http.post(pageInfoUrls.RESET_PAGE + pageId, null)\n  }\n  selectPage (pageId: string) {\n    return this.http.post(pageInfoUrls.SELECT_PAGE + pageId, null)\n  }\n\n  // TODO: ä¸è¯¥å¨è¿ä¾èµ nzmsgï¼åºç§»å°ä½¿ç¨å¤\n  private success () {\n    return tap<any> (\n      () => {\n        // this.nzMsg.success(`æä½æåï¼`, { nzDuration: 1000 })\n      }\n    )\n  }\n  /** page roles */\n  savePageRoles (pageId: string, roleIds: string[]) {\n    return this.http.post(pageRoles.SAVE + pageId, roleIds)\n  }\n  getPageRoles (pageId: string) {\n    return this.http.get<PageWithRole[]>(pageRoles.GET_BY_PAGE_ID + pageId)\n  }\n}\n\n/** pageInfo åç«¯ -> åç«¯, åç«¯ -> åç«¯ è½¬æ¢ */\nexport function convertPageInfo (original) {\n  const result: PageInfo = mapEntityFeilds(original, 'pageInfo')\n  result.config = JSON.parse(result.config as any)\n  return result\n}\nexport function convertPageInfoInverse (pageInfo) {\n  const result: any = mapEntityFeilds(pageInfo, 'pageInfo', true)\n  // ä¿å­æ¶ï¼å é¤ pageInfo.config.layout çåç´ ç portlet\n  result.config.layout = result.config.layout.map(item => {\n    const { instanceId, isBAPortlet, gridsterItem, portletId, link } = item\n    return { instanceId, isBAPortlet, gridsterItem, portletId, link }\n  })\n  result.config = JSON.stringify(result.config)\n  return result\n}\n","\nexport interface AppOptions {\n  /**\n   * æå®å½åæå¼çæ¯èåï¼Menuï¼è¿æ¯åºç¨ï¼Appï¼\n   */\n  appType: string;\n  /*** å¦ææå¼èåï¼funcIdéè¦æå®ï¼appIdãappEntranceå¯ä»¥ä¸ºç©º */\n  funcId: string;\n  /*** å¦ææå¼åºç¨ï¼appIdåappEntranceéè¦æå®ï¼funcIdå¯ä»¥ä¸ºç©º */\n  appId: string;\n  appEntrance: string;\n  tabId?: string;\n  tabName?: string;\n  routeUrl?: string;\n  entityParams?: any;\n  queryStringParams?: Map<string, string>;\n  isReload?: boolean;\n  isJquery?: boolean;\n}\n\n\nexport interface BO {\n  id: string\n  code: string\n  name: string\n  description: string\n  sysInit: string\n  sortOrder: string\n  isDetail: string\n  layer: string\n  type: string\n  parentID: string\n}\n\nexport interface RoleGroup {\n  id: string // \"Sys_Developer\"\n  code: string // \"Sys_Developer\"\n  name: string // \"ç³»ç»å¼å\"\n  path: string // \"0002\"\n  layer: number // 1\n  isDetail: boolean // false\n  sysInit: boolean // false\n  note: string // \"ç³»ç»å¼å\"\n  parentId: string // \"\"\n  sortOrder: number // 2\n  creator: string // \"admin\"\n  createdTime: Date // \"2019-05-10T10:27:51.403\"\n  lastModifier: string // \"admin\"\n  lastModifiedTime: Date // \"2020-03-11T10:37:51.117858\"\n  farris_selectable: boolean // true\n}\n\nexport interface Role {\n  id: string // \"4dd6d21-0f12-43d0-a70e-b1bd7d777a98\"\n  code: string // \"ceshi01\"\n  name: string // \"æµè¯åè½ç»01\"\n  roleGroup: string // \"Sys_Developer\"\n  roleGroupCode: string // \"Sys_Developer\"\n  roleGroupName: string // \"ç³»ç»å¼å\"\n  note: string // null\n  sysInit: boolean // false\n  state: number // 0\n  validFrom: string // null\n  validTo: string // null\n  createdTime: Date // \"2020-03-11T10:36:18.206543\"\n  creator: string // \"admin\"\n  creatorCode: string // \"admin\"\n  creatorName: string // \"ç³»ç»ç®¡çå\"\n  lastModifiedTime: Date // null\n  lastModifier: Date // null\n  lastModifierCode: Date // null\n  lastModifierName: Date // null\n  isRole?: boolean\n}\n\nexport interface Operation {\n  id?: string, name?: string\n}\n\n/**\n * æ¥èªå®¶å¥ç /api/runtime/sys/v1.0/userinfos?infoType=user æ¥å£\n */\nexport interface UserInfo {\n  address: string\n  code: string\n  email: string\n  id: string\n  idCard: string\n  lanName: string\n  languageId: string\n  mobilePhone: string\n  name: string\n  orgId: string\n  orgName: string\n  phone: string\n  qq: string\n  sex: string\n  tenantId: number\n  tenantName: string\n  userId: string\n  userSetting: UserSetting\n  weChat: string\n}\nexport interface UserSetting {\n  id: string\n  img: string\n  imgblob: string\n  userId: string\n}\n\nexport interface InvokeInfo {\n  Type: string;\n  Path: string;\n  Url: string;\n  Image: string;\n  Width: number;\n  Height: number;\n}\n\nexport interface RtfFunc {\n  id: string\n  code: string\n  name: string\n  tenantId: number\n  isModule: boolean\n  isDetail: boolean\n  isSysMenu: boolean\n  parentId: string\n  sortOrder: number\n  bizObjectId: string\n  bizOpId: string\n  icon: string // é»è®¤å¼æ¯null ?\n  invokingConfig: string | InvokeInfo\n  isWorkStation: boolean\n  lastModifiedTime: string\n  lastModifier: string\n  creator: string\n  createdTime: string\n  funcType: FuncType\n  path: string\n  layer: string\n  description: string\n  child: RtfFunc[]\n}\n\nexport enum FuncType {\n  Products = '1',\n  Module = '2',\n  AppGroups = '3',\n  App = '4'\n}\n","import { GridsterItem } from '@gspwidget/gridster'\nimport { Portlet } from './portlet.type'\n\n/** é¡µé¢çä¿å­ç»æ */\nexport class PageInfo {\n  name = ''\n  i18nName = {}\n  config?: PageConfig = new PageConfig()\n  // isSys?: boolean, /** æ¯å¦æ¯ç³»ç»é¢å¶é¡µé¢ï¼ç¨æ·æ æ³ç¼è¾ */\n  creator?: string\n  createTime?: Date\n  modifier?: string\n  modifyTime?: Date\n  pageType?: 'SYSTEM' | 'PUBLIC' | 'PERSONAL'\n  // TODO: å¸æâé¡µé¢ç®¡çâéï¼æå¡ç«¯è¿åçåè¡¨ä¸­ç page å ä¸å½åé¡µé¢åéç»çåè½ç»åè¡¨ï¼å¦ææ§è½æ²¡é®é¢çè¯\n  constructor (\n    public id?: string\n  ) {}\n}\n/** è¿è¡æ¶é¡µé¢å¾å°çé¡µé¢åè¡¨ï¼æ¯è¿ä¹ä¸ªç®åç©æ */\nexport interface SimplePage {\n  pageId: string\n  pageName: string\n  selected: boolean\n  pageType?: 'SYSTEM' | 'PUBLIC' | 'PERSONAL'\n}\n\n/** æå°é¡µé¢ä¸çé¨ä»¶å®ä¾ï¼åç«¯çæ id */\nexport interface PortletInstance {\n  instanceId: string\n  isBAPortlet: boolean\n  gridsterItem: GridsterItem\n  portletId: string\n  /** èå¨éç½® */\n  link?: LinkMap\n  /**\n   * æ¥èªåç«¯ï¼\n   * 1. è®¾è®¡æ¶æå¥\n   * 2. å è½½å®æèµå¼\n   * çæ­£ä¿å­æ¶ä¸å­å®ã\n   */\n  portlet?: Portlet\n}\nexport interface LinkMap {\n  [eventName: string]: {\n    [toPInsId: string]: {\n      dpId?: string\n      active?: boolean\n    }\n  }\n}\nexport class PageConfig {\n  type?: 'gridster' | 'func' = 'gridster'\n  /** å½ type ä¸º gridsterï¼å¸å±ä¿¡æ¯ */\n  layout?: PortletInstance[] | any = []\n  /** å½ type ä¸º funcï¼èå id */\n  funcId?: string\n  /** TODO: å½åé¡µé¢å¶ä»éç½®ï¼æ¯å¦ gridster options */\n}\n\nexport interface PageWithRole {\n  id: string,\n  roleId: string\n  roleName: string\n  pageId: string\n  pageName: string\n  createTime: Date\n  creator: string\n  enable: boolean\n}\n","import { Type } from '@angular/core';\nimport { I18nValue } from './common.type';\n\nexport interface BasicWidgetInfoAotMode {\n  name?: string\n  href?: string\n  baseUrl?: string\n  version: string\n}\nexport interface BasicWidgetInfoDevMode {\n  widgetComponent: Type<unknown>\n  baseUrl?: string,\n  name?: string\n  version: string\n}\nexport type BasicWidgetInfo = BasicWidgetInfoAotMode | BasicWidgetInfoDevMode\n\nexport enum WidgetContainerMode {\n  AOT, /** æ­£å¸¸çå¤é¨ç¯å¢åºè¯¥ç¨ aotï¼æ¯å¦ Dashboard */\n  DEV, /** åé¨ä»¶å¼åé¡¹ç®ç¨è¿ä¸ªï¼æ­¤æ¨¡å¼ä¸ TODO: */\n  JIT\n}\n\nexport interface Size {\n  minCols?: number, maxCols?: number,\n  minRows?: number, maxRows?: number,\n}\nexport interface WidgetLayoutGridConfig {\n  minCols?: number, maxCols?: number,\n  minRows?: number, maxRows?: number,\n  cols?: number, rows?: number /** ååææ¾è¿æ¥çæ¨èé»è®¤å¤§å° */\n}\nexport interface WidgetLayout {\n  grid: WidgetLayoutGridConfig\n}\nexport interface WidgetInfo {\n  /** æ³¨ååçæ */\n  id: string,\n  widgetCode: string, // åé¨ä»¶ç§ç±»\n  href: string,\n  /** æ¥èªåé¨ä»¶éç½®ä¿¡æ¯ */\n  su: string\n  i18nName: I18nValue\n  i18nDesc: I18nValue\n  name: string,\n  version?: string,\n  displayName: string,\n  // moduleName: string,\n  desc?: string,\n  layout?: WidgetLayout,\n  logoImgUrl?: string,\n  previewImgUrl?: string,\n  /** åé¨ä»¶å­æ¾çæ ¹è·¯å¾ï¼æ³¨æè¿ä¸ªç»å°¾ï¼æ²¡æ æ­£ææ  '/' ï¼ */\n  baseUrl?: string\n}\n\nexport interface FilterWidgetEventParam {\n  eventKey: string\n  value: any\n}\n\nexport interface WidgetEventConfig {\n  /** å¯éç½®ä¸ºä»»ææ¾ç¤ºåç§°ï¼æå½éå code */\n  name?: string\n  desc?: string\n  /** äºä»¶å¯¹åºå±æ§åï¼ç¨åºèªå¨èµå¼ï¼ä¸éè¦éç½® */\n  propName?: string\n}\n","export class ArrUtil {\n  static SwapByIndex (arr: any[], i, j) {\n    const tmp = arr[i]\n    arr[i] = arr[j]\n    arr[j] = tmp\n  }\n  static Add (arr: any[], newItem) {\n    arr.push(newItem)\n  }\n  static Up (arr: any[], item) {\n    const i = arr.indexOf(item)\n    if (i < 1) return\n    ArrUtil.SwapByIndex(arr, i, i-1)\n  }\n  static Down (arr: any[], item) {\n    const i = arr.indexOf(item)\n    if (i > arr.length - 2) return\n    ArrUtil.SwapByIndex(arr, i, i+1)\n  }\n  static Remove (arr: any[], item) {\n    const i = arr.indexOf(item)\n    if (i === -1) return\n    arr.splice(i, 1)\n\n    // arr = arr.filter(i => item!==i)\n  }\n  static Unique (arr: any[]) {\n    return Array.from(new Set(arr))\n  }\n  // TODO: æåç´ å¯¹è±¡çæå­æ®µæåº\n}","/**\n * é¨ä»¶ç³»ç»é»è®¤è²ç³»ã\n * ç´æ¥ç¨çç¼ºé·æ¯æ æ³æ¿å° home.config.json ä¸­å®å¶çè²ç³»å¼ï¼\n * å°½éç¨ colors\n */\nexport class PlThemeColors {\n  static pure = [\n    '#F5B805', '#FF9300', '#EC7658', '#897AFB', '#5E6EEB',\n    '#4D97FF', '#01BBC7', '#3DDB88', '#A4EA4D', '#93A3D3',\n    '#000000', '#ffffff'\n  ]\n  static gradient = [\n    '#FBDD0C,#F5B805',\n    '#FFB046,#FF9300',\n    '#FF9579,#EC7658',\n    '#8B99FF,#897AFB',\n    '#7F8DFF,#5E6EEB',\n    '#79B1FF,#4D97FF',\n    '#00DBE9,#01BBC7',\n    '#46FA9B,#3DDB88',\n    '#C1FF73,#A4EA4D',\n    '#B5C7FD,#93A3D3',\n  ]\n  static SetColors (pure: string[], gradient: string[]) {\n    this.SetPure(pure)\n    this.SetGradient(gradient)\n  }\n  static SetPure (pure: string[]) {\n    if (pure && pure.length > 0) this.pure = pure\n  }\n  static SetGradient (gradient: string[]) {\n    if (gradient && gradient.length > 0) this.gradient = gradient\n  }\n\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
