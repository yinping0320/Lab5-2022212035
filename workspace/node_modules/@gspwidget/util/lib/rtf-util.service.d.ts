import { EventEmitter } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { TranslateService } from '@ngx-translate/core';
export interface RtfTabChangeEvent {
    appEntrance: string;
    appId: string;
    appType: string;
    funcId: string;
    tabId: string;
    tabName: string;
}
export declare class RtfUtilService {
    private translate;
    constructor(translate: TranslateService);
    openMenu(funcId: string, queryParamArray?: Map<string, string>, tabId?: string, isReload?: boolean): void;
    closeMenu(funcId: string, tabId?: string): void;
    openApp(appId: string): void;
    openUserInfoMenu(): void;
    closeCurRtfTab(route: ActivatedRoute): void;
    onRtfTabChangeToMe(route: ActivatedRoute, condition?: (toTabId: string, curTabId: string) => boolean): EventEmitter<{}>;
}
/** 用函数是为了延迟注册事件，否则 rtf service 可能还没挂在 window 上 */
export declare function onRtfTabChange(): EventEmitter<RtfTabChangeEvent>;
