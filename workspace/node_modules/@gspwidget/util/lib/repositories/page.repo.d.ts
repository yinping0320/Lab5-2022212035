import { HttpClient } from '@angular/common/http';
import { PageInfo, PageWithRole, SimplePage } from '../types/page.type';
export declare const pageInfoUrls: {
    GET_BY_ID_MANAGE: string;
    GET_BY_ID_PERSONAL: string;
    GET_ALL_MANAGE: string;
    GET_ALL_PERSONAL: string;
    GET_BY_ROLE: string;
    GET_PAGES_WITH_ROLE: string;
    SET_TO_ROLE_DEFAULT: string;
    DELETE: string;
    DELETE_MANAGE: string;
    ADD: string;
    ADD_MANAGE: string;
    UPDATE: string;
    UPDATE_MANAGE: string;
    COPY: string;
    COPY_MANAGE: string;
    RESET_PAGE: string;
    SELECT_PAGE: string;
};
export declare const pageRoles: {
    SAVE: string;
    GET_BY_PAGE_ID: string;
};
export declare class PageRepo {
    private http;
    constructor(http: HttpClient);
    getPagesManage(): import("rxjs").Observable<PageInfo[]>;
    getPagesUser(): import("rxjs").Observable<SimplePage[]>;
    getPagesByRole(roleId: string): import("rxjs").Observable<PageWithRole[]>;
    getPagesWithRole(): import("rxjs").Observable<PageWithRole[]>;
    setRoleDefaultPage(roleId: string, pageId: string): import("rxjs").Observable<any>;
    getPageInfoById(id: string, isManage?: boolean): import("rxjs").Observable<PageInfo>;
    savePageInfo(pageInfo: PageInfo, isManage?: boolean): import("rxjs").Observable<any>;
    deletePageInfo(id: string): import("rxjs").Observable<any>;
    deletePageInfoManage(ids: string[]): import("rxjs").Observable<any>;
    copyPageInfo(ids: string[], isManage?: boolean): import("rxjs").Observable<string>;
    resetPage(pageId: string): import("rxjs").Observable<Object>;
    selectPage(pageId: string): import("rxjs").Observable<Object>;
    private success;
    /** page roles */
    savePageRoles(pageId: string, roleIds: string[]): import("rxjs").Observable<Object>;
    getPageRoles(pageId: string): import("rxjs").Observable<PageWithRole[]>;
}
/** pageInfo 后端 -> 前端, 前端 -> 后端 转换 */
export declare function convertPageInfo(original: any): PageInfo;
export declare function convertPageInfoInverse(pageInfo: any): any;
