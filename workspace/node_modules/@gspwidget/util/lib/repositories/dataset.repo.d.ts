import { HttpClient } from '@angular/common/http';
import { Agg, AggResult, Dataset, DatasetDto, Dimension, DpValue, RuntimeAggOption } from '../types/data.type';
export declare const datasetUrls: {
    GET_BY_ID: string;
    CREATE: string;
    IMPORT_QO: string;
    DELETE: string;
    GET_ALL: string;
    GET_RAW_DIMS_BY_DATASET: string;
    GET_RAW_DATA_BY_DATASET: string;
    UPDATE: string;
};
export declare const aggUrls: {
    SAVE: string;
    GET_BY_RESOURCE: string;
};
export declare const dataResultSetUrls: {
    GET_BY_AGG_ID: string;
    GET_BY_AGG: string;
    GET_BY_DATASET: string;
    GET_BY_RESOURCE: string;
};
export declare class DatasetRepo {
    private http;
    constructor(http: HttpClient);
    getRawDimsByDataset(datasetDto: DatasetDto): import("rxjs").Observable<Dimension[]>;
    getRawColsNDataByDataset(datasetDto: DatasetDto): import("rxjs").Observable<{
        columns: string[];
        data: any[];
    }>;
    getDatasets(): import("rxjs").Observable<Dataset[]>;
    getDatasetById(id: string): import("rxjs").Observable<Dataset>;
    saveDataset(datasetDto: DatasetDto): import("rxjs").Observable<Dataset>;
    importQO(ids: string[]): import("rxjs").Observable<Object>;
    deleteDataset(datasetId: string): import("rxjs").Observable<any>;
    /** agg */
    getAggByPortletId(portletId: string): import("rxjs").Observable<Agg>;
    saveAgg(agg: Agg): import("rxjs").Observable<Agg>;
    /** result */
    getAggResultByAgg(agg: Agg, dpValues?: DpValue[], runtimeAgg?: RuntimeAggOption): import("rxjs").Observable<AggResult>;
    getResultByPortletId(portletId: string, dpValues?: DpValue[], filter?: string, runtimeAgg?: RuntimeAggOption): import("rxjs").Observable<AggResult>;
}
