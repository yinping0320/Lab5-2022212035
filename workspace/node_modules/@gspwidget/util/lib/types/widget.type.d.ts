import { Type } from '@angular/core';
import { I18nValue } from './common.type';
export interface BasicWidgetInfoAotMode {
    name?: string;
    href?: string;
    baseUrl?: string;
    version: string;
}
export interface BasicWidgetInfoDevMode {
    widgetComponent: Type<unknown>;
    baseUrl?: string;
    name?: string;
    version: string;
}
export declare type BasicWidgetInfo = BasicWidgetInfoAotMode | BasicWidgetInfoDevMode;
export declare enum WidgetContainerMode {
    AOT = /** 正常的外部环境应该用 aot，比如 Dashboard */ 0,
    DEV = /** 元部件开发项目用这个，此模式下 TODO: */ 1,
    JIT = 2
}
export interface Size {
    minCols?: number;
    maxCols?: number;
    minRows?: number;
    maxRows?: number;
}
export interface WidgetLayoutGridConfig {
    minCols?: number;
    maxCols?: number;
    minRows?: number;
    maxRows?: number;
    cols?: number;
    rows?: number; /** 刚刚拖放进来的推荐默认大小 */
}
export interface WidgetLayout {
    grid: WidgetLayoutGridConfig;
}
export interface WidgetInfo {
    /** 注册后生成 */
    id: string;
    widgetCode: string;
    href: string;
    /** 来自元部件配置信息 */
    su: string;
    i18nName: I18nValue;
    i18nDesc: I18nValue;
    name: string;
    version?: string;
    displayName: string;
    desc?: string;
    layout?: WidgetLayout;
    logoImgUrl?: string;
    previewImgUrl?: string;
    /** 元部件存放的根路径，注意这个结尾，没有 正斜杠 '/' ！ */
    baseUrl?: string;
}
export interface FilterWidgetEventParam {
    eventKey: string;
    value: any;
}
export interface WidgetEventConfig {
    /** 可配置为任意显示名称，或国际化 code */
    name?: string;
    desc?: string;
    /** 事件对应属性名，程序自动赋值，不需要配置 */
    propName?: string;
}
