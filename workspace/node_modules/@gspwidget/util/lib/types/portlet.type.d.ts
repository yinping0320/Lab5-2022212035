import { DataParam } from './data.type';
import { Size, WidgetInfo } from './widget.type';
export declare const DEFAULT_PORTLET_COLS = 5;
export declare const DEFAULT_PORTLET_ROWS = 4;
declare type SizeKey = 'minCols' | 'minRows' | 'maxCols' | 'maxRows' | 'rows' | 'cols';
/** 部件 */
export declare abstract class Portlet {
    id?: string; /** 唯一标识 */
    getSize(key: SizeKey): any;
    abstract _getAxisSize(key: SizeKey): any;
}
export declare class EppPortlet extends Portlet {
    /** 元部件 Id */
    widgetId: string;
    constructor(
    /** 元部件 Id */
    widgetId: string);
    name: string; /** 显示标题 */
    i18nName: {
        [key: string]: any;
    };
    desc?: string; /** 备注 */
    size?: Size; /** 尺寸范围 */
    widget?: WidgetInfo;
    propValues: {
        [key: string]: any;
    }; /** 可配置属性的值 */
    dataOption: {
        [key: string]: any;
    };
    moduleId?: string; /** 所属模块 */
    /**
     * 配置联动时，前端动态增加。只做运行时使用，不应该被保存。
     * null 代表初始状态，[] 代表数据已加载且为空。
     */
    dps: DataParam[];
    _getAxisSize(key: SizeKey): any;
}
export declare class BAPortlet extends Portlet {
    isBA: boolean;
    name: string;
    _getAxisSize(key: SizeKey): number;
}
export {};
