{"version":3,"file":"gspwidget-widget-core.js.map","sources":["ng://@gspwidget/widget-core/lib/dynamic-loader.service.ts","ng://@gspwidget/widget-core/lib/instance.service.ts","ng://@gspwidget/widget-core/lib/title-bar/title-bar.component.ts","ng://@gspwidget/widget-core/lib/widget/runtime-agg.ts","ng://@gspwidget/widget-core/lib/widget/widget.component.ts","ng://@gspwidget/widget-core/lib/filter/filter.component.ts","ng://@gspwidget/widget-core/lib/flat-select/flat-select.component.ts","ng://@gspwidget/widget-core/lib/flat-select/flat-select.module.ts","ng://@gspwidget/widget-core/lib/filter/filter.module.ts","ng://@gspwidget/widget-core/lib/widget-core.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { ComponentFactoryResolver, getModuleFactory, Injectable, Injector, NgModuleFactory, NgModuleFactoryLoader } from '@angular/core';\nimport { BasicWidgetInfoAotMode, BasicWidgetInfoDevMode, WidgetContainerMode } from '@gspwidget/util';\nimport { appendScript } from '@gspwidget/util';\nimport { WidgetPropertyService, WidgetRegistry } from '@gspwidget/widget-devkit';\n\nimport * as AngularCommon from '@angular/common'\nimport * as AngularCommonHttp from '@angular/common/http'\nimport * as AngularCore from '@angular/core'\nimport * as AngularForms from '@angular/forms'\nimport * as AngularPlatformBrowser from '@angular/platform-browser'\nimport * as AngularPlatformBrowserAnimations from '@angular/platform-browser/animations'\nimport * as AngularPlatformBrowserDynamic from '@angular/platform-browser-dynamic'\nimport * as AngularRouter from '@angular/router'\nimport * as AngularAnimations from '@angular/animations'\nimport * as AngularAnimationsBrowser from '@angular/animations/browser'\nimport * as NgxTranslateCore from '@ngx-translate/core'\nimport * as NgxTranslateHttpLoader from '@ngx-translate/http-loader'\n// import * as PortletModule from '@gspwidget/portlet';\nimport * as WidgetCoreModule from '../public-api';\nimport * as WidgetDevkitModule from '@gspwidget/widget-devkit';\nimport * as UtilModule from '@gspwidget/util';\nimport { IGIX_HOME_PATH } from '@gspwidget/util';\n// import * as UtilModule from '@gspwidget/util';\n// import * as GridsterModule from '@gspwidget/gridster';\n// declare var System\n/* iGIX å systemjs ææ¶æ¯ 3.x */\nif (!window.define) {\n  appendScript(`${IGIX_HOME_PATH}assets/amd.6.js`)\n}\n\nlet sys\n\n@Injectable({ providedIn: 'root' })\nexport class DynamicLoaderService {\n\n  private initSystemjsPromise: Promise<void>\n  constructor (\n    private injector: Injector,\n    private http: HttpClient,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private widgetProperty: WidgetPropertyService,\n    ) {\n    /**\n     * ä¸ºäºé¿å ng serve æ¶ï¼webpack ä¼æ system.import\n     * æ¦æªä¸ºèªèº«çå®ç°ï¼æ æ³æ»¡è¶³ç°å¨çç»å¯¹å°åå è½½\n     */\n    sys = window['System']\n    this.initSystemjsPromise = this.initSystemjs()\n  }\n  async initSystemjs () {\n    sys.set('lib:@angular/common', AngularCommon)\n    sys.set('lib:@angular/common/http', AngularCommonHttp)\n    sys.set('lib:@angular/core', AngularCore)\n    sys.set('lib:@angular/forms', AngularForms)\n    sys.set('lib:@angular/platform-browser', AngularPlatformBrowser)\n    sys.set('lib:@angular/platform-browser/animations', AngularPlatformBrowserAnimations)\n    sys.set('lib:@angular/platform-browser-dynamic', AngularPlatformBrowserDynamic)\n    sys.set('lib:@angular/router', AngularRouter)\n    sys.set('lib:@angular/animations', AngularAnimations)\n    sys.set('lib:@angular/animations/browser', AngularAnimationsBrowser)\n    sys.set('lib:@ngx-translate/core', NgxTranslateCore)\n    sys.set('lib:@ngx-translate/http-loader', NgxTranslateHttpLoader)\n\n    // sys.set('lib:@gspwidget/portlet', PortletModule)\n    sys.set('lib:@gspwidget/widget-core', WidgetCoreModule)\n    sys.set('lib:@gspwidget/widget-devkit', WidgetDevkitModule)\n    sys.set('lib:@gspwidget/util', UtilModule)\n    // sys.set('lib:@gspwidget/gridster', GridsterModule)\n  }\n\n  /**\n   * å è½½åé¨ä»¶æä»¶ï¼å¹¶è·å widget çè¯¦ç»ä¿¡æ¯ä¾å¤é¢ç¨\n   */\n  async loadWidget (\n    widgetInfo: BasicWidgetInfoAotMode | BasicWidgetInfoDevMode,\n    rawPropValues: object,\n    mode: WidgetContainerMode) {\n    const { name: widgetName } = widgetInfo\n    let widgetCompFactory\n    let widgetModuleFactory\n    switch (mode) {\n      case WidgetContainerMode.AOT:\n        // å è½½ widget js æä»¶\n        await this.initSystemjsPromise\n        const systemModule = await sys.import(`${(widgetInfo as BasicWidgetInfoAotMode).href}?v=${widgetInfo.version}`)\n        this.fixCompFacError(systemModule)\n        // å è½½å®æåï¼è·å widget çè¯¦ç»ä¿¡æ¯ä¾å¤é¢ç¨\n        widgetCompFactory = getWidgetComponentFactory(widgetName, systemModule)\n        widgetModuleFactory = getModuleFactoryAot(systemModule)\n        break\n      case WidgetContainerMode.DEV:\n        widgetCompFactory = this.componentFactoryResolver.resolveComponentFactory((widgetInfo as BasicWidgetInfoDevMode).widgetComponent)\n        break\n    }\n    const widgetConfig = WidgetRegistry.getWidgetByName(widgetName)\n    const properties = this.widgetProperty.getWidgetProps(widgetName, widgetConfig)\n    const propValues = this.widgetProperty.mixinWidgetPropValues(properties, rawPropValues)\n    return {\n      widgetCompFactory,\n      widgetModuleFactory,\n      properties,\n      propValues,\n      widgetConfig,\n    }\n  }\n  /**\n   * TODO:\n   * ç½èæçé®é¢ï¼å»æè¯è¯ï¼æ¿ä»çåé¨ä»¶è¯è¯ãæçæ¯ä¹åä¸ç´æ²¡ä¼ å¥ module çåå ã\n   * ä¿®å¤åé¨ä»¶ä¾èµçç¬¬ä¸æ¹ç»ä»¶ä¸­ this.componentFactoryResolver.resolveComponentFactory\n   * æ¾ä¸å°ç¬¬ä¸æ¹ç»ä»¶ç ComponentFactory çé®é¢ï¼\n   * å¦ nz RateComponent æ¾ä¸å° toolTipComponent\n   */\n  fixCompFacError (systemModule) {\n    Object.keys(systemModule)\n    .filter(key => key.endsWith('ModuleNgFactory'))\n    .forEach(key => {\n      try {\n        const { _factories } = systemModule[key].create(this.injector).componentFactoryResolver\n        _factories.forEach(iFactory => {\n          // @ts-ignore\n          this.componentFactoryResolver._factories.set(iFactory.componentType, iFactory);\n        })\n      } catch (err) {}\n    })\n  }\n}\nfunction getWidgetComponentFactory (widgetName: string, systemModule: any): any {\n  const componentType = WidgetRegistry.getWidgetByName(widgetName).ctor\n  if (componentType) {\n    return Object.values(systemModule)\n      .find((fac: any) => fac.componentType === componentType)\n  }\n}\nfunction getModuleFactoryAot (systemModule: any) {\n  const key = Object\n    .keys(systemModule)\n    .find(k => k.endsWith('ModuleNgFactory'))\n  return systemModule[key] as NgModuleFactory<any>\n}\n","import { Injectable, Type } from '@angular/core';\nimport { WidgetComponent } from './widget/widget.component';\n\n/**\n * instance æè¿è¡æ¶ï¼å¨æå¤è¿è¡çä¸ä¸ªé¨ä»¶ã\n * æ­¤æå¡è¢«å¨æ¶éãè¾åºå®ä¾idä¸å®ä¾å¼ç¨ä¿¡æ¯ï¼\n * ä¸»å¨è°ç¨èä¸º widgetComponent æ portletComponent\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstanceService {\n  /** é¨ä»¶å®ä¾å¼ç¨ä¿¡æ¯ */\n  instances: {\n    [insId: string]: {\n      // portletComp: PortletComponent,\n      widgetComp?: WidgetComponent\n    }\n  } = {}\n\n  constructor () { }\n\n  getInsByPInsId (insId: string) {\n    return this.instances[insId]\n  }\n  addInsInfo (insId: string, widgetComp: WidgetComponent, type: 'widgetComp' | 'portletComp') {\n    if (!insId) console.warn('ins id ä¸ºç©º')\n    if (!this.instances[insId]) this.instances[insId] = {}\n    this.instances[insId][type] = widgetComp\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { ArrUtil, deepClone, Dimension, DpValue, Indicator, objectLiteralEqual, RuntimeAggOption } from '@gspwidget/util';\nimport { DataField, DatalessJumpConfig, FilterConfig, ifFsDateRange, isFsFlat, JumpTypes, WidgetDevkitService } from '@gspwidget/widget-devkit';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'lib-title-bar',\n  templateUrl: './title-bar.component.html',\n  styleUrls: ['./title-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TitleBarComponent implements OnInit, OnChanges {\n\n  @Input() icon = ''\n  /** æ é¢ */\n  @Input() showTitle = true\n  @Input() title = ''\n  /** æ°å­ */\n  @Input() showNumber = false\n  @Input() number = 0\n  /** è®¾ç½®æé® */\n  @Input() showSetting = false\n  @Input() settingTitle: string\n  @Output() clickSetting = new EventEmitter<any>()\n  /** å·æ°æé® */\n  @Input() showRefresh = false\n  @Output() clickRefresh = new EventEmitter<any>()\n\n  /** æ¯å¦å¯ç¨è·³è½¬ï¼å¼å¯ååé¨ä»¶éç½®ä¸­å¯éç½®å¨å±èæ¥ */\n  @Input() jumpConfig: DatalessJumpConfig\n  /** @deprecated åºæ¹ç¨ enableJumpãå¨å±èæ¥éç½® */\n  @Input() jumpProperty\n  /** @deprecated åºæ¹ç¨ enableJumpãä¸ºäºè·³è½¬æ¶è½åå°æ°æ®çç¬¬ä¸è¡ï¼ç¨æ¥æ¼æ¥è·³è½¬è·¯ç±åæ°ã */\n  @Input() data: any[]\n  /** ç­é */\n  @Input() filterConfigs: FilterConfig[]\n  /** ç»´åº¦ï¼ç¨äºè¿è¡æ¶èå */\n  @Input() dims: Dimension[] = []\n  /** æ¯å¦æ¾ç¤ºè¿è¡æ¶èå */\n  @Input() showRuntimeAgg = false\n\n  @Output() filterChange = new EventEmitter<DpValue[]>()\n  @Output() runtimeAggChange = new EventEmitter<RuntimeAggOption>()\n  @Output() init = new EventEmitter<TitleBarComponent>()\n  /** ä¼ å¥æ¨¡æ¿ */\n  @ContentChild('leftTemplate') leftTemplate: TemplateRef<ElementRef>\n  @ContentChild('rightTemplate') rightTemplate: TemplateRef<ElementRef>\n\n  JumpTypes = JumpTypes\n\n  /** é flat ç fcs */\n  outerFC: FilterConfig\n  innerFCs: FilterConfig[]\n  /** è¢«éä¸­çãæ¾ç¤ºå¨å¤é¢ç fc */\n  // selectedFC: FilterConfig\n  /** flat ç fc */\n  flatFCs: FilterConfig[]\n\n  /** èå */\n  editingRuntimeAgg = new RuntimeAggOption()\n  confirmedRuntimeAgg: RuntimeAggOption\n  runtimeAggDropdownOpen = false\n\n  constructor (\n    private devkitSvc: WidgetDevkitService,\n    public translate: TranslateService,\n  ) { }\n\n  ngOnInit () {\n    this.init.emit(this)\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes.filterConfigs) {\n      this.outerFC = null\n      this.innerFCs = null\n      const notFlatFCs = this.filterConfigs.filter(fc => !isFsFlat(fc.fs))\n      if (notFlatFCs && notFlatFCs[0]) this.outerFC = notFlatFCs[0]\n      if (notFlatFCs && notFlatFCs.length > 1) this.innerFCs = notFlatFCs.slice(1)\n      this.flatFCs = this.filterConfigs.filter(fc => isFsFlat(fc.fs))\n    }\n  }\n  /** ç¨äºå¤é¨æå¨è®¾ç½® runtime aggãå ä¸ºæ¯æ¬¡é½éè¦ deep cloneï¼æä»¥å°è£ä¸ºæå¨è°ç¨çå½æ°ï¼èéæ¨¡æ¿ç»å®ï¼ä»¥åå°æ¬¡æ°ã */\n  public setRuntimeAgg (runtimeAgg: RuntimeAggOption) {\n    if (!runtimeAgg) return\n    this.editingRuntimeAgg = deepClone(runtimeAgg)\n    this.confirmedRuntimeAgg = deepClone(runtimeAgg)\n  }\n\n  handleClickJump () {\n    this.devkitSvc.jumpWithoutData(this.jumpConfig)\n  }\n  /** æ filter åæ¥çç»æå¼ï¼å ä¸ dpId ä¸èµ·åè£ä¸º dpValues ååºå» */\n  handleFilterSingleChange (value, fc: FilterConfig) {\n    // 1. æ®éï¼ååºå¯¹åº 1 ä¸ª dp çåä¸ªå¼\n    this.filterChange.emit([{\n      value,\n      dpId: fc.dpId,\n    }])\n  }\n  handleFilterMultiChange (values: any[], fc: FilterConfig) {\n    let dpValues\n    // 2. æ¥æèå´ï¼ååºå¯¹åº 2 ä¸ª dp ç 2 ä¸ªå¼\n    if (ifFsDateRange(fc.fs)) {\n      dpValues = [\n        { value: values[0], dpId: fc.dpId },\n        { value: values[1], dpId: fc.dpId2 },\n      ]\n    } else {\n      // 3. æä¸¾å¤éï¼ååºå¯¹åº 1 ä¸ª dp çå¤ä¸ªå¼\n      dpValues = [{\n        // TODO: å¤å¼çè¿æ¥æ¹å¼æ¯å¦å¯éï¼\n        value: values.join(','), dpId: fc.dpId\n      }]\n    }\n    this.filterChange.emit(dpValues)\n  }\n\n  /** èå */\n  handleAddInd () {\n    this.editingRuntimeAgg.indicators.push(new Indicator())\n  }\n  handleRemoveInd (ind: Indicator) {\n    ArrUtil.Remove(this.editingRuntimeAgg.indicators, ind)\n  }\n  handleConfirmAgg () {\n    this.runtimeAggDropdownOpen = false\n    if (objectLiteralEqual(this.editingRuntimeAgg, this.confirmedRuntimeAgg)) return\n    this.confirmedRuntimeAgg = deepClone(this.editingRuntimeAgg)\n    this.runtimeAggChange.emit(this.confirmedRuntimeAgg)\n  }\n}\n\n","import { Dimension, PlThemeColors, RuntimeAggOption } from \"@gspwidget/util\"\nimport { DataField } from \"@gspwidget/widget-devkit\"\n\nconst aggFirstDim2Field = (runtimeAgg: RuntimeAggOption, allDims: Dimension[]) => getFieldByName(allDims, runtimeAgg.dimensions[0])\nconst aggFirstInd2Field = (runtimeAgg: RuntimeAggOption, allDims: Dimension[]) => getFieldByName(allDims, runtimeAgg.indicators[0].dimName)\nconst stackAggFields = (pure = false) => [{\n  name: 'yFieldObjs',\n  valueFactory: ({ indicators }: RuntimeAggOption, allDims: Dimension[]) => {\n    return indicators.map((ind, i) => ({\n      valueField: getFieldByName(allDims, ind.dimName),\n      color: pure\n        ? PlThemeColors.pure[i % indicators.length]\n        : PlThemeColors.gradient[i % indicators.length]\n    }))\n  }\n}, {\n  name: 'categoryFieldName',\n  valueFactory: aggFirstDim2Field\n}]\nconst barAggFields = [\n  { name: 'categoryFieldName', valueFactory: aggFirstDim2Field },\n  { name: 'valueFieldName', valueFactory: aggFirstInd2Field }\n]\nexport const chartAggFieldMap = {\n  stack: stackAggFields(),\n  area: stackAggFields(true),\n  'bar-group': stackAggFields(),\n  'widget-line': stackAggFields(true),\n  bar: barAggFields,\n  pie: barAggFields,\n  pie2: barAggFields,\n  'bar-horizontal': barAggFields,\n  'simple-line': barAggFields,\n  'bar-multiple': [{\n    categoryFieldName: aggFirstDim2Field,\n    valueFieldNameOne: aggFirstInd2Field,\n    valueFieldNameTwo: (runtimeAgg: RuntimeAggOption, allDims: Dimension[]) => getFieldByName(allDims, runtimeAgg.indicators[1].dimName),\n  }]\n}\nfunction getFieldByName (dims: Dimension[], dimName: string): DataField {\n  const { name, label } = dims.find(dim => dim.name === dimName)\n  return { name, label }\n}\nexport function isWidgetRuntimeAggActive (widgetName: string) {\n  return Object\n    .keys(chartAggFieldMap)\n    .includes(widgetName)\n}\n","import { HttpClient } from '@angular/common/http';\nimport {\n  ChangeDetectorRef, Component,\n  EventEmitter, Injector, Input,\n  OnChanges, OnInit,\n  Output, SimpleChanges, ViewChild, ViewContainerRef\n} from '@angular/core';\nimport { BasicWidgetInfo, DataWithDims, Dimension, DpValue, EppPortlet, FILTERS_WIDGET_NAME, FILTERS_WIDGET_PROP_NAME, FilterWidgetEventParam, IGIX_HOME_PATH, LinkMap, loadCommonStyleNTheme, objectLiteralEqual, RuntimeAggOption, WidgetContainerMode } from '@gspwidget/util';\nimport {\n  FilterConfig,\n  FilterSchema,\n  FILTER_PROP_NAME,\n  RegisteredWidgetConfig, WidgetBase, WidgetDataService, WidgetEventService, WidgetInstanceInfo, WidgetPropertyService\n} from '@gspwidget/widget-devkit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { DynamicLoaderService } from '../dynamic-loader.service';\nimport { InstanceService } from '../instance.service';\nimport { TitleBarComponent } from '../title-bar/title-bar.component';\nimport { chartAggFieldMap, isWidgetRuntimeAggActive } from './runtime-agg';\n\n  /** å·²è¢« set ç¿»è¯ç langï¼ä¸æ¬¡ä¸åè¯·æ±æ­¤ lang */\n  // private langsSet: { [widgetName: string]: string[] } = {}\nconst loadedI18nUrls: string[] = []\n\ndeclare global {\n  interface Window {\n    widgetI18nResLoaded: boolean\n    widgetStyleLoaded: boolean\n    define: any\n  }\n}\nexport enum WCStatus {\n  LoadingWidget,\n  LoadingData,\n  DataEmpty,\n  Normal,\n  DataError,\n  WidgetLoadError,\n}\nexport interface GetDataOptions {\n  dpValues: DpValue[],\n  runtimeAgg: RuntimeAggOption\n}\n\nloadCommonStyleNTheme()\n/**\n * å¼å®¹é¶æ®µæ°æ®å è½½é»è¾\n * 1. è¥åé¨ä»¶ useDataEngine === true, è¯´ææ¯èåæ³ãä¸éè¦æ°æ®çåé¨ä»¶ï¼ä½å¶åé¨æªè°ç¨å è½½æ°æ®ï¼æä»¥åå§åå®æåå è½½ä¸ä¸ï¼\n *    æ°æ°æ®å è½½è¯·æ±å¤çæ°¸è¿å¯ç¨ï¼å ä¸ºä»ææ°åæ³åé¨ä»¶ä¼è§¦åï¼\n * 2. è¥ getData æå¼ï¼åç¨å®è·å¾æ°æ®ï¼ä¸ç¨çæ°æ®\n * 3. è¥åä¸­å¸¦æ 'æ¼ç¤º'ï¼åç¨æ¼ç¤ºæ°æ®\n * 4. é½ä¸æ»¡è¶³åç¨çæ°æ®\n */\n@Component({\n  selector: 'lib-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss']\n})\nexport class WidgetComponent implements OnInit, OnChanges {\n  /** å¿éï¼è¦æ¸²æç widget ä¿¡æ¯ */\n  @Input() basicWidgetInfo: BasicWidgetInfo\n  /** å¿éï¼æ­¤ widget çéç½®ä¿¡æ¯ï¼ä»å¨åé¨ä»¶å è½½æ¶èµ·ä½ç¨ï¼è¥å±æ§æ¹åï¼å¿éè°ç¨ setPropValues() */\n  @Input() propValues\n  @Input() linkMap: LinkMap\n  /** å¯é */\n  @Input() mode = WidgetContainerMode.AOT\n  /** å¯éï¼widget çéæèµæºå°åï¼ä¸è¬ä¸ç¨ç®¡ï¼ç¹æ®æåµå¯éç½®ï¼é»è®¤å¼ä¸º this.basicWidgetInfo.baseUrl + '/assets/' */\n  @Input() assetsBaseUrl: string\n  // TODO: è§£è¦ portlet\n  /** å¯éï¼é¨ä»¶ä¿¡æ¯ï¼éè¦æ³¨å¥å°åé¨ä»¶ */\n  @Input() portlet: EppPortlet = new EppPortlet(null)\n  /** å¯éï¼é¨ä»¶å®ä¾ id, è·åæ°æ®å¯è½ç¨å° */\n  @Input() instanceId: string\n  /**\n   * å¿éï¼\n   * è¥æå®ï¼ååé¨ä»¶ä¸»å¨å è½½æ°æ®æ¶ä½¿ç¨å®è·åæ°æ®ï¼\n   * ä¸åå è½½çå®æ°æ®ãç¨äºç»åé¨ä»¶è®¾ç½®åæ°æ®\n   */\n  @Input() getData: (getDataOpts: GetDataOptions) => Observable<DataWithDims>\n  @Input() status = WCStatus.LoadingWidget\n\n  /** widget å è½½å®æï¼ååºå½å widget çä¿¡æ¯ */\n  @Output() widgetLoaded = new EventEmitter()\n  /** widget component create å®æï¼ååºå½å widget çä¿¡æ¯ */\n  @Output() widgetInit = new EventEmitter()\n  @Output() runtimeAggChange = new EventEmitter()\n  // TODO: èèå»æ\n  // @Output() triggerLoadData = new EventEmitter()\n\n  @ViewChild('resizeTarget') resizeTarget\n  @ViewChild('wc', { read: ViewContainerRef }) widgetContainer: ViewContainerRef\n  @ViewChild('titleBar') titleBar: TitleBarComponent\n\n  // public isLoading = true\n  // public status = WCStatus.Normal\n  public WCStatus = WCStatus\n  public IGIX_HOME_PATH = IGIX_HOME_PATH\n  public FILTER_PROP_NAME = FILTER_PROP_NAME\n  public width: number\n  public height: number\n  public curWidgetConfig: RegisteredWidgetConfig\n  // public feFilterValues: FrontendFilter[]\n  /** å­å¨æ­¤å±çæ°æ®ãå¯ç¨äºåç«¯ç­éãæ°æ®è·åç¶æå¤æ­ */\n  public data: any[] = null\n  /** è·åæ°æ®åå­èµ·æ¥çç»´åº¦ãå¯ç¨äºé¡µé¢è®¾è®¡æ¶ãè¿è¡æ¶è·åãæ¾ç¤ºç»´åº¦ */\n  public dims: Dimension[]\n  public widgetInstance: WidgetBase\n  public showRuntimeAgg = false\n\n  // private widgetComponentRef: ComponentRef<any>\n  // private widgetInstanceInfo: WidgetInstanceInfo\n  private widgetDataService: WidgetDataService\n  /** å¬å±å¤´ä¸æ¯å¦æ¾ç¤ºè¿è¡æ¶èåéç½® */\n\n  constructor (\n    private loader: DynamicLoaderService,\n    private cd: ChangeDetectorRef,\n    private injector: Injector,\n    private modal: NzModalService,\n    private http: HttpClient,\n    private translate: TranslateService,\n    private widgetPropertyService: WidgetPropertyService,\n    private widgetEventService: WidgetEventService,\n    private insSerivce: InstanceService,\n  ) {\n    this._initWidgetEnv()\n  }\n  /**\n   * å¨å±åå§å\n   */\n  private _initWidgetEnv () {\n    // i18n\n    if (!this.translate.defaultLang) this.translate.setDefaultLang('zh-CHS');\n    if (!this.translate.currentLang) {\n      const lang = localStorage.getItem('languageCode') || 'zh-CHS'\n      this.translate.use(lang || 'zh-CHS')\n    }\n    if (!window.widgetI18nResLoaded) {\n      const { currentLang } = this.translate\n      this.http.get(`${IGIX_HOME_PATH}assets/i18n/${currentLang}.json`).subscribe(res => {\n        this.translate.setTranslation(currentLang, res, true)\n      })\n      window.widgetI18nResLoaded = true\n    }\n  }\n\n  ngOnInit () {\n    this.insSerivce.addInsInfo(this.instanceId, this, 'widgetComp')\n    // çå¬ resizeTarget çå¤§å°ååï¼ååæ¶è°ç¨åé¨ä»¶.onResized()ï¼ä¼ å¥ DomRectReadonly\n    if (this.resizeTarget) {\n      new ResizeObserver(entries => {\n        const { width, height } = entries[0].contentRect\n        if (this.widgetInstance) this.widgetInstance.onResized(width, height)\n        this.width = width\n        this.height = height\n        this.cd.markForCheck()\n      }).observe(this.resizeTarget.nativeElement)\n    }\n  }\n\n  ngOnChanges (c: SimpleChanges) {\n    const { basicWidgetInfo } = c\n    if (basicWidgetInfo && basicWidgetInfo.currentValue && basicWidgetInfo.currentValue !== basicWidgetInfo.previousValue) {\n      // widget åäºï¼æ¸²ææ°åé¨ä»¶\n      this.renderWidget()\n    }\n  }\n  /**\n   * æ­¤ container è¢« gridster æ¸²æåºæ­£ç¡®çå¤§å°äºä»¶\n   */\n  public triggerWidgetResize () {\n    if (this.widgetInstance && this.widgetInstance.onResized) {\n      const { clientWidth, clientHeight } = this.resizeTarget.nativeElement\n      this.widgetInstance.onResized(clientWidth, clientHeight)\n    }\n  }\n  // TODO: è¿äºé½æ¹é æï¼åæ°ä¸ºä¸ä¸ªå¯¹è±¡ï¼éé¢å¯ä»¥ä¸æ¬¡å¡å¤ä¸ªå±æ§-å¼ï¼å¨é¨æ´æ°ååè§¦å onPropertyChangeï¼\n  // å¦åååå§åå®è¦èµå¤ä¸ªå¼çæåµï¼éç¥è§¦åå¤ªé¢ç¹äºï¼ä¹ä¼å¯¼è´é¢ç¹è§¦ååé¨ä»¶æ¸²æãæ°æ®å è½½\n  /**\n   * å¤é¨æ´æ°åé¨ä»¶ propValues çæå±æ§åï¼éè¦è°ç¨æ­¤æ¹æ³ï¼å¦åæä»¬ä¸ç¥é propValues åçäºååã\n   * ä¸å¤ªå¥½ç²¾ç®æè¿ä¸ªæ¹æ³ãå°è¯è¿ç¨ keyValueDiffer å¨ ngDoCheck ä¸­æ£æµ propValues ååï¼ä½ä»è½æ£æµä¸å±ã\n   */\n  public setPropertyValue (propName: string, pValue) {\n    // TODO: portlet ç»ææ¹ååï¼å¯ä»¥çå»è¿ä¸æ­¥ï¼__extra åºè¯¥æ ¹æ¬ä¸ä¼ä¼ è¿æ¥\n    if (propName === '__extra') return\n    // å¦æä¸æ¯ objectï¼åå¤æ­å¼å¦æ pValue ä¸å½ååé¨ä»¶å®ä¾ä¸­ç¸åï¼å°±ä¸ä¼ ç»é¨ä»¶äº\n    if (typeof pValue !== 'object' && this.widgetInstance[propName] === pValue) return\n    // TODO: é¨ä»¶éç½®æ¶ï¼è¿è¡æ¶æ´æ¹è¯­è¨çå¤ç\n    const value = this.processPV(pValue)\n    // æ¹å¼\n    this.widgetInstance[propName] = value\n    // éç¥ï¼å ä¸ºåé¨ä»¶å¯è½éè¦è¿ä¸ªæ¶æº\n    // é²æ­¢æ²¡æè¿ä¸ªæ¹æ³çèåé¨ä»¶æ¥éï¼åé¢é½ä¼åçº§æ\n    if (this.widgetInstance.onPropertyChange) {\n      this.widgetInstance.onPropertyChange(propName, value)\n    }\n    if (propName === FILTER_PROP_NAME) {\n      this.dpValues = (pValue as FilterConfig[])\n        .filter(dv => dv.dpId)\n        .map(fc => ({\n          value: FilterSchema.getDefaultValue(fc.fs),\n          dpId: fc.dpId\n        }))\n      // TODO:\n\n      // if (pValue && pValue.slice) this.propValues[FILTER_PROP_NAME] = pValue.slice()\n      // this.cd.markForCheck()\n    }\n    if (!this.propValues) this.propValues = {}\n    this.propValues[propName] = pValue\n    this.cd.markForCheck()\n  }\n\n  /* éå½æ£æ¥ pvï¼åç¹æ®å¤çï¼æ¯å¦å½éåãå¸®å© */\n  private processPV (value) {\n    const { currentLang } = this.translate\n    try {\n      value = JSON.parse(JSON.stringify(value))\n    } catch (e) { }\n    return _processPVRecursively(value)\n\n    function _processPVRecursively (pValue) {\n      if (Array.isArray(pValue)) {\n        pValue.forEach((v, i) => {\n          pValue[i] = _processPVRecursively(v)\n        })\n        return pValue\n        // i18n: å¦æ value ä¸­åå« en æ zh-CHS æ å½åè¯­è¨çkeyï¼åæ¯ i18n å­æ®µ\n      } else if (pValue && !pValue._notProcess && typeof (pValue.en + pValue['zh-CHS'] + pValue[currentLang]) === 'string') {\n        return pValue[currentLang]\n        // help\n      } else if (pValue && pValue.__type === 'help') {\n        return pValue.value\n      } else if (pValue && ['Object'].includes(pValue.constructor.name)) {\n        Object.keys(pValue).forEach(key => {\n          pValue[key] = _processPVRecursively(pValue[key])\n        })\n        return pValue\n      } else {\n        return pValue\n      }\n    }\n  }\n  public async renderWidget () {\n    // å è½½æ¸²æè¿ä¸ª widget éè¦çä¸ååæ°æ®\n    const { baseUrl } = this.basicWidgetInfo\n    const curWidgetData = await this.loader.loadWidget(this.basicWidgetInfo, this.propValues, this.mode)\n    // TODO: propValues æ¯ä¸æ¯ä¸ç¨ç»è¿ loaderï¼ç´æ¥è° widgetPropService è·åå°±è¡ï¼\n    const { widgetCompFactory, widgetModuleFactory, propValues, widgetConfig } = curWidgetData\n    this.curWidgetConfig = widgetConfig\n    this.initRuntimeAgg()\n    if (this.curWidgetConfig.enableLoadingI18n) this.loadI18nRes()\n    // åé¨ä»¶å è½½å®æäºä»¶\n    this.widgetLoaded.emit(curWidgetData)\n    // å èåé¨ä»¶\n    this.widgetContainer.remove()\n    // åå»ºæ³¨å¥å¨\n    const injector = Injector.create({\n      providers: [{\n        provide: WidgetInstanceInfo, /** åé¨ä»¶å®ä¾ä¿¡æ¯ */\n        useValue: new WidgetInstanceInfo(\n          this.portlet.id,\n          this.instanceId,\n          this.assetsBaseUrl || this.basicWidgetInfo.baseUrl + '/assets/',\n        )\n      }, {\n        provide: WidgetDataService, /** åé¨ä»¶æ°æ®æå¡ */\n        useFactory: () => {\n          this.widgetDataService = new WidgetDataService()\n          this.widgetDataService.onLoadData\n            .pipe(delay(0)) // ä¸ºé¿åç¨ of(data) ä¼åæ­¥è¿åæ°æ®ï¼å¯¼è´ data service ä¸­ç onGetData è¿æ²¡è¿åå°åé¨ä»¶æéå°±è§¦åå®äº\n            .subscribe(this.loadNSetData.bind(this))\n          return this.widgetDataService\n        },\n        deps: []\n      }],\n      parent: this.injector\n    })\n    // åå»ºãæè½½ widget ç»ä»¶\n    this.widgetInstance = this.widgetContainer.createComponent(\n      widgetCompFactory, 0, injector, undefined,\n      widgetModuleFactory && widgetModuleFactory.create(this.injector)\n    ).instance as WidgetBase\n\n    // è®¾ç½® widget ç properties ç values\n    // TODO: æ¹ä¸ºä¸æ¬¡éå¤ä¸ª\n    Object.keys(propValues).forEach(prop => {\n      this.setPropertyValue(prop, propValues[prop])\n    })\n\n    // TODO: å·²åºå¼æ¹æ¡, ä»¥ä¸ä¸ºè¿æ¸¡æ¹æ¡ä»¥å¼å®¹èåæ³åé¨ä»¶, åæå°ç§»é¤\n    this.widgetInstance.id = this.instanceId\n    this.widgetInstance.portletId = this.portlet.id\n    this.widgetInstance.assetsBaseUrl = this.assetsBaseUrl || baseUrl + '/assets/'\n    if (this.widgetInstance.useDataEngine) this.loadNSetData({})\n\n    // TODO: å®å®æä¹åæç®ä½ widget åå§åå®æï¼å¯ä»¥æ¾ç¤ºåºæ¥ãå¦åä¼æ¾ç¤º codeã\n    // this.setWidgetTranslation()\n    // event\n    this.initWidgetEventListener()\n    // åé¨ä»¶åå§åå®æäºä»¶\n    this.widgetInit.emit(curWidgetData)\n    // this.isLoading = false\n    this.status = WCStatus.Normal\n    this.cd.markForCheck()\n  }\n\n  private loadI18nRes () {\n    const { currentLang } = this.translate\n    const { name, baseUrl } = this.basicWidgetInfo\n    const { customI18nResourceUrl } = this.curWidgetConfig\n    const i18nResUrl = customI18nResourceUrl || `${baseUrl}/assets/i18n/${currentLang}.json`\n\n    // ç¼å­æ¾å è½½è¿çèµæºæä»¶åï¼ä¸æ¬¡ç¸åæä»¶ä¸åè¯·æ±ãç¼å­èµæºæä»¶åï¼æ¯å ä¸ºå¯è½å¤ä¸ªåé¨ä»¶æå®ç¸åçèµæºæä»¶ã\n    if (loadedI18nUrls.includes(i18nResUrl)) return\n    loadedI18nUrls.push(i18nResUrl)\n\n    return this.http.get(i18nResUrl).toPromise().then(res => {\n      this.translate.setTranslation(currentLang, res, true)\n    }, () => {\n      console.log(`åé¨ä»¶ ${name} æ  ${currentLang} çèµæºæä»¶`)\n    }).finally(() => {\n      return Promise.resolve()\n    })\n  }\n  /**\n   * pv ä¸­åå« {fs,dp}[]ï¼ç­éæ§ä»¶+åæ°åæ°=ç­éï¼\n   * é¨ä»¶å®ä¾ä¸­ä¿å­ {fs,dp}: filterValue\n   */\n  dpValues: DpValue[] = []\n  /**\n   * å¡æ°æ®å¥å£ 1/2: å è½½æ°æ®å¹¶å¡ç»é¨ä»¶\n   */\n  // TODO: loadNSetData å¯è½æ¯ä¸å¸¦åæ°çãåæ°åæ°å¯è½å­å¨å½å widget å®ä¾éï¼ç´æ¥åã\n  // loadNSetData ææ²¡æå¯è½å¸¦çæ¥èªé¨ä»¶çé¢å¤åæ°ï¼\n  public loadNSetData (param: {\n    dpValues?: DpValue[],\n  } = {}) {\n    const ob = this.getData({\n      dpValues: mergeDpValuesForNew(this.dpValues, param.dpValues),\n      runtimeAgg: this.runtimeAgg\n    })\n    if (!ob) return\n    ob.subscribe(dataWithDims => {\n      this.setData(dataWithDims)\n    }, this.handleDataError.bind(this))\n  }\n  /**\n   * ç»åé¨ä»¶éæ°è®¾ç½®æ°æ®ç»æï¼å¤é¨å¯è°ç¨æ­¤æ¹æ³ç»é¨ä»¶è®¾ç½®æ°æ®ã\n   */\n  public setData (pDataWithDims: DataWithDims) {\n    let dataWithDims = pDataWithDims\n    // set if empty status\n    if (!pDataWithDims || !pDataWithDims.tableData || pDataWithDims.tableData.length === 0) this.status = WCStatus.DataEmpty\n    // å¦æå¤é¢æ²¡æç» DataWithDims èæ¯ç®åæ°æ®åè¡¨ï¼å°±ç®åè½¬ä¸æãä»¥å¼å®¹ config éçåæ°æ®ç­ã\n    if (!pDataWithDims.dimensions && pDataWithDims['length']) {\n      dataWithDims = {\n        dimensions: Object\n          .keys(pDataWithDims[0])\n          .map(key => ({ name: key, label: key })),\n        tableData: (pDataWithDims as unknown as any[])\n      }\n    }\n    this.status = WCStatus.Normal\n    this.data = dataWithDims.tableData\n    this.dims = dataWithDims.dimensions\n\n    if (this.widgetDataService) this.widgetDataService.setData(dataWithDims)\n    if (this.widgetInstance && this.widgetInstance.useDataEngine) this.widgetInstance.onGetData(dataWithDims.tableData) // å¼å®¹ç¨é\n\n    // ç»åé¨ä»¶è®¾ç½®å®æ°æ®ï¼è¥æè¿è¡æ¶èåï¼è¿éè¦éæ°ç»å®å­æ®µ\n    this.setRuntimeAggDims()\n    this.cd.markForCheck()\n  }\n\n  handleDataError = () => {\n    // æ°æ®å è½½å¤±è´¥\n    this.status = WCStatus.DataError\n    this.cd.markForCheck()\n  }\n  handleClickStatusMore () {\n    this.modal.error({\n      nzTitle: 'å°é¨ä»¶éè¯¯',\n      nzContent: 'æ­¤å°é¨ä»¶çæ°æ®éç½®æ æï¼éè¦ç®¡çåéæ°éç½®æå é¤ã'\n    })\n  }\n  filterValues: any[]\n  handleFilterChange (dpValues: DpValue[]) {\n    mergeDpValues(this.dpValues, dpValues)\n    this.loadNSetData()\n  }\n  // @Input() initRuntimeAgg: RuntimeAggOption\n  /**\n   * æ­¤ runtimeAgg å­å¨å½åè¿è¡æ¶ç¨æ·éçãææ°ç runtimeAggã\n   * extra ä¸­çæ¯å­å¨å¨é¨ä»¶ä¸­çã\n   * widget ä¸è´è´£æ runtimeAgg æ¾å° extra éï¼å ä¸ºè¿éä¸ç¡®å®æ¯å¦éè¦æä¹åã\n   */\n  runtimeAgg: RuntimeAggOption\n  handleRuntimeAggChange (runtimeAgg: RuntimeAggOption) {\n    // if (objectLiteralEqual(runtimeAgg, this.runtimeAgg)) return\n    this.runtimeAgg = runtimeAgg\n    // ä¸é¢ä¸¤è¡é¡ºåºä¸¥æ ¼ï¼å ä¸ºå¤é¨å è½½æ°æ®æ¶å¯è½è¦ä¾èµå½åææ°ç runtimeAgg\n    this.runtimeAggChange.emit(runtimeAgg)\n    this.loadNSetData()\n  }\n  /** å½ååæ³éè¦ä¿è¯ renderWidget() å·²å®æ */\n  handleTitleBarInit (titleBar: TitleBarComponent) {\n    if (this.showRuntimeAgg) {\n      titleBar.setRuntimeAgg(this.runtimeAgg)\n    }\n  }\n  initRuntimeAgg () {\n    // runtime agg\n    this.showRuntimeAgg = isWidgetRuntimeAggActive(this.basicWidgetInfo.name)\n    if (this.showRuntimeAgg) {\n      this.runtimeAgg = this.propValues.__extra ? this.propValues.__extra.runtimeAgg : null\n    }\n  }\n  // TODO: ä»¥åæ su æ¾ basic... é\n  /**\n   * åå§åé¨ä»¶äºä»¶çå¬\n   */\n  private initWidgetEventListener () {\n    if (!this.linkMap) return\n    if (this.amIFilterWidget()) {\n      this.initOneEventListener(FILTERS_WIDGET_PROP_NAME)\n    } else {\n      this.widgetEventService\n        .getEventsByWidgetName(this.basicWidgetInfo.name, this.propValues)\n        .forEach(eventConfig => {\n            this.initOneEventListener(eventConfig.propName)\n        })\n      }\n  }\n  /**\n   * eventPropName æ¯äºä»¶å¯¹åºçå®éå±æ§åï¼\n   * eventKey éç½®å¨ link éçäºä»¶åã\n   * ä¸è¬ä»ä¿©æ¯ä¸æ ·çï¼åèå¯ä»¥ä¸ä¼ ã\n   * è¥æ¯ç­éé¨ä»¶ï¼åä¸¤èä¸åï¼ä¸ä¸ªæ¯ 'filter'ï¼ä¸ä¸ªæ¯å®éçäºä»¶ï¼ç­éï¼åç§°ã\n   */\n  private initOneEventListener (eventPropName: string) {\n    const eventEmitter = this.widgetInstance[eventPropName]\n    if (eventEmitter) eventEmitter.subscribe(widgetEventParam => {\n      console.log('èå¨äºä»¶è§¦åï¼åæ°ï¼' + widgetEventParam)\n      const linkEventKey = this.amIFilterWidget()\n      ? (widgetEventParam as FilterWidgetEventParam).eventKey\n      : eventPropName\n      // æ ¹æ® link map è°ç¨å¶ä» ins æ ¹æ® éæ°å è½½æ°æ®\n      const pInsLink = this.linkMap[linkEventKey]\n      Object.keys(pInsLink).forEach(pInsId => {\n        if (!pInsLink[pInsId] || !pInsLink[pInsId].active || !pInsLink[pInsId].dpId) return\n        const targetWIns = this.insSerivce.getInsByPInsId(pInsId).widgetComp\n        if (targetWIns) targetWIns.loadNSetData({\n          dpValues: [{\n            dpId: pInsLink[pInsId].dpId,\n            // TODO: èå¨åæ°å¼çå¤çå å¨è¿\n            value: String(widgetEventParam['dataIndex']),\n          }]\n        })\n      })\n    })\n  }\n  setRuntimeAggDims () {\n    if (!this.runtimeAgg) return\n    chartAggFieldMap[this.basicWidgetInfo.name].forEach(aggField => {\n      this.setPropertyValue(aggField.name, aggField.valueFactory(this.runtimeAgg, this.dims))\n    })\n  }\n  amIFilterWidget () {\n    return this.basicWidgetInfo.name === FILTERS_WIDGET_NAME\n      && this.basicWidgetInfo.baseUrl.includes('/epp/')\n  }\n}\n\n/**\n * newDpValues åå¹¶å° this.dpValuesï¼å dpId è¦çã\n * æ­¤æ¹æ³ä¼æ¹å oldDpValuesã\n */\nfunction mergeDpValues (oldDpValues: DpValue[], newDpValues: DpValue[]) {\n  for (const newDV of newDpValues.filter(dv => dv.dpId)) {\n    const targetOldDV = oldDpValues.find(oldDV => oldDV.dpId === newDV.dpId)\n    if (targetOldDV) {\n      targetOldDV.value = newDV.value\n    } else {\n      oldDpValues.push(newDV)\n    }\n  }\n}\nfunction mergeDpValuesForNew (oldDpValues: DpValue[] = [], newDpValues: DpValue[] = []) {\n  const result = oldDpValues.slice()\n  mergeDpValues(result, newDpValues)\n  return result\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Pipe, PipeTransform, SimpleChanges } from '@angular/core';\nimport { FilterSchema, FSEnum, FSEnumItem } from '@gspwidget/widget-devkit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { subDays, subMonths } from 'date-fns';\n\n@Component({\n  selector: 'filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit, OnChanges {\n  /** ç¨äºè·å¾ enum åçå¼ */\n  /** filter éç»ä¸åºè¯¥éè¦å®æ´æ°æ®ï¼å¦ååä¸æ¥è¯¢çç­éè¿æå¥æä¹ï¼ */\n  // @Input() intactData: any[] = []\n  @Input('filterSchema') fs: FilterSchema\n  @Output() singleValueChange = new EventEmitter()\n  @Output() multiValueChange = new EventEmitter()\n\n  value\n\n  constructor(\n    public translate: TranslateService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes.fs && changes.fs.currentValue != changes.fs.previousValue) {\n      this.value = FilterSchema.getDefaultValue(this.fs)\n    }\n  }\n\n  getEnumItems (): FSEnumItem[] {\n    return FSEnum.GetItems(this.fs.enum)\n  }\n  /**\n   * filter ä¸å³å¿å¤çå¦ä½çå¾ãå¤çå¤ä¸ªå¼ï¼å¤ä¸ªå¼å¯¹åºä¸ä¸ªè¿æ¯å¤ä¸ª dpï¼ï¼\n   * ä»æå¤ä¸ªå¼çæ°ç»ååºå»\n   */\n  handleChange (value) {\n    this.singleValueChange.emit(value)\n  }\n  handleChangeMulti (values: any[]) {\n    this.multiValueChange.emit(values)\n  }\n}\n\n@Pipe({ name: 'colValues' })\nexport class ColValuesPipe implements PipeTransform {\n  transform (data: any[], col: string ): any {\n    if (data && data.map) return Array.from(new Set(data.map(i => i[col])))\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'flat-select',\n  templateUrl: './flat-select.component.html',\n  styleUrls: ['./flat-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FlatSelectComponent implements OnInit {\n\n  @Input() options: {\n    label: string\n    value: any\n  }[] = []\n\n  @Input() value\n  @Output() valueChange = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlatSelectComponent } from './flat-select.component';\n\n@NgModule({\n  declarations: [\n    FlatSelectComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FlatSelectComponent,\n  ]\n})\nexport class FlatSelectModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterComponent, ColValuesPipe } from './filter.component';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { FormsModule } from '@angular/forms';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { FlatSelectModule } from '../flat-select/flat-select.module';\n\n@NgModule({\n  declarations: [\n    FilterComponent,\n    ColValuesPipe,\n  ],\n  imports: [\n    CommonModule,\n    NzSelectModule,\n    NzDatePickerModule,\n    FormsModule,\n    FlatSelectModule,\n  ],\n  exports: [\n    FilterComponent\n  ]\n})\nexport class FilterModule { }\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UtilModule } from '@gspwidget/util';\nimport { WidgetDevkitModule } from '@gspwidget/widget-devkit';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { WidgetComponent } from './widget/widget.component';\nimport { TitleBarComponent } from './title-bar/title-bar.component';\nimport { FilterModule } from './filter/filter.module';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\n// import { FilterComponent } from './filter/filter.component';\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { GridDesignerComponent } from '../../../designer/src/app/components/grid-designer/grid-designer.component';\n// import {GridsterModule as Gridster2} from '@widget/gridster';\n// TODO: å¼ç¨æ¹å¼\n// import { WidgetDevkitModule } from '@gspwidget/widget-devkit';\n\n@NgModule({\n  declarations: [\n    WidgetComponent,\n    TitleBarComponent,\n    // GridDesignerComponent,\n  ],\n  entryComponents: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AccordionModule.forRoot(),\n    ColorPickerModule,\n    // Gridster2\n    // TranslateModule.forRoot(),\n    TranslateModule,\n    NzAutocompleteModule, // TODO: è¿äº module çç»ç»æ¹å¼\n    NzModalModule,\n    NzDatePickerModule,\n    // NzSelectModule,\n    // ä¿è¯åé¨ä»¶å¨è¿å±è½è·åå°è¿éé¢çæå¡ã\n    // ä¸è½ä»æ³¨åå¨ rootï¼å ä¸ºæå¡çæå¡ä¸ä¿è¯å¨ root ä¸ï¼\n    // ä¸è½é½æ³¨åå¨ widget éï¼å ä¸ºä¼æ¯ä¸ªé¨ä»¶ä¸ä¸ªæå¡å®ä¾ï¼\n    // æ³¨åå¨è¿ä¿è¯åé¨ä»¶å¨æ­¤å±æ¾å°åä¸ä¸ªæå¡å®ä¾ãå¹¶ä¸æå¡çæå¡ä¹å¨ module éæä¾äºã\n    WidgetDevkitModule,\n    UtilModule,\n    FilterModule,\n    NzDropDownModule,\n    NzSelectModule,\n    NzInputModule,\n  ],\n  exports: [\n    WidgetComponent,\n  ],\n  providers: [\n  ]\n})\nexport class WidgetCoreModule { }\n"],"names":["DynamicLoaderService","AngularCore","WidgetCoreModule","WidgetDevkitModule","UtilModule"],"mappings":"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"}
