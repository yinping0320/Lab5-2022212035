/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * instance 指运行时，在某处运行的一个部件。
 * 此服务被动收集、输出实例id与实例引用信息，
 * 主动调用者为 widgetComponent 或 portletComponent
 */
var InstanceService = /** @class */ (function () {
    function InstanceService() {
        /**
         * 部件实例引用信息
         */
        this.instances = {};
    }
    /**
     * @param {?} insId
     * @return {?}
     */
    InstanceService.prototype.getInsByPInsId = /**
     * @param {?} insId
     * @return {?}
     */
    function (insId) {
        return this.instances[insId];
    };
    /**
     * @param {?} insId
     * @param {?} widgetComp
     * @param {?} type
     * @return {?}
     */
    InstanceService.prototype.addInsInfo = /**
     * @param {?} insId
     * @param {?} widgetComp
     * @param {?} type
     * @return {?}
     */
    function (insId, widgetComp, type) {
        if (!insId)
            console.warn('ins id 为空');
        if (!this.instances[insId])
            this.instances[insId] = {};
        this.instances[insId][type] = widgetComp;
    };
    InstanceService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    InstanceService.ctorParameters = function () { return []; };
    /** @nocollapse */ InstanceService.ngInjectableDef = i0.defineInjectable({ factory: function InstanceService_Factory() { return new InstanceService(); }, token: InstanceService, providedIn: "root" });
    return InstanceService;
}());
export { InstanceService };
if (false) {
    /**
     * 部件实例引用信息
     * @type {?}
     */
    InstanceService.prototype.instances;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdGFuY2Uuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3B3aWRnZXQvd2lkZ2V0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvaW5zdGFuY2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBUSxNQUFNLGVBQWUsQ0FBQzs7Ozs7OztBQVFqRDtJQVlFOzs7O1FBUEEsY0FBUyxHQUtMLEVBQUUsQ0FBQTtJQUVXLENBQUM7Ozs7O0lBRWxCLHdDQUFjOzs7O0lBQWQsVUFBZ0IsS0FBYTtRQUMzQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDOUIsQ0FBQzs7Ozs7OztJQUNELG9DQUFVOzs7Ozs7SUFBVixVQUFZLEtBQWEsRUFBRSxVQUEyQixFQUFFLElBQWtDO1FBQ3hGLElBQUksQ0FBQyxLQUFLO1lBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7WUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQTtRQUN0RCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBQTtJQUMxQyxDQUFDOztnQkFyQkYsVUFBVSxTQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7Ozs7MEJBVkQ7Q0E4QkMsQUF0QkQsSUFzQkM7U0FuQlksZUFBZTs7Ozs7O0lBRTFCLG9DQUtNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi93aWRnZXQvd2lkZ2V0LmNvbXBvbmVudCc7XG5cbi8qKlxuICogaW5zdGFuY2Ug5oyH6L+Q6KGM5pe277yM5Zyo5p+Q5aSE6L+Q6KGM55qE5LiA5Liq6YOo5Lu244CCXG4gKiDmraTmnI3liqHooqvliqjmlLbpm4bjgIHovpPlh7rlrp7kvotpZOS4juWunuS+i+W8leeUqOS/oeaBr++8jFxuICog5Li75Yqo6LCD55So6ICF5Li6IHdpZGdldENvbXBvbmVudCDmiJYgcG9ydGxldENvbXBvbmVudFxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBJbnN0YW5jZVNlcnZpY2Uge1xuICAvKiog6YOo5Lu25a6e5L6L5byV55So5L+h5oGvICovXG4gIGluc3RhbmNlczoge1xuICAgIFtpbnNJZDogc3RyaW5nXToge1xuICAgICAgLy8gcG9ydGxldENvbXA6IFBvcnRsZXRDb21wb25lbnQsXG4gICAgICB3aWRnZXRDb21wPzogV2lkZ2V0Q29tcG9uZW50XG4gICAgfVxuICB9ID0ge31cblxuICBjb25zdHJ1Y3RvciAoKSB7IH1cblxuICBnZXRJbnNCeVBJbnNJZCAoaW5zSWQ6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlc1tpbnNJZF1cbiAgfVxuICBhZGRJbnNJbmZvIChpbnNJZDogc3RyaW5nLCB3aWRnZXRDb21wOiBXaWRnZXRDb21wb25lbnQsIHR5cGU6ICd3aWRnZXRDb21wJyB8ICdwb3J0bGV0Q29tcCcpIHtcbiAgICBpZiAoIWluc0lkKSBjb25zb2xlLndhcm4oJ2lucyBpZCDkuLrnqbonKVxuICAgIGlmICghdGhpcy5pbnN0YW5jZXNbaW5zSWRdKSB0aGlzLmluc3RhbmNlc1tpbnNJZF0gPSB7fVxuICAgIHRoaXMuaW5zdGFuY2VzW2luc0lkXVt0eXBlXSA9IHdpZGdldENvbXBcbiAgfVxufVxuIl19