/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { HttpClient } from '@angular/common/http';
import { ChangeDetectorRef, Component, EventEmitter, Injector, Input, Output, ViewChild, ViewContainerRef } from '@angular/core';
import { EppPortlet, FILTERS_WIDGET_NAME, FILTERS_WIDGET_PROP_NAME, IGIX_HOME_PATH, loadCommonStyleNTheme, WidgetContainerMode } from '@gspwidget/util';
import { FilterSchema, FILTER_PROP_NAME, WidgetDataService, WidgetEventService, WidgetInstanceInfo, WidgetPropertyService } from '@gspwidget/widget-devkit';
import { TranslateService } from '@ngx-translate/core';
import { NzModalService } from 'ng-zorro-antd/modal';
import ResizeObserver from 'resize-observer-polyfill';
import { delay } from 'rxjs/operators';
import { DynamicLoaderService } from '../dynamic-loader.service';
import { InstanceService } from '../instance.service';
import { TitleBarComponent } from '../title-bar/title-bar.component';
import { chartAggFieldMap, isWidgetRuntimeAggActive } from './runtime-agg';
// private langsSet: { [widgetName: string]: string[] } = {}
/**
 * 已被 set 翻译的 lang，下次不再请求此 lang
 * @type {?}
 */
var loadedI18nUrls = [];
/** @enum {number} */
var WCStatus = {
    LoadingWidget: 0,
    LoadingData: 1,
    DataEmpty: 2,
    Normal: 3,
    DataError: 4,
    WidgetLoadError: 5,
};
export { WCStatus };
WCStatus[WCStatus.LoadingWidget] = 'LoadingWidget';
WCStatus[WCStatus.LoadingData] = 'LoadingData';
WCStatus[WCStatus.DataEmpty] = 'DataEmpty';
WCStatus[WCStatus.Normal] = 'Normal';
WCStatus[WCStatus.DataError] = 'DataError';
WCStatus[WCStatus.WidgetLoadError] = 'WidgetLoadError';
/**
 * @record
 */
export function GetDataOptions() { }
if (false) {
    /** @type {?} */
    GetDataOptions.prototype.dpValues;
    /** @type {?} */
    GetDataOptions.prototype.runtimeAgg;
}
loadCommonStyleNTheme();
/**
 * 兼容阶段数据加载逻辑
 * 1. 若元部件 useDataEngine === true, 说明是老写法、且需要数据的元部件，但其内部未调用加载数据，所以初始化完成后加载一下；
 *    新数据加载请求处理永远启用，因为仅有新写法元部件会触发；
 * 2. 若 getData 有值，则用它获得数据，不用真数据
 * 3. 若名中带有 '演示'，则用演示数据
 * 4. 都不满足再用真数据
 */
var WidgetComponent = /** @class */ (function () {
    /** 公共头上是否显示运行时聚合配置 */
    function WidgetComponent(loader, cd, injector, modal, http, translate, widgetPropertyService, widgetEventService, insSerivce) {
        var _this = this;
        this.loader = loader;
        this.cd = cd;
        this.injector = injector;
        this.modal = modal;
        this.http = http;
        this.translate = translate;
        this.widgetPropertyService = widgetPropertyService;
        this.widgetEventService = widgetEventService;
        this.insSerivce = insSerivce;
        /**
         * 可选
         */
        this.mode = WidgetContainerMode.AOT;
        // TODO: 解耦 portlet
        /**
         * 可选，部件信息，需要注入到元部件
         */
        this.portlet = new EppPortlet(null);
        this.status = WCStatus.LoadingWidget;
        /**
         * widget 加载完成，发出当前 widget 的信息
         */
        this.widgetLoaded = new EventEmitter();
        /**
         * widget component create 完成，发出当前 widget 的信息
         */
        this.widgetInit = new EventEmitter();
        this.runtimeAggChange = new EventEmitter();
        // public isLoading = true
        // public status = WCStatus.Normal
        this.WCStatus = WCStatus;
        this.IGIX_HOME_PATH = IGIX_HOME_PATH;
        this.FILTER_PROP_NAME = FILTER_PROP_NAME;
        // public feFilterValues: FrontendFilter[]
        /**
         * 存在此层的数据。可用于前端筛选、数据获取状态判断
         */
        this.data = null;
        this.showRuntimeAgg = false;
        /**
         * pv 中包含 {fs,dp}[]（筛选控件+取数参数=筛选）
         * 部件实例中保存 {fs,dp}: filterValue
         */
        this.dpValues = [];
        this.handleDataError = (/**
         * @return {?}
         */
        function () {
            // 数据加载失败
            _this.status = WCStatus.DataError;
            _this.cd.markForCheck();
        });
        this._initWidgetEnv();
    }
    /**
     * 全局初始化
     */
    /**
     * 全局初始化
     * @private
     * @return {?}
     */
    WidgetComponent.prototype._initWidgetEnv = /**
     * 全局初始化
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        // i18n
        if (!this.translate.defaultLang)
            this.translate.setDefaultLang('zh-CHS');
        if (!this.translate.currentLang) {
            /** @type {?} */
            var lang = localStorage.getItem('languageCode') || 'zh-CHS';
            this.translate.use(lang || 'zh-CHS');
        }
        if (!window.widgetI18nResLoaded) {
            var currentLang_1 = this.translate.currentLang;
            this.http.get(IGIX_HOME_PATH + "assets/i18n/" + currentLang_1 + ".json").subscribe((/**
             * @param {?} res
             * @return {?}
             */
            function (res) {
                _this.translate.setTranslation(currentLang_1, res, true);
            }));
            window.widgetI18nResLoaded = true;
        }
    };
    /**
     * @return {?}
     */
    WidgetComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.insSerivce.addInsInfo(this.instanceId, this, 'widgetComp');
        // 监听 resizeTarget 的大小变化，变化时调用元部件.onResized()，传入 DomRectReadonly
        if (this.resizeTarget) {
            new ResizeObserver((/**
             * @param {?} entries
             * @return {?}
             */
            function (entries) {
                var _a = entries[0].contentRect, width = _a.width, height = _a.height;
                if (_this.widgetInstance)
                    _this.widgetInstance.onResized(width, height);
                _this.width = width;
                _this.height = height;
                _this.cd.markForCheck();
            })).observe(this.resizeTarget.nativeElement);
        }
    };
    /**
     * @param {?} c
     * @return {?}
     */
    WidgetComponent.prototype.ngOnChanges = /**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        var basicWidgetInfo = c.basicWidgetInfo;
        if (basicWidgetInfo && basicWidgetInfo.currentValue && basicWidgetInfo.currentValue !== basicWidgetInfo.previousValue) {
            // widget 变了，渲染新元部件
            this.renderWidget();
        }
    };
    /**
     * 此 container 被 gridster 渲染出正确的大小事件
     */
    /**
     * 此 container 被 gridster 渲染出正确的大小事件
     * @return {?}
     */
    WidgetComponent.prototype.triggerWidgetResize = /**
     * 此 container 被 gridster 渲染出正确的大小事件
     * @return {?}
     */
    function () {
        if (this.widgetInstance && this.widgetInstance.onResized) {
            var _a = this.resizeTarget.nativeElement, clientWidth = _a.clientWidth, clientHeight = _a.clientHeight;
            this.widgetInstance.onResized(clientWidth, clientHeight);
        }
    };
    // TODO: 这些都改造成，参数为一个对象，里面可以一次塞多个属性-值，全部更新后再触发 onPropertyChange，
    // 否则像初始化完要赋多个值的情况，通知触发太频繁了，也会导致频繁触发元部件渲染、数据加载
    /**
     * 外部更新元部件 propValues 的某属性后，需要调用此方法，否则我们不知道 propValues 发生了变化。
     * 不太好精简掉这个方法。尝试过用 keyValueDiffer 在 ngDoCheck 中检测 propValues 变化，但仅能检测一层。
     */
    // TODO: 这些都改造成，参数为一个对象，里面可以一次塞多个属性-值，全部更新后再触发 onPropertyChange，
    // 否则像初始化完要赋多个值的情况，通知触发太频繁了，也会导致频繁触发元部件渲染、数据加载
    /**
     * 外部更新元部件 propValues 的某属性后，需要调用此方法，否则我们不知道 propValues 发生了变化。
     * 不太好精简掉这个方法。尝试过用 keyValueDiffer 在 ngDoCheck 中检测 propValues 变化，但仅能检测一层。
     * @param {?} propName
     * @param {?} pValue
     * @return {?}
     */
    WidgetComponent.prototype.setPropertyValue = 
    // TODO: 这些都改造成，参数为一个对象，里面可以一次塞多个属性-值，全部更新后再触发 onPropertyChange，
    // 否则像初始化完要赋多个值的情况，通知触发太频繁了，也会导致频繁触发元部件渲染、数据加载
    /**
     * 外部更新元部件 propValues 的某属性后，需要调用此方法，否则我们不知道 propValues 发生了变化。
     * 不太好精简掉这个方法。尝试过用 keyValueDiffer 在 ngDoCheck 中检测 propValues 变化，但仅能检测一层。
     * @param {?} propName
     * @param {?} pValue
     * @return {?}
     */
    function (propName, pValue) {
        // TODO: portlet 结构改变后，可以省去这一步：__extra 应该根本不会传进来
        if (propName === '__extra')
            return;
        // 如果不是 object，则判断值如果 pValue 与当前元部件实例中相同，就不传给部件了
        if (typeof pValue !== 'object' && this.widgetInstance[propName] === pValue)
            return;
        // TODO: 部件配置时，运行时更改语言的处理
        /** @type {?} */
        var value = this.processPV(pValue)
        // 改值
        ;
        // 改值
        this.widgetInstance[propName] = value;
        // 通知，因为元部件可能需要这个时机
        // 防止没有这个方法的老元部件报错，后面都会升级掉
        if (this.widgetInstance.onPropertyChange) {
            this.widgetInstance.onPropertyChange(propName, value);
        }
        if (propName === FILTER_PROP_NAME) {
            this.dpValues = ((/** @type {?} */ (pValue)))
                .filter((/**
             * @param {?} dv
             * @return {?}
             */
            function (dv) { return dv.dpId; }))
                .map((/**
             * @param {?} fc
             * @return {?}
             */
            function (fc) { return ({
                value: FilterSchema.getDefaultValue(fc.fs),
                dpId: fc.dpId
            }); }));
            // TODO:
            // if (pValue && pValue.slice) this.propValues[FILTER_PROP_NAME] = pValue.slice()
            // this.cd.markForCheck()
        }
        if (!this.propValues)
            this.propValues = {};
        this.propValues[propName] = pValue;
        this.cd.markForCheck();
    };
    /* 递归检查 pv，做特殊处理，比如国际化、帮助 */
    /* 递归检查 pv，做特殊处理，比如国际化、帮助 */
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    WidgetComponent.prototype.processPV = /* 递归检查 pv，做特殊处理，比如国际化、帮助 */
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var currentLang = this.translate.currentLang;
        try {
            value = JSON.parse(JSON.stringify(value));
        }
        catch (e) { }
        return _processPVRecursively(value);
        /**
         * @param {?} pValue
         * @return {?}
         */
        function _processPVRecursively(pValue) {
            if (Array.isArray(pValue)) {
                pValue.forEach((/**
                 * @param {?} v
                 * @param {?} i
                 * @return {?}
                 */
                function (v, i) {
                    pValue[i] = _processPVRecursively(v);
                }));
                return pValue;
                // i18n: 如果 value 中包含 en 或 zh-CHS 或 当前语言的key，则是 i18n 字段
            }
            else if (pValue && !pValue._notProcess && typeof (pValue.en + pValue['zh-CHS'] + pValue[currentLang]) === 'string') {
                return pValue[currentLang];
                // help
            }
            else if (pValue && pValue.__type === 'help') {
                return pValue.value;
            }
            else if (pValue && ['Object'].includes(pValue.constructor.name)) {
                Object.keys(pValue).forEach((/**
                 * @param {?} key
                 * @return {?}
                 */
                function (key) {
                    pValue[key] = _processPVRecursively(pValue[key]);
                }));
                return pValue;
            }
            else {
                return pValue;
            }
        }
    };
    /**
     * @return {?}
     */
    WidgetComponent.prototype.renderWidget = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var baseUrl, curWidgetData, widgetCompFactory, widgetModuleFactory, propValues, widgetConfig, injector;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // 加载渲染这个 widget 需要的一切元数据
                        baseUrl = this.basicWidgetInfo.baseUrl;
                        return [4 /*yield*/, this.loader.loadWidget(this.basicWidgetInfo, this.propValues, this.mode)
                            // TODO: propValues 是不是不用经过 loader，直接调 widgetPropService 获取就行？
                        ];
                    case 1:
                        curWidgetData = _a.sent();
                        // TODO: propValues 是不是不用经过 loader，直接调 widgetPropService 获取就行？
                        widgetCompFactory = curWidgetData.widgetCompFactory, widgetModuleFactory = curWidgetData.widgetModuleFactory, propValues = curWidgetData.propValues, widgetConfig = curWidgetData.widgetConfig;
                        this.curWidgetConfig = widgetConfig;
                        this.initRuntimeAgg();
                        if (this.curWidgetConfig.enableLoadingI18n)
                            this.loadI18nRes();
                        // 元部件加载完成事件
                        this.widgetLoaded.emit(curWidgetData);
                        // 删老元部件
                        this.widgetContainer.remove();
                        // 创建注入器
                        injector = Injector.create({
                            providers: [{
                                    provide: WidgetInstanceInfo,
                                    /**
                                     * 元部件实例信息
                                     */
                                    useValue: new WidgetInstanceInfo(this.portlet.id, this.instanceId, this.assetsBaseUrl || this.basicWidgetInfo.baseUrl + '/assets/')
                                }, {
                                    provide: WidgetDataService,
                                    /**
                                     * 元部件数据服务
                                     */
                                    useFactory: (/**
                                     * @return {?}
                                     */
                                    function () {
                                        _this.widgetDataService = new WidgetDataService();
                                        _this.widgetDataService.onLoadData
                                            .pipe(delay(0)) // 为避免用 of(data) 会同步返回数据，导致 data service 中的 onGetData 还没返回到元部件手里就触发完了
                                            .subscribe(_this.loadNSetData.bind(_this));
                                        return _this.widgetDataService;
                                    }),
                                    deps: []
                                }],
                            parent: this.injector
                        });
                        // 创建、挂载 widget 组件
                        this.widgetInstance = (/** @type {?} */ (this.widgetContainer.createComponent(widgetCompFactory, 0, injector, undefined, widgetModuleFactory && widgetModuleFactory.create(this.injector)).instance));
                        // 设置 widget 的 properties 的 values
                        // TODO: 改为一次配多个
                        Object.keys(propValues).forEach((/**
                         * @param {?} prop
                         * @return {?}
                         */
                        function (prop) {
                            _this.setPropertyValue(prop, propValues[prop]);
                        }));
                        // TODO: 已废弃方案, 以下为过渡方案以兼容老写法元部件, 后期将移除
                        this.widgetInstance.id = this.instanceId;
                        this.widgetInstance.portletId = this.portlet.id;
                        this.widgetInstance.assetsBaseUrl = this.assetsBaseUrl || baseUrl + '/assets/';
                        if (this.widgetInstance.useDataEngine)
                            this.loadNSetData({});
                        // TODO: 它完成之后才算作 widget 初始化完成，可以显示出来。否则会显示 code。
                        // this.setWidgetTranslation()
                        // event
                        this.initWidgetEventListener();
                        // 元部件初始化完成事件
                        this.widgetInit.emit(curWidgetData);
                        // this.isLoading = false
                        this.status = WCStatus.Normal;
                        this.cd.markForCheck();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @return {?}
     */
    WidgetComponent.prototype.loadI18nRes = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        var currentLang = this.translate.currentLang;
        var _a = this.basicWidgetInfo, name = _a.name, baseUrl = _a.baseUrl;
        var customI18nResourceUrl = this.curWidgetConfig.customI18nResourceUrl;
        /** @type {?} */
        var i18nResUrl = customI18nResourceUrl || baseUrl + "/assets/i18n/" + currentLang + ".json"
        // 缓存曾加载过的资源文件名，下次相同文件不再请求。缓存资源文件名，是因为可能多个元部件指定相同的资源文件。
        ;
        // 缓存曾加载过的资源文件名，下次相同文件不再请求。缓存资源文件名，是因为可能多个元部件指定相同的资源文件。
        if (loadedI18nUrls.includes(i18nResUrl))
            return;
        loadedI18nUrls.push(i18nResUrl);
        return this.http.get(i18nResUrl).toPromise().then((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.translate.setTranslation(currentLang, res, true);
        }), (/**
         * @return {?}
         */
        function () {
            console.log("\u5143\u90E8\u4EF6 " + name + " \u65E0 " + currentLang + " \u7684\u8D44\u6E90\u6587\u4EF6");
        })).finally((/**
         * @return {?}
         */
        function () {
            return Promise.resolve();
        }));
    };
    /**
     * 塞数据入口 1/2: 加载数据并塞给部件
     */
    // TODO: loadNSetData 可能是不带参数的。取数参数可能存在当前 widget 实例里，直接取。
    // loadNSetData 有没有可能带着来自部件的额外参数？
    /**
     * 塞数据入口 1/2: 加载数据并塞给部件
     * @param {?=} param
     * @return {?}
     */
    // TODO: loadNSetData 可能是不带参数的。取数参数可能存在当前 widget 实例里，直接取。
    // loadNSetData 有没有可能带着来自部件的额外参数？
    WidgetComponent.prototype.loadNSetData = /**
     * 塞数据入口 1/2: 加载数据并塞给部件
     * @param {?=} param
     * @return {?}
     */
    // TODO: loadNSetData 可能是不带参数的。取数参数可能存在当前 widget 实例里，直接取。
    // loadNSetData 有没有可能带着来自部件的额外参数？
    function (param) {
        var _this = this;
        if (param === void 0) { param = {}; }
        /** @type {?} */
        var ob = this.getData({
            dpValues: mergeDpValuesForNew(this.dpValues, param.dpValues),
            runtimeAgg: this.runtimeAgg
        });
        if (!ob)
            return;
        ob.subscribe((/**
         * @param {?} dataWithDims
         * @return {?}
         */
        function (dataWithDims) {
            _this.setData(dataWithDims);
        }), this.handleDataError.bind(this));
    };
    /**
     * 给元部件重新设置数据结果，外部可调用此方法给部件设置数据。
     */
    /**
     * 给元部件重新设置数据结果，外部可调用此方法给部件设置数据。
     * @param {?} pDataWithDims
     * @return {?}
     */
    WidgetComponent.prototype.setData = /**
     * 给元部件重新设置数据结果，外部可调用此方法给部件设置数据。
     * @param {?} pDataWithDims
     * @return {?}
     */
    function (pDataWithDims) {
        /** @type {?} */
        var dataWithDims = pDataWithDims
        // set if empty status
        ;
        // set if empty status
        if (!pDataWithDims || !pDataWithDims.tableData || pDataWithDims.tableData.length === 0)
            this.status = WCStatus.DataEmpty;
        // 如果外面没有给 DataWithDims 而是简单数据列表，就简单转一把。以兼容 config 里的假数据等。
        if (!pDataWithDims.dimensions && pDataWithDims['length']) {
            dataWithDims = {
                dimensions: Object
                    .keys(pDataWithDims[0])
                    .map((/**
                 * @param {?} key
                 * @return {?}
                 */
                function (key) { return ({ name: key, label: key }); })),
                tableData: ((/** @type {?} */ ((/** @type {?} */ (pDataWithDims)))))
            };
        }
        this.status = WCStatus.Normal;
        this.data = dataWithDims.tableData;
        this.dims = dataWithDims.dimensions;
        if (this.widgetDataService)
            this.widgetDataService.setData(dataWithDims);
        if (this.widgetInstance && this.widgetInstance.useDataEngine)
            this.widgetInstance.onGetData(dataWithDims.tableData); // 兼容用途
        // 给元部件设置完数据，若有运行时聚合，还需要重新绑定字段
        this.setRuntimeAggDims();
        this.cd.markForCheck();
    };
    /**
     * @return {?}
     */
    WidgetComponent.prototype.handleClickStatusMore = /**
     * @return {?}
     */
    function () {
        this.modal.error({
            nzTitle: '小部件错误',
            nzContent: '此小部件的数据配置无效，需要管理员重新配置或删除。'
        });
    };
    /**
     * @param {?} dpValues
     * @return {?}
     */
    WidgetComponent.prototype.handleFilterChange = /**
     * @param {?} dpValues
     * @return {?}
     */
    function (dpValues) {
        mergeDpValues(this.dpValues, dpValues);
        this.loadNSetData();
    };
    /**
     * @param {?} runtimeAgg
     * @return {?}
     */
    WidgetComponent.prototype.handleRuntimeAggChange = /**
     * @param {?} runtimeAgg
     * @return {?}
     */
    function (runtimeAgg) {
        // if (objectLiteralEqual(runtimeAgg, this.runtimeAgg)) return
        this.runtimeAgg = runtimeAgg;
        // 下面两行顺序严格，因为外部加载数据时可能要依赖当前最新的 runtimeAgg
        this.runtimeAggChange.emit(runtimeAgg);
        this.loadNSetData();
    };
    /** 当前写法需要保证 renderWidget() 已完成 */
    /**
     * 当前写法需要保证 renderWidget() 已完成
     * @param {?} titleBar
     * @return {?}
     */
    WidgetComponent.prototype.handleTitleBarInit = /**
     * 当前写法需要保证 renderWidget() 已完成
     * @param {?} titleBar
     * @return {?}
     */
    function (titleBar) {
        if (this.showRuntimeAgg) {
            titleBar.setRuntimeAgg(this.runtimeAgg);
        }
    };
    /**
     * @return {?}
     */
    WidgetComponent.prototype.initRuntimeAgg = /**
     * @return {?}
     */
    function () {
        // runtime agg
        this.showRuntimeAgg = isWidgetRuntimeAggActive(this.basicWidgetInfo.name);
        if (this.showRuntimeAgg) {
            this.runtimeAgg = this.propValues.__extra ? this.propValues.__extra.runtimeAgg : null;
        }
    };
    // TODO: 以后把 su 放 basic... 里
    /**
     * 初始化部件事件监听
     */
    // TODO: 以后把 su 放 basic... 里
    /**
     * 初始化部件事件监听
     * @private
     * @return {?}
     */
    WidgetComponent.prototype.initWidgetEventListener = 
    // TODO: 以后把 su 放 basic... 里
    /**
     * 初始化部件事件监听
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.linkMap)
            return;
        if (this.amIFilterWidget()) {
            this.initOneEventListener(FILTERS_WIDGET_PROP_NAME);
        }
        else {
            this.widgetEventService
                .getEventsByWidgetName(this.basicWidgetInfo.name, this.propValues)
                .forEach((/**
             * @param {?} eventConfig
             * @return {?}
             */
            function (eventConfig) {
                _this.initOneEventListener(eventConfig.propName);
            }));
        }
    };
    /**
     * eventPropName 是事件对应的实际属性名，
     * eventKey 配置在 link 里的事件名。
     * 一般他俩是一样的，后者可以不传。
     * 若是筛选部件，则两者不同，一个是 'filter'，一个是实际的事件（筛选）名称。
     */
    /**
     * eventPropName 是事件对应的实际属性名，
     * eventKey 配置在 link 里的事件名。
     * 一般他俩是一样的，后者可以不传。
     * 若是筛选部件，则两者不同，一个是 'filter'，一个是实际的事件（筛选）名称。
     * @private
     * @param {?} eventPropName
     * @return {?}
     */
    WidgetComponent.prototype.initOneEventListener = /**
     * eventPropName 是事件对应的实际属性名，
     * eventKey 配置在 link 里的事件名。
     * 一般他俩是一样的，后者可以不传。
     * 若是筛选部件，则两者不同，一个是 'filter'，一个是实际的事件（筛选）名称。
     * @private
     * @param {?} eventPropName
     * @return {?}
     */
    function (eventPropName) {
        var _this = this;
        /** @type {?} */
        var eventEmitter = this.widgetInstance[eventPropName];
        if (eventEmitter)
            eventEmitter.subscribe((/**
             * @param {?} widgetEventParam
             * @return {?}
             */
            function (widgetEventParam) {
                console.log('联动事件触发，参数：' + widgetEventParam);
                /** @type {?} */
                var linkEventKey = _this.amIFilterWidget()
                    ? ((/** @type {?} */ (widgetEventParam))).eventKey
                    : eventPropName
                // 根据 link map 调用其他 ins 根据 重新加载数据
                ;
                // 根据 link map 调用其他 ins 根据 重新加载数据
                /** @type {?} */
                var pInsLink = _this.linkMap[linkEventKey];
                Object.keys(pInsLink).forEach((/**
                 * @param {?} pInsId
                 * @return {?}
                 */
                function (pInsId) {
                    if (!pInsLink[pInsId] || !pInsLink[pInsId].active || !pInsLink[pInsId].dpId)
                        return;
                    /** @type {?} */
                    var targetWIns = _this.insSerivce.getInsByPInsId(pInsId).widgetComp;
                    if (targetWIns)
                        targetWIns.loadNSetData({
                            dpValues: [{
                                    dpId: pInsLink[pInsId].dpId,
                                    // TODO: 联动参数值的处理加在这
                                    value: String(widgetEventParam['dataIndex']),
                                }]
                        });
                }));
            }));
    };
    /**
     * @return {?}
     */
    WidgetComponent.prototype.setRuntimeAggDims = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.runtimeAgg)
            return;
        chartAggFieldMap[this.basicWidgetInfo.name].forEach((/**
         * @param {?} aggField
         * @return {?}
         */
        function (aggField) {
            _this.setPropertyValue(aggField.name, aggField.valueFactory(_this.runtimeAgg, _this.dims));
        }));
    };
    /**
     * @return {?}
     */
    WidgetComponent.prototype.amIFilterWidget = /**
     * @return {?}
     */
    function () {
        return this.basicWidgetInfo.name === FILTERS_WIDGET_NAME
            && this.basicWidgetInfo.baseUrl.includes('/epp/');
    };
    WidgetComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-widget',
                    template: "<div\n  #resizeTarget\n  class=\"wc-wrapper h-100 overflow-hidden position-relative\">\n  <!-- TODO: \u589E\u52A0\u516C\u5171\u7684\u52A0\u8F7D\u906E\u7F69\u5C42\uFF0C\u6570\u636E\u670D\u52A1\u52A0\u8F7D\u65F6\u3001\u90E8\u4EF6\u5185\u8C03\u7528\u65F6\u3001\u90E8\u4EF6\u672C\u8EAB\u52A0\u8F7D\u90FD\u7528\u5B83 -->\n  <!-- loading -->\n  <div\n    *ngIf=\"[WCStatus.LoadingWidget, WCStatus.LoadingData].includes(status)\"\n    class=\"h-100 d-flex justify-content-center align-items-center\">\n    <div class=\"text-center\">\n      <i class=\"spin-ball loading-color material-icons\">public</i>\n      <div class=\"fs-12 loading-color\">{{'\u90E8\u4EF6\u52A0\u8F7D\u4E2D' | trans}}</div>\n    </div>\n  </div>\n\n  <!-- TODO: \u90E8\u4EF6\u52A0\u8F7D\u5931\u8D25\u3002\u600E\u4E48\u7EDF\u4E00\u5904\u7406\u8FD9\u51E0\u79CD\u5F02\u5E38\u72B6\u6001\uFF1F -->\n  <!-- <div\n    *ngIf=\"status === WCStatus.WidgetLoadError\">\n  </div> -->\n\n  <!-- \u65E0\u6570\u636E -->\n  <div\n    *ngIf=\"status === WCStatus.DataEmpty\"\n    class=\"flex-fill no-data h-100 w-100 d-flex flex-column\">\n    <lib-title-bar\n      *ngIf=\"curWidgetConfig?.enableCommonTitleBar\n        && widgetInstance\n        && !widgetInstance['titleBarHide']\"\n      [title]=\"portlet.name\"\n      [showRefresh]=\"widgetInstance['titleBarShowRefresh']\"\n      [jumpConfig]=\"widgetInstance['titleBarJump']\"\n      ></lib-title-bar>\n    <div class=\"flex-fill d-flex flex-column justify-content-center align-items-center\">\n      <img src=\"{{IGIX_HOME_PATH}}assets/img/data-empty.svg\" style=\"transform:translateY(-5px)\" alt=\"\">\n      <div class=\"fs-13\" style=\"color:gray\">{{'noDataAvailable'|translate}}</div>\n    </div>\n  </div>\n\n  <!-- abnormal -->\n  <div class=\"d-flex flex-column overflow-hidden h-100\"\n    *ngIf=\"status === WCStatus.DataError\">\n    <div class=\"portlet-title text-truncate flex-shrink-0\">{{this.portlet.name}}</div>\n    <div class=\"status-layer cursor-pointer flex-fill\"\n      (click)=\"handleClickStatusMore()\">\n      <ng-container *ngIf=\"status === WCStatus.DataError\">\n        <img src=\"{{IGIX_HOME_PATH}}assets/img/data-error.svg\" alt=\"\">\n        <div class=\"error-tip fs-12 text-truncate\">\n          \u90E8\u4EF6\u6570\u636E\u52A0\u8F7D\u5931\u8D25\uFF0C\n          <span class=\"theme-color more\">\u67E5\u770B\u8BE6\u60C5</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n  <!-- normal -->\n  <!-- *ngIf=\"status === WCStatus.Normal\" -->\n  <div\n    class=\"h-100 d-flex flex-column\">\n    <!-- TODO: \u91CD\u6784 DOM \u7ED3\u6784\uFF0C\u628A title bar \u653E\u5728\u516C\u5171\u4F4D\u7F6E -->\n    <!-- \u516C\u5171 title bar -->\n    <lib-title-bar\n      #titleBar\n      *ngIf=\"curWidgetConfig?.enableCommonTitleBar\n        && widgetInstance\n        && !widgetInstance['titleBarHide']\"\n      [title]=\"portlet.name\"\n      [showRefresh]=\"widgetInstance['titleBarShowRefresh']\"\n      [jumpConfig]=\"widgetInstance['titleBarJump']\"\n      [filterConfigs]=\"propValues[FILTER_PROP_NAME] || []\"\n      [dims]=\"dims\"\n      (clickRefresh)=\"loadNSetData()\"\n      (filterChange)=\"handleFilterChange($event)\"\n      (init)=\"handleTitleBarInit($event)\"\n      [showRuntimeAgg]=\"showRuntimeAgg\"\n      (runtimeAggChange)=\"handleRuntimeAggChange($event)\"\n      >\n    </lib-title-bar>\n    <div class=\"flex-fill overflow-hidden\" >\n      <ng-container #wc></ng-container>\n    </div>\n  </div>\n</div>\n",
                    styles: [".portlet-title{font-weight:700;padding:12px 20px 10px}.status-layer{width:100%;display:flex;align-items:center;justify-content:center;z-index:1;flex-direction:column}.status-layer img{width:75%;max-width:200px}.status-layer .error-tip{color:#666;margin:5px 0}.status-layer .error-tip .more{text-decoration:underline}.no-data{position:absolute;top:0;background:#fff}::ng-deep .widget-title-bar .left{overflow:hidden}::ng-deep .widget-title-bar .left .title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.loading-color{color:#b2bac4}.spin-ball{font-size:30px}"]
                }] }
    ];
    /** @nocollapse */
    WidgetComponent.ctorParameters = function () { return [
        { type: DynamicLoaderService },
        { type: ChangeDetectorRef },
        { type: Injector },
        { type: NzModalService },
        { type: HttpClient },
        { type: TranslateService },
        { type: WidgetPropertyService },
        { type: WidgetEventService },
        { type: InstanceService }
    ]; };
    WidgetComponent.propDecorators = {
        basicWidgetInfo: [{ type: Input }],
        propValues: [{ type: Input }],
        linkMap: [{ type: Input }],
        mode: [{ type: Input }],
        assetsBaseUrl: [{ type: Input }],
        portlet: [{ type: Input }],
        instanceId: [{ type: Input }],
        getData: [{ type: Input }],
        status: [{ type: Input }],
        widgetLoaded: [{ type: Output }],
        widgetInit: [{ type: Output }],
        runtimeAggChange: [{ type: Output }],
        resizeTarget: [{ type: ViewChild, args: ['resizeTarget',] }],
        widgetContainer: [{ type: ViewChild, args: ['wc', { read: ViewContainerRef },] }],
        titleBar: [{ type: ViewChild, args: ['titleBar',] }]
    };
    return WidgetComponent;
}());
export { WidgetComponent };
if (false) {
    /**
     * 必选，要渲染的 widget 信息
     * @type {?}
     */
    WidgetComponent.prototype.basicWidgetInfo;
    /**
     * 必选，此 widget 的配置信息；仅在元部件加载时起作用，若属性改变，必需调用 setPropValues()
     * @type {?}
     */
    WidgetComponent.prototype.propValues;
    /** @type {?} */
    WidgetComponent.prototype.linkMap;
    /**
     * 可选
     * @type {?}
     */
    WidgetComponent.prototype.mode;
    /**
     * 可选，widget 的静态资源地址，一般不用管，特殊情况可配置，默认值为 this.basicWidgetInfo.baseUrl + '/assets/'
     * @type {?}
     */
    WidgetComponent.prototype.assetsBaseUrl;
    /**
     * 可选，部件信息，需要注入到元部件
     * @type {?}
     */
    WidgetComponent.prototype.portlet;
    /**
     * 可选，部件实例 id, 获取数据可能用到
     * @type {?}
     */
    WidgetComponent.prototype.instanceId;
    /**
     * 必选，
     * 若指定，则元部件主动加载数据时使用它获取数据，
     * 不再加载真实数据。用于给元部件设置假数据
     * @type {?}
     */
    WidgetComponent.prototype.getData;
    /** @type {?} */
    WidgetComponent.prototype.status;
    /**
     * widget 加载完成，发出当前 widget 的信息
     * @type {?}
     */
    WidgetComponent.prototype.widgetLoaded;
    /**
     * widget component create 完成，发出当前 widget 的信息
     * @type {?}
     */
    WidgetComponent.prototype.widgetInit;
    /** @type {?} */
    WidgetComponent.prototype.runtimeAggChange;
    /** @type {?} */
    WidgetComponent.prototype.resizeTarget;
    /** @type {?} */
    WidgetComponent.prototype.widgetContainer;
    /** @type {?} */
    WidgetComponent.prototype.titleBar;
    /** @type {?} */
    WidgetComponent.prototype.WCStatus;
    /** @type {?} */
    WidgetComponent.prototype.IGIX_HOME_PATH;
    /** @type {?} */
    WidgetComponent.prototype.FILTER_PROP_NAME;
    /** @type {?} */
    WidgetComponent.prototype.width;
    /** @type {?} */
    WidgetComponent.prototype.height;
    /** @type {?} */
    WidgetComponent.prototype.curWidgetConfig;
    /**
     * 存在此层的数据。可用于前端筛选、数据获取状态判断
     * @type {?}
     */
    WidgetComponent.prototype.data;
    /**
     * 获取数据后存起来的维度。可用于页面设计时、运行时获取、显示维度
     * @type {?}
     */
    WidgetComponent.prototype.dims;
    /** @type {?} */
    WidgetComponent.prototype.widgetInstance;
    /** @type {?} */
    WidgetComponent.prototype.showRuntimeAgg;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.widgetDataService;
    /**
     * pv 中包含 {fs,dp}[]（筛选控件+取数参数=筛选）
     * 部件实例中保存 {fs,dp}: filterValue
     * @type {?}
     */
    WidgetComponent.prototype.dpValues;
    /** @type {?} */
    WidgetComponent.prototype.handleDataError;
    /** @type {?} */
    WidgetComponent.prototype.filterValues;
    /**
     * 此 runtimeAgg 存储当前运行时用户选的、最新的 runtimeAgg。
     * extra 中的是存储在部件中的。
     * widget 不负责把 runtimeAgg 放到 extra 里，因为这里不确定是否需要持久化。
     * @type {?}
     */
    WidgetComponent.prototype.runtimeAgg;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.loader;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.modal;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.translate;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.widgetPropertyService;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.widgetEventService;
    /**
     * @type {?}
     * @private
     */
    WidgetComponent.prototype.insSerivce;
}
/**
 * newDpValues 合并到 this.dpValues，同 dpId 覆盖。
 * 此方法会改变 oldDpValues。
 * @param {?} oldDpValues
 * @param {?} newDpValues
 * @return {?}
 */
function mergeDpValues(oldDpValues, newDpValues) {
    var e_1, _a;
    var _loop_1 = function (newDV) {
        /** @type {?} */
        var targetOldDV = oldDpValues.find((/**
         * @param {?} oldDV
         * @return {?}
         */
        function (oldDV) { return oldDV.dpId === newDV.dpId; }));
        if (targetOldDV) {
            targetOldDV.value = newDV.value;
        }
        else {
            oldDpValues.push(newDV);
        }
    };
    try {
        for (var _b = tslib_1.__values(newDpValues.filter((/**
         * @param {?} dv
         * @return {?}
         */
        function (dv) { return dv.dpId; }))), _c = _b.next(); !_c.done; _c = _b.next()) {
            var newDV = _c.value;
            _loop_1(newDV);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
/**
 * @param {?=} oldDpValues
 * @param {?=} newDpValues
 * @return {?}
 */
function mergeDpValuesForNew(oldDpValues, newDpValues) {
    if (oldDpValues === void 0) { oldDpValues = []; }
    if (newDpValues === void 0) { newDpValues = []; }
    /** @type {?} */
    var result = oldDpValues.slice();
    mergeDpValues(result, newDpValues);
    return result;
}
//# sourceMappingURL=data:application/json;base64,