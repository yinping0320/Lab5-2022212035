{"version":3,"sources":["ng://@gspwidget/widget-core/lib/dynamic-loader.service.ts","node_modules/tslib/tslib.es6.js","ng://@gspwidget/widget-core/lib/instance.service.ts","ng://@gspwidget/widget-core/lib/widget/runtime-agg.ts","ng://@gspwidget/widget-core/lib/widget/widget.component.ts","ng://@gspwidget/widget-core/lib/title-bar/title-bar.component.ts","ng://@gspwidget/widget-core/lib/filter/filter.component.ts","ng://@gspwidget/widget-core/lib/flat-select/flat-select.component.ts","ng://@gspwidget/widget-core/lib/flat-select/flat-select.module.ts","ng://@gspwidget/widget-core/lib/filter/filter.module.ts","ng://@gspwidget/widget-core/lib/widget-core.module.ts"],"names":["sys","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","window","define","appendScript","IGIX_HOME_PATH","DynamicLoaderService$$1","DynamicLoaderService","set","AngularCommon","AngularCommonHttp","AngularCore","AngularForms","AngularPlatformBrowser","AngularPlatformBrowserAnimations","AngularPlatformBrowserDynamic","AngularRouter","AngularAnimations","AngularAnimationsBrowser","NgxTranslateCore","NgxTranslateHttpLoader","WidgetCoreModule","WidgetDevkitModule","UtilModule","widgetInfo","rawPropValues","mode","widgetName","name","WidgetContainerMode","AOT","DEV","initSystemjsPromise","_b","import","href","version","systemModule","fixCompFacError","widgetCompFactory","getWidgetComponentFactory","componentType","WidgetRegistry","getWidgetByName","ctor","Object","values","find","fac","widgetModuleFactory","getModuleFactoryAot","key","keys","k","endsWith","componentFactoryResolver","resolveComponentFactory","widgetComponent","widgetConfig","properties","widgetProperty","getWidgetProps","propValues","mixinWidgetPropValues","_this","filter","forEach","create","injector","_factories","iFactory","err","Injectable","args","providedIn","Injector","HttpClient","ComponentFactoryResolver","WidgetPropertyService","http","initSystemjs","InstanceService","prototype","getInsByPInsId","insId","instances","addInsInfo","widgetComp","type","console","warn","aggFirstDim2Field","runtimeAgg","allDims","getFieldByName","dimensions","aggFirstInd2Field","indicators","dimName","stackAggFields","pure","valueFactory","_a","map","ind","i","valueField","color","PlThemeColors","gradient","barAggFields","chartAggFieldMap","stack","area","bar-group","widget-line","bar","pie","pie2","bar-horizontal","simple-line","bar-multiple","categoryFieldName","valueFieldNameOne","valueFieldNameTwo","dims","isWidgetRuntimeAggActive","includes","loadedI18nUrls","LoadingWidget","LoadingData","DataEmpty","Normal","DataError","WidgetLoadError","loadCommonStyleNTheme","WidgetComponent","_initWidgetEnv","translate","defaultLang","setDefaultLang","currentLang","lang","localStorage","getItem","use","widgetI18nResLoaded","currentLang_1","get","subscribe","res","setTranslation","ngOnInit","insSerivce","instanceId","resizeTarget","ResizeObserver","entries","contentRect","width","height","widgetInstance","onResized","cd","markForCheck","observe","nativeElement","ngOnChanges","c","basicWidgetInfo","currentValue","previousValue","renderWidget","triggerWidgetResize","clientWidth","clientHeight","setPropertyValue","propName","pValue","processPV","onPropertyChange","FILTER_PROP_NAME","dpValues","dv","dpId","fc","FilterSchema","getDefaultValue","fs","JSON","parse","stringify","_processPVRecursively","Array","isArray","_notProcess","en","__type","constructor","baseUrl","loader","loadWidget","curWidgetData","curWidgetConfig","initRuntimeAgg","enableLoadingI18n","loadI18nRes","widgetLoaded","emit","widgetContainer","remove","providers","provide","WidgetInstanceInfo","useValue","portlet","id","assetsBaseUrl","WidgetDataService","useFactory","widgetDataService","onLoadData","pipe","delay","loadNSetData","bind","deps","parent","createComponent","undefined","prop","portletId","useDataEngine","initWidgetEventListener","widgetInit","status","WCStatus","i18nResUrl","customI18nResourceUrl","toPromise","log","finally","param","ob","getData","mergeDpValuesForNew","oldDpValues","newDpValues","slice","mergeDpValues","dataWithDims","setData","handleDataError","pDataWithDims","tableData","data","onGetData","setRuntimeAggDims","handleClickStatusMore","modal","error","nzTitle","nzContent","handleFilterChange","handleRuntimeAggChange","runtimeAggChange","handleTitleBarInit","titleBar","showRuntimeAgg","setRuntimeAgg","__extra","linkMap","amIFilterWidget","initOneEventListener","FILTERS_WIDGET_PROP_NAME","widgetEventService","getEventsByWidgetName","eventConfig","eventPropName","eventEmitter","widgetEventParam","linkEventKey","eventKey","pInsLink","pInsId","active","targetWIns","String","aggField","FILTERS_WIDGET_NAME","Component","selector","template","ChangeDetectorRef","NzModalService","TranslateService","WidgetEventService","Input","Output","ViewChild","read","ViewContainerRef","widgetPropertyService","EppPortlet","EventEmitter","newDV","targetOldDV","oldDV","__values","o","m","tslib_1.__values","_c","TitleBarComponent","init","changes","filterConfigs","outerFC","innerFCs","notFlatFCs","isFsFlat","flatFCs","editingRuntimeAgg","deepClone","confirmedRuntimeAgg","handleClickJump","devkitSvc","jumpWithoutData","jumpConfig","handleFilterSingleChange","filterChange","handleFilterMultiChange","ifFsDateRange","dpId2","join","handleAddInd","Indicator","handleRemoveInd","ArrUtil","Remove","handleConfirmAgg","runtimeAggDropdownOpen","objectLiteralEqual","changeDetection","ChangeDetectionStrategy","OnPush","WidgetDevkitService","ContentChild","icon","showTitle","title","showNumber","number","showSetting","clickSetting","showRefresh","clickRefresh","JumpTypes","RuntimeAggOption","FilterComponent","getEnumItems","FSEnum","GetItems","enum","handleChange","singleValueChange","handleChangeMulti","multiValueChange","ColValuesPipe","transform","col","from","Set","Pipe","FlatSelectComponent","options","valueChange","FlatSelectModule","NgModule","declarations","imports","CommonModule","exports","FilterModule","NzSelectModule","NzDatePickerModule","FormsModule","entryComponents","HttpClientModule","ReactiveFormsModule","AccordionModule","forRoot","ColorPickerModule","TranslateModule","NzAutocompleteModule","NzModalModule","NzDropDownModule","NzInputModule"],"mappings":"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","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { ComponentFactoryResolver, getModuleFactory, Injectable, Injector, NgModuleFactory, NgModuleFactoryLoader } from '@angular/core';\nimport { BasicWidgetInfoAotMode, BasicWidgetInfoDevMode, WidgetContainerMode } from '@gspwidget/util';\nimport { appendScript } from '@gspwidget/util';\nimport { WidgetPropertyService, WidgetRegistry } from '@gspwidget/widget-devkit';\n\nimport * as AngularCommon from '@angular/common'\nimport * as AngularCommonHttp from '@angular/common/http'\nimport * as AngularCore from '@angular/core'\nimport * as AngularForms from '@angular/forms'\nimport * as AngularPlatformBrowser from '@angular/platform-browser'\nimport * as AngularPlatformBrowserAnimations from '@angular/platform-browser/animations'\nimport * as AngularPlatformBrowserDynamic from '@angular/platform-browser-dynamic'\nimport * as AngularRouter from '@angular/router'\nimport * as AngularAnimations from '@angular/animations'\nimport * as AngularAnimationsBrowser from '@angular/animations/browser'\nimport * as NgxTranslateCore from '@ngx-translate/core'\nimport * as NgxTranslateHttpLoader from '@ngx-translate/http-loader'\n// import * as PortletModule from '@gspwidget/portlet';\nimport * as WidgetCoreModule from '../public-api';\nimport * as WidgetDevkitModule from '@gspwidget/widget-devkit';\nimport * as UtilModule from '@gspwidget/util';\nimport { IGIX_HOME_PATH } from '@gspwidget/util';\n// import * as UtilModule from '@gspwidget/util';\n// import * as GridsterModule from '@gspwidget/gridster';\n// declare var System\n/* iGIX å systemjs ææ¶æ¯ 3.x */\nif (!window.define) {\n  appendScript(`${IGIX_HOME_PATH}assets/amd.6.js`)\n}\n\nlet sys\n\n@Injectable({ providedIn: 'root' })\nexport class DynamicLoaderService {\n\n  private initSystemjsPromise: Promise<void>\n  constructor (\n    private injector: Injector,\n    private http: HttpClient,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private widgetProperty: WidgetPropertyService,\n    ) {\n    /**\n     * ä¸ºäºé¿å ng serve æ¶ï¼webpack ä¼æ system.import\n     * æ¦æªä¸ºèªèº«çå®ç°ï¼æ æ³æ»¡è¶³ç°å¨çç»å¯¹å°åå è½½\n     */\n    sys = window['System']\n    this.initSystemjsPromise = this.initSystemjs()\n  }\n  async initSystemjs () {\n    sys.set('lib:@angular/common', AngularCommon)\n    sys.set('lib:@angular/common/http', AngularCommonHttp)\n    sys.set('lib:@angular/core', AngularCore)\n    sys.set('lib:@angular/forms', AngularForms)\n    sys.set('lib:@angular/platform-browser', AngularPlatformBrowser)\n    sys.set('lib:@angular/platform-browser/animations', AngularPlatformBrowserAnimations)\n    sys.set('lib:@angular/platform-browser-dynamic', AngularPlatformBrowserDynamic)\n    sys.set('lib:@angular/router', AngularRouter)\n    sys.set('lib:@angular/animations', AngularAnimations)\n    sys.set('lib:@angular/animations/browser', AngularAnimationsBrowser)\n    sys.set('lib:@ngx-translate/core', NgxTranslateCore)\n    sys.set('lib:@ngx-translate/http-loader', NgxTranslateHttpLoader)\n\n    // sys.set('lib:@gspwidget/portlet', PortletModule)\n    sys.set('lib:@gspwidget/widget-core', WidgetCoreModule)\n    sys.set('lib:@gspwidget/widget-devkit', WidgetDevkitModule)\n    sys.set('lib:@gspwidget/util', UtilModule)\n    // sys.set('lib:@gspwidget/gridster', GridsterModule)\n  }\n\n  /**\n   * å è½½åé¨ä»¶æä»¶ï¼å¹¶è·å widget çè¯¦ç»ä¿¡æ¯ä¾å¤é¢ç¨\n   */\n  async loadWidget (\n    widgetInfo: BasicWidgetInfoAotMode | BasicWidgetInfoDevMode,\n    rawPropValues: object,\n    mode: WidgetContainerMode) {\n    const { name: widgetName } = widgetInfo\n    let widgetCompFactory\n    let widgetModuleFactory\n    switch (mode) {\n      case WidgetContainerMode.AOT:\n        // å è½½ widget js æä»¶\n        await this.initSystemjsPromise\n        const systemModule = await sys.import(`${(widgetInfo as BasicWidgetInfoAotMode).href}?v=${widgetInfo.version}`)\n        this.fixCompFacError(systemModule)\n        // å è½½å®æåï¼è·å widget çè¯¦ç»ä¿¡æ¯ä¾å¤é¢ç¨\n        widgetCompFactory = getWidgetComponentFactory(widgetName, systemModule)\n        widgetModuleFactory = getModuleFactoryAot(systemModule)\n        break\n      case WidgetContainerMode.DEV:\n        widgetCompFactory = this.componentFactoryResolver.resolveComponentFactory((widgetInfo as BasicWidgetInfoDevMode).widgetComponent)\n        break\n    }\n    const widgetConfig = WidgetRegistry.getWidgetByName(widgetName)\n    const properties = this.widgetProperty.getWidgetProps(widgetName, widgetConfig)\n    const propValues = this.widgetProperty.mixinWidgetPropValues(properties, rawPropValues)\n    return {\n      widgetCompFactory,\n      widgetModuleFactory,\n      properties,\n      propValues,\n      widgetConfig,\n    }\n  }\n  /**\n   * TODO:\n   * ç½èæçé®é¢ï¼å»æè¯è¯ï¼æ¿ä»çåé¨ä»¶è¯è¯ãæçæ¯ä¹åä¸ç´æ²¡ä¼ å¥ module çåå ã\n   * ä¿®å¤åé¨ä»¶ä¾èµçç¬¬ä¸æ¹ç»ä»¶ä¸­ this.componentFactoryResolver.resolveComponentFactory\n   * æ¾ä¸å°ç¬¬ä¸æ¹ç»ä»¶ç ComponentFactory çé®é¢ï¼\n   * å¦ nz RateComponent æ¾ä¸å° toolTipComponent\n   */\n  fixCompFacError (systemModule) {\n    Object.keys(systemModule)\n    .filter(key => key.endsWith('ModuleNgFactory'))\n    .forEach(key => {\n      try {\n        const { _factories } = systemModule[key].create(this.injector).componentFactoryResolver\n        _factories.forEach(iFactory => {\n          // @ts-ignore\n          this.componentFactoryResolver._factories.set(iFactory.componentType, iFactory);\n        })\n      } catch (err) {}\n    })\n  }\n}\nfunction getWidgetComponentFactory (widgetName: string, systemModule: any): any {\n  const componentType = WidgetRegistry.getWidgetByName(widgetName).ctor\n  if (componentType) {\n    return Object.values(systemModule)\n      .find((fac: any) => fac.componentType === componentType)\n  }\n}\nfunction getModuleFactoryAot (systemModule: any) {\n  const key = Object\n    .keys(systemModule)\n    .find(k => k.endsWith('ModuleNgFactory'))\n  return systemModule[key] as NgModuleFactory<any>\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Type } from '@angular/core';\nimport { WidgetComponent } from './widget/widget.component';\n\n/**\n * instance æè¿è¡æ¶ï¼å¨æå¤è¿è¡çä¸ä¸ªé¨ä»¶ã\n * æ­¤æå¡è¢«å¨æ¶éãè¾åºå®ä¾idä¸å®ä¾å¼ç¨ä¿¡æ¯ï¼\n * ä¸»å¨è°ç¨èä¸º widgetComponent æ portletComponent\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstanceService {\n  /** é¨ä»¶å®ä¾å¼ç¨ä¿¡æ¯ */\n  instances: {\n    [insId: string]: {\n      // portletComp: PortletComponent,\n      widgetComp?: WidgetComponent\n    }\n  } = {}\n\n  constructor () { }\n\n  getInsByPInsId (insId: string) {\n    return this.instances[insId]\n  }\n  addInsInfo (insId: string, widgetComp: WidgetComponent, type: 'widgetComp' | 'portletComp') {\n    if (!insId) console.warn('ins id ä¸ºç©º')\n    if (!this.instances[insId]) this.instances[insId] = {}\n    this.instances[insId][type] = widgetComp\n  }\n}\n","import { Dimension, PlThemeColors, RuntimeAggOption } from \"@gspwidget/util\"\nimport { DataField } from \"@gspwidget/widget-devkit\"\n\nconst aggFirstDim2Field = (runtimeAgg: RuntimeAggOption, allDims: Dimension[]) => getFieldByName(allDims, runtimeAgg.dimensions[0])\nconst aggFirstInd2Field = (runtimeAgg: RuntimeAggOption, allDims: Dimension[]) => getFieldByName(allDims, runtimeAgg.indicators[0].dimName)\nconst stackAggFields = (pure = false) => [{\n  name: 'yFieldObjs',\n  valueFactory: ({ indicators }: RuntimeAggOption, allDims: Dimension[]) => {\n    return indicators.map((ind, i) => ({\n      valueField: getFieldByName(allDims, ind.dimName),\n      color: pure\n        ? PlThemeColors.pure[i % indicators.length]\n        : PlThemeColors.gradient[i % indicators.length]\n    }))\n  }\n}, {\n  name: 'categoryFieldName',\n  valueFactory: aggFirstDim2Field\n}]\nconst barAggFields = [\n  { name: 'categoryFieldName', valueFactory: aggFirstDim2Field },\n  { name: 'valueFieldName', valueFactory: aggFirstInd2Field }\n]\nexport const chartAggFieldMap = {\n  stack: stackAggFields(),\n  area: stackAggFields(true),\n  'bar-group': stackAggFields(),\n  'widget-line': stackAggFields(true),\n  bar: barAggFields,\n  pie: barAggFields,\n  pie2: barAggFields,\n  'bar-horizontal': barAggFields,\n  'simple-line': barAggFields,\n  'bar-multiple': [{\n    categoryFieldName: aggFirstDim2Field,\n    valueFieldNameOne: aggFirstInd2Field,\n    valueFieldNameTwo: (runtimeAgg: RuntimeAggOption, allDims: Dimension[]) => getFieldByName(allDims, runtimeAgg.indicators[1].dimName),\n  }]\n}\nfunction getFieldByName (dims: Dimension[], dimName: string): DataField {\n  const { name, label } = dims.find(dim => dim.name === dimName)\n  return { name, label }\n}\nexport function isWidgetRuntimeAggActive (widgetName: string) {\n  return Object\n    .keys(chartAggFieldMap)\n    .includes(widgetName)\n}\n","import { HttpClient } from '@angular/common/http';\nimport {\n  ChangeDetectorRef, Component,\n  EventEmitter, Injector, Input,\n  OnChanges, OnInit,\n  Output, SimpleChanges, ViewChild, ViewContainerRef\n} from '@angular/core';\nimport { BasicWidgetInfo, DataWithDims, Dimension, DpValue, EppPortlet, FILTERS_WIDGET_NAME, FILTERS_WIDGET_PROP_NAME, FilterWidgetEventParam, IGIX_HOME_PATH, LinkMap, loadCommonStyleNTheme, objectLiteralEqual, RuntimeAggOption, WidgetContainerMode } from '@gspwidget/util';\nimport {\n  FilterConfig,\n  FilterSchema,\n  FILTER_PROP_NAME,\n  RegisteredWidgetConfig, WidgetBase, WidgetDataService, WidgetEventService, WidgetInstanceInfo, WidgetPropertyService\n} from '@gspwidget/widget-devkit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NzModalService } from 'ng-zorro-antd/modal';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { DynamicLoaderService } from '../dynamic-loader.service';\nimport { InstanceService } from '../instance.service';\nimport { TitleBarComponent } from '../title-bar/title-bar.component';\nimport { chartAggFieldMap, isWidgetRuntimeAggActive } from './runtime-agg';\n\n  /** å·²è¢« set ç¿»è¯ç langï¼ä¸æ¬¡ä¸åè¯·æ±æ­¤ lang */\n  // private langsSet: { [widgetName: string]: string[] } = {}\nconst loadedI18nUrls: string[] = []\n\ndeclare global {\n  interface Window {\n    widgetI18nResLoaded: boolean\n    widgetStyleLoaded: boolean\n    define: any\n  }\n}\nexport enum WCStatus {\n  LoadingWidget,\n  LoadingData,\n  DataEmpty,\n  Normal,\n  DataError,\n  WidgetLoadError,\n}\nexport interface GetDataOptions {\n  dpValues: DpValue[],\n  runtimeAgg: RuntimeAggOption\n}\n\nloadCommonStyleNTheme()\n/**\n * å¼å®¹é¶æ®µæ°æ®å è½½é»è¾\n * 1. è¥åé¨ä»¶ useDataEngine === true, è¯´ææ¯èåæ³ãä¸éè¦æ°æ®çåé¨ä»¶ï¼ä½å¶åé¨æªè°ç¨å è½½æ°æ®ï¼æä»¥åå§åå®æåå è½½ä¸ä¸ï¼\n *    æ°æ°æ®å è½½è¯·æ±å¤çæ°¸è¿å¯ç¨ï¼å ä¸ºä»ææ°åæ³åé¨ä»¶ä¼è§¦åï¼\n * 2. è¥ getData æå¼ï¼åç¨å®è·å¾æ°æ®ï¼ä¸ç¨çæ°æ®\n * 3. è¥åä¸­å¸¦æ 'æ¼ç¤º'ï¼åç¨æ¼ç¤ºæ°æ®\n * 4. é½ä¸æ»¡è¶³åç¨çæ°æ®\n */\n@Component({\n  selector: 'lib-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss']\n})\nexport class WidgetComponent implements OnInit, OnChanges {\n  /** å¿éï¼è¦æ¸²æç widget ä¿¡æ¯ */\n  @Input() basicWidgetInfo: BasicWidgetInfo\n  /** å¿éï¼æ­¤ widget çéç½®ä¿¡æ¯ï¼ä»å¨åé¨ä»¶å è½½æ¶èµ·ä½ç¨ï¼è¥å±æ§æ¹åï¼å¿éè°ç¨ setPropValues() */\n  @Input() propValues\n  @Input() linkMap: LinkMap\n  /** å¯é */\n  @Input() mode = WidgetContainerMode.AOT\n  /** å¯éï¼widget çéæèµæºå°åï¼ä¸è¬ä¸ç¨ç®¡ï¼ç¹æ®æåµå¯éç½®ï¼é»è®¤å¼ä¸º this.basicWidgetInfo.baseUrl + '/assets/' */\n  @Input() assetsBaseUrl: string\n  // TODO: è§£è¦ portlet\n  /** å¯éï¼é¨ä»¶ä¿¡æ¯ï¼éè¦æ³¨å¥å°åé¨ä»¶ */\n  @Input() portlet: EppPortlet = new EppPortlet(null)\n  /** å¯éï¼é¨ä»¶å®ä¾ id, è·åæ°æ®å¯è½ç¨å° */\n  @Input() instanceId: string\n  /**\n   * å¿éï¼\n   * è¥æå®ï¼ååé¨ä»¶ä¸»å¨å è½½æ°æ®æ¶ä½¿ç¨å®è·åæ°æ®ï¼\n   * ä¸åå è½½çå®æ°æ®ãç¨äºç»åé¨ä»¶è®¾ç½®åæ°æ®\n   */\n  @Input() getData: (getDataOpts: GetDataOptions) => Observable<DataWithDims>\n  @Input() status = WCStatus.LoadingWidget\n\n  /** widget å è½½å®æï¼ååºå½å widget çä¿¡æ¯ */\n  @Output() widgetLoaded = new EventEmitter()\n  /** widget component create å®æï¼ååºå½å widget çä¿¡æ¯ */\n  @Output() widgetInit = new EventEmitter()\n  @Output() runtimeAggChange = new EventEmitter()\n  // TODO: èèå»æ\n  // @Output() triggerLoadData = new EventEmitter()\n\n  @ViewChild('resizeTarget') resizeTarget\n  @ViewChild('wc', { read: ViewContainerRef }) widgetContainer: ViewContainerRef\n  @ViewChild('titleBar') titleBar: TitleBarComponent\n\n  // public isLoading = true\n  // public status = WCStatus.Normal\n  public WCStatus = WCStatus\n  public IGIX_HOME_PATH = IGIX_HOME_PATH\n  public FILTER_PROP_NAME = FILTER_PROP_NAME\n  public width: number\n  public height: number\n  public curWidgetConfig: RegisteredWidgetConfig\n  // public feFilterValues: FrontendFilter[]\n  /** å­å¨æ­¤å±çæ°æ®ãå¯ç¨äºåç«¯ç­éãæ°æ®è·åç¶æå¤æ­ */\n  public data: any[] = null\n  /** è·åæ°æ®åå­èµ·æ¥çç»´åº¦ãå¯ç¨äºé¡µé¢è®¾è®¡æ¶ãè¿è¡æ¶è·åãæ¾ç¤ºç»´åº¦ */\n  public dims: Dimension[]\n  public widgetInstance: WidgetBase\n  public showRuntimeAgg = false\n\n  // private widgetComponentRef: ComponentRef<any>\n  // private widgetInstanceInfo: WidgetInstanceInfo\n  private widgetDataService: WidgetDataService\n  /** å¬å±å¤´ä¸æ¯å¦æ¾ç¤ºè¿è¡æ¶èåéç½® */\n\n  constructor (\n    private loader: DynamicLoaderService,\n    private cd: ChangeDetectorRef,\n    private injector: Injector,\n    private modal: NzModalService,\n    private http: HttpClient,\n    private translate: TranslateService,\n    private widgetPropertyService: WidgetPropertyService,\n    private widgetEventService: WidgetEventService,\n    private insSerivce: InstanceService,\n  ) {\n    this._initWidgetEnv()\n  }\n  /**\n   * å¨å±åå§å\n   */\n  private _initWidgetEnv () {\n    // i18n\n    if (!this.translate.defaultLang) this.translate.setDefaultLang('zh-CHS');\n    if (!this.translate.currentLang) {\n      const lang = localStorage.getItem('languageCode') || 'zh-CHS'\n      this.translate.use(lang || 'zh-CHS')\n    }\n    if (!window.widgetI18nResLoaded) {\n      const { currentLang } = this.translate\n      this.http.get(`${IGIX_HOME_PATH}assets/i18n/${currentLang}.json`).subscribe(res => {\n        this.translate.setTranslation(currentLang, res, true)\n      })\n      window.widgetI18nResLoaded = true\n    }\n  }\n\n  ngOnInit () {\n    this.insSerivce.addInsInfo(this.instanceId, this, 'widgetComp')\n    // çå¬ resizeTarget çå¤§å°ååï¼ååæ¶è°ç¨åé¨ä»¶.onResized()ï¼ä¼ å¥ DomRectReadonly\n    if (this.resizeTarget) {\n      new ResizeObserver(entries => {\n        const { width, height } = entries[0].contentRect\n        if (this.widgetInstance) this.widgetInstance.onResized(width, height)\n        this.width = width\n        this.height = height\n        this.cd.markForCheck()\n      }).observe(this.resizeTarget.nativeElement)\n    }\n  }\n\n  ngOnChanges (c: SimpleChanges) {\n    const { basicWidgetInfo } = c\n    if (basicWidgetInfo && basicWidgetInfo.currentValue && basicWidgetInfo.currentValue !== basicWidgetInfo.previousValue) {\n      // widget åäºï¼æ¸²ææ°åé¨ä»¶\n      this.renderWidget()\n    }\n  }\n  /**\n   * æ­¤ container è¢« gridster æ¸²æåºæ­£ç¡®çå¤§å°äºä»¶\n   */\n  public triggerWidgetResize () {\n    if (this.widgetInstance && this.widgetInstance.onResized) {\n      const { clientWidth, clientHeight } = this.resizeTarget.nativeElement\n      this.widgetInstance.onResized(clientWidth, clientHeight)\n    }\n  }\n  // TODO: è¿äºé½æ¹é æï¼åæ°ä¸ºä¸ä¸ªå¯¹è±¡ï¼éé¢å¯ä»¥ä¸æ¬¡å¡å¤ä¸ªå±æ§-å¼ï¼å¨é¨æ´æ°ååè§¦å onPropertyChangeï¼\n  // å¦åååå§åå®è¦èµå¤ä¸ªå¼çæåµï¼éç¥è§¦åå¤ªé¢ç¹äºï¼ä¹ä¼å¯¼è´é¢ç¹è§¦ååé¨ä»¶æ¸²æãæ°æ®å è½½\n  /**\n   * å¤é¨æ´æ°åé¨ä»¶ propValues çæå±æ§åï¼éè¦è°ç¨æ­¤æ¹æ³ï¼å¦åæä»¬ä¸ç¥é propValues åçäºååã\n   * ä¸å¤ªå¥½ç²¾ç®æè¿ä¸ªæ¹æ³ãå°è¯è¿ç¨ keyValueDiffer å¨ ngDoCheck ä¸­æ£æµ propValues ååï¼ä½ä»è½æ£æµä¸å±ã\n   */\n  public setPropertyValue (propName: string, pValue) {\n    // TODO: portlet ç»ææ¹ååï¼å¯ä»¥çå»è¿ä¸æ­¥ï¼__extra åºè¯¥æ ¹æ¬ä¸ä¼ä¼ è¿æ¥\n    if (propName === '__extra') return\n    // å¦æä¸æ¯ objectï¼åå¤æ­å¼å¦æ pValue ä¸å½ååé¨ä»¶å®ä¾ä¸­ç¸åï¼å°±ä¸ä¼ ç»é¨ä»¶äº\n    if (typeof pValue !== 'object' && this.widgetInstance[propName] === pValue) return\n    // TODO: é¨ä»¶éç½®æ¶ï¼è¿è¡æ¶æ´æ¹è¯­è¨çå¤ç\n    const value = this.processPV(pValue)\n    // æ¹å¼\n    this.widgetInstance[propName] = value\n    // éç¥ï¼å ä¸ºåé¨ä»¶å¯è½éè¦è¿ä¸ªæ¶æº\n    // é²æ­¢æ²¡æè¿ä¸ªæ¹æ³çèåé¨ä»¶æ¥éï¼åé¢é½ä¼åçº§æ\n    if (this.widgetInstance.onPropertyChange) {\n      this.widgetInstance.onPropertyChange(propName, value)\n    }\n    if (propName === FILTER_PROP_NAME) {\n      this.dpValues = (pValue as FilterConfig[])\n        .filter(dv => dv.dpId)\n        .map(fc => ({\n          value: FilterSchema.getDefaultValue(fc.fs),\n          dpId: fc.dpId\n        }))\n      // TODO:\n\n      // if (pValue && pValue.slice) this.propValues[FILTER_PROP_NAME] = pValue.slice()\n      // this.cd.markForCheck()\n    }\n    if (!this.propValues) this.propValues = {}\n    this.propValues[propName] = pValue\n    this.cd.markForCheck()\n  }\n\n  /* éå½æ£æ¥ pvï¼åç¹æ®å¤çï¼æ¯å¦å½éåãå¸®å© */\n  private processPV (value) {\n    const { currentLang } = this.translate\n    try {\n      value = JSON.parse(JSON.stringify(value))\n    } catch (e) { }\n    return _processPVRecursively(value)\n\n    function _processPVRecursively (pValue) {\n      if (Array.isArray(pValue)) {\n        pValue.forEach((v, i) => {\n          pValue[i] = _processPVRecursively(v)\n        })\n        return pValue\n        // i18n: å¦æ value ä¸­åå« en æ zh-CHS æ å½åè¯­è¨çkeyï¼åæ¯ i18n å­æ®µ\n      } else if (pValue && !pValue._notProcess && typeof (pValue.en + pValue['zh-CHS'] + pValue[currentLang]) === 'string') {\n        return pValue[currentLang]\n        // help\n      } else if (pValue && pValue.__type === 'help') {\n        return pValue.value\n      } else if (pValue && ['Object'].includes(pValue.constructor.name)) {\n        Object.keys(pValue).forEach(key => {\n          pValue[key] = _processPVRecursively(pValue[key])\n        })\n        return pValue\n      } else {\n        return pValue\n      }\n    }\n  }\n  public async renderWidget () {\n    // å è½½æ¸²æè¿ä¸ª widget éè¦çä¸ååæ°æ®\n    const { baseUrl } = this.basicWidgetInfo\n    const curWidgetData = await this.loader.loadWidget(this.basicWidgetInfo, this.propValues, this.mode)\n    // TODO: propValues æ¯ä¸æ¯ä¸ç¨ç»è¿ loaderï¼ç´æ¥è° widgetPropService è·åå°±è¡ï¼\n    const { widgetCompFactory, widgetModuleFactory, propValues, widgetConfig } = curWidgetData\n    this.curWidgetConfig = widgetConfig\n    this.initRuntimeAgg()\n    if (this.curWidgetConfig.enableLoadingI18n) this.loadI18nRes()\n    // åé¨ä»¶å è½½å®æäºä»¶\n    this.widgetLoaded.emit(curWidgetData)\n    // å èåé¨ä»¶\n    this.widgetContainer.remove()\n    // åå»ºæ³¨å¥å¨\n    const injector = Injector.create({\n      providers: [{\n        provide: WidgetInstanceInfo, /** åé¨ä»¶å®ä¾ä¿¡æ¯ */\n        useValue: new WidgetInstanceInfo(\n          this.portlet.id,\n          this.instanceId,\n          this.assetsBaseUrl || this.basicWidgetInfo.baseUrl + '/assets/',\n        )\n      }, {\n        provide: WidgetDataService, /** åé¨ä»¶æ°æ®æå¡ */\n        useFactory: () => {\n          this.widgetDataService = new WidgetDataService()\n          this.widgetDataService.onLoadData\n            .pipe(delay(0)) // ä¸ºé¿åç¨ of(data) ä¼åæ­¥è¿åæ°æ®ï¼å¯¼è´ data service ä¸­ç onGetData è¿æ²¡è¿åå°åé¨ä»¶æéå°±è§¦åå®äº\n            .subscribe(this.loadNSetData.bind(this))\n          return this.widgetDataService\n        },\n        deps: []\n      }],\n      parent: this.injector\n    })\n    // åå»ºãæè½½ widget ç»ä»¶\n    this.widgetInstance = this.widgetContainer.createComponent(\n      widgetCompFactory, 0, injector, undefined,\n      widgetModuleFactory && widgetModuleFactory.create(this.injector)\n    ).instance as WidgetBase\n\n    // è®¾ç½® widget ç properties ç values\n    // TODO: æ¹ä¸ºä¸æ¬¡éå¤ä¸ª\n    Object.keys(propValues).forEach(prop => {\n      this.setPropertyValue(prop, propValues[prop])\n    })\n\n    // TODO: å·²åºå¼æ¹æ¡, ä»¥ä¸ä¸ºè¿æ¸¡æ¹æ¡ä»¥å¼å®¹èåæ³åé¨ä»¶, åæå°ç§»é¤\n    this.widgetInstance.id = this.instanceId\n    this.widgetInstance.portletId = this.portlet.id\n    this.widgetInstance.assetsBaseUrl = this.assetsBaseUrl || baseUrl + '/assets/'\n    if (this.widgetInstance.useDataEngine) this.loadNSetData({})\n\n    // TODO: å®å®æä¹åæç®ä½ widget åå§åå®æï¼å¯ä»¥æ¾ç¤ºåºæ¥ãå¦åä¼æ¾ç¤º codeã\n    // this.setWidgetTranslation()\n    // event\n    this.initWidgetEventListener()\n    // åé¨ä»¶åå§åå®æäºä»¶\n    this.widgetInit.emit(curWidgetData)\n    // this.isLoading = false\n    this.status = WCStatus.Normal\n    this.cd.markForCheck()\n  }\n\n  private loadI18nRes () {\n    const { currentLang } = this.translate\n    const { name, baseUrl } = this.basicWidgetInfo\n    const { customI18nResourceUrl } = this.curWidgetConfig\n    const i18nResUrl = customI18nResourceUrl || `${baseUrl}/assets/i18n/${currentLang}.json`\n\n    // ç¼å­æ¾å è½½è¿çèµæºæä»¶åï¼ä¸æ¬¡ç¸åæä»¶ä¸åè¯·æ±ãç¼å­èµæºæä»¶åï¼æ¯å ä¸ºå¯è½å¤ä¸ªåé¨ä»¶æå®ç¸åçèµæºæä»¶ã\n    if (loadedI18nUrls.includes(i18nResUrl)) return\n    loadedI18nUrls.push(i18nResUrl)\n\n    return this.http.get(i18nResUrl).toPromise().then(res => {\n      this.translate.setTranslation(currentLang, res, true)\n    }, () => {\n      console.log(`åé¨ä»¶ ${name} æ  ${currentLang} çèµæºæä»¶`)\n    }).finally(() => {\n      return Promise.resolve()\n    })\n  }\n  /**\n   * pv ä¸­åå« {fs,dp}[]ï¼ç­éæ§ä»¶+åæ°åæ°=ç­éï¼\n   * é¨ä»¶å®ä¾ä¸­ä¿å­ {fs,dp}: filterValue\n   */\n  dpValues: DpValue[] = []\n  /**\n   * å¡æ°æ®å¥å£ 1/2: å è½½æ°æ®å¹¶å¡ç»é¨ä»¶\n   */\n  // TODO: loadNSetData å¯è½æ¯ä¸å¸¦åæ°çãåæ°åæ°å¯è½å­å¨å½å widget å®ä¾éï¼ç´æ¥åã\n  // loadNSetData ææ²¡æå¯è½å¸¦çæ¥èªé¨ä»¶çé¢å¤åæ°ï¼\n  public loadNSetData (param: {\n    dpValues?: DpValue[],\n  } = {}) {\n    const ob = this.getData({\n      dpValues: mergeDpValuesForNew(this.dpValues, param.dpValues),\n      runtimeAgg: this.runtimeAgg\n    })\n    if (!ob) return\n    ob.subscribe(dataWithDims => {\n      this.setData(dataWithDims)\n    }, this.handleDataError.bind(this))\n  }\n  /**\n   * ç»åé¨ä»¶éæ°è®¾ç½®æ°æ®ç»æï¼å¤é¨å¯è°ç¨æ­¤æ¹æ³ç»é¨ä»¶è®¾ç½®æ°æ®ã\n   */\n  public setData (pDataWithDims: DataWithDims) {\n    let dataWithDims = pDataWithDims\n    // set if empty status\n    if (!pDataWithDims || !pDataWithDims.tableData || pDataWithDims.tableData.length === 0) this.status = WCStatus.DataEmpty\n    // å¦æå¤é¢æ²¡æç» DataWithDims èæ¯ç®åæ°æ®åè¡¨ï¼å°±ç®åè½¬ä¸æãä»¥å¼å®¹ config éçåæ°æ®ç­ã\n    if (!pDataWithDims.dimensions && pDataWithDims['length']) {\n      dataWithDims = {\n        dimensions: Object\n          .keys(pDataWithDims[0])\n          .map(key => ({ name: key, label: key })),\n        tableData: (pDataWithDims as unknown as any[])\n      }\n    }\n    this.status = WCStatus.Normal\n    this.data = dataWithDims.tableData\n    this.dims = dataWithDims.dimensions\n\n    if (this.widgetDataService) this.widgetDataService.setData(dataWithDims)\n    if (this.widgetInstance && this.widgetInstance.useDataEngine) this.widgetInstance.onGetData(dataWithDims.tableData) // å¼å®¹ç¨é\n\n    // ç»åé¨ä»¶è®¾ç½®å®æ°æ®ï¼è¥æè¿è¡æ¶èåï¼è¿éè¦éæ°ç»å®å­æ®µ\n    this.setRuntimeAggDims()\n    this.cd.markForCheck()\n  }\n\n  handleDataError = () => {\n    // æ°æ®å è½½å¤±è´¥\n    this.status = WCStatus.DataError\n    this.cd.markForCheck()\n  }\n  handleClickStatusMore () {\n    this.modal.error({\n      nzTitle: 'å°é¨ä»¶éè¯¯',\n      nzContent: 'æ­¤å°é¨ä»¶çæ°æ®éç½®æ æï¼éè¦ç®¡çåéæ°éç½®æå é¤ã'\n    })\n  }\n  filterValues: any[]\n  handleFilterChange (dpValues: DpValue[]) {\n    mergeDpValues(this.dpValues, dpValues)\n    this.loadNSetData()\n  }\n  // @Input() initRuntimeAgg: RuntimeAggOption\n  /**\n   * æ­¤ runtimeAgg å­å¨å½åè¿è¡æ¶ç¨æ·éçãææ°ç runtimeAggã\n   * extra ä¸­çæ¯å­å¨å¨é¨ä»¶ä¸­çã\n   * widget ä¸è´è´£æ runtimeAgg æ¾å° extra éï¼å ä¸ºè¿éä¸ç¡®å®æ¯å¦éè¦æä¹åã\n   */\n  runtimeAgg: RuntimeAggOption\n  handleRuntimeAggChange (runtimeAgg: RuntimeAggOption) {\n    // if (objectLiteralEqual(runtimeAgg, this.runtimeAgg)) return\n    this.runtimeAgg = runtimeAgg\n    // ä¸é¢ä¸¤è¡é¡ºåºä¸¥æ ¼ï¼å ä¸ºå¤é¨å è½½æ°æ®æ¶å¯è½è¦ä¾èµå½åææ°ç runtimeAgg\n    this.runtimeAggChange.emit(runtimeAgg)\n    this.loadNSetData()\n  }\n  /** å½ååæ³éè¦ä¿è¯ renderWidget() å·²å®æ */\n  handleTitleBarInit (titleBar: TitleBarComponent) {\n    if (this.showRuntimeAgg) {\n      titleBar.setRuntimeAgg(this.runtimeAgg)\n    }\n  }\n  initRuntimeAgg () {\n    // runtime agg\n    this.showRuntimeAgg = isWidgetRuntimeAggActive(this.basicWidgetInfo.name)\n    if (this.showRuntimeAgg) {\n      this.runtimeAgg = this.propValues.__extra ? this.propValues.__extra.runtimeAgg : null\n    }\n  }\n  // TODO: ä»¥åæ su æ¾ basic... é\n  /**\n   * åå§åé¨ä»¶äºä»¶çå¬\n   */\n  private initWidgetEventListener () {\n    if (!this.linkMap) return\n    if (this.amIFilterWidget()) {\n      this.initOneEventListener(FILTERS_WIDGET_PROP_NAME)\n    } else {\n      this.widgetEventService\n        .getEventsByWidgetName(this.basicWidgetInfo.name, this.propValues)\n        .forEach(eventConfig => {\n            this.initOneEventListener(eventConfig.propName)\n        })\n      }\n  }\n  /**\n   * eventPropName æ¯äºä»¶å¯¹åºçå®éå±æ§åï¼\n   * eventKey éç½®å¨ link éçäºä»¶åã\n   * ä¸è¬ä»ä¿©æ¯ä¸æ ·çï¼åèå¯ä»¥ä¸ä¼ ã\n   * è¥æ¯ç­éé¨ä»¶ï¼åä¸¤èä¸åï¼ä¸ä¸ªæ¯ 'filter'ï¼ä¸ä¸ªæ¯å®éçäºä»¶ï¼ç­éï¼åç§°ã\n   */\n  private initOneEventListener (eventPropName: string) {\n    const eventEmitter = this.widgetInstance[eventPropName]\n    if (eventEmitter) eventEmitter.subscribe(widgetEventParam => {\n      console.log('èå¨äºä»¶è§¦åï¼åæ°ï¼' + widgetEventParam)\n      const linkEventKey = this.amIFilterWidget()\n      ? (widgetEventParam as FilterWidgetEventParam).eventKey\n      : eventPropName\n      // æ ¹æ® link map è°ç¨å¶ä» ins æ ¹æ® éæ°å è½½æ°æ®\n      const pInsLink = this.linkMap[linkEventKey]\n      Object.keys(pInsLink).forEach(pInsId => {\n        if (!pInsLink[pInsId] || !pInsLink[pInsId].active || !pInsLink[pInsId].dpId) return\n        const targetWIns = this.insSerivce.getInsByPInsId(pInsId).widgetComp\n        if (targetWIns) targetWIns.loadNSetData({\n          dpValues: [{\n            dpId: pInsLink[pInsId].dpId,\n            // TODO: èå¨åæ°å¼çå¤çå å¨è¿\n            value: String(widgetEventParam['dataIndex']),\n          }]\n        })\n      })\n    })\n  }\n  setRuntimeAggDims () {\n    if (!this.runtimeAgg) return\n    chartAggFieldMap[this.basicWidgetInfo.name].forEach(aggField => {\n      this.setPropertyValue(aggField.name, aggField.valueFactory(this.runtimeAgg, this.dims))\n    })\n  }\n  amIFilterWidget () {\n    return this.basicWidgetInfo.name === FILTERS_WIDGET_NAME\n      && this.basicWidgetInfo.baseUrl.includes('/epp/')\n  }\n}\n\n/**\n * newDpValues åå¹¶å° this.dpValuesï¼å dpId è¦çã\n * æ­¤æ¹æ³ä¼æ¹å oldDpValuesã\n */\nfunction mergeDpValues (oldDpValues: DpValue[], newDpValues: DpValue[]) {\n  for (const newDV of newDpValues.filter(dv => dv.dpId)) {\n    const targetOldDV = oldDpValues.find(oldDV => oldDV.dpId === newDV.dpId)\n    if (targetOldDV) {\n      targetOldDV.value = newDV.value\n    } else {\n      oldDpValues.push(newDV)\n    }\n  }\n}\nfunction mergeDpValuesForNew (oldDpValues: DpValue[] = [], newDpValues: DpValue[] = []) {\n  const result = oldDpValues.slice()\n  mergeDpValues(result, newDpValues)\n  return result\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { ArrUtil, deepClone, Dimension, DpValue, Indicator, objectLiteralEqual, RuntimeAggOption } from '@gspwidget/util';\nimport { DataField, DatalessJumpConfig, FilterConfig, ifFsDateRange, isFsFlat, JumpTypes, WidgetDevkitService } from '@gspwidget/widget-devkit';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'lib-title-bar',\n  templateUrl: './title-bar.component.html',\n  styleUrls: ['./title-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TitleBarComponent implements OnInit, OnChanges {\n\n  @Input() icon = ''\n  /** æ é¢ */\n  @Input() showTitle = true\n  @Input() title = ''\n  /** æ°å­ */\n  @Input() showNumber = false\n  @Input() number = 0\n  /** è®¾ç½®æé® */\n  @Input() showSetting = false\n  @Input() settingTitle: string\n  @Output() clickSetting = new EventEmitter<any>()\n  /** å·æ°æé® */\n  @Input() showRefresh = false\n  @Output() clickRefresh = new EventEmitter<any>()\n\n  /** æ¯å¦å¯ç¨è·³è½¬ï¼å¼å¯ååé¨ä»¶éç½®ä¸­å¯éç½®å¨å±èæ¥ */\n  @Input() jumpConfig: DatalessJumpConfig\n  /** @deprecated åºæ¹ç¨ enableJumpãå¨å±èæ¥éç½® */\n  @Input() jumpProperty\n  /** @deprecated åºæ¹ç¨ enableJumpãä¸ºäºè·³è½¬æ¶è½åå°æ°æ®çç¬¬ä¸è¡ï¼ç¨æ¥æ¼æ¥è·³è½¬è·¯ç±åæ°ã */\n  @Input() data: any[]\n  /** ç­é */\n  @Input() filterConfigs: FilterConfig[]\n  /** ç»´åº¦ï¼ç¨äºè¿è¡æ¶èå */\n  @Input() dims: Dimension[] = []\n  /** æ¯å¦æ¾ç¤ºè¿è¡æ¶èå */\n  @Input() showRuntimeAgg = false\n\n  @Output() filterChange = new EventEmitter<DpValue[]>()\n  @Output() runtimeAggChange = new EventEmitter<RuntimeAggOption>()\n  @Output() init = new EventEmitter<TitleBarComponent>()\n  /** ä¼ å¥æ¨¡æ¿ */\n  @ContentChild('leftTemplate') leftTemplate: TemplateRef<ElementRef>\n  @ContentChild('rightTemplate') rightTemplate: TemplateRef<ElementRef>\n\n  JumpTypes = JumpTypes\n\n  /** é flat ç fcs */\n  outerFC: FilterConfig\n  innerFCs: FilterConfig[]\n  /** è¢«éä¸­çãæ¾ç¤ºå¨å¤é¢ç fc */\n  // selectedFC: FilterConfig\n  /** flat ç fc */\n  flatFCs: FilterConfig[]\n\n  /** èå */\n  editingRuntimeAgg = new RuntimeAggOption()\n  confirmedRuntimeAgg: RuntimeAggOption\n  runtimeAggDropdownOpen = false\n\n  constructor (\n    private devkitSvc: WidgetDevkitService,\n    public translate: TranslateService,\n  ) { }\n\n  ngOnInit () {\n    this.init.emit(this)\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes.filterConfigs) {\n      this.outerFC = null\n      this.innerFCs = null\n      const notFlatFCs = this.filterConfigs.filter(fc => !isFsFlat(fc.fs))\n      if (notFlatFCs && notFlatFCs[0]) this.outerFC = notFlatFCs[0]\n      if (notFlatFCs && notFlatFCs.length > 1) this.innerFCs = notFlatFCs.slice(1)\n      this.flatFCs = this.filterConfigs.filter(fc => isFsFlat(fc.fs))\n    }\n  }\n  /** ç¨äºå¤é¨æå¨è®¾ç½® runtime aggãå ä¸ºæ¯æ¬¡é½éè¦ deep cloneï¼æä»¥å°è£ä¸ºæå¨è°ç¨çå½æ°ï¼èéæ¨¡æ¿ç»å®ï¼ä»¥åå°æ¬¡æ°ã */\n  public setRuntimeAgg (runtimeAgg: RuntimeAggOption) {\n    if (!runtimeAgg) return\n    this.editingRuntimeAgg = deepClone(runtimeAgg)\n    this.confirmedRuntimeAgg = deepClone(runtimeAgg)\n  }\n\n  handleClickJump () {\n    this.devkitSvc.jumpWithoutData(this.jumpConfig)\n  }\n  /** æ filter åæ¥çç»æå¼ï¼å ä¸ dpId ä¸èµ·åè£ä¸º dpValues ååºå» */\n  handleFilterSingleChange (value, fc: FilterConfig) {\n    // 1. æ®éï¼ååºå¯¹åº 1 ä¸ª dp çåä¸ªå¼\n    this.filterChange.emit([{\n      value,\n      dpId: fc.dpId,\n    }])\n  }\n  handleFilterMultiChange (values: any[], fc: FilterConfig) {\n    let dpValues\n    // 2. æ¥æèå´ï¼ååºå¯¹åº 2 ä¸ª dp ç 2 ä¸ªå¼\n    if (ifFsDateRange(fc.fs)) {\n      dpValues = [\n        { value: values[0], dpId: fc.dpId },\n        { value: values[1], dpId: fc.dpId2 },\n      ]\n    } else {\n      // 3. æä¸¾å¤éï¼ååºå¯¹åº 1 ä¸ª dp çå¤ä¸ªå¼\n      dpValues = [{\n        // TODO: å¤å¼çè¿æ¥æ¹å¼æ¯å¦å¯éï¼\n        value: values.join(','), dpId: fc.dpId\n      }]\n    }\n    this.filterChange.emit(dpValues)\n  }\n\n  /** èå */\n  handleAddInd () {\n    this.editingRuntimeAgg.indicators.push(new Indicator())\n  }\n  handleRemoveInd (ind: Indicator) {\n    ArrUtil.Remove(this.editingRuntimeAgg.indicators, ind)\n  }\n  handleConfirmAgg () {\n    this.runtimeAggDropdownOpen = false\n    if (objectLiteralEqual(this.editingRuntimeAgg, this.confirmedRuntimeAgg)) return\n    this.confirmedRuntimeAgg = deepClone(this.editingRuntimeAgg)\n    this.runtimeAggChange.emit(this.confirmedRuntimeAgg)\n  }\n}\n\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Pipe, PipeTransform, SimpleChanges } from '@angular/core';\nimport { FilterSchema, FSEnum, FSEnumItem } from '@gspwidget/widget-devkit';\nimport { TranslateService } from '@ngx-translate/core';\nimport { subDays, subMonths } from 'date-fns';\n\n@Component({\n  selector: 'filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css']\n})\nexport class FilterComponent implements OnInit, OnChanges {\n  /** ç¨äºè·å¾ enum åçå¼ */\n  /** filter éç»ä¸åºè¯¥éè¦å®æ´æ°æ®ï¼å¦ååä¸æ¥è¯¢çç­éè¿æå¥æä¹ï¼ */\n  // @Input() intactData: any[] = []\n  @Input('filterSchema') fs: FilterSchema\n  @Output() singleValueChange = new EventEmitter()\n  @Output() multiValueChange = new EventEmitter()\n\n  value\n\n  constructor(\n    public translate: TranslateService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges (changes: SimpleChanges) {\n    if (changes.fs && changes.fs.currentValue != changes.fs.previousValue) {\n      this.value = FilterSchema.getDefaultValue(this.fs)\n    }\n  }\n\n  getEnumItems (): FSEnumItem[] {\n    return FSEnum.GetItems(this.fs.enum)\n  }\n  /**\n   * filter ä¸å³å¿å¤çå¦ä½çå¾ãå¤çå¤ä¸ªå¼ï¼å¤ä¸ªå¼å¯¹åºä¸ä¸ªè¿æ¯å¤ä¸ª dpï¼ï¼\n   * ä»æå¤ä¸ªå¼çæ°ç»ååºå»\n   */\n  handleChange (value) {\n    this.singleValueChange.emit(value)\n  }\n  handleChangeMulti (values: any[]) {\n    this.multiValueChange.emit(values)\n  }\n}\n\n@Pipe({ name: 'colValues' })\nexport class ColValuesPipe implements PipeTransform {\n  transform (data: any[], col: string ): any {\n    if (data && data.map) return Array.from(new Set(data.map(i => i[col])))\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'flat-select',\n  templateUrl: './flat-select.component.html',\n  styleUrls: ['./flat-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FlatSelectComponent implements OnInit {\n\n  @Input() options: {\n    label: string\n    value: any\n  }[] = []\n\n  @Input() value\n  @Output() valueChange = new EventEmitter()\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlatSelectComponent } from './flat-select.component';\n\n@NgModule({\n  declarations: [\n    FlatSelectComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    FlatSelectComponent,\n  ]\n})\nexport class FlatSelectModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilterComponent, ColValuesPipe } from './filter.component';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { FormsModule } from '@angular/forms';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { FlatSelectModule } from '../flat-select/flat-select.module';\n\n@NgModule({\n  declarations: [\n    FilterComponent,\n    ColValuesPipe,\n  ],\n  imports: [\n    CommonModule,\n    NzSelectModule,\n    NzDatePickerModule,\n    FormsModule,\n    FlatSelectModule,\n  ],\n  exports: [\n    FilterComponent\n  ]\n})\nexport class FilterModule { }\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UtilModule } from '@gspwidget/util';\nimport { WidgetDevkitModule } from '@gspwidget/widget-devkit';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { WidgetComponent } from './widget/widget.component';\nimport { TitleBarComponent } from './title-bar/title-bar.component';\nimport { FilterModule } from './filter/filter.module';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\n// import { FilterComponent } from './filter/filter.component';\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { GridDesignerComponent } from '../../../designer/src/app/components/grid-designer/grid-designer.component';\n// import {GridsterModule as Gridster2} from '@widget/gridster';\n// TODO: å¼ç¨æ¹å¼\n// import { WidgetDevkitModule } from '@gspwidget/widget-devkit';\n\n@NgModule({\n  declarations: [\n    WidgetComponent,\n    TitleBarComponent,\n    // GridDesignerComponent,\n  ],\n  entryComponents: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AccordionModule.forRoot(),\n    ColorPickerModule,\n    // Gridster2\n    // TranslateModule.forRoot(),\n    TranslateModule,\n    NzAutocompleteModule, // TODO: è¿äº module çç»ç»æ¹å¼\n    NzModalModule,\n    NzDatePickerModule,\n    // NzSelectModule,\n    // ä¿è¯åé¨ä»¶å¨è¿å±è½è·åå°è¿éé¢çæå¡ã\n    // ä¸è½ä»æ³¨åå¨ rootï¼å ä¸ºæå¡çæå¡ä¸ä¿è¯å¨ root ä¸ï¼\n    // ä¸è½é½æ³¨åå¨ widget éï¼å ä¸ºä¼æ¯ä¸ªé¨ä»¶ä¸ä¸ªæå¡å®ä¾ï¼\n    // æ³¨åå¨è¿ä¿è¯åé¨ä»¶å¨æ­¤å±æ¾å°åä¸ä¸ªæå¡å®ä¾ãå¹¶ä¸æå¡çæå¡ä¹å¨ module éæä¾äºã\n    WidgetDevkitModule,\n    UtilModule,\n    FilterModule,\n    NzDropDownModule,\n    NzSelectModule,\n    NzInputModule,\n  ],\n  exports: [\n    WidgetComponent,\n  ],\n  providers: [\n  ]\n})\nexport class WidgetCoreModule { }\n"]}