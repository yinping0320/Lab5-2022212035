/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, Pipe } from '@angular/core';
import { FilterSchema, FSEnum } from '@gspwidget/widget-devkit';
import { TranslateService } from '@ngx-translate/core';
export class FilterComponent {
    /**
     * @param {?} translate
     */
    constructor(translate) {
        this.translate = translate;
        this.singleValueChange = new EventEmitter();
        this.multiValueChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.fs && changes.fs.currentValue != changes.fs.previousValue) {
            this.value = FilterSchema.getDefaultValue(this.fs);
        }
    }
    /**
     * @return {?}
     */
    getEnumItems() {
        return FSEnum.GetItems(this.fs.enum);
    }
    /**
     * filter 不关心外界如何看待、处理多个值（多个值对应一个还是多个 dp），
     * 仅把多个值的数组发出去
     * @param {?} value
     * @return {?}
     */
    handleChange(value) {
        this.singleValueChange.emit(value);
    }
    /**
     * @param {?} values
     * @return {?}
     */
    handleChangeMulti(values) {
        this.multiValueChange.emit(values);
    }
}
FilterComponent.decorators = [
    { type: Component, args: [{
                selector: 'filter',
                template: "<!-- {{fs.type|json}} -->\n<div class=\"d-flex align-items-center\" *ngIf=\"fs\">\n  <span *ngIf=\"fs.showName\"\n    class=\"text-truncate mr-1\">{{fs.i18nName[translate.currentLang]}}</span>\n  <ng-container *ngIf=\"fs.type==='date'\">\n    <ng-container *ngIf=\"fs.date.type==='single'\">\n      <nz-year-picker\n        *ngIf=\"fs.date.singleUnit==='year'\"\n        [(ngModel)]=\"value\"\n        nzFormat=\"YYYY\"\n        (ngModelChange)=\"handleChange($event)\"\n        ></nz-year-picker>\n      <nz-month-picker\n        *ngIf=\"fs.date.singleUnit==='month'\"\n        [(ngModel)]=\"value\"\n        nzFormat=\"YYYY-MM\"\n        (ngModelChange)=\"handleChange($event)\"\n        ></nz-month-picker>\n      <nz-date-picker\n        *ngIf=\"fs.date.singleUnit==='day'\"\n        [(ngModel)]=\"value\"\n        (ngModelChange)=\"handleChange($event)\"\n        ></nz-date-picker>\n    </ng-container>\n\n    <nz-range-picker\n      *ngIf=\"fs.date.type==='range'\"\n      [(ngModel)]=\"value\"\n      (ngModelChange)=\"handleChangeMulti($event)\"\n      ></nz-range-picker>\n\n    <ng-container *ngIf=\"fs.date.type=='lastTimeEnum'\">\n      <nz-select\n        class=\"\"\n        nzAllowClear\n        [(ngModel)]=\"value\"\n        (ngModelChange)=\"handleChange($event)\">\n        <nz-option\n          *ngFor=\"let lastTimeItem of fs.date.lastTimeItems\"\n          [nzValue]=\"lastTimeItem.num\"\n          [nzLabel]=\"\">last{{lastTimeItem.num}}{{lastTimeItem.unit}}</nz-option>\n      </nz-select>\n    </ng-container>\n  </ng-container>\n\n\n  <ng-container *ngIf=\"fs.type==='enum'\">\n    <!-- -{{getEnumItems()}}- -->\n    <!-- single -->\n    <nz-select\n      *ngIf=\"fs.enum.displayType==='select'\"\n      [nzMode]=\"fs.enum.multi ? 'multiple' : 'default'\"\n      class=\"col-sm-5\"\n      nzAllowClear\n      [(ngModel)]=\"value\"\n      (ngModelChange)=\"fs.enum.multi ? handleChangeMulti($event) : handleChange($event)\">\n      <nz-option\n        *ngFor=\"let item of getEnumItems()\"\n        [nzValue]=\"item.value\"\n        [nzLabel]=\"item.label || item.value\"></nz-option>\n    </nz-select>\n    <flat-select\n      *ngIf=\"!fs.enum.multi && fs.enum.displayType==='flat'\"\n      [options]=\"getEnumItems()\"\n      [(value)]=\"value\"\n      (valueChange)=\"handleChange($event)\"\n      ></flat-select>\n  </ng-container>\n\n\n  <ng-container *ngIf=\"fs.type==='number'\">\n    <input\n      type=\"number\"\n      class=\"form-control form-control-sm\"\n      [(ngModel)]=\"value\"\n      (ngModelChange)=\"handleChange($event)\"\n      required />\n  </ng-container>\n\n\n  <ng-container *ngIf=\"fs.type==='text'\">\n    <input\n      type=\"text\"\n      class=\"form-control form-control-sm\"\n      [(ngModel)]=\"value\"\n      (ngModelChange)=\"handleChange($event)\"\n      required />\n  </ng-container>\n</div>\n<ng-template #tagPlaceHolder let-selectedList> \u5DF2\u9009 {{selectedList.length}} \u9879</ng-template>\n",
                styles: ["nz-select{min-width:60px}"]
            }] }
];
/** @nocollapse */
FilterComponent.ctorParameters = () => [
    { type: TranslateService }
];
FilterComponent.propDecorators = {
    fs: [{ type: Input, args: ['filterSchema',] }],
    singleValueChange: [{ type: Output }],
    multiValueChange: [{ type: Output }]
};
if (false) {
    /**
     * filter 里绝不应该需要完整数据，否则参与查询的筛选还有啥意义？
     * @type {?}
     */
    FilterComponent.prototype.fs;
    /** @type {?} */
    FilterComponent.prototype.singleValueChange;
    /** @type {?} */
    FilterComponent.prototype.multiValueChange;
    /** @type {?} */
    FilterComponent.prototype.value;
    /** @type {?} */
    FilterComponent.prototype.translate;
}
export class ColValuesPipe {
    /**
     * @param {?} data
     * @param {?} col
     * @return {?}
     */
    transform(data, col) {
        if (data && data.map)
            return Array.from(new Set(data.map((/**
             * @param {?} i
             * @return {?}
             */
            i => i[col]))));
    }
}
ColValuesPipe.decorators = [
    { type: Pipe, args: [{ name: 'colValues' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3B3aWRnZXQvd2lkZ2V0LWNvcmUvIiwic291cmNlcyI6WyJsaWIvZmlsdGVyL2ZpbHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFFLElBQUksRUFBZ0MsTUFBTSxlQUFlLENBQUM7QUFDOUgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQWMsTUFBTSwwQkFBMEIsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQVF2RCxNQUFNLE9BQU8sZUFBZTs7OztJQVUxQixZQUNTLFNBQTJCO1FBQTNCLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBTjFCLHNCQUFpQixHQUFHLElBQUksWUFBWSxFQUFFLENBQUE7UUFDdEMscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQTtJQU0zQyxDQUFDOzs7O0lBRUwsUUFBUTtJQUNSLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFFLE9BQXNCO1FBQ2pDLElBQUksT0FBTyxDQUFDLEVBQUUsSUFBSSxPQUFPLENBQUMsRUFBRSxDQUFDLFlBQVksSUFBSSxPQUFPLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRTtZQUNyRSxJQUFJLENBQUMsS0FBSyxHQUFHLFlBQVksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1NBQ25EO0lBQ0gsQ0FBQzs7OztJQUVELFlBQVk7UUFDVixPQUFPLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUN0QyxDQUFDOzs7Ozs7O0lBS0QsWUFBWSxDQUFFLEtBQUs7UUFDakIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNwQyxDQUFDOzs7OztJQUNELGlCQUFpQixDQUFFLE1BQWE7UUFDOUIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNwQyxDQUFDOzs7WUF4Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxRQUFRO2dCQUNsQixtNkZBQXNDOzthQUV2Qzs7OztZQVBRLGdCQUFnQjs7O2lCQVl0QixLQUFLLFNBQUMsY0FBYztnQ0FDcEIsTUFBTTsrQkFDTixNQUFNOzs7Ozs7O0lBRlAsNkJBQXVDOztJQUN2Qyw0Q0FBZ0Q7O0lBQ2hELDJDQUErQzs7SUFFL0MsZ0NBQUs7O0lBR0gsb0NBQWtDOztBQTRCdEMsTUFBTSxPQUFPLGFBQWE7Ozs7OztJQUN4QixTQUFTLENBQUUsSUFBVyxFQUFFLEdBQVc7UUFDakMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUc7WUFBRSxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUc7Ozs7WUFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQTtJQUN6RSxDQUFDOzs7WUFKRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3V0cHV0LCBQaXBlLCBQaXBlVHJhbnNmb3JtLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWx0ZXJTY2hlbWEsIEZTRW51bSwgRlNFbnVtSXRlbSB9IGZyb20gJ0Bnc3B3aWRnZXQvd2lkZ2V0LWRldmtpdCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBzdWJEYXlzLCBzdWJNb250aHMgfSBmcm9tICdkYXRlLWZucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZpbHRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9maWx0ZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9maWx0ZXIuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIEZpbHRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgLyoqIOeUqOS6juiOt+W+lyBlbnVtIOWIl+eahOWAvCAqL1xuICAvKiogZmlsdGVyIOmHjOe7neS4jeW6lOivpemcgOimgeWujOaVtOaVsOaNru+8jOWQpuWImeWPguS4juafpeivoueahOetm+mAiei/mOacieWVpeaEj+S5ie+8nyAqL1xuICAvLyBASW5wdXQoKSBpbnRhY3REYXRhOiBhbnlbXSA9IFtdXG4gIEBJbnB1dCgnZmlsdGVyU2NoZW1hJykgZnM6IEZpbHRlclNjaGVtYVxuICBAT3V0cHV0KCkgc2luZ2xlVmFsdWVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKClcbiAgQE91dHB1dCgpIG11bHRpVmFsdWVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKClcblxuICB2YWx1ZVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyB0cmFuc2xhdGU6IFRyYW5zbGF0ZVNlcnZpY2VcbiAgKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzIChjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXMuZnMgJiYgY2hhbmdlcy5mcy5jdXJyZW50VmFsdWUgIT0gY2hhbmdlcy5mcy5wcmV2aW91c1ZhbHVlKSB7XG4gICAgICB0aGlzLnZhbHVlID0gRmlsdGVyU2NoZW1hLmdldERlZmF1bHRWYWx1ZSh0aGlzLmZzKVxuICAgIH1cbiAgfVxuXG4gIGdldEVudW1JdGVtcyAoKTogRlNFbnVtSXRlbVtdIHtcbiAgICByZXR1cm4gRlNFbnVtLkdldEl0ZW1zKHRoaXMuZnMuZW51bSlcbiAgfVxuICAvKipcbiAgICogZmlsdGVyIOS4jeWFs+W/g+WklueVjOWmguS9leeci+W+heOAgeWkhOeQhuWkmuS4quWAvO+8iOWkmuS4quWAvOWvueW6lOS4gOS4qui/mOaYr+WkmuS4qiBkcO+8ie+8jFxuICAgKiDku4XmiorlpJrkuKrlgLznmoTmlbDnu4Tlj5Hlh7rljrtcbiAgICovXG4gIGhhbmRsZUNoYW5nZSAodmFsdWUpIHtcbiAgICB0aGlzLnNpbmdsZVZhbHVlQ2hhbmdlLmVtaXQodmFsdWUpXG4gIH1cbiAgaGFuZGxlQ2hhbmdlTXVsdGkgKHZhbHVlczogYW55W10pIHtcbiAgICB0aGlzLm11bHRpVmFsdWVDaGFuZ2UuZW1pdCh2YWx1ZXMpXG4gIH1cbn1cblxuQFBpcGUoeyBuYW1lOiAnY29sVmFsdWVzJyB9KVxuZXhwb3J0IGNsYXNzIENvbFZhbHVlc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtIChkYXRhOiBhbnlbXSwgY29sOiBzdHJpbmcgKTogYW55IHtcbiAgICBpZiAoZGF0YSAmJiBkYXRhLm1hcCkgcmV0dXJuIEFycmF5LmZyb20obmV3IFNldChkYXRhLm1hcChpID0+IGlbY29sXSkpKVxuICB9XG59XG4iXX0=