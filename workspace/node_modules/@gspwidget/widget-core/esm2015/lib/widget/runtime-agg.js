/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { PlThemeColors } from "@gspwidget/util";
/** @type {?} */
const aggFirstDim2Field = (/**
 * @param {?} runtimeAgg
 * @param {?} allDims
 * @return {?}
 */
(runtimeAgg, allDims) => getFieldByName(allDims, runtimeAgg.dimensions[0]));
const ɵ0 = aggFirstDim2Field;
/** @type {?} */
const aggFirstInd2Field = (/**
 * @param {?} runtimeAgg
 * @param {?} allDims
 * @return {?}
 */
(runtimeAgg, allDims) => getFieldByName(allDims, runtimeAgg.indicators[0].dimName));
const ɵ1 = aggFirstInd2Field;
/** @type {?} */
const stackAggFields = (/**
 * @param {?=} pure
 * @return {?}
 */
(pure = false) => [{
        name: 'yFieldObjs',
        valueFactory: (/**
         * @param {?} __0
         * @param {?} allDims
         * @return {?}
         */
        ({ indicators }, allDims) => {
            return indicators.map((/**
             * @param {?} ind
             * @param {?} i
             * @return {?}
             */
            (ind, i) => ({
                valueField: getFieldByName(allDims, ind.dimName),
                color: pure
                    ? PlThemeColors.pure[i % indicators.length]
                    : PlThemeColors.gradient[i % indicators.length]
            })));
        })
    }, {
        name: 'categoryFieldName',
        valueFactory: aggFirstDim2Field
    }]);
const ɵ2 = stackAggFields;
/** @type {?} */
const barAggFields = [
    { name: 'categoryFieldName', valueFactory: aggFirstDim2Field },
    { name: 'valueFieldName', valueFactory: aggFirstInd2Field }
];
/** @type {?} */
export const chartAggFieldMap = {
    stack: stackAggFields(),
    area: stackAggFields(true),
    'bar-group': stackAggFields(),
    'widget-line': stackAggFields(true),
    bar: barAggFields,
    pie: barAggFields,
    pie2: barAggFields,
    'bar-horizontal': barAggFields,
    'simple-line': barAggFields,
    'bar-multiple': [{
            categoryFieldName: aggFirstDim2Field,
            valueFieldNameOne: aggFirstInd2Field,
            valueFieldNameTwo: (/**
             * @param {?} runtimeAgg
             * @param {?} allDims
             * @return {?}
             */
            (runtimeAgg, allDims) => getFieldByName(allDims, runtimeAgg.indicators[1].dimName)),
        }]
};
/**
 * @param {?} dims
 * @param {?} dimName
 * @return {?}
 */
function getFieldByName(dims, dimName) {
    const { name, label } = dims.find((/**
     * @param {?} dim
     * @return {?}
     */
    dim => dim.name === dimName));
    return { name, label };
}
/**
 * @param {?} widgetName
 * @return {?}
 */
export function isWidgetRuntimeAggActive(widgetName) {
    return Object
        .keys(chartAggFieldMap)
        .includes(widgetName);
}
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVudGltZS1hZ2cuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3Nwd2lkZ2V0L3dpZGdldC1jb3JlLyIsInNvdXJjZXMiOlsibGliL3dpZGdldC9ydW50aW1lLWFnZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFhLGFBQWEsRUFBb0IsTUFBTSxpQkFBaUIsQ0FBQTs7TUFHdEUsaUJBQWlCOzs7OztBQUFHLENBQUMsVUFBNEIsRUFBRSxPQUFvQixFQUFFLEVBQUUsQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTs7O01BQzdILGlCQUFpQjs7Ozs7QUFBRyxDQUFDLFVBQTRCLEVBQUUsT0FBb0IsRUFBRSxFQUFFLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFBOzs7TUFDckksY0FBYzs7OztBQUFHLENBQUMsSUFBSSxHQUFHLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN4QyxJQUFJLEVBQUUsWUFBWTtRQUNsQixZQUFZOzs7OztRQUFFLENBQUMsRUFBRSxVQUFVLEVBQW9CLEVBQUUsT0FBb0IsRUFBRSxFQUFFO1lBQ3ZFLE9BQU8sVUFBVSxDQUFDLEdBQUc7Ozs7O1lBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNqQyxVQUFVLEVBQUUsY0FBYyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTyxDQUFDO2dCQUNoRCxLQUFLLEVBQUUsSUFBSTtvQkFDVCxDQUFDLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztvQkFDM0MsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUM7YUFDbEQsQ0FBQyxFQUFDLENBQUE7UUFDTCxDQUFDLENBQUE7S0FDRixFQUFFO1FBQ0QsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixZQUFZLEVBQUUsaUJBQWlCO0tBQ2hDLENBQUMsQ0FBQTs7O01BQ0ksWUFBWSxHQUFHO0lBQ25CLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFLFlBQVksRUFBRSxpQkFBaUIsRUFBRTtJQUM5RCxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUU7Q0FDNUQ7O0FBQ0QsTUFBTSxPQUFPLGdCQUFnQixHQUFHO0lBQzlCLEtBQUssRUFBRSxjQUFjLEVBQUU7SUFDdkIsSUFBSSxFQUFFLGNBQWMsQ0FBQyxJQUFJLENBQUM7SUFDMUIsV0FBVyxFQUFFLGNBQWMsRUFBRTtJQUM3QixhQUFhLEVBQUUsY0FBYyxDQUFDLElBQUksQ0FBQztJQUNuQyxHQUFHLEVBQUUsWUFBWTtJQUNqQixHQUFHLEVBQUUsWUFBWTtJQUNqQixJQUFJLEVBQUUsWUFBWTtJQUNsQixnQkFBZ0IsRUFBRSxZQUFZO0lBQzlCLGFBQWEsRUFBRSxZQUFZO0lBQzNCLGNBQWMsRUFBRSxDQUFDO1lBQ2YsaUJBQWlCLEVBQUUsaUJBQWlCO1lBQ3BDLGlCQUFpQixFQUFFLGlCQUFpQjtZQUNwQyxpQkFBaUI7Ozs7O1lBQUUsQ0FBQyxVQUE0QixFQUFFLE9BQW9CLEVBQUUsRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQTtTQUNySSxDQUFDO0NBQ0g7Ozs7OztBQUNELFNBQVMsY0FBYyxDQUFFLElBQWlCLEVBQUUsT0FBZTtVQUNuRCxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSTs7OztJQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxPQUFPLEVBQUM7SUFDOUQsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQTtBQUN4QixDQUFDOzs7OztBQUNELE1BQU0sVUFBVSx3QkFBd0IsQ0FBRSxVQUFrQjtJQUMxRCxPQUFPLE1BQU07U0FDVixJQUFJLENBQUMsZ0JBQWdCLENBQUM7U0FDdEIsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0FBQ3pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaW1lbnNpb24sIFBsVGhlbWVDb2xvcnMsIFJ1bnRpbWVBZ2dPcHRpb24gfSBmcm9tIFwiQGdzcHdpZGdldC91dGlsXCJcbmltcG9ydCB7IERhdGFGaWVsZCB9IGZyb20gXCJAZ3Nwd2lkZ2V0L3dpZGdldC1kZXZraXRcIlxuXG5jb25zdCBhZ2dGaXJzdERpbTJGaWVsZCA9IChydW50aW1lQWdnOiBSdW50aW1lQWdnT3B0aW9uLCBhbGxEaW1zOiBEaW1lbnNpb25bXSkgPT4gZ2V0RmllbGRCeU5hbWUoYWxsRGltcywgcnVudGltZUFnZy5kaW1lbnNpb25zWzBdKVxuY29uc3QgYWdnRmlyc3RJbmQyRmllbGQgPSAocnVudGltZUFnZzogUnVudGltZUFnZ09wdGlvbiwgYWxsRGltczogRGltZW5zaW9uW10pID0+IGdldEZpZWxkQnlOYW1lKGFsbERpbXMsIHJ1bnRpbWVBZ2cuaW5kaWNhdG9yc1swXS5kaW1OYW1lKVxuY29uc3Qgc3RhY2tBZ2dGaWVsZHMgPSAocHVyZSA9IGZhbHNlKSA9PiBbe1xuICBuYW1lOiAneUZpZWxkT2JqcycsXG4gIHZhbHVlRmFjdG9yeTogKHsgaW5kaWNhdG9ycyB9OiBSdW50aW1lQWdnT3B0aW9uLCBhbGxEaW1zOiBEaW1lbnNpb25bXSkgPT4ge1xuICAgIHJldHVybiBpbmRpY2F0b3JzLm1hcCgoaW5kLCBpKSA9PiAoe1xuICAgICAgdmFsdWVGaWVsZDogZ2V0RmllbGRCeU5hbWUoYWxsRGltcywgaW5kLmRpbU5hbWUpLFxuICAgICAgY29sb3I6IHB1cmVcbiAgICAgICAgPyBQbFRoZW1lQ29sb3JzLnB1cmVbaSAlIGluZGljYXRvcnMubGVuZ3RoXVxuICAgICAgICA6IFBsVGhlbWVDb2xvcnMuZ3JhZGllbnRbaSAlIGluZGljYXRvcnMubGVuZ3RoXVxuICAgIH0pKVxuICB9XG59LCB7XG4gIG5hbWU6ICdjYXRlZ29yeUZpZWxkTmFtZScsXG4gIHZhbHVlRmFjdG9yeTogYWdnRmlyc3REaW0yRmllbGRcbn1dXG5jb25zdCBiYXJBZ2dGaWVsZHMgPSBbXG4gIHsgbmFtZTogJ2NhdGVnb3J5RmllbGROYW1lJywgdmFsdWVGYWN0b3J5OiBhZ2dGaXJzdERpbTJGaWVsZCB9LFxuICB7IG5hbWU6ICd2YWx1ZUZpZWxkTmFtZScsIHZhbHVlRmFjdG9yeTogYWdnRmlyc3RJbmQyRmllbGQgfVxuXVxuZXhwb3J0IGNvbnN0IGNoYXJ0QWdnRmllbGRNYXAgPSB7XG4gIHN0YWNrOiBzdGFja0FnZ0ZpZWxkcygpLFxuICBhcmVhOiBzdGFja0FnZ0ZpZWxkcyh0cnVlKSxcbiAgJ2Jhci1ncm91cCc6IHN0YWNrQWdnRmllbGRzKCksXG4gICd3aWRnZXQtbGluZSc6IHN0YWNrQWdnRmllbGRzKHRydWUpLFxuICBiYXI6IGJhckFnZ0ZpZWxkcyxcbiAgcGllOiBiYXJBZ2dGaWVsZHMsXG4gIHBpZTI6IGJhckFnZ0ZpZWxkcyxcbiAgJ2Jhci1ob3Jpem9udGFsJzogYmFyQWdnRmllbGRzLFxuICAnc2ltcGxlLWxpbmUnOiBiYXJBZ2dGaWVsZHMsXG4gICdiYXItbXVsdGlwbGUnOiBbe1xuICAgIGNhdGVnb3J5RmllbGROYW1lOiBhZ2dGaXJzdERpbTJGaWVsZCxcbiAgICB2YWx1ZUZpZWxkTmFtZU9uZTogYWdnRmlyc3RJbmQyRmllbGQsXG4gICAgdmFsdWVGaWVsZE5hbWVUd286IChydW50aW1lQWdnOiBSdW50aW1lQWdnT3B0aW9uLCBhbGxEaW1zOiBEaW1lbnNpb25bXSkgPT4gZ2V0RmllbGRCeU5hbWUoYWxsRGltcywgcnVudGltZUFnZy5pbmRpY2F0b3JzWzFdLmRpbU5hbWUpLFxuICB9XVxufVxuZnVuY3Rpb24gZ2V0RmllbGRCeU5hbWUgKGRpbXM6IERpbWVuc2lvbltdLCBkaW1OYW1lOiBzdHJpbmcpOiBEYXRhRmllbGQge1xuICBjb25zdCB7IG5hbWUsIGxhYmVsIH0gPSBkaW1zLmZpbmQoZGltID0+IGRpbS5uYW1lID09PSBkaW1OYW1lKVxuICByZXR1cm4geyBuYW1lLCBsYWJlbCB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNXaWRnZXRSdW50aW1lQWdnQWN0aXZlICh3aWRnZXROYW1lOiBzdHJpbmcpIHtcbiAgcmV0dXJuIE9iamVjdFxuICAgIC5rZXlzKGNoYXJ0QWdnRmllbGRNYXApXG4gICAgLmluY2x1ZGVzKHdpZGdldE5hbWUpXG59XG4iXX0=