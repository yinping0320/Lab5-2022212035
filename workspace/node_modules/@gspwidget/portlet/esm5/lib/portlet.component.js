/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient } from '@angular/common/http';
import { ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { DatasetRepo, EppPortlet, PortletRepo } from '@gspwidget/util';
import { WCStatus, WidgetComponent } from '@gspwidget/widget-core';
import { delay, map } from 'rxjs/operators';
var PortletComponent = /** @class */ (function () {
    function PortletComponent(portletRepo, dataResultsetRepo, http, cd) {
        var _this = this;
        this.portletRepo = portletRepo;
        this.dataResultsetRepo = dataResultsetRepo;
        this.http = http;
        this.cd = cd;
        /* optional */
        this.portletNamesUsingDemoData = [];
        this.init = new EventEmitter();
        /**
         * 获取到 portlet 元数据事件，将 portlet 传出
         */
        this.gotPortlet = new EventEmitter();
        this.getData = (/**
         * @param {?} getDataOpts
         * @return {?}
         */
        function (getDataOpts) {
            // TODO: 这部分都应该由外面处理，仅区分出一个 getCustomizedData()
            // 若有外部手工数据，就用它而不取真数据/演示数据
            if (_this.getCustomizedData) {
                //   // 加个 delay 是为了变成异步调用。否则从注册，到里面的 setData，会同步调用，可怕。
                //   return this.getCustomizedData().pipe(delay(0))
                // // 若名中含有某些字，则用演示数据
                return _this.getCustomizedData().pipe(delay(0));
            }
            else if (_this.portletNamesUsingDemoData
                .some((/**
             * @param {?} name
             * @return {?}
             */
            function (name) { return _this.innerPortlet.name.includes(name); }))) {
                return _this.getDemoData().pipe(delay(0));
            }
            else {
                // 默认真数据
                return _this.dataResultsetRepo.getResultByPortletId(_this.innerPortlet.id, getDataOpts.dpValues, convertQueryConditions(_this.queryConditions), getDataOpts.runtimeAgg);
            }
        });
        this.getDataWithDims = (/**
         * @return {?}
         */
        function () {
        });
    }
    /**
     * @return {?}
     */
    PortletComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    PortletComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        if (changes.portletId && changes.portletId.currentValue) {
            this.portletRepo.getPortletById(this.portletId).subscribe((/**
             * @param {?} p
             * @return {?}
             */
            function (p) {
                _this.innerPortlet = p;
                _this.cd.markForCheck();
                _this.gotPortlet.emit(p);
            }), (/**
             * @param {?} err
             * @return {?}
             */
            function (err) {
                // console.log(err)
                _this.widget.status = WCStatus.WidgetLoadError;
            }));
        }
        else if (changes.portlet && changes.portlet.currentValue) {
            this.innerPortlet = changes.portlet.currentValue;
        }
        else if (changes.queryConditions && changes.queryConditions.currentValue) {
            // 触发元部件加载数据
            this.widget.loadNSetData();
        }
    };
    /**
     * @return {?}
     */
    PortletComponent.prototype.handleWidgetInit = /**
     * @return {?}
     */
    function () {
        this.init.emit();
    };
    /** 获取演示数据 */
    // TODO: 等验证完成没问题后，挪到 util service 之类里面去，config service 啥的都可以在 util，部件系统一定生存在 iGIX 里。
    /**
     * 获取演示数据
     * @return {?}
     */
    // TODO: 等验证完成没问题后，挪到 util service 之类里面去，config service 啥的都可以在 util，部件系统一定生存在 iGIX 里。
    PortletComponent.prototype.getDemoData = /**
     * 获取演示数据
     * @return {?}
     */
    // TODO: 等验证完成没问题后，挪到 util service 之类里面去，config service 啥的都可以在 util，部件系统一定生存在 iGIX 里。
    function () {
        /** @type {?} */
        var lang = (/** @type {?} */ (localStorage.getItem('languageCode'))) || 'zh-CHS';
        return this.getHomeConfig().pipe(map((/**
         * @param {?} config
         * @return {?}
         */
        function (config) { return config.data[lang]; })));
    };
    /**
     * @return {?}
     */
    PortletComponent.prototype.getHomeConfig = /**
     * @return {?}
     */
    function () {
        return this.http.get('/platform/runtime/sys/web/home/assets/home.config.json');
    };
    PortletComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-portlet',
                    template: "\n    <!-- {{innerPortlet | json}} -->\n    <lib-widget\n      #widget\n      [portlet]=\"innerPortlet\"\n      [basicWidgetInfo]=\"innerPortlet?.widget\"\n      [propValues]=\"innerPortlet?.propValues\"\n      [instanceId]=\"instanceId\"\n      [getData]=\"getData\"\n      [linkMap]=\"linkMap\"\n      (widgetInit)=\"handleWidgetInit()\"\n    ></lib-widget>\n  "
                }] }
    ];
    /** @nocollapse */
    PortletComponent.ctorParameters = function () { return [
        { type: PortletRepo },
        { type: DatasetRepo },
        { type: HttpClient },
        { type: ChangeDetectorRef }
    ]; };
    PortletComponent.propDecorators = {
        portletId: [{ type: Input }],
        portlet: [{ type: Input }],
        queryConditions: [{ type: Input }],
        portletNamesUsingDemoData: [{ type: Input }],
        getCustomizedData: [{ type: Input }],
        instanceId: [{ type: Input }],
        linkMap: [{ type: Input }],
        init: [{ type: Output }],
        gotPortlet: [{ type: Output }],
        widget: [{ type: ViewChild, args: ['widget',] }]
    };
    return PortletComponent;
}());
export { PortletComponent };
if (false) {
    /**
     * 下面两者任意一个必选
     * 哪个变化后有值，就用哪个
     * @type {?}
     */
    PortletComponent.prototype.portletId;
    /** @type {?} */
    PortletComponent.prototype.portlet;
    /**
     * 筛选条件
     * @type {?}
     */
    PortletComponent.prototype.queryConditions;
    /** @type {?} */
    PortletComponent.prototype.portletNamesUsingDemoData;
    /** @type {?} */
    PortletComponent.prototype.getCustomizedData;
    /** @type {?} */
    PortletComponent.prototype.instanceId;
    /** @type {?} */
    PortletComponent.prototype.linkMap;
    /** @type {?} */
    PortletComponent.prototype.init;
    /**
     * 获取到 portlet 元数据事件，将 portlet 传出
     * @type {?}
     */
    PortletComponent.prototype.gotPortlet;
    /** @type {?} */
    PortletComponent.prototype.widget;
    /**
     * 通过外部输入计算得到的真正渲染的 portlet
     * @type {?}
     */
    PortletComponent.prototype.innerPortlet;
    /** @type {?} */
    PortletComponent.prototype.getData;
    /** @type {?} */
    PortletComponent.prototype.getDataWithDims;
    /**
     * @type {?}
     * @private
     */
    PortletComponent.prototype.portletRepo;
    /**
     * @type {?}
     * @private
     */
    PortletComponent.prototype.dataResultsetRepo;
    /**
     * @type {?}
     * @private
     */
    PortletComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    PortletComponent.prototype.cd;
}
/**
 * @param {?} conditions
 * @return {?}
 */
function convertQueryConditions(conditions) {
    if (!conditions)
        return '""';
    /** @type {?} */
    var entityData = { id: 'undefined_null' };
    conditions.forEach((/**
     * @param {?} c
     * @return {?}
     */
    function (c) {
        var fieldCode = c.fieldCode;
        /** @type {?} */
        var value = c.value;
        /** @type {?} */
        var tempValue;
        if (value && (value.dateValue || value.value || value.numValue || value.yearValue
            || value.startTime || value.endTime || value.startValue || value.endValue)) {
            switch (c.control.getControlType()) {
                case 0: // Text
                    tempValue = value.value;
                    break;
                case 1: // SingleDate
                    tempValue = value.dateValue;
                    break;
                case 2: // SmartHelp
                    tempValue = value.value[value.valueField];
                    break;
                case 3: // DropDownList
                    tempValue = value.value.value;
                    break;
                case 4: // DateRange
                    tempValue = {
                        beginValue: value.startTime ? value.startTime : 0,
                        endValue: value.endTime ? value.endTime : 0
                    }; // tempData.value;
                    break;
                case 5: // NumberRange
                    tempValue = {
                        beginValue: value.startValue ? value.startValue : 0,
                        endValue: value.endValue ? value.endValue : 0
                    }; // tempData.value;
                    break;
                case 6: // SingleNumber
                    tempValue = value.numValue;
                    break;
                case 7: // SingleYear
                    tempValue = value.yearValue;
                    break;
                case 8: // BoolCheck
                    tempValue = value.value && value.value.length ? value.value[0] : value.value;
                    break;
                case 9: // DateTimeRange
                    tempValue = {
                        beginValue: value.startValue ? value.startValue : 0,
                        endValue: value.endValue ? value.endValue : 0
                    }; // tempData.value;
                    break;
                default:
                    break;
            }
            // 根据 field code 组合 entity data
            if (fieldCode && fieldCode.includes(';')) {
                /** @type {?} */
                var fields1 = fieldCode.split(';')[0].split('.');
                /** @type {?} */
                var fields2 = fieldCode.split(';')[1].split('.');
                setEntityData(fields1, entityData, tempValue['beginValue']);
                setEntityData(fields2, entityData, tempValue['endValue']);
            }
            else {
                /** @type {?} */
                var fields = fieldCode.split('.');
                setEntityData(fields, entityData, tempValue);
            }
        }
    }));
    return entityData;
}
/**
 * @param {?} fields
 * @param {?} entityData
 * @param {?} tempData
 * @return {?}
 */
function setEntityData(fields, entityData, tempData) {
    if (fields.length && fields.length > 1) {
        for (var i = 0; i < fields.length; i++) {
            if (i === 0) {
                entityData = prepareEntityData(fields[i], entityData);
            }
            else {
                entityData = prepareEntityData(fields[i], entityData[fields[i - 1]]);
            }
            if ((i + 1) === fields.length) {
                entityData[fields[i]] = tempData;
            }
        }
    }
    else {
        entityData[fields[0]] = tempData;
    }
}
/**
 * @param {?} key
 * @param {?} entityData
 * @return {?}
 */
function prepareEntityData(key, entityData) {
    if (!entityData.hasOwnProperty(key))
        entityData[key] = {};
}
var QueryCondition = /** @class */ (function () {
    function QueryCondition() {
    }
    return QueryCondition;
}());
export { QueryCondition };
if (false) {
    /** @type {?} */
    QueryCondition.prototype.id;
    /** @type {?} */
    QueryCondition.prototype.leftBrackets;
    /** @type {?} */
    QueryCondition.prototype.fieldCode;
    /** @type {?} */
    QueryCondition.prototype.fieldName;
    /** @type {?} */
    QueryCondition.prototype.name;
    /** @type {?} */
    QueryCondition.prototype.compareType;
    /** @type {?} */
    QueryCondition.prototype.valueType;
    /**
     * 值
     * 该属性为IValue接口，根据不同的控件类型有不同的实现类：具体如下：
     * 1. 文本类型：TextValue
     * 2. 下拉列表：DropDownListValue
     * 3. 日期区间：DateRangeValue
     * 4. 数字区间：NumberRangeValue
     * 5. 帮助类型：SmartHelpValue
     * @type {?}
     */
    QueryCondition.prototype.value;
    /** @type {?} */
    QueryCondition.prototype.rightBrackets;
    /** @type {?} */
    QueryCondition.prototype.relationType;
    /**
     * 控件类型，目前包括文本类型，下拉列表，日期区间，数字区间，帮助类型
     * 控件类型为IControl接口，根据不同的控件类型对应不同的实现类，具体如下：
     * 1. 文本类型：TextControl
     * 2. 下拉列表：DropDownListControl
     * 3. 日期区间：DateRangeControl
     * 4. 数字区间：NumberRangeControl
     * 5. 帮助类型：SmartHelpContol
     * @type {?}
     */
    QueryCondition.prototype.control;
}
/** @enum {number} */
var CompareType = {
    Equal: 0,
    GreaterThan: 2,
    GreaterThanOrEqual: 3,
    LessThan: 4,
    LessThanOrEqual: 5,
    BetWeen: 6,
};
export { CompareType };
CompareType[CompareType.Equal] = 'Equal';
CompareType[CompareType.GreaterThan] = 'GreaterThan';
CompareType[CompareType.GreaterThanOrEqual] = 'GreaterThanOrEqual';
CompareType[CompareType.LessThan] = 'LessThan';
CompareType[CompareType.LessThanOrEqual] = 'LessThanOrEqual';
CompareType[CompareType.BetWeen] = 'BetWeen';
/** @enum {number} */
var ValueType = {
    Value: 0,
    SmartHelp: 1,
    Enum: 2,
    Express: 3,
};
export { ValueType };
ValueType[ValueType.Value] = 'Value';
ValueType[ValueType.SmartHelp] = 'SmartHelp';
ValueType[ValueType.Enum] = 'Enum';
ValueType[ValueType.Express] = 'Express';
/**
 * @record
 */
export function IValue() { }
if (false) {
    /**
     * @return {?}
     */
    IValue.prototype.getControlType = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.getOriginalValue = function () { };
    /**
     * @param {?} value
     * @return {?}
     */
    IValue.prototype.setOriginalValue = function (value) { };
    /**
     * @return {?}
     */
    IValue.prototype.clearValue = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.isEmpty = function () { };
}
/** @enum {number} */
var RelationType = {
    And: 0,
    Or: 1,
};
export { RelationType };
RelationType[RelationType.And] = 'And';
RelationType[RelationType.Or] = 'Or';
/**
 * @record
 */
export function IControl() { }
if (false) {
    /**
     * 是否是展示在扩展区域内的
     * @type {?}
     */
    IControl.prototype.isExtend;
    /** @type {?} */
    IControl.prototype.required;
    /**
     * 日期需要增加类型比较
     * @type {?|undefined}
     */
    IControl.prototype.compareType;
    /**
     * 获取控件类型
     * @return {?}
     */
    IControl.prototype.getControlType = function () { };
}
/** @enum {number} */
var ControlType = {
    Text: 0,
    // DateTime=1,
    Help: 1,
    DropDown: 2,
    DateRange: 3,
    NumberRange: 4,
    Search: 5,
    Date: 6,
    CheckboxGroup: 7,
    DateRangeTime: 8,
};
export { ControlType };
ControlType[ControlType.Text] = 'Text';
ControlType[ControlType.Help] = 'Help';
ControlType[ControlType.DropDown] = 'DropDown';
ControlType[ControlType.DateRange] = 'DateRange';
ControlType[ControlType.NumberRange] = 'NumberRange';
ControlType[ControlType.Search] = 'Search';
ControlType[ControlType.Date] = 'Date';
ControlType[ControlType.CheckboxGroup] = 'CheckboxGroup';
ControlType[ControlType.DateRangeTime] = 'DateRangeTime';
//# sourceMappingURL=data:application/json;base64,