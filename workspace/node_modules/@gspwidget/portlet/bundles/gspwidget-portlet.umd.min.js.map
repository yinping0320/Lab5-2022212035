{"version":3,"sources":["ng://@gspwidget/portlet/lib/portlet.component.ts","ng://@gspwidget/portlet/lib/portlet.module.ts"],"names":["PortletComponent","prototype","ngOnInit","ngOnChanges","changes","_this","this","portletId","currentValue","portletRepo","getPortletById","subscribe","p","innerPortlet","cd","markForCheck","gotPortlet","emit","err","widget","status","WCStatus","WidgetLoadError","portlet","queryConditions","loadNSetData","handleWidgetInit","init","getDemoData","lang","localStorage","getItem","getHomeConfig","pipe","map","config","data","http","get","Component","args","selector","template","PortletRepo","DatasetRepo","HttpClient","ChangeDetectorRef","Input","Output","ViewChild","dataResultsetRepo","portletNamesUsingDemoData","EventEmitter","getData","getDataOpts","getCustomizedData","delay","some","name","includes","getResultByPortletId","id","dpValues","convertQueryConditions","conditions","entityData","forEach","c","tempValue","fieldCode","value","dateValue","numValue","yearValue","startTime","endTime","startValue","endValue","control","getControlType","valueField","beginValue","length","fields1","split","fields2","setEntityData","runtimeAgg","getDataWithDims","fields","tempData","i","prepareEntityData","key","hasOwnProperty","QueryCondition","Equal","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","BetWeen","Value","SmartHelp","Enum","Express","And","Or","Text","Help","DropDown","DateRange","NumberRange","Search","Date","CheckboxGroup","DateRangeTime","PortletModule","NgModule","declarations","imports","CommonModule","WidgetCoreModule","exports"],"mappings":"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","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { DatasetRepo, EppPortlet, LinkMap, PortletRepo } from '@gspwidget/util';\nimport { GetDataOptions, WCStatus, WidgetComponent } from '@gspwidget/widget-core';\nimport { Observable } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'lib-portlet',\n  template: `\n    <!-- {{innerPortlet | json}} -->\n    <lib-widget\n      #widget\n      [portlet]=\"innerPortlet\"\n      [basicWidgetInfo]=\"innerPortlet?.widget\"\n      [propValues]=\"innerPortlet?.propValues\"\n      [instanceId]=\"instanceId\"\n      [getData]=\"getData\"\n      [linkMap]=\"linkMap\"\n      (widgetInit)=\"handleWidgetInit()\"\n    ></lib-widget>\n  `,\n  styles: []\n})\nexport class PortletComponent implements OnInit, OnChanges {\n  /**\n   * ä¸é¢ä¸¤èä»»æä¸ä¸ªå¿é\n   * åªä¸ªåååæå¼ï¼å°±ç¨åªä¸ª\n   */\n  @Input() portletId: string\n  @Input() portlet: EppPortlet\n  /** ç­éæ¡ä»¶ */\n  @Input() queryConditions: QueryCondition[]\n  /* optional */\n  @Input() portletNamesUsingDemoData: string[] = []\n  /* optional */\n  @Input() getCustomizedData: () => Observable<any>\n  /* optional */\n  @Input() instanceId: string\n  /* optional */\n  @Input() linkMap: LinkMap\n\n  @Output() init = new EventEmitter()\n  /** è·åå° portlet åæ°æ®äºä»¶ï¼å° portlet ä¼ åº */\n  @Output() gotPortlet = new EventEmitter<EppPortlet>()\n\n  @ViewChild('widget') widget: WidgetComponent\n\n  /** éè¿å¤é¨è¾å¥è®¡ç®å¾å°ççæ­£æ¸²æç portlet */\n  public innerPortlet: EppPortlet\n\n  constructor (\n    private portletRepo: PortletRepo,\n    private dataResultsetRepo: DatasetRepo,\n    private http: HttpClient,\n    private cd: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit () {\n  }\n\n  ngOnChanges (changes: SimpleChanges): void {\n    if (changes.portletId && changes.portletId.currentValue) {\n      this.portletRepo.getPortletById(this.portletId).subscribe(p => {\n        this.innerPortlet = p\n        this.cd.markForCheck()\n        this.gotPortlet.emit(p)\n      }, err => {\n        // console.log(err)\n        this.widget.status = WCStatus.WidgetLoadError\n      })\n    } else if (changes.portlet && changes.portlet.currentValue) {\n      this.innerPortlet = changes.portlet.currentValue\n    } else if (changes.queryConditions && changes.queryConditions.currentValue) {\n      // è§¦ååé¨ä»¶å è½½æ°æ®\n      this.widget.loadNSetData()\n    }\n  }\n  getData = (getDataOpts: GetDataOptions) => {\n    // TODO: è¿é¨åé½åºè¯¥ç±å¤é¢å¤çï¼ä»åºååºä¸ä¸ª getCustomizedData()\n    // è¥æå¤é¨æå·¥æ°æ®ï¼å°±ç¨å®èä¸åçæ°æ®/æ¼ç¤ºæ°æ®\n    if (this.getCustomizedData) {\n    //   // å ä¸ª delay æ¯ä¸ºäºåæå¼æ­¥è°ç¨ãå¦åä»æ³¨åï¼å°éé¢ç setDataï¼ä¼åæ­¥è°ç¨ï¼å¯æã\n    //   return this.getCustomizedData().pipe(delay(0))\n    // // è¥åä¸­å«ææäºå­ï¼åç¨æ¼ç¤ºæ°æ®\n      return this.getCustomizedData().pipe(delay(0))\n    } else if (this.portletNamesUsingDemoData\n      .some(name => this.innerPortlet.name.includes(name))\n      ) {\n      return this.getDemoData().pipe(delay(0))\n    } else {\n      // é»è®¤çæ°æ®\n      return this.dataResultsetRepo.getResultByPortletId(\n        this.innerPortlet.id,\n        getDataOpts.dpValues,\n        convertQueryConditions(this.queryConditions),\n        getDataOpts.runtimeAgg,\n      )\n    }\n  }\n  getDataWithDims = () => {\n\n  }\n\n  handleWidgetInit () {\n    this.init.emit()\n  }\n\n  /** è·åæ¼ç¤ºæ°æ® */\n  // TODO: ç­éªè¯å®ææ²¡é®é¢åï¼æªå° util service ä¹ç±»éé¢å»ï¼config service å¥çé½å¯ä»¥å¨ utilï¼é¨ä»¶ç³»ç»ä¸å®çå­å¨ iGIX éã\n  getDemoData () {\n    const lang = localStorage.getItem('languageCode') as 'en' | 'zh-CHS' || 'zh-CHS'\n    return this.getHomeConfig().pipe(map(config => config.data[lang]))\n  }\n  getHomeConfig (): Observable<any> {\n    return this.http.get('/platform/runtime/sys/web/home/assets/home.config.json')\n  }\n\n}\n\nfunction convertQueryConditions (conditions: QueryCondition[]) {\n  if (!conditions) return '\"\"'\n  const entityData: any = { id: 'undefined_null' };\n  conditions.forEach(c => {\n    const { fieldCode } = c;\n    const value: any = c.value;\n    let tempValue\n    if (value && (value.dateValue || value.value || value.numValue || value.yearValue\n        || value.startTime || value.endTime || value.startValue || value.endValue)) {\n      switch (c.control.getControlType()) {\n        case 0: // Text\n          tempValue = value.value;\n          break;\n        case 1: // SingleDate\n          tempValue = value.dateValue;\n          break;\n        case 2: // SmartHelp\n          tempValue = value.value[value.valueField];\n          break;\n        case 3: // DropDownList\n          tempValue = value.value.value;\n          break;\n        case 4: // DateRange\n          tempValue = {\n            beginValue: value.startTime ? value.startTime : 0,\n            endValue: value.endTime ? value.endTime : 0\n          }; // tempData.value;\n          break;\n        case 5: // NumberRange\n          tempValue = {\n            beginValue: value.startValue ? value.startValue : 0,\n            endValue: value.endValue ? value.endValue : 0\n          }; // tempData.value;\n          break;\n        case 6: // SingleNumber\n          tempValue = value.numValue;\n          break;\n        case 7: // SingleYear\n          tempValue = value.yearValue;\n          break;\n        case 8: // BoolCheck\n          tempValue = value.value && value.value.length ? value.value[0] : value.value;\n          break;\n        case 9: // DateTimeRange\n          tempValue = {\n            beginValue: value.startValue ? value.startValue : 0,\n            endValue: value.endValue ? value.endValue : 0\n          }; // tempData.value;\n          break;\n        default:\n          break;\n      }\n      // æ ¹æ® field code ç»å entity data\n      if (fieldCode && fieldCode.includes(';')) {\n        const fields1 = fieldCode.split(';')[0].split('.');\n        const fields2 = fieldCode.split(';')[1].split('.');\n        setEntityData(fields1, entityData, tempValue['beginValue']);\n        setEntityData(fields2, entityData, tempValue['endValue']);\n      } else {\n        const fields = fieldCode.split('.');\n        setEntityData(fields, entityData, tempValue);\n      }\n    }\n  })\n  return entityData\n}\n\nfunction setEntityData (fields: any[], entityData: any, tempData: any) {\n  if (fields.length && fields.length > 1) {\n    for (let i = 0; i < fields.length; i++) {\n      if (i === 0) {\n        entityData = prepareEntityData(fields[i], entityData);\n      } else {\n        entityData = prepareEntityData(fields[i], entityData[fields[i - 1]]);\n      }\n      if ((i + 1) === fields.length) {\n        entityData[fields[i]] = tempData;\n      }\n    }\n  } else {\n    entityData[fields[0]] = tempData;\n  }\n}\nfunction prepareEntityData (key: string, entityData: any): any {\n  if (!entityData.hasOwnProperty(key)) entityData[key] = {}\n}\n\n\nexport class QueryCondition {\n  id: string;\n  leftBrackets: string;\n  fieldCode: string;\n  fieldName: string;\n  name: string;\n  compareType: CompareType;\n  valueType: ValueType;\n  /**\n   * å¼\n   * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\n   * 1. ææ¬ç±»åï¼TextValue\n   * 2. ä¸æåè¡¨ï¼DropDownListValue\n   * 3. æ¥æåºé´ï¼DateRangeValue\n   * 4. æ°å­åºé´ï¼NumberRangeValue\n   * 5. å¸®å©ç±»åï¼SmartHelpValue\n   */\n  value: IValue;\n  rightBrackets: string;\n  relationType: RelationType;\n  /**\n   * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\n   * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\n   * 1. ææ¬ç±»åï¼TextControl\n   * 2. ä¸æåè¡¨ï¼DropDownListControl\n   * 3. æ¥æåºé´ï¼DateRangeControl\n   * 4. æ°å­åºé´ï¼NumberRangeControl\n   * 5. å¸®å©ç±»åï¼SmartHelpContol\n   */\n  control: IControl;\n}\nexport enum CompareType {\n    Equal = 0,\n    GreaterThan= 2,\n    GreaterThanOrEqual= 3,\n    LessThan = 4,\n    LessThanOrEqual = 5,\n    BetWeen= 6\n}\nexport enum ValueType {\n  Value= 0,\n  SmartHelp= 1,\n  Enum= 2,\n  Express= 3\n}\n\nexport interface IValue {\n  getControlType (): ControlType;\n  getOriginalValue (): any;\n  setOriginalValue (value: any): void;\n  clearValue (): void;\n  isEmpty (): boolean;\n}\n\nexport enum RelationType {\n  And= 0,\n  Or= 1\n}\nexport interface IControl {\n  /**\n   * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\n   */\n  isExtend: boolean;\n  required: boolean;\n  /** æ¥æéè¦å¢å ç±»åæ¯è¾ */\n  compareType?: CompareType;\n  /**\n   * è·åæ§ä»¶ç±»å\n   */\n  getControlType (): ControlType;\n}\nexport enum ControlType {\n  Text= 0,\n  // DateTime=1,\n  Help= 1,\n  DropDown= 2,\n  DateRange= 3,\n  NumberRange= 4,\n  Search= 5,\n  Date= 6,\n  CheckboxGroup= 7,\n  DateRangeTime= 8\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { WidgetCoreModule } from '@gspwidget/widget-core';\nimport { PortletComponent } from './portlet.component';\n\n@NgModule({\n  declarations: [PortletComponent],\n  imports: [\n    CommonModule,\n    WidgetCoreModule\n  ],\n  exports: [PortletComponent]\n})\nexport class PortletModule { }\n"]}