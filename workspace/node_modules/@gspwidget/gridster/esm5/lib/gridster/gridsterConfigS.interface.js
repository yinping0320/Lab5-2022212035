/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function GridsterConfigS() { }
if (false) {
    /** @type {?} */
    GridsterConfigS.prototype.gridType;
    /** @type {?} */
    GridsterConfigS.prototype.fixedColWidth;
    /** @type {?} */
    GridsterConfigS.prototype.fixedRowHeight;
    /** @type {?} */
    GridsterConfigS.prototype.keepFixedHeightInMobile;
    /** @type {?} */
    GridsterConfigS.prototype.keepFixedWidthInMobile;
    /** @type {?} */
    GridsterConfigS.prototype.setGridSize;
    /** @type {?} */
    GridsterConfigS.prototype.compactType;
    /** @type {?} */
    GridsterConfigS.prototype.mobileBreakpoint;
    /** @type {?} */
    GridsterConfigS.prototype.minCols;
    /** @type {?} */
    GridsterConfigS.prototype.maxCols;
    /** @type {?} */
    GridsterConfigS.prototype.minRows;
    /** @type {?} */
    GridsterConfigS.prototype.maxRows;
    /** @type {?} */
    GridsterConfigS.prototype.defaultItemCols;
    /** @type {?} */
    GridsterConfigS.prototype.defaultItemRows;
    /** @type {?} */
    GridsterConfigS.prototype.maxItemCols;
    /** @type {?} */
    GridsterConfigS.prototype.maxItemRows;
    /** @type {?} */
    GridsterConfigS.prototype.minItemCols;
    /** @type {?} */
    GridsterConfigS.prototype.minItemRows;
    /** @type {?} */
    GridsterConfigS.prototype.minItemArea;
    /** @type {?} */
    GridsterConfigS.prototype.maxItemArea;
    /** @type {?} */
    GridsterConfigS.prototype.margin;
    /** @type {?} */
    GridsterConfigS.prototype.outerMargin;
    /** @type {?} */
    GridsterConfigS.prototype.outerMarginTop;
    /** @type {?} */
    GridsterConfigS.prototype.outerMarginRight;
    /** @type {?} */
    GridsterConfigS.prototype.outerMarginBottom;
    /** @type {?} */
    GridsterConfigS.prototype.outerMarginLeft;
    /** @type {?} */
    GridsterConfigS.prototype.useTransformPositioning;
    /** @type {?} */
    GridsterConfigS.prototype.scrollSensitivity;
    /** @type {?} */
    GridsterConfigS.prototype.scrollSpeed;
    /** @type {?} */
    GridsterConfigS.prototype.draggable;
    /** @type {?} */
    GridsterConfigS.prototype.resizable;
    /** @type {?} */
    GridsterConfigS.prototype.swap;
    /** @type {?} */
    GridsterConfigS.prototype.pushItems;
    /** @type {?} */
    GridsterConfigS.prototype.disablePushOnDrag;
    /** @type {?} */
    GridsterConfigS.prototype.disablePushOnResize;
    /** @type {?} */
    GridsterConfigS.prototype.disableAutoPositionOnConflict;
    /** @type {?} */
    GridsterConfigS.prototype.pushDirections;
    /** @type {?} */
    GridsterConfigS.prototype.pushResizeItems;
    /** @type {?} */
    GridsterConfigS.prototype.displayGrid;
    /** @type {?} */
    GridsterConfigS.prototype.disableWindowResize;
    /** @type {?} */
    GridsterConfigS.prototype.disableWarnings;
    /** @type {?} */
    GridsterConfigS.prototype.scrollToNewItems;
    /** @type {?} */
    GridsterConfigS.prototype.enableEmptyCellClick;
    /** @type {?} */
    GridsterConfigS.prototype.enableEmptyCellContextMenu;
    /** @type {?} */
    GridsterConfigS.prototype.enableEmptyCellDrop;
    /** @type {?} */
    GridsterConfigS.prototype.enableEmptyCellDrag;
    /** @type {?} */
    GridsterConfigS.prototype.emptyCellDragMaxCols;
    /** @type {?} */
    GridsterConfigS.prototype.emptyCellDragMaxRows;
    /** @type {?} */
    GridsterConfigS.prototype.ignoreMarginInRow;
    /** @type {?} */
    GridsterConfigS.prototype.api;
    /**
     * add by TX
     * @type {?|undefined}
     */
    GridsterConfigS.prototype.gridHeightReal;
    /* Skipping unhandled member: [propName: string]: any;*/
}
/**
 * @record
 */
export function DragBase() { }
if (false) {
    /** @type {?} */
    DragBase.prototype.enabled;
    /** @type {?} */
    DragBase.prototype.delayStart;
    /* Skipping unhandled member: [propName: string]: any;*/
}
/**
 * @record
 */
export function Draggable() { }
if (false) {
    /** @type {?} */
    Draggable.prototype.ignoreContentClass;
    /** @type {?} */
    Draggable.prototype.ignoreContent;
    /** @type {?} */
    Draggable.prototype.dragHandleClass;
    /** @type {?} */
    Draggable.prototype.dropOverItems;
    /** @type {?} */
    Draggable.prototype.dropOverItemsCallback;
}
/**
 * @record
 */
export function Resizable() { }
if (false) {
    /** @type {?} */
    Resizable.prototype.handles;
}
/**
 * @record
 */
export function PushDirections() { }
if (false) {
    /** @type {?} */
    PushDirections.prototype.north;
    /** @type {?} */
    PushDirections.prototype.east;
    /** @type {?} */
    PushDirections.prototype.south;
    /** @type {?} */
    PushDirections.prototype.west;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZHN0ZXJDb25maWdTLmludGVyZmFjZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3B3aWRnZXQvZ3JpZHN0ZXIvIiwic291cmNlcyI6WyJsaWIvZ3JpZHN0ZXIvZ3JpZHN0ZXJDb25maWdTLmludGVyZmFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEscUNBOERDOzs7SUE3REMsbUNBQW9COztJQUNwQix3Q0FBc0I7O0lBQ3RCLHlDQUF1Qjs7SUFDdkIsa0RBQWlDOztJQUNqQyxpREFBZ0M7O0lBQ2hDLHNDQUFxQjs7SUFDckIsc0NBQTBCOztJQUMxQiwyQ0FBeUI7O0lBQ3pCLGtDQUFnQjs7SUFDaEIsa0NBQWdCOztJQUNoQixrQ0FBZ0I7O0lBQ2hCLGtDQUFnQjs7SUFDaEIsMENBQXdCOztJQUN4QiwwQ0FBd0I7O0lBQ3hCLHNDQUFvQjs7SUFDcEIsc0NBQW9COztJQUNwQixzQ0FBb0I7O0lBQ3BCLHNDQUFvQjs7SUFDcEIsc0NBQW9COztJQUNwQixzQ0FBb0I7O0lBQ3BCLGlDQUFlOztJQUNmLHNDQUFxQjs7SUFDckIseUNBQThCOztJQUM5QiwyQ0FBZ0M7O0lBQ2hDLDRDQUFpQzs7SUFDakMsMENBQStCOztJQUMvQixrREFBaUM7O0lBQ2pDLDRDQUEwQjs7SUFDMUIsc0NBQW9COztJQUNwQixvQ0FBcUI7O0lBQ3JCLG9DQUFxQjs7SUFDckIsK0JBQWM7O0lBQ2Qsb0NBQW1COztJQUNuQiw0Q0FBMkI7O0lBQzNCLDhDQUE2Qjs7SUFDN0Isd0RBQXVDOztJQUN2Qyx5Q0FBK0I7O0lBQy9CLDBDQUF5Qjs7SUFDekIsc0NBQTBCOztJQUMxQiw4Q0FBNkI7O0lBQzdCLDBDQUF5Qjs7SUFDekIsMkNBQTBCOztJQUMxQiwrQ0FBOEI7O0lBQzlCLHFEQUFvQzs7SUFDcEMsOENBQTZCOztJQUM3Qiw4Q0FBNkI7O0lBQzdCLCtDQUE2Qjs7SUFDN0IsK0NBQTZCOztJQUM3Qiw0Q0FBMkI7O0lBQzNCLDhCQU1FOzs7OztJQUdGLHlDQUF5Qjs7Ozs7O0FBSzNCLDhCQUtDOzs7SUFKQywyQkFBaUI7O0lBQ2pCLDhCQUFtQjs7Ozs7O0FBS3JCLCtCQU1DOzs7SUFMQyx1Q0FBMkI7O0lBQzNCLGtDQUF1Qjs7SUFDdkIsb0NBQXdCOztJQUN4QixrQ0FBdUI7O0lBQ3ZCLDBDQUErRzs7Ozs7QUFHakgsK0JBV0M7OztJQVZDLDRCQVNFOzs7OztBQUdKLG9DQUtDOzs7SUFKQywrQkFBZTs7SUFDZiw4QkFBYzs7SUFDZCwrQkFBZTs7SUFDZiw4QkFBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y29tcGFjdFR5cGVzLCBkaXNwbGF5R3JpZHMsIGdyaWRUeXBlc30gZnJvbSAnLi9ncmlkc3RlckNvbmZpZy5pbnRlcmZhY2UnO1xuaW1wb3J0IHtHcmlkc3Rlckl0ZW19IGZyb20gJy4vZ3JpZHN0ZXJJdGVtLmludGVyZmFjZSc7XG5pbXBvcnQge0dyaWRzdGVyQ29tcG9uZW50SW50ZXJmYWNlfSBmcm9tICcuL2dyaWRzdGVyLmludGVyZmFjZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZHN0ZXJDb25maWdTIHtcbiAgZ3JpZFR5cGU6IGdyaWRUeXBlcztcbiAgZml4ZWRDb2xXaWR0aDogbnVtYmVyO1xuICBmaXhlZFJvd0hlaWdodDogbnVtYmVyO1xuICBrZWVwRml4ZWRIZWlnaHRJbk1vYmlsZTogYm9vbGVhbjtcbiAga2VlcEZpeGVkV2lkdGhJbk1vYmlsZTogYm9vbGVhbjtcbiAgc2V0R3JpZFNpemU6IGJvb2xlYW47XG4gIGNvbXBhY3RUeXBlOiBjb21wYWN0VHlwZXM7XG4gIG1vYmlsZUJyZWFrcG9pbnQ6IG51bWJlcjtcbiAgbWluQ29sczogbnVtYmVyO1xuICBtYXhDb2xzOiBudW1iZXI7XG4gIG1pblJvd3M6IG51bWJlcjtcbiAgbWF4Um93czogbnVtYmVyO1xuICBkZWZhdWx0SXRlbUNvbHM6IG51bWJlcjtcbiAgZGVmYXVsdEl0ZW1Sb3dzOiBudW1iZXI7XG4gIG1heEl0ZW1Db2xzOiBudW1iZXI7XG4gIG1heEl0ZW1Sb3dzOiBudW1iZXI7XG4gIG1pbkl0ZW1Db2xzOiBudW1iZXI7XG4gIG1pbkl0ZW1Sb3dzOiBudW1iZXI7XG4gIG1pbkl0ZW1BcmVhOiBudW1iZXI7XG4gIG1heEl0ZW1BcmVhOiBudW1iZXI7XG4gIG1hcmdpbjogbnVtYmVyO1xuICBvdXRlck1hcmdpbjogYm9vbGVhbjtcbiAgb3V0ZXJNYXJnaW5Ub3A6IG51bWJlciB8IG51bGw7XG4gIG91dGVyTWFyZ2luUmlnaHQ6IG51bWJlciB8IG51bGw7XG4gIG91dGVyTWFyZ2luQm90dG9tOiBudW1iZXIgfCBudWxsO1xuICBvdXRlck1hcmdpbkxlZnQ6IG51bWJlciB8IG51bGw7XG4gIHVzZVRyYW5zZm9ybVBvc2l0aW9uaW5nOiBib29sZWFuO1xuICBzY3JvbGxTZW5zaXRpdml0eTogbnVtYmVyO1xuICBzY3JvbGxTcGVlZDogbnVtYmVyO1xuICBkcmFnZ2FibGU6IERyYWdnYWJsZTtcbiAgcmVzaXphYmxlOiBSZXNpemFibGU7XG4gIHN3YXA6IGJvb2xlYW47XG4gIHB1c2hJdGVtczogYm9vbGVhbjtcbiAgZGlzYWJsZVB1c2hPbkRyYWc6IGJvb2xlYW47XG4gIGRpc2FibGVQdXNoT25SZXNpemU6IGJvb2xlYW47XG4gIGRpc2FibGVBdXRvUG9zaXRpb25PbkNvbmZsaWN0OiBib29sZWFuO1xuICBwdXNoRGlyZWN0aW9uczogUHVzaERpcmVjdGlvbnM7XG4gIHB1c2hSZXNpemVJdGVtczogYm9vbGVhbjtcbiAgZGlzcGxheUdyaWQ6IGRpc3BsYXlHcmlkcztcbiAgZGlzYWJsZVdpbmRvd1Jlc2l6ZTogYm9vbGVhbjtcbiAgZGlzYWJsZVdhcm5pbmdzOiBib29sZWFuO1xuICBzY3JvbGxUb05ld0l0ZW1zOiBib29sZWFuO1xuICBlbmFibGVFbXB0eUNlbGxDbGljazogYm9vbGVhbjtcbiAgZW5hYmxlRW1wdHlDZWxsQ29udGV4dE1lbnU6IGJvb2xlYW47XG4gIGVuYWJsZUVtcHR5Q2VsbERyb3A6IGJvb2xlYW47XG4gIGVuYWJsZUVtcHR5Q2VsbERyYWc6IGJvb2xlYW47XG4gIGVtcHR5Q2VsbERyYWdNYXhDb2xzOiBudW1iZXI7XG4gIGVtcHR5Q2VsbERyYWdNYXhSb3dzOiBudW1iZXI7XG4gIGlnbm9yZU1hcmdpbkluUm93OiBib29sZWFuO1xuICBhcGk6IHtcbiAgICByZXNpemU6ICgpID0+IHZvaWQsXG4gICAgb3B0aW9uc0NoYW5nZWQ6ICgpID0+IHZvaWQsXG4gICAgZ2V0TmV4dFBvc3NpYmxlUG9zaXRpb246IChuZXdJdGVtOiBHcmlkc3Rlckl0ZW0pID0+IGJvb2xlYW4sXG4gICAgZ2V0Rmlyc3RQb3NzaWJsZVBvc2l0aW9uOiAoaXRlbTogR3JpZHN0ZXJJdGVtKSA9PiBHcmlkc3Rlckl0ZW0sXG4gICAgZ2V0TGFzdFBvc3NpYmxlUG9zaXRpb246IChpdGVtOiBHcmlkc3Rlckl0ZW0pID0+IEdyaWRzdGVySXRlbSxcbiAgfTtcblxuICAvKiogYWRkIGJ5IFRYICovXG4gIGdyaWRIZWlnaHRSZWFsPzogYm9vbGVhbjtcblxuICBbcHJvcE5hbWU6IHN0cmluZ106IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEcmFnQmFzZSB7XG4gIGVuYWJsZWQ6IGJvb2xlYW47XG4gIGRlbGF5U3RhcnQ6IG51bWJlcjtcblxuICBbcHJvcE5hbWU6IHN0cmluZ106IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEcmFnZ2FibGUgZXh0ZW5kcyBEcmFnQmFzZSB7XG4gIGlnbm9yZUNvbnRlbnRDbGFzczogc3RyaW5nO1xuICBpZ25vcmVDb250ZW50OiBib29sZWFuO1xuICBkcmFnSGFuZGxlQ2xhc3M6IHN0cmluZztcbiAgZHJvcE92ZXJJdGVtczogYm9vbGVhbjtcbiAgZHJvcE92ZXJJdGVtc0NhbGxiYWNrOiAoc291cmNlOiBHcmlkc3Rlckl0ZW0sIHRhcmdldDogR3JpZHN0ZXJJdGVtLCBncmlkPzogR3JpZHN0ZXJDb21wb25lbnRJbnRlcmZhY2UpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVzaXphYmxlIGV4dGVuZHMgRHJhZ0Jhc2Uge1xuICBoYW5kbGVzOiB7XG4gICAgczogYm9vbGVhbixcbiAgICBlOiBib29sZWFuLFxuICAgIG46IGJvb2xlYW4sXG4gICAgdzogYm9vbGVhbixcbiAgICBzZTogYm9vbGVhbixcbiAgICBuZTogYm9vbGVhbixcbiAgICBzdzogYm9vbGVhbixcbiAgICBudzogYm9vbGVhblxuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFB1c2hEaXJlY3Rpb25zIHtcbiAgbm9ydGg6IGJvb2xlYW47XG4gIGVhc3Q6IGJvb2xlYW47XG4gIHNvdXRoOiBib29sZWFuO1xuICB3ZXN0OiBib29sZWFuO1xufVxuIl19