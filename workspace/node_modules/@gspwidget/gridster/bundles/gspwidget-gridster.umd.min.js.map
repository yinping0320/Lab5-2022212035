{"version":3,"sources":["ng://@gspwidget/gridster/lib/gridster/gridsterConfig.interface.ts","ng://@gspwidget/gridster/lib/gridster/gridsterConfig.constant.ts","ng://@gspwidget/gridster/lib/gridster/gridsterUtils.service.ts","ng://@gspwidget/gridster/lib/gridster/gridster.interface.ts","ng://@gspwidget/gridster/lib/gridster/gridsterEmptyCell.service.ts","ng://@gspwidget/gridster/lib/gridster/gridsterCompact.service.ts","node_modules/tslib/tslib.es6.js","ng://@gspwidget/gridster/lib/gridster/gridsterRenderer.service.ts","ng://@gspwidget/gridster/lib/gridster/gridster.component.ts","ng://@gspwidget/gridster/lib/gridster/gridsterItemComponent.interface.ts","ng://@gspwidget/gridster/lib/gridster/gridsterScroll.service.ts","ng://@gspwidget/gridster/lib/gridster/gridsterSwap.service.ts","ng://@gspwidget/gridster/lib/gridster/gridsterPush.service.ts","ng://@gspwidget/gridster/lib/gridster/gridsterDraggable.service.ts","ng://@gspwidget/gridster/lib/gridster/gridsterPushResize.service.ts","ng://@gspwidget/gridster/lib/gridster/gridsterResizable.service.ts","ng://@gspwidget/gridster/lib/gridster/gridsterItem.component.ts","ng://@gspwidget/gridster/lib/gridster/gridsterPreview.component.ts","ng://@gspwidget/gridster/lib/gridster/gridster.module.ts"],"names":["Fit","ScrollVertical","ScrollHorizontal","Fixed","VerticalFixed","HorizontalFixed","Always","OnDragAndResize","None","CompactUp","CompactLeft","CompactUpAndLeft","CompactLeftAndUp","CompactRight","CompactUpAndRight","CompactRightAndUp","GridsterConfigService","gridType","GridType","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","setGridSize","compactType","CompactType","mobileBreakpoint","minCols","maxCols","minRows","maxRows","defaultItemCols","defaultItemRows","maxItemCols","maxItemRows","minItemCols","minItemRows","minItemArea","maxItemArea","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","scrollSensitivity","scrollSpeed","initCallback","undefined","destroyCallback","gridSizeChangedCallback","itemChangeCallback","itemResizeCallback","itemInitCallback","itemRemovedCallback","itemValidateCallback","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","emptyCellClickCallback","emptyCellContextMenuCallback","emptyCellDropCallback","emptyCellDragCallback","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","delayStart","enabled","ignoreContentClass","ignoreContent","dragHandleClass","stop","start","dropOverItems","dropOverItemsCallback","resizable","handles","s","e","n","w","se","ne","sw","nw","swap","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","DisplayGrid","disableWindowResize","disableWarnings","scrollToNewItems","disableAutoPositionOnConflict","GridsterUtils","merge","obj1","obj2","properties","p","hasOwnProperty","debounce","func","wait","timeout","context","this","args","arguments","clearTimeout","setTimeout","apply","checkTouchEvent","clientX","touches","length","clientY","changedTouches","checkContentClassForEvent","gridster","$options","checkContentClass","target","currentTarget","checkContentClassForEmptyCellClickEvent","current","contentClass","hasAttribute","getAttribute","split","indexOf","parentNode","compareItems","a","b","y","x","Injectable","GridsterEmptyCell","prototype","destroy","initialItem","movingItem","previewStyle","emptyCellExit","updateOptions","_this","emptyCellClick","options","renderer","listen","el","emptyCellClickCb","bind","emptyCellClickTouch","emptyCellContextMenu","emptyCellContextMenuCb","emptyCellDrop","emptyCellDragDrop","zone","runOutsideAngular","emptyCellMove","emptyCellDragOver","emptyCellDrag","emptyCellMouseDown","emptyCellDragTouch","item","getValidItemFromEvent","cdRef","markForCheck","preventDefault","stopPropagation","dataTransfer","dropEffect","buttons","emptyCellMMove","emptyCellMouseMove","emptyCellMMoveTouch","emptyCellUp","emptyCellMouseUp","emptyCellUpTouch","oldItem","rect","getBoundingClientRect","scrollLeft","left","scrollTop","top","pixelsToPositionX","Math","floor","pixelsToPositionY","cols","rows","min","abs","checkCollision","GridsterComponentInterface","GridsterCompact","checkCompact","checkCompactUp","checkCompactLeft","checkCompactRight","checkCompactItem","moveUpTillCollision","moveLeftTillCollision","moveRightTillCollision","widget","widgetMovedUp","l","grid","i","$item","compactEnabled","itemChanged","__assign","Object","assign","t","call","GridsterRenderer","updateItem","mobile","clearCellPosition","setStyle","curWidth","round","curColWidth","curRowHeight","width","height","setCellPosition","marginBottom","marginRight","columns","updateGridster","addClass","removeClass1","removeClass2","removeClass3","removeClass","getGridColumnStyle","getLeftPosition","gridRows","getGridRowStyle","getTopPosition","gridColumns","d","transform","getLeftMargin","getTopMargin","GridsterComponent","checkCollisionTwoItems","item2","ngOnInit","ngOnChanges","changes","setOptions","api","optionsChanged","resize","onResize","getNextPossiblePosition","getFirstPossiblePosition","getLastPossiblePosition","calculateLayout","clientWidth","clientHeight","offsetWidth","offsetHeight","curHeight","checkIfToResize","windowResize","emptyCell","widgetsIndex","ngOnDestroy","compact","scrollWidth","scrollHeight","setGridDimensions","notPlaced","max","marginWidth","marginHeight","gridRenderer","updateGrid","setSize","drag","toggle","gridHeightReal","mostBottomValue_1","forEach","ceil","afterCalculateLayout","dragInProgress","addItem","itemComponent","autoPositionItem","console","warn","JSON","stringify","push","calculateLayoutDebounce","removeItem","splice","collision","checkGridCollision","c","findItemWithItem","noNegativePosition","maxGridCols","maxGridRows","inColsLimits","inRowsLimits","minAreaLimit","maxAreaLimit","area","findItemsWithItem","newItem","startingFrom","colsIndex","rowsIndex","canAddToRows","canAddToColumns","tmpItem","farthestItem","reduce","prev","curr","currCoords","roundingMethod","noLimit","position","positionXToPixels","positionYToPixels","Component","selector","template","encapsulation","ViewEncapsulation","ElementRef","Renderer2","ChangeDetectorRef","NgZone","Input","nativeElement","parse","GridsterSwap","gridsterItem","swapedItem","swapItems","checkSwapBack","checkSwap","restoreSwapItem","setSwapItem","checkItemChanges","pushedBy","gridsterItemCollision","canBeDragged","gridsterItemCollide","copyCollisionX","copyCollisionY","copyX","copyY","GridsterItemComponentInterface","gridsterElement","resizeEvent","resizeEventType","intervalE","intervalW","intervalN","intervalS","intervalDuration","scroll","lastMouse","calculateItemPosition","resizeEventScrollType","offsetLeft","offsetTop","elemTopOffset","elemBottomOffset","cancelN","startVertical","cancelS","cancelVertical","elemRightOffset","elemLeftOffset","cancelW","startHorizontal","cancelE","cancelHorizontal","sign","setInterval","cancelScroll","clearInterval","GridsterPush","direction","disable","pushedItemsOrder","pushed","restoreTempItems","pushedItemsTemp","pushedItemsTempPath","removeFromTempPushed","restoreItems","pushedItem","pushedItems","pushedItemsPath","setPushedItems","checkPushBack","change","checkPushedItem","itemCollision","makePush","find","tryPattern","lastIndexOf","j","pop","removeFromPushedItem","trySouth","addToTempPushed","fromNorth","addToPushed","tryNorth","fromSouth","tryEast","fromWest","tryWest","fromEast","tempPosition","removeFromPushed","lastPosition","path","GridsterDraggable","mousedown","touchstart","dragStart","which","dragFunction","dragMove","dragStopFunction","dragStop","mousemove","touchmove","mouseup","mouseleave","cancelOnBlur","touchend","touchcancel","diffLeft","diffTop","calculateItemPositionFromMousePosition","run","Promise","resolve","then","makeDrag","cancelDrag","positionX","positionY","positionXBackup","positionYBackup","enableDrag","dragStartFunction","dragStartDelay","cancelMouse","cancelMouseLeave","cancelTouchMove","cancelMove","eventMove","cancelTouchEnd","cancelTouchCancel","GridsterPushResize","row","canBeResized","backUpY","backUpRows","backUpX","backUpCols","GridsterResizable","bottom","right","diffRight","diffBottom","minHeight","minWidth","pushResize","directionFunction","handleN","handleW","handleS","handleE","handleNW","handleNE","handleSW","handleSE","makeResize","cancelResize","newPosition","itemBackup","setItemTop","setItemHeight","setItemLeft","setItemWidth","resizeEnabled","GridsterItemComponent","dragEnabled","updateItemSize","init","scrollIntoView","onItemInit","emit","onResized","newValue","oldValue","decorators","type","Host","Output","EventEmitter","GridsterPreviewComponent","GridsterModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap"],"mappings":"gXAiBEA,IAAM,MACNC,eAAiB,iBACjBC,iBAAmB,mBACnBC,MAAQ,QACRC,cAAgB,gBAChBC,gBAAkB,sBAIlBC,OAAS,SACTC,gBAAkB,gBAClBC,KAAO,WAIPA,KAAO,OACPC,UAAY,YACZC,YAAc,cACdC,iBAAmB,iBACnBC,iBAAmB,iBACnBC,aAAe,eACfC,kBAAoB,kBACpBC,kBAAoB,mBCrCTC,EAAwC,CACnDC,SAAUC,EAASlB,IAMnBmB,cAAe,IACfC,eAAgB,IAChBC,yBAAyB,EACzBC,wBAAwB,EACxBC,aAAa,EACbC,YAAaC,EAAYjB,KACzBkB,iBAAkB,IAClBC,QAAS,EACTC,QAAS,IACTC,QAAS,EACTC,QAAS,IACTC,gBAAiB,EACjBC,gBAAiB,EACjBC,YAAa,GACbC,YAAa,GACbC,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,YAAa,KACbC,OAAQ,GACRC,aAAa,EACbC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,gBAAiB,KACjBC,yBAAyB,EACzBC,kBAAmB,GACnBC,YAAa,GACbC,aAAcC,UACdC,gBAAiBD,UACjBE,wBAAyBF,UACzBG,mBAAoBH,UAEpBI,mBAAoBJ,UAEpBK,iBAAkBL,UAElBM,oBAAqBN,UAErBO,qBAAsBP,UAEtBQ,sBAAsB,EACtBC,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBC,uBAAwBZ,UACxBa,6BAA8Bb,UAC9Bc,sBAAuBd,UACvBe,sBAAuBf,UACvBgB,qBAAsB,GACtBC,qBAAsB,GAEtBC,mBAAmB,EACnBC,UAAW,CACTC,WAAY,EACZC,SAAS,EACTC,mBAAoB,wBACpBC,eAAe,EACfC,gBAAiB,eACjBC,KAAMzB,UACN0B,MAAO1B,UAEP2B,eAAe,EACfC,sBAAuB5B,WAGzB6B,UAAW,CACTT,WAAY,EACZC,SAAS,EACTS,QAAS,CACPC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,GAENb,KAAMzB,UACN0B,MAAO1B,WAGTuC,MAAM,EACNC,WAAW,EACXC,mBAAmB,EACnBC,qBAAqB,EACrBC,eAAgB,CAACC,OAAO,EAAMC,MAAM,EAAMC,OAAO,EAAMC,MAAM,GAC7DC,iBAAiB,EACjBC,YAAaC,EAAY5F,gBACzB6F,qBAAqB,EACrBC,iBAAiB,EACjBC,kBAAkB,EAClBC,+BAA+B,GClGjCC,GAGSA,EAAAC,MAAP,SAAaC,EAAWC,EAAWC,GACjC,IAAK,IAAMC,KAAKF,OACE,IAAZA,EAAKE,IAAiBD,EAAWE,eAAeD,KAC3B,iBAAZF,EAAKE,GACdH,EAAKG,GAAKL,EAAcC,MAAMC,EAAKG,GAAIF,EAAKE,GAAID,EAAWC,IAE3DH,EAAKG,GAAKF,EAAKE,IAKrB,OAAOH,GAGFF,EAAAO,SAAP,SAAgBC,EAAgBC,OAC1BC,EACJ,OAAA,eACQC,EAAUC,KAAMC,EAAOC,UAK7BC,aAAaL,GACbA,EAAUM,WALC,WACTN,EAAU,KACVF,EAAKS,MAAMN,EAASE,IAGMJ,KAIzBT,EAAAkB,gBAAP,SAAuBzC,GACjBA,EAAE0C,UAAY1E,WAAagC,EAAE2C,UAC3B3C,EAAE2C,SAAW3C,EAAE2C,QAAQC,QACzB5C,EAAE0C,QAAU1C,EAAE2C,QAAQ,GAAGD,QACzB1C,EAAE6C,QAAU7C,EAAE2C,QAAQ,GAAGE,SAChB7C,EAAE8C,gBAAkB9C,EAAE8C,eAAeF,SAC9C5C,EAAE0C,QAAU1C,EAAE8C,eAAe,GAAGJ,QAChC1C,EAAE6C,QAAU7C,EAAE8C,eAAe,GAAGD,WAK/BtB,EAAAwB,0BAAP,SAAiCC,EAAsChD,GACrE,GAAIgD,EAASC,SAAS9D,UAAUI,eAC9B,IAAKgC,EAAc2B,kBAAkBlD,EAAEmD,OAAQnD,EAAEoD,cAAeJ,EAASC,SAAS9D,UAAUK,iBAC1F,OAAO,OAGT,GAAI+B,EAAc2B,kBAAkBlD,EAAEmD,OAAQnD,EAAEoD,cAAeJ,EAASC,SAAS9D,UAAUG,oBACzF,OAAO,EAGX,OAAO,GAGFiC,EAAA8B,wCAAP,SAA+CL,EAAsChD,GACnF,OAAOuB,EAAc2B,kBAAkBlD,EAAEmD,OAAQnD,EAAEoD,cAAeJ,EAASC,SAAS9D,UAAUG,qBACzFiC,EAAc2B,kBAAkBlD,EAAEmD,OAAQnD,EAAEoD,cAAeJ,EAASC,SAAS9D,UAAUK,kBAGvF+B,EAAA2B,kBAAP,SAAyBC,EAAaG,EAAcC,GAClD,SAAKJ,GAAUA,IAAWG,QAGtBH,EAAOK,aAAa,WAA6E,EAAjEL,EAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQJ,KAG3EhC,EAAc2B,kBAAkBC,EAAOS,WAAYN,EAASC,KAIhEhC,EAAAsC,aAAP,SAAoBC,EAA6BC,GAC/C,OAAID,EAAEE,EAAID,EAAEC,GACF,EACCF,EAAEE,EAAID,EAAEC,EACV,EACEF,EAAEG,EAAIF,EAAEE,GACT,EAED,uBA/EZC,EAAAA,aAkFD3C,GAlFA,SAAAA,KCKA,cAAA,ICHA4C,GAmBEA,EAAAC,UAAAC,QAAA,kBACSlC,KAAKmC,mBACLnC,KAAKa,SAASuB,WACjBpC,KAAKa,SAASwB,cAChBrC,KAAKa,SAASwB,sBAETrC,KAAKa,SACRb,KAAKsC,gBACPtC,KAAKsC,gBACLtC,KAAKsC,cAAgB,OAIzBN,EAAAC,UAAAM,cAAA,WAAA,IAAAC,EAAAxC,KACMA,KAAKa,SAASC,SAASzE,uBAAyB2D,KAAKyC,gBAAkBzC,KAAKa,SAAS6B,QAAQjG,wBAC/FuD,KAAKyC,eAAiBzC,KAAKa,SAAS8B,SAASC,OAAO5C,KAAKa,SAASgC,GAAI,QAAS7C,KAAK8C,iBAAiBC,KAAK/C,OAC1GA,KAAKgD,oBAAsBhD,KAAKa,SAAS8B,SAASC,OAAO5C,KAAKa,SAASgC,GAAI,WAAY7C,KAAK8C,iBAAiBC,KAAK/C,SACxGA,KAAKa,SAASC,SAASzE,sBAAwB2D,KAAKyC,gBAAkBzC,KAAKgD,sBACrFhD,KAAKyC,iBACLzC,KAAKgD,sBACLhD,KAAKyC,eAAiB,KACtBzC,KAAKgD,oBAAsB,MAEzBhD,KAAKa,SAASC,SAASxE,6BAA+B0D,KAAKiD,sBAC7DjD,KAAKa,SAAS6B,QAAQhG,6BACtBsD,KAAKiD,qBAAuBjD,KAAKa,SAAS8B,SAASC,OAAO5C,KAAKa,SAASgC,GAAI,cAAe7C,KAAKkD,uBAAuBH,KAAK/C,QAClHA,KAAKa,SAASC,SAASxE,4BAA8B0D,KAAKiD,uBACpEjD,KAAKiD,uBACLjD,KAAKiD,qBAAuB,MAE1BjD,KAAKa,SAASC,SAASvE,sBAAwByD,KAAKmD,eAAiBnD,KAAKa,SAAS6B,QAAQ/F,uBAC7FqD,KAAKmD,cAAgBnD,KAAKa,SAAS8B,SAASC,OAAO5C,KAAKa,SAASgC,GAAI,OAAQ7C,KAAKoD,kBAAkBL,KAAK/C,OACzGA,KAAKa,SAASwC,KAAKC,kBAAiB,WAClCd,EAAKe,cAAgBf,EAAK3B,SAAS8B,SAASC,OAAOJ,EAAK3B,SAASgC,GAAI,WAAYL,EAAKgB,kBAAkBT,KAAKP,MAE/GxC,KAAKsC,cAAgBtC,KAAKa,SAAS8B,SAASC,OAAO,WAAY,UAAS,WACtEJ,EAAK3B,SAASuB,WAAa,KAC3BI,EAAK3B,SAASwB,mBAENrC,KAAKa,SAASC,SAASvE,qBAAuByD,KAAKmD,eAAiBnD,KAAKuD,eAAiBvD,KAAKsC,gBACzGtC,KAAKmD,gBACLnD,KAAKuD,gBACLvD,KAAKsC,gBACLtC,KAAKuD,cAAgB,KACrBvD,KAAKmD,cAAgB,KACrBnD,KAAKsC,cAAgB,MAEnBtC,KAAKa,SAASC,SAAStE,sBAAwBwD,KAAKyD,eAAiBzD,KAAKa,SAAS6B,QAAQ9F,uBAC7FoD,KAAKyD,cAAgBzD,KAAKa,SAAS8B,SAASC,OAAO5C,KAAKa,SAASgC,GAAI,YAAa7C,KAAK0D,mBAAmBX,KAAK/C,OAC/GA,KAAK2D,mBAAqB3D,KAAKa,SAAS8B,SAASC,OAAO5C,KAAKa,SAASgC,GAAI,aAAc7C,KAAK0D,mBAAmBX,KAAK/C,SAC3GA,KAAKa,SAASC,SAAStE,qBAAuBwD,KAAKyD,eAAiBzD,KAAK2D,qBACnF3D,KAAKyD,gBACLzD,KAAK2D,qBACL3D,KAAKyD,cAAgB,KACrBzD,KAAK2D,mBAAqB,OAI9B3B,EAAAC,UAAAa,iBAAA,SAAiBjF,GACf,IAAImC,KAAKa,SAASuB,aAAchD,EAAc8B,wCAAwClB,KAAKa,SAAUhD,GAArG,KAGM+F,EAAO5D,KAAK6D,sBAAsBhG,GACnC+F,IAGD5D,KAAKa,SAAS6B,QAAQjG,wBACxBuD,KAAKa,SAAS6B,QAAQjG,uBAAuBoB,EAAG+F,GAElD5D,KAAKa,SAASiD,MAAMC,kBAGtB/B,EAAAC,UAAAiB,uBAAA,SAAuBrF,GACrB,IAAImC,KAAKa,SAASuB,aAAchD,EAAc8B,wCAAwClB,KAAKa,SAAUhD,GAArG,CAGAA,EAAEmG,iBACFnG,EAAEoG,sBACIL,EAAO5D,KAAK6D,sBAAsBhG,GACnC+F,IAGD5D,KAAKa,SAAS6B,QAAQhG,8BACxBsD,KAAKa,SAAS6B,QAAQhG,6BAA6BmB,EAAG+F,GAExD5D,KAAKa,SAASiD,MAAMC,kBAGtB/B,EAAAC,UAAAmB,kBAAA,SAAkBvF,OACV+F,EAAO5D,KAAK6D,sBAAsBhG,GACnC+F,IAGD5D,KAAKa,SAAS6B,QAAQ/F,uBACxBqD,KAAKa,SAAS6B,QAAQ/F,sBAAsBkB,EAAG+F,GAEjD5D,KAAKa,SAASiD,MAAMC,iBAGtB/B,EAAAC,UAAAuB,kBAAA,SAAkB3F,GAChBA,EAAEmG,iBACFnG,EAAEoG,sBACIL,EAAO5D,KAAK6D,sBAAsBhG,GACpC+F,GACF/F,EAAEqG,aAAaC,WAAa,OAC5BnE,KAAKa,SAASuB,WAAawB,IAE3B/F,EAAEqG,aAAaC,WAAa,OAC5BnE,KAAKa,SAASuB,WAAa,MAE7BpC,KAAKa,SAASwB,gBAGhBL,EAAAC,UAAAyB,mBAAA,SAAmB7F,GAAnB,IAAA2E,EAAAxC,KACE,IAAIZ,EAAc8B,wCAAwClB,KAAKa,SAAUhD,GAAzE,CAGAA,EAAEmG,iBACFnG,EAAEoG,sBACIL,EAAO5D,KAAK6D,sBAAsBhG,GAEnC+F,GADuB,IACf/F,EAAEuG,UAGfpE,KAAKmC,YAAcyB,EACnB5D,KAAKa,SAASuB,WAAawB,EAC3B5D,KAAKa,SAASwB,eACdrC,KAAKa,SAASwC,KAAKC,kBAAiB,WAClCd,EAAK6B,eAAiB7B,EAAK3B,SAAS8B,SAASC,OAAO,SAAU,YAAaJ,EAAK8B,mBAAmBvB,KAAKP,IACxGA,EAAK+B,oBAAsB/B,EAAK3B,SAAS8B,SAASC,OAAO,SAAU,YAAaJ,EAAK8B,mBAAmBvB,KAAKP,MAE/GxC,KAAKwE,YAAcxE,KAAKa,SAAS8B,SAASC,OAAO,SAAU,UAAW5C,KAAKyE,iBAAiB1B,KAAK/C,OACjGA,KAAK0E,iBAAmB1E,KAAKa,SAAS8B,SAASC,OAAO,SAAU,WAAY5C,KAAKyE,iBAAiB1B,KAAK/C,UAGzGgC,EAAAC,UAAAqC,mBAAA,SAAmBzG,GACjBA,EAAEmG,iBACFnG,EAAEoG,sBACIL,EAAO5D,KAAK6D,sBAAsBhG,EAAGmC,KAAKmC,aAC3CyB,IAIL5D,KAAKa,SAASuB,WAAawB,EAC3B5D,KAAKa,SAASwB,iBAGhBL,EAAAC,UAAAwC,iBAAA,SAAiB5G,GAAjB,IAAA2E,EAAAxC,KACEA,KAAKqE,iBACLrE,KAAKuE,sBACLvE,KAAKwE,cACLxE,KAAK0E,uBACCd,EAAO5D,KAAK6D,sBAAsBhG,EAAGmC,KAAKmC,aAC5CyB,IACF5D,KAAKa,SAASuB,WAAawB,GAEzB5D,KAAKa,SAAS6B,QAAQ9F,uBAAyBoD,KAAKa,SAASuB,YAC/DpC,KAAKa,SAAS6B,QAAQ9F,sBAAsBiB,EAAGmC,KAAKa,SAASuB,YAE/DhC,WAAU,WACRoC,EAAKL,YAAc,KACfK,EAAK3B,WACP2B,EAAK3B,SAASuB,WAAa,KAC3BI,EAAK3B,SAASwB,kBAGlBrC,KAAKa,SAASiD,MAAMC,gBAGtB/B,EAAAC,UAAA4B,sBAAA,SAAsBhG,EAAQ8G,GAC5B9G,EAAEmG,iBACFnG,EAAEoG,kBACF7E,EAAckB,gBAAgBzC,OACxB+G,EAAO5E,KAAKa,SAASgC,GAAGgC,wBACxB/C,EAAIjE,EAAE0C,QAAUP,KAAKa,SAASgC,GAAGiC,WAAaF,EAAKG,KAAO/E,KAAKa,SAASC,SAAS3F,OACjF0G,EAAIhE,EAAE6C,QAAUV,KAAKa,SAASgC,GAAGmC,UAAYJ,EAAKK,IAAMjF,KAAKa,SAASC,SAAS3F,OAC/EyI,EAAqB,CACzB9B,EAAG9B,KAAKa,SAASqE,kBAAkBpD,EAAGqD,KAAKC,OAAO,GAClDvD,EAAG7B,KAAKa,SAASwE,kBAAkBxD,EAAGsD,KAAKC,OAAO,GAClDE,KAAMtF,KAAKa,SAASC,SAASnG,gBAC7B4K,KAAMvF,KAAKa,SAASC,SAASlG,iBAgB/B,GAdI+J,IACFf,EAAK0B,KAAOH,KAAKK,IAAIL,KAAKM,IAAId,EAAQ7C,EAAI8B,EAAK9B,GAAK,EAAG9B,KAAKa,SAASC,SAASjE,sBAC9E+G,EAAK2B,KAAOJ,KAAKK,IAAIL,KAAKM,IAAId,EAAQ9C,EAAI+B,EAAK/B,GAAK,EAAG7B,KAAKa,SAASC,SAAShE,sBAC1E6H,EAAQ7C,EAAI8B,EAAK9B,EACnB8B,EAAK9B,EAAI6C,EAAQ7C,EACR6C,EAAQ7C,EAAI8B,EAAK9B,EAAI9B,KAAKa,SAASC,SAASjE,qBAAuB,IAC5E+G,EAAK9B,EAAI9B,KAAKa,SAASuB,WAAapC,KAAKa,SAASuB,WAAWN,EAAI,GAE/D6C,EAAQ9C,EAAI+B,EAAK/B,EACnB+B,EAAK/B,EAAI8C,EAAQ9C,EACR8C,EAAQ9C,EAAI+B,EAAK/B,EAAI7B,KAAKa,SAASC,SAAShE,qBAAuB,IAC5E8G,EAAK/B,EAAI7B,KAAKa,SAASuB,WAAapC,KAAKa,SAASuB,WAAWP,EAAI,KAGjE7B,KAAKa,SAAS6E,eAAe9B,GAGjC,OAAOA,uBA1NV7B,EAAAA,sDAFO4D,KA8NR3D,GA5ME,SAAAA,EAAoBnB,GAAAb,KAAAa,SAAAA,ECftB,IAAA+E,GAMEA,EAAA3D,UAAAC,QAAA,kBACSlC,KAAKa,UAGd+E,EAAA3D,UAAA4D,aAAA,WACM7F,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYjB,OACjD4G,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYhB,UACrD2G,KAAK8F,iBACI9F,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYf,YAC5D0G,KAAK+F,mBACI/F,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYd,kBAC5DyG,KAAK8F,iBACL9F,KAAK+F,oBACI/F,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYb,kBAC5DwG,KAAK+F,mBACL/F,KAAK8F,kBACI9F,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYZ,aAC5DuG,KAAKgG,oBACIhG,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYX,mBAC5DsG,KAAK8F,iBACL9F,KAAKgG,qBACIhG,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYV,oBAC5DqG,KAAKgG,oBACLhG,KAAK8F,oBAKXF,EAAA3D,UAAAgE,iBAAA,SAAiBrC,GACX5D,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYjB,OACjD4G,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYhB,UACrD2G,KAAKkG,oBAAoBtC,GAChB5D,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYf,YAC5D0G,KAAKmG,sBAAsBvC,GAClB5D,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYd,kBAC5DyG,KAAKkG,oBAAoBtC,GACzB5D,KAAKmG,sBAAsBvC,IAClB5D,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYb,kBAC5DwG,KAAKmG,sBAAsBvC,GAC3B5D,KAAKkG,oBAAoBtC,IAChB5D,KAAKa,SAASC,SAAS1G,cAAgBC,EAAYX,oBAC5DsG,KAAKkG,oBAAoBtC,GACzB5D,KAAKoG,uBAAuBxC,MAKlCgC,EAAA3D,UAAA6D,eAAA,WAGE,QAF2BO,EAAvBC,GAAgB,EACdC,EAAIvG,KAAKa,SAAS2F,KAAK/F,OACpBgG,EAAI,EAAGA,EAAIF,EAAGE,KAEe,KADpCJ,EAASrG,KAAKa,SAAS2F,KAAKC,IACjBC,MAAMC,gBAGT3G,KAAKkG,oBAAoBG,EAAOK,SAEtCJ,GAAgB,EAChBD,EAAOzC,KAAK/B,EAAIwE,EAAOK,MAAM7E,EAC7BwE,EAAOO,eAGPN,GACFtG,KAAK6F,gBAITD,EAAA3D,UAAAiE,oBAAA,SAAoBtC,GAElB,OADAA,EAAK/B,GAAK,EACN7B,KAAKa,SAAS6E,eAAe9B,IAC/BA,EAAK/B,GAAK,GACH,IAEP7B,KAAKkG,oBAAoBtC,IAClB,IAIXgC,EAAA3D,UAAA8D,iBAAA,WAGE,QAF2BM,EAAvBC,GAAgB,EACdC,EAAIvG,KAAKa,SAAS2F,KAAK/F,OACpBgG,EAAI,EAAGA,EAAIF,EAAGE,KAEe,KADpCJ,EAASrG,KAAKa,SAAS2F,KAAKC,IACjBC,MAAMC,gBAGT3G,KAAKmG,sBAAsBE,EAAOK,SAExCJ,GAAgB,EAChBD,EAAOzC,KAAK9B,EAAIuE,EAAOK,MAAM5E,EAC7BuE,EAAOO,eAGPN,GACFtG,KAAK6F,gBAITD,EAAA3D,UAAA+D,kBAAA,WAGE,QAF2BK,EAAvBC,GAAgB,EACdC,EAAIvG,KAAKa,SAAS2F,KAAK/F,OACpBgG,EAAI,EAAGA,EAAIF,EAAGE,KAEe,KADpCJ,EAASrG,KAAKa,SAAS2F,KAAKC,IACjBC,MAAMC,gBAGT3G,KAAKoG,uBAAuBC,EAAOK,SAEzCJ,GAAgB,EAChBD,EAAOzC,KAAK9B,EAAIuE,EAAOK,MAAM5E,EAC7BuE,EAAOO,eAGPN,GACFtG,KAAK6F,gBAITD,EAAA3D,UAAAkE,sBAAA,SAAsBvC,GAEpB,OADAA,EAAK9B,GAAK,EACN9B,KAAKa,SAAS6E,eAAe9B,IAC/BA,EAAK9B,GAAK,GACH,IAEP9B,KAAKmG,sBAAsBvC,IACpB,IAIXgC,EAAA3D,UAAAmE,uBAAA,SAAuBxC,GAErB,OADAA,EAAK9B,GAAK,EACN9B,KAAKa,SAAS6E,eAAe9B,IAC/BA,EAAK9B,GAAK,GACH,IAEP9B,KAAKoG,uBAAuBxC,IACrB,wBA9IZ7B,EAAAA,sDALO4D,KAsJRC,GA9IE,SAAAA,EAAoB/E,GAAAb,KAAAa,SAAAA,ECmBf,IAAIgG,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIpJ,EAAG6I,EAAI,EAAG3I,EAAIoC,UAAUO,OAAQgG,EAAI3I,EAAG2I,IAE5C,IAAK,IAAIhH,KADT7B,EAAIsC,UAAUuG,GACOK,OAAO7E,UAAUvC,eAAeuH,KAAKrJ,EAAG6B,KAAIuH,EAAEvH,GAAK7B,EAAE6B,IAE9E,OAAOuH,IAEK3G,MAAML,KAAME,YC/BhCgH,GAMEA,EAAAjF,UAAAC,QAAA,kBACSlC,KAAKa,UAGdqG,EAAAjF,UAAAkF,WAAA,SAAWtE,EAASe,EAAoBjB,GACtC,GAAI3C,KAAKa,SAASuG,OAChBpH,KAAKqH,kBAAkB1E,EAAUE,GAC7B7C,KAAKa,SAASC,SAAS7G,wBACzB0I,EAAS2E,SAASzE,EAAI,SAAWe,EAAK2B,KAAOvF,KAAKa,SAASC,SAAS9G,eAAkB,MAEtF2I,EAAS2E,SAASzE,EAAI,SAAW7C,KAAKa,SAAS0G,SAAW,EAAI3D,EAAK2B,KAAQ,MAEzEvF,KAAKa,SAASC,SAAS5G,uBACzByI,EAAS2E,SAASzE,EAAI,QAAS7C,KAAKa,SAASC,SAAS/G,cAAgB,MAEtE4I,EAAS2E,SAASzE,EAAI,QAAS,IAGjCF,EAAS2E,SAASzE,EAAI,gBAAiB7C,KAAKa,SAASC,SAAS3F,OAAS,MACvEwH,EAAS2E,SAASzE,EAAI,eAAgB,QACjC,KACCf,EAAIqD,KAAKqC,MAAMxH,KAAKa,SAAS4G,YAAc7D,EAAK9B,GAChDD,EAAIsD,KAAKqC,MAAMxH,KAAKa,SAAS6G,aAAe9D,EAAK/B,GACjD8F,EAAQ3H,KAAKa,SAAS4G,YAAc7D,EAAK0B,KAAOtF,KAAKa,SAASC,SAAS3F,OACvEyM,EAAU5H,KAAKa,SAAS6G,aAAe9D,EAAK2B,KAAOvF,KAAKa,SAASC,SAAS3F,OAEhF6E,KAAK6H,gBAAgBlF,EAAUE,EAAIf,EAAGD,GACtCc,EAAS2E,SAASzE,EAAI,QAAS8E,EAAQ,MACvChF,EAAS2E,SAASzE,EAAI,SAAU+E,EAAS,UACrCE,EAA8B,KAC9BC,EAA6B,KAC7B/H,KAAKa,SAASC,SAAS1F,cACrB4E,KAAKa,SAAS0E,OAAS3B,EAAK2B,KAAO3B,EAAK/B,IAExCiG,EAD+C,OAA7C9H,KAAKa,SAASC,SAASvF,kBACVyE,KAAKa,SAASC,SAASvF,kBAAoB,KAE3CyE,KAAKa,SAASC,SAAS3F,OAAS,MAG/C6E,KAAKa,SAASmH,UAAYpE,EAAK0B,KAAO1B,EAAK9B,IAE3CiG,EAD+C,OAA7C/H,KAAKa,SAASC,SAASvF,kBACXyE,KAAKa,SAASC,SAASxF,iBAAmB,KAE1C0E,KAAKa,SAASC,SAAS3F,OAAS,OAKpDwH,EAAS2E,SAASzE,EAAI,gBAAiBiF,GACvCnF,EAAS2E,SAASzE,EAAI,eAAgBkF,KAI1Cb,EAAAjF,UAAAgG,eAAA,eACMC,EAAW,GACXC,EAAe,GACfC,EAAe,GACfC,EAAe,GACfrI,KAAKa,SAASC,SAASjH,WAAaC,EAASlB,KAC/CsP,EAAWpO,EAASlB,IACpBuP,EAAerO,EAASjB,eACxBuP,EAAetO,EAAShB,iBACxBuP,EAAevO,EAASf,OACfiH,KAAKa,SAASC,SAASjH,WAAaC,EAASjB,gBACtDmH,KAAKa,SAAS6G,aAAe1H,KAAKa,SAAS4G,YAC3CS,EAAWpO,EAASjB,eACpBsP,EAAerO,EAASlB,IACxBwP,EAAetO,EAAShB,iBACxBuP,EAAevO,EAASf,OACfiH,KAAKa,SAASC,SAASjH,WAAaC,EAAShB,kBACtDkH,KAAKa,SAAS4G,YAAczH,KAAKa,SAAS6G,aAC1CQ,EAAWpO,EAAShB,iBACpBqP,EAAerO,EAASlB,IACxBwP,EAAetO,EAASjB,eACxBwP,EAAevO,EAASf,OACfiH,KAAKa,SAASC,SAASjH,WAAaC,EAASf,OACtDiH,KAAKa,SAAS4G,YAAczH,KAAKa,SAASC,SAAS/G,eAChDiG,KAAKa,SAASC,SAAS/D,kBAAoB,EAAIiD,KAAKa,SAASC,SAAS3F,QACzE6E,KAAKa,SAAS6G,aAAe1H,KAAKa,SAASC,SAAS9G,gBACjDgG,KAAKa,SAASC,SAAS/D,kBAAoB,EAAIiD,KAAKa,SAASC,SAAS3F,QACzE+M,EAAWpO,EAASf,MACpBoP,EAAerO,EAASlB,IACxBwP,EAAetO,EAASjB,eACxBwP,EAAevO,EAAShB,kBACfkH,KAAKa,SAASC,SAASjH,WAAaC,EAASd,eACtDgH,KAAKa,SAAS6G,aAAe1H,KAAKa,SAASC,SAAS9G,gBACjDgG,KAAKa,SAASC,SAAS/D,kBAAoB,EAAIiD,KAAKa,SAASC,SAAS3F,QACzE+M,EAAWpO,EAASjB,eACpBsP,EAAerO,EAASlB,IACxBwP,EAAetO,EAAShB,iBACxBuP,EAAevO,EAASf,OACfiH,KAAKa,SAASC,SAASjH,WAAaC,EAASb,kBACtD+G,KAAKa,SAAS4G,YAAczH,KAAKa,SAASC,SAAS/G,eAChDiG,KAAKa,SAASC,SAAS/D,kBAAoB,EAAIiD,KAAKa,SAASC,SAAS3F,QACzE+M,EAAWpO,EAAShB,iBACpBqP,EAAerO,EAASlB,IACxBwP,EAAetO,EAASjB,eACxBwP,EAAevO,EAASf,OAGtBiH,KAAKa,SAASuG,OAChBpH,KAAKa,SAAS8B,SAAS2F,YAAYtI,KAAKa,SAASgC,GAAIqF,GAErDlI,KAAKa,SAAS8B,SAASuF,SAASlI,KAAKa,SAASgC,GAAIqF,GAEpDlI,KAAKa,SAAS8B,SAAS2F,YAAYtI,KAAKa,SAASgC,GAAIsF,GACrDnI,KAAKa,SAAS8B,SAAS2F,YAAYtI,KAAKa,SAASgC,GAAIuF,GACrDpI,KAAKa,SAAS8B,SAAS2F,YAAYtI,KAAKa,SAASgC,GAAIwF,IAGvDnB,EAAAjF,UAAAsG,mBAAA,SAAmB9B,GACjB,OAAAI,EAAA,GACK7G,KAAKwI,gBAAgBxI,KAAKa,SAAS4G,YAAchB,GAAE,CACtDkB,MAAO3H,KAAKa,SAAS4G,YAAczH,KAAKa,SAASC,SAAS3F,OAAS,KACnEyM,OAAQ5H,KAAKa,SAAS4H,SAAShI,OAAST,KAAKa,SAAS6G,aAAe1H,KAAKa,SAASC,SAAS3F,OAAS,QAIzG+L,EAAAjF,UAAAyG,gBAAA,SAAgBjC,GACd,OAAAI,EAAA,GACK7G,KAAK2I,eAAe3I,KAAKa,SAAS6G,aAAejB,GAAE,CACtDkB,MAAO3H,KAAKa,SAAS+H,YAAYnI,OAAST,KAAKa,SAAS4G,YAAczH,KAAKa,SAASC,SAAS3F,OAAS,KACtGyM,OAAQ5H,KAAKa,SAAS6G,aAAe1H,KAAKa,SAASC,SAAS3F,OAAS,QAIzE+L,EAAAjF,UAAAuG,gBAAA,SAAgBK,GACd,OAAI7I,KAAKa,SAASC,SAASrF,wBAClB,CACLqN,UAAW,cAAgBD,EAAI,OAG1B,CACL9D,KAAO/E,KAAK+I,gBAAkBF,EAAK,OAKzC3B,EAAAjF,UAAA0G,eAAA,SAAeE,GACb,OAAI7I,KAAKa,SAASC,SAASrF,wBAClB,CACLqN,UAAW,cAAgBD,EAAI,OAG1B,CACL5D,IAAKjF,KAAKgJ,eAAiBH,EAAI,OAKrC3B,EAAAjF,UAAAoF,kBAAA,SAAkB1E,EAAqBE,GACjC7C,KAAKa,SAASC,SAASrF,wBACzBkH,EAAS2E,SAASzE,EAAI,YAAa,KAEnCF,EAAS2E,SAASzE,EAAI,MAAO,IAC7BF,EAAS2E,SAASzE,EAAI,OAAQ,MAIlCqE,EAAAjF,UAAA4F,gBAAA,SAAgBlF,EAAqBE,EAASf,EAAWD,GACvD,GAAI7B,KAAKa,SAASC,SAASrF,wBAAyB,KAC5CqN,EAAY,eAAiBhH,EAAI,OAASD,EAAI,SACpDc,EAAS2E,SAASzE,EAAI,YAAaiG,QAEnCnG,EAAS2E,SAASzE,EAAI,OAAQ7C,KAAK+I,gBAAkBjH,EAAI,MACzDa,EAAS2E,SAASzE,EAAI,MAAO7C,KAAKgJ,eAAiBnH,EAAI,OAI3DqF,EAAAjF,UAAA8G,cAAA,WACE,OAAI/I,KAAKa,SAASC,SAAS1F,YACsB,OAA3C4E,KAAKa,SAASC,SAAStF,gBAClBwE,KAAKa,SAASC,SAAStF,gBAEvBwE,KAAKa,SAASC,SAAS3F,OAGzB,GAIX+L,EAAAjF,UAAA+G,aAAA,WACE,OAAIhJ,KAAKa,SAASC,SAAS1F,YACqB,OAA1C4E,KAAKa,SAASC,SAASzF,eAClB2E,KAAKa,SAASC,SAASzF,eAEvB2E,KAAKa,SAASC,SAAS3F,OAGzB,uBAnMZ4G,EAAAA,sDAJO4D,KA0MRuB,GAnME,SAAAA,EAAoBrG,GAAAb,KAAAa,SAAAA,ECTtB,IAAAoI,GAuESA,EAAAC,uBAAP,SAA8BtF,EAAoBuF,GAChD,OAAOvF,EAAK9B,EAAIqH,EAAMrH,EAAIqH,EAAM7D,MAC3B1B,EAAK9B,EAAI8B,EAAK0B,KAAO6D,EAAMrH,GAC3B8B,EAAK/B,EAAIsH,EAAMtH,EAAIsH,EAAM5D,MACzB3B,EAAK/B,EAAI+B,EAAK2B,KAAO4D,EAAMtH,GAGlCoH,EAAAhH,UAAAmH,SAAA,WACMpJ,KAAK0C,QAAQ9G,cACfoE,KAAK0C,QAAQ9G,aAAaoE,OAI9BiJ,EAAAhH,UAAAoH,YAAA,SAAYC,GACNA,EAAQ5G,UACV1C,KAAKuJ,aACLvJ,KAAK0C,QAAQ8G,IAAM,CACjBC,eAAgBzJ,KAAKyJ,eAAe1G,KAAK/C,MACzC0J,OAAQ1J,KAAK2J,SAAS5G,KAAK/C,MAC3B4J,wBAAyB5J,KAAK4J,wBAAwB7G,KAAK/C,MAC3D6J,yBAA0B7J,KAAK6J,yBAAyB9G,KAAK/C,MAC7D8J,wBAAyB9J,KAAK8J,wBAAwB/G,KAAK/C,OAE7DA,KAAKgI,QAAUhI,KAAKc,SAASvG,QAC7ByF,KAAKuF,KAAOvF,KAAKc,SAASrG,QAC1BuF,KAAK7F,cACL6F,KAAK+J,oBAITd,EAAAhH,UAAAyH,OAAA,eACM9B,EACAD,EAMFC,EAL6B,QAA3B5H,KAAKc,SAASjH,UAAuBmG,KAAKoH,QAI5CO,EAAQ3H,KAAK6C,GAAGmH,YACPhK,KAAK6C,GAAGoH,eAJjBtC,EAAQ3H,KAAK6C,GAAGqH,YACPlK,KAAK6C,GAAGsH,cAKdxC,IAAU3H,KAAKuH,UAAYK,IAAW5H,KAAKoK,YAAcpK,KAAKqK,mBACjErK,KAAK2J,YAITV,EAAAhH,UAAAsH,WAAA,WACEvJ,KAAKc,SAAW1B,EAAcC,MAAMW,KAAKc,SAAUd,KAAK0C,QAAS1C,KAAKc,UACjEd,KAAKc,SAAS9B,qBAAwBgB,KAAKsK,aAErCtK,KAAKc,SAAS9B,qBAAuBgB,KAAKsK,eACnDtK,KAAKsK,eACLtK,KAAKsK,aAAe,MAHpBtK,KAAKsK,aAAetK,KAAK2C,SAASC,OAAO,SAAU,SAAU5C,KAAK2J,SAAS5G,KAAK/C,OAKlFA,KAAKuK,UAAUhI,iBAGjB0G,EAAAhH,UAAAwH,eAAA,WACEzJ,KAAKuJ,aAEL,QADIiB,EAAuBxK,KAAKwG,KAAK/F,OAAS,EACvB,GAAhB+J,EAAmBA,IACfxK,KAAKwG,KAAKgE,GACZjI,gBAETvC,KAAK+J,mBAGPd,EAAAhH,UAAAwI,YAAA,WACMzK,KAAKsK,cACPtK,KAAKsK,eAEHtK,KAAK0C,QAAQ5G,iBACfkE,KAAK0C,QAAQ5G,gBAAgBkE,MAE3BA,KAAK0C,QAAQ8G,MACfxJ,KAAK0C,QAAQ8G,IAAIE,OAAS7N,UAC1BmE,KAAK0C,QAAQ8G,IAAIC,eAAiB5N,UAClCmE,KAAK0C,QAAQ8G,IAAII,wBAA0B/N,UAC3CmE,KAAK0C,QAAQ8G,IAAM3N,WAErBmE,KAAKuK,UAAUrI,iBACRlC,KAAKuK,UACZvK,KAAK0K,QAAQxI,iBACNlC,KAAK0K,SAGdzB,EAAAhH,UAAA0H,SAAA,WACE3J,KAAK7F,cACL6F,KAAK+J,mBAGPd,EAAAhH,UAAAoI,gBAAA,eACQL,EAAchK,KAAK6C,GAAGmH,YACtBE,EAAclK,KAAK6C,GAAGqH,YACtBS,EAAc3K,KAAK6C,GAAG8H,YACtBV,EAAejK,KAAK6C,GAAGoH,aACvBE,EAAenK,KAAK6C,GAAGsH,aACvBS,EAAe5K,KAAK6C,GAAG+H,aAK7B,QAJ8BZ,EAAcE,GAA8BC,EAAfS,GACtDA,EAAeT,EAAeD,EAAcF,GACjBC,EAAeE,GAC5BD,EAAdS,GAA6BA,EAAcT,EAAcC,EAAeF,IAO/EhB,EAAAhH,UAAA9H,YAAA,eACQ0I,EAAK7C,KAAK6C,GACZ8E,EAAQ9E,EAAGmH,YACXpC,EAAS/E,EAAGoH,aAGdrC,EAFE5H,KAAKc,SAAS3G,aAA0C,QAA3B6F,KAAKc,SAASjH,WAAuBmG,KAAKoH,QACzEO,EAAQ9E,EAAGqH,YACFrH,EAAGsH,eAEZxC,EAAQ9E,EAAGmH,YACFnH,EAAGoH,cAEdjK,KAAKuH,SAAWI,EAChB3H,KAAKoK,UAAYxC,GAGnBqB,EAAAhH,UAAA4I,kBAAA,WACE7K,KAAK7F,eACA6F,KAAKoH,QAAUpH,KAAKc,SAASxG,iBAAmB0F,KAAKuH,UACxDvH,KAAKoH,QAAUpH,KAAKoH,OACpBpH,KAAK2C,SAASuF,SAASlI,KAAK6C,GAAI,WACvB7C,KAAKoH,QAAUpH,KAAKc,SAASxG,iBAAmB0F,KAAKuH,WAC9DvH,KAAKoH,QAAUpH,KAAKoH,OACpBpH,KAAK2C,SAAS2F,YAAYtI,KAAK6C,GAAI,WAKrC,QADyCwD,EAFrCd,EAAOvF,KAAKc,SAASrG,QAASuN,EAAUhI,KAAKc,SAASvG,QAEtDiQ,EAAexK,KAAKwG,KAAK/F,OAAS,EACf,GAAhB+J,EAAmBA,KACxBnE,EAASrG,KAAKwG,KAAKgE,IACPM,YACVvF,EAAOJ,KAAK4F,IAAIxF,EAAMc,EAAOK,MAAM7E,EAAIwE,EAAOK,MAAMnB,MACpDyC,EAAU7C,KAAK4F,IAAI/C,EAAS3B,EAAOK,MAAM5E,EAAIuE,EAAOK,MAAMpB,OAI1DtF,KAAKgI,UAAYA,GAAWhI,KAAKuF,OAASA,IAC5CvF,KAAKgI,QAAUA,EACfhI,KAAKuF,KAAOA,EACRvF,KAAK0C,QAAQ3G,yBACfiE,KAAK0C,QAAQ3G,wBAAwBiE,QAK3CiJ,EAAAhH,UAAA8H,gBAAA,WAME,GALI/J,KAAK0K,SACP1K,KAAK0K,QAAQ7E,eAGf7F,KAAK6K,oBACD7K,KAAKc,SAAS1F,YAAa,KACzB4P,GAAehL,KAAKc,SAAS3F,OACK,OAAlC6E,KAAKc,SAAStF,iBAChBwP,GAAehL,KAAKc,SAAStF,gBAC7BwE,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,eAAgB7C,KAAKc,SAAStF,gBAAkB,QAEhFwP,GAAehL,KAAKc,SAAS3F,OAC7B6E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,eAAgB7C,KAAKc,SAAS3F,OAAS,OAElC,OAAnC6E,KAAKc,SAASxF,kBAChB0P,GAAehL,KAAKc,SAASxF,iBAC7B0E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,gBAAiB7C,KAAKc,SAASxF,iBAAmB,QAElF0P,GAAehL,KAAKc,SAAS3F,OAC7B6E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,gBAAiB7C,KAAKc,SAAS3F,OAAS,OAE1E6E,KAAKyH,aAAezH,KAAKuH,SAAWyD,GAAehL,KAAKgI,YACpDiD,GAAgBjL,KAAKc,SAAS3F,OACG,OAAjC6E,KAAKc,SAASzF,gBAChB4P,GAAgBjL,KAAKc,SAASzF,eAC9B2E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,cAAe7C,KAAKc,SAASzF,eAAiB,QAE9E4P,GAAgBjL,KAAKc,SAAS3F,OAC9B6E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,cAAe7C,KAAKc,SAAS3F,OAAS,OAEhC,OAApC6E,KAAKc,SAASvF,mBAChB0P,GAAgBjL,KAAKc,SAASvF,kBAC9ByE,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,iBAAkB7C,KAAKc,SAASvF,kBAAoB,QAEpF0P,GAAgBjL,KAAKc,SAAS3F,OAC9B6E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,iBAAkB7C,KAAKc,SAAS3F,OAAS,OAE3E6E,KAAK0H,cAAgB1H,KAAKoK,UAAYa,GAAgBjL,KAAKuF,UAE3DvF,KAAKyH,aAAezH,KAAKuH,SAAWvH,KAAKc,SAAS3F,QAAU6E,KAAKgI,QACjEhI,KAAK0H,cAAgB1H,KAAKoK,UAAYpK,KAAKc,SAAS3F,QAAU6E,KAAKuF,KACnEvF,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,eAAgB,OAChD7C,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,gBAAiB,OACjD7C,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,cAAe,OAC/C7C,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,iBAAkB,OAEpD7C,KAAKkL,aAAajD,iBAElBjI,KAAKmL,aAEDnL,KAAKc,SAAS3G,aAChB6F,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,QAAU7C,KAAKgI,QAAUhI,KAAKyH,YAAczH,KAAKc,SAAS3F,OAAU,MACpG6E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,SAAW7C,KAAKuF,KAAOvF,KAAK0H,aAAe1H,KAAKc,SAAS3F,OAAU,QAEnG6E,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,QAAS,IACzC7C,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,SAAU,KAI5C,QADiDwD,EAA7CmE,EAAuBxK,KAAKwG,KAAK/F,OAAS,EACvB,GAAhB+J,EAAmBA,KACxBnE,EAASrG,KAAKwG,KAAKgE,IACZY,UACP/E,EAAOgF,KAAKC,SACZjF,EAAOqD,OAAO4B,SAUhB,GAPAlL,WAAWJ,KAAK0J,OAAO3G,KAAK/C,MAAO,KAO/BA,KAAK0C,QAAQ6I,eAAgB,KAC3BC,EAAkB,EACtBxL,KAAKwG,KAAKiF,QAAO,SAAC7H,GACZA,EAAKqB,IAAMrB,EAAKgE,OAAS4D,IAC3BA,EAAkBrG,KAAKuG,KAAK9H,EAAKqB,IAAMrB,EAAKgE,WAGhD4D,GAAyC,EAAtBxL,KAAK0C,QAAQvH,OAAa,EAC7C6E,KAAK0C,QAAQiJ,qBAAqBH,GAClCxL,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,SAAU2I,EAAkB,QAIhEvC,EAAAhH,UAAAkJ,WAAA,WACoC,WAA9BnL,KAAKc,SAAShC,aAA6BkB,KAAKoH,OAEX,kBAA9BpH,KAAKc,SAAShC,aAAmCkB,KAAK4L,eAC/D5L,KAAK2C,SAASuF,SAASlI,KAAK6C,GAAI,gBACO,SAA9B7C,KAAKc,SAAShC,aAA2BkB,KAAK4L,iBAAkB5L,KAAKoH,QAC9EpH,KAAK2C,SAAS2F,YAAYtI,KAAK6C,GAAI,gBAJnC7C,KAAK2C,SAASuF,SAASlI,KAAK6C,GAAI,gBAMlC7C,KAAK6K,oBACL7K,KAAK4I,YAAYnI,OAAS0E,KAAK4F,IAAI/K,KAAKgI,QAAS7C,KAAKC,MAAMpF,KAAKuH,SAAWvH,KAAKyH,eAAiB,EAClGzH,KAAKyI,SAAShI,OAAS0E,KAAK4F,IAAI/K,KAAKuF,KAAMJ,KAAKC,MAAMpF,KAAKoK,UAAYpK,KAAK0H,gBAAkB,EAC9F1H,KAAK8D,MAAMC,gBAGbkF,EAAAhH,UAAA4J,QAAA,SAAQC,GACFA,EAAcpF,MAAMpB,OAASzJ,YAC/BiQ,EAAcpF,MAAMpB,KAAOtF,KAAKc,SAASnG,gBACzCmR,EAAclI,KAAK0B,KAAOwG,EAAcpF,MAAMpB,KAC9CwG,EAAclF,eAEZkF,EAAcpF,MAAMnB,OAAS1J,YAC/BiQ,EAAcpF,MAAMnB,KAAOvF,KAAKc,SAASlG,gBACzCkR,EAAclI,KAAK2B,KAAOuG,EAAcpF,MAAMnB,KAC9CuG,EAAclF,gBAEe,IAA3BkF,EAAcpF,MAAM5E,IAAuC,IAA3BgK,EAAcpF,MAAM7E,EACtD7B,KAAK+L,iBAAiBD,GACb9L,KAAK0F,eAAeoG,EAAcpF,SACtC1G,KAAKc,SAAS7B,kBACjB6M,EAAchB,WAAY,EAC1BkB,QAAQC,KAAK,6EACXC,KAAKC,UAAUL,EAAclI,KAAM,CAAC,OAAQ,OAAQ,IAAK,QAExD5D,KAAKc,SAAS3B,8BAGjB2M,EAAchB,WAAY,EAF1B9K,KAAK+L,iBAAiBD,IAK1B9L,KAAKwG,KAAK4F,KAAKN,GACf9L,KAAKqM,2BAGPpD,EAAAhH,UAAAqK,WAAA,SAAWR,GACT9L,KAAKwG,KAAK+F,OAAOvM,KAAKwG,KAAKhF,QAAQsK,GAAgB,GACnD9L,KAAKqM,0BACDrM,KAAK0C,QAAQvG,qBACf6D,KAAK0C,QAAQvG,oBAAoB2P,EAAclI,KAAMkI,IAIzD7C,EAAAhH,UAAAyD,eAAA,SAAe9B,OACT4I,GAAsD,EAO1D,GANIxM,KAAK0C,QAAQtG,uBACfoQ,GAAaxM,KAAK0C,QAAQtG,qBAAqBwH,KAE5C4I,GAAaxM,KAAKyM,mBAAmB7I,KACxC4I,GAAY,IAETA,EAAW,KACRE,EAAI1M,KAAK2M,iBAAiB/I,GAC5B8I,IACFF,EAAYE,GAGhB,OAAOF,GAGTvD,EAAAhH,UAAAwK,mBAAA,SAAmB7I,OACXgJ,GAA+B,EAAVhJ,EAAK/B,IAAoB,EAAV+B,EAAK9B,EACzC+K,EAAcjJ,EAAK0B,KAAO1B,EAAK9B,GAAK9B,KAAKc,SAAStG,QAClDsS,EAAclJ,EAAK2B,KAAO3B,EAAK/B,GAAK7B,KAAKc,SAASpG,QAClDG,EAAc+I,EAAK/I,cAAgBgB,UAAYmE,KAAKc,SAASjG,YAAc+I,EAAK/I,YAChFE,EAAc6I,EAAK7I,cAAgBc,UAAYmE,KAAKc,SAAS/F,YAAc6I,EAAK7I,YAChFD,EAAc8I,EAAK9I,cAAgBe,UAAYmE,KAAKc,SAAShG,YAAc8I,EAAK9I,YAChFE,EAAc4I,EAAK5I,cAAgBa,UAAYmE,KAAKc,SAAS9F,YAAc4I,EAAK5I,YAChF+R,EAAenJ,EAAK0B,MAAQzK,GAAe+I,EAAK0B,MAAQvK,EACxDiS,EAAepJ,EAAK2B,MAAQzK,GAAe8I,EAAK2B,MAAQvK,EACxDiS,EAAerJ,EAAK3I,cAAgBY,UAAYmE,KAAKc,SAAS7F,YAAc2I,EAAK3I,YACjFiS,EAAetJ,EAAK1I,cAAgBW,UAAYmE,KAAKc,SAAS5F,YAAc0I,EAAK1I,YACjFiS,EAAOvJ,EAAK0B,KAAO1B,EAAK2B,KAG9B,QAASqH,GAAsBC,GAAeC,GAAeC,GAAgBC,GAF3DC,GAAgBE,GACAA,GAAhBD,IAIpBjE,EAAAhH,UAAA0K,iBAAA,SAAiB/I,GAEf,QADiDyC,EAA7CmE,EAAuBxK,KAAKwG,KAAK/F,OAAS,GACvB,EAAhB+J,EAAmBA,IAExB,IADAnE,EAASrG,KAAKwG,KAAKgE,IACR9D,QAAU9C,GAAQqF,EAAkBC,uBAAuB7C,EAAOK,MAAO9C,GAClF,OAAOyC,EAGX,OAAO,GAGT4C,EAAAhH,UAAAmL,kBAAA,SAAkBxJ,GAGhB,QADiDyC,EAD3C1E,EAA2C,GAC7C6I,EAAuBxK,KAAKwG,KAAK/F,OAAS,GACvB,EAAhB+J,EAAmBA,KACxBnE,EAASrG,KAAKwG,KAAKgE,IACR9D,QAAU9C,GAAQqF,EAAkBC,uBAAuB7C,EAAOK,MAAO9C,IAClFjC,EAAEyK,KAAK/F,GAGX,OAAO1E,GAGTsH,EAAAhH,UAAA8J,iBAAA,SAAiBD,GACX9L,KAAK4J,wBAAwBkC,EAAcpF,QAC7CoF,EAAchB,WAAY,EAC1BgB,EAAclI,KAAK9B,EAAIgK,EAAcpF,MAAM5E,EAC3CgK,EAAclI,KAAK/B,EAAIiK,EAAcpF,MAAM7E,EAC3CiK,EAAclF,gBAEdkF,EAAchB,WAAY,EACrB9K,KAAKc,SAAS7B,iBACjB+M,QAAQC,KAAK,oDACXC,KAAKC,UAAUL,EAAclI,KAAM,CAAC,OAAQ,OAAQ,IAAK,SAKjEqF,EAAAhH,UAAA2H,wBAAA,SAAwByD,EAAuBC,QAAA,IAAAA,IAAAA,EAAA,KACvB,IAAlBD,EAAQ/H,OACV+H,EAAQ/H,KAAOtF,KAAKc,SAASnG,kBAET,IAAlB0S,EAAQ9H,OACV8H,EAAQ9H,KAAOvF,KAAKc,SAASlG,iBAE/BoF,KAAK6K,oBAEL,QADqC0C,EAAjCC,EAAYF,EAAazL,GAAK,EAC3B2L,EAAYxN,KAAKuF,KAAMiI,IAG5B,IAFAH,EAAQxL,EAAI2L,EACZD,EAAYD,EAAaxL,GAAK,EACvByL,EAAYvN,KAAKgI,QAASuF,IAE/B,GADAF,EAAQvL,EAAIyL,GACPvN,KAAK0F,eAAe2H,GACvB,OAAO,MAIPI,EAAezN,KAAKc,SAASpG,SAAWsF,KAAKuF,KAAO8H,EAAQ9H,KAC5DmI,EAAkB1N,KAAKc,SAAStG,SAAWwF,KAAKgI,QAAUqF,EAAQ/H,KAExE,OADkBtF,KAAKuF,MAAQvF,KAAKgI,SAAWyF,IAC7BC,EAIPD,IACTJ,EAAQxL,EAAI7B,KAAKuF,OACjB8H,EAAQvL,EAAI,KALZuL,EAAQvL,EAAI9B,KAAKgI,UACjBqF,EAAQxL,EAAI,KAUhBoH,EAAAhH,UAAA4H,yBAAA,SAAyBjG,OACjB+J,EAAU7G,OAAOC,OAAO,GAAInD,GAElC,OADA5D,KAAK4J,wBAAwB+D,GACtBA,GAGT1E,EAAAhH,UAAA6H,wBAAA,SAAwBlG,OAClBgK,EAAyC,CAAC/L,EAAG,EAAGC,EAAG,GACvD8L,EAAe5N,KAAKwG,KAAKqH,OAAM,SAAEC,EAAWC,OACpCC,EAAa,CAACnM,EAAGkM,EAAKrH,MAAM7E,EAAIkM,EAAKrH,MAAMnB,KAAO,EAAGzD,EAAGiM,EAAKrH,MAAM5E,EAAIiM,EAAKrH,MAAMpB,KAAO,GAC/F,OAAqD,IAAjDlG,EAAcsC,aAAaoM,EAAME,GAC5BA,EAEAF,GAERF,OAEGD,EAAU7G,OAAOC,OAAO,GAAInD,GAElC,OADA5D,KAAK4J,wBAAwB+D,EAASC,GAC/BD,GAGT1E,EAAAhH,UAAAiD,kBAAA,SAAkBpD,EAAWmM,EAA0BC,OAC/CC,EAAWF,EAAenM,EAAI9B,KAAKyH,aACzC,OAAIyG,EACKC,EAEAhJ,KAAK4F,IAAIoD,EAAU,IAI9BlF,EAAAhH,UAAAoD,kBAAA,SAAkBxD,EAAWoM,EAA0BC,OAC/CC,EAAWF,EAAepM,EAAI7B,KAAK0H,cACzC,OAAIwG,EACKC,EAEAhJ,KAAK4F,IAAIoD,EAAU,IAI9BlF,EAAAhH,UAAAmM,kBAAA,SAAkBtM,GAChB,OAAOA,EAAI9B,KAAKyH,aAGlBwB,EAAAhH,UAAAoM,kBAAA,SAAkBxM,GAChB,OAAOA,EAAI7B,KAAK0H,kCAtenB4G,EAAAA,UAASrO,KAAA,CAAC,CACTsO,SAAU,WACVC,SAAA,4WAEAC,cAAeC,EAAAA,kBAAkBtV,44BA3BjCuV,EAAAA,kBAMAC,EAAAA,iBARAC,EAAAA,yBAIAC,EAAAA,2CA4BCC,EAAAA,SAieH9F,GA3cE,SAAAA,EAAYpG,EAAuBF,EAA4BmB,EAAiCT,GAA7DrD,KAAA2C,SAAAA,EAA4B3C,KAAA8D,MAAAA,EAAiC9D,KAAAqD,KAAAA,EARhGrD,KAAA4I,YAAc,GACd5I,KAAAyI,SAAW,GAQTzI,KAAK6C,GAAKA,EAAGmM,cACbhP,KAAKc,SAAWoL,KAAK+C,MAAM/C,KAAKC,UAAUvS,IAC1CoG,KAAKqM,wBAA0BjN,EAAcO,SAASK,KAAK+J,gBAAgBhH,KAAK/C,MAAO,GACvFA,KAAKoH,QAAS,EACdpH,KAAKuH,SAAW,EAChBvH,KAAKoK,UAAY,EACjBpK,KAAKwG,KAAO,GACZxG,KAAKyH,YAAc,EACnBzH,KAAK0H,aAAe,EACpB1H,KAAK4L,gBAAiB,EACtB5L,KAAKuK,UAAY,IAAIvI,EAAkBhC,MACvCA,KAAK0K,QAAU,IAAI9E,EAAgB5F,MACnCA,KAAKkL,aAAe,IAAIhE,EAAiBlH,MC9D7C,cAAA,ICHItE,EACAC,ECJJuT,GAgBEA,EAAAjN,UAAAC,QAAA,kBACSlC,KAAKa,gBACLb,KAAKmP,oBACLnP,KAAKoP,YAGdF,EAAAjN,UAAAoN,UAAA,WACMrP,KAAKa,SAASC,SAAS1C,OACzB4B,KAAKsP,gBACLtP,KAAKuP,UAAUvP,KAAKmP,gBAIxBD,EAAAjN,UAAAqN,cAAA,WACE,GAAItP,KAAKoP,WAAY,KACbtN,EAAY9B,KAAKoP,WAAW1I,MAAM5E,EAClCD,EAAY7B,KAAKoP,WAAW1I,MAAM7E,EACxC7B,KAAKoP,WAAW1I,MAAM5E,EAAI9B,KAAKoP,WAAWxL,KAAK9B,GAAK,EACpD9B,KAAKoP,WAAW1I,MAAM7E,EAAI7B,KAAKoP,WAAWxL,KAAK/B,GAAK,EAChD7B,KAAKa,SAAS6E,eAAe1F,KAAKoP,WAAW1I,QAC/C1G,KAAKoP,WAAW1I,MAAM5E,EAAIA,EAC1B9B,KAAKoP,WAAW1I,MAAM7E,EAAIA,IAE1B7B,KAAKoP,WAAWhE,UAChBpL,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAKmP,aAAavL,KAAK9B,GAAK,EACxD9B,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAKmP,aAAavL,KAAK/B,GAAK,EACxD7B,KAAKoP,WAAavT,aAMxBqT,EAAAjN,UAAAuN,gBAAA,WACMxP,KAAKoP,aACPpP,KAAKoP,WAAW1I,MAAM5E,EAAI9B,KAAKoP,WAAWxL,KAAK9B,GAAK,EACpD9B,KAAKoP,WAAW1I,MAAM7E,EAAI7B,KAAKoP,WAAWxL,KAAK/B,GAAK,EACpD7B,KAAKoP,WAAWhE,UAChBpL,KAAKoP,WAAavT,YAItBqT,EAAAjN,UAAAwN,YAAA,WACMzP,KAAKoP,aACPpP,KAAKoP,WAAWM,iBAAiB1P,KAAKoP,WAAW1I,MAAO1G,KAAKoP,WAAWxL,MACxE5D,KAAKoP,WAAavT,YAItBqT,EAAAjN,UAAAsN,UAAA,SAAUI,OACFC,EAA6B5P,KAAKa,SAAS6E,eAAeiK,EAASjJ,OACzE,GAAIkJ,IAAmD,IAA1BA,GAAkCA,EAAsBC,eAAgB,KAC7FC,EAAsDF,EACtDG,EAAiBD,EAAoBpJ,MAAM5E,EAC3CkO,EAAiBF,EAAoBpJ,MAAM7E,EAC3CoO,EAAQN,EAASjJ,MAAM5E,EACvBoO,EAAQP,EAASjJ,MAAM7E,EAC7BiO,EAAoBpJ,MAAM5E,EAAI6N,EAAS/L,KAAK9B,GAAK,EACjDgO,EAAoBpJ,MAAM7E,EAAI8N,EAAS/L,KAAK/B,GAAK,EACjD8N,EAASjJ,MAAM5E,EAAIgO,EAAoBlM,KAAK9B,GAAK,EACjD6N,EAASjJ,MAAM7E,EAAIiO,EAAoBlM,KAAK/B,GAAK,EAC7C7B,KAAKa,SAAS6E,eAAeoK,EAAoBpJ,QAAU1G,KAAKa,SAAS6E,eAAeiK,EAASjJ,QACnGiJ,EAASjJ,MAAM5E,EAAImO,EACnBN,EAASjJ,MAAM7E,EAAIqO,EACnBJ,EAAoBpJ,MAAM5E,EAAIiO,EAC9BD,EAAoBpJ,MAAM7E,EAAImO,IAE9BF,EAAoB1E,UACpBpL,KAAKoP,WAAaU,yBA9EzB/N,EAAAA,sDAHOoO,KAqFRjB,GA5EE,SAAAA,EAAYC,GACVnP,KAAKmP,aAAeA,EACpBnP,KAAKa,SAAWsO,EAAatO,aDP7BuP,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPEC,EAAmB,GASzB,SAAgBC,EAAO/P,EAAsCkE,EAAcE,EAAa0C,EAAeC,EAChF/J,EAAegT,EACfC,EAAiCpH,EAAkBqH,GACxErV,EAAoBmF,EAASC,SAASpF,kBACtCC,EAAckF,EAASC,SAASnF,YAChCyU,EAAkBvP,EAASgC,GAC3BwN,EAAc3G,EACd4G,EAAkBS,MAEZ7G,EAAckG,EAAgBlG,YAC9BC,EAAeiG,EAAgBjG,aAC/B6G,EAAaZ,EAAgBtL,WAC7BmM,EAAYb,EAAgBpL,UAC5BkM,EAAgBjM,EAAMgM,EACtBE,EAAmBhH,EAAe8G,EAAYhM,EAAM2C,EAC1D,GAAIiJ,EAAUnQ,QAAU7C,EAAE6C,SAAWyQ,EAAmBzV,EAAmB,CAEzE,GADA0V,IACKf,GAAeC,IAAoBA,EAAgB1S,GAAM8S,EAC5D,OAEFA,EAAYW,EAAc,EAAGP,EAAuBD,QAC/C,GAAIA,EAAUnQ,QAAU7C,EAAE6C,SAAuB,EAAZuQ,GAAiBC,EAAgBxV,EAAmB,CAE9F,GADA4V,IACKjB,GAAeC,IAAoBA,EAAgBxS,GAAM2S,EAC5D,OAEFA,EAAYY,GAAe,EAAGP,EAAuBD,QAC5CA,EAAUnQ,UAAY7C,EAAE6C,SACjC6Q,QAGIC,EAAkBR,EAAa9G,EAAcnF,EAAO4C,EACpD8J,EAAiB1M,EAAOiM,EAC9B,GAAIH,EAAUtQ,QAAU1C,EAAE0C,SAAWiR,GAAmB9V,EAAmB,CAEzE,GADAgW,IACKrB,GAAeC,IAAoBA,EAAgBzS,GAAM0S,EAC5D,OAEFA,EAAYoB,EAAgB,EAAGb,EAAuBD,QACjD,GAAIA,EAAUtQ,QAAU1C,EAAE0C,SAAwB,EAAbyQ,GAAkBS,EAAiB/V,EAAmB,CAEhG,GADAkW,IACKvB,GAAeC,IAAoBA,EAAgBvS,GAAMyS,EAC5D,OAEFA,EAAYmB,GAAiB,EAAGb,EAAuBD,QAC9CA,EAAUtQ,UAAY1C,EAAE0C,SACjCsR,IAIJ,SAASR,EAAcS,EAAchB,EAAiCD,OAChEnQ,EAAUmQ,EAAUnQ,QACxB,OAAOqR,YAAW,aACX3B,IAA6B,IAAV0B,GAAe1B,EAAgBpL,UAAYrJ,EAAc,IAC/E4V,IAEFnB,EAAgBpL,WAAa8M,EAAOnW,EACpC+E,GAAWoR,EAAOnW,EAClBmV,EAAsB,CAACvQ,QAASsQ,EAAUtQ,QAASG,QAASA,KAC3DiQ,GAGL,SAASgB,EAAgBG,EAAchB,EAAiCD,OAClEtQ,EAAUsQ,EAAUtQ,QACxB,OAAOwR,YAAW,aACX3B,IAA6B,IAAV0B,GAAe1B,EAAgBtL,WAAanJ,EAAc,IAChFkW,IAEFzB,EAAgBtL,YAAcgN,EAAOnW,EAErCmV,EAAsB,CAACvQ,QADvBA,GAAWuR,EAAOnW,EACuB+E,QAASmQ,EAAUnQ,WAC3DiQ,GAGL,SAAgBqB,IACdH,IACAN,IACAnB,EAAkBvU,UAGpB,SAASgW,IACPD,IACAF,IAGF,SAASH,IACPH,IACAE,IAGF,SAASM,IACHrB,IACF0B,cAAc1B,GACdA,EAAY,GAIhB,SAASmB,IACHlB,IACFyB,cAAczB,GACdA,EAAY,GAIhB,SAASc,IACHZ,IACFuB,cAAcvB,GACdA,EAAY,GAIhB,SAASU,IACHX,IACFwB,cAAcxB,GACdA,EAAY,GEhIhB,IAAAyB,GA6CEA,EAAAjQ,UAAAC,QAAA,kBACSlC,KAAKa,gBACLb,KAAKmP,cAGd+C,EAAAjQ,UAAA5D,UAAA,SAAU8T,EAAmBC,GAC3B,IAAIpS,KAAKa,SAASC,SAASzC,WAAc+T,EAWvC,OAAO,EAVPpS,KAAKqS,iBAAmB,OAClBC,EAAStS,KAAKoM,KAAKpM,KAAKmP,aAAcgD,GAO5C,OANKG,GACHtS,KAAKuS,mBAEPvS,KAAKqS,iBAAmB,GACxBrS,KAAKwS,gBAAkB,GACvBxS,KAAKyS,oBAAsB,GACpBH,GAMXJ,EAAAjQ,UAAAsQ,iBAAA,WAEE,QADI9L,EAAIzG,KAAKwS,gBAAgB/R,OAAS,GAC1B,EAALgG,EAAQA,IACbzG,KAAK0S,qBAAqB1S,KAAKwS,gBAAgB/L,KAInDyL,EAAAjQ,UAAA0Q,aAAA,WAIE,QADIC,EAFAnM,EAAI,EACFF,EAAYvG,KAAK6S,YAAYpS,OAE5BgG,EAAIF,EAAGE,KACZmM,EAAa5S,KAAK6S,YAAYpM,IACnBC,MAAM5E,EAAI8Q,EAAWhP,KAAK9B,GAAK,EAC1C8Q,EAAWlM,MAAM7E,EAAI+Q,EAAWhP,KAAK/B,GAAK,EAC1C+Q,EAAWxH,UAEbpL,KAAK6S,YAAc,GACnB7S,KAAK8S,gBAAkB,IAGzBZ,EAAAjQ,UAAA8Q,eAAA,WAIE,QADIH,EAFAnM,EAAI,EACFF,EAAYvG,KAAK6S,YAAYpS,OAE5BgG,EAAIF,EAAGE,KACZmM,EAAa5S,KAAK6S,YAAYpM,IACnBiJ,iBAAiBkD,EAAWlM,MAAOkM,EAAWhP,MAE3D5D,KAAK6S,YAAc,GACnB7S,KAAK8S,gBAAkB,IAGzBZ,EAAAjQ,UAAA+Q,cAAA,WAGE,QAFIvM,EAAYzG,KAAK6S,YAAYpS,OAAS,EACtCwS,GAAS,GACD,EAALxM,EAAQA,IACTzG,KAAKkT,gBAAgBlT,KAAK6S,YAAYpM,GAAIA,KAC5CwM,GAAS,GAGTA,GACFjT,KAAKgT,iBAIDd,EAAAjQ,UAAAmK,KAAR,SAAa+C,EAA8CgD,GACzD,GAAInS,KAAKa,SAAS4L,mBAAmB0C,EAAazI,OAChD,OAAO,EAET,GAAkB,KAAdyL,EACF,OAAO,EAMT,QAHsBgB,EADhBxR,EAA2C3B,KAAKa,SAASuM,kBAAkB+B,EAAazI,OAC1FD,EAAI9E,EAAElB,OAAS,EACf2S,GAAW,EACTxR,EAA2C,IACrC,EAAL6E,EAAQA,IAAK,CAElB,IADA0M,EAAgBxR,EAAE8E,MACIzG,KAAKmP,aAAc,CACvCiE,GAAW,EACX,MAEF,IAAKD,EAActD,eAAgB,CACjCuD,GAAW,EACX,MAKF,GAHgBpT,KAAKwS,gBAAgBa,KAAI,SAAExQ,GACzC,OAAOA,EAAG6D,MAAM5E,IAAMqR,EAAczM,MAAM5E,GAAKe,EAAG6D,MAAM7E,IAAMsR,EAAczM,MAAM7E,IAEvE,CACXuR,GAAW,EACX,MAEF,GAAIpT,KAAKsT,WAAWnB,GAAW,GAAGlL,KAAKjH,KAAMmT,EAAehE,GAC1DnP,KAAKqS,iBAAiBjG,KAAK+G,GAC3BvR,EAAEwK,KAAK+G,QACF,GAAInT,KAAKsT,WAAWnB,GAAW,GAAGlL,KAAKjH,KAAMmT,EAAehE,GACjEnP,KAAKqS,iBAAiBjG,KAAK+G,GAC3BvR,EAAEwK,KAAK+G,QACF,GAAInT,KAAKsT,WAAWnB,GAAW,GAAGlL,KAAKjH,KAAMmT,EAAehE,GACjEnP,KAAKqS,iBAAiBjG,KAAK+G,GAC3BvR,EAAEwK,KAAK+G,OACF,CAAA,IAAInT,KAAKsT,WAAWnB,GAAW,GAAGlL,KAAKjH,KAAMmT,EAAehE,GAG5D,CACLiE,GAAW,EACX,MAJApT,KAAKqS,iBAAiBjG,KAAK+G,GAC3BvR,EAAEwK,KAAK+G,IAMX,IAAKC,IAEM,GADT3M,EAAIzG,KAAKqS,iBAAiBkB,YAAY3R,EAAE,KAGtC,QADI4R,EAAIxT,KAAKqS,iBAAiB5R,OAAS,EAC3BgG,GAAL+M,EAAQA,IACbL,EAAgBnT,KAAKqS,iBAAiBmB,GACtCxT,KAAKqS,iBAAiBoB,MACtBzT,KAAK0S,qBAAqBS,GAC1BnT,KAAK0T,qBAAqBP,GAIhC,OAAOC,GAGDlB,EAAAjQ,UAAA0R,SAAR,SAAiB7D,EAAqDX,GACpE,QAAKnP,KAAKa,SAASC,SAAStC,eAAeG,QAG3CqB,KAAK4T,gBAAgB9D,GACrBA,EAAoBpJ,MAAM7E,EAAIsN,EAAazI,MAAM7E,EAAIsN,EAAazI,MAAMnB,KACpEvF,KAAKoM,KAAK0D,EAAqB9P,KAAK6T,YACtC/D,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,IACV,IAEP9P,KAAK0S,qBAAqB5C,IAErB,KAGDoC,EAAAjQ,UAAA8R,SAAR,SAAiBjE,EAAqDX,GACpE,QAAKnP,KAAKa,SAASC,SAAStC,eAAeC,QAG3CuB,KAAK4T,gBAAgB9D,GACrBA,EAAoBpJ,MAAM7E,EAAIsN,EAAazI,MAAM7E,EAAIiO,EAAoBpJ,MAAMnB,KAC3EvF,KAAKoM,KAAK0D,EAAqB9P,KAAKgU,YACtClE,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,IACV,IAEP9P,KAAK0S,qBAAqB5C,IAErB,KAGDoC,EAAAjQ,UAAAgS,QAAR,SAAgBnE,EAAqDX,GACnE,QAAKnP,KAAKa,SAASC,SAAStC,eAAeE,OAG3CsB,KAAK4T,gBAAgB9D,GACrBA,EAAoBpJ,MAAM5E,EAAIqN,EAAazI,MAAM5E,EAAIqN,EAAazI,MAAMpB,KACpEtF,KAAKoM,KAAK0D,EAAqB9P,KAAKkU,WACtCpE,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,IACV,IAEP9P,KAAK0S,qBAAqB5C,IAErB,KAGDoC,EAAAjQ,UAAAkS,QAAR,SAAgBrE,EAAqDX,GACnE,QAAKnP,KAAKa,SAASC,SAAStC,eAAeI,OAG3CoB,KAAK4T,gBAAgB9D,GACrBA,EAAoBpJ,MAAM5E,EAAIqN,EAAazI,MAAM5E,EAAIgO,EAAoBpJ,MAAMpB,KAC3EtF,KAAKoM,KAAK0D,EAAqB9P,KAAKoU,WACtCtE,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,IACV,IAEP9P,KAAK0S,qBAAqB5C,IAErB,KAGDoC,EAAAjQ,UAAA2R,gBAAR,SAAwBzE,OAClB1I,EAAIzG,KAAKwS,gBAAgBhR,QAAQ2N,IAC1B,IAAP1I,IACFA,EAAIzG,KAAKwS,gBAAgBpG,KAAK+C,GAAgB,EAC9CnP,KAAKyS,oBAAoBhM,GAAK,IAEhCzG,KAAKyS,oBAAoBhM,GAAG2F,KAAK,CAACtK,EAAGqN,EAAazI,MAAM5E,EAAGD,EAAGsN,EAAazI,MAAM7E,KAG3EqQ,EAAAjQ,UAAAyQ,qBAAR,SAA6BvD,OACrB1I,EAAIzG,KAAKwS,gBAAgBhR,QAAQ2N,GACjCkF,EAAerU,KAAKyS,oBAAoBhM,GAAGgN,MAC5CY,IAGLlF,EAAazI,MAAM5E,EAAIuS,EAAavS,EACpCqN,EAAazI,MAAM7E,EAAIwS,EAAaxS,EACpCsN,EAAa/D,UACRpL,KAAKyS,oBAAoBhM,GAAGhG,SAC/BT,KAAKwS,gBAAgBjG,OAAO9F,EAAG,GAC/BzG,KAAKyS,oBAAoBlG,OAAO9F,EAAG,MAI/ByL,EAAAjQ,UAAA6R,YAAR,SAAoB3E,GAClB,GAAInP,KAAK6S,YAAYrR,QAAQ2N,GAAgB,EAC3CnP,KAAK6S,YAAYzG,KAAK+C,GACtBnP,KAAK8S,gBAAgB1G,KAAK,CAAC,CAACtK,EAAGqN,EAAavL,KAAK9B,GAAK,EAAGD,EAAGsN,EAAavL,KAAK/B,GAAK,GACjF,CAACC,EAAGqN,EAAazI,MAAM5E,EAAGD,EAAGsN,EAAazI,MAAM7E,SAC7C,KACC4E,EAAIzG,KAAK6S,YAAYrR,QAAQ2N,GACnCnP,KAAK8S,gBAAgBrM,GAAG2F,KAAK,CAACtK,EAAGqN,EAAazI,MAAM5E,EAAGD,EAAGsN,EAAazI,MAAM7E,MAIzEqQ,EAAAjQ,UAAAqS,iBAAR,SAAyB7N,IACd,EAALA,IACFzG,KAAK6S,YAAYtG,OAAO9F,EAAG,GAC3BzG,KAAK8S,gBAAgBvG,OAAO9F,EAAG,KAI3ByL,EAAAjQ,UAAAyR,qBAAR,SAA6BvE,OACrB1I,EAAIzG,KAAK6S,YAAYrR,QAAQ2N,IAC1B,EAAL1I,IACFzG,KAAK8S,gBAAgBrM,GAAGgN,MACnBzT,KAAK8S,gBAAgBrS,SACxBT,KAAK6S,YAAYtG,OAAO9F,EAAG,GAC3BzG,KAAK8S,gBAAgBvG,OAAO9F,EAAG,MAK7ByL,EAAAjQ,UAAAiR,gBAAR,SAAwBN,EAA4CnM,GAKlE,QAFI8N,EAAczS,EAAGD,EAFf2S,EAAOxU,KAAK8S,gBAAgBrM,GAC9B+M,EAAIgB,EAAK/T,OAAS,EAElBwS,GAAS,GACD,EAALO,EAAQA,IACbe,EAAeC,EAAKhB,GACpB1R,EAAI8Q,EAAWlM,MAAM5E,EACrBD,EAAI+Q,EAAWlM,MAAM7E,EACrB+Q,EAAWlM,MAAM5E,EAAIyS,EAAazS,EAClC8Q,EAAWlM,MAAM7E,EAAI0S,EAAa1S,EAC7B7B,KAAKa,SAAS8L,iBAAiBiG,EAAWlM,QAK7CkM,EAAWlM,MAAM5E,EAAIA,EACrB8Q,EAAWlM,MAAM7E,EAAIA,IALrB+Q,EAAWxH,UACXoJ,EAAKjI,OAAOiH,EAAI,EAAGgB,EAAK/T,OAAS+S,EAAI,GACrCP,GAAS,GASb,OAHIuB,EAAK/T,OAAS,GAChBT,KAAKsU,iBAAiB7N,GAEjBwM,uBAnTVlR,EAAAA,sDAHOoO,KAwTR+B,GAhSE,SAAAA,EAAY/C,GACVnP,KAAK6S,YAAc,GACnB7S,KAAKwS,gBAAkB,GACvBxS,KAAKyS,oBAAsB,GAC3BzS,KAAK8S,gBAAkB,GACvB9S,KAAKmP,aAAeA,EACpBnP,KAAKa,SAAWsO,EAAatO,SAC7Bb,KAAKsT,WAAa,CAChBc,SAAU,CAACpU,KAAKmU,QAASnU,KAAK2T,SAAU3T,KAAK+T,SAAU/T,KAAKiU,SAC5DC,SAAU,CAAClU,KAAKiU,QAASjU,KAAK2T,SAAU3T,KAAK+T,SAAU/T,KAAKmU,SAC5DN,UAAW,CAAC7T,KAAK2T,SAAU3T,KAAKiU,QAASjU,KAAKmU,QAASnU,KAAK+T,UAC5DC,UAAW,CAAChU,KAAK+T,SAAU/T,KAAKiU,QAASjU,KAAKmU,QAASnU,KAAK2T,WAE9D3T,KAAKgU,UAAY,YACjBhU,KAAK6T,UAAY,YACjB7T,KAAKoU,SAAW,WAChBpU,KAAKkU,SAAW,WCjCpB,IAAAO,GAiDEA,EAAAxS,UAAAC,QAAA,WACMlC,KAAKa,SAASwB,cAChBrC,KAAKa,SAASwB,cAAa,UAEtBrC,KAAKmP,oBACLnP,KAAKa,gBACLb,KAAKwM,UACRxM,KAAK0U,YACP1U,KAAK0U,YACL1U,KAAK2U,eAITF,EAAAxS,UAAA2S,UAAA,SAAU/W,GAAV,IAAA2E,EAAAxC,KACE,OAAQnC,EAAEgX,OACR,KAAK,EAEH,MACF,KAAK,EACL,KAAK,EAEH,OAGA7U,KAAKa,SAAS6B,QAAQ1F,WAAagD,KAAKa,SAAS6B,QAAQ1F,UAAUO,OACrEyC,KAAKa,SAAS6B,QAAQ1F,UAAUO,MAAMyC,KAAKmP,aAAavL,KAAM5D,KAAKmP,aAActR,GAGnFA,EAAEoG,kBACFpG,EAAEmG,iBACFhE,KAAK8U,aAAe9U,KAAK+U,SAAShS,KAAK/C,MACvCA,KAAKgV,iBAAmBhV,KAAKiV,SAASlS,KAAK/C,MAE3CA,KAAKqD,KAAKC,kBAAiB,WACzBd,EAAK0S,UAAY1S,EAAK2M,aAAaxM,SAASC,OAAO,WAAY,YAAaJ,EAAKsS,cACjFtS,EAAK2S,UAAY3S,EAAK3B,SAAS8B,SAASC,OAAOJ,EAAK3B,SAASgC,GAAI,YAAaL,EAAKsS,gBAErF9U,KAAKoV,QAAUpV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,UAAW5C,KAAKgV,kBAC7EhV,KAAKqV,WAAarV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,aAAc5C,KAAKgV,kBACnFhV,KAAKsV,aAAetV,KAAKmP,aAAaxM,SAASC,OAAO,SAAU,OAAQ5C,KAAKgV,kBAC7EhV,KAAKuV,SAAWvV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,WAAY5C,KAAKgV,kBAC/EhV,KAAKwV,YAAcxV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,cAAe5C,KAAKgV,kBACrFhV,KAAKmP,aAAaxM,SAASuF,SAASlI,KAAKmP,aAAatM,GAAI,wBAC1D7C,KAAK7E,OAAS6E,KAAKa,SAASC,SAAS3F,OACrC6E,KAAKgR,WAAahR,KAAKa,SAASgC,GAAGiC,WAAa9E,KAAKa,SAASgC,GAAGmO,WACjEhR,KAAKiR,UAAYjR,KAAKa,SAASgC,GAAGmC,UAAYhF,KAAKa,SAASgC,GAAGoO,UAC/DjR,KAAK+E,KAAO/E,KAAKmP,aAAapK,KAAO/E,KAAK7E,OAC1C6E,KAAKiF,IAAMjF,KAAKmP,aAAalK,IAAMjF,KAAK7E,OACxC6E,KAAK2H,MAAQ3H,KAAKmP,aAAaxH,MAC/B3H,KAAK4H,OAAS5H,KAAKmP,aAAavH,OAChC5H,KAAKyV,SAAW5X,EAAE0C,QAAUP,KAAKgR,WAAahR,KAAK7E,OAAS6E,KAAK+E,KACjE/E,KAAK0V,QAAU7X,EAAE6C,QAAUV,KAAKiR,UAAYjR,KAAK7E,OAAS6E,KAAKiF,IAC/DjF,KAAKa,SAASuB,WAAapC,KAAKmP,aAAazI,MAC7C1G,KAAKa,SAASwB,cAAa,GAC3BrC,KAAKoM,KAAO,IAAI8F,EAAalS,KAAKmP,cAClCnP,KAAK5B,KAAO,IAAI8Q,EAAalP,KAAKmP,cAClCnP,KAAKa,SAAS+K,gBAAiB,EAC/B5L,KAAKa,SAASsK,aACdnL,KAAKwU,KAAKpI,KAAK,CAACtK,EAAG9B,KAAKmP,aAAavL,KAAK9B,GAAK,EAAGD,EAAG7B,KAAKmP,aAAavL,KAAK/B,GAAK,KAGnF4S,EAAAxS,UAAA8S,SAAA,SAASlX,GACPA,EAAEoG,kBACFpG,EAAEmG,iBACF5E,EAAckB,gBAAgBzC,GAC9BmC,KAAKgR,WAAahR,KAAKa,SAASgC,GAAGiC,WAAa9E,KAAKa,SAASgC,GAAGmO,WACjEhR,KAAKiR,UAAYjR,KAAKa,SAASgC,GAAGmC,UAAYhF,KAAKa,SAASgC,GAAGoO,UAC/DL,EAAO5Q,KAAKa,SAAUb,KAAK+E,KAAM/E,KAAKiF,IAAKjF,KAAK2H,MAAO3H,KAAK4H,OAAQ/J,EAAGmC,KAAK6Q,UAC1E7Q,KAAK2V,uCAAuC5S,KAAK/C,OAEnDA,KAAK2V,uCAAuC9X,IAG9C4W,EAAAxS,UAAA0T,uCAAA,SAAuC9X,GAAvC,IAAA2E,EAAAxC,KACEA,KAAK+E,KAAOlH,EAAE0C,QAAUP,KAAKgR,WAAahR,KAAKyV,SAC/CzV,KAAKiF,IAAMpH,EAAE6C,QAAUV,KAAKiR,UAAYjR,KAAK0V,QAC7C1V,KAAK8Q,wBACL9Q,KAAK6Q,UAAUtQ,QAAU1C,EAAE0C,QAC3BP,KAAK6Q,UAAUnQ,QAAU7C,EAAE6C,QAC3BV,KAAKqD,KAAKuS,IAAG,WACXpT,EAAK3B,SAASsK,gBAIlBsJ,EAAAxS,UAAAgT,SAAA,SAASpX,GAAT,IAAA2E,EAAAxC,KACEnC,EAAEoG,kBACFpG,EAAEmG,iBAEFgO,IACAhS,KAAKsV,eACLtV,KAAKkV,YACLlV,KAAKoV,UACLpV,KAAKqV,aACLrV,KAAKmV,YACLnV,KAAKuV,WACLvV,KAAKwV,cACLxV,KAAKmP,aAAaxM,SAAS2F,YAAYtI,KAAKmP,aAAatM,GAAI,wBAC7D7C,KAAKa,SAAS+K,gBAAiB,EAC/B5L,KAAKa,SAASsK,aACdnL,KAAKwU,KAAO,GACRxU,KAAKa,SAAS6B,QAAQ1F,WAAagD,KAAKa,SAAS6B,QAAQ1F,UAAUM,KACrEuY,QAAQC,QAAQ9V,KAAKa,SAAS6B,QAAQ1F,UAAUM,KAAK0C,KAAKmP,aAAavL,KAAM5D,KAAKmP,aAActR,IAC7FkY,KAAK/V,KAAKgW,SAASjT,KAAK/C,MAAOA,KAAKiW,WAAWlT,KAAK/C,OAEvDA,KAAKgW,WAEP5V,WAAU,WACJoC,EAAK3B,WACP2B,EAAK3B,SAASuB,WAAa,KAC3BI,EAAK3B,SAASwB,cAAa,OAKjCoS,EAAAxS,UAAAgU,WAAA,WACEjW,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAKmP,aAAavL,KAAK9B,GAAK,EACxD9B,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAKmP,aAAavL,KAAK/B,GAAK,EACxD7B,KAAKmP,aAAa/D,UACdpL,KAAKoM,MACPpM,KAAKoM,KAAKuG,eAER3S,KAAK5B,MACP4B,KAAK5B,KAAKoR,kBAERxP,KAAKoM,OACPpM,KAAKoM,KAAKlK,iBACHlC,KAAKoM,MAEVpM,KAAK5B,OACP4B,KAAK5B,KAAK8D,iBACHlC,KAAK5B,OAIhBqW,EAAAxS,UAAA+T,SAAA,WACMhW,KAAKa,SAASC,SAAS9D,UAAUQ,eAAiBwC,KAAKa,SAAS6B,QAAQ1F,WACvEgD,KAAKa,SAAS6B,QAAQ1F,UAAUS,uBAChCuC,KAAKwM,YAAgC,IAAnBxM,KAAKwM,WAAsBxM,KAAKwM,UAAU9F,OAC/D1G,KAAKa,SAAS6B,QAAQ1F,UAAUS,sBAAsBuC,KAAKmP,aAAavL,KAAM5D,KAAKwM,UAAU5I,KAAM5D,KAAKa,UAE1Gb,KAAKwM,WAAY,EACjBxM,KAAKmP,aAAa/D,UAClBpL,KAAKmP,aAAaO,iBAAiB1P,KAAKmP,aAAazI,MAAO1G,KAAKmP,aAAavL,MAC1E5D,KAAKoM,MACPpM,KAAKoM,KAAK2G,iBAER/S,KAAK5B,MACP4B,KAAK5B,KAAKqR,cAERzP,KAAKoM,OACPpM,KAAKoM,KAAKlK,iBACHlC,KAAKoM,MAEVpM,KAAK5B,OACP4B,KAAK5B,KAAK8D,iBACHlC,KAAK5B,OAIhBqW,EAAAxS,UAAA6O,sBAAA,WAgBE,GAfA9Q,KAAKa,SAASuB,WAAapC,KAAKmP,aAAazI,MAC7C1G,KAAKkW,UAAYlW,KAAKa,SAASqE,kBAAkBlF,KAAK+E,KAAMI,KAAKqC,OACjExH,KAAKmW,UAAYnW,KAAKa,SAASwE,kBAAkBrF,KAAKiF,IAAKE,KAAKqC,OAChExH,KAAKoW,gBAAkBpW,KAAKmP,aAAazI,MAAM5E,EAC/C9B,KAAKqW,gBAAkBrW,KAAKmP,aAAazI,MAAM7E,EAC/C7B,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAKkW,UAC7BlW,KAAKa,SAAS4L,mBAAmBzM,KAAKmP,aAAazI,SACrD1G,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAKoW,iBAEnCpW,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAKmW,UAC7BnW,KAAKa,SAAS4L,mBAAmBzM,KAAKmP,aAAazI,SACrD1G,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAKqW,iBAEnCrW,KAAKa,SAASqK,aAAarD,gBAAgB7H,KAAKmP,aAAaxM,SAAU3C,KAAKmP,aAAatM,GAAI7C,KAAK+E,KAAM/E,KAAKiF,KAEzGjF,KAAKoW,kBAAoBpW,KAAKmP,aAAazI,MAAM5E,GAAK9B,KAAKqW,kBAAoBrW,KAAKmP,aAAazI,MAAM7E,EAAG,KACtG0S,EAAevU,KAAKwU,KAAKxU,KAAKwU,KAAK/T,OAAS,GAC9C0R,EAAY,GACZoC,EAAazS,EAAI9B,KAAKmP,aAAazI,MAAM5E,EAC3CqQ,EAAYnS,KAAKoM,KAAK8H,SACbK,EAAazS,EAAI9B,KAAKmP,aAAazI,MAAM5E,EAClDqQ,EAAYnS,KAAKoM,KAAKgI,SACbG,EAAa1S,EAAI7B,KAAKmP,aAAazI,MAAM7E,EAClDsQ,EAAYnS,KAAKoM,KAAKyH,UACbU,EAAa1S,EAAI7B,KAAKmP,aAAazI,MAAM7E,IAClDsQ,EAAYnS,KAAKoM,KAAK4H,WAExBhU,KAAKoM,KAAK/N,UAAU8T,EAAWnS,KAAKa,SAASC,SAASxC,mBACtD0B,KAAK5B,KAAKiR,YACVrP,KAAKwM,UAAYxM,KAAKa,SAAS6E,eAAe1F,KAAKmP,aAAazI,OAC5D1G,KAAKwM,WACPxM,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAKoW,gBACjCpW,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAKqW,gBAC7BrW,KAAKa,SAASC,SAAS9D,UAAUQ,gBAAoC,IAAnBwC,KAAKwM,WAAsBxM,KAAKwM,UAAU9F,QAC9F1G,KAAKa,SAASuB,WAAa,OAG7BpC,KAAKwU,KAAKpI,KAAK,CAACtK,EAAG9B,KAAKmP,aAAazI,MAAM5E,EAAGD,EAAG7B,KAAKmP,aAAazI,MAAM7E,IAE3E7B,KAAKoM,KAAK4G,gBAEZhT,KAAKa,SAASwB,cAAa,IAG7BoS,EAAAxS,UAAAqJ,OAAA,eACQgL,EAAatW,KAAKmP,aAAaU,gBAChC7P,KAAK9C,SAAWoZ,GACnBtW,KAAK9C,SAAW8C,KAAK9C,QACrB8C,KAAKuW,kBAAoBvW,KAAKwW,eAAezT,KAAK/C,MAClDA,KAAK0U,UAAY1U,KAAKmP,aAAaxM,SAASC,OAAO5C,KAAKmP,aAAatM,GAAI,YAAa7C,KAAKuW,mBAC3FvW,KAAK2U,WAAa3U,KAAKmP,aAAaxM,SAASC,OAAO5C,KAAKmP,aAAatM,GAAI,aAAc7C,KAAKuW,oBACpFvW,KAAK9C,UAAYoZ,IAC1BtW,KAAK9C,SAAW8C,KAAK9C,QACrB8C,KAAK0U,YACL1U,KAAK2U,eAITF,EAAAxS,UAAAuU,eAAA,SAAe3Y,GAAf,IAAA2E,EAAAxC,KACE,KAAInC,EAAEmD,OAAOK,aAAa,WAAoG,EAAxFxD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,oCAGpFpC,EAAcwB,0BAA0BZ,KAAKa,SAAUhD,IAI3D,GADAuB,EAAckB,gBAAgBzC,GACzBmC,KAAKa,SAASC,SAAS9D,UAAUC,eAIhC6C,EAAUM,WAAU,WACxBoC,EAAKoS,UAAU/W,GACfoY,KACCjW,KAAKa,SAASC,SAAS9D,UAAUC,YAC9BwZ,EAAczW,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,UAAWqT,GACvES,EAAmB1W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,aAAcqT,GAC/EX,EAAetV,KAAKmP,aAAaxM,SAASC,OAAO,SAAU,OAAQqT,GACnEU,EAAkB3W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,YAItE,SAASgU,EAAWC,GAClBzX,EAAckB,gBAAgBuW,IACgB,EAA1C1R,KAAKM,IAAIoR,EAAUtW,QAAU1C,EAAE0C,UAA0D,EAA1C4E,KAAKM,IAAIoR,EAAUnW,QAAU7C,EAAE6C,WAChFuV,MANEa,EAAiB9W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,WAAYqT,GAC3Ec,EAAoB/W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,cAAeqT,QAZrFjW,KAAK4U,UAAU/W,GAqBjB,SAASoY,IACP9V,aAAaL,GACbwV,IACAmB,IACAC,IACAC,IACAG,IACAC,0BAhTLhV,EAAAA,sDAHOoO,SACAxK,SAPYmJ,EAAAA,UA4TpB2F,GA5QE,SAAAA,EAAYtF,EAA8CtO,EAA8CwC,GAAArD,KAAAqD,KAAAA,EAFxGrD,KAAAwM,WAAsD,EAGpDxM,KAAKmP,aAAeA,EACpBnP,KAAKa,SAAWA,EAChBb,KAAK6Q,UAAY,CACftQ,QAAS,EACTG,QAAS,GAEXV,KAAKwU,KAAO,GCvDhB,IAAAwC,GA0CEA,EAAA/U,UAAAC,QAAA,kBACSlC,KAAKa,gBACLb,KAAKmP,cAGd6H,EAAA/U,UAAA5D,UAAA,SAAU8T,GACR,QAAInS,KAAKa,SAASC,SAASjC,iBAClBmB,KAAKoM,KAAKpM,KAAKmP,aAAcgD,IAMxC6E,EAAA/U,UAAA0Q,aAAA,WAIE,QADIC,EAFAnM,EAAI,EACFF,EAAYvG,KAAK6S,YAAYpS,OAE5BgG,EAAIF,EAAGE,KACZmM,EAAa5S,KAAK6S,YAAYpM,IACnBC,MAAM5E,EAAI8Q,EAAWhP,KAAK9B,GAAK,EAC1C8Q,EAAWlM,MAAM7E,EAAI+Q,EAAWhP,KAAK/B,GAAK,EAC1C+Q,EAAWlM,MAAMpB,KAAOsN,EAAWhP,KAAK0B,MAAQ,EAChDsN,EAAWlM,MAAMuQ,IAAMrE,EAAWhP,KAAKqT,KAAO,EAC9CrE,EAAWxH,UAEbpL,KAAK6S,YAAc,GACnB7S,KAAK8S,gBAAkB,IAGzBkE,EAAA/U,UAAA8Q,eAAA,WAIE,QADIH,EAFAnM,EAAI,EACFF,EAAYvG,KAAK6S,YAAYpS,OAE5BgG,EAAIF,EAAGE,KACZmM,EAAa5S,KAAK6S,YAAYpM,IACnBiJ,iBAAiBkD,EAAWlM,MAAOkM,EAAWhP,MAE3D5D,KAAK6S,YAAc,GACnB7S,KAAK8S,gBAAkB,IAGzBkE,EAAA/U,UAAA+Q,cAAA,WAGE,QAFIvM,EAAYzG,KAAK6S,YAAYpS,OAAS,EACtCwS,GAAS,GACD,EAALxM,EAAQA,IACTzG,KAAKkT,gBAAgBlT,KAAK6S,YAAYpM,GAAIA,KAC5CwM,GAAS,GAGTA,GACFjT,KAAKgT,iBAIDgE,EAAA/U,UAAAmK,KAAR,SAAa+C,EAA8CgD,OACnDvC,EAA6B5P,KAAKa,SAAS6E,eAAeyJ,EAAazI,OAC7E,GAAIkJ,IAAmD,IAA1BA,GAC3BA,IAA0B5P,KAAKmP,cAAgBS,EAAsBsH,gBACrE,GAAIlX,KAAKsT,WAAWnB,GAAWlL,KAAKjH,KAAM4P,EAAuBT,EAAcgD,GAC7E,OAAO,OAEJ,IAA8B,IAA1BvC,EACT,OAAO,EAET,OAAO,GAGDoH,EAAA/U,UAAA0R,SAAR,SAAiB7D,EAAqDX,EACrDgD,OACTgF,EAAUrH,EAAoBpJ,MAAM7E,EACpCuV,EAAatH,EAAoBpJ,MAAMnB,KAG7C,OAFAuK,EAAoBpJ,MAAM7E,EAAIsN,EAAazI,MAAM7E,EAAIsN,EAAazI,MAAMnB,KACxEuK,EAAoBpJ,MAAMnB,KAAO6R,EAAaD,EAAUrH,EAAoBpJ,MAAM7E,EAC7EoH,EAAkBC,uBAAuB4G,EAAoBpJ,MAAOyI,EAAazI,QAChF1G,KAAKa,SAAS4L,mBAAmBqD,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAM7E,EAAIsV,EAC9BrH,EAAoBpJ,MAAMnB,KAAO6R,GAE5B,IARLtH,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,GACjB9P,KAAKoM,KAAK+C,EAAcgD,IACjB,IAQH6E,EAAA/U,UAAA8R,SAAR,SAAiBjE,EAAqDX,EACrDgD,OACTiF,EAAatH,EAAoBpJ,MAAMnB,KAE7C,OADAuK,EAAoBpJ,MAAMnB,KAAO4J,EAAazI,MAAM7E,EAAIiO,EAAoBpJ,MAAM7E,EAC7EoH,EAAkBC,uBAAuB4G,EAAoBpJ,MAAOyI,EAAazI,QAChF1G,KAAKa,SAAS4L,mBAAmBqD,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAMnB,KAAO6R,GAE5B,IAPLtH,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,GACjB9P,KAAKoM,KAAK+C,EAAcgD,IACjB,IAOH6E,EAAA/U,UAAAgS,QAAR,SAAgBnE,EAAqDX,EACrDgD,OACRkF,EAAUvH,EAAoBpJ,MAAM5E,EACpCwV,EAAaxH,EAAoBpJ,MAAMpB,KAG7C,OAFAwK,EAAoBpJ,MAAM5E,EAAIqN,EAAazI,MAAM5E,EAAIqN,EAAazI,MAAMpB,KACxEwK,EAAoBpJ,MAAMpB,KAAOgS,EAAaD,EAAUvH,EAAoBpJ,MAAM5E,EAC7EmH,EAAkBC,uBAAuB4G,EAAoBpJ,MAAOyI,EAAazI,QAChF1G,KAAKa,SAAS4L,mBAAmBqD,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAM5E,EAAIuV,EAC9BvH,EAAoBpJ,MAAMpB,KAAOgS,GAE5B,IARLxH,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,GACjB9P,KAAKoM,KAAK+C,EAAcgD,IACjB,IAQH6E,EAAA/U,UAAAkS,QAAR,SAAgBrE,EAAqDX,EACrDgD,OACRmF,EAAaxH,EAAoBpJ,MAAMpB,KAE7C,OADAwK,EAAoBpJ,MAAMpB,KAAO6J,EAAazI,MAAM5E,EAAIgO,EAAoBpJ,MAAM5E,EAC7EmH,EAAkBC,uBAAuB4G,EAAoBpJ,MAAOyI,EAAazI,QAChF1G,KAAKa,SAAS4L,mBAAmBqD,EAAoBpJ,QAMzDoJ,EAAoBpJ,MAAMpB,KAAOgS,GAE5B,IAPLxH,EAAoB1E,UACpBpL,KAAK8T,YAAYhE,GACjB9P,KAAKoM,KAAK+C,EAAcgD,IACjB,IAOH6E,EAAA/U,UAAA6R,YAAR,SAAoB3E,GAClB,GAAInP,KAAK6S,YAAYrR,QAAQ2N,GAAgB,EAC3CnP,KAAK6S,YAAYzG,KAAK+C,GACtBnP,KAAK8S,gBAAgB1G,KAAK,CACxB,CACEtK,EAAGqN,EAAavL,KAAK9B,GAAK,EAC1BD,EAAGsN,EAAavL,KAAK/B,GAAK,EAC1ByD,KAAM6J,EAAavL,KAAK0B,MAAQ,EAChCC,KAAM4J,EAAavL,KAAK2B,MAAQ,GAElC,CACEzD,EAAGqN,EAAazI,MAAM5E,EACtBD,EAAGsN,EAAazI,MAAM7E,EACtByD,KAAM6J,EAAazI,MAAMpB,KACzBC,KAAM4J,EAAazI,MAAMnB,YAExB,KACCkB,EAAIzG,KAAK6S,YAAYrR,QAAQ2N,GACnCnP,KAAK8S,gBAAgBrM,GAAG2F,KACtB,CACEtK,EAAGqN,EAAazI,MAAM5E,EACtBD,EAAGsN,EAAazI,MAAM7E,EACtByD,KAAM6J,EAAazI,MAAMpB,KACzBC,KAAM4J,EAAazI,MAAMnB,SAKzByR,EAAA/U,UAAAqS,iBAAR,SAAyB7N,IACd,EAALA,IACFzG,KAAK6S,YAAYtG,OAAO9F,EAAG,GAC3BzG,KAAK8S,gBAAgBvG,OAAO9F,EAAG,KAI3BuQ,EAAA/U,UAAAiR,gBAAR,SAAwBN,EAA4CnM,GAIlE,QADI8N,EAAoEzS,EAAGD,EAAGyD,EAAMC,EAF9EiP,EAAOxU,KAAK8S,gBAAgBrM,GAC9B+M,EAAIgB,EAAK/T,OAAS,GAEV,EAAL+S,EAAQA,IACbe,EAAeC,EAAKhB,GACpB1R,EAAI8Q,EAAWlM,MAAM5E,EACrBD,EAAI+Q,EAAWlM,MAAM7E,EACrByD,EAAOsN,EAAWlM,MAAMpB,KACxBC,EAAOqN,EAAWlM,MAAMnB,KACxBqN,EAAWlM,MAAM5E,EAAIyS,EAAazS,EAClC8Q,EAAWlM,MAAM7E,EAAI0S,EAAa1S,EAClC+Q,EAAWlM,MAAMpB,KAAOiP,EAAajP,KACrCsN,EAAWlM,MAAMnB,KAAOgP,EAAahP,KAChCvF,KAAKa,SAAS8L,iBAAiBiG,EAAWlM,QAI7CkM,EAAWlM,MAAM5E,EAAIA,EACrB8Q,EAAWlM,MAAM7E,EAAIA,EACrB+Q,EAAWlM,MAAMpB,KAAOA,EACxBsN,EAAWlM,MAAMnB,KAAOA,IANxBqN,EAAWxH,UACXoJ,EAAKjI,OAAOiH,EAAI,EAAGgB,EAAK/T,OAAS,EAAI+S,IAQzC,OAAIgB,EAAK/T,OAAS,IAChBT,KAAKsU,iBAAiB7N,IACf,wBAzOZ1E,EAAAA,sDAJOoO,KAiPR6G,GA3NE,SAAAA,EAAY7H,GACVnP,KAAK6S,YAAc,GACnB7S,KAAK8S,gBAAkB,GACvB9S,KAAKmP,aAAeA,EACpBnP,KAAKa,SAAWsO,EAAatO,SAC7Bb,KAAKsT,WAAa,CAChBc,SAAUpU,KAAKmU,QACfD,SAAUlU,KAAKiU,QACfJ,UAAW7T,KAAK2T,SAChBK,UAAWhU,KAAK+T,UAElB/T,KAAKgU,UAAY,YACjBhU,KAAK6T,UAAY,YACjB7T,KAAKoU,SAAW,WAChBpU,KAAKkU,SAAW,WC7BpB,IAAAqD,GAmDEA,EAAAtV,UAAAC,QAAA,WACMlC,KAAKa,SAASwB,cAChBrC,KAAKa,SAASwB,sBAETrC,KAAKmP,oBACLnP,KAAKa,UAGd0W,EAAAtV,UAAA2S,UAAA,SAAU/W,GAAV,IAAA2E,EAAAxC,KACE,OAAQnC,EAAEgX,OACR,KAAK,EAEH,MACF,KAAK,EACL,KAAK,EAEH,OAEA7U,KAAKa,SAAS6B,QAAQhF,WAAasC,KAAKa,SAAS6B,QAAQhF,UAAUH,OACrEyC,KAAKa,SAAS6B,QAAQhF,UAAUH,MAAMyC,KAAKmP,aAAavL,KAAM5D,KAAKmP,aAActR,GAEnFA,EAAEoG,kBACFpG,EAAEmG,iBACFhE,KAAK8U,aAAe9U,KAAK+U,SAAShS,KAAK/C,MACvCA,KAAKgV,iBAAmBhV,KAAKiV,SAASlS,KAAK/C,MAC3CA,KAAKqD,KAAKC,kBAAiB,WACzBd,EAAK0S,UAAY1S,EAAK2M,aAAaxM,SAASC,OAAO,WAAY,YAAaJ,EAAKsS,cACjFtS,EAAK2S,UAAY3S,EAAK3B,SAAS8B,SAASC,OAAOJ,EAAK3B,SAASgC,GAAI,YAAaL,EAAKsS,gBAErF9U,KAAKoV,QAAUpV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,UAAW5C,KAAKgV,kBAC7EhV,KAAKqV,WAAarV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,aAAc5C,KAAKgV,kBACnFhV,KAAKsV,aAAetV,KAAKmP,aAAaxM,SAASC,OAAO,SAAU,OAAQ5C,KAAKgV,kBAC7EhV,KAAKuV,SAAWvV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,WAAY5C,KAAKgV,kBAC/EhV,KAAKwV,YAAcxV,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,cAAe5C,KAAKgV,kBAErFhV,KAAKmP,aAAaxM,SAASuF,SAASlI,KAAKmP,aAAatM,GAAI,0BAC1D7C,KAAK6Q,UAAUtQ,QAAU1C,EAAE0C,QAC3BP,KAAK6Q,UAAUnQ,QAAU7C,EAAE6C,QAC3BV,KAAK+E,KAAO/E,KAAKmP,aAAapK,KAC9B/E,KAAKiF,IAAMjF,KAAKmP,aAAalK,IAC7BjF,KAAK2H,MAAQ3H,KAAKmP,aAAaxH,MAC/B3H,KAAK4H,OAAS5H,KAAKmP,aAAavH,OAChC5H,KAAKwX,OAASxX,KAAKmP,aAAalK,IAAMjF,KAAKmP,aAAavH,OACxD5H,KAAKyX,MAAQzX,KAAKmP,aAAapK,KAAO/E,KAAKmP,aAAaxH,MACxD3H,KAAK7E,OAAS6E,KAAKa,SAASC,SAAS3F,OACrC6E,KAAKgR,WAAahR,KAAKa,SAASgC,GAAGiC,WAAa9E,KAAKa,SAASgC,GAAGmO,WACjEhR,KAAKiR,UAAYjR,KAAKa,SAASgC,GAAGmC,UAAYhF,KAAKa,SAASgC,GAAGoO,UAC/DjR,KAAKyV,SAAW5X,EAAE0C,QAAUP,KAAKgR,WAAahR,KAAK+E,KACnD/E,KAAK0X,UAAY7Z,EAAE0C,QAAUP,KAAKgR,WAAahR,KAAKyX,MACpDzX,KAAK0V,QAAU7X,EAAE6C,QAAUV,KAAKiR,UAAYjR,KAAKiF,IACjDjF,KAAK2X,WAAa9Z,EAAE6C,QAAUV,KAAKiR,UAAYjR,KAAKwX,OACpDxX,KAAK4X,UAAY5X,KAAKa,SAASwN,kBAAkBrO,KAAKmP,aAAazI,MAAM1L,aAAegF,KAAKa,SAASC,SAAS9F,aAC3GgF,KAAK7E,OACT6E,KAAK6X,SAAW7X,KAAKa,SAASuN,kBAAkBpO,KAAKmP,aAAazI,MAAM3L,aAAeiF,KAAKa,SAASC,SAAS/F,aAC1GiF,KAAK7E,OACT6E,KAAKa,SAASuB,WAAapC,KAAKmP,aAAazI,MAC7C1G,KAAKa,SAASwB,eACdrC,KAAKoM,KAAO,IAAI8F,EAAalS,KAAKmP,cAClCnP,KAAK8X,WAAa,IAAId,EAAmBhX,KAAKmP,cAC9CnP,KAAKa,SAAS+K,gBAAiB,EAC/B5L,KAAKa,SAASsK,aAEVtN,EAAEmD,OAAOK,aAAa,WAA6E,EAAjExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aACtFxB,KAAK+Q,sBAAsBjT,GAAI,EAC/BkC,KAAK+X,kBAAoB/X,KAAKgY,SACrBna,EAAEmD,OAAOK,aAAa,WAA6E,EAAjExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAC7FxB,KAAK+Q,sBAAsBhT,GAAI,EAC/BiC,KAAK+X,kBAAoB/X,KAAKiY,SACrBpa,EAAEmD,OAAOK,aAAa,WAA6E,EAAjExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAC7FxB,KAAK+Q,sBAAsBnT,GAAI,EAC/BoC,KAAK+X,kBAAoB/X,KAAKkY,SACrBra,EAAEmD,OAAOK,aAAa,WAA6E,EAAjExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,aAC7FxB,KAAK+Q,sBAAsBlT,GAAI,EAC/BmC,KAAK+X,kBAAoB/X,KAAKmY,SACrBta,EAAEmD,OAAOK,aAAa,WAA8E,EAAlExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAC7FxB,KAAK+Q,sBAAsBjT,GAAI,EAC/BkC,KAAK+Q,sBAAsBhT,GAAI,EAC/BiC,KAAK+X,kBAAoB/X,KAAKoY,UACrBva,EAAEmD,OAAOK,aAAa,WAA8E,EAAlExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAC7FxB,KAAK+Q,sBAAsBjT,GAAI,EAC/BkC,KAAK+Q,sBAAsBlT,GAAI,EAC/BmC,KAAK+X,kBAAoB/X,KAAKqY,UACrBxa,EAAEmD,OAAOK,aAAa,WAA8E,EAAlExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,cAC7FxB,KAAK+Q,sBAAsBnT,GAAI,EAC/BoC,KAAK+Q,sBAAsBhT,GAAI,EAC/BiC,KAAK+X,kBAAoB/X,KAAKsY,UACrBza,EAAEmD,OAAOK,aAAa,WAA8E,EAAlExD,EAAEmD,OAAOM,aAAa,SAASC,MAAM,KAAKC,QAAQ,eAC7FxB,KAAK+Q,sBAAsBnT,GAAI,EAC/BoC,KAAK+Q,sBAAsBlT,GAAI,EAC/BmC,KAAK+X,kBAAoB/X,KAAKuY,WAIlChB,EAAAtV,UAAA8S,SAAA,SAASlX,GAAT,IAAA2E,EAAAxC,KACEnC,EAAEoG,kBACFpG,EAAEmG,iBACF5E,EAAckB,gBAAgBzC,GAC9BmC,KAAKiR,UAAYjR,KAAKa,SAASgC,GAAGmC,UAAYhF,KAAKa,SAASgC,GAAGoO,UAC/DjR,KAAKgR,WAAahR,KAAKa,SAASgC,GAAGiC,WAAa9E,KAAKa,SAASgC,GAAGmO,WACjEJ,EAAO5Q,KAAKa,SAAUb,KAAK+E,KAAM/E,KAAKiF,IAAKjF,KAAK2H,MAAO3H,KAAK4H,OAAQ/J,EAAGmC,KAAK6Q,UAAW7Q,KAAK+X,kBAAkBhV,KAAK/C,OAAO,EACxHA,KAAK+Q,uBACP/Q,KAAK+X,kBAAkBla,GAEvBmC,KAAK6Q,UAAUtQ,QAAU1C,EAAE0C,QAC3BP,KAAK6Q,UAAUnQ,QAAU7C,EAAE6C,QAC3BV,KAAKqD,KAAKuS,IAAG,WACXpT,EAAK3B,SAASsK,gBAIlBoM,EAAAtV,UAAAgT,SAAA,SAASpX,GAAT,IAAA2E,EAAAxC,KACEnC,EAAEoG,kBACFpG,EAAEmG,iBACFgO,IACAhS,KAAKkV,YACLlV,KAAKoV,UACLpV,KAAKqV,aACLrV,KAAKsV,eACLtV,KAAKmV,YACLnV,KAAKuV,WACLvV,KAAKwV,cACLxV,KAAKa,SAAS+K,gBAAiB,EAC/B5L,KAAKa,SAASsK,aACVnL,KAAKa,SAAS6B,QAAQhF,WAAasC,KAAKa,SAAS6B,QAAQhF,UAAUJ,KACrEuY,QAAQC,QAAQ9V,KAAKa,SAAS6B,QAAQhF,UAAUJ,KAAK0C,KAAKmP,aAAavL,KAAM5D,KAAKmP,aAActR,IAC7FkY,KAAK/V,KAAKwY,WAAWzV,KAAK/C,MAAOA,KAAKyY,aAAa1V,KAAK/C,OAE3DA,KAAKwY,aAEPpY,WAAU,WACRoC,EAAK2M,aAAaxM,SAAS2F,YAAY9F,EAAK2M,aAAatM,GAAI,0BACzDL,EAAK3B,WACP2B,EAAK3B,SAASuB,WAAa,KAC3BI,EAAK3B,SAASwB,mBAKpBkV,EAAAtV,UAAAwW,aAAA,WACEzY,KAAKmP,aAAazI,MAAMpB,KAAOtF,KAAKmP,aAAavL,KAAK0B,MAAQ,EAC9DtF,KAAKmP,aAAazI,MAAMnB,KAAOvF,KAAKmP,aAAavL,KAAK2B,MAAQ,EAC9DvF,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAKmP,aAAavL,KAAK9B,GAAK,EACxD9B,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAKmP,aAAavL,KAAK/B,GAAK,EACxD7B,KAAKmP,aAAa/D,UAClBpL,KAAKoM,KAAKuG,eACV3S,KAAK8X,WAAWnF,eAChB3S,KAAKoM,KAAKlK,iBACHlC,KAAKoM,KACZpM,KAAK8X,WAAW5V,iBACTlC,KAAK8X,YAGdP,EAAAtV,UAAAuW,WAAA,WACExY,KAAKmP,aAAa/D,UAClBpL,KAAKmP,aAAaO,iBAAiB1P,KAAKmP,aAAazI,MAAO1G,KAAKmP,aAAavL,MAC9E5D,KAAKoM,KAAK2G,iBACV/S,KAAK8X,WAAW/E,iBAChB/S,KAAKoM,KAAKlK,iBACHlC,KAAKoM,KACZpM,KAAK8X,WAAW5V,iBACTlC,KAAK8X,YAGdP,EAAAtV,UAAA+V,QAAA,SAAQna,GAQN,GAPAmC,KAAKiF,IAAMpH,EAAE6C,QAAUV,KAAKiR,UAAYjR,KAAK0V,QAC7C1V,KAAK4H,OAAS5H,KAAKwX,OAASxX,KAAKiF,IAC7BjF,KAAK4X,UAAY5X,KAAK4H,SACxB5H,KAAK4H,OAAS5H,KAAK4X,UACnB5X,KAAKiF,IAAMjF,KAAKwX,OAASxX,KAAK4X,WAEhC5X,KAAK0Y,YAAc1Y,KAAKa,SAASwE,kBAAkBrF,KAAKiF,IAAMjF,KAAK7E,OAAQgK,KAAKC,OAC5EpF,KAAKmP,aAAazI,MAAM7E,IAAM7B,KAAK0Y,YAAa,CAOlD,GANA1Y,KAAK2Y,WAAW,GAAK3Y,KAAKmP,aAAazI,MAAM7E,EAC7C7B,KAAK2Y,WAAW,GAAK3Y,KAAKmP,aAAazI,MAAMnB,KAC7CvF,KAAKmP,aAAazI,MAAMnB,MAAQvF,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAK0Y,YACjE1Y,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAK0Y,YACjC1Y,KAAK8X,WAAWzZ,UAAU2B,KAAK8X,WAAW9D,WAC1ChU,KAAKoM,KAAK/N,UAAU2B,KAAKoM,KAAK4H,UAAWhU,KAAKa,SAASC,SAASvC,qBAC5DyB,KAAKa,SAAS6E,eAAe1F,KAAKmP,aAAazI,OAKjD,OAJA1G,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAK2Y,WAAW,GAC5C3Y,KAAKmP,aAAazI,MAAMnB,KAAOvF,KAAK2Y,WAAW,GAC/C3Y,KAAK4Y,WAAW5Y,KAAKa,SAASwN,kBAAkBrO,KAAKmP,aAAazI,MAAM7E,SACxE7B,KAAK6Y,cAAc7Y,KAAKa,SAASwN,kBAAkBrO,KAAKmP,aAAazI,MAAMnB,MAAQvF,KAAK7E,QAGxF6E,KAAKa,SAASwB,eAEhBrC,KAAK8X,WAAW9E,gBAChBhT,KAAKoM,KAAK4G,gBAEZhT,KAAK4Y,WAAW5Y,KAAKiF,KACrBjF,KAAK6Y,cAAc7Y,KAAK4H,SAG1B2P,EAAAtV,UAAAgW,QAAA,SAAQpa,GAQN,GAPAmC,KAAK+E,KAAOlH,EAAE0C,QAAUP,KAAKgR,WAAahR,KAAKyV,SAC/CzV,KAAK2H,MAAQ3H,KAAKyX,MAAQzX,KAAK+E,KAC3B/E,KAAK6X,SAAW7X,KAAK2H,QACvB3H,KAAK2H,MAAQ3H,KAAK6X,SAClB7X,KAAK+E,KAAO/E,KAAKyX,MAAQzX,KAAK6X,UAEhC7X,KAAK0Y,YAAc1Y,KAAKa,SAASqE,kBAAkBlF,KAAK+E,KAAO/E,KAAK7E,OAAQgK,KAAKC,OAC7EpF,KAAKmP,aAAazI,MAAM5E,IAAM9B,KAAK0Y,YAAa,CAOlD,GANA1Y,KAAK2Y,WAAW,GAAK3Y,KAAKmP,aAAazI,MAAM5E,EAC7C9B,KAAK2Y,WAAW,GAAK3Y,KAAKmP,aAAazI,MAAMpB,KAC7CtF,KAAKmP,aAAazI,MAAMpB,MAAQtF,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAK0Y,YACjE1Y,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAK0Y,YACjC1Y,KAAK8X,WAAWzZ,UAAU2B,KAAK8X,WAAW1D,UAC1CpU,KAAKoM,KAAK/N,UAAU2B,KAAKoM,KAAKgI,SAAUpU,KAAKa,SAASC,SAASvC,qBAC3DyB,KAAKa,SAAS6E,eAAe1F,KAAKmP,aAAazI,OAKjD,OAJA1G,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAK2Y,WAAW,GAC5C3Y,KAAKmP,aAAazI,MAAMpB,KAAOtF,KAAK2Y,WAAW,GAC/C3Y,KAAK8Y,YAAY9Y,KAAKa,SAASuN,kBAAkBpO,KAAKmP,aAAazI,MAAM5E,SACzE9B,KAAK+Y,aAAa/Y,KAAKa,SAASuN,kBAAkBpO,KAAKmP,aAAazI,MAAMpB,MAAQtF,KAAK7E,QAGvF6E,KAAKa,SAASwB,eAEhBrC,KAAK8X,WAAW9E,gBAChBhT,KAAKoM,KAAK4G,gBAEZhT,KAAK8Y,YAAY9Y,KAAK+E,MACtB/E,KAAK+Y,aAAa/Y,KAAK2H,QAGzB4P,EAAAtV,UAAAiW,QAAA,SAAQra,GAON,GANAmC,KAAK4H,OAAS/J,EAAE6C,QAAUV,KAAKiR,UAAYjR,KAAK2X,WAAa3X,KAAKiF,IAC9DjF,KAAK4X,UAAY5X,KAAK4H,SACxB5H,KAAK4H,OAAS5H,KAAK4X,WAErB5X,KAAKwX,OAASxX,KAAKiF,IAAMjF,KAAK4H,OAC9B5H,KAAK0Y,YAAc1Y,KAAKa,SAASwE,kBAAkBrF,KAAKwX,OAAQrS,KAAKuG,MAChE1L,KAAKmP,aAAazI,MAAM7E,EAAI7B,KAAKmP,aAAazI,MAAMnB,OAAUvF,KAAK0Y,YAAa,CAKnF,GAJA1Y,KAAK2Y,WAAW,GAAK3Y,KAAKmP,aAAazI,MAAMnB,KAC7CvF,KAAKmP,aAAazI,MAAMnB,KAAOvF,KAAK0Y,YAAc1Y,KAAKmP,aAAazI,MAAM7E,EAC1E7B,KAAK8X,WAAWzZ,UAAU2B,KAAK8X,WAAWjE,WAC1C7T,KAAKoM,KAAK/N,UAAU2B,KAAKoM,KAAKyH,UAAW7T,KAAKa,SAASC,SAASvC,qBAC5DyB,KAAKa,SAAS6E,eAAe1F,KAAKmP,aAAazI,OAGjD,OAFA1G,KAAKmP,aAAazI,MAAMnB,KAAOvF,KAAK2Y,WAAW,QAC/C3Y,KAAK6Y,cAAc7Y,KAAKa,SAASwN,kBAAkBrO,KAAKmP,aAAazI,MAAMnB,MAAQvF,KAAK7E,QAGxF6E,KAAKa,SAASwB,eAEhBrC,KAAK8X,WAAW9E,gBAChBhT,KAAKoM,KAAK4G,gBAEZhT,KAAK6Y,cAAc7Y,KAAK4H,SAG1B2P,EAAAtV,UAAAkW,QAAA,SAAQta,GAON,GANAmC,KAAK2H,MAAQ9J,EAAE0C,QAAUP,KAAKgR,WAAahR,KAAK0X,UAAY1X,KAAK+E,KAC7D/E,KAAK6X,SAAW7X,KAAK2H,QACvB3H,KAAK2H,MAAQ3H,KAAK6X,UAEpB7X,KAAKyX,MAAQzX,KAAK+E,KAAO/E,KAAK2H,MAC9B3H,KAAK0Y,YAAc1Y,KAAKa,SAASqE,kBAAkBlF,KAAKyX,MAAOtS,KAAKuG,MAC/D1L,KAAKmP,aAAazI,MAAM5E,EAAI9B,KAAKmP,aAAazI,MAAMpB,OAAUtF,KAAK0Y,YAAa,CAKnF,GAJA1Y,KAAK2Y,WAAW,GAAK3Y,KAAKmP,aAAazI,MAAMpB,KAC7CtF,KAAKmP,aAAazI,MAAMpB,KAAOtF,KAAK0Y,YAAc1Y,KAAKmP,aAAazI,MAAM5E,EAC1E9B,KAAK8X,WAAWzZ,UAAU2B,KAAK8X,WAAW5D,UAC1ClU,KAAKoM,KAAK/N,UAAU2B,KAAKoM,KAAK8H,SAAUlU,KAAKa,SAASC,SAASvC,qBAC3DyB,KAAKa,SAAS6E,eAAe1F,KAAKmP,aAAazI,OAGjD,OAFA1G,KAAKmP,aAAazI,MAAMpB,KAAOtF,KAAK2Y,WAAW,QAC/C3Y,KAAK+Y,aAAa/Y,KAAKa,SAASuN,kBAAkBpO,KAAKmP,aAAazI,MAAMpB,MAAQtF,KAAK7E,QAGvF6E,KAAKa,SAASwB,eAEhBrC,KAAK8X,WAAW9E,gBAChBhT,KAAKoM,KAAK4G,gBAEZhT,KAAK+Y,aAAa/Y,KAAK2H,QAGzB4P,EAAAtV,UAAAmW,SAAA,SAASva,GACPmC,KAAKgY,QAAQna,GACbmC,KAAKiY,QAAQpa,IAGf0Z,EAAAtV,UAAAoW,SAAA,SAASxa,GACPmC,KAAKgY,QAAQna,GACbmC,KAAKmY,QAAQta,IAGf0Z,EAAAtV,UAAAqW,SAAA,SAASza,GACPmC,KAAKkY,QAAQra,GACbmC,KAAKiY,QAAQpa,IAGf0Z,EAAAtV,UAAAsW,SAAA,SAAS1a,GACPmC,KAAKkY,QAAQra,GACbmC,KAAKmY,QAAQta,IAGf0Z,EAAAtV,UAAAqJ,OAAA,WACEtL,KAAKgZ,cAAgBhZ,KAAKmP,aAAa+H,gBAGzCK,EAAAtV,UAAAuU,eAAA,SAAe3Y,GAAf,IAAA2E,EAAAxC,KAEE,GADAZ,EAAckB,gBAAgBzC,GACzBmC,KAAKa,SAASC,SAASpD,UAAUT,eAIhC6C,EAAUM,WAAU,WACxBoC,EAAKoS,UAAU/W,GACfoY,KACCjW,KAAKa,SAASC,SAASpD,UAAUT,YAC9BwZ,EAAczW,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,UAAWqT,GACvES,EAAmB1W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,aAAcqT,GAC/EX,EAAetV,KAAKmP,aAAaxM,SAASC,OAAO,SAAU,OAAQqT,GACnEU,EAAkB3W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,YAItE,SAASgU,EAAWC,GAClBzX,EAAckB,gBAAgBuW,IACgB,EAA1C1R,KAAKM,IAAIoR,EAAUtW,QAAU1C,EAAE0C,UAA0D,EAA1C4E,KAAKM,IAAIoR,EAAUnW,QAAU7C,EAAE6C,WAChFuV,MANEa,EAAiB9W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,WAAYqT,GAC3Ec,EAAoB/W,KAAKmP,aAAaxM,SAASC,OAAO,WAAY,cAAeqT,QAZrFjW,KAAK4U,UAAU/W,GAqBjB,SAASoY,IACP9V,aAAaL,GACbwV,IACAmB,IACAC,IACAC,IACAG,IACAC,MAIJQ,EAAAtV,UAAA2W,WAAA,SAAW3T,GACTjF,KAAKa,SAASqK,aAAarD,gBAAgB7H,KAAKmP,aAAaxM,SAAU3C,KAAKmP,aAAatM,GAAI7C,KAAK+E,KAAME,IAG1GsS,EAAAtV,UAAA6W,YAAA,SAAY/T,GACV/E,KAAKa,SAASqK,aAAarD,gBAAgB7H,KAAKmP,aAAaxM,SAAU3C,KAAKmP,aAAatM,GAAIkC,EAAM/E,KAAKiF,MAG1GsS,EAAAtV,UAAA4W,cAAA,SAAcjR,GACZ5H,KAAKmP,aAAaxM,SAAS2E,SAAStH,KAAKmP,aAAatM,GAAI,SAAU+E,EAAS,OAG/E2P,EAAAtV,UAAA8W,aAAA,SAAapR,GACX3H,KAAKmP,aAAaxM,SAAS2E,SAAStH,KAAKmP,aAAatM,GAAI,QAAS8E,EAAQ,2BA9Y9E5F,EAAAA,sDAHOoO,SACAxK,SARYmJ,EAAAA,UA0ZpByI,GAxWE,SAAAA,EAAYpI,EAA8CtO,EAA8CwC,GAAArD,KAAAqD,KAAAA,EACtGrD,KAAKmP,aAAeA,EACpBnP,KAAKa,SAAWA,EAChBb,KAAK6Q,UAAY,CACftQ,QAAS,EACTG,QAAS,GAEXV,KAAK2Y,WAAa,CAAC,EAAG,EAAG,EAAG,GAC5B3Y,KAAK+Q,sBAAwB,CAAChT,GAAG,EAAOF,GAAG,EAAOC,GAAG,EAAOF,GAAG,GC1DnE,IAAAqb,GA8CEA,EAAAhX,UAAAmH,SAAA,WACEpJ,KAAKuC,gBACLvC,KAAKa,SAASgL,QAAQ7L,OAGxBiZ,EAAAhX,UAAAM,cAAA,WACEvC,KAAK0G,MAAQtH,EAAcC,MAAMW,KAAK0G,MAAO1G,KAAK4D,KAAM,CACtD0B,KAAMzJ,UACN0J,KAAM1J,UACNiG,EAAGjG,UACHgG,EAAGhG,UACHqd,YAAard,UACbmd,cAAend,UACf8K,eAAgB9K,UAChBf,YAAae,UACbb,YAAaa,UACbhB,YAAagB,UACbd,YAAac,UACbX,YAAaW,UACbZ,YAAaY,aAIjBod,EAAAhX,UAAAwI,YAAA,WACEzK,KAAKa,SAASyL,WAAWtM,aAClBA,KAAKa,SACZb,KAAKqL,KAAKnJ,iBACHlC,KAAKqL,KACZrL,KAAK0J,OAAOxH,iBACLlC,KAAK0J,QAGduP,EAAAhX,UAAAmJ,QAAA,WACEpL,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,UAAW7C,KAAK8K,UAAY,GAAK,SACjE9K,KAAKa,SAASqK,aAAa/D,WAAWnH,KAAK6C,GAAI7C,KAAK0G,MAAO1G,KAAK2C,UAChE3C,KAAKmZ,kBAGPF,EAAAhX,UAAAkX,eAAA,eACQlU,EAAMjF,KAAK0G,MAAM7E,EAAI7B,KAAKa,SAAS6G,aACnC3C,EAAO/E,KAAK0G,MAAM5E,EAAI9B,KAAKa,SAAS4G,YACpCE,EAAQ3H,KAAK0G,MAAMpB,KAAOtF,KAAKa,SAAS4G,YAAczH,KAAKa,SAASC,SAAS3F,OAC7EyM,EAAS5H,KAAK0G,MAAMnB,KAAOvF,KAAKa,SAAS6G,aAAe1H,KAAKa,SAASC,SAAS3F,QAEhF6E,KAAKoZ,MAAgB,EAARzR,GAAsB,EAATC,IAC7B5H,KAAKoZ,MAAO,EAGRpZ,KAAK4D,KAAKhI,cACZoE,KAAK4D,KAAKhI,aAAaoE,KAAK4D,KAAM5D,MAEhCA,KAAKa,SAAS6B,QAAQxG,kBACxB8D,KAAKa,SAAS6B,QAAQxG,iBAAiB8D,KAAK4D,KAAM5D,MAEhDA,KAAKa,SAASC,SAAS5B,kBACzBc,KAAK6C,GAAGwW,gBAAe,IAGvB1R,IAAU3H,KAAK2H,OAASC,IAAW5H,KAAK4H,SAC1C5H,KAAK2H,MAAQA,EACb3H,KAAK4H,OAASA,EACV5H,KAAKa,SAAS6B,QAAQzG,oBACxB+D,KAAKa,SAAS6B,QAAQzG,mBAAmB+D,KAAK4D,KAAM5D,OAGxDA,KAAKiF,IAAMA,EACXjF,KAAK+E,KAAOA,EACZ/E,KAAKsZ,WAAWC,KAAK,CAAE5R,MAAKA,EAAEC,OAAMA,KAGtCqR,EAAAhX,UAAA2E,YAAA,WACM5G,KAAKa,SAAS6B,QAAQ1G,oBACxBgE,KAAKa,SAAS6B,QAAQ1G,mBAAmBgE,KAAK4D,KAAM5D,MAGtDA,KAAKwZ,UAAUD,QAGjBN,EAAAhX,UAAAyN,iBAAA,SAAiB+J,EAAwBC,GACnCD,EAASlU,OAASmU,EAASnU,MAAQkU,EAASnU,OAASoU,EAASpU,MAAQmU,EAAS3X,IAAM4X,EAAS5X,GAAK2X,EAAS5X,IAAM6X,EAAS7X,IAG3H7B,KAAKa,SAAS6E,eAAe1F,KAAK0G,QACpC1G,KAAK0G,MAAM5E,EAAI4X,EAAS5X,GAAK,EAC7B9B,KAAK0G,MAAM7E,EAAI6X,EAAS7X,GAAK,EAC7B7B,KAAK0G,MAAMpB,KAAOoU,EAASpU,MAAQ,EACnCtF,KAAK0G,MAAMnB,KAAOmU,EAASnU,MAAQ,EACnCvF,KAAKoL,YAELpL,KAAK4D,KAAK0B,KAAOtF,KAAK0G,MAAMpB,KAC5BtF,KAAK4D,KAAK2B,KAAOvF,KAAK0G,MAAMnB,KAC5BvF,KAAK4D,KAAK9B,EAAI9B,KAAK0G,MAAM5E,EACzB9B,KAAK4D,KAAK/B,EAAI7B,KAAK0G,MAAM7E,EACzB7B,KAAKa,SAASwL,0BACdrM,KAAK4G,iBAITqS,EAAAhX,UAAA4N,aAAA,WACE,OAAQ7P,KAAKa,SAASuG,SACnBpH,KAAK0G,MAAMwS,cAAgBrd,UAAYmE,KAAKa,SAASC,SAAS9D,UAAUE,QAAU8C,KAAK0G,MAAMwS,cAGlGD,EAAAhX,UAAAiV,aAAA,WACE,OAAQlX,KAAKa,SAASuG,SACnBpH,KAAK0G,MAAMsS,gBAAkBnd,UAAYmE,KAAKa,SAASC,SAASpD,UAAUR,QAAU8C,KAAK0G,MAAMsS,oCA9IrG1K,EAAAA,UAASrO,KAAA,CAAC,CACTsO,SAAU,gBACVC,SAAA,s5DAEAC,cAAeC,EAAAA,kBAAkBtV,+9CAbhBuV,EAAAA,kBAOX1F,EAAiB0Q,WAAA,CAAA,CAAAC,KA0BMC,EAAAA,cAjCwCjL,EAAAA,iBAA3BE,EAAAA,wCAgBzCC,EAAAA,yBAEA+K,EAAAA,2BAEAA,EAAAA,UAsIHb,GAzHE,SAAAA,EAAYpW,EAAwBhC,EAAoC8B,EAA6BU,GAA7BrD,KAAA2C,SAAAA,EAA6B3C,KAAAqD,KAAAA,EAf3FrD,KAAAwZ,UAA+B,IAAIO,EAAAA,aAEnC/Z,KAAAsZ,WAAgC,IAAIS,EAAAA,aAc5C/Z,KAAK6C,GAAKA,EAAGmM,cACbhP,KAAK0G,MAAQ,CACXpB,MAAO,EACPC,MAAO,EACPzD,GAAI,EACJD,GAAI,GAEN7B,KAAKa,SAAWA,EAChBb,KAAKqL,KAAO,IAAIoJ,EAAkBzU,KAAMa,EAAUb,KAAKqD,MACvDrD,KAAK0J,OAAS,IAAI6N,EAAkBvX,KAAMa,EAAUb,KAAKqD,MC3C7D,IAAA2W,GAoBEA,EAAA/X,UAAAwI,YAAA,kBACSzK,KAAK6C,UACL7C,KAAKa,SAASwB,oBACdrC,KAAKa,UAGdmZ,EAAA/X,UAAAI,aAAA,SAAagJ,GACNrL,KAAKa,SAASuB,YAGbpC,KAAKa,SAAS6J,SAAWW,GAC3BrL,KAAKa,SAAS6J,QAAQzE,iBAAiBjG,KAAKa,SAASuB,YAEvDpC,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,UAAW,SAC3C7C,KAAKa,SAASqK,aAAa/D,WAAWnH,KAAK6C,GAAI7C,KAAKa,SAASuB,WAAYpC,KAAK2C,WAN9E3C,KAAK2C,SAAS2E,SAAStH,KAAK6C,GAAI,UAAW,yBAxBhDyL,EAAAA,UAASrO,KAAA,CAAC,CACTsO,SAAU,mBACVC,SAAU,GAEVC,cAAeC,EAAAA,kBAAkBtV,yIARhBuV,EAAAA,kBAEX1F,EAAiB0Q,WAAA,CAAA,CAAAC,KAYMC,EAAAA,cAdiBjL,EAAAA,aAqChDoL,GAvBE,SAAAA,EAAYnX,EAAwBhC,EAAoC8B,GAAA3C,KAAA2C,SAAAA,EACtE3C,KAAK6C,GAAKA,EAAGmM,cACbhP,KAAKa,SAAWA,EAChBb,KAAKa,SAASwB,aAAerC,KAAKqC,aAAaU,KAAK/C,MCjBxD,IAAAia,yBAOCC,EAAAA,SAAQja,KAAA,CAAC,CACRka,aAAc,CACZlR,EACAgQ,EACAe,GAEFI,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAACrR,EAAmBgQ,GAC7BsB,UAAW,GACXC,UAAW,OAGbP,IAdA,SAAAA","sourcesContent":["import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes =\n  'none'\n  | 'compactUp'\n  | 'compactLeft'\n  | 'compactUp&Left'\n  | 'compactLeft&Up'\n  | 'compactRight'\n  | 'compactUp&Right'\n  | 'compactRight&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up',\n  CompactRight = 'compactRight',\n  CompactUpAndRight = 'compactUp&Right',\n  CompactRightAndUp = 'compactRight&Up',\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  useTransformPositioning?: boolean;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  /** add by TX */\n  gridHeightReal?: boolean;\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise<any> | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n","import {CompactType, DisplayGrid, GridsterConfig, GridType} from './gridsterConfig.interface';\n\nexport const GridsterConfigService: GridsterConfig = {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  useTransformPositioning: true, // toggle between transform or top/left positioning of items\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableAutoPositionOnConflict: false  // disable auto-position of items on conflict state\n};\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y < b.y) {\n      return 1;\n    } else if (a.x > b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n","import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array<GridsterItemComponentInterface>;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array<GridsterItemComponentInterface>;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array<number>;\n  gridColumns: Array<number>;\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    const leftMouseButtonCode = 1;\n    if (!item || e.buttons !== leftMouseButtonCode) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.$options.margin;\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.$options.margin;\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x < item.x) {\n        item.x = oldItem.x;\n      } else if (oldItem.x - item.x > this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y < item.y) {\n        item.y = oldItem.y;\n      } else if (oldItem.y - item.y > this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRight) {\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.checkCompactUp();\n        this.checkCompactRight();\n      } else if (this.gridster.$options.compactType === CompactType.CompactRightAndUp) {\n        this.checkCompactRight();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndRight) {\n        this.moveUpTillCollision(item);\n        this.moveRightTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveUpTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.y = widget.$item.y;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveUpTillCollision(item: GridsterItem): boolean {\n    item.y -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.y += 1;\n      return false;\n    } else {\n      this.moveUpTillCollision(item);\n      return true;\n    }\n  }\n\n  checkCompactLeft(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveLeftTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  checkCompactRight(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i < l; i++) {\n      widget = this.gridster.grid[i];\n      if (widget.$item.compactEnabled === false) {\n        continue;\n      }\n      moved = this.moveRightTillCollision(widget.$item);\n      if (moved) {\n        widgetMovedUp = true;\n        widget.item.x = widget.$item.x;\n        widget.itemChanged();\n      }\n    }\n    if (widgetMovedUp) {\n      this.checkCompact();\n    }\n  }\n\n  moveLeftTillCollision(item: GridsterItem): boolean {\n    item.x -= 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x += 1;\n      return false;\n    } else {\n      this.moveLeftTillCollision(item);\n      return true;\n    }\n  }\n\n  moveRightTillCollision(item) {\n    item.x += 1;\n    if (this.gridster.checkCollision(item)) {\n      item.x -= 1;\n      return false;\n    } else {\n      this.moveRightTillCollision(item);\n      return true;\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      this.clearCellPosition(renderer, el);\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (this.gridster.curWidth / 2 * item.rows) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      // set the cell style\n      this.setCellPosition(renderer, el, x, y);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      ...this.getLeftPosition(this.gridster.curColWidth * i),\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      ...this.getTopPosition(this.gridster.curRowHeight * i),\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getLeftPosition(d: number): Object {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateX(' + d + 'px)',\n      };\n    } else {\n      return {\n        left: (this.getLeftMargin() + d) + 'px'\n      };\n    }\n  }\n\n  getTopPosition(d: number): Object {\n    if (this.gridster.$options.useTransformPositioning) {\n      return {\n        transform: 'translateY(' + d + 'px)',\n      };\n    } else {\n      return {\n        top: this.getTopMargin() + d + 'px'\n      };\n    }\n  }\n\n  clearCellPosition(renderer: Renderer2, el: any): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      renderer.setStyle(el, 'transform', '');\n    } else {\n      renderer.setStyle(el, 'top', '');\n      renderer.setStyle(el, 'left', '');\n    }\n  }\n\n  setCellPosition(renderer: Renderer2, el: any, x: number, y: number): void {\n    if (this.gridster.$options.useTransformPositioning) {\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n    } else {\n      renderer.setStyle(el, 'left', this.getLeftMargin() + x + 'px');\n      renderer.setStyle(el, 'top', this.getTopMargin() + y + 'px');\n    }\n  }\n\n  getLeftMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginLeft !== null) {\n        return this.gridster.$options.outerMarginLeft;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  getTopMargin(): number {\n    if (this.gridster.$options.outerMargin) {\n      if (this.gridster.$options.outerMarginTop !== null) {\n        return this.gridster.$options.outerMarginTop;\n      } else {\n        return this.gridster.$options.margin;\n      }\n    } else {\n      return 0;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation,\n  Output\n} from '@angular/core';\n\nimport {GridsterConfigService} from './gridsterConfig.constant';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfigS} from './gridsterConfigS.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Component({\n  selector: 'gridster',\n  templateUrl: './gridster.html',\n  styleUrls: ['./gridster.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterComponent implements OnInit, OnChanges, OnDestroy, GridsterComponentInterface {\n  @Input() options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  movingItem: GridsterItem | null;\n  previewStyle: () => void;\n  el: any;\n  $options: GridsterConfigS;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  grid: Array<GridsterItemComponentInterface>;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  gridColumns = [];\n  gridRows = [];\n  windowResize: (() => void) | null;\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  gridRenderer: GridsterRenderer;\n\n  constructor(el: ElementRef, public renderer: Renderer2, public cdRef: ChangeDetectorRef, public zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$options = JSON.parse(JSON.stringify(GridsterConfigService));\n    this.calculateLayoutDebounce = GridsterUtils.debounce(this.calculateLayout.bind(this), 0);\n    this.mobile = false;\n    this.curWidth = 0;\n    this.curHeight = 0;\n    this.grid = [];\n    this.curColWidth = 0;\n    this.curRowHeight = 0;\n    this.dragInProgress = false;\n    this.emptyCell = new GridsterEmptyCell(this);\n    this.compact = new GridsterCompact(this);\n    this.gridRenderer = new GridsterRenderer(this);\n  }\n\n  static checkCollisionTwoItems(item: GridsterItem, item2: GridsterItem): boolean {\n    return item.x < item2.x + item2.cols\n      && item.x + item.cols > item2.x\n      && item.y < item2.y + item2.rows\n      && item.y + item.rows > item2.y;\n  }\n\n  ngOnInit(): void {\n    if (this.options.initCallback) {\n      this.options.initCallback(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.options) {\n      this.setOptions();\n      this.options.api = {\n        optionsChanged: this.optionsChanged.bind(this),\n        resize: this.onResize.bind(this),\n        getNextPossiblePosition: this.getNextPossiblePosition.bind(this),\n        getFirstPossiblePosition: this.getFirstPossiblePosition.bind(this),\n        getLastPossiblePosition: this.getLastPossiblePosition.bind(this),\n      };\n      this.columns = this.$options.minCols;\n      this.rows = this.$options.minRows;\n      this.setGridSize();\n      this.calculateLayout();\n    }\n  }\n\n  resize(): void {\n    let height;\n    let width;\n    if (this.$options.gridType === 'fit' && !this.mobile) {\n      width = this.el.offsetWidth;\n      height = this.el.offsetHeight;\n    } else {\n      width = this.el.clientWidth;\n      height = this.el.clientHeight;\n    }\n    if ((width !== this.curWidth || height !== this.curHeight) && this.checkIfToResize()) {\n      this.onResize();\n    }\n  }\n\n  setOptions(): void {\n    this.$options = GridsterUtils.merge(this.$options, this.options, this.$options);\n    if (!this.$options.disableWindowResize && !this.windowResize) {\n      this.windowResize = this.renderer.listen('window', 'resize', this.onResize.bind(this));\n    } else if (this.$options.disableWindowResize && this.windowResize) {\n      this.windowResize();\n      this.windowResize = null;\n    }\n    this.emptyCell.updateOptions();\n  }\n\n  optionsChanged(): void {\n    this.setOptions();\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.updateOptions();\n    }\n    this.calculateLayout();\n  }\n\n  ngOnDestroy(): void {\n    if (this.windowResize) {\n      this.windowResize();\n    }\n    if (this.options.destroyCallback) {\n      this.options.destroyCallback(this);\n    }\n    if (this.options.api) {\n      this.options.api.resize = undefined;\n      this.options.api.optionsChanged = undefined;\n      this.options.api.getNextPossiblePosition = undefined;\n      this.options.api = undefined;\n    }\n    this.emptyCell.destroy();\n    delete this.emptyCell;\n    this.compact.destroy();\n    delete this.compact;\n  }\n\n  onResize(): void {\n    this.setGridSize();\n    this.calculateLayout();\n  }\n\n  checkIfToResize(): boolean {\n    const clientWidth = this.el.clientWidth;\n    const offsetWidth = this.el.offsetWidth;\n    const scrollWidth = this.el.scrollWidth;\n    const clientHeight = this.el.clientHeight;\n    const offsetHeight = this.el.offsetHeight;\n    const scrollHeight = this.el.scrollHeight;\n    const verticalScrollPresent = clientWidth < offsetWidth && scrollHeight > offsetHeight\n      && scrollHeight - offsetHeight < offsetWidth - clientWidth;\n    const horizontalScrollPresent = clientHeight < offsetHeight\n      && scrollWidth > offsetWidth && scrollWidth - offsetWidth < offsetHeight - clientHeight;\n    if (verticalScrollPresent) {\n      return false;\n    }\n    return !horizontalScrollPresent;\n  }\n\n  setGridSize(): void {\n    const el = this.el;\n    let width = el.clientWidth;\n    let height = el.clientHeight;\n    if (this.$options.setGridSize || this.$options.gridType === 'fit' && !this.mobile) {\n      width = el.offsetWidth;\n      height = el.offsetHeight;\n    } else {\n      width = el.clientWidth;\n      height = el.clientHeight;\n    }\n    this.curWidth = width;\n    this.curHeight = height;\n  }\n\n  setGridDimensions(): void {\n    this.setGridSize();\n    if (!this.mobile && this.$options.mobileBreakpoint > this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.addClass(this.el, 'mobile');\n    } else if (this.mobile && this.$options.mobileBreakpoint < this.curWidth) {\n      this.mobile = !this.mobile;\n      this.renderer.removeClass(this.el, 'mobile');\n    }\n    let rows = this.$options.minRows, columns = this.$options.minCols;\n\n    let widgetsIndex = this.grid.length - 1, widget;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (!widget.notPlaced) {\n        rows = Math.max(rows, widget.$item.y + widget.$item.rows);\n        columns = Math.max(columns, widget.$item.x + widget.$item.cols);\n      }\n    }\n\n    if (this.columns !== columns || this.rows !== rows) {\n      this.columns = columns;\n      this.rows = rows;\n      if (this.options.gridSizeChangedCallback) {\n        this.options.gridSizeChangedCallback(this);\n      }\n    }\n  }\n\n  calculateLayout(): void {\n    if (this.compact) {\n      this.compact.checkCompact();\n    }\n\n    this.setGridDimensions();\n    if (this.$options.outerMargin) {\n      let marginWidth = -this.$options.margin;\n      if (this.$options.outerMarginLeft !== null) {\n        marginWidth += this.$options.outerMarginLeft;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.outerMarginLeft + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-left', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginRight !== null) {\n        marginWidth += this.$options.outerMarginRight;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.outerMarginRight + 'px');\n      } else {\n        marginWidth += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-right', this.$options.margin + 'px');\n      }\n      this.curColWidth = (this.curWidth - marginWidth) / this.columns;\n      let marginHeight = -this.$options.margin;\n      if (this.$options.outerMarginTop !== null) {\n        marginHeight += this.$options.outerMarginTop;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.outerMarginTop + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-top', this.$options.margin + 'px');\n      }\n      if (this.$options.outerMarginBottom !== null) {\n        marginHeight += this.$options.outerMarginBottom;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.outerMarginBottom + 'px');\n      } else {\n        marginHeight += this.$options.margin;\n        this.renderer.setStyle(this.el, 'padding-bottom', this.$options.margin + 'px');\n      }\n      this.curRowHeight = (this.curHeight - marginHeight) / this.rows;\n    } else {\n      this.curColWidth = (this.curWidth + this.$options.margin) / this.columns;\n      this.curRowHeight = (this.curHeight + this.$options.margin) / this.rows;\n      this.renderer.setStyle(this.el, 'padding-left', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-right', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-top', 0 + 'px');\n      this.renderer.setStyle(this.el, 'padding-bottom', 0 + 'px');\n    }\n    this.gridRenderer.updateGridster();\n\n    this.updateGrid();\n\n    if (this.$options.setGridSize) {\n      this.renderer.setStyle(this.el, 'width', (this.columns * this.curColWidth + this.$options.margin) + 'px');\n      this.renderer.setStyle(this.el, 'height', (this.rows * this.curRowHeight + this.$options.margin) + 'px');\n    } else {\n      this.renderer.setStyle(this.el, 'width', '');\n      this.renderer.setStyle(this.el, 'height', '');\n    }\n\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex >= 0; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      widget.setSize();\n      widget.drag.toggle();\n      widget.resize.toggle();\n    }\n\n    setTimeout(this.resize.bind(this), 100);\n\n    /**\n     * add by TX\n     * è¥ gridHeightReal ä¸º trueï¼\n     * è®¡ç®åºæä¸å¼ï¼å¹¶æ <gridster> é«åº¦è®¾ç½®ä¸ºå®\n     */\n    if (this.options.gridHeightReal) {\n      let mostBottomValue = 0\n      this.grid.forEach(item => {\n        if (item.top + item.height > mostBottomValue) {\n          mostBottomValue = Math.ceil(item.top + item.height)\n        }\n      })\n      mostBottomValue += this.options.margin * 2 + 1\n      this.options.afterCalculateLayout(mostBottomValue)\n      this.renderer.setStyle(this.el, 'height', mostBottomValue + 'px')\n    }\n  }\n\n  updateGrid(): void {\n    if (this.$options.displayGrid === 'always' && !this.mobile) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'onDrag&Resize' && this.dragInProgress) {\n      this.renderer.addClass(this.el, 'display-grid');\n    } else if (this.$options.displayGrid === 'none' || !this.dragInProgress || this.mobile) {\n      this.renderer.removeClass(this.el, 'display-grid');\n    }\n    this.setGridDimensions();\n    this.gridColumns.length = Math.max(this.columns, Math.floor(this.curWidth / this.curColWidth)) || 0;\n    this.gridRows.length = Math.max(this.rows, Math.floor(this.curHeight / this.curRowHeight)) || 0;\n    this.cdRef.markForCheck();\n  }\n\n  addItem(itemComponent: GridsterItemComponentInterface): void {\n    if (itemComponent.$item.cols === undefined) {\n      itemComponent.$item.cols = this.$options.defaultItemCols;\n      itemComponent.item.cols = itemComponent.$item.cols;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.rows === undefined) {\n      itemComponent.$item.rows = this.$options.defaultItemRows;\n      itemComponent.item.rows = itemComponent.$item.rows;\n      itemComponent.itemChanged();\n    }\n    if (itemComponent.$item.x === -1 || itemComponent.$item.y === -1) {\n      this.autoPositionItem(itemComponent);\n    } else if (this.checkCollision(itemComponent.$item)) {\n      if (!this.$options.disableWarnings) {\n        itemComponent.notPlaced = true;\n        console.warn('Can\\'t be placed in the bounds of the dashboard, trying to auto position!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n      if (!this.$options.disableAutoPositionOnConflict) {\n        this.autoPositionItem(itemComponent);\n      } else {\n        itemComponent.notPlaced = true;\n      }\n    }\n    this.grid.push(itemComponent);\n    this.calculateLayoutDebounce();\n  }\n\n  removeItem(itemComponent: GridsterItemComponentInterface): void {\n    this.grid.splice(this.grid.indexOf(itemComponent), 1);\n    this.calculateLayoutDebounce();\n    if (this.options.itemRemovedCallback) {\n      this.options.itemRemovedCallback(itemComponent.item, itemComponent);\n    }\n  }\n\n  checkCollision(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let collision: GridsterItemComponentInterface | boolean = false;\n    if (this.options.itemValidateCallback) {\n      collision = !this.options.itemValidateCallback(item);\n    }\n    if (!collision && this.checkGridCollision(item)) {\n      collision = true;\n    }\n    if (!collision) {\n      const c = this.findItemWithItem(item);\n      if (c) {\n        collision = c;\n      }\n    }\n    return collision;\n  }\n\n  checkGridCollision(item: GridsterItem): boolean {\n    const noNegativePosition = item.y > -1 && item.x > -1;\n    const maxGridCols = item.cols + item.x <= this.$options.maxCols;\n    const maxGridRows = item.rows + item.y <= this.$options.maxRows;\n    const maxItemCols = item.maxItemCols === undefined ? this.$options.maxItemCols : item.maxItemCols;\n    const minItemCols = item.minItemCols === undefined ? this.$options.minItemCols : item.minItemCols;\n    const maxItemRows = item.maxItemRows === undefined ? this.$options.maxItemRows : item.maxItemRows;\n    const minItemRows = item.minItemRows === undefined ? this.$options.minItemRows : item.minItemRows;\n    const inColsLimits = item.cols <= maxItemCols && item.cols >= minItemCols;\n    const inRowsLimits = item.rows <= maxItemRows && item.rows >= minItemRows;\n    const minAreaLimit = item.minItemArea === undefined ? this.$options.minItemArea : item.minItemArea;\n    const maxAreaLimit = item.maxItemArea === undefined ? this.$options.maxItemArea : item.maxItemArea;\n    const area = item.cols * item.rows;\n    const inMinArea = minAreaLimit <= area;\n    const inMaxArea = maxAreaLimit >= area;\n    return !(noNegativePosition && maxGridCols && maxGridRows && inColsLimits && inRowsLimits && inMinArea && inMaxArea);\n  }\n\n  findItemWithItem(item: GridsterItem): GridsterItemComponentInterface | boolean {\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        return widget;\n      }\n    }\n    return false;\n  }\n\n  findItemsWithItem(item: GridsterItem): Array<GridsterItemComponentInterface> {\n    const a: Array<GridsterItemComponentInterface> = [];\n    let widgetsIndex: number = this.grid.length - 1, widget: GridsterItemComponentInterface;\n    for (; widgetsIndex > -1; widgetsIndex--) {\n      widget = this.grid[widgetsIndex];\n      if (widget.$item !== item && GridsterComponent.checkCollisionTwoItems(widget.$item, item)) {\n        a.push(widget);\n      }\n    }\n    return a;\n  }\n\n  autoPositionItem(itemComponent: GridsterItemComponentInterface): void {\n    if (this.getNextPossiblePosition(itemComponent.$item)) {\n      itemComponent.notPlaced = false;\n      itemComponent.item.x = itemComponent.$item.x;\n      itemComponent.item.y = itemComponent.$item.y;\n      itemComponent.itemChanged();\n    } else {\n      itemComponent.notPlaced = true;\n      if (!this.$options.disableWarnings) {\n        console.warn('Can\\'t be placed in the bounds of the dashboard!/n' +\n          JSON.stringify(itemComponent.item, ['cols', 'rows', 'x', 'y']));\n      }\n    }\n  }\n\n  getNextPossiblePosition(newItem: GridsterItem, startingFrom: { y?: number, x?: number } = {}): boolean {\n    if (newItem.cols === -1) {\n      newItem.cols = this.$options.defaultItemCols;\n    }\n    if (newItem.rows === -1) {\n      newItem.rows = this.$options.defaultItemRows;\n    }\n    this.setGridDimensions();\n    let rowsIndex = startingFrom.y || 0, colsIndex;\n    for (; rowsIndex < this.rows; rowsIndex++) {\n      newItem.y = rowsIndex;\n      colsIndex = startingFrom.x || 0;\n      for (; colsIndex < this.columns; colsIndex++) {\n        newItem.x = colsIndex;\n        if (!this.checkCollision(newItem)) {\n          return true;\n        }\n      }\n    }\n    const canAddToRows = this.$options.maxRows >= this.rows + newItem.rows;\n    const canAddToColumns = this.$options.maxCols >= this.columns + newItem.cols;\n    const addToRows = this.rows <= this.columns && canAddToRows;\n    if (!addToRows && canAddToColumns) {\n      newItem.x = this.columns;\n      newItem.y = 0;\n      return true;\n    } else if (canAddToRows) {\n      newItem.y = this.rows;\n      newItem.x = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getFirstPossiblePosition(item: GridsterItem): GridsterItem {\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem);\n    return tmpItem;\n  }\n\n  getLastPossiblePosition(item: GridsterItem): GridsterItem {\n    let farthestItem: { y: number, x: number } = {y: 0, x: 0};\n    farthestItem = this.grid.reduce((prev: any, curr: GridsterItemComponentInterface) => {\n      const currCoords = {y: curr.$item.y + curr.$item.rows - 1, x: curr.$item.x + curr.$item.cols - 1};\n      if (GridsterUtils.compareItems(prev, currCoords) === 1) {\n        return currCoords;\n      } else {\n        return prev;\n      }\n    }, farthestItem);\n\n    const tmpItem = Object.assign({}, item);\n    this.getNextPossiblePosition(tmpItem, farthestItem);\n    return tmpItem;\n  }\n\n  pixelsToPositionX(x: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(x / this.curColWidth);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  pixelsToPositionY(y: number, roundingMethod: Function, noLimit?: boolean): number {\n    const position = roundingMethod(y / this.curRowHeight);\n    if (noLimit) {\n      return position;\n    } else {\n      return Math.max(position, 0);\n    }\n  }\n\n  positionXToPixels(x: number): number {\n    return x * this.curColWidth;\n  }\n\n  positionYToPixels(y: number): number {\n    return y * this.curRowHeight;\n  }\n}\n","import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n","import {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nlet scrollSensitivity: number;\nlet scrollSpeed: number;\nconst intervalDuration = 50;\nlet gridsterElement: any;\nlet resizeEvent: boolean | undefined;\nlet resizeEventType: GridsterResizeEventType | undefined;\nlet intervalE: number;\nlet intervalW: number;\nlet intervalN: number;\nlet intervalS: number;\n\nexport function scroll(gridster: GridsterComponentInterface, left: number, top: number, width: number, height: number,\n                       e: MouseEvent, lastMouse: any,\n                       calculateItemPosition: Function, resize?: boolean, resizeEventScrollType?: GridsterResizeEventType) {\n  scrollSensitivity = gridster.$options.scrollSensitivity;\n  scrollSpeed = gridster.$options.scrollSpeed;\n  gridsterElement = gridster.el;\n  resizeEvent = resize;\n  resizeEventType = resizeEventScrollType;\n\n  const offsetWidth = gridsterElement.offsetWidth;\n  const offsetHeight = gridsterElement.offsetHeight;\n  const offsetLeft = gridsterElement.scrollLeft;\n  const offsetTop = gridsterElement.scrollTop;\n  const elemTopOffset = top - offsetTop;\n  const elemBottomOffset = offsetHeight + offsetTop - top - height;\n  if (lastMouse.clientY < e.clientY && elemBottomOffset < scrollSensitivity) {\n    cancelN();\n    if ((resizeEvent && resizeEventType && !resizeEventType.s) || intervalS) {\n      return;\n    }\n    intervalS = startVertical(1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientY > e.clientY && offsetTop > 0 && elemTopOffset < scrollSensitivity) {\n    cancelS();\n    if ((resizeEvent && resizeEventType && !resizeEventType.n) || intervalN) {\n      return;\n    }\n    intervalN = startVertical(-1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientY !== e.clientY) {\n    cancelVertical();\n  }\n\n  const elemRightOffset = offsetLeft + offsetWidth - left - width;\n  const elemLeftOffset = left - offsetLeft;\n  if (lastMouse.clientX < e.clientX && elemRightOffset <= scrollSensitivity) {\n    cancelW();\n    if ((resizeEvent && resizeEventType && !resizeEventType.e) || intervalE) {\n      return;\n    }\n    intervalE = startHorizontal(1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientX > e.clientX && offsetLeft > 0 && elemLeftOffset < scrollSensitivity) {\n    cancelE();\n    if ((resizeEvent && resizeEventType && !resizeEventType.w) || intervalW) {\n      return;\n    }\n    intervalW = startHorizontal(-1, calculateItemPosition, lastMouse);\n  } else if (lastMouse.clientX !== e.clientX) {\n    cancelHorizontal();\n  }\n}\n\nfunction startVertical(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientY = lastMouse.clientY;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollTop - scrollSpeed < 0) {\n      cancelVertical();\n    }\n    gridsterElement.scrollTop += sign * scrollSpeed;\n    clientY += sign * scrollSpeed;\n    calculateItemPosition({clientX: lastMouse.clientX, clientY: clientY});\n  }, intervalDuration);\n}\n\nfunction startHorizontal(sign: number, calculateItemPosition: Function, lastMouse: any): any {\n  let clientX = lastMouse.clientX;\n  return setInterval(() => {\n    if (!gridsterElement || sign === -1 && gridsterElement.scrollLeft - scrollSpeed < 0) {\n      cancelHorizontal();\n    }\n    gridsterElement.scrollLeft += sign * scrollSpeed;\n    clientX += sign * scrollSpeed;\n    calculateItemPosition({clientX: clientX, clientY: lastMouse.clientY});\n  }, intervalDuration);\n}\n\nexport function cancelScroll() {\n  cancelHorizontal();\n  cancelVertical();\n  gridsterElement = undefined;\n}\n\nfunction cancelHorizontal() {\n  cancelE();\n  cancelW();\n}\n\nfunction cancelVertical() {\n  cancelN();\n  cancelS();\n}\n\nfunction cancelE() {\n  if (intervalE) {\n    clearInterval(intervalE);\n    intervalE = 0;\n  }\n}\n\nfunction cancelW() {\n  if (intervalW) {\n    clearInterval(intervalW);\n    intervalW = 0;\n  }\n}\n\nfunction cancelS() {\n  if (intervalS) {\n    clearInterval(intervalS);\n    intervalS = 0;\n  }\n}\n\nfunction cancelN() {\n  if (intervalN) {\n    clearInterval(intervalN);\n    intervalN = 0;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    const gridsterItemCollision: any = this.gridster.checkCollision(pushedBy.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n      }\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterPush {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsTemp: Array<GridsterItemComponentInterface>;\n  private pushedItemsTempPath: Array<Array<{ x: number, y: number }>>;\n  private pushedItemsPath: Array<Array<{ x: number, y: number }>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private pushedItemsOrder: Array<GridsterItemComponentInterface>;\n  private tryPattern: {\n    fromEast: Array<Function>,\n    fromWest: Array<Function>,\n    fromNorth: Array<Function>,\n    fromSouth: Array<Function>,\n    [key: string]: Array<Function>\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsTemp = [];\n    this.pushedItemsTempPath = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: [this.tryWest, this.trySouth, this.tryNorth, this.tryEast],\n      fromWest: [this.tryEast, this.trySouth, this.tryNorth, this.tryWest],\n      fromNorth: [this.trySouth, this.tryEast, this.tryWest, this.tryNorth],\n      fromSouth: [this.tryNorth, this.tryEast, this.tryWest, this.trySouth]\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string, disable?: boolean): boolean {\n    if (this.gridster.$options.pushItems && !disable) {\n      this.pushedItemsOrder = [];\n      const pushed = this.push(this.gridsterItem, direction);\n      if (!pushed) {\n        this.restoreTempItems();\n      }\n      this.pushedItemsOrder = [];\n      this.pushedItemsTemp = [];\n      this.pushedItemsTempPath = [];\n      return pushed;\n    } else {\n      return false;\n    }\n  }\n\n  restoreTempItems(): void {\n    let i = this.pushedItemsTemp.length - 1;\n    for (; i > -1; i--) {\n      this.removeFromTempPushed(this.pushedItemsTemp[i]);\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    if (this.gridster.checkGridCollision(gridsterItem.$item)) {\n      return false;\n    }\n    if (direction === '') {\n      return false;\n    }\n    const a: Array<GridsterItemComponentInterface> = this.gridster.findItemsWithItem(gridsterItem.$item);\n    let i = a.length - 1, itemCollision: GridsterItemComponentInterface;\n    let makePush = true;\n    const b: Array<GridsterItemComponentInterface> = [];\n    for (; i > -1; i--) {\n      itemCollision = a[i];\n      if (itemCollision === this.gridsterItem) {\n        makePush = false;\n        break;\n      }\n      if (!itemCollision.canBeDragged()) {\n        makePush = false;\n        break;\n      }\n      const compare = this.pushedItemsTemp.find((el: GridsterItemComponentInterface) => {\n        return el.$item.x === itemCollision.$item.x && el.$item.y === itemCollision.$item.y;\n      });\n      if (compare) {\n        makePush = false;\n        break;\n      }\n      if (this.tryPattern[direction][0].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][1].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][2].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else if (this.tryPattern[direction][3].call(this, itemCollision, gridsterItem)) {\n        this.pushedItemsOrder.push(itemCollision);\n        b.push(itemCollision);\n      } else {\n        makePush = false;\n        break;\n      }\n    }\n    if (!makePush) {\n      i = this.pushedItemsOrder.lastIndexOf(b[0]);\n      if (i > -1) {\n        let j = this.pushedItemsOrder.length - 1;\n        for (; j >= i; j--) {\n          itemCollision = this.pushedItemsOrder[j];\n          this.pushedItemsOrder.pop();\n          this.removeFromTempPushed(itemCollision);\n          this.removeFromPushedItem(itemCollision);\n        }\n      }\n    }\n    return makePush;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.south) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromNorth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.north) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.y = gridsterItem.$item.y - gridsterItemCollide.$item.rows;\n    if (this.push(gridsterItemCollide, this.fromSouth)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.east) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromWest)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface): boolean {\n    if (!this.gridster.$options.pushDirections.west) {\n      return false;\n    }\n    this.addToTempPushed(gridsterItemCollide);\n    gridsterItemCollide.$item.x = gridsterItem.$item.x - gridsterItemCollide.$item.cols;\n    if (this.push(gridsterItemCollide, this.fromEast)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      return true;\n    } else {\n      this.removeFromTempPushed(gridsterItemCollide);\n    }\n    return false;\n  }\n\n  private addToTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    let i = this.pushedItemsTemp.indexOf(gridsterItem);\n    if (i === -1) {\n      i = this.pushedItemsTemp.push(gridsterItem) - 1;\n      this.pushedItemsTempPath[i] = [];\n    }\n    this.pushedItemsTempPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n  }\n\n  private removeFromTempPushed(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItemsTemp.indexOf(gridsterItem);\n    const tempPosition = this.pushedItemsTempPath[i].pop();\n    if (!tempPosition) {\n      return;\n    }\n    gridsterItem.$item.x = tempPosition.x;\n    gridsterItem.$item.y = tempPosition.y;\n    gridsterItem.setSize();\n    if (!this.pushedItemsTempPath[i].length) {\n      this.pushedItemsTemp.splice(i, 1);\n      this.pushedItemsTempPath.splice(i, 1);\n    }\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([{x: gridsterItem.item.x || 0, y: gridsterItem.item.y || 0},\n        {x: gridsterItem.$item.x, y: gridsterItem.$item.y}]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push({x: gridsterItem.$item.x, y: gridsterItem.$item.y});\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private removeFromPushedItem(gridsterItem: GridsterItemComponentInterface): void {\n    const i = this.pushedItems.indexOf(gridsterItem);\n    if (i > -1) {\n      this.pushedItemsPath[i].pop();\n      if (!this.pushedItemsPath.length) {\n        this.pushedItems.splice(i, 1);\n        this.pushedItemsPath.splice(i, 1);\n      }\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition, x, y;\n    let change = false;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - j - 1);\n        change = true;\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n    }\n    return change;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\n\nimport {GridsterSwap} from './gridsterSwap.service';\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterDraggable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  offsetLeft: number;\n  offsetTop: number;\n  margin: number;\n  diffTop: number;\n  diffLeft: number;\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n  positionX: number;\n  positionY: number;\n  positionXBackup: number;\n  positionYBackup: number;\n  enabled: boolean;\n  dragStartFunction: (event: any) => void;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  mousemove: Function;\n  mouseup: Function;\n  mouseleave: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  mousedown: Function;\n  touchstart: Function;\n  push: GridsterPush;\n  swap: GridsterSwap;\n  path: Array<{ x: number, y: number }>;\n  collision: GridsterItemComponentInterface | boolean = false;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.path = [];\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle(true);\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n    delete this.collision;\n    if (this.mousedown) {\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n\n    if (this.gridster.options.draggable && this.gridster.options.draggable.start) {\n      this.gridster.options.draggable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.left = this.gridsterItem.left - this.margin;\n    this.top = this.gridsterItem.top - this.margin;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.diffLeft = e.clientX + this.offsetLeft - this.margin - this.left;\n    this.diffTop = e.clientY + this.offsetTop - this.margin - this.top;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle(true);\n    this.push = new GridsterPush(this.gridsterItem);\n    this.swap = new GridsterSwap(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n    this.path.push({x: this.gridsterItem.item.x || 0, y: this.gridsterItem.item.y || 0});\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse,\n      this.calculateItemPositionFromMousePosition.bind(this));\n\n    this.calculateItemPositionFromMousePosition(e);\n  }\n\n  calculateItemPositionFromMousePosition(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.calculateItemPosition();\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n\n    cancelScroll();\n    this.cancelOnBlur();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-moving');\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    this.path = [];\n    if (this.gridster.options.draggable && this.gridster.options.draggable.stop) {\n      Promise.resolve(this.gridster.options.draggable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeDrag.bind(this), this.cancelDrag.bind(this));\n    } else {\n      this.makeDrag();\n    }\n    setTimeout(() => {\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle(true);\n      }\n    });\n  }\n\n  cancelDrag() {\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    if (this.push) {\n      this.push.restoreItems();\n    }\n    if (this.swap) {\n      this.swap.restoreSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  makeDrag() {\n    if (this.gridster.$options.draggable.dropOverItems && this.gridster.options.draggable\n      && this.gridster.options.draggable.dropOverItemsCallback\n      && this.collision && this.collision !== true && this.collision.$item) {\n      this.gridster.options.draggable.dropOverItemsCallback(this.gridsterItem.item, this.collision.item, this.gridster);\n    }\n    this.collision = false;\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    if (this.push) {\n      this.push.setPushedItems();\n    }\n    if (this.swap) {\n      this.swap.setSwapItem();\n    }\n    if (this.push) {\n      this.push.destroy();\n      delete this.push;\n    }\n    if (this.swap) {\n      this.swap.destroy();\n      delete this.swap;\n    }\n  }\n\n  calculateItemPosition() {\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.positionX = this.gridster.pixelsToPositionX(this.left, Math.round);\n    this.positionY = this.gridster.pixelsToPositionY(this.top, Math.round);\n    this.positionXBackup = this.gridsterItem.$item.x;\n    this.positionYBackup = this.gridsterItem.$item.y;\n    this.gridsterItem.$item.x = this.positionX;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.x = this.positionXBackup;\n    }\n    this.gridsterItem.$item.y = this.positionY;\n    if (this.gridster.checkGridCollision(this.gridsterItem.$item)) {\n      this.gridsterItem.$item.y = this.positionYBackup;\n    }\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, this.top);\n\n    if (this.positionXBackup !== this.gridsterItem.$item.x || this.positionYBackup !== this.gridsterItem.$item.y) {\n      const lastPosition = this.path[this.path.length - 1];\n      let direction = '';\n      if (lastPosition.x < this.gridsterItem.$item.x) {\n        direction = this.push.fromWest;\n      } else if (lastPosition.x > this.gridsterItem.$item.x) {\n        direction = this.push.fromEast;\n      } else if (lastPosition.y < this.gridsterItem.$item.y) {\n        direction = this.push.fromNorth;\n      } else if (lastPosition.y > this.gridsterItem.$item.y) {\n        direction = this.push.fromSouth;\n      }\n      this.push.pushItems(direction, this.gridster.$options.disablePushOnDrag);\n      this.swap.swapItems();\n      this.collision = this.gridster.checkCollision(this.gridsterItem.$item);\n      if (this.collision) {\n        this.gridsterItem.$item.x = this.positionXBackup;\n        this.gridsterItem.$item.y = this.positionYBackup;\n        if (this.gridster.$options.draggable.dropOverItems && this.collision !== true && this.collision.$item) {\n          this.gridster.movingItem = null;\n        }\n      } else {\n        this.path.push({x: this.gridsterItem.$item.x, y: this.gridsterItem.$item.y});\n      }\n      this.push.checkPushBack();\n    }\n    this.gridster.previewStyle(true);\n  }\n\n  toggle() {\n    const enableDrag = this.gridsterItem.canBeDragged();\n    if (!this.enabled && enableDrag) {\n      this.enabled = !this.enabled;\n      this.dragStartFunction = this.dragStartDelay.bind(this);\n      this.mousedown = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'mousedown', this.dragStartFunction);\n      this.touchstart = this.gridsterItem.renderer.listen(this.gridsterItem.el, 'touchstart', this.dragStartFunction);\n    } else if (this.enabled && !enableDrag) {\n      this.enabled = !this.enabled;\n      this.mousedown();\n      this.touchstart();\n    }\n  }\n\n  dragStartDelay(e: any): void {\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('gridster-item-resizable-handler') > -1) {\n      return;\n    }\n    if (GridsterUtils.checkContentClassForEvent(this.gridster, e)) {\n      return;\n    }\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.draggable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.draggable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Injectable()\nexport class GridsterPushResize {\n  public fromSouth: string;\n  public fromNorth: string;\n  public fromEast: string;\n  public fromWest: string;\n  private pushedItems: Array<GridsterItemComponentInterface>;\n  private pushedItemsPath: Array<Array<GridsterItem>>;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n  private tryPattern: {\n    fromEast: Function,\n    fromWest: Function,\n    fromNorth: Function,\n    fromSouth: Function,\n    [key: string]: Function\n  };\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n    this.tryPattern = {\n      fromEast: this.tryWest,\n      fromWest: this.tryEast,\n      fromNorth: this.trySouth,\n      fromSouth: this.tryNorth\n    };\n    this.fromSouth = 'fromSouth';\n    this.fromNorth = 'fromNorth';\n    this.fromEast = 'fromEast';\n    this.fromWest = 'fromWest';\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n  }\n\n  pushItems(direction: string): boolean {\n    if (this.gridster.$options.pushResizeItems) {\n      return this.push(this.gridsterItem, direction);\n    } else {\n      return false;\n    }\n  }\n\n  restoreItems(): void {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.$item.x = pushedItem.item.x || 0;\n      pushedItem.$item.y = pushedItem.item.y || 0;\n      pushedItem.$item.cols = pushedItem.item.cols || 1;\n      pushedItem.$item.row = pushedItem.item.row || 1;\n      pushedItem.setSize();\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  setPushedItems() {\n    let i = 0;\n    const l: number = this.pushedItems.length;\n    let pushedItem: GridsterItemComponentInterface;\n    for (; i < l; i++) {\n      pushedItem = this.pushedItems[i];\n      pushedItem.checkItemChanges(pushedItem.$item, pushedItem.item);\n    }\n    this.pushedItems = [];\n    this.pushedItemsPath = [];\n  }\n\n  checkPushBack(): void {\n    let i: number = this.pushedItems.length - 1;\n    let change = false;\n    for (; i > -1; i--) {\n      if (this.checkPushedItem(this.pushedItems[i], i)) {\n        change = true;\n      }\n    }\n    if (change) {\n      this.checkPushBack();\n    }\n  }\n\n  private push(gridsterItem: GridsterItemComponentInterface, direction: string): boolean {\n    const gridsterItemCollision: any = this.gridster.checkCollision(gridsterItem.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true &&\n      gridsterItemCollision !== this.gridsterItem && gridsterItemCollision.canBeResized()) {\n      if (this.tryPattern[direction].call(this, gridsterItemCollision, gridsterItem, direction)) {\n        return true;\n      }\n    } else if (gridsterItemCollision === false) {\n      return true;\n    }\n    return false;\n  }\n\n  private trySouth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpY = gridsterItemCollide.$item.y;\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.y = gridsterItem.$item.y + gridsterItem.$item.rows;\n    gridsterItemCollide.$item.rows = backUpRows + backUpY - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.y = backUpY;\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryNorth(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                   direction: string): boolean {\n    const backUpRows = gridsterItemCollide.$item.rows;\n    gridsterItemCollide.$item.rows = gridsterItem.$item.y - gridsterItemCollide.$item.y;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.rows = backUpRows;\n    }\n    return false;\n  }\n\n  private tryEast(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpX = gridsterItemCollide.$item.x;\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.x = gridsterItem.$item.x + gridsterItem.$item.cols;\n    gridsterItemCollide.$item.cols = backUpCols + backUpX - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.x = backUpX;\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private tryWest(gridsterItemCollide: GridsterItemComponentInterface, gridsterItem: GridsterItemComponentInterface,\n                  direction: string): boolean {\n    const backUpCols = gridsterItemCollide.$item.cols;\n    gridsterItemCollide.$item.cols = gridsterItem.$item.x - gridsterItemCollide.$item.x;\n    if (!GridsterComponent.checkCollisionTwoItems(gridsterItemCollide.$item, gridsterItem.$item)\n      && !this.gridster.checkGridCollision(gridsterItemCollide.$item)) {\n      gridsterItemCollide.setSize();\n      this.addToPushed(gridsterItemCollide);\n      this.push(gridsterItem, direction);\n      return true;\n    } else {\n      gridsterItemCollide.$item.cols = backUpCols;\n    }\n    return false;\n  }\n\n  private addToPushed(gridsterItem: GridsterItemComponentInterface): void {\n    if (this.pushedItems.indexOf(gridsterItem) < 0) {\n      this.pushedItems.push(gridsterItem);\n      this.pushedItemsPath.push([\n        {\n          x: gridsterItem.item.x || 0,\n          y: gridsterItem.item.y || 0,\n          cols: gridsterItem.item.cols || 0,\n          rows: gridsterItem.item.rows || 0\n        },\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        }]);\n    } else {\n      const i = this.pushedItems.indexOf(gridsterItem);\n      this.pushedItemsPath[i].push(\n        {\n          x: gridsterItem.$item.x,\n          y: gridsterItem.$item.y,\n          cols: gridsterItem.$item.cols,\n          rows: gridsterItem.$item.rows\n        });\n    }\n  }\n\n  private removeFromPushed(i: number): void {\n    if (i > -1) {\n      this.pushedItems.splice(i, 1);\n      this.pushedItemsPath.splice(i, 1);\n    }\n  }\n\n  private checkPushedItem(pushedItem: GridsterItemComponentInterface, i: number): boolean {\n    const path = this.pushedItemsPath[i];\n    let j = path.length - 2;\n    let lastPosition: { x: number, y: number, cols: number, rows: number }, x, y, cols, rows;\n    for (; j > -1; j--) {\n      lastPosition = path[j];\n      x = pushedItem.$item.x;\n      y = pushedItem.$item.y;\n      cols = pushedItem.$item.cols;\n      rows = pushedItem.$item.rows;\n      pushedItem.$item.x = lastPosition.x;\n      pushedItem.$item.y = lastPosition.y;\n      pushedItem.$item.cols = lastPosition.cols;\n      pushedItem.$item.rows = lastPosition.rows;\n      if (!this.gridster.findItemWithItem(pushedItem.$item)) {\n        pushedItem.setSize();\n        path.splice(j + 1, path.length - 1 - j);\n      } else {\n        pushedItem.$item.x = x;\n        pushedItem.$item.y = y;\n        pushedItem.$item.cols = cols;\n        pushedItem.$item.rows = rows;\n      }\n    }\n    if (path.length < 2) {\n      this.removeFromPushed(i);\n      return true;\n    }\n    return false;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\n\nimport {cancelScroll, scroll} from './gridsterScroll.service';\nimport {GridsterResizeEventType} from './gridsterResizeEventType.interface';\nimport {GridsterPush} from './gridsterPush.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterPushResize} from './gridsterPushResize.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterResizable {\n  gridsterItem: GridsterItemComponentInterface;\n  gridster: GridsterComponentInterface;\n  lastMouse: {\n    clientX: number,\n    clientY: number\n  };\n  itemBackup: Array<number>;\n  resizeEventScrollType: GridsterResizeEventType;\n  directionFunction: Function;\n  dragFunction: (event: any) => void;\n  dragStopFunction: (event: any) => void;\n  resizeEnabled: boolean;\n  mousemove: Function;\n  mouseup: Function;\n  mouseleave: Function;\n  cancelOnBlur: Function;\n  touchmove: Function;\n  touchend: Function;\n  touchcancel: Function;\n  push: GridsterPush;\n  pushResize: GridsterPushResize;\n  minHeight: number;\n  minWidth: number;\n  offsetTop: number;\n  offsetLeft: number;\n  diffTop: number;\n  diffLeft: number;\n  diffRight: number;\n  diffBottom: number;\n  margin: number;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n  width: number;\n  height: number;\n  newPosition: number;\n\n  constructor(gridsterItem: GridsterItemComponentInterface, gridster: GridsterComponentInterface, private zone: NgZone) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridster;\n    this.lastMouse = {\n      clientX: 0,\n      clientY: 0\n    };\n    this.itemBackup = [0, 0, 0, 0];\n    this.resizeEventScrollType = {w: false, e: false, n: false, s: false};\n  }\n\n  destroy(): void {\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridsterItem;\n    delete this.gridster;\n  }\n\n  dragStart(e: any): void {\n    switch (e.which) {\n      case 1:\n        // left mouse button\n        break;\n      case 2:\n      case 3:\n        // right or middle mouse button\n        return;\n    }\n    if (this.gridster.options.resizable && this.gridster.options.resizable.start) {\n      this.gridster.options.resizable.start(this.gridsterItem.item, this.gridsterItem, e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    this.dragFunction = this.dragMove.bind(this);\n    this.dragStopFunction = this.dragStop.bind(this);\n    this.zone.runOutsideAngular(() => {\n      this.mousemove = this.gridsterItem.renderer.listen('document', 'mousemove', this.dragFunction);\n      this.touchmove = this.gridster.renderer.listen(this.gridster.el, 'touchmove', this.dragFunction);\n    });\n    this.mouseup = this.gridsterItem.renderer.listen('document', 'mouseup', this.dragStopFunction);\n    this.mouseleave = this.gridsterItem.renderer.listen('document', 'mouseleave', this.dragStopFunction);\n    this.cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', this.dragStopFunction);\n    this.touchend = this.gridsterItem.renderer.listen('document', 'touchend', this.dragStopFunction);\n    this.touchcancel = this.gridsterItem.renderer.listen('document', 'touchcancel', this.dragStopFunction);\n\n    this.gridsterItem.renderer.addClass(this.gridsterItem.el, 'gridster-item-resizing');\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.left = this.gridsterItem.left;\n    this.top = this.gridsterItem.top;\n    this.width = this.gridsterItem.width;\n    this.height = this.gridsterItem.height;\n    this.bottom = this.gridsterItem.top + this.gridsterItem.height;\n    this.right = this.gridsterItem.left + this.gridsterItem.width;\n    this.margin = this.gridster.$options.margin;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.diffLeft = e.clientX + this.offsetLeft - this.left;\n    this.diffRight = e.clientX + this.offsetLeft - this.right;\n    this.diffTop = e.clientY + this.offsetTop - this.top;\n    this.diffBottom = e.clientY + this.offsetTop - this.bottom;\n    this.minHeight = this.gridster.positionYToPixels(this.gridsterItem.$item.minItemRows || this.gridster.$options.minItemRows)\n      - this.margin;\n    this.minWidth = this.gridster.positionXToPixels(this.gridsterItem.$item.minItemCols || this.gridster.$options.minItemCols)\n      - this.margin;\n    this.gridster.movingItem = this.gridsterItem.$item;\n    this.gridster.previewStyle();\n    this.push = new GridsterPush(this.gridsterItem);\n    this.pushResize = new GridsterPushResize(this.gridsterItem);\n    this.gridster.dragInProgress = true;\n    this.gridster.updateGrid();\n\n    if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-n') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.directionFunction = this.handleN;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-w') > -1) {\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-s') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.directionFunction = this.handleS;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-e') > -1) {\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-nw') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleNW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-ne') > -1) {\n      this.resizeEventScrollType.n = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleNE;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-sw') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.w = true;\n      this.directionFunction = this.handleSW;\n    } else if (e.target.hasAttribute('class') && e.target.getAttribute('class').split(' ').indexOf('handle-se') > -1) {\n      this.resizeEventScrollType.s = true;\n      this.resizeEventScrollType.e = true;\n      this.directionFunction = this.handleSE;\n    }\n  }\n\n  dragMove(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    GridsterUtils.checkTouchEvent(e);\n    this.offsetTop = this.gridster.el.scrollTop - this.gridster.el.offsetTop;\n    this.offsetLeft = this.gridster.el.scrollLeft - this.gridster.el.offsetLeft;\n    scroll(this.gridster, this.left, this.top, this.width, this.height, e, this.lastMouse, this.directionFunction.bind(this), true,\n      this.resizeEventScrollType);\n    this.directionFunction(e);\n\n    this.lastMouse.clientX = e.clientX;\n    this.lastMouse.clientY = e.clientY;\n    this.zone.run(() => {\n      this.gridster.updateGrid();\n    });\n  }\n\n  dragStop(e: any): void {\n    e.stopPropagation();\n    e.preventDefault();\n    cancelScroll();\n    this.mousemove();\n    this.mouseup();\n    this.mouseleave();\n    this.cancelOnBlur();\n    this.touchmove();\n    this.touchend();\n    this.touchcancel();\n    this.gridster.dragInProgress = false;\n    this.gridster.updateGrid();\n    if (this.gridster.options.resizable && this.gridster.options.resizable.stop) {\n      Promise.resolve(this.gridster.options.resizable.stop(this.gridsterItem.item, this.gridsterItem, e))\n        .then(this.makeResize.bind(this), this.cancelResize.bind(this));\n    } else {\n      this.makeResize();\n    }\n    setTimeout(() => {\n      this.gridsterItem.renderer.removeClass(this.gridsterItem.el, 'gridster-item-resizing');\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n  }\n\n  cancelResize(): void {\n    this.gridsterItem.$item.cols = this.gridsterItem.item.cols || 1;\n    this.gridsterItem.$item.rows = this.gridsterItem.item.rows || 1;\n    this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n    this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n    this.gridsterItem.setSize();\n    this.push.restoreItems();\n    this.pushResize.restoreItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  makeResize(): void {\n    this.gridsterItem.setSize();\n    this.gridsterItem.checkItemChanges(this.gridsterItem.$item, this.gridsterItem.item);\n    this.push.setPushedItems();\n    this.pushResize.setPushedItems();\n    this.push.destroy();\n    delete this.push;\n    this.pushResize.destroy();\n    delete this.pushResize;\n  }\n\n  handleN(e: any): void {\n    this.top = e.clientY + this.offsetTop - this.diffTop;\n    this.height = this.bottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n      this.top = this.bottom - this.minHeight;\n    }\n    this.newPosition = this.gridster.pixelsToPositionY(this.top + this.margin, Math.floor);\n    if (this.gridsterItem.$item.y !== this.newPosition) {\n      this.itemBackup[1] = this.gridsterItem.$item.y;\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows += this.gridsterItem.$item.y - this.newPosition;\n      this.gridsterItem.$item.y = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromSouth);\n      this.push.pushItems(this.push.fromSouth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.y = this.itemBackup[1];\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemTop(this.gridster.positionYToPixels(this.gridsterItem.$item.y));\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemTop(this.top);\n    this.setItemHeight(this.height);\n  }\n\n  handleW(e: any): void {\n    this.left = e.clientX + this.offsetLeft - this.diffLeft;\n    this.width = this.right - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n      this.left = this.right - this.minWidth;\n    }\n    this.newPosition = this.gridster.pixelsToPositionX(this.left + this.margin, Math.floor);\n    if (this.gridsterItem.$item.x !== this.newPosition) {\n      this.itemBackup[0] = this.gridsterItem.$item.x;\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols += this.gridsterItem.$item.x - this.newPosition;\n      this.gridsterItem.$item.x = this.newPosition;\n      this.pushResize.pushItems(this.pushResize.fromEast);\n      this.push.pushItems(this.push.fromEast, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.x = this.itemBackup[0];\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemLeft(this.gridster.positionXToPixels(this.gridsterItem.$item.x));\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemLeft(this.left);\n    this.setItemWidth(this.width);\n  }\n\n  handleS(e: any): void {\n    this.height = e.clientY + this.offsetTop - this.diffBottom - this.top;\n    if (this.minHeight > this.height) {\n      this.height = this.minHeight;\n    }\n    this.bottom = this.top + this.height;\n    this.newPosition = this.gridster.pixelsToPositionY(this.bottom, Math.ceil);\n    if ((this.gridsterItem.$item.y + this.gridsterItem.$item.rows) !== this.newPosition) {\n      this.itemBackup[3] = this.gridsterItem.$item.rows;\n      this.gridsterItem.$item.rows = this.newPosition - this.gridsterItem.$item.y;\n      this.pushResize.pushItems(this.pushResize.fromNorth);\n      this.push.pushItems(this.push.fromNorth, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.rows = this.itemBackup[3];\n        this.setItemHeight(this.gridster.positionYToPixels(this.gridsterItem.$item.rows) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemHeight(this.height);\n  }\n\n  handleE(e: any): void {\n    this.width = e.clientX + this.offsetLeft - this.diffRight - this.left;\n    if (this.minWidth > this.width) {\n      this.width = this.minWidth;\n    }\n    this.right = this.left + this.width;\n    this.newPosition = this.gridster.pixelsToPositionX(this.right, Math.ceil);\n    if ((this.gridsterItem.$item.x + this.gridsterItem.$item.cols) !== this.newPosition) {\n      this.itemBackup[2] = this.gridsterItem.$item.cols;\n      this.gridsterItem.$item.cols = this.newPosition - this.gridsterItem.$item.x;\n      this.pushResize.pushItems(this.pushResize.fromWest);\n      this.push.pushItems(this.push.fromWest, this.gridster.$options.disablePushOnResize);\n      if (this.gridster.checkCollision(this.gridsterItem.$item)) {\n        this.gridsterItem.$item.cols = this.itemBackup[2];\n        this.setItemWidth(this.gridster.positionXToPixels(this.gridsterItem.$item.cols) - this.margin);\n        return;\n      } else {\n        this.gridster.previewStyle();\n      }\n      this.pushResize.checkPushBack();\n      this.push.checkPushBack();\n    }\n    this.setItemWidth(this.width);\n  }\n\n  handleNW(e: any): void {\n    this.handleN(e);\n    this.handleW(e);\n  }\n\n  handleNE(e: any): void {\n    this.handleN(e);\n    this.handleE(e);\n  }\n\n  handleSW(e: any): void {\n    this.handleS(e);\n    this.handleW(e);\n  }\n\n  handleSE(e: any): void {\n    this.handleS(e);\n    this.handleE(e);\n  }\n\n  toggle(): void {\n    this.resizeEnabled = this.gridsterItem.canBeResized();\n  }\n\n  dragStartDelay(e: any): void {\n    GridsterUtils.checkTouchEvent(e);\n    if (!this.gridster.$options.resizable.delayStart) {\n      this.dragStart(e);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      this.dragStart(e);\n      cancelDrag();\n    }, this.gridster.$options.resizable.delayStart);\n    const cancelMouse = this.gridsterItem.renderer.listen('document', 'mouseup', cancelDrag);\n    const cancelMouseLeave = this.gridsterItem.renderer.listen('document', 'mouseleave', cancelDrag);\n    const cancelOnBlur = this.gridsterItem.renderer.listen('window', 'blur', cancelDrag);\n    const cancelTouchMove = this.gridsterItem.renderer.listen('document', 'touchmove', cancelMove);\n    const cancelTouchEnd = this.gridsterItem.renderer.listen('document', 'touchend', cancelDrag);\n    const cancelTouchCancel = this.gridsterItem.renderer.listen('document', 'touchcancel', cancelDrag);\n\n    function cancelMove(eventMove: any) {\n      GridsterUtils.checkTouchEvent(eventMove);\n      if (Math.abs(eventMove.clientX - e.clientX) > 9 || Math.abs(eventMove.clientY - e.clientY) > 9) {\n        cancelDrag();\n      }\n    }\n\n    function cancelDrag() {\n      clearTimeout(timeout);\n      cancelOnBlur();\n      cancelMouse();\n      cancelMouseLeave();\n      cancelTouchMove();\n      cancelTouchEnd();\n      cancelTouchCancel();\n    }\n  }\n\n  setItemTop(top: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, this.left, top);\n  }\n\n  setItemLeft(left: number): void {\n    this.gridster.gridRenderer.setCellPosition(this.gridsterItem.renderer, this.gridsterItem.el, left, this.top);\n  }\n\n  setItemHeight(height: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'height', height + 'px');\n  }\n\n  setItemWidth(width: number): void {\n    this.gridsterItem.renderer.setStyle(this.gridsterItem.el, 'width', width + 'px');\n  }\n}\n","import {Component, ElementRef, Host, Input, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation, Output, EventEmitter} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  //changed by chengchen\n  @Output() onResized: EventEmitter<any> = new EventEmitter<any>();\n  // add by tx\n  @Output() onItemInit: EventEmitter<any> = new EventEmitter<any>();\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2, private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      //added by tx\n      // this.onItemInit.emit({ width, height });\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n    this.onItemInit.emit({ width, height });\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n    //changed by chengchen\n    this.onResized.emit();\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n}\n","import {Component, ElementRef, Host, OnDestroy, Renderer2, ViewEncapsulation} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: []\n})\nexport class GridsterModule {\n}\n"]}