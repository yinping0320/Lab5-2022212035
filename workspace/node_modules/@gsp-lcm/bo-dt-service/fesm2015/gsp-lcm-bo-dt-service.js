import { of } from 'rxjs/observable/of';
import { HttpHeaders, HttpClient } from '@angular/common/http';
import { Injectable, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/business-object-dt.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const PROJECTS_DIRECTORY = '/api/dev/main/v1.0/business-object-trees';
/** @type {?} */
const url = '/api/runtime/sys/v1.0/business-objects/';
class BusinessObjectDtService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
    }
    /**
     * @return {?}
     */
    getBusinessObjectTree() {
        /** @type {?} */
        const http = this.http;
        /** @type {?} */
        const dboUrl = PROJECTS_DIRECTORY;
        return http.get(dboUrl).pipe();
    }
    /**
     * @param {?} boId
     * @return {?}
     */
    getBusinessObject(boId) {
        /** @type {?} */
        const getUrl = url + boId;
        return this.http.get(getUrl).pipe();
    }
    /**
     * @return {?}
     */
    getBusinessObjects() {
        return this.http.get(url).pipe();
    }
    /**
     * @param {?} productId
     * @param {?} layer
     * @return {?}
     */
    getBoListByProductIdAndLayer(productId, layer) {
        /** @type {?} */
        const getUrl = ' /api/runtime/sys/v1.0/business-objects?productId=' + productId + '&layer=' + layer;
        return this.http.get(getUrl).pipe();
    }
    /**
     * 保存
     * @param {?} postData
     * @return {?}
     */
    save(postData) {
        return this.http.post(url, postData).pipe();
    }
    /**
     * @param {?} postData
     * @return {?}
     */
    saveChanges(postData) {
        return this.http.put(url, postData).pipe();
    }
    /**
     * 删除并重新加载
     * @param {?} dataId
     * @return {?}
     */
    remove(dataId) {
        /** @type {?} */
        const deleteUrl = url + dataId;
        return this.http.delete(deleteUrl, null).pipe();
    }
    /**
     * @param {?} boId
     * @return {?}
     */
    getDevBasicBOInfo(boId) {
        /** @type {?} */
        const devUrl = '/api/runtime/sys/v1.0/business-objects/dev-basic-boinfos/';
        /** @type {?} */
        const getUrl = devUrl + boId;
        return this.http.get(getUrl).pipe();
    }
    /**
     * @param {?} parentId
     * @return {?}
     */
    getBOListByParentId(parentId) {
        /** @type {?} */
        const getUrl = url + '?parentID=' + parentId;
        return this.http.get(getUrl).pipe();
    }
    /**
     * @private
     * @template T
     * @param {?=} operation
     * @param {?=} result
     * @return {?}
     */
    handleError(operation = 'operation', result) {
        return (/**
         * @param {?} error
         * @return {?}
         */
        (error) => {
            console.error(error); // log to console instead
            return of((/** @type {?} */ (result)));
        });
    }
    /**
     * @param {?} parentId
     * @return {?}
     */
    getBusinessObjectsByParentId(parentId) {
        /** @type {?} */
        const headers = new HttpHeaders().set('sessionId', this.sessionId);
        return this.http.get(url + parentId + '/children').pipe();
    }
}
BusinessObjectDtService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
BusinessObjectDtService.ctorParameters = () => [
    { type: HttpClient }
];

/**
 * @fileoverview added by tsickle
 * Generated from: lib/bo-dt-service.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class BoDtServiceModule {
}
BoDtServiceModule.decorators = [
    { type: NgModule, args: [{
                declarations: [],
                imports: [],
                exports: [],
                providers: [BusinessObjectDtService]
            },] }
];

/**
 * @fileoverview added by tsickle
 * Generated from: lib/businessobjectentity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 业务对象实体
 */
class BusinessObjectEntity {
    constructor() {
        this.code = '';
        this.name = '';
    }
}

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: gsp-lcm-bo-dt-service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { BusinessObjectDtService, BoDtServiceModule, BusinessObjectEntity };

//# sourceMappingURL=gsp-lcm-bo-dt-service.js.map