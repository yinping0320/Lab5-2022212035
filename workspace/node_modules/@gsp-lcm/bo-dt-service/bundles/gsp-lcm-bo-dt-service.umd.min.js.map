{"version":3,"sources":["ng://@gsp-lcm/bo-dt-service/lib/business-object-dt.service.ts","ng://@gsp-lcm/bo-dt-service/lib/bo-dt-service.module.ts","ng://@gsp-lcm/bo-dt-service/lib/businessobjectentity.ts"],"names":["url","BusinessObjectDtService","prototype","getBusinessObjectTree","this","http","get","pipe","getBusinessObject","boId","getUrl","getBusinessObjects","getBoListByProductIdAndLayer","productId","layer","save","postData","post","saveChanges","put","remove","dataId","deleteUrl","delete","getDevBasicBOInfo","getBOListByParentId","parentId","handleError","operation","result","error","console","of","getBusinessObjectsByParentId","HttpHeaders","set","sessionId","Injectable","HttpClient","BoDtServiceModule","NgModule","args","declarations","imports","exports","providers","BusinessObjectEntity","code","name"],"mappings":"udAMMA,EAAK,0CAEXC,GAMEA,EAAAC,UAAAC,sBAAA,WAIE,OAFaC,KAAKC,KAENC,IAbW,4CAaCC,QAE1BN,EAAAC,UAAAM,kBAAA,SAAkBC,OACVC,EAASV,EAAMS,EACrB,OAAOL,KAAKC,KAAKC,IAAII,GAAQH,QAG/BN,EAAAC,UAAAS,mBAAA,WACE,OAAOP,KAAKC,KAAKC,IAAIN,GAAKO,QAE5BN,EAAAC,UAAAU,6BAAA,SAA6BC,EAAiBC,OACtCJ,EAAO,qDAAqDG,EAAU,UAAUC,EACtF,OAAOV,KAAKC,KAAKC,IAAII,GAAQH,QAM/BN,EAAAC,UAAAa,KAAA,SAAKC,GACH,OAAOZ,KAAKC,KAAKY,KAAKjB,EAAKgB,GAAUT,QAGvCN,EAAAC,UAAAgB,YAAA,SAAYF,GACP,OAAOZ,KAAKC,KAAKc,IAAInB,EAAKgB,GAAUT,QAKzCN,EAAAC,UAAAkB,OAAA,SAAOC,OACCC,EAAYtB,EAAMqB,EACxB,OAAOjB,KAAKC,KAAKkB,UAAOD,EAAW,MAAMf,QAE3CN,EAAAC,UAAAsB,kBAAA,SAAkBf,OAEVC,EADQ,4DACUD,EACxB,OAAOL,KAAKC,KAAKC,IAAII,GAAQH,QAG/BN,EAAAC,UAAAuB,oBAAA,SAAoBC,OACZhB,EAASV,EAAM,aAAa0B,EAClC,OAAOtB,KAAKC,KAAKC,IAAII,GAAQH,QAEvBN,EAAAC,UAAAyB,YAAR,SAAuBC,EAAyBC,GAC9C,YADqB,IAAAD,IAAAA,EAAA,aACrB,SAAQE,GAEN,OADAC,QAAQD,MAAMA,GACPE,EAAAA,GAAE,KAIb/B,EAAAC,UAAA+B,6BAAA,SAA6BP,GAE3B,OADgB,IAAIQ,EAAAA,aAAcC,IAAI,YAAa/B,KAAKgC,WACjDhC,KAAKC,KAAKC,IAAIN,EAAI0B,EAAS,aAAanB,4BA7DlD8B,EAAAA,sDALqBC,EAAAA,cAoEtBrC,GA5DE,SAAAA,EAAoBI,GAAAD,KAAAC,KAAAA,ECXtB,IAAAkC,uBAGCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,GACdC,QAAS,GAETC,QAAS,GACVC,UAAU,CAAC5C,OAEqBsC,GAPjC,SAAAA,KCCA,MAEI,SAAAO,IACI1C,KAAK2C,KAAK,GACV3C,KAAK4C,KAAK","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\n\r\nconst PROJECTS_DIRECTORY = '/api/dev/main/v1.0/business-object-trees';\r\nconst url= '/api/runtime/sys/v1.0/business-objects/';\r\n\r\n@Injectable()\r\nexport class BusinessObjectDtService {\r\n  public sessionId: string;\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getBusinessObjectTree(): Observable<any> {\r\n\r\n    const http = this.http;\r\n    const dboUrl =  PROJECTS_DIRECTORY;\r\n    return http.get(dboUrl).pipe();\r\n  }\r\n  getBusinessObject(boId:string): Observable<any> {\r\n    const getUrl = url + boId;\r\n    return this.http.get(getUrl).pipe();\r\n  }\r\n\r\n  getBusinessObjects(): Observable<any> {\r\n    return this.http.get(url).pipe();\r\n  }\r\n  getBoListByProductIdAndLayer(productId:string,layer:string): Observable<any> {\r\n    const getUrl=' /api/runtime/sys/v1.0/business-objects?productId='+productId+'&layer='+layer;\r\n    return this.http.get(getUrl).pipe();\r\n  }\r\n  \r\n    /**\r\n   * ä¿å­\r\n   */\r\n  save(postData: any): Observable<any>  {\r\n    return this.http.post(url, postData).pipe();\r\n  }\r\n\r\n  saveChanges(postData: any):Observable<any>  {\r\n       return this.http.put(url, postData).pipe()\r\n  }\r\n/**\r\n   * å é¤å¹¶éæ°å è½½\r\n   */\r\n  remove(dataId: string): Observable<any>  {\r\n    const deleteUrl = url + dataId;\r\n    return this.http.delete(deleteUrl, null).pipe();\r\n  }\r\n  getDevBasicBOInfo(boId:string):Observable<any>{\r\n    const devUrl= '/api/runtime/sys/v1.0/business-objects/dev-basic-boinfos/';\r\n    const getUrl = devUrl + boId;\r\n    return this.http.get(getUrl).pipe();\r\n  }\r\n\r\n  getBOListByParentId(parentId:string):Observable<any>{\r\n    const getUrl = url + '?parentID='+parentId;\r\n    return this.http.get(getUrl).pipe();\r\n  }\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error); // log to console instead\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  getBusinessObjectsByParentId(parentId:string): Observable<any> {\r\n    const headers = new HttpHeaders().set('sessionId', this.sessionId);\r\n    return this.http.get(url+parentId+'/children').pipe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BusinessObjectDtService } from './business-object-dt.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n  ],\r\n  exports: [],\r\n providers:[BusinessObjectDtService]\r\n})\r\nexport class BoDtServiceModule { }\r\n","\r\n/**\r\n * ä¸å¡å¯¹è±¡å®ä½\r\n */\r\nexport class BusinessObjectEntity {\r\n\r\n    constructor(){\r\n        this.code='';\r\n        this.name='';\r\n    }\r\n    /**\r\n     * Id\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * code\r\n     */\r\n    code: string;\r\n\r\n    /**\r\n     * name\r\n     */\r\n    name: string;\r\n    /**\r\n     * type\r\n     */\r\n    type: number;\r\n\r\n    /**\r\n   * å±çº§\r\n   */\r\n    layer: number;\r\n\r\n\r\n    /**\r\n     * æ¯å¦æç»\r\n     */\r\n    isDetail: string;\r\n\r\n    /**\r\n   * æ¯å¦ç³»ç»é¢å¶\r\n   */\r\n    sysInit: string;\r\n\r\n    /**\r\n     * æè¿°\r\n     */\r\n    description: string;\r\n\r\n\r\n    /**\r\n     * ç¶èç¹\r\n     */\r\n    parentID: string;\r\n\r\n\r\n    /**\r\n   * åºå·\r\n   */\r\n    sortOrder: number;\r\n\r\n      /**\r\n   * æ¯å¦ç³»ç»é¢å¶\r\n   */\r\n    isSysInit: boolean;\r\n\r\n}\r\n\r\n"]}