import { of } from 'rxjs/observable/of';
import { HttpHeaders, HttpClient } from '@angular/common/http';
import { Injectable, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/business-object-dt.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var PROJECTS_DIRECTORY = '/api/dev/main/v1.0/business-object-trees';
/** @type {?} */
var url = '/api/runtime/sys/v1.0/business-objects/';
var BusinessObjectDtService = /** @class */ (function () {
    function BusinessObjectDtService(http) {
        this.http = http;
    }
    /**
     * @return {?}
     */
    BusinessObjectDtService.prototype.getBusinessObjectTree = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var http = this.http;
        /** @type {?} */
        var dboUrl = PROJECTS_DIRECTORY;
        return http.get(dboUrl).pipe();
    };
    /**
     * @param {?} boId
     * @return {?}
     */
    BusinessObjectDtService.prototype.getBusinessObject = /**
     * @param {?} boId
     * @return {?}
     */
    function (boId) {
        /** @type {?} */
        var getUrl = url + boId;
        return this.http.get(getUrl).pipe();
    };
    /**
     * @return {?}
     */
    BusinessObjectDtService.prototype.getBusinessObjects = /**
     * @return {?}
     */
    function () {
        return this.http.get(url).pipe();
    };
    /**
     * @param {?} productId
     * @param {?} layer
     * @return {?}
     */
    BusinessObjectDtService.prototype.getBoListByProductIdAndLayer = /**
     * @param {?} productId
     * @param {?} layer
     * @return {?}
     */
    function (productId, layer) {
        /** @type {?} */
        var getUrl = ' /api/runtime/sys/v1.0/business-objects?productId=' + productId + '&layer=' + layer;
        return this.http.get(getUrl).pipe();
    };
    /**
   * 保存
   */
    /**
     * 保存
     * @param {?} postData
     * @return {?}
     */
    BusinessObjectDtService.prototype.save = /**
     * 保存
     * @param {?} postData
     * @return {?}
     */
    function (postData) {
        return this.http.post(url, postData).pipe();
    };
    /**
     * @param {?} postData
     * @return {?}
     */
    BusinessObjectDtService.prototype.saveChanges = /**
     * @param {?} postData
     * @return {?}
     */
    function (postData) {
        return this.http.put(url, postData).pipe();
    };
    /**
       * 删除并重新加载
       */
    /**
     * 删除并重新加载
     * @param {?} dataId
     * @return {?}
     */
    BusinessObjectDtService.prototype.remove = /**
     * 删除并重新加载
     * @param {?} dataId
     * @return {?}
     */
    function (dataId) {
        /** @type {?} */
        var deleteUrl = url + dataId;
        return this.http.delete(deleteUrl, null).pipe();
    };
    /**
     * @param {?} boId
     * @return {?}
     */
    BusinessObjectDtService.prototype.getDevBasicBOInfo = /**
     * @param {?} boId
     * @return {?}
     */
    function (boId) {
        /** @type {?} */
        var devUrl = '/api/runtime/sys/v1.0/business-objects/dev-basic-boinfos/';
        /** @type {?} */
        var getUrl = devUrl + boId;
        return this.http.get(getUrl).pipe();
    };
    /**
     * @param {?} parentId
     * @return {?}
     */
    BusinessObjectDtService.prototype.getBOListByParentId = /**
     * @param {?} parentId
     * @return {?}
     */
    function (parentId) {
        /** @type {?} */
        var getUrl = url + '?parentID=' + parentId;
        return this.http.get(getUrl).pipe();
    };
    /**
     * @private
     * @template T
     * @param {?=} operation
     * @param {?=} result
     * @return {?}
     */
    BusinessObjectDtService.prototype.handleError = /**
     * @private
     * @template T
     * @param {?=} operation
     * @param {?=} result
     * @return {?}
     */
    function (operation, result) {
        if (operation === void 0) { operation = 'operation'; }
        return (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.error(error); // log to console instead
            return of((/** @type {?} */ (result)));
        });
    };
    /**
     * @param {?} parentId
     * @return {?}
     */
    BusinessObjectDtService.prototype.getBusinessObjectsByParentId = /**
     * @param {?} parentId
     * @return {?}
     */
    function (parentId) {
        /** @type {?} */
        var headers = new HttpHeaders().set('sessionId', this.sessionId);
        return this.http.get(url + parentId + '/children').pipe();
    };
    BusinessObjectDtService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    BusinessObjectDtService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    return BusinessObjectDtService;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/bo-dt-service.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BoDtServiceModule = /** @class */ (function () {
    function BoDtServiceModule() {
    }
    BoDtServiceModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [],
                    imports: [],
                    exports: [],
                    providers: [BusinessObjectDtService]
                },] }
    ];
    return BoDtServiceModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: lib/businessobjectentity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 业务对象实体
 */
var  /**
 * 业务对象实体
 */
BusinessObjectEntity = /** @class */ (function () {
    function BusinessObjectEntity() {
        this.code = '';
        this.name = '';
    }
    return BusinessObjectEntity;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: gsp-lcm-bo-dt-service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { BusinessObjectDtService, BoDtServiceModule, BusinessObjectEntity };

//# sourceMappingURL=gsp-lcm-bo-dt-service.js.map