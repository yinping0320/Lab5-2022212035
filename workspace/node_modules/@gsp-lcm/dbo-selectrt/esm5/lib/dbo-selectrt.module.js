/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ComponentFactoryResolver, Injector, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DboSelectRTComponent } from './dbo-selectrt/dbo-selectrt.component';
import { GridModule } from '@progress/kendo-angular-grid';
import { FormsModule } from '@angular/forms';
import { PackageModule } from '@farris/ide-devkit';
import { DboHelpRtService } from './dbo-help-rt.service';
import { HttpClientModule } from '@angular/Common/http';
var DboSelectRTModule = /** @class */ (function (_super) {
    tslib_1.__extends(DboSelectRTModule, _super);
    function DboSelectRTModule(cfr, injector) {
        var _this = _super.call(this) || this;
        _this.cfr = cfr;
        _this.injector = injector;
        return _this;
    }
    DboSelectRTModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        GridModule,
                        FormsModule,
                        HttpClientModule
                    ],
                    providers: [DboHelpRtService],
                    declarations: [DboSelectRTComponent],
                    entryComponents: [DboSelectRTComponent]
                },] }
    ];
    /** @nocollapse */
    DboSelectRTModule.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: Injector }
    ]; };
    return DboSelectRTModule;
}(PackageModule));
export { DboSelectRTModule };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DboSelectRTModule.prototype.cfr;
    /**
     * @type {?}
     * @private
     */
    DboSelectRTModule.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGJvLXNlbGVjdHJ0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL2Riby1zZWxlY3RydC8iLCJzb3VyY2VzIjpbImxpYi9kYm8tc2VsZWN0cnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHdCQUF3QixFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQ2xHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxhQUFhLEVBQXNCLE1BQU0sb0JBQW9CLENBQUM7QUFDdkUsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFdkQ7SUFZdUMsNkNBQWE7SUFFbEQsMkJBQW9CLEdBQTZCLEVBQVUsUUFBa0I7UUFBN0UsWUFDRSxpQkFBTyxTQUNSO1FBRm1CLFNBQUcsR0FBSCxHQUFHLENBQTBCO1FBQVUsY0FBUSxHQUFSLFFBQVEsQ0FBVTs7SUFFN0UsQ0FBQzs7Z0JBaEJGLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixVQUFVO3dCQUNWLFdBQVc7d0JBQ1gsZ0JBQWdCO3FCQUNqQjtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztvQkFDN0IsWUFBWSxFQUFFLENBQUMsb0JBQW9CLENBQUM7b0JBQ3BDLGVBQWUsRUFBRSxDQUFDLG9CQUFvQixDQUFDO2lCQUN4Qzs7OztnQkFuQlEsd0JBQXdCO2dCQUFFLFFBQVE7O0lBMEIzQyx3QkFBQztDQUFBLEFBakJELENBWXVDLGFBQWEsR0FLbkQ7U0FMWSxpQkFBaUI7Ozs7OztJQUVoQixnQ0FBcUM7Ozs7O0lBQUUscUNBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBJbmplY3RvciwgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHtEYm9TZWxlY3RSVENvbXBvbmVudH0gZnJvbSAnLi9kYm8tc2VsZWN0cnQvZGJvLXNlbGVjdHJ0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEdyaWRNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFBhY2thZ2VNb2R1bGUsIEdTUCwgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvaWRlLWRldmtpdCc7XHJcbmltcG9ydCB7RGJvSGVscFJ0U2VydmljZX0gZnJvbSAnLi9kYm8taGVscC1ydC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvQ29tbW9uL2h0dHAnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBHcmlkTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtEYm9IZWxwUnRTZXJ2aWNlXSxcclxuICBkZWNsYXJhdGlvbnM6IFtEYm9TZWxlY3RSVENvbXBvbmVudF0sXHJcbiAgZW50cnlDb21wb25lbnRzOiBbRGJvU2VsZWN0UlRDb21wb25lbnRdXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgRGJvU2VsZWN0UlRNb2R1bGUgZXh0ZW5kcyBQYWNrYWdlTW9kdWxlIHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==