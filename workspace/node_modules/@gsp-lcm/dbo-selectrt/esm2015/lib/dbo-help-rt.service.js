/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpHeaders, HttpClient } from '@angular/Common/http';
export class DboHelpRtService {
    /**
     * @param {?} rest
     */
    constructor(rest) {
        this.rest = rest;
        this.databaseurlRT = '/api/runtime/sys/v1.0/database-objects';
    }
    /**
     * 数据库对象选择帮助界面（运行时）
     * @return {?}
     */
    getAllDatabaseObjectRT() {
        /** @type {?} */
        var headers = new HttpHeaders();
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', 'as');
        headers.append('Access-Control-Allow-Origin', '*');
        headers.append('sessionId', this.sessionId);
        /** @type {?} */
        var options = {
            params: {},
            headers: headers
        };
        return this.rest.get(this.databaseurlRT, options).pipe();
    }
    /**
     * 左侧业务对象导航树右侧dbo列表帮助界面
     * @param {?} boID
     * @return {?}
     */
    getAllDatabaseObjectByBOID(boID) {
        /** @type {?} */
        const headers = new HttpHeaders();
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', 'as');
        headers.append('Access-Control-Allow-Origin', '*');
        headers.append('sessionId', this.sessionId);
        /** @type {?} */
        const options = {
            params: {},
            headers: headers
        };
        /** @type {?} */
        const url = this.databaseurlRT + '/bo/' + boID;
        return this.rest.get(url, options).pipe();
    }
}
DboHelpRtService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
DboHelpRtService.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    DboHelpRtService.prototype.databaseurlRT;
    /** @type {?} */
    DboHelpRtService.prototype.sessionId;
    /**
     * @type {?}
     * @private
     */
    DboHelpRtService.prototype.rest;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGJvLWhlbHAtcnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL2Riby1zZWxlY3RydC8iLCJzb3VyY2VzIjpbImxpYi9kYm8taGVscC1ydC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFJOUQsTUFBTSxPQUFPLGdCQUFnQjs7OztJQUUzQixZQUFvQixJQUFnQjtRQUFoQixTQUFJLEdBQUosSUFBSSxDQUFZO1FBRDVCLGtCQUFhLEdBQUcsd0NBQXdDLENBQUM7SUFDekIsQ0FBQzs7Ozs7SUFLekMsc0JBQXNCOztZQUNoQixPQUFPLEdBQUcsSUFBSSxXQUFXLEVBQUU7UUFDL0IsT0FBTyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztRQUNuRCxPQUFPLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN0QyxPQUFPLENBQUMsTUFBTSxDQUFDLDZCQUE2QixFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ25ELE9BQU8sQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQzs7WUFDeEMsT0FBTyxHQUFFO1lBQ1QsTUFBTSxFQUFFLEVBQUU7WUFDVixPQUFPLEVBQUUsT0FBTztTQUNuQjtRQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQ3JELENBQUM7SUFDSixDQUFDOzs7Ozs7SUFLSCwwQkFBMEIsQ0FBQyxJQUFZOztjQUMvQixPQUFPLEdBQUcsSUFBSSxXQUFXLEVBQUU7UUFDakMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztRQUNuRCxPQUFPLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN0QyxPQUFPLENBQUMsTUFBTSxDQUFDLDZCQUE2QixFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ25ELE9BQU8sQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQzs7Y0FDdEMsT0FBTyxHQUFFO1lBQ2IsTUFBTSxFQUFFLEVBQUU7WUFDVixPQUFPLEVBQUUsT0FBTztTQUNqQjs7Y0FDTyxHQUFHLEdBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLEdBQUcsSUFBSTtRQUMvQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMzQyxDQUFDOzs7WUFyQ0YsVUFBVTs7OztZQUhXLFVBQVU7Ozs7Ozs7SUFLOUIseUNBQWlFOztJQUVqRSxxQ0FBeUI7Ozs7O0lBRGIsZ0NBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcclxuaW1wb3J0IHsgSHR0cEhlYWRlcnMsIEh0dHBDbGllbnR9IGZyb20gJ0Bhbmd1bGFyL0NvbW1vbi9odHRwJztcclxuXHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEYm9IZWxwUnRTZXJ2aWNlIHtcclxuICBwcml2YXRlIGRhdGFiYXNldXJsUlQgPSAnL2FwaS9ydW50aW1lL3N5cy92MS4wL2RhdGFiYXNlLW9iamVjdHMnO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVzdDogSHR0cENsaWVudCkgeyB9XHJcbiAgcHVibGljIHNlc3Npb25JZDogc3RyaW5nO1xyXG4vKipcclxuICog5pWw5o2u5bqT5a+56LGh6YCJ5oup5biu5Yqp55WM6Z2i77yI6L+Q6KGM5pe277yJXHJcbiAqL1xyXG4gIGdldEFsbERhdGFiYXNlT2JqZWN0UlQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHZhciBoZWFkZXJzID0gbmV3IEh0dHBIZWFkZXJzKCk7XHJcbiAgICBoZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcclxuICAgIGhlYWRlcnMuYXBwZW5kKCdBdXRob3JpemF0aW9uJywgJ2FzJyk7XHJcbiAgICBoZWFkZXJzLmFwcGVuZCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcclxuICAgIGhlYWRlcnMuYXBwZW5kKCdzZXNzaW9uSWQnLCB0aGlzLnNlc3Npb25JZCk7XHJcbiAgICB2YXIgb3B0aW9ucyA9e1xyXG4gICAgICAgIHBhcmFtczoge30sXHJcbiAgICAgICAgaGVhZGVyczogaGVhZGVyc1xyXG4gICAgfTtcclxuICAgIHJldHVybiB0aGlzLnJlc3QuZ2V0KHRoaXMuZGF0YWJhc2V1cmxSVCwgb3B0aW9ucykucGlwZShcclxuICAgICk7XHJcbiAgfVxyXG5cclxuLyoqXHJcbiAqIOW3puS+p+S4muWKoeWvueixoeWvvOiIquagkeWPs+S+p2Rib+WIl+ihqOW4ruWKqeeVjOmdolxyXG4gKi9cclxuZ2V0QWxsRGF0YWJhc2VPYmplY3RCeUJPSUQoYm9JRDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICBjb25zdCBoZWFkZXJzID0gbmV3IEh0dHBIZWFkZXJzKCk7XHJcbiAgaGVhZGVycy5hcHBlbmQoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XHJcbiAgaGVhZGVycy5hcHBlbmQoJ0F1dGhvcml6YXRpb24nLCAnYXMnKTtcclxuICBoZWFkZXJzLmFwcGVuZCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcclxuICBoZWFkZXJzLmFwcGVuZCgnc2Vzc2lvbklkJywgdGhpcy5zZXNzaW9uSWQpO1xyXG4gIGNvbnN0IG9wdGlvbnMgPXtcclxuICAgIHBhcmFtczoge30sXHJcbiAgICBoZWFkZXJzOiBoZWFkZXJzXHJcbiAgfTtcclxuICAgIGNvbnN0IHVybCA9ICB0aGlzLmRhdGFiYXNldXJsUlQgKyAnL2JvLycgKyBib0lEO1xyXG4gICAgcmV0dXJuIHRoaXMucmVzdC5nZXQodXJsLG9wdGlvbnMpLnBpcGUoKTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ==