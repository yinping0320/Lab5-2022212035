import { __extends } from 'tslib';
import { Injectable, Component, Input, Output, EventEmitter, ViewChild, ComponentFactoryResolver, Injector, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { GridModule } from '@progress/kendo-angular-grid';
import { FormsModule } from '@angular/forms';
import { PackageModule } from '@farris/ide-devkit';
import { HttpHeaders, HttpClient, HttpClientModule } from '@angular/Common/http';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DboHelpRtService = /** @class */ (function () {
    function DboHelpRtService(rest) {
        this.rest = rest;
        this.databaseurlRT = '/api/runtime/sys/v1.0/database-objects';
    }
    /**
     * 数据库对象选择帮助界面（运行时）
     */
    /**
     * 数据库对象选择帮助界面（运行时）
     * @return {?}
     */
    DboHelpRtService.prototype.getAllDatabaseObjectRT = /**
     * 数据库对象选择帮助界面（运行时）
     * @return {?}
     */
    function () {
        /** @type {?} */
        var headers = new HttpHeaders();
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', 'as');
        headers.append('Access-Control-Allow-Origin', '*');
        headers.append('sessionId', this.sessionId);
        /** @type {?} */
        var options = {
            params: {},
            headers: headers
        };
        return this.rest.get(this.databaseurlRT, options).pipe();
    };
    /**
     * 左侧业务对象导航树右侧dbo列表帮助界面
     */
    /**
     * 左侧业务对象导航树右侧dbo列表帮助界面
     * @param {?} boID
     * @return {?}
     */
    DboHelpRtService.prototype.getAllDatabaseObjectByBOID = /**
     * 左侧业务对象导航树右侧dbo列表帮助界面
     * @param {?} boID
     * @return {?}
     */
    function (boID) {
        /** @type {?} */
        var headers = new HttpHeaders();
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', 'as');
        headers.append('Access-Control-Allow-Origin', '*');
        headers.append('sessionId', this.sessionId);
        /** @type {?} */
        var options = {
            params: {},
            headers: headers
        };
        /** @type {?} */
        var url = this.databaseurlRT + '/bo/' + boID;
        return this.rest.get(url, options).pipe();
    };
    DboHelpRtService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    DboHelpRtService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    return DboHelpRtService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DboSelectRTComponent = /** @class */ (function () {
    function DboSelectRTComponent(dboHelpService) {
        this.dboHelpService = dboHelpService;
        this.url = '';
        /**
         * 帮助标题
         */
        this.title = '帮助';
        /**
         * 输出事件
         */
        this.selectedAfterOk = new EventEmitter();
        this.modalClosed = new EventEmitter();
        this.selectableSettings = {
            checkboxOnly: true,
            mode: 'single',
            enabled: true
        };
        /** @type {?} */
        var sessionId = this.sessionId;
        if (!sessionId) {
            alert('session信息不能为空');
        }
        else {
            this.dboHelpService.sessionId = sessionId;
        }
    }
    /**输入属性变化后 */
    /**
     * 输入属性变化后
     * @param {?} changes
     * @return {?}
     */
    DboSelectRTComponent.prototype.ngOnChanges = /**
     * 输入属性变化后
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * @return {?}
     */
    DboSelectRTComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dboHelpService.getAllDatabaseObjectRT()
            .subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            _this.data = result;
            _this.curSelectedKeys = [];
            if (_this.initSelectedKeys) {
                _this.initSelectedKeys.map((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return _this.curSelectedKeys.push(item); }));
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.log('获取数据源失败！');
            console.log(error);
        }));
    };
    /**帮助确定按钮 */
    /**
     * 帮助确定按钮
     * @return {?}
     */
    DboSelectRTComponent.prototype.btnOk = /**
     * 帮助确定按钮
     * @return {?}
     */
    function () {
        var _this = this;
        // 根据选中行获取实体数据
        // 服务端获取数据
        /** @type {?} */
        var selectPosEntity = [];
        this.curSelectedKeys.forEach((/**
         * @param {?} dboID
         * @return {?}
         */
        function (dboID) {
            /** @type {?} */
            var selectDBO = _this.data.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item['id'] === dboID; }));
            selectPosEntity.push(selectDBO);
        }));
        if (!selectPosEntity) {
            alert('请选择数据库对象');
            return;
        }
        else {
            // 发射当前选中数据
            this.selectedAfterOk.next(selectPosEntity);
        }
        this.hideModal();
    };
    /**
     * @return {?}
     */
    DboSelectRTComponent.prototype.hideModal = /**
     * @return {?}
     */
    function () {
        this.modalClosed.emit();
    };
    DboSelectRTComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-dbo-selectrt',
                    template: "<div class=\"modal-body\">\r\n<div class=\"templateBlock\">\r\n  <kendo-grid [class]=\"'flex-auto'\" [selectable]=\"selectableSettings\" [kendoGridSelectBy]=\"'id'\" [selectedKeys]=\"curSelectedKeys\"\r\n    [kendoGridBinding]=\"data\">\r\n    <kendo-grid-checkbox-column width=\"10%\"></kendo-grid-checkbox-column>\r\n    <kendo-grid-column field=\"code\" title=\"\u7F16\u53F7\" width=\"40%\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"name\" title=\"\u540D\u79F0\" width=\"45%\"></kendo-grid-column>\r\n  </kendo-grid>\r\n  </div>\r\n</div>\r\n<ng-template #btns>\r\n<button type=\"button\" class=\"btn btn-default btn-primary\" (click)=\"btnOk()\">\u786E\u5B9A</button>\r\n<button type=\"button\" class=\"btn btn-default\" (click)=\"hideModal()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    DboSelectRTComponent.ctorParameters = function () { return [
        { type: DboHelpRtService }
    ]; };
    DboSelectRTComponent.propDecorators = {
        url: [{ type: Input }],
        title: [{ type: Input }],
        isShow: [{ type: Input }],
        initSelectedKeys: [{ type: Input }],
        sessionId: [{ type: Input }],
        selectedAfterOk: [{ type: Output }],
        modalClosed: [{ type: Output }],
        modalFooter: [{ type: ViewChild, args: ['modalFooter',] }],
        btns: [{ type: ViewChild, args: ['btns',] }]
    };
    return DboSelectRTComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DboSelectRTModule = /** @class */ (function (_super) {
    __extends(DboSelectRTModule, _super);
    function DboSelectRTModule(cfr, injector) {
        var _this = _super.call(this) || this;
        _this.cfr = cfr;
        _this.injector = injector;
        return _this;
    }
    DboSelectRTModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        GridModule,
                        FormsModule,
                        HttpClientModule
                    ],
                    providers: [DboHelpRtService],
                    declarations: [DboSelectRTComponent],
                    entryComponents: [DboSelectRTComponent]
                },] }
    ];
    /** @nocollapse */
    DboSelectRTModule.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: Injector }
    ]; };
    return DboSelectRTModule;
}(PackageModule));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { DboHelpRtService, DboSelectRTComponent, DboSelectRTModule };

//# sourceMappingURL=gsp-lcm-dbo-selectrt.js.map