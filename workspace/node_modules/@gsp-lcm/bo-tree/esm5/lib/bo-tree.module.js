/**
 * @fileoverview added by tsickle
 * Generated from: lib/bo-tree.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TreeNodeContentDirective } from './directives/tree-node-content.directive';
import { BOTreePanelComponent } from './views/bo-tree-panel/bo-tree-panel.component';
import { BOTreePanelState } from './views/bo-tree-panel/bo-tree-panel.state';
import { HttpService } from '@ecp-caf/caf-common';
import { BusinessObjectRtService } from "@gsp-lcm/bo-rt-service";
import { TreeTableModule } from '@farris/ui-treetable';
var BOTreePanelPackageModule = /** @class */ (function () {
    function BOTreePanelPackageModule() {
    }
    BOTreePanelPackageModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        TreeNodeContentDirective,
                        BOTreePanelComponent
                    ],
                    imports: [
                        CommonModule,
                        TreeTableModule
                    ],
                    exports: [BOTreePanelComponent],
                    providers: [BOTreePanelState, HttpService, BusinessObjectRtService],
                    entryComponents: [BOTreePanelComponent]
                },] }
    ];
    return BOTreePanelPackageModule;
}());
export { BOTreePanelPackageModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm8tdHJlZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWxjbS9iby10cmVlLyIsInNvdXJjZXMiOlsibGliL2JvLXRyZWUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDcEYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDckYsT0FBTyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sMkNBQTJDLENBQUM7QUFDNUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUV2RDtJQUFBO0lBY0EsQ0FBQzs7Z0JBZEEsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWix3QkFBd0I7d0JBQ3hCLG9CQUFvQjtxQkFDckI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osZUFBZTtxQkFDaEI7b0JBQ0QsT0FBTyxFQUFFLENBQUMsb0JBQW9CLENBQUM7b0JBQy9CLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixFQUFHLFdBQVcsRUFBRSx1QkFBdUIsQ0FBQztvQkFDcEUsZUFBZSxFQUFFLENBQUMsb0JBQW9CLENBQUM7aUJBQ3hDOztJQUVELCtCQUFDO0NBQUEsQUFkRCxJQWNDO1NBRFksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgVHJlZU5vZGVDb250ZW50RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL3RyZWUtbm9kZS1jb250ZW50LmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IEJPVHJlZVBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy9iby10cmVlLXBhbmVsL2JvLXRyZWUtcGFuZWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQk9UcmVlUGFuZWxTdGF0ZX0gZnJvbSAnLi92aWV3cy9iby10cmVlLXBhbmVsL2JvLXRyZWUtcGFuZWwuc3RhdGUnO1xyXG5pbXBvcnQgeyBIdHRwU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBCdXNpbmVzc09iamVjdFJ0U2VydmljZSB9IGZyb20gXCJAZ3NwLWxjbS9iby1ydC1zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IFRyZWVUYWJsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdHJlZXRhYmxlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBUcmVlTm9kZUNvbnRlbnREaXJlY3RpdmUsXHJcbiAgICBCT1RyZWVQYW5lbENvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgVHJlZVRhYmxlTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbQk9UcmVlUGFuZWxDb21wb25lbnRdLFxyXG4gIHByb3ZpZGVyczogW0JPVHJlZVBhbmVsU3RhdGUsICBIdHRwU2VydmljZSwgQnVzaW5lc3NPYmplY3RSdFNlcnZpY2VdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW0JPVHJlZVBhbmVsQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQk9UcmVlUGFuZWxQYWNrYWdlTW9kdWxlIHtcclxufVxyXG4iXX0=