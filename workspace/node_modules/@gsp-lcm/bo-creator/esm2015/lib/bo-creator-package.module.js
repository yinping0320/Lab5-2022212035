/**
 * @fileoverview added by tsickle
 * Generated from: lib/bo-creator-package.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BOCreatorComponent } from './views/bo-creator/bo-creator.component';
import { InputGroupModule } from '@farris/ui-input-group';
import { FormsModule } from '@angular/forms';
import { InputsModule } from '@progress/kendo-angular-inputs';
import { NotifyModule } from '@farris/ui-notify';
import { ComboListModule } from '@farris/ui-combo-list';
import { BoDtServiceModule, BusinessObjectDtService } from '@gsp-lcm/bo-dt-service';
import { AppCreatorModalComponent } from './views/bo-creator/modal/app-modal/app-creator-modal.component';
import { BoCreatorUtils } from './views/bo-creator/utils/bo-create-utils';
import { SuCreatorModalComponent } from './views/bo-creator/modal/su-modal/su-creator-modal.component';
import { BoCreatorModalComponent } from './views/bo-creator/modal/bo-modal/bo-creator-modal.component';
export class BOCreatorPackageModule {
}
BOCreatorPackageModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    BOCreatorComponent,
                    AppCreatorModalComponent,
                    SuCreatorModalComponent,
                    BoCreatorModalComponent
                ],
                imports: [
                    CommonModule,
                    InputGroupModule,
                    FormsModule,
                    InputsModule,
                    NotifyModule.forRoot(),
                    ComboListModule,
                    BoDtServiceModule
                ],
                entryComponents: [BOCreatorComponent],
                exports: [BOCreatorComponent, AppCreatorModalComponent],
                providers: [BusinessObjectDtService, BoCreatorUtils]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm8tY3JlYXRvci1wYWNrYWdlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL2JvLWNyZWF0b3IvIiwic291cmNlcyI6WyJsaWIvYm8tY3JlYXRvci1wYWNrYWdlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNwRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxnRUFBZ0UsQ0FBQztBQUMxRyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOERBQThELENBQUM7QUFDdkcsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOERBQThELENBQUM7QUFzQnZHLE1BQU0sT0FBTyxzQkFBc0I7OztZQXBCbEMsUUFBUSxTQUFDO2dCQUNOLFlBQVksRUFBRTtvQkFDVixrQkFBa0I7b0JBQ2xCLHdCQUF3QjtvQkFDeEIsdUJBQXVCO29CQUN2Qix1QkFBdUI7aUJBQzFCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxZQUFZO29CQUNaLGdCQUFnQjtvQkFDaEIsV0FBVztvQkFDWCxZQUFZO29CQUNaLFlBQVksQ0FBQyxPQUFPLEVBQUU7b0JBQ3RCLGVBQWU7b0JBQ2YsaUJBQWlCO2lCQUNwQjtnQkFDRCxlQUFlLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztnQkFDckMsT0FBTyxFQUFFLENBQUMsa0JBQWtCLEVBQUMsd0JBQXdCLENBQUM7Z0JBQ3RELFNBQVMsRUFBRSxDQUFDLHVCQUF1QixFQUFDLGNBQWMsQ0FBQzthQUN0RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEJPQ3JlYXRvckNvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvYm8tY3JlYXRvci9iby1jcmVhdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IElucHV0c01vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWlucHV0cyc7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgQ29tYm9MaXN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21iby1saXN0JztcclxuaW1wb3J0IHsgQm9EdFNlcnZpY2VNb2R1bGUsIEJ1c2luZXNzT2JqZWN0RHRTZXJ2aWNlIH0gZnJvbSAnQGdzcC1sY20vYm8tZHQtc2VydmljZSc7XHJcbmltcG9ydCB7IEFwcENyZWF0b3JNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvYm8tY3JlYXRvci9tb2RhbC9hcHAtbW9kYWwvYXBwLWNyZWF0b3ItbW9kYWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQm9DcmVhdG9yVXRpbHMgfSBmcm9tICcuL3ZpZXdzL2JvLWNyZWF0b3IvdXRpbHMvYm8tY3JlYXRlLXV0aWxzJztcbmltcG9ydCB7IFN1Q3JlYXRvck1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy9iby1jcmVhdG9yL21vZGFsL3N1LW1vZGFsL3N1LWNyZWF0b3ItbW9kYWwuY29tcG9uZW50JztcbmltcG9ydCB7IEJvQ3JlYXRvck1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy9iby1jcmVhdG9yL21vZGFsL2JvLW1vZGFsL2JvLWNyZWF0b3ItbW9kYWwuY29tcG9uZW50JztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBCT0NyZWF0b3JDb21wb25lbnQsXHJcbiAgICAgICAgQXBwQ3JlYXRvck1vZGFsQ29tcG9uZW50LFxyXG4gICAgICAgIFN1Q3JlYXRvck1vZGFsQ29tcG9uZW50LFxyXG4gICAgICAgIEJvQ3JlYXRvck1vZGFsQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIElucHV0c01vZHVsZSxcclxuICAgICAgICBOb3RpZnlNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIENvbWJvTGlzdE1vZHVsZSxcclxuICAgICAgICBCb0R0U2VydmljZU1vZHVsZVxyXG4gICAgXSxcclxuICAgIGVudHJ5Q29tcG9uZW50czogW0JPQ3JlYXRvckNvbXBvbmVudF0sXHJcbiAgICBleHBvcnRzOiBbQk9DcmVhdG9yQ29tcG9uZW50LEFwcENyZWF0b3JNb2RhbENvbXBvbmVudF0sXHJcbiAgICBwcm92aWRlcnM6IFtCdXNpbmVzc09iamVjdER0U2VydmljZSxCb0NyZWF0b3JVdGlsc11cclxufSlcclxuZXhwb3J0IGNsYXNzIEJPQ3JlYXRvclBhY2thZ2VNb2R1bGUgeyB9XHJcbiJdfQ==