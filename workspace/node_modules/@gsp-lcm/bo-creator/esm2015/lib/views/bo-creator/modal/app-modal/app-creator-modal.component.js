/**
 * @fileoverview added by tsickle
 * Generated from: lib/views/bo-creator/modal/app-modal/app-creator-modal.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter } from '@angular/core';
import { NotifyService } from '@farris/ui-notify';
import { BusinessObjectEntity, BusinessObjectDtService } from '@gsp-lcm/bo-dt-service';
import { ValidatorResult } from '../../common/validation-result';
import { BoCreatorUtils } from '../../utils/bo-create-utils';
export class AppCreatorModalComponent {
    /**
     * @param {?} boCreatorUtils
     * @param {?} boDtService
     * @param {?} notifyService
     */
    constructor(boCreatorUtils, boDtService, notifyService) {
        this.boCreatorUtils = boCreatorUtils;
        this.boDtService = boDtService;
        this.notifyService = notifyService;
        this.appConfirmEmitter = new EventEmitter();
        this.currentBo = new BusinessObjectEntity();
        this.apps = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.initData();
    }
    /**
     * @private
     * @return {?}
     */
    initData() {
        this.boDtService.getBusinessObjects().subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            if (!data) {
                return;
            }
            //二级节点是APP
            this.apps = data.filter((/**
             * @param {?} x
             * @return {?}
             */
            x => x.layer === 2));
            //一级节点是产品，目前默认一级节点（根节点）只有一个
            this.parent = data.find((/**
             * @param {?} x
             * @return {?}
             */
            x => x.layer === 1));
        }));
    }
    /**
     * @return {?}
     */
    create() {
        /** @type {?} */
        let bo = this.getCurrentBo();
        if (!bo) {
            return;
        }
        this.boDtService.save(bo).subscribe((/**
         * @return {?}
         */
        () => {
            this.appConfirmEmitter.emit(bo);
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.notifyService.error('创建失败');
            throw error;
        }));
    }
    /**
     * @return {?}
     */
    getCurrentBo() {
        /** @type {?} */
        let result = this.appInfoValidator();
        if (result.illegal) {
            this.notifyService.warning(result.message);
            return null;
        }
        this.currentBo.id = this.boCreatorUtils.newGuid();
        this.currentBo.layer = 2;
        this.currentBo.parentID = this.parent.id;
        this.currentBo.sysInit = '0';
        this.currentBo.isSysInit = false;
        this.currentBo.isDetail = '0';
        /** @type {?} */
        let max = this.boCreatorUtils.getMaxOrder(this.apps, this.currentBo.parentID);
        this.currentBo.sortOrder = max + 1;
        return Object.assign(new BusinessObjectEntity(), this.currentBo);
    }
    /**
     * @return {?}
     */
    appInfoValidator() {
        //新增信息空校验
        /** @type {?} */
        let result = this.emptyValidator();
        if (result.illegal) {
            return result;
        }
        //编号，名称命名规范性校验
        result = this.namingConventionValidator();
        if (result.illegal) {
            return result;
        }
        //APP编号重复校验
        return this.repeatValidator();
    }
    /**
     * @return {?}
     */
    emptyValidator() {
        /** @type {?} */
        let result = new ValidatorResult();
        if (!this.currentBo.code) {
            result.illegal = true;
            result.message = `关键应用的编号不能为空`;
            return result;
        }
        if (!this.currentBo.name) {
            result.illegal = true;
            result.message = `关键应用的名称不能为空`;
            return result;
        }
        return result;
    }
    /**
     * @return {?}
     */
    namingConventionValidator() {
        /** @type {?} */
        let result = new ValidatorResult();
        /** @type {?} */
        const codeRegx = new RegExp('^[a-zA-Z\x7f-\xff][a-zA-Z0-9\x7f-\xff]*$');
        if (!codeRegx.test(this.currentBo.code)) {
            result.illegal = true;
            result.message = '关键应用的编号只能包含字母,数字,并且不可以用数字开头!';
            return result;
        }
        /** @type {?} */
        const nameRegx = new RegExp('[`~!@#$^&*()=|{}\':;\',\\[\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“\'。，、？]');
        if (nameRegx.test(this.currentBo.name)) {
            result.illegal = true;
            result.message = '关键应用的名称包含非法字符，请重新输入!';
            return result;
        }
        return result;
    }
    /**
     * @return {?}
     */
    repeatValidator() {
        /** @type {?} */
        let result = new ValidatorResult();
        /** @type {?} */
        let filterApp = this.apps.find((/**
         * @param {?} x
         * @return {?}
         */
        x => x.code.toLowerCase() === this.currentBo.code.toLowerCase()));
        if (filterApp) {
            result.illegal = true;
            result.message = `关键应用的编号${this.currentBo.code}已存在`;
            return result;
        }
        return result;
    }
}
AppCreatorModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-app-creator-modal',
                template: "\r\n<div class=\"cloumn\" style=\"margin-top: 28px;\">\r\n\r\n  <div class=\"app-Info row\">\r\n    <label class=\"col-form-label ps-col-form-label\">\r\n      <span class=\"farris-label-info text-danger\">*</span>\r\n      <span class=\"farris-label-text\">\u5E94\u7528\u7F16\u53F7</span>\r\n    </label>\r\n    <div class=\"col-9\">\r\n      <input-group [(ngModel)]=\"currentBo.code\"  autocomplete=\"off\" name=\"code\" ></input-group>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"app-Info row\">\r\n    <label class=\"col-form-label ps-col-form-label\">\r\n      <span class=\"farris-label-info text-danger\">*</span>\r\n      <span class=\"farris-label-text\">\u5E94\u7528\u540D\u79F0</span>\r\n    </label>\r\n    <div class=\"col-9\">\r\n      <input-group [(ngModel)]=\"currentBo.name\"  autocomplete=\"off\" name=\"name\" ></input-group>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"app-Info row\">\r\n    <label class=\"col-form-label ps-col-form-label\">\r\n      <span class=\"farris-label-text\">\u5E94\u7528\u63CF\u8FF0</span>\r\n    </label>\r\n    <div class=\"col-9\">\r\n      <input-group [(ngModel)]=\"currentBo.description\"  autocomplete=\"off\" name=\"description\"></input-group>\r\n    </div>\r\n  </div>\r\n\r\n</div>",
                styles: [".app-Info{margin:0 0 16px 20px}div .ps-col-form-label{width:94px;text-align:right}"]
            }] }
];
/** @nocollapse */
AppCreatorModalComponent.ctorParameters = () => [
    { type: BoCreatorUtils },
    { type: BusinessObjectDtService },
    { type: NotifyService }
];
AppCreatorModalComponent.propDecorators = {
    appConfirmEmitter: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    AppCreatorModalComponent.prototype.appConfirmEmitter;
    /** @type {?} */
    AppCreatorModalComponent.prototype.currentBo;
    /** @type {?} */
    AppCreatorModalComponent.prototype.parent;
    /** @type {?} */
    AppCreatorModalComponent.prototype.apps;
    /**
     * @type {?}
     * @private
     */
    AppCreatorModalComponent.prototype.boCreatorUtils;
    /**
     * @type {?}
     * @private
     */
    AppCreatorModalComponent.prototype.boDtService;
    /**
     * @type {?}
     * @private
     */
    AppCreatorModalComponent.prototype.notifyService;
}
//# sourceMappingURL=data:application/json;base64,