{"version":3,"sources":["ng://@gsp-lcm/bo-rt-service/lib/business-object-rt.service.ts","ng://@gsp-lcm/bo-rt-service/lib/bo-rt-service.module.ts"],"names":["url","BusinessObjectRtService","prototype","getBusinessObjectTree","this","http","get","pipe","getBusinessObject","boId","getUrl","getBusinessObjects","save","postData","post","saveChanges","put","remove","dataId","deleteUrl","delete","getDevBasicBOInfo","getBOListByParentId","parentId","handleError","operation","result","error","console","of","Injectable","HttpService","BORtServiceModule","NgModule","args","declarations","imports","CommonModule","exports","providers"],"mappings":"2gBAKMA,EAAK,0CACXC,GAMEA,EAAAC,UAAAC,sBAAA,WACE,OAAOC,KAAKC,KAAKC,IATM,4CASkBC,QAG3CN,EAAAC,UAAAM,kBAAA,SAAkBC,OACVC,EAASV,EAAMS,EACrB,OAAOL,KAAKC,KAAKC,IAAII,GAAQH,QAG/BN,EAAAC,UAAAS,mBAAA,WACE,OAAOP,KAAKC,KAAKC,IAAIN,GAAKO,QAM5BN,EAAAC,UAAAU,KAAA,SAAKC,GACH,OAAOT,KAAKC,KAAKS,KAAKd,EAAKa,GAAUN,QAGvCN,EAAAC,UAAAa,YAAA,SAAYF,GACP,OAAOT,KAAKC,KAAKW,IAAIhB,EAAKa,GAAUN,QAKzCN,EAAAC,UAAAe,OAAA,SAAOC,OACCC,EAAYnB,EAAMkB,EACxB,OAAOd,KAAKC,KAAKe,UAAOD,EAAW,MAAMZ,QAE3CN,EAAAC,UAAAmB,kBAAA,SAAkBZ,OAEVC,EADQV,4DACUS,EACxB,OAAOL,KAAKC,KAAKC,IAAII,GAAQH,QAG/BN,EAAAC,UAAAoB,oBAAA,SAAoBC,OACZb,EAASV,EAAM,aAAauB,EAClC,OAAOnB,KAAKC,KAAKC,IAAII,GAAQH,QAEvBN,EAAAC,UAAAsB,YAAR,SAAuBC,EAAyBC,GAC9C,YADqB,IAAAD,IAAAA,EAAA,aACrB,SAAQE,GAEN,OADAC,QAAQD,MAAMA,GACPE,EAAAA,GAAE,yBAjDdC,EAAAA,sDAHQC,EAAAA,eAuDT9B,GAjDE,SAAAA,EAAoBI,GAAAD,KAAAC,KAAAA,ECTtB,IAAA2B,uBAKCC,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,GACdC,QAAS,CACPC,EAAAA,cAEFC,QAAS,GACTC,UAAU,CAACR,EAAAA,YAAY9B,OAEQ+B,GARjC,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nconst PROJECTS_DIRECTORY = '/api/dev/main/v1.0/business-object-trees';\r\nconst url= '/api/runtime/sys/v1.0/business-objects/';\r\n@Injectable()\r\nexport class BusinessObjectRtService {\r\n  \r\n  constructor(private http: HttpService) {\r\n  }\r\n\r\n  getBusinessObjectTree(): Observable<any> {\r\n    return this.http.get(PROJECTS_DIRECTORY).pipe();\r\n  }\r\n  \r\n  getBusinessObject(boId:string): Observable<any> {\r\n    const getUrl = url + boId;\r\n    return this.http.get(getUrl).pipe();\r\n  }\r\n\r\n  getBusinessObjects(): Observable<any> {\r\n    return this.http.get(url).pipe();\r\n  }\r\n\r\n    /**\r\n   * ä¿å­\r\n   */\r\n  save(postData: any): Observable<any>  {\r\n    return this.http.post(url, postData).pipe();\r\n  }\r\n\r\n  saveChanges(postData: any):Observable<any>  {\r\n       return this.http.put(url, postData).pipe()\r\n  }\r\n/**\r\n   * å é¤å¹¶éæ°å è½½\r\n   */\r\n  remove(dataId: string): Observable<any>  {\r\n    const deleteUrl = url + dataId;\r\n    return this.http.delete(deleteUrl, null).pipe();\r\n  }\r\n  getDevBasicBOInfo(boId:string):Observable<any>{\r\n    const devUrl= url+'dev-basic-boinfos/';\r\n    const getUrl = devUrl + boId;\r\n    return this.http.get(getUrl).pipe();\r\n  }\r\n\r\n  getBOListByParentId(parentId:string):Observable<any>{\r\n    const getUrl = url + '?parentID='+parentId;\r\n    return this.http.get(getUrl).pipe();\r\n  }\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error); // log to console instead\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { CommonModule } from '@angular/common';\r\nimport {BusinessObjectRtService} from './business-object-rt.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [],\r\n  providers:[HttpService,BusinessObjectRtService]\r\n})\r\nexport class BORtServiceModule { }\r\n"]}