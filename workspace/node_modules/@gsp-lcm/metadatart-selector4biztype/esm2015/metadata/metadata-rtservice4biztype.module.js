/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-rtservice4biztype.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, LOCALE_ID } from '@angular/core';
import { GSPMetadataRTService4BizType } from './metadata.rtservice4biztype';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { NotifyModule } from '@farris/ui-notify';
import { GspBoBizTypeMapping } from './gspbobiztypemapping';
import { GspMdBizTypeMapping } from './gspmdbiztypemapping';
import { MdBizTypeMappingDto } from './mdbiztypemappingdto';
import { GspMdBizTypeMappingType } from './gspmdbiztypemappingtype';
import { MetadataInfoComponent } from './metadatart-select4biztype/components/metadatainfo/metadatainfo.component';
import { CommonModule } from '@angular/common';
import { MetadataInfoList } from './metadatart-select4biztype/components/metadatainfolist/metadatainfolist.component';
import { DropDownsModule } from '@progress/kendo-angular-dropdowns';
import { FormsModule } from '@angular/forms';
import { LayoutModule } from '@progress/kendo-angular-layout';
import { BOTreePanelPackageModule } from '@gsp-lcm/bo-tree';
import { BORtServiceModule, BusinessObjectRtService } from '@gsp-lcm/bo-rt-service';
import { SplitterModule } from '@farris/ui-splitter';
import { FarrisSectionModule } from '@farris/ui-section';
import { TranslateModule, TranslateLoader } from '@ngx-translate/core';
import { TranslateHttpLoader } from '@ngx-translate/http-loader';
import { TranslateResolveService } from './models/TranslateResolveService';
import { MetadataInfoService } from './metadatart-select4biztype/metadatainfo.service';
import { HttpService } from '@ecp-caf/caf-common';
import { DatagridModule } from '@farris/ui-datagrid';
import { FarrisFormsModule } from '@farris/ui-forms';
/**
 * @param {?} http
 * @return {?}
 */
export function createTranslateLoader(http) {
    return new TranslateHttpLoader(http, "/platform/runtime/common/web/@gsp-lcm/metadatart-selector4biztype/i18n/", ".json");
}
const ɵ0 = (createTranslateLoader), ɵ1 = localStorage.getItem('languageCode') || 'zh-CHS';
export class GSPMetadataRTServiceModule4BizType {
}
GSPMetadataRTServiceModule4BizType.decorators = [
    { type: NgModule, args: [{
                imports: [
                    FarrisFormsModule,
                    HttpClientModule,
                    NotifyModule.forRoot(),
                    CommonModule,
                    FormsModule,
                    LayoutModule,
                    DropDownsModule,
                    BOTreePanelPackageModule,
                    SplitterModule,
                    FarrisSectionModule,
                    BORtServiceModule,
                    DatagridModule,
                    TranslateModule.forRoot({
                        loader: {
                            provide: TranslateLoader,
                            useFactory: ɵ0,
                            deps: [HttpClient]
                        }
                    }),
                ],
                declarations: [MetadataInfoComponent, MetadataInfoList],
                exports: [MetadataInfoComponent],
                providers: [
                    HttpService,
                    GSPMetadataRTService4BizType,
                    MetadataInfoService,
                    BusinessObjectRtService,
                    TranslateResolveService,
                    GspBoBizTypeMapping,
                    GspMdBizTypeMapping,
                    MdBizTypeMappingDto,
                    GspMdBizTypeMappingType,
                    { provide: LOCALE_ID, useValue: ɵ1 }
                ],
                entryComponents: [MetadataInfoComponent]
            },] }
];
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGEtcnRzZXJ2aWNlNGJpenR5cGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1sY20vbWV0YWRhdGFydC1zZWxlY3RvcjRiaXp0eXBlLyIsInNvdXJjZXMiOlsibWV0YWRhdGEvbWV0YWRhdGEtcnRzZXJ2aWNlNGJpenR5cGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzVFLE9BQU8sRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDM0QsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEVBQTRFLENBQUM7QUFDbkgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9GQUFvRixDQUFDO0FBQ3RILE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzlELE9BQU8sRUFBRSx3QkFBd0IsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQzNELE9BQU8sRUFBRSxpQkFBaUIsRUFBQyx1QkFBdUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ2xGLE9BQU8sRUFBRSxjQUFjLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSx1QkFBdUIsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7O0FBRXJELE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxJQUFnQjtJQUNwRCxPQUFPLElBQUksbUJBQW1CLENBQUMsSUFBSSxFQUFFLHlFQUF5RSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzNILENBQUM7V0FtQm1CLENBQUMscUJBQXFCLENBQUMsT0FpQlAsWUFBWSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxRQUFRO0FBSXBGLE1BQU0sT0FBTyxrQ0FBa0M7OztZQXRDOUMsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxpQkFBaUI7b0JBQ2pCLGdCQUFnQjtvQkFDaEIsWUFBWSxDQUFDLE9BQU8sRUFBRTtvQkFDdEIsWUFBWTtvQkFDWixXQUFXO29CQUNYLFlBQVk7b0JBQ1osZUFBZTtvQkFDZix3QkFBd0I7b0JBQ3hCLGNBQWM7b0JBQ2QsbUJBQW1CO29CQUNuQixpQkFBaUI7b0JBQ2pCLGNBQWM7b0JBQ2QsZUFBZSxDQUFDLE9BQU8sQ0FBQzt3QkFDdEIsTUFBTSxFQUFFOzRCQUNOLE9BQU8sRUFBRSxlQUFlOzRCQUN4QixVQUFVLElBQXlCOzRCQUNuQyxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUM7eUJBQ25CO3FCQUNGLENBQUM7aUJBQ0g7Z0JBQ0QsWUFBWSxFQUFDLENBQUMscUJBQXFCLEVBQUUsZ0JBQWdCLENBQUM7Z0JBQ3RELE9BQU8sRUFBRSxDQUFDLHFCQUFxQixDQUFDO2dCQUNoQyxTQUFTLEVBQUU7b0JBQ1QsV0FBVztvQkFDWCw0QkFBNEI7b0JBQzVCLG1CQUFtQjtvQkFDbkIsdUJBQXVCO29CQUN2Qix1QkFBdUI7b0JBQ3ZCLG1CQUFtQjtvQkFDbkIsbUJBQW1CO29CQUNuQixtQkFBbUI7b0JBQ25CLHVCQUF1QjtvQkFDdkIsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsSUFBa0QsRUFBRTtpQkFDbkY7Z0JBQ0QsZUFBZSxFQUFFLENBQUMscUJBQXFCLENBQUM7YUFDekMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycywgTE9DQUxFX0lEIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEdTUE1ldGFkYXRhUlRTZXJ2aWNlNEJpelR5cGUgfSBmcm9tICcuL21ldGFkYXRhLnJ0c2VydmljZTRiaXp0eXBlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgTm90aWZ5TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1ub3RpZnknO1xyXG5pbXBvcnQge0dzcEJvQml6VHlwZU1hcHBpbmd9IGZyb20gJy4vZ3NwYm9iaXp0eXBlbWFwcGluZyc7XHJcbmltcG9ydCB7R3NwTWRCaXpUeXBlTWFwcGluZ30gZnJvbSAnLi9nc3BtZGJpenR5cGVtYXBwaW5nJztcclxuaW1wb3J0IHsgTWRCaXpUeXBlTWFwcGluZ0R0b30gZnJvbSAnLi9tZGJpenR5cGVtYXBwaW5nZHRvJztcclxuaW1wb3J0IHtHc3BNZEJpelR5cGVNYXBwaW5nVHlwZX0gZnJvbSAnLi9nc3BtZGJpenR5cGVtYXBwaW5ndHlwZSc7XHJcbmltcG9ydCB7IE1ldGFkYXRhSW5mb0NvbXBvbmVudCB9IGZyb20gJy4vbWV0YWRhdGFydC1zZWxlY3Q0Yml6dHlwZS9jb21wb25lbnRzL21ldGFkYXRhaW5mby9tZXRhZGF0YWluZm8uY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTWV0YWRhdGFJbmZvTGlzdCB9IGZyb20gJy4vbWV0YWRhdGFydC1zZWxlY3Q0Yml6dHlwZS9jb21wb25lbnRzL21ldGFkYXRhaW5mb2xpc3QvbWV0YWRhdGFpbmZvbGlzdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEcm9wRG93bnNNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1kcm9wZG93bnMnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgTGF5b3V0TW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbGF5b3V0JztcclxuaW1wb3J0IHsgQk9UcmVlUGFuZWxQYWNrYWdlTW9kdWxlfSBmcm9tICdAZ3NwLWxjbS9iby10cmVlJztcclxuaW1wb3J0IHsgQk9SdFNlcnZpY2VNb2R1bGUsQnVzaW5lc3NPYmplY3RSdFNlcnZpY2V9IGZyb20gJ0Bnc3AtbGNtL2JvLXJ0LXNlcnZpY2UnO1xyXG5pbXBvcnQgeyBTcGxpdHRlck1vZHVsZX0gZnJvbSAnQGZhcnJpcy91aS1zcGxpdHRlcic7XHJcbmltcG9ydCB7IEZhcnJpc1NlY3Rpb25Nb2R1bGV9IGZyb20gJ0BmYXJyaXMvdWktc2VjdGlvbic7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZU1vZHVsZSwgVHJhbnNsYXRlTG9hZGVyIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZUh0dHBMb2FkZXIgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9odHRwLWxvYWRlcic7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZVJlc29sdmVTZXJ2aWNlfSBmcm9tICcuL21vZGVscy9UcmFuc2xhdGVSZXNvbHZlU2VydmljZSc7XHJcbmltcG9ydCB7TWV0YWRhdGFJbmZvU2VydmljZX0gZnJvbSAnLi9tZXRhZGF0YXJ0LXNlbGVjdDRiaXp0eXBlL21ldGFkYXRhaW5mby5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgRGF0YWdyaWRNb2R1bGV9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBGYXJyaXNGb3Jtc01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZm9ybXMnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYW5zbGF0ZUxvYWRlcihodHRwOiBIdHRwQ2xpZW50KSB7XHJcbiAgcmV0dXJuIG5ldyBUcmFuc2xhdGVIdHRwTG9hZGVyKGh0dHAsIFwiL3BsYXRmb3JtL3J1bnRpbWUvY29tbW9uL3dlYi9AZ3NwLWxjbS9tZXRhZGF0YXJ0LXNlbGVjdG9yNGJpenR5cGUvaTE4bi9cIiwgXCIuanNvblwiKTtcclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBGYXJyaXNGb3Jtc01vZHVsZSxcclxuICAgIEh0dHBDbGllbnRNb2R1bGUsXHJcbiAgICBOb3RpZnlNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBMYXlvdXRNb2R1bGUsXHJcbiAgICBEcm9wRG93bnNNb2R1bGUsXHJcbiAgICBCT1RyZWVQYW5lbFBhY2thZ2VNb2R1bGUsXHJcbiAgICBTcGxpdHRlck1vZHVsZSxcclxuICAgIEZhcnJpc1NlY3Rpb25Nb2R1bGUsXHJcbiAgICBCT1J0U2VydmljZU1vZHVsZSxcclxuICAgIERhdGFncmlkTW9kdWxlLFxyXG4gICAgVHJhbnNsYXRlTW9kdWxlLmZvclJvb3Qoe1xyXG4gICAgICBsb2FkZXI6IHtcclxuICAgICAgICBwcm92aWRlOiBUcmFuc2xhdGVMb2FkZXIsXHJcbiAgICAgICAgdXNlRmFjdG9yeTogKGNyZWF0ZVRyYW5zbGF0ZUxvYWRlciksXHJcbiAgICAgICAgZGVwczogW0h0dHBDbGllbnRdXHJcbiAgICAgIH1cclxuICAgIH0pLFxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOltNZXRhZGF0YUluZm9Db21wb25lbnQsIE1ldGFkYXRhSW5mb0xpc3RdLFxyXG4gIGV4cG9ydHM6IFtNZXRhZGF0YUluZm9Db21wb25lbnRdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgSHR0cFNlcnZpY2UsXHJcbiAgICBHU1BNZXRhZGF0YVJUU2VydmljZTRCaXpUeXBlLFxyXG4gICAgTWV0YWRhdGFJbmZvU2VydmljZSxcclxuICAgIEJ1c2luZXNzT2JqZWN0UnRTZXJ2aWNlLFxyXG4gICAgVHJhbnNsYXRlUmVzb2x2ZVNlcnZpY2UsXHJcbiAgICBHc3BCb0JpelR5cGVNYXBwaW5nLFxyXG4gICAgR3NwTWRCaXpUeXBlTWFwcGluZyxcclxuICAgIE1kQml6VHlwZU1hcHBpbmdEdG8sXHJcbiAgICBHc3BNZEJpelR5cGVNYXBwaW5nVHlwZSwgICAgICBcclxuICAgIHsgcHJvdmlkZTogTE9DQUxFX0lELCB1c2VWYWx1ZTogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xhbmd1YWdlQ29kZScpIHx8ICd6aC1DSFMnIH1cclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW01ldGFkYXRhSW5mb0NvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEdTUE1ldGFkYXRhUlRTZXJ2aWNlTW9kdWxlNEJpelR5cGUge1xyXG4gIFxyXG59XHJcbiJdfQ==