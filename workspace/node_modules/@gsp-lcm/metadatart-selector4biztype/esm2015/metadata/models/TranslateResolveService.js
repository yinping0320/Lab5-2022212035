/**
 * @fileoverview added by tsickle
 * Generated from: metadata/models/TranslateResolveService.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
/** @type {?} */
export const lang = {
    "zh-CHS": {
        "key": "中文文本"
    }
};
export class TranslateResolveService {
    /**
     * @param {?} translate
     */
    constructor(translate) {
        this.translate = translate;
        translate.defaultLang = 'zh-CHS';
        translate.setTranslation('zh-CHS', lang['zh-CHS']);
    }
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    resolve(route, state) {
        /** @type {?} */
        const lang = localStorage.getItem('languageCode');
        if (this.translate.defaultLang === lang) {
            return this.translate.getTranslation(lang);
        }
        else {
            this.translate.defaultLang = lang;
            return this.translate.getTranslation(lang);
        }
    }
}
TranslateResolveService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
TranslateResolveService.ctorParameters = () => [
    { type: TranslateService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    TranslateResolveService.prototype.translate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHJhbnNsYXRlUmVzb2x2ZVNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWxjbS9tZXRhZGF0YXJ0LXNlbGVjdG9yNGJpenR5cGUvIiwic291cmNlcyI6WyJtZXRhZGF0YS9tb2RlbHMvVHJhbnNsYXRlUmVzb2x2ZVNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQXVCLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7QUFHdkQsTUFBTSxPQUFPLElBQUksR0FBRztJQUNsQixRQUFRLEVBQUU7UUFDUixLQUFLLEVBQUUsTUFBTTtLQUNkO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sdUJBQXVCOzs7O0lBQ2xDLFlBQW9CLFNBQTJCO1FBQTNCLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBQzdDLFNBQVMsQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO1FBQ2pDLFNBQVMsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7OztJQUNELE9BQU8sQ0FBQyxLQUE2QixFQUFFLEtBQTBCOztjQUN6RCxJQUFJLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUM7UUFDakQsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsS0FBSyxJQUFJLEVBQUU7WUFDdkMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QzthQUFNO1lBQ0wsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDNUM7SUFDSCxDQUFDOzs7WUFkRixVQUFVOzs7O1lBUkYsZ0JBQWdCOzs7Ozs7O0lBVVgsNENBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XHJcbmltcG9ydCB7IFJlc29sdmUsIFJvdXRlclN0YXRlU25hcHNob3QsIEFjdGl2YXRlZFJvdXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xyXG5leHBvcnQgY29uc3QgbGFuZyA9IHtcclxuICBcInpoLUNIU1wiOiB7XHJcbiAgICBcImtleVwiOiBcIuS4reaWh+aWh+acrFwiICAgIFxyXG4gIH1cclxufTtcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRlUmVzb2x2ZVNlcnZpY2UgaW1wbGVtZW50cyBSZXNvbHZlPGFueT57XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0cmFuc2xhdGU6IFRyYW5zbGF0ZVNlcnZpY2UpIHtcclxuICAgIHRyYW5zbGF0ZS5kZWZhdWx0TGFuZyA9ICd6aC1DSFMnO1xyXG4gICAgdHJhbnNsYXRlLnNldFRyYW5zbGF0aW9uKCd6aC1DSFMnLCBsYW5nWyd6aC1DSFMnXSk7XHJcbiAgfVxyXG4gIHJlc29sdmUocm91dGU6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsIHN0YXRlOiBSb3V0ZXJTdGF0ZVNuYXBzaG90KTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIGNvbnN0IGxhbmcgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbGFuZ3VhZ2VDb2RlJyk7XHJcbiAgICBpZiAodGhpcy50cmFuc2xhdGUuZGVmYXVsdExhbmcgPT09IGxhbmcpIHtcclxuICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlLmdldFRyYW5zbGF0aW9uKGxhbmcpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy50cmFuc2xhdGUuZGVmYXVsdExhbmcgPSBsYW5nO1xyXG4gICAgICByZXR1cm4gdGhpcy50cmFuc2xhdGUuZ2V0VHJhbnNsYXRpb24obGFuZyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==