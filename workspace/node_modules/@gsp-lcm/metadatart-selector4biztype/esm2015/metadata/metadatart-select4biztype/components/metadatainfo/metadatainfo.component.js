/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadatart-select4biztype/components/metadatainfo/metadatainfo.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// tslint:disable-next-line:max-line-length
import { Component, Output, EventEmitter } from '@angular/core';
import { MetadataInfoService } from '../../metadatainfo.service';
import { NotifyService } from '@farris/ui-notify';
import { TranslateService } from '@ngx-translate/core';
export class MetadataInfoComponent {
    /**
     * @param {?} metadataInfoService
     * @param {?} notifyService
     * @param {?} translate
     */
    constructor(metadataInfoService, notifyService, translate) {
        this.metadataInfoService = metadataInfoService;
        this.notifyService = notifyService;
        this.translate = translate;
        this.OK = this.transform('OK');
        this.cancel = this.transform('Cancel');
        this.selectedMetadata = new EventEmitter();
        this.closeModalEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} key
     * @return {?}
     */
    transform(key) {
        return this.translate.instant(key);
    }
    /**
     * @return {?}
     */
    LoadMetadata() {
        if (this.metadataInfoService.metadatas == null || this.metadataInfoService.metadatas.length <= 0) {
            this.notifyService.warning(this.transform('PleaseChooseData'));
            return;
        }
        /** @type {?} */
        const Id = this.metadataInfoService.metadatas;
        this.selectedMetadata.emit(this.metadataInfoService.metadatas);
        this.hideModal();
        // 清空缓存
        this.metadataInfoService.clearMetadataRT();
    }
    /**
     * @return {?}
     */
    hideModal() {
        this.closeModalEmitter.emit();
    }
    /**
     * @param {?} bo
     * @return {?}
     */
    onSelectedChange(bo) {
        if (bo.id === 'gscloud') {
            this.boId = '';
        }
        else {
            this.boId = bo.id;
        }
    }
}
MetadataInfoComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'app-metadatainfo',
                template: "<!-- <div class=\"modal-body\">\r\n    <div class=\"templateBlock\">\r\n        <app-treeclassifier></app-treeclassifier>\r\n        <app-metadatainfolist></app-metadatainfolist>\r\n    </div>\r\n</div> -->\r\n<div class=\"farris-main-area flex-column farris-overflow-hidden\">\r\n  <div class=\"f-utils-fill bg-c-white position-relative f-utils-overflow-xhya d-flex\">\r\n      <div class=\"templateBlock flex-column flex-fill d-flex w-100\">\r\n        <kendo-splitter class=\"d-flex h-100 \" style=\"flex: 1 1 auto;\" orientation=\"horizontal\">\r\n          <kendo-splitter-pane class=\"d-flex \" [collapsible]=\"true\" size=\"250px\" style=\"height: auto\">\r\n            <app-bo-tree-panel (selectionChanged)=onSelectedChange($event)></app-bo-tree-panel>\r\n          </kendo-splitter-pane>\r\n          <kendo-splitter-pane class=\"d-flex\" style=\"height: auto\">\r\n            <app-metadatainfolist class=\"flex-fill\" [boId]=\"boId\"></app-metadatainfolist>\r\n          </kendo-splitter-pane>\r\n        </kendo-splitter>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default btn-primary\" (click)=\"LoadMetadata()\">{{ 'OK' | translate }}</button>\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"hideModal()\">{{ 'Cancel' | translate }}</button>\r\n  </div>\r\n</div>",
                styles: [".templateBlock{display:flex}.infoBlock{width:100%;min-width:400px}.infoBlock label{width:50px}"]
            }] }
];
/** @nocollapse */
MetadataInfoComponent.ctorParameters = () => [
    { type: MetadataInfoService },
    { type: NotifyService },
    { type: TranslateService }
];
MetadataInfoComponent.propDecorators = {
    selectedMetadata: [{ type: Output }],
    closeModalEmitter: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    MetadataInfoComponent.prototype.boId;
    /** @type {?} */
    MetadataInfoComponent.prototype.OK;
    /** @type {?} */
    MetadataInfoComponent.prototype.cancel;
    /** @type {?} */
    MetadataInfoComponent.prototype.selectedMetadata;
    /** @type {?} */
    MetadataInfoComponent.prototype.closeModalEmitter;
    /**
     * @type {?}
     * @private
     */
    MetadataInfoComponent.prototype.metadataInfoService;
    /**
     * @type {?}
     * @private
     */
    MetadataInfoComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    MetadataInfoComponent.prototype.translate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGFpbmZvLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL21ldGFkYXRhcnQtc2VsZWN0b3I0Yml6dHlwZS8iLCJzb3VyY2VzIjpbIm1ldGFkYXRhL21ldGFkYXRhcnQtc2VsZWN0NGJpenR5cGUvY29tcG9uZW50cy9tZXRhZGF0YWluZm8vbWV0YWRhdGFpbmZvLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUF5QixNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWpFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQVF2RCxNQUFNLE9BQU8scUJBQXFCOzs7Ozs7SUFNaEMsWUFBb0IsbUJBQXdDLEVBQVMsYUFBMkIsRUFBVyxTQUEyQjtRQUFsSCx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBQVMsa0JBQWEsR0FBYixhQUFhLENBQWM7UUFBVyxjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUp0SSxPQUFFLEdBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QixXQUFNLEdBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0QixxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBR25ELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBQ25ELENBQUM7Ozs7SUFDRCxRQUFRO0lBQ1IsQ0FBQzs7Ozs7SUFFRCxTQUFTLENBQUMsR0FBVztRQUNuQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFRCxZQUFZO1FBQ1YsSUFBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsU0FBUyxJQUFFLElBQUksSUFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBRSxDQUFDLEVBQUM7WUFDeEYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7WUFDL0QsT0FBTztTQUNSOztjQUNLLEVBQUUsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsU0FBUztRQUM3QyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDakIsT0FBTztRQUNQLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUM3QyxDQUFDOzs7O0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUVELGdCQUFnQixDQUFDLEVBQU87UUFDdEIsSUFBRyxFQUFFLENBQUMsRUFBRSxLQUFHLFNBQVMsRUFBQztZQUNuQixJQUFJLENBQUMsSUFBSSxHQUFDLEVBQUUsQ0FBQztTQUNkO2FBQUk7WUFDSCxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUM7U0FDbkI7SUFDSCxDQUFDOzs7WUE1Q0YsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1Qix1MkNBQTRDOzthQUU3Qzs7OztZQVZRLG1CQUFtQjtZQUVuQixhQUFhO1lBQ2IsZ0JBQWdCOzs7K0JBWXRCLE1BQU07Z0NBQ04sTUFBTTs7OztJQUpQLHFDQUFhOztJQUNiLG1DQUF3Qjs7SUFDeEIsdUNBQWdDOztJQUNoQyxpREFBcUQ7O0lBQ3JELGtEQUErQzs7Ozs7SUFDbkMsb0RBQWdEOzs7OztJQUFDLDhDQUFtQzs7Ozs7SUFBRywwQ0FBbUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YUluZm9TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbWV0YWRhdGFpbmZvLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YTRSZWZEdG8sIE1ldGFkYXRhUGFja2FnZUhlYWRlciB9IGZyb20gJy4uLy4uLy4uL21ldGFkYXRhNHJlZmR0byc7XHJcbmltcG9ydCB7IE5vdGlmeVNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcclxuICBzZWxlY3RvcjogJ2FwcC1tZXRhZGF0YWluZm8nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9tZXRhZGF0YWluZm8uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL21ldGFkYXRhaW5mby5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIE1ldGFkYXRhSW5mb0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgYm9JZDogc3RyaW5nO1xyXG4gIE9LPXRoaXMudHJhbnNmb3JtKCdPSycpO1xyXG4gIGNhbmNlbD10aGlzLnRyYW5zZm9ybSgnQ2FuY2VsJyk7XHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkTWV0YWRhdGEgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICBAT3V0cHV0KCkgY2xvc2VNb2RhbEVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWV0YWRhdGFJbmZvU2VydmljZTogTWV0YWRhdGFJbmZvU2VydmljZSxwcml2YXRlIG5vdGlmeVNlcnZpY2U6Tm90aWZ5U2VydmljZSwgIHByaXZhdGUgdHJhbnNsYXRlOiBUcmFuc2xhdGVTZXJ2aWNlKSB7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWxFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgfVxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbiAgdHJhbnNmb3JtKGtleTogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gdGhpcy50cmFuc2xhdGUuaW5zdGFudChrZXkpO1xyXG4gIH1cclxuXHJcbiAgTG9hZE1ldGFkYXRhKCkge1xyXG4gICAgaWYodGhpcy5tZXRhZGF0YUluZm9TZXJ2aWNlLm1ldGFkYXRhcz09bnVsbHx8dGhpcy5tZXRhZGF0YUluZm9TZXJ2aWNlLm1ldGFkYXRhcy5sZW5ndGg8PTApe1xyXG4gICAgICB0aGlzLm5vdGlmeVNlcnZpY2Uud2FybmluZyh0aGlzLnRyYW5zZm9ybSgnUGxlYXNlQ2hvb3NlRGF0YScpKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3QgSWQgPSB0aGlzLm1ldGFkYXRhSW5mb1NlcnZpY2UubWV0YWRhdGFzO1xyXG4gICAgdGhpcy5zZWxlY3RlZE1ldGFkYXRhLmVtaXQodGhpcy5tZXRhZGF0YUluZm9TZXJ2aWNlLm1ldGFkYXRhcyk7XHJcbiAgICB0aGlzLmhpZGVNb2RhbCgpO1xyXG4gICAgLy8g5riF56m657yT5a2YXHJcbiAgICB0aGlzLm1ldGFkYXRhSW5mb1NlcnZpY2UuY2xlYXJNZXRhZGF0YVJUKCk7XHJcbiAgfVxyXG5cclxuICBoaWRlTW9kYWwoKTogdm9pZCB7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWxFbWl0dGVyLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIG9uU2VsZWN0ZWRDaGFuZ2UoYm86IGFueSkge1xyXG4gICAgaWYoYm8uaWQ9PT0nZ3NjbG91ZCcpe1xyXG4gICAgICB0aGlzLmJvSWQ9Jyc7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgdGhpcy5ib0lkID0gYm8uaWQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==