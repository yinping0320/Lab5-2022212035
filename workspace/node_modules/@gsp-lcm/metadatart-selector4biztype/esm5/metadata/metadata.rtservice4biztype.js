/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata.rtservice4biztype.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Observable } from 'rxjs/Observable';
var GSPMetadataRTService4BizType = /** @class */ (function () {
    // tslint:disable-next-line:variable-name
    function GSPMetadataRTService4BizType(http) {
        this.http = http;
        // 环境变量
        // tslint:disable-next-line:variable-name
        // tslint:disable-next-line:variable-name
        this.MetadataRT_Base_Path = '/api/runtime/lcm/v1.0/rt-metadatas';
        // tslint:disable-next-line:variable-name
        this.MetadataBizType_Base_Path = '/api/runtime/lcm/v1.0/metadata-biztypes';
        this.MetadataBizType_Mapping_Path = '/api/runtime/lcm/v1.0/metadata-biztypes/mappings';
    }
    /**
     * 元数据运行时服务
     */
    /**
     * 元数据运行时服务
     * @param {?} metadataID
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.GetMetadataRT = /**
     * 元数据运行时服务
     * @param {?} metadataID
     * @return {?}
     */
    function (metadataID) {
        /** @type {?} */
        var url = this.MetadataRT_Base_Path + '/' + metadataID;
        return this.http.get(url);
    };
    /**
     * @param {?} typeList
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.GetMetadataRTList = /**
     * @param {?} typeList
     * @return {?}
     */
    function (typeList) {
        /** @type {?} */
        var url = this.MetadataRT_Base_Path + '?metadataTypes=' + typeList;
        return this.http.get(url);
    };
    /**
     * @param {?} typeList
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.GetPackagedMetadataRTListWithType = /**
     * @param {?} typeList
     * @return {?}
     */
    function (typeList) {
        /** @type {?} */
        var url = this.MetadataRT_Base_Path + '/packaged?metadataTypes=' + typeList;
        return this.http.get(url);
    };
    /**
     * @param {?} typeList
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.GetAllOriginMdRTListWithType = /**
     * @param {?} typeList
     * @return {?}
     */
    function (typeList) {
        /** @type {?} */
        var t = this.MetadataRT_Base_Path + "/origin?metadataTypes=" + typeList;
        return this.http.get(t);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} metadataTypes
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.getMetadataListByBizTypeId = /**
     * @param {?} bizTypeId
     * @param {?} metadataTypes
     * @return {?}
     */
    function (bizTypeId, metadataTypes) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '?bizTypeId=' + bizTypeId + '&metadataTypes=' + metadataTypes;
        return this.http.get(url);
    };
    /**
     * @param {?} metadataId
     * @param {?} certId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.getMappingListByMetadataId = /**
     * @param {?} metadataId
     * @param {?} certId
     * @return {?}
     */
    function (metadataId, certId) {
        /** @type {?} */
        var url = this.MetadataBizType_Mapping_Path + '?metadataId=' + metadataId + '&certId=' + certId;
        return this.http.get(url);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} metadataId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.isMappingExist = /**
     * @param {?} bizTypeId
     * @param {?} metadataId
     * @return {?}
     */
    function (bizTypeId, metadataId) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/validation/md?bizTypeId=' + bizTypeId + '&mdId=' + metadataId;
        return this.http.get(url);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} boId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.isBoBizTypeMappingExist = /**
     * @param {?} bizTypeId
     * @param {?} boId
     * @return {?}
     */
    function (bizTypeId, boId) {
        /** @type {?} */
        var a = this.MetadataBizType_Base_Path + "/validation/bo?bizTypeId=" + bizTypeId + "&boId=" + boId;
        return this.http.get(a);
    };
    // 获取元数据类型及后缀信息
    // 获取元数据类型及后缀信息
    /**
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.GetMetadataTypeList = 
    // 获取元数据类型及后缀信息
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = this.MetadataRT_Base_Path + '/typeList';
        return this.http.get(url);
    };
    /**
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.GetPackagedMetadataRTList = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = this.MetadataRT_Base_Path + '/packaged';
        return this.http.get(url);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} metadataId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.deleteMappingData = /**
     * @param {?} bizTypeId
     * @param {?} metadataId
     * @return {?}
     */
    function (bizTypeId, metadataId) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/md?bizTypeId=' + bizTypeId + '&mdId=' + metadataId;
        return this.http.delete(url, null);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} metadataIds
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.deleteMdMappingDataList = /**
     * @param {?} bizTypeId
     * @param {?} metadataIds
     * @return {?}
     */
    function (bizTypeId, metadataIds) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/mds?bizTypeId=' + bizTypeId + '&mdIds=' + metadataIds;
        return this.http.delete(url, null);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} boIds
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.deleteBoMappingDataList = /**
     * @param {?} bizTypeId
     * @param {?} boIds
     * @return {?}
     */
    function (bizTypeId, boIds) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/bos?bizTypeId=' + bizTypeId + '&boIds=' + boIds;
        return this.http.delete(url, null);
    };
    /**
     * @param {?} mdBizTypeMapping
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.saveMappingData = /**
     * @param {?} mdBizTypeMapping
     * @return {?}
     */
    function (mdBizTypeMapping) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/md';
        return this.http.post(url, mdBizTypeMapping);
    };
    /**
     * @param {?} mdBizTypeMappingings
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.saveMdMappingList = /**
     * @param {?} mdBizTypeMappingings
     * @return {?}
     */
    function (mdBizTypeMappingings) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/mds';
        return this.http.post(url, mdBizTypeMappingings);
    };
    /**
     * @param {?} boBizTypeMaaing
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.saveBoBizTypeMapping = /**
     * @param {?} boBizTypeMaaing
     * @return {?}
     */
    function (boBizTypeMaaing) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/bo';
        return this.http.post(url, boBizTypeMaaing);
    };
    /**
     * @param {?} boBizTypeMappings
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.saveBoBizTypeMappingList = /**
     * @param {?} boBizTypeMappings
     * @return {?}
     */
    function (boBizTypeMappings) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/bos';
        return this.http.post(url, boBizTypeMappings);
    };
    // 获取后缀
    // 获取后缀
    /**
     * @param {?} metadataType
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.GetPostfix = 
    // 获取后缀
    /**
     * @param {?} metadataType
     * @return {?}
     */
    function (metadataType) {
        this.GetMetadataTypeList().subscribe((/**
         * @param {?} typeList
         * @return {?}
         */
        function (typeList) {
            typeList.forEach((/**
             * @param {?} type
             * @return {?}
             */
            function (type) {
                if (metadataType.toLowerCase() === type.typeCode.toLowerCase()) {
                    return type.postfix;
                }
            }));
        }));
        return new Observable();
    };
    /**
     * @param {?} bizTypeId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.getMdBizTypeMappingType = /**
     * @param {?} bizTypeId
     * @return {?}
     */
    function (bizTypeId) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappingtype?bizTypeId=' + bizTypeId;
        return this.http.get(url);
    };
    /**
     * @param {?} bizTypeId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.getMdBizMappingListBizTypeId = /**
     * @param {?} bizTypeId
     * @return {?}
     */
    function (bizTypeId) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/md?bizTypeId=' + bizTypeId;
        return this.http.get(url);
    };
    /**
     * @param {?} bizTypeId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.getBoBizMappingListBizTypeId = /**
     * @param {?} bizTypeId
     * @return {?}
     */
    function (bizTypeId) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/bo?bizTypeId=' + bizTypeId;
        return this.http.get(url);
    };
    /**
     * @param {?} mdBizTypeMappingDto
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.save = /**
     * @param {?} mdBizTypeMappingDto
     * @return {?}
     */
    function (mdBizTypeMappingDto) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path;
        return this.http.post(url, mdBizTypeMappingDto);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} mdBizMapType
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.saveMappingType = /**
     * @param {?} bizTypeId
     * @param {?} mdBizMapType
     * @return {?}
     */
    function (bizTypeId, mdBizMapType) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappingtype?bizTypeId=' + bizTypeId + '&mdBizMapType=' + mdBizMapType;
        return this.http.post(url, null);
    };
    /**
     * @param {?} bizTypeId
     * @param {?} boId
     * @return {?}
     */
    GSPMetadataRTService4BizType.prototype.deleteBoMdMappingData = /**
     * @param {?} bizTypeId
     * @param {?} boId
     * @return {?}
     */
    function (bizTypeId, boId) {
        /** @type {?} */
        var url = this.MetadataBizType_Base_Path + '/mappings/bo?bizTypeId=' + bizTypeId + '&boId=' + boId;
        return this.http.delete(url, null);
    };
    return GSPMetadataRTService4BizType;
}());
export { GSPMetadataRTService4BizType };
if (false) {
    /**
     * @type {?}
     * @private
     */
    GSPMetadataRTService4BizType.prototype.MetadataRT_Base_Path;
    /**
     * @type {?}
     * @private
     */
    GSPMetadataRTService4BizType.prototype.MetadataBizType_Base_Path;
    /**
     * @type {?}
     * @private
     */
    GSPMetadataRTService4BizType.prototype.MetadataBizType_Mapping_Path;
    /**
     * @type {?}
     * @private
     */
    GSPMetadataRTService4BizType.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,