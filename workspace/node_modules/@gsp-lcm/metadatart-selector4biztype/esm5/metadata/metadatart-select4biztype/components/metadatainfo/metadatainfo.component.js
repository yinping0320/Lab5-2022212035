/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadatart-select4biztype/components/metadatainfo/metadatainfo.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// tslint:disable-next-line:max-line-length
import { Component, Output, EventEmitter } from '@angular/core';
import { MetadataInfoService } from '../../metadatainfo.service';
import { NotifyService } from '@farris/ui-notify';
import { TranslateService } from '@ngx-translate/core';
var MetadataInfoComponent = /** @class */ (function () {
    function MetadataInfoComponent(metadataInfoService, notifyService, translate) {
        this.metadataInfoService = metadataInfoService;
        this.notifyService = notifyService;
        this.translate = translate;
        this.OK = this.transform('OK');
        this.cancel = this.transform('Cancel');
        this.selectedMetadata = new EventEmitter();
        this.closeModalEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MetadataInfoComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} key
     * @return {?}
     */
    MetadataInfoComponent.prototype.transform = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return this.translate.instant(key);
    };
    /**
     * @return {?}
     */
    MetadataInfoComponent.prototype.LoadMetadata = /**
     * @return {?}
     */
    function () {
        if (this.metadataInfoService.metadatas == null || this.metadataInfoService.metadatas.length <= 0) {
            this.notifyService.warning(this.transform('PleaseChooseData'));
            return;
        }
        /** @type {?} */
        var Id = this.metadataInfoService.metadatas;
        this.selectedMetadata.emit(this.metadataInfoService.metadatas);
        this.hideModal();
        // 清空缓存
        this.metadataInfoService.clearMetadataRT();
    };
    /**
     * @return {?}
     */
    MetadataInfoComponent.prototype.hideModal = /**
     * @return {?}
     */
    function () {
        this.closeModalEmitter.emit();
    };
    /**
     * @param {?} bo
     * @return {?}
     */
    MetadataInfoComponent.prototype.onSelectedChange = /**
     * @param {?} bo
     * @return {?}
     */
    function (bo) {
        if (bo.id === 'gscloud') {
            this.boId = '';
        }
        else {
            this.boId = bo.id;
        }
    };
    MetadataInfoComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'app-metadatainfo',
                    template: "<!-- <div class=\"modal-body\">\r\n    <div class=\"templateBlock\">\r\n        <app-treeclassifier></app-treeclassifier>\r\n        <app-metadatainfolist></app-metadatainfolist>\r\n    </div>\r\n</div> -->\r\n<div class=\"farris-main-area flex-column farris-overflow-hidden\">\r\n  <div class=\"f-utils-fill bg-c-white position-relative f-utils-overflow-xhya d-flex\">\r\n      <div class=\"templateBlock flex-column flex-fill d-flex w-100\">\r\n        <kendo-splitter class=\"d-flex h-100 \" style=\"flex: 1 1 auto;\" orientation=\"horizontal\">\r\n          <kendo-splitter-pane class=\"d-flex \" [collapsible]=\"true\" size=\"250px\" style=\"height: auto\">\r\n            <app-bo-tree-panel (selectionChanged)=onSelectedChange($event)></app-bo-tree-panel>\r\n          </kendo-splitter-pane>\r\n          <kendo-splitter-pane class=\"d-flex\" style=\"height: auto\">\r\n            <app-metadatainfolist class=\"flex-fill\" [boId]=\"boId\"></app-metadatainfolist>\r\n          </kendo-splitter-pane>\r\n        </kendo-splitter>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-default btn-primary\" (click)=\"LoadMetadata()\">{{ 'OK' | translate }}</button>\r\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"hideModal()\">{{ 'Cancel' | translate }}</button>\r\n  </div>\r\n</div>",
                    styles: [".templateBlock{display:flex}.infoBlock{width:100%;min-width:400px}.infoBlock label{width:50px}"]
                }] }
    ];
    /** @nocollapse */
    MetadataInfoComponent.ctorParameters = function () { return [
        { type: MetadataInfoService },
        { type: NotifyService },
        { type: TranslateService }
    ]; };
    MetadataInfoComponent.propDecorators = {
        selectedMetadata: [{ type: Output }],
        closeModalEmitter: [{ type: Output }]
    };
    return MetadataInfoComponent;
}());
export { MetadataInfoComponent };
if (false) {
    /** @type {?} */
    MetadataInfoComponent.prototype.boId;
    /** @type {?} */
    MetadataInfoComponent.prototype.OK;
    /** @type {?} */
    MetadataInfoComponent.prototype.cancel;
    /** @type {?} */
    MetadataInfoComponent.prototype.selectedMetadata;
    /** @type {?} */
    MetadataInfoComponent.prototype.closeModalEmitter;
    /**
     * @type {?}
     * @private
     */
    MetadataInfoComponent.prototype.metadataInfoService;
    /**
     * @type {?}
     * @private
     */
    MetadataInfoComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    MetadataInfoComponent.prototype.translate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGFpbmZvLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL21ldGFkYXRhcnQtc2VsZWN0b3I0Yml6dHlwZS8iLCJzb3VyY2VzIjpbIm1ldGFkYXRhL21ldGFkYXRhcnQtc2VsZWN0NGJpenR5cGUvY29tcG9uZW50cy9tZXRhZGF0YWluZm8vbWV0YWRhdGFpbmZvLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUF5QixNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWpFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV2RDtJQVlFLCtCQUFvQixtQkFBd0MsRUFBUyxhQUEyQixFQUFXLFNBQTJCO1FBQWxILHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFBUyxrQkFBYSxHQUFiLGFBQWEsQ0FBYztRQUFXLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBSnRJLE9BQUUsR0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hCLFdBQU0sR0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RCLHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFHbkQsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFDbkQsQ0FBQzs7OztJQUNELHdDQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7O0lBRUQseUNBQVM7Ozs7SUFBVCxVQUFVLEdBQVc7UUFDbkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7O0lBRUQsNENBQVk7OztJQUFaO1FBQ0UsSUFBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsU0FBUyxJQUFFLElBQUksSUFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBRSxDQUFDLEVBQUM7WUFDeEYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7WUFDL0QsT0FBTztTQUNSOztZQUNLLEVBQUUsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsU0FBUztRQUM3QyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDakIsT0FBTztRQUNQLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUM3QyxDQUFDOzs7O0lBRUQseUNBQVM7OztJQUFUO1FBQ0UsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hDLENBQUM7Ozs7O0lBRUQsZ0RBQWdCOzs7O0lBQWhCLFVBQWlCLEVBQU87UUFDdEIsSUFBRyxFQUFFLENBQUMsRUFBRSxLQUFHLFNBQVMsRUFBQztZQUNuQixJQUFJLENBQUMsSUFBSSxHQUFDLEVBQUUsQ0FBQztTQUNkO2FBQUk7WUFDSCxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUM7U0FDbkI7SUFDSCxDQUFDOztnQkE1Q0YsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1Qix1MkNBQTRDOztpQkFFN0M7Ozs7Z0JBVlEsbUJBQW1CO2dCQUVuQixhQUFhO2dCQUNiLGdCQUFnQjs7O21DQVl0QixNQUFNO29DQUNOLE1BQU07O0lBa0NULDRCQUFDO0NBQUEsQUE3Q0QsSUE2Q0M7U0F2Q1kscUJBQXFCOzs7SUFDaEMscUNBQWE7O0lBQ2IsbUNBQXdCOztJQUN4Qix1Q0FBZ0M7O0lBQ2hDLGlEQUFxRDs7SUFDckQsa0RBQStDOzs7OztJQUNuQyxvREFBZ0Q7Ozs7O0lBQUMsOENBQW1DOzs7OztJQUFHLDBDQUFtQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtbGluZS1sZW5ndGhcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1ldGFkYXRhSW5mb1NlcnZpY2UgfSBmcm9tICcuLi8uLi9tZXRhZGF0YWluZm8uc2VydmljZSc7XHJcbmltcG9ydCB7IE1ldGFkYXRhNFJlZkR0bywgTWV0YWRhdGFQYWNrYWdlSGVhZGVyIH0gZnJvbSAnLi4vLi4vLi4vbWV0YWRhdGE0cmVmZHRvJztcclxuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnYXBwLW1ldGFkYXRhaW5mbycsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL21ldGFkYXRhaW5mby5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbWV0YWRhdGFpbmZvLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWV0YWRhdGFJbmZvQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBib0lkOiBzdHJpbmc7XHJcbiAgT0s9dGhpcy50cmFuc2Zvcm0oJ09LJyk7XHJcbiAgY2FuY2VsPXRoaXMudHJhbnNmb3JtKCdDYW5jZWwnKTtcclxuICBAT3V0cHV0KCkgc2VsZWN0ZWRNZXRhZGF0YSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBjbG9zZU1vZGFsRW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtZXRhZGF0YUluZm9TZXJ2aWNlOiBNZXRhZGF0YUluZm9TZXJ2aWNlLHByaXZhdGUgbm90aWZ5U2VydmljZTpOb3RpZnlTZXJ2aWNlLCAgcHJpdmF0ZSB0cmFuc2xhdGU6IFRyYW5zbGF0ZVNlcnZpY2UpIHtcclxuICAgIHRoaXMuY2xvc2VNb2RhbEVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICB9XHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgfVxyXG5cclxuICB0cmFuc2Zvcm0oa2V5OiBzdHJpbmcpIHtcclxuICAgIHJldHVybiB0aGlzLnRyYW5zbGF0ZS5pbnN0YW50KGtleSk7XHJcbiAgfVxyXG5cclxuICBMb2FkTWV0YWRhdGEoKSB7XHJcbiAgICBpZih0aGlzLm1ldGFkYXRhSW5mb1NlcnZpY2UubWV0YWRhdGFzPT1udWxsfHx0aGlzLm1ldGFkYXRhSW5mb1NlcnZpY2UubWV0YWRhdGFzLmxlbmd0aDw9MCl7XHJcbiAgICAgIHRoaXMubm90aWZ5U2VydmljZS53YXJuaW5nKHRoaXMudHJhbnNmb3JtKCdQbGVhc2VDaG9vc2VEYXRhJykpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBJZCA9IHRoaXMubWV0YWRhdGFJbmZvU2VydmljZS5tZXRhZGF0YXM7XHJcbiAgICB0aGlzLnNlbGVjdGVkTWV0YWRhdGEuZW1pdCh0aGlzLm1ldGFkYXRhSW5mb1NlcnZpY2UubWV0YWRhdGFzKTtcclxuICAgIHRoaXMuaGlkZU1vZGFsKCk7XHJcbiAgICAvLyDmuIXnqbrnvJPlrZhcclxuICAgIHRoaXMubWV0YWRhdGFJbmZvU2VydmljZS5jbGVhck1ldGFkYXRhUlQoKTtcclxuICB9XHJcblxyXG4gIGhpZGVNb2RhbCgpOiB2b2lkIHtcclxuICAgIHRoaXMuY2xvc2VNb2RhbEVtaXR0ZXIuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgb25TZWxlY3RlZENoYW5nZShibzogYW55KSB7XHJcbiAgICBpZihiby5pZD09PSdnc2Nsb3VkJyl7XHJcbiAgICAgIHRoaXMuYm9JZD0nJztcclxuICAgIH1lbHNle1xyXG4gICAgICB0aGlzLmJvSWQgPSBiby5pZDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19