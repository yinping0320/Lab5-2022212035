import { Observable } from 'rxjs/Observable';
import { HttpService } from '@ecp-caf/caf-common';
export declare class GSPMetadataRTService4BizType {
    private http;
    private MetadataRT_Base_Path;
    private MetadataBizType_Base_Path;
    private MetadataBizType_Mapping_Path;
    constructor(http: HttpService);
    /**
     * 元数据运行时服务
     */
    GetMetadataRT(metadataID: string): Observable<any>;
    GetMetadataRTList(typeList: string): Observable<any>;
    GetPackagedMetadataRTListWithType(typeList: string): Observable<any>;
    GetAllOriginMdRTListWithType(typeList: string): Observable<ArrayBuffer>;
    getMetadataListByBizTypeId(bizTypeId: string, metadataTypes: string): Observable<any>;
    getMappingListByMetadataId(metadataId: string, certId: string): Observable<any>;
    isMappingExist(bizTypeId: string, metadataId: string): Observable<any>;
    isBoBizTypeMappingExist(bizTypeId: string, boId: string): Observable<any>;
    GetMetadataTypeList(): Observable<any>;
    GetPackagedMetadataRTList(): Observable<any>;
    deleteMappingData(bizTypeId: string, metadataId: string): Observable<any>;
    deleteMdMappingDataList(bizTypeId: string, metadataIds: string): Observable<any>;
    deleteBoMappingDataList(bizTypeId: string, boIds: string): Observable<any>;
    saveMappingData(mdBizTypeMapping: any): Observable<any>;
    saveMdMappingList(mdBizTypeMappingings: any): Observable<any>;
    saveBoBizTypeMapping(boBizTypeMaaing: any): Observable<any>;
    saveBoBizTypeMappingList(boBizTypeMappings: any): Observable<any>;
    GetPostfix(metadataType: any): Observable<any>;
    getMdBizTypeMappingType(bizTypeId: any): Observable<any>;
    getMdBizMappingListBizTypeId(bizTypeId: any): Observable<any>;
    getBoBizMappingListBizTypeId(bizTypeId: any): Observable<any>;
    save(mdBizTypeMappingDto: any): Observable<any>;
    saveMappingType(bizTypeId: string, mdBizMapType: string): Observable<any>;
    deleteBoMdMappingData(bizTypeId: string, boId: string): Observable<any>;
}
