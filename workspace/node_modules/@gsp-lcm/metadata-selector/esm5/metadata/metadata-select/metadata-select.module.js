/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-select/metadata-select.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SelectMetadataComponent } from './components/selectmetadate/selectmetadata.component';
import { TreeclassifierComponent } from './components/treeclassifier/treeclassifier.component';
import { TemplatemetadataComponent } from './components/metadatalist/metadatalist.component';
import { FormsModule } from '@angular/forms';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { GridModule } from '@progress/kendo-angular-grid';
import { MetadataService } from './metadata.service';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { LayoutModule } from '@progress/kendo-angular-layout';
import { MetadatapackageselectComponent } from './components/metadatapackageselect/metadatapackageselect.component';
import { MetadatapackagelistComponent } from './components/metadatapackagelist/metadatapackagelist.component';
import { DropDownsModule } from '@progress/kendo-angular-dropdowns';
import { MetadatalistdetailsComponent } from './components/metadatalist/metadatalistdetails/metadatalistdetails.component';
import { LoadingModule } from '@farris/ui-loading';
import { OnceClickDirective } from './components/selectmetadate/onclick.directive';
var MetadataSelectModule = /** @class */ (function () {
    function MetadataSelectModule() {
    }
    MetadataSelectModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        TreeViewModule,
                        GridModule,
                        LayoutModule,
                        FarrisDialogModule,
                        DropDownsModule,
                        LoadingModule.forRoot()
                    ],
                    exports: [
                        SelectMetadataComponent
                    ],
                    providers: [MetadataService],
                    // 服务提供者
                    // tslint:disable-next-line:max-line-length
                    declarations: [
                        SelectMetadataComponent,
                        TreeclassifierComponent,
                        TemplatemetadataComponent,
                        MetadatapackageselectComponent,
                        MetadatapackagelistComponent,
                        MetadatalistdetailsComponent,
                        OnceClickDirective
                    ],
                    entryComponents: [SelectMetadataComponent, MetadatapackageselectComponent]
                },] }
    ];
    /** @nocollapse */
    MetadataSelectModule.ctorParameters = function () { return []; };
    return MetadataSelectModule;
}());
export { MetadataSelectModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGEtc2VsZWN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL21ldGFkYXRhLXNlbGVjdG9yLyIsInNvdXJjZXMiOlsibWV0YWRhdGEvbWV0YWRhdGEtc2VsZWN0L21ldGFkYXRhLXNlbGVjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUMvRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUMvRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUM3RixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzlELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ3BILE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLGdFQUFnRSxDQUFDO0FBQzlHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw2RUFBNkUsQ0FBQztBQUMzSCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFFbkY7SUE0QkU7SUFDQSxDQUFDOztnQkE3QkYsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsY0FBYzt3QkFDZCxVQUFVO3dCQUNWLFlBQVk7d0JBQ1osa0JBQWtCO3dCQUNsQixlQUFlO3dCQUNmLGFBQWEsQ0FBQyxPQUFPLEVBQUU7cUJBQ3hCO29CQUNELE9BQU8sRUFBRTt3QkFDUCx1QkFBdUI7cUJBQ3hCO29CQUNELFNBQVMsRUFBRSxDQUFDLGVBQWUsQ0FBQzs7O29CQUU1QixZQUFZLEVBQUU7d0JBQ1osdUJBQXVCO3dCQUN2Qix1QkFBdUI7d0JBQ3ZCLHlCQUF5Qjt3QkFDekIsOEJBQThCO3dCQUM5Qiw0QkFBNEI7d0JBQzVCLDRCQUE0Qjt3QkFDNUIsa0JBQWtCO3FCQUNuQjtvQkFDRCxlQUFlLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSw4QkFBOEIsQ0FBQztpQkFDM0U7Ozs7SUFJRCwyQkFBQztDQUFBLEFBOUJELElBOEJDO1NBSFksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgU2VsZWN0TWV0YWRhdGFDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2VsZWN0bWV0YWRhdGUvc2VsZWN0bWV0YWRhdGEuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVHJlZWNsYXNzaWZpZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdHJlZWNsYXNzaWZpZXIvdHJlZWNsYXNzaWZpZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGVtcGxhdGVtZXRhZGF0YUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9tZXRhZGF0YWxpc3QvbWV0YWRhdGFsaXN0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBUcmVlVmlld01vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLXRyZWV2aWV3JztcclxuaW1wb3J0IHsgR3JpZE1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YVNlcnZpY2UgfSBmcm9tICcuL21ldGFkYXRhLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IExheW91dE1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWxheW91dCc7XHJcbmltcG9ydCB7IE1ldGFkYXRhcGFja2FnZXNlbGVjdENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9tZXRhZGF0YXBhY2thZ2VzZWxlY3QvbWV0YWRhdGFwYWNrYWdlc2VsZWN0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1ldGFkYXRhcGFja2FnZWxpc3RDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWV0YWRhdGFwYWNrYWdlbGlzdC9tZXRhZGF0YXBhY2thZ2VsaXN0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERyb3BEb3duc01vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWRyb3Bkb3ducyc7XHJcbmltcG9ydCB7IE1ldGFkYXRhbGlzdGRldGFpbHNDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWV0YWRhdGFsaXN0L21ldGFkYXRhbGlzdGRldGFpbHMvbWV0YWRhdGFsaXN0ZGV0YWlscy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb2FkaW5nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2FkaW5nJztcclxuaW1wb3J0IHsgT25jZUNsaWNrRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3NlbGVjdG1ldGFkYXRlL29uY2xpY2suZGlyZWN0aXZlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBUcmVlVmlld01vZHVsZSxcclxuICAgIEdyaWRNb2R1bGUsXHJcbiAgICBMYXlvdXRNb2R1bGUsXHJcbiAgICBGYXJyaXNEaWFsb2dNb2R1bGUsXHJcbiAgICBEcm9wRG93bnNNb2R1bGUsXHJcbiAgICBMb2FkaW5nTW9kdWxlLmZvclJvb3QoKVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgU2VsZWN0TWV0YWRhdGFDb21wb25lbnRcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW01ldGFkYXRhU2VydmljZV0sIC8vIOacjeWKoeaPkOS+m+iAhVxyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtbGluZS1sZW5ndGhcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIFNlbGVjdE1ldGFkYXRhQ29tcG9uZW50LFxyXG4gICAgVHJlZWNsYXNzaWZpZXJDb21wb25lbnQsXHJcbiAgICBUZW1wbGF0ZW1ldGFkYXRhQ29tcG9uZW50LFxyXG4gICAgTWV0YWRhdGFwYWNrYWdlc2VsZWN0Q29tcG9uZW50LFxyXG4gICAgTWV0YWRhdGFwYWNrYWdlbGlzdENvbXBvbmVudCxcclxuICAgIE1ldGFkYXRhbGlzdGRldGFpbHNDb21wb25lbnQsXHJcbiAgICBPbmNlQ2xpY2tEaXJlY3RpdmVcclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW1NlbGVjdE1ldGFkYXRhQ29tcG9uZW50LCBNZXRhZGF0YXBhY2thZ2VzZWxlY3RDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNZXRhZGF0YVNlbGVjdE1vZHVsZSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG59XHJcbiJdfQ==