/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-select/components/metadatapackagelist/metadatapackagelist.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { MetadataService } from '../../metadata.service';
import { process } from '@progress/kendo-data-query';
var MetadatapackagelistComponent = /** @class */ (function () {
    function MetadatapackagelistComponent(metadataService) {
        this.metadataService = metadataService;
        // tslint:disable-next-line:member-ordering
        this.state = {
            skip: 0,
            take: 9999,
            // Initial filter descriptor
            filter: {
                logic: 'and',
                filters: []
            }
        };
        // tslint:disable-next-line:member-ordering
        this.selectableSetting = { mode: 'single', checkboxOnly: false };
    }
    /**
     * @param {?} state
     * @return {?}
     */
    MetadatapackagelistComponent.prototype.dataStateChange = /**
     * @param {?} state
     * @return {?}
     */
    function (state) {
        this.state = state;
        this.gridData = process(this.data, this.state);
    };
    /**
     * @return {?}
     */
    MetadatapackagelistComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.metadataService.GetMetadataPackages().subscribe((/**
         * @param {?} packages
         * @return {?}
         */
        function (packages) {
            /** @type {?} */
            var tempdata = [];
            _this.packagesInfo = packages;
            if (_this.packagesInfo) {
                _this.packagesInfo.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    if (item.type === 'folder' || (item.type === 'file' && item.name.endsWith('mdpkg'))) {
                        tempdata.push({ 'name': item.name });
                    }
                }));
                _this.data = tempdata;
                _this.gridData = process(_this.data, _this.state);
            }
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    MetadatapackagelistComponent.prototype.onSelectionChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var packageName = event.selectedRows[0].dataItem.name;
        this.metadataService.clearPackage();
        this.metadataService.addPackage(packageName);
    };
    MetadatapackagelistComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'app-metadatapackagelist',
                    template: "<div class=\"templateInfo\">\r\n  <div class=\"templateSelector\">\r\n    <kendo-grid [data]=\"gridData\" \r\n                [selectable]=\"selectableSetting\" \r\n                (selectionChange)=onSelectionChange($event)\r\n                [pageSize]=\"state.take\"\r\n                [skip]=\"state.skip\"\r\n                [sort]=\"state.sort\"\r\n                [filter]=\"state.filter\"\r\n                [sortable]=\"true\"\r\n                [pageable]=\"false\"\r\n                [filterable]=\"true\"\r\n                (dataStateChange)=dataStateChange($event)>\r\n      <kendo-grid-column field=\"name\" title=\"\u5305\u540D\u79F0\" width=\"200\">\r\n      </kendo-grid-column>\r\n    </kendo-grid>\r\n  </div>\r\n</div>",
                    styles: [".templateSelector{width:580px;height:450px;border:.5px solid #ddd}.templateDescription{width:200px;height:450px;border:.5px solid #ddd}.templateInfo{display:flex}"]
                }] }
    ];
    /** @nocollapse */
    MetadatapackagelistComponent.ctorParameters = function () { return [
        { type: MetadataService }
    ]; };
    return MetadatapackagelistComponent;
}());
export { MetadatapackagelistComponent };
if (false) {
    /** @type {?} */
    MetadatapackagelistComponent.prototype.data;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.packagesInfo;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.state;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.gridData;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.selectableSetting;
    /**
     * @type {?}
     * @private
     */
    MetadatapackagelistComponent.prototype.metadataService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGFwYWNrYWdlbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWxjbS9tZXRhZGF0YS1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbIm1ldGFkYXRhL21ldGFkYXRhLXNlbGVjdC9jb21wb25lbnRzL21ldGFkYXRhcGFja2FnZWxpc3QvbWV0YWRhdGFwYWNrYWdlbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUd6RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sNEJBQTRCLENBQUM7QUFHNUQ7SUE0QkUsc0NBQW9CLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjs7UUFsQi9DLFVBQUssR0FBVTtZQUNwQixJQUFJLEVBQUUsQ0FBQztZQUNQLElBQUksRUFBRSxJQUFJOztZQUVWLE1BQU0sRUFBRTtnQkFDTixLQUFLLEVBQUUsS0FBSztnQkFDWixPQUFPLEVBQUUsRUFBRTthQUNaO1NBQ0YsQ0FBQzs7UUFTRixzQkFBaUIsR0FBdUIsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs7OztJQU5wRCxzREFBZTs7OztJQUF0QixVQUF1QixLQUEyQjtRQUNoRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7O0lBS0MsK0NBQVE7OztJQUFSO1FBQUEsaUJBY0M7UUFiQyxJQUFJLENBQUMsZUFBZSxDQUFDLG1CQUFtQixFQUFFLENBQUMsU0FBUzs7OztRQUFDLFVBQUEsUUFBUTs7Z0JBQ3JELFFBQVEsR0FBRyxFQUFFO1lBQ25CLEtBQUksQ0FBQyxZQUFZLEdBQUcsUUFBUSxDQUFDO1lBQzdCLElBQUksS0FBSSxDQUFDLFlBQVksRUFBRTtnQkFDckIsS0FBSSxDQUFDLFlBQVksQ0FBQyxPQUFPOzs7O2dCQUFDLFVBQUEsSUFBSTtvQkFDNUIsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUU7d0JBQ25GLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxNQUFNLEVBQUcsSUFBSSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUM7cUJBQ3JDO2dCQUNILENBQUMsRUFBQyxDQUFDO2dCQUNILEtBQUksQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO2dCQUNyQixLQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxLQUFJLENBQUMsSUFBSSxFQUFFLEtBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoRDtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCx3REFBaUI7Ozs7SUFBakIsVUFBa0IsS0FBSzs7WUFDZixXQUFXLEdBQUcsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSTtRQUN2RCxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9DLENBQUM7O2dCQWxERixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLDh1QkFBbUQ7O2lCQUVwRDs7OztnQkFYUSxlQUFlOztJQXlEeEIsbUNBQUM7Q0FBQSxBQW5ERCxJQW1EQztTQTdDWSw0QkFBNEI7OztJQUN6Qyw0Q0FBd0I7O0lBQ3hCLG9EQUFrQjs7SUFFbEIsNkNBUUU7O0lBR0YsZ0RBQWdDOztJQU1oQyx5REFBZ0Y7Ozs7O0lBQ2xFLHVEQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1ldGFkYXRhU2VydmljZSB9IGZyb20gJy4uLy4uL21ldGFkYXRhLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQYWNrYWdlQmFzZUluZm8gfSBmcm9tICcuLi8uLi9wYWNrYWdlYmFzZWluZm8nO1xyXG5pbXBvcnQgeyBTZWxlY3RhYmxlU2V0dGluZ3MgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcclxuaW1wb3J0IHsgcHJvY2VzcywgU3RhdGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZGF0YS1xdWVyeSc7XHJcbmltcG9ydCB7IEdyaWREYXRhUmVzdWx0LCBEYXRhU3RhdGVDaGFuZ2VFdmVudCB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnYXBwLW1ldGFkYXRhcGFja2FnZWxpc3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9tZXRhZGF0YXBhY2thZ2VsaXN0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9tZXRhZGF0YXBhY2thZ2VsaXN0LmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWV0YWRhdGFwYWNrYWdlbGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbmRhdGE6IFBhY2thZ2VCYXNlSW5mb1tdO1xyXG5wYWNrYWdlc0luZm86IGFueTtcclxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1lbWJlci1vcmRlcmluZ1xyXG5wdWJsaWMgc3RhdGU6IFN0YXRlID0ge1xyXG4gIHNraXA6IDAsXHJcbiAgdGFrZTogOTk5OSxcclxuICAvLyBJbml0aWFsIGZpbHRlciBkZXNjcmlwdG9yXHJcbiAgZmlsdGVyOiB7XHJcbiAgICBsb2dpYzogJ2FuZCcsXHJcbiAgICBmaWx0ZXJzOiBbXVxyXG4gIH1cclxufTtcclxuLy8gcHVibGljIGdyaWREYXRhOiBHcmlkRGF0YVJlc3VsdCA9IHByb2Nlc3ModGhpcy5kYXRhLCB0aGlzLnN0YXRlKTtcclxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1lbWJlci1vcmRlcmluZ1xyXG5wdWJsaWMgZ3JpZERhdGE6IEdyaWREYXRhUmVzdWx0O1xyXG5wdWJsaWMgZGF0YVN0YXRlQ2hhbmdlKHN0YXRlOiBEYXRhU3RhdGVDaGFuZ2VFdmVudCk6IHZvaWQge1xyXG4gIHRoaXMuc3RhdGUgPSBzdGF0ZTtcclxuICB0aGlzLmdyaWREYXRhID0gcHJvY2Vzcyh0aGlzLmRhdGEsIHRoaXMuc3RhdGUpO1xyXG59XHJcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptZW1iZXItb3JkZXJpbmdcclxuc2VsZWN0YWJsZVNldHRpbmc6IFNlbGVjdGFibGVTZXR0aW5ncyA9IHsgbW9kZTogJ3NpbmdsZScsIGNoZWNrYm94T25seTogZmFsc2UgfTtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1ldGFkYXRhU2VydmljZTogTWV0YWRhdGFTZXJ2aWNlKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLm1ldGFkYXRhU2VydmljZS5HZXRNZXRhZGF0YVBhY2thZ2VzKCkuc3Vic2NyaWJlKHBhY2thZ2VzID0+IHtcclxuICAgICAgY29uc3QgdGVtcGRhdGEgPSBbXTtcclxuICAgICAgdGhpcy5wYWNrYWdlc0luZm8gPSBwYWNrYWdlcztcclxuICAgICAgaWYgKHRoaXMucGFja2FnZXNJbmZvKSB7XHJcbiAgICAgICAgdGhpcy5wYWNrYWdlc0luZm8uZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgIGlmIChpdGVtLnR5cGUgPT09ICdmb2xkZXInIHx8IChpdGVtLnR5cGUgPT09ICdmaWxlJyAmJiBpdGVtLm5hbWUuZW5kc1dpdGgoJ21kcGtnJykpKSB7XHJcbiAgICAgICAgICAgIHRlbXBkYXRhLnB1c2goeyduYW1lJyA6IGl0ZW0ubmFtZX0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IHRlbXBkYXRhO1xyXG4gICAgICAgIHRoaXMuZ3JpZERhdGEgPSBwcm9jZXNzKHRoaXMuZGF0YSwgdGhpcy5zdGF0ZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb25TZWxlY3Rpb25DaGFuZ2UoZXZlbnQpIHtcclxuICAgIGNvbnN0IHBhY2thZ2VOYW1lID0gZXZlbnQuc2VsZWN0ZWRSb3dzWzBdLmRhdGFJdGVtLm5hbWU7XHJcbiAgICB0aGlzLm1ldGFkYXRhU2VydmljZS5jbGVhclBhY2thZ2UoKTtcclxuICAgIHRoaXMubWV0YWRhdGFTZXJ2aWNlLmFkZFBhY2thZ2UocGFja2FnZU5hbWUpO1xyXG4gIH1cclxufVxyXG4iXX0=