/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-select/components/metadatapackageselect/metadatapackageselect.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, EventEmitter, Output } from '@angular/core';
import { MetadataService } from '../../metadata.service';
import { TreeclassifierComponent } from '../treeclassifier/treeclassifier.component';
import { GSPMetadataService } from '../../../metadata.service';
var MetadatapackageselectComponent = /** @class */ (function () {
    function MetadatapackageselectComponent(metadataService, gspMetaService) {
        this.metadataService = metadataService;
        this.gspMetaService = gspMetaService;
        this.closeModalEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MetadatapackageselectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    MetadatapackageselectComponent.prototype.showModal = /**
     * @return {?}
     */
    function () {
        // this.isModalShown = true;
    };
    /**
     * @return {?}
     */
    MetadatapackageselectComponent.prototype.hideModal = /**
     * @return {?}
     */
    function () {
        // this.isModalShown = false;
        this.closeModalEmitter.emit();
    };
    /**
     * @return {?}
     */
    MetadatapackageselectComponent.prototype.onHidden = /**
     * @return {?}
     */
    function () {
        // this.isModalShown = false;
        this.closeModalEmitter.emit();
    };
    /**
     * @param {?} classifier
     * @return {?}
     */
    MetadatapackageselectComponent.prototype.onSelectedChange = /**
     * @param {?} classifier
     * @return {?}
     */
    function (classifier) {
        // this.classifier = classifier;
    };
    /**
     * @return {?}
     */
    MetadatapackageselectComponent.prototype.ResolvePackage = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.closeModalEmitter.emit();
        if (this.metadataService.packages.length > 0) {
            /** @type {?} */
            var flag_1 = false;
            /** @type {?} */
            var packageName_1 = this.metadataService.packages[0];
            this.gspMetaService.GetDevRootPath().subscribe((/**
             * @param {?} root
             * @return {?}
             */
            function (root) {
                _this.metadataService.rootPath = root;
                _this.metadataService.GetMetadataPackageInfo(root + _this.metadataService.packRefPath, packageName_1).subscribe((/**
                 * @param {?} packageInfo
                 * @return {?}
                 */
                function (packageInfo) {
                    /** @type {?} */
                    var header = packageInfo.header;
                    // 检测依赖项
                    _this.metadataService.GetMetadataProjectInfo().subscribe((/**
                     * @param {?} projInfo
                     * @return {?}
                     */
                    function (projInfo) {
                        // 已有依赖关系
                        /** @type {?} */
                        var refs = projInfo.metadataPackageRefs;
                        refs.forEach((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) {
                            if (item.name === header.name) {
                                alert('已添加对该元数据包的依赖');
                                flag_1 = true;
                            }
                        }));
                        if (flag_1 === true) {
                            return;
                        }
                        // 更新工程引用
                        _this.metadataService.UpdateMetadataProject(header).subscribe((/**
                         * @param {?} data
                         * @return {?}
                         */
                        function (data) {
                            _this.metadataService.treeData = [];
                            _this.metadataService.Refresh();
                        }));
                        // 刷新树节点
                        if (_this.treeclassifierComponent) {
                            _this.treeclassifierComponent.files = _this.metadataService.treeData;
                        }
                    }));
                }));
            }));
        }
    };
    MetadatapackageselectComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'app-metadatapackageselect',
                    template: "<!--\u7B2C\u4E8C\u79CD\u5F39\u51FA\u65B9\u6CD5\u7684\u7EC4\u4EF6-->\r\n<!-- <div *ngIf=\"isModalShown\" [config]=\"{ show: true }\" (onHidden)=\"onHidden()\" bsModal #autoShownModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" style='min-height: 800px; min-width: 900px; max-width: none'>\r\n    <div class=\"modal-dialog\" style='max-width:none; width: 615px;margin-top:0'>\r\n        <div class=\"modal-content\"> -->\r\n            <!-- <div class=\"modal-header\">\r\n                <h4 class=\"modal-title pull-left\">\u9009\u62E9\u5143\u6570\u636E\u5305</h4>\r\n                <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n            </div> -->\r\n            <div class=\"modal-body\">\r\n                <div class=\"templateBlock\">\r\n                    <app-metadatapackagelist></app-metadatapackagelist>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default btn-primary\" (click)=\"ResolvePackage()\">\u786E\u5B9A</button>\r\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"hideModal()\">\u53D6\u6D88</button>\r\n            </div>\r\n        <!-- </div>\r\n    </div>\r\n</div> -->",
                    styles: [".templateBlock{display:flex}.infoBlock{width:100%;min-width:400px}.infoBlock label{width:50px}"]
                }] }
    ];
    /** @nocollapse */
    MetadatapackageselectComponent.ctorParameters = function () { return [
        { type: MetadataService },
        { type: GSPMetadataService }
    ]; };
    MetadatapackageselectComponent.propDecorators = {
        closeModalEmitter: [{ type: Output }],
        treeclassifierComponent: [{ type: ViewChild, args: [TreeclassifierComponent,] }]
    };
    return MetadatapackageselectComponent;
}());
export { MetadatapackageselectComponent };
if (false) {
    /** @type {?} */
    MetadatapackageselectComponent.prototype.closeModalEmitter;
    /** @type {?} */
    MetadatapackageselectComponent.prototype.treeclassifierComponent;
    /**
     * @type {?}
     * @private
     */
    MetadatapackageselectComponent.prototype.metadataService;
    /**
     * @type {?}
     * @private
     */
    MetadatapackageselectComponent.prototype.gspMetaService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGFwYWNrYWdlc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL21ldGFkYXRhLXNlbGVjdG9yLyIsInNvdXJjZXMiOlsibWV0YWRhdGEvbWV0YWRhdGEtc2VsZWN0L2NvbXBvbmVudHMvbWV0YWRhdGFwYWNrYWdlc2VsZWN0L21ldGFkYXRhcGFja2FnZXNlbGVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25GLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNyRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUUvRDtJQVNFLHdDQUFvQixlQUFnQyxFQUNoQyxjQUFrQztRQURsQyxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFDaEMsbUJBQWMsR0FBZCxjQUFjLENBQW9CO1FBQUksSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFBQyxDQUFDOzs7O0lBQzdHLGlEQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7SUFFRCxrREFBUzs7O0lBQVQ7UUFDRSw0QkFBNEI7SUFDOUIsQ0FBQzs7OztJQUVELGtEQUFTOzs7SUFBVDtRQUNFLDZCQUE2QjtRQUM3QixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELGlEQUFROzs7SUFBUjtRQUNFLDZCQUE2QjtRQUM3QixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFRCx5REFBZ0I7Ozs7SUFBaEIsVUFBaUIsVUFBa0I7UUFDakMsZ0NBQWdDO0lBQ2xDLENBQUM7Ozs7SUFFRCx1REFBYzs7O0lBQWQ7UUFBQSxpQkFtQ0M7UUFsQ0MsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxDQUFDO1FBQzlCLElBQUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTs7Z0JBQ3hDLE1BQUksR0FBRyxLQUFLOztnQkFDVixhQUFXLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxFQUFFLENBQUMsU0FBUzs7OztZQUFDLFVBQUEsSUFBSTtnQkFDakQsS0FBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO2dCQUNyQyxLQUFJLENBQUMsZUFBZSxDQUFDLHNCQUFzQixDQUFDLElBQUksR0FBRyxLQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRSxhQUFXLENBQUMsQ0FBQyxTQUFTOzs7O2dCQUFDLFVBQUEsV0FBVzs7d0JBQy9HLE1BQU0sR0FBRyxXQUFXLENBQUMsTUFBTTtvQkFDakMsUUFBUTtvQkFDUixLQUFJLENBQUMsZUFBZSxDQUFDLHNCQUFzQixFQUFFLENBQUMsU0FBUzs7OztvQkFBQyxVQUFBLFFBQVE7Ozs0QkFFeEQsSUFBSSxHQUFHLFFBQVEsQ0FBQyxtQkFBbUI7d0JBQ3pDLElBQUksQ0FBQyxPQUFPOzs7O3dCQUFDLFVBQUEsSUFBSTs0QkFDZixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDLElBQUksRUFBRTtnQ0FDN0IsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO2dDQUN0QixNQUFJLEdBQUcsSUFBSSxDQUFDOzZCQUNiO3dCQUNILENBQUMsRUFBQyxDQUFDO3dCQUNILElBQUksTUFBSSxLQUFLLElBQUksRUFBRTs0QkFDakIsT0FBTzt5QkFDUjt3QkFDSCxTQUFTO3dCQUNQLEtBQUksQ0FBQyxlQUFlLENBQUMscUJBQXFCLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUzs7Ozt3QkFBQyxVQUFBLElBQUk7NEJBQ2pFLEtBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQzs0QkFDbkMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQzt3QkFDakMsQ0FBQyxFQUFDLENBQUM7d0JBQ0gsUUFBUTt3QkFDTixJQUFJLEtBQUksQ0FBQyx1QkFBdUIsRUFBRTs0QkFDbEMsS0FBSSxDQUFDLHVCQUF1QixDQUFDLEtBQUssR0FBRyxLQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQzt5QkFDbkU7b0JBQ0EsQ0FBQyxFQUFDLENBQUM7Z0JBQ1AsQ0FBQyxFQUFDLENBQUM7WUFDTCxDQUFDLEVBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQzs7Z0JBbkVGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsdTRDQUFxRDs7aUJBRXREOzs7O2dCQVRRLGVBQWU7Z0JBRWYsa0JBQWtCOzs7b0NBU3hCLE1BQU07MENBQ04sU0FBUyxTQUFDLHVCQUF1Qjs7SUE0RHBDLHFDQUFDO0NBQUEsQUFwRUQsSUFvRUM7U0E5RFksOEJBQThCOzs7SUFDekMsMkRBQStDOztJQUMvQyxpRUFBcUY7Ozs7O0lBQ3pFLHlEQUF3Qzs7Ozs7SUFDeEMsd0RBQTBDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbWV0YWRhdGEuc2VydmljZSc7XHJcbmltcG9ydCB7IFRyZWVjbGFzc2lmaWVyQ29tcG9uZW50IH0gZnJvbSAnLi4vdHJlZWNsYXNzaWZpZXIvdHJlZWNsYXNzaWZpZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgR1NQTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vbWV0YWRhdGEuc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXHJcbiAgc2VsZWN0b3I6ICdhcHAtbWV0YWRhdGFwYWNrYWdlc2VsZWN0JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbWV0YWRhdGFwYWNrYWdlc2VsZWN0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9tZXRhZGF0YXBhY2thZ2VzZWxlY3QuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNZXRhZGF0YXBhY2thZ2VzZWxlY3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBPdXRwdXQoKSBjbG9zZU1vZGFsRW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgQFZpZXdDaGlsZChUcmVlY2xhc3NpZmllckNvbXBvbmVudCkgdHJlZWNsYXNzaWZpZXJDb21wb25lbnQ6IFRyZWVjbGFzc2lmaWVyQ29tcG9uZW50O1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWV0YWRhdGFTZXJ2aWNlOiBNZXRhZGF0YVNlcnZpY2UsXHJcbiAgICAgICAgICAgICAgcHJpdmF0ZSBnc3BNZXRhU2VydmljZTogR1NQTWV0YWRhdGFTZXJ2aWNlKSB7IHRoaXMuY2xvc2VNb2RhbEVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTsgfVxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgc2hvd01vZGFsKCk6IHZvaWQge1xyXG4gICAgLy8gdGhpcy5pc01vZGFsU2hvd24gPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgaGlkZU1vZGFsKCk6IHZvaWQge1xyXG4gICAgLy8gdGhpcy5pc01vZGFsU2hvd24gPSBmYWxzZTtcclxuICAgIHRoaXMuY2xvc2VNb2RhbEVtaXR0ZXIuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgb25IaWRkZW4oKTogdm9pZCB7XHJcbiAgICAvLyB0aGlzLmlzTW9kYWxTaG93biA9IGZhbHNlO1xyXG4gICAgdGhpcy5jbG9zZU1vZGFsRW1pdHRlci5lbWl0KCk7XHJcbiAgfVxyXG5cclxuICBvblNlbGVjdGVkQ2hhbmdlKGNsYXNzaWZpZXI6IHN0cmluZykge1xyXG4gICAgLy8gdGhpcy5jbGFzc2lmaWVyID0gY2xhc3NpZmllcjtcclxuICB9XHJcblxyXG4gIFJlc29sdmVQYWNrYWdlKCkge1xyXG4gICAgdGhpcy5jbG9zZU1vZGFsRW1pdHRlci5lbWl0KCk7XHJcbiAgICBpZiAodGhpcy5tZXRhZGF0YVNlcnZpY2UucGFja2FnZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICBsZXQgZmxhZyA9IGZhbHNlO1xyXG4gICAgICBjb25zdCBwYWNrYWdlTmFtZSA9IHRoaXMubWV0YWRhdGFTZXJ2aWNlLnBhY2thZ2VzWzBdO1xyXG4gICAgICB0aGlzLmdzcE1ldGFTZXJ2aWNlLkdldERldlJvb3RQYXRoKCkuc3Vic2NyaWJlKHJvb3QgPT4ge1xyXG4gICAgICAgIHRoaXMubWV0YWRhdGFTZXJ2aWNlLnJvb3RQYXRoID0gcm9vdDtcclxuICAgICAgICB0aGlzLm1ldGFkYXRhU2VydmljZS5HZXRNZXRhZGF0YVBhY2thZ2VJbmZvKHJvb3QgKyB0aGlzLm1ldGFkYXRhU2VydmljZS5wYWNrUmVmUGF0aCwgcGFja2FnZU5hbWUpLnN1YnNjcmliZShwYWNrYWdlSW5mbyA9PiB7XHJcbiAgICAgICAgICBjb25zdCBoZWFkZXIgPSBwYWNrYWdlSW5mby5oZWFkZXI7XHJcbiAgICAgICAgICAvLyDmo4DmtYvkvp3otZbpoblcclxuICAgICAgICAgIHRoaXMubWV0YWRhdGFTZXJ2aWNlLkdldE1ldGFkYXRhUHJvamVjdEluZm8oKS5zdWJzY3JpYmUocHJvakluZm8gPT4ge1xyXG4gICAgICAgICAgICAvLyDlt7LmnInkvp3otZblhbPns7tcclxuICAgICAgICAgICAgY29uc3QgcmVmcyA9IHByb2pJbmZvLm1ldGFkYXRhUGFja2FnZVJlZnM7XHJcbiAgICAgICAgICAgIHJlZnMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgICBpZiAoaXRlbS5uYW1lID09PSBoZWFkZXIubmFtZSkge1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoJ+W3sua3u+WKoOWvueivpeWFg+aVsOaNruWMheeahOS+nei1licpO1xyXG4gICAgICAgICAgICAgICAgZmxhZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaWYgKGZsYWcgPT09IHRydWUpIHtcclxuICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIC8vIOabtOaWsOW3peeoi+W8leeUqFxyXG4gICAgICAgICAgICB0aGlzLm1ldGFkYXRhU2VydmljZS5VcGRhdGVNZXRhZGF0YVByb2plY3QoaGVhZGVyKS5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubWV0YWRhdGFTZXJ2aWNlLnRyZWVEYXRhID0gW107XHJcbiAgICAgICAgICAgIHRoaXMubWV0YWRhdGFTZXJ2aWNlLlJlZnJlc2goKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgLy8g5Yi35paw5qCR6IqC54K5XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRyZWVjbGFzc2lmaWVyQ29tcG9uZW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMudHJlZWNsYXNzaWZpZXJDb21wb25lbnQuZmlsZXMgPSB0aGlzLm1ldGFkYXRhU2VydmljZS50cmVlRGF0YTtcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19