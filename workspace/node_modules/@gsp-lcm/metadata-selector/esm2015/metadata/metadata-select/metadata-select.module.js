/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-select/metadata-select.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SelectMetadataComponent } from './components/selectmetadate/selectmetadata.component';
import { TreeclassifierComponent } from './components/treeclassifier/treeclassifier.component';
import { TemplatemetadataComponent } from './components/metadatalist/metadatalist.component';
import { FormsModule } from '@angular/forms';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { GridModule } from '@progress/kendo-angular-grid';
import { MetadataService } from './metadata.service';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { LayoutModule } from '@progress/kendo-angular-layout';
import { MetadatapackageselectComponent } from './components/metadatapackageselect/metadatapackageselect.component';
import { MetadatapackagelistComponent } from './components/metadatapackagelist/metadatapackagelist.component';
import { DropDownsModule } from '@progress/kendo-angular-dropdowns';
import { MetadatalistdetailsComponent } from './components/metadatalist/metadatalistdetails/metadatalistdetails.component';
import { LoadingModule } from '@farris/ui-loading';
import { OnceClickDirective } from './components/selectmetadate/onclick.directive';
export class MetadataSelectModule {
    constructor() {
    }
}
MetadataSelectModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    TreeViewModule,
                    GridModule,
                    LayoutModule,
                    FarrisDialogModule,
                    DropDownsModule,
                    LoadingModule.forRoot()
                ],
                exports: [
                    SelectMetadataComponent
                ],
                providers: [MetadataService],
                // 服务提供者
                // tslint:disable-next-line:max-line-length
                declarations: [
                    SelectMetadataComponent,
                    TreeclassifierComponent,
                    TemplatemetadataComponent,
                    MetadatapackageselectComponent,
                    MetadatapackagelistComponent,
                    MetadatalistdetailsComponent,
                    OnceClickDirective
                ],
                entryComponents: [SelectMetadataComponent, MetadatapackageselectComponent]
            },] }
];
/** @nocollapse */
MetadataSelectModule.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGEtc2VsZWN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL21ldGFkYXRhLXNlbGVjdG9yLyIsInNvdXJjZXMiOlsibWV0YWRhdGEvbWV0YWRhdGEtc2VsZWN0L21ldGFkYXRhLXNlbGVjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUMvRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUMvRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUM3RixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzlELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ3BILE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLGdFQUFnRSxDQUFDO0FBQzlHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw2RUFBNkUsQ0FBQztBQUMzSCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUE2Qm5GLE1BQU0sT0FBTyxvQkFBb0I7SUFDL0I7SUFDQSxDQUFDOzs7WUE3QkYsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLFdBQVc7b0JBQ1gsY0FBYztvQkFDZCxVQUFVO29CQUNWLFlBQVk7b0JBQ1osa0JBQWtCO29CQUNsQixlQUFlO29CQUNmLGFBQWEsQ0FBQyxPQUFPLEVBQUU7aUJBQ3hCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCx1QkFBdUI7aUJBQ3hCO2dCQUNELFNBQVMsRUFBRSxDQUFDLGVBQWUsQ0FBQzs7O2dCQUU1QixZQUFZLEVBQUU7b0JBQ1osdUJBQXVCO29CQUN2Qix1QkFBdUI7b0JBQ3ZCLHlCQUF5QjtvQkFDekIsOEJBQThCO29CQUM5Qiw0QkFBNEI7b0JBQzVCLDRCQUE0QjtvQkFDNUIsa0JBQWtCO2lCQUNuQjtnQkFDRCxlQUFlLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSw4QkFBOEIsQ0FBQzthQUMzRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFNlbGVjdE1ldGFkYXRhQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NlbGVjdG1ldGFkYXRlL3NlbGVjdG1ldGFkYXRhLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRyZWVjbGFzc2lmaWVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3RyZWVjbGFzc2lmaWVyL3RyZWVjbGFzc2lmaWVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRlbXBsYXRlbWV0YWRhdGFDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWV0YWRhdGFsaXN0L21ldGFkYXRhbGlzdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgVHJlZVZpZXdNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci10cmVldmlldyc7XHJcbmltcG9ydCB7IEdyaWRNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcclxuaW1wb3J0IHsgTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi9tZXRhZGF0YS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRmFycmlzRGlhbG9nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBMYXlvdXRNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sYXlvdXQnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YXBhY2thZ2VzZWxlY3RDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWV0YWRhdGFwYWNrYWdlc2VsZWN0L21ldGFkYXRhcGFja2FnZXNlbGVjdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YXBhY2thZ2VsaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL21ldGFkYXRhcGFja2FnZWxpc3QvbWV0YWRhdGFwYWNrYWdlbGlzdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEcm9wRG93bnNNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1kcm9wZG93bnMnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YWxpc3RkZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL21ldGFkYXRhbGlzdC9tZXRhZGF0YWxpc3RkZXRhaWxzL21ldGFkYXRhbGlzdGRldGFpbHMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTG9hZGluZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcbmltcG9ydCB7IE9uY2VDbGlja0RpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy9zZWxlY3RtZXRhZGF0ZS9vbmNsaWNrLmRpcmVjdGl2ZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgVHJlZVZpZXdNb2R1bGUsXHJcbiAgICBHcmlkTW9kdWxlLFxyXG4gICAgTGF5b3V0TW9kdWxlLFxyXG4gICAgRmFycmlzRGlhbG9nTW9kdWxlLFxyXG4gICAgRHJvcERvd25zTW9kdWxlLFxyXG4gICAgTG9hZGluZ01vZHVsZS5mb3JSb290KClcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFNlbGVjdE1ldGFkYXRhQ29tcG9uZW50XHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtNZXRhZGF0YVNlcnZpY2VdLCAvLyDmnI3liqHmj5DkvpvogIVcclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBTZWxlY3RNZXRhZGF0YUNvbXBvbmVudCxcclxuICAgIFRyZWVjbGFzc2lmaWVyQ29tcG9uZW50LFxyXG4gICAgVGVtcGxhdGVtZXRhZGF0YUNvbXBvbmVudCxcclxuICAgIE1ldGFkYXRhcGFja2FnZXNlbGVjdENvbXBvbmVudCxcclxuICAgIE1ldGFkYXRhcGFja2FnZWxpc3RDb21wb25lbnQsXHJcbiAgICBNZXRhZGF0YWxpc3RkZXRhaWxzQ29tcG9uZW50LFxyXG4gICAgT25jZUNsaWNrRGlyZWN0aXZlXHJcbiAgXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtTZWxlY3RNZXRhZGF0YUNvbXBvbmVudCwgTWV0YWRhdGFwYWNrYWdlc2VsZWN0Q29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWV0YWRhdGFTZWxlY3RNb2R1bGUge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxufVxyXG4iXX0=