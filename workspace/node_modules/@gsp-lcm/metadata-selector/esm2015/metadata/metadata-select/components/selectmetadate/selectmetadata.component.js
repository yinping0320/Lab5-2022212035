/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-select/components/selectmetadate/selectmetadata.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// tslint:disable-next-line:max-line-length
import { Component, ViewChild, Input, Output, EventEmitter } from '@angular/core';
import { MetadataService } from '../../metadata.service';
import { MetadatapackageselectComponent } from '../metadatapackageselect/metadatapackageselect.component';
import { Metadata4RefDto, MetadataPackageHeader } from '../../../metadata4refdto';
import { GSPMetadataService } from '../../../metadata.service';
import { LoadingService } from '@farris/ui-loading';
export class SelectMetadataComponent {
    /**
     * @param {?} metadataService
     * @param {?} loading
     * @param {?} gspMetaService
     */
    constructor(metadataService, loading, gspMetaService) {
        this.metadataService = metadataService;
        this.loading = loading;
        this.gspMetaService = gspMetaService;
        this.selectedMetadata = new EventEmitter();
        this.closeModalEmitter = new EventEmitter();
        this.metadataService.selectedChange.subscribe((/**
         * @param {?} leftItem
         * @return {?}
         */
        leftItem => {
            this.classifier = leftItem;
        }));
        this.isMavenEnable = false;
        this.gspMetaService.getMavenSetting().subscribe((/**
         * @param {?} flag
         * @return {?}
         */
        flag => {
            // if (flag) {
            this.isMavenEnable = flag;
            // }
        }));
    }
    /**
     * @param {?} metadata
     * @return {?}
     */
    onSelectedMetadataChanged(metadata) {
        this.metadata = metadata;
    }
    /**
     * @param {?} code
     * @return {?}
     */
    setCodeLanguage(code) {
        this.codelanguage = code;
    }
    /**
     * @return {?}
     */
    LoadMetadata() {
        if (this.metadata && this.classifier) {
            // 选中的是当前工程下的元数据，调用Load
            if (this.classifier.id === 'project' || this.classifier.id === 'bo') {
                if (this.loading) {
                    this.loading.show({ message: '正在添加引用，请稍候...' });
                }
                this.metadataService.LoadTheMetadata(this.metadata).subscribe((/**
                 * @param {?} templates
                 * @return {?}
                 */
                templates => {
                    if (this.loading) {
                        this.loading.close();
                    }
                    /** @type {?} */
                    const metadata4Ref = new Metadata4RefDto();
                    metadata4Ref.metadata = templates;
                    metadata4Ref.metadata.processMode = this.metadata.processMode === 'interpretation' ? 'interpretation' : 'generation';
                    metadata4Ref.packageHeader = new MetadataPackageHeader();
                    this.selectedMetadata.emit(metadata4Ref);
                    this.hideModal();
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                error => {
                    this.errorMsg(error);
                    if (this.loading) {
                        this.loading.close();
                    }
                }), (/**
                 * @return {?}
                 */
                () => {
                    if (this.loading) {
                        this.loading.close();
                    }
                }));
            }
            else if (this.classifier.id === 'local') {
                if (!this.metadata.mdPkgName) {
                    /** @type {?} */
                    const msg = '未找到元数据包信息。';
                    gsp.ide.messager.error(msg);
                    return;
                }
                if (this.loading) {
                    this.loading.show({ message: '正在添加引用，请稍候...' });
                }
                this.metadataService.pickMetadataIndex(1, this.metadata, this.codelanguage, this.isMavenEnable).subscribe((/**
                 * @param {?} templates
                 * @return {?}
                 */
                templates => {
                    if (this.loading) {
                        this.loading.close();
                    }
                    templates.metadata.processMode = this.metadata.processMode === 'interpretation' ? 'interpretation' : 'generation';
                    this.selectedMetadata.emit(templates);
                    this.hideModal();
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                error => {
                    this.errorMsg(error);
                    if (this.loading) {
                        this.loading.close();
                    }
                }), (/**
                 * @return {?}
                 */
                () => {
                    if (this.loading) {
                        this.loading.close();
                    }
                }));
            }
            else if (this.classifier.id === 'remote') {
                if (!this.metadata.mdPkgName) {
                    /** @type {?} */
                    const msg = '未找到元数据包信息。';
                    gsp.ide.messager.error(msg);
                    return;
                }
                if (!this.metadata.repoPkg || this.metadata.repoPkg.length < 1) {
                    /** @type {?} */
                    const msg = '未找到仓库信息。';
                    gsp.ide.messager.error(msg);
                    return;
                }
                if (this.loading) {
                    this.loading.show({ message: '正在添加引用，请稍候...' });
                }
                this.metadataService.pickMetadataIndex(2, this.metadata, this.codelanguage, this.isMavenEnable).subscribe((/**
                 * @param {?} templates
                 * @return {?}
                 */
                templates => {
                    if (this.loading) {
                        this.loading.close();
                    }
                    templates.metadata.processMode = this.metadata.processMode === 'interpretation' ? 'interpretation' : 'generation';
                    this.selectedMetadata.emit(templates);
                    this.hideModal();
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                error => {
                    this.errorMsg(error);
                    if (this.loading) {
                        this.loading.close();
                    }
                }), (/**
                 * @return {?}
                 */
                () => {
                    if (this.loading) {
                        this.loading.close();
                    }
                }));
            }
            else if (this.classifier.id === 'ref') {
                if (!this.metadata.mdPkgName) {
                    /** @type {?} */
                    const msg = '未找到元数据包信息。';
                    gsp.ide.messager.error(msg);
                    return;
                }
                if (!this.metadata.repoPkg || this.metadata.repoPkg.length < 1) {
                    /** @type {?} */
                    const msg = '未找到仓库信息。';
                    gsp.ide.messager.error(msg);
                    return;
                }
                if (this.loading) {
                    this.loading.show({ message: '请稍候...' });
                }
                this.metadataService.pickMetadataIndex(3, this.metadata, this.codelanguage, this.isMavenEnable).subscribe((/**
                 * @param {?} templates
                 * @return {?}
                 */
                templates => {
                    if (this.loading) {
                        this.loading.close();
                    }
                    templates.metadata.processMode = this.metadata.processMode === 'interpretation' ? 'interpretation' : 'generation';
                    this.selectedMetadata.emit(templates);
                    this.hideModal();
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                error => {
                    this.errorMsg(error);
                    if (this.loading) {
                        this.loading.close();
                    }
                }), (/**
                 * @return {?}
                 */
                () => {
                    if (this.loading) {
                        this.loading.close();
                    }
                }));
            }
        }
        else {
            /** @type {?} */
            const msg = '请先选中一个元数据。';
            gsp.ide.messager.warning(msg);
        }
    }
    /**
     * @private
     * @param {?} error
     * @return {?}
     */
    errorMsg(error) {
        /** @type {?} */
        let msg = error.error.Message !== undefined ? error.error.Message : error.error.error.message;
        if (msg == null) {
            msg = '引用元数据失败。';
        }
        gsp.ide.messager.error(msg);
    }
    // 弹出元数据包选择界面
    /**
     * @return {?}
     */
    PackageSelect() {
        this.metadatapackageselectComponent.showModal();
    }
    /**
     * @return {?}
     */
    hideModal() {
        this.closeModalEmitter.emit();
    }
}
SelectMetadataComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'app-select-metadata',
                template: "<div class=\"farris-main-area d-flex flex-column\">\r\n  <div class=\"modal-body d-flex flex-fill flex-column\">\r\n    <div class=\"templateBlock flex-column flex-fill d-flex\">\r\n      <kendo-splitter class=\"d-flex \" style=\"flex: 1 1 auto;\" orientation=\"horizontal\">\r\n        <kendo-splitter-pane class=\"d-flex \" [collapsible]=\"true\" size=\"170px\" style=\"height: auto\">\r\n          <app-treeclassifier [metadataPath]=\"metadataPath\" [onlyDisplayCurrentProject]=\"onlyDisplayCurrentProject\"></app-treeclassifier>\r\n        </kendo-splitter-pane>\r\n        <kendo-splitter-pane class=\"d-flex\" style=\"height: auto\">\r\n          <app-metadatalist [typeName]=\"typeName\" [filter]=\"filter\" [isMavenEnable]=\"isMavenEnable\" (technologyStack)=\"setCodeLanguage($event)\"\r\n            (selectedMetadataChanged)=\"this.onSelectedMetadataChanged($event)\"></app-metadatalist>\r\n        </kendo-splitter-pane>\r\n      </kendo-splitter>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" click.once class=\"btn btn-outline-primary btn-sm px-3 mx-2\"\r\n      (click.once)=\"LoadMetadata()\">\u786E\u5B9A</button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary btn-sm px-3 mx-2\" (click)=\"hideModal()\">\u53D6\u6D88</button>\r\n  </div>\r\n</div>\r\n",
                styles: [".templateBlock{display:flex}.infoBlock{width:100%;min-width:400px}.infoBlock label{width:50px}"]
            }] }
];
/** @nocollapse */
SelectMetadataComponent.ctorParameters = () => [
    { type: MetadataService },
    { type: LoadingService },
    { type: GSPMetadataService }
];
SelectMetadataComponent.propDecorators = {
    metadatapackageselectComponent: [{ type: ViewChild, args: [MetadatapackageselectComponent,] }],
    metadataPath: [{ type: Input }],
    typeName: [{ type: Input }],
    filter: [{ type: Input }],
    onlyDisplayCurrentProject: [{ type: Input }],
    closeModalEmitter: [{ type: Output }],
    selectedMetadata: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SelectMetadataComponent.prototype.metadatapackageselectComponent;
    /** @type {?} */
    SelectMetadataComponent.prototype.metadataPath;
    /** @type {?} */
    SelectMetadataComponent.prototype.typeName;
    /** @type {?} */
    SelectMetadataComponent.prototype.filter;
    /** @type {?} */
    SelectMetadataComponent.prototype.onlyDisplayCurrentProject;
    /** @type {?} */
    SelectMetadataComponent.prototype.classifier;
    /** @type {?} */
    SelectMetadataComponent.prototype.codelanguage;
    /** @type {?} */
    SelectMetadataComponent.prototype.isMavenEnable;
    /** @type {?} */
    SelectMetadataComponent.prototype.metadata;
    /** @type {?} */
    SelectMetadataComponent.prototype.closeModalEmitter;
    /** @type {?} */
    SelectMetadataComponent.prototype.selectedMetadata;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataComponent.prototype.metadataService;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataComponent.prototype.loading;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataComponent.prototype.gspMetaService;
}
//# sourceMappingURL=data:application/json;base64,