/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-select/components/metadatapackagelist/metadatapackagelist.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { MetadataService } from '../../metadata.service';
import { process } from '@progress/kendo-data-query';
export class MetadatapackagelistComponent {
    /**
     * @param {?} metadataService
     */
    constructor(metadataService) {
        this.metadataService = metadataService;
        // tslint:disable-next-line:member-ordering
        this.state = {
            skip: 0,
            take: 9999,
            // Initial filter descriptor
            filter: {
                logic: 'and',
                filters: []
            }
        };
        // tslint:disable-next-line:member-ordering
        this.selectableSetting = { mode: 'single', checkboxOnly: false };
    }
    /**
     * @param {?} state
     * @return {?}
     */
    dataStateChange(state) {
        this.state = state;
        this.gridData = process(this.data, this.state);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.metadataService.GetMetadataPackages().subscribe((/**
         * @param {?} packages
         * @return {?}
         */
        packages => {
            /** @type {?} */
            const tempdata = [];
            this.packagesInfo = packages;
            if (this.packagesInfo) {
                this.packagesInfo.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => {
                    if (item.type === 'folder' || (item.type === 'file' && item.name.endsWith('mdpkg'))) {
                        tempdata.push({ 'name': item.name });
                    }
                }));
                this.data = tempdata;
                this.gridData = process(this.data, this.state);
            }
        }));
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onSelectionChange(event) {
        /** @type {?} */
        const packageName = event.selectedRows[0].dataItem.name;
        this.metadataService.clearPackage();
        this.metadataService.addPackage(packageName);
    }
}
MetadatapackagelistComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'app-metadatapackagelist',
                template: "<div class=\"templateInfo\">\r\n  <div class=\"templateSelector\">\r\n    <kendo-grid [data]=\"gridData\" \r\n                [selectable]=\"selectableSetting\" \r\n                (selectionChange)=onSelectionChange($event)\r\n                [pageSize]=\"state.take\"\r\n                [skip]=\"state.skip\"\r\n                [sort]=\"state.sort\"\r\n                [filter]=\"state.filter\"\r\n                [sortable]=\"true\"\r\n                [pageable]=\"false\"\r\n                [filterable]=\"true\"\r\n                (dataStateChange)=dataStateChange($event)>\r\n      <kendo-grid-column field=\"name\" title=\"\u5305\u540D\u79F0\" width=\"200\">\r\n      </kendo-grid-column>\r\n    </kendo-grid>\r\n  </div>\r\n</div>",
                styles: [".templateSelector{width:580px;height:450px;border:.5px solid #ddd}.templateDescription{width:200px;height:450px;border:.5px solid #ddd}.templateInfo{display:flex}"]
            }] }
];
/** @nocollapse */
MetadatapackagelistComponent.ctorParameters = () => [
    { type: MetadataService }
];
if (false) {
    /** @type {?} */
    MetadatapackagelistComponent.prototype.data;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.packagesInfo;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.state;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.gridData;
    /** @type {?} */
    MetadatapackagelistComponent.prototype.selectableSetting;
    /**
     * @type {?}
     * @private
     */
    MetadatapackagelistComponent.prototype.metadataService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGFwYWNrYWdlbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWxjbS9tZXRhZGF0YS1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbIm1ldGFkYXRhL21ldGFkYXRhLXNlbGVjdC9jb21wb25lbnRzL21ldGFkYXRhcGFja2FnZWxpc3QvbWV0YWRhdGFwYWNrYWdlbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUd6RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sNEJBQTRCLENBQUM7QUFTNUQsTUFBTSxPQUFPLDRCQUE0Qjs7OztJQXNCdkMsWUFBb0IsZUFBZ0M7UUFBaEMsb0JBQWUsR0FBZixlQUFlLENBQWlCOztRQWxCL0MsVUFBSyxHQUFVO1lBQ3BCLElBQUksRUFBRSxDQUFDO1lBQ1AsSUFBSSxFQUFFLElBQUk7O1lBRVYsTUFBTSxFQUFFO2dCQUNOLEtBQUssRUFBRSxLQUFLO2dCQUNaLE9BQU8sRUFBRSxFQUFFO2FBQ1o7U0FDRixDQUFDOztRQVNGLHNCQUFpQixHQUF1QixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBTnBELGVBQWUsQ0FBQyxLQUEyQjtRQUNoRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7O0lBS0MsUUFBUTtRQUNOLElBQUksQ0FBQyxlQUFlLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxTQUFTOzs7O1FBQUMsUUFBUSxDQUFDLEVBQUU7O2tCQUN4RCxRQUFRLEdBQUcsRUFBRTtZQUNuQixJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQztZQUM3QixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7Z0JBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTzs7OztnQkFBQyxJQUFJLENBQUMsRUFBRTtvQkFDL0IsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUU7d0JBQ25GLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxNQUFNLEVBQUcsSUFBSSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUM7cUJBQ3JDO2dCQUNILENBQUMsRUFBQyxDQUFDO2dCQUNILElBQUksQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO2dCQUNyQixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoRDtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxLQUFLOztjQUNmLFdBQVcsR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJO1FBQ3ZELElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7O1lBbERGLFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsOHVCQUFtRDs7YUFFcEQ7Ozs7WUFYUSxlQUFlOzs7O0lBYXhCLDRDQUF3Qjs7SUFDeEIsb0RBQWtCOztJQUVsQiw2Q0FRRTs7SUFHRixnREFBZ0M7O0lBTWhDLHlEQUFnRjs7Ozs7SUFDbEUsdURBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbWV0YWRhdGEuc2VydmljZSc7XHJcbmltcG9ydCB7IFBhY2thZ2VCYXNlSW5mbyB9IGZyb20gJy4uLy4uL3BhY2thZ2ViYXNlaW5mbyc7XHJcbmltcG9ydCB7IFNlbGVjdGFibGVTZXR0aW5ncyB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5pbXBvcnQgeyBwcm9jZXNzLCBTdGF0ZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1kYXRhLXF1ZXJ5JztcclxuaW1wb3J0IHsgR3JpZERhdGFSZXN1bHQsIERhdGFTdGF0ZUNoYW5nZUV2ZW50IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZ3JpZCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXHJcbiAgc2VsZWN0b3I6ICdhcHAtbWV0YWRhdGFwYWNrYWdlbGlzdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL21ldGFkYXRhcGFja2FnZWxpc3QuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL21ldGFkYXRhcGFja2FnZWxpc3QuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNZXRhZGF0YXBhY2thZ2VsaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuZGF0YTogUGFja2FnZUJhc2VJbmZvW107XHJcbnBhY2thZ2VzSW5mbzogYW55O1xyXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWVtYmVyLW9yZGVyaW5nXHJcbnB1YmxpYyBzdGF0ZTogU3RhdGUgPSB7XHJcbiAgc2tpcDogMCxcclxuICB0YWtlOiA5OTk5LFxyXG4gIC8vIEluaXRpYWwgZmlsdGVyIGRlc2NyaXB0b3JcclxuICBmaWx0ZXI6IHtcclxuICAgIGxvZ2ljOiAnYW5kJyxcclxuICAgIGZpbHRlcnM6IFtdXHJcbiAgfVxyXG59O1xyXG4vLyBwdWJsaWMgZ3JpZERhdGE6IEdyaWREYXRhUmVzdWx0ID0gcHJvY2Vzcyh0aGlzLmRhdGEsIHRoaXMuc3RhdGUpO1xyXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWVtYmVyLW9yZGVyaW5nXHJcbnB1YmxpYyBncmlkRGF0YTogR3JpZERhdGFSZXN1bHQ7XHJcbnB1YmxpYyBkYXRhU3RhdGVDaGFuZ2Uoc3RhdGU6IERhdGFTdGF0ZUNoYW5nZUV2ZW50KTogdm9pZCB7XHJcbiAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xyXG4gIHRoaXMuZ3JpZERhdGEgPSBwcm9jZXNzKHRoaXMuZGF0YSwgdGhpcy5zdGF0ZSk7XHJcbn1cclxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1lbWJlci1vcmRlcmluZ1xyXG5zZWxlY3RhYmxlU2V0dGluZzogU2VsZWN0YWJsZVNldHRpbmdzID0geyBtb2RlOiAnc2luZ2xlJywgY2hlY2tib3hPbmx5OiBmYWxzZSB9O1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbWV0YWRhdGFTZXJ2aWNlOiBNZXRhZGF0YVNlcnZpY2UpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMubWV0YWRhdGFTZXJ2aWNlLkdldE1ldGFkYXRhUGFja2FnZXMoKS5zdWJzY3JpYmUocGFja2FnZXMgPT4ge1xyXG4gICAgICBjb25zdCB0ZW1wZGF0YSA9IFtdO1xyXG4gICAgICB0aGlzLnBhY2thZ2VzSW5mbyA9IHBhY2thZ2VzO1xyXG4gICAgICBpZiAodGhpcy5wYWNrYWdlc0luZm8pIHtcclxuICAgICAgICB0aGlzLnBhY2thZ2VzSW5mby5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gJ2ZvbGRlcicgfHwgKGl0ZW0udHlwZSA9PT0gJ2ZpbGUnICYmIGl0ZW0ubmFtZS5lbmRzV2l0aCgnbWRwa2cnKSkpIHtcclxuICAgICAgICAgICAgdGVtcGRhdGEucHVzaCh7J25hbWUnIDogaXRlbS5uYW1lfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gdGVtcGRhdGE7XHJcbiAgICAgICAgdGhpcy5ncmlkRGF0YSA9IHByb2Nlc3ModGhpcy5kYXRhLCB0aGlzLnN0YXRlKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBvblNlbGVjdGlvbkNoYW5nZShldmVudCkge1xyXG4gICAgY29uc3QgcGFja2FnZU5hbWUgPSBldmVudC5zZWxlY3RlZFJvd3NbMF0uZGF0YUl0ZW0ubmFtZTtcclxuICAgIHRoaXMubWV0YWRhdGFTZXJ2aWNlLmNsZWFyUGFja2FnZSgpO1xyXG4gICAgdGhpcy5tZXRhZGF0YVNlcnZpY2UuYWRkUGFja2FnZShwYWNrYWdlTmFtZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==