import { EventEmitter } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { GSPMetadataService } from '../metadata.service';
export declare class MetadataService {
    private gspMetadataService;
    currentProjectPath: string;
    rootPath: string;
    packRefPath: string;
    selectedChange: EventEmitter<string>;
    constructor(gspMetadataService: GSPMetadataService);
    treeData: any[];
    getMetadataClassifier(type: any): any[];
    metadatas: any[];
    addMetadata(metadata: any): void;
    clearMetadata(): void;
    packages: any[];
    addPackage(mp: any): void;
    clearPackage(): void;
    GetMetadataList(typeName: string): Observable<any>;
    GetMetadataListInBo(typeName: string): Observable<any>;
    GetMetadataByFilter(typeCode: string, postfix: string, filter: string): Observable<any>;
    GetMetadataProjectInfo(): Observable<any>;
    GetMetadataProjPath(metadataPath: string): Observable<any>;
    GetMetadataInfos(scope: any, codelanguage: string, isMavenEnable: boolean, metadataType?: any, searchText?: any, page?: any, selectedPackageSource?: any): Observable<Object>;
    GetMetadataPackageInfo(packPath: string, packageName: string): Observable<any>;
    pickMetadataIndex(scope: number, metadataIndexDto: any, codelanguage: string, isMavenEnable: boolean): Observable<any>;
    LoadTheMetadata(metadata: any): Observable<any>;
    LoadMetadata(): Observable<any>;
    GetMetadataPackages(): Observable<any>;
    UpdateMetadataProject(packageHeader: any): Observable<any>;
    getCodeLanguage(): Observable<any>;
    getProcessMode(): Observable<any>;
    Refresh(): void;
    getBoPath(): Observable<any>;
}
