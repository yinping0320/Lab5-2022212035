/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadatart-select/metadatart-select.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SelectMetadataRTComponent } from './components/selectmetadatart/selectmetadatart.component';
import { TemplatemetadataRTComponent } from './components/metadatartlist/metadatartlist.component';
import { FormsModule } from '@angular/forms';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { GridModule } from '@progress/kendo-angular-grid';
import { MetadataRTService } from './metadatart.service';
import { NotifyModule } from '@farris/ui-notify';
// import { FarrisDialogModule } from '@farris/ui-dialog';
export class MetadataRTSelectModule {
    constructor() {
    }
}
MetadataRTSelectModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    TreeViewModule,
                    GridModule,
                    NotifyModule.forRoot()
                    // FarrisDialogModule
                ],
                exports: [
                    SelectMetadataRTComponent,
                    NotifyModule
                ],
                providers: [
                    MetadataRTService
                ],
                // 服务提供者
                declarations: [SelectMetadataRTComponent, TemplatemetadataRTComponent],
                entryComponents: [SelectMetadataRTComponent]
            },] }
];
/** @nocollapse */
MetadataRTSelectModule.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGFydC1zZWxlY3QubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1sY20vbWV0YWRhdGFydC1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbIm1ldGFkYXRhL21ldGFkYXRhcnQtc2VsZWN0L21ldGFkYXRhcnQtc2VsZWN0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBWSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ3JHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQ25HLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7QUF1Qi9DLE1BQU0sT0FBTyxzQkFBc0I7SUFDakM7SUFDQSxDQUFDOzs7WUFyQkYsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLFdBQVc7b0JBQ1gsY0FBYztvQkFDZCxVQUFVO29CQUNWLFlBQVksQ0FBQyxPQUFPLEVBQUU7b0JBQ3RCLHFCQUFxQjtpQkFDdEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLHlCQUF5QjtvQkFDekIsWUFBWTtpQkFDYjtnQkFDRCxTQUFTLEVBQUU7b0JBQ1QsaUJBQWlCO2lCQUNsQjs7Z0JBQ0QsWUFBWSxFQUFFLENBQUMseUJBQXlCLEVBQUUsMkJBQTJCLENBQUM7Z0JBQ3RFLGVBQWUsRUFBRSxDQUFDLHlCQUF5QixDQUFDO2FBQzdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTE9DQUxFX0lELE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFNlbGVjdE1ldGFkYXRhUlRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2VsZWN0bWV0YWRhdGFydC9zZWxlY3RtZXRhZGF0YXJ0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRlbXBsYXRlbWV0YWRhdGFSVENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9tZXRhZGF0YXJ0bGlzdC9tZXRhZGF0YXJ0bGlzdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgVHJlZVZpZXdNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci10cmVldmlldyc7XHJcbmltcG9ydCB7IEdyaWRNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcclxuaW1wb3J0IHsgTWV0YWRhdGFSVFNlcnZpY2UgfSBmcm9tICcuL21ldGFkYXRhcnQuc2VydmljZSc7XHJcbmltcG9ydCB7Tm90aWZ5TW9kdWxlfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcblxyXG4vLyBpbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgVHJlZVZpZXdNb2R1bGUsXHJcbiAgICBHcmlkTW9kdWxlLFxyXG4gICAgTm90aWZ5TW9kdWxlLmZvclJvb3QoKVxyXG4gICAgLy8gRmFycmlzRGlhbG9nTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBTZWxlY3RNZXRhZGF0YVJUQ29tcG9uZW50LFxyXG4gICAgTm90aWZ5TW9kdWxlXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIE1ldGFkYXRhUlRTZXJ2aWNlXHJcbiAgXSwgLy8g5pyN5Yqh5o+Q5L6b6ICFXHJcbiAgZGVjbGFyYXRpb25zOiBbU2VsZWN0TWV0YWRhdGFSVENvbXBvbmVudCwgVGVtcGxhdGVtZXRhZGF0YVJUQ29tcG9uZW50XSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtTZWxlY3RNZXRhZGF0YVJUQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWV0YWRhdGFSVFNlbGVjdE1vZHVsZSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG59XHJcbiJdfQ==