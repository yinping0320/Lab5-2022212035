/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadatart-select/components/selectmetadatart/selectmetadatart.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// tslint:disable-next-line:max-line-length
import { Component, Input, Output, EventEmitter, ComponentFactoryResolver, Injector } from '@angular/core';
import { MetadataRTService } from '../../metadatart.service';
import { Metadata4RefDto, MetadataPackageHeader } from '../../../metadata4refdto';
import { BsModalService } from '@farris/ui-modal';
import { NotifyService } from '@farris/ui-notify';
var SelectMetadataRTComponent = /** @class */ (function () {
    function SelectMetadataRTComponent(metadataService, modalService, resolver, injector) {
        this.metadataService = metadataService;
        this.modalService = modalService;
        this.resolver = resolver;
        this.injector = injector;
        this.selectedMetadata = new EventEmitter();
        this.confirm = '确定';
        this.cancel = '取消';
        this.closeModalEmitter = new EventEmitter();
        this.notifyService = this.injector.get(NotifyService, null);
        if (localStorage.getItem('languageCode') === 'en') {
            this.confirm = 'OK';
            this.cancel = 'Cancel';
        }
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    SelectMetadataRTComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * @return {?}
     */
    SelectMetadataRTComponent.prototype.LoadMetadata = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.metadataService.metadatas == null || this.metadataService.metadatas.length <= 0) {
            if (this.notifyService) {
                this.notifyService.warning("请先选中元数据。");
                return;
            }
            else {
                console.log("请先选中元数据。");
                return;
            }
        }
        /** @type {?} */
        var Id = this.metadataService.metadatas[0].ID;
        this.metadataService.GetMetadataRT(Id).subscribe((/**
         * @param {?} templates
         * @return {?}
         */
        function (templates) {
            /** @type {?} */
            var metadata4Ref = new Metadata4RefDto();
            metadata4Ref.metadata = templates;
            metadata4Ref.packageHeader = new MetadataPackageHeader();
            _this.selectedMetadata.emit(metadata4Ref);
            _this.hideModal();
        }));
        // 清空缓存
        this.metadataService.clearMetadataRT();
    };
    /**
     * @return {?}
     */
    SelectMetadataRTComponent.prototype.hideModal = /**
     * @return {?}
     */
    function () {
        this.closeModalEmitter.emit();
    };
    /**
     * @param {?} classifier
     * @return {?}
     */
    SelectMetadataRTComponent.prototype.onSelectedChange = /**
     * @param {?} classifier
     * @return {?}
     */
    function (classifier) {
        this.classifier = classifier;
    };
    SelectMetadataRTComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'app-select-metadatart',
                    template: "<div class=\"farris-main-area flex-column farris-overflow-hidden\">\r\n    <div class=\"d-flex flex-fill flex-row farris-overflow-hidden\">\r\n        <app-metadatalist class=\"d-flex flex-fill\" style=\"width: 100%;\" [typeList]=\"typeList\" [boId]=\"boId\" [bizTypeId]=\"bizTypeId\"></app-metadatalist>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"LoadMetadata()\">{{confirm}}</button>\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"hideModal()\">{{cancel}}</button>\r\n    </div>\r\n</div>",
                    styles: [".templateBlock{display:flex}.infoBlock{width:100%;min-width:400px}.infoBlock label{width:50px}"]
                }] }
    ];
    /** @nocollapse */
    SelectMetadataRTComponent.ctorParameters = function () { return [
        { type: MetadataRTService },
        { type: BsModalService },
        { type: ComponentFactoryResolver },
        { type: Injector }
    ]; };
    SelectMetadataRTComponent.propDecorators = {
        typeList: [{ type: Input }],
        boId: [{ type: Input }],
        bizTypeId: [{ type: Input }],
        closeModalEmitter: [{ type: Output }],
        selectedMetadata: [{ type: Output }]
    };
    return SelectMetadataRTComponent;
}());
export { SelectMetadataRTComponent };
if (false) {
    /** @type {?} */
    SelectMetadataRTComponent.prototype.typeList;
    /** @type {?} */
    SelectMetadataRTComponent.prototype.boId;
    /** @type {?} */
    SelectMetadataRTComponent.prototype.bizTypeId;
    /** @type {?} */
    SelectMetadataRTComponent.prototype.classifier;
    /** @type {?} */
    SelectMetadataRTComponent.prototype.closeModalEmitter;
    /** @type {?} */
    SelectMetadataRTComponent.prototype.selectedMetadata;
    /** @type {?} */
    SelectMetadataRTComponent.prototype.confirm;
    /** @type {?} */
    SelectMetadataRTComponent.prototype.cancel;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataRTComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataRTComponent.prototype.metadataService;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataRTComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataRTComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    SelectMetadataRTComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0bWV0YWRhdGFydC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWxjbS9tZXRhZGF0YXJ0LXNlbGVjdG9yLyIsInNvdXJjZXMiOlsibWV0YWRhdGEvbWV0YWRhdGFydC1zZWxlY3QvY29tcG9uZW50cy9zZWxlY3RtZXRhZGF0YXJ0L3NlbGVjdG1ldGFkYXRhcnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQWEsS0FBSyxFQUFhLE1BQU0sRUFBRSxZQUFZLEVBQWlCLHdCQUF3QixFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoSixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUdoRDtJQWtCRSxtQ0FBb0IsZUFBa0MsRUFDbEMsWUFBNEIsRUFDNUIsUUFBa0MsRUFBVSxRQUFrQjtRQUY5RCxvQkFBZSxHQUFmLGVBQWUsQ0FBbUI7UUFDbEMsaUJBQVksR0FBWixZQUFZLENBQWdCO1FBQzVCLGFBQVEsR0FBUixRQUFRLENBQTBCO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQVJ4RSxxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzlDLFlBQU8sR0FBQyxJQUFJLENBQUM7UUFDYixXQUFNLEdBQUMsSUFBSSxDQUFDO1FBT2pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ2pELElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzVELElBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsS0FBRyxJQUFJLEVBQUM7WUFDN0MsSUFBSSxDQUFDLE9BQU8sR0FBQyxJQUFJLENBQUM7WUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBQyxRQUFRLENBQUM7U0FDdEI7SUFDSCxDQUFDOzs7OztJQUVELCtDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtJQUVsQyxDQUFDOzs7O0lBRUQsZ0RBQVk7OztJQUFaO1FBQUEsaUJBb0JDO1FBbkJDLElBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLElBQUUsSUFBSSxJQUFJLElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBRSxDQUFDLEVBQUM7WUFDbEYsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO2dCQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDdkMsT0FBTzthQUNSO2lCQUFNO2dCQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ3hCLE9BQU87YUFDUjtTQUNGOztZQUNPLEVBQUUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQy9DLElBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVM7Ozs7UUFBQyxVQUFBLFNBQVM7O2dCQUNsRCxZQUFZLEdBQUcsSUFBSSxlQUFlLEVBQUU7WUFDMUMsWUFBWSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUM7WUFDbEMsWUFBWSxDQUFDLGFBQWEsR0FBRyxJQUFJLHFCQUFxQixFQUFFLENBQUM7WUFDekQsS0FBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUN6QyxLQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDbkIsQ0FBQyxFQUFDLENBQUM7UUFDSCxPQUFPO1FBQ1AsSUFBSSxDQUFDLGVBQWUsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQyxDQUFDOzs7O0lBRUQsNkNBQVM7OztJQUFUO1FBQ0UsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hDLENBQUM7Ozs7O0lBQ0Qsb0RBQWdCOzs7O0lBQWhCLFVBQWlCLFVBQWtCO1FBQ2pDLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7O2dCQTVERixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLGdtQkFBZ0Q7O2lCQUVqRDs7OztnQkFYUSxpQkFBaUI7Z0JBRWpCLGNBQWM7Z0JBSCtELHdCQUF3QjtnQkFBRSxRQUFROzs7MkJBY3JILEtBQUs7dUJBQ0wsS0FBSzs0QkFDTCxLQUFLO29DQUVMLE1BQU07bUNBQ04sTUFBTTs7SUFpRFQsZ0NBQUM7Q0FBQSxBQTdERCxJQTZEQztTQXZEWSx5QkFBeUI7OztJQUNwQyw2Q0FBMEI7O0lBQzFCLHlDQUFzQjs7SUFDdEIsOENBQTJCOztJQUMzQiwrQ0FBbUI7O0lBQ25CLHNEQUErQzs7SUFDL0MscURBQXFEOztJQUNyRCw0Q0FBb0I7O0lBQ3BCLDJDQUFtQjs7Ozs7SUFFbkIsa0RBQW9DOzs7OztJQUV4QixvREFBMEM7Ozs7O0lBQzFDLGlEQUFvQzs7Ozs7SUFDcEMsNkNBQTBDOzs7OztJQUFFLDZDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtbGluZS1sZW5ndGhcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q2hpbGQsIElucHV0LCBPbkNoYW5nZXMsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBTaW1wbGVDaGFuZ2VzLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1ldGFkYXRhUlRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbWV0YWRhdGFydC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTWV0YWRhdGE0UmVmRHRvLCBNZXRhZGF0YVBhY2thZ2VIZWFkZXIgfSBmcm9tICcuLi8uLi8uLi9tZXRhZGF0YTRyZWZkdG8nO1xyXG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwnO1xyXG5pbXBvcnQge05vdGlmeVNlcnZpY2V9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHtUcmFuc2xhdGVTZXJ2aWNlfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcclxuICBzZWxlY3RvcjogJ2FwcC1zZWxlY3QtbWV0YWRhdGFydCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NlbGVjdG1ldGFkYXRhcnQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NlbGVjdG1ldGFkYXRhcnQuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZWxlY3RNZXRhZGF0YVJUQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcclxuICBASW5wdXQoKSB0eXBlTGlzdDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGJvSWQ6IHN0cmluZztcclxuICBASW5wdXQoKSBiaXpUeXBlSWQ6IHN0cmluZztcclxuICBjbGFzc2lmaWVyOiBzdHJpbmc7XHJcbiAgQE91dHB1dCgpIGNsb3NlTW9kYWxFbWl0dGVyOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICBAT3V0cHV0KCkgc2VsZWN0ZWRNZXRhZGF0YSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIHB1YmxpYyBjb25maXJtPSfnoa7lrponO1xyXG4gIHB1YmxpYyBjYW5jZWw9J+WPlua2iCc7XHJcblxyXG4gIHByaXZhdGUgbm90aWZ5U2VydmljZTpOb3RpZnlTZXJ2aWNlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1ldGFkYXRhU2VydmljZTogTWV0YWRhdGFSVFNlcnZpY2UsIFxyXG4gICAgICAgICAgICAgIHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBCc01vZGFsU2VydmljZSxcclxuICAgICAgICAgICAgICBwcml2YXRlIHJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWxFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgICB0aGlzLm5vdGlmeVNlcnZpY2UgPSB0aGlzLmluamVjdG9yLmdldChOb3RpZnlTZXJ2aWNlLCBudWxsKTtcclxuICAgIGlmKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5ndWFnZUNvZGUnKT09PSdlbicpe1xyXG4gICAgICB0aGlzLmNvbmZpcm09J09LJztcclxuICAgICAgdGhpcy5jYW5jZWw9J0NhbmNlbCc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcblxyXG4gIH1cclxuXHJcbiAgTG9hZE1ldGFkYXRhKCkge1xyXG4gICAgaWYodGhpcy5tZXRhZGF0YVNlcnZpY2UubWV0YWRhdGFzPT1udWxsIHx8IHRoaXMubWV0YWRhdGFTZXJ2aWNlLm1ldGFkYXRhcy5sZW5ndGg8PTApe1xyXG4gICAgICBpZiAodGhpcy5ub3RpZnlTZXJ2aWNlKSB7XHJcbiAgICAgICAgdGhpcy5ub3RpZnlTZXJ2aWNlLndhcm5pbmcoXCLor7flhYjpgInkuK3lhYPmlbDmja7jgIJcIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi6K+35YWI6YCJ5Lit5YWD5pWw5o2u44CCXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgICBjb25zdCBJZCA9IHRoaXMubWV0YWRhdGFTZXJ2aWNlLm1ldGFkYXRhc1swXS5JRDtcclxuICAgICAgdGhpcy5tZXRhZGF0YVNlcnZpY2UuR2V0TWV0YWRhdGFSVChJZCkuc3Vic2NyaWJlKHRlbXBsYXRlcyA9PiB7XHJcbiAgICAgICAgY29uc3QgbWV0YWRhdGE0UmVmID0gbmV3IE1ldGFkYXRhNFJlZkR0bygpO1xyXG4gICAgICAgIG1ldGFkYXRhNFJlZi5tZXRhZGF0YSA9IHRlbXBsYXRlcztcclxuICAgICAgICBtZXRhZGF0YTRSZWYucGFja2FnZUhlYWRlciA9IG5ldyBNZXRhZGF0YVBhY2thZ2VIZWFkZXIoKTtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkTWV0YWRhdGEuZW1pdChtZXRhZGF0YTRSZWYpO1xyXG4gICAgICAgIHRoaXMuaGlkZU1vZGFsKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgICAvLyDmuIXnqbrnvJPlrZhcclxuICAgICAgdGhpcy5tZXRhZGF0YVNlcnZpY2UuY2xlYXJNZXRhZGF0YVJUKCk7ICAgXHJcbiAgfVxyXG5cclxuICBoaWRlTW9kYWwoKTogdm9pZCB7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWxFbWl0dGVyLmVtaXQoKTtcclxuICB9XHJcbiAgb25TZWxlY3RlZENoYW5nZShjbGFzc2lmaWVyOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuY2xhc3NpZmllciA9IGNsYXNzaWZpZXI7XHJcbiAgfVxyXG59XHJcbiJdfQ==