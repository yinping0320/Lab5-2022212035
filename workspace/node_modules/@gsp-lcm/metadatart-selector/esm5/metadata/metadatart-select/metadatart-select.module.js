/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadatart-select/metadatart-select.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SelectMetadataRTComponent } from './components/selectmetadatart/selectmetadatart.component';
import { TemplatemetadataRTComponent } from './components/metadatartlist/metadatartlist.component';
import { FormsModule } from '@angular/forms';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { GridModule } from '@progress/kendo-angular-grid';
import { MetadataRTService } from './metadatart.service';
import { NotifyModule } from '@farris/ui-notify';
// import { FarrisDialogModule } from '@farris/ui-dialog';
var MetadataRTSelectModule = /** @class */ (function () {
    function MetadataRTSelectModule() {
    }
    MetadataRTSelectModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        TreeViewModule,
                        GridModule,
                        NotifyModule.forRoot()
                        // FarrisDialogModule
                    ],
                    exports: [
                        SelectMetadataRTComponent,
                        NotifyModule
                    ],
                    providers: [
                        MetadataRTService
                    ],
                    // 服务提供者
                    declarations: [SelectMetadataRTComponent, TemplatemetadataRTComponent],
                    entryComponents: [SelectMetadataRTComponent]
                },] }
    ];
    /** @nocollapse */
    MetadataRTSelectModule.ctorParameters = function () { return []; };
    return MetadataRTSelectModule;
}());
export { MetadataRTSelectModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGFydC1zZWxlY3QubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1sY20vbWV0YWRhdGFydC1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbIm1ldGFkYXRhL21ldGFkYXRhcnQtc2VsZWN0L21ldGFkYXRhcnQtc2VsZWN0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBWSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ3JHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQ25HLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDbEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7QUFJL0M7SUFvQkU7SUFDQSxDQUFDOztnQkFyQkYsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsY0FBYzt3QkFDZCxVQUFVO3dCQUNWLFlBQVksQ0FBQyxPQUFPLEVBQUU7d0JBQ3RCLHFCQUFxQjtxQkFDdEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHlCQUF5Qjt3QkFDekIsWUFBWTtxQkFDYjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsaUJBQWlCO3FCQUNsQjs7b0JBQ0QsWUFBWSxFQUFFLENBQUMseUJBQXlCLEVBQUUsMkJBQTJCLENBQUM7b0JBQ3RFLGVBQWUsRUFBRSxDQUFDLHlCQUF5QixDQUFDO2lCQUM3Qzs7OztJQUlELDZCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FIWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMT0NBTEVfSUQsTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgU2VsZWN0TWV0YWRhdGFSVENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zZWxlY3RtZXRhZGF0YXJ0L3NlbGVjdG1ldGFkYXRhcnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGVtcGxhdGVtZXRhZGF0YVJUQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL21ldGFkYXRhcnRsaXN0L21ldGFkYXRhcnRsaXN0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBUcmVlVmlld01vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLXRyZWV2aWV3JztcclxuaW1wb3J0IHsgR3JpZE1vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YVJUU2VydmljZSB9IGZyb20gJy4vbWV0YWRhdGFydC5zZXJ2aWNlJztcclxuaW1wb3J0IHtOb3RpZnlNb2R1bGV9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuXHJcbi8vIGltcG9ydCB7IEZhcnJpc0RpYWxvZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGlhbG9nJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBUcmVlVmlld01vZHVsZSxcclxuICAgIEdyaWRNb2R1bGUsXHJcbiAgICBOb3RpZnlNb2R1bGUuZm9yUm9vdCgpXHJcbiAgICAvLyBGYXJyaXNEaWFsb2dNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFNlbGVjdE1ldGFkYXRhUlRDb21wb25lbnQsXHJcbiAgICBOb3RpZnlNb2R1bGVcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgTWV0YWRhdGFSVFNlcnZpY2VcclxuICBdLCAvLyDmnI3liqHmj5DkvpvogIVcclxuICBkZWNsYXJhdGlvbnM6IFtTZWxlY3RNZXRhZGF0YVJUQ29tcG9uZW50LCBUZW1wbGF0ZW1ldGFkYXRhUlRDb21wb25lbnRdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW1NlbGVjdE1ldGFkYXRhUlRDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNZXRhZGF0YVJUU2VsZWN0TW9kdWxlIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcbn1cclxuIl19