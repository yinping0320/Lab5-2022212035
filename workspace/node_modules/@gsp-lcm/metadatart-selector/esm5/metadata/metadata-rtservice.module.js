/**
 * @fileoverview added by tsickle
 * Generated from: metadata/metadata-rtservice.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { GSPMetadataRTService } from './metadata.rtservice';
import { HttpClient, HttpClientModule } from '@angular/common/http';
/**
 * @param {?} http
 * @param {?} url
 * @return {?}
 */
export function factory(http, url) {
    return new GSPMetadataRTService(http, url);
}
var GSPMetadataRTServiceModule = /** @class */ (function () {
    function GSPMetadataRTServiceModule() {
    }
    /**
     * @param {?} url
     * @return {?}
     */
    GSPMetadataRTServiceModule.forRoot = /**
     * @param {?} url
     * @return {?}
     */
    function (url) {
        return {
            ngModule: GSPMetadataRTServiceModule,
            providers: [
                { provide: 'url', useValue: url },
                { provide: GSPMetadataRTService, useFactory: factory, deps: [HttpClient, 'url'] }
            ]
        };
    };
    GSPMetadataRTServiceModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        HttpClientModule
                    ],
                    exports: [],
                    providers: []
                },] }
    ];
    return GSPMetadataRTServiceModule;
}());
export { GSPMetadataRTServiceModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YWRhdGEtcnRzZXJ2aWNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtbGNtL21ldGFkYXRhcnQtc2VsZWN0b3IvIiwic291cmNlcyI6WyJtZXRhZGF0YS9tZXRhZGF0YS1ydHNlcnZpY2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBK0MsTUFBTSxlQUFlLENBQUM7QUFDdEYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFVBQVUsRUFBNEIsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7O0FBRTlGLE1BQU0sVUFBVSxPQUFPLENBQUMsSUFBZ0IsRUFBRSxHQUFXO0lBQ25ELE9BQU8sSUFBSSxvQkFBb0IsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVEO0lBQUE7SUFpQkEsQ0FBQzs7Ozs7SUFUUSxrQ0FBTzs7OztJQUFkLFVBQWUsR0FBVztRQUN4QixPQUFPO1lBQ0wsUUFBUSxFQUFFLDBCQUEwQjtZQUNwQyxTQUFTLEVBQUU7Z0JBQ1QsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUM7Z0JBQy9CLEVBQUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxFQUFDO2FBQ2hGO1NBQ0YsQ0FBQztJQUNKLENBQUM7O2dCQWhCRixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLGdCQUFnQjtxQkFDakI7b0JBQ0QsT0FBTyxFQUFFLEVBQUU7b0JBQ1gsU0FBUyxFQUFFLEVBQUU7aUJBQ2Q7O0lBV0QsaUNBQUM7Q0FBQSxBQWpCRCxJQWlCQztTQVZZLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBJbmplY3Rpb25Ub2tlbiwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEdTUE1ldGFkYXRhUlRTZXJ2aWNlIH0gZnJvbSAnLi9tZXRhZGF0YS5ydHNlcnZpY2UnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwSGFuZGxlciwgSHR0cEhlYWRlcnMsIEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZmFjdG9yeShodHRwOiBIdHRwQ2xpZW50LCB1cmw6IHN0cmluZykge1xyXG4gIHJldHVybiBuZXcgR1NQTWV0YWRhdGFSVFNlcnZpY2UoaHR0cCwgdXJsKTtcclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXSxcclxuICBwcm92aWRlcnM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBHU1BNZXRhZGF0YVJUU2VydmljZU1vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QodXJsOiBzdHJpbmcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBHU1BNZXRhZGF0YVJUU2VydmljZU1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAge3Byb3ZpZGU6ICd1cmwnLCB1c2VWYWx1ZTogdXJsfSxcclxuICAgICAgICB7cHJvdmlkZTogR1NQTWV0YWRhdGFSVFNlcnZpY2UsIHVzZUZhY3Rvcnk6IGZhY3RvcnksIGRlcHM6IFtIdHRwQ2xpZW50LCAndXJsJ119XHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==