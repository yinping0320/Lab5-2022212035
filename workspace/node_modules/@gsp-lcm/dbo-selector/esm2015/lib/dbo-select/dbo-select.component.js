/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';
import { DboHelpDevService } from '../dbo-help-dev.service';
export class DboSelectComponent {
    /**
     * @param {?} dboHelpService
     */
    constructor(dboHelpService) {
        this.dboHelpService = dboHelpService;
        this.url = '';
        /**
         * 帮助标题
         */
        this.title = '帮助';
        /**
         * 输出事件
         */
        this.selectedAfterOk = new EventEmitter();
        this.modalClosed = new EventEmitter();
        // 模式
        this.selectableSettings = {
            checkboxOnly: true,
            mode: 'single',
            enabled: true
        };
    }
    /**
     * 输入属性变化后
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // 服务端获取数据
        this.dboHelpService.getAllDatabaseObject(this.url)
            .subscribe((/**
         * @param {?} result
         * @return {?}
         */
        result => {
            this.data = result;
            this.curSelectedKeys = [];
            if (this.initSelectedKeys) {
                this.initSelectedKeys.map((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => this.curSelectedKeys.push(item)));
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            console.log('获取数据源失败！');
            console.log(error);
        }));
    }
    /**
     * 帮助确定按钮
     * @return {?}
     */
    btnOk() {
        // 根据选中行获取实体数据
        /** @type {?} */
        const selectPosEntity = [];
        this.curSelectedKeys.forEach((/**
         * @param {?} dboID
         * @return {?}
         */
        dboID => {
            /** @type {?} */
            const selectDBO = this.data.find((/**
             * @param {?} item
             * @return {?}
             */
            item => item['id'] === dboID));
            selectPosEntity.push(selectDBO);
        }));
        if (!selectPosEntity) {
            alert('请选择数据库对象');
            return;
        }
        else {
            // 发射当前选中数据
            this.selectedAfterOk.next(selectPosEntity);
        }
        this.hideModal();
    }
    /**
     * @return {?}
     */
    hideModal() {
        this.modalClosed.emit();
    }
}
DboSelectComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-dbo-select',
                template: "<div class=\"modal-body\">\r\n<div class=\"templateBlock\">\r\n  <kendo-grid [class]=\"'flex-auto'\" [selectable]=\"selectableSettings\" [kendoGridSelectBy]=\"'id'\" [selectedKeys]=\"curSelectedKeys\"\r\n    [kendoGridBinding]=\"data\">\r\n    <kendo-grid-checkbox-column width=\"10%\"></kendo-grid-checkbox-column>\r\n    <kendo-grid-column field=\"code\" title=\"\u7F16\u53F7\" width=\"40%\"></kendo-grid-column>\r\n    <kendo-grid-column field=\"name\" title=\"\u540D\u79F0\" width=\"45%\"></kendo-grid-column>\r\n  </kendo-grid>\r\n  </div>\r\n</div>\r\n<ng-template #btns>\r\n<button type=\"button\" class=\"btn btn-default btn-primary\" (click)=\"btnOk()\">\u786E\u5B9A</button>\r\n<button type=\"button\" class=\"btn btn-default\" (click)=\"hideModal()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
DboSelectComponent.ctorParameters = () => [
    { type: DboHelpDevService }
];
DboSelectComponent.propDecorators = {
    url: [{ type: Input }],
    title: [{ type: Input }],
    isShow: [{ type: Input }],
    initSelectedKeys: [{ type: Input }],
    selectedAfterOk: [{ type: Output }],
    modalClosed: [{ type: Output }],
    modalFooter: [{ type: ViewChild, args: ['modalFooter',] }],
    btns: [{ type: ViewChild, args: ['btns',] }]
};
if (false) {
    /** @type {?} */
    DboSelectComponent.prototype.url;
    /**
     * 帮助标题
     * @type {?}
     */
    DboSelectComponent.prototype.title;
    /**
     * 帮助打开状态
     * @type {?}
     */
    DboSelectComponent.prototype.isShow;
    /**
     * 选中列表
     * @type {?}
     */
    DboSelectComponent.prototype.initSelectedKeys;
    /**
     * 输出事件
     * @type {?}
     */
    DboSelectComponent.prototype.selectedAfterOk;
    /** @type {?} */
    DboSelectComponent.prototype.modalClosed;
    /** @type {?} */
    DboSelectComponent.prototype.modalFooter;
    /** @type {?} */
    DboSelectComponent.prototype.btns;
    /**
     * 当前界面选中的内码
     * @type {?}
     */
    DboSelectComponent.prototype.curSelectedKeys;
    /** @type {?} */
    DboSelectComponent.prototype.selectableSettings;
    /** @type {?} */
    DboSelectComponent.prototype.data;
    /**
     * @type {?}
     * @private
     */
    DboSelectComponent.prototype.dboHelpService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGJvLXNlbGVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWxjbS9kYm8tc2VsZWN0b3IvIiwic291cmNlcyI6WyJsaWIvZGJvLXNlbGVjdC9kYm8tc2VsZWN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBNEIsU0FBUyxFQUFFLFdBQVcsRUFBRyxNQUFNLGVBQWUsQ0FBQztBQUVsSSxPQUFPLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQU8zRCxNQUFNLE9BQU8sa0JBQWtCOzs7O0lBeUI3QixZQUNVLGNBQWlDO1FBQWpDLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtRQXhCM0MsUUFBRyxHQUFHLEVBQUUsQ0FBQzs7OztRQUdULFVBQUssR0FBRyxJQUFJLENBQUM7Ozs7UUFTSCxvQkFBZSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzdELGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQWE5QyxLQUFLO1FBQ0wsSUFBSSxDQUFDLGtCQUFrQixHQUFHO1lBQ3hCLFlBQVksRUFBRSxJQUFJO1lBQ2xCLElBQUksRUFBRSxRQUFRO1lBQ2QsT0FBTyxFQUFFLElBQUk7U0FDZCxDQUFDO0lBQ0osQ0FBQzs7Ozs7O0lBR0QsV0FBVyxDQUFDLE9BQXNCO0lBQ2xDLENBQUM7Ozs7SUFDRCxRQUFRO1FBQ04sVUFBVTtRQUNWLElBQUksQ0FBQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQzthQUMvQyxTQUFTOzs7O1FBQUMsTUFBTSxDQUFDLEVBQUU7WUFDbEIsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7WUFDbkIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7WUFDMUIsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7Z0JBQ3pCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHOzs7O2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUMsQ0FBQzthQUNwRTtRQUNILENBQUM7Ozs7UUFBRSxLQUFLLENBQUMsRUFBRTtZQUNULE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQixDQUFDLEVBQUMsQ0FBQztJQUNQLENBQUM7Ozs7O0lBRUQsS0FBSzs7O2NBRUcsZUFBZSxHQUFHLEVBQUU7UUFDMUIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPOzs7O1FBQUMsS0FBSyxDQUFDLEVBQUU7O2tCQUM3QixTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJOzs7O1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxFQUFDO1lBQzlELGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDbEMsQ0FBQyxFQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3BCLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNsQixPQUFPO1NBQ1I7YUFBTTtZQUNMLFdBQVc7WUFDWCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztTQUM1QztRQUNELElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7O0lBQ0QsU0FBUztRQUNQLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7O1lBOUVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixpekJBQTBDOzthQUUzQzs7OztZQU5RLGlCQUFpQjs7O2tCQVF2QixLQUFLO29CQUdMLEtBQUs7cUJBR0wsS0FBSzsrQkFHTCxLQUFLOzhCQUlMLE1BQU07MEJBQ04sTUFBTTswQkFFTixTQUFTLFNBQUMsYUFBYTttQkFDdkIsU0FBUyxTQUFDLE1BQU07Ozs7SUFqQmpCLGlDQUNTOzs7OztJQUVULG1DQUNhOzs7OztJQUViLG9DQUNnQjs7Ozs7SUFFaEIsOENBQzJCOzs7OztJQUczQiw2Q0FBdUU7O0lBQ3ZFLHlDQUFnRDs7SUFFaEQseUNBQXdEOztJQUN4RCxrQ0FBMEM7Ozs7O0lBRzFDLDZDQUEwQjs7SUFDMUIsZ0RBQXVDOztJQUN2QyxrQ0FBZTs7Ozs7SUFHYiw0Q0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYgIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNlbGVjdGFibGVTZXR0aW5ncyB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5pbXBvcnQgeyBEYm9IZWxwRGV2U2VydmljZX0gZnJvbSAnLi4vZGJvLWhlbHAtZGV2LnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcHAtZGJvLXNlbGVjdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2Riby1zZWxlY3QuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2Riby1zZWxlY3QuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYm9TZWxlY3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgQElucHV0KClcclxuICB1cmwgPSAnJztcclxuICAvKirluK7liqnmoIfpopggKi9cclxuICBASW5wdXQoKVxyXG4gIHRpdGxlID0gJ+W4ruWKqSc7XHJcbiAgLyoq5biu5Yqp5omT5byA54q25oCBICovXHJcbiAgQElucHV0KClcclxuICBpc1Nob3c6IGJvb2xlYW47XHJcbiAgLyoq6YCJ5Lit5YiX6KGoICovXHJcbiAgQElucHV0KClcclxuICBpbml0U2VsZWN0ZWRLZXlzOiBzdHJpbmdbXTtcclxuXHJcbiAgLyoq6L6T5Ye65LqL5Lu2ICovXHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkQWZ0ZXJPazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICBAT3V0cHV0KCkgbW9kYWxDbG9zZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgQFZpZXdDaGlsZCgnbW9kYWxGb290ZXInKSBtb2RhbEZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuICBAVmlld0NoaWxkKCdidG5zJykgYnRuczogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgLyoq5b2T5YmN55WM6Z2i6YCJ5Lit55qE5YaF56CBICovXHJcbiAgY3VyU2VsZWN0ZWRLZXlzOiBzdHJpbmdbXTtcclxuICBzZWxlY3RhYmxlU2V0dGluZ3M6IFNlbGVjdGFibGVTZXR0aW5ncztcclxuICBkYXRhOiBPYmplY3RbXTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGRib0hlbHBTZXJ2aWNlOiBEYm9IZWxwRGV2U2VydmljZSxcclxuICApIHtcclxuICAgIC8vIOaooeW8j1xyXG4gICAgdGhpcy5zZWxlY3RhYmxlU2V0dGluZ3MgPSB7XHJcbiAgICAgIGNoZWNrYm94T25seTogdHJ1ZSxcclxuICAgICAgbW9kZTogJ3NpbmdsZScsXHJcbiAgICAgIGVuYWJsZWQ6IHRydWVcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKirovpPlhaXlsZ7mgKflj5jljJblkI4gKi9cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgfVxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgLy8g5pyN5Yqh56uv6I635Y+W5pWw5o2uXHJcbiAgICB0aGlzLmRib0hlbHBTZXJ2aWNlLmdldEFsbERhdGFiYXNlT2JqZWN0KHRoaXMudXJsKVxyXG4gICAgICAuc3Vic2NyaWJlKHJlc3VsdCA9PiB7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gcmVzdWx0O1xyXG4gICAgICAgIHRoaXMuY3VyU2VsZWN0ZWRLZXlzID0gW107XHJcbiAgICAgICAgaWYgKHRoaXMuaW5pdFNlbGVjdGVkS2V5cykge1xyXG4gICAgICAgICAgdGhpcy5pbml0U2VsZWN0ZWRLZXlzLm1hcChpdGVtID0+IHRoaXMuY3VyU2VsZWN0ZWRLZXlzLnB1c2goaXRlbSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSwgZXJyb3IgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfojrflj5bmlbDmja7mupDlpLHotKXvvIEnKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuICAvKirluK7liqnnoa7lrprmjInpkq4gKi9cclxuICBidG5PaygpIHtcclxuICAgIC8vIOagueaNrumAieS4reihjOiOt+WPluWunuS9k+aVsOaNrlxyXG4gICAgY29uc3Qgc2VsZWN0UG9zRW50aXR5ID0gW107XHJcbiAgICB0aGlzLmN1clNlbGVjdGVkS2V5cy5mb3JFYWNoKGRib0lEID0+IHtcclxuICAgICAgY29uc3Qgc2VsZWN0REJPID0gdGhpcy5kYXRhLmZpbmQoaXRlbSA9PiBpdGVtWydpZCddID09PSBkYm9JRCk7XHJcbiAgICAgIHNlbGVjdFBvc0VudGl0eS5wdXNoKHNlbGVjdERCTyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoIXNlbGVjdFBvc0VudGl0eSkge1xyXG4gICAgICBhbGVydCgn6K+36YCJ5oup5pWw5o2u5bqT5a+56LGhJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIOWPkeWwhOW9k+WJjemAieS4reaVsOaNrlxyXG4gICAgICB0aGlzLnNlbGVjdGVkQWZ0ZXJPay5uZXh0KHNlbGVjdFBvc0VudGl0eSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmhpZGVNb2RhbCgpO1xyXG4gIH1cclxuICBoaWRlTW9kYWwoKTogdm9pZCB7XHJcbiAgICB0aGlzLm1vZGFsQ2xvc2VkLmVtaXQoKTtcclxuICB9XHJcbn1cclxuIl19