import Node from './node';

export var PatternNode = (function (Node) {
    function PatternNode(pattern) {
        Node.call(this, pattern);

        this.id = pattern.id;
        this.load(pattern.children);
    }

    if ( Node ) PatternNode.__proto__ = Node;
    PatternNode.prototype = Object.create( Node && Node.prototype );
    PatternNode.prototype.constructor = PatternNode;

    PatternNode.prototype.template = function template () {
        var width = this.srcElement.size().getWidth();
        var height = this.srcElement.size().getHeight();

        return "<pattern id='" + (this.srcElement.id) + "' width='" + width + "' height='" + height + "' patternUnits='userSpaceOnUse'>" +
                    "" + (this.renderChildren()) +
                "</pattern>";
    };

    return PatternNode;
}(Node));
