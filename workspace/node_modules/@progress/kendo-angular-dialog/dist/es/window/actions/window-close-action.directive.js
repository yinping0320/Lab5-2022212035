import * as tslib_1 from "tslib";
import { Directive, HostListener, ElementRef, Renderer2, Optional, Input } from "@angular/core";
import { Button } from '@progress/kendo-angular-buttons';
import { DragResizeService } from '../drag-resize.service';
import { L10N_PREFIX, LocalizationService } from '@progress/kendo-angular-l10n';
var WindowCloseActionDirective = /** @class */ (function (_super) {
    tslib_1.__extends(WindowCloseActionDirective, _super);
    function WindowCloseActionDirective(el, renderer, _service, localization) {
        var _this = _super.call(this, el, renderer, null, localization) || this;
        _this.window = _service;
        _this.look = 'bare';
        _this.icon = 'close';
        return _this;
    }
    WindowCloseActionDirective.prototype.onClick = function () {
        if (!this.isDisabled) {
            this.window.closeAction();
        }
    };
    WindowCloseActionDirective.decorators = [
        { type: Directive, args: [{
                    exportAs: 'kendoWindowCloseAction',
                    providers: [
                        LocalizationService,
                        {
                            provide: L10N_PREFIX,
                            useValue: 'kendo.button'
                        }
                    ],
                    selector: 'button[kendoWindowCloseAction]' // tslint:disable-line
                },] },
    ];
    /** @nocollapse */
    WindowCloseActionDirective.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
        { type: DragResizeService, decorators: [{ type: Optional },] },
        { type: LocalizationService, },
    ]; };
    WindowCloseActionDirective.propDecorators = {
        'window': [{ type: Input },],
        'onClick': [{ type: HostListener, args: ['click',] },],
    };
    return WindowCloseActionDirective;
}(Button));
export { WindowCloseActionDirective };
