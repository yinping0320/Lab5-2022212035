import { EventEmitter, ElementRef, Directive, NgZone } from '@angular/core';
import Draggable from '@telerik/kendo-draggable';
/**
 * @hidden
 */
export class DraggableDirective {
    constructor(elem, ngZone) {
        this.elem = elem;
        this.ngZone = ngZone;
        this.kendo = {
            drag: new EventEmitter(),
            press: new EventEmitter(),
            release: new EventEmitter()
        };
    }
    ngOnInit() {
        if (typeof document !== 'undefined') {
            this.draggable = new Draggable({
                drag: (e) => this.kendo.drag.next(e),
                press: (e) => this.kendo.press.next(e),
                release: (e) => this.kendo.release.next(e)
            });
            this.ngZone.runOutsideAngular(() => this.draggable.bindTo(this.elem.nativeElement));
        }
    }
    ngOnDestroy() {
        if (typeof document !== 'undefined') {
            this.draggable.destroy();
        }
    }
    get nativeElement() {
        return this.elem.nativeElement;
    }
}
DraggableDirective.decorators = [
    { type: Directive, args: [{
                outputs: ['kendo.press', 'kendo.drag', 'kendo.release'],
                selector: '[kendoWindowDraggable]'
            },] },
];
/** @nocollapse */
DraggableDirective.ctorParameters = () => [
    { type: ElementRef, },
    { type: NgZone, },
];
