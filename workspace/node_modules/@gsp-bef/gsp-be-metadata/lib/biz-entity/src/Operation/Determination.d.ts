import { BizOperation } from './BizOperation';
import { BEOperationType } from '../Enum/BEOperationType';
import { BEDeterminationType } from '../Enum/BEDeterminationType';
import { BETriggerTimePointType } from '../Enum/BETriggerTimePointType';
import { RequestNodeTriggerType } from '../Enum/RequestNodeTriggerType';
import { RequestChildElement } from './RequestElement/RequestChildElement';
/**
* 联动规则元数据定义
* @author wangjiegj<wangjiegj@inspur.com>
 */
/**
* 联动规则元数据定义
*
*/
export declare class Determination extends BizOperation {
    constructor();
    /**
     * 操作类型
     */
    readonly OpType: BEOperationType;
    /**
     * Determination类型
     */
    DeterminationType: BEDeterminationType;
    /**
     * 触发时机的类型
     */
    TriggerTimePointType: BETriggerTimePointType;
    /**
     * Node状态触发时机的类型
     */
    RequestNodeTriggerType: RequestNodeTriggerType;
    /**
     * 触发时变更集中需要包含的字段LabelID集合
     * 20180427_使用字段ID
     */
    RequestElements: string[];
    /**
     * 触发时变更集中需要包含的直接子节点字段ID集合（不递归）
     */
    RequestChildElements: RequestChildElement[];
    /**
     * 获取当前计算规则的前置计算规则
     * 根据元数据设计器上配置的计算顺序生成的当前计算规则的前置规则
     */
    PreDtmId: Map<BETriggerTimePointType, string>;
}
