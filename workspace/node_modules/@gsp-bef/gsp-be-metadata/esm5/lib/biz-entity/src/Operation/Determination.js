/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BizOperation } from './BizOperation';
import { BEOperationType } from '../Enum/BEOperationType';
/**
* 联动规则元数据定义
* @author wangjiegj<wangjiegj@inspur.com>
 */
/**
 * 联动规则元数据定义
 *
 */
var /**
* 联动规则元数据定义
* @author wangjiegj<wangjiegj@inspur.com>
 */
/**
 * 联动规则元数据定义
 *
 */
Determination = /** @class */ (function (_super) {
    tslib_1.__extends(Determination, _super);
    function Determination() {
        return _super.call(this) || this;
    }
    Object.defineProperty(Determination.prototype, "OpType", {
        /**
         * 操作类型
         */
        get: /**
         * 操作类型
         * @return {?}
         */
        function () {
            return BEOperationType.Determination;
        },
        enumerable: true,
        configurable: true
    });
    return Determination;
}(BizOperation));
/**
* 联动规则元数据定义
* @author wangjiegj<wangjiegj@inspur.com>
 */
/**
 * 联动规则元数据定义
 *
 */
export { Determination };
if (false) {
    /**
     * Determination类型
     * @type {?}
     */
    Determination.prototype.DeterminationType;
    /**
     * 触发时机的类型
     * @type {?}
     */
    Determination.prototype.TriggerTimePointType;
    /**
     * Node状态触发时机的类型
     * @type {?}
     */
    Determination.prototype.RequestNodeTriggerType;
    /**
     * 触发时变更集中需要包含的字段LabelID集合
     * 20180427_使用字段ID
     * @type {?}
     */
    Determination.prototype.RequestElements;
    /**
     * 触发时变更集中需要包含的直接子节点字段ID集合（不递归）
     * @type {?}
     */
    Determination.prototype.RequestChildElements;
    /**
     * 获取当前计算规则的前置计算规则
     * 根据元数据设计器上配置的计算顺序生成的当前计算规则的前置规则
     * @type {?}
     */
    Determination.prototype.PreDtmId;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV0ZXJtaW5hdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtYmVmL2dzcC1iZS1tZXRhZGF0YS8iLCJzb3VyY2VzIjpbImxpYi9iaXotZW50aXR5L3NyYy9PcGVyYXRpb24vRGV0ZXJtaW5hdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7Ozs7OztBQWtCMUQ7Ozs7Ozs7OztJQUFtQyx5Q0FBWTtJQUMzQztlQUNJLGlCQUFPO0lBQ1gsQ0FBQztJQUtELHNCQUFJLGlDQUFNO1FBSFY7O1dBRUc7Ozs7O1FBQ0g7WUFDSSxPQUFPLGVBQWUsQ0FBQyxhQUFhLENBQUM7UUFDekMsQ0FBQzs7O09BQUE7SUFxREwsb0JBQUM7QUFBRCxDQUFDLEFBL0RELENBQW1DLFlBQVksR0ErRDlDOzs7Ozs7Ozs7Ozs7Ozs7SUFoREcsMENBQThDOzs7OztJQUs5Qyw2Q0FBb0Q7Ozs7O0lBS3BELCtDQUFzRDs7Ozs7O0lBTXRELHdDQUFpQzs7Ozs7SUFLakMsNkNBQW1EOzs7Ozs7SUFNbkQsaUNBQXFEIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IEJpek9wZXJhdGlvbiB9IGZyb20gJy4vQml6T3BlcmF0aW9uJztcclxuaW1wb3J0IHsgQkVPcGVyYXRpb25UeXBlIH0gZnJvbSAnLi4vRW51bS9CRU9wZXJhdGlvblR5cGUnO1xyXG5pbXBvcnQgeyBBdXRoVHlwZSB9IGZyb20gJy4uL0VudW0vQXV0aFR5cGUnO1xyXG5pbXBvcnQgeyBCRURldGVybWluYXRpb25UeXBlIH0gZnJvbSAnLi4vRW51bS9CRURldGVybWluYXRpb25UeXBlJztcclxuaW1wb3J0IHsgQkVUcmlnZ2VyVGltZVBvaW50VHlwZSB9IGZyb20gJy4uL0VudW0vQkVUcmlnZ2VyVGltZVBvaW50VHlwZSc7XHJcbmltcG9ydCB7IFJlcXVlc3ROb2RlVHJpZ2dlclR5cGUgfSBmcm9tICcuLi9FbnVtL1JlcXVlc3ROb2RlVHJpZ2dlclR5cGUnO1xyXG5pbXBvcnQgeyBSZXF1ZXN0Q2hpbGRFbGVtZW50IH0gZnJvbSAnLi9SZXF1ZXN0RWxlbWVudC9SZXF1ZXN0Q2hpbGRFbGVtZW50JztcclxuXHJcblxyXG4vKipcclxuKiDogZTliqjop4TliJnlhYPmlbDmja7lrprkuYlcclxuKiBAYXV0aG9yIHdhbmdqaWVnajx3YW5namllZ2pAaW5zcHVyLmNvbT5cclxuICovXHJcblxyXG5cclxuLyoqXHJcbiog6IGU5Yqo6KeE5YiZ5YWD5pWw5o2u5a6a5LmJXHJcbipcclxuKi9cclxuZXhwb3J0IGNsYXNzIERldGVybWluYXRpb24gZXh0ZW5kcyBCaXpPcGVyYXRpb24ge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaTjeS9nOexu+Wei1xyXG4gICAgICovXHJcbiAgICBnZXQgT3BUeXBlKCkge1xyXG4gICAgICAgIHJldHVybiBCRU9wZXJhdGlvblR5cGUuRGV0ZXJtaW5hdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERldGVybWluYXRpb27nsbvlnotcclxuICAgICAqL1xyXG4gICAgcHVibGljIERldGVybWluYXRpb25UeXBlOiBCRURldGVybWluYXRpb25UeXBlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog6Kem5Y+R5pe25py655qE57G75Z6LXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBUcmlnZ2VyVGltZVBvaW50VHlwZTogQkVUcmlnZ2VyVGltZVBvaW50VHlwZTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIE5vZGXnirbmgIHop6blj5Hml7bmnLrnmoTnsbvlnotcclxuICAgICAqL1xyXG4gICAgcHVibGljIFJlcXVlc3ROb2RlVHJpZ2dlclR5cGU6IFJlcXVlc3ROb2RlVHJpZ2dlclR5cGU7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDop6blj5Hml7blj5jmm7Tpm4bkuK3pnIDopoHljIXlkKvnmoTlrZfmrrVMYWJlbElE6ZuG5ZCIXHJcbiAgICAgKiAyMDE4MDQyN1/kvb/nlKjlrZfmrrVJRFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgUmVxdWVzdEVsZW1lbnRzOiBzdHJpbmdbXTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOinpuWPkeaXtuWPmOabtOmbhuS4remcgOimgeWMheWQq+eahOebtOaOpeWtkOiKgueCueWtl+autUlE6ZuG5ZCI77yI5LiN6YCS5b2S77yJXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBSZXF1ZXN0Q2hpbGRFbGVtZW50czogUmVxdWVzdENoaWxkRWxlbWVudFtdO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5b2T5YmN6K6h566X6KeE5YiZ55qE5YmN572u6K6h566X6KeE5YiZXHJcbiAgICAgKiDmoLnmja7lhYPmlbDmja7orr7orqHlmajkuIrphY3nva7nmoTorqHnrpfpobrluo/nlJ/miJDnmoTlvZPliY3orqHnrpfop4TliJnnmoTliY3nva7op4TliJlcclxuICAgICAqL1xyXG4gICAgcHVibGljIFByZUR0bUlkOiBNYXA8QkVUcmlnZ2VyVGltZVBvaW50VHlwZSwgc3RyaW5nPjtcclxuXHJcbiAgICAvLyAvKipcclxuICAgIC8vICAqIOinpuWPkeWtl+auteS4reaYr+WQpuWMheWQq+afkOWtl+autVxyXG4gICAgLy8gICovXHJcbiAgICAvLyBzdGF0aWMgY291bnRhaW5SZXF1ZXN0RWxlbWVudChkdG06IERldGVybWluYXRpb24sIGlkOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgIC8vICAgICBpZiAodGhpcy5jb3VudGFpbkVsZShpZCwgZHRtLlJlcXVlc3RFbGVtZW50cykpIHtcclxuICAgIC8vICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIGlmICghIShkdG0uUmVxdWVzdENoaWxkRWxlbWVudHMpICYmIGR0bS5SZXF1ZXN0Q2hpbGRFbGVtZW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAvLyAgICAgICAgIHJldHVybiB0aGlzLmNvdW50YWluRWxlKGlkLCBkdG0uUmVxdWVzdENoaWxkRWxlbWVudHNbMF0uUmVxdWVzdENoaWxkRWxlbWVudFZhbHVlKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIHByaXZhdGUgc3RhdGljIGNvdW50YWluRWxlKGlkOiBzdHJpbmcsIHJlcXVlc3RFbGVzOiBzdHJpbmdbXSk6IGJvb2xlYW4ge1xyXG4gICAgLy8gICAgIGlmICghIShpZCkgJiYgISEocmVxdWVzdEVsZXMpICYmIHJlcXVlc3RFbGVzLmxlbmd0aCA+IDApIHtcclxuICAgIC8vICAgICAgICAgcmV0dXJuIHJlcXVlc3RFbGVzLmluY2x1ZGVzKGlkKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgLy8gfVxyXG59XHJcbiJdfQ==