import { IGSPCommonElement } from './IGSPCommonElement';
import { GSPCommonObjectType } from '../Object/GSPCommonObjectType';
import { GSPColumnGenerate } from '../Object/GSPColumnGenerate';
import { GSPUniqueConstraint } from '../Object/GSPUniqueConstraint';
import { GSPHirarchyInfo } from '../Object/GSPHirarchyInfo';
import { GSPAssociationKey, MdRefInfo } from '../../../common-data-type';
/**
 * 节点元数据
 * @author wangjiegj<wangjiegj@inspur.com>
 */
/**
 * 节点元数据
 */
export interface IGSPCommonObject {
    /**
     * 持久化构件
     */
    RepositoryComps: MdRefInfo[];
    /**
     * 唯一标志
     */
    ID: string;
    /**
     * 编号
     */
    Code: string;
    /**
     * 名称
     */
    Name: string;
    /**
     * 节点类型
     */
    ObjectType: GSPCommonObjectType;
    /**
     * 引用的数据对象标识
     */
    RefObjectName: string;
    /**
     * 是否逻辑删除
     */
    LogicDelete: boolean;
    /**
     * 列生成规则
     */
    ColumnGenerateID: GSPColumnGenerate;
    /**
     * 当前节点主键字段
     */
    IDElement: IGSPCommonElement;
    /**
     * 当前节点字段集合
     */
    ContainElements: IGSPCommonElement[];
    /**
     * 当前节点的子节点集合
     */
    ContainChildObjects: IGSPCommonObject[];
    /**
     * 唯一约束集合
     */
    ContainConstraints: GSPUniqueConstraint[];
    /**
     * 父节点
     */
    /**
     * 所属模型
     */
    /**
     * 所属模型Id
     */
    BelongModelID: string;
    /**
     * 排序表达式
     */
    OrderbyCondition: string;
    /**
     * 过滤条件表达式
     */
    FilterCondition: string;
    /**
     * 最后更新时间字段Id
     */
    ParentAssociation: boolean;
    /**
     * 创建人字段Id
     */
    CreatorElementID: string;
    /**
     * 最后修改人字段Id
     */
    ModifierElementID: boolean;
    /**
     * 是否记录已删除数据
     */
    RecordDelData: boolean;
    /**
     * 是否只读
     */
    IsReadOnly: boolean;
    /**
     * 是否非持久化
     */
    IsVirtual: boolean;
    /**
     * 分级信息
     */
    HirarchyInfo: GSPHirarchyInfo;
    /**
     * 关联关系外键列表
     */
    Keys: GSPAssociationKey[];
    /**
     * 是否引用
     */
    IsRef: boolean;
    /**
     * 状态字段
     */
    StateElementID: string;
}
