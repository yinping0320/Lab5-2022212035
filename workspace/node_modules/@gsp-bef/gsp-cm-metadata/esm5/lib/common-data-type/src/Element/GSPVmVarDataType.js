/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 变量字段数据类型
 * @author wangjiegj<wangjiegj@inspur.com>
 */
/** @enum {string} */
var GSPVmVarDataType = {
    /**
     * 文本
     */
    String: 'String',
    /**
     * 备注
     */
    Text: 'Text',
    /**
     * 整数
     */
    Integer: 'Integer',
    /**
     * 浮点数
     */
    Decimal: 'Decimal',
    /**
     * 布尔型
     */
    Boolean: 'Boolean',
    /**
     * 日期型
     */
    Date: 'Date',
    /**
     * 日期时间型
     */
    DateTime: 'DateTime',
    /**
     * 二进制
     */
    Binary: 'Binary',
};
export { GSPVmVarDataType };
/** @type {?} */
export var GSPVmVarDataTypes = [
    {
        index: 0, text: '文本', value: GSPVmVarDataType.String, canChangeLength: true,
        canChangePresicion: false, length: 36, precision: 0
    },
    {
        index: 1, text: '备注', value: GSPVmVarDataType.Text, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 2, text: '整数', value: GSPVmVarDataType.Integer, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 3, text: '浮点数字', value: GSPVmVarDataType.Decimal, canChangeLength: true,
        canChangePresicion: true, length: 18, precision: 2
    },
    {
        index: 4, text: '布尔型', value: GSPVmVarDataType.Boolean, canChangeLength: false,
        canChangePresicion: false, length: 1, precision: 0
    },
    {
        index: 5, text: '日期', value: GSPVmVarDataType.Date, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 6, text: '日期时间', value: GSPVmVarDataType.DateTime, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 7, text: '二进制', value: GSPVmVarDataType.Binary, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    }
    // , {
    //     index: 8, text: '业务字段', value: 'UnifiedDataType', canChangeLength: false,
    //     canChangePresicion: false, length: 36, precision: 0
    // }
];
var GetVariableDataTypesUtil = /** @class */ (function () {
    function GetVariableDataTypesUtil() {
    }
    /**
     * @return {?}
     */
    GetVariableDataTypesUtil.GSPElementDataTypesWithouUdt = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var types = new Array();
        Object.assign(types, GSPVmVarDataTypes);
        types = types.slice(0, 8);
        return types;
    };
    return GetVariableDataTypesUtil;
}());
export { GetVariableDataTypesUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR1NQVm1WYXJEYXRhVHlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtYmVmL2dzcC1jbS1tZXRhZGF0YS8iLCJzb3VyY2VzIjpbImxpYi9jb21tb24tZGF0YS10eXBlL3NyYy9FbGVtZW50L0dTUFZtVmFyRGF0YVR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQVNJOztPQUVHO0lBQ0gsUUFBUyxRQUFRO0lBRWpCOztPQUVHO0lBQ0gsTUFBTyxNQUFNO0lBRWI7O09BRUc7SUFDSCxTQUFVLFNBQVM7SUFFbkI7O09BRUc7SUFDSCxTQUFVLFNBQVM7SUFFbkI7O09BRUc7SUFDSCxTQUFVLFNBQVM7SUFFbkI7O09BRUc7SUFDSCxNQUFPLE1BQU07SUFFYjs7T0FFRztJQUNILFVBQVcsVUFBVTtJQUVyQjs7T0FFRztJQUNILFFBQVMsUUFBUTs7QUFHckIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLENBQUM7O0FBRzVCLE1BQU0sS0FBTyxpQkFBaUIsR0FJckI7SUFDRDtRQUNJLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLGVBQWUsRUFBRSxJQUFJO1FBQzNFLGtCQUFrQixFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDO0tBQ3REO0lBQ0Q7UUFDSSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsS0FBSztRQUMxRSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQztLQUNyRDtJQUNEO1FBQ0ksS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsZUFBZSxFQUFFLEtBQUs7UUFDN0Usa0JBQWtCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUM7S0FDckQ7SUFDRDtRQUNJLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxJQUFJO1FBQzlFLGtCQUFrQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDO0tBQ3JEO0lBQ0Q7UUFDSSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsS0FBSztRQUM5RSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQztLQUNyRDtJQUNEO1FBQ0ksS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLEtBQUs7UUFDMUUsa0JBQWtCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUM7S0FDckQ7SUFDRDtRQUNJLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLGVBQWUsRUFBRSxLQUFLO1FBQ2hGLGtCQUFrQixFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxDQUFDO0tBQ3JEO0lBQ0Q7UUFDSSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxlQUFlLEVBQUUsS0FBSztRQUM3RSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQztLQUNyRDtJQUNELE1BQU07SUFDTixnRkFBZ0Y7SUFDaEYsMERBQTBEO0lBQzFELElBQUk7Q0FDUDtBQUVMO0lBQUE7SUFVQSxDQUFDOzs7O0lBVFUscURBQTRCOzs7SUFBbkM7O1lBSVEsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFPO1FBQzVCLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDeEMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzFCLE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFDTCwrQkFBQztBQUFELENBQUMsQUFWRCxJQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIOWPmOmHj+Wtl+auteaVsOaNruexu+Wei1xyXG4gKiBAYXV0aG9yIHdhbmdqaWVnajx3YW5namllZ2pAaW5zcHVyLmNvbT5cclxuICovXHJcblxyXG4vKipcclxuICog5a2X5q615pWw5o2u57G75Z6LXHJcbiAqL1xyXG5lbnVtIEdTUFZtVmFyRGF0YVR5cGUge1xyXG4gICAgLyoqXHJcbiAgICAgKiDmlofmnKxcclxuICAgICAqL1xyXG4gICAgU3RyaW5nID0gJ1N0cmluZycsXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlpIfms6hcclxuICAgICAqL1xyXG4gICAgVGV4dCA9ICdUZXh0JyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaVtOaVsFxyXG4gICAgICovXHJcbiAgICBJbnRlZ2VyID0gJ0ludGVnZXInLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5rWu54K55pWwXHJcbiAgICAgKi9cclxuICAgIERlY2ltYWwgPSAnRGVjaW1hbCcsXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDluIPlsJTlnotcclxuICAgICAqL1xyXG4gICAgQm9vbGVhbiA9ICdCb29sZWFuJyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaXpeacn+Wei1xyXG4gICAgICovXHJcbiAgICBEYXRlID0gJ0RhdGUnLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5pel5pyf5pe26Ze05Z6LXHJcbiAgICAgKi9cclxuICAgIERhdGVUaW1lID0gJ0RhdGVUaW1lJyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIOS6jOi/m+WItlxyXG4gICAgICovXHJcbiAgICBCaW5hcnkgPSAnQmluYXJ5JyxcclxufVxyXG5cclxuZXhwb3J0IHsgR1NQVm1WYXJEYXRhVHlwZSB9O1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBHU1BWbVZhckRhdGFUeXBlczpcclxuICAgIEFycmF5PHtcclxuICAgICAgICBpbmRleDogbnVtYmVyLCB0ZXh0OiBzdHJpbmcsIHZhbHVlOiBHU1BWbVZhckRhdGFUeXBlIHwgc3RyaW5nLFxyXG4gICAgICAgIGNhbkNoYW5nZUxlbmd0aDogYm9vbGVhbiwgY2FuQ2hhbmdlUHJlc2ljaW9uOiBib29sZWFuLCBsZW5ndGg6IG51bWJlciwgcHJlY2lzaW9uOiBudW1iZXJcclxuICAgIH0+ID0gW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaW5kZXg6IDAsIHRleHQ6ICfmlofmnKwnLCB2YWx1ZTogR1NQVm1WYXJEYXRhVHlwZS5TdHJpbmcsIGNhbkNoYW5nZUxlbmd0aDogdHJ1ZSxcclxuICAgICAgICAgICAgY2FuQ2hhbmdlUHJlc2ljaW9uOiBmYWxzZSwgbGVuZ3RoOiAzNiwgcHJlY2lzaW9uOiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGluZGV4OiAxLCB0ZXh0OiAn5aSH5rOoJywgdmFsdWU6IEdTUFZtVmFyRGF0YVR5cGUuVGV4dCwgY2FuQ2hhbmdlTGVuZ3RoOiBmYWxzZSxcclxuICAgICAgICAgICAgY2FuQ2hhbmdlUHJlc2ljaW9uOiBmYWxzZSwgbGVuZ3RoOiAwLCBwcmVjaXNpb246IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaW5kZXg6IDIsIHRleHQ6ICfmlbTmlbAnLCB2YWx1ZTogR1NQVm1WYXJEYXRhVHlwZS5JbnRlZ2VyLCBjYW5DaGFuZ2VMZW5ndGg6IGZhbHNlLFxyXG4gICAgICAgICAgICBjYW5DaGFuZ2VQcmVzaWNpb246IGZhbHNlLCBsZW5ndGg6IDAsIHByZWNpc2lvbjogMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpbmRleDogMywgdGV4dDogJ+a1rueCueaVsOWtlycsIHZhbHVlOiBHU1BWbVZhckRhdGFUeXBlLkRlY2ltYWwsIGNhbkNoYW5nZUxlbmd0aDogdHJ1ZSxcclxuICAgICAgICAgICAgY2FuQ2hhbmdlUHJlc2ljaW9uOiB0cnVlLCBsZW5ndGg6IDE4LCBwcmVjaXNpb246IDJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaW5kZXg6IDQsIHRleHQ6ICfluIPlsJTlnosnLCB2YWx1ZTogR1NQVm1WYXJEYXRhVHlwZS5Cb29sZWFuLCBjYW5DaGFuZ2VMZW5ndGg6IGZhbHNlLFxyXG4gICAgICAgICAgICBjYW5DaGFuZ2VQcmVzaWNpb246IGZhbHNlLCBsZW5ndGg6IDEsIHByZWNpc2lvbjogMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpbmRleDogNSwgdGV4dDogJ+aXpeacnycsIHZhbHVlOiBHU1BWbVZhckRhdGFUeXBlLkRhdGUsIGNhbkNoYW5nZUxlbmd0aDogZmFsc2UsXHJcbiAgICAgICAgICAgIGNhbkNoYW5nZVByZXNpY2lvbjogZmFsc2UsIGxlbmd0aDogMCwgcHJlY2lzaW9uOiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGluZGV4OiA2LCB0ZXh0OiAn5pel5pyf5pe26Ze0JywgdmFsdWU6IEdTUFZtVmFyRGF0YVR5cGUuRGF0ZVRpbWUsIGNhbkNoYW5nZUxlbmd0aDogZmFsc2UsXHJcbiAgICAgICAgICAgIGNhbkNoYW5nZVByZXNpY2lvbjogZmFsc2UsIGxlbmd0aDogMCwgcHJlY2lzaW9uOiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGluZGV4OiA3LCB0ZXh0OiAn5LqM6L+b5Yi2JywgdmFsdWU6IEdTUFZtVmFyRGF0YVR5cGUuQmluYXJ5LCBjYW5DaGFuZ2VMZW5ndGg6IGZhbHNlLFxyXG4gICAgICAgICAgICBjYW5DaGFuZ2VQcmVzaWNpb246IGZhbHNlLCBsZW5ndGg6IDAsIHByZWNpc2lvbjogMFxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyAsIHtcclxuICAgICAgICAvLyAgICAgaW5kZXg6IDgsIHRleHQ6ICfkuJrliqHlrZfmrrUnLCB2YWx1ZTogJ1VuaWZpZWREYXRhVHlwZScsIGNhbkNoYW5nZUxlbmd0aDogZmFsc2UsXHJcbiAgICAgICAgLy8gICAgIGNhbkNoYW5nZVByZXNpY2lvbjogZmFsc2UsIGxlbmd0aDogMzYsIHByZWNpc2lvbjogMFxyXG4gICAgICAgIC8vIH1cclxuICAgIF07XHJcblxyXG5leHBvcnQgY2xhc3MgR2V0VmFyaWFibGVEYXRhVHlwZXNVdGlsIHtcclxuICAgIHN0YXRpYyBHU1BFbGVtZW50RGF0YVR5cGVzV2l0aG91VWR0KCk6IEFycmF5PHtcclxuICAgICAgICBpbmRleDogbnVtYmVyLCB0ZXh0OiBzdHJpbmcsIHZhbHVlOiBHU1BWbVZhckRhdGFUeXBlIHwgc3RyaW5nLFxyXG4gICAgICAgIGNhbkNoYW5nZUxlbmd0aDogYm9vbGVhbiwgY2FuQ2hhbmdlUHJlc2ljaW9uOiBib29sZWFuLCBsZW5ndGg6IG51bWJlciwgcHJlY2lzaW9uOiBudW1iZXJcclxuICAgIH0+IHtcclxuICAgICAgICBsZXQgdHlwZXMgPSBuZXcgQXJyYXk8YW55PigpO1xyXG4gICAgICAgIE9iamVjdC5hc3NpZ24odHlwZXMsIEdTUFZtVmFyRGF0YVR5cGVzKTtcclxuICAgICAgICB0eXBlcyA9IHR5cGVzLnNsaWNlKDAsIDgpO1xyXG4gICAgICAgIHJldHVybiB0eXBlcztcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG4iXX0=