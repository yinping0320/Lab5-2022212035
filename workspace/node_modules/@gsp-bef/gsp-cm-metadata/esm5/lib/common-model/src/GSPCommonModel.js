/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 通用模型，作为业务实体，视图模型和数据模型的总接口，用于规划实体数据结构
 * @author wangjiegj<wangjiegj@inspur.com>
 */
/**
 * 通用模型，作为业务实体，视图模型和数据模型的总接口，用于规划实体数据结构
 */
var /**
 * 通用模型，作为业务实体，视图模型和数据模型的总接口，用于规划实体数据结构
 * @author wangjiegj<wangjiegj@inspur.com>
 */
/**
 * 通用模型，作为业务实体，视图模型和数据模型的总接口，用于规划实体数据结构
 */
GSPCommonModel = /** @class */ (function () {
    function GSPCommonModel() {
    }
    // /**
    //  * 根据elementId查找字段
    //  * @param id
    //  */
    // public findElementById(elementId: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     result = this.findElementFromObjectByID(this.MainObject, elementId);
    //     return result;
    // }
    /**
     * 根据objId查找对象
     * @param objId
     */
    // /**
    //  * 根据elementId查找字段
    //  * @param id
    //  */
    // public findElementById(elementId: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     result = this.findElementFromObjectByID(this.MainObject, elementId);
    //     return result;
    // }
    /**
     * 根据objId查找对象
     * @param {?} objId
     * @return {?}
     */
    GSPCommonModel.prototype.findObjectById = 
    // /**
    //  * 根据elementId查找字段
    //  * @param id
    //  */
    // public findElementById(elementId: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     result = this.findElementFromObjectByID(this.MainObject, elementId);
    //     return result;
    // }
    /**
     * 根据objId查找对象
     * @param {?} objId
     * @return {?}
     */
    function (objId) {
        /** @type {?} */
        var result = null;
        result = this.findObjectFromObjectByID(this.MainObject, objId);
        return result;
    };
    // // public getAllObjectList(): IGSPCommonObject[] {
    // //     throw new Error('Method not implemented.');
    // // }
    // public getAllElementList(): IGSPCommonElement[] {
    //     return this.MainObject.getAllObjectElement();
    // }
    // private findElementFromObjectByID(obj: IGSPCommonObject, id: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     //查找当前节点字段集合
    //     for (let i = 0; i < obj.ContainElements.length; i++) {
    //         if (obj.ContainElements[i].ID == id) {
    //             result = obj.ContainElements[i];
    //             return result;
    //         }
    //     }
    //     //递归查找子节点
    //     if (obj.ContainChildObjects.length > 0) {
    //         for (let i = 0; i < obj.ContainChildObjects.length; i++) {
    //             result = this.findElementFromObjectByID(obj.ContainChildObjects[i], id);
    //             if (result != null) {
    //                 return result;
    //             }
    //         }
    //     }
    //     return result;
    // }
    // private findElementFromElementByID(ele: IGSPCommonElement, eleId: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     if (ele.ID == eleId) {
    //         result = ele;
    //     }
    //     else {
    //         //查找所有关联字段及关联的关联字段……
    //         if (ele.HasAssociation) {
    //             for (let i = 0; i < ele.ChildAssociations.length; i++) {
    //                 let asscociation = ele.ChildAssociations[i];
    //                 for (let j = 0; j < asscociation.RefElementCollection.length; j++) {
    //                     let element = this.findElementFromElementByID(asscociation.RefElementCollection[i], eleId);
    //                     if (element != null) {
    //                         result = element;
    //                         return result;
    //                     }
    //                 }
    //             }
    //         }
    //     }
    //     return result;
    // }
    // // public getAllObjectList(): IGSPCommonObject[] {
    // //     throw new Error('Method not implemented.');
    // // }
    // public getAllElementList(): IGSPCommonElement[] {
    //     return this.MainObject.getAllObjectElement();
    // }
    // private findElementFromObjectByID(obj: IGSPCommonObject, id: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     //查找当前节点字段集合
    //     for (let i = 0; i < obj.ContainElements.length; i++) {
    //         if (obj.ContainElements[i].ID == id) {
    //             result = obj.ContainElements[i];
    //             return result;
    //         }
    //     }
    //     //递归查找子节点
    //     if (obj.ContainChildObjects.length > 0) {
    //         for (let i = 0; i < obj.ContainChildObjects.length; i++) {
    //             result = this.findElementFromObjectByID(obj.ContainChildObjects[i], id);
    //             if (result != null) {
    //                 return result;
    //             }
    //         }
    //     }
    //     return result;
    // }
    // private findElementFromElementByID(ele: IGSPCommonElement, eleId: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     if (ele.ID == eleId) {
    //         result = ele;
    //     }
    //     else {
    //         //查找所有关联字段及关联的关联字段……
    //         if (ele.HasAssociation) {
    //             for (let i = 0; i < ele.ChildAssociations.length; i++) {
    //                 let asscociation = ele.ChildAssociations[i];
    //                 for (let j = 0; j < asscociation.RefElementCollection.length; j++) {
    //                     let element = this.findElementFromElementByID(asscociation.RefElementCollection[i], eleId);
    //                     if (element != null) {
    //                         result = element;
    //                         return result;
    //                     }
    //                 }
    //             }
    //         }
    //     }
    //     return result;
    // }
    /**
     * @private
     * @param {?} obj
     * @param {?} objId
     * @return {?}
     */
    GSPCommonModel.prototype.findObjectFromObjectByID = 
    // // public getAllObjectList(): IGSPCommonObject[] {
    // //     throw new Error('Method not implemented.');
    // // }
    // public getAllElementList(): IGSPCommonElement[] {
    //     return this.MainObject.getAllObjectElement();
    // }
    // private findElementFromObjectByID(obj: IGSPCommonObject, id: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     //查找当前节点字段集合
    //     for (let i = 0; i < obj.ContainElements.length; i++) {
    //         if (obj.ContainElements[i].ID == id) {
    //             result = obj.ContainElements[i];
    //             return result;
    //         }
    //     }
    //     //递归查找子节点
    //     if (obj.ContainChildObjects.length > 0) {
    //         for (let i = 0; i < obj.ContainChildObjects.length; i++) {
    //             result = this.findElementFromObjectByID(obj.ContainChildObjects[i], id);
    //             if (result != null) {
    //                 return result;
    //             }
    //         }
    //     }
    //     return result;
    // }
    // private findElementFromElementByID(ele: IGSPCommonElement, eleId: string): IGSPCommonElement {
    //     let result: IGSPCommonElement = null;
    //     if (ele.ID == eleId) {
    //         result = ele;
    //     }
    //     else {
    //         //查找所有关联字段及关联的关联字段……
    //         if (ele.HasAssociation) {
    //             for (let i = 0; i < ele.ChildAssociations.length; i++) {
    //                 let asscociation = ele.ChildAssociations[i];
    //                 for (let j = 0; j < asscociation.RefElementCollection.length; j++) {
    //                     let element = this.findElementFromElementByID(asscociation.RefElementCollection[i], eleId);
    //                     if (element != null) {
    //                         result = element;
    //                         return result;
    //                     }
    //                 }
    //             }
    //         }
    //     }
    //     return result;
    // }
    /**
     * @private
     * @param {?} obj
     * @param {?} objId
     * @return {?}
     */
    function (obj, objId) {
        /** @type {?} */
        var result = null;
        if (!obj) {
            return null;
        }
        if (obj.ID === objId) {
            return obj;
        }
        if (!obj.ContainChildObjects) {
            return null;
        }
        // 递归查找子节点
        if (obj.ContainChildObjects.length > 0) {
            for (var i = 0; i < obj.ContainChildObjects.length; i++) {
                if (obj.ContainChildObjects[i].ID === objId) {
                    result = obj.ContainChildObjects[i];
                    return result;
                }
                result = this.findObjectFromObjectByID(obj.ContainChildObjects[i], objId);
                if (result != null) {
                    return result;
                }
            }
        }
        return result;
    };
    return GSPCommonModel;
}());
/**
 * 通用模型，作为业务实体，视图模型和数据模型的总接口，用于规划实体数据结构
 * @author wangjiegj<wangjiegj@inspur.com>
 */
/**
 * 通用模型，作为业务实体，视图模型和数据模型的总接口，用于规划实体数据结构
 */
export { GSPCommonModel };
if (false) {
    /**
     * 唯一标志
     * @type {?}
     */
    GSPCommonModel.prototype.ID;
    /**
     * 编号
     * @type {?}
     */
    GSPCommonModel.prototype.Code;
    /**
     * 名称
     * @type {?}
     */
    GSPCommonModel.prototype.Name;
    /**
     * 是否记录
     * @type {?}
     */
    GSPCommonModel.prototype.IsRecord;
    /**
     * 记录历史表
     * @type {?}
     */
    GSPCommonModel.prototype.RecordHistoryTable;
    /**
     * 日志对象Id
     * @type {?}
     */
    GSPCommonModel.prototype.LogObjectID;
    /**
     * 是否虚拟模型
     * @type {?}
     */
    GSPCommonModel.prototype.IsVirtual;
    /**
     * 主节点主键字段Id
     * @type {?}
     */
    GSPCommonModel.prototype.PrimayKeyID;
    /**
     * 是否允许被继承
     * @type {?}
     */
    GSPCommonModel.prototype.IsAllowDerive;
    /**
     * 是否允许被扩展
     * @type {?}
     */
    GSPCommonModel.prototype.IsAllowExtend;
    /**
     * 维度
     * @type {?}
     */
    GSPCommonModel.prototype.Dimension;
    /**
     * 分级信息
     * @type {?}
     */
    GSPCommonModel.prototype.Hierarchy;
    /**
     * 主节点
     * @type {?}
     */
    GSPCommonModel.prototype.MainObject;
    /**
     * 扩展类型
     * @type {?}
     */
    GSPCommonModel.prototype.ExtendType;
    /**
     * 用于序列化处理子模型元数据的扩展属性
     * @type {?}
     */
    GSPCommonModel.prototype.ExtendNodeList;
    /**
     * 当前节点字段集合
     * @type {?}
     */
    GSPCommonModel.prototype.FkConstraints;
    /**
     * be生成时使用的程序集名
     * @type {?}
     */
    GSPCommonModel.prototype.GeneratingAssembly;
    /**
     * 变量实体
     * @type {?}
     */
    GSPCommonModel.prototype.Variables;
    /**
     * 是否使用命名空间+编号的ConfigId
     * 以前建的为false，保证原有代码可用
     * 新建元数据为true，保证后续元数据ConfigId唯一
     * @type {?}
     */
    GSPCommonModel.prototype.IsUseNamespaceConfig;
    /** @type {?} */
    GSPCommonModel.prototype.VersionControlInfo;
    /**
     * 标签
     * @type {?}
     */
    GSPCommonModel.prototype.BeLabel;
}
//# sourceMappingURL=data:application/json;base64,