/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class CommonModelUtil {
    /**
     * @param {?} cm
     * @return {?}
     */
    static GetGeneratedConfigID(cm) {
        if (cm.IsUseNamespaceConfig) {
            return cm.GeneratingAssembly + '.' + cm.Code;
        }
        return cm.Code;
    }
    /**
     * @private
     * @param {?} obj
     * @param {?} objId
     * @return {?}
     */
    static findObjectFromObjectByID(obj, objId) {
        /** @type {?} */
        let result = null;
        if (!obj) {
            return null;
        }
        if (obj.ID === objId) {
            return obj;
        }
        if (!obj.ContainChildObjects) {
            return null;
        }
        // 递归查找子节点
        if (obj.ContainChildObjects.length > 0) {
            for (let i = 0; i < obj.ContainChildObjects.length; i++) {
                if (obj.ContainChildObjects[i].ID === objId) {
                    result = obj.ContainChildObjects[i];
                    return result;
                }
                result = this.findObjectFromObjectByID(obj.ContainChildObjects[i], objId);
                if (result != null) {
                    return result;
                }
            }
        }
        return result;
    }
    /**
     * 根据objId查找对象
     * @param {?} cm
     * @param {?} objId
     * @return {?}
     */
    findObjectById(cm, objId) {
        /** @type {?} */
        let result = null;
        result = CommonModelUtil.findObjectFromObjectByID(cm.MainObject, objId);
        return result;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY20tdXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtYmVmL2dzcC1jbS1tZXRhZGF0YS8iLCJzb3VyY2VzIjpbImxpYi91dGlsL3NyYy9jbS11dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxNQUFNLE9BQU8sZUFBZTs7Ozs7SUFFbkIsTUFBTSxDQUFDLG9CQUFvQixDQUFDLEVBQWtCO1FBQ25ELElBQUksRUFBRSxDQUFDLG9CQUFvQixFQUFFO1lBQzNCLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDO1NBQzlDO1FBQ0QsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDO0lBQ2pCLENBQUM7Ozs7Ozs7SUFHTyxNQUFNLENBQUMsd0JBQXdCLENBQUMsR0FBcUIsRUFBRSxLQUFhOztZQUN0RSxNQUFNLEdBQXFCLElBQUk7UUFFbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNSLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxJQUFJLEdBQUcsQ0FBQyxFQUFFLEtBQUssS0FBSyxFQUFFO1lBQ3BCLE9BQU8sR0FBRyxDQUFDO1NBQ1o7UUFFRCxJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFO1lBQzVCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxVQUFVO1FBQ1YsSUFBSSxHQUFHLENBQUMsbUJBQW1CLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUN0QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDdkQsSUFBSSxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLEtBQUssRUFBRTtvQkFDM0MsTUFBTSxHQUFHLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDcEMsT0FBTyxNQUFNLENBQUM7aUJBQ2Y7Z0JBRUQsTUFBTSxHQUFHLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQzFFLElBQUksTUFBTSxJQUFJLElBQUksRUFBRTtvQkFDbEIsT0FBTyxNQUFNLENBQUM7aUJBQ2Y7YUFDRjtTQUNGO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7Ozs7OztJQU1NLGNBQWMsQ0FBQyxFQUFrQixFQUFFLEtBQWE7O1lBQ2pELE1BQU0sR0FBb0IsSUFBSTtRQUNsQyxNQUFNLEdBQUcsZUFBZSxDQUFDLHdCQUF3QixDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDeEUsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR1NQQ29tbW9uTW9kZWwsIElHU1BDb21tb25PYmplY3QsIEdTUENvbW1vbk9iamVjdCB9IGZyb20gJy4uLy4uL2NvbW1vbi1tb2RlbCc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29tbW9uTW9kZWxVdGlsIHtcclxuXHJcbiAgcHVibGljIHN0YXRpYyBHZXRHZW5lcmF0ZWRDb25maWdJRChjbTogR1NQQ29tbW9uTW9kZWwpOiBzdHJpbmcge1xyXG4gICAgaWYgKGNtLklzVXNlTmFtZXNwYWNlQ29uZmlnKSB7XHJcbiAgICAgIHJldHVybiBjbS5HZW5lcmF0aW5nQXNzZW1ibHkgKyAnLicgKyBjbS5Db2RlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNtLkNvZGU7XHJcbiAgfVxyXG5cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgZmluZE9iamVjdEZyb21PYmplY3RCeUlEKG9iajogSUdTUENvbW1vbk9iamVjdCwgb2JqSWQ6IHN0cmluZyk6IGFueSB7XHJcbiAgICBsZXQgcmVzdWx0OiBJR1NQQ29tbW9uT2JqZWN0ID0gbnVsbDtcclxuXHJcbiAgICBpZiAoIW9iaikge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAob2JqLklEID09PSBvYmpJZCkge1xyXG4gICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghb2JqLkNvbnRhaW5DaGlsZE9iamVjdHMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICAvLyDpgJLlvZLmn6Xmib7lrZDoioLngrlcclxuICAgIGlmIChvYmouQ29udGFpbkNoaWxkT2JqZWN0cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb2JqLkNvbnRhaW5DaGlsZE9iamVjdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAob2JqLkNvbnRhaW5DaGlsZE9iamVjdHNbaV0uSUQgPT09IG9iaklkKSB7XHJcbiAgICAgICAgICByZXN1bHQgPSBvYmouQ29udGFpbkNoaWxkT2JqZWN0c1tpXTtcclxuICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXN1bHQgPSB0aGlzLmZpbmRPYmplY3RGcm9tT2JqZWN0QnlJRChvYmouQ29udGFpbkNoaWxkT2JqZWN0c1tpXSwgb2JqSWQpO1xyXG4gICAgICAgIGlmIChyZXN1bHQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5qC55o2ub2JqSWTmn6Xmib7lr7nosaFcclxuICAgKiBAcGFyYW0gb2JqSWRcclxuICAgKi9cclxuICBwdWJsaWMgZmluZE9iamVjdEJ5SWQoY206IEdTUENvbW1vbk1vZGVsLCBvYmpJZDogc3RyaW5nKTogR1NQQ29tbW9uT2JqZWN0IHtcclxuICAgIGxldCByZXN1bHQ6IEdTUENvbW1vbk9iamVjdCA9IG51bGw7XHJcbiAgICByZXN1bHQgPSBDb21tb25Nb2RlbFV0aWwuZmluZE9iamVjdEZyb21PYmplY3RCeUlEKGNtLk1haW5PYmplY3QsIG9iaklkKTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=