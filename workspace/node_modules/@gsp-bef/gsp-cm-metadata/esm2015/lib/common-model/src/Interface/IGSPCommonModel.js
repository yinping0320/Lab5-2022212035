/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 通用模型，作为业务实体，视图模型和数据模型的总接口，用于规划实体数据结构
 * @record
 */
export function IGSPCommonModel() { }
if (false) {
    /**
     * 唯一标志
     * @type {?}
     */
    IGSPCommonModel.prototype.ID;
    /**
     * 编号
     * @type {?}
     */
    IGSPCommonModel.prototype.Code;
    /**
     * 名称
     * @type {?}
     */
    IGSPCommonModel.prototype.Name;
    /**
     * 是否记录
     * @type {?}
     */
    IGSPCommonModel.prototype.IsRecord;
    /**
     * 记录历史表
     * @type {?}
     */
    IGSPCommonModel.prototype.RecordHistoryTable;
    /**
     * 日志对象Id
     * @type {?}
     */
    IGSPCommonModel.prototype.LogObjectID;
    /**
     * 是否虚拟模型
     * @type {?}
     */
    IGSPCommonModel.prototype.IsVirtual;
    /**
     * 主节点主键字段Id
     * @type {?}
     */
    IGSPCommonModel.prototype.PrimayKeyID;
    /**
     * 是否允许被继承
     * @type {?}
     */
    IGSPCommonModel.prototype.IsAllowDerive;
    /**
     * 是否允许被扩展
     * @type {?}
     */
    IGSPCommonModel.prototype.IsAllowExtend;
    /**
     * 维度
     * @type {?}
     */
    IGSPCommonModel.prototype.Dimension;
    /**
     * 分级信息
     * @type {?}
     */
    IGSPCommonModel.prototype.Hierarchy;
    /**
     * 主节点
     * @type {?}
     */
    IGSPCommonModel.prototype.MainObject;
    /**
     * 扩展类型
     * @type {?}
     */
    IGSPCommonModel.prototype.ExtendType;
    /**
     * 用于序列化处理子模型元数据的扩展属性
     * @type {?}
     */
    IGSPCommonModel.prototype.ExtendNodeList;
    /**
     * 当前节点字段集合
     * @type {?}
     */
    IGSPCommonModel.prototype.FkConstraints;
    /** @type {?} */
    IGSPCommonModel.prototype.GeneratingAssembly;
    /**
     * @param {?} objId
     * @return {?}
     */
    IGSPCommonModel.prototype.findObjectById = function (objId) { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSUdTUENvbW1vbk1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1iZWYvZ3NwLWNtLW1ldGFkYXRhLyIsInNvdXJjZXMiOlsibGliL2NvbW1vbi1tb2RlbC9zcmMvSW50ZXJmYWNlL0lHU1BDb21tb25Nb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQVlBLHFDQXdGQzs7Ozs7O0lBbkZHLDZCQUFXOzs7OztJQUtYLCtCQUFhOzs7OztJQUtiLCtCQUFhOzs7OztJQUtiLG1DQUFrQjs7Ozs7SUFLbEIsNkNBQTJCOzs7OztJQUszQixzQ0FBb0I7Ozs7O0lBS3BCLG9DQUFtQjs7Ozs7SUFLbkIsc0NBQW9COzs7OztJQUtwQix3Q0FBdUI7Ozs7O0lBS3ZCLHdDQUF1Qjs7Ozs7SUFLdkIsb0NBQWtCOzs7OztJQUtsQixvQ0FBa0I7Ozs7O0lBS2xCLHFDQUE2Qjs7Ozs7SUFLN0IscUNBQW1COzs7OztJQUtuQix5Q0FBb0M7Ozs7O0lBS3BDLHdDQUE4Qzs7SUFFOUMsNkNBQTJCOzs7OztJQUczQixnRUFBZ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJR1NQQ29tbW9uT2JqZWN0IH0gZnJvbSAnLi9JR1NQQ29tbW9uT2JqZWN0JztcclxuaW1wb3J0IHsgUmVsYXRpb25Gb3JlaWduS2V5Q29uc3RyYWludCB9IGZyb20gJy4uL0NvbnN0cmFpbnRzL1JlbGF0aW9uRm9yZWlnbktleUNvbnN0cmFpbnQnO1xyXG5cclxuLyoqXHJcbiAqIOmAmueUqOaooeWei++8jOS9nOS4uuS4muWKoeWunuS9k++8jOinhuWbvuaooeWei+WSjOaVsOaNruaooeWei+eahOaAu+aOpeWPo++8jOeUqOS6juinhOWIkuWunuS9k+aVsOaNrue7k+aehFxyXG4gKiBAYXV0aG9yIHdhbmdqaWVnajx3YW5namllZ2pAaW5zcHVyLmNvbT5cclxuICovXHJcblxyXG5cclxuLyoqXHJcbiAqIOmAmueUqOaooeWei++8jOS9nOS4uuS4muWKoeWunuS9k++8jOinhuWbvuaooeWei+WSjOaVsOaNruaooeWei+eahOaAu+aOpeWPo++8jOeUqOS6juinhOWIkuWunuS9k+aVsOaNrue7k+aehFxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBJR1NQQ29tbW9uTW9kZWwge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ZSv5LiA5qCH5b+XXHJcbiAgICAgKi9cclxuICAgIElEOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnvJblj7dcclxuICAgICAqL1xyXG4gICAgQ29kZTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ZCN56ewXHJcbiAgICAgKi9cclxuICAgIE5hbWU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaYr+WQpuiusOW9lVxyXG4gICAgICovXHJcbiAgICBJc1JlY29yZDogYm9vbGVhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOiusOW9leWOhuWPsuihqFxyXG4gICAgICovXHJcbiAgICBSZWNvcmRIaXN0b3J5VGFibGU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaXpeW/l+WvueixoUlkXHJcbiAgICAgKi9cclxuICAgIExvZ09iamVjdElEOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmK/lkKbomZrmi5/mqKHlnotcclxuICAgICAqL1xyXG4gICAgSXNWaXJ0dWFsOiBib29sZWFuO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Li76IqC54K55Li76ZSu5a2X5q61SWRcclxuICAgICAqL1xyXG4gICAgUHJpbWF5S2V5SUQ6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaYr+WQpuWFgeiuuOiiq+e7p+aJv1xyXG4gICAgICovXHJcbiAgICBJc0FsbG93RGVyaXZlOiBib29sZWFuO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm5YWB6K646KKr5omp5bGVXHJcbiAgICAgKi9cclxuICAgIElzQWxsb3dFeHRlbmQ6IGJvb2xlYW47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnu7TluqZcclxuICAgICAqL1xyXG4gICAgRGltZW5zaW9uOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliIbnuqfkv6Hmga9cclxuICAgICAqL1xyXG4gICAgSGllcmFyY2h5OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDkuLvoioLngrlcclxuICAgICAqL1xyXG4gICAgTWFpbk9iamVjdDogSUdTUENvbW1vbk9iamVjdDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaJqeWxleexu+Wei1xyXG4gICAgICovXHJcbiAgICBFeHRlbmRUeXBlOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnlKjkuo7luo/liJfljJblpITnkIblrZDmqKHlnovlhYPmlbDmja7nmoTmianlsZXlsZ7mgKdcclxuICAgICAqL1xyXG4gICAgRXh0ZW5kTm9kZUxpc3Q6IE1hcDxzdHJpbmcsIHN0cmluZz47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlvZPliY3oioLngrnlrZfmrrXpm4blkIhcclxuICAgICAqL1xyXG4gICAgRmtDb25zdHJhaW50czogUmVsYXRpb25Gb3JlaWduS2V5Q29uc3RyYWludFtdO1xyXG5cclxuICAgIEdlbmVyYXRpbmdBc3NlbWJseTogc3RyaW5nO1xyXG5cclxuICAgIC8vIGZpbmRFbGVtZW50QnlJZChlbGVtZW50SWQ6IHN0cmluZyk6IElHU1BDb21tb25FbGVtZW50O1xyXG4gICAgZmluZE9iamVjdEJ5SWQob2JqSWQ6IHN0cmluZyk6IElHU1BDb21tb25PYmplY3Q7XHJcbiAgICAvLyAvLyBnZXRBbGxPYmplY3RMaXN0KCk6IElHU1BDb21tb25PYmplY3RbXTtcclxuICAgIC8vIGdldEFsbEVsZW1lbnRMaXN0KCk6IElHU1BDb21tb25FbGVtZW50W107XHJcbn1cclxuIl19