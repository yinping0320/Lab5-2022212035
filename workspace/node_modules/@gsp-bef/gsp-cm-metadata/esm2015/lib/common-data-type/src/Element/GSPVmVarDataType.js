/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 变量字段数据类型
 * @author wangjiegj<wangjiegj@inspur.com>
 */
/** @enum {string} */
const GSPVmVarDataType = {
    /**
     * 文本
     */
    String: 'String',
    /**
     * 备注
     */
    Text: 'Text',
    /**
     * 整数
     */
    Integer: 'Integer',
    /**
     * 浮点数
     */
    Decimal: 'Decimal',
    /**
     * 布尔型
     */
    Boolean: 'Boolean',
    /**
     * 日期型
     */
    Date: 'Date',
    /**
     * 日期时间型
     */
    DateTime: 'DateTime',
    /**
     * 二进制
     */
    Binary: 'Binary',
};
export { GSPVmVarDataType };
/** @type {?} */
export const GSPVmVarDataTypes = [
    {
        index: 0, text: '文本', value: GSPVmVarDataType.String, canChangeLength: true,
        canChangePresicion: false, length: 36, precision: 0
    },
    {
        index: 1, text: '备注', value: GSPVmVarDataType.Text, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 2, text: '整数', value: GSPVmVarDataType.Integer, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 3, text: '浮点数字', value: GSPVmVarDataType.Decimal, canChangeLength: true,
        canChangePresicion: true, length: 18, precision: 2
    },
    {
        index: 4, text: '布尔型', value: GSPVmVarDataType.Boolean, canChangeLength: false,
        canChangePresicion: false, length: 1, precision: 0
    },
    {
        index: 5, text: '日期', value: GSPVmVarDataType.Date, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 6, text: '日期时间', value: GSPVmVarDataType.DateTime, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    },
    {
        index: 7, text: '二进制', value: GSPVmVarDataType.Binary, canChangeLength: false,
        canChangePresicion: false, length: 0, precision: 0
    }
    // , {
    //     index: 8, text: '业务字段', value: 'UnifiedDataType', canChangeLength: false,
    //     canChangePresicion: false, length: 36, precision: 0
    // }
];
export class GetVariableDataTypesUtil {
    /**
     * @return {?}
     */
    static GSPElementDataTypesWithouUdt() {
        /** @type {?} */
        let types = new Array();
        Object.assign(types, GSPVmVarDataTypes);
        types = types.slice(0, 8);
        return types;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR1NQVm1WYXJEYXRhVHlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtYmVmL2dzcC1jbS1tZXRhZGF0YS8iLCJzb3VyY2VzIjpbImxpYi9jb21tb24tZGF0YS10eXBlL3NyYy9FbGVtZW50L0dTUFZtVmFyRGF0YVR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztJQVNJOztPQUVHO0lBQ0gsUUFBUyxRQUFRO0lBRWpCOztPQUVHO0lBQ0gsTUFBTyxNQUFNO0lBRWI7O09BRUc7SUFDSCxTQUFVLFNBQVM7SUFFbkI7O09BRUc7SUFDSCxTQUFVLFNBQVM7SUFFbkI7O09BRUc7SUFDSCxTQUFVLFNBQVM7SUFFbkI7O09BRUc7SUFDSCxNQUFPLE1BQU07SUFFYjs7T0FFRztJQUNILFVBQVcsVUFBVTtJQUVyQjs7T0FFRztJQUNILFFBQVMsUUFBUTs7QUFHckIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLENBQUM7O0FBRzVCLE1BQU0sT0FBTyxpQkFBaUIsR0FJckI7SUFDRDtRQUNJLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLGVBQWUsRUFBRSxJQUFJO1FBQzNFLGtCQUFrQixFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDO0tBQ3REO0lBQ0Q7UUFDSSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsS0FBSztRQUMxRSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQztLQUNyRDtJQUNEO1FBQ0ksS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsZUFBZSxFQUFFLEtBQUs7UUFDN0Usa0JBQWtCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUM7S0FDckQ7SUFDRDtRQUNJLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxJQUFJO1FBQzlFLGtCQUFrQixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDO0tBQ3JEO0lBQ0Q7UUFDSSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsS0FBSztRQUM5RSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQztLQUNyRDtJQUNEO1FBQ0ksS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLEtBQUs7UUFDMUUsa0JBQWtCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUM7S0FDckQ7SUFDRDtRQUNJLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLGVBQWUsRUFBRSxLQUFLO1FBQ2hGLGtCQUFrQixFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxDQUFDO0tBQ3JEO0lBQ0Q7UUFDSSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxlQUFlLEVBQUUsS0FBSztRQUM3RSxrQkFBa0IsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQztLQUNyRDtJQUNELE1BQU07SUFDTixnRkFBZ0Y7SUFDaEYsMERBQTBEO0lBQzFELElBQUk7Q0FDUDtBQUVMLE1BQU0sT0FBTyx3QkFBd0I7Ozs7SUFDakMsTUFBTSxDQUFDLDRCQUE0Qjs7WUFJM0IsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFPO1FBQzVCLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDeEMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzFCLE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiDlj5jph4/lrZfmrrXmlbDmja7nsbvlnotcclxuICogQGF1dGhvciB3YW5namllZ2o8d2FuZ2ppZWdqQGluc3B1ci5jb20+XHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIOWtl+auteaVsOaNruexu+Wei1xyXG4gKi9cclxuZW51bSBHU1BWbVZhckRhdGFUeXBlIHtcclxuICAgIC8qKlxyXG4gICAgICog5paH5pysXHJcbiAgICAgKi9cclxuICAgIFN0cmluZyA9ICdTdHJpbmcnLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5aSH5rOoXHJcbiAgICAgKi9cclxuICAgIFRleHQgPSAnVGV4dCcsXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmlbTmlbBcclxuICAgICAqL1xyXG4gICAgSW50ZWdlciA9ICdJbnRlZ2VyJyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIOa1rueCueaVsFxyXG4gICAgICovXHJcbiAgICBEZWNpbWFsID0gJ0RlY2ltYWwnLFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5biD5bCU5Z6LXHJcbiAgICAgKi9cclxuICAgIEJvb2xlYW4gPSAnQm9vbGVhbicsXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDml6XmnJ/lnotcclxuICAgICAqL1xyXG4gICAgRGF0ZSA9ICdEYXRlJyxcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaXpeacn+aXtumXtOWei1xyXG4gICAgICovXHJcbiAgICBEYXRlVGltZSA9ICdEYXRlVGltZScsXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDkuozov5vliLZcclxuICAgICAqL1xyXG4gICAgQmluYXJ5ID0gJ0JpbmFyeScsXHJcbn1cclxuXHJcbmV4cG9ydCB7IEdTUFZtVmFyRGF0YVR5cGUgfTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgR1NQVm1WYXJEYXRhVHlwZXM6XHJcbiAgICBBcnJheTx7XHJcbiAgICAgICAgaW5kZXg6IG51bWJlciwgdGV4dDogc3RyaW5nLCB2YWx1ZTogR1NQVm1WYXJEYXRhVHlwZSB8IHN0cmluZyxcclxuICAgICAgICBjYW5DaGFuZ2VMZW5ndGg6IGJvb2xlYW4sIGNhbkNoYW5nZVByZXNpY2lvbjogYm9vbGVhbiwgbGVuZ3RoOiBudW1iZXIsIHByZWNpc2lvbjogbnVtYmVyXHJcbiAgICB9PiA9IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGluZGV4OiAwLCB0ZXh0OiAn5paH5pysJywgdmFsdWU6IEdTUFZtVmFyRGF0YVR5cGUuU3RyaW5nLCBjYW5DaGFuZ2VMZW5ndGg6IHRydWUsXHJcbiAgICAgICAgICAgIGNhbkNoYW5nZVByZXNpY2lvbjogZmFsc2UsIGxlbmd0aDogMzYsIHByZWNpc2lvbjogMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpbmRleDogMSwgdGV4dDogJ+Wkh+azqCcsIHZhbHVlOiBHU1BWbVZhckRhdGFUeXBlLlRleHQsIGNhbkNoYW5nZUxlbmd0aDogZmFsc2UsXHJcbiAgICAgICAgICAgIGNhbkNoYW5nZVByZXNpY2lvbjogZmFsc2UsIGxlbmd0aDogMCwgcHJlY2lzaW9uOiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGluZGV4OiAyLCB0ZXh0OiAn5pW05pWwJywgdmFsdWU6IEdTUFZtVmFyRGF0YVR5cGUuSW50ZWdlciwgY2FuQ2hhbmdlTGVuZ3RoOiBmYWxzZSxcclxuICAgICAgICAgICAgY2FuQ2hhbmdlUHJlc2ljaW9uOiBmYWxzZSwgbGVuZ3RoOiAwLCBwcmVjaXNpb246IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaW5kZXg6IDMsIHRleHQ6ICfmta7ngrnmlbDlrZcnLCB2YWx1ZTogR1NQVm1WYXJEYXRhVHlwZS5EZWNpbWFsLCBjYW5DaGFuZ2VMZW5ndGg6IHRydWUsXHJcbiAgICAgICAgICAgIGNhbkNoYW5nZVByZXNpY2lvbjogdHJ1ZSwgbGVuZ3RoOiAxOCwgcHJlY2lzaW9uOiAyXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGluZGV4OiA0LCB0ZXh0OiAn5biD5bCU5Z6LJywgdmFsdWU6IEdTUFZtVmFyRGF0YVR5cGUuQm9vbGVhbiwgY2FuQ2hhbmdlTGVuZ3RoOiBmYWxzZSxcclxuICAgICAgICAgICAgY2FuQ2hhbmdlUHJlc2ljaW9uOiBmYWxzZSwgbGVuZ3RoOiAxLCBwcmVjaXNpb246IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaW5kZXg6IDUsIHRleHQ6ICfml6XmnJ8nLCB2YWx1ZTogR1NQVm1WYXJEYXRhVHlwZS5EYXRlLCBjYW5DaGFuZ2VMZW5ndGg6IGZhbHNlLFxyXG4gICAgICAgICAgICBjYW5DaGFuZ2VQcmVzaWNpb246IGZhbHNlLCBsZW5ndGg6IDAsIHByZWNpc2lvbjogMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpbmRleDogNiwgdGV4dDogJ+aXpeacn+aXtumXtCcsIHZhbHVlOiBHU1BWbVZhckRhdGFUeXBlLkRhdGVUaW1lLCBjYW5DaGFuZ2VMZW5ndGg6IGZhbHNlLFxyXG4gICAgICAgICAgICBjYW5DaGFuZ2VQcmVzaWNpb246IGZhbHNlLCBsZW5ndGg6IDAsIHByZWNpc2lvbjogMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpbmRleDogNywgdGV4dDogJ+S6jOi/m+WIticsIHZhbHVlOiBHU1BWbVZhckRhdGFUeXBlLkJpbmFyeSwgY2FuQ2hhbmdlTGVuZ3RoOiBmYWxzZSxcclxuICAgICAgICAgICAgY2FuQ2hhbmdlUHJlc2ljaW9uOiBmYWxzZSwgbGVuZ3RoOiAwLCBwcmVjaXNpb246IDBcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gLCB7XHJcbiAgICAgICAgLy8gICAgIGluZGV4OiA4LCB0ZXh0OiAn5Lia5Yqh5a2X5q61JywgdmFsdWU6ICdVbmlmaWVkRGF0YVR5cGUnLCBjYW5DaGFuZ2VMZW5ndGg6IGZhbHNlLFxyXG4gICAgICAgIC8vICAgICBjYW5DaGFuZ2VQcmVzaWNpb246IGZhbHNlLCBsZW5ndGg6IDM2LCBwcmVjaXNpb246IDBcclxuICAgICAgICAvLyB9XHJcbiAgICBdO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdldFZhcmlhYmxlRGF0YVR5cGVzVXRpbCB7XHJcbiAgICBzdGF0aWMgR1NQRWxlbWVudERhdGFUeXBlc1dpdGhvdVVkdCgpOiBBcnJheTx7XHJcbiAgICAgICAgaW5kZXg6IG51bWJlciwgdGV4dDogc3RyaW5nLCB2YWx1ZTogR1NQVm1WYXJEYXRhVHlwZSB8IHN0cmluZyxcclxuICAgICAgICBjYW5DaGFuZ2VMZW5ndGg6IGJvb2xlYW4sIGNhbkNoYW5nZVByZXNpY2lvbjogYm9vbGVhbiwgbGVuZ3RoOiBudW1iZXIsIHByZWNpc2lvbjogbnVtYmVyXHJcbiAgICB9PiB7XHJcbiAgICAgICAgbGV0IHR5cGVzID0gbmV3IEFycmF5PGFueT4oKTtcclxuICAgICAgICBPYmplY3QuYXNzaWduKHR5cGVzLCBHU1BWbVZhckRhdGFUeXBlcyk7XHJcbiAgICAgICAgdHlwZXMgPSB0eXBlcy5zbGljZSgwLCA4KTtcclxuICAgICAgICByZXR1cm4gdHlwZXM7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuIl19