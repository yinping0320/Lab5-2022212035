/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const VMParameterType = {
    /**
     * 字符型
     */
    String: 'String',
    /**
     * 布尔型
     */
    Boolean: 'Boolean',
    /**
     * 整数
     */
    Int32: 'Int32',
    /**
     * 浮点数
     */
    Decimal: 'Decimal',
    /**
     * 双浮点
     */
    Double: 'Double',
    /**
     * 时间
     */
    DateTime: 'DateTime',
    /**
     * 对象类型
     */
    Object: 'Object',
    /**
     * 自定义
     */
    Custom: 'Custom',
};
export { VMParameterType };
/** @type {?} */
export const VMParameterTypes = [
    { index: 0, text: '字符串', value: VMParameterType.String, assembly: 'mscorlib.dll', className: 'System.String', javaClassName: 'java.lang.String' },
    { index: 1, text: '布尔型', value: VMParameterType.Boolean, assembly: 'mscorlib.dll', className: 'System.Boolean', javaClassName: 'java.lang.Boolean' },
    { index: 2, text: '整数', value: VMParameterType.Int32, assembly: 'mscorlib.dll', className: 'System.Int32', javaClassName: 'java.lang.Integer' },
    { index: 3, text: '浮点数', value: VMParameterType.Decimal, assembly: 'mscorlib.dll', className: 'System.Single', javaClassName: 'java.math.BigDecimal' },
    { index: 4, text: '双浮点数', value: VMParameterType.Double, assembly: 'mscorlib.dll', className: 'System.Double', javaClassName: 'java.lang.Double' },
    { index: 5, text: '时间类型', value: VMParameterType.DateTime, assembly: 'mscorlib.dll', className: 'System.DateTime', javaClassName: 'java.util.Date' },
    { index: 6, text: '对象类型', value: VMParameterType.Object, assembly: 'mscorlib.dll', className: 'System.Object', javaClassName: 'java.lang.Object' },
    { index: 7, text: '自定义类型', value: VMParameterType.Custom, assembly: '', className: '', javaClassName: '' },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVk1QYXJhbWV0ZXJUeXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1iZWYvZ3NwLXZvLW1ldGFkYXRhLyIsInNvdXJjZXMiOlsibGliL3ZpZXctbW9kZWwvc3JjL0FjdGlvbi9QYXJhRW51bS9WTVBhcmFtZXRlclR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBSUk7O09BRUc7SUFDSCxRQUFTLFFBQVE7SUFDakI7O09BRUc7SUFDSCxTQUFVLFNBQVM7SUFDbkI7O09BRUc7SUFDSCxPQUFRLE9BQU87SUFDZjs7T0FFRztJQUNILFNBQVUsU0FBUztJQUNuQjs7T0FFRztJQUNILFFBQVMsUUFBUTtJQUNqQjs7T0FFRztJQUNILFVBQVcsVUFBVTtJQUNyQjs7T0FFRztJQUNILFFBQVMsUUFBUTtJQUNqQjs7T0FFRztJQUNILFFBQVMsUUFBUTs7OztBQUdyQixNQUFNLE9BQU8sZ0JBQWdCLEdBQStIO0lBQ3hKLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxhQUFhLEVBQUUsa0JBQWtCLEVBQUU7SUFDakosRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGVBQWUsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLG1CQUFtQixFQUFFO0lBQ3BKLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQUU7SUFDL0ksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLGVBQWUsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLGFBQWEsRUFBRSxzQkFBc0IsRUFBRTtJQUN0SixFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsZUFBZSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsYUFBYSxFQUFFLGtCQUFrQixFQUFFO0lBQ2xKLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsRUFBRTtJQUNwSixFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsZUFBZSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsYUFBYSxFQUFFLGtCQUFrQixFQUFFO0lBQ2xKLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxhQUFhLEVBQUUsRUFBRSxFQUFHO0NBQzlHIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIOaehOS7tuaWueazleWPguaVsOexu+Wei1xyXG4gKi9cclxuZXhwb3J0IGVudW0gVk1QYXJhbWV0ZXJUeXBlIHtcclxuICAgIC8qKlxyXG4gICAgICog5a2X56ym5Z6LXHJcbiAgICAgKi9cclxuICAgIFN0cmluZyA9ICdTdHJpbmcnLFxyXG4gICAgLyoqXHJcbiAgICAgKiDluIPlsJTlnotcclxuICAgICAqL1xyXG4gICAgQm9vbGVhbiA9ICdCb29sZWFuJyxcclxuICAgIC8qKlxyXG4gICAgICog5pW05pWwXHJcbiAgICAgKi9cclxuICAgIEludDMyID0gJ0ludDMyJyxcclxuICAgIC8qKlxyXG4gICAgICog5rWu54K55pWwXHJcbiAgICAgKi9cclxuICAgIERlY2ltYWwgPSAnRGVjaW1hbCcsXHJcbiAgICAvKipcclxuICAgICAqIOWPjOa1rueCuVxyXG4gICAgICovXHJcbiAgICBEb3VibGUgPSAnRG91YmxlJyxcclxuICAgIC8qKlxyXG4gICAgICog5pe26Ze0XHJcbiAgICAgKi9cclxuICAgIERhdGVUaW1lID0gJ0RhdGVUaW1lJyxcclxuICAgIC8qKlxyXG4gICAgICog5a+56LGh57G75Z6LXHJcbiAgICAgKi9cclxuICAgIE9iamVjdCA9ICdPYmplY3QnLFxyXG4gICAgLyoqXHJcbiAgICAgKiDoh6rlrprkuYlcclxuICAgICAqL1xyXG4gICAgQ3VzdG9tID0gJ0N1c3RvbScsXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBWTVBhcmFtZXRlclR5cGVzOiBBcnJheTx7IGluZGV4OiBudW1iZXIsIHRleHQ6IHN0cmluZywgdmFsdWU6IFZNUGFyYW1ldGVyVHlwZSwgYXNzZW1ibHk6IHN0cmluZywgY2xhc3NOYW1lOiBzdHJpbmcsIGphdmFDbGFzc05hbWU6IHN0cmluZyB9PiA9IFtcclxuICAgIHsgaW5kZXg6IDAsIHRleHQ6ICflrZfnrKbkuLInLCB2YWx1ZTogVk1QYXJhbWV0ZXJUeXBlLlN0cmluZywgYXNzZW1ibHk6ICdtc2NvcmxpYi5kbGwnLCBjbGFzc05hbWU6ICdTeXN0ZW0uU3RyaW5nJywgamF2YUNsYXNzTmFtZTogJ2phdmEubGFuZy5TdHJpbmcnIH0sXHJcbiAgICB7IGluZGV4OiAxLCB0ZXh0OiAn5biD5bCU5Z6LJywgdmFsdWU6IFZNUGFyYW1ldGVyVHlwZS5Cb29sZWFuLCBhc3NlbWJseTogJ21zY29ybGliLmRsbCcsIGNsYXNzTmFtZTogJ1N5c3RlbS5Cb29sZWFuJywgamF2YUNsYXNzTmFtZTogJ2phdmEubGFuZy5Cb29sZWFuJyB9LFxyXG4gICAgeyBpbmRleDogMiwgdGV4dDogJ+aVtOaVsCcsIHZhbHVlOiBWTVBhcmFtZXRlclR5cGUuSW50MzIsIGFzc2VtYmx5OiAnbXNjb3JsaWIuZGxsJywgY2xhc3NOYW1lOiAnU3lzdGVtLkludDMyJywgamF2YUNsYXNzTmFtZTogJ2phdmEubGFuZy5JbnRlZ2VyJyB9LFxyXG4gICAgeyBpbmRleDogMywgdGV4dDogJ+a1rueCueaVsCcsIHZhbHVlOiBWTVBhcmFtZXRlclR5cGUuRGVjaW1hbCwgYXNzZW1ibHk6ICdtc2NvcmxpYi5kbGwnLCBjbGFzc05hbWU6ICdTeXN0ZW0uU2luZ2xlJywgamF2YUNsYXNzTmFtZTogJ2phdmEubWF0aC5CaWdEZWNpbWFsJyB9LFxyXG4gICAgeyBpbmRleDogNCwgdGV4dDogJ+WPjOa1rueCueaVsCcsIHZhbHVlOiBWTVBhcmFtZXRlclR5cGUuRG91YmxlLCBhc3NlbWJseTogJ21zY29ybGliLmRsbCcsIGNsYXNzTmFtZTogJ1N5c3RlbS5Eb3VibGUnLCBqYXZhQ2xhc3NOYW1lOiAnamF2YS5sYW5nLkRvdWJsZScgfSxcclxuICAgIHsgaW5kZXg6IDUsIHRleHQ6ICfml7bpl7TnsbvlnosnLCB2YWx1ZTogVk1QYXJhbWV0ZXJUeXBlLkRhdGVUaW1lLCBhc3NlbWJseTogJ21zY29ybGliLmRsbCcsIGNsYXNzTmFtZTogJ1N5c3RlbS5EYXRlVGltZScsIGphdmFDbGFzc05hbWU6ICdqYXZhLnV0aWwuRGF0ZScgfSxcclxuICAgIHsgaW5kZXg6IDYsIHRleHQ6ICflr7nosaHnsbvlnosnLCB2YWx1ZTogVk1QYXJhbWV0ZXJUeXBlLk9iamVjdCwgYXNzZW1ibHk6ICdtc2NvcmxpYi5kbGwnLCBjbGFzc05hbWU6ICdTeXN0ZW0uT2JqZWN0JywgamF2YUNsYXNzTmFtZTogJ2phdmEubGFuZy5PYmplY3QnIH0sXHJcbiAgICB7IGluZGV4OiA3LCB0ZXh0OiAn6Ieq5a6a5LmJ57G75Z6LJywgdmFsdWU6IFZNUGFyYW1ldGVyVHlwZS5DdXN0b20sIGFzc2VtYmx5OiAnJywgY2xhc3NOYW1lOiAnJywgamF2YUNsYXNzTmFtZTogJycgIH0sXHJcbl07XHJcbiJdfQ==