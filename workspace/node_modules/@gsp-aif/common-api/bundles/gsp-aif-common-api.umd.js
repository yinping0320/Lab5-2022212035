(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@gsp-aif/common-api', ['exports'], factory) :
    (factory((global['gsp-aif'] = global['gsp-aif'] || {}, global['gsp-aif']['common-api'] = {})));
}(this, (function (exports) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var AifCallType = {
        /**
         * 默认值
         */
        Default: 0,
        /**
         * 同步调用
         */
        Sync: 1,
        /**
         * 异步调用
         */
        Async: 2,
    };
    AifCallType[AifCallType.Default] = 'Default';
    AifCallType[AifCallType.Sync] = 'Sync';
    AifCallType[AifCallType.Async] = 'Async';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var AifBizActionType = {
        /**
         * 生单
         */
        Creation: 1,
        /**
         * 回写
         */
        Writeback: 2,
    };
    AifBizActionType[AifBizActionType.Creation] = 'Creation';
    AifBizActionType[AifBizActionType.Writeback] = 'Writeback';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 实体抽象类
     * @abstract
     */
    var /**
     * 实体抽象类
     * @abstract
     */ EntityBase = /** @class */ (function () {
        function EntityBase() {
        }
        return EntityBase;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 元数据实体抽象类
     * @abstract
     */
    var /**
     * 元数据实体抽象类
     * @abstract
     */ MetadataEntityBase = /** @class */ (function (_super) {
        __extends(MetadataEntityBase, _super);
        function MetadataEntityBase() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return MetadataEntityBase;
    }(EntityBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 业务动作实体类
     */
    var /**
     * 业务动作实体类
     */ AifBizActionEntity = /** @class */ (function (_super) {
        __extends(AifBizActionEntity, _super);
        function AifBizActionEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AifBizActionEntity;
    }(MetadataEntityBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 业务场景图实体类
     */
    var /**
     * 业务场景图实体类
     */ AifBizFlowchartEntity = /** @class */ (function (_super) {
        __extends(AifBizFlowchartEntity, _super);
        function AifBizFlowchartEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AifBizFlowchartEntity;
    }(MetadataEntityBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 业务事件实体类
     */
    var /**
     * 业务事件实体类
     */ AifBizEventEntity = /** @class */ (function (_super) {
        __extends(AifBizEventEntity, _super);
        function AifBizEventEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AifBizEventEntity;
    }(MetadataEntityBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 点到点元数据实体抽象类
     * @abstract
     */
    var /**
     * 点到点元数据实体抽象类
     * @abstract
     */ P2PMetadataEntityBase = /** @class */ (function (_super) {
        __extends(P2PMetadataEntityBase, _super);
        function P2PMetadataEntityBase() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return P2PMetadataEntityBase;
    }(MetadataEntityBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 映射规则实体抽象类
     * @abstract
     */
    var /**
     * 映射规则实体抽象类
     * @abstract
     */ MappingEntity = /** @class */ (function (_super) {
        __extends(MappingEntity, _super);
        function MappingEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return MappingEntity;
    }(P2PMetadataEntityBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 生单规则实体类
     */
    var /**
     * 生单规则实体类
     */ AifCreationRuleEntity = /** @class */ (function (_super) {
        __extends(AifCreationRuleEntity, _super);
        function AifCreationRuleEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AifCreationRuleEntity;
    }(MappingEntity));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 回写规则实体类
     */
    var /**
     * 回写规则实体类
     */ AifWritebackRuleEntity = /** @class */ (function (_super) {
        __extends(AifWritebackRuleEntity, _super);
        function AifWritebackRuleEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AifWritebackRuleEntity;
    }(MappingEntity));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 业务流程实体抽象类
     * @abstract
     */
    var /**
     * 业务流程实体抽象类
     * @abstract
     */ BizProcessEntity = /** @class */ (function (_super) {
        __extends(BizProcessEntity, _super);
        function BizProcessEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BizProcessEntity;
    }(P2PMetadataEntityBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 生单流程实体类
     */
    var /**
     * 生单流程实体类
     */ AifCreationProcessEntity = /** @class */ (function (_super) {
        __extends(AifCreationProcessEntity, _super);
        function AifCreationProcessEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AifCreationProcessEntity;
    }(BizProcessEntity));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * 回写流程实体类
     */
    var /**
     * 回写流程实体类
     */ AifWritebackProcessEntity = /** @class */ (function (_super) {
        __extends(AifWritebackProcessEntity, _super);
        function AifWritebackProcessEntity() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AifWritebackProcessEntity;
    }(BizProcessEntity));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.AifCallType = AifCallType;
    exports.AifBizActionType = AifBizActionType;
    exports.AifBizActionEntity = AifBizActionEntity;
    exports.AifBizFlowchartEntity = AifBizFlowchartEntity;
    exports.AifBizEventEntity = AifBizEventEntity;
    exports.AifCreationRuleEntity = AifCreationRuleEntity;
    exports.AifWritebackRuleEntity = AifWritebackRuleEntity;
    exports.AifCreationProcessEntity = AifCreationProcessEntity;
    exports.AifWritebackProcessEntity = AifWritebackProcessEntity;
    exports.ɵe = BizProcessEntity;
    exports.ɵb = EntityBase;
    exports.ɵc = MappingEntity;
    exports.ɵa = MetadataEntityBase;
    exports.ɵd = P2PMetadataEntityBase;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=gsp-aif-common-api.umd.js.map