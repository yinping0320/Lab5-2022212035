import { OnInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { SelectableSettings, PageChangeEvent, RowClassArgs, GridComponent, GridDataResult, DataStateChangeEvent } from '@progress/kendo-angular-grid';
import { State } from '@progress/kendo-data-query';
import { AifDocumentsTrackService } from '../service/aif-documents-track.service';
import { TrackType } from '../config/track-type.map';
/**
 * 单据追踪查询结果组件
 */
export declare class AifDocumentsTreeComponent implements OnInit, OnChanges {
    private trackService;
    /**单据记录Grid */
    stateOfDocuments: State;
    checkboxOnly: boolean;
    disabledState: boolean;
    selectedByFieldOfDocuments: string;
    selectableSettings: SelectableSettings;
    documentProperties: string[];
    gridDataOfDocuments: GridDataResult;
    selectedKeysOfDocuments: string[];
    /**单据分类导航 */
    treeDataOfBeTypeCodes: any[];
    selectedKeysOfTreeView: any[];
    gridDataOfBeTypes: any;
    selectedKeysOfBeTypes: string[];
    disabledStateOfBeTypes: boolean;
    selectedByFieldOfBeTypes: string;
    selectableSettingsOfBeTypes: SelectableSettings;
    selectBeType: string;
    /**常量映射 */
    documentsPropertyTextMap: {
        DataId: string;
        PrimaryValue: string;
        BeTypeCode: string;
        BeTypeName: string;
        TotalValue: string;
        TotalNumber: string;
    };
    trackDirectionTypeMap: {
        UnKnown: string;
        UpSearch: string;
        DownSearch: string;
    };
    trackDirectionType: string;
    /**父子组件通信传值 */
    trackClick: EventEmitter<any>;
    _documents: {
        [beType: string]: any[];
    };
    documents: any;
    _beTypeCodes: string[];
    beTypeCodes: any[];
    beTypeNames: {
        [beTypeCode: string]: string;
    };
    _trackType: TrackType;
    trackType: TrackType;
    constructor(trackService: AifDocumentsTrackService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    clickNode(obj: any): void;
    selectedKeysChangeOfDocuments(): void;
    selectedKeysChangeOfBeTypes(): void;
    pageChange(event: PageChangeEvent): void;
    loadItems(): any;
    getDocumentDetailInfo(): void;
    track(): void;
    rowCallback(context: RowClassArgs): {
        even: boolean;
        odd: boolean;
    };
    dataStateChangeOfDocuments(state: DataStateChangeEvent): void;
    gridOfDocuments: GridComponent;
    private isNullOrUndefined;
}
