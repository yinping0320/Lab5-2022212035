/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector, ComponentFactoryResolver } from "@angular/core";
import { HttpService } from "@ecp-caf/caf-common";
import { TrackType } from "../config/track-type.map";
import { AifDocumentsTrackManagerComponent } from "../aif-documents-track-manager/aif-documents-track-manager.component";
import { BsModalService } from '@farris/ui-modal';
import { AifDocumentsTrackManagerModuleConfig } from '../../entity/aif-documents-track-manager-module-config';
/**
 * 供内部和外部共同使用的单据追踪服务类，可输入参数自动查询并显示单据追踪模态框，也可以仅获取单据追踪查询结果
 */
var AifDocumentsTrackService = /** @class */ (function () {
    function AifDocumentsTrackService(http, modalService, injector, cfr, config) {
        this.http = http;
        this.modalService = modalService;
        this.injector = injector;
        this.cfr = cfr;
        this.serverIP = "";
        this.baseUrl = '/api/runtime/aif/v1.0/associationcontroller/';
        this.serverIP = config == null || config.serverIP == null ? "" : config.serverIP;
    }
    /**
     * 根据参数追踪并显示追踪模态框，注意：调用该方法时应同时引用TrackType枚举类
     * @param documentId 单据ID
     * @param beType 单据类型编号
     * @param trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查)
     */
    /**
     * 根据参数追踪并显示追踪模态框，注意：调用该方法时应同时引用TrackType枚举类
     * @param {?} documentId 单据ID
     * @param {?} beType 单据类型编号
     * @param {?} trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查)
     * @return {?}
     */
    AifDocumentsTrackService.prototype.showResultDialog = /**
     * 根据参数追踪并显示追踪模态框，注意：调用该方法时应同时引用TrackType枚举类
     * @param {?} documentId 单据ID
     * @param {?} beType 单据类型编号
     * @param {?} trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查)
     * @return {?}
     */
    function (documentId, beType, trackType) {
        /** @type {?} */
        var cmpF = this.cfr.resolveComponentFactory(AifDocumentsTrackManagerComponent);
        /** @type {?} */
        var cmpR = cmpF.create(this.injector);
        if (trackType != TrackType.DownSearch && trackType != TrackType.UpSearch) {
            trackType = TrackType.DownSearch;
        }
        cmpR.instance.searchFromOut(documentId, beType, trackType);
        return this.modalService.show(cmpR, {
            title: '追踪',
            width: 1100,
            height: 600,
            buttons: null,
            showButtons: false
        });
    };
    /**
     * 根据参数追踪并将查询结果返回，注意：调用该方法时应同时引用TrackType枚举类
     * @param documentId 单据ID
     * @param beType 单据类型编号
     * @param trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查),
     */
    /**
     * 根据参数追踪并将查询结果返回，注意：调用该方法时应同时引用TrackType枚举类
     * @param {?} documentId 单据ID
     * @param {?} beType 单据类型编号
     * @param {?} trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查),
     * @return {?}
     */
    AifDocumentsTrackService.prototype.getTrackedDocumentData = /**
     * 根据参数追踪并将查询结果返回，注意：调用该方法时应同时引用TrackType枚举类
     * @param {?} documentId 单据ID
     * @param {?} beType 单据类型编号
     * @param {?} trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查),
     * @return {?}
     */
    function (documentId, beType, trackType) {
        if (trackType == TrackType.DownSearch) {
            return this.getTargetData(beType, documentId);
        }
        else {
            return this.getSourceData(beType, documentId);
        }
    };
    /**
     * @private
     * @param {?} srcBeType
     * @param {?} srcDataId
     * @return {?}
     */
    AifDocumentsTrackService.prototype.getTargetData = /**
     * @private
     * @param {?} srcBeType
     * @param {?} srcDataId
     * @return {?}
     */
    function (srcBeType, srcDataId) {
        /** @type {?} */
        var url = this.serverIP + this.baseUrl + ("GetTargetData/" + srcBeType + "&" + srcDataId);
        return this.http.get(url);
    };
    /**
     * @private
     * @param {?} tarBeType
     * @param {?} tarDataId
     * @return {?}
     */
    AifDocumentsTrackService.prototype.getSourceData = /**
     * @private
     * @param {?} tarBeType
     * @param {?} tarDataId
     * @return {?}
     */
    function (tarBeType, tarDataId) {
        /** @type {?} */
        var url = this.serverIP + this.baseUrl + ("GetSourceData/" + tarBeType + "&" + tarDataId);
        return this.http.get(url);
    };
    AifDocumentsTrackService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AifDocumentsTrackService.ctorParameters = function () { return [
        { type: HttpService },
        { type: BsModalService },
        { type: Injector },
        { type: ComponentFactoryResolver },
        { type: AifDocumentsTrackManagerModuleConfig }
    ]; };
    return AifDocumentsTrackService;
}());
export { AifDocumentsTrackService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AifDocumentsTrackService.prototype.serverIP;
    /**
     * @type {?}
     * @private
     */
    AifDocumentsTrackService.prototype.baseUrl;
    /**
     * @type {?}
     * @private
     */
    AifDocumentsTrackService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    AifDocumentsTrackService.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    AifDocumentsTrackService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    AifDocumentsTrackService.prototype.cfr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWlmLWRvY3VtZW50cy10cmFjay5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1haWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvYWlmLWRvY3VtZW50cy10cmFjay9zZXJ2aWNlL2FpZi1kb2N1bWVudHMtdHJhY2suc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0UsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWxELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxzRUFBc0UsQ0FBQztBQUN6SCxPQUFPLEVBQUUsY0FBYyxFQUFjLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0sd0RBQXdELENBQUM7Ozs7QUFLOUc7SUFLSSxrQ0FBMkIsSUFBaUIsRUFBVSxZQUE0QixFQUFVLFFBQWtCLEVBQVUsR0FBNkIsRUFBRSxNQUE0QztRQUF4SyxTQUFJLEdBQUosSUFBSSxDQUFhO1FBQVUsaUJBQVksR0FBWixZQUFZLENBQWdCO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLFFBQUcsR0FBSCxHQUFHLENBQTBCO1FBSDdJLGFBQVEsR0FBVyxFQUFFLENBQUM7UUFDdEIsWUFBTyxHQUFHLDhDQUE4QyxDQUFDO1FBRzdELElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO0lBQ3JGLENBQUM7SUFFRDs7Ozs7T0FLRzs7Ozs7Ozs7SUFDSSxtREFBZ0I7Ozs7Ozs7SUFBdkIsVUFBd0IsVUFBa0IsRUFBRSxNQUFjLEVBQUUsU0FBb0I7O1lBQ3RFLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLGlDQUFpQyxDQUFDOztZQUMxRSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBRXZDLElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxVQUFVLElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQUU7WUFDdEUsU0FBUyxHQUFHLFNBQVMsQ0FBQyxVQUFVLENBQUM7U0FDcEM7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBRTNELE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2hDLEtBQUssRUFBRSxJQUFJO1lBQ1gsS0FBSyxFQUFFLElBQUk7WUFDWCxNQUFNLEVBQUUsR0FBRztZQUNYLE9BQU8sRUFBRSxJQUFJO1lBQ2IsV0FBVyxFQUFFLEtBQUs7U0FDckIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVEOzs7OztPQUtHOzs7Ozs7OztJQUNJLHlEQUFzQjs7Ozs7OztJQUE3QixVQUE4QixVQUFrQixFQUFFLE1BQWMsRUFBRSxTQUFvQjtRQUNsRixJQUFJLFNBQVMsSUFBSSxTQUFTLENBQUMsVUFBVSxFQUFFO1lBQ25DLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDakQ7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDakQ7SUFDTCxDQUFDOzs7Ozs7O0lBRU8sZ0RBQWE7Ozs7OztJQUFyQixVQUFzQixTQUFpQixFQUFFLFNBQWlCOztZQUNoRCxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxJQUFHLG1CQUFpQixTQUFTLFNBQUksU0FBVyxDQUFBO1FBQ3BGLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7Ozs7OztJQUVPLGdEQUFhOzs7Ozs7SUFBckIsVUFBc0IsU0FBaUIsRUFBRSxTQUFpQjs7WUFDaEQsR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sSUFBRyxtQkFBaUIsU0FBUyxTQUFJLFNBQVcsQ0FBQTtRQUNwRixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLENBQUM7O2dCQXhESixVQUFVOzs7O2dCQVZGLFdBQVc7Z0JBSVgsY0FBYztnQkFMRixRQUFRO2dCQUFFLHdCQUF3QjtnQkFNOUMsb0NBQW9DOztJQThEN0MsK0JBQUM7Q0FBQSxBQXpERCxJQXlEQztTQXhEWSx3QkFBd0I7Ozs7OztJQUNqQyw0Q0FBOEI7Ozs7O0lBQzlCLDJDQUFpRTs7Ozs7SUFFOUMsd0NBQXlCOzs7OztJQUFFLGdEQUFvQzs7Ozs7SUFBRSw0Q0FBMEI7Ozs7O0lBQUUsdUNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0b3IsIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEh0dHBTZXJ2aWNlIH0gZnJvbSBcIkBlY3AtY2FmL2NhZi1jb21tb25cIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzXCI7XHJcbmltcG9ydCB7IFRyYWNrVHlwZSB9IGZyb20gXCIuLi9jb25maWcvdHJhY2stdHlwZS5tYXBcIjtcclxuaW1wb3J0IHsgQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyQ29tcG9uZW50IH0gZnJvbSBcIi4uL2FpZi1kb2N1bWVudHMtdHJhY2stbWFuYWdlci9haWYtZG9jdW1lbnRzLXRyYWNrLW1hbmFnZXIuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlLCBCc01vZGFsUmVmIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IEFpZkRvY3VtZW50c1RyYWNrTWFuYWdlck1vZHVsZUNvbmZpZyB9IGZyb20gJy4uLy4uL2VudGl0eS9haWYtZG9jdW1lbnRzLXRyYWNrLW1hbmFnZXItbW9kdWxlLWNvbmZpZyc7XHJcblxyXG4vKipcclxuICog5L6b5YaF6YOo5ZKM5aSW6YOo5YWx5ZCM5L2/55So55qE5Y2V5o2u6L+96Liq5pyN5Yqh57G777yM5Y+v6L6T5YWl5Y+C5pWw6Ieq5Yqo5p+l6K+i5bm25pi+56S65Y2V5o2u6L+96Liq5qih5oCB5qGG77yM5Lmf5Y+v5Lul5LuF6I635Y+W5Y2V5o2u6L+96Liq5p+l6K+i57uT5p6cXHJcbiAqL1xyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBBaWZEb2N1bWVudHNUcmFja1NlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBzZXJ2ZXJJUDogc3RyaW5nID0gXCJcIjtcclxuICAgIHByaXZhdGUgYmFzZVVybCA9ICcvYXBpL3J1bnRpbWUvYWlmL3YxLjAvYXNzb2NpYXRpb25jb250cm9sbGVyLyc7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cFNlcnZpY2UsIHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBCc01vZGFsU2VydmljZSwgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIGNvbmZpZzogQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyTW9kdWxlQ29uZmlnKSB7XHJcbiAgICAgICAgdGhpcy5zZXJ2ZXJJUCA9IGNvbmZpZyA9PSBudWxsIHx8IGNvbmZpZy5zZXJ2ZXJJUCA9PSBudWxsID8gXCJcIiA6IGNvbmZpZy5zZXJ2ZXJJUDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOagueaNruWPguaVsOi/vei4quW5tuaYvuekuui/vei4quaooeaAgeahhu+8jOazqOaEj++8muiwg+eUqOivpeaWueazleaXtuW6lOWQjOaXtuW8leeUqFRyYWNrVHlwZeaemuS4vuexu1xyXG4gICAgICogQHBhcmFtIGRvY3VtZW50SWQg5Y2V5o2uSURcclxuICAgICAqIEBwYXJhbSBiZVR5cGUg5Y2V5o2u57G75Z6L57yW5Y+3XHJcbiAgICAgKiBAcGFyYW0gdHJhY2tUeXBlIOi/vei4quexu+Wei++8jOS7heWPr+eUqOKAnFVwU2VhcmNo4oCd77yI5LiK5p+l77yJ5oiW4oCcRG93blNlYXJjaOKAne+8iOS4i+afpSlcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNob3dSZXN1bHREaWFsb2coZG9jdW1lbnRJZDogc3RyaW5nLCBiZVR5cGU6IHN0cmluZywgdHJhY2tUeXBlOiBUcmFja1R5cGUpOiBCc01vZGFsUmVmIHtcclxuICAgICAgICBjb25zdCBjbXBGID0gdGhpcy5jZnIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyQ29tcG9uZW50KTtcclxuICAgICAgICBjb25zdCBjbXBSID0gY21wRi5jcmVhdGUodGhpcy5pbmplY3Rvcik7XHJcblxyXG4gICAgICAgIGlmICh0cmFja1R5cGUgIT0gVHJhY2tUeXBlLkRvd25TZWFyY2ggJiYgdHJhY2tUeXBlICE9IFRyYWNrVHlwZS5VcFNlYXJjaCkge1xyXG4gICAgICAgICAgICB0cmFja1R5cGUgPSBUcmFja1R5cGUuRG93blNlYXJjaDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNtcFIuaW5zdGFuY2Uuc2VhcmNoRnJvbU91dChkb2N1bWVudElkLCBiZVR5cGUsIHRyYWNrVHlwZSk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLm1vZGFsU2VydmljZS5zaG93KGNtcFIsIHtcclxuICAgICAgICAgICAgdGl0bGU6ICfov73ouKonLFxyXG4gICAgICAgICAgICB3aWR0aDogMTEwMCxcclxuICAgICAgICAgICAgaGVpZ2h0OiA2MDAsXHJcbiAgICAgICAgICAgIGJ1dHRvbnM6IG51bGwsXHJcbiAgICAgICAgICAgIHNob3dCdXR0b25zOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5qC55o2u5Y+C5pWw6L+96Liq5bm25bCG5p+l6K+i57uT5p6c6L+U5Zue77yM5rOo5oSP77ya6LCD55So6K+l5pa55rOV5pe25bqU5ZCM5pe25byV55SoVHJhY2tUeXBl5p6a5Li+57G7XHJcbiAgICAgKiBAcGFyYW0gZG9jdW1lbnRJZCDljZXmja5JRFxyXG4gICAgICogQHBhcmFtIGJlVHlwZSDljZXmja7nsbvlnovnvJblj7dcclxuICAgICAqIEBwYXJhbSB0cmFja1R5cGUg6L+96Liq57G75Z6L77yM5LuF5Y+v55So4oCcVXBTZWFyY2jigJ3vvIjkuIrmn6XvvInmiJbigJxEb3duU2VhcmNo4oCd77yI5LiL5p+lKSxcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldFRyYWNrZWREb2N1bWVudERhdGEoZG9jdW1lbnRJZDogc3RyaW5nLCBiZVR5cGU6IHN0cmluZywgdHJhY2tUeXBlOiBUcmFja1R5cGUpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgICAgIGlmICh0cmFja1R5cGUgPT0gVHJhY2tUeXBlLkRvd25TZWFyY2gpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0VGFyZ2V0RGF0YShiZVR5cGUsIGRvY3VtZW50SWQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldFNvdXJjZURhdGEoYmVUeXBlLCBkb2N1bWVudElkKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBnZXRUYXJnZXREYXRhKHNyY0JlVHlwZTogc3RyaW5nLCBzcmNEYXRhSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gdGhpcy5zZXJ2ZXJJUCArIHRoaXMuYmFzZVVybCArIGBHZXRUYXJnZXREYXRhLyR7c3JjQmVUeXBlfSYke3NyY0RhdGFJZH1gO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBnZXRTb3VyY2VEYXRhKHRhckJlVHlwZTogc3RyaW5nLCB0YXJEYXRhSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gdGhpcy5zZXJ2ZXJJUCArIHRoaXMuYmFzZVVybCArIGBHZXRTb3VyY2VEYXRhLyR7dGFyQmVUeXBlfSYke3RhckRhdGFJZH1gO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCk7XHJcbiAgICB9XHJcbn0iXX0=