/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { ButtonsModule } from '@progress/kendo-angular-buttons';
import { GridModule } from '@progress/kendo-angular-grid';
import { WindowModule, DialogModule } from '@progress/kendo-angular-dialog';
import { DropDownsModule } from '@progress/kendo-angular-dropdowns';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { SplitterModule } from '@progress/kendo-angular-layout';
import { AifDocumentsTrackService } from './service/aif-documents-track.service';
import { HttpService, SessionService } from '@ecp-caf/caf-common';
import { AifDocumentsTrackManagerComponent } from './aif-documents-track-manager/aif-documents-track-manager.component';
import { AifDocumentsTreeComponent } from './aif-documents-tree/aif-documents-tree.component';
import { ModalModule } from '@farris/ui-modal';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { AifDocumentsTrackManagerModuleConfig } from '../entity/aif-documents-track-manager-module-config';
var ɵ0 = {};
var AifDocumentsTrackManagerModule = /** @class */ (function () {
    function AifDocumentsTrackManagerModule() {
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    AifDocumentsTrackManagerModule.forRoot = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        return {
            "ngModule": AifDocumentsTrackManagerModule,
            "providers": [
                { provide: AifDocumentsTrackManagerModuleConfig, useValue: config || {} }
            ]
        };
    };
    AifDocumentsTrackManagerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        HttpClientModule,
                        FormsModule,
                        ReactiveFormsModule,
                        ButtonsModule,
                        GridModule,
                        WindowModule,
                        DropDownsModule,
                        DialogModule,
                        TreeViewModule,
                        SplitterModule,
                        GridModule,
                        ModalModule.forRoot(),
                        FarrisDialogModule,
                    ],
                    providers: [
                        SessionService,
                        HttpService,
                        { provide: AifDocumentsTrackManagerModuleConfig, useValue: ɵ0 },
                        AifDocumentsTrackService,
                    ],
                    declarations: [
                        AifDocumentsTrackManagerComponent,
                        AifDocumentsTreeComponent,
                    ],
                    bootstrap: [
                        AifDocumentsTrackManagerComponent
                    ],
                    entryComponents: [
                        AifDocumentsTrackManagerComponent
                    ],
                    exports: [
                        AifDocumentsTrackManagerComponent
                    ],
                },] }
    ];
    return AifDocumentsTrackManagerModule;
}());
export { AifDocumentsTrackManagerModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWlmLWRvY3VtZW50cy10cmFjay1tYW5hZ2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtYWlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2FpZi1kb2N1bWVudHMtdHJhY2svYWlmLWRvY3VtZW50cy10cmFjay1tYW5hZ2VyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDaEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDaEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDakYsT0FBTyxFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxxRUFBcUUsQ0FBQztBQUN4SCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUM5RixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0scURBQXFELENBQUM7U0F1QjVDLEVBQUU7QUFwQmpFO0lBQUE7SUErQ0EsQ0FBQzs7Ozs7SUFUZSxzQ0FBTzs7OztJQUFyQixVQUFzQixNQUE2QztRQUVqRSxPQUFPO1lBQ0wsVUFBVSxFQUFFLDhCQUE4QjtZQUMxQyxXQUFXLEVBQUU7Z0JBQ1gsRUFBRSxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsUUFBUSxFQUFFLE1BQU0sSUFBSSxFQUFFLEVBQUU7YUFDMUU7U0FDRixDQUFDO0lBQ0osQ0FBQzs7Z0JBOUNGLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixnQkFBZ0I7d0JBQ2hCLFdBQVc7d0JBQ1gsbUJBQW1CO3dCQUNuQixhQUFhO3dCQUNiLFVBQVU7d0JBQ1YsWUFBWTt3QkFDWixlQUFlO3dCQUNmLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxjQUFjO3dCQUNkLFVBQVU7d0JBQ1YsV0FBVyxDQUFDLE9BQU8sRUFBRTt3QkFDckIsa0JBQWtCO3FCQUNuQjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsY0FBYzt3QkFDZCxXQUFXO3dCQUNYLEVBQUUsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLFFBQVEsSUFBSSxFQUFFO3dCQUMvRCx3QkFBd0I7cUJBQ3pCO29CQUNELFlBQVksRUFBRTt3QkFDWixpQ0FBaUM7d0JBQ2pDLHlCQUF5QjtxQkFDMUI7b0JBQ0QsU0FBUyxFQUFFO3dCQUNULGlDQUFpQztxQkFDbEM7b0JBQ0QsZUFBZSxFQUFFO3dCQUNmLGlDQUFpQztxQkFDbEM7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGlDQUFpQztxQkFDbEM7aUJBQ0Y7O0lBV0QscUNBQUM7Q0FBQSxBQS9DRCxJQStDQztTQVZZLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBCdXR0b25zTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItYnV0dG9ucyc7XHJcbmltcG9ydCB7IEdyaWRNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1ncmlkJztcclxuaW1wb3J0IHsgV2luZG93TW9kdWxlLCBEaWFsb2dNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1kaWFsb2cnO1xyXG5pbXBvcnQgeyBEcm9wRG93bnNNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1kcm9wZG93bnMnO1xyXG5pbXBvcnQgeyBUcmVlVmlld01vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLXRyZWV2aWV3JztcclxuaW1wb3J0IHsgU3BsaXR0ZXJNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sYXlvdXQnO1xyXG5pbXBvcnQgeyBBaWZEb2N1bWVudHNUcmFja1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvYWlmLWRvY3VtZW50cy10cmFjay5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UsIFNlc3Npb25TZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcbmltcG9ydCB7IEFpZkRvY3VtZW50c1RyYWNrTWFuYWdlckNvbXBvbmVudCB9IGZyb20gJy4vYWlmLWRvY3VtZW50cy10cmFjay1tYW5hZ2VyL2FpZi1kb2N1bWVudHMtdHJhY2stbWFuYWdlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBaWZEb2N1bWVudHNUcmVlQ29tcG9uZW50IH0gZnJvbSAnLi9haWYtZG9jdW1lbnRzLXRyZWUvYWlmLWRvY3VtZW50cy10cmVlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IEZhcnJpc0RpYWxvZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGlhbG9nJztcclxuaW1wb3J0IHsgQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyTW9kdWxlQ29uZmlnIH0gZnJvbSAnLi4vZW50aXR5L2FpZi1kb2N1bWVudHMtdHJhY2stbWFuYWdlci1tb2R1bGUtY29uZmlnJztcclxuXHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEh0dHBDbGllbnRNb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICBCdXR0b25zTW9kdWxlLFxyXG4gICAgR3JpZE1vZHVsZSxcclxuICAgIFdpbmRvd01vZHVsZSxcclxuICAgIERyb3BEb3duc01vZHVsZSxcclxuICAgIERpYWxvZ01vZHVsZSxcclxuICAgIFRyZWVWaWV3TW9kdWxlLFxyXG4gICAgU3BsaXR0ZXJNb2R1bGUsXHJcbiAgICBHcmlkTW9kdWxlLFxyXG4gICAgTW9kYWxNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgRmFycmlzRGlhbG9nTW9kdWxlLFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBTZXNzaW9uU2VydmljZSxcclxuICAgIEh0dHBTZXJ2aWNlLFxyXG4gICAgeyBwcm92aWRlOiBBaWZEb2N1bWVudHNUcmFja01hbmFnZXJNb2R1bGVDb25maWcsIHVzZVZhbHVlOiB7fSB9LFxyXG4gICAgQWlmRG9jdW1lbnRzVHJhY2tTZXJ2aWNlLFxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBBaWZEb2N1bWVudHNUcmFja01hbmFnZXJDb21wb25lbnQsXHJcbiAgICBBaWZEb2N1bWVudHNUcmVlQ29tcG9uZW50LFxyXG4gIF0sXHJcbiAgYm9vdHN0cmFwOiBbXHJcbiAgICBBaWZEb2N1bWVudHNUcmFja01hbmFnZXJDb21wb25lbnRcclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW1xyXG4gICAgQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyQ29tcG9uZW50XHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBBaWZEb2N1bWVudHNUcmFja01hbmFnZXJDb21wb25lbnRcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyTW9kdWxlIHtcclxuICBwdWJsaWMgc3RhdGljIGZvclJvb3QoY29uZmlnPzogQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyTW9kdWxlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgXCJuZ01vZHVsZVwiOiBBaWZEb2N1bWVudHNUcmFja01hbmFnZXJNb2R1bGUsXHJcbiAgICAgIFwicHJvdmlkZXJzXCI6IFtcclxuICAgICAgICB7IHByb3ZpZGU6IEFpZkRvY3VtZW50c1RyYWNrTWFuYWdlck1vZHVsZUNvbmZpZywgdXNlVmFsdWU6IGNvbmZpZyB8fCB7fSB9XHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59Il19