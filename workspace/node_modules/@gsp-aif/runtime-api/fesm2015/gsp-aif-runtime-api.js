import { WindowModule, DialogModule } from '@progress/kendo-angular-dialog';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { GridModule } from '@progress/kendo-angular-grid';
import { process } from '@progress/kendo-data-query';
import { Subject } from 'rxjs';
import { Injectable, Injector, ComponentFactoryResolver, Component, Input, Output, ViewChild, EventEmitter, ViewEncapsulation, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { ButtonsModule } from '@progress/kendo-angular-buttons';
import { DropDownsModule } from '@progress/kendo-angular-dropdowns';
import { SplitterModule } from '@progress/kendo-angular-layout';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpService, SessionService } from '@ecp-caf/caf-common';
import { BsModalService, ModalModule } from '@farris/ui-modal';
import { FarrisDialogModule } from '@farris/ui-dialog';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 生单关联实体类
 */
class AifAssociationEntity {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 查询生单规则请求体参数类
 */
class GetCreationRuleArgs {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 单据追踪组件配置
 */
class AifDocumentsTrackManagerModuleConfig {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 拉式生单生单规则选择组件配置
 */
class AifPullSelectCreationRuleModuleConfig {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 推式生单生单规则选择组件配置
 */
class AifPushSelectCreationRuleModuleConfig {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const TrackType = {
    UpSearch: "UpSearch",
    DownSearch: "DownSearch",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 供内部和外部共同使用的单据追踪服务类，可输入参数自动查询并显示单据追踪模态框，也可以仅获取单据追踪查询结果
 */
class AifDocumentsTrackService {
    /**
     * @param {?} http
     * @param {?} modalService
     * @param {?} injector
     * @param {?} cfr
     * @param {?} config
     */
    constructor(http, modalService, injector, cfr, config) {
        this.http = http;
        this.modalService = modalService;
        this.injector = injector;
        this.cfr = cfr;
        this.serverIP = "";
        this.baseUrl = '/api/runtime/aif/v1.0/associationcontroller/';
        this.serverIP = config == null || config.serverIP == null ? "" : config.serverIP;
    }
    /**
     * 根据参数追踪并显示追踪模态框，注意：调用该方法时应同时引用TrackType枚举类
     * @param {?} documentId 单据ID
     * @param {?} beType 单据类型编号
     * @param {?} trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查)
     * @return {?}
     */
    showResultDialog(documentId, beType, trackType) {
        /** @type {?} */
        const cmpF = this.cfr.resolveComponentFactory(AifDocumentsTrackManagerComponent);
        /** @type {?} */
        const cmpR = cmpF.create(this.injector);
        if (trackType != TrackType.DownSearch && trackType != TrackType.UpSearch) {
            trackType = TrackType.DownSearch;
        }
        cmpR.instance.searchFromOut(documentId, beType, trackType);
        return this.modalService.show(cmpR, {
            title: '追踪',
            width: 1100,
            height: 600,
            buttons: null,
            showButtons: false
        });
    }
    /**
     * 根据参数追踪并将查询结果返回，注意：调用该方法时应同时引用TrackType枚举类
     * @param {?} documentId 单据ID
     * @param {?} beType 单据类型编号
     * @param {?} trackType 追踪类型，仅可用“UpSearch”（上查）或“DownSearch”（下查),
     * @return {?}
     */
    getTrackedDocumentData(documentId, beType, trackType) {
        if (trackType == TrackType.DownSearch) {
            return this.getTargetData(beType, documentId);
        }
        else {
            return this.getSourceData(beType, documentId);
        }
    }
    /**
     * @private
     * @param {?} srcBeType
     * @param {?} srcDataId
     * @return {?}
     */
    getTargetData(srcBeType, srcDataId) {
        /** @type {?} */
        const url = this.serverIP + this.baseUrl + `GetTargetData/${srcBeType}&${srcDataId}`;
        return this.http.get(url);
    }
    /**
     * @private
     * @param {?} tarBeType
     * @param {?} tarDataId
     * @return {?}
     */
    getSourceData(tarBeType, tarDataId) {
        /** @type {?} */
        const url = this.serverIP + this.baseUrl + `GetSourceData/${tarBeType}&${tarDataId}`;
        return this.http.get(url);
    }
}
AifDocumentsTrackService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
AifDocumentsTrackService.ctorParameters = () => [
    { type: HttpService },
    { type: BsModalService },
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: AifDocumentsTrackManagerModuleConfig }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 单据追踪类型的文本映射，UpSearch为上查，DownSearch为下查，外部可用
 * @type {?}
 */
const TrackTypeTextMap = {
    UpSearch: "上查",
    DownSearch: "下查",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 单据追踪主组件
 */
class AifDocumentsTrackManagerComponent {
    /**
     * @param {?} trackService
     */
    constructor(trackService) {
        this.trackService = trackService;
        /**
         * 子组件显示控制
         */
        this.isHidden = true;
        this.isShowable = false;
        this.isResultEmpty = null;
        this.documentId = null;
        this.beTypeCode = null;
        this.selectedTrackType = null;
        this.trackTypes = [];
        /**
         * 传递给子组件的所选择的追踪方式
         */
        this.selectedTrackTypeToChildren = "";
        /**
         * 响应结果转化为组件内传输格式
         */
        this.beTypeCodes = [];
        this.documents = {};
        this.beTypeNames = {};
        //初始化追踪方式下拉框
        for (let item in TrackType) {
            this.trackTypes.push({ value: item, text: TrackTypeTextMap[item] });
        }
        //默认选择“下查”方式
        this.selectedTrackType = this.trackTypes[1].value;
        this.selectedTrackTypeToChildren = this.selectedTrackType;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
    }
    /**
     * @return {?}
     */
    search() {
        this.selectedTrackTypeToChildren = this.selectedTrackType;
        this.trackService.getTrackedDocumentData(this.documentId, this.beTypeCode, this.selectedTrackType).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            /** @type {?} */
            let tempDocuments = {};
            /** @type {?} */
            let tempBeTypeNames = {};
            /** @type {?} */
            let tempBeTypeCodes = [];
            if (this.isNullOrUndefined(data) == false && data.length > 0) {
                this.isResultEmpty = false;
                this.isShowable = true;
                this.isHidden = false;
                for (let item of data) {
                    //查询结果不为空时
                    if (this.isNullOrUndefined(tempDocuments[item.BeTypeCode]) == false) {
                        tempDocuments[item.BeTypeCode].push(item);
                    }
                    else {
                        tempBeTypeCodes.push(item.BeTypeCode);
                        tempBeTypeNames[item.BeTypeCode] = item.BeTypeName;
                        tempDocuments[item.BeTypeCode] = [item];
                    }
                }
            }
            else {
                //查询结果为空时
                this.isResultEmpty = true;
                this.isShowable = false;
                this.isHidden = true;
            }
            this.documents = tempDocuments;
            this.beTypeCodes = tempBeTypeCodes;
            this.beTypeNames = tempBeTypeNames;
        }));
    }
    /**
     * 为外部提供的方便递归调用的查询接口
     * @param {?} documentId
     * @param {?} beType
     * @param {?} trackType
     * @return {?}
     */
    searchFromOut(documentId, beType, trackType) {
        this.documentId = documentId;
        this.beTypeCode = beType;
        this.selectedTrackType = trackType;
        this.search();
    }
    /**
     * 从查询结果中选择单据继续追踪时，父组件接收到子组件传来的
     * 对象，并自动调用查询方法
     * @param {?} $event
     * @return {?}
     */
    trackGoingOn($event) {
        this.documentId = $event.documentId;
        this.beTypeCode = $event.beTypeCode;
        this.selectedTrackType = $event.trackType;
        this.search();
    }
    /**
     * @private
     * @param {?} arg
     * @return {?}
     */
    isNullOrUndefined(arg) {
        return arg == null;
    }
}
AifDocumentsTrackManagerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-aif-documents-track-manager',
                template: "<div class=\"d-flex g-main\">\r\n  <div class=\"col\">\r\n    <div class=\"g-main d-flex flex-column px-2\">\r\n      <!--\u4E3B\u5185\u5BB9\u533A-->\r\n      <div class=\"mb-1 pr-2 position-relative clearfix\">\r\n        <!-- <div class=\"\" style=\"\"> -->\r\n        <div class=\"position-relative\" [style.display]=\"'inherit'\">\r\n          <div class=\"form-inline row py-1\">\r\n            <div class=\"form-group col-sm-12 col-md-4 mb-1\">\r\n              <div class=\"input-group w-100\">\r\n                <div class=\"input-group-prepend\"><span class=\"input-group-text\">\u5355\u636EID</span></div>\r\n                <input class=\"form-control\" placeholder=\"\" name=\"documentId\" [(ngModel)]=\"documentId\" type=\"text\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-sm-12 col-md-4 mb-1\">\r\n                <div class=\"input-group w-100\">\r\n                  <div class=\"input-group-prepend\"><span class=\"input-group-text\">BE\u7C7B\u578B\u7F16\u53F7</span></div>\r\n                  <input class=\"form-control\" placeholder=\"\" name=\"beTypeCode\" [(ngModel)]=\"beTypeCode\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-sm-12 col-md-2 mb-1\">\r\n                <div class=\"input-group w-100\">\r\n                  <div class=\"input-group-prepend\"><span class=\"input-group-text\">\u8FFD\u8E2A\u65B9\u5F0F</span></div>\r\n                  <select [(ngModel)]=\"selectedTrackType\" class=\"form-control\">\r\n                      <option *ngFor=\"let tt of trackTypes\" value=\"{{tt.value}}\">{{tt.text}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\" col-sm-12 col-md-1 mb-1\">\r\n              <div class=\"w-100\">\r\n                <button class=\"k-button btn btn-sm btn-default\" type=\"button\" (click)=\"search()\">\u67E5\u8BE2</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"k-form-field\" style=\"color:red; font-size: unset;\" *ngIf=\"isResultEmpty==true\">\u67E5\u8BE2\u7ED3\u679C\u4E3A\u7A7A</div>\r\n      </div>\r\n\r\n      <div class=\"flex-auto k-form-field pb-1\">\r\n        <app-aif-documents-tree [documents]=\"documents\" [beTypeNames]=\"beTypeNames\" [beTypeCodes]=\"beTypeCodes\"\r\n          [trackType]=\"selectedTrackTypeToChildren\" (trackClick)=\"trackGoingOn($event)\">\r\n        </app-aif-documents-tree>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
AifDocumentsTrackManagerComponent.ctorParameters = () => [
    { type: AifDocumentsTrackService }
];
AifDocumentsTrackManagerComponent.propDecorators = {
    documentId: [{ type: Input }],
    beTypeCode: [{ type: Input }],
    selectedTrackType: [{ type: Input }],
    trackTypes: [{ type: Output }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 预置单据属性与显示文本的映射，外部可用并可以对该对象进行修改
 * @type {?}
 */
let AifDocumentsPropertyTextMap = {
    DataId: "ID",
    PrimaryValue: "ID",
    BeTypeCode: "单据类型编号",
    BeTypeName: "单据类型名称",
    TotalValue: "总价",
    TotalNumber: "总数量"
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 供查询结果组件使用的文本映射，上查时查询结果分类表头为上游单据，下查时表头为下游单据，不能识别时显示单据类型
 * @type {?}
 */
const TrackDirectionTypeMap = {
    UnKnown: "单据类型",
    UpSearch: "上游单据",
    DownSearch: "下游单据",
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 单据追踪查询结果组件
 */
class AifDocumentsTreeComponent {
    /**
     * @param {?} trackService
     */
    constructor(trackService) {
        this.trackService = trackService;
        /**
         * 单据记录Grid
         */
        this.stateOfDocuments = {
            skip: 0,
            take: 30,
        };
        this.checkboxOnly = false;
        this.disabledState = true;
        this.selectedByFieldOfDocuments = "";
        this.selectableSettings = {
            checkboxOnly: this.checkboxOnly,
            mode: "single"
        };
        this.documentProperties = [];
        this.gridDataOfDocuments = null;
        this.selectedKeysOfDocuments = new Array();
        /**
         * 单据分类导航
         */
        this.treeDataOfBeTypeCodes = [];
        this.selectedKeysOfTreeView = ['0'];
        this.gridDataOfBeTypes = [];
        this.selectedKeysOfBeTypes = new Array();
        this.disabledStateOfBeTypes = true;
        this.selectedByFieldOfBeTypes = "BeTypeCode";
        this.selectableSettingsOfBeTypes = {
            checkboxOnly: this.checkboxOnly,
            mode: "single"
        };
        this.selectBeType = "";
        /**
         * 常量映射
         */
        this.documentsPropertyTextMap = AifDocumentsPropertyTextMap;
        this.trackDirectionTypeMap = TrackDirectionTypeMap;
        this.trackDirectionType = TrackDirectionTypeMap.UnKnown;
        /**
         * 父子组件通信传值
         */
        this.trackClick = new EventEmitter();
        this._documents = {};
        this._beTypeCodes = [];
        this.beTypeNames = {};
    }
    /**
     * @param {?} documents
     * @return {?}
     */
    set documents(documents) {
        this._documents = documents;
    }
    /**
     * @return {?}
     */
    get documents() {
        return this._documents;
    }
    /**
     * @param {?} beTypeCodes
     * @return {?}
     */
    set beTypeCodes(beTypeCodes) {
        this._beTypeCodes = beTypeCodes;
        /**重置数据源 */
        this.treeDataOfBeTypeCodes = [];
        this.documentProperties = [];
        this.gridDataOfBeTypes = [];
        this.selectedKeysOfBeTypes = [];
        this.gridDataOfDocuments = process([], this.stateOfDocuments);
        if (this.isNullOrUndefined(beTypeCodes) == false && beTypeCodes.length > 0) {
            this.selectBeType = beTypeCodes[0];
            this.selectedKeysOfBeTypes.push(beTypeCodes[0]);
        }
        for (let item of beTypeCodes) {
            // this.data[0].items.push({text:item});
            this.gridDataOfBeTypes.push({ BeTypeCode: item, BeTypeName: this.beTypeNames[item], Number: this.documents[item].length });
            this.treeDataOfBeTypeCodes.push({ text: this.beTypeNames[item], value: item });
        }
        if (this.isNullOrUndefined(this.documents) == false && this.isNullOrUndefined(this.documents[this.selectBeType]) == false && this.documents[this.selectBeType].length > 0) {
            this.loadItems();
        }
    }
    /**
     * @return {?}
     */
    get beTypeCodes() {
        return this._beTypeCodes;
    }
    /**
     * @param {?} trackType
     * @return {?}
     */
    set trackType(trackType) {
        this._trackType = trackType;
        this.trackDirectionType = this.trackDirectionTypeMap[this._trackType];
    }
    /**
     * @return {?}
     */
    get trackType() {
        return this._trackType;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        console.log(changes);
        if (this.isNullOrUndefined(changes.beTypeCodes) == false) {
            this.beTypeCodes = changes.beTypeCodes.currentValue;
        }
        if (this.isNullOrUndefined(changes.documents) == false) {
            this.documents = changes.documents.currentValue;
            // this.gridDataOfDocuments=process(this.documents,this.stateOfDocuments);
        }
        if (this.isNullOrUndefined(changes.trackType) == false) {
            this.trackType = changes.trackType.currentValue;
        }
        if (this.isNullOrUndefined(changes.beTypeNames) == false) {
            this.beTypeNames = changes.beTypeNames.currentValue;
        }
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    clickNode(obj) {
        /** @type {?} */
        let item = obj.item.dataItem;
        if (this.isNullOrUndefined(item.items) == false) {
            return;
        }
        console.log(item.text);
        this.selectBeType = item.value;
        this.loadItems();
        this.selectedKeysOfDocuments.splice(0, this.selectedKeysOfDocuments.length);
    }
    /**
     * @return {?}
     */
    selectedKeysChangeOfDocuments() {
        if (this.selectedKeysOfDocuments.length > 0) {
            this.disabledState = false;
        }
        else {
            this.disabledState = true;
        }
    }
    /**
     * @return {?}
     */
    selectedKeysChangeOfBeTypes() {
        console.log(this.selectedKeysOfBeTypes);
        if (this.selectedKeysOfBeTypes.length > 0) {
            this.disabledStateOfBeTypes = false;
            this.selectBeType = this.selectedKeysOfBeTypes[0];
            //页数置为初始值0
            this.stateOfDocuments.skip = 0;
            this.loadItems();
            //清空已选中的行
            this.selectedKeysOfDocuments.splice(0, this.selectedKeysOfDocuments.length);
        }
        else {
            this.disabledStateOfBeTypes = true;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    pageChange(event) {
        this.stateOfDocuments.skip = event.skip;
        this.loadItems();
    }
    /**
     * @return {?}
     */
    loadItems() {
        // let temp = this.documents[this.selectBeType].slice(this.stateOfDocuments.skip, this.stateOfDocuments.skip + this.stateOfDocuments.take);
        this.documentProperties.splice(0, this.documentProperties.length);
        for (let index in this.documents[this.selectBeType][0]) {
            this.documentProperties.push(index);
        }
        this.selectedByFieldOfDocuments = this.documentProperties[0];
        this.gridDataOfDocuments = process(this.documents[this.selectBeType], this.stateOfDocuments);
        // this.fitColumns();
        // this.gridDataOfDocuments = {
        //   data: temp,
        //   total: this.documents[this.selectBeType].length
        // };
    }
    /**
     * @return {?}
     */
    getDocumentDetailInfo() {
        if (this.selectedKeysOfDocuments.length == 0) {
            alert("请选择一行数据");
            return;
        }
        console.log(this.selectedKeysOfDocuments);
        alert("详细信息窗口");
    }
    /**
     * @return {?}
     */
    track() {
        if (this.selectedKeysOfDocuments.length == 0) {
            alert("请选择一行数据");
            return;
        }
        this.trackService.showResultDialog(this.selectedKeysOfDocuments[0], this.selectBeType, this.trackType);
    }
    /**
     * @param {?} context
     * @return {?}
     */
    rowCallback(context) {
        /** @type {?} */
        const isEven = context.index % 2 == 0;
        return {
            even: isEven,
            odd: !isEven
        };
    }
    /**
     * @param {?} state
     * @return {?}
     */
    dataStateChangeOfDocuments(state) {
        this.stateOfDocuments = state;
        this.gridDataOfDocuments = process(this.documents[this.selectBeType], this.stateOfDocuments);
    }
    // 自动调整列宽
    // fitColumns(): void {
    //   this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {
    //     this.gridOfDocuments.autoFitColumns();
    //     // console.log("this.gridOfDocuments.autoFitColumns()");
    //   });
    // }
    /**
     * @private
     * @param {?} arg
     * @return {?}
     */
    isNullOrUndefined(arg) {
        return arg == null;
    }
}
AifDocumentsTreeComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-aif-documents-tree',
                encapsulation: ViewEncapsulation.None,
                template: "<!-- <div class=\"d-flex\" style=\"padding: 5px;\"> -->\r\n<!-- <div class=\"row\"> -->\r\n<kendo-splitter orientation=\"horizontal\" style=\"height:100%;\">\r\n  <kendo-splitter-pane [collapsible]=\"true\" size=\"16%\" style=\"padding:0 1rem 1rem 1rem;\">\r\n    <div class=\"k-button-group\" style=\"height:2.5rem;\">\r\n      <label for=\"\" style=\"margin:auto 0 auto 0;\">{{trackDirectionType}}</label>\r\n    </div>\r\n    <kendo-grid [data]=\"gridDataOfBeTypes\" [resizable]=\"true\" [selectable]=\"selectableSettingsOfBeTypes\"\r\n      [kendoGridSelectBy]=\"selectedByFieldOfBeTypes\" [selectedKeys]=\"selectedKeysOfBeTypes\" (selectedKeysChange)=\"selectedKeysChangeOfBeTypes()\">\r\n      <kendo-grid-column field=\"BeTypeName\" title=\"\u540D\u79F0\"></kendo-grid-column>\r\n      <!-- <kendo-grid-column field=\"BeTypeCode\" title=\"\u7F16\u53F7\"></kendo-grid-column> -->\r\n      <kendo-grid-column field=\"Number\" title=\"\u6570\u91CF\"></kendo-grid-column>\r\n    </kendo-grid>\r\n  </kendo-splitter-pane>\r\n  <kendo-splitter-pane style=\"padding:0 1rem 2rem 1rem;\">\r\n    <div class=\"k-button-group\" style=\"height:2.5rem;padding: 0.5rem 0 0.5rem 0;\">\r\n      <button hidden class=\"k-button btn btn-sm btn-default\" (click)=\"getDocumentDetailInfo()\">\u8BE6\u60C5</button>\r\n      <button class=\"k-button btn btn-sm ml-2 btn-default\" (click)=\"track()\">\u8FFD\u8E2A</button>\r\n    </div>\r\n\r\n    <kendo-grid class=\"\" #gridOfDocuments [data]=\"gridDataOfDocuments\" [pageable]=\"true\" [resizable]=\"true\" [pageSize]=\"stateOfDocuments.take\"\r\n      (pageChange)=\"pageChange($event)\" [skip]=\"stateOfDocuments.skip\" [selectable]=\"selectableSettings\"\r\n      [kendoGridSelectBy]=\"selectedByFieldOfDocuments\" [selectedKeys]=\"selectedKeysOfDocuments\" (selectedKeysChange)=\"selectedKeysChangeOfDocuments()\"\r\n      [sortable]=\"true\" [filterable]=\"true\" [sort]=\"stateOfDocuments.sort\" [filter]=\"stateOfDocuments.filter\"\r\n      (dataStateChange)=\"dataStateChangeOfDocuments($event)\">\r\n      <!-- <ng-template kendoGridToolbarTemplate>\r\n        <button type=\"button\" class=\"k-button btn btn-sm ml-2 btn-default\" kendoGridExcelCommand icon=\"file-excel\">Export\r\n          to Excel</button>\r\n      </ng-template> -->\r\n      <!-- <ng-template ngFor let-item [ngForOf]=\"documentProperties\" let-i=\"index\">\r\n        <kendo-grid-checkbox-column *ngIf=\"beTypeCodes&&beTypeCodes.length>0\" [width]=\"40\" [headerClass]=\"{'aif-grid-header': true}\"></kendo-grid-checkbox-column>\r\n        <kendo-grid-column [headerClass]=\"{'aif-grid-header': true}\" [field]=\"item\" [title]=\"documentsPropertyTextMap[item]||item\"></kendo-grid-column>\r\n      </ng-template> -->\r\n\r\n      <kendo-grid-checkbox-column [width]=\"40\" [headerClass]=\"{'aif-grid-header': true,'aif-grid-cell-border':true}\"></kendo-grid-checkbox-column>\r\n      <kendo-grid-column *ngFor=\"let item of documentProperties\" [headerClass]=\"{'aif-grid-header': true,'aif-grid-cell-border':true}\"\r\n        [field]=\"item\" [title]=\"documentsPropertyTextMap[item]||item\"></kendo-grid-column>\r\n      <!--<kendo-grid-excel fileName=\"Products.xlsx\"></kendo-grid-excel> -->\r\n    </kendo-grid>\r\n  </kendo-splitter-pane>\r\n</kendo-splitter>\r\n\r\n<!-- </div> -->\r\n<!-- </div> -->",
                styles: [".aif-border-green{border:1px solid green;border-radius:1rem}.aif-border-black{border:1px solid #000;border-radius:1rem}.aif-border-blue{border:1px solid #00f;border-radius:1rem}.aif-border{border:1px solid #919399;border-radius:1rem}.aif-background{background-color:#fafafa}.aif-document-tree-group{margin-top:10px;padding:1rem}.aif-margin-left{margin-left:1rem}.k-grid tr.even{background-color:#fafafa}.k-grid tr.odd{background-color:#9dc2f1}.k-grid .aif-grid-cell-border{border-right-width:1px}.aif-grid-header{background-color:#c9d7ea}.aif-min-height{height:-webkit-fill-available;height:-moz-available;height:fill-available}"]
            }] }
];
/** @nocollapse */
AifDocumentsTreeComponent.ctorParameters = () => [
    { type: AifDocumentsTrackService }
];
AifDocumentsTreeComponent.propDecorators = {
    trackClick: [{ type: Output }],
    documents: [{ type: Input }],
    beTypeCodes: [{ type: Input }],
    beTypeNames: [{ type: Input }],
    trackType: [{ type: Input }],
    gridOfDocuments: [{ type: ViewChild, args: ["gridOfDocuments",] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
const ɵ0 = {};
class AifDocumentsTrackManagerModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            "ngModule": AifDocumentsTrackManagerModule,
            "providers": [
                { provide: AifDocumentsTrackManagerModuleConfig, useValue: config || {} }
            ]
        };
    }
}
AifDocumentsTrackManagerModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    HttpClientModule,
                    FormsModule,
                    ReactiveFormsModule,
                    ButtonsModule,
                    GridModule,
                    WindowModule,
                    DropDownsModule,
                    DialogModule,
                    TreeViewModule,
                    SplitterModule,
                    GridModule,
                    ModalModule.forRoot(),
                    FarrisDialogModule,
                ],
                providers: [
                    SessionService,
                    HttpService,
                    { provide: AifDocumentsTrackManagerModuleConfig, useValue: ɵ0 },
                    AifDocumentsTrackService,
                ],
                declarations: [
                    AifDocumentsTrackManagerComponent,
                    AifDocumentsTreeComponent,
                ],
                bootstrap: [
                    AifDocumentsTrackManagerComponent
                ],
                entryComponents: [
                    AifDocumentsTrackManagerComponent
                ],
                exports: [
                    AifDocumentsTrackManagerComponent
                ],
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 模块内部服务类，也可供外部调用
 */
class AifPullSelectCreationRuleInternalService {
    /**
     * @param {?} http
     * @param {?} config
     */
    constructor(http, config) {
        this.http = http;
        this.serverIP = null;
        this.getCreationRuleUrl = "/api/runtime/aif/v1.0/creationrulecontroller/getcreationrule";
        this.serverIP = config == null || config.serverIP == null ? "" : config.serverIP;
    }
    /**
     * 访问webapi根据业务场景图ID与来源以及目标单据类型编号获取相应生单规则
     * @param {?} args
     * @return {?}
     */
    getCreationRule(args) {
        return this.http.post(this.serverIP + this.getCreationRuleUrl, args);
    }
}
AifPullSelectCreationRuleInternalService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
AifPullSelectCreationRuleInternalService.ctorParameters = () => [
    { type: HttpService },
    { type: AifPullSelectCreationRuleModuleConfig }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AifPullSelectCreationRuleComponent {
    /**
     * @param {?} crService
     */
    constructor(crService) {
        this.crService = crService;
        this.voTypeCodes = [];
        this.voTypeObjs = {};
        this.getCreationRuleResultEntities = {};
        this.selectedVoTypeCode = null;
        this.selectedGetCreationRuleResultEntity = null;
        this.bsModalRef = null;
        this.subject = new Subject();
    }
    /**
     * @param {?} args
     * @return {?}
     */
    getCreationRule(args) {
        this.crService.getCreationRule(args).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            for (let item of data) {
                if (!this.voTypeCodes.includes(item.SourceVoType)) {
                    this.voTypeCodes.push(item.SourceVoType);
                    this.getCreationRuleResultEntities[item.SourceVoType] = [];
                    this.voTypeObjs[item.SourceVoType] = {
                        "VoType": item.SourceVoType,
                        "VoName": item.SourceVoName
                    };
                }
                this.getCreationRuleResultEntities[item.SourceVoType].push(item);
            }
            if (data.length > 0) {
                this.selectedVoTypeCode = this.voTypeCodes[0];
                this.selectedGetCreationRuleResultEntity = data[0];
            }
        }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} voTypeCode
     * @return {?}
     */
    changeVoTypeRadio(voTypeCode) {
        this.selectedVoTypeCode = voTypeCode;
        this.selectedGetCreationRuleResultEntity = !this.isNullOrUndefined(this.getCreationRuleResultEntities[this.selectedVoTypeCode]) && this.getCreationRuleResultEntities[this.selectedVoTypeCode].length > 0 ? this.getCreationRuleResultEntities[this.selectedVoTypeCode][0] : null;
    }
    /**
     * @return {?}
     */
    clickOk() {
        this.subject.next((/** @type {?} */ (this.selectedGetCreationRuleResultEntity)));
        this.subject.complete();
        this.bsModalRef.close();
    }
    /**
     * @return {?}
     */
    clickClose() {
        this.bsModalRef.close();
    }
    /**
     * @private
     * @param {?} arg
     * @return {?}
     */
    isNullOrUndefined(arg) {
        return arg == null;
    }
}
AifPullSelectCreationRuleComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-aif-pull-select-creation-rule',
                template: "<div style=\"height:100%;\">\r\n    <kendo-splitter orientation=\"vertical\">\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\" size=\"40%\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div>\r\n                <div>\u9009\u62E9\u6765\u6E90\u5355\u636E\u7C7B\u578B</div>\r\n                <div style=\"height:8rem;overflow-y: auto;\">\r\n                    <label *ngFor=\"let voTypeCode of voTypeCodes;let i=index\" class=\"col-sm-12 col-md-5\"\r\n                        style=\"padding:0 0;\">\r\n                        <input type=\"radio\" name=\"voTypeCode\" class=\"\" [checked]=\"i==0\"\r\n                            [value]=\"voTypeObjs[voTypeCode].VoType\"\r\n                            (click)=\"changeVoTypeRadio(voTypeCode)\">{{voTypeObjs[voTypeCode].VoName}}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\" size=\"40%\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div>\r\n                <div>\u9009\u62E9\u751F\u5355\u89C4\u5219</div>\r\n                <kendo-dropdownlist class=\"form-control\" [data]=\"getCreationRuleResultEntities[selectedVoTypeCode]\"\r\n                    textField=\"Name\" valueField=\"Id\" [(ngModel)]=\"selectedGetCreationRuleResultEntity\">\r\n                </kendo-dropdownlist>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\" size=\"20%\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div>\r\n                <div>\u63CF\u8FF0</div>\r\n                <textarea kendoTextArea readonly class=\"form-control\" name=\"description\" id=\"\" rows=\"3\"\r\n                    [ngModel]=\"selectedGetCreationRuleResultEntity&&selectedGetCreationRuleResultEntity.Description\"></textarea>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div style=\"float:right;\">\r\n                <button class=\"btn-primary btn btn-sm ml-2\" (click)=\"clickOk()\"\r\n                    [disabled]=\"!selectedGetCreationRuleResultEntity\">\u786E\u5B9A</button>\r\n                <button class=\"btn btn-sm ml-2 btn-default\" (click)=\"clickClose()\">\u53D6\u6D88</button>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n    </kendo-splitter>\r\n</div>",
                styles: [".aif-splitter-pane-padding{padding:.5rem 1rem}"]
            }] }
];
/** @nocollapse */
AifPullSelectCreationRuleComponent.ctorParameters = () => [
    { type: AifPullSelectCreationRuleInternalService }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 供外部调用的拉式选择生单规则服务类接口
 */
class AifPullSelectCreationRuleService {
    /**
     * @param {?} injector
     * @param {?} cfr
     * @param {?} modalService
     */
    constructor(injector, cfr, modalService) {
        this.injector = injector;
        this.cfr = cfr;
        this.modalService = modalService;
        this.innerModalOptions = {
            title: '生单规则选择',
            width: 650,
            height: 415,
            buttons: null,
            showButtons: false,
        };
    }
    /**
     * 显示选择生单规则模态框，点击确定按钮时返回选中的生单规则
     * @param {?} args 查询生单规则所需参数
     * @param {?=} modalOptions 模态框配置,可为空
     * @return {?}
     */
    showCrRuleSelectModal(args, modalOptions) {
        /** @type {?} */
        const cmpF = this.cfr.resolveComponentFactory(AifPullSelectCreationRuleComponent);
        /** @type {?} */
        const cmpR = cmpF.create(this.injector);
        cmpR.instance.getCreationRule(args);
        cmpR.instance.bsModalRef = this.modalService.show(cmpR, this.isNullOrUndefined(modalOptions) ? this.innerModalOptions : modalOptions);
        return cmpR.instance.subject.asObservable();
    }
    /**
     * @private
     * @param {?} arg
     * @return {?}
     */
    isNullOrUndefined(arg) {
        return arg == null;
    }
}
AifPullSelectCreationRuleService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
AifPullSelectCreationRuleService.ctorParameters = () => [
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: BsModalService }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
const ɵ0$1 = {};
class AifPullSelectCreationRuleModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            "ngModule": AifPullSelectCreationRuleModule,
            "providers": [
                { provide: AifPullSelectCreationRuleModuleConfig, useValue: config || {} }
            ]
        };
    }
}
AifPullSelectCreationRuleModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    HttpClientModule,
                    ButtonsModule,
                    DropDownsModule,
                    SplitterModule,
                    ModalModule,
                    FarrisDialogModule,
                ],
                providers: [
                    HttpService,
                    BsModalService,
                    { provide: AifPullSelectCreationRuleModuleConfig, useValue: ɵ0$1 },
                    AifPullSelectCreationRuleInternalService,
                    AifPullSelectCreationRuleService
                ],
                declarations: [
                    AifPullSelectCreationRuleComponent
                ],
                bootstrap: [
                    AifPullSelectCreationRuleComponent
                ],
                entryComponents: [
                    AifPullSelectCreationRuleComponent
                ],
                exports: []
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 模块内部服务类，也可供外部调用
 */
class AifPushSelectCreationRuleInternalService {
    /**
     * @param {?} http
     * @param {?} config
     */
    constructor(http, config) {
        this.http = http;
        this.serverIP = "";
        this.getCreationRuleUrl = "/api/runtime/aif/v1.0/creationrulecontroller/getcreationrule";
        this.serverIP = config == null || config.serverIP == null ? "" : config.serverIP;
    }
    /**
     * 访问webapi根据业务场景图ID与源单据类型编号获取相应生单规则
     * @param {?} args
     * @return {?}
     */
    getCreationRule(args) {
        return this.http.post(this.serverIP + this.getCreationRuleUrl, args);
    }
}
AifPushSelectCreationRuleInternalService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
AifPushSelectCreationRuleInternalService.ctorParameters = () => [
    { type: HttpService },
    { type: AifPushSelectCreationRuleModuleConfig }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class AifPushSelectCreationRuleComponent {
    /**
     * @param {?} crService
     */
    constructor(crService) {
        this.crService = crService;
        this.voTypeCodes = [];
        this.voTypeObjs = {};
        this.getCreationRuleResultEntities = {};
        this.selectedVoTypeCode = null;
        this.selectedGetCreationRuleResultEntity = null;
        this.bsModalRef = null;
        this.subject = new Subject();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} args
     * @return {?}
     */
    getCreationRule(args) {
        this.crService.getCreationRule(args).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            console.log(data);
            for (let item of data) {
                if (!this.voTypeCodes.includes(item.TargetVoType)) {
                    this.voTypeCodes.push(item.TargetVoType);
                    this.getCreationRuleResultEntities[item.TargetVoType] = [];
                    this.voTypeObjs[item.TargetVoType] = {
                        "VoType": item.TargetVoType,
                        "VoName": item.TargetVoProxyName
                    };
                }
                this.getCreationRuleResultEntities[item.TargetVoType].push(item);
            }
            if (data.length > 0) {
                this.selectedVoTypeCode = this.voTypeCodes[0];
                this.selectedGetCreationRuleResultEntity = data[0];
            }
        }));
    }
    /**
     * @param {?} beTypeCode
     * @return {?}
     */
    changeVoTypeRadio(beTypeCode) {
        this.selectedVoTypeCode = beTypeCode;
        this.selectedGetCreationRuleResultEntity = !this.isNullOrUndefined(this.getCreationRuleResultEntities[this.selectedVoTypeCode]) && this.getCreationRuleResultEntities[this.selectedVoTypeCode].length > 0 ? this.getCreationRuleResultEntities[this.selectedVoTypeCode][0] : null;
    }
    /**
     * @return {?}
     */
    clickOk() {
        this.subject.next((/** @type {?} */ (this.selectedGetCreationRuleResultEntity)));
        this.subject.complete();
        this.bsModalRef.close();
    }
    /**
     * @return {?}
     */
    clickClose() {
        this.bsModalRef.close();
    }
    /**
     * @private
     * @param {?} arg
     * @return {?}
     */
    isNullOrUndefined(arg) {
        return arg == null;
    }
}
AifPushSelectCreationRuleComponent.decorators = [
    { type: Component, args: [{
                selector: "app-aif-push-select-creation-rule",
                template: "<div style=\"height:100%;\">\r\n    <kendo-splitter orientation=\"vertical\">\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\" size=\"40%\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div>\r\n                <div>\u9009\u62E9\u76EE\u6807\u5355\u636E\u7C7B\u578B</div>\r\n                <div style=\"height:8rem;overflow-y: auto;\">\r\n                    <label *ngFor=\"let voTypeCode of voTypeCodes;let i=index\" class=\"col-sm-12 col-md-5\"\r\n                        style=\"padding:0 0;\">\r\n                        <input type=\"radio\" name=\"voTypeCode\" class=\"\" [checked]=\"i==0\"\r\n                            [value]=\"voTypeObjs[voTypeCode].VoType\"\r\n                            (click)=\"changeVoTypeRadio(voTypeCode)\">{{voTypeObjs[voTypeCode].VoName}}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\" size=\"40%\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div>\r\n                <div>\u9009\u62E9\u751F\u5355\u89C4\u5219</div>\r\n                <kendo-dropdownlist class=\"form-control\" [data]=\"getCreationRuleResultEntities[selectedVoTypeCode]\"\r\n                    textField=\"Name\" valueField=\"Id\" [(ngModel)]=\"selectedGetCreationRuleResultEntity\">\r\n                </kendo-dropdownlist>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\" size=\"20%\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div>\r\n                <div>\u63CF\u8FF0</div>\r\n                <textarea kendoTextArea readonly class=\"form-control\" name=\"description\" id=\"\" rows=\"3\"\r\n                    [ngModel]=\"selectedGetCreationRuleResultEntity&&selectedGetCreationRuleResultEntity.Description\"></textarea>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n        <kendo-splitter-pane [resizable]=\"false\" [scrollable]=\"false\" [collapsible]=\"false\"\r\n            class=\"aif-splitter-pane-padding\">\r\n            <div style=\"float:right;\">\r\n                <button class=\"btn-primary btn btn-sm ml-2\" (click)=\"clickOk()\"\r\n                    [disabled]=\"!selectedGetCreationRuleResultEntity\">\u786E\u5B9A</button>\r\n                <button class=\"btn btn-sm ml-2 btn-default\" (click)=\"clickClose()\">\u53D6\u6D88</button>\r\n            </div>\r\n        </kendo-splitter-pane>\r\n\r\n    </kendo-splitter>\r\n</div>",
                styles: [".aif-splitter-pane-padding{padding:.5rem 1rem}"]
            }] }
];
/** @nocollapse */
AifPushSelectCreationRuleComponent.ctorParameters = () => [
    { type: AifPushSelectCreationRuleInternalService }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 供外部调用的推式选择生单规则服务类接口
 */
class AifPushSelectCreationRuleService {
    /**
     * @param {?} injector
     * @param {?} cfr
     * @param {?} modalService
     */
    constructor(injector, cfr, modalService) {
        this.injector = injector;
        this.cfr = cfr;
        this.modalService = modalService;
        /**
         * 内置模态框配置
         */
        this.innerModalOptions = {
            title: '生单规则选择',
            width: 650,
            height: 415,
            buttons: null,
            showButtons: false,
        };
    }
    /**
     * 显示选择生单规则模态框，点击确定按钮时返回选中的生单规则
     * @param {?} args 查询生单规则所需参数
     * @param {?=} modalOptions 模态框配置,可为空
     * @return {?}
     */
    showCrRuleSelectModal(args, modalOptions) {
        /** @type {?} */
        const cmpF = this.cfr.resolveComponentFactory(AifPushSelectCreationRuleComponent);
        /** @type {?} */
        const cmpR = cmpF.create(this.injector);
        cmpR.instance.getCreationRule(args);
        cmpR.instance.bsModalRef = this.modalService.show(cmpR, this.isNullOrUndefined(modalOptions) ? this.innerModalOptions : modalOptions);
        return cmpR.instance.subject.asObservable();
    }
    /**
     * @private
     * @param {?} arg
     * @return {?}
     */
    isNullOrUndefined(arg) {
        return arg == null;
    }
}
AifPushSelectCreationRuleService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
AifPushSelectCreationRuleService.ctorParameters = () => [
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: BsModalService }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
const ɵ0$2 = {};
class AifPushSelectCreationRuleModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            "ngModule": AifPushSelectCreationRuleModule,
            "providers": [
                { provide: AifPushSelectCreationRuleModuleConfig, useValue: config || {} },
            ]
        };
    }
}
AifPushSelectCreationRuleModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    HttpClientModule,
                    ButtonsModule,
                    DropDownsModule,
                    SplitterModule,
                    ModalModule,
                    FarrisDialogModule,
                ],
                providers: [
                    HttpService,
                    BsModalService,
                    { provide: AifPushSelectCreationRuleModuleConfig, useValue: ɵ0$2 },
                    AifPushSelectCreationRuleInternalService,
                    AifPushSelectCreationRuleService
                ],
                declarations: [
                    AifPushSelectCreationRuleComponent
                ],
                bootstrap: [
                    AifPushSelectCreationRuleComponent
                ],
                entryComponents: [
                    AifPushSelectCreationRuleComponent
                ],
                exports: []
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { AifAssociationEntity, GetCreationRuleArgs, AifDocumentsTrackManagerModuleConfig, AifPullSelectCreationRuleModuleConfig, AifPushSelectCreationRuleModuleConfig, AifDocumentsTrackManagerComponent, AifDocumentsTrackService, AifDocumentsTrackManagerModule, AifDocumentsPropertyTextMap, TrackDirectionTypeMap, TrackTypeTextMap, TrackType, AifPullSelectCreationRuleComponent, AifPullSelectCreationRuleInternalService, AifPullSelectCreationRuleService, AifPullSelectCreationRuleModule, AifPushSelectCreationRuleComponent, AifPushSelectCreationRuleInternalService, AifPushSelectCreationRuleService, AifPushSelectCreationRuleModule, AifDocumentsTreeComponent as ɵa };

//# sourceMappingURL=gsp-aif-runtime-api.js.map