/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
import { HttpClientModule } from "@angular/common/http";
import { ButtonsModule } from "@progress/kendo-angular-buttons";
import { DropDownsModule } from "@progress/kendo-angular-dropdowns";
import { SplitterModule } from "@progress/kendo-angular-layout";
import { FormsModule, ReactiveFormsModule } from "@angular/forms";
import { HttpService } from "@ecp-caf/caf-common";
import { BsModalService, ModalModule } from '@farris/ui-modal';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { AifPushSelectCreationRuleInternalService } from './service/aif-push-select-creation-rule.internal.service';
import { AifPushSelectCreationRuleComponent } from './aif-push-select-creation-rule/aif-push-select-creation-rule.component';
import { AifPushSelectCreationRuleService } from './service/aif-push-select-creation-rule.service';
import { AifPushSelectCreationRuleModuleConfig } from '../entity/aif-push-select-creation-rule-module-config';
const ɵ0 = {};
export class AifPushSelectCreationRuleModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            "ngModule": AifPushSelectCreationRuleModule,
            "providers": [
                { provide: AifPushSelectCreationRuleModuleConfig, useValue: config || {} },
            ]
        };
    }
}
AifPushSelectCreationRuleModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    HttpClientModule,
                    ButtonsModule,
                    DropDownsModule,
                    SplitterModule,
                    ModalModule,
                    FarrisDialogModule,
                ],
                providers: [
                    HttpService,
                    BsModalService,
                    { provide: AifPushSelectCreationRuleModuleConfig, useValue: ɵ0 },
                    AifPushSelectCreationRuleInternalService,
                    AifPushSelectCreationRuleService
                ],
                declarations: [
                    AifPushSelectCreationRuleComponent
                ],
                bootstrap: [
                    AifPushSelectCreationRuleComponent
                ],
                entryComponents: [
                    AifPushSelectCreationRuleComponent
                ],
                exports: []
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWlmLXB1c2gtc2VsZWN0LWNyZWF0aW9uLXJ1bGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1haWYvcnVudGltZS1hcGkvIiwic291cmNlcyI6WyJsaWIvYWlmLXB1c2gtc2VsZWN0LWNyZWF0aW9uLXJ1bGUvYWlmLXB1c2gtc2VsZWN0LWNyZWF0aW9uLXJ1bGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFpQyxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDaEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ3BILE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLHlFQUF5RSxDQUFDO0FBQzdILE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ25HLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO1dBaUIxQyxFQUFFO0FBaUJ0RSxNQUFNLE9BQU8sK0JBQStCOzs7OztJQUNqQyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQThDO1FBQ2hFLE9BQU87WUFDSCxVQUFVLEVBQUUsK0JBQStCO1lBQzNDLFdBQVcsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxRQUFRLEVBQUUsTUFBTSxJQUFJLEVBQUUsRUFBRTthQUM3RTtTQUNKLENBQUM7SUFDTixDQUFDOzs7WUF4Q0osUUFBUSxTQUFDO2dCQUNOLE9BQU8sRUFBRTtvQkFDTCxZQUFZO29CQUNaLFdBQVc7b0JBQ1gsbUJBQW1CO29CQUNuQixnQkFBZ0I7b0JBQ2hCLGFBQWE7b0JBQ2IsZUFBZTtvQkFDZixjQUFjO29CQUNkLFdBQVc7b0JBQ1gsa0JBQWtCO2lCQUNyQjtnQkFDRCxTQUFTLEVBQUU7b0JBQ1AsV0FBVztvQkFDWCxjQUFjO29CQUNkLEVBQUUsT0FBTyxFQUFFLHFDQUFxQyxFQUFFLFFBQVEsSUFBSSxFQUFFO29CQUNoRSx3Q0FBd0M7b0JBQ3hDLGdDQUFnQztpQkFDbkM7Z0JBQ0QsWUFBWSxFQUFFO29CQUNWLGtDQUFrQztpQkFDckM7Z0JBQ0QsU0FBUyxFQUFFO29CQUNQLGtDQUFrQztpQkFDckM7Z0JBQ0QsZUFBZSxFQUFFO29CQUNiLGtDQUFrQztpQkFDckM7Z0JBQ0QsT0FBTyxFQUFFLEVBRVI7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBQcm92aWRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xyXG5pbXBvcnQgeyBCdXR0b25zTW9kdWxlIH0gZnJvbSBcIkBwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWJ1dHRvbnNcIjtcclxuaW1wb3J0IHsgRHJvcERvd25zTW9kdWxlIH0gZnJvbSBcIkBwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWRyb3Bkb3duc1wiO1xyXG5pbXBvcnQgeyBTcGxpdHRlck1vZHVsZSB9IGZyb20gXCJAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sYXlvdXRcIjtcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tIFwiQGVjcC1jYWYvY2FmLWNvbW1vblwiO1xyXG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSwgTW9kYWxNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsJztcclxuaW1wb3J0IHsgRmFycmlzRGlhbG9nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBBaWZQdXNoU2VsZWN0Q3JlYXRpb25SdWxlSW50ZXJuYWxTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL2FpZi1wdXNoLXNlbGVjdC1jcmVhdGlvbi1ydWxlLmludGVybmFsLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBBaWZQdXNoU2VsZWN0Q3JlYXRpb25SdWxlQ29tcG9uZW50IH0gZnJvbSAnLi9haWYtcHVzaC1zZWxlY3QtY3JlYXRpb24tcnVsZS9haWYtcHVzaC1zZWxlY3QtY3JlYXRpb24tcnVsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBBaWZQdXNoU2VsZWN0Q3JlYXRpb25SdWxlU2VydmljZSB9IGZyb20gJy4vc2VydmljZS9haWYtcHVzaC1zZWxlY3QtY3JlYXRpb24tcnVsZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQWlmUHVzaFNlbGVjdENyZWF0aW9uUnVsZU1vZHVsZUNvbmZpZyB9IGZyb20gJy4uL2VudGl0eS9haWYtcHVzaC1zZWxlY3QtY3JlYXRpb24tcnVsZS1tb2R1bGUtY29uZmlnJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICAgICAgSHR0cENsaWVudE1vZHVsZSxcclxuICAgICAgICBCdXR0b25zTW9kdWxlLFxyXG4gICAgICAgIERyb3BEb3duc01vZHVsZSxcclxuICAgICAgICBTcGxpdHRlck1vZHVsZSxcclxuICAgICAgICBNb2RhbE1vZHVsZSxcclxuICAgICAgICBGYXJyaXNEaWFsb2dNb2R1bGUsXHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgSHR0cFNlcnZpY2UsXHJcbiAgICAgICAgQnNNb2RhbFNlcnZpY2UsXHJcbiAgICAgICAgeyBwcm92aWRlOiBBaWZQdXNoU2VsZWN0Q3JlYXRpb25SdWxlTW9kdWxlQ29uZmlnLCB1c2VWYWx1ZToge30gfSxcclxuICAgICAgICBBaWZQdXNoU2VsZWN0Q3JlYXRpb25SdWxlSW50ZXJuYWxTZXJ2aWNlLFxyXG4gICAgICAgIEFpZlB1c2hTZWxlY3RDcmVhdGlvblJ1bGVTZXJ2aWNlXHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgQWlmUHVzaFNlbGVjdENyZWF0aW9uUnVsZUNvbXBvbmVudFxyXG4gICAgXSxcclxuICAgIGJvb3RzdHJhcDogW1xyXG4gICAgICAgIEFpZlB1c2hTZWxlY3RDcmVhdGlvblJ1bGVDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgICAgICBBaWZQdXNoU2VsZWN0Q3JlYXRpb25SdWxlQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG5cclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEFpZlB1c2hTZWxlY3RDcmVhdGlvblJ1bGVNb2R1bGUge1xyXG4gICAgcHVibGljIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEFpZlB1c2hTZWxlY3RDcmVhdGlvblJ1bGVNb2R1bGVDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBcIm5nTW9kdWxlXCI6IEFpZlB1c2hTZWxlY3RDcmVhdGlvblJ1bGVNb2R1bGUsXHJcbiAgICAgICAgICAgIFwicHJvdmlkZXJzXCI6IFtcclxuICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogQWlmUHVzaFNlbGVjdENyZWF0aW9uUnVsZU1vZHVsZUNvbmZpZywgdXNlVmFsdWU6IGNvbmZpZyB8fCB7fSB9LFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufSJdfQ==