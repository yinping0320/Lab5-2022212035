/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { GridComponent } from '@progress/kendo-angular-grid';
import { AifDocumentsPropertyTextMap } from '../config/aif-documents-property-text.map';
import { TrackDirectionTypeMap } from '../config/track-direction-type.map';
import { process } from '@progress/kendo-data-query';
import { AifDocumentsTrackService } from '../service/aif-documents-track.service';
import { TrackType } from '../config/track-type.map';
/**
 * 单据追踪查询结果组件
 */
export class AifDocumentsTreeComponent {
    /**
     * @param {?} trackService
     */
    constructor(trackService) {
        this.trackService = trackService;
        /**
         * 单据记录Grid
         */
        this.stateOfDocuments = {
            skip: 0,
            take: 30,
        };
        this.checkboxOnly = false;
        this.disabledState = true;
        this.selectedByFieldOfDocuments = "";
        this.selectableSettings = {
            checkboxOnly: this.checkboxOnly,
            mode: "single"
        };
        this.documentProperties = [];
        this.gridDataOfDocuments = null;
        this.selectedKeysOfDocuments = new Array();
        /**
         * 单据分类导航
         */
        this.treeDataOfBeTypeCodes = [];
        this.selectedKeysOfTreeView = ['0'];
        this.gridDataOfBeTypes = [];
        this.selectedKeysOfBeTypes = new Array();
        this.disabledStateOfBeTypes = true;
        this.selectedByFieldOfBeTypes = "BeTypeCode";
        this.selectableSettingsOfBeTypes = {
            checkboxOnly: this.checkboxOnly,
            mode: "single"
        };
        this.selectBeType = "";
        /**
         * 常量映射
         */
        this.documentsPropertyTextMap = AifDocumentsPropertyTextMap;
        this.trackDirectionTypeMap = TrackDirectionTypeMap;
        this.trackDirectionType = TrackDirectionTypeMap.UnKnown;
        /**
         * 父子组件通信传值
         */
        this.trackClick = new EventEmitter();
        this._documents = {};
        this._beTypeCodes = [];
        this.beTypeNames = {};
    }
    /**
     * @param {?} documents
     * @return {?}
     */
    set documents(documents) {
        this._documents = documents;
    }
    /**
     * @return {?}
     */
    get documents() {
        return this._documents;
    }
    /**
     * @param {?} beTypeCodes
     * @return {?}
     */
    set beTypeCodes(beTypeCodes) {
        this._beTypeCodes = beTypeCodes;
        /**重置数据源 */
        this.treeDataOfBeTypeCodes = [];
        this.documentProperties = [];
        this.gridDataOfBeTypes = [];
        this.selectedKeysOfBeTypes = [];
        this.gridDataOfDocuments = process([], this.stateOfDocuments);
        if (this.isNullOrUndefined(beTypeCodes) == false && beTypeCodes.length > 0) {
            this.selectBeType = beTypeCodes[0];
            this.selectedKeysOfBeTypes.push(beTypeCodes[0]);
        }
        for (let item of beTypeCodes) {
            // this.data[0].items.push({text:item});
            this.gridDataOfBeTypes.push({ BeTypeCode: item, BeTypeName: this.beTypeNames[item], Number: this.documents[item].length });
            this.treeDataOfBeTypeCodes.push({ text: this.beTypeNames[item], value: item });
        }
        if (this.isNullOrUndefined(this.documents) == false && this.isNullOrUndefined(this.documents[this.selectBeType]) == false && this.documents[this.selectBeType].length > 0) {
            this.loadItems();
        }
    }
    /**
     * @return {?}
     */
    get beTypeCodes() {
        return this._beTypeCodes;
    }
    /**
     * @param {?} trackType
     * @return {?}
     */
    set trackType(trackType) {
        this._trackType = trackType;
        this.trackDirectionType = this.trackDirectionTypeMap[this._trackType];
    }
    /**
     * @return {?}
     */
    get trackType() {
        return this._trackType;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        console.log(changes);
        if (this.isNullOrUndefined(changes.beTypeCodes) == false) {
            this.beTypeCodes = changes.beTypeCodes.currentValue;
        }
        if (this.isNullOrUndefined(changes.documents) == false) {
            this.documents = changes.documents.currentValue;
            // this.gridDataOfDocuments=process(this.documents,this.stateOfDocuments);
        }
        if (this.isNullOrUndefined(changes.trackType) == false) {
            this.trackType = changes.trackType.currentValue;
        }
        if (this.isNullOrUndefined(changes.beTypeNames) == false) {
            this.beTypeNames = changes.beTypeNames.currentValue;
        }
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    clickNode(obj) {
        /** @type {?} */
        let item = obj.item.dataItem;
        if (this.isNullOrUndefined(item.items) == false) {
            return;
        }
        console.log(item.text);
        this.selectBeType = item.value;
        this.loadItems();
        this.selectedKeysOfDocuments.splice(0, this.selectedKeysOfDocuments.length);
    }
    /**
     * @return {?}
     */
    selectedKeysChangeOfDocuments() {
        if (this.selectedKeysOfDocuments.length > 0) {
            this.disabledState = false;
        }
        else {
            this.disabledState = true;
        }
    }
    /**
     * @return {?}
     */
    selectedKeysChangeOfBeTypes() {
        console.log(this.selectedKeysOfBeTypes);
        if (this.selectedKeysOfBeTypes.length > 0) {
            this.disabledStateOfBeTypes = false;
            this.selectBeType = this.selectedKeysOfBeTypes[0];
            //页数置为初始值0
            this.stateOfDocuments.skip = 0;
            this.loadItems();
            //清空已选中的行
            this.selectedKeysOfDocuments.splice(0, this.selectedKeysOfDocuments.length);
        }
        else {
            this.disabledStateOfBeTypes = true;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    pageChange(event) {
        this.stateOfDocuments.skip = event.skip;
        this.loadItems();
    }
    /**
     * @return {?}
     */
    loadItems() {
        // let temp = this.documents[this.selectBeType].slice(this.stateOfDocuments.skip, this.stateOfDocuments.skip + this.stateOfDocuments.take);
        this.documentProperties.splice(0, this.documentProperties.length);
        for (let index in this.documents[this.selectBeType][0]) {
            this.documentProperties.push(index);
        }
        this.selectedByFieldOfDocuments = this.documentProperties[0];
        this.gridDataOfDocuments = process(this.documents[this.selectBeType], this.stateOfDocuments);
        // this.fitColumns();
        // this.gridDataOfDocuments = {
        //   data: temp,
        //   total: this.documents[this.selectBeType].length
        // };
    }
    /**
     * @return {?}
     */
    getDocumentDetailInfo() {
        if (this.selectedKeysOfDocuments.length == 0) {
            alert("请选择一行数据");
            return;
        }
        console.log(this.selectedKeysOfDocuments);
        alert("详细信息窗口");
    }
    /**
     * @return {?}
     */
    track() {
        if (this.selectedKeysOfDocuments.length == 0) {
            alert("请选择一行数据");
            return;
        }
        this.trackService.showResultDialog(this.selectedKeysOfDocuments[0], this.selectBeType, this.trackType);
    }
    /**
     * @param {?} context
     * @return {?}
     */
    rowCallback(context) {
        /** @type {?} */
        const isEven = context.index % 2 == 0;
        return {
            even: isEven,
            odd: !isEven
        };
    }
    /**
     * @param {?} state
     * @return {?}
     */
    dataStateChangeOfDocuments(state) {
        this.stateOfDocuments = state;
        this.gridDataOfDocuments = process(this.documents[this.selectBeType], this.stateOfDocuments);
    }
    // 自动调整列宽
    // fitColumns(): void {
    //   this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {
    //     this.gridOfDocuments.autoFitColumns();
    //     // console.log("this.gridOfDocuments.autoFitColumns()");
    //   });
    // }
    /**
     * @private
     * @param {?} arg
     * @return {?}
     */
    isNullOrUndefined(arg) {
        return arg == null;
    }
}
AifDocumentsTreeComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-aif-documents-tree',
                encapsulation: ViewEncapsulation.None,
                template: "<!-- <div class=\"d-flex\" style=\"padding: 5px;\"> -->\r\n<!-- <div class=\"row\"> -->\r\n<kendo-splitter orientation=\"horizontal\" style=\"height:100%;\">\r\n  <kendo-splitter-pane [collapsible]=\"true\" size=\"16%\" style=\"padding:0 1rem 1rem 1rem;\">\r\n    <div class=\"k-button-group\" style=\"height:2.5rem;\">\r\n      <label for=\"\" style=\"margin:auto 0 auto 0;\">{{trackDirectionType}}</label>\r\n    </div>\r\n    <kendo-grid [data]=\"gridDataOfBeTypes\" [resizable]=\"true\" [selectable]=\"selectableSettingsOfBeTypes\"\r\n      [kendoGridSelectBy]=\"selectedByFieldOfBeTypes\" [selectedKeys]=\"selectedKeysOfBeTypes\" (selectedKeysChange)=\"selectedKeysChangeOfBeTypes()\">\r\n      <kendo-grid-column field=\"BeTypeName\" title=\"\u540D\u79F0\"></kendo-grid-column>\r\n      <!-- <kendo-grid-column field=\"BeTypeCode\" title=\"\u7F16\u53F7\"></kendo-grid-column> -->\r\n      <kendo-grid-column field=\"Number\" title=\"\u6570\u91CF\"></kendo-grid-column>\r\n    </kendo-grid>\r\n  </kendo-splitter-pane>\r\n  <kendo-splitter-pane style=\"padding:0 1rem 2rem 1rem;\">\r\n    <div class=\"k-button-group\" style=\"height:2.5rem;padding: 0.5rem 0 0.5rem 0;\">\r\n      <button hidden class=\"k-button btn btn-sm btn-default\" (click)=\"getDocumentDetailInfo()\">\u8BE6\u60C5</button>\r\n      <button class=\"k-button btn btn-sm ml-2 btn-default\" (click)=\"track()\">\u8FFD\u8E2A</button>\r\n    </div>\r\n\r\n    <kendo-grid class=\"\" #gridOfDocuments [data]=\"gridDataOfDocuments\" [pageable]=\"true\" [resizable]=\"true\" [pageSize]=\"stateOfDocuments.take\"\r\n      (pageChange)=\"pageChange($event)\" [skip]=\"stateOfDocuments.skip\" [selectable]=\"selectableSettings\"\r\n      [kendoGridSelectBy]=\"selectedByFieldOfDocuments\" [selectedKeys]=\"selectedKeysOfDocuments\" (selectedKeysChange)=\"selectedKeysChangeOfDocuments()\"\r\n      [sortable]=\"true\" [filterable]=\"true\" [sort]=\"stateOfDocuments.sort\" [filter]=\"stateOfDocuments.filter\"\r\n      (dataStateChange)=\"dataStateChangeOfDocuments($event)\">\r\n      <!-- <ng-template kendoGridToolbarTemplate>\r\n        <button type=\"button\" class=\"k-button btn btn-sm ml-2 btn-default\" kendoGridExcelCommand icon=\"file-excel\">Export\r\n          to Excel</button>\r\n      </ng-template> -->\r\n      <!-- <ng-template ngFor let-item [ngForOf]=\"documentProperties\" let-i=\"index\">\r\n        <kendo-grid-checkbox-column *ngIf=\"beTypeCodes&&beTypeCodes.length>0\" [width]=\"40\" [headerClass]=\"{'aif-grid-header': true}\"></kendo-grid-checkbox-column>\r\n        <kendo-grid-column [headerClass]=\"{'aif-grid-header': true}\" [field]=\"item\" [title]=\"documentsPropertyTextMap[item]||item\"></kendo-grid-column>\r\n      </ng-template> -->\r\n\r\n      <kendo-grid-checkbox-column [width]=\"40\" [headerClass]=\"{'aif-grid-header': true,'aif-grid-cell-border':true}\"></kendo-grid-checkbox-column>\r\n      <kendo-grid-column *ngFor=\"let item of documentProperties\" [headerClass]=\"{'aif-grid-header': true,'aif-grid-cell-border':true}\"\r\n        [field]=\"item\" [title]=\"documentsPropertyTextMap[item]||item\"></kendo-grid-column>\r\n      <!--<kendo-grid-excel fileName=\"Products.xlsx\"></kendo-grid-excel> -->\r\n    </kendo-grid>\r\n  </kendo-splitter-pane>\r\n</kendo-splitter>\r\n\r\n<!-- </div> -->\r\n<!-- </div> -->",
                styles: [".aif-border-green{border:1px solid green;border-radius:1rem}.aif-border-black{border:1px solid #000;border-radius:1rem}.aif-border-blue{border:1px solid #00f;border-radius:1rem}.aif-border{border:1px solid #919399;border-radius:1rem}.aif-background{background-color:#fafafa}.aif-document-tree-group{margin-top:10px;padding:1rem}.aif-margin-left{margin-left:1rem}.k-grid tr.even{background-color:#fafafa}.k-grid tr.odd{background-color:#9dc2f1}.k-grid .aif-grid-cell-border{border-right-width:1px}.aif-grid-header{background-color:#c9d7ea}.aif-min-height{height:-webkit-fill-available;height:-moz-available;height:fill-available}"]
            }] }
];
/** @nocollapse */
AifDocumentsTreeComponent.ctorParameters = () => [
    { type: AifDocumentsTrackService }
];
AifDocumentsTreeComponent.propDecorators = {
    trackClick: [{ type: Output }],
    documents: [{ type: Input }],
    beTypeCodes: [{ type: Input }],
    beTypeNames: [{ type: Input }],
    trackType: [{ type: Input }],
    gridOfDocuments: [{ type: ViewChild, args: ["gridOfDocuments",] }]
};
if (false) {
    /**
     * 单据记录Grid
     * @type {?}
     */
    AifDocumentsTreeComponent.prototype.stateOfDocuments;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.checkboxOnly;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.disabledState;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectedByFieldOfDocuments;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectableSettings;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.documentProperties;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.gridDataOfDocuments;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectedKeysOfDocuments;
    /**
     * 单据分类导航
     * @type {?}
     */
    AifDocumentsTreeComponent.prototype.treeDataOfBeTypeCodes;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectedKeysOfTreeView;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.gridDataOfBeTypes;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectedKeysOfBeTypes;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.disabledStateOfBeTypes;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectedByFieldOfBeTypes;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectableSettingsOfBeTypes;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.selectBeType;
    /**
     * 常量映射
     * @type {?}
     */
    AifDocumentsTreeComponent.prototype.documentsPropertyTextMap;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.trackDirectionTypeMap;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.trackDirectionType;
    /**
     * 父子组件通信传值
     * @type {?}
     */
    AifDocumentsTreeComponent.prototype.trackClick;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype._documents;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype._beTypeCodes;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.beTypeNames;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype._trackType;
    /** @type {?} */
    AifDocumentsTreeComponent.prototype.gridOfDocuments;
    /**
     * @type {?}
     * @private
     */
    AifDocumentsTreeComponent.prototype.trackService;
}
//# sourceMappingURL=data:application/json;base64,