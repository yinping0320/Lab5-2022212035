/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { ButtonsModule } from '@progress/kendo-angular-buttons';
import { GridModule } from '@progress/kendo-angular-grid';
import { WindowModule, DialogModule } from '@progress/kendo-angular-dialog';
import { DropDownsModule } from '@progress/kendo-angular-dropdowns';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { SplitterModule } from '@progress/kendo-angular-layout';
import { AifDocumentsTrackService } from './service/aif-documents-track.service';
import { HttpService, SessionService } from '@ecp-caf/caf-common';
import { AifDocumentsTrackManagerComponent } from './aif-documents-track-manager/aif-documents-track-manager.component';
import { AifDocumentsTreeComponent } from './aif-documents-tree/aif-documents-tree.component';
import { ModalModule } from '@farris/ui-modal';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { AifDocumentsTrackManagerModuleConfig } from '../entity/aif-documents-track-manager-module-config';
const ɵ0 = {};
export class AifDocumentsTrackManagerModule {
    /**
     * @param {?=} config
     * @return {?}
     */
    static forRoot(config) {
        return {
            "ngModule": AifDocumentsTrackManagerModule,
            "providers": [
                { provide: AifDocumentsTrackManagerModuleConfig, useValue: config || {} }
            ]
        };
    }
}
AifDocumentsTrackManagerModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    HttpClientModule,
                    FormsModule,
                    ReactiveFormsModule,
                    ButtonsModule,
                    GridModule,
                    WindowModule,
                    DropDownsModule,
                    DialogModule,
                    TreeViewModule,
                    SplitterModule,
                    GridModule,
                    ModalModule.forRoot(),
                    FarrisDialogModule,
                ],
                providers: [
                    SessionService,
                    HttpService,
                    { provide: AifDocumentsTrackManagerModuleConfig, useValue: ɵ0 },
                    AifDocumentsTrackService,
                ],
                declarations: [
                    AifDocumentsTrackManagerComponent,
                    AifDocumentsTreeComponent,
                ],
                bootstrap: [
                    AifDocumentsTrackManagerComponent
                ],
                entryComponents: [
                    AifDocumentsTrackManagerComponent
                ],
                exports: [
                    AifDocumentsTrackManagerComponent
                ],
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWlmLWRvY3VtZW50cy10cmFjay1tYW5hZ2VyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtYWlmL3J1bnRpbWUtYXBpLyIsInNvdXJjZXMiOlsibGliL2FpZi1kb2N1bWVudHMtdHJhY2svYWlmLWRvY3VtZW50cy10cmFjay1tYW5hZ2VyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDaEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDaEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDakYsT0FBTyxFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxxRUFBcUUsQ0FBQztBQUN4SCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUM5RixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0scURBQXFELENBQUM7V0F1QjVDLEVBQUU7QUFpQmpFLE1BQU0sT0FBTyw4QkFBOEI7Ozs7O0lBQ2xDLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBNkM7UUFFakUsT0FBTztZQUNMLFVBQVUsRUFBRSw4QkFBOEI7WUFDMUMsV0FBVyxFQUFFO2dCQUNYLEVBQUUsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLFFBQVEsRUFBRSxNQUFNLElBQUksRUFBRSxFQUFFO2FBQzFFO1NBQ0YsQ0FBQztJQUNKLENBQUM7OztZQTlDRixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osZ0JBQWdCO29CQUNoQixXQUFXO29CQUNYLG1CQUFtQjtvQkFDbkIsYUFBYTtvQkFDYixVQUFVO29CQUNWLFlBQVk7b0JBQ1osZUFBZTtvQkFDZixZQUFZO29CQUNaLGNBQWM7b0JBQ2QsY0FBYztvQkFDZCxVQUFVO29CQUNWLFdBQVcsQ0FBQyxPQUFPLEVBQUU7b0JBQ3JCLGtCQUFrQjtpQkFDbkI7Z0JBQ0QsU0FBUyxFQUFFO29CQUNULGNBQWM7b0JBQ2QsV0FBVztvQkFDWCxFQUFFLE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxRQUFRLElBQUksRUFBRTtvQkFDL0Qsd0JBQXdCO2lCQUN6QjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osaUNBQWlDO29CQUNqQyx5QkFBeUI7aUJBQzFCO2dCQUNELFNBQVMsRUFBRTtvQkFDVCxpQ0FBaUM7aUJBQ2xDO2dCQUNELGVBQWUsRUFBRTtvQkFDZixpQ0FBaUM7aUJBQ2xDO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxpQ0FBaUM7aUJBQ2xDO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgQnV0dG9uc01vZHVsZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWJ1dHRvbnMnO1xyXG5pbXBvcnQgeyBHcmlkTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZ3JpZCc7XHJcbmltcG9ydCB7IFdpbmRvd01vZHVsZSwgRGlhbG9nTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZGlhbG9nJztcclxuaW1wb3J0IHsgRHJvcERvd25zTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZHJvcGRvd25zJztcclxuaW1wb3J0IHsgVHJlZVZpZXdNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci10cmVldmlldyc7XHJcbmltcG9ydCB7IFNwbGl0dGVyTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbGF5b3V0JztcclxuaW1wb3J0IHsgQWlmRG9jdW1lbnRzVHJhY2tTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL2FpZi1kb2N1bWVudHMtdHJhY2suc2VydmljZSc7XHJcbmltcG9ydCB7IEh0dHBTZXJ2aWNlLCBTZXNzaW9uU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBBaWZEb2N1bWVudHNUcmFja01hbmFnZXJDb21wb25lbnQgfSBmcm9tICcuL2FpZi1kb2N1bWVudHMtdHJhY2stbWFuYWdlci9haWYtZG9jdW1lbnRzLXRyYWNrLW1hbmFnZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQWlmRG9jdW1lbnRzVHJlZUNvbXBvbmVudCB9IGZyb20gJy4vYWlmLWRvY3VtZW50cy10cmVlL2FpZi1kb2N1bWVudHMtdHJlZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwnO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IEFpZkRvY3VtZW50c1RyYWNrTWFuYWdlck1vZHVsZUNvbmZpZyB9IGZyb20gJy4uL2VudGl0eS9haWYtZG9jdW1lbnRzLXRyYWNrLW1hbmFnZXItbW9kdWxlLWNvbmZpZyc7XHJcblxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxyXG4gICAgQnV0dG9uc01vZHVsZSxcclxuICAgIEdyaWRNb2R1bGUsXHJcbiAgICBXaW5kb3dNb2R1bGUsXHJcbiAgICBEcm9wRG93bnNNb2R1bGUsXHJcbiAgICBEaWFsb2dNb2R1bGUsXHJcbiAgICBUcmVlVmlld01vZHVsZSxcclxuICAgIFNwbGl0dGVyTW9kdWxlLFxyXG4gICAgR3JpZE1vZHVsZSxcclxuICAgIE1vZGFsTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIEZhcnJpc0RpYWxvZ01vZHVsZSxcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgU2Vzc2lvblNlcnZpY2UsXHJcbiAgICBIdHRwU2VydmljZSxcclxuICAgIHsgcHJvdmlkZTogQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyTW9kdWxlQ29uZmlnLCB1c2VWYWx1ZToge30gfSxcclxuICAgIEFpZkRvY3VtZW50c1RyYWNrU2VydmljZSxcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyQ29tcG9uZW50LFxyXG4gICAgQWlmRG9jdW1lbnRzVHJlZUNvbXBvbmVudCxcclxuICBdLFxyXG4gIGJvb3RzdHJhcDogW1xyXG4gICAgQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyQ29tcG9uZW50XHJcbiAgXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgIEFpZkRvY3VtZW50c1RyYWNrTWFuYWdlckNvbXBvbmVudFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyQ29tcG9uZW50XHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEFpZkRvY3VtZW50c1RyYWNrTWFuYWdlck1vZHVsZSB7XHJcbiAgcHVibGljIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEFpZkRvY3VtZW50c1RyYWNrTWFuYWdlck1vZHVsZUNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIFwibmdNb2R1bGVcIjogQWlmRG9jdW1lbnRzVHJhY2tNYW5hZ2VyTW9kdWxlLFxyXG4gICAgICBcInByb3ZpZGVyc1wiOiBbXHJcbiAgICAgICAgeyBwcm92aWRlOiBBaWZEb2N1bWVudHNUcmFja01hbmFnZXJNb2R1bGVDb25maWcsIHVzZVZhbHVlOiBjb25maWcgfHwge30gfVxyXG4gICAgICBdXHJcbiAgICB9O1xyXG4gIH1cclxufSJdfQ==