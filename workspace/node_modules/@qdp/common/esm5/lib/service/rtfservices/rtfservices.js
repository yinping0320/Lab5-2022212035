/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Subject } from "rxjs";
var RtfServices = /** @class */ (function () {
    function RtfServices() {
    }
    /**
     * @param {?=} sessionService
     * @return {?}
     */
    RtfServices.createHeaderSessionId = /**
     * @param {?=} sessionService
     * @return {?}
     */
    function (sessionService) {
        /** @type {?} */
        var options = {
            headers: {
                'Content-Type': 'application/json'
            }
        };
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session && gspframeworkService.rtf.session.getFormToken()) {
                options.headers['X-CAF-Runtime-CommonVariable'] = gspframeworkService.rtf.session.getFormToken();
            }
            else if (sessionService && sessionService.getCurrentSeesionId()) {
                options.headers['X-CAF-Runtime-CommonVariable'] = sessionService.getCurrentSeesionId();
            }
            else if (sessionService && sessionService.getUserSessionId()) {
                options.headers['SessionId'] = sessionService.getUserSessionId();
            }
            else if (localStorage.getItem('sessionId')) {
                options.headers['SessionId'] = localStorage.getItem('sessionId');
            }
        }
        catch (e) { }
        return options;
    };
    /**
     * @param {?=} sessionService
     * @return {?}
     */
    RtfServices.getSessionId = /**
     * @param {?=} sessionService
     * @return {?}
     */
    function (sessionService) {
        /** @type {?} */
        var sessionId;
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session && gspframeworkService.rtf.session.getFormToken()) {
                sessionId = gspframeworkService.rtf.session.getFormToken();
            }
            else if (sessionService && sessionService.getCurrentSeesionId()) {
                sessionId = sessionService.getCurrentSeesionId();
            }
            else if (sessionService && sessionService.getUserSessionId()) {
                sessionId = sessionService.getUserSessionId();
            }
            else if (localStorage.getItem('sessionId')) {
                sessionId = localStorage.getItem('sessionId');
            }
        }
        catch (e) { }
        return sessionId;
    };
    /**
     * @param {?=} queryId
     * @return {?}
     */
    RtfServices.getTabId = /**
     * @param {?=} queryId
     * @return {?}
     */
    function (queryId) {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session) {
                /** @type {?} */
                var tab = gspframeworkService.rtf.session.getCommonVariable();
                if (gspframeworkService.rtf.extendMethod && gspframeworkService.rtf.extendMethod.getExtObj && gspframeworkService.rtf.extendMethod.getExtObj() && gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID) {
                    /** @type {?} */
                    var uuid = gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() ? gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() : '';
                    return tab.tabId + uuid;
                }
                else {
                    return tab.tabId;
                }
            }
        }
        catch (e) {
            return queryId;
        }
    };
    /**
     * @return {?}
     */
    RtfServices.getInSuiteFrmUUID = /**
     * @return {?}
     */
    function () {
        try {
            if (gspframeworkService.rtf.extendMethod && gspframeworkService.rtf.extendMethod.getExtObj && gspframeworkService.rtf.extendMethod.getExtObj() && gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID) {
                /** @type {?} */
                var uuid = gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() ? gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() : '';
                return uuid;
            }
            else {
                return "";
            }
        }
        catch (e) {
            return "";
        }
    };
    /**
     * @return {?}
     */
    RtfServices.getCommonVariable = /**
     * @return {?}
     */
    function () {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session) {
                /** @type {?} */
                var tab = gspframeworkService.rtf.session.getCommonVariable();
                return tab;
            }
        }
        catch (e) {
            return null;
        }
    };
    /**
     * @param {?} key
     * @return {?}
     */
    RtfServices.getMenuParameter = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        try {
            /** @type {?} */
            var funcId = RtfServices.getCommonVariable().funcId;
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.func) {
                /** @type {?} */
                var param_1 = null;
                /** @type {?} */
                var callback = (/**
                 * @param {?} res
                 * @return {?}
                 */
                function (res) {
                    // 回到函数得到res 即参数
                    param_1 = res;
                });
                gspframeworkService.rtf.func.getMenuParams(funcId, callback);
                if (param_1) {
                    return param_1.get(key);
                }
            }
            return null;
        }
        catch (e) {
            return null;
        }
    };
    /**
     * @param {?} tabId
     * @return {?}
     */
    RtfServices.getMenuSwitchControlParameter = /**
     * @param {?} tabId
     * @return {?}
     */
    function (tabId) {
        return {
            menuSwitchControl: {
                key: tabId,
                value: new Subject(),
                changeEnable: false
            }
        };
    };
    /**
     * @return {?}
     */
    RtfServices.getMenuSwitchControlEvent = /**
     * @return {?}
     */
    function () {
        try {
            /** @type {?} */
            var tabId = RtfServices.getTabId();
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.frmEvent) {
                /** @type {?} */
                var param_2 = null;
                /** @type {?} */
                var option = RtfServices.getCommonVariable();
                /** @type {?} */
                var callback = (/**
                 * @param {?} res
                 * @return {?}
                 */
                function (res) {
                    // 回到函数得到res 即参数
                    param_2 = res;
                });
                gspframeworkService.rtf.frmEvent.eventListener(tabId, callback, option);
                if (param_2 && param_2.hasOwnProperty('menuSwitchControl') && param_2['menuSwitchControl'].key === tabId) {
                    return param_2['menuSwitchControl'].value;
                }
                return null;
            }
        }
        catch (e) {
            return null;
        }
    };
    /**
     * 获取功能ID
     * @param option `{appId：'应用ID', appEntrance: '应用入口', appType: '类型：app, menu', funcId: '功能ID', tabId: '标签页ID'}`
     */
    /**
     * 获取功能ID
     * @param {?} option `{appId：'应用ID', appEntrance: '应用入口', appType: '类型：app, menu', funcId: '功能ID', tabId: '标签页ID'}`
     * @return {?}
     */
    RtfServices.getFuncId = /**
     * 获取功能ID
     * @param {?} option `{appId：'应用ID', appEntrance: '应用入口', appType: '类型：app, menu', funcId: '功能ID', tabId: '标签页ID'}`
     * @return {?}
     */
    function (option) {
        return RtfServices.getNewPageIdFunc(option);
    };
    /**
     * @return {?}
     */
    RtfServices.getFuncName = /**
     * @return {?}
     */
    function () {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.tabs) {
                /** @type {?} */
                var func = gspframeworkService.rtf.tabs.getAll().find((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return x.id == gspframeworkService.rtf.tabs.getActiveTab().funcId; }));
                return func.FuncName;
            }
            else {
                return '';
            }
        }
        catch (e) {
            return '';
        }
    };
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    RtfServices.getFuncIdOlde = /**
     * @private
     * @param {?} option
     * @return {?}
     */
    function (option) {
        /** @type {?} */
        var funcId;
        if (option.appType.toLowerCase() === 'app') {
            funcId = RtfServices.newPageIdApp(option.appId, option.appEntrance, option.tabId);
        }
        else {
            funcId = RtfServices.newPageIdFunc(option.funcId, option.tabId);
        }
        return funcId;
    };
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    RtfServices.getNewPageIdFunc = /**
     * @private
     * @param {?} option
     * @return {?}
     */
    function (option) {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.func) {
                return gspframeworkService.rtf.func.newPageId(option);
            }
            else {
                return RtfServices.getFuncIdOlde(option);
            }
        }
        catch (e) {
            return RtfServices.getFuncIdOlde(option);
        }
    };
    /**
     * @private
     * @param {?} funcId
     * @param {?} tabId
     * @return {?}
     */
    RtfServices.newPageIdFunc = /**
     * @private
     * @param {?} funcId
     * @param {?} tabId
     * @return {?}
     */
    function (funcId, tabId) {
        return tabId ? funcId + "_" + tabId : funcId;
    };
    /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @return {?}
     */
    RtfServices.mergeAppId = /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @return {?}
     */
    function (appId, appEntrance) {
        return appId + "_" + appEntrance;
    };
    /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @return {?}
     */
    RtfServices.newPageIdApp = /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @return {?}
     */
    function (appId, appEntrance, tabId) {
        return tabId ? RtfServices.mergeAppId(appId, appEntrance) + "_" + tabId : RtfServices.mergeAppId(appId, appEntrance);
    };
    RtfServices.uuid = "";
    RtfServices.isInSuite = false;
    return RtfServices;
}());
export { RtfServices };
if (false) {
    /** @type {?} */
    RtfServices.uuid;
    /** @type {?} */
    RtfServices.isInSuite;
}
//# sourceMappingURL=data:application/json;base64,