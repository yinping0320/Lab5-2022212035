/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// import 'rxjs/add/operator/map';
import { Injectable, Inject } from '@angular/core';
import { map } from 'rxjs/operators';
import { Subject } from 'rxjs';
import { SessionService } from '@ecp-caf/caf-common';
import { RestfulService } from '../restful-service/restful.service';
import { Server_Host } from '../../entitties/server.host';
import { RtfServices } from '../rtfservices/rtfservices';
var JointSearchManagerService = /** @class */ (function () {
    function JointSearchManagerService(restService, sessionService, host) {
        this.restService = restService;
        this.sessionService = sessionService;
        this.host = host;
        this.uri = '/api/runtime/bcc/v1.0/joinsearch/';
        this.localUri = '/api/runtime/sys/v1.0/loginInfo';
        this.lcpUri = '/api/runtime/bcc/v1.0/qdpsearch/';
        this.jointsearchInfoChange = new Subject();
        this.jointsearchInfoList = {};
        // this.uri = this.host + this.uri;
    }
    /**
     * 获取查询参数映射信息
     * @param formid 表单ID
     * @param queryId 查询编号
     */
    /**
     * 获取查询参数映射信息
     * @param {?} formId
     * @param {?} queryId 查询编号
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    JointSearchManagerService.prototype.getjointsearch = /**
     * 获取查询参数映射信息
     * @param {?} formId
     * @param {?} queryId 查询编号
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    function (formId, queryId, queryRelativeUrl) {
        /** @type {?} */
        var result$ = this.getjointsearchList(formId, queryId, '', '', queryRelativeUrl);
        return result$.pipe(map((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value && value[formId + queryId]) {
                return value[formId + queryId];
            }
            else {
                return null;
            }
        })));
    };
    /**
     * @param {?} visibleJointParam
     * @param {?} queryRelativeUrl
     * @param {?} searchList
     * @return {?}
     */
    JointSearchManagerService.prototype.getVisibleJoint = /**
     * @param {?} visibleJointParam
     * @param {?} queryRelativeUrl
     * @param {?} searchList
     * @return {?}
     */
    function (visibleJointParam, queryRelativeUrl, searchList) {
        /** @type {?} */
        var jointUri = this.host + (!queryRelativeUrl ? this.lcpUri : queryRelativeUrl) + 'visiblejoint';
        /** @type {?} */
        var result$ = this.restService.put(jointUri, { 'Param': visibleJointParam }, {}, this.createHeaderSessionId());
        return result$.pipe(map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            var e_1, _a, e_2, _b;
            /** @type {?} */
            var jointSearchList = [];
            if (data) {
                data = !queryRelativeUrl ? data : data.returnValue;
                if (!queryRelativeUrl) {
                    try {
                        for (var searchList_1 = tslib_1.__values(searchList), searchList_1_1 = searchList_1.next(); !searchList_1_1.done; searchList_1_1 = searchList_1.next()) {
                            var search = searchList_1_1.value;
                            if (data[search.id] !== null && data[search.id] === true) {
                                jointSearchList.push(search);
                            }
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (searchList_1_1 && !searchList_1_1.done && (_a = searchList_1.return)) _a.call(searchList_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                else {
                    var _loop_1 = function (search) {
                        /** @type {?} */
                        var item = data.find((/**
                         * @param {?} d
                         * @return {?}
                         */
                        function (d) { return d.id === search.id; }));
                        if (item && item.visible === true) {
                            jointSearchList.push(search);
                        }
                    };
                    try {
                        for (var searchList_2 = tslib_1.__values(searchList), searchList_2_1 = searchList_2.next(); !searchList_2_1.done; searchList_2_1 = searchList_2.next()) {
                            var search = searchList_2_1.value;
                            _loop_1(search);
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (searchList_2_1 && !searchList_2_1.done && (_b = searchList_2.return)) _b.call(searchList_2);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                }
            }
            return jointSearchList;
        })));
    };
    /**
     * 获取参数映射列表
     * @param queryId 查询编号
     * @param userId 用户ID
     * @param languageType 语言类型
     */
    /**
     * 获取参数映射列表
     * @param {?} formId
     * @param {?} queryId 查询编号
     * @param {?} userId 用户ID
     * @param {?} languageType 语言类型
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    JointSearchManagerService.prototype.getjointsearchList = /**
     * 获取参数映射列表
     * @param {?} formId
     * @param {?} queryId 查询编号
     * @param {?} userId 用户ID
     * @param {?} languageType 语言类型
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    function (formId, queryId, userId, languageType, queryRelativeUrl) {
        var _this = this;
        /** @type {?} */
        var restUri = this.host + this.uri + 'getjoinsearch';
        /** @type {?} */
        var result$ = this.restService.get(restUri, { formId: formId, queryId: queryId, userId: userId, languageType: languageType }, this.createHeaderSessionId());
        return result$.pipe(map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            // this.jointsearchInfoList = {};
            if (data && data.length) {
                data.forEach((/**
                 * @param {?} element
                 * @return {?}
                 */
                function (element) {
                    _this.jointsearchInfoList[element.formId + element.queryId] = element;
                }));
                _this.jointsearchInfoChange.next({ jointsearchInfoList: _this.jointsearchInfoList });
                return _this.jointsearchInfoList;
            }
            else {
                _this.jointsearchInfoChange.next({ jointsearchInfoList: null });
                return null;
            }
        })));
    };
    /**
     * 保存参数映射
     * @param jointsearch 参数映射实体
     */
    /**
     * 保存参数映射
     * @param {?} jointsearch 参数映射实体
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    JointSearchManagerService.prototype.savejointsearch = /**
     * 保存参数映射
     * @param {?} jointsearch 参数映射实体
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    function (jointsearch, queryRelativeUrl) {
        var _this = this;
        /** @type {?} */
        var restUri = this.host + this.uri + 'addjointsearch';
        /** @type {?} */
        var result$ = this.restService.post(restUri, jointsearch, {}, this.createHeaderSessionId());
        return result$.pipe(map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data === true) {
                _this.jointsearchInfoList[jointsearch.FormId + jointsearch.queryId] = jointsearch;
                return true;
            }
            else {
                return false;
            }
        })));
    };
    /**
     * 删除联查
     * @param queryId 查询编号
     */
    /**
     * 删除联查
     * @param {?} formId
     * @param {?} queryId 查询编号
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    JointSearchManagerService.prototype.deletejointsearch = /**
     * 删除联查
     * @param {?} formId
     * @param {?} queryId 查询编号
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    function (formId, queryId, queryRelativeUrl) {
        var _this = this;
        /** @type {?} */
        var restUri = this.host + this.uri + 'deletejointsearch';
        /** @type {?} */
        var result$ = this.restService.delete(restUri, { formId: formId, queryId: queryId }, this.createHeaderSessionId());
        return result$.pipe(map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data === true) {
                _this.jointsearchInfoList[formId + queryId] = null;
                return true;
            }
            else {
                return false;
            }
        })));
    };
    /**
     * @return {?}
     */
    JointSearchManagerService.prototype.getLanguageList = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var result$ = this.restService.get(this.localUri, { infoType: 'supportedLanguage' });
        return result$.pipe(map((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            return data;
        })));
    };
    /**
     * @private
     * @return {?}
     */
    JointSearchManagerService.prototype.createHeaderSessionId = /**
     * @private
     * @return {?}
     */
    function () {
        return RtfServices.createHeaderSessionId(this.sessionService);
    };
    JointSearchManagerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    JointSearchManagerService.ctorParameters = function () { return [
        { type: RestfulService },
        { type: SessionService },
        { type: String, decorators: [{ type: Inject, args: [Server_Host,] }] }
    ]; };
    return JointSearchManagerService;
}());
export { JointSearchManagerService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    JointSearchManagerService.prototype.uri;
    /**
     * @type {?}
     * @private
     */
    JointSearchManagerService.prototype.localUri;
    /**
     * @type {?}
     * @private
     */
    JointSearchManagerService.prototype.lcpUri;
    /** @type {?} */
    JointSearchManagerService.prototype.jointsearchInfoChange;
    /** @type {?} */
    JointSearchManagerService.prototype.jointsearchInfoList;
    /**
     * @type {?}
     * @private
     */
    JointSearchManagerService.prototype.restService;
    /**
     * @type {?}
     * @private
     */
    JointSearchManagerService.prototype.sessionService;
    /**
     * @type {?}
     * @private
     */
    JointSearchManagerService.prototype.host;
}
//# sourceMappingURL=data:application/json;base64,