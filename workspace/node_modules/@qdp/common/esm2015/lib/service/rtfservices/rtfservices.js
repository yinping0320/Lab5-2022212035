/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Subject } from "rxjs";
export class RtfServices {
    /**
     * @param {?=} sessionService
     * @return {?}
     */
    static createHeaderSessionId(sessionService) {
        /** @type {?} */
        const options = {
            headers: {
                'Content-Type': 'application/json'
            }
        };
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session && gspframeworkService.rtf.session.getFormToken()) {
                options.headers['X-CAF-Runtime-CommonVariable'] = gspframeworkService.rtf.session.getFormToken();
            }
            else if (sessionService && sessionService.getCurrentSeesionId()) {
                options.headers['X-CAF-Runtime-CommonVariable'] = sessionService.getCurrentSeesionId();
            }
            else if (sessionService && sessionService.getUserSessionId()) {
                options.headers['SessionId'] = sessionService.getUserSessionId();
            }
            else if (localStorage.getItem('sessionId')) {
                options.headers['SessionId'] = localStorage.getItem('sessionId');
            }
        }
        catch (e) { }
        return options;
    }
    /**
     * @param {?=} sessionService
     * @return {?}
     */
    static getSessionId(sessionService) {
        /** @type {?} */
        let sessionId;
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session && gspframeworkService.rtf.session.getFormToken()) {
                sessionId = gspframeworkService.rtf.session.getFormToken();
            }
            else if (sessionService && sessionService.getCurrentSeesionId()) {
                sessionId = sessionService.getCurrentSeesionId();
            }
            else if (sessionService && sessionService.getUserSessionId()) {
                sessionId = sessionService.getUserSessionId();
            }
            else if (localStorage.getItem('sessionId')) {
                sessionId = localStorage.getItem('sessionId');
            }
        }
        catch (e) { }
        return sessionId;
    }
    /**
     * @param {?=} queryId
     * @return {?}
     */
    static getTabId(queryId) {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session) {
                /** @type {?} */
                const tab = gspframeworkService.rtf.session.getCommonVariable();
                if (gspframeworkService.rtf.extendMethod && gspframeworkService.rtf.extendMethod.getExtObj && gspframeworkService.rtf.extendMethod.getExtObj() && gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID) {
                    /** @type {?} */
                    const uuid = gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() ? gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() : '';
                    return tab.tabId + uuid;
                }
                else {
                    return tab.tabId;
                }
            }
        }
        catch (e) {
            return queryId;
        }
    }
    /**
     * @return {?}
     */
    static getInSuiteFrmUUID() {
        try {
            if (gspframeworkService.rtf.extendMethod && gspframeworkService.rtf.extendMethod.getExtObj && gspframeworkService.rtf.extendMethod.getExtObj() && gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID) {
                /** @type {?} */
                const uuid = gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() ? gspframeworkService.rtf.extendMethod.getExtObj().iGIXFrmUUID() : '';
                return uuid;
            }
            else {
                return "";
            }
        }
        catch (e) {
            return "";
        }
    }
    /**
     * @return {?}
     */
    static getCommonVariable() {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.session) {
                /** @type {?} */
                const tab = gspframeworkService.rtf.session.getCommonVariable();
                return tab;
            }
        }
        catch (e) {
            return null;
        }
    }
    /**
     * @param {?} key
     * @return {?}
     */
    static getMenuParameter(key) {
        try {
            /** @type {?} */
            const funcId = RtfServices.getCommonVariable().funcId;
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.func) {
                /** @type {?} */
                let param = null;
                /** @type {?} */
                const callback = (/**
                 * @param {?} res
                 * @return {?}
                 */
                function (res) {
                    // 回到函数得到res 即参数
                    param = res;
                });
                gspframeworkService.rtf.func.getMenuParams(funcId, callback);
                if (param) {
                    return param.get(key);
                }
            }
            return null;
        }
        catch (e) {
            return null;
        }
    }
    /**
     * @param {?} tabId
     * @return {?}
     */
    static getMenuSwitchControlParameter(tabId) {
        return {
            menuSwitchControl: {
                key: tabId,
                value: new Subject(),
                changeEnable: false
            }
        };
    }
    /**
     * @return {?}
     */
    static getMenuSwitchControlEvent() {
        try {
            /** @type {?} */
            const tabId = RtfServices.getTabId();
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.frmEvent) {
                /** @type {?} */
                let param = null;
                /** @type {?} */
                const option = RtfServices.getCommonVariable();
                /** @type {?} */
                const callback = (/**
                 * @param {?} res
                 * @return {?}
                 */
                function (res) {
                    // 回到函数得到res 即参数
                    param = res;
                });
                gspframeworkService.rtf.frmEvent.eventListener(tabId, callback, option);
                if (param && param.hasOwnProperty('menuSwitchControl') && param['menuSwitchControl'].key === tabId) {
                    return param['menuSwitchControl'].value;
                }
                return null;
            }
        }
        catch (e) {
            return null;
        }
    }
    /**
     * 获取功能ID
     * @param {?} option `{appId：'应用ID', appEntrance: '应用入口', appType: '类型：app, menu', funcId: '功能ID', tabId: '标签页ID'}`
     * @return {?}
     */
    static getFuncId(option) {
        return RtfServices.getNewPageIdFunc(option);
    }
    /**
     * @return {?}
     */
    static getFuncName() {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.tabs) {
                /** @type {?} */
                const func = gspframeworkService.rtf.tabs.getAll().find((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => x.id == gspframeworkService.rtf.tabs.getActiveTab().funcId));
                return func.FuncName;
            }
            else {
                return '';
            }
        }
        catch (e) {
            return '';
        }
    }
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    static getFuncIdOlde(option) {
        /** @type {?} */
        let funcId;
        if (option.appType.toLowerCase() === 'app') {
            funcId = RtfServices.newPageIdApp(option.appId, option.appEntrance, option.tabId);
        }
        else {
            funcId = RtfServices.newPageIdFunc(option.funcId, option.tabId);
        }
        return funcId;
    }
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    static getNewPageIdFunc(option) {
        try {
            if (gspframeworkService && gspframeworkService.rtf && gspframeworkService.rtf.func) {
                return gspframeworkService.rtf.func.newPageId(option);
            }
            else {
                return RtfServices.getFuncIdOlde(option);
            }
        }
        catch (e) {
            return RtfServices.getFuncIdOlde(option);
        }
    }
    /**
     * @private
     * @param {?} funcId
     * @param {?} tabId
     * @return {?}
     */
    static newPageIdFunc(funcId, tabId) {
        return tabId ? `${funcId}_${tabId}` : funcId;
    }
    /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @return {?}
     */
    static mergeAppId(appId, appEntrance) {
        return `${appId}_${appEntrance}`;
    }
    /**
     * @private
     * @param {?} appId
     * @param {?} appEntrance
     * @param {?} tabId
     * @return {?}
     */
    static newPageIdApp(appId, appEntrance, tabId) {
        return tabId ? `${RtfServices.mergeAppId(appId, appEntrance)}_${tabId}` : RtfServices.mergeAppId(appId, appEntrance);
    }
}
RtfServices.uuid = "";
RtfServices.isInSuite = false;
if (false) {
    /** @type {?} */
    RtfServices.uuid;
    /** @type {?} */
    RtfServices.isInSuite;
}
//# sourceMappingURL=data:application/json;base64,