/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class JSONUtils {
    /**
     * @param {?} object
     * @return {?}
     */
    static isObj(object) {
        return object && typeof (object) == 'object' && Object.prototype.toString.call(object).toLowerCase() == "[object object]";
    }
    /**
     * @param {?} object
     * @return {?}
     */
    static isArray(object) {
        return object && typeof (object) == 'object' && object.constructor == Array;
    }
    /**
     * @param {?} object
     * @return {?}
     */
    static getLength(object) {
        /** @type {?} */
        var count = 0;
        for (var i in object)
            count++;
        return count;
    }
    /**
     * @param {?} objA
     * @param {?} objB
     * @return {?}
     */
    static Compare(objA, objB) {
        if (!JSONUtils.isObj(objA) || !JSONUtils.isObj(objB))
            return false; //判断类型是否正确
        if (JSONUtils.getLength(objA) != JSONUtils.getLength(objB))
            return false; //判断长度是否一致
        return JSONUtils.CompareObj(objA, objB, true); //默认为true
    }
    /**
     * @private
     * @param {?} objA
     * @param {?} objB
     * @param {?} flag
     * @return {?}
     */
    static CompareObj(objA, objB, flag) {
        for (var key in objA) {
            if (!flag) //跳出整个循环
                break;
            if (!objB.hasOwnProperty(key)) {
                flag = false;
                break;
            }
            if (!JSONUtils.isArray(objA[key])) { //子级不是数组时,比较属性值
                if (objB[key] != objA[key]) {
                    flag = false;
                    break;
                }
            }
            else {
                if (!JSONUtils.isArray(objB[key])) {
                    flag = false;
                    break;
                }
                /** @type {?} */
                var oA = objA[key];
                /** @type {?} */
                var oB = objB[key];
                if (oA.length != oB.length) {
                    flag = false;
                    break;
                }
                for (var k in oA) {
                    if (!flag) //这里跳出循环是为了不让递归继续
                        break;
                    flag = JSONUtils.CompareObj(oA[k], oB[k], flag);
                }
            }
        }
        return flag;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHFkcC9jb21tb24vIiwic291cmNlcyI6WyJsaWIvc2VydmljZS91dGlscy9qc29uLnV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU0sT0FBTyxTQUFTOzs7OztJQUNsQixNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU07UUFDZixPQUFPLE1BQU0sSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksUUFBUSxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsSUFBSSxpQkFBaUIsQ0FBQztJQUM5SCxDQUFDOzs7OztJQUVELE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTTtRQUNqQixPQUFPLE1BQU0sSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksUUFBUSxJQUFJLE1BQU0sQ0FBQyxXQUFXLElBQUksS0FBSyxDQUFDO0lBQ2hGLENBQUM7Ozs7O0lBRUQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNOztZQUNmLEtBQUssR0FBRyxDQUFDO1FBQ2IsS0FBSyxJQUFJLENBQUMsSUFBSSxNQUFNO1lBQUUsS0FBSyxFQUFFLENBQUM7UUFDOUIsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQzs7Ozs7O0lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSTtRQUNyQixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQUUsT0FBTyxLQUFLLENBQUMsQ0FBQyxVQUFVO1FBQzlFLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztZQUFFLE9BQU8sS0FBSyxDQUFDLENBQUMsVUFBVTtRQUNwRixPQUFPLFNBQVMsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVM7SUFDNUQsQ0FBQzs7Ozs7Ozs7SUFFTyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtRQUN0QyxLQUFLLElBQUksR0FBRyxJQUFJLElBQUksRUFBRTtZQUNsQixJQUFJLENBQUMsSUFBSSxFQUFFLFFBQVE7Z0JBQ2YsTUFBTTtZQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUMzQixJQUFJLEdBQUcsS0FBSyxDQUFDO2dCQUNiLE1BQU07YUFDVDtZQUNELElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsZUFBZTtnQkFDaEQsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO29CQUN4QixJQUFJLEdBQUcsS0FBSyxDQUFDO29CQUNiLE1BQU07aUJBQ1Q7YUFDSjtpQkFBTTtnQkFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtvQkFDL0IsSUFBSSxHQUFHLEtBQUssQ0FBQztvQkFDYixNQUFNO2lCQUNUOztvQkFDRyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQzs7b0JBQ2QsRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7Z0JBQ2xCLElBQUksRUFBRSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFO29CQUN4QixJQUFJLEdBQUcsS0FBSyxDQUFDO29CQUNiLE1BQU07aUJBQ1Q7Z0JBQ0QsS0FBSyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUU7b0JBQ2QsSUFBSSxDQUFDLElBQUksRUFBRSxpQkFBaUI7d0JBQ3hCLE1BQU07b0JBQ1YsSUFBSSxHQUFHLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztpQkFDbkQ7YUFDSjtTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEpTT05VdGlscyB7XHJcbiAgICBzdGF0aWMgaXNPYmoob2JqZWN0KSB7XHJcbiAgICAgICAgcmV0dXJuIG9iamVjdCAmJiB0eXBlb2YgKG9iamVjdCkgPT0gJ29iamVjdCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iamVjdCkudG9Mb3dlckNhc2UoKSA9PSBcIltvYmplY3Qgb2JqZWN0XVwiO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBpc0FycmF5KG9iamVjdCkge1xyXG4gICAgICAgIHJldHVybiBvYmplY3QgJiYgdHlwZW9mIChvYmplY3QpID09ICdvYmplY3QnICYmIG9iamVjdC5jb25zdHJ1Y3RvciA9PSBBcnJheTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0TGVuZ3RoKG9iamVjdCkge1xyXG4gICAgICAgIHZhciBjb3VudCA9IDA7XHJcbiAgICAgICAgZm9yICh2YXIgaSBpbiBvYmplY3QpIGNvdW50Kys7XHJcbiAgICAgICAgcmV0dXJuIGNvdW50O1xyXG4gICAgfVxyXG4gICAgc3RhdGljIENvbXBhcmUob2JqQSwgb2JqQikge1xyXG4gICAgICAgIGlmICghSlNPTlV0aWxzLmlzT2JqKG9iakEpIHx8ICFKU09OVXRpbHMuaXNPYmoob2JqQikpIHJldHVybiBmYWxzZTsgLy/liKTmlq3nsbvlnovmmK/lkKbmraPnoa5cclxuICAgICAgICBpZiAoSlNPTlV0aWxzLmdldExlbmd0aChvYmpBKSAhPSBKU09OVXRpbHMuZ2V0TGVuZ3RoKG9iakIpKSByZXR1cm4gZmFsc2U7IC8v5Yik5pat6ZW/5bqm5piv5ZCm5LiA6Ie0XHJcbiAgICAgICAgcmV0dXJuIEpTT05VdGlscy5Db21wYXJlT2JqKG9iakEsIG9iakIsIHRydWUpOyAvL+m7mOiupOS4unRydWVcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBDb21wYXJlT2JqKG9iakEsIG9iakIsIGZsYWcpIHtcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gb2JqQSkge1xyXG4gICAgICAgICAgICBpZiAoIWZsYWcpIC8v6Lez5Ye65pW05Liq5b6q546vXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgaWYgKCFvYmpCLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICAgICAgICAgIGZsYWcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghSlNPTlV0aWxzLmlzQXJyYXkob2JqQVtrZXldKSkgeyAvL+WtkOe6p+S4jeaYr+aVsOe7hOaXtizmr5TovoPlsZ7mgKflgLxcclxuICAgICAgICAgICAgICAgIGlmIChvYmpCW2tleV0gIT0gb2JqQVtrZXldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFKU09OVXRpbHMuaXNBcnJheShvYmpCW2tleV0pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIG9BID0gb2JqQVtrZXldLFxyXG4gICAgICAgICAgICAgICAgICAgIG9CID0gb2JqQltrZXldO1xyXG4gICAgICAgICAgICAgICAgaWYgKG9BLmxlbmd0aCAhPSBvQi5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICBmbGFnID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBrIGluIG9BKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmbGFnKSAvL+i/memHjOi3s+WHuuW+queOr+aYr+S4uuS6huS4jeiuqemAkuW9kue7p+e7rVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBmbGFnID0gSlNPTlV0aWxzLkNvbXBhcmVPYmoob0Fba10sIG9CW2tdLCBmbGFnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmxhZztcclxuICAgIH1cclxufSJdfQ==