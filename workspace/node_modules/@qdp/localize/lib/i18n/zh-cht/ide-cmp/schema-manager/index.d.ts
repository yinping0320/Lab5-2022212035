export declare const SCHEME_MANAGEMENT: {
    dailogName: string;
    formatSchemaManagerName: string;
    formatManager: string;
    preFormat: string;
    btnCancel: string;
    btnOK: string;
    btnSave: string;
    btnSaveAs: string;
    btnDelete: string;
    btnSaveAsClose: string;
    schemeName: string;
    schemeType: string;
    schemeTypePublic: string;
    schemePublic: string;
    schemeTypePersonal: string;
    schemePersonal: string;
    schemeTypeOrg: string;
    schemeOrg: string;
    schemeDefault: string;
    titleOption: {
        tab: string;
        title: string;
        subTitleColumnName: string[];
        subTitleData: {
            label: string;
            value: number;
        }[];
        subTitleAlign: {
            label: string;
            value: number;
        }[];
    };
    columnOption: {
        tab: string;
        btnAdd: string;
        btnDelete: string;
        btnUp: string;
        btnDown: string;
        btnLeft: string;
        btnRight: string;
        selection1: string;
        selection2: string;
        name: string;
        binding: string;
        showType: string;
        colWidth: string;
        align: string;
        alignData: {
            name: string;
            value: number;
        }[];
        show: string;
        fixColumn: string;
        wordWrap: string;
        autoFitColumn: string;
        dataShow: string;
        formatType: string;
        formatTypeData: {
            name: string;
            value: number;
        }[];
        dateFormat: string;
        numberFormat: string;
        numberField: string;
        enumFormat: string;
        sort: string;
        sortData: {
            name: string;
            value: number;
        }[];
        group: string;
        pageTotal: string;
        pageTotalType: string;
        groupTotal: string;
        groupSubTotalType: string;
        groupTotalType: string;
        aggregateTotal: string;
        totalType: string;
        aggregateData: {
            name: string;
            value: number;
        }[];
        dimension: string;
        dimensionData: {
            name: string;
            value: number;
        }[];
        enumType: {
            name: string;
            value: string;
        }[];
        groupColor: string;
        dataShowOption: {
            name: string;
            value: number;
        }[];
        isRed: string;
    };
    styleOption: {
        tab: string;
        column: string;
        styleTitle: string;
        styleSubTitle: string;
        styleHeader: string;
        styleBody: string;
        styleFooter: string;
        rowHeight: string;
        textStyle: string;
        preview: string;
        fontFamilyData: {
            name: string;
            value: number;
        }[];
    };
    otherOption: {
        tab: string;
        selection: string;
        dataCache: string;
        firstLoad: string;
        filterRow: string;
        showHeaderSort: string;
        mergeCell: string;
        pageType: string;
        pageSize: string;
        delay: string;
        timing: string;
        export: string;
        groupOption: string;
        rowSubtotal: string;
        colSubtotal: string;
        rowTotal: string;
        colTotal: string;
        showZero: string;
        expand: string;
        pageTypeData: {
            name: string;
            value: number;
        }[];
        rangeData: {
            name: string;
            value: number;
        }[];
        treeInfo: string;
        treeInfoType: string;
        treeInfoData: {
            name: string;
            value: number;
        }[];
        pathField: string;
        pathStep: string;
        idField: string;
        parentField: string;
    };
    message: {
        save: {
            success: string;
            error: string;
        };
        update: {
            success: string;
            error: string;
        };
        delete: {
            success: string;
            error: string;
        };
        info: {
            title: string;
            delete: string;
        };
        validate: {
            judgeUpdate: string;
            notNull: string;
            exists: string;
            tooLong: string;
            isProtected: string;
            crosstabValueDimension: string;
            qdpModifyPublicSchema: string;
            textColumnSort: string;
        };
    };
    basicInfoName: string;
};
