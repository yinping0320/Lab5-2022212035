export declare const QDP_ZH_CHS: {
    ideCmp: {
        schemaManager: {
            dailogName: string;
            formatSchemaManagerName: string;
            formatManager: string;
            preFormat: string;
            btnCancel: string;
            btnOK: string;
            btnSave: string;
            btnSaveAs: string;
            btnDelete: string;
            btnSaveAsClose: string;
            schemeName: string;
            schemeType: string;
            schemeTypePublic: string;
            schemePublic: string;
            schemeTypePersonal: string;
            schemePersonal: string;
            schemeTypeOrg: string;
            schemeOrg: string;
            schemeDefault: string;
            titleOption: {
                tab: string;
                title: string;
                subTitleColumnName: string[];
                subTitleData: {
                    label: string;
                    value: number;
                }[];
                subTitleAlign: {
                    label: string;
                    value: number;
                }[];
            };
            columnOption: {
                tab: string;
                btnAdd: string;
                btnDelete: string;
                btnUp: string;
                btnDown: string;
                btnLeft: string;
                btnRight: string;
                selection1: string;
                selection2: string;
                name: string;
                binding: string;
                showType: string;
                colWidth: string;
                align: string;
                alignData: {
                    name: string;
                    value: number;
                }[];
                show: string;
                fixColumn: string;
                wordWrap: string;
                dataShow: string;
                autoFitColumn: string;
                formatType: string;
                formatTypeData: {
                    name: string;
                    value: number;
                }[];
                dateFormat: string;
                numberFormat: string;
                numberField: string;
                enumFormat: string;
                sort: string;
                sortData: {
                    name: string;
                    value: number;
                }[];
                group: string;
                pageTotal: string;
                pageTotalType: string;
                groupTotal: string;
                groupSubTotalType: string;
                groupTotalType: string;
                aggregateTotal: string;
                totalType: string;
                aggregateData: {
                    name: string;
                    value: number;
                }[];
                dimension: string;
                dimensionData: {
                    name: string;
                    value: number;
                }[];
                enumType: {
                    name: string;
                    value: string;
                }[];
                groupColor: string;
                dataShowOption: {
                    name: string;
                    value: number;
                }[];
                isRed: string;
            };
            styleOption: {
                tab: string;
                column: string;
                styleTitle: string;
                styleSubTitle: string;
                styleHeader: string;
                styleBody: string;
                styleFooter: string;
                rowHeight: string;
                textStyle: string;
                preview: string;
                fontFamilyData: {
                    name: string;
                    value: number;
                }[];
            };
            otherOption: {
                tab: string;
                selection: string;
                dataCache: string;
                firstLoad: string;
                filterRow: string;
                showHeaderSort: string;
                mergeCell: string;
                pageType: string;
                pageSize: string;
                delay: string;
                timing: string;
                export: string;
                groupOption: string;
                rowSubtotal: string;
                colSubtotal: string;
                rowTotal: string;
                colTotal: string;
                showZero: string;
                expand: string;
                pageTypeData: {
                    name: string;
                    value: number;
                }[];
                rangeData: {
                    name: string;
                    value: number;
                }[];
                treeInfo: string;
                treeInfoType: string;
                treeInfoData: {
                    name: string;
                    value: number;
                }[];
                pathField: string;
                pathStep: string;
                idField: string;
                parentField: string;
            };
            message: {
                save: {
                    success: string;
                    error: string;
                };
                update: {
                    success: string;
                    error: string;
                };
                delete: {
                    success: string;
                    error: string;
                };
                info: {
                    title: string;
                    delete: string;
                };
                validate: {
                    judgeUpdate: string;
                    notNull: string;
                    exists: string;
                    tooLong: string;
                    isProtected: string;
                    crosstabValueDimension: string;
                    qdpModifyPublicSchema: string;
                    textColumnSort: string;
                };
            };
            basicInfoName: string;
        };
        chartsSchemaManager: {
            chartsSchemaManagerName: string;
            chartsType: {
                tab: string;
                chartsType: string;
                chartsTypeData: ({
                    name: string;
                    value: number;
                } | {
                    name: string;
                    value: string;
                })[];
            };
            chartsData: {
                tab: string;
                xAxis: string;
                xPositionData: {
                    name: string;
                    value: string;
                }[];
                yAxis: string;
                yPositionData: {
                    name: string;
                    value: string;
                }[];
                axisTypeData: {
                    name: string;
                    value: string;
                }[];
                type: string;
                position: string;
                binding: string;
                category: string;
                numerical1: string;
                numerical2: string;
                longitude: string;
                latitude: string;
                barTypeData: {
                    name: string;
                    value: number;
                }[];
                name: string;
                select: string;
                dimensionSetting: string;
                dimension: string;
                indicator: string;
            };
            chartsStyle: {
                tab: string;
                titleOption: string;
                title: string;
                select: string;
                xAxisOption: string;
                xAxisPosition: string;
                yAxisPosition: string;
                xAxisAlignData: {
                    name: string;
                    value: string;
                }[];
                yAxisOption: string;
                yAxisAlignData: {
                    name: string;
                    value: string;
                }[];
                fontFamilyData: {
                    name: string;
                    value: string;
                }[];
                rowHeight: string;
                contentStyle: string;
                multiDataOption: string;
                dataMultiple: {
                    name: string;
                    value: string;
                }[];
                multiDataType: string;
                legend: string;
                legendAlgin: string;
                legendAlignData: {
                    name: string;
                    value: string;
                }[];
                legendOrient: string;
                orientData: {
                    name: string;
                    value: string;
                }[];
                legendGap: string;
                itemWidth: string;
                itemHeight: string;
                visualMap: string;
                visualMapType: string;
                visualMapTypeData: {
                    name: string;
                    value: string;
                }[];
                visualMapOrient: string;
                visualMapPosition: string;
                visualMapTop: string;
                visualMapBottom: string;
                visualMapLeft: string;
                visualMapRight: string;
                continuous: string;
                piecewise: string;
                otherStyle: string;
                customStyle: string;
                validate: {
                    echartsCustomOptions: string;
                };
            };
        };
        conditionSchemaManager: {
            conditionSchemeManagerName: string;
            schemeSave: string;
            schemeManagement: string;
            btnDelete: string;
            btnSave: string;
            schemeName: string;
            schemeType: string;
            saveScheme: string;
            public: string;
            personal: string;
            default: string;
            noDefault: string;
            message: {
                save: {
                    success: string;
                    error: string;
                };
                update: {
                    success: string;
                    error: string;
                };
                delete: {
                    success: string;
                    error: string;
                };
                validate: {
                    delete: string;
                    longLimit: string;
                    repeatName: string;
                    select: string;
                };
            };
        };
        paramsMapping: {
            paramOption: string;
            btnAdd: string;
            btnDelete: string;
            btnCancel: string;
            btnOK: string;
            columnHeader: string[];
            mappingTypeData: {
                name: string;
                value: number;
            }[];
            message: {
                validate: {
                    select: string;
                };
            };
        };
        drillDown: {
            drillDownName: string;
            btnAdd: string;
            btnDelete: string;
            btnCancel: string;
            btnOK: string;
            menuBtn: string;
            appBtn: string;
            columnHeader: string[];
            paramColumnHeader: string[];
            displayStyle: {
                'name': string;
                value: number;
            }[];
            enumExpress: string[];
        };
        printOption: {
            print: string;
            dailogName: string;
            layout: string;
            paperSize: string;
            margin: string;
            zoom: string;
            pdfDownload: string;
            printPreview: string;
            distributionData: {
                name: string;
                value: number;
            }[];
            pageSizeData: {
                name: string;
                value: number;
            }[];
            marginData: {
                name: string;
                value: number;
                margin: {
                    marginTop: number;
                    marginLeft: number;
                    marginBottom: number;
                    marginRight: number;
                };
            }[];
            message: {
                validate: {
                    margin: string;
                    pageSize: string;
                    distribution: string;
                };
            };
        };
    };
    queryFramework: {
        exportName: string;
        btnExportText: string;
        btnExportValue: string;
        pageInfo: {
            totalPreInfo: string;
            totalEndInfo: string;
        };
        printName: string;
        refreshName: string;
        filterName: string;
        btnManager: string;
        dimensionSetting: string;
        btnCondition: string;
        btnQuery: string;
        btnSaveAsSchema: string;
        btnSaveSchema: string;
        btnPrintForm: string;
        conditionManagerListColumn: string[];
        btnOk: string;
        btnCancel: string;
        dialogTitle: string;
        dialogTitle1: string;
        dialogTitle2: string;
        tabName1: string;
        tabName2: string;
        schemaName: string;
        ispreName: string;
        defaultSchemaName: string;
        schemaType: {
            public: string;
            personal: string;
        };
        defaultName: string;
        message: {
            saveas: string;
            lengthValidate: string;
            save: {
                success: string;
                error: string;
            };
            update: {
                success: string;
                error: string;
            };
            delete: {
                success: string;
                error: string;
            };
            info: {
                title: string;
                delete: string;
            };
            operate: {
                success: string;
                error: string;
            };
            validate: {
                judgeUpdate: string;
                notNull: string;
                exists: string;
                beMetadataIdEmpty: string;
                formIdFieldEmpty: string;
                unselected: string;
            };
        };
        clearCache: string;
        btnExpand: string;
        btnCollapse: string;
        btnClearSort: string;
    };
    spread: {
        crossTable: {
            dimensionManager: string;
            dimensionName: string[];
            columnManager: string;
            columnSetting: string[];
            valueDimensionTitle: string;
            rowDimensionTitle: string;
            colDimensionTitle: string;
        };
        aggreateText: string;
        message: {
            export: string;
            print: string;
            preview: string;
            aysnExport: string;
            clearCache: string;
            extend: {
                query: {
                    before: string;
                    after: string;
                };
                dataLoading: {
                    before: string;
                    after: string;
                };
                render: {
                    before: string;
                    after: string;
                };
            };
            click: {
                select: string;
                cellSelect: string;
            };
            validate: {
                schemaInfo: string;
                rowDimension: string;
                valueDimension: string;
                nodata: string;
                sort: string;
                qdpQueryExport: string;
                qdpQueryPrint: string;
            };
        };
    };
    formular: {
        define: {
            labelSaveFormular: string;
            labelSaveAsFormular: string;
            labelDeleteFormular: string;
            labelGeneraterFormular: string;
            labelQueryFunc: string;
            labelBasicInfo: string;
            labelFormularName: string;
            labelIsGroup: string;
            labelParamInfo: string;
            labelResultColInfo: string;
            resultSortColumns: {
                id: string;
                label: string;
            }[];
            resultColVisibleColumns: {
                id: string;
                label: string;
            }[];
            columntitles: {
                'resultcolvisible': string;
                'resultcode': string;
                'resultdescription': string;
                'resultsort': string;
            };
            messageAlert: {
                'nameVerify': string;
                'funcVerify': string;
                'saveFormular': string;
                'saveAsFormular': string;
                'saveAsFormularFailture': string;
                'pleaseSelectQueryFunc': string;
                'pleaseSelectFormular': string;
                'resultVerify': string;
                'formularResultVerify': string;
                'combineVerify': string;
                'formularIntegrityVerify': string;
                'saveFormularFailure': string;
                'formularSaveVerify': string;
                'deleteFormular': string;
                'deleteFormularFailure': string;
                'formularIsProtected': string;
                'formularIsProtectedNotDelete': string;
            };
        };
        defineWizard: {
            labelSelectTemplate: string;
            labelFormularDefine: string;
        };
        step: {
            labelPre: string;
            labelNext: string;
            labelFinish: string;
        };
        formularSelect: {
            selectionFormular: string;
            lableQdpFormular: string;
            messageAlert: {
                'formularSelectVerify': string;
                'formularDefineVerify': string;
            };
        };
        service: {
            lableFormulaWizard: string;
            messageAlert: {
                'formulaVerify': string;
            };
        };
    };
};
