/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export var QUERY_FRAMEWORK = {
    exportName: 'Export',
    btnExportText: 'Excel(Text)',
    btnExportValue: 'Excel(Number)',
    pageInfo: {
        totalPreInfo: 'Total',
        totalEndInfo: 'Record'
    },
    printName: 'Print',
    refreshName: 'Refresh',
    filterName: 'Filter',
    dimensionSetting: 'Dimension Setting',
    btnCondition: 'Query Condition',
    btnQuery: 'Query',
    btnSaveAsSchema: 'Save As',
    btnSaveSchema: 'Save',
    btnPrintForm: 'Documents Print',
    conditionManagerListColumn: ['Schema', 'Default', 'Operation'],
    btnOk: 'OK',
    btnCancel: 'Cancel',
    dialogTitle: 'Query Condition',
    dialogTitle1: 'Schema Management',
    dialogTitle2: 'Save As',
    tabName1: 'Commonly Used Condition',
    tabName2: 'Advanced Query',
    schemaName: 'Schema Name',
    ispreName: 'System prefabricated',
    defaultSchemaName: 'isDefault',
    schemaType: {
        public: 'Public',
        personal: 'Personal'
    },
    defaultName: 'Default',
    message: {
        saveas: 'The scheme name already exists, please modify it!',
        lengthValidate: 'Schema names are no more than 15 characters!',
        save: {
            success: 'save success !',
            error: 'save error!',
        },
        update: {
            success: 'update success !',
            error: 'update error!',
        },
        delete: {
            success: 'delete success !',
            error: 'delete error!',
        },
        info: {
            title: 'info',
            delete: 'Please select the scheme to delete!'
        },
        operate: {
            success: 'operate succes!',
            error: 'operate error!',
        },
        validate: {
            judgeUpdate: 'The format scheme has been modified, whether to abandon the modification?',
            notNull: 'The scheme name should not be empty!',
            exists: 'The scheme name already exists!',
            beMetadataIdEmpty: 'The BE metadata ID corresponding to the form printing is empty!',
            formIdFieldEmpty: 'The primary key field of the form printing form is empty!',
            unselected: 'Please select the data to print!'
        }
    },
    clearCache: 'Clear Cache',
    btnExpand: 'Expand All',
    btnCollapse: 'Collapse All',
    btnClearSort: 'Clear Sort'
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnktZnJhbWV3b3JrLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHFkcC9sb2NhbGl6ZS8iLCJzb3VyY2VzIjpbImxpYi9pMThuL2VuLXVzL3F1ZXJ5LWZyYW1ld29yay9xdWVyeS1mcmFtZXdvcmsudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNLEtBQU8sZUFBZSxHQUFHO0lBQzdCLFVBQVUsRUFBRSxRQUFRO0lBQ3BCLGFBQWEsRUFBRSxhQUFhO0lBQzVCLGNBQWMsRUFBRSxlQUFlO0lBQy9CLFFBQVEsRUFBRTtRQUNSLFlBQVksRUFBRSxPQUFPO1FBQ3JCLFlBQVksRUFBRSxRQUFRO0tBQ3ZCO0lBQ0QsU0FBUyxFQUFFLE9BQU87SUFDbEIsV0FBVyxFQUFFLFNBQVM7SUFDdEIsVUFBVSxFQUFFLFFBQVE7SUFDcEIsZ0JBQWdCLEVBQUUsbUJBQW1CO0lBQ3JDLFlBQVksRUFBRSxpQkFBaUI7SUFDL0IsUUFBUSxFQUFFLE9BQU87SUFDakIsZUFBZSxFQUFFLFNBQVM7SUFDMUIsYUFBYSxFQUFFLE1BQU07SUFDckIsWUFBWSxFQUFFLGlCQUFpQjtJQUMvQiwwQkFBMEIsRUFBRSxDQUFDLFFBQVEsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDO0lBQzlELEtBQUssRUFBRSxJQUFJO0lBQ1gsU0FBUyxFQUFFLFFBQVE7SUFDbkIsV0FBVyxFQUFFLGlCQUFpQjtJQUM5QixZQUFZLEVBQUUsbUJBQW1CO0lBQ2pDLFlBQVksRUFBRSxTQUFTO0lBQ3ZCLFFBQVEsRUFBRSx5QkFBeUI7SUFDbkMsUUFBUSxFQUFFLGdCQUFnQjtJQUMxQixVQUFVLEVBQUUsYUFBYTtJQUN6QixTQUFTLEVBQUUsc0JBQXNCO0lBQ2pDLGlCQUFpQixFQUFFLFdBQVc7SUFDOUIsVUFBVSxFQUFFO1FBQ1YsTUFBTSxFQUFFLFFBQVE7UUFDaEIsUUFBUSxFQUFFLFVBQVU7S0FDckI7SUFDRCxXQUFXLEVBQUUsU0FBUztJQUN0QixPQUFPLEVBQUU7UUFDUCxNQUFNLEVBQUUsbURBQW1EO1FBQzNELGNBQWMsRUFBRSw4Q0FBOEM7UUFDOUQsSUFBSSxFQUFFO1lBQ0osT0FBTyxFQUFFLGdCQUFnQjtZQUN6QixLQUFLLEVBQUUsYUFBYTtTQUNyQjtRQUNELE1BQU0sRUFBRTtZQUNOLE9BQU8sRUFBRSxrQkFBa0I7WUFDM0IsS0FBSyxFQUFFLGVBQWU7U0FDdkI7UUFDRCxNQUFNLEVBQUU7WUFDTixPQUFPLEVBQUUsa0JBQWtCO1lBQzNCLEtBQUssRUFBRSxlQUFlO1NBQ3ZCO1FBQ0QsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLE1BQU07WUFDYixNQUFNLEVBQUUscUNBQXFDO1NBQzlDO1FBQ0QsT0FBTyxFQUFFO1lBQ1AsT0FBTyxFQUFFLGlCQUFpQjtZQUMxQixLQUFLLEVBQUUsZ0JBQWdCO1NBQ3hCO1FBQ0QsUUFBUSxFQUFFO1lBQ1IsV0FBVyxFQUFFLDJFQUEyRTtZQUN4RixPQUFPLEVBQUUsc0NBQXNDO1lBQy9DLE1BQU0sRUFBRSxpQ0FBaUM7WUFDekMsaUJBQWlCLEVBQUUsaUVBQWlFO1lBQ3BGLGdCQUFnQixFQUFFLDJEQUEyRDtZQUM3RSxVQUFVLEVBQUUsa0NBQWtDO1NBQy9DO0tBQ0Y7SUFDRCxVQUFVLEVBQUUsYUFBYTtJQUN6QixTQUFTLEVBQUUsWUFBWTtJQUN2QixXQUFXLEVBQUUsY0FBYztJQUMzQixZQUFZLEVBQUUsWUFBWTtDQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBRVUVSWV9GUkFNRVdPUksgPSB7XHJcbiAgZXhwb3J0TmFtZTogJ0V4cG9ydCcsXHJcbiAgYnRuRXhwb3J0VGV4dDogJ0V4Y2VsKFRleHQpJyxcclxuICBidG5FeHBvcnRWYWx1ZTogJ0V4Y2VsKE51bWJlciknLFxyXG4gIHBhZ2VJbmZvOiB7XHJcbiAgICB0b3RhbFByZUluZm86ICdUb3RhbCcsXHJcbiAgICB0b3RhbEVuZEluZm86ICdSZWNvcmQnXHJcbiAgfSxcclxuICBwcmludE5hbWU6ICdQcmludCcsXHJcbiAgcmVmcmVzaE5hbWU6ICdSZWZyZXNoJyxcclxuICBmaWx0ZXJOYW1lOiAnRmlsdGVyJyxcclxuICBkaW1lbnNpb25TZXR0aW5nOiAnRGltZW5zaW9uIFNldHRpbmcnLFxyXG4gIGJ0bkNvbmRpdGlvbjogJ1F1ZXJ5IENvbmRpdGlvbicsXHJcbiAgYnRuUXVlcnk6ICdRdWVyeScsXHJcbiAgYnRuU2F2ZUFzU2NoZW1hOiAnU2F2ZSBBcycsXHJcbiAgYnRuU2F2ZVNjaGVtYTogJ1NhdmUnLFxyXG4gIGJ0blByaW50Rm9ybTogJ0RvY3VtZW50cyBQcmludCcsXHJcbiAgY29uZGl0aW9uTWFuYWdlckxpc3RDb2x1bW46IFsnU2NoZW1hJywgJ0RlZmF1bHQnLCAnT3BlcmF0aW9uJ10sXHJcbiAgYnRuT2s6ICdPSycsXHJcbiAgYnRuQ2FuY2VsOiAnQ2FuY2VsJyxcclxuICBkaWFsb2dUaXRsZTogJ1F1ZXJ5IENvbmRpdGlvbicsXHJcbiAgZGlhbG9nVGl0bGUxOiAnU2NoZW1hIE1hbmFnZW1lbnQnLFxyXG4gIGRpYWxvZ1RpdGxlMjogJ1NhdmUgQXMnLFxyXG4gIHRhYk5hbWUxOiAnQ29tbW9ubHkgVXNlZCBDb25kaXRpb24nLFxyXG4gIHRhYk5hbWUyOiAnQWR2YW5jZWQgUXVlcnknLFxyXG4gIHNjaGVtYU5hbWU6ICdTY2hlbWEgTmFtZScsXHJcbiAgaXNwcmVOYW1lOiAnU3lzdGVtIHByZWZhYnJpY2F0ZWQnLFxyXG4gIGRlZmF1bHRTY2hlbWFOYW1lOiAnaXNEZWZhdWx0JyxcclxuICBzY2hlbWFUeXBlOiB7XHJcbiAgICBwdWJsaWM6ICdQdWJsaWMnLFxyXG4gICAgcGVyc29uYWw6ICdQZXJzb25hbCdcclxuICB9LFxyXG4gIGRlZmF1bHROYW1lOiAnRGVmYXVsdCcsXHJcbiAgbWVzc2FnZToge1xyXG4gICAgc2F2ZWFzOiAnVGhlIHNjaGVtZSBuYW1lIGFscmVhZHkgZXhpc3RzLCBwbGVhc2UgbW9kaWZ5IGl0IScsXHJcbiAgICBsZW5ndGhWYWxpZGF0ZTogJ1NjaGVtYSBuYW1lcyBhcmUgbm8gbW9yZSB0aGFuIDE1IGNoYXJhY3RlcnMhJyxcclxuICAgIHNhdmU6IHtcclxuICAgICAgc3VjY2VzczogJ3NhdmUgc3VjY2VzcyAhJyxcclxuICAgICAgZXJyb3I6ICdzYXZlIGVycm9yIScsXHJcbiAgICB9LFxyXG4gICAgdXBkYXRlOiB7XHJcbiAgICAgIHN1Y2Nlc3M6ICd1cGRhdGUgc3VjY2VzcyAhJyxcclxuICAgICAgZXJyb3I6ICd1cGRhdGUgZXJyb3IhJyxcclxuICAgIH0sXHJcbiAgICBkZWxldGU6IHtcclxuICAgICAgc3VjY2VzczogJ2RlbGV0ZSBzdWNjZXNzICEnLFxyXG4gICAgICBlcnJvcjogJ2RlbGV0ZSBlcnJvciEnLFxyXG4gICAgfSxcclxuICAgIGluZm86IHtcclxuICAgICAgdGl0bGU6ICdpbmZvJyxcclxuICAgICAgZGVsZXRlOiAnUGxlYXNlIHNlbGVjdCB0aGUgc2NoZW1lIHRvIGRlbGV0ZSEnXHJcbiAgICB9LFxyXG4gICAgb3BlcmF0ZToge1xyXG4gICAgICBzdWNjZXNzOiAnb3BlcmF0ZSBzdWNjZXMhJyxcclxuICAgICAgZXJyb3I6ICdvcGVyYXRlIGVycm9yIScsXHJcbiAgICB9LFxyXG4gICAgdmFsaWRhdGU6IHtcclxuICAgICAganVkZ2VVcGRhdGU6ICdUaGUgZm9ybWF0IHNjaGVtZSBoYXMgYmVlbiBtb2RpZmllZCwgd2hldGhlciB0byBhYmFuZG9uIHRoZSBtb2RpZmljYXRpb24/JyxcclxuICAgICAgbm90TnVsbDogJ1RoZSBzY2hlbWUgbmFtZSBzaG91bGQgbm90IGJlIGVtcHR5IScsXHJcbiAgICAgIGV4aXN0czogJ1RoZSBzY2hlbWUgbmFtZSBhbHJlYWR5IGV4aXN0cyEnLFxyXG4gICAgICBiZU1ldGFkYXRhSWRFbXB0eTogJ1RoZSBCRSBtZXRhZGF0YSBJRCBjb3JyZXNwb25kaW5nIHRvIHRoZSBmb3JtIHByaW50aW5nIGlzIGVtcHR5IScsXHJcbiAgICAgIGZvcm1JZEZpZWxkRW1wdHk6ICdUaGUgcHJpbWFyeSBrZXkgZmllbGQgb2YgdGhlIGZvcm0gcHJpbnRpbmcgZm9ybSBpcyBlbXB0eSEnLFxyXG4gICAgICB1bnNlbGVjdGVkOiAnUGxlYXNlIHNlbGVjdCB0aGUgZGF0YSB0byBwcmludCEnXHJcbiAgICB9XHJcbiAgfSxcclxuICBjbGVhckNhY2hlOiAnQ2xlYXIgQ2FjaGUnLFxyXG4gIGJ0bkV4cGFuZDogJ0V4cGFuZCBBbGwnLFxyXG4gIGJ0bkNvbGxhcHNlOiAnQ29sbGFwc2UgQWxsJyxcclxuICBidG5DbGVhclNvcnQ6ICdDbGVhciBTb3J0J1xyXG59O1xyXG4iXX0=