import { RenderService } from '@qdp/spread';
import '@qdp/echarts';
import { MessagerService } from '@farris/ui-messager';
import { Repository } from '@farris/devkit';
import { Subject, of } from 'rxjs';
import { CacheService } from '@ecp-caf/caf-common';
import { __values, __spread } from 'tslib';
import { FormErrorService } from '@farris/command-services';
import { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';
import { Component, Input, Output, EventEmitter, ViewChild, Injector, LOCALE_ID, HostBinding, ContentChildren, Optional, ContentChild, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FlexLayoutModule } from '@farris/ui-flex-layout';
import { FDropdownDirectiveTypeModule, FDropdownDirective } from '@farris/ui-dropdown';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { InputGroupModule } from '@farris/ui-input-group';
import { NotifyService, NotifyModule } from '@farris/ui-notify';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { TreeTableModule } from '@farris/ui-treetable';
import { SchemaService, IdeCmpModule } from '@qdp/ide-cmp';
import { FilterExpressionComponent, FilterService, FilterConditionModule } from '@gsp-svc/filtercondition';
import { ConditionSchemaService, FinishLoadService } from '@qdp/condition-schema';
import { EventBus, QDPCacheUtil, RtfServices, LcpService, IntegrationPrintService, FilterManagerService, ParasMappingManagerService } from '@qdp/common';
import { CloudprintService, CloudPrintModule } from '@gsp-svc/cloudprint';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var QueryFrameworkPaginationComponent = /** @class */ (function () {
    function QueryFrameworkPaginationComponent() {
        this.pagination = {
            pageIndex: 1,
            pageSize: 10,
            totalPage: 0
        };
        this.isDisablePreBtn = false;
        this.isDisableNextBtn = false;
        this.isEnable = true;
        this.totalCount = 21;
        this.pageSize = 10;
        this.pageIndex = 1;
        this.pageChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    QueryFrameworkPaginationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initPageInfo();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    QueryFrameworkPaginationComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'schemaInfo':
                        break;
                    case 'pageInfo':
                        if (newValue.pageSize === 0) {
                            this.isEnable = false;
                            return;
                        }
                        else {
                            this.isEnable = true;
                        }
                        this.pagination.pageIndex = this.pageIndex = newValue.pageIndex;
                        this.pagination.pageSize = this.pageSize = newValue.pageSize;
                        this.pagination.totalPage = newValue.pageCount;
                        this.totalCount = newValue.totalCount;
                        this.initPageInfo();
                        break;
                }
            }
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkPaginationComponent.prototype.initPageInfo = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var totalPageCount = 0;
        if (this.totalCount <= this.pageSize) {
            totalPageCount = 1;
        }
        else {
            totalPageCount = (this.totalCount % this.pageSize) > 0
                ? Math.ceil(this.totalCount / this.pageSize)
                : (this.totalCount / this.pageSize);
        }
        this.pagination = {
            pageIndex: this.pageIndex,
            totalPage: totalPageCount
        };
        this.isDisablePreBtn = this.pagination.pageIndex === 1 ? true : false;
        this.isDisableNextBtn = this.pagination.pageIndex === this.pagination.totalPage ? true : false;
        if (!this.isEnable) {
            this.isDisablePreBtn = this.isDisableNextBtn = !this.isEnable;
        }
    };
    /**
     * @param {?} type
     * @return {?}
     */
    QueryFrameworkPaginationComponent.prototype.handlePreBtnClick = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        switch (type) {
            case '0':
                this.pagination.pageIndex = 1;
                break;
            case '1':
                this.pagination.pageIndex -= 1;
                break;
        }
        this.isDisablePreBtn = this.pagination.pageIndex === 1 ? true : false;
        this.isDisableNextBtn = this.pagination.pageIndex === this.pagination.totalPage ? true : false;
        this.pageChange.emit(this.pagination);
    };
    /**
     * @param {?} type
     * @return {?}
     */
    QueryFrameworkPaginationComponent.prototype.handleNextBtnClick = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        switch (type) {
            case '0':
                this.pagination.pageIndex = this.pagination.totalPage;
                break;
            case '1':
                this.pagination.pageIndex += 1;
                break;
        }
        this.isDisablePreBtn = this.pagination.pageIndex === 1 ? true : false;
        this.isDisableNextBtn = this.pagination.pageIndex === this.pagination.totalPage ? true : false;
        this.pageChange.emit(this.pagination);
    };
    QueryFrameworkPaginationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'query-framework-pagination',
                    template: "<nav *ngIf=\"isEnable\" aria-label=\"Page navigation\">\r\n  <ul class=\"pagination p-0 pr-1\">\r\n    <li class=\"page-item\">\r\n      <span class=\"page-link border-0 w-100\">{{localizePageInfo?.totalPreInfo}}{{totalCount}}{{localizePageInfo?.totalEndInfo}}</span>\r\n    </li>\r\n    <li class=\"page-item ml-0\" [class.disabled]=\"isDisablePreBtn\">\r\n      <a href=\"javascript:void(0);\" (click)=\"handlePreBtnClick('0')\" tabindex=\"-1\" class=\"page-link border-0\">\r\n        <span class=\"f-icon f-icon-seek-w\" aria-label=\"\">\r\n        </span>\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item\" [class.disabled]=\"isDisablePreBtn\">\r\n      <a href=\"javascript:void(0);\" (click)=\"handlePreBtnClick('1')\" tabindex=\"-1\" class=\"page-link border-0\">\r\n        <span class=\"f-icon f-icon-arrow-w\" aria-label=\"\">\r\n        </span>\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item\">\r\n      <span class=\"page-link border-0 w-100\">{{pagination.pageIndex}}/{{pagination.totalPage?pagination.totalPage:0}}</span>\r\n    </li>\r\n    <li class=\"page-item\" [class.disabled]=\"isDisableNextBtn\">\r\n      <a href=\"javascript:void(0);\" (click)=\"handleNextBtnClick('1')\" tabindex=\"-1\" class=\"page-link border-0\">\r\n        <span class=\"f-icon f-icon-arrow-e\" aria-label=\"\">\r\n        </span>\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item\" [class.disabled]=\"isDisableNextBtn\">\r\n      <a href=\"javascript:void(0);\" (click)=\"handleNextBtnClick('0')\" tabindex=\"-1\" class=\"page-link border-0\">\r\n        <span class=\"f-icon f-icon-seek-e\" aria-label=\"\">\r\n        </span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    QueryFrameworkPaginationComponent.ctorParameters = function () { return []; };
    QueryFrameworkPaginationComponent.propDecorators = {
        pageInfo: [{ type: Input }],
        localizePageInfo: [{ type: Input }],
        pageChange: [{ type: Output }]
    };
    return QueryFrameworkPaginationComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ConditionManagerDialogComponent = /** @class */ (function () {
    function ConditionManagerDialogComponent(injector, msgService, conditionService, notifyService) {
        this.injector = injector;
        this.msgService = msgService;
        this.conditionService = conditionService;
        this.notifyService = notifyService;
        this.expandPublic = true;
        this.expandPersonal = true;
        this.publicList = [];
        this.personalList = [];
        this.removeList = [];
        this.motifyList = [];
        this.removeListEvent = new Subject();
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.formErrorService = this.injector.get(FormErrorService);
        }
    }
    /**
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.handleDialogShow = /**
     * @return {?}
     */
    function () {
        this.farrisDialog.show();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.handleExpandType = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.expandPublic = $event === 0 ? !this.expandPublic : this.expandPublic;
        this.expandPersonal = $event === 1 ? !this.expandPersonal : this.expandPersonal;
    };
    /**
     * @param {?} change
     * @param {?} item
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.handleNgModelChange = /**
     * @param {?} change
     * @param {?} item
     * @return {?}
     */
    function (change, item) {
        item.isDefault = change ? 1 : 0;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.handleDeleteSchame = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (this.removeList.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.id === $event.id; })) < 0) {
            this.removeList.push($event);
            this.motifyList.push({ type: 'delete', id: $event.id });
        }
        /** @type {?} */
        var index = $event.schemaType === 0
            ? this.publicList.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.id === $event.id; }))
            : this.personalList.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.id === $event.id; }));
        if ($event.schemaType === 0) {
            this.publicList.splice(index, 1);
        }
        else {
            this.personalList.splice(index, 1);
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.handleSettingDefault = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        /** @type {?} */
        var self = this;
        this.publicList.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.isDefault = item.id === $event.id ? 1 : 0;
            if (item.id === $event.id) {
                self.motifyList.push({ type: 'edit', id: $event.id });
            }
        }));
        this.personalList.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.isDefault = item.id === $event.id ? 1 : 0;
            if (item.id === $event.id) {
                self.motifyList.push({ type: 'edit', id: $event.id });
            }
        }));
    };
    /**
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.handleOKClick = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        if (this.motifyList.length) {
            /** @type {?} */
            var deleteSchemas_1 = [];
            /** @type {?} */
            var saveSchema_1;
            this.motifyList.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.type === 'delete') {
                    deleteSchemas_1.push(item.id);
                }
                else {
                    saveSchema_1 = self.publicList.find((/**
                     * @param {?} el
                     * @return {?}
                     */
                    function (el) { return el.id === item.id; }));
                    if (!saveSchema_1 || !saveSchema_1.id) {
                        saveSchema_1 = self.personalList.find((/**
                         * @param {?} el
                         * @return {?}
                         */
                        function (el) { return el.id === item.id; }));
                    }
                }
            }));
            if (saveSchema_1 && saveSchema_1.schemaValue) {
                saveSchema_1.schemaValue = saveSchema_1 && saveSchema_1.schemaValue ? JSON.stringify(saveSchema_1.schemaValue) : null;
            }
            if (deleteSchemas_1.length && saveSchema_1 && saveSchema_1.id) {
                this.conditionService.deleteSchemaList(deleteSchemas_1.join(','), self.queryId).subscribe((/**
                 * @return {?}
                 */
                function () {
                    _this.conditionService.saveSchema(saveSchema_1).subscribe((/**
                     * @return {?}
                     */
                    function () {
                        self.clearChanges();
                        self.notifyService['success']((/** @type {?} */ ({
                            title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.operate.success'), timeout: 3000
                        })));
                        self.farrisDialog.close();
                    }), (/**
                     * @param {?} error
                     * @return {?}
                     */
                    function (error) {
                        self.formErrorService.exception(error.Message, error);
                        // self.notifyService['success']({
                        //   title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.operate.error'), timeout: 3000
                        // } as NotifyOptions);
                        self.farrisDialog.close();
                    }));
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    self.formErrorService.exception(error.Message, error);
                    // console.log(error);
                    // self.notifyService['success']({
                    //   title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.operate.error'), timeout: 3000
                    // } as NotifyOptions);
                    self.farrisDialog.close();
                }));
            }
            else if (deleteSchemas_1.length) {
                this.conditionService.deleteSchemaList(deleteSchemas_1.join(','), self.queryId).subscribe((/**
                 * @return {?}
                 */
                function () {
                    self.clearChanges();
                    self.notifyService['success']((/** @type {?} */ ({
                        title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.operate.success'), timeout: 3000
                    })));
                    self.farrisDialog.close();
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    self.formErrorService.exception(error.Message, error);
                    // console.log(error);
                    // self.notifyService['success']({
                    //   title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.operate.error'), timeout: 3000
                    // } as NotifyOptions);
                    self.farrisDialog.close();
                }));
            }
            else if (saveSchema_1 && saveSchema_1.id) {
                this.conditionService.saveSchema(saveSchema_1).subscribe((/**
                 * @return {?}
                 */
                function () {
                    self.clearChanges();
                    self.notifyService['success']((/** @type {?} */ ({
                        title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.operate.success'), timeout: 3000
                    })));
                    self.farrisDialog.close();
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    self.formErrorService.exception(error.Message, error);
                    // console.log(error);
                    // self.notifyService['success']({
                    //   title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.operate.error'), timeout: 3000
                    // } as NotifyOptions);
                    self.farrisDialog.close();
                }));
            }
        }
    };
    /**
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.clearChanges = /**
     * @return {?}
     */
    function () {
        this.motifyList = [];
        this.removeList = [];
    };
    /**
     * @return {?}
     */
    ConditionManagerDialogComponent.prototype.handleCancelClick = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        if (this.motifyList.length) {
            this.motifyList.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.type === 'delete') {
                    /** @type {?} */
                    var result = self.removeList.find((/**
                     * @param {?} el
                     * @return {?}
                     */
                    function (el) { return el.id === item.id; }));
                    if (result.schemaType === 0) {
                        self.publicList.push(item);
                    }
                    else {
                        self.personalList.push(item);
                    }
                }
                else {
                    _this.publicList.forEach((/**
                     * @param {?} el
                     * @return {?}
                     */
                    function (el) {
                        el.isDefault = el.id === item.id ? 1 : 0;
                    }));
                    _this.personalList.forEach((/**
                     * @param {?} el1
                     * @return {?}
                     */
                    function (el1) {
                        el1.isDefault = el1.id === item.id ? 1 : 0;
                    }));
                }
            }));
            this.removeList = [];
            this.motifyList = [];
        }
        this.farrisDialog.close();
    };
    ConditionManagerDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'condition-manager-dialog',
                    template: "<farris-dialog #farrisDialog [title]=\"localizeService.getValue('queryFramework.dialogTitle1')\" [showButtons]=\"false\"\r\n  [width]=\"550\" [showMaxButton]=\"false\" [showMinButton]=\"false\" [showCloseButton]=\"false\" [resizable]=\"false\" [height]=\"570\">\r\n  <div class=\"f-utils-absolute-all f-utils-flex-column bg-white\">\r\n    <div class=\"f-utils-fill-auto\">\r\n      <div class=\"f-utils-flex-row-wrap m-2 item-header-row\" style=\"height: 40px\">\r\n        <div class=\"col-4 pt-1 item-header-col-font item-header-col1\">\r\n          {{localizeService.getValue('queryFramework.conditionManagerListColumn')[0]}}\r\n        </div>\r\n        <div class=\"col-4 pt-1 item-header-col-font item-header-col2\">\r\n          {{localizeService.getValue('queryFramework.conditionManagerListColumn')[1]}}\r\n        </div>\r\n        <div class=\"col-4 pt-1 item-header-col-font item-header-col3\">\r\n          {{localizeService.getValue('queryFramework.conditionManagerListColumn')[2]}}\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-flex-row-wrap m-2\" (click)=\"handleExpandType(0)\">\r\n        <span *ngIf=\"expandPublic\" class=\"f-icon f-icon-minus-outline ml-3 mr-2\" style=\"color: #B9C3C9;\"></span>\r\n        <span *ngIf=\"!expandPublic\" class=\"f-icon f-icon-plus-outline ml-3 mr-2\" style=\"color: #B9C3C9;\"></span>\r\n        <div class=\"item-schema-type\">{{localizeService.getValue('queryFramework.schemaType.public')}}</div>\r\n      </div>\r\n      <div [class]=\"expandPublic ? 'f-utils-flex-column item-list-block' : 'f-utils-flex-column item-list-none'\">\r\n        <div *ngFor=\"let item of publicList\" [class]=\"currentSchema && currentSchema.id  && currentSchema.id === item.id ? 'f-utils-flex-row-wrap ml-0 mr-0 mt-1 mb-1 item-row item-row-hover' : 'f-utils-flex-row-wrap ml-0 mr-0 mt-1 mb-1 item-row'\">\r\n          <div [class]=\"item.isProtected === 1 ? 'col-4 item-data-font item-data-col1' : 'col-4 item-data-font-disable item-data-col1'\">\r\n            {{item.schemaName}}\r\n          </div>\r\n          <div class=\"col-4 item-data-font item-data-col2\">\r\n            <div class=\"custom-control custom-checkbox mb-0 ml-4\">\r\n              <input type=\"checkbox\" class=\"custom-control-input\" [ngModel]=\"item.isDefault === 1 ? true : false\" (ngModelChange)=\"handleNgModelChange($event, item)\" (click)=\"handleSettingDefault(item)\" [disabled]=\"item.isProtected === 1\" id=\"{{item.id}}\" checked=\"\">\r\n              <label class=\"custom-control-label\" for=\"{{item.id}}\"></label>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4 item-data-font item-data-col3\">\r\n            <button class=\"btn btn-link p-1 mr-1\" id=\"button-delete\" [disabled]=\"item.isProtected === 1\" (click)=\"handleDeleteSchame(item)\">\r\n              <span class=\"f-icon f-icon-delete item-delete\"></span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-flex-row-wrap m-2\" (click)=\"handleExpandType(1)\">\r\n        <span *ngIf=\"expandPersonal\" class=\"f-icon f-icon-minus-outline ml-3 mr-2\" style=\"color: #B9C3C9;\"></span>\r\n        <span *ngIf=\"!expandPersonal\" class=\"f-icon f-icon-plus-outline ml-3 mr-2\" style=\"color: #B9C3C9;\"></span>\r\n        <div class=\"item-schema-type\">{{localizeService.getValue('queryFramework.schemaType.personal')}}</div>\r\n      </div>\r\n      <div [class]=\"expandPersonal ? 'f-utils-flex-column item-list-block' : 'f-utils-flex-column item-list-none'\">\r\n        <div *ngFor=\"let item1 of personalList\" [class]=\"currentSchema && currentSchema.id && currentSchema.id === item1.id ? 'f-utils-flex-row-wrap ml-0 mr-0 mt-1 mb-1 item-row item-row-hover' : 'f-utils-flex-row-wrap ml-0 mr-0 mt-1 mb-1 item-row'\">\r\n          <div [class]=\"item1.isProtected === 1 ? 'col-4 item-data-font item-data-col1' : 'col-4 item-data-font-disable item-data-col1'\">\r\n            {{item1.schemaName}}\r\n          </div>\r\n          <div class=\"col-4 item-data-font item-data-col2\">\r\n            <div class=\"custom-control custom-checkbox mb-0 ml-4\">\r\n              <input type=\"checkbox\" class=\"custom-control-input\" [ngModel]=\"item1.isDefault === 1 ? true : false\" (ngModelChange)=\"handleNgModelChange($event, item1)\" (click)=\"handleSettingDefault(item1)\" [disabled]=\"item1.isProtected === 1\"\r\n                id=\"{{item1.id}}\" checked=\"\">\r\n              <label class=\"custom-control-label\" for=\"{{item1.id}}\"></label>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4 item-data-font item-data-col3\">\r\n            <button class=\"btn btn-link p-1 mr-1\" id=\"button-delete\" [disabled]=\"item1.isProtected === 1\" (click)=\"handleDeleteSchame(item1)\">\r\n              <span class=\"f-icon f-icon-delete item-delete\"></span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <div class=\"btn-toolbar btn-group-lg\" id=\"page-header-toolbar\">\r\n        <button class=\"btn btn-primary mr-1\" id=\"button-edit\" (click)=\"handleOKClick()\">\r\n          {{localizeService.getValue('queryFramework.btnOk')}}</button>\r\n        <button class=\"btn btn-secondary mr-1\" id=\"button-edit\" (click)=\"handleCancelClick()\">\r\n          {{localizeService.getValue('queryFramework.btnCancel')}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</farris-dialog>\r\n",
                    styles: [".item-header-row{border-bottom:1px solid #e2e8f0}.item-row{height:40px}.item-header-col-font{font-family:PingFangSC-Regular;font-size:14px;color:#000}.item-header-col1{text-align:left}.item-header-col2{text-align:center}.item-header-col3{text-align:right}.item-schema-type{font-family:PingFangSC-Regular;font-size:14px;color:#000;line-height:20px;display:block;top:-2px;position:relative}.item-row-current{background:#ddf4ff;border-left:3px solid #388fff!important}.item-data-font-disable{font-family:PingFangSC-Regular;font-size:14px;color:rgba(166,166,166,.8);line-height:20px;position:relative;top:-2px;padding-top:.75rem!important}.item-data-font{font-family:PingFangSC-Regular;font-size:14px;color:rgba(0,0,0,.8);line-height:20px;position:relative;top:-2px;padding-top:.75rem!important}.item-data-col1,.item-data-col2{text-align:center}.item-data-col3{text-align:right;padding-right:1.25rem!important}.item-row-hover,.item-row:hover{background:#ddf4ff;border-left:3px solid #388fff!important}.item-list-block{display:block!important}.item-list-none{display:none!important}.item-delete{position:relative;top:-3px}"]
                }] }
    ];
    /** @nocollapse */
    ConditionManagerDialogComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: MessagerService },
        { type: ConditionSchemaService },
        { type: NotifyService }
    ]; };
    ConditionManagerDialogComponent.propDecorators = {
        farrisDialog: [{ type: ViewChild, args: ['farrisDialog',] }],
        currentSchema: [{ type: Input }],
        queryId: [{ type: Input }],
        publicList: [{ type: Input }],
        personalList: [{ type: Input }]
    };
    return ConditionManagerDialogComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SaveasSchemaDialogComponent = /** @class */ (function () {
    function SaveasSchemaDialogComponent(injector, msgService, conditionService, notifyService) {
        this.injector = injector;
        this.msgService = msgService;
        this.conditionService = conditionService;
        this.notifyService = notifyService;
        this.formInline = true;
        this.conditionSchemaName = 'conditionSchemaName' + EventBus.guid();
        this.schemaName = '';
        this.isDefault = false;
        this.isSchemaType = 0;
        this.publicSchema = 'publicSchema' + EventBus.guid();
        this.personSchema = 'personSchema' + EventBus.guid();
        this.defaultSchema = 'defaultSchema' + EventBus.guid();
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;
            this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE;
            this.repository = this.injector.get(Repository);
            this.formErrorService = this.injector.get(FormErrorService);
        }
    }
    /**
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
        }
    };
    /**
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.handleDialogShow = /**
     * @return {?}
     */
    function () {
        this.farrisDialog.show();
    };
    /**
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.handleOKClick = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var data = this.conditionService.schemaList;
        if (!this.schemaName) {
            this.msgService.warning(this.localizeService.getValue('queryFramework.message.validate.notNull'));
            return;
        }
        if (this.schemaName && this.schemaName.length > 15) {
            this.msgService.warning(this.localizeService.getValue('queryFramework.message.lengthValidate'));
            return;
        }
        if (data && data[this.queryId]) {
            for (var key in data[self.queryId]) {
                if (data[self.queryId][key].schemaName === self.schemaName) {
                    this.msgService.warning(this.localizeService.getValue('queryFramework.message.saveas'));
                    return;
                }
            }
        }
        /** @type {?} */
        var params = this.handlerGetEntity();
        if (this.currentSchema && this.currentSchema.id) {
            for (var key in data[self.queryId]) {
                if (data[self.queryId][key].schemaName === self.schemaName) {
                    this.msgService.warning(this.localizeService.getValue('queryFramework.message.saveas'));
                    return;
                }
            }
            /** @type {?} */
            var newValue = JSON.parse(JSON.stringify(this.currentSchema));
            newValue.schemaValue = params;
            newValue.id = '';
            newValue.queryId = self.queryId;
            if (this.filterInstance) {
                if (!newValue.schemaValue) {
                    newValue.schemaValue = {};
                }
                newValue.schemaValue['@filterExpressionString@'] = this.filterInstance.getFilterExpression();
            }
            newValue.schemaValue = newValue.schemaValue ? JSON.stringify(newValue.schemaValue) : null;
            newValue.schemaName = self.schemaName;
            newValue.isDefault = self.isDefault ? 1 : 0;
            newValue.schemaType = self.isSchemaType;
            this.conditionService.saveSchema(newValue).subscribe((/**
             * @return {?}
             */
            function () {
                self.notifyService['success']((/** @type {?} */ ({
                    title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.save.success'), timeout: 3000
                })));
                self.farrisDialog.close();
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                self.formErrorService.exception(error.Message, error);
            }));
        }
        else {
            /** @type {?} */
            var newValue = {
                schemaName: self.schemaName,
                schemaType: self.isSchemaType,
                schemaValue: null,
                isDefault: self.isDefault ? 1 : 0,
                isProtected: 0,
                queryId: self.queryId
            };
            newValue.schemaValue = params;
            if (this.filterInstance) {
                if (!newValue.schemaValue) {
                    newValue.schemaValue = {};
                }
                newValue.schemaValue['@filterExpressionString@'] = this.filterInstance.getFilterExpression();
            }
            newValue.schemaValue = newValue.schemaValue ? JSON.stringify(newValue.schemaValue) : null;
            this.conditionService.saveSchema(newValue).subscribe((/**
             * @return {?}
             */
            function () {
                self.notifyService['success']((/** @type {?} */ ({
                    title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.save.success'), timeout: 3000
                })));
                self.farrisDialog.close();
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                self.formErrorService.exception(error.Message, error);
            }));
        }
    };
    /**
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.handleCancelClick = /**
     * @return {?}
     */
    function () {
        this.schemaName = '';
        this.isDefault = false;
        this.isSchemaType = 0;
        this.farrisDialog.close();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.handleSchemaTypeSelect = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.isSchemaType = value;
    };
    /**
     * @return {?}
     */
    SaveasSchemaDialogComponent.prototype.handlerGetEntity = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var entitys = this.repository.entityCollection.getAllEntities();
        /** @type {?} */
        var params;
        if (entitys && entitys.length) {
            params = entitys[0].toJSON();
        }
        return params;
    };
    SaveasSchemaDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'saveas-schema-dialog',
                    template: "<farris-dialog #farrisDialog [title]=\"localizeService.getValue('queryFramework.dialogTitle2')\" [showButtons]=\"false\"\r\n  [width]=\"509\" [showMaxButton]=\"false\" [showCloseButton]=\"false\" [showMinButton]=\"false\" [resizable]=\"false\" [height]=\"285\">\r\n  <div class=\"f-utils-absolute-all f-utils-flex-column bg-white\">\r\n    <div class=\"f-utils-fill-flex-column\">\r\n      <div class=\"f-utils-flex-row pt-2\">\r\n        <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"colName\">\r\n              <span class=\"farris-label-info text-danger\">*</span>\r\n              <span class=\"farris-label-text\">{{localizeService.getValue('queryFramework.schemaName')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input-group id=\"colName\" [(ngModel)]=\"schemaName\"></input-group>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"f-utils-flex-row\">\r\n        <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"colVisible\">\r\n              <span class=\"farris-label-text\"></span>\r\n            </label>\r\n            <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n              <div class=\"custom-control custom-checkbox mb-0\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"isDefault\" class=\"custom-control-input\" id=\"{{conditionSchemaName}}\"\r\n                  checked=\"\">\r\n                <label class=\"custom-control-label\"\r\n                  for=\"{{conditionSchemaName}}\">{{localizeService.getValue('queryFramework.defaultSchemaName')}}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n      <div class=\"f-utils-flex-row pt-2\">\r\n        <div class=\"farris-group-wrap form-inline farris-form-inline m-1\">\r\n          <div class=\"form-group farris-group-wrap\">\r\n            <label class=\"col-form-label\" style=\"min-width: 0;\" for=\"range_type_id\">\r\n              <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.schemeType')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n              <div class=\"custom-control custom-radio mb-0\">\r\n                <input type=\"radio\" id=\"{{publicSchema}}\" name=\"custom-radio1\" class=\"custom-control-input\"\r\n                  [checked]=\"isSchemaType==0\">\r\n                <label class=\"custom-control-label\" for=\"{{publicSchema}}\"\r\n                  (click)=\"handleSchemaTypeSelect(0)\">{{localizeService.getValue('ideCmp.schemaManager.schemeTypePublic')}}</label>\r\n              </div>\r\n              <div class=\"custom-control custom-radio mb-0\">\r\n                <input type=\"radio\" id=\"{{personSchema}}\" name=\"custom-radio1\" class=\"custom-control-input\"\r\n                  [checked]=\"isSchemaType==1\">\r\n                <label class=\"custom-control-label\" for=\"{{personSchema}}\"\r\n                  (click)=\"handleSchemaTypeSelect(1)\">{{localizeService.getValue('ideCmp.schemaManager.schemeTypePersonal')}}</label>\r\n              </div>\r\n              <div class=\"custom-control custom-checkbox mb-0\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{defaultSchema}}\"\r\n                  [(ngModel)]=\"isDefault\">\r\n                <label class=\"custom-control-label\"\r\n                  for=\"{{defaultSchema}}\">{{localizeService.getValue('ideCmp.schemaManager.schemeDefault')}}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <div class=\"btn-toolbar btn-group-lg\" id=\"page-header-toolbar\">\r\n        <button class=\"btn btn-primary mr-1\" id=\"button-edit\" (click)=\"handleOKClick()\">\r\n          {{localizeService.getValue('queryFramework.btnOk')}}</button>\r\n        <button class=\"btn btn-secondary mr-1\" id=\"button-edit\" (click)=\"handleCancelClick()\">\r\n          {{localizeService.getValue('queryFramework.btnCancel')}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</farris-dialog>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SaveasSchemaDialogComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: MessagerService },
        { type: ConditionSchemaService },
        { type: NotifyService }
    ]; };
    SaveasSchemaDialogComponent.propDecorators = {
        currentSchema: [{ type: Input }],
        queryId: [{ type: Input }],
        farrisDialog: [{ type: ViewChild, args: ['farrisDialog',] }]
    };
    return SaveasSchemaDialogComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ConditionDialogTabComponent = /** @class */ (function () {
    function ConditionDialogTabComponent() {
        this.cls = '';
        this.tabIndex = 0;
        this.controlIndexChanged = 0;
        // injector: Injector;
        // @ViewChild('adHost', { read: ViewContainerRef }) adHost: ViewContainerRef;
        // componentFactoryResolver: ComponentFactoryResolver;
        // filterInstance: any;
        this.propertyList = [];
        this.filterExpressionString = '';
        this.showFilterExpression = true;
        this.showForm = false;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ConditionDialogTabComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'propertyList':
                        if (newValue) {
                            this.propertyList = __spread(newValue);
                        }
                        break;
                    case 'filterExpressionString':
                        if (newValue) {
                            this.filterExpressionString = newValue;
                        }
                        break;
                }
            }
        }
    };
    /**
     * @return {?}
     */
    ConditionDialogTabComponent.prototype.changeCss = /**
     * @return {?}
     */
    function () {
        this.cls = this.tabIndex === this.controlIndexChanged ? 'f-utils-fill' : '';
    };
    /**
     * @return {?}
     */
    ConditionDialogTabComponent.prototype.createFilterComponent = /**
     * @return {?}
     */
    function () {
        // if (this.injector) {
        //   this.componentFactoryResolver = this.injector.get(ComponentFactoryResolver);
        //   const componentFactory = this.componentFactoryResolver.resolveComponentFactory(FilterExpressionComponent);
        //   this.adHost.clear();
        //   const componentRef = this.adHost.createComponent(componentFactory);
        //   this.filterInstance = componentRef.instance;
        //   this.filterInstance.propertyList = this.propertyList;
        //   this.filterInstance.filterExpressionString = this.filterExpressionString;
        // }
    };
    /**
     * @return {?}
     */
    ConditionDialogTabComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        try {
            if (QDPCacheUtil.getCache(RtfServices.getTabId('condition-dialog-tabs') + 'condition-dialog-tabs')) {
                QDPCacheUtil.getCache(RtfServices.getTabId('condition-dialog-tabs') + 'condition-dialog-tabs').push(this);
            }
            else {
                QDPCacheUtil.setCache(RtfServices.getTabId('condition-dialog-tabs') + 'condition-dialog-tabs', [this]);
            }
        }
        catch (e) {
        }
        this.changeCss();
    };
    ConditionDialogTabComponent.decorators = [
        { type: Component, args: [{
                    selector: 'condition-dialog-tab',
                    template: "<div class=\"h-100 f-utils-fill\" [style.display]=\"tabIndex===controlIndexChanged?'block':'none'\">\r\n  <div class=\"f-utils-fill-flex-row h-100\" *ngIf=\"tabIndex==1 && showFilterExpression\">\r\n    <div class=\"f-utils-fill-auto h-100\">\r\n      <app-filter-expression #funcFilter class=\"h-100\" [propertyList]=\"propertyList\" [filterExpressionString]=\"filterExpressionString\"></app-filter-expression>\r\n    </div>\r\n  </div>\r\n  <div class=\"f-utils-fill-flex-row h-100\" *ngIf=\"tabIndex!=1 || showForm\">\r\n    <div class=\"f-utils-fill-auto h-100\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ConditionDialogTabComponent.ctorParameters = function () { return []; };
    ConditionDialogTabComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        tabIndex: [{ type: Input }],
        filterInstance: [{ type: ViewChild, args: [FilterExpressionComponent,] }],
        propertyList: [{ type: Input }],
        filterExpressionString: [{ type: Input }],
        showFilterExpression: [{ type: Input }],
        showForm: [{ type: Input }]
    };
    return ConditionDialogTabComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ConditionDialogComponent = /** @class */ (function () {
    function ConditionDialogComponent(injector, conditionService, repository, cacheService, finishLoasService) {
        this.injector = injector;
        this.conditionService = conditionService;
        this.repository = repository;
        this.cacheService = cacheService;
        this.finishLoasService = finishLoasService;
        // OnChanges,
        this.schemaId = '';
        this.showFilterExpression = true;
        this.tabIndex = 0;
        this.queryEvent = new EventEmitter();
        this.dialogInitEvent = new EventEmitter();
        this.idChanged = new Subject();
        this.menuShow = false;
        this.defaultSchemaName = '条件方案';
        this.publicList = [];
        this.personalList = [];
        this.controlIndexChanged = 0;
        this.subscriptions = [];
        this.closeType = '';
        this.propertyList = [];
        this.filterExpressionString = '';
        this.beforeOpen = (/**
         * @return {?}
         */
        function () { return true; });
        this.handlebeforeClose = (/**
         * @return {?}
         */
        function () {
            // const self = this;
            // if (this.closeType !== 'query') {
            //   if (self.repository.entityCollection.getAllEntities() && self.repository.entityCollection.getAllEntities()[0]) {
            //     const obj = {
            //       id: self.repository.entityCollection.getAllEntities()[0]['id']
            //     };
            //     self.repository.entityCollection.getAllEntities()[0].load(obj);
            //     (self.repository as BefRepository<Entity>).entityManager.clearAllEntityChanges();
            //     if (this.advanceFilterTab) {
            //       this.advanceFilterTab.filterExpressionString = '';
            //     }
            //   }
            // }
            // this.closeType = '';
            return of(true);
        });
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.notifyService = this.injector.get(NotifyService);
            this.defaultSchemaName = this.localizeService.getValue('queryFramework.ispreName');
            this.formErrorService = this.injector.get(FormErrorService);
            this.schemaService = this.injector.get(SchemaService);
            this.lcpService = this.injector.get(LcpService);
        }
    }
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.getConditionTabs = /**
     * @return {?}
     */
    function () {
        try {
            if (this.conditionTabs && this.conditionTabs.length) {
                return this.conditionTabs;
            }
            else if (QDPCacheUtil.getCache(RtfServices.getTabId('condition-dialog-tabs') + 'condition-dialog-tabs') && QDPCacheUtil.getCache(RtfServices.getTabId('condition-dialog-tabs') + 'condition-dialog-tabs').length) {
                return QDPCacheUtil.getCache(RtfServices.getTabId('condition-dialog-tabs') + 'condition-dialog-tabs');
            }
        }
        catch (e) {
            return this.conditionTabs;
        }
    };
    Object.defineProperty(ConditionDialogComponent.prototype, "Id", {
        get: /**
         * @return {?}
         */
        function () {
            return this.schemaId;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.schemaId = value;
            this.idChanged.next(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.tabId = RtfServices.getTabId(this.queryId);
        this.queryCount = 1;
        this.conditionDialogInit();
        if (!this.beforeQuery) {
            this.beforeQuery = (/**
             * @param {?} params
             * @return {?}
             */
            function (params) { return of(true); });
        }
        QDPCacheUtil.setCache(this.tabId + 'advanceTemplate-condition-dialog', this);
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        EventBus.dispatch(this.tabId + 'advanceTemplate-condition-dialog-dialogInitEvent', {});
        this.dialogInitEvent.emit(true);
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.conditionDialogInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        this.subscriptions.push(self.conditionService.getSchemaList(self.queryId, '', '').subscribe());
        this.subscriptions.push(self.conditionService.schemaListChange.subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            /** @type {?} */
            var data = result.schemaInfo;
            if (data && data[self.queryId]) {
                self.publicList = [];
                self.personalList = [];
                for (var key in data[self.queryId]) {
                    if (data[self.queryId][key].schemaType === 0) {
                        self.publicList.push(data[self.queryId][key]);
                    }
                    else {
                        self.personalList.push(data[self.queryId][key]);
                    }
                }
                /** @type {?} */
                var flag = false;
                if (self.schemaId) {
                    /** @type {?} */
                    var index = self.publicList.findIndex((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) { return item.id === self.schemaId; }));
                    if (index >= 0) {
                        flag = true;
                        self.currentSchema = self.publicList[index];
                        self.initCondition(self.currentSchema);
                    }
                    index = self.personalList.findIndex((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) { return item.id === self.schemaId; }));
                    if (index >= 0) {
                        flag = true;
                        self.currentSchema = self.personalList[index];
                        self.initCondition(self.currentSchema);
                    }
                }
                if (!flag && self.conditionService.isDefaultSchema && self.conditionService.isDefaultSchema[self.queryId] && self.conditionService.isDefaultSchema[self.queryId].id) {
                    self.currentSchema = self.conditionService.isDefaultSchema[self.queryId];
                    self.schemaId = self.conditionService.isDefaultSchema[self.queryId].id;
                    self.defaultSchemaName = self.currentSchema.schemaName;
                }
                _this.subscriptions.push(_this.finishLoasService.finish.subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    self.initCondition(self.currentSchema);
                })));
            }
            else {
                self.defaultSchemaName = self.localizeService.getValue('queryFramework.ispreName');
            }
        })));
        this.subscriptions.push(self.idChanged.subscribe((/**
         * @param {?} schemaId
         * @return {?}
         */
        function (schemaId) {
            if (schemaId) {
                self.subscriptions.push(self.conditionService.getSchema(schemaId, self.queryId, true).subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    if (data) {
                        self.currentSchema = data;
                        self.defaultSchemaName = self.currentSchema.schemaName;
                        self.initCondition(self.currentSchema);
                        if (self.controlIndexChanged === 1) {
                            self.handleInfoChanged(self.controlIndexChanged);
                        }
                    }
                })));
            }
        })));
    };
    /**
     * @private
     * @param {?} schema
     * @return {?}
     */
    ConditionDialogComponent.prototype.initCondition = /**
     * @private
     * @param {?} schema
     * @return {?}
     */
    function (schema) {
        /** @type {?} */
        var self = this;
        if (schema) { // 预制默认对象
            if (schema.schemaValue && typeof (schema.schemaValue) === 'object') {
                if (schema && schema.schemaValue && this.repository.entityCollection.getAllEntities() && this.repository.entityCollection.getAllEntities().length) {
                    schema.schemaValue.id = this.repository.entityCollection.getAllEntities()[0]['id'];
                }
                self.repository.entityCollection.getAllEntities()[0].load(schema.schemaValue);
                self.filterExpressionString = '';
                if (schema.schemaValue.hasOwnProperty('@filterExpressionString@')) {
                    self.filterExpressionString = schema.schemaValue['@filterExpressionString@'];
                }
            }
            else {
                if (self.repository.entityCollection.getAllEntities() && self.repository.entityCollection.getAllEntities()[0]) {
                    /** @type {?} */
                    var obj = {
                        id: self.repository.entityCollection.getAllEntities()[0]['id']
                    };
                    self.repository.entityCollection.getAllEntities()[0].load(obj);
                }
            }
        }
    };
    /**
     * @param {?} item
     * @return {?}
     */
    ConditionDialogComponent.prototype.getPropertyList = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        var _this = this;
        this.subscriptions.push(this.lcpService.getCol({
            schemaId: '1',
            entityData: JSON.stringify({ 'id': 'undefined_null' }),
            pageIndex: 1,
            pageSize: 0,
            qoManagerCode: QDPCacheUtil.getCache(this.tabId + 'qoManagerCode'),
            controlType: QDPCacheUtil.getCache(this.tabId + 'controlType'),
            voCode: QDPCacheUtil.getCache(this.tabId + 'voId')
        }, QDPCacheUtil.getCache(this.tabId + 'queryRelativeUrl')).subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value && value.dynamicCols && value.dynamicCols.length) {
                _this.analysisColListData(value.dynamicCols, 'col');
                if (_this.advanceFilterTab) {
                    _this.advanceFilterTab.propertyList = __spread(_this.propertyList);
                    _this.advanceFilterTab.filterExpressionString = _this.filterExpressionString;
                }
                item.createFilterComponent();
            }
        })));
    };
    /**
     * @private
     * @param {?} newValue
     * @param {?=} type
     * @return {?}
     */
    ConditionDialogComponent.prototype.analysisColListData = /**
     * @private
     * @param {?} newValue
     * @param {?=} type
     * @return {?}
     */
    function (newValue, type) {
        var _this = this;
        this.propertyList = [];
        newValue.forEach((/**
         * @param {?} col
         * @return {?}
         */
        function (col) {
            _this.recursiveAnalysisColListData(null, col, type);
        }));
    };
    /**
     * @private
     * @param {?} children
     * @param {?} col
     * @param {?=} type
     * @return {?}
     */
    ConditionDialogComponent.prototype.recursiveAnalysisColListData = /**
     * @private
     * @param {?} children
     * @param {?} col
     * @param {?=} type
     * @return {?}
     */
    function (children, col, type) {
        var _this = this;
        if (col) {
            /** @type {?} */
            var index = this.propertyList.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.Code === col.bindField; }));
            if (index < 0) {
                /** @type {?} */
                var node = {};
                node['value'] = col.bindField;
                node['propertyFieldType'] = this.getDataType(col.type);
                node['text'] = col.name;
                this.propertyList.push(node);
            }
            else if (type !== 'col') {
                this.propertyList[index]['text'] = col.name;
            }
            if (col.childList && col.childList.length) {
                this.recursiveAnalysisColListData(col.childList, null);
            }
        }
        else {
            children.forEach((/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                /** @type {?} */
                var index = _this.propertyList.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.Code === c.bindField; }));
                if (index < 0) {
                    /** @type {?} */
                    var node = {};
                    node['value'] = c.bindField;
                    node['propertyFieldType'] = _this.getDataType(c.type);
                    node['text'] = c.name;
                    _this.propertyList.push(node);
                }
                else if (type !== 'col') {
                    _this.propertyList[index]['text'] = c.name;
                }
                if (c.childList && c.childList.length) {
                    _this.recursiveAnalysisColListData(c.childList, null);
                }
            }));
        }
    };
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    ConditionDialogComponent.prototype.getDataType = /**
     * @private
     * @param {?} type
     * @return {?}
     */
    function (type) {
        /** @type {?} */
        var result = 0;
        switch (type) {
            case 'string':
            case 'text':
                result = 0;
                break;
            case 'integer':
                result = 2;
                break;
            case 'decimal':
                result = 4;
                break;
            case 'boolean':
                result = 8;
                break;
            case 'date':
            case 'dateTime':
                result = 9;
                break;
            case 'byte':
                result = 6;
                break;
            case 'char':
                result = 7;
                break;
            case 'array':
                result = 10;
                break;
            default:
                break;
        }
        return result;
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        if (this.subscriptions && this.subscriptions.length) {
            try {
                for (var _b = __values(this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var subscription = _c.value;
                    subscription.unsubscribe();
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ConditionDialogComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleDialogShow = /**
     * @return {?}
     */
    function () {
        this.farrisDialog.show();
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleDialogClose = /**
     * @return {?}
     */
    function () {
        this.farrisDialog.close();
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleSchemaManagerDialog = /**
     * @return {?}
     */
    function () {
        this.conditionManagerDialog.handleDialogShow();
        this.menuShow = !this.menuShow;
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleSaveasSchemaDialog = /**
     * @return {?}
     */
    function () {
        this.saveasSchemaDialogComponent.schemaName = '';
        this.saveasSchemaDialogComponent.isDefault = false;
        this.saveasSchemaDialogComponent.isSchemaType = 0;
        this.menuShow = false;
        this.saveasSchemaDialogComponent.handleDialogShow();
        if (this.advanceFilterTab && this.advanceFilterTab.filterInstance) {
            this.saveasSchemaDialogComponent.filterInstance = this.advanceFilterTab.filterInstance;
        }
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleSchemaMenu = /**
     * @return {?}
     */
    function () {
        this.menuShow = !this.menuShow;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleInfoChanged = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        /** @type {?} */
        var self = this;
        this.controlIndexChanged = $event;
        if (this.getConditionTabs() && this.getConditionTabs().length) {
            this.getConditionTabs().forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                item.controlIndexChanged = $event;
                item.changeCss();
                if (item.tabIndex === 1 && self.showFilterExpression) {
                    self.advanceFilterTab = item;
                    self.getPropertyList(item);
                }
            }));
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleSchemaSelected = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.defaultSchemaName = $event.schemaName;
        this.menuShow = !this.menuShow;
        this.currentSchema = $event;
        this.Id = this.currentSchema.id;
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleQueryClick = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var params = this.handlerGetEntity();
        this.beforeQuery().subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            if (result == true) {
                EventBus.dispatch('openAdvanceTemplateDialog', {});
                _this.cacheService.set(_this.tabId, params);
                EventBus.dispatch(_this.tabId + 'advanceTemplate-condition-dialog-queryEvent', _this.queryCount++);
                _this.queryEvent.emit(_this.queryCount++);
                _this.closeType = 'query';
                _this.handleDialogClose();
            }
        }));
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handleSaveClick = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var params = this.handlerGetEntity();
        if (this.currentSchema) {
            this.currentSchema.schemaValue = params;
            /** @type {?} */
            var newSchema = JSON.parse(JSON.stringify(this.currentSchema));
            if (this.advanceFilterTab && this.advanceFilterTab.filterInstance) {
                if (!newSchema.schemaValue) {
                    newSchema.schemaValue = {};
                }
                newSchema.schemaValue['@filterExpressionString@'] = this.advanceFilterTab.filterInstance.getFilterExpression();
            }
            newSchema.schemaValue = newSchema.schemaValue ? JSON.stringify(newSchema.schemaValue) : null;
            this.conditionService.saveSchema(newSchema).subscribe((/**
             * @return {?}
             */
            function () {
                self.notifyService['success']((/** @type {?} */ ({
                    title: self.localizeService.getValue('queryFramework.message.info.title'), msg: self.localizeService.getValue('queryFramework.message.save.success'), timeout: 3000
                })));
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                self.formErrorService.exception(_this.localizeService.getValue('ideCmp.schemaManager.message.validate.qdpModifyPublicSchema'), error);
            }));
        }
    };
    /**
     * @return {?}
     */
    ConditionDialogComponent.prototype.handlerGetEntity = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var entitys = this.repository.entityCollection.getAllEntities();
        /** @type {?} */
        var params;
        if (entitys && entitys.length) {
            params = entitys[0].toJSON();
            if (this.advanceFilterTab && this.advanceFilterTab.filterInstance) {
                if (!params) {
                    params = { id: 'undefined_null' };
                }
                params['@filterExpressionString@'] = this.advanceFilterTab.filterInstance.getFilterExpression();
            }
            else if (this.filterExpressionString) {
                if (!params) {
                    params = { id: 'undefined_null' };
                }
                params['@filterExpressionString@'] = this.filterExpressionString;
            }
        }
        return params;
    };
    ConditionDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'condition-dialog',
                    template: "<farris-dialog #farrisDialog [title]=\"localizeService.getValue('queryFramework.dialogTitle')\" [showButtons]=\"false\" [beforeClose]=\"handlebeforeClose\"\r\n  [width]=\"960\" [showMaxButton]=\"false\" [showMinButton]=\"false\" [resizable]=\"false\" [height]=\"570\" [beforeOpen]=\"beforeOpen\">\r\n  <div class=\"f-utils-absolute-all f-utils-flex-column bg-white\">\r\n    <div class=\"f-utils-flex-row-wrap farris-overflow-hidden\">\r\n      <div class=\"ml-3 mt-2 schema-manager-title\" (click)=\"handleSchemaMenu()\">{{defaultSchemaName}}</div>\r\n      <div class=\"schema-manager-tr\">\r\n      </div>\r\n    </div>\r\n    <div class=\"box ml-3 mt-2 schema-manager-dropdown\" [style.display]=\"menuShow?'block':'none'\">\r\n      <div class=\"f-utils-absolute-all f-utils-flex-column\">\r\n        <div class=\"f-utils-fill-flex-column f-utils-fill-auto\">\r\n          <div class=\"schemaType\">{{localizeService.getValue('queryFramework.schemaType.public')}}</div>\r\n          <div *ngFor=\"let item of publicList\" [class]=\"currentSchema && currentSchema.id && currentSchema.id === item.id ? 'schemaItem schemaItemHover' : 'schemaItem'\">\r\n            <div class=\"f-utils-flex-row-wrap\" (click)=\"handleSchemaSelected(item)\">\r\n              <div class=\"schemaItemFont1 col-8\">{{item.schemaName}}</div>\r\n              <div *ngIf=\"item.isDefault === 1\" class=\"schemaItemFont2 col-4\">\r\n                {{localizeService.getValue('queryFramework.defaultName')}}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"schemaType\">{{localizeService.getValue('queryFramework.schemaType.personal')}}</div>\r\n          <div *ngFor=\"let item1 of personalList\" [class]=\"currentSchema && currentSchema.id && currentSchema.id === item1.id ? 'schemaItem schemaItemHover' : 'schemaItem'\">\r\n            <div class=\"f-utils-flex-row-wrap\" (click)=\"handleSchemaSelected(item1)\">\r\n              <div class=\"schemaItemFont1 col-8\">{{item1.schemaName}}</div>\r\n              <div *ngIf=\"item1.isDefault === 1\" class=\"schemaItemFont2 col-4\">\r\n                {{localizeService.getValue('queryFramework.defaultName')}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-2 schema-manager-toolbar\">\r\n          <div class=\"btn-toolbar btn-group-lg\" id=\"page-header-toolbar\">\r\n            <button class=\"btn btn-link mr-1\" id=\"button-edit\"\r\n              (click)=\"handleSchemaManagerDialog()\">{{localizeService.getValue('queryFramework.btnManager')}}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"f-utils-flex-row pl-3 pr-3 pt-2 pb-2\">\r\n      <button [class]=\"controlIndexChanged === 0 ? 'btn btn-primary' : 'btn btn-secondary'\" id=\"button-edit1\"\r\n        (click)=\"handleInfoChanged(0)\">\r\n        {{localizeService.getValue('queryFramework.tabName1')}}</button>\r\n      <button [class]=\"controlIndexChanged === 1 ? 'btn btn-primary' : 'btn btn-secondary'\" id=\"button-edit2\"\r\n        (click)=\"handleInfoChanged(1)\">\r\n        {{localizeService.getValue('queryFramework.tabName2')}}</button>\r\n      <!-- <button [class]=\"controlIndexChanged == false ? 'btn btn-primary' : 'btn btn-secondary'\" id=\"button-edit2\"\r\n          (click)=\"handleInfoChanged(2)\">\r\n          {{localizeService.getValue('ideCmp.schemaManager.columnOption.selection2')}}</button> -->\r\n    </div>\r\n    <div class=\"f-utils-fill-flex-column\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <div class=\"btn-toolbar btn-group-lg\" id=\"page-header-toolbar\">\r\n        <button class=\"btn btn-primary mr-1\" id=\"button-edit\" (click)=\"handleQueryClick()\">\r\n          {{localizeService.getValue('queryFramework.btnQuery')}}</button>\r\n        <button class=\"btn btn-secondary mr-1\" id=\"button-edit\" (click)=\"handleSaveasSchemaDialog()\">\r\n          {{localizeService.getValue('queryFramework.btnSaveAsSchema')}}</button>\r\n        <button *ngIf=\"(!currentSchema) == false\" class=\"btn btn-secondary mr-1\" id=\"button-edit\" (click)=\"handleSaveClick()\">\r\n          {{localizeService.getValue('queryFramework.btnSaveSchema')}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</farris-dialog>\r\n<condition-manager-dialog [queryId]=\"queryId\" [publicList]=\"publicList\" [personalList]=\"personalList\" [currentSchema]=\"currentSchema\"></condition-manager-dialog>\r\n<saveas-schema-dialog [queryId]=\"queryId\" [currentSchema]=\"currentSchema\"></saveas-schema-dialog>\r\n",
                    styles: [".schema-manager-title{cursor:pointer;display:block;height:22px;font-family:PingFangSC-Regular;font-size:16px;color:#388fff;text-align:right}.schema-manager-tr{margin-top:1.1rem!important;margin-left:.25rem!important;width:0;height:0;border-left:3px solid transparent;border-right:3px solid transparent;border-top:6px solid rgba(0,0,0,.25)}.box{cursor:pointer;display:inline-block;position:relative;width:200px;height:246px;-webkit-filter:drop-shadow(0 2px 4px rgba(0, 0, 0, .2));filter:drop-shadow(0 2px 4px rgba(0, 0, 0, .2));border-radius:3px;background-color:#fff;border:1px solid #bbb}.box:after,.box:before{content:\"\";position:absolute;border:10px solid transparent;bottom:100%;left:10px}.box:before{border-bottom-color:#bbb}.box:after{border-bottom-color:#fff;margin-bottom:-1px}.schemaType{font-family:PingFangSC-Regular;font-size:14px;color:rgba(0,0,0,.45);line-height:20px;padding-left:.75rem!important;padding-top:.75rem!important;padding-bottom:.25rem!important}.schemaItem{height:30px}.schemaItem:hover,.schemaItemHover{background:#ddf4ff}.schemaItemFont1{font-family:PingFangSC-Regular;font-size:14px;color:rgba(0,0,0,.85);line-height:20px;margin-top:.25rem!important;margin-bottom:.25rem!important;float:left;text-align:center;word-break:keep-all;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding-left:0;padding-right:0}.schemaItemFont2{font-family:PingFangSC-Regular;font-size:12px;color:rgba(0,0,0,.45);line-height:20px;margin-top:.25rem!important;margin-bottom:.25rem!important;float:right;text-align:right;padding-left:0}.schema-manager-toolbar{background:#f9f9f9;display:flex;align-items:center;justify-content:flex-end;border-top:1px solid #e2e8f0}.schema-manager-dropdown{float:left;z-index:1000;position:absolute;top:30px}"]
                }] }
    ];
    /** @nocollapse */
    ConditionDialogComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ConditionSchemaService },
        { type: Repository },
        { type: CacheService },
        { type: FinishLoadService }
    ]; };
    ConditionDialogComponent.propDecorators = {
        showFilterExpression: [{ type: Input }],
        queryId: [{ type: Input }],
        tabIndex: [{ type: Input }],
        beforeQuery: [{ type: Input }],
        queryEvent: [{ type: Output }],
        farrisDialog: [{ type: ViewChild, args: ['farrisDialog',] }],
        conditionTabs: [{ type: ContentChildren, args: [ConditionDialogTabComponent,] }],
        conditionManagerDialog: [{ type: ViewChild, args: [ConditionManagerDialogComponent,] }],
        saveasSchemaDialogComponent: [{ type: ViewChild, args: [SaveasSchemaDialogComponent,] }]
    };
    return ConditionDialogComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var QueryFrameworkToolbarComponent = /** @class */ (function () {
    function QueryFrameworkToolbarComponent(cloudprintService, cacheservice, injector) {
        this.cloudprintService = cloudprintService;
        this.cacheservice = cacheservice;
        this.injector = injector;
        this.isShowToolbar = true;
        this.schemaSelected = new EventEmitter();
        this.dialogBeforeClose = new EventEmitter();
        this.pageChange = new EventEmitter();
        this.exportExcel = new EventEmitter();
        this.printIntegration = new EventEmitter();
        this.printPreview = new EventEmitter();
        this.refreshEvent = new EventEmitter();
        this.filterCondition = new EventEmitter();
        this.clearCache = new EventEmitter();
        this.expendCollapseLevel = new EventEmitter();
        this.clearSort = new EventEmitter();
        this.showSchemaManager = true;
        this.showExport = true;
        this.showReFresh = true;
        this.showFilter = true;
        this.showPrint = true;
        this.showClearSort = true;
        this.showClearCache = true;
        this.showPreSchema = true;
        // @Input() showFormPrint: any = true;
        // @Input() showPagination: any = true;
        this.formPrintOption = {
            isShowFormPrint: false,
            printBEId: '',
            printFormIdField: '',
            dim1: '',
            dim2: ''
        };
        this.isShowMore = false; // 是否显示更多
        // 是否显示更多
        this.isClickShowMore = false; // 点击后是否显示更多
        this.svgShuaxin = true;
        this.svgFilter = true;
        this.svgDimesion = true;
        this.svgClearCache = true;
        this.svgPrint = true;
        this.isExpand = false;
        this.printShow = false;
        this.cprintService = this.cloudprintService;
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.integrationPrintService = new IntegrationPrintService(this.cloudprintService);
            this.msgService = this.injector.get(MessagerService);
            this.cache = this.injector.get(CacheService);
            this.localizePageInfo = this.localizeService.getValue('queryFramework.pageInfo');
            this.tabId = RtfServices.getTabId(this.queryId);
        }
    }
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.getConditionDialog = /**
     * @return {?}
     */
    function () {
        if (this.conditionDialog) {
            return this.conditionDialog;
        }
        else if (QDPCacheUtil.getCache(this.tabId + 'advanceTemplate-condition-dialog')) {
            return QDPCacheUtil.getCache(this.tabId + 'advanceTemplate-condition-dialog');
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.controlType === 'list' || this.controlType === 'treelist') {
            this.printShow = true;
        }
        else {
            this.printShow = false;
        }
        if (this.inputTemplate) {
            this.isShowMore = true;
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'queryId':
                        this.tabId = RtfServices.getTabId(newValue);
                        break;
                    default:
                        break;
                }
            }
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} id
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handleBeforeClose = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        this.dialogBeforeClose.emit(id);
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.refresh = /**
     * @return {?}
     */
    function () {
        this.refreshEvent.emit();
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.filter = /**
     * @return {?}
     */
    function () {
        this.filterCondition.emit();
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handleClearSort = /**
     * @return {?}
     */
    function () {
        this.clearSort.emit();
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.condition = /**
     * @return {?}
     */
    function () {
        if (this.getConditionDialog()) {
            this.getConditionDialog().handleDialogShow();
            this.getConditionDialog().handleInfoChanged(0);
            this.getConditionDialog().Id = this.getConditionDialog().schemaId;
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handleDimesionSetting = /**
     * @return {?}
     */
    function () {
        this.qdpView.toggle();
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handlePrintIntegration = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.printIntegration.emit($event);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handlePrintPreview = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.printPreview.emit($event);
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handleClearCache = /**
     * @return {?}
     */
    function () {
        this.clearCache.emit();
    };
    /**
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.print = /**
     * @return {?}
     */
    function () {
        if (this.controlType !== 'crosstab' && this.controlType !== 'charts') {
            /** @type {?} */
            var params = this.createParameters(Object.assign({}, {
                queryId: this.queryId,
                controlType: this.controlType,
                schemaId: this.schemaId,
                filtercondition: this.conditionExpression,
                qoManagerCode: this.qoManagerCode,
                voId: this.voId
            }, { pageIndex: 0, pageSize: 0 }));
            /** @type {?} */
            var sheet = this.qdpView.spread.getActiveSheet();
            /** @type {?} */
            var selection = sheet.getSelections();
            /** @type {?} */
            var formIdField = '';
            /** @type {?} */
            var beId = '';
            /** @type {?} */
            var dim1 = '';
            /** @type {?} */
            var dim2 = '';
            if (this.formPrintOption && this.formPrintOption.printBEId) {
                beId = this.formPrintOption.printBEId;
                params['beId'] = beId;
            }
            else {
                this.msgService.warning(this.localizeService.getValue('queryFramework.message.validate.beMetadataIdEmpty'));
                return;
            }
            if (this.formPrintOption && this.formPrintOption.printFormIdField) {
                formIdField = this.formPrintOption.printFormIdField;
                params['formIdField'] = formIdField;
            }
            else {
                this.msgService.warning(this.localizeService.getValue('queryFramework.message.validate.formIdFieldEmpty'));
                return;
            }
            if (this.formPrintOption && this.formPrintOption.dim1) {
                dim1 = this.formPrintOption.dim1;
            }
            if (this.formPrintOption && this.formPrintOption.dim2) {
                dim2 = this.formPrintOption.dim2;
            }
            /** @type {?} */
            var ids = '';
            if (selection && selection.length) {
                for (var s = 0; s < selection.length; s++) {
                    for (var i = selection[s].row; i < (selection[s].rowCount + selection[s].row); i++) {
                        /** @type {?} */
                        var dataItem = sheet.getDataItem(i);
                        if (dataItem && dataItem.hasOwnProperty(formIdField)) {
                            ids += ',' + dataItem[formIdField];
                        }
                    }
                }
                ids = ids.substring(1);
                this.integrationPrintService.printByIdsWithDimension(beId, ids, dim1, dim2);
            }
            else {
                ids = '1';
                this.integrationPrintService.printWithDimensionCustomDataSource(beId, ids, dim1, dim2, 'InternalService', 'com.inspur.edp.qdp.lcp.print.FormPrintDataManager', params);
            }
            sheet.clearSelection();
        }
    };
    /**
     * @param {?} type
     * @param {?} state
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handleHover = /**
     * @param {?} type
     * @param {?} state
     * @return {?}
     */
    function (type, state) {
        switch (type) {
            case 0:
                this.svgShuaxin = state === 1;
                break;
            case 1:
                this.svgFilter = state === 1;
                break;
            case 2:
                this.svgDimesion = state === 1;
                break;
            case 3:
                this.svgClearCache = state === 1;
                break;
            case 4:
                this.svgPrint = state == 1;
                break;
            default:
                break;
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.handleExpand = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.isExpand = $event;
        this.expendCollapseLevel.emit(this.isExpand);
    };
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    QueryFrameworkToolbarComponent.prototype.createParameters = /**
     * @private
     * @param {?} option
     * @return {?}
     */
    function (option) {
        /** @type {?} */
        var tabId = RtfServices.getTabId(option.queryId);
        /** @type {?} */
        var entityData;
        if (this.cache.get(tabId)) {
            entityData = JSON.stringify(this.cache.get(tabId));
        }
        else if (this.cache.get(option.queryId)) {
            entityData = JSON.stringify(this.cache.get(option.queryId));
        }
        else {
            entityData = JSON.stringify({ 'id': 'undefined_null' });
        }
        /** @type {?} */
        var params = {
            entityData: entityData,
            extendCond: this.cache.get(tabId + 'extendCond') ? this.cache.get(tabId + 'extendCond') : option.extendCond,
            pageIndex: option.pageIndex,
            pageSize: option.pageSize,
            schemaId: option.schemaId && option.schemaId !== 'prefab' ? option.schemaId : '1',
            filterCond: option.filterCondition ? option.filterCondition : (this.cache.get(tabId + 'filtercondition') ? this.cache.get(tabId + 'filtercondition') : ''),
            qoManagerCode: option.qoManagerCode ? option.qoManagerCode : '',
            voCode: option.voId ? option.voId : '',
        };
        try {
            /** @type {?} */
            var parameterEntityData = JSON.parse(entityData);
            if (parameterEntityData.hasOwnProperty('@filterExpressionString@')) {
                /** @type {?} */
                var filterExpression = params && params.filterCond ? JSON.parse(params.filterCond) : null;
                if (!filterExpression) {
                    params.filterCond = parameterEntityData['@filterExpressionString@'];
                }
                else {
                    /** @type {?} */
                    var advanceFilterExpression = JSON.parse(parameterEntityData['@filterExpressionString@']);
                    advanceFilterExpression.expressItems = advanceFilterExpression.expressItems.concat(filterExpression.expressItems);
                    params.filterCond = JSON.stringify(advanceFilterExpression);
                }
            }
        }
        catch (e) {
        }
        if (option.controlType) {
            params['controlType'] = option.controlType;
        }
        if (option.excelExportName) {
            params['excelExportName'] = option.excelExportName;
        }
        if (option.printIntegration) {
            params['printIntegration'] = option.printIntegration ? JSON.stringify(option.printIntegration) : '';
        }
        return params;
    };
    QueryFrameworkToolbarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'query-framework-toolbar',
                    template: "<div class=\"f-page-header-base pl-0 pr-2 border-top\">\r\n  <!-- <label class=\"farris-form-title mr-auto\" for=\"page-header-title\" [hidden]=\"isMultiForm \">\r\n    <span>{{queryName}}</span>\r\n  </label> -->\r\n  <!--\u5D4C\u5165\u5F0F\u8868\u5355\u6839\u636E\u662F\u5426\u663E\u793A\u5DE5\u5177\u680F\u63A7\u5236\u6309\u94AE\u9690\u85CF\u4E0E\u663E\u793A-->\r\n  <div class=\"btn-toolbar btn-group-lg align-items-center\" id=\"page-header-toolbar\"\r\n    [hidden]=\"!isShowToolbar || isMultiForm \">\r\n    <button *ngIf=\"templateType==='qdpAdvancedTemplate'\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-condition\"\r\n     (click)=\"condition()\" (mouseenter)=\"handleHover(1, 0)\" (mouseleave)=\"handleHover(1, 1)\">\r\n      <span class=\"f-icon\" role=\"presentation\">\r\n        <img *ngIf=\"svgFilter\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTggMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPnNoYWl4dWFuPC90aXRsZT48ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz48ZyBpZD0n6aG16Z2iLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPjxnIGlkPSfkuqTkupLmlrnmoYgxLeW4uOinhOaAgeWkh+S7vScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTQwNC4wMDAwMDAsIC0xOTUuMDAwMDAwKScgZmlsbD0nIzhBOThCRSc+PGcgaWQ9J+e8lue7hC0xNScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi4wMDAwMDAsIDE4Mi4wMDAwMDApJz48ZyBpZD0neml5dWFuJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzOTguMDAwMDAwLCAxMi4wMDAwMDApJz48ZyBpZD0n57yW57uELTIwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMS4wMDAwMDApJz48cGF0aCBkPSdNMTUuNTg0MzMyMywyLjAwMDE5MTgzIEMxNS43NDIzMjAzLDEuOTk1MzMxOTYgMTUuODg4NTgyOSwyLjA4MzE1MTk0IDE1Ljk1ODQ1NTUsMi4yMjQ4MjU0NSBDMTYuMDI4MzI4MSwyLjM2NjQ5ODk2IDE2LjAwODkyNiwyLjUzNTkwMDc3IDE1LjkwODgyNywyLjY1ODEzNjIxIEwxNS45MDg4MjcsMi42NTgxMzYyMSBMMTAuOTUzMTk0OSw4LjYwNzk2ODIxIEMxMC44OTM3NDM3LDguNjc5NjIxOTEgMTAuODYxNDAzLDguNzY5ODg0NzcgMTAuODYxODMyMyw4Ljg2Mjk2MTAxIEwxMC44NjE4MzIzLDguODYyOTYxMDEgTDEwLjg2MTgzMjMsMTUuNTkzNTExNyBDMTAuODU3MjAwOSwxNS43NTIxNjk1IDEwLjc2MzE4NDQsMTUuODk0NTY4NyAxMC42MTkwMzc4LDE1Ljk2MTI1MyBDMTAuNDc0ODkxMSwxNi4wMjc5MzcyIDEwLjMwNTQwMjQsMTYuMDA3NDM5MyAxMC4xODEzMzg2LDE1LjkwODMxNzYgTDEwLjE4MTMzODYsMTUuOTA4MzE3NiBMNy4yNzM0ODgzNywxMy42MTAyMzQ0IEM3LjE3NzQ2MTI0LDEzLjUzNDAwNCA3LjEyMTcyNjIsMTMuNDE3OTc2OCA3LjEyMjI2NzU1LDEzLjI5NTQyODQgTDcuMTIyMjY3NTUsMTMuMjk1NDI4NCBMNy4xMjIyNjc1NSw4Ljg2NjEwOTA3IEM3LjEyMTQxMDczLDguNzczMjU3NDggNy4wODkyMTk1OSw4LjY4MzQxMjA1IDcuMDMwOTA0OTcsOC42MTExMTYyNyBMNy4wMzA5MDQ5Nyw4LjYxMTExNjI3IEwyLjA5MTAyNTAyLDIuNjU4MTM2MjEgQzEuOTkyMTIzMDcsMi41MzcyMTk0IDEuOTcyMDQ1NDMsMi4zNzAwODc0NiAyLjAzOTQ5ODY4LDIuMjI5MjE2NDMgQzIuMTA2OTUxOTMsMi4wODgzNDU0IDIuMjQ5Nzg4NjYsMS45OTkxMDQxOCAyLjQwNjA2ODM4LDIuMDAwMTkxODMgTDIuNDA2MDY4MzgsMi4wMDAxOTE4MyBaIE0xMC41NDI4NzU2LDYuNjY2NjY2NjcgTDcuNiw2LjY2NjY2NjY3IEw3LjYsNy42IEwxMC41NDI4NzU2LDcuNiBMMTAuNTQyODc1Niw2LjY2NjY2NjY3IFonIGlkPSflvaLnirbnu5PlkIgnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 16px; height: 16px; display: block;\" />\r\n        <img *ngIf=\"!svgFilter\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxN3B4JyB2aWV3Qm94PScwIDAgMTggMTcnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPnNoYWl4dWFuMjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0n5Zu+5qCH6YCJ5Lit6aKc6Imy5YiH5Zu+5aSH5Lu9JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtNDA0LjAwMDAwMCwgLTE5NS4wMDAwMDApJyBmaWxsPScjNThBMUZFJz48ZyBpZD0n57yW57uELTE1JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg2LjAwMDAwMCwgMTgyLjAwMDAwMCknPjxnIGlkPSd6aXl1YW4nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDM5OC4wMDAwMDAsIDExLjAwMDAwMCknPjxwYXRoIGQ9J00xNS41ODQzMzIzLDQuMDAwMTkxODMgQzE1Ljc0MjMyMDMsMy45OTUzMzE5NiAxNS44ODg1ODI5LDQuMDgzMTUxOTQgMTUuOTU4NDU1NSw0LjIyNDgyNTQ1IEMxNi4wMjgzMjgxLDQuMzY2NDk4OTYgMTYuMDA4OTI2LDQuNTM1OTAwNzcgMTUuOTA4ODI3LDQuNjU4MTM2MjEgTDE1LjkwODgyNyw0LjY1ODEzNjIxIEwxMC45NTMxOTQ5LDEwLjYwNzk2ODIgQzEwLjg5Mzc0MzcsMTAuNjc5NjIxOSAxMC44NjE0MDMsMTAuNzY5ODg0OCAxMC44NjE4MzIzLDEwLjg2Mjk2MSBMMTAuODYxODMyMywxMC44NjI5NjEgTDEwLjg2MTgzMjMsMTcuNTkzNTExNyBDMTAuODU3MjAwOSwxNy43NTIxNjk1IDEwLjc2MzE4NDQsMTcuODk0NTY4NyAxMC42MTkwMzc4LDE3Ljk2MTI1MyBDMTAuNDc0ODkxMSwxOC4wMjc5MzcyIDEwLjMwNTQwMjQsMTguMDA3NDM5MyAxMC4xODEzMzg2LDE3LjkwODMxNzYgTDEwLjE4MTMzODYsMTcuOTA4MzE3NiBMNy4yNzM0ODgzNywxNS42MTAyMzQ0IEM3LjE3NzQ2MTI0LDE1LjUzNDAwNCA3LjEyMTcyNjIsMTUuNDE3OTc2OCA3LjEyMjI2NzU1LDE1LjI5NTQyODQgTDcuMTIyMjY3NTUsMTUuMjk1NDI4NCBMNy4xMjIyNjc1NSwxMC44NjYxMDkxIEM3LjEyMTQxMDczLDEwLjc3MzI1NzUgNy4wODkyMTk1OSwxMC42ODM0MTIxIDcuMDMwOTA0OTcsMTAuNjExMTE2MyBMNy4wMzA5MDQ5NywxMC42MTExMTYzIEwyLjA5MTAyNTAyLDQuNjU4MTM2MjEgQzEuOTkyMTIzMDcsNC41MzcyMTk0IDEuOTcyMDQ1NDMsNC4zNzAwODc0NiAyLjAzOTQ5ODY4LDQuMjI5MjE2NDMgQzIuMTA2OTUxOTMsNC4wODgzNDU0IDIuMjQ5Nzg4NjYsMy45OTkxMDQxOCAyLjQwNjA2ODM4LDQuMDAwMTkxODMgTDIuNDA2MDY4MzgsNC4wMDAxOTE4MyBaIE0xMC41NDI4NzU2LDguNjY2NjY2NjcgTDcuNiw4LjY2NjY2NjY3IEw3LjYsOS42IEwxMC41NDI4NzU2LDkuNiBMMTAuNTQyODc1Niw4LjY2NjY2NjY3IFonIGlkPSflvaLnirbnu5PlkIgnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.btnCondition')}}</span>\r\n      <!-- <span class=\"f-icon f-icon-filter-sm\" role=\"presentation\"></span> -->\r\n    </button>\r\n    <schema-manager *ngIf=\"showSchemaManager\" [schemaInfo]=\"schemaInfo\" [colList]=\"colList\" [queryId]=\"queryId\" [groupType]=\"groupType\"\r\n      [controlType]=\"controlType\" [isMultiForm]=\"isMultiForm\" [queryRelativeUrl]=\"queryRelativeUrl\" [showPreSchema]=\"showPreSchema\"\r\n      (schemaSelected)=\"schemaSelected.emit($event)\" (dialogBeforeClose)=\"handleBeforeClose($event)\"></schema-manager>\r\n    <export-data *ngIf=\"controlType!='charts' && showExport\" [isMultiForm]=\"isMultiForm\" (exportExcel)=\"exportExcel.emit($event)\">\r\n    </export-data>\r\n    <button *ngIf=\"showReFresh\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-refresh\"\r\n      (click)=\"refresh()\" (mouseenter)=\"handleHover(0, 0)\" (mouseleave)=\"handleHover(0, 1)\">\r\n      <span class=\"f-icon\" role=\"presentation\">\r\n        <img *ngIf=\"svgShuaxin\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTggMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPnNodWF4aW48L3RpdGxlPjxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPjxnIGlkPSfpobXpnaItMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9J+S6pOS6kuaWueahiDEt5bi46KeE5oCB5aSH5Lu9JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMzI3LjAwMDAwMCwgLTE5NS4wMDAwMDApJz48ZyBpZD0n57yW57uELTE1JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg2LjAwMDAwMCwgMTgyLjAwMDAwMCknPjxnIGlkPSdzaHVheGluJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzMjEuMDAwMDAwLCAxMi4wMDAwMDApJz48ZyBpZD0n57yW57uELTE4JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMS4wMDAwMDApJz48cGF0aCBkPSdNNy43OTI1NTAyNSw4LjIzODE3ODQ1IEw2LjQyNjAyMzY4LDguMjM4MTc4NDUgQzYuNDI2MDIzNjgsNS44MzUzMjU0NSA2LjQyNjAyMzY4LDIuNzQ1MjQ0MjcgMTAuNzUzMTU1MSwwLjIyODY2ODQ0OSBDMTAuODY2MzIyNCwwLjExMzcyMjgwMiAxMC43NTMxNTUxLDAgMTAuNjM4NzcwOCwwIEMyLjU1NTIxMjM5LDEuMjU4Mjg3OTEgMS44NzM3NzQzOCw2Ljc0OTk5OTI3IDEuODczNzc0MzgsOC4yMzgxNzg0NSBMMC41MDYwMzA5NDQsOC4yMzgxNzg0NSBDMC4wNTA5Mjc2OTMsOC4yMzgxNzg0NSAtMC4xNzc4NDA3OCw4LjY5NTUxNTM3IDAuMTY1MzExOTM4LDkuMDM5MTI5NDYgTDMuNDY2NjM1NzMsMTMuMTU3NjA3MyBDMy42MjgwMDk4NCwxMy4zNzMxODg5IDMuODgwODQyODYsMTMuNSA0LjE0OTI5MDYsMTMuNSBDNC40MTc3MzgzNCwxMy41IDQuNjcwNTcxMzUsMTMuMzczMTg4OSA0LjgzMTk0NTQ3LDEzLjE1NzYwNzMgTDguMTM0NDg2MTIsOS4wMzkxMjk0NiBDOC4zNjIwMzc3Myw4LjY5NTUxNTM3IDguMTM0NDg2MTIsOC4yMzgxNzg0NyA3Ljc5Mzc2NzExLDguMjM4MTc4NDUgTDcuNzkyNTUwMjUsOC4yMzgxNzg0NSBaJyBpZD0n5b2i54q2JyBmaWxsPScjOEE5OEJFJyBmaWxsLXJ1bGU9J25vbnplcm8nPjwvcGF0aD48cGF0aCBkPSdNMTcuOTExNTc0MSw3LjE2MjA5MzM2IEwxNC42MjA5MjY5LDMuMDQyMzkyNzEgQzE0LjQ2MDEzNCwyLjgyNjgxMTA1IDE0LjIwODIxMTUsMi43IDEzLjk0MDczMDUsMi43IEMxMy42NzMyNDk1LDIuNyAxMy40MjEzMjcsMi44MjY4MTEwNSAxMy4yNjA1MzQxLDMuMDQyMzkyNzEgTDkuOTY5ODg2ODYsNy4xNjIwOTMzNiBDOS43NDMxNTQ3Myw3LjUwNDQ4NDYzIDkuOTY5ODg2ODYsNy45NjE4MjE1NCAxMC4zMDkzNzg4LDcuOTYxODIxNTIgTDExLjU1ODIyNDMsNy45NjE4MjE1MiBDMTEuNTU4MjI0MywxMC4zNjQ2NzQ1IDExLjU1ODIyNDMsMTMuNDU0NzU1NyA3LjI0NjY3NjI0LDE1Ljk3MTMzMTUgQzcuMTMzOTE2NCwxNi4wODYyNzcyIDcuMjQ2Njc2MjQsMTYuMiA3LjM2MDY0ODU1LDE2LjIgQzE1LjQxNTA5NTcsMTQuOTQxNzEyMSAxNi4wOTY1MDQ1LDkuNDUwMDAwNzMgMTYuMDk2NTA0NSw3Ljk2MTgyMTUyIEwxNy40NTgxMDk4LDcuOTYxODIxNTIgQzE3LjkxMTU3NDEsNy45NjE4MjE1MiAxOC4xMzcwOTM4LDcuNTA0NDg0NjEgMTcuOTExNTc0MSw3LjE2MjA5MzM2IEwxNy45MTE1NzQxLDcuMTYyMDkzMzYgWicgaWQ9J+i3r+W+hCcgZmlsbD0nIzdBODlCMicgb3BhY2l0eT0nMC41Jz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvZz48L3N2Zz4=\" style=\"width: 16px; height: 16px; display: block;\" />\r\n        <img *ngIf=\"!svgShuaxin\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxN3B4JyB2aWV3Qm94PScwIDAgMTggMTcnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPnNodWF4aW4yPC90aXRsZT48ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz48ZyBpZD0n6aG16Z2iLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPjxnIGlkPSflm77moIfpgInkuK3popzoibLliIflm77lpIfku70nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0zMjcuMDAwMDAwLCAtMTk1LjAwMDAwMCknIGZpbGw9JyM1MEQwODEnPjxnIGlkPSfnvJbnu4QtMTUnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDYuMDAwMDAwLCAxODIuMDAwMDAwKSc+PGcgaWQ9J3NodWF4aW4nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMyMS4wMDAwMDAsIDExLjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMTgnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMCknPjxwYXRoIGQ9J003Ljc5MjU1MDI1LDguMjM4MTc4NDUgTDYuNDI2MDIzNjgsOC4yMzgxNzg0NSBDNi40MjYwMjM2OCw1LjgzNTMyNTQ1IDYuNDI2MDIzNjgsMi43NDUyNDQyNyAxMC43NTMxNTUxLDAuMjI4NjY4NDQ5IEMxMC44NjYzMjI0LDAuMTEzNzIyODAyIDEwLjc1MzE1NTEsMCAxMC42Mzg3NzA4LDAgQzIuNTU1MjEyMzksMS4yNTgyODc5MSAxLjg3Mzc3NDM4LDYuNzQ5OTk5MjcgMS44NzM3NzQzOCw4LjIzODE3ODQ1IEwwLjUwNjAzMDk0NCw4LjIzODE3ODQ1IEMwLjA1MDkyNzY5Myw4LjIzODE3ODQ1IC0wLjE3Nzg0MDc4LDguNjk1NTE1MzcgMC4xNjUzMTE5MzgsOS4wMzkxMjk0NiBMMy40NjY2MzU3MywxMy4xNTc2MDczIEMzLjYyODAwOTg0LDEzLjM3MzE4ODkgMy44ODA4NDI4NiwxMy41IDQuMTQ5MjkwNiwxMy41IEM0LjQxNzczODM0LDEzLjUgNC42NzA1NzEzNSwxMy4zNzMxODg5IDQuODMxOTQ1NDcsMTMuMTU3NjA3MyBMOC4xMzQ0ODYxMiw5LjAzOTEyOTQ2IEM4LjM2MjAzNzczLDguNjk1NTE1MzcgOC4xMzQ0ODYxMiw4LjIzODE3ODQ3IDcuNzkzNzY3MTEsOC4yMzgxNzg0NSBMNy43OTI1NTAyNSw4LjIzODE3ODQ1IFonIGlkPSflvaLnirYnIGZpbGwtcnVsZT0nbm9uemVybyc+PC9wYXRoPjxwYXRoIGQ9J00xNy45MTE1NzQxLDcuMTYyMDkzMzYgTDE0LjYyMDkyNjksMy4wNDIzOTI3MSBDMTQuNDYwMTM0LDIuODI2ODExMDUgMTQuMjA4MjExNSwyLjcgMTMuOTQwNzMwNSwyLjcgQzEzLjY3MzI0OTUsMi43IDEzLjQyMTMyNywyLjgyNjgxMTA1IDEzLjI2MDUzNDEsMy4wNDIzOTI3MSBMOS45Njk4ODY4Niw3LjE2MjA5MzM2IEM5Ljc0MzE1NDczLDcuNTA0NDg0NjMgOS45Njk4ODY4Niw3Ljk2MTgyMTU0IDEwLjMwOTM3ODgsNy45NjE4MjE1MiBMMTEuNTU4MjI0Myw3Ljk2MTgyMTUyIEMxMS41NTgyMjQzLDEwLjM2NDY3NDUgMTEuNTU4MjI0MywxMy40NTQ3NTU3IDcuMjQ2Njc2MjQsMTUuOTcxMzMxNSBDNy4xMzM5MTY0LDE2LjA4NjI3NzIgNy4yNDY2NzYyNCwxNi4yIDcuMzYwNjQ4NTUsMTYuMiBDMTUuNDE1MDk1NywxNC45NDE3MTIxIDE2LjA5NjUwNDUsOS40NTAwMDA3MyAxNi4wOTY1MDQ1LDcuOTYxODIxNTIgTDE3LjQ1ODEwOTgsNy45NjE4MjE1MiBDMTcuOTExNTc0MSw3Ljk2MTgyMTUyIDE4LjEzNzA5MzgsNy41MDQ0ODQ2MSAxNy45MTE1NzQxLDcuMTYyMDkzMzYgTDE3LjkxMTU3NDEsNy4xNjIwOTMzNiBaJyBpZD0n6Lev5b6EJyBvcGFjaXR5PScwLjYnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.refreshName')}}</span>\r\n      <!-- <span class=\"f-icon f-icon-reload-sm\" role=\"presentation\"></span> -->\r\n    </button>\r\n    <button *ngIf=\"showFilter\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-filter\"\r\n      (click)=\"filter()\" (mouseenter)=\"handleHover(1, 0)\" (mouseleave)=\"handleHover(1, 1)\">\r\n      <span class=\"f-icon\" role=\"presentation\">\r\n        <img *ngIf=\"svgFilter\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTggMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPnNoYWl4dWFuPC90aXRsZT48ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz48ZyBpZD0n6aG16Z2iLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPjxnIGlkPSfkuqTkupLmlrnmoYgxLeW4uOinhOaAgeWkh+S7vScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTQwNC4wMDAwMDAsIC0xOTUuMDAwMDAwKScgZmlsbD0nIzhBOThCRSc+PGcgaWQ9J+e8lue7hC0xNScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi4wMDAwMDAsIDE4Mi4wMDAwMDApJz48ZyBpZD0neml5dWFuJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzOTguMDAwMDAwLCAxMi4wMDAwMDApJz48ZyBpZD0n57yW57uELTIwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMS4wMDAwMDApJz48cGF0aCBkPSdNMTUuNTg0MzMyMywyLjAwMDE5MTgzIEMxNS43NDIzMjAzLDEuOTk1MzMxOTYgMTUuODg4NTgyOSwyLjA4MzE1MTk0IDE1Ljk1ODQ1NTUsMi4yMjQ4MjU0NSBDMTYuMDI4MzI4MSwyLjM2NjQ5ODk2IDE2LjAwODkyNiwyLjUzNTkwMDc3IDE1LjkwODgyNywyLjY1ODEzNjIxIEwxNS45MDg4MjcsMi42NTgxMzYyMSBMMTAuOTUzMTk0OSw4LjYwNzk2ODIxIEMxMC44OTM3NDM3LDguNjc5NjIxOTEgMTAuODYxNDAzLDguNzY5ODg0NzcgMTAuODYxODMyMyw4Ljg2Mjk2MTAxIEwxMC44NjE4MzIzLDguODYyOTYxMDEgTDEwLjg2MTgzMjMsMTUuNTkzNTExNyBDMTAuODU3MjAwOSwxNS43NTIxNjk1IDEwLjc2MzE4NDQsMTUuODk0NTY4NyAxMC42MTkwMzc4LDE1Ljk2MTI1MyBDMTAuNDc0ODkxMSwxNi4wMjc5MzcyIDEwLjMwNTQwMjQsMTYuMDA3NDM5MyAxMC4xODEzMzg2LDE1LjkwODMxNzYgTDEwLjE4MTMzODYsMTUuOTA4MzE3NiBMNy4yNzM0ODgzNywxMy42MTAyMzQ0IEM3LjE3NzQ2MTI0LDEzLjUzNDAwNCA3LjEyMTcyNjIsMTMuNDE3OTc2OCA3LjEyMjI2NzU1LDEzLjI5NTQyODQgTDcuMTIyMjY3NTUsMTMuMjk1NDI4NCBMNy4xMjIyNjc1NSw4Ljg2NjEwOTA3IEM3LjEyMTQxMDczLDguNzczMjU3NDggNy4wODkyMTk1OSw4LjY4MzQxMjA1IDcuMDMwOTA0OTcsOC42MTExMTYyNyBMNy4wMzA5MDQ5Nyw4LjYxMTExNjI3IEwyLjA5MTAyNTAyLDIuNjU4MTM2MjEgQzEuOTkyMTIzMDcsMi41MzcyMTk0IDEuOTcyMDQ1NDMsMi4zNzAwODc0NiAyLjAzOTQ5ODY4LDIuMjI5MjE2NDMgQzIuMTA2OTUxOTMsMi4wODgzNDU0IDIuMjQ5Nzg4NjYsMS45OTkxMDQxOCAyLjQwNjA2ODM4LDIuMDAwMTkxODMgTDIuNDA2MDY4MzgsMi4wMDAxOTE4MyBaIE0xMC41NDI4NzU2LDYuNjY2NjY2NjcgTDcuNiw2LjY2NjY2NjY3IEw3LjYsNy42IEwxMC41NDI4NzU2LDcuNiBMMTAuNTQyODc1Niw2LjY2NjY2NjY3IFonIGlkPSflvaLnirbnu5PlkIgnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 16px; height: 16px; display: block;\" />\r\n        <img *ngIf=\"!svgFilter\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxN3B4JyB2aWV3Qm94PScwIDAgMTggMTcnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPnNoYWl4dWFuMjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0n5Zu+5qCH6YCJ5Lit6aKc6Imy5YiH5Zu+5aSH5Lu9JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtNDA0LjAwMDAwMCwgLTE5NS4wMDAwMDApJyBmaWxsPScjNThBMUZFJz48ZyBpZD0n57yW57uELTE1JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg2LjAwMDAwMCwgMTgyLjAwMDAwMCknPjxnIGlkPSd6aXl1YW4nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDM5OC4wMDAwMDAsIDExLjAwMDAwMCknPjxwYXRoIGQ9J00xNS41ODQzMzIzLDQuMDAwMTkxODMgQzE1Ljc0MjMyMDMsMy45OTUzMzE5NiAxNS44ODg1ODI5LDQuMDgzMTUxOTQgMTUuOTU4NDU1NSw0LjIyNDgyNTQ1IEMxNi4wMjgzMjgxLDQuMzY2NDk4OTYgMTYuMDA4OTI2LDQuNTM1OTAwNzcgMTUuOTA4ODI3LDQuNjU4MTM2MjEgTDE1LjkwODgyNyw0LjY1ODEzNjIxIEwxMC45NTMxOTQ5LDEwLjYwNzk2ODIgQzEwLjg5Mzc0MzcsMTAuNjc5NjIxOSAxMC44NjE0MDMsMTAuNzY5ODg0OCAxMC44NjE4MzIzLDEwLjg2Mjk2MSBMMTAuODYxODMyMywxMC44NjI5NjEgTDEwLjg2MTgzMjMsMTcuNTkzNTExNyBDMTAuODU3MjAwOSwxNy43NTIxNjk1IDEwLjc2MzE4NDQsMTcuODk0NTY4NyAxMC42MTkwMzc4LDE3Ljk2MTI1MyBDMTAuNDc0ODkxMSwxOC4wMjc5MzcyIDEwLjMwNTQwMjQsMTguMDA3NDM5MyAxMC4xODEzMzg2LDE3LjkwODMxNzYgTDEwLjE4MTMzODYsMTcuOTA4MzE3NiBMNy4yNzM0ODgzNywxNS42MTAyMzQ0IEM3LjE3NzQ2MTI0LDE1LjUzNDAwNCA3LjEyMTcyNjIsMTUuNDE3OTc2OCA3LjEyMjI2NzU1LDE1LjI5NTQyODQgTDcuMTIyMjY3NTUsMTUuMjk1NDI4NCBMNy4xMjIyNjc1NSwxMC44NjYxMDkxIEM3LjEyMTQxMDczLDEwLjc3MzI1NzUgNy4wODkyMTk1OSwxMC42ODM0MTIxIDcuMDMwOTA0OTcsMTAuNjExMTE2MyBMNy4wMzA5MDQ5NywxMC42MTExMTYzIEwyLjA5MTAyNTAyLDQuNjU4MTM2MjEgQzEuOTkyMTIzMDcsNC41MzcyMTk0IDEuOTcyMDQ1NDMsNC4zNzAwODc0NiAyLjAzOTQ5ODY4LDQuMjI5MjE2NDMgQzIuMTA2OTUxOTMsNC4wODgzNDU0IDIuMjQ5Nzg4NjYsMy45OTkxMDQxOCAyLjQwNjA2ODM4LDQuMDAwMTkxODMgTDIuNDA2MDY4MzgsNC4wMDAxOTE4MyBaIE0xMC41NDI4NzU2LDguNjY2NjY2NjcgTDcuNiw4LjY2NjY2NjY3IEw3LjYsOS42IEwxMC41NDI4NzU2LDkuNiBMMTAuNTQyODc1Niw4LjY2NjY2NjY3IFonIGlkPSflvaLnirbnu5PlkIgnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.filterName')}}</span>\r\n      <!-- <span class=\"f-icon f-icon-filter-sm\" role=\"presentation\"></span> -->\r\n    </button>\r\n    <!-- \u6253\u5370 -->\r\n    <print-integration *ngIf=\"showPrint && printShow\" [queryId]=\"queryId\" [controlType]=\"controlType\" [isMultiForm]=\"isMultiForm\"\r\n      [queryRelativeUrl]=\"queryRelativeUrl\" (printIntegration)=\"handlePrintIntegration($event)\"\r\n      (printPreview)=\"handlePrintPreview($event)\"></print-integration>\r\n    <button class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-dimensionSetting\"\r\n      *ngIf=\"controlType==='crosstab'\" (click)=\"handleDimesionSetting()\" (mouseenter)=\"handleHover(2, 0)\" (mouseleave)=\"handleHover(2, 1)\">\r\n      <span class=\"f-icon\" role=\"presentation\">\r\n        <img *ngIf=\"svgDimesion\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTZweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTYgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuiHquWumuS5iee7tOW6puagkS3nu7TluqbnrqHnkIY8L3RpdGxlPjxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPjxnIGlkPSfpobXpnaItMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9JzAyLeafpeivolVJ6K6+6K6hJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtNDg2LjAwMDAwMCwgLTE5NS4wMDAwMDApJyBmaWxsPScjOEE5OEJFJyBmaWxsLXJ1bGU9J25vbnplcm8nPjxnIGlkPSdzaHVheGluJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg0ODUuMDAwMDAwLCAxOTMuMDAwMDAwKSc+PGcgaWQ9J+iHquWumuS5iee7tOW6puagkS3nu7TluqbnrqHnkIYnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAxLjAwMDAwMCknPjxwYXRoIGQ9J005LjYwMDY1ODI5LDEuMzE4NjA0NjYgTDE0Ljg1OTg4OSw0LjI3MTE1NDg1IEMxNS41Njg1NCw0LjY2OTEwNTQ5IDE2LjAwNDMzNzMsNS4zOTkyMjg4MSAxNi4wMDQ1MDQ0LDYuMTg4ODEzNDMgTDE2LjAwNDUwNDQsMTEuODQyOTYzNyBDMTYuMDA0NzQ3NywxMi42MzI5NDQ4IDE1LjU2ODg5NTksMTMuMzYzNTgyMiAxNC44NTk4ODksMTMuNzYxNzMyNyBMOS42MDA2NTgyOSwxNi43MTQyODI4IEM4Ljg3NTUyNTU2LDE3LjEyMDk1NjcgNy45NzgxMzMwOSwxNy4xMTY3MDQ2IDcuMjU3MTk2NzcsMTYuNzAzMTc4OSBMMi4xMzA2NTgzNCwxMy43NjUwNjM5IEMxLjQzMjI5MzU2LDEzLjM2NDQ3NjIgMS4wMDQ0OTI2NywxMi42Mzk3OTY2IDEuMDA0NTA0NTEsMTEuODU3Mzk4OSBMMS4wMDQ1MDQ1MSw2LjE3NTQ4ODY0IEMxLjAwNDQ5MjY4LDUuMzkzMDkwOTUgMS40MzIyOTM1Nyw0LjY2ODQxMTI4IDIuMTMwNjU4MzQsNC4yNjc4MjM2NSBMNy4yNTgzNTA2MiwxLjMyODU5ODI1IEM3Ljk3OTIwODUyLDAuOTE1ODUyMDQ1IDguODc2MDI1NzgsMC45MTIwMjU3MjQgOS42MDA2NTgyOSwxLjMxODYwNDY2IFogTTEzLjYzNTY1ODMsNi43ODg0Mjg3MyBMOC45OTAyNzM2OSw5LjM2NDU1Mzc2IEw4Ljk5MDI3MzY5LDEzLjU4MDczNzcgTDEwLjkyNDExOTgsMTIuNDQ4MTMxIEwxMC45MjQxMTk4LDEwLjE3NDAzNDQgTDEzLjYzNTY1ODMsOC43NDkzOTI4NiBMMTMuNjM1NjU4Myw2Ljc4ODQyODczIFogTTMuMzEyMTk2OCw2Ljc4ODQyODczIEwzLjMxMjE5NjgsOC43NDA1MDk2NyBMNi4wNTE0Mjc1NiwxMC4xNzI5MjQgTDYuMDUxNDI3NTYsMTIuNDU1OTAzOCBMNy45NTc1ODEzOSwxMy41ODA3Mzc3IEw3Ljk1NzU4MTM5LDkuMzYxMjIyNTYgTDMuMzEyMTk2OCw2Ljc4ODQyODczIFogTTExLjc1NzE5NjcsNS4xMDA2MjI2OSBMOC41MzEwNDI5MSw2Ljg4NjE0MzgyIEw1LjE4ODM1MDYzLDUuMTAwNjIyNjkgTDMuODI3OTY2MDMsNS45NDY3NDY1MSBMOC41MzkxMTk4NCw4LjUyNjIwMjcyIEwxMy4yNDkxMTk4LDUuOTUwMDc3NzEgTDExLjc1NzE5NjcsNS4xMDA2MjI2OSBaJyBpZD0n5b2i54q2Jz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 16px; height: 16px; display: block;\" />\r\n        <img *ngIf=\"!svgDimesion\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTZweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTYgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuiHquWumuS5iee7tOW6puagkS3nu7TluqbnrqHnkIY8L3RpdGxlPjxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPjxnIGlkPScx44CB57u05bqm6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDIt5p+l6K+iVUnorr7orqEnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC00ODYuMDAwMDAwLCAtMTk1LjAwMDAwMCknIGZpbGw9JyM1OEExRkUnIGZpbGwtcnVsZT0nbm9uemVybyc+PGcgaWQ9J3NodWF4aW4nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDQ4NS4wMDAwMDAsIDE5My4wMDAwMDApJz48ZyBpZD0n6Ieq5a6a5LmJ57u05bqm5qCRLee7tOW6pueuoeeQhicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDEuMDAwMDAwKSc+PHBhdGggZD0nTTkuNjAwNjU4MjksMS4zMTg2MDQ2NiBMMTQuODU5ODg5LDQuMjcxMTU0ODUgQzE1LjU2ODU0LDQuNjY5MTA1NDkgMTYuMDA0MzM3Myw1LjM5OTIyODgxIDE2LjAwNDUwNDQsNi4xODg4MTM0MyBMMTYuMDA0NTA0NCwxMS44NDI5NjM3IEMxNi4wMDQ3NDc3LDEyLjYzMjk0NDggMTUuNTY4ODk1OSwxMy4zNjM1ODIyIDE0Ljg1OTg4OSwxMy43NjE3MzI3IEw5LjYwMDY1ODI5LDE2LjcxNDI4MjggQzguODc1NTI1NTYsMTcuMTIwOTU2NyA3Ljk3ODEzMzA5LDE3LjExNjcwNDYgNy4yNTcxOTY3NywxNi43MDMxNzg5IEwyLjEzMDY1ODM0LDEzLjc2NTA2MzkgQzEuNDMyMjkzNTYsMTMuMzY0NDc2MiAxLjAwNDQ5MjY3LDEyLjYzOTc5NjYgMS4wMDQ1MDQ1MSwxMS44NTczOTg5IEwxLjAwNDUwNDUxLDYuMTc1NDg4NjQgQzEuMDA0NDkyNjgsNS4zOTMwOTA5NSAxLjQzMjI5MzU3LDQuNjY4NDExMjggMi4xMzA2NTgzNCw0LjI2NzgyMzY1IEw3LjI1ODM1MDYyLDEuMzI4NTk4MjUgQzcuOTc5MjA4NTIsMC45MTU4NTIwNDUgOC44NzYwMjU3OCwwLjkxMjAyNTcyNCA5LjYwMDY1ODI5LDEuMzE4NjA0NjYgWiBNMTMuNjM1NjU4Myw2Ljc4ODQyODczIEw4Ljk5MDI3MzY5LDkuMzY0NTUzNzYgTDguOTkwMjczNjksMTMuNTgwNzM3NyBMMTAuOTI0MTE5OCwxMi40NDgxMzEgTDEwLjkyNDExOTgsMTAuMTc0MDM0NCBMMTMuNjM1NjU4Myw4Ljc0OTM5Mjg2IEwxMy42MzU2NTgzLDYuNzg4NDI4NzMgWiBNMy4zMTIxOTY4LDYuNzg4NDI4NzMgTDMuMzEyMTk2OCw4Ljc0MDUwOTY3IEw2LjA1MTQyNzU2LDEwLjE3MjkyNCBMNi4wNTE0Mjc1NiwxMi40NTU5MDM4IEw3Ljk1NzU4MTM5LDEzLjU4MDczNzcgTDcuOTU3NTgxMzksOS4zNjEyMjI1NiBMMy4zMTIxOTY4LDYuNzg4NDI4NzMgWiBNMTEuNzU3MTk2Nyw1LjEwMDYyMjY5IEw4LjUzMTA0MjkxLDYuODg2MTQzODIgTDUuMTg4MzUwNjMsNS4xMDA2MjI2OSBMMy44Mjc5NjYwMyw1Ljk0Njc0NjUxIEw4LjUzOTExOTg0LDguNTI2MjAyNzIgTDEzLjI0OTExOTgsNS45NTAwNzc3MSBMMTEuNzU3MTk2Nyw1LjEwMDYyMjY5IFonIGlkPSflvaLnirYnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.dimensionSetting')}}</span>\r\n    </button>\r\n    <button *ngIf=\"controlType!=='charts' && controlType!=='crosstab' && showClearSort\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-clearSort\"\r\n      (click)=\"handleClearSort()\">\r\n      <span class=\"f-icon f-icon-delete font-color\"></span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.btnClearSort')}}</span>\r\n      <!-- <span class=\"f-icon f-icon-reload-sm\" role=\"presentation\"></span> -->\r\n    </button>\r\n    <button *ngIf=\"showClearCache\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-clearcache\"\r\n      (click)=\"handleClearCache()\" (mouseenter)=\"handleHover(3, 0)\" (mouseleave)=\"handleHover(3, 1)\">\r\n      <span class=\"f-icon\" role=\"presentation\">\r\n        <img *ngIf=\"svgClearCache\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTNweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTMgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPue8lue7hCAyMDwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDHln7rmnKzmn6Xor6It5bi46KeE5oCBJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtNDgzLjAwMDAwMCwgLTE5NS4wMDAwMDApJyBmaWxsPScjOEE5OEJFJyBmaWxsLXJ1bGU9J25vbnplcm8nPjxnIGlkPSfnvJbnu4QtMTUnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDYuMDAwMDAwLCAxODIuMDAwMDAwKSc+PGcgaWQ9J3ppeXVhbicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNDc1LjAwMDAwMCwgMTIuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0yMCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDEuMDAwMDAwKSc+PGcgaWQ9J+a4heepui0oNCknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIuMDAwMDAwLCAtMC4wMDAwMDApJz48cGF0aCBkPSdNMS4wNTQ5MjE4OCw5LjEwODA3MTQzIEwxMi41NzUwMjYsOS4xMDgwNzE0MyBDMTIuOTU1NjUxLDkuMTA4MDcxNDMgMTMuMTM0OTUzMSw4LjgyNTIxNDI5IDEyLjk3Mjg0MTEsOC40Nzk3MzIxNCBMMTEuNjEzNDkyMiw1LjU4MjI1IEMxMS40NTA3MDU3LDUuMjM2Nzg1NzEgMTEuMDA2NDI0NSw0Ljk1MzkxMDcxIDEwLjYyNTgzNTksNC45NTM5MTA3MSBMOC4yNDI3MDA1Miw0Ljk1MzkxMDcxIEw4LjI0MjcwMDUyLDAuNzA5NjI1IEM4LjI0MjcwMDUyLDAuMzI3MzAzNTcxIDcuOTMwNTgwNzMsMC4wMTQ5ODIxNDI5IDcuNTQ5OTU1NzMsMC4wMTQ5ODIxNDI5IEw2LjE2Mzc1NTIxLDAuMDE0OTgyMTQyOSBDNS43ODI0OTIxOSwwLjAxNDk4MjE0MjkgNS40NzAzNzI0LDAuMzI3MjY3ODU3IDUuNDcwMzcyNCwwLjcwOTYyNSBMNS40NzAzNzI0LDQuOTUzOTEwNzEgTDMuMDA0MDc1NTIsNC45NTM5MTA3MSBDMi42MjI3OTQyNyw0Ljk1MzkxMDcxIDIuMTc4NTEzMDIsNS4yMzc0MTA3MSAyLjAxNjMwOTksNS41ODIyNSBMMC42NTcxNDMyMjksOC40Nzk3MzIxNCBDMC40OTQzNTY3NzEsOC44MjUyMzIxNCAwLjY3MzY3NzA4Myw5LjEwODA3MTQzIDEuMDU0OTIxODgsOS4xMDgwNzE0MyBNMTIuMjUwNjAxNiwxMC4xMzY0NjQzIEwxLjYzNDQ4MTc3LDEwLjEzNjQ2NDMgQzEuNjkxOTc2NTYsMTEuMjA3ODM5MyAxLjY2NzQ3NjU2LDEyLjQ5NzA4OTMgMC43ODA3NzM0MzgsMTMuMjYyMjMyMSBDLTAuNDYwOTc5MTY3LDE0LjMzMjk2NDMgLTAuMDQyMzI4MTI1LDE1LjUwNDk0NjQgMC44MzgzNDExNDYsMTUuOTY4ODkyOSBMMi42NDA1ODU5NCwxNS45Njg4OTI5IEMyLjgxODA4MzMzLDE1LjcyNTgzOTMgMy43OTU0MjE4OCwxNC4zMzc5Mjg2IDQuMDgyNDAzNjUsMTIuOTM1MTYwNyBDNC4xMjcxMTk3OSwxMi42NDQzMjE0IDQuMTU0MDYyNSwxMi40NTE1ODkzIDQuMTU0MDYyNSwxMi40NTE1ODkzIEM0LjE0MTg0ODk2LDEyLjYxMTc4NTcgNC4xMTU0NzEzNSwxMi43NzMxNjA3IDQuMDgyNDAzNjUsMTIuOTM1MTYwNyBDMy45NDUzNTY3NywxMy44MjczNzUgMy42Mzg3Nzg2NSwxNS42NjU3NSAzLjQxNTM5ODQ0LDE1Ljk2ODg5MjkgTDQuNzE5NTEzMDIsMTUuOTY4ODkyOSBDNC44OTcwMjg2NSwxNS43MjU4MzkzIDUuODc0MzY3MTksMTQuMzM3OTI4NiA2LjE2MTMzMDczLDEyLjkzNTE2MDcgQzYuMTg2MTkzNTgsMTIuNzc0MDgzMyA2LjIxMDI3NDU4LDEyLjYxMjg5MSA2LjIzMzU3MjkyLDEyLjQ1MTU4OTMgQzYuMjIwNzAzMTMsMTIuNjExNzg1NyA2LjE5NDM4MDIxLDEyLjc3MzE2MDcgNi4xNjEzMzA3MywxMi45MzUxNjA3IEM2LjAyMzYyNzYsMTMuODI3Mzc1IDUuNzE3NjE0NTgsMTUuNjY1NzUgNS40OTM2NjkyNywxNS45Njg4OTI5IEw3LjEzNzQ0NzkyLDE1Ljk2ODg5MjkgQzcuMzE0OTYzNTQsMTUuNzI1ODM5MyA4LjI5MjMwMjA4LDE0LjMzNzkyODYgOC41NzkyNjU2MywxMi45MzUxNjA3IEM4LjYyMzk4MTc3LDEyLjY0NDMyMTQgOC42NTE1MDc4MSwxMi40NTE1ODkzIDguNjUxNTA3ODEsMTIuNDUxNTg5MyBDOC42Mzg2MTk3OSwxMi42MTE3ODU3IDguNjEyMzE1MSwxMi43NzMxNjA3IDguNTc5MjY1NjMsMTIuOTM1MTYwNyBDOC40NDE2NTM2NSwxMy44MjczNzUgOC4xMzU2NDA2MywxNS42NjU3NSA3LjkxMTYwNDE3LDE1Ljk2ODg5MjkgTDkuNTYyMTI3NiwxNS45Njg4OTI5IEM5LjczOTU3MDMxLDE1LjcyNTgzOTMgMTAuNzE2OTgxOCwxNC4zMzc5Mjg2IDExLjAwMzk2MzUsMTIuOTM1MTYwNyBDMTEuMDQ4Njc5NywxMi42NDQzMjE0IDExLjA3NjE4NzUsMTIuNDUxNTg5MyAxMS4wNzYxODc1LDEyLjQ1MTU4OTMgQzExLjA2MzMxNzcsMTIuNjExNzg1NyAxMS4wMzcwMTMsMTIuNzczMTYwNyAxMS4wMDM5NjM1LDEyLjkzNTE2MDcgQzEwLjg2NjI2MDQsMTMuODI3Mzc1IDEwLjU1OTY4MjMsMTUuNjY1NzUgMTAuMzM2MzAyMSwxNS45Njg4OTI5IEwxMS45OTY2ODc1LDE1Ljk2ODg5MjkgQzExLjk5NjY4NzUsMTUuOTY4ODkyOSAxMy4wOTE0NTgzLDE1LjU3NDI2NzkgMTIuOTIwNjg3NSwxNC4zMDQxNjA3IEMxMi42NzY1OTksMTIuNDkyNzg1NyAxMi41NzkyNTUyLDExLjQ4NTg1NzEgMTIuMjUwNjAxNiwxMC4xMzY0NjQzJyBpZD0n5b2i54q2Jz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 16px; height: 16px; display: block;\" />\r\n        <img *ngIf=\"!svgClearCache\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTNweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTMgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPue8lue7hCAyMDwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDPln7rmnKzmn6Xor6It5Zu+5qCH6YCJ5Lit6aKc6Imy5Y+Y5YyWJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtNDgzLjAwMDAwMCwgLTE5NS4wMDAwMDApJyBmaWxsPScjNThBMUZFJyBmaWxsLXJ1bGU9J25vbnplcm8nPjxnIGlkPSfnvJbnu4QtMTUnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDYuMDAwMDAwLCAxODIuMDAwMDAwKSc+PGcgaWQ9J3ppeXVhbicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNDc1LjAwMDAwMCwgMTIuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0yMCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDEuMDAwMDAwKSc+PGcgaWQ9J+a4heepui0oNCknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIuMDAwMDAwLCAtMC4wMDAwMDApJz48cGF0aCBkPSdNMS4wNTQ5MjE4Nyw5LjEwODA3MTQzIEwxMi41NzUwMjYsOS4xMDgwNzE0MyBDMTIuOTU1NjUxLDkuMTA4MDcxNDMgMTMuMTM0OTUzMSw4LjgyNTIxNDI5IDEyLjk3Mjg0MTEsOC40Nzk3MzIxNCBMMTEuNjEzNDkyMiw1LjU4MjI1IEMxMS40NTA3MDU3LDUuMjM2Nzg1NzEgMTEuMDA2NDI0NSw0Ljk1MzkxMDcxIDEwLjYyNTgzNTksNC45NTM5MTA3MSBMOC4yNDI3MDA1Miw0Ljk1MzkxMDcxIEw4LjI0MjcwMDUyLDAuNzA5NjI1IEM4LjI0MjcwMDUyLDAuMzI3MzAzNTcxIDcuOTMwNTgwNzMsMC4wMTQ5ODIxNDI5IDcuNTQ5OTU1NzMsMC4wMTQ5ODIxNDI5IEw2LjE2Mzc1NTIxLDAuMDE0OTgyMTQyOSBDNS43ODI0OTIxOSwwLjAxNDk4MjE0MjkgNS40NzAzNzI0LDAuMzI3MjY3ODU3IDUuNDcwMzcyNCwwLjcwOTYyNSBMNS40NzAzNzI0LDQuOTUzOTEwNzEgTDMuMDA0MDc1NTIsNC45NTM5MTA3MSBDMi42MjI3OTQyNyw0Ljk1MzkxMDcxIDIuMTc4NTEzMDIsNS4yMzc0MTA3MSAyLjAxNjMwOTksNS41ODIyNSBMMC42NTcxNDMyMjksOC40Nzk3MzIxNCBDMC40OTQzNTY3NzEsOC44MjUyMzIxNCAwLjY3MzY3NzA4Myw5LjEwODA3MTQzIDEuMDU0OTIxODgsOS4xMDgwNzE0MyBNMTIuMjUwNjAxNiwxMC4xMzY0NjQzIEwxLjYzNDQ4MTc3LDEwLjEzNjQ2NDMgQzEuNjkxOTc2NTYsMTEuMjA3ODM5MyAxLjY2NzQ3NjU2LDEyLjQ5NzA4OTMgMC43ODA3NzM0MzgsMTMuMjYyMjMyMSBDLTAuNDYwOTc5MTY3LDE0LjMzMjk2NDMgLTAuMDQyMzI4MTI1LDE1LjUwNDk0NjQgMC44MzgzNDExNDYsMTUuOTY4ODkyOSBMMi42NDA1ODU5NCwxNS45Njg4OTI5IEMyLjgxODA4MzMzLDE1LjcyNTgzOTMgMy43OTU0MjE4OCwxNC4zMzc5Mjg2IDQuMDgyNDAzNjUsMTIuOTM1MTYwNyBDNC4xMjcxMTk3OSwxMi42NDQzMjE0IDQuMTU0MDYyNSwxMi40NTE1ODkzIDQuMTU0MDYyNSwxMi40NTE1ODkzIEM0LjE0MTg0ODk2LDEyLjYxMTc4NTcgNC4xMTU0NzEzNSwxMi43NzMxNjA3IDQuMDgyNDAzNjUsMTIuOTM1MTYwNyBDMy45NDUzNTY3NywxMy44MjczNzUgMy42Mzg3Nzg2NSwxNS42NjU3NSAzLjQxNTM5ODQ0LDE1Ljk2ODg5MjkgTDQuNzE5NTEzMDIsMTUuOTY4ODkyOSBDNC44OTcwMjg2NSwxNS43MjU4MzkzIDUuODc0MzY3MTksMTQuMzM3OTI4NiA2LjE2MTMzMDczLDEyLjkzNTE2MDcgQzYuMTg2MTkzNTgsMTIuNzc0MDgzMyA2LjIxMDI3NDU4LDEyLjYxMjg5MSA2LjIzMzU3MjkyLDEyLjQ1MTU4OTMgQzYuMjIwNzAzMTMsMTIuNjExNzg1NyA2LjE5NDM4MDIxLDEyLjc3MzE2MDcgNi4xNjEzMzA3MywxMi45MzUxNjA3IEM2LjAyMzYyNzYsMTMuODI3Mzc1IDUuNzE3NjE0NTgsMTUuNjY1NzUgNS40OTM2NjkyNywxNS45Njg4OTI5IEw3LjEzNzQ0NzkyLDE1Ljk2ODg5MjkgQzcuMzE0OTYzNTQsMTUuNzI1ODM5MyA4LjI5MjMwMjA4LDE0LjMzNzkyODYgOC41NzkyNjU2MywxMi45MzUxNjA3IEM4LjYyMzk4MTc3LDEyLjY0NDMyMTQgOC42NTE1MDc4MSwxMi40NTE1ODkzIDguNjUxNTA3ODEsMTIuNDUxNTg5MyBDOC42Mzg2MTk3OSwxMi42MTE3ODU3IDguNjEyMzE1MSwxMi43NzMxNjA3IDguNTc5MjY1NjMsMTIuOTM1MTYwNyBDOC40NDE2NTM2NSwxMy44MjczNzUgOC4xMzU2NDA2MywxNS42NjU3NSA3LjkxMTYwNDE3LDE1Ljk2ODg5MjkgTDkuNTYyMTI3NiwxNS45Njg4OTI5IEM5LjczOTU3MDMxLDE1LjcyNTgzOTMgMTAuNzE2OTgxOCwxNC4zMzc5Mjg2IDExLjAwMzk2MzUsMTIuOTM1MTYwNyBDMTEuMDQ4Njc5NywxMi42NDQzMjE0IDExLjA3NjE4NzUsMTIuNDUxNTg5MyAxMS4wNzYxODc1LDEyLjQ1MTU4OTMgQzExLjA2MzMxNzcsMTIuNjExNzg1NyAxMS4wMzcwMTMsMTIuNzczMTYwNyAxMS4wMDM5NjM1LDEyLjkzNTE2MDcgQzEwLjg2NjI2MDQsMTMuODI3Mzc1IDEwLjU1OTY4MjMsMTUuNjY1NzUgMTAuMzM2MzAyMSwxNS45Njg4OTI5IEwxMS45OTY2ODc1LDE1Ljk2ODg5MjkgQzExLjk5NjY4NzUsMTUuOTY4ODkyOSAxMy4wOTE0NTgzLDE1LjU3NDI2NzkgMTIuOTIwNjg3NSwxNC4zMDQxNjA3IEMxMi42NzY1OTksMTIuNDkyNzg1NyAxMi41NzkyNTUyLDExLjQ4NTg1NzEgMTIuMjUwNjAxNiwxMC4xMzY0NjQzJyBpZD0n5b2i54q2Jz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.clearCache')}}</span>\r\n    </button>\r\n    <button *ngIf=\"controlType==='treelist'\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-treeExpand\"\r\n      (click)=\"handleExpand(true)\">\r\n      <span class=\"f-icon f-icon-plus-outline font-color\"></span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.btnExpand')}}</span>\r\n      <!-- <span class=\"f-icon f-icon-reload-sm\" role=\"presentation\"></span> -->\r\n    </button>\r\n    <button *ngIf=\"controlType==='treelist'\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-treeExpand\"\r\n      (click)=\"handleExpand(false)\">\r\n      <span class=\"f-icon f-icon-minus-outline font-color\"></span>\r\n      <span *ngIf=\"!isMultiForm\">{{localizeService.getValue('queryFramework.btnCollapse')}}</span>\r\n      <!-- <span class=\"f-icon f-icon-reload-sm\" role=\"presentation\"></span> -->\r\n    </button>\r\n    <button *ngIf=\"formPrintOption && formPrintOption.isShowFormPrint && controlType !== 'crosstab' && controlType !== 'charts'\" class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0\" id=\"button-print\" (click)=\"print()\" (mouseenter)=\"handleHover(4, 0)\" (mouseleave)=\"handleHover(4, 1)\">\r\n      <span class=\"f-icon\" role=\"presentation\">\r\n        <img *ngIf=\"svgPrint\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTggMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPmRheWluPC90aXRsZT48ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz48ZGVmcz48cGF0aCBkPSdNMTQuNjI1LDEzLjgyMTU1IEwxNC42MjUsMTcuMSBMMy4zNzUsMTcuMSBMMy4zNzUsMTMuODIxNTUgTDAsMTMuODIxNTUgTDAsNi43MTgwOTk5OSBDMCw2LjU3MzYgMC4wNTk0LDYuNDM0MTk5OTkgMC4xNjQ3LDYuMzMxMzUgQzAuMjY4OTQyOTk5LDYuMjI5NDQxNTEgMC40MTI0Njc5MzksNi4xNzE3ODYxOSAwLjU2MjUwMDAwNyw2LjE3MTU1MDAxIEwxNy40Mzc1LDYuMTcxNTUwMDEgQzE3LjU4NjksNi4xNzE1NTAwMSAxNy43Myw2LjIyOTM1IDE3LjgzNTMsNi4zMzEzNSBDMTcuOTQwNiw2LjQzMzM1IDE4LDYuNTcyNzQ5OTkgMTgsNi43MTgwOTk5OSBMMTgsMTMuODIxNTUgTDE0LjYyNSwxMy44MjE1NSBaIE01LjYyNSwxMS42MzUzNSBMNS42MjUsMTQuOTE0NjUgTDEyLjM3NSwxNC45MTQ2NSBMMTIuMzc1LDExLjYzNDUgTDUuNjI1LDExLjYzNDUgTDUuNjI1LDExLjYzNTM1IFogTTE1LjE4NzUsMTAuMDA5MyBDMTUuNDg1NCwxMC4wMDkzIDE1Ljc3MjUsOS44OTQ1NTAwMSAxNS45ODMxLDkuNjg5NyBDMTYuMTkzNyw5LjQ4NDg0OTk5IDE2LjMxMjUsOS4yMDY4OTk5OSAxNi4zMTI1LDguOTE2MTk5OTkgQzE2LjMxMjUsOC42MjcxOTk5OSAxNi4xOTM3LDguMzQ5MjQ5OTkgMTUuOTgzMSw4LjE0MzU0OTk5IEMxNS43NzQ1NTQ0LDcuOTM5ODE0ODIgMTUuNDg3NTQzLDcuODI0NTE5NjQgMTUuMTg3NSw3LjgyMzk1MDAxIEMxNC44ODk2LDcuODIzOTUwMDEgMTQuNjAyNSw3LjkzODcwMDAxIDE0LjM5MTksOC4xNDM1NDk5OSBDMTQuMTc5NzgwMSw4LjM1MTEyMDg2IDE0LjA2MTYyNTUsOC42Mjg1NzI0NSAxNC4wNjI0OTUyLDguOTE3MDUgQzE0LjA2MjQ5NTIsOS4yMDYwNTAwMSAxNC4xODEzLDkuNDg0ODQ5OTkgMTQuMzkxOSw5LjY4OTcgQzE0LjYwMzQsOS44OTM3IDE0Ljg4OTYsMTAuMDA5MyAxNS4xODc1LDEwLjAwOTMgTDE1LjE4NzUsMTAuMDA5MyBaJyBpZD0ncGF0aC0xJz48L3BhdGg+PC9kZWZzPjxnIGlkPSfpobXpnaItMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9J+S6pOS6kuaWueahiDEt5bi46KeE5oCB5aSH5Lu9JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTYxLjAwMDAwMCwgLTE5NS4wMDAwMDApJz48ZyBpZD0n57yW57uELTE1JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg2LjAwMDAwMCwgMTgyLjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMTQnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE1NS4wMDAwMDAsIDEyLjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMTblpIfku70nPjxtYXNrIGlkPSdtYXNrLTInIGZpbGw9J3doaXRlJz48dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTEnPjwvdXNlPjwvbWFzaz48dXNlIGlkPSflvaLnirYnIGZpbGw9JyM4QTk4QkUnIHhsaW5rOmhyZWY9JyNwYXRoLTEnPjwvdXNlPjwvZz48cGF0aCBkPSdNMy44MjUsMS44IEwxNC4xNzUsMS44IEMxNC40MjM1MjgxLDEuOCAxNC42MjUsMi4wMDE0NzE4NiAxNC42MjUsMi4yNSBMMTQuNjI1LDUuMDc4NDQ5OTkgTDE0LjYyNSw1LjA3ODQ0OTk5IEwzLjM3NSw1LjA3ODQ0OTk5IEwzLjM3NSwyLjI1IEMzLjM3NSwyLjAwMTQ3MTg2IDMuNTc2NDcxODYsMS44IDMuODI1LDEuOCBaJyBpZD0n55+p5b2iJyBmaWxsPScjN0E4OUIyJyBvcGFjaXR5PScwLjUnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 16px; height: 16px; display: block;\" />\r\n        <img *ngIf=\"!svgPrint\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxN3B4JyB2aWV3Qm94PScwIDAgMTggMTcnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPmRheWluMjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGRlZnM+PHBhdGggZD0nTTE0LjYyNSwxMy44MjE1NSBMMTQuNjI1LDE3LjEgTDMuMzc1LDE3LjEgTDMuMzc1LDEzLjgyMTU1IEwwLDEzLjgyMTU1IEwwLDYuNzE4MDk5OTkgQzAsNi41NzM2IDAuMDU5NCw2LjQzNDE5OTk5IDAuMTY0Nyw2LjMzMTM1IEMwLjI2ODk0Mjk5OSw2LjIyOTQ0MTUxIDAuNDEyNDY3OTM5LDYuMTcxNzg2MTkgMC41NjI1MDAwMDcsNi4xNzE1NTAwMSBMMTcuNDM3NSw2LjE3MTU1MDAxIEMxNy41ODY5LDYuMTcxNTUwMDEgMTcuNzMsNi4yMjkzNSAxNy44MzUzLDYuMzMxMzUgQzE3Ljk0MDYsNi40MzMzNSAxOCw2LjU3Mjc0OTk5IDE4LDYuNzE4MDk5OTkgTDE4LDEzLjgyMTU1IEwxNC42MjUsMTMuODIxNTUgWiBNNS42MjUsMTEuNjM1MzUgTDUuNjI1LDE0LjkxNDY1IEwxMi4zNzUsMTQuOTE0NjUgTDEyLjM3NSwxMS42MzQ1IEw1LjYyNSwxMS42MzQ1IEw1LjYyNSwxMS42MzUzNSBaIE0xNS4xODc1LDEwLjAwOTMgQzE1LjQ4NTQsMTAuMDA5MyAxNS43NzI1LDkuODk0NTUwMDEgMTUuOTgzMSw5LjY4OTcgQzE2LjE5MzcsOS40ODQ4NDk5OSAxNi4zMTI1LDkuMjA2ODk5OTkgMTYuMzEyNSw4LjkxNjE5OTk5IEMxNi4zMTI1LDguNjI3MTk5OTkgMTYuMTkzNyw4LjM0OTI0OTk5IDE1Ljk4MzEsOC4xNDM1NDk5OSBDMTUuNzc0NTU0NCw3LjkzOTgxNDgyIDE1LjQ4NzU0Myw3LjgyNDUxOTY0IDE1LjE4NzUsNy44MjM5NTAwMSBDMTQuODg5Niw3LjgyMzk1MDAxIDE0LjYwMjUsNy45Mzg3MDAwMSAxNC4zOTE5LDguMTQzNTQ5OTkgQzE0LjE3OTc4MDEsOC4zNTExMjA4NiAxNC4wNjE2MjU1LDguNjI4NTcyNDUgMTQuMDYyNDk1Miw4LjkxNzA1IEMxNC4wNjI0OTUyLDkuMjA2MDUwMDEgMTQuMTgxMyw5LjQ4NDg0OTk5IDE0LjM5MTksOS42ODk3IEMxNC42MDM0LDkuODkzNyAxNC44ODk2LDEwLjAwOTMgMTUuMTg3NSwxMC4wMDkzIEwxNS4xODc1LDEwLjAwOTMgWicgaWQ9J3BhdGgtMSc+PC9wYXRoPjwvZGVmcz48ZyBpZD0n6aG16Z2iLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPjxnIGlkPSflm77moIfpgInkuK3popzoibLliIflm77lpIfku70nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xNjEuMDAwMDAwLCAtMTk1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMTUnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDYuMDAwMDAwLCAxODIuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0xNCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTU1LjAwMDAwMCwgMTIuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0xNuWkh+S7vSc+PG1hc2sgaWQ9J21hc2stMicgZmlsbD0nd2hpdGUnPjx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMSc+PC91c2U+PC9tYXNrPjx1c2UgaWQ9J+W9oueKticgZmlsbD0nIzU4QTFGRScgeGxpbms6aHJlZj0nI3BhdGgtMSc+PC91c2U+PC9nPjxwYXRoIGQ9J00zLjgyNSwxLjggTDE0LjE3NSwxLjggQzE0LjQyMzUyODEsMS44IDE0LjYyNSwyLjAwMTQ3MTg2IDE0LjYyNSwyLjI1IEwxNC42MjUsNS4wNzg0NDk5OSBMMTQuNjI1LDUuMDc4NDQ5OTkgTDMuMzc1LDUuMDc4NDQ5OTkgTDMuMzc1LDIuMjUgQzMuMzc1LDIuMDAxNDcxODYgMy41NzY0NzE4NiwxLjggMy44MjUsMS44IFonIGlkPSfnn6nlvaInIGZpbGw9JyM1OEExRkUnIG9wYWNpdHk9JzAuNSc+PC9wYXRoPjwvZz48L2c+PC9nPjwvZz48L3N2Zz4=\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n      <span *ngIf=\"!isMultiForm\">&nbsp;{{localizeService.getValue('queryFramework.btnPrintForm')}}</span>\r\n    </button>\r\n    <!-- <paras-mapping [queryId]=\"queryId\"  [qoManagerCode]=\"qoManagerCode\" [queryRelativeUrl]=\"queryRelativeUrl\" [isMultiForm]=\"isMultiForm\" *ngIf=\"false\"></paras-mapping> -->\r\n    <div class=\"dropdown\" fDropdown *ngIf=\"isMultiForm && inputTemplate\">\r\n      <button class=\"btn f-rt-btn f-btn-ml btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\r\n        fDropdownToggle (click)=\"isClickShowMore=!isClickShowMore\">\r\n        <span class=\"f-icon f-icon-more-vertical\" role=\"presentation\"></span>\r\n      </button>\r\n      <div class=\"dropdown-menu\" fDropdownMenu *ngIf=\"isClickShowMore\">\r\n        <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"!isMultiForm\">\r\n      <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\r\n    </div>\r\n  </div>\r\n  <query-framework-pagination *ngIf=\"controlType!='charts' && controlType!='crosstab' && !isMultiForm \"\r\n    [pageInfo]=\"pageInfo\" [localizePageInfo]=\"localizePageInfo\" (pageChange)=\"pageChange.emit($event)\">\r\n  </query-framework-pagination>\r\n</div>\r\n<!-- <condition-dialog [queryId]=\"queryId\"></condition-dialog> -->\r\n",
                    styles: [".font-color{color:#8a98be!important}"]
                }] }
    ];
    /** @nocollapse */
    QueryFrameworkToolbarComponent.ctorParameters = function () { return [
        { type: CloudprintService },
        { type: CacheService },
        { type: Injector, decorators: [{ type: Optional }] }
    ]; };
    QueryFrameworkToolbarComponent.propDecorators = {
        queryId: [{ type: Input }],
        groupType: [{ type: Input }],
        queryName: [{ type: Input }],
        controlType: [{ type: Input }],
        isMultiForm: [{ type: Input }],
        schemaId: [{ type: Input }],
        schemaInfo: [{ type: Input }],
        colList: [{ type: Input }],
        pageInfo: [{ type: Input }],
        isShowToolbar: [{ type: Input }],
        queryRelativeUrl: [{ type: Input }],
        qoManagerCode: [{ type: Input }],
        conditionExpression: [{ type: Input }],
        schemaSelected: [{ type: Output }],
        dialogBeforeClose: [{ type: Output }],
        pageChange: [{ type: Output }],
        exportExcel: [{ type: Output }],
        printIntegration: [{ type: Output }],
        printPreview: [{ type: Output }],
        refreshEvent: [{ type: Output }],
        filterCondition: [{ type: Output }],
        clearCache: [{ type: Output }],
        expendCollapseLevel: [{ type: Output }],
        clearSort: [{ type: Output }],
        inputTemplate: [{ type: Input }],
        qoId: [{ type: Input }],
        voId: [{ type: Input }],
        qdpView: [{ type: Input }],
        templateType: [{ type: Input }],
        showSchemaManager: [{ type: Input }],
        showExport: [{ type: Input }],
        showReFresh: [{ type: Input }],
        showFilter: [{ type: Input }],
        showPrint: [{ type: Input }],
        showClearSort: [{ type: Input }],
        showClearCache: [{ type: Input }],
        showPreSchema: [{ type: Input }],
        formPrintOption: [{ type: Input }],
        paginationComponent: [{ type: ViewChild, args: [QueryFrameworkPaginationComponent,] }],
        conditionDialog: [{ type: Input }]
    };
    return QueryFrameworkToolbarComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var QueryFrameworkLayoutComponent = /** @class */ (function () {
    function QueryFrameworkLayoutComponent(schemaService, renderService, filter, filterService, parasMappingManagerService) {
        var _this = this;
        this.schemaService = schemaService;
        this.renderService = renderService;
        this.filter = filter;
        this.filterService = filterService;
        this.parasMappingManagerService = parasMappingManagerService;
        this.isShowToolbar = true;
        this.isMultiForm = false; // 是否嵌入式表单
        this.isInit = true;
        this.toolbarOption = {
            showPreSchema: true,
            showSchemaManager: true,
            showExport: true,
            showReFresh: true,
            showFilter: true,
            showPrint: true,
            showClearSort: true,
            showClearCache: true
        };
        this.toolBarEvent = 'toolBarEvent' + EventBus.guid();
        this.contentSizeChange = new EventEmitter();
        this.formPrintOption = {
            isShowFormPrint: false,
            printBEId: '',
            printFormIdField: ''
        };
        this.size = {
            height: '500px',
            width: '300px'
        };
        this.pageInfo = {};
        this.pageIndex = 1;
        this.co = {
            NodeType: 'QueryNode',
            IsBe: true,
            ContainElements: [],
            Code: 'QueryNode',
            Name: 'QueryNdoe',
            BizEntityID: EventBus.guid()
        };
        this.subscriptions = [];
        /** @type {?} */
        var self = this;
        this.tabId = RtfServices.getTabId(this.queryId);
        this.subscriptions = [];
        this.subscriptions.push(self.schemaService.schemaInfo.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            try {
                if (value) {
                    /** @type {?} */
                    var schemaInfoAll = Object.assign({}, value);
                    if (schemaInfoAll.schemaList && schemaInfoAll.schemaList[_this.queryId]) {
                        schemaInfoAll.schemaList = schemaInfoAll.schemaList[_this.queryId];
                        if (!self.schemaId) {
                            if (schemaInfoAll.isDefaultSchema && schemaInfoAll.isDefaultSchema.id) {
                                self.initColListData(schemaInfoAll.isDefaultSchema.schemaValue.columnOption.colList);
                            }
                        }
                        else if (self.schemaId !== '1' && self.schemaId !== 'prefab' && self.schemaId !== 'public_schema' && self.schemaId !== 'person_schema') {
                            self.initColListData(schemaInfoAll.schemaList[self.schemaId].schemaValue.columnOption.colList);
                        }
                    }
                    else {
                        schemaInfoAll.schemaList = null;
                        self.initColListData(schemaInfoAll.preSchema.schemaValue.columnOption.colList);
                    }
                    self.schemaInfo = schemaInfoAll;
                }
            }
            catch (e) {
                // console.log(e); 
            }
        })));
        this.subscriptions.push(self.schemaService.colList.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            self.colList = value;
            if (value && value.length) {
                _this.initColListData(value, 'col');
            }
        })));
        // 如果有筛选方案
        if (this.filterService && this.filterService.isFilterQDP) {
            // this.filterService.isFilterQDP.observers = [];
            this.subscriptions.push(self.filterService.isFilterQDP.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    if (data) {
                        if (self.toolbarComponent && self.toolbarComponent.paginationComponent) {
                            self.toolbarComponent.paginationComponent.initPageInfo();
                            self.pageIndex = self.toolbarComponent.paginationComponent.pagination.pageIndex = 1;
                            self.pageInfo = self.toolbarComponent.paginationComponent.pagination;
                        }
                        self.refresh();
                    }
                }));
            })));
        }
    }
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.getQdpView = /**
     * @return {?}
     */
    function () {
        if (this.qdpView) {
            return this.qdpView;
        }
        else if (QDPCacheUtil.getCache(this.tabId + this.queryId + this.controlType + 'qdpview')) {
            return QDPCacheUtil.getCache(this.tabId + this.queryId + this.controlType + 'qdpview');
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.getCharts = /**
     * @return {?}
     */
    function () {
        if (this.charts) {
            return this.charts;
        }
        else if (QDPCacheUtil.getCache(this.tabId + this.queryId + 'lcp-charts')) {
            return QDPCacheUtil.getCache(this.tabId + this.queryId + 'lcp-charts');
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.getFormDatasource = /**
     * @return {?}
     */
    function () {
        if (this.formdatasource) {
            return this.formdatasource;
        }
        else if (QDPCacheUtil.getCache(this.tabId + this.queryId + 'form-charts')) {
            return QDPCacheUtil.getCache(this.tabId + this.queryId + 'form-charts');
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.getConditionDialog = /**
     * @return {?}
     */
    function () {
        if (this.conditionDialog) {
            return this.conditionDialog;
        }
        else if (QDPCacheUtil.getCache(this.tabId + 'advanceTemplate-condition-dialog')) {
            return QDPCacheUtil.getCache(this.tabId + 'advanceTemplate-condition-dialog');
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        if (this.subscriptions && this.subscriptions.length) {
            try {
                for (var _b = __values(this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var subscription = _c.value;
                    subscription.unsubscribe();
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        if (this.controlType !== 'crosstab') {
            this.subscriptions.push(self.schemaService.pageInfoChange.subscribe((/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                self.pageInfo = value;
            })));
        }
        // if (this.qoId) {
        if (this.isInit == true) {
            this.subscriptions.push(self.filterService.getFilter(self.qoManagerCode ? self.qoManagerCode : self.queryId, self.queryId, self.queryRelativeUrl, 1, this.groupType).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (data) {
                    self.conditionExpression = JSON.stringify(data.filter);
                }
            })));
        }
        // this.subscriptions.push(self.parasMappingManagerService.getMetaDataInfoById(self.qoId).subscribe(voInfo => {
        //   if (voInfo) {
        //     self.co = JSON.parse(voInfo.content).QueryNode;
        //   }
        // }));
        // }
        if (this.isMultiForm) {
            /** @type {?} */
            var divShowToolBarDom = (/** @type {?} */ (document.getElementById(this.toolBarEvent)));
            divShowToolBarDom.addEventListener('mouseover', (/**
             * @return {?}
             */
            function () {
                _this.isShowToolbar = true;
            }));
            divShowToolBarDom.addEventListener('mouseout', (/**
             * @return {?}
             */
            function () {
                _this.isShowToolbar = false;
            }));
        }
    };
    /**
     * @private
     * @param {?} newValue
     * @param {?=} type
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.initColListData = /**
     * @private
     * @param {?} newValue
     * @param {?=} type
     * @return {?}
     */
    function (newValue, type) {
        var _this = this;
        newValue.forEach((/**
         * @param {?} col
         * @return {?}
         */
        function (col) {
            _this.recursiveInitColListData(null, col, type);
        }));
    };
    /**
     * @private
     * @param {?} children
     * @param {?} col
     * @param {?=} type
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.recursiveInitColListData = /**
     * @private
     * @param {?} children
     * @param {?} col
     * @param {?=} type
     * @return {?}
     */
    function (children, col, type) {
        var _this = this;
        if (col) {
            /** @type {?} */
            var index = this.co.ContainElements.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.Code === col.bindField; }));
            if (index < 0) {
                /** @type {?} */
                var node = {};
                node['ID'] = EventBus.guid();
                node['Code'] = col.bindField;
                node['LabelID'] = col.bindField;
                node['MDataType'] = this.getDataType(col.type);
                node['NodeType'] = 'QueryProperty';
                node['Name'] = col.name;
                this.co.ContainElements.push(node);
            }
            else if (type !== 'col') {
                this.co.ContainElements[index]['Name'] = col.name;
            }
            if (col.childList && col.childList.length) {
                this.recursiveInitColListData(col.childList, null);
            }
        }
        else {
            children.forEach((/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                /** @type {?} */
                var index = _this.co.ContainElements.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.Code === c.bindField; }));
                if (index < 0) {
                    /** @type {?} */
                    var node = {};
                    node['ID'] = EventBus.guid();
                    node['Code'] = c.bindField;
                    node['LabelID'] = c.bindField;
                    node['MDataType'] = _this.getDataType(c.type);
                    node['NodeType'] = 'QueryProperty';
                    node['Name'] = c.name;
                    _this.co.ContainElements.push(node);
                }
                else if (type !== 'col') {
                    _this.co.ContainElements[index]['Name'] = c.name;
                }
                if (c.childList && c.childList.length) {
                    _this.recursiveInitColListData(c.childList, null);
                }
            }));
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                this.tabId = RtfServices.getTabId(newValue);
                switch (changeName) {
                    case 'queryId':
                        if (newValue) {
                            QDPCacheUtil.setCache(this.tabId + 'queryId', newValue);
                        }
                        break;
                    case 'qoManagerCode':
                        if (newValue) {
                            QDPCacheUtil.setCache(this.tabId + 'qoManagerCode', newValue);
                        }
                        break;
                    case 'controlType':
                        if (newValue) {
                            QDPCacheUtil.setCache(this.tabId + 'controlType', newValue);
                        }
                        break;
                    case 'queryRelativeUrl':
                        if (newValue) {
                            QDPCacheUtil.setCache(this.tabId + 'queryRelativeUrl', newValue);
                        }
                        break;
                    case 'voId':
                        if (newValue) {
                            QDPCacheUtil.setCache(this.tabId + 'voId', newValue);
                        }
                        break;
                }
            }
        }
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        this.subscriptions.push(self.getQdpView().sheetChanged.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            self.groupType = value;
        })));
        if (this.getConditionDialog()) { // 生成型高级查询表单分支
            this.subscriptions.push(self.getConditionDialog().queryEvent.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (data === 1) {
                    self.getQdpView().initQdpView();
                }
                else if (data > 1) {
                    self.refresh();
                }
            })));
            this.subscriptions.push(self.getConditionDialog().dialogInitEvent.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (self.templateType === 'qdpAdvancedTemplate') {
                    self.getConditionDialog().handleDialogShow();
                }
            })));
        }
        else { // 解析型高级查询表单分支
            EventBus.register(this.tabId + 'advanceTemplate-condition-dialog-queryEvent', (/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (data === 1) {
                    self.getQdpView().initQdpView();
                }
                else if (data > 1) {
                    self.refresh();
                }
            }), this.tabId);
            EventBus.register(this.tabId + 'advanceTemplate-condition-dialog-dialogInitEvent', (/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (self.templateType === 'qdpAdvancedTemplate') {
                    self.getConditionDialog().handleDialogShow();
                }
            }), this.tabId);
        }
    };
    /**
     * @param {?} id
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.handleSchemaSelected = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        this.schemaId = id;
        if (this.controlType !== 'charts') {
            if (this.getQdpView()) {
                this.getQdpView().initSpread(this.queryId, id, this.controlType, this.qoManagerCode, this.pageIndex, this.queryRelativeUrl, this.conditionExpression, this.groupType, this.voId, null, true);
            }
        }
        else {
            if (this.getCharts()) {
                this.getCharts().render(id, this.getChartsOption(id), '', this.conditionExpression);
            }
            else if (this.getFormDatasource()) {
                this.getFormDatasource().charts.setOption(this.getChartsOption(this.schemaId));
            }
        }
        this.pageIndex = 1;
    };
    /**
     * @param {?} id
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.handleBeforeClose = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        this.schemaId = id;
        if (this.controlType !== 'charts') {
            if (this.getQdpView()) {
                this.getQdpView().initSpread(this.queryId, id, this.controlType, this.qoManagerCode, this.pageIndex, this.queryRelativeUrl, this.conditionExpression, this.groupType, this.voId, null, true);
            }
        }
        else {
            if (this.getCharts()) {
                this.getCharts().render(id, this.getChartsOption(id), '', this.conditionExpression);
            }
            else if (this.getFormDatasource()) {
                this.getFormDatasource().charts.setOption(this.getChartsOption(id));
            }
        }
        this.pageIndex = this.pageIndex ? this.pageIndex : 1;
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.refresh = /**
     * @return {?}
     */
    function () {
        if (this.controlType !== 'charts') {
            if (this.getQdpView()) {
                this.getQdpView().pageIndex = this.pageIndex;
                this.getQdpView().initSpread(this.queryId, this.schemaId, this.controlType, this.qoManagerCode, this.pageIndex, this.queryRelativeUrl, this.conditionExpression, this.groupType, this.voId);
            }
        }
        else {
            if (this.getCharts()) {
                this.getCharts().render(this.schemaId, this.getChartsOption(this.schemaId), '', this.conditionExpression);
            }
            else if (this.getFormDatasource()) {
                this.getFormDatasource().charts.setOption(this.getChartsOption(this.schemaId));
            }
        }
        this.pageIndex = this.pageIndex ? this.pageIndex : 1;
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.clearCache = /**
     * @return {?}
     */
    function () {
        this.renderService.clearCache(this.queryId, this.schemaId, this.controlType, this.qoManagerCode, this.queryRelativeUrl, this.conditionExpression, this.groupType, this.voId);
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.clearSort = /**
     * @return {?}
     */
    function () {
        this.getQdpView().handleClearSort();
    };
    /**
     * @param {?} pageInfo
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.handlePageChange = /**
     * @param {?} pageInfo
     * @return {?}
     */
    function (pageInfo) {
        this.pageIndex = pageInfo.pageIndex;
        if (this.controlType !== 'crosstab') {
            this.getQdpView().pageIndex = this.pageIndex;
            this.getQdpView().initSpread(this.queryId, this.schemaId, this.controlType, this.qoManagerCode, this.pageIndex, this.queryRelativeUrl, this.conditionExpression, this.groupType, this.voId);
        }
        else {
            this.getQdpView().handleCrosstabPageChange(this.pageIndex, pageInfo.pageSize);
        }
    };
    /**
     * @param {?} eventData
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.handleExportExcel = /**
     * @param {?} eventData
     * @return {?}
     */
    function (eventData) {
        this.getQdpView().exportExcel(this.queryId, this.schemaId, this.controlType, this.pageIndex, this.qoManagerCode, this.queryRelativeUrl, this.conditionExpression, this.groupType, this.voId, this.pageInfo.totalCount, eventData);
    };
    /**
     * @param {?} eventData
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.pdfExportEvent = /**
     * @param {?} eventData
     * @return {?}
     */
    function (eventData) {
        this.getQdpView().pdfExportEvent(this.queryId, this.schemaId, this.controlType, this.qoManagerCode, eventData, this.queryRelativeUrl, this.conditionExpression, this.pageIndex, this.groupType, this.voId);
    };
    /**
     * @param {?} eventData
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.printPreview = /**
     * @param {?} eventData
     * @return {?}
     */
    function (eventData) {
        this.getQdpView().printPreView(this.queryId, this.schemaId, this.controlType, this.qoManagerCode, eventData, this.queryRelativeUrl, this.conditionExpression, this.pageIndex, this.groupType, this.voId);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.size.height = event.newHeight + 'px';
        this.size.width = (event.newWidth ? (event.newWidth - 15) : 0) + 'px';
        this.contentSizeChange.emit(Object.assign({}, this.size));
    };
    /**
     * @private
     * @param {?} schemaId
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.getChartsOption = /**
     * @private
     * @param {?} schemaId
     * @return {?}
     */
    function (schemaId) {
        /** @type {?} */
        var chartsOption = {};
        if (schemaId === 'prefab') ;
        else if (this.schemaInfo && this.schemaInfo.schemaList && this.schemaInfo.schemaList[schemaId]) {
            chartsOption = Object.assign({}, this.schemaInfo.schemaList[schemaId].schemaValue.chartsStyle, this.schemaInfo.schemaList[schemaId].schemaValue.chartsData);
        }
        if (chartsOption.series && this.schemaInfo.schemaList[schemaId].schemaValue.chartsType.series.type) {
            chartsOption.series.type = this.schemaInfo.schemaList[schemaId].schemaValue.chartsType.series.type;
            if (chartsOption.series.type !== 'line1') {
                delete chartsOption.series.areaStyle;
            }
            else {
                chartsOption.series.areaStyle = {};
            }
        }
        return chartsOption;
    };
    /**
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.filterCondition = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        if (this.co && this.co.ContainElements && this.co.ContainElements.length) {
            this.filter.addCommonObject(this.co);
            this.filter.addInjectedEntity(this.co.Code, 'CommonObject');
            // if (this.conditionExpression) {
            this.filter.addFilterCondition(this.conditionExpression);
            // }
            this.filter.buildExpression().then((/**
             * @param {?} buildedExpression
             * @return {?}
             */
            function (buildedExpression) {
                _this.conditionExpression = buildedExpression;
                if (buildedExpression) {
                    // tslint:disable-next-line:max-line-length
                    /** @type {?} */
                    var filter = { Id: EventBus.guid(), filter: buildedExpression, queryid: _this.queryId, datasourceid: _this.qoManagerCode ? _this.qoManagerCode : _this.queryId, queryType: 1 };
                    _this.subscriptions.push(self.filterService.saveFilter(filter, self.queryRelativeUrl)
                        .subscribe((/**
                     * @param {?} data
                     * @return {?}
                     */
                    function (data) { return self.refresh(); })));
                }
                else {
                    _this.subscriptions.push(self.filterService.deleteFilter(self.qoManagerCode ? self.qoManagerCode : self.queryId, self.queryId, self.queryRelativeUrl, 1).subscribe((/**
                     * @param {?} data
                     * @return {?}
                     */
                    function (data) { return self.refresh(); })));
                    _this.conditionExpression = null;
                    if (self.controlType !== 'charts') {
                        self.getQdpView().conditionExpression = null;
                    }
                }
            }));
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.expendCollapseLevel = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        /** @type {?} */
        var maxLevel = this.getQdpView().spread.getActiveSheet().rowOutlines.getMaxLevel();
        for (var index = 1; index <= maxLevel; index++) {
            this.getQdpView().spread.getActiveSheet().rowOutlines.expand(index, $event);
        }
        this.getQdpView().spread.getActiveSheet().resumePaint();
    };
    /**
     * @private
     * @param {?} type
     * @return {?}
     */
    QueryFrameworkLayoutComponent.prototype.getDataType = /**
     * @private
     * @param {?} type
     * @return {?}
     */
    function (type) {
        /** @type {?} */
        var result = 'String';
        switch (type) {
            case 'string':
                result = 'String';
                break;
            case 'text':
                result = 'Text';
                break;
            case 'integer':
            case 'int':
                result = 'Integer';
                break;
            case 'decimal':
                result = 'Decimal';
                break;
            case 'boolean':
                result = 'Boolean';
                break;
            case 'date':
                result = 'Date';
                break;
            case 'dateTime':
                result = 'DateTime';
                break;
            case 'binary':
                result = 'Binary';
                break;
            default:
                break;
        }
        return result;
    };
    QueryFrameworkLayoutComponent.decorators = [
        { type: Component, args: [{
                    selector: 'query-framework-layout',
                    template: "<div class=\"f-page f-page-is-managelist\" id =\"{{toolBarEvent}}\" >\r\n  <div class=\"f-page-header mt-1\" [ngClass]=\"{'floatShow shadow-none': isMultiForm && isShowToolbar }\"\r\n    [hidden]=\"!isShowToolbar\">\r\n    <query-framework-toolbar [formPrintOption]=\"formPrintOption\" [conditionDialog]=\"conditionDialog\" [templateType]=\"templateType\" [schemaInfo]=\"schemaInfo\" [colList]=\"colList\" [pageInfo]=\"pageInfo\" [schemaId]=\"schemaId\"\r\n      [queryId]=\"queryId\" [groupType]=\"groupType\" [queryName]=\"queryName\" [controlType]=\"controlType\" [isShowToolbar]=\"isShowToolbar\"\r\n      [isMultiForm]=\"isMultiForm\" [inputTemplate]=\"inputTemplate\" [qoManagerCode]=\"qoManagerCode\" [qdpView]=\"qdpView\" [conditionExpression]=\"conditionExpression\"\r\n      [queryRelativeUrl]=\"queryRelativeUrl\" [qoId]=\"qoId\" [voId]=\"voId\" (schemaSelected)=\"handleSchemaSelected($event)\"\r\n      (dialogBeforeClose)=\"handleBeforeClose($event)\" (pageChange)=\"handlePageChange($event)\"\r\n      (exportExcel)=\"handleExportExcel($event)\" (printIntegration)=\"pdfExportEvent($event)\" (printPreview)=\"printPreview($event)\" (refreshEvent)=\"refresh()\"\r\n      (filterCondition)=\"filterCondition()\" (clearCache)=\"clearCache()\" (clearSort)=\"clearSort()\"\r\n      (expendCollapseLevel)=\"expendCollapseLevel($event)\"\r\n      [showSchemaManager]=\"toolbarOption.showSchemaManager\"\r\n      [showExport]=\"toolbarOption.showExport\"\r\n      [showReFresh]=\"toolbarOption.showReFresh\"\r\n      [showFilter]=\"toolbarOption.showFilter\"\r\n      [showPrint]=\"toolbarOption.showPrint\"\r\n      [showClearSort]=\"toolbarOption.showClearSort\"\r\n      [showClearCache]=\"toolbarOption.showClearCache\"\r\n      [showPreSchema]=\"toolbarOption.showPreSchema\"\r\n      >\r\n    </query-framework-toolbar>\r\n  </div>\r\n  <div class=\"position-relative h-100 ml-2 mr-2 bg-white farris-overflow-y-auto\">\r\n    <div class=\"farris-form farris-card-content-bg f-utils-absolute-all f-utils-flex-column\" (resized)=\"onResized($event)\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".floatShow{position:absolute;right:2px;top:2px;z-index:1;background-color:rgba(255,255,255,.15)}"]
                }] }
    ];
    /** @nocollapse */
    QueryFrameworkLayoutComponent.ctorParameters = function () { return [
        { type: SchemaService },
        { type: RenderService },
        { type: FilterService },
        { type: FilterManagerService },
        { type: ParasMappingManagerService }
    ]; };
    QueryFrameworkLayoutComponent.propDecorators = {
        queryId: [{ type: Input }],
        groupType: [{ type: Input }],
        qoManagerCode: [{ type: Input }],
        controlType: [{ type: Input }],
        queryName: [{ type: Input }],
        isShowToolbar: [{ type: Input }],
        isMultiForm: [{ type: Input }],
        queryRelativeUrl: [{ type: Input }],
        qoId: [{ type: Input }],
        voId: [{ type: Input }],
        templateType: [{ type: Input }],
        isInit: [{ type: Input }],
        toolbarOption: [{ type: Input }],
        qdpView: [{ type: ContentChild, args: ['qdp-view',] }],
        charts: [{ type: ContentChild, args: ['lcpBindingData',] }],
        formdatasource: [{ type: ContentChild, args: ['formBindingData',] }],
        conditionDialog: [{ type: Input }],
        toolbarComponent: [{ type: ViewChild, args: [QueryFrameworkToolbarComponent,] }],
        contentSizeChange: [{ type: Output }],
        formPrintOption: [{ type: Input }],
        inputTemplate: [{ type: Input }]
    };
    return QueryFrameworkLayoutComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ExportDataComponent = /** @class */ (function () {
    function ExportDataComponent(injector) {
        this.injector = injector;
        // 是否嵌入式表单
        this.exportExcel = new EventEmitter();
        this.svgExport = true;
        this.localizeService = this.injector.get(LocalizeService);
        this.exportTitle = this.localizeService.getValue('queryFramework.exportName');
        this.exportType1 = this.localizeService.getValue('queryFramework.btnExportText');
        this.exportType2 = this.localizeService.getValue('queryFramework.btnExportValue');
    }
    /**
     * @return {?}
     */
    ExportDataComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} type
     * @param {?} state
     * @return {?}
     */
    ExportDataComponent.prototype.handleHover = /**
     * @param {?} type
     * @param {?} state
     * @return {?}
     */
    function (type, state) {
        this.svgExport = state === 1;
    };
    ExportDataComponent.decorators = [
        { type: Component, args: [{
                    selector: 'export-data',
                    template: "<div class=\"dropdown\" fDropdown>\r\n  <button class=\"btn btn-secondary btn-outline-link btn-icontext f-rt-btn f-btn-ml border-0 dropdown-toggle\" type=\"button\" id=\"dropdownMenuButtonExport\" fDropdownToggle  (mouseenter)=\"handleHover(0, 0)\" (mouseleave)=\"handleHover(0, 1)\">\r\n    <span class=\"f-icon\" role=\"presentation\">\r\n      <img *ngIf=\"svgExport\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTggMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPmRhb2NodTwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0n5Lqk5LqS5pa55qGIMS3luLjop4TmgIHlpIfku70nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0yMzUuMDAwMDAwLCAtMTk1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMTUnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDYuMDAwMDAwLCAxODIuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0xNycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjI5LjAwMDAwMCwgMTIuMDAwMDAwKSc+PGcgaWQ9J2Rhb2NodS00JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMS4wMDAwMDApJz48cGF0aCBkPSdNMTEuNDM3NTM5MSwxIEw0LjE3OCwxIEw0LjE3OCwxNC4wNjggTDE2LjE1NywxNC4wNjggTDE2LjE1Nyw0LjQ4NTI3MzE2IEwxMS40Mzc1MzkxLDQuNDg1MjczMTYgTDExLjQzNzUzOTEsMSBaIE0xNC4xNjAzODAzLDguODM1NTk1MjIgTDE0LjE2MDM4MDMsOS43MDkxNjEwMyBMMTAuNTMwMzY4MywxMi4zMjA4Njg0IEwxMC41MzAzNjgzLDEwLjU4MjcyNjggTDYuODk5OTQzMjgsMTAuNTgyNzI2OCBMNi44OTk5NDMyOCw3Ljk3MTAwMTI5IEwxMC41MzA0MDQyLDcuOTcxMDAxMjkgTDEwLjUzMDQwNDIsNi4yMjM4ODc4NyBMMTQuMTYwMzgwMyw4LjgzNTU5NTIyIFonIGlkPSflvaLnirYnIGZpbGw9JyM4QTk4QkUnIGZpbGwtcnVsZT0nbm9uemVybyc+PC9wYXRoPjxwYXRoIGQ9J00xMi44OSwxIEwxMi44OSwzLjY0MDg4NTIgTDE1LjYyMjYwNiwzLjY0MDg4NTIgTDEyLjg5LDEgWiBNMiwyLjg1NTIzNjk0IEwyLDE2LjI0NiBMMTMuNjE3MTQ5MiwxNi4yNDYgTDEzLjYxNzE0OTIsMTQuOTQ3MjM0OCBMMy4yOTY1MjMyMSwxNC45NDcyMzQ4IEwzLjI5NjUyMzIxLDIuODU1MjM2OTQgTDIsMi44NTUyMzY5NCBaJyBpZD0n5b2i54q2JyBmaWxsPScjN0E4OUIyJyBvcGFjaXR5PScwLjY5NTQ3NTI2Jz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvZz48L3N2Zz4=\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      <img *ngIf=\"!svgExport\" src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMThweCcgaGVpZ2h0PScxN3B4JyB2aWV3Qm94PScwIDAgMTggMTcnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPmRhb2NodTI8L3RpdGxlPjxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPjxnIGlkPSfpobXpnaItMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9J+Wbvuagh+mAieS4reminOiJsuWIh+WbvuWkh+S7vScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTIzNS4wMDAwMDAsIC0xOTUuMDAwMDAwKScgZmlsbD0nIzU4QTFGRSc+PGcgaWQ9J+e8lue7hC0xNScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi4wMDAwMDAsIDE4Mi4wMDAwMDApJz48ZyBpZD0n57yW57uELTE3JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMjkuMDAwMDAwLCAxMS4wMDAwMDApJz48ZyBpZD0nZGFvY2h1LTQnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMCknPjxwYXRoIGQ9J00xMS40Mzc1MzkxLDEgTDQuMTc4LDEgTDQuMTc4LDE0LjA2OCBMMTYuMTU3LDE0LjA2OCBMMTYuMTU3LDQuNDg1MjczMTYgTDExLjQzNzUzOTEsNC40ODUyNzMxNiBMMTEuNDM3NTM5MSwxIFogTTE0LjE2MDM4MDMsOC44MzU1OTUyMiBMMTQuMTYwMzgwMyw5LjcwOTE2MTAzIEwxMC41MzAzNjgzLDEyLjMyMDg2ODQgTDEwLjUzMDM2ODMsMTAuNTgyNzI2OCBMNi44OTk5NDMyOCwxMC41ODI3MjY4IEw2Ljg5OTk0MzI4LDcuOTcxMDAxMjkgTDEwLjUzMDQwNDIsNy45NzEwMDEyOSBMMTAuNTMwNDA0Miw2LjIyMzg4Nzg3IEwxNC4xNjAzODAzLDguODM1NTk1MjIgWicgaWQ9J+W9oueKticgZmlsbC1ydWxlPSdub256ZXJvJz48L3BhdGg+PHBhdGggZD0nTTEyLjg5LDEgTDEyLjg5LDMuNjQwODg1MiBMMTUuNjIyNjA2LDMuNjQwODg1MiBMMTIuODksMSBaIE0yLDIuODU1MjM2OTQgTDIsMTYuMjQ2IEwxMy42MTcxNDkyLDE2LjI0NiBMMTMuNjE3MTQ5MiwxNC45NDcyMzQ4IEwzLjI5NjUyMzIxLDE0Ljk0NzIzNDggTDMuMjk2NTIzMjEsMi44NTUyMzY5NCBMMiwyLjg1NTIzNjk0IFonIGlkPSflvaLnirYnIG9wYWNpdHk9JzAuNjk1NDc1MjYnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 16px; height: 16px; display: block;\" />\r\n    </span>\r\n    <!-- <span class=\"f-icon f-icon-download\" role=\"presentation\"></span> -->\r\n    <span *ngIf=\"!isMultiForm\">&nbsp;{{exportTitle}}</span>\r\n  </button>\r\n  <div class=\"dropdown-menu\" fDropdownMenu>\r\n    <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"exportExcel.emit('text')\">{{exportType1}}</a>\r\n    <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"exportExcel.emit('value')\">{{exportType2}}</a>\r\n  </div>\r\n</div>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ExportDataComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    ExportDataComponent.propDecorators = {
        isMultiForm: [{ type: Input }],
        exportExcel: [{ type: Output }]
    };
    return ExportDataComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var QueryFrameworkModule = /** @class */ (function () {
    function QueryFrameworkModule() {
    }
    QueryFrameworkModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        NotifyModule,
                        FDropdownDirectiveTypeModule,
                        FlexLayoutModule,
                        TreeTableModule,
                        PerfectScrollbarModule,
                        IdeCmpModule,
                        FilterConditionModule,
                        // LocalizeModule,
                        CloudPrintModule,
                        FarrisDialogModule,
                        InputGroupModule
                    ],
                    declarations: [
                        QueryFrameworkLayoutComponent,
                        QueryFrameworkToolbarComponent,
                        QueryFrameworkPaginationComponent,
                        ExportDataComponent,
                        ConditionDialogComponent,
                        ConditionManagerDialogComponent,
                        SaveasSchemaDialogComponent,
                        ConditionDialogTabComponent
                    ],
                    providers: [
                        FDropdownDirective,
                        FilterService,
                        FilterManagerService,
                        ConditionSchemaService
                    ],
                    exports: [
                        QueryFrameworkLayoutComponent,
                        QueryFrameworkToolbarComponent,
                        QueryFrameworkPaginationComponent,
                        ExportDataComponent,
                        ConditionDialogComponent,
                        ConditionManagerDialogComponent,
                        SaveasSchemaDialogComponent,
                        ConditionDialogTabComponent
                    ]
                },] }
    ];
    return QueryFrameworkModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { QueryFrameworkLayoutComponent, QueryFrameworkToolbarComponent, QueryFrameworkPaginationComponent, ExportDataComponent, ConditionDialogComponent, ConditionManagerDialogComponent, SaveasSchemaDialogComponent, ConditionDialogTabComponent, QueryFrameworkModule };

//# sourceMappingURL=qdp-query-framework.js.map