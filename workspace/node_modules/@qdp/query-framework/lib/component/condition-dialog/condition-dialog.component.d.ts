import { Injector, OnInit, OnChanges, SimpleChanges, EventEmitter, OnDestroy, QueryList, AfterViewInit } from '@angular/core';
import { DialogComponent } from '@farris/ui-dialog';
import { Repository } from '@farris/devkit';
import { SchemaService } from '@qdp/ide-cmp';
import { NotifyService } from '@farris/ui-notify';
import { ConditionSchemaService } from '@qdp/condition-schema';
import { ConditionManagerDialogComponent } from '../condition-manager-dialog/condition-manager-dialog.component';
import { SaveasSchemaDialogComponent } from '../saveas-schema-dialog/saveas-schema-dialog.component';
import { Observable, Subject } from 'rxjs';
import { CacheService } from '@ecp-caf/caf-common';
import { LcpService } from '@qdp/common';
import { FinishLoadService } from '@qdp/condition-schema';
import { ConditionDialogTabComponent } from '../condition-dialog-tab/condition-dialog-tab.component';
export declare class ConditionDialogComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit {
    private injector;
    private conditionService;
    private repository;
    private cacheService;
    private finishLoasService;
    schemaId: string;
    showFilterExpression: boolean;
    queryId: any;
    tabIndex: number;
    beforeQuery: (emptyObj?: {}) => Observable<any>;
    queryEvent: EventEmitter<any>;
    dialogInitEvent: EventEmitter<any>;
    idChanged: Subject<any>;
    farrisDialog: DialogComponent;
    conditionTabs: QueryList<ConditionDialogTabComponent>;
    getConditionTabs(): any;
    conditionManagerDialog: ConditionManagerDialogComponent;
    saveasSchemaDialogComponent: SaveasSchemaDialogComponent;
    localizeService: any;
    menuShow: boolean;
    defaultSchemaName: string;
    currentSchema: any;
    publicList: any[];
    personalList: any[];
    controlIndexChanged: number;
    queryCount: any;
    notifyService: NotifyService;
    private subscriptions;
    private closeType;
    formErrorService: any;
    Id: any;
    propertyList: any[];
    filterExpressionString: string;
    advanceFilterTab: any;
    schemaService: SchemaService;
    lcpService: LcpService;
    tabId: any;
    constructor(injector: Injector, conditionService: ConditionSchemaService, repository: Repository<any>, cacheService: CacheService, finishLoasService: FinishLoadService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    conditionDialogInit(): void;
    private initCondition;
    getPropertyList(item: any): void;
    private analysisColListData;
    private recursiveAnalysisColListData;
    private getDataType;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    handleDialogShow(): void;
    handleDialogClose(): void;
    handleSchemaManagerDialog(): void;
    handleSaveasSchemaDialog(): void;
    handleSchemaMenu(): void;
    handleInfoChanged($event: any): void;
    handleSchemaSelected($event: any): void;
    handleQueryClick(): void;
    handleSaveClick(): void;
    handlerGetEntity(): any;
    beforeOpen: () => boolean;
    handlebeforeClose: () => Observable<boolean>;
}
