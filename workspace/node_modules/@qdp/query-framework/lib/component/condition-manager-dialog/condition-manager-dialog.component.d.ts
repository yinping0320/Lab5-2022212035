import { OnInit, Injector, SimpleChanges, OnChanges } from '@angular/core';
import { DialogComponent } from '@farris/ui-dialog';
import { ConditionSchemaService } from '@qdp/condition-schema';
import { MessagerService } from '@farris/ui-messager';
import { NotifyService } from '@farris/ui-notify';
import { Subject } from 'rxjs';
export declare class ConditionManagerDialogComponent implements OnInit, OnChanges {
    private injector;
    private msgService;
    private conditionService;
    private notifyService;
    farrisDialog: DialogComponent;
    currentSchema: any;
    localizeService: any;
    expandPublic: boolean;
    expandPersonal: boolean;
    queryId: any;
    publicList: any[];
    personalList: any[];
    removeList: any[];
    motifyList: any[];
    removeListEvent: Subject<any>;
    formErrorService: any;
    constructor(injector: Injector, msgService: MessagerService, conditionService: ConditionSchemaService, notifyService: NotifyService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    handleDialogShow(): void;
    handleExpandType($event: any): void;
    handleNgModelChange(change: any, item: any): void;
    handleDeleteSchame($event: any): void;
    handleSettingDefault($event: any): void;
    handleOKClick(): void;
    clearChanges(): void;
    handleCancelClick(): void;
}
