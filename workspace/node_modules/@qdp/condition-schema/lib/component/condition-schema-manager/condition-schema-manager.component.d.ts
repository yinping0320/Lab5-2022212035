import { OnInit, Injector, OnDestroy } from '@angular/core';
import { Repository, Entity } from '@farris/devkit';
import { NotifyService } from '@farris/ui-notify';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ConditionSchemaService } from '../../service/condition-schema.service';
import { FinishLoadService } from '../../service/finish-load.service';
import { LocalizeService } from '@qdp/localize';
import { SchemaManagerService } from '@qdp/common';
import { MessagerService } from '@farris/ui-messager';
export declare class ConditionSchemaManagerComponent implements OnInit, OnDestroy {
    private repository;
    private conditionSchemaService;
    private notifyService;
    private finishLoasService;
    private injector;
    queryId: any;
    private savingManagerDiglog;
    schemaData: any[];
    bindingSchema: {
        isDefault: boolean;
        schemaName: string;
        schemaType: boolean;
        schemavalue: {};
    };
    currentSchemaName: string;
    columns: any[];
    total: number;
    editMode: string;
    pageSize: number;
    pageIndex: number;
    schemaTypeData: any;
    size: any;
    dg: DatagridComponent;
    localizeService: LocalizeService;
    colDefault: any;
    colPublic: any;
    schemaService: SchemaManagerService;
    operations: any;
    private subscriptions;
    msgService: MessagerService;
    constructor(repository: Repository<Entity>, conditionSchemaService: ConditionSchemaService, notifyService: NotifyService, finishLoasService: FinishLoadService, injector: Injector);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private gridInit;
    onResized(event: any): void;
    /**
     * 处理保存格式方案
     */
    handleSaveClick(): void;
    /**
     * 处理方案管理页面点击事件，更改默认方案
     */
    handleDefault(dataItem: any): void;
    saveDefaultSchemaHandler(): void;
    endEdit(data: any): void;
    /**
     * 处理主页选中某个条件方案事件
     * @param item 条件方案
     */
    handleDropDownItemClick(item: any): void;
    /**
     * 删除解决方案
     */
    deleteSchemerHandler(): void;
    /**
     * 判断条件方案名称是否重复
     * @param schemaName 条件方案名称
     */
    private isSchemaNameValid;
}
