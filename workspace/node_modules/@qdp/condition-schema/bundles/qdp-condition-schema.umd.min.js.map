{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@qdp/condition-schema/lib/service/condition-schema.service.ts","ng://@qdp/condition-schema/lib/service/finish-load.service.ts","ng://@qdp/condition-schema/lib/component/condition-schema-manager/condition-schema-manager.component.ts","ng://@qdp/condition-schema/lib/condition-schema.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","ConditionSchemaService","restService","sessionService","host","injector","this","uri","schemaListChange","Subject","cache","get","CacheService","prototype","getSchema","id","queryId","useCache","schemaList","of","organizationId","RtfServices","getTabId","getSchemaList","pipe","map","getDefaultSchema","self","isDefaultSchema","userId","createHeaderSessionId","data","length","forEach","schemaValue","JSON","parse","isDefault","filterCondition","schemaType","filter","schemaInfo","getSchemaListByOrgId","saveSchema","schema","_this","orgId","post","switchMap","deleteSchema","delete","deleteSchemaList","ids","Injectable","RestfulService","SessionService","Inject","args","Server_Host","Injector","decorators","type","Optional","FinishLoadService","finish","ConditionSchemaManagerComponent","repository","conditionSchemaService","notifyService","finishLoasService","bindingSchema","schemaName","schemavalue","columns","total","editMode","pageSize","pageIndex","schemaTypeData","name","size","colDefault","EventBus","guid","colPublic","operations","subscriptions","localizeService","LocalizeService","schemaService","SchemaManagerService","msgService","MessagerService","ngOnInit","defaultSchema","subscribe","schemaData","find","item","currentSchemaName","entityCollection","getAllEntities","load","gridInit","operationChange","ngOnDestroy","_b","__values","tslib_1.__values","_c","unsubscribe","enumOpts","valueField","textField","field","width","title","getValue","formatter","options","editor","EditorTypes","CHECKBOX","trueText","falseText","onResized","event","height","newHeight","newWidth","handleSaveClick","isSchemaNameValid","currentSchema","toArray","toJSON","stringify","currentDefaultSchema","success","savingManagerDiglog","close","warning","handleDefault","dataItem","saveDefaultSchemaHandler","dg","endRowEdit","endEdit","rowData","undefined","handleDropDownItemClick","deleteSchemerHandler","selectedRow","index","findIndex","refresh","schemaId","splice","info","Component","selector","template","Repository","NotifyService","Input","ViewChild","ConditionSchemaModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","FarrisDialogModule","ScrollbarModule","DatagridEditorsModule","DatagridModule","forRoot","__spread","arguments","concat","EditorProviders","FDropdownDirectiveTypeModule","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// import 'rxjs/add/operator/map';\r\nimport { Injectable, Inject, Optional, Injector } from '@angular/core';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { CacheService, SessionService } from '@ecp-caf/caf-common';\r\nimport { RestfulService, Server_Host } from '@qdp/common';\r\nimport { RtfServices } from '@qdp/common';\r\nimport { filter } from 'lodash-es';\r\n\r\n@Injectable()\r\nexport class ConditionSchemaService {\r\n  private uri = '/api/runtime/bcc/v1.0/qdpcschemamanager/';\r\n\r\n  isDefaultSchema: any;\r\n\r\n  schemaList: any;\r\n\r\n  schemaListChange = new Subject<any>();\r\n\r\n  cache: CacheService;\r\n\r\n  constructor(\r\n    private restService: RestfulService,\r\n    private sessionService: SessionService,\r\n    @Inject(Server_Host) private host: string,\r\n    @Optional() private injector: Injector) {\r\n    this.uri = this.host + this.uri;\r\n    if (this.injector) {\r\n      this.cache = this.injector.get(CacheService);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·åæå®æ¹æ¡\r\n   * @param id æ¹æ¡ID\r\n   * @param queryId æ¥è¯¢ç¼å·\r\n   */\r\n  getSchema(id: string, queryId: string, useCache?: boolean): Observable<any> {\r\n    if (useCache && this.schemaList && this.schemaList[queryId] && this.schemaList[queryId][id]) {\r\n      return of(this.schemaList[queryId][id]);\r\n    } else {\r\n      let organizationId = '';\r\n      if (this.cache) {\r\n        organizationId = this.cache.get(RtfServices.getTabId(queryId) + 'organizationId') || '';\r\n      }\r\n      const result$ = this.getSchemaList(queryId, '', organizationId);\r\n      return result$.pipe(\r\n        map(value => {\r\n          if (value && value[queryId] && value[queryId][id]) {\r\n            return value[queryId][id];\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * è·åé»è®¤æ¹æ¡\r\n   */\r\n  getDefaultSchema(queryId: string, useCache?: boolean): Observable<any> {\r\n    const self = this;\r\n    if (useCache && this.isDefaultSchema && this.isDefaultSchema[queryId] && this.isDefaultSchema[queryId].id) {\r\n      return of(this.isDefaultSchema[queryId]);\r\n    } else {\r\n      let organizationId = '';\r\n      if (this.cache) {\r\n        organizationId = this.cache.get(RtfServices.getTabId(queryId) + 'organizationId') || '';\r\n      }\r\n      const result$ = this.getSchemaList(queryId, '', organizationId);\r\n      return result$.pipe(\r\n        map(() => {\r\n          if (self.isDefaultSchema && self.isDefaultSchema[queryId] && self.isDefaultSchema[queryId].id) {\r\n            return self.isDefaultSchema[queryId];\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n  /**\r\n   * è·åæ¹æ¡åè¡¨\r\n   * @param queryId æ¥è¯¢ç¼å·\r\n   * @param userId ç¨æ·ID\r\n   * @param organizationId è¯­è¨ç±»å\r\n   */\r\n  getSchemaList(queryId: string, userId: string, organizationId: string): Observable<any> {\r\n    const self = this;\r\n    const result$ = this.restService.get(this.uri + 'getschemalist', {\r\n      queryId,\r\n      userId,\r\n      organizationId\r\n    }, this.createHeaderSessionId());\r\n\r\n    return result$.pipe(\r\n      map((data: any) => {\r\n        if (!self.schemaList) {\r\n          self.schemaList = {};\r\n        }\r\n        if (!self.isDefaultSchema) {\r\n          self.isDefaultSchema = {};\r\n        }\r\n        self.schemaList[queryId] = {};\r\n        if (data && data.length) {\r\n          data.forEach(value => {\r\n            value.schemaValue = value.schemaValue ? JSON.parse(value.schemaValue) : null;\r\n            self.schemaList[queryId][value.id] = value;\r\n            if (value.isDefault === 1) {\r\n              self.isDefaultSchema[queryId] = value;\r\n            }\r\n          });\r\n          const filterCondition: any = { schemaType: 0 };\r\n          if (!self.isDefaultSchema[queryId] || !self.isDefaultSchema[queryId].id) {\r\n            if (filter(data, filterCondition) && filter(data, filterCondition).length) {\r\n              self.isDefaultSchema[queryId] = filter(data, filterCondition)[0];\r\n            }\r\n          }\r\n          if (!self.isDefaultSchema[queryId] || !self.isDefaultSchema[queryId].id) {\r\n            filterCondition.schemaType = 1;\r\n            if (filter(data, filterCondition) && filter(data, filterCondition).length) {\r\n              self.isDefaultSchema[queryId] = filter(data, filterCondition)[0];\r\n            }\r\n          }\r\n          self.schemaListChange.next({ schemaInfo: self.schemaList, isDefaultSchema: self.isDefaultSchema });\r\n\r\n          return self.schemaList;\r\n        } else {\r\n          self.schemaListChange.next({ schemaInfo: null, isDefaultSchema: null });\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * è·åæ¹æ¡åè¡¨\r\n   * @param queryId æ¥è¯¢ç¼å·\r\n   * @param organizationId ç»ç»ID\r\n   */\r\n  getSchemaListByOrgId(queryId: string, organizationId: string): Observable<any> {\r\n    const self = this;\r\n    const result$ = this.restService.get(this.uri + 'getschemalistbyorgid', {\r\n      queryId,\r\n      organizationId\r\n    }, this.createHeaderSessionId());\r\n\r\n    return result$.pipe(\r\n      map((data: any) => {\r\n        if (!self.schemaList) {\r\n          self.schemaList = {};\r\n        }\r\n        if (!self.isDefaultSchema) {\r\n          self.isDefaultSchema = {};\r\n        }\r\n        self.schemaList[queryId] = {};\r\n        if (data && data.length) {\r\n          data.forEach(value => {\r\n            value.schemaValue = value.schemaValue ? JSON.parse(value.schemaValue) : null;\r\n            self.schemaList[queryId][value.id] = value;\r\n            if (value.isDefault === 1) {\r\n              self.isDefaultSchema[queryId] = value;\r\n            }\r\n          });\r\n          return self.schemaList;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * ä¿å­æ¹æ¡\r\n   * @param schema æ¹æ¡å®ä½\r\n   */\r\n  saveSchema(schema: any): Observable<any> {\r\n    let organizationId = '';\r\n    if (this.cache) {\r\n      organizationId = this.cache.get(RtfServices.getTabId(schema.queryId) + 'organizationId') || '';\r\n    }\r\n    if (organizationId) {\r\n      schema.orgId = organizationId;\r\n    }\r\n    const result$ = this.restService.post(this.uri + 'saveschema', schema, {}, this.createHeaderSessionId());\r\n    return result$.pipe(\r\n      switchMap(() => {\r\n        return this.getSchemaList(schema.queryId, '', organizationId);\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * å é¤æ¹æ¡\r\n   * @param id æ¹æ¡ID\r\n   * @param queryId æ¥è¯¢ç¼å·\r\n   */\r\n  deleteSchema(id: string, queryId: string): Observable<any> {\r\n    let organizationId = '';\r\n    if (this.cache) {\r\n      organizationId = this.cache.get(RtfServices.getTabId(queryId) + 'organizationId') || '';\r\n    }\r\n    const result$ = this.restService.delete(this.uri + 'deleteschema', { id }, this.createHeaderSessionId());\r\n    return result$.pipe(\r\n      map((data: any) => {\r\n        if (data === true) {\r\n          const result$1 = this.getSchemaList(queryId, '', organizationId);\r\n          return result$1.pipe(\r\n            map(value => {\r\n              if (value) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n            })\r\n          );\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * å é¤æ¹æ¡\r\n   * @param id æ¹æ¡ID\r\n   * @param queryId æ¥è¯¢ç¼å·\r\n   */\r\n  deleteSchemaList(ids: any, queryId: string): Observable<any> {\r\n    let organizationId = '';\r\n    if (this.cache) {\r\n      organizationId = this.cache.get(RtfServices.getTabId(queryId) + 'organizationId') || '';\r\n    }\r\n    const result$ = this.restService.delete(this.uri + 'deleteschemalist', { ids }, this.createHeaderSessionId());\r\n    return result$.pipe(\r\n      switchMap(() => {\r\n        return this.getSchemaList(queryId, '', organizationId);\r\n      })\r\n    );\r\n  }\r\n\r\n  private createHeaderSessionId() {\r\n    return RtfServices.createHeaderSessionId(this.sessionService);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n@Injectable()\r\nexport class FinishLoadService {\r\n    public finish: Subject<any>;\r\n    constructor() {\r\n        this.finish = new Subject<any>();\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, Optional, Injector, OnDestroy } from '@angular/core';\r\nimport { Repository, Entity } from '@farris/devkit';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ConditionSchemaService } from '../../service/condition-schema.service';\r\nimport { FinishLoadService } from '../../service/finish-load.service';\r\nimport { LocalizeService } from '@qdp/localize';\r\nimport { EventBus, SchemaManagerService } from '@qdp/common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n@Component({\r\n  selector: 'condition-schema-manager',\r\n  templateUrl: './condition-schema-manager.component.html',\r\n  styleUrls: ['./condition-schema-manager.component.css']\r\n})\r\nexport class ConditionSchemaManagerComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() public queryId: any;\r\n  @ViewChild('savingManager') private savingManagerDiglog: DialogComponent;\r\n  public schemaData: any[];\r\n  public bindingSchema = { // ç¨äºç»å®ä¿å­çé¢\r\n    isDefault: false,\r\n    schemaName: '',\r\n    schemaType: false, // 0å¬å±ï¼1æ¯ä¸ªäºº\r\n    schemavalue: {}\r\n  };\r\n  public currentSchemaName: string; // å½ååºç¨æ¹æ¡çåç§°\r\n\r\n  columns = [];\r\n  total = 0;\r\n  editMode = 'row';\r\n  pageSize = 200;\r\n  pageIndex = 1;\r\n  schemaTypeData: any = [\r\n    { name: 'å¬å±', value: 0 },\r\n    { name: 'åä½', value: 2 },\r\n    { name: 'ä¸ªäºº', value: 1 }\r\n  ];\r\n  size: any = {};\r\n  @ViewChild('dg') dg: DatagridComponent;\r\n  localizeService: LocalizeService;\r\n  colDefault: any = 'colDefault' + EventBus.guid();\r\n  colPublic: any = 'colPublic' + EventBus.guid();\r\n  schemaService: SchemaManagerService;\r\n  operations: any = {};\r\n  private subscriptions = [];\r\n  msgService: MessagerService;\r\n\r\n  constructor(\r\n    private repository: Repository<Entity>,\r\n    private conditionSchemaService: ConditionSchemaService,\r\n    private notifyService: NotifyService,\r\n    private finishLoasService: FinishLoadService,\r\n    @Optional() private injector: Injector\r\n  ) {\r\n    if (this.injector) {\r\n      this.localizeService = this.injector.get(LocalizeService);\r\n      this.schemaService = this.injector.get(SchemaManagerService);\r\n      this.msgService = this.injector.get(MessagerService);\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    const self = this;\r\n    let defaultSchema;\r\n    // ä»æå¡ç«¯è·åå½åç¨æ·çæææ¡ä»¶æ¹æ¡\r\n    this.conditionSchemaService.getSchemaList(this.queryId, '', '').subscribe(value => {\r\n      this.schemaData = value && value.length ? value : [];\r\n      defaultSchema = this.schemaData.find(schema => {\r\n        return schema.isDefault === 1;\r\n      });\r\n      this.schemaData.forEach((item: any) => {\r\n        item.isDefault = item.isDefault === 1;\r\n      });\r\n      if (defaultSchema) { // é¢å¶é»è®¤å¯¹è±¡\r\n        this.currentSchemaName = defaultSchema.schemaName;\r\n        this.finishLoasService.finish.subscribe(data => {\r\n          if (defaultSchema && defaultSchema.schemaValue && this.repository.entityCollection.getAllEntities() && this.repository.entityCollection.getAllEntities().length) {\r\n            defaultSchema.schemaValue.id = this.repository.entityCollection.getAllEntities()[0]['id'];\r\n          }\r\n          this.repository.entityCollection.getAllEntities()[0].load(defaultSchema.schemaValue);\r\n        });\r\n      }\r\n    });\r\n    this.gridInit();\r\n    this.subscriptions.push(self.schemaService.operationChange.subscribe((value: any) => {\r\n      if (value) {\r\n        self.operations = value;\r\n      }\r\n      // console.log(value);\r\n    }));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscriptions && this.subscriptions.length) {\r\n      for (const subscription of this.subscriptions) {\r\n        subscription.unsubscribe();\r\n      }\r\n    }\r\n  }\r\n\r\n  private gridInit() {\r\n    const self = this;\r\n    const enumOpts = { valueField: 'value', textField: 'name', data: this.schemaTypeData };\r\n    this.columns = [\r\n      {\r\n        field: 'schemaName', width: 100, title: self.localizeService.getValue('ideCmp.conditionSchemaManager.schemeName')\r\n      },\r\n      {\r\n        field: 'schemaType', width: 100, title: self.localizeService.getValue('ideCmp.conditionSchemaManager.schemeType'), formatter: { type: 'enum', options: enumOpts },\r\n      },\r\n      {\r\n        field: 'isDefault', width: 100, title: self.localizeService.getValue('ideCmp.conditionSchemaManager.default'),\r\n        editor: {\r\n          type: EditorTypes.CHECKBOX,\r\n          options: {},\r\n        },\r\n        formatter: { type: 'boolean', options: { trueText: self.localizeService.getValue('ideCmp.conditionSchemaManager.default'), falseText: self.localizeService.getValue('ideCmp.conditionSchemaManager.noDefault') } }\r\n      }\r\n    ];\r\n  }\r\n\r\n  onResized(event: any): void {\r\n    this.size.height = event.newHeight;\r\n    this.size.width = event.newWidth;\r\n  }\r\n\r\n  /**\r\n   * å¤çä¿å­æ ¼å¼æ¹æ¡\r\n   */\r\n  public handleSaveClick() {\r\n    if (!this.isSchemaNameValid(this.bindingSchema.schemaName)) {\r\n      return;\r\n    }\r\n    const currentSchema = {};\r\n    currentSchema['isDefault'] = this.bindingSchema.isDefault ? 1 : 0;\r\n    currentSchema['queryId'] = this.queryId;\r\n    currentSchema['schemaName'] = this.bindingSchema.schemaName;\r\n    currentSchema['schemaType'] = this.bindingSchema.schemaType ? 0 : 1;\r\n    const schemaValue = this.repository.entityCollection.toArray()[0].toJSON();\r\n    delete schemaValue['id']; // å é¤æ¡ä»¶æ¹æ¡ä¸­çidå­æ®µ(å¦ææ)\r\n    currentSchema['schemaValue'] = JSON.stringify(schemaValue);\r\n\r\n    if (this.operations['QdpModifyPublicSchema'] === false && currentSchema['schemaType'] === 0) {\r\n      this.msgService.warning(this.localizeService.getValue('ideCmp.schemaManager.message.validate.qdpModifyPublicSchema'));\r\n      return;\r\n    }\r\n\r\n    if (this.schemaData && currentSchema['isDefault']) { // å°å½åé»è®¤æ¡ä»¶æ¹æ¡è®¾ä¸º0\r\n      const currentDefaultSchema = this.schemaData.find(value => {\r\n        return value.isDefault === 1;\r\n      });\r\n      if (currentDefaultSchema) {\r\n        currentDefaultSchema.isDefault = 0;\r\n      }\r\n    }\r\n    this.schemaData.push(currentSchema);\r\n    // æ°æ®åºæ°å¢ä¸æ¡æ°æ®ï¼å¹¶è¿åæææ ¼å¼æ¹æ¡\r\n    this.conditionSchemaService.saveSchema(currentSchema).subscribe(value => {\r\n      if (value) {\r\n        this.schemaData = value;\r\n        this.notifyService.success(this.localizeService.getValue('ideCmp.conditionSchemaManager.message.save.success'));\r\n      } else {\r\n        this.notifyService.error(this.localizeService.getValue('ideCmp.conditionSchemaManager.message.save.error'));\r\n      }\r\n    });\r\n    this.savingManagerDiglog.close();\r\n  }\r\n\r\n  /**\r\n   * å¤çæ¹æ¡ç®¡çé¡µé¢ç¹å»äºä»¶ï¼æ´æ¹é»è®¤æ¹æ¡\r\n   */\r\n  public handleDefault(dataItem: any) {\r\n    const self = this;\r\n    if (dataItem.isDefault === true) {\r\n      const currentDefaultSchema = self.schemaData.find(value => {\r\n        return value.isDefault === true && value.id !== dataItem.id;\r\n      });\r\n      if (currentDefaultSchema) {\r\n        currentDefaultSchema.isDefault = false;\r\n      }\r\n      // this.schemaData = JSON.parse(JSON.stringify(this.schemaData));\r\n      // this.dg.refresh();\r\n    }\r\n    const schema = JSON.parse(JSON.stringify(self.schemaData.find(value => value.id === dataItem.id)));\r\n    if (this.operations['QdpModifyPublicSchema'] === false && schema.schemaType === 0) {\r\n      this.msgService.warning(this.localizeService.getValue('ideCmp.schemaManager.message.validate.qdpModifyPublicSchema'));\r\n      return;\r\n    }\r\n    schema.isDefault = schema.isDefault === false ? 0 : 1;\r\n    schema.schemaValue = JSON.stringify(schema.schemaValue);\r\n\r\n    self.conditionSchemaService.saveSchema(schema).subscribe(value => {\r\n      if (value) {\r\n        self.notifyService.success(self.localizeService.getValue('ideCmp.conditionSchemaManager.message.update.success'));\r\n        self.conditionSchemaService.getSchemaList(self.queryId, '', '').subscribe(schemaList => {\r\n          self.schemaData = schemaList && schemaList.length ? schemaList : [];\r\n          const defaultSchema = self.schemaData.find(schema => {\r\n            return schema.isDefault === 1;\r\n          });\r\n          self.schemaData.forEach((item: any) => {\r\n            item.isDefault = item.isDefault === 1;\r\n          });\r\n          if (defaultSchema) { // é¢å¶é»è®¤å¯¹è±¡\r\n            self.currentSchemaName = defaultSchema.schemaName;\r\n          }\r\n        });\r\n      } else {\r\n        self.notifyService.error(self.localizeService.getValue('ideCmp.conditionSchemaManager.message.update.error'));\r\n      }\r\n    }); // å°schemavalueè½¬æstringç±»å\r\n  }\r\n\r\n  saveDefaultSchemaHandler() {\r\n    this.dg.endRowEdit();\r\n  }\r\n\r\n  endEdit(data: any) {\r\n    // console.log(data);\r\n    this.handleDefault(data.rowData || undefined);\r\n  }\r\n\r\n  /**\r\n   * å¤çä¸»é¡µéä¸­æä¸ªæ¡ä»¶æ¹æ¡äºä»¶\r\n   * @param item æ¡ä»¶æ¹æ¡\r\n   */\r\n  public handleDropDownItemClick(item: any) {\r\n    this.currentSchemaName = item.schemaName;\r\n    this.bindingSchema.schemaName = item.schemaName;\r\n    if (item && item.schemaValue && this.repository.entityCollection.getAllEntities() && this.repository.entityCollection.getAllEntities().length) {\r\n      item.schemaValue.id = this.repository.entityCollection.getAllEntities()[0]['id'];\r\n    }\r\n    this.repository.entityCollection.getAllEntities()[0].load(item.schemaValue);\r\n  }\r\n\r\n  /**\r\n   * å é¤è§£å³æ¹æ¡\r\n   */\r\n  public deleteSchemerHandler() {\r\n    const self = this;\r\n    if (self.dg.selectedRow) {\r\n      const index = self.schemaData.findIndex((n: any) => n.id === self.dg.selectedRow.id);\r\n      self.dg.refresh();\r\n      if (this.operations['QdpModifyPublicSchema'] === false && self.schemaData[index].schemaType === 0) {\r\n        this.msgService.warning(this.localizeService.getValue('ideCmp.schemaManager.message.validate.qdpModifyPublicSchema'));\r\n        return;\r\n      }\r\n      if (self.schemaData[index].isDefault === 1) { // å¤æ­æ¯å¦ä¸ºé»è®¤æ¹æ¡\r\n        self.notifyService.warning(self.localizeService.getValue('ideCmp.conditionSchemaManager.message.validate.delete'));\r\n        return;\r\n      }\r\n      const schemaId = self.schemaData[index].id;\r\n      self.schemaData.splice(index, 1);\r\n      // TODO è°ç¨æå¡ç«¯æ¥å£\r\n      self.conditionSchemaService.deleteSchema(schemaId, self.queryId).subscribe(value => {\r\n        if (value) {\r\n          self.notifyService.success(self.localizeService.getValue('ideCmp.conditionSchemaManager.message.delete.success'));\r\n        } else {\r\n          self.notifyService.error(self.localizeService.getValue('ideCmp.conditionSchemaManager.message.delete.error'));\r\n        }\r\n      });\r\n    } else {\r\n      self.notifyService.info(self.localizeService.getValue('ideCmp.conditionSchemaManager.message.validate.select'));\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * å¤æ­æ¡ä»¶æ¹æ¡åç§°æ¯å¦éå¤\r\n   * @param schemaName æ¡ä»¶æ¹æ¡åç§°\r\n   */\r\n  private isSchemaNameValid(schemaName: any) {\r\n    if ((schemaName.length) >= 100) {\r\n      this.notifyService.warning(this.localizeService.getValue('ideCmp.conditionSchemaManager.message.validate.longLimit'));\r\n      return false;\r\n    }\r\n    const repeatSchema = this.schemaData.find(value => {\r\n      return value.schemaName === schemaName;\r\n    });\r\n    if (repeatSchema) {\r\n      this.notifyService.warning(this.localizeService.getValue('ideCmp.conditionSchemaManager.message.validate.repeatName'));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';\r\nimport { DatagridModule, ScrollbarModule } from '@farris/ui-datagrid';\r\nimport { ConditionSchemaManagerComponent } from './component/condition-schema-manager/condition-schema-manager.component';\r\nimport { ConditionSchemaService  } from './service/condition-schema.service';\r\nimport { LocalizeModule } from '@qdp/localize';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConditionSchemaManagerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FarrisDialogModule,\r\n    ScrollbarModule,\r\n    DatagridEditorsModule,\r\n    DatagridModule.forRoot([\r\n        ...EditorProviders\r\n    ]),\r\n    FDropdownDirectiveTypeModule,\r\n    // LocalizeModule\r\n  ],\r\n  exports: [\r\n    ConditionSchemaManagerComponent\r\n  ],\r\n  providers: [\r\n    ConditionSchemaService\r\n  ]\r\n})\r\nexport class ConditionSchemaModule { }\r\n"]}