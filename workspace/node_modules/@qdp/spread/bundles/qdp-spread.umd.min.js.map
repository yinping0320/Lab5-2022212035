{"version":3,"sources":["ng://@qdp/spread/lib/util/services.utils.ts","node_modules/tslib/tslib.es6.js","ng://@qdp/spread/lib/util/parameter.utils.ts","ng://@qdp/spread/lib/util/render.extends.utils.ts","ng://@qdp/spread/lib/util/schema.utils.ts","ng://@qdp/spread/lib/util/spread.style.utils.ts","ng://@qdp/spread/lib/engine/base-render.ts","ng://@qdp/spread/lib/engine/crosstab-render.ts","ng://@qdp/spread/lib/engine/list-render.ts","ng://@qdp/spread/lib/service/render/render.service.ts","ng://@qdp/spread/lib/component/dimension-setting/dimension-setting.component.ts","ng://@qdp/spread/lib/component/columns-setting/columns-setting.component.ts","ng://@qdp/spread/lib/component/qdp-view/qdp-view.component.ts","ng://@qdp/spread/lib/spread.module.ts"],"names":["ServicesUtils","setServices","key","value","ServicesMap","set","getServices","get","Map","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","error","__spread","arguments","length","concat","ParameterUtils","_queryId","_funcInfoCache","_serviceCache","queryId","funcInfoCache","cache","cacheService","createParameters","option","entityData","tabId","bindCloseTabEvent","params","JSON","stringify","id","extendCond","pageIndex","pageSize","schemaId","filterCond","filterCondition","qoManagerCode","voCode","voId","parameterEntityData","parse","filterExpression","advanceFilterExpression","expressItems","controlType","excelExportName","printIntegration","multiSheets","join","curSheet","multiSheetsSchemaIds","groupType","RtfServices","getMenuParameter","getTabId","tab_1","gspframeworkService","rtf","session","getCommonVariable","frmEvent","eventListener","clearParametersCache","bind","funcIds","findIndex","el","getInSuiteFrmUUID","index","splice","firstLoadCache","func","close","RenderExtendsUtils","init","dataRenderExtendService","renderExtends","runRenderExtends","extendCode","extendName","extendData","control","$event","createRenderExtendParams","eventCode","eventName","data","spread","beforeQueryData","beforeLoadData","afterLoadData","obj","undefined","SchemaUtils","schemaManager","schemaManagerService","getSchemaInfo","schemaValue","organizationId","getSchema","queryRelativeUrl","fromCache","pipe","switchMap","of","getDefaultSchemaInfo","getDefaultSchema","SpreadStyleUtils","_controlType","_jointsearchInfoList","dataStyleArray","dataRowHeightArray","dataColInfoArray","footerStyleArray","footerRowHeightArray","footerSpansArray","footerDataArray","hyperLinkQuery","autoFitColumnIndex","valueHeaderRowCount","valueHeaderRowArray","rowHeadersColumnCount","rowHeaderRowArray","joinParam","type","jointsearchInfoList","loadService","loadingService","msgService","localizeService","formErrorService","lcpService","setAutoFitColumn","schema","sheet","_this","columnOption","colList","forEach","col","recursionAutoFitColumn","column","childList","autoFit","autoFitColumn","cacheStyle","getRowCount","columnStyleArray","dataArray","c","getColumnCount","formatter","getFormatter","GC","Spread","Sheets","SheetArea","viewport","colHeaderCount","colHeader","colInfo","name","getCell","size","getColumnWidth","visible","getColumnVisible","resizable","getColumnResizable","indexOf","MyNumFormatter","displayName","style","getStyle","Style","locked","text","getValue","getText","getRowHeight","spans","getSpans","row","deleteRows","applyStyle","showZero","rowCount","colCount","footerCount","addRows","groupFieldCache","groupFieldValueCache","groupRowCache","groupTreeLevel","columns","toJSON","getGroupField","formatFieldCache","getFormatField","getIsRedColumns","isRedColumns","colIndex","sheetColumns","item","precision","getDataItem","formatField","numberFormat","isNumber","formatColIndex","sourceField","setStyle","this_1","setValue","setRowHeight","addSpan","cellValue","logicFormat","setText","setFormatter","foreColor","level","isDetail","setCellType","TreeCellType","hAlign","textIndent","rowOutlines","group","x","toString","addRowsCache","addRowIndex","fieldIndex","f","filterResult","filter","treeLevel","cellType","backColor","t","getShowFilterRow","filterRow","groupColCache","recursionGetGroupColumn","recursiveIsRedColumn","fieldCache","recursionGetFormatColumn","getShowHeaderSort","otherOption","showHeaderSort","showFilterRow","getMergeCell","mergeCell","formatType","bindField","formattor","isGroup","str","split","real","disp","rowHeader","s","fromJSON","FilterCellType","Filter","HideRowFilter","Range","rowFilter","filterButtonVisible","linkField","self_1","dataItem","dynamicPropSet","joinSearch","jointserachdisplaystyle","linkfield","h1","CellTypes","HyperLink","format","activeOnClick","onClickAction","commandManager","execute","cmd","self","register","canUndo","context","options","isUndo","el_1","entityParam_1","paramMap_1","searchparas","functionid","value_1","getActiveSheet","name_1","colHeaderRowInfo","start","colInfo_1","colInfos","find","dimension","rowHeaderColInfo","end","value_2","colInfo_2","name_2","currentSelectedItem_1","paravaluetype","paravalue","parameterKey","replace","getQueryParameters","para","op","ParentSessionId","EntityParam","searchtype","openMenuoptions","appType","funcId","functioncode","EventBus","guid","appId","appEntrance","entityParams","entityParam","queryStringParams","isNewTab","getFuncId","menuSwitchControl","assign","getMenuSwitchControlParameter","openMenu","appOption","isReload","getActiveRowIndex","getActiveColumnIndex","inSuiteLinkField","extObj","self_2","data_1","inSuiteDropDownInfo","rowDropDown","cacheRowDropDown","cacheCellDropDown","clickEvents_1","click_events","eventData_1","event_data","dcEvent_1","double_click_event","dcEventParams_1","double_click_event_params","rcEventIds_1","rc_event_ids","key1","event","message","thisEventId","thisEventData","defaults","inSuiteWindow","postMessage","location","origin","console","log","paramMap","tab","tid","bindSelectChanged","Events","SelectionChanging","args","tempData","selection","newSelections","pop","sheetArea","selectChanging","CellClick","linkageParams","rowIndex","this_2","value_3","name_3","colInfo_3","value_4","colInfo_4","name_4","dispatch","setSortCellType","qdpView","header","span","getSpan","SortCellType","columnSort","groupFieldCache1","columnCount","beginRowIndex","rowSpans","curCellValues","currentName","k","loading","show","container","info","cell","isPrefab","tag","invalidateLayout","repaint","isProtected","sortInfo","sortIndex","isText","recursiveColumnSortIndex","recursiveColumnSort","warning","newSchema_1","saveSchema","subscribe","initSpread","conditionExpression","exception","Message","sort","toLowerCase","isRed","val","parseFloat","BaseRender","utils","isSchemaSelectChanged","serviceCache","baseRenderInit","parameterUtils","schemaUtils","spreadStyleUtils","renderExtendsUtils","getData","changeData","dynamicCols","columns_1","y","orginValue","showValue","resultEnumItems","resultEnumItem","enumName","findShowValue","resultEnumInfoList","resultEnum","showType","code","operateCustomFormatSchema","customFormatScheme","customSchema","mergeCustomSchema","operatePagination","schemaList","loadDataType","preSchema","titleVariablesReplace","variables","variablesReplace","footerVariablesReplace","keys","reg","RegExp","errorHandle","errmsg","removeSheet","tabStripVisible","CrosstabRender","_super","crosstabInit","tslib_1.__extends","render","delay","interval_1","interval","firstLoad","colHeaderVisible","setTimeout","getRenderDataForCrosstab","setInterval","formData","params_1","getCol","resultData","dynamicColumns","initJoinParams","setColInfo","getCrosstabTemplate","template","sheets","sheet1","dataTable","renderCrossTable","getMenuSwitchControlEvent","suspendEvent","suspendPaint","direction","Outlines","OutlineDirection","backward","getCellType","typeName","clearSelection","resumePaint","resumeEvent","valueColCount","columnHeaderRowCount","titleCount","titleOption","title","subTitles","ListTreeRender","listRenderInit","funcId_1","pageInfoChange","pageCount","totalCount","getRenderDataForList","getListRenderTemplate","operateDynamicColsForSchema","schemaInfoChange","schemaInfo","isDefaultSchema","frozenCols","getSpreadTemplate","returnValue","renderList","addSheet","Worksheet","deleteColumns","setActiveSheet","tabEditable","setDataSource","bindColumns","protectionOptions","allowSelectLockedCells","allowSelectUnlockedCells","allowFilter","allowSort","allowResizeRows","allowResizeColumns","allowEditObjects","allowCopyPasteExcelStyle","allowExtendPasteRange","copyPasteHeaderOptions","CopyPasteHeaderOptions","allHeaders","extendMethod","getExtObj","RenderService","injector","operations","LocalizeService","FormErrorService","cloudprintService","CloudprintService","notifyService","NotifyService","setService","operationChange","setSecurityLevel","getService","variablesChange","getSecurityLevel","renderObject","getRender","exportData","renderOption","schemaName","getFuncName","exportType","isCustomShema","expandNodes","treeInfoType","pathField","idField","isCollapsed","substring","calculationColumnCount","aysnExportData","clearCache","msg","timeout","pdfExportEvent","printPreView","clearFirstLoadCache","Injectable","SchemaManagerService","LcpService","CacheService","LoadingService","MessagerService","DataRenderExtendService","decorators","Optional","Injector","DimensionSettingComponent","isCompare","searchText","groupIcon","lists","listsCache","models","selected","renderService","initLists","ngOnInit","eventId","handleSchemaValueChanged","ngOnDestroy","initCrosstab","zero","rowDimension","colDimension","valDimension","moved","list","selectedDimesion","crosstabColumnValidate","flag","groupAggre","totalAggre","includes","JSONUtils","Compare","dimensionSearchValueOnChange","searchCols","dndListChange0","dndListChange1","dndListChange2","dndListChange3","dimensionIndex","Component","selector","Input","ColumnsSettingComponent","hideColCache","showColCache","allColCache","formInline","isOrNotPaging","aggreData","pageSelectValue","pageText","colIsGroup","groupSelectValue","groupSubSelectValue","groupText","totalSelectValue","totalText","currentColIndex","enumType","localId","LOCALE_ID","DEFAULT_LANGUAGE","handlePagingModeChanged","getSubColumns","pid","pcol","recursiveFindParent","objCache","result","parent_1","pagingMode","QdpViewComponent","elRef","renderer","filterService","isInitQdpView","isShowDimension","cls","isOpen","headerMenuTop","headerMenuLeft","headerMenuDisplay","colIsGroupId","width","height","isCommonQdpViewComponent","sheetChanged","Subject","jointSearchManagerService","JointSearchManagerService","docClickSubscription","listen","onDocumentClick","QDPCacheUtil","setCache","qoId","ngAfterViewInit","getSpreadLicense","LicenseKey","afterView","setMultiSheetsVarible","columnsSettingComponent","hostElement","querySelector","licenseKey","Workbook","sheetCount","setSpreadOptions","templateType","initQdpView","getjointsearch","jointsearchList","getFilter","qdpViewRender","bindCustomEvent","spreadOptions","unbind","ActiveSheetChanged","newSheet","setGroup","registeSpreadColumnWidthChangedEvent","exportExcel","export","print","_voId","_groupType","_qoManagerCode","printPreview","ngOnChanges","changes","changeName","newValue","currentValue","refresh","field","colWidth","align","isFixed","pageAggreText","pageAggre","groupAggreText","totalAggreText","rowColor","destroy","onResized","newHeight","newWidth","toggle","dimensionSettingComponent","sheetName","target","tagName","handleCrosstabPageChange","setRowVisible","showRow","VerticalPosition","bottom","handleContextMenu","qdpviewNative","sheetEl","nativeElement","offsetLeft","offsetTop","offsetParent","activeSheet","hitTest","clientX","clientY","hitTestType","headerRowCount","initColGroupAggre","handleIsGroupClick","handleSaveClick","handleClearSort","recursiveClearColumnSort","handleBlur","ColumnWidthChanged","sender","colW","recursiveColumnWidthChanged","ElementRef","Inject","Renderer2","FilterManagerService","ViewChild","read","HostBinding","SpreadModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","LoadingModule","DndListModule","FormsModule","ReactiveFormsModule","ComboListModule","InputGroupModule","FDropdownDirectiveTypeModule","declarations","exports"],"mappings":"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","sourcesContent":["export class ServicesUtils {\r\n    private static ServicesMap = new Map();\r\n\r\n    public static setServices(key: String, value: any) {\r\n        ServicesUtils.ServicesMap.set(key, value);\r\n    }\r\n\r\n    public static getServices(key: String) {\r\n        return ServicesUtils.ServicesMap.get(key);\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { CacheService } from \"@ecp-caf/caf-common\";\r\nimport { RtfServices } from \"@qdp/common\";\r\nimport { ServicesUtils } from \"./services.utils\";\r\n\r\ndeclare var gspframeworkService: any;\r\n\r\nexport class ParameterUtils {\r\n    private cache: CacheService;\r\n    queryId: any;\r\n    funcInfoCache: any;\r\n\r\n    constructor(_queryId?: any, _funcInfoCache?: any, _serviceCache?: any) {\r\n        this.queryId = _queryId;\r\n        this.funcInfoCache = _funcInfoCache;\r\n        this.cache = _serviceCache.cacheService;\r\n    }\r\n\r\n    /**\r\n     * åå»ºåæ°\r\n     * @param option åæ°éç½®é¡¹\r\n     * { queryId: æ¥è¯¢ID, controlType: æ¥è¯¢ç±»åï¼list  treelist  crosstab, schemaId: æ¹æ¡ID, qoManagerCode: æ¥è¯¢å¯¹è±¡ç¼å·, extendCond: æ©å±æ¡ä»¶, pageIndex: é¡µç´¢å¼, pageSize: åé¡µå¤§å°, filterCondition: ç»æè¿æ»¤æ¡ä»¶, printIntegration: æå°éç½®, excelExportName: å¯¼åºExcelæä»¶å }\r\n     * @returns \r\n     */\r\n    createParameters(option: any) {\r\n        const tabId = this.bindCloseTabEvent();\r\n        let entityData: any;\r\n        if (this.cache.get(tabId)) {\r\n            entityData = JSON.stringify(this.cache.get(tabId));\r\n        } else if (this.cache.get(option.queryId)) {\r\n            entityData = JSON.stringify(this.cache.get(option.queryId));\r\n        } else {\r\n            entityData = JSON.stringify({ 'id': 'undefined_null' });\r\n        }\r\n        const params = {\r\n            entityData: entityData,\r\n            extendCond: this.cache.get(tabId + 'extendCond') ? this.cache.get(tabId + 'extendCond') : option.extendCond,\r\n            pageIndex: option.pageIndex ? option.pageIndex : 0,\r\n            pageSize: option.pageSize ? option.pageSize : 0,\r\n            schemaId: option.schemaId && option.schemaId !== 'prefab' ? option.schemaId : '1',\r\n            filterCond: option.filterCondition ? option.filterCondition : (this.cache.get(tabId + 'filtercondition') ? this.cache.get(tabId + 'filtercondition') : ''),\r\n            qoManagerCode: option.qoManagerCode ? option.qoManagerCode : '',\r\n            voCode: option.voId ? option.voId : '',\r\n        };\r\n        try {\r\n            const parameterEntityData = JSON.parse(entityData);\r\n            if (parameterEntityData.hasOwnProperty('@filterExpressionString@')) {\r\n\r\n                const filterExpression = params && params.filterCond ? JSON.parse(params.filterCond) : null;\r\n                if (!filterExpression) {\r\n                    params.filterCond = parameterEntityData['@filterExpressionString@'];\r\n                } else {\r\n                    const advanceFilterExpression = JSON.parse(parameterEntityData['@filterExpressionString@']);\r\n                    advanceFilterExpression.expressItems = advanceFilterExpression.expressItems.concat(filterExpression.expressItems);\r\n                    params.filterCond = JSON.stringify(advanceFilterExpression);\r\n                }\r\n            }\r\n        } catch (e) {\r\n        }\r\n        if (option.controlType) {\r\n            params['controlType'] = option.controlType;\r\n        }\r\n        if (option.excelExportName) {\r\n            params['excelExportName'] = option.excelExportName;\r\n        }\r\n        if (option.printIntegration) {\r\n            params['printIntegration'] = option.printIntegration ? JSON.stringify(option.printIntegration) : '';\r\n        }\r\n        if (option.multiSheets) {\r\n            params['multiSheets'] = option.multiSheets && option.multiSheets.length ? option.multiSheets.join(\",\") : '';\r\n        }\r\n        if (option.curSheet) {\r\n            params['curSheet'] = option.curSheet;\r\n        }\r\n        if (option.multiSheetsSchemaIds) {\r\n            params['multiSheetsSchemaIds'] = option.multiSheetsSchemaIds ? JSON.stringify(option.multiSheetsSchemaIds) : '';\r\n        }\r\n        if (option.groupType) {\r\n            params['groupType'] = option.groupType ? option.groupType : '';\r\n        }\r\n        if (option.queryId) {\r\n            params['queryId'] = option.queryId ? option.queryId : '';\r\n        }\r\n        if (RtfServices.getMenuParameter('enableQOExtends')) {\r\n            params['enableQOExtends'] = RtfServices.getMenuParameter('enableQOExtends');\r\n            params['qoId'] = ServicesUtils.getServices(RtfServices.getTabId(this.queryId) + 'qoId');\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * ç»å®åè½èåå³é­äºä»¶\r\n     */\r\n    bindCloseTabEvent() {\r\n        try {\r\n            const tab = gspframeworkService.rtf.session.getCommonVariable();\r\n            gspframeworkService.rtf.frmEvent.eventListener('beforeFuncCloseEvent', this.clearParametersCache.bind(this), tab);\r\n            const index = this.funcInfoCache.funcIds.findIndex(el => el === tab.tabId);\r\n            if (index < 0) {\r\n                this.funcInfoCache.funcIds.push(tab.tabId);\r\n            }\r\n            return tab.tabId + RtfServices.getInSuiteFrmUUID();\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¸é¤æ¥è¯¢ç¼å­\r\n     */\r\n    clearParametersCache() {\r\n        const tabId = arguments[0].tabId;\r\n        if (this.queryId) {\r\n            this.cache.set(this.queryId, '');\r\n        }\r\n        this.cache.set(tabId, '');\r\n        this.cache.set(tabId + 'renderMode', '');\r\n        let index = this.funcInfoCache.funcIds.findIndex(el => el === tabId);\r\n        if (index >= 0) {\r\n            this.funcInfoCache.funcIds.splice(index, 1);\r\n            index = this.funcInfoCache.firstLoadCache.findIndex(el => el === tabId);\r\n            if (index >= 0) {\r\n                this.funcInfoCache.firstLoadCache.splice(index, 1);\r\n            }\r\n            gspframeworkService.rtf.func.close(arguments[0]);\r\n        }\r\n    }\r\n}","import { DataRenderExtendService } from \"@qdp/common\";\r\nimport { ServicesUtils } from \"./services.utils\";\r\n\r\nexport class RenderExtendsUtils {\r\n    dataRenderExtendService: DataRenderExtendService;\r\n    renderExtends: DataRenderExtendService;\r\n\r\n    constructor(_queryId: any) {\r\n        this.init(_queryId);\r\n    }\r\n\r\n    private init(_queryId: any) {\r\n        this.dataRenderExtendService = ServicesUtils.getServices('dataRenderExtendService' + _queryId);\r\n        this.renderExtends = ServicesUtils.getServices('renderExtends' + _queryId);\r\n    }\r\n\r\n    /**\r\n   * æ§è¡æ¥è¯¢æ©å±\r\n   */\r\n    runRenderExtends(extendCode: any, extendName: any, extendData: any, control: any) {\r\n        const $event = this.createRenderExtendParams({\r\n            eventCode: extendCode, // 'beforeQueryData',\r\n            eventName: extendName, // this.localizeService.getValue('spread.message.extend.query.before'),\r\n            data: extendData, // params,\r\n            spread: control, // obj.spread\r\n            control: control // obj.spread\r\n        });\r\n        if (extendCode === 'beforeQueryData') {\r\n            if (this.dataRenderExtendService && this.dataRenderExtendService.beforeQueryData) {\r\n                this.dataRenderExtendService.beforeQueryData($event);\r\n            } else {\r\n                if (this.renderExtends && this.renderExtends.beforeQueryData) {\r\n                    this.renderExtends.beforeQueryData($event);\r\n                }\r\n            }\r\n        } else if (extendCode === 'beforeLoadData') {\r\n            if (this.dataRenderExtendService && this.dataRenderExtendService.beforeLoadData) {\r\n                this.dataRenderExtendService.beforeLoadData($event);\r\n            } else {\r\n                if (this.renderExtends && this.renderExtends.beforeQueryData) {\r\n                    this.renderExtends.beforeLoadData($event);\r\n                }\r\n            }\r\n        } else if (extendCode === 'afterLoadData') {\r\n            if (this.dataRenderExtendService && this.dataRenderExtendService.afterLoadData) {\r\n                this.dataRenderExtendService.afterLoadData($event);\r\n            } else {\r\n                if (this.renderExtends && this.renderExtends.beforeQueryData) {\r\n                    this.renderExtends.afterLoadData($event);\r\n                }\r\n            }\r\n        }\r\n        return $event['data'];\r\n    }\r\n\r\n    createRenderExtendParams(obj) {\r\n        return {\r\n            eventCode: obj.eventCode,\r\n            eventName: obj.eventName,\r\n            data: obj.data,\r\n            control: obj.control,\r\n            spread: obj.spread || undefined\r\n        };\r\n    }\r\n}","import { RtfServices, SchemaManagerService } from \"@qdp/common\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { switchMap } from \"rxjs/operators\";\r\n\r\nexport class SchemaUtils {\r\n    schemaManager: SchemaManagerService;\r\n    cacheService: any;\r\n\r\n    constructor(_serviceCache: any) {\r\n        this.init(_serviceCache);\r\n    }\r\n    \r\n    private init(_serviceCache: any) {\r\n        this.schemaManager = _serviceCache.schemaManagerService;\r\n        this.cacheService = _serviceCache.cacheService;\r\n    }\r\n    /**\r\n     * è·åæ ¼å¼æ¹æ¡ä¿¡æ¯\r\n     * @param option åæ°éç½®é¡¹ \r\n     * { schemaId: æ¹æ¡ID, schemaValue: æ ¼å¼æ¹æ¡ï¼äº¤åè¡¨æå¿«éè¨­ç½®æä½¿ç¨ï¼, controlType: æ¥è¯¢ç±»åï¼list  treelist  crosstab, queryId: æ¥è¯¢ID, queryRelativeUrlï¼eapiåºç¡uri, groupType: æ¹æ¡åç»æ è¯ }\r\n     * @returns æ¹æ¡åè¡¨\r\n     */\r\n    getSchemaInfo(option: any): Observable<any> {\r\n        const self = this;\r\n        option.schemaId = option.schemaId === 'prefab' || option.schemaId === '1'\r\n            ? '1'\r\n            : option.schemaValue && option.schemaValue.id && option.controlType === 'crosstab'\r\n                ? option.schemaValue.id\r\n                : option.schemaId;\r\n        if (!option.schemaId) {\r\n            return self.getDefaultSchemaInfo(option);\r\n        } else {\r\n            const organizationId = this.cacheService.get(RtfServices.getTabId(option.queryId) + 'organizationId') || '';\r\n            const result$ = this.schemaManager.getSchema(option.schemaId, option.queryId, option.queryRelativeUrl, option.groupType, organizationId, option.fromCache);\r\n            return result$.pipe(\r\n                switchMap((schemaValue: any) => {\r\n                    if (schemaValue && schemaValue['id']) {\r\n                        return of(schemaValue);\r\n                    }\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * è·åé»è®¤æ ¼å¼æ¹æ¡\r\n     * @param option åæ°éç½®é¡¹ \r\n     * { queryIdï¼æ¥è¯¢ID, queryRelativeUrlï¼eapiåºç¡uri, groupType: æ¹æ¡åç»æ è¯ }\r\n     * @returns é»è®¤æ ¼å¼æ¹æ¡\r\n     */\r\n    getDefaultSchemaInfo(option: any) {\r\n        const organizationId = this.cacheService.get(RtfServices.getTabId(option.queryId) + 'organizationId') || '';\r\n        return this.schemaManager.getDefaultSchema(option.queryId, option.queryRelativeUrl, option.groupType, organizationId);\r\n    }\r\n}","import { FormErrorService } from \"@farris/command-services\";\r\nimport { EventBus, RtfServices, LcpService } from \"@qdp/common\";\r\nimport { filter } from 'lodash-es';\r\n\r\ndeclare var GC: any;\r\ndeclare var TreeCellType: any;\r\ndeclare var MyNumFormatter: any;\r\ndeclare var FilterCellType: any;\r\ndeclare var SortCellType: any;\r\ndeclare var gspframeworkService: any;\r\n\r\nexport class SpreadStyleUtils {\r\n    dataStyleArray: any[] = [];\r\n    dataRowHeightArray: any[] = [];\r\n    dataColInfoArray: any[] = [];\r\n    footerStyleArray: any[] = [];\r\n    footerRowHeightArray: any[] = [];\r\n    footerSpansArray: any[] = [];\r\n    footerDataArray: any[] = [];\r\n    hyperLinkQuery: any = {};\r\n    private autoFitColumnIndex = 0;\r\n    type: any;\r\n    queryId: any;\r\n    valueHeaderRowCount = 0; // å¼ç»´åº¦æ°é\r\n    valueHeaderRowArray: number[] = [];\r\n    rowHeadersColumnCount = 0; // è¡æ é¢åæ°\r\n    rowHeaderRowArray: number[] = [];\r\n    rowHeaderInfo: any;\r\n    valInfo: any;\r\n    joinParam: any = {};\r\n    jointsearchInfoList: any;\r\n    cache: any;\r\n    loadService: any;\r\n    msgService: any;\r\n    localizeService: any;\r\n    schemaManager: any;\r\n    formErrorService: FormErrorService;\r\n    lcpService: any;\r\n\r\n    constructor(_queryId: any, _controlType: any, _jointsearchInfoList?: any, _serviceCache?: any) {\r\n        this.queryId = _queryId;\r\n        this.type = _controlType;\r\n        this.jointsearchInfoList = _jointsearchInfoList;\r\n        this.cache = _serviceCache.cacheService;\r\n        this.loadService = _serviceCache.loadingService;\r\n        this.msgService = _serviceCache.msgService;\r\n        this.localizeService = _serviceCache.localizeService;\r\n        this.schemaManager = _serviceCache.schemaManagerService;\r\n        this.formErrorService = _serviceCache.formErrorService;\r\n        this.lcpService = _serviceCache.lcpService;\r\n    }\r\n\r\n    setAutoFitColumn(schema: any, sheet: any) {\r\n        if (schema && schema.schemaValue && schema.schemaValue.columnOption && schema.schemaValue.columnOption.colList && schema.schemaValue.columnOption.colList.length) {\r\n            this.autoFitColumnIndex = 0;\r\n            schema.schemaValue.columnOption.colList.forEach((col: any) => {\r\n                this.recursionAutoFitColumn(col, null, sheet);\r\n            });\r\n        }\r\n    }\r\n\r\n    private recursionAutoFitColumn(column: any, childList: any[], sheet: any) {\r\n        if (column) {\r\n            if (column.childList && column.childList.length) {\r\n                this.recursionAutoFitColumn(null, column.childList, sheet);\r\n            } else {\r\n                if (column.autoFit) {\r\n                    sheet.autoFitColumn(this.autoFitColumnIndex);\r\n                }\r\n                this.autoFitColumnIndex += 1;\r\n            }\r\n        } else {\r\n            childList.forEach((col: any) => {\r\n                if (col.childList && col.childList.length) {\r\n                    this.recursionAutoFitColumn(null, col.childList, sheet);\r\n                } else {\r\n                    if (col.autoFit) {\r\n                        sheet.autoFitColumn(this.autoFitColumnIndex);\r\n                    }\r\n                    this.autoFitColumnIndex += 1;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    cacheStyle(sheet: any) {\r\n        this.dataStyleArray = [];\r\n        this.dataRowHeightArray = [];\r\n        this.dataColInfoArray = [];\r\n        this.footerStyleArray = [];\r\n        this.footerRowHeightArray = [];\r\n        this.footerSpansArray = [];\r\n        this.footerDataArray = [];\r\n\r\n        // ç¼å­åºåæ ·å¼ä¿¡æ¯\r\n        for (let r = 0; r < sheet.getRowCount(); r++) {\r\n            const columnStyleArray = new Array();\r\n            const dataArray = new Array();\r\n            for (let c = 0; c < sheet.getColumnCount(); c++) {\r\n                if (r === 0) {\r\n                    let formatter = '';\r\n                    if (sheet.getFormatter(r, c, GC.Spread.Sheets.SheetArea.viewport)) {\r\n                        formatter = sheet.getFormatter(r, c, GC.Spread.Sheets.SheetArea.viewport);\r\n                    }\r\n                    const colHeaderCount = sheet.getRowCount(GC.Spread.Sheets.SheetArea.colHeader);\r\n                    const colInfo: any = {\r\n                        name: sheet.getCell(r, c, GC.Spread.Sheets.SheetArea.viewport).value(),\r\n                        size: sheet.getColumnWidth(c, GC.Spread.Sheets.SheetArea.viewport),\r\n                        visible: sheet.getColumnVisible(c, GC.Spread.Sheets.SheetArea.viewport),\r\n                        resizable: sheet.getColumnResizable(c, GC.Spread.Sheets.SheetArea.viewport),\r\n                        formatter: formatter.indexOf('&') >= 0 ? new MyNumFormatter(formatter) : formatter,\r\n                        displayName: sheet.getCell((colHeaderCount - 1), c, GC.Spread.Sheets.SheetArea.colHeader).value()\r\n                    };\r\n                    this.dataColInfoArray.push(colInfo);\r\n                }\r\n                let style = sheet.getStyle(r, c, GC.Spread.Sheets.SheetArea.viewport);\r\n                if (style == null) {\r\n                    style = new GC.Spread.Sheets.Style();\r\n                    style.locked = true;\r\n                } else {\r\n                    style.locked = true;\r\n                }\r\n                if (style && style.formatter && style.formatter.indexOf('&') >= 0) {\r\n                    style.formatter = new MyNumFormatter(style.formatter);\r\n                }\r\n                columnStyleArray.push(style);\r\n\r\n                const text = sheet.getValue(r, c, GC.Spread.Sheets.SheetArea.viewport)\r\n                    || sheet.getText(r, c, GC.Spread.Sheets.SheetArea.viewport)\r\n                    || '';\r\n                dataArray.push(text);\r\n\r\n            }\r\n            if (r === 0) {\r\n                this.dataRowHeightArray.push(sheet.getRowHeight(r));\r\n                this.dataStyleArray.push(columnStyleArray);\r\n            } else {\r\n                this.footerRowHeightArray.push(sheet.getRowHeight(r));\r\n                this.footerStyleArray.push(columnStyleArray);\r\n                this.footerDataArray.push(dataArray);\r\n            }\r\n        }\r\n\r\n        // ç¼å­span\r\n        const spans = sheet.getSpans();\r\n        if (spans && spans.length) {\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (spans[i].row > 0) {\r\n                    this.footerSpansArray.push(spans[i]);\r\n                }\r\n            }\r\n        }\r\n        sheet.deleteRows(1, sheet.getRowCount() - 1);\r\n    }\r\n\r\n    applyStyle(sheet: any, schema: any, showZero?: boolean) {\r\n        let rowCount = sheet.getRowCount();\r\n        const colCount = sheet.getColumnCount();\r\n        const footerCount = this.footerRowHeightArray.length;\r\n        sheet.addRows(rowCount, footerCount);\r\n        let index = 0;\r\n        const groupFieldCache = [];\r\n        const groupFieldValueCache = [];\r\n        const groupRowCache = [];\r\n        const groupTreeLevel = {};\r\n        const columns = sheet.toJSON().columns;\r\n        this.getGroupField(groupFieldCache, schema);\r\n        const formatFieldCache = [];\r\n        this.getFormatField(formatFieldCache, schema);\r\n        this.getIsRedColumns(formatFieldCache, schema);\r\n        const isRedColumns = {\r\n            colIndex: 0,\r\n            isRedColumns: []\r\n        };\r\n        this.getIsRedColumns(schema, isRedColumns);\r\n        const sheetColumns = sheet.toJSON().columns;\r\n        for (let r = 0; r < (rowCount + footerCount); r++) {\r\n            if (formatFieldCache && formatFieldCache.length && r < rowCount) {\r\n                formatFieldCache.forEach((item: any) => {\r\n                    const dataItem = sheet.getDataItem(r);\r\n                    const precision = dataItem[item.formatField] - 0;\r\n                    let numberFormat = item.formatter && (item.formatter.indexOf('#,###') >= 0 || item.formatter.indexOf('#,##0') >= 0) ? '#,##0.' : '0.';\r\n                    if (this.isNumber(precision)) {\r\n                        for (let p = 0; p < precision; p++) {\r\n                            numberFormat += '0';\r\n                        }\r\n                    }\r\n                    const formatColIndex = sheetColumns.findIndex((el: any) => el.name == item.sourceField);\r\n                    if (formatColIndex >= 0 && numberFormat != '0.' && numberFormat != '#,##0.') {\r\n                        sheet.getCell(r, formatColIndex).formatter(numberFormat);\r\n                    }\r\n                });\r\n            }\r\n\r\n            for (let c = 0; c < colCount; c++) {\r\n                if (r === 0 && !sheet.getColumnVisible(index)) {\r\n                    index += 1;\r\n                }\r\n                if (r >= rowCount) {\r\n                    if (c === 0) {\r\n                        sheet.setStyle(r, c, this.footerStyleArray[r - rowCount][c]);\r\n                        if (this.footerDataArray && this.footerDataArray.length) {\r\n                            sheet.setValue(r, c, this.footerDataArray[r - rowCount][c]);\r\n                        }\r\n                        sheet.setRowHeight(r, this.footerRowHeightArray[r - rowCount]);\r\n                        if (this.footerSpansArray && this.footerSpansArray.length) {\r\n                            sheet.addSpan(r, this.footerSpansArray[0].col, this.footerSpansArray[0].rowCount, this.footerSpansArray[0].colCount);\r\n                        }\r\n                    }\r\n                } else {\r\n                    const formatter = sheet.getFormatter(r, c, GC.Spread.Sheets.SheetArea.viewport);\r\n                    if (formatter && formatter.indexOf && formatter.indexOf('/') >= 0 && formatter.indexOf(';') >= 0) {\r\n                        const cellValue = this.logicFormat(formatter, sheet.getValue(r, c));\r\n                        sheet.setText(r, c, cellValue);\r\n                    }\r\n                    if (formatter && typeof formatter === 'string' && (formatter.indexOf('yy') >= 0 || formatter.indexOf('MM') >= 0 || formatter.indexOf('dd') >= 0 || formatter.indexOf('HH') >= 0 || formatter.indexOf('mm') >= 0 || formatter.indexOf('ss') >= 0)) {\r\n                        if (sheet.getDataItem(r).hasOwnProperty(\"qdp_data_flag\")) {\r\n                            sheet.setFormatter(r, c, '');\r\n                        }\r\n                    }\r\n                    if (isRedColumns.isRedColumns.findIndex(el => el.colIndex == c) >= 0 && this.isNumber(sheet.getCell(r, c).value()) && (sheet.getCell(r, c).value() - 0 < 0)) {\r\n                        sheet.getCell(r, c).foreColor('red');\r\n                    }\r\n                    if (!showZero) {\r\n                        if (!showZero && columns && columns.length) {\r\n                            if (columns[c].name === 'treeLevel' || columns[c].name === 'isDetail') { continue; }\r\n                            if (sheet.getCell(r, c).value() === 0 || sheet.getCell(r, c).value() == '0') {\r\n                                sheet.getCell(r, c).value('');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (r < rowCount) {\r\n                // è®¾ç½®è¡é«\r\n                sheet.setRowHeight(r, this.dataRowHeightArray[0]);\r\n                if (this.type === 'treelist') {\r\n                    const level = sheet.getDataItem(r)['treeLevel'];\r\n                    const isDetail = sheet.getDataItem(r)['isDetail'];\r\n                    sheet.setCellType(r, index, new TreeCellType(null, false, level, isDetail));\r\n                    sheet.getStyle(r, index).hAlign = 0;\r\n                    sheet.getStyle(r, index).textIndent = level + 2;\r\n                    for (let i = 0; i <= level; i++) {\r\n                        sheet.rowOutlines.group(r, 1);\r\n                    }\r\n                } else if (this.type === 'list' && groupFieldCache.length) {\r\n                    let filterCondition: any = {};\r\n                    if (groupRowCache.findIndex(x => x === r) >= 0) {\r\n                        continue;\r\n                    }\r\n                    for (let c = 0; c < colCount; c++) {\r\n                        if (sheet.getDataItem(r).hasOwnProperty(\"qdp_data_flag\") && (sheet.getDataItem(r)[\"qdp_data_flag\"] + '') === (4 + '')) {\r\n                            if (sheet.getFormatter(r, c) && (sheet.getFormatter(r, c).toString().indexOf('y') >= 0 || sheet.getFormatter(r, c).toString().indexOf('d') >= 0 || sheet.getFormatter(r, c).toString().indexOf('M') >= 0)) {\r\n                                sheet.setFormatter(r, c, '');\r\n                            }\r\n                        }\r\n                    }\r\n                    const addRowsCache = [];\r\n                    for (let i = 0; i < groupFieldCache.length; i++) {\r\n                        const addRowIndex = r + addRowsCache.length;\r\n                        // const groupField = groupFieldCache[i];\r\n                        const fieldIndex = this.dataColInfoArray.findIndex(x => x.name === groupFieldCache[i]);\r\n                        filterCondition = {};\r\n                        for (let f = 0; f <= i; f++) {\r\n                            filterCondition[groupFieldCache[f]] = sheet.getDataItem(addRowIndex)[groupFieldCache[f]];\r\n                        }\r\n                        const filterResult = filter(groupFieldValueCache, filterCondition);\r\n                        if ((!filterResult || !filterResult.length) && !sheet.getDataItem(addRowIndex).hasOwnProperty(\"qdp_data_flag\")) {\r\n                            // const groupFieldValue = {};\r\n                            // groupFieldValue[groupField] = filterCondition[groupField];\r\n                            groupFieldValueCache.push(filterCondition);\r\n                            const style = this.dataStyleArray[0][fieldIndex];\r\n                            style.hAlign = 0;\r\n                            style.cellType = null;\r\n                            style.backColor = '#F4F7FA';\r\n                            sheet.addRows(addRowIndex, 1);\r\n                            sheet.setRowHeight(addRowIndex, this.dataRowHeightArray[0]);\r\n                            sheet.setStyle(addRowIndex, index, style);\r\n                            sheet.getCell(addRowIndex, index).value(filterCondition[groupFieldCache[i]]);\r\n                            sheet.addSpan(addRowIndex, index, 1, (colCount - index));\r\n                            sheet.getCell(addRowIndex, index).textIndent((i + 1) * 2);\r\n                            groupTreeLevel[addRowIndex + ''] = { treeLevel: i, isDetail: 0 };\r\n                            if (i === (groupFieldCache.length - 1)) {\r\n                                groupTreeLevel[(addRowIndex + 1) + ''] = { treeLevel: groupFieldCache.length, isDetail: 1 };\r\n                            }\r\n                            rowCount += 1;\r\n                            addRowsCache.push(i);\r\n                            groupRowCache.push(addRowIndex);\r\n                        } else {\r\n                            if (sheet.getDataItem(addRowIndex).hasOwnProperty(\"qdp_data_flag\") && (sheet.getDataItem(addRowIndex)[\"qdp_data_flag\"] + '') === (3 + '')) {\r\n                                continue;\r\n                            }\r\n                            if (i === (groupFieldCache.length - 1)) {\r\n                                groupTreeLevel[(addRowIndex + 1) + ''] = { treeLevel: groupFieldCache.length, isDetail: 1 };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let r = 0; r < rowCount; r++) {\r\n            if (!groupTreeLevel.hasOwnProperty(r)) {\r\n                break;\r\n            }\r\n            for (let t = 0; t <= groupTreeLevel[r + ''].treeLevel; t++) {\r\n                sheet.rowOutlines.group(r, 1);\r\n            }\r\n            sheet.setCellType(r, index, new TreeCellType(null, false, groupTreeLevel[r + ''].treeLevel, groupTreeLevel[r + ''].isDetail));\r\n        }\r\n        if (this.type !== 'crosstab' && this.getShowFilterRow(schema)) {\r\n            this.filterRow(sheet);\r\n        }\r\n    }\r\n\r\n    getGroupField(groupColCache: any, schema: any) {\r\n        if (schema && schema.schemaValue && schema.schemaValue.columnOption && schema.schemaValue.columnOption.colList && schema.schemaValue.columnOption.colList.length) {\r\n            this.autoFitColumnIndex = 0;\r\n            schema.schemaValue.columnOption.colList.forEach((col: any) => {\r\n                this.recursionGetGroupColumn(groupColCache, col, null);\r\n            });\r\n        }\r\n    }\r\n\r\n    getIsRedColumns(schema: any, params: any) {\r\n        if (schema && schema.schemaValue && schema.schemaValue.columnOption && schema.schemaValue.columnOption.colList && schema.schemaValue.columnOption.colList.length) {\r\n            schema.schemaValue.columnOption.colList.forEach((col: any) => {\r\n                this.recursiveIsRedColumn(col, null, params);\r\n            });\r\n        }\r\n    }\r\n\r\n    getFormatField(fieldCache: any, schema: any) {\r\n        if (schema && schema.schemaValue && schema.schemaValue.columnOption && schema.schemaValue.columnOption.colList && schema.schemaValue.columnOption.colList.length) {\r\n            this.autoFitColumnIndex = 0;\r\n            schema.schemaValue.columnOption.colList.forEach((col: any) => {\r\n                this.recursionGetFormatColumn(fieldCache, col, null);\r\n            });\r\n        }\r\n    }\r\n\r\n    getShowHeaderSort(schema: any) {\r\n        try {\r\n            if (schema && schema.schemaValue && schema.schemaValue.otherOption && schema.schemaValue.otherOption.showHeaderSort != null && schema.schemaValue.otherOption.showHeaderSort != undefined) {\r\n                return schema.schemaValue.otherOption.showHeaderSort;\r\n            }\r\n            return true;\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getShowFilterRow(schema: any) {\r\n        try {\r\n            if (schema && schema.schemaValue && schema.schemaValue.otherOption && schema.schemaValue.otherOption.showFilterRow != null && schema.schemaValue.otherOption.showFilterRow != undefined) {\r\n                return schema.schemaValue.otherOption.showFilterRow;\r\n            }\r\n            return true;\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getMergeCell(schema: any) {\r\n        try {\r\n            if (schema && schema.schemaValue && schema.schemaValue.otherOption && schema.schemaValue.otherOption.mergeCell != null && schema.schemaValue.otherOption.mergeCell != undefined) {\r\n                return schema.schemaValue.otherOption.mergeCell;\r\n            }\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private recursionGetFormatColumn(fieldCache: any, column: any, childList: any[]) {\r\n        if (column) {\r\n            if (column.childList && column.childList.length) {\r\n                this.recursionGetFormatColumn(fieldCache, null, column.childList);\r\n            } else {\r\n                if (column.formatType == 1 && column.formatField) {\r\n                    fieldCache.push({ sourceField: column.bindField, formatField: column.formatField, formatter: column.formattor });\r\n                }\r\n            }\r\n        } else {\r\n            childList.forEach((col: any) => {\r\n                if (col.childList && col.childList.length) {\r\n                    this.recursionGetFormatColumn(fieldCache, null, col.childList);\r\n                } else {\r\n                    if (col.formatType == 1 && col.formatField) {\r\n                        fieldCache.push({ sourceField: col.bindField, formatField: col.formatField, formatter: col.formattor });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private recursionGetGroupColumn(groupColCache: any, column: any, childList: any[]) {\r\n        if (column) {\r\n            if (column.childList && column.childList.length) {\r\n                this.recursionGetGroupColumn(groupColCache, null, column.childList);\r\n            } else {\r\n                if (column.isGroup) {\r\n                    groupColCache.push(column.bindField);\r\n                }\r\n            }\r\n        } else {\r\n            childList.forEach((col: any) => {\r\n                if (col.childList && col.childList.length) {\r\n                    this.recursionGetGroupColumn(groupColCache, null, col.childList);\r\n                } else {\r\n                    if (col.isGroup) {\r\n                        groupColCache.push(col.bindField);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    logicFormat(formattor: any, cellValue: any) {\r\n        const str = formattor.split(';');\r\n        const real = str[0].split('/');\r\n        const disp = str[1].split('/');\r\n        for (let i = 0; i < real.length; i++) {\r\n            // tslint:disable-next-line:triple-equals\r\n            if (real[i] == (cellValue + '')) {\r\n                cellValue = disp[i];\r\n                break;\r\n            }\r\n        }\r\n        return cellValue;\r\n    }\r\n\r\n    filterRow(sheet: any) {\r\n        sheet.addRows(0, 1);\r\n        for (let i = 0; i < sheet.getRowCount(); i++) {\r\n            sheet.getCell(i, 0, GC.Spread.Sheets.SheetArea.rowHeader).value(i == 0 ? '' : i);\r\n        }\r\n        sheet.setRowHeight(0, this.dataRowHeightArray[0]);\r\n        for (let i = 0; i < sheet.getColumnCount(); i++) {\r\n            const s = new GC.Spread.Sheets.Style();\r\n            s.fromJSON(this.dataStyleArray[0][i].toJSON());\r\n            s.locked = false;\r\n            s.formatter = '@';\r\n            sheet.setStyle(0, i, s);\r\n            sheet.setCellType(0, i, new FilterCellType(sheet));\r\n        }\r\n        const filter = new GC.Spread.Sheets.Filter.HideRowFilter(new GC.Spread.Sheets.Range(1, 0, sheet.getRowCount(), sheet.getColumnCount()));\r\n        sheet.rowFilter(filter);\r\n        filter.filterButtonVisible(false);\r\n    }\r\n\r\n    linkField(spread: any, sheet: any) {\r\n        try {\r\n            const self = this;\r\n            const rowCount = sheet.getRowCount();\r\n            const colCount = sheet.getColumnCount();\r\n            // const footerCount = this.footerRowHeightArray.length;\r\n            for (let r = 1; r < (rowCount); r++) {\r\n                const dataItem = sheet.getDataItem(r);\r\n                if (dataItem.hasOwnProperty('dynamicPropSet') && dataItem.dynamicPropSet.hasOwnProperty('qdp_data_flag')) {\r\n                    continue;\r\n                }\r\n                for (let c = 0; c < colCount; c++) {\r\n                    const joinSearch = JSON.parse(this.jointsearchInfoList['joinSearch']);\r\n                    // tslint:disable-next-line:prefer-for-of\r\n                    for (let i = 0; i < joinSearch.length; i++) {\r\n                        const el = joinSearch[i];\r\n                        if (el.jointserachdisplaystyle === 2) {\r\n                            if (el.linkfield === this.dataColInfoArray[c].name) {\r\n                                if (!this.hyperLinkQuery[this.queryId]) {\r\n                                    this.hyperLinkQuery[this.queryId] = {};\r\n                                }\r\n                                this.hyperLinkQuery[this.queryId][c + ''] = el;\r\n                                const h1 = new GC.Spread.Sheets.CellTypes.HyperLink();\r\n                                h1.text(h1.format(sheet.getCell(r, c).value(), this.dataColInfoArray[c].formatter));\r\n                                h1.activeOnClick(true);\r\n                                h1.onClickAction(function () {\r\n                                    spread.commandManager().execute({\r\n                                        cmd: 'dropdownquery',\r\n                                        self: self\r\n                                    });\r\n                                });\r\n                                sheet.setCellType(r, c, h1, GC.Spread.Sheets.SheetArea.viewport);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            spread.commandManager().register('dropdownquery', {\r\n                canUndo: true,\r\n                execute: function (context, options, isUndo) {\r\n                    const row = context.getActiveSheet().getActiveRowIndex();\r\n                    const col = context.getActiveSheet().getActiveColumnIndex();\r\n                    for (const key in options.self.hyperLinkQuery[options.self.queryId]) {\r\n                        if (key === (col + '')) {\r\n                            const el = options.self.hyperLinkQuery[options.self.queryId][key];\r\n                            let entityParam = { 'id': 'null' };\r\n                            const paramMap = new Map<string, string>();\r\n                            const searchparas = JSON.parse(options.self.jointsearchInfoList['jointparam']).filter(x => x.functionid === el['id']);\r\n                            const joinParam = options.self.cache.get(RtfServices.getTabId(options.self.queryId) + 'joinSearch');\r\n                            let dataItem = { 'id': 'null' };\r\n                            if (joinParam.controlType === 'crosstab') { // äº¤åè¡¨\r\n                                // è·åè¡æ é¢çæ°æ®\r\n                                for (let i = joinParam.rowHeaderColInfo.start; i < joinParam.rowHeaderColInfo.end; i++) {\r\n                                    const value = context.getActiveSheet().getValue(row, i, GC.Spread.Sheets.SheetArea.viewport);\r\n                                    const name = context.getActiveSheet().getValue(joinParam.colHeaderRowInfo.start, i, GC.Spread.Sheets.SheetArea.colHeader);\r\n                                    const colInfo = joinParam.colInfos.find((x: any) => x.dimension === 1 && x.name === name).bindField;\r\n                                    dataItem[colInfo] = value;\r\n                                }\r\n                                // è·ååæ é¢çæ°æ®\r\n                                for (let i = joinParam.colHeaderRowInfo.start; i < joinParam.colHeaderRowInfo.end; i++) {\r\n                                    const value = context.getActiveSheet().getValue(i, col, GC.Spread.Sheets.SheetArea.colHeader);\r\n                                    const colInfo = joinParam.colInfos.filter((x: any) => x.dimension === 2)[i - joinParam.colHeaderRowInfo.start].bindField;\r\n                                    dataItem[colInfo] = value;\r\n                                }\r\n                                // è·åå¼æ é¢çæ°æ®\r\n                                const value = context.getActiveSheet().getValue(row, col, GC.Spread.Sheets.SheetArea.viewport);\r\n                                const name = context.getActiveSheet().getValue(joinParam.colHeaderRowInfo.end, col, GC.Spread.Sheets.SheetArea.colHeader);\r\n                                let colInfo = joinParam.colInfos.find((x: any) => x.dimension === 3 && x.name === name);\r\n                                if (colInfo) {\r\n                                    colInfo = colInfo.bindField;\r\n                                    dataItem[colInfo] = value;\r\n                                }\r\n                            } else {\r\n                                dataItem = context.getActiveSheet().getDataItem(row);\r\n                            }\r\n\r\n                            const currentSelectedItem = dataItem; // å½åéä¸­æ°æ®\r\n                            if (searchparas.length > 0) {\r\n                                searchparas.forEach(value => {\r\n                                    if (value.paravaluetype) {// è¡¨è¾¾å¼\r\n                                        if (value.paravalue.indexOf('getParameter(') >= 0) {\r\n                                            const parameterKey = value.paravalue.replace(/'/g, '').replace(/\"/g, '').replace(/getParameter\\(/g, '').replace(/\\)/g, '');\r\n                                            options.self.getQueryParameters(entityParam, paramMap, parameterKey, value.para);\r\n                                        } else {\r\n                                            entityParam[value.para] = currentSelectedItem[value.paravalue];\r\n                                            paramMap.set(value.para, currentSelectedItem[value.paravalue]);\r\n                                        }\r\n                                    } else {\r\n                                        entityParam[value.para] = value.paravalue;\r\n                                        paramMap.set(value.para, value.paravalue);\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                entityParam = currentSelectedItem;\r\n                            }\r\n                            const op: any = {\r\n                                ParentSessionId: options.self.cache.get('session'),\r\n                                EntityParam: entityParam\r\n                            };\r\n                            let tabId = '';\r\n                            if (el.searchtype === 'func') {\r\n                                // èæ¥å\r\n                                const openMenuoptions = {\r\n                                    'appType': 'menu',\r\n                                    'funcId': el.functioncode,\r\n                                    'tabId': EventBus.guid(),\r\n                                    'appId': '',\r\n                                    'appEntrance': '',\r\n                                    'entityParams': op.entityParam,\r\n                                    'queryStringParams': paramMap,\r\n                                    'isNewTab': true\r\n                                };\r\n                                tabId = RtfServices.getFuncId(openMenuoptions);\r\n                                options.self.cache.set(tabId ? tabId : options.self.queryId, op.EntityParam);\r\n                                const menuSwitchControl = Object.assign({}, openMenuoptions['entityParams'], RtfServices.getMenuSwitchControlParameter(tabId));\r\n                                openMenuoptions['entityParams'] = menuSwitchControl;\r\n                                // å¡çå¡è¿å»params\r\n                                gspframeworkService.rtf.func.openMenu(openMenuoptions);\r\n                            } else if (el.searchtype === 'app') {\r\n                                const appOption = {\r\n                                    appType: 'app',\r\n                                    appId: el.functioncode,\r\n                                    appEntrance: el.appEntrance,\r\n                                    funcId: '',\r\n                                    isReload: true,\r\n                                    tabId: EventBus.guid(),\r\n                                    entityParams: op.entityParam,\r\n                                    queryStringParams: paramMap\r\n                                };\r\n                                tabId = RtfServices.getFuncId(appOption);\r\n                                options.self.cache.set(tabId ? tabId : options.queryId, op.EntityParam);\r\n                                const menuSwitchControl = Object.assign({}, appOption['entityParams'], RtfServices.getMenuSwitchControlParameter(tabId));\r\n                                appOption['entityParams'] = menuSwitchControl;\r\n                                gspframeworkService.rtf.func.openMenu(appOption);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }, null, false, false, false, false);\r\n        } catch (e) { }\r\n    }\r\n\r\n    inSuiteLinkField(spread: any, sheet: any, extObj: any) {\r\n        try {\r\n            const self = this;\r\n            let data = null;\r\n            try {\r\n                if (this.lcpService.inSuiteDropDownInfo && typeof this.lcpService.inSuiteDropDownInfo == 'string') {\r\n                    data = JSON.parse(this.lcpService.inSuiteDropDownInfo);\r\n                }\r\n            } catch (e) {\r\n                throw e;\r\n            }\r\n            const rowCount = sheet.getRowCount();\r\n            const colCount = sheet.getColumnCount();\r\n            let rowDropDown = true;\r\n            const cacheRowDropDown = [];\r\n            const cacheCellDropDown = {};\r\n            // è§£æç¸å³æ°æ®\r\n            const {\r\n                click_events: clickEvents,\r\n                event_data: eventData,\r\n                double_click_event: dcEvent,\r\n                double_click_event_params: dcEventParams,\r\n                rc_event_ids: rcEventIds\r\n            } = data\r\n            if (dcEvent && !(\"{}\" == JSON.stringify(dcEvent)) && dcEventParams && !(\"{}\" == JSON.stringify(dcEventParams))) {\r\n                rowDropDown = true;\r\n                for (let key in dcEventParams) {\r\n                    cacheRowDropDown.push(key);\r\n                }\r\n            } else if (eventData && !(\"{}\" == JSON.stringify(eventData))) {\r\n                rowDropDown = false;\r\n                for (let key in eventData) {\r\n                    if (eventData[key]) {\r\n                        const cellIndex = [];\r\n                        cacheCellDropDown[key] = cellIndex;\r\n                        for (let key1 in eventData[key]) {\r\n                            cacheCellDropDown[key].push(key1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (let r = 1; r < (rowCount); r++) {\r\n                const dataItem = sheet.getDataItem(r);\r\n                if (dataItem.hasOwnProperty('dynamicPropSet') && dataItem.dynamicPropSet.hasOwnProperty('qdp_data_flag')) {\r\n                    continue;\r\n                }\r\n                for (let c = 0; c < colCount; c++) {\r\n                    if (rowDropDown) {\r\n                        for (let i = 0; i < cacheRowDropDown.length; i++) {\r\n                            if (r == (cacheRowDropDown[i] - 0)) {\r\n                                const h1 = new GC.Spread.Sheets.CellTypes.HyperLink();\r\n                                const formatter = sheet.getFormatter(r, c);\r\n                                h1.text(h1.format(sheet.getCell(r, c).value(), formatter));\r\n                                h1.activeOnClick(true);\r\n                                h1.onClickAction(function () {\r\n                                    spread.commandManager().execute({\r\n                                        cmd: 'dropdownquery',\r\n                                        self: self\r\n                                    });\r\n                                });\r\n                                sheet.setCellType(r, c, h1, GC.Spread.Sheets.SheetArea.viewport);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let key in cacheCellDropDown) {\r\n                            if ((r + '') === key) {\r\n                                for (let i = 0; i < cacheCellDropDown[key].length; i++) {\r\n                                    const h1 = new GC.Spread.Sheets.CellTypes.HyperLink();\r\n                                    const formatter = sheet.getFormatter(r, cacheCellDropDown[key][i]);\r\n                                    h1.text(h1.format(sheet.getCell(r, cacheCellDropDown[key][i]).value(), formatter));\r\n                                    h1.activeOnClick(true);\r\n                                    h1.onClickAction(function () {\r\n                                        spread.commandManager().execute({\r\n                                            cmd: 'dropdownquery',\r\n                                            self: self\r\n                                        });\r\n                                    });\r\n                                    sheet.setCellType(r, cacheCellDropDown[key][i], h1, GC.Spread.Sheets.SheetArea.viewport);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            spread.commandManager().register('dropdownquery', {\r\n                canUndo: true,\r\n                execute: function (context, options, isUndo) {\r\n                    const row = context.getActiveSheet().getActiveRowIndex();\r\n                    const col = context.getActiveSheet().getActiveColumnIndex();\r\n                    // åå»äºä»¶çé»è¾\r\n                    let event, params;\r\n                    // è¡ç¹å»æ°æ®\r\n                    if (dcEvent && !(\"{}\" == JSON.stringify(dcEvent)) && dcEventParams && !(\"{}\" == JSON.stringify(dcEventParams))) {\r\n                        event = dcEvent;\r\n                        // args.rowä¸ºè¡åºå·ï¼ä¸å\r\n                        params = dcEventParams[row];\r\n                        // å¦æeventDataæ°æ®ä¸ä¸ºç©ºï¼å¹¶ä¸å¯¹åºè¡çæ°æ®ä¹ä¸ä¸ºç©º\r\n                        // ååæ ¼æ°æ®\r\n                    } else if (eventData && !(\"{}\" == JSON.stringify(eventData)) && eventData[row] && !(\"{}\" == JSON.stringify(eventData[row]))) {\r\n                        let thisEventId;\r\n                        // å¦æå¯¹åºè¡åå«-1ï¼åå-1ä¸­çæ°æ®, å¦ååå¯¹åºåå·çæ°æ®\r\n                        // args.colä¸ºååºå·\r\n                        let thisEventData = eventData[row][-1] || eventData[row][col];\r\n                        if (thisEventData && !(\"{}\" == JSON.stringify(thisEventData))) {\r\n                            if (!rcEventIds && rcEventIds.length) {\r\n                                const obj = {};\r\n                                for (let key in thisEventData) {\r\n                                    if (rcEventIds.findIndex((el: any) => el == key) < 0) {\r\n                                        obj[key] = thisEventData[key];\r\n                                    }\r\n                                }\r\n                                thisEventData = obj;\r\n                            }\r\n                            let index = 0;\r\n                            for (let key in thisEventData) {\r\n                                if (index == 0) {\r\n                                    thisEventId = key;\r\n                                } else {\r\n                                    break;\r\n                                }\r\n                                index++;\r\n                            }\r\n                            params = thisEventData[thisEventId];\r\n                        }\r\n\r\n                        // æ ¹æ®event idè·åevent\r\n                        if (thisEventId != null && thisEventId != undefined) {\r\n                            event = clickEvents[thisEventId] && !(\"{}\" == JSON.stringify(clickEvents[thisEventId])) ? clickEvents[thisEventId].event : {};\r\n                        }\r\n                    }\r\n                    let message;\r\n                    if (!(\"{}\" == JSON.stringify(event)) && !(\"{}\" == JSON.stringify(params))) {\r\n                        // è¿åæ°æ®\r\n                        message = { type: 'cellAction', event, params, defaults: data.defaults };\r\n                    }\r\n                    if (message) {\r\n                        try {\r\n                            extObj.inSuiteWindow().postMessage(message, location.origin)\r\n                        } catch (e) {\r\n                            console.log(e);\r\n                        }\r\n                    }\r\n                }\r\n            }, null, false, false, false, false);\r\n        } catch (e) { }\r\n    }\r\n\r\n    private getQueryParameters(entityParam: any, paramMap: any, parameterKey: any, key: any) {\r\n        try {\r\n            const tab = gspframeworkService.rtf.session.getCommonVariable();\r\n            if (tab && tab.tabId) {\r\n                const tid = tab.tabId + RtfServices.getInSuiteFrmUUID();\r\n                if (this.cache.get(tid) && this.cache.get(tid)[parameterKey]) {\r\n                    entityParam[key] = this.cache.get(tid)[parameterKey];\r\n                    paramMap.set(key, this.cache.get(tid)[parameterKey]);\r\n                }\r\n            }\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    bindSelectChanged(spread: any, queryId: any) {\r\n        const self = this;\r\n        spread.bind(GC.Spread.Sheets.Events.SelectionChanging, function (e: any, args: any) {\r\n            const tempData = {};\r\n            const selection = args.newSelections.pop();\r\n            const sheetArea = args.sheetArea === 0 ? 'sheetCorner' : args.sheetArea === 1 ? 'columnHeader' : args.sheetArea === 2 ? 'rowHeader' : 'viewPort';\r\n            if (selection) {\r\n                tempData['SpreadEvent'] = GC.Spread.Sheets.Events.SelectionChanging;\r\n                tempData['sheetArea'] = sheetArea;\r\n                tempData['row'] = selection.row;\r\n                tempData['column'] = selection.col;\r\n                tempData['rowCount'] = selection.rowCount;\r\n                tempData['colCount'] = selection.colCount;\r\n                this.selectChanging = tempData;\r\n            }\r\n        });\r\n        spread.bind(GC.Spread.Sheets.Events.CellClick, function (e: any, args: any) {\r\n            // è§£æå½åéä¸­çæ°æ®\r\n            const dataItems = [];\r\n            // èå¨åæ°\r\n            let linkageParams = {};\r\n            for (let rowIndex = 0; rowIndex < this.selectChanging.rowCount; rowIndex++) {\r\n                if (self.joinParam.controlType !== 'crosstab') {\r\n                    const dataItem = args.sheet.getDataItem(rowIndex + this.selectChanging.row);\r\n                    linkageParams = dataItem;\r\n                    dataItems.push(dataItem);\r\n                } else {\r\n                    if (this.selectChanging.column === -1) {\r\n                        this.selectChanging.colCount = this.selectChanging.colCount + 1;\r\n                    }\r\n                    for (let colIndex = 0; colIndex < this.selectChanging.colCount; colIndex++) {\r\n                        const dataItem = {};\r\n                        if (self.joinParam.controlType === 'crosstab') { // äº¤åè¡¨\r\n                            if (args.sheetArea === 1) {\r\n                                this.selectChanging.row = 0;\r\n                            }\r\n                            if (colIndex + this.selectChanging.column < self.joinParam.rowHeaderColInfo.end) {\r\n                                continue;\r\n                            }\r\n                            // è·åè¡æ é¢çæ°æ®\r\n                            for (let i = self.joinParam.rowHeaderColInfo.start; i < self.joinParam.rowHeaderColInfo.end; i++) {\r\n                                const value = args.sheet.getValue(rowIndex + this.selectChanging.row, i, GC.Spread.Sheets.SheetArea.viewport);\r\n                                const name = args.sheet.getValue(self.joinParam.colHeaderRowInfo.start, i, GC.Spread.Sheets.SheetArea.colHeader);\r\n                                const colInfo = self.joinParam.colInfos.find((x: any) => x.dimension === 1 && x.name === name).bindField;\r\n                                dataItem[colInfo] = value;\r\n                            }\r\n                            // è·ååæ é¢çæ°æ®\r\n                            for (let i = self.joinParam.colHeaderRowInfo.start; i < self.joinParam.colHeaderRowInfo.end; i++) {\r\n                                const value = args.sheet.getValue(i, colIndex + this.selectChanging.column, GC.Spread.Sheets.SheetArea.colHeader);\r\n                                const colInfo = self.joinParam.colInfos.filter((x: any) => x.dimension === 2)[i - self.joinParam.colHeaderRowInfo.start].bindField;\r\n                                dataItem[colInfo] = value;\r\n                            }\r\n                            // è·åå¼æ é¢çæ°æ®\r\n                            const value = args.sheet.getValue(rowIndex + this.selectChanging.row, colIndex + this.selectChanging.column, GC.Spread.Sheets.SheetArea.viewport);\r\n                            const name = args.sheet.getValue(self.joinParam.colHeaderRowInfo.end, colIndex + this.selectChanging.column, GC.Spread.Sheets.SheetArea.colHeader);\r\n\r\n                            const colInfo = self.joinParam.colInfos.find((x: any) => x.dimension === 3 && x.name === name).bindField;\r\n                            dataItem[colInfo] = value;\r\n                        }\r\n                        linkageParams = dataItem;\r\n                        dataItems.push(dataItem);\r\n                    }\r\n                }\r\n            }\r\n            // spread èå¨äºä»¶\r\n            EventBus.dispatch(queryId + '_spread_change', linkageParams);\r\n        });\r\n    }\r\n\r\n    setSortCellType(sheet: any, schema: any, qdpView: any) {\r\n        const self = this;\r\n        const header = sheet.getRowCount(GC.Spread.Sheets.SheetArea.colHeader);\r\n        for (let i = 0; i < sheet.getColumnCount(); i++) {\r\n            const span = sheet.getSpan(header - 1, i, GC.Spread.Sheets.SheetArea.colHeader);\r\n            if (span && span.rowCount > 1) {\r\n                sheet.setCellType(header - span.rowCount, i, new SortCellType(self.columnSort.bind(self), schema, qdpView), GC.Spread.Sheets.SheetArea.colHeader);\r\n            } else {\r\n                sheet.setCellType(header - 1, i, new SortCellType(self.columnSort.bind(self), schema, qdpView), GC.Spread.Sheets.SheetArea.colHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    mergeCell(sheet: any, schema: any) {\r\n        if (!this.getMergeCell(schema)) {\r\n            return;\r\n        }\r\n        const groupFieldCache1 = [];\r\n        this.getGroupField(groupFieldCache1, schema);\r\n        if (groupFieldCache1.length) {\r\n            return;\r\n        }\r\n        const columnCount = sheet.getColumnCount();\r\n        const rowCount = sheet.getRowCount();\r\n        let beginRowIndex = 0;\r\n        if (this.getShowFilterRow(schema)) {\r\n            beginRowIndex = 1;\r\n        }\r\n        // æ£æ¥åæ°\r\n        if (columnCount < 1 || (rowCount - beginRowIndex) < 1) {\r\n            return;\r\n        }\r\n        const rowSpans = {};\r\n        let curCellValues = '';\r\n        let currentName = '';\r\n        let key = '';\r\n        for (let row = beginRowIndex; row < rowCount; row++) {\r\n            if (sheet.getDataItem(row).hasOwnProperty(\"qdp_data_flag\") &&\r\n                (\r\n                    (sheet.getDataItem(row)[\"qdp_data_flag\"] + '') === (4 + '')\r\n                    || (sheet.getDataItem(row)[\"qdp_data_flag\"] + '') === (3 + '')\r\n                    || (sheet.getDataItem(row)[\"qdp_data_flag\"] + '') === (2 + '')\r\n                    || (sheet.getDataItem(row)[\"qdp_data_flag\"] + '') === (1 + '')\r\n                )) {\r\n                continue;\r\n            }\r\n            for (let col = 0; col < columnCount; col++) {\r\n                currentName = sheet.getCell(row, col).value();\r\n                if (col == 0) {\r\n                    key = currentName;\r\n                    if (rowSpans.hasOwnProperty(key)) {\r\n                        rowSpans[key].rowCount = row - rowSpans[key].row + 1;\r\n                    } else {\r\n                        rowSpans[key] = { 'row': row, 'rowCount': 1, 'col': col, 'colCount': 1 };\r\n                    }\r\n                } else {\r\n                    curCellValues = '';\r\n                    for (let i = 0; i <= col; i++) {\r\n                        curCellValues += sheet.getCell(row, i).value();\r\n                        curCellValues += \"_&_\";\r\n                    }\r\n                    if (rowSpans.hasOwnProperty(curCellValues)) {\r\n                        rowSpans[curCellValues].rowCount = row - rowSpans[curCellValues].row + 1;\r\n                    } else {\r\n                        rowSpans[curCellValues] = { 'row': row, 'rowCount': 1, 'col': col, 'colCount': 1 };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let k in rowSpans) {\r\n            if ((rowSpans[k].rowCount == 1 && rowSpans[k].colCount == 1) == false) {\r\n                sheet.addSpan(rowSpans[k].row, rowSpans[k].col, rowSpans[k].rowCount, rowSpans[k].colCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    private columnSort(index: any, sheet: any, schema: any, qdpView: any) {\r\n        const loading = this.loadService.show({ container: 'body' });\r\n        try {\r\n            const header = sheet.getRowCount(GC.Spread.Sheets.SheetArea.colHeader);\r\n            if (schema && schema.schemaValue && schema.schemaValue.columnOption && schema.schemaValue.columnOption.colList && schema.schemaValue.columnOption.colList.length) {\r\n                let cell = null;\r\n                const span = sheet.getSpan(header - 1, index, GC.Spread.Sheets.SheetArea.colHeader);\r\n                if (span && span.rowCount > 1) {\r\n                    cell = sheet.getCell(header - span.rowCount, index, GC.Spread.Sheets.SheetArea.colHeader);\r\n                } else {\r\n                    cell = sheet.getCell(header - 1, index, GC.Spread.Sheets.SheetArea.colHeader);\r\n                }\r\n                if (schema && schema.isPrefab === 1) {\r\n                    loading.close();\r\n                    cell.tag(0);\r\n                    sheet.invalidateLayout();\r\n                    sheet.repaint();\r\n                    this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));\r\n                    return;\r\n                }\r\n                if (schema.isProtected === 1 || schema.isProtected === '1') {\r\n                    loading.close();\r\n                    cell.tag(0);\r\n                    sheet.invalidateLayout();\r\n                    sheet.repaint();\r\n                    this.msgService.info(this.localizeService.getValue('ideCmp.schemaManager.message.validate.isProtected'));\r\n                    return;\r\n                }\r\n                const colList = schema.schemaValue.columnOption.colList;\r\n                const params = {\r\n                    index: index,\r\n                    cell: cell,\r\n                    colIndex: 0,\r\n                    sortInfo: { sortIndex: 0, bindField: '' },\r\n                    isText: []\r\n                };\r\n\r\n                // tslint:disable-next-line:prefer-for-of\r\n                for (let i = 0; i < colList.length; i++) {\r\n                    this.recursiveColumnSortIndex(colList[i], null, params);\r\n                }\r\n                // tslint:disable-next-line:prefer-for-of\r\n                for (let i = 0; i < colList.length; i++) {\r\n                    this.recursiveColumnSort(colList[i], null, params);\r\n                }\r\n                if (params.isText.length) {\r\n                    loading.close();\r\n                    cell.tag(0);\r\n                    sheet.invalidateLayout();\r\n                    sheet.repaint();\r\n                    this.msgService.warning(params.isText[0] + ' ' + this.localizeService.getValue('ideCmp.schemaManager.message.validate.textColumnSort'));\r\n                    return;\r\n                }\r\n                const newSchema = JSON.parse(JSON.stringify(schema));\r\n                newSchema.schemaValue.columnOption.colList = colList;\r\n                newSchema.schemaValue = JSON.stringify(newSchema.schemaValue);\r\n                this.schemaManager.saveSchema({ schema: JSON.stringify(newSchema), groupType: qdpView.groupType }, '').subscribe(data => {\r\n                    loading.close();\r\n                    qdpView.initSpread(qdpView.queryId, newSchema.id, qdpView.controlType, qdpView.qoManagerCode, qdpView.pageIndex, qdpView.queryRelativeUrl, qdpView.conditionExpression, qdpView.groupType, qdpView.voId, true);\r\n                }, (error: any) => {\r\n                    loading.close();\r\n                    this.formErrorService.exception(error.Message, error);\r\n                });\r\n            } else {\r\n                loading.close();\r\n                this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));\r\n                return;\r\n            }\r\n        } catch (e) {\r\n            loading.close();\r\n        }\r\n    }\r\n\r\n    private recursiveColumnSortIndex(col, colList, params) {\r\n        if (colList == null) {\r\n            if (col.childList && col.childList.length) {\r\n                this.recursiveColumnSortIndex(null, col.childList, params);\r\n            } else {\r\n                if (col.sort !== 0 && col['sortIndex'] != null && col['sortIndex'] !== undefined && col.sortIndex > params.sortInfo.sortIndex) {\r\n                    params.sortInfo.sortIndex = col['sortIndex'];\r\n                    params.sortInfo.bindField = col.bindField;\r\n                }\r\n            }\r\n        } else {\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < colList.length; i++) {\r\n                if (colList[i].childList && colList[i].childList.length) {\r\n                    this.recursiveColumnSortIndex(null, colList[i].childList, params);\r\n                } else {\r\n                    if (colList[i].sort !== 0 && colList[i]['sortIndex'] != null && colList[i]['sortIndex'] !== undefined && colList[i].sortIndex > params.sortInfo.sortIndex) {\r\n                        params.sortInfo.sortIndex = colList[i]['sortIndex'];\r\n                        params.sortInfo.bindField = colList[i].bindField;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private recursiveColumnSort(col, colList, params) {\r\n        if (colList == null) {\r\n            if (col.childList && col.childList.length) {\r\n                this.recursiveColumnSort(null, col.childList, params);\r\n            } else {\r\n                if (params.colIndex === params.index) {\r\n                    if (col.type && col.type.toLowerCase() === 'text') {\r\n                        params.isText.push(col.bindField);\r\n                    } else {\r\n                        switch (params.cell.tag()) {\r\n                            case 0:\r\n                                col.sort = 0;\r\n                                col['sortIndex'] = 0;\r\n                                break;\r\n                            case 1:\r\n                                col.sort = 1;\r\n                                col['sortIndex'] = col['sortIndex'] !== null && col['sortIndex'] !== undefined && col['sortIndex'] > 0 ? col['sortIndex'] : col.bindField === params.sortInfo.bindField ? params.sortInfo.sortIndex : params.sortInfo.sortIndex + 1;\r\n                                break;\r\n                            case 2:\r\n                                col.sort = 2;\r\n                                col['sortIndex'] = col['sortIndex'] !== null && col['sortIndex'] !== undefined && col['sortIndex'] > 0 ? col['sortIndex'] : col.bindField === params.sortInfo.bindField ? params.sortInfo.sortIndex : params.sortInfo.sortIndex + 1;\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                params.colIndex++;\r\n            }\r\n        } else {\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < colList.length; i++) {\r\n                if (colList[i].childList && colList[i].childList.length) {\r\n                    this.recursiveColumnSort(null, colList[i].childList, params);\r\n                } else {\r\n                    if (params.colIndex === params.index) {\r\n                        if (colList[i].type && colList[i].type.toLowerCase() === 'text') {\r\n                            params.isText.push(colList[i].bindField);\r\n                        } else {\r\n                            switch (params.cell.tag()) {\r\n                                case 0:\r\n                                    colList[i].sort = 0;\r\n                                    colList[i]['sortIndex'] = 0;\r\n                                    break;\r\n                                case 1:\r\n                                    colList[i].sort = 1;\r\n                                    colList[i]['sortIndex'] = colList[i]['sortIndex'] !== null && colList[i]['sortIndex'] !== undefined && colList[i]['sortIndex'] > 0 ? colList[i]['sortIndex'] : colList[i].bindField === params.sortInfo.bindField ? params.sortInfo.sortIndex : params.sortInfo.sortIndex + 1;\r\n                                    break;\r\n                                case 2:\r\n                                    colList[i].sort = 2;\r\n                                    colList[i]['sortIndex'] = colList[i]['sortIndex'] !== null && colList[i]['sortIndex'] !== undefined && colList[i]['sortIndex'] > 0 ? colList[i]['sortIndex'] : colList[i].bindField === params.sortInfo.bindField ? params.sortInfo.sortIndex : params.sortInfo.sortIndex + 1;\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                    params.colIndex++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private recursiveIsRedColumn(col, colList, params) {\r\n        if (colList == null) {\r\n            if (col.childList && col.childList.length) {\r\n                this.recursiveIsRedColumn(null, col.childList, params);\r\n            } else {\r\n                if (col.isRed) {\r\n                    params.isRedColumns.push({\r\n                        colIndex: params.colIndex\r\n                    });\r\n                }\r\n                params.colIndex++;\r\n            }\r\n        } else {\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < colList.length; i++) {\r\n                if (colList[i].childList && colList[i].childList.length) {\r\n                    this.recursiveIsRedColumn(null, colList[i].childList, params);\r\n                } else {\r\n                    if (colList[i].isRed) {\r\n                        params.isRedColumns.push({\r\n                            colIndex: params.colIndex\r\n                        });\r\n                    }\r\n                    params.colIndex++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private isNumber(val) {\r\n        if (parseFloat(val).toString() == \"NaN\") {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}","import { Observable, Subject } from \"rxjs\";\r\nimport { RenderOption } from \"../entity/RenderOption\";\r\nimport { ParameterUtils } from \"../util/parameter.utils\";\r\nimport { RenderExtendsUtils } from \"../util/render.extends.utils\";\r\nimport { SchemaUtils } from \"../util/schema.utils\";\r\nimport { ServicesUtils } from \"../util/services.utils\";\r\nimport { SpreadStyleUtils } from \"../util/spread.style.utils\";\r\nimport { RtfServices } from '@qdp/common';\r\n\r\ndeclare var GC: any;\r\n\r\nexport class BaseRender {\r\n    queryId: any;\r\n    type: any;\r\n    utils = new Map();\r\n    autoFitColumnIndex = 0;\r\n    cache: any;\r\n    msgService: any;\r\n    lcpService: any;\r\n    localizeService: any;\r\n    schemaManager: any;\r\n    formErrorService: any;\r\n    loadService: any;\r\n    funcInfoCache: any;\r\n    serviceCache: any;\r\n    isSchemaSelectChanged = false;\r\n    tabId: any;\r\n\r\n    constructor(_queryId: any, _controlType: any, _jointsearchInfoList?: any, _funcInfoCache?: any, _serviceCache?: any) {\r\n        this.tabId = RtfServices.getTabId(_queryId);\r\n        this.queryId = _queryId;\r\n        this.type = _controlType;\r\n        this.funcInfoCache = _funcInfoCache;\r\n        this.serviceCache = _serviceCache;\r\n        this.baseRenderInit(_queryId, _controlType, _jointsearchInfoList, _funcInfoCache);\r\n    }\r\n\r\n    private baseRenderInit(_queryId: any, _controlType: any, _jointsearchInfoList?: any, _funcInfoCache?: any) {\r\n        const parameterUtils = new ParameterUtils(_queryId, _funcInfoCache, this.serviceCache);\r\n        const schemaUtils = new SchemaUtils(this.serviceCache);\r\n        const spreadStyleUtils = new SpreadStyleUtils(_queryId, _controlType, _jointsearchInfoList, this.serviceCache);\r\n        const renderExtendsUtils = new RenderExtendsUtils(_queryId);\r\n        this.msgService = this.serviceCache.msgService; \r\n        this.cache = this.serviceCache.cacheService; \r\n        this.lcpService = this.serviceCache.lcpService; \r\n        this.loadService = this.serviceCache.loadService; \r\n        this.localizeService = this.serviceCache.localizeService; \r\n        this.schemaManager = this.serviceCache.schemaManagerService; \r\n        this.formErrorService = this.serviceCache.formErrorService; \r\n        this.queryId = _queryId;\r\n        this.utils.set('parameter', parameterUtils);\r\n        this.utils.set('schema', schemaUtils);\r\n        this.utils.set('spreadStyle', spreadStyleUtils);\r\n        this.utils.set('renderExtends', renderExtendsUtils);\r\n        this.utils.set('queryId', _queryId);\r\n    }\r\n\r\n    getData(params: any, queryRelativeUrl: any): Observable<any> {\r\n        this.cache.set(this.queryId + 'param', params);\r\n        return this.lcpService.getData(params, queryRelativeUrl);\r\n    }\r\n\r\n    changeData(data: any, value: any) {\r\n        if (data && data.data && data.dynamicCols && value) {\r\n            if (value.schemaValue.columnOption && value.schemaValue.columnOption.colList && value.schemaValue.columnOption.colList.length) {\r\n                const columns = value.schemaValue.columnOption.colList.filter(x => x.type === 'enum');\r\n                if (columns && columns.length > 0) {\r\n                    data.data.forEach(x => {\r\n                        columns.forEach(y => {\r\n                            const orginValue = x[y.bindField];\r\n                            let showValue = orginValue;\r\n                            if (data.resultEnumItems) {\r\n                                const resultEnumItem = data.resultEnumItems.find(resultEnumItem => resultEnumItem.enumName === y.bindField);\r\n                                if (resultEnumItem) {\r\n                                    const findShowValue = resultEnumItem.resultEnumInfoList.find(resultEnum => resultEnum.key === orginValue);\r\n                                    if (findShowValue) {\r\n                                        showValue = y.showType === '0' ? findShowValue.key : y.showType === '1' ? findShowValue.code : findShowValue.name;\r\n                                    }\r\n                                }\r\n                            }\r\n                            x[y.bindField] = showValue;\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * äºå¼äººåèªå®ä¹æ ¼å¼æ¹æ¡å¤ç\r\n     */\r\n    operateCustomFormatSchema(data: any, obj: RenderOption) {\r\n        if (data.customFormatScheme) {\r\n            obj.customFormatScheme = data.customFormatScheme;\r\n            this.schemaManager.customSchema[obj.groupType ? obj.groupType : obj.queryId] = data.customFormatScheme;\r\n            let customSchema = null;\r\n            if (obj.schemaId === '1') {\r\n                customSchema = this.schemaManager.mergeCustomSchema(obj.groupType ? obj.groupType : obj.queryId, obj.queryId);\r\n            }\r\n            if (customSchema && customSchema.schemaValue) {\r\n                ServicesUtils.setServices(RtfServices.getTabId(obj.queryId) + 'customScheme', JSON.stringify(customSchema.schemaValue));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * å¤çåé¡µä¿¡æ¯\r\n     */\r\n    operatePagination(obj: RenderOption, params: any) {\r\n        const self = this;\r\n        if (obj.controlType === 'list') {\r\n            let pageSize = 0;\r\n            if (obj.schemaId !== '1' && self.schemaManager.schemaList && self.schemaManager.schemaList[obj.schemaId]) {\r\n                if (typeof self.schemaManager.schemaList[obj.schemaId].schemaValue === \"string\") {\r\n                    self.schemaManager.schemaList[obj.schemaId].schemaValue = JSON.parse(self.schemaManager.schemaList[obj.schemaId].schemaValue);\r\n                }\r\n                if (self.schemaManager.schemaList[obj.schemaId].schemaValue.otherOption.loadDataType !== 0) {\r\n                    pageSize = self.schemaManager.schemaList[obj.schemaId].schemaValue.otherOption.pageSize;\r\n                }\r\n            } else {\r\n                if (obj.schemaId === '1' && self.schemaManager.preSchema && self.schemaManager.preSchema.schemaValue.otherOption.loadDataType !== 0) {\r\n                    pageSize = self.schemaManager.preSchema.schemaValue.otherOption.pageSize;\r\n                }\r\n            }\r\n            if (pageSize !== 0) {\r\n                params['pageSize'] = pageSize;\r\n                params['pageIndex'] = !obj.pageIndex ? 1 : obj.pageIndex;\r\n            }\r\n        }\r\n    }\r\n\r\n    titleVariablesReplace(sheet: any, data: any) {\r\n        const colCount = sheet.getColumnCount(GC.Spread.Sheets.SheetArea.colHeader);\r\n        const rowCount = sheet.getRowCount(GC.Spread.Sheets.SheetArea.colHeader);\r\n        if (data && data.variables) {\r\n            for (let r = 0; r < rowCount; r++) {\r\n                for (let c = 0; c < colCount; c++) {\r\n                    sheet.setValue(r, c,\r\n                        this.variablesReplace(sheet.getValue(r, c, GC.Spread.Sheets.SheetArea.colHeader), data),\r\n                        GC.Spread.Sheets.SheetArea.colHeader);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    footerVariablesReplace(sheet: any, data: any) {\r\n        const rowCount = sheet.getRowCount();\r\n        const colCount = sheet.getColumnCount();\r\n        if (this.utils.get('spreadStyle').footerDataArray && this.utils.get('spreadStyle').footerDataArray.length) {\r\n            for (let r = 0; r < this.utils.get('spreadStyle').footerDataArray.length; r++) {\r\n                for (let c = 0; c < colCount; c++) {\r\n                    sheet.setValue(r + (rowCount - this.utils.get('spreadStyle').footerDataArray.length), c,\r\n                        this.variablesReplace(this.utils.get('spreadStyle').footerDataArray[r][c], data));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private variablesReplace(cellValue: any, data: any) {\r\n        if (data && data.variables) {\r\n            Object.keys(data.variables).forEach(key => {\r\n                const reg = new RegExp(key, 'g');\r\n                if (cellValue) {\r\n                    cellValue = cellValue.replace(reg, data.variables[key]);\r\n                }\r\n            });\r\n        }\r\n        return cellValue;\r\n    }\r\n\r\n    errorHandle(spread: any, errmsg: any) {\r\n        if (spread.getActiveSheet()) {\r\n            spread.removeSheet(0);\r\n        }\r\n        spread.options.tabStripVisible = false;\r\n        this.msgService.warning(errmsg);\r\n        return;\r\n    }\r\n}","import { EventBus } from \"@qdp/common\";\r\nimport { RtfServices } from \"@qdp/common\";\r\nimport { RenderOption } from \"../entity/RenderOption\";\r\nimport { BaseRender } from \"./base-render\";\r\n\r\ndeclare var GC: any;\r\n\r\nexport class CrosstabRender extends BaseRender {\r\n\r\n    constructor(_queryId: any, _controlType: any, _jointsearchInfoList?: any, _funcInfoCache?: any, _serviceCache?: any) {\r\n        super(_queryId, _controlType, _jointsearchInfoList, _funcInfoCache, _serviceCache);\r\n        this.crosstabInit();\r\n    }\r\n\r\n    private crosstabInit() {\r\n\r\n    }\r\n\r\n    /**\r\n     * æ¸²æ\r\n     * @param obj åæ°éç½®é¡¹\r\n     */\r\n    render(obj: RenderOption) {\r\n        const self = this;\r\n        this.queryId = obj.queryId;\r\n        obj.schemaId = obj.schemaId === 'prefab' ? '1' : obj.schemaId;\r\n        this.utils.get('schema').getSchemaInfo(obj).subscribe((schemaValue: any) => {\r\n            if (schemaValue) {\r\n                obj['schemaId'] = schemaValue.id;\r\n                obj['schemaValue'] = schemaValue;\r\n                // this.currentSchemaValueChanger.next(schemaValue);\r\n                EventBus.dispatch('schemaValueChanged', schemaValue);\r\n                let delay = schemaValue.schemaValue.otherOption.delay;\r\n                const interval = schemaValue.schemaValue.otherOption.interval;\r\n\r\n                const index = self.funcInfoCache.firstLoadCache.findIndex(el => el === this.tabId);\r\n                const firstLoad = schemaValue.schemaValue.otherOption.firstLoad;\r\n                if (index < 0 && this.isSchemaSelectChanged === false) {\r\n                    if (firstLoad === false) {\r\n                        self.funcInfoCache.firstLoadCache.push(this.tabId);\r\n                        obj.loading.close();\r\n                        if (obj.spread.getActiveSheet()) {\r\n                            obj.spread.getActiveSheet().deleteRows(0, obj.spread.getActiveSheet().getRowCount());\r\n                            obj.spread.getActiveSheet().options.colHeaderVisible = false;\r\n                            obj.spread.invalidateLayout();\r\n                            obj.spread.repaint();\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                if (!delay) {\r\n                    delay = 0;\r\n                }\r\n                setTimeout(() => {\r\n                    this.getRenderDataForCrosstab.call(this, Object.assign({}, obj));\r\n                    if (interval > 0) {\r\n                        setInterval(() => {\r\n                            this.getRenderDataForCrosstab.call(this, Object.assign({}, obj));\r\n                        }, interval * 1000);\r\n                    }\r\n                }, delay * 1000);\r\n            } else {\r\n                obj['schemaId'] = '1';\r\n                this.getRenderDataForCrosstab.call(this, Object.assign({}, obj));\r\n            }\r\n        });\r\n    }\r\n\r\n    private getRenderDataForCrosstab(obj: RenderOption) {\r\n        const self = this;\r\n        obj.schemaId = obj.schemaId ? obj.schemaId : (obj.schemaValue && obj.schemaValue.id ? obj.schemaValue.id : '1');\r\n        if (!obj.formData) {\r\n            let params = this.utils.get('parameter').createParameters(Object.assign({}, obj, { pageIndex: 0, pageSize: 0 }));\r\n            params['queryId'] = obj.queryId ? obj.queryId : '';\r\n            // æ¥è¯¢æ°æ®åäºä»¶\r\n            params = this.utils.get('renderExtends').runRenderExtends('beforeQueryData', this.localizeService.getValue('spread.message.extend.query.before'), params, obj.spread);\r\n\r\n            try {\r\n                this.cache.set(self.tabId, JSON.parse(params['entityData']));\r\n                this.cache.set(self.tabId + 'extendCond', params['extendCond']);\r\n            } catch (e) { }\r\n\r\n            self.lcpService.getCol(params, obj.queryRelativeUrl).subscribe(resultData => {\r\n                const dynamicColumns = (resultData && resultData.dynamicCols) || [];\r\n                self.initJoinParams(obj, dynamicColumns);\r\n                self.schemaManager.setColInfo(dynamicColumns);\r\n                if (obj.schemaId === '1' || !obj.schemaId) {\r\n                    obj.loading.close();\r\n                    return self.errorHandle(obj.spread, this.localizeService.getValue('spread.message.validate.schemaInfo'));\r\n                }\r\n                self.lcpService.getCrosstabTemplate(params, obj.queryRelativeUrl).subscribe((template: any) => {\r\n                    if (!template || !template.sheets || !template.sheets.sheet1 || !template.sheets.sheet1.data || !template.sheets.sheet1.data.dataTable || !template.sheets.sheet1.data.dataTable['0']) {\r\n                        obj.loading.close();\r\n                        return self.errorHandle(obj.spread, this.localizeService.getValue('spread.message.validate.nodata'));\r\n                    }\r\n                    self.renderCrossTable(Object.assign({}, obj, { template }));\r\n\r\n                    const event = RtfServices.getMenuSwitchControlEvent();\r\n                    if (event && typeof event === 'object') {\r\n                        event.next('ok');\r\n                    }\r\n\r\n                    obj.loading.close();\r\n                    this.utils.get('spreadStyle').bindSelectChanged(obj.spread, obj.queryId);\r\n                }, (error: any) => {\r\n                    self.formErrorService.exception(error.Message, error);\r\n                    obj.loading.close();\r\n                });\r\n            }, (error: any) => {\r\n                self.formErrorService.exception(error.Message, error);\r\n                obj.loading.close();\r\n            });\r\n\r\n            this.cache.set('schema_schemaid' + obj.queryId, obj.schemaId);\r\n        }\r\n    }\r\n\r\n    private renderCrossTable(obj: RenderOption) {\r\n        obj.spread.suspendEvent();\r\n        obj.spread.suspendPaint();\r\n        if (obj.template) {\r\n            obj.spread.fromJSON(obj.template);\r\n            obj.spread.getActiveSheet().rowOutlines.direction(GC.Spread.Sheets.Outlines.OutlineDirection.backward);\r\n            const row = obj.spread.getActiveSheet().getRowCount();\r\n            for (let i = 0; i < row; i++) {\r\n                const cellType = obj.spread.getActiveSheet().getCellType(i, 0);\r\n                if (cellType && cellType.typeName === 'TreeCellType') {\r\n                    const level = cellType.level;\r\n                    for (let r = 0; r <= level; r++) {\r\n                        obj.spread.getActiveSheet().rowOutlines.group(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const sheet = obj.spread.getActiveSheet();\r\n        if (sheet) {\r\n            this.titleVariablesReplace(sheet, obj.data);\r\n            sheet.clearSelection();\r\n        }\r\n\r\n        // é¡µé¢æ¸²æåäºä»¶\r\n        this.utils.get('renderExtends').runRenderExtends('afterLoadData', this.localizeService.getValue('spread.message.extend.dataLoading.after'), obj.data, obj.spread);\r\n\r\n        obj.spread.resumePaint();\r\n        obj.spread.resumeEvent();\r\n        // å¢å å½åååæ ¼èæ¥åæ°ç¼å­\r\n        this.utils.get('spreadStyle').joinParam['controlType'] = obj.controlType;\r\n        this.cache.set(this.tabId + 'joinSearch', this.utils.get('spreadStyle').joinParam);\r\n    }\r\n\r\n    private initJoinParams(obj: RenderOption, dynamicColumns: any) {\r\n        this.utils.get('spreadStyle').joinParam = {\r\n            controlType: obj.controlType,\r\n            rowHeaderColInfo: { start: 0, end: 0 }, // è¡æ é¢èµ·å§ä½ç½®ä¿¡æ¯ï¼è¡å·ï¼\r\n            colHeaderRowInfo: { start: 0, end: 0 }, // åæ é¢ä¿¡æ¯èµ·å§ä½ç½®ä¿¡æ¯ï¼åå·)\r\n            valueColCount: 0, // è¡æ é¢ä¿¡æ¯èµ·å§ä½ç½®ä¿¡æ¯ï¼åå·)\r\n            colInfos: dynamicColumns, // åä¿¡æ¯\r\n        };\r\n        let columnHeaderRowCount = this.utils.get('spreadStyle').rowHeadersColumnCount = this.utils.get('spreadStyle').valueHeaderRowCount = 0;\r\n        let titleCount = 0;\r\n        if (obj.schemaId !== '1') {\r\n            titleCount += obj.schemaValue.schemaValue.titleOption.title ? 1 : 0;\r\n            titleCount += obj.schemaValue.schemaValue.titleOption.subTitles.length;\r\n            obj.schemaValue.schemaValue.columnOption.colList.forEach((data: any) => {\r\n                if (data.dimension && data.dimension !== 0) {\r\n                    if (data.dimension === 1) {\r\n                        this.utils.get('spreadStyle').rowHeadersColumnCount++;\r\n                    } else if (data.dimension === 2) {\r\n                        columnHeaderRowCount++;\r\n                    } else if (data.dimension === 3) {\r\n                        this.utils.get('spreadStyle').valueHeaderRowCount++;\r\n                    }\r\n                }\r\n            });\r\n            this.utils.get('spreadStyle').joinParam['controlType'] = obj.controlType;\r\n            this.utils.get('spreadStyle').joinParam['rowHeaderColInfo'] = { start: 0, end: this.utils.get('spreadStyle').rowHeadersColumnCount }; // è¡æ é¢èµ·å§ä½ç½®ä¿¡æ¯ï¼è¡å·ï¼\r\n            this.utils.get('spreadStyle').joinParam['colHeaderRowInfo'] = { start: titleCount, end: titleCount + columnHeaderRowCount }; // åæ é¢ä¿¡æ¯èµ·å§ä½ç½®ä¿¡æ¯ï¼åå·)\r\n            this.utils.get('spreadStyle').joinParam['valueColCount'] = this.utils.get('spreadStyle').valueHeaderRowCount; // è¡æ é¢ä¿¡æ¯èµ·å§ä½ç½®ä¿¡æ¯ï¼åå·)\r\n            this.utils.get('spreadStyle').joinParam['colInfos'] = obj.schemaValue.schemaValue.columnOption.colList; // åä¿¡æ¯\r\n        }\r\n        this.cache.set(this.tabId + 'joinSearch', this.utils.get('spreadStyle').joinParam);\r\n    }\r\n}","import { anyChanged } from \"@progress/kendo-angular-grid/dist/es2015/utils\";\r\nimport { EventBus, RtfServices } from \"@qdp/common\";\r\nimport { RenderOption } from \"../entity/RenderOption\";\r\nimport { BaseRender } from \"./base-render\";\r\n\r\ndeclare var GC: any;\r\ndeclare var gspframeworkService: any;\r\nexport class ListTreeRender extends BaseRender {\r\n    constructor(_queryId: any, _controlType: any, _jointsearchInfoList?: any, _funcInfoCache?: any, _serviceCache?: any) {\r\n        super(_queryId, _controlType, _jointsearchInfoList, _funcInfoCache, _serviceCache);\r\n        this.listRenderInit(_queryId, _controlType);\r\n    }\r\n\r\n    listRenderInit(_queryId: any, _controlType: any) {\r\n        this.type = _controlType;\r\n        this.queryId = _queryId;\r\n    }\r\n\r\n    /**\r\n     * æ¸²æ\r\n     * @param obj åæ°éç½®é¡¹\r\n     */\r\n    render(obj: RenderOption) {\r\n        const self = this;\r\n        this.queryId = obj.queryId;\r\n        this.type = obj.controlType;\r\n        obj.schemaId = obj.schemaId === 'prefab' ? '1' : obj.schemaId;\r\n        this.utils.get('schema').getSchemaInfo(obj).subscribe((schemaValue: any) => {\r\n            if (schemaValue) {\r\n                obj['schemaId'] = schemaValue.id;\r\n                obj['schemaValue'] = schemaValue;\r\n                // this.currentSchemaValueChanger.next(schemaValue);\r\n                EventBus.dispatch('schemaValueChanged', schemaValue);\r\n                let delay = schemaValue.schemaValue.otherOption.delay;\r\n                const interval = schemaValue.schemaValue.otherOption.interval;\r\n\r\n                const funcId = RtfServices.getTabId(obj.queryId);\r\n                const index = self.funcInfoCache.firstLoadCache.findIndex(el => el === funcId);\r\n                const firstLoad = schemaValue.schemaValue.otherOption.firstLoad;\r\n                if (index < 0 && this.isSchemaSelectChanged === false) {\r\n                    if (firstLoad === false) {\r\n                        self.funcInfoCache.firstLoadCache.push(funcId);\r\n                        obj.loading.close();\r\n                        if (obj.spread.getActiveSheet()) {\r\n                            obj.spread.getActiveSheet().deleteRows(0, obj.spread.getActiveSheet().getRowCount());\r\n                            obj.spread.getActiveSheet().options.colHeaderVisible = false;\r\n                            obj.spread.invalidateLayout();\r\n                            obj.spread.repaint();\r\n                            self.serviceCache.lcpService.pageInfoChange.next({\r\n                                pageCount: 1,\r\n                                pageIndex: 1,\r\n                                pageSize: schemaValue.schemaValue.otherOption.pageSize || 20,\r\n                                totalCount: 1\r\n                            });\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                if (!delay) {\r\n                    delay = 0;\r\n                }\r\n                setTimeout(() => {\r\n                    this.getRenderDataForList.call(this, Object.assign({}, obj));\r\n                    if (interval > 0) {\r\n                        setInterval(() => {\r\n                            this.getRenderDataForList.call(this, Object.assign({}, obj));\r\n                        }, interval * 1000);\r\n                    }\r\n                }, delay * 1000);\r\n            } else {\r\n                obj['schemaId'] = '1';\r\n                this.getRenderDataForList.call(this, Object.assign({}, obj));\r\n            }\r\n        });\r\n    }\r\n\r\n    private getRenderDataForList(obj: RenderOption) {\r\n        const self = this;\r\n        obj.schemaId = obj.schemaId ? obj.schemaId : (obj.schemaValue && obj.schemaValue.id ? obj.schemaValue.id : '1');\r\n        if (!obj.formData) {\r\n            let params = this.utils.get('parameter').createParameters(Object.assign({}, obj, { pageIndex: 0, pageSize: 0 }));\r\n            params['queryId'] = obj.queryId ? obj.queryId : '';\r\n            self.operatePagination(obj, params);\r\n            // æ¥è¯¢æ°æ®åäºä»¶\r\n            params = this.utils.get('renderExtends').runRenderExtends('beforeQueryData', this.localizeService.getValue('spread.message.extend.query.before'), params, obj.spread);\r\n\r\n            try {\r\n                const tab = RtfServices.getTabId(obj.queryId);\r\n                this.cache.set(tab, JSON.parse(params['entityData']));\r\n                this.cache.set(tab + 'extendCond', params['extendCond']);\r\n            } catch (e) { }\r\n\r\n            self.getData(params, obj.queryRelativeUrl).subscribe((data: any) => {\r\n                data = data || { data: [], dynamicCols: [] };\r\n                if (obj.schemaId !== '1' || (data && data.dynamicCols && data.dynamicCols.length)) {\r\n                    self.schemaManager.dynamicCols[obj.groupType ? obj.groupType : obj.queryId] = data.dynamicCols || [];\r\n                    self.schemaManager.dynamicCols[obj.schemaId] = data.dynamicCols || [];\r\n                    self.schemaManager.operateDynamicColsForSchema(obj.schemaValue, obj.groupType ? obj.groupType : obj.queryId, obj.schemaId);\r\n                    self.schemaManager.schemaInfoChange.next({ schemaList: self.schemaManager.schemaInfo, isDefaultSchema: self.schemaManager.isDefaultSchema && self.schemaManager.isDefaultSchema[obj.queryId] ? self.schemaManager.isDefaultSchema[obj.queryId] : null, preSchema: self.schemaManager.preSchema });\r\n                }\r\n                if (!obj.schemaValue || obj.schemaId == '1') {\r\n                    self.operateCustomFormatSchema(data, obj);\r\n                }\r\n                // æ°æ®å è½½åäºä»¶\r\n                this.utils.get('renderExtends').runRenderExtends('beforeLoadData', self.localizeService.getValue('spread.message.extend.dataLoading.before'), data, obj.spread);\r\n\r\n                self.lcpService.getCol(params, obj.queryRelativeUrl).subscribe(resultData => {\r\n                    if (obj.schemaId === '1') {\r\n                        if (!data.dynamicCols.length) {\r\n                            data.dynamicCols = resultData.dynamicCols || [];\r\n                        }\r\n                    }\r\n                    obj.frozenCols = (resultData && resultData.dynamicCols) || [];\r\n                    obj['data'] = data;\r\n                    self.getListRenderTemplate(obj);\r\n                    // { schemaId: _schemaId, queryId, data, queryRelativeUrl, spread, schemaValue, pageIndex, controlType, loading }\r\n                });\r\n            }, (error: any) => {\r\n                self.formErrorService.exception(error.Message, error);\r\n                obj.loading.close();\r\n            });\r\n\r\n            this.cache.set('schema_schemaid' + obj.queryId, obj.schemaId);\r\n            // EventBus.dispatch('schema_schemaid', _schemaId);\r\n        } else {\r\n            obj['data'] = obj.formData;\r\n            obj['frozenCols'] = obj.formData.dynamicCols;\r\n            self.getListRenderTemplate(obj);\r\n            // { schemaId: _schemaId, queryId, formData, queryRelativeUrl, spread, schemaValue, pageIndex, controlType, loading }\r\n        }\r\n    }\r\n\r\n    private getListRenderTemplate(obj: RenderOption) {\r\n        const self = this;\r\n        self.schemaManager.getSpreadTemplate(obj.schemaId, obj.queryId, obj.data && obj.data.dynamicCols ? obj.data.dynamicCols : [], obj.queryRelativeUrl, obj.customFormatScheme, obj.frozenCols, obj.groupType).subscribe(template => {\r\n            template = template.returnValue ? JSON.parse(template.returnValue) : template;\r\n\r\n            self.renderList.call(self, Object.assign({}, obj, { template }));\r\n            self.utils.get('spreadStyle').bindSelectChanged(obj.spread, obj.queryId);\r\n\r\n            const event = RtfServices.getMenuSwitchControlEvent();\r\n            if (event && typeof event === 'object') {\r\n                event.next('ok');\r\n            }\r\n\r\n            EventBus.dispatch(self.queryId + 'spread_init', {});\r\n\r\n            obj.loading.close();\r\n        }, (error: any) => {\r\n            self.formErrorService.exception(error.Message, error);\r\n            obj.loading.close();\r\n        });\r\n    }\r\n\r\n    renderList(obj: RenderOption) {\r\n        const self = this;\r\n        this.type = obj.controlType;\r\n        obj.spread.suspendEvent();\r\n        obj.spread.suspendPaint();\r\n        obj.spread.fromJSON(obj.template);\r\n        const sheet = obj.spread.getActiveSheet();\r\n        // å¨ç²®éæ±ï¼å¤sheeté¡µ\r\n        if (obj.curSheet && obj.multiSheets.length) {\r\n            sheet.name(obj.curSheet);\r\n            for (let i = 0; i < obj.multiSheets.length; i++) {\r\n                if (obj.curSheet !== obj.multiSheets[i]) {\r\n                    obj.spread.addSheet(i, new GC.Spread.Sheets.Worksheet(obj.multiSheets[i]));\r\n                    obj.spread.sheets[i].deleteRows(0, obj.spread.sheets[i].getRowCount());\r\n                    obj.spread.sheets[i].deleteColumns(0, obj.spread.sheets[i].getColumnCount());\r\n                }\r\n            }\r\n            obj.spread.setActiveSheet(obj.curSheet);\r\n            obj.spread.options.tabStripVisible = true;\r\n            obj.spread.options.tabEditable = false;\r\n        }\r\n        // å¨ç²®éæ±ï¼å¤sheeté¡µ\r\n        this.utils.get('spreadStyle').cacheStyle(sheet);\r\n        let showZero = true;\r\n        if (obj.schemaValue && obj.schemaValue.schemaValue && obj.schemaValue.schemaValue.otherOption) {\r\n            if (obj.schemaValue.schemaValue.otherOption.showZero != null && obj.schemaValue.schemaValue.otherOption.showZero !== undefined) {\r\n                showZero = obj.schemaValue.schemaValue.otherOption.showZero;\r\n            }\r\n        }\r\n        if (obj.data && obj.data.data && obj.data.data.length) {\r\n            obj.data.data.forEach((item: any) => {\r\n                if (item.dynamicPropSet) {\r\n                    for (const key in item.dynamicPropSet) {\r\n                        item[key] = item.dynamicPropSet[key];\r\n                    }\r\n                }\r\n            });\r\n            // ä¿®æ¹æä¸¾å­æ®µæ¾ç¤º\r\n            self.changeData(obj.data, obj.schemaValue);\r\n            sheet.setDataSource(obj.data.data);\r\n            sheet.bindColumns(this.utils.get('spreadStyle').dataColInfoArray);\r\n            sheet.options.isProtected = true;\r\n            sheet.options.protectionOptions = {\r\n                allowSelectLockedCells: true,\r\n                allowSelectUnlockedCells: true,\r\n                allowFilter: true,\r\n                allowSort: true,\r\n                allowResizeRows: true,\r\n                allowResizeColumns: true,\r\n                allowEditObjects: false\r\n            };\r\n            obj.spread.options.allowCopyPasteExcelStyle = true;\r\n            obj.spread.options.allowExtendPasteRange = true;\r\n            obj.spread.options.copyPasteHeaderOptions = GC.Spread.Sheets.CopyPasteHeaderOptions.allHeaders;\r\n            sheet.rowOutlines.direction(GC.Spread.Sheets.Outlines.OutlineDirection.backward);\r\n            try {\r\n                if (!obj.schemaValue && obj.customFormatScheme) {\r\n                    if (typeof obj.customFormatScheme == 'string') {\r\n                        obj.schemaValue = {};\r\n                        obj.schemaValue['schemaValue'] = JSON.parse(obj.customFormatScheme);\r\n                    }\r\n                }\r\n            } catch (e) { }\r\n            this.utils.get('spreadStyle').applyStyle(sheet, obj.schemaValue, showZero);\r\n            this.utils.get('spreadStyle').linkField(obj.spread, sheet);\r\n            try {\r\n                let extObj = gspframeworkService.rtf.extendMethod.getExtObj();\r\n                if (extObj) {\r\n                    this.utils.get('spreadStyle').inSuiteLinkField(obj.spread, sheet, extObj);\r\n                }\r\n            } catch (e) {\r\n            }\r\n            this.footerVariablesReplace(sheet, obj.data);\r\n        } else {\r\n            this.footerVariablesReplace(sheet, obj.data);\r\n            sheet.deleteRows(0, 1);\r\n        }\r\n        this.titleVariablesReplace(sheet, obj.data);\r\n        this.utils.get('spreadStyle').setAutoFitColumn(obj.schemaValue, sheet);\r\n        if (this.utils.get('spreadStyle').getShowHeaderSort(obj.schemaValue)) {\r\n            this.utils.get('spreadStyle').setSortCellType(sheet, obj.schemaValue, obj.qdpView);\r\n        }\r\n        if (obj.controlType == 'list') {\r\n            this.utils.get('spreadStyle').mergeCell(sheet, obj.schemaValue);\r\n        }\r\n        sheet.clearSelection();\r\n        // é¡µé¢æ¸²æåäºä»¶\r\n        this.utils.get('renderExtends').runRenderExtends('afterLoadData', this.localizeService.getValue('spread.message.extend.dataLoading.after'), obj.data, obj.spread);\r\n\r\n        obj.spread.resumePaint();\r\n        obj.spread.resumeEvent();\r\n        // å¢å å½åååæ ¼èæ¥åæ°ç¼å­\r\n        this.utils.get('spreadStyle').joinParam['controlType'] = this.type;\r\n        this.cache.set(RtfServices.getTabId(obj.queryId) + 'joinSearch', this.utils.get('spreadStyle').joinParam);\r\n    }\r\n}","import { Injectable, Injector, Optional, EventEmitter } from '@angular/core';\r\nimport { SchemaManagerService, LcpService, ParasMappingManagerService, JointSearchManagerService } from '@qdp/common';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { CacheService } from '@ecp-caf/caf-common';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { DataRenderExtendService, EventBus } from '@qdp/common';\r\nimport { RtfServices } from '@qdp/common';\r\nimport { LocalizeService } from '@qdp/localize';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { FormErrorService } from '@farris/command-services';\r\nimport { CloudprintService } from '@gsp-svc/cloudprint';\r\nimport { ServicesUtils } from '../../util/services.utils';\r\nimport { RenderOption } from '../../entity/RenderOption';\r\nimport { CrosstabRender } from '../../engine/crosstab-render';\r\nimport { ListTreeRender } from '../../engine/list-render';\r\n\r\ndeclare var GC: any;\r\ndeclare var TreeCellType: any;\r\ndeclare var MyNumFormatter: any;\r\ndeclare var FilterCellType: any;\r\ndeclare var gspframeworkService: any;\r\ndeclare var SortCellType: any;\r\n\r\n@Injectable()\r\nexport class RenderService {\r\n  cloudprintService: CloudprintService;\r\n  formErrorService: any;\r\n  localizeService: LocalizeService;\r\n  notifyService: NotifyService;\r\n  serviceCache = {};\r\n  columnCount = 0;\r\n  operations = {};\r\n  renderObject: any;\r\n  spread: any;\r\n  funcInfoCache = {\r\n    funcIds: [],\r\n    firstLoadCache: []\r\n  }\r\n\r\n  constructor(\r\n    public schemaManager: SchemaManagerService,\r\n    public lcpService: LcpService,\r\n    private cache: CacheService,\r\n    private loadService: LoadingService,\r\n    private msgService: MessagerService,\r\n    @Optional() private dataRenderExtendService: DataRenderExtendService,\r\n    @Optional() private injector: Injector\r\n  ) {\r\n    const self = this;\r\n    if (this.injector) {\r\n      this.localizeService = this.injector.get(LocalizeService);\r\n      this.formErrorService = this.injector.get(FormErrorService);\r\n      this.cloudprintService = this.injector.get(CloudprintService);\r\n      this.notifyService = this.injector.get(NotifyService);\r\n      this.setService();\r\n      self.schemaManager.operationChange.subscribe((value: any) => {\r\n        if (value) {\r\n          self.operations = value;\r\n        }\r\n      })\r\n      self.setSecurityLevel();\r\n    }\r\n  }\r\n\r\n  private setService() {\r\n    const tabId = RtfServices.getTabId() || 'default';\r\n    this.serviceCache[tabId] = {\r\n      'formErrorService': this.formErrorService,\r\n      'cloudprintService': this.cloudprintService,\r\n      'schemaManagerService': this.schemaManager,\r\n      'lcpService': this.lcpService,\r\n      'cacheService': this.cache,\r\n      'loadingService': this.loadService,\r\n      'msgService': this.msgService,\r\n      'localizeService': this.localizeService,\r\n      'notifyService': this.notifyService\r\n    };\r\n  }\r\n\r\n  private getService() {\r\n    const tabId = RtfServices.getTabId() || 'default';\r\n    return this.serviceCache[tabId];\r\n  }\r\n\r\n  private setSecurityLevel() {\r\n    this.lcpService.variablesChange.subscribe((data: any) => {\r\n      if (data && data.hasOwnProperty('securityLevel') && data['securityLevel']) {\r\n        this.cache.set(RtfServices.getTabId() + 'securityLevel', data['securityLevel']);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getSecurityLevel() {\r\n    if (this.cache.get(RtfServices.getTabId() + 'securityLevel')) {\r\n      return this.cache.get(RtfServices.getTabId() + 'securityLevel');\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  render(option: RenderOption) {\r\n    if (!option.loading) {\r\n      option.loading = this.loadService.show({ container: 'body' });\r\n    }\r\n    this.spread = option.spread ? option.spread : null;\r\n    this.renderObject = this.getRender(option);\r\n    this.renderObject.render(option);\r\n  }\r\n\r\n  private getRender(obj: RenderOption) {\r\n    this.setService();\r\n    ServicesUtils.setServices('dataRenderExtendService' + obj.queryId, this.dataRenderExtendService);\r\n    let render;\r\n    switch (obj.controlType) {\r\n      case 'crosstab':\r\n        render = new CrosstabRender(obj.queryId, obj.controlType, obj.jointsearchInfoList, this.funcInfoCache, this.getService());\r\n        break;\r\n      default:\r\n        render = new ListTreeRender(obj.queryId, obj.controlType, obj.jointsearchInfoList, this.funcInfoCache, this.getService());\r\n        break;\r\n    }\r\n    render.isSchemaSelectChanged = obj.isSchemaSelectChanged ? obj.isSchemaSelectChanged : false;\r\n    return render;\r\n  }\r\n\r\n  exportData(renderOption: RenderOption) {\r\n  // exportData(queryId: any, schemaId: any, controlType: any, pageIndex?: number, qoManagerCode?: any, queryRelativeUrl?: any, filterCondition?: any, groupType?: any, voId?: any, totalCount?: any, exportType?: any) {\r\n    const loading = this.loadService.show({ container: 'body' });\r\n    this.renderObject.utils.get('schema').getSchemaInfo({ schemaId: renderOption.schemaValue, queryId: renderOption.queryId, queryRelativeUrl: renderOption.queryRelativeUrl, groupType: renderOption.groupType }).subscribe(value => {\r\n      renderOption.schemaId = renderOption.schemaId ? renderOption.schemaId : (value && value.id ? value.id : '1');\r\n      let schemaName = value && value.schemaValue && value.schemaValue.titleOption && value.schemaValue.titleOption.title\r\n        ? value.schemaValue.titleOption.title\r\n        : value && value.schemaName\r\n          ? value.schemaName\r\n          : '';\r\n      if (RtfServices.getFuncName()) {\r\n        schemaName = RtfServices.getFuncName() + '-' + schemaName;\r\n      }\r\n      renderOption.excelExportName = schemaName;\r\n      const params = this.renderObject.utils.get('parameter').createParameters(renderOption);\r\n      params['exportType'] = renderOption.exportType ? renderOption.exportType : '';\r\n      let isCustomShema = false;\r\n      let customSchema = null;\r\n      if (params['schemaId'] === '1') {\r\n        if (ServicesUtils.getServices(RtfServices.getTabId(renderOption.queryId) + 'customScheme')) {\r\n          isCustomShema = true;\r\n          params.customSchema = ServicesUtils.getServices(RtfServices.getTabId(renderOption.queryId) + 'customScheme');\r\n          customSchema = JSON.parse(params.customSchema);\r\n          if (!params.excelExportName) {\r\n            params.excelExportName = customSchema && customSchema.titleOption && customSchema.titleOption.title\r\n              ? customSchema.titleOption.title : 'export'\r\n          }\r\n        } else {\r\n          this.msgService.warning(this.localizeService.getValue('spread.message.export'));\r\n          loading.close();\r\n          return;\r\n        }\r\n      }\r\n      if (this.operations['QdpQueryExport'] === false) {\r\n        this.msgService.warning(this.localizeService.getValue('spread.message.validate.qdpQueryExport'));\r\n        loading.close();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        if (renderOption.controlType === 'treelist' && this.spread) {\r\n          let expandNodes = '';\r\n          if (value && value.schemaValue && value.schemaValue.otherOption && value.schemaValue.otherOption.treeInfoType !== 2) {\r\n            const pathField = value.schemaValue.otherOption.treeInfoType === 0 ? value.schemaValue.otherOption.pathField : value.schemaValue.otherOption.idField;\r\n            if (pathField) {\r\n              for (let i = 0; i < this.spread.getActiveSheet().getRowCount(); i++) {\r\n                if (this.spread.getActiveSheet().rowOutlines.isCollapsed(i)) {\r\n                  expandNodes += ',' + this.spread.getActiveSheet().getDataItem(i)[pathField];\r\n                }\r\n              }\r\n              params['expandNodes'] = expandNodes.substring(1);\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n      }\r\n\r\n      this.columnCount = 0;\r\n      if (!isCustomShema) {\r\n        this.calculationColumnCount(value.schemaValue.columnOption.colList);\r\n      } else {\r\n        if (customSchema && customSchema.columnOption && customSchema.columnOption.colList) {\r\n          this.calculationColumnCount(customSchema.columnOption.colList);\r\n        }\r\n      }\r\n      this.lcpService.loading = loading;\r\n      if (this.getSecurityLevel()) {\r\n        params.excelExportName += '_' + this.getSecurityLevel();\r\n      }\r\n      if ((this.columnCount * renderOption.totalCount) < 100000) {\r\n        this.lcpService.exportData(params, renderOption.queryRelativeUrl);\r\n        loading.close();\r\n      } else {\r\n        this.lcpService.aysnExportData(params, renderOption.queryRelativeUrl);\r\n        loading.close();\r\n        this.msgService.warning(this.localizeService.getValue('spread.message.aysnExport'));\r\n      }\r\n    });\r\n  }\r\n\r\n  private calculationColumnCount(colList: any) {\r\n    try {\r\n      colList.forEach((item: any) => {\r\n        if (item.childList && item.childList.length) {\r\n          this.calculationColumnCount(item.childList);\r\n        } else {\r\n          this.columnCount += 1;\r\n        }\r\n      });\r\n    } catch (e) { this.columnCount = 0; }\r\n  }\r\n\r\n  clearCache(queryId: any, schemaId: any, controlType: any, qoManagerCode?: any, queryRelativeUrl?: any, filterCondition?: any, groupType?: any, voId?: any) {\r\n    this.renderObject.utils.get('schema').getSchemaInfo({ schemaId, queryId, queryRelativeUrl, groupType }).subscribe(value => {\r\n      schemaId = schemaId ? schemaId : (value && value.id ? value.id : '1');\r\n      const schemaName = value && value.schemaValue && value.schemaValue.titleOption && value.schemaValue.titleOption.title\r\n        ? value.schemaValue.titleOption.title\r\n        : value && value.schemaName\r\n          ? value.schemaName\r\n          : '';\r\n      const params = this.renderObject.utils.get('parameter').createParameters({\r\n        queryId,\r\n        controlType,\r\n        schemaId,\r\n        qoManagerCode,\r\n        pageIndex: 0,\r\n        pageSize: 0,\r\n        excelExportName: schemaName,\r\n        filterCondition,\r\n        voId\r\n      });\r\n      if (ServicesUtils.getServices(RtfServices.getTabId(queryId) + 'customScheme')) {\r\n        params.customSchema = ServicesUtils.getServices(RtfServices.getTabId(queryId) + 'customScheme');\r\n      }\r\n      this.lcpService.clearCache(params).subscribe(data => {\r\n        if (data) {\r\n          this.notifyService['success']({\r\n            title: this.localizeService.getValue('ideCmp.schemaManager.message.info.title'), msg: this.localizeService.getValue('spread.message.clearCache'), timeout: 3000\r\n          } as NotifyOptions);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  pdfExportEvent(renderOption: RenderOption) {\r\n  // pdfExportEvent(queryId: any, schemaId: any, controlType: any, qoManagerCode?: any, printIntegration?: any, queryRelativeUrl?: any, filterCondition?: any, groupType?: any, pageIndex?: any, voId?: any) {\r\n    const loading = this.loadService.show({ container: 'body' });\r\n    try {\r\n      this.renderObject.utils.get('schema').getSchemaInfo({ schemaId: renderOption.schemaValue, queryId: renderOption.queryId, queryRelativeUrl: renderOption.queryRelativeUrl, groupType: renderOption.groupType }).subscribe(value => {\r\n        renderOption.schemaId = renderOption.schemaId ? renderOption.schemaId : (value && value.id ? value.id : '1');\r\n        let schemaName = value && value.schemaValue && value.schemaValue.titleOption && value.schemaValue.titleOption.title\r\n          ? value.schemaValue.titleOption.title\r\n          : value && value.schemaName\r\n            ? value.schemaName\r\n            : '';\r\n        if (RtfServices.getFuncName()) {\r\n          schemaName = RtfServices.getFuncName() + '-' + schemaName;\r\n        }\r\n        renderOption.excelExportName = schemaName;\r\n        const params = this.renderObject.utils.get('parameter').createParameters(renderOption);\r\n        if (params['schemaId'] === '1') {\r\n          if (ServicesUtils.getServices(RtfServices.getTabId(renderOption.queryId) + 'customScheme')) {\r\n            params.customSchema = ServicesUtils.getServices(RtfServices.getTabId(renderOption.queryId) + 'customScheme');\r\n            const customSchema = JSON.parse(params.customSchema);\r\n            if (!params.excelExportName) {\r\n              params.excelExportName = customSchema && customSchema.titleOption && customSchema.titleOption.title\r\n                ? customSchema.titleOption.title : 'export'\r\n            }\r\n          } else {\r\n            this.msgService.warning(this.localizeService.getValue('spread.message.print'));\r\n            loading.close();\r\n            return;\r\n          }\r\n        }\r\n        if (this.operations['QdpQueryPrint'] === false) {\r\n          this.msgService.warning(this.localizeService.getValue('spread.message.validate.qdpQueryPrint'));\r\n          loading.close();\r\n          return;\r\n        }\r\n        if (this.getSecurityLevel()) {\r\n          params.excelExportName += '_' + this.getSecurityLevel();\r\n        }\r\n        this.lcpService.pdfExportEvent(params, renderOption.queryRelativeUrl);\r\n        loading.close();\r\n      });\r\n    } catch (e) {\r\n      loading.close();\r\n      // console.log(e);\r\n    }\r\n  }\r\n\r\n  printPreView(renderOption: RenderOption) {\r\n  // printPreView(queryId: any, schemaId: any, controlType: any, qoManagerCode?: any, printIntegration?: any, queryRelativeUrl?: any, filterCondition?: any, groupType?: any, pageIndex?: any, voId?: any) {\r\n    this.renderObject.utils.get('schema').getSchemaInfo({ schemaId: renderOption.schemaValue, queryId: renderOption.queryId, queryRelativeUrl: renderOption.queryRelativeUrl, groupType: renderOption.groupType }).subscribe(value => {\r\n      renderOption.schemaId = renderOption.schemaId ? renderOption.schemaId : (value && value.id ? value.id : '1');\r\n      const schemaName = value && value.schemaValue && value.schemaValue.titleOption && value.schemaValue.titleOption.title\r\n        ? value.schemaValue.titleOption.title\r\n        : value && value.schemaName\r\n          ? value.schemaName\r\n          : '';\r\n      renderOption.excelExportName = schemaName;\r\n      const params = this.renderObject.utils.get('parameter').createParameters(renderOption);\r\n      if (params['schemaId'] === '1') {\r\n        if (ServicesUtils.getServices(RtfServices.getTabId(renderOption.queryId) + 'customScheme')) {\r\n          params.customSchema = ServicesUtils.getServices(RtfServices.getTabId(renderOption.queryId) + 'customScheme');\r\n          const customSchema = JSON.parse(params.customSchema);\r\n          if (!params.excelExportName) {\r\n            params.excelExportName = customSchema && customSchema.titleOption && customSchema.titleOption.title\r\n              ? customSchema.titleOption.title : 'export'\r\n          }\r\n        } else {\r\n          this.msgService.warning(this.localizeService.getValue('spread.message.preview'));\r\n          return;\r\n        }\r\n      }\r\n      if (this.getSecurityLevel()) {\r\n        params.excelExportName += '_' + this.getSecurityLevel();\r\n      }\r\n      this.lcpService.cloudprintService = this.cloudprintService;\r\n      this.lcpService.printPreView(params, renderOption.queryRelativeUrl);\r\n    });\r\n  }\r\n\r\n  clearFirstLoadCache(queryId?: any) {\r\n    const funcId = RtfServices.getTabId(queryId);\r\n    const index = this.funcInfoCache.firstLoadCache.findIndex(el => el === funcId);\r\n    if (index >= 0) {\r\n      this.funcInfoCache.firstLoadCache.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnInit, OnChanges, SimpleChanges, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { FormErrorService } from '@farris/command-services';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { EventBus, JSONUtils, RtfServices, SchemaManagerService } from '@qdp/common';\r\nimport { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';\r\nimport { RenderService } from '../../service/render/render.service';\r\n\r\n@Component({\r\n  selector: 'dimension-setting',\r\n  templateUrl: './dimension-setting.component.html',\r\n  styleUrls: ['./dimension-setting.component.css']\r\n})\r\nexport class DimensionSettingComponent implements OnInit, OnDestroy {\r\n  @Input() controlType;\r\n  schemaValue: any; // æ ¼å¼æ¹æ¡ä¿¡æ¯\r\n  colList: any; // åä¿¡æ¯\r\n  @Input() queryRelativeUrl: any; // åä¿¡æ¯\r\n  @Input() queryId: string;\r\n  @Input() qoManagerCode: any;\r\n  @Input() qoId: any;\r\n  @Input() voId: any;\r\n  @Input() groupType: any;\r\n  @Input() spread: any;\r\n  @Input() conditionExpression: any;\r\n  @Input() jointsearchInfoList: any;\r\n  @Input() qdpView: any;\r\n  isCompare = false;\r\n  zero: any; // æªéæ©\r\n  rowDimension: any; // è¡ç»´åº¦\r\n  colDimension: any; // åç»´åº¦\r\n  valDimension: any; // å¼ç»´åº¦  \r\n  searchText = '';\r\n  groupIcon = '<span class=\"k-icon k-i-search\"></span>';\r\n  public lists: any = [];\r\n  public listsCache: any = [];\r\n\r\n  public models = {\r\n    selected: null,\r\n    lists: this.lists\r\n  };\r\n\r\n  localizeService: LocalizeService;\r\n  renderService: RenderService;\r\n  msgService: MessagerService;\r\n  formErrorService: FormErrorService;\r\n  schemaManagerService: SchemaManagerService;\r\n\r\n  constructor(private injector: Injector) {\r\n    if (this.injector) {\r\n      this.localizeService = this.injector.get(LocalizeService);\r\n      this.renderService = this.injector.get(RenderService);\r\n      this.msgService = this.injector.get(MessagerService);\r\n      this.formErrorService = this.injector.get(FormErrorService);\r\n      this.schemaManagerService = this.injector.get(SchemaManagerService);\r\n    }\r\n    this.initLists();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const eventId = RtfServices.getTabId(this.queryId);\r\n    EventBus.register('schemaValueChanged', this.handleSchemaValueChanged.bind(this), eventId + 'dimensionSetting');\r\n  }\r\n  ngOnDestroy() { }\r\n\r\n  private initLists() {\r\n    this.lists = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      this.lists.push({\r\n        name: this.localizeService.getValue('spread.crossTable.dimensionName')[i],\r\n        value: []\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åå§åäº¤åè¡¨ç»´åº¦è®¾ç½®\r\n   */\r\n  initCrosstab() {\r\n    // this.renderService.renderObject.currentSchemaValueChanger.subscribe((schemaValue: any) => {\r\n    // });\r\n  }\r\n\r\n  private handleSchemaValueChanged(schemaValue: any) {\r\n    if (schemaValue) {\r\n      if (schemaValue.id === 1 || schemaValue.id === '1') return;\r\n      this.schemaValue = schemaValue;\r\n      if (this.controlType === 'crosstab') {\r\n        this.colList = schemaValue.schemaValue.columnOption.colList;\r\n        if (this.colList) {\r\n          this.zero = this.colList.filter((x: { dimension: number; }) => x.dimension === 0);\r\n          this.rowDimension = this.colList.filter(x => x.dimension === 1);\r\n          this.colDimension = this.colList.filter(x => x.dimension === 2);\r\n          this.valDimension = this.colList.filter(x => x.dimension === 3);\r\n          setTimeout(() => {\r\n            this.lists[0].value = this.zero;\r\n            this.listsCache = this.zero;\r\n            this.lists[1].value = this.rowDimension;\r\n            this.lists[2].value = this.colDimension;\r\n            this.lists[3].value = this.valDimension;\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  moved(index: number, list: Array<any>) {\r\n    list.splice(index, 1);\r\n    this.selectedDimesion();\r\n    if (this.schemaValue) {\r\n      if (this.schemaValue.isProtected === 1 || this.schemaValue.isProtected === '1') {\r\n        this.msgService.info(this.localizeService.getValue('ideCmp.schemaManager.message.validate.isProtected'));\r\n        return;\r\n      }\r\n      this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);\r\n      this.schemaManagerService.saveSchema({ 'schema': JSON.stringify(this.schemaValue) }, this.queryRelativeUrl).subscribe(() => {\r\n        this.renderService.render({ queryId: this.queryId, spread: this.spread, controlType: this.controlType, qoManagerCode: this.qoManagerCode, queryRelativeUrl: this.queryRelativeUrl, schemaValue: this.schemaValue, filterCondition: this.conditionExpression, groupType: this.groupType, voId: this.voId, jointsearchInfoList: this.jointsearchInfoList, fromCache: true, qdpView: this.qdpView });\r\n        this.schemaValue.schemaValue = typeof this.schemaValue.schemaValue === 'string' ? JSON.parse(this.schemaValue.schemaValue) : this.schemaValue.schemaValue;\r\n      }, (error: any) => {\r\n        this.formErrorService.exception(error.Message, error);\r\n      });\r\n    }\r\n  }\r\n\r\n  private crosstabColumnValidate(columns: any) {\r\n    let flag = false;\r\n    if (this.controlType === 'crosstab') {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < columns.length; i++) {\r\n        if (columns[i].groupAggre !== 4 && columns[i].totalAggre !== 4) {\r\n          if (!'int,integer,float,double,decimal,number'.includes(columns[i].type ? columns[i].type.toLowerCase() : '')) {\r\n            flag = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  selectedDimesion() {\r\n    this.colList = [];\r\n    if (this.lists[0]) {\r\n      this.lists[0].value.forEach(value => {\r\n        value.dimension = 0;\r\n        value.isGroup = false;\r\n        value.groupAggre = 0;\r\n      });\r\n      this.colList = this.lists[0].value;\r\n    }\r\n    if (this.lists[1]) {\r\n      this.lists[1].value.forEach(value => {\r\n        value.dimension = 1;\r\n        value.isGroup = true;\r\n        value.groupAggre = 0;\r\n      });\r\n      if (this.colList.length === 0) {\r\n        this.colList = this.lists[1].value;\r\n      } else {\r\n        this.colList = this.colList.concat(this.lists[1].value);\r\n      }\r\n    }\r\n    if (this.lists[2]) {\r\n      this.lists[2].value.forEach(value => {\r\n        value.dimension = 2;\r\n        value.isGroup = true;\r\n        value.groupAggre = 0;\r\n      });\r\n      if (this.colList.length === 0) {\r\n        this.colList = this.lists[2].value;\r\n      } else {\r\n        this.colList = this.colList.concat(this.lists[2].value);\r\n      }\r\n    }\r\n    if (this.lists[3]) {\r\n      this.lists[3].value.forEach(value => {\r\n        value.dimension = 3;\r\n        value.isGroup = false;\r\n        value.groupAggre = 1;\r\n      });\r\n      if (this.colList.length === 0) {\r\n        this.colList = this.lists[3].value;\r\n      } else {\r\n        this.colList = this.colList.concat(this.lists[3].value);\r\n      }\r\n    }\r\n    if (this.colList.length > 0) {\r\n      try {\r\n        this.isCompare = JSONUtils.Compare({ schema: this.schemaValue.schemaValue.columnOption.colList }, { schema: this.colList });\r\n      } catch (e) { }\r\n      this.schemaValue.schemaValue.columnOption.colList = this.colList;\r\n    }\r\n  }\r\n\r\n  dimensionSearchValueOnChange(val: any) {\r\n    if (val) {\r\n      const searchCols = this.listsCache.find((item) => item.name.indexOf(val) >= 0);\r\n      this.lists[0].value = [...searchCols];\r\n    } else {\r\n      this.lists[0].value = [...this.listsCache];\r\n    }\r\n  }\r\n\r\n  dndListChange0($event) {\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[0].value = $event;\r\n    }\r\n  }\r\n  dndListChange1($event) {\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[1].value = $event;\r\n    }\r\n  }\r\n  dndListChange2($event) {\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[2].value = $event;\r\n    }\r\n  }\r\n  dndListChange3($event) {\r\n    if (this.crosstabColumnValidate($event)) {\r\n      for (let i = 0; i < $event.length; i++) {\r\n        const dimensionIndex = $event[i].dimension - 0;\r\n        if (dimensionIndex !== 3) {\r\n          this.lists[dimensionIndex].value = [...this.lists[dimensionIndex].value, $event.splice(i, 1)[0]]\r\n        }\r\n      }\r\n      this.msgService.warning(this.localizeService.getValue('ideCmp.schemaManager.message.validate.crosstabValueDimension'));\r\n      return;\r\n    }\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[3].value = $event;\r\n    }\r\n  }\r\n}\r\n","import { EventHandlerVars } from '@angular/compiler/src/compiler_util/expression_converter';\r\nimport { Component, Injector, Input, OnInit, LOCALE_ID, OnChanges, SimpleChanges, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { FormErrorService } from '@farris/command-services';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { EventBus, JSONUtils, RtfServices, SchemaManagerService } from '@qdp/common';\r\nimport { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';\r\nimport { filter } from 'lodash-es';\r\nimport { RenderService } from '../../service/render/render.service';\r\n\r\n@Component({\r\n  selector: 'columns-setting',\r\n  templateUrl: './columns-setting.component.html',\r\n  styleUrls: ['./columns-setting.component.css']\r\n})\r\nexport class ColumnsSettingComponent implements OnInit, OnDestroy {\r\n  @Input() controlType;\r\n  schemaValue: any; // æ ¼å¼æ¹æ¡ä¿¡æ¯\r\n  colList: any; // åä¿¡æ¯\r\n  @Input() queryRelativeUrl: any; // åä¿¡æ¯\r\n  @Input() queryId: string;\r\n  @Input() qoManagerCode: any;\r\n  @Input() qoId: any;\r\n  @Input() voId: any;\r\n  @Input() groupType: any;\r\n  @Input() spread: any;\r\n  @Input() conditionExpression: any;\r\n  @Input() jointsearchInfoList: any;\r\n  @Input() qdpView: any;\r\n  hideColCache: any = []; // éèå\r\n  showColCache: any = []; // æ¾ç¤ºå\r\n  groupColCache: any = []; // åç»å\r\n  allColCache: any = []; // å¨é¨å\r\n  searchText = '';\r\n  isCompare = false;\r\n  groupIcon = '<span class=\"k-icon k-i-search\"></span>';\r\n  public lists: any = [];\r\n  public listsCache: any = []; \r\n\r\n  multiSheets: any[];  //å¤sheeté¡µæ¯æ\r\n  curSheet: any;\r\n  multiSheetsSchemaIds: any = {};\r\n\r\n  public models = {\r\n    selected: null,\r\n    lists: this.lists\r\n  };\r\n\r\n  localizeService: LocalizeService;\r\n  renderService: RenderService;\r\n  formErrorService: FormErrorService;\r\n  schemaManagerService: SchemaManagerService;\r\n  localId: any;\r\n  formInline = true;\r\n  isOrNotPaging = true;\r\n\r\n  // formatTypeData: any = [\r\n  //   { name: 'è¯·éæ©', value: 0 },\r\n  //   { name: 'æ°å­', value: 1 },\r\n  //   { name: 'æ¥æ', value: 2 },\r\n  //   { name: 'é»è¾', value: 3 }\r\n  // ];\r\n  // formatTypeSelectValue: any = this.formatTypeData[0].value;\r\n  // formatText = '';\r\n  aggreData: any = [\r\n    { name: 'è¯·éæ©', value: 0 },\r\n    { name: 'åè®¡', value: 1 },\r\n    { name: 'æå°å¼', value: 2 },\r\n    { name: 'æå¤§å¼', value: 3 },\r\n    { name: 'è®¡æ°', value: 4 },\r\n    { name: 'å¹³åå¼', value: 5 }\r\n  ];\r\n  pageSelectValue: any = this.aggreData[0].value;\r\n  pageText = '';\r\n  colIsGroup: any = false;\r\n  groupSelectValue: any = this.aggreData[0].value;\r\n  groupSubSelectValue: any = this.aggreData[0].value;\r\n  groupText = '';\r\n  totalSelectValue: any = this.aggreData[0].value;\r\n  totalText = '';\r\n  currentColIndex = 0;\r\n  enumType: any = [\r\n    { name: 'ç´¢å¼', value: '0' },\r\n    { name: 'ç¼å·', value: '1' },\r\n    { name: 'åç§°', value: '2' }\r\n  ];\r\n  msgService: MessagerService;\r\n\r\n  constructor(private injector: Injector) {\r\n    if (this.injector) {\r\n      this.localizeService = this.injector.get(LocalizeService);\r\n      this.renderService = this.injector.get(RenderService);\r\n      this.msgService = this.injector.get(MessagerService);\r\n      this.formErrorService = this.injector.get(FormErrorService);\r\n      this.schemaManagerService = this.injector.get(SchemaManagerService);\r\n      this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;\r\n      this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE;\r\n      this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');\r\n      this.enumType = this.localizeService.getValue('ideCmp.schemaManager.columnOption.enumType');\r\n    }\r\n    this.initLists();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const eventId = RtfServices.getTabId(this.queryId);\r\n    EventBus.register('pagingModeChanges', this.handlePagingModeChanged.bind(this), eventId + 'columnsSetting');\r\n    EventBus.register('schemaValueChanged', this.handleSchemaValueChanged.bind(this), eventId + 'columnsSetting');\r\n  }\r\n  ngOnDestroy() { }\r\n\r\n  private initLists() {\r\n    this.lists = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      this.lists.push({\r\n        name: this.localizeService.getValue('spread.crossTable.columnSetting')[i],\r\n        value: []\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * åå§åäº¤åè¡¨ç»´åº¦è®¾ç½®\r\n   */\r\n  initCrosstab() {\r\n    // this.renderService.renderObject.currentSchemaValueChanger.subscribe((schemaValue: any) => {\r\n    // });\r\n  }\r\n\r\n  private handleSchemaValueChanged(schemaValue: any) {\r\n    if (schemaValue) {\r\n      this.schemaValue = schemaValue;\r\n      if (schemaValue.id === 1 || schemaValue.id === '1') {\r\n        this.lists[0].value = [];\r\n        this.listsCache = [];\r\n        this.lists[1].value = [];\r\n        this.lists[2].value = [];\r\n        return;\r\n      }\r\n      if (this.controlType !== 'crosstab') {\r\n        this.colList = schemaValue.schemaValue.columnOption.colList;\r\n        if (this.colList) {\r\n          this.hideColCache = []; // éèå\r\n          this.showColCache = []; // æ¾ç¤ºå\r\n          this.groupColCache = []; // åç»å\r\n          this.allColCache = []; // å¨é¨å\r\n          for (let i = 0; i < this.colList.length; i++) {\r\n            this.getSubColumns(this.colList[i], null, '');\r\n          }\r\n          setTimeout(() => {\r\n            this.lists[0].value = this.hideColCache;\r\n            this.listsCache = this.hideColCache;\r\n            this.lists[1].value = this.showColCache;\r\n            this.lists[2].value = this.groupColCache;\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getSubColumns(col: any, colList: any, pid: any) {\r\n    if (col) {\r\n      col['id'] = EventBus.guid();\r\n      col['pid'] = pid;\r\n      const pcol = JSON.parse(JSON.stringify(col));\r\n      pcol.childList = [];\r\n      this.allColCache.push(pcol);\r\n      if (col.childList && col.childList.length) {\r\n        this.getSubColumns(null, col.childList, col['id']);\r\n      } else {\r\n        if (col.isGroup) {\r\n          this.groupColCache.push(col);\r\n        } else if (col.visible) {\r\n          this.showColCache.push(col);\r\n        } else {\r\n          this.hideColCache.push(col);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < colList.length; i++) {\r\n        colList[i]['id'] = EventBus.guid();\r\n        colList[i]['pid'] = pid;\r\n        const pcol = JSON.parse(JSON.stringify(colList[i]));\r\n        pcol.childList = [];\r\n        this.allColCache.push(pcol);\r\n        if (colList[i].childList && colList[i].childList.length) {\r\n          this.getSubColumns(null, colList[i].childList, colList[i]['id']);\r\n        } else {\r\n          if (colList[i].isGroup) {\r\n            this.groupColCache.push(colList[i]);\r\n          } else if (colList[i].visible) {\r\n            this.showColCache.push(colList[i]);\r\n          } else {\r\n            this.hideColCache.push(colList[i]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  moved(index: number, list: Array<any>) {\r\n    list.splice(index, 1);\r\n    this.selectedDimesion();\r\n    if (this.schemaValue) {\r\n      if (this.schemaValue.isProtected === 1 || this.schemaValue.isProtected === '1') {\r\n        this.msgService.info(this.localizeService.getValue('ideCmp.schemaManager.message.validate.isProtected'));\r\n        return;\r\n      }\r\n      this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);\r\n      this.schemaManagerService.saveSchema({ 'schema': JSON.stringify(this.schemaValue) }, this.queryRelativeUrl).subscribe(() => {\r\n        this.renderService.render({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets, schemaId: this.schemaValue.id, queryId: this.queryId, spread: this.spread, controlType: this.controlType, qoManagerCode: this.qoManagerCode, queryRelativeUrl: this.queryRelativeUrl, schemaValue: this.schemaValue, filterCondition: this.conditionExpression, groupType: this.groupType, voId: this.voId, jointsearchInfoList: this.jointsearchInfoList, fromCache: true, qdpView: this.qdpView });\r\n        this.schemaValue.schemaValue = typeof this.schemaValue.schemaValue === 'string' ? JSON.parse(this.schemaValue.schemaValue) : this.schemaValue.schemaValue;\r\n      }, (error: any) => {\r\n        this.formErrorService.exception(error.Message, error);\r\n      });\r\n    }\r\n  }\r\n\r\n  selectedDimesion() {\r\n    this.colList = [];\r\n    if (this.lists[0]) {\r\n      this.lists[0].value.forEach(value => {\r\n        value.isGroup = false;\r\n        value.visible = false;\r\n      });\r\n      this.colList = this.lists[0].value;\r\n    }\r\n    if (this.lists[1]) {\r\n      this.lists[1].value.forEach(value => {\r\n        value.isGroup = false;\r\n        value.visible = true;\r\n      });\r\n      if (this.colList.length === 0) {\r\n        this.colList = this.lists[1].value;\r\n      } else {\r\n        this.colList = this.colList.concat(this.lists[1].value);\r\n      }\r\n    }\r\n    if (this.lists[2]) {\r\n      this.lists[2].value.forEach(value => {\r\n        value.isGroup = true;\r\n        value.visible = false;\r\n      });\r\n      if (this.colList.length === 0) {\r\n        this.colList = this.lists[2].value;\r\n      } else {\r\n        this.colList = this.colList.concat(this.lists[2].value);\r\n      }\r\n    }\r\n    if (this.colList.length > 0) {\r\n      for (let i = 0; i < this.colList.length; i++) {\r\n        if (this.colList[i].isGroup) continue;\r\n        const filterCondition: any = { pid: this.colList[i]['pid'] };\r\n        if (i == 0 && this.colList.length > 1) {\r\n          if (this.colList.length > 2) {\r\n            if (this.colList[i]['pid'] && this.colList[i + 2]['pid'] && this.colList[i]['pid'] == this.colList[i + 2]['pid']) {\r\n              this.colList[i]['pid'] = this.colList[i + 2]['pid'];\r\n            }\r\n          } else {\r\n            if (this.colList[i]['pid'] && this.colList[i]['pid'] != this.colList[i + 1]['pid'] && filter(this.colList, filterCondition) && filter(this.colList, filterCondition).length > 1) {\r\n              this.colList[i]['pid'] = '';\r\n            }\r\n          }\r\n        } else if (i == (this.colList.length - 1) && this.colList.length > 1) {\r\n          if (this.colList[i]['pid'] && this.colList[i]['pid'] != this.colList[i - 1]['pid'] && filter(this.colList, filterCondition) && filter(this.colList, filterCondition).length > 1) {\r\n            this.colList[i]['pid'] = '';\r\n          }\r\n        } else if (i > 0 && i < (this.colList.length - 1)) {\r\n          if (this.colList[i - 1]['pid'] && this.colList[i + 1]['pid'] && this.colList[i - 1]['pid'] == this.colList[i + 1]['pid']) {\r\n            this.colList[i]['pid'] = this.colList[i - 1]['pid'];\r\n          }\r\n        }\r\n      }\r\n      for (let i = 0; i < this.colList.length; i++) {\r\n        this.recursiveFindParent(this.colList, i, this.colList[i]['pid']);\r\n      }\r\n\r\n      const objCache = {};\r\n      for (let i = 0; i < this.colList.length; i++) {\r\n        objCache[this.colList[i]['id']] = this.colList[i];\r\n      }\r\n      const result = [];\r\n      for (const key in objCache) {\r\n        const parent = objCache[objCache[key]['pid']];\r\n        if (!parent) {\r\n          result.push(objCache[key]);\r\n        } else {\r\n          parent['childList'].push(objCache[key])\r\n        }\r\n      }\r\n      if (this.colList.length > 0) {\r\n        try {\r\n          this.isCompare = JSONUtils.Compare({ schema: this.schemaValue.schemaValue.columnOption.colList }, { schema: result });\r\n        } catch (e) { }\r\n        this.schemaValue.schemaValue.columnOption.colList = result;\r\n        // this.schemaValue.schemaValue.columnOption.colList = this.colList;\r\n      }\r\n    }\r\n  }\r\n\r\n  private recursiveFindParent(colList: any[], index: any, pid: any) {\r\n    const colIndex = this.allColCache.findIndex(x => x.id == pid);\r\n    if (colIndex >= 0 && this.colList.findIndex(x => x.id === this.allColCache[colIndex].id) < 0) {\r\n      this.colList.splice(index, 0, this.allColCache[colIndex]);\r\n      if (this.allColCache[colIndex]['pid']) {\r\n        this.recursiveFindParent(colList, index, this.allColCache[colIndex]['pid']);\r\n      }\r\n    }\r\n  }\r\n\r\n  dimensionSearchValueOnChange(val: any) {\r\n    if (val) {\r\n      const searchCols = this.listsCache.find((item) => item.name.indexOf(val) >= 0);\r\n      this.lists[0].value = [...searchCols];\r\n    } else {\r\n      this.lists[0].value = [...this.listsCache];\r\n    }\r\n  }\r\n\r\n  dndListChange0($event) {\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[0].value = $event;\r\n    }\r\n  }\r\n  dndListChange1($event) {\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[1].value = $event;\r\n    }\r\n  }\r\n  dndListChange2($event) {\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[2].value = $event;\r\n    }\r\n  }\r\n  dndListChange3($event) {\r\n    if (this.lists && this.lists.length) {\r\n      this.lists[3].value = $event;\r\n    }\r\n  }\r\n\r\n  private handlePagingModeChanged(pagingMode: any) {\r\n    this.isOrNotPaging = pagingMode.value === 1;\r\n  }\r\n}\r\n","import {\r\n  Component, Input, OnChanges, SimpleChanges, AfterViewInit, OnDestroy,\r\n  ElementRef, Inject, OnInit, Renderer2, HostBinding, Injector, Optional,\r\n  ViewChild, LOCALE_ID, Output, EventEmitter\r\n} from '@angular/core';\r\nimport { RenderService } from '../../service/render/render.service';\r\nimport { FilterManagerService, SchemaManagerService, EventBus, DataRenderExtendService, JointSearchManagerService, LcpService, QDPCacheUtil, RtfServices } from '@qdp/common';\r\nimport { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ServicesUtils } from '../../util/services.utils';\r\nimport { RenderOption } from '../../entity/RenderOption';\r\nimport { DimensionSettingComponent } from '../dimension-setting/dimension-setting.component';\r\nimport { ColumnsSettingComponent } from '../columns-setting/columns-setting.component';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { FormErrorService } from '@farris/command-services';\r\nimport { CacheService } from '@ecp-caf/caf-common';\r\nimport { Subject } from 'rxjs';\r\n\r\ndeclare var GC: any;\r\n\r\nconst matches = (el, selector) => (el.matches || el.msMatchesSelector).call(el, selector);\r\n@Component({\r\n  selector: 'qdp-view',\r\n  templateUrl: './qdp-view.component.html',\r\n  styleUrls: ['./qdp-view.component.css']\r\n})\r\nexport class QdpViewComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n  localizeService: LocalizeService;\r\n  @ViewChild('sheet', { read: ElementRef }) public sheetEl: ElementRef;\r\n  @ViewChild(DimensionSettingComponent) dimensionSettingComponent;\r\n  @ViewChild(ColumnsSettingComponent) columnsSettingComponent;\r\n  aggreData: any = [\r\n    { name: 'è¯·éæ©', value: 0 },\r\n    { name: 'åè®¡', value: 1 },\r\n    { name: 'æå°å¼', value: 2 },\r\n    { name: 'æå¤§å¼', value: 3 },\r\n    { name: 'è®¡æ°', value: 4 },\r\n    { name: 'å¹³åå¼', value: 5 }\r\n  ];\r\n  groupSelectValue = this.aggreData[0].value;\r\n  groupText = '';\r\n  colIsGroup = false;\r\n  formInline = true;\r\n  localId: any;\r\n  msgService: any;\r\n  currentColIndex = 0;\r\n  schemaManager: SchemaManagerService;\r\n  jointSearchManagerService: JointSearchManagerService;\r\n  lcpService: LcpService;\r\n  pageIndex: any;\r\n  dataRenderExtendService: any;\r\n  loadService: LoadingService;\r\n  formErrorService: FormErrorService;\r\n  cache: CacheService;\r\n  @Input() isInitQdpView = true;  // æ¯å¦åå§åqdpViewComponent\r\n  @Input() isShowDimension = true;\r\n\r\n  constructor(\r\n    @Inject(ElementRef) elRef: ElementRef,\r\n    public renderService: RenderService,\r\n    private renderer: Renderer2,\r\n    private filterService: FilterManagerService,\r\n    @Optional() private injector: Injector\r\n  ) {\r\n    this.elRef = elRef;\r\n    if (this.injector) {\r\n      this.localizeService = this.injector.get(LocalizeService);\r\n      this.msgService = this.injector.get(MessagerService);\r\n      this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;\r\n      this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE;\r\n      this.loadService = this.injector.get(LoadingService);\r\n      this.lcpService = this.injector.get(LcpService);\r\n      this.jointSearchManagerService = this.injector.get(JointSearchManagerService);\r\n      this.schemaManager = this.injector.get(SchemaManagerService);\r\n      this.dataRenderExtendService = this.injector.get(DataRenderExtendService);\r\n      this.formErrorService = this.injector.get(FormErrorService);\r\n      this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');\r\n      this.cache = this.injector.get(CacheService);\r\n    }\r\n  }\r\n\r\n  private setServices() {\r\n    ServicesUtils.setServices('renderExtends' + this.queryId, this.dataRenderExtendService);\r\n  }\r\n\r\n  @HostBinding('class.f-utils-fill-flex-column') cls = true;\r\n  public spread: any;\r\n  private elRef: ElementRef;\r\n  private spreadOptions: any[];\r\n  public isOpen = false;\r\n  private docClickSubscription: any;\r\n  headerMenuTop = 0;\r\n  headerMenuLeft = 0;\r\n  headerMenuDisplay = 'none';\r\n  colIsGroupId = 'colIsGroup' + EventBus.guid();\r\n\r\n  style = {\r\n    width: '800px',\r\n    height: '600px'\r\n  };\r\n\r\n  // indicate all options\r\n  @Input() isCommonQdpViewComponent = false;\r\n  @Input() allowUserDragDrop: boolean;        // æå®æ¯å¦åè®¸ææ½Rangeæ°æ®\r\n  @Input() allowUserDragFill: boolean;        // æå®æ¯å¦åè®¸ææ½å¡«åèå´\r\n  @Input() allowUserZoom: boolean;            // æå®æ¯å¦åè®¸æä½ctrl, é¼ æ æ»è½®è¿è¡ç¼©æ¾\r\n  @Input() allowUserResize: boolean;          // æå®æ¯å¦åè®¸è°æ´ååè¡çå¤§å°\r\n  @Input() showHorizontalScrollbar: boolean;  // æå®æ¯å¦æ¾ç¤ºåç´æ¹åçæ»å¨æ¡\r\n  @Input() showVerticalScrollbar: boolean;    // æå®æ¯å¦æ¾ç¤ºæ°´å¹³æ¹åçæ»å¨æ¡\r\n  @Input() tabStripVisible: boolean;          // æå®æ¯å¦æ¾ç¤ºTabæ ç­¾é¡µ\r\n  @Input() allowUndo: boolean;                // æå®æ¯å¦åè®¸æ¤é\r\n  @Input() allowSheetReorder: boolean;        // æå®ç¨æ·æ¯å¦å¯ä»¥éæ°æåºSpreadç»ä»¶ä¸­çå·¥ä½è¡¨ï¼å¯é\r\n  @Input() allowCopyPasteExcelStyle: boolean; // æå®æ¯å¦åè®¸æ·è´ãç²è´´Excelæ ·å¼\r\n  @Input() allowExtendPasteRange: boolean;    // æå®æ¯å¦æ©å±ç²è´´èå´\r\n  @Input() copyPasteHeaderOptions: boolean;   // æå®æ·è´æ¯å¦åæ¬è¡¨å¤´\r\n  @Input() showDragFillSmartTag: boolean;     // æå®æ¯å¦æ¾ç¤ºææ½å¡«åå¯¹è¯æ¡\r\n  @Input() scrollbarShowMax: boolean;         // æå®æ¾ç¤ºçæ»å¨æ¡æ¯å¦åºäºå·¥ä½è¡¨ä¸­çæ´ä¸ªåæ°åè¡æ°\r\n  @Input() scrollbarMaxAlign: boolean;        // æå®æ»å¨æ¡æ¯å¦ä¸æ´»å¨å·¥ä½è¡¨çæåä¸è¡ååå¯¹é½\r\n  @Input() tabEditable: boolean;              // æå®æ¯å¦å¯ä»¥ç¼è¾sheet tab\r\n  @Input() newTabVisible: boolean;            // æå®æ¯å¦æ¾ç¤ºæ°å¢tabæé®\r\n  @Input() tabNavigationVisible: boolean;     // æå®æ¯å¦æ¾ç¤ºå·¥ä½è¡¨éé¡¹å¡å¯¼èª\r\n  @Input() backColor: string;                 // èæ¯è²è®¾ç½®\r\n  @Input() backgroundImage: string;           // èæ¯å¾çè®¾ç½®\r\n  @Input() backgroundImageLayout: number;     // èæ¯å¾ççå¸å±è®¾ç½®\r\n  @Input() grayAreaBackColor: string;         // ç°è²åºåçèæ¯è²è®¾ç½®\r\n  @Input() showResizeTip: number;             // æå®å¦ä½æ¾ç¤ºè°æ´å¤§å°æç¤º\r\n  @Input() showDragDropTip: boolean;          // æå®æ¯å¦æ¾ç¤ºææ½æç¤º\r\n  @Input() showDragFillTip: boolean;          // æå®æ¯å¦æ¾ç¤ºææ½å¡«åæç¤º\r\n  @Input() showScrollTip: number;             // æå®æ¯å¦æ¾ç¤ºæ»å¨æ¡æç¤º\r\n  @Input() highlightInvalidData: boolean;     // æå®æ¯å¦é«äº®æ¾ç¤ºæ ææ°æ®\r\n  @Input() useTouchLayout: boolean;           // æå®æ¯å¦ä½¿ç¨è§¦æ¸å¸å±æ¥æ¾ç¤ºspread\r\n  @Input() hideSelection: boolean;            // æå®å½spreadç»ä»¶æ²¡æç¦ç¹æ¶æ¯å¦éæ©çªåºæ¾ç¤º\r\n  @Input() allowUserEditFormula: boolean;     // æå®ç¨æ·æ¯å¦å¯ä»¥ç¼è¾ååæ ¼ä¸­çå¬å¼\r\n  @Input() enableFormulaTextbox: boolean;     // æå®æ¯å¦å¯ç¨å¬å¼ææ¬æ¡\r\n  @Input() autoFitType: number;               // æå®æ¯å¦å°åå®¹æ ¼å¼åä¸ºéåååæ ¼åæ é¢ä¸­çåå®¹\r\n  @Input() referenceStyle: number;            // å·¥ä½è¡¨ä¸ååæ ¼å¬å¼ä¸­ååæ ¼åèå´å¼ç¨çæ ·å¼\r\n  @Input() hostStyle: any; // used for get styles form parent host DIV\r\n  @Input() hostClass: string;\r\n  @Input() name: string;\r\n  @Input() queryId: string;\r\n  @Input() controlType: string; // æ¥è¯¢ç±»å\r\n  @Input() licenseKey: string;\r\n  @Input() qoManagerCode: any;\r\n  @Input() queryRelativeUrl: any;\r\n  @Input() qoId: any;\r\n  @Input() voId: any;\r\n  @Input() groupType: any;\r\n  @Input() templateType: any;\r\n  @Input() multiSheets: any[];  //å¤sheeté¡µæ¯æ\r\n  curSheet: any;\r\n  sheetChanged = new Subject<any>(); //åæ¢sheetçå¬äºä»¶\r\n  multiSheetsSchemaIds: any = {};\r\n\r\n  sheet: any;\r\n  // æ ¼å¼æ¹æ¡ä¿¡æ¯\r\n  schemaValue: any;\r\n  colList: any; // åä¿¡æ¯\r\n  @Input() formData: any; // æ¥æºæ°æ®\r\n  searchText = '';\r\n  groupIcon = '<span class=\"k-icon k-i-search\"></span>';\r\n  conditionExpression = null;\r\n  jointsearchInfoList: any;\r\n  loading: any;\r\n  tabId: any;\r\n\r\n  ngOnInit() {\r\n    this.loading = this.loadService.show({ container: 'body' });\r\n    this.setServices();\r\n    // äº¤åè¡¨ç»æé¡µçå¬äºä»¶\r\n    if (this.controlType === 'crosstab') {\r\n      this.docClickSubscription = this.renderer.listen('document', 'click', this.onDocumentClick.bind(this));\r\n    }\r\n    this.tabId = RtfServices.getTabId(this.queryId);\r\n    // ç¼å­ç»æé¡µå¯¹è±¡ï¼ç»å·¥å·æ ä½¿ç¨\r\n    QDPCacheUtil.setCache(this.tabId + this.queryId + this.controlType + 'qdpview', this);\r\n    ServicesUtils.setServices(this.tabId + 'qoId', this.qoId);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    try {\r\n      // éè¿éç½®ä¸­å¿ï¼è·åspreadjsæ§ä»¶åºåå·\r\n      this.lcpService.formErrorService = this.formErrorService;\r\n      this.lcpService.getSpreadLicense().subscribe(data => {\r\n        if (data) {\r\n          GC.Spread.Sheets.LicenseKey = data;\r\n        }\r\n        this.afterView();\r\n      });\r\n    } catch (e) {\r\n      this.loading.close();\r\n    }\r\n    this.setMultiSheetsVarible();\r\n  }\r\n\r\n  private setMultiSheetsVarible() {\r\n    if (this.columnsSettingComponent) {\r\n      this.columnsSettingComponent.multiSheets = this.multiSheets;\r\n      this.columnsSettingComponent.curSheet = this.curSheet;\r\n      this.columnsSettingComponent.multiSheetsSchemaIds = this.multiSheetsSchemaIds;\r\n    }\r\n  }\r\n\r\n  afterView() {\r\n    const elRef = this.elRef;\r\n    const dom = elRef.nativeElement as HTMLElement;\r\n    const hostElement = dom.querySelector('#sheet');\r\n    if (this.licenseKey) {\r\n      GC.Spread.Sheets.LicenseKey = this.licenseKey;\r\n    }\r\n    this.spread = new GC.Spread.Sheets.Workbook(hostElement, { sheetCount: 0 });\r\n    this.setSpreadOptions();\r\n    // this.bindCustomEvent(this.spread);\r\n    const eventId = this.tabId;\r\n    EventBus.register('schemaValueChanged', this.handleSchemaValueChanged.bind(this), eventId + 'qdpViewComponent');\r\n    if (this.templateType !== 'qdpAdvancedTemplate' && this.isInitQdpView) {\r\n      this.initQdpView();\r\n    } else {\r\n      this.loading.close();\r\n    }\r\n  }\r\n\r\n  private handleSchemaValueChanged(schemaValue: any) {\r\n    this.schemaValue = schemaValue;\r\n    if (this.curSheet && this.multiSheets.length && schemaValue && schemaValue.id) {\r\n      this.multiSheetsSchemaIds[this.curSheet] = schemaValue.id;\r\n      this.setMultiSheetsVarible();\r\n    }\r\n  }\r\n\r\n  public initQdpView() {\r\n    const self = this;\r\n    if (!this.loading) {\r\n      this.loading = this.loadService.show({ container: 'body' });\r\n    }\r\n    this.jointSearchManagerService.getjointsearch('form' + 'ff3ea474-cc65-23b0-cdb1-73c9146cea3b', this.queryId, '').subscribe((jointsearchList: any) => {\r\n      this.filterService.getFilter(this.qoManagerCode ? this.qoManagerCode : this.queryId, this.queryId, this.queryRelativeUrl, 1, this.groupType).subscribe(data => {\r\n        self.conditionExpression = null;\r\n        self.jointsearchInfoList = jointsearchList;\r\n        if (data && data.filter) { self.conditionExpression = JSON.stringify(data.filter); }\r\n        const renderOption: RenderOption = Object.assign({ multiSheetsSchemaIds: self.multiSheetsSchemaIds, curSheet: self.curSheet, multiSheets: self.multiSheets }, { queryId: self.queryId, controlType: self.controlType, qoManagerCode: self.qoManagerCode, pageIndex: 0, queryRelativeUrl: self.queryRelativeUrl, filterCondition: self.conditionExpression, groupType: self.groupType, voId: self.voId, jointsearchInfoList: self.jointsearchInfoList, loading: this.loading });\r\n        this.qdpViewRender(renderOption);\r\n      });\r\n    });\r\n  }\r\n\r\n  private bindCustomEvent(spread: any) {\r\n    // const customEventNameSpace = '.ng';\r\n    // const events = [];\r\n    // events.forEach((event) => {\r\n    //   spread.bind(event + customEventNameSpace, (event: any, data: any) => {\r\n    //     const eventType = event.type;\r\n    //     const camelCaseEvent = eventType[0].toLowerCase() + eventType.substr(1);\r\n    //     this[camelCaseEvent].emit(data);\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  setSpreadOptions() {\r\n    const self = this;\r\n    const spread = this.spread;\r\n    if (!this.spread) {\r\n      return;\r\n    }\r\n    spread.suspendEvent();\r\n    spread.suspendPaint();\r\n    this.spread.fromJSON(null);\r\n    const options = this.spreadOptions;\r\n    if (options) {\r\n      options.forEach((option) => {\r\n        if (option.name === 'name') {\r\n          spread.name = option.value;\r\n        } else {\r\n          spread.options[option.name] = option.value;\r\n        }\r\n      });\r\n    }\r\n    spread.unbind(GC.Spread.Sheets.Events.ActiveSheetChanged);\r\n    spread.bind(GC.Spread.Sheets.Events.ActiveSheetChanged, function (e, args) {\r\n      self.curSheet = args.newSheet.name();\r\n      self.setGroup(self.curSheet);\r\n      self.setMultiSheetsVarible();\r\n      self.initQdpView();\r\n    });\r\n    spread.resumePaint();\r\n    spread.resumeEvent();\r\n  }\r\n\r\n  /**\r\n   * æ¹æ³å·²åºå¼ï¼å»ºè®®æ¿æ¢ä¸ºinitQDPViewæ¹æ³\r\n   * åå§åæ¥è¯¢ç»æé¡µæ§ä»¶\r\n   */\r\n  initSpread(queryId: string, schemaId: string, controlType?: any, qoManagerCode?: any, pageIndex?: any, queryRelativeUrl?: any, filterCondition?: any, groupType?: any, voId?: any, fromCache?: any, isSchemaSelectChanged?: any) {\r\n    if (this.curSheet && this.multiSheets.length) {\r\n      this.multiSheetsSchemaIds[this.curSheet] = schemaId;\r\n      this.setMultiSheetsVarible();\r\n    }\r\n    this.qdpViewRender(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { schemaId, queryId, spread: this.spread, controlType, qoManagerCode, pageIndex, queryRelativeUrl, filterCondition, formData: this.formData, groupType: groupType, voId: voId, qdpView: this, fromCache, isSchemaSelectChanged, jointsearchInfoList: this.jointsearchInfoList }));\r\n  }\r\n\r\n  /**\r\n   * åå§åæ¥è¯¢ç»ææ§ä»¶\r\n   */\r\n  qdpViewRender(option: RenderOption) {\r\n    if (!option.loading) {\r\n      option.loading = this.loadService.show({ container: 'body' });\r\n    }\r\n    option.voId = !option.voId ? this.voId : option.voId;\r\n    option.groupType = !option.groupType ? this.groupType : option.groupType;\r\n    option.fromCache = option.fromCache ? option.fromCache : false;\r\n    if (option.filterCondition) {\r\n      this.conditionExpression = option.filterCondition;\r\n    }\r\n    const renderOption: RenderOption = Object.assign({}, option, { formData: this.formData, spread: this.spread, qdpView: this });\r\n    this.renderService.render(renderOption);\r\n    EventBus.register(this.queryId + 'spread_init', this.registeSpreadColumnWidthChangedEvent.bind(this), this.queryId);\r\n  }\r\n\r\n  /**\r\n   * æ¹æ³å·²åºå¼ï¼å»ºè®®æ¿æ¢ä¸ºexportæ¹æ³\r\n   * å¯¼åºExcel\r\n   */\r\n  exportExcel(queryId: string, id: string, type?: any, pageIndex?: any, qoManagerCode?: any, queryRelativeUrl?: any, filterCondition?: any, groupType?: any, voId?: any, totalCount?: any, exportType?: any) {\r\n    this.export(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId, schemaId: id, controlType: type, pageIndex, qoManagerCode, queryRelativeUrl, filterCondition, groupType, voId, totalCount, exportType }));\r\n  }\r\n\r\n  /**\r\n   * å¯¼åºExcel\r\n   * @param opiton æ¸²æéç½®é¡¹\r\n   */\r\n  export(option: RenderOption) {\r\n    if (this.controlType === 'crosstab') {\r\n      option.totalCount = this.spread.getActiveSheet().getRowCount();\r\n    }\r\n    option.voId = this.voId ? this.voId : option.voId;\r\n    option.queryId = this.queryId ? this.queryId : option.queryId;\r\n    option.groupType = this.groupType ? this.groupType : option.groupType;\r\n    option.qoManagerCode = this.qoManagerCode ? this.qoManagerCode : option.qoManagerCode;\r\n    this.renderService.exportData(option);\r\n    // this.renderService.exportData(option.queryId, option.schemaId, option.controlType, option.pageIndex, option.qoManagerCode, option.queryRelativeUrl, option.filterCondition, option.groupType, option.voId, option.totalCount || 1, option.exportType);\r\n  }\r\n\r\n  /**\r\n   * æ¹æ³å·²åºå¼ï¼å»ºè®®æ¿æ¢ä¸ºprintæ¹æ³\r\n   * æå°PDF\r\n   */\r\n  pdfExportEvent(queryId: string, id: string, type?: any, qoManagerCode?: any, printIntegration?: any, queryRelativeUrl?: any, filterCondition?: any, pageIndex?: any, groupType?: any, voId?: any) {\r\n    this.print(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId, schemaId: id, controlType: type, pageIndex, qoManagerCode, queryRelativeUrl, printIntegration, filterCondition, groupType, voId }));\r\n  }\r\n\r\n  /**\r\n   * æå°\r\n   * @param option æ¸²æéç½®é¡¹\r\n   */\r\n  print(option: RenderOption) {\r\n    option.voId = this.voId ? this.voId : option.voId;\r\n    option.queryId = this.queryId ? this.queryId : option.queryId;\r\n    option.groupType = this.groupType ? this.groupType : option.groupType;\r\n    option.qoManagerCode = this.qoManagerCode ? this.qoManagerCode : option.qoManagerCode;\r\n    this.renderService.pdfExportEvent(option);\r\n    // this.renderService.pdfExportEvent(option.queryId, option.schemaId, option.controlType, option.qoManagerCode, option.printIntegration, option.queryRelativeUrl, option.filterCondition, option.groupType, option.pageIndex, option.voId);\r\n  }\r\n\r\n  /**\r\n   * æ¹æ³å·²åºå¼ï¼å»ºè®®æ¿æ¢ä¸ºprintPreview(option: RenderOption)æ¹æ³\r\n   * æå°é¢è§\r\n   */\r\n  printPreView(queryId: string, id: string, type?: any, qoManagerCode?: any, printIntegration?: any, queryRelativeUrl?: any, filterCondition?: any, pageIndex?: any, groupType?: any, voId?: any) {\r\n    const _voId = this.voId ? this.voId : voId;\r\n    const _queryId = this.queryId ? this.queryId : queryId;\r\n    const _groupType = this.groupType ? this.groupType : groupType;\r\n    const _qoManagerCode = this.qoManagerCode ? this.qoManagerCode : qoManagerCode;\r\n    this.renderService.printPreView(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId: _queryId, schemaId: id, controlType: type, qoManagerCode: _qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, groupType: _groupType, pageIndex, voId: _voId}));\r\n    // this.renderService.printPreView(queryId, id, type, qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, groupType ? groupType : this.groupType, pageIndex, voId ? voId : this.voId);\r\n  }\r\n\r\n  /**\r\n   * æå°é¢è§\r\n   * @param option æ¸²æéç½®é¡¹\r\n   */\r\n  printPreview(option: RenderOption) {\r\n    option.groupType = this.groupType ? this.groupType : option.groupType;\r\n    option.voId = this.voId ? this.voId : option.voId;\r\n    this.renderService.printPreView(option);\r\n    // this.renderService.printPreView(option.queryId, option.schemaId, option.controlType, option.qoManagerCode, option.printIntegration, option.queryRelativeUrl, option.filterCondition, option.groupType, option.pageIndex, option.voId);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const options = [];\r\n    for (const changeName in changes) {\r\n      const newValue = changes[changeName].currentValue;\r\n      if (newValue !== null && newValue !== void 0) {\r\n        this.tabId = RtfServices.getTabId(this.queryId);\r\n        switch (changeName) {\r\n          case 'hostStyle':\r\n            this.style = newValue;\r\n            if (this.spread) {\r\n              this.spread.refresh();\r\n            }\r\n            break;\r\n          case 'hostClass':\r\n            break;\r\n          case 'name':\r\n            this.spread.name = newValue;\r\n            break;\r\n          case 'formData':\r\n            newValue.dynamicCols.forEach(col => {\r\n              col.name = col.title;\r\n              col.bindField = col.field;\r\n              col.colWidth = 150;\r\n              col.align = 0;\r\n              col.visible = true;\r\n              col.isFixed = false;\r\n              col.formatType = 0;\r\n              col.formattor = '';\r\n              col.sort = 0;\r\n              col.pageAggreText = null;\r\n              col.pageAggre = 0;\r\n              col.isGroup = false;\r\n              col.groupAggreText = '';\r\n              col.groupAggre = 0;\r\n              col.totalAggreText = '';\r\n              col.totalAggre = 0;\r\n              col.level = 1;\r\n              col.childList = [];\r\n              col.dimension = 0;\r\n              col.rowColor = null;\r\n            });\r\n            this.formData = newValue;\r\n            this.ngOnDestroy();\r\n            this.afterView();\r\n            break;\r\n          case 'groupType':\r\n            this.groupType = newValue;\r\n            break;\r\n          case 'queryId':\r\n            this.queryId = newValue;\r\n            QDPCacheUtil.setCache(this.tabId + this.queryId + this.controlType + 'qdpview', this);\r\n            break;\r\n          case 'controlType':\r\n            this.controlType = newValue;\r\n            break;\r\n          case 'qoId':\r\n            this.qoId = newValue;\r\n            ServicesUtils.setServices(this.tabId + 'qoId', this.qoId);\r\n            break;\r\n          case 'qoManagerCode':\r\n          case 'voId':\r\n          case 'queryRelativeUrl':\r\n          case 'templateType':\r\n            break;\r\n          case 'multiSheets':\r\n            this.multiSheets = newValue;\r\n            this.setGroup(this.multiSheets[0]);\r\n            break;\r\n          case 'licenseKey':\r\n            if (newValue) {\r\n              GC.Spread.Sheets.LicenseKey = newValue;\r\n            }\r\n            break;\r\n          case 'isCommonQdpViewComponent':\r\n            this.isCommonQdpViewComponent = newValue;\r\n            if (this.isCommonQdpViewComponent) {\r\n\r\n            }\r\n            break;\r\n          default:\r\n            options.push({ name: changeName, value: newValue });\r\n        }\r\n      }\r\n    }\r\n    this.spreadOptions = options;\r\n    this.setSpreadOptions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.spread) {\r\n      this.spread.destroy();\r\n    }\r\n  }\r\n\r\n  onResized(event: any): void {\r\n    this.style.height = event.newHeight + 'px';\r\n    this.style.width = event.newWidth + 'px';\r\n  }\r\n\r\n  toggle() {\r\n    let isCompare = false;\r\n    if (this.isOpen) {\r\n      if (this.controlType === 'crosstab') {\r\n        this.dimensionSettingComponent.isCompare = false;\r\n        this.dimensionSettingComponent.selectedDimesion();\r\n        isCompare = this.dimensionSettingComponent.isCompare;\r\n      } else {\r\n        this.columnsSettingComponent.isCompare = false;\r\n        this.columnsSettingComponent.selectedDimesion();\r\n        isCompare = this.columnsSettingComponent.isCompare;\r\n      }\r\n      if (this.schemaValue && this.schemaValue.isPrefab !== 1 && !isCompare) {\r\n        this.schemaValue.schemaValue = this.controlType === 'crosstab' ? JSON.stringify(this.dimensionSettingComponent.schemaValue.schemaValue) : JSON.stringify(this.columnsSettingComponent.schemaValue.schemaValue);\r\n        this.schemaManager.saveSchema({ 'schema': JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe(() => { }, (error: any) => {\r\n          this.formErrorService.exception(error.Message, error);\r\n        });\r\n        this.schemaValue.schemaValue = JSON.parse(this.schemaValue.schemaValue);\r\n      }\r\n    }\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  setGroup(sheetName: any) {\r\n    this.curSheet = sheetName;\r\n    if (this.groupType) {\r\n      for (let i = 0; i < this.multiSheets.length; i++) {\r\n        this.groupType = this.groupType.replace(this.multiSheets[i], \"\");\r\n      }\r\n      this.groupType += sheetName;\r\n    } else {\r\n      this.groupType = sheetName;\r\n    }\r\n    this.sheetChanged.next(this.groupType);\r\n  }\r\n\r\n  private onDocumentClick(e: any): void {\r\n    if (e.target.tagName === 'CANVAS') {\r\n      this.isOpen = false;\r\n    }\r\n  }\r\n\r\n  public handleCrosstabPageChange(pageIndex: any, pageSize: any) {\r\n    this.sheet = this.spread.getActiveSheet();\r\n    for (let i = 0; i < this.sheet.getRowCount(); i++) {\r\n      if (i >= (pageIndex - 1) * pageSize && i < pageIndex * pageSize) {\r\n        this.sheet.setRowVisible(i, true, GC.Spread.Sheets.SheetArea.viewport);\r\n        this.sheet.showRow(i, GC.Spread.Sheets.VerticalPosition.bottom);\r\n      } else {\r\n        this.sheet.setRowVisible(i, false, GC.Spread.Sheets.SheetArea.viewport);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleContextMenu($event) {\r\n    if ('list' === this.controlType.toLowerCase()) {\r\n      let x = 0, y = 0;\r\n      let qdpviewNative = this.sheetEl.nativeElement;\r\n      while (qdpviewNative) {\r\n        x += qdpviewNative.offsetLeft;\r\n        y += qdpviewNative.offsetTop;\r\n        qdpviewNative = qdpviewNative.offsetParent;\r\n      }\r\n\r\n      const activeSheet = this.spread.getActiveSheet();\r\n      const colHeader = GC.Spread.Sheets.SheetArea.colHeader;\r\n      const target = activeSheet.hitTest($event.clientX - x, $event.clientY - y);\r\n      if (target.hitTestType !== colHeader || target.col === undefined || target.row === undefined) {\r\n        return false;\r\n      }\r\n\r\n      const headerRowCount = activeSheet.getRowCount(colHeader);\r\n      const span = activeSheet.getSpan(target.row, target.col, colHeader);\r\n      // å¤æ­å¤çº§è¡¨å¤´çæåµä¸ï¼åªå¤çæå­éè¡¨å¤´\r\n      if (span && (target.row + span.rowCount) < headerRowCount) {\r\n        return false;\r\n      }\r\n      this.currentColIndex = target.col;\r\n      this.initColGroupAggre(this.currentColIndex);\r\n\r\n      this.headerMenuDisplay = 'block';\r\n      this.headerMenuTop = $event.clientY;\r\n      this.headerMenuLeft = $event.clientX;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleIsGroupClick() {\r\n    if (this.colIsGroup) {\r\n      this.groupSelectValue = this.aggreData[0].value;\r\n      this.groupText = '';\r\n    }\r\n  }\r\n\r\n  handleSaveClick() {\r\n    const self = this;\r\n    try {\r\n      if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption && this.schemaValue.schemaValue.columnOption.colList) {\r\n        if (this.schemaValue && this.schemaValue.isPrefab === 1) {\r\n          this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));\r\n          return;\r\n        }\r\n        const colList = JSON.parse(JSON.stringify(this.schemaValue.schemaValue.columnOption.colList));\r\n        const params = { index: this.currentColIndex, colIndex: 0, type: 'edit' };\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < colList.length; i++) {\r\n          this.recursiveColumnSort(colList[i], null, params);\r\n        }\r\n\r\n        this.schemaValue.schemaValue.columnOption.colList = colList;\r\n        this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);\r\n        this.schemaManager.saveSchema({ schema: JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe(data => {\r\n          self.initQdpView();\r\n          self.currentColIndex = 0;\r\n          self.headerMenuDisplay = 'none';\r\n        }, (error: any) => {\r\n          this.formErrorService.exception(error.Message, error);\r\n        });\r\n      }\r\n    } catch (e) { self.currentColIndex = 0; }\r\n  }\r\n\r\n  handleClearSort() {\r\n    const self = this;\r\n    try {\r\n      if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption && this.schemaValue.schemaValue.columnOption.colList && this.schemaValue.schemaValue.columnOption.colList.length) {\r\n        if (this.schemaValue && this.schemaValue.isPrefab === 1) {\r\n          this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));\r\n          return;\r\n        }\r\n        const colList = JSON.parse(JSON.stringify(this.schemaValue.schemaValue.columnOption.colList));\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < colList.length; i++) {\r\n          this.recursiveClearColumnSort(colList[i], null);\r\n        }\r\n\r\n        this.schemaValue.schemaValue.columnOption.colList = colList;\r\n        this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);\r\n        this.schemaManager.saveSchema({ schema: JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe(data => {\r\n          const renderOption: RenderOption = Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { schemaId: this.schemaValue.id, queryId: self.queryId, controlType: self.controlType, qoManagerCode: self.qoManagerCode, pageIndex: 0, queryRelativeUrl: self.queryRelativeUrl, filterCondition: self.conditionExpression, groupType: self.groupType, voId: self.voId, jointsearchInfoList: self.jointsearchInfoList });\r\n          self.qdpViewRender(renderOption);\r\n          self.currentColIndex = 0;\r\n          self.headerMenuDisplay = 'none';\r\n        }, (error: any) => {\r\n          this.formErrorService.exception(error.Message, error);\r\n        });\r\n      }\r\n    } catch (e) {\r\n      self.currentColIndex = 0;\r\n    }\r\n  }\r\n\r\n  // @HostListener('click')\r\n  handleBlur($event) {\r\n    this.headerMenuDisplay = 'none';\r\n  }\r\n\r\n  private initColGroupAggre(index: any) {\r\n    if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption\r\n      && this.schemaValue.schemaValue.columnOption.colList && this.schemaValue.schemaValue.columnOption.colList.length > index) {\r\n      const params = { index: this.currentColIndex, colIndex: 0, type: 'init' };\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.schemaValue.schemaValue.columnOption.colList.length; i++) {\r\n        this.recursiveColumnSort(this.schemaValue.schemaValue.columnOption.colList[i], null, params);\r\n      }\r\n    }\r\n  }\r\n\r\n  private recursiveColumnSort(col, colList, params) {\r\n    if (colList == null) {\r\n      if (col.childList && col.childList.length) {\r\n        this.recursiveColumnSort(null, col.childList, params);\r\n      } else {\r\n        if (params.colIndex === params.index) {\r\n          if (params.type === 'init') {\r\n            this.colIsGroup = col.isGroup;\r\n            this.groupText = col.groupAggreText || '';\r\n            this.groupSelectValue = col.groupAggre;\r\n          } else if (params.type === 'edit') {\r\n            col.isGroup = this.colIsGroup;\r\n            col.groupAggreText = this.groupText || '';\r\n            col.groupAggre = this.groupSelectValue;\r\n          }\r\n        }\r\n        params.colIndex++;\r\n      }\r\n    } else {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < colList.length; i++) {\r\n        if (colList[i].childList && colList[i].childList.length) {\r\n          this.recursiveColumnSort(null, colList[i].childList, params);\r\n        } else {\r\n          if (params.colIndex === params.index) {\r\n            if (params.type === 'init') {\r\n              this.colIsGroup = colList[i].isGroup;\r\n              this.groupText = colList[i].groupAggreText || '';\r\n              this.groupSelectValue = colList[i].groupAggre;\r\n            } else if (params.type === 'edit') {\r\n              colList[i].isGroup = this.colIsGroup;\r\n              colList[i].groupAggreText = this.groupText || '';\r\n              colList[i].groupAggre = this.groupSelectValue;\r\n            }\r\n          }\r\n          params.colIndex++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private recursiveClearColumnSort(col, colList) {\r\n    if (colList == null) {\r\n      if (col.childList && col.childList.length) {\r\n        this.recursiveClearColumnSort(null, col.childList);\r\n      } else {\r\n        col['sort'] = 0;\r\n        col['sortIndex'] = 0;\r\n      }\r\n    } else {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < colList.length; i++) {\r\n        if (colList[i].childList && colList[i].childList.length) {\r\n          this.recursiveClearColumnSort(null, colList[i].childList);\r\n        } else {\r\n          colList[i]['sort'] = 0;\r\n          colList[i]['sortIndex'] = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private registeSpreadColumnWidthChangedEvent() {\r\n    const self = this;\r\n    this.sheet = this.spread.getActiveSheet();\r\n    self.sheet.bind(GC.Spread.Sheets.Events.ColumnWidthChanged, function (sender, info) {\r\n      const index = info.colList[0];\r\n      const colW = info.sheet.getColumnWidth(info.colList[0]);\r\n      if (self.schemaValue && self.schemaValue.schemaValue && self.schemaValue.schemaValue.columnOption\r\n        && self.schemaValue.schemaValue.columnOption.colList && self.schemaValue.schemaValue.columnOption.colList.length) {\r\n        if (self.schemaValue && self.schemaValue.isPrefab === 1) {\r\n          self.msgService.info(self.localizeService.getValue('spread.message.validate.sort'));\r\n          return;\r\n        }\r\n\r\n        const colList = JSON.parse(JSON.stringify(self.schemaValue.schemaValue.columnOption.colList));\r\n        const params = { index: index, colIndex: 0, colWidth: colW };\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < colList.length; i++) {\r\n          self.recursiveColumnWidthChanged(colList[i], null, params);\r\n        }\r\n\r\n        self.schemaValue.schemaValue.columnOption.colList = colList;\r\n        self.schemaValue.schemaValue = JSON.stringify(self.schemaValue.schemaValue);\r\n        self.schemaManager.saveSchema({ schema: JSON.stringify(self.schemaValue), groupType: this.groupType }, '').subscribe(data => {\r\n          self.schemaValue.schemaValue = JSON.parse(self.schemaValue.schemaValue);\r\n        }, (error: any) => {\r\n          self.formErrorService.exception(error.Message, error);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private recursiveColumnWidthChanged(col, colList, params) {\r\n    if (colList == null) {\r\n      if (col.childList && col.childList.length) {\r\n        this.recursiveColumnWidthChanged(null, col.childList, params);\r\n      } else {\r\n        if (params.colIndex === params.index) {\r\n          col.colWidth = params.colWidth;\r\n        }\r\n        params.colIndex++;\r\n      }\r\n    } else {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < colList.length; i++) {\r\n        if (colList[i].childList && colList[i].childList.length) {\r\n          this.recursiveColumnWidthChanged(null, colList[i].childList, params);\r\n        } else {\r\n          if (params.colIndex === params.index) {\r\n            colList[i].colWidth = params.colWidth;\r\n          }\r\n          params.colIndex++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QdpViewComponent } from './component/qdp-view/qdp-view.component';\r\nimport { RenderService } from './service/render/render.service';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FlexLayoutModule } from '@farris/ui-flex-layout';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown'\r\nimport { DndListModule } from '@qdp/common';\r\nimport { LocalizeModule } from '@qdp/localize';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { ColumnsSettingComponent } from './component/columns-setting/columns-setting.component';\r\nimport { DimensionSettingComponent } from './component/dimension-setting/dimension-setting.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoadingModule.forRoot({\r\n      message: 'Loading...'\r\n    }),\r\n    DndListModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ComboListModule,\r\n    InputGroupModule,\r\n    FDropdownDirectiveTypeModule,\r\n    // LocalizeModule\r\n  ],\r\n  declarations: [\r\n    QdpViewComponent,\r\n    ColumnsSettingComponent,\r\n    DimensionSettingComponent,\r\n    DimensionSettingComponent\r\n  ],\r\n  exports: [\r\n    QdpViewComponent,\r\n    ColumnsSettingComponent,\r\n  ]\r\n})\r\nexport class SpreadModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: SpreadModule,\r\n      providers: [\r\n        RenderService\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}