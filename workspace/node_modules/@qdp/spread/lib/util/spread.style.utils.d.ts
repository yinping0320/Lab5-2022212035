import { FormErrorService } from "@farris/command-services";
export declare class SpreadStyleUtils {
    dataStyleArray: any[];
    dataRowHeightArray: any[];
    dataColInfoArray: any[];
    footerStyleArray: any[];
    footerRowHeightArray: any[];
    footerSpansArray: any[];
    footerDataArray: any[];
    hyperLinkQuery: any;
    private autoFitColumnIndex;
    type: any;
    queryId: any;
    valueHeaderRowCount: number;
    valueHeaderRowArray: number[];
    rowHeadersColumnCount: number;
    rowHeaderRowArray: number[];
    rowHeaderInfo: any;
    valInfo: any;
    joinParam: any;
    jointsearchInfoList: any;
    cache: any;
    loadService: any;
    msgService: any;
    localizeService: any;
    schemaManager: any;
    formErrorService: FormErrorService;
    lcpService: any;
    constructor(_queryId: any, _controlType: any, _jointsearchInfoList?: any, _serviceCache?: any);
    setAutoFitColumn(schema: any, sheet: any): void;
    private recursionAutoFitColumn;
    cacheStyle(sheet: any): void;
    applyStyle(sheet: any, schema: any, showZero?: boolean): void;
    getGroupField(groupColCache: any, schema: any): void;
    getIsRedColumns(schema: any, params: any): void;
    getFormatField(fieldCache: any, schema: any): void;
    getShowHeaderSort(schema: any): any;
    getShowFilterRow(schema: any): any;
    getMergeCell(schema: any): any;
    private recursionGetFormatColumn;
    private recursionGetGroupColumn;
    logicFormat(formattor: any, cellValue: any): any;
    filterRow(sheet: any): void;
    linkField(spread: any, sheet: any): void;
    inSuiteLinkField(spread: any, sheet: any, extObj: any): void;
    private getQueryParameters;
    bindSelectChanged(spread: any, queryId: any): void;
    setSortCellType(sheet: any, schema: any, qdpView: any): void;
    mergeCell(sheet: any, schema: any): void;
    private columnSort;
    private recursiveColumnSortIndex;
    private recursiveColumnSort;
    private recursiveIsRedColumn;
    private isNumber;
}
