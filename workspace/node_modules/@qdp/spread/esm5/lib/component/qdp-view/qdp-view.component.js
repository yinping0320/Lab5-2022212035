/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, Inject, Renderer2, HostBinding, Injector, Optional, ViewChild, LOCALE_ID } from '@angular/core';
import { RenderService } from '../../service/render/render.service';
import { FilterManagerService, SchemaManagerService, EventBus, DataRenderExtendService, JointSearchManagerService, LcpService, QDPCacheUtil, RtfServices } from '@qdp/common';
import { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';
import { MessagerService } from '@farris/ui-messager';
import { ServicesUtils } from '../../util/services.utils';
import { DimensionSettingComponent } from '../dimension-setting/dimension-setting.component';
import { ColumnsSettingComponent } from '../columns-setting/columns-setting.component';
import { LoadingService } from '@farris/ui-loading';
import { FormErrorService } from '@farris/command-services';
import { CacheService } from '@ecp-caf/caf-common';
import { Subject } from 'rxjs';
/** @type {?} */
var matches = (/**
 * @param {?} el
 * @param {?} selector
 * @return {?}
 */
function (el, selector) { return (el.matches || el.msMatchesSelector).call(el, selector); });
var ɵ0 = matches;
var QdpViewComponent = /** @class */ (function () {
    function QdpViewComponent(elRef, renderService, renderer, filterService, injector) {
        this.renderService = renderService;
        this.renderer = renderer;
        this.filterService = filterService;
        this.injector = injector;
        this.aggreData = [
            { name: '请选择', value: 0 },
            { name: '合计', value: 1 },
            { name: '最小值', value: 2 },
            { name: '最大值', value: 3 },
            { name: '计数', value: 4 },
            { name: '平均值', value: 5 }
        ];
        this.groupSelectValue = this.aggreData[0].value;
        this.groupText = '';
        this.colIsGroup = false;
        this.formInline = true;
        this.currentColIndex = 0;
        this.isInitQdpView = true; // 是否初始化qdpViewComponent
        // 是否初始化qdpViewComponent
        this.isShowDimension = true;
        this.cls = true;
        this.isOpen = false;
        this.headerMenuTop = 0;
        this.headerMenuLeft = 0;
        this.headerMenuDisplay = 'none';
        this.colIsGroupId = 'colIsGroup' + EventBus.guid();
        this.style = {
            width: '800px',
            height: '600px'
        };
        // indicate all options
        this.isCommonQdpViewComponent = false;
        this.sheetChanged = new Subject(); //切换sheet监听事件
        //切换sheet监听事件
        this.multiSheetsSchemaIds = {};
        // 来源数据
        this.searchText = '';
        this.groupIcon = '<span class="k-icon k-i-search"></span>';
        this.conditionExpression = null;
        this.elRef = elRef;
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.msgService = this.injector.get(MessagerService);
            this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;
            this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE;
            this.loadService = this.injector.get(LoadingService);
            this.lcpService = this.injector.get(LcpService);
            this.jointSearchManagerService = this.injector.get(JointSearchManagerService);
            this.schemaManager = this.injector.get(SchemaManagerService);
            this.dataRenderExtendService = this.injector.get(DataRenderExtendService);
            this.formErrorService = this.injector.get(FormErrorService);
            this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');
            this.cache = this.injector.get(CacheService);
        }
    }
    /**
     * @private
     * @return {?}
     */
    QdpViewComponent.prototype.setServices = /**
     * @private
     * @return {?}
     */
    function () {
        ServicesUtils.setServices('renderExtends' + this.queryId, this.dataRenderExtendService);
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.loading = this.loadService.show({ container: 'body' });
        this.setServices();
        // 交叉表结果页监听事件
        if (this.controlType === 'crosstab') {
            this.docClickSubscription = this.renderer.listen('document', 'click', this.onDocumentClick.bind(this));
        }
        this.tabId = RtfServices.getTabId(this.queryId);
        // 缓存结果页对象，给工具栏使用
        QDPCacheUtil.setCache(this.tabId + this.queryId + this.controlType + 'qdpview', this);
        ServicesUtils.setServices(this.tabId + 'qoId', this.qoId);
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        try {
            // 通过配置中心，获取spreadjs控件序列号
            this.lcpService.formErrorService = this.formErrorService;
            this.lcpService.getSpreadLicense().subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (data) {
                    GC.Spread.Sheets.LicenseKey = data;
                }
                _this.afterView();
            }));
        }
        catch (e) {
            this.loading.close();
        }
        this.setMultiSheetsVarible();
    };
    /**
     * @private
     * @return {?}
     */
    QdpViewComponent.prototype.setMultiSheetsVarible = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.columnsSettingComponent) {
            this.columnsSettingComponent.multiSheets = this.multiSheets;
            this.columnsSettingComponent.curSheet = this.curSheet;
            this.columnsSettingComponent.multiSheetsSchemaIds = this.multiSheetsSchemaIds;
        }
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.afterView = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var elRef = this.elRef;
        /** @type {?} */
        var dom = (/** @type {?} */ (elRef.nativeElement));
        /** @type {?} */
        var hostElement = dom.querySelector('#sheet');
        if (this.licenseKey) {
            GC.Spread.Sheets.LicenseKey = this.licenseKey;
        }
        this.spread = new GC.Spread.Sheets.Workbook(hostElement, { sheetCount: 0 });
        this.setSpreadOptions();
        // this.bindCustomEvent(this.spread);
        /** @type {?} */
        var eventId = this.tabId;
        EventBus.register('schemaValueChanged', this.handleSchemaValueChanged.bind(this), eventId + 'qdpViewComponent');
        if (this.templateType !== 'qdpAdvancedTemplate' && this.isInitQdpView) {
            this.initQdpView();
        }
        else {
            this.loading.close();
        }
    };
    /**
     * @private
     * @param {?} schemaValue
     * @return {?}
     */
    QdpViewComponent.prototype.handleSchemaValueChanged = /**
     * @private
     * @param {?} schemaValue
     * @return {?}
     */
    function (schemaValue) {
        this.schemaValue = schemaValue;
        if (this.curSheet && this.multiSheets.length && schemaValue && schemaValue.id) {
            this.multiSheetsSchemaIds[this.curSheet] = schemaValue.id;
            this.setMultiSheetsVarible();
        }
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.initQdpView = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        if (!this.loading) {
            this.loading = this.loadService.show({ container: 'body' });
        }
        this.jointSearchManagerService.getjointsearch('form' + 'ff3ea474-cc65-23b0-cdb1-73c9146cea3b', this.queryId, '').subscribe((/**
         * @param {?} jointsearchList
         * @return {?}
         */
        function (jointsearchList) {
            _this.filterService.getFilter(_this.qoManagerCode ? _this.qoManagerCode : _this.queryId, _this.queryId, _this.queryRelativeUrl, 1, _this.groupType).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                self.conditionExpression = null;
                self.jointsearchInfoList = jointsearchList;
                if (data && data.filter) {
                    self.conditionExpression = JSON.stringify(data.filter);
                }
                /** @type {?} */
                var renderOption = Object.assign({ multiSheetsSchemaIds: self.multiSheetsSchemaIds, curSheet: self.curSheet, multiSheets: self.multiSheets }, { queryId: self.queryId, controlType: self.controlType, qoManagerCode: self.qoManagerCode, pageIndex: 0, queryRelativeUrl: self.queryRelativeUrl, filterCondition: self.conditionExpression, groupType: self.groupType, voId: self.voId, jointsearchInfoList: self.jointsearchInfoList, loading: _this.loading });
                _this.qdpViewRender(renderOption);
            }));
        }));
    };
    /**
     * @private
     * @param {?} spread
     * @return {?}
     */
    QdpViewComponent.prototype.bindCustomEvent = /**
     * @private
     * @param {?} spread
     * @return {?}
     */
    function (spread) {
        // const customEventNameSpace = '.ng';
        // const events = [];
        // events.forEach((event) => {
        //   spread.bind(event + customEventNameSpace, (event: any, data: any) => {
        //     const eventType = event.type;
        //     const camelCaseEvent = eventType[0].toLowerCase() + eventType.substr(1);
        //     this[camelCaseEvent].emit(data);
        //   });
        // });
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.setSpreadOptions = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var spread = this.spread;
        if (!this.spread) {
            return;
        }
        spread.suspendEvent();
        spread.suspendPaint();
        this.spread.fromJSON(null);
        /** @type {?} */
        var options = this.spreadOptions;
        if (options) {
            options.forEach((/**
             * @param {?} option
             * @return {?}
             */
            function (option) {
                if (option.name === 'name') {
                    spread.name = option.value;
                }
                else {
                    spread.options[option.name] = option.value;
                }
            }));
        }
        spread.unbind(GC.Spread.Sheets.Events.ActiveSheetChanged);
        spread.bind(GC.Spread.Sheets.Events.ActiveSheetChanged, (/**
         * @param {?} e
         * @param {?} args
         * @return {?}
         */
        function (e, args) {
            self.curSheet = args.newSheet.name();
            self.setGroup(self.curSheet);
            self.setMultiSheetsVarible();
            self.initQdpView();
        }));
        spread.resumePaint();
        spread.resumeEvent();
    };
    /**
     * 方法已废弃，建议替换为initQDPView方法
     * 初始化查询结果页控件
     */
    /**
     * 方法已废弃，建议替换为initQDPView方法
     * 初始化查询结果页控件
     * @param {?} queryId
     * @param {?} schemaId
     * @param {?=} controlType
     * @param {?=} qoManagerCode
     * @param {?=} pageIndex
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} groupType
     * @param {?=} voId
     * @param {?=} fromCache
     * @param {?=} isSchemaSelectChanged
     * @return {?}
     */
    QdpViewComponent.prototype.initSpread = /**
     * 方法已废弃，建议替换为initQDPView方法
     * 初始化查询结果页控件
     * @param {?} queryId
     * @param {?} schemaId
     * @param {?=} controlType
     * @param {?=} qoManagerCode
     * @param {?=} pageIndex
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} groupType
     * @param {?=} voId
     * @param {?=} fromCache
     * @param {?=} isSchemaSelectChanged
     * @return {?}
     */
    function (queryId, schemaId, controlType, qoManagerCode, pageIndex, queryRelativeUrl, filterCondition, groupType, voId, fromCache, isSchemaSelectChanged) {
        if (this.curSheet && this.multiSheets.length) {
            this.multiSheetsSchemaIds[this.curSheet] = schemaId;
            this.setMultiSheetsVarible();
        }
        this.qdpViewRender(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { schemaId: schemaId, queryId: queryId, spread: this.spread, controlType: controlType, qoManagerCode: qoManagerCode, pageIndex: pageIndex, queryRelativeUrl: queryRelativeUrl, filterCondition: filterCondition, formData: this.formData, groupType: groupType, voId: voId, qdpView: this, fromCache: fromCache, isSchemaSelectChanged: isSchemaSelectChanged, jointsearchInfoList: this.jointsearchInfoList }));
    };
    /**
     * 初始化查询结果控件
     */
    /**
     * 初始化查询结果控件
     * @param {?} option
     * @return {?}
     */
    QdpViewComponent.prototype.qdpViewRender = /**
     * 初始化查询结果控件
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (!option.loading) {
            option.loading = this.loadService.show({ container: 'body' });
        }
        option.voId = !option.voId ? this.voId : option.voId;
        option.groupType = !option.groupType ? this.groupType : option.groupType;
        option.fromCache = option.fromCache ? option.fromCache : false;
        if (option.filterCondition) {
            this.conditionExpression = option.filterCondition;
        }
        /** @type {?} */
        var renderOption = Object.assign({}, option, { formData: this.formData, spread: this.spread, qdpView: this });
        this.renderService.render(renderOption);
        EventBus.register(this.queryId + 'spread_init', this.registeSpreadColumnWidthChangedEvent.bind(this), this.queryId);
    };
    /**
     * 方法已废弃，建议替换为export方法
     * 导出Excel
     */
    /**
     * 方法已废弃，建议替换为export方法
     * 导出Excel
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} pageIndex
     * @param {?=} qoManagerCode
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} groupType
     * @param {?=} voId
     * @param {?=} totalCount
     * @param {?=} exportType
     * @return {?}
     */
    QdpViewComponent.prototype.exportExcel = /**
     * 方法已废弃，建议替换为export方法
     * 导出Excel
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} pageIndex
     * @param {?=} qoManagerCode
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} groupType
     * @param {?=} voId
     * @param {?=} totalCount
     * @param {?=} exportType
     * @return {?}
     */
    function (queryId, id, type, pageIndex, qoManagerCode, queryRelativeUrl, filterCondition, groupType, voId, totalCount, exportType) {
        this.export(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId: queryId, schemaId: id, controlType: type, pageIndex: pageIndex, qoManagerCode: qoManagerCode, queryRelativeUrl: queryRelativeUrl, filterCondition: filterCondition, groupType: groupType, voId: voId, totalCount: totalCount, exportType: exportType }));
    };
    /**
     * 导出Excel
     * @param opiton 渲染配置项
     */
    /**
     * 导出Excel
     * @param {?} option
     * @return {?}
     */
    QdpViewComponent.prototype.export = /**
     * 导出Excel
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (this.controlType === 'crosstab') {
            option.totalCount = this.spread.getActiveSheet().getRowCount();
        }
        option.voId = this.voId ? this.voId : option.voId;
        option.queryId = this.queryId ? this.queryId : option.queryId;
        option.groupType = this.groupType ? this.groupType : option.groupType;
        option.qoManagerCode = this.qoManagerCode ? this.qoManagerCode : option.qoManagerCode;
        this.renderService.exportData(option);
        // this.renderService.exportData(option.queryId, option.schemaId, option.controlType, option.pageIndex, option.qoManagerCode, option.queryRelativeUrl, option.filterCondition, option.groupType, option.voId, option.totalCount || 1, option.exportType);
    };
    /**
     * 方法已废弃，建议替换为print方法
     * 打印PDF
     */
    /**
     * 方法已废弃，建议替换为print方法
     * 打印PDF
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} qoManagerCode
     * @param {?=} printIntegration
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} pageIndex
     * @param {?=} groupType
     * @param {?=} voId
     * @return {?}
     */
    QdpViewComponent.prototype.pdfExportEvent = /**
     * 方法已废弃，建议替换为print方法
     * 打印PDF
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} qoManagerCode
     * @param {?=} printIntegration
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} pageIndex
     * @param {?=} groupType
     * @param {?=} voId
     * @return {?}
     */
    function (queryId, id, type, qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, pageIndex, groupType, voId) {
        this.print(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId: queryId, schemaId: id, controlType: type, pageIndex: pageIndex, qoManagerCode: qoManagerCode, queryRelativeUrl: queryRelativeUrl, printIntegration: printIntegration, filterCondition: filterCondition, groupType: groupType, voId: voId }));
    };
    /**
     * 打印
     * @param option 渲染配置项
     */
    /**
     * 打印
     * @param {?} option 渲染配置项
     * @return {?}
     */
    QdpViewComponent.prototype.print = /**
     * 打印
     * @param {?} option 渲染配置项
     * @return {?}
     */
    function (option) {
        option.voId = this.voId ? this.voId : option.voId;
        option.queryId = this.queryId ? this.queryId : option.queryId;
        option.groupType = this.groupType ? this.groupType : option.groupType;
        option.qoManagerCode = this.qoManagerCode ? this.qoManagerCode : option.qoManagerCode;
        this.renderService.pdfExportEvent(option);
        // this.renderService.pdfExportEvent(option.queryId, option.schemaId, option.controlType, option.qoManagerCode, option.printIntegration, option.queryRelativeUrl, option.filterCondition, option.groupType, option.pageIndex, option.voId);
    };
    /**
     * 方法已废弃，建议替换为printPreview(option: RenderOption)方法
     * 打印预览
     */
    /**
     * 方法已废弃，建议替换为printPreview(option: RenderOption)方法
     * 打印预览
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} qoManagerCode
     * @param {?=} printIntegration
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} pageIndex
     * @param {?=} groupType
     * @param {?=} voId
     * @return {?}
     */
    QdpViewComponent.prototype.printPreView = /**
     * 方法已废弃，建议替换为printPreview(option: RenderOption)方法
     * 打印预览
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} qoManagerCode
     * @param {?=} printIntegration
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} pageIndex
     * @param {?=} groupType
     * @param {?=} voId
     * @return {?}
     */
    function (queryId, id, type, qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, pageIndex, groupType, voId) {
        /** @type {?} */
        var _voId = this.voId ? this.voId : voId;
        /** @type {?} */
        var _queryId = this.queryId ? this.queryId : queryId;
        /** @type {?} */
        var _groupType = this.groupType ? this.groupType : groupType;
        /** @type {?} */
        var _qoManagerCode = this.qoManagerCode ? this.qoManagerCode : qoManagerCode;
        this.renderService.printPreView(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId: _queryId, schemaId: id, controlType: type, qoManagerCode: _qoManagerCode, printIntegration: printIntegration, queryRelativeUrl: queryRelativeUrl, filterCondition: filterCondition, groupType: _groupType, pageIndex: pageIndex, voId: _voId }));
        // this.renderService.printPreView(queryId, id, type, qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, groupType ? groupType : this.groupType, pageIndex, voId ? voId : this.voId);
    };
    /**
     * 打印预览
     * @param option 渲染配置项
     */
    /**
     * 打印预览
     * @param {?} option 渲染配置项
     * @return {?}
     */
    QdpViewComponent.prototype.printPreview = /**
     * 打印预览
     * @param {?} option 渲染配置项
     * @return {?}
     */
    function (option) {
        option.groupType = this.groupType ? this.groupType : option.groupType;
        option.voId = this.voId ? this.voId : option.voId;
        this.renderService.printPreView(option);
        // this.renderService.printPreView(option.queryId, option.schemaId, option.controlType, option.qoManagerCode, option.printIntegration, option.queryRelativeUrl, option.filterCondition, option.groupType, option.pageIndex, option.voId);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    QdpViewComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        /** @type {?} */
        var options = [];
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                this.tabId = RtfServices.getTabId(this.queryId);
                switch (changeName) {
                    case 'hostStyle':
                        this.style = newValue;
                        if (this.spread) {
                            this.spread.refresh();
                        }
                        break;
                    case 'hostClass':
                        break;
                    case 'name':
                        this.spread.name = newValue;
                        break;
                    case 'formData':
                        newValue.dynamicCols.forEach((/**
                         * @param {?} col
                         * @return {?}
                         */
                        function (col) {
                            col.name = col.title;
                            col.bindField = col.field;
                            col.colWidth = 150;
                            col.align = 0;
                            col.visible = true;
                            col.isFixed = false;
                            col.formatType = 0;
                            col.formattor = '';
                            col.sort = 0;
                            col.pageAggreText = null;
                            col.pageAggre = 0;
                            col.isGroup = false;
                            col.groupAggreText = '';
                            col.groupAggre = 0;
                            col.totalAggreText = '';
                            col.totalAggre = 0;
                            col.level = 1;
                            col.childList = [];
                            col.dimension = 0;
                            col.rowColor = null;
                        }));
                        this.formData = newValue;
                        this.ngOnDestroy();
                        this.afterView();
                        break;
                    case 'groupType':
                        this.groupType = newValue;
                        break;
                    case 'queryId':
                        this.queryId = newValue;
                        QDPCacheUtil.setCache(this.tabId + this.queryId + this.controlType + 'qdpview', this);
                        break;
                    case 'controlType':
                        this.controlType = newValue;
                        break;
                    case 'qoId':
                        this.qoId = newValue;
                        ServicesUtils.setServices(this.tabId + 'qoId', this.qoId);
                        break;
                    case 'qoManagerCode':
                    case 'voId':
                    case 'queryRelativeUrl':
                    case 'templateType':
                        break;
                    case 'multiSheets':
                        this.multiSheets = newValue;
                        this.setGroup(this.multiSheets[0]);
                        break;
                    case 'licenseKey':
                        if (newValue) {
                            GC.Spread.Sheets.LicenseKey = newValue;
                        }
                        break;
                    case 'isCommonQdpViewComponent':
                        this.isCommonQdpViewComponent = newValue;
                        if (this.isCommonQdpViewComponent) {
                        }
                        break;
                    default:
                        options.push({ name: changeName, value: newValue });
                }
            }
        }
        this.spreadOptions = options;
        this.setSpreadOptions();
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.spread) {
            this.spread.destroy();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    QdpViewComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.style.height = event.newHeight + 'px';
        this.style.width = event.newWidth + 'px';
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.toggle = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var isCompare = false;
        if (this.isOpen) {
            if (this.controlType === 'crosstab') {
                this.dimensionSettingComponent.isCompare = false;
                this.dimensionSettingComponent.selectedDimesion();
                isCompare = this.dimensionSettingComponent.isCompare;
            }
            else {
                this.columnsSettingComponent.isCompare = false;
                this.columnsSettingComponent.selectedDimesion();
                isCompare = this.columnsSettingComponent.isCompare;
            }
            if (this.schemaValue && this.schemaValue.isPrefab !== 1 && !isCompare) {
                this.schemaValue.schemaValue = this.controlType === 'crosstab' ? JSON.stringify(this.dimensionSettingComponent.schemaValue.schemaValue) : JSON.stringify(this.columnsSettingComponent.schemaValue.schemaValue);
                this.schemaManager.saveSchema({ 'schema': JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @return {?}
                 */
                function () { }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    _this.formErrorService.exception(error.Message, error);
                }));
                this.schemaValue.schemaValue = JSON.parse(this.schemaValue.schemaValue);
            }
        }
        this.isOpen = !this.isOpen;
    };
    /**
     * @param {?} sheetName
     * @return {?}
     */
    QdpViewComponent.prototype.setGroup = /**
     * @param {?} sheetName
     * @return {?}
     */
    function (sheetName) {
        this.curSheet = sheetName;
        if (this.groupType) {
            for (var i = 0; i < this.multiSheets.length; i++) {
                this.groupType = this.groupType.replace(this.multiSheets[i], "");
            }
            this.groupType += sheetName;
        }
        else {
            this.groupType = sheetName;
        }
        this.sheetChanged.next(this.groupType);
    };
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    QdpViewComponent.prototype.onDocumentClick = /**
     * @private
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (e.target.tagName === 'CANVAS') {
            this.isOpen = false;
        }
    };
    /**
     * @param {?} pageIndex
     * @param {?} pageSize
     * @return {?}
     */
    QdpViewComponent.prototype.handleCrosstabPageChange = /**
     * @param {?} pageIndex
     * @param {?} pageSize
     * @return {?}
     */
    function (pageIndex, pageSize) {
        this.sheet = this.spread.getActiveSheet();
        for (var i = 0; i < this.sheet.getRowCount(); i++) {
            if (i >= (pageIndex - 1) * pageSize && i < pageIndex * pageSize) {
                this.sheet.setRowVisible(i, true, GC.Spread.Sheets.SheetArea.viewport);
                this.sheet.showRow(i, GC.Spread.Sheets.VerticalPosition.bottom);
            }
            else {
                this.sheet.setRowVisible(i, false, GC.Spread.Sheets.SheetArea.viewport);
            }
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    QdpViewComponent.prototype.handleContextMenu = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ('list' === this.controlType.toLowerCase()) {
            /** @type {?} */
            var x = 0;
            /** @type {?} */
            var y = 0;
            /** @type {?} */
            var qdpviewNative = this.sheetEl.nativeElement;
            while (qdpviewNative) {
                x += qdpviewNative.offsetLeft;
                y += qdpviewNative.offsetTop;
                qdpviewNative = qdpviewNative.offsetParent;
            }
            /** @type {?} */
            var activeSheet = this.spread.getActiveSheet();
            /** @type {?} */
            var colHeader = GC.Spread.Sheets.SheetArea.colHeader;
            /** @type {?} */
            var target = activeSheet.hitTest($event.clientX - x, $event.clientY - y);
            if (target.hitTestType !== colHeader || target.col === undefined || target.row === undefined) {
                return false;
            }
            /** @type {?} */
            var headerRowCount = activeSheet.getRowCount(colHeader);
            /** @type {?} */
            var span = activeSheet.getSpan(target.row, target.col, colHeader);
            // 判断多级表头的情况下，只处理最子集表头
            if (span && (target.row + span.rowCount) < headerRowCount) {
                return false;
            }
            this.currentColIndex = target.col;
            this.initColGroupAggre(this.currentColIndex);
            this.headerMenuDisplay = 'block';
            this.headerMenuTop = $event.clientY;
            this.headerMenuLeft = $event.clientX;
        }
        return false;
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.handleIsGroupClick = /**
     * @return {?}
     */
    function () {
        if (this.colIsGroup) {
            this.groupSelectValue = this.aggreData[0].value;
            this.groupText = '';
        }
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.handleSaveClick = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        try {
            if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption && this.schemaValue.schemaValue.columnOption.colList) {
                if (this.schemaValue && this.schemaValue.isPrefab === 1) {
                    this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));
                    return;
                }
                /** @type {?} */
                var colList = JSON.parse(JSON.stringify(this.schemaValue.schemaValue.columnOption.colList));
                /** @type {?} */
                var params = { index: this.currentColIndex, colIndex: 0, type: 'edit' };
                // tslint:disable-next-line:prefer-for-of
                for (var i = 0; i < colList.length; i++) {
                    this.recursiveColumnSort(colList[i], null, params);
                }
                this.schemaValue.schemaValue.columnOption.colList = colList;
                this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);
                this.schemaManager.saveSchema({ schema: JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    self.initQdpView();
                    self.currentColIndex = 0;
                    self.headerMenuDisplay = 'none';
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    _this.formErrorService.exception(error.Message, error);
                }));
            }
        }
        catch (e) {
            self.currentColIndex = 0;
        }
    };
    /**
     * @return {?}
     */
    QdpViewComponent.prototype.handleClearSort = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        try {
            if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption && this.schemaValue.schemaValue.columnOption.colList && this.schemaValue.schemaValue.columnOption.colList.length) {
                if (this.schemaValue && this.schemaValue.isPrefab === 1) {
                    this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));
                    return;
                }
                /** @type {?} */
                var colList = JSON.parse(JSON.stringify(this.schemaValue.schemaValue.columnOption.colList));
                // tslint:disable-next-line:prefer-for-of
                for (var i = 0; i < colList.length; i++) {
                    this.recursiveClearColumnSort(colList[i], null);
                }
                this.schemaValue.schemaValue.columnOption.colList = colList;
                this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);
                this.schemaManager.saveSchema({ schema: JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    /** @type {?} */
                    var renderOption = Object.assign({ multiSheetsSchemaIds: _this.multiSheetsSchemaIds, curSheet: _this.curSheet, multiSheets: _this.multiSheets }, { schemaId: _this.schemaValue.id, queryId: self.queryId, controlType: self.controlType, qoManagerCode: self.qoManagerCode, pageIndex: 0, queryRelativeUrl: self.queryRelativeUrl, filterCondition: self.conditionExpression, groupType: self.groupType, voId: self.voId, jointsearchInfoList: self.jointsearchInfoList });
                    self.qdpViewRender(renderOption);
                    self.currentColIndex = 0;
                    self.headerMenuDisplay = 'none';
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    _this.formErrorService.exception(error.Message, error);
                }));
            }
        }
        catch (e) {
            self.currentColIndex = 0;
        }
    };
    // @HostListener('click')
    // @HostListener('click')
    /**
     * @param {?} $event
     * @return {?}
     */
    QdpViewComponent.prototype.handleBlur = 
    // @HostListener('click')
    /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.headerMenuDisplay = 'none';
    };
    /**
     * @private
     * @param {?} index
     * @return {?}
     */
    QdpViewComponent.prototype.initColGroupAggre = /**
     * @private
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption
            && this.schemaValue.schemaValue.columnOption.colList && this.schemaValue.schemaValue.columnOption.colList.length > index) {
            /** @type {?} */
            var params = { index: this.currentColIndex, colIndex: 0, type: 'init' };
            // tslint:disable-next-line:prefer-for-of
            for (var i = 0; i < this.schemaValue.schemaValue.columnOption.colList.length; i++) {
                this.recursiveColumnSort(this.schemaValue.schemaValue.columnOption.colList[i], null, params);
            }
        }
    };
    /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @param {?} params
     * @return {?}
     */
    QdpViewComponent.prototype.recursiveColumnSort = /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @param {?} params
     * @return {?}
     */
    function (col, colList, params) {
        if (colList == null) {
            if (col.childList && col.childList.length) {
                this.recursiveColumnSort(null, col.childList, params);
            }
            else {
                if (params.colIndex === params.index) {
                    if (params.type === 'init') {
                        this.colIsGroup = col.isGroup;
                        this.groupText = col.groupAggreText || '';
                        this.groupSelectValue = col.groupAggre;
                    }
                    else if (params.type === 'edit') {
                        col.isGroup = this.colIsGroup;
                        col.groupAggreText = this.groupText || '';
                        col.groupAggre = this.groupSelectValue;
                    }
                }
                params.colIndex++;
            }
        }
        else {
            // tslint:disable-next-line:prefer-for-of
            for (var i = 0; i < colList.length; i++) {
                if (colList[i].childList && colList[i].childList.length) {
                    this.recursiveColumnSort(null, colList[i].childList, params);
                }
                else {
                    if (params.colIndex === params.index) {
                        if (params.type === 'init') {
                            this.colIsGroup = colList[i].isGroup;
                            this.groupText = colList[i].groupAggreText || '';
                            this.groupSelectValue = colList[i].groupAggre;
                        }
                        else if (params.type === 'edit') {
                            colList[i].isGroup = this.colIsGroup;
                            colList[i].groupAggreText = this.groupText || '';
                            colList[i].groupAggre = this.groupSelectValue;
                        }
                    }
                    params.colIndex++;
                }
            }
        }
    };
    /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @return {?}
     */
    QdpViewComponent.prototype.recursiveClearColumnSort = /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @return {?}
     */
    function (col, colList) {
        if (colList == null) {
            if (col.childList && col.childList.length) {
                this.recursiveClearColumnSort(null, col.childList);
            }
            else {
                col['sort'] = 0;
                col['sortIndex'] = 0;
            }
        }
        else {
            // tslint:disable-next-line:prefer-for-of
            for (var i = 0; i < colList.length; i++) {
                if (colList[i].childList && colList[i].childList.length) {
                    this.recursiveClearColumnSort(null, colList[i].childList);
                }
                else {
                    colList[i]['sort'] = 0;
                    colList[i]['sortIndex'] = 0;
                }
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    QdpViewComponent.prototype.registeSpreadColumnWidthChangedEvent = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        this.sheet = this.spread.getActiveSheet();
        self.sheet.bind(GC.Spread.Sheets.Events.ColumnWidthChanged, (/**
         * @param {?} sender
         * @param {?} info
         * @return {?}
         */
        function (sender, info) {
            /** @type {?} */
            var index = info.colList[0];
            /** @type {?} */
            var colW = info.sheet.getColumnWidth(info.colList[0]);
            if (self.schemaValue && self.schemaValue.schemaValue && self.schemaValue.schemaValue.columnOption
                && self.schemaValue.schemaValue.columnOption.colList && self.schemaValue.schemaValue.columnOption.colList.length) {
                if (self.schemaValue && self.schemaValue.isPrefab === 1) {
                    self.msgService.info(self.localizeService.getValue('spread.message.validate.sort'));
                    return;
                }
                /** @type {?} */
                var colList = JSON.parse(JSON.stringify(self.schemaValue.schemaValue.columnOption.colList));
                /** @type {?} */
                var params = { index: index, colIndex: 0, colWidth: colW };
                // tslint:disable-next-line:prefer-for-of
                for (var i = 0; i < colList.length; i++) {
                    self.recursiveColumnWidthChanged(colList[i], null, params);
                }
                self.schemaValue.schemaValue.columnOption.colList = colList;
                self.schemaValue.schemaValue = JSON.stringify(self.schemaValue.schemaValue);
                self.schemaManager.saveSchema({ schema: JSON.stringify(self.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    self.schemaValue.schemaValue = JSON.parse(self.schemaValue.schemaValue);
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    self.formErrorService.exception(error.Message, error);
                }));
            }
        }));
    };
    /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @param {?} params
     * @return {?}
     */
    QdpViewComponent.prototype.recursiveColumnWidthChanged = /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @param {?} params
     * @return {?}
     */
    function (col, colList, params) {
        if (colList == null) {
            if (col.childList && col.childList.length) {
                this.recursiveColumnWidthChanged(null, col.childList, params);
            }
            else {
                if (params.colIndex === params.index) {
                    col.colWidth = params.colWidth;
                }
                params.colIndex++;
            }
        }
        else {
            // tslint:disable-next-line:prefer-for-of
            for (var i = 0; i < colList.length; i++) {
                if (colList[i].childList && colList[i].childList.length) {
                    this.recursiveColumnWidthChanged(null, colList[i].childList, params);
                }
                else {
                    if (params.colIndex === params.index) {
                        colList[i].colWidth = params.colWidth;
                    }
                    params.colIndex++;
                }
            }
        }
    };
    QdpViewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'qdp-view',
                    template: "<div *ngIf=\"isShowDimension\" #crosstab class=\"f-cmp-sidebar f-sidebar-slide  f-sidebar-pos-right\"\r\n  [ngClass]=\"{'f-sidebar-show': isOpen, 'f-sidebar-collapse': !isOpen }\">\r\n  <div class=\"f-sidebar-main\">\r\n    <div class=\"f-sidebar-header-ctr ng-star-inserted border mb-2\">\r\n      <h5 class=\"f-sidebar-header-title\">{{localizeService.getValue('spread.crossTable.dimensionManager')}}</h5>\r\n      <span id=\"dimensionClose\" (click)=\"toggle()\">\r\n        <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTRweCcgaGVpZ2h0PScxNHB4JyB2aWV3Qm94PScwIDAgMTQgMTQnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuW9oueKtue7k+WQiDwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBzdHJva2UtbGluZWNhcD0ncm91bmQnPjxnIGlkPScwMi3mn6Xor6JVSeiuvuiuoScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEzMjUuMDAwMDAwLCAtOTUuMDAwMDAwKScgc3Ryb2tlPScjMkQyRjMzJyBzdHJva2Utd2lkdGg9JzEuNCc+PGcgaWQ9J+e8lue7hC0yNicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoODk4LjAwMDAwMCwgNzUuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0yNScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNDIwLjAwMDAwMCwgMTMuMDAwMDAwKSc+PHBhdGggZD0nTTE0LDE0IEw4LDggTDE0LDE0IEw4LDIwIEwxNCwxNCBaIE0xNCwxNCBMMjAsMjAgTDE0LDE0IEwyMCw4IEwxNCwxNCBaJyBpZD0n5b2i54q257uT5ZCIJz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n    </div>\r\n    <div class=\"container f-utils-fill-flex-column\">\r\n      <dimension-setting class=\"h-100\"  *ngIf=\"controlType=='crosstab'\"\r\n        [controlType]=\"controlType\" \r\n        [queryRelativeUrl]=\"queryRelativeUrl\"\r\n        [qoManagerCode]=\"qoManagerCode\"\r\n        [queryId]=\"queryId\"\r\n        [qoId]=\"qoId\"\r\n        [voId]=\"voId\"\r\n        [groupType]=\"groupType\"\r\n        [spread]=\"spread\"\r\n        [conditionExpression]=\"conditionExpression\"\r\n        [jointsearchInfoList]=\"jointsearchInfoList\"\r\n        [qdpView]=\"this\"\r\n      ></dimension-setting>\r\n      <columns-setting class=\"h-100\"  *ngIf=\"controlType!='crosstab'\"\r\n        [controlType]=\"controlType\" \r\n        [queryRelativeUrl]=\"queryRelativeUrl\"\r\n        [qoManagerCode]=\"qoManagerCode\"\r\n        [queryId]=\"queryId\"\r\n        [qoId]=\"qoId\"\r\n        [voId]=\"voId\"\r\n        [groupType]=\"groupType\"\r\n        [spread]=\"spread\"\r\n        [conditionExpression]=\"conditionExpression\"\r\n        [jointsearchInfoList]=\"jointsearchInfoList\"\r\n        [qdpView]=\"this\"\r\n      ></columns-setting>\r\n    </div>\r\n  </div>\r\n  <div class=\"f-sidebar-entry-ctr\">\r\n    <div class=\"f-sidebar-entry-icon ng-star-inserted\"><span class=\"f-icon f-sidebar-entry\" (click)=\"toggle()\"></span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div #sheet id='sheet' [ngStyle]=\"style\" [ngClass]=\"hostClass\" class=\"flex-fill qdp-overflow-hidden ml-3 mr-3 border\"\r\n  (resized)=\"onResized($event)\" (contextmenu)=\"handleContextMenu($event)\" (click)=\"handleBlur($event)\">\r\n</div>\r\n\r\n<div class=\"dropdown-menu headerMenu\" *ngIf=\"controlType!='crosstab' && controlType!='charts'\"\r\n  [style.left.px]=\"headerMenuLeft\" [style.top.px]=\"headerMenuTop\" [style.display]=\"headerMenuDisplay\">\r\n  <div class=\"flex-fill farris-split-section farris-overflow-hidden\">\r\n    <div class=\"farris-form farris-card-content-bg\">\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"{{colIsGroupId}}\">\r\n              <span\r\n                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.group')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n              <div class=\"custom-control custom-checkbox mb-0\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"colIsGroup\" class=\"custom-control-input\" id=\"{{colIsGroupId}}\"\r\n                  checked=\"\">\r\n                <label class=\"custom-control-label\" for=\"{{colIsGroupId}}\" (click)=\"handleIsGroupClick()\"></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"colGroupText\">\r\n              <span\r\n                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupTotal')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input-group [(ngModel)]=\"groupText\" id=\"colGroupText\"></input-group>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"colGroupAggre\">\r\n              <span\r\n                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.totalType')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <farris-combo-list id=\"colGroupAggre\" [disabled]=\"colIsGroup\" [(ngModel)]=\"groupSelectValue\"\r\n                [data]=\"aggreData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <button class=\"btn btn-primary mr-1\" id=\"button-edit\" (click)=\"handleSaveClick()\">\r\n          {{localizeService.getValue('ideCmp.schemaManager.btnSave')}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [".qdp-overflow-hidden{overflow:hidden!important}.simpleDemo ul{min-height:42px;padding:0}.card-title,.demo-header{text-align:center}.title{margin:20px 0}.simpleDemo ul .dndDraggingSource{display:none}.simpleDemo ul .dndPlaceholder{background:rgba(56,143,255,.06);border:1px dashed #388fff;box-shadow:0 0 4px 0 rgba(13,95,201,.22);margin:.25rem!important;padding:.25rem!important}.simpleDemo ul li{background:rgba(235,244,254,.84);border:1px solid #388fff;box-shadow:0 0 10px 0 rgba(63,113,177,.22);border-radius:3px;height:28px;font-family:PingFangSC-Regular;font-size:13px;color:#388fff;margin:.25rem!important;padding:.25rem!important}#unselectFieldList li{border:none;background-color:rgba(0,0,0,0);box-shadow:0 0 #000;border-radius:3px;height:28px;margin:.25rem!important;padding:.25rem!important}#unselectFieldList li:hover{background:#f4f5f9}#unselectFieldList .dndPlaceholder{background:rgba(56,143,255,.06);border:1px dashed #388fff;box-shadow:0 0 4px 0 rgba(13,95,201,.22);margin:.25rem!important;padding:.25rem!important}.unselectField{font-family:PingFangSC-Regular;font-size:13px;color:rgba(0,0,0,.85)}.unselectFieldFront{font-family:PingFangSC-Medium;font-size:13px;color:#b4bccc}.simpleDemo ul li.selected{background-color:#dff0d8;color:#3c763d}.current-model{background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px;padding:18px 22px}.slicer{height:220px;position:relative}.headerMenu{position:fixed;display:none;top:0;left:0}.cardTitle{background:#f5f7fa;border-radius:3px 3px 0 0;height:36px}.dimensionTitle{font-family:PingFangSC-Medium;font-size:14px;color:rgba(0,0,0,.65);line-height:20px}.imgFont{font-family:PingFangSC-Regular;font-size:13px;color:#b4bccc}"]
                }] }
    ];
    /** @nocollapse */
    QdpViewComponent.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: RenderService },
        { type: Renderer2 },
        { type: FilterManagerService },
        { type: Injector, decorators: [{ type: Optional }] }
    ]; };
    QdpViewComponent.propDecorators = {
        sheetEl: [{ type: ViewChild, args: ['sheet', { read: ElementRef },] }],
        dimensionSettingComponent: [{ type: ViewChild, args: [DimensionSettingComponent,] }],
        columnsSettingComponent: [{ type: ViewChild, args: [ColumnsSettingComponent,] }],
        isInitQdpView: [{ type: Input }],
        isShowDimension: [{ type: Input }],
        cls: [{ type: HostBinding, args: ['class.f-utils-fill-flex-column',] }],
        isCommonQdpViewComponent: [{ type: Input }],
        allowUserDragDrop: [{ type: Input }],
        allowUserDragFill: [{ type: Input }],
        allowUserZoom: [{ type: Input }],
        allowUserResize: [{ type: Input }],
        showHorizontalScrollbar: [{ type: Input }],
        showVerticalScrollbar: [{ type: Input }],
        tabStripVisible: [{ type: Input }],
        allowUndo: [{ type: Input }],
        allowSheetReorder: [{ type: Input }],
        allowCopyPasteExcelStyle: [{ type: Input }],
        allowExtendPasteRange: [{ type: Input }],
        copyPasteHeaderOptions: [{ type: Input }],
        showDragFillSmartTag: [{ type: Input }],
        scrollbarShowMax: [{ type: Input }],
        scrollbarMaxAlign: [{ type: Input }],
        tabEditable: [{ type: Input }],
        newTabVisible: [{ type: Input }],
        tabNavigationVisible: [{ type: Input }],
        backColor: [{ type: Input }],
        backgroundImage: [{ type: Input }],
        backgroundImageLayout: [{ type: Input }],
        grayAreaBackColor: [{ type: Input }],
        showResizeTip: [{ type: Input }],
        showDragDropTip: [{ type: Input }],
        showDragFillTip: [{ type: Input }],
        showScrollTip: [{ type: Input }],
        highlightInvalidData: [{ type: Input }],
        useTouchLayout: [{ type: Input }],
        hideSelection: [{ type: Input }],
        allowUserEditFormula: [{ type: Input }],
        enableFormulaTextbox: [{ type: Input }],
        autoFitType: [{ type: Input }],
        referenceStyle: [{ type: Input }],
        hostStyle: [{ type: Input }],
        hostClass: [{ type: Input }],
        name: [{ type: Input }],
        queryId: [{ type: Input }],
        controlType: [{ type: Input }],
        licenseKey: [{ type: Input }],
        qoManagerCode: [{ type: Input }],
        queryRelativeUrl: [{ type: Input }],
        qoId: [{ type: Input }],
        voId: [{ type: Input }],
        groupType: [{ type: Input }],
        templateType: [{ type: Input }],
        multiSheets: [{ type: Input }],
        formData: [{ type: Input }]
    };
    return QdpViewComponent;
}());
export { QdpViewComponent };
if (false) {
    /** @type {?} */
    QdpViewComponent.prototype.localizeService;
    /** @type {?} */
    QdpViewComponent.prototype.sheetEl;
    /** @type {?} */
    QdpViewComponent.prototype.dimensionSettingComponent;
    /** @type {?} */
    QdpViewComponent.prototype.columnsSettingComponent;
    /** @type {?} */
    QdpViewComponent.prototype.aggreData;
    /** @type {?} */
    QdpViewComponent.prototype.groupSelectValue;
    /** @type {?} */
    QdpViewComponent.prototype.groupText;
    /** @type {?} */
    QdpViewComponent.prototype.colIsGroup;
    /** @type {?} */
    QdpViewComponent.prototype.formInline;
    /** @type {?} */
    QdpViewComponent.prototype.localId;
    /** @type {?} */
    QdpViewComponent.prototype.msgService;
    /** @type {?} */
    QdpViewComponent.prototype.currentColIndex;
    /** @type {?} */
    QdpViewComponent.prototype.schemaManager;
    /** @type {?} */
    QdpViewComponent.prototype.jointSearchManagerService;
    /** @type {?} */
    QdpViewComponent.prototype.lcpService;
    /** @type {?} */
    QdpViewComponent.prototype.pageIndex;
    /** @type {?} */
    QdpViewComponent.prototype.dataRenderExtendService;
    /** @type {?} */
    QdpViewComponent.prototype.loadService;
    /** @type {?} */
    QdpViewComponent.prototype.formErrorService;
    /** @type {?} */
    QdpViewComponent.prototype.cache;
    /** @type {?} */
    QdpViewComponent.prototype.isInitQdpView;
    /** @type {?} */
    QdpViewComponent.prototype.isShowDimension;
    /** @type {?} */
    QdpViewComponent.prototype.cls;
    /** @type {?} */
    QdpViewComponent.prototype.spread;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.spreadOptions;
    /** @type {?} */
    QdpViewComponent.prototype.isOpen;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.docClickSubscription;
    /** @type {?} */
    QdpViewComponent.prototype.headerMenuTop;
    /** @type {?} */
    QdpViewComponent.prototype.headerMenuLeft;
    /** @type {?} */
    QdpViewComponent.prototype.headerMenuDisplay;
    /** @type {?} */
    QdpViewComponent.prototype.colIsGroupId;
    /** @type {?} */
    QdpViewComponent.prototype.style;
    /** @type {?} */
    QdpViewComponent.prototype.isCommonQdpViewComponent;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserDragDrop;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserDragFill;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserZoom;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserResize;
    /** @type {?} */
    QdpViewComponent.prototype.showHorizontalScrollbar;
    /** @type {?} */
    QdpViewComponent.prototype.showVerticalScrollbar;
    /** @type {?} */
    QdpViewComponent.prototype.tabStripVisible;
    /** @type {?} */
    QdpViewComponent.prototype.allowUndo;
    /** @type {?} */
    QdpViewComponent.prototype.allowSheetReorder;
    /** @type {?} */
    QdpViewComponent.prototype.allowCopyPasteExcelStyle;
    /** @type {?} */
    QdpViewComponent.prototype.allowExtendPasteRange;
    /** @type {?} */
    QdpViewComponent.prototype.copyPasteHeaderOptions;
    /** @type {?} */
    QdpViewComponent.prototype.showDragFillSmartTag;
    /** @type {?} */
    QdpViewComponent.prototype.scrollbarShowMax;
    /** @type {?} */
    QdpViewComponent.prototype.scrollbarMaxAlign;
    /** @type {?} */
    QdpViewComponent.prototype.tabEditable;
    /** @type {?} */
    QdpViewComponent.prototype.newTabVisible;
    /** @type {?} */
    QdpViewComponent.prototype.tabNavigationVisible;
    /** @type {?} */
    QdpViewComponent.prototype.backColor;
    /** @type {?} */
    QdpViewComponent.prototype.backgroundImage;
    /** @type {?} */
    QdpViewComponent.prototype.backgroundImageLayout;
    /** @type {?} */
    QdpViewComponent.prototype.grayAreaBackColor;
    /** @type {?} */
    QdpViewComponent.prototype.showResizeTip;
    /** @type {?} */
    QdpViewComponent.prototype.showDragDropTip;
    /** @type {?} */
    QdpViewComponent.prototype.showDragFillTip;
    /** @type {?} */
    QdpViewComponent.prototype.showScrollTip;
    /** @type {?} */
    QdpViewComponent.prototype.highlightInvalidData;
    /** @type {?} */
    QdpViewComponent.prototype.useTouchLayout;
    /** @type {?} */
    QdpViewComponent.prototype.hideSelection;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserEditFormula;
    /** @type {?} */
    QdpViewComponent.prototype.enableFormulaTextbox;
    /** @type {?} */
    QdpViewComponent.prototype.autoFitType;
    /** @type {?} */
    QdpViewComponent.prototype.referenceStyle;
    /** @type {?} */
    QdpViewComponent.prototype.hostStyle;
    /** @type {?} */
    QdpViewComponent.prototype.hostClass;
    /** @type {?} */
    QdpViewComponent.prototype.name;
    /** @type {?} */
    QdpViewComponent.prototype.queryId;
    /** @type {?} */
    QdpViewComponent.prototype.controlType;
    /** @type {?} */
    QdpViewComponent.prototype.licenseKey;
    /** @type {?} */
    QdpViewComponent.prototype.qoManagerCode;
    /** @type {?} */
    QdpViewComponent.prototype.queryRelativeUrl;
    /** @type {?} */
    QdpViewComponent.prototype.qoId;
    /** @type {?} */
    QdpViewComponent.prototype.voId;
    /** @type {?} */
    QdpViewComponent.prototype.groupType;
    /** @type {?} */
    QdpViewComponent.prototype.templateType;
    /** @type {?} */
    QdpViewComponent.prototype.multiSheets;
    /** @type {?} */
    QdpViewComponent.prototype.curSheet;
    /** @type {?} */
    QdpViewComponent.prototype.sheetChanged;
    /** @type {?} */
    QdpViewComponent.prototype.multiSheetsSchemaIds;
    /** @type {?} */
    QdpViewComponent.prototype.sheet;
    /** @type {?} */
    QdpViewComponent.prototype.schemaValue;
    /** @type {?} */
    QdpViewComponent.prototype.colList;
    /** @type {?} */
    QdpViewComponent.prototype.formData;
    /** @type {?} */
    QdpViewComponent.prototype.searchText;
    /** @type {?} */
    QdpViewComponent.prototype.groupIcon;
    /** @type {?} */
    QdpViewComponent.prototype.conditionExpression;
    /** @type {?} */
    QdpViewComponent.prototype.jointsearchInfoList;
    /** @type {?} */
    QdpViewComponent.prototype.loading;
    /** @type {?} */
    QdpViewComponent.prototype.tabId;
    /** @type {?} */
    QdpViewComponent.prototype.renderService;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.filterService;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.injector;
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,