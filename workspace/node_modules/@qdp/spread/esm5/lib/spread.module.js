/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { QdpViewComponent } from './component/qdp-view/qdp-view.component';
import { RenderService } from './service/render/render.service';
import { LoadingModule } from '@farris/ui-loading';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { InputGroupModule } from '@farris/ui-input-group';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { DndListModule } from '@qdp/common';
import { ComboListModule } from '@farris/ui-combo-list';
import { ColumnsSettingComponent } from './component/columns-setting/columns-setting.component';
import { DimensionSettingComponent } from './component/dimension-setting/dimension-setting.component';
var SpreadModule = /** @class */ (function () {
    function SpreadModule() {
    }
    /**
     * @return {?}
     */
    SpreadModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: SpreadModule,
            providers: [
                RenderService
            ]
        };
    };
    SpreadModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        LoadingModule.forRoot({
                            message: 'Loading...'
                        }),
                        DndListModule,
                        FormsModule,
                        ReactiveFormsModule,
                        ComboListModule,
                        InputGroupModule,
                        FDropdownDirectiveTypeModule,
                    ],
                    declarations: [
                        QdpViewComponent,
                        ColumnsSettingComponent,
                        DimensionSettingComponent,
                        DimensionSettingComponent
                    ],
                    exports: [
                        QdpViewComponent,
                        ColumnsSettingComponent,
                    ]
                },] }
    ];
    return SpreadModule;
}());
export { SpreadModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ByZWFkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BxZHAvc3ByZWFkLyIsInNvdXJjZXMiOlsibGliL3NwcmVhZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUUxRCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQTtBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRTVDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNoRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUV0RztJQUFBO0lBa0NBLENBQUM7Ozs7SUFSUSxvQkFBTzs7O0lBQWQ7UUFDRSxPQUFPO1lBQ0wsUUFBUSxFQUFFLFlBQVk7WUFDdEIsU0FBUyxFQUFFO2dCQUNULGFBQWE7YUFDZDtTQUNGLENBQUM7SUFDSixDQUFDOztnQkFqQ0YsUUFBUSxTQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGFBQWEsQ0FBQyxPQUFPLENBQUM7NEJBQ3BCLE9BQU8sRUFBRSxZQUFZO3lCQUN0QixDQUFDO3dCQUNGLGFBQWE7d0JBQ2IsV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLGVBQWU7d0JBQ2YsZ0JBQWdCO3dCQUNoQiw0QkFBNEI7cUJBRTdCO29CQUNELFlBQVksRUFBRTt3QkFDWixnQkFBZ0I7d0JBQ2hCLHVCQUF1Qjt3QkFDdkIseUJBQXlCO3dCQUN6Qix5QkFBeUI7cUJBQzFCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxnQkFBZ0I7d0JBQ2hCLHVCQUF1QjtxQkFDeEI7aUJBQ0Y7O0lBVUQsbUJBQUM7Q0FBQSxBQWxDRCxJQWtDQztTQVRZLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBRZHBWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnQvcWRwLXZpZXcvcWRwLXZpZXcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUmVuZGVyU2VydmljZSB9IGZyb20gJy4vc2VydmljZS9yZW5kZXIvcmVuZGVyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMb2FkaW5nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2FkaW5nJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgRmxleExheW91dE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZmxleC1sYXlvdXQnO1xyXG5pbXBvcnQgeyBGRHJvcGRvd25EaXJlY3RpdmVUeXBlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kcm9wZG93bidcclxuaW1wb3J0IHsgRG5kTGlzdE1vZHVsZSB9IGZyb20gJ0BxZHAvY29tbW9uJztcclxuaW1wb3J0IHsgTG9jYWxpemVNb2R1bGUgfSBmcm9tICdAcWRwL2xvY2FsaXplJztcclxuaW1wb3J0IHsgQ29tYm9MaXN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21iby1saXN0JztcclxuaW1wb3J0IHsgQ29sdW1uc1NldHRpbmdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudC9jb2x1bW5zLXNldHRpbmcvY29sdW1ucy1zZXR0aW5nLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERpbWVuc2lvblNldHRpbmdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudC9kaW1lbnNpb24tc2V0dGluZy9kaW1lbnNpb24tc2V0dGluZy5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBMb2FkaW5nTW9kdWxlLmZvclJvb3Qoe1xyXG4gICAgICBtZXNzYWdlOiAnTG9hZGluZy4uLidcclxuICAgIH0pLFxyXG4gICAgRG5kTGlzdE1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcclxuICAgIENvbWJvTGlzdE1vZHVsZSxcclxuICAgIElucHV0R3JvdXBNb2R1bGUsXHJcbiAgICBGRHJvcGRvd25EaXJlY3RpdmVUeXBlTW9kdWxlLFxyXG4gICAgLy8gTG9jYWxpemVNb2R1bGVcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgUWRwVmlld0NvbXBvbmVudCxcclxuICAgIENvbHVtbnNTZXR0aW5nQ29tcG9uZW50LFxyXG4gICAgRGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudCxcclxuICAgIERpbWVuc2lvblNldHRpbmdDb21wb25lbnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFFkcFZpZXdDb21wb25lbnQsXHJcbiAgICBDb2x1bW5zU2V0dGluZ0NvbXBvbmVudCxcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTcHJlYWRNb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IFNwcmVhZE1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgUmVuZGVyU2VydmljZVxyXG4gICAgICBdXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG4iXX0=