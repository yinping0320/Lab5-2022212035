/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { QdpViewComponent } from './component/qdp-view/qdp-view.component';
import { RenderService } from './service/render/render.service';
import { LoadingModule } from '@farris/ui-loading';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { InputGroupModule } from '@farris/ui-input-group';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { DndListModule } from '@qdp/common';
import { ComboListModule } from '@farris/ui-combo-list';
import { ColumnsSettingComponent } from './component/columns-setting/columns-setting.component';
import { DimensionSettingComponent } from './component/dimension-setting/dimension-setting.component';
export class SpreadModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: SpreadModule,
            providers: [
                RenderService
            ]
        };
    }
}
SpreadModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    LoadingModule.forRoot({
                        message: 'Loading...'
                    }),
                    DndListModule,
                    FormsModule,
                    ReactiveFormsModule,
                    ComboListModule,
                    InputGroupModule,
                    FDropdownDirectiveTypeModule,
                ],
                declarations: [
                    QdpViewComponent,
                    ColumnsSettingComponent,
                    DimensionSettingComponent,
                    DimensionSettingComponent
                ],
                exports: [
                    QdpViewComponent,
                    ColumnsSettingComponent,
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ByZWFkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BxZHAvc3ByZWFkLyIsInNvdXJjZXMiOlsibGliL3NwcmVhZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUUxRCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQTtBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRTVDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNoRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQTJCdEcsTUFBTSxPQUFPLFlBQVk7Ozs7SUFDdkIsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLFlBQVk7WUFDdEIsU0FBUyxFQUFFO2dCQUNULGFBQWE7YUFDZDtTQUNGLENBQUM7SUFDSixDQUFDOzs7WUFqQ0YsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLGFBQWEsQ0FBQyxPQUFPLENBQUM7d0JBQ3BCLE9BQU8sRUFBRSxZQUFZO3FCQUN0QixDQUFDO29CQUNGLGFBQWE7b0JBQ2IsV0FBVztvQkFDWCxtQkFBbUI7b0JBQ25CLGVBQWU7b0JBQ2YsZ0JBQWdCO29CQUNoQiw0QkFBNEI7aUJBRTdCO2dCQUNELFlBQVksRUFBRTtvQkFDWixnQkFBZ0I7b0JBQ2hCLHVCQUF1QjtvQkFDdkIseUJBQXlCO29CQUN6Qix5QkFBeUI7aUJBQzFCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxnQkFBZ0I7b0JBQ2hCLHVCQUF1QjtpQkFDeEI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFFkcFZpZXdDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudC9xZHAtdmlldy9xZHAtdmlldy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBSZW5kZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL3JlbmRlci9yZW5kZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IExvYWRpbmdNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvYWRpbmcnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1mbGV4LWxheW91dCc7XHJcbmltcG9ydCB7IEZEcm9wZG93bkRpcmVjdGl2ZVR5cGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRyb3Bkb3duJ1xyXG5pbXBvcnQgeyBEbmRMaXN0TW9kdWxlIH0gZnJvbSAnQHFkcC9jb21tb24nO1xyXG5pbXBvcnQgeyBMb2NhbGl6ZU1vZHVsZSB9IGZyb20gJ0BxZHAvbG9jYWxpemUnO1xyXG5pbXBvcnQgeyBDb21ib0xpc3RNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbWJvLWxpc3QnO1xyXG5pbXBvcnQgeyBDb2x1bW5zU2V0dGluZ0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2NvbHVtbnMtc2V0dGluZy9jb2x1bW5zLXNldHRpbmcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2RpbWVuc2lvbi1zZXR0aW5nL2RpbWVuc2lvbi1zZXR0aW5nLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIExvYWRpbmdNb2R1bGUuZm9yUm9vdCh7XHJcbiAgICAgIG1lc3NhZ2U6ICdMb2FkaW5nLi4uJ1xyXG4gICAgfSksXHJcbiAgICBEbmRMaXN0TW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxyXG4gICAgQ29tYm9MaXN0TW9kdWxlLFxyXG4gICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgIEZEcm9wZG93bkRpcmVjdGl2ZVR5cGVNb2R1bGUsXHJcbiAgICAvLyBMb2NhbGl6ZU1vZHVsZVxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBRZHBWaWV3Q29tcG9uZW50LFxyXG4gICAgQ29sdW1uc1NldHRpbmdDb21wb25lbnQsXHJcbiAgICBEaW1lbnNpb25TZXR0aW5nQ29tcG9uZW50LFxyXG4gICAgRGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgUWRwVmlld0NvbXBvbmVudCxcclxuICAgIENvbHVtbnNTZXR0aW5nQ29tcG9uZW50LFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFNwcmVhZE1vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogU3ByZWFkTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICBSZW5kZXJTZXJ2aWNlXHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==