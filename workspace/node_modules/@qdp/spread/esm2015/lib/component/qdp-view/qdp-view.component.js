/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, Inject, Renderer2, HostBinding, Injector, Optional, ViewChild, LOCALE_ID } from '@angular/core';
import { RenderService } from '../../service/render/render.service';
import { FilterManagerService, SchemaManagerService, EventBus, DataRenderExtendService, JointSearchManagerService, LcpService, QDPCacheUtil, RtfServices } from '@qdp/common';
import { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';
import { MessagerService } from '@farris/ui-messager';
import { ServicesUtils } from '../../util/services.utils';
import { DimensionSettingComponent } from '../dimension-setting/dimension-setting.component';
import { ColumnsSettingComponent } from '../columns-setting/columns-setting.component';
import { LoadingService } from '@farris/ui-loading';
import { FormErrorService } from '@farris/command-services';
import { CacheService } from '@ecp-caf/caf-common';
import { Subject } from 'rxjs';
/** @type {?} */
const matches = (/**
 * @param {?} el
 * @param {?} selector
 * @return {?}
 */
(el, selector) => (el.matches || el.msMatchesSelector).call(el, selector));
const ɵ0 = matches;
export class QdpViewComponent {
    /**
     * @param {?} elRef
     * @param {?} renderService
     * @param {?} renderer
     * @param {?} filterService
     * @param {?} injector
     */
    constructor(elRef, renderService, renderer, filterService, injector) {
        this.renderService = renderService;
        this.renderer = renderer;
        this.filterService = filterService;
        this.injector = injector;
        this.aggreData = [
            { name: '请选择', value: 0 },
            { name: '合计', value: 1 },
            { name: '最小值', value: 2 },
            { name: '最大值', value: 3 },
            { name: '计数', value: 4 },
            { name: '平均值', value: 5 }
        ];
        this.groupSelectValue = this.aggreData[0].value;
        this.groupText = '';
        this.colIsGroup = false;
        this.formInline = true;
        this.currentColIndex = 0;
        this.isInitQdpView = true; // 是否初始化qdpViewComponent
        // 是否初始化qdpViewComponent
        this.isShowDimension = true;
        this.cls = true;
        this.isOpen = false;
        this.headerMenuTop = 0;
        this.headerMenuLeft = 0;
        this.headerMenuDisplay = 'none';
        this.colIsGroupId = 'colIsGroup' + EventBus.guid();
        this.style = {
            width: '800px',
            height: '600px'
        };
        // indicate all options
        this.isCommonQdpViewComponent = false;
        this.sheetChanged = new Subject(); //切换sheet监听事件
        //切换sheet监听事件
        this.multiSheetsSchemaIds = {};
        // 来源数据
        this.searchText = '';
        this.groupIcon = '<span class="k-icon k-i-search"></span>';
        this.conditionExpression = null;
        this.elRef = elRef;
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.msgService = this.injector.get(MessagerService);
            this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;
            this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE;
            this.loadService = this.injector.get(LoadingService);
            this.lcpService = this.injector.get(LcpService);
            this.jointSearchManagerService = this.injector.get(JointSearchManagerService);
            this.schemaManager = this.injector.get(SchemaManagerService);
            this.dataRenderExtendService = this.injector.get(DataRenderExtendService);
            this.formErrorService = this.injector.get(FormErrorService);
            this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');
            this.cache = this.injector.get(CacheService);
        }
    }
    /**
     * @private
     * @return {?}
     */
    setServices() {
        ServicesUtils.setServices('renderExtends' + this.queryId, this.dataRenderExtendService);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.loading = this.loadService.show({ container: 'body' });
        this.setServices();
        // 交叉表结果页监听事件
        if (this.controlType === 'crosstab') {
            this.docClickSubscription = this.renderer.listen('document', 'click', this.onDocumentClick.bind(this));
        }
        this.tabId = RtfServices.getTabId(this.queryId);
        // 缓存结果页对象，给工具栏使用
        QDPCacheUtil.setCache(this.tabId + this.queryId + this.controlType + 'qdpview', this);
        ServicesUtils.setServices(this.tabId + 'qoId', this.qoId);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        try {
            // 通过配置中心，获取spreadjs控件序列号
            this.lcpService.formErrorService = this.formErrorService;
            this.lcpService.getSpreadLicense().subscribe((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                if (data) {
                    GC.Spread.Sheets.LicenseKey = data;
                }
                this.afterView();
            }));
        }
        catch (e) {
            this.loading.close();
        }
        this.setMultiSheetsVarible();
    }
    /**
     * @private
     * @return {?}
     */
    setMultiSheetsVarible() {
        if (this.columnsSettingComponent) {
            this.columnsSettingComponent.multiSheets = this.multiSheets;
            this.columnsSettingComponent.curSheet = this.curSheet;
            this.columnsSettingComponent.multiSheetsSchemaIds = this.multiSheetsSchemaIds;
        }
    }
    /**
     * @return {?}
     */
    afterView() {
        /** @type {?} */
        const elRef = this.elRef;
        /** @type {?} */
        const dom = (/** @type {?} */ (elRef.nativeElement));
        /** @type {?} */
        const hostElement = dom.querySelector('#sheet');
        if (this.licenseKey) {
            GC.Spread.Sheets.LicenseKey = this.licenseKey;
        }
        this.spread = new GC.Spread.Sheets.Workbook(hostElement, { sheetCount: 0 });
        this.setSpreadOptions();
        // this.bindCustomEvent(this.spread);
        /** @type {?} */
        const eventId = this.tabId;
        EventBus.register('schemaValueChanged', this.handleSchemaValueChanged.bind(this), eventId + 'qdpViewComponent');
        if (this.templateType !== 'qdpAdvancedTemplate' && this.isInitQdpView) {
            this.initQdpView();
        }
        else {
            this.loading.close();
        }
    }
    /**
     * @private
     * @param {?} schemaValue
     * @return {?}
     */
    handleSchemaValueChanged(schemaValue) {
        this.schemaValue = schemaValue;
        if (this.curSheet && this.multiSheets.length && schemaValue && schemaValue.id) {
            this.multiSheetsSchemaIds[this.curSheet] = schemaValue.id;
            this.setMultiSheetsVarible();
        }
    }
    /**
     * @return {?}
     */
    initQdpView() {
        /** @type {?} */
        const self = this;
        if (!this.loading) {
            this.loading = this.loadService.show({ container: 'body' });
        }
        this.jointSearchManagerService.getjointsearch('form' + 'ff3ea474-cc65-23b0-cdb1-73c9146cea3b', this.queryId, '').subscribe((/**
         * @param {?} jointsearchList
         * @return {?}
         */
        (jointsearchList) => {
            this.filterService.getFilter(this.qoManagerCode ? this.qoManagerCode : this.queryId, this.queryId, this.queryRelativeUrl, 1, this.groupType).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                self.conditionExpression = null;
                self.jointsearchInfoList = jointsearchList;
                if (data && data.filter) {
                    self.conditionExpression = JSON.stringify(data.filter);
                }
                /** @type {?} */
                const renderOption = Object.assign({ multiSheetsSchemaIds: self.multiSheetsSchemaIds, curSheet: self.curSheet, multiSheets: self.multiSheets }, { queryId: self.queryId, controlType: self.controlType, qoManagerCode: self.qoManagerCode, pageIndex: 0, queryRelativeUrl: self.queryRelativeUrl, filterCondition: self.conditionExpression, groupType: self.groupType, voId: self.voId, jointsearchInfoList: self.jointsearchInfoList, loading: this.loading });
                this.qdpViewRender(renderOption);
            }));
        }));
    }
    /**
     * @private
     * @param {?} spread
     * @return {?}
     */
    bindCustomEvent(spread) {
        // const customEventNameSpace = '.ng';
        // const events = [];
        // events.forEach((event) => {
        //   spread.bind(event + customEventNameSpace, (event: any, data: any) => {
        //     const eventType = event.type;
        //     const camelCaseEvent = eventType[0].toLowerCase() + eventType.substr(1);
        //     this[camelCaseEvent].emit(data);
        //   });
        // });
    }
    /**
     * @return {?}
     */
    setSpreadOptions() {
        /** @type {?} */
        const self = this;
        /** @type {?} */
        const spread = this.spread;
        if (!this.spread) {
            return;
        }
        spread.suspendEvent();
        spread.suspendPaint();
        this.spread.fromJSON(null);
        /** @type {?} */
        const options = this.spreadOptions;
        if (options) {
            options.forEach((/**
             * @param {?} option
             * @return {?}
             */
            (option) => {
                if (option.name === 'name') {
                    spread.name = option.value;
                }
                else {
                    spread.options[option.name] = option.value;
                }
            }));
        }
        spread.unbind(GC.Spread.Sheets.Events.ActiveSheetChanged);
        spread.bind(GC.Spread.Sheets.Events.ActiveSheetChanged, (/**
         * @param {?} e
         * @param {?} args
         * @return {?}
         */
        function (e, args) {
            self.curSheet = args.newSheet.name();
            self.setGroup(self.curSheet);
            self.setMultiSheetsVarible();
            self.initQdpView();
        }));
        spread.resumePaint();
        spread.resumeEvent();
    }
    /**
     * 方法已废弃，建议替换为initQDPView方法
     * 初始化查询结果页控件
     * @param {?} queryId
     * @param {?} schemaId
     * @param {?=} controlType
     * @param {?=} qoManagerCode
     * @param {?=} pageIndex
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} groupType
     * @param {?=} voId
     * @param {?=} fromCache
     * @param {?=} isSchemaSelectChanged
     * @return {?}
     */
    initSpread(queryId, schemaId, controlType, qoManagerCode, pageIndex, queryRelativeUrl, filterCondition, groupType, voId, fromCache, isSchemaSelectChanged) {
        if (this.curSheet && this.multiSheets.length) {
            this.multiSheetsSchemaIds[this.curSheet] = schemaId;
            this.setMultiSheetsVarible();
        }
        this.qdpViewRender(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { schemaId, queryId, spread: this.spread, controlType, qoManagerCode, pageIndex, queryRelativeUrl, filterCondition, formData: this.formData, groupType: groupType, voId: voId, qdpView: this, fromCache, isSchemaSelectChanged, jointsearchInfoList: this.jointsearchInfoList }));
    }
    /**
     * 初始化查询结果控件
     * @param {?} option
     * @return {?}
     */
    qdpViewRender(option) {
        if (!option.loading) {
            option.loading = this.loadService.show({ container: 'body' });
        }
        option.voId = !option.voId ? this.voId : option.voId;
        option.groupType = !option.groupType ? this.groupType : option.groupType;
        option.fromCache = option.fromCache ? option.fromCache : false;
        if (option.filterCondition) {
            this.conditionExpression = option.filterCondition;
        }
        /** @type {?} */
        const renderOption = Object.assign({}, option, { formData: this.formData, spread: this.spread, qdpView: this });
        this.renderService.render(renderOption);
        EventBus.register(this.queryId + 'spread_init', this.registeSpreadColumnWidthChangedEvent.bind(this), this.queryId);
    }
    /**
     * 方法已废弃，建议替换为export方法
     * 导出Excel
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} pageIndex
     * @param {?=} qoManagerCode
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} groupType
     * @param {?=} voId
     * @param {?=} totalCount
     * @param {?=} exportType
     * @return {?}
     */
    exportExcel(queryId, id, type, pageIndex, qoManagerCode, queryRelativeUrl, filterCondition, groupType, voId, totalCount, exportType) {
        this.export(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId, schemaId: id, controlType: type, pageIndex, qoManagerCode, queryRelativeUrl, filterCondition, groupType, voId, totalCount, exportType }));
    }
    /**
     * 导出Excel
     * @param {?} option
     * @return {?}
     */
    export(option) {
        if (this.controlType === 'crosstab') {
            option.totalCount = this.spread.getActiveSheet().getRowCount();
        }
        option.voId = this.voId ? this.voId : option.voId;
        option.queryId = this.queryId ? this.queryId : option.queryId;
        option.groupType = this.groupType ? this.groupType : option.groupType;
        option.qoManagerCode = this.qoManagerCode ? this.qoManagerCode : option.qoManagerCode;
        this.renderService.exportData(option);
        // this.renderService.exportData(option.queryId, option.schemaId, option.controlType, option.pageIndex, option.qoManagerCode, option.queryRelativeUrl, option.filterCondition, option.groupType, option.voId, option.totalCount || 1, option.exportType);
    }
    /**
     * 方法已废弃，建议替换为print方法
     * 打印PDF
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} qoManagerCode
     * @param {?=} printIntegration
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} pageIndex
     * @param {?=} groupType
     * @param {?=} voId
     * @return {?}
     */
    pdfExportEvent(queryId, id, type, qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, pageIndex, groupType, voId) {
        this.print(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId, schemaId: id, controlType: type, pageIndex, qoManagerCode, queryRelativeUrl, printIntegration, filterCondition, groupType, voId }));
    }
    /**
     * 打印
     * @param {?} option 渲染配置项
     * @return {?}
     */
    print(option) {
        option.voId = this.voId ? this.voId : option.voId;
        option.queryId = this.queryId ? this.queryId : option.queryId;
        option.groupType = this.groupType ? this.groupType : option.groupType;
        option.qoManagerCode = this.qoManagerCode ? this.qoManagerCode : option.qoManagerCode;
        this.renderService.pdfExportEvent(option);
        // this.renderService.pdfExportEvent(option.queryId, option.schemaId, option.controlType, option.qoManagerCode, option.printIntegration, option.queryRelativeUrl, option.filterCondition, option.groupType, option.pageIndex, option.voId);
    }
    /**
     * 方法已废弃，建议替换为printPreview(option: RenderOption)方法
     * 打印预览
     * @param {?} queryId
     * @param {?} id
     * @param {?=} type
     * @param {?=} qoManagerCode
     * @param {?=} printIntegration
     * @param {?=} queryRelativeUrl
     * @param {?=} filterCondition
     * @param {?=} pageIndex
     * @param {?=} groupType
     * @param {?=} voId
     * @return {?}
     */
    printPreView(queryId, id, type, qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, pageIndex, groupType, voId) {
        /** @type {?} */
        const _voId = this.voId ? this.voId : voId;
        /** @type {?} */
        const _queryId = this.queryId ? this.queryId : queryId;
        /** @type {?} */
        const _groupType = this.groupType ? this.groupType : groupType;
        /** @type {?} */
        const _qoManagerCode = this.qoManagerCode ? this.qoManagerCode : qoManagerCode;
        this.renderService.printPreView(Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { queryId: _queryId, schemaId: id, controlType: type, qoManagerCode: _qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, groupType: _groupType, pageIndex, voId: _voId }));
        // this.renderService.printPreView(queryId, id, type, qoManagerCode, printIntegration, queryRelativeUrl, filterCondition, groupType ? groupType : this.groupType, pageIndex, voId ? voId : this.voId);
    }
    /**
     * 打印预览
     * @param {?} option 渲染配置项
     * @return {?}
     */
    printPreview(option) {
        option.groupType = this.groupType ? this.groupType : option.groupType;
        option.voId = this.voId ? this.voId : option.voId;
        this.renderService.printPreView(option);
        // this.renderService.printPreView(option.queryId, option.schemaId, option.controlType, option.qoManagerCode, option.printIntegration, option.queryRelativeUrl, option.filterCondition, option.groupType, option.pageIndex, option.voId);
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        /** @type {?} */
        const options = [];
        for (const changeName in changes) {
            /** @type {?} */
            const newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                this.tabId = RtfServices.getTabId(this.queryId);
                switch (changeName) {
                    case 'hostStyle':
                        this.style = newValue;
                        if (this.spread) {
                            this.spread.refresh();
                        }
                        break;
                    case 'hostClass':
                        break;
                    case 'name':
                        this.spread.name = newValue;
                        break;
                    case 'formData':
                        newValue.dynamicCols.forEach((/**
                         * @param {?} col
                         * @return {?}
                         */
                        col => {
                            col.name = col.title;
                            col.bindField = col.field;
                            col.colWidth = 150;
                            col.align = 0;
                            col.visible = true;
                            col.isFixed = false;
                            col.formatType = 0;
                            col.formattor = '';
                            col.sort = 0;
                            col.pageAggreText = null;
                            col.pageAggre = 0;
                            col.isGroup = false;
                            col.groupAggreText = '';
                            col.groupAggre = 0;
                            col.totalAggreText = '';
                            col.totalAggre = 0;
                            col.level = 1;
                            col.childList = [];
                            col.dimension = 0;
                            col.rowColor = null;
                        }));
                        this.formData = newValue;
                        this.ngOnDestroy();
                        this.afterView();
                        break;
                    case 'groupType':
                        this.groupType = newValue;
                        break;
                    case 'queryId':
                        this.queryId = newValue;
                        QDPCacheUtil.setCache(this.tabId + this.queryId + this.controlType + 'qdpview', this);
                        break;
                    case 'controlType':
                        this.controlType = newValue;
                        break;
                    case 'qoId':
                        this.qoId = newValue;
                        ServicesUtils.setServices(this.tabId + 'qoId', this.qoId);
                        break;
                    case 'qoManagerCode':
                    case 'voId':
                    case 'queryRelativeUrl':
                    case 'templateType':
                        break;
                    case 'multiSheets':
                        this.multiSheets = newValue;
                        this.setGroup(this.multiSheets[0]);
                        break;
                    case 'licenseKey':
                        if (newValue) {
                            GC.Spread.Sheets.LicenseKey = newValue;
                        }
                        break;
                    case 'isCommonQdpViewComponent':
                        this.isCommonQdpViewComponent = newValue;
                        if (this.isCommonQdpViewComponent) {
                        }
                        break;
                    default:
                        options.push({ name: changeName, value: newValue });
                }
            }
        }
        this.spreadOptions = options;
        this.setSpreadOptions();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.spread) {
            this.spread.destroy();
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onResized(event) {
        this.style.height = event.newHeight + 'px';
        this.style.width = event.newWidth + 'px';
    }
    /**
     * @return {?}
     */
    toggle() {
        /** @type {?} */
        let isCompare = false;
        if (this.isOpen) {
            if (this.controlType === 'crosstab') {
                this.dimensionSettingComponent.isCompare = false;
                this.dimensionSettingComponent.selectedDimesion();
                isCompare = this.dimensionSettingComponent.isCompare;
            }
            else {
                this.columnsSettingComponent.isCompare = false;
                this.columnsSettingComponent.selectedDimesion();
                isCompare = this.columnsSettingComponent.isCompare;
            }
            if (this.schemaValue && this.schemaValue.isPrefab !== 1 && !isCompare) {
                this.schemaValue.schemaValue = this.controlType === 'crosstab' ? JSON.stringify(this.dimensionSettingComponent.schemaValue.schemaValue) : JSON.stringify(this.columnsSettingComponent.schemaValue.schemaValue);
                this.schemaManager.saveSchema({ 'schema': JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @return {?}
                 */
                () => { }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                (error) => {
                    this.formErrorService.exception(error.Message, error);
                }));
                this.schemaValue.schemaValue = JSON.parse(this.schemaValue.schemaValue);
            }
        }
        this.isOpen = !this.isOpen;
    }
    /**
     * @param {?} sheetName
     * @return {?}
     */
    setGroup(sheetName) {
        this.curSheet = sheetName;
        if (this.groupType) {
            for (let i = 0; i < this.multiSheets.length; i++) {
                this.groupType = this.groupType.replace(this.multiSheets[i], "");
            }
            this.groupType += sheetName;
        }
        else {
            this.groupType = sheetName;
        }
        this.sheetChanged.next(this.groupType);
    }
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    onDocumentClick(e) {
        if (e.target.tagName === 'CANVAS') {
            this.isOpen = false;
        }
    }
    /**
     * @param {?} pageIndex
     * @param {?} pageSize
     * @return {?}
     */
    handleCrosstabPageChange(pageIndex, pageSize) {
        this.sheet = this.spread.getActiveSheet();
        for (let i = 0; i < this.sheet.getRowCount(); i++) {
            if (i >= (pageIndex - 1) * pageSize && i < pageIndex * pageSize) {
                this.sheet.setRowVisible(i, true, GC.Spread.Sheets.SheetArea.viewport);
                this.sheet.showRow(i, GC.Spread.Sheets.VerticalPosition.bottom);
            }
            else {
                this.sheet.setRowVisible(i, false, GC.Spread.Sheets.SheetArea.viewport);
            }
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    handleContextMenu($event) {
        if ('list' === this.controlType.toLowerCase()) {
            /** @type {?} */
            let x = 0;
            /** @type {?} */
            let y = 0;
            /** @type {?} */
            let qdpviewNative = this.sheetEl.nativeElement;
            while (qdpviewNative) {
                x += qdpviewNative.offsetLeft;
                y += qdpviewNative.offsetTop;
                qdpviewNative = qdpviewNative.offsetParent;
            }
            /** @type {?} */
            const activeSheet = this.spread.getActiveSheet();
            /** @type {?} */
            const colHeader = GC.Spread.Sheets.SheetArea.colHeader;
            /** @type {?} */
            const target = activeSheet.hitTest($event.clientX - x, $event.clientY - y);
            if (target.hitTestType !== colHeader || target.col === undefined || target.row === undefined) {
                return false;
            }
            /** @type {?} */
            const headerRowCount = activeSheet.getRowCount(colHeader);
            /** @type {?} */
            const span = activeSheet.getSpan(target.row, target.col, colHeader);
            // 判断多级表头的情况下，只处理最子集表头
            if (span && (target.row + span.rowCount) < headerRowCount) {
                return false;
            }
            this.currentColIndex = target.col;
            this.initColGroupAggre(this.currentColIndex);
            this.headerMenuDisplay = 'block';
            this.headerMenuTop = $event.clientY;
            this.headerMenuLeft = $event.clientX;
        }
        return false;
    }
    /**
     * @return {?}
     */
    handleIsGroupClick() {
        if (this.colIsGroup) {
            this.groupSelectValue = this.aggreData[0].value;
            this.groupText = '';
        }
    }
    /**
     * @return {?}
     */
    handleSaveClick() {
        /** @type {?} */
        const self = this;
        try {
            if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption && this.schemaValue.schemaValue.columnOption.colList) {
                if (this.schemaValue && this.schemaValue.isPrefab === 1) {
                    this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));
                    return;
                }
                /** @type {?} */
                const colList = JSON.parse(JSON.stringify(this.schemaValue.schemaValue.columnOption.colList));
                /** @type {?} */
                const params = { index: this.currentColIndex, colIndex: 0, type: 'edit' };
                // tslint:disable-next-line:prefer-for-of
                for (let i = 0; i < colList.length; i++) {
                    this.recursiveColumnSort(colList[i], null, params);
                }
                this.schemaValue.schemaValue.columnOption.colList = colList;
                this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);
                this.schemaManager.saveSchema({ schema: JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                data => {
                    self.initQdpView();
                    self.currentColIndex = 0;
                    self.headerMenuDisplay = 'none';
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                (error) => {
                    this.formErrorService.exception(error.Message, error);
                }));
            }
        }
        catch (e) {
            self.currentColIndex = 0;
        }
    }
    /**
     * @return {?}
     */
    handleClearSort() {
        /** @type {?} */
        const self = this;
        try {
            if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption && this.schemaValue.schemaValue.columnOption.colList && this.schemaValue.schemaValue.columnOption.colList.length) {
                if (this.schemaValue && this.schemaValue.isPrefab === 1) {
                    this.msgService.info(this.localizeService.getValue('spread.message.validate.sort'));
                    return;
                }
                /** @type {?} */
                const colList = JSON.parse(JSON.stringify(this.schemaValue.schemaValue.columnOption.colList));
                // tslint:disable-next-line:prefer-for-of
                for (let i = 0; i < colList.length; i++) {
                    this.recursiveClearColumnSort(colList[i], null);
                }
                this.schemaValue.schemaValue.columnOption.colList = colList;
                this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);
                this.schemaManager.saveSchema({ schema: JSON.stringify(this.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                data => {
                    /** @type {?} */
                    const renderOption = Object.assign({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets }, { schemaId: this.schemaValue.id, queryId: self.queryId, controlType: self.controlType, qoManagerCode: self.qoManagerCode, pageIndex: 0, queryRelativeUrl: self.queryRelativeUrl, filterCondition: self.conditionExpression, groupType: self.groupType, voId: self.voId, jointsearchInfoList: self.jointsearchInfoList });
                    self.qdpViewRender(renderOption);
                    self.currentColIndex = 0;
                    self.headerMenuDisplay = 'none';
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                (error) => {
                    this.formErrorService.exception(error.Message, error);
                }));
            }
        }
        catch (e) {
            self.currentColIndex = 0;
        }
    }
    // @HostListener('click')
    /**
     * @param {?} $event
     * @return {?}
     */
    handleBlur($event) {
        this.headerMenuDisplay = 'none';
    }
    /**
     * @private
     * @param {?} index
     * @return {?}
     */
    initColGroupAggre(index) {
        if (this.schemaValue && this.schemaValue.schemaValue && this.schemaValue.schemaValue.columnOption
            && this.schemaValue.schemaValue.columnOption.colList && this.schemaValue.schemaValue.columnOption.colList.length > index) {
            /** @type {?} */
            const params = { index: this.currentColIndex, colIndex: 0, type: 'init' };
            // tslint:disable-next-line:prefer-for-of
            for (let i = 0; i < this.schemaValue.schemaValue.columnOption.colList.length; i++) {
                this.recursiveColumnSort(this.schemaValue.schemaValue.columnOption.colList[i], null, params);
            }
        }
    }
    /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @param {?} params
     * @return {?}
     */
    recursiveColumnSort(col, colList, params) {
        if (colList == null) {
            if (col.childList && col.childList.length) {
                this.recursiveColumnSort(null, col.childList, params);
            }
            else {
                if (params.colIndex === params.index) {
                    if (params.type === 'init') {
                        this.colIsGroup = col.isGroup;
                        this.groupText = col.groupAggreText || '';
                        this.groupSelectValue = col.groupAggre;
                    }
                    else if (params.type === 'edit') {
                        col.isGroup = this.colIsGroup;
                        col.groupAggreText = this.groupText || '';
                        col.groupAggre = this.groupSelectValue;
                    }
                }
                params.colIndex++;
            }
        }
        else {
            // tslint:disable-next-line:prefer-for-of
            for (let i = 0; i < colList.length; i++) {
                if (colList[i].childList && colList[i].childList.length) {
                    this.recursiveColumnSort(null, colList[i].childList, params);
                }
                else {
                    if (params.colIndex === params.index) {
                        if (params.type === 'init') {
                            this.colIsGroup = colList[i].isGroup;
                            this.groupText = colList[i].groupAggreText || '';
                            this.groupSelectValue = colList[i].groupAggre;
                        }
                        else if (params.type === 'edit') {
                            colList[i].isGroup = this.colIsGroup;
                            colList[i].groupAggreText = this.groupText || '';
                            colList[i].groupAggre = this.groupSelectValue;
                        }
                    }
                    params.colIndex++;
                }
            }
        }
    }
    /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @return {?}
     */
    recursiveClearColumnSort(col, colList) {
        if (colList == null) {
            if (col.childList && col.childList.length) {
                this.recursiveClearColumnSort(null, col.childList);
            }
            else {
                col['sort'] = 0;
                col['sortIndex'] = 0;
            }
        }
        else {
            // tslint:disable-next-line:prefer-for-of
            for (let i = 0; i < colList.length; i++) {
                if (colList[i].childList && colList[i].childList.length) {
                    this.recursiveClearColumnSort(null, colList[i].childList);
                }
                else {
                    colList[i]['sort'] = 0;
                    colList[i]['sortIndex'] = 0;
                }
            }
        }
    }
    /**
     * @private
     * @return {?}
     */
    registeSpreadColumnWidthChangedEvent() {
        /** @type {?} */
        const self = this;
        this.sheet = this.spread.getActiveSheet();
        self.sheet.bind(GC.Spread.Sheets.Events.ColumnWidthChanged, (/**
         * @param {?} sender
         * @param {?} info
         * @return {?}
         */
        function (sender, info) {
            /** @type {?} */
            const index = info.colList[0];
            /** @type {?} */
            const colW = info.sheet.getColumnWidth(info.colList[0]);
            if (self.schemaValue && self.schemaValue.schemaValue && self.schemaValue.schemaValue.columnOption
                && self.schemaValue.schemaValue.columnOption.colList && self.schemaValue.schemaValue.columnOption.colList.length) {
                if (self.schemaValue && self.schemaValue.isPrefab === 1) {
                    self.msgService.info(self.localizeService.getValue('spread.message.validate.sort'));
                    return;
                }
                /** @type {?} */
                const colList = JSON.parse(JSON.stringify(self.schemaValue.schemaValue.columnOption.colList));
                /** @type {?} */
                const params = { index: index, colIndex: 0, colWidth: colW };
                // tslint:disable-next-line:prefer-for-of
                for (let i = 0; i < colList.length; i++) {
                    self.recursiveColumnWidthChanged(colList[i], null, params);
                }
                self.schemaValue.schemaValue.columnOption.colList = colList;
                self.schemaValue.schemaValue = JSON.stringify(self.schemaValue.schemaValue);
                self.schemaManager.saveSchema({ schema: JSON.stringify(self.schemaValue), groupType: this.groupType }, '').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                data => {
                    self.schemaValue.schemaValue = JSON.parse(self.schemaValue.schemaValue);
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                (error) => {
                    self.formErrorService.exception(error.Message, error);
                }));
            }
        }));
    }
    /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @param {?} params
     * @return {?}
     */
    recursiveColumnWidthChanged(col, colList, params) {
        if (colList == null) {
            if (col.childList && col.childList.length) {
                this.recursiveColumnWidthChanged(null, col.childList, params);
            }
            else {
                if (params.colIndex === params.index) {
                    col.colWidth = params.colWidth;
                }
                params.colIndex++;
            }
        }
        else {
            // tslint:disable-next-line:prefer-for-of
            for (let i = 0; i < colList.length; i++) {
                if (colList[i].childList && colList[i].childList.length) {
                    this.recursiveColumnWidthChanged(null, colList[i].childList, params);
                }
                else {
                    if (params.colIndex === params.index) {
                        colList[i].colWidth = params.colWidth;
                    }
                    params.colIndex++;
                }
            }
        }
    }
}
QdpViewComponent.decorators = [
    { type: Component, args: [{
                selector: 'qdp-view',
                template: "<div *ngIf=\"isShowDimension\" #crosstab class=\"f-cmp-sidebar f-sidebar-slide  f-sidebar-pos-right\"\r\n  [ngClass]=\"{'f-sidebar-show': isOpen, 'f-sidebar-collapse': !isOpen }\">\r\n  <div class=\"f-sidebar-main\">\r\n    <div class=\"f-sidebar-header-ctr ng-star-inserted border mb-2\">\r\n      <h5 class=\"f-sidebar-header-title\">{{localizeService.getValue('spread.crossTable.dimensionManager')}}</h5>\r\n      <span id=\"dimensionClose\" (click)=\"toggle()\">\r\n        <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTRweCcgaGVpZ2h0PScxNHB4JyB2aWV3Qm94PScwIDAgMTQgMTQnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuW9oueKtue7k+WQiDwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBzdHJva2UtbGluZWNhcD0ncm91bmQnPjxnIGlkPScwMi3mn6Xor6JVSeiuvuiuoScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEzMjUuMDAwMDAwLCAtOTUuMDAwMDAwKScgc3Ryb2tlPScjMkQyRjMzJyBzdHJva2Utd2lkdGg9JzEuNCc+PGcgaWQ9J+e8lue7hC0yNicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoODk4LjAwMDAwMCwgNzUuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0yNScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNDIwLjAwMDAwMCwgMTMuMDAwMDAwKSc+PHBhdGggZD0nTTE0LDE0IEw4LDggTDE0LDE0IEw4LDIwIEwxNCwxNCBaIE0xNCwxNCBMMjAsMjAgTDE0LDE0IEwyMCw4IEwxNCwxNCBaJyBpZD0n5b2i54q257uT5ZCIJz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 16px; height: 16px; display: block;\" />\r\n      </span>\r\n    </div>\r\n    <div class=\"container f-utils-fill-flex-column\">\r\n      <dimension-setting class=\"h-100\"  *ngIf=\"controlType=='crosstab'\"\r\n        [controlType]=\"controlType\" \r\n        [queryRelativeUrl]=\"queryRelativeUrl\"\r\n        [qoManagerCode]=\"qoManagerCode\"\r\n        [queryId]=\"queryId\"\r\n        [qoId]=\"qoId\"\r\n        [voId]=\"voId\"\r\n        [groupType]=\"groupType\"\r\n        [spread]=\"spread\"\r\n        [conditionExpression]=\"conditionExpression\"\r\n        [jointsearchInfoList]=\"jointsearchInfoList\"\r\n        [qdpView]=\"this\"\r\n      ></dimension-setting>\r\n      <columns-setting class=\"h-100\"  *ngIf=\"controlType!='crosstab'\"\r\n        [controlType]=\"controlType\" \r\n        [queryRelativeUrl]=\"queryRelativeUrl\"\r\n        [qoManagerCode]=\"qoManagerCode\"\r\n        [queryId]=\"queryId\"\r\n        [qoId]=\"qoId\"\r\n        [voId]=\"voId\"\r\n        [groupType]=\"groupType\"\r\n        [spread]=\"spread\"\r\n        [conditionExpression]=\"conditionExpression\"\r\n        [jointsearchInfoList]=\"jointsearchInfoList\"\r\n        [qdpView]=\"this\"\r\n      ></columns-setting>\r\n    </div>\r\n  </div>\r\n  <div class=\"f-sidebar-entry-ctr\">\r\n    <div class=\"f-sidebar-entry-icon ng-star-inserted\"><span class=\"f-icon f-sidebar-entry\" (click)=\"toggle()\"></span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div #sheet id='sheet' [ngStyle]=\"style\" [ngClass]=\"hostClass\" class=\"flex-fill qdp-overflow-hidden ml-3 mr-3 border\"\r\n  (resized)=\"onResized($event)\" (contextmenu)=\"handleContextMenu($event)\" (click)=\"handleBlur($event)\">\r\n</div>\r\n\r\n<div class=\"dropdown-menu headerMenu\" *ngIf=\"controlType!='crosstab' && controlType!='charts'\"\r\n  [style.left.px]=\"headerMenuLeft\" [style.top.px]=\"headerMenuTop\" [style.display]=\"headerMenuDisplay\">\r\n  <div class=\"flex-fill farris-split-section farris-overflow-hidden\">\r\n    <div class=\"farris-form farris-card-content-bg\">\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"{{colIsGroupId}}\">\r\n              <span\r\n                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.group')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n              <div class=\"custom-control custom-checkbox mb-0\">\r\n                <input type=\"checkbox\" [(ngModel)]=\"colIsGroup\" class=\"custom-control-input\" id=\"{{colIsGroupId}}\"\r\n                  checked=\"\">\r\n                <label class=\"custom-control-label\" for=\"{{colIsGroupId}}\" (click)=\"handleIsGroupClick()\"></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"colGroupText\">\r\n              <span\r\n                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupTotal')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input-group [(ngModel)]=\"groupText\" id=\"colGroupText\"></input-group>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"colGroupAggre\">\r\n              <span\r\n                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.totalType')}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <farris-combo-list id=\"colGroupAggre\" [disabled]=\"colIsGroup\" [(ngModel)]=\"groupSelectValue\"\r\n                [data]=\"aggreData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <button class=\"btn btn-primary mr-1\" id=\"button-edit\" (click)=\"handleSaveClick()\">\r\n          {{localizeService.getValue('ideCmp.schemaManager.btnSave')}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: [".qdp-overflow-hidden{overflow:hidden!important}.simpleDemo ul{min-height:42px;padding:0}.card-title,.demo-header{text-align:center}.title{margin:20px 0}.simpleDemo ul .dndDraggingSource{display:none}.simpleDemo ul .dndPlaceholder{background:rgba(56,143,255,.06);border:1px dashed #388fff;box-shadow:0 0 4px 0 rgba(13,95,201,.22);margin:.25rem!important;padding:.25rem!important}.simpleDemo ul li{background:rgba(235,244,254,.84);border:1px solid #388fff;box-shadow:0 0 10px 0 rgba(63,113,177,.22);border-radius:3px;height:28px;font-family:PingFangSC-Regular;font-size:13px;color:#388fff;margin:.25rem!important;padding:.25rem!important}#unselectFieldList li{border:none;background-color:rgba(0,0,0,0);box-shadow:0 0 #000;border-radius:3px;height:28px;margin:.25rem!important;padding:.25rem!important}#unselectFieldList li:hover{background:#f4f5f9}#unselectFieldList .dndPlaceholder{background:rgba(56,143,255,.06);border:1px dashed #388fff;box-shadow:0 0 4px 0 rgba(13,95,201,.22);margin:.25rem!important;padding:.25rem!important}.unselectField{font-family:PingFangSC-Regular;font-size:13px;color:rgba(0,0,0,.85)}.unselectFieldFront{font-family:PingFangSC-Medium;font-size:13px;color:#b4bccc}.simpleDemo ul li.selected{background-color:#dff0d8;color:#3c763d}.current-model{background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px;padding:18px 22px}.slicer{height:220px;position:relative}.headerMenu{position:fixed;display:none;top:0;left:0}.cardTitle{background:#f5f7fa;border-radius:3px 3px 0 0;height:36px}.dimensionTitle{font-family:PingFangSC-Medium;font-size:14px;color:rgba(0,0,0,.65);line-height:20px}.imgFont{font-family:PingFangSC-Regular;font-size:13px;color:#b4bccc}"]
            }] }
];
/** @nocollapse */
QdpViewComponent.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: RenderService },
    { type: Renderer2 },
    { type: FilterManagerService },
    { type: Injector, decorators: [{ type: Optional }] }
];
QdpViewComponent.propDecorators = {
    sheetEl: [{ type: ViewChild, args: ['sheet', { read: ElementRef },] }],
    dimensionSettingComponent: [{ type: ViewChild, args: [DimensionSettingComponent,] }],
    columnsSettingComponent: [{ type: ViewChild, args: [ColumnsSettingComponent,] }],
    isInitQdpView: [{ type: Input }],
    isShowDimension: [{ type: Input }],
    cls: [{ type: HostBinding, args: ['class.f-utils-fill-flex-column',] }],
    isCommonQdpViewComponent: [{ type: Input }],
    allowUserDragDrop: [{ type: Input }],
    allowUserDragFill: [{ type: Input }],
    allowUserZoom: [{ type: Input }],
    allowUserResize: [{ type: Input }],
    showHorizontalScrollbar: [{ type: Input }],
    showVerticalScrollbar: [{ type: Input }],
    tabStripVisible: [{ type: Input }],
    allowUndo: [{ type: Input }],
    allowSheetReorder: [{ type: Input }],
    allowCopyPasteExcelStyle: [{ type: Input }],
    allowExtendPasteRange: [{ type: Input }],
    copyPasteHeaderOptions: [{ type: Input }],
    showDragFillSmartTag: [{ type: Input }],
    scrollbarShowMax: [{ type: Input }],
    scrollbarMaxAlign: [{ type: Input }],
    tabEditable: [{ type: Input }],
    newTabVisible: [{ type: Input }],
    tabNavigationVisible: [{ type: Input }],
    backColor: [{ type: Input }],
    backgroundImage: [{ type: Input }],
    backgroundImageLayout: [{ type: Input }],
    grayAreaBackColor: [{ type: Input }],
    showResizeTip: [{ type: Input }],
    showDragDropTip: [{ type: Input }],
    showDragFillTip: [{ type: Input }],
    showScrollTip: [{ type: Input }],
    highlightInvalidData: [{ type: Input }],
    useTouchLayout: [{ type: Input }],
    hideSelection: [{ type: Input }],
    allowUserEditFormula: [{ type: Input }],
    enableFormulaTextbox: [{ type: Input }],
    autoFitType: [{ type: Input }],
    referenceStyle: [{ type: Input }],
    hostStyle: [{ type: Input }],
    hostClass: [{ type: Input }],
    name: [{ type: Input }],
    queryId: [{ type: Input }],
    controlType: [{ type: Input }],
    licenseKey: [{ type: Input }],
    qoManagerCode: [{ type: Input }],
    queryRelativeUrl: [{ type: Input }],
    qoId: [{ type: Input }],
    voId: [{ type: Input }],
    groupType: [{ type: Input }],
    templateType: [{ type: Input }],
    multiSheets: [{ type: Input }],
    formData: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    QdpViewComponent.prototype.localizeService;
    /** @type {?} */
    QdpViewComponent.prototype.sheetEl;
    /** @type {?} */
    QdpViewComponent.prototype.dimensionSettingComponent;
    /** @type {?} */
    QdpViewComponent.prototype.columnsSettingComponent;
    /** @type {?} */
    QdpViewComponent.prototype.aggreData;
    /** @type {?} */
    QdpViewComponent.prototype.groupSelectValue;
    /** @type {?} */
    QdpViewComponent.prototype.groupText;
    /** @type {?} */
    QdpViewComponent.prototype.colIsGroup;
    /** @type {?} */
    QdpViewComponent.prototype.formInline;
    /** @type {?} */
    QdpViewComponent.prototype.localId;
    /** @type {?} */
    QdpViewComponent.prototype.msgService;
    /** @type {?} */
    QdpViewComponent.prototype.currentColIndex;
    /** @type {?} */
    QdpViewComponent.prototype.schemaManager;
    /** @type {?} */
    QdpViewComponent.prototype.jointSearchManagerService;
    /** @type {?} */
    QdpViewComponent.prototype.lcpService;
    /** @type {?} */
    QdpViewComponent.prototype.pageIndex;
    /** @type {?} */
    QdpViewComponent.prototype.dataRenderExtendService;
    /** @type {?} */
    QdpViewComponent.prototype.loadService;
    /** @type {?} */
    QdpViewComponent.prototype.formErrorService;
    /** @type {?} */
    QdpViewComponent.prototype.cache;
    /** @type {?} */
    QdpViewComponent.prototype.isInitQdpView;
    /** @type {?} */
    QdpViewComponent.prototype.isShowDimension;
    /** @type {?} */
    QdpViewComponent.prototype.cls;
    /** @type {?} */
    QdpViewComponent.prototype.spread;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.spreadOptions;
    /** @type {?} */
    QdpViewComponent.prototype.isOpen;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.docClickSubscription;
    /** @type {?} */
    QdpViewComponent.prototype.headerMenuTop;
    /** @type {?} */
    QdpViewComponent.prototype.headerMenuLeft;
    /** @type {?} */
    QdpViewComponent.prototype.headerMenuDisplay;
    /** @type {?} */
    QdpViewComponent.prototype.colIsGroupId;
    /** @type {?} */
    QdpViewComponent.prototype.style;
    /** @type {?} */
    QdpViewComponent.prototype.isCommonQdpViewComponent;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserDragDrop;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserDragFill;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserZoom;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserResize;
    /** @type {?} */
    QdpViewComponent.prototype.showHorizontalScrollbar;
    /** @type {?} */
    QdpViewComponent.prototype.showVerticalScrollbar;
    /** @type {?} */
    QdpViewComponent.prototype.tabStripVisible;
    /** @type {?} */
    QdpViewComponent.prototype.allowUndo;
    /** @type {?} */
    QdpViewComponent.prototype.allowSheetReorder;
    /** @type {?} */
    QdpViewComponent.prototype.allowCopyPasteExcelStyle;
    /** @type {?} */
    QdpViewComponent.prototype.allowExtendPasteRange;
    /** @type {?} */
    QdpViewComponent.prototype.copyPasteHeaderOptions;
    /** @type {?} */
    QdpViewComponent.prototype.showDragFillSmartTag;
    /** @type {?} */
    QdpViewComponent.prototype.scrollbarShowMax;
    /** @type {?} */
    QdpViewComponent.prototype.scrollbarMaxAlign;
    /** @type {?} */
    QdpViewComponent.prototype.tabEditable;
    /** @type {?} */
    QdpViewComponent.prototype.newTabVisible;
    /** @type {?} */
    QdpViewComponent.prototype.tabNavigationVisible;
    /** @type {?} */
    QdpViewComponent.prototype.backColor;
    /** @type {?} */
    QdpViewComponent.prototype.backgroundImage;
    /** @type {?} */
    QdpViewComponent.prototype.backgroundImageLayout;
    /** @type {?} */
    QdpViewComponent.prototype.grayAreaBackColor;
    /** @type {?} */
    QdpViewComponent.prototype.showResizeTip;
    /** @type {?} */
    QdpViewComponent.prototype.showDragDropTip;
    /** @type {?} */
    QdpViewComponent.prototype.showDragFillTip;
    /** @type {?} */
    QdpViewComponent.prototype.showScrollTip;
    /** @type {?} */
    QdpViewComponent.prototype.highlightInvalidData;
    /** @type {?} */
    QdpViewComponent.prototype.useTouchLayout;
    /** @type {?} */
    QdpViewComponent.prototype.hideSelection;
    /** @type {?} */
    QdpViewComponent.prototype.allowUserEditFormula;
    /** @type {?} */
    QdpViewComponent.prototype.enableFormulaTextbox;
    /** @type {?} */
    QdpViewComponent.prototype.autoFitType;
    /** @type {?} */
    QdpViewComponent.prototype.referenceStyle;
    /** @type {?} */
    QdpViewComponent.prototype.hostStyle;
    /** @type {?} */
    QdpViewComponent.prototype.hostClass;
    /** @type {?} */
    QdpViewComponent.prototype.name;
    /** @type {?} */
    QdpViewComponent.prototype.queryId;
    /** @type {?} */
    QdpViewComponent.prototype.controlType;
    /** @type {?} */
    QdpViewComponent.prototype.licenseKey;
    /** @type {?} */
    QdpViewComponent.prototype.qoManagerCode;
    /** @type {?} */
    QdpViewComponent.prototype.queryRelativeUrl;
    /** @type {?} */
    QdpViewComponent.prototype.qoId;
    /** @type {?} */
    QdpViewComponent.prototype.voId;
    /** @type {?} */
    QdpViewComponent.prototype.groupType;
    /** @type {?} */
    QdpViewComponent.prototype.templateType;
    /** @type {?} */
    QdpViewComponent.prototype.multiSheets;
    /** @type {?} */
    QdpViewComponent.prototype.curSheet;
    /** @type {?} */
    QdpViewComponent.prototype.sheetChanged;
    /** @type {?} */
    QdpViewComponent.prototype.multiSheetsSchemaIds;
    /** @type {?} */
    QdpViewComponent.prototype.sheet;
    /** @type {?} */
    QdpViewComponent.prototype.schemaValue;
    /** @type {?} */
    QdpViewComponent.prototype.colList;
    /** @type {?} */
    QdpViewComponent.prototype.formData;
    /** @type {?} */
    QdpViewComponent.prototype.searchText;
    /** @type {?} */
    QdpViewComponent.prototype.groupIcon;
    /** @type {?} */
    QdpViewComponent.prototype.conditionExpression;
    /** @type {?} */
    QdpViewComponent.prototype.jointsearchInfoList;
    /** @type {?} */
    QdpViewComponent.prototype.loading;
    /** @type {?} */
    QdpViewComponent.prototype.tabId;
    /** @type {?} */
    QdpViewComponent.prototype.renderService;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.filterService;
    /**
     * @type {?}
     * @private
     */
    QdpViewComponent.prototype.injector;
}
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicWRwLXZpZXcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHFkcC9zcHJlYWQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50L3FkcC12aWV3L3FkcC12aWV3LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFBRSxLQUFLLEVBQ2hCLFVBQVUsRUFBRSxNQUFNLEVBQVUsU0FBUyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUN0RSxTQUFTLEVBQUUsU0FBUyxFQUNyQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDcEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLG9CQUFvQixFQUFFLFFBQVEsRUFBRSx1QkFBdUIsRUFBRSx5QkFBeUIsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUM5SyxPQUFPLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFMUQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDN0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDdkYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOztNQUl6QixPQUFPOzs7OztBQUFHLENBQUMsRUFBRSxFQUFFLFFBQVEs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Qyw0Q0FBbUM7O0lBQ25DLDZDQUFvQzs7SUFDcEMsdUNBQThCOztJQUM5Qix5Q0FBZ0M7O0lBQ2hDLGdEQUF1Qzs7SUFDdkMscUNBQTJCOztJQUMzQiwyQ0FBaUM7O0lBQ2pDLGlEQUF1Qzs7SUFDdkMsNkNBQW1DOztJQUNuQyx5Q0FBK0I7O0lBQy9CLDJDQUFrQzs7SUFDbEMsMkNBQWtDOztJQUNsQyx5Q0FBK0I7O0lBQy9CLGdEQUF1Qzs7SUFDdkMsMENBQWlDOztJQUNqQyx5Q0FBZ0M7O0lBQ2hDLGdEQUF1Qzs7SUFDdkMsZ0RBQXVDOztJQUN2Qyx1Q0FBNkI7O0lBQzdCLDBDQUFnQzs7SUFDaEMscUNBQXdCOztJQUN4QixxQ0FBMkI7O0lBQzNCLGdDQUFzQjs7SUFDdEIsbUNBQXlCOztJQUN6Qix1Q0FBNkI7O0lBQzdCLHNDQUE0Qjs7SUFDNUIseUNBQTRCOztJQUM1Qiw0Q0FBK0I7O0lBQy9CLGdDQUFtQjs7SUFDbkIsZ0NBQW1COztJQUNuQixxQ0FBd0I7O0lBQ3hCLHdDQUEyQjs7SUFDM0IsdUNBQTRCOztJQUM1QixvQ0FBYzs7SUFDZCx3Q0FBa0M7O0lBQ2xDLGdEQUErQjs7SUFFL0IsaUNBQVc7O0lBRVgsdUNBQWlCOztJQUNqQixtQ0FBYTs7SUFDYixvQ0FBdUI7O0lBQ3ZCLHNDQUFnQjs7SUFDaEIscUNBQXNEOztJQUN0RCwrQ0FBMkI7O0lBQzNCLCtDQUF5Qjs7SUFDekIsbUNBQWE7O0lBQ2IsaUNBQVc7O0lBeEdULHlDQUFtQzs7Ozs7SUFDbkMsb0NBQTJCOzs7OztJQUMzQix5Q0FBMkM7Ozs7O0lBQzNDLG9DQUFzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3ksXHJcbiAgRWxlbWVudFJlZiwgSW5qZWN0LCBPbkluaXQsIFJlbmRlcmVyMiwgSG9zdEJpbmRpbmcsIEluamVjdG9yLCBPcHRpb25hbCxcclxuICBWaWV3Q2hpbGQsIExPQ0FMRV9JRCwgT3V0cHV0LCBFdmVudEVtaXR0ZXJcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUmVuZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2UvcmVuZGVyL3JlbmRlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRmlsdGVyTWFuYWdlclNlcnZpY2UsIFNjaGVtYU1hbmFnZXJTZXJ2aWNlLCBFdmVudEJ1cywgRGF0YVJlbmRlckV4dGVuZFNlcnZpY2UsIEpvaW50U2VhcmNoTWFuYWdlclNlcnZpY2UsIExjcFNlcnZpY2UsIFFEUENhY2hlVXRpbCwgUnRmU2VydmljZXMgfSBmcm9tICdAcWRwL2NvbW1vbic7XHJcbmltcG9ydCB7IExvY2FsaXplU2VydmljZSwgREVGQVVMVF9MQU5HVUFHRSB9IGZyb20gJ0BxZHAvbG9jYWxpemUnO1xyXG5pbXBvcnQgeyBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuaW1wb3J0IHsgU2VydmljZXNVdGlscyB9IGZyb20gJy4uLy4uL3V0aWwvc2VydmljZXMudXRpbHMnO1xyXG5pbXBvcnQgeyBSZW5kZXJPcHRpb24gfSBmcm9tICcuLi8uLi9lbnRpdHkvUmVuZGVyT3B0aW9uJztcclxuaW1wb3J0IHsgRGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudCB9IGZyb20gJy4uL2RpbWVuc2lvbi1zZXR0aW5nL2RpbWVuc2lvbi1zZXR0aW5nLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENvbHVtbnNTZXR0aW5nQ29tcG9uZW50IH0gZnJvbSAnLi4vY29sdW1ucy1zZXR0aW5nL2NvbHVtbnMtc2V0dGluZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb2FkaW5nU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcbmltcG9ydCB7IEZvcm1FcnJvclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL2NvbW1hbmQtc2VydmljZXMnO1xyXG5pbXBvcnQgeyBDYWNoZVNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5cclxuZGVjbGFyZSB2YXIgR0M6IGFueTtcclxuXHJcbmNvbnN0IG1hdGNoZXMgPSAoZWwsIHNlbGVjdG9yKSA9PiAoZWwubWF0Y2hlcyB8fCBlbC5tc01hdGNoZXNTZWxlY3RvcikuY2FsbChlbCwgc2VsZWN0b3IpO1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3FkcC12aWV3JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcWRwLXZpZXcuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3FkcC12aWV3LmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUWRwVmlld0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xyXG4gIGxvY2FsaXplU2VydmljZTogTG9jYWxpemVTZXJ2aWNlO1xyXG4gIEBWaWV3Q2hpbGQoJ3NoZWV0JywgeyByZWFkOiBFbGVtZW50UmVmIH0pIHB1YmxpYyBzaGVldEVsOiBFbGVtZW50UmVmO1xyXG4gIEBWaWV3Q2hpbGQoRGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudCkgZGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKENvbHVtbnNTZXR0aW5nQ29tcG9uZW50KSBjb2x1bW5zU2V0dGluZ0NvbXBvbmVudDtcclxuICBhZ2dyZURhdGE6IGFueSA9IFtcclxuICAgIHsgbmFtZTogJ+ivt+mAieaLqScsIHZhbHVlOiAwIH0sXHJcbiAgICB7IG5hbWU6ICflkIjorqEnLCB2YWx1ZTogMSB9LFxyXG4gICAgeyBuYW1lOiAn5pyA5bCP5YC8JywgdmFsdWU6IDIgfSxcclxuICAgIHsgbmFtZTogJ+acgOWkp+WAvCcsIHZhbHVlOiAzIH0sXHJcbiAgICB7IG5hbWU6ICforqHmlbAnLCB2YWx1ZTogNCB9LFxyXG4gICAgeyBuYW1lOiAn5bmz5Z2H5YC8JywgdmFsdWU6IDUgfVxyXG4gIF07XHJcbiAgZ3JvdXBTZWxlY3RWYWx1ZSA9IHRoaXMuYWdncmVEYXRhWzBdLnZhbHVlO1xyXG4gIGdyb3VwVGV4dCA9ICcnO1xyXG4gIGNvbElzR3JvdXAgPSBmYWxzZTtcclxuICBmb3JtSW5saW5lID0gdHJ1ZTtcclxuICBsb2NhbElkOiBhbnk7XHJcbiAgbXNnU2VydmljZTogYW55O1xyXG4gIGN1cnJlbnRDb2xJbmRleCA9IDA7XHJcbiAgc2NoZW1hTWFuYWdlcjogU2NoZW1hTWFuYWdlclNlcnZpY2U7XHJcbiAgam9pbnRTZWFyY2hNYW5hZ2VyU2VydmljZTogSm9pbnRTZWFyY2hNYW5hZ2VyU2VydmljZTtcclxuICBsY3BTZXJ2aWNlOiBMY3BTZXJ2aWNlO1xyXG4gIHBhZ2VJbmRleDogYW55O1xyXG4gIGRhdGFSZW5kZXJFeHRlbmRTZXJ2aWNlOiBhbnk7XHJcbiAgbG9hZFNlcnZpY2U6IExvYWRpbmdTZXJ2aWNlO1xyXG4gIGZvcm1FcnJvclNlcnZpY2U6IEZvcm1FcnJvclNlcnZpY2U7XHJcbiAgY2FjaGU6IENhY2hlU2VydmljZTtcclxuICBASW5wdXQoKSBpc0luaXRRZHBWaWV3ID0gdHJ1ZTsgIC8vIOaYr+WQpuWIneWni+WMlnFkcFZpZXdDb21wb25lbnRcclxuICBASW5wdXQoKSBpc1Nob3dEaW1lbnNpb24gPSB0cnVlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBJbmplY3QoRWxlbWVudFJlZikgZWxSZWY6IEVsZW1lbnRSZWYsXHJcbiAgICBwdWJsaWMgcmVuZGVyU2VydmljZTogUmVuZGVyU2VydmljZSxcclxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcclxuICAgIHByaXZhdGUgZmlsdGVyU2VydmljZTogRmlsdGVyTWFuYWdlclNlcnZpY2UsXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvclxyXG4gICkge1xyXG4gICAgdGhpcy5lbFJlZiA9IGVsUmVmO1xyXG4gICAgaWYgKHRoaXMuaW5qZWN0b3IpIHtcclxuICAgICAgdGhpcy5sb2NhbGl6ZVNlcnZpY2UgPSB0aGlzLmluamVjdG9yLmdldChMb2NhbGl6ZVNlcnZpY2UpO1xyXG4gICAgICB0aGlzLm1zZ1NlcnZpY2UgPSB0aGlzLmluamVjdG9yLmdldChNZXNzYWdlclNlcnZpY2UpO1xyXG4gICAgICB0aGlzLmxvY2FsSWQgPSB0aGlzLmluamVjdG9yLmdldChMT0NBTEVfSUQpIHx8IERFRkFVTFRfTEFOR1VBR0U7XHJcbiAgICAgIHRoaXMuZm9ybUlubGluZSA9IHRoaXMubG9jYWxJZC50b0xvd2VyQ2FzZSgpID09PSBERUZBVUxUX0xBTkdVQUdFO1xyXG4gICAgICB0aGlzLmxvYWRTZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoTG9hZGluZ1NlcnZpY2UpO1xyXG4gICAgICB0aGlzLmxjcFNlcnZpY2UgPSB0aGlzLmluamVjdG9yLmdldChMY3BTZXJ2aWNlKTtcclxuICAgICAgdGhpcy5qb2ludFNlYXJjaE1hbmFnZXJTZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoSm9pbnRTZWFyY2hNYW5hZ2VyU2VydmljZSk7XHJcbiAgICAgIHRoaXMuc2NoZW1hTWFuYWdlciA9IHRoaXMuaW5qZWN0b3IuZ2V0KFNjaGVtYU1hbmFnZXJTZXJ2aWNlKTtcclxuICAgICAgdGhpcy5kYXRhUmVuZGVyRXh0ZW5kU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KERhdGFSZW5kZXJFeHRlbmRTZXJ2aWNlKTtcclxuICAgICAgdGhpcy5mb3JtRXJyb3JTZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoRm9ybUVycm9yU2VydmljZSk7XHJcbiAgICAgIHRoaXMuYWdncmVEYXRhID0gdGhpcy5sb2NhbGl6ZVNlcnZpY2UuZ2V0VmFsdWUoJ2lkZUNtcC5zY2hlbWFNYW5hZ2VyLmNvbHVtbk9wdGlvbi5hZ2dyZWdhdGVEYXRhJyk7XHJcbiAgICAgIHRoaXMuY2FjaGUgPSB0aGlzLmluamVjdG9yLmdldChDYWNoZVNlcnZpY2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzZXRTZXJ2aWNlcygpIHtcclxuICAgIFNlcnZpY2VzVXRpbHMuc2V0U2VydmljZXMoJ3JlbmRlckV4dGVuZHMnICsgdGhpcy5xdWVyeUlkLCB0aGlzLmRhdGFSZW5kZXJFeHRlbmRTZXJ2aWNlKTtcclxuICB9XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZi11dGlscy1maWxsLWZsZXgtY29sdW1uJykgY2xzID0gdHJ1ZTtcclxuICBwdWJsaWMgc3ByZWFkOiBhbnk7XHJcbiAgcHJpdmF0ZSBlbFJlZjogRWxlbWVudFJlZjtcclxuICBwcml2YXRlIHNwcmVhZE9wdGlvbnM6IGFueVtdO1xyXG4gIHB1YmxpYyBpc09wZW4gPSBmYWxzZTtcclxuICBwcml2YXRlIGRvY0NsaWNrU3Vic2NyaXB0aW9uOiBhbnk7XHJcbiAgaGVhZGVyTWVudVRvcCA9IDA7XHJcbiAgaGVhZGVyTWVudUxlZnQgPSAwO1xyXG4gIGhlYWRlck1lbnVEaXNwbGF5ID0gJ25vbmUnO1xyXG4gIGNvbElzR3JvdXBJZCA9ICdjb2xJc0dyb3VwJyArIEV2ZW50QnVzLmd1aWQoKTtcclxuXHJcbiAgc3R5bGUgPSB7XHJcbiAgICB3aWR0aDogJzgwMHB4JyxcclxuICAgIGhlaWdodDogJzYwMHB4J1xyXG4gIH07XHJcblxyXG4gIC8vIGluZGljYXRlIGFsbCBvcHRpb25zXHJcbiAgQElucHV0KCkgaXNDb21tb25RZHBWaWV3Q29tcG9uZW50ID0gZmFsc2U7XHJcbiAgQElucHV0KCkgYWxsb3dVc2VyRHJhZ0Ryb3A6IGJvb2xlYW47ICAgICAgICAvLyDmjIflrprmmK/lkKblhYHorrjmi5bmi71SYW5nZeaVsOaNrlxyXG4gIEBJbnB1dCgpIGFsbG93VXNlckRyYWdGaWxsOiBib29sZWFuOyAgICAgICAgLy8g5oyH5a6a5piv5ZCm5YWB6K645ouW5ou95aGr5YWF6IyD5Zu0XHJcbiAgQElucHV0KCkgYWxsb3dVc2VyWm9vbTogYm9vbGVhbjsgICAgICAgICAgICAvLyDmjIflrprmmK/lkKblhYHorrjmjInkvY9jdHJsLCDpvKDmoIfmu5rova7ov5vooYznvKnmlL5cclxuICBASW5wdXQoKSBhbGxvd1VzZXJSZXNpemU6IGJvb2xlYW47ICAgICAgICAgIC8vIOaMh+WumuaYr+WQpuWFgeiuuOiwg+aVtOWIl+WSjOihjOeahOWkp+Wwj1xyXG4gIEBJbnB1dCgpIHNob3dIb3Jpem9udGFsU2Nyb2xsYmFyOiBib29sZWFuOyAgLy8g5oyH5a6a5piv5ZCm5pi+56S65Z6C55u05pa55ZCR55qE5rua5Yqo5p2hXHJcbiAgQElucHV0KCkgc2hvd1ZlcnRpY2FsU2Nyb2xsYmFyOiBib29sZWFuOyAgICAvLyDmjIflrprmmK/lkKbmmL7npLrmsLTlubPmlrnlkJHnmoTmu5rliqjmnaFcclxuICBASW5wdXQoKSB0YWJTdHJpcFZpc2libGU6IGJvb2xlYW47ICAgICAgICAgIC8vIOaMh+WumuaYr+WQpuaYvuekulRhYuagh+etvumhtVxyXG4gIEBJbnB1dCgpIGFsbG93VW5kbzogYm9vbGVhbjsgICAgICAgICAgICAgICAgLy8g5oyH5a6a5piv5ZCm5YWB6K645pKk6ZSAXHJcbiAgQElucHV0KCkgYWxsb3dTaGVldFJlb3JkZXI6IGJvb2xlYW47ICAgICAgICAvLyDmjIflrprnlKjmiLfmmK/lkKblj6/ku6Xph43mlrDmjpLluo9TcHJlYWTnu4Tku7bkuK3nmoTlt6XkvZzooajvvIzlj6/pgIlcclxuICBASW5wdXQoKSBhbGxvd0NvcHlQYXN0ZUV4Y2VsU3R5bGU6IGJvb2xlYW47IC8vIOaMh+WumuaYr+WQpuWFgeiuuOaLt+i0neOAgeeymOi0tEV4Y2Vs5qC35byPXHJcbiAgQElucHV0KCkgYWxsb3dFeHRlbmRQYXN0ZVJhbmdlOiBib29sZWFuOyAgICAvLyDmjIflrprmmK/lkKbmianlsZXnspjotLTojIPlm7RcclxuICBASW5wdXQoKSBjb3B5UGFzdGVIZWFkZXJPcHRpb25zOiBib29sZWFuOyAgIC8vIOaMh+WumuaLt+i0neaYr+WQpuWMheaLrOihqOWktFxyXG4gIEBJbnB1dCgpIHNob3dEcmFnRmlsbFNtYXJ0VGFnOiBib29sZWFuOyAgICAgLy8g5oyH5a6a5piv5ZCm5pi+56S65ouW5ou95aGr5YWF5a+56K+d5qGGXHJcbiAgQElucHV0KCkgc2Nyb2xsYmFyU2hvd01heDogYm9vbGVhbjsgICAgICAgICAvLyDmjIflrprmmL7npLrnmoTmu5rliqjmnaHmmK/lkKbln7rkuo7lt6XkvZzooajkuK3nmoTmlbTkuKrliJfmlbDlkozooYzmlbBcclxuICBASW5wdXQoKSBzY3JvbGxiYXJNYXhBbGlnbjogYm9vbGVhbjsgICAgICAgIC8vIOaMh+Wumua7muWKqOadoeaYr+WQpuS4jua0u+WKqOW3peS9nOihqOeahOacgOWQjuS4gOihjOWSjOWIl+Wvuem9kFxyXG4gIEBJbnB1dCgpIHRhYkVkaXRhYmxlOiBib29sZWFuOyAgICAgICAgICAgICAgLy8g5oyH5a6a5piv5ZCm5Y+v5Lul57yW6L6Rc2hlZXQgdGFiXHJcbiAgQElucHV0KCkgbmV3VGFiVmlzaWJsZTogYm9vbGVhbjsgICAgICAgICAgICAvLyDmjIflrprmmK/lkKbmmL7npLrmlrDlop50YWLmjInpkq5cclxuICBASW5wdXQoKSB0YWJOYXZpZ2F0aW9uVmlzaWJsZTogYm9vbGVhbjsgICAgIC8vIOaMh+WumuaYr+WQpuaYvuekuuW3peS9nOihqOmAiemhueWNoeWvvOiIqlxyXG4gIEBJbnB1dCgpIGJhY2tDb2xvcjogc3RyaW5nOyAgICAgICAgICAgICAgICAgLy8g6IOM5pmv6Imy6K6+572uXHJcbiAgQElucHV0KCkgYmFja2dyb3VuZEltYWdlOiBzdHJpbmc7ICAgICAgICAgICAvLyDog4zmma/lm77niYforr7nva5cclxuICBASW5wdXQoKSBiYWNrZ3JvdW5kSW1hZ2VMYXlvdXQ6IG51bWJlcjsgICAgIC8vIOiDjOaZr+WbvueJh+eahOW4g+WxgOiuvue9rlxyXG4gIEBJbnB1dCgpIGdyYXlBcmVhQmFja0NvbG9yOiBzdHJpbmc7ICAgICAgICAgLy8g54Gw6Imy5Yy65Z+f55qE6IOM5pmv6Imy6K6+572uXHJcbiAgQElucHV0KCkgc2hvd1Jlc2l6ZVRpcDogbnVtYmVyOyAgICAgICAgICAgICAvLyDmjIflrprlpoLkvZXmmL7npLrosIPmlbTlpKflsI/mj5DnpLpcclxuICBASW5wdXQoKSBzaG93RHJhZ0Ryb3BUaXA6IGJvb2xlYW47ICAgICAgICAgIC8vIOaMh+WumuaYr+WQpuaYvuekuuaLluaLveaPkOekulxyXG4gIEBJbnB1dCgpIHNob3dEcmFnRmlsbFRpcDogYm9vbGVhbjsgICAgICAgICAgLy8g5oyH5a6a5piv5ZCm5pi+56S65ouW5ou95aGr5YWF5o+Q56S6XHJcbiAgQElucHV0KCkgc2hvd1Njcm9sbFRpcDogbnVtYmVyOyAgICAgICAgICAgICAvLyDmjIflrprmmK/lkKbmmL7npLrmu5rliqjmnaHmj5DnpLpcclxuICBASW5wdXQoKSBoaWdobGlnaHRJbnZhbGlkRGF0YTogYm9vbGVhbjsgICAgIC8vIOaMh+WumuaYr+WQpumrmOS6ruaYvuekuuaXoOaViOaVsOaNrlxyXG4gIEBJbnB1dCgpIHVzZVRvdWNoTGF5b3V0OiBib29sZWFuOyAgICAgICAgICAgLy8g5oyH5a6a5piv5ZCm5L2/55So6Kem5pG45biD5bGA5p2l5pi+56S6c3ByZWFkXHJcbiAgQElucHV0KCkgaGlkZVNlbGVjdGlvbjogYm9vbGVhbjsgICAgICAgICAgICAvLyDmjIflrprlvZNzcHJlYWTnu4Tku7bmsqHmnInnhKbngrnml7bmmK/lkKbpgInmi6nnqoHlh7rmmL7npLpcclxuICBASW5wdXQoKSBhbGxvd1VzZXJFZGl0Rm9ybXVsYTogYm9vbGVhbjsgICAgIC8vIOaMh+WumueUqOaIt+aYr+WQpuWPr+S7pee8lui+keWNleWFg+agvOS4reeahOWFrOW8j1xyXG4gIEBJbnB1dCgpIGVuYWJsZUZvcm11bGFUZXh0Ym94OiBib29sZWFuOyAgICAgLy8g5oyH5a6a5piv5ZCm5ZCv55So5YWs5byP5paH5pys5qGGXHJcbiAgQElucHV0KCkgYXV0b0ZpdFR5cGU6IG51bWJlcjsgICAgICAgICAgICAgICAvLyDmjIflrprmmK/lkKblsIblhoXlrrnmoLzlvI/ljJbkuLrpgILlkIjljZXlhYPmoLzlkozmoIfpopjkuK3nmoTlhoXlrrlcclxuICBASW5wdXQoKSByZWZlcmVuY2VTdHlsZTogbnVtYmVyOyAgICAgICAgICAgIC8vIOW3peS9nOihqOS4iuWNleWFg+agvOWFrOW8j+S4reWNleWFg+agvOWSjOiMg+WbtOW8leeUqOeahOagt+W8j1xyXG4gIEBJbnB1dCgpIGhvc3RTdHlsZTogYW55OyAvLyB1c2VkIGZvciBnZXQgc3R5bGVzIGZvcm0gcGFyZW50IGhvc3QgRElWXHJcbiAgQElucHV0KCkgaG9zdENsYXNzOiBzdHJpbmc7XHJcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHF1ZXJ5SWQ6IHN0cmluZztcclxuICBASW5wdXQoKSBjb250cm9sVHlwZTogc3RyaW5nOyAvLyDmn6Xor6LnsbvlnotcclxuICBASW5wdXQoKSBsaWNlbnNlS2V5OiBzdHJpbmc7XHJcbiAgQElucHV0KCkgcW9NYW5hZ2VyQ29kZTogYW55O1xyXG4gIEBJbnB1dCgpIHF1ZXJ5UmVsYXRpdmVVcmw6IGFueTtcclxuICBASW5wdXQoKSBxb0lkOiBhbnk7XHJcbiAgQElucHV0KCkgdm9JZDogYW55O1xyXG4gIEBJbnB1dCgpIGdyb3VwVHlwZTogYW55O1xyXG4gIEBJbnB1dCgpIHRlbXBsYXRlVHlwZTogYW55O1xyXG4gIEBJbnB1dCgpIG11bHRpU2hlZXRzOiBhbnlbXTsgIC8v5aSac2hlZXTpobXmlK/mjIFcclxuICBjdXJTaGVldDogYW55O1xyXG4gIHNoZWV0Q2hhbmdlZCA9IG5ldyBTdWJqZWN0PGFueT4oKTsgLy/liIfmjaJzaGVldOebkeWQrOS6i+S7tlxyXG4gIG11bHRpU2hlZXRzU2NoZW1hSWRzOiBhbnkgPSB7fTtcclxuXHJcbiAgc2hlZXQ6IGFueTtcclxuICAvLyDmoLzlvI/mlrnmoYjkv6Hmga9cclxuICBzY2hlbWFWYWx1ZTogYW55O1xyXG4gIGNvbExpc3Q6IGFueTsgLy8g5YiX5L+h5oGvXHJcbiAgQElucHV0KCkgZm9ybURhdGE6IGFueTsgLy8g5p2l5rqQ5pWw5o2uXHJcbiAgc2VhcmNoVGV4dCA9ICcnO1xyXG4gIGdyb3VwSWNvbiA9ICc8c3BhbiBjbGFzcz1cImstaWNvbiBrLWktc2VhcmNoXCI+PC9zcGFuPic7XHJcbiAgY29uZGl0aW9uRXhwcmVzc2lvbiA9IG51bGw7XHJcbiAgam9pbnRzZWFyY2hJbmZvTGlzdDogYW55O1xyXG4gIGxvYWRpbmc6IGFueTtcclxuICB0YWJJZDogYW55O1xyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMubG9hZGluZyA9IHRoaXMubG9hZFNlcnZpY2Uuc2hvdyh7IGNvbnRhaW5lcjogJ2JvZHknIH0pO1xyXG4gICAgdGhpcy5zZXRTZXJ2aWNlcygpO1xyXG4gICAgLy8g5Lqk5Y+J6KGo57uT5p6c6aG155uR5ZCs5LqL5Lu2XHJcbiAgICBpZiAodGhpcy5jb250cm9sVHlwZSA9PT0gJ2Nyb3NzdGFiJykge1xyXG4gICAgICB0aGlzLmRvY0NsaWNrU3Vic2NyaXB0aW9uID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ2RvY3VtZW50JywgJ2NsaWNrJywgdGhpcy5vbkRvY3VtZW50Q2xpY2suYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnRhYklkID0gUnRmU2VydmljZXMuZ2V0VGFiSWQodGhpcy5xdWVyeUlkKTtcclxuICAgIC8vIOe8k+WtmOe7k+aenOmhteWvueixoe+8jOe7meW3peWFt+agj+S9v+eUqFxyXG4gICAgUURQQ2FjaGVVdGlsLnNldENhY2hlKHRoaXMudGFiSWQgKyB0aGlzLnF1ZXJ5SWQgKyB0aGlzLmNvbnRyb2xUeXBlICsgJ3FkcHZpZXcnLCB0aGlzKTtcclxuICAgIFNlcnZpY2VzVXRpbHMuc2V0U2VydmljZXModGhpcy50YWJJZCArICdxb0lkJywgdGhpcy5xb0lkKTtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIOmAmui/h+mFjee9ruS4reW/g++8jOiOt+WPlnNwcmVhZGpz5o6n5Lu25bqP5YiX5Y+3XHJcbiAgICAgIHRoaXMubGNwU2VydmljZS5mb3JtRXJyb3JTZXJ2aWNlID0gdGhpcy5mb3JtRXJyb3JTZXJ2aWNlO1xyXG4gICAgICB0aGlzLmxjcFNlcnZpY2UuZ2V0U3ByZWFkTGljZW5zZSgpLnN1YnNjcmliZShkYXRhID0+IHtcclxuICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgR0MuU3ByZWFkLlNoZWV0cy5MaWNlbnNlS2V5ID0gZGF0YTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hZnRlclZpZXcoKTtcclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHRoaXMubG9hZGluZy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zZXRNdWx0aVNoZWV0c1ZhcmlibGUoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc2V0TXVsdGlTaGVldHNWYXJpYmxlKCkge1xyXG4gICAgaWYgKHRoaXMuY29sdW1uc1NldHRpbmdDb21wb25lbnQpIHtcclxuICAgICAgdGhpcy5jb2x1bW5zU2V0dGluZ0NvbXBvbmVudC5tdWx0aVNoZWV0cyA9IHRoaXMubXVsdGlTaGVldHM7XHJcbiAgICAgIHRoaXMuY29sdW1uc1NldHRpbmdDb21wb25lbnQuY3VyU2hlZXQgPSB0aGlzLmN1clNoZWV0O1xyXG4gICAgICB0aGlzLmNvbHVtbnNTZXR0aW5nQ29tcG9uZW50Lm11bHRpU2hlZXRzU2NoZW1hSWRzID0gdGhpcy5tdWx0aVNoZWV0c1NjaGVtYUlkcztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFmdGVyVmlldygpIHtcclxuICAgIGNvbnN0IGVsUmVmID0gdGhpcy5lbFJlZjtcclxuICAgIGNvbnN0IGRvbSA9IGVsUmVmLm5hdGl2ZUVsZW1lbnQgYXMgSFRNTEVsZW1lbnQ7XHJcbiAgICBjb25zdCBob3N0RWxlbWVudCA9IGRvbS5xdWVyeVNlbGVjdG9yKCcjc2hlZXQnKTtcclxuICAgIGlmICh0aGlzLmxpY2Vuc2VLZXkpIHtcclxuICAgICAgR0MuU3ByZWFkLlNoZWV0cy5MaWNlbnNlS2V5ID0gdGhpcy5saWNlbnNlS2V5O1xyXG4gICAgfVxyXG4gICAgdGhpcy5zcHJlYWQgPSBuZXcgR0MuU3ByZWFkLlNoZWV0cy5Xb3JrYm9vayhob3N0RWxlbWVudCwgeyBzaGVldENvdW50OiAwIH0pO1xyXG4gICAgdGhpcy5zZXRTcHJlYWRPcHRpb25zKCk7XHJcbiAgICAvLyB0aGlzLmJpbmRDdXN0b21FdmVudCh0aGlzLnNwcmVhZCk7XHJcbiAgICBjb25zdCBldmVudElkID0gdGhpcy50YWJJZDtcclxuICAgIEV2ZW50QnVzLnJlZ2lzdGVyKCdzY2hlbWFWYWx1ZUNoYW5nZWQnLCB0aGlzLmhhbmRsZVNjaGVtYVZhbHVlQ2hhbmdlZC5iaW5kKHRoaXMpLCBldmVudElkICsgJ3FkcFZpZXdDb21wb25lbnQnKTtcclxuICAgIGlmICh0aGlzLnRlbXBsYXRlVHlwZSAhPT0gJ3FkcEFkdmFuY2VkVGVtcGxhdGUnICYmIHRoaXMuaXNJbml0UWRwVmlldykge1xyXG4gICAgICB0aGlzLmluaXRRZHBWaWV3KCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmxvYWRpbmcuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgaGFuZGxlU2NoZW1hVmFsdWVDaGFuZ2VkKHNjaGVtYVZhbHVlOiBhbnkpIHtcclxuICAgIHRoaXMuc2NoZW1hVmFsdWUgPSBzY2hlbWFWYWx1ZTtcclxuICAgIGlmICh0aGlzLmN1clNoZWV0ICYmIHRoaXMubXVsdGlTaGVldHMubGVuZ3RoICYmIHNjaGVtYVZhbHVlICYmIHNjaGVtYVZhbHVlLmlkKSB7XHJcbiAgICAgIHRoaXMubXVsdGlTaGVldHNTY2hlbWFJZHNbdGhpcy5jdXJTaGVldF0gPSBzY2hlbWFWYWx1ZS5pZDtcclxuICAgICAgdGhpcy5zZXRNdWx0aVNoZWV0c1ZhcmlibGUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBpbml0UWRwVmlldygpIHtcclxuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgaWYgKCF0aGlzLmxvYWRpbmcpIHtcclxuICAgICAgdGhpcy5sb2FkaW5nID0gdGhpcy5sb2FkU2VydmljZS5zaG93KHsgY29udGFpbmVyOiAnYm9keScgfSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmpvaW50U2VhcmNoTWFuYWdlclNlcnZpY2UuZ2V0am9pbnRzZWFyY2goJ2Zvcm0nICsgJ2ZmM2VhNDc0LWNjNjUtMjNiMC1jZGIxLTczYzkxNDZjZWEzYicsIHRoaXMucXVlcnlJZCwgJycpLnN1YnNjcmliZSgoam9pbnRzZWFyY2hMaXN0OiBhbnkpID0+IHtcclxuICAgICAgdGhpcy5maWx0ZXJTZXJ2aWNlLmdldEZpbHRlcih0aGlzLnFvTWFuYWdlckNvZGUgPyB0aGlzLnFvTWFuYWdlckNvZGUgOiB0aGlzLnF1ZXJ5SWQsIHRoaXMucXVlcnlJZCwgdGhpcy5xdWVyeVJlbGF0aXZlVXJsLCAxLCB0aGlzLmdyb3VwVHlwZSkuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG4gICAgICAgIHNlbGYuY29uZGl0aW9uRXhwcmVzc2lvbiA9IG51bGw7XHJcbiAgICAgICAgc2VsZi5qb2ludHNlYXJjaEluZm9MaXN0ID0gam9pbnRzZWFyY2hMaXN0O1xyXG4gICAgICAgIGlmIChkYXRhICYmIGRhdGEuZmlsdGVyKSB7IHNlbGYuY29uZGl0aW9uRXhwcmVzc2lvbiA9IEpTT04uc3RyaW5naWZ5KGRhdGEuZmlsdGVyKTsgfVxyXG4gICAgICAgIGNvbnN0IHJlbmRlck9wdGlvbjogUmVuZGVyT3B0aW9uID0gT2JqZWN0LmFzc2lnbih7IG11bHRpU2hlZXRzU2NoZW1hSWRzOiBzZWxmLm11bHRpU2hlZXRzU2NoZW1hSWRzLCBjdXJTaGVldDogc2VsZi5jdXJTaGVldCwgbXVsdGlTaGVldHM6IHNlbGYubXVsdGlTaGVldHMgfSwgeyBxdWVyeUlkOiBzZWxmLnF1ZXJ5SWQsIGNvbnRyb2xUeXBlOiBzZWxmLmNvbnRyb2xUeXBlLCBxb01hbmFnZXJDb2RlOiBzZWxmLnFvTWFuYWdlckNvZGUsIHBhZ2VJbmRleDogMCwgcXVlcnlSZWxhdGl2ZVVybDogc2VsZi5xdWVyeVJlbGF0aXZlVXJsLCBmaWx0ZXJDb25kaXRpb246IHNlbGYuY29uZGl0aW9uRXhwcmVzc2lvbiwgZ3JvdXBUeXBlOiBzZWxmLmdyb3VwVHlwZSwgdm9JZDogc2VsZi52b0lkLCBqb2ludHNlYXJjaEluZm9MaXN0OiBzZWxmLmpvaW50c2VhcmNoSW5mb0xpc3QsIGxvYWRpbmc6IHRoaXMubG9hZGluZyB9KTtcclxuICAgICAgICB0aGlzLnFkcFZpZXdSZW5kZXIocmVuZGVyT3B0aW9uKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgYmluZEN1c3RvbUV2ZW50KHNwcmVhZDogYW55KSB7XHJcbiAgICAvLyBjb25zdCBjdXN0b21FdmVudE5hbWVTcGFjZSA9ICcubmcnO1xyXG4gICAgLy8gY29uc3QgZXZlbnRzID0gW107XHJcbiAgICAvLyBldmVudHMuZm9yRWFjaCgoZXZlbnQpID0+IHtcclxuICAgIC8vICAgc3ByZWFkLmJpbmQoZXZlbnQgKyBjdXN0b21FdmVudE5hbWVTcGFjZSwgKGV2ZW50OiBhbnksIGRhdGE6IGFueSkgPT4ge1xyXG4gICAgLy8gICAgIGNvbnN0IGV2ZW50VHlwZSA9IGV2ZW50LnR5cGU7XHJcbiAgICAvLyAgICAgY29uc3QgY2FtZWxDYXNlRXZlbnQgPSBldmVudFR5cGVbMF0udG9Mb3dlckNhc2UoKSArIGV2ZW50VHlwZS5zdWJzdHIoMSk7XHJcbiAgICAvLyAgICAgdGhpc1tjYW1lbENhc2VFdmVudF0uZW1pdChkYXRhKTtcclxuICAgIC8vICAgfSk7XHJcbiAgICAvLyB9KTtcclxuICB9XHJcblxyXG4gIHNldFNwcmVhZE9wdGlvbnMoKSB7XHJcbiAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgIGNvbnN0IHNwcmVhZCA9IHRoaXMuc3ByZWFkO1xyXG4gICAgaWYgKCF0aGlzLnNwcmVhZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBzcHJlYWQuc3VzcGVuZEV2ZW50KCk7XHJcbiAgICBzcHJlYWQuc3VzcGVuZFBhaW50KCk7XHJcbiAgICB0aGlzLnNwcmVhZC5mcm9tSlNPTihudWxsKTtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnNwcmVhZE9wdGlvbnM7XHJcbiAgICBpZiAob3B0aW9ucykge1xyXG4gICAgICBvcHRpb25zLmZvckVhY2goKG9wdGlvbikgPT4ge1xyXG4gICAgICAgIGlmIChvcHRpb24ubmFtZSA9PT0gJ25hbWUnKSB7XHJcbiAgICAgICAgICBzcHJlYWQubmFtZSA9IG9wdGlvbi52YWx1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc3ByZWFkLm9wdGlvbnNbb3B0aW9uLm5hbWVdID0gb3B0aW9uLnZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzcHJlYWQudW5iaW5kKEdDLlNwcmVhZC5TaGVldHMuRXZlbnRzLkFjdGl2ZVNoZWV0Q2hhbmdlZCk7XHJcbiAgICBzcHJlYWQuYmluZChHQy5TcHJlYWQuU2hlZXRzLkV2ZW50cy5BY3RpdmVTaGVldENoYW5nZWQsIGZ1bmN0aW9uIChlLCBhcmdzKSB7XHJcbiAgICAgIHNlbGYuY3VyU2hlZXQgPSBhcmdzLm5ld1NoZWV0Lm5hbWUoKTtcclxuICAgICAgc2VsZi5zZXRHcm91cChzZWxmLmN1clNoZWV0KTtcclxuICAgICAgc2VsZi5zZXRNdWx0aVNoZWV0c1ZhcmlibGUoKTtcclxuICAgICAgc2VsZi5pbml0UWRwVmlldygpO1xyXG4gICAgfSk7XHJcbiAgICBzcHJlYWQucmVzdW1lUGFpbnQoKTtcclxuICAgIHNwcmVhZC5yZXN1bWVFdmVudCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5pa55rOV5bey5bqf5byD77yM5bu66K6u5pu/5o2i5Li6aW5pdFFEUFZpZXfmlrnms5VcclxuICAgKiDliJ3lp4vljJbmn6Xor6Lnu5PmnpzpobXmjqfku7ZcclxuICAgKi9cclxuICBpbml0U3ByZWFkKHF1ZXJ5SWQ6IHN0cmluZywgc2NoZW1hSWQ6IHN0cmluZywgY29udHJvbFR5cGU/OiBhbnksIHFvTWFuYWdlckNvZGU/OiBhbnksIHBhZ2VJbmRleD86IGFueSwgcXVlcnlSZWxhdGl2ZVVybD86IGFueSwgZmlsdGVyQ29uZGl0aW9uPzogYW55LCBncm91cFR5cGU/OiBhbnksIHZvSWQ/OiBhbnksIGZyb21DYWNoZT86IGFueSwgaXNTY2hlbWFTZWxlY3RDaGFuZ2VkPzogYW55KSB7XHJcbiAgICBpZiAodGhpcy5jdXJTaGVldCAmJiB0aGlzLm11bHRpU2hlZXRzLmxlbmd0aCkge1xyXG4gICAgICB0aGlzLm11bHRpU2hlZXRzU2NoZW1hSWRzW3RoaXMuY3VyU2hlZXRdID0gc2NoZW1hSWQ7XHJcbiAgICAgIHRoaXMuc2V0TXVsdGlTaGVldHNWYXJpYmxlKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLnFkcFZpZXdSZW5kZXIoT2JqZWN0LmFzc2lnbih7IG11bHRpU2hlZXRzU2NoZW1hSWRzOiB0aGlzLm11bHRpU2hlZXRzU2NoZW1hSWRzLCBjdXJTaGVldDogdGhpcy5jdXJTaGVldCwgbXVsdGlTaGVldHM6IHRoaXMubXVsdGlTaGVldHMgfSwgeyBzY2hlbWFJZCwgcXVlcnlJZCwgc3ByZWFkOiB0aGlzLnNwcmVhZCwgY29udHJvbFR5cGUsIHFvTWFuYWdlckNvZGUsIHBhZ2VJbmRleCwgcXVlcnlSZWxhdGl2ZVVybCwgZmlsdGVyQ29uZGl0aW9uLCBmb3JtRGF0YTogdGhpcy5mb3JtRGF0YSwgZ3JvdXBUeXBlOiBncm91cFR5cGUsIHZvSWQ6IHZvSWQsIHFkcFZpZXc6IHRoaXMsIGZyb21DYWNoZSwgaXNTY2hlbWFTZWxlY3RDaGFuZ2VkLCBqb2ludHNlYXJjaEluZm9MaXN0OiB0aGlzLmpvaW50c2VhcmNoSW5mb0xpc3QgfSkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Yid5aeL5YyW5p+l6K+i57uT5p6c5o6n5Lu2XHJcbiAgICovXHJcbiAgcWRwVmlld1JlbmRlcihvcHRpb246IFJlbmRlck9wdGlvbikge1xyXG4gICAgaWYgKCFvcHRpb24ubG9hZGluZykge1xyXG4gICAgICBvcHRpb24ubG9hZGluZyA9IHRoaXMubG9hZFNlcnZpY2Uuc2hvdyh7IGNvbnRhaW5lcjogJ2JvZHknIH0pO1xyXG4gICAgfVxyXG4gICAgb3B0aW9uLnZvSWQgPSAhb3B0aW9uLnZvSWQgPyB0aGlzLnZvSWQgOiBvcHRpb24udm9JZDtcclxuICAgIG9wdGlvbi5ncm91cFR5cGUgPSAhb3B0aW9uLmdyb3VwVHlwZSA/IHRoaXMuZ3JvdXBUeXBlIDogb3B0aW9uLmdyb3VwVHlwZTtcclxuICAgIG9wdGlvbi5mcm9tQ2FjaGUgPSBvcHRpb24uZnJvbUNhY2hlID8gb3B0aW9uLmZyb21DYWNoZSA6IGZhbHNlO1xyXG4gICAgaWYgKG9wdGlvbi5maWx0ZXJDb25kaXRpb24pIHtcclxuICAgICAgdGhpcy5jb25kaXRpb25FeHByZXNzaW9uID0gb3B0aW9uLmZpbHRlckNvbmRpdGlvbjtcclxuICAgIH1cclxuICAgIGNvbnN0IHJlbmRlck9wdGlvbjogUmVuZGVyT3B0aW9uID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9uLCB7IGZvcm1EYXRhOiB0aGlzLmZvcm1EYXRhLCBzcHJlYWQ6IHRoaXMuc3ByZWFkLCBxZHBWaWV3OiB0aGlzIH0pO1xyXG4gICAgdGhpcy5yZW5kZXJTZXJ2aWNlLnJlbmRlcihyZW5kZXJPcHRpb24pO1xyXG4gICAgRXZlbnRCdXMucmVnaXN0ZXIodGhpcy5xdWVyeUlkICsgJ3NwcmVhZF9pbml0JywgdGhpcy5yZWdpc3RlU3ByZWFkQ29sdW1uV2lkdGhDaGFuZ2VkRXZlbnQuYmluZCh0aGlzKSwgdGhpcy5xdWVyeUlkKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaWueazleW3suW6n+W8g++8jOW7uuiuruabv+aNouS4umV4cG9ydOaWueazlVxyXG4gICAqIOWvvOWHukV4Y2VsXHJcbiAgICovXHJcbiAgZXhwb3J0RXhjZWwocXVlcnlJZDogc3RyaW5nLCBpZDogc3RyaW5nLCB0eXBlPzogYW55LCBwYWdlSW5kZXg/OiBhbnksIHFvTWFuYWdlckNvZGU/OiBhbnksIHF1ZXJ5UmVsYXRpdmVVcmw/OiBhbnksIGZpbHRlckNvbmRpdGlvbj86IGFueSwgZ3JvdXBUeXBlPzogYW55LCB2b0lkPzogYW55LCB0b3RhbENvdW50PzogYW55LCBleHBvcnRUeXBlPzogYW55KSB7XHJcbiAgICB0aGlzLmV4cG9ydChPYmplY3QuYXNzaWduKHsgbXVsdGlTaGVldHNTY2hlbWFJZHM6IHRoaXMubXVsdGlTaGVldHNTY2hlbWFJZHMsIGN1clNoZWV0OiB0aGlzLmN1clNoZWV0LCBtdWx0aVNoZWV0czogdGhpcy5tdWx0aVNoZWV0cyB9LCB7IHF1ZXJ5SWQsIHNjaGVtYUlkOiBpZCwgY29udHJvbFR5cGU6IHR5cGUsIHBhZ2VJbmRleCwgcW9NYW5hZ2VyQ29kZSwgcXVlcnlSZWxhdGl2ZVVybCwgZmlsdGVyQ29uZGl0aW9uLCBncm91cFR5cGUsIHZvSWQsIHRvdGFsQ291bnQsIGV4cG9ydFR5cGUgfSkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5a+85Ye6RXhjZWxcclxuICAgKiBAcGFyYW0gb3BpdG9uIOa4suafk+mFjee9rumhuVxyXG4gICAqL1xyXG4gIGV4cG9ydChvcHRpb246IFJlbmRlck9wdGlvbikge1xyXG4gICAgaWYgKHRoaXMuY29udHJvbFR5cGUgPT09ICdjcm9zc3RhYicpIHtcclxuICAgICAgb3B0aW9uLnRvdGFsQ291bnQgPSB0aGlzLnNwcmVhZC5nZXRBY3RpdmVTaGVldCgpLmdldFJvd0NvdW50KCk7XHJcbiAgICB9XHJcbiAgICBvcHRpb24udm9JZCA9IHRoaXMudm9JZCA/IHRoaXMudm9JZCA6IG9wdGlvbi52b0lkO1xyXG4gICAgb3B0aW9uLnF1ZXJ5SWQgPSB0aGlzLnF1ZXJ5SWQgPyB0aGlzLnF1ZXJ5SWQgOiBvcHRpb24ucXVlcnlJZDtcclxuICAgIG9wdGlvbi5ncm91cFR5cGUgPSB0aGlzLmdyb3VwVHlwZSA/IHRoaXMuZ3JvdXBUeXBlIDogb3B0aW9uLmdyb3VwVHlwZTtcclxuICAgIG9wdGlvbi5xb01hbmFnZXJDb2RlID0gdGhpcy5xb01hbmFnZXJDb2RlID8gdGhpcy5xb01hbmFnZXJDb2RlIDogb3B0aW9uLnFvTWFuYWdlckNvZGU7XHJcbiAgICB0aGlzLnJlbmRlclNlcnZpY2UuZXhwb3J0RGF0YShvcHRpb24pO1xyXG4gICAgLy8gdGhpcy5yZW5kZXJTZXJ2aWNlLmV4cG9ydERhdGEob3B0aW9uLnF1ZXJ5SWQsIG9wdGlvbi5zY2hlbWFJZCwgb3B0aW9uLmNvbnRyb2xUeXBlLCBvcHRpb24ucGFnZUluZGV4LCBvcHRpb24ucW9NYW5hZ2VyQ29kZSwgb3B0aW9uLnF1ZXJ5UmVsYXRpdmVVcmwsIG9wdGlvbi5maWx0ZXJDb25kaXRpb24sIG9wdGlvbi5ncm91cFR5cGUsIG9wdGlvbi52b0lkLCBvcHRpb24udG90YWxDb3VudCB8fCAxLCBvcHRpb24uZXhwb3J0VHlwZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmlrnms5Xlt7Llup/lvIPvvIzlu7rorq7mm7/mjaLkuLpwcmludOaWueazlVxyXG4gICAqIOaJk+WNsFBERlxyXG4gICAqL1xyXG4gIHBkZkV4cG9ydEV2ZW50KHF1ZXJ5SWQ6IHN0cmluZywgaWQ6IHN0cmluZywgdHlwZT86IGFueSwgcW9NYW5hZ2VyQ29kZT86IGFueSwgcHJpbnRJbnRlZ3JhdGlvbj86IGFueSwgcXVlcnlSZWxhdGl2ZVVybD86IGFueSwgZmlsdGVyQ29uZGl0aW9uPzogYW55LCBwYWdlSW5kZXg/OiBhbnksIGdyb3VwVHlwZT86IGFueSwgdm9JZD86IGFueSkge1xyXG4gICAgdGhpcy5wcmludChPYmplY3QuYXNzaWduKHsgbXVsdGlTaGVldHNTY2hlbWFJZHM6IHRoaXMubXVsdGlTaGVldHNTY2hlbWFJZHMsIGN1clNoZWV0OiB0aGlzLmN1clNoZWV0LCBtdWx0aVNoZWV0czogdGhpcy5tdWx0aVNoZWV0cyB9LCB7IHF1ZXJ5SWQsIHNjaGVtYUlkOiBpZCwgY29udHJvbFR5cGU6IHR5cGUsIHBhZ2VJbmRleCwgcW9NYW5hZ2VyQ29kZSwgcXVlcnlSZWxhdGl2ZVVybCwgcHJpbnRJbnRlZ3JhdGlvbiwgZmlsdGVyQ29uZGl0aW9uLCBncm91cFR5cGUsIHZvSWQgfSkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5omT5Y2wXHJcbiAgICogQHBhcmFtIG9wdGlvbiDmuLLmn5PphY3nva7poblcclxuICAgKi9cclxuICBwcmludChvcHRpb246IFJlbmRlck9wdGlvbikge1xyXG4gICAgb3B0aW9uLnZvSWQgPSB0aGlzLnZvSWQgPyB0aGlzLnZvSWQgOiBvcHRpb24udm9JZDtcclxuICAgIG9wdGlvbi5xdWVyeUlkID0gdGhpcy5xdWVyeUlkID8gdGhpcy5xdWVyeUlkIDogb3B0aW9uLnF1ZXJ5SWQ7XHJcbiAgICBvcHRpb24uZ3JvdXBUeXBlID0gdGhpcy5ncm91cFR5cGUgPyB0aGlzLmdyb3VwVHlwZSA6IG9wdGlvbi5ncm91cFR5cGU7XHJcbiAgICBvcHRpb24ucW9NYW5hZ2VyQ29kZSA9IHRoaXMucW9NYW5hZ2VyQ29kZSA/IHRoaXMucW9NYW5hZ2VyQ29kZSA6IG9wdGlvbi5xb01hbmFnZXJDb2RlO1xyXG4gICAgdGhpcy5yZW5kZXJTZXJ2aWNlLnBkZkV4cG9ydEV2ZW50KG9wdGlvbik7XHJcbiAgICAvLyB0aGlzLnJlbmRlclNlcnZpY2UucGRmRXhwb3J0RXZlbnQob3B0aW9uLnF1ZXJ5SWQsIG9wdGlvbi5zY2hlbWFJZCwgb3B0aW9uLmNvbnRyb2xUeXBlLCBvcHRpb24ucW9NYW5hZ2VyQ29kZSwgb3B0aW9uLnByaW50SW50ZWdyYXRpb24sIG9wdGlvbi5xdWVyeVJlbGF0aXZlVXJsLCBvcHRpb24uZmlsdGVyQ29uZGl0aW9uLCBvcHRpb24uZ3JvdXBUeXBlLCBvcHRpb24ucGFnZUluZGV4LCBvcHRpb24udm9JZCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmlrnms5Xlt7Llup/lvIPvvIzlu7rorq7mm7/mjaLkuLpwcmludFByZXZpZXcob3B0aW9uOiBSZW5kZXJPcHRpb24p5pa55rOVXHJcbiAgICog5omT5Y2w6aKE6KeIXHJcbiAgICovXHJcbiAgcHJpbnRQcmVWaWV3KHF1ZXJ5SWQ6IHN0cmluZywgaWQ6IHN0cmluZywgdHlwZT86IGFueSwgcW9NYW5hZ2VyQ29kZT86IGFueSwgcHJpbnRJbnRlZ3JhdGlvbj86IGFueSwgcXVlcnlSZWxhdGl2ZVVybD86IGFueSwgZmlsdGVyQ29uZGl0aW9uPzogYW55LCBwYWdlSW5kZXg/OiBhbnksIGdyb3VwVHlwZT86IGFueSwgdm9JZD86IGFueSkge1xyXG4gICAgY29uc3QgX3ZvSWQgPSB0aGlzLnZvSWQgPyB0aGlzLnZvSWQgOiB2b0lkO1xyXG4gICAgY29uc3QgX3F1ZXJ5SWQgPSB0aGlzLnF1ZXJ5SWQgPyB0aGlzLnF1ZXJ5SWQgOiBxdWVyeUlkO1xyXG4gICAgY29uc3QgX2dyb3VwVHlwZSA9IHRoaXMuZ3JvdXBUeXBlID8gdGhpcy5ncm91cFR5cGUgOiBncm91cFR5cGU7XHJcbiAgICBjb25zdCBfcW9NYW5hZ2VyQ29kZSA9IHRoaXMucW9NYW5hZ2VyQ29kZSA/IHRoaXMucW9NYW5hZ2VyQ29kZSA6IHFvTWFuYWdlckNvZGU7XHJcbiAgICB0aGlzLnJlbmRlclNlcnZpY2UucHJpbnRQcmVWaWV3KE9iamVjdC5hc3NpZ24oeyBtdWx0aVNoZWV0c1NjaGVtYUlkczogdGhpcy5tdWx0aVNoZWV0c1NjaGVtYUlkcywgY3VyU2hlZXQ6IHRoaXMuY3VyU2hlZXQsIG11bHRpU2hlZXRzOiB0aGlzLm11bHRpU2hlZXRzIH0sIHsgcXVlcnlJZDogX3F1ZXJ5SWQsIHNjaGVtYUlkOiBpZCwgY29udHJvbFR5cGU6IHR5cGUsIHFvTWFuYWdlckNvZGU6IF9xb01hbmFnZXJDb2RlLCBwcmludEludGVncmF0aW9uLCBxdWVyeVJlbGF0aXZlVXJsLCBmaWx0ZXJDb25kaXRpb24sIGdyb3VwVHlwZTogX2dyb3VwVHlwZSwgcGFnZUluZGV4LCB2b0lkOiBfdm9JZH0pKTtcclxuICAgIC8vIHRoaXMucmVuZGVyU2VydmljZS5wcmludFByZVZpZXcocXVlcnlJZCwgaWQsIHR5cGUsIHFvTWFuYWdlckNvZGUsIHByaW50SW50ZWdyYXRpb24sIHF1ZXJ5UmVsYXRpdmVVcmwsIGZpbHRlckNvbmRpdGlvbiwgZ3JvdXBUeXBlID8gZ3JvdXBUeXBlIDogdGhpcy5ncm91cFR5cGUsIHBhZ2VJbmRleCwgdm9JZCA/IHZvSWQgOiB0aGlzLnZvSWQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5omT5Y2w6aKE6KeIXHJcbiAgICogQHBhcmFtIG9wdGlvbiDmuLLmn5PphY3nva7poblcclxuICAgKi9cclxuICBwcmludFByZXZpZXcob3B0aW9uOiBSZW5kZXJPcHRpb24pIHtcclxuICAgIG9wdGlvbi5ncm91cFR5cGUgPSB0aGlzLmdyb3VwVHlwZSA/IHRoaXMuZ3JvdXBUeXBlIDogb3B0aW9uLmdyb3VwVHlwZTtcclxuICAgIG9wdGlvbi52b0lkID0gdGhpcy52b0lkID8gdGhpcy52b0lkIDogb3B0aW9uLnZvSWQ7XHJcbiAgICB0aGlzLnJlbmRlclNlcnZpY2UucHJpbnRQcmVWaWV3KG9wdGlvbik7XHJcbiAgICAvLyB0aGlzLnJlbmRlclNlcnZpY2UucHJpbnRQcmVWaWV3KG9wdGlvbi5xdWVyeUlkLCBvcHRpb24uc2NoZW1hSWQsIG9wdGlvbi5jb250cm9sVHlwZSwgb3B0aW9uLnFvTWFuYWdlckNvZGUsIG9wdGlvbi5wcmludEludGVncmF0aW9uLCBvcHRpb24ucXVlcnlSZWxhdGl2ZVVybCwgb3B0aW9uLmZpbHRlckNvbmRpdGlvbiwgb3B0aW9uLmdyb3VwVHlwZSwgb3B0aW9uLnBhZ2VJbmRleCwgb3B0aW9uLnZvSWQpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IFtdO1xyXG4gICAgZm9yIChjb25zdCBjaGFuZ2VOYW1lIGluIGNoYW5nZXMpIHtcclxuICAgICAgY29uc3QgbmV3VmFsdWUgPSBjaGFuZ2VzW2NoYW5nZU5hbWVdLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgaWYgKG5ld1ZhbHVlICE9PSBudWxsICYmIG5ld1ZhbHVlICE9PSB2b2lkIDApIHtcclxuICAgICAgICB0aGlzLnRhYklkID0gUnRmU2VydmljZXMuZ2V0VGFiSWQodGhpcy5xdWVyeUlkKTtcclxuICAgICAgICBzd2l0Y2ggKGNoYW5nZU5hbWUpIHtcclxuICAgICAgICAgIGNhc2UgJ2hvc3RTdHlsZSc6XHJcbiAgICAgICAgICAgIHRoaXMuc3R5bGUgPSBuZXdWYWx1ZTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc3ByZWFkKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5zcHJlYWQucmVmcmVzaCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnaG9zdENsYXNzJzpcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlICduYW1lJzpcclxuICAgICAgICAgICAgdGhpcy5zcHJlYWQubmFtZSA9IG5ld1ZhbHVlO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGNhc2UgJ2Zvcm1EYXRhJzpcclxuICAgICAgICAgICAgbmV3VmFsdWUuZHluYW1pY0NvbHMuZm9yRWFjaChjb2wgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbC5uYW1lID0gY29sLnRpdGxlO1xyXG4gICAgICAgICAgICAgIGNvbC5iaW5kRmllbGQgPSBjb2wuZmllbGQ7XHJcbiAgICAgICAgICAgICAgY29sLmNvbFdpZHRoID0gMTUwO1xyXG4gICAgICAgICAgICAgIGNvbC5hbGlnbiA9IDA7XHJcbiAgICAgICAgICAgICAgY29sLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgIGNvbC5pc0ZpeGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgY29sLmZvcm1hdFR5cGUgPSAwO1xyXG4gICAgICAgICAgICAgIGNvbC5mb3JtYXR0b3IgPSAnJztcclxuICAgICAgICAgICAgICBjb2wuc29ydCA9IDA7XHJcbiAgICAgICAgICAgICAgY29sLnBhZ2VBZ2dyZVRleHQgPSBudWxsO1xyXG4gICAgICAgICAgICAgIGNvbC5wYWdlQWdncmUgPSAwO1xyXG4gICAgICAgICAgICAgIGNvbC5pc0dyb3VwID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgY29sLmdyb3VwQWdncmVUZXh0ID0gJyc7XHJcbiAgICAgICAgICAgICAgY29sLmdyb3VwQWdncmUgPSAwO1xyXG4gICAgICAgICAgICAgIGNvbC50b3RhbEFnZ3JlVGV4dCA9ICcnO1xyXG4gICAgICAgICAgICAgIGNvbC50b3RhbEFnZ3JlID0gMDtcclxuICAgICAgICAgICAgICBjb2wubGV2ZWwgPSAxO1xyXG4gICAgICAgICAgICAgIGNvbC5jaGlsZExpc3QgPSBbXTtcclxuICAgICAgICAgICAgICBjb2wuZGltZW5zaW9uID0gMDtcclxuICAgICAgICAgICAgICBjb2wucm93Q29sb3IgPSBudWxsO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5mb3JtRGF0YSA9IG5ld1ZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLm5nT25EZXN0cm95KCk7XHJcbiAgICAgICAgICAgIHRoaXMuYWZ0ZXJWaWV3KCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnZ3JvdXBUeXBlJzpcclxuICAgICAgICAgICAgdGhpcy5ncm91cFR5cGUgPSBuZXdWYWx1ZTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlICdxdWVyeUlkJzpcclxuICAgICAgICAgICAgdGhpcy5xdWVyeUlkID0gbmV3VmFsdWU7XHJcbiAgICAgICAgICAgIFFEUENhY2hlVXRpbC5zZXRDYWNoZSh0aGlzLnRhYklkICsgdGhpcy5xdWVyeUlkICsgdGhpcy5jb250cm9sVHlwZSArICdxZHB2aWV3JywgdGhpcyk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnY29udHJvbFR5cGUnOlxyXG4gICAgICAgICAgICB0aGlzLmNvbnRyb2xUeXBlID0gbmV3VmFsdWU7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAncW9JZCc6XHJcbiAgICAgICAgICAgIHRoaXMucW9JZCA9IG5ld1ZhbHVlO1xyXG4gICAgICAgICAgICBTZXJ2aWNlc1V0aWxzLnNldFNlcnZpY2VzKHRoaXMudGFiSWQgKyAncW9JZCcsIHRoaXMucW9JZCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAncW9NYW5hZ2VyQ29kZSc6XHJcbiAgICAgICAgICBjYXNlICd2b0lkJzpcclxuICAgICAgICAgIGNhc2UgJ3F1ZXJ5UmVsYXRpdmVVcmwnOlxyXG4gICAgICAgICAgY2FzZSAndGVtcGxhdGVUeXBlJzpcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlICdtdWx0aVNoZWV0cyc6XHJcbiAgICAgICAgICAgIHRoaXMubXVsdGlTaGVldHMgPSBuZXdWYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy5zZXRHcm91cCh0aGlzLm11bHRpU2hlZXRzWzBdKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlICdsaWNlbnNlS2V5JzpcclxuICAgICAgICAgICAgaWYgKG5ld1ZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgR0MuU3ByZWFkLlNoZWV0cy5MaWNlbnNlS2V5ID0gbmV3VmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlICdpc0NvbW1vblFkcFZpZXdDb21wb25lbnQnOlxyXG4gICAgICAgICAgICB0aGlzLmlzQ29tbW9uUWRwVmlld0NvbXBvbmVudCA9IG5ld1ZhbHVlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc0NvbW1vblFkcFZpZXdDb21wb25lbnQpIHtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBvcHRpb25zLnB1c2goeyBuYW1lOiBjaGFuZ2VOYW1lLCB2YWx1ZTogbmV3VmFsdWUgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLnNwcmVhZE9wdGlvbnMgPSBvcHRpb25zO1xyXG4gICAgdGhpcy5zZXRTcHJlYWRPcHRpb25zKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIGlmICh0aGlzLnNwcmVhZCkge1xyXG4gICAgICB0aGlzLnNwcmVhZC5kZXN0cm95KCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvblJlc2l6ZWQoZXZlbnQ6IGFueSk6IHZvaWQge1xyXG4gICAgdGhpcy5zdHlsZS5oZWlnaHQgPSBldmVudC5uZXdIZWlnaHQgKyAncHgnO1xyXG4gICAgdGhpcy5zdHlsZS53aWR0aCA9IGV2ZW50Lm5ld1dpZHRoICsgJ3B4JztcclxuICB9XHJcblxyXG4gIHRvZ2dsZSgpIHtcclxuICAgIGxldCBpc0NvbXBhcmUgPSBmYWxzZTtcclxuICAgIGlmICh0aGlzLmlzT3Blbikge1xyXG4gICAgICBpZiAodGhpcy5jb250cm9sVHlwZSA9PT0gJ2Nyb3NzdGFiJykge1xyXG4gICAgICAgIHRoaXMuZGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudC5pc0NvbXBhcmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmRpbWVuc2lvblNldHRpbmdDb21wb25lbnQuc2VsZWN0ZWREaW1lc2lvbigpO1xyXG4gICAgICAgIGlzQ29tcGFyZSA9IHRoaXMuZGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudC5pc0NvbXBhcmU7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5jb2x1bW5zU2V0dGluZ0NvbXBvbmVudC5pc0NvbXBhcmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmNvbHVtbnNTZXR0aW5nQ29tcG9uZW50LnNlbGVjdGVkRGltZXNpb24oKTtcclxuICAgICAgICBpc0NvbXBhcmUgPSB0aGlzLmNvbHVtbnNTZXR0aW5nQ29tcG9uZW50LmlzQ29tcGFyZTtcclxuICAgICAgfVxyXG4gICAgICBpZiAodGhpcy5zY2hlbWFWYWx1ZSAmJiB0aGlzLnNjaGVtYVZhbHVlLmlzUHJlZmFiICE9PSAxICYmICFpc0NvbXBhcmUpIHtcclxuICAgICAgICB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlID0gdGhpcy5jb250cm9sVHlwZSA9PT0gJ2Nyb3NzdGFiJyA/IEpTT04uc3RyaW5naWZ5KHRoaXMuZGltZW5zaW9uU2V0dGluZ0NvbXBvbmVudC5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZSkgOiBKU09OLnN0cmluZ2lmeSh0aGlzLmNvbHVtbnNTZXR0aW5nQ29tcG9uZW50LnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlKTtcclxuICAgICAgICB0aGlzLnNjaGVtYU1hbmFnZXIuc2F2ZVNjaGVtYSh7ICdzY2hlbWEnOiBKU09OLnN0cmluZ2lmeSh0aGlzLnNjaGVtYVZhbHVlKSwgZ3JvdXBUeXBlOiB0aGlzLmdyb3VwVHlwZSB9LCAnJykuc3Vic2NyaWJlKCgpID0+IHsgfSwgKGVycm9yOiBhbnkpID0+IHtcclxuICAgICAgICAgIHRoaXMuZm9ybUVycm9yU2VydmljZS5leGNlcHRpb24oZXJyb3IuTWVzc2FnZSwgZXJyb3IpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUgPSBKU09OLnBhcnNlKHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLmlzT3BlbiA9ICF0aGlzLmlzT3BlbjtcclxuICB9XHJcblxyXG4gIHNldEdyb3VwKHNoZWV0TmFtZTogYW55KSB7XHJcbiAgICB0aGlzLmN1clNoZWV0ID0gc2hlZXROYW1lO1xyXG4gICAgaWYgKHRoaXMuZ3JvdXBUeXBlKSB7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tdWx0aVNoZWV0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHRoaXMuZ3JvdXBUeXBlID0gdGhpcy5ncm91cFR5cGUucmVwbGFjZSh0aGlzLm11bHRpU2hlZXRzW2ldLCBcIlwiKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmdyb3VwVHlwZSArPSBzaGVldE5hbWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmdyb3VwVHlwZSA9IHNoZWV0TmFtZTtcclxuICAgIH1cclxuICAgIHRoaXMuc2hlZXRDaGFuZ2VkLm5leHQodGhpcy5ncm91cFR5cGUpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBvbkRvY3VtZW50Q2xpY2soZTogYW55KTogdm9pZCB7XHJcbiAgICBpZiAoZS50YXJnZXQudGFnTmFtZSA9PT0gJ0NBTlZBUycpIHtcclxuICAgICAgdGhpcy5pc09wZW4gPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBoYW5kbGVDcm9zc3RhYlBhZ2VDaGFuZ2UocGFnZUluZGV4OiBhbnksIHBhZ2VTaXplOiBhbnkpIHtcclxuICAgIHRoaXMuc2hlZXQgPSB0aGlzLnNwcmVhZC5nZXRBY3RpdmVTaGVldCgpO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNoZWV0LmdldFJvd0NvdW50KCk7IGkrKykge1xyXG4gICAgICBpZiAoaSA+PSAocGFnZUluZGV4IC0gMSkgKiBwYWdlU2l6ZSAmJiBpIDwgcGFnZUluZGV4ICogcGFnZVNpemUpIHtcclxuICAgICAgICB0aGlzLnNoZWV0LnNldFJvd1Zpc2libGUoaSwgdHJ1ZSwgR0MuU3ByZWFkLlNoZWV0cy5TaGVldEFyZWEudmlld3BvcnQpO1xyXG4gICAgICAgIHRoaXMuc2hlZXQuc2hvd1JvdyhpLCBHQy5TcHJlYWQuU2hlZXRzLlZlcnRpY2FsUG9zaXRpb24uYm90dG9tKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnNoZWV0LnNldFJvd1Zpc2libGUoaSwgZmFsc2UsIEdDLlNwcmVhZC5TaGVldHMuU2hlZXRBcmVhLnZpZXdwb3J0KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaGFuZGxlQ29udGV4dE1lbnUoJGV2ZW50KSB7XHJcbiAgICBpZiAoJ2xpc3QnID09PSB0aGlzLmNvbnRyb2xUeXBlLnRvTG93ZXJDYXNlKCkpIHtcclxuICAgICAgbGV0IHggPSAwLCB5ID0gMDtcclxuICAgICAgbGV0IHFkcHZpZXdOYXRpdmUgPSB0aGlzLnNoZWV0RWwubmF0aXZlRWxlbWVudDtcclxuICAgICAgd2hpbGUgKHFkcHZpZXdOYXRpdmUpIHtcclxuICAgICAgICB4ICs9IHFkcHZpZXdOYXRpdmUub2Zmc2V0TGVmdDtcclxuICAgICAgICB5ICs9IHFkcHZpZXdOYXRpdmUub2Zmc2V0VG9wO1xyXG4gICAgICAgIHFkcHZpZXdOYXRpdmUgPSBxZHB2aWV3TmF0aXZlLm9mZnNldFBhcmVudDtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgYWN0aXZlU2hlZXQgPSB0aGlzLnNwcmVhZC5nZXRBY3RpdmVTaGVldCgpO1xyXG4gICAgICBjb25zdCBjb2xIZWFkZXIgPSBHQy5TcHJlYWQuU2hlZXRzLlNoZWV0QXJlYS5jb2xIZWFkZXI7XHJcbiAgICAgIGNvbnN0IHRhcmdldCA9IGFjdGl2ZVNoZWV0LmhpdFRlc3QoJGV2ZW50LmNsaWVudFggLSB4LCAkZXZlbnQuY2xpZW50WSAtIHkpO1xyXG4gICAgICBpZiAodGFyZ2V0LmhpdFRlc3RUeXBlICE9PSBjb2xIZWFkZXIgfHwgdGFyZ2V0LmNvbCA9PT0gdW5kZWZpbmVkIHx8IHRhcmdldC5yb3cgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgaGVhZGVyUm93Q291bnQgPSBhY3RpdmVTaGVldC5nZXRSb3dDb3VudChjb2xIZWFkZXIpO1xyXG4gICAgICBjb25zdCBzcGFuID0gYWN0aXZlU2hlZXQuZ2V0U3Bhbih0YXJnZXQucm93LCB0YXJnZXQuY29sLCBjb2xIZWFkZXIpO1xyXG4gICAgICAvLyDliKTmlq3lpJrnuqfooajlpLTnmoTmg4XlhrXkuIvvvIzlj6rlpITnkIbmnIDlrZDpm4booajlpLRcclxuICAgICAgaWYgKHNwYW4gJiYgKHRhcmdldC5yb3cgKyBzcGFuLnJvd0NvdW50KSA8IGhlYWRlclJvd0NvdW50KSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuY3VycmVudENvbEluZGV4ID0gdGFyZ2V0LmNvbDtcclxuICAgICAgdGhpcy5pbml0Q29sR3JvdXBBZ2dyZSh0aGlzLmN1cnJlbnRDb2xJbmRleCk7XHJcblxyXG4gICAgICB0aGlzLmhlYWRlck1lbnVEaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgdGhpcy5oZWFkZXJNZW51VG9wID0gJGV2ZW50LmNsaWVudFk7XHJcbiAgICAgIHRoaXMuaGVhZGVyTWVudUxlZnQgPSAkZXZlbnQuY2xpZW50WDtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIGhhbmRsZUlzR3JvdXBDbGljaygpIHtcclxuICAgIGlmICh0aGlzLmNvbElzR3JvdXApIHtcclxuICAgICAgdGhpcy5ncm91cFNlbGVjdFZhbHVlID0gdGhpcy5hZ2dyZURhdGFbMF0udmFsdWU7XHJcbiAgICAgIHRoaXMuZ3JvdXBUZXh0ID0gJyc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoYW5kbGVTYXZlQ2xpY2soKSB7XHJcbiAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgIHRyeSB7XHJcbiAgICAgIGlmICh0aGlzLnNjaGVtYVZhbHVlICYmIHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUgJiYgdGhpcy5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZS5jb2x1bW5PcHRpb24gJiYgdGhpcy5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZS5jb2x1bW5PcHRpb24uY29sTGlzdCkge1xyXG4gICAgICAgIGlmICh0aGlzLnNjaGVtYVZhbHVlICYmIHRoaXMuc2NoZW1hVmFsdWUuaXNQcmVmYWIgPT09IDEpIHtcclxuICAgICAgICAgIHRoaXMubXNnU2VydmljZS5pbmZvKHRoaXMubG9jYWxpemVTZXJ2aWNlLmdldFZhbHVlKCdzcHJlYWQubWVzc2FnZS52YWxpZGF0ZS5zb3J0JykpO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBjb2xMaXN0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlLmNvbHVtbk9wdGlvbi5jb2xMaXN0KSk7XHJcbiAgICAgICAgY29uc3QgcGFyYW1zID0geyBpbmRleDogdGhpcy5jdXJyZW50Q29sSW5kZXgsIGNvbEluZGV4OiAwLCB0eXBlOiAnZWRpdCcgfTtcclxuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWZvci1vZlxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29sTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgdGhpcy5yZWN1cnNpdmVDb2x1bW5Tb3J0KGNvbExpc3RbaV0sIG51bGwsIHBhcmFtcyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlLmNvbHVtbk9wdGlvbi5jb2xMaXN0ID0gY29sTGlzdDtcclxuICAgICAgICB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlID0gSlNPTi5zdHJpbmdpZnkodGhpcy5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZSk7XHJcbiAgICAgICAgdGhpcy5zY2hlbWFNYW5hZ2VyLnNhdmVTY2hlbWEoeyBzY2hlbWE6IEpTT04uc3RyaW5naWZ5KHRoaXMuc2NoZW1hVmFsdWUpLCBncm91cFR5cGU6IHRoaXMuZ3JvdXBUeXBlIH0sICcnKS5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcbiAgICAgICAgICBzZWxmLmluaXRRZHBWaWV3KCk7XHJcbiAgICAgICAgICBzZWxmLmN1cnJlbnRDb2xJbmRleCA9IDA7XHJcbiAgICAgICAgICBzZWxmLmhlYWRlck1lbnVEaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIH0sIChlcnJvcjogYW55KSA9PiB7XHJcbiAgICAgICAgICB0aGlzLmZvcm1FcnJvclNlcnZpY2UuZXhjZXB0aW9uKGVycm9yLk1lc3NhZ2UsIGVycm9yKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZSkgeyBzZWxmLmN1cnJlbnRDb2xJbmRleCA9IDA7IH1cclxuICB9XHJcblxyXG4gIGhhbmRsZUNsZWFyU29ydCgpIHtcclxuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgdHJ5IHtcclxuICAgICAgaWYgKHRoaXMuc2NoZW1hVmFsdWUgJiYgdGhpcy5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZSAmJiB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlLmNvbHVtbk9wdGlvbiAmJiB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlLmNvbHVtbk9wdGlvbi5jb2xMaXN0ICYmIHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUuY29sdW1uT3B0aW9uLmNvbExpc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuc2NoZW1hVmFsdWUgJiYgdGhpcy5zY2hlbWFWYWx1ZS5pc1ByZWZhYiA9PT0gMSkge1xyXG4gICAgICAgICAgdGhpcy5tc2dTZXJ2aWNlLmluZm8odGhpcy5sb2NhbGl6ZVNlcnZpY2UuZ2V0VmFsdWUoJ3NwcmVhZC5tZXNzYWdlLnZhbGlkYXRlLnNvcnQnKSk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGNvbExpc3QgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUuY29sdW1uT3B0aW9uLmNvbExpc3QpKTtcclxuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWZvci1vZlxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29sTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgdGhpcy5yZWN1cnNpdmVDbGVhckNvbHVtblNvcnQoY29sTGlzdFtpXSwgbnVsbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlLmNvbHVtbk9wdGlvbi5jb2xMaXN0ID0gY29sTGlzdDtcclxuICAgICAgICB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlID0gSlNPTi5zdHJpbmdpZnkodGhpcy5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZSk7XHJcbiAgICAgICAgdGhpcy5zY2hlbWFNYW5hZ2VyLnNhdmVTY2hlbWEoeyBzY2hlbWE6IEpTT04uc3RyaW5naWZ5KHRoaXMuc2NoZW1hVmFsdWUpLCBncm91cFR5cGU6IHRoaXMuZ3JvdXBUeXBlIH0sICcnKS5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcbiAgICAgICAgICBjb25zdCByZW5kZXJPcHRpb246IFJlbmRlck9wdGlvbiA9IE9iamVjdC5hc3NpZ24oeyBtdWx0aVNoZWV0c1NjaGVtYUlkczogdGhpcy5tdWx0aVNoZWV0c1NjaGVtYUlkcywgY3VyU2hlZXQ6IHRoaXMuY3VyU2hlZXQsIG11bHRpU2hlZXRzOiB0aGlzLm11bHRpU2hlZXRzIH0sIHsgc2NoZW1hSWQ6IHRoaXMuc2NoZW1hVmFsdWUuaWQsIHF1ZXJ5SWQ6IHNlbGYucXVlcnlJZCwgY29udHJvbFR5cGU6IHNlbGYuY29udHJvbFR5cGUsIHFvTWFuYWdlckNvZGU6IHNlbGYucW9NYW5hZ2VyQ29kZSwgcGFnZUluZGV4OiAwLCBxdWVyeVJlbGF0aXZlVXJsOiBzZWxmLnF1ZXJ5UmVsYXRpdmVVcmwsIGZpbHRlckNvbmRpdGlvbjogc2VsZi5jb25kaXRpb25FeHByZXNzaW9uLCBncm91cFR5cGU6IHNlbGYuZ3JvdXBUeXBlLCB2b0lkOiBzZWxmLnZvSWQsIGpvaW50c2VhcmNoSW5mb0xpc3Q6IHNlbGYuam9pbnRzZWFyY2hJbmZvTGlzdCB9KTtcclxuICAgICAgICAgIHNlbGYucWRwVmlld1JlbmRlcihyZW5kZXJPcHRpb24pO1xyXG4gICAgICAgICAgc2VsZi5jdXJyZW50Q29sSW5kZXggPSAwO1xyXG4gICAgICAgICAgc2VsZi5oZWFkZXJNZW51RGlzcGxheSA9ICdub25lJztcclxuICAgICAgICB9LCAoZXJyb3I6IGFueSkgPT4ge1xyXG4gICAgICAgICAgdGhpcy5mb3JtRXJyb3JTZXJ2aWNlLmV4Y2VwdGlvbihlcnJvci5NZXNzYWdlLCBlcnJvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgc2VsZi5jdXJyZW50Q29sSW5kZXggPSAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gQEhvc3RMaXN0ZW5lcignY2xpY2snKVxyXG4gIGhhbmRsZUJsdXIoJGV2ZW50KSB7XHJcbiAgICB0aGlzLmhlYWRlck1lbnVEaXNwbGF5ID0gJ25vbmUnO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0Q29sR3JvdXBBZ2dyZShpbmRleDogYW55KSB7XHJcbiAgICBpZiAodGhpcy5zY2hlbWFWYWx1ZSAmJiB0aGlzLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlICYmIHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUuY29sdW1uT3B0aW9uXHJcbiAgICAgICYmIHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUuY29sdW1uT3B0aW9uLmNvbExpc3QgJiYgdGhpcy5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZS5jb2x1bW5PcHRpb24uY29sTGlzdC5sZW5ndGggPiBpbmRleCkge1xyXG4gICAgICBjb25zdCBwYXJhbXMgPSB7IGluZGV4OiB0aGlzLmN1cnJlbnRDb2xJbmRleCwgY29sSW5kZXg6IDAsIHR5cGU6ICdpbml0JyB9O1xyXG4gICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWZvci1vZlxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUuY29sdW1uT3B0aW9uLmNvbExpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB0aGlzLnJlY3Vyc2l2ZUNvbHVtblNvcnQodGhpcy5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZS5jb2x1bW5PcHRpb24uY29sTGlzdFtpXSwgbnVsbCwgcGFyYW1zKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSByZWN1cnNpdmVDb2x1bW5Tb3J0KGNvbCwgY29sTGlzdCwgcGFyYW1zKSB7XHJcbiAgICBpZiAoY29sTGlzdCA9PSBudWxsKSB7XHJcbiAgICAgIGlmIChjb2wuY2hpbGRMaXN0ICYmIGNvbC5jaGlsZExpc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgdGhpcy5yZWN1cnNpdmVDb2x1bW5Tb3J0KG51bGwsIGNvbC5jaGlsZExpc3QsIHBhcmFtcyk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKHBhcmFtcy5jb2xJbmRleCA9PT0gcGFyYW1zLmluZGV4KSB7XHJcbiAgICAgICAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdpbml0Jykge1xyXG4gICAgICAgICAgICB0aGlzLmNvbElzR3JvdXAgPSBjb2wuaXNHcm91cDtcclxuICAgICAgICAgICAgdGhpcy5ncm91cFRleHQgPSBjb2wuZ3JvdXBBZ2dyZVRleHQgfHwgJyc7XHJcbiAgICAgICAgICAgIHRoaXMuZ3JvdXBTZWxlY3RWYWx1ZSA9IGNvbC5ncm91cEFnZ3JlO1xyXG4gICAgICAgICAgfSBlbHNlIGlmIChwYXJhbXMudHlwZSA9PT0gJ2VkaXQnKSB7XHJcbiAgICAgICAgICAgIGNvbC5pc0dyb3VwID0gdGhpcy5jb2xJc0dyb3VwO1xyXG4gICAgICAgICAgICBjb2wuZ3JvdXBBZ2dyZVRleHQgPSB0aGlzLmdyb3VwVGV4dCB8fCAnJztcclxuICAgICAgICAgICAgY29sLmdyb3VwQWdncmUgPSB0aGlzLmdyb3VwU2VsZWN0VmFsdWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHBhcmFtcy5jb2xJbmRleCsrO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWZvci1vZlxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbExpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAoY29sTGlzdFtpXS5jaGlsZExpc3QgJiYgY29sTGlzdFtpXS5jaGlsZExpc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgICB0aGlzLnJlY3Vyc2l2ZUNvbHVtblNvcnQobnVsbCwgY29sTGlzdFtpXS5jaGlsZExpc3QsIHBhcmFtcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmIChwYXJhbXMuY29sSW5kZXggPT09IHBhcmFtcy5pbmRleCkge1xyXG4gICAgICAgICAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdpbml0Jykge1xyXG4gICAgICAgICAgICAgIHRoaXMuY29sSXNHcm91cCA9IGNvbExpc3RbaV0uaXNHcm91cDtcclxuICAgICAgICAgICAgICB0aGlzLmdyb3VwVGV4dCA9IGNvbExpc3RbaV0uZ3JvdXBBZ2dyZVRleHQgfHwgJyc7XHJcbiAgICAgICAgICAgICAgdGhpcy5ncm91cFNlbGVjdFZhbHVlID0gY29sTGlzdFtpXS5ncm91cEFnZ3JlO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBhcmFtcy50eXBlID09PSAnZWRpdCcpIHtcclxuICAgICAgICAgICAgICBjb2xMaXN0W2ldLmlzR3JvdXAgPSB0aGlzLmNvbElzR3JvdXA7XHJcbiAgICAgICAgICAgICAgY29sTGlzdFtpXS5ncm91cEFnZ3JlVGV4dCA9IHRoaXMuZ3JvdXBUZXh0IHx8ICcnO1xyXG4gICAgICAgICAgICAgIGNvbExpc3RbaV0uZ3JvdXBBZ2dyZSA9IHRoaXMuZ3JvdXBTZWxlY3RWYWx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcGFyYW1zLmNvbEluZGV4Kys7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHJlY3Vyc2l2ZUNsZWFyQ29sdW1uU29ydChjb2wsIGNvbExpc3QpIHtcclxuICAgIGlmIChjb2xMaXN0ID09IG51bGwpIHtcclxuICAgICAgaWYgKGNvbC5jaGlsZExpc3QgJiYgY29sLmNoaWxkTGlzdC5sZW5ndGgpIHtcclxuICAgICAgICB0aGlzLnJlY3Vyc2l2ZUNsZWFyQ29sdW1uU29ydChudWxsLCBjb2wuY2hpbGRMaXN0KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb2xbJ3NvcnQnXSA9IDA7XHJcbiAgICAgICAgY29sWydzb3J0SW5kZXgnXSA9IDA7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpwcmVmZXItZm9yLW9mXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29sTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChjb2xMaXN0W2ldLmNoaWxkTGlzdCAmJiBjb2xMaXN0W2ldLmNoaWxkTGlzdC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucmVjdXJzaXZlQ2xlYXJDb2x1bW5Tb3J0KG51bGwsIGNvbExpc3RbaV0uY2hpbGRMaXN0KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29sTGlzdFtpXVsnc29ydCddID0gMDtcclxuICAgICAgICAgIGNvbExpc3RbaV1bJ3NvcnRJbmRleCddID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgcmVnaXN0ZVNwcmVhZENvbHVtbldpZHRoQ2hhbmdlZEV2ZW50KCkge1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICB0aGlzLnNoZWV0ID0gdGhpcy5zcHJlYWQuZ2V0QWN0aXZlU2hlZXQoKTtcclxuICAgIHNlbGYuc2hlZXQuYmluZChHQy5TcHJlYWQuU2hlZXRzLkV2ZW50cy5Db2x1bW5XaWR0aENoYW5nZWQsIGZ1bmN0aW9uIChzZW5kZXIsIGluZm8pIHtcclxuICAgICAgY29uc3QgaW5kZXggPSBpbmZvLmNvbExpc3RbMF07XHJcbiAgICAgIGNvbnN0IGNvbFcgPSBpbmZvLnNoZWV0LmdldENvbHVtbldpZHRoKGluZm8uY29sTGlzdFswXSk7XHJcbiAgICAgIGlmIChzZWxmLnNjaGVtYVZhbHVlICYmIHNlbGYuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUgJiYgc2VsZi5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZS5jb2x1bW5PcHRpb25cclxuICAgICAgICAmJiBzZWxmLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlLmNvbHVtbk9wdGlvbi5jb2xMaXN0ICYmIHNlbGYuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUuY29sdW1uT3B0aW9uLmNvbExpc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgaWYgKHNlbGYuc2NoZW1hVmFsdWUgJiYgc2VsZi5zY2hlbWFWYWx1ZS5pc1ByZWZhYiA9PT0gMSkge1xyXG4gICAgICAgICAgc2VsZi5tc2dTZXJ2aWNlLmluZm8oc2VsZi5sb2NhbGl6ZVNlcnZpY2UuZ2V0VmFsdWUoJ3NwcmVhZC5tZXNzYWdlLnZhbGlkYXRlLnNvcnQnKSk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBjb2xMaXN0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShzZWxmLnNjaGVtYVZhbHVlLnNjaGVtYVZhbHVlLmNvbHVtbk9wdGlvbi5jb2xMaXN0KSk7XHJcbiAgICAgICAgY29uc3QgcGFyYW1zID0geyBpbmRleDogaW5kZXgsIGNvbEluZGV4OiAwLCBjb2xXaWR0aDogY29sVyB9O1xyXG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpwcmVmZXItZm9yLW9mXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2xMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICBzZWxmLnJlY3Vyc2l2ZUNvbHVtbldpZHRoQ2hhbmdlZChjb2xMaXN0W2ldLCBudWxsLCBwYXJhbXMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc2VsZi5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZS5jb2x1bW5PcHRpb24uY29sTGlzdCA9IGNvbExpc3Q7XHJcbiAgICAgICAgc2VsZi5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZSA9IEpTT04uc3RyaW5naWZ5KHNlbGYuc2NoZW1hVmFsdWUuc2NoZW1hVmFsdWUpO1xyXG4gICAgICAgIHNlbGYuc2NoZW1hTWFuYWdlci5zYXZlU2NoZW1hKHsgc2NoZW1hOiBKU09OLnN0cmluZ2lmeShzZWxmLnNjaGVtYVZhbHVlKSwgZ3JvdXBUeXBlOiB0aGlzLmdyb3VwVHlwZSB9LCAnJykuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG4gICAgICAgICAgc2VsZi5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZSA9IEpTT04ucGFyc2Uoc2VsZi5zY2hlbWFWYWx1ZS5zY2hlbWFWYWx1ZSk7XHJcbiAgICAgICAgfSwgKGVycm9yOiBhbnkpID0+IHtcclxuICAgICAgICAgIHNlbGYuZm9ybUVycm9yU2VydmljZS5leGNlcHRpb24oZXJyb3IuTWVzc2FnZSwgZXJyb3IpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgcmVjdXJzaXZlQ29sdW1uV2lkdGhDaGFuZ2VkKGNvbCwgY29sTGlzdCwgcGFyYW1zKSB7XHJcbiAgICBpZiAoY29sTGlzdCA9PSBudWxsKSB7XHJcbiAgICAgIGlmIChjb2wuY2hpbGRMaXN0ICYmIGNvbC5jaGlsZExpc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgdGhpcy5yZWN1cnNpdmVDb2x1bW5XaWR0aENoYW5nZWQobnVsbCwgY29sLmNoaWxkTGlzdCwgcGFyYW1zKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZiAocGFyYW1zLmNvbEluZGV4ID09PSBwYXJhbXMuaW5kZXgpIHtcclxuICAgICAgICAgIGNvbC5jb2xXaWR0aCA9IHBhcmFtcy5jb2xXaWR0aDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcGFyYW1zLmNvbEluZGV4Kys7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpwcmVmZXItZm9yLW9mXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29sTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChjb2xMaXN0W2ldLmNoaWxkTGlzdCAmJiBjb2xMaXN0W2ldLmNoaWxkTGlzdC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucmVjdXJzaXZlQ29sdW1uV2lkdGhDaGFuZ2VkKG51bGwsIGNvbExpc3RbaV0uY2hpbGRMaXN0LCBwYXJhbXMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpZiAocGFyYW1zLmNvbEluZGV4ID09PSBwYXJhbXMuaW5kZXgpIHtcclxuICAgICAgICAgICAgY29sTGlzdFtpXS5jb2xXaWR0aCA9IHBhcmFtcy5jb2xXaWR0aDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHBhcmFtcy5jb2xJbmRleCsrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=