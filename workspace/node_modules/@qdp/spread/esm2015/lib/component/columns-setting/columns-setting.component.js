/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Input, LOCALE_ID } from '@angular/core';
import { FormErrorService } from '@farris/command-services';
import { MessagerService } from '@farris/ui-messager';
import { EventBus, JSONUtils, RtfServices, SchemaManagerService } from '@qdp/common';
import { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';
import { filter } from 'lodash-es';
import { RenderService } from '../../service/render/render.service';
export class ColumnsSettingComponent {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        this.injector = injector;
        this.hideColCache = []; // 隐藏列
        // 隐藏列
        this.showColCache = []; // 显示列
        // 显示列
        this.groupColCache = []; // 分组列
        // 分组列
        this.allColCache = []; // 全部列
        // 全部列
        this.searchText = '';
        this.isCompare = false;
        this.groupIcon = '<span class="k-icon k-i-search"></span>';
        this.lists = [];
        this.listsCache = [];
        this.multiSheetsSchemaIds = {};
        this.models = {
            selected: null,
            lists: this.lists
        };
        this.formInline = true;
        this.isOrNotPaging = true;
        // formatTypeData: any = [
        //   { name: '请选择', value: 0 },
        //   { name: '数字', value: 1 },
        //   { name: '日期', value: 2 },
        //   { name: '逻辑', value: 3 }
        // ];
        // formatTypeSelectValue: any = this.formatTypeData[0].value;
        // formatText = '';
        this.aggreData = [
            { name: '请选择', value: 0 },
            { name: '合计', value: 1 },
            { name: '最小值', value: 2 },
            { name: '最大值', value: 3 },
            { name: '计数', value: 4 },
            { name: '平均值', value: 5 }
        ];
        this.pageSelectValue = this.aggreData[0].value;
        this.pageText = '';
        this.colIsGroup = false;
        this.groupSelectValue = this.aggreData[0].value;
        this.groupSubSelectValue = this.aggreData[0].value;
        this.groupText = '';
        this.totalSelectValue = this.aggreData[0].value;
        this.totalText = '';
        this.currentColIndex = 0;
        this.enumType = [
            { name: '索引', value: '0' },
            { name: '编号', value: '1' },
            { name: '名称', value: '2' }
        ];
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.renderService = this.injector.get(RenderService);
            this.msgService = this.injector.get(MessagerService);
            this.formErrorService = this.injector.get(FormErrorService);
            this.schemaManagerService = this.injector.get(SchemaManagerService);
            this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;
            this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE;
            this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');
            this.enumType = this.localizeService.getValue('ideCmp.schemaManager.columnOption.enumType');
        }
        this.initLists();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const eventId = RtfServices.getTabId(this.queryId);
        EventBus.register('pagingModeChanges', this.handlePagingModeChanged.bind(this), eventId + 'columnsSetting');
        EventBus.register('schemaValueChanged', this.handleSchemaValueChanged.bind(this), eventId + 'columnsSetting');
    }
    /**
     * @return {?}
     */
    ngOnDestroy() { }
    /**
     * @private
     * @return {?}
     */
    initLists() {
        this.lists = [];
        for (let i = 0; i < 3; i++) {
            this.lists.push({
                name: this.localizeService.getValue('spread.crossTable.columnSetting')[i],
                value: []
            });
        }
    }
    /**
     * 初始化交叉表维度设置
     * @return {?}
     */
    initCrosstab() {
        // this.renderService.renderObject.currentSchemaValueChanger.subscribe((schemaValue: any) => {
        // });
    }
    /**
     * @private
     * @param {?} schemaValue
     * @return {?}
     */
    handleSchemaValueChanged(schemaValue) {
        if (schemaValue) {
            this.schemaValue = schemaValue;
            if (schemaValue.id === 1 || schemaValue.id === '1') {
                this.lists[0].value = [];
                this.listsCache = [];
                this.lists[1].value = [];
                this.lists[2].value = [];
                return;
            }
            if (this.controlType !== 'crosstab') {
                this.colList = schemaValue.schemaValue.columnOption.colList;
                if (this.colList) {
                    this.hideColCache = []; // 隐藏列
                    this.showColCache = []; // 显示列
                    this.groupColCache = []; // 分组列
                    this.allColCache = []; // 全部列
                    for (let i = 0; i < this.colList.length; i++) {
                        this.getSubColumns(this.colList[i], null, '');
                    }
                    setTimeout((/**
                     * @return {?}
                     */
                    () => {
                        this.lists[0].value = this.hideColCache;
                        this.listsCache = this.hideColCache;
                        this.lists[1].value = this.showColCache;
                        this.lists[2].value = this.groupColCache;
                    }));
                }
            }
        }
    }
    /**
     * @private
     * @param {?} col
     * @param {?} colList
     * @param {?} pid
     * @return {?}
     */
    getSubColumns(col, colList, pid) {
        if (col) {
            col['id'] = EventBus.guid();
            col['pid'] = pid;
            /** @type {?} */
            const pcol = JSON.parse(JSON.stringify(col));
            pcol.childList = [];
            this.allColCache.push(pcol);
            if (col.childList && col.childList.length) {
                this.getSubColumns(null, col.childList, col['id']);
            }
            else {
                if (col.isGroup) {
                    this.groupColCache.push(col);
                }
                else if (col.visible) {
                    this.showColCache.push(col);
                }
                else {
                    this.hideColCache.push(col);
                }
            }
        }
        else {
            for (let i = 0; i < colList.length; i++) {
                colList[i]['id'] = EventBus.guid();
                colList[i]['pid'] = pid;
                /** @type {?} */
                const pcol = JSON.parse(JSON.stringify(colList[i]));
                pcol.childList = [];
                this.allColCache.push(pcol);
                if (colList[i].childList && colList[i].childList.length) {
                    this.getSubColumns(null, colList[i].childList, colList[i]['id']);
                }
                else {
                    if (colList[i].isGroup) {
                        this.groupColCache.push(colList[i]);
                    }
                    else if (colList[i].visible) {
                        this.showColCache.push(colList[i]);
                    }
                    else {
                        this.hideColCache.push(colList[i]);
                    }
                }
            }
        }
    }
    /**
     * @param {?} index
     * @param {?} list
     * @return {?}
     */
    moved(index, list) {
        list.splice(index, 1);
        this.selectedDimesion();
        if (this.schemaValue) {
            if (this.schemaValue.isProtected === 1 || this.schemaValue.isProtected === '1') {
                this.msgService.info(this.localizeService.getValue('ideCmp.schemaManager.message.validate.isProtected'));
                return;
            }
            this.schemaValue.schemaValue = JSON.stringify(this.schemaValue.schemaValue);
            this.schemaManagerService.saveSchema({ 'schema': JSON.stringify(this.schemaValue) }, this.queryRelativeUrl).subscribe((/**
             * @return {?}
             */
            () => {
                this.renderService.render({ multiSheetsSchemaIds: this.multiSheetsSchemaIds, curSheet: this.curSheet, multiSheets: this.multiSheets, schemaId: this.schemaValue.id, queryId: this.queryId, spread: this.spread, controlType: this.controlType, qoManagerCode: this.qoManagerCode, queryRelativeUrl: this.queryRelativeUrl, schemaValue: this.schemaValue, filterCondition: this.conditionExpression, groupType: this.groupType, voId: this.voId, jointsearchInfoList: this.jointsearchInfoList, fromCache: true, qdpView: this.qdpView });
                this.schemaValue.schemaValue = typeof this.schemaValue.schemaValue === 'string' ? JSON.parse(this.schemaValue.schemaValue) : this.schemaValue.schemaValue;
            }), (/**
             * @param {?} error
             * @return {?}
             */
            (error) => {
                this.formErrorService.exception(error.Message, error);
            }));
        }
    }
    /**
     * @return {?}
     */
    selectedDimesion() {
        this.colList = [];
        if (this.lists[0]) {
            this.lists[0].value.forEach((/**
             * @param {?} value
             * @return {?}
             */
            value => {
                value.isGroup = false;
                value.visible = false;
            }));
            this.colList = this.lists[0].value;
        }
        if (this.lists[1]) {
            this.lists[1].value.forEach((/**
             * @param {?} value
             * @return {?}
             */
            value => {
                value.isGroup = false;
                value.visible = true;
            }));
            if (this.colList.length === 0) {
                this.colList = this.lists[1].value;
            }
            else {
                this.colList = this.colList.concat(this.lists[1].value);
            }
        }
        if (this.lists[2]) {
            this.lists[2].value.forEach((/**
             * @param {?} value
             * @return {?}
             */
            value => {
                value.isGroup = true;
                value.visible = false;
            }));
            if (this.colList.length === 0) {
                this.colList = this.lists[2].value;
            }
            else {
                this.colList = this.colList.concat(this.lists[2].value);
            }
        }
        if (this.colList.length > 0) {
            for (let i = 0; i < this.colList.length; i++) {
                if (this.colList[i].isGroup)
                    continue;
                /** @type {?} */
                const filterCondition = { pid: this.colList[i]['pid'] };
                if (i == 0 && this.colList.length > 1) {
                    if (this.colList.length > 2) {
                        if (this.colList[i]['pid'] && this.colList[i + 2]['pid'] && this.colList[i]['pid'] == this.colList[i + 2]['pid']) {
                            this.colList[i]['pid'] = this.colList[i + 2]['pid'];
                        }
                    }
                    else {
                        if (this.colList[i]['pid'] && this.colList[i]['pid'] != this.colList[i + 1]['pid'] && filter(this.colList, filterCondition) && filter(this.colList, filterCondition).length > 1) {
                            this.colList[i]['pid'] = '';
                        }
                    }
                }
                else if (i == (this.colList.length - 1) && this.colList.length > 1) {
                    if (this.colList[i]['pid'] && this.colList[i]['pid'] != this.colList[i - 1]['pid'] && filter(this.colList, filterCondition) && filter(this.colList, filterCondition).length > 1) {
                        this.colList[i]['pid'] = '';
                    }
                }
                else if (i > 0 && i < (this.colList.length - 1)) {
                    if (this.colList[i - 1]['pid'] && this.colList[i + 1]['pid'] && this.colList[i - 1]['pid'] == this.colList[i + 1]['pid']) {
                        this.colList[i]['pid'] = this.colList[i - 1]['pid'];
                    }
                }
            }
            for (let i = 0; i < this.colList.length; i++) {
                this.recursiveFindParent(this.colList, i, this.colList[i]['pid']);
            }
            /** @type {?} */
            const objCache = {};
            for (let i = 0; i < this.colList.length; i++) {
                objCache[this.colList[i]['id']] = this.colList[i];
            }
            /** @type {?} */
            const result = [];
            for (const key in objCache) {
                /** @type {?} */
                const parent = objCache[objCache[key]['pid']];
                if (!parent) {
                    result.push(objCache[key]);
                }
                else {
                    parent['childList'].push(objCache[key]);
                }
            }
            if (this.colList.length > 0) {
                try {
                    this.isCompare = JSONUtils.Compare({ schema: this.schemaValue.schemaValue.columnOption.colList }, { schema: result });
                }
                catch (e) { }
                this.schemaValue.schemaValue.columnOption.colList = result;
                // this.schemaValue.schemaValue.columnOption.colList = this.colList;
            }
        }
    }
    /**
     * @private
     * @param {?} colList
     * @param {?} index
     * @param {?} pid
     * @return {?}
     */
    recursiveFindParent(colList, index, pid) {
        /** @type {?} */
        const colIndex = this.allColCache.findIndex((/**
         * @param {?} x
         * @return {?}
         */
        x => x.id == pid));
        if (colIndex >= 0 && this.colList.findIndex((/**
         * @param {?} x
         * @return {?}
         */
        x => x.id === this.allColCache[colIndex].id)) < 0) {
            this.colList.splice(index, 0, this.allColCache[colIndex]);
            if (this.allColCache[colIndex]['pid']) {
                this.recursiveFindParent(colList, index, this.allColCache[colIndex]['pid']);
            }
        }
    }
    /**
     * @param {?} val
     * @return {?}
     */
    dimensionSearchValueOnChange(val) {
        if (val) {
            /** @type {?} */
            const searchCols = this.listsCache.find((/**
             * @param {?} item
             * @return {?}
             */
            (item) => item.name.indexOf(val) >= 0));
            this.lists[0].value = [...searchCols];
        }
        else {
            this.lists[0].value = [...this.listsCache];
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    dndListChange0($event) {
        if (this.lists && this.lists.length) {
            this.lists[0].value = $event;
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    dndListChange1($event) {
        if (this.lists && this.lists.length) {
            this.lists[1].value = $event;
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    dndListChange2($event) {
        if (this.lists && this.lists.length) {
            this.lists[2].value = $event;
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    dndListChange3($event) {
        if (this.lists && this.lists.length) {
            this.lists[3].value = $event;
        }
    }
    /**
     * @private
     * @param {?} pagingMode
     * @return {?}
     */
    handlePagingModeChanged(pagingMode) {
        this.isOrNotPaging = pagingMode.value === 1;
    }
}
ColumnsSettingComponent.decorators = [
    { type: Component, args: [{
                selector: 'columns-setting',
                template: "<div class=\"container f-utils-fill-flex-column h-100\">\r\n  <div class=\"simpleDemo f-utils-fill-flex-row\">\r\n    <div class=\"col-md-6 f-utils-flex-column p-1\">\r\n      <div class=\"card f-utils-fill-flex-column\">\r\n        <div class=\"card-body f-utils-fill-flex-column p-0\">\r\n          <div class=\"cardTitle mb-2 pt-2\">\r\n            <span id=\"unselected\" class=\"f-icon pt-1 pr-2 pl-2\" role=\"presentation\">\r\n              <img\r\n                src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTZweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTYgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuW+hemAieWtl+autTwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBvcGFjaXR5PScwLjQ1OTU0MjQxMSc+PGcgaWQ9JzHjgIHmn6Xor6JVSeiuvuiuoScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTkzMi4wMDAwMDAsIC0xNTEuMDAwMDAwKScgZmlsbD0nIzAwMDAwMCcgZmlsbC1ydWxlPSdub256ZXJvJz48ZyBpZD0n57yW57uELTI2JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg4OTguMDAwMDAwLCA3NS4wMDAwMDApJz48ZyBpZD0n57yW57uELTI0JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMC4wMDAwMDAsIDY1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMjEnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDEuMDAwMDAwLCAxLjAwMDAwMCknPjxnIGlkPSdzaG91Y2FuZy0yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxMy4wMDAwMDAsIDEwLjAwMDAwMCknPjxwYXRoIGQ9J00xMS41NjA5NDkyLDE0LjQ3MjcxODMgQzExLjM2NDAzMzIsMTQuNDcyNzE4MyAxMS4xNDI4MzU5LDE0LjQxNjE4MzYgMTAuOTM3NTI1NCwxNC4zMTM1NjI1IEw4LjAwNzc1MTk1LDEyLjg0ODE4MzYgTDUuMDU5ODM1OTQsMTQuMzExMTgzNiBDNC44NzMxNDY0OCwxNC40MTA1NzgxIDQuNjU5NDQxNDEsMTQuNDYyODczIDQuNDQxNTI1MzksMTQuNDYyODczIEM0LjE1ODM1ODQyLDE0LjQ2MzkxNTcgMy44ODI0MTU1NCwxNC4zNzM1NDU4IDMuNjU0NzIyNjYsMTQuMjA1MTk5MiBDMy4yNDIxNDY0OCwxMy44OTU4MDQ3IDMuMDMwNzM4MjgsMTMuMzU5NTkzNyAzLjEyODMyODEyLDEyLjg3MTQ5NDEgTDMuNzMxMjQ0MTQsOS43NDM4ODg2NyBMMS40MjAzMjgxMiw3LjU4OTc4OTA2IEMxLjA2MzM4MzQyLDcuMjI4MTM2ODYgMC45MjY0MjQ0NTgsNi43MDM1NjQzOCAxLjA2MTAxNzU4LDYuMjEzNTc4MTIgTDEuMDY1NjM4NjcsNi4xOTc2OTE0MSBDMS4yMzM2Mzg2Nyw1LjY5NDE4MzU5IDEuNjUwNDEyMTEsNS4zNDEzODA4NiAyLjE1NTc1MTk1LDUuMjczNjkxNDEgTDUuMzY2NDQxNDEsNC42ODk5MDIzNCBMNi44MDc1MjUzOSwxLjc2MzA0MTAyIEM3LjAzOTAxNzU4LDEuMjk5NjMyODEgNy41MDk4NDk2MSwxLjAwMTg1OTM3IDguMDA3NzUxOTUsMS4wMDE4NTkzNyBDOC41MjcxNDY0OCwxLjAwMTg1OTM3IDkuMDEwMTQ2NDgsMS4zMTA4NDM3NSA5LjIxMjY1NDMsMS43NzE0NDkyMiBMMTAuNjQ5MTMwOSw0LjY4OTAyNzM0IEwxMy44NjAzMTI1LDUuMjUwNDQ5MjIgQzE0LjM2OTg3NDcsNS4zMjQzMDAwMyAxNC43ODg3MTU0LDUuNjkwMjA3NjIgMTQuOTMwMzI4MSw2LjE4NTIzNjMzIEMxNS4wODg4NDQ4LDYuNjcxNzczNDkgMTQuOTU5MzY4Miw3LjIwNjExMjA4IDE0LjU5NTcyMjcsNy41NjYxMjMwNSBMMTQuNTg3ODIwMyw3LjU3NDAzOTA2IEwxMi4yODM0MjU4LDkuNzQ0MDM5MDYgTDEyLjg2NTgyMDMsMTIuODc3MjIyNyBDMTIuOTU5NjA5NCwxMy4zNzg0MzM2IDEyLjc2MDMyODEsMTMuODg0MzIwMyAxMi4zNDU0NDE0LDE0LjE5OTc0NDEgQzEyLjEyMzMxODEsMTQuMzc4NjAyMiAxMS44NDYxMjE3LDE0LjQ3NTA0MTMgMTEuNTYwOTQ5MiwxNC40NzI3MTgzIEwxMS41NjA5NDkyLDE0LjQ3MjcxODMgWiBNOC4wMDg4MDQ2OSwxMS43NDY1MDM5IEwxMS4wODYyNzU0LDEzLjI4NTQ2NDggQzExLjE3NjcxNDgsMTMuMzMxMTAxNiAxMS4yODA4ODA5LDEzLjM1OTY2MjEgMTEuMzUyMDU2NiwxMy4zNTk2NjIxIEMxMS40NjE4MjgxLDEzLjM1OTY2MjEgMTEuNTYzNzUyLDEzLjMyNTkxOTkgMTEuNjM4NDQxNCwxMy4yNjM1NDg4IEwxMS42NTI1MDk4LDEzLjI1MjA2NDUgQzExLjgyNzM3MywxMy4xMjA3NDYxIDExLjkxMjU0ODgsMTIuOTEyNDI3NyAxMS44NzQzMzU5LDEyLjcwODEwMTYgTDExLjI1NDgzNTksOS4zNzE5NzI2NiBMMTMuNzA0NDk0MSw3LjA2NTE4NTU1IEMxMy44NTQ3NzU0LDYuOTEyNzMwNDcgMTMuOTA2MjIyNyw2LjY5NDQwNDMgMTMuODM5NDM1NSw2LjQ5MzU2NDQ1IEwxMy44MzI4NzMsNi40NzI1MDk3NyBDMTMuNzc4OTIxMiw2LjI3ODAxNzY2IDEzLjYxNDIyNjEsNi4xMzQ0MTAzMyAxMy40MTQxOTkyLDYuMTA3NDQzMzYgTDEzLjQwMDE5OTIsNi4xMDUyODMyIEwxMC4wMTA4MDQ3LDUuNTEyNjYyMTEgTDguNDg1NDg4MjgsMi40MTQxOTE0MSBDOC40MTEyMDg5OCwyLjI0MTA3ODEyIDguMjEwNDUxMTcsMi4xMTU0MzM1OSA4LjAwNzQ1MTE3LDIuMTE1NDMzNTkgQzcuODA4MDE5NTMsMi4xMTU0MzM1OSA3LjYxNzMzNzg5LDIuMjQwMjQ0MTQgNy41MjA2Nzc3MywyLjQzMzA4NTk0IEw2LjAwNTA1NDY5LDUuNTExMzM1OTQgTDIuNTk3NzIyNjYsNi4xMzAyODkwNiBDMi4zOTA4MTI1LDYuMTU2MjUxOTUgMi4yMzAwMTc1OCw2LjI5MzczNjMzIDIuMTU1ODIwMzEsNi41MDgwNzAzMSBDMi4xMDMxMDE1Niw2LjcwNDAwMTk1IDIuMTY1NDcyNjYsNi45Mzk4OTY0OCAyLjMwOTUzMzIsNy4wODcxMTUyMyBMNC43NjE4NTc0Miw5LjM3MjM5NjQ4IEw0LjExODI2NzU4LDEyLjcxMDM1NzQgQzQuMDc5NjMwODYsMTIuOTAzMjY3NiA0LjE3MDk3MjY2LDEzLjEyNTUxNzYgNC4zNDAwOTM3NSwxMy4yNTI1MDIgQzQuNDI0ODU5MzcsMTMuMzE2MjEyOSA0LjUzNDY5OTIyLDEzLjM1MTM0OTYgNC42NDk4NDM3NSwxMy4zNTEzNDk2IEM0LjczODYwMTU2LDEzLjM1MTM0OTYgNC44MjM4MDQ2OSwxMy4zMzA2MjMgNC44OTcxNjc5NywxMy4yOTExMzg3IEw0LjkwNzcyMjY2LDEzLjI4NDk4NjMgTDguMDA4ODA0NjksMTEuNzQ2NTAzOSBaJyBpZD0n5b2i54q2Jz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvZz48L2c+PC9zdmc+\"\r\n                style=\"width: 15px; height: 15px; display: block;\" />\r\n            </span>\r\n            <span class=\"pl-3 dimensionTitle\">{{lists && lists.length ? lists[0].name : ''}}</span>\r\n          </div>\r\n          <input-group [groupText]=\"groupIcon\" class=\"m-1\" [(value)]=\"searchText\"\r\n            (valueChange)=\"dimensionSearchValueOnChange($event)\"></input-group>\r\n          <ul id=\"unselectFieldList\" class=\"f-utils-overflow-xhya f-utils-fill pb-1\"\r\n            [dndList]=\"lists && lists.length ? lists[0].value : []\" (dndListChange)=\"dndListChange0($event)\">\r\n            <li *ngFor=\"let item of (lists && lists.length ? lists[0].value : []); let i = index;\" [dndDraggable]=\"item\"\r\n              (dndMoved)=\"moved(i, lists[0].value)\" dndEffectAllowed=\"move\" (dndSelected)=\"models.selected = item\"\r\n              [ngClass]=\"{'selected': models.selected === item}\">\r\n              <span class=\"unselectFieldFront mr-2\"\r\n                *ngIf=\"'int,float,double,decimal,number'.includes(item.type)==false\">Abc</span>\r\n              <span class=\"unselectFieldFront mr-2\"\r\n                *ngIf=\"'int,float,double,decimal,number'.includes(item.type)==true\">123</span>\r\n              <span class=\"unselectField\">{{item.name}}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6 f-utils-flex-column p-1\">\r\n      <div class=\"card f-utils-fill-flex-column\">\r\n        <div class=\"card-body  f-utils-fill-flex-column p-0\">\r\n          <div class=\"cardTitle mb-2 pt-2\">\r\n            <span id=\"rowfield\" class=\"f-icon pt-1 pr-2 pl-2\" role=\"presentation\">\r\n              <img\r\n                src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTZweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTYgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuihjOe7tOW6pjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMeOAgeafpeivolVJ6K6+6K6hJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtOTMxLjAwMDAwMCwgLTQ2MC4wMDAwMDApJyBzdHJva2U9JyM5Nzk3OTcnPjxnIGlkPSfnvJbnu4QtMjYnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDg5OC4wMDAwMDAsIDc1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMjknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIwLjAwMDAwMCwgMzc1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMjHlpIfku70tMicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMS4wMDAwMDAsIDAuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0yMicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTIuMDAwMDAwLCAxMC4wMDAwMDApJz48cmVjdCBpZD0n55+p5b2iJyB4PScxLjUnIHk9JzIuNScgd2lkdGg9JzQuMjUnIGhlaWdodD0nNC4yNScgcng9JzEnPjwvcmVjdD48cmVjdCBpZD0n55+p5b2iJyBmaWxsPScjRDhEOEQ4JyB4PSc4LjUnIHk9JzMuMzc1JyB3aWR0aD0nNScgaGVpZ2h0PScxJz48L3JlY3Q+PHJlY3QgaWQ9J+efqeW9ouWkh+S7vS0xMicgZmlsbD0nI0Q4RDhEOCcgeD0nOC41JyB5PScxMC4zNzUnIHdpZHRoPSc1JyBoZWlnaHQ9JzEnPjwvcmVjdD48cmVjdCBpZD0n55+p5b2i5aSH5Lu9LTcnIGZpbGw9JyNEOEQ4RDgnIHg9JzguNScgeT0nNicgd2lkdGg9JzUnIGhlaWdodD0nMSc+PC9yZWN0PjxyZWN0IGlkPSfnn6nlvaLlpIfku70tMTMnIGZpbGw9JyNEOEQ4RDgnIHg9JzguNScgeT0nMTMnIHdpZHRoPSc1JyBoZWlnaHQ9JzEnPjwvcmVjdD48cmVjdCBpZD0n55+p5b2i5aSH5Lu9LTYnIHg9JzEuNScgeT0nOS41JyB3aWR0aD0nNC4yNScgaGVpZ2h0PSc0LjI1JyByeD0nMSc+PC9yZWN0PjwvZz48L2c+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\"\r\n                style=\"width: 15px; height: 15px; display: block;\" />\r\n            </span>\r\n            <span class=\"pl-3 dimensionTitle\">{{lists && lists.length ? lists[1].name : ''}}</span>\r\n          </div>\r\n          <div id=\"rowfieldimg\" *ngIf=\"lists && lists.length ? (lists[1]?.value?.length < 1) : true\"\r\n            class=\"f-utils-absolute-all f-utils-flex-column justify-content-center align-items-center\"\r\n            role=\"presentation\" style=\"align-items: center; top: 36px; z-index: 10;\">\r\n            <img\r\n              src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nNTBweCcgaGVpZ2h0PSc1MHB4JyB2aWV3Qm94PScwIDAgNTAgNTAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWIl+e7tOW6puWbvjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGRlZnM+PHJlY3QgaWQ9J3BhdGgtMScgeD0nMjYnIHk9JzMxJyB3aWR0aD0nMjQnIGhlaWdodD0nMTgnIHJ4PScwLjUnPjwvcmVjdD48ZmlsdGVyIHg9Jy02LjIlJyB5PSctOC4zJScgd2lkdGg9JzExMi41JScgaGVpZ2h0PScxMTYuNyUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci0yJz48ZmVPZmZzZXQgZHg9JzAnIGR5PScwJyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlT2Zmc2V0PjxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249JzAuNScgaW49J3NoYWRvd09mZnNldE91dGVyMScgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlR2F1c3NpYW5CbHVyPjxmZUNvbXBvc2l0ZSBpbj0nc2hhZG93Qmx1ck91dGVyMScgaW4yPSdTb3VyY2VBbHBoYScgb3BlcmF0b3I9J291dCcgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlQ29tcG9zaXRlPjxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwLjExNDg0Mzc1IDAgMCAwIDAgMC41MTU4ODE4MTcgMCAwIDAgMCAxIDAgMCAwIDAuNzI2NDgwNTUxIDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVDb2xvck1hdHJpeD48L2ZpbHRlcj48bGluZWFyR3JhZGllbnQgeDE9JzUwJScgeTE9JzEwMCUnIHgyPSc1MCUnIHkyPScwJScgaWQ9J2xpbmVhckdyYWRpZW50LTMnPjxzdG9wIHN0b3AtY29sb3I9JyNEQUVCRkYnIHN0b3Atb3BhY2l0eT0nMC4yMDMwNDMwNTEnIG9mZnNldD0nMCUnPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPScjQjNEMkZGJyBzdG9wLW9wYWNpdHk9JzAuNDczMDM4NjgnIG9mZnNldD0nMTAwJSc+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PC9kZWZzPjxnIGlkPSfpobXpnaItMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9JzHjgIHmn6Xor6JVSeiuvuiuoScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEyMTQuMDAwMDAwLCAtNTY1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMjYnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDg5OC4wMDAwMDAsIDc1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMzAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIzOS4wMDAwMDAsIDM3NS4wMDAwMDApJz48ZyBpZD0n57yW57uELTM05aSH5Lu9JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg0MC4wMDAwMDAsIDExNS4wMDAwMDApJz48ZyBpZD0n57yW57uELTMzJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzNy4wMDAwMDAsIDAuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC01Jz48cmVjdCBpZD0n55+p5b2i5aSH5Lu9LTMnIGZpbGw9JyNCM0QyRkYnIG9wYWNpdHk9JzAuMjQzODYxNjA3JyB4PScyNicgeT0nMTAnIHdpZHRoPScyNCcgaGVpZ2h0PScxOCcgcng9JzAuNSc+PC9yZWN0PjxnIGlkPSfnn6nlvaLlpIfku70tNicgb3BhY2l0eT0nMC41OTYxMjE2NTInPjx1c2UgZmlsbD0nYmxhY2snIGZpbGwtb3BhY2l0eT0nMScgZmlsdGVyPSd1cmwoI2ZpbHRlci0yKScgeGxpbms6aHJlZj0nI3BhdGgtMSc+PC91c2U+PHJlY3Qgc3Ryb2tlLW9wYWNpdHk9JzAuMjIzNDQ4NDI3JyBzdHJva2U9JyMwMDUxQjknIHN0cm9rZS13aWR0aD0nMScgc3Ryb2tlLWxpbmVqb2luPSdzcXVhcmUnIGZpbGw9JyM3QkIyRjgnIGZpbGwtcnVsZT0nZXZlbm9kZCcgeD0nMjYuNScgeT0nMzEuNScgd2lkdGg9JzIzJyBoZWlnaHQ9JzE3JyByeD0nMC41Jz48L3JlY3Q+PC9nPjxyZWN0IGlkPSfnn6nlvaLlpIfku70tMTInIGZpbGw9JyNCM0QyRkYnIG9wYWNpdHk9JzAuMjQzODYxNjA3JyB4PScwJyB5PScxMCcgd2lkdGg9JzI0JyBoZWlnaHQ9JzE4JyByeD0nMC41Jz48L3JlY3Q+PHJlY3QgaWQ9J+efqeW9ouWkh+S7vS0xNCcgZmlsbD0nI0IzRDJGRicgb3BhY2l0eT0nMC4yNDM4NjE2MDcnIHg9JzAnIHk9JzEnIHdpZHRoPSc1MCcgaGVpZ2h0PSc2JyByeD0nMC41Jz48L3JlY3Q+PHJlY3QgaWQ9J+efqeW9ouWkh+S7vS0xOCcgZmlsbD0ndXJsKCNsaW5lYXJHcmFkaWVudC0zKScgeD0nMCcgeT0nMzEnIHdpZHRoPScyNCcgaGVpZ2h0PScxOCcgcng9JzAuNSc+PC9yZWN0PjwvZz48L2c+PC9nPjwvZz48L2c+PC9nPjwvZz48L3N2Zz4=\"\r\n              style=\"width: 50px;height: 56px;display: block;\">\r\n            <!-- <span class=\"imgFont\">{{localizeService?.getValue('spread.crossTable.rowDimensionTitle')}}</span> -->\r\n          </div>\r\n          <ul class=\"f-utils-overflow-xhya f-utils-fill pb-1\" style=\"z-index: 20\"\r\n            [dndList]=\"lists && lists.length ? lists[1].value : []\" (dndListChange)=\"dndListChange1($event)\">\r\n            <li *ngFor=\"let item of (lists && lists.length ? lists[1].value : []); let i = index;\" [dndDraggable]=\"item\"\r\n              class=\"mb-1 p-1\" (dndMoved)=\"moved(i, lists[1].value)\" dndEffectAllowed=\"move\"\r\n              (dndSelected)=\"models.selected = item\" [ngClass]=\"{'selected': models.selected === item}\">\r\n              {{item.name}}\r\n              <!-- <div class=\"btn-group mr-3\" fDropdown>\r\n                <button class=\"btn btn-link dropdown-toggle\" fDropdownToggle type=\"button\">\r\n                  {{item.name}}\r\n                </button>\r\n                <div class=\"dropdown-menu\" fDropdownMenu>\r\n                  <div class=\"flex-fill farris-split-section farris-overflow-hidden\">\r\n                    <div class=\"farris-form farris-card-content-bg\">\r\n                      <div class=\"col-12 col-md-12 col-lg-12\"\r\n                        *ngIf=\"(controlType!='crosstab' && controlType!='treelist' && isOrNotPaging)\">\r\n                        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"\r\n                          [class.farris-form-inline]=\"formInline\">\r\n                          <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\" for=\"colPageText\">\r\n                              <span\r\n                                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.pageTotal')}}:</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                              <input-group [(ngModel)]=\"pageText\" id=\"colPageText\"></input-group>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-12 col-md-12 col-lg-12\"\r\n                        *ngIf=\"(controlType!='crosstab' && controlType!='treelist' && isOrNotPaging)\">\r\n                        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"\r\n                          [class.farris-form-inline]=\"formInline\">\r\n                          <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\" for=\"colPageAggre\">\r\n                              <span\r\n                                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.pageTotalType')}}:</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                              <farris-combo-list id=\"colPageAggre\" [(ngModel)]=\"pageSelectValue\" [data]=\"aggreData\"\r\n                                [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-12 col-md-12 col-lg-12\"\r\n                        *ngIf=\"(controlType!='crosstab' && controlType!='treelist')\">\r\n                        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"\r\n                          [class.farris-form-inline]=\"formInline\">\r\n                          <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\" for=\"colGroupText\">\r\n                              <span\r\n                                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupTotal')}}:</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                              <input-group [(ngModel)]=\"groupText\" id=\"colGroupText\"></input-group>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-12 col-md-12 col-lg-12\"\r\n                        *ngIf=\"(controlType!='crosstab' && controlType!='treelist')\">\r\n                        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"\r\n                          [class.farris-form-inline]=\"formInline\">\r\n                          <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\" for=\"colGroupAggre\">\r\n                              <span\r\n                                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupSubTotalType')}}:</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                              <farris-combo-list id=\"colGroupAggre\" [disabled]=\"colIsGroup\"\r\n                                [(ngModel)]=\"groupSubSelectValue\" [data]=\"aggreData\" [textField]=\"'name'\"\r\n                                [idField]=\"'value'\" [enableClear]=\"false\">\r\n                              </farris-combo-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-12 col-md-12 col-lg-12\"\r\n                        *ngIf=\"(controlType!='crosstab' && controlType!='treelist')\">\r\n                        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"\r\n                          [class.farris-form-inline]=\"formInline\">\r\n                          <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\" for=\"colGroupAggre\">\r\n                              <span\r\n                                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupTotalType')}}:</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                              <farris-combo-list id=\"colGroupAggre\" [disabled]=\"colIsGroup\"\r\n                                [(ngModel)]=\"groupSelectValue\" [data]=\"aggreData\" [textField]=\"'name'\"\r\n                                [idField]=\"'value'\" [enableClear]=\"false\">\r\n                              </farris-combo-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-12 col-md-12 col-lg-12\"\r\n                        *ngIf=\"(controlType!='crosstab' && !isOrNotPaging)\">\r\n                        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"\r\n                          [class.farris-form-inline]=\"formInline\">\r\n                          <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\" for=\"colTotalText\">\r\n                              <span\r\n                                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateTotal')}}:</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                              <input-group [(ngModel)]=\"totalText\" id=\"colTotalText\"></input-group>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-12 col-md-12 col-lg-12\"\r\n                        *ngIf=\"(controlType!='crosstab' && !isOrNotPaging)\">\r\n                        <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"\r\n                          [class.farris-form-inline]=\"formInline\">\r\n                          <div class=\"form-group farris-form-group\">\r\n                            <label class=\"col-form-label\" for=\"colTotalAggre\">\r\n                              <span\r\n                                class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.totalType')}}:</span>\r\n                            </label>\r\n                            <div class=\"farris-input-wrap\">\r\n                              <farris-combo-list id=\"colTotalAggre\" [(ngModel)]=\"totalSelectValue\" [data]=\"aggreData\"\r\n                                [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"simpleDemo f-utils-fill-flex-row\" *ngIf=\"controlType=='list'\">\r\n    <div class=\"col-md-6 f-utils-flex-column p-1\">\r\n      <div class=\"card f-utils-fill-flex-column\">\r\n        <div class=\"card-body f-utils-fill-flex-column p-0\">\r\n          <div class=\"cardTitle mb-2 pt-2\">\r\n            <span id=\"colfield\" class=\"f-icon pt-1 pr-2 pl-2\" role=\"presentation\">\r\n              <img\r\n                src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTdweCcgaGVpZ2h0PScxN3B4JyB2aWV3Qm94PScwIDAgMTcgMTcnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWIl+e7tOW6pjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9J+mhtemdoi0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMeOAgeafpeivolVJ6K6+6K6hJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTE1MC4wMDAwMDAsIC00NjAuMDAwMDAwKScgc3Ryb2tlPScjOTc5Nzk3Jz48ZyBpZD0n57yW57uELTI2JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg4OTguMDAwMDAwLCA3NS4wMDAwMDApJz48ZyBpZD0n57yW57uELTMwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMzkuMDAwMDAwLCAzNzUuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC0yMeWkh+S7vS0zJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxLjAwMDAwMCwgMC4wMDAwMDApJz48ZyBpZD0n57yW57uELTIyJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMC4xMjUwMDAsIDE4LjEyNTAwMCkgcm90YXRlKDkwLjAwMDAwMCkgdHJhbnNsYXRlKC0yMC4xMjUwMDAsIC0xOC4xMjUwMDApIHRyYW5zbGF0ZSgxMi4xMjUwMDAsIDEwLjEyNTAwMCknPjxyZWN0IGlkPSfnn6nlvaInIHg9JzEuNScgeT0nMi41JyB3aWR0aD0nNC4yNScgaGVpZ2h0PSc0LjI1JyByeD0nMSc+PC9yZWN0PjxyZWN0IGlkPSfnn6nlvaInIGZpbGw9JyNEOEQ4RDgnIHg9JzguNScgeT0nMy4zNzUnIHdpZHRoPSc1JyBoZWlnaHQ9JzEnPjwvcmVjdD48cmVjdCBpZD0n55+p5b2i5aSH5Lu9LTEyJyBmaWxsPScjRDhEOEQ4JyB4PSc4LjUnIHk9JzEwLjM3NScgd2lkdGg9JzUnIGhlaWdodD0nMSc+PC9yZWN0PjxyZWN0IGlkPSfnn6nlvaLlpIfku70tNycgZmlsbD0nI0Q4RDhEOCcgeD0nOC41JyB5PSc2JyB3aWR0aD0nNScgaGVpZ2h0PScxJz48L3JlY3Q+PHJlY3QgaWQ9J+efqeW9ouWkh+S7vS0xMycgZmlsbD0nI0Q4RDhEOCcgeD0nOC41JyB5PScxMycgd2lkdGg9JzUnIGhlaWdodD0nMSc+PC9yZWN0PjxyZWN0IGlkPSfnn6nlvaLlpIfku70tNicgeD0nMS41JyB5PSc5LjUnIHdpZHRoPSc0LjI1JyBoZWlnaHQ9JzQuMjUnIHJ4PScxJz48L3JlY3Q+PC9nPjwvZz48L2c+PC9nPjwvZz48L2c+PC9zdmc+\"\r\n                style=\"width: 15px; height: 15px; display: block;\" />\r\n            </span>\r\n            <span class=\"pl-3 dimensionTitle\">{{lists && lists.length ? lists[2].name : ''}}</span>\r\n          </div>\r\n          <div id=\"colfieldimg\" *ngIf=\"lists && lists.length ? (lists[2]?.value?.length < 1) : true\"\r\n            class=\"f-utils-absolute-all f-utils-flex-column justify-content-center align-items-center\"\r\n            role=\"presentation\" style=\"align-items: center; top: 36px; z-index: 10;\">\r\n            <img\r\n              src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nNTBweCcgaGVpZ2h0PSc1MHB4JyB2aWV3Qm94PScwIDAgNTAgNTAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWIl+e7tOW6puWbvjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGRlZnM+PHJlY3QgaWQ9J3BhdGgtMScgeD0nMjYnIHk9JzMxJyB3aWR0aD0nMjQnIGhlaWdodD0nMTgnIHJ4PScwLjUnPjwvcmVjdD48ZmlsdGVyIHg9Jy02LjIlJyB5PSctOC4zJScgd2lkdGg9JzExMi41JScgaGVpZ2h0PScxMTYuNyUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci0yJz48ZmVPZmZzZXQgZHg9JzAnIGR5PScwJyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlT2Zmc2V0PjxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249JzAuNScgaW49J3NoYWRvd09mZnNldE91dGVyMScgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlR2F1c3NpYW5CbHVyPjxmZUNvbXBvc2l0ZSBpbj0nc2hhZG93Qmx1ck91dGVyMScgaW4yPSdTb3VyY2VBbHBoYScgb3BlcmF0b3I9J291dCcgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlQ29tcG9zaXRlPjxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwLjExNDg0Mzc1IDAgMCAwIDAgMC41MTU4ODE4MTcgMCAwIDAgMCAxIDAgMCAwIDAuNzI2NDgwNTUxIDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVDb2xvck1hdHJpeD48L2ZpbHRlcj48bGluZWFyR3JhZGllbnQgeDE9JzUwJScgeTE9JzEwMCUnIHgyPSc1MCUnIHkyPScwJScgaWQ9J2xpbmVhckdyYWRpZW50LTMnPjxzdG9wIHN0b3AtY29sb3I9JyNEQUVCRkYnIHN0b3Atb3BhY2l0eT0nMC4yMDMwNDMwNTEnIG9mZnNldD0nMCUnPjwvc3RvcD48c3RvcCBzdG9wLWNvbG9yPScjQjNEMkZGJyBzdG9wLW9wYWNpdHk9JzAuNDczMDM4NjgnIG9mZnNldD0nMTAwJSc+PC9zdG9wPjwvbGluZWFyR3JhZGllbnQ+PC9kZWZzPjxnIGlkPSfpobXpnaItMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+PGcgaWQ9JzHjgIHmn6Xor6JVSeiuvuiuoScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEyMTQuMDAwMDAwLCAtNTY1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMjYnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDg5OC4wMDAwMDAsIDc1LjAwMDAwMCknPjxnIGlkPSfnvJbnu4QtMzAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIzOS4wMDAwMDAsIDM3NS4wMDAwMDApJz48ZyBpZD0n57yW57uELTM05aSH5Lu9JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg0MC4wMDAwMDAsIDExNS4wMDAwMDApJz48ZyBpZD0n57yW57uELTMzJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzNy4wMDAwMDAsIDAuMDAwMDAwKSc+PGcgaWQ9J+e8lue7hC01Jz48cmVjdCBpZD0n55+p5b2i5aSH5Lu9LTMnIGZpbGw9JyNCM0QyRkYnIG9wYWNpdHk9JzAuMjQzODYxNjA3JyB4PScyNicgeT0nMTAnIHdpZHRoPScyNCcgaGVpZ2h0PScxOCcgcng9JzAuNSc+PC9yZWN0PjxnIGlkPSfnn6nlvaLlpIfku70tNicgb3BhY2l0eT0nMC41OTYxMjE2NTInPjx1c2UgZmlsbD0nYmxhY2snIGZpbGwtb3BhY2l0eT0nMScgZmlsdGVyPSd1cmwoI2ZpbHRlci0yKScgeGxpbms6aHJlZj0nI3BhdGgtMSc+PC91c2U+PHJlY3Qgc3Ryb2tlLW9wYWNpdHk9JzAuMjIzNDQ4NDI3JyBzdHJva2U9JyMwMDUxQjknIHN0cm9rZS13aWR0aD0nMScgc3Ryb2tlLWxpbmVqb2luPSdzcXVhcmUnIGZpbGw9JyM3QkIyRjgnIGZpbGwtcnVsZT0nZXZlbm9kZCcgeD0nMjYuNScgeT0nMzEuNScgd2lkdGg9JzIzJyBoZWlnaHQ9JzE3JyByeD0nMC41Jz48L3JlY3Q+PC9nPjxyZWN0IGlkPSfnn6nlvaLlpIfku70tMTInIGZpbGw9JyNCM0QyRkYnIG9wYWNpdHk9JzAuMjQzODYxNjA3JyB4PScwJyB5PScxMCcgd2lkdGg9JzI0JyBoZWlnaHQ9JzE4JyByeD0nMC41Jz48L3JlY3Q+PHJlY3QgaWQ9J+efqeW9ouWkh+S7vS0xNCcgZmlsbD0nI0IzRDJGRicgb3BhY2l0eT0nMC4yNDM4NjE2MDcnIHg9JzAnIHk9JzEnIHdpZHRoPSc1MCcgaGVpZ2h0PSc2JyByeD0nMC41Jz48L3JlY3Q+PHJlY3QgaWQ9J+efqeW9ouWkh+S7vS0xOCcgZmlsbD0ndXJsKCNsaW5lYXJHcmFkaWVudC0zKScgeD0nMCcgeT0nMzEnIHdpZHRoPScyNCcgaGVpZ2h0PScxOCcgcng9JzAuNSc+PC9yZWN0PjwvZz48L2c+PC9nPjwvZz48L2c+PC9nPjwvZz48L3N2Zz4=\"\r\n              style=\"width: 50px;height: 56px;display: block;\">\r\n            <!-- <span class=\"imgFont\">{{localizeService?.getValue('spread.crossTable.colDimensionTitle')}}</span> -->\r\n          </div>\r\n          <ul class=\"f-utils-overflow-xhya f-utils-fill pb-1\" style=\"z-index: 20\"\r\n            [dndList]=\"lists && lists.length ? lists[2].value : []\" (dndListChange)=\"dndListChange2($event)\">\r\n            <li *ngFor=\"let item of (lists && lists.length ? lists[2].value : []); let i = index;\" [dndDraggable]=\"item\"\r\n              class=\"mb-1 p-1\" (dndMoved)=\"moved(i, lists[2].value)\" dndEffectAllowed=\"move\"\r\n              (dndSelected)=\"models.selected = item\" [ngClass]=\"{'selected': models.selected === item}\">\r\n              {{item.name}}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                styles: [".simpleDemo ul{min-height:42px;padding:0}.card-title,.demo-header{text-align:center}.title{margin:20px 0}.simpleDemo ul .dndDraggingSource{display:none}.simpleDemo ul .dndPlaceholder{background:rgba(56,143,255,.06);border:1px dashed #388fff;box-shadow:0 0 4px 0 rgba(13,95,201,.22);margin:.25rem!important;padding:.25rem!important}.simpleDemo ul li{background:rgba(235,244,254,.84);border:1px solid #388fff;box-shadow:0 0 10px 0 rgba(63,113,177,.22);border-radius:3px;height:28px;font-family:PingFangSC-Regular;font-size:13px;color:#388fff;margin:.25rem!important;padding:.25rem!important}#unselectFieldList li{border:none;background-color:rgba(0,0,0,0);box-shadow:0 0 #000;border-radius:3px;height:28px;margin:.25rem!important;padding:.25rem!important}#unselectFieldList li:hover{background:#f4f5f9}#unselectFieldList .dndPlaceholder{background:rgba(56,143,255,.06);border:1px dashed #388fff;box-shadow:0 0 4px 0 rgba(13,95,201,.22);margin:.25rem!important;padding:.25rem!important}.unselectField{font-family:PingFangSC-Regular;font-size:13px;color:rgba(0,0,0,.85)}.unselectFieldFront{font-family:PingFangSC-Medium;font-size:13px;color:#b4bccc}.simpleDemo ul li.selected{background-color:#dff0d8;color:#3c763d}.current-model{background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px;padding:18px 22px}.slicer{height:220px;position:relative}.headerMenu{position:fixed;display:none;top:0;left:0}.cardTitle{background:#f5f7fa;border-radius:3px 3px 0 0;height:36px}.dimensionTitle{font-family:PingFangSC-Medium;font-size:14px;color:rgba(0,0,0,.65);line-height:20px}.imgFont{font-family:PingFangSC-Regular;font-size:13px;color:#b4bccc}"]
            }] }
];
/** @nocollapse */
ColumnsSettingComponent.ctorParameters = () => [
    { type: Injector }
];
ColumnsSettingComponent.propDecorators = {
    controlType: [{ type: Input }],
    queryRelativeUrl: [{ type: Input }],
    queryId: [{ type: Input }],
    qoManagerCode: [{ type: Input }],
    qoId: [{ type: Input }],
    voId: [{ type: Input }],
    groupType: [{ type: Input }],
    spread: [{ type: Input }],
    conditionExpression: [{ type: Input }],
    jointsearchInfoList: [{ type: Input }],
    qdpView: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ColumnsSettingComponent.prototype.controlType;
    /** @type {?} */
    ColumnsSettingComponent.prototype.schemaValue;
    /** @type {?} */
    ColumnsSettingComponent.prototype.colList;
    /** @type {?} */
    ColumnsSettingComponent.prototype.queryRelativeUrl;
    /** @type {?} */
    ColumnsSettingComponent.prototype.queryId;
    /** @type {?} */
    ColumnsSettingComponent.prototype.qoManagerCode;
    /** @type {?} */
    ColumnsSettingComponent.prototype.qoId;
    /** @type {?} */
    ColumnsSettingComponent.prototype.voId;
    /** @type {?} */
    ColumnsSettingComponent.prototype.groupType;
    /** @type {?} */
    ColumnsSettingComponent.prototype.spread;
    /** @type {?} */
    ColumnsSettingComponent.prototype.conditionExpression;
    /** @type {?} */
    ColumnsSettingComponent.prototype.jointsearchInfoList;
    /** @type {?} */
    ColumnsSettingComponent.prototype.qdpView;
    /** @type {?} */
    ColumnsSettingComponent.prototype.hideColCache;
    /** @type {?} */
    ColumnsSettingComponent.prototype.showColCache;
    /** @type {?} */
    ColumnsSettingComponent.prototype.groupColCache;
    /** @type {?} */
    ColumnsSettingComponent.prototype.allColCache;
    /** @type {?} */
    ColumnsSettingComponent.prototype.searchText;
    /** @type {?} */
    ColumnsSettingComponent.prototype.isCompare;
    /** @type {?} */
    ColumnsSettingComponent.prototype.groupIcon;
    /** @type {?} */
    ColumnsSettingComponent.prototype.lists;
    /** @type {?} */
    ColumnsSettingComponent.prototype.listsCache;
    /** @type {?} */
    ColumnsSettingComponent.prototype.multiSheets;
    /** @type {?} */
    ColumnsSettingComponent.prototype.curSheet;
    /** @type {?} */
    ColumnsSettingComponent.prototype.multiSheetsSchemaIds;
    /** @type {?} */
    ColumnsSettingComponent.prototype.models;
    /** @type {?} */
    ColumnsSettingComponent.prototype.localizeService;
    /** @type {?} */
    ColumnsSettingComponent.prototype.renderService;
    /** @type {?} */
    ColumnsSettingComponent.prototype.formErrorService;
    /** @type {?} */
    ColumnsSettingComponent.prototype.schemaManagerService;
    /** @type {?} */
    ColumnsSettingComponent.prototype.localId;
    /** @type {?} */
    ColumnsSettingComponent.prototype.formInline;
    /** @type {?} */
    ColumnsSettingComponent.prototype.isOrNotPaging;
    /** @type {?} */
    ColumnsSettingComponent.prototype.aggreData;
    /** @type {?} */
    ColumnsSettingComponent.prototype.pageSelectValue;
    /** @type {?} */
    ColumnsSettingComponent.prototype.pageText;
    /** @type {?} */
    ColumnsSettingComponent.prototype.colIsGroup;
    /** @type {?} */
    ColumnsSettingComponent.prototype.groupSelectValue;
    /** @type {?} */
    ColumnsSettingComponent.prototype.groupSubSelectValue;
    /** @type {?} */
    ColumnsSettingComponent.prototype.groupText;
    /** @type {?} */
    ColumnsSettingComponent.prototype.totalSelectValue;
    /** @type {?} */
    ColumnsSettingComponent.prototype.totalText;
    /** @type {?} */
    ColumnsSettingComponent.prototype.currentColIndex;
    /** @type {?} */
    ColumnsSettingComponent.prototype.enumType;
    /** @type {?} */
    ColumnsSettingComponent.prototype.msgService;
    /**
     * @type {?}
     * @private
     */
    ColumnsSettingComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,