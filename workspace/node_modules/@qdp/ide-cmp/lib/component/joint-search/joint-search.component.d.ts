import { OnInit, OnDestroy, OnChanges, SimpleChanges, Renderer2, ComponentFactoryResolver, Injector, EventEmitter, TemplateRef } from '@angular/core';
import { DialogComponent } from '@farris/ui-dialog';
import { RtfAppHelpComponent } from '@gsp-sys/rtf-ui';
import { RtfAppHelpComponent as RtfApplicationHelpComponent } from '@gsp-sys/rtf-apphelp';
import { JointSearchService } from '../../service/joint-search/joint-search.service';
import { DatagridComponent } from '@farris/ui-datagrid';
import { Observable } from 'rxjs';
import { LocalizeService } from '@qdp/localize';
import { ExpressionService } from '@gsp-svc/expression';
export declare class JointSearchComponent implements OnInit, OnDestroy, OnChanges {
    private renderer;
    private resolver;
    private jointSearchService;
    private injector;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    editorParams: any;
    queryId: any;
    formId: any;
    sessionId: any;
    queryRelativeUrl: any;
    qoManagerCode: any;
    dynamicCols: any;
    domJson: any;
    viewModelFields: any[];
    modalFooter: TemplateRef<any>;
    modalConfig: {
        title: string;
        width: number;
        height: number;
        showButtons: boolean;
    };
    functionSubDatas: any;
    functionParaDatas: any;
    size: any;
    private selectedIndex;
    paraColumns: any;
    SubColumns: any;
    displaystyle: any;
    QueryInfoDatas: any;
    localizeService: LocalizeService;
    expressionService: ExpressionService;
    languages: any[];
    language: any;
    _currentConditionInput: any;
    functionParaDatasOfSub: any;
    dg: DatagridComponent;
    dg1: DatagridComponent;
    farrisDialog: DialogComponent;
    appHelp: RtfAppHelpComponent;
    rtfappHelp: RtfApplicationHelpComponent;
    functioncodeTemp: TemplateRef<any>;
    functionNameTemp: TemplateRef<any>;
    constructor(renderer: Renderer2, resolver: ComponentFactoryResolver, jointSearchService: JointSearchService, injector: Injector);
    ngOnDestroy(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private dropDownInitForIDE;
    gridInit(): void;
    private selectChange;
    private getViewModelFields;
    private recursiveGetViewModelFields;
    onResized(event: any): void;
    clickCancel(): void;
    clickConfirm(): void;
    handlebeforeClose: () => Observable<any>;
    handleDialogShow(): void;
    addSubHandler(): void;
    removeSubHandler(): void;
    cancelSubHandler(type: any): void;
    getFunctionName(data: any): any;
    openFunc(): void;
    openApp(): void;
    selectedFunc($event: any): void;
    selectedApp($event: any): void;
    findIndex(event: any): void;
    cancelEditedPara(event: any): void;
    inputCondExp(): void;
    addParaHandler(): void;
    removeParaHandler(): void;
}
