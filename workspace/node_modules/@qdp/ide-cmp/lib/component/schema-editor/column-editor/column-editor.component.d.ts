import { OnInit, OnChanges, TemplateRef, SimpleChanges, AfterViewInit, Injector } from '@angular/core';
import { TreeTableComponent } from '@farris/ui-treetable';
import { LocalizeService } from '@qdp/localize';
export declare class ColumnEditorComponent implements OnInit, OnChanges, AfterViewInit {
    private injector;
    currSchema: any;
    colList: any[];
    controlType: string;
    colToolbar: any;
    schemaTree: TreeTableComponent;
    nameCell: TemplateRef<any>;
    bindFieldCell: TemplateRef<any>;
    colWidthCell: TemplateRef<any>;
    colAlignCell: TemplateRef<any>;
    visibleCell: TemplateRef<any>;
    isFixedCell: TemplateRef<any>;
    autoFixCell: TemplateRef<any>;
    currTreeNodeId: any;
    currTreeNode: any;
    size: any;
    columnOption: any;
    colName: string;
    colWidth: number;
    colVisible: boolean;
    colFixed: boolean;
    colWrap: boolean;
    colAutoFit: boolean;
    schemaTreeData: any;
    colListData: any;
    colSelectValue: any;
    alignData: any;
    alignSelectValue: any;
    formatTypeData: any;
    formatTypeSelectValue: any;
    formatText: string;
    sortData: any;
    sortSelectValue: any;
    aggreData: any;
    pageSelectValue: any;
    pageText: string;
    colIsGroup: any;
    colIsRed: any;
    groupSelectValue: any;
    groupSubSelectValue: any;
    groupText: string;
    totalSelectValue: any;
    totalText: string;
    formatField: string;
    dimensionData: any;
    enumType: any;
    dataShowOption: any;
    type: any;
    dimensionSelectValue: any;
    showTypeSelectValue: any;
    rowColor: any;
    newNodeData: any;
    cols: any[];
    colIsGroupId: any;
    colVisibleId: any;
    colFixedId: any;
    colWrapId: any;
    colAutoFitId: any;
    colIsRedId: any;
    localizeService: LocalizeService;
    localId: string;
    formInline: boolean;
    colInfoChanged: boolean;
    editable: any[];
    isOrNotPaging: boolean;
    constructor(injector: Injector);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    handleAddTreeNode(): void;
    handleRemoveTreeNode(): void;
    handleTreeNodeSelected(data: any): void;
    handleTreeNodeUnSelected(data: any): void;
    handleNodeUpAndDown(type: any): void;
    handleNodeLeft(): void;
    handleNodeRight(): void;
    handleIsGroupClick($event: any): void;
    handleVisible($event: any): void;
    private recursiveNodeUpAndDown;
    private recursiveNodeLeft;
    private recursiveNodeRight;
    private initColInfo;
    handleWrap(type: any): void;
    private updateColInfo;
    private findTreeNodeById;
    private recursiveInitTreeData;
    private initColListData;
    private recursiveInitColListData;
    onResized(event: any): void;
    getColumnOption(): any[];
    onValueChange($event: any): void;
    handleInfoChanged($event: any): void;
    handleNgModelChange(treeNode: any): void;
    getComboboxName(type: any, value: any): string;
    getAlignName(value: any): any;
    findEditable(id: any): any;
    private recursiveGetTreeNodes;
    private objectCopy;
    private handlePagingModeChanged;
}
