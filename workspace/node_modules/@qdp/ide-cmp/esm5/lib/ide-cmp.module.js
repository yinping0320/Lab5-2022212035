/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { InputGroupModule } from '@farris/ui-input-group';
import { FlexLayoutModule } from '@farris/ui-flex-layout';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { ComboListModule } from '@farris/ui-combo-list';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { NotifyModule } from '@farris/ui-notify';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { TreeTableModule } from '@farris/ui-treetable';
import { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';
import { DatagridModule, ScrollbarModule } from '@farris/ui-datagrid';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { LanguageTextboxModule } from '@farris/ui-language-textbox';
import { FarrisSectionModule } from '@farris/ui-section';
import { ColorPickerModule } from 'ngx-color-picker';
import { RtfAppHelpModule } from '@gsp-sys/rtf-ui';
import { RtfAppHelpModule as RtfAppHelpModuleL } from '@gsp-sys/rtf-apphelp';
import { FarrisPanelModule } from '@farris/ui-panel';
// component
import { JointSearchComponent } from './component/joint-search/joint-search.component';
import { ParasMappingComponent } from './component/paras-mapping/paras-mapping.component';
import { PrintIntegrationComponent } from './component/print-integration/print-integration.component';
import { PopupAnchorDirective } from './component/paras-mapping/popup.anchor-target.directive';
import { ChartsSchemaEditorComponent } from './component/charts-schema-editor/charts-schema-editor.component';
import { ChartsTypeComponent } from './component/charts-schema-editor/charts-type/charts-type.component';
import { ChartsDataComponent } from './component/charts-schema-editor/charts-data/charts-data.component';
import { ChartsStyleComponent } from './component/charts-schema-editor/charts-style/charts-style.component';
import { SchemaManagerComponent } from './component/schema-manager/schema-manager.component';
import { SchemaEditorComponent } from './component/schema-editor/schema-editor.component';
import { ColumnEditorComponent } from './component/schema-editor/column-editor/column-editor.component';
import { TitleEditorComponent } from './component/schema-editor/title-editor/title-editor.component';
import { StyleEditorComponent } from './component/schema-editor/style-editor/style-editor.component';
import { OtherEditorComponent } from './component/schema-editor/other-editor/other-editor.component';
import { ResizedDirective } from './directive/resized/resized.directive';
// services
import { ParasMappingService } from './service/paras-mapping/paras-mapping.service';
import { JointSearchService } from './service/joint-search/joint-search.service';
import { SchemaService } from './service/schema/schema.service';
import { PrintIntegrationService } from './service/print-integration/print-integration.service';
import { ExpressionModule, ExpressionService } from '@gsp-svc/expression';
var IdeCmpModule = /** @class */ (function () {
    function IdeCmpModule() {
    }
    IdeCmpModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        JointSearchComponent,
                        ParasMappingComponent,
                        PopupAnchorDirective,
                        ChartsSchemaEditorComponent,
                        ChartsTypeComponent,
                        ChartsDataComponent,
                        ChartsStyleComponent,
                        SchemaManagerComponent,
                        SchemaEditorComponent,
                        ColumnEditorComponent,
                        TitleEditorComponent,
                        StyleEditorComponent,
                        OtherEditorComponent,
                        PrintIntegrationComponent,
                        ResizedDirective
                    ],
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        ComboListModule,
                        InputGroupModule,
                        NumberSpinnerModule,
                        FarrisDialogModule,
                        NotifyModule,
                        FDropdownDirectiveTypeModule,
                        FlexLayoutModule,
                        TreeTableModule,
                        PerfectScrollbarModule,
                        RtfAppHelpModule,
                        ColorPickerModule,
                        ScrollbarModule,
                        DatagridEditorsModule,
                        DatagridModule.forRoot(tslib_1.__spread(EditorProviders)),
                        FarrisTabsModule,
                        RtfAppHelpModuleL,
                        // LocalizeModule.forRoot(),
                        LanguageTextboxModule,
                        FarrisSectionModule,
                        ExpressionModule,
                        FarrisPanelModule
                    ],
                    providers: [
                        ParasMappingService,
                        JointSearchService,
                        SchemaService,
                        PrintIntegrationService,
                        ExpressionService,
                    ],
                    exports: [
                        JointSearchComponent,
                        PopupAnchorDirective,
                        ParasMappingComponent,
                        ChartsSchemaEditorComponent,
                        ChartsTypeComponent,
                        ChartsDataComponent,
                        ChartsStyleComponent,
                        SchemaManagerComponent,
                        SchemaEditorComponent,
                        ColumnEditorComponent,
                        TitleEditorComponent,
                        StyleEditorComponent,
                        OtherEditorComponent,
                        PrintIntegrationComponent,
                        ResizedDirective
                    ]
                },] }
    ];
    return IdeCmpModule;
}());
export { IdeCmpModule };
//# sourceMappingURL=data:application/json;base64,