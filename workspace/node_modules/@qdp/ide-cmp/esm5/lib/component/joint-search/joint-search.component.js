/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
// tslint:disable-next-line:max-line-length
import { Component, Input, Optional, ViewChild, Renderer2, ViewEncapsulation, ComponentFactoryResolver, Injector, Output, EventEmitter, TemplateRef } from '@angular/core';
import { DialogComponent } from '@farris/ui-dialog';
import { RtfAppHelpComponent } from '@gsp-sys/rtf-ui';
import { RtfAppHelpComponent as RtfApplicationHelpComponent } from '@gsp-sys/rtf-apphelp';
import { JointSearchService } from '../../service/joint-search/joint-search.service';
import { EventBus } from '@qdp/common';
import { DatagridComponent } from '@farris/ui-datagrid';
import { of } from 'rxjs';
import { findIndex } from 'lodash-es';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { LocalizeService } from '@qdp/localize';
import { ExpressionService } from '@gsp-svc/expression';
var JointSearchComponent = /** @class */ (function () {
    function JointSearchComponent(renderer, resolver, jointSearchService, injector) {
        var _this = this;
        this.renderer = renderer;
        this.resolver = resolver;
        this.jointSearchService = jointSearchService;
        this.injector = injector;
        this.closeModal = new EventEmitter();
        // 模态框确定后关闭，并传递参数
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        // 查询ID
        this.formId = 'form' + 'ff3ea474-cc65-23b0-cdb1-73c9146cea3b'; // 当前表单ID
        this.modalConfig = {
            title: '联查映射',
            width: 900,
            height: 800,
            showButtons: true
        };
        this.functionSubDatas = []; // 数据
        // 数据
        this.functionParaDatas = [];
        this.size = {};
        this.paraColumns = [];
        this.SubColumns = [];
        this.displaystyle = [
            { 'name': '右键联查', value: 1 },
            { 'name': '超链联查', value: 2 }
        ];
        this.QueryInfoDatas = [];
        this.languages = [];
        this._currentConditionInput = null;
        this.functionParaDatasOfSub = [];
        this.handlebeforeClose = (/**
         * @return {?}
         */
        function () {
            _this.dg.endRowEdit();
            _this.dg1.endRowEdit();
            return of(true);
        });
        if (this.injector) {
            this.localizeService = this.injector.get(LocalizeService);
            this.language = this.localizeService.language;
            this.expressionService = this.injector.get(ExpressionService);
            this.modalConfig.title = this.localizeService.getValue('ideCmp.drillDown.drillDownName');
            this.displaystyle = this.localizeService.getValue('ideCmp.drillDown.displayStyle');
        }
    }
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.dropDownInitForIDE();
        this.gridInit();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    JointSearchComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'editorParams':
                        this.dropDownInitForIDE();
                        break;
                }
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    JointSearchComponent.prototype.dropDownInitForIDE = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        self.formId = 'form' + 'ff3ea474-cc65-23b0-cdb1-73c9146cea3b';
        if (self.editorParams && self.editorParams.queryId) {
            self.queryId = self.editorParams.queryId;
            self.sessionId = self.editorParams.sessionId;
            self.queryRelativeUrl = self.editorParams.queryRelativeUrl;
            self.qoManagerCode = self.editorParams.qoManagerCode;
            self.domJson = self.editorParams.domJson;
            self.viewModelFields = [];
            self.getViewModelFields();
            self.jointSearchService.getLanguageList().subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (data && data.length) {
                    data.forEach((/**
                     * @param {?} e
                     * @return {?}
                     */
                    function (e) {
                        self.languages.push({ code: e.code.toLowerCase(), name: e.description });
                    }));
                }
                self.jointSearchService.getjointsearch(self.formId, self.queryId, self.queryRelativeUrl).subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    if (data != null) {
                        self.functionSubDatas = JSON.parse(data.joinSearch);
                        self.functionParaDatas = JSON.parse(data.jointparam);
                        // tslint:disable-next-line:prefer-for-of
                        for (var i = 0; i < self.functionSubDatas.length; i++) {
                            if (self.functionSubDatas[i].jointserachdisplaystyle === 2) {
                                self.dg.showColumn('linkfield');
                                break;
                            }
                        }
                    }
                }));
                /** @type {?} */
                var params = {};
                params['qoManagerCode'] = self.qoManagerCode;
                params['pageIndex'] = 0;
                params['schemaId'] = '';
                params['entityData'] = '';
                params['extendCond'] = '';
                self.jointSearchService.getCol(params, self.queryRelativeUrl).subscribe((/**
                 * @param {?} value
                 * @return {?}
                 */
                function (value) {
                    if (value && value.dynamicCols) {
                        self.dynamicCols = value.dynamicCols;
                    }
                }));
            }));
        }
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.gridInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var enumOpts = { valueField: 'value', textField: 'name', data: this.displaystyle };
        this.SubColumns = [
            { field: 'functioncode', width: 160, title: self.localizeService.getValue('ideCmp.drillDown.columnHeader')[0], template: this.functioncodeTemp },
            { field: 'functionname', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.columnHeader')[1], template: this.functionNameTemp },
            // { field: 'jointsearchid', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.columnHeader')[2], editor: { type: EditorTypes.TEXTBOX, options: {} } },
            {
                field: 'jointserachdisplaystyle', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.columnHeader')[3],
                formatter: { type: 'enum', options: enumOpts },
                editor: { type: EditorTypes.COMBOLIST, options: {
                        data: this.displaystyle,
                        idField: 'value',
                        textField: 'name',
                        selectChange: this.selectChange.bind(this)
                    }
                }
            },
            { field: 'linkfield', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.columnHeader')[6], visible: false, editor: { type: EditorTypes.TEXTBOX, options: {} } },
            {
                field: 'visibleformula', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.columnHeader')[4],
                editor: {
                    type: EditorTypes.INPUTGROUP, options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            _this._currentConditionInput = e;
                            _this.inputCondExp();
                        })
                    },
                }
            },
        ];
        this.paraColumns = [
            { field: 'para', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.paramColumnHeader')[0], editor: { type: EditorTypes.TEXTBOX, options: {} } },
            { field: 'paraname', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.paramColumnHeader')[1], editor: { type: EditorTypes.TEXTBOX, options: {} } },
            { field: 'paravalue', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.paramColumnHeader')[2], editor: { type: EditorTypes.TEXTBOX, options: {} } },
            {
                field: 'paravaluetype', width: 100, title: self.localizeService.getValue('ideCmp.drillDown.paramColumnHeader')[3], editor: { type: EditorTypes.CHECKBOX, options: {} },
                formatter: { type: 'boolean', options: { trueText: self.localizeService.getValue('ideCmp.drillDown.enumExpress')[0], falseText: self.localizeService.getValue('ideCmp.drillDown.enumExpress')[1] } }
            },
        ];
    };
    /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    JointSearchComponent.prototype.selectChange = /**
     * @private
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        // console.log($event);
        /** @type {?} */
        var self = this;
        if (($event.value.data.value - 0) === 2) {
            this.dg.showColumn('linkfield');
        }
        else {
            this.dg.hideColumn('linkfield');
        }
        if (this.dg.selectedRow) {
            /** @type {?} */
            var index = findIndex(this.functionSubDatas, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return n.id === self.dg.selectedRow.id;
            }));
            self.functionSubDatas[index].jointserachdisplaystyle = $event.value.data.value;
            self.functionSubDatas = tslib_1.__spread(self.functionSubDatas);
        }
    };
    /**
     * @private
     * @return {?}
     */
    JointSearchComponent.prototype.getViewModelFields = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.domJson) {
            /** @type {?} */
            var component = this.domJson.module.components.find((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.componentType === 'Frame'; }));
            this.recursiveGetViewModelFields(component, null);
        }
    };
    /**
     * @private
     * @param {?} component
     * @param {?} contents
     * @return {?}
     */
    JointSearchComponent.prototype.recursiveGetViewModelFields = /**
     * @private
     * @param {?} component
     * @param {?} contents
     * @return {?}
     */
    function (component, contents) {
        var e_1, _a, e_2, _b;
        if (component) {
            if (component.type === 'QdpFramework') {
                if (component && component.params && component.params.length) {
                    try {
                        for (var _c = tslib_1.__values(component.params), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var field = _d.value;
                            this.viewModelFields.push(field.ParamCode);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
            }
            else if (component.contents && component.contents.length) {
                this.recursiveGetViewModelFields(null, component.contents);
            }
        }
        else {
            for (var i = 0; i < contents.length; i++) {
                if (contents[i].type === 'QdpFramework') {
                    if (contents[i] && contents[i].params && contents[i].params.length) {
                        try {
                            for (var _e = tslib_1.__values(contents[i].params), _f = _e.next(); !_f.done; _f = _e.next()) {
                                var field = _f.value;
                                this.viewModelFields.push(field.ParamCode);
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                    }
                }
                else if (contents[i].contents && contents[i].contents.length) {
                    this.recursiveGetViewModelFields(null, contents[i].contents);
                }
            }
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    JointSearchComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.size.height = event.newHeight;
        this.size.width = event.newWidth;
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.clickConfirm = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        self.dg.endRowEdit();
        self.dg1.endRowEdit();
        if (self.functionSubDatas.length > 0) {
            self.jointSearchService.savejointsearch({ Id: EventBus.guid(), joinsearch: JSON.stringify(self.functionSubDatas), jointparam: JSON.stringify(self.functionParaDatas), queryid: self.queryId, FormId: self.formId }, this.queryRelativeUrl).subscribe();
        }
        else {
            self.jointSearchService.deletejointsearch(self.formId, self.queryId, this.queryRelativeUrl).subscribe();
            self.functionSubDatas = [];
            self.functionParaDatas = [];
            self.functionParaDatasOfSub = [];
        }
        this.selectedIndex = -1;
        this.submitModal.emit({ value: this.functionSubDatas });
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.handleDialogShow = /**
     * @return {?}
     */
    function () {
        this.farrisDialog.show();
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.addSubHandler = /**
     * @return {?}
     */
    function () {
        this.functionSubDatas.push({
            'id': EventBus.guid(),
            'queryParaID': this.queryId,
            'searchtype': '',
            'functioncode': '',
            'functionname': null,
            'appEntrance': '',
            'jointsearchid': '',
            'jointserachdisplaystyle': 1,
            'linkfield': '',
            'visibleformula': '',
            'doubleclikjoinsearch': true,
            'destinationqueryId': ''
        });
        this.dg.refresh();
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.removeSubHandler = /**
     * @return {?}
     */
    function () {
        var _a;
        /** @type {?} */
        var self = this;
        if (self.dg.selectedRow) {
            /** @type {?} */
            var id_1 = self.dg.selectedRow.id;
            /** @type {?} */
            var index = findIndex(self.functionSubDatas, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return n.id === id_1;
            }));
            self.functionSubDatas.splice(index, 1);
            self.functionSubDatas = tslib_1.__spread(self.functionSubDatas);
            if (self.functionSubDatas.length === 0) {
                self.functionParaDatas = [];
                self.functionParaDatasOfSub = [];
            }
            else {
                /** @type {?} */
                var params = [];
                // tslint:disable-next-line:prefer-for-of
                for (var i = 0; i < this.functionParaDatas.length; i++) {
                    if (self.functionParaDatas[i].functionid !== id_1) {
                        params.push(self.functionParaDatas[i]);
                    }
                }
                (_a = self.functionParaDatas).push.apply(_a, tslib_1.__spread(params));
            }
            this.dg.refresh();
            this.dg1.refresh();
        }
    };
    /**
     * @param {?} type
     * @return {?}
     */
    JointSearchComponent.prototype.cancelSubHandler = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        this.dg.endRowEdit();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    JointSearchComponent.prototype.getFunctionName = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var local = 'zh-chs';
        if ((!gsp && !gsp.cache) && gspframeworkService) {
            local = gspframeworkService.rtf.language.getLanguageCode().toLowerCase();
        }
        if (!local) {
            local = 'zh-chs';
        }
        return data[local] ? data[local] : data;
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.openFunc = /**
     * @return {?}
     */
    function () {
        this.appHelp.showHelp(this.sessionId);
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.openApp = /**
     * @return {?}
     */
    function () {
        this.rtfappHelp.showHelp(this.sessionId);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    JointSearchComponent.prototype.selectedFunc = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var e_3, _a;
        /** @type {?} */
        var self = this;
        if (self.dg.selectedRow) {
            /** @type {?} */
            var index = findIndex(self.functionSubDatas, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return n.id === self.dg.selectedRow.id;
            }));
            self.functionSubDatas[index].functioncode = $event[0].Id;
            self.functionSubDatas[index].functionname = { 'zh-chs': $event[0].Name };
            self.functionSubDatas[index].searchtype = 'func';
            /** @type {?} */
            var staticParam = $event[0].InvokingConfig.staticParams;
            if (staticParam) {
                staticParam = JSON.parse(staticParam);
                try {
                    for (var staticParam_1 = tslib_1.__values(staticParam), staticParam_1_1 = staticParam_1.next(); !staticParam_1_1.done; staticParam_1_1 = staticParam_1.next()) {
                        var staticPara = staticParam_1_1.value;
                        if (staticPara.name === 'queryId') {
                            self.functionSubDatas[index].destinationqueryId = staticPara.value;
                        }
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (staticParam_1_1 && !staticParam_1_1.done && (_a = staticParam_1.return)) _a.call(staticParam_1);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
            self.functionSubDatas = tslib_1.__spread(self.functionSubDatas);
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    JointSearchComponent.prototype.selectedApp = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var e_4, _a;
        /** @type {?} */
        var self = this;
        if (self.dg.selectedRow) {
            /** @type {?} */
            var index = findIndex(this.functionSubDatas, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return n.id === self.dg.selectedRow.id;
            }));
            self.functionSubDatas[index].functioncode = $event.selectedInvok[0].appId;
            self.functionSubDatas[index].functionname = { 'zh-chs': $event.selectedInvok[0].name };
            self.functionSubDatas[index].appEntrance = $event.selectedInvok[0].appEntrance;
            self.functionSubDatas[index].searchtype = 'app';
            /** @type {?} */
            var staticParam = $event.selectedInvok[0].staticParams;
            if (staticParam) {
                staticParam = JSON.parse(staticParam);
                try {
                    for (var staticParam_2 = tslib_1.__values(staticParam), staticParam_2_1 = staticParam_2.next(); !staticParam_2_1.done; staticParam_2_1 = staticParam_2.next()) {
                        var staticPara = staticParam_2_1.value;
                        if (staticPara.name === 'queryId') {
                            self.functionSubDatas[index].destinationqueryId = staticPara.value;
                        }
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (staticParam_2_1 && !staticParam_2_1.done && (_a = staticParam_2.return)) _a.call(staticParam_2);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
            self.functionSubDatas = tslib_1.__spread(self.functionSubDatas);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    JointSearchComponent.prototype.findIndex = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.selectedIndex = event.data.id;
        this.functionParaDatasOfSub = this.functionParaDatas.filter((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.functionid === _this.selectedIndex; }));
        this.dg.endRowEdit();
        this.dg1.endRowEdit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    JointSearchComponent.prototype.cancelEditedPara = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.dg1.endRowEdit();
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.inputCondExp = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_5, _a;
        /** @type {?} */
        var self = this;
        if (self.dg.selectedRow) {
            /** @type {?} */
            var id_2 = self.dg.selectedRow.id;
            /** @type {?} */
            var index_1 = findIndex(self.functionSubDatas, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return n.id === id_2;
            }));
            if (this.viewModelFields) {
                try {
                    for (var _b = tslib_1.__values(this.viewModelFields), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var code = _c.value;
                        this.expressionService.addContext({
                            key: '@P_' + code,
                            name: code,
                            description: ''
                        });
                    }
                }
                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_5) throw e_5.error; }
                }
            }
            // 结果集列信息放进上下文
            if (this.dynamicCols) {
                this.dynamicCols.forEach((/**
                 * @param {?} element
                 * @return {?}
                 */
                function (element) {
                    _this.expressionService.addContext({
                        key: '@R_' + element.bindField,
                        name: element.name,
                        description: ''
                    });
                }));
            }
            self.expressionService.addExpressionText(self.functionSubDatas[index_1].visibleformula);
            self.expressionService.buildExpression().then((/**
             * @param {?} expressStr
             * @return {?}
             */
            function (expressStr) {
                self.functionSubDatas[index_1].visibleformula = expressStr;
                // if (self.dg) {
                //   self.dg.refresh();
                //   self.dg.data = self.functionSubDatas;
                // }
                self.functionSubDatas = tslib_1.__spread(self.functionSubDatas);
                if (self._currentConditionInput) {
                    self._currentConditionInput.formControl.setValue(expressStr);
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.addParaHandler = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var functionid = this.selectedIndex;
        if (functionid !== -1) {
            this.functionParaDatas.push({
                'id': EventBus.guid(),
                'functionid': functionid,
                'para': '',
                'paraname': '',
                'paravalue': '',
                'paravaluetype': false
            });
            this.functionParaDatasOfSub = this.functionParaDatas.filter((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.functionid === _this.selectedIndex; }));
        }
        this.dg1.refresh();
    };
    /**
     * @return {?}
     */
    JointSearchComponent.prototype.removeParaHandler = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        if (self.dg1.selectedRow) {
            /** @type {?} */
            var index = findIndex(self.functionParaDatas, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return n.id === self.dg1.selectedRow.id;
            }));
            self.functionParaDatas.splice(index, 1);
            self.functionParaDatasOfSub = self.functionParaDatas.filter((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.functionid === _this.selectedIndex; }));
            self.functionParaDatasOfSub = tslib_1.__spread(self.functionParaDatasOfSub);
        }
    };
    JointSearchComponent.decorators = [
        { type: Component, args: [{
                    selector: 'joint-search',
                    template: "<div class=\"f-utils-flex-column h-100\">\r\n  <div class=\"f-utils-flex-column\" style=\" flex: 1 1 0\">\r\n    <div class=\"f-utils-fill-flex-column farris-split-section m-1 farris-overflow-hidden\">\r\n      <div class=\"farris-form farris-card-content-bg h-100\" (resized)=\"onResized($event)\">\r\n        <fieldSet style=\"height: 11% !important;\">\r\n          <button id=\"addSubFilterRow\" class=\"btn btn-primary mr-1 mb-1\" (click)=\"addSubHandler()\">{{localizeService.getValue('ideCmp.drillDown.btnAdd')}}</button>\r\n          <button id=\"addSubFilterRow\" class=\"btn btn-secondary mr-1 mb-1\" (click)=\"removeSubHandler()\">{{localizeService.getValue('ideCmp.drillDown.btnDelete')}}</button>\r\n          <button id=\"addSubFilterRow\" class=\"btn btn-secondary mr-1 mb-1\" (click)=\"cancelSubHandler($event)\">{{localizeService.getValue('ideCmp.drillDown.btnCancel')}}</button>\r\n        </fieldSet>\r\n        <div class=\"f-utils-fill\" style=\"height: 89% !important;\">\r\n          <farris-datagrid id=\"gridFunctionSub2\" [data]=\"functionSubDatas\"\r\n                           [columns]=\"SubColumns\" #dg=\"datagrid\"\r\n                           [fit]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\"\r\n                           [showCheckbox]=\"false\" [fitColumns]=\"true\"\r\n                           [showLineNumber]=\"true\" [striped]=\"true\"\r\n                           [virtualized]=\"true\" [pagination]=\"false\"\r\n                           (selectChanged)=findIndex($event)>\r\n\r\n          </farris-datagrid>\r\n          <ng-template #functioncodeTemp let-ctx>\r\n            <div class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n              <input [disabled]=\"true\" type=\"text\" class=\"form-control\" name=\"name\"\r\n                     [(ngModel)]=\"ctx.rowData['functioncode']\">\r\n              <button id=\"functionSelect\" class=\"btn f-rt-btn f-btn-ml btn-secondary\" (click)=\"openFunc()\">\r\n                {{localizeService.getValue('ideCmp.drillDown.menuBtn')}}\r\n              </button>\r\n              <button id=\"appSelect\" class=\"btn f-rt-btn f-btn-ml btn-secondary\" (click)=\"openApp()\">\r\n                {{localizeService.getValue('ideCmp.drillDown.appBtn')}}\r\n              </button>\r\n              <app-rtf-app-help #appHelp (afterHelpConfirm)=\"selectedFunc($event)\" [languageCode]=\"language\"></app-rtf-app-help>\r\n              <app-rtf-application-help #rtfappHelp [initSelectKeys]=\"\" (afterHelpConfirm)=\"selectedApp($event)\" [languageCode]=\"language\"></app-rtf-application-help>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template #functionNameTemp let-ctx>\r\n            <language-textbox [languages]=\"languages\" [(ngModel)]=\"ctx.rowData['functionname']\"></language-textbox>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"f-utils-flex-column\" style=\" flex: 1 1 0\">\r\n    <div class=\"f-utils-fill-flex-column farris-split-section m-1 farris-overflow-hidden\">\r\n      <div class=\"farris-form farris-card-content-bg h-100\" (resized)=\"onResized($event)\">\r\n        <fieldSet style=\"height: 11% !important;\">\r\n          <button id=\"addFilterRow\" class=\"btn btn-primary mr-1 mb-1\" (click)=\"addParaHandler()\">{{localizeService.getValue('ideCmp.drillDown.btnAdd')}}</button>\r\n          <button id=\"addFilterRow\" class=\"btn btn-secondary mr-1 mb-1\" (click)=\"removeParaHandler()\">{{localizeService.getValue('ideCmp.drillDown.btnDelete')}}</button>\r\n          <button id=\"addFilterRow\" class=\"btn btn-secondary mr-1 mb-1\" (click)=\"cancelEditedPara($event)\">{{localizeService.getValue('ideCmp.drillDown.btnCancel')}}</button>\r\n        </fieldSet>\r\n        <div class=\"f-utils-fill\" style=\"height: 89% !important;\">\r\n          <farris-datagrid id=\"gridFunctionPara2\" [data]=\"functionParaDatasOfSub\"\r\n                           [columns]=\"paraColumns\" #dg1=\"datagrid\"\r\n                           [fit]=\"true\"\r\n                           [editable]=\"true\" [editMode]=\"'cell'\" [showCheckbox]=\"false\" [fitColumns]=\"true\"\r\n                           [showLineNumber]=\"true\" [striped]=\"true\" [total]=\"0\" [pageSize]=\"100\"\r\n                           [virtualized]=\"true\" [pagination]=\"false\">\r\n          </farris-datagrid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-template #enumFooter>\r\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"clickCancel()\">{{localizeService.getValue('ideCmp.drillDown.btnCancel')}}</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clickConfirm()\">{{localizeService.getValue('ideCmp.drillDown.btnOK')}}</button>\r\n  </ng-template>\r\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["tr .center{text-align:center}"]
                }] }
    ];
    /** @nocollapse */
    JointSearchComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ComponentFactoryResolver },
        { type: JointSearchService },
        { type: Injector, decorators: [{ type: Optional }] }
    ]; };
    JointSearchComponent.propDecorators = {
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        editorParams: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['enumFooter',] }],
        dg: [{ type: ViewChild, args: ['dg',] }],
        dg1: [{ type: ViewChild, args: ['dg1',] }],
        farrisDialog: [{ type: ViewChild, args: ['farrisDialog',] }],
        appHelp: [{ type: ViewChild, args: ['appHelp',] }],
        rtfappHelp: [{ type: ViewChild, args: ['rtfappHelp',] }],
        functioncodeTemp: [{ type: ViewChild, args: ['functioncodeTemp',] }],
        functionNameTemp: [{ type: ViewChild, args: ['functionNameTemp',] }]
    };
    return JointSearchComponent;
}());
export { JointSearchComponent };
if (false) {
    /** @type {?} */
    JointSearchComponent.prototype.closeModal;
    /** @type {?} */
    JointSearchComponent.prototype.submitModal;
    /** @type {?} */
    JointSearchComponent.prototype.editorParams;
    /** @type {?} */
    JointSearchComponent.prototype.queryId;
    /** @type {?} */
    JointSearchComponent.prototype.formId;
    /** @type {?} */
    JointSearchComponent.prototype.sessionId;
    /** @type {?} */
    JointSearchComponent.prototype.queryRelativeUrl;
    /** @type {?} */
    JointSearchComponent.prototype.qoManagerCode;
    /** @type {?} */
    JointSearchComponent.prototype.dynamicCols;
    /** @type {?} */
    JointSearchComponent.prototype.domJson;
    /** @type {?} */
    JointSearchComponent.prototype.viewModelFields;
    /** @type {?} */
    JointSearchComponent.prototype.modalFooter;
    /** @type {?} */
    JointSearchComponent.prototype.modalConfig;
    /** @type {?} */
    JointSearchComponent.prototype.functionSubDatas;
    /** @type {?} */
    JointSearchComponent.prototype.functionParaDatas;
    /** @type {?} */
    JointSearchComponent.prototype.size;
    /**
     * @type {?}
     * @private
     */
    JointSearchComponent.prototype.selectedIndex;
    /** @type {?} */
    JointSearchComponent.prototype.paraColumns;
    /** @type {?} */
    JointSearchComponent.prototype.SubColumns;
    /** @type {?} */
    JointSearchComponent.prototype.displaystyle;
    /** @type {?} */
    JointSearchComponent.prototype.QueryInfoDatas;
    /** @type {?} */
    JointSearchComponent.prototype.localizeService;
    /** @type {?} */
    JointSearchComponent.prototype.expressionService;
    /** @type {?} */
    JointSearchComponent.prototype.languages;
    /** @type {?} */
    JointSearchComponent.prototype.language;
    /** @type {?} */
    JointSearchComponent.prototype._currentConditionInput;
    /** @type {?} */
    JointSearchComponent.prototype.functionParaDatasOfSub;
    /** @type {?} */
    JointSearchComponent.prototype.dg;
    /** @type {?} */
    JointSearchComponent.prototype.dg1;
    /** @type {?} */
    JointSearchComponent.prototype.farrisDialog;
    /** @type {?} */
    JointSearchComponent.prototype.appHelp;
    /** @type {?} */
    JointSearchComponent.prototype.rtfappHelp;
    /** @type {?} */
    JointSearchComponent.prototype.functioncodeTemp;
    /** @type {?} */
    JointSearchComponent.prototype.functionNameTemp;
    /** @type {?} */
    JointSearchComponent.prototype.handlebeforeClose;
    /**
     * @type {?}
     * @private
     */
    JointSearchComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    JointSearchComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    JointSearchComponent.prototype.jointSearchService;
    /**
     * @type {?}
     * @private
     */
    JointSearchComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,