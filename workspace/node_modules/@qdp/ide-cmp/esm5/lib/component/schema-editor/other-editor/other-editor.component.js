/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector, LOCALE_ID } from '@angular/core';
import { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';
import { EventBus } from '@qdp/common';
var OtherEditorComponent = /** @class */ (function () {
    function OtherEditorComponent(injector) {
        this.injector = injector;
        this.isCache = 'isCache' + EventBus.guid();
        this.firstLoadId = 'firstLoadId' + EventBus.guid();
        this.size = {};
        this.dataCache = true;
        this.firstLoad = true;
        this.pageTypeData = [
            { name: '全部加载', value: 0 },
            { name: '分页加载', value: 1 },
        ];
        this.rangeData = [
            { name: '全部', value: 0 },
            { name: '当前页', value: 1 },
            { name: '自定义', value: 2 }
        ];
        this.pageTypeSelectValue = this.pageTypeData[1].value;
        this.pageSizeData = 20;
        this.rowGroup = true;
        this.colGroup = true;
        this.colSum = true;
        this.rowSum = true;
        this.rangeSelectValue = this.rangeData[0].value;
        this.rangeValue = '';
        this.delay = 0;
        this.interval = 0;
        this.treeInfoData = [
            { name: '请选择', value: 2 },
            { name: '分级码', value: 0 },
            { name: '自关联', value: 1 }
        ];
        this.treeInfoSelectValue = this.treeInfoData[2].value;
        this.formInline = true;
        this.showZero = true;
        this.expand = true;
        this.showHeaderSort = true;
        this.showFilterRow = true;
        this.mergeCell = true;
        this.isRowGroup = 'isRowGroup' + EventBus.guid();
        this.isColGroup = 'isColGroup' + EventBus.guid();
        this.isRowSum = 'isRowSum' + EventBus.guid();
        this.isColSum = 'isColSum' + EventBus.guid();
        this.isExpand = 'isExpand' + EventBus.guid();
        this.isShowZero = 'isShowZero' + EventBus.guid();
        this.filterRowId = 'filterRowId' + EventBus.guid();
        this.showHeaderSortId = 'showHeaderSortId' + EventBus.guid();
        this.mergeCellId = 'mergeCellId' + EventBus.guid();
        this.localizeService = this.injector.get(LocalizeService);
        this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;
        this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE;
        this.pageTypeData = this.localizeService.getValue('ideCmp.schemaManager.otherOption.pageTypeData');
        this.rangeData = this.localizeService.getValue('ideCmp.schemaManager.otherOption.rangeData');
        this.treeInfoData = this.localizeService.getValue('ideCmp.schemaManager.otherOption.treeInfoData');
    }
    /**
     * @return {?}
     */
    OtherEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    OtherEditorComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'currSchema':
                        if (newValue.schemaValue && newValue.schemaValue.otherOption) {
                            /** @type {?} */
                            var str = JSON.stringify(newValue.schemaValue.otherOption);
                            this.otherOption = JSON.parse(str);
                            this.dataCache = this.otherOption.dataCache;
                            this.firstLoad = this.otherOption.firstLoad === undefined || this.otherOption.firstLoad == null ? true : this.otherOption.firstLoad;
                            this.pageSizeData = this.otherOption.pageSize;
                            this.pageTypeSelectValue = this.pageTypeData[this.otherOption.loadDataType].value;
                            this.rowGroup = this.otherOption.rowGroup;
                            this.colGroup = this.otherOption.colGroup;
                            this.rowSum = this.otherOption.rowSum;
                            this.colSum = this.otherOption.colSum;
                            this.showZero = this.otherOption['showZero'] == null || this.otherOption['showZero'] === undefined ? true : this.otherOption['showZero'];
                            this.expand = this.otherOption['expand'] == null || this.otherOption['expand'] === undefined ? true : this.otherOption['expand'];
                            this.delay = this.otherOption.delay ? this.otherOption.delay : 0;
                            this.showHeaderSort = this.otherOption['showHeaderSort'] == null || this.otherOption['showHeaderSort'] == undefined ? true : this.otherOption['showHeaderSort'];
                            this.showFilterRow = this.otherOption['showFilterRow'] == null || this.otherOption['showFilterRow'] == undefined ? true : this.otherOption['showFilterRow'];
                            this.mergeCell = this.otherOption['mergeCell'] == null || this.otherOption['mergeCell'] == undefined ? true : this.otherOption['mergeCell'];
                            this.interval = this.otherOption.interval ? this.otherOption.interval : 0;
                            if (this.otherOption.rangeData) {
                                this.rangeSelectValue = this.rangeData[this.otherOption.rangeData.selectType].value;
                                this.rangeValue = this.otherOption.rangeData.rangeValue;
                            }
                            this.treeInfoSelectValue = this.otherOption.treeInfoType != null || this.otherOption.treeInfoType !== undefined ? this.otherOption.treeInfoType : 2;
                            this.pathField = this.otherOption.pathField ? this.otherOption.pathField : '';
                            this.pathStep = this.otherOption.pathStep ? this.otherOption.pathStep : 0;
                            this.idField = this.otherOption.idField ? this.otherOption.idField : '';
                            this.parentField = this.otherOption.parentField ? this.otherOption.parentField : '';
                        }
                        if (newValue.schemaValue && newValue.schemaValue.columnOption && newValue.schemaValue.columnOption.colList && newValue.schemaValue.columnOption.colList.length) {
                            /** @type {?} */
                            var str = JSON.stringify(newValue.schemaValue.columnOption.colList);
                            this.colList = JSON.parse(str);
                        }
                        break;
                }
            }
        }
    };
    /**
     * @return {?}
     */
    OtherEditorComponent.prototype.getOtherOption = /**
     * @return {?}
     */
    function () {
        if (this.otherOption) {
            this.otherOption.dataCache = this.dataCache;
            this.otherOption.firstLoad = this.firstLoad;
            this.otherOption.pageSize = this.pageSizeData;
            this.otherOption.loadDataType = this.pageTypeSelectValue - 0;
            this.otherOption.rowGroup = this.rowGroup;
            this.otherOption.colGroup = this.colGroup;
            this.otherOption.rowSum = this.rowSum;
            this.otherOption.colSum = this.colSum;
            this.otherOption['showZero'] = this.showZero;
            this.otherOption['expand'] = this.expand;
            this.otherOption['showHeaderSort'] = this.showHeaderSort;
            this.otherOption['showFilterRow'] = this.showFilterRow;
            this.otherOption['mergeCell'] = this.mergeCell;
            this.otherOption.rangeData = { selectType: this.rangeSelectValue, rangeValue: this.rangeValue };
            this.otherOption.delay = this.delay;
            this.otherOption.interval = this.interval;
            this.otherOption['treeInfoType'] = this.treeInfoSelectValue;
            this.otherOption['pathField'] = this.pathField;
            this.otherOption['pathStep'] = this.pathStep;
            this.otherOption['idField'] = this.idField;
            this.otherOption['parentField'] = this.parentField;
        }
        return this.otherOption;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    OtherEditorComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.size.height = event.newHeight;
        this.size.width = event.newWidth;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    OtherEditorComponent.prototype.handlePagingChanged = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        EventBus.dispatch('pagingModeChanges', $event);
    };
    OtherEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'other-editor',
                    template: "<perfect-scrollbar [config]=\"{}\" [style.height.px]=\"size.height\">\r\n  <div class=\"flex-fill farris-split-section farris-overflow-hidden\">\r\n    <div class=\"farris-form farris-card-content-bg\">\r\n      <div class=\"d-flex flex-column flex-fill\" (resized)=\"onResized($event)\">\r\n        <div class=\"form-row m-0\">\r\n          <fieldSet farrisFold>\r\n            <legend class=\"ml-2 f-legend-icon f-legend-show\">\r\n              {{localizeService.getValue('ideCmp.schemaManager.otherOption.selection')}}</legend>\r\n            <div class=\"d-flex flex-wrap mb-2\">\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"true\">\r\n                <!-- controlType!='crosstab' -->\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{isCache}}\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.dataCache')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{isCache}}\" [(ngModel)]=\"dataCache\">\r\n                        <label class=\"custom-control-label\" for=\"{{isCache}}\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"true\">\r\n                <!-- controlType!='crosstab' -->\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{firstLoadId}}\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.firstLoad')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{firstLoadId}}\"\r\n                          [(ngModel)]=\"firstLoad\">\r\n                        <label class=\"custom-control-label\" for=\"{{firstLoadId}}\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"controlType!=='crosstab'\">\r\n                <!-- controlType!='crosstab' -->\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{filterRowId}}\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.filterRow')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{filterRowId}}\"\r\n                          [(ngModel)]=\"showFilterRow\">\r\n                        <label class=\"custom-control-label\" for=\"{{filterRowId}}\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"controlType!=='crosstab'\">\r\n                <!-- controlType!='crosstab' -->\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{showHeaderSortId}}\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.showHeaderSort')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{showHeaderSortId}}\"\r\n                          [(ngModel)]=\"showHeaderSort\">\r\n                        <label class=\"custom-control-label\" for=\"{{showHeaderSortId}}\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"controlType==='list'\">\r\n                <!-- controlType!='crosstab' -->\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{mergeCellId}}\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.mergeCell')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"{{mergeCellId}}\"\r\n                          [(ngModel)]=\"mergeCell\">\r\n                        <label class=\"custom-control-label\" for=\"{{mergeCellId}}\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"controlType!=='crosstab'\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"  [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{isShowZero}}\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.showZero')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" [(ngModel)]=\"showZero\" class=\"custom-control-input\" id=\"{{isShowZero}}\" checked=\"\">\r\n                          <label class=\"custom-control-label\" for=\"{{isShowZero}}\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"controlType=='list'\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"pageType\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.pageType')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"pageType\" [(ngModel)]=\"pageTypeSelectValue\" [data]=\"pageTypeData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\" (valueChange)=\"handlePagingChanged($event)\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"controlType=='list' && pageTypeSelectValue === 1\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"pageSize\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.pageSize')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-number-spinner [(ngModel)]=\"pageSizeData\" [min]=\"1\" [step]=\"1\" [max]=\"5000\"></farris-number-spinner>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-7 col-md-7 col-lg-7\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"delay\" style=\"width: 10rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.delay')}}(s):</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-number-spinner [(ngModel)]=\"delay\" [min]=\"0\"></farris-number-spinner>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-7 col-md-7 col-lg-7\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"interval\" style=\"width: 10rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.timing')}}(s):</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-number-spinner [(ngModel)]=\"interval\" [min]=\"0\"></farris-number-spinner>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-7 col-md-7 col-lg-7\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"range\" style=\"width: 8rem; min-width: 8rem;\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.export')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"range\" [(ngModel)]=\"rangeSelectValue\" [data]=\"rangeData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\"></farris-combo-list>\r\n                    </div>\r\n                    <div class=\"farris-input-wrap\" *ngIf=\"rangeSelectValue===2\">\r\n                      <input-group class=\"form-control\" [(ngModel)]=\"rangeValue\" id=\"rangeValue\"></input-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </fieldSet>\r\n        </div>\r\n        <!-- || controlType=='crosstab' -->\r\n        <fieldSet farrisFold *ngIf=\"controlType=='treelist' || controlType=='crosstab'\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">\r\n            {{localizeService.getValue('ideCmp.schemaManager.otherOption.treeInfo')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <!-- <div class=\"col-7 col-md-7 col-lg-7\">\r\n              <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"  [class.farris-form-inline]=\"formInline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"{{isExpand}}\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.expand')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                    <div class=\"custom-control custom-checkbox mb-0\">\r\n                      <input type=\"checkbox\" [(ngModel)]=\"expand\" class=\"custom-control-input\" id=\"{{isExpand}}\" checked=\"\">\r\n                        <label class=\"custom-control-label\" for=\"{{colVisibleId}}\"></label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"col-7 col-md-7 col-lg-7\">\r\n              <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"treeInfoSelect\" style=\"width: 8rem; min-width: 8rem;\">\r\n                    <span\r\n                      class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.treeInfoType')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"treeInfoSelect\" [(ngModel)]=\"treeInfoSelectValue\" [data]=\"treeInfoData\"\r\n                      [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"treeInfoSelectValue==0 || treeInfoSelectValue=='0'\">\r\n              <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"pathField\" style=\"width: 8rem; min-width: 8rem;\">\r\n                    <span\r\n                      class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.pathField')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input-group id=\"pathField\" [(ngModel)]=\"pathField\"></input-group>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"treeInfoSelectValue==0 || treeInfoSelectValue=='0'\">\r\n              <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"pathStep\" style=\"width: 8rem; min-width: 8rem;\">\r\n                    <span\r\n                      class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.pathStep')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner id=\"pathStep\" [(ngModel)]=\"pathStep\" [min]=\"0\">\r\n                    </farris-number-spinner>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"treeInfoSelectValue==1 || treeInfoSelectValue=='1'\">\r\n              <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"idField\" style=\"width: 8rem; min-width: 8rem;\">\r\n                    <span\r\n                      class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.idField')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input-group id=\"idField\" [(ngModel)]=\"idField\"></input-group>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-7 col-md-7 col-lg-7\" *ngIf=\"treeInfoSelectValue==1 || treeInfoSelectValue=='1'\">\r\n              <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"parentField\" style=\"width: 8rem; min-width: 8rem;\">\r\n                    <span\r\n                      class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.parentField')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input-group id=\"parentField\" [(ngModel)]=\"parentField\"></input-group>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n        <fieldSet *ngIf=\"controlType=='crosstab'\" farrisFold>\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">\r\n            {{localizeService.getValue('ideCmp.schemaManager.otherOption.groupOption')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <div class=\"custom-control custom-checkbox mb-0\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"rowGroup\" class=\"custom-control-input\" id=\"{{isRowGroup}}\" checked=\"\">\r\n                    <label class=\"custom-control-label\"\r\n                      for=\"{{isRowGroup}}\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.rowSubtotal')}}</label>\r\n                  </div>\r\n                  <div class=\"custom-control custom-checkbox mb-0\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"colGroup\" class=\"custom-control-input\" id=\"{{isColGroup}}\" checked=\"\">\r\n                    <label class=\"custom-control-label\"\r\n                      for=\"{{isColGroup}}\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.colSubtotal')}}</label>\r\n                  </div>\r\n                  <div class=\"custom-control custom-checkbox mb-0\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"rowSum\" class=\"custom-control-input\" id=\"{{isRowSum}}\" checked=\"\">\r\n                    <label class=\"custom-control-label\"\r\n                      for=\"{{isRowSum}}\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.rowTotal')}}</label>\r\n                  </div>\r\n                  <div class=\"custom-control custom-checkbox mb-0\">\r\n                    <input type=\"checkbox\" [(ngModel)]=\"colSum\" class=\"custom-control-input\" id=\"{{isColSum}}\" checked=\"\">\r\n                    <label class=\"custom-control-label\"\r\n                      for=\"{{isColSum}}\">{{localizeService.getValue('ideCmp.schemaManager.otherOption.colTotal')}}</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</perfect-scrollbar>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    OtherEditorComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    OtherEditorComponent.propDecorators = {
        currSchema: [{ type: Input }],
        controlType: [{ type: Input }]
    };
    return OtherEditorComponent;
}());
export { OtherEditorComponent };
if (false) {
    /** @type {?} */
    OtherEditorComponent.prototype.currSchema;
    /** @type {?} */
    OtherEditorComponent.prototype.controlType;
    /** @type {?} */
    OtherEditorComponent.prototype.isCache;
    /** @type {?} */
    OtherEditorComponent.prototype.firstLoadId;
    /** @type {?} */
    OtherEditorComponent.prototype.size;
    /** @type {?} */
    OtherEditorComponent.prototype.colList;
    /** @type {?} */
    OtherEditorComponent.prototype.colListData;
    /** @type {?} */
    OtherEditorComponent.prototype.otherOption;
    /** @type {?} */
    OtherEditorComponent.prototype.dataCache;
    /** @type {?} */
    OtherEditorComponent.prototype.firstLoad;
    /** @type {?} */
    OtherEditorComponent.prototype.pageTypeData;
    /** @type {?} */
    OtherEditorComponent.prototype.rangeData;
    /** @type {?} */
    OtherEditorComponent.prototype.pageTypeSelectValue;
    /** @type {?} */
    OtherEditorComponent.prototype.pageSizeData;
    /** @type {?} */
    OtherEditorComponent.prototype.rowGroup;
    /** @type {?} */
    OtherEditorComponent.prototype.colGroup;
    /** @type {?} */
    OtherEditorComponent.prototype.colSum;
    /** @type {?} */
    OtherEditorComponent.prototype.rowSum;
    /** @type {?} */
    OtherEditorComponent.prototype.rangeSelectValue;
    /** @type {?} */
    OtherEditorComponent.prototype.rangeValue;
    /** @type {?} */
    OtherEditorComponent.prototype.delay;
    /** @type {?} */
    OtherEditorComponent.prototype.interval;
    /** @type {?} */
    OtherEditorComponent.prototype.localizeService;
    /** @type {?} */
    OtherEditorComponent.prototype.treeInfoData;
    /** @type {?} */
    OtherEditorComponent.prototype.treeInfoSelectValue;
    /** @type {?} */
    OtherEditorComponent.prototype.pathField;
    /** @type {?} */
    OtherEditorComponent.prototype.pathStep;
    /** @type {?} */
    OtherEditorComponent.prototype.idField;
    /** @type {?} */
    OtherEditorComponent.prototype.parentField;
    /** @type {?} */
    OtherEditorComponent.prototype.localId;
    /** @type {?} */
    OtherEditorComponent.prototype.formInline;
    /** @type {?} */
    OtherEditorComponent.prototype.showZero;
    /** @type {?} */
    OtherEditorComponent.prototype.expand;
    /** @type {?} */
    OtherEditorComponent.prototype.showHeaderSort;
    /** @type {?} */
    OtherEditorComponent.prototype.showFilterRow;
    /** @type {?} */
    OtherEditorComponent.prototype.mergeCell;
    /** @type {?} */
    OtherEditorComponent.prototype.isRowGroup;
    /** @type {?} */
    OtherEditorComponent.prototype.isColGroup;
    /** @type {?} */
    OtherEditorComponent.prototype.isRowSum;
    /** @type {?} */
    OtherEditorComponent.prototype.isColSum;
    /** @type {?} */
    OtherEditorComponent.prototype.isExpand;
    /** @type {?} */
    OtherEditorComponent.prototype.isShowZero;
    /** @type {?} */
    OtherEditorComponent.prototype.filterRowId;
    /** @type {?} */
    OtherEditorComponent.prototype.showHeaderSortId;
    /** @type {?} */
    OtherEditorComponent.prototype.mergeCellId;
    /**
     * @type {?}
     * @private
     */
    OtherEditorComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,