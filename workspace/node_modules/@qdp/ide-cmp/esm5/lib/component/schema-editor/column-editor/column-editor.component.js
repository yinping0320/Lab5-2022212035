/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, TemplateRef, ViewChild, Injector, LOCALE_ID } from '@angular/core';
import { find, findIndex } from 'lodash-es';
import { TreeTableComponent } from '@farris/ui-treetable';
import { EventBus, RtfServices } from '@qdp/common';
import { LocalizeService, DEFAULT_LANGUAGE } from '@qdp/localize';
var ColumnEditorComponent = /** @class */ (function () {
    function ColumnEditorComponent(injector) {
        this.injector = injector;
        this.size = {};
        this.colName = '';
        this.colWidth = 150;
        this.colVisible = true;
        this.colFixed = false;
        this.colWrap = false;
        this.colAutoFit = false;
        this.schemaTreeData = [];
        this.colListData = [];
        this.alignData = [
            { name: '居左', value: 0 },
            { name: '居中', value: 1 },
            { name: '居右', value: 2 }
        ];
        this.alignSelectValue = this.alignData[1].value;
        this.formatTypeData = [
            { name: '请选择', value: 0 },
            { name: '数字', value: 1 },
            { name: '日期', value: 2 },
            { name: '逻辑', value: 3 }
        ];
        this.formatTypeSelectValue = this.formatTypeData[0].value;
        this.formatText = '';
        this.sortData = [
            { name: '请选择', value: 0 },
            { name: '正序', value: 1 },
            { name: '反序', value: 2 }
        ];
        this.sortSelectValue = this.sortData[0].value;
        this.aggreData = [
            { name: '请选择', value: 0 },
            { name: '合计', value: 1 },
            { name: '最小值', value: 2 },
            { name: '最大值', value: 3 },
            { name: '计数', value: 4 },
            { name: '平均值', value: 5 }
        ];
        this.pageSelectValue = this.aggreData[0].value;
        this.pageText = '';
        this.colIsGroup = false;
        this.colIsRed = false;
        this.groupSelectValue = this.aggreData[0].value;
        this.groupSubSelectValue = this.aggreData[0].value;
        this.groupText = '';
        this.totalSelectValue = this.aggreData[0].value;
        this.totalText = '';
        this.formatField = '';
        this.dimensionData = [
            { name: '请选择', value: 0 },
            { name: '行维度', value: 1 },
            { name: '列维度', value: 2 },
            { name: '值维度', value: 3 }
        ];
        this.enumType = [
            { name: '索引', value: '0' },
            { name: '编号', value: '1' },
            { name: '名称', value: '2' }
        ];
        this.dataShowOption = [
            { name: '默认', value: -1 },
            { name: '自适应', value: 1 },
            { name: '折行', value: 2 }
        ];
        this.type = 'String';
        this.dimensionSelectValue = this.dimensionData[0].value;
        this.showTypeSelectValue = this.enumType[0].value;
        this.newNodeData = {
            data: {
                name: '',
                bindField: '',
                colWidth: 150,
                visible: true,
                isFixed: false,
                wordWrap: false,
                autoFit: false,
                align: 1,
                formatType: 0,
                formattor: '',
                formatField: '',
                sort: 0,
                pageAggre: 0,
                pageAggreText: '',
                isGroup: false,
                groupAggre: 0,
                groupSubAggre: 0,
                groupAggreText: '',
                totalAggre: 0,
                totalAggreText: '',
                dimension: '',
                rowColor: '',
                type: 'string',
                showType: '0'
            },
            expanded: true,
            children: []
        };
        this.cols = [];
        this.colIsGroupId = 'colIsGroupId' + EventBus.guid();
        this.colVisibleId = 'colVisibleId' + EventBus.guid();
        this.colFixedId = 'colFixedId' + EventBus.guid();
        this.colWrapId = 'colWrapId' + EventBus.guid();
        this.colAutoFitId = 'colAutoFitId' + EventBus.guid();
        this.colIsRedId = 'colIsRedId' + EventBus.guid();
        this.formInline = true;
        this.colInfoChanged = true;
        this.editable = [];
        this.isOrNotPaging = true;
        this.localizeService = this.injector.get(LocalizeService);
        this.localId = this.injector.get(LOCALE_ID) || DEFAULT_LANGUAGE;
        this.formInline = this.localId.toLowerCase() === DEFAULT_LANGUAGE || this.localId.toLowerCase() === 'zh-cht';
        this.alignData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.alignData');
        this.formatTypeData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.formatTypeData');
        this.sortData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.sortData');
        this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');
        this.dimensionData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.dimensionData');
        this.enumType = this.localizeService.getValue('ideCmp.schemaManager.columnOption.enumType');
        this.dataShowOption = this.localizeService.getValue('ideCmp.schemaManager.columnOption.dataShowOption');
    }
    /**
     * @return {?}
     */
    ColumnEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.cols = [
            { field: '', title: this.localizeService.getValue('ideCmp.schemaManager.columnOption.name'), width: 200, template: this.nameCell },
            { field: '', title: this.localizeService.getValue('ideCmp.schemaManager.columnOption.binding'), width: 100, template: this.bindFieldCell },
            { field: '', title: this.localizeService.getValue('ideCmp.schemaManager.columnOption.colWidth'), width: 80, template: this.colWidthCell },
            { field: '', title: this.localizeService.getValue('ideCmp.schemaManager.columnOption.align'), width: 80, template: this.colAlignCell },
            { field: '', title: this.localizeService.getValue('ideCmp.schemaManager.columnOption.show'), width: 80, template: this.visibleCell },
            { field: '', title: this.localizeService.getValue('ideCmp.schemaManager.columnOption.fixColumn'), width: 80, template: this.isFixedCell },
            { field: '', title: this.localizeService.getValue('ideCmp.schemaManager.columnOption.dataShow'), width: 80, template: this.autoFixCell }
        ];
        /** @type {?} */
        var queryId = this.currSchema && this.currSchema.queryId ? this.currSchema.queryId : '';
        /** @type {?} */
        var eventId = RtfServices.getTabId(queryId);
        EventBus.register('pagingModeChanges', this.handlePagingModeChanged.bind(this), eventId);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ColumnEditorComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        /** @type {?} */
        var self = this;
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'currSchema':
                        if (newValue.schemaValue && newValue.schemaValue.otherOption) {
                            this.isOrNotPaging = newValue.schemaValue.otherOption.loadDataType == 1;
                        }
                        if (newValue.schemaValue && newValue.schemaValue.columnOption) {
                            this.columnOption = this.objectCopy(newValue.schemaValue.columnOption);
                            if (this.columnOption && this.columnOption.colList && this.columnOption.colList.length) {
                                if (newValue.id && newValue.id !== '1' && newValue.id !== 'prefab') {
                                    this.initColListData(this.columnOption.colList);
                                }
                                this.editable = [];
                                this.schemaTreeData = [];
                                this.columnOption.colList.forEach((/**
                                 * @param {?} col
                                 * @return {?}
                                 */
                                function (col) {
                                    col.id = EventBus.guid();
                                    _this.editable.push({ id: col.id, editable: false });
                                    _this.schemaTreeData.push({ data: col, expanded: true, children: [] });
                                    if (col.childList && col.childList.length) {
                                        /** @type {?} */
                                        var childList = _this.objectCopy(col.childList);
                                        col.childList = [];
                                        _this.recursiveInitTreeData(childList, _this.schemaTreeData[_this.schemaTreeData.length - 1]);
                                    }
                                }));
                                this.schemaTree.updateSerializedValue();
                                this.currTreeNode = this.schemaTreeData[0];
                                this.currTreeNodeId = this.currTreeNode.data.id;
                                this.initColInfo();
                                setTimeout((/**
                                 * @return {?}
                                 */
                                function () {
                                    self.schemaTree.selectNode(self.currTreeNodeId);
                                }), 200);
                            }
                        }
                        break;
                    case 'colList':
                        if (newValue && newValue.length && this.currSchema) { // &&(!this.currSchema.id || '1,prefab,public_schema'.indexOf(this.currSchema.id) >= 0)
                            this.initColListData(newValue);
                            if (this.currTreeNode && this.currTreeNode.data) {
                                if (this.currTreeNode.data.bindField) {
                                    this.colSelectValue = find(this.colListData, (/**
                                     * @param {?} c
                                     * @return {?}
                                     */
                                    function (c) { return c.value === self.currTreeNode.data.bindField; })).value;
                                }
                                if (this.currTreeNode.data.formatField) {
                                    this.formatField = find(this.colListData, (/**
                                     * @param {?} c
                                     * @return {?}
                                     */
                                    function (c) { return c.value === self.currTreeNode.data.formatField; })).value;
                                }
                            }
                        }
                        break;
                }
            }
        }
    };
    /**
     * @return {?}
     */
    ColumnEditorComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleAddTreeNode = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var node = JSON.parse(JSON.stringify(this.newNodeData));
        node.data.id = EventBus.guid();
        if (this.currTreeNode) {
            this.currTreeNode.children.push(node);
        }
        else {
            this.schemaTreeData.push(node);
        }
        this.editable.push({ id: node.data.id, editable: true });
        this.schemaTree.updateSerializedValue();
        this.schemaTree.selectNode(node.data.id);
    };
    /**
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleRemoveTreeNode = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        if (this.currTreeNode) {
            if (this.currTreeNode.parent) {
                /** @type {?} */
                var index = findIndex(this.currTreeNode.parent.children, (/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return n.data.id === self.currTreeNode.data.id; }));
                this.currTreeNode.parent.children.splice(index, 1);
            }
            else {
                /** @type {?} */
                var index = findIndex(this.schemaTreeData, (/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return n.data.id === self.currTreeNode.data.id; }));
                this.schemaTreeData.splice(index, 1);
            }
        }
        this.schemaTree.updateSerializedValue();
        this.currTreeNode = undefined;
        this.currTreeNodeId = undefined;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleTreeNodeSelected = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var self = this;
        this.currTreeNode = data.node;
        this.currTreeNodeId = this.currTreeNode.data.id;
        this.editable.forEach((/**
         * @param {?} el
         * @return {?}
         */
        function (el) {
            el.editable = el.id === self.currTreeNodeId;
        }));
        this.initColInfo();
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleTreeNodeUnSelected = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var node = this.findTreeNodeById(data.node.data.id, []);
        this.updateColInfo(node);
        this.currTreeNode = undefined;
    };
    /**
     * @param {?} type
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleNodeUpAndDown = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        var _this = this;
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var index = findIndex(this.schemaTreeData, (/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n.data.id === self.currTreeNodeId; }));
        if (index >= 0) {
            if ((index !== 0 && (type === 'up' || type === 'top')) || (index + 1 !== this.schemaTreeData.length && type !== 'up' && type !== 'top')) {
                this.updateColInfo(this.schemaTreeData[index]);
                if (type === 'up') {
                    this.schemaTreeData[index] = this.schemaTreeData.splice(index - 1, 1, this.schemaTreeData[index])[0];
                }
                else if (type === 'down') {
                    this.schemaTreeData[index] = this.schemaTreeData.splice(index + 1, 1, this.schemaTreeData[index])[0];
                }
                else if (type === 'top') {
                    this.schemaTreeData[index] = this.schemaTreeData.splice(0, 1, this.schemaTreeData[index])[0];
                }
                else if (type === 'bottom') {
                    this.schemaTreeData[index] = this.schemaTreeData.splice(this.schemaTreeData.length - 1, 1, this.schemaTreeData[index])[0];
                }
                this.schemaTree.updateSerializedValue();
            }
        }
        else {
            this.schemaTreeData.forEach((/**
             * @param {?} node
             * @return {?}
             */
            function (node) {
                if (node.children && node.children.length) {
                    _this.recursiveNodeUpAndDown(node.children, type);
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleNodeLeft = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.currTreeNode && this.currTreeNode.parent) {
            /** @type {?} */
            var self_1 = this;
            /** @type {?} */
            var index = findIndex(this.schemaTreeData, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n.data.id === self_1.currTreeNode.parent.data.id; }));
            if (index >= 0) {
                /** @type {?} */
                var childIndex = findIndex(self_1.currTreeNode.parent.children, (/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return n.data.id === self_1.currTreeNode.data.id; }));
                this.updateColInfo(self_1.currTreeNode.parent.children[childIndex]);
                this.schemaTreeData.splice(index + 1, 0, self_1.currTreeNode.parent.children.splice(childIndex, 1)[0]);
                this.schemaTree.updateSerializedValue();
            }
            else {
                this.schemaTreeData.forEach((/**
                 * @param {?} node
                 * @return {?}
                 */
                function (node) {
                    if (node.children && node.children.length) {
                        _this.recursiveNodeLeft(node.children);
                    }
                }));
            }
        }
    };
    /**
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleNodeRight = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.currTreeNodeId) {
            /** @type {?} */
            var self_2 = this;
            /** @type {?} */
            var index = findIndex(this.schemaTreeData, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n.data.id === self_2.currTreeNodeId; }));
            if (index > 0) {
                this.updateColInfo(this.schemaTreeData[index]);
                this.schemaTreeData[index - 1].children.push(this.schemaTreeData.splice(index, 1)[0]);
                this.schemaTree.updateSerializedValue();
            }
            else {
                this.schemaTreeData.forEach((/**
                 * @param {?} node
                 * @return {?}
                 */
                function (node) {
                    if (node.children && node.children.length) {
                        _this.recursiveNodeRight(node.children);
                    }
                }));
            }
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleIsGroupClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (this.colIsGroup) {
            this.groupSelectValue = this.aggreData[0].value;
            this.groupText = '';
            this.groupSubSelectValue = this.aggreData[0].value;
            if (this.currTreeNode && this.currTreeNode.data) {
                this.currTreeNode.data.visible = false;
            }
        }
        if ($event && $event.isGroup == true) {
            $event.visible = false;
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleVisible = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event.isGroup) {
            $event.visible = false;
        }
    };
    /**
     * @private
     * @param {?} children
     * @param {?} type
     * @return {?}
     */
    ColumnEditorComponent.prototype.recursiveNodeUpAndDown = /**
     * @private
     * @param {?} children
     * @param {?} type
     * @return {?}
     */
    function (children, type) {
        var _this = this;
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var index = findIndex(children, (/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n.data.id === self.currTreeNodeId; }));
        if (index >= 0) {
            if ((index !== 0 && (type === 'up' || type === 'top')) || (index + 1 !== children.length && type !== 'up' && type !== 'top')) {
                this.updateColInfo(children[index]);
                if (type === 'up') {
                    children[index] = children.splice(index - 1, 1, children[index])[0];
                }
                else if (type === 'down') {
                    children[index] = children.splice(index + 1, 1, children[index])[0];
                }
                else if (type === 'top') {
                    children[index] = children.splice(0, 1, children[index])[0];
                }
                else if (type === 'bottom') {
                    children[index] = children.splice(children.length - 1, 1, children[index])[0];
                }
                this.schemaTree.updateSerializedValue();
            }
        }
        else {
            children.forEach((/**
             * @param {?} node
             * @return {?}
             */
            function (node) {
                if (node.children && node.children.length) {
                    _this.recursiveNodeUpAndDown(node.children, type);
                }
            }));
        }
    };
    /**
     * @private
     * @param {?} children
     * @return {?}
     */
    ColumnEditorComponent.prototype.recursiveNodeLeft = /**
     * @private
     * @param {?} children
     * @return {?}
     */
    function (children) {
        var _this = this;
        if (this.currTreeNode && this.currTreeNode.parent) {
            /** @type {?} */
            var self_3 = this;
            /** @type {?} */
            var index = findIndex(children, (/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n.data.id === self_3.currTreeNode.parent.data.id; }));
            if (index >= 0) {
                /** @type {?} */
                var childIndex = findIndex(self_3.currTreeNode.parent.children, (/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return n.data.id === self_3.currTreeNodeId; }));
                this.updateColInfo(self_3.currTreeNode.parent.children[childIndex]);
                children.splice(index + 1, 0, self_3.currTreeNode.parent.children.splice(childIndex, 1)[0]);
                this.schemaTree.updateSerializedValue();
            }
            else {
                children.forEach((/**
                 * @param {?} node
                 * @return {?}
                 */
                function (node) {
                    if (node.children && node.children.length) {
                        _this.recursiveNodeLeft(node.children);
                    }
                }));
            }
        }
    };
    /**
     * @private
     * @param {?} children
     * @return {?}
     */
    ColumnEditorComponent.prototype.recursiveNodeRight = /**
     * @private
     * @param {?} children
     * @return {?}
     */
    function (children) {
        var _this = this;
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var index = findIndex(children, (/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n.data.id === self.currTreeNodeId; }));
        if (index > 0) {
            this.updateColInfo(children[index]);
            children[index - 1].children.push(children.splice(index, 1)[0]);
            this.schemaTree.updateSerializedValue();
        }
        else {
            children.forEach((/**
             * @param {?} node
             * @return {?}
             */
            function (node) {
                if (node.children && node.children.length) {
                    _this.recursiveNodeRight(node.children);
                }
            }));
        }
    };
    /**
     * @private
     * @return {?}
     */
    ColumnEditorComponent.prototype.initColInfo = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        this.colName = this.currTreeNode.data.name;
        this.colWidth = this.currTreeNode.data.colWidth;
        this.colVisible = this.currTreeNode.data.visible;
        this.colFixed = this.currTreeNode.data.isFixed;
        this.colWrap = this.currTreeNode.data.wordWrap != null && this.currTreeNode.data.wordWrap !== undefined ? this.currTreeNode.data.wordWrap : false;
        this.colAutoFit = this.currTreeNode.data.autoFit != null && this.currTreeNode.data.autoFit !== undefined ? this.currTreeNode.data.autoFit : false;
        this.alignSelectValue = this.alignData[this.currTreeNode.data.align].value;
        /** @type {?} */
        var formatType = 0;
        if (this.currTreeNode.data.formatType) {
            formatType = this.currTreeNode.data.formatType;
        }
        this.formatTypeSelectValue = this.formatTypeData[formatType].value;
        this.formatText = !this.formatTypeSelectValue || this.formatTypeSelectValue === 0 ? '' : this.currTreeNode.data.formattor;
        this.sortSelectValue = this.sortData[this.currTreeNode.data.sort].value;
        this.pageSelectValue = this.currTreeNode.data.pageAggre ? this.aggreData[this.currTreeNode.data.pageAggre].value : this.aggreData[0].value;
        this.pageText = this.currTreeNode.data.pageAggreText ? this.currTreeNode.data.pageAggreText : '';
        this.colIsGroup = this.currTreeNode.data.isGroup === null
            || this.currTreeNode.data.isGroup === undefined ? false : this.currTreeNode.data.isGroup;
        this.colIsRed = this.currTreeNode.data.isRed === null
            || this.currTreeNode.data.isRed === undefined ? false : this.currTreeNode.data.isRed;
        this.groupSelectValue = this.aggreData[this.currTreeNode.data.groupAggre].value;
        this.groupSubSelectValue = this.aggreData[this.currTreeNode.data.groupSubAggre == null || this.currTreeNode.data.groupSubAggre === undefined ? 0 : this.currTreeNode.data.groupSubAggre].value;
        this.groupText = this.currTreeNode.data.groupAggreText;
        this.totalSelectValue = this.aggreData[this.currTreeNode.data.totalAggre].value;
        this.totalText = this.currTreeNode.data.totalAggreText;
        if (this.colListData && this.colListData.length) {
            /** @type {?} */
            var bindField = find(this.colListData, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.value === self.currTreeNode.data.bindField; }));
            this.colSelectValue = bindField && bindField.value;
            bindField = find(this.colListData, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.value === self.currTreeNode.data.formatField; }));
            this.formatField = bindField && bindField.value;
        }
        this.dimensionSelectValue = this.dimensionData[this.currTreeNode.data.dimension] && this.dimensionData[this.currTreeNode.data.dimension].value;
        this.rowColor = this.currTreeNode.data.rowColor;
        this.type = this.currTreeNode.data.type;
        this.showTypeSelectValue = this.enumType[this.currTreeNode.data.showType || 0].value;
    };
    /**
     * @param {?} type
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleWrap = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        if (type === 'wrap') {
            this.colAutoFit = this.colWrap ? false : true;
        }
        else {
            this.colWrap = this.colAutoFit ? false : true;
        }
    };
    /**
     * @private
     * @param {?} node
     * @return {?}
     */
    ColumnEditorComponent.prototype.updateColInfo = /**
     * @private
     * @param {?} node
     * @return {?}
     */
    function (node) {
        if (!node) {
            return;
        }
        // node.data.name = this.colName;
        // node.data.colWidth = this.colWidth;
        // node.data.visible = this.colVisible;
        // node.data.isFixed = this.colFixed;
        // node.data.wordWrap = this.colWrap;
        // node.data.autoFit = this.colAutoFit;
        // node.data.align = this.alignSelectValue;
        /** @type {?} */
        var formatType = 0;
        if (this.formatTypeSelectValue) {
            formatType = this.formatTypeSelectValue;
        }
        // node.data.bindField = this.colSelectValue;
        node.data.formatType = formatType;
        node.data.formattor = !formatType || formatType === 0 ? '' : this.formatText;
        node.data.formatField = formatType && formatType === 1 && this.formatField ? this.formatField : '';
        node.data.sort = this.sortSelectValue;
        node.data.pageAggre = this.pageSelectValue;
        node.data.pageAggreText = this.pageText;
        node.data.isGroup = this.colIsGroup;
        node.data.isRed = this.colIsRed;
        node.data.groupAggre = this.groupSelectValue;
        node.data.groupSubAggre = this.groupSubSelectValue;
        node.data.groupAggreText = this.groupText;
        node.data.totalAggre = this.totalSelectValue;
        node.data.totalAggreText = this.totalText;
        if (this.colIsGroup == true) {
            node.data.visible = false;
        }
        if (this.dimensionSelectValue) {
            node.data.dimension = this.dimensionSelectValue;
        }
        else {
            node.data.dimension = this.dimensionData[0].value;
        }
        if (this.rowColor) {
            node.data.rowColor = this.rowColor;
        }
        if (this.showTypeSelectValue) {
            node.data.showType = this.showTypeSelectValue;
        }
    };
    /**
     * @private
     * @param {?} id
     * @param {?} children
     * @return {?}
     */
    ColumnEditorComponent.prototype.findTreeNodeById = /**
     * @private
     * @param {?} id
     * @param {?} children
     * @return {?}
     */
    function (id, children) {
        if (!children || !children.length) {
            // tslint:disable-next-line:prefer-for-of
            for (var i = 0; i < this.schemaTreeData.length; i++) {
                if (this.schemaTreeData[i].data.id === id) {
                    return this.schemaTreeData[i];
                }
                if (this.schemaTreeData[i].children && this.schemaTreeData[i].children.length) {
                    /** @type {?} */
                    var node = this.findTreeNodeById(id, this.schemaTreeData[i].children);
                    if (node) {
                        return node;
                    }
                }
            }
        }
        else {
            // tslint:disable-next-line:prefer-for-of
            for (var i = 0; i < children.length; i++) {
                if (children[i].data.id === id) {
                    return children[i];
                }
                if (children[i].children && children[i].children.length) {
                    /** @type {?} */
                    var node = this.findTreeNodeById(id, children[i].children);
                    if (node) {
                        return node;
                    }
                }
            }
        }
    };
    /**
     * @private
     * @param {?} children
     * @param {?} parent
     * @return {?}
     */
    ColumnEditorComponent.prototype.recursiveInitTreeData = /**
     * @private
     * @param {?} children
     * @param {?} parent
     * @return {?}
     */
    function (children, parent) {
        var _this = this;
        children.forEach((/**
         * @param {?} node
         * @return {?}
         */
        function (node) {
            node.id = EventBus.guid();
            _this.editable.push({ id: node.id, editable: false });
            parent.children.push({ data: node, expanded: true, children: [] });
            if (node.childList && node.childList.length) {
                /** @type {?} */
                var childList = _this.objectCopy(node.childList);
                node.childList = [];
                _this.recursiveInitTreeData(childList, parent.children[parent.children.length - 1]);
            }
        }));
    };
    /**
     * @private
     * @param {?} newValue
     * @return {?}
     */
    ColumnEditorComponent.prototype.initColListData = /**
     * @private
     * @param {?} newValue
     * @return {?}
     */
    function (newValue) {
        var _this = this;
        newValue.forEach((/**
         * @param {?} col
         * @return {?}
         */
        function (col) {
            _this.recursiveInitColListData(null, col);
        }));
    };
    /**
     * @private
     * @param {?} children
     * @param {?} col
     * @return {?}
     */
    ColumnEditorComponent.prototype.recursiveInitColListData = /**
     * @private
     * @param {?} children
     * @param {?} col
     * @return {?}
     */
    function (children, col) {
        var _this = this;
        if (col) {
            if (this.colListData.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.value === col.bindField; })) < 0) {
                this.colListData.push({ name: col.name + '(' + col.bindField + ')', value: col.bindField });
            }
            if (col.childList && col.childList.length) {
                this.recursiveInitColListData(col.childList, null);
            }
        }
        else {
            children.forEach((/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                if (_this.colListData.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.value === c.bindField; })) < 0) {
                    _this.colListData.push({ name: c.name + '(' + c.bindField + ')', value: c.bindField });
                }
                if (c.childList && c.childList.length) {
                    _this.recursiveInitColListData(c.childList, null);
                }
            }));
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ColumnEditorComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.size.height = event.newHeight;
        this.size.width = event.newWidth;
        if (this.schemaTree) {
            this.schemaTree.resize(this.size);
        }
    };
    /**
     * @return {?}
     */
    ColumnEditorComponent.prototype.getColumnOption = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var columns = [];
        if (this.currTreeNode) {
            this.updateColInfo(this.currTreeNode);
        }
        if (this.schemaTreeData && this.schemaTreeData.length) {
            this.schemaTreeData.forEach((/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                /** @type {?} */
                var node = _this.objectCopy(n.data);
                delete node.id;
                node.childList = [];
                columns.push(node);
                if (n.children && n.children.length) {
                    _this.recursiveGetTreeNodes(n.children, node);
                }
            }));
        }
        return columns;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ColumnEditorComponent.prototype.onValueChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event.value === 1) {
            this.currTreeNode.data.autoFit = true;
            this.currTreeNode.data.wordWrap = false;
        }
        else if ($event.value === 2) {
            this.currTreeNode.data.wordWrap = true;
            this.currTreeNode.data.autoFit = false;
        }
        else {
            this.currTreeNode.data.wordWrap = false;
            this.currTreeNode.data.autoFit = false;
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleInfoChanged = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.colInfoChanged = $event === 0;
    };
    /**
     * @param {?} treeNode
     * @return {?}
     */
    ColumnEditorComponent.prototype.handleNgModelChange = /**
     * @param {?} treeNode
     * @return {?}
     */
    function (treeNode) {
        if (!this.schemaTree.selectedRow || (treeNode.id !== this.schemaTree.selectedRow.id)) {
            this.schemaTree.selectNode(treeNode.id);
        }
    };
    /**
     * @param {?} type
     * @param {?} value
     * @return {?}
     */
    ColumnEditorComponent.prototype.getComboboxName = /**
     * @param {?} type
     * @param {?} value
     * @return {?}
     */
    function (type, value) {
        /** @type {?} */
        var result = '';
        switch (type) {
            case 0:
                value = value === -1 ? 0 : value;
                result = this.dataShowOption[value].name;
                break;
            default:
                break;
        }
        return result;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ColumnEditorComponent.prototype.getAlignName = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return !this.alignData[value].name ? '' : this.alignData[value].name;
    };
    /**
     * @param {?} id
     * @return {?}
     */
    ColumnEditorComponent.prototype.findEditable = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return find(this.editable, (/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.id === id; }));
    };
    /**
     * @private
     * @param {?} children
     * @param {?} parent
     * @return {?}
     */
    ColumnEditorComponent.prototype.recursiveGetTreeNodes = /**
     * @private
     * @param {?} children
     * @param {?} parent
     * @return {?}
     */
    function (children, parent) {
        var _this = this;
        children.forEach((/**
         * @param {?} n
         * @return {?}
         */
        function (n) {
            if (!parent.childList) {
                parent.childList = [];
            }
            /** @type {?} */
            var node = _this.objectCopy(n.data);
            delete node.id;
            node.childList = [];
            parent.childList.push(node);
            if (n.children && n.children.length) {
                _this.recursiveGetTreeNodes(n.children, node);
            }
        }));
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    ColumnEditorComponent.prototype.objectCopy = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var str = JSON.stringify(obj);
        /** @type {?} */
        var copyNode = JSON.parse(str);
        if (copyNode.isGroup == true) {
            copyNode.visible = false;
        }
        return copyNode;
    };
    /**
     * @private
     * @param {?} pagingMode
     * @return {?}
     */
    ColumnEditorComponent.prototype.handlePagingModeChanged = /**
     * @private
     * @param {?} pagingMode
     * @return {?}
     */
    function (pagingMode) {
        this.isOrNotPaging = pagingMode.value === 1;
        if (!this.isOrNotPaging) {
            this.pageText = '';
            this.pageSelectValue = 0;
        }
        else {
            this.totalText = '';
            this.totalSelectValue = 0;
        }
    };
    ColumnEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'column-editor',
                    template: "<div #colToolbar class=\"flex-roww\">\r\n  <div class=\"navbar p-0\">\r\n    <div>\r\n      <button [class]=\"colInfoChanged == true ? 'btn btn-primary' : 'btn btn-secondary'\" id=\"button-edit1\" (click)=\"handleInfoChanged(0)\">\r\n        {{localizeService.getValue('ideCmp.schemaManager.columnOption.selection1')}}</button>\r\n      <button [class]=\"colInfoChanged == false ? 'btn btn-primary' : 'btn btn-secondary'\" id=\"button-edit2\"\r\n        (click)=\"handleInfoChanged(1)\">\r\n        {{localizeService.getValue('ideCmp.schemaManager.columnOption.selection2')}}</button>\r\n    </div>\r\n    <!-- <label class=\"farris-form-title mr-auto\" for=\"page-header-title\">\r\n      <span></span>\r\n    </label> -->\r\n    <div class=\"btn-toolbar btn-group-lg\" id=\"page-header-toolbar\">\r\n      <button *ngIf=\"controlType!='crosstab'\" class=\"btn btn-link p-1 mr-1\" id=\"button-edit\"\r\n        (click)=\"handleAddTreeNode()\">\r\n        <span id=\"btnAdd\" class=\"f-icon pt-1 pr-3\" role=\"presentation\">\r\n          <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTVweCcgaGVpZ2h0PScxNXB4JyB2aWV3Qm94PScwIDAgMTUgMTUnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWKoOWPtzwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9JzLjgIHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6YWN572uMScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEwNjEuMDAwMDAwLCAtMTk3LjAwMDAwMCknPjxnIGlkPSfliIbnu4QtMTMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMxMi4wMDAwMDAsIDE5NS4wMDAwMDApJz48ZyBpZD0n5YigLemZpC0oMyknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDc0OS4wMDAwMDAsIDIuMDAwMDAwKSc+PGcgaWQ9J+WKoOWPtyc+PGNpcmNsZSBpZD0n5qSt5ZyG5b2iJyBzdHJva2U9JyMxRTgwRkYnIGN4PSc3LjUnIGN5PSc3LjUnIHI9JzYuNSc+PC9jaXJjbGU+PHBhdGggZD0nTTgsOCBMOCwxMC4xMTIyNzc5IEM4LDEwLjIxNTEwOTggNy45NDczMjA1MiwxMC4zMTM3MyA3Ljg1MzU1MDc5LDEwLjM4NjQ0MjIgQzcuNzU5NzgxMDcsMTAuNDU5MTU0NSA3LjYzMjYwMjQ5LDEwLjUwMDAwMjYgNy40OTk5OTM3NCwxMC41IEw3LjUwMDAwNjI1LDEwLjQ5OTk5MDMgQzcuMzY3Mzk1MzMsMTAuNDk5OTkyOSA3LjI0MDIxNDg2LDEwLjQ1OTE0MzUgNy4xNDY0NDQ3OCwxMC4zODY0MjkxIEM3LjA1MjY3NDcsMTAuMzEzNzE0NyA2Ljk5OTk5NjY4LDEwLjIxNTA5MjEgNywxMC4xMTIyNTg1IEw3LDggTDQuODg3NjY5NjgsOCBDNC42NzM1NTU3MSw3Ljk5OTk1NjMyIDQuNSw3Ljc3NjExMTQ5IDQuNSw3LjUgQzQuNSw3LjIyMzg4ODUxIDQuNjczNTU1NzEsNy4wMDAwNDM2OCA0Ljg4NzY2OTY4LDcgTDcsNyBMNyw0Ljg4NzcyNyBDNyw0LjY3MzU5MTI5IDcuMjIzODU3NjMsNC41IDcuNSw0LjUgQzcuNzc2MTQyMzcsNC41IDgsNC42NzM1OTEyOSA4LDQuODg3NzI3IEw4LDcgTDEwLjExMjMzMDMsNyBDMTAuMzI2NDQ0Myw3LjAwMDA0MzY4IDEwLjUsNy4yMjM4ODg1MSAxMC41LDcuNSBDMTAuNSw3Ljc3NjExMTQ5IDEwLjMyNjQ0NDMsNy45OTk5NTYzMiAxMC4xMTIzMzAzLDggTDgsOCBaJyBpZD0n5ZCI5bm25b2i54q2JyBmaWxsPScjMUU4MEZGJz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvZz48L3N2Zz4=\" style=\"width: 15px; height: 15px; display: block;\" />\r\n        </span>\r\n        {{localizeService.getValue('ideCmp.schemaManager.columnOption.btnAdd')}}</button>\r\n      <button *ngIf=\"controlType!='crosstab'\" class=\"btn btn-link p-1 mr-1\" id=\"button-edit\"\r\n        (click)=\"handleRemoveTreeNode()\">\r\n        <span id=\"btnDel\" class=\"f-icon f-icon-yxs_delete pt-1 pr-3\" role=\"presentation\">\r\n        </span>\r\n        {{localizeService.getValue('ideCmp.schemaManager.columnOption.btnDelete')}}</button>\r\n      <span *ngIf=\"controlType!='crosstab'\" class=\"d-inline-block m-2\"\r\n        style=\"width:1px; background-color: #1890ff\"></span>\r\n      <button class=\"btn btn-link p-1 mr-1\" id=\"button-edit\" (click)=\"handleNodeUpAndDown('up')\">\r\n        <span id=\"btnUp\" class=\"f-icon pt-1 pr-3\" role=\"presentation\">\r\n          <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTZweCcgaGVpZ2h0PScxNHB4JyB2aWV3Qm94PScwIDAgMTYgMTQnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWIhue7hCAxNTwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9JzLjgIHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6YWN572uMScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTExOTQuMDAwMDAwLCAtMTk4LjAwMDAwMCknPjxnIGlkPSfliIbnu4QtMTMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMxMi4wMDAwMDAsIDE5NS4wMDAwMDApJz48ZyBpZD0n5YiG57uELTE1JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg4ODIuMDAwMDAwLCAzLjAwMDAwMCknPjxwYXRoIGQ9J00xMC45MTcwMzA2LDMuNTI0MjgzMDEgTDkuNzAxMzEwMDUsNC43NDEwNTI5NSBDOS41NjYzNzYwOCw0Ljg3Njg0MDQzIDkuMzgyNjk1NTIsNC45NTI5NTQ2MyA5LjE5MTI2NjM3LDQuOTUyNDM1NTUgQzkuMDAwODc4NzgsNC45NTM2MzQ1MyA4LjgxODg4NjM1LDQuODc3NDg4MzkgOC42ODczMzYyNSw0Ljc0MTA1Mjk1IEM4LjQxMDc2NDkzLDQuNDYzMDQyNiA4LjQxMDc2NDkzLDQuMDEzODIzMTEgOC42ODczMzYyNSwzLjczNTgxMjc3IEwxMS4yMTU3MjA1LDEuMjA3NDI4NDkgQzExLjQ5MzczMDksMC45MzA4NTcxNjkgMTEuOTQyOTUwNCwwLjkzMDg1NzE2OSAxMi4yMjA5NjA3LDEuMjA3NDI4NDkgTDE0Ljc1NjMzMTksMy43MzU4MTI3NyBDMTUuMDMyMzI0NSw0LjAxMzcyMTE2IDE1LjAzMjMyNDUsNC40NjIyNzExOSAxNC43NTYzMzE5LDQuNzQwMTc5NTggQzE0LjQ3ODMyMTUsNS4wMTY3NTA5IDE0LjAyOTEwMiw1LjAxNjc1MDkgMTMuNzUxMDkxNyw0Ljc0MDE3OTU4IEwxMi4zNDQ5NzgyLDMuMzM1Mjc4MjYgTDEyLjM0NDk3ODIsMTAuODQyODgzNiBDMTIuMzQyMTI0MSwxMS4yMzYyNTM0IDEyLjAyMzkzNzQsMTEuNTU0NDQwMSAxMS42MzA1Njc3LDExLjU1NzI5NDEgQzExLjIzNzA4MjUsMTEuNTU2ODEyOSAxMC45MTc1MTE4LDExLjIzNzI0MjIgMTAuOTE3MDMwNiwxMC44NDI4ODM2IEwxMC45MTcwMzA2LDMuNTI0MjgzMDEgWiBNMS43MTM1MzcxMSwxMy44MDA5NjIyIEMxLjMxOTg1OTg2LDEzLjgwMDAwMiAxLjAwMDk2MDE5LDEzLjQ4MTEwMjQgMSwxMy4wODc0MjUxIEMxLDEyLjY5NDQxMiAxLjMyMDUyNDAyLDEyLjM3MzAxNDcgMS43MTQ0MTA0OCwxMi4zNzMwMTQ3IEwxNC4yNDU0MTQ4LDEyLjM3MzAxNDcgQzE0LjYzODQyNzksMTIuMzczMDE0NyAxNC45NTk4MjUzLDEyLjY5MzUzODcgMTQuOTU5ODI1MywxMy4wODc0MjUxIEMxNC45NTk4MjUzLDEzLjQ4MDQzODIgMTQuNjQ2Mjg4MiwxMy44MDA5NjIyIDE0LjI0NTQxNDgsMTMuODAwOTYyMiBMMS43MTM1MzcxMSwxMy44MDA5NjIyIFogTTEuNzE1MjgzODQsMTAuMjk5ODUwNyBDMS4zMjA5MjUzMywxMC4yOTkzNjk1IDEuMDAxMzU0NTgsOS45Nzk3OTg3MSAxLjAwMDg3MzM2LDkuNTg1NDQwMiBDMS4wMDA4NzMzNiw5LjE5MjQyNzEgMS4zMjEzOTczOSw4Ljg3MTkwMzA3IDEuNzE1MjgzODQsOC44NzE5MDMwNyBMNy4wNDgwMzQ5NCw4Ljg3MTkwMzA3IEM3LjQ0MTA0ODA0LDguODcxOTAzMDcgNy43NjI0NDU0Miw5LjE5MjQyNzEgNy43NjI0NDU0Miw5LjU4NTQ0MDIgQzcuNzYyNDQ1NDIsOS45Nzg0NTMzIDcuNDQxOTIxMzksMTAuMjk5ODUwNyA3LjA0ODAzNDk0LDEwLjI5OTg1MDcgTDEuNzE1MjgzODQsMTAuMjk5ODUwNyBaIE0xLjcxNTI4Mzg0LDYuNzk4NzM5MSBDMS4zMjEyNjU1Niw2Ljc5ODI1MDU2IDEuMDAxODM1MjcsNi40NzkyMTA3NyAxLjAwMDg3MzM2LDYuMDg1MTkzMzcgQzEuMDAwODczMzYsNS42OTIxODAyNiAxLjMyMTM5NzM5LDUuMzcwNzgyODkgMS43MTUyODM4NCw1LjM3MDc4Mjg5IEw3LjA0ODAzNDk0LDUuMzcwNzgyODkgQzcuNDQxMDQ4MDQsNS4zNzA3ODI4OSA3Ljc2MjQ5MTIzLDUuNjkxMzA2OTEgNy43NjI0OTEyMyw2LjA4NTE5MzM3IEM3Ljc2MzE0NjUxLDYuMjc0ODAwNzkgNy42ODgwNzU1Myw2LjQ1NjgzMjA5IDcuNTUzOTE5OTUsNi41OTA4MjM2NyBDNy40MTk3NjQzNiw2LjcyNDgxNTI2IDcuMjM3NjQxMzYsNi43OTk2NjM1MSA3LjA0ODAzNDk0LDYuNzk4NzM5MSBMMS43MTUyODM4NCw2Ljc5ODczOTEgWiBNMS43MTUyODM4NCwzLjI5NzYxODkyIEMxLjMyMTI2NTU2LDMuMjk3MTM4OTkgMS4wMDE4MzUyNiwyLjk3ODA5OTE5IDEuMDAwODczMzYsMi41ODQwODE3OSBDMS4wMDA4NzMzNiwyLjE5MTA2ODY5IDEuMzIxMzk3MzksMS44Njk2NzEzMSAxLjcxNTI4Mzg0LDEuODY5NjcxMzEgTDcuMDQ4MDM0OTQsMS44Njk2NzEzMSBDNy40MjU1Nzc4OSwxLjg5MjU1MjY2IDcuNzIwMDQ3NzIsMi4yMDU0MDk0MyA3LjcyMDA0NzcyLDIuNTgzNjQ1MTEgQzcuNzIwMDQ3NzIsMi45NjE4ODA4IDcuNDI1NTc3ODksMy4yNzQ3Mzc1NiA3LjA0ODAzNDk0LDMuMjk3NjE4OTIgTDEuNzE1MjgzODQsMy4yOTc2MTg5MiBaJyBpZD0n5b2i54q2JyBzdHJva2U9JyNGRkZGRkYnIHN0cm9rZS13aWR0aD0nMC4yJyBmaWxsPScjMUU4MEZGJyBmaWxsLXJ1bGU9J25vbnplcm8nPjwvcGF0aD48cmVjdCBpZD0n55+p5b2iJyB4PScwJyB5PScwJyB3aWR0aD0nMTQnIGhlaWdodD0nMTQnPjwvcmVjdD48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 15px; height: 14px; display: block;\" />\r\n        </span>\r\n      </button>\r\n      <!-- {{localizeService.getValue('ideCmp.schemaManager.columnOption.btnUp')}} -->\r\n      <button class=\"btn btn-link p-1 mr-1\" id=\"button-edit\" (click)=\"handleNodeUpAndDown('down')\">\r\n        <span id=\"btnDown\" class=\"f-icon pt-1 pr-3\" role=\"presentation\">\r\n          <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTZweCcgaGVpZ2h0PScxNHB4JyB2aWV3Qm94PScwIDAgMTYgMTQnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWIhue7hCAxNzwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9JzLjgIHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6YWN572uMScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEyMjEuMDAwMDAwLCAtMTk4LjAwMDAwMCknPjxnIGlkPSfliIbnu4QtMTMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMxMi4wMDAwMDAsIDE5NS4wMDAwMDApJz48ZyBpZD0n5YiG57uELTE3JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg5MDkuMDAwMDAwLCAzLjAwMDAwMCknPjxwYXRoIGQ9J00xMC45MTcwMzA2LDMuNTI0MjgzMDQgTDkuNzAxMzEwMDQsNC43NDEwNTI5NCBDOS41NjYzNzYwNyw0Ljg3Njg0MDQyIDkuMzgyNjk1NTEsNC45NTI5NTQ2MyA5LjE5MTI2NjM3LDQuOTUyNDM1NTUgQzkuMDAwODc4NzgsNC45NTM2MzQ1MiA4LjgxODg4NjM1LDQuODc3NDg4MzkgOC42ODczMzYyNSw0Ljc0MTA1Mjk0IEM4LjQxMDc2NDkyLDQuNDYzMDQyNiA4LjQxMDc2NDkyLDQuMDEzODIzMTEgOC42ODczMzYyNSwzLjczNTgxMjc2IEwxMS4yMTU3MjA2LDEuMjA3NDI4NDkgQzExLjQ5MzczMDksMC45MzA4NTcxNyAxMS45NDI5NTA0LDAuOTMwODU3MTcgMTIuMjIwOTYwNywxLjIwNzQyODQ5IEwxNC43NTYzMzE5LDMuNzM1ODEyNzYgQzE1LjAzMjMyNDUsNC4wMTM3MjExNSAxNS4wMzIzMjQ1LDQuNDYyMjcxMTkgMTQuNzU2MzMxOSw0Ljc0MDE3OTU4IEMxNC40NzgzMjE2LDUuMDE2NzUwOSAxNC4wMjkxMDIxLDUuMDE2NzUwOSAxMy43NTEwOTE3LDQuNzQwMTc5NTggTDEyLjM0NDk3ODIsMy4zMzUyNzgyIEwxMi4zNDQ5NzgyLDEwLjg0Mjg4MzcgQzEyLjM0MjEyNDEsMTEuMjM2MjUzNCAxMi4wMjM5Mzc1LDExLjU1NDQ0MDEgMTEuNjMwNTY3NywxMS41NTcyOTQxIEMxMS4yMzcwODI2LDExLjU1NjgxMjkgMTAuOTE3NTExOCwxMS4yMzcyNDIyIDEwLjkxNzAzMDYsMTAuODQyODgzNyBMMTAuOTE3MDMwNiwzLjUyNDI4MzA0IFogTTEuNzEzNTM3MTEsMTMuODAwOTYyMyBDMS4zMTk4NTk4NiwxMy44MDAwMDIxIDEuMDAwOTYwMTksMTMuNDgxMTAyNCAxLDEzLjA4NzQyNTEgQzEsMTIuNjk0NDEyIDEuMzIwNTI0MDIsMTIuMzczMDE0NyAxLjcxNDQxMDQ4LDEyLjM3MzAxNDcgTDE0LjI0NTQxNDksMTIuMzczMDE0NyBDMTQuNjM4NDI4LDEyLjM3MzAxNDcgMTQuOTU5ODI1NCwxMi42OTM1Mzg3IDE0Ljk1OTgyNTQsMTMuMDg3NDI1MSBDMTQuOTU5ODI1NCwxMy40ODA0MzgzIDE0LjY0NjI4ODIsMTMuODAwOTYyMyAxNC4yNDU0MTQ5LDEzLjgwMDk2MjMgTDEuNzEzNTM3MTEsMTMuODAwOTYyMyBaIE0xLjcxNTI4Mzg0LDEwLjI5OTg1MDcgQzEuMzIwOTI1MzMsMTAuMjk5MzY5NSAxLjAwMTM1NDU4LDkuOTc5Nzk4NzEgMS4wMDA4NzMzNiw5LjU4NTQ0MDIgQzEuMDAwODczMzYsOS4xOTI0MjcwOSAxLjMyMTM5NzM5LDguODcxOTAzMDcgMS43MTUyODM4NCw4Ljg3MTkwMzA3IEw3LjA0ODAzNDk0LDguODcxOTAzMDcgQzcuNDQxMDQ4MDQsOC44NzE5MDMwNyA3Ljc2MjQ0NTQxLDkuMTkyNDI3MDkgNy43NjI0NDU0MSw5LjU4NTQ0MDIgQzcuNzYyNDQ1NDEsOS45Nzg0NTMzIDcuNDQxOTIxMzksMTAuMjk5ODUwNyA3LjA0ODAzNDk0LDEwLjI5OTg1MDcgTDEuNzE1MjgzODQsMTAuMjk5ODUwNyBaIE0xLjcxNTI4Mzg0LDYuNzk4NzM5MSBDMS4zMjEyNjU1Niw2Ljc5ODI1MDU1IDEuMDAxODM1MjcsNi40NzkyMTA3NiAxLjAwMDg3MzM2LDYuMDg1MTkzMzYgQzEuMDAwODczMzYsNS42OTIxODAyNiAxLjMyMTM5NzM5LDUuMzcwNzgyODggMS43MTUyODM4NCw1LjM3MDc4Mjg4IEw3LjA0ODAzNDk0LDUuMzcwNzgyODggQzcuNDQxMDQ4MDQsNS4zNzA3ODI4OCA3Ljc2MjQ5MTIyLDUuNjkxMzA2OTEgNy43NjI0OTEyMiw2LjA4NTE5MzM2IEM3Ljc2MzE0NjUxLDYuMjc0ODAwNzkgNy42ODgwNzU1Myw2LjQ1NjgzMjA5IDcuNTUzOTE5OTQsNi41OTA4MjM2NyBDNy40MTk3NjQzNSw2LjcyNDgxNTI2IDcuMjM3NjQxMzYsNi43OTk2NjM1MSA3LjA0ODAzNDk0LDYuNzk4NzM5MSBMMS43MTUyODM4NCw2Ljc5ODczOTEgWiBNMS43MTUyODM4NCwzLjI5NzYxODkxIEMxLjMyMTI2NTU2LDMuMjk3MTM4OTkgMS4wMDE4MzUyNiwyLjk3ODA5OTE5IDEuMDAwODczMzYsMi41ODQwODE3OSBDMS4wMDA4NzMzNiwyLjE5MTA2ODY4IDEuMzIxMzk3MzksMS44Njk2NzEzMSAxLjcxNTI4Mzg0LDEuODY5NjcxMzEgTDcuMDQ4MDM0OTQsMS44Njk2NzEzMSBDNy40MjU1Nzc4OCwxLjg5MjU1MjY2IDcuNzIwMDQ3NzEsMi4yMDU0MDk0MiA3LjcyMDA0NzcxLDIuNTgzNjQ1MTEgQzcuNzIwMDQ3NzEsMi45NjE4ODA4IDcuNDI1NTc3ODgsMy4yNzQ3Mzc1NiA3LjA0ODAzNDk0LDMuMjk3NjE4OTEgTDEuNzE1MjgzODQsMy4yOTc2MTg5MSBaJyBpZD0n5b2i54q2JyBzdHJva2U9JyNGRkZGRkYnIHN0cm9rZS13aWR0aD0nMC4yJyBmaWxsPScjMUU4MEZGJyBmaWxsLXJ1bGU9J25vbnplcm8nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDcuOTgxNjYzLCA3LjQwMDQ4MSkgc2NhbGUoMSwgLTEpIHRyYW5zbGF0ZSgtNy45ODE2NjMsIC03LjQwMDQ4MSkgJz48L3BhdGg+PHJlY3QgaWQ9J+efqeW9oicgeD0nMCcgeT0nMCcgd2lkdGg9JzE0JyBoZWlnaHQ9JzE0Jz48L3JlY3Q+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 15px; height: 14px; display: block;\" />\r\n        </span>\r\n      </button>\r\n      <!-- {{localizeService.getValue('ideCmp.schemaManager.columnOption.btnDown')}} -->\r\n      <button *ngIf=\"controlType!='crosstab'\" class=\"btn btn-link p-1 mr-1\" id=\"button-edit\" (click)=\"handleNodeLeft()\">\r\n        <span id=\"btnLeft\" class=\"f-icon pt-1 pr-3\" role=\"presentation\">\r\n          <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTRweCcgaGVpZ2h0PScxNXB4JyB2aWV3Qm94PScwIDAgMTQgMTUnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWIhue7hCAxODwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9JzLjgIHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6YWN572uMScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEyNDguMDAwMDAwLCAtMTk4LjAwMDAwMCknPjxnIGlkPSfliIbnu4QtMTMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMxMi4wMDAwMDAsIDE5NS4wMDAwMDApJz48ZyBpZD0n5YiG57uELTE4JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg5MzYuMDAwMDAwLCAzLjAwMDAwMCknPjxyZWN0IGlkPSfnn6nlvaInIHg9JzAnIHk9JzAnIHdpZHRoPScxNCcgaGVpZ2h0PScxNCc+PC9yZWN0PjxwYXRoIGQ9J005LjkxNzAzMDU3LDMuNTI0MjgzMDEgTDguNzAxMzEwMDUsNC43NDEwNTI5NSBDOC41NjYzNzYwOCw0Ljg3Njg0MDQzIDguMzgyNjk1NTIsNC45NTI5NTQ2MyA4LjE5MTI2NjM3LDQuOTUyNDM1NTUgQzguMDAwODc4NzgsNC45NTM2MzQ1MyA3LjgxODg4NjM1LDQuODc3NDg4MzkgNy42ODczMzYyNSw0Ljc0MTA1Mjk1IEM3LjQxMDc2NDkzLDQuNDYzMDQyNiA3LjQxMDc2NDkzLDQuMDEzODIzMTEgNy42ODczMzYyNSwzLjczNTgxMjc3IEwxMC4yMTU3MjA1LDEuMjA3NDI4NDkgQzEwLjQ5MzczMDksMC45MzA4NTcxNjkgMTAuOTQyOTUwNCwwLjkzMDg1NzE2OSAxMS4yMjA5NjA3LDEuMjA3NDI4NDkgTDEzLjc1NjMzMTksMy43MzU4MTI3NyBDMTQuMDMyMzI0NSw0LjAxMzcyMTE2IDE0LjAzMjMyNDUsNC40NjIyNzExOSAxMy43NTYzMzE5LDQuNzQwMTc5NTggQzEzLjQ3ODMyMTUsNS4wMTY3NTA5IDEzLjAyOTEwMiw1LjAxNjc1MDkgMTIuNzUxMDkxNyw0Ljc0MDE3OTU4IEwxMS4zNDQ5NzgyLDMuMzM1Mjc4MjYgTDExLjM0NDk3ODIsMTAuODQyODgzNiBDMTEuMzQyMTI0MSwxMS4yMzYyNTM0IDExLjAyMzkzNzQsMTEuNTU0NDQwMSAxMC42MzA1Njc3LDExLjU1NzI5NDEgQzEwLjIzNzA4MjUsMTEuNTU2ODEyOSA5LjkxNzUxMTc5LDExLjIzNzI0MjIgOS45MTcwMzA1NywxMC44NDI4ODM2IEw5LjkxNzAzMDU3LDMuNTI0MjgzMDEgWiBNMC43MTM1MzcxMTQsMTMuODAwOTYyMiBDMC4zMTk4NTk4NTksMTMuODAwMDAyIDAuMDAwOTYwMTk0NTgxLDEzLjQ4MTEwMjQgMCwxMy4wODc0MjUxIEMwLDEyLjY5NDQxMiAwLjMyMDUyNDAyMywxMi4zNzMwMTQ3IDAuNzE0NDEwNDc5LDEyLjM3MzAxNDcgTDEzLjI0NTQxNDgsMTIuMzczMDE0NyBDMTMuNjM4NDI3OSwxMi4zNzMwMTQ3IDEzLjk1OTgyNTMsMTIuNjkzNTM4NyAxMy45NTk4MjUzLDEzLjA4NzQyNTEgQzEzLjk1OTgyNTMsMTMuNDgwNDM4MiAxMy42NDYyODgyLDEzLjgwMDk2MjIgMTMuMjQ1NDE0OCwxMy44MDA5NjIyIEwwLjcxMzUzNzExNCwxMy44MDA5NjIyIFogTTAuNzE1MjgzODQzLDEwLjI5OTg1MDcgQzAuMzIwOTI1MzMsMTAuMjk5MzY5NSAwLjAwMTM1NDU4NDA3LDkuOTc5Nzk4NzEgMC4wMDA4NzMzNjQxNTEsOS41ODU0NDAyIEMwLjAwMDg3MzM2NDE1MSw5LjE5MjQyNzEgMC4zMjEzOTczODcsOC44NzE5MDMwNyAwLjcxNTI4Mzg0Myw4Ljg3MTkwMzA3IEw2LjA0ODAzNDk0LDguODcxOTAzMDcgQzYuNDQxMDQ4MDQsOC44NzE5MDMwNyA2Ljc2MjQ0NTQyLDkuMTkyNDI3MSA2Ljc2MjQ0NTQyLDkuNTg1NDQwMiBDNi43NjI0NDU0Miw5Ljk3ODQ1MzMgNi40NDE5MjEzOSwxMC4yOTk4NTA3IDYuMDQ4MDM0OTQsMTAuMjk5ODUwNyBMMC43MTUyODM4NDMsMTAuMjk5ODUwNyBaIE0wLjcxNTI4Mzg0Myw2Ljc5ODczOTEgQzAuMzIxMjY1NTYxLDYuNzk4MjUwNTYgMC4wMDE4MzUyNjgwNyw2LjQ3OTIxMDc3IDAuMDAwODczMzY0MTUxLDYuMDg1MTkzMzcgQzAuMDAwODczMzY0MTUxLDUuNjkyMTgwMjYgMC4zMjEzOTczODcsNS4zNzA3ODI4OSAwLjcxNTI4Mzg0Myw1LjM3MDc4Mjg5IEw2LjA0ODAzNDk0LDUuMzcwNzgyODkgQzYuNDQxMDQ4MDQsNS4zNzA3ODI4OSA2Ljc2MjQ5MTIzLDUuNjkxMzA2OTEgNi43NjI0OTEyMyw2LjA4NTE5MzM3IEM2Ljc2MzE0NjUxLDYuMjc0ODAwNzkgNi42ODgwNzU1Myw2LjQ1NjgzMjA5IDYuNTUzOTE5OTUsNi41OTA4MjM2NyBDNi40MTk3NjQzNiw2LjcyNDgxNTI2IDYuMjM3NjQxMzYsNi43OTk2NjM1MSA2LjA0ODAzNDk0LDYuNzk4NzM5MSBMMC43MTUyODM4NDMsNi43OTg3MzkxIFogTTAuNzE1MjgzODQzLDMuMjk3NjE4OTIgQzAuMzIxMjY1NTU2LDMuMjk3MTM4OTkgMC4wMDE4MzUyNjE1MSwyLjk3ODA5OTE5IDAuMDAwODczMzY0MTUxLDIuNTg0MDgxNzkgQzAuMDAwODczMzY0MTUxLDIuMTkxMDY4NjkgMC4zMjEzOTczODcsMS44Njk2NzEzMSAwLjcxNTI4Mzg0MywxLjg2OTY3MTMxIEw2LjA0ODAzNDk0LDEuODY5NjcxMzEgQzYuNDI1NTc3ODksMS44OTI1NTI2NiA2LjcyMDA0NzcyLDIuMjA1NDA5NDMgNi43MjAwNDc3MiwyLjU4MzY0NTExIEM2LjcyMDA0NzcyLDIuOTYxODgwOCA2LjQyNTU3Nzg5LDMuMjc0NzM3NTYgNi4wNDgwMzQ5NCwzLjI5NzYxODkyIEwwLjcxNTI4Mzg0MywzLjI5NzYxODkyIFonIGlkPSflvaLnirYnIHN0cm9rZT0nI0ZGRkZGRicgc3Ryb2tlLXdpZHRoPScwLjInIGZpbGw9JyMxRTgwRkYnIGZpbGwtcnVsZT0nbm9uemVybycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi45ODE2NjMsIDcuNDAwNDgxKSByb3RhdGUoLTkwLjAwMDAwMCkgdHJhbnNsYXRlKC02Ljk4MTY2MywgLTcuNDAwNDgxKSAnPjwvcGF0aD48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 15px; height: 14px; display: block;\" />\r\n        </span>\r\n      </button>\r\n      <!-- {{localizeService.getValue('ideCmp.schemaManager.columnOption.btnLeft')}} -->\r\n      <button *ngIf=\"controlType!='crosstab'\" class=\"btn btn-link p-1 mr-1\" id=\"button-edit\"\r\n        (click)=\"handleNodeRight()\">\r\n        <span id=\"btnRight\" class=\"f-icon pt-1 pr-3\" role=\"presentation\">\r\n          <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTRweCcgaGVpZ2h0PScxNXB4JyB2aWV3Qm94PScwIDAgMTQgMTUnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuWIhue7hCAxOTwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9JzLjgIHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0nMDHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6YWN572uMycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTEyNzQuMDAwMDAwLCAtMTk4LjAwMDAwMCknPjxnIGlkPSfliIbnu4QtMTMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMxMi4wMDAwMDAsIDE5NS4wMDAwMDApJz48ZyBpZD0n5YiG57uELTE5JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg5NjIuMDAwMDAwLCAzLjAwMDAwMCknPjxwYXRoIGQ9J005LjkxNzAzMDU3LDMuNTI0MjgzMDEgTDguNzAxMzEwMDUsNC43NDEwNTI5NSBDOC41NjYzNzYwOCw0Ljg3Njg0MDQzIDguMzgyNjk1NTIsNC45NTI5NTQ2MyA4LjE5MTI2NjM3LDQuOTUyNDM1NTUgQzguMDAwODc4NzgsNC45NTM2MzQ1MyA3LjgxODg4NjM1LDQuODc3NDg4MzkgNy42ODczMzYyNSw0Ljc0MTA1Mjk1IEM3LjQxMDc2NDkzLDQuNDYzMDQyNiA3LjQxMDc2NDkzLDQuMDEzODIzMTEgNy42ODczMzYyNSwzLjczNTgxMjc3IEwxMC4yMTU3MjA1LDEuMjA3NDI4NDkgQzEwLjQ5MzczMDksMC45MzA4NTcxNjkgMTAuOTQyOTUwNCwwLjkzMDg1NzE2OSAxMS4yMjA5NjA3LDEuMjA3NDI4NDkgTDEzLjc1NjMzMTksMy43MzU4MTI3NyBDMTQuMDMyMzI0NSw0LjAxMzcyMTE2IDE0LjAzMjMyNDUsNC40NjIyNzExOSAxMy43NTYzMzE5LDQuNzQwMTc5NTggQzEzLjQ3ODMyMTUsNS4wMTY3NTA5IDEzLjAyOTEwMiw1LjAxNjc1MDkgMTIuNzUxMDkxNyw0Ljc0MDE3OTU4IEwxMS4zNDQ5NzgyLDMuMzM1Mjc4MjYgTDExLjM0NDk3ODIsMTAuODQyODgzNiBDMTEuMzQyMTI0MSwxMS4yMzYyNTM0IDExLjAyMzkzNzQsMTEuNTU0NDQwMSAxMC42MzA1Njc3LDExLjU1NzI5NDEgQzEwLjIzNzA4MjUsMTEuNTU2ODEyOSA5LjkxNzUxMTc5LDExLjIzNzI0MjIgOS45MTcwMzA1NywxMC44NDI4ODM2IEw5LjkxNzAzMDU3LDMuNTI0MjgzMDEgWiBNMC43MTM1MzcxMTQsMTMuODAwOTYyMiBDMC4zMTk4NTk4NTksMTMuODAwMDAyIDAuMDAwOTYwMTk0NTgxLDEzLjQ4MTEwMjQgMCwxMy4wODc0MjUxIEMwLDEyLjY5NDQxMiAwLjMyMDUyNDAyMywxMi4zNzMwMTQ3IDAuNzE0NDEwNDc5LDEyLjM3MzAxNDcgTDEzLjI0NTQxNDgsMTIuMzczMDE0NyBDMTMuNjM4NDI3OSwxMi4zNzMwMTQ3IDEzLjk1OTgyNTMsMTIuNjkzNTM4NyAxMy45NTk4MjUzLDEzLjA4NzQyNTEgQzEzLjk1OTgyNTMsMTMuNDgwNDM4MiAxMy42NDYyODgyLDEzLjgwMDk2MjIgMTMuMjQ1NDE0OCwxMy44MDA5NjIyIEwwLjcxMzUzNzExNCwxMy44MDA5NjIyIFogTTAuNzE1MjgzODQzLDEwLjI5OTg1MDcgQzAuMzIwOTI1MzMsMTAuMjk5MzY5NSAwLjAwMTM1NDU4NDA3LDkuOTc5Nzk4NzEgMC4wMDA4NzMzNjQxNTEsOS41ODU0NDAyIEMwLjAwMDg3MzM2NDE1MSw5LjE5MjQyNzEgMC4zMjEzOTczODcsOC44NzE5MDMwNyAwLjcxNTI4Mzg0Myw4Ljg3MTkwMzA3IEw2LjA0ODAzNDk0LDguODcxOTAzMDcgQzYuNDQxMDQ4MDQsOC44NzE5MDMwNyA2Ljc2MjQ0NTQyLDkuMTkyNDI3MSA2Ljc2MjQ0NTQyLDkuNTg1NDQwMiBDNi43NjI0NDU0Miw5Ljk3ODQ1MzMgNi40NDE5MjEzOSwxMC4yOTk4NTA3IDYuMDQ4MDM0OTQsMTAuMjk5ODUwNyBMMC43MTUyODM4NDMsMTAuMjk5ODUwNyBaIE0wLjcxNTI4Mzg0Myw2Ljc5ODczOTEgQzAuMzIxMjY1NTYxLDYuNzk4MjUwNTYgMC4wMDE4MzUyNjgwNyw2LjQ3OTIxMDc3IDAuMDAwODczMzY0MTUxLDYuMDg1MTkzMzcgQzAuMDAwODczMzY0MTUxLDUuNjkyMTgwMjYgMC4zMjEzOTczODcsNS4zNzA3ODI4OSAwLjcxNTI4Mzg0Myw1LjM3MDc4Mjg5IEw2LjA0ODAzNDk0LDUuMzcwNzgyODkgQzYuNDQxMDQ4MDQsNS4zNzA3ODI4OSA2Ljc2MjQ5MTIzLDUuNjkxMzA2OTEgNi43NjI0OTEyMyw2LjA4NTE5MzM3IEM2Ljc2MzE0NjUxLDYuMjc0ODAwNzkgNi42ODgwNzU1Myw2LjQ1NjgzMjA5IDYuNTUzOTE5OTUsNi41OTA4MjM2NyBDNi40MTk3NjQzNiw2LjcyNDgxNTI2IDYuMjM3NjQxMzYsNi43OTk2NjM1MSA2LjA0ODAzNDk0LDYuNzk4NzM5MSBMMC43MTUyODM4NDMsNi43OTg3MzkxIFogTTAuNzE1MjgzODQzLDMuMjk3NjE4OTIgQzAuMzIxMjY1NTU2LDMuMjk3MTM4OTkgMC4wMDE4MzUyNjE1MSwyLjk3ODA5OTE5IDAuMDAwODczMzY0MTUxLDIuNTg0MDgxNzkgQzAuMDAwODczMzY0MTUxLDIuMTkxMDY4NjkgMC4zMjEzOTczODcsMS44Njk2NzEzMSAwLjcxNTI4Mzg0MywxLjg2OTY3MTMxIEw2LjA0ODAzNDk0LDEuODY5NjcxMzEgQzYuNDI1NTc3ODksMS44OTI1NTI2NiA2LjcyMDA0NzcyLDIuMjA1NDA5NDMgNi43MjAwNDc3MiwyLjU4MzY0NTExIEM2LjcyMDA0NzcyLDIuOTYxODgwOCA2LjQyNTU3Nzg5LDMuMjc0NzM3NTYgNi4wNDgwMzQ5NCwzLjI5NzYxODkyIEwwLjcxNTI4Mzg0MywzLjI5NzYxODkyIFonIGlkPSflvaLnirYnIHN0cm9rZT0nI0ZGRkZGRicgc3Ryb2tlLXdpZHRoPScwLjInIGZpbGw9JyMxRTgwRkYnIGZpbGwtcnVsZT0nbm9uemVybycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi45ODE2NjMsIDcuNDAwNDgxKSBzY2FsZSgtMSwgMSkgcm90YXRlKC05MC4wMDAwMDApIHRyYW5zbGF0ZSgtNi45ODE2NjMsIC03LjQwMDQ4MSkgJz48L3BhdGg+PHJlY3QgaWQ9J+efqeW9oicgeD0nMCcgeT0nMScgd2lkdGg9JzE0JyBoZWlnaHQ9JzE0Jz48L3JlY3Q+PC9nPjwvZz48L2c+PC9nPjwvc3ZnPg==\" style=\"width: 15px; height: 14px; display: block;\" />\r\n        </span>\r\n      </button>\r\n      <button *ngIf=\"controlType!='crosstab'\" class=\"btn btn-link p-1 mr-1\" id=\"button-edit\"\r\n        (click)=\"handleNodeUpAndDown('top')\">\r\n        <span id=\"btnTop\" class=\"f-icon pt-1 pr-3\" role=\"presentation\">\r\n          <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTNweCcgaGVpZ2h0PScxNHB4JyB2aWV3Qm94PScwIDAgMTMgMTQnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuW9oueKtjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9JzLjgIHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0n5qC85byP5pa55qGI566h55CGLeWIl+mFjee9rjEnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xMjQ4LjAwMDAwMCwgLTIwMi4wMDAwMDApJyBmaWxsPScjMUU4MEZGJyBmaWxsLXJ1bGU9J25vbnplcm8nPjxnIGlkPSfliIbnu4QtMjAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDEwMDkuMDAwMDAwLCAxOTguMDAwMDAwKSc+PGcgaWQ9J+WIhue7hC0xOScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjEzLjAwMDAwMCwgMy4wMDAwMDApJz48ZyBpZD0n572u6aG2JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyNi4wMDAwMDAsIDEuMDAwMDAwKSc+PHBhdGggZD0nTTExLjc3ODcyMzgsNy4xOTM2NjgyMiBMNi45MjYyNDQyMiwyLjMyNjIyMzk3IEM2LjgyMzM0MjU0LDIuMjIzMzYwMTQgNi42ODM0MzQ1NiwyLjE2NjM0OTY3IDYuNTM4MDg5MSwyLjE2ODA1NjQgQzYuNTE5NzA4NDksMi4xNjU4ODk3MyA2LjUwMzQ5MDMsMi4xNTcyMjMwMiA2LjQ4NDAyODUsMi4xNTcyMjMwMiBDNi40MDgyNTQzMywyLjE1Nzc4NTQ2IDYuMzMzNDU1NjEsMi4xNzQzOTkwOCA2LjI2NDU0MjQ2LDIuMjA1OTczMjkgQzYuMTk0MTYxNzYsMi4yMzE5ODg3OSA2LjEzMDA1NDEzLDIuMjcyNTk2MzQgNi4wNzY0MTE1NywyLjMyNTE0MDYzIEwxLjY5NzUwMjg3LDYuNjgxMjQ4NjUgQzEuNDg3MzEwNjgsNi44OTI3NTE4OSAxLjQ4ODAzNjgsNy4yMzQ5Mzg4NyAxLjY5OTEyNDcsNy40NDU1NDQ2NSBDMS45MTAyMTI1OSw3LjY1NjE1MDQyIDIuMjUxNzI3NTksNy42NTU0MjI4OCAyLjQ2MTkxOTc4LDcuNDQzOTE5NjMgTDUuOTQzNDIyNDksMy45Nzk0MDAwMSBMNS45NDM0MjI0OSwxMy40NjQwMzcxIEM1Ljk0MzQyMjQ5LDEzLjc2MTk1NTQgNi4xODU2MTM5OSwxNC4wMDI0NTY4IDYuNDg0MDI4NSwxNC4wMDI0NTY4IEM2Ljc4MjQ0MzAxLDE0LjAwMjQ1NjggNy4wMjQ2MzQ1MSwxMy43NjE5NTU0IDcuMDI0NjM0NTEsMTMuNDY0MDM3MSBMNy4wMjQ2MzQ1MSwzLjk1MjMxNjUyIEwxMS4wMTEwNjMyLDcuOTUzMDg5MTkgQzExLjIyMTU3MjMsOC4xNjUxNDY4MyAxMS41NjM3NzcxLDguMTY2MTE2NzggMTEuNzc1NDgwMSw3Ljk1NTI1NTg2IEMxMS44NzczODg5LDcuODU0OTk1NTMgMTEuOTM0OTc3Nyw3LjcxODAxNzA5IDExLjkzNTM4NjIsNy41NzQ5MTQ3NyBDMTEuOTM1NzkwMyw3LjQzMTgxMjQ2IDExLjg3ODk4MDMsNy4yOTQ1MDc5MiAxMS43Nzc2NDI2LDcuMTkzNjY4MjIgTDExLjc3ODcyMzgsNy4xOTM2NjgyMiBaIE0xMi40Mjc0NTEsMS4wODAzODM1OSBMMC41NDA2MDYwMTEsMS4wODAzODM1OSBDMC4yNDMwNTUzMywxLjA4MDk4MzQ0IDAuMDAxMTkxOTg1NDIsMC44NDAwOTgyMjkgMi44NDIxNzA5NGUtMTQsMC41NDE5NjM4NjEgQzIuODQyMTcwOTRlLTE0LDAuMjQ1MTI4ODQ4IDAuMjQyMTkxNDk5LDAuMDAzNTQ0MTM2OCAwLjU0MDYwNjAxMSwwLjAwMzU0NDE1MDU1IEwxMi40Mjc0NTEsMC4wMDM1NDQxNTA1NSBDMTIuNjI3NTY3NywtMC4wMDkxODE4ODE0MSAxMi44MTgxNjQ2LDAuMDkwNTY2NDk5MiAxMi45MjIwNzA1LDAuMjYyNDAxOTEgQzEzLjAyNTk3NjUsMC40MzQyMzczMjEgMTMuMDI1OTc2NSwwLjY0OTY5MDQxNSAxMi45MjIwNzA1LDAuODIxNTI1ODI2IEMxMi44MTgxNjQ2LDAuOTkzMzYxMjM2IDEyLjYyNzU2NzcsMS4wOTMxMDk2MiAxMi40Mjc0NTEsMS4wODAzODM1OSBaJyBpZD0n5b2i54q2Jz48L3BhdGg+PC9nPjwvZz48L2c+PC9nPjwvZz48L3N2Zz4=\" style=\"width: 15px; height: 14px; display: block;\" />\r\n        </span>\r\n      </button>\r\n      <button *ngIf=\"controlType!='crosstab'\" class=\"btn btn-link p-1 mr-1\" id=\"button-edit\"\r\n        (click)=\"handleNodeUpAndDown('bottom')\">\r\n        <span id=\"btnBottom\" class=\"f-icon pt-1 pr-3\" role=\"presentation\">\r\n          <img src=\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB3aWR0aD0nMTNweCcgaGVpZ2h0PScxNHB4JyB2aWV3Qm94PScwIDAgMTMgMTQnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+PHRpdGxlPuW9oueKtjwvdGl0bGU+PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+PGcgaWQ9JzLjgIHmoLzlvI/mlrnmoYjnrqHnkIYt5YiX6K6+572uJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz48ZyBpZD0n5qC85byP5pa55qGI566h55CGLeWIl+mFjee9rjEnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xMjczLjAwMDAwMCwgLTIwMi4wMDAwMDApJyBmaWxsPScjMUU4MEZGJyBmaWxsLXJ1bGU9J25vbnplcm8nPjxnIGlkPSfliIbnu4QtMjAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDEwMDkuMDAwMDAwLCAxOTguMDAwMDAwKSc+PGcgaWQ9J+WIhue7hC0xOScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjEzLjAwMDAwMCwgMy4wMDAwMDApJz48ZyBpZD0n572u6aG2JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyNi4wMDAwMDAsIDEuMDAwMDAwKSc+PHBhdGggZD0nTTM2Ljc3ODcyMzgsNy4xOTM2NjgyMiBMMzEuOTI2MjQ0MiwyLjMyNjIyMzk3IEMzMS44MjMzNDI1LDIuMjIzMzYwMTQgMzEuNjgzNDM0NiwyLjE2NjM0OTY3IDMxLjUzODA4OTEsMi4xNjgwNTY0IEMzMS41MTk3MDg1LDIuMTY1ODg5NzMgMzEuNTAzNDkwMywyLjE1NzIyMzAyIDMxLjQ4NDAyODUsMi4xNTcyMjMwMiBDMzEuNDA4MjU0MywyLjE1Nzc4NTQ2IDMxLjMzMzQ1NTYsMi4xNzQzOTkwOCAzMS4yNjQ1NDI1LDIuMjA1OTczMjkgQzMxLjE5NDE2MTgsMi4yMzE5ODg3OSAzMS4xMzAwNTQxLDIuMjcyNTk2MzQgMzEuMDc2NDExNiwyLjMyNTE0MDYzIEwyNi42OTc1MDI5LDYuNjgxMjQ4NjUgQzI2LjQ4NzMxMDcsNi44OTI3NTE4OSAyNi40ODgwMzY4LDcuMjM0OTM4ODcgMjYuNjk5MTI0Nyw3LjQ0NTU0NDY1IEMyNi45MTAyMTI2LDcuNjU2MTUwNDIgMjcuMjUxNzI3Niw3LjY1NTQyMjg4IDI3LjQ2MTkxOTgsNy40NDM5MTk2MyBMMzAuOTQzNDIyNSwzLjk3OTQwMDAxIEwzMC45NDM0MjI1LDEzLjQ2NDAzNzEgQzMwLjk0MzQyMjUsMTMuNzYxOTU1NCAzMS4xODU2MTQsMTQuMDAyNDU2OCAzMS40ODQwMjg1LDE0LjAwMjQ1NjggQzMxLjc4MjQ0MywxNC4wMDI0NTY4IDMyLjAyNDYzNDUsMTMuNzYxOTU1NCAzMi4wMjQ2MzQ1LDEzLjQ2NDAzNzEgTDMyLjAyNDYzNDUsMy45NTIzMTY1MiBMMzYuMDExMDYzMiw3Ljk1MzA4OTE5IEMzNi4yMjE1NzIzLDguMTY1MTQ2ODMgMzYuNTYzNzc3MSw4LjE2NjExNjc4IDM2Ljc3NTQ4MDEsNy45NTUyNTU4NiBDMzYuODc3Mzg4OSw3Ljg1NDk5NTUzIDM2LjkzNDk3NzcsNy43MTgwMTcwOSAzNi45MzUzODYyLDcuNTc0OTE0NzcgQzM2LjkzNTc5MDMsNy40MzE4MTI0NiAzNi44Nzg5ODAzLDcuMjk0NTA3OTIgMzYuNzc3NjQyNiw3LjE5MzY2ODIyIEwzNi43Nzg3MjM4LDcuMTkzNjY4MjIgWiBNMzcuNDI3NDUxLDEuMDgwMzgzNTkgTDI1LjU0MDYwNiwxLjA4MDM4MzU5IEMyNS4yNDMwNTUzLDEuMDgwOTgzNDQgMjUuMDAxMTkyLDAuODQwMDk4MjI5IDI1LDAuNTQxOTYzODYxIEMyNSwwLjI0NTEyODg0OCAyNS4yNDIxOTE1LDAuMDAzNTQ0MTM2OCAyNS41NDA2MDYsMC4wMDM1NDQxNTA1NSBMMzcuNDI3NDUxLDAuMDAzNTQ0MTUwNTUgQzM3LjYyNzU2NzcsLTAuMDA5MTgxODgxNDEgMzcuODE4MTY0NiwwLjA5MDU2NjQ5OTIgMzcuOTIyMDcwNSwwLjI2MjQwMTkxIEMzOC4wMjU5NzY1LDAuNDM0MjM3MzIxIDM4LjAyNTk3NjUsMC42NDk2OTA0MTUgMzcuOTIyMDcwNSwwLjgyMTUyNTgyNiBDMzcuODE4MTY0NiwwLjk5MzM2MTIzNiAzNy42Mjc1Njc3LDEuMDkzMTA5NjIgMzcuNDI3NDUxLDEuMDgwMzgzNTkgWicgaWQ9J+W9oueKticgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMzEuNTAwMDAwLCA3LjAwMjQ1Nykgcm90YXRlKDE4MC4wMDAwMDApIHRyYW5zbGF0ZSgtMzEuNTAwMDAwLCAtNy4wMDI0NTcpICc+PC9wYXRoPjwvZz48L2c+PC9nPjwvZz48L2c+PC9zdmc+\" style=\"width: 15px; height: 14px; display: block;\" />\r\n        </span>\r\n      </button>\r\n      <!-- {{localizeService.getValue('ideCmp.schemaManager.columnOption.btnRight')}} -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"f-utils-fill-flex-row\">\r\n  <div (resized)=\"onResized($event)\"\r\n    [class]=\"colInfoChanged == true ? 'colInfoDisplay1 d-flex flex-row flex-fill farris-overflow-hidden' : 'colInfoDisplay2 d-flex flex-row flex-fill farris-overflow-hidden'\">\r\n    <farris-treetable #schemaTree [columns]=\"cols\" class=\"w-100\" [data]=\"schemaTreeData\" [idField]=\"'id'\"\r\n      [keepSelect]=\"false\" [fit]=\"true\" [showCheckAll]=\"false\" [resizableColumns]=\"true\" [showHeader]=\"true\"\r\n      [striped]=\"false\" [fixedHeader]=\"true\" [width]=\"size.width\" [height]=\"size.height\"\r\n      (nodeSelected)=\"handleTreeNodeSelected($event)\" (nodeUnSelect)=\"handleTreeNodeUnSelected($event)\">\r\n      <!-- <tt-column [field]=\"'name'\" [width]=\"100\" [align]=\"'left'\" [hAlign]=\"'center'\"></tt-column> -->\r\n    </farris-treetable>\r\n    <ng-template #nameCell let-ctx>\r\n      <span *ngIf=\"findEditable(ctx.node.data['id']) ? !findEditable(ctx.node.data['id']).editable : false\">{{ctx.node.data['name']}}</span>\r\n      <input-group *ngIf=\"findEditable(ctx.node.data['id']) ? findEditable(ctx.node.data['id']).editable : false\" [(ngModel)]=\"ctx.node.data['name']\"></input-group>\r\n    </ng-template>\r\n    <ng-template #bindFieldCell let-ctx>\r\n      <span *ngIf=\"findEditable(ctx.node.data['id']) ? !findEditable(ctx.node.data['id']).editable : false\">{{ctx.node.data['bindField']}}</span>\r\n      <farris-combo-list *ngIf=\"findEditable(ctx.node.data['id']) ? findEditable(ctx.node.data['id']).editable : false\" [(ngModel)]=\"ctx.node.data['bindField']\" [textField]=\"'name'\" [idField]=\"'value'\" (ngModelChange)=\"handleNgModelChange(ctx.node)\"\r\n        [data]=\"colListData\" [enableClear]=\"false\"></farris-combo-list>\r\n    </ng-template>\r\n    <ng-template #colAlignCell let-ctx>\r\n      <span *ngIf=\"findEditable(ctx.node.data['id']) ? !findEditable(ctx.node.data['id']).editable : false\">{{getAlignName(ctx.node.data['align'])}}</span>\r\n      <farris-combo-list *ngIf=\"findEditable(ctx.node.data['id']) ? findEditable(ctx.node.data['id']).editable : false\" [(ngModel)]=\"ctx.node.data['align']\" [data]=\"alignData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n    </ng-template>\r\n    <ng-template #colWidthCell let-ctx>\r\n      <span *ngIf=\"findEditable(ctx.node.data['id']) ? !findEditable(ctx.node.data['id']).editable : false\">{{ctx.node.data['colWidth']}}</span>\r\n      <farris-number-spinner *ngIf=\"findEditable(ctx.node.data['id']) ? findEditable(ctx.node.data['id']).editable : false\" [(ngModel)]=\"ctx.node.data['colWidth']\" [min]=\"1\" (ngModelChange)=\"handleNgModelChange(ctx.node)\">\r\n      </farris-number-spinner>\r\n    </ng-template>\r\n    <ng-template #visibleCell let-ctx>\r\n      <span *ngIf=\"findEditable(ctx.node.data['id']) ? !findEditable(ctx.node.data['id']).editable : false\">{{ctx.node.data['visible']}}</span>\r\n      <div *ngIf=\"findEditable(ctx.node.data['id']) ? findEditable(ctx.node.data['id']).editable : false\" class=\"farris-input-wrap farris-checkradio-hor\">\r\n        <div class=\"custom-control custom-checkbox mb-0\">\r\n          <input type=\"checkbox\" [(ngModel)]=\"ctx.node.data['visible']\" class=\"custom-control-input\"\r\n            id=\"{{colVisibleId + ctx.node.id}}\" checked=\"\" (click)=\"handleIsGroupClick(ctx.node.data)\">\r\n          <label class=\"custom-control-label\" for=\"{{colVisibleId + ctx.node.id}}\"></label>\r\n          <!-- {{localizeService.getValue('ideCmp.schemaManager.columnOption.show')}} -->\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #isFixedCell let-ctx>\r\n      <span *ngIf=\"findEditable(ctx.node.data['id']) ? !findEditable(ctx.node.data['id']).editable : false\">{{ctx.node.data['isFixed']}}</span>\r\n      <div *ngIf=\"findEditable(ctx.node.data['id']) ? findEditable(ctx.node.data['id']).editable : false\" class=\"farris-input-wrap farris-checkradio-hor\">\r\n        <div class=\"custom-control custom-checkbox mb-0\">\r\n          <input type=\"checkbox\" [(ngModel)]=\"ctx.node.data['isFixed']\" class=\"custom-control-input\"\r\n            id=\"{{colFixedId + ctx.node.id}}\" checked=\"\">\r\n          <label class=\"custom-control-label\" for=\"{{colFixedId + ctx.node.id}}\"></label>\r\n          <!-- {{localizeService.getValue('ideCmp.schemaManager.columnOption.fixColumn')}} -->\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #autoFixCell let-ctx>\r\n      <span *ngIf=\"findEditable(ctx.node.data['id']) ? !findEditable(ctx.node.data['id']).editable : false\">{{getComboboxName(0, !ctx.node.data['autoFit'] && !ctx.node.data['wordWrap'] ? -1 : ctx.node.data['autoFit'] ? 1 : 2)}}</span>\r\n      <farris-combo-list *ngIf=\"findEditable(ctx.node.data['id']) ? findEditable(ctx.node.data['id']).editable : false\" (ngModelChange)=\"handleNgModelChange(ctx.node)\"\r\n        [ngModel]=\"!ctx.node.data['autoFit'] && !ctx.node.data['wordWrap'] ? -1 : ctx.node.data['autoFit'] ? 1 : 2\"\r\n        [textField]=\"'name'\" [idField]=\"'value'\" [data]=\"dataShowOption\" [enableClear]=\"false\"\r\n        (valueChange)=\"onValueChange($event)\"></farris-combo-list>\r\n    </ng-template>\r\n  </div>\r\n  <div [class]=\"colInfoChanged == false ? 'colInfoDisplay1 d-flex flex-row flex-fill' : 'colInfoDisplay2 d-flex flex-row flex-fill'\">\r\n    <perfect-scrollbar [config]=\"{}\">\r\n      <div class=\"flex-fill farris-split-section farris-overflow-hidden\">\r\n        <div class=\"col-12 farris-form farris-card-content-bg\">\r\n          <fieldSet farrisFold>\r\n            <legend class=\"ml-2 f-legend-icon f-legend-show\">\r\n              {{localizeService.getValue('ideCmp.schemaManager.columnOption.selection2')}}</legend>\r\n            <div class=\"d-flex flex-wrap mb-2\">\r\n              <!-- <div class=\"col-12 col-md-12 col-lg-12\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colAlign\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.align')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colAlign\" [(ngModel)]=\"alignSelectValue\" [data]=\"alignData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"controlType=='list' || controlType=='treelist'\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"  [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{colIsRedId}}\">\r\n                      <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.isRed')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" [(ngModel)]=\"colIsRed\" class=\"custom-control-input\"\r\n                          id=\"{{colIsRedId}}\" checked=\"\">\r\n                        <label class=\"custom-control-label\" for=\"{{colIsRedId}}\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"type=='enum'\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\"  [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colShowType\">\r\n                      <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.showType')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colShowType\" [(ngModel)]=\"showTypeSelectValue\" [textField]=\"'name'\"\r\n                        [idField]=\"'value'\" [data]=\"enumType\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colFormatType\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.formatType')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colFormatType\" [(ngModel)]=\"formatTypeSelectValue\" [data]=\"formatTypeData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"formatTypeSelectValue==1\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colNumFormat\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.numberFormat')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <input-group [(ngModel)]=\"formatText\" id=\"colNumFormat\"></input-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"formatTypeSelectValue==1 && controlType != 'crosstab'\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colNumFormat\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.numberField')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list [(ngModel)]=\"formatField\" [textField]=\"'name'\" [idField]=\"'value'\"\r\n                        [data]=\"colListData\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"formatTypeSelectValue==2\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colDateFormat\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.dateFormat')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <input-group [(ngModel)]=\"formatText\" id=\"colDateFormat\"></input-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"formatTypeSelectValue==3\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colLogicFormat\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.enumFormat')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <input-group [(ngModel)]=\"formatText\" id=\"colLogicFormat\"></input-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"controlType!='crosstab'\">\r\n                <!-- || (controlType=='crosstab' && (dimensionSelectValue ===1 || dimensionSelectValue ===3)) -->\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colSort\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.sort')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colSort\" [(ngModel)]=\"sortSelectValue\" [data]=\"sortData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"(controlType!='crosstab' && controlType!='treelist' && isOrNotPaging)\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colPageText\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.pageTotal')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <input-group [(ngModel)]=\"pageText\" id=\"colPageText\"></input-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"(controlType!='crosstab' && controlType!='treelist' && isOrNotPaging)\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colPageAggre\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.pageTotalType')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colPageAggre\" [(ngModel)]=\"pageSelectValue\" [data]=\"aggreData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"controlType=='crosstab'\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colDimension\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.dimension')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colDimension\" [(ngModel)]=\"dimensionSelectValue\" [data]=\"dimensionData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\"\r\n                *ngIf=\"(controlType!='crosstab' && controlType!='treelist') || (controlType=='crosstab' && (dimensionSelectValue ===1 || dimensionSelectValue ===2))\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"{{colIsGroupId}}\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.group')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap farris-checkradio-hor\">\r\n                      <div class=\"custom-control custom-checkbox mb-0\">\r\n                        <input type=\"checkbox\" [(ngModel)]=\"colIsGroup\" class=\"custom-control-input\"\r\n                          id=\"{{colIsGroupId}}\" checked=\"\">\r\n                        <label class=\"custom-control-label\" for=\"{{colIsGroupId}}\"\r\n                          (click)=\"handleIsGroupClick('')\"></label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\" *ngIf=\"controlType=='crosstab' && dimensionSelectValue ===1 \">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"button-search\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupColor')}}:</span>\r\n                    </label>\r\n                    <button class=\"k-button k-button-icon k-flat\" id=\"button-search\" [(colorPicker)]=\"rowColor\"\r\n                      [cpOKButton]=\"true\" [cpCancelButton]=\"true\">\r\n                      <span [style.border-bottom-color]=\"rowColor\" class=\"k-icon k-i-foreground-color\"\r\n                        style=\"border-bottom-width: 2px; border-bottom-style: solid; margin-top: -2px;\"\r\n                        role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\"\r\n                *ngIf=\"(controlType!='crosstab' && controlType!='treelist') || (controlType=='crosstab' && dimensionSelectValue ===3 )\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colGroupText\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupTotal')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <input-group [(ngModel)]=\"groupText\" id=\"colGroupText\"></input-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\"\r\n                *ngIf=\"(controlType!='crosstab' && controlType!='treelist')\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colGroupAggre\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupSubTotalType')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colGroupAggre\" [disabled]=\"colIsGroup\" [(ngModel)]=\"groupSubSelectValue\"\r\n                        [data]=\"aggreData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                      </farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\"\r\n                *ngIf=\"(controlType!='crosstab' && controlType!='treelist') || (controlType=='crosstab' && dimensionSelectValue ===3)\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colGroupAggre\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.groupTotalType')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colGroupAggre\" [disabled]=\"colIsGroup\" [(ngModel)]=\"groupSelectValue\"\r\n                        [data]=\"aggreData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                      </farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\"\r\n                *ngIf=\"(controlType!='crosstab' && !isOrNotPaging) || (controlType=='crosstab' && dimensionSelectValue ===3) \">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colTotalText\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateTotal')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <input-group [(ngModel)]=\"totalText\" id=\"colTotalText\"></input-group>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-12 col-lg-12\"\r\n                *ngIf=\"(controlType!='crosstab' && !isOrNotPaging) || (controlType=='crosstab' && dimensionSelectValue ===3)\">\r\n                <div class=\"farris-group-wrap\" [class.form-inline]=\"formInline\" [class.farris-form-inline]=\"formInline\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\" for=\"colTotalAggre\">\r\n                      <span\r\n                        class=\"farris-label-text\">{{localizeService.getValue('ideCmp.schemaManager.columnOption.totalType')}}:</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"colTotalAggre\" [(ngModel)]=\"totalSelectValue\" [data]=\"aggreData\"\r\n                        [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </fieldSet>\r\n        </div>\r\n      </div>\r\n    </perfect-scrollbar>\r\n  </div>\r\n</div>\r\n",
                    styles: [".column-editor-header{height:2.875rem;min-height:2.875rem;background:#fff;box-shadow:0 2px 5px 0 rgba(0,0,0,.06)}.parentContent{position:absolute;top:46px;bottom:0;left:0;right:0}.colInfoDisplay1{display:block!important}.colInfoDisplay2{display:none!important}"]
                }] }
    ];
    /** @nocollapse */
    ColumnEditorComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    ColumnEditorComponent.propDecorators = {
        currSchema: [{ type: Input }],
        colList: [{ type: Input }],
        controlType: [{ type: Input }],
        colToolbar: [{ type: ViewChild, args: ['colToolbar',] }],
        schemaTree: [{ type: ViewChild, args: ['schemaTree',] }],
        nameCell: [{ type: ViewChild, args: ['nameCell',] }],
        bindFieldCell: [{ type: ViewChild, args: ['bindFieldCell',] }],
        colWidthCell: [{ type: ViewChild, args: ['colWidthCell',] }],
        colAlignCell: [{ type: ViewChild, args: ['colAlignCell',] }],
        visibleCell: [{ type: ViewChild, args: ['visibleCell',] }],
        isFixedCell: [{ type: ViewChild, args: ['isFixedCell',] }],
        autoFixCell: [{ type: ViewChild, args: ['autoFixCell',] }]
    };
    return ColumnEditorComponent;
}());
export { ColumnEditorComponent };
if (false) {
    /** @type {?} */
    ColumnEditorComponent.prototype.currSchema;
    /** @type {?} */
    ColumnEditorComponent.prototype.colList;
    /** @type {?} */
    ColumnEditorComponent.prototype.controlType;
    /** @type {?} */
    ColumnEditorComponent.prototype.colToolbar;
    /** @type {?} */
    ColumnEditorComponent.prototype.schemaTree;
    /** @type {?} */
    ColumnEditorComponent.prototype.nameCell;
    /** @type {?} */
    ColumnEditorComponent.prototype.bindFieldCell;
    /** @type {?} */
    ColumnEditorComponent.prototype.colWidthCell;
    /** @type {?} */
    ColumnEditorComponent.prototype.colAlignCell;
    /** @type {?} */
    ColumnEditorComponent.prototype.visibleCell;
    /** @type {?} */
    ColumnEditorComponent.prototype.isFixedCell;
    /** @type {?} */
    ColumnEditorComponent.prototype.autoFixCell;
    /** @type {?} */
    ColumnEditorComponent.prototype.currTreeNodeId;
    /** @type {?} */
    ColumnEditorComponent.prototype.currTreeNode;
    /** @type {?} */
    ColumnEditorComponent.prototype.size;
    /** @type {?} */
    ColumnEditorComponent.prototype.columnOption;
    /** @type {?} */
    ColumnEditorComponent.prototype.colName;
    /** @type {?} */
    ColumnEditorComponent.prototype.colWidth;
    /** @type {?} */
    ColumnEditorComponent.prototype.colVisible;
    /** @type {?} */
    ColumnEditorComponent.prototype.colFixed;
    /** @type {?} */
    ColumnEditorComponent.prototype.colWrap;
    /** @type {?} */
    ColumnEditorComponent.prototype.colAutoFit;
    /** @type {?} */
    ColumnEditorComponent.prototype.schemaTreeData;
    /** @type {?} */
    ColumnEditorComponent.prototype.colListData;
    /** @type {?} */
    ColumnEditorComponent.prototype.colSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.alignData;
    /** @type {?} */
    ColumnEditorComponent.prototype.alignSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.formatTypeData;
    /** @type {?} */
    ColumnEditorComponent.prototype.formatTypeSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.formatText;
    /** @type {?} */
    ColumnEditorComponent.prototype.sortData;
    /** @type {?} */
    ColumnEditorComponent.prototype.sortSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.aggreData;
    /** @type {?} */
    ColumnEditorComponent.prototype.pageSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.pageText;
    /** @type {?} */
    ColumnEditorComponent.prototype.colIsGroup;
    /** @type {?} */
    ColumnEditorComponent.prototype.colIsRed;
    /** @type {?} */
    ColumnEditorComponent.prototype.groupSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.groupSubSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.groupText;
    /** @type {?} */
    ColumnEditorComponent.prototype.totalSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.totalText;
    /** @type {?} */
    ColumnEditorComponent.prototype.formatField;
    /** @type {?} */
    ColumnEditorComponent.prototype.dimensionData;
    /** @type {?} */
    ColumnEditorComponent.prototype.enumType;
    /** @type {?} */
    ColumnEditorComponent.prototype.dataShowOption;
    /** @type {?} */
    ColumnEditorComponent.prototype.type;
    /** @type {?} */
    ColumnEditorComponent.prototype.dimensionSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.showTypeSelectValue;
    /** @type {?} */
    ColumnEditorComponent.prototype.rowColor;
    /** @type {?} */
    ColumnEditorComponent.prototype.newNodeData;
    /** @type {?} */
    ColumnEditorComponent.prototype.cols;
    /** @type {?} */
    ColumnEditorComponent.prototype.colIsGroupId;
    /** @type {?} */
    ColumnEditorComponent.prototype.colVisibleId;
    /** @type {?} */
    ColumnEditorComponent.prototype.colFixedId;
    /** @type {?} */
    ColumnEditorComponent.prototype.colWrapId;
    /** @type {?} */
    ColumnEditorComponent.prototype.colAutoFitId;
    /** @type {?} */
    ColumnEditorComponent.prototype.colIsRedId;
    /** @type {?} */
    ColumnEditorComponent.prototype.localizeService;
    /** @type {?} */
    ColumnEditorComponent.prototype.localId;
    /** @type {?} */
    ColumnEditorComponent.prototype.formInline;
    /** @type {?} */
    ColumnEditorComponent.prototype.colInfoChanged;
    /** @type {?} */
    ColumnEditorComponent.prototype.editable;
    /** @type {?} */
    ColumnEditorComponent.prototype.isOrNotPaging;
    /**
     * @type {?}
     * @private
     */
    ColumnEditorComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,