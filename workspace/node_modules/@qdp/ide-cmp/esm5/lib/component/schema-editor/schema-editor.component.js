/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, Output, EventEmitter, ViewChild, Injector } from '@angular/core';
import { FarrisTabsComponent } from '@farris/ui-tabs';
import { LocalizeService } from '@qdp/localize';
import { TitleEditorComponent } from './title-editor/title-editor.component';
import { ColumnEditorComponent } from './column-editor/column-editor.component';
import { StyleEditorComponent } from './style-editor/style-editor.component';
import { OtherEditorComponent } from './other-editor/other-editor.component';
var SchemaEditorComponent = /** @class */ (function () {
    function SchemaEditorComponent(injector) {
        this.injector = injector;
        this.tabsSelectChange = new EventEmitter();
        this.localizeService = this.injector.get(LocalizeService);
    }
    /**
     * @return {?}
     */
    SchemaEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    SchemaEditorComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * @param {?} data
     * @return {?}
     */
    SchemaEditorComponent.prototype.handleTabSelect = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var option = this.getOption();
        if (data.nextId === 'column') {
            this.columnOption.handleInfoChanged(0);
        }
        this.tabsSelectChange.emit(option);
    };
    /**
     * @return {?}
     */
    SchemaEditorComponent.prototype.getOption = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var option = {};
        if (this.titleOption) {
            option['titleOption'] = this.titleOption.getTitleOption();
        }
        if (this.columnOption) {
            option['columnOption'] = this.columnOption.getColumnOption();
        }
        if (this.styleOption) {
            option['styleOption'] = this.styleOption.getStyleOption();
        }
        if (this.otherOption) {
            option['otherOption'] = this.otherOption.getOtherOption();
        }
        return option;
    };
    SchemaEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'schema-editor',
                    template: "<farris-tabs [value]=\"'title'\"  [contentFill]=\"true\" [autoTitleWidth]=\"true\"  (tabChange)=\"handleTabSelect($event)\">\r\n  <farris-tab [title]=\"localizeService.getValue('ideCmp.schemaManager.titleOption.tab')\" [id]=\"'title'\">\r\n    <ng-template #content>\r\n      <title-editor [currSchema]=\"currSchema\" class=\"schema-editor-tab d-flex flex-column flex-fill\"></title-editor>\r\n    </ng-template>\r\n  </farris-tab>\r\n  <farris-tab [title]=\"localizeService.getValue('ideCmp.schemaManager.columnOption.tab')\" [id]=\"'column'\">\r\n    <ng-template #content>\r\n      <column-editor [currSchema]=\"currSchema\" [colList]=\"colList\" [controlType]=\"controlType\"  class=\"schema-editor-tab d-flex flex-column flex-fill\"></column-editor>\r\n    </ng-template>\r\n  </farris-tab>\r\n  <farris-tab [title]=\"localizeService.getValue('ideCmp.schemaManager.styleOption.tab')\" [id]=\"'style'\">\r\n    <ng-template #content>\r\n      <style-editor [currSchema]=\"currSchema\" class=\"schema-editor-tab d-flex flex-column flex-fill\"></style-editor>\r\n    </ng-template>\r\n  </farris-tab>\r\n  <farris-tab [title]=\"localizeService.getValue('ideCmp.schemaManager.otherOption.tab')\" [id]=\"'other'\">\r\n    <ng-template #content>\r\n      <other-editor [currSchema]=\"currSchema\"  [controlType]=\"controlType\"  class=\"schema-editor-tab d-flex flex-column flex-fill\"></other-editor>\r\n    </ng-template>\r\n  </farris-tab>\r\n</farris-tabs>\r\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".schema-editor-tab{position:absolute;top:0;bottom:0;left:0;right:0;overflow:hidden}"]
                }] }
    ];
    /** @nocollapse */
    SchemaEditorComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    SchemaEditorComponent.propDecorators = {
        currSchema: [{ type: Input }],
        colList: [{ type: Input }],
        controlType: [{ type: Input }],
        tabsSelectChange: [{ type: Output }],
        titleOption: [{ type: ViewChild, args: [TitleEditorComponent,] }],
        columnOption: [{ type: ViewChild, args: [ColumnEditorComponent,] }],
        styleOption: [{ type: ViewChild, args: [StyleEditorComponent,] }],
        otherOption: [{ type: ViewChild, args: [OtherEditorComponent,] }],
        tabs: [{ type: ViewChild, args: [FarrisTabsComponent,] }]
    };
    return SchemaEditorComponent;
}());
export { SchemaEditorComponent };
if (false) {
    /** @type {?} */
    SchemaEditorComponent.prototype.currSchema;
    /** @type {?} */
    SchemaEditorComponent.prototype.colList;
    /** @type {?} */
    SchemaEditorComponent.prototype.controlType;
    /** @type {?} */
    SchemaEditorComponent.prototype.editorParams;
    /** @type {?} */
    SchemaEditorComponent.prototype.tabsSelectChange;
    /** @type {?} */
    SchemaEditorComponent.prototype.titleOption;
    /** @type {?} */
    SchemaEditorComponent.prototype.columnOption;
    /** @type {?} */
    SchemaEditorComponent.prototype.styleOption;
    /** @type {?} */
    SchemaEditorComponent.prototype.otherOption;
    /** @type {?} */
    SchemaEditorComponent.prototype.tabs;
    /** @type {?} */
    SchemaEditorComponent.prototype.localizeService;
    /**
     * @type {?}
     * @private
     */
    SchemaEditorComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLWVkaXRvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcWRwL2lkZS1jbXAvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50L3NjaGVtYS1lZGl0b3Ivc2NoZW1hLWVkaXRvci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQW9DLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakosT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUU3RTtJQW1CRSwrQkFBb0IsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQVI1QixxQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBU25ELElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDNUQsQ0FBQzs7OztJQUVELHdDQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7O0lBRUQsMkNBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO0lBQ2xDLENBQUM7Ozs7O0lBRUQsK0NBQWU7Ozs7SUFBZixVQUFnQixJQUFTOztZQUNqQixNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUMvQixJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssUUFBUSxFQUFFO1lBQzVCLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDeEM7UUFDRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFRCx5Q0FBUzs7O0lBQVQ7O1lBQ1EsTUFBTSxHQUFHLEVBQUU7UUFDakIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzNEO1FBQ0QsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQzlEO1FBQ0QsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzNEO1FBQ0QsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzNEO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7Z0JBckRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsbThDQUE2QztvQkFFN0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O2lCQUN0Qzs7OztnQkFiZ0gsUUFBUTs7OzZCQWV0SCxLQUFLOzBCQUNMLEtBQUs7OEJBQ0wsS0FBSzttQ0FFTCxNQUFNOzhCQUNOLFNBQVMsU0FBQyxvQkFBb0I7K0JBQzlCLFNBQVMsU0FBQyxxQkFBcUI7OEJBQy9CLFNBQVMsU0FBQyxvQkFBb0I7OEJBQzlCLFNBQVMsU0FBQyxvQkFBb0I7dUJBQzlCLFNBQVMsU0FBQyxtQkFBbUI7O0lBc0NoQyw0QkFBQztDQUFBLEFBdERELElBc0RDO1NBaERZLHFCQUFxQjs7O0lBQ2hDLDJDQUF5Qjs7SUFDekIsd0NBQXdCOztJQUN4Qiw0Q0FBNkI7O0lBQzdCLDZDQUFrQjs7SUFDbEIsaURBQXFEOztJQUNyRCw0Q0FBbUU7O0lBQ25FLDZDQUFzRTs7SUFDdEUsNENBQW1FOztJQUNuRSw0Q0FBbUU7O0lBQ25FLHFDQUEwRDs7SUFDMUQsZ0RBQWlDOzs7OztJQUVyQix5Q0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q2hpbGQsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZhcnJpc1RhYnNDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLXRhYnMnO1xyXG5pbXBvcnQgeyBMb2NhbGl6ZVNlcnZpY2UgfSBmcm9tICdAcWRwL2xvY2FsaXplJztcclxuaW1wb3J0IHsgVGl0bGVFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL3RpdGxlLWVkaXRvci90aXRsZS1lZGl0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ29sdW1uRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW4tZWRpdG9yL2NvbHVtbi1lZGl0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3R5bGVFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL3N0eWxlLWVkaXRvci9zdHlsZS1lZGl0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgT3RoZXJFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL290aGVyLWVkaXRvci9vdGhlci1lZGl0b3IuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnc2NoZW1hLWVkaXRvcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3NjaGVtYS1lZGl0b3IuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NjaGVtYS1lZGl0b3IuY29tcG9uZW50LmNzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIFNjaGVtYUVkaXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICBASW5wdXQoKSBjdXJyU2NoZW1hOiBhbnk7XHJcbiAgQElucHV0KCkgY29sTGlzdDogYW55W107XHJcbiAgQElucHV0KCkgY29udHJvbFR5cGU6IHN0cmluZztcclxuICBlZGl0b3JQYXJhbXM6IGFueTtcclxuICBAT3V0cHV0KCkgdGFic1NlbGVjdENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBWaWV3Q2hpbGQoVGl0bGVFZGl0b3JDb21wb25lbnQpIHRpdGxlT3B0aW9uOiBUaXRsZUVkaXRvckNvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKENvbHVtbkVkaXRvckNvbXBvbmVudCkgY29sdW1uT3B0aW9uOiBDb2x1bW5FZGl0b3JDb21wb25lbnQ7XHJcbiAgQFZpZXdDaGlsZChTdHlsZUVkaXRvckNvbXBvbmVudCkgc3R5bGVPcHRpb246IFN0eWxlRWRpdG9yQ29tcG9uZW50O1xyXG4gIEBWaWV3Q2hpbGQoT3RoZXJFZGl0b3JDb21wb25lbnQpIG90aGVyT3B0aW9uOiBPdGhlckVkaXRvckNvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKEZhcnJpc1RhYnNDb21wb25lbnQpIHRhYnM6IEZhcnJpc1RhYnNDb21wb25lbnQ7XHJcbiAgbG9jYWxpemVTZXJ2aWNlOiBMb2NhbGl6ZVNlcnZpY2U7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICB0aGlzLmxvY2FsaXplU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KExvY2FsaXplU2VydmljZSk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICB9XHJcblxyXG4gIGhhbmRsZVRhYlNlbGVjdChkYXRhOiBhbnkpIHtcclxuICAgIGNvbnN0IG9wdGlvbiA9IHRoaXMuZ2V0T3B0aW9uKCk7XHJcbiAgICBpZiAoZGF0YS5uZXh0SWQgPT09ICdjb2x1bW4nKSB7XHJcbiAgICAgIHRoaXMuY29sdW1uT3B0aW9uLmhhbmRsZUluZm9DaGFuZ2VkKDApO1xyXG4gICAgfVxyXG4gICAgdGhpcy50YWJzU2VsZWN0Q2hhbmdlLmVtaXQob3B0aW9uKTtcclxuICB9XHJcblxyXG4gIGdldE9wdGlvbigpIHtcclxuICAgIGNvbnN0IG9wdGlvbiA9IHt9O1xyXG4gICAgaWYgKHRoaXMudGl0bGVPcHRpb24pIHtcclxuICAgICAgb3B0aW9uWyd0aXRsZU9wdGlvbiddID0gdGhpcy50aXRsZU9wdGlvbi5nZXRUaXRsZU9wdGlvbigpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuY29sdW1uT3B0aW9uKSB7XHJcbiAgICAgIG9wdGlvblsnY29sdW1uT3B0aW9uJ10gPSB0aGlzLmNvbHVtbk9wdGlvbi5nZXRDb2x1bW5PcHRpb24oKTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnN0eWxlT3B0aW9uKSB7XHJcbiAgICAgIG9wdGlvblsnc3R5bGVPcHRpb24nXSA9IHRoaXMuc3R5bGVPcHRpb24uZ2V0U3R5bGVPcHRpb24oKTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLm90aGVyT3B0aW9uKSB7XHJcbiAgICAgIG9wdGlvblsnb3RoZXJPcHRpb24nXSA9IHRoaXMub3RoZXJPcHRpb24uZ2V0T3RoZXJPcHRpb24oKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gb3B0aW9uO1xyXG4gIH1cclxufVxyXG4iXX0=