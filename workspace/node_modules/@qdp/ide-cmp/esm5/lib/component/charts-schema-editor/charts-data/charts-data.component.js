/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector } from '@angular/core';
import { findIndex } from 'lodash-es';
import { LocalizeService } from '@qdp/localize';
var ChartsDataComponent = /** @class */ (function () {
    function ChartsDataComponent(injector) {
        this.injector = injector;
        // 一类一排
        this.live1 = [1, 1, 0, 0, 0, 0, 0];
        this.live2 = [0, 0, 1, 1, 1, 1, 1];
        this.live3 = [0, 0, 1, 1, 0, 0, 0];
        this.live = [];
        this.axisTypeData = [
            { name: '分类', value: 'category' },
            { name: '值', value: 'value' }
        ];
        this.xAxisTypeSelectValue = this.axisTypeData[0].value;
        this.yAxisTypeSelectValue = this.axisTypeData[1].value;
        this.xAxisDisableItemIndex = -1;
        this.yAxisDisableItemIndex = -1;
        this.xPositionData = [
            { name: '下', value: 'bottom' },
            { name: '上', value: 'top' }
        ];
        this.xPositionValue = this.xPositionData[0].value;
        this.yPositionData = [
            { name: '左', value: 'left' },
            { name: '右', value: 'right' }
        ];
        this.yPositionValue = this.yPositionData[0].value;
        this.bindingData = [
        // { 'name': 'Code', value: 'Code' },
        // { 'name': 'Name', value: 'Name' },
        // { 'name': 'Value', value: 'Value' },
        ];
        this.barTypeData = [
            { name: '单列', value: 1 },
            { name: '多列', value: 2 },
            { name: '叠加', value: 3 },
        ];
        this.barTypeSelectValue = this.barTypeData[0];
        this.dimensionFieldList = [];
        this.indicatorFieldList = [];
        this.xAxisBindingFeildList = [];
        this.yAxisBindingFeildList = [];
        // legendBindingFeildList: any[] = [];
        this.firstBindingFeildList = [];
        this.secondBindingFeildList = [];
        this.thirdBindingFeildList = [];
        this.fourthBindingFeildList = [];
        this.fifthBindingFeildList = [];
        this.aggreData = [
            { name: '请选择', value: 0 },
            { name: '合计', value: 1 },
            { name: '最小值', value: 2 },
            { name: '最大值', value: 3 },
            { name: '计数', value: 4 },
            { name: '平均值', value: 5 }
        ];
        this.aggreSelectValue = this.aggreData[0].value;
        this.size = {};
        this.localizeService = this.injector.get(LocalizeService);
        this.axisTypeData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.axisTypeData');
        this.xPositionData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.xPositionData');
        this.yPositionData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.yPositionData');
        this.barTypeData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.barTypeData');
        this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');
        // this.aggreData.splice(0, 1);
    }
    /**
     * @return {?}
     */
    ChartsDataComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ChartsDataComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        /** @type {?} */
        var self = this;
        self.live = self.live1;
        if (self.chartsType === 'effectScatter') {
            self.live = self.live2;
        }
        if (self.chartsType === 'pie' || self.chartsType === 'map') {
            self.live = self.live3;
        }
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'currSchema':
                        if (newValue.schemaValue && newValue.schemaValue.groupSummarySet) {
                            this.groupSummarySet = JSON.parse(JSON.stringify(newValue.schemaValue.groupSummarySet));
                            this.dimensionFieldList = (this.groupSummarySet && this.groupSummarySet.dimensions) || [];
                            this.indicatorFieldList = (this.groupSummarySet && this.groupSummarySet.indicators) || [];
                        }
                        // todo :地图改的bug
                        if (this.chartsType !== 'effectScatter' && this.chartsType !== 'pie' && this.chartsType !== 'map') {
                            if (newValue.schemaValue && newValue.schemaValue.chartsData) {
                                /** @type {?} */
                                var str = JSON.stringify(newValue.schemaValue.chartsData);
                                this.chartsData = JSON.parse(str);
                                /** @type {?} */
                                var index = findIndex(this.axisTypeData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.xAxis.type || 'category' : 'category');
                                }));
                                this.xAxisTypeSelectValue = this.axisTypeData[index].value;
                                index = findIndex(this.axisTypeData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.yAxis.type || 'value' : 'value');
                                }));
                                this.yAxisTypeSelectValue = this.axisTypeData[index].value;
                                index = findIndex(this.xPositionData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.xAxis.position || 'bottom' : 'bottom');
                                }));
                                this.xPositionValue = this.xPositionData[index].value;
                                index = findIndex(this.yPositionData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.yAxis.position || 'left' : 'left');
                                }));
                                this.yPositionValue = this.yPositionData[index].value;
                                if (this.chartsData && this.chartsData.series && this.chartsData.series.type) {
                                    this.chartsType = this.chartsData.series.type;
                                }
                                this.xAxisBindingFeildList = this.chartsData.series.encode.x || this.chartsData.series.encode.name || [];
                                this.yAxisBindingFeildList = this.chartsData.series.encode.y || this.chartsData.series.encode.value1 || [];
                            }
                            // this.legendBindingFeildList = this.chartsData.legend.data||[];
                        }
                        else {
                            if (newValue.schemaValue && newValue.schemaValue.chartsData) {
                                /** @type {?} */
                                var str = JSON.stringify(newValue.schemaValue.chartsData);
                                this.chartsData = JSON.parse(str);
                                // this.legendBindingFeildList = this.chartsData.legend.data||[];
                                this.firstBindingFeildList = this.chartsData.series.encode.name || this.chartsData.series.encode.x || [];
                                this.secondBindingFeildList = this.chartsData.series.encode.value1 || this.chartsData.series.encode.y || [];
                                this.thirdBindingFeildList = this.chartsData.series.encode.lng || [];
                                this.fourthBindingFeildList = this.chartsData.series.encode.lat || [];
                                this.fifthBindingFeildList = this.chartsData.series.encode.value2 || [];
                            }
                        }
                        break;
                    case 'colList':
                        this.bindingData = newValue;
                        break;
                    case 'chartsType':
                        this.chartsType = newValue;
                        break;
                }
            }
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ChartsDataComponent.prototype.barValueChange = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
    };
    /**
     * @param {?} itemArgs
     * @return {?}
     */
    ChartsDataComponent.prototype.xItemDisabled = /**
     * @param {?} itemArgs
     * @return {?}
     */
    function (itemArgs) {
        return itemArgs.index === this.xAxisDisableItemIndex;
    };
    /**
     * @param {?} itemArgs
     * @return {?}
     */
    ChartsDataComponent.prototype.yItemDisabled = /**
     * @param {?} itemArgs
     * @return {?}
     */
    function (itemArgs) {
        return itemArgs.index === this.yAxisDisableItemIndex;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ChartsDataComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.size.height = event.newHeight;
        this.size.width = event.newWidth;
    };
    /**
     * @param {?} type
     * @return {?}
     */
    ChartsDataComponent.prototype.handleBinding = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var index = -1;
        if (type === 'dimension') {
            if (!this.dimensionField) {
                return;
            }
            index = findIndex(this.dimensionFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.dimensionField;
            }));
            if (index < 0) {
                this.dimensionFieldList.push(this.dimensionField);
            }
        }
        else if (type === 'indicator') {
            if (!this.indicatorField || !this.aggreSelectValue || this.aggreSelectValue === 0 || this.aggreSelectValue === '0') {
                return;
            }
            index = findIndex(this.indicatorFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.indicatorField;
            }));
            if (index < 0) {
                this.indicatorFieldList.push(this.aggreSelectValue + ';' + this.indicatorField);
            }
        }
        else if (type === 'x') {
            if (!this.xAxisFeild) {
                return;
            }
            index = findIndex(this.xAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.xAxisFeild;
            }));
            if (index < 0) {
                this.xAxisBindingFeildList.push(this.xAxisFeild);
            }
        }
        else if (type === 'y') {
            if (!this.yAxisFeild) {
                return;
            }
            index = findIndex(this.yAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.yAxisFeild;
            }));
            if (index < 0) {
                this.yAxisBindingFeildList.push(this.yAxisFeild);
            }
        }
        else if (type === 'f') {
            if (!this.firstFeild) {
                return;
            }
            index = findIndex(this.firstBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.firstFeild;
            }));
            if (index < 0) {
                this.firstBindingFeildList.push(this.firstFeild);
            }
        }
        else if (type === 's') {
            if (!this.secondFeild || !this.secondFeild) {
                return;
            }
            index = findIndex(this.secondBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.secondFeild;
            }));
            if (index < 0) {
                this.secondBindingFeildList.push(this.secondFeild);
            }
        }
        else if (type === 't') {
            if (!this.thirdFeild) {
                return;
            }
            index = findIndex(this.thirdBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.thirdFeild;
            }));
            if (index < 0) {
                this.thirdBindingFeildList.push(this.thirdFeild);
            }
        }
        else if (type === '4') {
            if (!this.fourthFeild) {
                return;
            }
            index = findIndex(this.fourthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.fourthFeild;
            }));
            if (index < 0) {
                this.fourthBindingFeildList.push(this.fourthFeild);
            }
        }
        else if (type === '5') {
            if (!this.fifthFeild) {
                return;
            }
            index = findIndex(this.fifthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.fifthFeild;
            }));
            if (index < 0) {
                this.fifthBindingFeildList.push(this.fifthFeild);
            }
        }
    };
    /**
     * @param {?} type
     * @param {?} feild
     * @return {?}
     */
    ChartsDataComponent.prototype.handleRemoveFeild = /**
     * @param {?} type
     * @param {?} feild
     * @return {?}
     */
    function (type, feild) {
        /** @type {?} */
        var index = -1;
        if (type === 'dimension') {
            index = findIndex(this.dimensionFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.dimensionFieldList.splice(index, 1);
        }
        else if (type === 'indicator') {
            index = findIndex(this.indicatorFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c.indexOf(feild) >= 0;
            }));
            this.indicatorFieldList.splice(index, 1);
        }
        else if (type === 'x') {
            index = findIndex(this.xAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.xAxisBindingFeildList.splice(index, 1);
        }
        else if (type === 'y') {
            index = findIndex(this.yAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.yAxisBindingFeildList.splice(index, 1);
        }
        else if (type === 'f') {
            index = findIndex(this.firstBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.firstBindingFeildList.splice(index, 1);
        }
        else if (type === 's') {
            index = findIndex(this.secondBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.secondBindingFeildList.splice(index, 1);
        }
        else if (type === 't') {
            index = findIndex(this.thirdBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.thirdBindingFeildList.splice(index, 1);
        }
        else if (type === '4') {
            index = findIndex(this.fourthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.fourthBindingFeildList.splice(index, 1);
        }
        else if (type === '5') {
            index = findIndex(this.fifthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.fifthBindingFeildList.splice(index, 1);
        }
    };
    /**
     * @return {?}
     */
    ChartsDataComponent.prototype.getChartsDataOption = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var option = {
            series: {
                type: null,
                encode: {},
            },
        };
        if (this.chartsType !== 'effectScatter' && this.chartsType !== 'pie' && this.chartsType !== 'map') {
            option.xAxis = {
                type: null,
                position: 'bottom',
                axisLine: {
                    show: true,
                },
            };
            option.yAxis = {
                type: null,
                position: 'left',
                axisLine: {
                    show: true,
                },
            };
            option.series.encode = {
                x: [this.xAxisBindingFeildList[0]],
                y: this.yAxisBindingFeildList,
            };
            option.tooltip = {
                padding: 10,
                backgroundColor: '#222',
                borderColor: '#f21',
                borderWidth: 1,
            };
            if (this.xAxisTypeSelectValue) {
                option.xAxis.type = this.xAxisTypeSelectValue;
            }
            if (this.xPositionValue) {
                option.xAxis.position = this.xPositionValue;
            }
            if (this.yAxisTypeSelectValue) {
                option.yAxis.type = this.yAxisTypeSelectValue;
            }
            if (this.yPositionValue) {
                option.yAxis.position = this.yPositionValue;
            }
        }
        if (this.chartsType !== 'effectScatter' && this.chartsType !== 'pie' && this.chartsType !== 'map' && this.yAxisBindingFeildList.length > 1) {
            option.legend = {};
            option.legend.show = true;
            option.legend.data = [];
            // tslint:disable-next-line:prefer-for-of
            for (var i = 0; i < this.yAxisBindingFeildList.length; i++) {
                // tslint:disable-next-line:prefer-for-of
                for (var j = 0; j < this.colList.length; j++) {
                    if (this.colList[j].bindField === this.yAxisBindingFeildList[i]) {
                        option.legend.data.push(this.colList[j].name);
                        break;
                    }
                }
            }
        }
        if (this.chartsType === 'pie') {
            option.xAxis = {
                type: null,
                position: 'bottom',
                axisLine: {
                    show: false,
                },
            };
            option.yAxis = {
                type: null,
                position: 'left',
                axisLine: {
                    show: false,
                },
            };
            option.tooltip = {
                formatter: '{b}:{c}</br>{d}%'
            };
            option.series.encode = {
                x: [this.firstBindingFeildList[0]],
                y: [this.secondBindingFeildList[0]],
            };
            option.legend = {
                itemGap: 10,
                itemWidth: 25,
                itemHeight: 14,
                align: 'auto',
                orient: 'horizontal'
            };
        }
        if (this.chartsType === 'map') {
            option.xAxis = {
                type: null,
                position: 'bottom',
                axisLine: {
                    show: false,
                },
            };
            option.yAxis = {
                type: null,
                position: 'left',
                axisLine: {
                    show: false,
                },
            };
            option.series = {
                roam: 'scale',
                map: 'china',
                itemStyle: {
                    emphasis: { label: { show: true } }
                },
                // 文本位置修正
                textFixed: {
                    Alaska: [20, -20]
                },
            };
            option.toolbox = {
                show: true,
                // orient: 'vertical',series-pie.encode
                left: 'left',
                top: 'top',
                feature: {
                    dataView: { readOnly: false },
                    restore: {},
                    saveAsImage: {}
                }
            },
                option.visualMap = {
                    left: 'right',
                    min: 0,
                    max: 9,
                    inRange: {
                        color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                    },
                    text: ['High', 'Low'],
                    // 文本，默认为数值文本
                    calculable: true
                },
                option.series.encode = {
                    x: [this.firstBindingFeildList[0]],
                    y: [this.secondBindingFeildList[0]],
                };
        }
        if (this.chartsType === 'effectScatter') {
            option.geo = {
                map: 'china',
                center: [115, 30],
                zoom: 1,
                roam: 'scale',
                // 缩放
                itemStyle: {
                    // 定义样式
                    normal: {
                        // 普通状态下的样式
                        areaColor: '#323c48',
                        borderColor: '#111'
                    },
                    emphasis: {
                        // 高亮状态下的样式
                        areaColor: '#2a333d'
                    }
                }
            };
            option.tooltip = {
                padding: 10,
                backgroundColor: '#333',
                borderColor: '#777',
                borderWidth: 1,
            };
            option.series = {
                name: 'map',
                coordinateSystem: 'geo',
            };
            option.series.encode = {
                name: [this.firstBindingFeildList[0]],
                lng: [this.thirdBindingFeildList[0]],
                lat: [this.fourthBindingFeildList[0]],
                value1: [this.secondBindingFeildList[0]],
                value2: this.fifthBindingFeildList,
                tooltip: [this.firstBindingFeildList[0], this.secondBindingFeildList[0]]
            };
            option.visualMap = [{
                    type: 'continuous',
                    top: 'top',
                    left: 'right',
                    dimension: 1,
                    calculable: true,
                    min: 0,
                    max: 1000,
                    inRange: {
                        color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                        // colorLightness: [1, 0.5],
                        // 指定数值从低到高时的颜色变化
                    },
                    outOfRange: {
                        color: ['rgba(255,255,255,.2)']
                    },
                    controller: {
                        inRange: {
                            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                        },
                        outOfRange: {
                            color: ['#444']
                        }
                    },
                    textStyle: {
                        color: '#837' // 值域控件的文本颜色
                    }
                }, {
                    // 添加第二个视觉组件
                    right: 'right',
                    top: 'bottom',
                    dimension: 2,
                    type: 'continuous',
                    // 连续型
                    min: 0,
                    // 值域最小值，必须参数
                    max: 1000,
                    // 值域最大值，必须参数
                    calculable: true,
                    // 是否启用值域漫游
                    itemWidth: 30,
                    itemHeight: 120,
                    // vm的大小
                    // 变小
                    // text: ["数值2"],
                    textGap: 30,
                    // 图形的上下
                    inRange: {
                        symbolSize: [5, 30],
                    },
                    outOfRange: {
                        symbolSize: [5, 30],
                        color: ['rgba(255,255,255,.2)']
                    },
                    textStyle: {
                        color: '#837'
                    },
                    controller: {
                        inRange: {
                            color: ['#c23531']
                        },
                        outOfRange: {
                            color: ['#444']
                        }
                    }
                }];
            if (this.fifthBindingFeildList !== []) {
                option.series.encode.tooltip.push(this.fifthBindingFeildList[0]);
            }
        }
        // console.log(JSON.stringify(option));
        return option;
    };
    /**
     * @return {?}
     */
    ChartsDataComponent.prototype.getGroupSummarySetOption = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var option = {
            dimensions: null,
            indicators: null
        };
        try {
            if (this.dimensionFieldList && this.dimensionFieldList.length) {
                option.dimensions = this.dimensionFieldList;
            }
            if (this.indicatorFieldList && this.indicatorFieldList.length) {
                option.indicators = this.indicatorFieldList;
            }
            return option;
        }
        catch (e) {
            return option;
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ChartsDataComponent.prototype.myIsNaN = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return !isNaN(value);
    };
    ChartsDataComponent.decorators = [
        { type: Component, args: [{
                    selector: 'charts-data',
                    template: "<div class=\"d-flex flex-row flex-fill h-100\" (resized)=\"onResized($event)\">\r\n  <perfect-scrollbar [config]=\"{}\">\r\n    <div class=\"flex-fill farris-split-section m-1 farris-overflow-hidden\">\r\n      <div class=\"farris-form farris-card-content-bg\">\r\n        <fieldset farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.dimensionSetting')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"dimensionList\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.dimension')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\" style=\"width: 91%\">\r\n                      <farris-combo-list id=\"dimensionList\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"dimensionField\"\r\n                                         [data]=\"bindingData\" [textField]=\"'name'\" [idField]=\"'bindField'\" \r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('dimension')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of dimensionFieldList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('dimension', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"indicatorList\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.indicator')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\" style=\"width: 51%\">\r\n                      <farris-combo-list id=\"indicatorList\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"indicatorField\"\r\n                                         [data]=\"bindingData\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <div class=\"farris-input-wrap\" style=\"width: 40%\">\r\n                      <farris-combo-list id=\"indicatorList\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"aggreSelectValue\"\r\n                                         [data]=\"aggreData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"\r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('indicator')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of indicatorFieldList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd\">\r\n                      {{feild && myIsNaN(feild.substring(0, 1)) ? feild.replace(feild.substring(0, 1), aggreData[feild.substring(0, 1)].name).replace(';', '(') + ')' : feild }}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('indicator', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldSet *ngIf=\"live[0]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.xAxis')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.type')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <!--                    <farris-combo-list id=\"chartsType\" [(ngModel)]=\"chartsTypeSelectValue\" [data]=\"chartsTypeData\"-->\r\n                    <!--                                       [textField]=\"'name'\" [idField]=\"'value'\" (valueChange)=\"valueChange($event)\" ></farris-combo-list>-->\r\n                    <farris-combo-list id=\"xAxisType\" [(ngModel)]=\"xAxisTypeSelectValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\"\r\n                                       [data]=\"axisTypeData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisPosition\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.position')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"xAxisPosition\" [(ngModel)]=\"xPositionValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\"\r\n                                       [data]=\"xPositionData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n\r\n                    <div class=\"farris-input-wrap\" style=\"width: 91%\">\r\n                      <farris-combo-list id=\"xAxisBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"xAxisFeild\"\r\n                                         [data]=\"bindingData\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('x')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of xAxisBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('x', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n        <fieldSet *ngIf=\"live[1]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.yAxis')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"yAxisType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.type')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"yAxisType\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"yAxisTypeSelectValue\"\r\n                                       [data]=\"axisTypeData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"yAxisPosition\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.position')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"yAxisPosition\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"yPositionValue\"\r\n                                       [data]=\"yPositionData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"xAxisBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                         [(ngModel)]=\"yAxisFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                         style=\" width: 91%\">\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('y')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd1\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of yAxisBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd1\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('y', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[2]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.name')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                         [(ngModel)]=\"firstFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                         style=\"width: 91%\">\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('f')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of firstBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('f', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[3]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.numerical1')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"secondFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('s')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of secondBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('s', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[4]\" arrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.longitude')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"thirdFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('t')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of thirdBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('t', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[5]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.latitude')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"fourthFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('4')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of fourthBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('4', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[6]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.numerical2')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"fifthFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('5')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of fifthBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('5', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n      </div>\r\n    </div>\r\n  </perfect-scrollbar>\r\n</div>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ChartsDataComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    ChartsDataComponent.propDecorators = {
        currSchema: [{ type: Input }],
        chartsType: [{ type: Input }],
        colList: [{ type: Input }]
    };
    return ChartsDataComponent;
}());
export { ChartsDataComponent };
if (false) {
    /** @type {?} */
    ChartsDataComponent.prototype.currSchema;
    /** @type {?} */
    ChartsDataComponent.prototype.chartsType;
    /** @type {?} */
    ChartsDataComponent.prototype.colList;
    /** @type {?} */
    ChartsDataComponent.prototype.live1;
    /** @type {?} */
    ChartsDataComponent.prototype.live2;
    /** @type {?} */
    ChartsDataComponent.prototype.live3;
    /** @type {?} */
    ChartsDataComponent.prototype.live;
    /** @type {?} */
    ChartsDataComponent.prototype.groupSummarySet;
    /** @type {?} */
    ChartsDataComponent.prototype.chartsData;
    /** @type {?} */
    ChartsDataComponent.prototype.axisTypeData;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisTypeSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisTypeSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisDisableItemIndex;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisDisableItemIndex;
    /** @type {?} */
    ChartsDataComponent.prototype.xPositionData;
    /** @type {?} */
    ChartsDataComponent.prototype.xPositionValue;
    /** @type {?} */
    ChartsDataComponent.prototype.yPositionData;
    /** @type {?} */
    ChartsDataComponent.prototype.yPositionValue;
    /** @type {?} */
    ChartsDataComponent.prototype.bindingData;
    /** @type {?} */
    ChartsDataComponent.prototype.barTypeData;
    /** @type {?} */
    ChartsDataComponent.prototype.barTypeSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.dimensionField;
    /** @type {?} */
    ChartsDataComponent.prototype.indicatorField;
    /** @type {?} */
    ChartsDataComponent.prototype.dimensionFieldList;
    /** @type {?} */
    ChartsDataComponent.prototype.indicatorFieldList;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.firstFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.secondFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.thirdFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.fourthFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.fifthFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.firstBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.secondBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.thirdBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.fourthBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.fifthBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.aggreData;
    /** @type {?} */
    ChartsDataComponent.prototype.aggreSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.size;
    /** @type {?} */
    ChartsDataComponent.prototype.localizeService;
    /**
     * @type {?}
     * @private
     */
    ChartsDataComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,