/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector } from '@angular/core';
import { findIndex } from 'lodash-es';
import { LocalizeService } from '@qdp/localize';
var ChartsStyleComponent = /** @class */ (function () {
    function ChartsStyleComponent(injector) {
        this.injector = injector;
        this.title = '';
        this.xAxisAlignData = [
            { name: '左', value: 'left' },
            { name: '中', value: 'center' },
            { name: '右', value: 'right' }
        ];
        this.xAxisAlignValue = this.xAxisAlignData[1].value;
        this.yAxisAlignData = [
            { name: '上', value: 'top' },
            { name: '中', value: 'middle' },
            { name: '下', value: 'bottom' }
        ];
        this.yAxisAlignValue = this.yAxisAlignData[0].value;
        this.fontFamilyData = [
            { name: 'Microsoft YaHei', value: 'Microsoft YaHei' },
            { name: 'sans-serif', value: 'sans-serif' },
            { name: 'serif', value: 'serif' },
            { name: 'monospace', value: 'monospace' },
            { name: 'Arial', value: 'Arial' },
            { name: 'Courier New', value: 'Courier New' }
        ];
        this.fontFamily = this.fontFamilyData[0].value;
        this.fontSizeData = [
            { name: '10', value: '10', },
            { name: '15', value: '15', },
            { name: '20', value: '20', },
            { name: '25', value: '25', },
            { name: '30', value: '30', },
            { name: '35', value: '35', },
            { name: '40', value: '40', },
        ];
        this.fontSize = this.fontSizeData[3].value;
        this.textStyle = {
            lineHeight: 25,
            fontSize: 25,
            fontStyle: 'normal',
            fontWight: 'normal',
            fontFamily: this.fontFamily || 'Microsoft YaHei',
            color: 'black'
        };
        this.legendAlignData = [
            { name: '自适应', value: 'auto' },
            { name: '左', value: 'left' },
            { name: '右', value: 'right' }
        ];
        this.legendAlignValue = this.legendAlignData[0].value;
        this.orientData = [
            { name: '水平', value: 'horizontal' },
            { name: '垂直', value: 'vertical' }
        ];
        this.legendOrientValue = this.orientData[0].value;
        this.visualMapOrientValue = this.orientData[1].value;
        this.itemGap = 10;
        this.itemWidth = 25;
        this.itemHeight = 14;
        this.visualMapTypeData = [
            { name: 'continuous', value: 'continuous' },
            { name: 'piecewise', value: 'piecewise' }
        ];
        this.visualMapTypeValue = this.visualMapTypeData[0].value;
        // 利用一个无用的属性title.id使不与data界面交互
        this.dataMultiple = [
            { name: '并排', value: 'side' },
            { name: '堆叠', value: 'pile' }
        ];
        this.dataMultipleValue = this.dataMultiple[0].value;
        this.vmTopValue = this.yAxisAlignData[0].value;
        this.vmLeftValue = this.xAxisAlignData[2].value;
        this.vmBottom = 0;
        this.vmRight = 0;
        this.visualMapPieces = [];
        this.visualMapCategories = [];
        this.isWeight = false;
        this.isStyle = false;
        this.cBtn = false;
        this.pBtn = false;
        this.tBtn = false;
        this.size = {};
        this.localizeService = this.injector.get(LocalizeService);
        this.xAxisAlignData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.xAxisAlignData');
        this.yAxisAlignData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.yAxisAlignData');
        this.fontFamilyData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.fontFamilyData');
        this.legendAlignData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.legendAlignData');
        this.orientData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.orientData');
        this.visualMapTypeData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapTypeData');
        this.dataMultiple = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.dataMultiple');
    }
    /**
     * @return {?}
     */
    ChartsStyleComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ChartsStyleComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        /** @type {?} */
        var self = this;
        for (var changeName in changes) {
            /** @type {?} */
            var newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'currSchema':
                        if (newValue.schemaValue && newValue.schemaValue.customOption) {
                            this.customOption = JSON.stringify(newValue.schemaValue.customOption);
                        }
                        else {
                            this.customOption = '';
                        }
                        if (newValue.schemaValue && newValue.schemaValue.chartsStyle) {
                            /** @type {?} */
                            var str = JSON.stringify(newValue.schemaValue.chartsStyle);
                            this.chartsStyle = JSON.parse(str);
                            this.title = this.chartsStyle.title.text || '';
                            /** @type {?} */
                            var index = findIndex(this.xAxisAlignData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.title.x || 'center');
                            }));
                            this.xAxisAlignValue = this.xAxisAlignData[index].value;
                            index = findIndex(this.yAxisAlignData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.title.y || 'top');
                            }));
                            this.yAxisAlignValue = this.yAxisAlignData[index].value;
                            this.textStyle.lineHeight = this.chartsStyle.title.textStyle.lineHeight || 25;
                            this.textStyle.fontSize = this.chartsStyle.title.textStyle.fontSize || 25;
                            this.textStyle.fontStyle = this.chartsStyle.title.textStyle.fontStyle || 'normal';
                            this.textStyle.fontWight = this.chartsStyle.title.textStyle.fontWight || 'normal';
                            this.textStyle.fontFamily = this.chartsStyle.title.textStyle.fontFamily || 'Microsoft YaHei';
                            index = findIndex(this.fontFamilyData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.textStyle.fontFamily || 'Microsoft YaHei');
                            }));
                            this.fontFamily = this.fontFamilyData[index].value;
                            this.textStyle.color = this.chartsStyle.title.textStyle.color || 'black';
                            index = findIndex(this.legendAlignData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.legend.align || 'auto');
                            }));
                            this.legendAlignValue = this.legendAlignData[index].value;
                            index = findIndex(this.orientData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.legend.orient || 'horizontal');
                            }));
                            this.legendOrientValue = this.orientData[index].value;
                            this.itemGap = this.chartsStyle.legend.itemGap;
                            this.itemWidth = this.chartsStyle.legend.itemWidth;
                            this.itemHeight = this.chartsStyle.legend.itemHeight;
                            index = findIndex(this.visualMapTypeData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.visualMap.type || 'continuous');
                            }));
                            this.visualMapTypeValue = this.visualMapTypeData[index].value;
                            index = findIndex(this.dataMultiple, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.title.id || 'side');
                            }));
                            this.dataMultipleValue = this.dataMultiple[index].value;
                            index = findIndex(this.yAxisAlignData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.visualMap.top || 'top');
                            }));
                            this.vmTopValue = this.yAxisAlignData[index].value;
                            this.vmBottom = this.chartsStyle.visualMap.bottom || null;
                            index = findIndex(this.xAxisAlignData, (/**
                             * @param {?} c
                             * @return {?}
                             */
                            function (c) {
                                return c.value === (self.chartsStyle.visualMap.left || 'right');
                            }));
                            this.vmLeftValue = this.xAxisAlignData[index].value;
                            this.vmRight = this.chartsStyle.visualMap.right || null;
                            this.visualMapPieces = this.chartsStyle.visualMap.pieces || [];
                            this.vmMin = this.chartsStyle.visualMap.min || 0; // 初始化最值
                            this.vmMax = this.chartsStyle.visualMap.max || 1000;
                            this.visualMapCategories = this.chartsStyle.visualMap.categories || [];
                        }
                        break;
                }
            }
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ChartsStyleComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.size.height = event.newHeight;
        this.size.width = event.newWidth;
    };
    /**
     * @return {?}
     */
    ChartsStyleComponent.prototype.handleWeight = /**
     * @return {?}
     */
    function () {
        this.isWeight = !this.isWeight;
        if (this.isWeight) {
            this.textStyle.fontWeight = 'bold';
        }
        else {
            this.textStyle.fontWeight = 'normal';
        }
    };
    /**
     * @return {?}
     */
    ChartsStyleComponent.prototype.handleStyle = /**
     * @return {?}
     */
    function () {
        this.isStyle = !this.isStyle;
        if (this.isStyle) {
            this.textStyle.fontStyle = 'italic';
        }
        else {
            this.textStyle.fontStyle = 'normal';
        }
    };
    /**
     * @param {?} type
     * @return {?}
     */
    ChartsStyleComponent.prototype.handleBinding = /**
     * @param {?} type
     * @return {?}
     */
    function (type) {
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var index = -1;
        if (type === 'c') {
            if (!this.vmCategories) {
                return;
            }
            index = findIndex(this.visualMapCategories, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.vmCategories;
            }));
            if (index < 0) {
                this.visualMapCategories.push(this.vmCategories);
            }
            this.vmCategories = null;
        }
        else if (type === 'v') {
            if (!this.vmCategories) {
                return;
            }
            index = findIndex(this.visualMapCategories, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.vmCategories;
            }));
            if (index < 0) {
                this.visualMapCategories.push(this.vmCategories);
            }
            this.vmCategories = null;
        }
        else if (type === 't') {
            if (!this.vmMin || !this.vmMax) {
                // alert('没有设置可视化数据范围');
                return;
            }
            if (this.vmPiecesMin && this.vmPiecesMax) { }
        }
        else {
            if (!this.vmPiecesMin && !this.vmPiecesMax) {
                return;
            }
            if (this.vmPiecesMin && !this.vmPiecesMax) {
                index = findIndex(this.visualMapPieces, (/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) {
                    return c.min === self.vmPiecesMin;
                }));
                if (index < 0) {
                    this.visualMapPieces.push({ min: this.vmPiecesMin });
                }
            }
            else if (!this.vmPiecesMin && this.vmPiecesMax) {
                index = findIndex(this.visualMapPieces, (/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) {
                    return c.max === self.vmPiecesMax;
                }));
                if (index < 0) {
                    this.visualMapPieces.push({ max: this.vmPiecesMax });
                }
            }
            else {
                index = findIndex(this.visualMapPieces, (/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) {
                    return c.min === self.vmPiecesMin && c.max === self.vmPiecesMax;
                }));
                if (index < 0) {
                    this.visualMapPieces.push({ min: this.vmPiecesMin, max: this.vmPiecesMax });
                }
            }
            this.vmPiecesMin = this.vmPiecesMax = null;
        }
        this.handleAddBtnDisabled();
    };
    /**
     * @param {?} type
     * @param {?} feild
     * @return {?}
     */
    ChartsStyleComponent.prototype.handleRemove = /**
     * @param {?} type
     * @param {?} feild
     * @return {?}
     */
    function (type, feild) {
        /** @type {?} */
        var index = -1;
        if (type === 'c') {
            index = findIndex(this.visualMapCategories, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.visualMapCategories.splice(index, 1);
        }
        else {
            if (feild.min && !feild.max) {
                index = findIndex(this.visualMapPieces, (/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) {
                    return c.min === feild.min;
                }));
                this.visualMapPieces.splice(index, 1);
            }
            else if (!feild.min && feild.max) {
                index = findIndex(this.visualMapPieces, (/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) {
                    return c.max === feild.max;
                }));
                this.visualMapPieces.splice(index, 1);
            }
            else {
                index = findIndex(this.visualMapPieces, (/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) {
                    return c.min === feild.min && c.max === feild.max;
                }));
                this.visualMapPieces.splice(index, 1);
            }
        }
        this.handleAddBtnDisabled();
    };
    /**
     * @private
     * @return {?}
     */
    ChartsStyleComponent.prototype.handleAddBtnDisabled = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.visualMapCategories.length) {
            this.pBtn = true;
        }
        else {
            this.pBtn = false;
        }
        if (this.visualMapPieces.length) {
            this.cBtn = true;
        }
        else {
            this.cBtn = false;
        }
    };
    /**
     * @return {?}
     */
    ChartsStyleComponent.prototype.getChartsStyleOption = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var option = {
            title: {
                id: this.dataMultipleValue || 'side',
                text: this.title,
                x: this.xAxisAlignValue || 'right',
                y: this.yAxisAlignValue || 'top',
                textStyle: this.textStyle
            },
            legend: {
                itemGap: this.itemGap,
                itemWidth: this.itemWidth,
                itemHeight: this.itemHeight,
                align: (this.legendAlignValue) || 'auto',
                orient: (this.legendOrientValue) || 'horizontal'
            },
            visualMap: [{
                    type: (this.visualMapTypeValue) || 'continuous',
                    top: (this.vmTopValue) || 'top',
                    bottom: this.vmBottom,
                    left: (this.vmLeftValue) || 'right',
                    right: this.vmRight,
                    dimension: 1,
                    calculable: true,
                    min: this.vmMin,
                    max: this.vmMax,
                    pieces: this.visualMapPieces,
                    // 分段式的范围
                    categories: this.visualMapCategories,
                    // 离散数据
                    inRange: {
                        color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                        // colorLightness: [1, 0.5],
                        // 指定数值从低到高时的颜色变化
                    },
                    outOfRange: {
                        color: ['rgba(255,255,255,.2)']
                    },
                    controller: {
                        inRange: {
                            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                        },
                        outOfRange: {
                            color: ['#444']
                        }
                    },
                    textStyle: {
                        color: '#837' // 值域控件的文本颜色
                    }
                }]
        };
        if (this.visualMapTypeValue && this.visualMapTypeValue === 'continuous') {
            option.visualMap.calculable = true;
        }
        else {
            delete option.visualMap.calculable;
        }
        if (this.chartsType === 'effectScatter') {
            option.visualMap.push({
                // 添加第二个视觉组件
                right: 'right',
                top: 'bottom',
                dimension: 2,
                type: 'continuous',
                // 连续型
                min: this.vmMin,
                // 值域最小值，必须参数
                max: this.vmMax,
                // 值域最大值，必须参数
                calculable: true,
                // 是否启用值域漫游
                itemWidth: 30,
                itemHeight: 120,
                // vm的大小
                // 变小
                // text: ["数值2"],
                textGap: 30,
                // 图形的上下
                inRange: {
                    symbolSize: [5, 30],
                },
                outOfRange: {
                    symbolSize: [5, 30],
                    color: ['rgba(255,255,255,.2)']
                },
                textStyle: {
                    color: '#837'
                },
                controller: {
                    inRange: {
                        color: ['#c23531']
                    },
                    outOfRange: {
                        color: ['#444']
                    }
                }
            });
            if (option.visualMap[0].top === 'bottom' && option.visualMap.left === 'right') {
                option.visualMap[1].top = 'top';
            }
            else {
                option.visualMap[1].top = 'bottom';
            }
        }
        return option;
    };
    /**
     * @return {?}
     */
    ChartsStyleComponent.prototype.getCustomOption = /**
     * @return {?}
     */
    function () {
        if (this.customOption) {
            try {
                return JSON.parse(this.customOption);
            }
            catch (e) {
                return 'error';
            }
        }
        else {
            return null;
        }
    };
    ChartsStyleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'charts-style',
                    template: "<div class=\"d-flex flex-row flex-fill h-100\" (resized)=\"onResized($event)\">\r\n  <perfect-scrollbar [config]=\"{}\">\r\n    <div class=\"flex-fill farris-split-section m-1 farris-overflow-hidden\">\r\n      <div class=\"farris-form farris-card-content-bg\">\r\n        <fieldSet farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.titleOption')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"title\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.title')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input-group [(ngModel)]=\"title\" id=\"title\"></input-group>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.xAxisOption')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <!--                  <farris-combo-list id=\"chartsType\" [(ngModel)]=\"chartsTypeSelectValue\" [data]=\"chartsTypeData\"-->\r\n                    <!--                   [textField]=\"'name'\" [idField]=\"'value'\" (valueChange)=\"valueChange($event)\" ></farris-combo-list>-->\r\n                    <farris-combo-list id=\"xAxisType\" [(ngModel)]=\"xAxisAlignValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.select')\"\r\n                                       [data]=\"xAxisAlignData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"yAxisType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.yAxisOption')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"yAxisType\" [(ngModel)]=\"yAxisAlignValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.select')\"\r\n                                       [data]=\"yAxisAlignData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"lineHeight\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.rowHeight')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner id=\"lineHeight\" [(ngModel)]=\"textStyle.lineHeight\" [min]=\"0\"\r\n                    ></farris-number-spinner>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"colName\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.contentStyle')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list style=\"width: 50%\"\r\n                                       [(ngModel)]=\"fontFamily\" [data]=\"fontFamilyData\" [textField]=\"'name'\"\r\n                                       [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"colName\">\r\n                    <span class=\"farris-label-text\">\u5B57\u53F7:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner id=\"lineHeight\" [(ngModel)]=\"textStyle.fontSize\" [min]=\"0\"\r\n                    ></farris-number-spinner>\r\n                  </div>\r\n                  <button class=\"k-button k-button-icon k-flat\" [class.k-state-focused]=\"isWeight\" id=\"button-search\"\r\n                          (click)=\"handleWeight()\">\r\n                    <span class=\"k-icon k-i-bold\" role=\"presentation\"></span>\r\n                  </button>\r\n                  <button class=\"k-button k-button-icon k-flat\" [class.k-state-focused]=\"isStyle\" id=\"button-search\"\r\n                          (click)=\"handleStyle()\">\r\n                    <span class=\"k-icon k-i-italic\" role=\"presentation\"></span>\r\n                  </button>\r\n                  <button class=\"k-button k-button-icon k-flat\" id=\"button-search\" [(colorPicker)]=\"textStyle.color\"\r\n                          [cpOKButton]=\"true\" [cpCancelButton]=\"true\">\r\n                      <span [style.border-bottom-color]=\"textStyle.color\" class=\"k-icon k-i-foreground-color\"\r\n                            style=\"border-bottom-width: 2px; border-bottom-style: solid; margin-top: -2px;\"\r\n                            role=\"presentation\"></span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </fieldSet>\r\n        <fieldSet farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.multiDataOption')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"visualMapType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.multiDataType')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"visualMapType\" [(ngModel)]=\"dataMultipleValue\" [data]=\"dataMultiple\"\r\n                                       [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n        <fieldSet farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.legend')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendAlignValue\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.legendAlgin')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendAlignValue\" [(ngModel)]=\"legendAlignValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.select')\"\r\n                                       [data]=\"legendAlignData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendOrientValue\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.legendOrient')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendOrientValue\" [(ngModel)]=\"legendOrientValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.select')\"\r\n                                       [data]=\"orientData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"itemGap\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.legendGap')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner id=\"itemGap\" [(ngModel)]=\"itemGap\" [min]=\"0\"></farris-number-spinner>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"itemWidth\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.itemWidth')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner id=\"itemWidth\" [(ngModel)]=\"itemWidth\" [min]=\"0\"></farris-number-spinner>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"itemHeight\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.itemHeight')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-number-spinner id=\"itemHeight\" [(ngModel)]=\"itemHeight\" [min]=\"0\"\r\n                    ></farris-number-spinner>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n        <fieldSet farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMap')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"visualMapType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapType')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"visualMapType\" [(ngModel)]=\"visualMapTypeValue\" [data]=\"visualMapTypeData\"\r\n                                       [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"></farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"visualMapOrientValue\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapOrient')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"visualMapOrientValue\" [(ngModel)]=\"visualMapOrientValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.select')\"\r\n                                       [data]=\"orientData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group form-inline farris-form-inline\">\r\n                  <label class=\"col-form-label\" for=\"colName\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapPosition')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <div class=\"col-12 col-md-12 col-lg-12\">\r\n                      <div class=\"form-group farris-form-group flex-fill\">\r\n                        <label style=\"width: 3.2rem; text-align: right;\">\r\n                          <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapTop')}}</span>\r\n                        </label>\r\n                        <farris-combo-list class=\"m-1\" style=\"width: 30%\"\r\n                                           [(ngModel)]=\"vmTopValue\" [data]=\"yAxisAlignData\" [textField]=\"'name'\"\r\n                                           [idField]=\"'value'\" [enableClear]=\"false\">\r\n                        </farris-combo-list>\r\n\r\n\r\n                        <label style=\"width: 3.2rem; text-align: right;\">\r\n                          <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapBottom')}}</span>\r\n                        </label>\r\n                        <farris-number-spinner class=\"m-1\" id=\"itemGap\" style=\"width: 30%\" [(ngModel)]=\"vmBottom\"\r\n                                               [min]=\"0\">\r\n                        </farris-number-spinner>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-md-12 col-lg-12\">\r\n                      <div class=\"form-group farris-form-group flex-fill\">\r\n                      <label style=\"width: 3.2rem; text-align: right;\">\r\n                        <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapLeft')}}</span>\r\n                      </label>\r\n                      <farris-combo-list class=\"m-1\" style=\"width: 30%\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.select')\"\r\n                                         [(ngModel)]=\"vmLeftValue\" [data]=\"xAxisAlignData\" [textField]=\"'name'\"\r\n                                         [idField]=\"'value'\" [enableClear]=\"false\">\r\n                      </farris-combo-list>\r\n                      <label style=\"width: 3.2rem; text-align: right;\">\r\n                        <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.visualMapRight')}}</span>\r\n                      </label>\r\n                      <farris-number-spinner class=\"m-1\" id=\"itemGap\" style=\"width: 30%\" [(ngModel)]=\"vmRight\"\r\n                                             [min]=\"0\">\r\n                      </farris-number-spinner>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"(visualMapTypeValue && visualMapTypeValue.value == 'piecewise')\"\r\n                 class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"piecewiseType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.continuous')}}: </span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <input-group id=\"piecewiseType\" [(ngModel)]=\"vmCategories\"></input-group>\r\n                    <button [disabled]=\"cBtn\" class=\"k-button k-button-icon\" id=\"button-print\"\r\n                            (click)=\"handleBinding('c')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"(visualMapTypeValue && visualMapTypeValue.value == 'piecewise')\"\r\n                 class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd1\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of visualMapCategories\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd1\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemove('c', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"(visualMapTypeValue && visualMapTypeValue.value == 'piecewise')\"\r\n                 class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"piecewiseType1\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.piecewise')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    min:\r\n                    <farris-number-spinner id=\"itemGap\" style=\"width: 37%\" [(ngModel)]=\"vmPiecesMin\" [min]=\"0\">\r\n                    </farris-number-spinner>\r\n                    max:\r\n                    <farris-number-spinner id=\"itemGap\" style=\"width: 37%\" [(ngModel)]=\"vmPiecesMax\" [min]=\"0\">\r\n                    </farris-number-spinner>\r\n                    <button [disabled]=\"pBtn\" class=\"k-button k-button-icon\" id=\"button-print\"\r\n                            (click)=\"handleBinding('p')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"(visualMapTypeValue && visualMapTypeValue.value == 'piecewise')\"\r\n                 class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of visualMapPieces\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      min: {{feild.min}}, max: {{feild.max}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                                                        (click)=\"handleRemove('p', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n        <fieldSet farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.otherStyle')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"visualMapType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsStyle.customStyle')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <textarea class=\"form-control\" rows=\"4\" [(ngModel)]=\"customOption\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n      </div>\r\n    </div>\r\n  </perfect-scrollbar>\r\n</div>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ChartsStyleComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    ChartsStyleComponent.propDecorators = {
        currSchema: [{ type: Input }],
        chartsType: [{ type: Input }]
    };
    return ChartsStyleComponent;
}());
export { ChartsStyleComponent };
if (false) {
    /** @type {?} */
    ChartsStyleComponent.prototype.currSchema;
    /** @type {?} */
    ChartsStyleComponent.prototype.chartsType;
    /** @type {?} */
    ChartsStyleComponent.prototype.chartsStyle;
    /** @type {?} */
    ChartsStyleComponent.prototype.title;
    /** @type {?} */
    ChartsStyleComponent.prototype.xAxisAlignData;
    /** @type {?} */
    ChartsStyleComponent.prototype.xAxisAlignValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.yAxisAlignData;
    /** @type {?} */
    ChartsStyleComponent.prototype.yAxisAlignValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.fontFamilyData;
    /** @type {?} */
    ChartsStyleComponent.prototype.fontFamily;
    /** @type {?} */
    ChartsStyleComponent.prototype.fontSizeData;
    /** @type {?} */
    ChartsStyleComponent.prototype.fontSize;
    /** @type {?} */
    ChartsStyleComponent.prototype.textStyle;
    /** @type {?} */
    ChartsStyleComponent.prototype.legendAlignData;
    /** @type {?} */
    ChartsStyleComponent.prototype.legendAlignValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.orientData;
    /** @type {?} */
    ChartsStyleComponent.prototype.legendOrientValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.visualMapOrientValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.itemGap;
    /** @type {?} */
    ChartsStyleComponent.prototype.itemWidth;
    /** @type {?} */
    ChartsStyleComponent.prototype.itemHeight;
    /** @type {?} */
    ChartsStyleComponent.prototype.visualMapTypeData;
    /** @type {?} */
    ChartsStyleComponent.prototype.visualMapTypeValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.dataMultiple;
    /** @type {?} */
    ChartsStyleComponent.prototype.dataMultipleValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmTopValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmLeftValue;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmTop;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmBottom;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmLeft;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmRight;
    /** @type {?} */
    ChartsStyleComponent.prototype.visualMapPieces;
    /** @type {?} */
    ChartsStyleComponent.prototype.visualMapCategories;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmPiecesMin;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmPiecesMax;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmCategories;
    /** @type {?} */
    ChartsStyleComponent.prototype.isWeight;
    /** @type {?} */
    ChartsStyleComponent.prototype.isStyle;
    /** @type {?} */
    ChartsStyleComponent.prototype.cBtn;
    /** @type {?} */
    ChartsStyleComponent.prototype.pBtn;
    /** @type {?} */
    ChartsStyleComponent.prototype.tBtn;
    /** @type {?} */
    ChartsStyleComponent.prototype.size;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmMax;
    /** @type {?} */
    ChartsStyleComponent.prototype.vmMin;
    /** @type {?} */
    ChartsStyleComponent.prototype.localizeService;
    /** @type {?} */
    ChartsStyleComponent.prototype.customOption;
    /**
     * @type {?}
     * @private
     */
    ChartsStyleComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,