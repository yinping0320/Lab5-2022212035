/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Injector } from '@angular/core';
import { findIndex } from 'lodash-es';
import { LocalizeService } from '@qdp/localize';
export class ChartsDataComponent {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        this.injector = injector;
        // 一类一排
        this.live1 = [1, 1, 0, 0, 0, 0, 0];
        this.live2 = [0, 0, 1, 1, 1, 1, 1];
        this.live3 = [0, 0, 1, 1, 0, 0, 0];
        this.live = [];
        this.axisTypeData = [
            { name: '分类', value: 'category' },
            { name: '值', value: 'value' }
        ];
        this.xAxisTypeSelectValue = this.axisTypeData[0].value;
        this.yAxisTypeSelectValue = this.axisTypeData[1].value;
        this.xAxisDisableItemIndex = -1;
        this.yAxisDisableItemIndex = -1;
        this.xPositionData = [
            { name: '下', value: 'bottom' },
            { name: '上', value: 'top' }
        ];
        this.xPositionValue = this.xPositionData[0].value;
        this.yPositionData = [
            { name: '左', value: 'left' },
            { name: '右', value: 'right' }
        ];
        this.yPositionValue = this.yPositionData[0].value;
        this.bindingData = [
        // { 'name': 'Code', value: 'Code' },
        // { 'name': 'Name', value: 'Name' },
        // { 'name': 'Value', value: 'Value' },
        ];
        this.barTypeData = [
            { name: '单列', value: 1 },
            { name: '多列', value: 2 },
            { name: '叠加', value: 3 },
        ];
        this.barTypeSelectValue = this.barTypeData[0];
        this.dimensionFieldList = [];
        this.indicatorFieldList = [];
        this.xAxisBindingFeildList = [];
        this.yAxisBindingFeildList = [];
        // legendBindingFeildList: any[] = [];
        this.firstBindingFeildList = [];
        this.secondBindingFeildList = [];
        this.thirdBindingFeildList = [];
        this.fourthBindingFeildList = [];
        this.fifthBindingFeildList = [];
        this.aggreData = [
            { name: '请选择', value: 0 },
            { name: '合计', value: 1 },
            { name: '最小值', value: 2 },
            { name: '最大值', value: 3 },
            { name: '计数', value: 4 },
            { name: '平均值', value: 5 }
        ];
        this.aggreSelectValue = this.aggreData[0].value;
        this.size = {};
        this.localizeService = this.injector.get(LocalizeService);
        this.axisTypeData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.axisTypeData');
        this.xPositionData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.xPositionData');
        this.yPositionData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.yPositionData');
        this.barTypeData = this.localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.barTypeData');
        this.aggreData = this.localizeService.getValue('ideCmp.schemaManager.columnOption.aggregateData');
        // this.aggreData.splice(0, 1);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        /** @type {?} */
        const self = this;
        self.live = self.live1;
        if (self.chartsType === 'effectScatter') {
            self.live = self.live2;
        }
        if (self.chartsType === 'pie' || self.chartsType === 'map') {
            self.live = self.live3;
        }
        for (const changeName in changes) {
            /** @type {?} */
            const newValue = changes[changeName].currentValue;
            if (newValue !== null && newValue !== void 0) {
                switch (changeName) {
                    case 'currSchema':
                        if (newValue.schemaValue && newValue.schemaValue.groupSummarySet) {
                            this.groupSummarySet = JSON.parse(JSON.stringify(newValue.schemaValue.groupSummarySet));
                            this.dimensionFieldList = (this.groupSummarySet && this.groupSummarySet.dimensions) || [];
                            this.indicatorFieldList = (this.groupSummarySet && this.groupSummarySet.indicators) || [];
                        }
                        // todo :地图改的bug
                        if (this.chartsType !== 'effectScatter' && this.chartsType !== 'pie' && this.chartsType !== 'map') {
                            if (newValue.schemaValue && newValue.schemaValue.chartsData) {
                                /** @type {?} */
                                const str = JSON.stringify(newValue.schemaValue.chartsData);
                                this.chartsData = JSON.parse(str);
                                /** @type {?} */
                                let index = findIndex(this.axisTypeData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.xAxis.type || 'category' : 'category');
                                }));
                                this.xAxisTypeSelectValue = this.axisTypeData[index].value;
                                index = findIndex(this.axisTypeData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.yAxis.type || 'value' : 'value');
                                }));
                                this.yAxisTypeSelectValue = this.axisTypeData[index].value;
                                index = findIndex(this.xPositionData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.xAxis.position || 'bottom' : 'bottom');
                                }));
                                this.xPositionValue = this.xPositionData[index].value;
                                index = findIndex(this.yPositionData, (/**
                                 * @param {?} c
                                 * @return {?}
                                 */
                                function (c) {
                                    return c.value === (self.chartsData.xAxis ? self.chartsData.yAxis.position || 'left' : 'left');
                                }));
                                this.yPositionValue = this.yPositionData[index].value;
                                if (this.chartsData && this.chartsData.series && this.chartsData.series.type) {
                                    this.chartsType = this.chartsData.series.type;
                                }
                                this.xAxisBindingFeildList = this.chartsData.series.encode.x || this.chartsData.series.encode.name || [];
                                this.yAxisBindingFeildList = this.chartsData.series.encode.y || this.chartsData.series.encode.value1 || [];
                            }
                            // this.legendBindingFeildList = this.chartsData.legend.data||[];
                        }
                        else {
                            if (newValue.schemaValue && newValue.schemaValue.chartsData) {
                                /** @type {?} */
                                const str = JSON.stringify(newValue.schemaValue.chartsData);
                                this.chartsData = JSON.parse(str);
                                // this.legendBindingFeildList = this.chartsData.legend.data||[];
                                this.firstBindingFeildList = this.chartsData.series.encode.name || this.chartsData.series.encode.x || [];
                                this.secondBindingFeildList = this.chartsData.series.encode.value1 || this.chartsData.series.encode.y || [];
                                this.thirdBindingFeildList = this.chartsData.series.encode.lng || [];
                                this.fourthBindingFeildList = this.chartsData.series.encode.lat || [];
                                this.fifthBindingFeildList = this.chartsData.series.encode.value2 || [];
                            }
                        }
                        break;
                    case 'colList':
                        this.bindingData = newValue;
                        break;
                    case 'chartsType':
                        this.chartsType = newValue;
                        break;
                }
            }
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    barValueChange(value) {
    }
    /**
     * @param {?} itemArgs
     * @return {?}
     */
    xItemDisabled(itemArgs) {
        return itemArgs.index === this.xAxisDisableItemIndex;
    }
    /**
     * @param {?} itemArgs
     * @return {?}
     */
    yItemDisabled(itemArgs) {
        return itemArgs.index === this.yAxisDisableItemIndex;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onResized(event) {
        this.size.height = event.newHeight;
        this.size.width = event.newWidth;
    }
    /**
     * @param {?} type
     * @return {?}
     */
    handleBinding(type) {
        /** @type {?} */
        const self = this;
        /** @type {?} */
        let index = -1;
        if (type === 'dimension') {
            if (!this.dimensionField) {
                return;
            }
            index = findIndex(this.dimensionFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.dimensionField;
            }));
            if (index < 0) {
                this.dimensionFieldList.push(this.dimensionField);
            }
        }
        else if (type === 'indicator') {
            if (!this.indicatorField || !this.aggreSelectValue || this.aggreSelectValue === 0 || this.aggreSelectValue === '0') {
                return;
            }
            index = findIndex(this.indicatorFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.indicatorField;
            }));
            if (index < 0) {
                this.indicatorFieldList.push(this.aggreSelectValue + ';' + this.indicatorField);
            }
        }
        else if (type === 'x') {
            if (!this.xAxisFeild) {
                return;
            }
            index = findIndex(this.xAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.xAxisFeild;
            }));
            if (index < 0) {
                this.xAxisBindingFeildList.push(this.xAxisFeild);
            }
        }
        else if (type === 'y') {
            if (!this.yAxisFeild) {
                return;
            }
            index = findIndex(this.yAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.yAxisFeild;
            }));
            if (index < 0) {
                this.yAxisBindingFeildList.push(this.yAxisFeild);
            }
        }
        else if (type === 'f') {
            if (!this.firstFeild) {
                return;
            }
            index = findIndex(this.firstBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.firstFeild;
            }));
            if (index < 0) {
                this.firstBindingFeildList.push(this.firstFeild);
            }
        }
        else if (type === 's') {
            if (!this.secondFeild || !this.secondFeild) {
                return;
            }
            index = findIndex(this.secondBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.secondFeild;
            }));
            if (index < 0) {
                this.secondBindingFeildList.push(this.secondFeild);
            }
        }
        else if (type === 't') {
            if (!this.thirdFeild) {
                return;
            }
            index = findIndex(this.thirdBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.thirdFeild;
            }));
            if (index < 0) {
                this.thirdBindingFeildList.push(this.thirdFeild);
            }
        }
        else if (type === '4') {
            if (!this.fourthFeild) {
                return;
            }
            index = findIndex(this.fourthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.fourthFeild;
            }));
            if (index < 0) {
                this.fourthBindingFeildList.push(this.fourthFeild);
            }
        }
        else if (type === '5') {
            if (!this.fifthFeild) {
                return;
            }
            index = findIndex(this.fifthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === self.fifthFeild;
            }));
            if (index < 0) {
                this.fifthBindingFeildList.push(this.fifthFeild);
            }
        }
    }
    /**
     * @param {?} type
     * @param {?} feild
     * @return {?}
     */
    handleRemoveFeild(type, feild) {
        /** @type {?} */
        let index = -1;
        if (type === 'dimension') {
            index = findIndex(this.dimensionFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.dimensionFieldList.splice(index, 1);
        }
        else if (type === 'indicator') {
            index = findIndex(this.indicatorFieldList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c.indexOf(feild) >= 0;
            }));
            this.indicatorFieldList.splice(index, 1);
        }
        else if (type === 'x') {
            index = findIndex(this.xAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.xAxisBindingFeildList.splice(index, 1);
        }
        else if (type === 'y') {
            index = findIndex(this.yAxisBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.yAxisBindingFeildList.splice(index, 1);
        }
        else if (type === 'f') {
            index = findIndex(this.firstBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.firstBindingFeildList.splice(index, 1);
        }
        else if (type === 's') {
            index = findIndex(this.secondBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.secondBindingFeildList.splice(index, 1);
        }
        else if (type === 't') {
            index = findIndex(this.thirdBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.thirdBindingFeildList.splice(index, 1);
        }
        else if (type === '4') {
            index = findIndex(this.fourthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.fourthBindingFeildList.splice(index, 1);
        }
        else if (type === '5') {
            index = findIndex(this.fifthBindingFeildList, (/**
             * @param {?} c
             * @return {?}
             */
            function (c) {
                return c === feild;
            }));
            this.fifthBindingFeildList.splice(index, 1);
        }
    }
    /**
     * @return {?}
     */
    getChartsDataOption() {
        /** @type {?} */
        const option = {
            series: {
                type: null,
                encode: {},
            },
        };
        if (this.chartsType !== 'effectScatter' && this.chartsType !== 'pie' && this.chartsType !== 'map') {
            option.xAxis = {
                type: null,
                position: 'bottom',
                axisLine: {
                    show: true,
                },
            };
            option.yAxis = {
                type: null,
                position: 'left',
                axisLine: {
                    show: true,
                },
            };
            option.series.encode = {
                x: [this.xAxisBindingFeildList[0]],
                y: this.yAxisBindingFeildList,
            };
            option.tooltip = {
                padding: 10,
                backgroundColor: '#222',
                borderColor: '#f21',
                borderWidth: 1,
            };
            if (this.xAxisTypeSelectValue) {
                option.xAxis.type = this.xAxisTypeSelectValue;
            }
            if (this.xPositionValue) {
                option.xAxis.position = this.xPositionValue;
            }
            if (this.yAxisTypeSelectValue) {
                option.yAxis.type = this.yAxisTypeSelectValue;
            }
            if (this.yPositionValue) {
                option.yAxis.position = this.yPositionValue;
            }
        }
        if (this.chartsType !== 'effectScatter' && this.chartsType !== 'pie' && this.chartsType !== 'map' && this.yAxisBindingFeildList.length > 1) {
            option.legend = {};
            option.legend.show = true;
            option.legend.data = [];
            // tslint:disable-next-line:prefer-for-of
            for (let i = 0; i < this.yAxisBindingFeildList.length; i++) {
                // tslint:disable-next-line:prefer-for-of
                for (let j = 0; j < this.colList.length; j++) {
                    if (this.colList[j].bindField === this.yAxisBindingFeildList[i]) {
                        option.legend.data.push(this.colList[j].name);
                        break;
                    }
                }
            }
        }
        if (this.chartsType === 'pie') {
            option.xAxis = {
                type: null,
                position: 'bottom',
                axisLine: {
                    show: false,
                },
            };
            option.yAxis = {
                type: null,
                position: 'left',
                axisLine: {
                    show: false,
                },
            };
            option.tooltip = {
                formatter: '{b}:{c}</br>{d}%'
            };
            option.series.encode = {
                x: [this.firstBindingFeildList[0]],
                y: [this.secondBindingFeildList[0]],
            };
            option.legend = {
                itemGap: 10,
                itemWidth: 25,
                itemHeight: 14,
                align: 'auto',
                orient: 'horizontal'
            };
        }
        if (this.chartsType === 'map') {
            option.xAxis = {
                type: null,
                position: 'bottom',
                axisLine: {
                    show: false,
                },
            };
            option.yAxis = {
                type: null,
                position: 'left',
                axisLine: {
                    show: false,
                },
            };
            option.series = {
                roam: 'scale',
                map: 'china',
                itemStyle: {
                    emphasis: { label: { show: true } }
                },
                // 文本位置修正
                textFixed: {
                    Alaska: [20, -20]
                },
            };
            option.toolbox = {
                show: true,
                // orient: 'vertical',series-pie.encode
                left: 'left',
                top: 'top',
                feature: {
                    dataView: { readOnly: false },
                    restore: {},
                    saveAsImage: {}
                }
            },
                option.visualMap = {
                    left: 'right',
                    min: 0,
                    max: 9,
                    inRange: {
                        color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                    },
                    text: ['High', 'Low'],
                    // 文本，默认为数值文本
                    calculable: true
                },
                option.series.encode = {
                    x: [this.firstBindingFeildList[0]],
                    y: [this.secondBindingFeildList[0]],
                };
        }
        if (this.chartsType === 'effectScatter') {
            option.geo = {
                map: 'china',
                center: [115, 30],
                zoom: 1,
                roam: 'scale',
                // 缩放
                itemStyle: {
                    // 定义样式
                    normal: {
                        // 普通状态下的样式
                        areaColor: '#323c48',
                        borderColor: '#111'
                    },
                    emphasis: {
                        // 高亮状态下的样式
                        areaColor: '#2a333d'
                    }
                }
            };
            option.tooltip = {
                padding: 10,
                backgroundColor: '#333',
                borderColor: '#777',
                borderWidth: 1,
            };
            option.series = {
                name: 'map',
                coordinateSystem: 'geo',
            };
            option.series.encode = {
                name: [this.firstBindingFeildList[0]],
                lng: [this.thirdBindingFeildList[0]],
                lat: [this.fourthBindingFeildList[0]],
                value1: [this.secondBindingFeildList[0]],
                value2: this.fifthBindingFeildList,
                tooltip: [this.firstBindingFeildList[0], this.secondBindingFeildList[0]]
            };
            option.visualMap = [{
                    type: 'continuous',
                    top: 'top',
                    left: 'right',
                    dimension: 1,
                    calculable: true,
                    min: 0,
                    max: 1000,
                    inRange: {
                        color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                        // colorLightness: [1, 0.5],
                        // 指定数值从低到高时的颜色变化
                    },
                    outOfRange: {
                        color: ['rgba(255,255,255,.2)']
                    },
                    controller: {
                        inRange: {
                            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']
                        },
                        outOfRange: {
                            color: ['#444']
                        }
                    },
                    textStyle: {
                        color: '#837' // 值域控件的文本颜色
                    }
                }, {
                    // 添加第二个视觉组件
                    right: 'right',
                    top: 'bottom',
                    dimension: 2,
                    type: 'continuous',
                    // 连续型
                    min: 0,
                    // 值域最小值，必须参数
                    max: 1000,
                    // 值域最大值，必须参数
                    calculable: true,
                    // 是否启用值域漫游
                    itemWidth: 30,
                    itemHeight: 120,
                    // vm的大小
                    // 变小
                    // text: ["数值2"],
                    textGap: 30,
                    // 图形的上下
                    inRange: {
                        symbolSize: [5, 30],
                    },
                    outOfRange: {
                        symbolSize: [5, 30],
                        color: ['rgba(255,255,255,.2)']
                    },
                    textStyle: {
                        color: '#837'
                    },
                    controller: {
                        inRange: {
                            color: ['#c23531']
                        },
                        outOfRange: {
                            color: ['#444']
                        }
                    }
                }];
            if (this.fifthBindingFeildList !== []) {
                option.series.encode.tooltip.push(this.fifthBindingFeildList[0]);
            }
        }
        // console.log(JSON.stringify(option));
        return option;
    }
    /**
     * @return {?}
     */
    getGroupSummarySetOption() {
        /** @type {?} */
        const option = {
            dimensions: null,
            indicators: null
        };
        try {
            if (this.dimensionFieldList && this.dimensionFieldList.length) {
                option.dimensions = this.dimensionFieldList;
            }
            if (this.indicatorFieldList && this.indicatorFieldList.length) {
                option.indicators = this.indicatorFieldList;
            }
            return option;
        }
        catch (e) {
            return option;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    myIsNaN(value) {
        return !isNaN(value);
    }
}
ChartsDataComponent.decorators = [
    { type: Component, args: [{
                selector: 'charts-data',
                template: "<div class=\"d-flex flex-row flex-fill h-100\" (resized)=\"onResized($event)\">\r\n  <perfect-scrollbar [config]=\"{}\">\r\n    <div class=\"flex-fill farris-split-section m-1 farris-overflow-hidden\">\r\n      <div class=\"farris-form farris-card-content-bg\">\r\n        <fieldset farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.dimensionSetting')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"dimensionList\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.dimension')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\" style=\"width: 91%\">\r\n                      <farris-combo-list id=\"dimensionList\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"dimensionField\"\r\n                                         [data]=\"bindingData\" [textField]=\"'name'\" [idField]=\"'bindField'\" \r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('dimension')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of dimensionFieldList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('dimension', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"indicatorList\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.indicator')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\" style=\"width: 51%\">\r\n                      <farris-combo-list id=\"indicatorList\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"indicatorField\"\r\n                                         [data]=\"bindingData\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <div class=\"farris-input-wrap\" style=\"width: 40%\">\r\n                      <farris-combo-list id=\"indicatorList\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"aggreSelectValue\"\r\n                                         [data]=\"aggreData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\"\r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('indicator')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of indicatorFieldList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd\">\r\n                      {{feild && myIsNaN(feild.substring(0, 1)) ? feild.replace(feild.substring(0, 1), aggreData[feild.substring(0, 1)].name).replace(';', '(') + ')' : feild }}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('indicator', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldSet *ngIf=\"live[0]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.xAxis')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.type')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <!--                    <farris-combo-list id=\"chartsType\" [(ngModel)]=\"chartsTypeSelectValue\" [data]=\"chartsTypeData\"-->\r\n                    <!--                                       [textField]=\"'name'\" [idField]=\"'value'\" (valueChange)=\"valueChange($event)\" ></farris-combo-list>-->\r\n                    <farris-combo-list id=\"xAxisType\" [(ngModel)]=\"xAxisTypeSelectValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\"\r\n                                       [data]=\"axisTypeData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisPosition\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.position')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"xAxisPosition\" [(ngModel)]=\"xPositionValue\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\"\r\n                                       [data]=\"xPositionData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n\r\n                    <div class=\"farris-input-wrap\" style=\"width: 91%\">\r\n                      <farris-combo-list id=\"xAxisBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"xAxisFeild\"\r\n                                         [data]=\"bindingData\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                      >\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('x')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of xAxisBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('x', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n        <fieldSet *ngIf=\"live[1]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.yAxis')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"yAxisType\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.type')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"yAxisType\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"yAxisTypeSelectValue\"\r\n                                       [data]=\"axisTypeData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"yAxisPosition\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.position')}}:</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"yAxisPosition\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [(ngModel)]=\"yPositionValue\"\r\n                                       [data]=\"yPositionData\" [textField]=\"'name'\" [idField]=\"'value'\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"xAxisBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"xAxisBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                         [(ngModel)]=\"yAxisFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                         style=\" width: 91%\">\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('y')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd1\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of yAxisBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd1\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('y', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[2]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.name')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                         [(ngModel)]=\"firstFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                         style=\"width: 91%\">\r\n                      </farris-combo-list>\r\n                    </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('f')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of firstBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('f', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[3]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.numerical1')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"secondFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('s')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of secondBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('s', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[4]\" arrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.longitude')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"thirdFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('t')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of thirdBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('t', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[5]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.latitude')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"fourthFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('4')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of fourthBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('4', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n\r\n\r\n        <fieldSet *ngIf=\"live[6]\" farrisFold class=\"col-12\">\r\n          <legend class=\"ml-2 f-legend-icon f-legend-show\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.numerical2')}}</legend>\r\n          <div class=\"d-flex flex-wrap mb-2\">\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"legendBinding\">\r\n                    <span class=\"farris-label-text\">{{localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.binding')}}:</span>\r\n                  </label>\r\n                  <div class=\"form-group farris-form-group flex-fill\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-combo-list id=\"legendBinding\" [placeholder]=\"localizeService.getValue('ideCmp.chartsSchemaManager.chartsData.select')\" [data]=\"bindingData\"\r\n                                       [(ngModel)]=\"fifthFeild\" [textField]=\"'name'\" [idField]=\"'bindField'\"\r\n                                       style=\"width: 91%\">\r\n                    </farris-combo-list>\r\n                  </div>\r\n                    <button class=\"k-button k-button-icon\" id=\"button-print\" (click)=\"handleBinding('5')\">\r\n                      <span class=\"k-icon k-i-plus-sm\" role=\"presentation\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12 col-lg-12\">\r\n              <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\" for=\"buttonadd2\">\r\n                    <span class=\"farris-label-text\"></span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <button *ngFor=\"let feild of fifthBindingFeildList\" class=\"k-button k-outline mr-2\"\r\n                            id=\"buttonadd2\">\r\n                      {{feild}}&nbsp;<span class=\"k-icon k-i-close\" role=\"presentation\"\r\n                                           (click)=\"handleRemoveFeild('5', feild)\"></span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldSet>\r\n      </div>\r\n    </div>\r\n  </perfect-scrollbar>\r\n</div>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
ChartsDataComponent.ctorParameters = () => [
    { type: Injector }
];
ChartsDataComponent.propDecorators = {
    currSchema: [{ type: Input }],
    chartsType: [{ type: Input }],
    colList: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ChartsDataComponent.prototype.currSchema;
    /** @type {?} */
    ChartsDataComponent.prototype.chartsType;
    /** @type {?} */
    ChartsDataComponent.prototype.colList;
    /** @type {?} */
    ChartsDataComponent.prototype.live1;
    /** @type {?} */
    ChartsDataComponent.prototype.live2;
    /** @type {?} */
    ChartsDataComponent.prototype.live3;
    /** @type {?} */
    ChartsDataComponent.prototype.live;
    /** @type {?} */
    ChartsDataComponent.prototype.groupSummarySet;
    /** @type {?} */
    ChartsDataComponent.prototype.chartsData;
    /** @type {?} */
    ChartsDataComponent.prototype.axisTypeData;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisTypeSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisTypeSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisDisableItemIndex;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisDisableItemIndex;
    /** @type {?} */
    ChartsDataComponent.prototype.xPositionData;
    /** @type {?} */
    ChartsDataComponent.prototype.xPositionValue;
    /** @type {?} */
    ChartsDataComponent.prototype.yPositionData;
    /** @type {?} */
    ChartsDataComponent.prototype.yPositionValue;
    /** @type {?} */
    ChartsDataComponent.prototype.bindingData;
    /** @type {?} */
    ChartsDataComponent.prototype.barTypeData;
    /** @type {?} */
    ChartsDataComponent.prototype.barTypeSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.dimensionField;
    /** @type {?} */
    ChartsDataComponent.prototype.indicatorField;
    /** @type {?} */
    ChartsDataComponent.prototype.dimensionFieldList;
    /** @type {?} */
    ChartsDataComponent.prototype.indicatorFieldList;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.firstFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.secondFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.thirdFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.fourthFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.fifthFeild;
    /** @type {?} */
    ChartsDataComponent.prototype.xAxisBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.yAxisBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.firstBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.secondBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.thirdBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.fourthBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.fifthBindingFeildList;
    /** @type {?} */
    ChartsDataComponent.prototype.aggreData;
    /** @type {?} */
    ChartsDataComponent.prototype.aggreSelectValue;
    /** @type {?} */
    ChartsDataComponent.prototype.size;
    /** @type {?} */
    ChartsDataComponent.prototype.localizeService;
    /**
     * @type {?}
     * @private
     */
    ChartsDataComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnRzLWRhdGEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHFkcC9pZGUtY21wLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9jaGFydHMtc2NoZW1hLWVkaXRvci9jaGFydHMtZGF0YS9jaGFydHMtZGF0YS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFvQyxRQUFRLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBQzNHLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVFoRCxNQUFNLE9BQU8sbUJBQW1COzs7O0lBMEU5QixZQUFvQixRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVOztRQXJFdEMsVUFBSyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUIsVUFBSyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUIsVUFBSyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUIsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUdWLGlCQUFZLEdBQVE7WUFDbEIsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUU7WUFDakMsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUU7U0FDOUIsQ0FBQztRQUNGLHlCQUFvQixHQUFRLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFD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REFBMkI7O0lBQzNCLG9EQUEyQjs7SUFFM0IsNENBR0U7O0lBQ0YsNkNBQWtEOztJQUNsRCw0Q0FHRTs7SUFDRiw2Q0FBa0Q7O0lBRWxELDBDQUlFOztJQUNGLDBDQUlFOztJQUNGLGlEQUE4Qzs7SUFDOUMsNkNBQW9COztJQUNwQiw2Q0FBb0I7O0lBQ3BCLGlEQUErQjs7SUFDL0IsaURBQStCOztJQUMvQix5Q0FBZ0I7O0lBQ2hCLHlDQUFnQjs7SUFFaEIseUNBQWdCOztJQUNoQiwwQ0FBaUI7O0lBQ2pCLHlDQUFnQjs7SUFDaEIsMENBQWlCOztJQUNqQix5Q0FBZ0I7O0lBQ2hCLG9EQUFrQzs7SUFDbEMsb0RBQWtDOztJQUVsQyxvREFBa0M7O0lBQ2xDLHFEQUFtQzs7SUFDbkMsb0RBQWtDOztJQUNsQyxxREFBbUM7O0lBQ25DLG9EQUFrQzs7SUFDbEMsd0NBT0U7O0lBQ0YsK0NBQWdEOztJQUNoRCxtQ0FBZTs7SUFDZiw4Q0FBaUM7Ozs7O0lBRXJCLHVDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBJbmplY3RvciwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGZpbmRJbmRleCB9IGZyb20gJ2xvZGFzaC1lcyc7XHJcbmltcG9ydCB7IExvY2FsaXplU2VydmljZSB9IGZyb20gJ0BxZHAvbG9jYWxpemUnO1xyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY2hhcnRzLWRhdGEnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jaGFydHMtZGF0YS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY2hhcnRzLWRhdGEuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDaGFydHNEYXRhQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xyXG4gIEBJbnB1dCgpIGN1cnJTY2hlbWE6IGFueTtcclxuICBASW5wdXQoKSBjaGFydHNUeXBlOiBhbnk7XHJcbiAgQElucHV0KCkgY29sTGlzdDogYW55O1xyXG4gIC8vIOS4gOexu+S4gOaOklxyXG4gIGxpdmUxID0gWzEsIDEsIDAsIDAsIDAsIDAsIDBdO1xyXG4gIGxpdmUyID0gWzAsIDAsIDEsIDEsIDEsIDEsIDFdO1xyXG4gIGxpdmUzID0gWzAsIDAsIDEsIDEsIDAsIDAsIDBdO1xyXG4gIGxpdmUgPSBbXTtcclxuICBncm91cFN1bW1hcnlTZXQ6IGFueTtcclxuICBjaGFydHNEYXRhOiBhbnk7XHJcbiAgYXhpc1R5cGVEYXRhOiBhbnkgPSBbXHJcbiAgICB7IG5hbWU6ICfliIbnsbsnLCB2YWx1ZTogJ2NhdGVnb3J5JyB9LFxyXG4gICAgeyBuYW1lOiAn5YC8JywgdmFsdWU6ICd2YWx1ZScgfVxyXG4gIF07XHJcbiAgeEF4aXNUeXBlU2VsZWN0VmFsdWU6IGFueSA9IHRoaXMuYXhpc1R5cGVEYXRhWzBdLnZhbHVlO1xyXG4gIHlBeGlzVHlwZVNlbGVjdFZhbHVlOiBhbnkgPSB0aGlzLmF4aXNUeXBlRGF0YVsxXS52YWx1ZTtcclxuICB4QXhpc0Rpc2FibGVJdGVtSW5kZXggPSAtMTtcclxuICB5QXhpc0Rpc2FibGVJdGVtSW5kZXggPSAtMTtcclxuXHJcbiAgeFBvc2l0aW9uRGF0YTogYW55ID0gW1xyXG4gICAgeyBuYW1lOiAn5LiLJywgdmFsdWU6ICdib3R0b20nIH0sXHJcbiAgICB7IG5hbWU6ICfkuIonLCB2YWx1ZTogJ3RvcCcgfVxyXG4gIF07XHJcbiAgeFBvc2l0aW9uVmFsdWU6IGFueSA9IHRoaXMueFBvc2l0aW9uRGF0YVswXS52YWx1ZTtcclxuICB5UG9zaXRpb25EYXRhOiBhbnkgPSBbXHJcbiAgICB7IG5hbWU6ICflt6YnLCB2YWx1ZTogJ2xlZnQnIH0sXHJcbiAgICB7IG5hbWU6ICflj7MnLCB2YWx1ZTogJ3JpZ2h0JyB9XHJcbiAgXTtcclxuICB5UG9zaXRpb25WYWx1ZTogYW55ID0gdGhpcy55UG9zaXRpb25EYXRhWzBdLnZhbHVlO1xyXG5cclxuICBiaW5kaW5nRGF0YTogYW55ID0gW1xyXG4gICAgLy8geyAnbmFtZSc6ICdDb2RlJywgdmFsdWU6ICdDb2RlJyB9LFxyXG4gICAgLy8geyAnbmFtZSc6ICdOYW1lJywgdmFsdWU6ICdOYW1lJyB9LFxyXG4gICAgLy8geyAnbmFtZSc6ICdWYWx1ZScsIHZhbHVlOiAnVmFsdWUnIH0sXHJcbiAgXTtcclxuICBiYXJUeXBlRGF0YTogYW55ID0gW1xyXG4gICAgeyBuYW1lOiAn5Y2V5YiXJywgdmFsdWU6IDEgfSxcclxuICAgIHsgbmFtZTogJ+WkmuWIlycsIHZhbHVlOiAyIH0sXHJcbiAgICB7IG5hbWU6ICflj6DliqAnLCB2YWx1ZTogMyB9LFxyXG4gIF07XHJcbiAgYmFyVHlwZVNlbGVjdFZhbHVlOiBhbnkgPSB0aGlzLmJhclR5cGVEYXRhWzBdO1xyXG4gIGRpbWVuc2lvbkZpZWxkOiBhbnk7XHJcbiAgaW5kaWNhdG9yRmllbGQ6IGFueTtcclxuICBkaW1lbnNpb25GaWVsZExpc3Q6IGFueVtdID0gW107XHJcbiAgaW5kaWNhdG9yRmllbGRMaXN0OiBhbnlbXSA9IFtdO1xyXG4gIHhBeGlzRmVpbGQ6IGFueTtcclxuICB5QXhpc0ZlaWxkOiBhbnk7XHJcbiAgLy8gbGVnZW5kRmVpbGQ6IGFueTtcclxuICBmaXJzdEZlaWxkOiBhbnk7XHJcbiAgc2Vjb25kRmVpbGQ6IGFueTtcclxuICB0aGlyZEZlaWxkOiBhbnk7XHJcbiAgZm91cnRoRmVpbGQ6IGFueTtcclxuICBmaWZ0aEZlaWxkOiBhbnk7XHJcbiAgeEF4aXNCaW5kaW5nRmVpbGRMaXN0OiBhbnlbXSA9IFtdO1xyXG4gIHlBeGlzQmluZGluZ0ZlaWxkTGlzdDogYW55W10gPSBbXTtcclxuICAvLyBsZWdlbmRCaW5kaW5nRmVpbGRMaXN0OiBhbnlbXSA9IFtdO1xyXG4gIGZpcnN0QmluZGluZ0ZlaWxkTGlzdDogYW55W10gPSBbXTtcclxuICBzZWNvbmRCaW5kaW5nRmVpbGRMaXN0OiBhbnlbXSA9IFtdO1xyXG4gIHRoaXJkQmluZGluZ0ZlaWxkTGlzdDogYW55W10gPSBbXTtcclxuICBmb3VydGhCaW5kaW5nRmVpbGRMaXN0OiBhbnlbXSA9IFtdO1xyXG4gIGZpZnRoQmluZGluZ0ZlaWxkTGlzdDogYW55W10gPSBbXTtcclxuICBhZ2dyZURhdGE6IGFueSA9IFtcclxuICAgIHsgbmFtZTogJ+ivt+mAieaLqScsIHZhbHVlOiAwIH0sXHJcbiAgICB7IG5hbWU6ICflkIjorqEnLCB2YWx1ZTogMSB9LFxyXG4gICAgeyBuYW1lOiAn5pyA5bCP5YC8JywgdmFsdWU6IDIgfSxcclxuICAgIHsgbmFtZTogJ+acgOWkp+WAvCcsIHZhbHVlOiAzIH0sXHJcbiAgICB7IG5hbWU6ICforqHmlbAnLCB2YWx1ZTogNCB9LFxyXG4gICAgeyBuYW1lOiAn5bmz5Z2H5YC8JywgdmFsdWU6IDUgfVxyXG4gIF07XHJcbiAgYWdncmVTZWxlY3RWYWx1ZTogYW55ID0gdGhpcy5hZ2dyZURhdGFbMF0udmFsdWU7XHJcbiAgc2l6ZTogYW55ID0ge307XHJcbiAgbG9jYWxpemVTZXJ2aWNlOiBMb2NhbGl6ZVNlcnZpY2U7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICB0aGlzLmxvY2FsaXplU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KExvY2FsaXplU2VydmljZSk7XHJcbiAgICB0aGlzLmF4aXNUeXBlRGF0YSA9IHRoaXMubG9jYWxpemVTZXJ2aWNlLmdldFZhbHVlKCdpZGVDbXAuY2hhcnRzU2NoZW1hTWFuYWdlci5jaGFydHNEYXRhLmF4aXNUeXBlRGF0YScpO1xyXG4gICAgdGhpcy54UG9zaXRpb25EYXRhID0gdGhpcy5sb2NhbGl6ZVNlcnZpY2UuZ2V0VmFsdWUoJ2lkZUNtcC5jaGFydHNTY2hlbWFNYW5hZ2VyLmNoYXJ0c0RhdGEueFBvc2l0aW9uRGF0YScpO1xyXG4gICAgdGhpcy55UG9zaXRpb25EYXRhID0gdGhpcy5sb2NhbGl6ZVNlcnZpY2UuZ2V0VmFsdWUoJ2lkZUNtcC5jaGFydHNTY2hlbWFNYW5hZ2VyLmNoYXJ0c0RhdGEueVBvc2l0aW9uRGF0YScpO1xyXG4gICAgdGhpcy5iYXJUeXBlRGF0YSA9IHRoaXMubG9jYWxpemVTZXJ2aWNlLmdldFZhbHVlKCdpZGVDbXAuY2hhcnRzU2NoZW1hTWFuYWdlci5jaGFydHNEYXRhLmJhclR5cGVEYXRhJyk7XHJcbiAgICB0aGlzLmFnZ3JlRGF0YSA9IHRoaXMubG9jYWxpemVTZXJ2aWNlLmdldFZhbHVlKCdpZGVDbXAuc2NoZW1hTWFuYWdlci5jb2x1bW5PcHRpb24uYWdncmVnYXRlRGF0YScpO1xyXG4gICAgLy8gdGhpcy5hZ2dyZURhdGEuc3BsaWNlKDAsIDEpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgIHNlbGYubGl2ZSA9IHNlbGYubGl2ZTE7XHJcbiAgICBpZiAoc2VsZi5jaGFydHNUeXBlID09PSAnZWZmZWN0U2NhdHRlcicpIHtcclxuICAgICAgc2VsZi5saXZlID0gc2VsZi5saXZlMjtcclxuICAgIH1cclxuICAgIGlmIChzZWxmLmNoYXJ0c1R5cGUgPT09ICdwaWUnIHx8IHNlbGYuY2hhcnRzVHlwZSA9PT0gJ21hcCcpIHtcclxuICAgICAgc2VsZi5saXZlID0gc2VsZi5saXZlMztcclxuICAgIH1cclxuICAgIGZvciAoY29uc3QgY2hhbmdlTmFtZSBpbiBjaGFuZ2VzKSB7XHJcbiAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY2hhbmdlc1tjaGFuZ2VOYW1lXS5jdXJyZW50VmFsdWU7XHJcbiAgICAgIGlmIChuZXdWYWx1ZSAhPT0gbnVsbCAmJiBuZXdWYWx1ZSAhPT0gdm9pZCAwKSB7XHJcbiAgICAgICAgc3dpdGNoIChjaGFuZ2VOYW1lKSB7XHJcbiAgICAgICAgICBjYXNlICdjdXJyU2NoZW1hJzpcclxuICAgICAgICAgICAgaWYgKG5ld1ZhbHVlLnNjaGVtYVZhbHVlICYmIG5ld1ZhbHVlLnNjaGVtYVZhbHVlLmdyb3VwU3VtbWFyeVNldCkge1xyXG4gICAgICAgICAgICAgIHRoaXMuZ3JvdXBTdW1tYXJ5U2V0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShuZXdWYWx1ZS5zY2hlbWFWYWx1ZS5ncm91cFN1bW1hcnlTZXQpKTtcclxuICAgICAgICAgICAgICB0aGlzLmRpbWVuc2lvbkZpZWxkTGlzdCA9ICh0aGlzLmdyb3VwU3VtbWFyeVNldCAmJiB0aGlzLmdyb3VwU3VtbWFyeVNldC5kaW1lbnNpb25zKSB8fCBbXTtcclxuICAgICAgICAgICAgICB0aGlzLmluZGljYXRvckZpZWxkTGlzdCA9ICh0aGlzLmdyb3VwU3VtbWFyeVNldCAmJiB0aGlzLmdyb3VwU3VtbWFyeVNldC5pbmRpY2F0b3JzKSB8fCBbXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyB0b2RvIDrlnLDlm77mlLnnmoRidWdcclxuICAgICAgICAgICAgaWYgKHRoaXMuY2hhcnRzVHlwZSAhPT0gJ2VmZmVjdFNjYXR0ZXInICYmIHRoaXMuY2hhcnRzVHlwZSAhPT0gJ3BpZScgJiYgdGhpcy5jaGFydHNUeXBlICE9PSAnbWFwJykge1xyXG4gICAgICAgICAgICAgIGlmIChuZXdWYWx1ZS5zY2hlbWFWYWx1ZSAmJiBuZXdWYWx1ZS5zY2hlbWFWYWx1ZS5jaGFydHNEYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzdHIgPSBKU09OLnN0cmluZ2lmeShuZXdWYWx1ZS5zY2hlbWFWYWx1ZS5jaGFydHNEYXRhKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hhcnRzRGF0YSA9IEpTT04ucGFyc2Uoc3RyKTtcclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgaW5kZXggPSBmaW5kSW5kZXgodGhpcy5heGlzVHlwZURhdGEsIGZ1bmN0aW9uIChjOiBhbnkpIHtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIGMudmFsdWUgPT09IChzZWxmLmNoYXJ0c0RhdGEueEF4aXMgPyBzZWxmLmNoYXJ0c0RhdGEueEF4aXMudHlwZSB8fCAnY2F0ZWdvcnknIDogJ2NhdGVnb3J5Jyk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMueEF4aXNUeXBlU2VsZWN0VmFsdWUgPSB0aGlzLmF4aXNUeXBlRGF0YVtpbmRleF0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IGZpbmRJbmRleCh0aGlzLmF4aXNUeXBlRGF0YSwgZnVuY3Rpb24gKGM6IGFueSkge1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gYy52YWx1ZSA9PT0gKHNlbGYuY2hhcnRzRGF0YS54QXhpcyA/IHNlbGYuY2hhcnRzRGF0YS55QXhpcy50eXBlIHx8ICd2YWx1ZScgOiAndmFsdWUnKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy55QXhpc1R5cGVTZWxlY3RWYWx1ZSA9IHRoaXMuYXhpc1R5cGVEYXRhW2luZGV4XS52YWx1ZTtcclxuICAgICAgICAgICAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMueFBvc2l0aW9uRGF0YSwgZnVuY3Rpb24gKGM6IGFueSkge1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gYy52YWx1ZSA9PT0gKHNlbGYuY2hhcnRzRGF0YS54QXhpcyA/IHNlbGYuY2hhcnRzRGF0YS54QXhpcy5wb3NpdGlvbiB8fCAnYm90dG9tJyA6ICdib3R0b20nKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy54UG9zaXRpb25WYWx1ZSA9IHRoaXMueFBvc2l0aW9uRGF0YVtpbmRleF0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICBpbmRleCA9IGZpbmRJbmRleCh0aGlzLnlQb3NpdGlvbkRhdGEsIGZ1bmN0aW9uIChjOiBhbnkpIHtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIGMudmFsdWUgPT09IChzZWxmLmNoYXJ0c0RhdGEueEF4aXMgPyBzZWxmLmNoYXJ0c0RhdGEueUF4aXMucG9zaXRpb24gfHwgJ2xlZnQnIDogJ2xlZnQnKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy55UG9zaXRpb25WYWx1ZSA9IHRoaXMueVBvc2l0aW9uRGF0YVtpbmRleF0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGFydHNEYXRhICYmIHRoaXMuY2hhcnRzRGF0YS5zZXJpZXMgJiYgdGhpcy5jaGFydHNEYXRhLnNlcmllcy50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgIHRoaXMuY2hhcnRzVHlwZSA9IHRoaXMuY2hhcnRzRGF0YS5zZXJpZXMudHlwZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMueEF4aXNCaW5kaW5nRmVpbGRMaXN0ID0gdGhpcy5jaGFydHNEYXRhLnNlcmllcy5lbmNvZGUueCB8fCB0aGlzLmNoYXJ0c0RhdGEuc2VyaWVzLmVuY29kZS5uYW1lIHx8IFtdO1xyXG4gICAgICAgICAgICAgICAgdGhpcy55QXhpc0JpbmRpbmdGZWlsZExpc3QgPSB0aGlzLmNoYXJ0c0RhdGEuc2VyaWVzLmVuY29kZS55IHx8IHRoaXMuY2hhcnRzRGF0YS5zZXJpZXMuZW5jb2RlLnZhbHVlMSB8fCBbXTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLy8gdGhpcy5sZWdlbmRCaW5kaW5nRmVpbGRMaXN0ID0gdGhpcy5jaGFydHNEYXRhLmxlZ2VuZC5kYXRhfHxbXTtcclxuXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlLnNjaGVtYVZhbHVlICYmIG5ld1ZhbHVlLnNjaGVtYVZhbHVlLmNoYXJ0c0RhdGEpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHN0ciA9IEpTT04uc3RyaW5naWZ5KG5ld1ZhbHVlLnNjaGVtYVZhbHVlLmNoYXJ0c0RhdGEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFydHNEYXRhID0gSlNPTi5wYXJzZShzdHIpO1xyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5sZWdlbmRCaW5kaW5nRmVpbGRMaXN0ID0gdGhpcy5jaGFydHNEYXRhLmxlZ2VuZC5kYXRhfHxbXTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlyc3RCaW5kaW5nRmVpbGRMaXN0ID0gdGhpcy5jaGFydHNEYXRhLnNlcmllcy5lbmNvZGUubmFtZSB8fCB0aGlzLmNoYXJ0c0RhdGEuc2VyaWVzLmVuY29kZS54IHx8IFtdO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWNvbmRCaW5kaW5nRmVpbGRMaXN0ID0gdGhpcy5jaGFydHNEYXRhLnNlcmllcy5lbmNvZGUudmFsdWUxIHx8IHRoaXMuY2hhcnRzRGF0YS5zZXJpZXMuZW5jb2RlLnkgfHwgW107XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRoaXJkQmluZGluZ0ZlaWxkTGlzdCA9IHRoaXMuY2hhcnRzRGF0YS5zZXJpZXMuZW5jb2RlLmxuZyB8fCBbXTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZm91cnRoQmluZGluZ0ZlaWxkTGlzdCA9IHRoaXMuY2hhcnRzRGF0YS5zZXJpZXMuZW5jb2RlLmxhdCB8fCBbXTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlmdGhCaW5kaW5nRmVpbGRMaXN0ID0gdGhpcy5jaGFydHNEYXRhLnNlcmllcy5lbmNvZGUudmFsdWUyIHx8IFtdO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGNhc2UgJ2NvbExpc3QnOlxyXG4gICAgICAgICAgICB0aGlzLmJpbmRpbmdEYXRhID0gbmV3VmFsdWU7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnY2hhcnRzVHlwZSc6XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcnRzVHlwZSA9IG5ld1ZhbHVlO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGJhclZhbHVlQ2hhbmdlKHZhbHVlOiBhbnkpOiB2b2lkIHtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB4SXRlbURpc2FibGVkKGl0ZW1BcmdzOiB7IGRhdGFJdGVtOiBzdHJpbmcsIGluZGV4OiBudW1iZXIgfSkge1xyXG4gICAgcmV0dXJuIGl0ZW1BcmdzLmluZGV4ID09PSB0aGlzLnhBeGlzRGlzYWJsZUl0ZW1JbmRleDtcclxuICB9XHJcblxyXG4gIHB1YmxpYyB5SXRlbURpc2FibGVkKGl0ZW1BcmdzOiB7IGRhdGFJdGVtOiBzdHJpbmcsIGluZGV4OiBudW1iZXIgfSkge1xyXG4gICAgcmV0dXJuIGl0ZW1BcmdzLmluZGV4ID09PSB0aGlzLnlBeGlzRGlzYWJsZUl0ZW1JbmRleDtcclxuICB9XHJcblxyXG4gIG9uUmVzaXplZChldmVudDogYW55KTogdm9pZCB7XHJcbiAgICB0aGlzLnNpemUuaGVpZ2h0ID0gZXZlbnQubmV3SGVpZ2h0O1xyXG4gICAgdGhpcy5zaXplLndpZHRoID0gZXZlbnQubmV3V2lkdGg7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVCaW5kaW5nKHR5cGU6IHN0cmluZykge1xyXG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICBsZXQgaW5kZXggPSAtMTtcclxuICAgIGlmICh0eXBlID09PSAnZGltZW5zaW9uJykge1xyXG4gICAgICBpZiAoIXRoaXMuZGltZW5zaW9uRmllbGQpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgaW5kZXggPSBmaW5kSW5kZXgodGhpcy5kaW1lbnNpb25GaWVsZExpc3QsIGZ1bmN0aW9uIChjOiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gYyA9PT0gc2VsZi5kaW1lbnNpb25GaWVsZDtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChpbmRleCA8IDApIHtcclxuICAgICAgICB0aGlzLmRpbWVuc2lvbkZpZWxkTGlzdC5wdXNoKHRoaXMuZGltZW5zaW9uRmllbGQpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdpbmRpY2F0b3InKSB7XHJcbiAgICAgIGlmICghdGhpcy5pbmRpY2F0b3JGaWVsZCB8fCAhdGhpcy5hZ2dyZVNlbGVjdFZhbHVlIHx8IHRoaXMuYWdncmVTZWxlY3RWYWx1ZSA9PT0gMCB8fCB0aGlzLmFnZ3JlU2VsZWN0VmFsdWUgPT09ICcwJykge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBpbmRleCA9IGZpbmRJbmRleCh0aGlzLmluZGljYXRvckZpZWxkTGlzdCwgZnVuY3Rpb24gKGM6IGFueSkge1xyXG4gICAgICAgIHJldHVybiBjID09PSBzZWxmLmluZGljYXRvckZpZWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgIHRoaXMuaW5kaWNhdG9yRmllbGRMaXN0LnB1c2godGhpcy5hZ2dyZVNlbGVjdFZhbHVlICsgJzsnICsgdGhpcy5pbmRpY2F0b3JGaWVsZCk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3gnKSB7XHJcbiAgICAgIGlmICghdGhpcy54QXhpc0ZlaWxkKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMueEF4aXNCaW5kaW5nRmVpbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IHNlbGYueEF4aXNGZWlsZDtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChpbmRleCA8IDApIHtcclxuICAgICAgICB0aGlzLnhBeGlzQmluZGluZ0ZlaWxkTGlzdC5wdXNoKHRoaXMueEF4aXNGZWlsZCk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3knKSB7XHJcbiAgICAgIGlmICghdGhpcy55QXhpc0ZlaWxkKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMueUF4aXNCaW5kaW5nRmVpbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IHNlbGYueUF4aXNGZWlsZDtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChpbmRleCA8IDApIHtcclxuICAgICAgICB0aGlzLnlBeGlzQmluZGluZ0ZlaWxkTGlzdC5wdXNoKHRoaXMueUF4aXNGZWlsZCk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ2YnKSB7XHJcbiAgICAgIGlmICghdGhpcy5maXJzdEZlaWxkKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMuZmlyc3RCaW5kaW5nRmVpbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IHNlbGYuZmlyc3RGZWlsZDtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChpbmRleCA8IDApIHtcclxuICAgICAgICB0aGlzLmZpcnN0QmluZGluZ0ZlaWxkTGlzdC5wdXNoKHRoaXMuZmlyc3RGZWlsZCk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3MnKSB7XHJcbiAgICAgIGlmICghdGhpcy5zZWNvbmRGZWlsZCB8fCAhdGhpcy5zZWNvbmRGZWlsZCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBpbmRleCA9IGZpbmRJbmRleCh0aGlzLnNlY29uZEJpbmRpbmdGZWlsZExpc3QsIGZ1bmN0aW9uIChjOiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gYyA9PT0gc2VsZi5zZWNvbmRGZWlsZDtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmIChpbmRleCA8IDApIHtcclxuICAgICAgICB0aGlzLnNlY29uZEJpbmRpbmdGZWlsZExpc3QucHVzaCh0aGlzLnNlY29uZEZlaWxkKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAndCcpIHtcclxuICAgICAgaWYgKCF0aGlzLnRoaXJkRmVpbGQpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgaW5kZXggPSBmaW5kSW5kZXgodGhpcy50aGlyZEJpbmRpbmdGZWlsZExpc3QsIGZ1bmN0aW9uIChjOiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gYyA9PT0gc2VsZi50aGlyZEZlaWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgIHRoaXMudGhpcmRCaW5kaW5nRmVpbGRMaXN0LnB1c2godGhpcy50aGlyZEZlaWxkKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAnNCcpIHtcclxuICAgICAgaWYgKCF0aGlzLmZvdXJ0aEZlaWxkKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMuZm91cnRoQmluZGluZ0ZlaWxkTGlzdCwgZnVuY3Rpb24gKGM6IGFueSkge1xyXG4gICAgICAgIHJldHVybiBjID09PSBzZWxmLmZvdXJ0aEZlaWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgaWYgKGluZGV4IDwgMCkge1xyXG4gICAgICAgIHRoaXMuZm91cnRoQmluZGluZ0ZlaWxkTGlzdC5wdXNoKHRoaXMuZm91cnRoRmVpbGQpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICc1Jykge1xyXG4gICAgICBpZiAoIXRoaXMuZmlmdGhGZWlsZCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBpbmRleCA9IGZpbmRJbmRleCh0aGlzLmZpZnRoQmluZGluZ0ZlaWxkTGlzdCwgZnVuY3Rpb24gKGM6IGFueSkge1xyXG4gICAgICAgIHJldHVybiBjID09PSBzZWxmLmZpZnRoRmVpbGQ7XHJcbiAgICAgIH0pO1xyXG4gICAgICBpZiAoaW5kZXggPCAwKSB7XHJcbiAgICAgICAgdGhpcy5maWZ0aEJpbmRpbmdGZWlsZExpc3QucHVzaCh0aGlzLmZpZnRoRmVpbGQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBoYW5kbGVSZW1vdmVGZWlsZCh0eXBlOiBzdHJpbmcsIGZlaWxkOiBzdHJpbmcpIHtcclxuICAgIGxldCBpbmRleCA9IC0xO1xyXG4gICAgaWYgKHR5cGUgPT09ICdkaW1lbnNpb24nKSB7XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMuZGltZW5zaW9uRmllbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IGZlaWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5kaW1lbnNpb25GaWVsZExpc3Quc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ2luZGljYXRvcicpIHtcclxuICAgICAgaW5kZXggPSBmaW5kSW5kZXgodGhpcy5pbmRpY2F0b3JGaWVsZExpc3QsIGZ1bmN0aW9uIChjOiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gYy5pbmRleE9mKGZlaWxkKSA+PSAwO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5pbmRpY2F0b3JGaWVsZExpc3Quc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3gnKSB7XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMueEF4aXNCaW5kaW5nRmVpbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IGZlaWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy54QXhpc0JpbmRpbmdGZWlsZExpc3Quc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3knKSB7XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMueUF4aXNCaW5kaW5nRmVpbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IGZlaWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy55QXhpc0JpbmRpbmdGZWlsZExpc3Quc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ2YnKSB7XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMuZmlyc3RCaW5kaW5nRmVpbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IGZlaWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5maXJzdEJpbmRpbmdGZWlsZExpc3Quc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3MnKSB7XHJcbiAgICAgIGluZGV4ID0gZmluZEluZGV4KHRoaXMuc2Vjb25kQmluZGluZ0ZlaWxkTGlzdCwgZnVuY3Rpb24gKGM6IGFueSkge1xyXG4gICAgICAgIHJldHVybiBjID09PSBmZWlsZDtcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuc2Vjb25kQmluZGluZ0ZlaWxkTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAndCcpIHtcclxuICAgICAgaW5kZXggPSBmaW5kSW5kZXgodGhpcy50aGlyZEJpbmRpbmdGZWlsZExpc3QsIGZ1bmN0aW9uIChjOiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gYyA9PT0gZmVpbGQ7XHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLnRoaXJkQmluZGluZ0ZlaWxkTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlID09PSAnNCcpIHtcclxuICAgICAgaW5kZXggPSBmaW5kSW5kZXgodGhpcy5mb3VydGhCaW5kaW5nRmVpbGRMaXN0LCBmdW5jdGlvbiAoYzogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIGMgPT09IGZlaWxkO1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5mb3VydGhCaW5kaW5nRmVpbGRMaXN0LnNwbGljZShpbmRleCwgMSk7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICc1Jykge1xyXG4gICAgICBpbmRleCA9IGZpbmRJbmRleCh0aGlzLmZpZnRoQmluZGluZ0ZlaWxkTGlzdCwgZnVuY3Rpb24gKGM6IGFueSkge1xyXG4gICAgICAgIHJldHVybiBjID09PSBmZWlsZDtcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuZmlmdGhCaW5kaW5nRmVpbGRMaXN0LnNwbGljZShpbmRleCwgMSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXRDaGFydHNEYXRhT3B0aW9uKCkge1xyXG4gICAgY29uc3Qgb3B0aW9uOiBhbnkgPSB7XHJcblxyXG4gICAgICBzZXJpZXM6IHtcclxuICAgICAgICB0eXBlOiBudWxsLFxyXG4gICAgICAgIGVuY29kZToge30sXHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG4gICAgaWYgKHRoaXMuY2hhcnRzVHlwZSAhPT0gJ2VmZmVjdFNjYXR0ZXInICYmIHRoaXMuY2hhcnRzVHlwZSAhPT0gJ3BpZScgJiYgdGhpcy5jaGFydHNUeXBlICE9PSAnbWFwJykge1xyXG4gICAgICBvcHRpb24ueEF4aXMgPSB7XHJcbiAgICAgICAgdHlwZTogbnVsbCxcclxuICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbScsXHJcbiAgICAgICAgYXhpc0xpbmU6IHtcclxuICAgICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgfSxcclxuICAgICAgfTtcclxuICAgICAgb3B0aW9uLnlBeGlzID0ge1xyXG4gICAgICAgIHR5cGU6IG51bGwsXHJcbiAgICAgICAgcG9zaXRpb246ICdsZWZ0JyxcclxuICAgICAgICBheGlzTGluZToge1xyXG4gICAgICAgICAgc2hvdzogdHJ1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICB9O1xyXG4gICAgICBvcHRpb24uc2VyaWVzLmVuY29kZSA9IHtcclxuICAgICAgICB4OiBbdGhpcy54QXhpc0JpbmRpbmdGZWlsZExpc3RbMF1dLFxyXG4gICAgICAgIHk6IHRoaXMueUF4aXNCaW5kaW5nRmVpbGRMaXN0LFxyXG4gICAgICB9O1xyXG4gICAgICBvcHRpb24udG9vbHRpcCA9IHtcclxuICAgICAgICBwYWRkaW5nOiAxMCxcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMjIyJyxcclxuICAgICAgICBib3JkZXJDb2xvcjogJyNmMjEnLFxyXG4gICAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICB9O1xyXG4gICAgICBpZiAodGhpcy54QXhpc1R5cGVTZWxlY3RWYWx1ZSkge1xyXG4gICAgICAgIG9wdGlvbi54QXhpcy50eXBlID0gdGhpcy54QXhpc1R5cGVTZWxlY3RWYWx1ZTtcclxuICAgICAgfVxyXG4gICAgICBpZiAodGhpcy54UG9zaXRpb25WYWx1ZSkge1xyXG4gICAgICAgIG9wdGlvbi54QXhpcy5wb3NpdGlvbiA9IHRoaXMueFBvc2l0aW9uVmFsdWU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHRoaXMueUF4aXNUeXBlU2VsZWN0VmFsdWUpIHtcclxuICAgICAgICBvcHRpb24ueUF4aXMudHlwZSA9IHRoaXMueUF4aXNUeXBlU2VsZWN0VmFsdWU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKHRoaXMueVBvc2l0aW9uVmFsdWUpIHtcclxuICAgICAgICBvcHRpb24ueUF4aXMucG9zaXRpb24gPSB0aGlzLnlQb3NpdGlvblZhbHVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuY2hhcnRzVHlwZSAhPT0gJ2VmZmVjdFNjYXR0ZXInICYmIHRoaXMuY2hhcnRzVHlwZSAhPT0gJ3BpZScgJiYgdGhpcy5jaGFydHNUeXBlICE9PSAnbWFwJyAmJiB0aGlzLnlBeGlzQmluZGluZ0ZlaWxkTGlzdC5sZW5ndGggPiAxKSB7XHJcbiAgICAgIG9wdGlvbi5sZWdlbmQgPSB7fTtcclxuICAgICAgb3B0aW9uLmxlZ2VuZC5zaG93ID0gdHJ1ZTtcclxuICAgICAgb3B0aW9uLmxlZ2VuZC5kYXRhID0gW107XHJcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpwcmVmZXItZm9yLW9mXHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy55QXhpc0JpbmRpbmdGZWlsZExpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6cHJlZmVyLWZvci1vZlxyXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5jb2xMaXN0Lmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICBpZiAodGhpcy5jb2xMaXN0W2pdLmJpbmRGaWVsZCA9PT0gdGhpcy55QXhpc0JpbmRpbmdGZWlsZExpc3RbaV0pIHtcclxuICAgICAgICAgICAgb3B0aW9uLmxlZ2VuZC5kYXRhLnB1c2godGhpcy5jb2xMaXN0W2pdLm5hbWUpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5jaGFydHNUeXBlID09PSAncGllJykge1xyXG4gICAgICBvcHRpb24ueEF4aXMgPSB7XHJcbiAgICAgICAgdHlwZTogbnVsbCxcclxuICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbScsXHJcbiAgICAgICAgYXhpc0xpbmU6IHtcclxuICAgICAgICAgIHNob3c6IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi55QXhpcyA9IHtcclxuICAgICAgICB0eXBlOiBudWxsLFxyXG4gICAgICAgIHBvc2l0aW9uOiAnbGVmdCcsXHJcbiAgICAgICAgYXhpc0xpbmU6IHtcclxuICAgICAgICAgIHNob3c6IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi50b29sdGlwID0ge1xyXG4gICAgICAgIGZvcm1hdHRlcjogJ3tifTp7Y308L2JyPntkfSUnXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi5zZXJpZXMuZW5jb2RlID0ge1xyXG4gICAgICAgIHg6IFt0aGlzLmZpcnN0QmluZGluZ0ZlaWxkTGlzdFswXV0sXHJcbiAgICAgICAgeTogW3RoaXMuc2Vjb25kQmluZGluZ0ZlaWxkTGlzdFswXV0sXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi5sZWdlbmQgPSB7XHJcbiAgICAgICAgaXRlbUdhcDogMTAsXHJcbiAgICAgICAgaXRlbVdpZHRoOiAyNSxcclxuICAgICAgICBpdGVtSGVpZ2h0OiAxNCxcclxuICAgICAgICBhbGlnbjogJ2F1dG8nLFxyXG4gICAgICAgIG9yaWVudDogJ2hvcml6b250YWwnXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5jaGFydHNUeXBlID09PSAnbWFwJykge1xyXG4gICAgICBvcHRpb24ueEF4aXMgPSB7XHJcbiAgICAgICAgdHlwZTogbnVsbCxcclxuICAgICAgICBwb3NpdGlvbjogJ2JvdHRvbScsXHJcbiAgICAgICAgYXhpc0xpbmU6IHtcclxuICAgICAgICAgIHNob3c6IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi55QXhpcyA9IHtcclxuICAgICAgICB0eXBlOiBudWxsLFxyXG4gICAgICAgIHBvc2l0aW9uOiAnbGVmdCcsXHJcbiAgICAgICAgYXhpc0xpbmU6IHtcclxuICAgICAgICAgIHNob3c6IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi5zZXJpZXMgPSB7XHJcbiAgICAgICAgcm9hbTogJ3NjYWxlJyxcclxuICAgICAgICBtYXA6ICdjaGluYScsXHJcbiAgICAgICAgaXRlbVN0eWxlOiB7XHJcbiAgICAgICAgICBlbXBoYXNpczogeyBsYWJlbDogeyBzaG93OiB0cnVlIH0gfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLy8g5paH5pys5L2N572u5L+u5q2jXHJcbiAgICAgICAgdGV4dEZpeGVkOiB7XHJcbiAgICAgICAgICBBbGFza2E6IFsyMCwgLTIwXVxyXG4gICAgICAgIH0sXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi50b29sYm94ID0ge1xyXG4gICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgLy8gb3JpZW50OiAndmVydGljYWwnLHNlcmllcy1waWUuZW5jb2RlXHJcbiAgICAgICAgbGVmdDogJ2xlZnQnLFxyXG4gICAgICAgIHRvcDogJ3RvcCcsXHJcbiAgICAgICAgZmVhdHVyZToge1xyXG4gICAgICAgICAgZGF0YVZpZXc6IHsgcmVhZE9ubHk6IGZhbHNlIH0sXHJcbiAgICAgICAgICByZXN0b3JlOiB7fSxcclxuICAgICAgICAgIHNhdmVBc0ltYWdlOiB7fVxyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgICBvcHRpb24udmlzdWFsTWFwID0ge1xyXG4gICAgICAgICAgbGVmdDogJ3JpZ2h0JyxcclxuICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgIG1heDogOSxcclxuICAgICAgICAgIGluUmFuZ2U6IHtcclxuICAgICAgICAgICAgY29sb3I6IFsnIzMxMzY5NScsICcjNDU3NWI0JywgJyM3NGFkZDEnLCAnI2FiZDllOScsICcjZTBmM2Y4JywgJyNmZmZmYmYnLCAnI2ZlZTA5MCcsICcjZmRhZTYxJywgJyNmNDZkNDMnLCAnI2Q3MzAyNycsICcjYTUwMDI2J11cclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB0ZXh0OiBbJ0hpZ2gnLCAnTG93J10sICAgICAgICAgICAvLyDmlofmnKzvvIzpu5jorqTkuLrmlbDlgLzmlofmnKxcclxuICAgICAgICAgIGNhbGN1bGFibGU6IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9wdGlvbi5zZXJpZXMuZW5jb2RlID0ge1xyXG4gICAgICAgICAgeDogW3RoaXMuZmlyc3RCaW5kaW5nRmVpbGRMaXN0WzBdXSxcclxuICAgICAgICAgIHk6IFt0aGlzLnNlY29uZEJpbmRpbmdGZWlsZExpc3RbMF1dLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5jaGFydHNUeXBlID09PSAnZWZmZWN0U2NhdHRlcicpIHtcclxuICAgICAgb3B0aW9uLmdlbyA9IHtcclxuICAgICAgICBtYXA6ICdjaGluYScsXHJcbiAgICAgICAgY2VudGVyOiBbMTE1LCAzMF0sXHJcbiAgICAgICAgem9vbTogMSxcclxuICAgICAgICByb2FtOiAnc2NhbGUnLCAvLyDnvKnmlL5cclxuICAgICAgICBpdGVtU3R5bGU6IHtcdFx0XHRcdFx0Ly8g5a6a5LmJ5qC35byPXHJcbiAgICAgICAgICBub3JtYWw6IHtcdFx0XHRcdFx0Ly8g5pmu6YCa54q25oCB5LiL55qE5qC35byPXHJcbiAgICAgICAgICAgIGFyZWFDb2xvcjogJyMzMjNjNDgnLFxyXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogJyMxMTEnXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgZW1waGFzaXM6IHtcdFx0XHRcdFx0Ly8g6auY5Lqu54q25oCB5LiL55qE5qC35byPXHJcbiAgICAgICAgICAgIGFyZWFDb2xvcjogJyMyYTMzM2QnXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgICBvcHRpb24udG9vbHRpcCA9IHtcclxuICAgICAgICBwYWRkaW5nOiAxMCxcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMzMzJyxcclxuICAgICAgICBib3JkZXJDb2xvcjogJyM3NzcnLFxyXG4gICAgICAgIGJvcmRlcldpZHRoOiAxLFxyXG4gICAgICAgIC8vIGZvcm1hdHRlcjogJ3tifTp7Y30nLFxyXG4gICAgICB9O1xyXG4gICAgICBvcHRpb24uc2VyaWVzID0ge1xyXG4gICAgICAgIG5hbWU6ICdtYXAnLFxyXG4gICAgICAgIGNvb3JkaW5hdGVTeXN0ZW06ICdnZW8nLCAvLyBzZXJpZXPlnZDmoIfns7vnsbvlnotcclxuICAgICAgfTtcclxuICAgICAgb3B0aW9uLnNlcmllcy5lbmNvZGUgPSB7XHJcbiAgICAgICAgbmFtZTogW3RoaXMuZmlyc3RCaW5kaW5nRmVpbGRMaXN0WzBdXSxcclxuICAgICAgICBsbmc6IFt0aGlzLnRoaXJkQmluZGluZ0ZlaWxkTGlzdFswXV0sXHJcbiAgICAgICAgbGF0OiBbdGhpcy5mb3VydGhCaW5kaW5nRmVpbGRMaXN0WzBdXSxcclxuICAgICAgICB2YWx1ZTE6IFt0aGlzLnNlY29uZEJpbmRpbmdGZWlsZExpc3RbMF1dLFxyXG4gICAgICAgIHZhbHVlMjogdGhpcy5maWZ0aEJpbmRpbmdGZWlsZExpc3QsXHJcbiAgICAgICAgdG9vbHRpcDogW3RoaXMuZmlyc3RCaW5kaW5nRmVpbGRMaXN0WzBdLCB0aGlzLnNlY29uZEJpbmRpbmdGZWlsZExpc3RbMF1dXHJcbiAgICAgIH07XHJcbiAgICAgIG9wdGlvbi52aXN1YWxNYXAgPSBbe1xyXG5cclxuICAgICAgICB0eXBlOiAnY29udGludW91cycsXHJcbiAgICAgICAgdG9wOiAndG9wJyxcclxuXHJcbiAgICAgICAgbGVmdDogJ3JpZ2h0JyxcclxuXHJcbiAgICAgICAgZGltZW5zaW9uOiAxLFxyXG4gICAgICAgIGNhbGN1bGFibGU6IHRydWUsXHJcbiAgICAgICAgbWluOiAwLFxyXG4gICAgICAgIG1heDogMTAwMCxcclxuXHJcbiAgICAgICAgaW5SYW5nZToge1xyXG4gICAgICAgICAgY29sb3I6IFsnIzMxMzY5NScsICcjNDU3NWI0JywgJyM3NGFkZDEnLCAnI2FiZDllOScsICcjZTBmM2Y4JywgJyNmZmZmYmYnLCAnI2ZlZTA5MCcsICcjZmRhZTYxJywgJyNmNDZkNDMnLCAnI2Q3MzAyNycsICcjYTUwMDI2J11cclxuICAgICAgICAgIC8vIGNvbG9yTGlnaHRuZXNzOiBbMSwgMC41XSxcclxuICAgICAgICAgIC8vIOaMh+WumuaVsOWAvOS7juS9juWIsOmrmOaXtueahOminOiJsuWPmOWMllxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb3V0T2ZSYW5nZToge1xyXG4gICAgICAgICAgY29sb3I6IFsncmdiYSgyNTUsMjU1LDI1NSwuMiknXVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjoge1xyXG4gICAgICAgICAgaW5SYW5nZToge1xyXG4gICAgICAgICAgICBjb2xvcjogWycjMzEzNjk1JywgJyM0NTc1YjQnLCAnIzc0YWRkMScsICcjYWJkOWU5JywgJyNlMGYzZjgnLCAnI2ZmZmZiZicsICcjZmVlMDkwJywgJyNmZGFlNjEnLCAnI2Y0NmQ0MycsICcjZDczMDI3JywgJyNhNTAwMjYnXVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIG91dE9mUmFuZ2U6IHtcclxuICAgICAgICAgICAgY29sb3I6IFsnIzQ0NCddXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0ZXh0U3R5bGU6IHtcclxuICAgICAgICAgIGNvbG9yOiAnIzgzNydcdC8vIOWAvOWfn+aOp+S7tueahOaWh+acrOminOiJslxyXG4gICAgICAgIH1cclxuICAgICAgfSwgeyAvLyDmt7vliqDnrKzkuozkuKrop4bop4nnu4Tku7ZcclxuICAgICAgICByaWdodDogJ3JpZ2h0JyxcclxuICAgICAgICB0b3A6ICdib3R0b20nLFxyXG4gICAgICAgIGRpbWVuc2lvbjogMixcclxuICAgICAgICB0eXBlOiAnY29udGludW91cycsIC8vIOi/nue7reWei1xyXG4gICAgICAgIG1pbjogMCwgICAgICAgXHRcdC8vIOWAvOWfn+acgOWwj+WAvO+8jOW/hemhu+WPguaVsFxyXG4gICAgICAgIG1heDogMTAwMCxcdFx0XHQvLyDlgLzln5/mnIDlpKflgLzvvIzlv4Xpobvlj4LmlbBcclxuICAgICAgICBjYWxjdWxhYmxlOiB0cnVlLFx0Ly8g5piv5ZCm5ZCv55So5YC85Z+f5ryr5ri4XHJcbiAgICAgICAgaXRlbVdpZHRoOiAzMCxcclxuICAgICAgICBpdGVtSGVpZ2h0OiAxMjAsIC8vIHZt55qE5aSn5bCPXHJcbiAgICAgICAgLy8g5Y+Y5bCPXHJcbiAgICAgICAgLy8gdGV4dDogW1wi5pWw5YC8MlwiXSxcclxuICAgICAgICB0ZXh0R2FwOiAzMCwgLy8g5Zu+5b2i55qE5LiK5LiLXHJcbiAgICAgICAgaW5SYW5nZToge1xyXG4gICAgICAgICAgc3ltYm9sU2l6ZTogWzUsIDMwXSxcclxuICAgICAgICAgIC8vIOaMh+WumuaVsOWAvOS7juS9juWIsOmrmOaXtueahOWkp+Wwj+WPmOWMllxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb3V0T2ZSYW5nZToge1xyXG4gICAgICAgICAgc3ltYm9sU2l6ZTogWzUsIDMwXSxcclxuICAgICAgICAgIGNvbG9yOiBbJ3JnYmEoMjU1LDI1NSwyNTUsLjIpJ11cclxuICAgICAgICB9LFxyXG4gICAgICAgIHRleHRTdHlsZToge1xyXG4gICAgICAgICAgY29sb3I6ICcjODM3J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjoge1xyXG4gICAgICAgICAgaW5SYW5nZToge1xyXG4gICAgICAgICAgICBjb2xvcjogWycjYzIzNTMxJ11cclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBvdXRPZlJhbmdlOiB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBbJyM0NDQnXVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfV07XHJcbiAgICAgIGlmICh0aGlzLmZpZnRoQmluZGluZ0ZlaWxkTGlzdCAhPT0gW10pIHtcclxuICAgICAgICBvcHRpb24uc2VyaWVzLmVuY29kZS50b29sdGlwLnB1c2godGhpcy5maWZ0aEJpbmRpbmdGZWlsZExpc3RbMF0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShvcHRpb24pKTtcclxuICAgIHJldHVybiBvcHRpb247XHJcbiAgfVxyXG5cclxuICBnZXRHcm91cFN1bW1hcnlTZXRPcHRpb24oKSB7XHJcbiAgICBjb25zdCBvcHRpb246IGFueSA9IHtcclxuICAgICAgZGltZW5zaW9uczogbnVsbCxcclxuICAgICAgaW5kaWNhdG9yczogbnVsbFxyXG4gICAgfTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGlmICh0aGlzLmRpbWVuc2lvbkZpZWxkTGlzdCAmJiB0aGlzLmRpbWVuc2lvbkZpZWxkTGlzdC5sZW5ndGgpIHtcclxuICAgICAgICBvcHRpb24uZGltZW5zaW9ucyA9IHRoaXMuZGltZW5zaW9uRmllbGRMaXN0O1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0aGlzLmluZGljYXRvckZpZWxkTGlzdCAmJiB0aGlzLmluZGljYXRvckZpZWxkTGlzdC5sZW5ndGgpIHtcclxuICAgICAgICBvcHRpb24uaW5kaWNhdG9ycyA9IHRoaXMuaW5kaWNhdG9yRmllbGRMaXN0O1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBvcHRpb247XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIHJldHVybiBvcHRpb247XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBteUlzTmFOKHZhbHVlOiBhbnkpIHtcclxuICAgIHJldHVybiAhaXNOYU4odmFsdWUpO1xyXG4gIH1cclxufVxyXG4iXX0=