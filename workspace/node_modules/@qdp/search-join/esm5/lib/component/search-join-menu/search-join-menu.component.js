/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostListener, ElementRef, RendererFactory2, Input, Optional, Injector } from '@angular/core';
import { MenuControllerService } from '../../service/menu-controller.service';
import { FrameworkService, AppService } from '@gsp-sys/rtf-common';
import { CacheService } from '@ecp-caf/caf-common';
import { JointSearchExtendService } from '@qdp/common';
import { EventBus, RtfServices } from '@qdp/common';
var SearchJoinMenuComponent = /** @class */ (function () {
    function SearchJoinMenuComponent(elementRef, renderFactory, menuControllerService, frameWorkService, cacheService, jointSearchExtendService, injector) {
        var _this = this;
        this.elementRef = elementRef;
        this.renderFactory = renderFactory;
        this.menuControllerService = menuControllerService;
        this.frameWorkService = frameWorkService;
        this.cacheService = cacheService;
        this.jointSearchExtendService = jointSearchExtendService;
        this.injector = injector;
        if (this.injector) {
            this.appService = this.injector.get(AppService);
        }
        this.formId = 'form' + 'ff3ea474-cc65-23b0-cdb1-73c9146cea3b';
        this.renderer = this.renderFactory.createRenderer(null, null);
        menuControllerService.jointsearchInfoChange.subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                _this.searchList = value;
            }
        }));
    }
    /**
     * @return {?}
     */
    SearchJoinMenuComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this;
        this.menuControllerService.getSearchList(this.formId, this.queryId, this.queryRelativeUrl).subscribe((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                /** @type {?} */
                var _searchList = JSON.parse(value['joinSearch']);
                _searchList.forEach((/**
                 * @param {?} searchL
                 * @return {?}
                 */
                function (searchL) {
                    if (!searchL.searchtype) {
                        searchL.searchtype = 'func';
                        searchL.appEntrance = '';
                    }
                    searchL.functionname = self.getFunctionName(searchL.functionname);
                }));
                _this.searchPara = JSON.parse(value['jointparam']);
                _this.cacheService.set(_this.queryId + 'beforeJointSearchMenuShow', _searchList);
            }
        }));
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    SearchJoinMenuComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * 当点击某一个路由之后，隐藏菜单组件
     */
    /**
     * 当点击某一个路由之后，隐藏菜单组件
     * @return {?}
     */
    SearchJoinMenuComponent.prototype.handleClick = /**
     * 当点击某一个路由之后，隐藏菜单组件
     * @return {?}
     */
    function () {
        this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');
    };
    /**
     * 路由到结果页
     * param id 联查功能主键id
     * param functionid 功能菜单id
     */
    /**
     * 路由到结果页
     * param id 联查功能主键id
     * param functionid 功能菜单id
     * @param {?} id
     * @param {?} functionid
     * @param {?} queryId
     * @return {?}
     */
    SearchJoinMenuComponent.prototype.routeTo = /**
     * 路由到结果页
     * param id 联查功能主键id
     * param functionid 功能菜单id
     * @param {?} id
     * @param {?} functionid
     * @param {?} queryId
     * @return {?}
     */
    function (id, functionid, queryId) {
        /** @type {?} */
        var self = this;
        /** @type {?} */
        var chooseList = {};
        this.searchList.forEach((/**
         * @param {?} searchL
         * @return {?}
         */
        function (searchL) {
            if (searchL.id === id) {
                chooseList = searchL;
            }
        }));
        /** @type {?} */
        var entityParam = { 'id': 'null' };
        /** @type {?} */
        var paramMap = new Map();
        /** @type {?} */
        var searchparas = this.searchPara.filter((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.functionid === id; }));
        // 查找对应的参数列表
        /** @type {?} */
        var currentSelectedItem = this.cacheService.get(this.queryId + 'currentSelectItem');
        if (searchparas.length > 0) {
            searchparas.forEach((/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (value.paravaluetype) { // 表达式
                    if (value.paravalue.indexOf('getParameter(') >= 0) {
                        /** @type {?} */
                        var parameterKey = value.paravalue.replace(/'/g, '').replace(/"/g, '').replace(/getParameter\(/g, '').replace(/\)/g, '');
                        self.getQueryParameters(entityParam, paramMap, parameterKey, value.para);
                    }
                    else {
                        entityParam[value.para] = currentSelectedItem[value.paravalue];
                        paramMap.set(value.para, currentSelectedItem[value.paravalue]);
                    }
                }
                else {
                    entityParam[value.para] = value.paravalue;
                    paramMap.set(value.para, value.paravalue);
                }
            }));
        }
        else {
            entityParam = currentSelectedItem;
        }
        /** @type {?} */
        var options = {
            ParentSessionId: this.cacheService.get('session'),
            EntityParam: entityParam
        };
        /** @type {?} */
        var $event = {};
        if (this.jointSearchExtendService && this.jointSearchExtendService.beforeJointSearch) {
            $event['eventCode'] = 'beforeJointSearch';
            $event['eventName'] = 'drill before';
            $event['data'] = {
                'functionid': functionid,
                'options': options,
                'queryId': queryId,
                'orginQueryId': this.queryId,
                'qdpView': this.menuControllerService.qdpView
            };
            this.jointSearchExtendService.beforeJointSearch($event);
            if ($event && $event['data'] && $event['data'].options) {
                options = Object.assign(options, $event['data'].options);
            }
            if (chooseList.searchtype === 'url' || chooseList.searchtype === 'additional') {
                return;
            }
        }
        // this.cacheService.set(queryId, options.EntityParam);
        /** @type {?} */
        var tabId = '';
        if (chooseList.searchtype === 'func') {
            // 联查前
            /** @type {?} */
            var openMenuoptions = {
                'appType': 'menu',
                'funcId': functionid,
                'tabId': EventBus.guid(),
                'appId': '',
                'appEntrance': '',
                'entityParams': $event['entityParams'] || entityParam,
                'queryStringParams': paramMap,
                'isNewTab': true
            };
            tabId = RtfServices.getFuncId(openMenuoptions);
            /** @type {?} */
            var menuSwitchControl = Object.assign({}, openMenuoptions['entityParams'], RtfServices.getMenuSwitchControlParameter(tabId));
            openMenuoptions['entityParams'] = menuSwitchControl;
            this.cacheService.set(tabId ? tabId : queryId, options.EntityParam);
            // 卡片塞进去params
            this.frameWorkService.openMenu(openMenuoptions);
        }
        else if (chooseList.searchtype === 'app') {
            /** @type {?} */
            var appOption = {
                appType: 'app',
                appId: functionid,
                appEntrance: chooseList.appEntrance,
                funcId: '',
                isReload: true,
                tabId: EventBus.guid(),
                entityParams: $event['entityParams'] || entityParam,
                queryStringParams: paramMap
            };
            tabId = RtfServices.getFuncId(appOption);
            this.cacheService.set(tabId ? tabId : queryId, options.EntityParam);
            /** @type {?} */
            var menuSwitchControl = Object.assign({}, appOption['entityParams'], RtfServices.getMenuSwitchControlParameter(tabId));
            appOption['entityParams'] = menuSwitchControl;
            this.frameWorkService.openMenu(appOption);
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    SearchJoinMenuComponent.prototype.getFunctionName = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var local = 'zh-chs';
        if (gspframeworkService) {
            local = gspframeworkService.rtf.language.getLanguageCode().toLowerCase();
        }
        if (!local) {
            local = 'zh-chs';
        }
        return data[local] ? data[local] : data;
    };
    /**
     * @private
     * @param {?} entityParam
     * @param {?} paramMap
     * @param {?} parameterKey
     * @param {?} key
     * @return {?}
     */
    SearchJoinMenuComponent.prototype.getQueryParameters = /**
     * @private
     * @param {?} entityParam
     * @param {?} paramMap
     * @param {?} parameterKey
     * @param {?} key
     * @return {?}
     */
    function (entityParam, paramMap, parameterKey, key) {
        try {
            /** @type {?} */
            var tab = gspframeworkService.rtf.session.getCommonVariable();
            if (tab && tab.tabId) {
                /** @type {?} */
                var tid = tab.tabId + RtfServices.getInSuiteFrmUUID();
                if (this.cacheService.get(tid) && this.cacheService.get(tid)[parameterKey]) {
                    entityParam[key] = this.cacheService.get(tid)[parameterKey];
                    paramMap.set(key, this.cacheService.get(tid)[parameterKey]);
                }
            }
        }
        catch (e) {
        }
    };
    SearchJoinMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'qdp-search-join-menu',
                    template: "<div *ngIf=\"searchList && searchList.length && searchList.length > 0\">\r\n  <div class=\"dropdown-menu\" style=\"display:block\">\r\n    <div *ngFor=\"let item of searchList\">\r\n      <button class=\"dropdown-item\" (click)=\"routeTo(item.id,item.functioncode,item.destinationqueryId)\">{{item.functionname}}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [":host{position:fixed;display:none;top:0;left:0}"]
                }] }
    ];
    /** @nocollapse */
    SearchJoinMenuComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: RendererFactory2 },
        { type: MenuControllerService },
        { type: FrameworkService },
        { type: CacheService },
        { type: JointSearchExtendService, decorators: [{ type: Optional }] },
        { type: Injector, decorators: [{ type: Optional }] }
    ]; };
    SearchJoinMenuComponent.propDecorators = {
        queryId: [{ type: Input }],
        queryRelativeUrl: [{ type: Input }],
        qoManagerCode: [{ type: Input }],
        searchList: [{ type: Input }],
        handleClick: [{ type: HostListener, args: ['click',] }]
    };
    return SearchJoinMenuComponent;
}());
export { SearchJoinMenuComponent };
if (false) {
    /** @type {?} */
    SearchJoinMenuComponent.prototype.queryId;
    /** @type {?} */
    SearchJoinMenuComponent.prototype.queryRelativeUrl;
    /** @type {?} */
    SearchJoinMenuComponent.prototype.qoManagerCode;
    /** @type {?} */
    SearchJoinMenuComponent.prototype.formId;
    /** @type {?} */
    SearchJoinMenuComponent.prototype.searchList;
    /** @type {?} */
    SearchJoinMenuComponent.prototype.searchPara;
    /** @type {?} */
    SearchJoinMenuComponent.prototype.currentSelectedItem;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.appService;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.renderFactory;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.menuControllerService;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.frameWorkService;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.cacheService;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.jointSearchExtendService;
    /**
     * @type {?}
     * @private
     */
    SearchJoinMenuComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,