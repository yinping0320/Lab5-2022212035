/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable, RendererFactory2 } from '@angular/core';
import { CacheService } from '@ecp-caf/caf-common';
import { SearchListService } from './search-list.service';
import { map } from 'rxjs/operators';
import { Subject, of } from 'rxjs';
import { LoadingService } from '@farris/ui-loading';
import { RtfServices } from '@qdp/common';
var MenuControllerService = /** @class */ (function () {
    function MenuControllerService(rendererFactory, cacheService, searchListService, cache, loadingService) {
        this.rendererFactory = rendererFactory;
        this.cacheService = cacheService;
        this.searchListService = searchListService;
        this.cache = cache;
        this.loadingService = loadingService;
        this.jointsearchInfoChange = new Subject();
        this.render = rendererFactory.createRenderer(null, null);
    }
    /**
     * @param {?} $event
     * @param {?} elementRef
     * @param {?} qdpView
     * @param {?} qdpViewElementRef
     * @return {?}
     */
    MenuControllerService.prototype.handleContextmenu = /**
     * @param {?} $event
     * @param {?} elementRef
     * @param {?} qdpView
     * @param {?} qdpViewElementRef
     * @return {?}
     */
    function ($event, elementRef, qdpView, qdpViewElementRef) {
        var _this = this;
        var e_1, _a;
        this.qdpView = qdpView;
        // const loading = this.loadingService.show({ container: qdpViewElementRef });
        /** @type {?} */
        var joinParam = this.cache.get(RtfServices.getTabId(this._queryId) + 'joinSearch');
        if (!this.checkDataArea(qdpView, qdpViewElementRef, joinParam, $event) || !this._searchList) {
            return false;
        }
        /** @type {?} */
        var left = 0;
        /** @type {?} */
        var top = 0;
        if (joinParam && joinParam.controlType !== 'charts') {
            left = $event.clientX;
            top = $event.clientY;
        }
        else {
            left = $event.event.event.clientX;
            top = $event.event.event.clientY;
        }
        this.render.setStyle(elementRef.nativeElement, 'left', left + 'px');
        this.render.setStyle(elementRef.nativeElement, 'top', top + 'px');
        this.render.setStyle(elementRef.nativeElement, 'display', 'block');
        this.cacheService.set(this._queryId + 'currentSelectItem', this.currentSelectItem); // 将当前参数设置到缓存中
        // 将当前参数设置到缓存中
        // 联查可见表达式
        /** @type {?} */
        var searchList = this.cacheService.get(this._queryId + 'beforeJointSearchMenuShow');
        /** @type {?} */
        var formulas = {};
        /** @type {?} */
        var containVisibleFormula = false;
        try {
            for (var searchList_1 = tslib_1.__values(searchList), searchList_1_1 = searchList_1.next(); !searchList_1_1.done; searchList_1_1 = searchList_1.next()) {
                var search = searchList_1_1.value;
                formulas[search.id] = search.visibleformula;
                if (containVisibleFormula === false && search.visibleformula != void 0 && search.visibleformula !== '') {
                    containVisibleFormula = true;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (searchList_1_1 && !searchList_1_1.done && (_a = searchList_1.return)) _a.call(searchList_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (containVisibleFormula === true) {
            /** @type {?} */
            var param = { qoManagerCode: qdpView.qoManagerCode, visibleFormulas: formulas, userId: '', queryId: this._queryId, rowData: this.currentSelectItem };
            this.searchListService.getVisibleJoint(param, qdpView.queryRelativeUrl, searchList).subscribe((/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (value) {
                    _this.jointsearchInfoChange.next(value);
                }
            }));
        }
        else {
            this.jointsearchInfoChange.next(searchList);
        }
        return false;
    };
    /**
     * 单击之后隐藏菜单
     * @param elementRef 菜单组件
     */
    /**
     * 单击之后隐藏菜单
     * @param {?} elementRef 菜单组件
     * @return {?}
     */
    MenuControllerService.prototype.handleClick = /**
     * 单击之后隐藏菜单
     * @param {?} elementRef 菜单组件
     * @return {?}
     */
    function (elementRef) {
        if (elementRef) {
            this.render.setStyle(elementRef.nativeElement, 'display', 'none');
        }
    };
    /**
     * get searchList
     */
    /**
     * get searchList
     * @param {?} formId
     * @param {?} queryId
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    MenuControllerService.prototype.getSearchList = /**
     * get searchList
     * @param {?} formId
     * @param {?} queryId
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    function (formId, queryId, queryRelativeUrl) {
        var _this = this;
        this._queryId = queryId;
        if (this._searchList && this._searchList.queryId === this._queryId) {
            return of(this._searchList);
        }
        /** @type {?} */
        var result = this.searchListService.getSearchList(formId, queryId, queryRelativeUrl);
        return result.pipe(map((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            _this._searchList = value; // ? JSON.parse(value.joinSearch) : [];
            return _this._searchList;
        })));
    };
    /**
     * 返回当前右键坐标，是否为数据区域
     * @param qdpView qdp-view 组件
     * @param qdpViewElementRef qdp-view ElementRef
     * @param $event 触发事件，主要用来传递坐标
     */
    /**
     * 返回当前右键坐标，是否为数据区域
     * @private
     * @param {?} qdpView qdp-view 组件
     * @param {?} qdpViewElementRef qdp-view ElementRef
     * @param {?} joinParam
     * @param {?} $event 触发事件，主要用来传递坐标
     * @return {?}
     */
    MenuControllerService.prototype.checkDataArea = /**
     * 返回当前右键坐标，是否为数据区域
     * @private
     * @param {?} qdpView qdp-view 组件
     * @param {?} qdpViewElementRef qdp-view ElementRef
     * @param {?} joinParam
     * @param {?} $event 触发事件，主要用来传递坐标
     * @return {?}
     */
    function (qdpView, qdpViewElementRef, joinParam, $event) {
        var _this = this;
        /** @type {?} */
        var x = 0;
        /** @type {?} */
        var y = 0;
        /** @type {?} */
        var qdpviewNative = qdpViewElementRef.nativeElement;
        while (qdpviewNative) {
            x += qdpviewNative.offsetLeft;
            y += qdpviewNative.offsetTop;
            qdpviewNative = qdpviewNative.offsetParent;
        }
        if (joinParam.controlType !== 'charts') {
            /** @type {?} */
            var activeSheet = qdpView.spread.getActiveSheet();
            /** @type {?} */
            var target = activeSheet.hitTest($event.clientX - x, $event.clientY - y);
            if (target.hitTestType !== GC.Spread.Sheets.SheetArea.viewport || target.col === undefined || target.row === undefined) {
                return false;
            }
            activeSheet.setActiveCell(target.row, target.col);
            // 将当前行，写入cache
            /** @type {?} */
            var dataItem = {};
            if (joinParam.controlType === 'crosstab') { // 交叉表
                var _loop_1 = function (i) {
                    /** @type {?} */
                    var value_1 = activeSheet.getValue(target.row, i, GC.Spread.Sheets.SheetArea.viewport);
                    /** @type {?} */
                    var name_1 = activeSheet.getValue(joinParam.colHeaderRowInfo.start, i, GC.Spread.Sheets.SheetArea.colHeader);
                    /** @type {?} */
                    var colInfo_1 = joinParam.colInfos.find((/**
                     * @param {?} x
                     * @return {?}
                     */
                    function (x) { return x.dimension === 1 && x.name === name_1; })).bindField;
                    dataItem[colInfo_1] = value_1;
                };
                // 获取行标题的数据
                for (var i = joinParam.rowHeaderColInfo.start; i < joinParam.rowHeaderColInfo.end; i++) {
                    _loop_1(i);
                }
                // 获取列标题的数据
                for (var i = joinParam.colHeaderRowInfo.start; i < joinParam.colHeaderRowInfo.end; i++) {
                    /** @type {?} */
                    var value_2 = activeSheet.getValue(i, target.col, GC.Spread.Sheets.SheetArea.colHeader);
                    /** @type {?} */
                    var colInfo_2 = joinParam.colInfos.filter((/**
                     * @param {?} x
                     * @return {?}
                     */
                    function (x) { return x.dimension === 2; }))[i - joinParam.colHeaderRowInfo.start].bindField;
                    dataItem[colInfo_2] = value_2;
                }
                // 获取值标题的数据
                /** @type {?} */
                var value = activeSheet.getValue(target.row, target.col, GC.Spread.Sheets.SheetArea.viewport);
                /** @type {?} */
                var name_2 = activeSheet.getValue(joinParam.colHeaderRowInfo.end, target.col, GC.Spread.Sheets.SheetArea.colHeader);
                /** @type {?} */
                var colInfo = joinParam.colInfos.find((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return x.dimension === 3 && x.name === name_2; }));
                if (colInfo) {
                    colInfo = colInfo.bindField;
                    dataItem[colInfo] = value;
                }
            }
            else {
                dataItem = activeSheet.getDataItem(target.row);
            }
            // 保存参数到searchList
            this.currentSelectItem = dataItem;
            return true;
        }
        else {
            if (joinParam.colList && joinParam.colList.length) {
                /** @type {?} */
                var cacheCols_1 = [];
                joinParam.colList.forEach((/**
                 * @param {?} col
                 * @return {?}
                 */
                function (col) {
                    _this.getColumn(col, null, cacheCols_1);
                }));
                /** @type {?} */
                var dataItem = {};
                for (var i = 0; i < cacheCols_1.length; i++) {
                    if (i < $event.value.length) {
                        dataItem[cacheCols_1[i].bindField] = $event.value[i];
                    }
                }
                this.currentSelectItem = dataItem;
            }
            $event.event.event.returnValue = false;
            return true;
        }
    };
    /**
     * 保存参数到cache
     * @param dataItem 参数
     */
    /**
     * 保存参数到cache
     * @protected
     * @param {?} dataItem 参数
     * @return {?}
     */
    MenuControllerService.prototype.writeParamToCache = /**
     * 保存参数到cache
     * @protected
     * @param {?} dataItem 参数
     * @return {?}
     */
    function (dataItem) {
        var _this = this;
        this._searchList[0]['joinSearch'].forEach((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var currentParam = _this.cacheService.get(_this._queryId);
            dataItem['currentItem'] = currentParam;
            _this.cacheService.set(value.queryId, dataItem);
        }));
    };
    /**
     * @private
     * @param {?} col
     * @param {?} childCols
     * @param {?} colcache
     * @return {?}
     */
    MenuControllerService.prototype.getColumn = /**
     * @private
     * @param {?} col
     * @param {?} childCols
     * @param {?} colcache
     * @return {?}
     */
    function (col, childCols, colcache) {
        var _this = this;
        if (col) {
            /** @type {?} */
            var str = JSON.stringify(col);
            colcache.push(JSON.parse(str));
            if (col.childList && col.childList.length) {
                this.getColumn(null, col.childList, colcache);
            }
        }
        else {
            childCols.forEach((/**
             * @param {?} col
             * @return {?}
             */
            function (col) {
                /** @type {?} */
                var str = JSON.stringify(col);
                colcache.push(JSON.parse(str));
                if (col.childList && col.childList.length) {
                    _this.getColumn(null, col.childList, colcache);
                }
            }));
        }
    };
    MenuControllerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    MenuControllerService.ctorParameters = function () { return [
        { type: RendererFactory2 },
        { type: CacheService },
        { type: SearchListService },
        { type: CacheService },
        { type: LoadingService }
    ]; };
    return MenuControllerService;
}());
export { MenuControllerService };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    MenuControllerService.prototype._searchList;
    /**
     * @type {?}
     * @protected
     */
    MenuControllerService.prototype._queryId;
    /** @type {?} */
    MenuControllerService.prototype.currentSelectItem;
    /** @type {?} */
    MenuControllerService.prototype.queryRelativeUrl;
    /** @type {?} */
    MenuControllerService.prototype.jointsearchInfoChange;
    /** @type {?} */
    MenuControllerService.prototype.qdpView;
    /**
     * @type {?}
     * @protected
     */
    MenuControllerService.prototype.render;
    /**
     * @type {?}
     * @protected
     */
    MenuControllerService.prototype.rendererFactory;
    /**
     * @type {?}
     * @protected
     */
    MenuControllerService.prototype.cacheService;
    /**
     * @type {?}
     * @protected
     */
    MenuControllerService.prototype.searchListService;
    /**
     * @type {?}
     * @private
     */
    MenuControllerService.prototype.cache;
    /**
     * @type {?}
     * @private
     */
    MenuControllerService.prototype.loadingService;
}
//# sourceMappingURL=data:application/json;base64,