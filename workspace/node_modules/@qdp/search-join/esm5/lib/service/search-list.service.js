/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { JointSearchManagerService } from '@qdp/common';
var SearchListService = /** @class */ (function () {
    function SearchListService(jointSearchManagerService) {
        this.jointSearchManagerService = jointSearchManagerService;
    }
    /**
     * 根据查询ID，获取联查信息
     * @param queryid 查询id
     */
    /**
     * 根据查询ID，获取联查信息
     * @param {?} formId
     * @param {?} queryid 查询id
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    SearchListService.prototype.getSearchList = /**
     * 根据查询ID，获取联查信息
     * @param {?} formId
     * @param {?} queryid 查询id
     * @param {?} queryRelativeUrl
     * @return {?}
     */
    function (formId, queryid, queryRelativeUrl) {
        return this.jointSearchManagerService.getjointsearch(formId, queryid, queryRelativeUrl);
    };
    /**
     * @param {?} visibleJointParam
     * @param {?} queryRelativeUrl
     * @param {?} searchList
     * @return {?}
     */
    SearchListService.prototype.getVisibleJoint = /**
     * @param {?} visibleJointParam
     * @param {?} queryRelativeUrl
     * @param {?} searchList
     * @return {?}
     */
    function (visibleJointParam, queryRelativeUrl, searchList) {
        return this.jointSearchManagerService.getVisibleJoint(visibleJointParam, queryRelativeUrl, searchList);
    };
    SearchListService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    SearchListService.ctorParameters = function () { return [
        { type: JointSearchManagerService }
    ]; };
    return SearchListService;
}());
export { SearchListService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    SearchListService.prototype.jointSearchManagerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWxpc3Quc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BxZHAvc2VhcmNoLWpvaW4vIiwic291cmNlcyI6WyJsaWIvc2VydmljZS9zZWFyY2gtbGlzdC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4RDtJQUVFLDJCQUFvQix5QkFBb0Q7UUFBcEQsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUEyQjtJQUFJLENBQUM7SUFFN0U7OztPQUdHOzs7Ozs7OztJQUNJLHlDQUFhOzs7Ozs7O0lBQXBCLFVBQXFCLE1BQVcsRUFBRSxPQUFlLEVBQUUsZ0JBQXFCO1FBQ3RFLE9BQU8sSUFBSSxDQUFDLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFDMUYsQ0FBQzs7Ozs7OztJQUVNLDJDQUFlOzs7Ozs7SUFBdEIsVUFBdUIsaUJBQXNCLEVBQUUsZ0JBQXFCLEVBQUUsVUFBZTtRQUNuRixPQUFPLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxlQUFlLENBQUMsaUJBQWlCLEVBQUUsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDekcsQ0FBQzs7Z0JBZEYsVUFBVTs7OztnQkFGRix5QkFBeUI7O0lBa0JsQyx3QkFBQztDQUFBLEFBaEJELElBZ0JDO1NBZlksaUJBQWlCOzs7Ozs7SUFDaEIsc0RBQTREIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBKb2ludFNlYXJjaE1hbmFnZXJTZXJ2aWNlIH0gZnJvbSAnQHFkcC9jb21tb24nO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgU2VhcmNoTGlzdFNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgam9pbnRTZWFyY2hNYW5hZ2VyU2VydmljZTogSm9pbnRTZWFyY2hNYW5hZ2VyU2VydmljZSkgeyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOagueaNruafpeivoklE77yM6I635Y+W6IGU5p+l5L+h5oGvXHJcbiAgICogQHBhcmFtIHF1ZXJ5aWQg5p+l6K+iaWRcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0U2VhcmNoTGlzdChmb3JtSWQ6IGFueSwgcXVlcnlpZDogc3RyaW5nLCBxdWVyeVJlbGF0aXZlVXJsOiBhbnkpIHtcclxuICAgIHJldHVybiB0aGlzLmpvaW50U2VhcmNoTWFuYWdlclNlcnZpY2UuZ2V0am9pbnRzZWFyY2goZm9ybUlkLCBxdWVyeWlkLCBxdWVyeVJlbGF0aXZlVXJsKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRWaXNpYmxlSm9pbnQodmlzaWJsZUpvaW50UGFyYW06IGFueSwgcXVlcnlSZWxhdGl2ZVVybDogYW55LCBzZWFyY2hMaXN0OiBhbnkpIHtcclxuICAgIHJldHVybiB0aGlzLmpvaW50U2VhcmNoTWFuYWdlclNlcnZpY2UuZ2V0VmlzaWJsZUpvaW50KHZpc2libGVKb2ludFBhcmFtLCBxdWVyeVJlbGF0aXZlVXJsLCBzZWFyY2hMaXN0KTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==