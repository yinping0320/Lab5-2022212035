{"version":3,"sources":["ng://@qdp/echarts/lib/directive/qdp-charts/change.filter.ts","ng://@qdp/echarts/lib/directive/qdp-charts/qdp.charts.directive.ts","ng://@qdp/echarts/lib/directive/bindingdata/form.bindingdata.directive.ts","ng://@qdp/echarts/lib/directive/bindingdata/lcp.bindingdata.directive.ts","ng://@qdp/echarts/lib/echarts.module.ts"],"names":["ChangeFilter","_changes","this","of","changes","prototype","notEmpty","key","value","currentValue","undefined","EMPTY","has","notFirst","isFirstChange","notFirstAndEmpty","NgxEchartsDirective","el","ngZone","autoResize","loadingType","detectEventChanges","chartInit","EventEmitter","chartClick","createLazyEvent","chartDblClick","chartMouseDown","chartMouseMove","chartMouseUp","chartMouseOver","chartMouseOut","chartGlobalOut","chartContextMenu","chartLegendSelectChanged","chartLegendSelected","chartLegendUnselected","chartLegendScroll","chartDataZoom","chartDataRangeSelected","chartTimelineChanged","chartTimelinePlayChanged","chartRestore","chartDataViewChanged","chartMagicTypeChanged","chartPieSelectChanged","chartPieSelected","chartPieUnselected","chartMapSelectChanged","chartMapSelected","chartMapUnselected","chartAxisAreaSelected","chartFocusNodeAdjacency","chartUnfocusNodeAdjacency","chartBrush","chartBrushSelected","chartRendered","chartFinished","currentOffsetWidth","currentOffsetHeight","ngOnChanges","_this","filter","subscribe","opt","onOptionsChange","setOption","v","toggleLoading","refreshChart","ngOnInit","resizeSub","fromEvent","window","pipe","debounceTime","innerWidth","currentWindowWidth","nativeElement","offsetWidth","offsetHeight","resize","ngOnDestroy","unsubscribe","dispose","ngDoCheck","chart","ngAfterViewInit","setTimeout","initChart","loading","showLoading","loadingOpts","hideLoading","option","opts","clearOption","clear","getOption","createChart","dom","getComputedStyle","prop","getPropertyValue","style","height","runOutsideAngular","echarts","init","theme","initOpts","options","merge","emit","eventName","switchMap","Observable","observer","on","data","run","next","setNumber","data1","num","arr","l","length","i","setData","forEach","item","dynamicPropSet","dy","Object","assign","chartsData","dataset","dimensions","source","keys","push","row","series","type","resultOption","title","tooltip","formatter","encode","y","itemName","x","splice","value2","row1","indexOf","value1","visualMap","dimension","min","Math","apply","max","row2","arrayTemp1","arrayTemp2","isRepeat","Array","from","Set","setZoom","legend","ob","i_1","name","hash_1","i_2","res_1","xdata_1","max_1","series_1","legendData","i_3","stack","i_4","xAxis","seriesChange","yList","temp","label","normal","show","position","id","op","dataZoom","xAxisIndex","filterMode","Directive","args","selector","ElementRef","NgZone","Input","Output","FormBindingDataDirective","charts","bindingData","viewModel","schemaManager","injector","delay","interval","cache","get","CacheService","QDPCacheUtil","setCache","RtfServices","getTabId","queryId","delayLoad","bindingListChange","intervalLoad","myVar","setInterval","clearIntervalLoad","clearInterval","bindData","change","bindingList","op_1","organizationId","getDefaultSchema","queryRelativeUrl","schemaValue","chartsType","chartsStyle","replace","areaStyle","dynamiccols","properties","col","dynamiccol","bindField","colWidth","align","visible","isFixed","formatType","formattor","sort","pageAggreText","pageAggre","isGroup","groupAggreText","groupAggre","totalAggreText","totalAggre","level","childList","rowColor","setColInfo","toJSON","defineProperty","bindingPath","list","substr","filteredPaths","toLowerCase","substring","split","part","getValue","decorators","Optional","BindingData","ViewModel","SchemaManagerService","Injector","LcpBindingDataDirective","serverHost","restfulService","sessionService","dataRenderExtendService","filterService","loadDataUri","loadDataCol","funcIds","pageInfoChange","Subject","bindCloseTabEvent","tab","gspframeworkService","rtf","session","getCommonVariable","frmEvent","eventListener","clearParametersCache","bind","tabId","getInSuiteFrmUUID","e","arguments","set","index","findIndex","func","close","changeName","newValue","eventId","EventBus","register","handleLinkage","getFilter","qoManagerCode","conditionExpression","JSON","stringify","render","$event","params","schemaId","linkageParams","getData","self","uri","put","Param","createHeaderSessionId","post","map","returnValue","pageInfo","getCol","createParameters","controlType","extendCond","pageIndex","pageSize","printIntegration","excelExportName","voId","entityData","filterCond","voCode","parameterEntityData","parse","hasOwnProperty","filterExpression","advanceFilterExpression","expressItems","concat","getSchemaInfo","obj","getSchema","groupType","getDefaultSchemaInfo","_schemaId","customOption","beforeQueryData","createEventParams","resultData","dynamicCols","joinParam","colList","afterLoadData","beforeLoadData","eventCode","control","Inject","Server_Host","RestfulService","SessionService","DataRenderExtendService","FilterManagerService","Load_Data_Uri","Load_Data_Col","EchartsModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { SimpleChanges } from '@angular/core';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\n\r\nexport class ChangeFilter {\r\n  constructor(private _changes: SimpleChanges) { }\r\n\r\n  static of(changes: SimpleChanges) {\r\n    return new ChangeFilter(changes);\r\n  }\r\n\r\n  notEmpty<T>(key: string): Observable<T> {\r\n    if (this._changes[key]) {\r\n      const value: T = this._changes[key].currentValue;\r\n\r\n      if (value !== undefined && value !== null) {\r\n        return of(value);\r\n      }\r\n    }\r\n    return EMPTY;\r\n  }\r\n\r\n  has<T>(key: string): Observable<T> {\r\n    if (this._changes[key]) {\r\n      const value: T = this._changes[key].currentValue;\r\n      return of(value);\r\n    }\r\n    return EMPTY;\r\n  }\r\n\r\n  notFirst<T>(key: string): Observable<T> {\r\n    if (this._changes[key] && !this._changes[key].isFirstChange()) {\r\n      const value: T = this._changes[key].currentValue;\r\n      return of(value);\r\n    }\r\n    return EMPTY;\r\n  }\r\n\r\n  notFirstAndEmpty<T>(key: string): Observable<T> {\r\n    if (this._changes[key] && !this._changes[key].isFirstChange()) {\r\n      const value: T = this._changes[key].currentValue;\r\n\r\n      if (value !== undefined && value !== null) {\r\n        return of(value);\r\n      }\r\n    }\r\n    return EMPTY;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit, Directive, DoCheck, ElementRef, EventEmitter, Input,\r\n  NgZone, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, Optional\r\n} from '@angular/core';\r\n// import { init } from 'echarts';\r\nimport { fromEvent, Observable, Subscription } from 'rxjs';\r\nimport { debounceTime, switchMap } from 'rxjs/operators';\r\nimport { ChangeFilter } from './change.filter';\r\n\r\ndeclare var echarts: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'qdp-charts, [qdp-charts]',\r\n})\r\nexport class NgxEchartsDirective implements OnChanges, OnDestroy, OnInit, DoCheck, AfterViewInit {\r\n  @Input() queryId: any;\r\n  @Input() options: any;\r\n  @Input() theme: string;\r\n  @Input() loading: boolean;\r\n  @Input() queryRelativeUrl: any;\r\n  @Input() initOpts: {\r\n    devicePixelRatio?: number\r\n    renderer?: string\r\n    width?: number | string\r\n    height?: number | string\r\n  };\r\n  @Input() merge: any;\r\n  @Input() autoResize = true;\r\n  @Input() loadingType = 'default';\r\n  @Input() loadingOpts: object;\r\n  @Input() detectEventChanges = true; // deprecated, left for compatibility reasons to avoid triggering major version\r\n\r\n  // ngx-echarts events\r\n  @Output() chartInit = new EventEmitter<any>();\r\n\r\n  // echarts mouse events\r\n  @Output() chartClick = this.createLazyEvent('click');\r\n  @Output() chartDblClick = this.createLazyEvent('dblclick');\r\n  @Output() chartMouseDown = this.createLazyEvent('mousedown');\r\n  @Output() chartMouseMove = this.createLazyEvent('mousemove');\r\n  @Output() chartMouseUp = this.createLazyEvent('mouseup');\r\n  @Output() chartMouseOver = this.createLazyEvent('mouseover');\r\n  @Output() chartMouseOut = this.createLazyEvent('mouseout');\r\n  @Output() chartGlobalOut = this.createLazyEvent('globalout');\r\n  @Output() chartContextMenu = this.createLazyEvent('contextmenu');\r\n\r\n  // echarts mouse events\r\n  @Output() chartLegendSelectChanged = this.createLazyEvent('legendselectchanged');\r\n  @Output() chartLegendSelected = this.createLazyEvent('legendselected');\r\n  @Output() chartLegendUnselected = this.createLazyEvent('legendunselected');\r\n  @Output() chartLegendScroll = this.createLazyEvent('legendscroll');\r\n  @Output() chartDataZoom = this.createLazyEvent('datazoom');\r\n  @Output() chartDataRangeSelected = this.createLazyEvent('datarangeselected');\r\n  @Output() chartTimelineChanged = this.createLazyEvent('timelinechanged');\r\n  @Output() chartTimelinePlayChanged = this.createLazyEvent('timelineplaychanged');\r\n  @Output() chartRestore = this.createLazyEvent('restore');\r\n  @Output() chartDataViewChanged = this.createLazyEvent('dataviewchanged');\r\n  @Output() chartMagicTypeChanged = this.createLazyEvent('magictypechanged');\r\n  @Output() chartPieSelectChanged = this.createLazyEvent('pieselectchanged');\r\n  @Output() chartPieSelected = this.createLazyEvent('pieselected');\r\n  @Output() chartPieUnselected = this.createLazyEvent('pieunselected');\r\n  @Output() chartMapSelectChanged = this.createLazyEvent('mapselectchanged');\r\n  @Output() chartMapSelected = this.createLazyEvent('mapselected');\r\n  @Output() chartMapUnselected = this.createLazyEvent('mapunselected');\r\n  @Output() chartAxisAreaSelected = this.createLazyEvent('axisareaselected');\r\n  @Output() chartFocusNodeAdjacency = this.createLazyEvent('focusnodeadjacency');\r\n  @Output() chartUnfocusNodeAdjacency = this.createLazyEvent('unfocusnodeadjacency');\r\n  @Output() chartBrush = this.createLazyEvent('brush');\r\n  @Output() chartBrushSelected = this.createLazyEvent('brushselected');\r\n  @Output() chartRendered = this.createLazyEvent('rendered');\r\n  @Output() chartFinished = this.createLazyEvent('finished');\r\n\r\n  private chart: any;\r\n  private currentOffsetWidth = 0;\r\n  private currentOffsetHeight = 0;\r\n  private currentWindowWidth: number;\r\n  private resizeSub: Subscription;\r\n  private visualMapTemp: any;\r\n  private chartsData: any;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private ngZone: NgZone,\r\n  ) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const filter = ChangeFilter.of(changes);\r\n    filter.notFirstAndEmpty<any>('options').subscribe(opt => this.onOptionsChange(opt));\r\n    filter.notFirstAndEmpty<any>('merge').subscribe(opt => this.setOption(opt));\r\n    filter.has<boolean>('loading').subscribe(v => this.toggleLoading(!!v));\r\n    filter.notFirst<string>('theme').subscribe(() => this.refreshChart());\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resizeSub = fromEvent(window, 'resize').pipe(debounceTime(50)).subscribe(() => {\r\n      if (this.autoResize && window.innerWidth !== this.currentWindowWidth) {\r\n        this.currentWindowWidth = window.innerWidth;\r\n        this.currentOffsetWidth = this.el.nativeElement.offsetWidth;\r\n        this.currentOffsetHeight = this.el.nativeElement.offsetHeight;\r\n        this.resize();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    this.resizeSub && this.resizeSub.unsubscribe();\r\n    this.dispose();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    // No heavy work in DoCheck!\r\n    if (this.chart && this.autoResize) {\r\n      const offsetWidth = this.el.nativeElement.offsetWidth;\r\n      const offsetHeight = this.el.nativeElement.offsetHeight;\r\n\r\n      if (this.currentOffsetWidth !== offsetWidth || this.currentOffsetHeight !== offsetHeight) {\r\n        this.currentOffsetWidth = offsetWidth;\r\n        this.currentOffsetHeight = offsetHeight;\r\n        this.resize();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => this.initChart());\r\n  }\r\n\r\n  private dispose() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n      this.chart = null;\r\n    }\r\n  }\r\n\r\n  private resize() {\r\n    if (this.chart) {\r\n      this.chart.resize();\r\n    }\r\n  }\r\n\r\n  private toggleLoading(loading: boolean) {\r\n    if (this.chart) {\r\n      loading ? this.chart.showLoading(this.loadingType, this.loadingOpts) : this.chart.hideLoading();\r\n    }\r\n  }\r\n\r\n  // ä¿å­visualMap\r\n  setOption(option: any, opts?: any) {\r\n    this.chart.setOption(option, opts);\r\n  }\r\n\r\n  clearOption() {\r\n    if (this.chart) {\r\n      this.chart.clear();\r\n    }\r\n  }\r\n\r\n  getOption(): any {\r\n    return this.chart.getOption();\r\n  }\r\n\r\n  private refreshChart() {\r\n    this.dispose();\r\n    this.initChart();\r\n  }\r\n\r\n  private createChart() {\r\n    this.currentWindowWidth = window.innerWidth;\r\n    this.currentOffsetWidth = this.el.nativeElement.offsetWidth;\r\n    this.currentOffsetHeight = this.el.nativeElement.offsetHeight;\r\n    const dom = this.el.nativeElement;\r\n\r\n    if (window && window.getComputedStyle) {\r\n      const prop = window.getComputedStyle(dom, null).getPropertyValue('height');\r\n      if ((!prop || prop === '0px') &&\r\n        (!dom.style.height || dom.style.height === '0px')) {\r\n        dom.style.height = '400px';\r\n      }\r\n    }\r\n\r\n    return this.ngZone.runOutsideAngular(() => echarts.init(dom, this.theme, this.initOpts));\r\n  }\r\n\r\n  private initChart() {\r\n    this.onOptionsChange(this.options);\r\n\r\n    if (this.merge && this.chart) {\r\n      this.setOption(this.merge);\r\n    }\r\n  }\r\n\r\n  private onOptionsChange(opt: any) {\r\n    if (opt) {\r\n      if (!this.chart) {\r\n        this.chart = this.createChart();\r\n        this.chartInit.emit(this.chart);\r\n      }\r\n\r\n      this.chart.setOption(this.options, true);\r\n    } else {\r\n      if (!this.chart) {\r\n        this.chart = this.createChart();\r\n        this.chartInit.emit(this.chart);\r\n      }\r\n    }\r\n  }\r\n\r\n  // allows to lazily bind to only those events that are requested through the `@Output` by parent components\r\n  // see https://stackoverflow.com/questions/51787972/optimal-reentering-the-ngzone-from-eventemitter-event for more info\r\n  private createLazyEvent<T>(eventName: string): EventEmitter<T> {\r\n    return this.chartInit.pipe(\r\n      switchMap((chart: any) => new Observable(observer => {\r\n        chart.on(eventName, (data: T) => this.ngZone.run(() => observer.next(data)));\r\n        return null; // no need to react on unsubscribe as long as the `dispose()` is called in ngOnDestroy\r\n      }))\r\n    ) as EventEmitter<T>;\r\n  }\r\n\r\n  setNumber(data1: any, num: number): any {\r\n    const arr = [];\r\n    const l = data1.length;\r\n    for (let i = 0; i < l; i++) {\r\n      arr[i] = data1[i][num];\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  setData(data: any, option?: any) {\r\n    if (this.chart) {\r\n      this.chart.clear();\r\n    }\r\n    data.forEach((item: any) => {\r\n      if (item.dynamicPropSet) {\r\n        const dy = item.dynamicPropSet;\r\n        delete item.dynamicPropSet;\r\n        Object.assign(item, dy);\r\n      }\r\n    });\r\n    if (data && data.length) {\r\n      this.chartsData = {\r\n        dataset: {\r\n          dimensions: [],\r\n          source: []\r\n        }\r\n      };\r\n      Object.keys(data[0]).forEach(key => {\r\n        this.chartsData.dataset.dimensions.push(key);\r\n      });\r\n      data.forEach((item: any) => {\r\n        const row: any[] = [];\r\n        Object.keys(item).forEach(key => {\r\n          row.push(item[key]);\r\n        });\r\n        this.chartsData.dataset.source.push(row);\r\n      });\r\n      if (option) {\r\n        if (option.series && option.series.type && option.series.type === 'pie') {\r\n          const resultOption = {\r\n            title: option.title,\r\n            dataset: this.chartsData.dataset,\r\n            tooltip: {\r\n              formatter: '{d}%',\r\n            },\r\n            series: [{\r\n              type: option.series.type,\r\n              encode: {\r\n                value: option.series.encode.y[0],\r\n                itemName: option.series.encode.x[0],\r\n              },\r\n            }]\r\n          };\r\n          resultOption.dataset.source.splice(0, 0, resultOption.dataset.dimensions);\r\n          this.chart.setOption(resultOption);\r\n        } else if (option.series && (option.series.type === 'line' || option.series.type === 'scatter')) {\r\n          option.dataset = this.chartsData.dataset;\r\n          this.setZoom(option);\r\n          const row1 = this.chartsData.dataset.dimensions.indexOf(option.series.encode.y[0]);\r\n          option.visualMap[0].dimension = row1;\r\n          option.visualMap[0].min = Math.min.apply(null, this.setNumber(this.chartsData.dataset.source, row1));\r\n          option.visualMap[0].max = Math.max.apply(null, this.setNumber(this.chartsData.dataset.source, row1));\r\n          option.dataset.source.splice(0, 0, option.dataset.dimensions);\r\n          this.chart.setOption(option);\r\n        } else if (option.series && option.series.type && option.series.type === 'effectScatter') {\r\n          option.dataset = this.chartsData.dataset;\r\n          if (option.series.encode.value2.length === 0) {\r\n            const row1 = this.chartsData.dataset.dimensions.indexOf(option.series.encode.value1[0]);\r\n            option.visualMap[0].dimension = row1;\r\n            option.visualMap[0].min = Math.min.apply(null, this.setNumber(this.chartsData.dataset.source, row1));\r\n            option.visualMap[0].max = Math.max.apply(null, this.setNumber(this.chartsData.dataset.source, row1));\r\n            const row2 = this.chartsData.dataset.dimensions.indexOf(option.series.encode.value1[0]);\r\n            option.visualMap[1].dimension = row2;\r\n            option.visualMap[1].min = Math.min.apply(null, this.setNumber(this.chartsData.dataset.source, row2));\r\n            option.visualMap[1].max = Math.max.apply(null, this.setNumber(this.chartsData.dataset.source, row2));\r\n          } else {\r\n            const row = this.chartsData.dataset.dimensions.indexOf(option.series.encode.value1[0]);\r\n            option.visualMap[0].dimension = row;\r\n            option.visualMap[0].min = Math.min.apply(null, this.setNumber(this.chartsData.dataset.source, row));\r\n            option.visualMap[0].max = Math.max.apply(null, this.setNumber(this.chartsData.dataset.source, row));\r\n\r\n            const row2 = this.chartsData.dataset.dimensions.indexOf(option.series.encode.value2[0]);\r\n            option.visualMap[1].dimension = row2;\r\n            option.visualMap[1].min = Math.min.apply(null, this.setNumber(this.chartsData.dataset.source, row2));\r\n            option.visualMap[1].max = Math.max.apply(null, this.setNumber(this.chartsData.dataset.source, row2));\r\n          }\r\n          option.dataset.source.splice(0, 0, option.dataset.dimensions);\r\n          this.chart.setOption(option);\r\n        } else if (option.series && option.series.type === 'bar') {\r\n          if (option.series.encode.y && option.series.encode.y.length < 2) {\r\n            const arrayTemp1: any = [];\r\n            const arrayTemp2: any = [];\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let i = 0; i < this.chartsData.dataset.source.length; i++) {\r\n              arrayTemp1.push(this.chartsData.dataset.source[i][this.chartsData.dataset.dimensions.indexOf(option.series.encode.x[0])]);\r\n              arrayTemp2.push(this.chartsData.dataset.source[i][this.chartsData.dataset.dimensions.indexOf(option.series.encode.y[0])]);\r\n            }\r\n            const isRepeat = Array.from(new Set(arrayTemp1)).length - arrayTemp1.length;\r\n            if (isRepeat === 0) {\r\n              option.dataset = this.chartsData.dataset;\r\n              this.setZoom(option);\r\n              const row1 = this.chartsData.dataset.dimensions.indexOf(option.series.encode.y[0]);\r\n              option.legend = {};\r\n              option.visualMap[0].dimension = row1;\r\n              option.visualMap[0].min = Math.min.apply(null, this.setNumber(this.chartsData.dataset.source, row1));\r\n              option.visualMap[0].max = Math.max.apply(null, this.setNumber(this.chartsData.dataset.source, row1));\r\n              option.dataset.source.splice(0, 0, option.dataset.dimensions);\r\n              this.chart.setOption(option);\r\n            }\r\n            // åç»ï¼éæ°è®¾ç½®æ°æ®æ ¼å¼åå¤çé»è¾\r\n            if (isRepeat < 0) {\r\n              option.visualMap = [];\r\n              option.dataset = this.chartsData.dataset;\r\n              this.setZoom(option);\r\n              const ob: any = [];\r\n              for (let i = 0; i < arrayTemp1.length; i++) {\r\n                ob.push(\r\n                  {\r\n                    name: arrayTemp1[i],\r\n                    value: arrayTemp2[i]\r\n                  });\r\n              }\r\n              const hash = {};\r\n              let i = 0;\r\n              const res = [];\r\n              ob.forEach(function (item) {\r\n                const name = item.name;\r\n                hash[name] ? res[hash[name] - 1].value.push(item.value) : hash[name] = ++i && res.push({\r\n                  name: name,\r\n                  value: [item.value],\r\n                });\r\n              });\r\n              // æ¿å°å¯¹è±¡æ°ç»è¿è¡è½¬ç½®\r\n              const xdata: any = [];\r\n              let max = 0;\r\n              res.forEach(function (item) {\r\n                xdata.push(item.name);\r\n                if (item.value.length + 1 > max) {\r\n                  max = item.value.length + 1;\r\n                }\r\n              });\r\n              const series: any = [];\r\n              const legendData = [];\r\n              for (let i = 1; i < max; i++) {\r\n                legendData.push(i + 'æ¬¡');\r\n                series.push({\r\n                  name: i + 'æ¬¡',\r\n                  type: 'bar',\r\n                  stack: 'æ»é',\r\n                  data: [],\r\n                });\r\n              }\r\n              res.forEach(function (item) {\r\n                for (let i = 0; i < max - 1; i++) {\r\n                  if (item.value[i]) {\r\n                    series[i].data.push(item.value[i]);\r\n                  } else {\r\n                    series[i].data.push(0);\r\n                  }\r\n                }\r\n              });\r\n\r\n              option.xAxis = [{ data: xdata }];\r\n              option.series = series;\r\n              option.legend = { data: legendData };\r\n              this.chart.setOption(option);\r\n              return;\r\n            }\r\n          } else if (option.series.encode.y && option.series.encode.y.length > 1) {\r\n            option.dataset = this.chartsData.dataset;\r\n            this.setZoom(option);\r\n            option.visualMap = [];\r\n            const seriesChange = [];\r\n            // legend data\r\n            const yList = option.series.encode.y;\r\n            for (let i = 0; i < yList.length; i++) {\r\n              const temp: any = {\r\n                type: option.series.type,\r\n                name: option.legend.data[i],\r\n                encode: {\r\n                  x: option.series.encode.x,\r\n                  y: [yList[i]],\r\n                },\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    position: 'insideTop'\r\n                  }\r\n                },\r\n              };\r\n              if (option.title.id && option.title.id === 'pile') {\r\n\r\n                temp.stack = 'æ»é';\r\n                delete temp.label;\r\n              }\r\n              seriesChange.push(temp);\r\n            }\r\n            option.series = seriesChange;\r\n            option.dataset.source.splice(0, 0, option.dataset.dimensions);\r\n            this.chart.setOption(option);\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  setZoom(op: any) {\r\n    let dataZoom = [];\r\n    if (op.dataset.source.length > 9) {\r\n      dataZoom = [{\r\n        id: 'dataZoomX',\r\n        type: 'slider',\r\n        xAxisIndex: [0],\r\n        filterMode: 'filter'\r\n      }];\r\n      op.dataZoom = dataZoom;\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, Optional, AfterViewInit, Injector } from '@angular/core';\r\nimport { BindingData, BindingList, ViewModel, Change } from '@farris/devkit';\r\nimport { NgxEchartsDirective } from '../qdp-charts/qdp.charts.directive';\r\nimport { QDPCacheUtil, RtfServices, SchemaManagerService } from '@qdp/common';\r\nimport { CacheService } from '@ecp-caf/caf-common';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'formBindingData, [formBindingData]',\r\n})\r\nexport class FormBindingDataDirective implements OnInit, AfterViewInit {\r\n  @Input() delay = 0;\r\n  @Input() interval = 0;\r\n  @Input() queryId: string;\r\n  @Input() controlType: any;\r\n  private myVar: any;\r\n  cache: CacheService;\r\n\r\n  constructor(\r\n    @Optional() public charts: NgxEchartsDirective,\r\n    @Optional() public bindingData: BindingData,\r\n    @Optional() public viewModel: ViewModel,\r\n    private schemaManager: SchemaManagerService,\r\n    @Optional() private injector: Injector\r\n  ) { \r\n    if (this.injector) {\r\n      this.cache = this.injector.get(CacheService);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    QDPCacheUtil.setCache(RtfServices.getTabId(this.queryId) + this.queryId + 'form-charts', this);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.delayLoad();\r\n  }\r\n\r\n  delayLoad() {\r\n    if (!this.delay) {\r\n      this.delay = 0;\r\n    }\r\n    setTimeout(() => {\r\n      this.bindingListChange();\r\n      this.intervalLoad();\r\n    }, this.delay);\r\n  }\r\n\r\n  intervalLoad() {\r\n    if (this.interval) {\r\n      this.myVar = setInterval(() => {\r\n        this.bindingListChange();\r\n      }, this.interval);\r\n    }\r\n  }\r\n\r\n  clearIntervalLoad() {\r\n    if (this.myVar) {\r\n      clearInterval(this.myVar);\r\n    }\r\n  }\r\n\r\n  private bindingListChange() {\r\n    if (this.bindingData) {\r\n      this.bindData();\r\n      this.bindingData.changes.subscribe((change: Change) => {\r\n        this.bindData();\r\n      });\r\n    }\r\n  }\r\n\r\n  private bindData() {\r\n    const self = this;\r\n    if (this.bindingList) {\r\n      let op;\r\n      const organizationId = this.cache.get(RtfServices.getTabId(self.queryId) + 'organizationId') || '';\r\n      this.schemaManager.getDefaultSchema(this.charts.queryId, this.charts.queryRelativeUrl, '', organizationId).subscribe(value => {\r\n        if (value) {\r\n          if (value.schemaValue.chartsType.series.type && value.schemaValue.chartsType.series.type !== -1) {\r\n            op = Object.assign({}, value.schemaValue.chartsData, value.schemaValue.chartsStyle);\r\n            value.schemaValue.chartsType.series.type = value.schemaValue.chartsType.series.type.replace('1', '');\r\n            op.series.type = value.schemaValue.chartsType.series.type;\r\n            if (op.series.type !== 'line1') {\r\n              delete op.series.areaStyle;\r\n            } else {\r\n              op.series.areaStyle = {};\r\n            }\r\n          }\r\n        }\r\n        const dynamiccols: any = [];\r\n        this.bindingList.properties.forEach(col => {\r\n            const dynamiccol: any = {};\r\n            dynamiccol.name = col.name;\r\n            dynamiccol.bindField = col.name;\r\n            dynamiccol.colWidth = 150;\r\n            dynamiccol.align =  0;\r\n            dynamiccol.visible = true;\r\n            dynamiccol.isFixed = false;\r\n            dynamiccol.formatType = 0;\r\n            dynamiccol.formattor = '';\r\n            dynamiccol.sort =  0;\r\n            dynamiccol.pageAggreText = null;\r\n            dynamiccol.pageAggre = 0;\r\n            dynamiccol.isGroup = false;\r\n            dynamiccol.groupAggreText = '';\r\n            dynamiccol.groupAggre = 0;\r\n            dynamiccol.totalAggreText = '';\r\n            dynamiccol.totalAggre = 0;\r\n            dynamiccol.level = 1;\r\n            dynamiccol.childList = [];\r\n            dynamiccol.dimension = 0;\r\n            dynamiccol.rowColor = null;\r\n            dynamiccols.push(dynamiccol);\r\n          });\r\n        this.schemaManager.setColInfo(dynamiccols);\r\n        if (op && op.series && op.series.type) {\r\n          op.series.type = op.series.type.replace('1', '');\r\n        }\r\n        this.charts.setData(this.bindingList.toJSON(), op);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  private get bindingList(): BindingList {\r\n    if (!this.bindingData || !this.viewModel) {\r\n      return undefined;\r\n    }\r\n\r\n    // æ ¹å®ä½\r\n    if (this.viewModel.bindingPath === '/' || !this.viewModel.bindingPath) {\r\n      return this.bindingData.list;\r\n    }\r\n\r\n    // å­å®ä½\r\n    let bindingPath = this.viewModel.bindingPath.substr(1);\r\n    bindingPath = bindingPath[0].toLowerCase() + bindingPath.substring(1, bindingPath.length);\r\n    const paths = bindingPath.split('/');\r\n\r\n    const filteredPaths = paths.filter((part: string) => {\r\n      return part !== '';\r\n    });\r\n    return this.bindingData.getValue(filteredPaths);\r\n  }\r\n\r\n}\r\n","import { Inject, Directive, OnInit, Input, Optional, AfterViewInit, SimpleChanges, OnChanges, Injector } from '@angular/core';\r\nimport { NgxEchartsDirective } from '../qdp-charts/qdp.charts.directive';\r\nimport { RestfulService, SchemaManagerService, DataRenderExtendService, Server_Host, EventBus, QDPCacheUtil } from '@qdp/common';\r\nimport { CacheService } from '@ecp-caf/caf-common';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { FilterManagerService, Load_Data_Uri, Load_Data_Col } from '@qdp/common';\r\nimport { RtfServices } from '@qdp/common';\r\nimport { map } from 'rxjs/operators';\r\n\r\ndeclare var gspframeworkService: any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'lcpBindingData, [lcpBindingData]',\r\n})\r\nexport class LcpBindingDataDirective implements OnInit, AfterViewInit, OnChanges {\r\n  @Input() qoManagerCode: any;\r\n  @Input() delay = 0;\r\n  @Input() interval = 0;\r\n  @Input() eventType: string;\r\n  @Input() queryRelativeUrl: string;\r\n  @Input() queryId: string;\r\n  @Input() controlType: any;\r\n  @Input() qoId: any;\r\n  @Input() voId: any;\r\n  funcIds = [];\r\n  private myVar: any;\r\n  tabId: any;\r\n\r\n  pageInfoChange = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject(Server_Host) @Optional() private serverHost: string,\r\n    private restfulService: RestfulService,\r\n    private sessionService: SessionService,\r\n    private cache: CacheService,\r\n    private schemaManager: SchemaManagerService,\r\n    @Optional() public charts: NgxEchartsDirective,\r\n    @Optional() private dataRenderExtendService: DataRenderExtendService,\r\n    private filterService: FilterManagerService,\r\n    @Inject(Load_Data_Uri) @Optional() private loadDataUri: string,\r\n    @Inject(Load_Data_Col) @Optional() private loadDataCol: string,\r\n    @Optional() private injector: Injector\r\n  ) {\r\n  }\r\n\r\n  private bindCloseTabEvent() {\r\n    try {\r\n      const tab = gspframeworkService.rtf.session.getCommonVariable();\r\n      gspframeworkService.rtf.frmEvent.eventListener('beforeFuncCloseEvent', this.clearParametersCache.bind(this), tab);\r\n      this.funcIds.push(tab.tabId);\r\n      return tab.tabId + RtfServices.getInSuiteFrmUUID();\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  private clearParametersCache() {\r\n    const tabId = arguments[0].tabId;\r\n    this.cache.set(this.queryId, '');\r\n    this.cache.set(arguments[0].tabId, '');\r\n    this.cache.set(arguments[0].tabId + 'renderMode', '');\r\n    const index = this.funcIds.findIndex(el => el === tabId);\r\n    if (index >= 0) {\r\n      this.funcIds.splice(index, 1);\r\n      gspframeworkService.rtf.func.close(arguments[0]);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.tabId = RtfServices.getTabId(this.queryId);\r\n    QDPCacheUtil.setCache(this.tabId + this.queryId + 'lcp-charts', this);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    for (const changeName in changes) {\r\n      const newValue = changes[changeName].currentValue;\r\n      if (newValue !== null && newValue !== void 0) {\r\n        const eventId = RtfServices.getTabId(this.queryId);\r\n        switch (changeName) {\r\n          case 'queryId':\r\n            this.queryId = newValue;\r\n            QDPCacheUtil.setCache(eventId + this.queryId + 'lcp-charts', this);\r\n            break;\r\n          case 'eventType':\r\n            if (newValue) {\r\n              EventBus.register(newValue, this.handleLinkage, eventId);\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // if (this.qoId) { // æ¥è¯¢ç»æéè¿æ»¤æ¡ä»¶\r\n    this.filterService.getFilter(this.qoManagerCode, this.queryId, this.queryRelativeUrl, 1).subscribe(data => {\r\n      if (data) {\r\n        const conditionExpression = JSON.stringify(data.filter);\r\n        this.render('', '', '', conditionExpression);\r\n      } else {\r\n        this.render('');\r\n      }\r\n    });\r\n    // } else {\r\n    //   this.render('');\r\n    // }\r\n  }\r\n\r\n  handleLinkage($event) {\r\n    try {\r\n      const params = JSON.stringify($event);\r\n      this.delayLoad('', {}, params, this.queryRelativeUrl);\r\n    } catch (e) {\r\n    }\r\n  }\r\n\r\n  delayLoad(schemaId: any, option?: any, linkageParams?: any, queryRelativeUrl?: any, conditionExpression?: any) {\r\n    if (!this.delay) {\r\n      this.delay = 0;\r\n    }\r\n    if (this.delay === 0) {\r\n      this.bindData(schemaId, option, linkageParams, queryRelativeUrl, conditionExpression);\r\n      this.intervalLoad(schemaId, option, linkageParams, queryRelativeUrl, conditionExpression);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.bindData(schemaId, option, linkageParams, queryRelativeUrl, conditionExpression);\r\n        this.intervalLoad(schemaId, option, linkageParams, queryRelativeUrl, conditionExpression);\r\n      }, this.delay);\r\n    }\r\n  }\r\n\r\n  intervalLoad(schemaId: any, option?: any, linkageParams?: any, queryRelativeUrl?: any, conditionExpression?: any) {\r\n    if (this.interval) {\r\n      this.myVar = setInterval(() => {\r\n        this.bindData(schemaId, option, linkageParams, queryRelativeUrl, conditionExpression);\r\n      }, this.interval);\r\n    }\r\n  }\r\n\r\n  clearIntervalLoad() {\r\n    if (this.myVar) {\r\n      clearInterval(this.myVar);\r\n    }\r\n  }\r\n\r\n  render(schemaId: any, option?: any, linkageParams?: any, conditionExpression?: any) {\r\n    this.delayLoad(schemaId, option, linkageParams, this.queryRelativeUrl, conditionExpression);\r\n  }\r\n\r\n  getData(params: any, queryRelativeUrl: any): Observable<any> {\r\n    const self = this;\r\n    let uri = this.serverHost;\r\n    if (this.loadDataUri) {\r\n      uri += this.loadDataUri;\r\n    } else {\r\n      uri += (!queryRelativeUrl || queryRelativeUrl === '') ? '/api/runtime/bcc/v1.0/qdpsearch/query' : (queryRelativeUrl + 'querydata');\r\n    }\r\n\r\n    const result$ = !queryRelativeUrl ? this.restfulService.post(uri, queryRelativeUrl ? { 'Param': params } : params, {}, this.createHeaderSessionId())\r\n      : this.restfulService.put(uri, queryRelativeUrl ? { 'Param': params } : params, {}, this.createHeaderSessionId());\r\n    return result$.pipe(\r\n      map((data: any) => {\r\n        if (data) {\r\n          data = (!queryRelativeUrl || queryRelativeUrl === '') ? data : data.returnValue;\r\n          if (data && data.pageInfo) {\r\n            self.pageInfoChange.next(data.pageInfo);\r\n          }\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getCol(params: any, queryRelativeUrl: any): Observable<any> {\r\n    let uri = this.serverHost;\r\n    if (this.loadDataCol) {\r\n      uri += this.loadDataCol;\r\n    } else {\r\n      uri += ((!queryRelativeUrl || queryRelativeUrl === '') ? '/api/runtime/bcc/v1.0/qdpsearch/' : queryRelativeUrl) + 'querycol';\r\n    }\r\n    params = (!queryRelativeUrl || queryRelativeUrl === '') ? params : { 'Param': params };\r\n    const result$ = !queryRelativeUrl ? this.restfulService.post(uri, params, {}, this.createHeaderSessionId())\r\n      : this.restfulService.put(uri, params, {}, this.createHeaderSessionId());\r\n    return result$.pipe(\r\n      map((data: any) => {\r\n        if (data) {\r\n          data = (!queryRelativeUrl || queryRelativeUrl === '') ? data : data.returnValue;\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  private createParameters(queryId: any, controlType: any, schemaId: any, qoManagerCode: any, extendCond: any, pageIndex: any, pageSize: any, printIntegration?: any, excelExportName?: any, voId?: any) {\r\n    let entityData: any;\r\n    const tabId = this.bindCloseTabEvent();\r\n    if (this.cache.get(tabId)) {\r\n      entityData = JSON.stringify(this.cache.get(tabId));\r\n    } else if (this.cache.get(queryId)) {\r\n      entityData = JSON.stringify(this.cache.get(queryId));\r\n    } else {\r\n      entityData = JSON.stringify({ 'id': 'undefined_null' });\r\n    }\r\n    const params = {\r\n      entityData: entityData,\r\n      extendCond: extendCond,\r\n      pageIndex: pageIndex,\r\n      pageSize: pageSize,\r\n      schemaId: schemaId && schemaId !== 'prefab' ? schemaId : '1',\r\n      filterCond: this.cache.get(tabId + 'filtercondition') ? this.cache.get(tabId + 'filtercondition') : '',\r\n      qoManagerCode: qoManagerCode ? qoManagerCode : '',\r\n      voCode: voId ? voId : ''\r\n    };\r\n    try {\r\n      const parameterEntityData = JSON.parse(entityData);\r\n      if (parameterEntityData.hasOwnProperty('@filterExpressionString@')) {\r\n\r\n        const filterExpression = params && params.filterCond ? JSON.parse(params.filterCond) : null;\r\n        if (!filterExpression) {\r\n          params.filterCond = parameterEntityData['@filterExpressionString@'];\r\n        } else {\r\n          const advanceFilterExpression = JSON.parse(parameterEntityData['@filterExpressionString@']);\r\n          advanceFilterExpression.expressItems = advanceFilterExpression.expressItems.concat(filterExpression.expressItems);\r\n          params.filterCond = JSON.stringify(advanceFilterExpression);\r\n        }\r\n      }\r\n    } catch (e) {\r\n    }\r\n    if (controlType) {\r\n      params['controlType'] = controlType;\r\n    }\r\n    if (excelExportName) {\r\n      params['excelExportName'] = excelExportName;\r\n    }\r\n    if (printIntegration) {\r\n      params['printIntegration'] = printIntegration ? JSON.stringify(printIntegration) : '';\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  getSchemaInfo(obj: any): Observable<any> {\r\n    const self = this;\r\n    obj.schemaId = obj.schemaId === 'prefab' ? '1' : obj.schemaId;\r\n    if (!obj.schemaId) {\r\n      return self.getDefaultSchemaInfo(obj);\r\n    } else {\r\n      const organizationId = this.cache.get(RtfServices.getTabId(obj.queryId) + 'organizationId') || '';\r\n      const result$ = this.schemaManager.getSchema(obj.schemaId, obj.queryId, obj.queryRelativeUrl, obj.groupType, organizationId);\r\n      return result$.pipe(\r\n        switchMap((schemaValue: any) => {\r\n          if (schemaValue && schemaValue['id']) {\r\n            return of(schemaValue);\r\n          }\r\n          //  else {\r\n          //   return self.getDefaultSchemaInfo(obj);\r\n          // }\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  getDefaultSchemaInfo(obj: any) {\r\n    const organizationId = this.cache.get(RtfServices.getTabId(obj.queryId) + 'organizationId') || '';\r\n    return this.schemaManager.getDefaultSchema(obj.queryId, obj.queryRelativeUrl, obj.groupType, organizationId);\r\n  }\r\n\r\n  private bindData(schemaId: any, option?: any, linkageParams?: any, queryRelativeUrl?: any, conditionExpression?: any) {\r\n    let op = option;\r\n    this.getSchemaInfo({ schemaId: schemaId, queryId: this.charts.queryId, queryRelativeUrl }).subscribe(value => {\r\n      let _schemaId = '';\r\n      if (schemaId) {\r\n        _schemaId = schemaId;\r\n      }\r\n      if (value && !_schemaId) {\r\n        _schemaId = value.id;\r\n        if (value.schemaValue.chartsType.series.type && value.schemaValue.chartsType.series.type !== -1) {\r\n          op = Object.assign({}, value.schemaValue.chartsData, value.schemaValue.chartsStyle);\r\n          value.schemaValue.chartsType.series.type = value.schemaValue.chartsType.series.type.replace('1', '');\r\n          op.series.type = value.schemaValue.chartsType.series.type;\r\n          if (op.series.type !== 'line1') {\r\n            delete op.series.areaStyle;\r\n          } else {\r\n            op.series.areaStyle = {};\r\n          }\r\n        }\r\n      }\r\n      if (value && value.schemaValue && value.schemaValue.customOption) {\r\n        try {\r\n          op = Object.assign({}, op, JSON.parse(value.schemaValue.customOption));\r\n        } catch (e) {\r\n          op = Object.assign({}, op, value.schemaValue.customOption);\r\n        }\r\n      }\r\n      let entityData: any = '';\r\n      if (this.cache.get(this.charts.queryId)) {\r\n        entityData = JSON.stringify(this.cache.get(this.charts.queryId));\r\n      }\r\n      if (linkageParams) {\r\n        entityData = linkageParams;\r\n      }\r\n      // TODO: mork\r\n      const params = this.createParameters(this.queryId, 'charts', _schemaId, this.qoManagerCode, '', 0, 0, undefined, undefined, this.voId);\r\n      params['queryId'] = this.queryId ? this.queryId : '';\r\n      if (this.qoManagerCode) {\r\n        params['qoManagerCode'] = this.qoManagerCode;\r\n      }\r\n      if (_schemaId && _schemaId !== 'prefab') {\r\n        params['schemaId'] = _schemaId;\r\n      } else {\r\n        params['schemaId'] = '1';\r\n      }\r\n      // æ¥è¯¢æ°æ®åäºä»¶\r\n      if (this.dataRenderExtendService && this.dataRenderExtendService.beforeQueryData) {\r\n        this.dataRenderExtendService.beforeQueryData(this.createEventParams('beforeQueryData', 'æ¥è¯¢æ°æ®å', params, this.charts));\r\n        try {\r\n          this.cache.set(this.tabId, JSON.parse(params['entityData']));\r\n        } catch (e) { }\r\n      }\r\n\r\n      // æ·»å å\r\n      const self = this;\r\n      self.getData(params, queryRelativeUrl).subscribe((data: any) => {\r\n        self.getCol(params, queryRelativeUrl).subscribe(resultData => {\r\n          if (!data.dynamicCols || data.dynamicCols.length === 0) {\r\n            data.dynamicCols = resultData.dynamicCols || [];\r\n          } else {\r\n            resultData.dynamicCols.forEach(col => {\r\n              data.dynamicCols.push(col);\r\n            });\r\n          }\r\n          if (data && data.dynamicCols && data.dynamicCols.length) {\r\n            const joinParam = {};\r\n            joinParam['controlType'] = 'charts';\r\n            joinParam['colList'] = data.dynamicCols;\r\n            self.cache.set(self.tabId + 'joinSearch', joinParam);\r\n            self.schemaManager.colList.next(data.dynamicCols);\r\n          }\r\n          // æ°æ®å è½½åäºä»¶\r\n          if (op && op.series && op.series.type) {\r\n            op.series.type = op.series.type.replace('1', '');\r\n          }\r\n          if (data && data.data && data.data.length) {\r\n            self.charts.setData(data.data, op);\r\n          } else {\r\n            self.charts.setData([], op);\r\n          }\r\n\r\n          // é¡µé¢æ¸²æåäºä»¶\r\n          if (self.dataRenderExtendService && self.dataRenderExtendService.afterLoadData) {\r\n            self.dataRenderExtendService.beforeLoadData(self.createEventParams('afterLoadData', 'æ¸²æåäºä»¶', data, self.charts));\r\n          }\r\n          self.cache.set(self.charts.queryId + 'echartsconfig', op);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private createHeaderSessionId() {\r\n    return RtfServices.createHeaderSessionId(this.sessionService);\r\n  }\r\n\r\n  private createEventParams(eventCode: any, eventName: any, data: any, control: any) {\r\n    return {\r\n      eventCode,\r\n      eventName,\r\n      data,\r\n      control\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxEchartsDirective } from './directive/qdp-charts/qdp.charts.directive';\r\nimport { FormBindingDataDirective } from './directive/bindingdata/form.bindingdata.directive';\r\nimport { LcpBindingDataDirective } from './directive/bindingdata/lcp.bindingdata.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxEchartsDirective,\r\n    FormBindingDataDirective,\r\n    LcpBindingDataDirective\r\n  ],\r\n  exports: [\r\n    NgxEchartsDirective,\r\n    FormBindingDataDirective,\r\n    LcpBindingDataDirective\r\n  ]\r\n})\r\nexport class EchartsModule { }\r\n"]}