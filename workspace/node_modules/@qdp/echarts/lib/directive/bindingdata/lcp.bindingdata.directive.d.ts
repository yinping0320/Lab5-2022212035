import { OnInit, AfterViewInit, SimpleChanges, OnChanges, Injector } from '@angular/core';
import { NgxEchartsDirective } from '../qdp-charts/qdp.charts.directive';
import { RestfulService, SchemaManagerService, DataRenderExtendService } from '@qdp/common';
import { CacheService } from '@ecp-caf/caf-common';
import { Observable, Subject } from 'rxjs';
import { SessionService } from '@ecp-caf/caf-common';
import { FilterManagerService } from '@qdp/common';
export declare class LcpBindingDataDirective implements OnInit, AfterViewInit, OnChanges {
    private serverHost;
    private restfulService;
    private sessionService;
    private cache;
    private schemaManager;
    charts: NgxEchartsDirective;
    private dataRenderExtendService;
    private filterService;
    private loadDataUri;
    private loadDataCol;
    private injector;
    qoManagerCode: any;
    delay: number;
    interval: number;
    eventType: string;
    queryRelativeUrl: string;
    queryId: string;
    controlType: any;
    qoId: any;
    voId: any;
    funcIds: any[];
    private myVar;
    tabId: any;
    pageInfoChange: Subject<any>;
    constructor(serverHost: string, restfulService: RestfulService, sessionService: SessionService, cache: CacheService, schemaManager: SchemaManagerService, charts: NgxEchartsDirective, dataRenderExtendService: DataRenderExtendService, filterService: FilterManagerService, loadDataUri: string, loadDataCol: string, injector: Injector);
    private bindCloseTabEvent;
    private clearParametersCache;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    handleLinkage($event: any): void;
    delayLoad(schemaId: any, option?: any, linkageParams?: any, queryRelativeUrl?: any, conditionExpression?: any): void;
    intervalLoad(schemaId: any, option?: any, linkageParams?: any, queryRelativeUrl?: any, conditionExpression?: any): void;
    clearIntervalLoad(): void;
    render(schemaId: any, option?: any, linkageParams?: any, conditionExpression?: any): void;
    getData(params: any, queryRelativeUrl: any): Observable<any>;
    getCol(params: any, queryRelativeUrl: any): Observable<any>;
    private createParameters;
    getSchemaInfo(obj: any): Observable<any>;
    getDefaultSchemaInfo(obj: any): Observable<any>;
    private bindData;
    private createHeaderSessionId;
    private createEventParams;
}
