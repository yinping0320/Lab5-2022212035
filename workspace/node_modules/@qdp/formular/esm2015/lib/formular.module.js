/**
 * @fileoverview added by tsickle
 * Generated from: lib/formular.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FormularDefineComponent } from './component/formular-define/formular-define.component';
import { FlexLayoutModule } from '@farris/ui-flex-layout';
import { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { NotifyModule } from '@farris/ui-notify';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { TreeTableModule } from '@farris/ui-treetable';
import { ColorPickerModule } from 'ngx-color-picker';
import { RtfAppHelpModule } from '@gsp-sys/rtf-ui';
import { TreeViewModule } from '@progress/kendo-angular-treeview';
import { GridModule } from '@progress/kendo-angular-grid';
import { PopupModule } from '@progress/kendo-angular-popup';
import { NumericTextBoxModule, InputsModule } from '@progress/kendo-angular-inputs';
import { DropDownsModule, DropDownListModule } from '@progress/kendo-angular-dropdowns';
import { LayoutModule } from '@progress/kendo-angular-layout';
import { ButtonsModule } from '@progress/kendo-angular-buttons';
import { FormularSelectComponent } from './component/formular-select/formular-select.component';
import { FormularDefineWizardComponent } from './component/formular-define-wizard/formular-define-wizard.component';
import { StepComponentComponent } from './component/step-component/step-component.component';
import { DatagridModule } from '@farris/ui-datagrid';
import { ComboListModule } from '@farris/ui-combo-list';
import { FarrisButtonModule } from '@farris/ui-button';
import { RestfulService } from './service/restful.service';
import { FormularService } from './service/formular.service';
import { FarrisPanelModule } from '@farris/ui-panel';
import { FarrisFormsModule } from '@farris/ui-forms';
import { LoadingModule } from '@farris/ui-loading';
import { EntityDataService } from './service/entitydata.service';
import { LocalizeModule } from '@qdp/localize';
import { LookupModule } from '@farris/ui-lookup';
import { FarrisDatePickerModule } from '@farris/ui-datepicker';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { HelpBeforeEventDirective } from './directive/help-before-event.directive';
export class FormularModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: FormularModule,
            providers: [RestfulService, EntityDataService, FormularService]
        };
    }
}
FormularModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    GridModule,
                    PopupModule,
                    NumericTextBoxModule,
                    InputsModule,
                    DropDownsModule,
                    DropDownListModule,
                    LayoutModule,
                    ButtonsModule,
                    TreeViewModule,
                    FarrisDialogModule,
                    NotifyModule,
                    FDropdownDirectiveTypeModule,
                    FlexLayoutModule,
                    TreeTableModule,
                    PerfectScrollbarModule,
                    RtfAppHelpModule,
                    ColorPickerModule,
                    DatagridModule.forRoot(),
                    ComboListModule,
                    FarrisButtonModule,
                    FarrisPanelModule,
                    FarrisFormsModule,
                    LoadingModule.forRoot(),
                    LocalizeModule,
                    LookupModule,
                    FarrisDatePickerModule,
                    NumberSpinnerModule
                ],
                declarations: [
                    FormularDefineComponent,
                    FormularSelectComponent,
                    FormularDefineWizardComponent,
                    StepComponentComponent,
                    HelpBeforeEventDirective
                ],
                exports: [
                    FormularDefineComponent,
                    FormularSelectComponent,
                    FormularDefineWizardComponent,
                    StepComponentComponent
                ],
                entryComponents: [
                    FormularDefineComponent,
                    FormularSelectComponent,
                    FormularDefineWizardComponent,
                    StepComponentComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,