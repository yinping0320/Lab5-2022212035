/**
 * @fileoverview added by tsickle
 * Generated from: lib/component/formular-define-wizard/formular-define-wizard.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild } from '@angular/core';
import { FormularSelectComponent } from '../formular-select/formular-select.component';
import { CacheService } from '@ecp-caf/caf-common';
import { FormularDefineComponent } from '../formular-define/formular-define.component';
import { StepComponentComponent } from '../step-component/step-component.component';
import { EntityDataService } from '../../service/entitydata.service';
import { LocalizeService } from '@qdp/localize';
export class FormularDefineWizardComponent {
    /**
     * @param {?} cacheService
     * @param {?} entityDataService
     * @param {?} localizeService
     */
    constructor(cacheService, entityDataService, localizeService) {
        this.cacheService = cacheService;
        this.entityDataService = entityDataService;
        this.localizeService = localizeService;
        this.steps = [
            {
                stepId: 'selectTemplate',
                title: this.localizeService.getValue('formular.defineWizard.labelSelectTemplate'),
                component: FormularSelectComponent,
                data: '',
                show: true,
                nextStep: 'formularDefine',
                showFinishBtn: true,
                showCancelBtn: true,
                showLastStepBtn: false,
                showNextStepBtn: true
            },
            {
                stepId: 'formularDefine',
                title: this.localizeService.getValue('formular.defineWizard.labelFormularDefine'),
                component: FormularDefineComponent,
                data: '',
                show: true,
                nextStep: '',
                showFinishBtn: true,
                showCancelBtn: true,
                showLastStepBtn: true,
                showNextStepBtn: false
            }
        ];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.cacheService.set('formularParam', { currentSU: this.currentSU, currentFormularId: this.currentFormularId, serverHost: this.serverHost });
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.entityDataService.setFormularState(false, {});
        if (this.currentFormularId) {
            /** @type {?} */
            const formularEdit = {
                stepId: 'formularDefine',
                title: this.localizeService.getValue('formular.defineWizard.labelFormularDefine'),
                component: FormularDefineComponent,
                data: '',
                show: true,
                nextStep: '',
                showFinishBtn: true,
                showCancelBtn: true,
                showLastStepBtn: true,
                showNextStepBtn: false
            };
            this.qdpsteps.jumpStep(formularEdit);
        }
    }
    /**
     * 点击完成
     * @return {?}
     */
    clickFinishBtn() {
        if (this.parentDialog) {
            // this.selectFormularInfo = this.cacheService.get('formularResult');
            this.parentDialog.close();
        }
    }
}
FormularDefineWizardComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-formular-define-wizard',
                template: "<lib-step-component #qdpsteps [steps]=\"steps\" (clickFinishBtn)=\"clickFinishBtn()\">\r\n</lib-step-component>",
                styles: [""]
            }] }
];
/** @nocollapse */
FormularDefineWizardComponent.ctorParameters = () => [
    { type: CacheService },
    { type: EntityDataService },
    { type: LocalizeService }
];
FormularDefineWizardComponent.propDecorators = {
    qdpsteps: [{ type: ViewChild, args: ['qdpsteps',] }]
};
if (false) {
    /** @type {?} */
    FormularDefineWizardComponent.prototype.qdpsteps;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.currentSU;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.currentFormularId;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.currentFunctionId;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.serverHost;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.sessionId;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.parentDialog;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.formularType;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.selectFormularInfo;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.steps;
    /**
     * @type {?}
     * @private
     */
    FormularDefineWizardComponent.prototype.cacheService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineWizardComponent.prototype.entityDataService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineWizardComponent.prototype.localizeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXVsYXItZGVmaW5lLXdpemFyZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcWRwL2Zvcm11bGFyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9mb3JtdWxhci1kZWZpbmUtd2l6YXJkL2Zvcm11bGFyLWRlZmluZS13aXphcmQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBaUIsU0FBUyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUN2RixPQUFPLEVBQWtCLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPaEQsTUFBTSxPQUFPLDZCQUE2Qjs7Ozs7O0lBR3hDLFlBQW9CLFlBQTBCLEVBQ2xDLGlCQUFvQyxFQUNwQyxlQUFnQztRQUZ4QixpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUNsQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3BDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUN4QyxJQUFJLENBQUMsS0FBSyxHQUFHO1lBQ1g7Z0JBQ0UsTUFBTSxFQUFFLGdCQUFnQjtnQkFDeEIsS0FBSyxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLDJDQUEyQyxDQUFDO2dCQUNqRixTQUFTLEVBQUUsdUJBQXVCO2dCQUNsQyxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsYUFBYSxFQUFFLElBQUk7Z0JBQ25CLGVBQWUsRUFBRSxLQUFLO2dCQUN0QixlQUFlLEVBQUUsSUFBSTthQUN0QjtZQUNEO2dCQUNFLE1BQU0sRUFBRSxnQkFBZ0I7Z0JBQ3hCLEtBQUssRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQywyQ0FBMkMsQ0FBQztnQkFDakYsU0FBUyxFQUFFLHVCQUF1QjtnQkFDbEMsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsUUFBUSxFQUFFLEVBQUU7Z0JBQ1osYUFBYSxFQUFFLElBQUk7Z0JBQ25CLGFBQWEsRUFBRSxJQUFJO2dCQUNuQixlQUFlLEVBQUUsSUFBSTtnQkFDckIsZUFBZSxFQUFFLEtBQUs7YUFDdkI7U0FDRixDQUFDO0lBQ0wsQ0FBQzs7OztJQVlGLFFBQVE7UUFDTixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ2hKLENBQUM7Ozs7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNuRCxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTs7a0JBQ3BCLFlBQVksR0FBRztnQkFDbkIsTUFBTSxFQUFFLGdCQUFnQjtnQkFDeEIsS0FBSyxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLDJDQUEyQyxDQUFDO2dCQUNqRixTQUFTLEVBQUUsdUJBQXVCO2dCQUNsQyxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsRUFBRTtnQkFDWixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsYUFBYSxFQUFFLElBQUk7Z0JBQ25CLGVBQWUsRUFBRSxJQUFJO2dCQUNyQixlQUFlLEVBQUUsS0FBSzthQUN2QjtZQUNELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQzs7Ozs7SUFLRCxjQUFjO1FBQ1osSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLHFFQUFxRTtZQUNyRSxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQzNCO0lBQ0gsQ0FBQzs7O1lBaEZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNEJBQTRCO2dCQUN0QywySEFBc0Q7O2FBRXZEOzs7O1lBVndCLFlBQVk7WUFHNUIsaUJBQWlCO1lBQ2pCLGVBQWU7Ozt1QkFTckIsU0FBUyxTQUFDLFVBQVU7Ozs7SUFBckIsaURBQXdEOztJQStCeEQsa0RBQWU7O0lBQ2YsMERBQXVCOztJQUN2QiwwREFBdUI7O0lBQ3ZCLG1EQUFnQjs7SUFDaEIsa0RBQWU7O0lBQ2YscURBQWtCOztJQUNsQixxREFBa0I7O0lBQ2xCLDJEQUF3Qjs7SUFFeEIsOENBQVc7Ozs7O0lBdkNDLHFEQUFrQzs7Ozs7SUFDMUMsMERBQTRDOzs7OztJQUM1Qyx3REFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIFZpZXdDaGlsZCwgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3JtdWxhclNlbGVjdENvbXBvbmVudCB9IGZyb20gJy4uL2Zvcm11bGFyLXNlbGVjdC9mb3JtdWxhci1zZWxlY3QuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2Vzc2lvblNlcnZpY2UsIENhY2hlU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBGb3JtdWxhckRlZmluZUNvbXBvbmVudCB9IGZyb20gJy4uL2Zvcm11bGFyLWRlZmluZS9mb3JtdWxhci1kZWZpbmUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU3RlcENvbXBvbmVudENvbXBvbmVudCB9IGZyb20gJy4uL3N0ZXAtY29tcG9uZW50L3N0ZXAtY29tcG9uZW50LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEVudGl0eURhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZS9lbnRpdHlkYXRhLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMb2NhbGl6ZVNlcnZpY2UgfSBmcm9tICdAcWRwL2xvY2FsaXplJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWZvcm11bGFyLWRlZmluZS13aXphcmQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9mb3JtdWxhci1kZWZpbmUtd2l6YXJkLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9mb3JtdWxhci1kZWZpbmUtd2l6YXJkLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRm9ybXVsYXJEZWZpbmVXaXphcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xyXG5cclxuICBAVmlld0NoaWxkKCdxZHBzdGVwcycpIHFkcHN0ZXBzOiBTdGVwQ29tcG9uZW50Q29tcG9uZW50O1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2FjaGVTZXJ2aWNlOiBDYWNoZVNlcnZpY2VcclxuICAgICwgcHJpdmF0ZSBlbnRpdHlEYXRhU2VydmljZTogRW50aXR5RGF0YVNlcnZpY2VcclxuICAgICwgcHJpdmF0ZSBsb2NhbGl6ZVNlcnZpY2U6IExvY2FsaXplU2VydmljZSkge1xyXG4gICAgICB0aGlzLnN0ZXBzID0gW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgIHN0ZXBJZDogJ3NlbGVjdFRlbXBsYXRlJyxcclxuICAgICAgICAgIHRpdGxlOiB0aGlzLmxvY2FsaXplU2VydmljZS5nZXRWYWx1ZSgnZm9ybXVsYXIuZGVmaW5lV2l6YXJkLmxhYmVsU2VsZWN0VGVtcGxhdGUnKSxcclxuICAgICAgICAgIGNvbXBvbmVudDogRm9ybXVsYXJTZWxlY3RDb21wb25lbnQsXHJcbiAgICAgICAgICBkYXRhOiAnJyxcclxuICAgICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgICBuZXh0U3RlcDogJ2Zvcm11bGFyRGVmaW5lJyxcclxuICAgICAgICAgIHNob3dGaW5pc2hCdG46IHRydWUsXHJcbiAgICAgICAgICBzaG93Q2FuY2VsQnRuOiB0cnVlLFxyXG4gICAgICAgICAgc2hvd0xhc3RTdGVwQnRuOiBmYWxzZSxcclxuICAgICAgICAgIHNob3dOZXh0U3RlcEJ0bjogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgc3RlcElkOiAnZm9ybXVsYXJEZWZpbmUnLFxyXG4gICAgICAgICAgdGl0bGU6IHRoaXMubG9jYWxpemVTZXJ2aWNlLmdldFZhbHVlKCdmb3JtdWxhci5kZWZpbmVXaXphcmQubGFiZWxGb3JtdWxhckRlZmluZScpLFxyXG4gICAgICAgICAgY29tcG9uZW50OiBGb3JtdWxhckRlZmluZUNvbXBvbmVudCxcclxuICAgICAgICAgIGRhdGE6ICcnLFxyXG4gICAgICAgICAgc2hvdzogdHJ1ZSxcclxuICAgICAgICAgIG5leHRTdGVwOiAnJyxcclxuICAgICAgICAgIHNob3dGaW5pc2hCdG46IHRydWUsXHJcbiAgICAgICAgICBzaG93Q2FuY2VsQnRuOiB0cnVlLFxyXG4gICAgICAgICAgc2hvd0xhc3RTdGVwQnRuOiB0cnVlLFxyXG4gICAgICAgICAgc2hvd05leHRTdGVwQnRuOiBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgICAgXTtcclxuICAgfVxyXG4gIGN1cnJlbnRTVTogYW55OyAvLyDlvZPliY1TVVxyXG4gIGN1cnJlbnRGb3JtdWxhcklkOiBhbnk7IC8vIOW9k+WJjeWFrOW8j2lkXHJcbiAgY3VycmVudEZ1bmN0aW9uSWQ6IGFueTsgLy8g5b2T5YmN5Lia5Yqh5Ye95pWwaWRcclxuICBzZXJ2ZXJIb3N0OiBhbnk7IC8vIOW9k+WJjeermeeCuWhvc3RcclxuICBzZXNzaW9uSWQ6IGFueTsgLy8g5b2T5YmNc2Vzc2lvbklkXHJcbiAgcGFyZW50RGlhbG9nOiBhbnk7IC8vIOW9k+WJjeWvueivneahhlxyXG4gIGZvcm11bGFyVHlwZTogYW55OyAvLyDlhazlvI/nsbvlnotcclxuICBzZWxlY3RGb3JtdWxhckluZm86IGFueTtcclxuXHJcbiAgc3RlcHM6IGFueTtcclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmNhY2hlU2VydmljZS5zZXQoJ2Zvcm11bGFyUGFyYW0nLCB7IGN1cnJlbnRTVTogdGhpcy5jdXJyZW50U1UsIGN1cnJlbnRGb3JtdWxhcklkOiB0aGlzLmN1cnJlbnRGb3JtdWxhcklkLCBzZXJ2ZXJIb3N0OiB0aGlzLnNlcnZlckhvc3QgfSk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICB0aGlzLmVudGl0eURhdGFTZXJ2aWNlLnNldEZvcm11bGFyU3RhdGUoZmFsc2UsIHt9KTtcclxuICAgIGlmICh0aGlzLmN1cnJlbnRGb3JtdWxhcklkKSB7XHJcbiAgICAgIGNvbnN0IGZvcm11bGFyRWRpdCA9IHtcclxuICAgICAgICBzdGVwSWQ6ICdmb3JtdWxhckRlZmluZScsXHJcbiAgICAgICAgdGl0bGU6IHRoaXMubG9jYWxpemVTZXJ2aWNlLmdldFZhbHVlKCdmb3JtdWxhci5kZWZpbmVXaXphcmQubGFiZWxGb3JtdWxhckRlZmluZScpLFxyXG4gICAgICAgIGNvbXBvbmVudDogRm9ybXVsYXJEZWZpbmVDb21wb25lbnQsXHJcbiAgICAgICAgZGF0YTogJycsXHJcbiAgICAgICAgc2hvdzogdHJ1ZSxcclxuICAgICAgICBuZXh0U3RlcDogJycsXHJcbiAgICAgICAgc2hvd0ZpbmlzaEJ0bjogdHJ1ZSxcclxuICAgICAgICBzaG93Q2FuY2VsQnRuOiB0cnVlLFxyXG4gICAgICAgIHNob3dMYXN0U3RlcEJ0bjogdHJ1ZSxcclxuICAgICAgICBzaG93TmV4dFN0ZXBCdG46IGZhbHNlXHJcbiAgICAgIH07XHJcbiAgICAgIHRoaXMucWRwc3RlcHMuanVtcFN0ZXAoZm9ybXVsYXJFZGl0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOeCueWHu+WujOaIkFxyXG4gICAqL1xyXG4gIGNsaWNrRmluaXNoQnRuKCkge1xyXG4gICAgaWYgKHRoaXMucGFyZW50RGlhbG9nKSB7XHJcbiAgICAgIC8vIHRoaXMuc2VsZWN0Rm9ybXVsYXJJbmZvID0gdGhpcy5jYWNoZVNlcnZpY2UuZ2V0KCdmb3JtdWxhclJlc3VsdCcpO1xyXG4gICAgICB0aGlzLnBhcmVudERpYWxvZy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=