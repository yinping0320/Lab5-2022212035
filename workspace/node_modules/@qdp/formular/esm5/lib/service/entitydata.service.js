/**
 * @fileoverview added by tsickle
 * Generated from: lib/service/entitydata.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var EntityDataService = /** @class */ (function () {
    function EntityDataService() {
        this.isFinish = false;
        this.formularInfo = {};
    }
    /**
     * @param {?} stepTye
     * @return {?}
     */
    EntityDataService.prototype.setStepType = /**
     * @param {?} stepTye
     * @return {?}
     */
    function (stepTye) {
        this.stepType = stepTye;
    };
    /**
     * @return {?}
     */
    EntityDataService.prototype.getStepType = /**
     * @return {?}
     */
    function () {
        return this.stepType;
    };
    /**
     * @param {?} isFinish
     * @param {?} formularInfo
     * @return {?}
     */
    EntityDataService.prototype.setFormularState = /**
     * @param {?} isFinish
     * @param {?} formularInfo
     * @return {?}
     */
    function (isFinish, formularInfo) {
        this.isFinish = isFinish;
        this.formularInfo = formularInfo;
    };
    /**
     * @return {?}
     */
    EntityDataService.prototype.getFormularState = /**
     * @return {?}
     */
    function () {
        return { isFinish: this.isFinish, formularInfo: this.formularInfo };
    };
    EntityDataService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EntityDataService.ctorParameters = function () { return []; };
    return EntityDataService;
}());
export { EntityDataService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    EntityDataService.prototype.isFinish;
    /**
     * @type {?}
     * @private
     */
    EntityDataService.prototype.formularInfo;
    /**
     * @type {?}
     * @private
     */
    EntityDataService.prototype.stepType;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5ZGF0YS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHFkcC9mb3JtdWxhci8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlL2VudGl0eWRhdGEuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFMUM7SUFNRTtRQUpRLGFBQVEsR0FBUSxLQUFLLENBQUM7UUFDdEIsaUJBQVksR0FBUSxFQUFFLENBQUM7SUFJL0IsQ0FBQzs7Ozs7SUFFRCx1Q0FBVzs7OztJQUFYLFVBQVksT0FBZTtRQUN6QixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztJQUMxQixDQUFDOzs7O0lBRUQsdUNBQVc7OztJQUFYO1FBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Ozs7OztJQUVELDRDQUFnQjs7Ozs7SUFBaEIsVUFBaUIsUUFBYSxFQUFFLFlBQWlCO1FBQzdDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFRCw0Q0FBZ0I7OztJQUFoQjtRQUNFLE9BQU8sRUFBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRyxZQUFZLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBQyxDQUFDO0lBQ3ZFLENBQUM7O2dCQXhCQSxVQUFVOzs7O0lBeUJYLHdCQUFDO0NBQUEsQUF6QkQsSUF5QkM7U0F4QlksaUJBQWlCOzs7Ozs7SUFDNUIscUNBQThCOzs7OztJQUM5Qix5Q0FBK0I7Ozs7O0lBQy9CLHFDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRW50aXR5RGF0YVNlcnZpY2Uge1xyXG4gIHByaXZhdGUgaXNGaW5pc2g6IGFueSA9IGZhbHNlO1xyXG4gIHByaXZhdGUgZm9ybXVsYXJJbmZvOiBhbnkgPSB7fTtcclxuICBwcml2YXRlIHN0ZXBUeXBlOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgc2V0U3RlcFR5cGUoc3RlcFR5ZTogc3RyaW5nKSB7XHJcbiAgICB0aGlzLnN0ZXBUeXBlID0gc3RlcFR5ZTtcclxuICB9XHJcblxyXG4gIGdldFN0ZXBUeXBlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuc3RlcFR5cGU7XHJcbiAgfVxyXG5cclxuICBzZXRGb3JtdWxhclN0YXRlKGlzRmluaXNoOiBhbnksIGZvcm11bGFySW5mbzogYW55KXtcclxuICAgICAgdGhpcy5pc0ZpbmlzaCA9IGlzRmluaXNoO1xyXG4gICAgICB0aGlzLmZvcm11bGFySW5mbyA9IGZvcm11bGFySW5mbztcclxuICB9XHJcblxyXG4gIGdldEZvcm11bGFyU3RhdGUoKSB7XHJcbiAgICByZXR1cm4ge2lzRmluaXNoOiB0aGlzLmlzRmluaXNoICwgZm9ybXVsYXJJbmZvOiB0aGlzLmZvcm11bGFySW5mb307XHJcbn1cclxufVxyXG4iXX0=