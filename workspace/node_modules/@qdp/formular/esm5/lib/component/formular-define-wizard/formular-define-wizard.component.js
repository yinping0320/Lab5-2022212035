/**
 * @fileoverview added by tsickle
 * Generated from: lib/component/formular-define-wizard/formular-define-wizard.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild } from '@angular/core';
import { FormularSelectComponent } from '../formular-select/formular-select.component';
import { CacheService } from '@ecp-caf/caf-common';
import { FormularDefineComponent } from '../formular-define/formular-define.component';
import { StepComponentComponent } from '../step-component/step-component.component';
import { EntityDataService } from '../../service/entitydata.service';
import { LocalizeService } from '@qdp/localize';
var FormularDefineWizardComponent = /** @class */ (function () {
    function FormularDefineWizardComponent(cacheService, entityDataService, localizeService) {
        this.cacheService = cacheService;
        this.entityDataService = entityDataService;
        this.localizeService = localizeService;
        this.steps = [
            {
                stepId: 'selectTemplate',
                title: this.localizeService.getValue('formular.defineWizard.labelSelectTemplate'),
                component: FormularSelectComponent,
                data: '',
                show: true,
                nextStep: 'formularDefine',
                showFinishBtn: true,
                showCancelBtn: true,
                showLastStepBtn: false,
                showNextStepBtn: true
            },
            {
                stepId: 'formularDefine',
                title: this.localizeService.getValue('formular.defineWizard.labelFormularDefine'),
                component: FormularDefineComponent,
                data: '',
                show: true,
                nextStep: '',
                showFinishBtn: true,
                showCancelBtn: true,
                showLastStepBtn: true,
                showNextStepBtn: false
            }
        ];
    }
    /**
     * @return {?}
     */
    FormularDefineWizardComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.cacheService.set('formularParam', { currentSU: this.currentSU, currentFormularId: this.currentFormularId, serverHost: this.serverHost });
    };
    /**
     * @return {?}
     */
    FormularDefineWizardComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.entityDataService.setFormularState(false, {});
        if (this.currentFormularId) {
            /** @type {?} */
            var formularEdit = {
                stepId: 'formularDefine',
                title: this.localizeService.getValue('formular.defineWizard.labelFormularDefine'),
                component: FormularDefineComponent,
                data: '',
                show: true,
                nextStep: '',
                showFinishBtn: true,
                showCancelBtn: true,
                showLastStepBtn: true,
                showNextStepBtn: false
            };
            this.qdpsteps.jumpStep(formularEdit);
        }
    };
    /**
     * 点击完成
     */
    /**
     * 点击完成
     * @return {?}
     */
    FormularDefineWizardComponent.prototype.clickFinishBtn = /**
     * 点击完成
     * @return {?}
     */
    function () {
        if (this.parentDialog) {
            // this.selectFormularInfo = this.cacheService.get('formularResult');
            this.parentDialog.close();
        }
    };
    FormularDefineWizardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-formular-define-wizard',
                    template: "<lib-step-component #qdpsteps [steps]=\"steps\" (clickFinishBtn)=\"clickFinishBtn()\">\r\n</lib-step-component>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    FormularDefineWizardComponent.ctorParameters = function () { return [
        { type: CacheService },
        { type: EntityDataService },
        { type: LocalizeService }
    ]; };
    FormularDefineWizardComponent.propDecorators = {
        qdpsteps: [{ type: ViewChild, args: ['qdpsteps',] }]
    };
    return FormularDefineWizardComponent;
}());
export { FormularDefineWizardComponent };
if (false) {
    /** @type {?} */
    FormularDefineWizardComponent.prototype.qdpsteps;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.currentSU;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.currentFormularId;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.currentFunctionId;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.serverHost;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.sessionId;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.parentDialog;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.formularType;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.selectFormularInfo;
    /** @type {?} */
    FormularDefineWizardComponent.prototype.steps;
    /**
     * @type {?}
     * @private
     */
    FormularDefineWizardComponent.prototype.cacheService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineWizardComponent.prototype.entityDataService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineWizardComponent.prototype.localizeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXVsYXItZGVmaW5lLXdpemFyZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcWRwL2Zvcm11bGFyLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudC9mb3JtdWxhci1kZWZpbmUtd2l6YXJkL2Zvcm11bGFyLWRlZmluZS13aXphcmQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBaUIsU0FBUyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUN2RixPQUFPLEVBQWtCLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25FLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEQ7SUFRRSx1Q0FBb0IsWUFBMEIsRUFDbEMsaUJBQW9DLEVBQ3BDLGVBQWdDO1FBRnhCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQ2xDLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFDcEMsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBQ3hDLElBQUksQ0FBQyxLQUFLLEdBQUc7WUFDWDtnQkFDRSxNQUFNLEVBQUUsZ0JBQWdCO2dCQUN4QixLQUFLLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsMkNBQTJDLENBQUM7Z0JBQ2pGLFNBQVMsRUFBRSx1QkFBdUI7Z0JBQ2xDLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxJQUFJO2dCQUNWLFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLGFBQWEsRUFBRSxJQUFJO2dCQUNuQixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsZUFBZSxFQUFFLEtBQUs7Z0JBQ3RCLGVBQWUsRUFBRSxJQUFJO2FBQ3RCO1lBQ0Q7Z0JBQ0UsTUFBTSxFQUFFLGdCQUFnQjtnQkFDeEIsS0FBSyxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLDJDQUEyQyxDQUFDO2dCQUNqRixTQUFTLEVBQUUsdUJBQXVCO2dCQUNsQyxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsRUFBRTtnQkFDWixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsYUFBYSxFQUFFLElBQUk7Z0JBQ25CLGVBQWUsRUFBRSxJQUFJO2dCQUNyQixlQUFlLEVBQUUsS0FBSzthQUN2QjtTQUNGLENBQUM7SUFDTCxDQUFDOzs7O0lBWUYsZ0RBQVE7OztJQUFSO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztJQUNoSixDQUFDOzs7O0lBRUQsdURBQWU7OztJQUFmO1FBQ0UsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNuRCxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTs7Z0JBQ3BCLFlBQVksR0FBRztnQkFDbkIsTUFBTSxFQUFFLGdCQUFnQjtnQkFDeEIsS0FBSyxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLDJDQUEyQyxDQUFDO2dCQUNqRixTQUFTLEVBQUUsdUJBQXVCO2dCQUNsQyxJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsSUFBSTtnQkFDVixRQUFRLEVBQUUsRUFBRTtnQkFDWixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsYUFBYSxFQUFFLElBQUk7Z0JBQ25CLGVBQWUsRUFBRSxJQUFJO2dCQUNyQixlQUFlLEVBQUUsS0FBSzthQUN2QjtZQUNELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ3RDO0lBQ0gsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNILHNEQUFjOzs7O0lBQWQ7UUFDRSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIscUVBQXFFO1lBQ3JFLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDM0I7SUFDSCxDQUFDOztnQkFoRkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw0QkFBNEI7b0JBQ3RDLDJIQUFzRDs7aUJBRXZEOzs7O2dCQVZ3QixZQUFZO2dCQUc1QixpQkFBaUI7Z0JBQ2pCLGVBQWU7OzsyQkFTckIsU0FBUyxTQUFDLFVBQVU7O0lBMEV2QixvQ0FBQztDQUFBLEFBakZELElBaUZDO1NBNUVZLDZCQUE2Qjs7O0lBRXhDLGlEQUF3RDs7SUErQnhELGtEQUFlOztJQUNmLDBEQUF1Qjs7SUFDdkIsMERBQXVCOztJQUN2QixtREFBZ0I7O0lBQ2hCLGtEQUFlOztJQUNmLHFEQUFrQjs7SUFDbEIscURBQWtCOztJQUNsQiwyREFBd0I7O0lBRXhCLDhDQUFXOzs7OztJQXZDQyxxREFBa0M7Ozs7O0lBQzFDLDBEQUE0Qzs7Ozs7SUFDNUMsd0RBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBWaWV3Q2hpbGQsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybXVsYXJTZWxlY3RDb21wb25lbnQgfSBmcm9tICcuLi9mb3JtdWxhci1zZWxlY3QvZm9ybXVsYXItc2VsZWN0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNlc3Npb25TZXJ2aWNlLCBDYWNoZVNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXVsYXJEZWZpbmVDb21wb25lbnQgfSBmcm9tICcuLi9mb3JtdWxhci1kZWZpbmUvZm9ybXVsYXItZGVmaW5lLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFN0ZXBDb21wb25lbnRDb21wb25lbnQgfSBmcm9tICcuLi9zdGVwLWNvbXBvbmVudC9zdGVwLWNvbXBvbmVudC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBFbnRpdHlEYXRhU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2UvZW50aXR5ZGF0YS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTG9jYWxpemVTZXJ2aWNlIH0gZnJvbSAnQHFkcC9sb2NhbGl6ZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2xpYi1mb3JtdWxhci1kZWZpbmUtd2l6YXJkJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vZm9ybXVsYXItZGVmaW5lLXdpemFyZC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZm9ybXVsYXItZGVmaW5lLXdpemFyZC5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEZvcm11bGFyRGVmaW5lV2l6YXJkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0IHtcclxuXHJcbiAgQFZpZXdDaGlsZCgncWRwc3RlcHMnKSBxZHBzdGVwczogU3RlcENvbXBvbmVudENvbXBvbmVudDtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNhY2hlU2VydmljZTogQ2FjaGVTZXJ2aWNlXHJcbiAgICAsIHByaXZhdGUgZW50aXR5RGF0YVNlcnZpY2U6IEVudGl0eURhdGFTZXJ2aWNlXHJcbiAgICAsIHByaXZhdGUgbG9jYWxpemVTZXJ2aWNlOiBMb2NhbGl6ZVNlcnZpY2UpIHtcclxuICAgICAgdGhpcy5zdGVwcyA9IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICBzdGVwSWQ6ICdzZWxlY3RUZW1wbGF0ZScsXHJcbiAgICAgICAgICB0aXRsZTogdGhpcy5sb2NhbGl6ZVNlcnZpY2UuZ2V0VmFsdWUoJ2Zvcm11bGFyLmRlZmluZVdpemFyZC5sYWJlbFNlbGVjdFRlbXBsYXRlJyksXHJcbiAgICAgICAgICBjb21wb25lbnQ6IEZvcm11bGFyU2VsZWN0Q29tcG9uZW50LFxyXG4gICAgICAgICAgZGF0YTogJycsXHJcbiAgICAgICAgICBzaG93OiB0cnVlLFxyXG4gICAgICAgICAgbmV4dFN0ZXA6ICdmb3JtdWxhckRlZmluZScsXHJcbiAgICAgICAgICBzaG93RmluaXNoQnRuOiB0cnVlLFxyXG4gICAgICAgICAgc2hvd0NhbmNlbEJ0bjogdHJ1ZSxcclxuICAgICAgICAgIHNob3dMYXN0U3RlcEJ0bjogZmFsc2UsXHJcbiAgICAgICAgICBzaG93TmV4dFN0ZXBCdG46IHRydWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHN0ZXBJZDogJ2Zvcm11bGFyRGVmaW5lJyxcclxuICAgICAgICAgIHRpdGxlOiB0aGlzLmxvY2FsaXplU2VydmljZS5nZXRWYWx1ZSgnZm9ybXVsYXIuZGVmaW5lV2l6YXJkLmxhYmVsRm9ybXVsYXJEZWZpbmUnKSxcclxuICAgICAgICAgIGNvbXBvbmVudDogRm9ybXVsYXJEZWZpbmVDb21wb25lbnQsXHJcbiAgICAgICAgICBkYXRhOiAnJyxcclxuICAgICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgICBuZXh0U3RlcDogJycsXHJcbiAgICAgICAgICBzaG93RmluaXNoQnRuOiB0cnVlLFxyXG4gICAgICAgICAgc2hvd0NhbmNlbEJ0bjogdHJ1ZSxcclxuICAgICAgICAgIHNob3dMYXN0U3RlcEJ0bjogdHJ1ZSxcclxuICAgICAgICAgIHNob3dOZXh0U3RlcEJ0bjogZmFsc2VcclxuICAgICAgICB9XHJcbiAgICAgIF07XHJcbiAgIH1cclxuICBjdXJyZW50U1U6IGFueTsgLy8g5b2T5YmNU1VcclxuICBjdXJyZW50Rm9ybXVsYXJJZDogYW55OyAvLyDlvZPliY3lhazlvI9pZFxyXG4gIGN1cnJlbnRGdW5jdGlvbklkOiBhbnk7IC8vIOW9k+WJjeS4muWKoeWHveaVsGlkXHJcbiAgc2VydmVySG9zdDogYW55OyAvLyDlvZPliY3nq5nngrlob3N0XHJcbiAgc2Vzc2lvbklkOiBhbnk7IC8vIOW9k+WJjXNlc3Npb25JZFxyXG4gIHBhcmVudERpYWxvZzogYW55OyAvLyDlvZPliY3lr7nor53moYZcclxuICBmb3JtdWxhclR5cGU6IGFueTsgLy8g5YWs5byP57G75Z6LXHJcbiAgc2VsZWN0Rm9ybXVsYXJJbmZvOiBhbnk7XHJcblxyXG4gIHN0ZXBzOiBhbnk7XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5jYWNoZVNlcnZpY2Uuc2V0KCdmb3JtdWxhclBhcmFtJywgeyBjdXJyZW50U1U6IHRoaXMuY3VycmVudFNVLCBjdXJyZW50Rm9ybXVsYXJJZDogdGhpcy5jdXJyZW50Rm9ybXVsYXJJZCwgc2VydmVySG9zdDogdGhpcy5zZXJ2ZXJIb3N0IH0pO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgdGhpcy5lbnRpdHlEYXRhU2VydmljZS5zZXRGb3JtdWxhclN0YXRlKGZhbHNlLCB7fSk7XHJcbiAgICBpZiAodGhpcy5jdXJyZW50Rm9ybXVsYXJJZCkge1xyXG4gICAgICBjb25zdCBmb3JtdWxhckVkaXQgPSB7XHJcbiAgICAgICAgc3RlcElkOiAnZm9ybXVsYXJEZWZpbmUnLFxyXG4gICAgICAgIHRpdGxlOiB0aGlzLmxvY2FsaXplU2VydmljZS5nZXRWYWx1ZSgnZm9ybXVsYXIuZGVmaW5lV2l6YXJkLmxhYmVsRm9ybXVsYXJEZWZpbmUnKSxcclxuICAgICAgICBjb21wb25lbnQ6IEZvcm11bGFyRGVmaW5lQ29tcG9uZW50LFxyXG4gICAgICAgIGRhdGE6ICcnLFxyXG4gICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgbmV4dFN0ZXA6ICcnLFxyXG4gICAgICAgIHNob3dGaW5pc2hCdG46IHRydWUsXHJcbiAgICAgICAgc2hvd0NhbmNlbEJ0bjogdHJ1ZSxcclxuICAgICAgICBzaG93TGFzdFN0ZXBCdG46IHRydWUsXHJcbiAgICAgICAgc2hvd05leHRTdGVwQnRuOiBmYWxzZVxyXG4gICAgICB9O1xyXG4gICAgICB0aGlzLnFkcHN0ZXBzLmp1bXBTdGVwKGZvcm11bGFyRWRpdCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDngrnlh7vlrozmiJBcclxuICAgKi9cclxuICBjbGlja0ZpbmlzaEJ0bigpIHtcclxuICAgIGlmICh0aGlzLnBhcmVudERpYWxvZykge1xyXG4gICAgICAvLyB0aGlzLnNlbGVjdEZvcm11bGFySW5mbyA9IHRoaXMuY2FjaGVTZXJ2aWNlLmdldCgnZm9ybXVsYXJSZXN1bHQnKTtcclxuICAgICAgdGhpcy5wYXJlbnREaWFsb2cuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19