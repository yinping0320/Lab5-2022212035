/**
 * @fileoverview added by tsickle
 * Generated from: lib/component/formular-define/formular-define.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, TemplateRef } from '@angular/core';
import { of, Subject } from 'rxjs';
import { MessagerService } from '@farris/ui-messager';
import { CacheService } from '@ecp-caf/caf-common';
import { RestfulService } from '../../service/restful.service';
import { DatagridComponent } from '@farris/ui-datagrid';
import { LoadingService } from '@farris/ui-loading';
import { EntityDataService } from '../../service/entitydata.service';
import { LocalizeService } from '@qdp/localize';
var FormularDefineComponent = /** @class */ (function () {
    function FormularDefineComponent(restfulService, msgService, cacheService, loadService, entityDataService, localizeService) {
        var _this = this;
        this.restfulService = restfulService;
        this.msgService = msgService;
        this.cacheService = cacheService;
        this.loadService = loadService;
        this.entityDataService = entityDataService;
        this.localizeService = localizeService;
        this.data = [];
        this.funcData = [];
        // 当前站点host
        this.size = {};
        this.inputTemplate = '';
        this.dynamicInput = [];
        this.columns = [];
        this.formularText = ''; // 公式信息
        // 公式信息
        this.binding = 'selectFormular';
        this.name = ''; // 公式名称
        // 公式名称
        this.isGroup = false; // 是否分组
        // 是否分组
        this.resultDatas = [];
        this.resultColumns = [];
        this.formularWizard = '0';
        this.formularType = 0; // 0普通公式 1组合公式
        // 0普通公式 1组合公式
        this.loading = this.loadService.show({ container: 'body' });
        /**
         * 国际化
         */
        this.labelSaveFormular = '保存公式';
        this.resultSortColumns = [
            {
                id: '0',
                label: '无'
            },
            {
                id: '1',
                label: '升序'
            },
            {
                id: '2',
                label: '降序'
            }
        ];
        this.resultColVisibleColumns = [
            {
                id: '0',
                label: '否'
            },
            {
                id: '1',
                label: '是'
            }
        ];
        /**
         * 帮助配置字段
         */
        this.helpData = [];
        this.helpColumns = [];
        this.handlebeforeClose = (/**
         * @return {?}
         */
        function () {
            return of(true);
        });
        this.clickLastStep = (/**
         * @return {?}
         */
        function () {
            _this.cacheService.set('formularParam', _this.data);
            return true;
        });
        this.beforeFinish = (/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var flag$ = new Subject();
            if (_this.formularType === 1) { // 组合公式保存
                if (!_this.name) {
                    _this.msgService.info(_this.localizeService.getValue('formular.define.messageAlert.nameVerify'));
                }
                if (!_this.formularText) {
                    _this.msgService.info(_this.localizeService.getValue('formular.define.messageAlert.combineVerify'));
                }
                else if (_this.formularText && !_this.formularCheck(_this.formularText)) {
                    _this.msgService.info(_this.localizeService.getValue('formular.define.messageAlert.formularIntegrityVerify'));
                }
                /** @type {?} */
                var formularInfo = {
                    id: _this.currentFormularId,
                    isgroup: _this.isGroup ? 1 : 0,
                    name: _this.name,
                    queryfunc: '',
                    str1: '',
                    str2: '',
                    str3: '',
                    str4: '',
                    cursu: _this.data.currentSU,
                    str5: _this.data.formularRegion ? _this.data.formularRegion : 'publish',
                    str6: _this.formularText,
                    num1: 1,
                };
                /** @type {?} */
                var options = {
                    headers: {
                        'SessionId': _this.data.sessionId,
                        'Content-Type': 'application/json'
                    }
                };
                if (formularInfo) {
                    /** @type {?} */
                    var retrieveUri = _this.data.serverHost + '/api/gsp/bcc/v1.0/querygetdatadetail_frm/service/saveqdpformular';
                    _this.restfulService.put(retrieveUri, { formularInfo: JSON.stringify(formularInfo) }, {}, options).subscribe((/**
                     * @param {?} data
                     * @return {?}
                     */
                    function (data) {
                        /** @type {?} */
                        var formularData = data.returnValue;
                        if (formularData) {
                            _this.currentFormularId = formularData;
                            _this.entityDataService.setFormularState(true, { id: _this.currentFormularId, name: _this.name });
                            //this.cacheService.set('formularResult', { id: this.currentFormularId, name: '公式' });
                            flag$.next(true);
                        }
                        else {
                            _this.entityDataService.setFormularState(false, {});
                            _this.msgService.error(_this.localizeService.getValue('formular.define.messageAlert.saveFormularFailure'));
                        }
                    }));
                }
            }
            else if (!_this.currentFormularId) {
                _this.entityDataService.setFormularState(false, {});
                _this.msgService.info(_this.localizeService.getValue('formular.define.messageAlert.formularSaveVerify'));
                return false;
            }
            else {
                _this.entityDataService.setFormularState(true, { id: _this.currentFormularId, name: _this.name });
                //this.cacheService.set('formularResult', { id: this.currentFormularId, name: this.name ? this.name : '公式' });
                return true;
            }
            return flag$;
        });
        this.labelSaveFormular = this.localizeService.getValue('formular.define.labelSaveFormular');
        this.labelGeneraterFormular = this.localizeService.getValue('formular.define.labelGeneraterFormular');
        this.labelQueryFunc = this.localizeService.getValue('formular.define.labelQueryFunc');
        this.labelBasicInfo = this.localizeService.getValue('formular.define.labelBasicInfo');
        this.labelFormularName = this.localizeService.getValue('formular.define.labelFormularName');
        this.labelIsGroup = this.localizeService.getValue('formular.define.labelIsGroup');
        this.labelParamInfo = this.localizeService.getValue('formular.define.labelParamInfo');
        this.labelResultColInfo = this.localizeService.getValue('formular.define.labelResultColInfo');
        this.resultSortColumns = this.localizeService.getValue('formular.define.resultSortColumns');
        this.resultColVisibleColumns = this.localizeService.getValue('formular.define.resultColVisibleColumns');
    }
    /**
     * @return {?}
     */
    FormularDefineComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.data = this.cacheService.get('formularParam');
        this.formularWizard = this.data.formularWizard;
        this.formularType = this.data.formularWizard === '2' ? 1 : 0;
        this.currentFormularId = this.data.currentFormularId;
        this.columns = [
            // { field: 'id', width: 100, title: 'ID' },
            { field: 'resultcolvisible', width: 60, title: this.localizeService.getValue('formular.define.columntitles.resultcolvisible'), template: this.resultColVisibleColumnTemp },
            { field: 'resultcode', width: 60, title: this.localizeService.getValue('formular.define.columntitles.resultcode') },
            { field: 'resultdescription', width: 60, title: this.getResultDescription() },
            { field: 'resultsort', width: 60, title: this.localizeService.getValue('formular.define.columntitles.resultsort'), template: this.resultSortColumnTemp }
        ];
        if (this.data.sessionId) {
            this.getFuncInfo();
        }
        else {
            this.createHeaderSessionId().subscribe((/**
             * @param {?} sessionId
             * @return {?}
             */
            function (sessionId) {
                console.log(sessionId);
                if (sessionId) {
                    _this.getFuncInfo();
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    FormularDefineComponent.prototype.guid = /**
     * @return {?}
     */
    function () {
        return ((/** @type {?} */ ([1e7])) + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (/**
         * @param {?} c
         * @return {?}
         */
        function (c) {
            return (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);
        }));
    };
    /**
     * @return {?}
     */
    FormularDefineComponent.prototype.getResultDescription = /**
     * @return {?}
     */
    function () {
        return this.getLanguage() === 'zh-chs' ? '列描述' : 'description';
    };
    /**
     * @return {?}
     */
    FormularDefineComponent.prototype.getLanguage = /**
     * @return {?}
     */
    function () {
        switch (this.localizeService.localeId) {
            case 'zh-chs':
            case 'zh-cn':
            case 'zh':
                return 'zh-chs';
            case 'en-us':
            case 'en':
                return 'en-us';
        }
        return 'zh-chs';
    };
    /**
     * @return {?}
     */
    FormularDefineComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.loading.close();
    };
    /**
     * @private
     * @return {?}
     */
    FormularDefineComponent.prototype.createHeaderSessionId = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var sessionId = new Subject();
        /** @type {?} */
        var options = {
            headers: {
                'Content-Type': 'application/json'
            },
            responseType: 'text'
        };
        /** @type {?} */
        var createSessionUrl = this.data.serverHost + '/api/gsp/bcc/v1.0/queryfuncdetail_frm/service/createsession';
        this.restfulService.post(createSessionUrl, {}, {}, options).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.data.sessionId = data;
            sessionId.next(data);
        }));
        return sessionId;
    };
    /**
     * @private
     * @return {?}
     */
    FormularDefineComponent.prototype.getFuncInfo = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var uri = this.data.serverHost;
        /** @type {?} */
        var options = {
            headers: {
                'SessionId': this.data.sessionId,
                'Content-Type': 'application/json'
            }
        };
        /** @type {?} */
        var entityFilter = {
            FilterConditions: [{ 'FilterField': 'SrcSU', 'Value': this.data.currentSU, 'Lbracket': null, 'Rbracket': null, 'Relation': 0, 'Expresstype': 0, 'Compare': 6 }],
            SortConditions: [],
            IsUsePagination: false,
            Pagination: {
                PageIndex: 0,
                PageSize: 0,
                PageCount: 0,
                TotalCount: 0
            }
        };
        uri += '/api/gsp/bcc/v1.0/queryfuncdetail_frm/extension/query?entityFilter=' + JSON.stringify(entityFilter);
        this.restfulService.put(uri, {}, {}, options).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            /** @type {?} */
            var funcDatas = data.returnValue.result;
            if (funcDatas && funcDatas.length > 0) {
                funcDatas.forEach((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) {
                    _this.funcData.push({ name: x.name, value: x.id });
                }));
            }
            _this.currentFuncDatas = funcDatas;
            // 如果选择的是选择公式，根据公示信息初始默认的数据
            if (_this.currentFormularId && _this.data.formularData && _this.data.formularData.num1 === 1) {
                _this.name = _this.data.formularData.name;
                _this.formularText = _this.data.formularData.str6;
                _this.formularType = 1;
            }
            else {
                _this.getFormularInfo();
            }
        }));
    };
    /**
     * @private
     * @return {?}
     */
    FormularDefineComponent.prototype.getFormularInfo = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        // 清空历史数据
        this.dynamicInput = [];
        this.resultColumns = [];
        this.resultDatas = [];
        this.formularText = '';
        this.name = '';
        this.isGroup = 0;
        if (this.currentFormularId) {
            /** @type {?} */
            var options = {
                headers: {
                    'SessionId': this.data.sessionId,
                    'Content-Type': 'application/json'
                }
            };
            /** @type {?} */
            var retrieveUri = this.data.serverHost + '/api/gsp/bcc/v1.0/querygetdatadetail_frm/extension/retrieve/' + this.currentFormularId;
            this.restfulService.put(retrieveUri, {}, {}, options).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                /** @type {?} */
                var formularData = data.returnValue;
                if (formularData) {
                    // 初始基础数据
                    _this.name = formularData.name;
                    _this.data.currentFormularName = formularData.name;
                    _this.isGroup = formularData.isGroup;
                    /** @type {?} */
                    var queryFuncId_1 = formularData.queryFunc;
                    _this.type = formularData.str1;
                    _this.metadataobjectid = formularData.str2;
                    _this.funcSelectValue = _this.funcData.find((/**
                     * @param {?} x
                     * @return {?}
                     */
                    function (x) { return x.value === queryFuncId_1; }));
                    _this.entityDataService.setFormularState(true, { id: _this.currentFormularId, name: _this.name });
                    if (queryFuncId_1) {
                        _this.getDropDownInfo(queryFuncId_1, _this.type, _this.metadataobjectid, true, formularData.queryGetDataParamInfos);
                    }
                    // const currentQueryGetDataParams = formularData.queryGetDataParamInfos;
                    /** @type {?} */
                    var queryFuncResults = formularData.queryGetDataResultInfos;
                    // if (currentQueryGetDataParams && currentQueryGetDataParams.length > 0) {
                    //   currentQueryGetDataParams.forEach(queryGetDataParam => {
                    //     const fieldConfig = JSON.parse(queryGetDataParam.fieldConfig);
                    //     if (fieldConfig.controltype === 'dropdown') {
                    //       fieldConfig.enumValues = JSON.parse(fieldConfig.enumValues);
                    //     }
                    //     this.dynamicInput.push({ paramcode: queryGetDataParam.paramCode, paramname: queryGetDataParam.paramName, paramvalue: queryGetDataParam.paramValue, fieldConfig: JSON.parse(queryGetDataParam.fieldConfig) });
                    //   });
                    // }
                    if (queryFuncResults && queryFuncResults.length > 0) {
                        /** @type {?} */
                        var resultColumns_1 = [];
                        /** @type {?} */
                        var data_1 = [];
                        queryFuncResults.forEach((/**
                         * @param {?} queryFuncResult
                         * @return {?}
                         */
                        function (queryFuncResult) {
                            resultColumns_1.push({ id: queryFuncResult.resultCode, label: queryFuncResult.resultName });
                            data_1.push({
                                id: queryFuncResult.id,
                                resultcode: queryFuncResult.resultCode,
                                resultsort: queryFuncResult.resultSort,
                                resultname: queryFuncResult.resultName,
                                resultcolvisible: queryFuncResult.resultColVisible === true ? '1' : '0',
                                resultdescription: ''
                            });
                        }));
                        _this.resultColumns = tslib_1.__spread(resultColumns_1);
                        _this.resultDatas = tslib_1.__spread(data_1);
                    }
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    FormularDefineComponent.prototype.generateFormular = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.name) {
            this.msgService.info(this.localizeService.getValue('formular.define.messageAlert.nameVerify'));
            return;
        }
        if (!this.funcSelectValue) {
            this.msgService.info(this.localizeService.getValue('formular.define.messageAlert.funcVerify'));
            return;
        }
        /** @type {?} */
        var formularInfo = {
            id: this.currentFormularId,
            cursu: this.data.currentSU,
            isgroup: this.isGroup ? 1 : 0,
            name: this.name,
            queryfunc: this.funcSelectValue.value,
            str1: this.type,
            str2: this.metadataobjectid,
            str3: this.qomanagercode ? this.qomanagercode : '',
            str4: this.funcSelectValue.name,
            str5: '',
            str6: '',
            formularParamInfos: this.dynamicInput,
            formularResultInfos: this.resultDatas
        };
        /** @type {?} */
        var options = {
            headers: {
                'SessionId': this.data.sessionId,
                'Content-Type': 'application/json'
            }
        };
        if (formularInfo) {
            /** @type {?} */
            var retrieveUri = this.data.serverHost + '/api/gsp/bcc/v1.0/querygetdatadetail_frm/service/saveqdpformular';
            this.restfulService.put(retrieveUri, { formularInfo: JSON.stringify(formularInfo) }, {}, options).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                /** @type {?} */
                var formularData = data.returnValue;
                if (formularData) {
                    _this.currentFormularId = formularData;
                    _this.entityDataService.setFormularState(true, { id: _this.currentFormularId, name: _this.name });
                    // this.entityDataService.isFinish = true;
                    _this.msgService.info(_this.localizeService.getValue('formular.define.messageAlert.saveFormular'));
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    FormularDefineComponent.prototype.generateFormularInfo = /**
     * @return {?}
     */
    function () {
        if (!this.currentFunctionId) {
            this.msgService.info(this.localizeService.getValue('formular.define.messageAlert.pleaseSelectQueryFunc'));
            return;
        }
        if (this.resultDatas && this.resultDatas.filter((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.resultcolvisible === '1'; })).length !== 1) {
            this.msgService.info(this.localizeService.getValue('formular.define.messageAlert.resultVerify'));
            return;
        }
        /** @type {?} */
        var paramInfo = [];
        this.dynamicInput.forEach((/**
         * @param {?} x
         * @return {?}
         */
        function (x) {
            paramInfo.push({ key: x.paramcode, value: x.paramvalue ? x.paramvalue : '' });
        }));
        /** @type {?} */
        var formularcompile = {
            funcId: this.currentFunctionId,
            paramInfos: paramInfo,
            resultColName: this.resultDatas[0].resultcode,
            qomanagercode: this.qomanagercode,
            isgroup: this.isGroup ? 1 : 0
        };
        this.formularText = this.formularText + 'QDPFormular.execute(' + JSON.stringify(formularcompile) + ') ';
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FormularDefineComponent.prototype.operator = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.formularText = this.formularText + $event;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FormularDefineComponent.prototype.onResized = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.size.height = event.newHeight;
        this.size.width = event.newWidth;
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    FormularDefineComponent.prototype.selectionChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var _this = this;
        // 清空历史数据
        this.dynamicInput = [];
        this.resultColumns = [];
        this.resultDatas = [];
        this.name = this.formularType === 1 ? this.name : '';
        this.isGroup = 0;
        if ($event && $event.value) {
            this.currentFunctionId = $event.value;
            /** @type {?} */
            var funcData = this.currentFuncDatas.find((/**
             * @param {?} x
             * @return {?}
             */
            function (x) { return x.id === _this.currentFunctionId; }));
            this.name = this.name === '' ? funcData.name : this.name;
            // 保存公式类型及元数据id
            this.type = funcData.srcType;
            this.metadataobjectid = funcData.metadataObject;
            if (this.currentFunctionId) {
                this.getDropDownInfo(this.currentFunctionId, this.type, this.metadataobjectid, true, '');
            }
        }
    };
    // 初始下拉信息
    // 初始下拉信息
    /**
     * @param {?} funcid
     * @param {?} type
     * @param {?} metadataobjectid
     * @param {?} generateData
     * @param {?} queryFormularParam
     * @return {?}
     */
    FormularDefineComponent.prototype.getDropDownInfo = 
    // 初始下拉信息
    /**
     * @param {?} funcid
     * @param {?} type
     * @param {?} metadataobjectid
     * @param {?} generateData
     * @param {?} queryFormularParam
     * @return {?}
     */
    function (funcid, type, metadataobjectid, generateData, queryFormularParam) {
        /** @type {?} */
        var self = this;
        // 访问数据服务
        /** @type {?} */
        var options = {
            headers: {
                'SessionId': self.data.sessionId,
                'Content-Type': 'application/json'
            }
        };
        /** @type {?} */
        var url = self.data.serverHost + '/api/gsp/bcc/v1.0/queryfuncdetail_frm/extension/retrieve/' + funcid;
        self.restfulService.put(url, {}, {}, options).toPromise().then((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var e_1, _a;
            if (value) {
                value = value.returnValue;
                // 查询参数
                if (generateData) {
                    /** @type {?} */
                    var queryFuncParams = value.queryFuncParams;
                    if (queryFuncParams.length > 0) {
                        // if (currentQueryGetDataParams && currentQueryGetDataParams.length > 0) {
                        //   currentQueryGetDataParams.forEach(queryGetDataParam => {
                        //     const fieldConfig = JSON.parse(queryGetDataParam.fieldConfig);
                        //     if (fieldConfig.controltype === 'dropdown') {
                        //       fieldConfig.enumValues = JSON.parse(fieldConfig.enumValues);
                        //     }
                        //     this.dynamicInput.push({ paramcode: queryGetDataParam.paramCode, paramname: queryGetDataParam.paramName, paramvalue: queryGetDataParam.paramValue, fieldConfig: JSON.parse(queryGetDataParam.fieldConfig) });
                        //   });
                        // }
                        queryFuncParams = queryFuncParams.sort(self.sortData);
                        queryFuncParams.forEach((/**
                         * @param {?} funcParam
                         * @return {?}
                         */
                        function (funcParam) {
                            if (funcParam) {
                                /** @type {?} */
                                var fieldConfig = JSON.parse(funcParam.fieldConfig);
                                if (fieldConfig.controltype === 'dropdown') {
                                    fieldConfig.enumValues = fieldConfig.enumValues;
                                }
                                /** @type {?} */
                                var findParamInfo = void 0;
                                if (queryFormularParam && queryFormularParam.length > 0) {
                                    findParamInfo = queryFormularParam.find((/**
                                     * @param {?} x
                                     * @return {?}
                                     */
                                    function (x) { return x.paramCode === funcParam.code; }));
                                }
                                /** @type {?} */
                                var paramvalue = (findParamInfo && findParamInfo.paramValue) ? findParamInfo.paramValue : '';
                                fieldConfig.paramvaluename = '';
                                if (fieldConfig.controltype === 'help' && findParamInfo) {
                                    /** @type {?} */
                                    var paramvaluearray = paramvalue.split('|');
                                    paramvalue = paramvaluearray[0];
                                    fieldConfig.paramvaluename = paramvaluearray[1];
                                }
                                self.dynamicInput.push({ id: findParamInfo ? findParamInfo.id : '', paramcode: funcParam.code, paramname: funcParam.name, paramvalue: paramvalue, fieldConfig: fieldConfig });
                            }
                        }));
                    }
                }
                if (generateData) { // 新建或者组合公式调用此逻辑
                    self.resultColumns = [];
                    if (type === 'BE') {
                        /** @type {?} */
                        var queryFuncResults = value.queryFuncResults;
                        if (queryFuncResults.length > 0) {
                            /** @type {?} */
                            var funcResultDatas_2 = [];
                            queryFuncResults.forEach((/**
                             * @param {?} funcResult
                             * @return {?}
                             */
                            function (funcResult) {
                                if (funcResult) {
                                    // self.resultColumns.push({ id: funcResult.srcCol, label: funcResult.colName });
                                    funcResultDatas_2.push({ id: self.guid(), resultcode: funcResult.srcCol, resultsort: '0', resultname: funcResult.colName,
                                        resultcolvisible: '1', resultdescription: funcResult.description });
                                }
                            }));
                            if (funcResultDatas_2.length > 0) {
                                if (self.resultDatas && self.resultDatas.length > 0) {
                                    /** @type {?} */
                                    var newResultDatas = [];
                                    var _loop_1 = function (funcResultData) {
                                        /** @type {?} */
                                        var resultData = self.resultDatas.find((/**
                                         * @param {?} x
                                         * @return {?}
                                         */
                                        function (x) { return x.resultcode === funcResultData.resultcode; }));
                                        if (resultData) {
                                            newResultDatas.push(tslib_1.__assign({}, resultData, { resultdescription: funcResultData.resultdescription }));
                                        }
                                        else {
                                            newResultDatas.push(funcResultData);
                                        }
                                    };
                                    try {
                                        for (var funcResultDatas_1 = tslib_1.__values(funcResultDatas_2), funcResultDatas_1_1 = funcResultDatas_1.next(); !funcResultDatas_1_1.done; funcResultDatas_1_1 = funcResultDatas_1.next()) {
                                            var funcResultData = funcResultDatas_1_1.value;
                                            _loop_1(funcResultData);
                                        }
                                    }
                                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                                    finally {
                                        try {
                                            if (funcResultDatas_1_1 && !funcResultDatas_1_1.done && (_a = funcResultDatas_1.return)) _a.call(funcResultDatas_1);
                                        }
                                        finally { if (e_1) throw e_1.error; }
                                    }
                                    /** @type {?} */
                                    var resultColumns1_1 = [];
                                    newResultDatas.forEach((/**
                                     * @param {?} m
                                     * @return {?}
                                     */
                                    function (m) {
                                        resultColumns1_1.push({ id: m.resultcode, label: m.resultname });
                                    }));
                                    self.resultColumns = tslib_1.__spread(resultColumns1_1);
                                    self.resultDatas = tslib_1.__spread(newResultDatas);
                                }
                                else {
                                    /** @type {?} */
                                    var resultColumns1_2 = [];
                                    funcResultDatas_2.forEach((/**
                                     * @param {?} m
                                     * @return {?}
                                     */
                                    function (m) {
                                        resultColumns1_2.push({ id: m.resultcode, label: m.resultname });
                                    }));
                                    self.resultColumns = tslib_1.__spread(resultColumns1_2);
                                    self.resultDatas = tslib_1.__spread(funcResultDatas_2);
                                }
                                // self.resultDatas = [...funcResultDatas];
                            }
                        }
                    }
                    else {
                        /** @type {?} */
                        var options_1 = {
                            headers: {
                                'SessionId': self.data.sessionId,
                                'Content-Type': 'application/json'
                            }
                        };
                        // 根据id获取元数据信息
                        self.restfulService.get(self.data.serverHost + '/api/runtime/sys/v1.0/rt-metadatas/' + metadataobjectid, {}, options_1).subscribe((/**
                         * @param {?} metadataContent
                         * @return {?}
                         */
                        function (metadataContent) {
                            if (metadataContent) {
                                /** @type {?} */
                                var currentMetadataContent = JSON.parse(metadataContent['content']);
                                /** @type {?} */
                                var mainObject = currentMetadataContent.QueryNode;
                                if (!mainObject) {
                                    mainObject = currentMetadataContent.DataSources['0'].QueryNode;
                                }
                                /** @type {?} */
                                var datas_1 = [];
                                mainObject.ContainElements.forEach((/**
                                 * @param {?} containElement
                                 * @return {?}
                                 */
                                function (containElement) {
                                    self.resultColumns.push({ id: containElement.Code, label: containElement.Name });
                                    datas_1.push({ id: self.guid(), resultcode: containElement.Code, resultsort: '0', resultname: containElement.Name, resultcolvisible: '1', resultdescription: '' });
                                }));
                                if (datas_1.length > 0) {
                                    self.resultDatas = tslib_1.__spread(datas_1);
                                }
                                self.qomanagercode = 'com.' + (currentMetadataContent.NamespacePrefix + '.' + currentMetadataContent.Code).toLowerCase(); // qo编号
                            }
                        }));
                    }
                }
            }
        }));
    };
    /**
     * @param {?} a
     * @param {?} b
     * @return {?}
     */
    FormularDefineComponent.prototype.sortData = /**
     * @param {?} a
     * @param {?} b
     * @return {?}
     */
    function (a, b) {
        return a.orderNumber - b.orderNumber;
    };
    /**
     * @param {?} string
     * @return {?}
     */
    FormularDefineComponent.prototype.formularCheck = /**
     * @param {?} string
     * @return {?}
     */
    function (string) {
        // 剔除空白符
        string = string.replace(/\s/g, '');
        // 错误情况，空字符串
        if ('' === string) {
            return false;
        }
        // 错误情况，运算符连续
        if (/[\+\-\*\/]{2,}/.test(string)) {
            return false;
        }
        // 空括号
        if (/\(\)/.test(string)) {
            return false;
        }
        // 错误情况，括号不配对
        /** @type {?} */
        var stack = [];
        for (var i = 0, item; i < string.length; i++) {
            item = string.charAt(i);
            if ('(' === item) {
                stack.push('(');
            }
            else if (')' === item) {
                if (stack.length > 0) {
                    stack.pop();
                }
                else {
                    return false;
                }
            }
        }
        if (0 !== stack.length) {
            return false;
        }
        // 错误情况，(后面是运算符 
        if (/\([\+\-\*\/]/.test(string)) {
            return false;
        }
        // 错误情况，)前面是运算符
        if (/[\+\-\*\/]\)/.test(string)) {
            return false;
        }
        // // 错误情况，(前面不是运算符
        // if (/[^\+\-\*\/]\(/.test(string)) {
        //   return false;
        // }
        // // 错误情况，)后面不是运算符
        // if (/\)[^\+\-\*\/]/.test(string)) {
        //   return false;
        // }
        return true;
    };
    FormularDefineComponent.decorators = [
        { type: Component, args: [{
                    selector: 'formular-define',
                    template: "<div class=\"farris-main-area flex-column\">\r\n  <div class=\"farris-header\">\r\n    <div class=\"farris-form form-inline farris-form-inline\">\r\n      <div class=\"f-utils-flex-row-wrap\">\r\n        <div class=\"col-2\" *ngIf=\"formularType===0\">\r\n          <farris-button (click)=\"generateFormular()\">\r\n            <span>{{labelSaveFormular}}</span>\r\n          </farris-button>\r\n        </div>\r\n        <div class=\"col-10\" *ngIf=\"formularType===1\">\r\n          <farris-button (click)=\"generateFormularInfo()\">\r\n            <span>{{labelGeneraterFormular}}</span>\r\n          </farris-button>\r\n          <farris-button class=\"mx-2\" [size]=\"'small'\" (click)=\"operator('+')\">\r\n            <span>+</span>\r\n          </farris-button>\r\n          <farris-button class=\"mx-2\" [size]=\"'small'\" (click)=\"operator('-')\">\r\n            <span>-</span>\r\n          </farris-button>\r\n          <farris-button class=\"mx-2\" [size]=\"'small'\" (click)=\"operator('*')\">\r\n            <span>*</span>\r\n          </farris-button>\r\n          <farris-button class=\"mx-2\" [size]=\"'small'\" (click)=\"operator('/')\">\r\n            <span>-</span>\r\n          </farris-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"navbar p-0\" *ngIf=\"formularType===1\">\r\n      <textarea class=\"form-control\" rows=\"10\" maxlength=\"2000\" id=\"formularText\" [(ngModel)]=\"formularText\"></textarea>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-flex flex-row flex-fill farris-overflow-hidden\">\r\n    <div class=\"col-3 p-0 m-1 farris-overflow-hidden\" (resized)=\"onResized($event)\">\r\n      <div class=\"col-12 col-md-12 col-lg-12\">\r\n        <div class=\"farris-group-wrap form-inline farris-form-inline\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\" for=\"colFunction\" style=\"width: 6rem; min-width: 6rem;\">\r\n              <span class=\"farris-label-text\">{{labelQueryFunc}}:</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <kendo-combobox id=\"colAlign\" [(ngModel)]=\"funcSelectValue\" [data]=\"funcData\" [textField]=\"'name'\"\r\n                [valueField]=\"'value'\" class=\"form-control\" (selectionChange)=\"selectionChange($event)\">\r\n              </kendo-combobox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex-fill f-utils-overflow-xhya \">\r\n      <farris-panel [foldable]=\"true\" [defaultExpand]=\"true\">\r\n        <farris-panel-item [title]=\"labelBasicInfo\">\r\n          <ng-template #contentTempl>\r\n            <div class=\"farris-form form-inline farris-form-inline\">\r\n              <div class=\"f-utils-flex-row-wrap\">\r\n                <div class=\"col-6\">\r\n                  <div class=\"farris-group-wrap\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <label class=\"col-form-label\">\r\n                        <span class=\"farris-label-info text-danger\">*</span>\r\n                        <span class=\"farris-label-text\">{{labelFormularName}}</span>\r\n                      </label>\r\n                      <div class=\"farris-input-wrap\">\r\n                        <input class=\"form-control\" type=\"text\" id=\"name\" [(ngModel)]=\"name\" maxlength=\"36\">\r\n                        <div class=\"farris-feedback valid-feedback\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                  <div class=\"farris-group-wrap\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <label class=\"col-form-label\" for=\"class-input-checkbox01\">\r\n                        <span class=\"farris-label-text\">{{labelIsGroup}}</span>\r\n                      </label>\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                          <input class=\"custom-control-input\" id=\"isGroup\" [(ngModel)]=\"isGroup\" type=\"checkbox\">\r\n                          <label class=\"custom-control-label\" for=\"isGroup\"></label>\r\n                        </div>\r\n                        <div class=\"farris-feedback valid-feedback\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </farris-panel-item>\r\n        <farris-panel-item [title]=\"labelParamInfo\">\r\n          <ng-template #contentTempl>\r\n            <div class=\"farris-form form-inline farris-form-inline\">\r\n              <div class=\"f-utils-flex-row-wrap\">\r\n                <div class=\"col-6\" *ngFor=\"let i of dynamicInput\">\r\n                  <div class=\"farris-group-wrap\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <label class=\"col-form-label\">\r\n                        <span class=\"farris-label-text\">{{i.paramname}}:</span>\r\n                      </label>\r\n                      <div class=\"farris-input-wrap\">\r\n                        <div *ngIf=\"i.fieldConfig.controltype === 'text'\">\r\n                          <input class=\"form-control\" type=\"text\" id=\"name\" [(ngModel)]=\"i.paramvalue\" maxlength=\"36\">\r\n                          <div class=\"farris-feedback valid-feedback\"></div>\r\n                        </div>\r\n                        <div *ngIf=\"i.fieldConfig.controltype === 'help'\">\r\n                          <farris-lookup-grid input-end-edit data-mapping [useTip]=\" false\" [nosearch]=\"false\" [ngModel]=\"i.fieldConfig.paramvaluename\"\r\n                            [editable]=\"false\" [displayType]=\"'List'\" [items]=\"helpData\"\r\n                            [idField]=\"i.fieldConfig.idField\"  [singleSelect]=\"true\"\r\n                            [pageSize]=\"20\" [pageIndex]=\"1\" [pagination]=\"true\" [textField]=\"i.fieldConfig.textField\"\r\n                            [valueField]=\"i.fieldConfig.valueField\" [title]=\"'\u901A\u7528\u5E2E\u52A9'\" [showCloseButton]=\"true\"\r\n                            [resizable]=\"true\" [context]='i.fieldConfig' [enableToSelect]=\"true\"\r\n                            [columns]=\"i.fieldConfig.showColumns\" [libHelpBeforeEvent]=\"i\"\r\n                            [localHost]=\"data.serverHost\" [dynamicInput] = \"dynamicInput\"></farris-lookup-grid>\r\n                          <div class=\"farris-feedback\"></div>\r\n                        </div>\r\n                        <div *ngIf=\"i.fieldConfig.controltype === 'dropdown'\">\r\n                          <farris-combo-list [(ngModel)]=\"i.paramvalue\" [idField]=\"'value'\" [textField]=\"'name'\"\r\n                            [editable]=\"false\" [data]=\"i.fieldConfig.enumValues\"\r\n                            [multiSelect]=\"i.fieldConfig.multiSelect\"></farris-combo-list>\r\n                          <div class=\"farris-feedback\"></div>\r\n                        </div>\r\n                        <div *ngIf=\"i.fieldConfig.controltype === 'single-date'\">\r\n                          <farris-datepicker [(ngModel)]=\"i.paramvalue\" [returnFormat]=\"'yyyy-MM-dd'\"\r\n                            [dateFormat]=\"i.fieldConfig.format\">\r\n                          </farris-datepicker>\r\n                          <div class=\"farris-feedback\"></div>\r\n                        </div>\r\n                        <div *ngIf=\"i.fieldConfig.controltype === 'single-number'\">\r\n                          <farris-number-spinner [(ngModel)]=\"i.paramvalue\"></farris-number-spinner>\r\n                          <div class=\"farris-feedback\"></div>\r\n                        </div>\r\n                        <div *ngIf=\"i.fieldConfig.controltype === 'single-year'\">\r\n                          <farris-datepicker [(ngModel)]=\"i.paramvalue\"  [returnFormat]=\"'yyyy'\"\r\n                            [dateFormat]=\"'yyyy'\" [showType]=\"3\"></farris-datepicker>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </farris-panel-item>\r\n        <farris-panel-item [title]=\"labelResultColInfo\">\r\n          <ng-template #contentTempl>\r\n            <!-- <div class=\"row\" style=\"margin: 0; padding: 15px; background-color: #fff\">\r\n            <button class=\"btn btn-primary\" (click)=\"newAdd()\">\u65B0\u589E</button>\r\n            <button class=\"btn btn-default ml-1 mr-1\" (click)=\"removeRow()\">\u5220\u9664</button>\r\n          </div> -->\r\n            <farris-datagrid [data]=\"resultDatas\" [columns]=\"columns\" #dg=\"datagrid\" [fit]=\"true\" [showCheckbox]=\"false\"\r\n              [fitColumns]=\"true\" [showLineNumber]=\"false\" [striped]=\"true\" [virtualized]=\"false\" [height]=\"250\"\r\n              [pagination]=\"false\">\r\n            </farris-datagrid>\r\n          </ng-template>\r\n        </farris-panel-item>\r\n      </farris-panel>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #resultColumnTemp let-ctx>\r\n  <div class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n    <farris-combo-list [(ngModel)]=\"ctx.rowData['resultcode']\" [idField]=\"'id'\" [textField]=\"'label'\" [readonly]=\"true\"\r\n      [disabled]=\"true\" [data]=\"resultColumns\"></farris-combo-list>\r\n  </div>\r\n</ng-template>\r\n<ng-template #resultSortColumnTemp let-ctx>\r\n  <div class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n    <farris-combo-list [(ngModel)]=\"ctx.rowData['resultsort']\" [idField]=\"'id'\" [textField]=\"'label'\"\r\n      [data]=\"resultSortColumns\"></farris-combo-list>\r\n  </div>\r\n</ng-template>\r\n<ng-template #resultColVisibleColumnTemp let-ctx>\r\n  <div class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n    <farris-combo-list [(ngModel)]=\"ctx.rowData['resultcolvisible']\" [idField]=\"'id'\" [textField]=\"'label'\"\r\n      [data]=\"resultColVisibleColumns\"></farris-combo-list>\r\n  </div>\r\n</ng-template>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    FormularDefineComponent.ctorParameters = function () { return [
        { type: RestfulService },
        { type: MessagerService },
        { type: CacheService },
        { type: LoadingService },
        { type: EntityDataService },
        { type: LocalizeService }
    ]; };
    FormularDefineComponent.propDecorators = {
        resultColumnTemp: [{ type: ViewChild, args: ['resultColumnTemp',] }],
        resultSortColumnTemp: [{ type: ViewChild, args: ['resultSortColumnTemp',] }],
        resultColVisibleColumnTemp: [{ type: ViewChild, args: ['resultColVisibleColumnTemp',] }],
        dg: [{ type: ViewChild, args: ['dg',] }]
    };
    return FormularDefineComponent;
}());
export { FormularDefineComponent };
if (false) {
    /** @type {?} */
    FormularDefineComponent.prototype.resultColumnTemp;
    /** @type {?} */
    FormularDefineComponent.prototype.resultSortColumnTemp;
    /** @type {?} */
    FormularDefineComponent.prototype.resultColVisibleColumnTemp;
    /** @type {?} */
    FormularDefineComponent.prototype.data;
    /** @type {?} */
    FormularDefineComponent.prototype.funcData;
    /** @type {?} */
    FormularDefineComponent.prototype.currentFormularId;
    /** @type {?} */
    FormularDefineComponent.prototype.currentFunctionId;
    /** @type {?} */
    FormularDefineComponent.prototype.serverHost;
    /** @type {?} */
    FormularDefineComponent.prototype.size;
    /** @type {?} */
    FormularDefineComponent.prototype.currentFuncDatas;
    /** @type {?} */
    FormularDefineComponent.prototype.funcSelectValue;
    /** @type {?} */
    FormularDefineComponent.prototype.inputTemplate;
    /** @type {?} */
    FormularDefineComponent.prototype.sessionId;
    /** @type {?} */
    FormularDefineComponent.prototype.dynamicInput;
    /** @type {?} */
    FormularDefineComponent.prototype.columns;
    /** @type {?} */
    FormularDefineComponent.prototype.formularText;
    /** @type {?} */
    FormularDefineComponent.prototype.binding;
    /** @type {?} */
    FormularDefineComponent.prototype.name;
    /** @type {?} */
    FormularDefineComponent.prototype.isGroup;
    /** @type {?} */
    FormularDefineComponent.prototype.resultDatas;
    /** @type {?} */
    FormularDefineComponent.prototype.dg;
    /** @type {?} */
    FormularDefineComponent.prototype.resultColumns;
    /** @type {?} */
    FormularDefineComponent.prototype.type;
    /** @type {?} */
    FormularDefineComponent.prototype.metadataobjectid;
    /** @type {?} */
    FormularDefineComponent.prototype.qomanagercode;
    /** @type {?} */
    FormularDefineComponent.prototype.formularWizard;
    /** @type {?} */
    FormularDefineComponent.prototype.formularType;
    /** @type {?} */
    FormularDefineComponent.prototype.loading;
    /**
     * 国际化
     * @type {?}
     */
    FormularDefineComponent.prototype.labelSaveFormular;
    /** @type {?} */
    FormularDefineComponent.prototype.labelGeneraterFormular;
    /** @type {?} */
    FormularDefineComponent.prototype.labelQueryFunc;
    /** @type {?} */
    FormularDefineComponent.prototype.labelBasicInfo;
    /** @type {?} */
    FormularDefineComponent.prototype.labelFormularName;
    /** @type {?} */
    FormularDefineComponent.prototype.labelIsGroup;
    /** @type {?} */
    FormularDefineComponent.prototype.labelParamInfo;
    /** @type {?} */
    FormularDefineComponent.prototype.labelResultColInfo;
    /** @type {?} */
    FormularDefineComponent.prototype.resultSortColumns;
    /** @type {?} */
    FormularDefineComponent.prototype.resultColVisibleColumns;
    /**
     * 帮助配置字段
     * @type {?}
     */
    FormularDefineComponent.prototype.helpData;
    /** @type {?} */
    FormularDefineComponent.prototype.helpColumns;
    /** @type {?} */
    FormularDefineComponent.prototype.handlebeforeClose;
    /** @type {?} */
    FormularDefineComponent.prototype.clickLastStep;
    /** @type {?} */
    FormularDefineComponent.prototype.beforeFinish;
    /**
     * @type {?}
     * @private
     */
    FormularDefineComponent.prototype.restfulService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineComponent.prototype.msgService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineComponent.prototype.cacheService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineComponent.prototype.loadService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineComponent.prototype.entityDataService;
    /**
     * @type {?}
     * @private
     */
    FormularDefineComponent.prototype.localizeService;
}
//# sourceMappingURL=data:application/json;base64,