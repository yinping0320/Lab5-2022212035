{"version":3,"file":"KeyHandler.js","sourceRoot":"","sources":["../../../../src/lib/ui/KeyHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { mxKeyHandler, mxEvent, mxClient, MxGraphNS } from \"@edp-pmf/mxgraph-ts\";\r\nimport { Graph } from \"./Graph\";\r\n\r\n/**\r\n * 按键处理器\r\n */\r\nexport class KeyHandler extends mxKeyHandler {\r\n    altKeys: any = {};\r\n    ctrlAltKeys: any = {};\r\n    shiftAltKeys: any = {};\r\n    ctrlShiftAltKeys: any = {};\r\n\r\n    constructor(graph: Graph) {\r\n        super(graph);\r\n    }\r\n\r\n    /**\r\n     * 判断Ctrl或Cmd是否按下\r\n     * @param evt \r\n     * @returns \r\n     */\r\n    isControlDown(evt: KeyboardEvent): boolean {\r\n        return mxEvent.isControlDown(evt) || (mxClient.IS_MAC && evt.metaKey);\r\n    }\r\n\r\n    /**\r\n     * 获取事件处理器\r\n     * @param evt \r\n     * @returns \r\n     */\r\n    getFunction(evt: KeyboardEvent) {\r\n        if (evt != null && mxEvent.isAltDown(evt)) {\r\n            if (this.isControlDown(evt)) {\r\n                if (mxEvent.isShiftDown(evt)) {\r\n                    return this.ctrlShiftAltKeys[evt.keyCode];\r\n                }\r\n                else {\r\n                    return this.ctrlAltKeys[evt.keyCode];\r\n                }\r\n            }\r\n            else {\r\n                if (mxEvent.isShiftDown(evt)) {\r\n                    return this.shiftAltKeys[evt.keyCode];\r\n                }\r\n                else {\r\n                    return this.altKeys[evt.keyCode];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return super.getFunction(evt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绑定动作\r\n     * @param funct \r\n     * @param keyCode \r\n     * @param control \r\n     * @param shift \r\n     * @param alt \r\n     */\r\n    bindAction(funct: (evt: any) => void, keyCode: number, control: boolean = false, shift: boolean = false, alt: boolean = false) {\r\n        if (control) {\r\n            if (shift) {\r\n                if (alt) {\r\n                    this.bindCtrlShiftAltKey(keyCode, funct);\r\n                }\r\n                else {\r\n                    this.bindControlShiftKey(keyCode, funct);\r\n                }\r\n            }\r\n            else {\r\n                if (alt) {\r\n                    this.bindCtrlAltKey(keyCode, funct);\r\n                }\r\n                else {\r\n                    this.bindControlKey(keyCode, funct);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (shift) {\r\n                if (alt) {\r\n                    this.bindShiftAltKey(keyCode, funct);\r\n                }\r\n                else {\r\n                    this.bindShiftKey(keyCode, funct);\r\n                }\r\n            }\r\n            else {\r\n                this.bindKey(keyCode, funct);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绑定Alt+按键\r\n     * @param code \r\n     * @param funct \r\n     */\r\n    bindAltKey(code: number, funct: Function) {\r\n        this.altKeys[code] = funct;\r\n    }\r\n\r\n    /**\r\n     * 绑定Ctrl+Alt+按键\r\n     * @param code \r\n     * @param funct \r\n     */\r\n    bindCtrlAltKey(code: number, funct: Function) {\r\n        this.ctrlAltKeys[code] = funct;\r\n    }\r\n\r\n    /**\r\n     * 绑定Shift+Alt+按键\r\n     * @param code \r\n     * @param funct \r\n     */\r\n    bindShiftAltKey(code: number, funct: Function) {\r\n        this.shiftAltKeys[code] = funct;\r\n    }\r\n\r\n    /**\r\n     * 绑定Ctrl+Shift+Alt按键+\r\n     * @param code \r\n     * @param funct \r\n     */\r\n    bindCtrlShiftAltKey(code: number, funct: Function) {\r\n        this.ctrlShiftAltKeys[code] = funct;\r\n    }\r\n}"]}