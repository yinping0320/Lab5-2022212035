{"version":3,"file":"Graph.js","sourceRoot":"","sources":["../../../../src/lib/ui/Graph.ts"],"names":[],"mappings":"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","sourcesContent":["import { BPMNDiagram, BPMNEdge, BpmnModel, BPMNShape, DiagramElement, Node, Edge, ExclusiveGateway, FlowElement, Point, Process, SequenceFlow, FlowNode, BPMNPlane, Activity } from \"@edp-pmf/bpmn-model\";\r\nimport { mxCell, mxCellState, mxCodec, mxConnectionConstraint, mxConnectionHandler, mxConstants, mxConstraintHandler, mxEdgeHandler, mxEvent, mxEventObject, mxGeometry, mxGraph, mxGraphModel, MxGraphNS, mxImage, mxImageShape, mxLayoutManager, mxPoint, mxRectangle, mxShape, mxStylesheet, mxUtils } from \"@edp-pmf/mxgraph-ts\";\r\nimport { SequenceFlowEdge } from \"../model/bpmn-cell/SequenceFlowEdge\";\r\nimport { Cell } from \"../model/Cell\";\r\nimport { EdgeCell } from \"../model/EdgeCell\";\r\nimport { NodeCell } from \"../model/NodeCell\";\r\nimport { BpmnCellHelper } from \"../util/BpmnCellHelper\";\r\nimport { Constant } from \"../util/Constant\";\r\nimport { PmfEvents } from \"../util/PmfEvents\";\r\nimport { IEditorUi } from \"./IEditorUi\";\r\nimport { GraphView } from \"./GraphView\";\r\nimport { MxGraphHelper } from \"../util/MxGraphHelper\";\r\nimport { ProcessCell } from \"../model/ProcessCell\";\r\n\r\n/**\r\n * 画布\r\n */\r\nexport class Graph extends mxGraph {\r\n    /**\r\n     * 默认页面背景色\r\n     */\r\n    static defaultPageBackgroundColor = '#ffffff';\r\n    /**\r\n     * 默认页面边框色\r\n     */\r\n    static defaultPageBorderColor = '#ffffff';\r\n\r\n    editorUi: IEditorUi;\r\n    /**\r\n     * 主题\r\n     */\r\n    themes: Element;\r\n    /**\r\n     * 布局管理器\r\n     */\r\n    layoutManager: MxGraphNS.mxLayoutManager;\r\n    view: GraphView;\r\n    /**\r\n     * 背景色\r\n     */\r\n    background: string;\r\n    /**\r\n     * Bpmn模型\r\n     */\r\n    bpmnModel: BpmnModel;\r\n    /**\r\n     * 流程元素实例\r\n     */\r\n    processCell: ProcessCell;\r\n    /**\r\n     * BPMN模型是否加载完成\r\n     * todo：借用此属性来作为坐标修改事件是否真正触发的依据感觉仍然存在问题，待进一步优化\r\n     */\r\n    bpmnModelLoaded: boolean = false;\r\n    /**\r\n     * 自动平移\r\n     */\r\n    autoTranslate: boolean;\r\n    /**\r\n     * 可滚动区域大小\r\n     */\r\n    scrollTileSize = new mxRectangle(0, 0, 400, 400);\r\n    /**\r\n     * 获取页面边距\r\n     */\r\n    getPagePadding: () => MxGraphNS.mxPoint;\r\n    /**\r\n     * 获取可滚动区域大小\r\n     */\r\n    getScrollTileSize: () => MxGraphNS.mxRectangle;\r\n    /**\r\n     * 获取页面大小\r\n     */\r\n    getPageSize: () => MxGraphNS.mxRectangle;\r\n    /**\r\n     * 获取页面布局\r\n     */\r\n    getPageLayout: () => MxGraphNS.mxRectangle;\r\n\r\n    constructor(editorUi: IEditorUi, container?: HTMLDivElement, model?: MxGraphNS.mxGraphModel, renderHint?: MxGraphNS.renderingHint, stylesheet?: MxGraphNS.mxStylesheet, themes?: Element) {\r\n        super(container, model, renderHint, stylesheet);\r\n\r\n        this.editorUi = editorUi;\r\n        this.themes = themes;\r\n\r\n        if (stylesheet == null) {\r\n            this.loadStylesheet();\r\n        }\r\n\r\n        // 可连线\r\n        this.setConnectable(true);\r\n        // 不可重复连线\r\n        this.setMultigraph(false);\r\n        // 不可悬空连线\r\n        this.setAllowDanglingEdges(false);\r\n        // 不允许有环路，不生效？\r\n        this.setAllowLoops(false);\r\n        // 不可双击编辑标签\r\n        this.setCellsEditable(false);\r\n        // 不允许活动节点改变大小\r\n        this.setCellsResizable(false);\r\n        // 连线标签可移动\r\n        this.setEdgeLabelsMovable(true);\r\n        // 禁止Ctrl + 拖动进行复制操作\r\n        this.setCellsCloneable(false);\r\n\r\n        // 启用引导线\r\n        this.graphHandler.guidesEnabled = true;\r\n\r\n        // 启用网格状态变化时\r\n        this.addListener(PmfEvents.GridEnabledChanged, () => {\r\n            this.view.validateBackground();\r\n        });\r\n        // 启用网格\r\n        this.setGridEnabled(true);\r\n\r\n        // 禁用自动滚动\r\n        this.autoScroll = false;\r\n        // 启用自动扩展\r\n        this.autoExtend = true;\r\n        // 禁用页面视图\r\n        this.pageVisible = false;\r\n        // 禁用节点分割连线\r\n        this.setSplitEnabled(false);\r\n\r\n        // 设置默认样式\r\n        this.setDefaultStyles();\r\n\r\n        // 创建多连接点\r\n        this.setMultiConstraints();\r\n\r\n        // 设置默认BPMN模型与流程元素实例\r\n        this.setDefaultBpmnModel();\r\n    }\r\n\r\n    /**\r\n     * 设置默认样式\r\n     */\r\n    setDefaultStyles() {\r\n        const styleSheet = this.getStylesheet();\r\n        // 节点默认样式\r\n        const vertexStyle = styleSheet.getDefaultVertexStyle();\r\n        vertexStyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\r\n        vertexStyle[mxConstants.STYLE_VERTICAL_LABEL_POSITION] = mxConstants.ALIGN_BOTTOM;\r\n        vertexStyle[mxConstants.STYLE_FONTSIZE] = 12;\r\n\r\n        // 连线样式默认为正交\r\n        const edgeStyle = styleSheet.getDefaultEdgeStyle();\r\n        edgeStyle[mxConstants.STYLE_EDGE] = mxConstants.EDGESTYLE_ORTHOGONAL;\r\n        edgeStyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\r\n        edgeStyle[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_BLOCK;\r\n        edgeStyle[mxConstants.STYLE_ROUNDED] = 1;\r\n        edgeStyle[mxConstants.STYLE_ENDFILL] = 1;\r\n        edgeStyle[mxConstants.STYLE_ENDSIZE] = 6;\r\n    }\r\n\r\n    /**\r\n     * 加载样式\r\n     */\r\n    loadStylesheet() {\r\n        let node: Element = this.themes || mxUtils.load(Constant.STYLE_PATH + '/default.xml').getDocumentElement();\r\n        if (node != null) {\r\n            let dec = new mxCodec(node.ownerDocument);\r\n            dec.decode(node, this.getStylesheet());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选中cell变化后事件处理\r\n     * @param cells \r\n     */\r\n    bpmnCellsSelectionChanged(cells: Cell[], sender: MxGraphNS.mxEventSource, eventObject: MxGraphNS.mxEventObject) {\r\n        //该段代码仅为了解决父页面属性框值修改后，点击画布内活动节点时不会触发其失去焦点事件的问题\r\n        focus();\r\n        this.editorUi.fireEvent(new mxEventObject(PmfEvents.ShowProperty, \"cells\", cells));\r\n    }\r\n\r\n    /**\r\n     * 删除cell后同时从bpmnmodel中删除\r\n     * @param cells \r\n     */\r\n    bpmnCellsRemoved(cells: Cell[], sender: MxGraphNS.mxEventSource, eventObject: MxGraphNS.mxEventObject): void {\r\n        // 先删除边\r\n        cells && cells.forEach(cell => {\r\n            if (cell instanceof EdgeCell) {\r\n                cell.unbindBpmnModel();\r\n            }\r\n        });\r\n\r\n        // 再删除节点\r\n        cells && cells.forEach(cell => {\r\n            if (cell instanceof NodeCell) {\r\n                cell.unbindBpmnModel();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 连接两个节点后为edge绑定bpmn相关属性\r\n     * @param edge \r\n     */\r\n    bpmnCellsConnected(edge: EdgeCell, sender: MxGraphNS.mxEventSource, eventObject: MxGraphNS.mxEventObject) {\r\n        this.bindBpmnElements([edge]);\r\n        // 此时无法拿到mxCellState，故延时操作\r\n        setTimeout(() => {\r\n            this.updateEdgeState(edge);\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * 连线端点改变后同步修改Bpmn相关属性\r\n     * @param source true表示来源端点改变，false表示目标端点改变\r\n     */\r\n    bpmnEdgeTerminalChanged(edge: EdgeCell, terminal: NodeCell, source: boolean, previous: NodeCell, sender: MxGraphNS.mxEventSource, eventObject: MxGraphNS.mxEventObject, change: MxGraphNS.mxTerminalChange): void {\r\n        // 更新相关连线路径点与标签\r\n        this.updateEdgeState(edge);\r\n        // 添加连线时同样会执行此方法，需根据previous与terminal判断是否为新增连线\r\n        if (terminal == previous) {\r\n            return;\r\n        }\r\n        // 端点改变时执行下列代码\r\n        if (edge instanceof EdgeCell && edge.flowElement != null) {\r\n            const seqFlow = edge.flowElement;\r\n            const diagElt = edge.diagramElement;\r\n            const srcFlowNode = edge.source && edge.source.flowElement;\r\n            const srcDiagElt = edge.source && edge.source.diagramElement;\r\n            const tarFlowNode = edge.target && edge.target.flowElement;\r\n            const tarDiagElt = edge.target && edge.target.diagramElement;\r\n            const oldSeqFlowId = seqFlow.Id;\r\n\r\n            // 先删除原flowElt和diagElt\r\n            this.bpmnModel.DefaultProcess.RemoveFlowElement(seqFlow.Id);\r\n            this.bpmnModel.DefaultDiagram.BpmnPlane.RemoveDiagramElement(diagElt.Id);\r\n\r\n            // 赋值新来源端点Id\r\n            seqFlow.SourceRef = srcFlowNode && srcFlowNode.Id;\r\n            // 赋值新目标端点Id\r\n            seqFlow.TargetRef = tarFlowNode && tarFlowNode.Id;\r\n            // 重新赋值Id\r\n            seqFlow.Id = seqFlow.SourceRef + '_' + seqFlow.TargetRef;\r\n\r\n            diagElt.BpmnElementId = seqFlow.Id;\r\n            diagElt.SourceShapeElementId = srcDiagElt.Id;\r\n            diagElt.TargetShapeElementId = tarDiagElt.Id;\r\n\r\n            // 重新添加\r\n            this.bpmnModel.DefaultProcess.AddFlowElement(seqFlow);\r\n            this.bpmnModel.DefaultDiagram.BpmnPlane.AddDiagramElement(diagElt);\r\n\r\n            // 变得是来源端点\r\n            if (source) {\r\n                const oldSrcFlowNode = previous && previous.flowElement;\r\n\r\n                // 挪动的线为默认分支时，取消默认分支限制\r\n                if (oldSrcFlowNode.Default && oldSrcFlowNode.Default == oldSeqFlowId) {\r\n                    oldSrcFlowNode.Default = null;\r\n                }\r\n\r\n                // 原来源端点删除去向\r\n                if (oldSrcFlowNode != null && oldSrcFlowNode != srcFlowNode) {\r\n                    oldSrcFlowNode.Outgoings = oldSrcFlowNode.Outgoings ? oldSrcFlowNode.Outgoings.filter(it => {\r\n                        return it != oldSeqFlowId;\r\n                    }) : [];\r\n                }\r\n\r\n                // 新来源端点增加去向\r\n                if (srcFlowNode != null && !edge.existOutging(this.bpmnModel, srcFlowNode, tarFlowNode)) {\r\n                    srcFlowNode.Outgoings.push(seqFlow.Id);\r\n                }\r\n                // 目标节点删除来源\r\n                if (tarFlowNode != null) {\r\n                    tarFlowNode.Incomings = tarFlowNode.Incomings ? tarFlowNode.Incomings.filter(it => {\r\n                        return it != oldSeqFlowId;\r\n                    }) : [];\r\n                }\r\n                // 目标端点增加来源\r\n                if (tarFlowNode != null && !edge.existIncoming(this.bpmnModel, srcFlowNode, tarFlowNode)) {\r\n                    tarFlowNode.Incomings.push(seqFlow.Id);\r\n                }\r\n            } else {\r\n                const oldTarFlowNode = previous && previous.flowElement;\r\n                // 原目标端点删除来源\r\n                if (oldTarFlowNode != null && oldTarFlowNode != tarFlowNode) {\r\n                    oldTarFlowNode.Incomings = oldTarFlowNode.Incomings ? oldTarFlowNode.Incomings.filter(it => {\r\n                        return it != oldSeqFlowId;\r\n                    }) : [];\r\n                }\r\n\r\n                // 新目标端点增加来源\r\n                if (tarFlowNode != null && !edge.existIncoming(this.bpmnModel, tarFlowNode, srcFlowNode)) {\r\n                    tarFlowNode.Incomings.push(seqFlow.Id);\r\n                }\r\n\r\n                // 来源节点删除去向\r\n                if (srcFlowNode != null) {\r\n                    srcFlowNode.Outgoings = srcFlowNode.Outgoings ? srcFlowNode.Outgoings.filter(it => {\r\n                        return it != oldSeqFlowId;\r\n                    }) : [];\r\n                }\r\n                // 来源端点增加去向\r\n                if (srcFlowNode != null && !edge.existOutging(this.bpmnModel, srcFlowNode, tarFlowNode)) {\r\n                    srcFlowNode.Outgoings.push(seqFlow.Id);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * cell几何信息改变后同步修改Bpmn相关属性\r\n     * @param cell \r\n     */\r\n    bpmnCellGeometryChanged(cell: Cell, sender: MxGraphNS.mxEventSource, eventObject: MxGraphNS.mxEventObject, change: MxGraphNS.mxGeometryChange) {\r\n        if (this.bpmnModelLoaded == false || cell.flowElement == null) {\r\n            return;\r\n        }\r\n        if (cell instanceof NodeCell) {\r\n            const shape = cell.diagramElement;\r\n            shape.Bounds.X = cell.geometry.x;\r\n            shape.Bounds.Y = cell.geometry.y;\r\n            shape.Bounds.Height = cell.geometry.height;\r\n            shape.Bounds.Width = cell.geometry.width;\r\n\r\n            // 更新相关连线路径点与标签\r\n            cell.edges && cell.edges.forEach((edge) => {\r\n                this.updateEdgeState(edge);\r\n            });\r\n        } else if (cell instanceof EdgeCell) {\r\n            // 更新相关连线路径点与标签\r\n            this.updateEdgeState(cell);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * cell名称修改后同步修改Bpmn相关属性\r\n     * @param cell \r\n     * @param sender \r\n     * @param evt \r\n     */\r\n    bpmnCellNameChanged(cell: Cell, sender: MxGraphNS.mxEventSource, evt: MxGraphNS.mxEventObject) {\r\n        this.getModel().beginUpdate();\r\n        try {\r\n            this.labelChanged(cell, cell.flowElement && cell.flowElement.Name, undefined);\r\n        } finally {\r\n            this.getModel().endUpdate();\r\n        }\r\n        if (cell instanceof EdgeCell) {\r\n            this.updateEdgeState(cell);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置默认BPMN模型与流程元素实例\r\n     */\r\n    setDefaultBpmnModel() {\r\n        this.bpmnModel = this.createBpmnModel();\r\n        this.processCell = this.createProcessCell(this.bpmnModel);\r\n        this.bpmnModelLoaded = true;\r\n    }\r\n\r\n    /**\r\n     * 创建BpmnModel\r\n     */\r\n    createBpmnModel() {\r\n        const bpmnModel = new BpmnModel();\r\n        bpmnModel.TargetNamespace = \"Default_Namespace\";\r\n        bpmnModel.DefaultProcess = new Process(bpmnModel);\r\n        bpmnModel.DefaultDiagram = new BPMNDiagram(bpmnModel);\r\n        bpmnModel.DefaultDiagram.BpmnPlane.BpmnElementId = bpmnModel.DefaultProcess.Id;\r\n\r\n        return bpmnModel;\r\n    }\r\n\r\n    /**\r\n     * 加载BpmnModel并画图\r\n     */\r\n    loadBpmnModel(json: string) {\r\n        this.bpmnModelLoaded = false;\r\n        const bpmnModel = this.createBpmnModel();\r\n        bpmnModel.LoadFromJson(json);\r\n\r\n        this.drawBpmnGraph(bpmnModel);\r\n\r\n        this.bpmnModel = bpmnModel;\r\n        this.processCell = this.createProcessCell(this.bpmnModel);\r\n        this.bpmnModelLoaded = true;\r\n    }\r\n\r\n    /**\r\n     * 创建流程元素实例\r\n     * @param bpmnModel \r\n     * @returns \r\n     */\r\n    createProcessCell(bpmnModel: BpmnModel) {\r\n        const processCell = new ProcessCell();\r\n        processCell.process = bpmnModel.DefaultProcess;\r\n        processCell.plane = bpmnModel.DefaultDiagram.BpmnPlane;\r\n        processCell.editorUi = this.editorUi;\r\n\r\n        return processCell;\r\n    }\r\n\r\n    /**\r\n     * 根据BpmnModel画图\r\n     */\r\n    drawBpmnGraph(bpmnModel: BpmnModel) {\r\n        const { nodeDict, edgeDict } = this.buildFlowDiagDict(bpmnModel);\r\n        const flowDict = this.buildFlowDict(bpmnModel);\r\n        this.drawNodeCells(flowDict, nodeDict);\r\n        this.drawEdgeCells(flowDict, edgeDict);\r\n    }\r\n\r\n    /**\r\n     * 画节点\r\n     */\r\n    drawNodeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        nodeDict: { [BpmnElementId: string]: DiagramElement; }\r\n    ) {\r\n        Object.keys(nodeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId] as FlowNode;\r\n            const diagElt = nodeDict[bpmnModelElementId] as BPMNShape;\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n            this.drawNodeCell(flowElt, diagElt);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 画单个节点\r\n     */\r\n    drawNodeCell(flowElt: FlowNode, diagElt: BPMNShape) {\r\n        const cell = BpmnCellHelper.generate(flowElt.ClrTypeID, undefined, new mxGeometry(diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height)) as NodeCell;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        cell.editorUi = this.editorUi;\r\n\r\n        this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n    }\r\n\r\n    /**\r\n     * 画连线\r\n     */\r\n    drawEdgeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; }\r\n    ) {\r\n        Object.keys(edgeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId] as SequenceFlow;\r\n            const diagElt = edgeDict[bpmnModelElementId] as BPMNEdge;\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n            this.drawEdgeCell(flowElt, diagElt);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 画单个连线\r\n     */\r\n    drawEdgeCell(flowElt: SequenceFlow, diagElt: BPMNEdge) {\r\n        // 获取已画好的所有节点\r\n        const nodeCells = (this.getChildCells(this.getDefaultParent(), true) || []) as NodeCell[];\r\n        const source = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.SourceRef;\r\n        });\r\n        const target = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.TargetRef;\r\n        });\r\n\r\n        const cell = BpmnCellHelper.generate(flowElt.ClrTypeID, undefined, new mxGeometry()) as SequenceFlowEdge;\r\n        cell.geometry.relative = true;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        cell.editorUi = this.editorUi;\r\n        cell.source = source;\r\n        cell.target = target;\r\n\r\n        cell.geometry.points = cell.geometry.points || [];\r\n\r\n        // 判断是否为旧版本连线\r\n        if (this.isOldBpmnEdge(diagElt)) {\r\n            for (let i = 2; i < diagElt.Points.length; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X + (state.x - state.paintBounds.x);\r\n                const y = diagElt.BpmnLabel.Bounds.Y + (state.y - state.paintBounds.y);\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        } else {\r\n            // 根据连线的起点和终点坐标可以判断具体的连接点信息\r\n            // 根据起点判断来源端点的连接点位置\r\n            const exitX = (diagElt.Points[0].X - source.geometry.x) / source.geometry.width;\r\n            const exitY = (diagElt.Points[0].Y - source.geometry.y) / source.geometry.height;\r\n            // 根据终点判断目标端点的连接点位置\r\n            const entryX = (diagElt.Points[diagElt.Points.length - 1].X - target.geometry.x) / source.geometry.width;\r\n            const entryY = (diagElt.Points[diagElt.Points.length - 1].Y - target.geometry.y) / source.geometry.height;\r\n            // 设置连线的起点和终点的指定连接点\r\n            cell.style = `${mxConstants.STYLE_EXIT_X}=${exitX};${mxConstants.STYLE_EXIT_Y}=${exitY};${mxConstants.STYLE_ENTRY_X}=${entryX};${mxConstants.STYLE_ENTRY_Y}=${entryY};`;\r\n            // todo：取包含起终点的路径点数组和排除起终点的路径点数组画图结果相同，出现问题时待进一步分析\r\n            for (let i = 1; i < diagElt.Points.length - 1; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            const scale = this.view.getScale();\r\n            const translate = this.view.getTranslate();\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X * scale + translate.x;\r\n                const y = diagElt.BpmnLabel.Bounds.Y * scale + translate.y;\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        }\r\n        // 画完后清除拐点，否则这几个路径点会一直存在，连线位置更新时看起来非常别扭\r\n        cell.geometry.points = [];\r\n    }\r\n\r\n    /**\r\n     * 构建FlowElement字典，{ [flowEltId: string]: FlowElement }\r\n     */\r\n    buildFlowDict(bpmnModel: BpmnModel) {\r\n        let flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n\r\n        return flowDict;\r\n    }\r\n\r\n    /**\r\n     * 构建DiagramElement字典，{ [flowEltId: string]: DiagramElement }\r\n     */\r\n    buildFlowDiagDict(bpmnModel: BpmnModel) {\r\n        const nodeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n        const edgeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n\r\n        const diagramElts: (DiagramElement & { BpmnElementId: string; })[] = bpmnModel.DefaultDiagram.BpmnPlane.GetDiagramElements() as any;\r\n\r\n        diagramElts && diagramElts.forEach(elt => {\r\n            if (elt instanceof Node) {\r\n                nodeDict[elt.BpmnElementId] = elt;\r\n            } else if (elt instanceof Edge) {\r\n                edgeDict[elt.BpmnElementId] = elt;\r\n            }\r\n        });\r\n\r\n        return {\r\n            nodeDict,\r\n            edgeDict,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * cell绑定bpmn相关信息\r\n     */\r\n    bindBpmnElements(cells: MxGraphNS.mxCell[], formFormats?: any[]) {\r\n        cells && cells.forEach(cell => {\r\n            if (cell instanceof Cell) {\r\n                cell.editorUi = this.editorUi;\r\n                cell.bindBpmnModel();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据flowElementId获取cell\r\n     */\r\n    getCellByFlowElementId(flowEltId: string, parent?: MxGraphNS.mxCell): Cell {\r\n        if (flowEltId == null) {\r\n            return null;\r\n        }\r\n        parent = parent ? parent : this.getDefaultParent();\r\n        const cells = this.getChildCells(parent);\r\n        const cell = cells.find(it => {\r\n            if (it instanceof Cell) {\r\n                return it.flowElement && it.flowElement.Id == flowEltId;\r\n            } else {\r\n                return false;\r\n            }\r\n        }) as Cell;\r\n        return cell;\r\n    }\r\n\r\n    /**\r\n     * 更新连线状态\r\n     * @param cell \r\n     */\r\n    updateEdgeState(cell: EdgeCell) {\r\n        this.updateEdgeWaypoints(cell);\r\n        this.updateEdgeLabel(cell);\r\n    }\r\n\r\n    /**\r\n     * 更新路径点\r\n     * @param cell \r\n     */\r\n    updateEdgeWaypoints(cell: EdgeCell) {\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n        const state = this.view.getState(cell);\r\n        const scale = this.view.getScale();\r\n        const translate = this.view.getTranslate();\r\n        // 路径点列表\r\n        const waypoints: MxGraphNS.mxPoint[] = [];\r\n        state && state.absolutePoints && state.absolutePoints.forEach((pt, idx) => {\r\n            waypoints.push(MxGraphHelper.getRelativePositon(pt, scale, translate));\r\n        });\r\n        cell.setPoints(waypoints);\r\n    }\r\n\r\n    /**\r\n     * 更新连线标签\r\n     */\r\n    updateEdgeLabel(cell: EdgeCell) {\r\n        const state = this.view.getState(cell);\r\n        const scale = this.view.getScale();\r\n        const translate = this.view.getTranslate();\r\n        // 对于边来说，在默认的非相对位置模式下，absoluteOffset是边的标签的绝对坐标\r\n        const pt = MxGraphHelper.getRelativePositon(state.absoluteOffset, scale, translate);\r\n        const width = state.text && state.text.boundingBox ? state.text.boundingBox.width / scale : 0;\r\n        const height = state.text && state.text.boundingBox ? state.text.boundingBox.height / scale : 0;\r\n        const rect = state.text && state.text.boundingBox ? new mxRectangle(pt.x, pt.y, width, height) : null;\r\n\r\n        cell.setBpmnLabel(rect);\r\n    }\r\n\r\n    /**\r\n     * 创建无限大画布\r\n     */\r\n    createInfiniteCanvas() {\r\n        this.getPagePadding = () => {\r\n            return new mxPoint(\r\n                Math.max(0, Math.round(this.container.offsetWidth - 34)),\r\n                Math.max(0, Math.round(this.container.offsetHeight - 34)));\r\n        }\r\n\r\n        this.getScrollTileSize = () => {\r\n            if (this.scrollTileSize == null) {\r\n                this.scrollTileSize = new mxRectangle(0, 0, 400, 600);\r\n            }\r\n\r\n            return this.scrollTileSize;\r\n        }\r\n\r\n        this.getPageSize = () => {\r\n            return (this.pageVisible) ? new mxRectangle(0, 0, this.pageFormat.width * this.pageScale, this.pageFormat.height * this.pageScale) : this.getScrollTileSize();\r\n        }\r\n\r\n        this.getPageLayout = () => {\r\n            let size = (this.pageVisible) ? this.getPageSize() : this.getScrollTileSize();\r\n            let bounds = this.getGraphBounds();\r\n\r\n            if (bounds.width == 0 || bounds.height == 0) {\r\n                return new mxRectangle(0, 0, 1, 1);\r\n            }\r\n            else {\r\n                // Computes untransformed graph bounds\r\n                let x = Math.ceil(bounds.x / this.view.scale - this.view.translate.x);\r\n                let y = Math.ceil(bounds.y / this.view.scale - this.view.translate.y);\r\n                let w = Math.floor(bounds.width / this.view.scale);\r\n                let h = Math.floor(bounds.height / this.view.scale);\r\n\r\n                let x0 = Math.floor(x / size.width);\r\n                let y0 = Math.floor(y / size.height);\r\n                let w0 = Math.ceil((x + w) / size.width) - x0;\r\n                let h0 = Math.ceil((y + h) / size.height) - y0;\r\n\r\n                return new mxRectangle(x0, y0, w0, h0);\r\n            }\r\n        }\r\n\r\n        this.getPreferredPageSize = (bounds, width, height) => {\r\n            let pages = this.getPageLayout();\r\n            let size = this.getPageSize();\r\n\r\n            return new mxRectangle(0, 0, pages.width * size.width, pages.height * size.height);\r\n        };\r\n\r\n        // 重写画布大小变化后方法\r\n        const graphSizeDidChange = this.sizeDidChange;\r\n        this.sizeDidChange = () => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pages = this.getPageLayout();\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n\r\n                // Updates the minimum graph size\r\n                let minw = Math.ceil(2 * pad.x / this.view.scale + pages.width * size.width);\r\n                let minh = Math.ceil(2 * pad.y / this.view.scale + pages.height * size.height);\r\n\r\n                let min = this.minimumGraphSize;\r\n\r\n                // LATER: Fix flicker of scrollbar size in IE quirks mode\r\n                // after delayed call in window.resize event handler\r\n                if (min == null || min.width != minw || min.height != minh) {\r\n                    this.minimumGraphSize = new mxRectangle(0, 0, minw, minh);\r\n                }\r\n\r\n                // Updates auto-translate to include padding and graph size\r\n                let dx = pad.x / this.view.scale - pages.x * size.width;\r\n                let dy = pad.y / this.view.scale - pages.y * size.height;\r\n\r\n                if (!this.autoTranslate && (this.view.translate.x != dx || this.view.translate.y != dy)) {\r\n                    this.autoTranslate = true;\r\n                    (this.view as any).x0 = pages.x;\r\n                    (this.view as any).y0 = pages.y;\r\n\r\n                    let tx = this.view.translate.x;\r\n                    let ty = this.view.translate.y;\r\n\r\n                    this.view.setTranslate(dx, dy);\r\n                    this.container.scrollLeft += (dx - tx) * this.view.scale;\r\n                    this.container.scrollTop += (dy - ty) * this.view.scale;\r\n\r\n                    this.autoTranslate = false;\r\n                    return;\r\n                }\r\n\r\n                graphSizeDidChange.apply(this, []);\r\n            }\r\n        };\r\n\r\n        // 重写view获取背景页大小\r\n        this.view.getBackgroundPageBounds = () => {\r\n            let layout = this.getPageLayout();\r\n            let page = this.getPageSize();\r\n\r\n            return new mxRectangle(\r\n                this.view.scale * (this.view.translate.x + layout.x * page.width),\r\n                this.view.scale * (this.view.translate.y + layout.y * page.height),\r\n                this.view.scale * layout.width * page.width,\r\n                this.view.scale * layout.height * page.height\r\n            );\r\n\r\n        };\r\n\r\n        // 重写view validate方法\r\n        const graphViewValidate = this.view.validate;\r\n        this.view.validate = (cell?: MxGraphNS.mxCell) => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n                let tx = this.view.translate.x;\r\n                let ty = this.view.translate.y;\r\n                this.view.translate.x = pad.x / this.view.scale - ((this.view as any).x0 || 0) * size.width;\r\n                this.view.translate.y = pad.y / this.view.scale - ((this.view as any).y0 || 0) * size.height;\r\n            }\r\n\r\n            graphViewValidate.apply(this.view, [cell]);\r\n        };\r\n\r\n        // 方法重写完成后，需重新调用一次sizeDidChange()才可生效\r\n        // this.sizeDidChange();\r\n    }\r\n\r\n    /**\r\n     * 创建多连接点，重写getAllConnectionConstraints方法\r\n     */\r\n    setMultiConstraints() {\r\n        // 修改连接点样式\r\n        mxConstraintHandler.prototype.pointImage = new mxImage(Constant.IMAGE_PATH + \"/round-drop.png\", 8, 8);\r\n\r\n        // mxShape新增getConstraints方法\r\n        mxShape.prototype.getConstraints = (style: any, w: number, h: number): any => {\r\n            return null;\r\n        }\r\n\r\n        // 为mxImageShape添加默认连接点\r\n        mxImageShape.prototype.constraints = [\r\n            new mxConnectionConstraint(new mxPoint(0.5, 0), true),\r\n            new mxConnectionConstraint(new mxPoint(0, 0.5), true),\r\n            new mxConnectionConstraint(new mxPoint(1, 0.5), true),\r\n            new mxConnectionConstraint(new mxPoint(0.5, 1), true),\r\n        ];\r\n\r\n        this.setPortsEnabled(false);\r\n\r\n        // Disables floating connections (only connections via ports allowed)\r\n        this.connectionHandler.isConnectableCell = (cell: MxGraphNS.mxCell) => {\r\n            return false;\r\n        };\r\n\r\n        mxEdgeHandler.prototype.isConnectableCell = (cell: MxGraphNS.mxCell) => {\r\n            return this.connectionHandler.isConnectableCell(cell);\r\n        };\r\n\r\n        // Disables existing port functionality\r\n        this.view.getTerminalPort = (state, terminal, source) => {\r\n            return terminal;\r\n        };\r\n\r\n        // 重写获取所有连接点方法\r\n        this.getAllConnectionConstraints = (terminal: MxGraphNS.mxCellState, source: boolean) => {\r\n            if (terminal != null) {\r\n                let constraints = mxUtils.getValue(terminal.style, 'points', null);\r\n\r\n                if (constraints != null) {\r\n                    // Requires an array of arrays with x, y (0..1), an optional\r\n                    // [perimeter (0 or 1), dx, and dy] eg. points=[[0,0,1,-10,10],[0,1,0],[1,1]]\r\n                    const result = [];\r\n\r\n                    try {\r\n                        const c = JSON.parse(constraints);\r\n\r\n                        for (let i = 0; i < c.length; i++) {\r\n                            const tmp = c[i];\r\n                            result.push(new mxConnectionConstraint(new mxPoint(tmp[0], tmp[1]), (tmp.length > 2) ? tmp[2] != '0' : true,\r\n                                null, (tmp.length > 3) ? tmp[3] : 0, (tmp.length > 4) ? tmp[4] : 0));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // ignore\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n                else if (terminal.shape != null && terminal.shape.bounds != null) {\r\n                    const dir = terminal.shape.direction;\r\n                    const bounds = terminal.shape.bounds;\r\n                    const scale = terminal.shape.scale;\r\n                    let w = bounds.width / scale;\r\n                    let h = bounds.height / scale;\r\n\r\n                    if (dir == mxConstants.DIRECTION_NORTH || dir == mxConstants.DIRECTION_SOUTH) {\r\n                        const tmp = w;\r\n                        w = h;\r\n                        h = tmp;\r\n                    }\r\n\r\n                    constraints = terminal.shape.getConstraints(terminal.style, w, h);\r\n\r\n                    if (constraints != null) {\r\n                        return constraints;\r\n                    }\r\n                    else if (terminal.shape.stencil != null && terminal.shape.stencil.constraints != null) {\r\n                        return terminal.shape.stencil.constraints;\r\n                    }\r\n                    else if (terminal.shape.constraints != null) {\r\n                        return terminal.shape.constraints;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        // 为连线的style设置连接点信息\r\n        this.setConnectionConstraint = (edge: MxGraphNS.mxCell, terminal, source, constraint: MxGraphNS.mxConnectionConstraint) => {\r\n            if (constraint != null && constraint.point != null) {\r\n                if (source) {\r\n                    this.setCellStyles(mxConstants.STYLE_EXIT_X, constraint.point.x, [edge]);\r\n                    this.setCellStyles(mxConstants.STYLE_EXIT_Y, constraint.point.y, [edge]);\r\n                } else {\r\n                    this.setCellStyles(mxConstants.STYLE_ENTRY_X, constraint.point.x, [edge]);\r\n                    this.setCellStyles(mxConstants.STYLE_ENTRY_Y, constraint.point.y, [edge]);\r\n                }\r\n            }\r\n        };\r\n\r\n        // 从连线的style获取连接点信息\r\n        this.getConnectionConstraint = (edge, terminal, source) => {\r\n            let point = new mxPoint();\r\n            if (source) {\r\n                point.x = edge.style[mxConstants.STYLE_EXIT_X];\r\n                point.y = edge.style[mxConstants.STYLE_EXIT_Y];\r\n            } else {\r\n                point.x = edge.style[mxConstants.STYLE_ENTRY_X];\r\n                point.y = edge.style[mxConstants.STYLE_ENTRY_Y];\r\n            }\r\n            const constraint = mxImageShape.prototype.constraints ? mxImageShape.prototype.constraints.find(it => it.point.x == point.x && it.point.y == point.y) : null;\r\n            return constraint;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 分布排列节点\r\n     * @param horizontal true: 横向分布，false：纵向分布\r\n     * @param cells \r\n     * @returns \r\n     */\r\n    distributeCells(horizontal: boolean, cells?: MxGraphNS.mxCell[]) {\r\n        if (cells == null) {\r\n            cells = this.getSelectionCells();\r\n        }\r\n\r\n        if (cells != null && cells.length > 1) {\r\n            const vertices = [];\r\n            let max = null;\r\n            let min = null;\r\n\r\n            for (let i = 0; i < cells.length; i++) {\r\n                if (this.getModel().isVertex(cells[i])) {\r\n                    const state = this.view.getState(cells[i]);\r\n\r\n                    if (state != null) {\r\n                        const tmp = (horizontal) ? state.getCenterX() : state.getCenterY();\r\n                        max = (max != null) ? Math.max(max, tmp) : tmp;\r\n                        min = (min != null) ? Math.min(min, tmp) : tmp;\r\n\r\n                        vertices.push(state);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (vertices.length > 2) {\r\n                vertices.sort(function (a, b) {\r\n                    return (horizontal) ? a.x - b.x : a.y - b.y;\r\n                });\r\n\r\n                const t = this.view.translate;\r\n                const s = this.view.scale;\r\n\r\n                min = min / s - ((horizontal) ? t.x : t.y);\r\n                max = max / s - ((horizontal) ? t.x : t.y);\r\n\r\n                this.getModel().beginUpdate();\r\n                try {\r\n                    const dt = (max - min) / (vertices.length - 1);\r\n                    let t0 = min;\r\n\r\n                    for (let i = 1; i < vertices.length - 1; i++) {\r\n                        const pstate = this.view.getState(this.model.getParent(vertices[i].cell));\r\n                        let geo = this.getCellGeometry(vertices[i].cell);\r\n                        t0 += dt;\r\n\r\n                        if (geo != null && pstate != null) {\r\n                            geo = geo.clone();\r\n\r\n                            if (horizontal) {\r\n                                geo.x = Math.round(t0 - geo.width / 2) - pstate.origin.x;\r\n                            }\r\n                            else {\r\n                                geo.y = Math.round(t0 - geo.height / 2) - pstate.origin.y;\r\n                            }\r\n\r\n                            this.getModel().setGeometry(vertices[i].cell, geo);\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    this.getModel().endUpdate();\r\n                }\r\n            }\r\n        }\r\n\r\n        return cells;\r\n    }\r\n\r\n    /**\r\n     * 重写创建GraphView方法\r\n     * @override\r\n     */\r\n    createGraphView(): GraphView {\r\n        return new GraphView(this);\r\n    }\r\n\r\n    /**\r\n     * 重写连线处理器创建方法，默认创建SequenceFlowEdge\r\n     * @override\r\n     */\r\n    createConnectionHandler(): MxGraphNS.mxConnectionHandler {\r\n        const handler = new mxConnectionHandler(this, (source: MxGraphNS.mxCell, target: MxGraphNS.mxCell, style?: string) => {\r\n            const edge = BpmnCellHelper.generate(SequenceFlowEdge.CLR_TYPE_ID, undefined, new mxGeometry(), style);\r\n            edge.geometry.relative = true;\r\n            edge.source = source;\r\n            edge.target = target;\r\n            return edge;\r\n        });\r\n        return handler;\r\n    }\r\n\r\n    /**\r\n     * 设置元素显示标签内容\r\n     * @override\r\n     */\r\n    getLabel(cell: MxGraphNS.mxCell): string {\r\n        if (cell instanceof Cell) {\r\n            if (this.editorUi.multiLangEnabled) {\r\n                let label = super.getLabel(cell);\r\n                if (cell.flowElement != null) {\r\n                    label = cell.flowElement.Name;\r\n                    if (cell.flowElement.NameLanguage && cell.flowElement.NameLanguage[this.editorUi.langCode] != null && cell.flowElement.NameLanguage[this.editorUi.langCode] != \"\") {\r\n                        label = cell.flowElement.NameLanguage[this.editorUi.langCode];\r\n                    }\r\n                }\r\n                return label;\r\n            } else {\r\n                return (cell.flowElement && cell.flowElement.Name) || super.getLabel(cell);\r\n            }\r\n        }\r\n        return super.getLabel(cell);\r\n    }\r\n\r\n    /**\r\n     * 设置网格状态\r\n     * @override\r\n     * @param value \r\n     */\r\n    setGridEnabled(value: boolean): void {\r\n        super.setGridEnabled(value);\r\n        this.fireEvent(new mxEventObject(PmfEvents.GridEnabledChanged))\r\n    }\r\n\r\n    /**\r\n     * 判断是否是泳道\r\n     * @override\r\n     * @param cell \r\n     * @returns \r\n     */\r\n    isSwimlane(cell: MxGraphNS.mxCell) {\r\n        if (typeof this.model.getValue(cell) == 'string') {\r\n            return this.model.getValue(cell).toString().indexOf('Container') > -1;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 判断是否为旧版本BPMNEdge\r\n     * \r\n     * 旧版本连线Points数组中[0]和[1]分别表示起点和终点，因取值错误，[0]和[1]坐标均为(0,0)，以此为依据判断是否为旧版本的连线\r\n     * 新版本从起点到终点按顺序记录每一个点坐标\r\n     * @param bpmnEdge \r\n     * @returns \r\n     */\r\n    isOldBpmnEdge(bpmnEdge: BPMNEdge) {\r\n        if (bpmnEdge.Points.length >= 2) {\r\n            const pt1 = bpmnEdge.Points[0];\r\n            const pt2 = bpmnEdge.Points[1];\r\n            if (pt1.X == 0 && pt1.Y == 0 && pt2.X == 0 && pt2.Y == 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}"]}