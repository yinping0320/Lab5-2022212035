import { __extends } from "tslib";
import { KeyCodes } from "../../util/KeyCodes";
import { Action } from "../Action";
import { ActionKeys } from "../ActionKeys";
var FormatPanelAction = /** @class */ (function (_super) {
    __extends(FormatPanelAction, _super);
    function FormatPanelAction(editorUi) {
        var _this = _super.call(this, ActionKeys.pmf_formatPanel, editorUi, true) || this;
        _this.shortcutControlKey = true;
        _this.shortcutShiftKey = true;
        _this.shortcutKeyCode = KeyCodes.P;
        _this.setToggleAction(true);
        return _this;
    }
    FormatPanelAction.prototype.isSelected = function () {
        return this.editorUi.showFormat;
    };
    FormatPanelAction.prototype.execute = function (evt) {
        this.editorUi.showFormat = !this.editorUi.showFormat;
        this.editorUi.refresh();
    };
    return FormatPanelAction;
}(Action));
export { FormatPanelAction };
//# sourceMappingURL=FormatPanelAction.js.map