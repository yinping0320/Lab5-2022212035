{"version":3,"file":"ToBackAction.js","sourceRoot":"","sources":["../../../../../src/lib/action/impl/ToBackAction.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C;IAAkC,gCAAM;IACpC,sBAAY,QAAmB;QAA/B,YACI,kBAAM,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,SAUhD;QARG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC;QAElC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,qBAAqB,EAAE;YACvD,IAAI,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YACvD,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;;IACP,CAAC;IAED,8BAAO,GAAP,UAAQ,GAAkC;QACtC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAChC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IACL,mBAAC;AAAD,CAAC,AAlBD,CAAkC,MAAM,GAkBvC","sourcesContent":["import { IEditorUi } from \"../../ui/IEditorUi\";\r\nimport { KeyCodes } from \"../../util/KeyCodes\";\r\nimport { PmfEvents } from \"../../util/PmfEvents\";\r\nimport { Action } from \"../Action\";\r\nimport { ActionKeys } from \"../ActionKeys\";\r\n\r\nexport class ToBackAction extends Action {\r\n    constructor(editorUi: IEditorUi) {\r\n        super(ActionKeys.pmf_toBack, editorUi, false);\r\n\r\n        this.shortcutControlKey = true;\r\n        this.shortcutShiftKey = true;\r\n        this.shortcutKeyCode = KeyCodes.B;\r\n\r\n        this.editorUi.addListener(PmfEvents.SelectionModelChanged, () => {\r\n            let selected = !this.editorUi.graph.isSelectionEmpty();\r\n            this.setEnabled(selected);\r\n        });\r\n    }\r\n\r\n    execute(evt?: PointerEvent | KeyboardEvent): void {\r\n        let graph = this.editorUi.graph;\r\n        graph.orderCells(true);\r\n    }\r\n}"]}