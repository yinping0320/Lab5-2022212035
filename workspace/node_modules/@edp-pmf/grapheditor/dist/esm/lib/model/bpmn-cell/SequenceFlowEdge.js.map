{"version":3,"file":"SequenceFlowEdge.js","sourceRoot":"","sources":["../../../../../src/lib/model/bpmn-cell/SequenceFlowEdge.ts"],"names":[],"mappings":"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","sourcesContent":["import { SequenceFlowState, SequenceFlow, Activity, ExclusiveGateway, InclusiveGateway } from \"@edp-pmf/bpmn-model\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { EdgeCell } from \"../EdgeCell\";\r\nimport { ElementPropertyConfig, FarrisPropConfigWithData } from \"../farris-property-config\";\r\n\r\n/**\r\n * 事件流连线\r\n */\r\nexport class SequenceFlowEdge extends EdgeCell {\r\n    clrTypeId: string = SequenceFlowEdge.CLR_TYPE_ID;\r\n    name: string = \"事件流\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n        \"zh-CHS\": \"事件流\",\r\n        \"zh-CHT\": \"事件流\",\r\n        \"en\": \"SequenceFlow\",\r\n    };\r\n    static CLR_TYPE_ID = \"bpmn.SequenceFlow\";\r\n    flowElement: SequenceFlow;\r\n\r\n    strokeColors = {\r\n        [SequenceFlowState.Default]: \"#6482b9\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        const propWithData = super.getFarrisPropConfig();\r\n        const propertyData: {\r\n            Default?: boolean;\r\n        } = propWithData.propertyData;\r\n\r\n        const sourceNode = this.flowElement.Model.DefaultProcess.GetFlowElement(this.flowElement.SourceRef);\r\n\r\n        const conditionConfig: ElementPropertyConfig = new ElementPropertyConfig();\r\n        propWithData.propertyConfig.push(conditionConfig);\r\n\r\n        conditionConfig.categoryId = 'condition';\r\n        conditionConfig.categoryName = mxResources.get('ConditionOption');\r\n        conditionConfig.tabId = 'basic';\r\n        conditionConfig.tabName = mxResources.get('basic');\r\n        conditionConfig.properties = [\r\n            // { propertyID: \"ConditionExpression\", propertyName: mxResources.get('ConditionExpression'), propertyType: 'modal' }\r\n        ];\r\n        // 源节点为排他网关、包容网关和Activity时\r\n        if (sourceNode instanceof Activity || sourceNode instanceof ExclusiveGateway || sourceNode instanceof InclusiveGateway) {\r\n            conditionConfig.properties.push(\r\n                { propertyID: \"Default\", propertyName: mxResources.get('Default Transform'), propertyType: 'select' }\r\n            );\r\n\r\n            const act = sourceNode;\r\n            if (act.Default === this.flowElement.Id) {\r\n                propertyData.Default = true;\r\n            } else {\r\n                propertyData.Default = false;\r\n            }\r\n        }\r\n\r\n        return propWithData;\r\n    }\r\n\r\n    updateProps(obj: any): void {\r\n        const sequenceFlow = this.flowElement;\r\n        let propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case \"Default\":\r\n                this.modifyDefaultSequenceFlow(sequenceFlow, obj.propertyValue);\r\n                break;\r\n            default:\r\n                super.updateProps(obj);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新默认分支(当前适用：排他网关+活动节点)\r\n     * @param seqFlow\r\n     * @param val\r\n     */\r\n    modifyDefaultSequenceFlow(seqFlow: SequenceFlow, val: boolean) {\r\n        // 获取流转线源节点\r\n        const sourceNode = seqFlow.Model.DefaultProcess.GetFlowElement(seqFlow.SourceRef);\r\n        // 以下活动支持缺省转移线\r\n        if (sourceNode instanceof Activity || sourceNode instanceof ExclusiveGateway || sourceNode instanceof InclusiveGateway) {\r\n            if (val === true) {\r\n                sourceNode.Default = seqFlow.Id;\r\n            } else if (val === false) {\r\n                // 源节点的默认分支===流转分支ID\r\n                if (sourceNode.Default === seqFlow.Id) {\r\n                    sourceNode.Default = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}