"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlignMiddleAction = void 0;
var tslib_1 = require("tslib");
var mxgraph_ts_1 = require("@edp-pmf/mxgraph-ts");
var PmfEvents_1 = require("../../util/PmfEvents");
var Action_1 = require("../Action");
var ActionKeys_1 = require("../ActionKeys");
var AlignMiddleAction = /** @class */ (function (_super) {
    tslib_1.__extends(AlignMiddleAction, _super);
    function AlignMiddleAction(editorUi) {
        var _this = _super.call(this, ActionKeys_1.ActionKeys.pmf_middle, editorUi, false) || this;
        _this.editorUi.addListener(PmfEvents_1.PmfEvents.LockedChanged, function () {
            _this.setEnabled(_this.isAlignActionEnabled(_this.editorUi.graph));
        });
        _this.editorUi.addListener(PmfEvents_1.PmfEvents.SelectionModelChanged, function () {
            _this.setEnabled(_this.isAlignActionEnabled(_this.editorUi.graph));
        });
        return _this;
    }
    AlignMiddleAction.prototype.execute = function (evt) {
        var graph = this.editorUi.graph;
        graph.alignCells(mxgraph_ts_1.mxConstants.ALIGN_MIDDLE);
    };
    AlignMiddleAction.prototype.isAlignActionEnabled = function (graph) {
        return this.isUnlocked(graph) && this.isVertexSelected(graph) && graph.getSelectionCount() > 1;
    };
    AlignMiddleAction.prototype.isUnlocked = function (graph) {
        var unlocked = graph.isEnabled() && !graph.isCellLocked(graph.getDefaultParent());
        return unlocked;
    };
    AlignMiddleAction.prototype.isVertexSelected = function (graph) {
        var vertexSelected = false;
        var cells = graph.getSelectionCells();
        if (cells != null) {
            for (var i = 0; i < cells.length; i++) {
                var cell = cells[i];
                if (graph.getModel().isVertex(cell)) {
                    vertexSelected = true;
                }
                if (vertexSelected) {
                    break;
                }
            }
        }
        return vertexSelected;
    };
    return AlignMiddleAction;
}(Action_1.Action));
exports.AlignMiddleAction = AlignMiddleAction;
//# sourceMappingURL=AlignMiddleAction.js.map