{"version":3,"file":"FormatPanelAction.js","sourceRoot":"","sources":["../../../../../src/lib/action/impl/FormatPanelAction.ts"],"names":[],"mappings":";;;;AACA,gDAA+C;AAC/C,oCAAmC;AACnC,4CAA2C;AAE3C;IAAuC,6CAAM;IACzC,2BAAY,QAAmB;QAA/B,YACI,kBAAM,uBAAU,CAAC,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,SAOpD;QALG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,KAAI,CAAC,eAAe,GAAG,mBAAQ,CAAC,CAAC,CAAC;QAElC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;IAC/B,CAAC;IAED,sCAAU,GAAV;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IACpC,CAAC;IAED,mCAAO,GAAP,UAAQ,GAAkC;QACtC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IACL,wBAAC;AAAD,CAAC,AAnBD,CAAuC,eAAM,GAmB5C;AAnBY,8CAAiB","sourcesContent":["import { IEditorUi } from \"../../ui/IEditorUi\";\r\nimport { KeyCodes } from \"../../util/KeyCodes\";\r\nimport { Action } from \"../Action\";\r\nimport { ActionKeys } from \"../ActionKeys\";\r\n\r\nexport class FormatPanelAction extends Action {\r\n    constructor(editorUi: IEditorUi) {\r\n        super(ActionKeys.pmf_formatPanel, editorUi, true);\r\n\r\n        this.shortcutControlKey = true;\r\n        this.shortcutShiftKey = true;\r\n        this.shortcutKeyCode = KeyCodes.P;\r\n\r\n        this.setToggleAction(true);\r\n    }\r\n\r\n    isSelected(): boolean {\r\n        return this.editorUi.showFormat;\r\n    }\r\n\r\n    execute(evt?: PointerEvent | KeyboardEvent): void {\r\n        this.editorUi.showFormat = !this.editorUi.showFormat;\r\n        this.editorUi.refresh();\r\n    }\r\n}"]}