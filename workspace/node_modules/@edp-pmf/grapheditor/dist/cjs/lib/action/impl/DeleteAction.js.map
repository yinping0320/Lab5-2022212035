{"version":3,"file":"DeleteAction.js","sourceRoot":"","sources":["../../../../../src/lib/action/impl/DeleteAction.ts"],"names":[],"mappings":";;;;AACA,gDAA+C;AAC/C,kDAAiD;AACjD,oCAAmC;AACnC,4CAA2C;AAE3C;IAAkC,wCAAM;IACpC,sBAAY,QAAmB;QAA/B,YACI,kBAAM,uBAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,SAU/C;QARG,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,KAAI,CAAC,eAAe,GAAG,mBAAQ,CAAC,GAAG,CAAC;QAEpC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,qBAAS,CAAC,qBAAqB,EAAE;YACvD,IAAI,QAAQ,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;YACvD,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;;IACP,CAAC;IAED,8BAAO,GAAP,UAAQ,GAAkC;QACtC,IAAI,YAAY,GAAG,IAAI,CAAC;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhC,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,IAAI,KAAK,GAAG,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAE/D,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACnC,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAC5C,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YAEvC,+CAA+C;YAC/C,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,IAAI,MAAM,GAAG,EAAE,CAAC;gBAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrC,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC1G,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC3B;iBACJ;gBAED,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;aACnC;SACJ;IACL,CAAC;IACL,mBAAC;AAAD,CAAC,AAvCD,CAAkC,eAAM,GAuCvC;AAvCY,oCAAY","sourcesContent":["import { IEditorUi } from \"../../ui/IEditorUi\";\r\nimport { KeyCodes } from \"../../util/KeyCodes\";\r\nimport { PmfEvents } from \"../../util/PmfEvents\";\r\nimport { Action } from \"../Action\";\r\nimport { ActionKeys } from \"../ActionKeys\";\r\n\r\nexport class DeleteAction extends Action {\r\n    constructor(editorUi: IEditorUi) {\r\n        super(ActionKeys.pmf_delete, editorUi, true);\r\n\r\n        this.shortcutControlKey = false;\r\n        this.shortcutShiftKey = false;\r\n        this.shortcutKeyCode = KeyCodes.Del;\r\n\r\n        this.editorUi.addListener(PmfEvents.SelectionModelChanged, () => {\r\n            let selected = !this.editorUi.graph.isSelectionEmpty();\r\n            this.setEnabled(selected);\r\n        });\r\n    }\r\n\r\n    execute(evt?: PointerEvent | KeyboardEvent): void {\r\n        let includeEdges = true;\r\n        let graph = this.editorUi.graph;\r\n\r\n        graph.escape();\r\n        let cells = graph.getDeletableCells(graph.getSelectionCells());\r\n\r\n        if (cells != null && cells.length > 0) {\r\n            let parents = graph.model.getParents(cells);\r\n            graph.removeCells(cells, includeEdges);\r\n\r\n            // Selects parents for easier editing of groups\r\n            if (parents != null) {\r\n                let select = [];\r\n\r\n                for (let i = 0; i < parents.length; i++) {\r\n                    if (graph.model.contains(parents[i]) && (graph.model.isVertex(parents[i]) || graph.model.isEdge(parents[i]))) {\r\n                        select.push(parents[i]);\r\n                    }\r\n                }\r\n\r\n                graph.setSelectionCells(select);\r\n            }\r\n        }\r\n    }\r\n}"]}