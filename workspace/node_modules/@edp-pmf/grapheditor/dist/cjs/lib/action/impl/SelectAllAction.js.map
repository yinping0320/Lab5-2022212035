{"version":3,"file":"SelectAllAction.js","sourceRoot":"","sources":["../../../../../src/lib/action/impl/SelectAllAction.ts"],"names":[],"mappings":";;;;AACA,gDAA+C;AAC/C,kDAAiD;AACjD,oCAAmC;AACnC,4CAA2C;AAE3C;IAAqC,2CAAM;IACvC,yBAAY,QAAmB;QAA/B,YACI,kBAAM,uBAAU,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC,SAWlD;QATG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,KAAI,CAAC,eAAe,GAAG,mBAAQ,CAAC,CAAC,CAAC;QAElC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,qBAAS,CAAC,aAAa,EAAE;YAC/C,IAAI,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAClF,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;;IACP,CAAC;IAED,iCAAO,GAAP,UAAQ,GAAkC;QACtC,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAChC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IACL,sBAAC;AAAD,CAAC,AAnBD,CAAqC,eAAM,GAmB1C;AAnBY,0CAAe","sourcesContent":["import { IEditorUi } from \"../../ui/IEditorUi\";\r\nimport { KeyCodes } from \"../../util/KeyCodes\";\r\nimport { PmfEvents } from \"../../util/PmfEvents\";\r\nimport { Action } from \"../Action\";\r\nimport { ActionKeys } from \"../ActionKeys\";\r\n\r\nexport class SelectAllAction extends Action {\r\n    constructor(editorUi: IEditorUi) {\r\n        super(ActionKeys.pmf_selectAll, editorUi, true);\r\n\r\n        this.shortcutControlKey = true;\r\n        this.shortcutShiftKey = false;\r\n        this.shortcutKeyCode = KeyCodes.A;\r\n\r\n        this.editorUi.addListener(PmfEvents.LockedChanged, () => {\r\n            let graph = this.editorUi.graph;\r\n            let unlocked = graph.isEnabled() && !graph.isCellLocked(graph.getDefaultParent());\r\n            this.setEnabled(unlocked);\r\n        });\r\n    }\r\n\r\n    execute(evt?: PointerEvent | KeyboardEvent): void {\r\n        let graph = this.editorUi.graph;\r\n        graph.selectAll(null, true);\r\n    }\r\n}"]}