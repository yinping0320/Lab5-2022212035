{"version":3,"file":"OutlineAction.js","sourceRoot":"","sources":["../../../../../src/lib/action/impl/OutlineAction.ts"],"names":[],"mappings":";;;;AAAA,kDAAoD;AAEpD,wDAAuD;AACvD,gDAA+C;AAC/C,oCAAmC;AACnC,4CAA2C;AAE3C;IAAmC,yCAAM;IACrC,uBAAY,QAAmB;QAA/B,YACI,kBAAM,uBAAU,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,SAOhD;QALG,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,KAAI,CAAC,eAAe,GAAG,mBAAQ,CAAC,CAAC,CAAC;QAElC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;IAC/B,CAAC;IAID,kCAAU,GAAV;QACI,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI;YAC1B,OAAO,KAAK,CAAC;QAEjB,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC;IAED,+BAAO,GAAP,UAAQ,GAAkC;QAA1C,iBAoBC;QAnBG,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAC5B,mDAAmD;YACnD,IAAI,CAAC,aAAa,GAAG,IAAI,6BAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAEtG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC1C,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,0BAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC1C,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,0BAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAE3C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,0BAAa,CAAC,SAAS,CAAC,CAAC,CAAC;SACzD;aACI;YACD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;SAChF;IACL,CAAC;IACL,oBAAC;AAAD,CAAC,AAzCD,CAAmC,eAAM,GAyCxC;AAzCY,sCAAa","sourcesContent":["import { mxEventObject } from \"@edp-pmf/mxgraph-ts\";\r\nimport { IEditorUi } from \"../../ui/IEditorUi\";\r\nimport { OutlineWindow } from \"../../ui/OutlineWindow\";\r\nimport { KeyCodes } from \"../../util/KeyCodes\";\r\nimport { Action } from \"../Action\";\r\nimport { ActionKeys } from \"../ActionKeys\";\r\n\r\nexport class OutlineAction extends Action {\r\n    constructor(editorUi: IEditorUi) {\r\n        super(ActionKeys.pmf_outline, editorUi, true);\r\n\r\n        this.shortcutControlKey = true;\r\n        this.shortcutShiftKey = true;\r\n        this.shortcutKeyCode = KeyCodes.O;\r\n\r\n        this.setToggleAction(true);\r\n    }\r\n\r\n    private outlineWindow: OutlineWindow;\r\n\r\n    isSelected(): boolean {\r\n        if (this.outlineWindow == null)\r\n            return false;\r\n\r\n        return this.outlineWindow.window.isVisible();\r\n    }\r\n\r\n    execute(evt?: PointerEvent | KeyboardEvent): void {\r\n        if (this.outlineWindow == null) {\r\n            // LATER: Check layers window for initial placement\r\n            this.outlineWindow = new OutlineWindow(this.editorUi, document.body.offsetWidth - 260, 100, 180, 180);\r\n\r\n            this.outlineWindow.window.addListener('show', () => {\r\n                this.editorUi.fireEvent(new mxEventObject('outline'));\r\n            });\r\n\r\n            this.outlineWindow.window.addListener('hide', () => {\r\n                this.editorUi.fireEvent(new mxEventObject('outline'));\r\n            });\r\n\r\n            this.outlineWindow.window.setVisible(true);\r\n\r\n            this.editorUi.fireEvent(new mxEventObject('outline'));\r\n        }\r\n        else {\r\n            this.outlineWindow.window.setVisible(!this.outlineWindow.window.isVisible());\r\n        }\r\n    }\r\n}"]}