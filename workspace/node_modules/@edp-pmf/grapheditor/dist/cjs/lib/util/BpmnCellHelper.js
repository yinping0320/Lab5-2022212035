"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BpmnCellHelper = void 0;
var DefaultNodeCell_1 = require("../model/DefaultNodeCell");
var NodeCell_1 = require("../model/NodeCell");
var bpmn_model_1 = require("@edp-pmf/bpmn-model");
/**
 * 元素生成器工具
 */
var BpmnCellHelper = /** @class */ (function () {
    function BpmnCellHelper() {
    }
    /**
     * 注册构造器
     * @param clrTypeId 类型ID
     * @param ctor 构造方法
     */
    BpmnCellHelper.register = function (clrTypeId, ctor) {
        BpmnCellHelper.ctors[clrTypeId] = ctor;
    };
    /**
     * 删除构造器
     * @param clrTypeId 类型ID
     */
    BpmnCellHelper.remove = function (clrTypeId) {
        delete BpmnCellHelper.ctors[clrTypeId];
    };
    /**
     * 生成元素
     * @param clrTypeId
     * @param value
     * @param geometry
     * @param style
     * @returns
     */
    BpmnCellHelper.generate = function (clrTypeId, value, geometry, style) {
        var ctor = BpmnCellHelper.ctors[clrTypeId];
        if (ctor) {
            var cell = new ctor(value, geometry, style);
            if (cell instanceof NodeCell_1.NodeCell && style == null && cell.imgUrls && cell.imgUrls[bpmn_model_1.FlowNodeState.Default]) {
                cell.style = "image=" + cell.imgUrls[bpmn_model_1.FlowNodeState.Default] + ";";
            }
            return cell;
        }
        else {
            var cell = new DefaultNodeCell_1.DefaultNodeCell(value, geometry, style);
            cell.clrTypeId = clrTypeId;
        }
    };
    BpmnCellHelper.ctors = {};
    return BpmnCellHelper;
}());
exports.BpmnCellHelper = BpmnCellHelper;
//# sourceMappingURL=BpmnCellHelper.js.map