import { Actions } from "../action/Actions";
import { mxEventSource, MxGraphNS } from "@edp-pmf/mxgraph-ts";
import { ToolbarItems } from "../toolbar/ToolbarItems";
import { Toolbox } from "../toolbox/ToolBox";
import { Footer } from "./Footer";
import { Format } from "./Format";
import { Graph } from "./Graph";
import { KeyHandler } from "./KeyHandler";
import { Menubar } from "./Menubar";
import { Sidebar } from "./Sidebar";
import { Toolbar } from "./Toolbar";
import { IEditorUi } from "./IEditorUi";
import { Cell } from "../model/Cell";
/**
 * 设计器统一入口，持有各部分组件实例，可触发以及响应事件
 */
export declare class EditorUi extends mxEventSource implements IEditorUi {
    /**
     * 菜单栏高度
     */
    menubarHeight: number;
    /**
     * 工具栏高度
     */
    toolbarHeight: number;
    /**
     * 属性框宽度
     */
    formatWidth: number;
    /**
     * 底部栏高度
     */
    footerHeight: number;
    /**
     * 分割条位置
     */
    sidebarSplitPosition: number;
    /**
     * 分割条宽度
     */
    sidebarSplitSize: number;
    /**
     * 画布最小宽度
     */
    diagramMinWidth: number;
    /**
     * 侧边栏底部栏高度
     */
    sidebarFooterHeight: number;
    /**
     * 0偏移量
     */
    zeroOffset: MxGraphNS.mxPoint;
    /**
     * 是否显示菜单栏
     */
    showMenubar: boolean;
    /**
     * 是否显示工具栏
     */
    showToolbar: boolean;
    /**
     * 是否显示侧边栏
     */
    showSidebar: boolean;
    /**
     * 是否显示属性框
     */
    showFormat: boolean;
    /**
     * 是否显示底部栏
     */
    showFooter: boolean;
    /**
     * 菜单栏
     */
    menubar: Menubar;
    /**
     * 工具栏
     */
    toolbar: Toolbar;
    /**
     * 侧边栏
     */
    sidebar: Sidebar;
    /**
     * 工具箱
     */
    toolbox: Toolbox;
    /**
     * 画布
     */
    graph: Graph;
    /**
     * 属性框
     */
    format: Format;
    /**
     * 底部栏
     */
    footer: Footer;
    /**
     * 动作列表
     */
    actions: Actions;
    /**
     * 工具栏列表
     */
    toolbarItems: ToolbarItems;
    /**
     * 快捷键处理器
     */
    keyHandler: KeyHandler;
    /**
     * 总容器
     */
    container: HTMLElement;
    /**
     * 菜单栏容器
     */
    menubarContainer: HTMLDivElement;
    /**
     * 工具栏容器
     */
    toolbarContainer: HTMLDivElement;
    /**
     * 侧边栏容器
     */
    sidebarContainer: HTMLDivElement;
    /**
     * 侧边栏底部容器
     */
    sidebarFooterContainer: HTMLDivElement;
    /**
     * 分割条
     */
    sidebarSplit: HTMLDivElement;
    /**
     * 画布容器
     */
    diagramContainer: HTMLDivElement;
    /**
     * 属性框容器
     */
    formatContainer: HTMLDivElement;
    /**
     * 底部栏容器
     */
    footerContainer: HTMLDivElement;
    /**
     * 组件销毁方法列表
     */
    destroyFunctions: any;
    /**
     * 当前菜单DOM元素
     */
    currentMenuElt: HTMLAnchorElement;
    /**
     * 当前菜单
     */
    currentMenu: MxGraphNS.mxPopupMenu;
    /**
     * 鼠标点击非当前菜单位置时，关闭已显示的菜单
     */
    gestureHandler: (evt: PointerEvent) => void;
    /**
     * 窗口大小变化时触发，刷新界面
     */
    resizeHandler: () => void;
    /**
     * Delete按键处理器
     */
    deleteKeyHandler: (evt: KeyboardEvent) => void;
    /**
     * 是否启用多语
     */
    multiLangEnabled: boolean;
    /**
     * 当前语言，尝试从igix运行框架取当前语言，没有则取zh-CHS
     */
    langCode: string;
    /**
     * 构造方法
     * @param container 容器dom，没有则去body
     * @param eventSource 事件源
     * @param importLinks 是否引入内置样式文件，默认为true
     */
    constructor(container?: HTMLElement, eventSource?: any, importLinks?: boolean);
    /**
     * 引入内置样式文件
     */
    importStyles(): void;
    /**
     * 修改属性
     * @param obj 至少要包含属性标识propertyID，属性值propertyValue和元素标识Id三个属性，元素标识Id可以为空，为空表示修改的是流程属性
     */
    updateProperty(obj: {
        propertyID: string;
        propertyValue: any;
        Id: string;
        [key: string]: any;
    }): void;
    /**
     * 获取属性配置
     * @param cells
     * @returns
     */
    getFarrisPropConfig(cells?: Cell[]): import("..").FarrisPropConfigWithData;
    /**
     * 获取流程属性配置
     */
    getProcessFarrisPropConfig(): import("..").FarrisPropConfigWithData;
    /**
     * 获取节点属性配置
     * @param cell
     * @returns
     */
    getCellFarrisPropConfig(cell: Cell): import("..").FarrisPropConfigWithData;
    /**
     * 显示EditorUI
     */
    show(): void;
    /**
     * 刷新
     * @param sizeDidChange
     */
    refresh(sizeDidChange?: boolean): void;
    /**
     * 创建各容器div
     */
    createDivs(): void;
    /**
     * 创建带指定样式类的div
     * @param classname
     * @returns
     */
    createDiv(classname: string): HTMLDivElement;
    /**
     * 添加分割条处理器
     * @param elt
     * @param horizontal
     * @param dx
     * @param onChange
     */
    addSplitHandler(elt: HTMLDivElement, horizontal: boolean, dx: number, onChange: (value: number) => void): void;
    /**
     * 分割条移动后刷新界面
     * @param value
     */
    sidebarSplitOnChange(value: number): void;
    /**
     * 获取画布容器偏移量
     * @returns
     */
    getDiagramContainerOffset(): MxGraphNS.mxPoint;
    /**
     * 创建画布
     * @returns
     */
    createGraph(): Graph;
    /**
     * 创建画布前
     */
    beforeCreateGraph(): void;
    /**
     * 创建画布实例
     */
    createGraphInstance(): Graph;
    /**
     * 创建画布后
     * @param graph
     */
    afterCreateGraph(graph: Graph): void;
    /**
     * 创建动作列表
     * @returns
     */
    createActions(): Actions;
    /**
     * 创建工具栏项列表
     * @returns
     */
    createToolbarItems(): ToolbarItems;
    /**
     * 创建键盘事件处理器
     * @param graph
     * @returns
     */
    createKeyHandler(graph: Graph): KeyHandler;
    /**
     * 创建菜单栏
     * @returns
     */
    createMenubar(): Menubar;
    /**
     * 创建工具栏
     * @returns
     */
    createToolbar(): Toolbar;
    /**
     * 创建侧边栏
     * @returns
     */
    createSidebar(): Sidebar;
    /**
     * 创建内置属性框
     * @returns
     */
    createFormat(): Format;
    /**
     * 创建底部栏
     * @returns
     */
    createFooter(): Footer;
    /**
     * 重置工具条
     */
    resetToolbar(toolbarItems: ToolbarItems): void;
    /**
     * 重置工具箱
     */
    resetToolbox(): void;
    /**
     * 创建工具箱
     * @returns
     */
    createToolbox(): Toolbox;
    /**
     * 加载BpmnModel
     * @param json
     */
    loadBpmnModel(json: string): void;
    /**
     * 重置滚动条
     */
    resetScrollbars(): void;
    /**
     * 设置当前菜单
     * @param menu
     * @param elt
     */
    setCurrentMenu(menu: MxGraphNS.mxPopupMenu, elt: HTMLAnchorElement): void;
    /**
     * 重置当前菜单
     */
    resetCurrentMenu(): void;
    /**
     * 隐藏当前菜单
     */
    hideCurrentMenu(): void;
    /**
     * 添加模型相关监听器
     */
    addBpmnListeners(): void;
    /**
     * 销毁
     */
    destroy(): void;
}
