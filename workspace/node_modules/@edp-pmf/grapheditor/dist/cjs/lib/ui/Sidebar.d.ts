import { MxGraphNS, mxCell } from "@edp-pmf/mxgraph-ts";
import { Toolbox } from "../toolbox/ToolBox";
import { IEditorUi } from "./IEditorUi";
import { Graph } from "./Graph";
/**
 * 侧边栏
 */
export declare class Sidebar {
    /**
     * 侧边栏容器
     */
    container: HTMLDivElement;
    /**
     * EditorUi
     */
    editorUi: IEditorUi;
    /**
     * 工具箱画布
     */
    graph: MxGraphNS.mxGraph;
    /**
     * 提示信息画布
     */
    graph2: MxGraphNS.mxGraph;
    /**
     * 缩略图宽度
     */
    thumbWidth: number;
    /**
     * 缩略图高度
     */
    thumbHeight: number;
    /**
     * 缩略图内边距
     */
    thumbPadding: number;
    /**
     * 缩略图边框宽度
     */
    thumbBorder: number;
    /**
     * 工具箱分组标题字体大小
     */
    sidebarTitleSize: number;
    /**
     * 显示分组标题
     */
    sidebarTitles: boolean;
    /**
     * 显示提示信息
     */
    tooltipTitles: boolean;
    /**
     * 启用提示信息
     */
    enableTooltips: boolean;
    /**
     * 显示提示信息
     */
    showTooltips: boolean;
    /**
     * 提示信息元素
     */
    tooltip: HTMLDivElement;
    /**
     * 提示信息标题元素
     */
    tooltipTitle: HTMLDivElement;
    /**
     * 提示信息图片
     */
    tooltipImageSrc: string;
    /**
     * 提示信息显示延迟
     */
    tooltipDelay: number;
    /**
     * 提示信息图片元素
     */
    tooltipImage: HTMLImageElement;
    /**
     * 提示信息边框宽度
     */
    tooltipBorder: number;
    /**
     * 提示信息最大宽度
     */
    maxTooltipWidth: number;
    /**
     * 提示信息最大高度
     */
    maxTooltipHeight: number;
    /**
     * 分组折叠图片
     */
    collapsedImage: string;
    /**
     * 分组展开图片
     */
    expandedImage: string;
    /**
     * 拖拽至画布后元素高度
     */
    defaultImageHeight: number;
    /**
     * 拖拽至画布后元素宽度
     */
    defaultImageWidth: number;
    /**
     * 拖拽预览边框样式
     */
    dragPreviewBorder: string;
    /**
     * 线程号，取值为setInterval返回值
     */
    thread: number;
    /**
     * 当前元素
     */
    currentElt: HTMLAnchorElement;
    /**
     * 工具箱分组Map
     */
    palettes: {
        [key: string]: any;
    };
    constructor(editorUi: IEditorUi, container: HTMLDivElement);
    /**
     * 创建临时画布
     * @param stylesheet
     * @returns
     */
    createTemporaryGraph(stylesheet: MxGraphNS.mxStylesheet): MxGraphNS.mxGraph;
    /**
     * 重置工具箱
     * @param toolbox
     */
    reset(toolbox: Toolbox): void;
    /**
     * 添加带创建元素工厂方法的工具箱显示项分组
     * @param id
     * @param title
     * @param expanded
     * @param factories
     */
    addPaletteFunctions(id: string, title: string, expanded: boolean, factories: (() => HTMLAnchorElement)[]): void;
    /**
     * 添加工具箱显示项分组
     * @param id
     * @param title
     * @param expanded
     * @param onInit
     */
    addPalette(id: string, title: string, expanded: boolean, onInit: Function): void;
    /**
     * 创建工具箱显示项分组标题栏
     * @param label
     * @returns
     */
    createPaletteTitle(label: string): HTMLAnchorElement;
    /**
     * 添加工具箱显示项分组标题栏折叠处理器
     * @param title
     * @param content
     * @param onInit
     */
    addFoldingHandler(title: HTMLAnchorElement, content: HTMLDivElement, onInit: Function): void;
    /**
     * 创建工具箱显示项的工厂方法
     * @param cells
     * @param title
     * @param width
     * @param height
     * @param showLabel
     * @param showTitle
     * @param allowCellsInserted
     * @returns
     */
    createItemFactory(cells: MxGraphNS.mxCell[], title: string, width: number, height: number, showLabel?: boolean, showTitle?: boolean, allowCellsInserted?: boolean): () => HTMLAnchorElement;
    /**
     * 创建工具箱显示项
     * @param cells
     * @param title
     * @param showLabel
     * @param showTitle
     * @param width
     * @param height
     * @param allowCellsInserted
     * @returns
     */
    createItem(cells: MxGraphNS.mxCell[], title: string, showLabel: boolean, showTitle: boolean, width: number, height: number, allowCellsInserted: boolean): HTMLAnchorElement;
    /**
     * 创建显示项缩略图
     * @param cells
     * @param width
     * @param height
     * @param parent
     * @param title
     * @param showLabel
     * @param showTitle
     * @param realWidth
     * @param realHeight
     */
    createThumb(cells: MxGraphNS.mxCell[], width: number, height: number, parent: HTMLAnchorElement, title: string, showLabel: boolean, showTitle: boolean, realWidth: number, realHeight: number): void;
    /**
     * 显示提示信息
     * @param elt
     * @param cells
     * @param w
     * @param h
     * @param title
     * @param showLabel
     */
    showTooltip(elt: HTMLAnchorElement, cells: MxGraphNS.mxCell[], w: number, h: number, title: string, showLabel: boolean): void;
    /**
     * 隐藏提示信息
     */
    hideTooltip(): void;
    /**
     * 创建可拖动对象
     * @param elt
     * @param dropHandler
     * @param preview
     * @param cells
     * @param bounds
     * @returns
     */
    createDragSource(elt: HTMLAnchorElement, dropHandler: (graph: Graph, evt: PointerEvent, target: MxGraphNS.mxCell, x: number, y: number) => void, preview: HTMLDivElement, cells: MxGraphNS.mxCell[], bounds: MxGraphNS.mxRectangle): MxGraphNS.mxDragSource;
    /**
     * 创建拖拽对象落地后处理器
     * @param cells
     * @param allowSplit
     * @param allowCellsInserted
     * @param bounds
     * @returns
     */
    createDropHandler(cells: MxGraphNS.mxCell[], allowSplit: boolean, allowCellsInserted: boolean, bounds: MxGraphNS.mxRectangle): (graph: Graph, evt: PointerEvent, target: MxGraphNS.mxCell, x: number, y: number, force?: boolean) => void;
    /**
     * 创建拖拽源预览
     * @param width
     * @param height
     * @returns
     */
    createDragPreview(width: number, height: number): HTMLDivElement;
    /**
     * 销毁
     */
    destroy(): void;
}
