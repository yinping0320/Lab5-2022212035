import { BPMNEdge, BpmnModel, SequenceFlowState, FlowNode, SequenceFlow } from "@edp-pmf/bpmn-model";
import { MxGraphNS } from "@edp-pmf/mxgraph-ts";
import { Cell } from "./Cell";
import { NodeCell } from "./NodeCell";
/**
 * 边元素
 */
export declare abstract class EdgeCell extends Cell {
    edge: boolean;
    vertex: boolean;
    source: NodeCell;
    target: NodeCell;
    flowElement: SequenceFlow;
    diagramElement: BPMNEdge;
    /**
     * 不同状态下的连线颜色
     */
    abstract strokeColors: {
        /**
         * 默认
         */
        [SequenceFlowState.Default]: string;
        [state: string]: string;
    };
    /**
     * 与BpmnModel脱钩，删除起点和终点元素的Outgoings Incomings，从Process和Diagram删除元素
     * @returns
     */
    unbindBpmnModel(): any;
    createFlowElement(flowElt?: SequenceFlow): SequenceFlow;
    createDiagramElement(diagElt?: BPMNEdge): BPMNEdge;
    /**
     * flowNode1是否存在指向flowNode2的连线
     */
    existOutging(bpmnModel: BpmnModel, flowNode1: FlowNode, flowNode2: FlowNode): boolean;
    /**
     * flowNode1是否存在来自于flowNode2的连线
     */
    existIncoming(bpmnModel: BpmnModel, flowNode1: FlowNode, flowNode2: FlowNode): boolean;
    /**
     * 设置路径点
     * @param waypoints
     */
    setPoints(waypoints: MxGraphNS.mxPoint[]): void;
    /**
     * 设置标签坐标
     * @param mxRect
     */
    setBpmnLabel(mxRect: MxGraphNS.mxRectangle): void;
}
