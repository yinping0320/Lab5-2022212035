import { DiagramElement, FlowElement } from "@edp-pmf/bpmn-model";
import { mxCell, MxGraphNS } from "@edp-pmf/mxgraph-ts";
import { IEditorUi } from "../ui/IEditorUi";
import { FarrisPropConfigWithData } from "./farris-property-config/FarrisPropConfigWithData";
import { IFarrisPropertyPanelOperation } from "./farris-property-config/IFarrisPropertyPanelOperation";
/**
 * 画布元素类，分为边和节点两种
 */
export declare abstract class Cell extends mxCell implements IFarrisPropertyPanelOperation {
    /**
     * 名称，目前已支持多语名称，此值目前表示默认名称，即中文简体下的名称
     */
    abstract name: string;
    /**
     * 多语名称
     */
    nameLanguage: {
        [lang: string]: string;
    };
    /**
     * 类型ID
     */
    abstract clrTypeId: string;
    /**
     * 流程元素
     */
    flowElement: FlowElement;
    /**
     * 图元素
     */
    diagramElement: DiagramElement & {
        BpmnElementId: string;
    };
    /**
     * editorUi
     */
    editorUi: IEditorUi;
    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string);
    /**
     * 实例化FlowElement与DiagramElement，并绑定至BpmnModel
     * @param bpmnModel
     */
    bindBpmnModel(flowElt?: FlowElement, diagElt?: DiagramElement & {
        BpmnElementId: string;
    }): any;
    /**
     * 与BpmnModel脱钩，从Process和Diagram删除元素
     * @param bpmnModel
     */
    unbindBpmnModel(): any;
    /**
     * 实例化FlowElement,flowElt不为空时值为复制后的流程元素
     * @param flowElt
     */
    abstract createFlowElement(flowElt?: FlowElement): FlowElement;
    /**
     * 实例化DiagramElement,diagElt不为空时值为复制后的图元素
     * @param diagElt
     */
    abstract createDiagramElement(diagElt?: DiagramElement & {
        BpmnElementId: string;
    }): DiagramElement & {
        BpmnElementId: string;
    };
    clone(): Cell;
    /**
     * 克隆FlowElement
     * @param flowElt
     * @returns
     */
    cloneFlowElement(flowElt: FlowElement): FlowElement;
    /**
     * 克隆DiagramElement
     * @param diagElt
     * @returns
     */
    cloneDiagramElement(diagElt: DiagramElement): DiagramElement & {
        BpmnElementId: string;
    };
    /**
     * 获取属性配置
     */
    getPropConfig(): any;
    /**
     * 获取属性配置（Farris属性框专用）
     */
    getFarrisPropConfig(): FarrisPropConfigWithData;
    /**
     * 更新属性
     */
    updateProps(obj: any): any;
}
