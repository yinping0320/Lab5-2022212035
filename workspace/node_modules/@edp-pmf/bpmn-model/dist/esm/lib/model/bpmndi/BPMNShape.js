import { __extends } from "tslib";
import { BpmnModelHelper } from "../BpmnModelHelper";
import { ExtensionMethod } from "../ExtensionMethod";
import { PalUserTaskAttribute } from "../mex/PalUserTaskAttribute";
import { LabeledShape } from "../omgdi/LabeledShape";
import { ValidationError } from "../ValidationError";
import { ValidationLevel } from "../ValidationLevel";
import { BPMNLabel } from "./BPMNLabel";
var BPMNShape = /** @class */ (function (_super) {
    __extends(BPMNShape, _super);
    function BPMNShape(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.bpmndi.BPMNShape";
        return _this;
    }
    BPMNShape.prototype.NewInstance = function () {
        return new BPMNShape(this.Model);
    };
    BPMNShape.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.BpmnElementId = null;
        this.BpmnLabel = null;
    };
    BPMNShape.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "BpmnElementId", this.BpmnElementId);
        if (this.BpmnLabel != null) {
            BpmnModelHelper.SetAttributeValue(obj, "BpmnLabel", this.BpmnLabel.ConvertToJsonObject());
        }
        return obj;
    };
    BPMNShape.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.BpmnElementId = obj.BpmnElementId;
        if (obj.hasOwnProperty("BpmnLabel")) {
            this.BpmnLabel = new BPMNLabel(this.Model);
            this.BpmnLabel.LoadFromJsonObject(obj.BpmnLabel);
        }
    };
    BPMNShape.prototype.LoadExtensionElements = function (extensionElementsObj) {
        _super.prototype.LoadExtensionElements.call(this, extensionElementsObj);
        var palUserTaskAttributeObj = ExtensionMethod.GetAttributeValue(extensionElementsObj, "palUserTaskAttribute");
        if (palUserTaskAttributeObj != null) {
            this.palUserTaskAttribute = new PalUserTaskAttribute(this.Model);
            this.palUserTaskAttribute.LoadFromJsonObject(palUserTaskAttributeObj);
        }
    };
    BPMNShape.prototype.WriteExtensionElements = function (extensionElementsObj) {
        _super.prototype.WriteExtensionElements.call(this, extensionElementsObj);
        if (this.palUserTaskAttribute != null) {
            ExtensionMethod.SetAttributeValue(extensionElementsObj, "palUserTaskAttribute", this.palUserTaskAttribute.ConvertToJsonObject());
        }
    };
    BPMNShape.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        if (this.Model.GetHasIdElement(this.BpmnElementId) == null) {
            var error = new ValidationError();
            error.Element = this;
            error.ErrorLevel = ValidationLevel.$_Error;
            error.ErrorCode = "";
            error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + this.BpmnElementId + " \u7684\u5143\u7D20";
            errors.push(error);
        }
    };
    BPMNShape.MEXTAG = "shape.bpa";
    return BPMNShape;
}(LabeledShape));
export { BPMNShape };
//# sourceMappingURL=BPMNShape.js.map