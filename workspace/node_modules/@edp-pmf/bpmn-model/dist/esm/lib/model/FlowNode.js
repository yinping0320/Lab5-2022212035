import { __extends } from "tslib";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { FlowElement } from "./FlowElement";
import { GatewayType } from "./GatewayType";
import { ExecutionListener } from "./mex/ExecutionListener";
import { ObjectHelper } from "./ObjectHelper";
import { ValidationError } from "./ValidationError";
import { ValidationLevel } from "./ValidationLevel";
var FlowNode = /** @class */ (function (_super) {
    __extends(FlowNode, _super);
    function FlowNode(model) {
        var _this = _super.call(this, model) || this;
        _this.executionListeners = new Array();
        _this.IncomingGatewayType = GatewayType.Exclusive;
        _this.Incomings = new Array();
        _this.OutgoingGatewayType = GatewayType.Exclusive;
        _this.Outgoings = new Array();
        _this.MEXTAG = "bpmn.FlowNode";
        return _this;
    }
    FlowNode.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.executionListeners = new Array();
        this.IncomingGatewayType = GatewayType.Exclusive;
        this.Incomings = new Array();
        this.OutgoingGatewayType = GatewayType.Exclusive;
        this.Outgoings = new Array();
    };
    FlowNode.prototype.GetExecutionListeners = function () {
        return this.executionListeners;
    };
    FlowNode.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        if (ObjectHelper.extendFromClass(this, "Gateway") == false) {
            if (this.IncomingGatewayType != GatewayType.Exclusive)
                BpmnModelHelper.SetAttributeValue(obj, "IncomingGatewayType", this.IncomingGatewayType);
            if (this.OutgoingGatewayType != GatewayType.Exclusive)
                BpmnModelHelper.SetAttributeValue(obj, "OutgoingGatewayType", this.OutgoingGatewayType);
        }
        var incomings = new Array();
        for (var _i = 0, _a = this.Incomings; _i < _a.length; _i++) {
            var item = _a[_i];
            incomings.push(item);
        }
        if (incomings.length > 0)
            BpmnModelHelper.SetAttributeValue(obj, "incomings", incomings);
        var outgoings = new Array();
        for (var _b = 0, _c = this.Outgoings; _b < _c.length; _b++) {
            var item = _c[_b];
            outgoings.push(item);
        }
        if (outgoings.length > 0)
            BpmnModelHelper.SetAttributeValue(obj, "outgoings", outgoings);
        return obj;
    };
    FlowNode.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        if (ObjectHelper.extendFromClass(this, "Gateway") == false) {
            if (obj.hasOwnProperty("IncomingGatewayType"))
                this.IncomingGatewayType = obj.IncomingGatewayType;
            if (obj.hasOwnProperty("OutgoingGatewayType"))
                this.OutgoingGatewayType = obj.OutgoingGatewayType;
        }
        if (obj.hasOwnProperty("incomings") && Array.isArray(obj.incomings)) {
            for (var _i = 0, _a = obj.incomings; _i < _a.length; _i++) {
                var item = _a[_i];
                this.Incomings.push(item);
            }
        }
        if (obj.hasOwnProperty("outgoings") && Array.isArray(obj.outgoings)) {
            for (var _b = 0, _c = obj.outgoings; _b < _c.length; _b++) {
                var item = _c[_b];
                this.Outgoings.push(item);
            }
        }
    };
    FlowNode.prototype.GetExtensionElements4ConvertTo = function () {
        var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
        for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
            var item = _a[_i];
            item.MexTag = this.MEXTAG;
            list.push(item);
        }
        return list;
    };
    FlowNode.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
        _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
        for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
            var extensionElement = extensionElements_1[_i];
            if (extensionElement instanceof ExecutionListener && extensionElement.MexTag == this.MEXTAG) {
                this.executionListeners.push(extensionElement);
            }
        }
    };
    FlowNode.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
            var item = _a[_i];
            item.Validate(errors);
        }
        for (var _b = 0, _c = this.Incomings; _b < _c.length; _b++) {
            var item = _c[_b];
            var sequenceFlow = this.Model.GetHasIdElement(item);
            if (sequenceFlow == null) {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + item + " \u7684\u8FDE\u7EBF\u3002";
                errors.push(error);
            }
        }
        for (var _d = 0, _e = this.Outgoings; _d < _e.length; _d++) {
            var item = _e[_d];
            var sequenceFlow = this.Model.GetHasIdElement(item);
            if (sequenceFlow == null) {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + item + " \u7684\u8FDE\u7EBF\u3002";
                errors.push(error);
            }
        }
    };
    return FlowNode;
}(FlowElement));
export { FlowNode };
//# sourceMappingURL=FlowNode.js.map