import { __extends } from "tslib";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { DataInput } from "./DataInput";
import { DataOutput } from "./DataOutput";
import { RootElement } from "./RootElement";
import { ValidateHelper } from "./ValidateHelper";
var CallableElement = /** @class */ (function (_super) {
    __extends(CallableElement, _super);
    function CallableElement(model) {
        var _this = _super.call(this, model) || this;
        _this.dataInputDIc = {};
        _this.dataOutputDIc = {};
        return _this;
    }
    CallableElement.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.Name = null;
        this.dataInputDIc = {};
        this.dataOutputDIc = {};
    };
    CallableElement.prototype.AddDataInput = function (item) {
        this.CheckVariableElement(item);
        this.dataInputDIc[item.Id] = item;
        this.Model.AddHasIdElement(item);
    };
    CallableElement.prototype.GetDataInput = function (dataInputId) {
        if (dataInputId == null)
            return null;
        if (this.dataInputDIc.hasOwnProperty(dataInputId))
            return this.dataInputDIc[dataInputId];
        return null;
    };
    CallableElement.prototype.GetDataInputs = function () {
        var dataInputs = new Array();
        for (var dataInput in this.dataInputDIc) {
            dataInputs.push(this.dataInputDIc[dataInput]);
        }
        return dataInputs;
    };
    CallableElement.prototype.RemoveDataInput = function (dataInputId) {
        delete this.dataInputDIc[dataInputId];
        this.Model.RemoveHasIdElement(dataInputId);
    };
    CallableElement.prototype.AddDataOutput = function (item) {
        this.CheckVariableElement(item);
        this.dataOutputDIc[item.Id] = item;
        this.Model.AddHasIdElement(item);
    };
    CallableElement.prototype.GetDataOutput = function (dataOutputId) {
        if (dataOutputId == null)
            return null;
        if (this.dataInputDIc.hasOwnProperty(dataOutputId))
            return this.dataOutputDIc[dataOutputId];
        return null;
    };
    CallableElement.prototype.GetDataOutputs = function () {
        var dataOutputs = new Array();
        for (var dataOutput in this.dataOutputDIc) {
            dataOutputs.push(this.dataOutputDIc[dataOutput]);
        }
        return dataOutputs;
    };
    CallableElement.prototype.RemoveDataOutput = function (dataOutputId) {
        delete this.dataOutputDIc[dataOutputId];
        this.Model.RemoveHasIdElement(dataOutputId);
    };
    CallableElement.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
        BpmnModelHelper.SetAttributeValue(obj, "nameLanguage", this.NameLanguage);
        var dataInputs = new Array();
        for (var item in this.dataInputDIc) {
            var element = this.dataInputDIc[item].ConvertToJsonObject();
            dataInputs.push(element);
        }
        if (dataInputs.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "dataInputs", dataInputs);
        }
        var dataOutputs = new Array();
        for (var item in this.dataOutputDIc) {
            var element = this.dataOutputDIc[item].ConvertToJsonObject();
            dataOutputs.push(element);
        }
        if (dataOutputs.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "dataOutputs", dataOutputs);
        }
        return obj;
    };
    CallableElement.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Name = obj.Name;
        this.NameLanguage = obj.nameLanguage;
        if (obj.hasOwnProperty("dataInputs") && Array.isArray(obj.dataInputs)) {
            for (var _i = 0, _a = obj.dataInputs; _i < _a.length; _i++) {
                var item = _a[_i];
                var dataInput = new DataInput(this.Model);
                dataInput.LoadFromJsonObject(item);
                this.AddDataInput(dataInput);
            }
        }
        if (obj.hasOwnProperty("dataOutputs") && Array.isArray(obj.dataOutputs)) {
            for (var _b = 0, _c = obj.dataOutputs; _b < _c.length; _b++) {
                var item = _c[_b];
                var dataOutput = new DataOutput(this.Model);
                dataOutput.LoadFromJsonObject(item);
                this.AddDataOutput(dataOutput);
            }
        }
    };
    CallableElement.prototype.CheckVariableElement = function (variableElement) {
        ValidateHelper.CheckVariableElement(variableElement, this, this, null);
    };
    return CallableElement;
}(RootElement));
export { CallableElement };
//# sourceMappingURL=CallableElement.js.map