{"version":3,"file":"ThrowEvent.js","sourceRoot":"","sources":["../../../../src/lib/model/ThrowEvent.ts"],"names":[],"mappings":"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","sourcesContent":["import { BpmnModel } from \"./BpmnModel\";\r\nimport { BpmnModelHelper } from \"./BpmnModelHelper\";\r\nimport { DataInput } from \"./DataInput\";\r\nimport { DataInputAssociation } from \"./DataInputAssociation\";\r\nimport { IDataInputAssociationContainer } from \"./IDataInputAssociationContainer\";\r\nimport { IDataInputContainer } from \"./IDataInputContainer\";\r\nimport { IVariableElement } from \"./IVariableElement\";\r\nimport { ValidateHelper } from \"./ValidateHelper\";\r\nimport { ValidationError } from \"./ValidationError\";\r\nimport { Event } from \"./Event\";\r\n\r\nexport abstract class ThrowEvent extends Event implements IDataInputAssociationContainer, IDataInputContainer {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    private dataInputAssociationDic: { [Key: string]: DataInputAssociation } = {};\r\n    private dataInputDIc: { [Key: string]: DataInput } = {};\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.dataInputAssociationDic = {};\r\n        this.dataInputDIc = {};\r\n    }\r\n\r\n    AddDataInput(item: DataInput): void {\r\n        this.CheckVariableElement(item);\r\n        this.dataInputDIc[item.Id] = item;\r\n        this.Model.AddHasIdElement(item);\r\n    }\r\n\r\n    GetDataInput(dataInputId: string): DataInput {\r\n        if (dataInputId == null)\r\n            return null;\r\n\r\n        if (this.dataInputDIc.hasOwnProperty(\"dataInputId\"))\r\n            return this.dataInputDIc[dataInputId];\r\n\r\n        return null;\r\n    }\r\n\r\n    GetDataInputs(): Array<DataInput> {\r\n        let dataInputs: Array<DataInput> = new Array<DataInput>();\r\n        for (let item in this.dataInputDIc) {\r\n            dataInputs.push(this.dataInputDIc[item])\r\n        }\r\n        return dataInputs;\r\n    }\r\n\r\n    RemoveDataInput(dataInputId: string): void {\r\n        delete this.dataInputDIc[dataInputId];\r\n        this.Model.RemoveHasIdElement(dataInputId);\r\n    }\r\n\r\n    AddDataInputAssociation(association: DataInputAssociation): void {\r\n        ValidateHelper.CheckHasIdElement(association);\r\n        this.dataInputAssociationDic[association.Id] = association;\r\n        this.Model.AddHasIdElement(association);\r\n    }\r\n\r\n    GetDataInputAssociation(associationId: string): DataInputAssociation {\r\n        if (associationId == null)\r\n            return null;\r\n\r\n        if (this.dataInputAssociationDic.hasOwnProperty(\"associationId\"))\r\n            return this.dataInputAssociationDic[associationId];\r\n\r\n        return null;\r\n    }\r\n\r\n    GetDataInputAssociations(): Array<DataInputAssociation> {\r\n        let dataInputAssociations: Array<DataInputAssociation> = new Array<DataInputAssociation>();\r\n        for (let item in this.dataInputAssociationDic) {\r\n            dataInputAssociations.push(this.dataInputAssociationDic[item])\r\n        }\r\n        return dataInputAssociations;\r\n    }\r\n\r\n    RemoveDataInputAssociation(associationId: string): void {\r\n        delete this.dataInputAssociationDic[associationId];\r\n        this.Model.RemoveHasIdElement(associationId);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        let dataInputs: Array<any> = new Array<any>();\r\n        for (let item in this.dataInputDIc) {\r\n            let element = this.dataInputDIc[item].ConvertToJsonObject();\r\n            dataInputs.push(element);\r\n        }\r\n        if (dataInputs.length > 0) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"dataInputs\", dataInputs);\r\n        }\r\n\r\n        let dataInputAssociations: Array<any> = new Array<any>();\r\n        for (let item in this.dataInputAssociationDic) {\r\n            let element = this.dataInputAssociationDic[item].ConvertToJsonObject();\r\n            dataInputAssociations.push(element);\r\n        }\r\n        if (dataInputAssociations.length > 0) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"dataInputAssociations\", dataInputAssociations);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        if (obj.hasOwnProperty(\"dataInputs\") && Array.isArray(obj.dataInputs)) {\r\n            for (let item of obj.dataInputs) {\r\n                let dataInput = new DataInput(this.Model);\r\n                dataInput.LoadFromJsonObject(item);\r\n                this.AddDataInput(dataInput);\r\n            }\r\n        }\r\n\r\n        if (obj.hasOwnProperty(\"dataInputAssociations\") && Array.isArray(obj.dataInputAssociations)) {\r\n            for (let item in obj.dataInputAssociations) {\r\n                let dataInputAssociation = new DataInputAssociation(this.Model);\r\n                dataInputAssociation.LoadFromJsonObject(item);\r\n                this.AddDataInputAssociation(dataInputAssociation);\r\n            }\r\n        }\r\n    }\r\n\r\n    Validate(errors: Array<ValidationError>): void {\r\n        super.Validate(errors);\r\n\r\n        for (let item in this.dataInputDIc) {\r\n            this.dataInputDIc[item].Validate(errors);\r\n        }\r\n\r\n        for (let item in this.dataInputAssociationDic) {\r\n            this.dataInputAssociationDic[item].Validate(errors);\r\n        }\r\n    }\r\n\r\n    CheckVariableElement(variableElement: IVariableElement): void {\r\n        ValidateHelper.CheckVariableElement(variableElement, this, null, null);\r\n    }\r\n}"]}