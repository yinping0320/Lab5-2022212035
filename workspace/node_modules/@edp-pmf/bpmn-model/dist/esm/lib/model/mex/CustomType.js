import { __extends } from "tslib";
import { BpmnModelHelper } from "../BpmnModelHelper";
import { MexElement } from "./MexElement";
var CustomType = /** @class */ (function (_super) {
    __extends(CustomType, _super);
    function CustomType(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.Mex.CustomType";
        return _this;
    }
    CustomType.prototype.NewInstance = function () {
        return new CustomType(this.Model);
    };
    CustomType.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.AssemblyName = null;
        this.TypeName = null;
    };
    CustomType.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "AssemblyName", this.AssemblyName);
        BpmnModelHelper.SetAttributeValue(obj, "TypeName", this.TypeName);
        BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
        return obj;
    };
    CustomType.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.AssemblyName = obj.AssemblyName;
        this.TypeName = obj.TypeName;
    };
    CustomType.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
    };
    return CustomType;
}(MexElement));
export { CustomType };
//# sourceMappingURL=CustomType.js.map