import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { DataType } from "./mex/DataType";
import { ValidationError } from "./ValidationError";
import { ValidationLevel } from "./ValidationLevel";
var DataInput = /** @class */ (function (_super) {
    __extends(DataInput, _super);
    function DataInput(model) {
        var _this = _super.call(this, model) || this;
        _this.MEXTAG = "bpmn.DataInput";
        _this.IsAllowNull = true;
        _this.IsRequired = true;
        _this.IsCollection = false;
        return _this;
    }
    DataInput.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.IsAllowNull = true;
        this.IsRequired = true;
        this.Name = null;
        this.DataType = null;
        this.IsCollection = false;
    };
    DataInput.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
        BpmnModelHelper.SetAttributeValue(obj, "IsAllowNull", this.IsAllowNull);
        BpmnModelHelper.SetAttributeValue(obj, "IsRequired", this.IsRequired);
        BpmnModelHelper.SetAttributeValue(obj, "IsCollection", this.IsCollection);
        return obj;
    };
    DataInput.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Name = obj.Name;
        this.IsAllowNull = obj.IsAllowNull;
        this.IsRequired = obj.IsRequired;
        this.IsCollection = obj.IsCollection;
    };
    DataInput.prototype.GetExtensionElements4ConvertTo = function () {
        var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
        if (this.DataType != null) {
            this.DataType.MexTag = this.MEXTAG;
            list.push(this.DataType);
        }
        return list;
    };
    DataInput.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
        _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
        for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
            var extensionElement = extensionElements_1[_i];
            if (extensionElement instanceof DataType && extensionElement.MexTag == this.MEXTAG) {
                this.DataType = extensionElement;
            }
        }
    };
    DataInput.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        if (this.DataType != null) {
            this.DataType.Validate(errors);
        }
        else {
            var error = new ValidationError();
            error.Element = this;
            error.ErrorLevel = ValidationLevel.$_Error;
            error.ErrorCode = "";
            error.ErrorMessage = "没有设定变量类型";
            errors.push(error);
        }
    };
    return DataInput;
}(BaseElement));
export { DataInput };
//# sourceMappingURL=DataInput.js.map