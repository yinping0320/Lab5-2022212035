import { __extends } from "tslib";
import { BpmnModelJsonHelper } from "../BpmnModelJsonHelper";
import { ExtensionMethod } from "../ExtensionMethod";
import { PalParticipant } from "../participant";
import { MexElement } from "./MexElement";
var PalProcessAttribute = /** @class */ (function (_super) {
    __extends(PalProcessAttribute, _super);
    function PalProcessAttribute(model) {
        var _this = _super.call(this, model) || this;
        _this.layer = 0;
        _this.departments = [];
        _this.responsiblePersons = [];
        _this.executiveDepartments = [];
        _this.itSystemIds = [];
        _this.preProcessIds = [];
        _this.postProcessIds = [];
        return _this;
    }
    PalProcessAttribute.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.name = null;
        this.layer = 0;
        this.description = null;
        this.code = null;
        this.processType = null;
        this.input = null;
        this.output = null;
        this.departments = [];
        this.responsiblePersons = [];
        this.executiveDepartments = [];
        this.securityClass = null;
        this.itSystemIds = [];
        this.preProcessIds = [];
        this.postProcessIds = [];
    };
    PalProcessAttribute.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "name", this.name);
        ExtensionMethod.SetAttributeValue(obj, "layer", this.layer);
        ExtensionMethod.SetAttributeValue(obj, "description", this.description);
        ExtensionMethod.SetAttributeValue(obj, "code", this.code);
        ExtensionMethod.SetAttributeValue(obj, "processType", this.processType);
        ExtensionMethod.SetAttributeValue(obj, "input", this.input);
        ExtensionMethod.SetAttributeValue(obj, "output", this.output);
        ExtensionMethod.SetAttributeValue(obj, "departments", this.departments ? this.departments.map(function (it) { return it.ConvertToJsonObject(); }) : []);
        ExtensionMethod.SetAttributeValue(obj, "responsiblePersons", this.responsiblePersons ? this.responsiblePersons.map(function (it) { return it.ConvertToJsonObject(); }) : []);
        ExtensionMethod.SetAttributeValue(obj, "executiveDepartments", this.executiveDepartments ? this.executiveDepartments.map(function (it) { return it.ConvertToJsonObject(); }) : []);
        ExtensionMethod.SetAttributeValue(obj, "securityClass", this.securityClass);
        ExtensionMethod.SetAttributeValue(obj, "itSystemIds", BpmnModelJsonHelper.StringListToJson(this.itSystemIds));
        ExtensionMethod.SetAttributeValue(obj, "preProcessIds", BpmnModelJsonHelper.StringListToJson(this.preProcessIds));
        ExtensionMethod.SetAttributeValue(obj, "postProcessIds", BpmnModelJsonHelper.StringListToJson(this.postProcessIds));
        return obj;
    };
    PalProcessAttribute.prototype.LoadFromJsonObject = function (obj) {
        var _this = this;
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.name = ExtensionMethod.GetAttributeValue4String(obj, "name");
        this.layer = ExtensionMethod.GetAttributeValue4Int64(obj, "layer");
        this.description = ExtensionMethod.GetAttributeValue4String(obj, "description");
        this.code = ExtensionMethod.GetAttributeValue4String(obj, "code");
        this.processType = ExtensionMethod.GetAttributeValue4String(obj, "processType");
        this.input = ExtensionMethod.GetAttributeValue4String(obj, "input");
        this.output = ExtensionMethod.GetAttributeValue4String(obj, "output");
        var departmentObjs = ExtensionMethod.GetAttributeValue(obj, "departments");
        this.departments = departmentObjs ? departmentObjs.map(function (it) {
            var d = new PalParticipant(_this.Model);
            d.LoadFromJsonObject(it);
            return d;
        }) : [];
        var responsiblePersonObjs = ExtensionMethod.GetAttributeValue(obj, "responsiblePersons");
        this.responsiblePersons = responsiblePersonObjs ? responsiblePersonObjs.map(function (it) {
            var d = new PalParticipant(_this.Model);
            d.LoadFromJsonObject(it);
            return d;
        }) : [];
        var executiveDepartmentObjs = ExtensionMethod.GetAttributeValue(obj, "executiveDepartments");
        this.executiveDepartments = executiveDepartmentObjs ? executiveDepartmentObjs.map(function (it) {
            var d = new PalParticipant(_this.Model);
            d.LoadFromJsonObject(it);
            return d;
        }) : [];
        this.securityClass = ExtensionMethod.GetAttributeValue4String(obj, "securityClass");
        this.itSystemIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "itSystemIds"));
        this.preProcessIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "preProcessIds"));
        this.postProcessIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "postProcessIds"));
    };
    PalProcessAttribute.prototype.clone = function () {
        var c = new PalProcessAttribute(this.Model);
        c.name = this.name;
        c.layer = this.layer;
        c.description = this.description;
        c.code = this.code;
        c.processType = this.processType;
        c.input = this.input;
        c.output = this.output;
        c.departments = this.departments.map(function (it) { return it.clone(); });
        c.responsiblePersons = this.responsiblePersons.map(function (it) { return it.clone(); });
        c.executiveDepartments = this.executiveDepartments.map(function (it) { return it.clone(); });
        c.securityClass = this.securityClass;
        c.itSystemIds = this.itSystemIds ? this.itSystemIds.map(function (it) { return it; }) : [];
        c.preProcessIds = this.preProcessIds ? this.preProcessIds.map(function (it) { return it; }) : [];
        c.postProcessIds = this.postProcessIds ? this.postProcessIds.map(function (it) { return it; }) : [];
        return c;
    };
    return PalProcessAttribute;
}(MexElement));
export { PalProcessAttribute };
//# sourceMappingURL=PalProcessAttribute.js.map