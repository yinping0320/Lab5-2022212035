{"version":3,"file":"CompensateEventDefinition.js","sourceRoot":"","sources":["../../../../src/lib/model/CompensateEventDefinition.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAGpD;IAA+C,6CAAe;IAM1D,mCAAY,KAAgB;QAA5B,YACI,kBAAM,KAAK,CAAC,SACf;QAPQ,eAAS,GAAW,kBAAkB,CAAC;QAGhD,uBAAiB,GAAY,IAAI,CAAC;;IAIlC,CAAC;IAEM,uDAAmB,GAA1B;QACI,IAAI,GAAG,GAAQ,iBAAM,mBAAmB,WAAE,CAAC;QAC3C,eAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACxE,eAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpF,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,sDAAkB,GAAzB,UAA0B,GAAQ;QAC9B,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,wBAAwB,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;QAChF,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,yBAAyB,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;IACjG,CAAC;IAEM,4CAAQ,GAAf,UAAgB,MAA8B;QAC1C,iBAAM,QAAQ,YAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IAED,+CAAW,GAAX;QACI,IAAI,KAAK,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACjD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEL,gCAAC;AAAD,CAAC,AAlCD,CAA+C,eAAe,GAkC7D","sourcesContent":["import { BpmnModel } from \"./BpmnModel\";\r\nimport { EventDefinition } from \"./EventDefinition\";\r\nimport { ExtensionMethod } from \"./ExtensionMethod\";\r\nimport { ValidationError } from \"./ValidationError\";\r\n\r\nexport class CompensateEventDefinition extends EventDefinition {\r\n    readonly ClrTypeID: string = \"bpmn.Association\";\r\n\r\n    ActivityRef: string;\r\n    WaitForCompletion: boolean = true;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    public ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"ActivityRef\", this.ActivityRef);\r\n        ExtensionMethod.SetAttributeValue(obj, \"WaitForCompletion\", this.WaitForCompletion);\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n        this.ActivityRef = ExtensionMethod.GetAttributeValue4String(obj, \"ActivityRef\");\r\n        this.WaitForCompletion = ExtensionMethod.GetAttributeValue4Boolean(obj, \"WaitForCompletion\");\r\n    }\r\n\r\n    public Validate(errors: Array<ValidationError>): void {\r\n        super.Validate(errors);\r\n    }\r\n\r\n    NewInstance(): CompensateEventDefinition {\r\n        let clone = new CompensateEventDefinition(this.Model);\r\n        clone.ActivityRef = this.ActivityRef;\r\n        clone.WaitForCompletion = this.WaitForCompletion;\r\n        return clone;\r\n    }\r\n\r\n}"]}