import { __extends } from "tslib";
import { ExtensionElement } from "../ExtensionElement";
import { ExtensionMethod } from "../ExtensionMethod";
var Participant = /** @class */ (function (_super) {
    __extends(Participant, _super);
    function Participant(model) {
        return _super.call(this, model) || this;
    }
    Participant.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "Id", this.id);
        ExtensionMethod.SetAttributeValue(obj, "Name", this.name);
        return obj;
    };
    Participant.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.id = ExtensionMethod.GetAttributeValue4String(obj, "Id");
        this.name = ExtensionMethod.GetAttributeValue4String(obj, "Name");
    };
    Participant.prototype.clone = function () {
        var c = this.NewInstance();
        c.id = this.id;
        c.name = this.name;
        return c;
    };
    return Participant;
}(ExtensionElement));
export { Participant };
//# sourceMappingURL=Participant.js.map