{"version":3,"file":"SubProcessDataAssociations.js","sourceRoot":"","sources":["../../../../../src/lib/model/mex/SubProcessDataAssociations.ts"],"names":[],"mappings":"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","sourcesContent":["import { BpmnModel } from \"../BpmnModel\";\r\nimport { BpmnModelHelper } from \"../BpmnModelHelper\";\r\nimport { DataInputAssociation } from \"../DataInputAssociation\";\r\nimport { DataOutputAssociation } from \"../DataOutputAssociation\";\r\nimport { ValidateHelper } from \"../ValidateHelper\";\r\nimport { MexExtensionElement } from \"./MexExtensionElement\";\r\n\r\nexport class SubProcessDataAssociations extends MexExtensionElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    readonly ClrTypeID: string = \"bpmn.Mex.SubProcessDataAssociations\";\r\n    NewInstance(): SubProcessDataAssociations {\r\n        return new SubProcessDataAssociations(this.Model);\r\n    }\r\n\r\n    private dataInputAssociationDic: { [Key: string]: DataInputAssociation } = {};\r\n    private dataOutputAssociationDic: { [Key: string]: DataOutputAssociation } = {};\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.dataInputAssociationDic = {};\r\n        this.dataOutputAssociationDic = {};\r\n    }\r\n\r\n    AddDataInputAssociation(association: DataInputAssociation): void {\r\n        ValidateHelper.CheckHasIdElement(association);\r\n        this.dataInputAssociationDic[association.Id] = association;\r\n        this.Model.AddHasIdElement(association);\r\n    }\r\n\r\n    GetDataInputAssociation(associationId: string): DataInputAssociation {\r\n        if (associationId == null)\r\n            return null;\r\n\r\n        if (this.dataInputAssociationDic.hasOwnProperty(associationId))\r\n            return this.dataInputAssociationDic[associationId];\r\n\r\n        return null;\r\n    }\r\n\r\n    GetDataInputAssociations(): Array<DataInputAssociation> {\r\n        let dataInputAssociations = new Array<DataInputAssociation>();\r\n        for (let item in this.dataInputAssociationDic) {\r\n            dataInputAssociations.push(this.dataInputAssociationDic[item]);\r\n        }\r\n        return dataInputAssociations;\r\n    }\r\n\r\n    RemoveSubProcessDataInputAssociation(associationId: string): void {\r\n        delete this.dataInputAssociationDic[associationId];\r\n    }\r\n\r\n    AddDataOutputAssociation(association: DataOutputAssociation): void {\r\n        ValidateHelper.CheckHasIdElement(association);\r\n        this.dataOutputAssociationDic[association.Id] = association;\r\n        this.Model.AddHasIdElement(association);\r\n    }\r\n\r\n    GetDataOutputAssociation(associationId: string): DataOutputAssociation {\r\n        if (associationId == null)\r\n            return null;\r\n\r\n        if (this.dataOutputAssociationDic.hasOwnProperty(associationId))\r\n            return this.dataOutputAssociationDic[associationId];\r\n\r\n        return null;\r\n    }\r\n\r\n    GetDataOutputAssociations(): Array<DataOutputAssociation> {\r\n        let dataOutputAssociations = new Array<DataOutputAssociation>();\r\n        for (let item in this.dataOutputAssociationDic) {\r\n            dataOutputAssociations.push(this.dataOutputAssociationDic[item]);\r\n        }\r\n        return dataOutputAssociations;\r\n    }\r\n\r\n    RemoveDataOutputAssociation(associationId: string): void {\r\n        delete this.dataOutputAssociationDic[associationId];\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        let dataInputAssociations: Array<any> = new Array<any>();\r\n        for (let item in this.dataInputAssociationDic) {\r\n            dataInputAssociations.push(this.dataInputAssociationDic[item].ConvertToJsonObject());\r\n        }\r\n        if (dataInputAssociations.length > 0) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"dataInputAssociations\", dataInputAssociations)\r\n        }\r\n\r\n        let dataOutputAssociations: Array<any> = new Array<any>();\r\n        for (let item in this.dataOutputAssociationDic) {\r\n            dataOutputAssociations.push(this.dataOutputAssociationDic[item].ConvertToJsonObject());\r\n        }\r\n        if (dataOutputAssociations.length > 0) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"dataOutputAssociations\", dataOutputAssociations)\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        if (obj.hasOwnProperty(\"dataInputAssociations\") && Array.isArray(obj.dataInputAssociations)) {\r\n            for (let item of obj.dataInputAssociations) {\r\n                let dataInputAssociation: DataInputAssociation = new DataInputAssociation(this.Model);\r\n                dataInputAssociation.LoadFromJsonObject(item);\r\n                this.AddDataInputAssociation(dataInputAssociation);\r\n            }\r\n        }\r\n\r\n        if (obj.hasOwnProperty(\"dataOutputAssociations\") && Array.isArray(obj.dataOutputAssociations)) {\r\n            for (let item of obj.dataOutputAssociations) {\r\n                let dataOutputAssociation: DataOutputAssociation = new DataOutputAssociation(this.Model);\r\n                dataOutputAssociation.LoadFromJsonObject(item);\r\n                this.AddDataOutputAssociation(dataOutputAssociation);\r\n            }\r\n        }\r\n    }\r\n}"]}