import { __extends } from "tslib";
import { BpmnModelHelper } from "../BpmnModelHelper";
import { Diagram } from "../omgdi/Diagram";
import { ValidateHelper } from "../ValidateHelper";
import { BPMNLabelStyle } from "./BPMNLabelStyle";
import { BPMNPlane } from "./BPMNPlane";
var BPMNDiagram = /** @class */ (function (_super) {
    __extends(BPMNDiagram, _super);
    function BPMNDiagram(model) {
        var _this = _super.call(this, model) || this;
        _this.bpmnLabelStyleDic = {};
        _this.BpmnPlane = new BPMNPlane(model);
        return _this;
    }
    BPMNDiagram.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.BpmnPlane = null;
        this.bpmnLabelStyleDic = {};
    };
    BPMNDiagram.prototype.AddBPMNLabelStyle = function (element) {
        this.CheckBPMNLabelStyle(element);
        this.bpmnLabelStyleDic[element.Id] = element;
        this.Model.AddHasIdElement(element);
    };
    BPMNDiagram.prototype.GetBPMNLabelStyle = function (elementId) {
        if (elementId == null)
            return null;
        if (this.bpmnLabelStyleDic.hasOwnProperty(elementId))
            return this.bpmnLabelStyleDic[elementId];
        return null;
    };
    BPMNDiagram.prototype.GetBPMNLabelStyles = function () {
        var bpmnLabelStyles = new Array();
        for (var item in this.bpmnLabelStyleDic) {
            bpmnLabelStyles.push(this.bpmnLabelStyleDic[item]);
        }
        return bpmnLabelStyles;
    };
    BPMNDiagram.prototype.RemoveBPMNLabelStyle = function (elementId) {
        delete this.bpmnLabelStyleDic[elementId];
    };
    BPMNDiagram.prototype.CheckBPMNLabelStyle = function (element) {
        ValidateHelper.CheckHasIdElement(element);
    };
    BPMNDiagram.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        if (this.BpmnPlane != null) {
            BpmnModelHelper.SetAttributeValue(obj, "BpmnPlane", this.BpmnPlane.ConvertToJsonObject());
        }
        var bpmnLabelStyles = new Array();
        for (var item in this.bpmnLabelStyleDic) {
            var bpmnLabelStyle = this.bpmnLabelStyleDic[item].ConvertToJsonObject();
            bpmnLabelStyles.push(bpmnLabelStyle);
        }
        if (bpmnLabelStyles.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "bpmnLabelStyles", bpmnLabelStyles);
        }
        return obj;
    };
    BPMNDiagram.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        if (obj.hasOwnProperty("BpmnPlane")) {
            this.BpmnPlane = new BPMNPlane(this.Model);
            this.BpmnPlane.LoadFromJsonObject(obj.BpmnPlane);
        }
        if (obj.hasOwnProperty("bpmnLabelStyles") && Array.isArray(obj.bpmnLabelStyles)) {
            for (var _i = 0, _a = obj.bpmnLabelStyles; _i < _a.length; _i++) {
                var item = _a[_i];
                var bpmnLabelStyle = new BPMNLabelStyle(this.Model);
                bpmnLabelStyle.LoadFromJsonObject(item);
                this.AddBPMNLabelStyle(bpmnLabelStyle);
            }
        }
    };
    return BPMNDiagram;
}(Diagram));
export { BPMNDiagram };
//# sourceMappingURL=BPMNDiagram.js.map