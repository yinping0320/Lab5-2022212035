import { __extends } from "tslib";
import { BpmnModelHelper } from "../BpmnModelHelper";
import { RectangularLine } from "../mex/RectangularLine";
import { LabeledEdge } from "../omgdi/LabeledEdge";
import { ValidationError } from "../ValidationError";
import { ValidationLevel } from "../ValidationLevel";
import { BPMNLabel } from "./BPMNLabel";
import { SequenceFlowLineType } from "./SequenceFlowLineType";
var BPMNEdge = /** @class */ (function (_super) {
    __extends(BPMNEdge, _super);
    function BPMNEdge(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.bpmndi.BPMNEdge";
        _this.LineType = SequenceFlowLineType.PolyLine;
        return _this;
    }
    BPMNEdge.prototype.NewInstance = function () {
        return new BPMNEdge(this.Model);
    };
    BPMNEdge.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.BpmnElementId = null;
        this.LineType = SequenceFlowLineType.PolyLine;
        this.SourceShapeElementId = null;
        this.TargetShapeElementId = null;
        this.BpmnLabel = null;
        this.RectangularLine = null;
    };
    BPMNEdge.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "BpmnElementId", this.BpmnElementId);
        BpmnModelHelper.SetAttributeValue(obj, "SourceShapeElementId", this.SourceShapeElementId);
        BpmnModelHelper.SetAttributeValue(obj, "TargetShapeElementId", this.TargetShapeElementId);
        BpmnModelHelper.SetAttributeValue(obj, "LineType", this.LineType);
        if (this.BpmnLabel != null) {
            BpmnModelHelper.SetAttributeValue(obj, "BpmnLabel", this.BpmnLabel.ConvertToJsonObject());
        }
        return obj;
    };
    BPMNEdge.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.BpmnElementId = obj.BpmnElementId;
        this.SourceShapeElementId = obj.SourceShapeElementId;
        this.TargetShapeElementId = obj.TargetShapeElementId;
        this.LineType = obj.LineType;
        if (obj.hasOwnProperty("BpmnLabel")) {
            this.BpmnLabel = new BPMNLabel(this.Model);
            this.BpmnLabel.LoadFromJsonObject(obj.BpmnLabel);
        }
    };
    BPMNEdge.prototype.LoadExtensionElements = function (extensionElementsObj) {
        _super.prototype.LoadExtensionElements.call(this, extensionElementsObj);
        if (extensionElementsObj.hasOwnProperty("RectangularLine")) {
            this.RectangularLine = new RectangularLine(this.Model);
            this.RectangularLine.LoadFromJsonObject(extensionElementsObj.RectangularLine);
        }
    };
    BPMNEdge.prototype.WriteExtensionElements = function (extensionElementsObj) {
        _super.prototype.WriteExtensionElements.call(this, extensionElementsObj);
        switch (this.LineType) {
            case SequenceFlowLineType.RectangularLineType:
                BpmnModelHelper.SetAttributeValue(extensionElementsObj, "RectangularLine", this.RectangularLine.ConvertToJsonObject());
                break;
            default:
                break;
        }
    };
    BPMNEdge.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        if (this.Model.GetHasIdElement(this.BpmnElementId) == null) {
            var error = new ValidationError();
            error.Element = this;
            error.ErrorLevel = ValidationLevel.$_Error;
            error.ErrorCode = "";
            error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + this.BpmnElementId + " \u7684\u5143\u7D20";
            errors.push(error);
        }
    };
    return BPMNEdge;
}(LabeledEdge));
export { BPMNEdge };
//# sourceMappingURL=BPMNEdge.js.map