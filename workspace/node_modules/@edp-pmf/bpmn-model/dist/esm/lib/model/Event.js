import { __extends } from "tslib";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { EventDefinition } from "./EventDefinition";
import { ExtensionMethod } from "./ExtensionMethod";
import { FlowNode } from "./FlowNode";
var Event = /** @class */ (function (_super) {
    __extends(Event, _super);
    function Event(model) {
        var _this = _super.call(this, model) || this;
        _this.EventDefinitions = new Array();
        return _this;
    }
    Event.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        var eventDefinitionsJsonArray = new Array();
        for (var _i = 0, _a = this.EventDefinitions; _i < _a.length; _i++) {
            var item = _a[_i];
            eventDefinitionsJsonArray.push(item.ConvertToJsonObject());
        }
        if (eventDefinitionsJsonArray.length > 0) {
            ExtensionMethod.SetAttributeValue(obj, "eventDefinitions", eventDefinitionsJsonArray);
        }
        return obj;
    };
    Event.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        var eventDefinitionsElement = ExtensionMethod.GetAttributeValue(obj, "eventDefinitions");
        if (eventDefinitionsElement instanceof Array) {
            var eventDefinitionsJsonArray = eventDefinitionsElement;
            var tempVar = null;
            for (var _i = 0, eventDefinitionsJsonArray_1 = eventDefinitionsJsonArray; _i < eventDefinitionsJsonArray_1.length; _i++) {
                var item = eventDefinitionsJsonArray_1[_i];
                var type = BpmnModelHelper.GetElementType(ExtensionMethod.GetAttributeValue4String(item, "ClrTypeID"));
                if (type == null) {
                    continue;
                }
                tempVar = type.NewInstance();
                tempVar.Model = this.Model;
                var eventDefinition = (tempVar instanceof EventDefinition) ? tempVar : null;
                if (eventDefinition == null) {
                    continue;
                }
                eventDefinition.LoadFromJsonObject(item);
                this.EventDefinitions.push(eventDefinition);
            }
        }
    };
    return Event;
}(FlowNode));
export { Event };
//# sourceMappingURL=Event.js.map