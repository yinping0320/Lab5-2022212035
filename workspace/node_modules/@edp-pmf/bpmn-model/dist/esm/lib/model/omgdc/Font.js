import { __extends } from "tslib";
import { BpmnModelHelper } from "../BpmnModelHelper";
import { OmgdcElement } from "./OmgdcElement";
var Font = /** @class */ (function (_super) {
    __extends(Font, _super);
    function Font(model) {
        var _this = _super.call(this, model) || this;
        _this.IsBold = false;
        _this.IsItalic = false;
        _this.IsStrikeThrough = false;
        _this.IsUnderline = false;
        return _this;
    }
    Font.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.IsBold = false;
        this.IsItalic = false;
        this.IsStrikeThrough = false;
        this.IsUnderline = false;
        this.Name = null;
        this.Size = 0;
    };
    Font.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "IsBold", this.IsBold);
        BpmnModelHelper.SetAttributeValue(obj, "IsItalic", this.IsItalic);
        BpmnModelHelper.SetAttributeValue(obj, "IsStrikeThrough", this.IsStrikeThrough);
        BpmnModelHelper.SetAttributeValue(obj, "IsUnderline", this.IsUnderline);
        BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
        BpmnModelHelper.SetAttributeValue(obj, "Size", this.Size);
        return obj;
    };
    Font.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.IsBold = obj.IsBold;
        this.IsItalic = obj.IsItalic;
        this.IsStrikeThrough = obj.IsStrikeThrough;
        this.IsUnderline = obj.IsUnderline;
        this.Name = obj.Name;
        this.Size = obj.Size;
    };
    return Font;
}(OmgdcElement));
export { Font };
//# sourceMappingURL=Font.js.map