import { __extends } from "tslib";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { CallableElement } from "./CallableElement";
import { DataObject } from "./DataObject";
import { FlowNode } from "./FlowNode";
import { ExecutionListener } from "./mex/ExecutionListener";
import { SequenceFlow } from "./SequenceFlow";
import { ValidateHelper } from "./ValidateHelper";
var Process = /** @class */ (function (_super) {
    __extends(Process, _super);
    function Process(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.Process";
        _this.flowElementsDic = {};
        _this.resourceRoleDIc = {};
        _this.executionListeners = new Array();
        _this.extensionElements = new Array();
        _this.MEXTAG = "bpmn.Process";
        return _this;
    }
    Process.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.Key = null;
        this.flowElementsDic = {};
        this.resourceRoleDIc = {};
        this.executionListeners = new Array();
        this.extensionElements = new Array();
    };
    Process.prototype.NewInstance = function () {
        return new Process(this.Model);
    };
    Process.prototype.AddDataObject = function (dataObject) {
        this.CheckVariableElement(dataObject);
        this.InnerAddFlowElement(dataObject);
    };
    Process.prototype.GetDataObject = function (dataObjectId) {
        if (dataObjectId == null)
            return null;
        if (this.flowElementsDic.hasOwnProperty(dataObjectId) && this.flowElementsDic[dataObjectId] instanceof DataObject)
            return this.flowElementsDic[dataObjectId];
        return null;
    };
    Process.prototype.GetDataObjects = function () {
        var dataObjects = new Array();
        for (var item in this.flowElementsDic) {
            //let obj: DataObject = this.flowElementsDic[item] as DataObject;
            //if (obj != null)
            //    dataObjects.push(obj);
            if (this.flowElementsDic[item] instanceof DataObject) {
                dataObjects.push(this.flowElementsDic[item]);
            }
        }
        return dataObjects;
    };
    Process.prototype.RemoveDataObject = function (dataObjectId) {
        this.RemoveFlowElement(dataObjectId);
    };
    Process.prototype.AddFlowElement = function (element) {
        if (element instanceof DataObject)
            throw new Error("请使用 AddDataObjcet 方法添加流程变量");
        ValidateHelper.CheckHasIdElement(element);
        this.InnerAddFlowElement(element);
    };
    Process.prototype.GetFlowElement = function (elementId) {
        if (elementId == null)
            return null;
        if (this.flowElementsDic.hasOwnProperty(elementId))
            return this.flowElementsDic[elementId];
        return null;
    };
    Process.prototype.GetFlowElements = function () {
        return this.flowElementsDic;
    };
    Process.prototype.RemoveFlowElement = function (elementId) {
        var element = this.GetFlowElement(elementId);
        if (element == null)
            return;
        if (element instanceof SequenceFlow) {
            this.RemoveSequenceFlow(element);
        }
        if (element instanceof FlowNode) {
            this.RemoveFlowNode(element);
        }
        if (element instanceof DataObject) {
            this.InnerRemoveDataObject(element);
        }
        delete this.flowElementsDic[elementId];
        this.Model.RemoveHasIdElement(elementId);
    };
    Process.prototype.GetExecutionListeners = function () {
        return this.executionListeners;
    };
    Process.prototype.AddResourceRole = function (item) {
        this.resourceRoleDIc[item.Id] = item;
        this.Model.AddHasIdElement(item);
    };
    Process.prototype.GetResourceRole = function (resourceRoleId) {
        if (resourceRoleId == null)
            return null;
        if (this.resourceRoleDIc.hasOwnProperty(resourceRoleId))
            return this.resourceRoleDIc[resourceRoleId];
        return null;
    };
    Process.prototype.GetResourceRoles = function () {
        var resourceRoles = new Array();
        for (var item in this.resourceRoleDIc) {
            resourceRoles.push(this.resourceRoleDIc[item]);
        }
        return resourceRoles;
    };
    Process.prototype.RemoveResourceRole = function (resourceRoleId) {
        delete this.resourceRoleDIc[resourceRoleId];
        this.Model.RemoveHasIdElement(resourceRoleId);
    };
    Process.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Key", this.Key);
        var flowElements = [];
        for (var elementId in this.flowElementsDic) {
            var element = this.flowElementsDic[elementId].ConvertToJsonObject();
            flowElements.push(element);
        }
        BpmnModelHelper.SetAttributeValue(obj, "flowElements", flowElements);
        var resourceRoles = new Array();
        for (var item in this.resourceRoleDIc) {
            resourceRoles.push(this.resourceRoleDIc[item].ConvertToJsonObject());
        }
        if (resourceRoles.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "resourceRoles", resourceRoles);
        }
        return obj;
    };
    Process.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Key = obj.Key;
        if (obj.hasOwnProperty("flowElements") && Array.isArray(obj.flowElements)) {
            for (var _i = 0, _a = obj.flowElements; _i < _a.length; _i++) {
                var elementObj = _a[_i];
                var element = BpmnModelHelper.GetElementType(elementObj.ClrTypeID);
                if (element == null)
                    continue;
                element.Model = this.Model;
                element.LoadFromJsonObject(elementObj);
                this.InnerAddFlowElement(element);
            }
        }
        if (obj.hasOwnProperty("resourceRoles") && Array.isArray(obj.resourceRoles)) {
            for (var _b = 0, _c = obj.resourceRoles; _b < _c.length; _b++) {
                var item = _c[_b];
                var resourceRole = BpmnModelHelper.GetElementType(item.ClrTypeID);
                if (resourceRole == null)
                    continue;
                resourceRole.LoadFromJsonObject(item);
                this.AddResourceRole(resourceRole);
            }
        }
    };
    Process.prototype.GetExtensionElements4ConvertTo = function () {
        var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
        for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
            var item = _a[_i];
            item.MexTag = this.MEXTAG;
            list.push(item);
        }
        for (var _b = 0, _c = this.extensionElements; _b < _c.length; _b++) {
            var item = _c[_b];
            item.MexTag = this.MEXTAG;
            list.push(item);
        }
        return list;
    };
    Process.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
        _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
        for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
            var extensionElement = extensionElements_1[_i];
            if ((extensionElement instanceof ExecutionListener) && extensionElement.MexTag == this.MEXTAG) {
                this.executionListeners.push(extensionElement);
            }
            else if (extensionElement.MexTag == this.MEXTAG) {
                this.extensionElements.push(extensionElement);
            }
        }
    };
    Process.prototype.GetExtensionElements = function () {
        return this.extensionElements;
    };
    Process.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
            var item = _a[_i];
            item.Validate(errors);
        }
        for (var item in this.flowElementsDic) {
            this.flowElementsDic[item].Validate(errors);
        }
        ValidateHelper.ValidateProcess(this, errors);
    };
    Process.prototype.CheckVariableElement = function (variableElement) {
        _super.prototype.CheckVariableElement.call(this, variableElement);
        ValidateHelper.CheckVariableElement(variableElement, null, null, this);
    };
    Process.prototype.InnerAddFlowElement = function (element) {
        this.flowElementsDic[element.Id] = element;
        this.Model.AddHasIdElement(element);
    };
    Process.prototype.RemoveSequenceFlow = function (element) {
    };
    Process.prototype.InnerRemoveDataObject = function (element) {
    };
    Process.prototype.RemoveFlowNode = function (element) {
        var list = new Array();
        for (var item in this.GetFlowElements()) {
            var itemElement = this.GetFlowElements()[item];
            if (itemElement == null)
                continue;
            if (itemElement instanceof SequenceFlow && (itemElement.SourceRef == element.Id || itemElement.TargetRef == element.Id))
                list.push(itemElement);
        }
        for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
            var item = list_1[_i];
            delete this.flowElementsDic[item.Id];
        }
    };
    return Process;
}(CallableElement));
export { Process };
//# sourceMappingURL=Process.js.map