import { __extends } from "tslib";
import { Expression } from "./Expression";
import { LoopCharacteristics } from "./LoopCharacteristics";
import { ExtensionCompletionConditionRuler } from "./mex/ExtensionCompletionConditionRuler";
import { ExtensionMethod } from "./ExtensionMethod";
var MultiInstanceLoopCharacteristics = /** @class */ (function (_super) {
    __extends(MultiInstanceLoopCharacteristics, _super);
    function MultiInstanceLoopCharacteristics(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = MultiInstanceLoopCharacteristics.Clr_Type_ID;
        _this.completionConditionRules = new Array();
        _this.MEXTAG = "bpmn.MultiInstanceLoopCharacteristics";
        return _this;
    }
    MultiInstanceLoopCharacteristics.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.loopCardinality = null;
        this.completionCondition = null;
        this.completionConditionRules = new Array();
    };
    MultiInstanceLoopCharacteristics.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "Enable", this.enable);
        ExtensionMethod.SetAttributeValue(obj, "IsSequential", this.sequential);
        if (this.loopCardinality != null) {
            ExtensionMethod.SetAttributeValue(obj, "LoopCardinality", this.loopCardinality.ConvertToJsonObject());
        }
        if (this.completionCondition != null) {
            ExtensionMethod.SetAttributeValue(obj, "CompletionCondition", this.completionCondition.ConvertToJsonObject());
        }
        return obj;
    };
    MultiInstanceLoopCharacteristics.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.enable = obj.Enable;
        this.sequential = obj.IsSequential;
        if (obj.hasOwnProperty("LoopCardinality")) {
            this.loopCardinality = new Expression(this.Model);
            this.loopCardinality.LoadFromJsonObject(obj.LoopCardinality);
        }
        if (obj.hasOwnProperty("CompletionCondition")) {
            this.completionCondition = new Expression(this.Model);
            this.completionCondition.LoadFromJsonObject(obj.CompletionCondition);
        }
    };
    MultiInstanceLoopCharacteristics.prototype.GetExtensionElements4ConvertTo = function () {
        var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
        if (this.completionConditionRules) {
            for (var _i = 0, _a = this.completionConditionRules; _i < _a.length; _i++) {
                var item = _a[_i];
                item.MexTag = this.MEXTAG;
                list.push(item);
            }
        }
        return list;
    };
    MultiInstanceLoopCharacteristics.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
        _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
        for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
            var extensionElement = extensionElements_1[_i];
            if (extensionElement instanceof ExtensionCompletionConditionRuler && extensionElement.MexTag == this.MEXTAG) {
                this.completionConditionRules.push(extensionElement);
            }
        }
    };
    MultiInstanceLoopCharacteristics.prototype.NewInstance = function () {
        return new MultiInstanceLoopCharacteristics(this.Model);
    };
    MultiInstanceLoopCharacteristics.prototype.clone = function () {
        var loopCharacteristics = new MultiInstanceLoopCharacteristics(this.Model);
        loopCharacteristics.enable = this.enable;
        loopCharacteristics.sequential = this.sequential;
        if (this.loopCardinality) {
            loopCharacteristics.loopCardinality = this.loopCardinality.clone();
        }
        loopCharacteristics.completionCondition = this.completionCondition;
        loopCharacteristics.completionConditionRules = new Array();
        if (this.completionConditionRules) {
            this.completionConditionRules.forEach(function (com) { return loopCharacteristics.completionConditionRules.push(com.clone()); });
        }
        // loopCharacteristics.completionConditionRules = this.completionConditionRules;
        return loopCharacteristics;
    };
    MultiInstanceLoopCharacteristics.Clr_Type_ID = "wf.MultiInstanceLoopCharacteristics";
    MultiInstanceLoopCharacteristics.MEXTAG = "wf.CallActivitySubProcess";
    return MultiInstanceLoopCharacteristics;
}(LoopCharacteristics));
export { MultiInstanceLoopCharacteristics };
//# sourceMappingURL=MultiInstanceLoopCharacteristics.js.map