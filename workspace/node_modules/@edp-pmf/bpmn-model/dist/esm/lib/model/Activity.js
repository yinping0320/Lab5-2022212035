import { __extends } from "tslib";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { DataInput } from "./DataInput";
import { DataInputAssociation } from "./DataInputAssociation";
import { DataOutput } from "./DataOutput";
import { DataOutputAssociation } from "./DataOutputAssociation";
import { FlowNode } from "./FlowNode";
import { MultiInstanceLoopCharacteristics } from "./MultiInstanceLoopCharacteristics";
import { ValidateHelper } from "./ValidateHelper";
var Activity = /** @class */ (function (_super) {
    __extends(Activity, _super);
    function Activity(model) {
        var _this = _super.call(this, model) || this;
        _this.dataInputAssociationDic = {};
        _this.dataInputDIc = {};
        _this.dataOutputAssociationDic = {};
        _this.dataOutputDIc = {};
        _this.resourceRoleDIc = {};
        _this.IsForCompensation = false;
        return _this;
    }
    Activity.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.Default = null;
        this.LoopCharacteristics = null;
        this.IsForCompensation = false;
        this.dataInputAssociationDic = {};
        this.dataInputDIc = {};
        this.dataOutputAssociationDic = {};
        this.dataOutputDIc = {};
        this.resourceRoleDIc = {};
    };
    Activity.prototype.AddDataInput = function (item) {
        this.CheckVariableElement(item);
        this.dataInputDIc[item.Id] = item;
        this.Model.AddHasIdElement(item);
    };
    Activity.prototype.GetDataInput = function (dataInputId) {
        if (dataInputId == null)
            return null;
        if (this.dataInputDIc.hasOwnProperty("dataInputId"))
            return this.dataInputDIc[dataInputId];
        return null;
    };
    Activity.prototype.GetDataInputs = function () {
        var dataInputs = new Array();
        for (var item in this.dataInputDIc) {
            dataInputs.push(this.dataInputDIc[item]);
        }
        return dataInputs;
    };
    Activity.prototype.RemoveDataInput = function (dataInputId) {
        delete this.dataInputDIc[dataInputId];
        this.Model.RemoveHasIdElement(dataInputId);
    };
    Activity.prototype.AddDataOutput = function (item) {
        this.CheckVariableElement(item);
        this.dataOutputDIc[item.Id] = item;
        this.Model.AddHasIdElement(item);
    };
    Activity.prototype.GetDataOutput = function (dataOutputId) {
        if (dataOutputId == null)
            return null;
        if (this.dataOutputDIc.hasOwnProperty("dataOutputId"))
            return this.dataOutputDIc[dataOutputId];
        return null;
    };
    Activity.prototype.GetDataOutputs = function () {
        var dataOutputs = new Array();
        for (var item in this.dataOutputDIc) {
            dataOutputs.push(this.dataOutputDIc[item]);
        }
        return dataOutputs;
    };
    Activity.prototype.RemoveDataOutput = function (dataOutputId) {
        delete this.dataOutputDIc[dataOutputId];
        this.Model.RemoveHasIdElement(dataOutputId);
    };
    Activity.prototype.AddDataInputAssociation = function (association) {
        ValidateHelper.CheckHasIdElement(association);
        this.dataInputAssociationDic[association.Id] = association;
        this.Model.AddHasIdElement(association);
    };
    Activity.prototype.GetDataInputAssociation = function (associationId) {
        if (associationId == null)
            return null;
        if (this.dataInputAssociationDic.hasOwnProperty("associationId"))
            return this.dataInputAssociationDic[associationId];
        return null;
    };
    Activity.prototype.GetDataInputAssociations = function () {
        var dataInputAssociations = new Array();
        for (var item in this.dataInputAssociationDic) {
            dataInputAssociations.push(this.dataInputAssociationDic[item]);
        }
        return dataInputAssociations;
    };
    Activity.prototype.RemoveDataInputAssociation = function (associationId) {
        delete this.dataInputAssociationDic[associationId];
        this.Model.RemoveHasIdElement(associationId);
    };
    Activity.prototype.AddDataOutputAssociation = function (association) {
        ValidateHelper.CheckHasIdElement(association);
        this.dataOutputAssociationDic[association.Id] = association;
        this.Model.AddHasIdElement(association);
    };
    Activity.prototype.GetDataOutputAssociation = function (associationId) {
        if (associationId == null)
            return null;
        if (this.dataOutputAssociationDic.hasOwnProperty("associationId"))
            return this.dataOutputAssociationDic[associationId];
        return null;
    };
    Activity.prototype.GetDataOutputAssociations = function () {
        var dataOutputAssociations = new Array();
        for (var item in this.dataOutputAssociationDic) {
            dataOutputAssociations.push(this.dataOutputAssociationDic[item]);
        }
        return dataOutputAssociations;
    };
    Activity.prototype.RemoveDataOutputAssociation = function (associationId) {
        delete this.dataOutputAssociationDic[associationId];
        this.Model.RemoveHasIdElement(associationId);
    };
    Activity.prototype.AddResourceRole = function (item) {
        this.resourceRoleDIc[item.Id] = item;
        this.Model.AddHasIdElement(item);
    };
    Activity.prototype.GetResourceRole = function (resourceRoleId) {
        if (resourceRoleId == null)
            return null;
        if (this.resourceRoleDIc.hasOwnProperty(resourceRoleId))
            return this.resourceRoleDIc[resourceRoleId];
        return null;
    };
    Activity.prototype.GetResourceRoles = function () {
        var resourceRoles = new Array();
        for (var item in this.resourceRoleDIc) {
            resourceRoles.push(this.resourceRoleDIc[item]);
        }
        return resourceRoles;
    };
    Activity.prototype.RemoveResourceRole = function (resourceRoleId) {
        delete this.resourceRoleDIc[resourceRoleId];
        this.Model.RemoveHasIdElement(resourceRoleId);
    };
    Activity.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Default", this.Default);
        BpmnModelHelper.SetAttributeValue(obj, "IsForCompensation", this.IsForCompensation);
        var dataInputs = new Array();
        for (var item in this.dataInputDIc) {
            var element = this.dataInputDIc[item].ConvertToJsonObject();
            dataInputs.push(element);
        }
        if (dataInputs.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "dataInputs", dataInputs);
        }
        var dataOutputs = new Array();
        for (var item in this.dataOutputDIc) {
            var element = this.dataOutputDIc[item].ConvertToJsonObject();
            dataOutputs.push(element);
        }
        if (dataOutputs.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "dataOutputs", dataOutputs);
        }
        var dataInputAssociations = new Array();
        for (var item in this.dataInputAssociationDic) {
            var element = this.dataInputAssociationDic[item].ConvertToJsonObject();
            dataInputAssociations.push(element);
        }
        if (dataInputAssociations.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "dataInputAssociations", dataInputAssociations);
        }
        var dataOutputAssociations = new Array();
        for (var item in this.dataOutputAssociationDic) {
            var element = this.dataOutputAssociationDic[item].ConvertToJsonObject();
            dataOutputAssociations.push(element);
        }
        if (dataOutputAssociations.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "dataOutputAssociations", dataOutputAssociations);
        }
        var resourceRoles = new Array();
        for (var item in this.resourceRoleDIc) {
            resourceRoles.push(this.resourceRoleDIc[item].ConvertToJsonObject());
        }
        if (resourceRoles.length > 0) {
            BpmnModelHelper.SetAttributeValue(obj, "resourceRoles", resourceRoles);
        }
        if (this.LoopCharacteristics != null) {
            BpmnModelHelper.SetAttributeValue(obj, "loopCharacteristics", this.LoopCharacteristics.ConvertToJsonObject());
        }
        return obj;
    };
    Activity.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Default = obj.Default;
        this.IsForCompensation = obj.IsForCompensation;
        if (obj.hasOwnProperty("dataInputs") && Array.isArray(obj.dataInputs)) {
            for (var _i = 0, _a = obj.dataInputs; _i < _a.length; _i++) {
                var item = _a[_i];
                var dataInput = new DataInput(this.Model);
                dataInput.LoadFromJsonObject(item);
                this.AddDataInput(dataInput);
            }
        }
        if (obj.hasOwnProperty("dataOutputs") && Array.isArray(obj.dataOutputs)) {
            for (var _b = 0, _c = obj.dataOutputs; _b < _c.length; _b++) {
                var item = _c[_b];
                var dataOutput = new DataOutput(this.Model);
                dataOutput.LoadFromJsonObject(item);
                this.AddDataOutput(dataOutput);
            }
        }
        if (obj.hasOwnProperty("dataInputAssociations") && Array.isArray(obj.dataInputAssociations)) {
            for (var _d = 0, _e = obj.dataInputAssociations; _d < _e.length; _d++) {
                var item = _e[_d];
                var dataInputAssociation = new DataInputAssociation(this.Model);
                dataInputAssociation.LoadFromJsonObject(item);
                this.AddDataInputAssociation(dataInputAssociation);
            }
        }
        if (obj.hasOwnProperty("dataOutputAssociations") && Array.isArray(obj.dataOutputAssociations)) {
            for (var _f = 0, _g = obj.dataOutputAssociations; _f < _g.length; _f++) {
                var item = _g[_f];
                var dataOutputAssociation = new DataOutputAssociation(this.Model);
                dataOutputAssociation.LoadFromJsonObject(item);
                this.AddDataOutputAssociation(dataOutputAssociation);
            }
        }
        if (obj.hasOwnProperty("resourceRoles") && Array.isArray(obj.resourceRoles)) {
            for (var _h = 0, _j = obj.resourceRoles; _h < _j.length; _h++) {
                var item = _j[_h];
                var resourceRole = BpmnModelHelper.GetElementType(item.ClrTypeID);
                if (resourceRole == null)
                    continue;
                resourceRole.LoadFromJsonObject(item);
                this.AddResourceRole(resourceRole);
            }
        }
        if (obj.hasOwnProperty("loopCharacteristics")) {
            this.LoopCharacteristics = new MultiInstanceLoopCharacteristics(this.Model);
            this.LoopCharacteristics.LoadFromJsonObject(obj.loopCharacteristics);
        }
    };
    Activity.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        for (var item in this.dataInputAssociationDic) {
            this.dataInputAssociationDic[item].Validate(errors);
        }
        for (var item in this.dataOutputAssociationDic) {
            this.dataOutputAssociationDic[item].Validate(errors);
        }
    };
    Activity.prototype.CheckVariableElement = function (variableElement) {
        ValidateHelper.CheckVariableElement(variableElement, this, this, null);
    };
    return Activity;
}(FlowNode));
export { Activity };
//# sourceMappingURL=Activity.js.map