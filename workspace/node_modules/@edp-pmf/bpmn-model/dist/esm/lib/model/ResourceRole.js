import { __extends } from "tslib";
import { BaseElement } from "./BaseElement";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { ResourceAssignmentExpression } from "./ResourceAssignmentExpression";
var ResourceRole = /** @class */ (function (_super) {
    __extends(ResourceRole, _super);
    function ResourceRole(model) {
        return _super.call(this, model) || this;
    }
    ResourceRole.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.Name = null;
        this.ResourceAssignmentExpression = null;
    };
    ResourceRole.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
        BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
        if (this.ResourceAssignmentExpression != null) {
            BpmnModelHelper.SetAttributeValue(obj, "ResourceAssignmentExpression", this.ResourceAssignmentExpression.ConvertToJsonObject());
        }
        return obj;
    };
    ResourceRole.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Name = obj.Name;
        if (obj.hasOwnProperty("ResourceAssignmentExpression")) {
            this.ResourceAssignmentExpression = new ResourceAssignmentExpression(this.Model);
            this.ResourceAssignmentExpression.LoadFromJsonObject(obj.ResourceAssignmentExpression);
        }
    };
    return ResourceRole;
}(BaseElement));
export { ResourceRole };
//# sourceMappingURL=ResourceRole.js.map