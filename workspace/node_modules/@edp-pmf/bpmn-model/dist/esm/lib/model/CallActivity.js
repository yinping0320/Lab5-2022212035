import { __extends } from "tslib";
import { Activity } from "./Activity";
import { BpmnModelHelper } from "./BpmnModelHelper";
import { SubProcessDataAssociations } from "./mex/SubProcessDataAssociations";
var CallActivity = /** @class */ (function (_super) {
    __extends(CallActivity, _super);
    function CallActivity(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.CallActivity";
        _this.CALLACTIVITYMEXTAG = "bpmn.CallActivity";
        _this.SubProcessDataAssociations = new SubProcessDataAssociations(model);
        return _this;
    }
    CallActivity.prototype.clone = function () {
        var clone = _super.prototype.clone.call(this);
        clone.CalledElement = this.CalledElement;
        clone.SubProcessDataAssociations = this.SubProcessDataAssociations;
        return clone;
    };
    CallActivity.prototype.NewInstance = function () {
        return new CallActivity(this.Model);
    };
    CallActivity.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.CalledElement = null;
        this.SubProcessDataAssociations = null;
    };
    CallActivity.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "CalledElement", this.CalledElement);
        return obj;
    };
    CallActivity.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.CalledElement = obj.CalledElement;
    };
    CallActivity.prototype.GetExtensionElements4ConvertTo = function () {
        var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
        if (this.SubProcessDataAssociations != null &&
            this.SubProcessDataAssociations.GetDataInputAssociations().length > 0 &&
            this.SubProcessDataAssociations.GetDataOutputAssociations().length > 0) {
            this.SubProcessDataAssociations.MexTag = this.CALLACTIVITYMEXTAG;
            list.push(this.SubProcessDataAssociations);
        }
        return list;
    };
    CallActivity.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
        _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
        for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
            var extensionElement = extensionElements_1[_i];
            if (extensionElement instanceof SubProcessDataAssociations && extensionElement.MexTag == this.CALLACTIVITYMEXTAG) {
                this.SubProcessDataAssociations = extensionElement;
            }
        }
    };
    return CallActivity;
}(Activity));
export { CallActivity };
//# sourceMappingURL=CallActivity.js.map