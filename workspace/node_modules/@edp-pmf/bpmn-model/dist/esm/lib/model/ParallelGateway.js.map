{"version":3,"file":"ParallelGateway.js","sourceRoot":"","sources":["../../../../src/lib/model/ParallelGateway.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C;IAAqC,mCAAO;IACxC,yBAAY,KAAgB;QAA5B,YACI,kBAAM,KAAK,CAAC,SACf;QAEQ,eAAS,GAAW,sBAAsB,CAAC;QACpD,yBAAmB,GAAW,WAAW,CAAC,QAAQ,CAAC;QACnD,yBAAmB,GAAW,WAAW,CAAC,QAAQ,CAAC;;IAJnD,CAAC;IAMD,qCAAW,GAAX;QACI,OAAO,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IACL,sBAAC;AAAD,CAAC,AAZD,CAAqC,OAAO,GAY3C","sourcesContent":["import { BpmnModel } from \"./BpmnModel\";\r\nimport { Gateway } from \"./Gateway\";\r\nimport { GatewayType } from \"./GatewayType\";\r\n\r\nexport class ParallelGateway extends Gateway {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    readonly ClrTypeID: string = \"bpmn.ParallelGateway\";\r\n    IncomingGatewayType: string = GatewayType.Parallel;\r\n    OutgoingGatewayType: string = GatewayType.Parallel;\r\n\r\n    NewInstance(): ParallelGateway {\r\n        return new ParallelGateway(this.Model);\r\n    }\r\n}"]}