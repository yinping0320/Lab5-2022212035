{"version":3,"file":"SchemaType.js","sourceRoot":"","sources":["../../../../../src/lib/model/mex/SchemaType.ts"],"names":[],"mappings":"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","sourcesContent":["import { BpmnModel } from \"../BpmnModel\";\r\nimport { BpmnModelHelper } from \"../BpmnModelHelper\";\r\nimport { ValidationError } from \"../ValidationError\";\r\nimport { ValidationLevel } from \"../ValidationLevel\";\r\nimport { BeSchema } from \"./BeSchema\";\r\nimport { MexElement } from \"./MexElement\";\r\nimport { SchemaTypes } from \"./SchemaTypes\";\r\nimport { XmlSchema } from \"./XmlSchema\";\r\n\r\nexport class SchemaType extends MexElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n\r\n        this.Category = SchemaTypes.BeSchema;\r\n    }\r\n\r\n    Category: string;\r\n    BeSchema: BeSchema;\r\n    XmlSchema: XmlSchema;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.Category = SchemaTypes.BeSchema;\r\n        this.BeSchema = null;\r\n        this.XmlSchema = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Category\", this.Category);\r\n\r\n        switch (this.Category) {\r\n            case SchemaTypes.BeSchema:\r\n                {\r\n                    if (this.BeSchema) {\r\n                        BpmnModelHelper.SetAttributeValue(obj, \"BeSchema\", this.BeSchema.ConvertToJsonObject());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            case SchemaTypes.XmlSchema:\r\n                {\r\n                    if (this.XmlSchema) {\r\n                        BpmnModelHelper.SetAttributeValue(obj, \"XmlSchema\", this.XmlSchema.ConvertToJsonObject());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                throw new Error(\"Invalid argument!\");\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Category = obj.Category;\r\n\r\n        switch (this.Category) {\r\n            case SchemaTypes.BeSchema:\r\n                {\r\n                    if (obj.BeSchema) {\r\n                        this.BeSchema = new BeSchema(this.Model);\r\n                        this.BeSchema.LoadFromJsonObject(obj.BeSchema);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            case SchemaTypes.XmlSchema:\r\n                {\r\n                    if (obj.XmlSchema) {\r\n                        this.XmlSchema = new XmlSchema(this.Model);\r\n                        this.XmlSchema.LoadFromJsonObject(obj.XmlSchema);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n            default:\r\n                throw new Error(\"Invalid argument!\");\r\n        }\r\n    }\r\n\r\n    Validate(errors: Array<ValidationError>): void {\r\n        super.Validate(errors);\r\n\r\n        if (this.Category == SchemaTypes.BeSchema) {\r\n            if (this.BeSchema == null) {\r\n                let error: ValidationError = new ValidationError();\r\n                error.Element = this;\r\n                error.ErrorLevel = ValidationLevel.$_Error;\r\n                error.ErrorCode = \"\";\r\n                error.ErrorMessage = \"没有设定 BeSchema\";\r\n\r\n                errors.push(error);\r\n            }\r\n            else {\r\n                this.BeSchema.Validate(errors);\r\n            }\r\n        }\r\n\r\n        if (this.Category == SchemaTypes.XmlSchema) {\r\n            if (this.XmlSchema == null) {\r\n                let error: ValidationError = new ValidationError();\r\n                error.Element = this;\r\n                error.ErrorLevel = ValidationLevel.$_Error;\r\n                error.ErrorCode = \"\";\r\n                error.ErrorMessage = \"没有设定 XmlSchema\";\r\n\r\n                errors.push(error);\r\n            }\r\n            else {\r\n                this.XmlSchema.Validate(errors);\r\n            }\r\n        }\r\n    }\r\n}"]}