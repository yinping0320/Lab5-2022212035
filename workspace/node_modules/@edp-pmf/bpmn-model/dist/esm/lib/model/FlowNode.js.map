{"version":3,"file":"FlowNode.js","sourceRoot":"","sources":["../../../../src/lib/model/FlowNode.ts"],"names":[],"mappings":"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","sourcesContent":["import { BpmnModel } from \"./BpmnModel\";\r\nimport { BpmnModelHelper } from \"./BpmnModelHelper\";\r\nimport { ExtensionElement } from \"./ExtensionElement\";\r\nimport { FlowElement } from \"./FlowElement\";\r\nimport { GatewayType } from \"./GatewayType\";\r\nimport { IExecutionListenerContainer } from \"./IExecutionListenerContainer\";\r\nimport { ExecutionListener } from \"./mex/ExecutionListener\";\r\nimport { ObjectHelper } from \"./ObjectHelper\";\r\nimport { SequenceFlow } from \"./SequenceFlow\";\r\nimport { ValidationError } from \"./ValidationError\";\r\nimport { ValidationLevel } from \"./ValidationLevel\";\r\n\r\nexport abstract class FlowNode extends FlowElement implements IExecutionListenerContainer {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    executionListeners: Array<ExecutionListener> = new Array<ExecutionListener>();\r\n    IncomingGatewayType: string = GatewayType.Exclusive;\r\n    Incomings: Array<string> = new Array<string>();\r\n    OutgoingGatewayType: string = GatewayType.Exclusive;\r\n    Outgoings: Array<string> = new Array<string>();\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.executionListeners = new Array<ExecutionListener>();\r\n        this.IncomingGatewayType = GatewayType.Exclusive;\r\n        this.Incomings = new Array<string>();\r\n        this.OutgoingGatewayType = GatewayType.Exclusive;\r\n        this.Outgoings = new Array<string>();\r\n    }\r\n\r\n    GetExecutionListeners(): ExecutionListener[] {\r\n        return this.executionListeners;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        if (ObjectHelper.extendFromClass(this, \"Gateway\") == false) {\r\n            if (this.IncomingGatewayType != GatewayType.Exclusive)\r\n                BpmnModelHelper.SetAttributeValue(obj, \"IncomingGatewayType\", this.IncomingGatewayType);\r\n\r\n            if (this.OutgoingGatewayType != GatewayType.Exclusive)\r\n                BpmnModelHelper.SetAttributeValue(obj, \"OutgoingGatewayType\", this.OutgoingGatewayType);\r\n        }\r\n\r\n        let incomings: Array<any> = new Array<any>();\r\n        for (let item of this.Incomings) {\r\n            incomings.push(item);\r\n        }\r\n        if (incomings.length > 0)\r\n            BpmnModelHelper.SetAttributeValue(obj, \"incomings\", incomings);\r\n\r\n        let outgoings: Array<any> = new Array<any>();\r\n        for (let item of this.Outgoings) {\r\n            outgoings.push(item);\r\n        }\r\n        if (outgoings.length > 0)\r\n            BpmnModelHelper.SetAttributeValue(obj, \"outgoings\", outgoings);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        if (ObjectHelper.extendFromClass(this, \"Gateway\") == false) {\r\n            if (obj.hasOwnProperty(\"IncomingGatewayType\"))\r\n                this.IncomingGatewayType = obj.IncomingGatewayType;\r\n\r\n            if (obj.hasOwnProperty(\"OutgoingGatewayType\"))\r\n                this.OutgoingGatewayType = obj.OutgoingGatewayType;\r\n        }\r\n\r\n        if (obj.hasOwnProperty(\"incomings\") && Array.isArray(obj.incomings)) {\r\n            for (let item of obj.incomings) {\r\n                this.Incomings.push(item);\r\n            }\r\n        }\r\n\r\n        if (obj.hasOwnProperty(\"outgoings\") && Array.isArray(obj.outgoings)) {\r\n            for (let item of obj.outgoings) {\r\n                this.Outgoings.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    private readonly MEXTAG: string = \"bpmn.FlowNode\";\r\n\r\n    protected GetExtensionElements4ConvertTo(): Array<ExtensionElement> {\r\n        let list: Array<ExtensionElement> = super.GetExtensionElements4ConvertTo();\r\n\r\n        for (let item of this.executionListeners) {\r\n            item.MexTag = this.MEXTAG;\r\n            list.push(item);\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    protected SetExtensionElements4LoadFrom(extensionElements: Array<ExtensionElement>): void {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement instanceof ExecutionListener && extensionElement.MexTag == this.MEXTAG) {\r\n                this.executionListeners.push(extensionElement as ExecutionListener);\r\n            }\r\n        }\r\n    }\r\n\r\n    Validate(errors: Array<ValidationError>): void {\r\n        super.Validate(errors);\r\n\r\n        for (let item of this.executionListeners) {\r\n            item.Validate(errors);\r\n        }\r\n\r\n        for (let item of this.Incomings) {\r\n            let sequenceFlow: SequenceFlow = this.Model.GetHasIdElement(item) as SequenceFlow;\r\n            if (sequenceFlow == null) {\r\n                let error: ValidationError = new ValidationError();\r\n\r\n                error.Element = this;\r\n                error.ErrorLevel = ValidationLevel.$_Error;\r\n                error.ErrorCode = \"\";\r\n                error.ErrorMessage = `找不到 id 为 ${item} 的连线。`;\r\n\r\n                errors.push(error);\r\n            }\r\n        }\r\n\r\n        for (let item of this.Outgoings) {\r\n            let sequenceFlow: SequenceFlow = this.Model.GetHasIdElement(item) as SequenceFlow;\r\n            if (sequenceFlow == null) {\r\n                let error: ValidationError = new ValidationError();\r\n                error.Element = this;\r\n                error.ErrorLevel = ValidationLevel.$_Error;\r\n                error.ErrorCode = \"\";\r\n                error.ErrorMessage = `找不到 id 为 ${item} 的连线。`;\r\n                errors.push(error);\r\n            }\r\n        }\r\n    }\r\n}"]}