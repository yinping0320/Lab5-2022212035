{"version":3,"file":"Signal.js","sourceRoot":"","sources":["../../../../src/lib/model/Signal.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAEpD;IAA4B,0BAAU;IAGlC,gBAAmB,KAAgB;QAAnC,YACI,kBAAM,KAAK,CAAC,SACf;QAJQ,eAAS,GAAG,aAAa,CAAC;;IAInC,CAAC;IAKM,oCAAmB,GAA1B;QACI,IAAI,GAAG,GAAQ,iBAAM,mBAAmB,WAAE,CAAC;QAC3C,eAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACpE,eAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,eAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,mCAAkB,GAAzB,UAA0B,GAAQ;QAC9B,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,wBAAwB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACxE,CAAC;IAED,sBAAK,GAAL;QACI,IAAI,KAAK,GAAG,iBAAM,KAAK,WAAY,CAAC;QACpC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,4BAAW,GAAX;QACI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IACL,aAAC;AAAD,CAAC,AAnCD,CAA4B,UAAU,GAmCrC","sourcesContent":["import { BpmnModel } from \"./BpmnModel\";\r\nimport { CatchEvent } from \"./CatchEvent\";\r\nimport { ExtensionMethod } from \"./ExtensionMethod\";\r\n\r\nexport class Signal extends CatchEvent {\r\n    readonly ClrTypeID = \"bpmn.Signal\";\r\n\r\n    public constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    Name: string;\r\n    Scope: string;\r\n\r\n    public convertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"ClrTypeID\", this.ClrTypeID);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Name\", this.Name);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Scope\", this.Scope);\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Name = ExtensionMethod.GetAttributeValue4String(obj, \"Name\");\r\n        this.Scope = ExtensionMethod.GetAttributeValue4String(obj, \"Scope\");\r\n    }\r\n\r\n    clone(): Signal {\r\n        let clone = super.clone() as Signal;\r\n        clone.Name = this.Name;\r\n        clone.Scope = this.Scope;\r\n        return clone;\r\n    }\r\n\r\n    NewInstance(): Signal {\r\n        return new Signal(this.Model);\r\n    }\r\n}"]}