(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define(['exports'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.inspur = global.inspur || {}, global.inspur.gsp = global.inspur.gsp || {}, global.inspur.gsp.pmf = global.inspur.gsp.pmf || {}, global.inspur.gsp.pmf.bpmn = global.inspur.gsp.pmf.bpmn || {}, global.inspur.gsp.pmf.bpmn.model = {})));
})(this, (function (exports) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    var RadixConvert = /** @class */ (function () {
        function RadixConvert() {
        }
        RadixConvert.Decimal2String = function (value) {
            var result = "";
            do {
                var index = value % this.exponent;
                result = this.keys[index] + result;
                value = (value - index) / this.exponent;
            } while (value > 0);
            return result;
        };
        RadixConvert.Pow = function (baseNo, x) {
            var value = 1;
            while (x > 0) {
                value = value * baseNo;
                x--;
            }
            return value;
        };
        RadixConvert.exponent = 34;
        RadixConvert.keys = "0123456789ABCDEFGHJKLMNPQRSTUVWXYZ";
        return RadixConvert;
    }());

    var BpmnModelHelper = /** @class */ (function () {
        function BpmnModelHelper() {
        }
        BpmnModelHelper.GenerateElementId = function () {
            ++(this.generatedId);
            return "_" + RadixConvert.Decimal2String(this.generatedId);
        };
        BpmnModelHelper.SetAttributeValue = function (obj, name, value) {
            if (obj == undefined || obj == null || value == undefined || value == null)
                return;
            obj[name] = value;
        };
        BpmnModelHelper.RegisterElementType = function (typeInstance) {
            BpmnModelHelper.elementTypeDic[typeInstance.ClrTypeID] = typeInstance;
        };
        BpmnModelHelper.GetElementType = function (typeId) {
            return BpmnModelHelper.elementTypeDic[typeId].NewInstance();
        };
        BpmnModelHelper.elementTypeDic = {};
        BpmnModelHelper.generatedId = parseInt(Date.now().toString());
        return BpmnModelHelper;
    }());

    var BpmnModelElement = /** @class */ (function () {
        function BpmnModelElement(model) {
            if (model == null) {
                throw new Error("BpmnModel不能为null.");
            }
            this.Model = model;
        }
        BpmnModelElement.prototype.ConvertToJsonObject = function () {
            var obj = {};
            return obj;
        };
        BpmnModelElement.prototype.LoadFromJsonObject = function (obj) {
            this.ResetBeforeLoadFrom();
        };
        BpmnModelElement.prototype.ResetBeforeLoadFrom = function () {
        };
        BpmnModelElement.prototype.Validate = function (errors) {
        };
        /**
         * 克隆元素，前端独有方法
         * @returns
         */
        BpmnModelElement.prototype.clone = function () {
            return null;
        };
        return BpmnModelElement;
    }());

    var OmgdiElement = /** @class */ (function (_super) {
        __extends(OmgdiElement, _super);
        function OmgdiElement(model) {
            var _this = _super.call(this, model) || this;
            _this.Id = BpmnModelHelper.GenerateElementId();
            return _this;
        }
        OmgdiElement.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Id = null;
        };
        OmgdiElement.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Id", this.Id);
            return obj;
        };
        OmgdiElement.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Id = obj.Id;
        };
        return OmgdiElement;
    }(BpmnModelElement));

    var Diagram = /** @class */ (function (_super) {
        __extends(Diagram, _super);
        function Diagram(model) {
            return _super.call(this, model) || this;
        }
        Diagram.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Name = null;
        };
        Diagram.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
            return obj;
        };
        Diagram.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Name = obj.Name;
        };
        return Diagram;
    }(OmgdiElement));

    var BpmnElement = /** @class */ (function (_super) {
        __extends(BpmnElement, _super);
        function BpmnElement(model) {
            return _super.call(this, model) || this;
        }
        return BpmnElement;
    }(BpmnModelElement));

    var BaseElement = /** @class */ (function (_super) {
        __extends(BaseElement, _super);
        function BaseElement(model) {
            var _this = _super.call(this, model) || this;
            _this.Id = BpmnModelHelper.GenerateElementId();
            return _this;
        }
        BaseElement.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Id = null;
            this.Documentation = null;
        };
        BaseElement.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Id", this.Id);
            BpmnModelHelper.SetAttributeValue(obj, "Documentation", this.Documentation);
            if (this.GetExtensionElements4ConvertTo().length > 0) {
                var extensionElements = new Array();
                for (var _i = 0, _a = this.GetExtensionElements4ConvertTo(); _i < _a.length; _i++) {
                    var item = _a[_i];
                    extensionElements.push(item.ConvertToJsonObject());
                }
                BpmnModelHelper.SetAttributeValue(obj, "extensionElements", extensionElements);
            }
            return obj;
        };
        BaseElement.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Id = obj.Id;
            this.Documentation = obj.Documentation;
            if (obj.hasOwnProperty("extensionElements") && Array.isArray(obj.extensionElements)) {
                var list = new Array();
                for (var _i = 0, _a = obj.extensionElements; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var extensionElement = BpmnModelHelper.GetElementType(item.ClrTypeID);
                    if (extensionElement != null) {
                        extensionElement.LoadFromJsonObject(item);
                        list.push(extensionElement);
                    }
                }
                this.SetExtensionElements4LoadFrom(list);
            }
        };
        BaseElement.prototype.GetExtensionElements4ConvertTo = function () {
            return new Array();
        };
        BaseElement.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
        };
        return BaseElement;
    }(BpmnElement));

    var ValidationError = /** @class */ (function () {
        function ValidationError() {
        }
        return ValidationError;
    }());

    var ValidationLevel = /** @class */ (function () {
        function ValidationLevel() {
        }
        ValidationLevel.$_Error = "Error";
        ValidationLevel.$_Warning = "Warning";
        return ValidationLevel;
    }());

    exports.BasicDataTypes = void 0;
    (function (BasicDataTypes) {
        BasicDataTypes["String"] = "String";
        BasicDataTypes["Integer"] = "Integer";
        BasicDataTypes["Decimal"] = "Decimal";
        BasicDataTypes["Boolean"] = "Boolean";
        BasicDataTypes["DateTime"] = "DateTime";
    })(exports.BasicDataTypes || (exports.BasicDataTypes = {}));

    exports.DataTypes = void 0;
    (function (DataTypes) {
        DataTypes["BasicType"] = "BasicType";
        DataTypes["SchemaType"] = "SchemaType";
        DataTypes["CustomType"] = "CustomType";
        //DeclaredType,
        //ExternalReference,
        //RecordType,
        //UnionType,
        //EnumerationType,
        //ArrayType,
        //ListType,
    })(exports.DataTypes || (exports.DataTypes = {}));

    var ExtensionElement = /** @class */ (function (_super) {
        __extends(ExtensionElement, _super);
        function ExtensionElement(model) {
            return _super.call(this, model) || this;
        }
        ExtensionElement.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.MexTag = null;
        };
        ExtensionElement.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            BpmnModelHelper.SetAttributeValue(obj, "MexTag", this.MexTag);
            return obj;
        };
        ExtensionElement.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.MexTag = obj.MexTag;
        };
        return ExtensionElement;
    }(BpmnModelElement));

    var MexExtensionElement = /** @class */ (function (_super) {
        __extends(MexExtensionElement, _super);
        function MexExtensionElement(model) {
            return _super.call(this, model) || this;
        }
        return MexExtensionElement;
    }(ExtensionElement));

    var MexElement = /** @class */ (function (_super) {
        __extends(MexElement, _super);
        function MexElement(model) {
            return _super.call(this, model) || this;
        }
        return MexElement;
    }(BpmnModelElement));

    var BeSchema = /** @class */ (function (_super) {
        __extends(BeSchema, _super);
        function BeSchema(model) {
            return _super.call(this, model) || this;
        }
        BeSchema.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.BeId = null;
        };
        BeSchema.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "BeId", this.BeId);
            return obj;
        };
        BeSchema.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.BeId = obj.BeId;
        };
        return BeSchema;
    }(MexElement));

    exports.SchemaTypes = void 0;
    (function (SchemaTypes) {
        SchemaTypes["BeSchema"] = "BeSchema";
        SchemaTypes["XmlSchema"] = "XmlSchema";
    })(exports.SchemaTypes || (exports.SchemaTypes = {}));

    var XmlSchema = /** @class */ (function (_super) {
        __extends(XmlSchema, _super);
        function XmlSchema(model) {
            return _super.call(this, model) || this;
        }
        XmlSchema.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Xsd = null;
        };
        XmlSchema.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Xsd", this.Xsd);
            return obj;
        };
        XmlSchema.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Xsd = obj.Xsd;
        };
        return XmlSchema;
    }(MexElement));

    var SchemaType = /** @class */ (function (_super) {
        __extends(SchemaType, _super);
        function SchemaType(model) {
            var _this = _super.call(this, model) || this;
            _this.Category = exports.SchemaTypes.BeSchema;
            return _this;
        }
        SchemaType.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Category = exports.SchemaTypes.BeSchema;
            this.BeSchema = null;
            this.XmlSchema = null;
        };
        SchemaType.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Category", this.Category);
            switch (this.Category) {
                case exports.SchemaTypes.BeSchema:
                    {
                        if (this.BeSchema) {
                            BpmnModelHelper.SetAttributeValue(obj, "BeSchema", this.BeSchema.ConvertToJsonObject());
                        }
                        break;
                    }
                case exports.SchemaTypes.XmlSchema:
                    {
                        if (this.XmlSchema) {
                            BpmnModelHelper.SetAttributeValue(obj, "XmlSchema", this.XmlSchema.ConvertToJsonObject());
                        }
                        break;
                    }
                default:
                    throw new Error("Invalid argument!");
            }
            return obj;
        };
        SchemaType.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Category = obj.Category;
            switch (this.Category) {
                case exports.SchemaTypes.BeSchema:
                    {
                        if (obj.BeSchema) {
                            this.BeSchema = new BeSchema(this.Model);
                            this.BeSchema.LoadFromJsonObject(obj.BeSchema);
                        }
                        break;
                    }
                case exports.SchemaTypes.XmlSchema:
                    {
                        if (obj.XmlSchema) {
                            this.XmlSchema = new XmlSchema(this.Model);
                            this.XmlSchema.LoadFromJsonObject(obj.XmlSchema);
                        }
                        break;
                    }
                default:
                    throw new Error("Invalid argument!");
            }
        };
        SchemaType.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.Category == exports.SchemaTypes.BeSchema) {
                if (this.BeSchema == null) {
                    var error = new ValidationError();
                    error.Element = this;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "没有设定 BeSchema";
                    errors.push(error);
                }
                else {
                    this.BeSchema.Validate(errors);
                }
            }
            if (this.Category == exports.SchemaTypes.XmlSchema) {
                if (this.XmlSchema == null) {
                    var error = new ValidationError();
                    error.Element = this;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "没有设定 XmlSchema";
                    errors.push(error);
                }
                else {
                    this.XmlSchema.Validate(errors);
                }
            }
        };
        return SchemaType;
    }(MexElement));

    var DataType = /** @class */ (function (_super) {
        __extends(DataType, _super);
        function DataType(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Mex.DataType";
            _this.BasicType = exports.BasicDataTypes.String;
            _this.Category = exports.DataTypes.BasicType;
            return _this;
        }
        DataType.prototype.NewInstance = function () {
            return new DataType(this.Model);
        };
        DataType.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.BasicType = exports.BasicDataTypes.String;
            this.Category = exports.DataTypes.BasicType;
            this.Description = null;
            this.InitialValue = null;
            this.SchemaType = null;
            this.CustomType = null;
        };
        DataType.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Category", this.Category);
            BpmnModelHelper.SetAttributeValue(obj, "Description", this.Description);
            switch (this.Category) {
                case exports.DataTypes.BasicType:
                    {
                        BpmnModelHelper.SetAttributeValue(obj, "BasicType", this.BasicType);
                        if (this.InitialValue != null) {
                            try {
                                switch (this.BasicType) {
                                    case exports.BasicDataTypes.String:
                                        BpmnModelHelper.SetAttributeValue(obj, "InitialValue", this.InitialValue);
                                        break;
                                    case exports.BasicDataTypes.Integer:
                                    case exports.BasicDataTypes.Decimal:
                                        BpmnModelHelper.SetAttributeValue(obj, "InitialValue", this.InitialValue);
                                        break;
                                    case exports.BasicDataTypes.DateTime:
                                        BpmnModelHelper.SetAttributeValue(obj, "InitialValue", this.DateFormat("yyyyMMddhhmmssS", this.InitialValue));
                                        break;
                                    case exports.BasicDataTypes.Boolean:
                                        BpmnModelHelper.SetAttributeValue(obj, "InitialValue", this.InitialValue);
                                        break;
                                    //case "ByteArray":
                                    //    {
                                    //        obj.InitialValue = <Array<any>>this.InitialValue;
                                    //        break;
                                    //    }
                                    default:
                                        throw new Error("Invalid argument!");
                                }
                            }
                            catch (err) {
                                throw new Error("\u65E0\u6CD5\u5C06\u7ED9\u5B9A\u7684\u503C\u8F6C\u6210 " + this.BasicType.toString() + " \u57FA\u672C\u6570\u636E\u7C7B\u578B.");
                            }
                        }
                        break;
                    }
                case exports.DataTypes.SchemaType:
                    {
                        if (this.SchemaType != null)
                            obj.SchemaType = this.SchemaType.ConvertToJsonObject();
                        if (this.InitialValue != null)
                            obj.InitialValue = this.InitialValue;
                        break;
                    }
                case exports.DataTypes.CustomType:
                    {
                        if (this.CustomType != null)
                            obj.CustomType = this.CustomType.ConvertToJsonObject();
                        break;
                    }
                default:
                    throw new Error("Invalid argument!");
            }
            return obj;
        };
        DataType.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Category = obj.Category;
            this.Description = obj.Description;
            switch (this.Category) {
                case exports.DataTypes.BasicType:
                    {
                        this.BasicType = obj.BasicType;
                        if (obj.hasOwnProperty("InitialValue")) {
                            switch (this.BasicType) {
                                case exports.BasicDataTypes.String:
                                    this.InitialValue = obj.InitialValue;
                                    break;
                                case exports.BasicDataTypes.Integer:
                                case exports.BasicDataTypes.Decimal:
                                    this.InitialValue = obj.InitialValue;
                                    break;
                                case exports.BasicDataTypes.DateTime:
                                    //this.InitialValue = new Date((<number>obj.InitialValue - 621355968000000000) / 10000);
                                    this.InitialValue = this.DateParse(obj.InitialValue);
                                    break;
                                case exports.BasicDataTypes.Boolean:
                                    this.InitialValue = obj.InitialValue;
                                    break;
                                //case "ByteArray":
                                //    {
                                //        this.InitialValue = <Array<any>>obj.InitialValue;
                                //        break;
                                //    }
                                default:
                                    throw new Error("Invalid argument!");
                            }
                        }
                        break;
                    }
                case exports.DataTypes.SchemaType:
                    {
                        if (obj.hasOwnProperty("SchemaType")) {
                            this.SchemaType = new SchemaType(this.Model);
                            this.SchemaType.LoadFromJsonObject(obj.SchemaType);
                        }
                        this.InitialValue = obj.InitialValue;
                        break;
                    }
                case exports.DataTypes.CustomType:
                    {
                        if (obj.hasOwnProperty("CustomType")) {
                            this.CustomType = BpmnModelHelper.GetElementType(obj.CustomType.ClrTypeID);
                            this.CustomType.LoadFromJsonObject(obj.CustomType);
                        }
                        break;
                    }
                default:
                    throw new Error("Invalid argument!");
            }
        };
        DataType.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.Category == exports.DataTypes.SchemaType) {
                if (this.SchemaType == null) {
                    var error = new ValidationError();
                    error.Element = this;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "没有设定 Schema 数据类型";
                    errors.push(error);
                }
                else {
                    this.SchemaType.Validate(errors);
                }
            }
        };
        DataType.prototype.DateFormat = function (fmt, value) {
            var o = {
                "M+": value.getUTCMonth() + 1,
                "d+": value.getUTCDate(),
                "h+": value.getUTCHours(),
                "m+": value.getUTCMinutes(),
                "s+": value.getUTCSeconds(),
                "q+": Math.floor((value.getMonth() + 3) / 3),
                "S": value.getUTCMilliseconds()
            };
            if (/(y+)/.test(fmt))
                fmt = fmt.replace(RegExp.$1, (value.getFullYear() + "").substr(4 - RegExp.$1.length));
            for (var k in o)
                if (new RegExp("(" + k + ")").test(fmt))
                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            return fmt;
        };
        DataType.prototype.DateParse = function (dt) {
            var date = new Date();
            date.setUTCFullYear(parseInt(dt.slice(0, 4)), parseInt(dt.slice(4, 6)) - 1, parseInt(dt.slice(6, 8)));
            date.setUTCHours(parseInt(dt.slice(8, 10)), parseInt(dt.slice(10, 12)), parseInt(dt.slice(12, 14)), parseInt(dt.slice(14, 17)));
            return date;
        };
        return DataType;
    }(MexExtensionElement));

    var DataInput = /** @class */ (function (_super) {
        __extends(DataInput, _super);
        function DataInput(model) {
            var _this = _super.call(this, model) || this;
            _this.MEXTAG = "bpmn.DataInput";
            _this.IsAllowNull = true;
            _this.IsRequired = true;
            _this.IsCollection = false;
            return _this;
        }
        DataInput.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.IsAllowNull = true;
            this.IsRequired = true;
            this.Name = null;
            this.DataType = null;
            this.IsCollection = false;
        };
        DataInput.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
            BpmnModelHelper.SetAttributeValue(obj, "IsAllowNull", this.IsAllowNull);
            BpmnModelHelper.SetAttributeValue(obj, "IsRequired", this.IsRequired);
            BpmnModelHelper.SetAttributeValue(obj, "IsCollection", this.IsCollection);
            return obj;
        };
        DataInput.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Name = obj.Name;
            this.IsAllowNull = obj.IsAllowNull;
            this.IsRequired = obj.IsRequired;
            this.IsCollection = obj.IsCollection;
        };
        DataInput.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            if (this.DataType != null) {
                this.DataType.MexTag = this.MEXTAG;
                list.push(this.DataType);
            }
            return list;
        };
        DataInput.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof DataType && extensionElement.MexTag == this.MEXTAG) {
                    this.DataType = extensionElement;
                }
            }
        };
        DataInput.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.DataType != null) {
                this.DataType.Validate(errors);
            }
            else {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "没有设定变量类型";
                errors.push(error);
            }
        };
        return DataInput;
    }(BaseElement));

    var DataOutput = /** @class */ (function (_super) {
        __extends(DataOutput, _super);
        function DataOutput(model) {
            var _this = _super.call(this, model) || this;
            _this.MEXTAG = "bpmn.DataOutput";
            _this.IsAllowNull = true;
            _this.IsCollection = false;
            return _this;
        }
        DataOutput.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.IsAllowNull = true;
            this.Name = null;
            this.DataType = null;
            this.IsCollection = false;
        };
        DataOutput.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
            BpmnModelHelper.SetAttributeValue(obj, "IsAllowNull", this.IsAllowNull);
            BpmnModelHelper.SetAttributeValue(obj, "IsCollection", this.IsCollection);
            return obj;
        };
        DataOutput.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Name = obj.Name;
            this.IsAllowNull = obj.IsAllowNull;
            this.IsCollection = obj.IsCollection;
        };
        DataOutput.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            if (this.DataType != null) {
                this.DataType.MexTag = this.MEXTAG;
                list.push(this.DataType);
            }
            return list;
        };
        DataOutput.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof DataType && extensionElement.MexTag == this.MEXTAG) {
                    this.DataType = extensionElement;
                }
            }
        };
        DataOutput.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.DataType != null) {
                this.DataType.Validate(errors);
            }
            else {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "没有设定变量类型";
                errors.push(error);
            }
        };
        return DataOutput;
    }(BaseElement));

    var MexExpression = /** @class */ (function (_super) {
        __extends(MexExpression, _super);
        function MexExpression(model) {
            return _super.call(this, model) || this;
        }
        return MexExpression;
    }(MexExtensionElement));

    var Expression = /** @class */ (function (_super) {
        __extends(Expression, _super);
        function Expression(model) {
            var _this = _super.call(this, model) || this;
            _this.MEXTAG = "bpmn.Expression";
            return _this;
        }
        Expression.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.MexExpression = null;
        };
        Expression.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            if (this.MexExpression != null) {
                this.MexExpression.MexTag = this.MEXTAG;
                list.push(this.MexExpression);
            }
            return list;
        };
        Expression.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof MexExpression && extensionElement.MexTag == this.MEXTAG) {
                    this.MexExpression = extensionElement;
                }
            }
        };
        Expression.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.MexExpression != null) {
                this.MexExpression.Validate(errors);
            }
        };
        Expression.prototype.NewInstance = function () {
            return new Expression(this.Model);
        };
        Expression.prototype.clone = function () {
            var expression = new Expression(this.Model);
            if (this.MexExpression) {
                expression.MexExpression = this.MexExpression.clone();
            }
            return expression;
        };
        return Expression;
    }(BaseElement));

    var FormalExpression = /** @class */ (function (_super) {
        __extends(FormalExpression, _super);
        function FormalExpression(model) {
            return _super.call(this, model) || this;
        }
        return FormalExpression;
    }(Expression));

    var DataAssociation = /** @class */ (function (_super) {
        __extends(DataAssociation, _super);
        function DataAssociation(model) {
            return _super.call(this, model) || this;
        }
        DataAssociation.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.TargetRef = null;
            this.Transformation = null;
        };
        DataAssociation.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "TargetRef", this.TargetRef);
            if (this.Transformation == null) {
                throw new Error("Transformation is null.");
            }
            else {
                BpmnModelHelper.SetAttributeValue(obj, "Transformation", this.Transformation.ConvertToJsonObject());
            }
            return obj;
        };
        DataAssociation.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.TargetRef = obj.TargetRef;
            if (obj.hasOwnProperty("Transformation")) {
                this.Transformation = new FormalExpression(this.Model);
                this.Transformation.LoadFromJsonObject(obj.Transformation);
            }
        };
        DataAssociation.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.Transformation != null) {
                this.Transformation.Validate(errors);
            }
            else {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "没有设定赋值表达式";
                errors.push(error);
            }
            if (this.TargetRef == null) {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "没有设定关联的目标";
                errors.push(error);
            }
        };
        return DataAssociation;
    }(BaseElement));

    var DataInputAssociation = /** @class */ (function (_super) {
        __extends(DataInputAssociation, _super);
        function DataInputAssociation(model) {
            return _super.call(this, model) || this;
        }
        return DataInputAssociation;
    }(DataAssociation));

    var EventDefinition = /** @class */ (function (_super) {
        __extends(EventDefinition, _super);
        function EventDefinition(model) {
            return _super.call(this, model) || this;
        }
        return EventDefinition;
    }(BaseElement));

    var BpmnModelJsonHelper = /** @class */ (function () {
        function BpmnModelJsonHelper() {
        }
        BpmnModelJsonHelper.GetAttributeValue = function (obj, attributeName) {
            if (obj == null) {
                return null;
            }
            if (obj.hasOwnProperty(attributeName)) {
                return obj[attributeName];
            }
            else {
                return null;
            }
        };
        BpmnModelJsonHelper.SetAttributeValue = function (obj, attributeName, value) {
            if (obj == null || value == null)
                return;
            var jsonArray = [];
            if (value instanceof Array) {
                //判断是否为IJsonSerializable实现类的数组，是则全部调用ConvertToJsonObject序列化，否则直接赋值
                for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {
                    var item = value_1[_i];
                    if (item["ConvertToJsonObject"] != null && item["LoadFromJsonObject"] != null) {
                        jsonArray.push(item.ConvertToJsonObject());
                    }
                    else {
                        break;
                    }
                }
                if (jsonArray.length == value.length) {
                    obj[attributeName] = jsonArray;
                }
                else {
                    obj[attributeName] = value;
                }
            }
            else if (value["ConvertToJsonObject"] != null && value["LoadFromJsonObject"] != null) {
                //判断是否为IJsonSerializable实现类的对象，是则调用ConvertToJsonObject序列化
                obj[attributeName] = value.ConvertToJsonObject();
            }
            else if (value instanceof Date) {
                //判断是否为日期类型，是日期类型则转为字符串UTC的yyyyMMDDhhmmssSSS格式字符串
                var str = BpmnModelJsonHelper.DateTimeToString(value);
                BpmnModelJsonHelper.SetAttributeValue(obj, attributeName, str);
            }
            else {
                obj[attributeName] = value;
            }
        };
        BpmnModelJsonHelper.GetAttributeValueAsString = function (obj, attributeName) {
            if (obj == null) {
                return null;
            }
            if (obj.hasOwnProperty(attributeName) == true && typeof (obj[attributeName]) == "string") {
                return obj[attributeName];
            }
            return null;
        };
        BpmnModelJsonHelper.GetAttributeValueAsBoolean = function (obj, attributeName) {
            if (obj == null) {
                return null;
            }
            if (obj.hasOwnProperty(attributeName) == true && typeof (obj[attributeName]) == "boolean") {
                return obj[attributeName];
            }
            return null;
        };
        BpmnModelJsonHelper.GetAttributeValueAsNumber = function (obj, attributeName) {
            if (obj == null) {
                return null;
            }
            if (obj.hasOwnProperty(attributeName) == true && typeof (obj[attributeName]) == "number") {
                return obj[attributeName];
            }
            return null;
        };
        BpmnModelJsonHelper.GetAttributeValueAsList = function (obj, attributeName, classOfT) {
            var jsonArray = BpmnModelJsonHelper.GetAttributeValue(obj, attributeName);
            if (jsonArray == null) {
                return null;
            }
            var list = [];
            for (var _i = 0, jsonArray_1 = jsonArray; _i < jsonArray_1.length; _i++) {
                var item = jsonArray_1[_i];
                var instance = null;
                try {
                    instance = new classOfT();
                }
                catch (e) {
                    throw e;
                }
                instance.LoadFromJsonObject(item);
                list.push(instance);
            }
            return list;
        };
        BpmnModelJsonHelper.GetAttributeValueAsDateTime = function (obj, attributeName) {
            return BpmnModelJsonHelper.DateTimeFromString(BpmnModelJsonHelper.GetAttributeValueAsString(obj, attributeName));
        };
        BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable = function (obj, attributeName, classOfT) {
            var jsonObject = BpmnModelJsonHelper.GetAttributeValue(obj, attributeName);
            if (jsonObject == null) {
                return null;
            }
            var instance = null;
            try {
                instance = new classOfT();
            }
            catch (e) {
                throw e;
            }
            instance.LoadFromJsonObject(jsonObject);
            return instance;
        };
        BpmnModelJsonHelper.DateTimeToString = function (dt) {
            if (dt == null)
                return null;
            var time = dt.getTime();
            if (time < BpmnModelJsonHelper.MIN_OFFSETDATETIME.getTime() || time > BpmnModelJsonHelper.MAX_OFFSETDATETIME.getTime()) {
                throw "\u7ED9\u5B9A\u7684\u65E5\u671F\u65F6\u95F4\u503C " + dt.toISOString() + " \u8D85\u51FA\u652F\u6301\u8303\u56F4(0001-01-01T12:00:00.000Z - 9999-12-31T23:59:59.000Z):";
            }
            return BpmnModelJsonHelper.dateFormat(dt, "yyyyMMddHHmmssSSS");
        };
        /**
         *
         * @param str 格式为：yyyyMMddHHmmssSSS
         */
        BpmnModelJsonHelper.DateTimeFromString = function (str) {
            if (str == null)
                return null;
            // const s = `${str.substring(0, 4)}/${str.substring(4, 6)}/${str.substring(6, 8)} ${str.substring(8, 10)}:${str.substring(10, 12)}:${str.substring(12, 14)}.${str.substring(14)}`;
            var date = new Date();
            date.setUTCFullYear(parseInt(str.substring(0, 4)));
            date.setUTCMonth(parseInt(str.substring(4, 6)) - 1);
            date.setUTCDate(parseInt(str.substring(6, 8)));
            date.setUTCHours(parseInt(str.substring(8, 10)));
            date.setUTCMinutes(parseInt(str.substring(10, 12)));
            date.setUTCSeconds(parseInt(str.substring(12, 14)));
            date.setUTCMilliseconds(parseInt(str.substring(14)));
            return date;
        };
        BpmnModelJsonHelper.ToJson = function (value) {
            if (value === undefined || value === null) {
                return null;
            }
            var list = [];
            for (var _i = 0, value_2 = value; _i < value_2.length; _i++) {
                var item = value_2[_i];
                list.push(item.ConvertToJsonObject());
            }
            return JSON.stringify(list);
        };
        BpmnModelJsonHelper.FromJson = function (json, classOfT) {
            if (BpmnModelJsonHelper.IsNullOrWhiteSpace(json)) {
                return null;
            }
            var list = new Array();
            var jsonArr = JSON.parse(json);
            if (jsonArr == null || Array.isArray(jsonArr) === false) {
                return list;
            }
            jsonArr.forEach(function (elt) {
                var newInstance = new classOfT();
                newInstance.LoadFromJsonObject(elt);
                list.push(newInstance);
            });
            return list;
        };
        BpmnModelJsonHelper.StringListToJsonArray = function (value) {
            if (value == null)
                return null;
            var jsonArray = new Array();
            for (var _i = 0, value_3 = value; _i < value_3.length; _i++) {
                var item = value_3[_i];
                jsonArray.push(item);
            }
            return jsonArray;
        };
        BpmnModelJsonHelper.StringListFromJsonArray = function (jsonArray) {
            if (jsonArray == null) {
                return null;
            }
            var list = new Array();
            for (var _i = 0, jsonArray_2 = jsonArray; _i < jsonArray_2.length; _i++) {
                var item = jsonArray_2[_i];
                if (typeof item == "object") {
                    list.push(JSON.stringify(item));
                }
                else {
                    list.push(String(item));
                }
            }
            return list;
        };
        BpmnModelJsonHelper.StringListToJson = function (value) {
            var jsonArray = BpmnModelJsonHelper.StringListToJsonArray(value);
            if (jsonArray == null)
                return null;
            return JSON.stringify(jsonArray);
        };
        BpmnModelJsonHelper.StringListFromJson = function (json) {
            if (BpmnModelJsonHelper.IsNullOrWhiteSpace(json)) {
                return null;
            }
            var jsonArray = JSON.parse(json);
            if (jsonArray == null) {
                return null;
            }
            return BpmnModelJsonHelper.StringListFromJsonArray(jsonArray);
        };
        BpmnModelJsonHelper.IsNullOrWhiteSpace = function (string) {
            if (string == null) {
                return true;
            }
            else {
                return string.replace(/(^s*)|(s*$)/g, "").length == 0;
            }
        };
        BpmnModelJsonHelper.GetDateFromISO = function (value) {
            var a = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
            if (a) {
                return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]));
            }
            else {
                return null;
            }
        };
        BpmnModelJsonHelper.dateFormat = function (date, fmt) {
            var ret;
            var opt = {
                "y+": date.getUTCFullYear().toString(),
                "M+": (date.getUTCMonth() + 1).toString(),
                "d+": date.getUTCDate().toString(),
                "H+": date.getUTCHours().toString(),
                "m+": date.getUTCMinutes().toString(),
                "s+": date.getUTCSeconds().toString(),
                "S+": date.getUTCMilliseconds().toString(),
            };
            for (var k in opt) {
                ret = new RegExp("(" + k + ")").exec(fmt);
                if (ret) {
                    if (!String.prototype.padStart) {
                        fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (BpmnModelJsonHelper.myPadStart(opt[k], ret[1].length, "0")));
                    }
                    else {
                        fmt = fmt.replace(ret[1], (ret[1].length == 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, "0")));
                    }
                }
            }
            return fmt;
        };
        BpmnModelJsonHelper.myPadStart = function (src, targetLength, padString) {
            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;
            padString = String(typeof padString !== 'undefined' ? padString : ' ');
            if (src.length > targetLength) {
                return String(src);
            }
            else {
                targetLength = targetLength - src.length;
                if (targetLength > padString.length) {
                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
                }
                return padString.slice(0, targetLength) + String(src);
            }
        };
        BpmnModelJsonHelper.MIN_OFFSETDATETIME = BpmnModelJsonHelper.GetDateFromISO("0001-01-01T12:00:00.000Z");
        BpmnModelJsonHelper.MAX_OFFSETDATETIME = BpmnModelJsonHelper.GetDateFromISO("9999-12-31T23:59:59.000Z");
        return BpmnModelJsonHelper;
    }());

    var ExtensionMethod = /** @class */ (function () {
        function ExtensionMethod() {
        }
        ///#region JsonObject
        ExtensionMethod.GetAttributeValue = function (obj, attributeName) {
            return BpmnModelJsonHelper.GetAttributeValue(obj, attributeName);
        };
        ExtensionMethod.GetAttributeValue4Boolean = function (obj, attributeName) {
            return BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, attributeName);
        };
        ExtensionMethod.GetAttributeValue4Decimal = function (obj, attributeName) {
            return BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, attributeName);
        };
        ExtensionMethod.GetAttributeValue4Double = function (obj, attributeName) {
            return BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, attributeName);
        };
        ExtensionMethod.GetAttributeValue4Int64 = function (obj, attributeName) {
            return BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, attributeName);
        };
        ExtensionMethod.GetAttributeValue4String = function (obj, attributeName) {
            return BpmnModelJsonHelper.GetAttributeValueAsString(obj, attributeName);
        };
        ExtensionMethod.SetAttributeValue = function (obj, attributeName, value) {
            BpmnModelJsonHelper.SetAttributeValue(obj, attributeName, value);
        };
        ///#endregion
        ExtensionMethod.GetDataInputWithName = function (container, name) {
            for (var _i = 0, _a = container.GetDataInputs(); _i < _a.length; _i++) {
                var item = _a[_i];
                if (item.Name == name) {
                    return item;
                }
            }
            return null;
        };
        ExtensionMethod.GetDataOutputWithName = function (container, name) {
            for (var _i = 0, _a = container.GetDataOutputs(); _i < _a.length; _i++) {
                var item = _a[_i];
                if (item.Name == name) {
                    return item;
                }
            }
            return null;
        };
        ExtensionMethod.GetDataObjectWithName = function (container, name) {
            for (var _i = 0, _a = container.GetDataObjects(); _i < _a.length; _i++) {
                var item = _a[_i];
                if (item.Name == name) {
                    return item;
                }
            }
            return null;
        };
        return ExtensionMethod;
    }());

    var EventHelper = /** @class */ (function () {
        function EventHelper(callback, context) {
            /** 回调函数 */
            this.callback = null;
            /** 上下文 */
            this.context = null;
            var self = this;
            self.callback = callback;
            self.context = context;
        }
        /**
         * 发送通知
         * @param args 不定参数
         */
        EventHelper.prototype.notify = function (name) {
            var self = this;
            self.callback.call(self.context, name);
        };
        /**
         * 上下文比较
         * @param context 上下文
         */
        EventHelper.prototype.compar = function (context) {
            return context == this.context;
        };
        return EventHelper;
    }());

    var FlowElement = /** @class */ (function (_super) {
        __extends(FlowElement, _super);
        function FlowElement(model) {
            return _super.call(this, model) || this;
        }
        FlowElement.prototype.RegisterEvent = function (name, callback, context) {
            var observers = FlowElement.listeners[name];
            if (!observers) {
                FlowElement.listeners[name] = [];
            }
            FlowElement.listeners[name].push(new EventHelper(callback, context));
        };
        FlowElement.prototype.FireEvent = function (name) {
            var observers = FlowElement.listeners[name];
            if (!observers)
                return;
            var length = observers.length;
            for (var i = 0; i < length; i++) {
                var observer = observers[i];
                observer.notify(name);
            }
        };
        FlowElement.prototype.RemoveEvent = function (name, callback, context) {
            var observers = FlowElement.listeners[name];
            if (!observers)
                return;
            var length = observers.length;
            for (var i = 0; i < length; i++) {
                var observer = observers[i];
                if (observer.compar(context)) {
                    observers.splice(i, 1);
                    break;
                }
            }
            if (observers.length == 0) {
                delete FlowElement.listeners[name];
            }
        };
        FlowElement.prototype.clone = function () {
            var clone = this.NewInstance();
            clone.Name = this.Name;
            clone.NameLanguage = this.NameLanguage && __assign({}, this.NameLanguage);
            return clone;
        };
        FlowElement.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Name = null;
        };
        FlowElement.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
            BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            BpmnModelHelper.SetAttributeValue(obj, "nameLanguage", this.NameLanguage);
            return obj;
        };
        FlowElement.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Name = obj.Name;
            this.NameLanguage = obj.nameLanguage;
        };
        FlowElement.listeners = {};
        return FlowElement;
    }(BaseElement));

    exports.GatewayType = void 0;
    (function (GatewayType) {
        GatewayType["Exclusive"] = "Exclusive";
        GatewayType["Inclusive"] = "Inclusive";
        GatewayType["Parallel"] = "Parallel";
    })(exports.GatewayType || (exports.GatewayType = {}));

    var ExecutionListener = /** @class */ (function (_super) {
        __extends(ExecutionListener, _super);
        function ExecutionListener(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Mex.ExecutionListener";
            return _this;
        }
        ExecutionListener.prototype.NewInstance = function () {
            return new ExecutionListener(this.Model);
        };
        ExecutionListener.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Class = null;
            this.Event = null;
        };
        ExecutionListener.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Event", this.Event);
            BpmnModelHelper.SetAttributeValue(obj, "Class", this.Class);
            return obj;
        };
        ExecutionListener.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Event = obj.Event;
            this.Class = obj.Class;
        };
        return ExecutionListener;
    }(MexExtensionElement));

    var ObjectHelper = /** @class */ (function () {
        function ObjectHelper() {
        }
        /**
         * 获取继承链类名列表
         * @param obj
         * @returns
         */
        ObjectHelper.getPrototypeNames = function (obj) {
            var list = [];
            while (obj != null) {
                list.push(obj.constructor.name);
                obj = obj.__proto__;
            }
            return list;
        };
        /**
         * 是否继承自某个类
         * @param obj
         * @param superClassName
         * @returns
         */
        ObjectHelper.extendFromClass = function (obj, superClassName) {
            var protoNames = ObjectHelper.getPrototypeNames(obj);
            return protoNames.includes(superClassName);
        };
        return ObjectHelper;
    }());

    var FlowNode = /** @class */ (function (_super) {
        __extends(FlowNode, _super);
        function FlowNode(model) {
            var _this = _super.call(this, model) || this;
            _this.executionListeners = new Array();
            _this.IncomingGatewayType = exports.GatewayType.Exclusive;
            _this.Incomings = new Array();
            _this.OutgoingGatewayType = exports.GatewayType.Exclusive;
            _this.Outgoings = new Array();
            _this.MEXTAG = "bpmn.FlowNode";
            return _this;
        }
        FlowNode.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.executionListeners = new Array();
            this.IncomingGatewayType = exports.GatewayType.Exclusive;
            this.Incomings = new Array();
            this.OutgoingGatewayType = exports.GatewayType.Exclusive;
            this.Outgoings = new Array();
        };
        FlowNode.prototype.GetExecutionListeners = function () {
            return this.executionListeners;
        };
        FlowNode.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            if (ObjectHelper.extendFromClass(this, "Gateway") == false) {
                if (this.IncomingGatewayType != exports.GatewayType.Exclusive)
                    BpmnModelHelper.SetAttributeValue(obj, "IncomingGatewayType", this.IncomingGatewayType);
                if (this.OutgoingGatewayType != exports.GatewayType.Exclusive)
                    BpmnModelHelper.SetAttributeValue(obj, "OutgoingGatewayType", this.OutgoingGatewayType);
            }
            var incomings = new Array();
            for (var _i = 0, _a = this.Incomings; _i < _a.length; _i++) {
                var item = _a[_i];
                incomings.push(item);
            }
            if (incomings.length > 0)
                BpmnModelHelper.SetAttributeValue(obj, "incomings", incomings);
            var outgoings = new Array();
            for (var _b = 0, _c = this.Outgoings; _b < _c.length; _b++) {
                var item = _c[_b];
                outgoings.push(item);
            }
            if (outgoings.length > 0)
                BpmnModelHelper.SetAttributeValue(obj, "outgoings", outgoings);
            return obj;
        };
        FlowNode.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (ObjectHelper.extendFromClass(this, "Gateway") == false) {
                if (obj.hasOwnProperty("IncomingGatewayType"))
                    this.IncomingGatewayType = obj.IncomingGatewayType;
                if (obj.hasOwnProperty("OutgoingGatewayType"))
                    this.OutgoingGatewayType = obj.OutgoingGatewayType;
            }
            if (obj.hasOwnProperty("incomings") && Array.isArray(obj.incomings)) {
                for (var _i = 0, _a = obj.incomings; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.Incomings.push(item);
                }
            }
            if (obj.hasOwnProperty("outgoings") && Array.isArray(obj.outgoings)) {
                for (var _b = 0, _c = obj.outgoings; _b < _c.length; _b++) {
                    var item = _c[_b];
                    this.Outgoings.push(item);
                }
            }
        };
        FlowNode.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
                var item = _a[_i];
                item.MexTag = this.MEXTAG;
                list.push(item);
            }
            return list;
        };
        FlowNode.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof ExecutionListener && extensionElement.MexTag == this.MEXTAG) {
                    this.executionListeners.push(extensionElement);
                }
            }
        };
        FlowNode.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
                var item = _a[_i];
                item.Validate(errors);
            }
            for (var _b = 0, _c = this.Incomings; _b < _c.length; _b++) {
                var item = _c[_b];
                var sequenceFlow = this.Model.GetHasIdElement(item);
                if (sequenceFlow == null) {
                    var error = new ValidationError();
                    error.Element = this;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + item + " \u7684\u8FDE\u7EBF\u3002";
                    errors.push(error);
                }
            }
            for (var _d = 0, _e = this.Outgoings; _d < _e.length; _d++) {
                var item = _e[_d];
                var sequenceFlow = this.Model.GetHasIdElement(item);
                if (sequenceFlow == null) {
                    var error = new ValidationError();
                    error.Element = this;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + item + " \u7684\u8FDE\u7EBF\u3002";
                    errors.push(error);
                }
            }
        };
        return FlowNode;
    }(FlowElement));

    var Event = /** @class */ (function (_super) {
        __extends(Event, _super);
        function Event(model) {
            var _this = _super.call(this, model) || this;
            _this.EventDefinitions = new Array();
            return _this;
        }
        Event.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var eventDefinitionsJsonArray = new Array();
            for (var _i = 0, _a = this.EventDefinitions; _i < _a.length; _i++) {
                var item = _a[_i];
                eventDefinitionsJsonArray.push(item.ConvertToJsonObject());
            }
            if (eventDefinitionsJsonArray.length > 0) {
                ExtensionMethod.SetAttributeValue(obj, "eventDefinitions", eventDefinitionsJsonArray);
            }
            return obj;
        };
        Event.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            var eventDefinitionsElement = ExtensionMethod.GetAttributeValue(obj, "eventDefinitions");
            if (eventDefinitionsElement instanceof Array) {
                var eventDefinitionsJsonArray = eventDefinitionsElement;
                var tempVar = null;
                for (var _i = 0, eventDefinitionsJsonArray_1 = eventDefinitionsJsonArray; _i < eventDefinitionsJsonArray_1.length; _i++) {
                    var item = eventDefinitionsJsonArray_1[_i];
                    var type = BpmnModelHelper.GetElementType(ExtensionMethod.GetAttributeValue4String(item, "ClrTypeID"));
                    if (type == null) {
                        continue;
                    }
                    tempVar = type.NewInstance();
                    tempVar.Model = this.Model;
                    var eventDefinition = (tempVar instanceof EventDefinition) ? tempVar : null;
                    if (eventDefinition == null) {
                        continue;
                    }
                    eventDefinition.LoadFromJsonObject(item);
                    this.EventDefinitions.push(eventDefinition);
                }
            }
        };
        return Event;
    }(FlowNode));

    var ThrowEvent = /** @class */ (function (_super) {
        __extends(ThrowEvent, _super);
        function ThrowEvent(model) {
            var _this = _super.call(this, model) || this;
            _this.dataInputAssociationDic = {};
            _this.dataInputDIc = {};
            return _this;
        }
        ThrowEvent.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.dataInputAssociationDic = {};
            this.dataInputDIc = {};
        };
        ThrowEvent.prototype.AddDataInput = function (item) {
            this.CheckVariableElement(item);
            this.dataInputDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        ThrowEvent.prototype.GetDataInput = function (dataInputId) {
            if (dataInputId == null)
                return null;
            if (this.dataInputDIc.hasOwnProperty("dataInputId"))
                return this.dataInputDIc[dataInputId];
            return null;
        };
        ThrowEvent.prototype.GetDataInputs = function () {
            var dataInputs = new Array();
            for (var item in this.dataInputDIc) {
                dataInputs.push(this.dataInputDIc[item]);
            }
            return dataInputs;
        };
        ThrowEvent.prototype.RemoveDataInput = function (dataInputId) {
            delete this.dataInputDIc[dataInputId];
            this.Model.RemoveHasIdElement(dataInputId);
        };
        ThrowEvent.prototype.AddDataInputAssociation = function (association) {
            ValidateHelper.CheckHasIdElement(association);
            this.dataInputAssociationDic[association.Id] = association;
            this.Model.AddHasIdElement(association);
        };
        ThrowEvent.prototype.GetDataInputAssociation = function (associationId) {
            if (associationId == null)
                return null;
            if (this.dataInputAssociationDic.hasOwnProperty("associationId"))
                return this.dataInputAssociationDic[associationId];
            return null;
        };
        ThrowEvent.prototype.GetDataInputAssociations = function () {
            var dataInputAssociations = new Array();
            for (var item in this.dataInputAssociationDic) {
                dataInputAssociations.push(this.dataInputAssociationDic[item]);
            }
            return dataInputAssociations;
        };
        ThrowEvent.prototype.RemoveDataInputAssociation = function (associationId) {
            delete this.dataInputAssociationDic[associationId];
            this.Model.RemoveHasIdElement(associationId);
        };
        ThrowEvent.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var dataInputs = new Array();
            for (var item in this.dataInputDIc) {
                var element = this.dataInputDIc[item].ConvertToJsonObject();
                dataInputs.push(element);
            }
            if (dataInputs.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataInputs", dataInputs);
            }
            var dataInputAssociations = new Array();
            for (var item in this.dataInputAssociationDic) {
                var element = this.dataInputAssociationDic[item].ConvertToJsonObject();
                dataInputAssociations.push(element);
            }
            if (dataInputAssociations.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataInputAssociations", dataInputAssociations);
            }
            return obj;
        };
        ThrowEvent.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("dataInputs") && Array.isArray(obj.dataInputs)) {
                for (var _i = 0, _a = obj.dataInputs; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var dataInput = new DataInput(this.Model);
                    dataInput.LoadFromJsonObject(item);
                    this.AddDataInput(dataInput);
                }
            }
            if (obj.hasOwnProperty("dataInputAssociations") && Array.isArray(obj.dataInputAssociations)) {
                for (var item in obj.dataInputAssociations) {
                    var dataInputAssociation = new DataInputAssociation(this.Model);
                    dataInputAssociation.LoadFromJsonObject(item);
                    this.AddDataInputAssociation(dataInputAssociation);
                }
            }
        };
        ThrowEvent.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var item in this.dataInputDIc) {
                this.dataInputDIc[item].Validate(errors);
            }
            for (var item in this.dataInputAssociationDic) {
                this.dataInputAssociationDic[item].Validate(errors);
            }
        };
        ThrowEvent.prototype.CheckVariableElement = function (variableElement) {
            ValidateHelper.CheckVariableElement(variableElement, this, null, null);
        };
        return ThrowEvent;
    }(Event));

    var EndEvent = /** @class */ (function (_super) {
        __extends(EndEvent, _super);
        function EndEvent(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.EndEvent";
            return _this;
        }
        EndEvent.prototype.NewInstance = function () {
            return new EndEvent(this.Model);
        };
        return EndEvent;
    }(ThrowEvent));

    var SequenceFlow = /** @class */ (function (_super) {
        __extends(SequenceFlow, _super);
        function SequenceFlow(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.SequenceFlow";
            _this.executionListeners = new Array();
            _this.MEXTAG = "bpmn.SequenceFlow";
            return _this;
        }
        SequenceFlow.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.ConditionExpression = null;
            this.SkipExpression = null;
            this.SourceRef = null;
            this.TargetRef = null;
            this.executionListeners = new Array();
        };
        SequenceFlow.prototype.NewInstance = function () {
            return new SequenceFlow(this.Model);
        };
        SequenceFlow.prototype.GetExecutionListeners = function () {
            return this.executionListeners;
        };
        SequenceFlow.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "SkipExpression", this.SkipExpression);
            BpmnModelHelper.SetAttributeValue(obj, "SourceRef", this.SourceRef);
            BpmnModelHelper.SetAttributeValue(obj, "TargetRef", this.TargetRef);
            if (this.ConditionExpression != null) {
                BpmnModelHelper.SetAttributeValue(obj, "ConditionExpression", this.ConditionExpression.ConvertToJsonObject());
            }
            return obj;
        };
        SequenceFlow.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.SkipExpression = obj.SkipExpression;
            this.SourceRef = obj.SourceRef;
            this.TargetRef = obj.TargetRef;
            if (obj.hasOwnProperty("ConditionExpression")) {
                this.ConditionExpression = new Expression(this.Model);
                this.ConditionExpression.LoadFromJsonObject(obj.ConditionExpression);
            }
        };
        SequenceFlow.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
                var item = _a[_i];
                item.MexTag = this.MEXTAG;
                list.push(item);
            }
            return list;
        };
        SequenceFlow.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof ExecutionListener && extensionElement.MexTag == this.MEXTAG) {
                    this.executionListeners.push(extensionElement);
                }
            }
        };
        SequenceFlow.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
                var item = _a[_i];
                item.Validate(errors);
            }
        };
        return SequenceFlow;
    }(FlowElement));

    var DataOutputAssociation = /** @class */ (function (_super) {
        __extends(DataOutputAssociation, _super);
        function DataOutputAssociation(model) {
            return _super.call(this, model) || this;
        }
        return DataOutputAssociation;
    }(DataAssociation));

    var CatchEvent = /** @class */ (function (_super) {
        __extends(CatchEvent, _super);
        function CatchEvent(model) {
            var _this = _super.call(this, model) || this;
            _this.dataOutputAssociationDic = {};
            _this.dataOutputDIc = {};
            return _this;
        }
        CatchEvent.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.dataOutputAssociationDic = {};
            this.dataOutputDIc = {};
        };
        CatchEvent.prototype.AddDataOutput = function (item) {
            this.CheckVariableElement(item);
            this.dataOutputDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        CatchEvent.prototype.GetDataOutput = function (dataOutputId) {
            if (dataOutputId == null)
                return null;
            if (this.dataOutputDIc.hasOwnProperty("dataOutputId"))
                return this.dataOutputDIc[dataOutputId];
            return null;
        };
        CatchEvent.prototype.GetDataOutputs = function () {
            var dataOutputs = new Array();
            for (var item in this.dataOutputDIc) {
                dataOutputs.push(this.dataOutputDIc[item]);
            }
            return dataOutputs;
        };
        CatchEvent.prototype.RemoveDataOutput = function (dataOutputId) {
            delete this.dataOutputDIc[dataOutputId];
            this.Model.RemoveHasIdElement(dataOutputId);
        };
        CatchEvent.prototype.AddDataOutputAssociation = function (association) {
            ValidateHelper.CheckHasIdElement(association);
            this.dataOutputAssociationDic[association.Id] = association;
            this.Model.AddHasIdElement(association);
        };
        CatchEvent.prototype.GetDataOutputAssociation = function (associationId) {
            if (associationId == null)
                return null;
            if (this.dataOutputAssociationDic.hasOwnProperty("associationId"))
                return this.dataOutputAssociationDic[associationId];
            return null;
        };
        CatchEvent.prototype.GetDataOutputAssociations = function () {
            var dataOutputAssociations = new Array();
            for (var item in this.dataOutputAssociationDic) {
                dataOutputAssociations.push(this.dataOutputAssociationDic[item]);
            }
            return dataOutputAssociations;
        };
        CatchEvent.prototype.RemoveDataOutputAssociation = function (associationId) {
            delete this.dataOutputAssociationDic[associationId];
            this.Model.RemoveHasIdElement(associationId);
        };
        CatchEvent.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var dataOutputs = new Array();
            for (var item in this.dataOutputDIc) {
                var element = this.dataOutputDIc[item].ConvertToJsonObject();
                dataOutputs.push(element);
            }
            if (dataOutputs.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataOutputs", dataOutputs);
            }
            var dataOutputAssociations = new Array();
            for (var item in this.dataOutputAssociationDic) {
                var element = this.dataOutputAssociationDic[item].ConvertToJsonObject();
                dataOutputAssociations.push(element);
            }
            if (dataOutputAssociations.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataOutputAssociations", dataOutputAssociations);
            }
            return obj;
        };
        CatchEvent.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("dataOutputs") && Array.isArray(obj.dataOutputs)) {
                for (var _i = 0, _a = obj.dataOutputs; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var dataOutput = new DataOutput(this.Model);
                    dataOutput.LoadFromJsonObject(item);
                    this.AddDataOutput(dataOutput);
                }
            }
            if (obj.hasOwnProperty("dataOutputAssociations") && Array.isArray(obj.dataOutputAssociations)) {
                for (var item in obj.dataOutputAssociations) {
                    var dataOutputAssociation = new DataOutputAssociation(this.Model);
                    dataOutputAssociation.LoadFromJsonObject(item);
                    this.AddDataOutputAssociation(dataOutputAssociation);
                }
            }
        };
        CatchEvent.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var item in this.dataOutputDIc) {
                this.dataOutputDIc[item].Validate(errors);
            }
            for (var item in this.dataOutputAssociationDic) {
                this.dataOutputAssociationDic[item].Validate(errors);
            }
        };
        CatchEvent.prototype.CheckVariableElement = function (variableElement) {
            ValidateHelper.CheckVariableElement(variableElement, null, this, null);
        };
        return CatchEvent;
    }(Event));

    var StartEvent = /** @class */ (function (_super) {
        __extends(StartEvent, _super);
        function StartEvent(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.StartEvent";
            return _this;
        }
        StartEvent.prototype.NewInstance = function () {
            return new StartEvent(this.Model);
        };
        return StartEvent;
    }(CatchEvent));

    var ValidateHelper = /** @class */ (function () {
        function ValidateHelper() {
        }
        ValidateHelper.CheckHasIdElement = function (element) {
            if (element == null)
                throw new Error("流程元素不能为 null.");
            if (element.Id == null)
                throw new Error("流程元素 id 不能为 null.");
            if (ValidateHelper.IsMatchVariableNameRules(element.Id) == false)
                throw new Error("流程元素 id 只能包含字母、数字和下划线，且不能以数字开头。");
            if (element.Model.GetHasIdElement(element.Id) != null)
                throw new Error("\u5DF2\u7ECF\u5B58\u5728 id \u4E3A " + element.Id + " \u7684\u6D41\u7A0B\u5143\u7D20\u3002");
        };
        ValidateHelper.IsMatchVariableNameRules = function (str) {
            var Regx = /^[a-zA-Z_][a-zA-Z_0-9]{0,}/;
            if (Regx.test(str)) {
                return true;
            }
            else {
                return false;
            }
        };
        ValidateHelper.ValidateProcess = function (process, errors) {
            this.ValidateStartEvents(process, errors);
            this.ValidateEndEvents(process, errors);
            this.ValidateSequenceFlow(process, errors);
            this.ValidateFlowNode(process, errors);
            for (var item in process.GetFlowElements()) {
                //let associationContainer: IDataInputAssociationContainer = process.GetFlowElements()[item] as IDataInputAssociationContainer;
                //if (associationContainer == null)
                //    continue;
                //this.ValidateIDataInputAssociationContainer(process, errors, associationContainer);
            }
            for (var item in process.GetFlowElements()) {
                //let associationContainer: IDataOutputAssociationContainer = process.GetFlowElements()[item] as IDataOutputAssociationContainer;
                //if (associationContainer == null)
                //    continue;
                //this.ValidateIDataOutputAssociationContainer(process, errors, associationContainer);
            }
        };
        ValidateHelper.CheckVariableElement = function (variableElement, dataInputContainer, dataOutputContainer, dataObjectContainer) {
            this.CheckHasIdElement(variableElement);
            if (variableElement.Name == null)
                throw new Error("变量名、参数名不能为 null.");
            if (ValidateHelper.IsMatchVariableNameRules(variableElement.Name) == false)
                throw new Error("变量名、参数名只能包含字母、数字和下划线，且不能以数字开头。");
            if (dataInputContainer != null) {
                for (var _i = 0, _a = dataInputContainer.GetDataInputs(); _i < _a.length; _i++) {
                    var item = _a[_i];
                    if (variableElement.Name == item.Name)
                        throw new Error("\u5DF2\u5B58\u5728\u540D\u4E3A " + variableElement.Name + " \u7684\u8F93\u5165\u53C2\u6570");
                }
            }
            if (dataOutputContainer != null) {
                for (var _b = 0, _c = dataOutputContainer.GetDataOutputs(); _b < _c.length; _b++) {
                    var item = _c[_b];
                    if (variableElement.Name == item.Name)
                        throw new Error("\u5DF2\u5B58\u5728\u540D\u4E3A " + variableElement.Name + " \u7684\u8F93\u51FA\u53C2\u6570");
                }
            }
            if (dataObjectContainer != null) {
                for (var _d = 0, _e = dataObjectContainer.GetDataObjects(); _d < _e.length; _d++) {
                    var item = _e[_d];
                    if (variableElement.Name == item.Name)
                        throw new Error("\u5DF2\u5B58\u5728\u540D\u4E3A " + variableElement.Name + " \u7684\u6D41\u7A0B\u53D8\u91CF");
                }
            }
        };
        ValidateHelper.ValidateEndEvents = function (process, errors) {
            var endEvents = new Array();
            for (var item in process.GetFlowElements()) {
                var endEvent = process.GetFlowElements()[item];
                if (endEvent instanceof EndEvent)
                    endEvents.push(endEvent);
            }
            if (endEvents.length == 0) {
                var error = new ValidationError();
                //error.Element = process as BpmnModelElement;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "未设置结束活动";
                errors.push(error);
            }
        };
        ValidateHelper.ValidateFlowNode = function (process, errors) {
            for (var item in process.GetFlowElements()) {
                var flowNode = process.GetFlowElements()[item];
                if ((flowNode instanceof FlowNode) == false)
                    continue;
                var incomings = new Array();
                var outgoings = new Array();
                for (var item2 in process.GetFlowElements()) {
                    var sequenceFlow = process.GetFlowElements()[item2];
                    if (sequenceFlow instanceof SequenceFlow == false)
                        continue;
                    if (sequenceFlow.SourceRef == flowNode.Id)
                        outgoings.push(sequenceFlow);
                    if (sequenceFlow.TargetRef == flowNode.Id)
                        incomings.push(sequenceFlow);
                }
                if (incomings.length == 0 && (flowNode instanceof StartEvent) == false) {
                    var error = new ValidationError();
                    error.Element = flowNode;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "没有入口连线";
                    errors.push(error);
                }
                if (incomings.length > 0 && (flowNode instanceof StartEvent) == true) {
                    var error = new ValidationError();
                    error.Element = flowNode;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "开始活动不能有入口连线";
                    errors.push(error);
                }
                if (outgoings.length == 0 && (flowNode instanceof EndEvent) == false) {
                    var error = new ValidationError();
                    error.Element = flowNode;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "没有出口连线";
                    errors.push(error);
                }
                if (outgoings.length > 0 && (flowNode instanceof EndEvent) == true) {
                    if (outgoings.length > 0 && (flowNode instanceof EndEvent) == true) {
                        var error = new ValidationError();
                        error.Element = flowNode;
                        error.ErrorLevel = ValidationLevel.$_Error;
                        error.ErrorCode = "";
                        error.ErrorMessage = "结束活动不能有出口连线";
                        errors.push(error);
                    }
                }
            }
        };
        ValidateHelper.ValidateIDataInputAssociationContainer = function (process, errors, associationContainer) {
            for (var _i = 0, _a = associationContainer.GetDataInputAssociations(); _i < _a.length; _i++) {
                var association = _a[_i];
                var targetRefDataInputContainer = associationContainer;
                var IDataInputContainerInterface = {
                    AddDataOutput: function (dataInput) { },
                    GetDataOutput: function (dataInputId) { return new DataInput(null); },
                    GetDataOutputs: function () { return new Array(); },
                    RemoveDataOutput: function (dataInputId) { },
                };
                if (targetRefDataInputContainer instanceof IDataInputContainerInterface) {
                    var error = new ValidationError();
                    error.Element = association;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "id \u4E3A " + associationContainer.Id + " \u7684\u5143\u7D20\u6CA1\u6709\u5B9E\u73B0\u63A5\u53E3 IDataInputContainer\u3002";
                    errors.push();
                }
                if (targetRefDataInputContainer.GetDataInput(association.TargetRef) == null) {
                    var error = new ValidationError();
                    error.Element = association;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "\u6CA1\u6709\u627E\u5230 id \u4E3A " + association.TargetRef + " \u7684\u53C2\u6570\u3002";
                    errors.push(error);
                }
            }
            for (var _b = 0, _c = associationContainer.GetDataInputs(); _b < _c.length; _b++) {
                var dataInput = _c[_b];
                if (dataInput.IsRequired == false)
                    continue;
                var findAssociation = null;
                for (var _d = 0, _e = associationContainer.GetDataInputAssociations(); _d < _e.length; _d++) {
                    var association = _e[_d];
                    if (association.TargetRef == dataInput.Id) {
                        findAssociation = association;
                        break;
                    }
                }
                if (findAssociation == null) {
                    var error = new ValidationError();
                    //error.Element = associationContainer as BpmnModelElement;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "\u6CA1\u6709\u627E\u5230 id \u4E3A " + dataInput.Id + " \uFF0C\u540D\u79F0\u4E3A " + dataInput.Name + " \u7684\u8F93\u5165\u53C2\u6570\u7684\u8D4B\u503C\u8868\u8FBE\u5F0F\u3002";
                    errors.push(error);
                }
            }
        };
        ValidateHelper.ValidateIDataOutputAssociationContainer = function (process, errors, associationContainer) {
            for (var _i = 0, _a = associationContainer.GetDataOutputAssociations(); _i < _a.length; _i++) {
                var association = _a[_i];
                var SourceRefDataOutputContainer = associationContainer;
                var IDataOutputContainerInterface = {
                    AddDataOutput: function (dataOutput) { },
                    GetDataOutput: function (dataOutputId) { return new DataOutput(null); },
                    GetDataOutputs: function () { return new Array(); },
                    RemoveDataOutput: function (dataOutputId) { },
                };
                if (SourceRefDataOutputContainer instanceof IDataOutputContainerInterface) {
                    var error = new ValidationError();
                    error.Element = association;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "id \u4E3A " + associationContainer.Id + " \u7684\u5143\u7D20\u6CA1\u6709\u5B9E\u73B0\u63A5\u53E3 IDataOutputContainer\u3002";
                    errors.push();
                }
                if (process.GetDataObject(association.TargetRef) == null &&
                    process.GetDataInput(association.TargetRef) == null &&
                    process.GetDataOutput(association.TargetRef) == null) {
                    var error = new ValidationError();
                    error.Element = association;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "\u6CA1\u6709\u627E\u5230 id \u4E3A " + association.TargetRef + " \u7684\u53C2\u6570\u6216\u6D41\u7A0B\u53D8\u91CF\u3002";
                    errors.push();
                }
            }
        };
        ValidateHelper.ValidateSequenceFlow = function (process, errors) {
            for (var item in process.GetFlowElements()) {
                var sequenceFlow = process.GetFlowElements()[item];
                if (sequenceFlow instanceof SequenceFlow == false)
                    continue;
                if (sequenceFlow.SourceRef == null) {
                    var error = new ValidationError();
                    error.Element = sequenceFlow;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "没有设定连线的来源";
                    errors.push(error);
                }
                else {
                    if (process.GetFlowElement(sequenceFlow.SourceRef) == null) {
                        var error = new ValidationError();
                        error.Element = sequenceFlow;
                        error.ErrorLevel = ValidationLevel.$_Error;
                        error.ErrorCode = "";
                        error.ErrorMessage = "\u8FDE\u7EBF\u7684\u6765\u6E90\u8BBE\u7F6E\u6709\u8BEF\uFF0C\u6CA1\u6709\u627E\u5230 id \u4E3A " + sequenceFlow.SourceRef + " \u7684\u6D3B\u52A8";
                        errors.push(error);
                    }
                }
                if (sequenceFlow.TargetRef == null) {
                    var error = new ValidationError();
                    error.Element = sequenceFlow;
                    error.ErrorLevel = ValidationLevel.$_Error;
                    error.ErrorCode = "";
                    error.ErrorMessage = "没有设定连线的目标";
                    errors.push(error);
                }
                else {
                    if (process.GetFlowElement(sequenceFlow.TargetRef) == null) {
                        var error = new ValidationError();
                        error.Element = sequenceFlow;
                        error.ErrorLevel = ValidationLevel.$_Error;
                        error.ErrorCode = "";
                        error.ErrorMessage = "\u8FDE\u7EBF\u7684\u76EE\u6807\u8BBE\u7F6E\u6709\u8BEF\uFF0C\u6CA1\u6709\u627E\u5230 id \u4E3A " + sequenceFlow.TargetRef + " \u7684\u6D3B\u52A8";
                        errors.push(error);
                    }
                }
            }
        };
        ValidateHelper.ValidateStartEvents = function (process, errors) {
            var startEvents = new Array();
            for (var item in process.GetFlowElements()) {
                var startEvent = process.GetFlowElements()[item];
                if (startEvent instanceof StartEvent)
                    startEvents.push(startEvent);
            }
            if (startEvents.length == 0) {
                var error = new ValidationError();
                //error.Element = process as BpmnModelElement;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "未设置开始活动";
                errors.push(error);
            }
            else if (startEvents.length > 1) {
                var error = new ValidationError();
                //error.Element = process as BpmnModelElement;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "只能设置1个开始活动";
                errors.push(error);
            }
        };
        return ValidateHelper;
    }());

    var OmgdcElement = /** @class */ (function (_super) {
        __extends(OmgdcElement, _super);
        function OmgdcElement(model) {
            return _super.call(this, model) || this;
        }
        return OmgdcElement;
    }(BpmnModelElement));

    var Font = /** @class */ (function (_super) {
        __extends(Font, _super);
        function Font(model) {
            var _this = _super.call(this, model) || this;
            _this.IsBold = false;
            _this.IsItalic = false;
            _this.IsStrikeThrough = false;
            _this.IsUnderline = false;
            return _this;
        }
        Font.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.IsBold = false;
            this.IsItalic = false;
            this.IsStrikeThrough = false;
            this.IsUnderline = false;
            this.Name = null;
            this.Size = 0;
        };
        Font.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "IsBold", this.IsBold);
            BpmnModelHelper.SetAttributeValue(obj, "IsItalic", this.IsItalic);
            BpmnModelHelper.SetAttributeValue(obj, "IsStrikeThrough", this.IsStrikeThrough);
            BpmnModelHelper.SetAttributeValue(obj, "IsUnderline", this.IsUnderline);
            BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
            BpmnModelHelper.SetAttributeValue(obj, "Size", this.Size);
            return obj;
        };
        Font.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.IsBold = obj.IsBold;
            this.IsItalic = obj.IsItalic;
            this.IsStrikeThrough = obj.IsStrikeThrough;
            this.IsUnderline = obj.IsUnderline;
            this.Name = obj.Name;
            this.Size = obj.Size;
        };
        return Font;
    }(OmgdcElement));

    var Style = /** @class */ (function (_super) {
        __extends(Style, _super);
        function Style(model) {
            return _super.call(this, model) || this;
        }
        return Style;
    }(OmgdiElement));

    var BPMNLabelStyle = /** @class */ (function (_super) {
        __extends(BPMNLabelStyle, _super);
        function BPMNLabelStyle(model) {
            return _super.call(this, model) || this;
        }
        BPMNLabelStyle.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Font = null;
        };
        BPMNLabelStyle.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            if (this.Font != null) {
                BpmnModelHelper.SetAttributeValue(obj, "Font", this.Font.ConvertToJsonObject());
            }
            return obj;
        };
        BPMNLabelStyle.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("Font")) {
                this.Font = new Font(this.Model);
                this.Font.LoadFromJsonObject(obj.Font);
            }
        };
        return BPMNLabelStyle;
    }(Style));

    var DiagramElement = /** @class */ (function (_super) {
        __extends(DiagramElement, _super);
        function DiagramElement(model) {
            return _super.call(this, model) || this;
        }
        DiagramElement.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            var extensionElementsObj = {};
            this.WriteExtensionElements(extensionElementsObj);
            if (Object.getOwnPropertyNames(extensionElementsObj).length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "extensionElements", extensionElementsObj);
            }
            return obj;
        };
        DiagramElement.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("extensionElements")) {
                this.LoadExtensionElements(obj.extensionElements);
            }
        };
        DiagramElement.prototype.LoadExtensionElements = function (extensionElementsObj) {
        };
        DiagramElement.prototype.WriteExtensionElements = function (extensionElementsObj) {
        };
        return DiagramElement;
    }(OmgdiElement));

    var Node = /** @class */ (function (_super) {
        __extends(Node, _super);
        function Node(model) {
            return _super.call(this, model) || this;
        }
        return Node;
    }(DiagramElement));

    var Plane = /** @class */ (function (_super) {
        __extends(Plane, _super);
        function Plane(model) {
            var _this = _super.call(this, model) || this;
            _this.diagramElementDic = {};
            return _this;
        }
        Plane.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.diagramElementDic = {};
        };
        Plane.prototype.AddDiagramElement = function (element) {
            this.CheckDiagramElement(element);
            this.diagramElementDic[element.Id] = element;
        };
        Plane.prototype.GetDiagramElement = function (elementId) {
            if (elementId == null)
                return null;
            if (this.diagramElementDic.hasOwnProperty(elementId))
                return this.diagramElementDic[elementId];
            return null;
        };
        Plane.prototype.GetDiagramElements = function () {
            var diagramElements = new Array();
            for (var item in this.diagramElementDic) {
                var diagramElement = this.diagramElementDic[item];
                diagramElements.push(diagramElement);
            }
            return diagramElements;
        };
        Plane.prototype.RemoveDiagramElement = function (elementId) {
            delete this.diagramElementDic[elementId];
        };
        Plane.prototype.CheckDiagramElement = function (element) {
            ValidateHelper.CheckHasIdElement(element);
        };
        Plane.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var diagramElements = new Array();
            for (var item in this.diagramElementDic) {
                var element = this.diagramElementDic[item].ConvertToJsonObject();
                diagramElements.push(element);
            }
            if (diagramElements.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "diagramElements", diagramElements);
            }
            return obj;
        };
        Plane.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("diagramElements") && Array.isArray(obj.diagramElements)) {
                for (var _i = 0, _a = obj.diagramElements; _i < _a.length; _i++) {
                    var node = _a[_i];
                    var diagramElement = BpmnModelHelper.GetElementType(node.ClrTypeID);
                    if (diagramElement == null)
                        continue;
                    diagramElement.Model = this.Model;
                    diagramElement.LoadFromJsonObject(node);
                    this.AddDiagramElement(diagramElement);
                }
            }
        };
        Plane.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var _i = 0, _a = this.GetDiagramElements(); _i < _a.length; _i++) {
                var item = _a[_i];
                item.Validate(errors);
            }
        };
        return Plane;
    }(Node));

    exports.OrganizationLevel = void 0;
    (function (OrganizationLevel) {
        /**
         * 部门
         */
        OrganizationLevel["DEPARTMENT"] = "DEPARTMENT";
        /**
         * 单位
         */
        OrganizationLevel["UNIT"] = "UNIT";
    })(exports.OrganizationLevel || (exports.OrganizationLevel = {}));

    exports.PalParticipantType = void 0;
    (function (PalParticipantType) {
        /**
         * 岗位
         */
        PalParticipantType["Position"] = "Position";
        /**
         * 组织
         */
        PalParticipantType["Organization"] = "Organization";
        /**
         * 用户
         */
        PalParticipantType["User"] = "User";
    })(exports.PalParticipantType || (exports.PalParticipantType = {}));

    var Participant = /** @class */ (function (_super) {
        __extends(Participant, _super);
        function Participant(model) {
            return _super.call(this, model) || this;
        }
        Participant.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "Id", this.id);
            ExtensionMethod.SetAttributeValue(obj, "Name", this.name);
            return obj;
        };
        Participant.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.id = ExtensionMethod.GetAttributeValue4String(obj, "Id");
            this.name = ExtensionMethod.GetAttributeValue4String(obj, "Name");
        };
        Participant.prototype.clone = function () {
            var c = this.NewInstance();
            c.id = this.id;
            c.name = this.name;
            return c;
        };
        return Participant;
    }(ExtensionElement));

    var PalParticipant = /** @class */ (function (_super) {
        __extends(PalParticipant, _super);
        function PalParticipant(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "pal.PositionParticipant";
            _this.palParticipantType = exports.PalParticipantType.Position;
            // 组织
            _this.organizationLevel = exports.OrganizationLevel.DEPARTMENT;
            _this.positionOrgType = "Sys";
            return _this;
        }
        PalParticipant.prototype.NewInstance = function () {
            return new PalParticipant(this.Model);
        };
        PalParticipant.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.palParticipantType = exports.PalParticipantType.Position;
            this.organizationLevel = exports.OrganizationLevel.DEPARTMENT;
            this.organizationId = null;
            this.organizationCode = null;
            this.organizationName = null;
            this.positionId = null;
            this.positionCode = null;
            this.positionName = null;
            this.positionType = null;
            this.positionOrgId = null;
            this.positionOrgName = null;
            this.positionOrgType = null;
            this.userId = null;
            this.userCode = null;
            this.userName = null;
        };
        PalParticipant.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "PalParticipantType", this.palParticipantType);
            ExtensionMethod.SetAttributeValue(obj, "OrganizationLevel", this.organizationLevel);
            ExtensionMethod.SetAttributeValue(obj, "OrganizationId", this.organizationId);
            ExtensionMethod.SetAttributeValue(obj, "OrganizationCode", this.organizationCode);
            ExtensionMethod.SetAttributeValue(obj, "OrganizationName", this.organizationName);
            ExtensionMethod.SetAttributeValue(obj, "PositionId", this.positionId);
            ExtensionMethod.SetAttributeValue(obj, "PositionCode", this.positionCode);
            ExtensionMethod.SetAttributeValue(obj, "PositionName", this.positionName);
            ExtensionMethod.SetAttributeValue(obj, "PositionType", this.positionType);
            ExtensionMethod.SetAttributeValue(obj, "PositionOrgId", this.positionOrgId);
            ExtensionMethod.SetAttributeValue(obj, "PositionOrgName", this.positionOrgName);
            ExtensionMethod.SetAttributeValue(obj, "PositionOrgType", this.positionOrgType);
            ExtensionMethod.SetAttributeValue(obj, "UserId", this.userId);
            ExtensionMethod.SetAttributeValue(obj, "UserCode", this.userCode);
            ExtensionMethod.SetAttributeValue(obj, "UserName", this.userName);
            return obj;
        };
        PalParticipant.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.palParticipantType = exports.PalParticipantType[ExtensionMethod.GetAttributeValue4String(obj, "PalParticipantType")];
            this.organizationLevel = exports.OrganizationLevel[ExtensionMethod.GetAttributeValue4String(obj, "OrganizationLevel")];
            this.organizationId = ExtensionMethod.GetAttributeValue4String(obj, "OrganizationId");
            this.organizationCode = ExtensionMethod.GetAttributeValue4String(obj, "OrganizationCode");
            this.organizationName = ExtensionMethod.GetAttributeValue4String(obj, "OrganizationName");
            this.positionId = ExtensionMethod.GetAttributeValue4String(obj, "PositionId");
            this.positionCode = ExtensionMethod.GetAttributeValue4String(obj, "PositionCode");
            this.positionName = ExtensionMethod.GetAttributeValue4String(obj, "PositionName");
            this.positionType = ExtensionMethod.GetAttributeValue4String(obj, "PositionType");
            this.positionOrgId = ExtensionMethod.GetAttributeValue4String(obj, "PositionOrgId");
            this.positionOrgName = ExtensionMethod.GetAttributeValue4String(obj, "PositionOrgName");
            this.positionOrgType = ExtensionMethod.GetAttributeValue4String(obj, "PositionOrgType");
            this.userId = ExtensionMethod.GetAttributeValue4String(obj, "UserId");
            this.userCode = ExtensionMethod.GetAttributeValue4String(obj, "UserCode");
            this.userName = ExtensionMethod.GetAttributeValue4String(obj, "UserName");
        };
        PalParticipant.prototype.clone = function () {
            var c = this.NewInstance();
            c.palParticipantType = this.palParticipantType;
            c.organizationId = this.organizationId;
            c.organizationCode = this.organizationCode;
            c.organizationName = this.organizationName;
            c.organizationLevel = this.organizationLevel;
            c.positionId = this.positionId;
            c.positionCode = this.positionCode;
            c.positionName = this.positionName;
            c.positionOrgId = this.positionOrgId;
            c.positionOrgName = this.positionOrgName;
            c.positionOrgType = this.positionOrgType;
            c.positionType = this.positionType;
            c.userId = this.userId;
            c.userCode = this.userCode;
            c.userName = this.userName;
            return c;
        };
        return PalParticipant;
    }(Participant));

    var PalProcessAttribute = /** @class */ (function (_super) {
        __extends(PalProcessAttribute, _super);
        function PalProcessAttribute(model) {
            var _this = _super.call(this, model) || this;
            _this.layer = 0;
            _this.departments = [];
            _this.responsiblePersons = [];
            _this.executiveDepartments = [];
            _this.itSystemIds = [];
            _this.preProcessIds = [];
            _this.postProcessIds = [];
            return _this;
        }
        PalProcessAttribute.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.name = null;
            this.layer = 0;
            this.description = null;
            this.code = null;
            this.processType = null;
            this.input = null;
            this.output = null;
            this.departments = [];
            this.responsiblePersons = [];
            this.executiveDepartments = [];
            this.securityClass = null;
            this.itSystemIds = [];
            this.preProcessIds = [];
            this.postProcessIds = [];
        };
        PalProcessAttribute.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "name", this.name);
            ExtensionMethod.SetAttributeValue(obj, "layer", this.layer);
            ExtensionMethod.SetAttributeValue(obj, "description", this.description);
            ExtensionMethod.SetAttributeValue(obj, "code", this.code);
            ExtensionMethod.SetAttributeValue(obj, "processType", this.processType);
            ExtensionMethod.SetAttributeValue(obj, "input", this.input);
            ExtensionMethod.SetAttributeValue(obj, "output", this.output);
            ExtensionMethod.SetAttributeValue(obj, "departments", this.departments ? this.departments.map(function (it) { return it.ConvertToJsonObject(); }) : []);
            ExtensionMethod.SetAttributeValue(obj, "responsiblePersons", this.responsiblePersons ? this.responsiblePersons.map(function (it) { return it.ConvertToJsonObject(); }) : []);
            ExtensionMethod.SetAttributeValue(obj, "executiveDepartments", this.executiveDepartments ? this.executiveDepartments.map(function (it) { return it.ConvertToJsonObject(); }) : []);
            ExtensionMethod.SetAttributeValue(obj, "securityClass", this.securityClass);
            ExtensionMethod.SetAttributeValue(obj, "itSystemIds", BpmnModelJsonHelper.StringListToJson(this.itSystemIds));
            ExtensionMethod.SetAttributeValue(obj, "preProcessIds", BpmnModelJsonHelper.StringListToJson(this.preProcessIds));
            ExtensionMethod.SetAttributeValue(obj, "postProcessIds", BpmnModelJsonHelper.StringListToJson(this.postProcessIds));
            return obj;
        };
        PalProcessAttribute.prototype.LoadFromJsonObject = function (obj) {
            var _this = this;
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.name = ExtensionMethod.GetAttributeValue4String(obj, "name");
            this.layer = ExtensionMethod.GetAttributeValue4Int64(obj, "layer");
            this.description = ExtensionMethod.GetAttributeValue4String(obj, "description");
            this.code = ExtensionMethod.GetAttributeValue4String(obj, "code");
            this.processType = ExtensionMethod.GetAttributeValue4String(obj, "processType");
            this.input = ExtensionMethod.GetAttributeValue4String(obj, "input");
            this.output = ExtensionMethod.GetAttributeValue4String(obj, "output");
            var departmentObjs = ExtensionMethod.GetAttributeValue(obj, "departments");
            this.departments = departmentObjs ? departmentObjs.map(function (it) {
                var d = new PalParticipant(_this.Model);
                d.LoadFromJsonObject(it);
                return d;
            }) : [];
            var responsiblePersonObjs = ExtensionMethod.GetAttributeValue(obj, "responsiblePersons");
            this.responsiblePersons = responsiblePersonObjs ? responsiblePersonObjs.map(function (it) {
                var d = new PalParticipant(_this.Model);
                d.LoadFromJsonObject(it);
                return d;
            }) : [];
            var executiveDepartmentObjs = ExtensionMethod.GetAttributeValue(obj, "executiveDepartments");
            this.executiveDepartments = executiveDepartmentObjs ? executiveDepartmentObjs.map(function (it) {
                var d = new PalParticipant(_this.Model);
                d.LoadFromJsonObject(it);
                return d;
            }) : [];
            this.securityClass = ExtensionMethod.GetAttributeValue4String(obj, "securityClass");
            this.itSystemIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "itSystemIds"));
            this.preProcessIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "preProcessIds"));
            this.postProcessIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "postProcessIds"));
        };
        PalProcessAttribute.prototype.clone = function () {
            var c = new PalProcessAttribute(this.Model);
            c.name = this.name;
            c.layer = this.layer;
            c.description = this.description;
            c.code = this.code;
            c.processType = this.processType;
            c.input = this.input;
            c.output = this.output;
            c.departments = this.departments.map(function (it) { return it.clone(); });
            c.responsiblePersons = this.responsiblePersons.map(function (it) { return it.clone(); });
            c.executiveDepartments = this.executiveDepartments.map(function (it) { return it.clone(); });
            c.securityClass = this.securityClass;
            c.itSystemIds = this.itSystemIds ? this.itSystemIds.map(function (it) { return it; }) : [];
            c.preProcessIds = this.preProcessIds ? this.preProcessIds.map(function (it) { return it; }) : [];
            c.postProcessIds = this.postProcessIds ? this.postProcessIds.map(function (it) { return it; }) : [];
            return c;
        };
        return PalProcessAttribute;
    }(MexElement));

    var BPMNPlane = /** @class */ (function (_super) {
        __extends(BPMNPlane, _super);
        function BPMNPlane(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.bpmndi.BPMNPlane";
            return _this;
        }
        BPMNPlane.prototype.NewInstance = function () {
            return new BPMNPlane(this.Model);
        };
        BPMNPlane.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.BpmnElementId = null;
            this.palProcessAttribute = null;
        };
        BPMNPlane.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "BpmnElementId", this.BpmnElementId);
            return obj;
        };
        BPMNPlane.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.BpmnElementId = obj.BpmnElementId;
        };
        BPMNPlane.prototype.LoadExtensionElements = function (extensionElementsObj) {
            _super.prototype.LoadExtensionElements.call(this, extensionElementsObj);
            var palProcessAttributeObj = ExtensionMethod.GetAttributeValue(extensionElementsObj, "palProcessAttribute");
            if (palProcessAttributeObj != null) {
                this.palProcessAttribute = new PalProcessAttribute(this.Model);
                this.palProcessAttribute.LoadFromJsonObject(palProcessAttributeObj);
            }
        };
        BPMNPlane.prototype.WriteExtensionElements = function (extensionElementsObj) {
            _super.prototype.WriteExtensionElements.call(this, extensionElementsObj);
            if (this.palProcessAttribute != null) {
                ExtensionMethod.SetAttributeValue(extensionElementsObj, "palProcessAttribute", this.palProcessAttribute.ConvertToJsonObject());
            }
        };
        BPMNPlane.MEXTAG = "plane.bpa";
        return BPMNPlane;
    }(Plane));

    var BPMNDiagram = /** @class */ (function (_super) {
        __extends(BPMNDiagram, _super);
        function BPMNDiagram(model) {
            var _this = _super.call(this, model) || this;
            _this.bpmnLabelStyleDic = {};
            _this.BpmnPlane = new BPMNPlane(model);
            return _this;
        }
        BPMNDiagram.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.BpmnPlane = null;
            this.bpmnLabelStyleDic = {};
        };
        BPMNDiagram.prototype.AddBPMNLabelStyle = function (element) {
            this.CheckBPMNLabelStyle(element);
            this.bpmnLabelStyleDic[element.Id] = element;
            this.Model.AddHasIdElement(element);
        };
        BPMNDiagram.prototype.GetBPMNLabelStyle = function (elementId) {
            if (elementId == null)
                return null;
            if (this.bpmnLabelStyleDic.hasOwnProperty(elementId))
                return this.bpmnLabelStyleDic[elementId];
            return null;
        };
        BPMNDiagram.prototype.GetBPMNLabelStyles = function () {
            var bpmnLabelStyles = new Array();
            for (var item in this.bpmnLabelStyleDic) {
                bpmnLabelStyles.push(this.bpmnLabelStyleDic[item]);
            }
            return bpmnLabelStyles;
        };
        BPMNDiagram.prototype.RemoveBPMNLabelStyle = function (elementId) {
            delete this.bpmnLabelStyleDic[elementId];
        };
        BPMNDiagram.prototype.CheckBPMNLabelStyle = function (element) {
            ValidateHelper.CheckHasIdElement(element);
        };
        BPMNDiagram.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            if (this.BpmnPlane != null) {
                BpmnModelHelper.SetAttributeValue(obj, "BpmnPlane", this.BpmnPlane.ConvertToJsonObject());
            }
            var bpmnLabelStyles = new Array();
            for (var item in this.bpmnLabelStyleDic) {
                var bpmnLabelStyle = this.bpmnLabelStyleDic[item].ConvertToJsonObject();
                bpmnLabelStyles.push(bpmnLabelStyle);
            }
            if (bpmnLabelStyles.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "bpmnLabelStyles", bpmnLabelStyles);
            }
            return obj;
        };
        BPMNDiagram.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("BpmnPlane")) {
                this.BpmnPlane = new BPMNPlane(this.Model);
                this.BpmnPlane.LoadFromJsonObject(obj.BpmnPlane);
            }
            if (obj.hasOwnProperty("bpmnLabelStyles") && Array.isArray(obj.bpmnLabelStyles)) {
                for (var _i = 0, _a = obj.bpmnLabelStyles; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var bpmnLabelStyle = new BPMNLabelStyle(this.Model);
                    bpmnLabelStyle.LoadFromJsonObject(item);
                    this.AddBPMNLabelStyle(bpmnLabelStyle);
                }
            }
        };
        return BPMNDiagram;
    }(Diagram));

    exports.RectangularLineType = void 0;
    (function (RectangularLineType) {
        RectangularLineType["V2H"] = "V2H";
        RectangularLineType["H2V"] = "H2V";
    })(exports.RectangularLineType || (exports.RectangularLineType = {}));

    var RectangularLine = /** @class */ (function (_super) {
        __extends(RectangularLine, _super);
        function RectangularLine(model) {
            var _this = _super.call(this, model) || this;
            _this.LineType = exports.RectangularLineType.H2V;
            return _this;
        }
        RectangularLine.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.LineType = exports.RectangularLineType.H2V;
        };
        RectangularLine.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "LineType", this.LineType);
            return obj;
        };
        RectangularLine.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.LineType = obj.LineType;
        };
        return RectangularLine;
    }(MexElement));

    var Point = /** @class */ (function (_super) {
        __extends(Point, _super);
        function Point(model) {
            return _super.call(this, model) || this;
        }
        Point.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.X = 0;
            this.Y = 0;
        };
        Point.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "X", this.X);
            BpmnModelHelper.SetAttributeValue(obj, "Y", this.Y);
            return obj;
        };
        Point.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.X = obj.X;
            this.Y = obj.Y;
        };
        return Point;
    }(OmgdcElement));

    var Edge = /** @class */ (function (_super) {
        __extends(Edge, _super);
        function Edge(model) {
            var _this = _super.call(this, model) || this;
            _this.Points = new Array();
            return _this;
        }
        Edge.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Points = new Array();
        };
        Edge.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var points = new Array();
            for (var _i = 0, _a = this.Points; _i < _a.length; _i++) {
                var item = _a[_i];
                points.push(item.ConvertToJsonObject());
            }
            if (points.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "points", points);
            }
            return obj;
        };
        Edge.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("points") && Array.isArray(obj.points)) {
                for (var _i = 0, _a = obj.points; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var point = new Point(this.Model);
                    point.LoadFromJsonObject(item);
                    this.Points.push(point);
                }
            }
        };
        return Edge;
    }(DiagramElement));

    var LabeledEdge = /** @class */ (function (_super) {
        __extends(LabeledEdge, _super);
        function LabeledEdge(model) {
            return _super.call(this, model) || this;
        }
        return LabeledEdge;
    }(Edge));

    var Bounds = /** @class */ (function (_super) {
        __extends(Bounds, _super);
        function Bounds(model) {
            return _super.call(this, model) || this;
        }
        Bounds.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Height = 0;
            this.Width = 0;
            this.X = 0;
            this.Y = 0;
        };
        Bounds.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Height", this.Height);
            BpmnModelHelper.SetAttributeValue(obj, "Width", this.Width);
            BpmnModelHelper.SetAttributeValue(obj, "X", this.X);
            BpmnModelHelper.SetAttributeValue(obj, "Y", this.Y);
            return obj;
        };
        Bounds.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Height = obj.Height;
            this.Width = obj.Width;
            this.X = obj.X;
            this.Y = obj.Y;
        };
        return Bounds;
    }(OmgdcElement));

    var Label = /** @class */ (function (_super) {
        __extends(Label, _super);
        function Label(model) {
            return _super.call(this, model) || this;
        }
        Label.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Bounds = null;
        };
        Label.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            if (this.Bounds != null) {
                BpmnModelHelper.SetAttributeValue(obj, "Bounds", this.Bounds.ConvertToJsonObject());
            }
            return obj;
        };
        Label.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("Bounds")) {
                this.Bounds = new Bounds(this.Model);
                this.Bounds.LoadFromJsonObject(obj.Bounds);
            }
        };
        return Label;
    }(Node));

    var BPMNLabel = /** @class */ (function (_super) {
        __extends(BPMNLabel, _super);
        function BPMNLabel(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.bpmndi.BPMNLabel";
            return _this;
        }
        BPMNLabel.prototype.NewInstance = function () {
            return new BPMNLabel(this.Model);
        };
        BPMNLabel.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.LabelStyle = null;
        };
        BPMNLabel.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "LabelStyle", this.LabelStyle);
            return obj;
        };
        BPMNLabel.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.LabelStyle = obj.LabelStyle;
        };
        return BPMNLabel;
    }(Label));

    exports.SequenceFlowLineType = void 0;
    (function (SequenceFlowLineType) {
        SequenceFlowLineType["PolyLine"] = "PolyLine";
        SequenceFlowLineType["RectangularLineType"] = "RectangularLineType";
    })(exports.SequenceFlowLineType || (exports.SequenceFlowLineType = {}));

    var BPMNEdge = /** @class */ (function (_super) {
        __extends(BPMNEdge, _super);
        function BPMNEdge(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.bpmndi.BPMNEdge";
            _this.LineType = exports.SequenceFlowLineType.PolyLine;
            return _this;
        }
        BPMNEdge.prototype.NewInstance = function () {
            return new BPMNEdge(this.Model);
        };
        BPMNEdge.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.BpmnElementId = null;
            this.LineType = exports.SequenceFlowLineType.PolyLine;
            this.SourceShapeElementId = null;
            this.TargetShapeElementId = null;
            this.BpmnLabel = null;
            this.RectangularLine = null;
        };
        BPMNEdge.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "BpmnElementId", this.BpmnElementId);
            BpmnModelHelper.SetAttributeValue(obj, "SourceShapeElementId", this.SourceShapeElementId);
            BpmnModelHelper.SetAttributeValue(obj, "TargetShapeElementId", this.TargetShapeElementId);
            BpmnModelHelper.SetAttributeValue(obj, "LineType", this.LineType);
            if (this.BpmnLabel != null) {
                BpmnModelHelper.SetAttributeValue(obj, "BpmnLabel", this.BpmnLabel.ConvertToJsonObject());
            }
            return obj;
        };
        BPMNEdge.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.BpmnElementId = obj.BpmnElementId;
            this.SourceShapeElementId = obj.SourceShapeElementId;
            this.TargetShapeElementId = obj.TargetShapeElementId;
            this.LineType = obj.LineType;
            if (obj.hasOwnProperty("BpmnLabel")) {
                this.BpmnLabel = new BPMNLabel(this.Model);
                this.BpmnLabel.LoadFromJsonObject(obj.BpmnLabel);
            }
        };
        BPMNEdge.prototype.LoadExtensionElements = function (extensionElementsObj) {
            _super.prototype.LoadExtensionElements.call(this, extensionElementsObj);
            if (extensionElementsObj.hasOwnProperty("RectangularLine")) {
                this.RectangularLine = new RectangularLine(this.Model);
                this.RectangularLine.LoadFromJsonObject(extensionElementsObj.RectangularLine);
            }
        };
        BPMNEdge.prototype.WriteExtensionElements = function (extensionElementsObj) {
            _super.prototype.WriteExtensionElements.call(this, extensionElementsObj);
            switch (this.LineType) {
                case exports.SequenceFlowLineType.RectangularLineType:
                    BpmnModelHelper.SetAttributeValue(extensionElementsObj, "RectangularLine", this.RectangularLine.ConvertToJsonObject());
                    break;
            }
        };
        BPMNEdge.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.Model.GetHasIdElement(this.BpmnElementId) == null) {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + this.BpmnElementId + " \u7684\u5143\u7D20";
                errors.push(error);
            }
        };
        return BPMNEdge;
    }(LabeledEdge));

    var PalUserTaskAttribute = /** @class */ (function (_super) {
        __extends(PalUserTaskAttribute, _super);
        function PalUserTaskAttribute(model) {
            var _this = _super.call(this, model) || this;
            _this.responsiblePersons = [];
            _this.accountablePersons = [];
            _this.consultedPersons = [];
            _this.informedPersons = [];
            _this.formDataIds = [];
            _this.itSystemIds = [];
            _this.riskIds = [];
            _this.riskManagementIds = [];
            _this.systemIds = [];
            _this.kpiIds = [];
            return _this;
        }
        PalUserTaskAttribute.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.name = null;
            this.layer = 0;
            this.description = null;
            this.code = null;
            this.input = null;
            this.output = null;
            this.responsiblePersons = [];
            this.accountablePersons = [];
            this.consultedPersons = [];
            this.informedPersons = [];
            this.formDataIds = [];
            this.itSystemIds = [];
            this.riskIds = [];
            this.riskManagementIds = [];
            this.systemIds = [];
            this.kpiIds = [];
        };
        PalUserTaskAttribute.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "name", this.name);
            ExtensionMethod.SetAttributeValue(obj, "layer", this.layer);
            ExtensionMethod.SetAttributeValue(obj, "description", this.description);
            ExtensionMethod.SetAttributeValue(obj, "code", this.code);
            ExtensionMethod.SetAttributeValue(obj, "input", this.input);
            ExtensionMethod.SetAttributeValue(obj, "output", this.output);
            ExtensionMethod.SetAttributeValue(obj, "responsiblePersons", this.responsiblePersons ? this.responsiblePersons.map(function (it) { return it.ConvertToJsonObject(); }) : []);
            ExtensionMethod.SetAttributeValue(obj, "accountablePersons", this.accountablePersons ? this.accountablePersons.map(function (it) { return it.ConvertToJsonObject(); }) : []);
            ExtensionMethod.SetAttributeValue(obj, "consultedPersons", this.consultedPersons ? this.consultedPersons.map(function (it) { return it.ConvertToJsonObject(); }) : []);
            ExtensionMethod.SetAttributeValue(obj, "informedPersons", this.informedPersons ? this.informedPersons.map(function (it) { return it.ConvertToJsonObject(); }) : []);
            ExtensionMethod.SetAttributeValue(obj, "formDataIds", BpmnModelJsonHelper.StringListToJson(this.formDataIds));
            ExtensionMethod.SetAttributeValue(obj, "itSystemIds", BpmnModelJsonHelper.StringListToJson(this.itSystemIds));
            ExtensionMethod.SetAttributeValue(obj, "riskIds", BpmnModelJsonHelper.StringListToJson(this.riskIds));
            ExtensionMethod.SetAttributeValue(obj, "riskManagementIds", BpmnModelJsonHelper.StringListToJson(this.riskManagementIds));
            ExtensionMethod.SetAttributeValue(obj, "systemIds", BpmnModelJsonHelper.StringListToJson(this.systemIds));
            ExtensionMethod.SetAttributeValue(obj, "kpiIds", BpmnModelJsonHelper.StringListToJson(this.kpiIds));
            return obj;
        };
        PalUserTaskAttribute.prototype.LoadFromJsonObject = function (obj) {
            var _this = this;
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.name = ExtensionMethod.GetAttributeValue4String(obj, "name");
            this.layer = ExtensionMethod.GetAttributeValue4Int64(obj, "layer");
            this.description = ExtensionMethod.GetAttributeValue4String(obj, "description");
            this.code = ExtensionMethod.GetAttributeValue4String(obj, "code");
            this.input = ExtensionMethod.GetAttributeValue4String(obj, "input");
            this.output = ExtensionMethod.GetAttributeValue4String(obj, "output");
            var responsiblePersonObjs = ExtensionMethod.GetAttributeValue(obj, "responsiblePersons");
            this.responsiblePersons = responsiblePersonObjs ? responsiblePersonObjs.map(function (it) {
                var d = new PalParticipant(_this.Model);
                d.LoadFromJsonObject(it);
                return d;
            }) : [];
            var accountablePersonObjs = ExtensionMethod.GetAttributeValue(obj, "accountablePersons");
            this.accountablePersons = accountablePersonObjs ? accountablePersonObjs.map(function (it) {
                var d = new PalParticipant(_this.Model);
                d.LoadFromJsonObject(it);
                return d;
            }) : [];
            var consultedPersonObjs = ExtensionMethod.GetAttributeValue(obj, "consultedPersons");
            this.consultedPersons = consultedPersonObjs ? consultedPersonObjs.map(function (it) {
                var d = new PalParticipant(_this.Model);
                d.LoadFromJsonObject(it);
                return d;
            }) : [];
            var informedPersonObjs = ExtensionMethod.GetAttributeValue(obj, "informedPersons");
            this.informedPersons = informedPersonObjs ? informedPersonObjs.map(function (it) {
                var d = new PalParticipant(_this.Model);
                d.LoadFromJsonObject(it);
                return d;
            }) : [];
            this.formDataIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "formDataIds"));
            this.itSystemIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "itSystemIds"));
            this.riskIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "riskIds"));
            this.riskManagementIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "riskManagementIds"));
            this.systemIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "systemIds"));
            this.kpiIds = BpmnModelJsonHelper.StringListFromJson(ExtensionMethod.GetAttributeValue4String(obj, "kpiIds"));
        };
        PalUserTaskAttribute.prototype.clone = function () {
            var c = new PalUserTaskAttribute(this.Model);
            c.name = this.name;
            c.layer = this.layer;
            c.description = this.description;
            c.code = this.code;
            c.input = this.input;
            c.output = this.output;
            c.responsiblePersons = this.responsiblePersons.map(function (it) { return it.clone(); });
            c.accountablePersons = this.accountablePersons.map(function (it) { return it.clone(); });
            c.consultedPersons = this.consultedPersons.map(function (it) { return it.clone(); });
            c.informedPersons = this.informedPersons.map(function (it) { return it.clone(); });
            c.formDataIds = this.formDataIds ? this.formDataIds.map(function (it) { return it; }) : [];
            c.itSystemIds = this.itSystemIds ? this.itSystemIds.map(function (it) { return it; }) : [];
            c.riskIds = this.riskIds ? this.riskIds.map(function (it) { return it; }) : [];
            c.riskManagementIds = this.riskManagementIds ? this.riskManagementIds.map(function (it) { return it; }) : [];
            c.systemIds = this.systemIds ? this.systemIds.map(function (it) { return it; }) : [];
            c.kpiIds = this.kpiIds ? this.kpiIds.map(function (it) { return it; }) : [];
            return c;
        };
        return PalUserTaskAttribute;
    }(MexElement));

    var Shape = /** @class */ (function (_super) {
        __extends(Shape, _super);
        function Shape(model) {
            return _super.call(this, model) || this;
        }
        Shape.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Bounds = null;
        };
        Shape.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            if (this.Bounds != null) {
                BpmnModelHelper.SetAttributeValue(obj, "Bounds", this.Bounds.ConvertToJsonObject());
            }
            return obj;
        };
        Shape.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("Bounds")) {
                this.Bounds = new Bounds(this.Model);
                this.Bounds.LoadFromJsonObject(obj.Bounds);
            }
        };
        return Shape;
    }(Node));

    var LabeledShape = /** @class */ (function (_super) {
        __extends(LabeledShape, _super);
        function LabeledShape(model) {
            return _super.call(this, model) || this;
        }
        return LabeledShape;
    }(Shape));

    var BPMNShape = /** @class */ (function (_super) {
        __extends(BPMNShape, _super);
        function BPMNShape(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.bpmndi.BPMNShape";
            return _this;
        }
        BPMNShape.prototype.NewInstance = function () {
            return new BPMNShape(this.Model);
        };
        BPMNShape.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.BpmnElementId = null;
            this.BpmnLabel = null;
        };
        BPMNShape.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "BpmnElementId", this.BpmnElementId);
            if (this.BpmnLabel != null) {
                BpmnModelHelper.SetAttributeValue(obj, "BpmnLabel", this.BpmnLabel.ConvertToJsonObject());
            }
            return obj;
        };
        BPMNShape.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.BpmnElementId = obj.BpmnElementId;
            if (obj.hasOwnProperty("BpmnLabel")) {
                this.BpmnLabel = new BPMNLabel(this.Model);
                this.BpmnLabel.LoadFromJsonObject(obj.BpmnLabel);
            }
        };
        BPMNShape.prototype.LoadExtensionElements = function (extensionElementsObj) {
            _super.prototype.LoadExtensionElements.call(this, extensionElementsObj);
            var palUserTaskAttributeObj = ExtensionMethod.GetAttributeValue(extensionElementsObj, "palUserTaskAttribute");
            if (palUserTaskAttributeObj != null) {
                this.palUserTaskAttribute = new PalUserTaskAttribute(this.Model);
                this.palUserTaskAttribute.LoadFromJsonObject(palUserTaskAttributeObj);
            }
        };
        BPMNShape.prototype.WriteExtensionElements = function (extensionElementsObj) {
            _super.prototype.WriteExtensionElements.call(this, extensionElementsObj);
            if (this.palUserTaskAttribute != null) {
                ExtensionMethod.SetAttributeValue(extensionElementsObj, "palUserTaskAttribute", this.palUserTaskAttribute.ConvertToJsonObject());
            }
        };
        BPMNShape.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.Model.GetHasIdElement(this.BpmnElementId) == null) {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "\u627E\u4E0D\u5230 id \u4E3A " + this.BpmnElementId + " \u7684\u5143\u7D20";
                errors.push(error);
            }
        };
        BPMNShape.MEXTAG = "shape.bpa";
        return BPMNShape;
    }(LabeledShape));

    var ConstantExpression = /** @class */ (function (_super) {
        __extends(ConstantExpression, _super);
        function ConstantExpression(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Mex.ConstantExpression";
            return _this;
        }
        ConstantExpression.prototype.NewInstance = function () {
            return new ConstantExpression(this.Model);
        };
        ConstantExpression.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Value = null;
        };
        ConstantExpression.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Value", this.Value);
            return obj;
        };
        ConstantExpression.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Value = obj.Value;
        };
        return ConstantExpression;
    }(MexExpression));

    var CustomType = /** @class */ (function (_super) {
        __extends(CustomType, _super);
        function CustomType(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Mex.CustomType";
            return _this;
        }
        CustomType.prototype.NewInstance = function () {
            return new CustomType(this.Model);
        };
        CustomType.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.AssemblyName = null;
            this.TypeName = null;
        };
        CustomType.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "AssemblyName", this.AssemblyName);
            BpmnModelHelper.SetAttributeValue(obj, "TypeName", this.TypeName);
            BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            return obj;
        };
        CustomType.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.AssemblyName = obj.AssemblyName;
            this.TypeName = obj.TypeName;
        };
        CustomType.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
        };
        return CustomType;
    }(MexElement));

    exports.ExpressionTypes = void 0;
    (function (ExpressionTypes) {
        ExpressionTypes["ConstantExpression"] = "ConstantExpression";
        ExpressionTypes["VariableExpression"] = "VariableExpression";
        ExpressionTypes["SemanticExpression"] = "SemanticExpression";
    })(exports.ExpressionTypes || (exports.ExpressionTypes = {}));

    var SubProcessDataAssociations = /** @class */ (function (_super) {
        __extends(SubProcessDataAssociations, _super);
        function SubProcessDataAssociations(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Mex.SubProcessDataAssociations";
            _this.dataInputAssociationDic = {};
            _this.dataOutputAssociationDic = {};
            return _this;
        }
        SubProcessDataAssociations.prototype.NewInstance = function () {
            return new SubProcessDataAssociations(this.Model);
        };
        SubProcessDataAssociations.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.dataInputAssociationDic = {};
            this.dataOutputAssociationDic = {};
        };
        SubProcessDataAssociations.prototype.AddDataInputAssociation = function (association) {
            ValidateHelper.CheckHasIdElement(association);
            this.dataInputAssociationDic[association.Id] = association;
            this.Model.AddHasIdElement(association);
        };
        SubProcessDataAssociations.prototype.GetDataInputAssociation = function (associationId) {
            if (associationId == null)
                return null;
            if (this.dataInputAssociationDic.hasOwnProperty(associationId))
                return this.dataInputAssociationDic[associationId];
            return null;
        };
        SubProcessDataAssociations.prototype.GetDataInputAssociations = function () {
            var dataInputAssociations = new Array();
            for (var item in this.dataInputAssociationDic) {
                dataInputAssociations.push(this.dataInputAssociationDic[item]);
            }
            return dataInputAssociations;
        };
        SubProcessDataAssociations.prototype.RemoveSubProcessDataInputAssociation = function (associationId) {
            delete this.dataInputAssociationDic[associationId];
        };
        SubProcessDataAssociations.prototype.AddDataOutputAssociation = function (association) {
            ValidateHelper.CheckHasIdElement(association);
            this.dataOutputAssociationDic[association.Id] = association;
            this.Model.AddHasIdElement(association);
        };
        SubProcessDataAssociations.prototype.GetDataOutputAssociation = function (associationId) {
            if (associationId == null)
                return null;
            if (this.dataOutputAssociationDic.hasOwnProperty(associationId))
                return this.dataOutputAssociationDic[associationId];
            return null;
        };
        SubProcessDataAssociations.prototype.GetDataOutputAssociations = function () {
            var dataOutputAssociations = new Array();
            for (var item in this.dataOutputAssociationDic) {
                dataOutputAssociations.push(this.dataOutputAssociationDic[item]);
            }
            return dataOutputAssociations;
        };
        SubProcessDataAssociations.prototype.RemoveDataOutputAssociation = function (associationId) {
            delete this.dataOutputAssociationDic[associationId];
        };
        SubProcessDataAssociations.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var dataInputAssociations = new Array();
            for (var item in this.dataInputAssociationDic) {
                dataInputAssociations.push(this.dataInputAssociationDic[item].ConvertToJsonObject());
            }
            if (dataInputAssociations.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataInputAssociations", dataInputAssociations);
            }
            var dataOutputAssociations = new Array();
            for (var item in this.dataOutputAssociationDic) {
                dataOutputAssociations.push(this.dataOutputAssociationDic[item].ConvertToJsonObject());
            }
            if (dataOutputAssociations.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataOutputAssociations", dataOutputAssociations);
            }
            return obj;
        };
        SubProcessDataAssociations.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("dataInputAssociations") && Array.isArray(obj.dataInputAssociations)) {
                for (var _i = 0, _a = obj.dataInputAssociations; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var dataInputAssociation = new DataInputAssociation(this.Model);
                    dataInputAssociation.LoadFromJsonObject(item);
                    this.AddDataInputAssociation(dataInputAssociation);
                }
            }
            if (obj.hasOwnProperty("dataOutputAssociations") && Array.isArray(obj.dataOutputAssociations)) {
                for (var _b = 0, _c = obj.dataOutputAssociations; _b < _c.length; _b++) {
                    var item = _c[_b];
                    var dataOutputAssociation = new DataOutputAssociation(this.Model);
                    dataOutputAssociation.LoadFromJsonObject(item);
                    this.AddDataOutputAssociation(dataOutputAssociation);
                }
            }
        };
        return SubProcessDataAssociations;
    }(MexExtensionElement));

    exports.VariableExpressionDirection = void 0;
    (function (VariableExpressionDirection) {
        VariableExpressionDirection["ActivityDataInputAssociation"] = "ActivityDataInputAssociation";
        VariableExpressionDirection["ActivityDataOutputAssociation"] = "ActivityDataOutputAssociation";
        VariableExpressionDirection["SubProcessDataInputAssociation"] = "SubProcessDataInputAssociation";
        VariableExpressionDirection["SubProcessDataOutputAssociation"] = "SubProcessDataOutputAssociation";
        VariableExpressionDirection["TransitionCondition"] = "TransitionCondition";
    })(exports.VariableExpressionDirection || (exports.VariableExpressionDirection = {}));

    var VariableExpression = /** @class */ (function (_super) {
        __extends(VariableExpression, _super);
        function VariableExpression(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Mex.VariableExpression";
            _this.Direction = exports.VariableExpressionDirection.ActivityDataInputAssociation;
            return _this;
        }
        VariableExpression.prototype.NewInstance = function () {
            return new VariableExpression(this.Model);
        };
        VariableExpression.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Direction = null;
            this.SourceRef = null;
        };
        VariableExpression.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "SourceRef", this.SourceRef);
            BpmnModelHelper.SetAttributeValue(obj, "Direction", this.Direction);
            return obj;
        };
        VariableExpression.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.SourceRef = obj.SourceRef;
            this.Direction = obj.Direction;
        };
        return VariableExpression;
    }(MexExpression));

    var ExtensionCompletionConditionRuler = /** @class */ (function (_super) {
        __extends(ExtensionCompletionConditionRuler, _super);
        function ExtensionCompletionConditionRuler(model) {
            return _super.call(this, model) || this;
        }
        return ExtensionCompletionConditionRuler;
    }(ExtensionElement));

    var LoopCharacteristics = /** @class */ (function (_super) {
        __extends(LoopCharacteristics, _super);
        function LoopCharacteristics(model) {
            return _super.call(this, model) || this;
        }
        return LoopCharacteristics;
    }(BaseElement));

    var MultiInstanceLoopCharacteristics = /** @class */ (function (_super) {
        __extends(MultiInstanceLoopCharacteristics, _super);
        function MultiInstanceLoopCharacteristics(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = MultiInstanceLoopCharacteristics.Clr_Type_ID;
            _this.completionConditionRules = new Array();
            _this.MEXTAG = "bpmn.MultiInstanceLoopCharacteristics";
            return _this;
        }
        MultiInstanceLoopCharacteristics.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.loopCardinality = null;
            this.completionCondition = null;
            this.completionConditionRules = new Array();
        };
        MultiInstanceLoopCharacteristics.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "Enable", this.enable);
            ExtensionMethod.SetAttributeValue(obj, "IsSequential", this.sequential);
            if (this.loopCardinality != null) {
                ExtensionMethod.SetAttributeValue(obj, "LoopCardinality", this.loopCardinality.ConvertToJsonObject());
            }
            if (this.completionCondition != null) {
                ExtensionMethod.SetAttributeValue(obj, "CompletionCondition", this.completionCondition.ConvertToJsonObject());
            }
            return obj;
        };
        MultiInstanceLoopCharacteristics.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.enable = obj.Enable;
            this.sequential = obj.IsSequential;
            if (obj.hasOwnProperty("LoopCardinality")) {
                this.loopCardinality = new Expression(this.Model);
                this.loopCardinality.LoadFromJsonObject(obj.LoopCardinality);
            }
            if (obj.hasOwnProperty("CompletionCondition")) {
                this.completionCondition = new Expression(this.Model);
                this.completionCondition.LoadFromJsonObject(obj.CompletionCondition);
            }
        };
        MultiInstanceLoopCharacteristics.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            if (this.completionConditionRules) {
                for (var _i = 0, _a = this.completionConditionRules; _i < _a.length; _i++) {
                    var item = _a[_i];
                    item.MexTag = this.MEXTAG;
                    list.push(item);
                }
            }
            return list;
        };
        MultiInstanceLoopCharacteristics.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof ExtensionCompletionConditionRuler && extensionElement.MexTag == this.MEXTAG) {
                    this.completionConditionRules.push(extensionElement);
                }
            }
        };
        MultiInstanceLoopCharacteristics.prototype.NewInstance = function () {
            return new MultiInstanceLoopCharacteristics(this.Model);
        };
        MultiInstanceLoopCharacteristics.prototype.clone = function () {
            var loopCharacteristics = new MultiInstanceLoopCharacteristics(this.Model);
            loopCharacteristics.enable = this.enable;
            loopCharacteristics.sequential = this.sequential;
            if (this.loopCardinality) {
                loopCharacteristics.loopCardinality = this.loopCardinality.clone();
            }
            loopCharacteristics.completionCondition = this.completionCondition;
            loopCharacteristics.completionConditionRules = new Array();
            if (this.completionConditionRules) {
                this.completionConditionRules.forEach(function (com) { return loopCharacteristics.completionConditionRules.push(com.clone()); });
            }
            // loopCharacteristics.completionConditionRules = this.completionConditionRules;
            return loopCharacteristics;
        };
        MultiInstanceLoopCharacteristics.Clr_Type_ID = "wf.MultiInstanceLoopCharacteristics";
        MultiInstanceLoopCharacteristics.MEXTAG = "wf.CallActivitySubProcess";
        return MultiInstanceLoopCharacteristics;
    }(LoopCharacteristics));

    var Activity = /** @class */ (function (_super) {
        __extends(Activity, _super);
        function Activity(model) {
            var _this = _super.call(this, model) || this;
            _this.dataInputAssociationDic = {};
            _this.dataInputDIc = {};
            _this.dataOutputAssociationDic = {};
            _this.dataOutputDIc = {};
            _this.resourceRoleDIc = {};
            _this.IsForCompensation = false;
            return _this;
        }
        Activity.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Default = null;
            this.LoopCharacteristics = null;
            this.IsForCompensation = false;
            this.dataInputAssociationDic = {};
            this.dataInputDIc = {};
            this.dataOutputAssociationDic = {};
            this.dataOutputDIc = {};
            this.resourceRoleDIc = {};
        };
        Activity.prototype.AddDataInput = function (item) {
            this.CheckVariableElement(item);
            this.dataInputDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        Activity.prototype.GetDataInput = function (dataInputId) {
            if (dataInputId == null)
                return null;
            if (this.dataInputDIc.hasOwnProperty("dataInputId"))
                return this.dataInputDIc[dataInputId];
            return null;
        };
        Activity.prototype.GetDataInputs = function () {
            var dataInputs = new Array();
            for (var item in this.dataInputDIc) {
                dataInputs.push(this.dataInputDIc[item]);
            }
            return dataInputs;
        };
        Activity.prototype.RemoveDataInput = function (dataInputId) {
            delete this.dataInputDIc[dataInputId];
            this.Model.RemoveHasIdElement(dataInputId);
        };
        Activity.prototype.AddDataOutput = function (item) {
            this.CheckVariableElement(item);
            this.dataOutputDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        Activity.prototype.GetDataOutput = function (dataOutputId) {
            if (dataOutputId == null)
                return null;
            if (this.dataOutputDIc.hasOwnProperty("dataOutputId"))
                return this.dataOutputDIc[dataOutputId];
            return null;
        };
        Activity.prototype.GetDataOutputs = function () {
            var dataOutputs = new Array();
            for (var item in this.dataOutputDIc) {
                dataOutputs.push(this.dataOutputDIc[item]);
            }
            return dataOutputs;
        };
        Activity.prototype.RemoveDataOutput = function (dataOutputId) {
            delete this.dataOutputDIc[dataOutputId];
            this.Model.RemoveHasIdElement(dataOutputId);
        };
        Activity.prototype.AddDataInputAssociation = function (association) {
            ValidateHelper.CheckHasIdElement(association);
            this.dataInputAssociationDic[association.Id] = association;
            this.Model.AddHasIdElement(association);
        };
        Activity.prototype.GetDataInputAssociation = function (associationId) {
            if (associationId == null)
                return null;
            if (this.dataInputAssociationDic.hasOwnProperty("associationId"))
                return this.dataInputAssociationDic[associationId];
            return null;
        };
        Activity.prototype.GetDataInputAssociations = function () {
            var dataInputAssociations = new Array();
            for (var item in this.dataInputAssociationDic) {
                dataInputAssociations.push(this.dataInputAssociationDic[item]);
            }
            return dataInputAssociations;
        };
        Activity.prototype.RemoveDataInputAssociation = function (associationId) {
            delete this.dataInputAssociationDic[associationId];
            this.Model.RemoveHasIdElement(associationId);
        };
        Activity.prototype.AddDataOutputAssociation = function (association) {
            ValidateHelper.CheckHasIdElement(association);
            this.dataOutputAssociationDic[association.Id] = association;
            this.Model.AddHasIdElement(association);
        };
        Activity.prototype.GetDataOutputAssociation = function (associationId) {
            if (associationId == null)
                return null;
            if (this.dataOutputAssociationDic.hasOwnProperty("associationId"))
                return this.dataOutputAssociationDic[associationId];
            return null;
        };
        Activity.prototype.GetDataOutputAssociations = function () {
            var dataOutputAssociations = new Array();
            for (var item in this.dataOutputAssociationDic) {
                dataOutputAssociations.push(this.dataOutputAssociationDic[item]);
            }
            return dataOutputAssociations;
        };
        Activity.prototype.RemoveDataOutputAssociation = function (associationId) {
            delete this.dataOutputAssociationDic[associationId];
            this.Model.RemoveHasIdElement(associationId);
        };
        Activity.prototype.AddResourceRole = function (item) {
            this.resourceRoleDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        Activity.prototype.GetResourceRole = function (resourceRoleId) {
            if (resourceRoleId == null)
                return null;
            if (this.resourceRoleDIc.hasOwnProperty(resourceRoleId))
                return this.resourceRoleDIc[resourceRoleId];
            return null;
        };
        Activity.prototype.GetResourceRoles = function () {
            var resourceRoles = new Array();
            for (var item in this.resourceRoleDIc) {
                resourceRoles.push(this.resourceRoleDIc[item]);
            }
            return resourceRoles;
        };
        Activity.prototype.RemoveResourceRole = function (resourceRoleId) {
            delete this.resourceRoleDIc[resourceRoleId];
            this.Model.RemoveHasIdElement(resourceRoleId);
        };
        Activity.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Default", this.Default);
            BpmnModelHelper.SetAttributeValue(obj, "IsForCompensation", this.IsForCompensation);
            var dataInputs = new Array();
            for (var item in this.dataInputDIc) {
                var element = this.dataInputDIc[item].ConvertToJsonObject();
                dataInputs.push(element);
            }
            if (dataInputs.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataInputs", dataInputs);
            }
            var dataOutputs = new Array();
            for (var item in this.dataOutputDIc) {
                var element = this.dataOutputDIc[item].ConvertToJsonObject();
                dataOutputs.push(element);
            }
            if (dataOutputs.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataOutputs", dataOutputs);
            }
            var dataInputAssociations = new Array();
            for (var item in this.dataInputAssociationDic) {
                var element = this.dataInputAssociationDic[item].ConvertToJsonObject();
                dataInputAssociations.push(element);
            }
            if (dataInputAssociations.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataInputAssociations", dataInputAssociations);
            }
            var dataOutputAssociations = new Array();
            for (var item in this.dataOutputAssociationDic) {
                var element = this.dataOutputAssociationDic[item].ConvertToJsonObject();
                dataOutputAssociations.push(element);
            }
            if (dataOutputAssociations.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataOutputAssociations", dataOutputAssociations);
            }
            var resourceRoles = new Array();
            for (var item in this.resourceRoleDIc) {
                resourceRoles.push(this.resourceRoleDIc[item].ConvertToJsonObject());
            }
            if (resourceRoles.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "resourceRoles", resourceRoles);
            }
            if (this.LoopCharacteristics != null) {
                BpmnModelHelper.SetAttributeValue(obj, "loopCharacteristics", this.LoopCharacteristics.ConvertToJsonObject());
            }
            return obj;
        };
        Activity.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Default = obj.Default;
            this.IsForCompensation = obj.IsForCompensation;
            if (obj.hasOwnProperty("dataInputs") && Array.isArray(obj.dataInputs)) {
                for (var _i = 0, _a = obj.dataInputs; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var dataInput = new DataInput(this.Model);
                    dataInput.LoadFromJsonObject(item);
                    this.AddDataInput(dataInput);
                }
            }
            if (obj.hasOwnProperty("dataOutputs") && Array.isArray(obj.dataOutputs)) {
                for (var _b = 0, _c = obj.dataOutputs; _b < _c.length; _b++) {
                    var item = _c[_b];
                    var dataOutput = new DataOutput(this.Model);
                    dataOutput.LoadFromJsonObject(item);
                    this.AddDataOutput(dataOutput);
                }
            }
            if (obj.hasOwnProperty("dataInputAssociations") && Array.isArray(obj.dataInputAssociations)) {
                for (var _d = 0, _e = obj.dataInputAssociations; _d < _e.length; _d++) {
                    var item = _e[_d];
                    var dataInputAssociation = new DataInputAssociation(this.Model);
                    dataInputAssociation.LoadFromJsonObject(item);
                    this.AddDataInputAssociation(dataInputAssociation);
                }
            }
            if (obj.hasOwnProperty("dataOutputAssociations") && Array.isArray(obj.dataOutputAssociations)) {
                for (var _f = 0, _g = obj.dataOutputAssociations; _f < _g.length; _f++) {
                    var item = _g[_f];
                    var dataOutputAssociation = new DataOutputAssociation(this.Model);
                    dataOutputAssociation.LoadFromJsonObject(item);
                    this.AddDataOutputAssociation(dataOutputAssociation);
                }
            }
            if (obj.hasOwnProperty("resourceRoles") && Array.isArray(obj.resourceRoles)) {
                for (var _h = 0, _j = obj.resourceRoles; _h < _j.length; _h++) {
                    var item = _j[_h];
                    var resourceRole = BpmnModelHelper.GetElementType(item.ClrTypeID);
                    if (resourceRole == null)
                        continue;
                    resourceRole.LoadFromJsonObject(item);
                    this.AddResourceRole(resourceRole);
                }
            }
            if (obj.hasOwnProperty("loopCharacteristics")) {
                this.LoopCharacteristics = new MultiInstanceLoopCharacteristics(this.Model);
                this.LoopCharacteristics.LoadFromJsonObject(obj.loopCharacteristics);
            }
        };
        Activity.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var item in this.dataInputAssociationDic) {
                this.dataInputAssociationDic[item].Validate(errors);
            }
            for (var item in this.dataOutputAssociationDic) {
                this.dataOutputAssociationDic[item].Validate(errors);
            }
        };
        Activity.prototype.CheckVariableElement = function (variableElement) {
            ValidateHelper.CheckVariableElement(variableElement, this, this, null);
        };
        return Activity;
    }(FlowNode));

    var Artifact = /** @class */ (function (_super) {
        __extends(Artifact, _super);
        function Artifact(model) {
            return _super.call(this, model) || this;
        }
        return Artifact;
    }(BaseElement));

    exports.AssociationDirection = void 0;
    (function (AssociationDirection) {
        AssociationDirection["NONE"] = "None";
        AssociationDirection["ONE"] = "One";
        AssociationDirection["BOTH"] = "Both";
    })(exports.AssociationDirection || (exports.AssociationDirection = {}));

    var Association = /** @class */ (function (_super) {
        __extends(Association, _super);
        function Association(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Association";
            _this.AssociationDirection = exports.AssociationDirection.NONE;
            return _this;
        }
        Association.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "SourceRef", this.SourceRef);
            ExtensionMethod.SetAttributeValue(obj, "TargetRef", this.TargetRef);
            return obj;
        };
        Association.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.SourceRef = ExtensionMethod.GetAttributeValue4String(obj, "SourceRef");
            this.TargetRef = ExtensionMethod.GetAttributeValue4String(obj, "TargetRef");
        };
        Association.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
        };
        Association.prototype.NewInstance = function () {
            return new Association(this.Model);
        };
        return Association;
    }(Artifact));

    var BoundaryEvent = /** @class */ (function (_super) {
        __extends(BoundaryEvent, _super);
        function BoundaryEvent(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.BoundaryEvent";
            _this.CancelActivity = true;
            return _this;
        }
        BoundaryEvent.prototype.clone = function () {
            var clone = _super.prototype.clone.call(this);
            clone.AttachedToRef = this.AttachedToRef;
            clone.CancelActivity = this.CancelActivity;
            return clone;
        };
        BoundaryEvent.prototype.NewInstance = function () {
            return new BoundaryEvent(this.Model);
        };
        BoundaryEvent.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.AttachedToRef = null;
            this.CancelActivity = true;
        };
        BoundaryEvent.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "AttachedToRef", this.AttachedToRef);
            BpmnModelHelper.SetAttributeValue(obj, "CancelActivity", this.CancelActivity);
            return obj;
        };
        BoundaryEvent.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.AttachedToRef = obj.AttachedToRef;
            this.CancelActivity = obj.CancelActivity;
        };
        return BoundaryEvent;
    }(CatchEvent));

    var RootElement = /** @class */ (function (_super) {
        __extends(RootElement, _super);
        function RootElement(model) {
            return _super.call(this, model) || this;
        }
        RootElement.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            return obj;
        };
        return RootElement;
    }(BaseElement));

    var CallableElement = /** @class */ (function (_super) {
        __extends(CallableElement, _super);
        function CallableElement(model) {
            var _this = _super.call(this, model) || this;
            _this.dataInputDIc = {};
            _this.dataOutputDIc = {};
            return _this;
        }
        CallableElement.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Name = null;
            this.dataInputDIc = {};
            this.dataOutputDIc = {};
        };
        CallableElement.prototype.AddDataInput = function (item) {
            this.CheckVariableElement(item);
            this.dataInputDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        CallableElement.prototype.GetDataInput = function (dataInputId) {
            if (dataInputId == null)
                return null;
            if (this.dataInputDIc.hasOwnProperty(dataInputId))
                return this.dataInputDIc[dataInputId];
            return null;
        };
        CallableElement.prototype.GetDataInputs = function () {
            var dataInputs = new Array();
            for (var dataInput in this.dataInputDIc) {
                dataInputs.push(this.dataInputDIc[dataInput]);
            }
            return dataInputs;
        };
        CallableElement.prototype.RemoveDataInput = function (dataInputId) {
            delete this.dataInputDIc[dataInputId];
            this.Model.RemoveHasIdElement(dataInputId);
        };
        CallableElement.prototype.AddDataOutput = function (item) {
            this.CheckVariableElement(item);
            this.dataOutputDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        CallableElement.prototype.GetDataOutput = function (dataOutputId) {
            if (dataOutputId == null)
                return null;
            if (this.dataInputDIc.hasOwnProperty(dataOutputId))
                return this.dataOutputDIc[dataOutputId];
            return null;
        };
        CallableElement.prototype.GetDataOutputs = function () {
            var dataOutputs = new Array();
            for (var dataOutput in this.dataOutputDIc) {
                dataOutputs.push(this.dataOutputDIc[dataOutput]);
            }
            return dataOutputs;
        };
        CallableElement.prototype.RemoveDataOutput = function (dataOutputId) {
            delete this.dataOutputDIc[dataOutputId];
            this.Model.RemoveHasIdElement(dataOutputId);
        };
        CallableElement.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
            BpmnModelHelper.SetAttributeValue(obj, "nameLanguage", this.NameLanguage);
            var dataInputs = new Array();
            for (var item in this.dataInputDIc) {
                var element = this.dataInputDIc[item].ConvertToJsonObject();
                dataInputs.push(element);
            }
            if (dataInputs.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataInputs", dataInputs);
            }
            var dataOutputs = new Array();
            for (var item in this.dataOutputDIc) {
                var element = this.dataOutputDIc[item].ConvertToJsonObject();
                dataOutputs.push(element);
            }
            if (dataOutputs.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "dataOutputs", dataOutputs);
            }
            return obj;
        };
        CallableElement.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Name = obj.Name;
            this.NameLanguage = obj.nameLanguage;
            if (obj.hasOwnProperty("dataInputs") && Array.isArray(obj.dataInputs)) {
                for (var _i = 0, _a = obj.dataInputs; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var dataInput = new DataInput(this.Model);
                    dataInput.LoadFromJsonObject(item);
                    this.AddDataInput(dataInput);
                }
            }
            if (obj.hasOwnProperty("dataOutputs") && Array.isArray(obj.dataOutputs)) {
                for (var _b = 0, _c = obj.dataOutputs; _b < _c.length; _b++) {
                    var item = _c[_b];
                    var dataOutput = new DataOutput(this.Model);
                    dataOutput.LoadFromJsonObject(item);
                    this.AddDataOutput(dataOutput);
                }
            }
        };
        CallableElement.prototype.CheckVariableElement = function (variableElement) {
            ValidateHelper.CheckVariableElement(variableElement, this, this, null);
        };
        return CallableElement;
    }(RootElement));

    var DataObject = /** @class */ (function (_super) {
        __extends(DataObject, _super);
        function DataObject(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.DataObject";
            _this.MEXTAG = "bpmn.DataObject";
            _this.IsAllowNull = true;
            _this.IsCollection = false;
            return _this;
        }
        DataObject.prototype.clone = function () {
            var clone = _super.prototype.clone.call(this);
            clone.DataType = this.DataType;
            clone.IsAllowNull = this.IsAllowNull;
            clone.IsCollection = this.IsCollection;
            return clone;
        };
        DataObject.prototype.NewInstance = function () {
            return new DataObject(this.Model);
        };
        DataObject.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.DataType = null;
            this.IsAllowNull = true;
            this.IsCollection = false;
        };
        DataObject.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "IsAllowNull", this.IsAllowNull);
            BpmnModelHelper.SetAttributeValue(obj, "IsCollection", this.IsCollection);
            return obj;
        };
        DataObject.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.IsAllowNull = obj.IsAllowNull;
            this.IsCollection = obj.IsCollection;
        };
        DataObject.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            if (this.DataType != null) {
                this.DataType.MexTag = this.MEXTAG;
                list.push(this.DataType);
            }
            return list;
        };
        DataObject.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof DataType && extensionElement.MexTag == this.MEXTAG) {
                    this.DataType = extensionElement;
                }
            }
        };
        DataObject.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            if (this.DataType != null) {
                this.DataType.Validate(errors);
            }
            else {
                var error = new ValidationError();
                error.Element = this;
                error.ErrorLevel = ValidationLevel.$_Error;
                error.ErrorCode = "";
                error.ErrorMessage = "没有设定变量类型";
                errors.push(error);
            }
        };
        return DataObject;
    }(FlowElement));

    var Process = /** @class */ (function (_super) {
        __extends(Process, _super);
        function Process(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Process";
            _this.flowElementsDic = {};
            _this.resourceRoleDIc = {};
            _this.executionListeners = new Array();
            _this.extensionElements = new Array();
            _this.MEXTAG = "bpmn.Process";
            return _this;
        }
        Process.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Key = null;
            this.flowElementsDic = {};
            this.resourceRoleDIc = {};
            this.executionListeners = new Array();
            this.extensionElements = new Array();
        };
        Process.prototype.NewInstance = function () {
            return new Process(this.Model);
        };
        Process.prototype.AddDataObject = function (dataObject) {
            this.CheckVariableElement(dataObject);
            this.InnerAddFlowElement(dataObject);
        };
        Process.prototype.GetDataObject = function (dataObjectId) {
            if (dataObjectId == null)
                return null;
            if (this.flowElementsDic.hasOwnProperty(dataObjectId) && this.flowElementsDic[dataObjectId] instanceof DataObject)
                return this.flowElementsDic[dataObjectId];
            return null;
        };
        Process.prototype.GetDataObjects = function () {
            var dataObjects = new Array();
            for (var item in this.flowElementsDic) {
                //let obj: DataObject = this.flowElementsDic[item] as DataObject;
                //if (obj != null)
                //    dataObjects.push(obj);
                if (this.flowElementsDic[item] instanceof DataObject) {
                    dataObjects.push(this.flowElementsDic[item]);
                }
            }
            return dataObjects;
        };
        Process.prototype.RemoveDataObject = function (dataObjectId) {
            this.RemoveFlowElement(dataObjectId);
        };
        Process.prototype.AddFlowElement = function (element) {
            if (element instanceof DataObject)
                throw new Error("请使用 AddDataObjcet 方法添加流程变量");
            ValidateHelper.CheckHasIdElement(element);
            this.InnerAddFlowElement(element);
        };
        Process.prototype.GetFlowElement = function (elementId) {
            if (elementId == null)
                return null;
            if (this.flowElementsDic.hasOwnProperty(elementId))
                return this.flowElementsDic[elementId];
            return null;
        };
        Process.prototype.GetFlowElements = function () {
            return this.flowElementsDic;
        };
        Process.prototype.RemoveFlowElement = function (elementId) {
            var element = this.GetFlowElement(elementId);
            if (element == null)
                return;
            if (element instanceof SequenceFlow) {
                this.RemoveSequenceFlow(element);
            }
            if (element instanceof FlowNode) {
                this.RemoveFlowNode(element);
            }
            if (element instanceof DataObject) {
                this.InnerRemoveDataObject(element);
            }
            delete this.flowElementsDic[elementId];
            this.Model.RemoveHasIdElement(elementId);
        };
        Process.prototype.GetExecutionListeners = function () {
            return this.executionListeners;
        };
        Process.prototype.AddResourceRole = function (item) {
            this.resourceRoleDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        Process.prototype.GetResourceRole = function (resourceRoleId) {
            if (resourceRoleId == null)
                return null;
            if (this.resourceRoleDIc.hasOwnProperty(resourceRoleId))
                return this.resourceRoleDIc[resourceRoleId];
            return null;
        };
        Process.prototype.GetResourceRoles = function () {
            var resourceRoles = new Array();
            for (var item in this.resourceRoleDIc) {
                resourceRoles.push(this.resourceRoleDIc[item]);
            }
            return resourceRoles;
        };
        Process.prototype.RemoveResourceRole = function (resourceRoleId) {
            delete this.resourceRoleDIc[resourceRoleId];
            this.Model.RemoveHasIdElement(resourceRoleId);
        };
        Process.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Key", this.Key);
            var flowElements = [];
            for (var elementId in this.flowElementsDic) {
                var element = this.flowElementsDic[elementId].ConvertToJsonObject();
                flowElements.push(element);
            }
            BpmnModelHelper.SetAttributeValue(obj, "flowElements", flowElements);
            var resourceRoles = new Array();
            for (var item in this.resourceRoleDIc) {
                resourceRoles.push(this.resourceRoleDIc[item].ConvertToJsonObject());
            }
            if (resourceRoles.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "resourceRoles", resourceRoles);
            }
            return obj;
        };
        Process.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Key = obj.Key;
            if (obj.hasOwnProperty("flowElements") && Array.isArray(obj.flowElements)) {
                for (var _i = 0, _a = obj.flowElements; _i < _a.length; _i++) {
                    var elementObj = _a[_i];
                    var element = BpmnModelHelper.GetElementType(elementObj.ClrTypeID);
                    if (element == null)
                        continue;
                    element.Model = this.Model;
                    element.LoadFromJsonObject(elementObj);
                    this.InnerAddFlowElement(element);
                }
            }
            if (obj.hasOwnProperty("resourceRoles") && Array.isArray(obj.resourceRoles)) {
                for (var _b = 0, _c = obj.resourceRoles; _b < _c.length; _b++) {
                    var item = _c[_b];
                    var resourceRole = BpmnModelHelper.GetElementType(item.ClrTypeID);
                    if (resourceRole == null)
                        continue;
                    resourceRole.LoadFromJsonObject(item);
                    this.AddResourceRole(resourceRole);
                }
            }
        };
        Process.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
                var item = _a[_i];
                item.MexTag = this.MEXTAG;
                list.push(item);
            }
            for (var _b = 0, _c = this.extensionElements; _b < _c.length; _b++) {
                var item = _c[_b];
                item.MexTag = this.MEXTAG;
                list.push(item);
            }
            return list;
        };
        Process.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if ((extensionElement instanceof ExecutionListener) && extensionElement.MexTag == this.MEXTAG) {
                    this.executionListeners.push(extensionElement);
                }
                else if (extensionElement.MexTag == this.MEXTAG) {
                    this.extensionElements.push(extensionElement);
                }
            }
        };
        Process.prototype.GetExtensionElements = function () {
            return this.extensionElements;
        };
        Process.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
                var item = _a[_i];
                item.Validate(errors);
            }
            for (var item in this.flowElementsDic) {
                this.flowElementsDic[item].Validate(errors);
            }
            ValidateHelper.ValidateProcess(this, errors);
        };
        Process.prototype.CheckVariableElement = function (variableElement) {
            _super.prototype.CheckVariableElement.call(this, variableElement);
            ValidateHelper.CheckVariableElement(variableElement, null, null, this);
        };
        Process.prototype.InnerAddFlowElement = function (element) {
            this.flowElementsDic[element.Id] = element;
            this.Model.AddHasIdElement(element);
        };
        Process.prototype.RemoveSequenceFlow = function (element) {
        };
        Process.prototype.InnerRemoveDataObject = function (element) {
        };
        Process.prototype.RemoveFlowNode = function (element) {
            var list = new Array();
            for (var item in this.GetFlowElements()) {
                var itemElement = this.GetFlowElements()[item];
                if (itemElement == null)
                    continue;
                if (itemElement instanceof SequenceFlow && (itemElement.SourceRef == element.Id || itemElement.TargetRef == element.Id))
                    list.push(itemElement);
            }
            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
                var item = list_1[_i];
                delete this.flowElementsDic[item.Id];
            }
        };
        return Process;
    }(CallableElement));

    var Signal = /** @class */ (function (_super) {
        __extends(Signal, _super);
        function Signal(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Signal";
            return _this;
        }
        Signal.prototype.convertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            ExtensionMethod.SetAttributeValue(obj, "Name", this.Name);
            ExtensionMethod.SetAttributeValue(obj, "Scope", this.Scope);
            return obj;
        };
        Signal.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Name = ExtensionMethod.GetAttributeValue4String(obj, "Name");
            this.Scope = ExtensionMethod.GetAttributeValue4String(obj, "Scope");
        };
        Signal.prototype.clone = function () {
            var clone = _super.prototype.clone.call(this);
            clone.Name = this.Name;
            clone.Scope = this.Scope;
            return clone;
        };
        Signal.prototype.NewInstance = function () {
            return new Signal(this.Model);
        };
        return Signal;
    }(CatchEvent));

    var BpmnModel = /** @class */ (function () {
        function BpmnModel() {
            this.hasIdElementDic = {};
            this.signals = new Array();
        }
        BpmnModel.prototype.ResetBeforeLoadFrom = function () {
            this.hasIdElementDic = {};
            this.MetadataContentID = null;
            this.MetadataContentCode = null;
            this.MetadataContentName = null;
            this.TargetNamespace = null;
            this.DefaultProcess = null;
            this.DefaultDiagram = null;
        };
        BpmnModel.prototype.ConvertToJson = function () {
            var model = {};
            model.TargetNamespace = this.TargetNamespace;
            model.MetadataContentID = this.MetadataContentID;
            model.MetadataContentCode = this.MetadataContentCode;
            model.MetadataContentName = this.MetadataContentName;
            if (this.DefaultProcess != null) {
                model.DefaultProcess = this.DefaultProcess.ConvertToJsonObject();
            }
            if (this.DefaultDiagram != null) {
                model.DefaultDiagram = this.DefaultDiagram.ConvertToJsonObject();
            }
            if (this.signals != null && this.signals.length > 0) {
                var signalJsonArray = new Array();
                for (var _i = 0, _a = this.signals; _i < _a.length; _i++) {
                    var item = _a[_i];
                    signalJsonArray.push(item.convertToJsonObject());
                }
                if (signalJsonArray.length > 0) {
                    ExtensionMethod.SetAttributeValue(model, "signals", signalJsonArray);
                }
            }
            return JSON.stringify(model);
        };
        BpmnModel.prototype.LoadFromJson = function (json) {
            var model = JSON.parse(json);
            this.TargetNamespace = model.TargetNamespace;
            this.MetadataContentID = model.MetadataContentID;
            this.MetadataContentCode = model.MetadataContentCode;
            this.MetadataContentName = model.MetadataContentName;
            this.DefaultProcess = new Process(this);
            if (model.DefaultProcess)
                this.DefaultProcess.LoadFromJsonObject(model.DefaultProcess);
            this.DefaultDiagram = new BPMNDiagram(this);
            if (model.DefaultDiagram)
                this.DefaultDiagram.LoadFromJsonObject(model.DefaultDiagram);
            var signalsElement = ExtensionMethod.GetAttributeValue(model, "signals");
            if (signalsElement instanceof Array) {
                var signalsJsonArray = signalsElement;
                for (var _i = 0, signalsJsonArray_1 = signalsJsonArray; _i < signalsJsonArray_1.length; _i++) {
                    var item = signalsJsonArray_1[_i];
                    var signal = new Signal(this);
                    signal.LoadFromJsonObject(item);
                    this.signals.push(signal);
                }
            }
        };
        BpmnModel.prototype.AddHasIdElement = function (element) {
            if (element == null)
                throw new Error("element is null");
            if (element.Id == null)
                throw new Error("元素 Id 不能为 null");
            if (ValidateHelper.IsMatchVariableNameRules(element.Id) == false)
                throw new Error("元素 Id 只能包含字母、数字和下划线，且不能以数字开头。");
            if (this.hasIdElementDic.hasOwnProperty(element.Id)) {
                throw new Error("\u5DF2\u7ECF\u5B58\u5728 Id \u4E3A " + element.Id + " \u7684\u6D41\u7A0B\u5143\u7D20\u3002");
            }
            this.hasIdElementDic[element.Id] = element;
        };
        BpmnModel.prototype.RemoveHasIdElement = function (elementId) {
            delete this.hasIdElementDic[elementId];
        };
        BpmnModel.prototype.GetHasIdElement = function (elementId) {
            if (elementId == null)
                return null;
            if (this.hasIdElementDic.hasOwnProperty(elementId)) {
                return this.hasIdElementDic[elementId];
            }
            return null;
        };
        BpmnModel.prototype.Validate = function () {
            var errors = new Array();
            if (this.DefaultProcess != null) {
                this.DefaultProcess.Validate(errors);
            }
            if (this.DefaultDiagram != null) {
                this.DefaultDiagram.Validate(errors);
            }
            return errors;
        };
        return BpmnModel;
    }());

    var CallActivity = /** @class */ (function (_super) {
        __extends(CallActivity, _super);
        function CallActivity(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.CallActivity";
            _this.CALLACTIVITYMEXTAG = "bpmn.CallActivity";
            _this.SubProcessDataAssociations = new SubProcessDataAssociations(model);
            return _this;
        }
        CallActivity.prototype.clone = function () {
            var clone = _super.prototype.clone.call(this);
            clone.CalledElement = this.CalledElement;
            clone.SubProcessDataAssociations = this.SubProcessDataAssociations;
            return clone;
        };
        CallActivity.prototype.NewInstance = function () {
            return new CallActivity(this.Model);
        };
        CallActivity.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.CalledElement = null;
            this.SubProcessDataAssociations = null;
        };
        CallActivity.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "CalledElement", this.CalledElement);
            return obj;
        };
        CallActivity.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.CalledElement = obj.CalledElement;
        };
        CallActivity.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            if (this.SubProcessDataAssociations != null &&
                this.SubProcessDataAssociations.GetDataInputAssociations().length > 0 &&
                this.SubProcessDataAssociations.GetDataOutputAssociations().length > 0) {
                this.SubProcessDataAssociations.MexTag = this.CALLACTIVITYMEXTAG;
                list.push(this.SubProcessDataAssociations);
            }
            return list;
        };
        CallActivity.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement instanceof SubProcessDataAssociations && extensionElement.MexTag == this.CALLACTIVITYMEXTAG) {
                    this.SubProcessDataAssociations = extensionElement;
                }
            }
        };
        return CallActivity;
    }(Activity));

    var CompensateEventDefinition = /** @class */ (function (_super) {
        __extends(CompensateEventDefinition, _super);
        function CompensateEventDefinition(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.Association";
            _this.WaitForCompletion = true;
            return _this;
        }
        CompensateEventDefinition.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "ActivityRef", this.ActivityRef);
            ExtensionMethod.SetAttributeValue(obj, "WaitForCompletion", this.WaitForCompletion);
            return obj;
        };
        CompensateEventDefinition.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.ActivityRef = ExtensionMethod.GetAttributeValue4String(obj, "ActivityRef");
            this.WaitForCompletion = ExtensionMethod.GetAttributeValue4Boolean(obj, "WaitForCompletion");
        };
        CompensateEventDefinition.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
        };
        CompensateEventDefinition.prototype.NewInstance = function () {
            var clone = new CompensateEventDefinition(this.Model);
            clone.ActivityRef = this.ActivityRef;
            clone.WaitForCompletion = this.WaitForCompletion;
            return clone;
        };
        return CompensateEventDefinition;
    }(EventDefinition));

    var Gateway = /** @class */ (function (_super) {
        __extends(Gateway, _super);
        function Gateway(model) {
            return _super.call(this, model) || this;
        }
        return Gateway;
    }(FlowNode));

    var ExclusiveGateway = /** @class */ (function (_super) {
        __extends(ExclusiveGateway, _super);
        function ExclusiveGateway(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.ExclusiveGateway";
            _this.IncomingGatewayType = exports.GatewayType.Exclusive;
            _this.OutgoingGatewayType = exports.GatewayType.Exclusive;
            return _this;
        }
        ExclusiveGateway.prototype.NewInstance = function () {
            return new ExclusiveGateway(this.Model);
        };
        ExclusiveGateway.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Default = null;
        };
        ExclusiveGateway.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Default", this.Default);
            return obj;
        };
        ExclusiveGateway.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Default = obj.Default;
        };
        return ExclusiveGateway;
    }(Gateway));

    exports.FlowNodeState = void 0;
    (function (FlowNodeState) {
        /**
         * 默认
         */
        FlowNodeState["Default"] = "Default";
        /**
         * 选中
         */
        FlowNodeState["Selected"] = "Selected";
        /**
         * 运行中
         */
        FlowNodeState["Running"] = "Running";
        /**
         * 已完成
         */
        FlowNodeState["Completed"] = "Completed";
        /**
         * 已终止
         */
        FlowNodeState["Terminated"] = "Terminated";
    })(exports.FlowNodeState || (exports.FlowNodeState = {}));

    var ResourceAssignmentExpression = /** @class */ (function (_super) {
        __extends(ResourceAssignmentExpression, _super);
        function ResourceAssignmentExpression(model) {
            return _super.call(this, model) || this;
        }
        ResourceAssignmentExpression.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Expression = null;
        };
        ResourceAssignmentExpression.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            if (this.Expression != null) {
                BpmnModelHelper.SetAttributeValue(obj, "Expression", this.Expression.ConvertToJsonObject());
            }
            return obj;
        };
        ResourceAssignmentExpression.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("Expression")) {
                this.Expression = new Expression(this.Model);
                this.Expression.LoadFromJsonObject(obj.Expression);
            }
        };
        return ResourceAssignmentExpression;
    }(BaseElement));

    var ResourceRole = /** @class */ (function (_super) {
        __extends(ResourceRole, _super);
        function ResourceRole(model) {
            return _super.call(this, model) || this;
        }
        ResourceRole.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Name = null;
            this.ResourceAssignmentExpression = null;
        };
        ResourceRole.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
            BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            if (this.ResourceAssignmentExpression != null) {
                BpmnModelHelper.SetAttributeValue(obj, "ResourceAssignmentExpression", this.ResourceAssignmentExpression.ConvertToJsonObject());
            }
            return obj;
        };
        ResourceRole.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Name = obj.Name;
            if (obj.hasOwnProperty("ResourceAssignmentExpression")) {
                this.ResourceAssignmentExpression = new ResourceAssignmentExpression(this.Model);
                this.ResourceAssignmentExpression.LoadFromJsonObject(obj.ResourceAssignmentExpression);
            }
        };
        return ResourceRole;
    }(BaseElement));

    var Performer = /** @class */ (function (_super) {
        __extends(Performer, _super);
        function Performer(model) {
            return _super.call(this, model) || this;
        }
        return Performer;
    }(ResourceRole));

    var HumanPerformer = /** @class */ (function (_super) {
        __extends(HumanPerformer, _super);
        function HumanPerformer(model) {
            return _super.call(this, model) || this;
        }
        return HumanPerformer;
    }(Performer));

    var InclusiveGateway = /** @class */ (function (_super) {
        __extends(InclusiveGateway, _super);
        function InclusiveGateway(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.InclusiveGateway";
            _this.IncomingGatewayType = exports.GatewayType.Inclusive;
            _this.OutgoingGatewayType = exports.GatewayType.Inclusive;
            return _this;
        }
        InclusiveGateway.prototype.NewInstance = function () {
            return new InclusiveGateway(this.Model);
        };
        InclusiveGateway.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.Default = null;
        };
        InclusiveGateway.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "Default", this.Default);
            return obj;
        };
        InclusiveGateway.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.Default = obj.Default;
        };
        return InclusiveGateway;
    }(Gateway));

    var IntermediateCatchEvent = /** @class */ (function (_super) {
        __extends(IntermediateCatchEvent, _super);
        function IntermediateCatchEvent(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.IntermediateCatchEvent";
            return _this;
        }
        IntermediateCatchEvent.prototype.NewInstance = function () {
            return new IntermediateCatchEvent(this.Model);
        };
        return IntermediateCatchEvent;
    }(CatchEvent));

    var ParallelGateway = /** @class */ (function (_super) {
        __extends(ParallelGateway, _super);
        function ParallelGateway(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.ParallelGateway";
            _this.IncomingGatewayType = exports.GatewayType.Parallel;
            _this.OutgoingGatewayType = exports.GatewayType.Parallel;
            return _this;
        }
        ParallelGateway.prototype.NewInstance = function () {
            return new ParallelGateway(this.Model);
        };
        return ParallelGateway;
    }(Gateway));

    var PotentialOwner = /** @class */ (function (_super) {
        __extends(PotentialOwner, _super);
        function PotentialOwner(model) {
            return _super.call(this, model) || this;
        }
        return PotentialOwner;
    }(Performer));

    var Rendering = /** @class */ (function (_super) {
        __extends(Rendering, _super);
        function Rendering(model) {
            return _super.call(this, model) || this;
        }
        Rendering.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            return obj;
        };
        return Rendering;
    }(BaseElement));

    exports.SequenceFlowState = void 0;
    (function (SequenceFlowState) {
        /**
         * 默认
         */
        SequenceFlowState["Default"] = "Default";
        /**
         * 已完成
         */
        SequenceFlowState["Completed"] = "Completed";
        /**
         * 截断
         */
        SequenceFlowState["Cut"] = "Cut";
        /**
         * 补充
         */
        SequenceFlowState["Add"] = "Add";
        /**
         * 模拟计算
         */
        SequenceFlowState["Simulation"] = "Simulation";
    })(exports.SequenceFlowState || (exports.SequenceFlowState = {}));

    var Task = /** @class */ (function (_super) {
        __extends(Task, _super);
        function Task(model) {
            return _super.call(this, model) || this;
        }
        return Task;
    }(Activity));

    var ServiceTask = /** @class */ (function (_super) {
        __extends(ServiceTask, _super);
        function ServiceTask(model) {
            return _super.call(this, model) || this;
        }
        return ServiceTask;
    }(Task));

    var SignalEventDefinition = /** @class */ (function (_super) {
        __extends(SignalEventDefinition, _super);
        function SignalEventDefinition(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.SignalEventDefinition";
            return _this;
        }
        SignalEventDefinition.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            ExtensionMethod.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
            ExtensionMethod.SetAttributeValue(obj, "SignalRef", this.SignalRef);
            ExtensionMethod.SetAttributeValue(obj, "SignalExpression", this.SignalExpression);
            ExtensionMethod.SetAttributeValue(obj, "Async", this.Async);
            return obj;
        };
        SignalEventDefinition.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            this.SignalRef = ExtensionMethod.GetAttributeValue4String(obj, "SignalRef");
            this.SignalExpression = ExtensionMethod.GetAttributeValue4String(obj, "SignalExpression");
            this.Async = ExtensionMethod.GetAttributeValue4Boolean(obj, "Async");
        };
        SignalEventDefinition.prototype.NewInstance = function () {
            var clone = new SignalEventDefinition(this.Model);
            clone.SignalRef = this.SignalRef;
            clone.SignalExpression = this.SignalExpression;
            clone.Async = this.Async;
            return clone;
        };
        return SignalEventDefinition;
    }(EventDefinition));

    var SubProcess = /** @class */ (function (_super) {
        __extends(SubProcess, _super);
        function SubProcess(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = "bpmn.SubProcess";
            _this.extensionElements = new Array();
            _this.flowElementsDic = {};
            _this.SubProcessMEXTAG = "bpmn.SubProcess";
            return _this;
        }
        SubProcess.prototype.NewInstance = function () {
            return new SubProcess(this.Model);
        };
        SubProcess.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.extensionElements = [];
            this.flowElementsDic = {};
        };
        SubProcess.prototype.AddDataObject = function (dataObject) {
            this.CheckVariableElement(dataObject);
            this.InnerAddFlowElement(dataObject);
        };
        SubProcess.prototype.GetDataObject = function (dataObjectId) {
            if (dataObjectId == null)
                return null;
            if (this.flowElementsDic.hasOwnProperty(dataObjectId))
                return this.flowElementsDic[dataObjectId];
            return null;
        };
        SubProcess.prototype.GetDataObjects = function () {
            var list = new Array();
            for (var item in this.flowElementsDic) {
                var obj = this.flowElementsDic[item];
                if (obj != null)
                    list.push(obj);
            }
            return list;
        };
        SubProcess.prototype.RemoveDataObject = function (dataObjectId) {
            this.RemoveFlowElement(dataObjectId);
        };
        SubProcess.prototype.AddFlowElement = function (element) {
            if (element instanceof DataObject)
                throw new Error("请使用 AddDataObjcet 方法添加流程变量");
            ValidateHelper.CheckHasIdElement(element);
            this.InnerAddFlowElement(element);
        };
        SubProcess.prototype.GetFlowElement = function (elementId) {
            if (elementId == null)
                return null;
            if (this.flowElementsDic.hasOwnProperty(elementId))
                return this.flowElementsDic[elementId];
            return null;
        };
        SubProcess.prototype.GetFlowElements = function () {
            return this.flowElementsDic;
        };
        SubProcess.prototype.RemoveFlowElement = function (elementId) {
            var element = this.GetFlowElement(elementId);
            if (element == null)
                return;
            if (element instanceof SequenceFlow) {
                this.RemoveSequenceFlow(element);
            }
            if (element instanceof FlowNode) {
                this.RemoveFlowNode(element);
            }
            if (element instanceof DataObject) {
                this.InnerRemoveDataObject(element);
            }
            delete this.flowElementsDic[elementId];
            this.Model.RemoveHasIdElement(elementId);
        };
        SubProcess.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var flowElements = [];
            for (var elementId in this.flowElementsDic) {
                var element = this.flowElementsDic[elementId].ConvertToJsonObject();
                flowElements.push(element);
            }
            BpmnModelHelper.SetAttributeValue(obj, "flowElements", flowElements);
            return obj;
        };
        SubProcess.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("flowElements") && Array.isArray(obj.FlowElements)) {
                for (var _i = 0, _a = obj.FlowElements; _i < _a.length; _i++) {
                    var elementObj = _a[_i];
                    var element = BpmnModelHelper.GetElementType(elementObj.ClrTypeID);
                    if (element == null)
                        continue;
                    element.Model = this.Model;
                    element.LoadFromJsonObject(elementObj);
                    this.InnerAddFlowElement(element);
                }
            }
        };
        SubProcess.prototype.GetExtensionElements4ConvertTo = function () {
            var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
            for (var _i = 0, _a = this.extensionElements; _i < _a.length; _i++) {
                var item = _a[_i];
                item.MexTag = this.SubProcessMEXTAG;
                list.push(item);
            }
            return list;
        };
        SubProcess.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
            _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
            for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
                var extensionElement = extensionElements_1[_i];
                if (extensionElement.MexTag == this.SubProcessMEXTAG) {
                    this.extensionElements.push(extensionElement);
                }
            }
        };
        SubProcess.prototype.GetExtensionElements = function () {
            return this.extensionElements;
        };
        SubProcess.prototype.Validate = function (errors) {
            _super.prototype.Validate.call(this, errors);
            for (var item in this.flowElementsDic) {
                this.flowElementsDic[item].Validate(errors);
            }
            ValidateHelper.ValidateProcess(this, errors);
        };
        SubProcess.prototype.CheckVariableElement = function (variableElement) {
            _super.prototype.CheckVariableElement.call(this, variableElement);
            ValidateHelper.CheckVariableElement(variableElement, null, null, this);
        };
        SubProcess.prototype.RemoveSequenceFlow = function (element) { };
        SubProcess.prototype.InnerRemoveDataObject = function (element) { };
        SubProcess.prototype.RemoveFlowNode = function (element) {
            var list = new Array();
            for (var item in this.GetFlowElements()) {
                var itemElement = this.GetFlowElements()[item];
                if (itemElement == null)
                    continue;
                if (itemElement.SourceRef == element.Id || itemElement.TargetRef == element.Id)
                    list.push(itemElement);
            }
            for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {
                var item = list_1[_i];
                delete this.flowElementsDic[item.Id];
            }
        };
        SubProcess.prototype.InnerAddFlowElement = function (element) {
            this.flowElementsDic[element.Id] = element;
            this.Model.AddHasIdElement(element);
        };
        return SubProcess;
    }(Activity));

    var UserTask = /** @class */ (function (_super) {
        __extends(UserTask, _super);
        function UserTask(model) {
            var _this = _super.call(this, model) || this;
            _this.renderingDIc = {};
            return _this;
        }
        UserTask.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
            this.renderingDIc = {};
        };
        UserTask.prototype.AddRendering = function (item) {
            this.renderingDIc[item.Id] = item;
            this.Model.AddHasIdElement(item);
        };
        UserTask.prototype.GetRendering = function (renderingId) {
            if (renderingId == null)
                return null;
            if (this.renderingDIc.hasOwnProperty(renderingId))
                return this.renderingDIc[renderingId];
            return null;
        };
        UserTask.prototype.GetRenderings = function () {
            var renderings = new Array();
            for (var item in this.renderingDIc) {
                renderings.push(this.renderingDIc[item]);
            }
            return renderings;
        };
        UserTask.prototype.RemoveRendering = function (renderingId) {
            delete this.renderingDIc[renderingId];
        };
        UserTask.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            var renderings = new Array();
            for (var item in this.renderingDIc) {
                renderings.push(this.renderingDIc[item].ConvertToJsonObject());
            }
            if (renderings.length > 0) {
                BpmnModelHelper.SetAttributeValue(obj, "renderings", renderings);
            }
            return obj;
        };
        UserTask.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
            if (obj.hasOwnProperty("renderings") && Array.isArray(obj.renderings)) {
                for (var _i = 0, _a = obj.renderings; _i < _a.length; _i++) {
                    var item = _a[_i];
                    var rendering = BpmnModelHelper.GetElementType(item.ClrTypeID);
                    if (rendering == null)
                        continue;
                    rendering.LoadFromJsonObject(item);
                    this.AddRendering(rendering);
                }
            }
        };
        return UserTask;
    }(Task));

    var MergeActivity = /** @class */ (function (_super) {
        __extends(MergeActivity, _super);
        function MergeActivity(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = MergeActivity.Clr_Type_ID;
            return _this;
        }
        MergeActivity.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
        };
        MergeActivity.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            return obj;
        };
        MergeActivity.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
        };
        MergeActivity.prototype.NewInstance = function () {
            return new MergeActivity(this.Model);
        };
        MergeActivity.prototype.clone = function () {
            var c = _super.prototype.clone.call(this);
            c.Name = this.Name;
            c.NameLanguage = this.NameLanguage && __assign({}, this.NameLanguage);
            return c;
        };
        MergeActivity.Clr_Type_ID = "bpmn.MergeActivity";
        MergeActivity.MEXTAG = 'bpmn.MergeActivity';
        return MergeActivity;
    }(ServiceTask));

    var SplitActivity = /** @class */ (function (_super) {
        __extends(SplitActivity, _super);
        function SplitActivity(model) {
            var _this = _super.call(this, model) || this;
            _this.ClrTypeID = SplitActivity.Clr_Type_ID;
            return _this;
        }
        SplitActivity.prototype.ResetBeforeLoadFrom = function () {
            _super.prototype.ResetBeforeLoadFrom.call(this);
        };
        SplitActivity.prototype.ConvertToJsonObject = function () {
            var obj = _super.prototype.ConvertToJsonObject.call(this);
            return obj;
        };
        SplitActivity.prototype.LoadFromJsonObject = function (obj) {
            _super.prototype.LoadFromJsonObject.call(this, obj);
        };
        SplitActivity.prototype.NewInstance = function () {
            return new SplitActivity(this.Model);
        };
        SplitActivity.prototype.clone = function () {
            var c = _super.prototype.clone.call(this);
            c.Name = this.Name;
            c.NameLanguage = this.NameLanguage && __assign({}, this.NameLanguage);
            return c;
        };
        SplitActivity.Clr_Type_ID = "bpmn.SplitActivity";
        SplitActivity.MEXTAG = 'bpmn.SplitActivity';
        return SplitActivity;
    }(ServiceTask));

    var registerElementTypeModel = new BpmnModel();
    BpmnModelHelper.RegisterElementType(new Process(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new SequenceFlow(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new DataObject(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new SubProcess(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new CallActivity(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new EndEvent(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new StartEvent(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new ExclusiveGateway(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new InclusiveGateway(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new ParallelGateway(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new DataType(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new CustomType(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new BPMNPlane(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new BPMNShape(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new BPMNLabel(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new BPMNEdge(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new CompensateEventDefinition(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new Association(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new IntermediateCatchEvent(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new SignalEventDefinition(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new Signal(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new SplitActivity(registerElementTypeModel));
    BpmnModelHelper.RegisterElementType(new MergeActivity(registerElementTypeModel));

    exports.Activity = Activity;
    exports.Artifact = Artifact;
    exports.Association = Association;
    exports.BPMNDiagram = BPMNDiagram;
    exports.BPMNEdge = BPMNEdge;
    exports.BPMNLabel = BPMNLabel;
    exports.BPMNLabelStyle = BPMNLabelStyle;
    exports.BPMNPlane = BPMNPlane;
    exports.BPMNShape = BPMNShape;
    exports.BaseElement = BaseElement;
    exports.BeSchema = BeSchema;
    exports.BoundaryEvent = BoundaryEvent;
    exports.Bounds = Bounds;
    exports.BpmnElement = BpmnElement;
    exports.BpmnModel = BpmnModel;
    exports.BpmnModelElement = BpmnModelElement;
    exports.BpmnModelHelper = BpmnModelHelper;
    exports.BpmnModelJsonHelper = BpmnModelJsonHelper;
    exports.CallActivity = CallActivity;
    exports.CallableElement = CallableElement;
    exports.CatchEvent = CatchEvent;
    exports.CompensateEventDefinition = CompensateEventDefinition;
    exports.ConstantExpression = ConstantExpression;
    exports.CustomType = CustomType;
    exports.DataAssociation = DataAssociation;
    exports.DataInput = DataInput;
    exports.DataInputAssociation = DataInputAssociation;
    exports.DataObject = DataObject;
    exports.DataOutput = DataOutput;
    exports.DataOutputAssociation = DataOutputAssociation;
    exports.DataType = DataType;
    exports.Diagram = Diagram;
    exports.DiagramElement = DiagramElement;
    exports.Edge = Edge;
    exports.EndEvent = EndEvent;
    exports.Event = Event;
    exports.EventDefinition = EventDefinition;
    exports.EventHelper = EventHelper;
    exports.ExclusiveGateway = ExclusiveGateway;
    exports.ExecutionListener = ExecutionListener;
    exports.Expression = Expression;
    exports.ExtensionCompletionConditionRuler = ExtensionCompletionConditionRuler;
    exports.ExtensionElement = ExtensionElement;
    exports.ExtensionMethod = ExtensionMethod;
    exports.FlowElement = FlowElement;
    exports.FlowNode = FlowNode;
    exports.Font = Font;
    exports.FormalExpression = FormalExpression;
    exports.Gateway = Gateway;
    exports.HumanPerformer = HumanPerformer;
    exports.InclusiveGateway = InclusiveGateway;
    exports.IntermediateCatchEvent = IntermediateCatchEvent;
    exports.Label = Label;
    exports.LabeledEdge = LabeledEdge;
    exports.LabeledShape = LabeledShape;
    exports.LoopCharacteristics = LoopCharacteristics;
    exports.MergeActivity = MergeActivity;
    exports.MexElement = MexElement;
    exports.MexExpression = MexExpression;
    exports.MexExtensionElement = MexExtensionElement;
    exports.MultiInstanceLoopCharacteristics = MultiInstanceLoopCharacteristics;
    exports.Node = Node;
    exports.ObjectHelper = ObjectHelper;
    exports.OmgdcElement = OmgdcElement;
    exports.OmgdiElement = OmgdiElement;
    exports.PalParticipant = PalParticipant;
    exports.PalProcessAttribute = PalProcessAttribute;
    exports.PalUserTaskAttribute = PalUserTaskAttribute;
    exports.ParallelGateway = ParallelGateway;
    exports.Participant = Participant;
    exports.Performer = Performer;
    exports.Plane = Plane;
    exports.Point = Point;
    exports.PotentialOwner = PotentialOwner;
    exports.Process = Process;
    exports.RadixConvert = RadixConvert;
    exports.RectangularLine = RectangularLine;
    exports.Rendering = Rendering;
    exports.ResourceAssignmentExpression = ResourceAssignmentExpression;
    exports.ResourceRole = ResourceRole;
    exports.RootElement = RootElement;
    exports.SchemaType = SchemaType;
    exports.SequenceFlow = SequenceFlow;
    exports.ServiceTask = ServiceTask;
    exports.Shape = Shape;
    exports.Signal = Signal;
    exports.SignalEventDefinition = SignalEventDefinition;
    exports.SplitActivity = SplitActivity;
    exports.StartEvent = StartEvent;
    exports.Style = Style;
    exports.SubProcess = SubProcess;
    exports.SubProcessDataAssociations = SubProcessDataAssociations;
    exports.Task = Task;
    exports.ThrowEvent = ThrowEvent;
    exports.UserTask = UserTask;
    exports.ValidateHelper = ValidateHelper;
    exports.ValidationError = ValidationError;
    exports.ValidationLevel = ValidationLevel;
    exports.VariableExpression = VariableExpression;
    exports.XmlSchema = XmlSchema;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=bpmn-model.umd.js.map
