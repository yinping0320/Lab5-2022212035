"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SequenceFlow = void 0;
var tslib_1 = require("tslib");
var BpmnModelHelper_1 = require("./BpmnModelHelper");
var Expression_1 = require("./Expression");
var FlowElement_1 = require("./FlowElement");
var ExecutionListener_1 = require("./mex/ExecutionListener");
var SequenceFlow = /** @class */ (function (_super) {
    tslib_1.__extends(SequenceFlow, _super);
    function SequenceFlow(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.SequenceFlow";
        _this.executionListeners = new Array();
        _this.MEXTAG = "bpmn.SequenceFlow";
        return _this;
    }
    SequenceFlow.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.ConditionExpression = null;
        this.SkipExpression = null;
        this.SourceRef = null;
        this.TargetRef = null;
        this.executionListeners = new Array();
    };
    SequenceFlow.prototype.NewInstance = function () {
        return new SequenceFlow(this.Model);
    };
    SequenceFlow.prototype.GetExecutionListeners = function () {
        return this.executionListeners;
    };
    SequenceFlow.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "SkipExpression", this.SkipExpression);
        BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "SourceRef", this.SourceRef);
        BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "TargetRef", this.TargetRef);
        if (this.ConditionExpression != null) {
            BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "ConditionExpression", this.ConditionExpression.ConvertToJsonObject());
        }
        return obj;
    };
    SequenceFlow.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.SkipExpression = obj.SkipExpression;
        this.SourceRef = obj.SourceRef;
        this.TargetRef = obj.TargetRef;
        if (obj.hasOwnProperty("ConditionExpression")) {
            this.ConditionExpression = new Expression_1.Expression(this.Model);
            this.ConditionExpression.LoadFromJsonObject(obj.ConditionExpression);
        }
    };
    SequenceFlow.prototype.GetExtensionElements4ConvertTo = function () {
        var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
        for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
            var item = _a[_i];
            item.MexTag = this.MEXTAG;
            list.push(item);
        }
        return list;
    };
    SequenceFlow.prototype.SetExtensionElements4LoadFrom = function (extensionElements) {
        _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
        for (var _i = 0, extensionElements_1 = extensionElements; _i < extensionElements_1.length; _i++) {
            var extensionElement = extensionElements_1[_i];
            if (extensionElement instanceof ExecutionListener_1.ExecutionListener && extensionElement.MexTag == this.MEXTAG) {
                this.executionListeners.push(extensionElement);
            }
        }
    };
    SequenceFlow.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        for (var _i = 0, _a = this.executionListeners; _i < _a.length; _i++) {
            var item = _a[_i];
            item.Validate(errors);
        }
    };
    return SequenceFlow;
}(FlowElement_1.FlowElement));
exports.SequenceFlow = SequenceFlow;
//# sourceMappingURL=SequenceFlow.js.map