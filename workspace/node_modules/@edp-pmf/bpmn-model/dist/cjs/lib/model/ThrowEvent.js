"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThrowEvent = void 0;
var tslib_1 = require("tslib");
var BpmnModelHelper_1 = require("./BpmnModelHelper");
var DataInput_1 = require("./DataInput");
var DataInputAssociation_1 = require("./DataInputAssociation");
var ValidateHelper_1 = require("./ValidateHelper");
var Event_1 = require("./Event");
var ThrowEvent = /** @class */ (function (_super) {
    tslib_1.__extends(ThrowEvent, _super);
    function ThrowEvent(model) {
        var _this = _super.call(this, model) || this;
        _this.dataInputAssociationDic = {};
        _this.dataInputDIc = {};
        return _this;
    }
    ThrowEvent.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.dataInputAssociationDic = {};
        this.dataInputDIc = {};
    };
    ThrowEvent.prototype.AddDataInput = function (item) {
        this.CheckVariableElement(item);
        this.dataInputDIc[item.Id] = item;
        this.Model.AddHasIdElement(item);
    };
    ThrowEvent.prototype.GetDataInput = function (dataInputId) {
        if (dataInputId == null)
            return null;
        if (this.dataInputDIc.hasOwnProperty("dataInputId"))
            return this.dataInputDIc[dataInputId];
        return null;
    };
    ThrowEvent.prototype.GetDataInputs = function () {
        var dataInputs = new Array();
        for (var item in this.dataInputDIc) {
            dataInputs.push(this.dataInputDIc[item]);
        }
        return dataInputs;
    };
    ThrowEvent.prototype.RemoveDataInput = function (dataInputId) {
        delete this.dataInputDIc[dataInputId];
        this.Model.RemoveHasIdElement(dataInputId);
    };
    ThrowEvent.prototype.AddDataInputAssociation = function (association) {
        ValidateHelper_1.ValidateHelper.CheckHasIdElement(association);
        this.dataInputAssociationDic[association.Id] = association;
        this.Model.AddHasIdElement(association);
    };
    ThrowEvent.prototype.GetDataInputAssociation = function (associationId) {
        if (associationId == null)
            return null;
        if (this.dataInputAssociationDic.hasOwnProperty("associationId"))
            return this.dataInputAssociationDic[associationId];
        return null;
    };
    ThrowEvent.prototype.GetDataInputAssociations = function () {
        var dataInputAssociations = new Array();
        for (var item in this.dataInputAssociationDic) {
            dataInputAssociations.push(this.dataInputAssociationDic[item]);
        }
        return dataInputAssociations;
    };
    ThrowEvent.prototype.RemoveDataInputAssociation = function (associationId) {
        delete this.dataInputAssociationDic[associationId];
        this.Model.RemoveHasIdElement(associationId);
    };
    ThrowEvent.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        var dataInputs = new Array();
        for (var item in this.dataInputDIc) {
            var element = this.dataInputDIc[item].ConvertToJsonObject();
            dataInputs.push(element);
        }
        if (dataInputs.length > 0) {
            BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "dataInputs", dataInputs);
        }
        var dataInputAssociations = new Array();
        for (var item in this.dataInputAssociationDic) {
            var element = this.dataInputAssociationDic[item].ConvertToJsonObject();
            dataInputAssociations.push(element);
        }
        if (dataInputAssociations.length > 0) {
            BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "dataInputAssociations", dataInputAssociations);
        }
        return obj;
    };
    ThrowEvent.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        if (obj.hasOwnProperty("dataInputs") && Array.isArray(obj.dataInputs)) {
            for (var _i = 0, _a = obj.dataInputs; _i < _a.length; _i++) {
                var item = _a[_i];
                var dataInput = new DataInput_1.DataInput(this.Model);
                dataInput.LoadFromJsonObject(item);
                this.AddDataInput(dataInput);
            }
        }
        if (obj.hasOwnProperty("dataInputAssociations") && Array.isArray(obj.dataInputAssociations)) {
            for (var item in obj.dataInputAssociations) {
                var dataInputAssociation = new DataInputAssociation_1.DataInputAssociation(this.Model);
                dataInputAssociation.LoadFromJsonObject(item);
                this.AddDataInputAssociation(dataInputAssociation);
            }
        }
    };
    ThrowEvent.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
        for (var item in this.dataInputDIc) {
            this.dataInputDIc[item].Validate(errors);
        }
        for (var item in this.dataInputAssociationDic) {
            this.dataInputAssociationDic[item].Validate(errors);
        }
    };
    ThrowEvent.prototype.CheckVariableElement = function (variableElement) {
        ValidateHelper_1.ValidateHelper.CheckVariableElement(variableElement, this, null, null);
    };
    return ThrowEvent;
}(Event_1.Event));
exports.ThrowEvent = ThrowEvent;
//# sourceMappingURL=ThrowEvent.js.map