{"version":3,"file":"Font.js","sourceRoot":"","sources":["../../../../../src/lib/model/omgdc/Font.ts"],"names":[],"mappings":";;;;AACA,sDAAqD;AAErD,+CAA8C;AAE9C;IAA0B,gCAAY;IAClC,cAAY,KAAgB;QAA5B,YACI,kBAAM,KAAK,CAAC,SAMf;QAJG,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;IAC7B,CAAC;IASS,kCAAmB,GAA7B;QACI,iBAAM,mBAAmB,WAAE,CAAC;QAE5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAClB,CAAC;IAED,kCAAmB,GAAnB;QACI,IAAI,GAAG,GAAG,iBAAM,mBAAmB,WAAE,CAAC;QAEtC,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9D,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClE,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAChF,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACxE,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1D,OAAO,GAAG,CAAC;IACf,CAAC;IAED,iCAAkB,GAAlB,UAAmB,GAAQ;QACvB,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,eAAe,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IACzB,CAAC;IACL,WAAC;AAAD,CAAC,AAnDD,CAA0B,2BAAY,GAmDrC;AAnDY,oBAAI","sourcesContent":["import { BpmnModel } from \"../BpmnModel\";\r\nimport { BpmnModelHelper } from \"../BpmnModelHelper\";\r\nimport { IHasNameElement } from \"../IHasNameElement\";\r\nimport { OmgdcElement } from \"./OmgdcElement\";\r\n\r\nexport class Font extends OmgdcElement implements IHasNameElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n\r\n        this.IsBold = false;\r\n        this.IsItalic = false;\r\n        this.IsStrikeThrough = false;\r\n        this.IsUnderline = false;\r\n    }\r\n\r\n    IsBold: boolean;\r\n    IsItalic: boolean;\r\n    IsStrikeThrough: boolean;\r\n    IsUnderline: boolean;\r\n    Name: string;\r\n    Size: number;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.IsBold = false;\r\n        this.IsItalic = false;\r\n        this.IsStrikeThrough = false;\r\n        this.IsUnderline = false;\r\n        this.Name = null;\r\n        this.Size = 0;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"IsBold\", this.IsBold);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"IsItalic\", this.IsItalic);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"IsStrikeThrough\", this.IsStrikeThrough);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"IsUnderline\", this.IsUnderline);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Size\", this.Size);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.IsBold = obj.IsBold;\r\n        this.IsItalic = obj.IsItalic;\r\n        this.IsStrikeThrough = obj.IsStrikeThrough;\r\n        this.IsUnderline = obj.IsUnderline;\r\n        this.Name = obj.Name;\r\n        this.Size = obj.Size;\r\n    }\r\n}"]}