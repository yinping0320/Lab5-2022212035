"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlowElement = void 0;
var tslib_1 = require("tslib");
var BaseElement_1 = require("./BaseElement");
var BpmnModelHelper_1 = require("./BpmnModelHelper");
var EventHelper_1 = require("./EventHelper");
var FlowElement = /** @class */ (function (_super) {
    tslib_1.__extends(FlowElement, _super);
    function FlowElement(model) {
        return _super.call(this, model) || this;
    }
    FlowElement.prototype.RegisterEvent = function (name, callback, context) {
        var observers = FlowElement.listeners[name];
        if (!observers) {
            FlowElement.listeners[name] = [];
        }
        FlowElement.listeners[name].push(new EventHelper_1.EventHelper(callback, context));
    };
    FlowElement.prototype.FireEvent = function (name) {
        var observers = FlowElement.listeners[name];
        if (!observers)
            return;
        var length = observers.length;
        for (var i = 0; i < length; i++) {
            var observer = observers[i];
            observer.notify(name);
        }
    };
    FlowElement.prototype.RemoveEvent = function (name, callback, context) {
        var observers = FlowElement.listeners[name];
        if (!observers)
            return;
        var length = observers.length;
        for (var i = 0; i < length; i++) {
            var observer = observers[i];
            if (observer.compar(context)) {
                observers.splice(i, 1);
                break;
            }
        }
        if (observers.length == 0) {
            delete FlowElement.listeners[name];
        }
    };
    FlowElement.prototype.clone = function () {
        var clone = this.NewInstance();
        clone.Name = this.Name;
        clone.NameLanguage = this.NameLanguage && tslib_1.__assign({}, this.NameLanguage);
        return clone;
    };
    FlowElement.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.Name = null;
    };
    FlowElement.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
        BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "ClrTypeID", this.ClrTypeID);
        BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "nameLanguage", this.NameLanguage);
        return obj;
    };
    FlowElement.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Name = obj.Name;
        this.NameLanguage = obj.nameLanguage;
    };
    FlowElement.listeners = {};
    return FlowElement;
}(BaseElement_1.BaseElement));
exports.FlowElement = FlowElement;
//# sourceMappingURL=FlowElement.js.map