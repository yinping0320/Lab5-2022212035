{"version":3,"file":"ObjectHelper.js","sourceRoot":"","sources":["../../../../src/lib/model/ObjectHelper.ts"],"names":[],"mappings":";;;AAAA;IAAA;IA2BA,CAAC;IA1BG;;;;OAIG;IACW,8BAAiB,GAA/B,UAAgC,GAAQ;QACpC,IAAM,IAAI,GAAa,EAAE,CAAC;QAE1B,OAAO,GAAG,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAChC,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;SACvB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACW,4BAAe,GAA7B,UAA8B,GAAQ,EAAE,cAAsB;QAC1D,IAAM,UAAU,GAAG,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACvD,OAAO,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC/C,CAAC;IACL,mBAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,oCAAY","sourcesContent":["export class ObjectHelper {\r\n    /**\r\n     * 获取继承链类名列表\r\n     * @param obj \r\n     * @returns \r\n     */\r\n    public static getPrototypeNames(obj: any) {\r\n        const list: string[] = [];\r\n\r\n        while (obj != null) {\r\n            list.push(obj.constructor.name);\r\n            obj = obj.__proto__;\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 是否继承自某个类\r\n     * @param obj \r\n     * @param superClassName \r\n     * @returns \r\n     */\r\n    public static extendFromClass(obj: any, superClassName: string) {\r\n        const protoNames = ObjectHelper.getPrototypeNames(obj);\r\n        return protoNames.includes(superClassName);\r\n    }\r\n}"]}