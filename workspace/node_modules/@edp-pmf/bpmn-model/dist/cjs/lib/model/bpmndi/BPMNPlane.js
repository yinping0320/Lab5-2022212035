"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BPMNPlane = void 0;
var tslib_1 = require("tslib");
var BpmnModelHelper_1 = require("../BpmnModelHelper");
var ExtensionMethod_1 = require("../ExtensionMethod");
var Plane_1 = require("../omgdi/Plane");
var PalProcessAttribute_1 = require("../mex/PalProcessAttribute");
var BPMNPlane = /** @class */ (function (_super) {
    tslib_1.__extends(BPMNPlane, _super);
    function BPMNPlane(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.bpmndi.BPMNPlane";
        return _this;
    }
    BPMNPlane.prototype.NewInstance = function () {
        return new BPMNPlane(this.Model);
    };
    BPMNPlane.prototype.ResetBeforeLoadFrom = function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.BpmnElementId = null;
        this.palProcessAttribute = null;
    };
    BPMNPlane.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper_1.BpmnModelHelper.SetAttributeValue(obj, "BpmnElementId", this.BpmnElementId);
        return obj;
    };
    BPMNPlane.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.BpmnElementId = obj.BpmnElementId;
    };
    BPMNPlane.prototype.LoadExtensionElements = function (extensionElementsObj) {
        _super.prototype.LoadExtensionElements.call(this, extensionElementsObj);
        var palProcessAttributeObj = ExtensionMethod_1.ExtensionMethod.GetAttributeValue(extensionElementsObj, "palProcessAttribute");
        if (palProcessAttributeObj != null) {
            this.palProcessAttribute = new PalProcessAttribute_1.PalProcessAttribute(this.Model);
            this.palProcessAttribute.LoadFromJsonObject(palProcessAttributeObj);
        }
    };
    BPMNPlane.prototype.WriteExtensionElements = function (extensionElementsObj) {
        _super.prototype.WriteExtensionElements.call(this, extensionElementsObj);
        if (this.palProcessAttribute != null) {
            ExtensionMethod_1.ExtensionMethod.SetAttributeValue(extensionElementsObj, "palProcessAttribute", this.palProcessAttribute.ConvertToJsonObject());
        }
    };
    BPMNPlane.MEXTAG = "plane.bpa";
    return BPMNPlane;
}(Plane_1.Plane));
exports.BPMNPlane = BPMNPlane;
//# sourceMappingURL=BPMNPlane.js.map