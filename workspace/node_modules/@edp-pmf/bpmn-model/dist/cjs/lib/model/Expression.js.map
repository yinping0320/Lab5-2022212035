{"version":3,"file":"Expression.js","sourceRoot":"","sources":["../../../../src/lib/model/Expression.ts"],"names":[],"mappings":";;;;AAAA,6CAA4C;AAG5C,qDAAoD;AAGpD;IAAgC,sCAAW;IACvC,oBAAY,KAAgB;QAA5B,YACI,kBAAM,KAAK,CAAC,SACf;QAUgB,YAAM,GAAW,iBAAiB,CAAC;;IAVpD,CAAC;IAIS,wCAAmB,GAA7B;QACI,iBAAM,mBAAmB,WAAE,CAAC;QAE5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAIS,mDAA8B,GAAxC;QACI,IAAI,IAAI,GAA4B,iBAAM,8BAA8B,WAAE,CAAC;QAE3E,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACjC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,kDAA6B,GAAvC,UAAwC,iBAA0C;QAC9E,iBAAM,6BAA6B,YAAC,iBAAiB,CAAC,CAAC;QAEvD,KAA6B,UAAiB,EAAjB,uCAAiB,EAAjB,+BAAiB,EAAjB,IAAiB,EAAE;YAA3C,IAAI,gBAAgB,0BAAA;YACrB,IAAI,gBAAgB,YAAY,6BAAa,IAAI,gBAAgB,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;gBACrF,IAAI,CAAC,aAAa,GAAG,gBAAiC,CAAC;aAC1D;SACJ;IACL,CAAC;IAED,6BAAQ,GAAR,UAAS,MAA8B;QACnC,iBAAM,QAAQ,YAAC,MAAM,CAAC,CAAC;QAEvB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACvC;IACL,CAAC;IAED,gCAAW,GAAX;QACI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,0BAAK,GAAL;QACI,IAAM,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAG,IAAI,CAAC,aAAa,EAAE;YACnB,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAS,CAAC;SAChE;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IACL,iBAAC;AAAD,CAAC,AAvDD,CAAgC,yBAAW,GAuD1C;AAvDY,gCAAU","sourcesContent":["import { BaseElement } from \"./BaseElement\";\r\nimport { BpmnModel } from \"./BpmnModel\";\r\nimport { ExtensionElement } from \"./ExtensionElement\";\r\nimport { MexExpression } from \"./mex/MexExpression\";\r\nimport { ValidationError } from \"./ValidationError\";\r\n\r\nexport class Expression extends BaseElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    MexExpression: MexExpression;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.MexExpression = null;\r\n    }\r\n\r\n    private readonly MEXTAG: string = \"bpmn.Expression\";\r\n\r\n    protected GetExtensionElements4ConvertTo(): Array<ExtensionElement> {\r\n        let list: Array<ExtensionElement> = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.MexExpression != null) {\r\n            this.MexExpression.MexTag = this.MEXTAG;\r\n            list.push(this.MexExpression);\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    protected SetExtensionElements4LoadFrom(extensionElements: Array<ExtensionElement>): void {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement instanceof MexExpression && extensionElement.MexTag == this.MEXTAG) {\r\n                this.MexExpression = extensionElement as MexExpression;\r\n            }\r\n        }\r\n    }\r\n\r\n    Validate(errors: Array<ValidationError>): void {\r\n        super.Validate(errors);\r\n\r\n        if (this.MexExpression != null) {\r\n            this.MexExpression.Validate(errors);\r\n        }\r\n    }\r\n\r\n    NewInstance(): Expression {\r\n        return new Expression(this.Model);\r\n    }\r\n\r\n    clone(): Expression {\r\n        const expression = new Expression(this.Model);\r\n        if(this.MexExpression) {\r\n            expression.MexExpression = this.MexExpression.clone() as any;\r\n        }\r\n        return expression;\r\n    }\r\n}"]}