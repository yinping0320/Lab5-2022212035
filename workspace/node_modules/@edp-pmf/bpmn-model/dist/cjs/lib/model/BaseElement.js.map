{"version":3,"file":"BaseElement.js","sourceRoot":"","sources":["../../../../src/lib/model/BaseElement.ts"],"names":[],"mappings":";;;;AAAA,6CAA4C;AAE5C,qDAAoD;AAIpD;IAA0C,uCAAW;IACjD,qBAAY,KAAgB;QAA5B,YACI,kBAAM,KAAK,CAAC,SAGf;QADG,KAAI,CAAC,EAAE,GAAG,iCAAe,CAAC,iBAAiB,EAAE,CAAC;;IAClD,CAAC;IAKS,yCAAmB,GAA7B;QACI,iBAAM,mBAAmB,WAAE,CAAC;QAE5B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,yCAAmB,GAAnB;QACI,IAAI,GAAG,GAAQ,iBAAM,mBAAmB,WAAE,CAAC;QAE3C,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACtD,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE5E,IAAI,IAAI,CAAC,8BAA8B,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAClD,IAAI,iBAAiB,GAAe,IAAI,KAAK,EAAO,CAAC;YACrD,KAAiB,UAAqC,EAArC,KAAA,IAAI,CAAC,8BAA8B,EAAE,EAArC,cAAqC,EAArC,IAAqC,EAAE;gBAAnD,IAAI,IAAI,SAAA;gBACT,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;aACtD;YAED,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;SAClF;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED,wCAAkB,GAAlB,UAAmB,GAAQ;QACvB,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;QAEvC,IAAI,GAAG,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;YACjF,IAAI,IAAI,GAA4B,IAAI,KAAK,EAAoB,CAAC;YAClE,KAAiB,UAAqB,EAArB,KAAA,GAAG,CAAC,iBAAiB,EAArB,cAAqB,EAArB,IAAqB,EAAE;gBAAnC,IAAI,IAAI,SAAA;gBACT,IAAI,gBAAgB,GAAqB,iCAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAqB,CAAC;gBAC5G,IAAI,gBAAgB,IAAI,IAAI,EAAE;oBAC1B,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;oBAC1C,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBAC/B;aACJ;YACD,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC;SAC5C;IAEL,CAAC;IAES,oDAA8B,GAAxC;QACI,OAAO,IAAI,KAAK,EAAoB,CAAC;IACzC,CAAC;IAES,mDAA6B,GAAvC,UAAwC,iBAA0C;IAClF,CAAC;IACL,kBAAC;AAAD,CAAC,AA7DD,CAA0C,yBAAW,GA6DpD;AA7DqB,kCAAW","sourcesContent":["import { BpmnElement } from \"./BpmnElement\";\r\nimport { BpmnModel } from \"./BpmnModel\";\r\nimport { BpmnModelHelper } from \"./BpmnModelHelper\";\r\nimport { ExtensionElement } from \"./ExtensionElement\";\r\nimport { IHasIdElement } from \"./IHasIdElement\";\r\n\r\nexport abstract class BaseElement extends BpmnElement implements IHasIdElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n\r\n        this.Id = BpmnModelHelper.GenerateElementId();\r\n    }\r\n\r\n    Id: string;\r\n    Documentation: string;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.Id = null;\r\n        this.Documentation = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Id\", this.Id);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Documentation\", this.Documentation);\r\n\r\n        if (this.GetExtensionElements4ConvertTo().length > 0) {\r\n            let extensionElements: Array<any> = new Array<any>();\r\n            for (let item of this.GetExtensionElements4ConvertTo()) {\r\n                extensionElements.push(item.ConvertToJsonObject());\r\n            }\r\n\r\n            BpmnModelHelper.SetAttributeValue(obj, \"extensionElements\", extensionElements);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Id = obj.Id;\r\n        this.Documentation = obj.Documentation;\r\n\r\n        if (obj.hasOwnProperty(\"extensionElements\") && Array.isArray(obj.extensionElements)) {\r\n            let list: Array<ExtensionElement> = new Array<ExtensionElement>();\r\n            for (let item of obj.extensionElements) {\r\n                let extensionElement: ExtensionElement = BpmnModelHelper.GetElementType(item.ClrTypeID) as ExtensionElement;\r\n                if (extensionElement != null) {\r\n                    extensionElement.LoadFromJsonObject(item);\r\n                    list.push(extensionElement);\r\n                }\r\n            }\r\n            this.SetExtensionElements4LoadFrom(list);\r\n        }\r\n\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): Array<ExtensionElement> {\r\n        return new Array<ExtensionElement>();\r\n    }\r\n\r\n    protected SetExtensionElements4LoadFrom(extensionElements: Array<ExtensionElement>): void {\r\n    }\r\n}\r\n"]}