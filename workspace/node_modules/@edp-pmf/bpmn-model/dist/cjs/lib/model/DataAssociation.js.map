{"version":3,"file":"DataAssociation.js","sourceRoot":"","sources":["../../../../src/lib/model/DataAssociation.ts"],"names":[],"mappings":";;;;AAAA,6CAA4C;AAE5C,qDAAoD;AACpD,uDAAsD;AACtD,qDAAoD;AACpD,qDAAoD;AAEpD;IAA8C,2CAAW;IACrD,yBAAY,KAAgB;eACxB,kBAAM,KAAK,CAAC;IAChB,CAAC;IAKS,6CAAmB,GAA7B;QACI,iBAAM,mBAAmB,WAAE,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,6CAAmB,GAAnB;QACI,IAAI,GAAG,GAAQ,iBAAM,mBAAmB,WAAE,CAAC;QAE3C,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEpE,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC9C;aACI;YACD,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,CAAC;SACvG;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED,4CAAkB,GAAlB,UAAmB,GAAQ;QACvB,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;QAE/B,IAAI,GAAG,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,mCAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC9D;IACL,CAAC;IAED,kCAAQ,GAAR,UAAS,MAA8B;QACnC,iBAAM,QAAQ,YAAC,MAAM,CAAC,CAAC;QAEvB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACxC;aACI;YACD,IAAI,KAAK,GAAoB,IAAI,iCAAe,EAAE,CAAC;YACnD,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;YACrB,KAAK,CAAC,UAAU,GAAG,iCAAe,CAAC,OAAO,CAAC;YAC3C,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;YACrB,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC;YAEjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACxB,IAAI,KAAK,GAAoB,IAAI,iCAAe,EAAE,CAAC;YACnD,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;YACrB,KAAK,CAAC,UAAU,GAAG,iCAAe,CAAC,OAAO,CAAC;YAC3C,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;YACrB,KAAK,CAAC,YAAY,GAAG,WAAW,CAAC;YAEjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtB;IACL,CAAC;IACL,sBAAC;AAAD,CAAC,AAnED,CAA8C,yBAAW,GAmExD;AAnEqB,0CAAe","sourcesContent":["import { BaseElement } from \"./BaseElement\";\r\nimport { BpmnModel } from \"./BpmnModel\";\r\nimport { BpmnModelHelper } from \"./BpmnModelHelper\";\r\nimport { FormalExpression } from \"./FormalExpression\";\r\nimport { ValidationError } from \"./ValidationError\";\r\nimport { ValidationLevel } from \"./ValidationLevel\";\r\n\r\nexport abstract class DataAssociation extends BaseElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    TargetRef: string;\r\n    Transformation: FormalExpression;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.TargetRef = null;\r\n        this.Transformation = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"TargetRef\", this.TargetRef);\r\n\r\n        if (this.Transformation == null) {\r\n            throw new Error(\"Transformation is null.\");\r\n        }\r\n        else {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"Transformation\", this.Transformation.ConvertToJsonObject());\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.TargetRef = obj.TargetRef;\r\n\r\n        if (obj.hasOwnProperty(\"Transformation\")) {\r\n            this.Transformation = new FormalExpression(this.Model);\r\n            this.Transformation.LoadFromJsonObject(obj.Transformation);\r\n        }\r\n    }\r\n\r\n    Validate(errors: Array<ValidationError>): void {\r\n        super.Validate(errors);\r\n\r\n        if (this.Transformation != null) {\r\n            this.Transformation.Validate(errors);\r\n        }\r\n        else {\r\n            let error: ValidationError = new ValidationError();\r\n            error.Element = this;\r\n            error.ErrorLevel = ValidationLevel.$_Error;\r\n            error.ErrorCode = \"\";\r\n            error.ErrorMessage = \"没有设定赋值表达式\";\r\n\r\n            errors.push(error);\r\n        }\r\n\r\n        if (this.TargetRef == null) {\r\n            let error: ValidationError = new ValidationError();\r\n            error.Element = this;\r\n            error.ErrorLevel = ValidationLevel.$_Error;\r\n            error.ErrorCode = \"\";\r\n            error.ErrorMessage = \"没有设定关联的目标\";\r\n\r\n            errors.push(error);\r\n        }\r\n    }\r\n}"]}