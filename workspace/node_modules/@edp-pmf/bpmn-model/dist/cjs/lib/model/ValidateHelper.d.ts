import { IDataInputContainer } from "./IDataInputContainer";
import { IDataObjectContainer } from "./IDataObjectContainer";
import { IDataOutputContainer } from "./IDataOutputContainer";
import { IHasIdElement } from "./IHasIdElement";
import { IProcess } from "./IProcess";
import { IVariableElement } from "./IVariableElement";
import { ValidationError } from "./ValidationError";
export declare class ValidateHelper {
    static CheckHasIdElement(element: IHasIdElement): void;
    static IsMatchVariableNameRules(str: string): boolean;
    static ValidateProcess(process: IProcess, errors: Array<ValidationError>): void;
    static CheckVariableElement(variableElement: IVariableElement, dataInputContainer: IDataInputContainer, dataOutputContainer: IDataOutputContainer, dataObjectContainer: IDataObjectContainer): void;
    private static ValidateEndEvents;
    private static ValidateFlowNode;
    private static ValidateIDataInputAssociationContainer;
    private static ValidateIDataOutputAssociationContainer;
    private static ValidateSequenceFlow;
    private static ValidateStartEvents;
}
