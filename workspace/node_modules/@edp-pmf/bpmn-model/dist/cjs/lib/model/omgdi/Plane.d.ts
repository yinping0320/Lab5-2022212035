import { BpmnModel } from "../BpmnModel";
import { ValidationError } from "../ValidationError";
import { DiagramElement } from "./DiagramElement";
import { Node } from "./Node";
export declare abstract class Plane extends Node {
    constructor(model: BpmnModel);
    diagramElementDic: {
        [Key: string]: DiagramElement;
    };
    protected ResetBeforeLoadFrom(): void;
    AddDiagramElement(element: DiagramElement): void;
    GetDiagramElement(elementId: string): any;
    GetDiagramElements(): Array<DiagramElement>;
    RemoveDiagramElement(elementId: string): void;
    CheckDiagramElement(element: DiagramElement): void;
    ConvertToJsonObject(): any;
    LoadFromJsonObject(obj: any): void;
    Validate(errors: Array<ValidationError>): void;
}
