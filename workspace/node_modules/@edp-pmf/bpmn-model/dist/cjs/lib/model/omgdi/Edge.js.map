{"version":3,"file":"Edge.js","sourceRoot":"","sources":["../../../../../src/lib/model/omgdi/Edge.ts"],"names":[],"mappings":";;;;AACA,sDAAqD;AACrD,wCAAuC;AACvC,mDAAkD;AAElD;IAAmC,gCAAc;IAC7C,cAAY,KAAgB;QAA5B,YACI,kBAAM,KAAK,CAAC,SAGf;QADG,KAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAS,CAAC;;IACrC,CAAC;IAIS,kCAAmB,GAA7B;QACI,iBAAM,mBAAmB,WAAE,CAAC;QAE5B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAS,CAAC;IACrC,CAAC;IAED,kCAAmB,GAAnB;QACI,IAAI,GAAG,GAAG,iBAAM,mBAAmB,WAAE,CAAC;QAEtC,IAAI,MAAM,GAAe,IAAI,KAAK,EAAO,CAAC;QAC1C,KAAiB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;YAAzB,IAAI,IAAI,SAAA;YACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;SAC3C;QAED,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC5D;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED,iCAAkB,GAAlB,UAAmB,GAAQ;QACvB,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC3D,KAAiB,UAAU,EAAV,KAAA,GAAG,CAAC,MAAM,EAAV,cAAU,EAAV,IAAU,EAAE;gBAAxB,IAAI,IAAI,SAAA;gBACT,IAAI,KAAK,GAAG,IAAI,aAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;SACJ;IACL,CAAC;IACL,WAAC;AAAD,CAAC,AAzCD,CAAmC,+BAAc,GAyChD;AAzCqB,oBAAI","sourcesContent":["import { BpmnModel } from \"../BpmnModel\";\r\nimport { BpmnModelHelper } from \"../BpmnModelHelper\";\r\nimport { Point } from \"../omgdc/Point\";\r\nimport { DiagramElement } from \"./DiagramElement\";\r\n\r\nexport abstract class Edge extends DiagramElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n\r\n        this.Points = new Array<Point>();\r\n    }\r\n\r\n    Points: Array<Point>;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.Points = new Array<Point>();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        let points: Array<any> = new Array<any>();\r\n        for (let item of this.Points) {\r\n            points.push(item.ConvertToJsonObject());\r\n        }\r\n\r\n        if (points.length > 0) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"points\", points);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        if (obj.hasOwnProperty(\"points\") && Array.isArray(obj.points)) {\r\n            for (let item of obj.points) {\r\n                let point = new Point(this.Model);\r\n                point.LoadFromJsonObject(item);\r\n                this.Points.push(point);\r\n            }\r\n        }\r\n    }\r\n}"]}