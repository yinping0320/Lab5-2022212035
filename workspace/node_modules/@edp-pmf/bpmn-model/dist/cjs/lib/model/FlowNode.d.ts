import { BpmnModel } from "./BpmnModel";
import { ExtensionElement } from "./ExtensionElement";
import { FlowElement } from "./FlowElement";
import { IExecutionListenerContainer } from "./IExecutionListenerContainer";
import { ExecutionListener } from "./mex/ExecutionListener";
import { ValidationError } from "./ValidationError";
export declare abstract class FlowNode extends FlowElement implements IExecutionListenerContainer {
    constructor(model: BpmnModel);
    executionListeners: Array<ExecutionListener>;
    IncomingGatewayType: string;
    Incomings: Array<string>;
    OutgoingGatewayType: string;
    Outgoings: Array<string>;
    protected ResetBeforeLoadFrom(): void;
    GetExecutionListeners(): ExecutionListener[];
    ConvertToJsonObject(): any;
    LoadFromJsonObject(obj: any): void;
    private readonly MEXTAG;
    protected GetExtensionElements4ConvertTo(): Array<ExtensionElement>;
    protected SetExtensionElements4LoadFrom(extensionElements: Array<ExtensionElement>): void;
    Validate(errors: Array<ValidationError>): void;
}
