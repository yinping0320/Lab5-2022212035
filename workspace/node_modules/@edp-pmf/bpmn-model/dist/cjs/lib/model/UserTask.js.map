{"version":3,"file":"UserTask.js","sourceRoot":"","sources":["../../../../src/lib/model/UserTask.ts"],"names":[],"mappings":";;;;AACA,qDAAoD;AAEpD,+BAA8B;AAE9B;IAAuC,oCAAI;IACvC,kBAAY,KAAgB;QAA5B,YACI,kBAAM,KAAK,CAAC,SACf;QAEO,kBAAY,GAAiC,EAAE,CAAC;;IAFxD,CAAC;IAID,sCAAmB,GAAnB;QACI,iBAAM,mBAAmB,WAAE,CAAC;QAE5B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,+BAAY,GAAZ,UAAa,IAAe;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,+BAAY,GAAZ,UAAa,WAAmB;QAC5B,IAAI,WAAW,IAAI,IAAI;YACnB,OAAO,IAAI,CAAC;QAEhB,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC;YAC7C,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;QAE1C,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,gCAAa,GAAb;QACI,IAAI,UAAU,GAAqB,IAAI,KAAK,EAAa,CAAC;QAE1D,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;YAChC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;SAC5C;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;IAED,kCAAe,GAAf,UAAgB,WAAmB;QAC/B,OAAO,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAED,sCAAmB,GAAnB;QACI,IAAI,GAAG,GAAQ,iBAAM,mBAAmB,WAAE,CAAC;QAE3C,IAAI,UAAU,GAAe,IAAI,KAAK,EAAO,CAAC;QAC9C,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;YAChC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC;SAClE;QACD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;SACpE;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAED,qCAAkB,GAAlB,UAAmB,GAAQ;QACvB,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,GAAG,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YACnE,KAAiB,UAAc,EAAd,KAAA,GAAG,CAAC,UAAU,EAAd,cAAc,EAAd,IAAc,EAAE;gBAA5B,IAAI,IAAI,SAAA;gBACT,IAAI,SAAS,GAAc,iCAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAc,CAAC;gBAEvF,IAAI,SAAS,IAAI,IAAI;oBACjB,SAAS;gBAEb,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aAChC;SACJ;IACL,CAAC;IACL,eAAC;AAAD,CAAC,AAvED,CAAuC,WAAI,GAuE1C;AAvEqB,4BAAQ","sourcesContent":["import { BpmnModel } from \"./BpmnModel\";\r\nimport { BpmnModelHelper } from \"./BpmnModelHelper\";\r\nimport { Rendering } from \"./Rendering\";\r\nimport { Task } from \"./Task\";\r\n\r\nexport abstract class UserTask extends Task {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    private renderingDIc: { [Key: string]: Rendering } = {};\r\n\r\n    ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.renderingDIc = {};\r\n    }\r\n\r\n    AddRendering(item: Rendering): void {\r\n        this.renderingDIc[item.Id] = item;\r\n        this.Model.AddHasIdElement(item);\r\n    }\r\n\r\n    GetRendering(renderingId: string): Rendering {\r\n        if (renderingId == null)\r\n            return null;\r\n\r\n        if (this.renderingDIc.hasOwnProperty(renderingId))\r\n            return this.renderingDIc[renderingId];\r\n\r\n        return null;\r\n    }\r\n\r\n    GetRenderings(): Array<Rendering> {\r\n        let renderings: Array<Rendering> = new Array<Rendering>();\r\n\r\n        for (let item in this.renderingDIc) {\r\n            renderings.push(this.renderingDIc[item]);\r\n        }\r\n\r\n        return renderings;\r\n    }\r\n\r\n    RemoveRendering(renderingId: string): void {\r\n        delete this.renderingDIc[renderingId];\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        let renderings: Array<any> = new Array<any>();\r\n        for (let item in this.renderingDIc) {\r\n            renderings.push(this.renderingDIc[item].ConvertToJsonObject());\r\n        }\r\n        if (renderings.length > 0) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"renderings\", renderings);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        if (obj.hasOwnProperty(\"renderings\") && Array.isArray(obj.renderings)) {\r\n            for (let item of obj.renderings) {\r\n                let rendering: Rendering = BpmnModelHelper.GetElementType(item.ClrTypeID) as Rendering;\r\n\r\n                if (rendering == null)\r\n                    continue;\r\n\r\n                rendering.LoadFromJsonObject(item);\r\n                this.AddRendering(rendering);\r\n            }\r\n        }\r\n    }\r\n}"]}