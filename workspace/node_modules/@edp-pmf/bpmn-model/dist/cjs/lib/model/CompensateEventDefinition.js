"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompensateEventDefinition = void 0;
var tslib_1 = require("tslib");
var EventDefinition_1 = require("./EventDefinition");
var ExtensionMethod_1 = require("./ExtensionMethod");
var CompensateEventDefinition = /** @class */ (function (_super) {
    tslib_1.__extends(CompensateEventDefinition, _super);
    function CompensateEventDefinition(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "bpmn.Association";
        _this.WaitForCompletion = true;
        return _this;
    }
    CompensateEventDefinition.prototype.ConvertToJsonObject = function () {
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod_1.ExtensionMethod.SetAttributeValue(obj, "ActivityRef", this.ActivityRef);
        ExtensionMethod_1.ExtensionMethod.SetAttributeValue(obj, "WaitForCompletion", this.WaitForCompletion);
        return obj;
    };
    CompensateEventDefinition.prototype.LoadFromJsonObject = function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.ActivityRef = ExtensionMethod_1.ExtensionMethod.GetAttributeValue4String(obj, "ActivityRef");
        this.WaitForCompletion = ExtensionMethod_1.ExtensionMethod.GetAttributeValue4Boolean(obj, "WaitForCompletion");
    };
    CompensateEventDefinition.prototype.Validate = function (errors) {
        _super.prototype.Validate.call(this, errors);
    };
    CompensateEventDefinition.prototype.NewInstance = function () {
        var clone = new CompensateEventDefinition(this.Model);
        clone.ActivityRef = this.ActivityRef;
        clone.WaitForCompletion = this.WaitForCompletion;
        return clone;
    };
    return CompensateEventDefinition;
}(EventDefinition_1.EventDefinition));
exports.CompensateEventDefinition = CompensateEventDefinition;
//# sourceMappingURL=CompensateEventDefinition.js.map