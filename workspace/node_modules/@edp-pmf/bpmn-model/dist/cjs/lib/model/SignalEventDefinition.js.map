{"version":3,"file":"SignalEventDefinition.js","sourceRoot":"","sources":["../../../../src/lib/model/SignalEventDefinition.ts"],"names":[],"mappings":";;;;AACA,qDAAoD;AACpD,qDAAoD;AAEpD;IAA2C,iDAAe;IAGtD,+BAAmB,KAAgB;QAAnC,YACI,kBAAM,KAAK,CAAC,SACf;QAJQ,eAAS,GAAW,4BAA4B,CAAC;;IAI1D,CAAC;IAOM,mDAAmB,GAA1B;QACI,IAAI,GAAG,GAAQ,iBAAM,mBAAmB,WAAE,CAAC;QAC3C,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACpE,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACpE,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClF,iCAAe,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,kDAAkB,GAAzB,UAA0B,GAAQ;QAC9B,iBAAM,kBAAkB,YAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,CAAC,SAAS,GAAG,iCAAe,CAAC,wBAAwB,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAC5E,IAAI,CAAC,gBAAgB,GAAG,iCAAe,CAAC,wBAAwB,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;QAC1F,IAAI,CAAC,KAAK,GAAG,iCAAe,CAAC,yBAAyB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACzE,CAAC;IAED,2CAAW,GAAX;QACI,IAAI,KAAK,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/C,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,OAAO,KAAK,CAAC;IACjB,CAAC;IACL,4BAAC;AAAD,CAAC,AApCD,CAA2C,iCAAe,GAoCzD;AApCY,sDAAqB","sourcesContent":["import { BpmnModel } from \"./BpmnModel\";\r\nimport { EventDefinition } from \"./EventDefinition\";\r\nimport { ExtensionMethod } from \"./ExtensionMethod\";\r\n\r\nexport class SignalEventDefinition extends EventDefinition {\r\n    readonly ClrTypeID: string = \"bpmn.SignalEventDefinition\";\r\n\r\n    public constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    SignalRef: string;\r\n    // todo activiti扩展属性  暂时屏蔽\r\n    SignalExpression: string;\r\n    Async: boolean;\r\n\r\n    public ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"ClrTypeID\", this.ClrTypeID);\r\n        ExtensionMethod.SetAttributeValue(obj, \"SignalRef\", this.SignalRef);\r\n        ExtensionMethod.SetAttributeValue(obj, \"SignalExpression\", this.SignalExpression);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Async\", this.Async);\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.SignalRef = ExtensionMethod.GetAttributeValue4String(obj, \"SignalRef\");\r\n        this.SignalExpression = ExtensionMethod.GetAttributeValue4String(obj, \"SignalExpression\");\r\n        this.Async = ExtensionMethod.GetAttributeValue4Boolean(obj, \"Async\");\r\n    }\r\n\r\n    NewInstance(): SignalEventDefinition {\r\n        let clone = new SignalEventDefinition(this.Model);\r\n        clone.SignalRef = this.SignalRef;\r\n        clone.SignalExpression = this.SignalExpression;\r\n        clone.Async = this.Async;\r\n        return clone;\r\n    }\r\n}"]}