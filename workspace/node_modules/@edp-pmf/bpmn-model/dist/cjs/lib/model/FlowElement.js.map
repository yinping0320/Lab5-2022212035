{"version":3,"file":"FlowElement.js","sourceRoot":"","sources":["../../../../src/lib/model/FlowElement.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseElement } from \"./BaseElement\";\r\nimport { BpmnModel } from \"./BpmnModel\";\r\nimport { BpmnModelHelper } from \"./BpmnModelHelper\";\r\nimport { EventHelper } from \"./EventHelper\";\r\nimport { IClrTypeElement } from \"./IClrTypeElement\";\r\nimport { IHasNameElement } from \"./IHasNameElement\";\r\n\r\nexport abstract class FlowElement extends BaseElement implements IClrTypeElement, IHasNameElement {\r\n    private static listeners = {};\r\n\r\n    RegisterEvent(name: string, callback: Function, context: any) {\r\n        let observers: EventHelper[] = FlowElement.listeners[name];\r\n        if (!observers) {\r\n            FlowElement.listeners[name] = [];\r\n        }\r\n        FlowElement.listeners[name].push(new EventHelper(callback, context));\r\n    }\r\n\r\n    FireEvent(name: string) {\r\n        let observers: EventHelper[] = FlowElement.listeners[name];\r\n        if (!observers) return;\r\n        let length = observers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let observer = observers[i];\r\n            observer.notify(name);\r\n        }\r\n    }\r\n\r\n    RemoveEvent(name: string, callback: Function, context: any) {\r\n        let observers: EventHelper[] = FlowElement.listeners[name];\r\n        if (!observers) return;\r\n        let length = observers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            let observer = observers[i];\r\n            if (observer.compar(context)) {\r\n                observers.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        if (observers.length == 0) {\r\n            delete FlowElement.listeners[name];\r\n        }\r\n    }\r\n\r\n    clone(): FlowElement {\r\n        const clone = this.NewInstance();\r\n        clone.Name = this.Name;\r\n        clone.NameLanguage = this.NameLanguage && {\r\n            ... this.NameLanguage,\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    abstract ClrTypeID: string;\r\n    Name: string;\r\n    NameLanguage: { [lang: string]: any };\r\n\r\n    abstract NewInstance(): FlowElement;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.Name = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj: any = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ClrTypeID\", this.ClrTypeID);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"nameLanguage\", this.NameLanguage);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Name = obj.Name;\r\n        this.NameLanguage = obj.nameLanguage;\r\n    }\r\n}"]}