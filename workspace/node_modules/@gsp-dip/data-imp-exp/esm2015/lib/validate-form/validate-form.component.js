/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { DatagridComponent } from '@farris/ui-datagrid';
import { DataValidateStrategy } from './ValidateEntity/DataValidateStrategy';
export class ValidateFormComponent {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.closeModal = new EventEmitter();
        this.okModal = new EventEmitter();
        this.validateInfoAllWarning = false;
        this.onlyOneObject = false;
        this.showInfo = '';
        this.ValidateInfoColumns = [];
        this.radioData = [];
        this.checkboxData1 = [];
        this.checkboxData2 = [];
        this.checkBoxValue1 = DataValidateStrategy[0];
        this.checkBoxValue2 = '';
        this.validatedInfoList = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const res = this.i18nResource;
        this.order = res['order'];
        this.validate_type = res['validate_type'];
        this.table_name = res['table_name'];
        this.illegal_data_location = res['illegal_data_location'];
        this.validate_result = res['validate_result'];
        this.export_validate_result = res['export_validate_result'];
        this.continue = res['continue'];
        this.checkboxData1 = [
            { value: DataValidateStrategy[0], name: this.i18nResource['AllIgnore'] }
        ];
        this.checkboxData2 = [
            { value: DataValidateStrategy[1], name: this.i18nResource['AllMandatoryImport'] }
        ];
        this.radioData = [
            { value: DataValidateStrategy[0], name: this.i18nResource['Ignore'] },
            { value: DataValidateStrategy[1], name: this.i18nResource['MandatoryImport'] }
        ];
        this.validateResult.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            if (element.validateInfoAllWarning) {
                this.validateInfoAllWarning = true;
            }
            if (element.onlyOneObject) {
                this.onlyOneObject = true;
            }
            if (element.newValidatedInfoList !== null && element.newValidatedInfoList !== undefined) {
                this.validatedInfoList = this.validatedInfoList.concat(element.newValidatedInfoList);
            }
            if (element.validateShowInfo) {
                this.customShowInfo = element.validateShowInfo;
            }
        }));
        if (this.validateInfoAllWarning) {
            this.cancel = res['cancel'];
        }
        else {
            this.cancel = res['ie_ok'];
        }
        if (this.validateInfoAllWarning) {
            this.showInfo = this.customShowInfo ? this.customShowInfo : this.i18nResource['you_have'] + this.validatedInfoList.length + this.i18nResource['warning_info'];
            if (this.onlyOneObject) {
                this.ValidateInfoColumns = [
                    { field: 'validateShowInfo', width: 140, title: this.illegal_data_location, sortable: false, showTips: true },
                    {
                        field: 'operation', width: 80, title: '操作', headerTemplate: this.headerTemplate,
                        template: this.columnOperation, sortable: false, showTips: true
                    }
                ];
            }
            else {
                this.ValidateInfoColumns = [
                    { field: 'dataObjectName', width: 40, title: this.table_name, sortable: false, showTips: true },
                    { field: 'validateShowInfo', width: 140, title: this.illegal_data_location, sortable: false, showTips: true },
                    {
                        field: 'operation', width: 80, title: '操作', headerTemplate: this.headerTemplate,
                        template: this.columnOperation, sortable: false, showTips: true
                    }
                ];
            }
        }
        else {
            this.showInfo = this.customShowInfo ? this.customShowInfo : this.i18nResource['you_have'] + this.validatedInfoList.length + this.i18nResource['error_info'];
            if (this.onlyOneObject) {
                this.ValidateInfoColumns = [
                    { field: 'validateShowInfo', width: 140, title: this.illegal_data_location, sortable: false, showTips: true }
                ];
            }
            else {
                this.ValidateInfoColumns = [
                    { field: 'dataObjectName', width: 40, title: this.table_name, sortable: false, showTips: true },
                    { field: 'validateShowInfo', width: 140, title: this.illegal_data_location, sortable: false, showTips: true }
                ];
            }
        }
    }
    /**
     * @return {?}
     */
    checkBoxChange1() {
        if (this.checkBoxValue1) {
            this.checkBoxValue2 = '';
            if (this.validatedInfoList) {
                this.validatedInfoList.forEach((/**
                 * @param {?} t
                 * @return {?}
                 */
                t => t.dataValidateStrategy = DataValidateStrategy[0]));
            }
        }
    }
    /**
     * @return {?}
     */
    checkBoxChange2() {
        if (this.checkBoxValue2) {
            this.checkBoxValue1 = '';
            if (this.validatedInfoList) {
                this.validatedInfoList.forEach((/**
                 * @param {?} t
                 * @return {?}
                 */
                t => t.dataValidateStrategy = DataValidateStrategy[1]));
            }
        }
    }
    /**
     * @param {?} ctx
     * @return {?}
     */
    radioChange(ctx) {
        /** @type {?} */
        const ignoreList = this.validatedInfoList.filter((/**
         * @param {?} t
         * @return {?}
         */
        t => t.dataValidateStrategy == DataValidateStrategy[0]));
        if (ignoreList.length == this.validatedInfoList.length) {
            this.checkBoxValue1 = DataValidateStrategy[0];
            this.checkBoxValue2 = '';
        }
        else if (ignoreList.length == 0) {
            this.checkBoxValue1 = '';
            this.checkBoxValue2 = DataValidateStrategy[1];
        }
        else {
            this.checkBoxValue1 = '';
            this.checkBoxValue2 = '';
        }
    }
    /**
     * @return {?}
     */
    continueHandler() {
        this.okModal.emit(this.validatedInfoList);
    }
    /**
     * @return {?}
     */
    cancelHandler() {
        this.closeModal.emit();
    }
    /**
     * @return {?}
     */
    exportPdf() {
        /** @type {?} */
        const url = '/api/runtime/dip/v1.0/rpcfileoper/DownloadValidateFile';
        /** @type {?} */
        const body = {
            su: this.su,
            validateTitles: [this.order, this.table_name, this.illegal_data_location],
            validatedInfos: this.validatedInfoList
        };
        this.loadingParam.loadingService.show();
        this.http.post(url, body, {
            responseType: 'blob',
            observe: 'response',
            params: { su: this.su }
        }).subscribe((/**
         * @param {?} filedata
         * @return {?}
         */
        filedata => {
            this.loadingParam.loadingService.clearAll();
            if (!filedata || filedata.body.size == 0) {
                return;
            }
            else {
                /** @type {?} */
                const blob = new Blob([filedata.body]);
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(blob, this.validate_result);
                }
                else {
                    /** @type {?} */
                    const link = document.createElement('a');
                    link.setAttribute('href', window.URL.createObjectURL(blob));
                    // 设置下载的文件名
                    link.setAttribute('download', this.validate_result);
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                /** @type {?} */
                const delUrl = '/api/runtime/dip/v1.0/rpcfileoper/DeleteFile';
                /** @type {?} */
                const delParam = {
                    relativePath: "VALIDATEPDFFILE/test.pdf",
                    su: this.su
                };
                this.http.post(delUrl, delParam, { params: { su: this.su } }).subscribe();
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.loadingParam.loadingService.clearAll();
            console.log(error);
        }));
    }
}
ValidateFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-validate-form',
                template: "<!-- <div>\r\n  <div>\r\n    <kendo-tabstrip (tabSelect)=\"OnTableSelect($event)\">\r\n      <kendo-tabstrip-tab *ngFor=\"let result of validateResult; let i = index\" [title]=\"result.componentName\" [selected]=\"i === 0?true: false\">\r\n        <ng-template kendoTabContent>\r\n          <kendo-grid [height]=\"350\" [data]=\"result.validatedInfoList\">\r\n            <kendo-grid-column field=\"order\" title=\"\u5E8F\u53F7\" [width]=\"40\"></kendo-grid-column>\r\n            <kendo-grid-column field=\"message\" title=\"\u6821\u9A8C\u7ED3\u679C\" [width]=\"100\"></kendo-grid-column>\r\n            <kendo-grid-column field=\"tableName\" title=\"\u5BF9\u8C61\u540D\u79F0\" [width]=\"80\"></kendo-grid-column>\r\n            <kendo-grid-column field=\"illegalDataLocation\" title=\"\u975E\u6CD5\u6570\u636E\u4F4D\u7F6E\" [width]=\"300\"></kendo-grid-column>\r\n          </kendo-grid>\r\n        </ng-template>\r\n      </kendo-tabstrip-tab>\r\n    </kendo-tabstrip>\r\n  </div>\r\n  <div>\r\n    <kendo-excelexport class=\"excelExport\" *ngFor=\"let result of validateResult; let i = index\" [data]=\"result.validatedInfoList\" fileName=\"\u6821\u9A8C\u7ED3\u679C.xlsx\">\r\n      <kendo-excelexport-column field=\"order\" title=\"\u5E8F\u53F7\" [width]=\"80\"></kendo-excelexport-column>\r\n      <kendo-excelexport-column field=\"message\" title=\"\u6821\u9A8C\u7ED3\u679C\" [width]=\"300\"></kendo-excelexport-column>\r\n      <kendo-excelexport-column field=\"tableName\" title=\"\u5BF9\u8C61\u540D\u79F0\" [width]=\"160\"></kendo-excelexport-column>\r\n      <kendo-excelexport-column field=\"illegalDataLocation\" title=\"\u975E\u6CD5\u6570\u636E\u4F4D\u7F6E\" [width]=\"160\"></kendo-excelexport-column>\r\n    </kendo-excelexport>\r\n  </div>\r\n  <ng-template #selectFooter>\r\n    <div class=\"btns\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-sm px-3\" (click)=\"Cancel()\">\u53D6\u6D88</button>\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-sm px-3\" (click)=\"Export()\">\u5BFC\u51FA</button>\r\n    </div>\r\n  </ng-template>\r\n</div> -->\r\n\r\n<!-- <kendo-grid [kendoGridBinding]=\"validatedInfoList\" [pageable]=\"true\" [pageSize]=\"20\" [height]=\"450\" [reorderable]=\"true\"\r\n  [resizable]=\"true\">\r\n  <ng-template kendoGridToolbarTemplate>\r\n    <button kendoGridPDFCommand icon=\"file-pdf\">{{export_pdf}}</button>\r\n  </ng-template>\r\n  <kendo-grid-column field=\"order\" [title]=\"order\" [width]=\"35\">\r\n  </kendo-grid-column>\r\n  <kendo-grid-column field=\"message\" [title]=\"validate_type\" [width]=\"60\">\r\n  </kendo-grid-column>\r\n  <kendo-grid-column field=\"tableName\" [title]=\"table_name\" [width]=\"60\">\r\n  </kendo-grid-column>\r\n  <kendo-grid-column field=\"illegalDataLocation\" [title]=\"illegal_data_location\" [width]=\"350\">\r\n  </kendo-grid-column>\r\n\r\n  <kendo-grid-pdf [fileName]=\"validate_result\" [allPages]=\"true\">\r\n    <kendo-grid-pdf-margin top=\"1cm\" left=\"1cm\" right=\"1cm\" bottom=\"1cm\"></kendo-grid-pdf-margin>\r\n  </kendo-grid-pdf>\r\n</kendo-grid> -->\r\n<!-- <div>\r\n    <kendo-excelexport class=\"excelExport\" *ngFor=\"let result of validateResult; let i = index\" [data]=\"result.validatedInfoList\"  fileName=\"ValidateResult.xlsx\">\r\n      <kendo-excelexport-column field=\"order\" title=\"\u5E8F\u53F7\" [width]=\"40\"></kendo-excelexport-column>\r\n      <kendo-excelexport-column field=\"message\" title=\"\u6821\u9A8C\u7C7B\u578B\" [width]=\"80\"></kendo-excelexport-column>\r\n      <kendo-excelexport-column field=\"tableName\" title=\"\u5BF9\u8C61\u540D\u79F0\" [width]=\"80\"></kendo-excelexport-column>\r\n      <kendo-excelexport-column field=\"illegalDataLocation\" title=\"\u975E\u6CD5\u6570\u636E\u4F4D\u7F6E\" [width]=\"350\"></kendo-excelexport-column>\r\n    </kendo-excelexport>\r\n  </div> -->\r\n<!-- <kendo-grid-excel fileName=\"ValidateResult.xlsx\"></kendo-grid-excel> -->\r\n<div class=\"d-flex flex-fill\" style=\"height: 100px;\">\r\n  <div style=\"\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 100px;\r\n    border: 6px solid cornflowerblue;\r\n    margin-left: 80px;\r\n    margin-top: 10px;\r\n    font-size: 30px;\r\n    color: inherit;\r\n\">{{validatedInfoList.length}}\r\n  </div>\r\n  <div style=\"margin-top: 40px;margin-left: 30px;\">{{showInfo}}</div>\r\n</div>\r\n<div class=\"d-flex flex-fill\" style=\"height: 350px;\">\r\n  <farris-datagrid #ValidateInfoGrid id=\"validate-info-grid\" [idField]=\"'id'\" [fit]=\"true\" [fitColumns]=\"true\"\r\n                   [columns]=\"ValidateInfoColumns\" [showLineNumber]=\"true\" [pagination]=\"false\" [showBorder]=\"true\"\r\n                   [striped]=\"true\" [sizeType]=\"'sm'\" [data]=\"validatedInfoList\">\r\n  </farris-datagrid>\r\n  <ng-template #headerTemplate let-ctx>\r\n    <farris-checkboxgroup [(ngModel)]=\"checkBoxValue1\" [disable]=\"checkBoxValue1.length != 0\" [horizontal]=\"true\" [data]=\"checkboxData1\"\r\n                          (changeValue)=\"checkBoxChange1()\">\r\n    </farris-checkboxgroup>\r\n    <farris-checkboxgroup [(ngModel)]=\"checkBoxValue2\" [disable]=\"checkBoxValue2.length != 0\" [horizontal]=\"true\" [data]=\"checkboxData2\"\r\n                          (changeValue)=\"checkBoxChange2()\">\r\n    </farris-checkboxgroup>\r\n  </ng-template>\r\n  <ng-template #columnOperation let-ctx>\r\n    <farris-radiogroup  [(ngModel)]=\"validatedInfoList[ctx.rowIndex].dataValidateStrategy\" [horizontal]=\"true\" [data]=\"radioData\"\r\n                       (changeValue)=\"radioChange(ctx)\">\r\n    </farris-radiogroup>\r\n  </ng-template>\r\n</div>\r\n\r\n<ng-template #selectFooter>\r\n  <button type=\"button\" class=\"btn btn-outline-secondary \" (click)=\"exportPdf()\">{{export_validate_result}}</button>\r\n  <button *ngIf=\"validateInfoAllWarning\" type=\"button\" class=\"btn btn-outline-secondary \" (click)=\"continueHandler()\">{{continue}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary \" (click)=\"cancelHandler()\">{{cancel}}</button>\r\n</ng-template>\r\n",
                styles: [".barmanager{position:absolute;bottom:0;height:30px;right:30px;padding-left:50px}@font-face{font-family:\"DejaVu Sans\";src:url(/platform/common/web/@gsp-dip/fonts/microsoft-yahei.ttf) format(\"truetype\")}.k-grid{font-family:\"DejaVu Sans\",Arial,sans-serif}"]
            }] }
];
/** @nocollapse */
ValidateFormComponent.ctorParameters = () => [
    { type: HttpClient }
];
ValidateFormComponent.propDecorators = {
    ValidateInfoGrid: [{ type: ViewChild, args: ['ValidateInfoGrid',] }],
    modalFooter: [{ type: ViewChild, args: ['selectFooter',] }],
    columnOperation: [{ type: ViewChild, args: ['columnOperation',] }],
    headerTemplate: [{ type: ViewChild, args: ['headerTemplate',] }],
    closeModal: [{ type: Output }],
    okModal: [{ type: Output }],
    validateResult: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ValidateFormComponent.prototype.ValidateInfoGrid;
    /** @type {?} */
    ValidateFormComponent.prototype.modalFooter;
    /** @type {?} */
    ValidateFormComponent.prototype.columnOperation;
    /** @type {?} */
    ValidateFormComponent.prototype.headerTemplate;
    /** @type {?} */
    ValidateFormComponent.prototype.closeModal;
    /** @type {?} */
    ValidateFormComponent.prototype.okModal;
    /** @type {?} */
    ValidateFormComponent.prototype.validateResult;
    /** @type {?} */
    ValidateFormComponent.prototype.su;
    /** @type {?} */
    ValidateFormComponent.prototype.loadingParam;
    /** @type {?} */
    ValidateFormComponent.prototype.order;
    /** @type {?} */
    ValidateFormComponent.prototype.validate_type;
    /** @type {?} */
    ValidateFormComponent.prototype.table_name;
    /** @type {?} */
    ValidateFormComponent.prototype.illegal_data_location;
    /** @type {?} */
    ValidateFormComponent.prototype.validate_result;
    /** @type {?} */
    ValidateFormComponent.prototype.export_validate_result;
    /** @type {?} */
    ValidateFormComponent.prototype.continue;
    /** @type {?} */
    ValidateFormComponent.prototype.cancel;
    /** @type {?} */
    ValidateFormComponent.prototype.i18nResource;
    /** @type {?} */
    ValidateFormComponent.prototype.validateInfoAllWarning;
    /** @type {?} */
    ValidateFormComponent.prototype.onlyOneObject;
    /** @type {?} */
    ValidateFormComponent.prototype.customShowInfo;
    /** @type {?} */
    ValidateFormComponent.prototype.showInfo;
    /** @type {?} */
    ValidateFormComponent.prototype.ValidateInfoColumns;
    /** @type {?} */
    ValidateFormComponent.prototype.radioData;
    /** @type {?} */
    ValidateFormComponent.prototype.checkboxData1;
    /** @type {?} */
    ValidateFormComponent.prototype.checkboxData2;
    /** @type {?} */
    ValidateFormComponent.prototype.checkBoxValue1;
    /** @type {?} */
    ValidateFormComponent.prototype.checkBoxValue2;
    /** @type {?} */
    ValidateFormComponent.prototype.validatedInfoList;
    /**
     * @type {?}
     * @private
     */
    ValidateFormComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,