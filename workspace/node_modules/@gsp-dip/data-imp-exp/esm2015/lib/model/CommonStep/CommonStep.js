/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { IEStepType } from '../IEStepType';
import { Guid } from '../utils/Guid';
/**
 * 公共步骤实体
 */
export class CommonStep {
    constructor() {
        /**
         * 内码
         */
        this.StepID = Guid.newGuid();
        /**
         *  步骤执行顺序
         */
        this.StortOrder = 1;
        /**
         * 步骤类型
         */
        this.StepType = IEStepType.Default;
        /**
         * 源模型Id
         */
        this.SrcModelId = '';
        /**
         * 目标模型Id
         */
        this.TarModelId = '';
        /**
         *  步骤名称
         */
        this.StepName = '';
        /**
         *  是否用户自定义
         */
        this.Custom = false;
        /**
         *  用户自定义构件标识
         */
        this.CustomComponent = '';
        /**
         *  步骤前事件列表
         */
        this.DoBefore = new Array();
        /**
         *  步骤后事件列表
         */
        this.DoAfter = new Array();
    }
    /**
     * copy
     * @param {?} step
     * @return {?}
     */
    static copy(step) {
        /** @type {?} */
        const commonStep = new CommonStep();
        commonStep.StepID = step.StepID;
        commonStep.StortOrder = step.StortOrder;
        commonStep.StepType = step.StepType;
        commonStep.SrcModelId = step.SrcModelId;
        commonStep.TarModelId = step.TarModelId;
        commonStep.StepName = step.StepName;
        commonStep.Custom = step.Custom;
        commonStep.CustomComponent = step.CustomComponent;
        commonStep.DoBefore = new Array();
        for (const beforeCom of step.DoBefore) {
            commonStep.DoBefore.push(beforeCom);
        }
        commonStep.DoAfter = new Array();
        for (const afterCom of step.DoAfter) {
            commonStep.DoAfter.push(afterCom);
        }
        return commonStep;
    }
}
if (false) {
    /**
     * 内码
     * @type {?}
     */
    CommonStep.prototype.StepID;
    /**
     *  步骤执行顺序
     * @type {?}
     */
    CommonStep.prototype.StortOrder;
    /**
     * 步骤类型
     * @type {?}
     */
    CommonStep.prototype.StepType;
    /**
     * 源模型Id
     * @type {?}
     */
    CommonStep.prototype.SrcModelId;
    /**
     * 目标模型Id
     * @type {?}
     */
    CommonStep.prototype.TarModelId;
    /**
     *  步骤名称
     * @type {?}
     */
    CommonStep.prototype.StepName;
    /**
     *  是否用户自定义
     * @type {?}
     */
    CommonStep.prototype.Custom;
    /**
     *  用户自定义构件标识
     * @type {?}
     */
    CommonStep.prototype.CustomComponent;
    /**
     *  步骤前事件列表
     * @type {?}
     */
    CommonStep.prototype.DoBefore;
    /**
     *  步骤后事件列表
     * @type {?}
     */
    CommonStep.prototype.DoAfter;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tbW9uU3RlcC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtZGlwL2RhdGEtaW1wLWV4cC8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9Db21tb25TdGVwL0NvbW1vblN0ZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUlyQyxNQUFNLE9BQU8sVUFBVTtJQUF2Qjs7OztRQUlXLFdBQU0sR0FBVyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7Ozs7UUFJaEMsZUFBVSxHQUFXLENBQUMsQ0FBQzs7OztRQUl2QixhQUFRLEdBQWUsVUFBVSxDQUFDLE9BQU8sQ0FBQzs7OztRQUkxQyxlQUFVLEdBQVcsRUFBRSxDQUFDOzs7O1FBSXhCLGVBQVUsR0FBVyxFQUFFLENBQUM7Ozs7UUFJeEIsYUFBUSxHQUFXLEVBQUUsQ0FBQzs7OztRQUl0QixXQUFNLEdBQVksS0FBSyxDQUFDOzs7O1FBSXhCLG9CQUFlLEdBQVcsRUFBRSxDQUFDOzs7O1FBSTdCLGFBQVEsR0FBdUIsSUFBSSxLQUFLLEVBQW9CLENBQUM7Ozs7UUFJN0QsWUFBTyxHQUF1QixJQUFJLEtBQUssRUFBb0IsQ0FBQztJQXdCdkUsQ0FBQzs7Ozs7O0lBcEJVLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBZ0I7O2NBQ3pCLFVBQVUsR0FBRyxJQUFJLFVBQVUsRUFBRTtRQUNuQyxVQUFVLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDaEMsVUFBVSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3hDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNwQyxVQUFVLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDeEMsVUFBVSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3hDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNwQyxVQUFVLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDaEMsVUFBVSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBQ2xELFVBQVUsQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLEVBQW9CLENBQUM7UUFDcEQsS0FBSyxNQUFNLFNBQVMsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ25DLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ3ZDO1FBQ0QsVUFBVSxDQUFDLE9BQU8sR0FBRyxJQUFJLEtBQUssRUFBb0IsQ0FBQztRQUNuRCxLQUFLLE1BQU0sUUFBUSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDakMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDckM7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUN0QixDQUFDO0NBQ0o7Ozs7OztJQTVERyw0QkFBdUM7Ozs7O0lBSXZDLGdDQUE4Qjs7Ozs7SUFJOUIsOEJBQWlEOzs7OztJQUlqRCxnQ0FBK0I7Ozs7O0lBSS9CLGdDQUErQjs7Ozs7SUFJL0IsOEJBQTZCOzs7OztJQUk3Qiw0QkFBK0I7Ozs7O0lBSS9CLHFDQUFvQzs7Ozs7SUFJcEMsOEJBQW9FOzs7OztJQUlwRSw2QkFBbUUiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHsgU2VydmljZUNvbXBvbmVudCB9IGZyb20gJy4vU2VydmljZUNvbXBvbmVudCc7XHJcbmltcG9ydCB7IElFU3RlcFR5cGUgfSBmcm9tICcuLi9JRVN0ZXBUeXBlJztcclxuaW1wb3J0IHsgR3VpZCB9IGZyb20gJy4uL3V0aWxzL0d1aWQnO1xyXG4vKipcclxuICog5YWs5YWx5q2l6aqk5a6e5L2TXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ29tbW9uU3RlcCB7XHJcbiAgICAvKipcclxuICAgICAqIOWGheeggVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgU3RlcElEOiBTdHJpbmcgPSBHdWlkLm5ld0d1aWQoKTtcclxuICAgIC8qKlxyXG4gICAgICogIOatpemqpOaJp+ihjOmhuuW6j1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgU3RvcnRPcmRlcjogTnVtYmVyID0gMTtcclxuICAgIC8qKlxyXG4gICAgICog5q2l6aqk57G75Z6LXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBTdGVwVHlwZTogSUVTdGVwVHlwZSA9IElFU3RlcFR5cGUuRGVmYXVsdDtcclxuICAgIC8qKlxyXG4gICAgICog5rqQ5qih5Z6LSWRcclxuICAgICAqL1xyXG4gICAgcHVibGljIFNyY01vZGVsSWQ6IFN0cmluZyA9ICcnO1xyXG4gICAgLyoqXHJcbiAgICAgKiDnm67moIfmqKHlnotJZFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgVGFyTW9kZWxJZDogU3RyaW5nID0gJyc7XHJcbiAgICAvKipcclxuICAgICAqICDmraXpqqTlkI3np7BcclxuICAgICAqL1xyXG4gICAgcHVibGljIFN0ZXBOYW1lOiBTdHJpbmcgPSAnJztcclxuICAgIC8qKlxyXG4gICAgICogIOaYr+WQpueUqOaIt+iHquWumuS5iVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgQ3VzdG9tOiBCb29sZWFuID0gZmFsc2U7XHJcbiAgICAvKipcclxuICAgICAqICDnlKjmiLfoh6rlrprkuYnmnoTku7bmoIfor4ZcclxuICAgICAqL1xyXG4gICAgcHVibGljIEN1c3RvbUNvbXBvbmVudDogU3RyaW5nID0gJyc7XHJcbiAgICAvKipcclxuICAgICAqICDmraXpqqTliY3kuovku7bliJfooahcclxuICAgICAqL1xyXG4gICAgcHVibGljIERvQmVmb3JlOiBTZXJ2aWNlQ29tcG9uZW50W10gPSBuZXcgQXJyYXk8U2VydmljZUNvbXBvbmVudD4oKTtcclxuICAgIC8qKlxyXG4gICAgICogIOatpemqpOWQjuS6i+S7tuWIl+ihqFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgRG9BZnRlcjogU2VydmljZUNvbXBvbmVudFtdID0gbmV3IEFycmF5PFNlcnZpY2VDb21wb25lbnQ+KCk7XHJcbiAgICAvKipcclxuICAgICAqIGNvcHlcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBjb3B5KHN0ZXA6IENvbW1vblN0ZXApOiBDb21tb25TdGVwIHtcclxuICAgICAgICBjb25zdCBjb21tb25TdGVwID0gbmV3IENvbW1vblN0ZXAoKTtcclxuICAgICAgICBjb21tb25TdGVwLlN0ZXBJRCA9IHN0ZXAuU3RlcElEO1xyXG4gICAgICAgIGNvbW1vblN0ZXAuU3RvcnRPcmRlciA9IHN0ZXAuU3RvcnRPcmRlcjtcclxuICAgICAgICBjb21tb25TdGVwLlN0ZXBUeXBlID0gc3RlcC5TdGVwVHlwZTtcclxuICAgICAgICBjb21tb25TdGVwLlNyY01vZGVsSWQgPSBzdGVwLlNyY01vZGVsSWQ7XHJcbiAgICAgICAgY29tbW9uU3RlcC5UYXJNb2RlbElkID0gc3RlcC5UYXJNb2RlbElkO1xyXG4gICAgICAgIGNvbW1vblN0ZXAuU3RlcE5hbWUgPSBzdGVwLlN0ZXBOYW1lO1xyXG4gICAgICAgIGNvbW1vblN0ZXAuQ3VzdG9tID0gc3RlcC5DdXN0b207XHJcbiAgICAgICAgY29tbW9uU3RlcC5DdXN0b21Db21wb25lbnQgPSBzdGVwLkN1c3RvbUNvbXBvbmVudDtcclxuICAgICAgICBjb21tb25TdGVwLkRvQmVmb3JlID0gbmV3IEFycmF5PFNlcnZpY2VDb21wb25lbnQ+KCk7XHJcbiAgICAgICAgZm9yIChjb25zdCBiZWZvcmVDb20gb2Ygc3RlcC5Eb0JlZm9yZSkge1xyXG4gICAgICAgICAgICBjb21tb25TdGVwLkRvQmVmb3JlLnB1c2goYmVmb3JlQ29tKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29tbW9uU3RlcC5Eb0FmdGVyID0gbmV3IEFycmF5PFNlcnZpY2VDb21wb25lbnQ+KCk7XHJcbiAgICAgICAgZm9yIChjb25zdCBhZnRlckNvbSBvZiBzdGVwLkRvQWZ0ZXIpIHtcclxuICAgICAgICAgICAgY29tbW9uU3RlcC5Eb0FmdGVyLnB1c2goYWZ0ZXJDb20pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY29tbW9uU3RlcDtcclxuICAgIH1cclxufVxyXG4iXX0=