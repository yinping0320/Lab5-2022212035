/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ComponentFactoryResolver, Injector } from '@angular/core';
import { Subject } from "rxjs";
import { BsModalService } from "@farris/ui-modal";
import { RuleIdHelpComponent } from "../rule-id-help/rule-id-help.component";
export class DataieRuleHelpComponent {
    /**
     * @param {?} injector
     * @param {?} modalService
     * @param {?} resolver
     */
    constructor(injector, modalService, resolver) {
        this.injector = injector;
        this.modalService = modalService;
        this.resolver = resolver;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * 打开导入导出规则id选择帮助
     * @param {?} ruleType 规则类型，导入为0，导出为1
     * @param {?} voId
     * @param {?} beId
     * @return {?}
     */
    showRuleIdHelp(ruleType, voId, beId) {
        /** @type {?} */
        const subject = new Subject();
        /** @type {?} */
        const compFactory = this.resolver.resolveComponentFactory(RuleIdHelpComponent);
        /** @type {?} */
        const compRef = compFactory.create(this.injector);
        compRef.instance.beId = beId;
        compRef.instance.ruleType = ruleType;
        compRef.instance.voId = voId;
        /** @type {?} */
        const modalConfig = {
            title: '规则选择',
            width: 920,
            height: 500,
            buttons: compRef.instance.modalFooter,
            showHeader: true,
            showMaxButton: false,
            showButtons: true
        };
        /** @type {?} */
        const dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModal.subscribe((/**
         * @param {?} ruleId
         * @return {?}
         */
        ruleId => {
            console.log(ruleId);
            dialog.close();
            subject.next(ruleId);
        }));
        return subject;
    }
}
DataieRuleHelpComponent.decorators = [
    { type: Component, args: [{
                selector: 'dataie-rule-help',
                template: "\n",
                styles: [""]
            }] }
];
/** @nocollapse */
DataieRuleHelpComponent.ctorParameters = () => [
    { type: Injector },
    { type: BsModalService },
    { type: ComponentFactoryResolver }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    DataieRuleHelpComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    DataieRuleHelpComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    DataieRuleHelpComponent.prototype.resolver;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWllLXJ1bGUtaGVscC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWRpcC9kYXRhLWltcC1leHAvIiwic291cmNlcyI6WyJsaWIvZGVzaWduLXRpbWUvZGF0YWllLXJ1bGUtaGVscC9kYXRhaWUtcnVsZS1oZWxwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSx3QkFBd0IsRUFBRSxRQUFRLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDcEYsT0FBTyxFQUFhLE9BQU8sRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUN6QyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sd0NBQXdDLENBQUM7QUFPM0UsTUFBTSxPQUFPLHVCQUF1Qjs7Ozs7O0lBRWxDLFlBQ1UsUUFBa0IsRUFDbEIsWUFBNEIsRUFDNUIsUUFBa0M7UUFGbEMsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixpQkFBWSxHQUFaLFlBQVksQ0FBZ0I7UUFDNUIsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7SUFDeEMsQ0FBQzs7OztJQUVMLFFBQVE7SUFDUixDQUFDOzs7Ozs7OztJQVFNLGNBQWMsQ0FBQyxRQUFlLEVBQUMsSUFBVyxFQUFDLElBQVc7O2NBQ3JELE9BQU8sR0FBRyxJQUFJLE9BQU8sRUFBTzs7Y0FDNUIsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsbUJBQW1CLENBQUM7O2NBQ3hFLE9BQU8sR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDakQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQzdCLE9BQU8sQ0FBQyxRQUFRLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUNyQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7O2NBQ3ZCLFdBQVcsR0FBRztZQUNsQixLQUFLLEVBQUUsTUFBTTtZQUNiLEtBQUssRUFBRSxHQUFHO1lBQ1YsTUFBTSxFQUFFLEdBQUc7WUFDWCxPQUFPLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxXQUFXO1lBQ3JDLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLGFBQWEsRUFBRSxLQUFLO1lBQ3BCLFdBQVcsRUFBRSxJQUFJO1NBQ2xCOztjQUNLLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDO1FBQzNELE9BQU8sQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFNBQVM7Ozs7UUFBQyxNQUFNLENBQUMsRUFBRTtZQUM3QyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BCLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNmLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkIsQ0FBQyxFQUFDLENBQUM7UUFDSCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDOzs7WUE3Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLGNBQWdEOzthQUVqRDs7OztZQVQ0QyxRQUFRO1lBRTdDLGNBQWM7WUFGSCx3QkFBd0I7Ozs7Ozs7SUFhdkMsMkNBQTBCOzs7OztJQUMxQiwrQ0FBb0M7Ozs7O0lBQ3BDLDJDQUEwQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEluamVjdG9yLCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBTdWJqZWN0fSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHtCc01vZGFsU2VydmljZX0gZnJvbSBcIkBmYXJyaXMvdWktbW9kYWxcIjtcbmltcG9ydCB7UnVsZUlkSGVscENvbXBvbmVudH0gZnJvbSBcIi4uL3J1bGUtaWQtaGVscC9ydWxlLWlkLWhlbHAuY29tcG9uZW50XCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2RhdGFpZS1ydWxlLWhlbHAnLFxuICB0ZW1wbGF0ZVVybDogJy4vZGF0YWllLXJ1bGUtaGVscC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2RhdGFpZS1ydWxlLWhlbHAuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIERhdGFpZVJ1bGVIZWxwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyXG4gICkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICAvKipcbiAgICog5omT5byA5a+85YWl5a+85Ye66KeE5YiZaWTpgInmi6nluK7liqlcbiAgICogQHBhcmFtIHJ1bGVUeXBlIOinhOWImeexu+Wei++8jOWvvOWFpeS4ujDvvIzlr7zlh7rkuLoxXG4gICAqIEBwYXJhbSB2b0lkXG4gICAqIEBwYXJhbSBiZUlkXG4gICAqL1xuICBwdWJsaWMgc2hvd1J1bGVJZEhlbHAocnVsZVR5cGU6bnVtYmVyLHZvSWQ6c3RyaW5nLGJlSWQ6c3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+e1xuICAgIGNvbnN0IHN1YmplY3QgPSBuZXcgU3ViamVjdDxhbnk+KCk7XG4gICAgY29uc3QgY29tcEZhY3RvcnkgPSB0aGlzLnJlc29sdmVyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KFJ1bGVJZEhlbHBDb21wb25lbnQpO1xuICAgIGNvbnN0IGNvbXBSZWYgPSBjb21wRmFjdG9yeS5jcmVhdGUodGhpcy5pbmplY3Rvcik7XG4gICAgY29tcFJlZi5pbnN0YW5jZS5iZUlkID0gYmVJZDtcbiAgICBjb21wUmVmLmluc3RhbmNlLnJ1bGVUeXBlID0gcnVsZVR5cGU7XG4gICAgY29tcFJlZi5pbnN0YW5jZS52b0lkID0gdm9JZDtcbiAgICBjb25zdCBtb2RhbENvbmZpZyA9IHtcbiAgICAgIHRpdGxlOiAn6KeE5YiZ6YCJ5oupJyxcbiAgICAgIHdpZHRoOiA5MjAsXG4gICAgICBoZWlnaHQ6IDUwMCxcbiAgICAgIGJ1dHRvbnM6IGNvbXBSZWYuaW5zdGFuY2UubW9kYWxGb290ZXIsXG4gICAgICBzaG93SGVhZGVyOiB0cnVlLFxuICAgICAgc2hvd01heEJ1dHRvbjogZmFsc2UsXG4gICAgICBzaG93QnV0dG9uczogdHJ1ZVxuICAgIH07XG4gICAgY29uc3QgZGlhbG9nID0gdGhpcy5tb2RhbFNlcnZpY2Uuc2hvdyhjb21wUmVmLCBtb2RhbENvbmZpZyk7XG4gICAgY29tcFJlZi5pbnN0YW5jZS5jbG9zZU1vZGFsLnN1YnNjcmliZShydWxlSWQgPT4ge1xuICAgICAgY29uc29sZS5sb2cocnVsZUlkKTtcbiAgICAgIGRpYWxvZy5jbG9zZSgpO1xuICAgICAgc3ViamVjdC5uZXh0KHJ1bGVJZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHN1YmplY3Q7XG4gIH1cblxufVxuIl19