/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { DatagridComponent } from "@farris/ui-datagrid";
import { NotifyService } from "@farris/ui-notify";
import { LoadingService } from "@farris/ui-loading";
import { HttpClient } from "@angular/common/http";
import { RuleFileType } from "../../rule-select/RuleFileType";
export class RuleIdHelpComponent {
    /**
     * @param {?} notify
     * @param {?} http
     * @param {?} loadingService
     */
    constructor(notify, http, loadingService) {
        this.notify = notify;
        this.http = http;
        this.loadingService = loadingService;
        this.closeModal = new EventEmitter();
        this.afterHelpConfirm = new EventEmitter();
        this.fileTypes = [
            { label: 'Office Excel97-2003(*.xls)', value: RuleFileType[0] },
            { label: 'Office Excel Macro(*.xlsm)', value: RuleFileType[1] },
            { label: 'Office Excel(*.xlsx)', value: RuleFileType[2] },
            { label: 'WPS Table(*.et)', value: RuleFileType[3] },
            { label: 'WPS Table(Template File)(*.ett)', value: RuleFileType[4] },
            { label: 'XML Table(*.xml)', value: RuleFileType[5] },
            { label: 'PDF File(*.pdf)', value: RuleFileType[6] },
            { label: 'CSV File(*.csv)', value: RuleFileType[7] }
        ];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.RuleIdHelpColumn = [
            { field: 'code', width: 180, title: '编号', halign: 'center', align: 'center', sortable: true },
            { field: 'name', width: 180, title: '名称', halign: 'center', align: 'center', sortable: true },
            // { field: 'bizEntityName', width: 150, title: '数据实体', halign: 'center', align: 'center', sortable: true },
            {
                field: 'fileType', width: 180, title: '文件类型', halign: 'center', align: 'center', sortable: true,
                formatter: { type: 'enum', options: { valueField: 'value', textField: 'label', data: this.fileTypes } }
            },
            { field: 'lastModifiedTime', width: 150, title: '最后修改时间', halign: 'center', align: 'center', sortable: true }
            // { field: 'creator', width: 150, title: this.ruleselect_creator, halign: 'center', align: 'center', sortable: true }
        ];
        this.loadingService.show();
        /** @type {?} */
        const url = "/api/runtime/dip/v1.0/dataIeRuleManage/getImpExpHelpRules";
        /** @type {?} */
        const requestBody = {
            "ruleType": this.ruleType,
            //导入为0，导出为1
            "beId": this.beId,
            "voId": this.voId
        };
        this.http.post(url, requestBody).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            this.loadingService.clearAll();
            this.RuleIdHelpData = res;
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.loadingService.clearAll();
            this.notify.error(error.error.Message);
            console.log(error.error.Message);
        }));
    }
    /**
     * @return {?}
     */
    okHandler() {
        /** @type {?} */
        const selectedRow = this.RuleIdHelpGrid.selectedRow;
        if (selectedRow === null) {
            this.notify.info('请选择一条规则');
            return;
        }
        this.ruleId = selectedRow.data.id;
        this.closeModal.emit(this.ruleId);
    }
    /**
     * @return {?}
     */
    cancelHandler() {
        this.closeModal.emit();
    }
}
RuleIdHelpComponent.decorators = [
    { type: Component, args: [{
                selector: 'rule-id-help',
                template: "\n  <div class=\"d-flex flex-fill\" style=\"height:100%;\">\n    <farris-datagrid #RuleIdHelpGrid id=\"rule-mgrs-data\" [fit]=\"true\" [fitColumns]=\"true\" [columns]=\"RuleIdHelpColumn\"\n                     [pagination]=\"false\"\n                     [showLineNumber]=\"true\" [keepSelect]=\"true\" [sizeType]=\"'sm'\" [data]=\"RuleIdHelpData\">\n    </farris-datagrid>\n  </div>\n\n  <ng-template #selectFooter>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancelHandler()\">\u53D6\u6D88</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"okHandler()\">\u786E\u5B9A</button>\n  </ng-template>\n\n\n",
                styles: [""]
            }] }
];
/** @nocollapse */
RuleIdHelpComponent.ctorParameters = () => [
    { type: NotifyService },
    { type: HttpClient },
    { type: LoadingService }
];
RuleIdHelpComponent.propDecorators = {
    modalFooter: [{ type: ViewChild, args: ['selectFooter',] }],
    RuleIdHelpGrid: [{ type: ViewChild, args: ['RuleIdHelpGrid',] }],
    ruleId: [{ type: Output }],
    closeModal: [{ type: Output }],
    afterHelpConfirm: [{ type: Output }],
    ruleType: [{ type: Input }],
    beId: [{ type: Input }],
    voId: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RuleIdHelpComponent.prototype.modalFooter;
    /** @type {?} */
    RuleIdHelpComponent.prototype.RuleIdHelpGrid;
    /** @type {?} */
    RuleIdHelpComponent.prototype.RuleIdHelpColumn;
    /** @type {?} */
    RuleIdHelpComponent.prototype.RuleIdHelpData;
    /** @type {?} */
    RuleIdHelpComponent.prototype.ruleId;
    /** @type {?} */
    RuleIdHelpComponent.prototype.closeModal;
    /** @type {?} */
    RuleIdHelpComponent.prototype.afterHelpConfirm;
    /** @type {?} */
    RuleIdHelpComponent.prototype.ruleType;
    /** @type {?} */
    RuleIdHelpComponent.prototype.beId;
    /** @type {?} */
    RuleIdHelpComponent.prototype.voId;
    /** @type {?} */
    RuleIdHelpComponent.prototype.fileTypes;
    /**
     * @type {?}
     * @private
     */
    RuleIdHelpComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    RuleIdHelpComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    RuleIdHelpComponent.prototype.loadingService;
}
//# sourceMappingURL=data:application/json;base64,