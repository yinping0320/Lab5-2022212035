/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, EventEmitter } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { DataIEUtils } from '../Utils/DataIEUtils';
export class FileOperateService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
        this.origin = window.location.origin;
        this.fileUrl = this.origin + '/api/runtime/rtcommon/v1.0/fileoper';
        this.downloadComplete = new EventEmitter();
        DataIEUtils.getTranslateValue(http).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            this.file_download_fail = res['file_download_fail'];
        }));
    }
    // 下载文件
    /**
     * @param {?} relativePath
     * @param {?} fileName
     * @param {?} preurl
     * @param {?} option
     * @param {?=} needDelete
     * @return {?}
     */
    DownloadFile(relativePath, fileName, preurl, option, needDelete = true) {
        /** @type {?} */
        let tempUrl = '';
        if (preurl === '') {
            tempUrl = this.fileUrl;
        }
        else {
            tempUrl = `${preurl}/fileoper`;
        }
        /** @type {?} */
        const app = DataIEUtils.getApp(tempUrl);
        /** @type {?} */
        let su = DataIEUtils.getSu(tempUrl);
        if (option !== null && option['su'] !== null && option['su'] !== undefined) {
            su = option['su'];
        }
        /** @type {?} */
        const fileParam = {
            relativePath: relativePath,
            app: app,
            su: su
        };
        /** @type {?} */
        const fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(`${fixedUrl}/DownloadFile`, fileParam, {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            responseType: 'blob',
            observe: 'response',
            params: { su: su }
        }).subscribe((/**
         * @param {?} filedata
         * @return {?}
         */
        filedata => {
            if (!filedata || filedata.body.size == 0) {
                this.downloadComplete.emit(this.file_download_fail);
            }
            else {
                //const blob = new Blob([filedata.body], {type: 'application/vnd.ms-excel'});
                /** @type {?} */
                const blob = new Blob([filedata.body]);
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(blob, fileName);
                }
                else {
                    /** @type {?} */
                    const link = document.createElement('a');
                    link.setAttribute('href', window.URL.createObjectURL(blob));
                    // 设置下载的文件名
                    link.setAttribute('download', fileName);
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                this.downloadComplete.emit('');
                if (needDelete) {
                    this.DeleteFile(relativePath, preurl, su);
                }
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.downloadComplete.error(error);
        }));
        // 添加error异常处理
    }
    // 打包文件下载文件
    /**
     * @param {?} relativePaths
     * @param {?} itemsFileName
     * @param {?} packageName
     * @param {?} preurl
     * @param {?} packtype
     * @param {?=} needDelete
     * @return {?}
     */
    DownloadPackageFile(relativePaths, itemsFileName, packageName, preurl, packtype, needDelete = true) {
        /** @type {?} */
        let tempUrl = '';
        if (preurl === '') {
            tempUrl = this.fileUrl;
        }
        else {
            tempUrl = `${preurl}/fileoper`;
        }
        /** @type {?} */
        const app = DataIEUtils.getApp(tempUrl);
        /** @type {?} */
        const su = DataIEUtils.getSu(tempUrl);
        /** @type {?} */
        const fileParam = {
            relativePaths: relativePaths,
            itemsFileName: itemsFileName,
            packType: packtype,
            packageName: packageName,
            su: su
        };
        /** @type {?} */
        const fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(`${fixedUrl}/DownloadPackageFile`, fileParam, {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            responseType: 'blob',
            observe: 'response',
            params: { su: su }
        }).subscribe((/**
         * @param {?} filedata
         * @return {?}
         */
        filedata => {
            if (!filedata || filedata.body.size == 0) {
                this.downloadComplete.emit(this.file_download_fail);
            }
            else {
                /** @type {?} */
                const blob = new Blob([filedata.body]);
                // 设置下载的文件名
                /** @type {?} */
                const downloadFileName = packageName + '.' + packtype;
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(blob, downloadFileName);
                }
                else {
                    /** @type {?} */
                    const link = document.createElement('a');
                    link.setAttribute('href', window.URL.createObjectURL(blob));
                    link.setAttribute('download', downloadFileName);
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                this.downloadComplete.emit('');
                if (needDelete) {
                    this.DeleteFile(downloadFileName, preurl);
                }
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.downloadComplete.error(error);
        }));
        // 添加error异常处理
    }
    /**
     * 手工表单下载
     * @param {?} relativePath
     * @param {?} fileName
     * @param {?} su
     * @param {?=} needDelete
     * @return {?}
     */
    DownloadFile4HandCraft(relativePath, fileName, su, needDelete = true) {
        /** @type {?} */
        const fileParam = {
            relativePath: relativePath,
            app: '',
            su: su
        };
        /** @type {?} */
        const fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(`${fixedUrl}/DownloadFile`, fileParam, {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            responseType: 'blob',
            observe: 'response',
            params: { su: su }
        }).subscribe((/**
         * @param {?} filedata
         * @return {?}
         */
        filedata => {
            if (!filedata || filedata.body.size == 0) {
                this.downloadComplete.emit(this.file_download_fail);
            }
            else {
                /** @type {?} */
                const blob = new Blob([filedata.body]);
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(blob, fileName);
                }
                else {
                    /** @type {?} */
                    const link = document.createElement('a');
                    link.setAttribute('href', window.URL.createObjectURL(blob));
                    // 设置下载的文件名
                    link.setAttribute('download', fileName);
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                this.downloadComplete.emit('');
                if (needDelete) {
                    this.DeleteFile4HandCraft(relativePath, su);
                }
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.downloadComplete.error(error);
        }));
        // 添加error异常处理
    }
    // 删除文件
    /**
     * @param {?} relativePath
     * @param {?} preurl
     * @param {?=} customSu
     * @return {?}
     */
    DeleteFile(relativePath, preurl, customSu = '') {
        /** @type {?} */
        let tempUrl = '';
        if (preurl === '') {
            tempUrl = this.fileUrl;
        }
        else {
            tempUrl = `${preurl}/fileoper`;
        }
        /** @type {?} */
        let su = '';
        if (customSu !== '') {
            su = customSu;
        }
        else {
            su = DataIEUtils.getSu(tempUrl);
        }
        /** @type {?} */
        const delParam = {
            relativePath: relativePath,
            su: su
        };
        /** @type {?} */
        const fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(`${fixedUrl}/DeleteFile`, delParam, {
            params: { su: su }
        }).subscribe();
    }
    /**
     * @param {?} relativePath
     * @param {?} su
     * @return {?}
     */
    DeleteFile4HandCraft(relativePath, su) {
        /** @type {?} */
        const delParam = {
            relativePath: relativePath,
            su: su
        };
        /** @type {?} */
        const fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(`${fixedUrl}/DeleteFile`, delParam, {
            params: { su: su }
        }).subscribe();
    }
}
FileOperateService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
FileOperateService.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.origin;
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.fileUrl;
    /** @type {?} */
    FileOperateService.prototype.downloadComplete;
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.file_download_fail;
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,