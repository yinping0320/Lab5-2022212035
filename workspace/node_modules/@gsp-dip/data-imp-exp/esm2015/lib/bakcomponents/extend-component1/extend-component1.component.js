/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Output, TemplateRef, ViewChild } from '@angular/core';
import { HttpClient } from "@angular/common/http";
import { NotifyService } from "@farris/ui-notify";
import { DataIEUtils, isNullOrEmpty, isNullOrBlank } from "../../service/Utils/DataIEUtils";
import { DatagridComponent } from "@farris/ui-datagrid";
/**
 * 预留扩展组件1
 * 此组件目前被用于作为规则选择扩展模板配置界面
 */
export class ExtendComponent1Component {
    /**
     * @param {?} http
     * @param {?} notify
     */
    constructor(http, notify) {
        this.http = http;
        this.notify = notify;
        this.closeModal = new EventEmitter();
        this.okModal = new EventEmitter();
        this.ObjInfoColumns = [];
        this.ObjInfoData = [];
        this.FieldsColumns = [];
        this.FieldsData = [];
        this.canNotCheckedRow = (/**
         * @param {?} row
         * @param {?} index
         * @return {?}
         */
        (row, index) => {
            return row.require;
        });
        DataIEUtils.getTranslateValue(http).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            this.i18nResouce = res;
            this.ie_cancel = res['ie_cancel'];
            this.ie_ok = res['ie_ok'];
        }));
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.ObjInfoColumns = [
            { field: 'fileObjectName', width: 100, title: '对象名称', sortable: false, showTips: true }
        ];
        this.dataIeRuleExtend = JSON.parse(JSON.stringify(this.dataIeRuleExtendOriginal));
        this.extendRuleInfo = JSON.parse(this.dataIeRuleExtend.extendRuleInfo);
        this.ObjInfoData = this.extendRuleInfo.objInfos;
        this.FieldsColumns = [
            { field: 'fileElementName', width: 100, title: '列名', sortable: false, showTips: true, filter: true }
        ];
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // this.objSelectChanged({data:this.ObjInfoData[0]});
        this.ObjsGrid.selectRow(this.ObjInfoData[0].id);
    }
    /**
     * @param {?} e
     * @return {?}
     */
    moveUp(e) {
        /** @type {?} */
        const selectedRow = this.FieldsGrid.selectedRow;
        if (!selectedRow || !selectedRow.data) {
            return;
        }
        /** @type {?} */
        const id = selectedRow.data.id;
        /** @type {?} */
        const idx = this.FieldsData.findIndex((/**
         * @param {?} e
         * @return {?}
         */
        e => e.id === id));
        if (idx <= 0) {
            return;
        }
        /** @type {?} */
        const temp = this.FieldsData.splice(idx, 1);
        this.FieldsData.splice(idx - 1, 0, ...temp);
        this.FieldsData = JSON.parse(JSON.stringify(this.FieldsData));
        this.FieldsGrid.selectRow(id);
    }
    /**
     * @param {?} e
     * @return {?}
     */
    moveDown(e) {
        /** @type {?} */
        const selectedRow = this.FieldsGrid.selectedRow;
        if (!selectedRow || !selectedRow.data) {
            return;
        }
        /** @type {?} */
        const id = selectedRow.data.id;
        /** @type {?} */
        const idx = this.FieldsData.findIndex((/**
         * @param {?} e
         * @return {?}
         */
        e => e.id === id));
        if (idx >= this.FieldsData.length - 1) {
            return;
        }
        /** @type {?} */
        const temp = this.FieldsData.splice(idx, 1);
        this.FieldsData.splice(idx + 1, 0, ...temp);
        this.FieldsData = JSON.parse(JSON.stringify(this.FieldsData));
        this.FieldsGrid.selectRow(id);
    }
    /**
     * @param {?} e
     * @return {?}
     */
    onFilterChanged(e) {
        if (!e.fileElementName) {
            /** @type {?} */
            const selectedRow = this.ObjsGrid.selectedRow;
            if (!selectedRow || !selectedRow.data) {
                return;
            }
            this.objSelectChanged(selectedRow);
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    objSelectChanged(e) {
        /** @type {?} */
        const rowDataId = e.data.id;
        /** @type {?} */
        const idx = this.ObjInfoData.findIndex((/**
         * @param {?} e
         * @return {?}
         */
        e => e.id === rowDataId));
        if (idx >= 0) {
            this.FieldsData = this.ObjInfoData[idx].fieldsInfo;
            this.FieldsGrid.loadData(this.FieldsData);
            // this.FieldsGrid = JSON.parse(JSON.stringify(fieldsData));
            this.FieldsData.forEach((/**
             * @param {?} d
             * @return {?}
             */
            d => {
                if (d.checked) {
                    this.FieldsGrid.checkRow(d.id, false);
                }
            }));
            /** @type {?} */
            const selectedRow = this.FieldsGrid.selectedRow;
            if (selectedRow) {
                this.FieldsGrid.clearSelections();
            }
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    ElementCheckedRow(e) {
        /** @type {?} */
        const rowData = e.data;
        /** @type {?} */
        const idx = this.FieldsData.findIndex((/**
         * @param {?} e
         * @return {?}
         */
        e => e.id === rowData.id));
        if (idx >= 0) {
            this.FieldsData[idx].checked = true;
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    ElementUnCheckedRow(e) {
        /** @type {?} */
        const rowData = e.data;
        /** @type {?} */
        const idx = this.FieldsData.findIndex((/**
         * @param {?} e
         * @return {?}
         */
        e => e.id === rowData.id));
        if (idx >= 0) {
            this.FieldsData[idx].checked = false;
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    ElementCheckedAll(e) {
        this.FieldsData.forEach((/**
         * @param {?} d
         * @return {?}
         */
        d => {
            d.checked = true;
        }));
    }
    /**
     * @param {?} e
     * @return {?}
     */
    ElementUnCheckedAll(e) {
        if (isNullOrEmpty(e)) {
            return;
        }
        this.FieldsData.forEach((/**
         * @param {?} d
         * @return {?}
         */
        d => {
            d.checked = false;
        }));
    }
    /**
     * @return {?}
     */
    okHandler() {
        if (isNullOrBlank(this.dataIeRuleExtend.code)) {
            this.notify.warning('模板编号不能为空');
            return;
        }
        if (isNullOrBlank(this.dataIeRuleExtend.name)) {
            this.notify.warning('模板名称不能为空');
            return;
        }
        this.extendRuleInfo.objInfos = this.ObjInfoData;
        this.dataIeRuleExtend.extendRuleInfo = JSON.stringify(this.extendRuleInfo);
        /** @type {?} */
        const url = '/api/runtime/dip/v1.0/dataIeRuleManage/checkUpdateRuleExtend';
        this.http.post(url, this.dataIeRuleExtend).subscribe((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            if (e.success) {
                this.okModal.emit(this.dataIeRuleExtend);
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            this.notify.error(error.error.Message);
            console.log(error.error.Message);
        }));
    }
    /**
     * @return {?}
     */
    cancelHandler() {
        this.closeModal.emit();
    }
}
ExtendComponent1Component.decorators = [
    { type: Component, args: [{
                selector: 'hlo-extend-component1',
                template: "<form class=\"px-3 px-md-4 farris-form d-flex flex-wrap\" style=\"margin-top: 13px;\">\n\n  <div class=\"farris-group-wrap form-inline farris-form-inline item-label\">\n    <div class=\"form-group farris-form-group\">\n      <label class=\" col-form-label\">\n        <span class=\"farris-label-info text-danger\">*</span>\n        <span class=\"farris-label-text\">\u6A21\u677F\u7F16\u53F7</span>\n      </label>\n      <div class=\"farris-input-wrap\" style=\"width:240px;\">\n        <input-group name=\"templateCode\" [(ngModel)]=\"dataIeRuleExtend.code\"></input-group>\n        <div class=\"farris-feedback valid-feedback\"></div>\n      </div>\n    </div>\n  </div>\n  <div class=\"farris-group-wrap form-inline farris-form-inline item-label\">\n    <div class=\"form-group farris-form-group\">\n      <label class=\" col-form-label\">\n        <span class=\"farris-label-info text-danger\">*</span>\n        <span class=\"farris-label-text\">\u6A21\u677F\u540D\u79F0</span>\n      </label>\n      <div class=\"farris-input-wrap\" style=\"width:240px;\">\n        <input-group name=\"templateName\" [(ngModel)]=\"dataIeRuleExtend.name\"></input-group>\n        <div class=\"farris-feedback valid-feedback\"></div>\n      </div>\n    </div>\n  </div>\n\n\n</form>\n<farris-section style=\"height: 500px;\">\n  <div class=\"f-page f-page-is-wizard\">\n    <div class=\"position-relative flex-fill farris-split-section m-2 farris-overflow-hidden\">\n\n      <layout id=\"manage-layout\" direction=\"h\" fill=\"true\" class=\"d-flex flex-row layout-fill\">\n        <layout-panel id=\"adptor-layout-panel-left\" class=\"col-2 d-flex flex-column farris-lsection p-0\" region=\"west\"\n                      minWidth=\"150\"\n                      showBorder=\"false\"\n                      style=\"flex: 0 0 auto; max-width: none; width: 260px;margin-top: 14px;overflow-y: auto;overflow-x: hidden\">\n          <div class=\"flex-fill farris-overflow-y-auto\" style=\"background-color: white;height: 468px;\">\n            <farris-datagrid #ObjsGrid id=\"objs-grid\" [idField]=\"'id'\" [fit]=\"true\" [fitColumns]=\"true\"\n                             [columns]=\"ObjInfoColumns\"\n                             [pagination]=\"false\" [showBorder]=\"true\" [striped]=\"true\" [showLineNumber]=\"true\"\n                             [sizeType]=\"'sm'\"\n                             [data]=\"ObjInfoData\" [editable]=\"false\" (selectChanged)=\"objSelectChanged($event)\">\n            </farris-datagrid>\n          </div>\n        </layout-panel>\n\n        <layout-panel id=\"adptor-layout-panel-right\" class=\"farris-rsection f-overflow-y-auto d-flex flex-fill\"\n                      region=\"center\" minWidth=\"280\"\n                      showBorder=\"false\">\n          <div class=\"f-struct-wrapper f-utils-fill-flex-column\" style=\"width: 445px;height: 460px;\">\n            <div class=\"row\" style=\"margin-left:5px;\">\n              <farris-button [type]=\"'link'\" (click)=\"moveUp($event)\">\u4E0A\u79FB</farris-button>\n              <farris-button [type]=\"'link'\" (click)=\"moveDown($event)\">\u4E0B\u79FB</farris-button>\n            </div>\n            <farris-datagrid #FieldsGrid id=\"fields-grid\" [idField]=\"'id'\" [fit]=\"true\" [fitColumns]=\"true\"\n                             [columns]=\"FieldsColumns\"\n                             [showAllCheckbox]=\"false\" [selectOnCheck]=\"true\" [onlySelectSelf]=\"true\"\n                             [showCheckbox]=\"true\"\n                             [multiSelect]=\"true\" [keepSelect]=\"true\" [pagination]=\"false\" [showBorder]=\"true\"\n                             [showLineNumber]=\"true\"\n                             [striped]=\"true\" [sizeType]=\"'sm'\" [data]=\"FieldsData\" [enableFilterRow]=\"true\"\n                             (filterChanged)=\"onFilterChanged($event)\" [disableRow]=\"canNotCheckedRow\"\n                             (checked)=\"ElementCheckedRow($event)\" (unChecked)=\"ElementUnCheckedRow($event)\"\n                             >\n            </farris-datagrid>\n          </div>\n        </layout-panel>\n      </layout>\n\n    </div>\n  </div>\n</farris-section>\n\n\n<ng-template #selectFooter>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancelHandler()\">{{ie_cancel}}</button>\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"okHandler()\">{{ie_ok}}</button>\n</ng-template>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
ExtendComponent1Component.ctorParameters = () => [
    { type: HttpClient },
    { type: NotifyService }
];
ExtendComponent1Component.propDecorators = {
    ObjsGrid: [{ type: ViewChild, args: ['ObjsGrid',] }],
    FieldsGrid: [{ type: ViewChild, args: ['FieldsGrid',] }],
    modalFooter: [{ type: ViewChild, args: ['selectFooter',] }],
    closeModal: [{ type: Output }],
    okModal: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ExtendComponent1Component.prototype.ObjsGrid;
    /** @type {?} */
    ExtendComponent1Component.prototype.FieldsGrid;
    /** @type {?} */
    ExtendComponent1Component.prototype.modalFooter;
    /** @type {?} */
    ExtendComponent1Component.prototype.closeModal;
    /** @type {?} */
    ExtendComponent1Component.prototype.okModal;
    /** @type {?} */
    ExtendComponent1Component.prototype.dataIeRuleExtendOriginal;
    /** @type {?} */
    ExtendComponent1Component.prototype.dataIeRuleExtend;
    /** @type {?} */
    ExtendComponent1Component.prototype.extendRuleInfo;
    /** @type {?} */
    ExtendComponent1Component.prototype.ObjInfoColumns;
    /** @type {?} */
    ExtendComponent1Component.prototype.ObjInfoData;
    /** @type {?} */
    ExtendComponent1Component.prototype.FieldsColumns;
    /** @type {?} */
    ExtendComponent1Component.prototype.FieldsData;
    /** @type {?} */
    ExtendComponent1Component.prototype.i18nResouce;
    /** @type {?} */
    ExtendComponent1Component.prototype.ie_cancel;
    /** @type {?} */
    ExtendComponent1Component.prototype.ie_ok;
    /** @type {?} */
    ExtendComponent1Component.prototype.canNotCheckedRow;
    /**
     * @type {?}
     * @private
     */
    ExtendComponent1Component.prototype.http;
    /**
     * @type {?}
     * @private
     */
    ExtendComponent1Component.prototype.notify;
}
//# sourceMappingURL=data:application/json;base64,