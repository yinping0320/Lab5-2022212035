import { ComponentFactoryResolver, EventEmitter, Injector, OnInit, TemplateRef } from '@angular/core';
import { MethodType } from "../model/DataIEType/MethodType";
import { FrameContext } from "@farris/devkit";
import { Subject } from "rxjs";
import { LoadingComponent, LoadingService } from "@farris/ui-loading";
import { DataExportService } from "../service/DataIEService/data-export.service";
import { NotifyService } from "@farris/ui-notify";
import { HttpClient } from "@angular/common/http";
import { BsModalService } from "@farris/ui-modal";
export declare class ExportCustomSelectHandcraftComponent implements OnInit {
    private dataExportService;
    private notify;
    private http;
    private loadingService;
    private injector;
    private modalService;
    private resolver;
    ngOnDestroy(): void;
    modalFooter: TemplateRef<any>;
    ruleId: string;
    methodType: MethodType;
    frameContext: FrameContext;
    subject: Subject<any>;
    exportOption: any;
    needDestroy: EventEmitter<boolean>;
    valueField: any;
    enableRuntimeCustom: boolean;
    recordRule: any;
    currentRuleName: string;
    currentRuleId: string;
    currentRuleFileType: string;
    lookupIcon: string;
    loadingComp: LoadingComponent;
    fileListItems: {
        id: string;
        label: string;
    }[];
    file_type: string;
    export_success: string;
    export_fail: string;
    ie_cancel: string;
    ie_ok: string;
    rule_list: string;
    i18nResource: any;
    constructor(dataExportService: DataExportService, notify: NotifyService, http: HttpClient, loadingService: LoadingService, injector: Injector, modalService: BsModalService, resolver: ComponentFactoryResolver);
    ngOnInit(): void;
    openSelectRule($event: any): void;
    Ok(): void;
    exportComplete(): void;
    canSelectFileType(): boolean;
    close(): void;
    Cancel(): void;
}
