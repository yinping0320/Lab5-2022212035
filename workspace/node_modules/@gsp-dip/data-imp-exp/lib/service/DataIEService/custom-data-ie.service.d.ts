import { EventEmitter } from '@angular/core';
import { FrameContext, Repository } from '@farris/devkit';
import { Observable } from 'rxjs';
import { NotifyService } from '@farris/ui-notify';
import { FileOperateService } from './file-operate.service';
import { DataImportService } from './data-import.service';
import { LoadingService } from '@farris/ui-loading';
import { HttpClient } from '@angular/common/http';
import { CommonParams } from "../Entity/CommonParams";
export declare class CustomDataIEService {
    private notify;
    private operateService;
    private loadingService;
    private importService;
    private http;
    private origin;
    private customExportUrl;
    private customImportUrl;
    complete: any;
    export: EventEmitter<{}>;
    errorlevel: any;
    i18nResource: any;
    constructor(notify: NotifyService, operateService: FileOperateService, loadingService: LoadingService, importService: DataImportService, http: HttpClient);
    SaveCustomImportRule(model: any, components: any, frameContext: FrameContext, suffix: string, isImportForm: boolean, i18nId: string, dimension: string): Observable<any>;
    SaveCustomExportRule(model: any, components: any, frameContext: FrameContext, suffix: string, i18nId: string, dimension: string): Observable<any>;
    DowmloadTemplate(model: any, frameContext: FrameContext, importOption: any): void;
    GetImportRuleModel(keys: string[], repository: Repository<any>, i18nId: string, model: any): Observable<any>;
    GetExportRuleModel(keys: string[], repository: Repository<any>, i18nId: string, model: any): Observable<any>;
    ImportByRule(commonParams: CommonParams): void;
    ImportSubTableByRule(commonParams: CommonParams): boolean;
    ExportByRule(keys: any[], filter: any, option: any, frameContext: FrameContext): void;
}
