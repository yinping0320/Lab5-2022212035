import { EventEmitter } from '@angular/core';
import { FrameContext, Repository } from '@farris/devkit';
import { FileOperateService } from './file-operate.service';
import { NotifyService } from '@farris/ui-notify';
import { LoadingService } from '@farris/ui-loading';
import { HttpClient } from '@angular/common/http';
export declare class DataExportService {
    private operateService;
    private notify;
    private http;
    private loadingService;
    private origin;
    export: EventEmitter<{}>;
    errorlevel: any;
    i18nResource: any;
    constructor(operateService: FileOperateService, notify: NotifyService, http: HttpClient, loadingService: LoadingService);
    /**
     * 数据导出服务
     */
    Export(repository: Repository<any>, exportParam: any, option: any): void;
    /**
     * 打包导出
     * @param repository
     * @param optionJson
     */
    ExportByPackage(repository: Repository<any>, optionJson: any): void;
    ExecuteMutiRequest(packitems: Array<object>, befRestService: any, relativePaths: any, itemsFileName: any, optionJson: any): void;
    /**
     * 手工表单导出
     * @param exportParam
     * @param option
     */
    Export4HandCraft(exportParam: any, option: any): void;
    StartLoading(): void;
    CloseLoading(): void;
    ExportCurrentData(ruleId: string, frameContext: FrameContext, pageIndex: number, pageSize: number, option: any, suffix?: string): void;
    ExportById(ruleId: string, frameContext: FrameContext, option: any, suffix?: string): void;
    ExportById4HandCraft(ruleId: string, option: any, suffix?: string): void;
    ExportCurrentChildData(ruleId: string, frameContext: FrameContext, option: any, suffix?: string): void;
}
