import { ComponentFactoryResolver, EventEmitter, Injector, OnDestroy, TemplateRef } from '@angular/core';
import { DataExportService } from '../service/DataIEService/data-export.service';
import { NotifyService } from '@farris/ui-notify';
import { FrameContext } from '@farris/devkit';
import { EntityListService } from '@farris/command-services';
import { HttpClient } from '@angular/common/http';
import { LoadingComponent, LoadingService } from '@farris/ui-loading';
import { BsModalService } from '@farris/ui-modal';
import { Subject } from 'rxjs';
import { MethodType } from '../model/DataIEType/MethodType';
export declare class ExportCustomSelectComponent implements OnDestroy {
    private dataExportService;
    private notify;
    private entityService;
    private http;
    private loadingService;
    private injector;
    private modalService;
    private resolver;
    ngOnDestroy(): void;
    modalFooter: TemplateRef<any>;
    ruleId: string;
    methodType: MethodType;
    frameContext: FrameContext;
    subject: Subject<Boolean>;
    exportOption: any;
    needDestroy: EventEmitter<boolean>;
    valueField: any;
    enableRuntimeCustom: boolean;
    recordRule: any;
    currentRuleName: string;
    currentRuleId: string;
    currentRuleFileType: string;
    lookupIcon: string;
    loadingComp: LoadingComponent;
    fileListItems: {
        id: string;
        label: string;
    }[];
    file_type: string;
    export_success: string;
    export_fail: string;
    ie_cancel: string;
    ie_ok: string;
    rule_list: string;
    i18nResource: any;
    constructor(dataExportService: DataExportService, notify: NotifyService, entityService: EntityListService, http: HttpClient, loadingService: LoadingService, injector: Injector, modalService: BsModalService, resolver: ComponentFactoryResolver);
    ngOnInit(): void;
    openSelectRule($event: any): void;
    Ok(): void;
    exportComplete(): void;
    canSelectFileType(): boolean;
    close(): void;
    Cancel(): void;
}
