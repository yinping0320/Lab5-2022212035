import { ComponentFactoryResolver, ElementRef, EventEmitter, Injector, OnDestroy, TemplateRef } from '@angular/core';
import { FileUploader } from '../service/UploaderService/FileUpload/file-uploader';
import { FileItem } from '../service/UploaderService/FileUpload/file-item';
import { ParsedResponseHeaders } from '../service/UploaderService/FileUpload/parsed-response-headers';
import { DataImportService } from '../service/DataIEService/data-import.service';
import { NotifyService } from '@farris/ui-notify';
import { LoadingService } from '@farris/ui-loading';
import { MethodType } from '../model/DataIEType/MethodType';
import { Subject } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { BsModalService } from '@farris/ui-modal';
import { MessagerService } from '@farris/ui-messager';
export declare class ImportDialogHandcraftComponent implements OnDestroy {
    private dataImportService;
    private notify;
    private loadingService;
    private http;
    private injector;
    private modalService;
    private msgService;
    private resolver;
    modalFooter: TemplateRef<any>;
    ruleId: string;
    importOption: any;
    methodType: MethodType;
    subject: Subject<any>;
    selectrule: boolean;
    recordRule: any;
    selectfiletype: any;
    extendInfo: any;
    currentRuleName: string;
    currentRuleId: string;
    currentRuleFileType: string;
    enableTemplate: boolean;
    closeXLSX: boolean;
    enableSecurityLevelSelect: boolean;
    securityLevelName: string;
    ImportSecretRemindInfo: string;
    acceptFileType: string;
    fileName: string;
    fileUpload: ElementRef;
    private origin;
    uploader: FileUploader;
    needDestroy: EventEmitter<{}>;
    showfiletype: boolean;
    enableRuntimeCustom: boolean;
    valueField: any;
    import_file: string;
    choose_file: string;
    import_placeholder: string;
    file_type: string;
    download_template: string;
    ie_cancel: string;
    ie_ok: string;
    choose_truefile: string;
    download_template_ok: string;
    download_template_fail: string;
    upload_fail: string;
    import_success: string;
    import_form_success: string;
    import_fail: string;
    rule_list: string;
    select_xlsx_notify: string;
    i18nResource: any;
    constructor(dataImportService: DataImportService, notify: NotifyService, loadingService: LoadingService, http: HttpClient, injector: Injector, modalService: BsModalService, msgService: MessagerService, resolver: ComponentFactoryResolver);
    lookupIcon: string;
    fileListItems: {
        id: string;
        label: string;
    }[];
    securityLevelItems: any[];
    ngOnInit(): void;
    openSelectRule($event: any): void;
    getFileExtension(): any;
    canDownloadTemplate(): boolean;
    ngOnDestroy(): void;
    selectedFileOnChange(event: any): void;
    Close(): void;
    SelectFile(): any;
    fileTypeValueChange(): void;
    controlFileType(): any;
    DownloadTemplate(): void;
    afterAddFile(fileItem: FileItem): any;
    Ok(): void;
    Cancel(): void;
    ErrorLog(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any;
    Import(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any;
    private ShowValidatedResult;
    DataImportById(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any;
}
