import { EventEmitter, TemplateRef, ComponentFactoryResolver } from '@angular/core';
import { FrameContext } from '@farris/devkit';
import { NotifyService } from '@farris/ui-notify';
import { DataExportService } from '../service/DataIEService/data-export.service';
import { DataImportExportRule } from '../model/DataImportExportRule';
import { FileOperateService } from '../service/DataIEService/file-operate.service';
import { EntityListService } from '@farris/command-services';
import { ElementSelectComponent } from '../element-select/element-select.component';
import { CustomDataIEService } from '../service/DataIEService/custom-data-ie.service';
import { BsModalService } from '@farris/ui-modal';
import { HttpClient } from '@angular/common/http';
import { Subject } from 'rxjs';
import { MethodType } from '../model/DataIEType/MethodType';
export declare class ExportDialogComponent {
    private dataExportService;
    private notify;
    private fileService;
    private entityService;
    private customIEService;
    private resolver;
    private modalService;
    private http;
    modalFooter: TemplateRef<any>;
    ruleId: string;
    i18nId: string;
    exportOption: any;
    isHandCraft: boolean;
    subject: Subject<Boolean>;
    frameContext: FrameContext;
    methodType: MethodType;
    show: boolean;
    needDestroy: EventEmitter<boolean>;
    valueField: string;
    exportRule: DataImportExportRule;
    eleSelectComp: ElementSelectComponent;
    Model: any;
    components: any;
    filter: any;
    InnerModel: any;
    CustomModel: any;
    isCustomExport: any;
    export_success: string;
    export_fail: string;
    file_type: string;
    download_vsto: string;
    ie_cancel: string;
    ie_ok: string;
    customexport_no_column: string;
    vsto_component: string;
    constructor(dataExportService: DataExportService, notify: NotifyService, fileService: FileOperateService, entityService: EntityListService, customIEService: CustomDataIEService, resolver: ComponentFactoryResolver, modalService: BsModalService, http: HttpClient);
    DownloadVSTO(): void;
    close(): void;
    fileListItems: string[];
    Ok(): void;
    Cancel(): void;
}
