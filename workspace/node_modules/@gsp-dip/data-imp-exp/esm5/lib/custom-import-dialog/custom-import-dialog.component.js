/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { FrameContext } from '@farris/devkit';
import { LoadingService } from '@farris/ui-loading';
import { FileUploader } from '../service/UploaderService/FileUpload/file-uploader';
import { Subject } from 'rxjs';
import { NotifyService } from '@farris/ui-notify';
import { CustomDataIEService } from '../service/DataIEService/custom-data-ie.service';
import { ElementSelectComponent } from '../element-select/element-select.component';
import { DataImportService } from '../service/DataIEService/data-import.service';
import { DataIEUtils } from '../service/Utils/DataIEUtils';
import { HttpClient } from '@angular/common/http';
import { CommonParams } from "../service/Entity/CommonParams";
var CustomImportDialogComponent = /** @class */ (function () {
    function CustomImportDialogComponent(customDataIEService, notify, loadingService, importService, http) {
        var _this = this;
        this.customDataIEService = customDataIEService;
        this.notify = notify;
        this.loadingService = loadingService;
        this.importService = importService;
        this.http = http;
        // 规则ID
        this.ruleId = '';
        this.i18nId = '';
        // 过滤条件
        this.importOption = null;
        this.frameContext = null;
        // @Input()
        // methodType: MethodType;
        this.subject = null;
        this.acceptFileType = '.xls';
        // 文件名称
        this.fileName = '';
        this.origin = window.location.origin;
        this.valueField = 'Office Excel97-2003(*.xls)';
        this.uploader = new FileUploader({
            url: this.origin + '/api/runtime/dip/v1.0/rpcimport/Upload',
            method: 'POST',
            autoUpload: false,
            itemAlias: 'uploadedfile',
            allowedFileType: ['xls', 'xml', 'pdf', 'wps', 'doc']
        });
        // 控制Destroy表单中的输入组件
        this.needDestroy = new EventEmitter();
        this.Model = null;
        this.InnerModel = null;
        this.components = null;
        this.CustomModel = null;
        this.IsImportForm = false;
        // public fileListItems = [
        //     {id:'Office Excel97-2003(*.xls)',label:'Office Excel97-2003(*.xls)'},
        //     {id:'Office Excel(*.xlsx)',label:'Office Excel(*.xlsx)'},
        //     {id:'Office Excel Macro(*.xlsm)',label:'Office Excel Macro(*.xlsm)'},
        //     {id:'WPS Table(*.et)',label:'WPS Table(*.et)'}
        //     // 'WPS Table(Template File)(*.ett)'
        // ];
        this.fileListItems = [
            'Office Excel97-2003(*.xls)',
            'Office Excel(*.xlsx)',
            'Office Excel Macro(*.xlsm)',
            'WPS Table(*.et)'
            // 'WPS Table(Template File)(*.ett)'
        ];
        DataIEUtils.getTranslateValue(http).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.import_file = res['import_file'];
            _this.choose_file = res['choose_file'];
            _this.file_type = res['file_type'];
            _this.import_placeholder = res['import_placeholder'];
            _this.download_template = res['download_template'];
            _this.ie_cancel = res['ie_cancel'];
            _this.ie_ok = res['ie_ok'];
            _this.choose_truefile = res['choose_truefile'];
            _this.download_template_ok = res['download_template_ok'];
            _this.download_template_fail = res['download_template_fail'];
            _this.upload_fail = res['upload_fail'];
            _this.import_success = res['import_success'];
            _this.import_form_success = res['import_form_success'];
            _this.import_fail = res['import_fail'];
            _this.upload_filetype_nomatch = res['upload_filetype_nomatch'];
            _this.save_customrule_fail = res['save_customrule_fail'];
            _this.customexport_no_column = res['customexport_no_column'];
            _this.select_xlsx_notify = res['select_xlsx_notify'];
            _this.i18nResource = res;
        }));
    }
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // 上传成功后执行的事件
        this.uploader.onSuccessItem = this.Import.bind(this);
        // 上传失败后执行的事件
        this.uploader.onErrorItem = this.ErrorLog.bind(this);
        // 添加文件后执行的事件
        this.uploader.onAfterAddingFile = this.afterAddFile;
        // 上传文件前执行的事件
        this.uploader.onBeforeUploadItem = this.SaveCustomImportRule;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    CustomImportDialogComponent.prototype.selectedFileOnChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var str = event.target.value;
        if (str === '') {
            return;
        }
        /** @type {?} */
        var index = str.lastIndexOf('\\');
        this.fileName = str.substring(index + 1);
        // console.log('队列中的文件' + this.uploader.queue[0]);
    };
    // 关闭窗口
    // 关闭窗口
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.Close = 
    // 关闭窗口
    /**
     * @return {?}
     */
    function () {
        this.needDestroy.emit();
    };
    // 选择文件事件
    // 选择文件事件
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.SelectFile = 
    // 选择文件事件
    /**
     * @return {?}
     */
    function () {
        this.fileUpload.nativeElement.click();
    };
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.fileTypeValueChange = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var suffix = this.getFileExtension();
        if (suffix === '.xlsx') {
            this.notify.info(this.select_xlsx_notify);
        }
        if (suffix !== null) {
            this.acceptFileType = suffix;
        }
        else {
            this.acceptFileType = '.csv,.xlsm,.xlsx,.xls,.pdf,.xml,.et';
        }
    };
    //下载模板
    //下载模板
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.DownloadTemplate = 
    //下载模板
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        //const temRes = JSON.parse(response);
        /** @type {?} */
        var suffix = '.xls';
        suffix = this.getFileExtension();
        if (this.InnerModel !== null) {
            this.eleSelectComp.Save();
            /** @type {?} */
            var elements = this.InnerModel.MainObject.Elements;
            /** @type {?} */
            var mainObjName = this.InnerModel.MainObject.FileObjectName;
            if (elements == null || elements === undefined || elements.length === 0) {
                this.notify.info(mainObjName + ' ' + this.customexport_no_column);
                return;
            }
            this.customDataIEService.SaveCustomImportRule(this.InnerModel, this.components, this.frameContext, suffix, false, this.i18nId, this.importOption.dimension).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (data['success'] === true) {
                    _this.customDataIEService.DowmloadTemplate(_this.Model, _this.frameContext, _this.importOption);
                    /** @type {?} */
                    var unsubscriber_1 = _this.customDataIEService.complete.subscribe((/**
                     * @param {?} data
                     * @return {?}
                     */
                    function (data) {
                        if (data === '') {
                            _this.notify.success(_this.download_template_ok);
                            unsubscriber_1.unsubscribe();
                        }
                        else {
                            _this.notify.error(_this.download_template_fail + data);
                            unsubscriber_1.unsubscribe();
                        }
                    }));
                }
                else {
                    _this.notify.error(_this.save_customrule_fail + data['message']);
                }
            }));
        }
    };
    // 添加文件后事件
    // 添加文件后事件
    /**
     * @param {?} fileItem
     * @return {?}
     */
    CustomImportDialogComponent.prototype.afterAddFile = 
    // 添加文件后事件
    /**
     * @param {?} fileItem
     * @return {?}
     */
    function (fileItem) {
    };
    // 开始导入
    // 开始导入
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.Ok = 
    // 开始导入
    /**
     * @return {?}
     */
    function () {
        console.log('开始上传！');
        console.log(this.uploader.queue);
        /** @type {?} */
        var loadingConfig = {
            message: this.i18nResource['import_loading']
        };
        this.loadingService.show(loadingConfig);
        /** @type {?} */
        var len = this.uploader.queue.length;
        if (len === 0) {
            this.notify.info(this.choose_truefile);
            this.loadingService.clearAll();
            return;
        }
        /** @type {?} */
        var lastFileItem = this.uploader.queue[len - 1];
        // this.uploader.uploadAll();
        /** @type {?} */
        var befRestService = DataIEUtils.GetBefRestService(this.frameContext.repository);
        /** @type {?} */
        var preUrl = DataIEUtils.GetPreUrl(befRestService.baseUri);
        /** @type {?} */
        var tempUrl = preUrl + "/import/Upload";
        /** @type {?} */
        var su = DataIEUtils.getSu(tempUrl);
        /** @type {?} */
        var fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcimport/Upload?su=' + su;
        this.uploader.setOptions({
            url: fixedUrl,
            method: 'POST',
            autoUpload: false,
            itemAlias: 'uploadedfile',
            allowedFileType: ['xls', 'xml', 'pdf', 'wps', 'doc'],
            headers: [{ name: 'su', value: su }]
        });
        if (this.fileName.split(".").length === 2) {
            if (this.getFileExtension() !== ("." + this.fileName.split(".")[1])) {
                this.notify.info(this.upload_filetype_nomatch);
                this.loadingService.clearAll();
                return;
            }
        }
        this.uploader.uploadItem(lastFileItem);
    };
    // 取消事件
    // 取消事件
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.Cancel = 
    // 取消事件
    /**
     * @return {?}
     */
    function () {
        this.needDestroy.emit();
    };
    // 上传失败后方法
    // 上传失败后方法
    /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    CustomImportDialogComponent.prototype.ErrorLog = 
    // 上传失败后方法
    /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    function (item, response, status, headers) {
        console.log('上传失败');
        console.log('错误代码：' + status);
        console.log(response);
        console.log(headers);
        if (response !== ' ') {
            /** @type {?} */
            var temRes = JSON.parse(response);
            this.notify.info(this.upload_fail + temRes);
            console.log('失败原因：' + temRes);
        }
    };
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.SaveCustomImportRule = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    CustomImportDialogComponent.prototype.Import = /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    function (item, response, status, headers) {
        var _this = this;
        /** @type {?} */
        var temRes = JSON.parse(response);
        /** @type {?} */
        var suffix = '.xls';
        suffix = this.getFileExtension();
        if (this.InnerModel !== null) {
            /** @type {?} */
            var isForm = false;
            if (this.importOption !== null && this.importOption['IsImportForm'] !== null && this.importOption['IsImportForm'] !== undefined) {
                if (this.importOption['IsImportForm'] === true) {
                    isForm = true;
                }
            }
            this.eleSelectComp.Save();
            this.customDataIEService.SaveCustomImportRule(this.InnerModel, this.components, this.frameContext, suffix, isForm, this.i18nId, this.importOption.dimension).subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                if (data['success'] === true) {
                    if (data['isImportSub'] == true) {
                        _this.ImportSubTableByRule(item, response, status, headers);
                    }
                    else {
                        _this.ImportByRule(item, response, status, headers);
                    }
                }
                else {
                    _this.notify.error(_this.save_customrule_fail + data['message']);
                    _this.loadingService.clearAll();
                }
            }));
        }
        else {
            console.log('数据交换模型参数值为空');
            this.loadingService.clearAll();
        }
    };
    /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    CustomImportDialogComponent.prototype.ImportByRule = /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    function (item, response, status, headers) {
        var _this = this;
        console.log(status);
        console.log('上传完成！');
        if (status == 200) {
            /** @type {?} */
            var temRes = JSON.parse(response);
            console.log('上传成功');
            console.log(temRes);
            /** @type {?} */
            var loadingConfig = {
                message: this.i18nResource['import_loading']
            };
            /** @type {?} */
            var loadingParam = {
                loadingService: this.loadingService,
                loadingConfig: loadingConfig
            };
            /** @type {?} */
            var commonParams = new CommonParams();
            commonParams.keys = ['DataImport', this.Model['MainObject']['Source']['SourceMetadataID'], this.importOption.dimension];
            commonParams.option = this.importOption;
            commonParams.fileName = temRes['fileName'];
            commonParams.repository = this.frameContext.repository;
            commonParams.loadingParam = loadingParam;
            commonParams.i18nResource = this.i18nResource;
            this.customDataIEService.ImportByRule(commonParams);
            /** @type {?} */
            var unsubscriber_2 = this.importService.complete.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this.loadingService.clearAll();
                if (data === '') {
                    _this.notify.success(_this.import_success);
                    unsubscriber_2.unsubscribe();
                    _this.needDestroy.emit();
                    _this.subject.next(true);
                    _this.subject.complete();
                }
                else if (data === '导入表单成功') {
                    _this.notify.success(_this.import_form_success);
                    unsubscriber_2.unsubscribe();
                    _this.needDestroy.emit();
                    _this.subject.next(true);
                    _this.subject.complete();
                }
                else {
                    /** @type {?} */
                    var errorlevel = _this.importService.errorlevel;
                    if (errorlevel === 'Info') {
                        _this.notify.info(data);
                    }
                    else if (errorlevel === 'Warning') {
                        _this.notify.warning(data);
                    }
                    else {
                        _this.notify.error(_this.import_fail + data);
                    }
                    unsubscriber_2.unsubscribe();
                    _this.needDestroy.emit();
                    _this.subject.next(false);
                    _this.subject.complete();
                }
            }));
        }
    };
    /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    CustomImportDialogComponent.prototype.ImportSubTableByRule = /**
     * @param {?} item
     * @param {?} response
     * @param {?} status
     * @param {?} headers
     * @return {?}
     */
    function (item, response, status, headers) {
        var _this = this;
        if (status === 200) {
            /** @type {?} */
            var temRes = JSON.parse(response);
            /** @type {?} */
            var loadingConfig = {
                message: this.i18nResource['import_loading']
            };
            /** @type {?} */
            var loadingParam = {
                loadingService: this.loadingService,
                loadingConfig: loadingConfig
            };
            /** @type {?} */
            var commonParams = new CommonParams();
            commonParams.keys = ['DataImport', this.Model['MainObject']['Source']['SourceMetadataID'], this.importOption.dimension];
            commonParams.option = this.importOption;
            commonParams.fileName = temRes['fileName'];
            commonParams.repository = this.frameContext.repository;
            commonParams.frameContext = this.frameContext;
            commonParams.loadingParam = loadingParam;
            commonParams.i18nResource = this.i18nResource;
            /** @type {?} */
            var flag = this.customDataIEService.ImportSubTableByRule(commonParams);
            if (flag === false) {
                this.loadingService.clearAll();
            }
            /** @type {?} */
            var unsubscriber_3 = this.importService.complete.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this.loadingService.clearAll();
                if (data === '') {
                    _this.notify.success(_this.import_success);
                    unsubscriber_3.unsubscribe();
                    _this.subject.next(true);
                    _this.subject.complete();
                    _this.needDestroy.emit();
                }
                else if (data === '导入表单成功') {
                    _this.notify.success(_this.import_form_success);
                    unsubscriber_3.unsubscribe();
                    _this.subject.next(true);
                    _this.subject.complete();
                    _this.needDestroy.emit();
                }
                else {
                    /** @type {?} */
                    var errorlevel = _this.importService.errorlevel;
                    if (errorlevel === 'Info') {
                        _this.notify.info(data);
                    }
                    else if (errorlevel === 'Warning') {
                        _this.notify.warning(data);
                    }
                    else {
                        _this.notify.error(_this.import_fail + data);
                    }
                    unsubscriber_3.unsubscribe();
                    _this.subject.next(false);
                    _this.subject.complete();
                    _this.needDestroy.emit();
                }
                unsubscriber_3.unsubscribe();
            }));
        }
    };
    /**
     * @return {?}
     */
    CustomImportDialogComponent.prototype.getFileExtension = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var suffix = null;
        switch (this.valueField) {
            case 'Office Excel97-2003(*.xls)':
                suffix = '.xls';
                break;
            case 'Office Excel(*.xlsx)':
                suffix = '.xlsx';
                break;
            case 'Office Excel Macro(*.xlsm)':
                suffix = '.xlsm';
                break;
            case 'WPS Table(*.et)':
                suffix = '.et';
                break;
            case 'WPS Table(Template File)(*.ett)':
                suffix = '.ett';
                break;
            default:
                break;
        }
        return suffix;
    };
    CustomImportDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-custom-import-dialog',
                    template: "<div class=\"d-flex flex-column\" style=\"width: 100%; height: 100%;\">\r\n  <div region=\"north\" class=\"north\">\r\n    <div style=\"margin-top: 12px;margin-left: 20px\">\r\n      <table>\r\n        <tr>\r\n          <td class=\"mkwidth\">\r\n            <label for=\"f_upload\">{{import_file}}</label>\r\n          </td>\r\n          <td>\r\n            <input #fileUpload name=\"fileinput\" hidden=true type=\"file\" libFileSelect [uploader]=\"uploader\" [accept]=\"acceptFileType\"\r\n              (change)=\"selectedFileOnChange($event)\" />\r\n            <div class=\"input-group\" style=\"margin-left: 10px; width: 800px\">\r\n              <input type=\"text\" id=\"f_upload\" readonly=\"readonly\" class=\"form-control flie-loading\"\r\n                [(ngModel)]=\"fileName\" [placeholder]=\"import_placeholder\">\r\n              <span class=\"input-group-btn\">\r\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"SelectFile()\">{{choose_file}}</button>\r\n              </span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <div region=\"center\" class=\"center flex-fill\">\r\n    <div>\r\n      <app-element-select [Model]=\"Model\" [InnerModel]=\"InnerModel\" [CustomModel]=\"CustomModel\"></app-element-select>\r\n    </div>\r\n  </div>\r\n  <div region=\"south\" class=\"south mgleft\">\r\n    <label>{{file_type}}</label>\r\n    <kendo-dropdownlist class=\"longleng\" id=\"fileType\" [data]=\"fileListItems\" [value]=\"'Office Excel97-2003(*.xls)'\"\r\n      [(ngModel)]=\"valueField\" (valueChange)=\"fileTypeValueChange()\">\r\n    </kendo-dropdownlist>\r\n  </div>\r\n  <!-- <farris-combo-list id=\"fileType\" [(ngModel)]=\"valueField\" [idField]=\"'id'\" [textField]=\"'label'\"\r\n    [data]=\"fileListItems\"></farris-combo-list> -->\r\n\r\n</div>\r\n<ng-template #selectFooter>\r\n  <!-- <div class=\"btns\">\r\n            <button type=\"button\" class=\"btn btn-outline-secondary btn-sm px-3\" (click)=\"DownloadTemplate()\">{{download_template}}</button>\r\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-sm px-3\" (click)=\"Cancel()\">{{ie_cancel}}</button>\r\n        <button type=\"button\" class=\"btn btn-outline-primary btn-sm px-3\" (click)=\"Ok()\">{{ie_ok}}</button>\r\n    </div> -->\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"DownloadTemplate()\">{{download_template}}</button>\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"Cancel()\">{{ie_cancel}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"Ok()\">{{ie_ok}}</button>\r\n</ng-template>",
                    styles: [".barmanager{position:absolute;bottom:0;height:50px;right:30px;padding-left:50px}*{padding:0;margin:0}#filePath,#fileType,#filterExpression{margin-left:7px}.input-group{margin-bottom:12px}.btngroup{margin-top:12px}.exchange{margin-top:30px}#IsSave{margin:6px}.pos{position:relative}.left{float:right}.mkwidth{width:75px;line-height:28px}.div-inline{display:inline}.mgleft{margin-left:20px;margin-top:10px}.longleng{width:820px}"]
                }] }
    ];
    /** @nocollapse */
    CustomImportDialogComponent.ctorParameters = function () { return [
        { type: CustomDataIEService },
        { type: NotifyService },
        { type: LoadingService },
        { type: DataImportService },
        { type: HttpClient }
    ]; };
    CustomImportDialogComponent.propDecorators = {
        modalFooter: [{ type: ViewChild, args: ['selectFooter',] }],
        ruleId: [{ type: Input }],
        i18nId: [{ type: Input }],
        importOption: [{ type: Input }],
        frameContext: [{ type: Input }],
        subject: [{ type: Input }],
        fileUpload: [{ type: ViewChild, args: ['fileUpload',] }],
        eleSelectComp: [{ type: ViewChild, args: [ElementSelectComponent,] }],
        needDestroy: [{ type: Output }],
        Model: [{ type: Input }],
        InnerModel: [{ type: Input }],
        components: [{ type: Input }],
        CustomModel: [{ type: Input }],
        IsImportForm: [{ type: Input }]
    };
    return CustomImportDialogComponent;
}());
export { CustomImportDialogComponent };
if (false) {
    /** @type {?} */
    CustomImportDialogComponent.prototype.modalFooter;
    /** @type {?} */
    CustomImportDialogComponent.prototype.ruleId;
    /** @type {?} */
    CustomImportDialogComponent.prototype.i18nId;
    /** @type {?} */
    CustomImportDialogComponent.prototype.importOption;
    /** @type {?} */
    CustomImportDialogComponent.prototype.frameContext;
    /** @type {?} */
    CustomImportDialogComponent.prototype.subject;
    /** @type {?} */
    CustomImportDialogComponent.prototype.acceptFileType;
    /** @type {?} */
    CustomImportDialogComponent.prototype.fileName;
    /** @type {?} */
    CustomImportDialogComponent.prototype.fileUpload;
    /**
     * @type {?}
     * @private
     */
    CustomImportDialogComponent.prototype.origin;
    /** @type {?} */
    CustomImportDialogComponent.prototype.eleSelectComp;
    /** @type {?} */
    CustomImportDialogComponent.prototype.valueField;
    /** @type {?} */
    CustomImportDialogComponent.prototype.uploader;
    /** @type {?} */
    CustomImportDialogComponent.prototype.needDestroy;
    /** @type {?} */
    CustomImportDialogComponent.prototype.Model;
    /** @type {?} */
    CustomImportDialogComponent.prototype.InnerModel;
    /** @type {?} */
    CustomImportDialogComponent.prototype.components;
    /** @type {?} */
    CustomImportDialogComponent.prototype.CustomModel;
    /** @type {?} */
    CustomImportDialogComponent.prototype.IsImportForm;
    /** @type {?} */
    CustomImportDialogComponent.prototype.fileListItems;
    /** @type {?} */
    CustomImportDialogComponent.prototype.file_type;
    /** @type {?} */
    CustomImportDialogComponent.prototype.download_template;
    /** @type {?} */
    CustomImportDialogComponent.prototype.ie_cancel;
    /** @type {?} */
    CustomImportDialogComponent.prototype.ie_ok;
    /** @type {?} */
    CustomImportDialogComponent.prototype.choose_file;
    /** @type {?} */
    CustomImportDialogComponent.prototype.import_file;
    /** @type {?} */
    CustomImportDialogComponent.prototype.import_placeholder;
    /** @type {?} */
    CustomImportDialogComponent.prototype.download_template_ok;
    /** @type {?} */
    CustomImportDialogComponent.prototype.download_template_fail;
    /** @type {?} */
    CustomImportDialogComponent.prototype.choose_truefile;
    /** @type {?} */
    CustomImportDialogComponent.prototype.upload_filetype_nomatch;
    /** @type {?} */
    CustomImportDialogComponent.prototype.upload_fail;
    /** @type {?} */
    CustomImportDialogComponent.prototype.save_customrule_fail;
    /** @type {?} */
    CustomImportDialogComponent.prototype.import_success;
    /** @type {?} */
    CustomImportDialogComponent.prototype.import_fail;
    /** @type {?} */
    CustomImportDialogComponent.prototype.import_form_success;
    /** @type {?} */
    CustomImportDialogComponent.prototype.customexport_no_column;
    /** @type {?} */
    CustomImportDialogComponent.prototype.select_xlsx_notify;
    /** @type {?} */
    CustomImportDialogComponent.prototype.i18nResource;
    /**
     * @type {?}
     * @private
     */
    CustomImportDialogComponent.prototype.customDataIEService;
    /**
     * @type {?}
     * @private
     */
    CustomImportDialogComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    CustomImportDialogComponent.prototype.loadingService;
    /**
     * @type {?}
     * @private
     */
    CustomImportDialogComponent.prototype.importService;
    /**
     * @type {?}
     * @private
     */
    CustomImportDialogComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,