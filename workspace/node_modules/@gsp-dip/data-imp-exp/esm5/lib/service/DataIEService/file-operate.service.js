/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, EventEmitter } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { DataIEUtils } from '../Utils/DataIEUtils';
var FileOperateService = /** @class */ (function () {
    function FileOperateService(http) {
        var _this = this;
        this.http = http;
        this.origin = window.location.origin;
        this.fileUrl = this.origin + '/api/runtime/rtcommon/v1.0/fileoper';
        this.downloadComplete = new EventEmitter();
        DataIEUtils.getTranslateValue(http).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.file_download_fail = res['file_download_fail'];
        }));
    }
    // 下载文件
    // 下载文件
    /**
     * @param {?} relativePath
     * @param {?} fileName
     * @param {?} preurl
     * @param {?} option
     * @param {?=} needDelete
     * @return {?}
     */
    FileOperateService.prototype.DownloadFile = 
    // 下载文件
    /**
     * @param {?} relativePath
     * @param {?} fileName
     * @param {?} preurl
     * @param {?} option
     * @param {?=} needDelete
     * @return {?}
     */
    function (relativePath, fileName, preurl, option, needDelete) {
        var _this = this;
        if (needDelete === void 0) { needDelete = true; }
        /** @type {?} */
        var tempUrl = '';
        if (preurl === '') {
            tempUrl = this.fileUrl;
        }
        else {
            tempUrl = preurl + "/fileoper";
        }
        /** @type {?} */
        var app = DataIEUtils.getApp(tempUrl);
        /** @type {?} */
        var su = DataIEUtils.getSu(tempUrl);
        if (option !== null && option['su'] !== null && option['su'] !== undefined) {
            su = option['su'];
        }
        /** @type {?} */
        var fileParam = {
            relativePath: relativePath,
            app: app,
            su: su
        };
        /** @type {?} */
        var fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(fixedUrl + "/DownloadFile", fileParam, {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            responseType: 'blob',
            observe: 'response',
            params: { su: su }
        }).subscribe((/**
         * @param {?} filedata
         * @return {?}
         */
        function (filedata) {
            if (!filedata || filedata.body.size == 0) {
                _this.downloadComplete.emit(_this.file_download_fail);
            }
            else {
                //const blob = new Blob([filedata.body], {type: 'application/vnd.ms-excel'});
                /** @type {?} */
                var blob = new Blob([filedata.body]);
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(blob, fileName);
                }
                else {
                    /** @type {?} */
                    var link = document.createElement('a');
                    link.setAttribute('href', window.URL.createObjectURL(blob));
                    // 设置下载的文件名
                    link.setAttribute('download', fileName);
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                _this.downloadComplete.emit('');
                if (needDelete) {
                    _this.DeleteFile(relativePath, preurl, su);
                }
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.downloadComplete.error(error);
        }));
        // 添加error异常处理
    };
    // 打包文件下载文件
    // 打包文件下载文件
    /**
     * @param {?} relativePaths
     * @param {?} itemsFileName
     * @param {?} packageName
     * @param {?} preurl
     * @param {?} packtype
     * @param {?=} needDelete
     * @return {?}
     */
    FileOperateService.prototype.DownloadPackageFile = 
    // 打包文件下载文件
    /**
     * @param {?} relativePaths
     * @param {?} itemsFileName
     * @param {?} packageName
     * @param {?} preurl
     * @param {?} packtype
     * @param {?=} needDelete
     * @return {?}
     */
    function (relativePaths, itemsFileName, packageName, preurl, packtype, needDelete) {
        var _this = this;
        if (needDelete === void 0) { needDelete = true; }
        /** @type {?} */
        var tempUrl = '';
        if (preurl === '') {
            tempUrl = this.fileUrl;
        }
        else {
            tempUrl = preurl + "/fileoper";
        }
        /** @type {?} */
        var app = DataIEUtils.getApp(tempUrl);
        /** @type {?} */
        var su = DataIEUtils.getSu(tempUrl);
        /** @type {?} */
        var fileParam = {
            relativePaths: relativePaths,
            itemsFileName: itemsFileName,
            packType: packtype,
            packageName: packageName,
            su: su
        };
        /** @type {?} */
        var fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(fixedUrl + "/DownloadPackageFile", fileParam, {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            responseType: 'blob',
            observe: 'response',
            params: { su: su }
        }).subscribe((/**
         * @param {?} filedata
         * @return {?}
         */
        function (filedata) {
            if (!filedata || filedata.body.size == 0) {
                _this.downloadComplete.emit(_this.file_download_fail);
            }
            else {
                /** @type {?} */
                var blob = new Blob([filedata.body]);
                // 设置下载的文件名
                /** @type {?} */
                var downloadFileName = packageName + '.' + packtype;
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(blob, downloadFileName);
                }
                else {
                    /** @type {?} */
                    var link = document.createElement('a');
                    link.setAttribute('href', window.URL.createObjectURL(blob));
                    link.setAttribute('download', downloadFileName);
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                _this.downloadComplete.emit('');
                if (needDelete) {
                    _this.DeleteFile(downloadFileName, preurl);
                }
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.downloadComplete.error(error);
        }));
        // 添加error异常处理
    };
    /**
     * 手工表单下载
     * @param relativePath
     * @param fileName
     * @param su
     * @param needDelete
     */
    /**
     * 手工表单下载
     * @param {?} relativePath
     * @param {?} fileName
     * @param {?} su
     * @param {?=} needDelete
     * @return {?}
     */
    FileOperateService.prototype.DownloadFile4HandCraft = /**
     * 手工表单下载
     * @param {?} relativePath
     * @param {?} fileName
     * @param {?} su
     * @param {?=} needDelete
     * @return {?}
     */
    function (relativePath, fileName, su, needDelete) {
        var _this = this;
        if (needDelete === void 0) { needDelete = true; }
        /** @type {?} */
        var fileParam = {
            relativePath: relativePath,
            app: '',
            su: su
        };
        /** @type {?} */
        var fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(fixedUrl + "/DownloadFile", fileParam, {
            headers: {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            responseType: 'blob',
            observe: 'response',
            params: { su: su }
        }).subscribe((/**
         * @param {?} filedata
         * @return {?}
         */
        function (filedata) {
            if (!filedata || filedata.body.size == 0) {
                _this.downloadComplete.emit(_this.file_download_fail);
            }
            else {
                /** @type {?} */
                var blob = new Blob([filedata.body]);
                if (navigator.msSaveOrOpenBlob) {
                    navigator.msSaveOrOpenBlob(blob, fileName);
                }
                else {
                    /** @type {?} */
                    var link = document.createElement('a');
                    link.setAttribute('href', window.URL.createObjectURL(blob));
                    // 设置下载的文件名
                    link.setAttribute('download', fileName);
                    link.style.visibility = 'hidden';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
                _this.downloadComplete.emit('');
                if (needDelete) {
                    _this.DeleteFile4HandCraft(relativePath, su);
                }
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.downloadComplete.error(error);
        }));
        // 添加error异常处理
    };
    // 删除文件
    // 删除文件
    /**
     * @param {?} relativePath
     * @param {?} preurl
     * @param {?=} customSu
     * @return {?}
     */
    FileOperateService.prototype.DeleteFile = 
    // 删除文件
    /**
     * @param {?} relativePath
     * @param {?} preurl
     * @param {?=} customSu
     * @return {?}
     */
    function (relativePath, preurl, customSu) {
        if (customSu === void 0) { customSu = ''; }
        /** @type {?} */
        var tempUrl = '';
        if (preurl === '') {
            tempUrl = this.fileUrl;
        }
        else {
            tempUrl = preurl + "/fileoper";
        }
        /** @type {?} */
        var su = '';
        if (customSu !== '') {
            su = customSu;
        }
        else {
            su = DataIEUtils.getSu(tempUrl);
        }
        /** @type {?} */
        var delParam = {
            relativePath: relativePath,
            su: su
        };
        /** @type {?} */
        var fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(fixedUrl + "/DeleteFile", delParam, {
            params: { su: su }
        }).subscribe();
    };
    /**
     * @param {?} relativePath
     * @param {?} su
     * @return {?}
     */
    FileOperateService.prototype.DeleteFile4HandCraft = /**
     * @param {?} relativePath
     * @param {?} su
     * @return {?}
     */
    function (relativePath, su) {
        /** @type {?} */
        var delParam = {
            relativePath: relativePath,
            su: su
        };
        /** @type {?} */
        var fixedUrl = this.origin + '/api/runtime/dip/v1.0/rpcfileoper';
        this.http.post(fixedUrl + "/DeleteFile", delParam, {
            params: { su: su }
        }).subscribe();
    };
    FileOperateService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FileOperateService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    return FileOperateService;
}());
export { FileOperateService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.origin;
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.fileUrl;
    /** @type {?} */
    FileOperateService.prototype.downloadComplete;
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.file_download_fail;
    /**
     * @type {?}
     * @private
     */
    FileOperateService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,