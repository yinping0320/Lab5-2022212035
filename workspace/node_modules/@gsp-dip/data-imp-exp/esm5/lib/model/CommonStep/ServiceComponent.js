/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ActualParameter } from './ActualParameter';
import { Guid } from '../utils/Guid';
/**
 * 公共步骤组件
 */
var /**
 * 公共步骤组件
 */
ServiceComponent = /** @class */ (function () {
    function ServiceComponent() {
        /**
         * 构件标识
         */
        this.ID = Guid.newGuid();
        /**
         * 构件标识
         */
        this.ComponentID = '';
        /**
         * 构件编号
         */
        this.ComponentCode = '';
        /**
         * 构件名称
         */
        this.ComponentName = '';
        /**
         * 元数据路径
         */
        this.ComponentMetadataPath = '';
        /**
         *  元数据FileName
         */
        this.ComponentFileName = '';
        /**
         * 方法标识
         */
        this.MethodID = '';
        /**
         * 方法编号
         */
        this.MethodCode = '';
        /**
         * 方法名称
         */
        this.MethodName = '';
        /**
         * 方法描述
         */
        this.MethodDescription = '';
        /**
         * 参数列表
         */
        this.Parameters = new Array();
    }
    /**
     * copy
     */
    /**
     * copy
     * @param {?} component
     * @return {?}
     */
    ServiceComponent.copy = /**
     * copy
     * @param {?} component
     * @return {?}
     */
    function (component) {
        var e_1, _a;
        /** @type {?} */
        var stepComponnet = new ServiceComponent();
        stepComponnet.ID = component.ID;
        stepComponnet.ComponentID = component.ComponentID;
        stepComponnet.ComponentCode = component.ComponentCode;
        stepComponnet.ComponentName = component.ComponentName;
        stepComponnet.ComponentMetadataPath = component.ComponentMetadataPath;
        stepComponnet.ComponentFileName = component.ComponentFileName;
        stepComponnet.MethodID = component.MethodID;
        stepComponnet.MethodCode = component.MethodCode;
        stepComponnet.MethodName = component.MethodName;
        stepComponnet.MethodDescription = component.MethodDescription;
        stepComponnet.Parameters = new Array();
        try {
            for (var _b = tslib_1.__values(component.Parameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                var iterator = _c.value;
                stepComponnet.Parameters.push(ActualParameter.copy(iterator));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return stepComponnet;
    };
    return ServiceComponent;
}());
/**
 * 公共步骤组件
 */
export { ServiceComponent };
if (false) {
    /**
     * 构件标识
     * @type {?}
     */
    ServiceComponent.prototype.ID;
    /**
     * 构件标识
     * @type {?}
     */
    ServiceComponent.prototype.ComponentID;
    /**
     * 构件编号
     * @type {?}
     */
    ServiceComponent.prototype.ComponentCode;
    /**
     * 构件名称
     * @type {?}
     */
    ServiceComponent.prototype.ComponentName;
    /**
     * 元数据路径
     * @type {?}
     */
    ServiceComponent.prototype.ComponentMetadataPath;
    /**
     *  元数据FileName
     * @type {?}
     */
    ServiceComponent.prototype.ComponentFileName;
    /**
     * 方法标识
     * @type {?}
     */
    ServiceComponent.prototype.MethodID;
    /**
     * 方法编号
     * @type {?}
     */
    ServiceComponent.prototype.MethodCode;
    /**
     * 方法名称
     * @type {?}
     */
    ServiceComponent.prototype.MethodName;
    /**
     * 方法描述
     * @type {?}
     */
    ServiceComponent.prototype.MethodDescription;
    /**
     * 参数列表
     * @type {?}
     */
    ServiceComponent.prototype.Parameters;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VydmljZUNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3AtZGlwL2RhdGEtaW1wLWV4cC8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9Db21tb25TdGVwL1NlcnZpY2VDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUtyQzs7OztJQStDRTs7OztRQTNDTyxPQUFFLEdBQVcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDOzs7O1FBSTVCLGdCQUFXLEdBQVcsRUFBRSxDQUFDOzs7O1FBSXpCLGtCQUFhLEdBQVcsRUFBRSxDQUFDOzs7O1FBSTNCLGtCQUFhLEdBQVcsRUFBRSxDQUFDOzs7O1FBSTNCLDBCQUFxQixHQUFXLEVBQUUsQ0FBQzs7OztRQUtuQyxzQkFBaUIsR0FBVyxFQUFFLENBQUM7Ozs7UUFLL0IsYUFBUSxHQUFXLEVBQUUsQ0FBQzs7OztRQUl0QixlQUFVLEdBQVcsRUFBRSxDQUFDOzs7O1FBSXhCLGVBQVUsR0FBVyxFQUFFLENBQUM7Ozs7UUFJeEIsc0JBQWlCLEdBQUcsRUFBRSxDQUFDOzs7O1FBSXZCLGVBQVUsR0FBc0IsSUFBSSxLQUFLLEVBQW1CLENBQUM7SUFHcEUsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDVyxxQkFBSTs7Ozs7SUFBbEIsVUFBbUIsU0FBMkI7OztZQUN0QyxhQUFhLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRTtRQUM1QyxhQUFhLENBQUMsRUFBRSxHQUFHLFNBQVMsQ0FBQyxFQUFFLENBQUM7UUFDaEMsYUFBYSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUMsV0FBVyxDQUFDO1FBQ2xELGFBQWEsQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQztRQUN0RCxhQUFhLENBQUMsYUFBYSxHQUFHLFNBQVMsQ0FBQyxhQUFhLENBQUM7UUFDdEQsYUFBYSxDQUFDLHFCQUFxQixHQUFHLFNBQVMsQ0FBQyxxQkFBcUIsQ0FBQztRQUN0RSxhQUFhLENBQUMsaUJBQWlCLEdBQUcsU0FBUyxDQUFDLGlCQUFpQixDQUFDO1FBQzlELGFBQWEsQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQztRQUM1QyxhQUFhLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQyxVQUFVLENBQUM7UUFDaEQsYUFBYSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFDO1FBQ2hELGFBQWEsQ0FBQyxpQkFBaUIsR0FBRyxTQUFTLENBQUMsaUJBQWlCLENBQUM7UUFDOUQsYUFBYSxDQUFDLFVBQVUsR0FBRyxJQUFJLEtBQUssRUFBbUIsQ0FBQzs7WUFDeEQsS0FBdUIsSUFBQSxLQUFBLGlCQUFBLFNBQVMsQ0FBQyxVQUFVLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQXhDLElBQU0sUUFBUSxXQUFBO2dCQUNqQixhQUFhLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7YUFDL0Q7Ozs7Ozs7OztRQUNELE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7SUFFSCx1QkFBQztBQUFELENBQUMsQUF6RUQsSUF5RUM7Ozs7Ozs7Ozs7SUFyRUMsOEJBQW1DOzs7OztJQUluQyx1Q0FBZ0M7Ozs7O0lBSWhDLHlDQUFrQzs7Ozs7SUFJbEMseUNBQWtDOzs7OztJQUlsQyxpREFBMEM7Ozs7O0lBSzFDLDZDQUFzQzs7Ozs7SUFLdEMsb0NBQTZCOzs7OztJQUk3QixzQ0FBK0I7Ozs7O0lBSS9CLHNDQUErQjs7Ozs7SUFJL0IsNkNBQThCOzs7OztJQUk5QixzQ0FBb0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3R1YWxQYXJhbWV0ZXIgfSBmcm9tICcuL0FjdHVhbFBhcmFtZXRlcic7XHJcbmltcG9ydCB7IEd1aWQgfSBmcm9tICcuLi91dGlscy9HdWlkJztcclxuXHJcbi8qKlxyXG4gKiDlhazlhbHmraXpqqTnu4Tku7ZcclxuICovXHJcbmV4cG9ydCBjbGFzcyBTZXJ2aWNlQ29tcG9uZW50IHtcclxuICAvKipcclxuICAgKiDmnoTku7bmoIfor4ZcclxuICAgKi9cclxuICBwdWJsaWMgSUQ6IFN0cmluZyA9IEd1aWQubmV3R3VpZCgpO1xyXG4gIC8qKlxyXG4gICAqIOaehOS7tuagh+ivhlxyXG4gICAqL1xyXG4gIHB1YmxpYyBDb21wb25lbnRJRDogU3RyaW5nID0gJyc7XHJcbiAgLyoqXHJcbiAgICog5p6E5Lu257yW5Y+3XHJcbiAgICovXHJcbiAgcHVibGljIENvbXBvbmVudENvZGU6IFN0cmluZyA9ICcnO1xyXG4gIC8qKlxyXG4gICAqIOaehOS7tuWQjeensFxyXG4gICAqL1xyXG4gIHB1YmxpYyBDb21wb25lbnROYW1lOiBTdHJpbmcgPSAnJztcclxuICAvKipcclxuICAgKiDlhYPmlbDmja7ot6/lvoRcclxuICAgKi9cclxuICBwdWJsaWMgQ29tcG9uZW50TWV0YWRhdGFQYXRoOiBTdHJpbmcgPSAnJztcclxuXHJcbiAgLyoqXHJcbiAgICogIOWFg+aVsOaNrkZpbGVOYW1lXHJcbiAgICovXHJcbiAgcHVibGljIENvbXBvbmVudEZpbGVOYW1lOiBTdHJpbmcgPSAnJztcclxuXHJcbiAgLyoqXHJcbiAgICog5pa55rOV5qCH6K+GXHJcbiAgICovXHJcbiAgcHVibGljIE1ldGhvZElEOiBTdHJpbmcgPSAnJztcclxuICAvKipcclxuICAgKiDmlrnms5XnvJblj7dcclxuICAgKi9cclxuICBwdWJsaWMgTWV0aG9kQ29kZTogU3RyaW5nID0gJyc7XHJcbiAgLyoqXHJcbiAgICog5pa55rOV5ZCN56ewXHJcbiAgICovXHJcbiAgcHVibGljIE1ldGhvZE5hbWU6IFN0cmluZyA9ICcnO1xyXG4gIC8qKlxyXG4gICAgKiDmlrnms5Xmj4/ov7BcclxuICAgICovXHJcbiAgcHVibGljIE1ldGhvZERlc2NyaXB0aW9uID0gJyc7XHJcbiAgLyoqXHJcbiAgICog5Y+C5pWw5YiX6KGoXHJcbiAgICovXHJcbiAgcHVibGljIFBhcmFtZXRlcnM6IEFjdHVhbFBhcmFtZXRlcltdID0gbmV3IEFycmF5PEFjdHVhbFBhcmFtZXRlcj4oKTtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBjb3B5XHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBjb3B5KGNvbXBvbmVudDogU2VydmljZUNvbXBvbmVudCk6IFNlcnZpY2VDb21wb25lbnQge1xyXG4gICAgY29uc3Qgc3RlcENvbXBvbm5ldCA9IG5ldyBTZXJ2aWNlQ29tcG9uZW50KCk7XHJcbiAgICBzdGVwQ29tcG9ubmV0LklEID0gY29tcG9uZW50LklEO1xyXG4gICAgc3RlcENvbXBvbm5ldC5Db21wb25lbnRJRCA9IGNvbXBvbmVudC5Db21wb25lbnRJRDtcclxuICAgIHN0ZXBDb21wb25uZXQuQ29tcG9uZW50Q29kZSA9IGNvbXBvbmVudC5Db21wb25lbnRDb2RlO1xyXG4gICAgc3RlcENvbXBvbm5ldC5Db21wb25lbnROYW1lID0gY29tcG9uZW50LkNvbXBvbmVudE5hbWU7XHJcbiAgICBzdGVwQ29tcG9ubmV0LkNvbXBvbmVudE1ldGFkYXRhUGF0aCA9IGNvbXBvbmVudC5Db21wb25lbnRNZXRhZGF0YVBhdGg7XHJcbiAgICBzdGVwQ29tcG9ubmV0LkNvbXBvbmVudEZpbGVOYW1lID0gY29tcG9uZW50LkNvbXBvbmVudEZpbGVOYW1lO1xyXG4gICAgc3RlcENvbXBvbm5ldC5NZXRob2RJRCA9IGNvbXBvbmVudC5NZXRob2RJRDtcclxuICAgIHN0ZXBDb21wb25uZXQuTWV0aG9kQ29kZSA9IGNvbXBvbmVudC5NZXRob2RDb2RlO1xyXG4gICAgc3RlcENvbXBvbm5ldC5NZXRob2ROYW1lID0gY29tcG9uZW50Lk1ldGhvZE5hbWU7XHJcbiAgICBzdGVwQ29tcG9ubmV0Lk1ldGhvZERlc2NyaXB0aW9uID0gY29tcG9uZW50Lk1ldGhvZERlc2NyaXB0aW9uO1xyXG4gICAgc3RlcENvbXBvbm5ldC5QYXJhbWV0ZXJzID0gbmV3IEFycmF5PEFjdHVhbFBhcmFtZXRlcj4oKTtcclxuICAgIGZvciAoY29uc3QgaXRlcmF0b3Igb2YgY29tcG9uZW50LlBhcmFtZXRlcnMpIHtcclxuICAgICAgc3RlcENvbXBvbm5ldC5QYXJhbWV0ZXJzLnB1c2goQWN0dWFsUGFyYW1ldGVyLmNvcHkoaXRlcmF0b3IpKTtcclxuICAgIH1cclxuICAgIHJldHVybiBzdGVwQ29tcG9ubmV0O1xyXG4gIH1cclxuXHJcbn1cclxuIl19