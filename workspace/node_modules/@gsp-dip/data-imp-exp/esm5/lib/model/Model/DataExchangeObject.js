/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DataExchangeElement } from './DataExchangeElement';
import { DemSource } from './DemSource';
import { RepeatBasis } from '../InputStep/RepeatBasis/repeat-basis';
/**
 * 数据转换对象
 */
var /**
 * 数据转换对象
 */
DataExchangeObject = /** @class */ (function () {
    function DataExchangeObject() {
        /**
         * 父对象ID
         */
        this.ParentObjectId = '';
        /**
         * 文件中对象名称
         */
        this.FileObjectName = '';
        /**
         * 是否导出
         */
        this.Export = true;
        /**
         * 序号
         */
        this.Order = 1;
        /**
         * 对象字段集合
         */
        this.Elements = new Array();
        /**
         * 子对象集合
         */
        this.ChildrenDeo = new Array();
        /**
         * 数据来源
         */
        this.Source = new DemSource();
        /**
         * 重复依据
         */
        this.RepeatBases = new Array();
    }
    /**
     * copy
     */
    /**
     * copy
     * @param {?} obj
     * @return {?}
     */
    DataExchangeObject.copy = /**
     * copy
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_1, _a, e_2, _b, e_3, _c;
        /** @type {?} */
        var deo = new DataExchangeObject();
        deo.Export = obj.Export;
        deo.ID = obj.ID;
        deo.Code = obj.Code;
        deo.Name = obj.Name;
        deo.Source = obj.Source;
        deo.ParentObjectId = obj.ParentObjectId;
        deo.FileObjectName = obj.FileObjectName;
        deo.Order = obj.Order;
        deo.RefObjectName = obj.RefObjectName;
        deo.Elements = new Array();
        try {
            for (var _d = tslib_1.__values(obj.Elements), _e = _d.next(); !_e.done; _e = _d.next()) {
                var ele = _e.value;
                deo.Elements.push(DataExchangeElement.copy(ele));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_1) throw e_1.error; }
        }
        deo.ChildrenDeo = new Array();
        try {
            for (var _f = tslib_1.__values(obj.ChildrenDeo), _g = _f.next(); !_g.done; _g = _f.next()) {
                var item = _g.value;
                deo.ChildrenDeo.push(DataExchangeObject.copy(item));
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_2) throw e_2.error; }
        }
        deo.RepeatBases = new Array();
        try {
            for (var _h = tslib_1.__values(obj.RepeatBases), _j = _h.next(); !_j.done; _j = _h.next()) {
                var item = _j.value;
                deo.RepeatBases.push(RepeatBasis.copy(item));
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return deo;
    };
    return DataExchangeObject;
}());
/**
 * 数据转换对象
 */
export { DataExchangeObject };
if (false) {
    /**
     * 父对象ID
     * @type {?}
     */
    DataExchangeObject.prototype.ParentObjectId;
    /**
     * 文件中对象名称
     * @type {?}
     */
    DataExchangeObject.prototype.FileObjectName;
    /**
     * 是否导出
     * @type {?}
     */
    DataExchangeObject.prototype.Export;
    /**
     * 序号
     * @type {?}
     */
    DataExchangeObject.prototype.Order;
    /**
     * 对象字段集合
     * @type {?}
     */
    DataExchangeObject.prototype.Elements;
    /**
     * 子对象集合
     * @type {?}
     */
    DataExchangeObject.prototype.ChildrenDeo;
    /**
     * 数据来源
     * @type {?}
     */
    DataExchangeObject.prototype.Source;
    /**
     * 重复依据
     * @type {?}
     */
    DataExchangeObject.prototype.RepeatBases;
    /** @type {?} */
    DataExchangeObject.prototype.ID;
    /** @type {?} */
    DataExchangeObject.prototype.Code;
    /** @type {?} */
    DataExchangeObject.prototype.Name;
    /** @type {?} */
    DataExchangeObject.prototype.RefObjectName;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YUV4Y2hhbmdlT2JqZWN0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1kaXAvZGF0YS1pbXAtZXhwLyIsInNvdXJjZXMiOlsibGliL21vZGVsL01vZGVsL0RhdGFFeGNoYW5nZU9iamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOzs7O0FBSXBFOzs7O0lBQUE7Ozs7UUFJVyxtQkFBYyxHQUFHLEVBQUUsQ0FBQzs7OztRQUlwQixtQkFBYyxHQUFXLEVBQUUsQ0FBQzs7OztRQUk1QixXQUFNLEdBQVksSUFBSSxDQUFDOzs7O1FBSXZCLFVBQUssR0FBVyxDQUFDLENBQUM7Ozs7UUFJbEIsYUFBUSxHQUFHLElBQUksS0FBSyxFQUF1QixDQUFDOzs7O1FBSTVDLGdCQUFXLEdBQUcsSUFBSSxLQUFLLEVBQXNCLENBQUM7Ozs7UUFJOUMsV0FBTSxHQUFjLElBQUksU0FBUyxFQUFFLENBQUM7Ozs7UUFJcEMsZ0JBQVcsR0FBa0IsSUFBSSxLQUFLLEVBQWUsQ0FBQztJQW9DakUsQ0FBQztJQTVCRzs7T0FFRzs7Ozs7O0lBQ1csdUJBQUk7Ozs7O0lBQWxCLFVBQW1CLEdBQXVCOzs7WUFDaEMsR0FBRyxHQUFHLElBQUksa0JBQWtCLEVBQUU7UUFDcEMsR0FBRyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1FBQ3hCLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUNoQixHQUFHLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDcEIsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQ3BCLEdBQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztRQUN4QixHQUFHLENBQUMsY0FBYyxHQUFHLEdBQUcsQ0FBQyxjQUFjLENBQUM7UUFDeEMsR0FBRyxDQUFDLGNBQWMsR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDO1FBQ3hDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUN0QixHQUFHLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUM7UUFDdEMsR0FBRyxDQUFDLFFBQVEsR0FBRyxJQUFJLEtBQUssRUFBdUIsQ0FBQzs7WUFDaEQsS0FBa0IsSUFBQSxLQUFBLGlCQUFBLEdBQUcsQ0FBQyxRQUFRLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQTNCLElBQU0sR0FBRyxXQUFBO2dCQUNWLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2FBQ3BEOzs7Ozs7Ozs7UUFDRCxHQUFHLENBQUMsV0FBVyxHQUFHLElBQUksS0FBSyxFQUFzQixDQUFDOztZQUNsRCxLQUFtQixJQUFBLEtBQUEsaUJBQUEsR0FBRyxDQUFDLFdBQVcsQ0FBQSxnQkFBQSw0QkFBRTtnQkFBL0IsSUFBTSxJQUFJLFdBQUE7Z0JBQ1gsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7YUFDdkQ7Ozs7Ozs7OztRQUNELEdBQUcsQ0FBQyxXQUFXLEdBQUcsSUFBSSxLQUFLLEVBQWUsQ0FBQzs7WUFDM0MsS0FBbUIsSUFBQSxLQUFBLGlCQUFBLEdBQUcsQ0FBQyxXQUFXLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQS9CLElBQU0sSUFBSSxXQUFBO2dCQUNYLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzthQUNoRDs7Ozs7Ozs7O1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBQ0wseUJBQUM7QUFBRCxDQUFDLEFBcEVELElBb0VDOzs7Ozs7Ozs7O0lBaEVHLDRDQUEyQjs7Ozs7SUFJM0IsNENBQW1DOzs7OztJQUluQyxvQ0FBOEI7Ozs7O0lBSTlCLG1DQUF5Qjs7Ozs7SUFJekIsc0NBQW1EOzs7OztJQUluRCx5Q0FBcUQ7Ozs7O0lBSXJELG9DQUEyQzs7Ozs7SUFJM0MseUNBQTZEOztJQUU3RCxnQ0FBa0I7O0lBRWxCLGtDQUFvQjs7SUFDcEIsa0NBQW9COztJQUNwQiwyQ0FBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHsgRGF0YUV4Y2hhbmdlRWxlbWVudCB9IGZyb20gJy4vRGF0YUV4Y2hhbmdlRWxlbWVudCc7XHJcbmltcG9ydCB7IERlbVNvdXJjZSB9IGZyb20gJy4vRGVtU291cmNlJztcclxuaW1wb3J0IHsgUmVwZWF0QmFzaXMgfSBmcm9tICcuLi9JbnB1dFN0ZXAvUmVwZWF0QmFzaXMvcmVwZWF0LWJhc2lzJztcclxuLyoqXHJcbiAqIOaVsOaNrui9rOaNouWvueixoVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIERhdGFFeGNoYW5nZU9iamVjdCB7XHJcbiAgICAvKipcclxuICAgICAqIOeItuWvueixoUlEXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBQYXJlbnRPYmplY3RJZCA9ICcnO1xyXG4gICAgLyoqXHJcbiAgICAgKiDmlofku7bkuK3lr7nosaHlkI3np7BcclxuICAgICAqL1xyXG4gICAgcHVibGljIEZpbGVPYmplY3ROYW1lOiBTdHJpbmcgPSAnJztcclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm5a+85Ye6XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBFeHBvcnQ6IEJvb2xlYW4gPSB0cnVlO1xyXG4gICAgLyoqXHJcbiAgICAgKiDluo/lj7dcclxuICAgICAqL1xyXG4gICAgcHVibGljIE9yZGVyOiBOdW1iZXIgPSAxO1xyXG4gICAgLyoqXHJcbiAgICAgKiDlr7nosaHlrZfmrrXpm4blkIhcclxuICAgICAqL1xyXG4gICAgcHVibGljIEVsZW1lbnRzID0gbmV3IEFycmF5PERhdGFFeGNoYW5nZUVsZW1lbnQ+KCk7XHJcbiAgICAvKipcclxuICAgICAqIOWtkOWvueixoembhuWQiFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgQ2hpbGRyZW5EZW8gPSBuZXcgQXJyYXk8RGF0YUV4Y2hhbmdlT2JqZWN0PigpO1xyXG4gICAgLyoqXHJcbiAgICAgKiDmlbDmja7mnaXmupBcclxuICAgICAqL1xyXG4gICAgcHVibGljIFNvdXJjZTogRGVtU291cmNlID0gbmV3IERlbVNvdXJjZSgpO1xyXG4gICAgLyoqXHJcbiAgICAgKiDph43lpI3kvp3mja5cclxuICAgICAqL1xyXG4gICAgcHVibGljIFJlcGVhdEJhc2VzOiBSZXBlYXRCYXNpc1tdID0gbmV3IEFycmF5PFJlcGVhdEJhc2lzPigpO1xyXG5cclxuICAgIHB1YmxpYyBJRDogc3RyaW5nO1xyXG5cclxuICAgIHB1YmxpYyBDb2RlOiBzdHJpbmc7XHJcbiAgICBwdWJsaWMgTmFtZTogc3RyaW5nO1xyXG4gICAgcHVibGljIFJlZk9iamVjdE5hbWU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIGNvcHlcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBjb3B5KG9iajogRGF0YUV4Y2hhbmdlT2JqZWN0KTogRGF0YUV4Y2hhbmdlT2JqZWN0IHtcclxuICAgICAgICBjb25zdCBkZW8gPSBuZXcgRGF0YUV4Y2hhbmdlT2JqZWN0KCk7XHJcbiAgICAgICAgZGVvLkV4cG9ydCA9IG9iai5FeHBvcnQ7XHJcbiAgICAgICAgZGVvLklEID0gb2JqLklEO1xyXG4gICAgICAgIGRlby5Db2RlID0gb2JqLkNvZGU7XHJcbiAgICAgICAgZGVvLk5hbWUgPSBvYmouTmFtZTtcclxuICAgICAgICBkZW8uU291cmNlID0gb2JqLlNvdXJjZTtcclxuICAgICAgICBkZW8uUGFyZW50T2JqZWN0SWQgPSBvYmouUGFyZW50T2JqZWN0SWQ7XHJcbiAgICAgICAgZGVvLkZpbGVPYmplY3ROYW1lID0gb2JqLkZpbGVPYmplY3ROYW1lO1xyXG4gICAgICAgIGRlby5PcmRlciA9IG9iai5PcmRlcjtcclxuICAgICAgICBkZW8uUmVmT2JqZWN0TmFtZSA9IG9iai5SZWZPYmplY3ROYW1lO1xyXG4gICAgICAgIGRlby5FbGVtZW50cyA9IG5ldyBBcnJheTxEYXRhRXhjaGFuZ2VFbGVtZW50PigpO1xyXG4gICAgICAgIGZvciAoY29uc3QgZWxlIG9mIG9iai5FbGVtZW50cykge1xyXG4gICAgICAgICAgICBkZW8uRWxlbWVudHMucHVzaChEYXRhRXhjaGFuZ2VFbGVtZW50LmNvcHkoZWxlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRlby5DaGlsZHJlbkRlbyA9IG5ldyBBcnJheTxEYXRhRXhjaGFuZ2VPYmplY3Q+KCk7XHJcbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIG9iai5DaGlsZHJlbkRlbykge1xyXG4gICAgICAgICAgICBkZW8uQ2hpbGRyZW5EZW8ucHVzaChEYXRhRXhjaGFuZ2VPYmplY3QuY29weShpdGVtKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRlby5SZXBlYXRCYXNlcyA9IG5ldyBBcnJheTxSZXBlYXRCYXNpcz4oKTtcclxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2Ygb2JqLlJlcGVhdEJhc2VzKSB7XHJcbiAgICAgICAgICAgIGRlby5SZXBlYXRCYXNlcy5wdXNoKFJlcGVhdEJhc2lzLmNvcHkoaXRlbSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGVvO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==