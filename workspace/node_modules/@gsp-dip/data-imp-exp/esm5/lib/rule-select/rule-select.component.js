/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, TemplateRef, ViewChild, Output, EventEmitter, Injector, ComponentFactoryResolver } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { RuleFileType } from './RuleFileType';
import { HttpClient } from '@angular/common/http';
import { DataIEUtils } from '../service/Utils/DataIEUtils';
import { NotifyService } from '@farris/ui-notify';
import { BsModalService } from "@farris/ui-modal";
import { MessagerService } from "@farris/ui-messager";
import { ExtendComponent1Component } from '../bakcomponents/extend-component1/extend-component1.component';
var RuleSelectComponent = /** @class */ (function () {
    function RuleSelectComponent(http, notify, injector, modalService, msgService, resolver) {
        var _this = this;
        this.http = http;
        this.notify = notify;
        this.injector = injector;
        this.modalService = modalService;
        this.msgService = msgService;
        this.resolver = resolver;
        this.closeModal = new EventEmitter();
        this.okModal = new EventEmitter();
        // 规则ID 该id为表单上配置的规则id
        this.ruleId = '';
        this.voId = '';
        this.RuleMgrsData = [];
        this.fileTypes = [
            { label: 'Office Excel97-2003(*.xls)', value: RuleFileType[0] },
            { label: 'Office Excel Macro(*.xlsm)', value: RuleFileType[1] },
            { label: 'Office Excel(*.xlsx)', value: RuleFileType[2] },
            { label: 'WPS Table(*.et)', value: RuleFileType[3] },
            { label: 'WPS Table(Template File)(*.ett)', value: RuleFileType[4] },
            { label: 'XML Table(*.xml)', value: RuleFileType[5] },
            { label: 'PDF File(*.pdf)', value: RuleFileType[6] },
            { label: 'CSV File(*.csv)', value: RuleFileType[7] }
        ];
        this.RuleMgrsColumns = [];
        DataIEUtils.getTranslateValue(http).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.i18nResouce = res;
            _this.ie_cancel = res['ie_cancel'];
            _this.ie_ok = res['ie_ok'];
            _this.ruleselect_code = res['ruleselect_code'];
            _this.ruleselect_name = res['ruleselect_name'];
            _this.ruleselect_rulesource = res['ruleselect_rulesource'];
            _this.ruleselect_custom = res['ruleselect_custom'];
            _this.ruleselect_syspreset = res['ruleselect_syspreset'];
            _this.ruleselect_billcategory = res['ruleselect_billcategory'];
            _this.ruleselect_creator = res['ruleselect_creator'];
            _this.ruleselect_filetype = res['ruleselect_filetype'];
            _this.ruleselect_selectrulenotify = res['ruleselect_selectrulenotify'];
            _this.ruleselect_updatetime = res['ruleselect_updatetime'];
        }));
    }
    /**
     * @return {?}
     */
    RuleSelectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ruleSourceType = [
            { label: this.i18nResouce['product_preset'], value: 'ProductPreset' },
            { label: this.i18nResouce['project_define'], value: 'ProjectDefine' },
            { label: this.i18nResouce['user_custom'], value: 'UserCustom' }
        ];
        this.RuleMgrsColumns = [
            { field: 'code', width: 180, title: this.ruleselect_code, showTips: true, halign: 'center', align: 'center', sortable: true },
            { field: 'name', width: 180, title: this.ruleselect_name, showTips: true, halign: 'center', align: 'center', sortable: true },
            // {
            //   field: 'ruleSourceType', width: 100, title: this.ruleselect_rulesource, showTips: true, halign: 'center', align: 'center', sortable: true,
            //   formatter: { type: 'enum', options: { valueField: 'value', textField: 'label', data: ruleSourceType } }
            // },
            {
                field: 'sysPreset', width: 100, title: this.ruleselect_rulesource, halign: 'center', align: 'center', sortable: true,
                formatter: { type: 'boolean', options: { trueText: this.ruleselect_syspreset, falseText: this.ruleselect_custom } }
            },
            // { field: 'bizEntityName', width: 150, title: '数据实体', halign: 'center', align: 'center', sortable: true },
            {
                field: 'fileType', width: 180, title: this.ruleselect_filetype, showTips: true, halign: 'center', align: 'center', sortable: true,
                formatter: { type: 'enum', options: { valueField: 'value', textField: 'label', data: this.fileTypes } }
            },
            { field: 'lastModifiedTime', width: 150, title: this.ruleselect_updatetime, showTips: true, halign: 'center', align: 'center', sortable: true }
            // {
            //   field: 'operation',
            //   width: 130,
            //   halign: 'center',
            //   align: 'center',
            //   title: this.i18nResouce['operation'],
            //   template: this.columnOperation
            // }
            // { field: 'creator', width: 150, title: this.ruleselect_creator, halign: 'center', align: 'center', sortable: true }
        ];
    };
    /**
     * @param {?} ctx
     * @return {?}
     */
    RuleSelectComponent.prototype.createRuleExtend = /**
     * @param {?} ctx
     * @return {?}
     */
    function (ctx) {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/dip/v1.0/dataIeRuleManage/createRuleExtendInfo/' + ctx.rowData.id;
        this.http.get(url).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var compFactory = _this.resolver.resolveComponentFactory(ExtendComponent1Component);
            /** @type {?} */
            var compRef = compFactory.create(_this.injector);
            compRef.instance.dataIeRuleExtendOriginal = res;
            /** @type {?} */
            var modalConfig = {
                title: '导入模板配置',
                width: 750,
                height: 650,
                buttons: compRef.instance.modalFooter,
                showHeader: true,
                showMaxButton: false,
                showButtons: true
            };
            /** @type {?} */
            var dialog = _this.modalService.show(compRef, modalConfig);
            compRef.instance.closeModal.subscribe((/**
             * @return {?}
             */
            function () {
                dialog.close();
            }));
            compRef.instance.okModal.subscribe((/**
             * @param {?} dataIeRuleExtend
             * @return {?}
             */
            function (dataIeRuleExtend) {
                /** @type {?} */
                var idx = _this.RuleMgrsData.findIndex((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e.id === dataIeRuleExtend.id; }));
                if (idx >= 0) {
                    _this.RuleMgrsData[idx] = dataIeRuleExtend;
                    _this.RuleMgrsGrid.refresh();
                }
                else {
                    _this.RuleMgrsData.push(dataIeRuleExtend);
                }
                dialog.close();
            }));
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.notify.error(error.error.Message);
            console.log(error.error.Message);
        }));
    };
    /**
     * @param {?} ctx
     * @return {?}
     */
    RuleSelectComponent.prototype.updateRule = /**
     * @param {?} ctx
     * @return {?}
     */
    function (ctx) {
    };
    /**
     * @param {?} ctx
     * @return {?}
     */
    RuleSelectComponent.prototype.deleteRule = /**
     * @param {?} ctx
     * @return {?}
     */
    function (ctx) {
    };
    /**
     * @return {?}
     */
    RuleSelectComponent.prototype.okHandler = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var selectedRow = this.RuleMgrsGrid.selectedRow;
        if (selectedRow === null) {
            this.notify.info(this.ruleselect_selectrulenotify);
            return;
        }
        /** @type {?} */
        var url = '/api/runtime/dip/v1.0/dataIeRuleManage/updateConfigRule';
        /** @type {?} */
        var body = {
            ruleId: this.ruleId,
            voId: this.voId,
            ruleType: this.ruleType,
            currentRuleId: selectedRow.id
        };
        this.http.post(url, body).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            console.log(res.message);
            _this.okModal.emit(selectedRow.data);
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.notify.error(error.error.Message);
            console.log(error.error.Message);
        }));
    };
    /**
     * @return {?}
     */
    RuleSelectComponent.prototype.cancelHandler = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    RuleSelectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'thd-rule-select',
                    template: "<div class=\"d-flex flex-fill\" style=\"height:100%;\">\n  <farris-datagrid #RuleMgrsGrid id=\"rule-mgrs-data\" [fit]=\"true\" [fitColumns]=\"true\" [columns]=\"RuleMgrsColumns\"\n                   [pagination]=\"false\"\n                   [showLineNumber]=\"true\" [keepSelect]=\"true\" [sizeType]=\"'sm'\" [data]=\"RuleMgrsData\">\n  </farris-datagrid>\n  <ng-template #columnOperation let-ctx>\n    <a *ngIf=\"ctx.rowData.ruleSourceType !== 'UserCustom'\" href=\"javascript: void(0);\" (click)=\"createRuleExtend(ctx)\">\u521B\u5EFA\u6269\u5C55</a>\n    <div *ngIf=\"ctx.rowData.ruleSourceType === 'UserCustom'\">\n      <a href=\"javascript: void(0);\" (click)=\"updateRule(ctx)\">\u4FEE\u6539</a>\n      &nbsp;&nbsp;\n      <a href=\"javascript: void(0);\" (click)=\"deleteRule(ctx)\">\u5220\u9664</a>\n    </div>\n\n  </ng-template>\n</div>\n\n<ng-template #selectFooter>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancelHandler()\">{{ie_cancel}}</button>\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"okHandler()\">{{ie_ok}}</button>\n</ng-template>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    RuleSelectComponent.ctorParameters = function () { return [
        { type: HttpClient },
        { type: NotifyService },
        { type: Injector },
        { type: BsModalService },
        { type: MessagerService },
        { type: ComponentFactoryResolver }
    ]; };
    RuleSelectComponent.propDecorators = {
        RuleMgrsGrid: [{ type: ViewChild, args: ['RuleMgrsGrid',] }],
        modalFooter: [{ type: ViewChild, args: ['selectFooter',] }],
        columnOperation: [{ type: ViewChild, args: ['columnOperation',] }],
        closeModal: [{ type: Output }],
        okModal: [{ type: Output }]
    };
    return RuleSelectComponent;
}());
export { RuleSelectComponent };
if (false) {
    /** @type {?} */
    RuleSelectComponent.prototype.RuleMgrsGrid;
    /** @type {?} */
    RuleSelectComponent.prototype.modalFooter;
    /** @type {?} */
    RuleSelectComponent.prototype.columnOperation;
    /** @type {?} */
    RuleSelectComponent.prototype.closeModal;
    /** @type {?} */
    RuleSelectComponent.prototype.okModal;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleId;
    /** @type {?} */
    RuleSelectComponent.prototype.voId;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleType;
    /** @type {?} */
    RuleSelectComponent.prototype.RuleMgrsData;
    /** @type {?} */
    RuleSelectComponent.prototype.fileTypes;
    /** @type {?} */
    RuleSelectComponent.prototype.RuleMgrsColumns;
    /** @type {?} */
    RuleSelectComponent.prototype.i18nResouce;
    /** @type {?} */
    RuleSelectComponent.prototype.ie_cancel;
    /** @type {?} */
    RuleSelectComponent.prototype.ie_ok;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_code;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_name;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_rulesource;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_syspreset;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_custom;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_billcategory;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_creator;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_filetype;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_selectrulenotify;
    /** @type {?} */
    RuleSelectComponent.prototype.ruleselect_updatetime;
    /**
     * @type {?}
     * @private
     */
    RuleSelectComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    RuleSelectComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    RuleSelectComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    RuleSelectComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    RuleSelectComponent.prototype.msgService;
    /**
     * @type {?}
     * @private
     */
    RuleSelectComponent.prototype.resolver;
}
//# sourceMappingURL=data:application/json;base64,