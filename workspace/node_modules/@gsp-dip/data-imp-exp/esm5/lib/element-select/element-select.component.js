/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { DataIEUtils } from '../service/Utils/DataIEUtils';
var ElementSelectComponent = /** @class */ (function () {
    function ElementSelectComponent(http) {
        var _this = this;
        this.http = http;
        this.cols = [];
        this.selectedKeys = [];
        this.newSelectedKeys = [];
        // public isNewExpanded = true;
        this.keys = [];
        this.newKeys = [];
        this.Model = null;
        this.CustomModel = null;
        this.InnerModel = null;
        this.TreeData = null;
        this.NewData = null;
        this.isExpanded = (/**
         * @param {?} dataItem
         * @param {?} index
         * @return {?}
         */
        function (dataItem, index) {
            return _this.keys.indexOf(index) > -1;
        });
        this.isNewExpanded = (/**
         * @param {?} dataItem
         * @param {?} index
         * @return {?}
         */
        function (dataItem, index) {
            return _this.newKeys.indexOf(index) > -1;
        });
        DataIEUtils.getTranslateValue(http).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.data_entity = res['data_entity'];
            _this.selected_item = res['selected_item'];
        }));
    }
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        //暂时屏蔽
        // this.checkRightData();
        this.TreeData = this.OrganizeLeftTreeOriginal();
        this.NewData = this.OrganizeRightTreeOriginal();
    };
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.checkRightData = /**
     * @return {?}
     */
    function () {
        if (this.CustomModel !== null) {
            /** @type {?} */
            var mainObj = this.Model['MainObject'];
            /** @type {?} */
            var elements = mainObj['Elements'];
            /** @type {?} */
            var customMainObj = this.CustomModel['MainObject'];
            /** @type {?} */
            var customElements_1 = customMainObj['Elements'];
            var _loop_1 = function (i) {
                /** @type {?} */
                var ele = customElements_1[i];
                /** @type {?} */
                var idx = elements.findIndex((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) { return e['ID'] === ele['ID']; }));
                if (idx < 0) {
                    customElements_1.splice(i, 1);
                    i--;
                }
                out_i_1 = i;
            };
            var out_i_1;
            for (var i = 0; i < customElements_1.length; i++) {
                _loop_1(i);
                i = out_i_1;
            }
        }
    };
    // 组织右侧树，将模型转换为可以展示的Json结构。
    // 组织右侧树，将模型转换为可以展示的Json结构。
    /**
     * @private
     * @return {?}
     */
    ElementSelectComponent.prototype.OrganizeRightTreeOriginal = 
    // 组织右侧树，将模型转换为可以展示的Json结构。
    /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var tree = [];
        if (this.CustomModel !== null) {
            /** @type {?} */
            var mainObj = this.CustomModel['MainObject'];
            tree.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, true) });
        }
        else {
            /** @type {?} */
            var mainObj = this.Model['MainObject'];
            tree.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, false) });
        }
        return tree;
    };
    // 组织左侧树
    // 组织左侧树
    /**
     * @private
     * @return {?}
     */
    ElementSelectComponent.prototype.OrganizeLeftTreeOriginal = 
    // 组织左侧树
    /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var tree = [];
        if (this.CustomModel !== null) {
            /** @type {?} */
            var mainObj = this.Model['MainObject'];
            /** @type {?} */
            var customMainObj = this.CustomModel['MainObject'];
            tree.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OraganizeMinusObj(mainObj, customMainObj) });
        }
        else {
            /** @type {?} */
            var mainObj = this.Model['MainObject'];
            tree.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, true) });
        }
        return tree;
    };
    // 组织列，customObj：从数据库中获取的对象，obj：外面传入的对象。
    // 组织列，customObj：从数据库中获取的对象，obj：外面传入的对象。
    /**
     * @private
     * @param {?} obj
     * @param {?} customObj
     * @return {?}
     */
    ElementSelectComponent.prototype.OraganizeMinusObj = 
    // 组织列，customObj：从数据库中获取的对象，obj：外面传入的对象。
    /**
     * @private
     * @param {?} obj
     * @param {?} customObj
     * @return {?}
     */
    function (obj, customObj) {
        var _this = this;
        // const items = [];
        // obj['Elements'].forEach(ele => {
        //   const customEle = customObj['Elements'].find(t => t['ID'] === ele['ID']);
        //   if (customEle === null || customEle === undefined) {
        //     if (ele['UdtElements'] !== null && ele['UdtElements'] !== undefined && ele['UdtElements'].length > 0) {
        //       const udtItems = this.OrganizeUdtElements(ele['UdtElements'], customEle['UdtElements']);
        //     } else {
        //       items.push({id: ele['ID'], text: ele['Name'], code: ele['Code'], order: ele['Order']});
        //     }
        //   }
        // });
        /** @type {?} */
        var items = this.OrganizeElementsWithUdtMinus(obj['Elements'], customObj['Elements']);
        if (obj['ChildrenDeo'].length > 0) {
            obj['ChildrenDeo'].forEach((/**
             * @param {?} deo
             * @return {?}
             */
            function (deo) {
                /** @type {?} */
                var customChildDeo = customObj['ChildrenDeo'].find((/**
                 * @param {?} t
                 * @return {?}
                 */
                function (t) { return t['ID'] === deo['ID']; }));
                items.push({ id: deo['ID'], code: deo['Code'], text: deo['FileObjectName'], items: _this.OraganizeMinusObj(deo, customChildDeo) });
            }));
        }
        return items;
    };
    // 获取左右树udt字段的差
    // 获取左右树udt字段的差
    /**
     * @private
     * @param {?} newUdtEles
     * @param {?} udtEles
     * @return {?}
     */
    ElementSelectComponent.prototype.OrganizeElementsWithUdtMinus = 
    // 获取左右树udt字段的差
    /**
     * @private
     * @param {?} newUdtEles
     * @param {?} udtEles
     * @return {?}
     */
    function (newUdtEles, udtEles) {
        var _this = this;
        /** @type {?} */
        var items = [];
        newUdtEles.forEach((/**
         * @param {?} ele
         * @return {?}
         */
        function (ele) {
            /** @type {?} */
            var customEle = udtEles.find((/**
             * @param {?} t
             * @return {?}
             */
            function (t) { return t['ID'] === ele['ID']; }));
            if (customEle === null || customEle === undefined) {
                if (ele['UdtElements'] !== null && ele['UdtElements'] !== undefined && ele['UdtElements'].length > 0) {
                    /** @type {?} */
                    var udtItems = _this.OrganizeElementsWithUdt(ele['UdtElements']);
                    if (udtItems.length > 0) {
                        items.push({ id: ele['ID'], text: ele['FileElementName'], code: ele['Code'], order: ele['Order'], items: udtItems });
                    }
                }
                else {
                    items.push({ id: ele['ID'], text: ele['FileElementName'], code: ele['Code'], order: ele['Order'] });
                }
            }
            else {
                if (ele['UdtElements'] !== null && ele['UdtElements'] !== undefined && ele['UdtElements'].length > 0) {
                    /** @type {?} */
                    var udtItems = _this.OrganizeElementsWithUdtMinus(ele['UdtElements'], customEle['UdtElements']);
                    if (udtItems.length > 0) {
                        items.push({ id: ele['ID'], text: ele['FileElementName'], code: ele['Code'], order: ele['Order'], items: udtItems });
                    }
                }
            }
        }));
        return items;
    };
    // 添加子对象Json串
    // private OrganizeChildObjJson(obj): any[] {
    //   const items = [];
    //   if (obj['ChildrenDeo'].length > 0) {
    //     obj['ChildrenDeo'].forEach(deo => items.push({id: deo['ID'], code: deo['Code'], text: deo['Name'],
    //     items: this.OrganizeChildObjJson(deo)}));
    //   }
    //   return items;
    // }
    // 添加对象Json串
    // 添加子对象Json串
    // private OrganizeChildObjJson(obj): any[] {
    //   const items = [];
    //   if (obj['ChildrenDeo'].length > 0) {
    //     obj['ChildrenDeo'].forEach(deo => items.push({id: deo['ID'], code: deo['Code'], text: deo['Name'],
    //     items: this.OrganizeChildObjJson(deo)}));
    //   }
    //   return items;
    // }
    // 添加对象Json串
    /**
     * @private
     * @param {?} obj
     * @param {?} addEle
     * @return {?}
     */
    ElementSelectComponent.prototype.OrganizeObjJson = 
    // 添加子对象Json串
    // private OrganizeChildObjJson(obj): any[] {
    //   const items = [];
    //   if (obj['ChildrenDeo'].length > 0) {
    //     obj['ChildrenDeo'].forEach(deo => items.push({id: deo['ID'], code: deo['Code'], text: deo['Name'],
    //     items: this.OrganizeChildObjJson(deo)}));
    //   }
    //   return items;
    // }
    // 添加对象Json串
    /**
     * @private
     * @param {?} obj
     * @param {?} addEle
     * @return {?}
     */
    function (obj, addEle) {
        var _this = this;
        /** @type {?} */
        var items = [];
        if (addEle) {
            items = this.OrganizeElementsWithUdt(obj['Elements']);
            // obj['Elements'].forEach(ele => items.push({id: ele['ID'], text: ele['Name'], code: ele['Code'], order: ele['Order']}));
        }
        if (obj['ChildrenDeo'].length > 0) {
            obj['ChildrenDeo'].forEach((/**
             * @param {?} deo
             * @return {?}
             */
            function (deo) { return items.push({
                id: deo['ID'], code: deo['Code'], text: deo['FileObjectName'],
                items: _this.OrganizeObjJson(deo, addEle)
            }); }));
        }
        return items;
    };
    /**
     * @private
     * @param {?} eles
     * @return {?}
     */
    ElementSelectComponent.prototype.OrganizeElementsWithUdt = /**
     * @private
     * @param {?} eles
     * @return {?}
     */
    function (eles) {
        var _this = this;
        /** @type {?} */
        var items = [];
        eles.forEach((/**
         * @param {?} ele
         * @return {?}
         */
        function (ele) {
            if (ele['UdtElements'].length > 0) {
                /** @type {?} */
                var udtItems = _this.OrganizeElementsWithUdt(ele['UdtElements']);
                if (udtItems.length > 0) {
                    items.push({ id: ele['ID'], text: ele['FileElementName'], code: ele['Code'], order: ele['Order'], items: udtItems });
                }
                else {
                    items.push({ id: ele['ID'], text: ele['FileElementName'], code: ele['Code'], order: ele['Order'] });
                }
            }
            else {
                items.push({ id: ele['ID'], text: ele['FileElementName'], code: ele['Code'], order: ele['Order'] });
            }
        }));
        return items;
    };
    // 右移
    // 右移
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.RightMove = 
    // 右移
    /**
     * @return {?}
     */
    function () {
        if (this.selectedKeys.length === 0) {
            return;
        }
        /** @type {?} */
        var indexes = this.GetIndexes(this.selectedKeys[0]);
        this.MoveData(indexes, this.TreeData, '', this.NewData);
    };
    // 左移
    // 左移
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.LeftMove = 
    // 左移
    /**
     * @return {?}
     */
    function () {
        if (this.newSelectedKeys.length === 0) {
            return;
        }
        /** @type {?} */
        var indexes = this.GetIndexes(this.newSelectedKeys[0]);
        this.MoveData(indexes, this.NewData, '', this.TreeData);
    };
    /**
     * @private
     * @param {?} sKeys
     * @return {?}
     */
    ElementSelectComponent.prototype.GetIndexes = /**
     * @private
     * @param {?} sKeys
     * @return {?}
     */
    function (sKeys) {
        /** @type {?} */
        var arr = sKeys.split('_');
        /** @type {?} */
        var indexes = [];
        arr.forEach((/**
         * @param {?} element
         * @return {?}
         */
        function (element) {
            indexes.push(Number(element));
        }));
        return arr;
    };
    /**
     * @private
     * @param {?} indexes
     * @param {?} data
     * @param {?} objId
     * @param {?} newData
     * @return {?}
     */
    ElementSelectComponent.prototype.MoveData = /**
     * @private
     * @param {?} indexes
     * @param {?} data
     * @param {?} objId
     * @param {?} newData
     * @return {?}
     */
    function (indexes, data, objId, newData) {
        /** @type {?} */
        var index = indexes.shift();
        if (indexes.length > 0) {
            this.MoveData(indexes, data[index].items, data[index].id, newData);
        }
        else {
            if (data[index].order !== undefined) {
                /** @type {?} */
                var result = this.AddData(objId, newData, data[index]);
                if (!result) {
                    return;
                }
                data.splice(index, 1);
            }
        }
    };
    /**
     * @private
     * @param {?} mainId
     * @param {?} newData
     * @param {?} data
     * @return {?}
     */
    ElementSelectComponent.prototype.AddData = /**
     * @private
     * @param {?} mainId
     * @param {?} newData
     * @param {?} data
     * @return {?}
     */
    function (mainId, newData, data) {
        // 先找到所属对象
        /** @type {?} */
        var obj = this.FindObjAndIndex(mainId, newData, '');
        if (obj === null) {
            return false;
        }
        // 找到要插入的位置
        /** @type {?} */
        var index = this.FindColIndex(obj.dataItem.items, data.order);
        obj.dataItem.items.splice(index, 0, data);
        this.handleNewExpand(obj);
        return true;
    };
    /**
     * @private
     * @param {?} mainId
     * @param {?} data
     * @param {?} parentIndex
     * @return {?}
     */
    ElementSelectComponent.prototype.FindObjAndIndex = /**
     * @private
     * @param {?} mainId
     * @param {?} data
     * @param {?} parentIndex
     * @return {?}
     */
    function (mainId, data, parentIndex) {
        /** @type {?} */
        var result = null;
        // tslint:disable-next-line:prefer-for-of
        for (var i = 0; i < data.length; i++) {
            if (data[i].id === mainId) {
                if (parentIndex !== '') {
                    result = { index: parentIndex + '_' + i.toString(), dataItem: data[i] };
                }
                else {
                    result = { index: i.toString(), dataItem: data[i] };
                }
            }
            else if (data[i].items !== undefined && data[i].items.length > 0) {
                result = this.FindObjAndIndex(mainId, data[i].items, i.toString());
            }
            if (result == null) {
                continue;
            }
            else {
                return result;
            }
        }
        return result;
    };
    /**
     * @private
     * @param {?} items
     * @param {?} order
     * @return {?}
     */
    ElementSelectComponent.prototype.FindColIndex = /**
     * @private
     * @param {?} items
     * @param {?} order
     * @return {?}
     */
    function (items, order) {
        /** @type {?} */
        var index = -1;
        if (items.length === 0) {
            return 0;
        }
        for (var i = 0; i < items.length; i++) {
            if (items[i].order < order) {
                index = i;
            }
            else {
                break;
            }
        }
        return index + 1;
    };
    /**
     * @param {?} node
     * @return {?}
     */
    ElementSelectComponent.prototype.handleCollapse = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        this.keys = this.keys.filter((/**
         * @param {?} k
         * @return {?}
         */
        function (k) { return k !== node.index; }));
    };
    /**
     * @param {?} node
     * @return {?}
     */
    ElementSelectComponent.prototype.handleExpand = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        console.log(node);
        this.keys = this.keys.concat(node.index);
    };
    /**
     * @param {?} node
     * @return {?}
     */
    ElementSelectComponent.prototype.handleNewCollapse = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        this.newKeys = this.newKeys.filter((/**
         * @param {?} k
         * @return {?}
         */
        function (k) { return k !== node.index; }));
    };
    /**
     * @param {?} node
     * @return {?}
     */
    ElementSelectComponent.prototype.handleNewExpand = /**
     * @param {?} node
     * @return {?}
     */
    function (node) {
        console.log(node);
        this.newKeys = this.newKeys.concat(node.index);
    };
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.RightMoveAll = /**
     * @return {?}
     */
    function () {
        // this.ClearTree(this.TreeData);
        // this.FillTree(this.NewData);
        this.TreeData = [];
        /** @type {?} */
        var mainObj = this.Model['MainObject'];
        this.TreeData.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, false) });
        // this.FillTree(this.TreeData);
        this.NewData = [];
        this.NewData.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, true) });
    };
    /**
     * @param {?} t
     * @return {?}
     */
    ElementSelectComponent.prototype.FillTree = /**
     * @param {?} t
     * @return {?}
     */
    function (t) {
        t = [];
        /** @type {?} */
        var mainObj = this.Model['MainObject'];
        t.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, true) });
    };
    /**
     * @param {?} t
     * @return {?}
     */
    ElementSelectComponent.prototype.ClearTree = /**
     * @param {?} t
     * @return {?}
     */
    function (t) {
        // t = [];
        // const mainObj = this.Model['MainObject'];
        // t.push({id: mainObj['ID'], code: mainObj['Code'], text: mainObj['Name'], items: this.OrganizeObjJson(mainObj, false)});
        t = [];
    };
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.LeftMoveAll = /**
     * @return {?}
     */
    function () {
        // this.ClearTree(this.NewData);
        this.NewData = [];
        /** @type {?} */
        var mainObj = this.Model['MainObject'];
        this.NewData.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, false) });
        // this.FillTree(this.TreeData);
        this.TreeData = [];
        this.TreeData.push({ id: mainObj['ID'], code: mainObj['Code'], text: mainObj['FileObjectName'], items: this.OrganizeObjJson(mainObj, true) });
    };
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.MoveUp = /**
     * @return {?}
     */
    function () {
        if (this.newSelectedKeys.length === 0) {
            return;
        }
        /** @type {?} */
        var indexes = this.GetIndexes(this.newSelectedKeys[0]);
        /** @type {?} */
        var lastIndex = indexes.pop();
        /** @type {?} */
        var items = this.GetItems(indexes, this.NewData);
        if (items[lastIndex].order === undefined || items[lastIndex].order === 0) {
            return;
        }
        /** @type {?} */
        var temp = items[lastIndex].order;
        items[lastIndex].order = items[lastIndex - 1].order;
        items[lastIndex - 1].order = temp;
        items.splice(lastIndex - 1, 0, items[lastIndex]);
        items.splice(Number(lastIndex) + 1, 1);
        /** @type {?} */
        var parentIndex = this.newSelectedKeys[0];
        this.newSelectedKeys[0] = parentIndex.substring(0, parentIndex.lastIndexOf('_') + 1) + (lastIndex - 1);
    };
    /**
     * @private
     * @param {?} indexes
     * @param {?} data
     * @return {?}
     */
    ElementSelectComponent.prototype.GetItems = /**
     * @private
     * @param {?} indexes
     * @param {?} data
     * @return {?}
     */
    function (indexes, data) {
        if (indexes.length === 0) {
            return data;
        }
        /** @type {?} */
        var index = indexes.shift();
        return this.GetItems(indexes, data[index].items);
    };
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.MoveDown = /**
     * @return {?}
     */
    function () {
        if (this.newSelectedKeys.length === 0) {
            return;
        }
        /** @type {?} */
        var indexes = this.GetIndexes(this.newSelectedKeys[0]);
        /** @type {?} */
        var lastIndex = indexes.pop();
        /** @type {?} */
        var items = this.GetItems(indexes, this.NewData);
        if (items.length === lastIndex || items[Number(lastIndex) + 1] === undefined || items[Number(lastIndex) + 1].order === undefined
            || items[lastIndex].order === undefined) {
            return;
        }
        /** @type {?} */
        var temp = items[lastIndex].order;
        items[lastIndex].order = items[Number(lastIndex) + 1].order;
        items[Number(lastIndex) + 1].order = temp;
        items.splice(Number(lastIndex) + 2, 0, items[lastIndex]);
        items.splice(lastIndex, 1);
        /** @type {?} */
        var parentIndex = this.newSelectedKeys[0];
        this.newSelectedKeys[0] = parentIndex.substring(0, parentIndex.lastIndexOf('_') + 1) + (Number(lastIndex) + 1);
    };
    /**
     * @return {?}
     */
    ElementSelectComponent.prototype.Save = /**
     * @return {?}
     */
    function () {
        // 传入的模型的主对象
        if (this.InnerModel == null) {
            this.InnerModel = this.Model;
        }
        /** @type {?} */
        var mainObj = this.InnerModel['MainObject'];
        /** @type {?} */
        var newMainObj = this.NewData[0];
        /** @type {?} */
        var preMainObj = this.Model['MainObject'];
        mainObj['Elements'] = this.OrganizeElements(preMainObj['Elements'], newMainObj);
        this.OrganizeChildrenDeo(mainObj, newMainObj, preMainObj);
    };
    /**
     * @private
     * @param {?} obj
     * @param {?} newObj
     * @param {?} preMainObj
     * @return {?}
     */
    ElementSelectComponent.prototype.OrganizeChildrenDeo = /**
     * @private
     * @param {?} obj
     * @param {?} newObj
     * @param {?} preMainObj
     * @return {?}
     */
    function (obj, newObj, preMainObj) {
        var _this = this;
        if (obj['ChildrenDeo'] !== undefined && obj['ChildrenDeo'].length > 0) {
            /** @type {?} */
            var newChildrenDeo_1 = [];
            obj['ChildrenDeo'].forEach((/**
             * @param {?} t
             * @return {?}
             */
            function (t) {
                /** @type {?} */
                var childDeo = newObj['items'].find((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item['id'] === t['ID']; }));
                /** @type {?} */
                var preChildObj = preMainObj['ChildrenDeo'].find((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item['ID'] === t['ID']; }));
                if (childDeo !== null && childDeo !== undefined) {
                    t['Elements'] = _this.OrganizeElements(preChildObj['Elements'], childDeo);
                    if (t['Elements'] !== undefined && t['Elements'] !== null) {
                        newChildrenDeo_1.push(t);
                    }
                }
                _this.OrganizeChildrenDeo(t, childDeo, preChildObj);
            }));
            obj['ChildrenDeo'] = newChildrenDeo_1;
        }
    };
    // 保存时组织列, obj: 外部传入的列，newObj: 编辑后新的列
    // 保存时组织列, obj: 外部传入的列，newObj: 编辑后新的列
    /**
     * @private
     * @param {?} obj
     * @param {?} newObj
     * @return {?}
     */
    ElementSelectComponent.prototype.OrganizeElements = 
    // 保存时组织列, obj: 外部传入的列，newObj: 编辑后新的列
    /**
     * @private
     * @param {?} obj
     * @param {?} newObj
     * @return {?}
     */
    function (obj, newObj) {
        /** @type {?} */
        var newEles = newObj['items'];
        /** @type {?} */
        var eles = [];
        newEles.forEach((/**
         * @param {?} t
         * @return {?}
         */
        function (t) {
            /** @type {?} */
            var ele = obj.find((/**
             * @param {?} e
             * @return {?}
             */
            function (e) { return e['ID'] === t['id']; }));
            if (ele !== undefined && ele !== null) {
                eles.push(ele);
            }
        }));
        return eles;
    };
    ElementSelectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-element-select',
                    template: "<div *ngIf=\"Model\" class=\"row inner\">\r\n  <div class=\"col-lg-5 col-md-5\">\r\n    <div>\r\n      <div>\r\n        {{data_entity}}\r\n      </div>\r\n      \r\n      <div class=\"hasborder\" style=\"height:330px;overflow-y:auto\">\r\n        <kendo-treeview\r\n          [nodes]=\"TreeData\"\r\n          textField=\"text\"\r\n          kendoTreeViewExpandable\r\n          kendoTreeViewSelectable\r\n          kendoTreeViewHierarchyBinding\r\n          childrenField=\"items\"\r\n          [(selectedKeys)]=\"selectedKeys\"\r\n          [isExpanded]=\"isExpanded\"\r\n          (collapse)=\"handleCollapse($event)\"\r\n          (expand)=\"handleExpand($event)\"\r\n        >\r\n        \r\n        </kendo-treeview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"col-lg-2 col-md-2 btn-group-vertical\" role=\"group\" aria-label=\"...\">\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"RightMove()\">></button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"LeftMove()\"><</button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"RightMoveAll()\">>></button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"LeftMoveAll()\"><<</button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"MoveUp()\">^</button>\r\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"MoveDown()\">v</button>\r\n  </div>\r\n  <div class=\"col-lg-5 col-md-5\">\r\n    <div>\r\n      <div>\r\n        {{selected_item}}\r\n      </div>\r\n      <div class=\"hasborder\" style=\"height:330px;overflow-y:auto\">\r\n        <kendo-treeview\r\n          [nodes]=\"NewData\"\r\n          textField=\"text\"\r\n          kendoTreeViewExpandable\r\n          kendoTreeViewSelectable\r\n          kendoTreeViewHierarchyBinding\r\n          childrenField=\"items\"\r\n          [(selectedKeys)]=\"newSelectedKeys\"\r\n          [isExpanded]=\"isNewExpanded\"\r\n          (collapse)=\"handleNewCollapse($event)\"\r\n          (expand)=\"handleNewExpand($event)\"\r\n        >\r\n          <ng-template kendoTreeViewNodeTemplate let-dataItem>\r\n            {{dataItem.text}}\r\n            <span></span>\r\n          </ng-template>\r\n        </kendo-treeview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div *ngIf=\"Model\" class=\"row inner\">\r\n\r\n  <multi-select [dataSource]=\"leftTreeData\" [idField]=\"'name'\" [valueField]=\"'type'\" [textField]=\"'name'\" [displayType]=\"'Tree'\"\r\n    [(selectedId)]=\"treeSelectedId\">\r\n    <ng-template farrisTemplate=\"text\" let-data>\r\n      {{ data['name'] }} [ {{ data['type'] }}]\r\n    </ng-template>\r\n  </multi-select>\r\n</div> -->",
                    providers: [],
                    styles: ["kendo-grid-column{line-height:30px}.inner{margin:5px}.btn{width:80px;margin-bottom:5px}.hasborder{border:.5px solid #a9a9a9;height:330px}"]
                }] }
    ];
    /** @nocollapse */
    ElementSelectComponent.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    ElementSelectComponent.propDecorators = {
        Model: [{ type: Input }],
        CustomModel: [{ type: Input }],
        InnerModel: [{ type: Input }]
    };
    return ElementSelectComponent;
}());
export { ElementSelectComponent };
if (false) {
    /** @type {?} */
    ElementSelectComponent.prototype.cols;
    /** @type {?} */
    ElementSelectComponent.prototype.selectedKeys;
    /** @type {?} */
    ElementSelectComponent.prototype.newSelectedKeys;
    /** @type {?} */
    ElementSelectComponent.prototype.keys;
    /** @type {?} */
    ElementSelectComponent.prototype.newKeys;
    /** @type {?} */
    ElementSelectComponent.prototype.Model;
    /** @type {?} */
    ElementSelectComponent.prototype.CustomModel;
    /** @type {?} */
    ElementSelectComponent.prototype.InnerModel;
    /** @type {?} */
    ElementSelectComponent.prototype.TreeData;
    /** @type {?} */
    ElementSelectComponent.prototype.NewData;
    /** @type {?} */
    ElementSelectComponent.prototype.data_entity;
    /** @type {?} */
    ElementSelectComponent.prototype.selected_item;
    /** @type {?} */
    ElementSelectComponent.prototype.isExpanded;
    /** @type {?} */
    ElementSelectComponent.prototype.isNewExpanded;
    /**
     * @type {?}
     * @private
     */
    ElementSelectComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,