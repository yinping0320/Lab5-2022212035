/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { TaskCommentUIState } from './task-comment.uistate';
import { CommonComment } from '../entities/comment';
import { forkJoin } from 'rxjs';
import { HttpService } from '@ecp-caf/caf-common';
var TaskCommentViewModel = /** @class */ (function () {
    function TaskCommentViewModel(uiState, httpSvc) {
        this.uiState = uiState;
        this.httpSvc = httpSvc;
    }
    /**
     * @return {?}
     */
    TaskCommentViewModel.prototype.add = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var newEntity = CommonComment.newEntity();
        newEntity.sortOrder = this.uiState.commentList.length + 1;
        this.uiState.commentList.push(newEntity);
    };
    /**
     * @return {?}
     */
    TaskCommentViewModel.prototype.delete = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.uiState.curComment) {
            /** @type {?} */
            var index = this.uiState.commentList.findIndex(function (c) { return c.id === _this.uiState.curComment.id; });
            if (index > -1) {
                this.uiState.commentList.splice(index, 1);
            }
        }
    };
    /**
     * @return {?}
     */
    TaskCommentViewModel.prototype.save = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/commonComments";
        /** @type {?} */
        var deleteIds = this.uiState.originCommentIds.filter(function (id) { return _this.uiState.commentList.findIndex(function (c) { return c.id === id; }) < 0; });
        /** @type {?} */
        var addEntities = this.uiState.commentList.filter(function (item) { return _this.uiState.originCommentIds.indexOf(item.id) < 0; });
        /** @type {?} */
        var changesList = this.uiState.commentList.filter(function (item) { return addEntities.findIndex(function (aItem) { return aItem.id === item.id; }) < 0
            && _this.uiState.changesCommentIds.indexOf(item.id) > -1; });
        return forkJoin(deleteIds.map(function (id) { return _this.httpSvc.delete(url + ("/" + id), null); })
            .concat(changesList.map(function (change) { return _this.httpSvc.patch(url, change); }))
            .concat(addEntities.map(function (add) { return _this.httpSvc.post(url, add); })));
    };
    TaskCommentViewModel.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    TaskCommentViewModel.ctorParameters = function () { return [
        { type: TaskCommentUIState },
        { type: HttpService }
    ]; };
    return TaskCommentViewModel;
}());
export { TaskCommentViewModel };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaskCommentViewModel.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    TaskCommentViewModel.prototype.httpSvc;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1jb21tZW50LnZpZXdtb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2YvdWktY29tbWVudC8iLCJzb3VyY2VzIjpbImxpYi90YXNrLWNvbW1lbnQvdGFzay1jb21tZW50LnZpZXdtb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDcEQsT0FBTyxFQUFjLFFBQVEsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUM1QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFbEQ7SUFFSSw4QkFDWSxPQUEyQixFQUMzQixPQUFvQjtRQURwQixZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQUMzQixZQUFPLEdBQVAsT0FBTyxDQUFhO0lBQ2hDLENBQUM7Ozs7SUFDRCxrQ0FBRzs7O0lBQUg7O1lBQ1UsU0FBUyxHQUFHLGFBQWEsQ0FBQyxTQUFTLEVBQUU7UUFDM0MsU0FBUyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3QyxDQUFDOzs7O0lBQ0QscUNBQU07OztJQUFOO1FBQUEsaUJBT0M7UUFORyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFOztnQkFDbkIsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxFQUFFLEtBQUssS0FBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFuQyxDQUFtQyxDQUFDO1lBQzFGLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFO2dCQUNaLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDN0M7U0FDSjtJQUNMLENBQUM7Ozs7SUFFRCxtQ0FBSTs7O0lBQUo7UUFBQSxpQkFVQzs7WUFUUyxHQUFHLEdBQUcscUNBQXFDOztZQUUzQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBWCxDQUFXLENBQUMsR0FBRyxDQUFDLEVBQXhELENBQXdELENBQUM7O1lBQ2hILFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFsRCxDQUFrRCxDQUFDOztZQUN6RyxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsV0FBVyxDQUFDLFNBQVMsQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxFQUFFLEtBQUssSUFBSSxDQUFDLEVBQUUsRUFBcEIsQ0FBb0IsQ0FBQyxHQUFHLENBQUM7ZUFDN0csS0FBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQURDLENBQ0QsQ0FBQztRQUM1RCxPQUFPLFFBQVEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQUEsRUFBRSxJQUFJLE9BQUEsS0FBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFHLE1BQUksRUFBSSxDQUFBLEVBQUUsSUFBSSxDQUFDLEVBQXpDLENBQXlDLENBQUM7YUFDekUsTUFBTSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLEVBQS9CLENBQStCLENBQUMsQ0FBQzthQUNsRSxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBM0IsQ0FBMkIsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0RSxDQUFDOztnQkE5QkosVUFBVTs7OztnQkFMRixrQkFBa0I7Z0JBR2xCLFdBQVc7O0lBaUNwQiwyQkFBQztDQUFBLEFBL0JELElBK0JDO1NBOUJZLG9CQUFvQjs7Ozs7O0lBRXpCLHVDQUFtQzs7Ozs7SUFDbkMsdUNBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUYXNrQ29tbWVudFVJU3RhdGUgfSBmcm9tICcuL3Rhc2stY29tbWVudC51aXN0YXRlJztcclxuaW1wb3J0IHsgQ29tbW9uQ29tbWVudCB9IGZyb20gJy4uL2VudGl0aWVzL2NvbW1lbnQnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBmb3JrSm9pbiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBIdHRwU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgVGFza0NvbW1lbnRWaWV3TW9kZWwge1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSB1aVN0YXRlOiBUYXNrQ29tbWVudFVJU3RhdGUsXHJcbiAgICAgICAgcHJpdmF0ZSBodHRwU3ZjOiBIdHRwU2VydmljZSkge1xyXG4gICAgfVxyXG4gICAgYWRkKCkge1xyXG4gICAgICAgIGNvbnN0IG5ld0VudGl0eSA9IENvbW1vbkNvbW1lbnQubmV3RW50aXR5KCk7XHJcbiAgICAgICAgbmV3RW50aXR5LnNvcnRPcmRlciA9IHRoaXMudWlTdGF0ZS5jb21tZW50TGlzdC5sZW5ndGggKyAxO1xyXG4gICAgICAgIHRoaXMudWlTdGF0ZS5jb21tZW50TGlzdC5wdXNoKG5ld0VudGl0eSk7XHJcbiAgICB9XHJcbiAgICBkZWxldGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudWlTdGF0ZS5jdXJDb21tZW50KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy51aVN0YXRlLmNvbW1lbnRMaXN0LmZpbmRJbmRleChjID0+IGMuaWQgPT09IHRoaXMudWlTdGF0ZS5jdXJDb21tZW50LmlkKTtcclxuICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudWlTdGF0ZS5jb21tZW50TGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNhdmUoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCB1cmwgPSBgL2FwaS9ydW50aW1lL3dmL3YxLjAvY29tbW9uQ29tbWVudHNgO1xyXG5cclxuICAgICAgICBjb25zdCBkZWxldGVJZHMgPSB0aGlzLnVpU3RhdGUub3JpZ2luQ29tbWVudElkcy5maWx0ZXIoaWQgPT4gdGhpcy51aVN0YXRlLmNvbW1lbnRMaXN0LmZpbmRJbmRleChjID0+IGMuaWQgPT09IGlkKSA8IDApO1xyXG4gICAgICAgIGNvbnN0IGFkZEVudGl0aWVzID0gdGhpcy51aVN0YXRlLmNvbW1lbnRMaXN0LmZpbHRlcihpdGVtID0+IHRoaXMudWlTdGF0ZS5vcmlnaW5Db21tZW50SWRzLmluZGV4T2YoaXRlbS5pZCkgPCAwKTtcclxuICAgICAgICBjb25zdCBjaGFuZ2VzTGlzdCA9IHRoaXMudWlTdGF0ZS5jb21tZW50TGlzdC5maWx0ZXIoaXRlbSA9PiBhZGRFbnRpdGllcy5maW5kSW5kZXgoYUl0ZW0gPT4gYUl0ZW0uaWQgPT09IGl0ZW0uaWQpIDwgMFxyXG4gICAgICAgICAgICAmJiB0aGlzLnVpU3RhdGUuY2hhbmdlc0NvbW1lbnRJZHMuaW5kZXhPZihpdGVtLmlkKSA+IC0xKTtcclxuICAgICAgICByZXR1cm4gZm9ya0pvaW4oZGVsZXRlSWRzLm1hcChpZCA9PiB0aGlzLmh0dHBTdmMuZGVsZXRlKHVybCArIGAvJHtpZH1gLCBudWxsKSlcclxuICAgICAgICAgICAgLmNvbmNhdChjaGFuZ2VzTGlzdC5tYXAoY2hhbmdlID0+IHRoaXMuaHR0cFN2Yy5wYXRjaCh1cmwsIGNoYW5nZSkpKVxyXG4gICAgICAgICAgICAuY29uY2F0KGFkZEVudGl0aWVzLm1hcChhZGQgPT4gdGhpcy5odHRwU3ZjLnBvc3QodXJsLCBhZGQpKSkpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==