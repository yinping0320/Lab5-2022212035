/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
var TaskCommentService = /** @class */ (function () {
    function TaskCommentService(httpSvc) {
        this.httpSvc = httpSvc;
    }
    /**
     * @return {?}
     */
    TaskCommentService.newId = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var S4 = function () { return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1); };
        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());
    };
    /**
     * @return {?}
     */
    TaskCommentService.prototype.getCommentList = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/commonComments";
        return this.httpSvc.get(url);
    };
    /**
     * @return {?}
     */
    TaskCommentService.prototype.addComment = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/commonComments";
        return this.httpSvc.post(url, {});
    };
    /**
      * 获取任务中心配置项
      * @param code 配置项的Code
      */
    /**
     * 获取任务中心配置项
     * @param {?} code 配置项的Code
     * @return {?}
     */
    TaskCommentService.prototype.getTaskCenterConfigByCode = /**
     * 获取任务中心配置项
     * @param {?} code 配置项的Code
     * @return {?}
     */
    function (code) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/task-center-setting/code?code=" + code;
        return this.httpSvc.get(url);
    };
    /**
     * 真正上传附件
     * @param files
     */
    /**
     * 真正上传附件
     * @param {?} files
     * @return {?}
     */
    TaskCommentService.prototype.uploadAttachment = /**
     * 真正上传附件
     * @param {?} files
     * @return {?}
     */
    function (files) {
        /** @type {?} */
        var url = "/api/runtime/dfs/v1.0/doc/commit";
        return this.httpSvc.put(url, files);
    };
    /**
     * 删除附件
     * @param fileDeleteEntity
     */
    /**
     * 删除附件
     * @param {?} fileDeleteEntity
     * @return {?}
     */
    TaskCommentService.prototype.deleteAttachment = /**
     * 删除附件
     * @param {?} fileDeleteEntity
     * @return {?}
     */
    function (fileDeleteEntity) {
        /** @type {?} */
        var url = "/api/runtime/dfs/v1.0/doc";
        return this.httpSvc.delete(url, fileDeleteEntity);
    };
    TaskCommentService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    TaskCommentService.ctorParameters = function () { return [
        { type: HttpService }
    ]; };
    return TaskCommentService;
}());
export { TaskCommentService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaskCommentService.prototype.httpSvc;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1jb21tZW50LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3VpLWNvbW1lbnQvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvdGFzay1jb21tZW50LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSWxEO0lBR0UsNEJBQ1UsT0FBb0I7UUFBcEIsWUFBTyxHQUFQLE9BQU8sQ0FBYTtJQUMxQixDQUFDOzs7O0lBRUUsd0JBQUs7OztJQUFaOztZQUNRLEVBQUUsR0FBRyxjQUFNLE9BQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQS9ELENBQStEO1FBQ2hGLE9BQU8sQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6RixDQUFDOzs7O0lBR0QsMkNBQWM7OztJQUFkOztZQUNRLEdBQUcsR0FBRyxxQ0FBcUM7UUFDakQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7O0lBRUQsdUNBQVU7OztJQUFWOztZQUNRLEdBQUcsR0FBRyxxQ0FBcUM7UUFDakQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVEOzs7UUFHSTs7Ozs7O0lBQ0osc0RBQXlCOzs7OztJQUF6QixVQUEwQixJQUFZOztZQUM5QixHQUFHLEdBQUcsMERBQXdELElBQU07UUFDMUUsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQ7OztPQUdHOzs7Ozs7SUFDSCw2Q0FBZ0I7Ozs7O0lBQWhCLFVBQWlCLEtBQXVCOztZQUNsQyxHQUFHLEdBQUcsa0NBQWtDO1FBQzVDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNILDZDQUFnQjs7Ozs7SUFBaEIsVUFBaUIsZ0JBQWtDOztZQUM3QyxHQUFHLEdBQUcsMkJBQTJCO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFDcEQsQ0FBQzs7Z0JBaERGLFVBQVU7Ozs7Z0JBSkYsV0FBVzs7SUFxRHBCLHlCQUFDO0NBQUEsQUFqREQsSUFpREM7U0FoRFksa0JBQWtCOzs7Ozs7SUFHM0IscUNBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cEhlYWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBGaWxlRGVsZXRlRW50aXR5LCBGaWxlVXBsb2FkRW50aXR5IH0gZnJvbSAnLi4vZW50aXRpZXMvYXR0YWNobWVudCc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBUYXNrQ29tbWVudFNlcnZpY2Uge1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaHR0cFN2YzogSHR0cFNlcnZpY2UsXHJcbiAgKSB7IH1cclxuXHJcbiAgc3RhdGljIG5ld0lkKCkge1xyXG4gICAgY29uc3QgUzQgPSAoKSA9PiAoKCgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwKSB8IDApLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMSk7XHJcbiAgICByZXR1cm4gKFM0KCkgKyBTNCgpICsgJy0nICsgUzQoKSArICctJyArIFM0KCkgKyAnLScgKyBTNCgpICsgJy0nICsgUzQoKSArIFM0KCkgKyBTNCgpKTtcclxuICB9XHJcblxyXG5cclxuICBnZXRDb21tZW50TGlzdCgpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgY29uc3QgdXJsID0gYC9hcGkvcnVudGltZS93Zi92MS4wL2NvbW1vbkNvbW1lbnRzYDtcclxuICAgIHJldHVybiB0aGlzLmh0dHBTdmMuZ2V0KHVybCk7XHJcbiAgfVxyXG5cclxuICBhZGRDb21tZW50KCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCB1cmwgPSBgL2FwaS9ydW50aW1lL3dmL3YxLjAvY29tbW9uQ29tbWVudHNgO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFN2Yy5wb3N0KHVybCwge30pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAqIOiOt+WPluS7u+WKoeS4reW/g+mFjee9rumhuVxyXG4gICAgKiBAcGFyYW0gY29kZSDphY3nva7pobnnmoRDb2RlXHJcbiAgICAqL1xyXG4gIGdldFRhc2tDZW50ZXJDb25maWdCeUNvZGUoY29kZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIGNvbnN0IHVybCA9IGAvYXBpL3J1bnRpbWUvdGFzay92MS4wL3Rhc2stY2VudGVyLXNldHRpbmcvY29kZT9jb2RlPSR7Y29kZX1gO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFN2Yy5nZXQodXJsKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOecn+ato+S4iuS8oOmZhOS7tlxyXG4gICAqIEBwYXJhbSBmaWxlc1xyXG4gICAqL1xyXG4gIHVwbG9hZEF0dGFjaG1lbnQoZmlsZXM6IEZpbGVVcGxvYWRFbnRpdHkpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgbGV0IHVybCA9IGAvYXBpL3J1bnRpbWUvZGZzL3YxLjAvZG9jL2NvbW1pdGA7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwU3ZjLnB1dCh1cmwsIGZpbGVzKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWIoOmZpOmZhOS7tlxyXG4gICAqIEBwYXJhbSBmaWxlRGVsZXRlRW50aXR5IFxyXG4gICAqL1xyXG4gIGRlbGV0ZUF0dGFjaG1lbnQoZmlsZURlbGV0ZUVudGl0eTogRmlsZURlbGV0ZUVudGl0eSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBsZXQgdXJsID0gYC9hcGkvcnVudGltZS9kZnMvdjEuMC9kb2NgO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cFN2Yy5kZWxldGUodXJsLCBmaWxlRGVsZXRlRW50aXR5KTtcclxuICB9XHJcbn1cclxuIl19