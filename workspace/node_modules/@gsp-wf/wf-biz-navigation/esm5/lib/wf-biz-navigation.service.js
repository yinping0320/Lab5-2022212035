/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { translate } from "./services/i18n";
import * as i0 from "@angular/core";
var WfBizNavigationService = /** @class */ (function () {
    function WfBizNavigationService(injector) {
        this.injector = injector;
    }
    /**
     * @param {?} name
     * @return {?}
     */
    WfBizNavigationService.prototype.getI18nValue = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!name) {
            return '';
        }
        /** @type {?} */
        var defaultLang = localStorage.getItem('languageCode');
        /** @type {?} */
        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];
        /** @type {?} */
        var resultVal = '';
        if (name.indexOf('.') === -1) {
            resultVal = langData[name];
        }
        else {
            resultVal = name.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            function (obj, key) {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), langData);
        }
        return resultVal;
    };
    WfBizNavigationService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    WfBizNavigationService.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    /** @nocollapse */ WfBizNavigationService.ngInjectableDef = i0.defineInjectable({ factory: function WfBizNavigationService_Factory() { return new WfBizNavigationService(i0.inject(i0.INJECTOR)); }, token: WfBizNavigationService, providedIn: "root" });
    return WfBizNavigationService;
}());
export { WfBizNavigationService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    WfBizNavigationService.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2YtYml6LW5hdmlnYXRpb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtYml6LW5hdmlnYXRpb24vIiwic291cmNlcyI6WyJsaWIvd2YtYml6LW5hdmlnYXRpb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGlCQUFpQixDQUFDOztBQUUxQztJQUtFLGdDQUFvQixRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO0lBQUksQ0FBQzs7Ozs7SUFFM0MsNkNBQVk7Ozs7SUFBWixVQUFhLElBQVk7UUFDdkIsSUFBSSxDQUFDLElBQUksRUFBRTtZQUFFLE9BQU8sRUFBRSxDQUFDO1NBQUU7O1lBQ25CLFdBQVcsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQzs7WUFDbEQsUUFBUSxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDOztZQUN2RSxTQUFTLEdBQUcsRUFBRTtRQUNsQixJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDNUIsU0FBUyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QjthQUFNO1lBQ0wsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTTs7Ozs7WUFBQyxVQUFDLEdBQUcsRUFBRSxHQUFHO2dCQUMxQyxJQUFJLEdBQUcsRUFBRTtvQkFDUCxPQUFPLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztpQkFDakI7cUJBQU07b0JBQ0wsT0FBTyxJQUFJLENBQUM7aUJBQ2I7WUFDSCxDQUFDLEdBQUUsUUFBUSxDQUFDLENBQUM7U0FDZDtRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7O2dCQXhCRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7O2dCQUxvQixRQUFROzs7aUNBQTdCO0NBNEJDLEFBekJELElBeUJDO1NBdEJZLHNCQUFzQjs7Ozs7O0lBRXJCLDBDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7dHJhbnNsYXRlfSBmcm9tIFwiLi9zZXJ2aWNlcy9pMThuXCI7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBXZkJpek5hdmlnYXRpb25TZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHsgfVxyXG5cclxuICBnZXRJMThuVmFsdWUobmFtZTogc3RyaW5nKSB7XHJcbiAgICBpZiAoIW5hbWUpIHsgcmV0dXJuICcnOyB9XHJcbiAgICBjb25zdCBkZWZhdWx0TGFuZyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsYW5ndWFnZUNvZGUnKTtcclxuICAgIGNvbnN0IGxhbmdEYXRhID0gZGVmYXVsdExhbmcgPyB0cmFuc2xhdGVbZGVmYXVsdExhbmddIDogdHJhbnNsYXRlWyd6aC1DSFMnXTtcclxuICAgIGxldCByZXN1bHRWYWwgPSAnJztcclxuICAgIGlmIChuYW1lLmluZGV4T2YoJy4nKSA9PT0gLTEpIHtcclxuICAgICAgcmVzdWx0VmFsID0gbGFuZ0RhdGFbbmFtZV07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXN1bHRWYWwgPSBuYW1lLnNwbGl0KCcuJykucmVkdWNlKChvYmosIGtleSkgPT4ge1xyXG4gICAgICAgIGlmIChvYmopIHtcclxuICAgICAgICAgIHJldHVybiBvYmpba2V5XTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCBsYW5nRGF0YSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0VmFsO1xyXG4gIH1cclxufVxyXG4iXX0=