/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Output, EventEmitter, ViewChild, Input } from '@angular/core';
import { BillcatTreeComponent } from '@gsp-bef/billcat-tree';
import { HttpService } from '@ecp-caf/caf-common';
import { TranslatePipe } from './services/translate.pipe';
var WfBizNavigationComponent = /** @class */ (function () {
    function WfBizNavigationComponent(injector, http, translate) {
        this.injector = injector;
        this.http = http;
        this.translate = translate;
        this.selectNodeEmitter = new EventEmitter();
        this.bizObject = new EventEmitter();
        this.bizCategory = new EventEmitter();
        this.tab = 'billCategory';
        this.data = new Array();
        this.config = {
            expandLevel: 1
        };
        this.emptyData = new Array();
        this.emptyCols = [{
                field: 'code', width: 100, title: this.translate.transform('static.code'),
            }];
    }
    /**
     * @return {?}
     */
    WfBizNavigationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getBillcategoriesByExtend();
    };
    /**
     * @return {?}
     */
    WfBizNavigationComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // this.billcat.treeConfig.expandLevel = 1;
    };
    /**
     * @param {?} args
     * @return {?}
     */
    WfBizNavigationComponent.prototype.tabChange = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.tab = args.nextId;
        // console.log({ tabchange: args });
    };
    /**
     * @param {?} data
     * @return {?}
     */
    WfBizNavigationComponent.prototype.boTreeSelectionChanged = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.data && data.data.isDetail === '1') {
            /** @type {?} */
            var node = {
                type: 'bo',
                nodeInfo: data
            };
            this.bizObject.emit(node);
            this.selectNodeEmitter.emit(node);
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    WfBizNavigationComponent.prototype.billCategorySelectionChanged = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.detail) {
            /** @type {?} */
            var node = {
                type: 'bill',
                nodeInfo: data
            };
            this.bizCategory.emit(node);
            this.selectNodeEmitter.emit(node);
        }
    };
    /**
     * @private
     * @return {?}
     */
    WfBizNavigationComponent.prototype.getBillcategoriesByExtend = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/bcc/v1.0/billcategory/billcategoriesByExtend?allextends=false&customconfig=processAssignManager';
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            if (re) {
                _this.data = re;
            }
        }));
    };
    WfBizNavigationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'wf-biz-navigation',
                    template: "\r\n<farris-tabs #tabs [value]=\"tab\" [fill]=\"true\" [contentFill]=\"true\" (tabChange)=\"tabChange($event)\"\r\n    class=\"f-utils-fill h-100\" style=\"background: #fff;\">\r\n    <farris-tab [title]=\"'static.kind' | translate\" [id]=\"'billCategory'\" class=\"f-utils-fill h-100\"><!--title=\"\u4E1A\u52A1\u79CD\u7C7B\"-->\r\n        <ng-template #content>\r\n            <div *ngIf=\"data.length>0; else empty\" class=\"f-utils-flex-column h-100\">\r\n                <perfect-scrollbar [config]=\"{}\">\r\n                    <billcat-tree [data]=\"data\" [config]=\"config\"\r\n                        (selectNodeEmitter)=\"billCategorySelectionChanged($event)\">\r\n                    </billcat-tree>\r\n                </perfect-scrollbar>\r\n            </div>\r\n        </ng-template>\r\n    </farris-tab>\r\n    <farris-tab [title] = \"'static.object' | translate\" [id]=\"'bizObject'\" class=\"f-utils-fill h-100\"><!--title=\"\u4E1A\u52A1\u5BF9\u8C61\"-->\r\n        <ng-template #content>\r\n            <div class = \"f-utils-flex-column h-100\" style=\"position: relative;\">\r\n                <app-bo-tree-panel (selectionChanged)=\"boTreeSelectionChanged($event)\" [showIcon]=\"true\">\r\n                </app-bo-tree-panel>\r\n            </div>\r\n        </ng-template>\r\n    </farris-tab>\r\n</farris-tabs>\r\n\r\n<ng-template #empty>\r\n    <div class=\"f-utils-fill-flex-column h-100\">\r\n        <div class=\"f-datagrid-norecords\" style=\"height: 100%;\">\r\n            <div class=\"f-datagrid-norecords-content\" style=\"width: 310px;\">{{'static.noData' | translate}}</div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    WfBizNavigationComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: HttpService },
        { type: TranslatePipe }
    ]; };
    WfBizNavigationComponent.propDecorators = {
        selectNodeEmitter: [{ type: Output }],
        bizObject: [{ type: Output }],
        bizCategory: [{ type: Output }],
        tab: [{ type: Input }],
        billcat: [{ type: ViewChild, args: [BillcatTreeComponent,] }]
    };
    return WfBizNavigationComponent;
}());
export { WfBizNavigationComponent };
if (false) {
    /** @type {?} */
    WfBizNavigationComponent.prototype.selectNodeEmitter;
    /** @type {?} */
    WfBizNavigationComponent.prototype.bizObject;
    /** @type {?} */
    WfBizNavigationComponent.prototype.bizCategory;
    /** @type {?} */
    WfBizNavigationComponent.prototype.tab;
    /** @type {?} */
    WfBizNavigationComponent.prototype.billcat;
    /** @type {?} */
    WfBizNavigationComponent.prototype.data;
    /** @type {?} */
    WfBizNavigationComponent.prototype.config;
    /** @type {?} */
    WfBizNavigationComponent.prototype.emptyData;
    /** @type {?} */
    WfBizNavigationComponent.prototype.emptyCols;
    /**
     * @type {?}
     * @private
     */
    WfBizNavigationComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WfBizNavigationComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    WfBizNavigationComponent.prototype.translate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2YtYml6LW5hdmlnYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1iaXotbmF2aWdhdGlvbi8iLCJzb3VyY2VzIjpbImxpYi93Zi1iaXotbmF2aWdhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsUUFBUSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFpQixLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkgsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUcxRDtJQWdDRSxrQ0FDVSxRQUFrQixFQUNsQixJQUFpQixFQUNqQixTQUF3QjtRQUZ4QixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLFNBQUksR0FBSixJQUFJLENBQWE7UUFDakIsY0FBUyxHQUFULFNBQVMsQ0FBZTtRQTNCbEMsc0JBQWlCLEdBQUcsSUFBSSxZQUFZLEVBQW1CLENBQUM7UUFHeEQsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFtQixDQUFDO1FBR2hELGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQW1CLENBQUM7UUFHbEQsUUFBRyxHQUFpQyxjQUFjLENBQUM7UUFJbkQsU0FBSSxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFFbkIsV0FBTSxHQUFHO1lBQ1AsV0FBVyxFQUFFLENBQUM7U0FDZixDQUFDO1FBRUYsY0FBUyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFDeEIsY0FBUyxHQUFHLENBQUM7Z0JBQ1gsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7YUFDMUUsQ0FBQyxDQUFDO0lBTUMsQ0FBQzs7OztJQUVMLDJDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyx5QkFBeUIsRUFBRSxDQUFDO0lBQ25DLENBQUM7Ozs7SUFFRCxrREFBZTs7O0lBQWY7UUFDRSwyQ0FBMkM7SUFDN0MsQ0FBQzs7Ozs7SUFHRCw0Q0FBUzs7OztJQUFULFVBQVUsSUFBUztRQUNqQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDdkIsb0NBQW9DO0lBQ3RDLENBQUM7Ozs7O0lBRUQseURBQXNCOzs7O0lBQXRCLFVBQXVCLElBQVM7UUFDOUIsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxLQUFLLEdBQUcsRUFBRTs7Z0JBQ3JDLElBQUksR0FBb0I7Z0JBQzVCLElBQUksRUFBRSxJQUFJO2dCQUNWLFFBQVEsRUFBRSxJQUFJO2FBQ2Y7WUFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ25DO0lBQ0gsQ0FBQzs7Ozs7SUFHRCwrREFBNEI7Ozs7SUFBNUIsVUFBNkIsSUFBUztRQUNwQyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFOztnQkFDakIsSUFBSSxHQUFvQjtnQkFDNUIsSUFBSSxFQUFFLE1BQU07Z0JBQ1osUUFBUSxFQUFFLElBQUk7YUFDZjtZQUNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbkM7SUFDSCxDQUFDOzs7OztJQUVPLDREQUF5Qjs7OztJQUFqQztRQUFBLGlCQU9DOztZQU5PLEdBQUcsR0FBRyw4R0FBOEc7UUFDMUgsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUzs7OztRQUFDLFVBQUMsRUFBTztZQUNuQyxJQUFJLEVBQUUsRUFBRTtnQkFDTixLQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQzthQUNoQjtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBbEZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixpcERBQWlEOztpQkFFbEQ7Ozs7Z0JBWDJCLFFBQVE7Z0JBRzNCLFdBQVc7Z0JBQ1gsYUFBYTs7O29DQVVuQixNQUFNOzRCQUdOLE1BQU07OEJBR04sTUFBTTtzQkFHTixLQUFLOzBCQUdMLFNBQVMsU0FBQyxvQkFBb0I7O0lBZ0VqQywrQkFBQztDQUFBLEFBbkZELElBbUZDO1NBOUVZLHdCQUF3Qjs7O0lBRW5DLHFEQUN3RDs7SUFFeEQsNkNBQ2dEOztJQUVoRCwrQ0FDa0Q7O0lBRWxELHVDQUNtRDs7SUFFbkQsMkNBQStEOztJQUUvRCx3Q0FBbUI7O0lBRW5CLDBDQUVFOztJQUVGLDZDQUF3Qjs7SUFDeEIsNkNBRUc7Ozs7O0lBR0QsNENBQTBCOzs7OztJQUMxQix3Q0FBeUI7Ozs7O0lBQ3pCLDZDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbmplY3RvciwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCwgQWZ0ZXJWaWV3SW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgV0ZCaXpOYXZpZ2F0aW9uIH0gZnJvbSAnLi93Zi1iaXotbmF2aWdhdGlvbi5lbnRpdHknO1xyXG5pbXBvcnQgeyBCaWxsY2F0VHJlZUNvbXBvbmVudCB9IGZyb20gJ0Bnc3AtYmVmL2JpbGxjYXQtdHJlZSc7XHJcbmltcG9ydCB7IEh0dHBTZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcbmltcG9ydCB7IFRyYW5zbGF0ZVBpcGUgfSBmcm9tICcuL3NlcnZpY2VzL3RyYW5zbGF0ZS5waXBlJztcclxuXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3dmLWJpei1uYXZpZ2F0aW9uJyxcclxuICB0ZW1wbGF0ZVVybDogYC4vd2YtYml6LW5hdmlnYXRpb24uY29tcG9uZW50Lmh0bWxgLFxyXG4gIHN0eWxlVXJsczogWycuL3dmLWJpei1uYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFdmQml6TmF2aWdhdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIHNlbGVjdE5vZGVFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxXRkJpek5hdmlnYXRpb24+KCk7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIGJpek9iamVjdCA9IG5ldyBFdmVudEVtaXR0ZXI8V0ZCaXpOYXZpZ2F0aW9uPigpO1xyXG5cclxuICBAT3V0cHV0KClcclxuICBiaXpDYXRlZ29yeSA9IG5ldyBFdmVudEVtaXR0ZXI8V0ZCaXpOYXZpZ2F0aW9uPigpO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHRhYjogJ2JpbGxDYXRlZ29yeScgfCAnYml6T2JqZWN0JyA9ICdiaWxsQ2F0ZWdvcnknO1xyXG5cclxuICBAVmlld0NoaWxkKEJpbGxjYXRUcmVlQ29tcG9uZW50KSBiaWxsY2F0OiBCaWxsY2F0VHJlZUNvbXBvbmVudDtcclxuXHJcbiAgZGF0YSA9IG5ldyBBcnJheSgpO1xyXG5cclxuICBjb25maWcgPSB7XHJcbiAgICBleHBhbmRMZXZlbDogMVxyXG4gIH07XHJcblxyXG4gIGVtcHR5RGF0YSA9IG5ldyBBcnJheSgpO1xyXG4gIGVtcHR5Q29scyA9IFt7XHJcbiAgICBmaWVsZDogJ2NvZGUnLCB3aWR0aDogMTAwLCB0aXRsZTogdGhpcy50cmFuc2xhdGUudHJhbnNmb3JtKCdzdGF0aWMuY29kZScpLFxyXG4gIH1dO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLFxyXG4gICAgcHJpdmF0ZSBodHRwOiBIdHRwU2VydmljZSxcclxuICAgIHByaXZhdGUgdHJhbnNsYXRlOiBUcmFuc2xhdGVQaXBlXHJcbiAgKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmdldEJpbGxjYXRlZ29yaWVzQnlFeHRlbmQoKTtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIC8vIHRoaXMuYmlsbGNhdC50cmVlQ29uZmlnLmV4cGFuZExldmVsID0gMTtcclxuICB9XHJcblxyXG5cclxuICB0YWJDaGFuZ2UoYXJnczogYW55KSB7XHJcbiAgICB0aGlzLnRhYiA9IGFyZ3MubmV4dElkO1xyXG4gICAgLy8gY29uc29sZS5sb2coeyB0YWJjaGFuZ2U6IGFyZ3MgfSk7XHJcbiAgfVxyXG5cclxuICBib1RyZWVTZWxlY3Rpb25DaGFuZ2VkKGRhdGE6IGFueSkge1xyXG4gICAgaWYgKGRhdGEuZGF0YSAmJiBkYXRhLmRhdGEuaXNEZXRhaWwgPT09ICcxJykge1xyXG4gICAgICBjb25zdCBub2RlOiBXRkJpek5hdmlnYXRpb24gPSB7XHJcbiAgICAgICAgdHlwZTogJ2JvJyxcclxuICAgICAgICBub2RlSW5mbzogZGF0YVxyXG4gICAgICB9O1xyXG4gICAgICB0aGlzLmJpek9iamVjdC5lbWl0KG5vZGUpO1xyXG4gICAgICB0aGlzLnNlbGVjdE5vZGVFbWl0dGVyLmVtaXQobm9kZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgYmlsbENhdGVnb3J5U2VsZWN0aW9uQ2hhbmdlZChkYXRhOiBhbnkpIHtcclxuICAgIGlmIChkYXRhICYmIGRhdGEuZGV0YWlsKSB7XHJcbiAgICAgIGNvbnN0IG5vZGU6IFdGQml6TmF2aWdhdGlvbiA9IHtcclxuICAgICAgICB0eXBlOiAnYmlsbCcsXHJcbiAgICAgICAgbm9kZUluZm86IGRhdGFcclxuICAgICAgfTtcclxuICAgICAgdGhpcy5iaXpDYXRlZ29yeS5lbWl0KG5vZGUpO1xyXG4gICAgICB0aGlzLnNlbGVjdE5vZGVFbWl0dGVyLmVtaXQobm9kZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdldEJpbGxjYXRlZ29yaWVzQnlFeHRlbmQoKSB7XHJcbiAgICBjb25zdCB1cmwgPSAnL2FwaS9ydW50aW1lL2JjYy92MS4wL2JpbGxjYXRlZ29yeS9iaWxsY2F0ZWdvcmllc0J5RXh0ZW5kP2FsbGV4dGVuZHM9ZmFsc2UmY3VzdG9tY29uZmlnPXByb2Nlc3NBc3NpZ25NYW5hZ2VyJztcclxuICAgIHRoaXMuaHR0cC5nZXQodXJsKS5zdWJzY3JpYmUoKHJlOiBhbnkpID0+IHtcclxuICAgICAgaWYgKHJlKSB7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gcmU7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=