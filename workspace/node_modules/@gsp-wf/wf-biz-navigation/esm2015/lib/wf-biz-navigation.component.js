/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Output, EventEmitter, ViewChild, Input } from '@angular/core';
import { BillcatTreeComponent } from '@gsp-bef/billcat-tree';
import { HttpService } from '@ecp-caf/caf-common';
import { TranslatePipe } from './services/translate.pipe';
export class WfBizNavigationComponent {
    /**
     * @param {?} injector
     * @param {?} http
     * @param {?} translate
     */
    constructor(injector, http, translate) {
        this.injector = injector;
        this.http = http;
        this.translate = translate;
        this.selectNodeEmitter = new EventEmitter();
        this.bizObject = new EventEmitter();
        this.bizCategory = new EventEmitter();
        this.tab = 'billCategory';
        this.data = new Array();
        this.config = {
            expandLevel: 1
        };
        this.emptyData = new Array();
        this.emptyCols = [{
                field: 'code', width: 100, title: this.translate.transform('static.code'),
            }];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.getBillcategoriesByExtend();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // this.billcat.treeConfig.expandLevel = 1;
    }
    /**
     * @param {?} args
     * @return {?}
     */
    tabChange(args) {
        this.tab = args.nextId;
        // console.log({ tabchange: args });
    }
    /**
     * @param {?} data
     * @return {?}
     */
    boTreeSelectionChanged(data) {
        if (data.data && data.data.isDetail === '1') {
            /** @type {?} */
            const node = {
                type: 'bo',
                nodeInfo: data
            };
            this.bizObject.emit(node);
            this.selectNodeEmitter.emit(node);
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    billCategorySelectionChanged(data) {
        if (data && data.detail) {
            /** @type {?} */
            const node = {
                type: 'bill',
                nodeInfo: data
            };
            this.bizCategory.emit(node);
            this.selectNodeEmitter.emit(node);
        }
    }
    /**
     * @private
     * @return {?}
     */
    getBillcategoriesByExtend() {
        /** @type {?} */
        const url = '/api/runtime/bcc/v1.0/billcategory/billcategoriesByExtend?allextends=false&customconfig=processAssignManager';
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        (re) => {
            if (re) {
                this.data = re;
            }
        }));
    }
}
WfBizNavigationComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf-biz-navigation',
                template: "\r\n<farris-tabs #tabs [value]=\"tab\" [fill]=\"true\" [contentFill]=\"true\" (tabChange)=\"tabChange($event)\"\r\n    class=\"f-utils-fill h-100\" style=\"background: #fff;\">\r\n    <farris-tab [title]=\"'static.kind' | translate\" [id]=\"'billCategory'\" class=\"f-utils-fill h-100\"><!--title=\"\u4E1A\u52A1\u79CD\u7C7B\"-->\r\n        <ng-template #content>\r\n            <div *ngIf=\"data.length>0; else empty\" class=\"f-utils-flex-column h-100\">\r\n                <perfect-scrollbar [config]=\"{}\">\r\n                    <billcat-tree [data]=\"data\" [config]=\"config\"\r\n                        (selectNodeEmitter)=\"billCategorySelectionChanged($event)\">\r\n                    </billcat-tree>\r\n                </perfect-scrollbar>\r\n            </div>\r\n        </ng-template>\r\n    </farris-tab>\r\n    <farris-tab [title] = \"'static.object' | translate\" [id]=\"'bizObject'\" class=\"f-utils-fill h-100\"><!--title=\"\u4E1A\u52A1\u5BF9\u8C61\"-->\r\n        <ng-template #content>\r\n            <div class = \"f-utils-flex-column h-100\" style=\"position: relative;\">\r\n                <app-bo-tree-panel (selectionChanged)=\"boTreeSelectionChanged($event)\" [showIcon]=\"true\">\r\n                </app-bo-tree-panel>\r\n            </div>\r\n        </ng-template>\r\n    </farris-tab>\r\n</farris-tabs>\r\n\r\n<ng-template #empty>\r\n    <div class=\"f-utils-fill-flex-column h-100\">\r\n        <div class=\"f-datagrid-norecords\" style=\"height: 100%;\">\r\n            <div class=\"f-datagrid-norecords-content\" style=\"width: 310px;\">{{'static.noData' | translate}}</div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
WfBizNavigationComponent.ctorParameters = () => [
    { type: Injector },
    { type: HttpService },
    { type: TranslatePipe }
];
WfBizNavigationComponent.propDecorators = {
    selectNodeEmitter: [{ type: Output }],
    bizObject: [{ type: Output }],
    bizCategory: [{ type: Output }],
    tab: [{ type: Input }],
    billcat: [{ type: ViewChild, args: [BillcatTreeComponent,] }]
};
if (false) {
    /** @type {?} */
    WfBizNavigationComponent.prototype.selectNodeEmitter;
    /** @type {?} */
    WfBizNavigationComponent.prototype.bizObject;
    /** @type {?} */
    WfBizNavigationComponent.prototype.bizCategory;
    /** @type {?} */
    WfBizNavigationComponent.prototype.tab;
    /** @type {?} */
    WfBizNavigationComponent.prototype.billcat;
    /** @type {?} */
    WfBizNavigationComponent.prototype.data;
    /** @type {?} */
    WfBizNavigationComponent.prototype.config;
    /** @type {?} */
    WfBizNavigationComponent.prototype.emptyData;
    /** @type {?} */
    WfBizNavigationComponent.prototype.emptyCols;
    /**
     * @type {?}
     * @private
     */
    WfBizNavigationComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WfBizNavigationComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    WfBizNavigationComponent.prototype.translate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2YtYml6LW5hdmlnYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1iaXotbmF2aWdhdGlvbi8iLCJzb3VyY2VzIjpbImxpYi93Zi1iaXotbmF2aWdhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsUUFBUSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFpQixLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkgsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQVExRCxNQUFNLE9BQU8sd0JBQXdCOzs7Ozs7SUEyQm5DLFlBQ1UsUUFBa0IsRUFDbEIsSUFBaUIsRUFDakIsU0FBd0I7UUFGeEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixTQUFJLEdBQUosSUFBSSxDQUFhO1FBQ2pCLGNBQVMsR0FBVCxTQUFTLENBQWU7UUEzQmxDLHNCQUFpQixHQUFHLElBQUksWUFBWSxFQUFtQixDQUFDO1FBR3hELGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBbUIsQ0FBQztRQUdoRCxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFtQixDQUFDO1FBR2xELFFBQUcsR0FBaUMsY0FBYyxDQUFDO1FBSW5ELFNBQUksR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBRW5CLFdBQU0sR0FBRztZQUNQLFdBQVcsRUFBRSxDQUFDO1NBQ2YsQ0FBQztRQUVGLGNBQVMsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3hCLGNBQVMsR0FBRyxDQUFDO2dCQUNYLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDO2FBQzFFLENBQUMsQ0FBQztJQU1DLENBQUM7Ozs7SUFFTCxRQUFRO1FBQ04sSUFBSSxDQUFDLHlCQUF5QixFQUFFLENBQUM7SUFDbkMsQ0FBQzs7OztJQUVELGVBQWU7UUFDYiwyQ0FBMkM7SUFDN0MsQ0FBQzs7Ozs7SUFHRCxTQUFTLENBQUMsSUFBUztRQUNqQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDdkIsb0NBQW9DO0lBQ3RDLENBQUM7Ozs7O0lBRUQsc0JBQXNCLENBQUMsSUFBUztRQUM5QixJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssR0FBRyxFQUFFOztrQkFDckMsSUFBSSxHQUFvQjtnQkFDNUIsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsUUFBUSxFQUFFLElBQUk7YUFDZjtZQUNELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbkM7SUFDSCxDQUFDOzs7OztJQUdELDRCQUE0QixDQUFDLElBQVM7UUFDcEMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTs7a0JBQ2pCLElBQUksR0FBb0I7Z0JBQzVCLElBQUksRUFBRSxNQUFNO2dCQUNaLFFBQVEsRUFBRSxJQUFJO2FBQ2Y7WUFDRCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ25DO0lBQ0gsQ0FBQzs7Ozs7SUFFTyx5QkFBeUI7O2NBQ3pCLEdBQUcsR0FBRyw4R0FBOEc7UUFDMUgsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUzs7OztRQUFDLENBQUMsRUFBTyxFQUFFLEVBQUU7WUFDdkMsSUFBSSxFQUFFLEVBQUU7Z0JBQ04sSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7YUFDaEI7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7OztZQWxGRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsaXBEQUFpRDs7YUFFbEQ7Ozs7WUFYMkIsUUFBUTtZQUczQixXQUFXO1lBQ1gsYUFBYTs7O2dDQVVuQixNQUFNO3dCQUdOLE1BQU07MEJBR04sTUFBTTtrQkFHTixLQUFLO3NCQUdMLFNBQVMsU0FBQyxvQkFBb0I7Ozs7SUFaL0IscURBQ3dEOztJQUV4RCw2Q0FDZ0Q7O0lBRWhELCtDQUNrRDs7SUFFbEQsdUNBQ21EOztJQUVuRCwyQ0FBK0Q7O0lBRS9ELHdDQUFtQjs7SUFFbkIsMENBRUU7O0lBRUYsNkNBQXdCOztJQUN4Qiw2Q0FFRzs7Ozs7SUFHRCw0Q0FBMEI7Ozs7O0lBQzFCLHdDQUF5Qjs7Ozs7SUFDekIsNkNBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEluamVjdG9yLCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0NoaWxkLCBBZnRlclZpZXdJbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBXRkJpek5hdmlnYXRpb24gfSBmcm9tICcuL3dmLWJpei1uYXZpZ2F0aW9uLmVudGl0eSc7XHJcbmltcG9ydCB7IEJpbGxjYXRUcmVlQ29tcG9uZW50IH0gZnJvbSAnQGdzcC1iZWYvYmlsbGNhdC10cmVlJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgVHJhbnNsYXRlUGlwZSB9IGZyb20gJy4vc2VydmljZXMvdHJhbnNsYXRlLnBpcGUnO1xyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnd2YtYml6LW5hdmlnYXRpb24nLFxyXG4gIHRlbXBsYXRlVXJsOiBgLi93Zi1iaXotbmF2aWdhdGlvbi5jb21wb25lbnQuaHRtbGAsXHJcbiAgc3R5bGVVcmxzOiBbJy4vd2YtYml6LW5hdmlnYXRpb24uY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgV2ZCaXpOYXZpZ2F0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0IHtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgc2VsZWN0Tm9kZUVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPFdGQml6TmF2aWdhdGlvbj4oKTtcclxuXHJcbiAgQE91dHB1dCgpXHJcbiAgYml6T2JqZWN0ID0gbmV3IEV2ZW50RW1pdHRlcjxXRkJpek5hdmlnYXRpb24+KCk7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIGJpekNhdGVnb3J5ID0gbmV3IEV2ZW50RW1pdHRlcjxXRkJpek5hdmlnYXRpb24+KCk7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgdGFiOiAnYmlsbENhdGVnb3J5JyB8ICdiaXpPYmplY3QnID0gJ2JpbGxDYXRlZ29yeSc7XHJcblxyXG4gIEBWaWV3Q2hpbGQoQmlsbGNhdFRyZWVDb21wb25lbnQpIGJpbGxjYXQ6IEJpbGxjYXRUcmVlQ29tcG9uZW50O1xyXG5cclxuICBkYXRhID0gbmV3IEFycmF5KCk7XHJcblxyXG4gIGNvbmZpZyA9IHtcclxuICAgIGV4cGFuZExldmVsOiAxXHJcbiAgfTtcclxuXHJcbiAgZW1wdHlEYXRhID0gbmV3IEFycmF5KCk7XHJcbiAgZW1wdHlDb2xzID0gW3tcclxuICAgIGZpZWxkOiAnY29kZScsIHdpZHRoOiAxMDAsIHRpdGxlOiB0aGlzLnRyYW5zbGF0ZS50cmFuc2Zvcm0oJ3N0YXRpYy5jb2RlJyksXHJcbiAgfV07XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsXHJcbiAgICBwcml2YXRlIGh0dHA6IEh0dHBTZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSB0cmFuc2xhdGU6IFRyYW5zbGF0ZVBpcGVcclxuICApIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuZ2V0QmlsbGNhdGVnb3JpZXNCeUV4dGVuZCgpO1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgLy8gdGhpcy5iaWxsY2F0LnRyZWVDb25maWcuZXhwYW5kTGV2ZWwgPSAxO1xyXG4gIH1cclxuXHJcblxyXG4gIHRhYkNoYW5nZShhcmdzOiBhbnkpIHtcclxuICAgIHRoaXMudGFiID0gYXJncy5uZXh0SWQ7XHJcbiAgICAvLyBjb25zb2xlLmxvZyh7IHRhYmNoYW5nZTogYXJncyB9KTtcclxuICB9XHJcblxyXG4gIGJvVHJlZVNlbGVjdGlvbkNoYW5nZWQoZGF0YTogYW55KSB7XHJcbiAgICBpZiAoZGF0YS5kYXRhICYmIGRhdGEuZGF0YS5pc0RldGFpbCA9PT0gJzEnKSB7XHJcbiAgICAgIGNvbnN0IG5vZGU6IFdGQml6TmF2aWdhdGlvbiA9IHtcclxuICAgICAgICB0eXBlOiAnYm8nLFxyXG4gICAgICAgIG5vZGVJbmZvOiBkYXRhXHJcbiAgICAgIH07XHJcbiAgICAgIHRoaXMuYml6T2JqZWN0LmVtaXQobm9kZSk7XHJcbiAgICAgIHRoaXMuc2VsZWN0Tm9kZUVtaXR0ZXIuZW1pdChub2RlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICBiaWxsQ2F0ZWdvcnlTZWxlY3Rpb25DaGFuZ2VkKGRhdGE6IGFueSkge1xyXG4gICAgaWYgKGRhdGEgJiYgZGF0YS5kZXRhaWwpIHtcclxuICAgICAgY29uc3Qgbm9kZTogV0ZCaXpOYXZpZ2F0aW9uID0ge1xyXG4gICAgICAgIHR5cGU6ICdiaWxsJyxcclxuICAgICAgICBub2RlSW5mbzogZGF0YVxyXG4gICAgICB9O1xyXG4gICAgICB0aGlzLmJpekNhdGVnb3J5LmVtaXQobm9kZSk7XHJcbiAgICAgIHRoaXMuc2VsZWN0Tm9kZUVtaXR0ZXIuZW1pdChub2RlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2V0QmlsbGNhdGVnb3JpZXNCeUV4dGVuZCgpIHtcclxuICAgIGNvbnN0IHVybCA9ICcvYXBpL3J1bnRpbWUvYmNjL3YxLjAvYmlsbGNhdGVnb3J5L2JpbGxjYXRlZ29yaWVzQnlFeHRlbmQ/YWxsZXh0ZW5kcz1mYWxzZSZjdXN0b21jb25maWc9cHJvY2Vzc0Fzc2lnbk1hbmFnZXInO1xyXG4gICAgdGhpcy5odHRwLmdldCh1cmwpLnN1YnNjcmliZSgocmU6IGFueSkgPT4ge1xyXG4gICAgICBpZiAocmUpIHtcclxuICAgICAgICB0aGlzLmRhdGEgPSByZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==