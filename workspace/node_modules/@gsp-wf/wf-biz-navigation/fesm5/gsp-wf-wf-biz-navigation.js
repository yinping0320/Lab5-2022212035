import { Injectable, Injector, Pipe, NgModule, Component, Output, EventEmitter, ViewChild, Input, defineInjectable, inject, INJECTOR } from '@angular/core';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { BOTreePanelPackageModule } from '@gsp-lcm/bo-tree';
import { BillcatTreeComponent, BillcatTreeModule } from '@gsp-bef/billcat-tree';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { HttpService, SessionService } from '@ecp-caf/caf-common';
import { DatagridModule } from '@farris/ui-datagrid';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var en = {
    static: {
        kind: "business kind",
        object: "business object",
        noData: "no data",
        code: "code"
    }
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var zh_CHT = {
    static: {
        kind: "業務種類",
        object: "業務對象",
        noData: "暫無數據",
        code: "編號"
    }
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var zh_CHS = {
    static: {
        kind: "业务种类",
        object: "业务对象",
        noData: "暂无数据",
        code: "编码"
    }
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var translate = {
    'zh-CHS': zh_CHS,
    'en': en,
    'zh-CHT': zh_CHT
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var WfBizNavigationService = /** @class */ (function () {
    function WfBizNavigationService(injector) {
        this.injector = injector;
    }
    /**
     * @param {?} name
     * @return {?}
     */
    WfBizNavigationService.prototype.getI18nValue = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!name) {
            return '';
        }
        /** @type {?} */
        var defaultLang = localStorage.getItem('languageCode');
        /** @type {?} */
        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];
        /** @type {?} */
        var resultVal = '';
        if (name.indexOf('.') === -1) {
            resultVal = langData[name];
        }
        else {
            resultVal = name.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            function (obj, key) {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), langData);
        }
        return resultVal;
    };
    WfBizNavigationService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    WfBizNavigationService.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    /** @nocollapse */ WfBizNavigationService.ngInjectableDef = defineInjectable({ factory: function WfBizNavigationService_Factory() { return new WfBizNavigationService(inject(INJECTOR)); }, token: WfBizNavigationService, providedIn: "root" });
    return WfBizNavigationService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TranslatePipe = /** @class */ (function () {
    function TranslatePipe(service) {
        this.service = service;
    }
    /**
     * @param {?} name
     * @param {?=} defaultVal
     * @return {?}
     */
    TranslatePipe.prototype.transform = /**
     * @param {?} name
     * @param {?=} defaultVal
     * @return {?}
     */
    function (name, defaultVal) {
        if (defaultVal === void 0) { defaultVal = ''; }
        /** @type {?} */
        var r = this.service.getI18nValue(name);
        return r ? r : defaultVal;
    };
    TranslatePipe.decorators = [
        { type: Pipe, args: [{ name: 'translate' },] }
    ];
    /** @nocollapse */
    TranslatePipe.ctorParameters = function () { return [
        { type: WfBizNavigationService }
    ]; };
    return TranslatePipe;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var WfBizNavigationComponent = /** @class */ (function () {
    function WfBizNavigationComponent(injector, http, translate) {
        this.injector = injector;
        this.http = http;
        this.translate = translate;
        this.selectNodeEmitter = new EventEmitter();
        this.bizObject = new EventEmitter();
        this.bizCategory = new EventEmitter();
        this.tab = 'billCategory';
        this.data = new Array();
        this.config = {
            expandLevel: 1
        };
        this.emptyData = new Array();
        this.emptyCols = [{
                field: 'code', width: 100, title: this.translate.transform('static.code'),
            }];
    }
    /**
     * @return {?}
     */
    WfBizNavigationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getBillcategoriesByExtend();
    };
    /**
     * @return {?}
     */
    WfBizNavigationComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // this.billcat.treeConfig.expandLevel = 1;
    };
    /**
     * @param {?} args
     * @return {?}
     */
    WfBizNavigationComponent.prototype.tabChange = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.tab = args.nextId;
        // console.log({ tabchange: args });
    };
    /**
     * @param {?} data
     * @return {?}
     */
    WfBizNavigationComponent.prototype.boTreeSelectionChanged = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.data && data.data.isDetail === '1') {
            /** @type {?} */
            var node = {
                type: 'bo',
                nodeInfo: data
            };
            this.bizObject.emit(node);
            this.selectNodeEmitter.emit(node);
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    WfBizNavigationComponent.prototype.billCategorySelectionChanged = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.detail) {
            /** @type {?} */
            var node = {
                type: 'bill',
                nodeInfo: data
            };
            this.bizCategory.emit(node);
            this.selectNodeEmitter.emit(node);
        }
    };
    /**
     * @private
     * @return {?}
     */
    WfBizNavigationComponent.prototype.getBillcategoriesByExtend = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/bcc/v1.0/billcategory/billcategoriesByExtend?allextends=false&customconfig=processAssignManager';
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            if (re) {
                _this.data = re;
            }
        }));
    };
    WfBizNavigationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'wf-biz-navigation',
                    template: "\r\n<farris-tabs #tabs [value]=\"tab\" [fill]=\"true\" [contentFill]=\"true\" (tabChange)=\"tabChange($event)\"\r\n    class=\"f-utils-fill h-100\" style=\"background: #fff;\">\r\n    <farris-tab [title]=\"'static.kind' | translate\" [id]=\"'billCategory'\" class=\"f-utils-fill h-100\"><!--title=\"\u4E1A\u52A1\u79CD\u7C7B\"-->\r\n        <ng-template #content>\r\n            <div *ngIf=\"data.length>0; else empty\" class=\"f-utils-flex-column h-100\">\r\n                <perfect-scrollbar [config]=\"{}\">\r\n                    <billcat-tree [data]=\"data\" [config]=\"config\"\r\n                        (selectNodeEmitter)=\"billCategorySelectionChanged($event)\">\r\n                    </billcat-tree>\r\n                </perfect-scrollbar>\r\n            </div>\r\n        </ng-template>\r\n    </farris-tab>\r\n    <farris-tab [title] = \"'static.object' | translate\" [id]=\"'bizObject'\" class=\"f-utils-fill h-100\"><!--title=\"\u4E1A\u52A1\u5BF9\u8C61\"-->\r\n        <ng-template #content>\r\n            <div class = \"f-utils-flex-column h-100\" style=\"position: relative;\">\r\n                <app-bo-tree-panel (selectionChanged)=\"boTreeSelectionChanged($event)\" [showIcon]=\"true\">\r\n                </app-bo-tree-panel>\r\n            </div>\r\n        </ng-template>\r\n    </farris-tab>\r\n</farris-tabs>\r\n\r\n<ng-template #empty>\r\n    <div class=\"f-utils-fill-flex-column h-100\">\r\n        <div class=\"f-datagrid-norecords\" style=\"height: 100%;\">\r\n            <div class=\"f-datagrid-norecords-content\" style=\"width: 310px;\">{{'static.noData' | translate}}</div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    WfBizNavigationComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: HttpService },
        { type: TranslatePipe }
    ]; };
    WfBizNavigationComponent.propDecorators = {
        selectNodeEmitter: [{ type: Output }],
        bizObject: [{ type: Output }],
        bizCategory: [{ type: Output }],
        tab: [{ type: Input }],
        billcat: [{ type: ViewChild, args: [BillcatTreeComponent,] }]
    };
    return WfBizNavigationComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var WfBizNavigationModule = /** @class */ (function () {
    function WfBizNavigationModule() {
    }
    WfBizNavigationModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [WfBizNavigationComponent, TranslatePipe],
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisTabsModule,
                        BOTreePanelPackageModule,
                        BillcatTreeModule,
                        PerfectScrollbarModule,
                        DatagridModule
                    ],
                    providers: [
                        SessionService,
                        HttpService,
                        TranslatePipe
                    ],
                    exports: [WfBizNavigationComponent]
                },] }
    ];
    return WfBizNavigationModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var WFBizNavigation = /** @class */ (function () {
    function WFBizNavigation() {
    }
    return WFBizNavigation;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { WfBizNavigationService, WfBizNavigationComponent, WfBizNavigationModule, WFBizNavigation, TranslatePipe as ɵa };

//# sourceMappingURL=gsp-wf-wf-biz-navigation.js.map