{"version":3,"sources":["ng://@gsp-wf/wf-process-model/lib/model/designer/ActionOrganizationScope.ts","ng://@gsp-wf/wf-process-model/lib/model/designer/BizActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/designer/ParticipantSchemeForDesigner.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-wf/wf-process-model/lib/model/designer/time-limit-info.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/assignment-strategy/AssignmentStrategy.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/assignment-strategy/AssignmentStrategyDef.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/assignment-strategy/AssignPerformerConfig.ts","ng://@gsp-wf/wf-process-model/lib/model/misc/TargetRefConstants.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/completion-strategy/BackWardRule.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/completion-strategy/ConclusionItem.ts","ng://@gsp-wf/wf-process-model/lib/model/mex/MexExpressionImpl.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/condition-expression/ConditionType.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/condition-expression/ConditionValueVersion.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/condition-expression/Condition.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/completion-strategy/CounterSignRule.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/completion-strategy/ExecuteWorkItemMode.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/completion-strategy/ParticipantCoefficient.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/completion-strategy/WorkFlowAction.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/condition-expression/Xpression.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/condition-expression/SemanticExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/misc/AsyncCallBackType.ts","ng://@gsp-wf/wf-process-model/lib/model/misc/ExecutionType.ts","ng://@gsp-wf/wf-process-model/lib/model/parameter/WFActualParameter.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/WFExtensionElement.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/tool/Tool.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/tool/ToolTime.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/tool/Component.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/CustomizeAction.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/DisplayTerminal.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/ExecuteForm.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/JumpScopeCategory.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/JumpScopeDefaultType.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/JumpScope.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/Notification.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/OtherAssignActivityNodeInfo.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/OtherAssignNodes.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/StartMode.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/ProcessHeader.ts","ng://@gsp-wf/wf-process-model/lib/model/ExtendProperty.ts","ng://@gsp-wf/wf-process-model/lib/model/flow-node/StartActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/ApprovalPivot.ts","ng://@gsp-wf/wf-process-model/lib/model/ApprovalPivotConfig.ts","ng://@gsp-wf/wf-process-model/lib/model/CheckCondition.ts","ng://@gsp-wf/wf-process-model/lib/model/ActionScope.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/ParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/ActivityExecutorParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/utils/SerializeUtils.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/ComponentParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/MatrixParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/OrganizationLevel.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/OrganizationParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/PositionParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/ReportingLineParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/UserParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/VariableParticipantExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/HumanPerformerImpl.ts","ng://@gsp-wf/wf-process-model/lib/model/ImageSetting.ts","ng://@gsp-wf/wf-process-model/lib/model/SmsMessageVariable.ts","ng://@gsp-wf/wf-process-model/lib/model/SmsMessageTemplate.ts","ng://@gsp-wf/wf-process-model/lib/model/MessageNotice.ts","ng://@gsp-wf/wf-process-model/lib/model/mex/TitleExpression.ts","ng://@gsp-wf/wf-process-model/lib/model/OrganizationPotentialOwner.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/old/Participant.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/old/ActivityExecutorParticipant.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/old/ComponentParticipant.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/old/MatrixParticipant.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/old/PositionParticipant.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/old/ReportingLineParticipant.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/old/UserParticipant.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/ParticipantScheme.ts","ng://@gsp-wf/wf-process-model/lib/model/AutomaticApprovalRule.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/ParticipantSetting.ts","ng://@gsp-wf/wf-process-model/lib/model/PotentialOwnerImpl.ts","ng://@gsp-wf/wf-process-model/lib/model/ExpireOperation.ts","ng://@gsp-wf/wf-process-model/lib/model/AutoHandleExpireOperation.ts","ng://@gsp-wf/wf-process-model/lib/model/SendMessageExpireOperation.ts","ng://@gsp-wf/wf-process-model/lib/model/TimeLimitControl.ts","ng://@gsp-wf/wf-process-model/lib/model/UrgeHandleRule.ts","ng://@gsp-wf/wf-process-model/lib/model/VariableSetting.ts","ng://@gsp-wf/wf-process-model/lib/model/flow-node/UserActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/mex/CDTSchemaType.ts","ng://@gsp-wf/wf-process-model/lib/model/parameter/ParameterMode.ts","ng://@gsp-wf/wf-process-model/lib/model/parameter/FormalParameter.ts","ng://@gsp-wf/wf-process-model/lib/model/AifCreationBillActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/AutoActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/CallActivitySubProcess.ts","ng://@gsp-wf/wf-process-model/lib/model/SignalEventDefinitionImpl.ts","ng://@gsp-wf/wf-process-model/lib/model/IntermediateCatchEventImpl.ts","ng://@gsp-wf/wf-process-model/lib/model/MessageActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/NotifyActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/OperationActivity.ts","ng://@gsp-wf/wf-process-model/lib/model/ValuedDataObject.ts","ng://@gsp-wf/wf-process-model/lib/model/extension/completion-strategy/ResubmitEffect.ts","ng://@gsp-wf/wf-process-model/lib/model/misc/FlowDirection.ts","ng://@gsp-wf/wf-process-model/lib/model/participants/ReportingRank.ts","ng://@gsp-wf/wf-process-model/lib/model/ApprovalPivotType.ts","ng://@gsp-wf/wf-process-model/lib/model/DurationType.ts","ng://@gsp-wf/wf-process-model/lib/model/SendMessageType.ts"],"sourcesContent":["import { OrganizationParticipantExpression } from \"../participants/OrganizationParticipantExpression\";\r\n\r\nexport class ActionOrganizationScope {\r\n    enable: boolean;\r\n    action: string;\r\n    scope: OrganizationParticipantExpression;\r\n}","export class BizActivity {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    flowFormKey: string;\r\n\r\n    createdTime: Date;\r\n    creator: string;\r\n\r\n    bizComponents: any[];\r\n    bizActions: any[];\r\n}","import { ActionScope } from \"../ActionScope\";\r\nimport { OrganizationLevel } from \"../OrganizationLevel\";\r\n\r\nexport class ParticipantSchemeForDesigner {\r\n    constructor() {\r\n        this.performers = [];\r\n        this.variablePerformers = []\r\n        this.components = [];\r\n        this.reportingLines = [];\r\n        this.activityExecutors = [];\r\n        this.matrixParticipants = [];\r\n        this.organizationParticipants = new Array();\r\n        this.options = {\r\n            ExclusionPerformers: [],\r\n            NoPerformerStrategy: '',\r\n        }\r\n    }\r\n    performers: ParticipantItem[];\r\n    variablePerformers: any[];\r\n    components: any[];\r\n    reportingLines: any[];\r\n    activityExecutors: any[];\r\n    matrixParticipants: any[];\r\n    organizationParticipants: Array<OrganizationParticipant>;\r\n    options: {\r\n        ExclusionPerformers: Array<string>,\r\n        NoPerformerStrategy: string,\r\n        HistoricFirst?: boolean,\r\n        automaticPerformers?: Array<string>\r\n    };\r\n    isAllScope: boolean = false;\r\n}\r\n\r\nexport class ParticipantItem {\r\n    id: string;\r\n    performerId: string;\r\n    performerName: string;\r\n    positionType?: string;\r\n    orgId: string;\r\n    orgName: string;\r\n    orgType?: string;\r\n    type: string;\r\n    condition?: string;\r\n    tag?: string;\r\n    varValue?: string;\r\n    varType?: string;\r\n    relation?: string;\r\n}\r\n\r\nexport class OrganizationParticipant {\r\n    id: string;\r\n    name: string;\r\n    actionScope: ActionScope;\r\n    organizationLevel: OrganizationLevel;\r\n    organizationId: string;\r\n    organizationCode: string;\r\n    organizationName: string;\r\n    includeChildren: boolean;\r\n    parentsUntil: boolean;\r\n    tag: string;\r\n\r\n    condition: string;\r\n}\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","export class TimeLimitControlInfo {\r\n    tag: string;\r\n\r\n    /**\r\n     * 是否启用\r\n     */\r\n    enable: boolean;\r\n\r\n    /**\r\n     * 限定时长\r\n     */\r\n    dueTime: string;\r\n\r\n    /**\r\n     * 时间单位\r\n     */\r\n    timeUnit: string;\r\n\r\n    expireOperations: Array<ExpireOperationInfo>;\r\n}\r\n\r\nexport class ExpireOperationInfo {\r\n    id: string;\r\n    /**\r\n     * 期限控制方式\r\n     */\r\n    durationType: string;\r\n\r\n    /**\r\n     * 任务期限\r\n     */\r\n    timeDuration: number;\r\n\r\n    /**\r\n     * 时间单位\r\n     */\r\n    timeUnit: string;\r\n\r\n    /**\r\n     * 操作类型名称\r\n     */\r\n    operationTypeName: string;\r\n}\r\n\r\nexport class SendMessageExpireOperationInfo extends ExpireOperationInfo {\r\n    /**\r\n     *预警信息内容\r\n     */\r\n    message: string;\r\n\r\n    /**\r\n     * 发送预警信息类型\r\n     */\r\n    sendType: string;\r\n\r\n    /**\r\n     * 预警信息主题\r\n     */\r\n    subject: string;\r\n    /**\r\n     * 消息接收人\r\n     * 用户IDs\r\n     */\r\n    receiver?: string;\r\n\r\n    /**\r\n     * 消息接收人显示\r\n     */\r\n    receiverText?: string;\r\n\r\n    /**\r\n     * 开启循环预警\r\n     */\r\n    cycleEnable: boolean;\r\n\r\n    /**\r\n     * 循环预警时间间隔\r\n     */\r\n    cycleTime: string;\r\n\r\n    /**\r\n     * 循环预警时间间隔单位\r\n     */\r\n    cycleTimeUnit: string\r\n        \r\n    smsMessageTemplate: any;\r\n}\r\n\r\nexport class AutoHandleExpireOperationInfo extends ExpireOperationInfo {\r\n    /**\r\n     * 办理类型，通过驳回否决等等\r\n     */\r\n    autoHandleType: string;\r\n\r\n    /**\r\n     * 办理意见\r\n     */\r\n    message: string;\r\n}\r\n","export enum AssignmentStrategy {\r\n    /**\r\n     * All指派策略\r\n     * */\r\n    ALL = \"ALL\",\r\n    /**\r\n     * 手工指定\r\n     * */\r\n    ASSIGN = \"ASSIGN\",\r\n    /**\r\n    * 领用\r\n    * */\r\n    CLAIM = \"CLAIM\"\r\n}","import { BpmnModel, BpmnModelHelper, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class AssignmentStrategyDef extends ExtensionElement {\r\n    //undo操作临时clone方法\r\n    constructor(model: BpmnModel, id?: string, description?: string, expandGroups?: boolean) {\r\n        super(model);\r\n\r\n        this.Id = id;\r\n        this.Description = description;\r\n        this.ExpandGroups = expandGroups;\r\n    }\r\n\r\n    ClrTypeID: string = \"wf.AssignmentStrategy\";\r\n\r\n    Id: string;\r\n    Description: string;\r\n    ExpandGroups: boolean;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.Id = null;\r\n    }\r\n\r\n    NewInstance(): AssignmentStrategyDef {\r\n        return new AssignmentStrategyDef(this.Model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Id\", this.Id);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Description\", this.Description);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ExpandGroups\", this.ExpandGroups);\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Id = obj.Id;\r\n        this.Description = obj.Description;\r\n        this.ExpandGroups = obj.ExpandGroups;\r\n    }\r\n\r\n}\r\n\r\nBpmnModelHelper.RegisterElementType(new AssignmentStrategyDef(new BpmnModel()));\r\n    // pmf.bpmn.designer.BpmnDesignerHelper.RegisterElementType(new AssignmentStrategyDef(new BpmnModel()));","import { ExtensionElement, BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class AssignPerformerConfig extends ExtensionElement {\r\n    static Clr_Type_ID: string = 'wf.AssignPerformerConfig';\r\n    readonly ClrTypeID: string = AssignPerformerConfig.Clr_Type_ID;\r\n\r\n    NewInstance(): AssignPerformerConfig {\r\n        return new AssignPerformerConfig(this.Model);\r\n    }\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n        this.Operator = 'currentUser';\r\n    }\r\n\r\n    Operator: string;\r\n\r\n    MultiSelect: boolean = true;\r\n    Necessary: boolean = false;\r\n    AllowGlobalAssign: boolean = false;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject() {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Operator\", this.Operator);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MultiSelect\", this.MultiSelect);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Necessary\", this.Necessary);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"AllowGlobalAssign\", this.AllowGlobalAssign);\r\n\r\n        return obj;\r\n    }\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Operator = obj.Operator;\r\n        this.MultiSelect = obj.MultiSelect;\r\n        this.Necessary = obj.Necessary;\r\n        this.AllowGlobalAssign = obj.AllowGlobalAssign;\r\n    }\r\n\r\n    clone(): AssignPerformerConfig {\r\n        const assignPerformerConfig = new AssignPerformerConfig(this.Model);\r\n        assignPerformerConfig.Operator = this.Operator;\r\n        assignPerformerConfig.MultiSelect = this.MultiSelect;\r\n        assignPerformerConfig.Necessary = this.Necessary;\r\n        assignPerformerConfig.AllowGlobalAssign = this.AllowGlobalAssign;\r\n        return assignPerformerConfig;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new AssignPerformerConfig(new BpmnModel()));\r\n","export class TargetRefConstants {\r\n    static INITIAL_ACTIVITY_ID: string = 'InitialActityId';\r\n    static PRECURSOR_ACTIVITY_ID: string = 'PrecursorActivityId';\r\n    static EMPTY_TARGET: string = '';\r\n}","import { ExtensionElement, BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { TargetRefConstants } from \"../../misc/TargetRefConstants\";\r\nimport { ResubmitEffect } from \"./ResubmitEffect\";\r\n\r\nexport class BackWardRule extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.BackWardRule\";\r\n    readonly ClrTypeID: string = BackWardRule.Clr_Type_ID;\r\n\r\n    NewInstance(): BackWardRule {\r\n        return new BackWardRule(this.Model);\r\n    }\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n        this.TargetRef = TargetRefConstants.INITIAL_ACTIVITY_ID;\r\n        this.SelectTargetAble = false;\r\n        this.WaitReturn = false;\r\n        this.ResubmitEffect = null;\r\n        this.DynamicBackWardRuleAble = false;\r\n        this.SelectTargetList = new Array<string>();\r\n    }\r\n\r\n    TargetRef: string;\r\n    SelectTargetAble: boolean;\r\n    WaitReturn: boolean;\r\n    ResubmitEffect: ResubmitEffect;\r\n    DynamicBackWardRuleAble: boolean;\r\n    SelectTargetList:Array<string>;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"TargetRef\", this.TargetRef);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"SelectTargetAble\", this.SelectTargetAble);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"WaitReturn\", this.WaitReturn);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ResubmitEffect\", this.ResubmitEffect);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DynamicBackWardRuleAble\", this.DynamicBackWardRuleAble);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"SelectTargetList\", this.SelectTargetList);\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.TargetRef = obj.TargetRef;\r\n        this.SelectTargetAble = obj.SelectTargetAble;\r\n        this.WaitReturn = obj.WaitReturn;\r\n        this.ResubmitEffect = obj.ResubmitEffect;\r\n        this.DynamicBackWardRuleAble = obj.DynamicBackWardRuleAble;\r\n        this.SelectTargetList = obj.SelectTargetList;\r\n    }\r\n\r\n    clone(): BackWardRule {\r\n        const backWardRule = new BackWardRule(this.Model);\r\n        backWardRule.TargetRef = this.TargetRef;\r\n        backWardRule.SelectTargetAble = this.SelectTargetAble;\r\n        backWardRule.WaitReturn = this.WaitReturn;\r\n        backWardRule.ResubmitEffect = this.ResubmitEffect;\r\n        backWardRule.DynamicBackWardRuleAble = this.DynamicBackWardRuleAble;\r\n        backWardRule.SelectTargetList = this.SelectTargetList;\r\n        return backWardRule;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new BackWardRule(new BpmnModel()));","import { ExtensionElement, BpmnModel, BpmnModelHelper, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { WorkFlowAction } from \"./WorkFlowAction\";\r\n\r\nexport class ConclusionItem extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.ConclusionItem\";\r\n    readonly ClrTypeID: string = ConclusionItem.Clr_Type_ID;\r\n\r\n    NewInstance(): ConclusionItem {\r\n        return new ConclusionItem(this.Model);\r\n    }\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n    /**\r\n     * 审批结论值\r\n     * */\r\n    Value: string;\r\n    /**\r\n     * 显示文本\r\n     * */\r\n    Text: string;\r\n    /**\r\n     * 流程动作\r\n     * */\r\n    WorkFlowAction: WorkFlowAction;\r\n    /**\r\n     * 是否默认\r\n     * */\r\n    IsDefault: boolean = false;\r\n\r\n    commentNecessary: boolean = false;\r\n    /**\r\n     * 数字签名\r\n     */\r\n    certification: boolean;\r\n    /**\r\n     * 附件上传\r\n     */\r\n    attachmentNecessary: boolean;\r\n    /**\r\n      * 手写签名必填\r\n      */\r\n    signatureNecessary: boolean;\r\n    /**\r\n      * 默认意见\r\n      */\r\n    defaultComment: string;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Value\", this.Value);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Text\", this.Text);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"WorkFlowAction\", this.WorkFlowAction);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"IsDefault\", this.IsDefault);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"CommentNecessary\", this.commentNecessary);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Certification\", this.certification);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"AttachmentNecessary\", this.attachmentNecessary);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"SignatureNecessary\", this.signatureNecessary);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DefaultComment\", this.defaultComment);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Value = obj.Value;\r\n        this.Text = obj.Text;\r\n        this.WorkFlowAction = obj.WorkFlowAction;\r\n        this.IsDefault = obj.IsDefault;\r\n        this.commentNecessary = obj.CommentNecessary;\r\n        this.certification = ExtensionMethod.GetAttributeValue4Boolean(obj, \"Certification\");\r\n        this.attachmentNecessary = ExtensionMethod.GetAttributeValue4Boolean(obj, \"AttachmentNecessary\");\r\n        this.signatureNecessary = ExtensionMethod.GetAttributeValue4Boolean(obj, \"SignatureNecessary\");\r\n        this.defaultComment = ExtensionMethod.GetAttributeValue4String(obj,\"DefaultComment\");\r\n    }\r\n\r\n    clone(): ConclusionItem {\r\n        const conclusion = new ConclusionItem(this.Model);\r\n        conclusion.Value = this.Value;\r\n        conclusion.Text = this.Text;\r\n        conclusion.WorkFlowAction = this.WorkFlowAction;\r\n        conclusion.IsDefault = this.IsDefault;\r\n        conclusion.commentNecessary = this.commentNecessary;\r\n        conclusion.certification = this.certification;\r\n        conclusion.attachmentNecessary = this.attachmentNecessary;\r\n        conclusion.signatureNecessary = this.signatureNecessary;\r\n        conclusion.defaultComment = this.defaultComment;\r\n\r\n        return conclusion;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ConclusionItem(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, MexExpression } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class MexExpressionImpl extends MexExpression {\r\n    static Clr_Type_ID: string = \"wf.MexExpressionImpl\";\r\n    ClrTypeID: string = MexExpressionImpl.Clr_Type_ID;\r\n\r\n    value: string;\r\n    constructor(model: BpmnModel, value?: string) {\r\n        super(model);\r\n        this.value = value;\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.value = '';\r\n    }\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Value', this.value);\r\n        return obj;\r\n    }\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.value = obj.Value;\r\n    }\r\n    NewInstance(): MexExpressionImpl {\r\n        return new MexExpressionImpl(this.Model);\r\n    }\r\n\r\n    clone(): MexExpressionImpl {\r\n        const mexExpressionImpl = new MexExpressionImpl(this.Model);\r\n        mexExpressionImpl.value = this.value;\r\n        return mexExpressionImpl;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new MexExpressionImpl(new BpmnModel()));\r\n","export enum ConditionType {\r\n    /// <summary> \r\n    /// 未定义的条件类型 \r\n    /// </summary>\r\n    UNDIFINED = 'UNDIFINED',\r\n    /// <summary>\r\n    /// 转移条件得到满足，转移才会被执行\r\n    /// </summary>\r\n    CONDITION = 'CONDITION',\r\n    /// <summary>\r\n    /// 说明此转移为缺省转移，如果其他转移的转移条件都不能得到满足，则执行此转移\r\n    /// </summary>\r\n    OTHERWISE = 'OTHERWISE',\r\n    /// <summary>\r\n    /// 异常转移，如果产生了一个异常，并且转移条件得到满足，则执行该转移 \r\n    /// </summary>\r\n    EXCEPTION = 'EXCEPTION',\r\n    /// <summary>\r\n    /// 异常缺省转移，如果产生了异常，并且其他异常转移的转移条件都得不到满足，则执行此转移 \r\n    /// </summary>\r\n    DEFAULTEXCEPTION = 'DEFAULTEXCEPTION',\r\n\r\n    /// <summary>\r\n    /// 通用单位条件\r\n    /// </summary>\r\n    GENERALORGCONDITION = 'GENERALORGCONDITION',\r\n\r\n    /// <summary>\r\n    /// 通用组织条件，记录组织变量，用于GeneralValRole\r\n    /// </summary>\r\n    GeneralVarOrgCondition = 'GeneralVarOrgCondition'\r\n}","export enum ConditionValueVersion {\r\n    /// <summary>\r\n    /// 不确定的版本。可能为老表达式，也可能为语义化表达式。\r\n    /// </summary>\r\n    Unsure = 'Unsure',\r\n\r\n    /// <summary>\r\n    /// 语义化表达式，表达式中使用的变量和XmlSchema等上下文信息\r\n    /// </summary>\r\n    SemanticExpressionV1 = 'SemanticExpressionV1',\r\n}","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { MexExpressionImpl } from \"../../mex/MexExpressionImpl\";\r\nimport { ConditionType } from \"./ConditionType\";\r\nimport { ConditionValueVersion } from \"./ConditionValueVersion\";\r\n\r\nexport class Condition extends MexExpressionImpl {\r\n    static Clr_Type_ID = 'wf.Condition';\r\n    ClrTypeID: string = Condition.Clr_Type_ID;\r\n\r\n    NewInstance(): Condition {\r\n        return new Condition(this.Model);\r\n    }\r\n\r\n    private _value: string = '';\r\n    private valueVersion: ConditionValueVersion = ConditionValueVersion.Unsure;\r\n    private type: ConditionType = ConditionType.CONDITION;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    get ConditionType(): ConditionType { return this.type; }\r\n    set ConditionType(value: ConditionType) { this.type = value; }\r\n\r\n    get Value(): string { return this._value; }\r\n    set Value(value: string) { this._value = value; }\r\n\r\n    get ValueVersion(): ConditionValueVersion { return this.valueVersion; }\r\n    set ValueVersion(value: ConditionValueVersion) { this.valueVersion = value; }\r\n\r\n    ToString(): string {\r\n        return \"Condition[value='\" + this._value + \"'\" + \", type=\" + this.type + \"]\";\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.Value = '';\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionType\", this.ConditionType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Value\", this.Value);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ValueVersion\", this.ValueVersion);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.ConditionType = obj.ConditionType;\r\n        this.Value = obj.Value;\r\n        this.ValueVersion = obj.ValueVersion;\r\n    }\r\n\r\n    clone(): Condition {\r\n        const condition = new Condition(this.Model);\r\n        condition.Value = this.Value;\r\n        condition.ValueVersion = this.valueVersion;\r\n        condition.ConditionType = this.ConditionType;\r\n        return condition;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new Condition(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { Condition } from \"../condition-expression/Condition\";\r\nimport { ExtensionCompletionConditionRuler } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class CounterSignRule extends ExtensionCompletionConditionRuler {\r\n    static Clr_Type_ID: string = 'wf.CounterSignRule';\r\n    readonly ClrTypeID: string = CounterSignRule.Clr_Type_ID;\r\n\r\n    NewInstance(): CounterSignRule {\r\n        return new CounterSignRule(this.Model);\r\n    }\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n    /**\r\n    * 结论值\r\n    * */\r\n    ConclusionValue: string;\r\n    /**\r\n     * 计数器\r\n     * */\r\n    get CounterVariableName() {\r\n        return `nrOf${this.ConclusionValue}`;\r\n    }\r\n    /**\r\n    * 完成条件\r\n    * */\r\n    CompletionCondition: Condition;\r\n    /**\r\n     * 计算方式\r\n     */\r\n    CalculateType: string;\r\n    /**\r\n     * 满足所有条件值\r\n     */\r\n    ConditionValue: string;\r\n    /**\r\n     * 是否等待所有选票\r\n     */\r\n    WaitAllVotes: boolean;\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConclusionValue\", this.ConclusionValue);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"CalculateType\", this.CalculateType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionValue\", this.ConditionValue);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"WaitAllVotes\", this.WaitAllVotes);\r\n\r\n        if (this.CompletionCondition) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"CompletionCondition\", this.CompletionCondition.ConvertToJsonObject());\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.ConclusionValue = obj.ConclusionValue;\r\n        this.CalculateType = obj.CalculateType;\r\n        this.ConditionValue = obj.ConditionValue;\r\n        this.WaitAllVotes = obj.WaitAllVotes;\r\n        if (obj.CompletionCondition) {\r\n            let condition: Condition = new Condition(this.Model);\r\n            condition.LoadFromJsonObject(obj.CompletionCondition);\r\n            this.CompletionCondition = condition;\r\n        }\r\n    }\r\n\r\n    clone(): CounterSignRule {\r\n        const counterSignRule = new CounterSignRule(this.Model);\r\n        counterSignRule.ConclusionValue = this.ConclusionValue;\r\n        counterSignRule.CalculateType = this.CalculateType;\r\n        counterSignRule.ConditionValue = this.ConditionValue;\r\n        counterSignRule.WaitAllVotes = this.WaitAllVotes;\r\n        if (this.CompletionCondition) {\r\n            counterSignRule.CompletionCondition = this.CompletionCondition.clone();\r\n        }\r\n\r\n        return counterSignRule;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new CounterSignRule(new BpmnModel()));\r\n","export enum ExecuteWorkItemMode {\r\n    /**\r\n     * 抢占模式\r\n     * */\r\n    Preempt = 'Preempt',\r\n    /**\r\n     * 并行会签\r\n     * */\r\n    Parallel = 'Parallel',\r\n    /**\r\n     * 串行会签\r\n     * */\r\n    Sequential = 'Sequential'\r\n}","import { BpmnModel, BpmnModelHelper, MexElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class ParticipantCoefficient extends MexElement {\r\n    private participantId: string;\r\n    private participantName: string;\r\n    private participantCode: string;\r\n    private participantType: string;\r\n    private mustCompleted: boolean;\r\n    private coefficient: number;\r\n\r\n    constructor(model: BpmnModel, id?: string, name?: string, code?: string, type?: string, mustCompleted?: boolean, coefficient?: number) {\r\n        super(model);\r\n        this.participantId = id || '';\r\n        this.participantName = name || '';\r\n        this.participantCode = code || '';\r\n        this.participantType = type || '';\r\n        this.mustCompleted = mustCompleted || true;\r\n        this.coefficient = coefficient || 0;\r\n    }\r\n\r\n    //序列化内容\r\n    get ParticipantId() { return this.participantId; }\r\n    set ParticipantId(value: string) { this.participantId = value; }\r\n\r\n    get ParticipantName() { return this.participantName; }\r\n    set ParticipantName(value: string) { this.participantName = value; }\r\n\r\n    get ParticipantCode() { return this.participantCode; }\r\n    set ParticipantCode(value: string) { this.participantCode = value; }\r\n\r\n    get ParticipantType() { return this.participantType; }\r\n    set ParticipantType(value: string) { this.participantType = value; }\r\n\r\n    get MustCompleted(): boolean { return this.mustCompleted; }\r\n    set MustCompleted(value: boolean) { this.mustCompleted = value; }\r\n\r\n    get Coefficient(): number { return this.coefficient; }\r\n    set Coefficient(value: number) { this.coefficient = value; }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, 'ParticipantId', this.ParticipantId);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'ParticipantName', this.ParticipantName);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'ParticipantCode', this.ParticipantCode);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'ParticipantType', this.ParticipantType);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'MustCompleted', this.MustCompleted);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Coefficient', this.Coefficient);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.ParticipantId = obj.ParticipantId;\r\n        this.ParticipantCode = obj.ParticipantCode;\r\n        this.ParticipantName = obj.ParticipantName;\r\n        this.ParticipantType = obj.ParticipantType;\r\n        this.MustCompleted = obj.MustCompleted;\r\n        this.Coefficient = obj.Coefficient;\r\n    }\r\n}","export enum WorkFlowAction {\r\n    /**\r\n     * 正向\r\n     * */\r\n    Forward = 'Forward',\r\n    /**\r\n     * 反向\r\n     * */\r\n    Backward = 'Backward',\r\n    /**\r\n     * 中止\r\n     * */\r\n    Abort = 'Abort'\r\n}","export class Xpression {\r\n    private _value: string = '';\r\n    constructor() {\r\n\r\n    }\r\n    Xpression(value: string) {\r\n        this._value = value;\r\n    }\r\n\r\n    get Value() { return this._value; }\r\n    set Value(value: string) { this._value = value; }\r\n}","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { MexExpressionImpl } from \"../../mex/MexExpressionImpl\";\r\nimport { ConditionType } from \"./ConditionType\";\r\nimport { ConditionValueVersion } from \"./ConditionValueVersion\";\r\n\r\nexport class SemanticExpression extends MexExpressionImpl {\r\n    static Clr_Type_ID = 'wf.SemanticExpression';\r\n    ClrTypeID: string = SemanticExpression.Clr_Type_ID;\r\n\r\n    NewInstance(): SemanticExpression {\r\n        return new SemanticExpression(this.Model);\r\n    }\r\n\r\n    private _value: string = '';\r\n    private valueVersion: ConditionValueVersion = ConditionValueVersion.Unsure;\r\n    private type: ConditionType = ConditionType.CONDITION;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    get ConditionType(): ConditionType { return this.type; }\r\n    set ConditionType(value: ConditionType) { this.type = value; }\r\n\r\n    get Value(): string { return this._value; }\r\n    set Value(value: string) { this._value = value; }\r\n\r\n    get ValueVersion(): ConditionValueVersion { return this.valueVersion; }\r\n    set ValueVersion(value: ConditionValueVersion) { this.valueVersion = value; }\r\n\r\n    ToString(): string {\r\n        return \"Condition[value='\" + this._value + \"'\" + \", type=\" + this.type + \"]\";\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.Value = '';\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionType\", this.ConditionType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Value\", this.Value);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ValueVersion\", this.ValueVersion);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.ConditionType = obj.ConditionType;\r\n        this.Value = obj.Value;\r\n        this.ValueVersion = obj.ValueVersion;\r\n    }\r\n\r\n    clone(): SemanticExpression {\r\n        const condition = new SemanticExpression(this.Model);\r\n        condition.Value = this.Value;\r\n        condition.ValueVersion = this.valueVersion;\r\n        condition.ConditionType = this.ConditionType;\r\n        return condition;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new SemanticExpression(new BpmnModel()));","export enum AsyncCallBackType {\r\n    // 不回调\r\n    NO = 'NO',\r\n    // 默认回调\r\n    DEFAULT = 'DEFAULT'\r\n}","export enum ExecutionType {\r\n    // 同步\r\n    SYNCHRONOUS = 'SYNCHRONOUS',\r\n    // 异步\r\n    ASYNCHRONOUS = 'ASYNCHRONOUS'\r\n}","import { BpmnModel, BpmnModelHelper, MexExtensionElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class ActualParameter extends MexExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.Mex.ActualParameter\";\r\n    ClrTypeID: string = ActualParameter.Clr_Type_ID;\r\n\r\n    NewInstance(): ActualParameter {\r\n        return new ActualParameter(this.Model);\r\n    }\r\n\r\n    Name: string;\r\n    Value: string;\r\n    ValueText: string;\r\n    Tag: string;\r\n\r\n    constructor(model: BpmnModel, name?: string, value?: string, valueText?: string, tag?: string) {\r\n        super(model);\r\n        this.Name = name;\r\n        this.Value = value;\r\n        this.ValueText = valueText;\r\n        this.Tag = tag;\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Value\", this.Value);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ValueText\", this.ValueText);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Tag\", this.Tag);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Name = obj.Name;\r\n        this.Value = obj.Value;\r\n        this.ValueText = obj.ValueText;\r\n        this.Tag = obj.Tag;\r\n    }\r\n\r\n    clone(): ActualParameter {\r\n        const parameter = new ActualParameter(this.Model);\r\n        parameter.Name = this.Name;\r\n        parameter.Value = this.Value;\r\n        parameter.Tag = this.Tag;\r\n        parameter.ValueText = this.ValueText;\r\n\r\n        return parameter;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ActualParameter(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, MexExtensionElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport abstract class WFExtensionElement extends ExtensionElement {\r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n    Description: string;\r\n    ExtendedAttributes: { [key: string]: string } = {};\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.ExtendedAttributes = {};\r\n    }\r\n\r\n    protected constructor(model: BpmnModel, id?: string, name?: string) {\r\n        super(model);\r\n        this.Id = id || '';\r\n        this.Name = name || '';\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Id\", this.Id);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Code\", this.Code);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Description\", this.Description);\r\n\r\n        let extAttributeElements = [];\r\n\r\n        for (let key in this.ExtendedAttributes) {\r\n            let obj = {};\r\n            BpmnModelHelper.SetAttributeValue(obj, \"Name\", key);\r\n            BpmnModelHelper.SetAttributeValue(obj, \"Value\", this.ExtendedAttributes[key]);\r\n            extAttributeElements.push(obj);\r\n        }\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ExtendedAttributes\", extAttributeElements);\r\n\r\n        if (this.GetMexExtensionElements4ConvertTo().length > 0) {\r\n\r\n            let mexJsonArray = [];\r\n            this.GetMexExtensionElements4ConvertTo().forEach((value) => {\r\n                mexJsonArray.push(value.ConvertToJsonObject());\r\n            });\r\n            BpmnModelHelper.SetAttributeValue(obj, \"MexExtensionElements\", mexJsonArray);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Id = obj.Id;\r\n        this.Code = obj.Code;\r\n        this.Name = obj.Name;\r\n        this.Description = obj.Description;\r\n\r\n        let extAttributeElements = obj.ExtendedAttributes as Array<any>;\r\n        if (extAttributeElements && extAttributeElements.length > 0) {\r\n            extAttributeElements.forEach((item) => {\r\n                this.ExtendedAttributes[item.Name] = item.Value;\r\n            });\r\n        }\r\n\r\n        let mexJsonArray = obj.MexExtensionElements as Array<any>;\r\n        if (mexJsonArray && mexJsonArray.length > 0) {\r\n            let list = new Array<MexExtensionElement>();\r\n            mexJsonArray.forEach((item) => {\r\n                let mexExtElementObj = BpmnModelHelper.GetElementType(item.ClrTypeID) as MexExtensionElement;\r\n                if (mexExtElementObj) {\r\n                    mexExtElementObj.LoadFromJsonObject(item);\r\n                    list.push(mexExtElementObj);\r\n                }\r\n            });\r\n            this.SetMexExtensionElements4LoadFrom(list);\r\n        }\r\n    }\r\n\r\n    protected GetMexExtensionElements4ConvertTo(): MexExtensionElement[] {\r\n        return [];\r\n    }\r\n    protected SetMexExtensionElements4LoadFrom(list: MexExtensionElement[]) {\r\n\r\n    }\r\n\r\n    GetExtendedAttributes(): { [key: string]: string } {\r\n        return this.ExtendedAttributes;\r\n    }\r\n\r\n}","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { AsyncCallBackType } from \"../../misc/AsyncCallBackType\";\r\nimport { ExecutionType } from \"../../misc/ExecutionType\";\r\nimport { ActualParameter } from \"../../parameter/WFActualParameter\";\r\nimport { WFExtensionElement } from \"../WFExtensionElement\";\r\nimport { ToolTime } from \"./ToolTime\";\r\n\r\nexport abstract class Tool extends WFExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.Tool\";\r\n    readonly ClrTypeID: string = Tool.Clr_Type_ID;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ActualParameters: Array<ActualParameter> = new Array<ActualParameter>();\r\n    Execution: ExecutionType = ExecutionType.SYNCHRONOUS;\r\n    AsyncCallBackType: AsyncCallBackType = AsyncCallBackType.NO;\r\n    Time: ToolTime = ToolTime.UNDEFINITION;\r\n    isForCompensation: boolean = false;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        let actualParametersElements = [];\r\n        if (this.ActualParameters !== null && this.ActualParameters.length > 0) {\r\n            this.ActualParameters.forEach((item) => {\r\n                actualParametersElements.push(item.ConvertToJsonObject());\r\n            });\r\n        }\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActualParameters\", actualParametersElements);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Execution', this.Execution);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Time', this.Time);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'IsForCompensation', this.isForCompensation);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        let actualParameters = obj.ActualParameters as Array<any>;\r\n        if (actualParameters !== null && actualParameters.length > 0) {\r\n            actualParameters.forEach((item) => {\r\n                let actualParameter = new ActualParameter(this.Model);\r\n                actualParameter.LoadFromJsonObject(item);\r\n                this.ActualParameters.push(actualParameter);\r\n            });\r\n        }\r\n\r\n        this.Execution = obj.Execution as ExecutionType;\r\n        this.Time = obj.Time as ToolTime;\r\n        this.isForCompensation = obj.IsForCompensation;\r\n    }\r\n}\r\n    // BpmnModelHelper.RegisterElementType(new Tool(new BpmnModel()));","export enum ToolTime {\r\n    /// <summary> 过程实例已经创建事件 </summary>\r\n    PROCESSINSTANCE_CREATED = \"PROCESSINSTANCE_CREATED\",\r\n    /// <summary> 过程实例已经启动事件 </summary>\r\n    PROCESSINSTANCE_STARTED = \"PROCESSINSTANCE_STARTED\",\r\n    /// <summary> 过程实例已经挂起事件 </summary>\r\n    PROCESSINSTANCE_SUSPENDED = \"PROCESSINSTANCE_SUSPENDED\",\r\n    /// <summary> 过程实例已经暂停事件 </summary>\r\n    PROCESSINSTANCE_RESUMED = \"PROCESSINSTANCE_RESUMED\",\r\n    /// <summary> 过程实例已经完成事件 </summary>  \r\n    PROCESSINSTANCE_COMPLETED = \"PROCESSINSTANCE_COMPLETED\",\r\n    /// <summary> 过程实例已经中止事件 </summary>\r\n    PROCESSINSTANCE_TERMINATED = \"PROCESSINSTANCE_TERMINATED\",\r\n\r\n    ///<summary>流程实例预警启动事件</summary>\r\n    PROCESSINSTANCE_ALARM = \"PROCESSINSTANCE_ALARM\",\r\n    ///<summary>流程实例超时事件</summary> \r\n    PROCESSINSTANCE_TIMEOUT = \"PROCESSINSTANCE_TIMEOUT\",\r\n    /// <summary> 过程实例已经删除事件 </summary>\r\n    PROCESSINSTANCE_DELETED = \"PROCESSINSTANCE_DELETED\",\r\n\r\n    PROCESSINSTANCE_REACTIVATED = 'PROCESSINSTANCE_REACTIVATED',\r\n\r\n    PROCESSINSTANCE_CANCELED = 'PROCESSINSTANCE_CANCELED',\r\n\r\n    PROCESSINSTANCE_ROLLBACK = 'PROCESSINSTANCE_ROLLBACK',\r\n    /// <summary> 驳回后重新提交 </summary>\r\n    PROCESSINSTANCE_RESUBMIT = 'PROCESSINSTANCE_RESUBMIT',\r\n    /// <summary> 环节办理人变更事件 </summary>\r\n    ACTIVITY_AND_PARTICIPANT_UPDATED = \"ACTIVITY_AND_PARTICIPANT_UPDATED\",\r\n\r\n    /// <summary> 活动实例已经创建事件 </summary>\r\n    ACTIVITY_CREATED = \"ACTIVITY_CREATED\",\r\n    /// <summary> 活动实例已经启动事件 </summary>\r\n    ACTIVITY_STARTED = \"ACTIVITY_STARTED\",\r\n    /// <summary> 活动实例已经挂起事件 </summary>\r\n    ACTIVITY_SUSPENDED = \"ACTIVITY_SUSPENDED\",\r\n    /// <summary> 活动实例已经恢复事件 </summary>\r\n    ACTIVITY_RESUMED = \"ACTIVITY_RESUMED\",\r\n    /// <summary> 活动实例已经完成事件 </summary>\r\n    ACTIVITY_COMPLETED = \"ACTIVITY_COMPLETED\",\r\n    /// <summary> 活动实例已经终止事件 </summary>\r\n    ACTIVITY_TERMINATED = \"ACTIVITY_TERMINATED\",\r\n\r\n    /// <summary> 工作项已经创建事件 </summary>\r\n    WORKITEM_CREATED = \"WORKITEM_CREATED\",\r\n    /// <summary> 工作项已经分配事件 </summary>\r\n    WORKITEM_ASSIGNED = \"WORKITEM_ASSIGNED\",\r\n    /// <summary> 工作项已经启动事件 </summary>\r\n    WORKITEM_STARTED = \"WORKITEM_STARTED\",\r\n    /// <summary> 工作项已经挂起事件 </summary>\r\n    WORKITEM_SUSPENDED = \"WORKITEM_SUSPENDED\",\r\n    /// <summary> 工作项已经暂停事件 </summary>\r\n    WORKITEM_RESUMED = \"WORKITEM_RESUMED\",\r\n    /// <summary> 工作项已经完成事件 </summary>\r\n    WORKITEM_COMPLETED = \"WORKITEM_COMPLETED\",\r\n    /// <summary> 工作项已经终止事件 </summary>\r\n    WORKITEM_TERMINATED = \"WORKITEM_TERMINATED\",\r\n    /// <summary> 工作项预警启动事件 </summary>\r\n    WORKITEM_ALARM = \"WORKITEM_ALARM\",\r\n    /// <summary> 工作项超时事件</summary>\r\n    WORKITEM_TIMEOUT = \"WORKITEM_TIMEOUT\",\r\n\r\n    /// <summary> 未定义</summary>\r\n    UNDEFINITION = \"UNDEFINITION\",\r\n\r\n    LOADDATA = \"LOADDATA\"\r\n\r\n}","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { Tool } from \"./Tool\";\r\n\r\nexport class Component extends Tool {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n    static Clr_Type_ID: string = \"wf.Component\";\r\n    ClrTypeID: string = Component.Clr_Type_ID;\r\n    MetadataId: string;\r\n    ComponentType: string;\r\n    MethodCode: string;\r\n    ScopeType: string;\r\n    NewInstance(): Component {\r\n        return new Component(this.Model);\r\n    }\r\n\r\n    //Json 序列化\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MetadataId\", this.MetadataId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ComponentType\", this.ComponentType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MethodCode\", this.MethodCode);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ScopeType\", this.ScopeType);\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.MetadataId = obj.MetadataId;\r\n        this.ComponentType = obj.ComponentType;\r\n        this.MethodCode = obj.MethodCode;\r\n        this.ScopeType = obj.ScopeType;\r\n    }\r\n\r\n    clone(): Component {\r\n        const component = new Component(this.Model);\r\n        component.Id = BpmnModelHelper.GenerateElementId();\r\n        component.Code = this.Code;\r\n        component.Name = this.Name;\r\n        component.Description = this.Description;\r\n        component.Execution = this.Execution;\r\n        component.AsyncCallBackType = this.AsyncCallBackType;\r\n        component.Time = this.Time;\r\n        component.isForCompensation = this.isForCompensation;\r\n        if (this.ActualParameters && this.ActualParameters.length > 0) {\r\n            for (const p of this.ActualParameters) {\r\n                const parameter = p.clone();\r\n                component.ActualParameters.push(parameter);\r\n            }\r\n        }\r\n        component.MetadataId = this.MetadataId;\r\n        component.ComponentType = this.ComponentType;\r\n        component.MethodCode = this.MethodCode;\r\n        component.ScopeType = this.ScopeType;\r\n\r\n        return component;\r\n    }\r\n\r\n\r\n}\r\nBpmnModelHelper.RegisterElementType(new Component(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ActualParameter } from \"../parameter/WFActualParameter\";\r\n\r\nexport class CustomizeAction extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.CustomizeAction\";\r\n    readonly ClrTypeID: string = CustomizeAction.Clr_Type_ID;\r\n\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    terminalType: string;\r\n    // enable: boolean;\r\n    actualParameters: ActualParameter[];\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.id = null;\r\n        this.code = null;\r\n        this.name = null;\r\n        this.terminalType = null;\r\n        // this.enable = true;\r\n        this.actualParameters = [];\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Id\", this.id);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Code\", this.code);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"TerminalType\", this.terminalType);\r\n        // BpmnModelHelper.SetAttributeValue(obj, \"Enable\", this.enable);\r\n\r\n        let actualParametersElements = [];\r\n        if (this.actualParameters !== null && this.actualParameters.length > 0) {\r\n            this.actualParameters.forEach((item) => {\r\n                actualParametersElements.push(item.ConvertToJsonObject());\r\n            });\r\n        }\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActualParameters\", actualParametersElements);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.id = obj.Id;\r\n        this.code = obj.Code;\r\n        this.name = obj.Name;\r\n        this.terminalType = obj.TerminalType;\r\n        // this.enable = obj.Enable;\r\n\r\n        let actualParameters = obj.ActualParameters as Array<any>;\r\n        if (actualParameters !== null && actualParameters.length > 0) {\r\n            actualParameters.forEach((item) => {\r\n                let actualParameter: ActualParameter = new ActualParameter(this.Model);\r\n                actualParameter.LoadFromJsonObject(item);\r\n                this.actualParameters.push(actualParameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    NewInstance(): CustomizeAction {\r\n        return new CustomizeAction(this.Model);\r\n    }\r\n\r\n    clone(): CustomizeAction {\r\n        const customizeAction = new CustomizeAction(this.Model);\r\n        customizeAction.id = BpmnModelHelper.GenerateElementId();\r\n        customizeAction.code = this.code;\r\n        customizeAction.name = this.name;\r\n        customizeAction.terminalType = this.terminalType;\r\n\r\n        customizeAction.actualParameters = new Array();\r\n        if (this.actualParameters && this.actualParameters.length > 0) {\r\n            for (const p of this.actualParameters) {\r\n                const actualParameter = p.clone();\r\n                customizeAction.actualParameters.push(actualParameter);\r\n            }\r\n        }\r\n\r\n        return customizeAction;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new CustomizeAction(new BpmnModel()));","export enum DisplayTerminal {\r\n    ALL = 'ALL',\r\n    WEB = 'WEB',\r\n    APP = 'APP'\r\n}\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { ActualParameter } from \"../parameter/WFActualParameter\";\r\n\r\nexport class ExecuteForm extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.ExecuteForm\";\r\n    readonly ClrTypeID: string = ExecuteForm.Clr_Type_ID;\r\n\r\n    NewInstance(): ExecuteForm {\r\n        return new ExecuteForm(this.Model);\r\n    }\r\n\r\n    constructor(model: BpmnModel, id?: string, name?: string, actualParameters?: ActualParameter[]) {\r\n        super(model);\r\n        this.Id = id || '';\r\n        this.Name = name || '';\r\n        this.ActualParameters = actualParameters || [];\r\n    }\r\n\r\n    FormType: string;\r\n    Id: string;\r\n    Name: string;\r\n\r\n    ComponentId: string;\r\n    TerminalType: TerminalType;\r\n\r\n    ActualParameters: ActualParameter[];\r\n\r\n    formFormatId: string;\r\n    formatConfigId: string;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.FormType = null;\r\n        this.Id = null;\r\n        this.Name = null;\r\n        this.ActualParameters = [];\r\n        this.ComponentId = null;\r\n        this.formFormatId = null;\r\n        this.formatConfigId = null;\r\n        this.TerminalType = TerminalType.PC;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"FormType\", this.FormType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Id\", this.Id);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ComponentId\", this.ComponentId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"TerminalType\", this.TerminalType);\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"FormFormatId\", this.formFormatId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"FormatConfigId\", this.formatConfigId);\r\n\r\n        let actualParametersElements = [];\r\n        if (this.ActualParameters !== null && this.ActualParameters.length > 0) {\r\n            this.ActualParameters.forEach((item) => {\r\n                actualParametersElements.push(item.ConvertToJsonObject());\r\n            });\r\n        }\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActualParameters\", actualParametersElements);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.FormType = obj.FormType;\r\n        this.Id = obj.Id;\r\n        this.Name = obj.Name;\r\n        this.ComponentId = obj.ComponentId;\r\n        this.TerminalType = obj.TerminalType as TerminalType;\r\n\r\n        this.formFormatId = ExtensionMethod.GetAttributeValue4String(obj, \"FormFormatId\");\r\n        this.formatConfigId = ExtensionMethod.GetAttributeValue4String(obj, \"FormatConfigId\");\r\n\r\n        let actualParameters = obj.ActualParameters as Array<any>;\r\n        if (actualParameters !== null && actualParameters.length > 0) {\r\n            actualParameters.forEach((item) => {\r\n                let actualParameter: ActualParameter = new ActualParameter(this.Model);\r\n                actualParameter.LoadFromJsonObject(item);\r\n                this.ActualParameters.push(actualParameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    clone(): ExecuteForm {\r\n        const executeForm = new ExecuteForm(this.Model);\r\n        executeForm.Id = BpmnModelHelper.GenerateElementId();\r\n        executeForm.Name = this.Name;\r\n        executeForm.FormType = this.FormType;\r\n        executeForm.formFormatId = this.formFormatId;\r\n        executeForm.formatConfigId = this.formatConfigId;\r\n        executeForm.TerminalType = this.TerminalType;\r\n        executeForm.ComponentId = this.ComponentId;\r\n        executeForm.ActualParameters = new Array();\r\n        if (this.ActualParameters && this.ActualParameters.length > 0) {\r\n            for (const p of this.ActualParameters) {\r\n                const parameter = p.clone();\r\n                executeForm.ActualParameters.push(parameter);\r\n            }\r\n        }\r\n        return executeForm;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ExecuteForm(new BpmnModel()));\r\n\r\nexport enum TerminalType {\r\n    PC = 'PC',\r\n    MOBILE = 'MOBILE'\r\n}","export enum JumpScopeCategory {\r\n\r\n    /// 仅转移线直接连接的节点\r\n    OutConnectNode = 'OutConnectNode',\r\n\r\n    /// 流程范围内任意跳转\r\n    Global = 'Global',\r\n\r\n    /// 后继活动范围内跳转\r\n    AfterNodes = 'AfterNodes',\r\n\r\n    /// 指定的活动范围内跳转\r\n    SpecifiedSet = 'SpecifiedSet',\r\n\r\n}\r\n","export enum JumpScopeDefaultType {\r\n\r\n    /// 默认选中第一行\r\n    FirstNode = 'FirstNode',\r\n\r\n    /// 强制手工选择\r\n    NullNode = 'NullNode',\r\n\r\n    /// 指定节点\r\n    SpecifyNode = 'SpecifyNode',\r\n\r\n}","import { BpmnModel, BpmnModelHelper, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { JumpScopeCategory } from \"./JumpScopeCategory\";\r\nimport { JumpScopeDefaultType } from \"./JumpScopeDefaultType\";\r\n\r\nexport class JumpScope extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.JumpScope\";\r\n    readonly ClrTypeID: string = JumpScope.Clr_Type_ID;\r\n\r\n    NewInstance(): JumpScope {\r\n        return new JumpScope(this.Model);\r\n    }\r\n\r\n    Category: JumpScopeCategory;\r\n    DefaultType: JumpScopeDefaultType;\r\n    DestinationActivities: Array<string>;\r\n    DefaultActivity: string;\r\n    constructor(model: BpmnModel, category?: JumpScopeCategory, DefaultType?: JumpScopeDefaultType) {\r\n        super(model);\r\n        this.Category = category || JumpScopeCategory.SpecifiedSet;\r\n        this.DefaultType = DefaultType || JumpScopeDefaultType.FirstNode;\r\n        this.DestinationActivities = new Array<string>();\r\n        this.DefaultActivity = '';\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.Category = JumpScopeCategory.Global;\r\n        this.DefaultType = JumpScopeDefaultType.FirstNode;\r\n        this.DestinationActivities = new Array<string>();\r\n        this.DefaultActivity = '';\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Category\", this.Category);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DefaultType\", this.DefaultType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DestinationActivities\", this.DestinationActivities);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DefaultActivity\", this.DefaultActivity);\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        this.Category = obj.Category;\r\n        this.DefaultType = obj.DefaultType;\r\n        this.DestinationActivities = obj.DestinationActivities;\r\n        this.DefaultActivity = obj.DefaultActivity;\r\n    }\r\n\r\n    clone(): JumpScope {\r\n        const jumpScope = new JumpScope(this.Model);\r\n        jumpScope.Category = this.Category;\r\n        jumpScope.DefaultType = this.DefaultType;\r\n        jumpScope.DefaultActivity = this.DefaultActivity;\r\n        jumpScope.DestinationActivities = new Array();\r\n        if (this.DestinationActivities && this.DestinationActivities.length > 0) {\r\n            for (const d of this.DestinationActivities) {\r\n                jumpScope.DestinationActivities.push(d);\r\n            }\r\n        }\r\n        return jumpScope;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new JumpScope(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ExecutionType } from \"../misc/ExecutionType\";\r\n\r\nexport class Notification extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.Notification\";\r\n    readonly ClrTypeID: string = Notification.Clr_Type_ID;\r\n\r\n    NewInstance(): Notification {\r\n        return new Notification(this.Model);\r\n    }\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    // 属性\r\n    /// <summary>消息id</summary>\r\n    Id: string;\r\n    /// <summary>消息名称</summary>\r\n    Name: string;\r\n    /// <summary>发送消息的时机</summary>\r\n    Time: NotifyTime;\r\n    /// <summary>发送消息的条件</summary>\r\n    Condition: string;\r\n    /// <summary>消息发送者</summary>\r\n    SenderName: string;\r\n    /// <summary>消息接收者</summary>\r\n    Receiver: string;\r\n    /// <summary>发送消息的方式</summary>\r\n    Way: string;\r\n    /// <summary>消息体</summary>\r\n    Header: string;\r\n    ///<summary>消息正文</summary>\r\n    Body: string;\r\n    ///<summary>消息落款</summary>\r\n    Footer: string;\r\n    /// <summary>是否发消息给临时授权受托人。</summary>\r\n    SendTempAssMessage: boolean;\r\n    /// <summary>消息的发送方式：同步或者异步</summary>\r\n    Execution: ExecutionType = ExecutionType.SYNCHRONOUS;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ToString(): string {\r\n        return \"Message[name='\" + this.Name + \"'\" + \", content='\" + this.Header + \"\\r\\n\" + this.Body + \"\\r\\n\" + this.Footer + \"'\" + \",receiver=\" + this.Receiver + \"]\";\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Id', this.Id);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Name', this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Time', this.Time);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Condition', this.Condition);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'SenderName', this.SenderName);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Receiver', this.Receiver);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Way', this.Way);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Header', this.Header);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Body', this.Body);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Footer', this.Footer);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'SendTempAssMessage', this.SendTempAssMessage);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Execution', this.Execution);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Id = obj.Id;\r\n        this.Name = obj.Name;\r\n        this.Time = obj.Time as NotifyTime;\r\n        this.Condition = obj.Condition;\r\n        this.SenderName = obj.SenderName;\r\n        this.Receiver = obj.Receiver;\r\n        this.Way = obj.Way;\r\n        this.Header = obj.Header;\r\n        this.Body = obj.Body;\r\n        this.Footer = obj.Footer;\r\n        this.SendTempAssMessage = obj.SendTempAssMessage;\r\n        this.Execution = obj.Execution as ExecutionType;\r\n    }\r\n\r\n    clone(): Notification {\r\n        const notification = new Notification(this.Model);\r\n\r\n        return notification;\r\n    }\r\n}\r\nexport enum NotifyTime {\r\n    ///<summary>流程实例预警启动事件</summary>\r\n    PROCESSINSTANCE_ALARM,\r\n    ///<summary>流程实例超时事件</summary> \r\n    PROCESSINSTANCE_TIMEOUT,\r\n    /// <summary> 过程实例已经异常退出事件 </summary>\r\n    PROCESSINSTANCE_ABORT,\r\n    /// <summary> 过程实例已经完成事件 </summary>  \r\n    PROCESSINSTANCE_COMPLETE,\r\n    /// <summary> 过程实例已经创建事件 </summary>\r\n    PROCESSINSTANCE_CREATE,\r\n    /// <summary> 过程实例已经删除事件 </summary>\r\n    PROCESSINSTANCE_DELETE,\r\n    /// <summary> 过程实例已经暂停事件 </summary>\r\n    PROCESSINSTANCE_RESUME,\r\n    /// <summary> 过程实例已经启动事件 </summary>\r\n    PROCESSINSTANCE_START,\r\n    /// <summary> 过程实例已经挂起事件 </summary>\r\n    PROCESSINSTANCE_SUSPEND,\r\n    /// <summary> 过程实例已经中止事件 </summary>\r\n    PROCESSINSTANCE_TERMINATE,\r\n\r\n    /// <summary> 活动实例已经异常退出事件 </summary>\r\n    ACTIVITY_ABORTED,\r\n    /// <summary> 活动实例已经完成事件 </summary>\r\n    ACTIVITY_COMPLETED,\r\n    /// <summary> 活动实例已经创建事件 </summary>\r\n    ACTIVITY_CREATED,\r\n    /// <summary> 活动实例已经暂停事件 </summary>\r\n    ACTIVITY_RESUMED,\r\n    /// <summary> 活动实例已经启动事件 </summary>\r\n    ACTIVITY_STARTED,\r\n    /// <summary> 活动实例已经停止事件 </summary>\r\n    ACTIVITY_STOPPED,\r\n    /// <summary> 活动实例已经挂起事件 </summary>\r\n    ACTIVITY_SUSPENDED,\r\n    /// <summary> 活动实例已经中止事件 </summary>\r\n    ACTIVITY_TERMINATED,\r\n    /// <summary>活动实例已经取回</summary>\r\n    ACTIVITY_RETRIEVED,\r\n    /// <summary>活动实例从该活动取回</summary>\r\n    ACTIVITY_RETRIEVED_FROM,\r\n    /// <summary>活动实例回退</summary>\r\n    ACTIVITY_ROLLBACK,\r\n    /// <summary>活动实例回退到该活动 </summary>\r\n    ACTIVITY_ROLLBACK_TO,\r\n\r\n    /// <summary> 工作项已经异常退出事件 </summary>\r\n    WORKITEM_ABORTED,\r\n    /// <summary> 工作项已经分配事件 </summary>\r\n    WORKITEM_ASSIGNED,\r\n    /// <summary> 工作项已经完成事件 </summary>\r\n    WORKITEM_COMPLETED,\r\n    /// <summary> 工作项已经创建事件 </summary>\r\n    WORKITEM_CREATED,\r\n    /// <summary> 工作项已经暂停事件 </summary>\r\n    WORKITEM_RESUMED,\r\n    /// <summary> 工作项已经启动事件 </summary>\r\n    WORKITEM_STARTED,\r\n    /// <summary> 工作项已经停止事件 </summary>\r\n    WORKITEM_STOPPED,\r\n    /// <summary> 工作项已经挂起事件 </summary>\r\n    WORKITEM_SUSPENDED,\r\n    /// <summary> 工作项已经终止事件 </summary>\r\n    WORKITEM_TERMINATED,\r\n\r\n    /// <summary> 工作项预警启动事件 </summary>\r\n    WORKITEM_ALARM,\r\n    /// <summary> 工作项超时事件</summary>\r\n    WORKITEM_TIMEOUT,\r\n    /// <summary> 未定义</summary>\r\n    UNDEFINITION,\r\n}","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { Condition } from \"./condition-expression/Condition\";\r\n\r\nexport class OtherAssignActivityNodeInfo extends ExtensionElement {\r\n\r\n    static Clr_Type_ID: string = \"wf.OtherAssignActivityNodeInfo\";\r\n    readonly ClrTypeID: string = OtherAssignActivityNodeInfo.Clr_Type_ID;\r\n\r\n    activityDefinitionId: string;\r\n\r\n    condition: Condition;\r\n\r\n    required: boolean;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActivityDefinitionId\", this.activityDefinitionId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Required\", this.required);\r\n        if(this.condition){\r\n            BpmnModelHelper.SetAttributeValue(obj, \"Condition\", this.condition.ConvertToJsonObject());\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        this.activityDefinitionId = ExtensionMethod.GetAttributeValue4String(obj, \"ActivityDefinitionId\");\r\n        this.required = ExtensionMethod.GetAttributeValue4Boolean(obj, \"Required\");\r\n        const conditionElement = ExtensionMethod.GetAttributeValue(obj, 'Condition');\r\n        if (conditionElement) {\r\n            const condition = new Condition(this.Model);\r\n            condition.LoadFromJsonObject(conditionElement);\r\n            this.condition = condition;\r\n        }\r\n    }\r\n\r\n    clone(): OtherAssignActivityNodeInfo {\r\n        const otherAssignActivityNodeInfo = new OtherAssignActivityNodeInfo(this.Model);\r\n        otherAssignActivityNodeInfo.activityDefinitionId = this.activityDefinitionId;\r\n        if (this.condition) {\r\n            otherAssignActivityNodeInfo.condition = this.condition.clone();\r\n        }\r\n        otherAssignActivityNodeInfo.required = this.required;\r\n        return otherAssignActivityNodeInfo;\r\n    }\r\n\r\n    NewInstance(): OtherAssignActivityNodeInfo {\r\n        return new OtherAssignActivityNodeInfo(this.Model);\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new OtherAssignActivityNodeInfo(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { OtherAssignActivityNodeInfo } from \"./OtherAssignActivityNodeInfo\";\r\n\r\nexport class OtherAssignNodes extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.OtherAssignNodes\";\r\n    readonly ClrTypeID: string = OtherAssignNodes.Clr_Type_ID;\r\n\r\n    otherAssignActivities: Array<string>;\r\n\r\n    otherAssignActivityNodeInfos: Array<OtherAssignActivityNodeInfo>;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.otherAssignActivityNodeInfos = new Array();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        if (this.otherAssignActivityNodeInfos && this.otherAssignActivityNodeInfos.length > 0) {\r\n            const destArray = new Array();\r\n            for (const item of this.otherAssignActivityNodeInfos) {\r\n                destArray.push(item.ConvertToJsonObject());\r\n            }\r\n            BpmnModelHelper.SetAttributeValue(obj, \"OtherAssignActivityNodeInfos\", destArray);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        const destArrayElement: Array<string> = ExtensionMethod.GetAttributeValue(obj, \"OtherAssignActivities\");\r\n        if (destArrayElement && destArrayElement.length > 0) {\r\n            for (const item of destArrayElement) {\r\n                this.otherAssignActivities.push(item);\r\n            }\r\n        }\r\n\r\n        const newDestArrayElement: Array<OtherAssignActivityNodeInfo> = ExtensionMethod.GetAttributeValue(obj, \"OtherAssignActivityNodeInfos\");\r\n        if (newDestArrayElement && newDestArrayElement.length > 0) {\r\n            for (const item of newDestArrayElement) {\r\n                const otherInfo = new OtherAssignActivityNodeInfo(this.Model);\r\n                otherInfo.LoadFromJsonObject(item);\r\n                this.otherAssignActivityNodeInfos.push(otherInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    clone(): OtherAssignNodes {\r\n        const assignScope = new OtherAssignNodes(this.Model);\r\n        assignScope.otherAssignActivities = new Array();\r\n        if (this.otherAssignActivities && this.otherAssignActivities.length > 0) {\r\n            for (const d of this.otherAssignActivities) {\r\n                assignScope.otherAssignActivities.push(d);\r\n            }\r\n        }\r\n        assignScope.otherAssignActivityNodeInfos = new Array();\r\n        if (this.otherAssignActivityNodeInfos && this.otherAssignActivityNodeInfos.length > 0) {\r\n            for (const d of this.otherAssignActivityNodeInfos) {\r\n                assignScope.otherAssignActivityNodeInfos.push(d.clone());\r\n            }\r\n        }\r\n        return assignScope;\r\n    }\r\n\r\n    NewInstance(): OtherAssignNodes {\r\n        return new OtherAssignNodes(this.Model);\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new OtherAssignNodes(new BpmnModel()));","export enum StartMode {\r\n    /**\r\n     * 直接启动\r\n     */\r\n    DIRECT = 'DIRECT',\r\n    /**\r\n     * 外部流程启动\r\n     */\r\n    EXTERNAL_PROCESS = 'EXTERNAL_PROCESS',\r\n    /**\r\n     * 子流程启动\r\n     */\r\n    SUB_PROCESS = 'SUB_PROCESS'\r\n    // PUBLIC = 'PUBLIC',\r\n    // PROTECTED = 'PROTECTED',\r\n    // PRIVATE = 'PRIVATE'\r\n}","import { BpmnModel, BpmnModelHelper, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { StartMode } from \"./StartMode\";\r\n\r\nexport class ProcessHeader extends ExtensionElement {\r\n\r\n    ClrTypeID: string = \"wf.ProcessHeader\";\r\n\r\n    NewInstance(): ProcessHeader {\r\n        return new ProcessHeader(this.Model);\r\n    }\r\n\r\n    BizDefKey: string;\r\n    BizDefName: string;\r\n    BizObjId: string;\r\n    allowPreAssign: boolean;\r\n    enablePriority: boolean;\r\n    enableWholeOrderRetrieve: boolean;\r\n    startMode: StartMode;\r\n    constructor(model: BpmnModel, bizDefKey?: string, bizObjId?: string, bizDefName?: string, startMode?: StartMode) {\r\n        super(model);\r\n\r\n        this.BizDefKey = bizDefKey || '';\r\n        this.BizObjId = bizObjId || '';\r\n        this.BizDefName = bizDefName || '';\r\n        this.allowPreAssign = false;\r\n        this.enablePriority = false;\r\n        this.enableWholeOrderRetrieve = false; \r\n        this.startMode = startMode || StartMode.DIRECT;\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.BizDefKey = null;\r\n        this.BizObjId = null;\r\n        this.BizDefName = null;\r\n        this.allowPreAssign = false;\r\n        this.enablePriority = false;\r\n        this.enableWholeOrderRetrieve = false;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"BizDefKey\", this.BizDefKey);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"BizObjId\", this.BizObjId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"BizDefName\", this.BizDefName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"AllowPreAssign\", this.allowPreAssign);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"EnablePriority\", this.enablePriority);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"EnableWholeOrderRetrieve\", this.enableWholeOrderRetrieve);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"StartMode\", this.startMode);\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.BizDefKey = obj.BizDefKey;\r\n        this.BizObjId = obj.BizObjId;\r\n        this.BizDefName = obj.BizDefName;\r\n        this.allowPreAssign = obj.AllowPreAssign;\r\n        this.enablePriority = obj.EnablePriority;\r\n        this.enableWholeOrderRetrieve = obj.EnableWholeOrderRetrieve;\r\n        if (obj.StartMode) {\r\n            this.startMode = obj.StartMode;\r\n        } else if (obj.AccessLevel) {\r\n            switch (obj.AccessLevel) {\r\n                case 'PUBLIC':\r\n                    this.startMode = StartMode.DIRECT;\r\n                    break;\r\n                case 'PROTECTED':\r\n                    this.startMode = StartMode.EXTERNAL_PROCESS;\r\n                    break;\r\n                case 'PRIVATE':\r\n                    this.startMode = StartMode.SUB_PROCESS;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ProcessHeader(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class ExtendProperty extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.ExtendProperty\";\r\n    readonly ClrTypeID: string = ExtendProperty.Clr_Type_ID;\r\n\r\n    /**\r\n     * 扩展属性key值\r\n     */\r\n    key: string;\r\n    /**\r\n     * 扩展属性value值\r\n     */\r\n    value: string;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Key\", this.key);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Value\", this.value);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.key = ExtensionMethod.GetAttributeValue4String(obj, \"Key\");\r\n        this.value = ExtensionMethod.GetAttributeValue4String(obj, \"Value\");\r\n    }\r\n\r\n    NewInstance(): ExtendProperty {\r\n        return new ExtendProperty(this.Model);\r\n    }\r\n\r\n    clone(): ExtendProperty {\r\n        const extendProperty = new ExtendProperty(this.Model);\r\n        extendProperty.key = this.key;\r\n        extendProperty.value = this.value;\r\n\r\n        return extendProperty;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ExtendProperty(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, StartEvent, ExtensionMethod, ValidationError } from \"@edp-pmf/bpmn-model\";\r\nimport { ExtendProperty } from \"../ExtendProperty\";\r\nimport { ExecuteForm, TerminalType } from \"../extension/ExecuteForm\";\r\nimport { JumpScope } from \"../extension/JumpScope\";\r\nimport { OtherAssignNodes } from \"../extension/OtherAssignNodes\";\r\nimport { ActualParameter } from \"../parameter/WFActualParameter\";\r\n\r\nexport class StartActivity extends StartEvent {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n        this.selectTargetAble = false;\r\n    }\r\n    static Clr_Type_ID: string = \"wf.StartActivity\";\r\n    ClrTypeID: string = StartActivity.Clr_Type_ID;\r\n    private static MEXTAG: string = \"wf.StartActivity\";\r\n\r\n    ExecuteForms: Array<ExecuteForm>;\r\n    extendProperties: Array<ExtendProperty>;\r\n\r\n    sendBackedTask: boolean = true;\r\n\r\n    selectTargetAble: boolean;\r\n    jumpScope: JumpScope;\r\n\r\n    otherAssignNodes: OtherAssignNodes;\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.ExecuteForms = new Array<ExecuteForm>();\r\n        this.extendProperties = new Array<ExtendProperty>();\r\n        this.sendBackedTask = true;\r\n        this.selectTargetAble = false;\r\n        this.jumpScope = null;\r\n        this.otherAssignNodes = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, 'SendBackedTask', this.sendBackedTask);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'SelectTargetAble', this.selectTargetAble);\r\n        return obj;\r\n    }\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        this.sendBackedTask = ExtensionMethod.GetAttributeValue4Boolean(obj, \"SendBackedTask\");\r\n        this.selectTargetAble = ExtensionMethod.GetAttributeValue4Boolean(obj, \"SelectTargetAble\");\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n        if (this.ExecuteForms != null) {\r\n            for (let form of this.ExecuteForms) {\r\n                form.MexTag = StartActivity.MEXTAG;\r\n                list.push(form);\r\n            }\r\n        }\r\n        if (this.extendProperties != null) {\r\n            for (let e of this.extendProperties) {\r\n                e.MexTag = StartActivity.MEXTAG;\r\n                list.push(e);\r\n            }\r\n        }\r\n        if (this.jumpScope != null) {\r\n            this.jumpScope.MexTag = StartActivity.MEXTAG;\r\n            list.push(this.jumpScope);\r\n        }\r\n        if (this.otherAssignNodes != null) {\r\n            this.otherAssignNodes.MexTag = StartActivity.MEXTAG;\r\n            list.push(this.otherAssignNodes);\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement.MexTag !== StartActivity.MEXTAG)\r\n                continue;\r\n            switch (extensionElement.ClrTypeID) {\r\n                case ExecuteForm.Clr_Type_ID:\r\n                    this.ExecuteForms.push(extensionElement as ExecuteForm);\r\n                    break;\r\n                case ExtendProperty.Clr_Type_ID:\r\n                    this.extendProperties.push(extensionElement as ExtendProperty)\r\n                    break;\r\n                case JumpScope.Clr_Type_ID:\r\n                    this.jumpScope = (extensionElement as JumpScope);\r\n                    break;\r\n                case OtherAssignNodes.Clr_Type_ID:\r\n                    this.otherAssignNodes = (extensionElement as OtherAssignNodes);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    NewInstance(): StartActivity {\r\n        return new StartActivity(this.Model);\r\n    }\r\n    /**\r\n    * 模型校验\r\n    * @param errors 模型校验错误信息\r\n    */\r\n    Validate(errors: ValidationError[]): void {\r\n        // TODO: 需要添加自定义校验信息\r\n        super.Validate(errors);\r\n    }\r\n\r\n    clone(): StartActivity {\r\n        const startActivity = new StartActivity(this.Model);\r\n        startActivity.Name = this.Name;\r\n        startActivity.sendBackedTask = this.sendBackedTask;\r\n        startActivity.selectTargetAble = this.selectTargetAble;\r\n        startActivity.jumpScope = null;\r\n        if (this.jumpScope) {\r\n            startActivity.jumpScope = this.jumpScope.clone();\r\n        }\r\n        startActivity.ExecuteForms = new Array();\r\n        if (this.ExecuteForms && this.ExecuteForms.length > 0) {\r\n            for (const f of this.ExecuteForms) {\r\n                const executeForm = f.clone()\r\n                startActivity.ExecuteForms.push(executeForm);\r\n            }\r\n        }\r\n        if (this.extendProperties && this.extendProperties.length > 0) {\r\n            for (const e of this.extendProperties) {\r\n                const extendProperty = e.clone();\r\n                startActivity.extendProperties.push(extendProperty);\r\n            }\r\n        }\r\n        if (this.otherAssignNodes) {\r\n            startActivity.otherAssignNodes = this.otherAssignNodes.clone();\r\n        }\r\n        return startActivity;\r\n    }\r\n\r\n    setDefaultForms(forms: Array<any>) {\r\n        if (!this.ExecuteForms) {\r\n            this.ExecuteForms = new Array();\r\n        }\r\n        for (const form of forms) {\r\n            let params = form.urlParameters as any[];\r\n            let actParas = new Array<ActualParameter>();\r\n            if (params && params.length > 0) {\r\n                for (let para of params) {\r\n                    let actPara = new ActualParameter(this.Model, para.code, para.value);\r\n                    if (para.Value && para.Value.length >= 8 && para.Value.slice(0, 8) === `{\"expr\":`) {\r\n                        actPara.Tag = 'expression';\r\n                    } else {\r\n                        actPara.Tag = 'constant';\r\n                    }\r\n                    actParas.push(actPara);\r\n                }\r\n            }\r\n            const id = BpmnModelHelper.GenerateElementId();\r\n            let item = new ExecuteForm(this.Model, id, form.name, actParas);\r\n            item.ComponentId = null;\r\n            item.FormType = '0';\r\n            item.formFormatId = form.id;\r\n            if (form.terminal === 'PC') {\r\n                item.TerminalType = TerminalType.PC;\r\n            } else if (form.terminal === 'Mobile') {\r\n                item.TerminalType = TerminalType.MOBILE;\r\n            }\r\n            this.ExecuteForms.push(item);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nBpmnModelHelper.RegisterElementType(new StartActivity(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ApprovalPivotType } from \"./ApprovalPivotType\";\r\nimport { Condition } from \"./extension/condition-expression/Condition\";\r\n\r\nexport class ApprovalPivot extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.ApprovalPivot\";\r\n    readonly ClrTypeID: string = ApprovalPivot.Clr_Type_ID;\r\n\r\n    type: ApprovalPivotType;\r\n    condition: Condition;\r\n    title: string;\r\n    description: string;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Type\", this.type);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Title\", this.title);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Description\", this.description);\r\n        if (this.condition) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"Condition\", this.condition.ConvertToJsonObject());\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.type = ExtensionMethod.GetAttributeValue4String(obj, \"Type\") as ApprovalPivotType;\r\n        this.title = ExtensionMethod.GetAttributeValue4String(obj, \"Title\");\r\n        this.description = ExtensionMethod.GetAttributeValue4String(obj, \"Description\");\r\n        const conditionElement = ExtensionMethod.GetAttributeValue(obj, 'Condition');\r\n        if (conditionElement) {\r\n            const condition = new Condition(this.Model);\r\n            condition.LoadFromJsonObject(conditionElement);\r\n            this.condition = condition;\r\n        }\r\n    }\r\n\r\n    NewInstance(): ApprovalPivot {\r\n        return new ApprovalPivot(this.Model);\r\n    }\r\n\r\n    clone(): ApprovalPivot {\r\n        const approvalPivot = new ApprovalPivot(this.Model);\r\n        approvalPivot.type = this.type;\r\n        approvalPivot.title = this.title;\r\n        approvalPivot.description = this.description;\r\n        if (this.condition) {\r\n            approvalPivot.condition = this.condition.clone();\r\n        }\r\n\r\n        return approvalPivot;\r\n    }\r\n\r\n}\r\nBpmnModelHelper.RegisterElementType(new ApprovalPivot(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ApprovalPivot } from \"./ApprovalPivot\";\r\n\r\nexport class ApprovalPivotConfig extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.ApprovalPivotConfig\";\r\n    readonly ClrTypeID: string = ApprovalPivotConfig.Clr_Type_ID;\r\n\r\n    title: string;\r\n    enable: boolean;\r\n    expand: boolean;\r\n    approvalPivots: Array<ApprovalPivot>;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.approvalPivots = new Array();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Title\", this.title);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Enable\", this.enable);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Expand\", this.expand);\r\n        const approvalPivots = new Array();\r\n        if (this.approvalPivots !== null && this.approvalPivots.length > 0) {\r\n            this.approvalPivots.forEach((item) => {\r\n                approvalPivots.push(item.ConvertToJsonObject());\r\n            });\r\n        }\r\n        ExtensionMethod.SetAttributeValue(obj, \"ApprovalPivots\", approvalPivots);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        this.title = ExtensionMethod.GetAttributeValue4String(obj, \"Title\");\r\n        this.enable = ExtensionMethod.GetAttributeValue4Boolean(obj, \"Enable\");\r\n        this.expand = ExtensionMethod.GetAttributeValue4Boolean(obj, \"Expand\");\r\n        const approvalPivots = ExtensionMethod.GetAttributeValue(obj, \"ApprovalPivots\") as Array<any>;\r\n\r\n        if (approvalPivots !== null && approvalPivots.length > 0) {\r\n            approvalPivots.forEach((item) => {\r\n                const approvalPivot = new ApprovalPivot(this.Model);\r\n                approvalPivot.LoadFromJsonObject(item);\r\n                this.approvalPivots.push(approvalPivot);\r\n            });\r\n        }\r\n    }\r\n\r\n    NewInstance(): ApprovalPivotConfig {\r\n        return new ApprovalPivotConfig(this.Model);\r\n    }\r\n\r\n    clone(): ApprovalPivotConfig {\r\n        const approvalPivotConfig = new ApprovalPivotConfig(this.Model);\r\n        approvalPivotConfig.title = this.title;\r\n        approvalPivotConfig.enable = this.enable;\r\n        approvalPivotConfig.expand = this.expand;\r\n        approvalPivotConfig.approvalPivots = new Array();\r\n        if (this.approvalPivots && this.approvalPivots.length > 0) {\r\n            for (const p of this.approvalPivots) {\r\n                const approvalPivot = p.clone();\r\n                approvalPivotConfig.approvalPivots.push(approvalPivot);\r\n            }\r\n        }\r\n\r\n        return approvalPivotConfig;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ApprovalPivotConfig(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ConditionValueVersion } from \"./extension/condition-expression/ConditionValueVersion\";\r\nimport { MexExpressionImpl } from \"./mex/MexExpressionImpl\";\r\n\r\nexport class CheckCondition extends MexExpressionImpl {\r\n    static Clr_Type_ID: string = \"wf.CheckCondition\";\r\n    ClrTypeID: string = CheckCondition.Clr_Type_ID;\r\n\r\n    valueVersion = ConditionValueVersion.Unsure\r\n    checkTime: string = 'UNDEFINITION';\r\n    errorTips: Map<string, string>;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.value = '';\r\n    }\r\n\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"CheckTime\", this.checkTime);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ValueVersion\", this.valueVersion);\r\n        if (this.errorTips && this.errorTips.size > 0) {\r\n            const jsonArray = new Array();\r\n            this.errorTips.forEach((value, key) => {\r\n                const childObj = new Object;\r\n                ExtensionMethod.SetAttributeValue(childObj, \"Key\", key);\r\n                ExtensionMethod.SetAttributeValue(childObj, \"Value\", value);\r\n                jsonArray.push(childObj);\r\n            })\r\n            ExtensionMethod.SetAttributeValue(obj, \"ErrorTips\", jsonArray);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.checkTime = ExtensionMethod.GetAttributeValue4String(obj, \"CheckTime\");\r\n        this.valueVersion = ExtensionMethod.GetAttributeValue4String(obj, \"ValueVersion\") as ConditionValueVersion;\r\n\r\n        const jsonArray: Array<any> = ExtensionMethod.GetAttributeValue(obj, \"ErrorTips\");\r\n        if (jsonArray && jsonArray.length > 0) {\r\n            if (!this.errorTips) {\r\n                this.errorTips = new Map<string, string>();\r\n            }\r\n            for (const childObj of jsonArray) {\r\n                const key = ExtensionMethod.GetAttributeValue4String(childObj, \"Key\");\r\n                const value = ExtensionMethod.GetAttributeValue4String(childObj, \"Value\");\r\n                this.errorTips.set(key, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    clone(): CheckCondition {\r\n        const condition = new CheckCondition(this.Model);\r\n        condition.value = this.value;\r\n        condition.valueVersion = this.valueVersion;\r\n        condition.checkTime = this.checkTime;\r\n        if (this.errorTips && this.errorTips.size > 0) {\r\n            condition.errorTips = new Map<string, string>();\r\n            this.errorTips.forEach((value, key) => {\r\n                condition.errorTips.set(key, value);\r\n            })\r\n        }\r\n        return condition;\r\n    }\r\n\r\n    NewInstance(): CheckCondition {\r\n        return new CheckCondition(this.Model);\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new CheckCondition(new BpmnModel()));","export enum ActionScope {\r\n    /**\r\n     * 默认\r\n     */\r\n    Default = 'Default',\r\n    /**\r\n     * 指派\r\n     */\r\n    AssignUser = 'AssignUser',\r\n    /**\r\n     * 移交\r\n     */\r\n    Transfer = 'Transfer',\r\n    /**\r\n     * 征询\r\n     */\r\n    AddSignFront = 'AddSignFront',\r\n    /**\r\n     * 加签\r\n     */\r\n    AddSignBehind = 'AddSignBehind',\r\n    /**\r\n     * 知会\r\n     */\r\n    Notify = \"Notify\",\r\n}","import { BpmnModel, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { ActionScope } from \"../ActionScope\";\r\nimport { Condition } from \"../extension\";\r\n\r\nexport abstract class ParticipantExpression extends ExtensionElement {\r\n    id: string;\r\n    name: string;\r\n    actionScope: ActionScope = ActionScope.Default;\r\n    condition: Condition;\r\n    order: number;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        ExtensionMethod.SetAttributeValue(obj, \"ActionScope\", this.actionScope ? this.actionScope : ActionScope.Default);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Id\", this.id);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Name\", this.name);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Order\", this.order);\r\n        if (this.condition) {\r\n            ExtensionMethod.SetAttributeValue(obj, \"Condition\", this.condition.ConvertToJsonObject());\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.actionScope = (ExtensionMethod.GetAttributeValue4String(obj, \"ActionScope\") ? ExtensionMethod.GetAttributeValue4String(obj, \"ActionScope\") : ActionScope.Default) as ActionScope;\r\n        this.id = ExtensionMethod.GetAttributeValue4String(obj, \"Id\");\r\n        this.name = ExtensionMethod.GetAttributeValue4String(obj, \"Name\");\r\n        this.order = ExtensionMethod.GetAttributeValue4Int64(obj, \"Order\");\r\n        if (obj.Condition) {\r\n            let condition: Condition = new Condition(this.Model);\r\n            condition.LoadFromJsonObject(obj.Condition);\r\n            this.condition = condition;\r\n        }\r\n    }\r\n}","import { BpmnModel, BpmnModelHelper, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class ActivityExecutorParticipantExpression extends ParticipantExpression {\r\n    static Clr_Type_ID: string = 'wf.ActivityExecutorParticipantExpression';\r\n    ClrTypeID: string = ActivityExecutorParticipantExpression.Clr_Type_ID;\r\n\r\n    // private static CLR_TYPE_NAME: string = '活动办理人';\r\n\r\n    activityDefId: string;\r\n    activityDefName: string;\r\n\r\n    constructor(model: BpmnModel,\r\n        activityDefId?: string,\r\n        activityDefName?: string) {\r\n        super(model);\r\n        this.activityDefId = activityDefId;\r\n        this.activityDefName = activityDefName;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        \r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActivityDefId\", this.activityDefId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActivityDefName\", this.activityDefName);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.activityDefId = ExtensionMethod.GetAttributeValue4String(obj, \"ActivityDefId\");\r\n        this.activityDefName = ExtensionMethod.GetAttributeValue4String(obj, \"ActivityDefName\");\r\n    }\r\n\r\n    NewInstance(): ActivityExecutorParticipantExpression {\r\n        return new ActivityExecutorParticipantExpression(this.Model);\r\n    }\r\n\r\n    clone(): ActivityExecutorParticipantExpression {\r\n        const activityExecutorParticipant = new ActivityExecutorParticipantExpression(this.Model);\r\n        activityExecutorParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        activityExecutorParticipant.name = this.name;\r\n        activityExecutorParticipant.activityDefId = this.activityDefId;\r\n        activityExecutorParticipant.activityDefName = this.activityDefName;\r\n\r\n        // if (this.Condition) {\r\n        //     activityExecutorParticipant.Condition = this.Condition.clone();\r\n        // }\r\n\r\n        return activityExecutorParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ActivityExecutorParticipantExpression(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { ActualParameter } from \"../parameter/WFActualParameter\";\r\n\r\nexport class SerializeUtils {\r\n    static setListAttributeValue(obj: any, attributeName: string, actualParameters: Array<ActualParameter>) {\r\n        const actualParametersElements = new Array();\r\n        if (actualParameters && actualParameters.length > 0) {\r\n            for (const p of actualParameters) {\r\n                actualParametersElements.push(p.ConvertToJsonObject());\r\n            }\r\n        }\r\n        BpmnModelHelper.SetAttributeValue(obj, attributeName, actualParametersElements);\r\n    }\r\n\r\n    static getListFromJsonObject(model: BpmnModel, obj: any, attributeName: string): Array<ActualParameter> {\r\n        const actualParameterList = new Array();\r\n        const actualParametersElement = ExtensionMethod.GetAttributeValue(obj, attributeName) as Array<any>;\r\n        if (actualParametersElement && actualParametersElement.length > 0) {\r\n            for (const p of actualParametersElement) {\r\n                const actualParameter = new ActualParameter(model);\r\n                actualParameter.LoadFromJsonObject(p);\r\n                actualParameterList.push(actualParameter);\r\n            }\r\n        }\r\n        return actualParameterList;\r\n    }\r\n}","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { ActualParameter } from \"../parameter/WFActualParameter\";\r\nimport { SerializeUtils } from \"../utils/SerializeUtils\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class ComponentParticipantExpression extends ParticipantExpression {\r\n    public static Clr_Type_ID = 'wf.ComponentParticipantExpression';\r\n    private static CLR_TYPE_NAME = '构件';\r\n    ClrTypeID = ComponentParticipantExpression.Clr_Type_ID;\r\n\r\n    componentId: string;\r\n    componentName: string;\r\n    methodCode: string;\r\n    methodName: string;\r\n    actualParameters: ActualParameter[];\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.actualParameters = new Array<ActualParameter>();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ComponentId\", this.componentId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ComponentName\", this.componentName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MethodCode\", this.methodCode);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MethodName\", this.methodName);\r\n        SerializeUtils.setListAttributeValue(obj, 'ActualParameters', this.actualParameters);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.componentId = obj.ComponentId;\r\n        this.componentName = obj.ComponentName;\r\n        this.methodCode = obj.MethodCode;\r\n        this.methodName = obj.MethodName;\r\n        this.actualParameters = SerializeUtils.getListFromJsonObject(this.Model, obj, 'ActualParameters');\r\n    }\r\n\r\n    NewInstance(): ComponentParticipantExpression {\r\n        return new ComponentParticipantExpression(this.Model);\r\n    }\r\n\r\n    clone(): ComponentParticipantExpression {\r\n        const componentParticipant = new ComponentParticipantExpression(this.Model);\r\n        componentParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        componentParticipant.name = this.name;\r\n        componentParticipant.componentId = this.componentId;\r\n        componentParticipant.componentName = this.componentName;\r\n        componentParticipant.methodCode = this.methodCode;\r\n        componentParticipant.methodName = this.methodName;\r\n        componentParticipant.actualParameters = new Array();\r\n        if (this.actualParameters && this.actualParameters.length > 0) {\r\n            for (const p of this.actualParameters) {\r\n                const parameter = p.clone();\r\n                componentParticipant.actualParameters.push(parameter);\r\n            }\r\n        }\r\n        // if (this.Condition) {\r\n        //     componentParticipant.Condition = this.Condition.clone();\r\n        // }\r\n\r\n        return componentParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ComponentParticipantExpression(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class MatrixParticipantExpression extends ParticipantExpression {\r\n\r\n    static Clr_Type_ID: string = 'wf.MatrixParticipantExpression';\r\n    ClrTypeID: string = MatrixParticipantExpression.Clr_Type_ID;\r\n\r\n    private static CLR_TYPE_NAME: string = '矩阵';\r\n\r\n    matrixDefId: string;\r\n    matrixDefName: string;\r\n    conditionField1: string;\r\n    conditionFieldText1: string;\r\n    conditionField2: string;\r\n    conditionFieldText2: string;\r\n    conditionField3: string;\r\n    conditionFieldText3: string;\r\n    multivaluedCondition: string;\r\n    dataFieldAlias: string;\r\n\r\n    constructor(\r\n        model: BpmnModel,\r\n        MatrixDefId?: string,\r\n        MatrixDefName?: string,\r\n        ConditionField1?: string,\r\n        ConditionFieldText1?: string,\r\n        ConditionField2?: string,\r\n        ConditionFieldText2?: string,\r\n        ConditionField3?: string,\r\n        ConditionFieldText3?: string,\r\n        MultivaluedCondition?: string,\r\n        DataFieldAlias?: string,) {\r\n        super(model);\r\n        this.matrixDefId = MatrixDefId;\r\n        this.matrixDefName = MatrixDefName;\r\n        this.conditionField1 = ConditionField1;\r\n        this.conditionFieldText1 = ConditionFieldText1;\r\n        this.conditionField2 = ConditionField2;\r\n        this.conditionFieldText2 = ConditionFieldText2;\r\n        this.conditionField3 = ConditionField3;\r\n        this.conditionFieldText3 = ConditionFieldText3;\r\n        this.multivaluedCondition = MultivaluedCondition;\r\n        this.dataFieldAlias = DataFieldAlias;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MatrixDefId\", this.matrixDefId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MatrixDefName\", this.matrixDefName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionField1\", this.conditionField1);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionFieldText1\", this.conditionFieldText1);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionField2\", this.conditionField2);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionFieldText2\", this.conditionFieldText2);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionField3\", this.conditionField3);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionFieldText3\", this.conditionFieldText3);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MultivaluedCondition\", this.multivaluedCondition);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DataFieldAlias\", this.dataFieldAlias);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.matrixDefId = obj.MatrixDefId;\r\n        this.matrixDefName = obj.MatrixDefName;\r\n        this.conditionField1 = obj.ConditionField1;\r\n        this.conditionFieldText1 = obj.ConditionFieldText1;\r\n        this.conditionField2 = obj.ConditionField2;\r\n        this.conditionFieldText2 = obj.ConditionFieldText2\r\n        this.conditionField3 = obj.ConditionField3;\r\n        this.conditionFieldText3 = obj.ConditionFieldText3;\r\n        this.multivaluedCondition = obj.MultivaluedCondition;\r\n        this.dataFieldAlias = obj.DataFieldAlias;\r\n    }\r\n\r\n    NewInstance(): MatrixParticipantExpression {\r\n        return new MatrixParticipantExpression(this.Model);\r\n    }\r\n\r\n    clone(): MatrixParticipantExpression {\r\n        const matrixParticipant = new MatrixParticipantExpression(this.Model);\r\n        matrixParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        matrixParticipant.name = this.name;\r\n        matrixParticipant.matrixDefId = this.matrixDefId;\r\n        matrixParticipant.matrixDefName = this.matrixDefName;\r\n        matrixParticipant.conditionField1 = this.conditionField1;\r\n        matrixParticipant.conditionFieldText1 = this.conditionFieldText1;\r\n        matrixParticipant.conditionField2 = this.conditionField2;\r\n        matrixParticipant.conditionFieldText2 = this.conditionFieldText2;\r\n        matrixParticipant.conditionField3 = this.conditionField3;\r\n        matrixParticipant.conditionFieldText3 = this.conditionFieldText3;\r\n        matrixParticipant.multivaluedCondition = this.multivaluedCondition;\r\n        matrixParticipant.dataFieldAlias = this.dataFieldAlias;\r\n\r\n        return matrixParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new MatrixParticipantExpression(new BpmnModel()));","export enum OrganizationLevel {\r\n    /**\r\n     * 部门\r\n    */\r\n    DEPARTMENT = 'DEPARTMENT',\r\n    /**\r\n     * 单位\r\n     */\r\n    UNIT = 'UNIT',\r\n    /**\r\n    * 表单上的变量单位\r\n    */\r\n    DEFAULT = 'DEFAULT',\r\n}","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ResourceRole } from \"@edp-pmf/bpmn-model\";\r\nimport { ActionScope } from \"../ActionScope\";\r\nimport { OrganizationLevel } from \"../OrganizationLevel\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class OrganizationParticipantExpression extends ParticipantExpression {\r\n    static Clr_Type_ID: string = 'wf.OrganizationParticipantExpression';\r\n    ClrTypeID: string = OrganizationParticipantExpression.Clr_Type_ID;\r\n\r\n    organizationLevel: OrganizationLevel;\r\n    organizationId: string;\r\n    organizationCode: string;\r\n    organizationName: string;\r\n    includeChildren: boolean;\r\n    parentsUntil: boolean;\r\n    tag: string;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.actionScope = ActionScope.AssignUser;\r\n        this.organizationLevel = OrganizationLevel.DEPARTMENT;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"ActionScope\", this.actionScope);\r\n        ExtensionMethod.SetAttributeValue(obj, \"OrganizationLevel\", this.organizationLevel);\r\n        ExtensionMethod.SetAttributeValue(obj, \"OrganizationId\", this.organizationId);\r\n        ExtensionMethod.SetAttributeValue(obj, \"OrganizationCode\", this.organizationCode);\r\n        ExtensionMethod.SetAttributeValue(obj, \"OrganizationName\", this.organizationName);\r\n        ExtensionMethod.SetAttributeValue(obj, \"IncludeChildren\", this.includeChildren);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ParentsUntil\", this.parentsUntil);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Tag\", this.tag);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.actionScope = ExtensionMethod.GetAttributeValue4String(obj, \"ActionScope\") as ActionScope;\r\n        this.organizationLevel = ExtensionMethod.GetAttributeValue4String(obj, \"OrganizationLevel\") as OrganizationLevel;\r\n        this.organizationId = ExtensionMethod.GetAttributeValue4String(obj, \"OrganizationId\");\r\n        this.organizationCode = ExtensionMethod.GetAttributeValue4String(obj, \"OrganizationCode\");\r\n        this.organizationName = ExtensionMethod.GetAttributeValue4String(obj, \"OrganizationName\");\r\n        this.includeChildren = ExtensionMethod.GetAttributeValue4Boolean(obj, \"IncludeChildren\");\r\n        this.parentsUntil = ExtensionMethod.GetAttributeValue4Boolean(obj, \"ParentsUntil\");\r\n        this.tag = ExtensionMethod.GetAttributeValue4String(obj, \"Tag\");\r\n    }\r\n\r\n    clone(): OrganizationParticipantExpression {\r\n        const organizationParticipant = new OrganizationParticipantExpression(this.Model);\r\n        organizationParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        organizationParticipant.name = this.name;\r\n        organizationParticipant.actionScope = this.actionScope;\r\n        organizationParticipant.organizationLevel = this.organizationLevel;\r\n        organizationParticipant.organizationId = this.organizationId;;\r\n        organizationParticipant.organizationCode = this.organizationCode;\r\n        organizationParticipant.organizationName = this.organizationName;;\r\n        organizationParticipant.includeChildren = this.includeChildren;\r\n        organizationParticipant.parentsUntil = this.parentsUntil;;\r\n        organizationParticipant.tag = this.tag;\r\n\r\n        return organizationParticipant;\r\n    }\r\n\r\n    NewInstance(): OrganizationParticipantExpression {\r\n        return new OrganizationParticipantExpression(this.Model);\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new OrganizationParticipantExpression(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class PositionParticipantExpression extends ParticipantExpression {\r\n    static Clr_Type_ID: string = 'wf.PositionParticipantExpression';\r\n    ClrTypeID: string = PositionParticipantExpression.Clr_Type_ID;\r\n\r\n    private static CLR_TYPE_NAME: string = '岗位';\r\n\r\n    /// <summary>\r\n    /// 岗位Id\r\n    /// </summary>\r\n    PositionId: string;\r\n    /// <summary>\r\n    /// 岗位名称\r\n    /// </summary>\r\n    PositionName: string;\r\n    /// <summary>\r\n    /// 岗位类型\r\n    /// </summary>\r\n    PositionType: string;\r\n    /// <summary>\r\n    /// 获取组织ID\r\n    /// </summary>\r\n    OrgId: string;\r\n    /// <summary>\r\n    /// 获取组织名称\r\n    /// </summary>\r\n    OrgName: string;\r\n    /// <summary>\r\n    /// 组织类型Code\r\n    /// </summary>\r\n    OrgType: string = 'Sys';\r\n\r\n    constructor(model: BpmnModel, positionId?: string, positionName?: string) {\r\n        super(model);\r\n        this.PositionId = positionId;\r\n        this.PositionName = positionName;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"PositionId\", this.PositionId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"PositionName\", this.PositionName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"PositionType\", this.PositionType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgId\", this.OrgId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgName\", this.OrgName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgType\", this.OrgType);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.PositionId = obj.PositionId;\r\n        this.PositionName = obj.PositionName;\r\n        this.PositionType = obj.PositionType;\r\n        this.OrgId = obj.OrgId;\r\n        this.OrgName = obj.OrgName;\r\n        this.OrgType = obj.OrgType;\r\n    }\r\n\r\n    NewInstance(): PositionParticipantExpression {\r\n        return new PositionParticipantExpression(this.Model);\r\n    }\r\n\r\n    clone(): PositionParticipantExpression {\r\n        const positionParticipant = new PositionParticipantExpression(this.Model);\r\n        positionParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        positionParticipant.name = this.name;\r\n        positionParticipant.PositionId = this.PositionId;\r\n        positionParticipant.PositionName = this.PositionName;\r\n        positionParticipant.PositionType = this.PositionType;\r\n        positionParticipant.OrgType = this.OrgType;\r\n        positionParticipant.OrgId = this.OrgId\r\n        positionParticipant.OrgName = this.OrgName;\r\n        // if (this.Condition) {\r\n        //     positionParticipant.Condition = this.Condition.clone();\r\n        // }\r\n        return positionParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new PositionParticipantExpression(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class ReportingLineParticipantExpression extends ParticipantExpression {\r\n    static Clr_Type_ID: string = 'wf.ReportingLineParticipantExpression';\r\n    ClrTypeID: string = ReportingLineParticipantExpression.Clr_Type_ID;\r\n\r\n    private static CLR_TYPE_NAME: string = '汇报关系';\r\n\r\n    Tag: string;\r\n    ReportingLineDefId: string;\r\n    ReportingLineDefName: string;\r\n    RefOrgId: string;\r\n    // RefOrgName: string;\r\n    RefUserId: string;\r\n    RefEmployeeId: string;\r\n    // ReportingReferObject: string;\r\n    Dimension: string;\r\n\r\n    constructor(\r\n        model: BpmnModel,\r\n        RefUserId?: string,\r\n        RefEmployeeId?: string,\r\n        RefOrgId?: string,\r\n        ReportingLineDefId?: string,\r\n        ReportingLineDefName?: string,\r\n        Dimension?: string,\r\n    ) {\r\n        super(model);\r\n        this.RefUserId = RefUserId;\r\n        this.RefEmployeeId = RefEmployeeId;\r\n        this.RefOrgId = RefOrgId;\r\n        this.ReportingLineDefId = ReportingLineDefId;\r\n        this.ReportingLineDefName = ReportingLineDefName;\r\n        this.Dimension = Dimension;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"RefUserId\", this.RefUserId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"RefEmployeeId\", this.RefEmployeeId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Dimension\", this.Dimension);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"RefOrgId\", this.RefOrgId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ReportingLineDefId\", this.ReportingLineDefId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ReportingLineDefName\", this.ReportingLineDefName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Tag\", this.Tag);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.RefUserId = obj.RefUserId;\r\n        this.RefEmployeeId = obj.RefEmployeeId;\r\n        this.Dimension = obj.Dimension;\r\n        this.RefOrgId = obj.RefOrgId;\r\n        this.ReportingLineDefId = obj.ReportingLineDefId;\r\n        this.ReportingLineDefName = obj.ReportingLineDefName;\r\n        this.Tag = obj.Tag;\r\n    }\r\n\r\n    NewInstance(): ReportingLineParticipantExpression {\r\n        return new ReportingLineParticipantExpression(this.Model);\r\n    }\r\n\r\n    clone(): ReportingLineParticipantExpression {\r\n        const reportingLineParticipant = new ReportingLineParticipantExpression(this.Model);\r\n        reportingLineParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        reportingLineParticipant.name = this.name;\r\n        reportingLineParticipant.RefUserId = this.RefUserId;\r\n        reportingLineParticipant.RefEmployeeId = this.RefEmployeeId;\r\n        reportingLineParticipant.Dimension = this.Dimension;\r\n        reportingLineParticipant.RefOrgId = this.RefOrgId;\r\n        reportingLineParticipant.ReportingLineDefId = this.ReportingLineDefId;\r\n        reportingLineParticipant.ReportingLineDefName = this.ReportingLineDefName;\r\n        reportingLineParticipant.Tag = this.Tag;\r\n\r\n        // if (this.Condition) {\r\n        //     reportingLineParticipant.Condition = this.Condition.clone();\r\n        // }\r\n\r\n        return reportingLineParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ReportingLineParticipantExpression(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class UserParticipantExpression extends ParticipantExpression {\r\n    constructor(model: BpmnModel, userId?: string, name?: string, orgType?: string) {\r\n        super(model);\r\n        this.UserId = userId;\r\n        this.name = name;\r\n        this.OrgType = orgType ? orgType : 'Sys';\r\n    }\r\n\r\n    static Clr_Type_ID: string = \"wf.UserParticipantExpression\";\r\n    private static CLR_TYPE_NAME = '用户';\r\n\r\n    ClrTypeID: string = UserParticipantExpression.Clr_Type_ID;\r\n\r\n    Tag: string;\r\n    UserId: string;\r\n    OrgId: string;\r\n    OrgName: string;\r\n    OrgType: string = 'Sys';\r\n\r\n    NewInstance(): UserParticipantExpression {\r\n        return new UserParticipantExpression(this.Model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"UserId\", this.UserId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgId\", this.OrgId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgName\", this.OrgName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgType\", this.OrgType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Tag\", this.Tag);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n        this.OrgId = obj.OrgId;\r\n        this.OrgName = obj.OrgName;\r\n        this.OrgType = obj.OrgType;\r\n        this.UserId = obj.UserId;\r\n        this.Tag = obj.Tag;\r\n    }\r\n\r\n    clone(): UserParticipantExpression {\r\n        const userParticipant = new UserParticipantExpression(this.Model);\r\n        userParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        userParticipant.name = this.name;\r\n        userParticipant.OrgId = this.OrgId;\r\n        userParticipant.OrgName = this.OrgName;\r\n        userParticipant.OrgType = this.OrgType;\r\n        userParticipant.UserId = this.UserId;\r\n        userParticipant.Tag = this.Tag;\r\n        // if (this.Condition) { \r\n        //     userParticipant.Condition = this.Condition.clone();\r\n        // }\r\n        return userParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new UserParticipantExpression(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { ParticipantExpression } from \"./ParticipantExpression\";\r\n\r\nexport class VariableParticipantExpression extends ParticipantExpression {\r\n    constructor(model: BpmnModel, varValue?: string, name?: string, varType?: string) {\r\n        super(model);\r\n        this.VarValue = varValue;\r\n        this.name = name;\r\n        this.VarType = varType ? varType : 'Sys';\r\n    }\r\n\r\n    static Clr_Type_ID: string = \"wf.VariableParticipantExpression\";\r\n    private static CLR_TYPE_NAME = '变量参与者';\r\n\r\n    ClrTypeID: string = VariableParticipantExpression.Clr_Type_ID;\r\n    VarValue: string;\r\n    VarType: string;\r\n    Relation: string;\r\n    Tag: string;\r\n    Name: string;\r\n\r\n    NewInstance(): VariableParticipantExpression {\r\n        return new VariableParticipantExpression(this.Model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Tag\", this.Tag);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"VarValue\", this.VarValue);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"VarType\", this.VarType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Relation\", this.Relation);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n        this.Name = obj.Name;\r\n        this.Tag = obj.Tag;\r\n        this.VarValue = obj.VarValue;\r\n        this.VarType = obj.VarType;\r\n        this.Relation = obj.Relation;\r\n    }\r\n\r\n    clone(): VariableParticipantExpression {\r\n        const variableParticipant = new VariableParticipantExpression(this.Model);\r\n        variableParticipant.id = BpmnModelHelper.GenerateElementId();\r\n        variableParticipant.Name = this.Name;\r\n        variableParticipant.Tag = this.Tag;\r\n        variableParticipant.VarType = this.VarType;\r\n        variableParticipant.VarValue = this.VarValue;\r\n        variableParticipant.Relation = this.Relation;\r\n        return variableParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new VariableParticipantExpression(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, HumanPerformer, ExtensionMethod, ValidationError } from \"@edp-pmf/bpmn-model\";\r\nimport { Condition } from \"./extension/condition-expression/Condition\";\r\nimport { ActivityExecutorParticipantExpression } from \"./participants/ActivityExecutorParticipantExpression\";\r\nimport { ComponentParticipantExpression } from \"./participants/ComponentParticipantExpression\";\r\nimport { MatrixParticipantExpression } from \"./participants/MatrixParticipantExpression\";\r\nimport { OrganizationParticipantExpression } from \"./participants/OrganizationParticipantExpression\";\r\nimport { ParticipantExpression } from \"./participants/ParticipantExpression\";\r\nimport { PositionParticipantExpression } from \"./participants/PositionParticipantExpression\";\r\nimport { ReportingLineParticipantExpression } from \"./participants/ReportingLineParticipantExpression\";\r\nimport { UserParticipantExpression } from \"./participants/UserParticipantExpression\";\r\nimport { VariableParticipantExpression } from \"./participants/VariableParticipantExpression\";\r\n\r\nexport class HumanPerformerImpl extends HumanPerformer {\r\n\r\n    static Clr_Type_ID: string = \"wf.HumanPerformerImpl\";\r\n    ClrTypeID: string = HumanPerformerImpl.Clr_Type_ID;\r\n\r\n    participantExpression: ParticipantExpression;\r\n    condition: Condition;\r\n    order: number;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Order\", this.order);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.order = ExtensionMethod.GetAttributeValue4Int64(obj, \"Order\");\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.participantExpression != null) {\r\n            list.push(this.participantExpression);\r\n        }\r\n        if (this.condition != null) {\r\n            list.push(this.condition);\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            switch (extensionElement.ClrTypeID) {\r\n                case UserParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case VariableParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case PositionParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case OrganizationParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case MatrixParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case ComponentParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case Condition.Clr_Type_ID:\r\n                    this.condition = (extensionElement as Condition);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    clone(): HumanPerformerImpl {\r\n        const humanPerformerImpl = new HumanPerformerImpl(this.Model);\r\n        if (this.participantExpression) {\r\n            switch (this.participantExpression.ClrTypeID) {\r\n                case UserParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as UserParticipantExpression).clone();\r\n                    break;\r\n                case VariableParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as VariableParticipantExpression).clone();\r\n                    break;\r\n                case PositionParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as PositionParticipantExpression).clone();\r\n                    break;\r\n                case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as ReportingLineParticipantExpression).clone();\r\n                    break;\r\n                case OrganizationParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as OrganizationParticipantExpression).clone();\r\n                    break;\r\n                case MatrixParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as MatrixParticipantExpression).clone();\r\n                    break;\r\n                case ComponentParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as ComponentParticipantExpression).clone();\r\n                    break;\r\n                case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                    humanPerformerImpl.participantExpression = (this.participantExpression as ActivityExecutorParticipantExpression).clone();\r\n                    break;\r\n            }\r\n        }\r\n        if (this.condition) {\r\n            humanPerformerImpl.condition = this.condition.clone();\r\n        }\r\n        humanPerformerImpl.order = this.order;\r\n        return humanPerformerImpl;\r\n    }\r\n\r\n    NewInstance(): HumanPerformerImpl {\r\n        return new HumanPerformerImpl(this.Model);\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new HumanPerformerImpl(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class ImageSettings extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.ImageSettings\";\r\n    readonly ClrTypeID: string = ImageSettings.Clr_Type_ID;\r\n\r\n    /**\r\n     * 影像操作权限\r\n     */\r\n    imageOperation: string;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"ImageOperation\", this.imageOperation);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.imageOperation = ExtensionMethod.GetAttributeValue4String(obj, \"ImageOperation\");\r\n    }\r\n\r\n    NewInstance(): ImageSettings {\r\n        return new ImageSettings(this.Model);\r\n    }\r\n\r\n    clone(): ImageSettings {\r\n        const imageSettings = new ImageSettings(this.Model);\r\n        imageSettings.imageOperation = this.imageOperation;\r\n\r\n        return imageSettings;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ImageSettings(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelElement, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class SmsMessageVariable extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.SmsMessageVariable\";\r\n    readonly ClrTypeID: string = SmsMessageVariable.Clr_Type_ID;\r\n\r\n    code: string;\r\n    value: string\r\n    tag = 'expression';\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        ExtensionMethod.SetAttributeValue(obj, \"Code\", this.code);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Value\", this.value);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Tag\", this.tag);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        this.code = ExtensionMethod.GetAttributeValue4String(obj, \"Code\");\r\n        this.value = ExtensionMethod.GetAttributeValue4String(obj, \"Value\");\r\n        this.tag = ExtensionMethod.GetAttributeValue4String(obj, \"Tag\");\r\n\r\n    }\r\n\r\n\r\n    NewInstance(): SmsMessageVariable {\r\n        return new SmsMessageVariable(this.Model);\r\n    }\r\n\r\n    clone(): SmsMessageVariable {\r\n        const smsMessageVariable = new SmsMessageVariable(this.Model);\r\n        smsMessageVariable.code = this.code;\r\n        smsMessageVariable.value = this.value;\r\n        smsMessageVariable.tag = this.tag;\r\n\r\n        return smsMessageVariable;\r\n    }\r\n\r\n}\r\nBpmnModelHelper.RegisterElementType(new SmsMessageVariable(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { SmsMessageVariable } from \"./SmsMessageVariable\";\r\n\r\nexport class SmsMessageTemplate extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.SmsMessageTemplate\";\r\n    readonly ClrTypeID: string = SmsMessageTemplate.Clr_Type_ID;\r\n\r\n    code: string;\r\n\r\n    content: string;\r\n\r\n    smsMessageVariables: Array<SmsMessageVariable>;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.smsMessageVariables = new Array();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Code\", this.code);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Content\", this.content);\r\n        if (this.smsMessageVariables && this.smsMessageVariables.length > 0) {\r\n            const variables = new Array();\r\n            for (const variable of this.smsMessageVariables) {\r\n                variables.push(variable.ConvertToJsonObject());\r\n            }\r\n            BpmnModelHelper.SetAttributeValue(obj, \"SmsMessageVariables\", variables);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        this.code = ExtensionMethod.GetAttributeValue4String(obj, \"Code\");\r\n        this.content = ExtensionMethod.GetAttributeValue4String(obj, \"Content\");\r\n        this.smsMessageVariables = new Array();\r\n        const variables = ExtensionMethod.GetAttributeValue(obj, \"SmsMessageVariables\");\r\n        if (variables && variables.length > 0) {\r\n            for (const variable of variables) {\r\n                const smsMessageVariable = new SmsMessageVariable(this.Model);\r\n                smsMessageVariable.LoadFromJsonObject(variable);\r\n                this.smsMessageVariables.push(smsMessageVariable);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    NewInstance(): SmsMessageTemplate {\r\n        return new SmsMessageTemplate(this.Model);\r\n    }\r\n\r\n    clone(): SmsMessageTemplate {\r\n        const smsMessageTemplate = new SmsMessageTemplate(this.Model);\r\n        smsMessageTemplate.code = this.code;\r\n        smsMessageTemplate.content = this.content;\r\n        smsMessageTemplate.smsMessageVariables = new Array();\r\n        if (this.smsMessageVariables && this.smsMessageVariables.length > 0) {\r\n            for (const variable of this.smsMessageVariables) {\r\n                const smsMessageVariable = variable.clone();\r\n                smsMessageTemplate.smsMessageVariables.push(smsMessageVariable);\r\n            }\r\n        }\r\n\r\n        return smsMessageTemplate;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new SmsMessageTemplate(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod, ValidationError } from \"@edp-pmf/bpmn-model\";\r\nimport { ActivityExecutorParticipantExpression } from \"./participants/ActivityExecutorParticipantExpression\";\r\nimport { ComponentParticipantExpression } from \"./participants/ComponentParticipantExpression\";\r\nimport { MatrixParticipantExpression } from \"./participants/MatrixParticipantExpression\";\r\nimport { OrganizationParticipantExpression } from \"./participants/OrganizationParticipantExpression\";\r\nimport { ParticipantExpression } from \"./participants/ParticipantExpression\";\r\nimport { PositionParticipantExpression } from \"./participants/PositionParticipantExpression\";\r\nimport { ReportingLineParticipantExpression } from \"./participants/ReportingLineParticipantExpression\";\r\nimport { UserParticipantExpression } from \"./participants/UserParticipantExpression\";\r\nimport { SmsMessageTemplate } from \"./SmsMessageTemplate\";\r\n\r\nexport class MessageNotice extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.MessageNotice\";\r\n    readonly ClrTypeID: string = MessageNotice.Clr_Type_ID;\r\n\r\n    /**\r\n     * 消息内容\r\n     */\r\n    content: string;\r\n\r\n    /**\r\n     * 消息发送时机\r\n     */\r\n    sendTime: string;\r\n\r\n    /**\r\n     * 消息发送方式\r\n     */\r\n    sendType: string;\r\n\r\n    /**\r\n     * 消息主题\r\n     */\r\n    subject: string;\r\n\r\n    /**\r\n     * 消息接收人\r\n     */\r\n    receiver: string;\r\n\r\n    /**\r\n     * 消息接收人显示\r\n     */\r\n    receiverText: string;\r\n\r\n    receiverExpressions: Array<ParticipantExpression>;\r\n\r\n    smsMessageTemplate: SmsMessageTemplate;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.receiverExpressions = new Array();\r\n        this.smsMessageTemplate = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Content\", this.content);\r\n        ExtensionMethod.SetAttributeValue(obj, \"SendTime\", this.sendTime);\r\n        ExtensionMethod.SetAttributeValue(obj, \"SendType\", this.sendType);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Subject\", this.subject);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Receiver\", this.receiver);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ReceiverText\", this.receiverText);\r\n\r\n        if (this.receiverExpressions != null && this.receiverExpressions.length > 0) {\r\n            const receiverList = new Array();\r\n            for (const receiver of this.receiverExpressions) {\r\n                receiverList.push(receiver.ConvertToJsonObject());\r\n            }\r\n            ExtensionMethod.SetAttributeValue(obj, \"ReceiverExpressions\", receiverList);\r\n        }\r\n        if (this.smsMessageTemplate) {\r\n            ExtensionMethod.SetAttributeValue(obj, \"SmsMessageTemplate\", this.smsMessageTemplate.ConvertToJsonObject());\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.content = ExtensionMethod.GetAttributeValue4String(obj, \"Content\");\r\n        this.sendTime = ExtensionMethod.GetAttributeValue4String(obj, \"SendTime\");\r\n        this.sendType = ExtensionMethod.GetAttributeValue4String(obj, \"SendType\");\r\n        this.subject = ExtensionMethod.GetAttributeValue4String(obj, \"Subject\");\r\n        this.receiver = ExtensionMethod.GetAttributeValue4String(obj, \"Receiver\");\r\n        this.receiverText = ExtensionMethod.GetAttributeValue4String(obj, \"ReceiverText\");\r\n\r\n        const receiverList: Array<any> = ExtensionMethod.GetAttributeValue(obj, \"ReceiverExpressions\");\r\n        if (receiverList && receiverList.length > 0) {\r\n            this.receiverExpressions = new Array();\r\n            for (const receiver of receiverList) {\r\n                const clrTypeID = ExtensionMethod.GetAttributeValue4String(receiver, \"ClrTypeID\")\r\n                switch (clrTypeID) {\r\n                    case UserParticipantExpression.Clr_Type_ID:\r\n                        const userParticipantExpression = new UserParticipantExpression(this.Model);\r\n                        userParticipantExpression.LoadFromJsonObject(receiver);\r\n                        this.receiverExpressions.push(userParticipantExpression);\r\n                        break;\r\n                    case PositionParticipantExpression.Clr_Type_ID:\r\n                        const positionParticipantExpression = new PositionParticipantExpression(this.Model);\r\n                        positionParticipantExpression.LoadFromJsonObject(receiver);\r\n                        this.receiverExpressions.push(positionParticipantExpression);\r\n                        break;\r\n                    case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                        const reportingLineParticipantExpression = new ReportingLineParticipantExpression(this.Model);\r\n                        reportingLineParticipantExpression.LoadFromJsonObject(receiver);\r\n                        this.receiverExpressions.push(reportingLineParticipantExpression);\r\n                        break;\r\n                    case OrganizationParticipantExpression.Clr_Type_ID:\r\n                        const organizationParticipantExpression = new OrganizationParticipantExpression(this.Model);\r\n                        organizationParticipantExpression.LoadFromJsonObject(receiver);\r\n                        this.receiverExpressions.push(organizationParticipantExpression);\r\n                        break;\r\n                    case MatrixParticipantExpression.Clr_Type_ID:\r\n                        const matrixParticipantExpression = new MatrixParticipantExpression(this.Model);\r\n                        matrixParticipantExpression.LoadFromJsonObject(receiver);\r\n                        this.receiverExpressions.push(matrixParticipantExpression);\r\n                        break;\r\n                    case ComponentParticipantExpression.Clr_Type_ID:\r\n                        const componentParticipantExpression = new ComponentParticipantExpression(this.Model);\r\n                        componentParticipantExpression.LoadFromJsonObject(receiver);\r\n                        this.receiverExpressions.push(componentParticipantExpression);\r\n                        break;\r\n                    case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                        const activityExecutorParticipantExpression = new ActivityExecutorParticipantExpression(this.Model);\r\n                        activityExecutorParticipantExpression.LoadFromJsonObject(receiver);\r\n                        this.receiverExpressions.push(activityExecutorParticipantExpression);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const smsTemplateElement = ExtensionMethod.GetAttributeValue(obj, 'SmsMessageTemplate');\r\n        if (smsTemplateElement) {\r\n            const smsMessageTemplate = new SmsMessageTemplate(this.Model);\r\n            smsMessageTemplate.LoadFromJsonObject(smsTemplateElement);\r\n            this.smsMessageTemplate = smsMessageTemplate;\r\n        }\r\n    }\r\n\r\n    NewInstance(): MessageNotice {\r\n        return new MessageNotice(this.Model);\r\n    }\r\n\r\n    clone(): MessageNotice {\r\n        const messageNotice = new MessageNotice(this.Model);\r\n        messageNotice.content = this.content;\r\n        messageNotice.sendTime = this.sendTime;\r\n        messageNotice.sendType = this.sendType;\r\n        messageNotice.subject = this.subject;\r\n        messageNotice.receiver = this.receiver;\r\n        messageNotice.receiverText = this.receiverText;\r\n        messageNotice.receiverExpressions = new Array();\r\n        if (this.receiverExpressions && this.receiverExpressions.length > 0) {\r\n            for (const r of this.receiverExpressions) {\r\n                if (r instanceof OrganizationParticipantExpression) {\r\n                    const o = r as OrganizationParticipantExpression;\r\n                    const organizationParticipantExpression = o.clone();\r\n                    messageNotice.receiverExpressions.push(organizationParticipantExpression);\r\n                }\r\n                else if (r instanceof UserParticipantExpression) {\r\n                    const u = r as UserParticipantExpression;\r\n                    const userParticipantExpression = u.clone();\r\n                    messageNotice.receiverExpressions.push(userParticipantExpression);\r\n                }\r\n                else if (r instanceof PositionParticipantExpression) {\r\n                    const p = r as PositionParticipantExpression;\r\n                    const positionParticipantExpression = p.clone();\r\n                    messageNotice.receiverExpressions.push(positionParticipantExpression);\r\n                }\r\n                else if (r instanceof ReportingLineParticipantExpression) {\r\n                    const re = r as ReportingLineParticipantExpression;\r\n                    const reportingLineParticipantExpression = re.clone();\r\n                    messageNotice.receiverExpressions.push(reportingLineParticipantExpression);\r\n                }\r\n                else if (r instanceof MatrixParticipantExpression) {\r\n                    const m = r as MatrixParticipantExpression;\r\n                    const matrixParticipantExpression = m.clone();\r\n                    messageNotice.receiverExpressions.push(matrixParticipantExpression);\r\n                }\r\n                else if (r instanceof ComponentParticipantExpression) {\r\n                    const c = r as ComponentParticipantExpression;\r\n                    const componentParticipantExpression = c.clone();\r\n                    messageNotice.receiverExpressions.push(componentParticipantExpression);\r\n                } else if (r instanceof ActivityExecutorParticipantExpression) {\r\n                    const a = r as ActivityExecutorParticipantExpression;\r\n                    const activityExecutorParticipantExpression = a.clone();\r\n                    messageNotice.receiverExpressions.push(activityExecutorParticipantExpression);\r\n                }\r\n            }\r\n        }\r\n        if (this.smsMessageTemplate) {\r\n            messageNotice.smsMessageTemplate = this.smsMessageTemplate.clone();\r\n        }\r\n        return messageNotice;\r\n    }\r\n\r\n}\r\nBpmnModelHelper.RegisterElementType(new MessageNotice(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { MexExpressionImpl } from \"./MexExpressionImpl\";\r\n\r\nexport class TitleExpression extends MexExpressionImpl {\r\n    static Clr_Type_ID = 'wf.TitleExpression';\r\n    ClrTypeID: string = TitleExpression.Clr_Type_ID;\r\n    valueLanguage: any = {};\r\n\r\n    constructor(model: BpmnModel, value?: string, valueLanguage?: any) {\r\n        super(model, value);\r\n        this.valueLanguage = valueLanguage;\r\n    }\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.valueLanguage = {};\r\n    }\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, 'ValueLanguage', this.valueLanguage);\r\n        return obj;\r\n    }\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.valueLanguage = obj.ValueLanguage;\r\n    }\r\n    NewInstance(): TitleExpression {\r\n        return new TitleExpression(this.Model);\r\n    }\r\n\r\n    clone(): TitleExpression {\r\n        const titleExpression = new TitleExpression(this.Model);\r\n        titleExpression.value = this.value;\r\n        titleExpression.valueLanguage = this.valueLanguage;\r\n\r\n        return titleExpression;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new TitleExpression(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, PotentialOwner, ValidationError, UserTask } from \"@edp-pmf/bpmn-model\";\r\nimport { ActionScope } from \"./ActionScope\";\r\nimport { OrganizationLevel } from \"./OrganizationLevel\";\r\nimport { PotentialOwnerImpl } from \"./PotentialOwnerImpl\";\r\n\r\nexport class OrganizationPotentialOwner extends PotentialOwner {\r\n    static Clr_Type_ID: string = 'wf.OrganizationPotentialOwner';\r\n    ClrTypeID: string = OrganizationPotentialOwner.Clr_Type_ID;\r\n\r\n    MEXTAG: string = 'wf.OrganizationPotentialOwner';\r\n\r\n    /**\r\n     * 作用域：AssignUser, Transfer, AddSignFront, AddSignBehind\r\n     */\r\n    actionScope: ActionScope;\r\n    /**\r\n     * 部门：DEPARTMENT；单位：UNIT \r\n     */\r\n    organizationLevel: OrganizationLevel;\r\n    /**\r\n     * 组织Id：currentDepartment, currentUnit\r\n     */\r\n    organizationId: string;\r\n    /**\r\n     * 组织编号\r\n     */\r\n    organizationCode: string;\r\n    /**\r\n     * 组织名称\r\n     */\r\n    organizationName: string;\r\n    /**\r\n     * 包含下级\r\n     */\r\n    includeChildren: boolean;\r\n    /**\r\n     * 遍历父级\r\n     */\r\n    parentsUntil: boolean;\r\n    /**\r\n     * variable 变量值\r\n     * expression 表达式值\r\n     * constant 常量值\r\n     */\r\n    tag: string;\r\n\r\n    /**\r\n     * 暂存人员信息\r\n     */\r\n    participantInfo: PotentialOwnerImpl;\r\n    \r\n\r\n\r\n    constructor(model: BpmnModel, id?: string, name?: string) {\r\n        super(model);\r\n        this.Id = id;\r\n        this.Name = name;\r\n    }\r\n\r\n    protected resetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.actionScope = ActionScope.AssignUser;\r\n        this.organizationLevel = OrganizationLevel.DEPARTMENT;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActionScope\", this.actionScope);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrganizationLevel\", this.organizationLevel);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrganizationId\", this.organizationId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrganizationCode\", this.organizationCode);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrganizationName\", this.organizationName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"IncludeChildren\", this.includeChildren);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ParentsUntil\", this.parentsUntil);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Tag\", this.tag);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n        this.actionScope = obj.ActionScope;\r\n        this.organizationLevel = obj.OrganizationLevel;\r\n        this.organizationId = obj.OrganizationId;\r\n        this.organizationCode = obj.OrganizationCode;\r\n        this.organizationName = obj.OrganizationName;\r\n        this.includeChildren = obj.IncludeChildren;\r\n        this.parentsUntil = obj.ParentsUntil;\r\n        this.tag = obj.Tag;\r\n    }\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n    }\r\n\r\n    NewInstance(): OrganizationPotentialOwner {\r\n        return new OrganizationPotentialOwner(this.Model);\r\n    }\r\n\r\n    clone(): OrganizationPotentialOwner {\r\n        const organizationPotentialOwner = new OrganizationPotentialOwner(this.Model);\r\n        organizationPotentialOwner.Id = BpmnModelHelper.GenerateElementId();\r\n        organizationPotentialOwner.actionScope = this.actionScope;\r\n        organizationPotentialOwner.organizationLevel = this.organizationLevel;\r\n        organizationPotentialOwner.organizationId = this.organizationId;\r\n        organizationPotentialOwner.organizationName = this.organizationName;\r\n        organizationPotentialOwner.organizationCode = this.organizationCode;\r\n        organizationPotentialOwner.includeChildren = this.includeChildren;\r\n        organizationPotentialOwner.parentsUntil = this.parentsUntil;\r\n        organizationPotentialOwner.tag = this.tag;\r\n\r\n        return organizationPotentialOwner;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new OrganizationPotentialOwner(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, HumanPerformer, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { Condition } from \"../../extension/condition-expression/Condition\";\r\n\r\nexport abstract class Participant extends HumanPerformer {\r\n    constructor(model: BpmnModel, id?: string, name?: string) {\r\n        super(model);\r\n        this.Id = id;\r\n        this.Name = name;\r\n    }\r\n\r\n    ClrTypeID: string = \"wf.Participant\";\r\n    MexTag: string = 'wf.Participant';\r\n    Condition: Condition;\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): any {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n        if (this.Condition) {\r\n            this.Condition.MexTag = this.MexTag;\r\n            list.push(this.Condition);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n        for (const item of extensionElements) {\r\n            if (item instanceof Condition) {\r\n                const condition = item as Condition;\r\n                if (condition.MexTag === this.MexTag) {\r\n                    this.Condition = condition;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //public IList<ExtensionElement> GetExtensionElements() {\r\n    //    return this.extensionElements;\r\n    //}\r\n}","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class ActivityExecutorParticipant extends Participant {\r\n\r\n    static Clr_Type_ID: string = 'wf.ActivityExecutorParticipant';\r\n    ClrTypeID: string = ActivityExecutorParticipant.Clr_Type_ID;\r\n\r\n    private static CLR_TYPE_NAME: string = '活动办理人';\r\n\r\n    ActivityDefId: string;\r\n    ActivityDefName: string;\r\n\r\n    constructor(\r\n        model: BpmnModel,\r\n        ActivityDefId?: string,\r\n        ActivityDefName?: string\r\n    ) {\r\n        super(model);\r\n        this.ActivityDefId = ActivityDefId;\r\n        this.ActivityDefName = ActivityDefName;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActivityDefId\", this.ActivityDefId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ActivityDefName\", this.ActivityDefName);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.ActivityDefId = obj.ActivityDefId;\r\n        this.ActivityDefName = obj.ActivityDefName;\r\n    }\r\n\r\n    NewInstance(): ActivityExecutorParticipant {\r\n        return new ActivityExecutorParticipant(this.Model);\r\n    }\r\n\r\n    clone(): ActivityExecutorParticipant {\r\n        const activityExecutorParticipant = new ActivityExecutorParticipant(this.Model);\r\n        activityExecutorParticipant.Id = BpmnModelHelper.GenerateElementId();\r\n        activityExecutorParticipant.ActivityDefId = this.ActivityDefId;\r\n        activityExecutorParticipant.ActivityDefName = this.ActivityDefName;\r\n\r\n        if (this.Condition) {\r\n            activityExecutorParticipant.Condition = this.Condition.clone();\r\n        }\r\n\r\n        return activityExecutorParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ActivityExecutorParticipant(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ActualParameter } from \"../../parameter/WFActualParameter\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class ComponentParticipant extends Participant {\r\n    public static Clr_Type_ID = 'wf.ComponentParticipant';\r\n    private static CLR_TYPE_NAME = '构件';\r\n    ClrTypeID = ComponentParticipant.Clr_Type_ID;\r\n\r\n    private static MEXTAG: string = \"wf.ComponentParticipant\";\r\n\r\n    ComponentId: string;\r\n    ComponentName: string;\r\n    MethodCode: string;\r\n    MethodName: string;\r\n    ActualParameters: ActualParameter[];\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.ActualParameters = new Array<ActualParameter>();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ComponentId\", this.ComponentId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ComponentName\", this.ComponentName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MethodCode\", this.MethodCode);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MethodName\", this.MethodName);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.ComponentId = obj.ComponentId;\r\n        this.ComponentName = obj.ComponentName;\r\n        this.MethodCode = obj.MethodCode;\r\n        this.MethodName = obj.MethodName;\r\n    }\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n        if (this.ActualParameters && this.ActualParameters.length > 0) {\r\n            for (const param of this.ActualParameters) {\r\n                param.MexTag = ComponentParticipant.MEXTAG;\r\n                list.push(param);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (const extensionElement of extensionElements) {\r\n            if (extensionElement instanceof ActualParameter) {\r\n                const actualParameter: ActualParameter = extensionElement as ActualParameter;\r\n                if (actualParameter.MexTag === ComponentParticipant.MEXTAG) {\r\n                    this.ActualParameters.push(actualParameter);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    NewInstance(): ComponentParticipant {\r\n        return new ComponentParticipant(this.Model);\r\n    }\r\n\r\n    clone(): ComponentParticipant {\r\n        const componentParticipant = new ComponentParticipant(this.Model);\r\n        componentParticipant.Id = BpmnModelHelper.GenerateElementId();\r\n        componentParticipant.Name = this.Name;\r\n        componentParticipant.ComponentId = this.ComponentId;\r\n        componentParticipant.ComponentName = this.ComponentName;\r\n        componentParticipant.MethodCode = this.MethodCode;\r\n        componentParticipant.MethodName = this.MethodName;\r\n        componentParticipant.ActualParameters = new Array();\r\n        if (this.ActualParameters && this.ActualParameters.length > 0) {\r\n            for (const p of this.ActualParameters) {\r\n                const parameter = p.clone();\r\n                componentParticipant.ActualParameters.push(parameter);\r\n            }\r\n        }\r\n        if (this.Condition) {\r\n            componentParticipant.Condition = this.Condition.clone();\r\n        }\r\n\r\n        return componentParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ComponentParticipant(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class MatrixParticipant extends Participant {\r\n\r\n    static Clr_Type_ID: string = 'wf.MatrixParticipant';\r\n    ClrTypeID: string = MatrixParticipant.Clr_Type_ID;\r\n\r\n    private static CLR_TYPE_NAME: string = '矩阵';\r\n\r\n    MatrixDefId: string;\r\n    MatrixDefName: string;\r\n    ConditionField1: string;\r\n    ConditionFieldText1: string;\r\n    ConditionField2: string;\r\n    ConditionFieldText2: string;\r\n    ConditionField3: string;\r\n    ConditionFieldText3: string;\r\n    DataFieldAlias: string;\r\n\r\n    constructor(\r\n        model: BpmnModel,\r\n        MatrixDefId?: string,\r\n        MatrixDefName?: string,\r\n        ConditionField1?: string,\r\n        ConditionFieldText1?: string,\r\n        ConditionField2?: string,\r\n        ConditionFieldText2?: string,\r\n        ConditionField3?: string,\r\n        ConditionFieldText3?: string,\r\n        DataFieldAlias?: string,) {\r\n        super(model);\r\n        this.MatrixDefId = MatrixDefId;\r\n        this.MatrixDefName = MatrixDefName;\r\n        this.ConditionField1 = ConditionField1;\r\n        this.ConditionFieldText1 = ConditionFieldText1;\r\n        this.ConditionField2 = ConditionField2;\r\n        this.ConditionFieldText2 = ConditionFieldText2;\r\n        this.ConditionField3 = ConditionField3;\r\n        this.ConditionFieldText3 = ConditionFieldText3;\r\n        this.DataFieldAlias = DataFieldAlias;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MatrixDefId\", this.MatrixDefId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MatrixDefName\", this.MatrixDefName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionField1\", this.ConditionField1);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionFieldText1\", this.ConditionFieldText1);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionField2\", this.ConditionField2);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionFieldText2\", this.ConditionFieldText2);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionField3\", this.ConditionField3);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ConditionFieldText3\", this.ConditionFieldText3);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DataFieldAlias\", this.DataFieldAlias);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.MatrixDefId = obj.MatrixDefId;\r\n        this.MatrixDefName = obj.MatrixDefName;\r\n        this.ConditionField1 = obj.ConditionField1;\r\n        this.ConditionFieldText1 = obj.ConditionFieldText1;\r\n        this.ConditionField2 = obj.ConditionField2;\r\n        this.ConditionFieldText2 = obj.ConditionFieldText2\r\n        this.ConditionField3 = obj.ConditionField3;\r\n        this.ConditionFieldText3 = obj.ConditionFieldText3;\r\n        this.DataFieldAlias = obj.DataFieldAlias;\r\n    }\r\n\r\n    NewInstance(): MatrixParticipant {\r\n        return new MatrixParticipant(this.Model);\r\n    }\r\n\r\n    clone(): MatrixParticipant {\r\n        const matrixParticipant = new MatrixParticipant(this.Model);\r\n        matrixParticipant.Id = BpmnModelHelper.GenerateElementId();\r\n        matrixParticipant.Name = this.Name;\r\n        matrixParticipant.MatrixDefId = this.MatrixDefId;\r\n        matrixParticipant.MatrixDefName = this.MatrixDefName;\r\n        matrixParticipant.ConditionField1 = this.ConditionField1;\r\n        matrixParticipant.ConditionFieldText1 = this.ConditionFieldText1;\r\n        matrixParticipant.ConditionField2 = this.ConditionField2;\r\n        matrixParticipant.ConditionFieldText2 = this.ConditionFieldText2;\r\n        matrixParticipant.ConditionField3 = this.ConditionField3;\r\n        matrixParticipant.ConditionFieldText3 = this.ConditionFieldText3;\r\n        matrixParticipant.DataFieldAlias = this.DataFieldAlias;\r\n        if (this.Condition) {\r\n            matrixParticipant.Condition = this.Condition.clone();\r\n        }\r\n\r\n        return matrixParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new MatrixParticipant(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class PositionParticipant extends Participant {\r\n\r\n    static Clr_Type_ID: string = 'wf.PositionParticipant';\r\n    ClrTypeID: string = PositionParticipant.Clr_Type_ID;\r\n\r\n    private static CLR_TYPE_NAME: string = '岗位';\r\n\r\n    /// <summary>\r\n    /// 岗位Id\r\n    /// </summary>\r\n    PositionId: string;\r\n    /// <summary>\r\n    /// 岗位名称\r\n    /// </summary>\r\n    PositionName: string;\r\n    /// <summary>\r\n    /// 岗位类型\r\n    /// </summary>\r\n    PositionType: string;\r\n    /// <summary>\r\n    /// 获取组织ID\r\n    /// </summary>\r\n    OrgId: string;\r\n    /// <summary>\r\n    /// 获取组织名称\r\n    /// </summary>\r\n    OrgName: string;\r\n    /// <summary>\r\n    /// 组织类型Code\r\n    /// </summary>\r\n    OrgType: string = 'Sys';\r\n\r\n    constructor(model: BpmnModel, id?: string, name?: string) {\r\n        super(model);\r\n        this.PositionId = id;\r\n        this.PositionName = name;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"PositionId\", this.PositionId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"PositionName\", this.PositionName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"PositionType\", this.PositionType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgId\", this.OrgId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgName\", this.OrgName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgType\", this.OrgType);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.PositionId = obj.PositionId;\r\n        this.PositionName = obj.PositionName;\r\n        this.PositionType = obj.PositionType;\r\n        this.OrgId = obj.OrgId;\r\n        this.OrgName = obj.OrgName;\r\n        this.OrgType = obj.OrgType;\r\n    }\r\n\r\n    NewInstance(): PositionParticipant {\r\n        return new PositionParticipant(this.Model);\r\n    }\r\n\r\n    clone(): PositionParticipant {\r\n        const positionParticipant = new PositionParticipant(this.Model);\r\n        positionParticipant.Id = BpmnModelHelper.GenerateElementId();\r\n        positionParticipant.Name = this.Name;\r\n        positionParticipant.PositionId = this.PositionId;\r\n        positionParticipant.PositionName = this.PositionName;\r\n        positionParticipant.PositionType = this.PositionType;\r\n        positionParticipant.OrgType = this.OrgType;\r\n        positionParticipant.OrgId = this.OrgId\r\n        positionParticipant.OrgName = this.OrgName;\r\n        if (this.Condition) {\r\n            positionParticipant.Condition = this.Condition.clone();\r\n        }\r\n        return positionParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new PositionParticipant(new BpmnModel()));","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class ReportingLineParticipant extends Participant {\r\n\r\n    static Clr_Type_ID: string = 'wf.ReportingLineParticipant';\r\n    ClrTypeID: string = ReportingLineParticipant.Clr_Type_ID;\r\n\r\n    private static CLR_TYPE_NAME: string = '汇报关系';\r\n\r\n    Tag: string;\r\n    ReportingLineDefId: string;\r\n    ReportingLineDefName: string;\r\n    RefOrgId: string;\r\n    RefOrgName: string;\r\n    RefUserId: string;\r\n    RefEmployeeId: string;\r\n    ReportingReferObject: string;\r\n    Dimension: string;\r\n\r\n    constructor(\r\n        model: BpmnModel,\r\n        RefUserId?: string,\r\n        RefEmployeeId?: string,\r\n        ReportingReferObject?: string,\r\n        RefOrgId?: string,\r\n        RefOrgName?: string,\r\n        ReportingLineDefId?: string,\r\n        ReportingLineDefName?: string,\r\n        Dimension?: string,\r\n    ) {\r\n        super(model);\r\n        this.RefUserId = RefUserId;\r\n        this.RefEmployeeId = RefEmployeeId;\r\n        this.ReportingReferObject = ReportingReferObject;\r\n        this.RefOrgId = RefOrgId;\r\n        this.RefOrgName = RefOrgName;\r\n        this.ReportingLineDefId = ReportingLineDefId;\r\n        this.ReportingLineDefName = ReportingLineDefName;\r\n        this.Dimension = Dimension;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"RefUserId\", this.RefUserId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"RefEmployeeId\", this.RefEmployeeId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ReportingReferObject\", this.ReportingReferObject);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Dimension\", this.Dimension);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"RefOrgId\", this.RefOrgId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"RefOrgName\", this.RefOrgName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ReportingLineDefId\", this.ReportingLineDefId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ReportingLineDefName\", this.ReportingLineDefName);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.RefUserId = obj.RefUserId;\r\n        this.RefEmployeeId = obj.RefEmployeeId;\r\n        this.ReportingReferObject = obj.ReportingReferObject;\r\n        this.Dimension = obj.Dimension;\r\n        this.RefOrgId = obj.RefOrgId;\r\n        this.RefOrgName = obj.RefOrgName;\r\n        this.ReportingLineDefId = obj.ReportingLineDefId;\r\n        this.ReportingLineDefName = obj.ReportingLineDefName;\r\n    }\r\n\r\n    NewInstance(): ReportingLineParticipant {\r\n        return new ReportingLineParticipant(this.Model);\r\n    }\r\n\r\n    clone(): ReportingLineParticipant {\r\n        const reportingLineParticipant = new ReportingLineParticipant(this.Model);\r\n        reportingLineParticipant.Id = BpmnModelHelper.GenerateElementId();\r\n        reportingLineParticipant.Name = this.Name;\r\n        reportingLineParticipant.RefUserId = this.RefUserId;\r\n        reportingLineParticipant.RefEmployeeId = this.RefEmployeeId;\r\n        reportingLineParticipant.ReportingReferObject = this.ReportingReferObject;\r\n        reportingLineParticipant.Dimension = this.Dimension;\r\n        reportingLineParticipant.RefOrgId = this.RefOrgId;\r\n        reportingLineParticipant.RefOrgName = this.RefOrgName;\r\n        reportingLineParticipant.ReportingLineDefId = this.ReportingLineDefId;\r\n        reportingLineParticipant.ReportingLineDefName = this.ReportingLineDefName;\r\n        reportingLineParticipant.Tag = this.Tag;\r\n\r\n        if (this.Condition) {\r\n            reportingLineParticipant.Condition = this.Condition.clone();\r\n        }\r\n\r\n        return reportingLineParticipant;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ReportingLineParticipant(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper } from \"@edp-pmf/bpmn-model\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class UserParticipant extends Participant {\r\n\r\n    constructor(model: BpmnModel, userId?: string, name?: string, orgType?: string) {\r\n        super(model);\r\n        this.UserId = userId;\r\n        this.Name = name;\r\n        this.OrgType = orgType ? orgType : 'Sys';\r\n    }\r\n\r\n    static Clr_Type_ID: string = \"wf.UserParticipant\";\r\n    private static CLR_TYPE_NAME = '用户';\r\n\r\n    ClrTypeID: string = UserParticipant.Clr_Type_ID;\r\n\r\n    Tag: string;\r\n    UserId: string;\r\n    OrgId: string;\r\n    OrgName: string;\r\n    OrgType: string;\r\n\r\n    NewInstance(): UserParticipant {\r\n        return new UserParticipant(this.Model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"UserId\", this.UserId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgId\", this.OrgId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgName\", this.OrgName);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"OrgType\", this.OrgType);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Tag\", this.Tag);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n        this.OrgId = obj.OrgId;\r\n        this.OrgName = obj.OrgName;\r\n        this.OrgType = obj.OrgType;\r\n        this.UserId = obj.UserId;\r\n        this.Tag = obj.Tag;\r\n    }\r\n\r\n    clone(): UserParticipant {\r\n        const userParticipant = new UserParticipant(this.Model);\r\n        userParticipant.Id = BpmnModelHelper.GenerateElementId();\r\n        userParticipant.Name = this.Name;\r\n        userParticipant.OrgId = this.OrgId;\r\n        userParticipant.OrgName = this.OrgName;\r\n        userParticipant.OrgType = this.OrgType;\r\n        userParticipant.UserId = this.UserId;\r\n        userParticipant.Tag = this.Tag;\r\n        if (this.Condition) {\r\n            userParticipant.Condition = this.Condition.clone();\r\n        }\r\n        return userParticipant;\r\n    }\r\n\r\n}\r\n\r\nBpmnModelHelper.RegisterElementType(new UserParticipant(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, IClrTypeElement, IHasNameElement } from \"@edp-pmf/bpmn-model\";\r\nimport { Condition } from \"../extension/condition-expression/Condition\";\r\n\r\nexport class ParticipantScheme extends ExtensionElement implements IClrTypeElement, IHasNameElement {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n    static Clr_Type_ID: string = \"wf.ParticipantScheme\";\r\n    readonly ClrTypeID: string = ParticipantScheme.Clr_Type_ID;\r\n    MexTag: string = 'participantScheme';\r\n\r\n    Id: string;\r\n    Name: string;\r\n    Performers: string;\r\n    Condition: Condition;\r\n\r\n\r\n    NewInstance(): ParticipantScheme {\r\n        return new ParticipantScheme(this.Model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Id\", this.Id);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Performers\", this.Performers);\r\n        if (this.Condition) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"Condition\", this.Condition.ConvertToJsonObject());\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n        this.Id = obj.Id;\r\n        this.Name = obj.Name;\r\n        this.Performers = obj.Performers;\r\n        const conditionElement = obj.Condition\r\n        if (conditionElement) {\r\n            const condition = new Condition(this.Model);\r\n            condition.LoadFromJsonObject(conditionElement);\r\n            this.Condition = condition;\r\n        }\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.Id = '';\r\n        this.Name = '';\r\n    }\r\n\r\n    clone(): ParticipantScheme {\r\n        const participantScheme = new ParticipantScheme(this.Model);\r\n        participantScheme.Id = this.Id;\r\n        participantScheme.Name = this.Name;\r\n        participantScheme.Performers = this.Performers;\r\n\r\n        if (this.Condition) {\r\n            participantScheme.Condition = this.Condition.clone();\r\n        }\r\n        return participantScheme;\r\n    }\r\n\r\n}\r\n\r\nBpmnModelHelper.RegisterElementType(new ParticipantScheme(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { Condition } from \"./extension/condition-expression/Condition\";\r\n\r\nexport class AutomaticApprovalRule extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.AutomaticApprovalRule\";\r\n    readonly ClrTypeID: string = AutomaticApprovalRule.Clr_Type_ID;\r\n\r\n    /**\r\n     * 自动审批规则标识\r\n     * DUPLICATE_PARTICIPANT 重复审批人\r\n     * CUSTOM_CONDITION 自定义条件\r\n     * TIMEOUT_OPERATION 超时自动审批\r\n     */\r\n    Id: string;\r\n    /**\r\n     * 自动审批的结论项\r\n     */\r\n    conclusionValue: string;\r\n    /**\r\n     * 自动审批意见（备注）\r\n     */\r\n    comment: string;\r\n    /**\r\n     * 自动审批操作人显示文本\r\n     */\r\n    operatorText: string;\r\n    /**\r\n     * 自动审批规则条件\r\n     */\r\n    condition: Condition;\r\n    /**\r\n     * 自动审批操作人记录为当前活动参与者\r\n     */\r\n    participantAsOperator: boolean;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Id\", this.Id);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ConclusionValue\", this.conclusionValue);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Comment\", this.comment);\r\n        ExtensionMethod.SetAttributeValue(obj, \"OperatorText\", this.operatorText);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ParticipantAsOperator\", this.participantAsOperator);\r\n        if (this.condition) {\r\n            BpmnModelHelper.SetAttributeValue(obj, \"Condition\", this.condition.ConvertToJsonObject());\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Id = ExtensionMethod.GetAttributeValue4String(obj, \"Id\");\r\n        this.conclusionValue = ExtensionMethod.GetAttributeValue4String(obj, \"ConclusionValue\");\r\n        this.comment = ExtensionMethod.GetAttributeValue4String(obj, \"Comment\");\r\n        this.operatorText = ExtensionMethod.GetAttributeValue4String(obj, \"OperatorText\");\r\n        this.participantAsOperator = ExtensionMethod.GetAttributeValue4Boolean(obj, \"ParticipantAsOperator\");\r\n\r\n        const conditionElement = ExtensionMethod.GetAttributeValue(obj, 'Condition');\r\n        if (conditionElement) {\r\n            const condition = new Condition(this.Model);\r\n            condition.LoadFromJsonObject(conditionElement);\r\n            this.condition = condition;\r\n        }\r\n    }\r\n\r\n\r\n    NewInstance(): AutomaticApprovalRule {\r\n        return new AutomaticApprovalRule(this.Model);\r\n    }\r\n\r\n\r\n    clone(): AutomaticApprovalRule {\r\n        const automaticApprovalRule = new AutomaticApprovalRule(this.Model);\r\n        automaticApprovalRule.Id = this.Id;\r\n        automaticApprovalRule.comment = this.comment;\r\n        automaticApprovalRule.conclusionValue = this.conclusionValue;\r\n        automaticApprovalRule.operatorText = this.operatorText;\r\n        automaticApprovalRule.participantAsOperator = this.participantAsOperator;\r\n\r\n        if (this.condition) {\r\n            automaticApprovalRule.condition = this.condition.clone();\r\n        }\r\n\r\n        return automaticApprovalRule;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new AutomaticApprovalRule(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, IClrTypeElement, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { AutomaticApprovalRule } from \"../AutomaticApprovalRule\";\r\n\r\nexport class ParticipantSetting extends ExtensionElement implements IClrTypeElement {\r\n\r\n    static Clr_Type_ID: string = \"wf.ParticipantSetting\";\r\n    readonly ClrTypeID: string = ParticipantSetting.Clr_Type_ID;\r\n    MexTag: string = 'ParticipantSetting';\r\n\r\n    /**\r\n    * 参与者排除项\r\n    * 场景示例：流程发起人不参与审批、已审人员不参与审批、上一活动审批人不参与审批、利益相关人（取自表单字段：报销人、排除本单位。。。假象的）\r\n    * 为了保持扩展性，此处引用参与者Id，使用参与者解析器解析\r\n    */\r\n    ExclusionPerformers: Array<string>;\r\n    /**\r\n    * 找不到参与者时处理策略：throwException, leave\r\n    */\r\n    NoPerformerStrategy: string;\r\n    /**\r\n    * 再次进入该节点时，参与人为该节点的已办人员\r\n    * 主要用于驳回和重新提交至驳回节点的场景\r\n    */\r\n    HistoricFirst: boolean;\r\n    /**\r\n    * 连岗审批：同一办理人在相邻节点任务仅办理一次，下一环节自动完成\r\n    * 与exclusionPerformers设置“上一活动审批人不参与审批”冲突\r\n    */\r\n    Neighboring: boolean;\r\n\r\n    /**\r\n     * 自动审批项\r\n     * 场景示例：流程发起人不参与审批、已审人员不参与审批、上一活动审批人不参与审批、利益相关人（取自表单字段：报销人、排除本单位。。。假象的）\r\n     * 为了保持扩展性，此处引用参与者Id，使用参与者解析器解析\r\n     */\r\n    automaticPerformers: Array<string>;\r\n\r\n    /**\r\n     * 自动审批规则List\r\n     */\r\n    automaticApprovalRules: Array<AutomaticApprovalRule>;\r\n\r\n\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n        this.NoPerformerStrategy = 'leave';\r\n        this.HistoricFirst = false;\r\n    }\r\n\r\n    protected resetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.NoPerformerStrategy = 'leave';\r\n        this.HistoricFirst = true;\r\n        this.ExclusionPerformers = new Array();\r\n        this.automaticPerformers = new Array();\r\n        this.automaticApprovalRules = new Array();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ExclusionPerformers\", this.ExclusionPerformers);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"AutomaticPerformers\", this.automaticPerformers);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"NoPerformerStrategy\", this.NoPerformerStrategy);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"HistoricFirst\", this.HistoricFirst);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Neighboring\", this.Neighboring);\r\n        if (this.automaticApprovalRules && this.automaticApprovalRules.length > 0) {\r\n            const rules = new Array();\r\n            for (const a of this.automaticApprovalRules) {\r\n                rules.push(a.ConvertToJsonObject());\r\n            }\r\n            BpmnModelHelper.SetAttributeValue(obj, \"AutomaticApprovalRules\", rules);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.ExclusionPerformers = obj.ExclusionPerformers;\r\n        this.NoPerformerStrategy = obj.NoPerformerStrategy;\r\n        this.HistoricFirst = obj.HistoricFirst;\r\n        this.Neighboring = obj.Neighboring;\r\n        this.automaticPerformers = ExtensionMethod.GetAttributeValue(obj, \"AutomaticPerformers\");\r\n\r\n        this.automaticApprovalRules = new Array();\r\n        const rules = ExtensionMethod.GetAttributeValue(obj, \"AutomaticApprovalRules\");\r\n        if (rules && rules.length > 0) {\r\n            for (const r of rules) {\r\n                const automaticApprovalRule = new AutomaticApprovalRule(this.Model);\r\n                automaticApprovalRule.LoadFromJsonObject(r);\r\n                this.automaticApprovalRules.push(automaticApprovalRule);\r\n            }\r\n        }\r\n    }\r\n\r\n    NewInstance(): ParticipantSetting {\r\n        return new ParticipantSetting(this.Model);\r\n    }\r\n\r\n    clone(): ParticipantSetting {\r\n        const participantSetting = new ParticipantSetting(this.Model);\r\n        participantSetting.ExclusionPerformers = new Array();\r\n        if (this.ExclusionPerformers && this.ExclusionPerformers.length > 0) {\r\n            for (const e of this.ExclusionPerformers) {\r\n                participantSetting.ExclusionPerformers.push(e);\r\n            }\r\n        }\r\n        participantSetting.NoPerformerStrategy = this.NoPerformerStrategy;\r\n        participantSetting.HistoricFirst = this.HistoricFirst;\r\n        participantSetting.Neighboring = this.Neighboring;\r\n        participantSetting.automaticPerformers = new Array();\r\n        if (this.automaticPerformers && this.automaticPerformers.length > 0) {\r\n            for (const a of this.automaticPerformers) {\r\n                participantSetting.automaticPerformers.push(a);\r\n            }\r\n        }\r\n        participantSetting.automaticApprovalRules = new Array();\r\n        if (this.automaticApprovalRules && this.automaticApprovalRules.length > 0) {\r\n            for (const r of this.automaticApprovalRules) {\r\n                const automaticApprovalRule = r.clone();\r\n                participantSetting.automaticApprovalRules.push(automaticApprovalRule);\r\n            }\r\n        }\r\n\r\n        return participantSetting;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ParticipantSetting(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod, PotentialOwner } from \"@edp-pmf/bpmn-model\";\r\nimport { Condition } from \"./extension/condition-expression/Condition\";\r\nimport { ActivityExecutorParticipantExpression } from \"./participants/ActivityExecutorParticipantExpression\";\r\nimport { ComponentParticipantExpression } from \"./participants/ComponentParticipantExpression\";\r\nimport { MatrixParticipantExpression } from \"./participants/MatrixParticipantExpression\";\r\nimport { OrganizationParticipantExpression } from \"./participants/OrganizationParticipantExpression\";\r\nimport { ParticipantExpression } from \"./participants/ParticipantExpression\";\r\nimport { PositionParticipantExpression } from \"./participants/PositionParticipantExpression\";\r\nimport { ReportingLineParticipantExpression } from \"./participants/ReportingLineParticipantExpression\";\r\nimport { UserParticipantExpression } from \"./participants/UserParticipantExpression\";\r\nimport { VariableParticipantExpression } from \"./participants/VariableParticipantExpression\";\r\n\r\nexport class PotentialOwnerImpl extends PotentialOwner {\r\n\r\n    static Clr_Type_ID: string = \"wf.PotentialOwnerImpl\";\r\n    ClrTypeID: string = PotentialOwnerImpl.Clr_Type_ID;\r\n\r\n    participantExpression: ParticipantExpression;\r\n    condition: Condition;\r\n    order: number;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Order\", this.order);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.order = ExtensionMethod.GetAttributeValue4Int64(obj, \"Order\");\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.participantExpression != null) {\r\n            list.push(this.participantExpression);\r\n        }\r\n        if (this.condition != null) {\r\n            list.push(this.condition);\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            switch (extensionElement.ClrTypeID) {\r\n                case UserParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case VariableParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case PositionParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case OrganizationParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case MatrixParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case ComponentParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                    this.participantExpression = (extensionElement as ParticipantExpression);\r\n                    break;\r\n                case Condition.Clr_Type_ID:\r\n                    this.condition = (extensionElement as Condition);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    clone(): PotentialOwnerImpl {\r\n        const potentialOwnerImpl = new PotentialOwnerImpl(this.Model);\r\n        if (this.participantExpression) {\r\n            switch (this.participantExpression.ClrTypeID) {\r\n                case UserParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as UserParticipantExpression).clone();\r\n                    break;\r\n                case VariableParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as VariableParticipantExpression).clone();\r\n                    break;\r\n                case PositionParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as PositionParticipantExpression).clone();\r\n                    break;\r\n                case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as ReportingLineParticipantExpression).clone();\r\n                    break;\r\n                case OrganizationParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as OrganizationParticipantExpression).clone();\r\n                    break;\r\n                case MatrixParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as MatrixParticipantExpression).clone();\r\n                    break;\r\n                case ComponentParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as ComponentParticipantExpression).clone();\r\n                    break;\r\n                case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                    potentialOwnerImpl.participantExpression = (this.participantExpression as ActivityExecutorParticipantExpression).clone();\r\n                    break;\r\n            }\r\n        }\r\n        if (this.condition) {\r\n            potentialOwnerImpl.condition = this.condition.clone();\r\n        }\r\n        potentialOwnerImpl.order = this.order;\r\n        return potentialOwnerImpl;\r\n    }\r\n\r\n    NewInstance(): PotentialOwnerImpl {\r\n        return new PotentialOwnerImpl(this.Model);\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new PotentialOwnerImpl(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionMethod, MexExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { DurationType } from \"./DurationType\";\r\n\r\nexport abstract class ExpireOperation extends MexExtensionElement {\r\n\r\n    id: string;\r\n    /**\r\n     * 期限控制方式\r\n     */\r\n    durationType: DurationType;\r\n\r\n    /**\r\n     * 任务期限\r\n     */\r\n    timeDuration: number;\r\n\r\n    /**\r\n     * 时间单位\r\n     */\r\n    timeUnit: string;\r\n\r\n    /**\r\n     * 操作类型名称\r\n     */\r\n    operationTypeName: string;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Id\", this.id);\r\n        ExtensionMethod.SetAttributeValue(obj, \"DurationType\", this.durationType);\r\n        ExtensionMethod.SetAttributeValue(obj, \"TimeDuration\", this.timeDuration);\r\n        ExtensionMethod.SetAttributeValue(obj, \"TimeUnit\", this.timeUnit);\r\n        ExtensionMethod.SetAttributeValue(obj, \"OperationTypeName\", this.operationTypeName);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.id = ExtensionMethod.GetAttributeValue4String(obj, \"Id\");\r\n        this.durationType = ExtensionMethod.GetAttributeValue4String(obj, \"DurationType\") as DurationType;\r\n        this.timeDuration = ExtensionMethod.GetAttributeValue4Int64(obj, \"TimeDuration\");\r\n        this.timeUnit = ExtensionMethod.GetAttributeValue4String(obj, \"TimeUnit\");\r\n        this.operationTypeName = ExtensionMethod.GetAttributeValue4String(obj, \"OperationTypeName\");\r\n\r\n    }\r\n}\r\n","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ExpireOperation } from \"./ExpireOperation\";\r\n\r\nexport class AutoHandleExpireOperation extends ExpireOperation {\r\n    static Clr_Type_ID: string = \"wf.Mex.AutoHandleExpireOperation\";\r\n    readonly ClrTypeID: string = AutoHandleExpireOperation.Clr_Type_ID;\r\n\r\n    /**\r\n     * 办理类型，通过驳回否决等等\r\n     */\r\n    autoHandleType: string;\r\n\r\n    /**\r\n     * 办理意见\r\n     */\r\n    message: string;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Message\", this.message);\r\n        ExtensionMethod.SetAttributeValue(obj, \"AutoHandleType\", this.autoHandleType);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.message = ExtensionMethod.GetAttributeValue4String(obj, \"Message\");\r\n        this.autoHandleType = ExtensionMethod.GetAttributeValue4String(obj, \"AutoHandleType\");\r\n    }\r\n\r\n    NewInstance(): AutoHandleExpireOperation {\r\n        return new AutoHandleExpireOperation(this.Model);\r\n    }\r\n\r\n    clone(): AutoHandleExpireOperation {\r\n        const autoHandleExpireOperation = new AutoHandleExpireOperation(this.Model);\r\n        autoHandleExpireOperation.id = BpmnModelHelper.GenerateElementId();\r\n        autoHandleExpireOperation.durationType = this.durationType;\r\n        autoHandleExpireOperation.timeDuration = this.timeDuration;\r\n        autoHandleExpireOperation.timeUnit = this.timeUnit;\r\n        autoHandleExpireOperation.message = this.message;\r\n        autoHandleExpireOperation.autoHandleType = this.autoHandleType;\r\n\r\n        return autoHandleExpireOperation;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new AutoHandleExpireOperation(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionMethod } from \"@edp-pmf/bpmn-model\";\r\nimport { ExpireOperation } from \"./ExpireOperation\";\r\nimport { SmsMessageTemplate } from \"./SmsMessageTemplate\";\r\n\r\nexport class SendMessageExpireOperation extends ExpireOperation {\r\n    static Clr_Type_ID: string = \"wf.Mex.SendMessageExpireOperation\";\r\n    readonly ClrTypeID: string = SendMessageExpireOperation.Clr_Type_ID;\r\n\r\n    /**\r\n     *预警信息内容\r\n     */\r\n    message: string;\r\n\r\n    /**\r\n     * 发送预警信息类型\r\n     */\r\n    sendType: string;\r\n\r\n    /**\r\n     * 预警信息主题\r\n     */\r\n    subject: string;\r\n\r\n    /**\r\n     * 消息接收人\r\n     * 用户IDs\r\n     */\r\n    receiver: string;\r\n\r\n    /**\r\n     * 消息接收人显示\r\n     */\r\n    receiverText: string;\r\n\r\n    /**\r\n     * 开启循环预警\r\n     */\r\n    cycleEnable: boolean;\r\n\r\n    /**\r\n     * 循环预警时间间隔\r\n     */\r\n    cycleTime: string;\r\n\r\n    /**\r\n     * 循环预警时间间隔单位\r\n     */\r\n    cycleTimeUnit: string\r\n\r\n    smsMessageTemplate: SmsMessageTemplate;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.smsMessageTemplate = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Message\", this.message);\r\n        ExtensionMethod.SetAttributeValue(obj, \"SendType\", this.sendType);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Subject\", this.subject);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Receiver\", this.receiver);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ReceiverText\", this.receiverText);\r\n        ExtensionMethod.SetAttributeValue(obj, \"CycleEnable\", this.cycleEnable);\r\n        ExtensionMethod.SetAttributeValue(obj, \"CycleTime\", this.cycleTime);\r\n        ExtensionMethod.SetAttributeValue(obj, \"CycleTimeUnit\", this.cycleTimeUnit);\r\n\r\n        if (this.smsMessageTemplate) {\r\n            ExtensionMethod.SetAttributeValue(obj, \"SmsMessageTemplate\", this.smsMessageTemplate.ConvertToJsonObject());\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.message = ExtensionMethod.GetAttributeValue4String(obj, \"Message\");\r\n        this.sendType = ExtensionMethod.GetAttributeValue4String(obj, \"SendType\");\r\n        this.subject = ExtensionMethod.GetAttributeValue4String(obj, \"Subject\");\r\n        this.receiver = ExtensionMethod.GetAttributeValue4String(obj, \"Receiver\");\r\n        this.receiverText = ExtensionMethod.GetAttributeValue4String(obj, \"ReceiverText\");\r\n        this.cycleEnable = ExtensionMethod.GetAttributeValue4Boolean(obj, \"CycleEnable\");\r\n        this.cycleTime = ExtensionMethod.GetAttributeValue4String(obj, \"CycleTime\");\r\n        this.cycleTimeUnit = ExtensionMethod.GetAttributeValue4String(obj, \"CycleTimeUnit\");\r\n\r\n        const smsTemplateElement = ExtensionMethod.GetAttributeValue(obj, 'SmsMessageTemplate');\r\n        if (smsTemplateElement) {\r\n            const smsMessageTemplate = new SmsMessageTemplate(this.Model);\r\n            smsMessageTemplate.LoadFromJsonObject(smsTemplateElement);\r\n            this.smsMessageTemplate = smsMessageTemplate;\r\n        }\r\n    }\r\n\r\n    NewInstance(): SendMessageExpireOperation {\r\n        return new SendMessageExpireOperation(this.Model);\r\n    }\r\n\r\n    clone(): SendMessageExpireOperation {\r\n        const sendMessageExpireOperation = new SendMessageExpireOperation(this.Model);\r\n        sendMessageExpireOperation.id = BpmnModelHelper.GenerateElementId();\r\n        sendMessageExpireOperation.durationType = this.durationType;\r\n        sendMessageExpireOperation.timeDuration = this.timeDuration;\r\n        sendMessageExpireOperation.timeUnit = this.timeUnit;\r\n        sendMessageExpireOperation.message = this.message;\r\n        sendMessageExpireOperation.sendType = this.sendType;\r\n        sendMessageExpireOperation.subject = this.subject;\r\n        sendMessageExpireOperation.receiver = this.receiver;\r\n        sendMessageExpireOperation.receiverText = this.receiverText;\r\n        sendMessageExpireOperation.cycleEnable = this.cycleEnable;\r\n        sendMessageExpireOperation.cycleTime = this.cycleTime;\r\n        sendMessageExpireOperation.cycleTimeUnit = this.cycleTimeUnit;\r\n\r\n        if (this.smsMessageTemplate) {\r\n            sendMessageExpireOperation.smsMessageTemplate = this.smsMessageTemplate.clone();\r\n        }\r\n\r\n        return sendMessageExpireOperation;\r\n    }\r\n\r\n}\r\nBpmnModelHelper.RegisterElementType(new SendMessageExpireOperation(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { AutoHandleExpireOperation } from \"./AutoHandleExpireOperation\";\r\nimport { ExpireOperation } from \"./ExpireOperation\";\r\nimport { SendMessageExpireOperation } from \"./SendMessageExpireOperation\";\r\n\r\nexport class TimeLimitControl extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.TimeLimitControl\";\r\n    readonly ClrTypeID: string = TimeLimitControl.Clr_Type_ID;\r\n\r\n    /**\r\n     * 自定义标签，用于区分期限控制方式\r\n     * expression 表达式\r\n     * constant 固定值\r\n     * scope 时间范围\r\n     */\r\n    tag: string;\r\n\r\n    /**\r\n     * 是否启用\r\n     */\r\n    enable: boolean;\r\n\r\n    /**\r\n     * 限定时长\r\n     */\r\n    dueTime: string;\r\n\r\n    /**\r\n     * 时间单位 day,hour,minute\r\n     */\r\n    timeUnit: string;\r\n\r\n    expireOperations: Array<ExpireOperation> = new Array();\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Tag\", this.tag);\r\n        ExtensionMethod.SetAttributeValue(obj, \"DueTime\", this.dueTime);\r\n        ExtensionMethod.SetAttributeValue(obj, \"TimeUnit\", this.timeUnit);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Enable\", this.enable);\r\n\r\n        const expireOperationElements = new Array();\r\n        if (this.expireOperations !== null && this.expireOperations.length > 0) {\r\n            this.expireOperations.forEach((item) => {\r\n                expireOperationElements.push(item.ConvertToJsonObject());\r\n            });\r\n        }\r\n        ExtensionMethod.SetAttributeValue(obj, \"ExpireOperations\", expireOperationElements);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.tag = ExtensionMethod.GetAttributeValue4String(obj, \"Tag\");\r\n        this.dueTime = ExtensionMethod.GetAttributeValue4String(obj, \"DueTime\");\r\n        this.timeUnit = ExtensionMethod.GetAttributeValue4String(obj, \"TimeUnit\");\r\n        this.enable = ExtensionMethod.GetAttributeValue4Boolean(obj, \"Enable\");\r\n\r\n        const expireOperationElements = ExtensionMethod.GetAttributeValue(obj, \"ExpireOperations\") as Array<any>;\r\n\r\n        if (expireOperationElements !== null && expireOperationElements.length > 0) {\r\n            expireOperationElements.forEach((item) => {\r\n                if (item.OperationTypeName === 'SendMessageExpireOperation') {\r\n                    const expireOperation = new SendMessageExpireOperation(this.Model);\r\n                    expireOperation.LoadFromJsonObject(item);\r\n                    this.expireOperations.push(expireOperation);\r\n                } else if (item.OperationTypeName === 'AutoHandleExpireOperation') {\r\n                    const expireOperation = new AutoHandleExpireOperation(this.Model);\r\n                    expireOperation.LoadFromJsonObject(item);\r\n                    this.expireOperations.push(expireOperation)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    NewInstance(): TimeLimitControl {\r\n        return new TimeLimitControl(this.Model);\r\n    }\r\n\r\n    clone(): TimeLimitControl {\r\n        const timeLimitControl = new TimeLimitControl(this.Model);\r\n        timeLimitControl.tag = this.tag;\r\n        timeLimitControl.enable = this.enable;\r\n        timeLimitControl.dueTime = this.dueTime;\r\n        timeLimitControl.timeUnit = this.timeUnit;\r\n        timeLimitControl.expireOperations = new Array();\r\n        if (this.expireOperations && this.expireOperations.length > 0) {\r\n            for (const e of this.expireOperations) {\r\n                if (e instanceof SendMessageExpireOperation) {\r\n                    const sendMessage = e as SendMessageExpireOperation;\r\n                    const expireOperation = sendMessage.clone();\r\n                    timeLimitControl.expireOperations.push(expireOperation);\r\n                }\r\n            }\r\n        }\r\n\r\n        return timeLimitControl;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new TimeLimitControl(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { SmsMessageTemplate } from \"./SmsMessageTemplate\";\r\n\r\nexport class UrgeHandleRule extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.UrgeHandleRule\";\r\n    readonly ClrTypeID: string = UrgeHandleRule.Clr_Type_ID;\r\n\r\n    urgeHandleAble: boolean;\r\n\r\n    sendType: string;\r\n    /**\r\n     * 最早允许催办时间（时）\r\n     */\r\n    earlyTime: number;\r\n    /**\r\n     * 最小允许催办间隔（时）\r\n     */\r\n    intervalTime: number;\r\n    /**\r\n     * 主题\r\n     */\r\n    urgeMessageSubject: string;\r\n    /**\r\n     * 内容\r\n     */\r\n    urgeMessageContent: string;\r\n    /**\r\n     * 是否添加催办人信息\r\n     */\r\n    addReminder: boolean;\r\n    /**\r\n     * 主题可编辑\r\n     */\r\n    subjectEditable: boolean;\r\n    /**\r\n     * 内容可编辑\r\n     */\r\n    contentEditable: boolean;\r\n\r\n    smsMessageTemplate: SmsMessageTemplate;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.smsMessageTemplate = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        ExtensionMethod.SetAttributeValue(obj, \"UrgeHandleAble\", this.urgeHandleAble);\r\n        ExtensionMethod.SetAttributeValue(obj, \"SendType\", this.sendType);\r\n        ExtensionMethod.SetAttributeValue(obj, \"EarlyTime\", this.earlyTime);\r\n        ExtensionMethod.SetAttributeValue(obj, \"IntervalTime\", this.intervalTime);\r\n        ExtensionMethod.SetAttributeValue(obj, \"UrgeMessageSubject\", this.urgeMessageSubject);\r\n        ExtensionMethod.SetAttributeValue(obj, \"UrgeMessageContent\", this.urgeMessageContent);\r\n        ExtensionMethod.SetAttributeValue(obj, \"AddReminder\", this.addReminder);\r\n        ExtensionMethod.SetAttributeValue(obj, \"SubjectEditable\", this.subjectEditable);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ContentEditable\", this.contentEditable);\r\n\r\n        if (this.smsMessageTemplate) {\r\n            ExtensionMethod.SetAttributeValue(obj, \"SmsMessageTemplate\", this.smsMessageTemplate.ConvertToJsonObject());\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.earlyTime = ExtensionMethod.GetAttributeValue4Int64(obj, \"EarlyTime\");\r\n        this.intervalTime = ExtensionMethod.GetAttributeValue4Int64(obj, \"IntervalTime\");\r\n        this.sendType = ExtensionMethod.GetAttributeValue4String(obj, \"SendType\");\r\n        this.urgeHandleAble = ExtensionMethod.GetAttributeValue4Boolean(obj, \"UrgeHandleAble\");\r\n        this.urgeMessageSubject = ExtensionMethod.GetAttributeValue4String(obj, \"UrgeMessageSubject\");\r\n        this.urgeMessageContent = ExtensionMethod.GetAttributeValue4String(obj, \"UrgeMessageContent\");\r\n        this.addReminder = ExtensionMethod.GetAttributeValue4Boolean(obj, \"AddReminder\");\r\n        this.subjectEditable = ExtensionMethod.GetAttributeValue4Boolean(obj, \"SubjectEditable\");\r\n        this.contentEditable = ExtensionMethod.GetAttributeValue4Boolean(obj, \"ContentEditable\");\r\n\r\n        const smsTemplateElement = ExtensionMethod.GetAttributeValue(obj, 'SmsMessageTemplate');\r\n        if (smsTemplateElement) {\r\n            const smsMessageTemplate = new SmsMessageTemplate(this.Model);\r\n            smsMessageTemplate.LoadFromJsonObject(smsTemplateElement);\r\n            this.smsMessageTemplate = smsMessageTemplate;\r\n        }\r\n    }\r\n\r\n    NewInstance(): UrgeHandleRule {\r\n        return new UrgeHandleRule(this.Model);\r\n    }\r\n\r\n    clone(): UrgeHandleRule {\r\n        const urgeHandleRule = new UrgeHandleRule(this.Model);\r\n        urgeHandleRule.earlyTime = this.earlyTime;\r\n        urgeHandleRule.intervalTime = this.intervalTime;\r\n        urgeHandleRule.sendType = this.sendType;\r\n        urgeHandleRule.urgeHandleAble = this.urgeHandleAble;\r\n        urgeHandleRule.urgeMessageSubject = this.urgeMessageSubject;\r\n        urgeHandleRule.urgeMessageContent = this.urgeMessageContent;\r\n        urgeHandleRule.addReminder = this.addReminder;\r\n        urgeHandleRule.subjectEditable = this.subjectEditable;\r\n        urgeHandleRule.contentEditable = this.contentEditable;\r\n\r\n        if (this.smsMessageTemplate) {\r\n            urgeHandleRule.smsMessageTemplate = this.smsMessageTemplate.clone();\r\n        }\r\n\r\n        return urgeHandleRule;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new UrgeHandleRule(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class VariableSetting extends ExtensionElement {\r\n    static Clr_Type_ID: string = \"wf.VariableSetting\";\r\n    readonly ClrTypeID: string = VariableSetting.Clr_Type_ID;\r\n\r\n    // /**\r\n    //  * 变量Id\r\n    //  */\r\n    // variableId: string;\r\n    /**\r\n     * 变量编号\r\n     */\r\n    variableCode: string;\r\n    /**\r\n     * 变量名称\r\n     */\r\n    variableName: string;\r\n    /**\r\n     * 自定义标签，赋值方式\r\n     * expression 语义化表达式\r\n     * constant 常量\r\n     * component 构件\r\n     */\r\n    tag: string;\r\n    /**\r\n     * 变量执行时机\r\n     * ACTIVITY_STARTED 活动开始\r\n     * ACTIVITY_COMPLETED 活动完成\r\n     */\r\n    executionTime: string;\r\n    /**\r\n     * 变量值\r\n     */\r\n    value: string;\r\n\r\n    valueText: string;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        // ExtensionMethod.SetAttributeValue(obj, \"VariableId\", this.variableId);\r\n        ExtensionMethod.SetAttributeValue(obj, \"VariableCode\", this.variableCode);\r\n        ExtensionMethod.SetAttributeValue(obj, \"VariableName\", this.variableName);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Tag\", this.tag);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ExecutionTime\", this.executionTime);\r\n        ExtensionMethod.SetAttributeValue(obj, \"Value\", this.value);\r\n        ExtensionMethod.SetAttributeValue(obj, \"ValueText\", this.valueText);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        // this.variableId = ExtensionMethod.GetAttributeValue4String(obj, \"VariableId\");\r\n        this.variableCode = ExtensionMethod.GetAttributeValue4String(obj, \"VariableCode\");\r\n        this.variableName = ExtensionMethod.GetAttributeValue4String(obj, \"VariableName\");\r\n        this.tag = ExtensionMethod.GetAttributeValue4String(obj, \"Tag\");\r\n        this.executionTime = ExtensionMethod.GetAttributeValue4String(obj, \"ExecutionTime\");\r\n        this.value = ExtensionMethod.GetAttributeValue4String(obj, \"Value\");\r\n        this.valueText = ExtensionMethod.GetAttributeValue4String(obj, \"ValueText\");\r\n\r\n    }\r\n\r\n    NewInstance(): VariableSetting {\r\n        return new VariableSetting(this.Model);\r\n    }\r\n\r\n\r\n    clone(): VariableSetting {\r\n        const variableSetting = new VariableSetting(this.Model);\r\n        variableSetting.variableCode = this.variableCode;\r\n        variableSetting.variableName = this.variableName;\r\n        variableSetting.tag = this.tag;\r\n        variableSetting.executionTime = this.executionTime;\r\n        variableSetting.value = this.value;\r\n        variableSetting.valueText = this.valueText;\r\n\r\n        return variableSetting;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new VariableSetting(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, UserTask, ExtensionMethod, ValidationError } from \"@edp-pmf/bpmn-model\";\r\nimport { ApprovalPivotConfig } from \"../ApprovalPivotConfig\";\r\nimport { CheckCondition } from \"../CheckCondition\";\r\nimport { ExtendProperty } from \"../ExtendProperty\";\r\nimport { AssignmentStrategy } from \"../extension/assignment-strategy/AssignmentStrategy\";\r\nimport { AssignPerformerConfig } from \"../extension/assignment-strategy/AssignPerformerConfig\";\r\nimport { BackWardRule } from \"../extension/completion-strategy/BackWardRule\";\r\nimport { ConclusionItem } from \"../extension/completion-strategy/ConclusionItem\";\r\nimport { CounterSignRule } from \"../extension/completion-strategy/CounterSignRule\";\r\nimport { ExecuteWorkItemMode } from \"../extension/completion-strategy/ExecuteWorkItemMode\";\r\nimport { WorkFlowAction } from \"../extension/completion-strategy/WorkFlowAction\";\r\nimport { CustomizeAction } from \"../extension/CustomizeAction\";\r\nimport { DisplayTerminal } from \"../extension/DisplayTerminal\";\r\nimport { ExecuteForm } from \"../extension/ExecuteForm\";\r\nimport { JumpScope } from \"../extension/JumpScope\";\r\nimport { Component } from \"../extension/tool/Component\";\r\nimport { Tool } from \"../extension/tool/Tool\";\r\nimport { HumanPerformerImpl } from \"../HumanPerformerImpl\";\r\nimport { ImageSettings } from \"../ImageSetting\";\r\nimport { MessageNotice } from \"../MessageNotice\";\r\nimport { TitleExpression } from \"../mex/TitleExpression\";\r\nimport { OrganizationPotentialOwner } from \"../OrganizationPotentialOwner\";\r\nimport { FormalParameter } from \"../parameter/FormalParameter\";\r\nimport { ActivityExecutorParticipant } from \"../participants/old/ActivityExecutorParticipant\";\r\nimport { ComponentParticipant } from \"../participants/old/ComponentParticipant\";\r\nimport { MatrixParticipant } from \"../participants/old/MatrixParticipant\";\r\nimport { PositionParticipant } from \"../participants/old/PositionParticipant\";\r\nimport { ReportingLineParticipant } from \"../participants/old/ReportingLineParticipant\";\r\nimport { UserParticipant } from \"../participants/old/UserParticipant\";\r\nimport { OrganizationParticipantExpression } from \"../participants/OrganizationParticipantExpression\";\r\nimport { ParticipantExpression } from \"../participants/ParticipantExpression\";\r\nimport { ParticipantScheme } from \"../participants/ParticipantScheme\";\r\nimport { ParticipantSetting } from \"../participants/ParticipantSetting\";\r\nimport { PotentialOwnerImpl } from \"../PotentialOwnerImpl\";\r\nimport { TimeLimitControl } from \"../TimeLimitControl\";\r\nimport { UrgeHandleRule } from \"../UrgeHandleRule\";\r\nimport { VariableSetting } from \"../VariableSetting\";\r\nimport { Notification } from \"../extension/Notification\";\r\nimport { OtherAssignNodes } from \"../extension/OtherAssignNodes\";\r\n\r\nexport class UserActivity extends UserTask {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n        this.ParticipantSchemes = new Array<ParticipantScheme>();\r\n        this.CounterSignRules = null;\r\n        this.ExecuteWorkItemMode = ExecuteWorkItemMode.Preempt;\r\n        this.DisplayTerminal = DisplayTerminal.ALL;\r\n        this.Retrievable = true;\r\n        this.AddSignFrontAble = false;\r\n        this.AddSignBehindAble = false;\r\n        this.SelectTargetAble = false;\r\n        this.transferAble = true;\r\n        this.ParticipantSetting = new ParticipantSetting(model);\r\n        this.anonymous = false;\r\n        this.anonymousText = '办理人';\r\n        this.variableSettings = new Array();\r\n    }\r\n    static Clr_Type_ID: string = \"wf.UserActivity\";\r\n    ClrTypeID: string = UserActivity.Clr_Type_ID;\r\n    protected static MEXTAG: string = 'wf.UserActivity';\r\n\r\n    NewInstance(): UserActivity {\r\n        return new UserActivity(this.Model);\r\n    }\r\n    // 扩展属性\r\n    AssignmentStrategy: AssignmentStrategy = AssignmentStrategy.ALL;\r\n    AssignPerformerConfig: AssignPerformerConfig;\r\n    PerformerNotFundExecption: boolean;\r\n    Retrievable: boolean;\r\n    IsRollback: boolean;\r\n    SelectBranch: boolean;\r\n    NotifyAble: boolean;\r\n    AddSignFrontAble: boolean;\r\n    AddSignBehindAble: boolean;\r\n    Priority: string;\r\n    ExecuteWorkItemMode: ExecuteWorkItemMode;\r\n    DisplayTerminal: DisplayTerminal;\r\n\r\n    //跳转\r\n    SelectTargetAble: boolean;\r\n    JumpScope: JumpScope;\r\n    BackWardRule: BackWardRule;\r\n    transferAble: boolean;\r\n\r\n    // 扩展元素\r\n    ExecuteForms: ExecuteForm[];\r\n    customizeActions: CustomizeAction[];\r\n\r\n    // 活动参与者方案\r\n    ParticipantSchemes: ParticipantScheme[];\r\n    ParticipantSetting: ParticipantSetting;\r\n    CounterSignRules: CounterSignRule[];\r\n    AdhocActivitySecurities: string[];\r\n    NotificationList: Notification[];\r\n\r\n    humanPerformers: Array<HumanPerformerImpl> = new Array();\r\n    potentialOwners: Array<PotentialOwnerImpl> = new Array();\r\n    dynamicParticipants: Array<ParticipantExpression> = new Array();\r\n\r\n    taskTitle: TitleExpression;\r\n\r\n    anonymous: boolean;\r\n    anonymousText: string;\r\n\r\n    // 业务活动相关属性\r\n    //业务活动编号\r\n    BizActivityID: string;\r\n    // 业务活动名称\r\n    BizActivityName: string;\r\n    // 审批结论枚举列表\r\n    Conclusions: Array<ConclusionItem> = new Array<ConclusionItem>();\r\n    // 外部工具集\r\n    Tools: Tool[] = new Array<Tool>();\r\n    // 业务活动参数\r\n    BizParameters: FormalParameter[] = new Array<FormalParameter>();\r\n\r\n    timeLimitControl: TimeLimitControl;\r\n\r\n    variableSettings: Array<VariableSetting>;\r\n\r\n    messageNotices: Array<MessageNotice>;\r\n\r\n    extendProperties: Array<ExtendProperty>;\r\n\r\n    approvalPivotConfig: ApprovalPivotConfig;\r\n\r\n    urgeHandleRule: UrgeHandleRule;\r\n\r\n    imageSettings: ImageSettings;\r\n\r\n    checkConditions: Array<CheckCondition>;\r\n\r\n    otherAssignNodes: OtherAssignNodes;\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.ParticipantSchemes = new Array<ParticipantScheme>();\r\n        this.CounterSignRules = new Array<CounterSignRule>();\r\n        this.Retrievable = true;\r\n        this.AddSignFrontAble = false;\r\n        this.AddSignBehindAble = false;\r\n        this.transferAble = true;\r\n        this.AssignmentStrategy = AssignmentStrategy.ALL;\r\n        this.ExecuteWorkItemMode = ExecuteWorkItemMode.Preempt;\r\n        this.DisplayTerminal = DisplayTerminal.ALL;\r\n        this.NotificationList = new Array<Notification>();\r\n        //\r\n        this.Conclusions = new Array<ConclusionItem>();\r\n        this.ExecuteForms = new Array<ExecuteForm>();\r\n        this.customizeActions = new Array<CustomizeAction>();\r\n        //跳转\r\n        this.SelectTargetAble = false;\r\n        this.JumpScope = null;\r\n        this.otherAssignNodes = null;\r\n        this.SelectBranch = false;\r\n        this.anonymous = false;\r\n        this.anonymousText = '办理人';\r\n        this.variableSettings = new Array();\r\n        this.messageNotices = new Array();\r\n        this.extendProperties = new Array<ExtendProperty>()\r\n        this.NotifyAble = false;\r\n        this.urgeHandleRule = null;\r\n        this.imageSettings = null;\r\n        this.humanPerformers = new Array();\r\n        this.potentialOwners = new Array();\r\n        this.dynamicParticipants = new Array();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, 'BizActivityID', this.BizActivityID);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'BizActivityName', this.BizActivityName);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'AssignmentStrategy', this.AssignmentStrategy);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'ExecuteWorkItemMode', this.ExecuteWorkItemMode);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'DisplayTerminal', this.DisplayTerminal);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Retrievable', this.Retrievable);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'AddSignFrontAble', this.AddSignFrontAble);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'AddSignBehindAble', this.AddSignBehindAble);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'SelectTargetAble', this.SelectTargetAble);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'TransferAble', this.transferAble);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'SelectBranch', this.SelectBranch);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'Anonymous', this.anonymous);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'AnonymousText', this.anonymousText);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"NotifyAble\", this.NotifyAble);\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any): any {\r\n        super.LoadFromJsonObject(obj);\r\n        this.BizActivityID = obj.BizActivityID;\r\n        this.BizActivityName = obj.BizActivityName;\r\n        this.AssignmentStrategy = obj.AssignmentStrategy;\r\n        this.ExecuteWorkItemMode = obj.ExecuteWorkItemMode;\r\n        this.DisplayTerminal = obj.DisplayTerminal;\r\n        this.Retrievable = obj.Retrievable;\r\n        this.AddSignFrontAble = obj.AddSignFrontAble;\r\n        this.AddSignBehindAble = obj.AddSignBehindAble;\r\n        this.SelectTargetAble = obj.SelectTargetAble;\r\n        this.SelectBranch = obj.SelectBranch;\r\n        this.transferAble = obj.TransferAble;\r\n        this.anonymous = obj.Anonymous;\r\n        this.anonymousText = obj.AnonymousText;\r\n        this.NotifyAble = obj.NotifyAble;\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n        if (this.ParticipantSchemes != null) {\r\n            for (let scheme of this.ParticipantSchemes) {\r\n                scheme.MexTag = UserActivity.MEXTAG;\r\n                list.push(scheme);\r\n            }\r\n        }\r\n        if (this.ExecuteForms != null) {\r\n            for (let form of this.ExecuteForms) {\r\n                form.MexTag = UserActivity.MEXTAG;\r\n                list.push(form);\r\n            }\r\n        }\r\n        if (this.CounterSignRules != null) {\r\n            for (let rule of this.CounterSignRules) {\r\n                rule.MexTag = UserActivity.MEXTAG;\r\n                list.push(rule);\r\n            }\r\n        }\r\n        if (this.NotificationList != null) {\r\n            for (let item of this.NotificationList) {\r\n                item.MexTag = UserActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        if (this.Conclusions != null) {\r\n            for (let item of this.Conclusions) {\r\n                item.MexTag = UserActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        if (this.Tools != null) {\r\n            for (let item of this.Tools) {\r\n                item.MexTag = UserActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        if (this.AssignPerformerConfig != null) {\r\n            this.AssignPerformerConfig.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.AssignPerformerConfig);\r\n        }\r\n        if (this.JumpScope != null) {\r\n            this.JumpScope.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.JumpScope);\r\n        }\r\n        if (this.urgeHandleRule != null) {\r\n            this.urgeHandleRule.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.urgeHandleRule);\r\n        }\r\n        if (this.BackWardRule != null) {\r\n            this.BackWardRule.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.BackWardRule);\r\n        }\r\n        if (this.ParticipantSetting != null) {\r\n            this.ParticipantSetting.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.ParticipantSetting);\r\n        }\r\n        if (this.taskTitle != null) {\r\n            this.taskTitle.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.taskTitle);\r\n        }\r\n        if (this.customizeActions != null) {\r\n            for (let action of this.customizeActions) {\r\n                action.MexTag = UserActivity.MEXTAG;\r\n                list.push(action);\r\n            }\r\n        }\r\n        if (this.timeLimitControl != null) {\r\n            this.timeLimitControl.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.timeLimitControl);\r\n        }\r\n        if (this.variableSettings != null) {\r\n            for (let v of this.variableSettings) {\r\n                v.MexTag = UserActivity.MEXTAG;\r\n                list.push(v);\r\n            }\r\n        }\r\n        if (this.messageNotices != null) {\r\n            for (let m of this.messageNotices) {\r\n                m.MexTag = UserActivity.MEXTAG;\r\n                list.push(m);\r\n            }\r\n        }\r\n        if (this.extendProperties != null) {\r\n            for (let e of this.extendProperties) {\r\n                e.MexTag = UserActivity.MEXTAG;\r\n                list.push(e);\r\n            }\r\n        }\r\n        if (this.approvalPivotConfig != null) {\r\n            this.approvalPivotConfig.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.approvalPivotConfig);\r\n        }\r\n        if (this.imageSettings != null) {\r\n            this.imageSettings.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.imageSettings);\r\n        }\r\n        if (this.checkConditions != null) {\r\n            for (let condition of this.checkConditions) {\r\n                condition.MexTag = UserActivity.MEXTAG;\r\n                list.push(condition);\r\n            }\r\n        }\r\n        if (this.dynamicParticipants != null) {\r\n            for (let participant of this.dynamicParticipants) {\r\n                participant.MexTag = UserActivity.MEXTAG;\r\n                list.push(participant);\r\n            }\r\n        }\r\n        if (this.otherAssignNodes != null) {\r\n            this.otherAssignNodes.MexTag = UserActivity.MEXTAG;\r\n            list.push(this.otherAssignNodes);\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement.MexTag !== UserActivity.MEXTAG)\r\n                continue;\r\n            switch (extensionElement.ClrTypeID) {\r\n                case ParticipantScheme.Clr_Type_ID:\r\n                    this.ParticipantSchemes.push(extensionElement as ParticipantScheme);\r\n                    break;\r\n                case ExecuteForm.Clr_Type_ID:\r\n                    this.ExecuteForms.push(extensionElement as ExecuteForm);\r\n                    break;\r\n                case CounterSignRule.Clr_Type_ID:\r\n                    this.CounterSignRules.push(extensionElement as CounterSignRule);\r\n                    break;\r\n                case Notification.Clr_Type_ID:\r\n                    this.NotificationList.push(extensionElement as Notification);\r\n                    break;\r\n                case ConclusionItem.Clr_Type_ID:\r\n                    this.Conclusions.push(extensionElement as ConclusionItem);\r\n                    break;\r\n                case AssignPerformerConfig.Clr_Type_ID:\r\n                    this.AssignPerformerConfig = (extensionElement as AssignPerformerConfig);\r\n                    break;\r\n                case JumpScope.Clr_Type_ID:\r\n                    this.JumpScope = (extensionElement as JumpScope);\r\n                    break;\r\n                case UrgeHandleRule.Clr_Type_ID:\r\n                    this.urgeHandleRule = (extensionElement as UrgeHandleRule);\r\n                    break;\r\n                case BackWardRule.Clr_Type_ID:\r\n                    this.BackWardRule = (extensionElement as BackWardRule);\r\n                    break;\r\n                case ParticipantSetting.Clr_Type_ID:\r\n                    this.ParticipantSetting = (extensionElement as ParticipantSetting);\r\n                    break;\r\n                case TitleExpression.Clr_Type_ID:\r\n                    this.taskTitle = (extensionElement as TitleExpression);\r\n                    break;\r\n                case CustomizeAction.Clr_Type_ID:\r\n                    this.customizeActions.push(extensionElement as CustomizeAction);\r\n                    break;\r\n                case TimeLimitControl.Clr_Type_ID:\r\n                    this.timeLimitControl = (extensionElement as TimeLimitControl);\r\n                    break;\r\n                case VariableSetting.Clr_Type_ID:\r\n                    this.variableSettings.push(extensionElement as VariableSetting);\r\n                    break;\r\n                case MessageNotice.Clr_Type_ID:\r\n                    this.messageNotices.push(extensionElement as MessageNotice);\r\n                    break;\r\n                case ExtendProperty.Clr_Type_ID:\r\n                    this.extendProperties.push(extensionElement as ExtendProperty);\r\n                    break;\r\n                case ApprovalPivotConfig.Clr_Type_ID:\r\n                    this.approvalPivotConfig = extensionElement as ApprovalPivotConfig;\r\n                    break;\r\n                case ImageSettings.Clr_Type_ID:\r\n                    this.imageSettings = extensionElement as ImageSettings;\r\n                    break;\r\n                case CheckCondition.Clr_Type_ID:\r\n                    if (this.checkConditions == null) {\r\n                        this.checkConditions = new Array();\r\n                    }\r\n                    this.checkConditions.push(extensionElement as CheckCondition)\r\n                    break;\r\n                case OtherAssignNodes.Clr_Type_ID:\r\n                    this.otherAssignNodes = extensionElement as OtherAssignNodes;\r\n                    break;\r\n                default:\r\n                    if (extensionElement instanceof Tool) {\r\n                        this.Tools.push(extensionElement as Tool);\r\n                    } else if (extensionElement instanceof ParticipantExpression) {\r\n                        this.dynamicParticipants.push(extensionElement as ParticipantExpression);\r\n                    }\r\n\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 审批活动预制通过，驳回工作项\r\n     * @param model\r\n     */\r\n    initConclusions(model: BpmnModel) {\r\n        let pass = new ConclusionItem(model);\r\n        pass.Value = 'Pass';\r\n        pass.Text = '通过';\r\n        pass.WorkFlowAction = WorkFlowAction.Forward;\r\n        pass.IsDefault = true;\r\n        pass.commentNecessary = false;\r\n        this.Conclusions.push(pass);\r\n        let back = new ConclusionItem(model);\r\n        back.Value = 'Back';\r\n        back.Text = '驳回';\r\n        back.WorkFlowAction = WorkFlowAction.Backward;\r\n        back.IsDefault = false;\r\n        back.commentNecessary = true;\r\n        this.Conclusions.push(back);\r\n\r\n        // 审批项存在反向时，初始化驳回规则\r\n        this.BackWardRule = new BackWardRule(model);\r\n    }\r\n    /**\r\n     * 初始业务活动审批项\r\n     * @param model\r\n     * @param actions\r\n     */\r\n    setBizConclusions(model: BpmnModel, actions: any[]) {\r\n        if (actions && actions.length > 0) {\r\n            for (let a of actions) {\r\n                let conclusion = new ConclusionItem(model);\r\n                conclusion.Value = a.code;\r\n                conclusion.Text = a.name;\r\n                conclusion.WorkFlowAction = a.workFlowAction;\r\n                conclusion.IsDefault = a === actions[0] ? true : false;\r\n                conclusion.commentNecessary = false;\r\n                this.Conclusions.push(conclusion);\r\n            }\r\n            if (this.Conclusions.filter(c => c.WorkFlowAction === WorkFlowAction.Backward).length > 0) {\r\n                // 审批项存在反向时，初始化驳回规则\r\n                this.BackWardRule = new BackWardRule(model);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * undo操作临时clone方法\r\n     * @returns BpmnElement\r\n     */\r\n    clone(): UserActivity {\r\n        let userActivity = new UserActivity(this.Model);\r\n        userActivity.Name = this.Name;\r\n        if (this.taskTitle) {\r\n            userActivity.taskTitle = this.taskTitle.clone();\r\n        }\r\n        const resourceRoles = this.GetResourceRoles();\r\n        if (resourceRoles && resourceRoles.length > 0) {\r\n            for (const role of resourceRoles) {\r\n                if (role instanceof UserParticipant) {\r\n                    const user = role as UserParticipant;\r\n                    const userParticipant = user.clone();\r\n                    userActivity.AddResourceRole(userParticipant);\r\n                } else if (role instanceof PositionParticipant) {\r\n                    const position = role as PositionParticipant;\r\n                    const positionParticipant = position.clone();\r\n                    userActivity.AddResourceRole(positionParticipant);\r\n                } else if (role instanceof ReportingLineParticipant) {\r\n                    const reportingLine = role as ReportingLineParticipant;\r\n                    const reportingLineParticipant = reportingLine.clone();\r\n                    userActivity.AddResourceRole(reportingLineParticipant);\r\n                } else if (role instanceof ActivityExecutorParticipant) {\r\n                    const activityExecutor = role as ActivityExecutorParticipant;\r\n                    const activityExecutorParticipant = activityExecutor.clone();\r\n                    userActivity.AddResourceRole(activityExecutorParticipant);\r\n                } else if (role instanceof ComponentParticipant) {\r\n                    const component = role as ComponentParticipant;\r\n                    const componentParticipant = component.clone();\r\n                    userActivity.AddResourceRole(componentParticipant);\r\n                } else if (role instanceof MatrixParticipant) {\r\n                    const matrix = role as MatrixParticipant;\r\n                    const matrixParticipant = matrix.clone();\r\n                    userActivity.AddResourceRole(matrixParticipant);\r\n                } else if (role instanceof OrganizationPotentialOwner) {\r\n                    const org = role as OrganizationPotentialOwner;\r\n                    const organizationPotentialOwner = org.clone();\r\n                    userActivity.AddResourceRole(organizationPotentialOwner);\r\n                } else if (role instanceof HumanPerformerImpl) {\r\n                    const performer = role as HumanPerformerImpl;\r\n                    const humanPerformerImpl = performer.clone();\r\n                    userActivity.AddResourceRole(humanPerformerImpl);\r\n                } else if (role instanceof PotentialOwnerImpl) {\r\n                    const owner = role as PotentialOwnerImpl;\r\n                    const potentialOwnerImpl = owner.clone();\r\n                    userActivity.AddResourceRole(potentialOwnerImpl);\r\n                }\r\n            }\r\n        }\r\n        userActivity.ParticipantSchemes = new Array();\r\n        if (this.ParticipantSchemes && this.ParticipantSchemes.length > 0) {\r\n            for (const s of this.ParticipantSchemes) {\r\n                const scheme = s.clone();\r\n                userActivity.ParticipantSchemes.push(scheme);\r\n            }\r\n        }\r\n        if (this.ParticipantSetting) {\r\n            userActivity.ParticipantSetting = this.ParticipantSetting.clone();\r\n        }\r\n        userActivity.AssignmentStrategy = this.AssignmentStrategy;\r\n        if (this.AssignPerformerConfig) {\r\n            userActivity.AssignPerformerConfig = this.AssignPerformerConfig.clone();\r\n        }\r\n\r\n        userActivity.PerformerNotFundExecption = this.PerformerNotFundExecption;\r\n        userActivity.Retrievable = this.Retrievable;\r\n        userActivity.IsRollback = this.IsRollback;\r\n        userActivity.SelectBranch = this.SelectBranch;\r\n        userActivity.NotifyAble = this.NotifyAble;\r\n        userActivity.AddSignFrontAble = this.AddSignFrontAble;\r\n        userActivity.AddSignBehindAble = this.AddSignBehindAble;\r\n        userActivity.Priority = this.Priority;\r\n        userActivity.ExecuteWorkItemMode = this.ExecuteWorkItemMode;\r\n        userActivity.DisplayTerminal = this.DisplayTerminal;\r\n\r\n        userActivity.SelectTargetAble = this.SelectTargetAble;\r\n        if (this.JumpScope) {\r\n            userActivity.JumpScope = this.JumpScope.clone();\r\n        }\r\n        if (this.BackWardRule) {\r\n            userActivity.BackWardRule = this.BackWardRule.clone();\r\n        }\r\n        if(this.LoopCharacteristics) {\r\n            userActivity.LoopCharacteristics = this.LoopCharacteristics.clone();\r\n        }\r\n        userActivity.transferAble = this.transferAble;\r\n        userActivity.ExecuteForms = new Array();\r\n        if (this.ExecuteForms && this.ExecuteForms.length > 0) {\r\n            for (const f of this.ExecuteForms) {\r\n                const executeForm = f.clone();\r\n                userActivity.ExecuteForms.push(executeForm);\r\n            }\r\n        }\r\n        userActivity.customizeActions = new Array();\r\n        if (this.customizeActions && this.customizeActions.length > 0) {\r\n            for (const a of this.customizeActions) {\r\n                const customizeAction = a.clone();\r\n                userActivity.customizeActions.push(customizeAction);\r\n            }\r\n        }\r\n        userActivity.CounterSignRules = new Array();\r\n        if (this.CounterSignRules && this.CounterSignRules.length > 0) {\r\n            for (const r of this.CounterSignRules) {\r\n                const counterSignRule = r.clone();\r\n                userActivity.CounterSignRules.push(counterSignRule);\r\n            }\r\n        }\r\n        userActivity.AdhocActivitySecurities = new Array();\r\n        if (this.AdhocActivitySecurities && this.AdhocActivitySecurities.length > 0) {\r\n            for (const s of this.AdhocActivitySecurities) {\r\n                userActivity.AdhocActivitySecurities.push(s);\r\n            }\r\n        }\r\n        // TODO: 这个好像暂时还没启用，赋空值\r\n        userActivity.NotificationList = new Array();\r\n\r\n        userActivity.anonymous = this.anonymous;\r\n        userActivity.anonymousText = this.anonymousText;\r\n        userActivity.BizActivityID = this.BizActivityID;\r\n        userActivity.BizActivityName = this.BizActivityName;\r\n\r\n        userActivity.Conclusions = new Array();\r\n        if (this.Conclusions && this.Conclusions.length > 0) {\r\n            for (const c of this.Conclusions) {\r\n                const conclusion = c.clone();\r\n                userActivity.Conclusions.push(conclusion);\r\n            }\r\n        }\r\n        userActivity.Tools = new Array();\r\n        if (this.Tools && this.Tools.length > 0) {\r\n            for (const t of this.Tools) {\r\n                if (t instanceof Component) {\r\n                    const c = t as Component;\r\n                    const tool = c.clone();\r\n                    userActivity.Tools.push(tool);\r\n                }\r\n            }\r\n        }\r\n        userActivity.dynamicParticipants = new Array();\r\n        if (this.dynamicParticipants && this.dynamicParticipants.length > 0) {\r\n            for (const p of this.dynamicParticipants) {\r\n                if (p instanceof OrganizationParticipantExpression) {\r\n                    const o = p as OrganizationParticipantExpression;\r\n                    const organizationParticipantExpression = o.clone();\r\n                    userActivity.dynamicParticipants.push(organizationParticipantExpression);\r\n                }\r\n            }\r\n        }\r\n        // TODO: 这个好像暂时还没启用，赋空值\r\n        userActivity.BizParameters = new Array();\r\n        if (this.timeLimitControl) {\r\n            userActivity.timeLimitControl = this.timeLimitControl.clone();\r\n        }\r\n        userActivity.variableSettings = new Array();\r\n        if (this.variableSettings && this.variableSettings.length > 0) {\r\n            for (const v of this.variableSettings) {\r\n                const variableSetting = v.clone();\r\n                userActivity.variableSettings.push(variableSetting);\r\n            }\r\n        }\r\n\r\n        userActivity.messageNotices = new Array();\r\n        if (this.messageNotices && this.messageNotices.length > 0) {\r\n            for (const m of this.messageNotices) {\r\n                const messageNotice = m.clone();\r\n                userActivity.messageNotices.push(messageNotice);\r\n            }\r\n        }\r\n        userActivity.extendProperties = new Array<ExtendProperty>();\r\n        if (this.extendProperties && this.extendProperties.length > 0) {\r\n            for (const e of this.extendProperties) {\r\n                const extendProperty = e.clone();\r\n                userActivity.extendProperties.push(extendProperty);\r\n            }\r\n        }\r\n        if (this.approvalPivotConfig) {\r\n            userActivity.approvalPivotConfig = this.approvalPivotConfig.clone();\r\n        }\r\n        if (this.urgeHandleRule) {\r\n            userActivity.urgeHandleRule = this.urgeHandleRule.clone();\r\n        }\r\n        if (this.imageSettings) {\r\n            userActivity.imageSettings = this.imageSettings.clone();\r\n        }\r\n        if (this.checkConditions && this.checkConditions.length > 0) {\r\n            userActivity.checkConditions = new Array();\r\n            for (const c of this.checkConditions) {\r\n                const condition = c.clone();\r\n                userActivity.checkConditions.push(condition);\r\n            }\r\n        }\r\n        if (this.otherAssignNodes) { \r\n            userActivity.otherAssignNodes = this.otherAssignNodes.clone();\r\n        }\r\n\r\n        return userActivity;\r\n    }\r\n\r\n    /**\r\n     * 模型校验\r\n     * @param errors 模型校验错误信息\r\n     */\r\n    Validate(errors: ValidationError[]): void {\r\n        // TODO: 需要添加自定义校验信息\r\n        super.Validate(errors);\r\n    }\r\n\r\n}\r\n\r\nBpmnModelHelper.RegisterElementType(new UserActivity(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, CustomType } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class CDTSchemaType extends CustomType {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    NewInstance(): CDTSchemaType {\r\n        return new CDTSchemaType(this.Model);\r\n    }\r\n\r\n    static Clr_Type_ID: string = \"wf.CDTSchemaType\";\r\n    ClrTypeID: string = CDTSchemaType.Clr_Type_ID;\r\n\r\n    //SchemaId对应COId/CDTId\r\n    SchemaId: string;\r\n\r\n    //对应Be的MetadataId\r\n    MetadataId: string;\r\n\r\n    //取数构件Id\r\n    ComponentId: string;\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.MetadataId = null;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"SchemaId\", this.SchemaId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"MetadataId\", this.MetadataId);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"ComponentId\", this.ComponentId);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.SchemaId = obj.SchemaId;\r\n        this.MetadataId = obj.MetadataId;\r\n        this.ComponentId = obj.ComponentId;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new CDTSchemaType(new BpmnModel()));","export enum ParameterMode {\r\n    /// <summary>\r\n    /// 传入参数\r\n    /// </summary>\r\n    IN = 'IN',\r\n    /// <summary>\r\n    /// 传出参数\r\n    /// </summary>\r\n    OUT = 'OUT',\r\n    /// <summary>\r\n    /// 传入传出参数\r\n    /// </summary>\r\n    INOUT = 'INOUT'\r\n}","import { BpmnModel, BpmnModelHelper, MexElement, DataType } from \"@edp-pmf/bpmn-model\";\r\nimport { ParameterMode } from \"./ParameterMode\";\r\n\r\nexport class FormalParameter extends MexElement {\r\n    private index: number;\r\n\r\n    constructor(model: BpmnModel, id?: string, code?: string, name?: string, desc?: string, index?: number, datatype?: DataType, mode?: ParameterMode) {\r\n        super(model);\r\n        this.Id = id || '';\r\n        this.Code = code || '';\r\n        this.Name = name || '';\r\n        this.Description = desc || '';\r\n        this.index = index || 0;\r\n        this.DataType = datatype || new DataType(model);\r\n        this.Mode = mode || ParameterMode.IN;\r\n    }\r\n\r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n    Description: string;\r\n\r\n    get Index(): number {\r\n        return this.index;\r\n    }\r\n    set Index(index: number) {\r\n        this.index = index;\r\n    }\r\n\r\n    DataType: DataType;\r\n    Mode: ParameterMode;\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Id\", this.Id);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Code\", this.Code);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Name\", this.Name);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Description\", this.Description);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"index\", this.index);\r\n        BpmnModelHelper.SetAttributeValue(obj, \"DataType\", this.DataType.ConvertToJsonObject());\r\n        BpmnModelHelper.SetAttributeValue(obj, \"Mode\", this.Mode);\r\n\r\n        return obj;\r\n    }\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.Id = obj.Id;\r\n        this.Name = obj.Name;\r\n        this.index = obj.index;\r\n        this.Description = obj.Description;\r\n        this.Code = obj.Code;\r\n\r\n        let type: DataType = new DataType(this.Model);\r\n        type.LoadFromJsonObject(obj.DataType);\r\n        this.DataType = type;\r\n\r\n        this.Mode = (obj.Mode as ParameterMode);\r\n    }\r\n\r\n    clone(): FormalParameter {\r\n        const f = new FormalParameter(this.Model);\r\n\r\n        return f\r\n    }\r\n}","import { BpmnModel, BpmnModelHelper, BpmnModelJsonHelper, StartEvent, ValidationError } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class AifCreationBillActivity extends StartEvent {\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n        this.aifProcessCode = null;\r\n        this.voNodePath = null;\r\n        this.isRelied = true;\r\n    }\r\n    static Clr_Type_ID: string = \"wf.AifCreationBillActivity\";\r\n    ClrTypeID: string = AifCreationBillActivity.Clr_Type_ID;\r\n    aifProcessCode: string = null;\r\n    voNodePath: string = null;\r\n    isRelied: boolean = true;\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n        this.aifProcessCode = null;\r\n        this.voNodePath = null;\r\n        this.isRelied = true;\r\n    }\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, 'aifProcessCode', this.aifProcessCode);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'voNodePath', this.voNodePath);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'isRelied', this.isRelied);\r\n        return obj;\r\n    }\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n        this.aifProcessCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"aifProcessCode\");\r\n        this.voNodePath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"voNodePath\");\r\n        this.isRelied = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"isRelied\");\r\n    }\r\n    NewInstance(): AifCreationBillActivity {\r\n        return new AifCreationBillActivity(this.Model);\r\n    }\r\n    /**\r\n    * 模型校验\r\n    * @param errors 模型校验错误信息\r\n    */\r\n    Validate(errors: ValidationError[]): void {\r\n        // TODO: 需要添加自定义校验信息\r\n        super.Validate(errors);\r\n    }\r\n\r\n    clone(): AifCreationBillActivity {\r\n        const creationAct = new AifCreationBillActivity(this.Model);\r\n        creationAct.Name = this.Name;\r\n        creationAct.aifProcessCode = null;\r\n        if (this.aifProcessCode) {\r\n            creationAct.aifProcessCode = this.aifProcessCode;\r\n        }\r\n        creationAct.voNodePath = null;\r\n        if (this.voNodePath) {\r\n            creationAct.voNodePath = this.voNodePath;\r\n        }\r\n        creationAct.isRelied = this.isRelied;\r\n        return creationAct;\r\n    }\r\n}\r\n\r\nBpmnModelHelper.RegisterElementType(new AifCreationBillActivity(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ServiceTask, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { ExtendProperty } from \"./ExtendProperty\";\r\nimport { Component } from \"./extension/tool/Component\";\r\nimport { Tool } from \"./extension/tool/Tool\";\r\nimport { VariableSetting } from \"./VariableSetting\";\r\n\r\nexport class AutoActivity extends ServiceTask {\r\n    static Clr_Type_ID: string = \"wf.AutoActivity\";\r\n    ClrTypeID: string = AutoActivity.Clr_Type_ID;\r\n    private static MEXTAG: string = 'wf.AutoActivity';\r\n\r\n    tools: Array<Tool>;\r\n    variableSettings: Array<VariableSetting>;\r\n    extendProperties: Array<ExtendProperty>;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.tools = new Array<Tool>();\r\n        this.variableSettings = new Array();\r\n        this.extendProperties = new Array<ExtendProperty>();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.tools != null) {\r\n            for (const item of this.tools) {\r\n                item.MexTag = AutoActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        if (this.variableSettings != null && this.variableSettings.length > 0) {\r\n            for (const item of this.variableSettings) {\r\n                item.MexTag = AutoActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        if (this.extendProperties != null && this.extendProperties.length > 0) {\r\n            for (const item of this.extendProperties) {\r\n                item.MexTag = AutoActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement.MexTag !== AutoActivity.MEXTAG)\r\n                continue;\r\n            switch (extensionElement.ClrTypeID) {\r\n                case VariableSetting.Clr_Type_ID:\r\n                    this.variableSettings.push(extensionElement as VariableSetting);\r\n                    break;\r\n                case ExtendProperty.Clr_Type_ID:\r\n                    this.extendProperties.push(extensionElement as ExtendProperty);\r\n                    break;\r\n                default:\r\n                    if (extensionElement instanceof Tool) {\r\n                        this.tools.push(extensionElement as Tool);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    NewInstance(): AutoActivity {\r\n        return new AutoActivity(this.Model);\r\n    }\r\n    clone(): AutoActivity {\r\n        const autoActivity = new AutoActivity(this.Model);\r\n        autoActivity.Name = this.Name;\r\n\r\n        autoActivity.tools = new Array();\r\n        if (this.tools && this.tools.length > 0) {\r\n            for (const t of this.tools) {\r\n                if (t instanceof Component) {\r\n                    const c = t as Component;\r\n                    const tool = c.clone();\r\n                    autoActivity.tools.push(tool);\r\n                }\r\n            }\r\n        }\r\n        autoActivity.variableSettings = new Array();\r\n        if (this.variableSettings && this.variableSettings.length > 0) {\r\n            for (const v of this.variableSettings) {\r\n                const variableSetting = v.clone();\r\n                autoActivity.variableSettings.push(variableSetting);\r\n            }\r\n        }\r\n        autoActivity.extendProperties = new Array<ExtendProperty>();\r\n        if (this.extendProperties && this.extendProperties.length > 0) {\r\n            for (const e of this.extendProperties) {\r\n                const extendProperty = e.clone();\r\n                autoActivity.extendProperties.push(extendProperty);\r\n            }\r\n        }\r\n        return autoActivity;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new AutoActivity(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, BpmnModelJsonHelper, ExtensionElement, CallActivity, SubProcessDataAssociations, MultiInstanceLoopCharacteristics } from \"@edp-pmf/bpmn-model\";\r\nimport { BackWardRule } from \"./extension/completion-strategy/BackWardRule\";\r\nimport { VariableSetting } from \"./VariableSetting\";\r\n\r\nexport class CallActivitySubProcess extends CallActivity {\r\n    static Clr_Type_ID: string = \"wf.CallActivitySubProcess\";\r\n    ClrTypeID: string = CallActivitySubProcess.Clr_Type_ID;\r\n    private static MEXTAG: string = \"wf.CallActivitySubProcess\";\r\n\r\n    calledBizDefKey: string;\r\n    bizDataId: string;\r\n    inheritVariables: boolean;\r\n    inheritBizDataId: boolean;\r\n\r\n    backWardRule: BackWardRule;\r\n\r\n    variableSettings: Array<VariableSetting>;\r\n    aifProcessCode: string = null;\r\n    useAutoCreationData: boolean = false;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n        this.SubProcessDataAssociations = new SubProcessDataAssociations(model);\r\n        this.inheritVariables = true;\r\n        this.inheritBizDataId = true;\r\n        this.backWardRule = new BackWardRule(model);\r\n        this.LoopCharacteristics = new MultiInstanceLoopCharacteristics(model);\r\n        this.aifProcessCode = null;\r\n        this.useAutoCreationData = false;\r\n    }\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.SubProcessDataAssociations = new SubProcessDataAssociations(this.Model);\r\n        this.inheritVariables = true;\r\n        this.inheritBizDataId = true;\r\n        this.variableSettings = new Array();\r\n        this.aifProcessCode = null;\r\n        this.useAutoCreationData = false;\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelHelper.SetAttributeValue(obj, 'CalledBizDefKey', this.calledBizDefKey);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'BizDataId', this.bizDataId);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'InheritVariables', this.inheritVariables);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'InheritBizDataId', this.inheritBizDataId);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'aifProcessCode', this.aifProcessCode);\r\n        BpmnModelHelper.SetAttributeValue(obj, 'useAutoCreationData', this.useAutoCreationData);\r\n        return obj;\r\n    }\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.calledBizDefKey = obj.CalledBizDefKey;\r\n        this.bizDataId = obj.BizDataId;\r\n        this.inheritVariables = obj.InheritVariables;\r\n        this.inheritBizDataId = obj.InheritBizDataId;\r\n        this.aifProcessCode = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"aifProcessCode\");\r\n        this.useAutoCreationData = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"useAutoCreationData\");\r\n\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.backWardRule != null) {\r\n            this.backWardRule.MexTag = CallActivitySubProcess.MEXTAG;\r\n            list.push(this.backWardRule);\r\n        }\r\n        if (this.variableSettings != null && this.variableSettings.length > 0) {\r\n            for (const item of this.variableSettings) {\r\n                item.MexTag = CallActivitySubProcess.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement.MexTag !== CallActivitySubProcess.MEXTAG)\r\n                continue;\r\n            switch (extensionElement.ClrTypeID) {\r\n                case VariableSetting.Clr_Type_ID:\r\n                    this.variableSettings.push(extensionElement as VariableSetting);;\r\n                    break;\r\n                case BackWardRule.Clr_Type_ID:\r\n                    this.backWardRule = (extensionElement as BackWardRule);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    NewInstance(): CallActivitySubProcess {\r\n        return new CallActivitySubProcess(this.Model);\r\n    }\r\n\r\n    clone(): CallActivitySubProcess {\r\n        const callActivitySubProcess = new CallActivitySubProcess(this.Model);\r\n        callActivitySubProcess.Name = this.Name;\r\n        callActivitySubProcess.IsForCompensation = this.IsForCompensation;\r\n        callActivitySubProcess.CalledElement = this.CalledElement;\r\n        callActivitySubProcess.calledBizDefKey = this.calledBizDefKey;\r\n        callActivitySubProcess.bizDataId = this.bizDataId;\r\n        callActivitySubProcess.inheritBizDataId = this.inheritBizDataId;\r\n        callActivitySubProcess.inheritVariables = this.inheritVariables;\r\n\r\n        callActivitySubProcess.variableSettings = new Array();\r\n        if (this.variableSettings && this.variableSettings.length > 0) {\r\n            for (const v of this.variableSettings) {\r\n                const variableSetting = v.clone();\r\n                callActivitySubProcess.variableSettings.push(variableSetting);\r\n            }\r\n        }\r\n\r\n        if (this.backWardRule) {\r\n            callActivitySubProcess.backWardRule = this.backWardRule.clone();\r\n        }\r\n\r\n        if(this.LoopCharacteristics) {\r\n            callActivitySubProcess.LoopCharacteristics = this.LoopCharacteristics.clone();\r\n        }\r\n\r\n        callActivitySubProcess.aifProcessCode = null;\r\n        if (this.aifProcessCode) {\r\n            callActivitySubProcess.aifProcessCode = this.aifProcessCode;\r\n        }\r\n        callActivitySubProcess.useAutoCreationData = this.useAutoCreationData;\r\n\r\n        return callActivitySubProcess;\r\n    }\r\n\r\n}\r\nBpmnModelHelper.RegisterElementType(new CallActivitySubProcess(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionMethod, SignalEventDefinition } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class SignalEventDefinitionImpl extends SignalEventDefinition {\r\n    static Clr_Type_ID: string = \"wf.SignalEventDefinitionImpl\";\r\n    readonly ClrTypeID: string = SignalEventDefinitionImpl.Clr_Type_ID;\r\n\r\n    name: string;\r\n    triggerAction: string;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n        ExtensionMethod.SetAttributeValue(obj, \"Name\", this.name);\r\n        ExtensionMethod.SetAttributeValue(obj, \"TriggerAction\", this.triggerAction);\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.name = ExtensionMethod.GetAttributeValue4String(obj, \"Name\");\r\n        this.triggerAction = ExtensionMethod.GetAttributeValue4String(obj, \"TriggerAction\");\r\n    }\r\n\r\n    NewInstance(): SignalEventDefinitionImpl {\r\n        return new SignalEventDefinitionImpl(this.Model);\r\n    }\r\n\r\n    clone(): SignalEventDefinitionImpl {\r\n        const signalEventDefinitionImpl = new SignalEventDefinitionImpl(this.Model);\r\n        signalEventDefinitionImpl.name = this.name;\r\n        signalEventDefinitionImpl.triggerAction = this.triggerAction;\r\n        signalEventDefinitionImpl.SignalExpression = this.SignalExpression;\r\n        signalEventDefinitionImpl.SignalRef = this.SignalRef;\r\n        signalEventDefinitionImpl.Async = this.Async;\r\n\r\n        return signalEventDefinitionImpl;\r\n    }\r\n\r\n}\r\nBpmnModelHelper.RegisterElementType(new SignalEventDefinitionImpl(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, IntermediateCatchEvent, ExtensionMethod, ValidationError } from \"@edp-pmf/bpmn-model\";\r\nimport { BackWardRule } from \"./extension/completion-strategy/BackWardRule\";\r\nimport { SignalEventDefinitionImpl } from \"./SignalEventDefinitionImpl\";\r\nimport { VariableSetting } from \"./VariableSetting\";\r\n\r\nexport class IntermediateCatchEventImpl extends IntermediateCatchEvent {\r\n    static Clr_Type_ID: string = \"wf.IntermediateCatchEventImpl\";\r\n    ClrTypeID: string = IntermediateCatchEventImpl.Clr_Type_ID;\r\n    private static MEXTAG: string = \"wf.IntermediateCatchEventImpl\";\r\n\r\n    backWardRule: BackWardRule;\r\n    variableSettings: Array<VariableSetting>;\r\n\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.variableSettings = new Array();\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.backWardRule != null) {\r\n            this.backWardRule.MexTag = IntermediateCatchEventImpl.MEXTAG;\r\n            list.push(this.backWardRule);\r\n        }\r\n        if (this.variableSettings != null && this.variableSettings.length > 0) {\r\n            for (const item of this.variableSettings) {\r\n                item.MexTag = IntermediateCatchEventImpl.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement.MexTag !== IntermediateCatchEventImpl.MEXTAG)\r\n                continue;\r\n            switch (extensionElement.ClrTypeID) {\r\n                case BackWardRule.Clr_Type_ID:\r\n                    this.backWardRule = (extensionElement as BackWardRule);\r\n                    break;\r\n                case VariableSetting.Clr_Type_ID:\r\n                    this.variableSettings.push(extensionElement as VariableSetting);;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    initEventDefinitions() {\r\n\r\n        const passEvent = new SignalEventDefinitionImpl(this.Model);\r\n        passEvent.name = '通过';\r\n        passEvent.triggerAction = 'Pass'\r\n        passEvent.Async = false;\r\n        passEvent.SignalRef = 'Pass';\r\n        this.EventDefinitions.push(passEvent);\r\n        const backEvent = new SignalEventDefinitionImpl(this.Model);\r\n        backEvent.name = '驳回';\r\n        backEvent.triggerAction = 'Back'\r\n        backEvent.Async = false;\r\n        backEvent.SignalRef = 'Back';\r\n        this.EventDefinitions.push(backEvent);\r\n        const abortEvent = new SignalEventDefinitionImpl(this.Model);\r\n        abortEvent.name = '终止';\r\n        abortEvent.triggerAction = 'Abort'\r\n        abortEvent.Async = false;\r\n        abortEvent.SignalRef = 'Abort';\r\n        this.EventDefinitions.push(abortEvent);\r\n\r\n        // 初始化驳回规则\r\n        this.backWardRule = new BackWardRule(this.Model);\r\n    }\r\n\r\n\r\n    NewInstance(): IntermediateCatchEventImpl {\r\n        return new IntermediateCatchEventImpl(this.Model);\r\n    }\r\n\r\n    clone(): IntermediateCatchEventImpl {\r\n        const intermediateCatchEventImpl = new IntermediateCatchEventImpl(this.Model);\r\n        intermediateCatchEventImpl.Name = this.Name;\r\n\r\n        intermediateCatchEventImpl.variableSettings = new Array();\r\n        if (this.variableSettings && this.variableSettings.length > 0) {\r\n            for (const v of this.variableSettings) {\r\n                const variableSetting = v.clone();\r\n                intermediateCatchEventImpl.variableSettings.push(variableSetting);\r\n            }\r\n        }\r\n\r\n        if (this.backWardRule) {\r\n            intermediateCatchEventImpl.backWardRule = this.backWardRule.clone();\r\n        }\r\n\r\n        intermediateCatchEventImpl.EventDefinitions = new Array();\r\n        if (this.EventDefinitions && this.EventDefinitions.length > 0) {\r\n            for (const e of this.EventDefinitions) {\r\n                const signalEventDefinitionImpl = e as SignalEventDefinitionImpl;\r\n                const eventDefinition = signalEventDefinitionImpl.clone();\r\n\r\n                intermediateCatchEventImpl.EventDefinitions.push(eventDefinition);\r\n            }\r\n        }\r\n\r\n\r\n        return intermediateCatchEventImpl;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new IntermediateCatchEventImpl(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, ServiceTask, ExtensionMethod, ValidationError } from \"@edp-pmf/bpmn-model\";\r\nimport { MessageNotice } from \"./MessageNotice\";\r\nimport { VariableSetting } from \"./VariableSetting\";\r\n\r\nexport class MessageActivity extends ServiceTask {\r\n    static Clr_Type_ID: string = \"wf.MessageActivity\";\r\n    ClrTypeID: string = MessageActivity.Clr_Type_ID;\r\n    private static MEXTAG: string = 'wf.MessageActivity';\r\n\r\n    messageNotices: Array<MessageNotice>;\r\n    variableSettings: Array<VariableSetting>;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    ResetBeforeLoadFrom() {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.messageNotices = new Array<MessageNotice>();\r\n        this.variableSettings = new Array();\r\n    }\r\n\r\n    ConvertToJsonObject(): any {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        return obj;\r\n    }\r\n\r\n    LoadFromJsonObject(obj: any) {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.messageNotices != null) {\r\n            for (const item of this.messageNotices) {\r\n                item.MexTag = MessageActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        if (this.variableSettings != null && this.variableSettings.length > 0) {\r\n            for (const item of this.variableSettings) {\r\n                item.MexTag = MessageActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement.MexTag !== MessageActivity.MEXTAG)\r\n                continue;\r\n            switch (extensionElement.ClrTypeID) {\r\n                case VariableSetting.Clr_Type_ID:\r\n                    this.variableSettings.push(extensionElement as VariableSetting);;\r\n                    break;\r\n                default:\r\n                    if (extensionElement instanceof MessageNotice) {\r\n                        this.messageNotices.push(extensionElement as MessageNotice);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    NewInstance(): MessageActivity {\r\n        return new MessageActivity(this.Model);\r\n    }\r\n    clone(): MessageActivity {\r\n        const messageActivity = new MessageActivity(this.Model);\r\n        messageActivity.Name = this.Name;\r\n        messageActivity.variableSettings = new Array();\r\n        if (this.variableSettings && this.variableSettings.length > 0) {\r\n            for (const v of this.variableSettings) {\r\n                const variableSetting = v.clone();\r\n                messageActivity.variableSettings.push(variableSetting);\r\n            }\r\n        }\r\n        messageActivity.messageNotices = new Array();\r\n        if (this.messageNotices && this.messageNotices.length > 0) {\r\n            for (const m of this.messageNotices) {\r\n                const messageNotice = m.clone();\r\n                messageActivity.messageNotices.push(messageNotice);\r\n            }\r\n        }\r\n\r\n        return messageActivity;\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new MessageActivity(new BpmnModel()));","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod, ValidationError, UserTask } from \"@edp-pmf/bpmn-model\";\r\nimport { ExtendProperty } from \"./ExtendProperty\";\r\nimport { ExecuteForm } from \"./extension/ExecuteForm\";\r\nimport { HumanPerformerImpl } from \"./HumanPerformerImpl\";\r\nimport { MessageNotice } from \"./MessageNotice\";\r\nimport { OrganizationPotentialOwner } from \"./OrganizationPotentialOwner\";\r\nimport { ActivityExecutorParticipant } from \"./participants/old/ActivityExecutorParticipant\";\r\nimport { ComponentParticipant } from \"./participants/old/ComponentParticipant\";\r\nimport { MatrixParticipant } from \"./participants/old/MatrixParticipant\";\r\nimport { Participant } from \"./participants/old/Participant\";\r\nimport { PositionParticipant } from \"./participants/old/PositionParticipant\";\r\nimport { ReportingLineParticipant } from \"./participants/old/ReportingLineParticipant\";\r\nimport { UserParticipant } from \"./participants/old/UserParticipant\";\r\nimport { OrganizationParticipantExpression } from \"./participants/OrganizationParticipantExpression\";\r\nimport { ParticipantExpression } from \"./participants/ParticipantExpression\";\r\nimport { PotentialOwnerImpl } from \"./PotentialOwnerImpl\";\r\n\r\nexport class NotifyActivity extends UserTask {\r\n    static Clr_Type_ID: string = \"wf.NotifyActivity\";\r\n    ClrTypeID: string = NotifyActivity.Clr_Type_ID;\r\n    protected static MEXTAG: string = \"wf.NotifyActivity\";\r\n\r\n    participants: Array<Participant>;\r\n    messageNotices: Array<MessageNotice>;\r\n    executeForms: Array<ExecuteForm>;\r\n    extendProperties: Array<ExtendProperty>;\r\n    dynamicParticipants: Array<ParticipantExpression> = new Array();\r\n    notifyAble: boolean;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    /**\r\n     * 模型校验\r\n     * @param errors 模型校验错误信息\r\n     */\r\n    Validate(errors: ValidationError[]): void {\r\n        // TODO: 需要添加自定义校验信息\r\n        super.Validate(errors);\r\n    }\r\n\r\n    clone(): NotifyActivity {\r\n        let notifyActivity = new NotifyActivity(this.Model);\r\n        notifyActivity.Name = this.Name;\r\n        const resourceRoles = this.GetResourceRoles();\r\n        if (resourceRoles && resourceRoles.length > 0) {\r\n            for (const role of resourceRoles) {\r\n                if (role instanceof UserParticipant) {\r\n                    const user = role as UserParticipant;\r\n                    const userParticipant = user.clone();\r\n                    notifyActivity.AddResourceRole(userParticipant);\r\n                } else if (role instanceof PositionParticipant) {\r\n                    const position = role as PositionParticipant;\r\n                    const positionParticipant = position.clone();\r\n                    notifyActivity.AddResourceRole(positionParticipant);\r\n                } else if (role instanceof ReportingLineParticipant) {\r\n                    const reportingLine = role as ReportingLineParticipant;\r\n                    const reportingLineParticipant = reportingLine.clone();\r\n                    notifyActivity.AddResourceRole(reportingLineParticipant);\r\n                } else if (role instanceof ActivityExecutorParticipant) {\r\n                    const activityExecutor = role as ActivityExecutorParticipant;\r\n                    const activityExecutorParticipant = activityExecutor.clone();\r\n                    notifyActivity.AddResourceRole(activityExecutorParticipant);\r\n                } else if (role instanceof ComponentParticipant) {\r\n                    const component = role as ComponentParticipant;\r\n                    const componentParticipant = component.clone();\r\n                    notifyActivity.AddResourceRole(componentParticipant);\r\n                } else if (role instanceof MatrixParticipant) {\r\n                    const matrix = role as MatrixParticipant;\r\n                    const matrixParticipant = matrix.clone();\r\n                    notifyActivity.AddResourceRole(matrixParticipant);\r\n                } else if (role instanceof OrganizationPotentialOwner) {\r\n                    const org = role as OrganizationPotentialOwner;\r\n                    const organizationPotentialOwner = org.clone();\r\n                    notifyActivity.AddResourceRole(organizationPotentialOwner);\r\n                } else if (role instanceof HumanPerformerImpl) {\r\n                    const performer = role as HumanPerformerImpl;\r\n                    const humanPerformerImpl = performer.clone();\r\n                    notifyActivity.AddResourceRole(humanPerformerImpl);\r\n                } else if (role instanceof PotentialOwnerImpl) {\r\n                    const owner = role as PotentialOwnerImpl;\r\n                    const potentialOwnerImpl = owner.clone();\r\n                    notifyActivity.AddResourceRole(potentialOwnerImpl);\r\n                }\r\n            }\r\n        }\r\n        notifyActivity.executeForms = new Array();\r\n        if (this.executeForms && this.executeForms.length > 0) {\r\n            for (const f of this.executeForms) {\r\n                const executeForm = f.clone();\r\n                notifyActivity.executeForms.push(executeForm);\r\n            }\r\n        }\r\n        notifyActivity.extendProperties = new Array<ExtendProperty>();\r\n        if (this.extendProperties && this.extendProperties.length > 0) {\r\n            for (const e of this.extendProperties) {\r\n                const extendProperty = e.clone();\r\n                notifyActivity.extendProperties.push(extendProperty);\r\n            }\r\n        }\r\n        notifyActivity.messageNotices = new Array();\r\n        if (this.messageNotices && this.messageNotices.length > 0) {\r\n            for (const m of this.messageNotices) {\r\n                const messageNotice = m.clone();\r\n                notifyActivity.messageNotices.push(messageNotice);\r\n            }\r\n        }\r\n        notifyActivity.notifyAble = this.notifyAble;\r\n        notifyActivity.dynamicParticipants = new Array();\r\n        if (this.dynamicParticipants && this.dynamicParticipants.length > 0) {\r\n            for (const p of this.dynamicParticipants) {\r\n                if (p instanceof OrganizationParticipantExpression) {\r\n                    const o = p as OrganizationParticipantExpression;\r\n                    const organizationParticipantExpression = o.clone();\r\n                    notifyActivity.dynamicParticipants.push(organizationParticipantExpression);\r\n                }\r\n            }\r\n        }\r\n\r\n        return notifyActivity;\r\n    }\r\n\r\n    NewInstance(): NotifyActivity {\r\n        return new NotifyActivity(this.Model);\r\n    }\r\n\r\n    ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n        this.participants = new Array();\r\n        this.messageNotices = new Array();\r\n        this.executeForms = new Array();\r\n        this.extendProperties = new Array<ExtendProperty>();\r\n        this.notifyAble = false;\r\n        this.dynamicParticipants = new Array();\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        // this.beforeSerialize();\r\n        let obj = super.ConvertToJsonObject();\r\n        BpmnModelHelper.SetAttributeValue(obj, \"NotifyAble\", this.notifyAble);\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: any): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.notifyAble = ExtensionMethod.GetAttributeValue4Boolean(obj, \"NotifyAble\");;\r\n        // this.afterDeserialize();\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list: ExtensionElement[] = super.GetExtensionElements4ConvertTo();\r\n\r\n        if (this.messageNotices != null) {\r\n            for (let item of this.messageNotices) {\r\n                item.MexTag = NotifyActivity.MEXTAG;\r\n                list.push(item);\r\n            }\r\n        }\r\n        if (this.executeForms != null) {\r\n            for (let form of this.executeForms) {\r\n                form.MexTag = NotifyActivity.MEXTAG;\r\n                list.push(form);\r\n            }\r\n        }\r\n        if (this.extendProperties != null) {\r\n            for (let extendProperty of this.extendProperties) {\r\n                extendProperty.MexTag = NotifyActivity.MEXTAG;\r\n                list.push(extendProperty);\r\n            }\r\n        }\r\n        if (this.dynamicParticipants != null) {\r\n            for (let participant of this.dynamicParticipants) {\r\n                participant.MexTag = NotifyActivity.MEXTAG;\r\n                list.push(participant);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]): void {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n        for (let extensionElement of extensionElements) {\r\n            if (NotifyActivity.MEXTAG != extensionElement.MexTag) {\r\n                continue;\r\n            }\r\n            switch (extensionElement.ClrTypeID) {\r\n                case MessageNotice.Clr_Type_ID:\r\n                    this.messageNotices.push(extensionElement as MessageNotice);\r\n                    break;\r\n                case ExecuteForm.Clr_Type_ID:\r\n                    this.executeForms.push(extensionElement as ExecuteForm);\r\n                    break;\r\n                case ExtendProperty.Clr_Type_ID:\r\n                    this.extendProperties.push(extensionElement as ExtendProperty);\r\n                    break;\r\n                default:\r\n                    if (extensionElement instanceof ParticipantExpression) {\r\n                        this.dynamicParticipants.push(extensionElement as ParticipantExpression);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected beforeSerialize(): void {\r\n        let roles = this.GetResourceRoles();\r\n        if (roles != null && roles.length != 0) {\r\n            for (let role of roles) {\r\n                super.RemoveResourceRole(role.Id);\r\n            }\r\n        }\r\n        if (this.participants != null && this.participants.length != 0) {\r\n            for (let participant of this.participants) {\r\n                this.AddResourceRole(participant);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected afterDeserialize(): void {\r\n        let roles = this.GetResourceRoles();\r\n        if (roles == null || roles.length == 0) {\r\n            return;\r\n        }\r\n        for (let role of roles) {\r\n            if (role instanceof Participant) {\r\n                this.participants.push(role);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nBpmnModelHelper.RegisterElementType(new NotifyActivity(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod, ValidationError, UserTask } from \"@edp-pmf/bpmn-model\";\r\nimport { BackWardRule } from \"./extension/completion-strategy/BackWardRule\";\r\nimport { ConclusionItem } from \"./extension/completion-strategy/ConclusionItem\";\r\nimport { WorkFlowAction } from \"./extension/completion-strategy/WorkFlowAction\";\r\nimport { Component } from \"./extension/tool/Component\";\r\nimport { UserActivity } from \"./flow-node/UserActivity\";\r\nimport { OrganizationPotentialOwner } from \"./OrganizationPotentialOwner\";\r\nimport { ActivityExecutorParticipant } from \"./participants/old/ActivityExecutorParticipant\";\r\nimport { ComponentParticipant } from \"./participants/old/ComponentParticipant\";\r\nimport { MatrixParticipant } from \"./participants/old/MatrixParticipant\";\r\nimport { PositionParticipant } from \"./participants/old/PositionParticipant\";\r\nimport { ReportingLineParticipant } from \"./participants/old/ReportingLineParticipant\";\r\nimport { UserParticipant } from \"./participants/old/UserParticipant\";\r\nimport { PotentialOwnerImpl } from \"./PotentialOwnerImpl\";\r\nimport { HumanPerformerImpl } from \"./HumanPerformerImpl\";\r\n\r\nexport class OperationActivity extends UserActivity {\r\n  static Clr_Type_ID: string = \"wf.OperationActivity\";\r\n  ClrTypeID: string = OperationActivity.Clr_Type_ID;\r\n  protected static MEXTAG: string = 'wf.OperationActivity';\r\n\r\n  constructor(model: BpmnModel) {\r\n    super(model);\r\n  }\r\n\r\n  initConclusions(model: BpmnModel) {\r\n    let submit = new ConclusionItem(model);\r\n    submit.Value = 'Send';\r\n    submit.Text = '发送';\r\n    submit.WorkFlowAction = WorkFlowAction.Forward;\r\n    submit.IsDefault = true;\r\n    submit.commentNecessary = false;\r\n    this.Conclusions.push(submit);\r\n\r\n    let back = new ConclusionItem(model);\r\n    back.Value = 'Back';\r\n    back.Text = '驳回';\r\n    back.WorkFlowAction = WorkFlowAction.Backward;\r\n    back.IsDefault = false;\r\n    back.commentNecessary = true;\r\n    this.Conclusions.push(back);\r\n\r\n    // 审批项存在反向时，初始化驳回规则\r\n    this.BackWardRule = new BackWardRule(model);\r\n  }\r\n\r\n  NewInstance(): OperationActivity {\r\n    return new OperationActivity(this.Model);\r\n  }\r\n\r\n  clone(): OperationActivity {\r\n    const operationActivity = new OperationActivity(this.Model);\r\n    operationActivity.Name = this.Name;\r\n    if (this.taskTitle) {\r\n      operationActivity.taskTitle = this.taskTitle.clone();\r\n    }\r\n    const resourceRoles = this.GetResourceRoles();\r\n    if (resourceRoles && resourceRoles.length > 0) {\r\n      for (const role of resourceRoles) {\r\n        if (role instanceof UserParticipant) {\r\n          const user = role as UserParticipant;\r\n          const userParticipant = user.clone();\r\n          operationActivity.AddResourceRole(userParticipant);\r\n        } else if (role instanceof PositionParticipant) {\r\n          const position = role as PositionParticipant;\r\n          const positionParticipant = position.clone();\r\n          operationActivity.AddResourceRole(positionParticipant);\r\n        } else if (role instanceof ReportingLineParticipant) {\r\n          const reportingLine = role as ReportingLineParticipant;\r\n          const reportingLineParticipant = reportingLine.clone();\r\n          operationActivity.AddResourceRole(reportingLineParticipant);\r\n        } else if (role instanceof ActivityExecutorParticipant) {\r\n          const activityExecutor = role as ActivityExecutorParticipant;\r\n          const activityExecutorParticipant = activityExecutor.clone();\r\n          operationActivity.AddResourceRole(activityExecutorParticipant);\r\n        } else if (role instanceof ComponentParticipant) {\r\n          const component = role as ComponentParticipant;\r\n          const componentParticipant = component.clone();\r\n          operationActivity.AddResourceRole(componentParticipant);\r\n        } else if (role instanceof MatrixParticipant) {\r\n          const matrix = role as MatrixParticipant;\r\n          const matrixParticipant = matrix.clone();\r\n          operationActivity.AddResourceRole(matrixParticipant);\r\n        } else if (role instanceof OrganizationPotentialOwner) {\r\n          const org = role as OrganizationPotentialOwner;\r\n          const organizationPotentialOwner = org.clone();\r\n          operationActivity.AddResourceRole(organizationPotentialOwner);\r\n          // 2023-5-31 复制人工操作节点没带上参与者 发现是缺少HumanPerformerImpl和PotentialOwnerImpl\r\n        } else if (role instanceof HumanPerformerImpl) {\r\n          const performer = role as HumanPerformerImpl;\r\n          const humanPerformerImpl = performer.clone();\r\n          operationActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (role instanceof PotentialOwnerImpl) {\r\n          const owner = role as PotentialOwnerImpl;\r\n          const potentialOwnerImpl = owner.clone();\r\n          operationActivity.AddResourceRole(potentialOwnerImpl);\r\n        }\r\n      }\r\n    }\r\n    operationActivity.ParticipantSchemes = new Array();\r\n    if (this.ParticipantSchemes && this.ParticipantSchemes.length > 0) {\r\n      for (const s of this.ParticipantSchemes) {\r\n        const scheme = s.clone();\r\n        operationActivity.ParticipantSchemes.push(scheme);\r\n      }\r\n    }\r\n    if (this.ParticipantSetting) {\r\n      operationActivity.ParticipantSetting = this.ParticipantSetting.clone();\r\n    }\r\n    operationActivity.AssignmentStrategy = this.AssignmentStrategy;\r\n    if (this.AssignPerformerConfig) {\r\n      operationActivity.AssignPerformerConfig = this.AssignPerformerConfig.clone();\r\n    }\r\n\r\n    operationActivity.PerformerNotFundExecption = this.PerformerNotFundExecption;\r\n    operationActivity.Retrievable = this.Retrievable;\r\n    operationActivity.IsRollback = this.IsRollback;\r\n    operationActivity.SelectBranch = this.SelectBranch;\r\n    operationActivity.NotifyAble = this.NotifyAble;\r\n    operationActivity.AddSignFrontAble = this.AddSignFrontAble;\r\n    operationActivity.AddSignBehindAble = this.AddSignBehindAble;\r\n    operationActivity.Priority = this.Priority;\r\n    operationActivity.ExecuteWorkItemMode = this.ExecuteWorkItemMode;\r\n    operationActivity.DisplayTerminal = this.DisplayTerminal;\r\n\r\n    operationActivity.SelectTargetAble = this.SelectTargetAble;\r\n    if (this.JumpScope) {\r\n      operationActivity.JumpScope = this.JumpScope.clone();\r\n    }\r\n    if (this.BackWardRule) {\r\n      operationActivity.BackWardRule = this.BackWardRule.clone();\r\n    }\r\n    operationActivity.transferAble = this.transferAble;\r\n    operationActivity.ExecuteForms = new Array();\r\n    if (this.ExecuteForms && this.ExecuteForms.length > 0) {\r\n      for (const f of this.ExecuteForms) {\r\n        const executeForm = f.clone();\r\n        operationActivity.ExecuteForms.push(executeForm);\r\n      }\r\n    }\r\n    operationActivity.customizeActions = new Array();\r\n    if (this.customizeActions && this.customizeActions.length > 0) {\r\n      for (const a of this.customizeActions) {\r\n        const customizeAction = a.clone();\r\n        operationActivity.customizeActions.push(customizeAction);\r\n      }\r\n    }\r\n    operationActivity.CounterSignRules = new Array();\r\n    if (this.CounterSignRules && this.CounterSignRules.length > 0) {\r\n      for (const r of this.CounterSignRules) {\r\n        const counterSignRule = r.clone();\r\n        operationActivity.CounterSignRules.push(counterSignRule);\r\n      }\r\n    }\r\n    operationActivity.AdhocActivitySecurities = new Array();\r\n    if (this.AdhocActivitySecurities && this.AdhocActivitySecurities.length > 0) {\r\n      for (const s of this.AdhocActivitySecurities) {\r\n        operationActivity.AdhocActivitySecurities.push(s);\r\n      }\r\n    }\r\n    // TODO: 这个好像暂时还没启用，赋空值\r\n    operationActivity.NotificationList = new Array();\r\n\r\n    operationActivity.anonymous = this.anonymous;\r\n    operationActivity.anonymousText = this.anonymousText;\r\n    operationActivity.BizActivityID = this.BizActivityID;\r\n    operationActivity.BizActivityName = this.BizActivityName;\r\n\r\n    operationActivity.Conclusions = new Array();\r\n    if (this.Conclusions && this.Conclusions.length > 0) {\r\n      for (const c of this.Conclusions) {\r\n        const conclusion = c.clone();\r\n        operationActivity.Conclusions.push(conclusion);\r\n      }\r\n    }\r\n    operationActivity.Tools = new Array();\r\n    if (this.Tools && this.Tools.length > 0) {\r\n      for (const t of this.Tools) {\r\n        if (t instanceof Component) {\r\n          const c = t as Component;\r\n          const tool = c.clone();\r\n          operationActivity.Tools.push(tool);\r\n        }\r\n      }\r\n    }\r\n    // TODO: 这个好像暂时还没启用，赋空值\r\n    operationActivity.BizParameters = new Array();\r\n    if (this.timeLimitControl) {\r\n      operationActivity.timeLimitControl = this.timeLimitControl.clone();\r\n    }\r\n    operationActivity.variableSettings = new Array();\r\n    if (this.variableSettings && this.variableSettings.length > 0) {\r\n      for (const v of this.variableSettings) {\r\n        const variableSetting = v.clone();\r\n        operationActivity.variableSettings.push(variableSetting);\r\n      }\r\n    }\r\n\r\n    operationActivity.messageNotices = new Array();\r\n    if (this.messageNotices && this.messageNotices.length > 0) {\r\n      for (const m of this.messageNotices) {\r\n        const messageNotice = m.clone();\r\n        operationActivity.messageNotices.push(messageNotice);\r\n      }\r\n    }\r\n    if (this.approvalPivotConfig) {\r\n      operationActivity.approvalPivotConfig = this.approvalPivotConfig.clone();\r\n    }\r\n    if (this.urgeHandleRule) {\r\n      operationActivity.urgeHandleRule = this.urgeHandleRule.clone();\r\n    }\r\n    return operationActivity;\r\n  }\r\n}\r\nBpmnModelHelper.RegisterElementType(new OperationActivity(new BpmnModel()));\r\n","import { BpmnModel, BpmnModelHelper, DataObject, ExtensionElement } from \"@edp-pmf/bpmn-model\";\r\nimport { VariableSetting } from \"./VariableSetting\";\r\n\r\nexport class ValuedDataObject extends DataObject {\r\n    static Clr_Type_ID: string = \"wf.ValuedDataObject\";\r\n    readonly ClrTypeID: string = ValuedDataObject.Clr_Type_ID;\r\n    protected static MEXTAG: string = 'wf.ValuedDataObject';\r\n\r\n    variableSetting: VariableSetting;\r\n\r\n    constructor(model: BpmnModel) {\r\n        super(model);\r\n    }\r\n\r\n    protected GetExtensionElements4ConvertTo(): ExtensionElement[] {\r\n        let list = super.GetExtensionElements4ConvertTo();\r\n        if (this.variableSetting != null) {\r\n            this.variableSetting.MexTag = ValuedDataObject.MEXTAG;\r\n            list.push(this.variableSetting);\r\n        }\r\n        return list;\r\n    }\r\n    protected SetExtensionElements4LoadFrom(extensionElements: ExtensionElement[]) {\r\n        super.SetExtensionElements4LoadFrom(extensionElements);\r\n        for (let extensionElement of extensionElements) {\r\n            if (extensionElement.MexTag !== ValuedDataObject.MEXTAG)\r\n                continue;\r\n            switch (extensionElement.ClrTypeID) {\r\n                case VariableSetting.Clr_Type_ID:\r\n                    this.variableSetting = (extensionElement as VariableSetting);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    NewInstance(): ValuedDataObject {\r\n        return new ValuedDataObject(this.Model);\r\n    }\r\n}\r\nBpmnModelHelper.RegisterElementType(new ValuedDataObject(new BpmnModel()));","export enum ResubmitEffect {\r\n    /**\r\n     * 驳回的节点通过后，按顺序流转\r\n     */\r\n    sequence = 'sequence',\r\n    /**\r\n     * 驳回后重新提交至我\r\n     * 1.抢占节点：只给驳回人创建任务\r\n     * 2.会签节点：驳回人+未审批人收到新任务，已通过人员自动通过\r\n     */\r\n    backToMe = 'backToMe',\r\n    /**\r\n     * 驳回的节点通过后返回本节点\r\n     * 1.抢占节点：1).再次进入节点时，办理人\r\n     * 2.会签节点：不读取参与者重新进入此节点历史办理人作为审批人配置\r\n     */\r\n    backToCurrentNode = 'backToCurrentNode',\r\n}","export enum FlowDirection {\r\n    // 正向\r\n    Forward = 'Forward',\r\n\r\n    // 反向\r\n    Opposite = 'Opposite',\r\n\r\n    // 中止\r\n    Abort = 'Abort'\r\n}","export enum ReportingRank {\r\n    DirectSuperior = 'DirectSuperior',\r\n    HigherSuperior = 'HigherSuperior'\r\n}\r\n","export enum ApprovalPivotType {\r\n    /**\r\n     * 文字提示类\r\n     */\r\n    REMIND = 'REMIND',\r\n    /**\r\n     * 自动检查项\r\n     */\r\n    AUTOMATIC = 'AUTOMATIC',\r\n    /**\r\n     * 手动检查项\r\n     */\r\n    MANUAL = 'MANUAL'\r\n}","export enum DurationType {\r\n    BeforeDuration = 'BeforeDuration',\r\n    OnDuration = 'OnDuration',\r\n    AfterDuration = 'AfterDuration'\r\n}","export enum SendMessageType {\r\n    SMS = 'SMS',\r\n    EMAIL = 'EMAIL',\r\n    CLOUDPLUS = 'CLOUDPLUS'\r\n}"],"names":["ActionOrganizationScope","BizActivity","ParticipantSchemeForDesigner","this","isAllScope","performers","variablePerformers","components","reportingLines","activityExecutors","matrixParticipants","organizationParticipants","Array","options","ExclusionPerformers","NoPerformerStrategy","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","tslib_1.__extends","ExpireOperationInfo","SendMessageExpireOperationInfo","AutoHandleExpireOperationInfo","ALL","ASSIGN","CLAIM","ExtensionElement","AssignmentStrategyDef","ResetBeforeLoadFrom","_super","Id","NewInstance","Model","ConvertToJsonObject","obj","BpmnModelHelper","SetAttributeValue","Description","ExpandGroups","LoadFromJsonObject","model","id","description","expandGroups","_this","ClrTypeID","RegisterElementType","BpmnModel","AssignPerformerConfig","Operator","MultiSelect","Necessary","AllowGlobalAssign","clone","assignPerformerConfig","Clr_Type_ID","TargetRefConstants","INITIAL_ACTIVITY_ID","PRECURSOR_ACTIVITY_ID","EMPTY_TARGET","BackWardRule","TargetRef","SelectTargetAble","WaitReturn","ResubmitEffect","DynamicBackWardRuleAble","SelectTargetList","backWardRule","ConclusionItem","Value","Text","WorkFlowAction","IsDefault","commentNecessary","certification","attachmentNecessary","signatureNecessary","defaultComment","CommentNecessary","ExtensionMethod","GetAttributeValue4Boolean","GetAttributeValue4String","conclusion","MexExpression","MexExpressionImpl","mexExpressionImpl","UNDIFINED","CONDITION","OTHERWISE","EXCEPTION","DEFAULTEXCEPTION","GENERALORGCONDITION","GeneralVarOrgCondition","Unsure","SemanticExpressionV1","Condition","defineProperty","type","_value","valueVersion","ToString","ConditionType","ValueVersion","condition","ConditionValueVersion","ExtensionCompletionConditionRuler","CounterSignRule","ConclusionValue","CalculateType","ConditionValue","WaitAllVotes","CompletionCondition","counterSignRule","Preempt","Parallel","Sequential","MexElement","ParticipantCoefficient","participantId","participantName","participantCode","participantType","mustCompleted","coefficient","ParticipantId","ParticipantName","ParticipantCode","ParticipantType","MustCompleted","Coefficient","name","code","Forward","Backward","Abort","Xpression","SemanticExpression","NO","DEFAULT","SYNCHRONOUS","ASYNCHRONOUS","MexExtensionElement","ActualParameter","Name","ValueText","Tag","parameter","valueText","tag","WFExtensionElement","ExtendedAttributes","key","mexJsonArray_1","extAttributeElements","Code","obj_1","push","GetMexExtensionElements4ConvertTo","forEach","list_1","mexJsonArray","item","mexExtElementObj","GetElementType","SetMexExtensionElements4LoadFrom","list","GetExtendedAttributes","PROCESSINSTANCE_CREATED","PROCESSINSTANCE_STARTED","PROCESSINSTANCE_SUSPENDED","PROCESSINSTANCE_RESUMED","PROCESSINSTANCE_COMPLETED","PROCESSINSTANCE_TERMINATED","PROCESSINSTANCE_ALARM","PROCESSINSTANCE_TIMEOUT","PROCESSINSTANCE_DELETED","PROCESSINSTANCE_REACTIVATED","PROCESSINSTANCE_CANCELED","PROCESSINSTANCE_ROLLBACK","PROCESSINSTANCE_RESUBMIT","ACTIVITY_AND_PARTICIPANT_UPDATED","ACTIVITY_CREATED","ACTIVITY_STARTED","ACTIVITY_SUSPENDED","ACTIVITY_RESUMED","ACTIVITY_COMPLETED","ACTIVITY_TERMINATED","WORKITEM_CREATED","WORKITEM_ASSIGNED","WORKITEM_STARTED","WORKITEM_SUSPENDED","WORKITEM_RESUMED","WORKITEM_COMPLETED","WORKITEM_TERMINATED","WORKITEM_ALARM","WORKITEM_TIMEOUT","UNDEFINITION","LOADDATA","Tool","actualParametersElements","ActualParameters","Execution","Time","isForCompensation","actualParameters","actualParameter","IsForCompensation","ExecutionType","AsyncCallBackType","ToolTime","Component","MetadataId","ComponentType","MethodCode","ScopeType","component","GenerateElementId","_b","tslib_1.__values","_c","CustomizeAction","terminalType","TerminalType","customizeAction","WEB","APP","ExecuteForm","FormType","ComponentId","formFormatId","formatConfigId","PC","executeForm","MOBILE","OutConnectNode","Global","AfterNodes","SpecifiedSet","FirstNode","NullNode","SpecifyNode","JumpScope","Category","JumpScopeCategory","DefaultType","JumpScopeDefaultType","DestinationActivities","DefaultActivity","jumpScope","category","Notification","Header","Body","Footer","Receiver","SenderName","Way","SendTempAssMessage","PROCESSINSTANCE_ABORT","PROCESSINSTANCE_COMPLETE","PROCESSINSTANCE_CREATE","PROCESSINSTANCE_DELETE","PROCESSINSTANCE_RESUME","PROCESSINSTANCE_START","PROCESSINSTANCE_SUSPEND","PROCESSINSTANCE_TERMINATE","ACTIVITY_ABORTED","ACTIVITY_STOPPED","ACTIVITY_RETRIEVED","ACTIVITY_RETRIEVED_FROM","ACTIVITY_ROLLBACK","ACTIVITY_ROLLBACK_TO","WORKITEM_ABORTED","WORKITEM_STOPPED","OtherAssignActivityNodeInfo","activityDefinitionId","required","conditionElement","GetAttributeValue","otherAssignActivityNodeInfo","OtherAssignNodes","otherAssignActivityNodeInfos","destArray","destArrayElement","destArrayElement_1","destArrayElement_1_1","otherAssignActivities","newDestArrayElement","newDestArrayElement_1","newDestArrayElement_1_1","otherInfo","assignScope","_d","_e","_f","DIRECT","EXTERNAL_PROCESS","SUB_PROCESS","ProcessHeader","BizDefKey","BizObjId","BizDefName","allowPreAssign","enablePriority","enableWholeOrderRetrieve","startMode","AllowPreAssign","EnablePriority","EnableWholeOrderRetrieve","StartMode","AccessLevel","bizDefKey","bizObjId","bizDefName","ExtendProperty","extendProperty","StartEvent","StartActivity","ExecuteForms","extendProperties","sendBackedTask","selectTargetAble","otherAssignNodes","GetExtensionElements4ConvertTo","form","MexTag","MEXTAG","e","SetExtensionElements4LoadFrom","extensionElements","extensionElements_1","extensionElements_1_1","extensionElement","Validate","errors","startActivity","setDefaultForms","forms","forms_1","forms_1_1","params","actParas","params_1","params_1_1","para","actPara","slice","terminal","ApprovalPivot","title","approvalPivot","ApprovalPivotConfig","approvalPivots","enable","expand","approvalPivotConfig","CheckCondition","jsonArray_1","checkTime","errorTips","size","childObj","jsonArray","Map","jsonArray_2","jsonArray_2_1","set","Default","AssignUser","Transfer","AddSignFront","AddSignBehind","Notify","ParticipantExpression","actionScope","ActionScope","order","GetAttributeValue4Int64","ActivityExecutorParticipantExpression","activityDefId","activityDefName","activityExecutorParticipant","SerializeUtils","setListAttributeValue","attributeName","actualParameters_1","actualParameters_1_1","getListFromJsonObject","actualParameterList","actualParametersElement","actualParametersElement_1","actualParametersElement_1_1","ComponentParticipantExpression","componentId","componentName","methodCode","methodName","ComponentName","MethodName","componentParticipant","CLR_TYPE_NAME","MatrixParticipantExpression","matrixDefId","matrixDefName","conditionField1","conditionFieldText1","conditionField2","conditionFieldText2","conditionField3","conditionFieldText3","multivaluedCondition","dataFieldAlias","MatrixDefId","MatrixDefName","ConditionField1","ConditionFieldText1","ConditionField2","ConditionFieldText2","ConditionField3","ConditionFieldText3","MultivaluedCondition","DataFieldAlias","matrixParticipant","DEPARTMENT","UNIT","OrganizationParticipantExpression","organizationLevel","OrganizationLevel","organizationId","organizationCode","organizationName","includeChildren","parentsUntil","organizationParticipant","PositionParticipantExpression","PositionId","PositionName","PositionType","OrgId","OrgName","OrgType","positionParticipant","positionId","positionName","ReportingLineParticipantExpression","RefUserId","RefEmployeeId","Dimension","RefOrgId","ReportingLineDefId","ReportingLineDefName","reportingLineParticipant","UserParticipantExpression","UserId","userParticipant","userId","orgType","VariableParticipantExpression","VarValue","VarType","Relation","variableParticipant","varValue","varType","HumanPerformer","HumanPerformerImpl","participantExpression","humanPerformerImpl","ImageSettings","imageOperation","imageSettings","SmsMessageVariable","smsMessageVariable","SmsMessageTemplate","smsMessageVariables","content","variables","variable","variables_1","variables_1_1","smsMessageTemplate","MessageNotice","receiverExpressions","sendTime","sendType","subject","receiver","receiverText","receiverList","receiverList_1","receiverList_1_1","userParticipantExpression","positionParticipantExpression","reportingLineParticipantExpression","organizationParticipantExpression","matrixParticipantExpression","componentParticipantExpression","activityExecutorParticipantExpression","smsTemplateElement","messageNotice","r","TitleExpression","valueLanguage","ValueLanguage","titleExpression","PotentialOwner","OrganizationPotentialOwner","resetBeforeLoadFrom","OrganizationId","OrganizationCode","OrganizationName","IncludeChildren","ParentsUntil","organizationPotentialOwner","Participant","ActivityExecutorParticipant","ActivityDefId","ActivityDefName","ComponentParticipant","param","MatrixParticipant","PositionParticipant","ReportingLineParticipant","ReportingReferObject","RefOrgName","UserParticipant","ParticipantScheme","Performers","participantScheme","AutomaticApprovalRule","conclusionValue","comment","operatorText","participantAsOperator","automaticApprovalRule","ParticipantSetting","HistoricFirst","automaticPerformers","automaticApprovalRules","Neighboring","rules","a","rules_1","rules_1_1","participantSetting","_g","_h","_j","PotentialOwnerImpl","potentialOwnerImpl","ExpireOperation","durationType","timeDuration","timeUnit","operationTypeName","AutoHandleExpireOperation","message","autoHandleType","autoHandleExpireOperation","apply","arguments","SendMessageExpireOperation","cycleEnable","cycleTime","cycleTimeUnit","sendMessageExpireOperation","TimeLimitControl","expireOperationElements","dueTime","expireOperations","expireOperation","OperationTypeName","timeLimitControl","UrgeHandleRule","urgeHandleAble","earlyTime","intervalTime","urgeMessageSubject","urgeMessageContent","addReminder","subjectEditable","contentEditable","urgeHandleRule","VariableSetting","variableCode","variableName","executionTime","variableSetting","UserTask","UserActivity","ParticipantSchemes","CounterSignRules","Retrievable","AddSignFrontAble","AddSignBehindAble","transferAble","AssignmentStrategy","ExecuteWorkItemMode","DisplayTerminal","NotificationList","Conclusions","customizeActions","SelectBranch","anonymous","anonymousText","variableSettings","messageNotices","NotifyAble","humanPerformers","potentialOwners","dynamicParticipants","BizActivityID","BizActivityName","TransferAble","Anonymous","AnonymousText","_o","_p","scheme","_q","_r","_s","_t","rule","_u","_v","_w","_x","Tools","_y","_z","taskTitle","_0","_1","action","_2","_3","v","_4","_5","_6","_7","checkConditions","_8","_9","_10","_11","participant","initConclusions","pass","back","setBizConclusions","actions","actions_1","actions_1_1","workFlowAction","filter","c","userActivity","resourceRoles","GetResourceRoles","resourceRoles_1","resourceRoles_1_1","role","AddResourceRole","PerformerNotFundExecption","IsRollback","Priority","LoopCharacteristics","AdhocActivitySecurities","tool","t","BizParameters","_12","CustomType","CDTSchemaType","SchemaId","IN","OUT","INOUT","FormalParameter","index","DataType","Mode","desc","datatype","mode","ParameterMode","AifCreationBillActivity","aifProcessCode","voNodePath","isRelied","BpmnModelJsonHelper","GetAttributeValueAsString","GetAttributeValueAsBoolean","creationAct","ServiceTask","AutoActivity","tools","autoActivity","CallActivity","CallActivitySubProcess","SubProcessDataAssociations","inheritVariables","inheritBizDataId","useAutoCreationData","calledBizDefKey","bizDataId","CalledBizDefKey","BizDataId","InheritVariables","InheritBizDataId","callActivitySubProcess","CalledElement","MultiInstanceLoopCharacteristics","SignalEventDefinition","SignalEventDefinitionImpl","triggerAction","signalEventDefinitionImpl","SignalExpression","SignalRef","Async","IntermediateCatchEvent","IntermediateCatchEventImpl","initEventDefinitions","passEvent","backEvent","EventDefinitions","abortEvent","intermediateCatchEventImpl","eventDefinition","MessageActivity","messageActivity","NotifyActivity","notifyActivity","executeForms","_k","_l","notifyAble","_m","participants","beforeSerialize","roles","roles_1","roles_1_1","RemoveResourceRole","afterDeserialize","roles_2","roles_2_1","OperationActivity","submit","operationActivity","DataObject","ValuedDataObject","sequence","backToMe","backToCurrentNode","Opposite","DirectSuperior","HigherSuperior","REMIND","AUTOMATIC","MANUAL","BeforeDuration","OnDuration","AfterDuration","SMS","EMAIL","CLOUDPLUS"],"mappings":"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"}