/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from "@edp-pmf/bpmn-model";
import { OtherAssignActivityNodeInfo } from "./OtherAssignActivityNodeInfo";
var OtherAssignNodes = /** @class */ (function (_super) {
    tslib_1.__extends(OtherAssignNodes, _super);
    function OtherAssignNodes(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = OtherAssignNodes.Clr_Type_ID;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    OtherAssignNodes.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.otherAssignActivityNodeInfos = new Array();
    };
    /**
     * @return {?}
     */
    OtherAssignNodes.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        if (this.otherAssignActivityNodeInfos && this.otherAssignActivityNodeInfos.length > 0) {
            /** @type {?} */
            var destArray = new Array();
            try {
                for (var _b = tslib_1.__values(this.otherAssignActivityNodeInfos), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var item = _c.value;
                    destArray.push(item.ConvertToJsonObject());
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            BpmnModelHelper.SetAttributeValue(obj, "OtherAssignActivityNodeInfos", destArray);
        }
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    OtherAssignNodes.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_2, _a, e_3, _b;
        _super.prototype.LoadFromJsonObject.call(this, obj);
        /** @type {?} */
        var destArrayElement = ExtensionMethod.GetAttributeValue(obj, "OtherAssignActivities");
        if (destArrayElement && destArrayElement.length > 0) {
            try {
                for (var destArrayElement_1 = tslib_1.__values(destArrayElement), destArrayElement_1_1 = destArrayElement_1.next(); !destArrayElement_1_1.done; destArrayElement_1_1 = destArrayElement_1.next()) {
                    var item = destArrayElement_1_1.value;
                    this.otherAssignActivities.push(item);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (destArrayElement_1_1 && !destArrayElement_1_1.done && (_a = destArrayElement_1.return)) _a.call(destArrayElement_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        /** @type {?} */
        var newDestArrayElement = ExtensionMethod.GetAttributeValue(obj, "OtherAssignActivityNodeInfos");
        if (newDestArrayElement && newDestArrayElement.length > 0) {
            try {
                for (var newDestArrayElement_1 = tslib_1.__values(newDestArrayElement), newDestArrayElement_1_1 = newDestArrayElement_1.next(); !newDestArrayElement_1_1.done; newDestArrayElement_1_1 = newDestArrayElement_1.next()) {
                    var item = newDestArrayElement_1_1.value;
                    /** @type {?} */
                    var otherInfo = new OtherAssignActivityNodeInfo(this.Model);
                    otherInfo.LoadFromJsonObject(item);
                    this.otherAssignActivityNodeInfos.push(otherInfo);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (newDestArrayElement_1_1 && !newDestArrayElement_1_1.done && (_b = newDestArrayElement_1.return)) _b.call(newDestArrayElement_1);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
    };
    /**
     * @return {?}
     */
    OtherAssignNodes.prototype.clone = /**
     * @return {?}
     */
    function () {
        var e_4, _a, e_5, _b;
        /** @type {?} */
        var assignScope = new OtherAssignNodes(this.Model);
        assignScope.otherAssignActivities = new Array();
        if (this.otherAssignActivities && this.otherAssignActivities.length > 0) {
            try {
                for (var _c = tslib_1.__values(this.otherAssignActivities), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var d = _d.value;
                    assignScope.otherAssignActivities.push(d);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        assignScope.otherAssignActivityNodeInfos = new Array();
        if (this.otherAssignActivityNodeInfos && this.otherAssignActivityNodeInfos.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.otherAssignActivityNodeInfos), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var d = _f.value;
                    assignScope.otherAssignActivityNodeInfos.push(d.clone());
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        return assignScope;
    };
    /**
     * @return {?}
     */
    OtherAssignNodes.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new OtherAssignNodes(this.Model);
    };
    OtherAssignNodes.Clr_Type_ID = "wf.OtherAssignNodes";
    return OtherAssignNodes;
}(ExtensionElement));
export { OtherAssignNodes };
if (false) {
    /** @type {?} */
    OtherAssignNodes.Clr_Type_ID;
    /** @type {?} */
    OtherAssignNodes.prototype.ClrTypeID;
    /** @type {?} */
    OtherAssignNodes.prototype.otherAssignActivities;
    /** @type {?} */
    OtherAssignNodes.prototype.otherAssignActivityNodeInfos;
}
BpmnModelHelper.RegisterElementType(new OtherAssignNodes(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3RoZXJBc3NpZ25Ob2Rlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1tb2RlbC8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9leHRlbnNpb24vT3RoZXJBc3NpZ25Ob2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3BHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRTVFO0lBQXNDLDRDQUFnQjtJQVFsRCwwQkFBWSxLQUFnQjtRQUE1QixZQUNJLGtCQUFNLEtBQUssQ0FBQyxTQUNmO1FBUlEsZUFBUyxHQUFXLGdCQUFnQixDQUFDLFdBQVcsQ0FBQzs7SUFRMUQsQ0FBQzs7Ozs7SUFFUyw4Q0FBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBQzVCLElBQUksQ0FBQyw0QkFBNEIsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO0lBQ3BELENBQUM7Ozs7SUFFRCw4Q0FBbUI7OztJQUFuQjs7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBQ3JDLElBQUksSUFBSSxDQUFDLDRCQUE0QixJQUFJLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFOztnQkFDN0UsU0FBUyxHQUFHLElBQUksS0FBSyxFQUFFOztnQkFDN0IsS0FBbUIsSUFBQSxLQUFBLGlCQUFBLElBQUksQ0FBQyw0QkFBNEIsQ0FBQSxnQkFBQSw0QkFBRTtvQkFBakQsSUFBTSxJQUFJLFdBQUE7b0JBQ1gsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO2lCQUM5Qzs7Ozs7Ozs7O1lBQ0QsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSw4QkFBOEIsRUFBRSxTQUFTLENB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TW9kZWxIZWxwZXIsIEV4dGVuc2lvbkVsZW1lbnQsIEV4dGVuc2lvbk1ldGhvZCB9IGZyb20gXCJAZWRwLXBtZi9icG1uLW1vZGVsXCI7XHJcbmltcG9ydCB7IE90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mbyB9IGZyb20gXCIuL090aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mb1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIE90aGVyQXNzaWduTm9kZXMgZXh0ZW5kcyBFeHRlbnNpb25FbGVtZW50IHtcclxuICAgIHN0YXRpYyBDbHJfVHlwZV9JRDogc3RyaW5nID0gXCJ3Zi5PdGhlckFzc2lnbk5vZGVzXCI7XHJcbiAgICByZWFkb25seSBDbHJUeXBlSUQ6IHN0cmluZyA9IE90aGVyQXNzaWduTm9kZXMuQ2xyX1R5cGVfSUQ7XHJcblxyXG4gICAgb3RoZXJBc3NpZ25BY3Rpdml0aWVzOiBBcnJheTxzdHJpbmc+O1xyXG5cclxuICAgIG90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mb3M6IEFycmF5PE90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mbz47XHJcblxyXG4gICAgY29uc3RydWN0b3IobW9kZWw6IEJwbW5Nb2RlbCkge1xyXG4gICAgICAgIHN1cGVyKG1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcbiAgICAgICAgdGhpcy5vdGhlckFzc2lnbkFjdGl2aXR5Tm9kZUluZm9zID0gbmV3IEFycmF5KCk7XHJcbiAgICB9XHJcblxyXG4gICAgQ29udmVydFRvSnNvbk9iamVjdCgpOiBhbnkge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcbiAgICAgICAgaWYgKHRoaXMub3RoZXJBc3NpZ25BY3Rpdml0eU5vZGVJbmZvcyAmJiB0aGlzLm90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mb3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBjb25zdCBkZXN0QXJyYXkgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHRoaXMub3RoZXJBc3NpZ25BY3Rpdml0eU5vZGVJbmZvcykge1xyXG4gICAgICAgICAgICAgICAgZGVzdEFycmF5LnB1c2goaXRlbS5Db252ZXJ0VG9Kc29uT2JqZWN0KCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEJwbW5Nb2RlbEhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiT3RoZXJBc3NpZ25BY3Rpdml0eU5vZGVJbmZvc1wiLCBkZXN0QXJyYXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IGFueSkge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG4gICAgICAgIGNvbnN0IGRlc3RBcnJheUVsZW1lbnQ6IEFycmF5PHN0cmluZz4gPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIk90aGVyQXNzaWduQWN0aXZpdGllc1wiKTtcclxuICAgICAgICBpZiAoZGVzdEFycmF5RWxlbWVudCAmJiBkZXN0QXJyYXlFbGVtZW50Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGRlc3RBcnJheUVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMub3RoZXJBc3NpZ25BY3Rpdml0aWVzLnB1c2goaXRlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IG5ld0Rlc3RBcnJheUVsZW1lbnQ6IEFycmF5PE90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mbz4gPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIk90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mb3NcIik7XHJcbiAgICAgICAgaWYgKG5ld0Rlc3RBcnJheUVsZW1lbnQgJiYgbmV3RGVzdEFycmF5RWxlbWVudC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBuZXdEZXN0QXJyYXlFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBvdGhlckluZm8gPSBuZXcgT3RoZXJBc3NpZ25BY3Rpdml0eU5vZGVJbmZvKHRoaXMuTW9kZWwpO1xyXG4gICAgICAgICAgICAgICAgb3RoZXJJbmZvLkxvYWRGcm9tSnNvbk9iamVjdChpdGVtKTtcclxuICAgICAgICAgICAgICAgIHRoaXMub3RoZXJBc3NpZ25BY3Rpdml0eU5vZGVJbmZvcy5wdXNoKG90aGVySW5mbyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2xvbmUoKTogT3RoZXJBc3NpZ25Ob2RlcyB7XHJcbiAgICAgICAgY29uc3QgYXNzaWduU2NvcGUgPSBuZXcgT3RoZXJBc3NpZ25Ob2Rlcyh0aGlzLk1vZGVsKTtcclxuICAgICAgICBhc3NpZ25TY29wZS5vdGhlckFzc2lnbkFjdGl2aXRpZXMgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICBpZiAodGhpcy5vdGhlckFzc2lnbkFjdGl2aXRpZXMgJiYgdGhpcy5vdGhlckFzc2lnbkFjdGl2aXRpZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGQgb2YgdGhpcy5vdGhlckFzc2lnbkFjdGl2aXRpZXMpIHtcclxuICAgICAgICAgICAgICAgIGFzc2lnblNjb3BlLm90aGVyQXNzaWduQWN0aXZpdGllcy5wdXNoKGQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFzc2lnblNjb3BlLm90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mb3MgPSBuZXcgQXJyYXkoKTtcclxuICAgICAgICBpZiAodGhpcy5vdGhlckFzc2lnbkFjdGl2aXR5Tm9kZUluZm9zICYmIHRoaXMub3RoZXJBc3NpZ25BY3Rpdml0eU5vZGVJbmZvcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgZCBvZiB0aGlzLm90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mb3MpIHtcclxuICAgICAgICAgICAgICAgIGFzc2lnblNjb3BlLm90aGVyQXNzaWduQWN0aXZpdHlOb2RlSW5mb3MucHVzaChkLmNsb25lKCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhc3NpZ25TY29wZTtcclxuICAgIH1cclxuXHJcbiAgICBOZXdJbnN0YW5jZSgpOiBPdGhlckFzc2lnbk5vZGVzIHtcclxuICAgICAgICByZXR1cm4gbmV3IE90aGVyQXNzaWduTm9kZXModGhpcy5Nb2RlbCk7XHJcbiAgICB9XHJcbn1cclxuQnBtbk1vZGVsSGVscGVyLlJlZ2lzdGVyRWxlbWVudFR5cGUobmV3IE90aGVyQXNzaWduTm9kZXMobmV3IEJwbW5Nb2RlbCgpKSk7Il19