/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ExtensionElement, BpmnModel, BpmnModelHelper, ExtensionMethod } from "@edp-pmf/bpmn-model";
var ConclusionItem = /** @class */ (function (_super) {
    tslib_1.__extends(ConclusionItem, _super);
    function ConclusionItem(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = ConclusionItem.Clr_Type_ID;
        /**
         * 是否默认
         *
         */
        _this.IsDefault = false;
        _this.commentNecessary = false;
        return _this;
    }
    /**
     * @return {?}
     */
    ConclusionItem.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new ConclusionItem(this.Model);
    };
    /**
     * @protected
     * @return {?}
     */
    ConclusionItem.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
    };
    /**
     * @return {?}
     */
    ConclusionItem.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Value", this.Value);
        BpmnModelHelper.SetAttributeValue(obj, "Text", this.Text);
        BpmnModelHelper.SetAttributeValue(obj, "WorkFlowAction", this.WorkFlowAction);
        BpmnModelHelper.SetAttributeValue(obj, "IsDefault", this.IsDefault);
        BpmnModelHelper.SetAttributeValue(obj, "CommentNecessary", this.commentNecessary);
        BpmnModelHelper.SetAttributeValue(obj, "Certification", this.certification);
        BpmnModelHelper.SetAttributeValue(obj, "AttachmentNecessary", this.attachmentNecessary);
        BpmnModelHelper.SetAttributeValue(obj, "SignatureNecessary", this.signatureNecessary);
        BpmnModelHelper.SetAttributeValue(obj, "DefaultComment", this.defaultComment);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ConclusionItem.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Value = obj.Value;
        this.Text = obj.Text;
        this.WorkFlowAction = obj.WorkFlowAction;
        this.IsDefault = obj.IsDefault;
        this.commentNecessary = obj.CommentNecessary;
        this.certification = ExtensionMethod.GetAttributeValue4Boolean(obj, "Certification");
        this.attachmentNecessary = ExtensionMethod.GetAttributeValue4Boolean(obj, "AttachmentNecessary");
        this.signatureNecessary = ExtensionMethod.GetAttributeValue4Boolean(obj, "SignatureNecessary");
        this.defaultComment = ExtensionMethod.GetAttributeValue4String(obj, "DefaultComment");
    };
    /**
     * @return {?}
     */
    ConclusionItem.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var conclusion = new ConclusionItem(this.Model);
        conclusion.Value = this.Value;
        conclusion.Text = this.Text;
        conclusion.WorkFlowAction = this.WorkFlowAction;
        conclusion.IsDefault = this.IsDefault;
        conclusion.commentNecessary = this.commentNecessary;
        conclusion.certification = this.certification;
        conclusion.attachmentNecessary = this.attachmentNecessary;
        conclusion.signatureNecessary = this.signatureNecessary;
        conclusion.defaultComment = this.defaultComment;
        return conclusion;
    };
    ConclusionItem.Clr_Type_ID = "wf.ConclusionItem";
    return ConclusionItem;
}(ExtensionElement));
export { ConclusionItem };
if (false) {
    /** @type {?} */
    ConclusionItem.Clr_Type_ID;
    /** @type {?} */
    ConclusionItem.prototype.ClrTypeID;
    /**
     * 审批结论值
     *
     * @type {?}
     */
    ConclusionItem.prototype.Value;
    /**
     * 显示文本
     *
     * @type {?}
     */
    ConclusionItem.prototype.Text;
    /**
     * 流程动作
     *
     * @type {?}
     */
    ConclusionItem.prototype.WorkFlowAction;
    /**
     * 是否默认
     *
     * @type {?}
     */
    ConclusionItem.prototype.IsDefault;
    /** @type {?} */
    ConclusionItem.prototype.commentNecessary;
    /**
     * 数字签名
     * @type {?}
     */
    ConclusionItem.prototype.certification;
    /**
     * 附件上传
     * @type {?}
     */
    ConclusionItem.prototype.attachmentNecessary;
    /**
     * 手写签名必填
     * @type {?}
     */
    ConclusionItem.prototype.signatureNecessary;
    /**
     * 默认意见
     * @type {?}
     */
    ConclusionItem.prototype.defaultComment;
}
BpmnModelHelper.RegisterElementType(new ConclusionItem(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,