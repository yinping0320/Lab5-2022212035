/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionElement } from "@edp-pmf/bpmn-model";
var AssignmentStrategyDef = /** @class */ (function (_super) {
    tslib_1.__extends(AssignmentStrategyDef, _super);
    //undo操作临时clone方法
    function AssignmentStrategyDef(model, id, description, expandGroups) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "wf.AssignmentStrategy";
        _this.Id = id;
        _this.Description = description;
        _this.ExpandGroups = expandGroups;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    AssignmentStrategyDef.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.Id = null;
    };
    /**
     * @return {?}
     */
    AssignmentStrategyDef.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new AssignmentStrategyDef(this.Model);
    };
    /**
     * @return {?}
     */
    AssignmentStrategyDef.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Id", this.Id);
        BpmnModelHelper.SetAttributeValue(obj, "Description", this.Description);
        BpmnModelHelper.SetAttributeValue(obj, "ExpandGroups", this.ExpandGroups);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    AssignmentStrategyDef.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Id = obj.Id;
        this.Description = obj.Description;
        this.ExpandGroups = obj.ExpandGroups;
    };
    return AssignmentStrategyDef;
}(ExtensionElement));
export { AssignmentStrategyDef };
if (false) {
    /** @type {?} */
    AssignmentStrategyDef.prototype.ClrTypeID;
    /** @type {?} */
    AssignmentStrategyDef.prototype.Id;
    /** @type {?} */
    AssignmentStrategyDef.prototype.Description;
    /** @type {?} */
    AssignmentStrategyDef.prototype.ExpandGroups;
}
BpmnModelHelper.RegisterElementType(new AssignmentStrategyDef(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXNzaWdubWVudFN0cmF0ZWd5RGVmLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLW1vZGVsLyIsInNvdXJjZXMiOlsibGliL21vZGVsL2V4dGVuc2lvbi9hc3NpZ25tZW50LXN0cmF0ZWd5L0Fzc2lnbm1lbnRTdHJhdGVneURlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFbkY7SUFBMkMsaURBQWdCO0lBQ3ZELGlCQUFpQjtJQUNqQiwrQkFBWSxLQUFnQixFQUFFLEVBQVcsRUFBRSxXQUFvQixFQUFFLFlBQXNCO1FBQXZGLFlBQ0ksa0JBQU0sS0FBSyxDQUFDLFNBS2Y7UUFFRCxlQUFTLEdBQVcsdUJBQXVCLENBQUM7UUFMeEMsS0FBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixLQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUMvQixLQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQzs7SUFDckMsQ0FBQzs7Ozs7SUFRUyxtREFBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO1FBRTVCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Ozs7SUFFRCwyQ0FBVzs7O0lBQVg7UUFDSSxPQUFPLElBQUkscUJBQXFCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7Ozs7SUFFRCxtREFBbUI7OztJQUFuQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFDckMsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3RELGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN4RSxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDMUUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVELGtEQUFrQjs7OztJQUFsQixVQUFtQixHQUFRO1FBQ3ZCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7UUFDbkMsSUFBSSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDO0lBQ3pDLENBQUM7SUFFTCw0QkFBQztBQUFELENBQUMsQUExQ0QsQ0FBMkMsZ0JBQWdCLEdBMEMxRDs7OztJQWhDRywwQ0FBNEM7O0lBRTVDLG1DQUFXOztJQUNYLDRDQUFvQjs7SUFDcEIsNkNBQXNCOztBQThCMUIsZUFBZSxDQUFDLG1CQUFtQixDQUFDLElBQUkscUJBQXFCLENBQUMsSUFBSSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWwsIEJwbW5Nb2RlbEhlbHBlciwgRXh0ZW5zaW9uRWxlbWVudCB9IGZyb20gXCJAZWRwLXBtZi9icG1uLW1vZGVsXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQXNzaWdubWVudFN0cmF0ZWd5RGVmIGV4dGVuZHMgRXh0ZW5zaW9uRWxlbWVudCB7XHJcbiAgICAvL3VuZG/mk43kvZzkuLTml7ZjbG9uZeaWueazlVxyXG4gICAgY29uc3RydWN0b3IobW9kZWw6IEJwbW5Nb2RlbCwgaWQ/OiBzdHJpbmcsIGRlc2NyaXB0aW9uPzogc3RyaW5nLCBleHBhbmRHcm91cHM/OiBib29sZWFuKSB7XHJcbiAgICAgICAgc3VwZXIobW9kZWwpO1xyXG5cclxuICAgICAgICB0aGlzLklkID0gaWQ7XHJcbiAgICAgICAgdGhpcy5EZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgIHRoaXMuRXhwYW5kR3JvdXBzID0gZXhwYW5kR3JvdXBzO1xyXG4gICAgfVxyXG5cclxuICAgIENsclR5cGVJRDogc3RyaW5nID0gXCJ3Zi5Bc3NpZ25tZW50U3RyYXRlZ3lcIjtcclxuXHJcbiAgICBJZDogc3RyaW5nO1xyXG4gICAgRGVzY3JpcHRpb246IHN0cmluZztcclxuICAgIEV4cGFuZEdyb3VwczogYm9vbGVhbjtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuSWQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIE5ld0luc3RhbmNlKCk6IEFzc2lnbm1lbnRTdHJhdGVneURlZiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBBc3NpZ25tZW50U3RyYXRlZ3lEZWYodGhpcy5Nb2RlbCk7XHJcbiAgICB9XHJcblxyXG4gICAgQ29udmVydFRvSnNvbk9iamVjdCgpOiBhbnkge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJJZFwiLCB0aGlzLklkKTtcclxuICAgICAgICBCcG1uTW9kZWxIZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIkRlc2NyaXB0aW9uXCIsIHRoaXMuRGVzY3JpcHRpb24pO1xyXG4gICAgICAgIEJwbW5Nb2RlbEhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiRXhwYW5kR3JvdXBzXCIsIHRoaXMuRXhwYW5kR3JvdXBzKTtcclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IGFueSkge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLklkID0gb2JqLklkO1xyXG4gICAgICAgIHRoaXMuRGVzY3JpcHRpb24gPSBvYmouRGVzY3JpcHRpb247XHJcbiAgICAgICAgdGhpcy5FeHBhbmRHcm91cHMgPSBvYmouRXhwYW5kR3JvdXBzO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuQnBtbk1vZGVsSGVscGVyLlJlZ2lzdGVyRWxlbWVudFR5cGUobmV3IEFzc2lnbm1lbnRTdHJhdGVneURlZihuZXcgQnBtbk1vZGVsKCkpKTtcclxuICAgIC8vIHBtZi5icG1uLmRlc2lnbmVyLkJwbW5EZXNpZ25lckhlbHBlci5SZWdpc3RlckVsZW1lbnRUeXBlKG5ldyBBc3NpZ25tZW50U3RyYXRlZ3lEZWYobmV3IEJwbW5Nb2RlbCgpKSk7Il19