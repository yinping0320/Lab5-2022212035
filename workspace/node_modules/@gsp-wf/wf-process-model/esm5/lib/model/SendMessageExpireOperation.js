/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionMethod } from "@edp-pmf/bpmn-model";
import { ExpireOperation } from "./ExpireOperation";
import { SmsMessageTemplate } from "./SmsMessageTemplate";
var SendMessageExpireOperation = /** @class */ (function (_super) {
    tslib_1.__extends(SendMessageExpireOperation, _super);
    function SendMessageExpireOperation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ClrTypeID = SendMessageExpireOperation.Clr_Type_ID;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    SendMessageExpireOperation.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.smsMessageTemplate = null;
    };
    /**
     * @return {?}
     */
    SendMessageExpireOperation.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "Message", this.message);
        ExtensionMethod.SetAttributeValue(obj, "SendType", this.sendType);
        ExtensionMethod.SetAttributeValue(obj, "Subject", this.subject);
        ExtensionMethod.SetAttributeValue(obj, "Receiver", this.receiver);
        ExtensionMethod.SetAttributeValue(obj, "ReceiverText", this.receiverText);
        ExtensionMethod.SetAttributeValue(obj, "CycleEnable", this.cycleEnable);
        ExtensionMethod.SetAttributeValue(obj, "CycleTime", this.cycleTime);
        ExtensionMethod.SetAttributeValue(obj, "CycleTimeUnit", this.cycleTimeUnit);
        if (this.smsMessageTemplate) {
            ExtensionMethod.SetAttributeValue(obj, "SmsMessageTemplate", this.smsMessageTemplate.ConvertToJsonObject());
        }
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    SendMessageExpireOperation.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.message = ExtensionMethod.GetAttributeValue4String(obj, "Message");
        this.sendType = ExtensionMethod.GetAttributeValue4String(obj, "SendType");
        this.subject = ExtensionMethod.GetAttributeValue4String(obj, "Subject");
        this.receiver = ExtensionMethod.GetAttributeValue4String(obj, "Receiver");
        this.receiverText = ExtensionMethod.GetAttributeValue4String(obj, "ReceiverText");
        this.cycleEnable = ExtensionMethod.GetAttributeValue4Boolean(obj, "CycleEnable");
        this.cycleTime = ExtensionMethod.GetAttributeValue4String(obj, "CycleTime");
        this.cycleTimeUnit = ExtensionMethod.GetAttributeValue4String(obj, "CycleTimeUnit");
        /** @type {?} */
        var smsTemplateElement = ExtensionMethod.GetAttributeValue(obj, 'SmsMessageTemplate');
        if (smsTemplateElement) {
            /** @type {?} */
            var smsMessageTemplate = new SmsMessageTemplate(this.Model);
            smsMessageTemplate.LoadFromJsonObject(smsTemplateElement);
            this.smsMessageTemplate = smsMessageTemplate;
        }
    };
    /**
     * @return {?}
     */
    SendMessageExpireOperation.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new SendMessageExpireOperation(this.Model);
    };
    /**
     * @return {?}
     */
    SendMessageExpireOperation.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var sendMessageExpireOperation = new SendMessageExpireOperation(this.Model);
        sendMessageExpireOperation.id = BpmnModelHelper.GenerateElementId();
        sendMessageExpireOperation.durationType = this.durationType;
        sendMessageExpireOperation.timeDuration = this.timeDuration;
        sendMessageExpireOperation.timeUnit = this.timeUnit;
        sendMessageExpireOperation.message = this.message;
        sendMessageExpireOperation.sendType = this.sendType;
        sendMessageExpireOperation.subject = this.subject;
        sendMessageExpireOperation.receiver = this.receiver;
        sendMessageExpireOperation.receiverText = this.receiverText;
        sendMessageExpireOperation.cycleEnable = this.cycleEnable;
        sendMessageExpireOperation.cycleTime = this.cycleTime;
        sendMessageExpireOperation.cycleTimeUnit = this.cycleTimeUnit;
        if (this.smsMessageTemplate) {
            sendMessageExpireOperation.smsMessageTemplate = this.smsMessageTemplate.clone();
        }
        return sendMessageExpireOperation;
    };
    SendMessageExpireOperation.Clr_Type_ID = "wf.Mex.SendMessageExpireOperation";
    return SendMessageExpireOperation;
}(ExpireOperation));
export { SendMessageExpireOperation };
if (false) {
    /** @type {?} */
    SendMessageExpireOperation.Clr_Type_ID;
    /** @type {?} */
    SendMessageExpireOperation.prototype.ClrTypeID;
    /**
     * 预警信息内容
     * @type {?}
     */
    SendMessageExpireOperation.prototype.message;
    /**
     * 发送预警信息类型
     * @type {?}
     */
    SendMessageExpireOperation.prototype.sendType;
    /**
     * 预警信息主题
     * @type {?}
     */
    SendMessageExpireOperation.prototype.subject;
    /**
     * 消息接收人
     * 用户IDs
     * @type {?}
     */
    SendMessageExpireOperation.prototype.receiver;
    /**
     * 消息接收人显示
     * @type {?}
     */
    SendMessageExpireOperation.prototype.receiverText;
    /**
     * 开启循环预警
     * @type {?}
     */
    SendMessageExpireOperation.prototype.cycleEnable;
    /**
     * 循环预警时间间隔
     * @type {?}
     */
    SendMessageExpireOperation.prototype.cycleTime;
    /**
     * 循环预警时间间隔单位
     * @type {?}
     */
    SendMessageExpireOperation.prototype.cycleTimeUnit;
    /** @type {?} */
    SendMessageExpireOperation.prototype.smsMessageTemplate;
}
BpmnModelHelper.RegisterElementType(new SendMessageExpireOperation(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtbW9kZWwvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvU2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFMUQ7SUFBZ0Qsc0RBQWU7SUFBL0Q7UUFBQSxxRUFvSEM7UUFsSFksZUFBUyxHQUFXLDBCQUEwQixDQUFDLFdBQVcsQ0FBQzs7SUFrSHhFLENBQUM7Ozs7O0lBckVhLHdEQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztJQUNuQyxDQUFDOzs7O0lBRUQsd0RBQW1COzs7SUFBbkI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBQ3JDLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoRSxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEUsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hFLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNsRSxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FB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LE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ2xELDBCQUEwQixDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3BELDBCQUEwQixDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzVELDBCQUEwQixDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFELDBCQUEwQixDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3RELDBCQUEwQixDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBRTlELElBQUksSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQ3pCLDBCQUEwQixDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUNuRjtRQUVELE9BQU8sMEJBQTBCLENBQUM7SUFDdEMsQ0FBQztJQWpITSxzQ0FBVyxHQUFXLG1DQUFtQyxDQUFDO0lBbUhyRSxpQ0FBQztDQUFBLEFBcEhELENBQWdELGVBQWUsR0FvSDlEO1NBcEhZLDBCQUEwQjs7O0lBQ25DLHVDQUFpRTs7SUFDakUsK0NBQW9FOzs7OztJQUtwRSw2Q0FBZ0I7Ozs7O0lBS2hCLDhDQUFpQjs7Ozs7SUFLakIsNkNBQWdCOzs7Ozs7SUFNaEIsOENBQWlCOzs7OztJQUtqQixrREFBcUI7Ozs7O0lBS3JCLGlEQUFxQjs7Ozs7SUFLckIsK0NBQWtCOzs7OztJQUtsQixtREFBcUI7O0lBRXJCLHdEQUF1Qzs7QUF3RTNDLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLDBCQUEwQixDQUFDLElBQUksU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsLCBCcG1uTW9kZWxIZWxwZXIsIEV4dGVuc2lvbk1ldGhvZCB9IGZyb20gXCJAZWRwLXBtZi9icG1uLW1vZGVsXCI7XHJcbmltcG9ydCB7IEV4cGlyZU9wZXJhdGlvbiB9IGZyb20gXCIuL0V4cGlyZU9wZXJhdGlvblwiO1xyXG5pbXBvcnQgeyBTbXNNZXNzYWdlVGVtcGxhdGUgfSBmcm9tIFwiLi9TbXNNZXNzYWdlVGVtcGxhdGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbiBleHRlbmRzIEV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgICBzdGF0aWMgQ2xyX1R5cGVfSUQ6IHN0cmluZyA9IFwid2YuTWV4LlNlbmRNZXNzYWdlRXhwaXJlT3BlcmF0aW9uXCI7XHJcbiAgICByZWFkb25seSBDbHJUeXBlSUQ6IHN0cmluZyA9IFNlbmRNZXNzYWdlRXhwaXJlT3BlcmF0aW9uLkNscl9UeXBlX0lEO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICrpooTorabkv6Hmga/lhoXlrrlcclxuICAgICAqL1xyXG4gICAgbWVzc2FnZTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Y+R6YCB6aKE6K2m5L+h5oGv57G75Z6LXHJcbiAgICAgKi9cclxuICAgIHNlbmRUeXBlOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpooTorabkv6Hmga/kuLvpophcclxuICAgICAqL1xyXG4gICAgc3ViamVjdDogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5raI5oGv5o6l5pS25Lq6XHJcbiAgICAgKiDnlKjmiLdJRHNcclxuICAgICAqL1xyXG4gICAgcmVjZWl2ZXI6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOa2iOaBr+aOpeaUtuS6uuaYvuekulxyXG4gICAgICovXHJcbiAgICByZWNlaXZlclRleHQ6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOW8gOWQr+W+queOr+mihOitplxyXG4gICAgICovXHJcbiAgICBjeWNsZUVuYWJsZTogYm9vbGVhbjtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOW+queOr+mihOitpuaXtumXtOmXtOmalFxyXG4gICAgICovXHJcbiAgICBjeWNsZVRpbWU6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOW+queOr+mihOitpuaXtumXtOmXtOmalOWNleS9jVxyXG4gICAgICovXHJcbiAgICBjeWNsZVRpbWVVbml0OiBzdHJpbmdcclxuXHJcbiAgICBzbXNNZXNzYWdlVGVtcGxhdGU6IFNtc01lc3NhZ2VUZW1wbGF0ZTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcbiAgICAgICAgdGhpcy5zbXNNZXNzYWdlVGVtcGxhdGUgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIENvbnZlcnRUb0pzb25PYmplY3QoKTogYW55IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG4gICAgICAgIEV4dGVuc2lvbk1ldGhvZC5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiTWVzc2FnZVwiLCB0aGlzLm1lc3NhZ2UpO1xyXG4gICAgICAgIEV4dGVuc2lvbk1ldGhvZC5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiU2VuZFR5cGVcIiwgdGhpcy5zZW5kVHlwZSk7XHJcbiAgICAgICAgRXh0ZW5zaW9uTWV0aG9kLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJTdWJqZWN0XCIsIHRoaXMuc3ViamVjdCk7XHJcbiAgICAgICAgRXh0ZW5zaW9uTWV0aG9kLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJSZWNlaXZlclwiLCB0aGlzLnJlY2VpdmVyKTtcclxuICAgICAgICBFeHRlbnNpb25NZXRob2QuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIlJlY2VpdmVyVGV4dFwiLCB0aGlzLnJlY2VpdmVyVGV4dCk7XHJcbiAgICAgICAgRXh0ZW5zaW9uTWV0aG9kLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJDeWNsZUVuYWJsZVwiLCB0aGlzLmN5Y2xlRW5hYmxlKTtcclxuICAgICAgICBFeHRlbnNpb25NZXRob2QuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIkN5Y2xlVGltZVwiLCB0aGlzLmN5Y2xlVGltZSk7XHJcbiAgICAgICAgRXh0ZW5zaW9uTWV0aG9kLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJDeWNsZVRpbWVVbml0XCIsIHRoaXMuY3ljbGVUaW1lVW5pdCk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNtc01lc3NhZ2VUZW1wbGF0ZSkge1xyXG4gICAgICAgICAgICBFeHRlbnNpb25NZXRob2QuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIlNtc01lc3NhZ2VUZW1wbGF0ZVwiLCB0aGlzLnNtc01lc3NhZ2VUZW1wbGF0ZS5Db252ZXJ0VG9Kc29uT2JqZWN0KCkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiBhbnkpIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiTWVzc2FnZVwiKTtcclxuICAgICAgICB0aGlzLnNlbmRUeXBlID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiU2VuZFR5cGVcIik7XHJcbiAgICAgICAgdGhpcy5zdWJqZWN0ID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiU3ViamVjdFwiKTtcclxuICAgICAgICB0aGlzLnJlY2VpdmVyID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiUmVjZWl2ZXJcIik7XHJcbiAgICAgICAgdGhpcy5yZWNlaXZlclRleHQgPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWU0U3RyaW5nKG9iaiwgXCJSZWNlaXZlclRleHRcIik7XHJcbiAgICAgICAgdGhpcy5jeWNsZUVuYWJsZSA9IEV4dGVuc2lvbk1ldGhvZC5HZXRBdHRyaWJ1dGVWYWx1ZTRCb29sZWFuKG9iaiwgXCJDeWNsZUVuYWJsZVwiKTtcclxuICAgICAgICB0aGlzLmN5Y2xlVGltZSA9IEV4dGVuc2lvbk1ldGhvZC5HZXRBdHRyaWJ1dGVWYWx1ZTRTdHJpbmcob2JqLCBcIkN5Y2xlVGltZVwiKTtcclxuICAgICAgICB0aGlzLmN5Y2xlVGltZVVuaXQgPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWU0U3RyaW5nKG9iaiwgXCJDeWNsZVRpbWVVbml0XCIpO1xyXG5cclxuICAgICAgICBjb25zdCBzbXNUZW1wbGF0ZUVsZW1lbnQgPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWUob2JqLCAnU21zTWVzc2FnZVRlbXBsYXRlJyk7XHJcbiAgICAgICAgaWYgKHNtc1RlbXBsYXRlRWxlbWVudCkge1xyXG4gICAgICAgICAgICBjb25zdCBzbXNNZXNzYWdlVGVtcGxhdGUgPSBuZXcgU21zTWVzc2FnZVRlbXBsYXRlKHRoaXMuTW9kZWwpO1xyXG4gICAgICAgICAgICBzbXNNZXNzYWdlVGVtcGxhdGUuTG9hZEZyb21Kc29uT2JqZWN0KHNtc1RlbXBsYXRlRWxlbWVudCk7XHJcbiAgICAgICAgICAgIHRoaXMuc21zTWVzc2FnZVRlbXBsYXRlID0gc21zTWVzc2FnZVRlbXBsYXRlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBOZXdJbnN0YW5jZSgpOiBTZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBTZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbih0aGlzLk1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9uZSgpOiBTZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgICAgICAgY29uc3Qgc2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24gPSBuZXcgU2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24odGhpcy5Nb2RlbCk7XHJcbiAgICAgICAgc2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24uaWQgPSBCcG1uTW9kZWxIZWxwZXIuR2VuZXJhdGVFbGVtZW50SWQoKTtcclxuICAgICAgICBzZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbi5kdXJhdGlvblR5cGUgPSB0aGlzLmR1cmF0aW9uVHlwZTtcclxuICAgICAgICBzZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbi50aW1lRHVyYXRpb24gPSB0aGlzLnRpbWVEdXJhdGlvbjtcclxuICAgICAgICBzZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbi50aW1lVW5pdCA9IHRoaXMudGltZVVuaXQ7XHJcbiAgICAgICAgc2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24ubWVzc2FnZSA9IHRoaXMubWVzc2FnZTtcclxuICAgICAgICBzZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbi5zZW5kVHlwZSA9IHRoaXMuc2VuZFR5cGU7XHJcbiAgICAgICAgc2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24uc3ViamVjdCA9IHRoaXMuc3ViamVjdDtcclxuICAgICAgICBzZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbi5yZWNlaXZlciA9IHRoaXMucmVjZWl2ZXI7XHJcbiAgICAgICAgc2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24ucmVjZWl2ZXJUZXh0ID0gdGhpcy5yZWNlaXZlclRleHQ7XHJcbiAgICAgICAgc2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24uY3ljbGVFbmFibGUgPSB0aGlzLmN5Y2xlRW5hYmxlO1xyXG4gICAgICAgIHNlbmRNZXNzYWdlRXhwaXJlT3BlcmF0aW9uLmN5Y2xlVGltZSA9IHRoaXMuY3ljbGVUaW1lO1xyXG4gICAgICAgIHNlbmRNZXNzYWdlRXhwaXJlT3BlcmF0aW9uLmN5Y2xlVGltZVVuaXQgPSB0aGlzLmN5Y2xlVGltZVVuaXQ7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNtc01lc3NhZ2VUZW1wbGF0ZSkge1xyXG4gICAgICAgICAgICBzZW5kTWVzc2FnZUV4cGlyZU9wZXJhdGlvbi5zbXNNZXNzYWdlVGVtcGxhdGUgPSB0aGlzLnNtc01lc3NhZ2VUZW1wbGF0ZS5jbG9uZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHNlbmRNZXNzYWdlRXhwaXJlT3BlcmF0aW9uO1xyXG4gICAgfVxyXG5cclxufVxyXG5CcG1uTW9kZWxIZWxwZXIuUmVnaXN0ZXJFbGVtZW50VHlwZShuZXcgU2VuZE1lc3NhZ2VFeHBpcmVPcGVyYXRpb24obmV3IEJwbW5Nb2RlbCgpKSk7XHJcbiJdfQ==