/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionMethod, SignalEventDefinition } from "@edp-pmf/bpmn-model";
var SignalEventDefinitionImpl = /** @class */ (function (_super) {
    tslib_1.__extends(SignalEventDefinitionImpl, _super);
    function SignalEventDefinitionImpl(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = SignalEventDefinitionImpl.Clr_Type_ID;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    SignalEventDefinitionImpl.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
    };
    /**
     * @return {?}
     */
    SignalEventDefinitionImpl.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "Name", this.name);
        ExtensionMethod.SetAttributeValue(obj, "TriggerAction", this.triggerAction);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    SignalEventDefinitionImpl.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.name = ExtensionMethod.GetAttributeValue4String(obj, "Name");
        this.triggerAction = ExtensionMethod.GetAttributeValue4String(obj, "TriggerAction");
    };
    /**
     * @return {?}
     */
    SignalEventDefinitionImpl.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new SignalEventDefinitionImpl(this.Model);
    };
    /**
     * @return {?}
     */
    SignalEventDefinitionImpl.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var signalEventDefinitionImpl = new SignalEventDefinitionImpl(this.Model);
        signalEventDefinitionImpl.name = this.name;
        signalEventDefinitionImpl.triggerAction = this.triggerAction;
        signalEventDefinitionImpl.SignalExpression = this.SignalExpression;
        signalEventDefinitionImpl.SignalRef = this.SignalRef;
        signalEventDefinitionImpl.Async = this.Async;
        return signalEventDefinitionImpl;
    };
    SignalEventDefinitionImpl.Clr_Type_ID = "wf.SignalEventDefinitionImpl";
    return SignalEventDefinitionImpl;
}(SignalEventDefinition));
export { SignalEventDefinitionImpl };
if (false) {
    /** @type {?} */
    SignalEventDefinitionImpl.Clr_Type_ID;
    /** @type {?} */
    SignalEventDefinitionImpl.prototype.ClrTypeID;
    /** @type {?} */
    SignalEventDefinitionImpl.prototype.name;
    /** @type {?} */
    SignalEventDefinitionImpl.prototype.triggerAction;
}
BpmnModelHelper.RegisterElementType(new SignalEventDefinitionImpl(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbmFsRXZlbnREZWZpbml0aW9uSW1wbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1tb2RlbC8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9TaWduYWxFdmVudERlZmluaXRpb25JbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFekc7SUFBK0MscURBQXFCO0lBT2hFLG1DQUFZLEtBQWdCO1FBQTVCLFlBQ0ksa0JBQU0sS0FBSyxDQUFDLFNBQ2Y7UUFQUSxlQUFTLEdBQVcseUJBQXlCLENBQUMsV0FBVyxDQUFDOztJQU9uRSxDQUFDOzs7OztJQUVTLHVEQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELHVEQUFtQjs7O0lBQW5COztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUNyQyxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUQsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxlQUFlLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBRTVFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFRCxzREFBa0I7Ozs7SUFBbEIsVUFBbUIsR0FBUTtRQUN2QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsSUFBSSxHQUFHLGVBQWUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLGFBQWEsR0FBRyxlQUFlLENBQUMsd0JBQXdCLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ3hGLENBQUM7Ozs7SUFFRCwrQ0FBVzs7O0lBQVg7UUFDSSxPQUFPLElBQUkseUJBQXlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7SUFFRCx5Q0FBSzs7O0lBQUw7O1lBQ1UseUJBQXlCLEdBQUcsSUFBSSx5QkFBeUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzNFLHlCQUF5QixDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzNDLHlCQUF5QixDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQzdELHlCQUF5QixDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztRQUNuRSx5QkFBeUIsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNyRCx5QkFBeUIsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUU3QyxPQUFPLHlCQUF5QixDQUFDO0lBQ3JDLENBQUM7SUExQ00scUNBQVcsR0FBVyw4QkFBOEIsQ0FBQztJQTRDaEUsZ0NBQUM7Q0FBQSxBQTdDRCxDQUErQyxxQkFBcUIsR0E2Q25FO1NBN0NZLHlCQUF5Qjs7O0lBQ2xDLHNDQUE0RDs7SUFDNUQsOENBQW1FOztJQUVuRSx5Q0FBYTs7SUFDYixrREFBc0I7O0FBeUMxQixlQUFlLENBQUMsbUJBQW1CLENBQUMsSUFBSSx5QkFBeUIsQ0FBQyxJQUFJLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbCwgQnBtbk1vZGVsSGVscGVyLCBFeHRlbnNpb25NZXRob2QsIFNpZ25hbEV2ZW50RGVmaW5pdGlvbiB9IGZyb20gXCJAZWRwLXBtZi9icG1uLW1vZGVsXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU2lnbmFsRXZlbnREZWZpbml0aW9uSW1wbCBleHRlbmRzIFNpZ25hbEV2ZW50RGVmaW5pdGlvbiB7XHJcbiAgICBzdGF0aWMgQ2xyX1R5cGVfSUQ6IHN0cmluZyA9IFwid2YuU2lnbmFsRXZlbnREZWZpbml0aW9uSW1wbFwiO1xyXG4gICAgcmVhZG9ubHkgQ2xyVHlwZUlEOiBzdHJpbmcgPSBTaWduYWxFdmVudERlZmluaXRpb25JbXBsLkNscl9UeXBlX0lEO1xyXG5cclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHRyaWdnZXJBY3Rpb246IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihtb2RlbDogQnBtbk1vZGVsKSB7XHJcbiAgICAgICAgc3VwZXIobW9kZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCkge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuICAgIH1cclxuXHJcbiAgICBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IGFueSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuICAgICAgICBFeHRlbnNpb25NZXRob2QuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIk5hbWVcIiwgdGhpcy5uYW1lKTtcclxuICAgICAgICBFeHRlbnNpb25NZXRob2QuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIlRyaWdnZXJBY3Rpb25cIiwgdGhpcy50cmlnZ2VyQWN0aW9uKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiBhbnkpIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5uYW1lID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiTmFtZVwiKTtcclxuICAgICAgICB0aGlzLnRyaWdnZXJBY3Rpb24gPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWU0U3RyaW5nKG9iaiwgXCJUcmlnZ2VyQWN0aW9uXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIE5ld0luc3RhbmNlKCk6IFNpZ25hbEV2ZW50RGVmaW5pdGlvbkltcGwge1xyXG4gICAgICAgIHJldHVybiBuZXcgU2lnbmFsRXZlbnREZWZpbml0aW9uSW1wbCh0aGlzLk1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9uZSgpOiBTaWduYWxFdmVudERlZmluaXRpb25JbXBsIHtcclxuICAgICAgICBjb25zdCBzaWduYWxFdmVudERlZmluaXRpb25JbXBsID0gbmV3IFNpZ25hbEV2ZW50RGVmaW5pdGlvbkltcGwodGhpcy5Nb2RlbCk7XHJcbiAgICAgICAgc2lnbmFsRXZlbnREZWZpbml0aW9uSW1wbC5uYW1lID0gdGhpcy5uYW1lO1xyXG4gICAgICAgIHNpZ25hbEV2ZW50RGVmaW5pdGlvbkltcGwudHJpZ2dlckFjdGlvbiA9IHRoaXMudHJpZ2dlckFjdGlvbjtcclxuICAgICAgICBzaWduYWxFdmVudERlZmluaXRpb25JbXBsLlNpZ25hbEV4cHJlc3Npb24gPSB0aGlzLlNpZ25hbEV4cHJlc3Npb247XHJcbiAgICAgICAgc2lnbmFsRXZlbnREZWZpbml0aW9uSW1wbC5TaWduYWxSZWYgPSB0aGlzLlNpZ25hbFJlZjtcclxuICAgICAgICBzaWduYWxFdmVudERlZmluaXRpb25JbXBsLkFzeW5jID0gdGhpcy5Bc3luYztcclxuXHJcbiAgICAgICAgcmV0dXJuIHNpZ25hbEV2ZW50RGVmaW5pdGlvbkltcGw7XHJcbiAgICB9XHJcblxyXG59XHJcbkJwbW5Nb2RlbEhlbHBlci5SZWdpc3RlckVsZW1lbnRUeXBlKG5ldyBTaWduYWxFdmVudERlZmluaXRpb25JbXBsKG5ldyBCcG1uTW9kZWwoKSkpOyJdfQ==