/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from "@edp-pmf/bpmn-model";
var ExtendProperty = /** @class */ (function (_super) {
    tslib_1.__extends(ExtendProperty, _super);
    function ExtendProperty(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = ExtendProperty.Clr_Type_ID;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    ExtendProperty.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
    };
    /**
     * @return {?}
     */
    ExtendProperty.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "Key", this.key);
        ExtensionMethod.SetAttributeValue(obj, "Value", this.value);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ExtendProperty.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.key = ExtensionMethod.GetAttributeValue4String(obj, "Key");
        this.value = ExtensionMethod.GetAttributeValue4String(obj, "Value");
    };
    /**
     * @return {?}
     */
    ExtendProperty.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new ExtendProperty(this.Model);
    };
    /**
     * @return {?}
     */
    ExtendProperty.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var extendProperty = new ExtendProperty(this.Model);
        extendProperty.key = this.key;
        extendProperty.value = this.value;
        return extendProperty;
    };
    ExtendProperty.Clr_Type_ID = "wf.ExtendProperty";
    return ExtendProperty;
}(ExtensionElement));
export { ExtendProperty };
if (false) {
    /** @type {?} */
    ExtendProperty.Clr_Type_ID;
    /** @type {?} */
    ExtendProperty.prototype.ClrTypeID;
    /**
     * 扩展属性key值
     * @type {?}
     */
    ExtendProperty.prototype.key;
    /**
     * 扩展属性value值
     * @type {?}
     */
    ExtendProperty.prototype.value;
}
BpmnModelHelper.RegisterElementType(new ExtendProperty(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXh0ZW5kUHJvcGVydHkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtbW9kZWwvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvRXh0ZW5kUHJvcGVydHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVwRztJQUFvQywwQ0FBZ0I7SUFhaEQsd0JBQVksS0FBZ0I7UUFBNUIsWUFDSSxrQkFBTSxLQUFLLENBQUMsU0FDZjtRQWJRLGVBQVMsR0FBVyxjQUFjLENBQUMsV0FBVyxDQUFDOztJQWF4RCxDQUFDOzs7OztJQUVTLDRDQUFtQjs7OztJQUE3QjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELDRDQUFtQjs7O0lBQW5COztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUNyQyxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEQsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTVELE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFRCwyQ0FBa0I7Ozs7SUFBbEIsVUFBbUIsR0FBUTtRQUN2QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsR0FBRyxHQUFHLGVBQWUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUMsd0JBQXdCLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3hFLENBQUM7Ozs7SUFFRCxvQ0FBVzs7O0lBQVg7UUFDSSxPQUFPLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQyxDQUFDOzs7O0lBRUQsOEJBQUs7OztJQUFMOztZQUNVLGNBQWMsR0FBRyxJQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3JELGNBQWMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUM5QixjQUFjLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFFbEMsT0FBTyxjQUFjLENBQUM7SUFDMUIsQ0FBQztJQTdDTSwwQkFBVyxHQUFXLG1CQUFtQixDQUFDO0lBOENyRCxxQkFBQztDQUFBLEFBL0NELENBQW9DLGdCQUFnQixHQStDbkQ7U0EvQ1ksY0FBYzs7O0lBQ3ZCLDJCQUFpRDs7SUFDakQsbUNBQXdEOzs7OztJQUt4RCw2QkFBWTs7Ozs7SUFJWiwrQkFBYzs7QUFxQ2xCLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLGNBQWMsQ0FBQyxJQUFJLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbCwgQnBtbk1vZGVsSGVscGVyLCBFeHRlbnNpb25FbGVtZW50LCBFeHRlbnNpb25NZXRob2QgfSBmcm9tIFwiQGVkcC1wbWYvYnBtbi1tb2RlbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEV4dGVuZFByb3BlcnR5IGV4dGVuZHMgRXh0ZW5zaW9uRWxlbWVudCB7XHJcbiAgICBzdGF0aWMgQ2xyX1R5cGVfSUQ6IHN0cmluZyA9IFwid2YuRXh0ZW5kUHJvcGVydHlcIjtcclxuICAgIHJlYWRvbmx5IENsclR5cGVJRDogc3RyaW5nID0gRXh0ZW5kUHJvcGVydHkuQ2xyX1R5cGVfSUQ7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmianlsZXlsZ7mgKdrZXnlgLxcclxuICAgICAqL1xyXG4gICAga2V5OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOaJqeWxleWxnuaAp3ZhbHVl5YC8XHJcbiAgICAgKi9cclxuICAgIHZhbHVlOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IobW9kZWw6IEJwbW5Nb2RlbCkge1xyXG4gICAgICAgIHN1cGVyKG1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcbiAgICB9XHJcblxyXG4gICAgQ29udmVydFRvSnNvbk9iamVjdCgpOiBhbnkge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcbiAgICAgICAgRXh0ZW5zaW9uTWV0aG9kLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJLZXlcIiwgdGhpcy5rZXkpO1xyXG4gICAgICAgIEV4dGVuc2lvbk1ldGhvZC5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiVmFsdWVcIiwgdGhpcy52YWx1ZSk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgTG9hZEZyb21Kc29uT2JqZWN0KG9iajogYW55KSB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMua2V5ID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiS2V5XCIpO1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWU0U3RyaW5nKG9iaiwgXCJWYWx1ZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBOZXdJbnN0YW5jZSgpOiBFeHRlbmRQcm9wZXJ0eSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBFeHRlbmRQcm9wZXJ0eSh0aGlzLk1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9uZSgpOiBFeHRlbmRQcm9wZXJ0eSB7XHJcbiAgICAgICAgY29uc3QgZXh0ZW5kUHJvcGVydHkgPSBuZXcgRXh0ZW5kUHJvcGVydHkodGhpcy5Nb2RlbCk7XHJcbiAgICAgICAgZXh0ZW5kUHJvcGVydHkua2V5ID0gdGhpcy5rZXk7XHJcbiAgICAgICAgZXh0ZW5kUHJvcGVydHkudmFsdWUgPSB0aGlzLnZhbHVlO1xyXG5cclxuICAgICAgICByZXR1cm4gZXh0ZW5kUHJvcGVydHk7XHJcbiAgICB9XHJcbn1cclxuQnBtbk1vZGVsSGVscGVyLlJlZ2lzdGVyRWxlbWVudFR5cGUobmV3IEV4dGVuZFByb3BlcnR5KG5ldyBCcG1uTW9kZWwoKSkpO1xyXG4iXX0=