/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, CustomType } from "@edp-pmf/bpmn-model";
var CDTSchemaType = /** @class */ (function (_super) {
    tslib_1.__extends(CDTSchemaType, _super);
    function CDTSchemaType(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = CDTSchemaType.Clr_Type_ID;
        return _this;
    }
    /**
     * @return {?}
     */
    CDTSchemaType.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new CDTSchemaType(this.Model);
    };
    /**
     * @return {?}
     */
    CDTSchemaType.prototype.ResetBeforeLoadFrom = /**
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.MetadataId = null;
    };
    /**
     * @return {?}
     */
    CDTSchemaType.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "SchemaId", this.SchemaId);
        BpmnModelHelper.SetAttributeValue(obj, "MetadataId", this.MetadataId);
        BpmnModelHelper.SetAttributeValue(obj, "ComponentId", this.ComponentId);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    CDTSchemaType.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.SchemaId = obj.SchemaId;
        this.MetadataId = obj.MetadataId;
        this.ComponentId = obj.ComponentId;
    };
    CDTSchemaType.Clr_Type_ID = "wf.CDTSchemaType";
    return CDTSchemaType;
}(CustomType));
export { CDTSchemaType };
if (false) {
    /** @type {?} */
    CDTSchemaType.Clr_Type_ID;
    /** @type {?} */
    CDTSchemaType.prototype.ClrTypeID;
    /** @type {?} */
    CDTSchemaType.prototype.SchemaId;
    /** @type {?} */
    CDTSchemaType.prototype.MetadataId;
    /** @type {?} */
    CDTSchemaType.prototype.ComponentId;
}
BpmnModelHelper.RegisterElementType(new CDTSchemaType(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ0RUU2NoZW1hVHlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1tb2RlbC8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9tZXgvQ0RUU2NoZW1hVHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTdFO0lBQW1DLHlDQUFVO0lBQ3pDLHVCQUFZLEtBQWdCO1FBQTVCLFlBQ0ksa0JBQU0sS0FBSyxDQUFDLFNBQ2Y7UUFPRCxlQUFTLEdBQVcsYUFBYSxDQUFDLFdBQVcsQ0FBQzs7SUFQOUMsQ0FBQzs7OztJQUVELG1DQUFXOzs7SUFBWDtRQUNJLE9BQU8sSUFBSSxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pDLENBQUM7Ozs7SUFjRCwyQ0FBbUI7OztJQUFuQjtRQUNJLGlCQUFNLG1CQUFtQixXQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDM0IsQ0FBQzs7OztJQUVELDJDQUFtQjs7O0lBQW5COztZQUNRLEdBQUcsR0FBRyxpQkFBTSxtQkFBbUIsV0FBRTtRQUVyQyxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEUsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxZQUFZLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3RFLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUV4RSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRUQsMENBQWtCOzs7O0lBQWxCLFVBQW1CLEdBQVE7UUFDdkIsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQzdCLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztRQUNqQyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7SUFDdkMsQ0FBQztJQWpDTSx5QkFBVyxHQUFXLGtCQUFrQixDQUFDO0lBa0NwRCxvQkFBQztDQUFBLEFBM0NELENBQW1DLFVBQVUsR0EyQzVDO1NBM0NZLGFBQWE7OztJQVN0QiwwQkFBZ0Q7O0lBQ2hELGtDQUE4Qzs7SUFHOUMsaUNBQWlCOztJQUdqQixtQ0FBbUI7O0lBR25CLG9DQUFvQjs7QUF5QnhCLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLGFBQWEsQ0FBQyxJQUFJLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbCwgQnBtbk1vZGVsSGVscGVyLCBDdXN0b21UeXBlIH0gZnJvbSBcIkBlZHAtcG1mL2JwbW4tbW9kZWxcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBDRFRTY2hlbWFUeXBlIGV4dGVuZHMgQ3VzdG9tVHlwZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihtb2RlbDogQnBtbk1vZGVsKSB7XHJcbiAgICAgICAgc3VwZXIobW9kZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIE5ld0luc3RhbmNlKCk6IENEVFNjaGVtYVR5cGUge1xyXG4gICAgICAgIHJldHVybiBuZXcgQ0RUU2NoZW1hVHlwZSh0aGlzLk1vZGVsKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgQ2xyX1R5cGVfSUQ6IHN0cmluZyA9IFwid2YuQ0RUU2NoZW1hVHlwZVwiO1xyXG4gICAgQ2xyVHlwZUlEOiBzdHJpbmcgPSBDRFRTY2hlbWFUeXBlLkNscl9UeXBlX0lEO1xyXG5cclxuICAgIC8vU2NoZW1hSWTlr7nlupRDT0lkL0NEVElkXHJcbiAgICBTY2hlbWFJZDogc3RyaW5nO1xyXG5cclxuICAgIC8v5a+55bqUQmXnmoRNZXRhZGF0YUlkXHJcbiAgICBNZXRhZGF0YUlkOiBzdHJpbmc7XHJcblxyXG4gICAgLy/lj5bmlbDmnoTku7ZJZFxyXG4gICAgQ29tcG9uZW50SWQ6IHN0cmluZztcclxuXHJcbiAgICBSZXNldEJlZm9yZUxvYWRGcm9tKCkge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuICAgICAgICB0aGlzLk1ldGFkYXRhSWQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIENvbnZlcnRUb0pzb25PYmplY3QoKTogYW55IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxIZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIlNjaGVtYUlkXCIsIHRoaXMuU2NoZW1hSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiTWV0YWRhdGFJZFwiLCB0aGlzLk1ldGFkYXRhSWQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiQ29tcG9uZW50SWRcIiwgdGhpcy5Db21wb25lbnRJZCk7XHJcblxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgTG9hZEZyb21Kc29uT2JqZWN0KG9iajogYW55KSB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcblxyXG4gICAgICAgIHRoaXMuU2NoZW1hSWQgPSBvYmouU2NoZW1hSWQ7XHJcbiAgICAgICAgdGhpcy5NZXRhZGF0YUlkID0gb2JqLk1ldGFkYXRhSWQ7XHJcbiAgICAgICAgdGhpcy5Db21wb25lbnRJZCA9IG9iai5Db21wb25lbnRJZDtcclxuICAgIH1cclxufVxyXG5CcG1uTW9kZWxIZWxwZXIuUmVnaXN0ZXJFbGVtZW50VHlwZShuZXcgQ0RUU2NoZW1hVHlwZShuZXcgQnBtbk1vZGVsKCkpKTsiXX0=