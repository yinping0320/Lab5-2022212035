/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, MexExtensionElement } from "@edp-pmf/bpmn-model";
var ActualParameter = /** @class */ (function (_super) {
    tslib_1.__extends(ActualParameter, _super);
    function ActualParameter(model, name, value, valueText, tag) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = ActualParameter.Clr_Type_ID;
        _this.Name = name;
        _this.Value = value;
        _this.ValueText = valueText;
        _this.Tag = tag;
        return _this;
    }
    /**
     * @return {?}
     */
    ActualParameter.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new ActualParameter(this.Model);
    };
    /**
     * @protected
     * @return {?}
     */
    ActualParameter.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
    };
    /**
     * @return {?}
     */
    ActualParameter.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "Name", this.Name);
        BpmnModelHelper.SetAttributeValue(obj, "Value", this.Value);
        BpmnModelHelper.SetAttributeValue(obj, "ValueText", this.ValueText);
        BpmnModelHelper.SetAttributeValue(obj, "Tag", this.Tag);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ActualParameter.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.Name = obj.Name;
        this.Value = obj.Value;
        this.ValueText = obj.ValueText;
        this.Tag = obj.Tag;
    };
    /**
     * @return {?}
     */
    ActualParameter.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var parameter = new ActualParameter(this.Model);
        parameter.Name = this.Name;
        parameter.Value = this.Value;
        parameter.Tag = this.Tag;
        parameter.ValueText = this.ValueText;
        return parameter;
    };
    ActualParameter.Clr_Type_ID = "wf.Mex.ActualParameter";
    return ActualParameter;
}(MexExtensionElement));
export { ActualParameter };
if (false) {
    /** @type {?} */
    ActualParameter.Clr_Type_ID;
    /** @type {?} */
    ActualParameter.prototype.ClrTypeID;
    /** @type {?} */
    ActualParameter.prototype.Name;
    /** @type {?} */
    ActualParameter.prototype.Value;
    /** @type {?} */
    ActualParameter.prototype.ValueText;
    /** @type {?} */
    ActualParameter.prototype.Tag;
}
BpmnModelHelper.RegisterElementType(new ActualParameter(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV0ZBY3R1YWxQYXJhbWV0ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtbW9kZWwvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvcGFyYW1ldGVyL1dGQWN0dWFsUGFyYW1ldGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV0RjtJQUFxQywyQ0FBbUI7SUFhcEQseUJBQVksS0FBZ0IsRUFBRSxJQUFhLEVBQUUsS0FBYyxFQUFFLFNBQWtCLEVBQUUsR0FBWTtRQUE3RixZQUNJLGtCQUFNLEtBQUssQ0FBQyxTQUtmO1FBakJELGVBQVMsR0FBVyxlQUFlLENBQUMsV0FBVyxDQUFDO1FBYTVDLEtBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLEtBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLEtBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLEtBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDOztJQUNuQixDQUFDOzs7O0lBZkQscUNBQVc7OztJQUFYO1FBQ0ksT0FBTyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQzs7Ozs7SUFlUyw2Q0FBbUI7Ozs7SUFBN0I7UUFDSSxpQkFBTSxtQkFBbUIsV0FBRSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCw2Q0FBbUI7OztJQUFuQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFFckMsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFELGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM1RCxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEUsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRXhELE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFRCw0Q0FBa0I7Ozs7SUFBbEIsVUFBbUIsR0FBUTtRQUN2QixpQkFBTSxrQkFBa0IsWUFBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztRQUMvQixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUM7SUFDdkIsQ0FBQzs7OztJQUVELCtCQUFLOzs7SUFBTDs7WUFDVSxTQUFTLEdBQUcsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNqRCxTQUFTLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDM0IsU0FBUyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzdCLFNBQVMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUN6QixTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFckMsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQXBETSwyQkFBVyxHQUFXLHdCQUF3QixDQUFDO0lBcUQxRCxzQkFBQztDQUFBLEFBdERELENBQXFDLG1CQUFtQixHQXNEdkQ7U0F0RFksZUFBZTs7O0lBQ3hCLDRCQUFzRDs7SUFDdEQsb0NBQWdEOztJQU1oRCwrQkFBYTs7SUFDYixnQ0FBYzs7SUFDZCxvQ0FBa0I7O0lBQ2xCLDhCQUFZOztBQTRDaEIsZUFBZSxDQUFDLG1CQUFtQixDQUFDLElBQUksZUFBZSxDQUFDLElBQUksU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnBtbk1vZGVsLCBCcG1uTW9kZWxIZWxwZXIsIE1leEV4dGVuc2lvbkVsZW1lbnQgfSBmcm9tIFwiQGVkcC1wbWYvYnBtbi1tb2RlbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFjdHVhbFBhcmFtZXRlciBleHRlbmRzIE1leEV4dGVuc2lvbkVsZW1lbnQge1xyXG4gICAgc3RhdGljIENscl9UeXBlX0lEOiBzdHJpbmcgPSBcIndmLk1leC5BY3R1YWxQYXJhbWV0ZXJcIjtcclxuICAgIENsclR5cGVJRDogc3RyaW5nID0gQWN0dWFsUGFyYW1ldGVyLkNscl9UeXBlX0lEO1xyXG5cclxuICAgIE5ld0luc3RhbmNlKCk6IEFjdHVhbFBhcmFtZXRlciB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBBY3R1YWxQYXJhbWV0ZXIodGhpcy5Nb2RlbCk7XHJcbiAgICB9XHJcblxyXG4gICAgTmFtZTogc3RyaW5nO1xyXG4gICAgVmFsdWU6IHN0cmluZztcclxuICAgIFZhbHVlVGV4dDogc3RyaW5nO1xyXG4gICAgVGFnOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IobW9kZWw6IEJwbW5Nb2RlbCwgbmFtZT86IHN0cmluZywgdmFsdWU/OiBzdHJpbmcsIHZhbHVlVGV4dD86IHN0cmluZywgdGFnPzogc3RyaW5nKSB7XHJcbiAgICAgICAgc3VwZXIobW9kZWwpO1xyXG4gICAgICAgIHRoaXMuTmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5WYWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuVmFsdWVUZXh0ID0gdmFsdWVUZXh0O1xyXG4gICAgICAgIHRoaXMuVGFnID0gdGFnO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCkge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuICAgIH1cclxuXHJcbiAgICBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IGFueSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJOYW1lXCIsIHRoaXMuTmFtZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJWYWx1ZVwiLCB0aGlzLlZhbHVlKTtcclxuICAgICAgICBCcG1uTW9kZWxIZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIlZhbHVlVGV4dFwiLCB0aGlzLlZhbHVlVGV4dCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJUYWdcIiwgdGhpcy5UYWcpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IGFueSkge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLk5hbWUgPSBvYmouTmFtZTtcclxuICAgICAgICB0aGlzLlZhbHVlID0gb2JqLlZhbHVlO1xyXG4gICAgICAgIHRoaXMuVmFsdWVUZXh0ID0gb2JqLlZhbHVlVGV4dDtcclxuICAgICAgICB0aGlzLlRhZyA9IG9iai5UYWc7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvbmUoKTogQWN0dWFsUGFyYW1ldGVyIHtcclxuICAgICAgICBjb25zdCBwYXJhbWV0ZXIgPSBuZXcgQWN0dWFsUGFyYW1ldGVyKHRoaXMuTW9kZWwpO1xyXG4gICAgICAgIHBhcmFtZXRlci5OYW1lID0gdGhpcy5OYW1lO1xyXG4gICAgICAgIHBhcmFtZXRlci5WYWx1ZSA9IHRoaXMuVmFsdWU7XHJcbiAgICAgICAgcGFyYW1ldGVyLlRhZyA9IHRoaXMuVGFnO1xyXG4gICAgICAgIHBhcmFtZXRlci5WYWx1ZVRleHQgPSB0aGlzLlZhbHVlVGV4dDtcclxuXHJcbiAgICAgICAgcmV0dXJuIHBhcmFtZXRlcjtcclxuICAgIH1cclxufVxyXG5CcG1uTW9kZWxIZWxwZXIuUmVnaXN0ZXJFbGVtZW50VHlwZShuZXcgQWN0dWFsUGFyYW1ldGVyKG5ldyBCcG1uTW9kZWwoKSkpOyJdfQ==