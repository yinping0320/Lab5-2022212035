/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionMethod } from "@edp-pmf/bpmn-model";
import { ExpireOperation } from "./ExpireOperation";
var AutoHandleExpireOperation = /** @class */ (function (_super) {
    tslib_1.__extends(AutoHandleExpireOperation, _super);
    function AutoHandleExpireOperation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ClrTypeID = AutoHandleExpireOperation.Clr_Type_ID;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    AutoHandleExpireOperation.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
    };
    /**
     * @return {?}
     */
    AutoHandleExpireOperation.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "Message", this.message);
        ExtensionMethod.SetAttributeValue(obj, "AutoHandleType", this.autoHandleType);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    AutoHandleExpireOperation.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.message = ExtensionMethod.GetAttributeValue4String(obj, "Message");
        this.autoHandleType = ExtensionMethod.GetAttributeValue4String(obj, "AutoHandleType");
    };
    /**
     * @return {?}
     */
    AutoHandleExpireOperation.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new AutoHandleExpireOperation(this.Model);
    };
    /**
     * @return {?}
     */
    AutoHandleExpireOperation.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var autoHandleExpireOperation = new AutoHandleExpireOperation(this.Model);
        autoHandleExpireOperation.id = BpmnModelHelper.GenerateElementId();
        autoHandleExpireOperation.durationType = this.durationType;
        autoHandleExpireOperation.timeDuration = this.timeDuration;
        autoHandleExpireOperation.timeUnit = this.timeUnit;
        autoHandleExpireOperation.message = this.message;
        autoHandleExpireOperation.autoHandleType = this.autoHandleType;
        return autoHandleExpireOperation;
    };
    AutoHandleExpireOperation.Clr_Type_ID = "wf.Mex.AutoHandleExpireOperation";
    return AutoHandleExpireOperation;
}(ExpireOperation));
export { AutoHandleExpireOperation };
if (false) {
    /** @type {?} */
    AutoHandleExpireOperation.Clr_Type_ID;
    /** @type {?} */
    AutoHandleExpireOperation.prototype.ClrTypeID;
    /**
     * 办理类型，通过驳回否决等等
     * @type {?}
     */
    AutoHandleExpireOperation.prototype.autoHandleType;
    /**
     * 办理意见
     * @type {?}
     */
    AutoHandleExpireOperation.prototype.message;
}
BpmnModelHelper.RegisterElementType(new AutoHandleExpireOperation(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1tb2RlbC8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9BdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFvQixNQUFNLHFCQUFxQixDQUFDO0FBQ3BHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVwRDtJQUErQyxxREFBZTtJQUE5RDtRQUFBLHFFQWdEQztRQTlDWSxlQUFTLEdBQVcseUJBQXlCLENBQUMsV0FBVyxDQUFDOztJQThDdkUsQ0FBQzs7Ozs7SUFsQ2EsdURBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsdURBQW1COzs7SUFBbkI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBQ3JDLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoRSxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUU5RSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRUQsc0RBQWtCOzs7O0lBQWxCLFVBQW1CLEdBQVE7UUFDdkIsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxlQUFlLENBQUMsd0JBQXdCLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ3hFLElBQUksQ0FBQyxjQUFjLEdBQUcsZUFBZSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzFGLENBQUM7Ozs7SUFFRCwrQ0FBVzs7O0lBQVg7UUFDSSxPQUFPLElBQUkseUJBQXlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7SUFFRCx5Q0FBSzs7O0lBQUw7O1lBQ1UseUJBQXlCLEdBQUcsSUFBSSx5QkFBeUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzNFLHlCQUF5QixDQUFDLEVBQUUsR0FBRyxlQUFlLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUNuRSx5QkFBeUIsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzRCx5QkFBeUIsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzRCx5QkFBeUIsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNuRCx5QkFBeUIsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUNqRCx5QkFBeUIsQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUUvRCxPQUFPLHlCQUF5QixDQUFDO0lBQ3JDLENBQUM7SUE5Q00scUNBQVcsR0FBVyxrQ0FBa0MsQ0FBQztJQStDcEUsZ0NBQUM7Q0FBQSxBQWhERCxDQUErQyxlQUFlLEdBZ0Q3RDtTQWhEWSx5QkFBeUI7OztJQUNsQyxzQ0FBZ0U7O0lBQ2hFLDhDQUFtRTs7Ozs7SUFLbkUsbURBQXVCOzs7OztJQUt2Qiw0Q0FBZ0I7O0FBcUNwQixlQUFlLENBQUMsbUJBQW1CLENBQUMsSUFBSSx5QkFBeUIsQ0FBQyxJQUFJLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbCwgQnBtbk1vZGVsSGVscGVyLCBFeHRlbnNpb25NZXRob2QsIEV4dGVuc2lvbkVsZW1lbnQgfSBmcm9tIFwiQGVkcC1wbWYvYnBtbi1tb2RlbFwiO1xyXG5pbXBvcnQgeyBFeHBpcmVPcGVyYXRpb24gfSBmcm9tIFwiLi9FeHBpcmVPcGVyYXRpb25cIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBBdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uIGV4dGVuZHMgRXhwaXJlT3BlcmF0aW9uIHtcclxuICAgIHN0YXRpYyBDbHJfVHlwZV9JRDogc3RyaW5nID0gXCJ3Zi5NZXguQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvblwiO1xyXG4gICAgcmVhZG9ubHkgQ2xyVHlwZUlEOiBzdHJpbmcgPSBBdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uLkNscl9UeXBlX0lEO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqe55CG57G75Z6L77yM6YCa6L+H6amz5Zue5ZCm5Yaz562J562JXHJcbiAgICAgKi9cclxuICAgIGF1dG9IYW5kbGVUeXBlOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlip7nkIbmhI/op4FcclxuICAgICAqL1xyXG4gICAgbWVzc2FnZTogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCkge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuICAgIH1cclxuXHJcbiAgICBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IGFueSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuICAgICAgICBFeHRlbnNpb25NZXRob2QuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIk1lc3NhZ2VcIiwgdGhpcy5tZXNzYWdlKTtcclxuICAgICAgICBFeHRlbnNpb25NZXRob2QuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIkF1dG9IYW5kbGVUeXBlXCIsIHRoaXMuYXV0b0hhbmRsZVR5cGUpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IGFueSkge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWU0U3RyaW5nKG9iaiwgXCJNZXNzYWdlXCIpO1xyXG4gICAgICAgIHRoaXMuYXV0b0hhbmRsZVR5cGUgPSBFeHRlbnNpb25NZXRob2QuR2V0QXR0cmlidXRlVmFsdWU0U3RyaW5nKG9iaiwgXCJBdXRvSGFuZGxlVHlwZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBOZXdJbnN0YW5jZSgpOiBBdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uIHtcclxuICAgICAgICByZXR1cm4gbmV3IEF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24odGhpcy5Nb2RlbCk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvbmUoKTogQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgICAgICAgY29uc3QgYXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbiA9IG5ldyBBdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uKHRoaXMuTW9kZWwpO1xyXG4gICAgICAgIGF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24uaWQgPSBCcG1uTW9kZWxIZWxwZXIuR2VuZXJhdGVFbGVtZW50SWQoKTtcclxuICAgICAgICBhdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uLmR1cmF0aW9uVHlwZSA9IHRoaXMuZHVyYXRpb25UeXBlO1xyXG4gICAgICAgIGF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24udGltZUR1cmF0aW9uID0gdGhpcy50aW1lRHVyYXRpb247XHJcbiAgICAgICAgYXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbi50aW1lVW5pdCA9IHRoaXMudGltZVVuaXQ7XHJcbiAgICAgICAgYXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbi5tZXNzYWdlID0gdGhpcy5tZXNzYWdlO1xyXG4gICAgICAgIGF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24uYXV0b0hhbmRsZVR5cGUgPSB0aGlzLmF1dG9IYW5kbGVUeXBlO1xyXG5cclxuICAgICAgICByZXR1cm4gYXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbjtcclxuICAgIH1cclxufVxyXG5CcG1uTW9kZWxIZWxwZXIuUmVnaXN0ZXJFbGVtZW50VHlwZShuZXcgQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbihuZXcgQnBtbk1vZGVsKCkpKTtcclxuIl19