/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { HumanPerformer } from "@edp-pmf/bpmn-model";
import { Condition } from "../../extension/condition-expression/Condition";
/**
 * @abstract
 */
var /**
 * @abstract
 */
Participant = /** @class */ (function (_super) {
    tslib_1.__extends(Participant, _super);
    function Participant(model, id, name) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = "wf.Participant";
        _this.MexTag = 'wf.Participant';
        _this.Id = id;
        _this.Name = name;
        return _this;
    }
    /**
     * @return {?}
     */
    Participant.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Participant.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
    };
    /**
     * @protected
     * @return {?}
     */
    Participant.prototype.GetExtensionElements4ConvertTo = /**
     * @protected
     * @return {?}
     */
    function () {
        /** @type {?} */
        var list = _super.prototype.GetExtensionElements4ConvertTo.call(this);
        if (this.Condition) {
            this.Condition.MexTag = this.MexTag;
            list.push(this.Condition);
        }
        return list;
    };
    /**
     * @protected
     * @param {?} extensionElements
     * @return {?}
     */
    Participant.prototype.SetExtensionElements4LoadFrom = /**
     * @protected
     * @param {?} extensionElements
     * @return {?}
     */
    function (extensionElements) {
        var e_1, _a;
        _super.prototype.SetExtensionElements4LoadFrom.call(this, extensionElements);
        try {
            for (var extensionElements_1 = tslib_1.__values(extensionElements), extensionElements_1_1 = extensionElements_1.next(); !extensionElements_1_1.done; extensionElements_1_1 = extensionElements_1.next()) {
                var item = extensionElements_1_1.value;
                if (item instanceof Condition) {
                    /** @type {?} */
                    var condition = (/** @type {?} */ (item));
                    if (condition.MexTag === this.MexTag) {
                        this.Condition = condition;
                    }
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (extensionElements_1_1 && !extensionElements_1_1.done && (_a = extensionElements_1.return)) _a.call(extensionElements_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    return Participant;
}(HumanPerformer));
/**
 * @abstract
 */
export { Participant };
if (false) {
    /** @type {?} */
    Participant.prototype.ClrTypeID;
    /** @type {?} */
    Participant.prototype.MexTag;
    /** @type {?} */
    Participant.prototype.Condition;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFydGljaXBhbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtbW9kZWwvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvcGFydGljaXBhbnRzL29sZC9QYXJ0aWNpcGFudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBOEIsY0FBYyxFQUFvQixNQUFNLHFCQUFxQixDQUFDO0FBQ25HLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQzs7OztBQUUzRTs7OztJQUEwQyx1Q0FBYztJQUNwRCxxQkFBWSxLQUFnQixFQUFFLEVBQVcsRUFBRSxJQUFhO1FBQXhELFlBQ0ksa0JBQU0sS0FBSyxDQUFDLFNBR2Y7UUFFRCxlQUFTLEdBQVcsZ0JBQWdCLENBQUM7UUFDckMsWUFBTSxHQUFXLGdCQUFnQixDQUFDO1FBTDlCLEtBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsS0FBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7O0lBQ3JCLENBQUM7Ozs7SUFNRCx5Q0FBbUI7OztJQUFuQjs7WUFDUSxHQUFHLEdBQUcsaUJBQU0sbUJBQW1CLFdBQUU7UUFDckMsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVELHdDQUFrQjs7OztJQUFsQixVQUFtQixHQUFRO1FBQ3ZCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Ozs7O0lBRVMsb0RBQThCOzs7O0lBQXhDOztZQUNRLElBQUksR0FBRyxpQkFBTSw4QkFBOEIsV0FBRTtRQUNqRCxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDaEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztZQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUM3QjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7OztJQUVTLG1EQUE2Qjs7Ozs7SUFBdkMsVUFBd0MsaUJBQXFDOztRQUN6RSxpQkFBTSw2QkFBNkIsWUFBQyxpQkFBaUIsQ0FBQyxDQUFDOztZQUN2RCxLQUFtQixJQUFBLHNCQUFBLGlCQUFBLGlCQUFpQixDQUFBLG9EQUFBLG1GQUFFO2dCQUFqQyxJQUFNLElBQUksOEJBQUE7Z0JBQ1gsSUFBSSxJQUFJLFlBQVksU0FBUyxFQUFFOzt3QkFDckIsU0FBUyxHQUFHLG1CQUFBLElBQUksRUFBYTtvQkFDbkMsSUFBSSxTQUFTLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQ2xDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO3FCQUM5QjtpQkFDSjthQUNKOzs7Ozs7Ozs7SUFDTCxDQUFDO0lBSUwsa0JBQUM7QUFBRCxDQUFDLEFBM0NELENBQTBDLGNBQWMsR0EyQ3ZEOzs7Ozs7O0lBcENHLGdDQUFxQzs7SUFDckMsNkJBQWtDOztJQUNsQyxnQ0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWwsIEJwbW5Nb2RlbEhlbHBlciwgSHVtYW5QZXJmb3JtZXIsIEV4dGVuc2lvbkVsZW1lbnQgfSBmcm9tIFwiQGVkcC1wbWYvYnBtbi1tb2RlbFwiO1xyXG5pbXBvcnQgeyBDb25kaXRpb24gfSBmcm9tIFwiLi4vLi4vZXh0ZW5zaW9uL2NvbmRpdGlvbi1leHByZXNzaW9uL0NvbmRpdGlvblwiO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBhcnRpY2lwYW50IGV4dGVuZHMgSHVtYW5QZXJmb3JtZXIge1xyXG4gICAgY29uc3RydWN0b3IobW9kZWw6IEJwbW5Nb2RlbCwgaWQ/OiBzdHJpbmcsIG5hbWU/OiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcihtb2RlbCk7XHJcbiAgICAgICAgdGhpcy5JZCA9IGlkO1xyXG4gICAgICAgIHRoaXMuTmFtZSA9IG5hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgQ2xyVHlwZUlEOiBzdHJpbmcgPSBcIndmLlBhcnRpY2lwYW50XCI7XHJcbiAgICBNZXhUYWc6IHN0cmluZyA9ICd3Zi5QYXJ0aWNpcGFudCc7XHJcbiAgICBDb25kaXRpb246IENvbmRpdGlvbjtcclxuXHJcbiAgICBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IGFueSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IGFueSk6IGFueSB7XHJcbiAgICAgICAgc3VwZXIuTG9hZEZyb21Kc29uT2JqZWN0KG9iaik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIEdldEV4dGVuc2lvbkVsZW1lbnRzNENvbnZlcnRUbygpOiBhbnkge1xyXG4gICAgICAgIGxldCBsaXN0ID0gc3VwZXIuR2V0RXh0ZW5zaW9uRWxlbWVudHM0Q29udmVydFRvKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuQ29uZGl0aW9uKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ29uZGl0aW9uLk1leFRhZyA9IHRoaXMuTWV4VGFnO1xyXG4gICAgICAgICAgICBsaXN0LnB1c2godGhpcy5Db25kaXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgU2V0RXh0ZW5zaW9uRWxlbWVudHM0TG9hZEZyb20oZXh0ZW5zaW9uRWxlbWVudHM6IEV4dGVuc2lvbkVsZW1lbnRbXSkge1xyXG4gICAgICAgIHN1cGVyLlNldEV4dGVuc2lvbkVsZW1lbnRzNExvYWRGcm9tKGV4dGVuc2lvbkVsZW1lbnRzKTtcclxuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZXh0ZW5zaW9uRWxlbWVudHMpIHtcclxuICAgICAgICAgICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBDb25kaXRpb24pIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbmRpdGlvbiA9IGl0ZW0gYXMgQ29uZGl0aW9uO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbmRpdGlvbi5NZXhUYWcgPT09IHRoaXMuTWV4VGFnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Db25kaXRpb24gPSBjb25kaXRpb247XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvL3B1YmxpYyBJTGlzdDxFeHRlbnNpb25FbGVtZW50PiBHZXRFeHRlbnNpb25FbGVtZW50cygpIHtcclxuICAgIC8vICAgIHJldHVybiB0aGlzLmV4dGVuc2lvbkVsZW1lbnRzO1xyXG4gICAgLy99XHJcbn0iXX0=