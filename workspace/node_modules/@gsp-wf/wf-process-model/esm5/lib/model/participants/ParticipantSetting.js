/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionElement, ExtensionMethod } from "@edp-pmf/bpmn-model";
import { AutomaticApprovalRule } from "../AutomaticApprovalRule";
var ParticipantSetting = /** @class */ (function (_super) {
    tslib_1.__extends(ParticipantSetting, _super);
    function ParticipantSetting(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = ParticipantSetting.Clr_Type_ID;
        _this.MexTag = 'ParticipantSetting';
        _this.NoPerformerStrategy = 'leave';
        _this.HistoricFirst = false;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    ParticipantSetting.prototype.resetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.NoPerformerStrategy = 'leave';
        this.HistoricFirst = true;
        this.ExclusionPerformers = new Array();
        this.automaticPerformers = new Array();
        this.automaticApprovalRules = new Array();
    };
    /**
     * @return {?}
     */
    ParticipantSetting.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelHelper.SetAttributeValue(obj, "ExclusionPerformers", this.ExclusionPerformers);
        BpmnModelHelper.SetAttributeValue(obj, "AutomaticPerformers", this.automaticPerformers);
        BpmnModelHelper.SetAttributeValue(obj, "NoPerformerStrategy", this.NoPerformerStrategy);
        BpmnModelHelper.SetAttributeValue(obj, "HistoricFirst", this.HistoricFirst);
        BpmnModelHelper.SetAttributeValue(obj, "Neighboring", this.Neighboring);
        if (this.automaticApprovalRules && this.automaticApprovalRules.length > 0) {
            /** @type {?} */
            var rules = new Array();
            try {
                for (var _b = tslib_1.__values(this.automaticApprovalRules), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    rules.push(a.ConvertToJsonObject());
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            BpmnModelHelper.SetAttributeValue(obj, "AutomaticApprovalRules", rules);
        }
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    ParticipantSetting.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_2, _a;
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.ExclusionPerformers = obj.ExclusionPerformers;
        this.NoPerformerStrategy = obj.NoPerformerStrategy;
        this.HistoricFirst = obj.HistoricFirst;
        this.Neighboring = obj.Neighboring;
        this.automaticPerformers = ExtensionMethod.GetAttributeValue(obj, "AutomaticPerformers");
        this.automaticApprovalRules = new Array();
        /** @type {?} */
        var rules = ExtensionMethod.GetAttributeValue(obj, "AutomaticApprovalRules");
        if (rules && rules.length > 0) {
            try {
                for (var rules_1 = tslib_1.__values(rules), rules_1_1 = rules_1.next(); !rules_1_1.done; rules_1_1 = rules_1.next()) {
                    var r = rules_1_1.value;
                    /** @type {?} */
                    var automaticApprovalRule = new AutomaticApprovalRule(this.Model);
                    automaticApprovalRule.LoadFromJsonObject(r);
                    this.automaticApprovalRules.push(automaticApprovalRule);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (rules_1_1 && !rules_1_1.done && (_a = rules_1.return)) _a.call(rules_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    /**
     * @return {?}
     */
    ParticipantSetting.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new ParticipantSetting(this.Model);
    };
    /**
     * @return {?}
     */
    ParticipantSetting.prototype.clone = /**
     * @return {?}
     */
    function () {
        var e_3, _a, e_4, _b, e_5, _c;
        /** @type {?} */
        var participantSetting = new ParticipantSetting(this.Model);
        participantSetting.ExclusionPerformers = new Array();
        if (this.ExclusionPerformers && this.ExclusionPerformers.length > 0) {
            try {
                for (var _d = tslib_1.__values(this.ExclusionPerformers), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var e = _e.value;
                    participantSetting.ExclusionPerformers.push(e);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        participantSetting.NoPerformerStrategy = this.NoPerformerStrategy;
        participantSetting.HistoricFirst = this.HistoricFirst;
        participantSetting.Neighboring = this.Neighboring;
        participantSetting.automaticPerformers = new Array();
        if (this.automaticPerformers && this.automaticPerformers.length > 0) {
            try {
                for (var _f = tslib_1.__values(this.automaticPerformers), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var a = _g.value;
                    participantSetting.automaticPerformers.push(a);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        participantSetting.automaticApprovalRules = new Array();
        if (this.automaticApprovalRules && this.automaticApprovalRules.length > 0) {
            try {
                for (var _h = tslib_1.__values(this.automaticApprovalRules), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var r = _j.value;
                    /** @type {?} */
                    var automaticApprovalRule = r.clone();
                    participantSetting.automaticApprovalRules.push(automaticApprovalRule);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        return participantSetting;
    };
    ParticipantSetting.Clr_Type_ID = "wf.ParticipantSetting";
    return ParticipantSetting;
}(ExtensionElement));
export { ParticipantSetting };
if (false) {
    /** @type {?} */
    ParticipantSetting.Clr_Type_ID;
    /** @type {?} */
    ParticipantSetting.prototype.ClrTypeID;
    /** @type {?} */
    ParticipantSetting.prototype.MexTag;
    /**
     * 参与者排除项
     * 场景示例：流程发起人不参与审批、已审人员不参与审批、上一活动审批人不参与审批、利益相关人（取自表单字段：报销人、排除本单位。。。假象的）
     * 为了保持扩展性，此处引用参与者Id，使用参与者解析器解析
     * @type {?}
     */
    ParticipantSetting.prototype.ExclusionPerformers;
    /**
     * 找不到参与者时处理策略：throwException, leave
     * @type {?}
     */
    ParticipantSetting.prototype.NoPerformerStrategy;
    /**
     * 再次进入该节点时，参与人为该节点的已办人员
     * 主要用于驳回和重新提交至驳回节点的场景
     * @type {?}
     */
    ParticipantSetting.prototype.HistoricFirst;
    /**
     * 连岗审批：同一办理人在相邻节点任务仅办理一次，下一环节自动完成
     * 与exclusionPerformers设置“上一活动审批人不参与审批”冲突
     * @type {?}
     */
    ParticipantSetting.prototype.Neighboring;
    /**
     * 自动审批项
     * 场景示例：流程发起人不参与审批、已审人员不参与审批、上一活动审批人不参与审批、利益相关人（取自表单字段：报销人、排除本单位。。。假象的）
     * 为了保持扩展性，此处引用参与者Id，使用参与者解析器解析
     * @type {?}
     */
    ParticipantSetting.prototype.automaticPerformers;
    /**
     * 自动审批规则List
     * @type {?}
     */
    ParticipantSetting.prototype.automaticApprovalRules;
}
BpmnModelHelper.RegisterElementType(new ParticipantSetting(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,