/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from "@edp-pmf/bpmn-model";
import { SmsMessageTemplate } from "./SmsMessageTemplate";
var UrgeHandleRule = /** @class */ (function (_super) {
    tslib_1.__extends(UrgeHandleRule, _super);
    function UrgeHandleRule(model) {
        var _this = _super.call(this, model) || this;
        _this.ClrTypeID = UrgeHandleRule.Clr_Type_ID;
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    UrgeHandleRule.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.smsMessageTemplate = null;
    };
    /**
     * @return {?}
     */
    UrgeHandleRule.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        ExtensionMethod.SetAttributeValue(obj, "UrgeHandleAble", this.urgeHandleAble);
        ExtensionMethod.SetAttributeValue(obj, "SendType", this.sendType);
        ExtensionMethod.SetAttributeValue(obj, "EarlyTime", this.earlyTime);
        ExtensionMethod.SetAttributeValue(obj, "IntervalTime", this.intervalTime);
        ExtensionMethod.SetAttributeValue(obj, "UrgeMessageSubject", this.urgeMessageSubject);
        ExtensionMethod.SetAttributeValue(obj, "UrgeMessageContent", this.urgeMessageContent);
        ExtensionMethod.SetAttributeValue(obj, "AddReminder", this.addReminder);
        ExtensionMethod.SetAttributeValue(obj, "SubjectEditable", this.subjectEditable);
        ExtensionMethod.SetAttributeValue(obj, "ContentEditable", this.contentEditable);
        if (this.smsMessageTemplate) {
            ExtensionMethod.SetAttributeValue(obj, "SmsMessageTemplate", this.smsMessageTemplate.ConvertToJsonObject());
        }
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    UrgeHandleRule.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.earlyTime = ExtensionMethod.GetAttributeValue4Int64(obj, "EarlyTime");
        this.intervalTime = ExtensionMethod.GetAttributeValue4Int64(obj, "IntervalTime");
        this.sendType = ExtensionMethod.GetAttributeValue4String(obj, "SendType");
        this.urgeHandleAble = ExtensionMethod.GetAttributeValue4Boolean(obj, "UrgeHandleAble");
        this.urgeMessageSubject = ExtensionMethod.GetAttributeValue4String(obj, "UrgeMessageSubject");
        this.urgeMessageContent = ExtensionMethod.GetAttributeValue4String(obj, "UrgeMessageContent");
        this.addReminder = ExtensionMethod.GetAttributeValue4Boolean(obj, "AddReminder");
        this.subjectEditable = ExtensionMethod.GetAttributeValue4Boolean(obj, "SubjectEditable");
        this.contentEditable = ExtensionMethod.GetAttributeValue4Boolean(obj, "ContentEditable");
        /** @type {?} */
        var smsTemplateElement = ExtensionMethod.GetAttributeValue(obj, 'SmsMessageTemplate');
        if (smsTemplateElement) {
            /** @type {?} */
            var smsMessageTemplate = new SmsMessageTemplate(this.Model);
            smsMessageTemplate.LoadFromJsonObject(smsTemplateElement);
            this.smsMessageTemplate = smsMessageTemplate;
        }
    };
    /**
     * @return {?}
     */
    UrgeHandleRule.prototype.NewInstance = /**
     * @return {?}
     */
    function () {
        return new UrgeHandleRule(this.Model);
    };
    /**
     * @return {?}
     */
    UrgeHandleRule.prototype.clone = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var urgeHandleRule = new UrgeHandleRule(this.Model);
        urgeHandleRule.earlyTime = this.earlyTime;
        urgeHandleRule.intervalTime = this.intervalTime;
        urgeHandleRule.sendType = this.sendType;
        urgeHandleRule.urgeHandleAble = this.urgeHandleAble;
        urgeHandleRule.urgeMessageSubject = this.urgeMessageSubject;
        urgeHandleRule.urgeMessageContent = this.urgeMessageContent;
        urgeHandleRule.addReminder = this.addReminder;
        urgeHandleRule.subjectEditable = this.subjectEditable;
        urgeHandleRule.contentEditable = this.contentEditable;
        if (this.smsMessageTemplate) {
            urgeHandleRule.smsMessageTemplate = this.smsMessageTemplate.clone();
        }
        return urgeHandleRule;
    };
    UrgeHandleRule.Clr_Type_ID = "wf.UrgeHandleRule";
    return UrgeHandleRule;
}(ExtensionElement));
export { UrgeHandleRule };
if (false) {
    /** @type {?} */
    UrgeHandleRule.Clr_Type_ID;
    /** @type {?} */
    UrgeHandleRule.prototype.ClrTypeID;
    /** @type {?} */
    UrgeHandleRule.prototype.urgeHandleAble;
    /** @type {?} */
    UrgeHandleRule.prototype.sendType;
    /**
     * 最早允许催办时间（时）
     * @type {?}
     */
    UrgeHandleRule.prototype.earlyTime;
    /**
     * 最小允许催办间隔（时）
     * @type {?}
     */
    UrgeHandleRule.prototype.intervalTime;
    /**
     * 主题
     * @type {?}
     */
    UrgeHandleRule.prototype.urgeMessageSubject;
    /**
     * 内容
     * @type {?}
     */
    UrgeHandleRule.prototype.urgeMessageContent;
    /**
     * 是否添加催办人信息
     * @type {?}
     */
    UrgeHandleRule.prototype.addReminder;
    /**
     * 主题可编辑
     * @type {?}
     */
    UrgeHandleRule.prototype.subjectEditable;
    /**
     * 内容可编辑
     * @type {?}
     */
    UrgeHandleRule.prototype.contentEditable;
    /** @type {?} */
    UrgeHandleRule.prototype.smsMessageTemplate;
}
BpmnModelHelper.RegisterElementType(new UrgeHandleRule(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,