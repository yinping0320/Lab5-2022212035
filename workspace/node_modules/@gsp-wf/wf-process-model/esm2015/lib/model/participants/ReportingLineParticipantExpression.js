/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModel, BpmnModelHelper } from "@edp-pmf/bpmn-model";
import { ParticipantExpression } from "./ParticipantExpression";
export class ReportingLineParticipantExpression extends ParticipantExpression {
    /**
     * @param {?} model
     * @param {?=} RefUserId
     * @param {?=} RefEmployeeId
     * @param {?=} RefOrgId
     * @param {?=} ReportingLineDefId
     * @param {?=} ReportingLineDefName
     * @param {?=} Dimension
     */
    constructor(model, RefUserId, RefEmployeeId, RefOrgId, ReportingLineDefId, ReportingLineDefName, Dimension) {
        super(model);
        this.ClrTypeID = ReportingLineParticipantExpression.Clr_Type_ID;
        this.RefUserId = RefUserId;
        this.RefEmployeeId = RefEmployeeId;
        this.RefOrgId = RefOrgId;
        this.ReportingLineDefId = ReportingLineDefId;
        this.ReportingLineDefName = ReportingLineDefName;
        this.Dimension = Dimension;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelHelper.SetAttributeValue(obj, "RefUserId", this.RefUserId);
        BpmnModelHelper.SetAttributeValue(obj, "RefEmployeeId", this.RefEmployeeId);
        BpmnModelHelper.SetAttributeValue(obj, "Dimension", this.Dimension);
        BpmnModelHelper.SetAttributeValue(obj, "RefOrgId", this.RefOrgId);
        BpmnModelHelper.SetAttributeValue(obj, "ReportingLineDefId", this.ReportingLineDefId);
        BpmnModelHelper.SetAttributeValue(obj, "ReportingLineDefName", this.ReportingLineDefName);
        BpmnModelHelper.SetAttributeValue(obj, "Tag", this.Tag);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.RefUserId = obj.RefUserId;
        this.RefEmployeeId = obj.RefEmployeeId;
        this.Dimension = obj.Dimension;
        this.RefOrgId = obj.RefOrgId;
        this.ReportingLineDefId = obj.ReportingLineDefId;
        this.ReportingLineDefName = obj.ReportingLineDefName;
        this.Tag = obj.Tag;
    }
    /**
     * @return {?}
     */
    NewInstance() {
        return new ReportingLineParticipantExpression(this.Model);
    }
    /**
     * @return {?}
     */
    clone() {
        /** @type {?} */
        const reportingLineParticipant = new ReportingLineParticipantExpression(this.Model);
        reportingLineParticipant.id = BpmnModelHelper.GenerateElementId();
        reportingLineParticipant.name = this.name;
        reportingLineParticipant.RefUserId = this.RefUserId;
        reportingLineParticipant.RefEmployeeId = this.RefEmployeeId;
        reportingLineParticipant.Dimension = this.Dimension;
        reportingLineParticipant.RefOrgId = this.RefOrgId;
        reportingLineParticipant.ReportingLineDefId = this.ReportingLineDefId;
        reportingLineParticipant.ReportingLineDefName = this.ReportingLineDefName;
        reportingLineParticipant.Tag = this.Tag;
        // if (this.Condition) {
        //     reportingLineParticipant.Condition = this.Condition.clone();
        // }
        return reportingLineParticipant;
    }
}
ReportingLineParticipantExpression.Clr_Type_ID = 'wf.ReportingLineParticipantExpression';
ReportingLineParticipantExpression.CLR_TYPE_NAME = '汇报关系';
if (false) {
    /** @type {?} */
    ReportingLineParticipantExpression.Clr_Type_ID;
    /**
     * @type {?}
     * @private
     */
    ReportingLineParticipantExpression.CLR_TYPE_NAME;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.ClrTypeID;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.Tag;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.ReportingLineDefId;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.ReportingLineDefName;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.RefOrgId;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.RefUserId;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.RefEmployeeId;
    /** @type {?} */
    ReportingLineParticipantExpression.prototype.Dimension;
}
BpmnModelHelper.RegisterElementType(new ReportingLineParticipantExpression(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,