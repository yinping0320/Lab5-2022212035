/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModel, BpmnModelHelper, ExtensionMethod, ExtensionElement } from "@edp-pmf/bpmn-model";
import { SmsMessageTemplate } from "./SmsMessageTemplate";
export class UrgeHandleRule extends ExtensionElement {
    /**
     * @param {?} model
     */
    constructor(model) {
        super(model);
        this.ClrTypeID = UrgeHandleRule.Clr_Type_ID;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.smsMessageTemplate = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        ExtensionMethod.SetAttributeValue(obj, "UrgeHandleAble", this.urgeHandleAble);
        ExtensionMethod.SetAttributeValue(obj, "SendType", this.sendType);
        ExtensionMethod.SetAttributeValue(obj, "EarlyTime", this.earlyTime);
        ExtensionMethod.SetAttributeValue(obj, "IntervalTime", this.intervalTime);
        ExtensionMethod.SetAttributeValue(obj, "UrgeMessageSubject", this.urgeMessageSubject);
        ExtensionMethod.SetAttributeValue(obj, "UrgeMessageContent", this.urgeMessageContent);
        ExtensionMethod.SetAttributeValue(obj, "AddReminder", this.addReminder);
        ExtensionMethod.SetAttributeValue(obj, "SubjectEditable", this.subjectEditable);
        ExtensionMethod.SetAttributeValue(obj, "ContentEditable", this.contentEditable);
        if (this.smsMessageTemplate) {
            ExtensionMethod.SetAttributeValue(obj, "SmsMessageTemplate", this.smsMessageTemplate.ConvertToJsonObject());
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.earlyTime = ExtensionMethod.GetAttributeValue4Int64(obj, "EarlyTime");
        this.intervalTime = ExtensionMethod.GetAttributeValue4Int64(obj, "IntervalTime");
        this.sendType = ExtensionMethod.GetAttributeValue4String(obj, "SendType");
        this.urgeHandleAble = ExtensionMethod.GetAttributeValue4Boolean(obj, "UrgeHandleAble");
        this.urgeMessageSubject = ExtensionMethod.GetAttributeValue4String(obj, "UrgeMessageSubject");
        this.urgeMessageContent = ExtensionMethod.GetAttributeValue4String(obj, "UrgeMessageContent");
        this.addReminder = ExtensionMethod.GetAttributeValue4Boolean(obj, "AddReminder");
        this.subjectEditable = ExtensionMethod.GetAttributeValue4Boolean(obj, "SubjectEditable");
        this.contentEditable = ExtensionMethod.GetAttributeValue4Boolean(obj, "ContentEditable");
        /** @type {?} */
        const smsTemplateElement = ExtensionMethod.GetAttributeValue(obj, 'SmsMessageTemplate');
        if (smsTemplateElement) {
            /** @type {?} */
            const smsMessageTemplate = new SmsMessageTemplate(this.Model);
            smsMessageTemplate.LoadFromJsonObject(smsTemplateElement);
            this.smsMessageTemplate = smsMessageTemplate;
        }
    }
    /**
     * @return {?}
     */
    NewInstance() {
        return new UrgeHandleRule(this.Model);
    }
    /**
     * @return {?}
     */
    clone() {
        /** @type {?} */
        const urgeHandleRule = new UrgeHandleRule(this.Model);
        urgeHandleRule.earlyTime = this.earlyTime;
        urgeHandleRule.intervalTime = this.intervalTime;
        urgeHandleRule.sendType = this.sendType;
        urgeHandleRule.urgeHandleAble = this.urgeHandleAble;
        urgeHandleRule.urgeMessageSubject = this.urgeMessageSubject;
        urgeHandleRule.urgeMessageContent = this.urgeMessageContent;
        urgeHandleRule.addReminder = this.addReminder;
        urgeHandleRule.subjectEditable = this.subjectEditable;
        urgeHandleRule.contentEditable = this.contentEditable;
        if (this.smsMessageTemplate) {
            urgeHandleRule.smsMessageTemplate = this.smsMessageTemplate.clone();
        }
        return urgeHandleRule;
    }
}
UrgeHandleRule.Clr_Type_ID = "wf.UrgeHandleRule";
if (false) {
    /** @type {?} */
    UrgeHandleRule.Clr_Type_ID;
    /** @type {?} */
    UrgeHandleRule.prototype.ClrTypeID;
    /** @type {?} */
    UrgeHandleRule.prototype.urgeHandleAble;
    /** @type {?} */
    UrgeHandleRule.prototype.sendType;
    /**
     * 最早允许催办时间（时）
     * @type {?}
     */
    UrgeHandleRule.prototype.earlyTime;
    /**
     * 最小允许催办间隔（时）
     * @type {?}
     */
    UrgeHandleRule.prototype.intervalTime;
    /**
     * 主题
     * @type {?}
     */
    UrgeHandleRule.prototype.urgeMessageSubject;
    /**
     * 内容
     * @type {?}
     */
    UrgeHandleRule.prototype.urgeMessageContent;
    /**
     * 是否添加催办人信息
     * @type {?}
     */
    UrgeHandleRule.prototype.addReminder;
    /**
     * 主题可编辑
     * @type {?}
     */
    UrgeHandleRule.prototype.subjectEditable;
    /**
     * 内容可编辑
     * @type {?}
     */
    UrgeHandleRule.prototype.contentEditable;
    /** @type {?} */
    UrgeHandleRule.prototype.smsMessageTemplate;
}
BpmnModelHelper.RegisterElementType(new UrgeHandleRule(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,