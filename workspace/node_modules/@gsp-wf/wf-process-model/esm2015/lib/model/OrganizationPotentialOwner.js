/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModel, BpmnModelHelper, PotentialOwner } from "@edp-pmf/bpmn-model";
import { ActionScope } from "./ActionScope";
import { OrganizationLevel } from "./OrganizationLevel";
export class OrganizationPotentialOwner extends PotentialOwner {
    /**
     * @param {?} model
     * @param {?=} id
     * @param {?=} name
     */
    constructor(model, id, name) {
        super(model);
        this.ClrTypeID = OrganizationPotentialOwner.Clr_Type_ID;
        this.MEXTAG = 'wf.OrganizationPotentialOwner';
        this.Id = id;
        this.Name = name;
    }
    /**
     * @protected
     * @return {?}
     */
    resetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.actionScope = ActionScope.AssignUser;
        this.organizationLevel = OrganizationLevel.DEPARTMENT;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelHelper.SetAttributeValue(obj, "ActionScope", this.actionScope);
        BpmnModelHelper.SetAttributeValue(obj, "OrganizationLevel", this.organizationLevel);
        BpmnModelHelper.SetAttributeValue(obj, "OrganizationId", this.organizationId);
        BpmnModelHelper.SetAttributeValue(obj, "OrganizationCode", this.organizationCode);
        BpmnModelHelper.SetAttributeValue(obj, "OrganizationName", this.organizationName);
        BpmnModelHelper.SetAttributeValue(obj, "IncludeChildren", this.includeChildren);
        BpmnModelHelper.SetAttributeValue(obj, "ParentsUntil", this.parentsUntil);
        BpmnModelHelper.SetAttributeValue(obj, "Tag", this.tag);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.actionScope = obj.ActionScope;
        this.organizationLevel = obj.OrganizationLevel;
        this.organizationId = obj.OrganizationId;
        this.organizationCode = obj.OrganizationCode;
        this.organizationName = obj.OrganizationName;
        this.includeChildren = obj.IncludeChildren;
        this.parentsUntil = obj.ParentsUntil;
        this.tag = obj.Tag;
    }
    /**
     * @protected
     * @return {?}
     */
    GetExtensionElements4ConvertTo() {
        /** @type {?} */
        let list = super.GetExtensionElements4ConvertTo();
        return list;
    }
    /**
     * @protected
     * @param {?} extensionElements
     * @return {?}
     */
    SetExtensionElements4LoadFrom(extensionElements) {
        super.SetExtensionElements4LoadFrom(extensionElements);
    }
    /**
     * @return {?}
     */
    NewInstance() {
        return new OrganizationPotentialOwner(this.Model);
    }
    /**
     * @return {?}
     */
    clone() {
        /** @type {?} */
        const organizationPotentialOwner = new OrganizationPotentialOwner(this.Model);
        organizationPotentialOwner.Id = BpmnModelHelper.GenerateElementId();
        organizationPotentialOwner.actionScope = this.actionScope;
        organizationPotentialOwner.organizationLevel = this.organizationLevel;
        organizationPotentialOwner.organizationId = this.organizationId;
        organizationPotentialOwner.organizationName = this.organizationName;
        organizationPotentialOwner.organizationCode = this.organizationCode;
        organizationPotentialOwner.includeChildren = this.includeChildren;
        organizationPotentialOwner.parentsUntil = this.parentsUntil;
        organizationPotentialOwner.tag = this.tag;
        return organizationPotentialOwner;
    }
}
OrganizationPotentialOwner.Clr_Type_ID = 'wf.OrganizationPotentialOwner';
if (false) {
    /** @type {?} */
    OrganizationPotentialOwner.Clr_Type_ID;
    /** @type {?} */
    OrganizationPotentialOwner.prototype.ClrTypeID;
    /** @type {?} */
    OrganizationPotentialOwner.prototype.MEXTAG;
    /**
     * 作用域：AssignUser, Transfer, AddSignFront, AddSignBehind
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.actionScope;
    /**
     * 部门：DEPARTMENT；单位：UNIT
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.organizationLevel;
    /**
     * 组织Id：currentDepartment, currentUnit
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.organizationId;
    /**
     * 组织编号
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.organizationCode;
    /**
     * 组织名称
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.organizationName;
    /**
     * 包含下级
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.includeChildren;
    /**
     * 遍历父级
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.parentsUntil;
    /**
     * variable 变量值
     * expression 表达式值
     * constant 常量值
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.tag;
    /**
     * 暂存人员信息
     * @type {?}
     */
    OrganizationPotentialOwner.prototype.participantInfo;
}
BpmnModelHelper.RegisterElementType(new OrganizationPotentialOwner(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,