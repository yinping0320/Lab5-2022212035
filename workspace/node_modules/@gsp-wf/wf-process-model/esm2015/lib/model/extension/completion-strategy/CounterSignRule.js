/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModel, BpmnModelHelper } from "@edp-pmf/bpmn-model";
import { Condition } from "../condition-expression/Condition";
import { ExtensionCompletionConditionRuler } from "@edp-pmf/bpmn-model";
export class CounterSignRule extends ExtensionCompletionConditionRuler {
    /**
     * @param {?} model
     */
    constructor(model) {
        super(model);
        this.ClrTypeID = CounterSignRule.Clr_Type_ID;
    }
    /**
     * @return {?}
     */
    NewInstance() {
        return new CounterSignRule(this.Model);
    }
    /**
     * 计数器
     *
     * @return {?}
     */
    get CounterVariableName() {
        return `nrOf${this.ConclusionValue}`;
    }
    /**
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelHelper.SetAttributeValue(obj, "ConclusionValue", this.ConclusionValue);
        BpmnModelHelper.SetAttributeValue(obj, "CalculateType", this.CalculateType);
        BpmnModelHelper.SetAttributeValue(obj, "ConditionValue", this.ConditionValue);
        BpmnModelHelper.SetAttributeValue(obj, "WaitAllVotes", this.WaitAllVotes);
        if (this.CompletionCondition) {
            BpmnModelHelper.SetAttributeValue(obj, "CompletionCondition", this.CompletionCondition.ConvertToJsonObject());
        }
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.ConclusionValue = obj.ConclusionValue;
        this.CalculateType = obj.CalculateType;
        this.ConditionValue = obj.ConditionValue;
        this.WaitAllVotes = obj.WaitAllVotes;
        if (obj.CompletionCondition) {
            /** @type {?} */
            let condition = new Condition(this.Model);
            condition.LoadFromJsonObject(obj.CompletionCondition);
            this.CompletionCondition = condition;
        }
    }
    /**
     * @return {?}
     */
    clone() {
        /** @type {?} */
        const counterSignRule = new CounterSignRule(this.Model);
        counterSignRule.ConclusionValue = this.ConclusionValue;
        counterSignRule.CalculateType = this.CalculateType;
        counterSignRule.ConditionValue = this.ConditionValue;
        counterSignRule.WaitAllVotes = this.WaitAllVotes;
        if (this.CompletionCondition) {
            counterSignRule.CompletionCondition = this.CompletionCondition.clone();
        }
        return counterSignRule;
    }
}
CounterSignRule.Clr_Type_ID = 'wf.CounterSignRule';
if (false) {
    /** @type {?} */
    CounterSignRule.Clr_Type_ID;
    /** @type {?} */
    CounterSignRule.prototype.ClrTypeID;
    /**
     * 结论值
     *
     * @type {?}
     */
    CounterSignRule.prototype.ConclusionValue;
    /**
     * 完成条件
     *
     * @type {?}
     */
    CounterSignRule.prototype.CompletionCondition;
    /**
     * 计算方式
     * @type {?}
     */
    CounterSignRule.prototype.CalculateType;
    /**
     * 满足所有条件值
     * @type {?}
     */
    CounterSignRule.prototype.ConditionValue;
    /**
     * 是否等待所有选票
     * @type {?}
     */
    CounterSignRule.prototype.WaitAllVotes;
}
BpmnModelHelper.RegisterElementType(new CounterSignRule(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ291bnRlclNpZ25SdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLW1vZGVsLyIsInNvdXJjZXMiOlsibGliL21vZGVsL2V4dGVuc2lvbi9jb21wbGV0aW9uLXN0cmF0ZWd5L0NvdW50ZXJTaWduUnVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDOUQsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFeEUsTUFBTSxPQUFPLGVBQWdCLFNBQVEsaUNBQWlDOzs7O0lBUWxFLFlBQVksS0FBZ0I7UUFDeEIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBUFIsY0FBUyxHQUFXLGVBQWUsQ0FBQyxXQUFXLENBQUM7SUFRekQsQ0FBQzs7OztJQU5ELFdBQVc7UUFDUCxPQUFPLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDOzs7Ozs7SUFZRCxJQUFJLG1CQUFtQjtRQUNuQixPQUFPLE9BQU8sSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3pDLENBQUM7Ozs7SUFrQkQsbUJBQW1CO1FBQ2YsS0FBSyxDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDaEMsQ0FBQzs7OztJQUVELG1CQUFtQjs7WUFDWCxHQUFHLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXJDLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ2hGLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM1RSxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM5RSxlQUFlLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFMUUsSUFBSSxJQUFJLENBQUMsbUJBQW1CLEVBQUU7WUFDMUIsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxxQkFBcUIsRUFBRSxJQUFJLENBQUMsbUJBQW1CLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO1NBQ2pIO1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVELGtCQUFrQixDQUFDLEdBQVE7UUFDdkIsS0FBSyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxlQUFlLEdBQUcsR0FBRyxDQUFDLGVBQWUsQ0FBQztRQUMzQyxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQyxhQUFhLENBQUM7UUFDdkMsSUFBSSxDQUFDLGNBQWMsR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQztRQUNyQyxJQUFJLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRTs7Z0JBQ3JCLFNBQVMsR0FBYyxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ3BELFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsbUJBQW1CLEdBQUcsU0FBUyxDQUFDO1NBQ3hDO0lBQ0wsQ0FBQzs7OztJQUVELEtBQUs7O2NBQ0ssZUFBZSxHQUFHLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdkQsZUFBZSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBQ3ZELGVBQWUsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUNuRCxlQUFlLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDckQsZUFBZSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ2pELElBQUksSUFBSSxDQUFDLG1CQUFtQixFQUFFO1lBQzFCLGVBQWUsQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDMUU7UUFFRCxPQUFPLGVBQWUsQ0FBQztJQUMzQixDQUFDOztBQWhGTSwyQkFBVyxHQUFXLG9CQUFvQixDQUFDOzs7SUFBbEQsNEJBQWtEOztJQUNsRCxvQ0FBeUQ7Ozs7OztJQVl6RCwwQ0FBd0I7Ozs7OztJQVV4Qiw4Q0FBK0I7Ozs7O0lBSS9CLHdDQUFzQjs7Ozs7SUFJdEIseUNBQXVCOzs7OztJQUl2Qix1Q0FBc0I7O0FBK0MxQixlQUFlLENBQUMsbUJBQW1CLENBQUMsSUFBSSxlQUFlLENBQUMsSUFBSSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWwsIEJwbW5Nb2RlbEhlbHBlciB9IGZyb20gXCJAZWRwLXBtZi9icG1uLW1vZGVsXCI7XHJcbmltcG9ydCB7IENvbmRpdGlvbiB9IGZyb20gXCIuLi9jb25kaXRpb24tZXhwcmVzc2lvbi9Db25kaXRpb25cIjtcclxuaW1wb3J0IHsgRXh0ZW5zaW9uQ29tcGxldGlvbkNvbmRpdGlvblJ1bGVyIH0gZnJvbSBcIkBlZHAtcG1mL2JwbW4tbW9kZWxcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBDb3VudGVyU2lnblJ1bGUgZXh0ZW5kcyBFeHRlbnNpb25Db21wbGV0aW9uQ29uZGl0aW9uUnVsZXIge1xyXG4gICAgc3RhdGljIENscl9UeXBlX0lEOiBzdHJpbmcgPSAnd2YuQ291bnRlclNpZ25SdWxlJztcclxuICAgIHJlYWRvbmx5IENsclR5cGVJRDogc3RyaW5nID0gQ291bnRlclNpZ25SdWxlLkNscl9UeXBlX0lEO1xyXG5cclxuICAgIE5ld0luc3RhbmNlKCk6IENvdW50ZXJTaWduUnVsZSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBDb3VudGVyU2lnblJ1bGUodGhpcy5Nb2RlbCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IobW9kZWw6IEJwbW5Nb2RlbCkge1xyXG4gICAgICAgIHN1cGVyKG1vZGVsKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgKiDnu5PorrrlgLxcclxuICAgICogKi9cclxuICAgIENvbmNsdXNpb25WYWx1ZTogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiDorqHmlbDlmahcclxuICAgICAqICovXHJcbiAgICBnZXQgQ291bnRlclZhcmlhYmxlTmFtZSgpIHtcclxuICAgICAgICByZXR1cm4gYG5yT2Yke3RoaXMuQ29uY2x1c2lvblZhbHVlfWA7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICog5a6M5oiQ5p2h5Lu2XHJcbiAgICAqICovXHJcbiAgICBDb21wbGV0aW9uQ29uZGl0aW9uOiBDb25kaXRpb247XHJcbiAgICAvKipcclxuICAgICAqIOiuoeeul+aWueW8j1xyXG4gICAgICovXHJcbiAgICBDYWxjdWxhdGVUeXBlOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOa7oei2s+aJgOacieadoeS7tuWAvFxyXG4gICAgICovXHJcbiAgICBDb25kaXRpb25WYWx1ZTogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiDmmK/lkKbnrYnlvoXmiYDmnInpgInnpahcclxuICAgICAqL1xyXG4gICAgV2FpdEFsbFZvdGVzOiBib29sZWFuO1xyXG5cclxuICAgIFJlc2V0QmVmb3JlTG9hZEZyb20oKSB7XHJcbiAgICAgICAgc3VwZXIuUmVzZXRCZWZvcmVMb2FkRnJvbSgpO1xyXG4gICAgfVxyXG5cclxuICAgIENvbnZlcnRUb0pzb25PYmplY3QoKTogYW55IHtcclxuICAgICAgICBsZXQgb2JqID0gc3VwZXIuQ29udmVydFRvSnNvbk9iamVjdCgpO1xyXG5cclxuICAgICAgICBCcG1uTW9kZWxIZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIkNvbmNsdXNpb25WYWx1ZVwiLCB0aGlzLkNvbmNsdXNpb25WYWx1ZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJDYWxjdWxhdGVUeXBlXCIsIHRoaXMuQ2FsY3VsYXRlVHlwZSk7XHJcbiAgICAgICAgQnBtbk1vZGVsSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJDb25kaXRpb25WYWx1ZVwiLCB0aGlzLkNvbmRpdGlvblZhbHVlKTtcclxuICAgICAgICBCcG1uTW9kZWxIZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIldhaXRBbGxWb3Rlc1wiLCB0aGlzLldhaXRBbGxWb3Rlcyk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLkNvbXBsZXRpb25Db25kaXRpb24pIHtcclxuICAgICAgICAgICAgQnBtbk1vZGVsSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJDb21wbGV0aW9uQ29uZGl0aW9uXCIsIHRoaXMuQ29tcGxldGlvbkNvbmRpdGlvbi5Db252ZXJ0VG9Kc29uT2JqZWN0KCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIExvYWRGcm9tSnNvbk9iamVjdChvYmo6IGFueSkge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLkNvbmNsdXNpb25WYWx1ZSA9IG9iai5Db25jbHVzaW9uVmFsdWU7XHJcbiAgICAgICAgdGhpcy5DYWxjdWxhdGVUeXBlID0gb2JqLkNhbGN1bGF0ZVR5cGU7XHJcbiAgICAgICAgdGhpcy5Db25kaXRpb25WYWx1ZSA9IG9iai5Db25kaXRpb25WYWx1ZTtcclxuICAgICAgICB0aGlzLldhaXRBbGxWb3RlcyA9IG9iai5XYWl0QWxsVm90ZXM7XHJcbiAgICAgICAgaWYgKG9iai5Db21wbGV0aW9uQ29uZGl0aW9uKSB7XHJcbiAgICAgICAgICAgIGxldCBjb25kaXRpb246IENvbmRpdGlvbiA9IG5ldyBDb25kaXRpb24odGhpcy5Nb2RlbCk7XHJcbiAgICAgICAgICAgIGNvbmRpdGlvbi5Mb2FkRnJvbUpzb25PYmplY3Qob2JqLkNvbXBsZXRpb25Db25kaXRpb24pO1xyXG4gICAgICAgICAgICB0aGlzLkNvbXBsZXRpb25Db25kaXRpb24gPSBjb25kaXRpb247XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNsb25lKCk6IENvdW50ZXJTaWduUnVsZSB7XHJcbiAgICAgICAgY29uc3QgY291bnRlclNpZ25SdWxlID0gbmV3IENvdW50ZXJTaWduUnVsZSh0aGlzLk1vZGVsKTtcclxuICAgICAgICBjb3VudGVyU2lnblJ1bGUuQ29uY2x1c2lvblZhbHVlID0gdGhpcy5Db25jbHVzaW9uVmFsdWU7XHJcbiAgICAgICAgY291bnRlclNpZ25SdWxlLkNhbGN1bGF0ZVR5cGUgPSB0aGlzLkNhbGN1bGF0ZVR5cGU7XHJcbiAgICAgICAgY291bnRlclNpZ25SdWxlLkNvbmRpdGlvblZhbHVlID0gdGhpcy5Db25kaXRpb25WYWx1ZTtcclxuICAgICAgICBjb3VudGVyU2lnblJ1bGUuV2FpdEFsbFZvdGVzID0gdGhpcy5XYWl0QWxsVm90ZXM7XHJcbiAgICAgICAgaWYgKHRoaXMuQ29tcGxldGlvbkNvbmRpdGlvbikge1xyXG4gICAgICAgICAgICBjb3VudGVyU2lnblJ1bGUuQ29tcGxldGlvbkNvbmRpdGlvbiA9IHRoaXMuQ29tcGxldGlvbkNvbmRpdGlvbi5jbG9uZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGNvdW50ZXJTaWduUnVsZTtcclxuICAgIH1cclxufVxyXG5CcG1uTW9kZWxIZWxwZXIuUmVnaXN0ZXJFbGVtZW50VHlwZShuZXcgQ291bnRlclNpZ25SdWxlKG5ldyBCcG1uTW9kZWwoKSkpO1xyXG4iXX0=