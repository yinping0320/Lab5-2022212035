/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModel, BpmnModelHelper, ExtensionMethod } from "@edp-pmf/bpmn-model";
import { ExpireOperation } from "./ExpireOperation";
export class AutoHandleExpireOperation extends ExpireOperation {
    constructor() {
        super(...arguments);
        this.ClrTypeID = AutoHandleExpireOperation.Clr_Type_ID;
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        ExtensionMethod.SetAttributeValue(obj, "Message", this.message);
        ExtensionMethod.SetAttributeValue(obj, "AutoHandleType", this.autoHandleType);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.message = ExtensionMethod.GetAttributeValue4String(obj, "Message");
        this.autoHandleType = ExtensionMethod.GetAttributeValue4String(obj, "AutoHandleType");
    }
    /**
     * @return {?}
     */
    NewInstance() {
        return new AutoHandleExpireOperation(this.Model);
    }
    /**
     * @return {?}
     */
    clone() {
        /** @type {?} */
        const autoHandleExpireOperation = new AutoHandleExpireOperation(this.Model);
        autoHandleExpireOperation.id = BpmnModelHelper.GenerateElementId();
        autoHandleExpireOperation.durationType = this.durationType;
        autoHandleExpireOperation.timeDuration = this.timeDuration;
        autoHandleExpireOperation.timeUnit = this.timeUnit;
        autoHandleExpireOperation.message = this.message;
        autoHandleExpireOperation.autoHandleType = this.autoHandleType;
        return autoHandleExpireOperation;
    }
}
AutoHandleExpireOperation.Clr_Type_ID = "wf.Mex.AutoHandleExpireOperation";
if (false) {
    /** @type {?} */
    AutoHandleExpireOperation.Clr_Type_ID;
    /** @type {?} */
    AutoHandleExpireOperation.prototype.ClrTypeID;
    /**
     * 办理类型，通过驳回否决等等
     * @type {?}
     */
    AutoHandleExpireOperation.prototype.autoHandleType;
    /**
     * 办理意见
     * @type {?}
     */
    AutoHandleExpireOperation.prototype.message;
}
BpmnModelHelper.RegisterElementType(new AutoHandleExpireOperation(new BpmnModel()));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1tb2RlbC8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9BdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQW9CLE1BQU0scUJBQXFCLENBQUM7QUFDcEcsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXBELE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxlQUFlO0lBQTlEOztRQUVhLGNBQVMsR0FBVyx5QkFBeUIsQ0FBQyxXQUFXLENBQUM7SUE4Q3ZFLENBQUM7Ozs7O0lBbENhLG1CQUFtQjtRQUN6QixLQUFLLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsbUJBQW1COztZQUNYLEdBQUcsR0FBRyxLQUFLLENBQUMsbUJBQW1CLEVBQUU7UUFDckMsZUFBZSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hFLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBRTlFLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFFRCxrQkFBa0IsQ0FBQyxHQUFRO1FBQ3ZCLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFJLENBQUMsT0FBTyxHQUFHLGVBQWUsQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLGNBQWMsR0FBRyxlQUFlLENBQUMsd0JBQXdCLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFDMUYsQ0FBQzs7OztJQUVELFdBQVc7UUFDUCxPQUFPLElBQUkseUJBQXlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JELENBQUM7Ozs7SUFFRCxLQUFLOztjQUNLLHlCQUF5QixHQUFHLElBQUkseUJBQXlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUMzRSx5QkFBeUIsQ0FBQyxFQUFFLEdBQUcsZUFBZSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDbkUseUJBQXlCLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0QseUJBQXlCLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0QseUJBQXlCLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDbkQseUJBQXlCLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDakQseUJBQXlCLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFFL0QsT0FBTyx5QkFBeUIsQ0FBQztJQUNyQyxDQUFDOztBQTlDTSxxQ0FBVyxHQUFXLGtDQUFrQyxDQUFDOzs7SUFBaEUsc0NBQWdFOztJQUNoRSw4Q0FBbUU7Ozs7O0lBS25FLG1EQUF1Qjs7Ozs7SUFLdkIsNENBQWdCOztBQXFDcEIsZUFBZSxDQUFDLG1CQUFtQixDQUFDLElBQUkseUJBQXlCLENBQUMsSUFBSSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWwsIEJwbW5Nb2RlbEhlbHBlciwgRXh0ZW5zaW9uTWV0aG9kLCBFeHRlbnNpb25FbGVtZW50IH0gZnJvbSBcIkBlZHAtcG1mL2JwbW4tbW9kZWxcIjtcclxuaW1wb3J0IHsgRXhwaXJlT3BlcmF0aW9uIH0gZnJvbSBcIi4vRXhwaXJlT3BlcmF0aW9uXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbiBleHRlbmRzIEV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgICBzdGF0aWMgQ2xyX1R5cGVfSUQ6IHN0cmluZyA9IFwid2YuTWV4LkF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb25cIjtcclxuICAgIHJlYWRvbmx5IENsclR5cGVJRDogc3RyaW5nID0gQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbi5DbHJfVHlwZV9JRDtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWKnueQhuexu+Wei++8jOmAmui/h+mps+WbnuWQpuWGs+etieetiVxyXG4gICAgICovXHJcbiAgICBhdXRvSGFuZGxlVHlwZTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqe55CG5oSP6KeBXHJcbiAgICAgKi9cclxuICAgIG1lc3NhZ2U6IHN0cmluZztcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcbiAgICB9XHJcblxyXG4gICAgQ29udmVydFRvSnNvbk9iamVjdCgpOiBhbnkge1xyXG4gICAgICAgIGxldCBvYmogPSBzdXBlci5Db252ZXJ0VG9Kc29uT2JqZWN0KCk7XHJcbiAgICAgICAgRXh0ZW5zaW9uTWV0aG9kLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJNZXNzYWdlXCIsIHRoaXMubWVzc2FnZSk7XHJcbiAgICAgICAgRXh0ZW5zaW9uTWV0aG9kLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJBdXRvSGFuZGxlVHlwZVwiLCB0aGlzLmF1dG9IYW5kbGVUeXBlKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiBhbnkpIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiTWVzc2FnZVwiKTtcclxuICAgICAgICB0aGlzLmF1dG9IYW5kbGVUeXBlID0gRXh0ZW5zaW9uTWV0aG9kLkdldEF0dHJpYnV0ZVZhbHVlNFN0cmluZyhvYmosIFwiQXV0b0hhbmRsZVR5cGVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgTmV3SW5zdGFuY2UoKTogQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbiB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBBdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uKHRoaXMuTW9kZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb25lKCk6IEF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24ge1xyXG4gICAgICAgIGNvbnN0IGF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24gPSBuZXcgQXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbih0aGlzLk1vZGVsKTtcclxuICAgICAgICBhdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uLmlkID0gQnBtbk1vZGVsSGVscGVyLkdlbmVyYXRlRWxlbWVudElkKCk7XHJcbiAgICAgICAgYXV0b0hhbmRsZUV4cGlyZU9wZXJhdGlvbi5kdXJhdGlvblR5cGUgPSB0aGlzLmR1cmF0aW9uVHlwZTtcclxuICAgICAgICBhdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uLnRpbWVEdXJhdGlvbiA9IHRoaXMudGltZUR1cmF0aW9uO1xyXG4gICAgICAgIGF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24udGltZVVuaXQgPSB0aGlzLnRpbWVVbml0O1xyXG4gICAgICAgIGF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24ubWVzc2FnZSA9IHRoaXMubWVzc2FnZTtcclxuICAgICAgICBhdXRvSGFuZGxlRXhwaXJlT3BlcmF0aW9uLmF1dG9IYW5kbGVUeXBlID0gdGhpcy5hdXRvSGFuZGxlVHlwZTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb247XHJcbiAgICB9XHJcbn1cclxuQnBtbk1vZGVsSGVscGVyLlJlZ2lzdGVyRWxlbWVudFR5cGUobmV3IEF1dG9IYW5kbGVFeHBpcmVPcGVyYXRpb24obmV3IEJwbW5Nb2RlbCgpKSk7XHJcbiJdfQ==