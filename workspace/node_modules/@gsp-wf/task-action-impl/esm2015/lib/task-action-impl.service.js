/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
export class TaskActionImplService {
    /**
     * @param {?} injector
     * @param {?} http
     */
    constructor(injector, http) {
        this.injector = injector;
        this.http = http;
    }
    /**
     * 获取任务中心配置项
     * @param {?} code 配置项的Code
     * @param {?=} ownerType
     * @param {?=} ownerId
     * @return {?}
     */
    getTaskCenterConfigByCode(code, ownerType, ownerId) {
        /** @type {?} */
        let url = `/api/runtime/task/v1.0/task-center-setting/code?code=${code}`;
        ownerType && (url += `&ownerType=${ownerType}`);
        ownerId && (url += `&ownerId=${ownerId}`);
        return this.http.get(url);
    }
    /**
     * 添加关注
     * @param {?} sourceId sourceId
     * @return {?}
     */
    addFocus(sourceId) {
        /** @type {?} */
        const url = `/api/runtime/task/v1.0/focus?sourceId=${sourceId}`;
        return this.http.post(url, '');
    }
    /**
     * 移除关注
     * @param {?} processInstanceId 流程实例id
     * @return {?}
     */
    removeFocus(processInstanceId) {
        /** @type {?} */
        const url = `/api/runtime/task/v1.0/focus?processInstanceId=${processInstanceId}`;
        return this.http.delete(url, '');
    }
    /**
     * 是否关注了该任务
     * @param {?} processInstanceId 流程实例id
     * @return {?}
     */
    ifFocused(processInstanceId) {
        /** @type {?} */
        const url = `/api/runtime/task/v1.0/focus/?processInstanceId=${processInstanceId}`;
        return this.http.get(url);
    }
}
TaskActionImplService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
TaskActionImplService.ctorParameters = () => [
    { type: Injector },
    { type: HttpService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaskActionImplService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    TaskActionImplService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1hY3Rpb24taW1wbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi90YXNrLWFjdGlvbi1pbXBsLyIsInNvdXJjZXMiOlsibGliL3Rhc2stYWN0aW9uLWltcGwuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSWxELE1BQU0sT0FBTyxxQkFBcUI7Ozs7O0lBRWhDLFlBQ1UsUUFBa0IsRUFDbEIsSUFBaUI7UUFEakIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixTQUFJLEdBQUosSUFBSSxDQUFhO0lBQ3ZCLENBQUM7Ozs7Ozs7O0lBTUwseUJBQXlCLENBQUMsSUFBWSxFQUFFLFNBQWtCLEVBQUUsT0FBZ0I7O1lBQ3RFLEdBQUcsR0FBRyx3REFBd0QsSUFBSSxFQUFFO1FBQ3hFLFNBQVMsSUFBSSxDQUFDLEdBQUcsSUFBSSxjQUFjLFNBQVMsRUFBRSxDQUFDLENBQUM7UUFDaEQsT0FBTyxJQUFJLENBQUMsR0FBRyxJQUFJLFlBQVksT0FBTyxFQUFFLENBQUMsQ0FBQztRQUMxQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7Ozs7OztJQU1ELFFBQVEsQ0FBQyxRQUFnQjs7Y0FDakIsR0FBRyxHQUFHLHlDQUF5QyxRQUFRLEVBQUU7UUFDL0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDakMsQ0FBQzs7Ozs7O0lBTUQsV0FBVyxDQUFDLGlCQUF5Qjs7Y0FDN0IsR0FBRyxHQUFHLGtEQUFrRCxpQkFBaUIsRUFBRTtRQUNqRixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNuQyxDQUFDOzs7Ozs7SUFNRCxTQUFTLENBQUMsaUJBQXlCOztjQUMzQixHQUFHLEdBQUcsbURBQW1ELGlCQUFpQixFQUFFO1FBQ2xGLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUIsQ0FBQzs7O1lBNUNGLFVBQVU7Ozs7WUFKVSxRQUFRO1lBQ3BCLFdBQVc7Ozs7Ozs7SUFPaEIseUNBQTBCOzs7OztJQUMxQixxQ0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIdHRwU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBUYXNrQWN0aW9uSW1wbFNlcnZpY2Uge1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLFxyXG4gICAgcHJpdmF0ZSBodHRwOiBIdHRwU2VydmljZVxyXG4gICkgeyB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluS7u+WKoeS4reW/g+mFjee9rumhuVxyXG4gICAqIEBwYXJhbSBjb2RlIOmFjee9rumhueeahENvZGVcclxuICAgKi9cclxuICBnZXRUYXNrQ2VudGVyQ29uZmlnQnlDb2RlKGNvZGU6IHN0cmluZywgb3duZXJUeXBlPzogc3RyaW5nLCBvd25lcklkPzogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIGxldCB1cmwgPSBgL2FwaS9ydW50aW1lL3Rhc2svdjEuMC90YXNrLWNlbnRlci1zZXR0aW5nL2NvZGU/Y29kZT0ke2NvZGV9YDtcclxuICAgIG93bmVyVHlwZSAmJiAodXJsICs9IGAmb3duZXJUeXBlPSR7b3duZXJUeXBlfWApO1xyXG4gICAgb3duZXJJZCAmJiAodXJsICs9IGAmb3duZXJJZD0ke293bmVySWR9YCk7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldCh1cmwpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAqIOa3u+WKoOWFs+azqFxyXG4gICAgKiBAcGFyYW0gc291cmNlSWQgc291cmNlSWRcclxuICAgICovXHJcbiAgYWRkRm9jdXMoc291cmNlSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCB1cmwgPSBgL2FwaS9ydW50aW1lL3Rhc2svdjEuMC9mb2N1cz9zb3VyY2VJZD0ke3NvdXJjZUlkfWA7XHJcbiAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QodXJsLCAnJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDnp7vpmaTlhbPms6hcclxuICAgKiBAcGFyYW0gcHJvY2Vzc0luc3RhbmNlSWQg5rWB56iL5a6e5L6LaWRcclxuICAgKi9cclxuICByZW1vdmVGb2N1cyhwcm9jZXNzSW5zdGFuY2VJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIGNvbnN0IHVybCA9IGAvYXBpL3J1bnRpbWUvdGFzay92MS4wL2ZvY3VzP3Byb2Nlc3NJbnN0YW5jZUlkPSR7cHJvY2Vzc0luc3RhbmNlSWR9YDtcclxuICAgIHJldHVybiB0aGlzLmh0dHAuZGVsZXRlKHVybCwgJycpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5piv5ZCm5YWz5rOo5LqG6K+l5Lu75YqhXHJcbiAgICogQHBhcmFtIHByb2Nlc3NJbnN0YW5jZUlkIOa1geeoi+WunuS+i2lkXHJcbiAgICovXHJcbiAgaWZGb2N1c2VkKHByb2Nlc3NJbnN0YW5jZUlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgY29uc3QgdXJsID0gYC9hcGkvcnVudGltZS90YXNrL3YxLjAvZm9jdXMvP3Byb2Nlc3NJbnN0YW5jZUlkPSR7cHJvY2Vzc0luc3RhbmNlSWR9YDtcclxuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==