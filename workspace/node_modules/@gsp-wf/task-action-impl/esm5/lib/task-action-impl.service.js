/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
var TaskActionImplService = /** @class */ (function () {
    function TaskActionImplService(injector, http) {
        this.injector = injector;
        this.http = http;
    }
    /**
     * 获取任务中心配置项
     * @param code 配置项的Code
     */
    /**
     * 获取任务中心配置项
     * @param {?} code 配置项的Code
     * @param {?=} ownerType
     * @param {?=} ownerId
     * @return {?}
     */
    TaskActionImplService.prototype.getTaskCenterConfigByCode = /**
     * 获取任务中心配置项
     * @param {?} code 配置项的Code
     * @param {?=} ownerType
     * @param {?=} ownerId
     * @return {?}
     */
    function (code, ownerType, ownerId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/task-center-setting/code?code=" + code;
        ownerType && (url += "&ownerType=" + ownerType);
        ownerId && (url += "&ownerId=" + ownerId);
        return this.http.get(url);
    };
    /**
      * 添加关注
      * @param sourceId sourceId
      */
    /**
     * 添加关注
     * @param {?} sourceId sourceId
     * @return {?}
     */
    TaskActionImplService.prototype.addFocus = /**
     * 添加关注
     * @param {?} sourceId sourceId
     * @return {?}
     */
    function (sourceId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/focus?sourceId=" + sourceId;
        return this.http.post(url, '');
    };
    /**
     * 移除关注
     * @param processInstanceId 流程实例id
     */
    /**
     * 移除关注
     * @param {?} processInstanceId 流程实例id
     * @return {?}
     */
    TaskActionImplService.prototype.removeFocus = /**
     * 移除关注
     * @param {?} processInstanceId 流程实例id
     * @return {?}
     */
    function (processInstanceId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/focus?processInstanceId=" + processInstanceId;
        return this.http.delete(url, '');
    };
    /**
     * 是否关注了该任务
     * @param processInstanceId 流程实例id
     */
    /**
     * 是否关注了该任务
     * @param {?} processInstanceId 流程实例id
     * @return {?}
     */
    TaskActionImplService.prototype.ifFocused = /**
     * 是否关注了该任务
     * @param {?} processInstanceId 流程实例id
     * @return {?}
     */
    function (processInstanceId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/focus/?processInstanceId=" + processInstanceId;
        return this.http.get(url);
    };
    TaskActionImplService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    TaskActionImplService.ctorParameters = function () { return [
        { type: Injector },
        { type: HttpService }
    ]; };
    return TaskActionImplService;
}());
export { TaskActionImplService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaskActionImplService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    TaskActionImplService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1hY3Rpb24taW1wbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi90YXNrLWFjdGlvbi1pbXBsLyIsInNvdXJjZXMiOlsibGliL3Rhc2stYWN0aW9uLWltcGwuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR2xEO0lBR0UsK0JBQ1UsUUFBa0IsRUFDbEIsSUFBaUI7UUFEakIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixTQUFJLEdBQUosSUFBSSxDQUFhO0lBQ3ZCLENBQUM7SUFFTDs7O09BR0c7Ozs7Ozs7O0lBQ0gseURBQXlCOzs7Ozs7O0lBQXpCLFVBQTBCLElBQVksRUFBRSxTQUFrQixFQUFFLE9BQWdCOztZQUN0RSxHQUFHLEdBQUcsMERBQXdELElBQU07UUFDeEUsU0FBUyxJQUFJLENBQUMsR0FBRyxJQUFJLGdCQUFjLFNBQVcsQ0FBQyxDQUFDO1FBQ2hELE9BQU8sSUFBSSxDQUFDLEdBQUcsSUFBSSxjQUFZLE9BQVMsQ0FBQyxDQUFDO1FBQzFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVEOzs7UUFHSTs7Ozs7O0lBQ0osd0NBQVE7Ozs7O0lBQVIsVUFBUyxRQUFnQjs7WUFDakIsR0FBRyxHQUFHLDJDQUF5QyxRQUFVO1FBQy9ELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNILDJDQUFXOzs7OztJQUFYLFVBQVksaUJBQXlCOztZQUM3QixHQUFHLEdBQUcsb0RBQWtELGlCQUFtQjtRQUNqRixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQ7OztPQUdHOzs7Ozs7SUFDSCx5Q0FBUzs7Ozs7SUFBVCxVQUFVLGlCQUF5Qjs7WUFDM0IsR0FBRyxHQUFHLHFEQUFtRCxpQkFBbUI7UUFDbEYsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDOztnQkE1Q0YsVUFBVTs7OztnQkFKVSxRQUFRO2dCQUNwQixXQUFXOztJQWdEcEIsNEJBQUM7Q0FBQSxBQTdDRCxJQTZDQztTQTVDWSxxQkFBcUI7Ozs7OztJQUc5Qix5Q0FBMEI7Ozs7O0lBQzFCLHFDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBTZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFRhc2tBY3Rpb25JbXBsU2VydmljZSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsXHJcbiAgICBwcml2YXRlIGh0dHA6IEh0dHBTZXJ2aWNlXHJcbiAgKSB7IH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5Lu75Yqh5Lit5b+D6YWN572u6aG5XHJcbiAgICogQHBhcmFtIGNvZGUg6YWN572u6aG555qEQ29kZVxyXG4gICAqL1xyXG4gIGdldFRhc2tDZW50ZXJDb25maWdCeUNvZGUoY29kZTogc3RyaW5nLCBvd25lclR5cGU/OiBzdHJpbmcsIG93bmVySWQ/OiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgbGV0IHVybCA9IGAvYXBpL3J1bnRpbWUvdGFzay92MS4wL3Rhc2stY2VudGVyLXNldHRpbmcvY29kZT9jb2RlPSR7Y29kZX1gO1xyXG4gICAgb3duZXJUeXBlICYmICh1cmwgKz0gYCZvd25lclR5cGU9JHtvd25lclR5cGV9YCk7XHJcbiAgICBvd25lcklkICYmICh1cmwgKz0gYCZvd25lcklkPSR7b3duZXJJZH1gKTtcclxuICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICog5re75Yqg5YWz5rOoXHJcbiAgICAqIEBwYXJhbSBzb3VyY2VJZCBzb3VyY2VJZFxyXG4gICAgKi9cclxuICBhZGRGb2N1cyhzb3VyY2VJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIGNvbnN0IHVybCA9IGAvYXBpL3J1bnRpbWUvdGFzay92MS4wL2ZvY3VzP3NvdXJjZUlkPSR7c291cmNlSWR9YDtcclxuICAgIHJldHVybiB0aGlzLmh0dHAucG9zdCh1cmwsICcnKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOenu+mZpOWFs+azqFxyXG4gICAqIEBwYXJhbSBwcm9jZXNzSW5zdGFuY2VJZCDmtYHnqIvlrp7kvotpZFxyXG4gICAqL1xyXG4gIHJlbW92ZUZvY3VzKHByb2Nlc3NJbnN0YW5jZUlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgY29uc3QgdXJsID0gYC9hcGkvcnVudGltZS90YXNrL3YxLjAvZm9jdXM/cHJvY2Vzc0luc3RhbmNlSWQ9JHtwcm9jZXNzSW5zdGFuY2VJZH1gO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5kZWxldGUodXJsLCAnJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmmK/lkKblhbPms6jkuobor6Xku7vliqFcclxuICAgKiBAcGFyYW0gcHJvY2Vzc0luc3RhbmNlSWQg5rWB56iL5a6e5L6LaWRcclxuICAgKi9cclxuICBpZkZvY3VzZWQocHJvY2Vzc0luc3RhbmNlSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCB1cmwgPSBgL2FwaS9ydW50aW1lL3Rhc2svdjEuMC9mb2N1cy8/cHJvY2Vzc0luc3RhbmNlSWQ9JHtwcm9jZXNzSW5zdGFuY2VJZH1gO1xyXG4gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsKTtcclxuICB9XHJcbn1cclxuIl19