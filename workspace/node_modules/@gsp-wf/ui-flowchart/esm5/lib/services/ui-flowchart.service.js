/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { from } from 'rxjs';
import { HttpService } from '@ecp-caf/caf-common';
import { translate } from './i18n/index';
import { map } from 'rxjs/operators';
var UiFlowchartService = /** @class */ (function () {
    function UiFlowchartService(httpSvc) {
        this.httpSvc = httpSvc;
    }
    /**
     * @param {?} payload
     * @return {?}
     */
    UiFlowchartService.prototype.getForecastProcessListByPayload = /**
     * @param {?} payload
     * @return {?}
     */
    function (payload) {
        /** @type {?} */
        var url = '/api/runtime/wf/v1.0/processInstances/startProcess-simulation';
        return this.httpSvc.post(url, payload).pipe(map((/**
         * @param {?} re
         * @return {?}
         */
        function (re) { return re.procDefs; })));
    };
    /**
     * @param {?} dataId
     * @return {?}
     */
    UiFlowchartService.prototype.getRuntimeProcInstsByDataId = /**
     * @param {?} dataId
     * @return {?}
     */
    function (dataId) {
        if (dataId) {
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/processInstances/runtimeProcInstList?dataId=" + dataId;
            return this.httpSvc.get(url);
        }
        else {
            return from(new Array());
        }
    };
    /**
     * @param {?} dataId
     * @return {?}
     */
    UiFlowchartService.prototype.getHistoricProcInstsByDataId = /**
     * @param {?} dataId
     * @return {?}
     */
    function (dataId) {
        if (dataId) {
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/processInstances/historicProcInstList?dataId=" + dataId;
            return this.httpSvc.get(url);
        }
        else {
            return from(new Array());
        }
    };
    /**
     * 基于流程实例ID获取流程实例
     * @param procInstId 流程实例id
     */
    /**
     * 基于流程实例ID获取流程实例
     * @param {?} procInstId 流程实例id
     * @return {?}
     */
    UiFlowchartService.prototype.getProcInstanceById = /**
     * 基于流程实例ID获取流程实例
     * @param {?} procInstId 流程实例id
     * @return {?}
     */
    function (procInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId;
        return this.httpSvc.get(url);
    };
    /**
     * 基于流程实例ID获取bpmnModel
     */
    /**
     * 基于流程实例ID获取bpmnModel
     * @param {?} procInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getBpmnModelbyProcInstId = /**
     * 基于流程实例ID获取bpmnModel
     * @param {?} procInstId
     * @return {?}
     */
    function (procInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/bpmnModel";
        return this.httpSvc.get(url);
    };
    /**
     * 基于流程定义ID获取bpmnModel
     */
    /**
     * 基于流程定义ID获取bpmnModel
     * @param {?} procDefId
     * @return {?}
     */
    UiFlowchartService.prototype.getBpmnModelbyProcDefId = /**
     * 基于流程定义ID获取bpmnModel
     * @param {?} procDefId
     * @return {?}
     */
    function (procDefId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/procDefs/" + procDefId + "/bpmnModel";
        return this.httpSvc.get(url);
    };
    /**
     * @param {?} superActInstId
     * @param {?} superProcInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getSubProcessInstance = /**
     * @param {?} superActInstId
     * @param {?} superProcInstId
     * @return {?}
     */
    function (superActInstId, superProcInstId) {
        if (superActInstId) {
            /** @type {?} */
            var url = "/api/runtime/wf/v1.0/processInstances/subProcInst?superActInstId=" + superActInstId + "&superProcInstId=" + superProcInstId;
            return this.httpSvc.get(url);
        }
    };
    /**
     * 获取所有包含预解析的流程实例信息
     */
    /**
     * 获取所有包含预解析的流程实例信息
     * @param {?} procInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getForecastProcessByProcInstId = /**
     * 获取所有包含预解析的流程实例信息
     * @param {?} procInstId
     * @return {?}
     */
    function (procInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/forecastProcess";
        return this.httpSvc.get(url);
    };
    /**
     * 获取流程预测数据
     */
    /**
     * 获取流程预测数据
     * @param {?} payload
     * @return {?}
     */
    UiFlowchartService.prototype.getForecastProcessByPayload = /**
     * 获取流程预测数据
     * @param {?} payload
     * @return {?}
     */
    function (payload) {
        /** @type {?} */
        var url = '/api/runtime/wf/v1.0/processInstances/forecastProcess';
        return this.httpSvc.post(url, payload);
    };
    /**
     * @param {?} procInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getCompleteProcessInfoByProcInstId = /**
     * @param {?} procInstId
     * @return {?}
     */
    function (procInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/flowChartInfo";
        return this.httpSvc.get(url);
    };
    /**
     * 基于流程实例Id获取所有活动实例
     * @param procInstId procInstId
     */
    /**
     * 基于流程实例Id获取所有活动实例
     * @param {?} procInstId procInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getAllActiInstsbyProcInstId = /**
     * 基于流程实例Id获取所有活动实例
     * @param {?} procInstId procInstId
     * @return {?}
     */
    function (procInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/activityInstanceSlims";
        return this.httpSvc.get(url);
    };
    /**
     * 基于流程实例ID获取所有的流转实例
     * @param procInstId procInstId
     */
    /**
     * 基于流程实例ID获取所有的流转实例
     * @param {?} procInstId procInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getTransitionInstanceSlimsByProcInstId = /**
     * 基于流程实例ID获取所有的流转实例
     * @param {?} procInstId procInstId
     * @return {?}
     */
    function (procInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/transitionInstanceSlims";
        return this.httpSvc.get(url);
    };
    /**
     * @param {?} procInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getFormInfoByProcInstId = /**
     * @param {?} procInstId
     * @return {?}
     */
    function (procInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/formInfo";
        return this.httpSvc.get(url);
    };
    /**
     * @param {?} procInstId
     * @param {?} actInstId
     * @return {?}
     */
    UiFlowchartService.prototype.getFormInfoByActInstId = /**
     * @param {?} procInstId
     * @param {?} actInstId
     * @return {?}
     */
    function (procInstId, actInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/formInfo";
        if (actInstId) {
            url += "?actInstId=" + actInstId;
        }
        return this.httpSvc.get(url);
    };
    /**
     * 获取审批日志信息
     * @param ProcInstId ProcInstId
     * 新改造的接口
     */
    /**
     * 获取审批日志信息
     * @param {?} procInstId
     * @param {?=} activityDefinitionId
     * @return {?}
     */
    UiFlowchartService.prototype.getWorkItemLogs = /**
     * 获取审批日志信息
     * @param {?} procInstId
     * @param {?=} activityDefinitionId
     * @return {?}
     */
    function (procInstId, activityDefinitionId) {
        /** @type {?} */
        var logUrl = activityDefinitionId ?
            "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/logs?activityDefinitionId=" + activityDefinitionId :
            "/api/runtime/wf/v1.0/processInstances/" + procInstId + "/logs";
        return this.httpSvc.get(logUrl);
    };
    /**
     * @param {?} name
     * @return {?}
     */
    UiFlowchartService.prototype.getI18nValue = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!name) {
            return '';
        }
        /** @type {?} */
        var defaultLang = localStorage.getItem('languageCode');
        /** @type {?} */
        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];
        /** @type {?} */
        var resultVal = '';
        if (name.indexOf('.') === -1) {
            resultVal = langData[name];
        }
        else {
            resultVal = name.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            function (obj, key) {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), langData);
        }
        return resultVal;
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    UiFlowchartService.prototype.getProcessInstanceById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/" + processId;
        return this.httpSvc.get(url);
    };
    /**
     * @param {?} dataId
     * @return {?}
     */
    UiFlowchartService.prototype.getProcInstIdByDataId = /**
     * @param {?} dataId
     * @return {?}
     */
    function (dataId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/procInstId?bizInstId=" + dataId;
        return this.httpSvc.get(url);
    };
    /**
     * @param {?} procInstId
     * @param {?} actInstId
     * @param {?} bizInstId
     * @return {?}
     */
    UiFlowchartService.prototype.retryAifCreation = /**
     * @param {?} procInstId
     * @param {?} actInstId
     * @param {?} bizInstId
     * @return {?}
     */
    function (procInstId, actInstId, bizInstId) {
        return this.httpSvc.post("/api/runtime/wf/v1.0/aifactivityinstance/retry", actInstId);
    };
    /**
     * 是否是外部流程第三方的任务
     * @param processInstanceId 流程实例ID
     */
    /**
     * 是否是外部流程第三方的任务
     * @param {?} processInstanceId 流程实例ID
     * @return {?}
     */
    UiFlowchartService.prototype.ifThirdTask = /**
     * 是否是外部流程第三方的任务
     * @param {?} processInstanceId 流程实例ID
     * @return {?}
     */
    function (processInstanceId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/instances/wfExternalProcess?processInstanceId=" + processInstanceId;
        return this.httpSvc.get(url);
    };
    /**
     * 获取查看共享流程图的相关参数
     * @param bizId 单据内码
     */
    /**
     * 获取查看共享流程图的相关参数
     * @param {?} bizId 单据内码
     * @return {?}
     */
    UiFlowchartService.prototype.getFsParamsByBizId = /**
     * 获取查看共享流程图的相关参数
     * @param {?} bizId 单据内码
     * @return {?}
     */
    function (bizId) {
        /** @type {?} */
        var url = "/api/runtime/task/v1.0/tasks/third/bizId?bizId=" + bizId;
        return this.httpSvc.get(url);
    };
    /**
     * 获取共享查看流程图的URL
     * @param params 参数
     */
    /**
     * 获取共享查看流程图的URL
     * @param {?} params 参数
     * @return {?}
     */
    UiFlowchartService.prototype.viewFsProcessNew = /**
     * 获取共享查看流程图的URL
     * @param {?} params 参数
     * @return {?}
     */
    function (params) {
        /** @type {?} */
        var url = "/api/fssp/ssp/v1.0/mybill/fswybz/viewprocess";
        return this.httpSvc.post(url, params);
    };
    /**
     * @return {?}
     */
    UiFlowchartService.prototype.getFlowChartStyleConfig = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/platform/runtime/common/web/@gsp-wf/wf-process-editor/config/cell-style-config.json";
        return this.httpSvc.get(url);
    };
    /**
     * 获取多实例子流程
     * @param actInst 活动实例
     * @param superProcInstId 父流程实例id
     * @returns
     */
    /**
     * 获取多实例子流程
     * @param {?} actInst 活动实例
     * @param {?} superProcInstId 父流程实例id
     * @return {?}
     */
    UiFlowchartService.prototype.getMutiChildInstance = /**
     * 获取多实例子流程
     * @param {?} actInst 活动实例
     * @param {?} superProcInstId 父流程实例id
     * @return {?}
     */
    function (actInst, superProcInstId) {
        /** @type {?} */
        var actInstId = actInst.activityInstanceId;
        /** @type {?} */
        var isMultiInstanceRoot = actInst.multiInstanceRoot || false;
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/subProcInstList?actInstId=" + actInstId + "&isMultiInstanceRoot=" + isMultiInstanceRoot + "&superProcInstId=" + superProcInstId;
        return this.httpSvc.get(url);
    };
    UiFlowchartService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    UiFlowchartService.ctorParameters = function () { return [
        { type: HttpService }
    ]; };
    return UiFlowchartService;
}());
export { UiFlowchartService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    UiFlowchartService.prototype.httpSvc;
}
//# sourceMappingURL=data:application/json;base64,