/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';
import { MessagerService } from '@farris/ui-messager';
import { BsModalService } from '@farris/ui-modal';
import { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';
import { translate } from './services/i18n/index';
import { UiFlowchartService } from './services/ui-flowchart.service';
import { FrameworkService } from '@gsp-sys/rtf-common';
import { of } from 'rxjs';
import { HttpService } from '@ecp-caf/caf-common';
var WFFlowchartService = /** @class */ (function () {
    function WFFlowchartService(msgService, injector, resolver, modalService) {
        this.msgService = msgService;
        this.injector = injector;
        this.resolver = resolver;
        this.modalService = modalService;
        this.flowchartService = this.injector.get(UiFlowchartService);
        this.frameworkService = this.injector.get(FrameworkService);
    }
    /**
     * 查看流程图，支持预览
     * @param payload
     * @returns
     */
    /**
     * 查看流程图，支持预览
     * @param {?} payload
     * @return {?}
     */
    WFFlowchartService.prototype.viewProcess = /**
     * 查看流程图，支持预览
     * @param {?} payload
     * @return {?}
     */
    function (payload) {
        if (!payload || !payload.dataId) {
            this.msgService.warning(this.getI18nValue('static.flowchart.noDataId'));
            return;
        }
        if (!payload || !payload.bizDefKey) {
            this.msgService.warning(this.getI18nValue('static.flowchart.noBizDefKey'));
            return;
        }
        /** @type {?} */
        var parameters = new Map();
        parameters.set('dataId', payload.dataId);
        parameters.set('bizDefKey', payload.bizDefKey);
        if (payload.startMode) {
            parameters.set('startMode', payload.startMode);
        }
        if (payload.startUserId) {
            parameters.set('startUserId', payload.startUserId);
        }
        parameters.set('withTitle', true);
        /** @type {?} */
        var options = {
            appType: 'menu',
            funcId: 'WFViewFlowChart',
            appId: '',
            appEntrance: '',
            tabId: payload.dataId,
            isNewTab: true,
            queryStringParams: parameters
        };
        this.openMenu(options);
    };
    /**
     * 根据流程实例id查看流程（tab页中打开）
     * @param procInstId 流程实例ID
     */
    /**
     * 根据流程实例id查看流程（tab页中打开）
     * @param {?} procInstId 流程实例ID
     * @return {?}
     */
    WFFlowchartService.prototype.viewFlowChart = /**
     * 根据流程实例id查看流程（tab页中打开）
     * @param {?} procInstId 流程实例ID
     * @return {?}
     */
    function (procInstId) {
        if (!procInstId) {
            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));
            return;
        }
        /** @type {?} */
        var parameters = new Map();
        parameters.set('processId', procInstId);
        parameters.set('withTitle', true);
        /** @type {?} */
        var options = {
            appType: 'menu',
            funcId: 'WFViewFlowChart',
            appId: '',
            appEntrance: '',
            tabId: new Date().getTime().toString(),
            isNewTab: true,
            queryStringParams: parameters
        };
        this.openMenu(options);
    };
    /**
     * 根据单据内码查看流程
     * @param dataId 单据内码
     * @returns
     */
    /**
     * 根据单据内码查看流程
     * @param {?} dataId 单据内码
     * @return {?}
     */
    WFFlowchartService.prototype.viewFlowChartByDataId = /**
     * 根据单据内码查看流程
     * @param {?} dataId 单据内码
     * @return {?}
     */
    function (dataId) {
        if (!dataId) {
            this.msgService.warning(this.getI18nValue('static.flowchart.dataIdIsNull'));
            return;
        }
        /** @type {?} */
        var parameters = new Map();
        parameters.set('dataId', dataId);
        parameters.set('withTitle', true);
        /** @type {?} */
        var options = {
            appType: 'menu',
            funcId: 'WFViewFlowChart',
            appId: '',
            appEntrance: '',
            tabId: new Date().getTime().toString(),
            isNewTab: true,
            queryStringParams: parameters
        };
        this.openMenu(options);
    };
    /**
     * 查看流程（弹框中打开）
     * @param procInstId 流程实例ID
     */
    /**
     * 查看流程（弹框中打开）
     * @param {?} procInstId 流程实例ID
     * @param {?=} mode
     * @return {?}
     */
    WFFlowchartService.prototype.viewFlowChartByDialog = /**
     * 查看流程（弹框中打开）
     * @param {?} procInstId 流程实例ID
     * @param {?=} mode
     * @return {?}
     */
    function (procInstId, mode) {
        var _this = this;
        if (!procInstId) {
            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));
            return;
        }
        this.flowchartService.getProcessInstanceById(procInstId).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            if (re) {
                _this.viewMutiInstanceFlowChartByDialog([re]);
            }
        }));
    };
    /**
     * 查看流程（弹框中打开，兼容多实例子流程）
     * @param procInstId 流程实例ID
     */
    /**
     * 查看流程（弹框中打开，兼容多实例子流程）
     * @param {?} procInstList
     * @param {?=} mode
     * @return {?}
     */
    WFFlowchartService.prototype.viewMutiInstanceFlowChartByDialog = /**
     * 查看流程（弹框中打开，兼容多实例子流程）
     * @param {?} procInstList
     * @param {?=} mode
     * @return {?}
     */
    function (procInstList, mode) {
        /** @type {?} */
        var func;
        if (UIFlowchartComponent.func) {
            func = UIFlowchartComponent.func;
        }
        /** @type {?} */
        var options = {
            title: this.getI18nValue('static.flowchart.title'),
            width: 1200,
            height: 530,
            showButtons: false,
            beforeClose: (/**
             * @param {?} modalRef
             * @return {?}
             */
            function (modalRef) {
                if (UIFlowchartComponent.func) {
                    window.removeEventListener('message', UIFlowchartComponent.func, false);
                }
                if (func) {
                    window.addEventListener('message', func, false);
                    UIFlowchartComponent.func = func;
                }
                return of(true);
            })
        };
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(UIFlowchartComponent);
        /** @type {?} */
        var inj = Injector.create({
            providers: [{
                    provide: UiFlowchartService, useFactory: (/**
                     * @param {?} httpSvc
                     * @return {?}
                     */
                    function (httpSvc) {
                        return new UiFlowchartService(httpSvc);
                    }),
                    deps: [
                        HttpService
                    ]
                }], parent: this.injector
        });
        /** @type {?} */
        var compRef = compFactory.create(inj);
        if (procInstList && procInstList.length) {
            if (procInstList.length == 1) {
                options.showHeader = true;
                options.title = procInstList[0].name + '-v' + procInstList[0].version + '.0';
                compRef.instance.ProcInstId = procInstList[0].id;
            }
            else {
                options.showHeader = false;
                compRef.instance.ProcInstList = procInstList;
            }
        }
        if (mode) {
            compRef.instance.mode = mode;
        }
        compRef.instance.fill();
        /** @type {?} */
        var dialog = this.modalService.show(compRef, options);
        compRef.instance.dialog = dialog;
    };
    /**
     * 查看流程图。（如果作为共享的外部流程，则打开共享的查看流程）
     * @param procInstId 流程实例id
     * @param dataId 单据内码
     */
    /**
     * 查看流程图。（如果作为共享的外部流程，则打开共享的查看流程）
     * @param {?} procInstId 流程实例id
     * @param {?} dataId 单据内码
     * @return {?}
     */
    WFFlowchartService.prototype.viewFlowchartByProcInstIdAndDataId = /**
     * 查看流程图。（如果作为共享的外部流程，则打开共享的查看流程）
     * @param {?} procInstId 流程实例id
     * @param {?} dataId 单据内码
     * @return {?}
     */
    function (procInstId, dataId) {
        var _this = this;
        this.flowchartService.ifThirdTask(procInstId).subscribe((/**
         * @param {?} ifThirdTask
         * @return {?}
         */
        function (ifThirdTask) {
            if (ifThirdTask === true) { //是第三方的任务
                _this.flowchartService.getFsParamsByBizId(dataId).subscribe((/**
                 * @param {?} params
                 * @return {?}
                 */
                function (params) {
                    if (params) { //有不往共享单据表推数据的情况，此时返回为空
                        //有不往共享单据表推数据的情况，此时返回为空
                        /** @type {?} */
                        var param = {
                            "lcsl": params[0],
                            "djnm": params[1],
                            "djlx": params[2],
                            "djbh": params[3]
                        };
                        _this.flowchartService.viewFsProcessNew(param).subscribe((/**
                         * @param {?} re
                         * @return {?}
                         */
                        function (re) {
                            if (re && re.value) {
                                _this.openViewProcessMenu(re.value);
                            }
                        }), (/**
                         * @param {?} error
                         * @return {?}
                         */
                        function (error) {
                            _this.viewFlowChart(procInstId);
                        }));
                    }
                    else {
                        _this.viewFlowChart(procInstId);
                    }
                }), (/**
                 * @param {?} error
                 * @return {?}
                 */
                function (error) {
                    _this.viewFlowChart(procInstId);
                }));
            }
            else { //WF的任务
                _this.viewFlowChart(procInstId);
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            _this.viewFlowChart(procInstId);
        }));
    };
    /**
     * 共享的任务，借用自己的查看流程菜单，iframe嵌入共享的查看流程URL
     * @param entity 任务实体，区分tab页
     * @param url 共享查看流程的URL
     */
    /**
     * 共享的任务，借用自己的查看流程菜单，iframe嵌入共享的查看流程URL
     * @private
     * @param {?} url 共享查看流程的URL
     * @return {?}
     */
    WFFlowchartService.prototype.openViewProcessMenu = /**
     * 共享的任务，借用自己的查看流程菜单，iframe嵌入共享的查看流程URL
     * @private
     * @param {?} url 共享查看流程的URL
     * @return {?}
     */
    function (url) {
        /** @type {?} */
        var queryParams = new Map();
        queryParams.set("thirdTask", true);
        /** @type {?} */
        var entityParams = new Map();
        entityParams.set("thirdProcessUrl", url);
        /** @type {?} */
        var options = {
            appType: 'menu',
            funcId: 'WFViewFlowChart',
            appId: '',
            appEntrance: '',
            tabId: new Date().getTime().toString(),
            isNewTab: true,
            entityParams: entityParams,
            queryStringParams: queryParams
        };
        this.openMenu(options);
    };
    /**
     * 获取i18n
     */
    /**
     * 获取i18n
     * @private
     * @param {?} name
     * @return {?}
     */
    WFFlowchartService.prototype.getI18nValue = /**
     * 获取i18n
     * @private
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!name) {
            return '';
        }
        /** @type {?} */
        var defaultLang = localStorage.getItem('languageCode');
        /** @type {?} */
        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];
        /** @type {?} */
        var resultVal = '';
        if (name.indexOf('.') === -1) {
            resultVal = langData[name];
        }
        else {
            resultVal = name.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            function (obj, key) {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), langData);
        }
        return resultVal;
    };
    /**
     * 判断是否inSuite环境
     */
    /**
     * 判断是否inSuite环境
     * @private
     * @return {?}
     */
    WFFlowchartService.prototype.isInSuite = /**
     * 判断是否inSuite环境
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var frameWorkService = ((/** @type {?} */ (window))).gspframeworkService;
        if (frameWorkService && frameWorkService.rtf) {
            /** @type {?} */
            var extendMethod = frameWorkService.rtf.extendMethod;
            if (extendMethod && extendMethod.getExtObj()) {
                /** @type {?} */
                var extObj = extendMethod.getExtObj();
                /** @type {?} */
                var mode = extObj.iGIX4inSuiteMode();
                if (mode) {
                    return true;
                }
            }
        }
        return false;
    };
    /**
     * 打开菜单，区分是否inSuite环境，用不同方式打开菜单
     * @param options 打开参数
     * @param menuTitle 菜单名称
     */
    /**
     * 打开菜单，区分是否inSuite环境，用不同方式打开菜单
     * @private
     * @param {?} options 打开参数
     * @return {?}
     */
    WFFlowchartService.prototype.openMenu = /**
     * 打开菜单，区分是否inSuite环境，用不同方式打开菜单
     * @private
     * @param {?} options 打开参数
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var menuTitle = this.getI18nValue('static.flowchart.title');
        if (this.isInSuite()) {
            options.menuTitle = menuTitle;
            /** @type {?} */
            var extObj = ((/** @type {?} */ (window))).gspframeworkService.rtf.extendMethod.getExtObj();
            extObj.iGIXMenuOpen(options);
        }
        else {
            this.frameworkService.openMenu$(options).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                console.error(error);
            }));
        }
    };
    WFFlowchartService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    WFFlowchartService.ctorParameters = function () { return [
        { type: MessagerService },
        { type: Injector },
        { type: ComponentFactoryResolver },
        { type: BsModalService }
    ]; };
    return WFFlowchartService;
}());
export { WFFlowchartService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    WFFlowchartService.prototype.flowchartService;
    /**
     * @type {?}
     * @private
     */
    WFFlowchartService.prototype.frameworkService;
    /**
     * @type {?}
     * @private
     */
    WFFlowchartService.prototype.msgService;
    /**
     * @type {?}
     * @private
     */
    WFFlowchartService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WFFlowchartService.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    WFFlowchartService.prototype.modalService;
}
//# sourceMappingURL=data:application/json;base64,