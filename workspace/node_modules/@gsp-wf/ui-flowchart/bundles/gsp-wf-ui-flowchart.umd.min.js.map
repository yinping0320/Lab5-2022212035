{"version":3,"sources":["ng://@gsp-wf/ui-flowchart/lib/services/i18n/en.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/index.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-chs.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-cht.ts","ng://@gsp-wf/ui-flowchart/lib/services/ui-flowchart.service.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-wf/ui-flowchart/lib/flow-chart/entity/Cell.ts","ng://@gsp-wf/ui-flowchart/lib/flow-chart/FlowGraph.ts","ng://@gsp-wf/ui-flowchart/lib/flow-chart/FlowChart.ts","ng://@gsp-wf/ui-flowchart/lib/wf-flowchart.service.ts","ng://@gsp-wf/ui-flowchart/lib/task-flowchart/task-flowchart.component.ts","ng://@gsp-wf/ui-flowchart/lib/services/translate.pipe.ts","ng://@gsp-wf/ui-flowchart/lib/ui-flowchart.module.ts","ng://@gsp-wf/ui-flowchart/lib/entity/forecast-process-payload.ts"],"sourcesContent":["export const en = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: 'Approval Logs',\r\n            approvalOpinion: 'Approval opinion',\r\n            startTime: 'StartTime',\r\n            endTime: 'EndTime',\r\n            todo: 'Todo',\r\n            done: 'Done',\r\n            toAssign: 'To Assign'\r\n        },\r\n        flowchart: {\r\n            title: 'Flow Chart',\r\n            processNotFound: 'process instance id is null',\r\n            flowChart: 'Flow Chart',\r\n            complete: 'Hide Calculated Route',\r\n            simulation: 'Show Calculated Route',\r\n            sequenceColor: 'Description Of Sequence Color',\r\n            completed: 'Completed',\r\n            calculate: 'Calculate Route',\r\n            default: 'Default',\r\n            suspend: 'Calculate Suspend',\r\n            noProcess: 'Process definition not found!',\r\n            list: 'Process List',\r\n            noDataId: 'form id is null',\r\n            noBizDefKey: 'process category id is null'\r\n        }\r\n    }\r\n};\r\n","import { en } from './en';\r\nimport { zh_CHT } from './zh-cht';\r\nimport { zh_CHS } from './zh-chs';\r\n\r\nexport const translate = {\r\n    'zh-CHS': zh_CHS,\r\n    'en': en,\r\n    'zh-CHT': zh_CHT\r\n};\r\n","export const zh_CHS = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: '审批记录',\r\n            approvalOpinion: '审批意见',\r\n            startTime: '接收时间',\r\n            endTime: '处理时间',\r\n            todo: '待办理',\r\n            done: '已办理',\r\n            toAssign: '未指派'\r\n        },\r\n        flowchart: {\r\n            title: '查看流程',\r\n            processNotFound: '流程实例ID为空',\r\n            dataIdIsNull: '单据内码为空',\r\n            flowChart: '流程图',\r\n            complete: '显示设计路线',\r\n            simulation: '显示预测路线',\r\n            sequenceColor: '分支线颜色说明',\r\n            completed: '已运行',\r\n            calculate: '计算路线',\r\n            default: '默认',\r\n            suspend: '计算中断',\r\n            noProcess: '未找到符合条件的流程定义！',\r\n            list: '流程列表',\r\n            noDataId: '单据内码为空',\r\n            noBizDefKey: '流程分类ID为空'\r\n        }\r\n    }\r\n};\r\n","export const zh_CHT = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: '審批記錄',\r\n            approvalOpinion: '審批意見',\r\n            startTime: '接收時間',\r\n            endTime: '處理時間',\r\n            todo: '待辦理',\r\n            done: '已辦理',\r\n            toAssign: '未指派'\r\n        },\r\n        flowchart: {\r\n            title: '查看流程',\r\n            processNotFound: '流程實例ID為空',\r\n            dataIdIsNull: '單據內碼為空',\r\n            flowChart: '流程圖',\r\n            complete: '隱藏計算路線',\r\n            simulation: '顯示計算路線',\r\n            sequenceColor: '分支線顏色說明',\r\n            completed: '已運行',\r\n            calculate: '計算路線',\r\n            default: '默認',\r\n            suspend: '計算中斷',\r\n            noProcess: '未找到符合條件的流程定義！',\r\n            list: '流程列表',\r\n            noDataId: '單據內碼為空',\r\n            noBizDefKey: '流程分類ID為空'\r\n        }\r\n    }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { translate } from './i18n/index';\r\nimport { ForecastProcessPayload } from '../entity/forecast-process-payload';\r\nimport { map } from 'rxjs/operators';\r\nimport { ActivityInstanceSlim } from '../flow-chart/entity';\r\n\r\n@Injectable()\r\nexport class UiFlowchartService {\r\n  constructor(private httpSvc: HttpService) { }\r\n\r\n  getForecastProcessListByPayload(payload: ForecastProcessPayload): Observable<any> {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/startProcess-simulation';\r\n    return this.httpSvc.post(url, payload).pipe(\r\n      map((re: any) => re.procDefs)\r\n    );\r\n  }\r\n\r\n  getRuntimeProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/runtimeProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  getHistoricProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/historicProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例ID获取流程实例\r\n   * @param procInstId 流程实例id\r\n   */\r\n  getProcInstanceById(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n  /**\r\n   * 基于流程实例ID获取bpmnModel\r\n   */\r\n  getBpmnModelbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程定义ID获取bpmnModel\r\n   */\r\n  getBpmnModelbyProcDefId(procDefId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/procDefs/${procDefId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getSubProcessInstance(superActInstId: string, superProcInstId: string): Observable<any> {\r\n    if (superActInstId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/subProcInst?superActInstId=${superActInstId}&superProcInstId=${superProcInstId}`;\r\n      return this.httpSvc.get(url);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取所有包含预解析的流程实例信息\r\n   */\r\n  getForecastProcessByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/forecastProcess`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取流程预测数据\r\n   */\r\n  getForecastProcessByPayload(payload: any) {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/forecastProcess';\r\n    return this.httpSvc.post(url, payload);\r\n  }\r\n\r\n  getCompleteProcessInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/flowChartInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例Id获取所有活动实例\r\n   * @param procInstId procInstId\r\n   */\r\n  getAllActiInstsbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/activityInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例ID获取所有的流转实例\r\n   * @param procInstId procInstId\r\n   */\r\n  getTransitionInstanceSlimsByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/transitionInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByActInstId(procInstId: string, actInstId: string): Observable<any> {\r\n    let url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    if (actInstId) {\r\n      url += `?actInstId=${actInstId}`;\r\n    }\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取审批日志信息\r\n   * @param ProcInstId ProcInstId\r\n   * 新改造的接口\r\n   */\r\n  getWorkItemLogs(procInstId: string, activityDefinitionId?: string): Observable<any> {\r\n    const logUrl = activityDefinitionId ?\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs?activityDefinitionId=${activityDefinitionId}` :\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs`;\r\n    return this.httpSvc.get(logUrl);\r\n  }\r\n\r\n  getI18nValue(name: string) {\r\n    if (!name) { return ''; }\r\n    const defaultLang = localStorage.getItem('languageCode');\r\n    const langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n    let resultVal = '';\r\n    if (name.indexOf('.') === -1) {\r\n      resultVal = langData[name];\r\n    } else {\r\n      resultVal = name.split('.').reduce((obj, key) => {\r\n        if (obj) {\r\n          return obj[key];\r\n        } else {\r\n          return null;\r\n        }\r\n      }, langData);\r\n    }\r\n    return resultVal;\r\n  }\r\n\r\n  getProcessInstanceById(processId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${processId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getProcInstIdByDataId(dataId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/procInstId?bizInstId=${dataId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    return this.httpSvc.post(\"/api/runtime/wf/v1.0/aifactivityinstance/retry\", actInstId);\r\n  }\r\n\r\n  /**\r\n   * 是否是外部流程第三方的任务\r\n   * @param processInstanceId 流程实例ID\r\n   */\r\n  ifThirdTask(processInstanceId: string): Observable<any> {\r\n    const url = `/api/runtime/task/v1.0/instances/wfExternalProcess?processInstanceId=${processInstanceId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取查看共享流程图的相关参数\r\n   * @param bizId 单据内码\r\n   */\r\n  getFsParamsByBizId(bizId: string): Observable<any> {\r\n    const url = `/api/runtime/task/v1.0/tasks/third/bizId?bizId=${bizId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取共享查看流程图的URL\r\n   * @param params 参数\r\n   */\r\n  viewFsProcessNew(params: any): Observable<any> {\r\n    const url = `/api/fssp/ssp/v1.0/mybill/fswybz/viewprocess`;\r\n    return this.httpSvc.post(url, params);\r\n  }\r\n\r\n\r\n  getFlowChartStyleConfig(): Observable<any> {\r\n    const url = `/platform/runtime/common/web/@gsp-wf/wf-process-editor/config/cell-style-config.json`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取多实例子流程\r\n   * @param actInst 活动实例\r\n   * @param superProcInstId 父流程实例id\r\n   * @returns \r\n   */\r\n  getMutiChildInstance(actInst: ActivityInstanceSlim, superProcInstId: string): Observable<any> {\r\n    const actInstId = actInst.activityInstanceId;\r\n    const isMultiInstanceRoot = actInst.multiInstanceRoot || false; \r\n    let url = `/api/runtime/wf/v1.0/processInstances/subProcInstList?actInstId=${actInstId}&isMultiInstanceRoot=${isMultiInstanceRoot}&superProcInstId=${superProcInstId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { mxCell, MxGraphNS } from \"@edp-pmf/mxgraph-ts\";\r\nimport { FlowElement, DiagramElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class Cell extends mxCell {\r\n    flowElement: FlowElement;\r\n    diagramElement: DiagramElement & { BpmnElementId: string };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n}\r\n","import { mxGraph, mxEvent, mxConstants, mxPoint, mxRectangle, mxUtils, MxGraphNS, mxGeometry } from \"@edp-pmf/mxgraph-ts\";\r\nimport { EndEvent, BpmnModel, Process, BPMNDiagram, FlowElement, DiagramElement, BPMNShape, BPMNEdge, SequenceFlow, FlowNode, Node, Edge, FlowNodeState, SequenceFlowState } from \"@edp-pmf/bpmn-model\";\r\nimport { StartActivity, UserActivity, CallActivitySubProcess, AutoActivity, IntermediateCatchEventImpl, OperationActivity, MessageActivity, NotifyActivity, AifCreationBillActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { Cell } from \"./entity/Cell\";\r\nimport { ActivityInstanceSlim } from \"./entity/ActivityInstanceSlim\";\r\nimport { TransitionInstanceSlim } from \"./entity/TransitionInstanceSlim\";\r\nimport { CellStyleConfig } from \"../entity/cell-style/CellStyleConfig\";\r\nimport { StateShapeStyle } from \"../entity/cell-style/StateShapeStyle\";\r\n\r\nexport class FlowGraph extends mxGraph {\r\n    bpmnModel: BpmnModel;\r\n    autoTranslate: boolean;\r\n    scrollTileSize: MxGraphNS.mxRectangle = new mxRectangle(0, 0, 400, 600);\r\n    getPagePadding: () => MxGraphNS.mxPoint;\r\n    getPageSize: () => MxGraphNS.mxRectangle;\r\n    getScrollTileSize: () => MxGraphNS.mxRectangle;\r\n    getPageLayout: () => MxGraphNS.mxRectangle;\r\n\r\n    cellStyleConfig: CellStyleConfig = {\r\n        edgeStyleDic: {},\r\n        shapeStyleDic: {},\r\n    };\r\n\r\n    actList: ActivityInstanceSlim[] = [];\r\n    transInsList: TransitionInstanceSlim[] = [];\r\n    mode: string;\r\n    rootPath: string = '';//基路径\r\n    /**\r\n     * 当前语言\r\n     */\r\n    langCode = (window as any).gspframeworkService && (window as any).gspframeworkService.rtf.language.getLanguageCode() || localStorage.getItem('languageCode') || 'zh-CHS';\r\n\r\n    constructor(container: HTMLDivElement, cellStyleConfig?: CellStyleConfig) {\r\n        super(container);\r\n        //获取基路径\r\n        try {\r\n            this.rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n        } catch (error) {\r\n        }\r\n        this.cellStyleConfig = cellStyleConfig ? cellStyleConfig : this.cellStyleConfig;\r\n        this.autoScroll = false;\r\n        this.autoExtend = true;\r\n        this.pageVisible = false;\r\n        //this.panningHandler.ignoreCell = true;\r\n        //this.setPanning(true);\r\n        this.setCellsSelectable(true);\r\n        this.setDisconnectOnMove(false);\r\n        //节点不可改变大小\r\n        this.setCellsResizable(false);\r\n        //cell是否可以连线\r\n        this.setConnectable(false);\r\n        //禁止操作\r\n        this.setEnabled(true);\r\n        //设置cell文本是否可移动\r\n        this.setVertexLabelsMovable(false);\r\n\r\n        this.setCellsLocked(true);\r\n        //不允许图上存在没有连接活动节点的线（防止拖动线连接点导致失去连接）,还没有找到不允许拖动连接控制点的属性\r\n        this.setAllowDanglingEdges(false);\r\n        mxEvent.disableContextMenu(container);\r\n\r\n        // 设置默认样式\r\n        this.setDefaultStyles();\r\n    }\r\n\r\n    /**\r\n     * 重写创建节点对象方法\r\n     * @param parent\r\n     * @param id\r\n     * @param value\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param height\r\n     * @param style\r\n     * @param relative\r\n     * @returns\r\n     */\r\n    createVertex(parent, id, value, x, y, width, height, style, relative) {\r\n        // Creates the geometry for the vertex\r\n        const geometry = new mxGeometry(x, y, width, height);\r\n        geometry.relative = (relative != null) ? relative : false;\r\n\r\n        // Creates the vertex\r\n        const vertex = new Cell(value, geometry, style);\r\n        vertex.setId(id);\r\n        vertex.setVertex(true);\r\n        vertex.setConnectable(true);\r\n\r\n        return vertex;\r\n    }\r\n\r\n    /**\r\n     * 重写创建边对象方法\r\n     * @param parent\r\n     * @param id\r\n     * @param value\r\n     * @param source\r\n     * @param target\r\n     * @param style\r\n     * @returns\r\n     */\r\n    createEdge(parent, id, value, source, target, style) {\r\n        // Creates the edge\r\n        var edge = new Cell(value, new mxGeometry(), style);\r\n        edge.setId(id);\r\n        edge.setEdge(true);\r\n        edge.geometry.relative = true;\r\n\r\n        return edge;\r\n    }\r\n\r\n    /**\r\n     * 设置默认样式\r\n     */\r\n    setDefaultStyles() {\r\n        const styleSheet = this.getStylesheet();\r\n        // 节点默认样式\r\n        const vertexStyle = styleSheet.getDefaultVertexStyle();\r\n        vertexStyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\r\n        vertexStyle[mxConstants.STYLE_VERTICAL_LABEL_POSITION] = mxConstants.ALIGN_BOTTOM;\r\n        vertexStyle[mxConstants.STYLE_FONTSIZE] = 12;\r\n        vertexStyle[mxConstants.STYLE_FONTFAMILY] = 'Helvetica';\r\n        vertexStyle[mxConstants.STYLE_FONTCOLOR] = \"#333\";\r\n\r\n        // 连线样式默认为正交\r\n        const edgeStyle = styleSheet.getDefaultEdgeStyle();\r\n        edgeStyle[mxConstants.STYLE_SOURCE_PORT] = 'e';\r\n        edgeStyle[mxConstants.STYLE_TARGET_PORT] = 'w';\r\n        edgeStyle[mxConstants.STYLE_EDGE] = mxConstants.EDGESTYLE_ORTHOGONAL;\r\n        edgeStyle[mxConstants.STYLE_ROUNDED] = 1;\r\n        edgeStyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\r\n        edgeStyle[mxConstants.STYLE_FONTSIZE] = 12;\r\n        edgeStyle[mxConstants.STYLE_FONTFAMILY] = 'Helvetica';\r\n    }\r\n\r\n    /**\r\n     * 创建无限大画布\r\n     */\r\n    createInfiniteCanvas() {\r\n        this.getPagePadding = () => {\r\n            return new mxPoint(\r\n                Math.max(0, Math.round(this.container.offsetWidth - 34)),\r\n                Math.max(0, Math.round(this.container.offsetHeight - 34)));\r\n        }\r\n\r\n        this.getScrollTileSize = () => {\r\n            if (this.scrollTileSize == null) {\r\n                this.scrollTileSize = new mxRectangle(0, 0, 400, 600);\r\n            }\r\n\r\n            return this.scrollTileSize;\r\n        }\r\n\r\n        this.getPageSize = () => {\r\n            return (this.pageVisible) ? new mxRectangle(0, 0, this.pageFormat.width * this.pageScale, this.pageFormat.height * this.pageScale) : this.getScrollTileSize();\r\n        }\r\n\r\n        this.getPageLayout = () => {\r\n            let size = (this.pageVisible) ? this.getPageSize() : this.getScrollTileSize();\r\n            let bounds = this.getGraphBounds();\r\n\r\n            if (bounds.width == 0 || bounds.height == 0) {\r\n                return new mxRectangle(0, 0, 1, 1);\r\n            }\r\n            else {\r\n                // Computes untransformed graph bounds\r\n                let x = Math.ceil(bounds.x / this.view.scale - this.view.translate.x);\r\n                let y = Math.ceil(bounds.y / this.view.scale - this.view.translate.y);\r\n                let w = Math.floor(bounds.width / this.view.scale);\r\n                let h = Math.floor(bounds.height / this.view.scale);\r\n\r\n                let x0 = Math.floor(x / size.width);\r\n                let y0 = Math.floor(y / size.height);\r\n                let w0 = Math.ceil((x + w) / size.width) - x0;\r\n                let h0 = Math.ceil((y + h) / size.height) - y0;\r\n\r\n                return new mxRectangle(x0, y0, w0, h0);\r\n            }\r\n        }\r\n\r\n        this.getPreferredPageSize = (bounds, width, height) => {\r\n            let pages = this.getPageLayout();\r\n            let size = this.getPageSize();\r\n\r\n            return new mxRectangle(0, 0, pages.width * size.width, pages.height * size.height);\r\n        };\r\n\r\n        // 重写画布大小变化后方法\r\n        const graphSizeDidChange = this.sizeDidChange;\r\n        this.sizeDidChange = () => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pages = this.getPageLayout();\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n\r\n                // Updates the minimum graph size\r\n                let minw = Math.ceil(2 * pad.x / this.view.scale + pages.width * size.width);\r\n                let minh = Math.ceil(2 * pad.y / this.view.scale + pages.height * size.height);\r\n\r\n                let min = this.minimumGraphSize;\r\n\r\n                // LATER: Fix flicker of scrollbar size in IE quirks mode\r\n                // after delayed call in window.resize event handler\r\n                if (min == null || min.width != minw || min.height != minh) {\r\n                    this.minimumGraphSize = new mxRectangle(0, 0, minw, minh);\r\n                }\r\n\r\n                // Updates auto-translate to include padding and graph size\r\n                let dx = pad.x / this.view.scale - pages.x * size.width;\r\n                let dy = pad.y / this.view.scale - pages.y * size.height;\r\n\r\n                if (!this.autoTranslate && (this.view.translate.x != dx || this.view.translate.y != dy)) {\r\n                    this.autoTranslate = true;\r\n                    (this.view as any).x0 = pages.x;\r\n                    (this.view as any).y0 = pages.y;\r\n\r\n                    let tx = this.view.translate.x;\r\n                    let ty = this.view.translate.y;\r\n\r\n                    this.view.setTranslate(dx, dy);\r\n                    this.container.scrollLeft += (dx - tx) * this.view.scale;\r\n                    this.container.scrollTop += (dy - ty) * this.view.scale;\r\n\r\n                    this.autoTranslate = false;\r\n                    return;\r\n                }\r\n\r\n                graphSizeDidChange.apply(this, []);\r\n            }\r\n        };\r\n\r\n        // 重写view获取背景页大小\r\n        this.view.getBackgroundPageBounds = () => {\r\n            let layout = this.getPageLayout();\r\n            let page = this.getPageSize();\r\n\r\n            return new mxRectangle(\r\n                this.view.scale * (this.view.translate.x + layout.x * page.width),\r\n                this.view.scale * (this.view.translate.y + layout.y * page.height),\r\n                this.view.scale * layout.width * page.width,\r\n                this.view.scale * layout.height * page.height\r\n            );\r\n\r\n        };\r\n\r\n        // 重写view validate方法\r\n        const graphViewValidate = this.view.validate;\r\n        this.view.validate = (cell?: MxGraphNS.mxCell) => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n                let tx = this.view.translate.x;\r\n                let ty = this.view.translate.y;\r\n                this.view.translate.x = pad.x / this.view.scale - ((this.view as any).x0 || 0) * size.width;\r\n                this.view.translate.y = pad.y / this.view.scale - ((this.view as any).y0 || 0) * size.height;\r\n            }\r\n\r\n            graphViewValidate.apply(this.view, [cell]);\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建BpmnModel\r\n     */\r\n    createBpmnModel() {\r\n        const bpmnModel = new BpmnModel();\r\n        bpmnModel.TargetNamespace = \"Default_Namespace\";\r\n        bpmnModel.DefaultProcess = new Process(bpmnModel);\r\n        bpmnModel.DefaultDiagram = new BPMNDiagram(bpmnModel);\r\n        bpmnModel.DefaultDiagram.BpmnPlane.BpmnElementId = bpmnModel.DefaultProcess.Id;\r\n\r\n        return bpmnModel;\r\n    }\r\n\r\n    /**\r\n     * 加载BpmnModel并画图\r\n     */\r\n    loadBpmnModel(json: string) {\r\n        this.removeCells(this.getChildCells(this.getDefaultParent()));\r\n        this.bpmnModel = this.createBpmnModel();\r\n        this.bpmnModel.LoadFromJson(json);\r\n        this.drawBpmnGraph(this.bpmnModel);\r\n    }\r\n\r\n    /**\r\n     * 重新加载BpmnModel并画图\r\n     * @param json\r\n     */\r\n    reloadBpmnModel(json?: string) {\r\n        this.removeCells(this.getChildCells(this.getDefaultParent()));\r\n        if (json) {\r\n            this.loadBpmnModel(json);\r\n        } else {\r\n            this.drawBpmnGraph(this.bpmnModel);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据BpmnModel画图\r\n     */\r\n    drawBpmnGraph(bpmnModel: BpmnModel) {\r\n        const { nodeDict, edgeDict } = this.buildFlowDiagDict(bpmnModel);\r\n        const flowDict = this.buildFlowDict(bpmnModel);\r\n        this.drawNodeCells(flowDict, nodeDict);\r\n        this.drawEdgeCells(flowDict, edgeDict);\r\n        this.getModel().beginUpdate();\r\n        if (this.mode === 'simulation') {\r\n            this.drawInterceptGraph(flowDict, nodeDict, edgeDict);\r\n            this.addJumpEdges(flowDict);\r\n        }\r\n        this.getModel().endUpdate();\r\n    }\r\n\r\n    private drawInterceptGraph(flowDict: { [key: string]: FlowElement; },\r\n        nodeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; }) {\r\n        const firstAct = this.findFirstStartActivityInstance(this.actList);\r\n        // todo：此处待修复\r\n        let endActDef: EndEvent;\r\n        for (const key in flowDict) {\r\n            if (flowDict[key] instanceof EndEvent) {\r\n                endActDef = flowDict[key] as EndEvent;\r\n            }\r\n        }\r\n        if (firstAct) {\r\n            const endActiInstList = this.findEndActiInstList(firstAct, this.actList, this.transInsList);\r\n            endActiInstList.forEach((endActiInst => {\r\n                if (endActiInst.activityDefinitionId !== endActDef.Id) {\r\n                    this.drawNextFlowChart(endActiInst.activityDefinitionId, nodeDict, edgeDict);\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    addJumpEdges(flowDict: { [key: string]: FlowElement; }) {\r\n        const nodeCells = (this.getChildCells(this.getDefaultParent(), true) || []) as Cell[];\r\n        const noIncomingNodes: Cell[] = this.findNoIncomingNodes(nodeCells);\r\n        for (const node of noIncomingNodes) {\r\n            const actInst = this.actList.filter(a => a.activityDefinitionId === node.flowElement.Id)[0];\r\n            const cellId = actInst.precursorActivityDefinitionId + '_' + actInst.activityDefinitionId;\r\n            const source = nodeCells.find((it) => {\r\n                return it.flowElement && it.flowElement.Id === actInst.precursorActivityDefinitionId;\r\n            });\r\n            const target = nodeCells.find((it) => {\r\n                return it.flowElement && it.flowElement.Id === actInst.activityDefinitionId;\r\n            });\r\n            const map = new Map();\r\n            map.set('jump', true);\r\n            const style = this.getEdgeStyle(null, null, map);\r\n            const cell = this.insertEdge(this.getDefaultParent(), cellId, '', source, target, style) as Cell;\r\n            if (cell !== null) {\r\n                cell.source = source;\r\n                cell.target = target;\r\n                cell.geometry.points = [\r\n                    // new mxPoint(source.geometry.x+ source.geometry.width/2, target.geometry.y+target.geometry.height/2)\r\n                ];\r\n                console.log(cell);\r\n                this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 画节点\r\n     */\r\n    drawNodeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        nodeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        additional: boolean = false,\r\n    ) {\r\n        Object.keys(nodeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId];\r\n            const diagElt = nodeDict[bpmnModelElementId] as BPMNShape;\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n\r\n            this.drawNodeCell(flowElt, diagElt, additional);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 画单个节点\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     */\r\n    drawNodeCell(flowElt: FlowElement, diagElt: BPMNShape, additional: boolean) {\r\n        const style = this.getVertexStyle(flowElt, diagElt, additional);\r\n        let cell: Cell = null;\r\n        let label = \"\";\r\n        if (flowElt != null) {\r\n            label = flowElt.Name;\r\n            if (flowElt.NameLanguage && flowElt.NameLanguage[this.langCode] != null) {\r\n                label = flowElt.NameLanguage[this.langCode];\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (this.actList.findIndex(a => a.activityDefinitionId === flowElt.Id) > -1) {\r\n                cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n            } else if (additional) {\r\n                cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n            }\r\n        } else {\r\n            cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n        }\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n        // const cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n    }\r\n\r\n    /**\r\n     * 画连线\r\n     */\r\n    drawEdgeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        additional: boolean = false,\r\n        cut: boolean = false,\r\n    ) {\r\n        Object.keys(edgeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId] as SequenceFlow;\r\n            const diagElt = edgeDict[bpmnModelElementId] as BPMNEdge;\r\n\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n\r\n            this.drawEdgeCell(flowElt, diagElt, additional, cut);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    private judgeConnectBetweenTwoNodes(flowDict: { [key: string]: FlowElement; }, sourceId: string, targetId: string): boolean {\r\n        const source = flowDict[sourceId] as FlowNode;\r\n        const outGoings = source.Outgoings;\r\n        if (!outGoings || outGoings.length === 0) {\r\n            return false;\r\n        }\r\n        for (const outGoing of outGoings) {\r\n            const sequenceFlow = flowDict[outGoing] as SequenceFlow;\r\n            if (sequenceFlow.TargetRef === targetId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 画单条连线\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    drawEdgeCell(flowElt: SequenceFlow, diagElt: BPMNEdge, additional: boolean, cut: boolean) {\r\n        // 获取已插入的节点元素\r\n        const nodeCells = (this.getChildCells(this.getDefaultParent(), true) || []) as Cell[];\r\n        const source = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.SourceRef;\r\n        });\r\n        const target = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.TargetRef;\r\n        });\r\n        const map = new Map();\r\n        map.set('additional', additional);\r\n        map.set('cut', cut);\r\n        const style = this.getEdgeStyle(flowElt, diagElt, map);\r\n        let cell: Cell = null;\r\n        let label = \"\";\r\n        if (flowElt != null) {\r\n            label = flowElt.Name;\r\n            if (flowElt.NameLanguage && flowElt.NameLanguage[this.langCode] != null) {\r\n                label = flowElt.NameLanguage[this.langCode];\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (this.transInsList.findIndex(a => a.sourceActivityDefinitionId === flowElt.SourceRef\r\n                && a.destinationActivityDefinitionId === flowElt.TargetRef) > -1) {\r\n                cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n            } else if (additional || cut) {\r\n                cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n            }\r\n        } else {\r\n            cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n        }\r\n\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n        // const cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n        // cell.geometry.relative = true;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        cell.source = source;\r\n        cell.target = target;\r\n\r\n        cell.geometry.points = cell.geometry.points || [];\r\n\r\n        // 判断是否为旧版本连线\r\n        if (this.isOldBpmnEdge(diagElt)) {\r\n            for (let i = 2; i < diagElt.Points.length; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X + (state.x - state.paintBounds.x);\r\n                const y = diagElt.BpmnLabel.Bounds.Y + (state.y - state.paintBounds.y);\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        } else {\r\n            for (let i = 1; i < diagElt.Points.length - 1; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            const scale = this.view.getScale();\r\n            const translate = this.view.getTranslate();\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X * scale + translate.x;\r\n                const y = diagElt.BpmnLabel.Bounds.Y * scale + translate.y;\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 构建FlowElement字典，{ [flowEltId: string]: FlowElement }\r\n     */\r\n    buildFlowDict(bpmnModel: BpmnModel) {\r\n        let flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n\r\n        return flowDict;\r\n    }\r\n\r\n    /**\r\n     * 构建DiagramElement字典，{ [flowEltId: string]: DiagramElement }\r\n     */\r\n    buildFlowDiagDict(bpmnModel: BpmnModel) {\r\n        const nodeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n        const edgeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n\r\n        const diagramElts: (DiagramElement & { BpmnElementId: string; })[] = bpmnModel.DefaultDiagram.BpmnPlane.GetDiagramElements() as any;\r\n\r\n        diagramElts && diagramElts.forEach(elt => {\r\n            if (elt instanceof Node) {\r\n                nodeDict[elt.BpmnElementId] = elt;\r\n            } else if (elt instanceof Edge) {\r\n                edgeDict[elt.BpmnElementId] = elt;\r\n            }\r\n        });\r\n\r\n        return {\r\n            nodeDict,\r\n            edgeDict,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否为旧版本BPMNEdge\r\n     *\r\n     * 旧版本连线Points数组中[0]和[1]分别表示起点和终点，因取值错误，[0]和[1]坐标均为(0,0)，以此为依据判断是否为旧版本的连线\r\n     * 新版本从起点到终点按顺序记录每一个点坐标\r\n     * @param bpmnEdge\r\n     * @returns\r\n     */\r\n    isOldBpmnEdge(bpmnEdge: BPMNEdge) {\r\n        if (bpmnEdge.Points.length >= 2) {\r\n            const pt1 = bpmnEdge.Points[0];\r\n            const pt2 = bpmnEdge.Points[1];\r\n            if (pt1.X == 0 && pt1.Y == 0 && pt2.X == 0 && pt2.Y == 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取节点样式\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getVertexStyle(flowElt: FlowElement, diagElt: BPMNShape, additional: boolean) {\r\n        const activityInstanceSlims = this.actList;\r\n\r\n        let stateShapeStyle: StateShapeStyle = null;\r\n        // 特殊处理,业务活动要单独赋成人工操作类型的样式\r\n        // if (flowElt.ClrTypeID === UserActivity.Clr_Type_ID) {\r\n        //   stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[flowElt.ClrTypeID];\r\n        // } else if (flowElt.ClrTypeID === OperationActivity.Clr_Type_ID) {\r\n        //   stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[OperationActivity.Clr_Type_ID];\r\n        // }\r\n        if (flowElt instanceof UserActivity && flowElt.BizActivityID !== '') {\r\n            stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[OperationActivity.Clr_Type_ID];\r\n        } else {\r\n            stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[flowElt.ClrTypeID];\r\n        }\r\n        if (stateShapeStyle == null) {\r\n            return this.getVertexStyleOld(flowElt, additional);\r\n        }\r\n        let img: string = stateShapeStyle[FlowNodeState.Default] && stateShapeStyle[FlowNodeState.Default].image;\r\n        if (!additional) {\r\n            const acts = activityInstanceSlims.filter(item => item.activityDefinitionId === flowElt.Id);\r\n            if (acts && acts.length > 0) {\r\n                if (acts.filter(act => act.state === 'RUNNING').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Running]) {\r\n                        img = stateShapeStyle[FlowNodeState.Running].image;\r\n                    }\r\n                } else if (acts.filter(act => act.state === 'COMPLETED').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Completed]) {\r\n                        img = stateShapeStyle[FlowNodeState.Completed].image;\r\n                    }\r\n                } else if (acts.filter(act => act.state === 'TERMINATED').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Terminated]) {\r\n                        img = stateShapeStyle[FlowNodeState.Terminated].image;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return img == null ? null : 'image=' + this.rootPath + img;\r\n    }\r\n\r\n    /**\r\n     * 旧版diagramElement未存储样式信息\r\n     * @param flowElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getVertexStyleOld(flowElt: FlowElement, additional: boolean) {\r\n        let style: string;\r\n        switch (flowElt.ClrTypeID) {\r\n            //结束事件\r\n            case \"bpmn.EndEvent\":\r\n                style = 'end';\r\n                break;\r\n            //流程开始活动节点\r\n            case StartActivity.Clr_Type_ID:\r\n                style = 'start';\r\n                break;\r\n            // 业务活动节点\r\n            case UserActivity.Clr_Type_ID:\r\n                if ((flowElt as UserActivity).BizActivityID) {\r\n                    style = 'bizActivity';\r\n                } else {\r\n                    style = 'approval';\r\n                }\r\n                break;\r\n            // 排他网关\r\n            case 'bpmn.ExclusiveGateway':\r\n                style = 'ExclusiveGateway';\r\n                break;\r\n            //并行网关\r\n            case 'bpmn.ParallelGateway':\r\n                style = 'ParallelGateway';\r\n                break;\r\n            case CallActivitySubProcess.Clr_Type_ID:\r\n                style = 'sub';\r\n                break;\r\n            case AutoActivity.Clr_Type_ID:\r\n                style = 'auto';\r\n                break;\r\n            case IntermediateCatchEventImpl.Clr_Type_ID:\r\n                style = 'catchEvent';\r\n                break;\r\n            case OperationActivity.Clr_Type_ID:\r\n                style = 'bizActivity';\r\n                break;\r\n            case MessageActivity.Clr_Type_ID:\r\n                style = 'message';\r\n                break;\r\n            case NotifyActivity.Clr_Type_ID:\r\n                style = 'notify';\r\n                break;\r\n            case AifCreationBillActivity.Clr_Type_ID:\r\n                style = 'aifCreationActivity';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return 'image=' + this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/' + style + this.getChartState(flowElt, additional) + ';';\r\n    }\r\n\r\n    getChartState(flowElt: FlowElement, additional: boolean) {\r\n        if (!additional) {\r\n            const acts = this.actList.filter(item => item.activityDefinitionId === flowElt.Id);\r\n            if (acts && acts.length > 0) {\r\n                if (acts.filter(act => act.state === 'RUNNING').length > 0) {\r\n                    return '_light.gif';\r\n                } else if (acts.filter(act => act.state === 'COMPLETED').length > 0\r\n                    || acts.filter(act => act.state === 'TERMINATED').length > 0\r\n                ) {\r\n                    return '_gray.png';\r\n                } else {\r\n                    return '.png';\r\n                }\r\n            }\r\n        }\r\n        return '.png';\r\n    }\r\n\r\n    /**\r\n     * 获取连线样式\r\n     * @param flowElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    getEdgeStyle(flowElt: SequenceFlow, diagElt: BPMNEdge, parameters: Map<string, boolean>) {\r\n        if (parameters.get('jump')) {\r\n            let style = '';\r\n            const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic['bpmn.SequenceFlow'];\r\n            if (stateEdgeStyle['jump']) {\r\n                Object.keys(stateEdgeStyle['jump']).forEach((key) => {\r\n                    style += (`${key}=${stateEdgeStyle['jump'][key]};`);\r\n                });\r\n                return style;\r\n            }\r\n            return null;\r\n        } else {\r\n            const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic[flowElt.ClrTypeID];\r\n            if (stateEdgeStyle == null) {\r\n                return this.getEdgeStyleOld(flowElt, parameters.get('additional'), parameters.get('cut'));\r\n            }\r\n            const transitionInstanceSlims = this.transInsList;\r\n            let style = '';\r\n            if (parameters.get('cut')) {\r\n                if (stateEdgeStyle[SequenceFlowState.Cut]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Cut]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Cut][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (parameters.get('additional')) {\r\n                if (stateEdgeStyle[SequenceFlowState.Add]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Add]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Add][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            const transIns = transitionInstanceSlims.filter(item => item.sourceActivityDefinitionId === flowElt.SourceRef && item.destinationActivityDefinitionId === flowElt.TargetRef);\r\n            if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n                if (stateEdgeStyle[SequenceFlowState.Completed]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Completed]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Completed][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (this.mode === 'simulation') {\r\n                if (stateEdgeStyle[SequenceFlowState.Simulation]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Simulation]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Simulation][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (stateEdgeStyle[SequenceFlowState.Default]) {\r\n                Object.keys(stateEdgeStyle[SequenceFlowState.Default]).forEach((key) => {\r\n                    style += (`${key}=${stateEdgeStyle[SequenceFlowState.Default][key]};`);\r\n                });\r\n            }\r\n            return style;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取连线颜色\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    getStrokeColor(flowElt: SequenceFlow, diagElt: BPMNEdge, additional: boolean, cut: boolean) {\r\n        const transitionInstanceSlims = this.transInsList;\r\n\r\n        const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic[flowElt.ClrTypeID];\r\n\r\n\r\n        if (cut) {\r\n            if (stateEdgeStyle[SequenceFlowState.Cut]) {\r\n                return stateEdgeStyle[SequenceFlowState.Cut].strokeColor;\r\n            }\r\n        }\r\n        if (additional) {\r\n            if (stateEdgeStyle[SequenceFlowState.Add]) {\r\n                return stateEdgeStyle[SequenceFlowState.Add].strokeColor;\r\n            }\r\n        }\r\n        const transIns = transitionInstanceSlims.filter(item => item.sourceActivityDefinitionId === flowElt.SourceRef && item.destinationActivityDefinitionId === flowElt.TargetRef);\r\n        if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n            if (stateEdgeStyle[SequenceFlowState.Completed]) {\r\n                return stateEdgeStyle[SequenceFlowState.Completed].strokeColor;\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (stateEdgeStyle[SequenceFlowState.Simulation]) {\r\n                return stateEdgeStyle[SequenceFlowState.Simulation].strokeColor;\r\n            }\r\n        }\r\n        return stateEdgeStyle[SequenceFlowState.Default].strokeColor;\r\n    }\r\n\r\n    /**\r\n     * 旧版diagramElement未存储样式信息\r\n     * @param flowElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getEdgeStyleOld(seq: SequenceFlow, additional: boolean, cut: boolean) {\r\n        if (cut) {\r\n            return 'strokeColor=#FF4040'\r\n        }\r\n        if (additional) {\r\n            return 'strokeColor=#59A1FF';\r\n        }\r\n        const transIns = this.transInsList.filter(item => item.sourceActivityDefinitionId === seq.SourceRef && item.destinationActivityDefinitionId === seq.TargetRef);\r\n        if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n            return 'strokeColor=#595959;strokeWidth=2;';\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            return 'strokeColor=#f59c24;dashed=1;';\r\n        } else {\r\n            return 'strokeColor=#59A1FF;';\r\n        }\r\n    }\r\n\r\n    drawNextFlowChart(\r\n        actiDefId: string,\r\n        nodeDict: { [key: string]: DiagramElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; },\r\n    ) {\r\n        const { nextFlowNodeDict, nextSeqFlowDict } = this.findDrawFlowElementsByActDefId(actiDefId, this.bpmnModel);\r\n        const actDef = this.bpmnModel.DefaultProcess.GetFlowElement(actiDefId) as FlowNode;\r\n        const outgoings = actDef.Outgoings;\r\n\r\n        // 先插入节点\r\n        Object.keys(nextFlowNodeDict).forEach(id => {\r\n            const flowElt = nextFlowNodeDict[id];\r\n            const diagElt = nodeDict[flowElt.Id] as BPMNShape;\r\n            const cell = this.getCellByFlowElementId(flowElt.Id);\r\n            if (!cell) {\r\n                this.drawNodeCell(flowElt, diagElt, true);\r\n            }\r\n        });\r\n\r\n        // 再插入边\r\n        Object.keys(nextSeqFlowDict).forEach(id => {\r\n            const flowElt = nextSeqFlowDict[id];\r\n            const diagElt = edgeDict[flowElt.Id] as BPMNEdge;\r\n            const cell = this.getCellByFlowElementId(flowElt.Id);\r\n            if (!cell) {\r\n                if (outgoings.some(o => o === flowElt.Id)) {\r\n                    this.drawEdgeCell(flowElt, diagElt, true, true);\r\n                } else {\r\n                    this.drawEdgeCell(flowElt, diagElt, true, false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据flowElementId获取cell\r\n     */\r\n    getCellByFlowElementId(flowEltId: string, parent?: MxGraphNS.mxCell): Cell {\r\n        parent = parent ? parent : this.getDefaultParent();\r\n        const cells = this.getChildCells(parent);\r\n        const cell = cells.find(it => {\r\n            if (it instanceof Cell) {\r\n                return it.flowElement && it.flowElement.Id == flowEltId;\r\n            } else {\r\n                return false;\r\n            }\r\n        }) as Cell;\r\n        return cell;\r\n    }\r\n\r\n    findFirstStartActivityInstance(activities: ActivityInstanceSlim[]): ActivityInstanceSlim {\r\n        for (const act of activities) {\r\n            if (!act.precursorActivityDefinitionId) {\r\n                return act;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findNoIncomingNodes(nodeCells: Cell[]) {\r\n        const noIncomingNodes = new Array();\r\n        for (const node of nodeCells) {\r\n            if (node.flowElement.ClrTypeID === 'wf.StartActivity') {\r\n                continue;\r\n            }\r\n            if (!node.edges || node.edges.length === 0) {\r\n                noIncomingNodes.push(node);\r\n                continue;\r\n            }\r\n            if (!node.edges.some(edge => (edge.target as Cell).flowElement.Id === node.flowElement.Id)) {\r\n                noIncomingNodes.push(node);\r\n            }\r\n        }\r\n        return noIncomingNodes;\r\n    }\r\n\r\n    findEndActiInstList(firstAct: ActivityInstanceSlim, activities: ActivityInstanceSlim[], transInsList: TransitionInstanceSlim[]): ActivityInstanceSlim[] {\r\n        const endActiInstList: ActivityInstanceSlim[] = [];\r\n        this.getNextTransitions(endActiInstList, firstAct.activityInstanceId, activities, transInsList);\r\n        return endActiInstList;\r\n    }\r\n\r\n    getNextTransitions(endActiInstList: ActivityInstanceSlim[], sourceActInstId: string, activities: ActivityInstanceSlim[], transInsList: TransitionInstanceSlim[]) {\r\n        const nextTransitions = this.findTranInstsBySourceActInstId(sourceActInstId, transInsList);\r\n        if (nextTransitions && nextTransitions.length > 0) {\r\n            for (const t of nextTransitions) {\r\n                if (t.destinationActivityDefinitionId) {\r\n                    this.getNextTransitions(endActiInstList, t.destinationActivityInstanceId, activities, transInsList);\r\n                }\r\n            }\r\n        } else {\r\n            const actInst: ActivityInstanceSlim = this.findActInstByActInstId(sourceActInstId, activities);\r\n            if (actInst) {\r\n                if (!endActiInstList.some(a => a.activityInstanceId === actInst.activityInstanceId)) {\r\n                    endActiInstList.push(actInst);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findTranInstsBySourceActInstId(sourceActInstId: string, transInsList: TransitionInstanceSlim[]): TransitionInstanceSlim[] {\r\n        return transInsList.filter(t => t.sourceActivityInstanceId === sourceActInstId);\r\n    }\r\n\r\n    findActInstByActInstId(actInstId: string, activities: ActivityInstanceSlim[]) {\r\n        return activities.find(a => a.activityInstanceId === actInstId);\r\n    }\r\n\r\n    findDrawFlowElementsByActDefId(actiDefId: string, bpmnModel: BpmnModel) {\r\n        const nextFlowNodeDict: { [id: string]: FlowNode } = {};\r\n        const nextSeqFlowDict: { [id: string]: SequenceFlow } = {};\r\n        this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, actiDefId, bpmnModel);\r\n        return {\r\n            nextFlowNodeDict,\r\n            nextSeqFlowDict,\r\n        };\r\n    }\r\n\r\n    findNextFlowElementsByFlowElementId(nextFlowNodeDict: { [id: string]: FlowNode }, nextSeqFlowDict: { [id: string]: SequenceFlow }, flowElementId: string, bpmnModel: BpmnModel) {\r\n        const flowElt = bpmnModel.DefaultProcess.GetFlowElement(flowElementId);\r\n        if (flowElt && nextFlowNodeDict[flowElementId] == null) {\r\n            if (flowElt instanceof SequenceFlow) {\r\n                nextSeqFlowDict[flowElt.Id] = flowElt;\r\n                this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, flowElt.TargetRef, bpmnModel);\r\n            } else if (flowElt instanceof FlowNode) {\r\n                nextFlowNodeDict[flowElt.Id] = flowElt;\r\n                if ((flowElt instanceof EndEvent) == false) {\r\n                    flowElt.Outgoings && flowElt.Outgoings.forEach(outgoing => {\r\n                        this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, outgoing, bpmnModel);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { mxEvent, MxGraphNS, mxConstants, mxGraphSelectionModel, mxEventSource } from \"@edp-pmf/mxgraph-ts\";\r\nimport { BpmnModel } from \"@edp-pmf/bpmn-model\";\r\nimport { ProcessInstance } from \"./entity/ProcessInstance\";\r\nimport { ActivityInstanceSlim } from \"./entity/ActivityInstanceSlim\";\r\nimport { TransitionInstanceSlim } from \"./entity/TransitionInstanceSlim\";\r\nimport { UIFlowchartComponent } from \"../task-flowchart/task-flowchart.component\";\r\nimport { FlowGraph } from \"./FlowGraph\";\r\nimport { CellStyleConfig } from \"../entity/cell-style/CellStyleConfig\";\r\n\r\n\r\nexport class FlowChart extends mxEventSource {\r\n    ngComp: UIFlowchartComponent;\r\n    container: HTMLDivElement;\r\n    graph: FlowGraph;\r\n    diagramContainer: HTMLDivElement;\r\n    button: HTMLButtonElement;\r\n    resizeHandler: () => void;\r\n\r\n    mode: 'complete' | 'simulation' = 'complete';\r\n    processInstance: ProcessInstance;\r\n    bpmnModel: BpmnModel;\r\n    actList: ActivityInstanceSlim[] = [];\r\n    transInsList: TransitionInstanceSlim[] = [];\r\n    rootPath: string = '';//基路径\r\n    /**\r\n     * 当前语言\r\n     */\r\n    langCode = (window as any).gspframeworkService && (window as any).gspframeworkService.rtf.language.getLanguageCode() || localStorage.getItem('languageCode') || 'zh-CHS';\r\n\r\n    constructor(container: any, config: CellStyleConfig) {\r\n        super();\r\n        try {\r\n            this.rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n        } catch (error) {\r\n        }\r\n        this.container = container;\r\n        this.createDiv();\r\n        this.graph = this.createGraph(config);\r\n        window.setTimeout(() => {\r\n            this.resetScrollbars();\r\n        }, 0);\r\n        this.refresh();\r\n        this.resizeHandler = () => {\r\n            window.setTimeout(() => {\r\n                if (this.graph != null) {\r\n                    this.refresh();\r\n                }\r\n            }, 0);\r\n        };\r\n        mxEvent.addListener(window, 'resize', this.resizeHandler);\r\n\r\n        this.graph.getSelectionModel().addListener(mxEvent.CHANGE, (sender: any, evt: MxGraphNS.mxEventObject) => {\r\n            this.cellSelect(sender, evt);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置当前语言\r\n     * @param lang\r\n     */\r\n    setLanguage(lang: string) {\r\n        this.langCode = lang;\r\n        if (this.graph) {\r\n            this.graph.langCode = lang;\r\n        }\r\n    }\r\n\r\n    switchMode({ mode, actiInstList, transInsList }) {\r\n        this.mode = mode;\r\n        this.actList = actiInstList;\r\n        this.transInsList = transInsList;\r\n\r\n        this.graph.actList = this.actList;\r\n        this.graph.transInsList = this.transInsList;\r\n        this.graph.mode = this.mode;\r\n        this.graph.reloadBpmnModel();\r\n    }\r\n\r\n    load(data: any) {\r\n        if (data) {\r\n            this.processInstance = data.processInstance;\r\n            this.actList = data.actiInstList;\r\n            this.transInsList = data.transInsList;\r\n            this.mode = data.mode;\r\n\r\n            this.graph.actList = this.actList;\r\n            this.graph.transInsList = this.transInsList;\r\n            this.graph.mode = this.mode;\r\n            this.graph.loadBpmnModel(data.content);\r\n            this.resetScrollbars();\r\n\r\n        }\r\n    }\r\n\r\n    createDiv() {\r\n        this.diagramContainer = document.createElement('div');\r\n        this.diagramContainer.className = 'flowChartContainer';\r\n\r\n        this.container.appendChild(this.diagramContainer);\r\n        setTimeout(() => {\r\n            // this.diagramContainer.style.overflow = 'hidden';\r\n\r\n            mxEvent.addListener(this.diagramContainer, 'mouseover', () => {\r\n                // this.diagramContainer.style.overflow = 'auto';\r\n                this.diagramContainer.classList.add('active');\r\n            });\r\n            mxEvent.addListener(this.diagramContainer, 'mouseleave', () => {\r\n                // this.diagramContainer.style.overflow = 'hidden';\r\n                this.diagramContainer.classList.remove('active');\r\n            });\r\n        }, 0);\r\n\r\n        const buttonIn = document.createElement('a');\r\n        buttonIn.setAttribute('href', 'javascript:void(0);');\r\n        let buttonInImg = document.createElement('img');\r\n        buttonIn.style.marginRight = '10px';\r\n        buttonInImg.src = this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/zoomIn.svg';\r\n        buttonInImg.style.display = \"inline-block\";\r\n        buttonInImg.style.verticalAlign = \"middle\";\r\n        buttonIn.appendChild(buttonInImg);\r\n        mxEvent.addListener(buttonIn, 'click', (evt: PointerEvent) => {\r\n            this.graph.zoomIn();\r\n        });\r\n\r\n        const buttonOut = document.createElement('a');\r\n        buttonOut.setAttribute('href', 'javascript:void(0);');\r\n        let buttonOutImg = document.createElement('img');\r\n        buttonOutImg.src = this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/zoomOut.svg';\r\n        buttonOutImg.style.display = \"inline-block\";\r\n        buttonOutImg.style.verticalAlign = \"middle\";\r\n        buttonOut.appendChild(buttonOutImg);\r\n        mxEvent.addListener(buttonOut, 'click', (evt: PointerEvent) => {\r\n            this.graph.zoomOut();\r\n        });\r\n\r\n        const zoomBar = document.createElement('div');\r\n        zoomBar.className = 'zoomBar';\r\n        zoomBar.style.position = 'absolute';\r\n        zoomBar.style.top = '10px';\r\n        zoomBar.style.right = '20px';\r\n\r\n        zoomBar.appendChild(buttonIn);\r\n        zoomBar.appendChild(buttonOut);\r\n\r\n        // zoomBar.appendChild(zoom);\r\n        this.container.appendChild(zoomBar);\r\n\r\n    }\r\n\r\n    createGraph(config: CellStyleConfig) {\r\n        mxConstants.VERTEX_SELECTION_STROKEWIDTH = 1;\r\n        mxConstants.VERTEX_SELECTION_COLOR = '#0000CD';\r\n        mxConstants.VERTEX_SELECTION_DASHED = true;\r\n\r\n        const graph = new FlowGraph(this.diagramContainer, config);\r\n        // 创建无限大画布\r\n        graph.createInfiniteCanvas();\r\n        // 创建后需要调用一次才生效\r\n        graph.sizeDidChange();\r\n\r\n        graph.popupMenuHandler.autoExpand = true;\r\n        graph.popupMenuHandler.factoryMethod = (menu, cell, evt) => {\r\n            if (cell != null\r\n                && cell.getId().indexOf('UserActivity') > -1\r\n                && this.actList.findIndex(a => a.activityDefinitionId === cell.getId()) > -1\r\n                && this.processInstance) {\r\n                const actInstId = this.actList.find(a => a.activityDefinitionId === cell.getId()).activityInstanceId;\r\n                menu.addItem('查看单据', null, () => {\r\n                    this.viewForm(this.processInstance.id, actInstId, this.processInstance.bizInstId);\r\n                });\r\n            }\r\n            if (cell != null\r\n                && cell.getId().indexOf('AifCreationBillActivity') > -1\r\n                && this.actList.findIndex(a => a.activityDefinitionId === cell.getId()) > -1\r\n                && this.processInstance) {\r\n                // 筛选状态是Running的自动生单活动实例\r\n                const actInsts = this.actList.filter(a => a.activityDefinitionId === cell.getId() && a.state == \"RUNNING\");\r\n                if (actInsts.length == 1) {\r\n                    const actInst = actInsts[0];\r\n                    menu.addItem('重试', null, () => {\r\n                        this.retryAifCreation(this.processInstance.id, actInst.activityInstanceId, this.processInstance.bizInstId);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        return graph;\r\n    }\r\n\r\n    cellSelect(sender, evt: MxGraphNS.mxEventObject) {\r\n        if (!(sender instanceof mxGraphSelectionModel)) {\r\n            return;\r\n        }\r\n        const selectedCell = sender.cells[0];\r\n        if (selectedCell) {\r\n            if (selectedCell.vertex) {\r\n                const selectId = selectedCell.getId();\r\n                // 选中子流程节点时，弹出子流程图\r\n                if (selectId && selectId.indexOf('CallActivitySubProcess') > -1\r\n                    && this.actList.findIndex(a => a.state !== 'FORECAST'\r\n                        && a.activityDefinitionId === selectId) > -1\r\n                ) {\r\n                    const actInsts = this.actList.filter(a => a.state !== 'FORECAST' && a.activityDefinitionId === selectId);\r\n                    const activeInst = actInsts.find(a => a.state === 'RUNNING');\r\n                    if (activeInst) {\r\n                        this.viewChildProcessChart(activeInst);\r\n                    } else {\r\n                        this.viewChildProcessChart(actInsts[0]);\r\n                    }\r\n                } else {\r\n                    this.ngComp.viewLogs({ type: 'activity', actiDefId: selectedCell.id });\r\n                }\r\n            } else {\r\n                this.ngComp.viewLogs({ type: 'sequence' });\r\n            }\r\n        } else {\r\n            this.ngComp.viewLogs({ type: 'process' });\r\n        }\r\n    }\r\n\r\n    viewChildProcessChart(actInst: ActivityInstanceSlim) {\r\n        this.ngComp.viewChild(actInst, this.processInstance);\r\n    }\r\n\r\n    viewForm(procInstId: string, actInstId: string, bizInstId: string) {\r\n        this.ngComp.viewForm(procInstId, actInstId, bizInstId);\r\n    }\r\n\r\n    retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n        this.ngComp.retryAifCreation(procInstId, actInstId, bizInstId);\r\n    }\r\n\r\n    resetScrollbars() {\r\n        let bounds = this.graph.getGraphBounds();\r\n        let width = Math.max(bounds.width * this.graph.view.scale, 0); // this.getScrollTileSize().width * this.graph.view.scale);\r\n        let height = Math.max(bounds.height * this.graph.view.scale, 0); // this.getScrollTileSize().height * this.graph.view.scale);\r\n        this.graph.container.scrollTop = Math.floor(Math.max(0, bounds.y - Math.max(20, (this.graph.container.clientHeight - height) / 2)));\r\n        this.graph.container.scrollLeft = Math.floor(Math.max(0, bounds.x - Math.max(0, (this.graph.container.clientWidth - width) / 2)));\r\n    }\r\n    refresh() {\r\n        this.resetScrollbars();\r\n    }\r\n\r\n    reloadBpmnModel() {\r\n        this.graph.removeCells(this.graph.getChildCells(this.graph.getDefaultParent()));\r\n    }\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ModalOptions, BsModalService } from '@farris/ui-modal';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { translate } from './services/i18n/index';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ForecastProcessPayload } from './entity/forecast-process-payload';\r\nimport { ProcessInstance } from './flow-chart';\r\n\r\n\r\n@Injectable()\r\nexport class WFFlowchartService {\r\n\r\n    private flowchartService: UiFlowchartService;\r\n    private frameworkService: FrameworkService;\r\n\r\n    constructor(\r\n        private msgService: MessagerService,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private modalService: BsModalService,\r\n    ) {\r\n        this.flowchartService = this.injector.get(UiFlowchartService);\r\n        this.frameworkService = this.injector.get(FrameworkService);\r\n    }\r\n\r\n    /**\r\n     * 查看流程图，支持预览\r\n     * @param payload \r\n     * @returns \r\n     */\r\n    viewProcess(payload: ForecastProcessPayload) {\r\n        if (!payload || !payload.dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noDataId'));\r\n            return;\r\n        }\r\n        if (!payload || !payload.bizDefKey) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noBizDefKey'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', payload.dataId);\r\n        parameters.set('bizDefKey', payload.bizDefKey);\r\n        if (payload.startMode) {\r\n            parameters.set('startMode', payload.startMode);\r\n        }\r\n        if (payload.startUserId) {\r\n            parameters.set('startUserId', payload.startUserId);\r\n        }\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: payload.dataId,\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 根据流程实例id查看流程（tab页中打开）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewFlowChart(procInstId: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('processId', procInstId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 根据单据内码查看流程\r\n     * @param dataId 单据内码\r\n     * @returns \r\n     */\r\n    viewFlowChartByDataId(dataId: string) {\r\n        if (!dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.dataIdIsNull'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', dataId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 查看流程（弹框中打开）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewFlowChartByDialog(procInstId: string, mode?: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        this.flowchartService.getProcessInstanceById(procInstId).subscribe(re => {\r\n            if (re) {\r\n                this.viewMutiInstanceFlowChartByDialog([re]);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 查看流程（弹框中打开，兼容多实例子流程）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewMutiInstanceFlowChartByDialog(procInstList: ProcessInstance[], mode?: string) {\r\n        let func;\r\n        if (UIFlowchartComponent.func) {\r\n            func = UIFlowchartComponent.func;\r\n        }\r\n        const options: ModalOptions = {\r\n            title: this.getI18nValue('static.flowchart.title'),\r\n            width: 1200,\r\n            height: 530,\r\n            showButtons: false,\r\n            beforeClose: (modalRef: any) => {\r\n                if (UIFlowchartComponent.func) {\r\n                    window.removeEventListener('message', UIFlowchartComponent.func, false);\r\n                }\r\n                if (func) {\r\n                    window.addEventListener('message', func, false);\r\n                    UIFlowchartComponent.func = func;\r\n                }\r\n                return of(true);\r\n            }\r\n        };\r\n        const compFactory = this.resolver.resolveComponentFactory(UIFlowchartComponent);\r\n        const inj = Injector.create({\r\n            providers: [{\r\n                provide: UiFlowchartService, useFactory: (httpSvc) => {\r\n                    return new UiFlowchartService(httpSvc);\r\n                },\r\n                deps: [\r\n                    HttpService\r\n                ]\r\n            }], parent: this.injector\r\n        });\r\n        const compRef = compFactory.create(inj);\r\n        if (procInstList && procInstList.length) {\r\n            if (procInstList.length == 1) {\r\n                options.showHeader = true;\r\n                options.title = procInstList[0].name + '-v' + procInstList[0].version + '.0';\r\n                compRef.instance.ProcInstId = procInstList[0].id;\r\n            } else {\r\n                options.showHeader = false;\r\n                compRef.instance.ProcInstList = procInstList;\r\n            }\r\n        }\r\n        if (mode) {\r\n            compRef.instance.mode = mode;\r\n        }\r\n        compRef.instance.fill();\r\n        const dialog = this.modalService.show(compRef, options);\r\n        compRef.instance.dialog = dialog;\r\n    }\r\n\r\n    /**\r\n     * 查看流程图。（如果作为共享的外部流程，则打开共享的查看流程）\r\n     * @param procInstId 流程实例id\r\n     * @param dataId 单据内码\r\n     */\r\n    viewFlowchartByProcInstIdAndDataId(procInstId: string, dataId: string) {\r\n        this.flowchartService.ifThirdTask(procInstId).subscribe(ifThirdTask => {\r\n            if (ifThirdTask === true) {//是第三方的任务\r\n                this.flowchartService.getFsParamsByBizId(dataId).subscribe(params => {//获取查看流程图所需参数\r\n                    if (params) {//有不往共享单据表推数据的情况，此时返回为空\r\n                        const param = {\r\n                            \"lcsl\": params[0],\r\n                            \"djnm\": params[1],\r\n                            \"djlx\": params[2],\r\n                            \"djbh\": params[3]\r\n                        }\r\n                        this.flowchartService.viewFsProcessNew(param).subscribe(re => {//旧接口报错，改调新接口\r\n                            if (re && re.value) {\r\n                                this.openViewProcessMenu(re.value);\r\n                            }\r\n                        }, error => {\r\n                            this.viewFlowChart(procInstId);\r\n                        })\r\n                    } else {\r\n                        this.viewFlowChart(procInstId);\r\n                    }\r\n                }, error => {\r\n                    this.viewFlowChart(procInstId);\r\n                })\r\n            } else {//WF的任务\r\n                this.viewFlowChart(procInstId);\r\n            }\r\n        }, error => {\r\n            this.viewFlowChart(procInstId);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 共享的任务，借用自己的查看流程菜单，iframe嵌入共享的查看流程URL\r\n     * @param entity 任务实体，区分tab页\r\n     * @param url 共享查看流程的URL\r\n     */\r\n    private openViewProcessMenu(url: string) {\r\n        const queryParams = new Map<string, any>();\r\n        queryParams.set(\"thirdTask\", true);\r\n        const entityParams = new Map<string, any>();\r\n        entityParams.set(\"thirdProcessUrl\", url);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            entityParams: entityParams,\r\n            queryStringParams: queryParams\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 获取i18n\r\n     */\r\n    private getI18nValue(name: string) {\r\n        if (!name) { return ''; }\r\n        var defaultLang = localStorage.getItem('languageCode');\r\n        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n        let resultVal = '';\r\n        if (name.indexOf('.') === -1) {\r\n            resultVal = langData[name];\r\n        } else {\r\n            resultVal = name.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, langData);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    /**\r\n     * 判断是否inSuite环境\r\n     */\r\n    private isInSuite(): boolean {\r\n        const frameWorkService = (window as any).gspframeworkService;\r\n        if (frameWorkService && frameWorkService.rtf) {\r\n            const extendMethod = frameWorkService.rtf.extendMethod;\r\n            if (extendMethod && extendMethod.getExtObj()) {\r\n                var extObj = extendMethod.getExtObj();\r\n                const mode = extObj.iGIX4inSuiteMode();\r\n                if (mode) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 打开菜单，区分是否inSuite环境，用不同方式打开菜单\r\n     * @param options 打开参数\r\n     * @param menuTitle 菜单名称\r\n     */\r\n    private openMenu(options: any) {\r\n        const menuTitle = this.getI18nValue('static.flowchart.title')\r\n        if (this.isInSuite()) {\r\n            options.menuTitle = menuTitle;\r\n            var extObj = (window as any).gspframeworkService.rtf.extendMethod.getExtObj();\r\n            extObj.iGIXMenuOpen(options);\r\n        } else {\r\n            this.frameworkService.openMenu$(options).subscribe(re => {\r\n\r\n            }, error => {\r\n                console.error(error);\r\n            })\r\n        }\r\n    }\r\n}\r\n","import {\r\n  Component, OnInit, ViewChild, ElementRef, Input, Output,\r\n  EventEmitter, HostBinding, ChangeDetectorRef, Optional, Injector, ViewContainerRef, ViewEncapsulation, LOCALE_ID, ReflectiveInjector, AfterViewChecked\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LoadingService } from \"@farris/ui-loading\";\r\nimport { NotifyService } from '@farris/ui-notify';\r\n\r\nimport { FlowChart } from '../flow-chart/FlowChart';\r\nimport { UiFlowchartService } from '../services/ui-flowchart.service';\r\nimport { WFFlowchartService } from '../wf-flowchart.service';\r\nimport { CellStyleConfig } from '../entity/cell-style/CellStyleConfig';\r\nimport { ActivityInstanceSlim, ProcessInstance } from '../flow-chart/entity';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\n\r\n@Component({\r\n  selector: 'wf-flowchart',\r\n  templateUrl: './task-flowchart.component.html',\r\n  styleUrls: ['./task-flowchart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class UIFlowchartComponent implements OnInit, AfterViewChecked {\r\n\r\n  static func: any = null; // 消息监听处理方法\r\n  @HostBinding('class') cls = 'd-flex flex-fill h-100';\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n  @Output() modalHide = new EventEmitter<boolean>();\r\n  procInstId: string;//流程实例id\r\n  dataId: string;//表单id\r\n  actDefId: string;//节点定义id\r\n  ifForecast: string;//是否预测\r\n  type: any; //type = 'process'查看流程日志；type = 'activity'，查看节点日志\r\n  content: string; // bpmnModel\r\n  actInstList: any[]; // 活动实例List\r\n  transInsList: any[];  // 流转实例\r\n  processInstance: any;\r\n  fcHtml = window.document.location.origin + '/platform/runtime/wf/web/designer/flowchart.html?v=20221111';\r\n\r\n  @Input() theme = 'viewFlowChart';\r\n  @Input() processForecastPayload: any;\r\n  dialog: BsModalRef;\r\n\r\n  private _mode = 'complete';\r\n\r\n  @Input()\r\n  set mode(v: string) {\r\n    this._mode = v;\r\n    if (this._mode === 'simulation') {\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n    } else if (this._mode === 'complete') {\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n    }\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n\r\n  modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n  typeList = [\r\n    {\r\n      value: 'complete', text: this.service.getI18nValue('static.flowchart.complete')\r\n    },\r\n    {\r\n      value: 'simulation', text: this.service.getI18nValue('static.flowchart.simulation')\r\n    }\r\n  ];\r\n\r\n  private message: MessagerService;\r\n  private frameworkSvc: FrameworkService;\r\n\r\n  @Input()\r\n  set ProcInstId(procInstId: string) {\r\n    if (procInstId) {\r\n      this.procInstId = procInstId;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set DataId(dataId: string) {\r\n    if (dataId) {\r\n      this.dataId = dataId;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set ProcInstList(procInstList: ProcessInstance[]) {\r\n    if (procInstList && procInstList.length) {\r\n      this.procInstId = procInstList[0].id;\r\n      this.procInstList = procInstList;\r\n    }\r\n  }\r\n\r\n  @ViewChild(\"flowChartContainer\") flowChartContainerER: ElementRef<HTMLDivElement>;\r\n  @ViewChild(\"flowChartContainer\", { read: ViewContainerRef })\r\n  flowChartContainerVCR: ViewContainerRef;\r\n  flowChart: FlowChart;\r\n  localeId: string = \"zh-CHS\";\r\n  loading: LoadingService;\r\n  notify: NotifyService;\r\n  procInstList: ProcessInstance[] = [];//流程实例list，多实例子流程使用\r\n  curChildProcInst: ProcessInstance;//当前选中的流程\r\n\r\n  flowChartContainerClientSize: {\r\n    clientHeight?: number;\r\n    clientWidth?: number;\r\n  } = {};\r\n\r\n  sequenceColorList = [//颜色分支线说明\r\n    {\r\n      colorClass: 'color-gey',\r\n      label: 'completed'\r\n    }, {\r\n      colorClass: 'color-yellow',\r\n      label: 'calculate'\r\n    }, {\r\n      colorClass: 'color-blue',\r\n      label: 'default'\r\n    }, {\r\n      colorClass: 'color-red',\r\n      label: 'suspend'\r\n    }\r\n  ]\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private service: UiFlowchartService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private injector: Injector,\r\n    @Optional() private chartService: WFFlowchartService,\r\n  ) {\r\n    this.message = this.injector.get(MessagerService);\r\n    this.frameworkSvc = this.injector.get(FrameworkService);\r\n    this.localeId = this.injector.get(LOCALE_ID, null) || this.localeId;\r\n    this.loading = this.injector.get(LoadingService, null);\r\n    if (this.loading == null) {\r\n      const inject = ReflectiveInjector.resolveAndCreate([\r\n        LoadingService\r\n      ], this.injector);\r\n      this.loading = inject.get(LoadingService, null);\r\n    }\r\n    this.notify = this.injector.get(NotifyService, null);\r\n    if (this.notify == null) {\r\n      const inject = ReflectiveInjector.resolveAndCreate([\r\n        NotifyService\r\n      ], this.injector);\r\n      this.notify = inject.get(NotifyService, null);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.getFlowChartStyleConfig().subscribe((config: CellStyleConfig) => {\r\n      setTimeout(() => {\r\n        this.createFlowChart(config);\r\n        this.viewFlowChart();\r\n      }, 300);\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // 监听画布容器高度和宽度属性变化，发生变化时刷新画布\r\n    if (this.flowChartContainerER == null || this.flowChartContainerER.nativeElement == null || this.flowChart == null) {\r\n      return;\r\n    }\r\n    if (this.flowChartContainerClientSize.clientHeight != this.flowChartContainerER.nativeElement.clientHeight\r\n      || this.flowChartContainerClientSize.clientWidth != this.flowChartContainerER.nativeElement.clientWidth\r\n    ) {\r\n      this.flowChartContainerClientSize = {\r\n        clientHeight: this.flowChartContainerER.nativeElement.clientHeight,\r\n        clientWidth: this.flowChartContainerER.nativeElement.clientWidth,\r\n      };\r\n\r\n      this.flowChart.refresh();\r\n      this.flowChart.graph.sizeDidChange();\r\n    }\r\n  }\r\n\r\n  createFlowChart(config: CellStyleConfig) {\r\n    this.flowChart = new FlowChart(this.flowChartContainerER.nativeElement, config);\r\n    this.flowChart.ngComp = this;\r\n    this.flowChart.setLanguage(this.localeId);\r\n  }\r\n\r\n  viewFlowChart() {\r\n    if (this.theme === 'viewFlowChart') {\r\n      this.viewFlowChartByProcInstId();\r\n    } else {\r\n      this.processForecast();\r\n    }\r\n  }\r\n\r\n  tabChange(event: any) {\r\n    this.procInstId = event.nextId;\r\n    this.viewFlowChart();\r\n    this.flowChart.reloadBpmnModel();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  /**\r\n   * 查看子流程图\r\n   * @param actInst 活动实例 \r\n   * @param superProcess 父流程 \r\n   */\r\n  viewChild(actInst: ActivityInstanceSlim, superProcess: ProcessInstance) {\r\n    this.service.getMutiChildInstance(actInst, superProcess.id).subscribe((re: ProcessInstance[]) => {\r\n      if (this.chartService && re && re.length) {\r\n        if (re.length == 1) {//单个子流程\r\n          this.chartService.viewFlowChartByDialog(re[0].id, this.mode);\r\n        } else {//多实例子流程\r\n          this.chartService.viewMutiInstanceFlowChartByDialog(re, this.mode);\r\n        }\r\n      } else {\r\n        throw Error('请升级查看流程公共包实现联查子流程图功能');\r\n      }\r\n    });\r\n  }\r\n\r\n  modeSwitch() {\r\n    if (this.mode === 'complete') {\r\n      this.mode = 'simulation';\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n      this.service.getForecastProcessByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.flowChart.switchMode({\r\n          mode: 'simulation',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    } else {\r\n      this.mode = 'complete';\r\n      this.ifForecast = 'false';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n      this.service.getCompleteProcessInfoByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.flowChart.switchMode({\r\n          mode: 'complete',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  viewLogs(data: any) {\r\n    this.type = data.type;\r\n    this.actDefId = data.actiDefId;\r\n  }\r\n\r\n  viewFlowChartByProcInstId() {\r\n    this.content = '';\r\n    if (this.procInstId) {\r\n      if (this.mode === 'complete') {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getCompleteProcessInfoByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      } else {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getForecastProcessByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  processForecast() {\r\n    this.content = '';\r\n    this.mode = 'simulation';\r\n    if (this.processForecastPayload.processDefinitionId && this.processForecastPayload.dataId) {\r\n      forkJoin(\r\n        this.service.getBpmnModelbyProcDefId(this.processForecastPayload.processDefinitionId),\r\n        this.service.getForecastProcessByPayload(this.processForecastPayload))\r\n        .subscribe((data: any[]) => {\r\n          this.content = JSON.stringify(data[0]);\r\n          this.actInstList = data[1].activityInstanceSlims;\r\n          this.transInsList = data[1].transitionInstanceSlims;\r\n          this.loadFlowChart();\r\n        });\r\n    }\r\n  }\r\n\r\n  viewForm(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      this.service.getFormInfoByActInstId(procInstId, actInstId).subscribe((re: any) => {\r\n        const formInfo = re;\r\n        if (!formInfo || !formInfo.appId) {\r\n          if (this.message) {\r\n            this.message.info('找不到单据，请联系管理员查看原因！');\r\n          }\r\n          return;\r\n        }\r\n        const options: AppOptions = {\r\n          appType: 'menu',\r\n          funcId: formInfo.appId,\r\n          appId: '',\r\n          appEntrance: '',\r\n          tabId: bizInstId,\r\n          isNewTab: true\r\n        };\r\n        // 传工作流上下文参数\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('procInstId', procInstId);\r\n        parameters.set('actInstId', actInstId);\r\n        formInfo.parameters.forEach((item: any) =>\r\n          parameters.set(item.code, item.value)\r\n        );\r\n        options.queryStringParams = parameters;\r\n        if (this.frameworkSvc) {\r\n          this.frameworkSvc.openMenu(options);\r\n        } else {\r\n          throw Error('框架服务不存在！无法联查！');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      const l = this.loading.show();\r\n      this.service.retryAifCreation(procInstId, actInstId, bizInstId).subscribe(\r\n        (re: any) => {\r\n          l.close();\r\n          this.notify.success(\"重试成功\");\r\n          this.viewFlowChart();\r\n        },\r\n        (err) => {\r\n          l.close();\r\n          setTimeout(() => {\r\n            //todo 确定异常结构, 目前采用兼容取值方式\r\n            this.message.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  loadFlowChart() {\r\n    if (this.content) {\r\n      this.flowChart.load({\r\n        processInstance: this.processInstance,\r\n        content: this.content,\r\n        actiInstList: this.actInstList,\r\n        transInsList: this.transInsList,\r\n        mode: this.mode\r\n      });\r\n    }\r\n  }\r\n\r\n  fill() {\r\n    this.cls = 'd-flex flex-fill h-100 f-utils-absolute-all';\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { UiFlowchartService } from './ui-flowchart.service'\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private service: UiFlowchartService\r\n    ) { }\r\n\r\n    transform(name: any, defaultVal = ''): any {\r\n        const r = this.service.getI18nValue(name);\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { WFFlowchartService } from './wf-flowchart.service';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { TranslatePipe } from './services/translate.pipe';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { WfApprovalLogsModule } from '@gsp-wf/wf-approval-logs';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { FarrisTabsModule } from '@farris/ui-tabs';\r\nimport { SplitterModule } from '@farris/ui-splitter';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UIFlowchartComponent,\r\n    TranslatePipe],\r\n  imports: [\r\n    LayoutModule,\r\n    CommonModule,\r\n    FarrisDialogModule,\r\n    MessagerModule.forRoot({\r\n      width: 500\r\n    }),\r\n    FarrisSectionModule,\r\n    WfApprovalLogsModule,\r\n    ComboListModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FDropdownDirectiveTypeModule,\r\n    DatagridModule,\r\n    NotifyModule,\r\n    LoadingModule,\r\n    FarrisTabsModule.forRoot(),\r\n    SplitterModule\r\n  ],\r\n  exports: [UIFlowchartComponent],\r\n  providers: [\r\n    HttpService,\r\n    UiFlowchartService,\r\n    WFFlowchartService,\r\n  ],\r\n  entryComponents: [\r\n    UIFlowchartComponent\r\n  ]\r\n})\r\nexport class UiFlowchartModule { }\r\n","export class ForecastProcessPayload {\r\n\r\n    bizDefKey: string;\r\n\r\n    dataId: string;\r\n\r\n    startMode: string;\r\n\r\n    startUserId: string;\r\n}\r\n"],"names":["translate","zh-CHS","static","approvalLogs","title","approvalOpinion","startTime","endTime","todo","done","toAssign","flowchart","processNotFound","dataIdIsNull","flowChart","complete","simulation","sequenceColor","completed","calculate","default","suspend","noProcess","list","noDataId","noBizDefKey","en","zh-CHT","UiFlowchartService","prototype","getForecastProcessListByPayload","payload","this","httpSvc","post","pipe","map","re","procDefs","getRuntimeProcInstsByDataId","dataId","get","from","Array","getHistoricProcInstsByDataId","getProcInstanceById","procInstId","getBpmnModelbyProcInstId","getBpmnModelbyProcDefId","procDefId","getSubProcessInstance","superActInstId","superProcInstId","getForecastProcessByProcInstId","getForecastProcessByPayload","getCompleteProcessInfoByProcInstId","getAllActiInstsbyProcInstId","getTransitionInstanceSlimsByProcInstId","getFormInfoByProcInstId","getFormInfoByActInstId","actInstId","url","getWorkItemLogs","activityDefinitionId","getI18nValue","name","langData","defaultLang","localStorage","getItem","indexOf","split","reduce","obj","key","getProcessInstanceById","processId","getProcInstIdByDataId","retryAifCreation","bizInstId","ifThirdTask","processInstanceId","getFsParamsByBizId","bizId","viewFsProcessNew","params","getFlowChartStyleConfig","getMutiChildInstance","actInst","activityInstanceId","isMultiInstanceRoot","multiInstanceRoot","Injectable","HttpService","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","tslib_1.__extends","_super","mxCell","Cell","geometry","style","mxGraph","FlowGraph","createVertex","parent","id","x","y","width","height","relative","mxGeometry","vertex","setId","setVertex","setConnectable","createEdge","source","target","edge","setEdge","setDefaultStyles","styleSheet","getStylesheet","vertexStyle","getDefaultVertexStyle","edgeStyle","mxConstants","STYLE_SHAPE","SHAPE_IMAGE","STYLE_VERTICAL_LABEL_POSITION","ALIGN_BOTTOM","STYLE_FONTSIZE","STYLE_FONTFAMILY","STYLE_FONTCOLOR","getDefaultEdgeStyle","STYLE_SOURCE_PORT","STYLE_TARGET_PORT","STYLE_EDGE","EDGESTYLE_ORTHOGONAL","STYLE_ROUNDED","STYLE_STROKECOLOR","createInfiniteCanvas","_this","graphSizeDidChange","getPagePadding","mxPoint","Math","max","round","container","offsetWidth","offsetHeight","getScrollTileSize","scrollTileSize","mxRectangle","getPageSize","pageFormat","pageScale","getPageLayout","x0","y0","w0","h0","size","bounds","getGraphBounds","ceil","view","scale","w","floor","h","getPreferredPageSize","pages","sizeDidChange","graphViewValidate","dx","dy","tx","ty","mxUtils","hasScrollbars","pad","minw","minh","min","minimumGraphSize","autoTranslate","apply","setTranslate","scrollLeft","scrollTop","getBackgroundPageBounds","layout","page","validate","cell","createBpmnModel","bpmnModel","BpmnModel","TargetNamespace","DefaultProcess","Process","DefaultDiagram","BPMNDiagram","BpmnPlane","BpmnElementId","Id","loadBpmnModel","json","removeCells","getChildCells","getDefaultParent","LoadFromJson","drawBpmnGraph","reloadBpmnModel","_a","buildFlowDiagDict","bpmnModel$$1","nodeDict","edgeDict","flowDict","buildFlowDict","drawNodeCells","drawEdgeCells","getModel","beginUpdate","mode","drawInterceptGraph","addJumpEdges","endUpdate","endActDef","firstAct","findFirstStartActivityInstance","actList","EndEvent","findEndActiInstList","transInsList","forEach","endActiInst","drawNextFlowChart","nodeCells","noIncomingNodes","findNoIncomingNodes","noIncomingNodes_1","tslib_1.__values","noIncomingNodes_1_1","node","this_1","filter","a","flowElement","cellId","precursorActivityDefinitionId","find","it","Map","set","getEdgeStyle","insertEdge","points","console","log","moveCells","undefined","additional","keys","bpmnModelElementId","flowElt","diagElt","drawNodeCell","getVertexStyle","label","Name","NameLanguage","langCode","findIndex","insertVertex","Bounds","X","Y","Width","Height","diagramElement","cut","drawEdgeCell","judgeConnectBetweenTwoNodes","sourceId","targetId","outGoings","Outgoings","outGoings_1","outGoings_1_1","TargetRef","SourceRef","sourceActivityDefinitionId","destinationActivityDefinitionId","isOldBpmnEdge","Points","pt","push","state","getState","BpmnLabel","paintBounds","edgeHandler","createEdgeHandler","moveLabel","destroy","getScale","getTranslate","GetFlowElements","diagramElts","GetDiagramElements","elt","Node","Edge","bpmnEdge","pt1","pt2","img","activityInstanceSlims","stateShapeStyle","UserActivity","BizActivityID","cellStyleConfig","shapeStyleDic","OperationActivity","Clr_Type_ID","ClrTypeID","getVertexStyleOld","FlowNodeState","Default","image","acts","item","act","Running","Completed","Terminated","rootPath","StartActivity","CallActivitySubProcess","AutoActivity","IntermediateCatchEventImpl","MessageActivity","NotifyActivity","AifCreationBillActivity","getChartState","parameters","style_1","stateEdgeStyle_1","stateEdgeStyle_2","transitionInstanceSlims","style_2","edgeStyleDic","getEdgeStyleOld","SequenceFlowState","Cut","Add","transIns","t","Simulation","getStrokeColor","stateEdgeStyle","strokeColor","seq","actiDefId","findDrawFlowElementsByActDefId","nextFlowNodeDict","nextSeqFlowDict","outgoings","GetFlowElement","getCellByFlowElementId","some","flowEltId","activities","activities_1","activities_1_1","nodeCells_1","nodeCells_1_1","edges","endActiInstList","getNextTransitions","sourceActInstId","nextTransitions","findTranInstsBySourceActInstId","nextTransitions_1","nextTransitions_1_1","destinationActivityInstanceId","actInst_1","findActInstByActInstId","sourceActivityInstanceId","findNextFlowElementsByFlowElementId","flowElementId","SequenceFlow","FlowNode","outgoing","gspframeworkService","rtf","language","getLanguageCode","common","getBasePath","error","autoScroll","autoExtend","pageVisible","setCellsSelectable","setDisconnectOnMove","setCellsResizable","setEnabled","setVertexLabelsMovable","setCellsLocked","setAllowDanglingEdges","mxEvent","disableContextMenu","mxEventSource","FlowChart","setLanguage","lang","graph","switchMode","actiInstList","load","data","processInstance","content","resetScrollbars","createDiv","buttonIn","diagramContainer","document","createElement","className","appendChild","setTimeout","addListener","classList","add","remove","buttonInImg","setAttribute","buttonOut","marginRight","src","display","verticalAlign","evt","zoomIn","buttonOutImg","zoomBar","zoomOut","position","top","right","createGraph","config","VERTEX_SELECTION_STROKEWIDTH","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_DASHED","popupMenuHandler","autoExpand","factoryMethod","menu","actInstId_1","actInsts","getId","addItem","viewForm","cellSelect","sender","selectId_1","activeInst","mxGraphSelectionModel","selectedCell","cells","viewChildProcessChart","ngComp","viewLogs","type","viewChild","clientHeight","clientWidth","refresh","window","resizeHandler","getSelectionModel","CHANGE","WFFlowchartService","viewProcess","bizDefKey","startMode","startUserId","options","appType","funcId","appId","appEntrance","tabId","isNewTab","queryStringParams","openMenu","msgService","warning","viewFlowChart","Date","getTime","toString","viewFlowChartByDataId","viewFlowChartByDialog","flowchartService","subscribe","viewMutiInstanceFlowChartByDialog","procInstList","UIFlowchartComponent","func","showButtons","beforeClose","modalRef","removeEventListener","addEventListener","of","compFactory","resolver","resolveComponentFactory","inj","Injector","providers","provide","useFactory","deps","injector","compRef","dialog","showHeader","version","instance","ProcInstId","ProcInstList","fill","modalService","show","viewFlowchartByProcInstIdAndDataId","param","lcsl","djnm","djlx","djbh","openViewProcessMenu","queryParams","entityParams","isInSuite","frameWorkService","extendMethod","getExtObj","iGIX4inSuiteMode","menuTitle","iGIXMenuOpen","frameworkService","openMenu$","MessagerService","ComponentFactoryResolver","BsModalService","FrameworkService","defineProperty","_mode","v","ifForecast","modeButton","service","ngOnInit","createFlowChart","ngAfterViewChecked","flowChartContainerER","nativeElement","flowChartContainerClientSize","localeId","theme","viewFlowChartByProcInstId","processForecast","tabChange","event","nextId","closeDialog","close","superProcess","chartService","Error","modeSwitch","r","actInstList","actDefId","forkJoin","JSON","stringify","loadFlowChart","processForecastPayload","processDefinitionId","formInfo","code","frameworkSvc","message","info","l_1","loading","notify","success","err","Message","cls","Component","args","selector","template","encapsulation","ViewEncapsulation","None","DomSanitizer","ChangeDetectorRef","decorators","Optional","HostBinding","ViewChild","Output","Input","read","ViewContainerRef","sanitizer","changeDetector","inject","modalHide","EventEmitter","fcHtml","location","origin","typeList","text","sequenceColorList","colorClass","LOCALE_ID","LoadingService","ReflectiveInjector","resolveAndCreate","NotifyService","TranslatePipe","transform","defaultVal","Pipe","NgModule","declarations","imports","LayoutModule","CommonModule","FarrisDialogModule","MessagerModule","forRoot","FarrisSectionModule","WfApprovalLogsModule","ComboListModule","ReactiveFormsModule","FormsModule","FDropdownDirectiveTypeModule","DatagridModule","NotifyModule","LoadingModule","FarrisTabsModule","SplitterModule","exports","entryComponents","UiFlowchartModule","ForecastProcessPayload"],"mappings":"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"}