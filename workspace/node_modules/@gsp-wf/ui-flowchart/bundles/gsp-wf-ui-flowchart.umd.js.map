{"version":3,"file":"gsp-wf-ui-flowchart.umd.js.map","sources":["ng://@gsp-wf/ui-flowchart/lib/services/i18n/en.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-cht.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-chs.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/index.ts","ng://@gsp-wf/ui-flowchart/lib/services/ui-flowchart.service.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-wf/ui-flowchart/lib/flow-chart/entity/Cell.ts","ng://@gsp-wf/ui-flowchart/lib/flow-chart/FlowGraph.ts","ng://@gsp-wf/ui-flowchart/lib/flow-chart/FlowChart.ts","ng://@gsp-wf/ui-flowchart/lib/wf-flowchart.service.ts","ng://@gsp-wf/ui-flowchart/lib/task-flowchart/task-flowchart.component.ts","ng://@gsp-wf/ui-flowchart/lib/services/translate.pipe.ts","ng://@gsp-wf/ui-flowchart/lib/ui-flowchart.module.ts","ng://@gsp-wf/ui-flowchart/lib/entity/forecast-process-payload.ts"],"sourcesContent":["export const en = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: 'Approval Logs',\r\n            approvalOpinion: 'Approval opinion',\r\n            startTime: 'StartTime',\r\n            endTime: 'EndTime',\r\n            todo: 'Todo',\r\n            done: 'Done',\r\n            toAssign: 'To Assign'\r\n        },\r\n        flowchart: {\r\n            title: 'Flow Chart',\r\n            processNotFound: 'process instance id is null',\r\n            flowChart: 'Flow Chart',\r\n            complete: 'Hide Calculated Route',\r\n            simulation: 'Show Calculated Route',\r\n            sequenceColor: 'Description Of Sequence Color',\r\n            completed: 'Completed',\r\n            calculate: 'Calculate Route',\r\n            default: 'Default',\r\n            suspend: 'Calculate Suspend',\r\n            noProcess: 'Process definition not found!',\r\n            list: 'Process List',\r\n            noDataId: 'form id is null',\r\n            noBizDefKey: 'process category id is null'\r\n        }\r\n    }\r\n};\r\n","export const zh_CHT = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: '審批記錄',\r\n            approvalOpinion: '審批意見',\r\n            startTime: '接收時間',\r\n            endTime: '處理時間',\r\n            todo: '待辦理',\r\n            done: '已辦理',\r\n            toAssign: '未指派'\r\n        },\r\n        flowchart: {\r\n            title: '查看流程',\r\n            processNotFound: '流程實例ID為空',\r\n            dataIdIsNull: '單據內碼為空',\r\n            flowChart: '流程圖',\r\n            complete: '隱藏計算路線',\r\n            simulation: '顯示計算路線',\r\n            sequenceColor: '分支線顏色說明',\r\n            completed: '已運行',\r\n            calculate: '計算路線',\r\n            default: '默認',\r\n            suspend: '計算中斷',\r\n            noProcess: '未找到符合條件的流程定義！',\r\n            list: '流程列表',\r\n            noDataId: '單據內碼為空',\r\n            noBizDefKey: '流程分類ID為空'\r\n        }\r\n    }\r\n};\r\n","export const zh_CHS = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: '审批记录',\r\n            approvalOpinion: '审批意见',\r\n            startTime: '接收时间',\r\n            endTime: '处理时间',\r\n            todo: '待办理',\r\n            done: '已办理',\r\n            toAssign: '未指派'\r\n        },\r\n        flowchart: {\r\n            title: '查看流程',\r\n            processNotFound: '流程实例ID为空',\r\n            dataIdIsNull: '单据内码为空',\r\n            flowChart: '流程图',\r\n            complete: '显示设计路线',\r\n            simulation: '显示预测路线',\r\n            sequenceColor: '分支线颜色说明',\r\n            completed: '已运行',\r\n            calculate: '计算路线',\r\n            default: '默认',\r\n            suspend: '计算中断',\r\n            noProcess: '未找到符合条件的流程定义！',\r\n            list: '流程列表',\r\n            noDataId: '单据内码为空',\r\n            noBizDefKey: '流程分类ID为空'\r\n        }\r\n    }\r\n};\r\n","import { en } from './en';\r\nimport { zh_CHT } from './zh-cht';\r\nimport { zh_CHS } from './zh-chs';\r\n\r\nexport const translate = {\r\n    'zh-CHS': zh_CHS,\r\n    'en': en,\r\n    'zh-CHT': zh_CHT\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { translate } from './i18n/index';\r\nimport { ForecastProcessPayload } from '../entity/forecast-process-payload';\r\nimport { map } from 'rxjs/operators';\r\nimport { ActivityInstanceSlim } from '../flow-chart/entity';\r\n\r\n@Injectable()\r\nexport class UiFlowchartService {\r\n  constructor(private httpSvc: HttpService) { }\r\n\r\n  getForecastProcessListByPayload(payload: ForecastProcessPayload): Observable<any> {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/startProcess-simulation';\r\n    return this.httpSvc.post(url, payload).pipe(\r\n      map((re: any) => re.procDefs)\r\n    );\r\n  }\r\n\r\n  getRuntimeProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/runtimeProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  getHistoricProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/historicProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例ID获取流程实例\r\n   * @param procInstId 流程实例id\r\n   */\r\n  getProcInstanceById(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n  /**\r\n   * 基于流程实例ID获取bpmnModel\r\n   */\r\n  getBpmnModelbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程定义ID获取bpmnModel\r\n   */\r\n  getBpmnModelbyProcDefId(procDefId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/procDefs/${procDefId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getSubProcessInstance(superActInstId: string, superProcInstId: string): Observable<any> {\r\n    if (superActInstId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/subProcInst?superActInstId=${superActInstId}&superProcInstId=${superProcInstId}`;\r\n      return this.httpSvc.get(url);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取所有包含预解析的流程实例信息\r\n   */\r\n  getForecastProcessByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/forecastProcess`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取流程预测数据\r\n   */\r\n  getForecastProcessByPayload(payload: any) {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/forecastProcess';\r\n    return this.httpSvc.post(url, payload);\r\n  }\r\n\r\n  getCompleteProcessInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/flowChartInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例Id获取所有活动实例\r\n   * @param procInstId procInstId\r\n   */\r\n  getAllActiInstsbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/activityInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例ID获取所有的流转实例\r\n   * @param procInstId procInstId\r\n   */\r\n  getTransitionInstanceSlimsByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/transitionInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByActInstId(procInstId: string, actInstId: string): Observable<any> {\r\n    let url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    if (actInstId) {\r\n      url += `?actInstId=${actInstId}`;\r\n    }\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取审批日志信息\r\n   * @param ProcInstId ProcInstId\r\n   * 新改造的接口\r\n   */\r\n  getWorkItemLogs(procInstId: string, activityDefinitionId?: string): Observable<any> {\r\n    const logUrl = activityDefinitionId ?\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs?activityDefinitionId=${activityDefinitionId}` :\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs`;\r\n    return this.httpSvc.get(logUrl);\r\n  }\r\n\r\n  getI18nValue(name: string) {\r\n    if (!name) { return ''; }\r\n    const defaultLang = localStorage.getItem('languageCode');\r\n    const langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n    let resultVal = '';\r\n    if (name.indexOf('.') === -1) {\r\n      resultVal = langData[name];\r\n    } else {\r\n      resultVal = name.split('.').reduce((obj, key) => {\r\n        if (obj) {\r\n          return obj[key];\r\n        } else {\r\n          return null;\r\n        }\r\n      }, langData);\r\n    }\r\n    return resultVal;\r\n  }\r\n\r\n  getProcessInstanceById(processId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${processId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getProcInstIdByDataId(dataId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/procInstId?bizInstId=${dataId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    return this.httpSvc.post(\"/api/runtime/wf/v1.0/aifactivityinstance/retry\", actInstId);\r\n  }\r\n\r\n  /**\r\n   * 是否是外部流程第三方的任务\r\n   * @param processInstanceId 流程实例ID\r\n   */\r\n  ifThirdTask(processInstanceId: string): Observable<any> {\r\n    const url = `/api/runtime/task/v1.0/instances/wfExternalProcess?processInstanceId=${processInstanceId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取查看共享流程图的相关参数\r\n   * @param bizId 单据内码\r\n   */\r\n  getFsParamsByBizId(bizId: string): Observable<any> {\r\n    const url = `/api/runtime/task/v1.0/tasks/third/bizId?bizId=${bizId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取共享查看流程图的URL\r\n   * @param params 参数\r\n   */\r\n  viewFsProcessNew(params: any): Observable<any> {\r\n    const url = `/api/fssp/ssp/v1.0/mybill/fswybz/viewprocess`;\r\n    return this.httpSvc.post(url, params);\r\n  }\r\n\r\n\r\n  getFlowChartStyleConfig(): Observable<any> {\r\n    const url = `/platform/runtime/common/web/@gsp-wf/wf-process-editor/config/cell-style-config.json`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取多实例子流程\r\n   * @param actInst 活动实例\r\n   * @param superProcInstId 父流程实例id\r\n   * @returns \r\n   */\r\n  getMutiChildInstance(actInst: ActivityInstanceSlim, superProcInstId: string): Observable<any> {\r\n    const actInstId = actInst.activityInstanceId;\r\n    const isMultiInstanceRoot = actInst.multiInstanceRoot || false; \r\n    let url = `/api/runtime/wf/v1.0/processInstances/subProcInstList?actInstId=${actInstId}&isMultiInstanceRoot=${isMultiInstanceRoot}&superProcInstId=${superProcInstId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { mxCell, MxGraphNS } from \"@edp-pmf/mxgraph-ts\";\r\nimport { FlowElement, DiagramElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class Cell extends mxCell {\r\n    flowElement: FlowElement;\r\n    diagramElement: DiagramElement & { BpmnElementId: string };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n}\r\n","import { mxGraph, mxEvent, mxConstants, mxPoint, mxRectangle, mxUtils, MxGraphNS, mxGeometry } from \"@edp-pmf/mxgraph-ts\";\r\nimport { EndEvent, BpmnModel, Process, BPMNDiagram, FlowElement, DiagramElement, BPMNShape, BPMNEdge, SequenceFlow, FlowNode, Node, Edge, FlowNodeState, SequenceFlowState } from \"@edp-pmf/bpmn-model\";\r\nimport { StartActivity, UserActivity, CallActivitySubProcess, AutoActivity, IntermediateCatchEventImpl, OperationActivity, MessageActivity, NotifyActivity, AifCreationBillActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { Cell } from \"./entity/Cell\";\r\nimport { ActivityInstanceSlim } from \"./entity/ActivityInstanceSlim\";\r\nimport { TransitionInstanceSlim } from \"./entity/TransitionInstanceSlim\";\r\nimport { CellStyleConfig } from \"../entity/cell-style/CellStyleConfig\";\r\nimport { StateShapeStyle } from \"../entity/cell-style/StateShapeStyle\";\r\n\r\nexport class FlowGraph extends mxGraph {\r\n    bpmnModel: BpmnModel;\r\n    autoTranslate: boolean;\r\n    scrollTileSize: MxGraphNS.mxRectangle = new mxRectangle(0, 0, 400, 600);\r\n    getPagePadding: () => MxGraphNS.mxPoint;\r\n    getPageSize: () => MxGraphNS.mxRectangle;\r\n    getScrollTileSize: () => MxGraphNS.mxRectangle;\r\n    getPageLayout: () => MxGraphNS.mxRectangle;\r\n\r\n    cellStyleConfig: CellStyleConfig = {\r\n        edgeStyleDic: {},\r\n        shapeStyleDic: {},\r\n    };\r\n\r\n    actList: ActivityInstanceSlim[] = [];\r\n    transInsList: TransitionInstanceSlim[] = [];\r\n    mode: string;\r\n    rootPath: string = '';//基路径\r\n    /**\r\n     * 当前语言\r\n     */\r\n    langCode = (window as any).gspframeworkService && (window as any).gspframeworkService.rtf.language.getLanguageCode() || localStorage.getItem('languageCode') || 'zh-CHS';\r\n\r\n    constructor(container: HTMLDivElement, cellStyleConfig?: CellStyleConfig) {\r\n        super(container);\r\n        //获取基路径\r\n        try {\r\n            this.rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n        } catch (error) {\r\n        }\r\n        this.cellStyleConfig = cellStyleConfig ? cellStyleConfig : this.cellStyleConfig;\r\n        this.autoScroll = false;\r\n        this.autoExtend = true;\r\n        this.pageVisible = false;\r\n        //this.panningHandler.ignoreCell = true;\r\n        //this.setPanning(true);\r\n        this.setCellsSelectable(true);\r\n        this.setDisconnectOnMove(false);\r\n        //节点不可改变大小\r\n        this.setCellsResizable(false);\r\n        //cell是否可以连线\r\n        this.setConnectable(false);\r\n        //禁止操作\r\n        this.setEnabled(true);\r\n        //设置cell文本是否可移动\r\n        this.setVertexLabelsMovable(false);\r\n\r\n        this.setCellsLocked(true);\r\n        //不允许图上存在没有连接活动节点的线（防止拖动线连接点导致失去连接）,还没有找到不允许拖动连接控制点的属性\r\n        this.setAllowDanglingEdges(false);\r\n        mxEvent.disableContextMenu(container);\r\n\r\n        // 设置默认样式\r\n        this.setDefaultStyles();\r\n    }\r\n\r\n    /**\r\n     * 重写创建节点对象方法\r\n     * @param parent\r\n     * @param id\r\n     * @param value\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param height\r\n     * @param style\r\n     * @param relative\r\n     * @returns\r\n     */\r\n    createVertex(parent, id, value, x, y, width, height, style, relative) {\r\n        // Creates the geometry for the vertex\r\n        const geometry = new mxGeometry(x, y, width, height);\r\n        geometry.relative = (relative != null) ? relative : false;\r\n\r\n        // Creates the vertex\r\n        const vertex = new Cell(value, geometry, style);\r\n        vertex.setId(id);\r\n        vertex.setVertex(true);\r\n        vertex.setConnectable(true);\r\n\r\n        return vertex;\r\n    }\r\n\r\n    /**\r\n     * 重写创建边对象方法\r\n     * @param parent\r\n     * @param id\r\n     * @param value\r\n     * @param source\r\n     * @param target\r\n     * @param style\r\n     * @returns\r\n     */\r\n    createEdge(parent, id, value, source, target, style) {\r\n        // Creates the edge\r\n        var edge = new Cell(value, new mxGeometry(), style);\r\n        edge.setId(id);\r\n        edge.setEdge(true);\r\n        edge.geometry.relative = true;\r\n\r\n        return edge;\r\n    }\r\n\r\n    /**\r\n     * 设置默认样式\r\n     */\r\n    setDefaultStyles() {\r\n        const styleSheet = this.getStylesheet();\r\n        // 节点默认样式\r\n        const vertexStyle = styleSheet.getDefaultVertexStyle();\r\n        vertexStyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\r\n        vertexStyle[mxConstants.STYLE_VERTICAL_LABEL_POSITION] = mxConstants.ALIGN_BOTTOM;\r\n        vertexStyle[mxConstants.STYLE_FONTSIZE] = 12;\r\n        vertexStyle[mxConstants.STYLE_FONTFAMILY] = 'Helvetica';\r\n        vertexStyle[mxConstants.STYLE_FONTCOLOR] = \"#333\";\r\n\r\n        // 连线样式默认为正交\r\n        const edgeStyle = styleSheet.getDefaultEdgeStyle();\r\n        edgeStyle[mxConstants.STYLE_SOURCE_PORT] = 'e';\r\n        edgeStyle[mxConstants.STYLE_TARGET_PORT] = 'w';\r\n        edgeStyle[mxConstants.STYLE_EDGE] = mxConstants.EDGESTYLE_ORTHOGONAL;\r\n        edgeStyle[mxConstants.STYLE_ROUNDED] = 1;\r\n        edgeStyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\r\n        edgeStyle[mxConstants.STYLE_FONTSIZE] = 12;\r\n        edgeStyle[mxConstants.STYLE_FONTFAMILY] = 'Helvetica';\r\n    }\r\n\r\n    /**\r\n     * 创建无限大画布\r\n     */\r\n    createInfiniteCanvas() {\r\n        this.getPagePadding = () => {\r\n            return new mxPoint(\r\n                Math.max(0, Math.round(this.container.offsetWidth - 34)),\r\n                Math.max(0, Math.round(this.container.offsetHeight - 34)));\r\n        }\r\n\r\n        this.getScrollTileSize = () => {\r\n            if (this.scrollTileSize == null) {\r\n                this.scrollTileSize = new mxRectangle(0, 0, 400, 600);\r\n            }\r\n\r\n            return this.scrollTileSize;\r\n        }\r\n\r\n        this.getPageSize = () => {\r\n            return (this.pageVisible) ? new mxRectangle(0, 0, this.pageFormat.width * this.pageScale, this.pageFormat.height * this.pageScale) : this.getScrollTileSize();\r\n        }\r\n\r\n        this.getPageLayout = () => {\r\n            let size = (this.pageVisible) ? this.getPageSize() : this.getScrollTileSize();\r\n            let bounds = this.getGraphBounds();\r\n\r\n            if (bounds.width == 0 || bounds.height == 0) {\r\n                return new mxRectangle(0, 0, 1, 1);\r\n            }\r\n            else {\r\n                // Computes untransformed graph bounds\r\n                let x = Math.ceil(bounds.x / this.view.scale - this.view.translate.x);\r\n                let y = Math.ceil(bounds.y / this.view.scale - this.view.translate.y);\r\n                let w = Math.floor(bounds.width / this.view.scale);\r\n                let h = Math.floor(bounds.height / this.view.scale);\r\n\r\n                let x0 = Math.floor(x / size.width);\r\n                let y0 = Math.floor(y / size.height);\r\n                let w0 = Math.ceil((x + w) / size.width) - x0;\r\n                let h0 = Math.ceil((y + h) / size.height) - y0;\r\n\r\n                return new mxRectangle(x0, y0, w0, h0);\r\n            }\r\n        }\r\n\r\n        this.getPreferredPageSize = (bounds, width, height) => {\r\n            let pages = this.getPageLayout();\r\n            let size = this.getPageSize();\r\n\r\n            return new mxRectangle(0, 0, pages.width * size.width, pages.height * size.height);\r\n        };\r\n\r\n        // 重写画布大小变化后方法\r\n        const graphSizeDidChange = this.sizeDidChange;\r\n        this.sizeDidChange = () => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pages = this.getPageLayout();\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n\r\n                // Updates the minimum graph size\r\n                let minw = Math.ceil(2 * pad.x / this.view.scale + pages.width * size.width);\r\n                let minh = Math.ceil(2 * pad.y / this.view.scale + pages.height * size.height);\r\n\r\n                let min = this.minimumGraphSize;\r\n\r\n                // LATER: Fix flicker of scrollbar size in IE quirks mode\r\n                // after delayed call in window.resize event handler\r\n                if (min == null || min.width != minw || min.height != minh) {\r\n                    this.minimumGraphSize = new mxRectangle(0, 0, minw, minh);\r\n                }\r\n\r\n                // Updates auto-translate to include padding and graph size\r\n                let dx = pad.x / this.view.scale - pages.x * size.width;\r\n                let dy = pad.y / this.view.scale - pages.y * size.height;\r\n\r\n                if (!this.autoTranslate && (this.view.translate.x != dx || this.view.translate.y != dy)) {\r\n                    this.autoTranslate = true;\r\n                    (this.view as any).x0 = pages.x;\r\n                    (this.view as any).y0 = pages.y;\r\n\r\n                    let tx = this.view.translate.x;\r\n                    let ty = this.view.translate.y;\r\n\r\n                    this.view.setTranslate(dx, dy);\r\n                    this.container.scrollLeft += (dx - tx) * this.view.scale;\r\n                    this.container.scrollTop += (dy - ty) * this.view.scale;\r\n\r\n                    this.autoTranslate = false;\r\n                    return;\r\n                }\r\n\r\n                graphSizeDidChange.apply(this, []);\r\n            }\r\n        };\r\n\r\n        // 重写view获取背景页大小\r\n        this.view.getBackgroundPageBounds = () => {\r\n            let layout = this.getPageLayout();\r\n            let page = this.getPageSize();\r\n\r\n            return new mxRectangle(\r\n                this.view.scale * (this.view.translate.x + layout.x * page.width),\r\n                this.view.scale * (this.view.translate.y + layout.y * page.height),\r\n                this.view.scale * layout.width * page.width,\r\n                this.view.scale * layout.height * page.height\r\n            );\r\n\r\n        };\r\n\r\n        // 重写view validate方法\r\n        const graphViewValidate = this.view.validate;\r\n        this.view.validate = (cell?: MxGraphNS.mxCell) => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n                let tx = this.view.translate.x;\r\n                let ty = this.view.translate.y;\r\n                this.view.translate.x = pad.x / this.view.scale - ((this.view as any).x0 || 0) * size.width;\r\n                this.view.translate.y = pad.y / this.view.scale - ((this.view as any).y0 || 0) * size.height;\r\n            }\r\n\r\n            graphViewValidate.apply(this.view, [cell]);\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建BpmnModel\r\n     */\r\n    createBpmnModel() {\r\n        const bpmnModel = new BpmnModel();\r\n        bpmnModel.TargetNamespace = \"Default_Namespace\";\r\n        bpmnModel.DefaultProcess = new Process(bpmnModel);\r\n        bpmnModel.DefaultDiagram = new BPMNDiagram(bpmnModel);\r\n        bpmnModel.DefaultDiagram.BpmnPlane.BpmnElementId = bpmnModel.DefaultProcess.Id;\r\n\r\n        return bpmnModel;\r\n    }\r\n\r\n    /**\r\n     * 加载BpmnModel并画图\r\n     */\r\n    loadBpmnModel(json: string) {\r\n        this.removeCells(this.getChildCells(this.getDefaultParent()));\r\n        this.bpmnModel = this.createBpmnModel();\r\n        this.bpmnModel.LoadFromJson(json);\r\n        this.drawBpmnGraph(this.bpmnModel);\r\n    }\r\n\r\n    /**\r\n     * 重新加载BpmnModel并画图\r\n     * @param json\r\n     */\r\n    reloadBpmnModel(json?: string) {\r\n        this.removeCells(this.getChildCells(this.getDefaultParent()));\r\n        if (json) {\r\n            this.loadBpmnModel(json);\r\n        } else {\r\n            this.drawBpmnGraph(this.bpmnModel);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据BpmnModel画图\r\n     */\r\n    drawBpmnGraph(bpmnModel: BpmnModel) {\r\n        const { nodeDict, edgeDict } = this.buildFlowDiagDict(bpmnModel);\r\n        const flowDict = this.buildFlowDict(bpmnModel);\r\n        this.drawNodeCells(flowDict, nodeDict);\r\n        this.drawEdgeCells(flowDict, edgeDict);\r\n        this.getModel().beginUpdate();\r\n        if (this.mode === 'simulation') {\r\n            this.drawInterceptGraph(flowDict, nodeDict, edgeDict);\r\n            this.addJumpEdges(flowDict);\r\n        }\r\n        this.getModel().endUpdate();\r\n    }\r\n\r\n    private drawInterceptGraph(flowDict: { [key: string]: FlowElement; },\r\n        nodeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; }) {\r\n        const firstAct = this.findFirstStartActivityInstance(this.actList);\r\n        // todo：此处待修复\r\n        let endActDef: EndEvent;\r\n        for (const key in flowDict) {\r\n            if (flowDict[key] instanceof EndEvent) {\r\n                endActDef = flowDict[key] as EndEvent;\r\n            }\r\n        }\r\n        if (firstAct) {\r\n            const endActiInstList = this.findEndActiInstList(firstAct, this.actList, this.transInsList);\r\n            endActiInstList.forEach((endActiInst => {\r\n                if (endActiInst.activityDefinitionId !== endActDef.Id) {\r\n                    this.drawNextFlowChart(endActiInst.activityDefinitionId, nodeDict, edgeDict);\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    addJumpEdges(flowDict: { [key: string]: FlowElement; }) {\r\n        const nodeCells = (this.getChildCells(this.getDefaultParent(), true) || []) as Cell[];\r\n        const noIncomingNodes: Cell[] = this.findNoIncomingNodes(nodeCells);\r\n        for (const node of noIncomingNodes) {\r\n            const actInst = this.actList.filter(a => a.activityDefinitionId === node.flowElement.Id)[0];\r\n            const cellId = actInst.precursorActivityDefinitionId + '_' + actInst.activityDefinitionId;\r\n            const source = nodeCells.find((it) => {\r\n                return it.flowElement && it.flowElement.Id === actInst.precursorActivityDefinitionId;\r\n            });\r\n            const target = nodeCells.find((it) => {\r\n                return it.flowElement && it.flowElement.Id === actInst.activityDefinitionId;\r\n            });\r\n            const map = new Map();\r\n            map.set('jump', true);\r\n            const style = this.getEdgeStyle(null, null, map);\r\n            const cell = this.insertEdge(this.getDefaultParent(), cellId, '', source, target, style) as Cell;\r\n            if (cell !== null) {\r\n                cell.source = source;\r\n                cell.target = target;\r\n                cell.geometry.points = [\r\n                    // new mxPoint(source.geometry.x+ source.geometry.width/2, target.geometry.y+target.geometry.height/2)\r\n                ];\r\n                console.log(cell);\r\n                this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 画节点\r\n     */\r\n    drawNodeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        nodeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        additional: boolean = false,\r\n    ) {\r\n        Object.keys(nodeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId];\r\n            const diagElt = nodeDict[bpmnModelElementId] as BPMNShape;\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n\r\n            this.drawNodeCell(flowElt, diagElt, additional);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 画单个节点\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     */\r\n    drawNodeCell(flowElt: FlowElement, diagElt: BPMNShape, additional: boolean) {\r\n        const style = this.getVertexStyle(flowElt, diagElt, additional);\r\n        let cell: Cell = null;\r\n        let label = \"\";\r\n        if (flowElt != null) {\r\n            label = flowElt.Name;\r\n            if (flowElt.NameLanguage && flowElt.NameLanguage[this.langCode] != null) {\r\n                label = flowElt.NameLanguage[this.langCode];\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (this.actList.findIndex(a => a.activityDefinitionId === flowElt.Id) > -1) {\r\n                cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n            } else if (additional) {\r\n                cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n            }\r\n        } else {\r\n            cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n        }\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n        // const cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n    }\r\n\r\n    /**\r\n     * 画连线\r\n     */\r\n    drawEdgeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        additional: boolean = false,\r\n        cut: boolean = false,\r\n    ) {\r\n        Object.keys(edgeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId] as SequenceFlow;\r\n            const diagElt = edgeDict[bpmnModelElementId] as BPMNEdge;\r\n\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n\r\n            this.drawEdgeCell(flowElt, diagElt, additional, cut);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    private judgeConnectBetweenTwoNodes(flowDict: { [key: string]: FlowElement; }, sourceId: string, targetId: string): boolean {\r\n        const source = flowDict[sourceId] as FlowNode;\r\n        const outGoings = source.Outgoings;\r\n        if (!outGoings || outGoings.length === 0) {\r\n            return false;\r\n        }\r\n        for (const outGoing of outGoings) {\r\n            const sequenceFlow = flowDict[outGoing] as SequenceFlow;\r\n            if (sequenceFlow.TargetRef === targetId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 画单条连线\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    drawEdgeCell(flowElt: SequenceFlow, diagElt: BPMNEdge, additional: boolean, cut: boolean) {\r\n        // 获取已插入的节点元素\r\n        const nodeCells = (this.getChildCells(this.getDefaultParent(), true) || []) as Cell[];\r\n        const source = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.SourceRef;\r\n        });\r\n        const target = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.TargetRef;\r\n        });\r\n        const map = new Map();\r\n        map.set('additional', additional);\r\n        map.set('cut', cut);\r\n        const style = this.getEdgeStyle(flowElt, diagElt, map);\r\n        let cell: Cell = null;\r\n        let label = \"\";\r\n        if (flowElt != null) {\r\n            label = flowElt.Name;\r\n            if (flowElt.NameLanguage && flowElt.NameLanguage[this.langCode] != null) {\r\n                label = flowElt.NameLanguage[this.langCode];\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (this.transInsList.findIndex(a => a.sourceActivityDefinitionId === flowElt.SourceRef\r\n                && a.destinationActivityDefinitionId === flowElt.TargetRef) > -1) {\r\n                cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n            } else if (additional || cut) {\r\n                cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n            }\r\n        } else {\r\n            cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n        }\r\n\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n        // const cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n        // cell.geometry.relative = true;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        cell.source = source;\r\n        cell.target = target;\r\n\r\n        cell.geometry.points = cell.geometry.points || [];\r\n\r\n        // 判断是否为旧版本连线\r\n        if (this.isOldBpmnEdge(diagElt)) {\r\n            for (let i = 2; i < diagElt.Points.length; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X + (state.x - state.paintBounds.x);\r\n                const y = diagElt.BpmnLabel.Bounds.Y + (state.y - state.paintBounds.y);\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        } else {\r\n            for (let i = 1; i < diagElt.Points.length - 1; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            const scale = this.view.getScale();\r\n            const translate = this.view.getTranslate();\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X * scale + translate.x;\r\n                const y = diagElt.BpmnLabel.Bounds.Y * scale + translate.y;\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 构建FlowElement字典，{ [flowEltId: string]: FlowElement }\r\n     */\r\n    buildFlowDict(bpmnModel: BpmnModel) {\r\n        let flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n\r\n        return flowDict;\r\n    }\r\n\r\n    /**\r\n     * 构建DiagramElement字典，{ [flowEltId: string]: DiagramElement }\r\n     */\r\n    buildFlowDiagDict(bpmnModel: BpmnModel) {\r\n        const nodeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n        const edgeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n\r\n        const diagramElts: (DiagramElement & { BpmnElementId: string; })[] = bpmnModel.DefaultDiagram.BpmnPlane.GetDiagramElements() as any;\r\n\r\n        diagramElts && diagramElts.forEach(elt => {\r\n            if (elt instanceof Node) {\r\n                nodeDict[elt.BpmnElementId] = elt;\r\n            } else if (elt instanceof Edge) {\r\n                edgeDict[elt.BpmnElementId] = elt;\r\n            }\r\n        });\r\n\r\n        return {\r\n            nodeDict,\r\n            edgeDict,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否为旧版本BPMNEdge\r\n     *\r\n     * 旧版本连线Points数组中[0]和[1]分别表示起点和终点，因取值错误，[0]和[1]坐标均为(0,0)，以此为依据判断是否为旧版本的连线\r\n     * 新版本从起点到终点按顺序记录每一个点坐标\r\n     * @param bpmnEdge\r\n     * @returns\r\n     */\r\n    isOldBpmnEdge(bpmnEdge: BPMNEdge) {\r\n        if (bpmnEdge.Points.length >= 2) {\r\n            const pt1 = bpmnEdge.Points[0];\r\n            const pt2 = bpmnEdge.Points[1];\r\n            if (pt1.X == 0 && pt1.Y == 0 && pt2.X == 0 && pt2.Y == 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取节点样式\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getVertexStyle(flowElt: FlowElement, diagElt: BPMNShape, additional: boolean) {\r\n        const activityInstanceSlims = this.actList;\r\n\r\n        let stateShapeStyle: StateShapeStyle = null;\r\n        // 特殊处理,业务活动要单独赋成人工操作类型的样式\r\n        // if (flowElt.ClrTypeID === UserActivity.Clr_Type_ID) {\r\n        //   stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[flowElt.ClrTypeID];\r\n        // } else if (flowElt.ClrTypeID === OperationActivity.Clr_Type_ID) {\r\n        //   stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[OperationActivity.Clr_Type_ID];\r\n        // }\r\n        if (flowElt instanceof UserActivity && flowElt.BizActivityID !== '') {\r\n            stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[OperationActivity.Clr_Type_ID];\r\n        } else {\r\n            stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[flowElt.ClrTypeID];\r\n        }\r\n        if (stateShapeStyle == null) {\r\n            return this.getVertexStyleOld(flowElt, additional);\r\n        }\r\n        let img: string = stateShapeStyle[FlowNodeState.Default] && stateShapeStyle[FlowNodeState.Default].image;\r\n        if (!additional) {\r\n            const acts = activityInstanceSlims.filter(item => item.activityDefinitionId === flowElt.Id);\r\n            if (acts && acts.length > 0) {\r\n                if (acts.filter(act => act.state === 'RUNNING').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Running]) {\r\n                        img = stateShapeStyle[FlowNodeState.Running].image;\r\n                    }\r\n                } else if (acts.filter(act => act.state === 'COMPLETED').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Completed]) {\r\n                        img = stateShapeStyle[FlowNodeState.Completed].image;\r\n                    }\r\n                } else if (acts.filter(act => act.state === 'TERMINATED').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Terminated]) {\r\n                        img = stateShapeStyle[FlowNodeState.Terminated].image;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return img == null ? null : 'image=' + this.rootPath + img;\r\n    }\r\n\r\n    /**\r\n     * 旧版diagramElement未存储样式信息\r\n     * @param flowElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getVertexStyleOld(flowElt: FlowElement, additional: boolean) {\r\n        let style: string;\r\n        switch (flowElt.ClrTypeID) {\r\n            //结束事件\r\n            case \"bpmn.EndEvent\":\r\n                style = 'end';\r\n                break;\r\n            //流程开始活动节点\r\n            case StartActivity.Clr_Type_ID:\r\n                style = 'start';\r\n                break;\r\n            // 业务活动节点\r\n            case UserActivity.Clr_Type_ID:\r\n                if ((flowElt as UserActivity).BizActivityID) {\r\n                    style = 'bizActivity';\r\n                } else {\r\n                    style = 'approval';\r\n                }\r\n                break;\r\n            // 排他网关\r\n            case 'bpmn.ExclusiveGateway':\r\n                style = 'ExclusiveGateway';\r\n                break;\r\n            //并行网关\r\n            case 'bpmn.ParallelGateway':\r\n                style = 'ParallelGateway';\r\n                break;\r\n            case CallActivitySubProcess.Clr_Type_ID:\r\n                style = 'sub';\r\n                break;\r\n            case AutoActivity.Clr_Type_ID:\r\n                style = 'auto';\r\n                break;\r\n            case IntermediateCatchEventImpl.Clr_Type_ID:\r\n                style = 'catchEvent';\r\n                break;\r\n            case OperationActivity.Clr_Type_ID:\r\n                style = 'bizActivity';\r\n                break;\r\n            case MessageActivity.Clr_Type_ID:\r\n                style = 'message';\r\n                break;\r\n            case NotifyActivity.Clr_Type_ID:\r\n                style = 'notify';\r\n                break;\r\n            case AifCreationBillActivity.Clr_Type_ID:\r\n                style = 'aifCreationActivity';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return 'image=' + this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/' + style + this.getChartState(flowElt, additional) + ';';\r\n    }\r\n\r\n    getChartState(flowElt: FlowElement, additional: boolean) {\r\n        if (!additional) {\r\n            const acts = this.actList.filter(item => item.activityDefinitionId === flowElt.Id);\r\n            if (acts && acts.length > 0) {\r\n                if (acts.filter(act => act.state === 'RUNNING').length > 0) {\r\n                    return '_light.gif';\r\n                } else if (acts.filter(act => act.state === 'COMPLETED').length > 0\r\n                    || acts.filter(act => act.state === 'TERMINATED').length > 0\r\n                ) {\r\n                    return '_gray.png';\r\n                } else {\r\n                    return '.png';\r\n                }\r\n            }\r\n        }\r\n        return '.png';\r\n    }\r\n\r\n    /**\r\n     * 获取连线样式\r\n     * @param flowElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    getEdgeStyle(flowElt: SequenceFlow, diagElt: BPMNEdge, parameters: Map<string, boolean>) {\r\n        if (parameters.get('jump')) {\r\n            let style = '';\r\n            const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic['bpmn.SequenceFlow'];\r\n            if (stateEdgeStyle['jump']) {\r\n                Object.keys(stateEdgeStyle['jump']).forEach((key) => {\r\n                    style += (`${key}=${stateEdgeStyle['jump'][key]};`);\r\n                });\r\n                return style;\r\n            }\r\n            return null;\r\n        } else {\r\n            const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic[flowElt.ClrTypeID];\r\n            if (stateEdgeStyle == null) {\r\n                return this.getEdgeStyleOld(flowElt, parameters.get('additional'), parameters.get('cut'));\r\n            }\r\n            const transitionInstanceSlims = this.transInsList;\r\n            let style = '';\r\n            if (parameters.get('cut')) {\r\n                if (stateEdgeStyle[SequenceFlowState.Cut]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Cut]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Cut][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (parameters.get('additional')) {\r\n                if (stateEdgeStyle[SequenceFlowState.Add]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Add]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Add][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            const transIns = transitionInstanceSlims.filter(item => item.sourceActivityDefinitionId === flowElt.SourceRef && item.destinationActivityDefinitionId === flowElt.TargetRef);\r\n            if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n                if (stateEdgeStyle[SequenceFlowState.Completed]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Completed]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Completed][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (this.mode === 'simulation') {\r\n                if (stateEdgeStyle[SequenceFlowState.Simulation]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Simulation]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Simulation][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (stateEdgeStyle[SequenceFlowState.Default]) {\r\n                Object.keys(stateEdgeStyle[SequenceFlowState.Default]).forEach((key) => {\r\n                    style += (`${key}=${stateEdgeStyle[SequenceFlowState.Default][key]};`);\r\n                });\r\n            }\r\n            return style;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取连线颜色\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    getStrokeColor(flowElt: SequenceFlow, diagElt: BPMNEdge, additional: boolean, cut: boolean) {\r\n        const transitionInstanceSlims = this.transInsList;\r\n\r\n        const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic[flowElt.ClrTypeID];\r\n\r\n\r\n        if (cut) {\r\n            if (stateEdgeStyle[SequenceFlowState.Cut]) {\r\n                return stateEdgeStyle[SequenceFlowState.Cut].strokeColor;\r\n            }\r\n        }\r\n        if (additional) {\r\n            if (stateEdgeStyle[SequenceFlowState.Add]) {\r\n                return stateEdgeStyle[SequenceFlowState.Add].strokeColor;\r\n            }\r\n        }\r\n        const transIns = transitionInstanceSlims.filter(item => item.sourceActivityDefinitionId === flowElt.SourceRef && item.destinationActivityDefinitionId === flowElt.TargetRef);\r\n        if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n            if (stateEdgeStyle[SequenceFlowState.Completed]) {\r\n                return stateEdgeStyle[SequenceFlowState.Completed].strokeColor;\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (stateEdgeStyle[SequenceFlowState.Simulation]) {\r\n                return stateEdgeStyle[SequenceFlowState.Simulation].strokeColor;\r\n            }\r\n        }\r\n        return stateEdgeStyle[SequenceFlowState.Default].strokeColor;\r\n    }\r\n\r\n    /**\r\n     * 旧版diagramElement未存储样式信息\r\n     * @param flowElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getEdgeStyleOld(seq: SequenceFlow, additional: boolean, cut: boolean) {\r\n        if (cut) {\r\n            return 'strokeColor=#FF4040'\r\n        }\r\n        if (additional) {\r\n            return 'strokeColor=#59A1FF';\r\n        }\r\n        const transIns = this.transInsList.filter(item => item.sourceActivityDefinitionId === seq.SourceRef && item.destinationActivityDefinitionId === seq.TargetRef);\r\n        if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n            return 'strokeColor=#595959;strokeWidth=2;';\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            return 'strokeColor=#f59c24;dashed=1;';\r\n        } else {\r\n            return 'strokeColor=#59A1FF;';\r\n        }\r\n    }\r\n\r\n    drawNextFlowChart(\r\n        actiDefId: string,\r\n        nodeDict: { [key: string]: DiagramElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; },\r\n    ) {\r\n        const { nextFlowNodeDict, nextSeqFlowDict } = this.findDrawFlowElementsByActDefId(actiDefId, this.bpmnModel);\r\n        const actDef = this.bpmnModel.DefaultProcess.GetFlowElement(actiDefId) as FlowNode;\r\n        const outgoings = actDef.Outgoings;\r\n\r\n        // 先插入节点\r\n        Object.keys(nextFlowNodeDict).forEach(id => {\r\n            const flowElt = nextFlowNodeDict[id];\r\n            const diagElt = nodeDict[flowElt.Id] as BPMNShape;\r\n            const cell = this.getCellByFlowElementId(flowElt.Id);\r\n            if (!cell) {\r\n                this.drawNodeCell(flowElt, diagElt, true);\r\n            }\r\n        });\r\n\r\n        // 再插入边\r\n        Object.keys(nextSeqFlowDict).forEach(id => {\r\n            const flowElt = nextSeqFlowDict[id];\r\n            const diagElt = edgeDict[flowElt.Id] as BPMNEdge;\r\n            const cell = this.getCellByFlowElementId(flowElt.Id);\r\n            if (!cell) {\r\n                if (outgoings.some(o => o === flowElt.Id)) {\r\n                    this.drawEdgeCell(flowElt, diagElt, true, true);\r\n                } else {\r\n                    this.drawEdgeCell(flowElt, diagElt, true, false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据flowElementId获取cell\r\n     */\r\n    getCellByFlowElementId(flowEltId: string, parent?: MxGraphNS.mxCell): Cell {\r\n        parent = parent ? parent : this.getDefaultParent();\r\n        const cells = this.getChildCells(parent);\r\n        const cell = cells.find(it => {\r\n            if (it instanceof Cell) {\r\n                return it.flowElement && it.flowElement.Id == flowEltId;\r\n            } else {\r\n                return false;\r\n            }\r\n        }) as Cell;\r\n        return cell;\r\n    }\r\n\r\n    findFirstStartActivityInstance(activities: ActivityInstanceSlim[]): ActivityInstanceSlim {\r\n        for (const act of activities) {\r\n            if (!act.precursorActivityDefinitionId) {\r\n                return act;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findNoIncomingNodes(nodeCells: Cell[]) {\r\n        const noIncomingNodes = new Array();\r\n        for (const node of nodeCells) {\r\n            if (node.flowElement.ClrTypeID === 'wf.StartActivity') {\r\n                continue;\r\n            }\r\n            if (!node.edges || node.edges.length === 0) {\r\n                noIncomingNodes.push(node);\r\n                continue;\r\n            }\r\n            if (!node.edges.some(edge => (edge.target as Cell).flowElement.Id === node.flowElement.Id)) {\r\n                noIncomingNodes.push(node);\r\n            }\r\n        }\r\n        return noIncomingNodes;\r\n    }\r\n\r\n    findEndActiInstList(firstAct: ActivityInstanceSlim, activities: ActivityInstanceSlim[], transInsList: TransitionInstanceSlim[]): ActivityInstanceSlim[] {\r\n        const endActiInstList: ActivityInstanceSlim[] = [];\r\n        this.getNextTransitions(endActiInstList, firstAct.activityInstanceId, activities, transInsList);\r\n        return endActiInstList;\r\n    }\r\n\r\n    getNextTransitions(endActiInstList: ActivityInstanceSlim[], sourceActInstId: string, activities: ActivityInstanceSlim[], transInsList: TransitionInstanceSlim[]) {\r\n        const nextTransitions = this.findTranInstsBySourceActInstId(sourceActInstId, transInsList);\r\n        if (nextTransitions && nextTransitions.length > 0) {\r\n            for (const t of nextTransitions) {\r\n                if (t.destinationActivityDefinitionId) {\r\n                    this.getNextTransitions(endActiInstList, t.destinationActivityInstanceId, activities, transInsList);\r\n                }\r\n            }\r\n        } else {\r\n            const actInst: ActivityInstanceSlim = this.findActInstByActInstId(sourceActInstId, activities);\r\n            if (actInst) {\r\n                if (!endActiInstList.some(a => a.activityInstanceId === actInst.activityInstanceId)) {\r\n                    endActiInstList.push(actInst);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findTranInstsBySourceActInstId(sourceActInstId: string, transInsList: TransitionInstanceSlim[]): TransitionInstanceSlim[] {\r\n        return transInsList.filter(t => t.sourceActivityInstanceId === sourceActInstId);\r\n    }\r\n\r\n    findActInstByActInstId(actInstId: string, activities: ActivityInstanceSlim[]) {\r\n        return activities.find(a => a.activityInstanceId === actInstId);\r\n    }\r\n\r\n    findDrawFlowElementsByActDefId(actiDefId: string, bpmnModel: BpmnModel) {\r\n        const nextFlowNodeDict: { [id: string]: FlowNode } = {};\r\n        const nextSeqFlowDict: { [id: string]: SequenceFlow } = {};\r\n        this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, actiDefId, bpmnModel);\r\n        return {\r\n            nextFlowNodeDict,\r\n            nextSeqFlowDict,\r\n        };\r\n    }\r\n\r\n    findNextFlowElementsByFlowElementId(nextFlowNodeDict: { [id: string]: FlowNode }, nextSeqFlowDict: { [id: string]: SequenceFlow }, flowElementId: string, bpmnModel: BpmnModel) {\r\n        const flowElt = bpmnModel.DefaultProcess.GetFlowElement(flowElementId);\r\n        if (flowElt && nextFlowNodeDict[flowElementId] == null) {\r\n            if (flowElt instanceof SequenceFlow) {\r\n                nextSeqFlowDict[flowElt.Id] = flowElt;\r\n                this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, flowElt.TargetRef, bpmnModel);\r\n            } else if (flowElt instanceof FlowNode) {\r\n                nextFlowNodeDict[flowElt.Id] = flowElt;\r\n                if ((flowElt instanceof EndEvent) == false) {\r\n                    flowElt.Outgoings && flowElt.Outgoings.forEach(outgoing => {\r\n                        this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, outgoing, bpmnModel);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { mxEvent, MxGraphNS, mxConstants, mxGraphSelectionModel, mxEventSource } from \"@edp-pmf/mxgraph-ts\";\r\nimport { BpmnModel } from \"@edp-pmf/bpmn-model\";\r\nimport { ProcessInstance } from \"./entity/ProcessInstance\";\r\nimport { ActivityInstanceSlim } from \"./entity/ActivityInstanceSlim\";\r\nimport { TransitionInstanceSlim } from \"./entity/TransitionInstanceSlim\";\r\nimport { UIFlowchartComponent } from \"../task-flowchart/task-flowchart.component\";\r\nimport { FlowGraph } from \"./FlowGraph\";\r\nimport { CellStyleConfig } from \"../entity/cell-style/CellStyleConfig\";\r\n\r\n\r\nexport class FlowChart extends mxEventSource {\r\n    ngComp: UIFlowchartComponent;\r\n    container: HTMLDivElement;\r\n    graph: FlowGraph;\r\n    diagramContainer: HTMLDivElement;\r\n    button: HTMLButtonElement;\r\n    resizeHandler: () => void;\r\n\r\n    mode: 'complete' | 'simulation' = 'complete';\r\n    processInstance: ProcessInstance;\r\n    bpmnModel: BpmnModel;\r\n    actList: ActivityInstanceSlim[] = [];\r\n    transInsList: TransitionInstanceSlim[] = [];\r\n    rootPath: string = '';//基路径\r\n    /**\r\n     * 当前语言\r\n     */\r\n    langCode = (window as any).gspframeworkService && (window as any).gspframeworkService.rtf.language.getLanguageCode() || localStorage.getItem('languageCode') || 'zh-CHS';\r\n\r\n    constructor(container: any, config: CellStyleConfig) {\r\n        super();\r\n        try {\r\n            this.rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n        } catch (error) {\r\n        }\r\n        this.container = container;\r\n        this.createDiv();\r\n        this.graph = this.createGraph(config);\r\n        window.setTimeout(() => {\r\n            this.resetScrollbars();\r\n        }, 0);\r\n        this.refresh();\r\n        this.resizeHandler = () => {\r\n            window.setTimeout(() => {\r\n                if (this.graph != null) {\r\n                    this.refresh();\r\n                }\r\n            }, 0);\r\n        };\r\n        mxEvent.addListener(window, 'resize', this.resizeHandler);\r\n\r\n        this.graph.getSelectionModel().addListener(mxEvent.CHANGE, (sender: any, evt: MxGraphNS.mxEventObject) => {\r\n            this.cellSelect(sender, evt);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置当前语言\r\n     * @param lang\r\n     */\r\n    setLanguage(lang: string) {\r\n        this.langCode = lang;\r\n        if (this.graph) {\r\n            this.graph.langCode = lang;\r\n        }\r\n    }\r\n\r\n    switchMode({ mode, actiInstList, transInsList }) {\r\n        this.mode = mode;\r\n        this.actList = actiInstList;\r\n        this.transInsList = transInsList;\r\n\r\n        this.graph.actList = this.actList;\r\n        this.graph.transInsList = this.transInsList;\r\n        this.graph.mode = this.mode;\r\n        this.graph.reloadBpmnModel();\r\n    }\r\n\r\n    load(data: any) {\r\n        if (data) {\r\n            this.processInstance = data.processInstance;\r\n            this.actList = data.actiInstList;\r\n            this.transInsList = data.transInsList;\r\n            this.mode = data.mode;\r\n\r\n            this.graph.actList = this.actList;\r\n            this.graph.transInsList = this.transInsList;\r\n            this.graph.mode = this.mode;\r\n            this.graph.loadBpmnModel(data.content);\r\n            this.resetScrollbars();\r\n\r\n        }\r\n    }\r\n\r\n    createDiv() {\r\n        this.diagramContainer = document.createElement('div');\r\n        this.diagramContainer.className = 'flowChartContainer';\r\n\r\n        this.container.appendChild(this.diagramContainer);\r\n        setTimeout(() => {\r\n            // this.diagramContainer.style.overflow = 'hidden';\r\n\r\n            mxEvent.addListener(this.diagramContainer, 'mouseover', () => {\r\n                // this.diagramContainer.style.overflow = 'auto';\r\n                this.diagramContainer.classList.add('active');\r\n            });\r\n            mxEvent.addListener(this.diagramContainer, 'mouseleave', () => {\r\n                // this.diagramContainer.style.overflow = 'hidden';\r\n                this.diagramContainer.classList.remove('active');\r\n            });\r\n        }, 0);\r\n\r\n        const buttonIn = document.createElement('a');\r\n        buttonIn.setAttribute('href', 'javascript:void(0);');\r\n        let buttonInImg = document.createElement('img');\r\n        buttonIn.style.marginRight = '10px';\r\n        buttonInImg.src = this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/zoomIn.svg';\r\n        buttonInImg.style.display = \"inline-block\";\r\n        buttonInImg.style.verticalAlign = \"middle\";\r\n        buttonIn.appendChild(buttonInImg);\r\n        mxEvent.addListener(buttonIn, 'click', (evt: PointerEvent) => {\r\n            this.graph.zoomIn();\r\n        });\r\n\r\n        const buttonOut = document.createElement('a');\r\n        buttonOut.setAttribute('href', 'javascript:void(0);');\r\n        let buttonOutImg = document.createElement('img');\r\n        buttonOutImg.src = this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/zoomOut.svg';\r\n        buttonOutImg.style.display = \"inline-block\";\r\n        buttonOutImg.style.verticalAlign = \"middle\";\r\n        buttonOut.appendChild(buttonOutImg);\r\n        mxEvent.addListener(buttonOut, 'click', (evt: PointerEvent) => {\r\n            this.graph.zoomOut();\r\n        });\r\n\r\n        const zoomBar = document.createElement('div');\r\n        zoomBar.className = 'zoomBar';\r\n        zoomBar.style.position = 'absolute';\r\n        zoomBar.style.top = '10px';\r\n        zoomBar.style.right = '20px';\r\n\r\n        zoomBar.appendChild(buttonIn);\r\n        zoomBar.appendChild(buttonOut);\r\n\r\n        // zoomBar.appendChild(zoom);\r\n        this.container.appendChild(zoomBar);\r\n\r\n    }\r\n\r\n    createGraph(config: CellStyleConfig) {\r\n        mxConstants.VERTEX_SELECTION_STROKEWIDTH = 1;\r\n        mxConstants.VERTEX_SELECTION_COLOR = '#0000CD';\r\n        mxConstants.VERTEX_SELECTION_DASHED = true;\r\n\r\n        const graph = new FlowGraph(this.diagramContainer, config);\r\n        // 创建无限大画布\r\n        graph.createInfiniteCanvas();\r\n        // 创建后需要调用一次才生效\r\n        graph.sizeDidChange();\r\n\r\n        graph.popupMenuHandler.autoExpand = true;\r\n        graph.popupMenuHandler.factoryMethod = (menu, cell, evt) => {\r\n            if (cell != null\r\n                && cell.getId().indexOf('UserActivity') > -1\r\n                && this.actList.findIndex(a => a.activityDefinitionId === cell.getId()) > -1\r\n                && this.processInstance) {\r\n                const actInstId = this.actList.find(a => a.activityDefinitionId === cell.getId()).activityInstanceId;\r\n                menu.addItem('查看单据', null, () => {\r\n                    this.viewForm(this.processInstance.id, actInstId, this.processInstance.bizInstId);\r\n                });\r\n            }\r\n            if (cell != null\r\n                && cell.getId().indexOf('AifCreationBillActivity') > -1\r\n                && this.actList.findIndex(a => a.activityDefinitionId === cell.getId()) > -1\r\n                && this.processInstance) {\r\n                // 筛选状态是Running的自动生单活动实例\r\n                const actInsts = this.actList.filter(a => a.activityDefinitionId === cell.getId() && a.state == \"RUNNING\");\r\n                if (actInsts.length == 1) {\r\n                    const actInst = actInsts[0];\r\n                    menu.addItem('重试', null, () => {\r\n                        this.retryAifCreation(this.processInstance.id, actInst.activityInstanceId, this.processInstance.bizInstId);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        return graph;\r\n    }\r\n\r\n    cellSelect(sender, evt: MxGraphNS.mxEventObject) {\r\n        if (!(sender instanceof mxGraphSelectionModel)) {\r\n            return;\r\n        }\r\n        const selectedCell = sender.cells[0];\r\n        if (selectedCell) {\r\n            if (selectedCell.vertex) {\r\n                const selectId = selectedCell.getId();\r\n                // 选中子流程节点时，弹出子流程图\r\n                if (selectId && selectId.indexOf('CallActivitySubProcess') > -1\r\n                    && this.actList.findIndex(a => a.state !== 'FORECAST'\r\n                        && a.activityDefinitionId === selectId) > -1\r\n                ) {\r\n                    const actInsts = this.actList.filter(a => a.state !== 'FORECAST' && a.activityDefinitionId === selectId);\r\n                    const activeInst = actInsts.find(a => a.state === 'RUNNING');\r\n                    if (activeInst) {\r\n                        this.viewChildProcessChart(activeInst);\r\n                    } else {\r\n                        this.viewChildProcessChart(actInsts[0]);\r\n                    }\r\n                } else {\r\n                    this.ngComp.viewLogs({ type: 'activity', actiDefId: selectedCell.id });\r\n                }\r\n            } else {\r\n                this.ngComp.viewLogs({ type: 'sequence' });\r\n            }\r\n        } else {\r\n            this.ngComp.viewLogs({ type: 'process' });\r\n        }\r\n    }\r\n\r\n    viewChildProcessChart(actInst: ActivityInstanceSlim) {\r\n        this.ngComp.viewChild(actInst, this.processInstance);\r\n    }\r\n\r\n    viewForm(procInstId: string, actInstId: string, bizInstId: string) {\r\n        this.ngComp.viewForm(procInstId, actInstId, bizInstId);\r\n    }\r\n\r\n    retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n        this.ngComp.retryAifCreation(procInstId, actInstId, bizInstId);\r\n    }\r\n\r\n    resetScrollbars() {\r\n        let bounds = this.graph.getGraphBounds();\r\n        let width = Math.max(bounds.width * this.graph.view.scale, 0); // this.getScrollTileSize().width * this.graph.view.scale);\r\n        let height = Math.max(bounds.height * this.graph.view.scale, 0); // this.getScrollTileSize().height * this.graph.view.scale);\r\n        this.graph.container.scrollTop = Math.floor(Math.max(0, bounds.y - Math.max(20, (this.graph.container.clientHeight - height) / 2)));\r\n        this.graph.container.scrollLeft = Math.floor(Math.max(0, bounds.x - Math.max(0, (this.graph.container.clientWidth - width) / 2)));\r\n    }\r\n    refresh() {\r\n        this.resetScrollbars();\r\n    }\r\n\r\n    reloadBpmnModel() {\r\n        this.graph.removeCells(this.graph.getChildCells(this.graph.getDefaultParent()));\r\n    }\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ModalOptions, BsModalService } from '@farris/ui-modal';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { translate } from './services/i18n/index';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ForecastProcessPayload } from './entity/forecast-process-payload';\r\nimport { ProcessInstance } from './flow-chart';\r\n\r\n\r\n@Injectable()\r\nexport class WFFlowchartService {\r\n\r\n    private flowchartService: UiFlowchartService;\r\n    private frameworkService: FrameworkService;\r\n\r\n    constructor(\r\n        private msgService: MessagerService,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private modalService: BsModalService,\r\n    ) {\r\n        this.flowchartService = this.injector.get(UiFlowchartService);\r\n        this.frameworkService = this.injector.get(FrameworkService);\r\n    }\r\n\r\n    /**\r\n     * 查看流程图，支持预览\r\n     * @param payload \r\n     * @returns \r\n     */\r\n    viewProcess(payload: ForecastProcessPayload) {\r\n        if (!payload || !payload.dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noDataId'));\r\n            return;\r\n        }\r\n        if (!payload || !payload.bizDefKey) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noBizDefKey'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', payload.dataId);\r\n        parameters.set('bizDefKey', payload.bizDefKey);\r\n        if (payload.startMode) {\r\n            parameters.set('startMode', payload.startMode);\r\n        }\r\n        if (payload.startUserId) {\r\n            parameters.set('startUserId', payload.startUserId);\r\n        }\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: payload.dataId,\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 根据流程实例id查看流程（tab页中打开）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewFlowChart(procInstId: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('processId', procInstId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 根据单据内码查看流程\r\n     * @param dataId 单据内码\r\n     * @returns \r\n     */\r\n    viewFlowChartByDataId(dataId: string) {\r\n        if (!dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.dataIdIsNull'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', dataId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 查看流程（弹框中打开）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewFlowChartByDialog(procInstId: string, mode?: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        this.flowchartService.getProcessInstanceById(procInstId).subscribe(re => {\r\n            if (re) {\r\n                this.viewMutiInstanceFlowChartByDialog([re]);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 查看流程（弹框中打开，兼容多实例子流程）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewMutiInstanceFlowChartByDialog(procInstList: ProcessInstance[], mode?: string) {\r\n        let func;\r\n        if (UIFlowchartComponent.func) {\r\n            func = UIFlowchartComponent.func;\r\n        }\r\n        const options: ModalOptions = {\r\n            title: this.getI18nValue('static.flowchart.title'),\r\n            width: 1200,\r\n            height: 530,\r\n            showButtons: false,\r\n            beforeClose: (modalRef: any) => {\r\n                if (UIFlowchartComponent.func) {\r\n                    window.removeEventListener('message', UIFlowchartComponent.func, false);\r\n                }\r\n                if (func) {\r\n                    window.addEventListener('message', func, false);\r\n                    UIFlowchartComponent.func = func;\r\n                }\r\n                return of(true);\r\n            }\r\n        };\r\n        const compFactory = this.resolver.resolveComponentFactory(UIFlowchartComponent);\r\n        const inj = Injector.create({\r\n            providers: [{\r\n                provide: UiFlowchartService, useFactory: (httpSvc) => {\r\n                    return new UiFlowchartService(httpSvc);\r\n                },\r\n                deps: [\r\n                    HttpService\r\n                ]\r\n            }], parent: this.injector\r\n        });\r\n        const compRef = compFactory.create(inj);\r\n        if (procInstList && procInstList.length) {\r\n            if (procInstList.length == 1) {\r\n                options.showHeader = true;\r\n                options.title = procInstList[0].name + '-v' + procInstList[0].version + '.0';\r\n                compRef.instance.ProcInstId = procInstList[0].id;\r\n            } else {\r\n                options.showHeader = false;\r\n                compRef.instance.ProcInstList = procInstList;\r\n            }\r\n        }\r\n        if (mode) {\r\n            compRef.instance.mode = mode;\r\n        }\r\n        compRef.instance.fill();\r\n        const dialog = this.modalService.show(compRef, options);\r\n        compRef.instance.dialog = dialog;\r\n    }\r\n\r\n    /**\r\n     * 查看流程图。（如果作为共享的外部流程，则打开共享的查看流程）\r\n     * @param procInstId 流程实例id\r\n     * @param dataId 单据内码\r\n     */\r\n    viewFlowchartByProcInstIdAndDataId(procInstId: string, dataId: string) {\r\n        this.flowchartService.ifThirdTask(procInstId).subscribe(ifThirdTask => {\r\n            if (ifThirdTask === true) {//是第三方的任务\r\n                this.flowchartService.getFsParamsByBizId(dataId).subscribe(params => {//获取查看流程图所需参数\r\n                    if (params) {//有不往共享单据表推数据的情况，此时返回为空\r\n                        const param = {\r\n                            \"lcsl\": params[0],\r\n                            \"djnm\": params[1],\r\n                            \"djlx\": params[2],\r\n                            \"djbh\": params[3]\r\n                        }\r\n                        this.flowchartService.viewFsProcessNew(param).subscribe(re => {//旧接口报错，改调新接口\r\n                            if (re && re.value) {\r\n                                this.openViewProcessMenu(re.value);\r\n                            }\r\n                        }, error => {\r\n                            this.viewFlowChart(procInstId);\r\n                        })\r\n                    } else {\r\n                        this.viewFlowChart(procInstId);\r\n                    }\r\n                }, error => {\r\n                    this.viewFlowChart(procInstId);\r\n                })\r\n            } else {//WF的任务\r\n                this.viewFlowChart(procInstId);\r\n            }\r\n        }, error => {\r\n            this.viewFlowChart(procInstId);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 共享的任务，借用自己的查看流程菜单，iframe嵌入共享的查看流程URL\r\n     * @param entity 任务实体，区分tab页\r\n     * @param url 共享查看流程的URL\r\n     */\r\n    private openViewProcessMenu(url: string) {\r\n        const queryParams = new Map<string, any>();\r\n        queryParams.set(\"thirdTask\", true);\r\n        const entityParams = new Map<string, any>();\r\n        entityParams.set(\"thirdProcessUrl\", url);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            entityParams: entityParams,\r\n            queryStringParams: queryParams\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 获取i18n\r\n     */\r\n    private getI18nValue(name: string) {\r\n        if (!name) { return ''; }\r\n        var defaultLang = localStorage.getItem('languageCode');\r\n        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n        let resultVal = '';\r\n        if (name.indexOf('.') === -1) {\r\n            resultVal = langData[name];\r\n        } else {\r\n            resultVal = name.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, langData);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    /**\r\n     * 判断是否inSuite环境\r\n     */\r\n    private isInSuite(): boolean {\r\n        const frameWorkService = (window as any).gspframeworkService;\r\n        if (frameWorkService && frameWorkService.rtf) {\r\n            const extendMethod = frameWorkService.rtf.extendMethod;\r\n            if (extendMethod && extendMethod.getExtObj()) {\r\n                var extObj = extendMethod.getExtObj();\r\n                const mode = extObj.iGIX4inSuiteMode();\r\n                if (mode) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 打开菜单，区分是否inSuite环境，用不同方式打开菜单\r\n     * @param options 打开参数\r\n     * @param menuTitle 菜单名称\r\n     */\r\n    private openMenu(options: any) {\r\n        const menuTitle = this.getI18nValue('static.flowchart.title')\r\n        if (this.isInSuite()) {\r\n            options.menuTitle = menuTitle;\r\n            var extObj = (window as any).gspframeworkService.rtf.extendMethod.getExtObj();\r\n            extObj.iGIXMenuOpen(options);\r\n        } else {\r\n            this.frameworkService.openMenu$(options).subscribe(re => {\r\n\r\n            }, error => {\r\n                console.error(error);\r\n            })\r\n        }\r\n    }\r\n}\r\n","import {\r\n  Component, OnInit, ViewChild, ElementRef, Input, Output,\r\n  EventEmitter, HostBinding, ChangeDetectorRef, Optional, Injector, ViewContainerRef, ViewEncapsulation, LOCALE_ID, ReflectiveInjector, AfterViewChecked\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LoadingService } from \"@farris/ui-loading\";\r\nimport { NotifyService } from '@farris/ui-notify';\r\n\r\nimport { FlowChart } from '../flow-chart/FlowChart';\r\nimport { UiFlowchartService } from '../services/ui-flowchart.service';\r\nimport { WFFlowchartService } from '../wf-flowchart.service';\r\nimport { CellStyleConfig } from '../entity/cell-style/CellStyleConfig';\r\nimport { ActivityInstanceSlim, ProcessInstance } from '../flow-chart/entity';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\n\r\n@Component({\r\n  selector: 'wf-flowchart',\r\n  templateUrl: './task-flowchart.component.html',\r\n  styleUrls: ['./task-flowchart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class UIFlowchartComponent implements OnInit, AfterViewChecked {\r\n\r\n  static func: any = null; // 消息监听处理方法\r\n  @HostBinding('class') cls = 'd-flex flex-fill h-100';\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n  @Output() modalHide = new EventEmitter<boolean>();\r\n  procInstId: string;//流程实例id\r\n  dataId: string;//表单id\r\n  actDefId: string;//节点定义id\r\n  ifForecast: string;//是否预测\r\n  type: any; //type = 'process'查看流程日志；type = 'activity'，查看节点日志\r\n  content: string; // bpmnModel\r\n  actInstList: any[]; // 活动实例List\r\n  transInsList: any[];  // 流转实例\r\n  processInstance: any;\r\n  fcHtml = window.document.location.origin + '/platform/runtime/wf/web/designer/flowchart.html?v=20221111';\r\n\r\n  @Input() theme = 'viewFlowChart';\r\n  @Input() processForecastPayload: any;\r\n  dialog: BsModalRef;\r\n\r\n  private _mode = 'complete';\r\n\r\n  @Input()\r\n  set mode(v: string) {\r\n    this._mode = v;\r\n    if (this._mode === 'simulation') {\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n    } else if (this._mode === 'complete') {\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n    }\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n\r\n  modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n  typeList = [\r\n    {\r\n      value: 'complete', text: this.service.getI18nValue('static.flowchart.complete')\r\n    },\r\n    {\r\n      value: 'simulation', text: this.service.getI18nValue('static.flowchart.simulation')\r\n    }\r\n  ];\r\n\r\n  private message: MessagerService;\r\n  private frameworkSvc: FrameworkService;\r\n\r\n  @Input()\r\n  set ProcInstId(procInstId: string) {\r\n    if (procInstId) {\r\n      this.procInstId = procInstId;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set DataId(dataId: string) {\r\n    if (dataId) {\r\n      this.dataId = dataId;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set ProcInstList(procInstList: ProcessInstance[]) {\r\n    if (procInstList && procInstList.length) {\r\n      this.procInstId = procInstList[0].id;\r\n      this.procInstList = procInstList;\r\n    }\r\n  }\r\n\r\n  @ViewChild(\"flowChartContainer\") flowChartContainerER: ElementRef<HTMLDivElement>;\r\n  @ViewChild(\"flowChartContainer\", { read: ViewContainerRef })\r\n  flowChartContainerVCR: ViewContainerRef;\r\n  flowChart: FlowChart;\r\n  localeId: string = \"zh-CHS\";\r\n  loading: LoadingService;\r\n  notify: NotifyService;\r\n  procInstList: ProcessInstance[] = [];//流程实例list，多实例子流程使用\r\n  curChildProcInst: ProcessInstance;//当前选中的流程\r\n\r\n  flowChartContainerClientSize: {\r\n    clientHeight?: number;\r\n    clientWidth?: number;\r\n  } = {};\r\n\r\n  sequenceColorList = [//颜色分支线说明\r\n    {\r\n      colorClass: 'color-gey',\r\n      label: 'completed'\r\n    }, {\r\n      colorClass: 'color-yellow',\r\n      label: 'calculate'\r\n    }, {\r\n      colorClass: 'color-blue',\r\n      label: 'default'\r\n    }, {\r\n      colorClass: 'color-red',\r\n      label: 'suspend'\r\n    }\r\n  ]\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private service: UiFlowchartService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private injector: Injector,\r\n    @Optional() private chartService: WFFlowchartService,\r\n  ) {\r\n    this.message = this.injector.get(MessagerService);\r\n    this.frameworkSvc = this.injector.get(FrameworkService);\r\n    this.localeId = this.injector.get(LOCALE_ID, null) || this.localeId;\r\n    this.loading = this.injector.get(LoadingService, null);\r\n    if (this.loading == null) {\r\n      const inject = ReflectiveInjector.resolveAndCreate([\r\n        LoadingService\r\n      ], this.injector);\r\n      this.loading = inject.get(LoadingService, null);\r\n    }\r\n    this.notify = this.injector.get(NotifyService, null);\r\n    if (this.notify == null) {\r\n      const inject = ReflectiveInjector.resolveAndCreate([\r\n        NotifyService\r\n      ], this.injector);\r\n      this.notify = inject.get(NotifyService, null);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.getFlowChartStyleConfig().subscribe((config: CellStyleConfig) => {\r\n      setTimeout(() => {\r\n        this.createFlowChart(config);\r\n        this.viewFlowChart();\r\n      }, 300);\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // 监听画布容器高度和宽度属性变化，发生变化时刷新画布\r\n    if (this.flowChartContainerER == null || this.flowChartContainerER.nativeElement == null || this.flowChart == null) {\r\n      return;\r\n    }\r\n    if (this.flowChartContainerClientSize.clientHeight != this.flowChartContainerER.nativeElement.clientHeight\r\n      || this.flowChartContainerClientSize.clientWidth != this.flowChartContainerER.nativeElement.clientWidth\r\n    ) {\r\n      this.flowChartContainerClientSize = {\r\n        clientHeight: this.flowChartContainerER.nativeElement.clientHeight,\r\n        clientWidth: this.flowChartContainerER.nativeElement.clientWidth,\r\n      };\r\n\r\n      this.flowChart.refresh();\r\n      this.flowChart.graph.sizeDidChange();\r\n    }\r\n  }\r\n\r\n  createFlowChart(config: CellStyleConfig) {\r\n    this.flowChart = new FlowChart(this.flowChartContainerER.nativeElement, config);\r\n    this.flowChart.ngComp = this;\r\n    this.flowChart.setLanguage(this.localeId);\r\n  }\r\n\r\n  viewFlowChart() {\r\n    if (this.theme === 'viewFlowChart') {\r\n      this.viewFlowChartByProcInstId();\r\n    } else {\r\n      this.processForecast();\r\n    }\r\n  }\r\n\r\n  tabChange(event: any) {\r\n    this.procInstId = event.nextId;\r\n    this.viewFlowChart();\r\n    this.flowChart.reloadBpmnModel();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  /**\r\n   * 查看子流程图\r\n   * @param actInst 活动实例 \r\n   * @param superProcess 父流程 \r\n   */\r\n  viewChild(actInst: ActivityInstanceSlim, superProcess: ProcessInstance) {\r\n    this.service.getMutiChildInstance(actInst, superProcess.id).subscribe((re: ProcessInstance[]) => {\r\n      if (this.chartService && re && re.length) {\r\n        if (re.length == 1) {//单个子流程\r\n          this.chartService.viewFlowChartByDialog(re[0].id, this.mode);\r\n        } else {//多实例子流程\r\n          this.chartService.viewMutiInstanceFlowChartByDialog(re, this.mode);\r\n        }\r\n      } else {\r\n        throw Error('请升级查看流程公共包实现联查子流程图功能');\r\n      }\r\n    });\r\n  }\r\n\r\n  modeSwitch() {\r\n    if (this.mode === 'complete') {\r\n      this.mode = 'simulation';\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n      this.service.getForecastProcessByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.flowChart.switchMode({\r\n          mode: 'simulation',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    } else {\r\n      this.mode = 'complete';\r\n      this.ifForecast = 'false';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n      this.service.getCompleteProcessInfoByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.flowChart.switchMode({\r\n          mode: 'complete',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  viewLogs(data: any) {\r\n    this.type = data.type;\r\n    this.actDefId = data.actiDefId;\r\n  }\r\n\r\n  viewFlowChartByProcInstId() {\r\n    this.content = '';\r\n    if (this.procInstId) {\r\n      if (this.mode === 'complete') {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getCompleteProcessInfoByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      } else {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getForecastProcessByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  processForecast() {\r\n    this.content = '';\r\n    this.mode = 'simulation';\r\n    if (this.processForecastPayload.processDefinitionId && this.processForecastPayload.dataId) {\r\n      forkJoin(\r\n        this.service.getBpmnModelbyProcDefId(this.processForecastPayload.processDefinitionId),\r\n        this.service.getForecastProcessByPayload(this.processForecastPayload))\r\n        .subscribe((data: any[]) => {\r\n          this.content = JSON.stringify(data[0]);\r\n          this.actInstList = data[1].activityInstanceSlims;\r\n          this.transInsList = data[1].transitionInstanceSlims;\r\n          this.loadFlowChart();\r\n        });\r\n    }\r\n  }\r\n\r\n  viewForm(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      this.service.getFormInfoByActInstId(procInstId, actInstId).subscribe((re: any) => {\r\n        const formInfo = re;\r\n        if (!formInfo || !formInfo.appId) {\r\n          if (this.message) {\r\n            this.message.info('找不到单据，请联系管理员查看原因！');\r\n          }\r\n          return;\r\n        }\r\n        const options: AppOptions = {\r\n          appType: 'menu',\r\n          funcId: formInfo.appId,\r\n          appId: '',\r\n          appEntrance: '',\r\n          tabId: bizInstId,\r\n          isNewTab: true\r\n        };\r\n        // 传工作流上下文参数\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('procInstId', procInstId);\r\n        parameters.set('actInstId', actInstId);\r\n        formInfo.parameters.forEach((item: any) =>\r\n          parameters.set(item.code, item.value)\r\n        );\r\n        options.queryStringParams = parameters;\r\n        if (this.frameworkSvc) {\r\n          this.frameworkSvc.openMenu(options);\r\n        } else {\r\n          throw Error('框架服务不存在！无法联查！');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      const l = this.loading.show();\r\n      this.service.retryAifCreation(procInstId, actInstId, bizInstId).subscribe(\r\n        (re: any) => {\r\n          l.close();\r\n          this.notify.success(\"重试成功\");\r\n          this.viewFlowChart();\r\n        },\r\n        (err) => {\r\n          l.close();\r\n          setTimeout(() => {\r\n            //todo 确定异常结构, 目前采用兼容取值方式\r\n            this.message.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  loadFlowChart() {\r\n    if (this.content) {\r\n      this.flowChart.load({\r\n        processInstance: this.processInstance,\r\n        content: this.content,\r\n        actiInstList: this.actInstList,\r\n        transInsList: this.transInsList,\r\n        mode: this.mode\r\n      });\r\n    }\r\n  }\r\n\r\n  fill() {\r\n    this.cls = 'd-flex flex-fill h-100 f-utils-absolute-all';\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { UiFlowchartService } from './ui-flowchart.service'\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private service: UiFlowchartService\r\n    ) { }\r\n\r\n    transform(name: any, defaultVal = ''): any {\r\n        const r = this.service.getI18nValue(name);\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { WFFlowchartService } from './wf-flowchart.service';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { TranslatePipe } from './services/translate.pipe';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { WfApprovalLogsModule } from '@gsp-wf/wf-approval-logs';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { FarrisTabsModule } from '@farris/ui-tabs';\r\nimport { SplitterModule } from '@farris/ui-splitter';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UIFlowchartComponent,\r\n    TranslatePipe],\r\n  imports: [\r\n    LayoutModule,\r\n    CommonModule,\r\n    FarrisDialogModule,\r\n    MessagerModule.forRoot({\r\n      width: 500\r\n    }),\r\n    FarrisSectionModule,\r\n    WfApprovalLogsModule,\r\n    ComboListModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FDropdownDirectiveTypeModule,\r\n    DatagridModule,\r\n    NotifyModule,\r\n    LoadingModule,\r\n    FarrisTabsModule.forRoot(),\r\n    SplitterModule\r\n  ],\r\n  exports: [UIFlowchartComponent],\r\n  providers: [\r\n    HttpService,\r\n    UiFlowchartService,\r\n    WFFlowchartService,\r\n  ],\r\n  entryComponents: [\r\n    UIFlowchartComponent\r\n  ]\r\n})\r\nexport class UiFlowchartModule { }\r\n","export class ForecastProcessPayload {\r\n\r\n    bizDefKey: string;\r\n\r\n    dataId: string;\r\n\r\n    startMode: string;\r\n\r\n    startUserId: string;\r\n}\r\n"],"names":["map","from","Injectable","HttpService","tslib_1.__extends","mxCell","mxRectangle","mxEvent","mxGeometry","mxConstants","mxPoint","mxUtils","bpmnModel","BpmnModel","Process","BPMNDiagram","EndEvent","tslib_1.__values","Node","Edge","UserActivity","OperationActivity","FlowNodeState","StartActivity","CallActivitySubProcess","AutoActivity","IntermediateCatchEventImpl","MessageActivity","NotifyActivity","AifCreationBillActivity","SequenceFlowState","SequenceFlow","FlowNode","mxGraph","mxGraphSelectionModel","mxEventSource","FrameworkService","of","Injector","MessagerService","ComponentFactoryResolver","BsModalService","EventEmitter","LOCALE_ID","LoadingService","ReflectiveInjector","NotifyService","forkJoin","Component","ViewEncapsulation","DomSanitizer","ChangeDetectorRef","Optional","HostBinding","ViewChild","Output","Input","ViewContainerRef","Pipe","NgModule","LayoutModule","CommonModule","FarrisDialogModule","MessagerModule","FarrisSectionModule","WfApprovalLogsModule","ComboListModule","ReactiveFormsModule","FormsModule","FDropdownDirectiveTypeModule","DatagridModule","NotifyModule","LoadingModule","FarrisTabsModule","SplitterModule"],"mappings":"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"}
