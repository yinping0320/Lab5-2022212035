import { Observable } from 'rxjs';
import { HttpService } from '@ecp-caf/caf-common';
import { ForecastProcessPayload } from '../entity/forecast-process-payload';
import { ActivityInstanceSlim } from '../flow-chart/entity';
export declare class UiFlowchartService {
    private httpSvc;
    constructor(httpSvc: HttpService);
    getForecastProcessListByPayload(payload: ForecastProcessPayload): Observable<any>;
    getRuntimeProcInstsByDataId(dataId: string): Observable<any>;
    getHistoricProcInstsByDataId(dataId: string): Observable<any>;
    /**
     * 基于流程实例ID获取流程实例
     * @param procInstId 流程实例id
     */
    getProcInstanceById(procInstId: string): Observable<any>;
    /**
     * 基于流程实例ID获取bpmnModel
     */
    getBpmnModelbyProcInstId(procInstId: string): Observable<any>;
    /**
     * 基于流程定义ID获取bpmnModel
     */
    getBpmnModelbyProcDefId(procDefId: string): Observable<any>;
    getSubProcessInstance(superActInstId: string, superProcInstId: string): Observable<any>;
    /**
     * 获取所有包含预解析的流程实例信息
     */
    getForecastProcessByProcInstId(procInstId: string): Observable<any>;
    /**
     * 获取流程预测数据
     */
    getForecastProcessByPayload(payload: any): Observable<ArrayBuffer>;
    getCompleteProcessInfoByProcInstId(procInstId: string): Observable<any>;
    /**
     * 基于流程实例Id获取所有活动实例
     * @param procInstId procInstId
     */
    getAllActiInstsbyProcInstId(procInstId: string): Observable<any>;
    /**
     * 基于流程实例ID获取所有的流转实例
     * @param procInstId procInstId
     */
    getTransitionInstanceSlimsByProcInstId(procInstId: string): Observable<any>;
    getFormInfoByProcInstId(procInstId: string): Observable<any>;
    getFormInfoByActInstId(procInstId: string, actInstId: string): Observable<any>;
    /**
     * 获取审批日志信息
     * @param ProcInstId ProcInstId
     * 新改造的接口
     */
    getWorkItemLogs(procInstId: string, activityDefinitionId?: string): Observable<any>;
    getI18nValue(name: string): string;
    getProcessInstanceById(processId: string): Observable<any>;
    getProcInstIdByDataId(dataId: string): Observable<any>;
    retryAifCreation(procInstId: string, actInstId: string, bizInstId: string): Observable<ArrayBuffer>;
    /**
     * 是否是外部流程第三方的任务
     * @param processInstanceId 流程实例ID
     */
    ifThirdTask(processInstanceId: string): Observable<any>;
    /**
     * 获取查看共享流程图的相关参数
     * @param bizId 单据内码
     */
    getFsParamsByBizId(bizId: string): Observable<any>;
    /**
     * 获取共享查看流程图的URL
     * @param params 参数
     */
    viewFsProcessNew(params: any): Observable<any>;
    getFlowChartStyleConfig(): Observable<any>;
    /**
     * 获取多实例子流程
     * @param actInst 活动实例
     * @param superProcInstId 父流程实例id
     * @returns
     */
    getMutiChildInstance(actInst: ActivityInstanceSlim, superProcInstId: string): Observable<any>;
}
