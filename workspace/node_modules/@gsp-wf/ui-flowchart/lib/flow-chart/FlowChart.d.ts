import { MxGraphNS, mxEventSource } from "@edp-pmf/mxgraph-ts";
import { BpmnModel } from "@edp-pmf/bpmn-model";
import { ProcessInstance } from "./entity/ProcessInstance";
import { ActivityInstanceSlim } from "./entity/ActivityInstanceSlim";
import { TransitionInstanceSlim } from "./entity/TransitionInstanceSlim";
import { UIFlowchartComponent } from "../task-flowchart/task-flowchart.component";
import { FlowGraph } from "./FlowGraph";
import { CellStyleConfig } from "../entity/cell-style/CellStyleConfig";
export declare class FlowChart extends mxEventSource {
    ngComp: UIFlowchartComponent;
    container: HTMLDivElement;
    graph: FlowGraph;
    diagramContainer: HTMLDivElement;
    button: HTMLButtonElement;
    resizeHandler: () => void;
    mode: 'complete' | 'simulation';
    processInstance: ProcessInstance;
    bpmnModel: BpmnModel;
    actList: ActivityInstanceSlim[];
    transInsList: TransitionInstanceSlim[];
    rootPath: string;
    /**
     * 当前语言
     */
    langCode: any;
    constructor(container: any, config: CellStyleConfig);
    /**
     * 设置当前语言
     * @param lang
     */
    setLanguage(lang: string): void;
    switchMode({ mode, actiInstList, transInsList }: {
        mode: any;
        actiInstList: any;
        transInsList: any;
    }): void;
    load(data: any): void;
    createDiv(): void;
    createGraph(config: CellStyleConfig): FlowGraph;
    cellSelect(sender: any, evt: MxGraphNS.mxEventObject): void;
    viewChildProcessChart(actInst: ActivityInstanceSlim): void;
    viewForm(procInstId: string, actInstId: string, bizInstId: string): void;
    retryAifCreation(procInstId: string, actInstId: string, bizInstId: string): void;
    resetScrollbars(): void;
    refresh(): void;
    reloadBpmnModel(): void;
}
