import { OnInit, ElementRef, EventEmitter, ChangeDetectorRef, Injector, ViewContainerRef, AfterViewChecked } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { LoadingService } from "@farris/ui-loading";
import { NotifyService } from '@farris/ui-notify';
import { FlowChart } from '../flow-chart/FlowChart';
import { UiFlowchartService } from '../services/ui-flowchart.service';
import { WFFlowchartService } from '../wf-flowchart.service';
import { CellStyleConfig } from '../entity/cell-style/CellStyleConfig';
import { ActivityInstanceSlim, ProcessInstance } from '../flow-chart/entity';
import { BsModalRef } from '@farris/ui-modal';
export declare class UIFlowchartComponent implements OnInit, AfterViewChecked {
    private sanitizer;
    private service;
    private changeDetector;
    private injector;
    private chartService;
    static func: any;
    cls: string;
    iframe: ElementRef;
    modalHide: EventEmitter<boolean>;
    procInstId: string;
    dataId: string;
    actDefId: string;
    ifForecast: string;
    type: any;
    content: string;
    actInstList: any[];
    transInsList: any[];
    processInstance: any;
    fcHtml: string;
    theme: string;
    processForecastPayload: any;
    dialog: BsModalRef;
    private _mode;
    mode: string;
    modeButton: string;
    typeList: {
        value: string;
        text: string;
    }[];
    private message;
    private frameworkSvc;
    ProcInstId: string;
    DataId: string;
    ProcInstList: ProcessInstance[];
    flowChartContainerER: ElementRef<HTMLDivElement>;
    flowChartContainerVCR: ViewContainerRef;
    flowChart: FlowChart;
    localeId: string;
    loading: LoadingService;
    notify: NotifyService;
    procInstList: ProcessInstance[];
    curChildProcInst: ProcessInstance;
    flowChartContainerClientSize: {
        clientHeight?: number;
        clientWidth?: number;
    };
    sequenceColorList: {
        colorClass: string;
        label: string;
    }[];
    constructor(sanitizer: DomSanitizer, service: UiFlowchartService, changeDetector: ChangeDetectorRef, injector: Injector, chartService: WFFlowchartService);
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    createFlowChart(config: CellStyleConfig): void;
    viewFlowChart(): void;
    tabChange(event: any): void;
    closeDialog(): void;
    /**
     * 查看子流程图
     * @param actInst 活动实例
     * @param superProcess 父流程
     */
    viewChild(actInst: ActivityInstanceSlim, superProcess: ProcessInstance): void;
    modeSwitch(): void;
    viewLogs(data: any): void;
    viewFlowChartByProcInstId(): void;
    processForecast(): void;
    viewForm(procInstId: string, actInstId: string, bizInstId: string): void;
    retryAifCreation(procInstId: string, actInstId: string, bizInstId: string): void;
    loadFlowChart(): void;
    fill(): void;
}
