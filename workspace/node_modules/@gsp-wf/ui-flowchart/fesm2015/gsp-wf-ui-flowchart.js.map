{"version":3,"file":"gsp-wf-ui-flowchart.js.map","sources":["ng://@gsp-wf/ui-flowchart/lib/services/i18n/en.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-cht.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/zh-chs.ts","ng://@gsp-wf/ui-flowchart/lib/services/i18n/index.ts","ng://@gsp-wf/ui-flowchart/lib/services/ui-flowchart.service.ts","ng://@gsp-wf/ui-flowchart/lib/flow-chart/entity/Cell.ts","ng://@gsp-wf/ui-flowchart/lib/flow-chart/FlowGraph.ts","ng://@gsp-wf/ui-flowchart/lib/flow-chart/FlowChart.ts","ng://@gsp-wf/ui-flowchart/lib/wf-flowchart.service.ts","ng://@gsp-wf/ui-flowchart/lib/task-flowchart/task-flowchart.component.ts","ng://@gsp-wf/ui-flowchart/lib/services/translate.pipe.ts","ng://@gsp-wf/ui-flowchart/lib/ui-flowchart.module.ts","ng://@gsp-wf/ui-flowchart/lib/entity/forecast-process-payload.ts"],"sourcesContent":["export const en = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: 'Approval Logs',\r\n            approvalOpinion: 'Approval opinion',\r\n            startTime: 'StartTime',\r\n            endTime: 'EndTime',\r\n            todo: 'Todo',\r\n            done: 'Done',\r\n            toAssign: 'To Assign'\r\n        },\r\n        flowchart: {\r\n            title: 'Flow Chart',\r\n            processNotFound: 'process instance id is null',\r\n            flowChart: 'Flow Chart',\r\n            complete: 'Hide Calculated Route',\r\n            simulation: 'Show Calculated Route',\r\n            sequenceColor: 'Description Of Sequence Color',\r\n            completed: 'Completed',\r\n            calculate: 'Calculate Route',\r\n            default: 'Default',\r\n            suspend: 'Calculate Suspend',\r\n            noProcess: 'Process definition not found!',\r\n            list: 'Process List',\r\n            noDataId: 'form id is null',\r\n            noBizDefKey: 'process category id is null'\r\n        }\r\n    }\r\n};\r\n","export const zh_CHT = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: '審批記錄',\r\n            approvalOpinion: '審批意見',\r\n            startTime: '接收時間',\r\n            endTime: '處理時間',\r\n            todo: '待辦理',\r\n            done: '已辦理',\r\n            toAssign: '未指派'\r\n        },\r\n        flowchart: {\r\n            title: '查看流程',\r\n            processNotFound: '流程實例ID為空',\r\n            dataIdIsNull: '單據內碼為空',\r\n            flowChart: '流程圖',\r\n            complete: '隱藏計算路線',\r\n            simulation: '顯示計算路線',\r\n            sequenceColor: '分支線顏色說明',\r\n            completed: '已運行',\r\n            calculate: '計算路線',\r\n            default: '默認',\r\n            suspend: '計算中斷',\r\n            noProcess: '未找到符合條件的流程定義！',\r\n            list: '流程列表',\r\n            noDataId: '單據內碼為空',\r\n            noBizDefKey: '流程分類ID為空'\r\n        }\r\n    }\r\n};\r\n","export const zh_CHS = {\r\n    static: {\r\n        approvalLogs: {\r\n            title: '审批记录',\r\n            approvalOpinion: '审批意见',\r\n            startTime: '接收时间',\r\n            endTime: '处理时间',\r\n            todo: '待办理',\r\n            done: '已办理',\r\n            toAssign: '未指派'\r\n        },\r\n        flowchart: {\r\n            title: '查看流程',\r\n            processNotFound: '流程实例ID为空',\r\n            dataIdIsNull: '单据内码为空',\r\n            flowChart: '流程图',\r\n            complete: '显示设计路线',\r\n            simulation: '显示预测路线',\r\n            sequenceColor: '分支线颜色说明',\r\n            completed: '已运行',\r\n            calculate: '计算路线',\r\n            default: '默认',\r\n            suspend: '计算中断',\r\n            noProcess: '未找到符合条件的流程定义！',\r\n            list: '流程列表',\r\n            noDataId: '单据内码为空',\r\n            noBizDefKey: '流程分类ID为空'\r\n        }\r\n    }\r\n};\r\n","import { en } from './en';\r\nimport { zh_CHT } from './zh-cht';\r\nimport { zh_CHS } from './zh-chs';\r\n\r\nexport const translate = {\r\n    'zh-CHS': zh_CHS,\r\n    'en': en,\r\n    'zh-CHT': zh_CHT\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, from, of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { translate } from './i18n/index';\r\nimport { ForecastProcessPayload } from '../entity/forecast-process-payload';\r\nimport { map } from 'rxjs/operators';\r\nimport { ActivityInstanceSlim } from '../flow-chart/entity';\r\n\r\n@Injectable()\r\nexport class UiFlowchartService {\r\n  constructor(private httpSvc: HttpService) { }\r\n\r\n  getForecastProcessListByPayload(payload: ForecastProcessPayload): Observable<any> {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/startProcess-simulation';\r\n    return this.httpSvc.post(url, payload).pipe(\r\n      map((re: any) => re.procDefs)\r\n    );\r\n  }\r\n\r\n  getRuntimeProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/runtimeProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  getHistoricProcInstsByDataId(dataId: string): Observable<any> {\r\n    if (dataId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/historicProcInstList?dataId=${dataId}`;\r\n      return this.httpSvc.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例ID获取流程实例\r\n   * @param procInstId 流程实例id\r\n   */\r\n  getProcInstanceById(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n  /**\r\n   * 基于流程实例ID获取bpmnModel\r\n   */\r\n  getBpmnModelbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程定义ID获取bpmnModel\r\n   */\r\n  getBpmnModelbyProcDefId(procDefId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/procDefs/${procDefId}/bpmnModel`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getSubProcessInstance(superActInstId: string, superProcInstId: string): Observable<any> {\r\n    if (superActInstId) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/subProcInst?superActInstId=${superActInstId}&superProcInstId=${superProcInstId}`;\r\n      return this.httpSvc.get(url);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取所有包含预解析的流程实例信息\r\n   */\r\n  getForecastProcessByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/forecastProcess`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取流程预测数据\r\n   */\r\n  getForecastProcessByPayload(payload: any) {\r\n    const url = '/api/runtime/wf/v1.0/processInstances/forecastProcess';\r\n    return this.httpSvc.post(url, payload);\r\n  }\r\n\r\n  getCompleteProcessInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/flowChartInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例Id获取所有活动实例\r\n   * @param procInstId procInstId\r\n   */\r\n  getAllActiInstsbyProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/activityInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 基于流程实例ID获取所有的流转实例\r\n   * @param procInstId procInstId\r\n   */\r\n  getTransitionInstanceSlimsByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/transitionInstanceSlims`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByProcInstId(procInstId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getFormInfoByActInstId(procInstId: string, actInstId: string): Observable<any> {\r\n    let url = `/api/runtime/wf/v1.0/processInstances/${procInstId}/formInfo`;\r\n    if (actInstId) {\r\n      url += `?actInstId=${actInstId}`;\r\n    }\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取审批日志信息\r\n   * @param ProcInstId ProcInstId\r\n   * 新改造的接口\r\n   */\r\n  getWorkItemLogs(procInstId: string, activityDefinitionId?: string): Observable<any> {\r\n    const logUrl = activityDefinitionId ?\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs?activityDefinitionId=${activityDefinitionId}` :\r\n      `/api/runtime/wf/v1.0/processInstances/${procInstId}/logs`;\r\n    return this.httpSvc.get(logUrl);\r\n  }\r\n\r\n  getI18nValue(name: string) {\r\n    if (!name) { return ''; }\r\n    const defaultLang = localStorage.getItem('languageCode');\r\n    const langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n    let resultVal = '';\r\n    if (name.indexOf('.') === -1) {\r\n      resultVal = langData[name];\r\n    } else {\r\n      resultVal = name.split('.').reduce((obj, key) => {\r\n        if (obj) {\r\n          return obj[key];\r\n        } else {\r\n          return null;\r\n        }\r\n      }, langData);\r\n    }\r\n    return resultVal;\r\n  }\r\n\r\n  getProcessInstanceById(processId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/${processId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  getProcInstIdByDataId(dataId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/procInstId?bizInstId=${dataId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    return this.httpSvc.post(\"/api/runtime/wf/v1.0/aifactivityinstance/retry\", actInstId);\r\n  }\r\n\r\n  /**\r\n   * 是否是外部流程第三方的任务\r\n   * @param processInstanceId 流程实例ID\r\n   */\r\n  ifThirdTask(processInstanceId: string): Observable<any> {\r\n    const url = `/api/runtime/task/v1.0/instances/wfExternalProcess?processInstanceId=${processInstanceId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取查看共享流程图的相关参数\r\n   * @param bizId 单据内码\r\n   */\r\n  getFsParamsByBizId(bizId: string): Observable<any> {\r\n    const url = `/api/runtime/task/v1.0/tasks/third/bizId?bizId=${bizId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取共享查看流程图的URL\r\n   * @param params 参数\r\n   */\r\n  viewFsProcessNew(params: any): Observable<any> {\r\n    const url = `/api/fssp/ssp/v1.0/mybill/fswybz/viewprocess`;\r\n    return this.httpSvc.post(url, params);\r\n  }\r\n\r\n\r\n  getFlowChartStyleConfig(): Observable<any> {\r\n    const url = `/platform/runtime/common/web/@gsp-wf/wf-process-editor/config/cell-style-config.json`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取多实例子流程\r\n   * @param actInst 活动实例\r\n   * @param superProcInstId 父流程实例id\r\n   * @returns \r\n   */\r\n  getMutiChildInstance(actInst: ActivityInstanceSlim, superProcInstId: string): Observable<any> {\r\n    const actInstId = actInst.activityInstanceId;\r\n    const isMultiInstanceRoot = actInst.multiInstanceRoot || false; \r\n    let url = `/api/runtime/wf/v1.0/processInstances/subProcInstList?actInstId=${actInstId}&isMultiInstanceRoot=${isMultiInstanceRoot}&superProcInstId=${superProcInstId}`;\r\n    return this.httpSvc.get(url);\r\n  }\r\n\r\n}\r\n","import { mxCell, MxGraphNS } from \"@edp-pmf/mxgraph-ts\";\r\nimport { FlowElement, DiagramElement } from \"@edp-pmf/bpmn-model\";\r\n\r\nexport class Cell extends mxCell {\r\n    flowElement: FlowElement;\r\n    diagramElement: DiagramElement & { BpmnElementId: string };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n}\r\n","import { mxGraph, mxEvent, mxConstants, mxPoint, mxRectangle, mxUtils, MxGraphNS, mxGeometry } from \"@edp-pmf/mxgraph-ts\";\r\nimport { EndEvent, BpmnModel, Process, BPMNDiagram, FlowElement, DiagramElement, BPMNShape, BPMNEdge, SequenceFlow, FlowNode, Node, Edge, FlowNodeState, SequenceFlowState } from \"@edp-pmf/bpmn-model\";\r\nimport { StartActivity, UserActivity, CallActivitySubProcess, AutoActivity, IntermediateCatchEventImpl, OperationActivity, MessageActivity, NotifyActivity, AifCreationBillActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { Cell } from \"./entity/Cell\";\r\nimport { ActivityInstanceSlim } from \"./entity/ActivityInstanceSlim\";\r\nimport { TransitionInstanceSlim } from \"./entity/TransitionInstanceSlim\";\r\nimport { CellStyleConfig } from \"../entity/cell-style/CellStyleConfig\";\r\nimport { StateShapeStyle } from \"../entity/cell-style/StateShapeStyle\";\r\n\r\nexport class FlowGraph extends mxGraph {\r\n    bpmnModel: BpmnModel;\r\n    autoTranslate: boolean;\r\n    scrollTileSize: MxGraphNS.mxRectangle = new mxRectangle(0, 0, 400, 600);\r\n    getPagePadding: () => MxGraphNS.mxPoint;\r\n    getPageSize: () => MxGraphNS.mxRectangle;\r\n    getScrollTileSize: () => MxGraphNS.mxRectangle;\r\n    getPageLayout: () => MxGraphNS.mxRectangle;\r\n\r\n    cellStyleConfig: CellStyleConfig = {\r\n        edgeStyleDic: {},\r\n        shapeStyleDic: {},\r\n    };\r\n\r\n    actList: ActivityInstanceSlim[] = [];\r\n    transInsList: TransitionInstanceSlim[] = [];\r\n    mode: string;\r\n    rootPath: string = '';//基路径\r\n    /**\r\n     * 当前语言\r\n     */\r\n    langCode = (window as any).gspframeworkService && (window as any).gspframeworkService.rtf.language.getLanguageCode() || localStorage.getItem('languageCode') || 'zh-CHS';\r\n\r\n    constructor(container: HTMLDivElement, cellStyleConfig?: CellStyleConfig) {\r\n        super(container);\r\n        //获取基路径\r\n        try {\r\n            this.rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n        } catch (error) {\r\n        }\r\n        this.cellStyleConfig = cellStyleConfig ? cellStyleConfig : this.cellStyleConfig;\r\n        this.autoScroll = false;\r\n        this.autoExtend = true;\r\n        this.pageVisible = false;\r\n        //this.panningHandler.ignoreCell = true;\r\n        //this.setPanning(true);\r\n        this.setCellsSelectable(true);\r\n        this.setDisconnectOnMove(false);\r\n        //节点不可改变大小\r\n        this.setCellsResizable(false);\r\n        //cell是否可以连线\r\n        this.setConnectable(false);\r\n        //禁止操作\r\n        this.setEnabled(true);\r\n        //设置cell文本是否可移动\r\n        this.setVertexLabelsMovable(false);\r\n\r\n        this.setCellsLocked(true);\r\n        //不允许图上存在没有连接活动节点的线（防止拖动线连接点导致失去连接）,还没有找到不允许拖动连接控制点的属性\r\n        this.setAllowDanglingEdges(false);\r\n        mxEvent.disableContextMenu(container);\r\n\r\n        // 设置默认样式\r\n        this.setDefaultStyles();\r\n    }\r\n\r\n    /**\r\n     * 重写创建节点对象方法\r\n     * @param parent\r\n     * @param id\r\n     * @param value\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param height\r\n     * @param style\r\n     * @param relative\r\n     * @returns\r\n     */\r\n    createVertex(parent, id, value, x, y, width, height, style, relative) {\r\n        // Creates the geometry for the vertex\r\n        const geometry = new mxGeometry(x, y, width, height);\r\n        geometry.relative = (relative != null) ? relative : false;\r\n\r\n        // Creates the vertex\r\n        const vertex = new Cell(value, geometry, style);\r\n        vertex.setId(id);\r\n        vertex.setVertex(true);\r\n        vertex.setConnectable(true);\r\n\r\n        return vertex;\r\n    }\r\n\r\n    /**\r\n     * 重写创建边对象方法\r\n     * @param parent\r\n     * @param id\r\n     * @param value\r\n     * @param source\r\n     * @param target\r\n     * @param style\r\n     * @returns\r\n     */\r\n    createEdge(parent, id, value, source, target, style) {\r\n        // Creates the edge\r\n        var edge = new Cell(value, new mxGeometry(), style);\r\n        edge.setId(id);\r\n        edge.setEdge(true);\r\n        edge.geometry.relative = true;\r\n\r\n        return edge;\r\n    }\r\n\r\n    /**\r\n     * 设置默认样式\r\n     */\r\n    setDefaultStyles() {\r\n        const styleSheet = this.getStylesheet();\r\n        // 节点默认样式\r\n        const vertexStyle = styleSheet.getDefaultVertexStyle();\r\n        vertexStyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\r\n        vertexStyle[mxConstants.STYLE_VERTICAL_LABEL_POSITION] = mxConstants.ALIGN_BOTTOM;\r\n        vertexStyle[mxConstants.STYLE_FONTSIZE] = 12;\r\n        vertexStyle[mxConstants.STYLE_FONTFAMILY] = 'Helvetica';\r\n        vertexStyle[mxConstants.STYLE_FONTCOLOR] = \"#333\";\r\n\r\n        // 连线样式默认为正交\r\n        const edgeStyle = styleSheet.getDefaultEdgeStyle();\r\n        edgeStyle[mxConstants.STYLE_SOURCE_PORT] = 'e';\r\n        edgeStyle[mxConstants.STYLE_TARGET_PORT] = 'w';\r\n        edgeStyle[mxConstants.STYLE_EDGE] = mxConstants.EDGESTYLE_ORTHOGONAL;\r\n        edgeStyle[mxConstants.STYLE_ROUNDED] = 1;\r\n        edgeStyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\r\n        edgeStyle[mxConstants.STYLE_FONTSIZE] = 12;\r\n        edgeStyle[mxConstants.STYLE_FONTFAMILY] = 'Helvetica';\r\n    }\r\n\r\n    /**\r\n     * 创建无限大画布\r\n     */\r\n    createInfiniteCanvas() {\r\n        this.getPagePadding = () => {\r\n            return new mxPoint(\r\n                Math.max(0, Math.round(this.container.offsetWidth - 34)),\r\n                Math.max(0, Math.round(this.container.offsetHeight - 34)));\r\n        }\r\n\r\n        this.getScrollTileSize = () => {\r\n            if (this.scrollTileSize == null) {\r\n                this.scrollTileSize = new mxRectangle(0, 0, 400, 600);\r\n            }\r\n\r\n            return this.scrollTileSize;\r\n        }\r\n\r\n        this.getPageSize = () => {\r\n            return (this.pageVisible) ? new mxRectangle(0, 0, this.pageFormat.width * this.pageScale, this.pageFormat.height * this.pageScale) : this.getScrollTileSize();\r\n        }\r\n\r\n        this.getPageLayout = () => {\r\n            let size = (this.pageVisible) ? this.getPageSize() : this.getScrollTileSize();\r\n            let bounds = this.getGraphBounds();\r\n\r\n            if (bounds.width == 0 || bounds.height == 0) {\r\n                return new mxRectangle(0, 0, 1, 1);\r\n            }\r\n            else {\r\n                // Computes untransformed graph bounds\r\n                let x = Math.ceil(bounds.x / this.view.scale - this.view.translate.x);\r\n                let y = Math.ceil(bounds.y / this.view.scale - this.view.translate.y);\r\n                let w = Math.floor(bounds.width / this.view.scale);\r\n                let h = Math.floor(bounds.height / this.view.scale);\r\n\r\n                let x0 = Math.floor(x / size.width);\r\n                let y0 = Math.floor(y / size.height);\r\n                let w0 = Math.ceil((x + w) / size.width) - x0;\r\n                let h0 = Math.ceil((y + h) / size.height) - y0;\r\n\r\n                return new mxRectangle(x0, y0, w0, h0);\r\n            }\r\n        }\r\n\r\n        this.getPreferredPageSize = (bounds, width, height) => {\r\n            let pages = this.getPageLayout();\r\n            let size = this.getPageSize();\r\n\r\n            return new mxRectangle(0, 0, pages.width * size.width, pages.height * size.height);\r\n        };\r\n\r\n        // 重写画布大小变化后方法\r\n        const graphSizeDidChange = this.sizeDidChange;\r\n        this.sizeDidChange = () => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pages = this.getPageLayout();\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n\r\n                // Updates the minimum graph size\r\n                let minw = Math.ceil(2 * pad.x / this.view.scale + pages.width * size.width);\r\n                let minh = Math.ceil(2 * pad.y / this.view.scale + pages.height * size.height);\r\n\r\n                let min = this.minimumGraphSize;\r\n\r\n                // LATER: Fix flicker of scrollbar size in IE quirks mode\r\n                // after delayed call in window.resize event handler\r\n                if (min == null || min.width != minw || min.height != minh) {\r\n                    this.minimumGraphSize = new mxRectangle(0, 0, minw, minh);\r\n                }\r\n\r\n                // Updates auto-translate to include padding and graph size\r\n                let dx = pad.x / this.view.scale - pages.x * size.width;\r\n                let dy = pad.y / this.view.scale - pages.y * size.height;\r\n\r\n                if (!this.autoTranslate && (this.view.translate.x != dx || this.view.translate.y != dy)) {\r\n                    this.autoTranslate = true;\r\n                    (this.view as any).x0 = pages.x;\r\n                    (this.view as any).y0 = pages.y;\r\n\r\n                    let tx = this.view.translate.x;\r\n                    let ty = this.view.translate.y;\r\n\r\n                    this.view.setTranslate(dx, dy);\r\n                    this.container.scrollLeft += (dx - tx) * this.view.scale;\r\n                    this.container.scrollTop += (dy - ty) * this.view.scale;\r\n\r\n                    this.autoTranslate = false;\r\n                    return;\r\n                }\r\n\r\n                graphSizeDidChange.apply(this, []);\r\n            }\r\n        };\r\n\r\n        // 重写view获取背景页大小\r\n        this.view.getBackgroundPageBounds = () => {\r\n            let layout = this.getPageLayout();\r\n            let page = this.getPageSize();\r\n\r\n            return new mxRectangle(\r\n                this.view.scale * (this.view.translate.x + layout.x * page.width),\r\n                this.view.scale * (this.view.translate.y + layout.y * page.height),\r\n                this.view.scale * layout.width * page.width,\r\n                this.view.scale * layout.height * page.height\r\n            );\r\n\r\n        };\r\n\r\n        // 重写view validate方法\r\n        const graphViewValidate = this.view.validate;\r\n        this.view.validate = (cell?: MxGraphNS.mxCell) => {\r\n            if (this.container != null && mxUtils.hasScrollbars(this.container)) {\r\n                let pad = this.getPagePadding();\r\n                let size = this.getPageSize();\r\n                let tx = this.view.translate.x;\r\n                let ty = this.view.translate.y;\r\n                this.view.translate.x = pad.x / this.view.scale - ((this.view as any).x0 || 0) * size.width;\r\n                this.view.translate.y = pad.y / this.view.scale - ((this.view as any).y0 || 0) * size.height;\r\n            }\r\n\r\n            graphViewValidate.apply(this.view, [cell]);\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * 创建BpmnModel\r\n     */\r\n    createBpmnModel() {\r\n        const bpmnModel = new BpmnModel();\r\n        bpmnModel.TargetNamespace = \"Default_Namespace\";\r\n        bpmnModel.DefaultProcess = new Process(bpmnModel);\r\n        bpmnModel.DefaultDiagram = new BPMNDiagram(bpmnModel);\r\n        bpmnModel.DefaultDiagram.BpmnPlane.BpmnElementId = bpmnModel.DefaultProcess.Id;\r\n\r\n        return bpmnModel;\r\n    }\r\n\r\n    /**\r\n     * 加载BpmnModel并画图\r\n     */\r\n    loadBpmnModel(json: string) {\r\n        this.removeCells(this.getChildCells(this.getDefaultParent()));\r\n        this.bpmnModel = this.createBpmnModel();\r\n        this.bpmnModel.LoadFromJson(json);\r\n        this.drawBpmnGraph(this.bpmnModel);\r\n    }\r\n\r\n    /**\r\n     * 重新加载BpmnModel并画图\r\n     * @param json\r\n     */\r\n    reloadBpmnModel(json?: string) {\r\n        this.removeCells(this.getChildCells(this.getDefaultParent()));\r\n        if (json) {\r\n            this.loadBpmnModel(json);\r\n        } else {\r\n            this.drawBpmnGraph(this.bpmnModel);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据BpmnModel画图\r\n     */\r\n    drawBpmnGraph(bpmnModel: BpmnModel) {\r\n        const { nodeDict, edgeDict } = this.buildFlowDiagDict(bpmnModel);\r\n        const flowDict = this.buildFlowDict(bpmnModel);\r\n        this.drawNodeCells(flowDict, nodeDict);\r\n        this.drawEdgeCells(flowDict, edgeDict);\r\n        this.getModel().beginUpdate();\r\n        if (this.mode === 'simulation') {\r\n            this.drawInterceptGraph(flowDict, nodeDict, edgeDict);\r\n            this.addJumpEdges(flowDict);\r\n        }\r\n        this.getModel().endUpdate();\r\n    }\r\n\r\n    private drawInterceptGraph(flowDict: { [key: string]: FlowElement; },\r\n        nodeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; }) {\r\n        const firstAct = this.findFirstStartActivityInstance(this.actList);\r\n        // todo：此处待修复\r\n        let endActDef: EndEvent;\r\n        for (const key in flowDict) {\r\n            if (flowDict[key] instanceof EndEvent) {\r\n                endActDef = flowDict[key] as EndEvent;\r\n            }\r\n        }\r\n        if (firstAct) {\r\n            const endActiInstList = this.findEndActiInstList(firstAct, this.actList, this.transInsList);\r\n            endActiInstList.forEach((endActiInst => {\r\n                if (endActiInst.activityDefinitionId !== endActDef.Id) {\r\n                    this.drawNextFlowChart(endActiInst.activityDefinitionId, nodeDict, edgeDict);\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    addJumpEdges(flowDict: { [key: string]: FlowElement; }) {\r\n        const nodeCells = (this.getChildCells(this.getDefaultParent(), true) || []) as Cell[];\r\n        const noIncomingNodes: Cell[] = this.findNoIncomingNodes(nodeCells);\r\n        for (const node of noIncomingNodes) {\r\n            const actInst = this.actList.filter(a => a.activityDefinitionId === node.flowElement.Id)[0];\r\n            const cellId = actInst.precursorActivityDefinitionId + '_' + actInst.activityDefinitionId;\r\n            const source = nodeCells.find((it) => {\r\n                return it.flowElement && it.flowElement.Id === actInst.precursorActivityDefinitionId;\r\n            });\r\n            const target = nodeCells.find((it) => {\r\n                return it.flowElement && it.flowElement.Id === actInst.activityDefinitionId;\r\n            });\r\n            const map = new Map();\r\n            map.set('jump', true);\r\n            const style = this.getEdgeStyle(null, null, map);\r\n            const cell = this.insertEdge(this.getDefaultParent(), cellId, '', source, target, style) as Cell;\r\n            if (cell !== null) {\r\n                cell.source = source;\r\n                cell.target = target;\r\n                cell.geometry.points = [\r\n                    // new mxPoint(source.geometry.x+ source.geometry.width/2, target.geometry.y+target.geometry.height/2)\r\n                ];\r\n                console.log(cell);\r\n                this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 画节点\r\n     */\r\n    drawNodeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        nodeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        additional: boolean = false,\r\n    ) {\r\n        Object.keys(nodeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId];\r\n            const diagElt = nodeDict[bpmnModelElementId] as BPMNShape;\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n\r\n            this.drawNodeCell(flowElt, diagElt, additional);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 画单个节点\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     */\r\n    drawNodeCell(flowElt: FlowElement, diagElt: BPMNShape, additional: boolean) {\r\n        const style = this.getVertexStyle(flowElt, diagElt, additional);\r\n        let cell: Cell = null;\r\n        let label = \"\";\r\n        if (flowElt != null) {\r\n            label = flowElt.Name;\r\n            if (flowElt.NameLanguage && flowElt.NameLanguage[this.langCode] != null) {\r\n                label = flowElt.NameLanguage[this.langCode];\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (this.actList.findIndex(a => a.activityDefinitionId === flowElt.Id) > -1) {\r\n                cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n            } else if (additional) {\r\n                cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n            }\r\n        } else {\r\n            cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n        }\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n        // const cell = this.insertVertex(this.getDefaultParent(), flowElt.Id, label, diagElt.Bounds.X, diagElt.Bounds.Y, diagElt.Bounds.Width, diagElt.Bounds.Height, style) as Cell;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n    }\r\n\r\n    /**\r\n     * 画连线\r\n     */\r\n    drawEdgeCells(\r\n        flowDict: { [key: string]: FlowElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; },\r\n        additional: boolean = false,\r\n        cut: boolean = false,\r\n    ) {\r\n        Object.keys(edgeDict).forEach((bpmnModelElementId: string) => {\r\n            const flowElt = flowDict[bpmnModelElementId] as SequenceFlow;\r\n            const diagElt = edgeDict[bpmnModelElementId] as BPMNEdge;\r\n\r\n            if (flowElt == null) {\r\n                return;\r\n            }\r\n\r\n            this.drawEdgeCell(flowElt, diagElt, additional, cut);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    private judgeConnectBetweenTwoNodes(flowDict: { [key: string]: FlowElement; }, sourceId: string, targetId: string): boolean {\r\n        const source = flowDict[sourceId] as FlowNode;\r\n        const outGoings = source.Outgoings;\r\n        if (!outGoings || outGoings.length === 0) {\r\n            return false;\r\n        }\r\n        for (const outGoing of outGoings) {\r\n            const sequenceFlow = flowDict[outGoing] as SequenceFlow;\r\n            if (sequenceFlow.TargetRef === targetId) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 画单条连线\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    drawEdgeCell(flowElt: SequenceFlow, diagElt: BPMNEdge, additional: boolean, cut: boolean) {\r\n        // 获取已插入的节点元素\r\n        const nodeCells = (this.getChildCells(this.getDefaultParent(), true) || []) as Cell[];\r\n        const source = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.SourceRef;\r\n        });\r\n        const target = nodeCells.find((it) => {\r\n            return it.flowElement && it.flowElement.Id === flowElt.TargetRef;\r\n        });\r\n        const map = new Map();\r\n        map.set('additional', additional);\r\n        map.set('cut', cut);\r\n        const style = this.getEdgeStyle(flowElt, diagElt, map);\r\n        let cell: Cell = null;\r\n        let label = \"\";\r\n        if (flowElt != null) {\r\n            label = flowElt.Name;\r\n            if (flowElt.NameLanguage && flowElt.NameLanguage[this.langCode] != null) {\r\n                label = flowElt.NameLanguage[this.langCode];\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (this.transInsList.findIndex(a => a.sourceActivityDefinitionId === flowElt.SourceRef\r\n                && a.destinationActivityDefinitionId === flowElt.TargetRef) > -1) {\r\n                cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n            } else if (additional || cut) {\r\n                cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n            }\r\n        } else {\r\n            cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n        }\r\n\r\n        if (cell == null) {\r\n            return;\r\n        }\r\n        // const cell = this.insertEdge(this.getDefaultParent(), flowElt.Id, label, source, target, style) as Cell;\r\n        // cell.geometry.relative = true;\r\n        cell.flowElement = flowElt;\r\n        cell.diagramElement = diagElt;\r\n        cell.source = source;\r\n        cell.target = target;\r\n\r\n        cell.geometry.points = cell.geometry.points || [];\r\n\r\n        // 判断是否为旧版本连线\r\n        if (this.isOldBpmnEdge(diagElt)) {\r\n            for (let i = 2; i < diagElt.Points.length; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X + (state.x - state.paintBounds.x);\r\n                const y = diagElt.BpmnLabel.Bounds.Y + (state.y - state.paintBounds.y);\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        } else {\r\n            for (let i = 1; i < diagElt.Points.length - 1; i++) {\r\n                const pt = diagElt.Points[i];\r\n                cell.geometry.points.push(new mxPoint(pt.X, pt.Y));\r\n            }\r\n\r\n            // 此行代码执行后可获取mxCellState\r\n            this.moveCells([cell], undefined, undefined, undefined, this.getDefaultParent());\r\n\r\n            //按坐标插入label\r\n            const state = this.view.getState(cell);\r\n            const scale = this.view.getScale();\r\n            const translate = this.view.getTranslate();\r\n            if (diagElt.BpmnLabel && state) {\r\n                if (diagElt.BpmnLabel.Bounds.X === 0 && diagElt.BpmnLabel.Bounds.Y === 0) {\r\n                    return;\r\n                }\r\n                const x = diagElt.BpmnLabel.Bounds.X * scale + translate.x;\r\n                const y = diagElt.BpmnLabel.Bounds.Y * scale + translate.y;\r\n\r\n                const edgeHandler: MxGraphNS.mxEdgeHandler = this.createEdgeHandler(state, undefined);\r\n                edgeHandler.moveLabel(state, x, y);\r\n                edgeHandler.destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 构建FlowElement字典，{ [flowEltId: string]: FlowElement }\r\n     */\r\n    buildFlowDict(bpmnModel: BpmnModel) {\r\n        let flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n\r\n        return flowDict;\r\n    }\r\n\r\n    /**\r\n     * 构建DiagramElement字典，{ [flowEltId: string]: DiagramElement }\r\n     */\r\n    buildFlowDiagDict(bpmnModel: BpmnModel) {\r\n        const nodeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n        const edgeDict: { [BpmnElementId: string]: DiagramElement; } = {};\r\n\r\n        const diagramElts: (DiagramElement & { BpmnElementId: string; })[] = bpmnModel.DefaultDiagram.BpmnPlane.GetDiagramElements() as any;\r\n\r\n        diagramElts && diagramElts.forEach(elt => {\r\n            if (elt instanceof Node) {\r\n                nodeDict[elt.BpmnElementId] = elt;\r\n            } else if (elt instanceof Edge) {\r\n                edgeDict[elt.BpmnElementId] = elt;\r\n            }\r\n        });\r\n\r\n        return {\r\n            nodeDict,\r\n            edgeDict,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否为旧版本BPMNEdge\r\n     *\r\n     * 旧版本连线Points数组中[0]和[1]分别表示起点和终点，因取值错误，[0]和[1]坐标均为(0,0)，以此为依据判断是否为旧版本的连线\r\n     * 新版本从起点到终点按顺序记录每一个点坐标\r\n     * @param bpmnEdge\r\n     * @returns\r\n     */\r\n    isOldBpmnEdge(bpmnEdge: BPMNEdge) {\r\n        if (bpmnEdge.Points.length >= 2) {\r\n            const pt1 = bpmnEdge.Points[0];\r\n            const pt2 = bpmnEdge.Points[1];\r\n            if (pt1.X == 0 && pt1.Y == 0 && pt2.X == 0 && pt2.Y == 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取节点样式\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getVertexStyle(flowElt: FlowElement, diagElt: BPMNShape, additional: boolean) {\r\n        const activityInstanceSlims = this.actList;\r\n\r\n        let stateShapeStyle: StateShapeStyle = null;\r\n        // 特殊处理,业务活动要单独赋成人工操作类型的样式\r\n        // if (flowElt.ClrTypeID === UserActivity.Clr_Type_ID) {\r\n        //   stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[flowElt.ClrTypeID];\r\n        // } else if (flowElt.ClrTypeID === OperationActivity.Clr_Type_ID) {\r\n        //   stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[OperationActivity.Clr_Type_ID];\r\n        // }\r\n        if (flowElt instanceof UserActivity && flowElt.BizActivityID !== '') {\r\n            stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[OperationActivity.Clr_Type_ID];\r\n        } else {\r\n            stateShapeStyle = this.cellStyleConfig.shapeStyleDic && this.cellStyleConfig.shapeStyleDic[flowElt.ClrTypeID];\r\n        }\r\n        if (stateShapeStyle == null) {\r\n            return this.getVertexStyleOld(flowElt, additional);\r\n        }\r\n        let img: string = stateShapeStyle[FlowNodeState.Default] && stateShapeStyle[FlowNodeState.Default].image;\r\n        if (!additional) {\r\n            const acts = activityInstanceSlims.filter(item => item.activityDefinitionId === flowElt.Id);\r\n            if (acts && acts.length > 0) {\r\n                if (acts.filter(act => act.state === 'RUNNING').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Running]) {\r\n                        img = stateShapeStyle[FlowNodeState.Running].image;\r\n                    }\r\n                } else if (acts.filter(act => act.state === 'COMPLETED').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Completed]) {\r\n                        img = stateShapeStyle[FlowNodeState.Completed].image;\r\n                    }\r\n                } else if (acts.filter(act => act.state === 'TERMINATED').length > 0) {\r\n                    if (stateShapeStyle[FlowNodeState.Terminated]) {\r\n                        img = stateShapeStyle[FlowNodeState.Terminated].image;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return img == null ? null : 'image=' + this.rootPath + img;\r\n    }\r\n\r\n    /**\r\n     * 旧版diagramElement未存储样式信息\r\n     * @param flowElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getVertexStyleOld(flowElt: FlowElement, additional: boolean) {\r\n        let style: string;\r\n        switch (flowElt.ClrTypeID) {\r\n            //结束事件\r\n            case \"bpmn.EndEvent\":\r\n                style = 'end';\r\n                break;\r\n            //流程开始活动节点\r\n            case StartActivity.Clr_Type_ID:\r\n                style = 'start';\r\n                break;\r\n            // 业务活动节点\r\n            case UserActivity.Clr_Type_ID:\r\n                if ((flowElt as UserActivity).BizActivityID) {\r\n                    style = 'bizActivity';\r\n                } else {\r\n                    style = 'approval';\r\n                }\r\n                break;\r\n            // 排他网关\r\n            case 'bpmn.ExclusiveGateway':\r\n                style = 'ExclusiveGateway';\r\n                break;\r\n            //并行网关\r\n            case 'bpmn.ParallelGateway':\r\n                style = 'ParallelGateway';\r\n                break;\r\n            case CallActivitySubProcess.Clr_Type_ID:\r\n                style = 'sub';\r\n                break;\r\n            case AutoActivity.Clr_Type_ID:\r\n                style = 'auto';\r\n                break;\r\n            case IntermediateCatchEventImpl.Clr_Type_ID:\r\n                style = 'catchEvent';\r\n                break;\r\n            case OperationActivity.Clr_Type_ID:\r\n                style = 'bizActivity';\r\n                break;\r\n            case MessageActivity.Clr_Type_ID:\r\n                style = 'message';\r\n                break;\r\n            case NotifyActivity.Clr_Type_ID:\r\n                style = 'notify';\r\n                break;\r\n            case AifCreationBillActivity.Clr_Type_ID:\r\n                style = 'aifCreationActivity';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return 'image=' + this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/' + style + this.getChartState(flowElt, additional) + ';';\r\n    }\r\n\r\n    getChartState(flowElt: FlowElement, additional: boolean) {\r\n        if (!additional) {\r\n            const acts = this.actList.filter(item => item.activityDefinitionId === flowElt.Id);\r\n            if (acts && acts.length > 0) {\r\n                if (acts.filter(act => act.state === 'RUNNING').length > 0) {\r\n                    return '_light.gif';\r\n                } else if (acts.filter(act => act.state === 'COMPLETED').length > 0\r\n                    || acts.filter(act => act.state === 'TERMINATED').length > 0\r\n                ) {\r\n                    return '_gray.png';\r\n                } else {\r\n                    return '.png';\r\n                }\r\n            }\r\n        }\r\n        return '.png';\r\n    }\r\n\r\n    /**\r\n     * 获取连线样式\r\n     * @param flowElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    getEdgeStyle(flowElt: SequenceFlow, diagElt: BPMNEdge, parameters: Map<string, boolean>) {\r\n        if (parameters.get('jump')) {\r\n            let style = '';\r\n            const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic['bpmn.SequenceFlow'];\r\n            if (stateEdgeStyle['jump']) {\r\n                Object.keys(stateEdgeStyle['jump']).forEach((key) => {\r\n                    style += (`${key}=${stateEdgeStyle['jump'][key]};`);\r\n                });\r\n                return style;\r\n            }\r\n            return null;\r\n        } else {\r\n            const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic[flowElt.ClrTypeID];\r\n            if (stateEdgeStyle == null) {\r\n                return this.getEdgeStyleOld(flowElt, parameters.get('additional'), parameters.get('cut'));\r\n            }\r\n            const transitionInstanceSlims = this.transInsList;\r\n            let style = '';\r\n            if (parameters.get('cut')) {\r\n                if (stateEdgeStyle[SequenceFlowState.Cut]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Cut]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Cut][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (parameters.get('additional')) {\r\n                if (stateEdgeStyle[SequenceFlowState.Add]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Add]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Add][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            const transIns = transitionInstanceSlims.filter(item => item.sourceActivityDefinitionId === flowElt.SourceRef && item.destinationActivityDefinitionId === flowElt.TargetRef);\r\n            if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n                if (stateEdgeStyle[SequenceFlowState.Completed]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Completed]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Completed][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (this.mode === 'simulation') {\r\n                if (stateEdgeStyle[SequenceFlowState.Simulation]) {\r\n                    Object.keys(stateEdgeStyle[SequenceFlowState.Simulation]).forEach((key) => {\r\n                        style += (`${key}=${stateEdgeStyle[SequenceFlowState.Simulation][key]};`);\r\n                    });\r\n                    return style;\r\n                }\r\n            }\r\n            if (stateEdgeStyle[SequenceFlowState.Default]) {\r\n                Object.keys(stateEdgeStyle[SequenceFlowState.Default]).forEach((key) => {\r\n                    style += (`${key}=${stateEdgeStyle[SequenceFlowState.Default][key]};`);\r\n                });\r\n            }\r\n            return style;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取连线颜色\r\n     * @param flowElt\r\n     * @param diagElt\r\n     * @param additional\r\n     * @param cut\r\n     * @returns\r\n     */\r\n    getStrokeColor(flowElt: SequenceFlow, diagElt: BPMNEdge, additional: boolean, cut: boolean) {\r\n        const transitionInstanceSlims = this.transInsList;\r\n\r\n        const stateEdgeStyle = this.cellStyleConfig.edgeStyleDic && this.cellStyleConfig.edgeStyleDic[flowElt.ClrTypeID];\r\n\r\n\r\n        if (cut) {\r\n            if (stateEdgeStyle[SequenceFlowState.Cut]) {\r\n                return stateEdgeStyle[SequenceFlowState.Cut].strokeColor;\r\n            }\r\n        }\r\n        if (additional) {\r\n            if (stateEdgeStyle[SequenceFlowState.Add]) {\r\n                return stateEdgeStyle[SequenceFlowState.Add].strokeColor;\r\n            }\r\n        }\r\n        const transIns = transitionInstanceSlims.filter(item => item.sourceActivityDefinitionId === flowElt.SourceRef && item.destinationActivityDefinitionId === flowElt.TargetRef);\r\n        if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n            if (stateEdgeStyle[SequenceFlowState.Completed]) {\r\n                return stateEdgeStyle[SequenceFlowState.Completed].strokeColor;\r\n            }\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            if (stateEdgeStyle[SequenceFlowState.Simulation]) {\r\n                return stateEdgeStyle[SequenceFlowState.Simulation].strokeColor;\r\n            }\r\n        }\r\n        return stateEdgeStyle[SequenceFlowState.Default].strokeColor;\r\n    }\r\n\r\n    /**\r\n     * 旧版diagramElement未存储样式信息\r\n     * @param flowElt\r\n     * @param additional\r\n     * @returns\r\n     */\r\n    getEdgeStyleOld(seq: SequenceFlow, additional: boolean, cut: boolean) {\r\n        if (cut) {\r\n            return 'strokeColor=#FF4040'\r\n        }\r\n        if (additional) {\r\n            return 'strokeColor=#59A1FF';\r\n        }\r\n        const transIns = this.transInsList.filter(item => item.sourceActivityDefinitionId === seq.SourceRef && item.destinationActivityDefinitionId === seq.TargetRef);\r\n        if (transIns && transIns.filter(t => t.state === 'COMPLETED').length > 0) {\r\n            return 'strokeColor=#595959;strokeWidth=2;';\r\n        }\r\n        if (this.mode === 'simulation') {\r\n            return 'strokeColor=#f59c24;dashed=1;';\r\n        } else {\r\n            return 'strokeColor=#59A1FF;';\r\n        }\r\n    }\r\n\r\n    drawNextFlowChart(\r\n        actiDefId: string,\r\n        nodeDict: { [key: string]: DiagramElement; },\r\n        edgeDict: { [BpmnElementId: string]: DiagramElement; },\r\n    ) {\r\n        const { nextFlowNodeDict, nextSeqFlowDict } = this.findDrawFlowElementsByActDefId(actiDefId, this.bpmnModel);\r\n        const actDef = this.bpmnModel.DefaultProcess.GetFlowElement(actiDefId) as FlowNode;\r\n        const outgoings = actDef.Outgoings;\r\n\r\n        // 先插入节点\r\n        Object.keys(nextFlowNodeDict).forEach(id => {\r\n            const flowElt = nextFlowNodeDict[id];\r\n            const diagElt = nodeDict[flowElt.Id] as BPMNShape;\r\n            const cell = this.getCellByFlowElementId(flowElt.Id);\r\n            if (!cell) {\r\n                this.drawNodeCell(flowElt, diagElt, true);\r\n            }\r\n        });\r\n\r\n        // 再插入边\r\n        Object.keys(nextSeqFlowDict).forEach(id => {\r\n            const flowElt = nextSeqFlowDict[id];\r\n            const diagElt = edgeDict[flowElt.Id] as BPMNEdge;\r\n            const cell = this.getCellByFlowElementId(flowElt.Id);\r\n            if (!cell) {\r\n                if (outgoings.some(o => o === flowElt.Id)) {\r\n                    this.drawEdgeCell(flowElt, diagElt, true, true);\r\n                } else {\r\n                    this.drawEdgeCell(flowElt, diagElt, true, false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据flowElementId获取cell\r\n     */\r\n    getCellByFlowElementId(flowEltId: string, parent?: MxGraphNS.mxCell): Cell {\r\n        parent = parent ? parent : this.getDefaultParent();\r\n        const cells = this.getChildCells(parent);\r\n        const cell = cells.find(it => {\r\n            if (it instanceof Cell) {\r\n                return it.flowElement && it.flowElement.Id == flowEltId;\r\n            } else {\r\n                return false;\r\n            }\r\n        }) as Cell;\r\n        return cell;\r\n    }\r\n\r\n    findFirstStartActivityInstance(activities: ActivityInstanceSlim[]): ActivityInstanceSlim {\r\n        for (const act of activities) {\r\n            if (!act.precursorActivityDefinitionId) {\r\n                return act;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findNoIncomingNodes(nodeCells: Cell[]) {\r\n        const noIncomingNodes = new Array();\r\n        for (const node of nodeCells) {\r\n            if (node.flowElement.ClrTypeID === 'wf.StartActivity') {\r\n                continue;\r\n            }\r\n            if (!node.edges || node.edges.length === 0) {\r\n                noIncomingNodes.push(node);\r\n                continue;\r\n            }\r\n            if (!node.edges.some(edge => (edge.target as Cell).flowElement.Id === node.flowElement.Id)) {\r\n                noIncomingNodes.push(node);\r\n            }\r\n        }\r\n        return noIncomingNodes;\r\n    }\r\n\r\n    findEndActiInstList(firstAct: ActivityInstanceSlim, activities: ActivityInstanceSlim[], transInsList: TransitionInstanceSlim[]): ActivityInstanceSlim[] {\r\n        const endActiInstList: ActivityInstanceSlim[] = [];\r\n        this.getNextTransitions(endActiInstList, firstAct.activityInstanceId, activities, transInsList);\r\n        return endActiInstList;\r\n    }\r\n\r\n    getNextTransitions(endActiInstList: ActivityInstanceSlim[], sourceActInstId: string, activities: ActivityInstanceSlim[], transInsList: TransitionInstanceSlim[]) {\r\n        const nextTransitions = this.findTranInstsBySourceActInstId(sourceActInstId, transInsList);\r\n        if (nextTransitions && nextTransitions.length > 0) {\r\n            for (const t of nextTransitions) {\r\n                if (t.destinationActivityDefinitionId) {\r\n                    this.getNextTransitions(endActiInstList, t.destinationActivityInstanceId, activities, transInsList);\r\n                }\r\n            }\r\n        } else {\r\n            const actInst: ActivityInstanceSlim = this.findActInstByActInstId(sourceActInstId, activities);\r\n            if (actInst) {\r\n                if (!endActiInstList.some(a => a.activityInstanceId === actInst.activityInstanceId)) {\r\n                    endActiInstList.push(actInst);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findTranInstsBySourceActInstId(sourceActInstId: string, transInsList: TransitionInstanceSlim[]): TransitionInstanceSlim[] {\r\n        return transInsList.filter(t => t.sourceActivityInstanceId === sourceActInstId);\r\n    }\r\n\r\n    findActInstByActInstId(actInstId: string, activities: ActivityInstanceSlim[]) {\r\n        return activities.find(a => a.activityInstanceId === actInstId);\r\n    }\r\n\r\n    findDrawFlowElementsByActDefId(actiDefId: string, bpmnModel: BpmnModel) {\r\n        const nextFlowNodeDict: { [id: string]: FlowNode } = {};\r\n        const nextSeqFlowDict: { [id: string]: SequenceFlow } = {};\r\n        this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, actiDefId, bpmnModel);\r\n        return {\r\n            nextFlowNodeDict,\r\n            nextSeqFlowDict,\r\n        };\r\n    }\r\n\r\n    findNextFlowElementsByFlowElementId(nextFlowNodeDict: { [id: string]: FlowNode }, nextSeqFlowDict: { [id: string]: SequenceFlow }, flowElementId: string, bpmnModel: BpmnModel) {\r\n        const flowElt = bpmnModel.DefaultProcess.GetFlowElement(flowElementId);\r\n        if (flowElt && nextFlowNodeDict[flowElementId] == null) {\r\n            if (flowElt instanceof SequenceFlow) {\r\n                nextSeqFlowDict[flowElt.Id] = flowElt;\r\n                this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, flowElt.TargetRef, bpmnModel);\r\n            } else if (flowElt instanceof FlowNode) {\r\n                nextFlowNodeDict[flowElt.Id] = flowElt;\r\n                if ((flowElt instanceof EndEvent) == false) {\r\n                    flowElt.Outgoings && flowElt.Outgoings.forEach(outgoing => {\r\n                        this.findNextFlowElementsByFlowElementId(nextFlowNodeDict, nextSeqFlowDict, outgoing, bpmnModel);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { mxEvent, MxGraphNS, mxConstants, mxGraphSelectionModel, mxEventSource } from \"@edp-pmf/mxgraph-ts\";\r\nimport { BpmnModel } from \"@edp-pmf/bpmn-model\";\r\nimport { ProcessInstance } from \"./entity/ProcessInstance\";\r\nimport { ActivityInstanceSlim } from \"./entity/ActivityInstanceSlim\";\r\nimport { TransitionInstanceSlim } from \"./entity/TransitionInstanceSlim\";\r\nimport { UIFlowchartComponent } from \"../task-flowchart/task-flowchart.component\";\r\nimport { FlowGraph } from \"./FlowGraph\";\r\nimport { CellStyleConfig } from \"../entity/cell-style/CellStyleConfig\";\r\n\r\n\r\nexport class FlowChart extends mxEventSource {\r\n    ngComp: UIFlowchartComponent;\r\n    container: HTMLDivElement;\r\n    graph: FlowGraph;\r\n    diagramContainer: HTMLDivElement;\r\n    button: HTMLButtonElement;\r\n    resizeHandler: () => void;\r\n\r\n    mode: 'complete' | 'simulation' = 'complete';\r\n    processInstance: ProcessInstance;\r\n    bpmnModel: BpmnModel;\r\n    actList: ActivityInstanceSlim[] = [];\r\n    transInsList: TransitionInstanceSlim[] = [];\r\n    rootPath: string = '';//基路径\r\n    /**\r\n     * 当前语言\r\n     */\r\n    langCode = (window as any).gspframeworkService && (window as any).gspframeworkService.rtf.language.getLanguageCode() || localStorage.getItem('languageCode') || 'zh-CHS';\r\n\r\n    constructor(container: any, config: CellStyleConfig) {\r\n        super();\r\n        try {\r\n            this.rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n        } catch (error) {\r\n        }\r\n        this.container = container;\r\n        this.createDiv();\r\n        this.graph = this.createGraph(config);\r\n        window.setTimeout(() => {\r\n            this.resetScrollbars();\r\n        }, 0);\r\n        this.refresh();\r\n        this.resizeHandler = () => {\r\n            window.setTimeout(() => {\r\n                if (this.graph != null) {\r\n                    this.refresh();\r\n                }\r\n            }, 0);\r\n        };\r\n        mxEvent.addListener(window, 'resize', this.resizeHandler);\r\n\r\n        this.graph.getSelectionModel().addListener(mxEvent.CHANGE, (sender: any, evt: MxGraphNS.mxEventObject) => {\r\n            this.cellSelect(sender, evt);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置当前语言\r\n     * @param lang\r\n     */\r\n    setLanguage(lang: string) {\r\n        this.langCode = lang;\r\n        if (this.graph) {\r\n            this.graph.langCode = lang;\r\n        }\r\n    }\r\n\r\n    switchMode({ mode, actiInstList, transInsList }) {\r\n        this.mode = mode;\r\n        this.actList = actiInstList;\r\n        this.transInsList = transInsList;\r\n\r\n        this.graph.actList = this.actList;\r\n        this.graph.transInsList = this.transInsList;\r\n        this.graph.mode = this.mode;\r\n        this.graph.reloadBpmnModel();\r\n    }\r\n\r\n    load(data: any) {\r\n        if (data) {\r\n            this.processInstance = data.processInstance;\r\n            this.actList = data.actiInstList;\r\n            this.transInsList = data.transInsList;\r\n            this.mode = data.mode;\r\n\r\n            this.graph.actList = this.actList;\r\n            this.graph.transInsList = this.transInsList;\r\n            this.graph.mode = this.mode;\r\n            this.graph.loadBpmnModel(data.content);\r\n            this.resetScrollbars();\r\n\r\n        }\r\n    }\r\n\r\n    createDiv() {\r\n        this.diagramContainer = document.createElement('div');\r\n        this.diagramContainer.className = 'flowChartContainer';\r\n\r\n        this.container.appendChild(this.diagramContainer);\r\n        setTimeout(() => {\r\n            // this.diagramContainer.style.overflow = 'hidden';\r\n\r\n            mxEvent.addListener(this.diagramContainer, 'mouseover', () => {\r\n                // this.diagramContainer.style.overflow = 'auto';\r\n                this.diagramContainer.classList.add('active');\r\n            });\r\n            mxEvent.addListener(this.diagramContainer, 'mouseleave', () => {\r\n                // this.diagramContainer.style.overflow = 'hidden';\r\n                this.diagramContainer.classList.remove('active');\r\n            });\r\n        }, 0);\r\n\r\n        const buttonIn = document.createElement('a');\r\n        buttonIn.setAttribute('href', 'javascript:void(0);');\r\n        let buttonInImg = document.createElement('img');\r\n        buttonIn.style.marginRight = '10px';\r\n        buttonInImg.src = this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/zoomIn.svg';\r\n        buttonInImg.style.display = \"inline-block\";\r\n        buttonInImg.style.verticalAlign = \"middle\";\r\n        buttonIn.appendChild(buttonInImg);\r\n        mxEvent.addListener(buttonIn, 'click', (evt: PointerEvent) => {\r\n            this.graph.zoomIn();\r\n        });\r\n\r\n        const buttonOut = document.createElement('a');\r\n        buttonOut.setAttribute('href', 'javascript:void(0);');\r\n        let buttonOutImg = document.createElement('img');\r\n        buttonOutImg.src = this.rootPath + '/platform/runtime/common/web/@gsp-wf/wf-process-editor/images/zoomOut.svg';\r\n        buttonOutImg.style.display = \"inline-block\";\r\n        buttonOutImg.style.verticalAlign = \"middle\";\r\n        buttonOut.appendChild(buttonOutImg);\r\n        mxEvent.addListener(buttonOut, 'click', (evt: PointerEvent) => {\r\n            this.graph.zoomOut();\r\n        });\r\n\r\n        const zoomBar = document.createElement('div');\r\n        zoomBar.className = 'zoomBar';\r\n        zoomBar.style.position = 'absolute';\r\n        zoomBar.style.top = '10px';\r\n        zoomBar.style.right = '20px';\r\n\r\n        zoomBar.appendChild(buttonIn);\r\n        zoomBar.appendChild(buttonOut);\r\n\r\n        // zoomBar.appendChild(zoom);\r\n        this.container.appendChild(zoomBar);\r\n\r\n    }\r\n\r\n    createGraph(config: CellStyleConfig) {\r\n        mxConstants.VERTEX_SELECTION_STROKEWIDTH = 1;\r\n        mxConstants.VERTEX_SELECTION_COLOR = '#0000CD';\r\n        mxConstants.VERTEX_SELECTION_DASHED = true;\r\n\r\n        const graph = new FlowGraph(this.diagramContainer, config);\r\n        // 创建无限大画布\r\n        graph.createInfiniteCanvas();\r\n        // 创建后需要调用一次才生效\r\n        graph.sizeDidChange();\r\n\r\n        graph.popupMenuHandler.autoExpand = true;\r\n        graph.popupMenuHandler.factoryMethod = (menu, cell, evt) => {\r\n            if (cell != null\r\n                && cell.getId().indexOf('UserActivity') > -1\r\n                && this.actList.findIndex(a => a.activityDefinitionId === cell.getId()) > -1\r\n                && this.processInstance) {\r\n                const actInstId = this.actList.find(a => a.activityDefinitionId === cell.getId()).activityInstanceId;\r\n                menu.addItem('查看单据', null, () => {\r\n                    this.viewForm(this.processInstance.id, actInstId, this.processInstance.bizInstId);\r\n                });\r\n            }\r\n            if (cell != null\r\n                && cell.getId().indexOf('AifCreationBillActivity') > -1\r\n                && this.actList.findIndex(a => a.activityDefinitionId === cell.getId()) > -1\r\n                && this.processInstance) {\r\n                // 筛选状态是Running的自动生单活动实例\r\n                const actInsts = this.actList.filter(a => a.activityDefinitionId === cell.getId() && a.state == \"RUNNING\");\r\n                if (actInsts.length == 1) {\r\n                    const actInst = actInsts[0];\r\n                    menu.addItem('重试', null, () => {\r\n                        this.retryAifCreation(this.processInstance.id, actInst.activityInstanceId, this.processInstance.bizInstId);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        return graph;\r\n    }\r\n\r\n    cellSelect(sender, evt: MxGraphNS.mxEventObject) {\r\n        if (!(sender instanceof mxGraphSelectionModel)) {\r\n            return;\r\n        }\r\n        const selectedCell = sender.cells[0];\r\n        if (selectedCell) {\r\n            if (selectedCell.vertex) {\r\n                const selectId = selectedCell.getId();\r\n                // 选中子流程节点时，弹出子流程图\r\n                if (selectId && selectId.indexOf('CallActivitySubProcess') > -1\r\n                    && this.actList.findIndex(a => a.state !== 'FORECAST'\r\n                        && a.activityDefinitionId === selectId) > -1\r\n                ) {\r\n                    const actInsts = this.actList.filter(a => a.state !== 'FORECAST' && a.activityDefinitionId === selectId);\r\n                    const activeInst = actInsts.find(a => a.state === 'RUNNING');\r\n                    if (activeInst) {\r\n                        this.viewChildProcessChart(activeInst);\r\n                    } else {\r\n                        this.viewChildProcessChart(actInsts[0]);\r\n                    }\r\n                } else {\r\n                    this.ngComp.viewLogs({ type: 'activity', actiDefId: selectedCell.id });\r\n                }\r\n            } else {\r\n                this.ngComp.viewLogs({ type: 'sequence' });\r\n            }\r\n        } else {\r\n            this.ngComp.viewLogs({ type: 'process' });\r\n        }\r\n    }\r\n\r\n    viewChildProcessChart(actInst: ActivityInstanceSlim) {\r\n        this.ngComp.viewChild(actInst, this.processInstance);\r\n    }\r\n\r\n    viewForm(procInstId: string, actInstId: string, bizInstId: string) {\r\n        this.ngComp.viewForm(procInstId, actInstId, bizInstId);\r\n    }\r\n\r\n    retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n        this.ngComp.retryAifCreation(procInstId, actInstId, bizInstId);\r\n    }\r\n\r\n    resetScrollbars() {\r\n        let bounds = this.graph.getGraphBounds();\r\n        let width = Math.max(bounds.width * this.graph.view.scale, 0); // this.getScrollTileSize().width * this.graph.view.scale);\r\n        let height = Math.max(bounds.height * this.graph.view.scale, 0); // this.getScrollTileSize().height * this.graph.view.scale);\r\n        this.graph.container.scrollTop = Math.floor(Math.max(0, bounds.y - Math.max(20, (this.graph.container.clientHeight - height) / 2)));\r\n        this.graph.container.scrollLeft = Math.floor(Math.max(0, bounds.x - Math.max(0, (this.graph.container.clientWidth - width) / 2)));\r\n    }\r\n    refresh() {\r\n        this.resetScrollbars();\r\n    }\r\n\r\n    reloadBpmnModel() {\r\n        this.graph.removeCells(this.graph.getChildCells(this.graph.getDefaultParent()));\r\n    }\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ModalOptions, BsModalService } from '@farris/ui-modal';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { translate } from './services/i18n/index';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { of } from 'rxjs';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ForecastProcessPayload } from './entity/forecast-process-payload';\r\nimport { ProcessInstance } from './flow-chart';\r\n\r\n\r\n@Injectable()\r\nexport class WFFlowchartService {\r\n\r\n    private flowchartService: UiFlowchartService;\r\n    private frameworkService: FrameworkService;\r\n\r\n    constructor(\r\n        private msgService: MessagerService,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private modalService: BsModalService,\r\n    ) {\r\n        this.flowchartService = this.injector.get(UiFlowchartService);\r\n        this.frameworkService = this.injector.get(FrameworkService);\r\n    }\r\n\r\n    /**\r\n     * 查看流程图，支持预览\r\n     * @param payload \r\n     * @returns \r\n     */\r\n    viewProcess(payload: ForecastProcessPayload) {\r\n        if (!payload || !payload.dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noDataId'));\r\n            return;\r\n        }\r\n        if (!payload || !payload.bizDefKey) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.noBizDefKey'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', payload.dataId);\r\n        parameters.set('bizDefKey', payload.bizDefKey);\r\n        if (payload.startMode) {\r\n            parameters.set('startMode', payload.startMode);\r\n        }\r\n        if (payload.startUserId) {\r\n            parameters.set('startUserId', payload.startUserId);\r\n        }\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: payload.dataId,\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 根据流程实例id查看流程（tab页中打开）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewFlowChart(procInstId: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('processId', procInstId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 根据单据内码查看流程\r\n     * @param dataId 单据内码\r\n     * @returns \r\n     */\r\n    viewFlowChartByDataId(dataId: string) {\r\n        if (!dataId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.dataIdIsNull'));\r\n            return;\r\n        }\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('dataId', dataId);\r\n        parameters.set('withTitle', true);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            queryStringParams: parameters\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 查看流程（弹框中打开）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewFlowChartByDialog(procInstId: string, mode?: string) {\r\n        if (!procInstId) {\r\n            this.msgService.warning(this.getI18nValue('static.flowchart.processNotFound'));\r\n            return;\r\n        }\r\n        this.flowchartService.getProcessInstanceById(procInstId).subscribe(re => {\r\n            if (re) {\r\n                this.viewMutiInstanceFlowChartByDialog([re]);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 查看流程（弹框中打开，兼容多实例子流程）\r\n     * @param procInstId 流程实例ID\r\n     */\r\n    viewMutiInstanceFlowChartByDialog(procInstList: ProcessInstance[], mode?: string) {\r\n        let func;\r\n        if (UIFlowchartComponent.func) {\r\n            func = UIFlowchartComponent.func;\r\n        }\r\n        const options: ModalOptions = {\r\n            title: this.getI18nValue('static.flowchart.title'),\r\n            width: 1200,\r\n            height: 530,\r\n            showButtons: false,\r\n            beforeClose: (modalRef: any) => {\r\n                if (UIFlowchartComponent.func) {\r\n                    window.removeEventListener('message', UIFlowchartComponent.func, false);\r\n                }\r\n                if (func) {\r\n                    window.addEventListener('message', func, false);\r\n                    UIFlowchartComponent.func = func;\r\n                }\r\n                return of(true);\r\n            }\r\n        };\r\n        const compFactory = this.resolver.resolveComponentFactory(UIFlowchartComponent);\r\n        const inj = Injector.create({\r\n            providers: [{\r\n                provide: UiFlowchartService, useFactory: (httpSvc) => {\r\n                    return new UiFlowchartService(httpSvc);\r\n                },\r\n                deps: [\r\n                    HttpService\r\n                ]\r\n            }], parent: this.injector\r\n        });\r\n        const compRef = compFactory.create(inj);\r\n        if (procInstList && procInstList.length) {\r\n            if (procInstList.length == 1) {\r\n                options.showHeader = true;\r\n                options.title = procInstList[0].name + '-v' + procInstList[0].version + '.0';\r\n                compRef.instance.ProcInstId = procInstList[0].id;\r\n            } else {\r\n                options.showHeader = false;\r\n                compRef.instance.ProcInstList = procInstList;\r\n            }\r\n        }\r\n        if (mode) {\r\n            compRef.instance.mode = mode;\r\n        }\r\n        compRef.instance.fill();\r\n        const dialog = this.modalService.show(compRef, options);\r\n        compRef.instance.dialog = dialog;\r\n    }\r\n\r\n    /**\r\n     * 查看流程图。（如果作为共享的外部流程，则打开共享的查看流程）\r\n     * @param procInstId 流程实例id\r\n     * @param dataId 单据内码\r\n     */\r\n    viewFlowchartByProcInstIdAndDataId(procInstId: string, dataId: string) {\r\n        this.flowchartService.ifThirdTask(procInstId).subscribe(ifThirdTask => {\r\n            if (ifThirdTask === true) {//是第三方的任务\r\n                this.flowchartService.getFsParamsByBizId(dataId).subscribe(params => {//获取查看流程图所需参数\r\n                    if (params) {//有不往共享单据表推数据的情况，此时返回为空\r\n                        const param = {\r\n                            \"lcsl\": params[0],\r\n                            \"djnm\": params[1],\r\n                            \"djlx\": params[2],\r\n                            \"djbh\": params[3]\r\n                        }\r\n                        this.flowchartService.viewFsProcessNew(param).subscribe(re => {//旧接口报错，改调新接口\r\n                            if (re && re.value) {\r\n                                this.openViewProcessMenu(re.value);\r\n                            }\r\n                        }, error => {\r\n                            this.viewFlowChart(procInstId);\r\n                        })\r\n                    } else {\r\n                        this.viewFlowChart(procInstId);\r\n                    }\r\n                }, error => {\r\n                    this.viewFlowChart(procInstId);\r\n                })\r\n            } else {//WF的任务\r\n                this.viewFlowChart(procInstId);\r\n            }\r\n        }, error => {\r\n            this.viewFlowChart(procInstId);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 共享的任务，借用自己的查看流程菜单，iframe嵌入共享的查看流程URL\r\n     * @param entity 任务实体，区分tab页\r\n     * @param url 共享查看流程的URL\r\n     */\r\n    private openViewProcessMenu(url: string) {\r\n        const queryParams = new Map<string, any>();\r\n        queryParams.set(\"thirdTask\", true);\r\n        const entityParams = new Map<string, any>();\r\n        entityParams.set(\"thirdProcessUrl\", url);\r\n        const options: AppOptions = {\r\n            appType: 'menu',\r\n            funcId: 'WFViewFlowChart',\r\n            appId: '',\r\n            appEntrance: '',\r\n            tabId: new Date().getTime().toString(),\r\n            isNewTab: true,\r\n            entityParams: entityParams,\r\n            queryStringParams: queryParams\r\n        };\r\n        this.openMenu(options);\r\n    }\r\n\r\n    /**\r\n     * 获取i18n\r\n     */\r\n    private getI18nValue(name: string) {\r\n        if (!name) { return ''; }\r\n        var defaultLang = localStorage.getItem('languageCode');\r\n        var langData = defaultLang ? translate[defaultLang] : translate['zh-CHS'];\r\n        let resultVal = '';\r\n        if (name.indexOf('.') === -1) {\r\n            resultVal = langData[name];\r\n        } else {\r\n            resultVal = name.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, langData);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    /**\r\n     * 判断是否inSuite环境\r\n     */\r\n    private isInSuite(): boolean {\r\n        const frameWorkService = (window as any).gspframeworkService;\r\n        if (frameWorkService && frameWorkService.rtf) {\r\n            const extendMethod = frameWorkService.rtf.extendMethod;\r\n            if (extendMethod && extendMethod.getExtObj()) {\r\n                var extObj = extendMethod.getExtObj();\r\n                const mode = extObj.iGIX4inSuiteMode();\r\n                if (mode) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 打开菜单，区分是否inSuite环境，用不同方式打开菜单\r\n     * @param options 打开参数\r\n     * @param menuTitle 菜单名称\r\n     */\r\n    private openMenu(options: any) {\r\n        const menuTitle = this.getI18nValue('static.flowchart.title')\r\n        if (this.isInSuite()) {\r\n            options.menuTitle = menuTitle;\r\n            var extObj = (window as any).gspframeworkService.rtf.extendMethod.getExtObj();\r\n            extObj.iGIXMenuOpen(options);\r\n        } else {\r\n            this.frameworkService.openMenu$(options).subscribe(re => {\r\n\r\n            }, error => {\r\n                console.error(error);\r\n            })\r\n        }\r\n    }\r\n}\r\n","import {\r\n  Component, OnInit, ViewChild, ElementRef, Input, Output,\r\n  EventEmitter, HostBinding, ChangeDetectorRef, Optional, Injector, ViewContainerRef, ViewEncapsulation, LOCALE_ID, ReflectiveInjector, AfterViewChecked\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { AppOptions, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { LoadingService } from \"@farris/ui-loading\";\r\nimport { NotifyService } from '@farris/ui-notify';\r\n\r\nimport { FlowChart } from '../flow-chart/FlowChart';\r\nimport { UiFlowchartService } from '../services/ui-flowchart.service';\r\nimport { WFFlowchartService } from '../wf-flowchart.service';\r\nimport { CellStyleConfig } from '../entity/cell-style/CellStyleConfig';\r\nimport { ActivityInstanceSlim, ProcessInstance } from '../flow-chart/entity';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\n\r\n@Component({\r\n  selector: 'wf-flowchart',\r\n  templateUrl: './task-flowchart.component.html',\r\n  styleUrls: ['./task-flowchart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class UIFlowchartComponent implements OnInit, AfterViewChecked {\r\n\r\n  static func: any = null; // 消息监听处理方法\r\n  @HostBinding('class') cls = 'd-flex flex-fill h-100';\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n  @Output() modalHide = new EventEmitter<boolean>();\r\n  procInstId: string;//流程实例id\r\n  dataId: string;//表单id\r\n  actDefId: string;//节点定义id\r\n  ifForecast: string;//是否预测\r\n  type: any; //type = 'process'查看流程日志；type = 'activity'，查看节点日志\r\n  content: string; // bpmnModel\r\n  actInstList: any[]; // 活动实例List\r\n  transInsList: any[];  // 流转实例\r\n  processInstance: any;\r\n  fcHtml = window.document.location.origin + '/platform/runtime/wf/web/designer/flowchart.html?v=20221111';\r\n\r\n  @Input() theme = 'viewFlowChart';\r\n  @Input() processForecastPayload: any;\r\n  dialog: BsModalRef;\r\n\r\n  private _mode = 'complete';\r\n\r\n  @Input()\r\n  set mode(v: string) {\r\n    this._mode = v;\r\n    if (this._mode === 'simulation') {\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n    } else if (this._mode === 'complete') {\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n    }\r\n  }\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n\r\n  modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n  typeList = [\r\n    {\r\n      value: 'complete', text: this.service.getI18nValue('static.flowchart.complete')\r\n    },\r\n    {\r\n      value: 'simulation', text: this.service.getI18nValue('static.flowchart.simulation')\r\n    }\r\n  ];\r\n\r\n  private message: MessagerService;\r\n  private frameworkSvc: FrameworkService;\r\n\r\n  @Input()\r\n  set ProcInstId(procInstId: string) {\r\n    if (procInstId) {\r\n      this.procInstId = procInstId;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set DataId(dataId: string) {\r\n    if (dataId) {\r\n      this.dataId = dataId;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set ProcInstList(procInstList: ProcessInstance[]) {\r\n    if (procInstList && procInstList.length) {\r\n      this.procInstId = procInstList[0].id;\r\n      this.procInstList = procInstList;\r\n    }\r\n  }\r\n\r\n  @ViewChild(\"flowChartContainer\") flowChartContainerER: ElementRef<HTMLDivElement>;\r\n  @ViewChild(\"flowChartContainer\", { read: ViewContainerRef })\r\n  flowChartContainerVCR: ViewContainerRef;\r\n  flowChart: FlowChart;\r\n  localeId: string = \"zh-CHS\";\r\n  loading: LoadingService;\r\n  notify: NotifyService;\r\n  procInstList: ProcessInstance[] = [];//流程实例list，多实例子流程使用\r\n  curChildProcInst: ProcessInstance;//当前选中的流程\r\n\r\n  flowChartContainerClientSize: {\r\n    clientHeight?: number;\r\n    clientWidth?: number;\r\n  } = {};\r\n\r\n  sequenceColorList = [//颜色分支线说明\r\n    {\r\n      colorClass: 'color-gey',\r\n      label: 'completed'\r\n    }, {\r\n      colorClass: 'color-yellow',\r\n      label: 'calculate'\r\n    }, {\r\n      colorClass: 'color-blue',\r\n      label: 'default'\r\n    }, {\r\n      colorClass: 'color-red',\r\n      label: 'suspend'\r\n    }\r\n  ]\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private service: UiFlowchartService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private injector: Injector,\r\n    @Optional() private chartService: WFFlowchartService,\r\n  ) {\r\n    this.message = this.injector.get(MessagerService);\r\n    this.frameworkSvc = this.injector.get(FrameworkService);\r\n    this.localeId = this.injector.get(LOCALE_ID, null) || this.localeId;\r\n    this.loading = this.injector.get(LoadingService, null);\r\n    if (this.loading == null) {\r\n      const inject = ReflectiveInjector.resolveAndCreate([\r\n        LoadingService\r\n      ], this.injector);\r\n      this.loading = inject.get(LoadingService, null);\r\n    }\r\n    this.notify = this.injector.get(NotifyService, null);\r\n    if (this.notify == null) {\r\n      const inject = ReflectiveInjector.resolveAndCreate([\r\n        NotifyService\r\n      ], this.injector);\r\n      this.notify = inject.get(NotifyService, null);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.getFlowChartStyleConfig().subscribe((config: CellStyleConfig) => {\r\n      setTimeout(() => {\r\n        this.createFlowChart(config);\r\n        this.viewFlowChart();\r\n      }, 300);\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // 监听画布容器高度和宽度属性变化，发生变化时刷新画布\r\n    if (this.flowChartContainerER == null || this.flowChartContainerER.nativeElement == null || this.flowChart == null) {\r\n      return;\r\n    }\r\n    if (this.flowChartContainerClientSize.clientHeight != this.flowChartContainerER.nativeElement.clientHeight\r\n      || this.flowChartContainerClientSize.clientWidth != this.flowChartContainerER.nativeElement.clientWidth\r\n    ) {\r\n      this.flowChartContainerClientSize = {\r\n        clientHeight: this.flowChartContainerER.nativeElement.clientHeight,\r\n        clientWidth: this.flowChartContainerER.nativeElement.clientWidth,\r\n      };\r\n\r\n      this.flowChart.refresh();\r\n      this.flowChart.graph.sizeDidChange();\r\n    }\r\n  }\r\n\r\n  createFlowChart(config: CellStyleConfig) {\r\n    this.flowChart = new FlowChart(this.flowChartContainerER.nativeElement, config);\r\n    this.flowChart.ngComp = this;\r\n    this.flowChart.setLanguage(this.localeId);\r\n  }\r\n\r\n  viewFlowChart() {\r\n    if (this.theme === 'viewFlowChart') {\r\n      this.viewFlowChartByProcInstId();\r\n    } else {\r\n      this.processForecast();\r\n    }\r\n  }\r\n\r\n  tabChange(event: any) {\r\n    this.procInstId = event.nextId;\r\n    this.viewFlowChart();\r\n    this.flowChart.reloadBpmnModel();\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialog.close();\r\n  }\r\n\r\n  /**\r\n   * 查看子流程图\r\n   * @param actInst 活动实例 \r\n   * @param superProcess 父流程 \r\n   */\r\n  viewChild(actInst: ActivityInstanceSlim, superProcess: ProcessInstance) {\r\n    this.service.getMutiChildInstance(actInst, superProcess.id).subscribe((re: ProcessInstance[]) => {\r\n      if (this.chartService && re && re.length) {\r\n        if (re.length == 1) {//单个子流程\r\n          this.chartService.viewFlowChartByDialog(re[0].id, this.mode);\r\n        } else {//多实例子流程\r\n          this.chartService.viewMutiInstanceFlowChartByDialog(re, this.mode);\r\n        }\r\n      } else {\r\n        throw Error('请升级查看流程公共包实现联查子流程图功能');\r\n      }\r\n    });\r\n  }\r\n\r\n  modeSwitch() {\r\n    if (this.mode === 'complete') {\r\n      this.mode = 'simulation';\r\n      this.ifForecast = 'true';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.complete');\r\n      this.service.getForecastProcessByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.flowChart.switchMode({\r\n          mode: 'simulation',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    } else {\r\n      this.mode = 'complete';\r\n      this.ifForecast = 'false';\r\n      this.modeButton = this.service.getI18nValue('static.flowchart.simulation');\r\n      this.service.getCompleteProcessInfoByProcInstId(this.procInstId).subscribe(r => {\r\n        this.actInstList = r.activityInstanceSlims;\r\n        this.transInsList = r.transitionInstanceSlims;\r\n        this.flowChart.switchMode({\r\n          mode: 'complete',\r\n          actiInstList: r.activityInstanceSlims,\r\n          transInsList: r.transitionInstanceSlims\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  viewLogs(data: any) {\r\n    this.type = data.type;\r\n    this.actDefId = data.actiDefId;\r\n  }\r\n\r\n  viewFlowChartByProcInstId() {\r\n    this.content = '';\r\n    if (this.procInstId) {\r\n      if (this.mode === 'complete') {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getCompleteProcessInfoByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      } else {\r\n        forkJoin(\r\n          this.service.getProcInstanceById(this.procInstId),\r\n          this.service.getBpmnModelbyProcInstId(this.procInstId),\r\n          this.service.getForecastProcessByProcInstId(this.procInstId))\r\n          .subscribe((data: any[]) => {\r\n            this.processInstance = data[0];\r\n            this.content = JSON.stringify(data[1]);\r\n            this.actInstList = data[2].activityInstanceSlims;\r\n            this.transInsList = data[2].transitionInstanceSlims;\r\n            this.loadFlowChart();\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  processForecast() {\r\n    this.content = '';\r\n    this.mode = 'simulation';\r\n    if (this.processForecastPayload.processDefinitionId && this.processForecastPayload.dataId) {\r\n      forkJoin(\r\n        this.service.getBpmnModelbyProcDefId(this.processForecastPayload.processDefinitionId),\r\n        this.service.getForecastProcessByPayload(this.processForecastPayload))\r\n        .subscribe((data: any[]) => {\r\n          this.content = JSON.stringify(data[0]);\r\n          this.actInstList = data[1].activityInstanceSlims;\r\n          this.transInsList = data[1].transitionInstanceSlims;\r\n          this.loadFlowChart();\r\n        });\r\n    }\r\n  }\r\n\r\n  viewForm(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      this.service.getFormInfoByActInstId(procInstId, actInstId).subscribe((re: any) => {\r\n        const formInfo = re;\r\n        if (!formInfo || !formInfo.appId) {\r\n          if (this.message) {\r\n            this.message.info('找不到单据，请联系管理员查看原因！');\r\n          }\r\n          return;\r\n        }\r\n        const options: AppOptions = {\r\n          appType: 'menu',\r\n          funcId: formInfo.appId,\r\n          appId: '',\r\n          appEntrance: '',\r\n          tabId: bizInstId,\r\n          isNewTab: true\r\n        };\r\n        // 传工作流上下文参数\r\n        const parameters = new Map<string, any>();\r\n        parameters.set('procInstId', procInstId);\r\n        parameters.set('actInstId', actInstId);\r\n        formInfo.parameters.forEach((item: any) =>\r\n          parameters.set(item.code, item.value)\r\n        );\r\n        options.queryStringParams = parameters;\r\n        if (this.frameworkSvc) {\r\n          this.frameworkSvc.openMenu(options);\r\n        } else {\r\n          throw Error('框架服务不存在！无法联查！');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  retryAifCreation(procInstId: string, actInstId: string, bizInstId: string) {\r\n    if (procInstId) {\r\n      const l = this.loading.show();\r\n      this.service.retryAifCreation(procInstId, actInstId, bizInstId).subscribe(\r\n        (re: any) => {\r\n          l.close();\r\n          this.notify.success(\"重试成功\");\r\n          this.viewFlowChart();\r\n        },\r\n        (err) => {\r\n          l.close();\r\n          setTimeout(() => {\r\n            //todo 确定异常结构, 目前采用兼容取值方式\r\n            this.message.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  loadFlowChart() {\r\n    if (this.content) {\r\n      this.flowChart.load({\r\n        processInstance: this.processInstance,\r\n        content: this.content,\r\n        actiInstList: this.actInstList,\r\n        transInsList: this.transInsList,\r\n        mode: this.mode\r\n      });\r\n    }\r\n  }\r\n\r\n  fill() {\r\n    this.cls = 'd-flex flex-fill h-100 f-utils-absolute-all';\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { UiFlowchartService } from './ui-flowchart.service'\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private service: UiFlowchartService\r\n    ) { }\r\n\r\n    transform(name: any, defaultVal = ''): any {\r\n        const r = this.service.getI18nValue(name);\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { UIFlowchartComponent } from './task-flowchart/task-flowchart.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { UiFlowchartService } from './services/ui-flowchart.service';\r\nimport { WFFlowchartService } from './wf-flowchart.service';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { TranslatePipe } from './services/translate.pipe';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { WfApprovalLogsModule } from '@gsp-wf/wf-approval-logs';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { FarrisTabsModule } from '@farris/ui-tabs';\r\nimport { SplitterModule } from '@farris/ui-splitter';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UIFlowchartComponent,\r\n    TranslatePipe],\r\n  imports: [\r\n    LayoutModule,\r\n    CommonModule,\r\n    FarrisDialogModule,\r\n    MessagerModule.forRoot({\r\n      width: 500\r\n    }),\r\n    FarrisSectionModule,\r\n    WfApprovalLogsModule,\r\n    ComboListModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FDropdownDirectiveTypeModule,\r\n    DatagridModule,\r\n    NotifyModule,\r\n    LoadingModule,\r\n    FarrisTabsModule.forRoot(),\r\n    SplitterModule\r\n  ],\r\n  exports: [UIFlowchartComponent],\r\n  providers: [\r\n    HttpService,\r\n    UiFlowchartService,\r\n    WFFlowchartService,\r\n  ],\r\n  entryComponents: [\r\n    UIFlowchartComponent\r\n  ]\r\n})\r\nexport class UiFlowchartModule { }\r\n","export class ForecastProcessPayload {\r\n\r\n    bizDefKey: string;\r\n\r\n    dataId: string;\r\n\r\n    startMode: string;\r\n\r\n    startUserId: string;\r\n}\r\n"],"names":["map"],"mappings":"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"}
