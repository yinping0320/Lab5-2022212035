/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { Subject } from 'rxjs';
var ActionBaseImplComponent = /** @class */ (function () {
    function ActionBaseImplComponent() {
        /**
         * 是否为批量操作
         */
        this.isBatch = false;
    }
    /**
     * @return {?}
     */
    ActionBaseImplComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 任务赋值
     */
    /**
     * 任务赋值
     * @param {?} t
     * @return {?}
     */
    ActionBaseImplComponent.prototype.setTask = /**
     * 任务赋值
     * @param {?} t
     * @return {?}
     */
    function (t) {
    };
    /**
     * 动作赋值
     */
    /**
     * 动作赋值
     * @param {?} a
     * @return {?}
     */
    ActionBaseImplComponent.prototype.setAction = /**
     * 动作赋值
     * @param {?} a
     * @return {?}
     */
    function (a) {
    };
    /**
     * 执行操作
     */
    /**
     * 执行操作
     * @return {?}
     */
    ActionBaseImplComponent.prototype.submit = /**
     * 执行操作
     * @return {?}
     */
    function () {
        /** @type {?} */
        var sub = new Subject();
        setTimeout(function () {
            console.log('重写动作执行逻辑');
            sub.next({
                result: true,
                isClose: true
            });
        }, 500);
        return sub.asObservable();
    };
    /**
     * 批量执行操作
     */
    /**
     * 批量执行操作
     * @param {?} tasks
     * @return {?}
     */
    ActionBaseImplComponent.prototype.batchSubmit = /**
     * 批量执行操作
     * @param {?} tasks
     * @return {?}
     */
    function (tasks) {
        /** @type {?} */
        var sub = new Subject();
        setTimeout(function () {
            console.log('重写动作执行逻辑');
            sub.next({
                result: true,
                isClose: true
            });
        }, 500);
        return sub.asObservable();
    };
    ActionBaseImplComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-action-base-impl',
                    template: "<p>\r\n  action-base-impl works!\r\n</p>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ActionBaseImplComponent.ctorParameters = function () { return []; };
    return ActionBaseImplComponent;
}());
export { ActionBaseImplComponent };
if (false) {
    /**
     * 是否为批量操作
     * @type {?}
     */
    ActionBaseImplComponent.prototype.isBatch;
    /**
     * 提交按钮名称，支持重写
     * @type {?}
     */
    ActionBaseImplComponent.prototype.submitName;
    /**
     * 任务列表上弹框的高度
     * @type {?}
     */
    ActionBaseImplComponent.prototype.dialogHeight;
    /**
     * 任务列表上弹框的宽度
     * @type {?}
     */
    ActionBaseImplComponent.prototype.dialogWidth;
    /**
     * 动作执行来源（任务列表、任务办理界面）
     * @type {?}
     */
    ActionBaseImplComponent.prototype.origin;
    /**
     * 单据
     * @type {?}
     */
    ActionBaseImplComponent.prototype.iframe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhc2UtaW1wbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3Rhc2staW1wbC1hcGkvIiwic291cmNlcyI6WyJsaWIvYWN0aW9uLWJhc2UtaW1wbC9hY3Rpb24tYmFzZS1pbXBsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBc0IsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUzQztJQXFDRTs7OztRQTNCQSxZQUFPLEdBQUcsS0FBSyxDQUFDO0lBMkJBLENBQUM7Ozs7SUFFakIsMENBQVE7OztJQUFSO0lBQ0EsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDSCx5Q0FBTzs7Ozs7SUFBUCxVQUFRLENBQWE7SUFFckIsQ0FBQztJQUNEOztPQUVHOzs7Ozs7SUFDSCwyQ0FBUzs7Ozs7SUFBVCxVQUFVLENBQWE7SUFFdkIsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNILHdDQUFNOzs7O0lBQU47O1lBQ1EsR0FBRyxHQUFHLElBQUksT0FBTyxFQUFnQjtRQUN2QyxVQUFVLENBQUM7WUFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3hCLEdBQUcsQ0FBQyxJQUFJLENBQUM7Z0JBQ1AsTUFBTSxFQUFFLElBQUk7Z0JBQ1osT0FBTyxFQUFFLElBQUk7YUFDZCxDQUFDLENBQUM7UUFDTCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDUixPQUFPLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNILDZDQUFXOzs7OztJQUFYLFVBQVksS0FBbUI7O1lBQ3ZCLEdBQUcsR0FBRyxJQUFJLE9BQU8sRUFBZ0I7UUFDdkMsVUFBVSxDQUFDO1lBQ1QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN4QixHQUFHLENBQUMsSUFBSSxDQUFDO2dCQUNQLE1BQU0sRUFBRSxJQUFJO2dCQUNaLE9BQU8sRUFBRSxJQUFJO2FBQ2QsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ1IsT0FBTyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7Z0JBbkZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyx3REFBZ0Q7O2lCQUVqRDs7OztJQWdGRCw4QkFBQztDQUFBLEFBcEZELElBb0ZDO1NBL0VZLHVCQUF1Qjs7Ozs7O0lBS2xDLDBDQUFnQjs7Ozs7SUFLaEIsNkNBQW1COzs7OztJQUtuQiwrQ0FBcUI7Ozs7O0lBS3JCLDhDQUFvQjs7Ozs7SUFLcEIseUNBQWU7Ozs7O0lBS2YseUNBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU3VibWl0UmVzdWx0LCBUYXNrRW50aXR5LCBUYXNrQWN0aW9uIH0gZnJvbSAnLi4vZW50aXR5JztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItYWN0aW9uLWJhc2UtaW1wbCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2FjdGlvbi1iYXNlLWltcGwuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2FjdGlvbi1iYXNlLWltcGwuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQWN0aW9uQmFzZUltcGxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAvKipcclxuICAgKiDmmK/lkKbkuLrmibnph4/mk43kvZxcclxuICAgKi9cclxuICBpc0JhdGNoID0gZmFsc2U7XHJcblxyXG4gIC8qKlxyXG4gICAqIOaPkOS6pOaMiemSruWQjeensO+8jOaUr+aMgemHjeWGmVxyXG4gICAqL1xyXG4gIHN1Ym1pdE5hbWU6IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICog5Lu75Yqh5YiX6KGo5LiK5by55qGG55qE6auY5bqmXHJcbiAgICovXHJcbiAgZGlhbG9nSGVpZ2h0OiBudW1iZXI7XHJcblxyXG4gIC8qKlxyXG4gICAqIOS7u+WKoeWIl+ihqOS4iuW8ueahhueahOWuveW6plxyXG4gICAqL1xyXG4gIGRpYWxvZ1dpZHRoOiBudW1iZXI7XHJcblxyXG4gIC8qKlxyXG4gICAqIOWKqOS9nOaJp+ihjOadpea6kO+8iOS7u+WKoeWIl+ihqOOAgeS7u+WKoeWKnueQhueVjOmdou+8iVxyXG4gICAqL1xyXG4gIG9yaWdpbjogc3RyaW5nO1xyXG5cclxuICAvKipcclxuICAgKiDljZXmja5cclxuICAgKi9cclxuICBpZnJhbWU6IEVsZW1lbnRSZWY8SFRNTElGcmFtZUVsZW1lbnQ+O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOS7u+WKoei1i+WAvFxyXG4gICAqL1xyXG4gIHNldFRhc2sodDogVGFza0VudGl0eSkge1xyXG5cclxuICB9XHJcbiAgLyoqXHJcbiAgICog5Yqo5L2c6LWL5YC8XHJcbiAgICovXHJcbiAgc2V0QWN0aW9uKGE6IFRhc2tBY3Rpb24pIHtcclxuXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOaJp+ihjOaTjeS9nFxyXG4gICAqL1xyXG4gIHN1Ym1pdCgpOiBPYnNlcnZhYmxlPFN1Ym1pdFJlc3VsdD4ge1xyXG4gICAgY29uc3Qgc3ViID0gbmV3IFN1YmplY3Q8U3VibWl0UmVzdWx0PigpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCfph43lhpnliqjkvZzmiafooYzpgLvovpEnKTtcclxuICAgICAgc3ViLm5leHQoe1xyXG4gICAgICAgIHJlc3VsdDogdHJ1ZSxcclxuICAgICAgICBpc0Nsb3NlOiB0cnVlXHJcbiAgICAgIH0pO1xyXG4gICAgfSwgNTAwKTtcclxuICAgIHJldHVybiBzdWIuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmibnph4/miafooYzmk43kvZxcclxuICAgKi9cclxuICBiYXRjaFN1Ym1pdCh0YXNrczogVGFza0VudGl0eVtdKTogT2JzZXJ2YWJsZTxTdWJtaXRSZXN1bHQ+IHtcclxuICAgIGNvbnN0IHN1YiA9IG5ldyBTdWJqZWN0PFN1Ym1pdFJlc3VsdD4oKTtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZygn6YeN5YaZ5Yqo5L2c5omn6KGM6YC76L6RJyk7XHJcbiAgICAgIHN1Yi5uZXh0KHtcclxuICAgICAgICByZXN1bHQ6IHRydWUsXHJcbiAgICAgICAgaXNDbG9zZTogdHJ1ZVxyXG4gICAgICB9KTtcclxuICAgIH0sIDUwMCk7XHJcbiAgICByZXR1cm4gc3ViLmFzT2JzZXJ2YWJsZSgpO1xyXG4gIH1cclxufVxyXG4iXX0=