{"version":3,"file":"gsp-wf-task-impl-api.js.map","sources":["ng://@gsp-wf/task-impl-api/lib/task-impl-api.service.ts","ng://@gsp-wf/task-impl-api/lib/task-impl-api.component.ts","ng://@gsp-wf/task-impl-api/lib/action-base-impl/action-base-impl.component.ts","ng://@gsp-wf/task-impl-api/lib/task-impl-api.module.ts","ng://@gsp-wf/task-impl-api/lib/entity/task-action.entity.ts","ng://@gsp-wf/task-impl-api/lib/entity/task.entity.ts","ng://@gsp-wf/task-impl-api/lib/entity/submit-result.ts","ng://@gsp-wf/task-impl-api/lib/entity/task-event-context.ts","ng://@gsp-wf/task-impl-api/lib/entity/task-event-result.ts","ng://@gsp-wf/task-impl-api/lib/entity/task-action-origin.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskImplApiService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-task-impl-api',\r\n  template: `\r\n    <p>\r\n      task-impl-api works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class TaskImplApiComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { SubmitResult, TaskEntity, TaskAction } from '../entity';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'lib-action-base-impl',\r\n  templateUrl: './action-base-impl.component.html',\r\n  styleUrls: ['./action-base-impl.component.scss']\r\n})\r\nexport class ActionBaseImplComponent implements OnInit {\r\n\r\n  /**\r\n   * æ¯å¦ä¸ºæ¹éæä½\r\n   */\r\n  isBatch = false;\r\n\r\n  /**\r\n   * æäº¤æé®åç§°ï¼æ¯æéå\r\n   */\r\n  submitName: string;\r\n\r\n  /**\r\n   * ä»»å¡åè¡¨ä¸å¼¹æ¡çé«åº¦\r\n   */\r\n  dialogHeight: number;\r\n\r\n  /**\r\n   * ä»»å¡åè¡¨ä¸å¼¹æ¡çå®½åº¦\r\n   */\r\n  dialogWidth: number;\r\n\r\n  /**\r\n   * å¨ä½æ§è¡æ¥æºï¼ä»»å¡åè¡¨ãä»»å¡åççé¢ï¼\r\n   */\r\n  origin: string;\r\n\r\n  /**\r\n   * åæ®\r\n   */\r\n  iframe: ElementRef<HTMLIFrameElement>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * ä»»å¡èµå¼\r\n   */\r\n  setTask(t: TaskEntity) {\r\n\r\n  }\r\n  /**\r\n   * å¨ä½èµå¼\r\n   */\r\n  setAction(a: TaskAction) {\r\n\r\n  }\r\n  \r\n  /**\r\n   * æ§è¡æä½\r\n   */\r\n  submit(): Observable<SubmitResult> {\r\n    const sub = new Subject<SubmitResult>();\r\n    setTimeout(() => {\r\n      console.log('éåå¨ä½æ§è¡é»è¾');\r\n      sub.next({\r\n        result: true,\r\n        isClose: true\r\n      });\r\n    }, 500);\r\n    return sub.asObservable();\r\n  }\r\n\r\n  /**\r\n   * æ¹éæ§è¡æä½\r\n   */\r\n  batchSubmit(tasks: TaskEntity[]): Observable<SubmitResult> {\r\n    const sub = new Subject<SubmitResult>();\r\n    setTimeout(() => {\r\n      console.log('éåå¨ä½æ§è¡é»è¾');\r\n      sub.next({\r\n        result: true,\r\n        isClose: true\r\n      });\r\n    }, 500);\r\n    return sub.asObservable();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TaskImplApiComponent } from './task-impl-api.component';\r\nimport { ActionBaseImplComponent } from './action-base-impl/action-base-impl.component';\r\n\r\n@NgModule({\r\n  declarations: [TaskImplApiComponent, ActionBaseImplComponent],\r\n  imports: [\r\n  ],\r\n  exports: [TaskImplApiComponent,\r\n    ActionBaseImplComponent]\r\n})\r\nexport class TaskImplApiModule { }\r\n","/**\r\n * ä¸å¡å¨ä½åæ°\r\n */\r\nexport class ActionParameter {\r\n    /**\r\n     * åæ°ç¼å·\r\n     */\r\n    code: string;\r\n    /**\r\n     * åæ°å¼\r\n     */\r\n    value: string;\r\n}\r\n/**\r\n * ä»»å¡å¨ä½å®ä¹\r\n */\r\nexport class TaskActionDef {\r\n    /**\r\n     * id\r\n     */\r\n    id: string;\r\n    /**\r\n     * å¨ä½ç¼å·\r\n     */\r\n    code: string;\r\n    /**\r\n     * å¨ä½æ¾ç¤ºåç§°\r\n     */\r\n    name: string;\r\n    /**\r\n     * å¨ä½å®ç°\r\n     */\r\n    impl: string;\r\n    /**\r\n     * æ¯å¦æ¹éæä½\r\n     */\r\n    isBatchAction: boolean;\r\n    /**\r\n     * æ¯å¦æ¯èæ¥æä½\r\n     */\r\n    isHyperlinkAction: boolean;\r\n    /**\r\n     * æ¯å¦ä¸»æä½\r\n     */\r\n    isPrimaryAction: boolean;\r\n    /**\r\n     * å¨ä½æåºå·\r\n     */\r\n    sortOrder: number;\r\n    /**\r\n     * å¨ä½ç±»å\r\n     */\r\n    typeId: string;\r\n    /**\r\n     * å¨ä½ç±»å\r\n     */\r\n    groupId?: string;\r\n    /**\r\n     * å¾åå·²å\r\n     */\r\n    scope?: string;\r\n    /**\r\n     * åäºä»¶\r\n     */\r\n    preEvents?: ActionEvent[];\r\n    /**\r\n     * åäºä»¶\r\n     */\r\n    postEvents?: ActionEvent[];\r\n}\r\n/**\r\n * ä»»å¡å¨ä½å®ä¹\r\n */\r\nexport class TaskAction extends TaskActionDef {\r\n    /**\r\n     * ä»»å¡å¨ä½å®ä¹ç¼å·\r\n     */\r\n    code: string;\r\n    /**\r\n     * åæ°åè¡¨\r\n     */\r\n    parameters: ActionParameter[];\r\n}\r\nexport class ActionEvent {\r\n    /**\r\n     * ID\r\n     */\r\n    id: string;\r\n    /**\r\n     * ä»»å¡åç±»\r\n     */\r\n    taskCategoryId: string;\r\n    /**\r\n     * å¨ä½ç¼å·\r\n     */\r\n    actionCode: string;\r\n    /**\r\n     * å®ç°\r\n     */\r\n    eventImpl: string;\r\n    /**\r\n     * æåº\r\n     */\r\n    sortOrder: number;\r\n    /**\r\n     * ç»ç«¯ï¼webï¼app\r\n     */\r\n    terminal: string;\r\n    /**\r\n     * ç±»åï¼Pre,Post\r\n     */\r\n    type: string;\r\n    /**\r\n     * æ¯å¦ä¸ºæ¹éæ©å±\r\n     */\r\n    batch: boolean;\r\n}\r\n","import { TaskAction } from './task-action.entity';\r\nexport enum TaskState {\r\n    /**\r\n     * å¾å\r\n     */\r\n    todo = 2,\r\n    /**\r\n     * å·²å\r\n     */\r\n    done = 5,\r\n}\r\n\r\nexport class TaskEntity {\r\n    /**\r\n     * Id\r\n     */\r\n    id: string;\r\n    /**\r\n     * ä»»å¡åç§°\r\n     */\r\n    name: string;\r\n    /**\r\n     * ä»»å¡åç±»Id\r\n     */\r\n    categoryId: string;\r\n    /**\r\n     * ä»»å¡ç¶æ\r\n     */\r\n    state: TaskState;\r\n    /**\r\n     * ä»»å¡å°è¾¾æ¶é´\r\n     */\r\n    startTime: Date;\r\n    /**\r\n     * ä»»å¡å®ææ¶é´\r\n     */\r\n    endTime?: Date;\r\n    dueDate?: string;\r\n    targetDate?: string;\r\n    owner: string;\r\n    executor: string;\r\n    /**\r\n     * ä»»å¡å¤æ³¨ä¿¡æ¯\r\n     */\r\n    description: string;\r\n    taskType: number;\r\n    sourceId: string;\r\n    /**\r\n     * ä»»å¡ä¼åçº§\r\n     */\r\n    priority: number;\r\n    /**\r\n     * ä»»å¡åèµ·äºº\r\n     */\r\n    submitter: string;\r\n    fStr1: string;\r\n    fStr2: string;\r\n    fStr3: string;\r\n    fStr4: string;\r\n    fStr5: string;\r\n    fStr6: string;\r\n    fStr7: string;\r\n    fStr8: string;\r\n    fTime1?: Date;\r\n    fTime2?: Date;\r\n    fTime3?: Date;\r\n    fTime4?: Date;\r\n    fDec1: number;\r\n    fDec2: number;\r\n    fDec3: number;\r\n    fDec4: number;\r\n    fText1: string;\r\n    fText2: string;\r\n    fText3: string;\r\n    fText4: string;\r\n    actions: TaskAction[];\r\n    processInstanceId: string;\r\n    refBizId: string;\r\n    conclusionValue: string;\r\n}\r\n","export class SubmitResult {\r\n    /**\r\n     * å¨ä½åçç»æ\r\n     */\r\n    result: boolean;\r\n    /**\r\n     * æ¯å¦å³é­åççé¢\r\n     */\r\n    isClose: boolean;\r\n    /**\r\n     * è¿åæ¶æ¯\r\n     */\r\n    message?: string;\r\n}\r\n","import { TaskEntity } from './task.entity';\r\nimport { TaskAction } from './task-action.entity';\r\nimport { ElementRef } from '@angular/core';\r\nimport { TaskEventResult } from './task-event-result';\r\n\r\nexport class TaskEventContext {\r\n    /**\r\n     * å¨ä½å®ä½\r\n     */\r\n    action: TaskAction;\r\n    /**\r\n     * äºä»¶æ¥æºï¼ä»»å¡åè¡¨ãä»»å¡åççé¢\r\n     */\r\n    origin: 'TaskCenter' | 'TaskForm';\r\n    /**\r\n     * ä»»å¡å®ä½ï¼éç¨äºéæ¡ä»»å¡åçï¼ååäºä»¶æ©å±ï¼\r\n     */\r\n    task?: TaskEntity;\r\n    /**\r\n     * ä»»å¡åçæ©å±ï¼ä¼ éè¡¨åå¯¹è±¡\r\n     */\r\n    formIframe?: ElementRef<HTMLIFrameElement>;\r\n    /**\r\n     * ä»»å¡å®ä½åè¡¨ï¼éç¨äºæ¹éå¤çä¼ åï¼\r\n     */\r\n    taskList?: Array<TaskEntity>;\r\n    /**\r\n     * åäºä»¶è¿åç»æï¼éç¨äºæ¹éå¤çï¼\r\n     */\r\n    preEventResult?: TaskEventResult;\r\n}\r\n","export class TaskEventResult {\r\n    result: boolean;\r\n    passTasks?: string[];\r\n    backTasks?: BackMessage[];\r\n    customData?: any;\r\n}\r\n\r\nexport class BackMessage {\r\n    taskId: string;\r\n    statusCode: string;\r\n    message: string;\r\n}\r\n","export enum ActionOrigin {\r\n\r\n    TaskCenter = 'TaskCenter',\r\n\r\n    TaskForm = 'TaskForm'\r\n}"],"names":[],"mappings":";;;;;;;AAAA,MAKa,kBAAkB;IAE7B,iBAAiB;;;YALlB,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACJD,MAWa,oBAAoB;IAE/B,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;;GAIT;aAEF;;;;;;;;;ACVD,MASa,uBAAuB;IAgClC;;;;QA3BA,YAAO,GAAG,KAAK,CAAC;KA2BC;;;;IAEjB,QAAQ;KACP;;;;;;IAKD,OAAO,CAAC,CAAa;KAEpB;;;;;;IAID,SAAS,CAAC,CAAa;KAEtB;;;;;IAKD,MAAM;;cACE,GAAG,GAAG,IAAI,OAAO,EAAgB;QACvC,UAAU,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,GAAG,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;SACJ,EAAE,GAAG,CAAC,CAAC;QACR,OAAO,GAAG,CAAC,YAAY,EAAE,CAAC;KAC3B;;;;;;IAKD,WAAW,CAAC,KAAmB;;cACvB,GAAG,GAAG,IAAI,OAAO,EAAgB;QACvC,UAAU,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,GAAG,CAAC,IAAI,CAAC;gBACP,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;SACJ,EAAE,GAAG,CAAC,CAAC;QACR,OAAO,GAAG,CAAC,YAAY,EAAE,CAAC;KAC3B;;;YAnFF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,wDAAgD;;aAEjD;;;;;;;;;ACRD,MAWa,iBAAiB;;;YAP7B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,oBAAoB,EAAE,uBAAuB,CAAC;gBAC7D,OAAO,EAAE,EACR;gBACD,OAAO,EAAE,CAAC,oBAAoB;oBAC5B,uBAAuB,CAAC;aAC3B;;;;;;;;;;;;;;;ACPD,MAAa,eAAe;CAS3B;;;;AAID,MAAa,aAAa;CAqDzB;;;;AAID,MAAa,UAAW,SAAQ,aAAa;CAS5C;MACY,WAAW;CAiCvB;;;;;;;;;;;IC/GG,OAAQ;;;;IAIR,OAAQ;;;;AAGZ,MAAa,UAAU;CAmEtB;;;;;;AC/ED,MAAa,YAAY;CAaxB;;;;;;ACRD,MAAa,gBAAgB;CAyB5B;;;;;;AC9BD,MAAa,eAAe;CAK3B;MAEY,WAAW;CAIvB;;;;;;;;ICTG,YAAa,YAAY;IAEzB,UAAW,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
