/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { Subject } from 'rxjs';
export class ActionBaseImplComponent {
    constructor() {
        /**
         * 是否为批量操作
         */
        this.isBatch = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * 任务赋值
     * @param {?} t
     * @return {?}
     */
    setTask(t) {
    }
    /**
     * 动作赋值
     * @param {?} a
     * @return {?}
     */
    setAction(a) {
    }
    /**
     * 执行操作
     * @return {?}
     */
    submit() {
        /** @type {?} */
        const sub = new Subject();
        setTimeout(() => {
            console.log('重写动作执行逻辑');
            sub.next({
                result: true,
                isClose: true
            });
        }, 500);
        return sub.asObservable();
    }
    /**
     * 批量执行操作
     * @param {?} tasks
     * @return {?}
     */
    batchSubmit(tasks) {
        /** @type {?} */
        const sub = new Subject();
        setTimeout(() => {
            console.log('重写动作执行逻辑');
            sub.next({
                result: true,
                isClose: true
            });
        }, 500);
        return sub.asObservable();
    }
}
ActionBaseImplComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-action-base-impl',
                template: "<p>\r\n  action-base-impl works!\r\n</p>\r\n",
                styles: [""]
            }] }
];
/** @nocollapse */
ActionBaseImplComponent.ctorParameters = () => [];
if (false) {
    /**
     * 是否为批量操作
     * @type {?}
     */
    ActionBaseImplComponent.prototype.isBatch;
    /**
     * 提交按钮名称，支持重写
     * @type {?}
     */
    ActionBaseImplComponent.prototype.submitName;
    /**
     * 任务列表上弹框的高度
     * @type {?}
     */
    ActionBaseImplComponent.prototype.dialogHeight;
    /**
     * 任务列表上弹框的宽度
     * @type {?}
     */
    ActionBaseImplComponent.prototype.dialogWidth;
    /**
     * 动作执行来源（任务列表、任务办理界面）
     * @type {?}
     */
    ActionBaseImplComponent.prototype.origin;
    /**
     * 单据
     * @type {?}
     */
    ActionBaseImplComponent.prototype.iframe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhc2UtaW1wbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3Rhc2staW1wbC1hcGkvIiwic291cmNlcyI6WyJsaWIvYWN0aW9uLWJhc2UtaW1wbC9hY3Rpb24tYmFzZS1pbXBsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBc0IsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQU8zQyxNQUFNLE9BQU8sdUJBQXVCO0lBZ0NsQzs7OztRQTNCQSxZQUFPLEdBQUcsS0FBSyxDQUFDO0lBMkJBLENBQUM7Ozs7SUFFakIsUUFBUTtJQUNSLENBQUM7Ozs7OztJQUtELE9BQU8sQ0FBQyxDQUFhO0lBRXJCLENBQUM7Ozs7OztJQUlELFNBQVMsQ0FBQyxDQUFhO0lBRXZCLENBQUM7Ozs7O0lBS0QsTUFBTTs7Y0FDRSxHQUFHLEdBQUcsSUFBSSxPQUFPLEVBQWdCO1FBQ3ZDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDZCxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3hCLEdBQUcsQ0FBQyxJQUFJLENBQUM7Z0JBQ1AsTUFBTSxFQUFFLElBQUk7Z0JBQ1osT0FBTyxFQUFFLElBQUk7YUFDZCxDQUFDLENBQUM7UUFDTCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDUixPQUFPLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM1QixDQUFDOzs7Ozs7SUFLRCxXQUFXLENBQUMsS0FBbUI7O2NBQ3ZCLEdBQUcsR0FBRyxJQUFJLE9BQU8sRUFBZ0I7UUFDdkMsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDeEIsR0FBRyxDQUFDLElBQUksQ0FBQztnQkFDUCxNQUFNLEVBQUUsSUFBSTtnQkFDWixPQUFPLEVBQUUsSUFBSTthQUNkLENBQUMsQ0FBQztRQUNMLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNSLE9BQU8sR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzVCLENBQUM7OztZQW5GRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsd0RBQWdEOzthQUVqRDs7Ozs7Ozs7O0lBTUMsMENBQWdCOzs7OztJQUtoQiw2Q0FBbUI7Ozs7O0lBS25CLCtDQUFxQjs7Ozs7SUFLckIsOENBQW9COzs7OztJQUtwQix5Q0FBZTs7Ozs7SUFLZix5Q0FBc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdWJtaXRSZXN1bHQsIFRhc2tFbnRpdHksIFRhc2tBY3Rpb24gfSBmcm9tICcuLi9lbnRpdHknO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2xpYi1hY3Rpb24tYmFzZS1pbXBsJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYWN0aW9uLWJhc2UtaW1wbC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYWN0aW9uLWJhc2UtaW1wbC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBY3Rpb25CYXNlSW1wbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOaYr+WQpuS4uuaJuemHj+aTjeS9nFxyXG4gICAqL1xyXG4gIGlzQmF0Y2ggPSBmYWxzZTtcclxuXHJcbiAgLyoqXHJcbiAgICog5o+Q5Lqk5oyJ6ZKu5ZCN56ew77yM5pSv5oyB6YeN5YaZXHJcbiAgICovXHJcbiAgc3VibWl0TmFtZTogc3RyaW5nO1xyXG5cclxuICAvKipcclxuICAgKiDku7vliqHliJfooajkuIrlvLnmoYbnmoTpq5jluqZcclxuICAgKi9cclxuICBkaWFsb2dIZWlnaHQ6IG51bWJlcjtcclxuXHJcbiAgLyoqXHJcbiAgICog5Lu75Yqh5YiX6KGo5LiK5by55qGG55qE5a695bqmXHJcbiAgICovXHJcbiAgZGlhbG9nV2lkdGg6IG51bWJlcjtcclxuXHJcbiAgLyoqXHJcbiAgICog5Yqo5L2c5omn6KGM5p2l5rqQ77yI5Lu75Yqh5YiX6KGo44CB5Lu75Yqh5Yqe55CG55WM6Z2i77yJXHJcbiAgICovXHJcbiAgb3JpZ2luOiBzdHJpbmc7XHJcblxyXG4gIC8qKlxyXG4gICAqIOWNleaNrlxyXG4gICAqL1xyXG4gIGlmcmFtZTogRWxlbWVudFJlZjxIVE1MSUZyYW1lRWxlbWVudD47XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Lu75Yqh6LWL5YC8XHJcbiAgICovXHJcbiAgc2V0VGFzayh0OiBUYXNrRW50aXR5KSB7XHJcblxyXG4gIH1cclxuICAvKipcclxuICAgKiDliqjkvZzotYvlgLxcclxuICAgKi9cclxuICBzZXRBY3Rpb24oYTogVGFza0FjdGlvbikge1xyXG5cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICog5omn6KGM5pON5L2cXHJcbiAgICovXHJcbiAgc3VibWl0KCk6IE9ic2VydmFibGU8U3VibWl0UmVzdWx0PiB7XHJcbiAgICBjb25zdCBzdWIgPSBuZXcgU3ViamVjdDxTdWJtaXRSZXN1bHQ+KCk7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ+mHjeWGmeWKqOS9nOaJp+ihjOmAu+i+kScpO1xyXG4gICAgICBzdWIubmV4dCh7XHJcbiAgICAgICAgcmVzdWx0OiB0cnVlLFxyXG4gICAgICAgIGlzQ2xvc2U6IHRydWVcclxuICAgICAgfSk7XHJcbiAgICB9LCA1MDApO1xyXG4gICAgcmV0dXJuIHN1Yi5hc09ic2VydmFibGUoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaJuemHj+aJp+ihjOaTjeS9nFxyXG4gICAqL1xyXG4gIGJhdGNoU3VibWl0KHRhc2tzOiBUYXNrRW50aXR5W10pOiBPYnNlcnZhYmxlPFN1Ym1pdFJlc3VsdD4ge1xyXG4gICAgY29uc3Qgc3ViID0gbmV3IFN1YmplY3Q8U3VibWl0UmVzdWx0PigpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCfph43lhpnliqjkvZzmiafooYzpgLvovpEnKTtcclxuICAgICAgc3ViLm5leHQoe1xyXG4gICAgICAgIHJlc3VsdDogdHJ1ZSxcclxuICAgICAgICBpc0Nsb3NlOiB0cnVlXHJcbiAgICAgIH0pO1xyXG4gICAgfSwgNTAwKTtcclxuICAgIHJldHVybiBzdWIuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==