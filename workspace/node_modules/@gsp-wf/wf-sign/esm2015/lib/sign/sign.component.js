/**
 * @fileoverview added by tsickle
 * Generated from: lib/sign/sign.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';
import { SignatureComponent } from '../signature/signature.component';
export class SignComponent {
    constructor() {
        // 抛出选中的事件
        this.toDataUrlEvent = new EventEmitter();
        this.isDrawEvent = new EventEmitter();
        this.imageType = "image/png";
        this.imageQuality = 1;
        this.isDraw = false;
        this.signaturePadOptions = {
            // passed through to szimek/signature_pad constructor
            'minWidth': 1,
            'canvasWidth': 500,
            'canvasHeight': 240
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // this.signaturePad is now available
        this.signaturePad.set('minWidth', 1); // set szimek/signature_pad options at runtime
        this.signaturePad.set('canvasWidth', this.canvasDiv.nativeElement.clientWidth);
        this.signaturePad.clear(); // invoke functions from szimek/signature_pad API
        this.signaturePad.setImageBackground();
    }
    /**
     * @return {?}
     */
    confirm() {
        console.log(this.signaturePad.toDataURL(this.imageType, this.imageQuality));
        this.signaturePad.setWaterMark(new Date());
        this.toDataUrlEvent.emit(this.signaturePad.toDataURL(this.imageType, this.imageQuality));
    }
    /**
     * @return {?}
     */
    reset() {
        this.signaturePad.clear();
        this.isDraw = false;
        this.isDrawEvent.emit(this.isDraw);
    }
    /**
     * @return {?}
     */
    drawComplete() {
        this.isDraw = true;
        this.isDrawEvent.emit(this.isDraw);
        // will be notified of szimek/signature_pad's onEnd event
        //console.log(this.signaturePad.toDataURL());
    }
    /**
     * @return {?}
     */
    drawStart() {
        // will be notified of szimek/signature_pad's onBegin event
        console.log('begin drawing');
    }
}
SignComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf-sign-sign',
                template: "<div class=\"fm-feature-suggestion fm-feature-section--gutter\">\r\n    <div #canvastitle style=\"padding:2px 2px 2px 0;text-align:left;width:100%;height: 21px;\">\r\n        <span style=\"font-size: 15px;color: #999999;\">\u7B7E\u540D\u533A\u57DF</span>\r\n      </div>\r\n      <wf-sign-signature  [options]=\"signaturePadOptions\" (onBeginEvent)=\"drawStart()\" (onEndEvent)=\"drawComplete()\"></wf-sign-signature>\r\n  <div class=\"fm-feature-suggestion--bar\">\r\n    <ul class=\"suggestion--bar-common\">\r\n      <li class=\"suggestion--bar-item\" (click)=\"confirm()\">\r\n        <span>\u786E\u8BA4</span>\r\n      </li>\r\n      <li class=\"suggestion--bar-item\" (click)=\"reset()\">\r\n        <span>\u91CD\u7F6E</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n",
                styles: [".fm-page-main1{overflow:hidden}.fm-utils-flex-column{display:flex;flex-direction:column}.fm-page{position:absolute;top:0;left:0;bottom:0;right:0;display:flex;flex-direction:column;background:#fff;font-size:13px;line-height:18px}.fm-page-main{flex-basis:0;flex-shrink:1;flex-grow:1;overflow-x:hidden;overflow-y:auto;position:relative}.fm-feature-section--gutter{margin:0 0 12px}.fm-feature-suggestion{background:#fff;padding:12px 16px}.fm-feature-suggestion .fm-feature-suggestion--bar{display:flex;flex-direction:row;align-items:center;color:#888}"]
            }] }
];
/** @nocollapse */
SignComponent.ctorParameters = () => [];
SignComponent.propDecorators = {
    signaturePad: [{ type: ViewChild, args: [SignatureComponent,] }],
    canvasDiv: [{ type: ViewChild, args: ['canvastitle',] }],
    toDataUrlEvent: [{ type: Output }],
    isDrawEvent: [{ type: Output }],
    imageType: [{ type: Input }],
    imageQuality: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SignComponent.prototype.signaturePad;
    /** @type {?} */
    SignComponent.prototype.canvasDiv;
    /** @type {?} */
    SignComponent.prototype.toDataUrlEvent;
    /** @type {?} */
    SignComponent.prototype.isDrawEvent;
    /** @type {?} */
    SignComponent.prototype.imageType;
    /** @type {?} */
    SignComponent.prototype.imageQuality;
    /**
     * @type {?}
     * @private
     */
    SignComponent.prototype.isDraw;
    /** @type {?} */
    SignComponent.prototype.signaturePadOptions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXNpZ24vIiwic291cmNlcyI6WyJsaWIvc2lnbi9zaWduLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXVCLFNBQVMsRUFBNkIsVUFBVSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdJLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBT3RFLE1BQU0sT0FBTyxhQUFhO0lBbUJ4Qjs7UUFkVSxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDcEMsZ0JBQVcsR0FBQyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2hDLGNBQVMsR0FBRyxXQUFXLENBQUM7UUFDeEIsaUJBQVksR0FBRyxDQUFDLENBQUM7UUFDbEIsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUl2Qix3QkFBbUIsR0FBVzs7WUFDNUIsVUFBVSxFQUFFLENBQUM7WUFDYixhQUFhLEVBQUUsR0FBRztZQUNsQixjQUFjLEVBQUUsR0FBRztTQUNwQixDQUFDO0lBRWMsQ0FBQzs7OztJQUVqQixRQUFRO0lBQ1IsQ0FBQzs7OztJQUVELGVBQWU7UUFDYixxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsOENBQThDO1FBQ3BGLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMvRSxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsaURBQWlEO1FBQzVFLElBQUksQ0FBQyxZQUFZLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUN6QyxDQUFDOzs7O0lBRUQsT0FBTztRQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztJQUMxRixDQUFDOzs7O0lBQ0QsS0FBSztRQUNILElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLE1BQU0sR0FBQyxLQUFLLENBQUM7UUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7SUFFRCxZQUFZO1FBQ1YsSUFBSSxDQUFDLE1BQU0sR0FBQyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25DLHlEQUF5RDtRQUN6RCw2Q0FBNkM7SUFDL0MsQ0FBQzs7OztJQUVELFNBQVM7UUFDUCwyREFBMkQ7UUFDM0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7WUExREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxjQUFjO2dCQUN4Qiw2eEJBQW9DOzthQUVyQzs7Ozs7MkJBR0UsU0FBUyxTQUFDLGtCQUFrQjt3QkFDNUIsU0FBUyxTQUFDLGFBQWE7NkJBRXZCLE1BQU07MEJBQ04sTUFBTTt3QkFDTixLQUFLOzJCQUNMLEtBQUs7Ozs7SUFOTixxQ0FBZ0U7O0lBQ2hFLGtDQUF1RDs7SUFFdkQsdUNBQThDOztJQUM5QyxvQ0FBeUM7O0lBQ3pDLGtDQUFpQzs7SUFDakMscUNBQTBCOzs7OztJQUMxQiwrQkFBdUI7O0lBSXZCLDRDQUlFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgT25Jbml0LCBWaWV3Q2hpbGQsIFRlbXBsYXRlUmVmLCBIb3N0TGlzdGVuZXIsIEVsZW1lbnRSZWYsSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNpZ25hdHVyZUNvbXBvbmVudCB9IGZyb20gJy4uL3NpZ25hdHVyZS9zaWduYXR1cmUuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnd2Ytc2lnbi1zaWduJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2lnbi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2lnbi5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNpZ25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBAVmlld0NoaWxkKFNpZ25hdHVyZUNvbXBvbmVudCkgc2lnbmF0dXJlUGFkOiBTaWduYXR1cmVDb21wb25lbnQ7XHJcbiAgQFZpZXdDaGlsZCgnY2FudmFzdGl0bGUnKSBwdWJsaWMgY2FudmFzRGl2OiBFbGVtZW50UmVmO1xyXG4gIC8vIOaKm+WHuumAieS4reeahOS6i+S7tlxyXG4gIEBPdXRwdXQoKSB0b0RhdGFVcmxFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgaXNEcmF3RXZlbnQ9bmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBJbnB1dCgpIGltYWdlVHlwZSA9IFwiaW1hZ2UvcG5nXCI7XHJcbiAgQElucHV0KCkgaW1hZ2VRdWFsaXR5ID0gMTtcclxuICBwcml2YXRlIGlzRHJhdyA9IGZhbHNlO1xyXG5cclxuICBcclxuXHJcbiAgc2lnbmF0dXJlUGFkT3B0aW9uczogT2JqZWN0ID0geyAvLyBwYXNzZWQgdGhyb3VnaCB0byBzemltZWsvc2lnbmF0dXJlX3BhZCBjb25zdHJ1Y3RvclxyXG4gICAgJ21pbldpZHRoJzogMSxcclxuICAgICdjYW52YXNXaWR0aCc6IDUwMCxcclxuICAgICdjYW52YXNIZWlnaHQnOiAyNDBcclxuICB9O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIC8vIHRoaXMuc2lnbmF0dXJlUGFkIGlzIG5vdyBhdmFpbGFibGVcclxuICAgIHRoaXMuc2lnbmF0dXJlUGFkLnNldCgnbWluV2lkdGgnLCAxKTsgLy8gc2V0IHN6aW1lay9zaWduYXR1cmVfcGFkIG9wdGlvbnMgYXQgcnVudGltZVxyXG4gICAgdGhpcy5zaWduYXR1cmVQYWQuc2V0KCdjYW52YXNXaWR0aCcsIHRoaXMuY2FudmFzRGl2Lm5hdGl2ZUVsZW1lbnQuY2xpZW50V2lkdGgpO1xyXG4gICAgdGhpcy5zaWduYXR1cmVQYWQuY2xlYXIoKTsgLy8gaW52b2tlIGZ1bmN0aW9ucyBmcm9tIHN6aW1lay9zaWduYXR1cmVfcGFkIEFQSVxyXG4gICAgdGhpcy5zaWduYXR1cmVQYWQuc2V0SW1hZ2VCYWNrZ3JvdW5kKCk7XHJcbiAgfVxyXG5cclxuICBjb25maXJtKCkge1xyXG4gICAgY29uc29sZS5sb2codGhpcy5zaWduYXR1cmVQYWQudG9EYXRhVVJMKHRoaXMuaW1hZ2VUeXBlLHRoaXMuaW1hZ2VRdWFsaXR5KSk7XHJcbiAgICB0aGlzLnNpZ25hdHVyZVBhZC5zZXRXYXRlck1hcmsobmV3IERhdGUoKSk7XHJcbiAgICB0aGlzLnRvRGF0YVVybEV2ZW50LmVtaXQodGhpcy5zaWduYXR1cmVQYWQudG9EYXRhVVJMKHRoaXMuaW1hZ2VUeXBlLHRoaXMuaW1hZ2VRdWFsaXR5KSk7XHJcbiAgfVxyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5zaWduYXR1cmVQYWQuY2xlYXIoKTtcclxuICAgIHRoaXMuaXNEcmF3PWZhbHNlO1xyXG4gICAgdGhpcy5pc0RyYXdFdmVudC5lbWl0KHRoaXMuaXNEcmF3KTtcclxuICB9XHJcblxyXG4gIGRyYXdDb21wbGV0ZSgpIHtcclxuICAgIHRoaXMuaXNEcmF3PXRydWU7XHJcbiAgICB0aGlzLmlzRHJhd0V2ZW50LmVtaXQodGhpcy5pc0RyYXcpO1xyXG4gICAgLy8gd2lsbCBiZSBub3RpZmllZCBvZiBzemltZWsvc2lnbmF0dXJlX3BhZCdzIG9uRW5kIGV2ZW50XHJcbiAgICAvL2NvbnNvbGUubG9nKHRoaXMuc2lnbmF0dXJlUGFkLnRvRGF0YVVSTCgpKTtcclxuICB9XHJcblxyXG4gIGRyYXdTdGFydCgpIHtcclxuICAgIC8vIHdpbGwgYmUgbm90aWZpZWQgb2Ygc3ppbWVrL3NpZ25hdHVyZV9wYWQncyBvbkJlZ2luIGV2ZW50XHJcbiAgICBjb25zb2xlLmxvZygnYmVnaW4gZHJhd2luZycpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19