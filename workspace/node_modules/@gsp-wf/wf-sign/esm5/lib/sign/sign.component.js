/**
 * @fileoverview added by tsickle
 * Generated from: lib/sign/sign.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';
import { SignatureComponent } from '../signature/signature.component';
var SignComponent = /** @class */ (function () {
    function SignComponent() {
        // 抛出选中的事件
        this.toDataUrlEvent = new EventEmitter();
        this.isDrawEvent = new EventEmitter();
        this.imageType = "image/png";
        this.imageQuality = 1;
        this.isDraw = false;
        this.signaturePadOptions = {
            // passed through to szimek/signature_pad constructor
            'minWidth': 1,
            'canvasWidth': 500,
            'canvasHeight': 240
        };
    }
    /**
     * @return {?}
     */
    SignComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    SignComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // this.signaturePad is now available
        this.signaturePad.set('minWidth', 1); // set szimek/signature_pad options at runtime
        this.signaturePad.set('canvasWidth', this.canvasDiv.nativeElement.clientWidth);
        this.signaturePad.clear(); // invoke functions from szimek/signature_pad API
        this.signaturePad.setImageBackground();
    };
    /**
     * @return {?}
     */
    SignComponent.prototype.confirm = /**
     * @return {?}
     */
    function () {
        console.log(this.signaturePad.toDataURL(this.imageType, this.imageQuality));
        this.signaturePad.setWaterMark(new Date());
        this.toDataUrlEvent.emit(this.signaturePad.toDataURL(this.imageType, this.imageQuality));
    };
    /**
     * @return {?}
     */
    SignComponent.prototype.reset = /**
     * @return {?}
     */
    function () {
        this.signaturePad.clear();
        this.isDraw = false;
        this.isDrawEvent.emit(this.isDraw);
    };
    /**
     * @return {?}
     */
    SignComponent.prototype.drawComplete = /**
     * @return {?}
     */
    function () {
        this.isDraw = true;
        this.isDrawEvent.emit(this.isDraw);
        // will be notified of szimek/signature_pad's onEnd event
        //console.log(this.signaturePad.toDataURL());
    };
    /**
     * @return {?}
     */
    SignComponent.prototype.drawStart = /**
     * @return {?}
     */
    function () {
        // will be notified of szimek/signature_pad's onBegin event
        console.log('begin drawing');
    };
    SignComponent.decorators = [
        { type: Component, args: [{
                    selector: 'wf-sign-sign',
                    template: "<div class=\"fm-feature-suggestion fm-feature-section--gutter\">\r\n    <div #canvastitle style=\"padding:2px 2px 2px 0;text-align:left;width:100%;height: 21px;\">\r\n        <span style=\"font-size: 15px;color: #999999;\">\u7B7E\u540D\u533A\u57DF</span>\r\n      </div>\r\n      <wf-sign-signature  [options]=\"signaturePadOptions\" (onBeginEvent)=\"drawStart()\" (onEndEvent)=\"drawComplete()\"></wf-sign-signature>\r\n  <div class=\"fm-feature-suggestion--bar\">\r\n    <ul class=\"suggestion--bar-common\">\r\n      <li class=\"suggestion--bar-item\" (click)=\"confirm()\">\r\n        <span>\u786E\u8BA4</span>\r\n      </li>\r\n      <li class=\"suggestion--bar-item\" (click)=\"reset()\">\r\n        <span>\u91CD\u7F6E</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n",
                    styles: [".fm-page-main1{overflow:hidden}.fm-utils-flex-column{display:flex;flex-direction:column}.fm-page{position:absolute;top:0;left:0;bottom:0;right:0;display:flex;flex-direction:column;background:#fff;font-size:13px;line-height:18px}.fm-page-main{flex-basis:0;flex-shrink:1;flex-grow:1;overflow-x:hidden;overflow-y:auto;position:relative}.fm-feature-section--gutter{margin:0 0 12px}.fm-feature-suggestion{background:#fff;padding:12px 16px}.fm-feature-suggestion .fm-feature-suggestion--bar{display:flex;flex-direction:row;align-items:center;color:#888}"]
                }] }
    ];
    /** @nocollapse */
    SignComponent.ctorParameters = function () { return []; };
    SignComponent.propDecorators = {
        signaturePad: [{ type: ViewChild, args: [SignatureComponent,] }],
        canvasDiv: [{ type: ViewChild, args: ['canvastitle',] }],
        toDataUrlEvent: [{ type: Output }],
        isDrawEvent: [{ type: Output }],
        imageType: [{ type: Input }],
        imageQuality: [{ type: Input }]
    };
    return SignComponent;
}());
export { SignComponent };
if (false) {
    /** @type {?} */
    SignComponent.prototype.signaturePad;
    /** @type {?} */
    SignComponent.prototype.canvasDiv;
    /** @type {?} */
    SignComponent.prototype.toDataUrlEvent;
    /** @type {?} */
    SignComponent.prototype.isDrawEvent;
    /** @type {?} */
    SignComponent.prototype.imageType;
    /** @type {?} */
    SignComponent.prototype.imageQuality;
    /**
     * @type {?}
     * @private
     */
    SignComponent.prototype.isDraw;
    /** @type {?} */
    SignComponent.prototype.signaturePadOptions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXNpZ24vIiwic291cmNlcyI6WyJsaWIvc2lnbi9zaWduLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXVCLFNBQVMsRUFBNkIsVUFBVSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdJLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRXRFO0lBd0JFOztRQWRVLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNwQyxnQkFBVyxHQUFDLElBQUksWUFBWSxFQUFFLENBQUM7UUFDaEMsY0FBUyxHQUFHLFdBQVcsQ0FBQztRQUN4QixpQkFBWSxHQUFHLENBQUMsQ0FBQztRQUNsQixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBSXZCLHdCQUFtQixHQUFXOztZQUM1QixVQUFVLEVBQUUsQ0FBQztZQUNiLGFBQWEsRUFBRSxHQUFHO1lBQ2xCLGNBQWMsRUFBRSxHQUFHO1NBQ3BCLENBQUM7SUFFYyxDQUFDOzs7O0lBRWpCLGdDQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7SUFFRCx1Q0FBZTs7O0lBQWY7UUFDRSxxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsOENBQThDO1FBQ3BGLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMvRSxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsaURBQWlEO1FBQzVFLElBQUksQ0FBQyxZQUFZLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUN6QyxDQUFDOzs7O0lBRUQsK0JBQU87OztJQUFQO1FBQ0UsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1FBQzNFLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQzFGLENBQUM7Ozs7SUFDRCw2QkFBSzs7O0lBQUw7UUFDRSxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzFCLElBQUksQ0FBQyxNQUFNLEdBQUMsS0FBSyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7O0lBRUQsb0NBQVk7OztJQUFaO1FBQ0UsSUFBSSxDQUFDLE1BQU0sR0FBQyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25DLHlEQUF5RDtRQUN6RCw2Q0FBNkM7SUFDL0MsQ0FBQzs7OztJQUVELGlDQUFTOzs7SUFBVDtRQUNFLDJEQUEyRDtRQUMzRCxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7O2dCQTFERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLDZ4QkFBb0M7O2lCQUVyQzs7Ozs7K0JBR0UsU0FBUyxTQUFDLGtCQUFrQjs0QkFDNUIsU0FBUyxTQUFDLGFBQWE7aUNBRXZCLE1BQU07OEJBQ04sTUFBTTs0QkFDTixLQUFLOytCQUNMLEtBQUs7O0lBK0NSLG9CQUFDO0NBQUEsQUE1REQsSUE0REM7U0F2RFksYUFBYTs7O0lBRXhCLHFDQUFnRTs7SUFDaEUsa0NBQXVEOztJQUV2RCx1Q0FBOEM7O0lBQzlDLG9DQUF5Qzs7SUFDekMsa0NBQWlDOztJQUNqQyxxQ0FBMEI7Ozs7O0lBQzFCLCtCQUF1Qjs7SUFJdkIsNENBSUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBPbkluaXQsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYsIEhvc3RMaXN0ZW5lciwgRWxlbWVudFJlZixJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU2lnbmF0dXJlQ29tcG9uZW50IH0gZnJvbSAnLi4vc2lnbmF0dXJlL3NpZ25hdHVyZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd3Zi1zaWduLXNpZ24nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zaWduLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zaWduLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2lnbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBWaWV3Q2hpbGQoU2lnbmF0dXJlQ29tcG9uZW50KSBzaWduYXR1cmVQYWQ6IFNpZ25hdHVyZUNvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKCdjYW52YXN0aXRsZScpIHB1YmxpYyBjYW52YXNEaXY6IEVsZW1lbnRSZWY7XHJcbiAgLy8g5oqb5Ye66YCJ5Lit55qE5LqL5Lu2XHJcbiAgQE91dHB1dCgpIHRvRGF0YVVybEV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBpc0RyYXdFdmVudD1uZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgQElucHV0KCkgaW1hZ2VUeXBlID0gXCJpbWFnZS9wbmdcIjtcclxuICBASW5wdXQoKSBpbWFnZVF1YWxpdHkgPSAxO1xyXG4gIHByaXZhdGUgaXNEcmF3ID0gZmFsc2U7XHJcblxyXG4gIFxyXG5cclxuICBzaWduYXR1cmVQYWRPcHRpb25zOiBPYmplY3QgPSB7IC8vIHBhc3NlZCB0aHJvdWdoIHRvIHN6aW1lay9zaWduYXR1cmVfcGFkIGNvbnN0cnVjdG9yXHJcbiAgICAnbWluV2lkdGgnOiAxLFxyXG4gICAgJ2NhbnZhc1dpZHRoJzogNTAwLFxyXG4gICAgJ2NhbnZhc0hlaWdodCc6IDI0MFxyXG4gIH07XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgLy8gdGhpcy5zaWduYXR1cmVQYWQgaXMgbm93IGF2YWlsYWJsZVxyXG4gICAgdGhpcy5zaWduYXR1cmVQYWQuc2V0KCdtaW5XaWR0aCcsIDEpOyAvLyBzZXQgc3ppbWVrL3NpZ25hdHVyZV9wYWQgb3B0aW9ucyBhdCBydW50aW1lXHJcbiAgICB0aGlzLnNpZ25hdHVyZVBhZC5zZXQoJ2NhbnZhc1dpZHRoJywgdGhpcy5jYW52YXNEaXYubmF0aXZlRWxlbWVudC5jbGllbnRXaWR0aCk7XHJcbiAgICB0aGlzLnNpZ25hdHVyZVBhZC5jbGVhcigpOyAvLyBpbnZva2UgZnVuY3Rpb25zIGZyb20gc3ppbWVrL3NpZ25hdHVyZV9wYWQgQVBJXHJcbiAgICB0aGlzLnNpZ25hdHVyZVBhZC5zZXRJbWFnZUJhY2tncm91bmQoKTtcclxuICB9XHJcblxyXG4gIGNvbmZpcm0oKSB7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzLnNpZ25hdHVyZVBhZC50b0RhdGFVUkwodGhpcy5pbWFnZVR5cGUsdGhpcy5pbWFnZVF1YWxpdHkpKTtcclxuICAgIHRoaXMuc2lnbmF0dXJlUGFkLnNldFdhdGVyTWFyayhuZXcgRGF0ZSgpKTtcclxuICAgIHRoaXMudG9EYXRhVXJsRXZlbnQuZW1pdCh0aGlzLnNpZ25hdHVyZVBhZC50b0RhdGFVUkwodGhpcy5pbWFnZVR5cGUsdGhpcy5pbWFnZVF1YWxpdHkpKTtcclxuICB9XHJcbiAgcmVzZXQoKSB7XHJcbiAgICB0aGlzLnNpZ25hdHVyZVBhZC5jbGVhcigpO1xyXG4gICAgdGhpcy5pc0RyYXc9ZmFsc2U7XHJcbiAgICB0aGlzLmlzRHJhd0V2ZW50LmVtaXQodGhpcy5pc0RyYXcpO1xyXG4gIH1cclxuXHJcbiAgZHJhd0NvbXBsZXRlKCkge1xyXG4gICAgdGhpcy5pc0RyYXc9dHJ1ZTtcclxuICAgIHRoaXMuaXNEcmF3RXZlbnQuZW1pdCh0aGlzLmlzRHJhdyk7XHJcbiAgICAvLyB3aWxsIGJlIG5vdGlmaWVkIG9mIHN6aW1lay9zaWduYXR1cmVfcGFkJ3Mgb25FbmQgZXZlbnRcclxuICAgIC8vY29uc29sZS5sb2codGhpcy5zaWduYXR1cmVQYWQudG9EYXRhVVJMKCkpO1xyXG4gIH1cclxuXHJcbiAgZHJhd1N0YXJ0KCkge1xyXG4gICAgLy8gd2lsbCBiZSBub3RpZmllZCBvZiBzemltZWsvc2lnbmF0dXJlX3BhZCdzIG9uQmVnaW4gZXZlbnRcclxuICAgIGNvbnNvbGUubG9nKCdiZWdpbiBkcmF3aW5nJyk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=