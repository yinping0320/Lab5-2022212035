/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, TemplateRef, ViewChild } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { LoadingService } from '@farris/ui-loading';
import { NotifyService } from '@farris/ui-notify';
import { of, Subject } from 'rxjs';
import { CommonComment } from '../../entity/comment';
import { CommonCommentFilter } from '../../entity/commonCommentFilter';
import { I18nService } from '../../service/i18n/i18n.service';
import { TaskService } from '../../service/task.service';
var CommentManageComponent = /** @class */ (function () {
    function CommentManageComponent(i18nService, taskService, notify, loadingService) {
        this.i18nService = i18nService;
        this.taskService = taskService;
        this.notify = notify;
        this.loadingService = loadingService;
        this.commentList = [];
        this.originCommentList = [];
        this.commentColumns = [];
        this.confirmSubject = new Subject(); //点击确定
        //点击确定
        this.cancelSubject = new Subject(); //点击取消
        /**
         * 系统预置的不允许编辑删除
         * @param data data.rowData为实体数据
         * @return
         */
        this.beforeEdit = (/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data.rowData.userId == '*') {
                return of(false);
            }
            return of(true);
        });
    }
    /**
     * @return {?}
     */
    CommentManageComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.commentColumns = [{
                field: 'message',
                width: 100,
                title: this.i18nService.getValue('comment.static.content'),
                editor: { type: EditorTypes.TEXTBOX, options: {} },
            }, {
                field: 'userId',
                width: 20,
                title: this.i18nService.getValue('comment.static.type'),
                template: this.commentTypeCell
            }, {
                field: 'operate',
                width: 20,
                title: this.i18nService.getValue('comment.static.operate'),
                template: this.commentOperateCell
            }];
        //加载意见列表
        this.loadComments();
    };
    /**
   * 点击常用意见，获取用户常用意见列表
   */
    /**
     * 点击常用意见，获取用户常用意见列表
     * @return {?}
     */
    CommentManageComponent.prototype.loadComments = /**
     * 点击常用意见，获取用户常用意见列表
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var load = this.loadingService.show();
        this.taskService.getCommentList(this.filter).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            load.close();
            _this.commentList = data;
            _this.originCommentList = JSON.parse(JSON.stringify(data));
        }), (/**
         * @return {?}
         */
        function () {
            load.close();
        }));
    };
    /**
     * 新增一条常用意见
     */
    /**
     * 新增一条常用意见
     * @return {?}
     */
    CommentManageComponent.prototype.addCommonComment = /**
     * 新增一条常用意见
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var newEntity = CommonComment.newEntity();
        newEntity.sortOrder = this.commentList.length + 1;
        if (this.filter && this.filter.type) {
            newEntity.type = this.filter.type;
        }
        this.commentList = this.commentList.concat(newEntity);
        //新增后直接编辑单元格
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.dataGrid.editCell(newEntity.id, 'message');
        }), 100);
    };
    /**
     * 删除一条意见 data.rowData
     */
    /**
     * 删除一条意见 data.rowData
     * @param {?} data
     * @return {?}
     */
    CommentManageComponent.prototype.deleteComment = /**
     * 删除一条意见 data.rowData
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.rowData.userId !== '*') {
            this.commentList = this.commentList.filter((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.id != data.rowData.id; }));
            this.originCommentList = this.originCommentList.filter((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.id != data.rowData.id; }));
            this.dataGrid.loadData(this.commentList);
            this.taskService.deleteComment(data.rowData.id).subscribe((/**
             * @return {?}
             */
            function () { }));
        }
    };
    /**
     * 常用意见点击保存
     */
    /**
     * 常用意见点击保存
     * @return {?}
     */
    CommentManageComponent.prototype.saveCommonComment = /**
     * 常用意见点击保存
     * @return {?}
     */
    function () {
        var _this = this;
        this.dataGrid.endCellEdit();
        this.commentList = this.commentList.filter((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.message; }));
        this.commentList.forEach((/**
         * @param {?} comment
         * @return {?}
         */
        function (comment) {
            if (_this.taskService.getBytesLength(comment.message) > 255) {
                _this.notify.warning(_this.i18nService.getValue('cueWords.commonCommentTooLong'));
                _this.dataGrid.editCell(comment.id, 'message');
                throw new Error("");
            }
        }));
        this.commentList.forEach((/**
         * @param {?} comment
         * @return {?}
         */
        function (comment) {
            /** @type {?} */
            var origin = _this.originCommentList.find((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.id == comment.id; }));
            if (!origin || comment.message !== origin.message || comment.sortOrder != origin.sortOrder) {
                _this.taskService.addComment(comment).subscribe((/**
                 * @return {?}
                 */
                function () { }));
            }
        }));
        //此处已返回给farris
        this.confirmSubject.next({ action: 'submit', data: this.commentList });
    };
    /**
     * 点击取消（此处已返回给farris）
     */
    /**
     * 点击取消（此处已返回给farris）
     * @return {?}
     */
    CommentManageComponent.prototype.clickCancel = /**
     * 点击取消（此处已返回给farris）
     * @return {?}
     */
    function () {
        this.commentList = this.commentList.filter((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.message; }));
        this.cancelSubject.next({ action: 'cancel', data: this.originCommentList });
    };
    /**
     * @return {?}
     */
    CommentManageComponent.prototype.getConfirmSUbject = /**
     * @return {?}
     */
    function () {
        return this.confirmSubject.asObservable();
    };
    /**
     * @return {?}
     */
    CommentManageComponent.prototype.getCancelSubject = /**
     * @return {?}
     */
    function () {
        return this.cancelSubject.asObservable();
    };
    CommentManageComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-comment-manage',
                    template: "<div class=\"task-comment-div\">\r\n  <div class=\"task-comment-datagrid-div\">\r\n    <farris-datagrid\r\n      #dataGrid\r\n      [data]=\"commentList\"\r\n      [columns]=\"commentColumns\"\r\n      [editable]=\"true\"\r\n      [fit]=\"true\"\r\n      [editMode]=\"'cell'\"\r\n      [pagination]=\"false\"\r\n      [fitColumns]=\"true\"\r\n      [clickToEdit]=\"true\"\r\n      [beforeEdit]=\"beforeEdit\"\r\n      [idField]=\"'id'\"\r\n    >\r\n    </farris-datagrid>\r\n  </div>\r\n  <div\r\n    class=\"task-comment-add task-comment-add-common\"\r\n    (click)=\"addCommonComment()\"\r\n  >\r\n    <span class=\"f-icon f-icon-plus mr-1\"></span>\r\n    <span>{{ \"comment.static.clickToAdd\" | translate }}</span>\r\n  </div>\r\n</div>\r\n\r\n<!-- \u5E38\u7528\u610F\u89C1\u7C7B\u522B -->\r\n<ng-template #commentTypeCell let-ctx>\r\n  <div>\r\n    <span\r\n      *ngIf=\"ctx.rowData.userId === '*'\"\r\n      class=\"task-comment-type task-comment-type-blue\"\r\n      >{{ \"comment.static.public\" | translate }}</span\r\n    >\r\n    <span\r\n      *ngIf=\"ctx.rowData.userId !== '*'\"\r\n      class=\"task-comment-type task-comment-type-yellow\"\r\n      >{{ \"comment.static.private\" | translate }}</span\r\n    >\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- \u5E38\u7528\u610F\u89C1\u64CD\u4F5C -->\r\n<ng-template #commentOperateCell let-ctx>\r\n  <div\r\n    *ngIf=\"ctx.rowData.userId !== '*'\"\r\n    class=\"btn-link\"\r\n    style=\"padding: 5px 0\"\r\n    (click)=\"deleteComment(ctx)\"\r\n  >\r\n    {{ \"comment.static.delete\" | translate }}\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- \u5E38\u7528\u610F\u89C1\u7EF4\u62A4\u6309\u94AE -->\r\n<ng-template #formButtonRef>\r\n  <button class=\"btn btn-secondary mr-2\" (click)=\"clickCancel()\">\r\n    {{ \"comment.static.cancel\" | translate }}\r\n  </button>\r\n  <button class=\"btn btn-primary\" (click)=\"saveCommonComment()\">\r\n    {{ \"comment.static.confirm\" | translate }}\r\n  </button>\r\n</ng-template>\r\n",
                    styles: [".task-comment-div{display:flex;flex-direction:column;height:100%}.task-comment-datagrid-div{display:flex;flex-grow:0;overflow:hidden;padding:0 24px;height:100%}.task-comment-type{padding:2px 6px;border-radius:4px;font-size:12px}.task-comment-type-blue{background:#eef5ff;border:0 solid #aed1ff;color:#5ea4ff}.task-comment-type-yellow{background:#fef5ec;border:0 solid #fad0a1;color:#f5a144}.task-comment-add{display:flex;justify-content:center;align-items:center;margin:0 24px;cursor:pointer;overflow:hidden;font-size:12px;text-align:center;padding:6px;border-radius:4px}.task-comment-add-common{color:#a8adb8;background:#f4f6fc;border:1px dashed #d2d7e2}.task-comment-add:hover{background:rgba(238,245,255,.8);border:1px solid rgba(82,157,255,.4)}"]
                }] }
    ];
    /** @nocollapse */
    CommentManageComponent.ctorParameters = function () { return [
        { type: I18nService },
        { type: TaskService },
        { type: NotifyService },
        { type: LoadingService }
    ]; };
    CommentManageComponent.propDecorators = {
        filter: [{ type: Input }],
        dataGrid: [{ type: ViewChild, args: ['dataGrid',] }],
        commentTypeCell: [{ type: ViewChild, args: ['commentTypeCell',] }],
        commentOperateCell: [{ type: ViewChild, args: ['commentOperateCell',] }],
        buttons: [{ type: ViewChild, args: ['formButtonRef',] }]
    };
    return CommentManageComponent;
}());
export { CommentManageComponent };
if (false) {
    /** @type {?} */
    CommentManageComponent.prototype.commentList;
    /** @type {?} */
    CommentManageComponent.prototype.originCommentList;
    /** @type {?} */
    CommentManageComponent.prototype.commentColumns;
    /** @type {?} */
    CommentManageComponent.prototype.confirmSubject;
    /** @type {?} */
    CommentManageComponent.prototype.cancelSubject;
    /** @type {?} */
    CommentManageComponent.prototype.filter;
    /** @type {?} */
    CommentManageComponent.prototype.dataGrid;
    /** @type {?} */
    CommentManageComponent.prototype.commentTypeCell;
    /** @type {?} */
    CommentManageComponent.prototype.commentOperateCell;
    /** @type {?} */
    CommentManageComponent.prototype.buttons;
    /**
     * 系统预置的不允许编辑删除
     * \@param data data.rowData为实体数据
     * \@return
     * @type {?}
     */
    CommentManageComponent.prototype.beforeEdit;
    /**
     * @type {?}
     * @private
     */
    CommentManageComponent.prototype.i18nService;
    /**
     * @type {?}
     * @private
     */
    CommentManageComponent.prototype.taskService;
    /**
     * @type {?}
     * @private
     */
    CommentManageComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    CommentManageComponent.prototype.loadingService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudC1tYW5hZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi10YXNrLWhhbmRsZXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9jb21tZW50LW1hbmFnZS9jb21tZW50LW1hbmFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakYsT0FBTyxFQUFjLGlCQUFpQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDcEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzFELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbEQsT0FBTyxFQUF3QixFQUFFLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXpEO0lBb0JFLGdDQUNVLFdBQXdCLEVBQ3hCLFdBQXdCLEVBQ3hCLE1BQXFCLEVBQ3JCLGNBQThCO1FBSDlCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLFdBQU0sR0FBTixNQUFNLENBQWU7UUFDckIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBakJ4QyxnQkFBVyxHQUFvQixFQUFFLENBQUM7UUFDbEMsc0JBQWlCLEdBQW9CLEVBQUUsQ0FBQztRQUN4QyxtQkFB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RSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxDQUFDO0lBQzlFLENBQUM7Ozs7SUFjRCxrREFBaUI7OztJQUFqQjtRQUNFLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM1QyxDQUFDOzs7O0lBRUQsaURBQWdCOzs7SUFBaEI7UUFDRSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDM0MsQ0FBQzs7Z0JBNUlGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixpOURBQThDOztpQkFFL0M7Ozs7Z0JBUFEsV0FBVztnQkFDWCxXQUFXO2dCQUxYLGFBQWE7Z0JBRGIsY0FBYzs7O3lCQXFCcEIsS0FBSzsyQkFFTCxTQUFTLFNBQUMsVUFBVTtrQ0FDcEIsU0FBUyxTQUFDLGlCQUFpQjtxQ0FDM0IsU0FBUyxTQUFDLG9CQUFvQjswQkFDOUIsU0FBUyxTQUFDLGVBQWU7O0lBNEg1Qiw2QkFBQztDQUFBLEFBOUlELElBOElDO1NBeklZLHNCQUFzQjs7O0lBRWpDLDZDQUFrQzs7SUFDbEMsbURBQXdDOztJQUN4QyxnREFBa0M7O0lBQ2xDLGdEQUErQjs7SUFDL0IsK0NBQThCOztJQUU5Qix3Q0FBcUM7O0lBRXJDLDBDQUFtRDs7SUFDbkQsaURBQWdFOztJQUNoRSxvREFBc0U7O0lBQ3RFLHlDQUFzRDs7Ozs7OztJQTZHdEQsNENBS0M7Ozs7O0lBL0dDLDZDQUFnQzs7Ozs7SUFDaEMsNkNBQWdDOzs7OztJQUNoQyx3Q0FBNkI7Ozs7O0lBQzdCLGdEQUFzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXRhQ29sdW1uLCBEYXRhZ3JpZENvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBFZGl0b3JUeXBlcyB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQtZWRpdG9ycyc7XHJcbmltcG9ydCB7IExvYWRpbmdTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2FkaW5nJztcclxuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgZm9ya0pvaW4sIE9ic2VydmFibGUsIG9mLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IENvbW1vbkNvbW1lbnQgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29tbWVudCc7XHJcbmltcG9ydCB7IENvbW1vbkNvbW1lbnRGaWx0ZXIgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29tbW9uQ29tbWVudEZpbHRlcic7XHJcbmltcG9ydCB7IEkxOG5TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZS9pMThuL2kxOG4uc2VydmljZSc7XHJcbmltcG9ydCB7IFRhc2tTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZS90YXNrLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItY29tbWVudC1tYW5hZ2UnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jb21tZW50LW1hbmFnZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY29tbWVudC1tYW5hZ2UuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ29tbWVudE1hbmFnZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIGNvbW1lbnRMaXN0OiBDb21tb25Db21tZW50W10gPSBbXTtcclxuICBvcmlnaW5Db21tZW50TGlzdDogQ29tbW9uQ29tbWVudFtdID0gW107XHJcbiAgY29tbWVudENvbHVtbnM6IERhdGFDb2x1bW5bXSA9IFtdO1xyXG4gIGNvbmZpcm1TdWJqZWN0ID0gbmV3IFN1YmplY3QoKTsvL+eCueWHu+ehruWumlxyXG4gIGNhbmNlbFN1YmplY3QgPSBuZXcgU3ViamVjdCgpOy8v54K55Ye75Y+W5raIXHJcblxyXG4gIEBJbnB1dCgpIGZpbHRlcjogQ29tbW9uQ29tbWVudEZpbHRlcjsvL+aEj+ingeexu+Wei1xyXG5cclxuICBAVmlld0NoaWxkKCdkYXRhR3JpZCcpIGRhdGFHcmlkOiBEYXRhZ3JpZENvbXBvbmVudDtcclxuICBAVmlld0NoaWxkKCdjb21tZW50VHlwZUNlbGwnKSBjb21tZW50VHlwZUNlbGw6IFRlbXBsYXRlUmVmPGFueT47Ly/luLjnlKjmhI/op4HnsbvliKvmqKHmnb9cclxuICBAVmlld0NoaWxkKCdjb21tZW50T3BlcmF0ZUNlbGwnKSBjb21tZW50T3BlcmF0ZUNlbGw6IFRlbXBsYXRlUmVmPGFueT47Ly/luLjnlKjmhI/op4HliKDpmaRcclxuICBAVmlld0NoaWxkKCdmb3JtQnV0dG9uUmVmJykgYnV0dG9uczogVGVtcGxhdGVSZWY8YW55PjsvL+WPlua2iOehruiupOaMiemSrlxyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgaTE4blNlcnZpY2U6IEkxOG5TZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSB0YXNrU2VydmljZTogVGFza1NlcnZpY2UsXHJcbiAgICBwcml2YXRlIG5vdGlmeTogTm90aWZ5U2VydmljZSxcclxuICAgIHByaXZhdGUgbG9hZGluZ1NlcnZpY2U6IExvYWRpbmdTZXJ2aWNlLFxyXG4gICkge1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLmNvbW1lbnRDb2x1bW5zID0gW3tcclxuICAgICAgZmllbGQ6ICdtZXNzYWdlJyxcclxuICAgICAgd2lkdGg6IDEwMCxcclxuICAgICAgdGl0bGU6IHRoaXMuaTE4blNlcnZpY2UuZ2V0VmFsdWUoJ2NvbW1lbnQuc3RhdGljLmNvbnRlbnQnKSxcclxuICAgICAgZWRpdG9yOiB7IHR5cGU6IEVkaXRvclR5cGVzLlRFWFRCT1gsIG9wdGlvbnM6IHt9IH0sXHJcbiAgICB9LCB7XHJcbiAgICAgIGZpZWxkOiAndXNlcklkJyxcclxuICAgICAgd2lkdGg6IDIwLFxyXG4gICAgICB0aXRsZTogdGhpcy5pMThuU2VydmljZS5nZXRWYWx1ZSgnY29tbWVudC5zdGF0aWMudHlwZScpLFxyXG4gICAgICB0ZW1wbGF0ZTogdGhpcy5jb21tZW50VHlwZUNlbGxcclxuICAgIH0sIHtcclxuICAgICAgZmllbGQ6ICdvcGVyYXRlJyxcclxuICAgICAgd2lkdGg6IDIwLFxyXG4gICAgICB0aXRsZTogdGhpcy5pMThuU2VydmljZS5nZXRWYWx1ZSgnY29tbWVudC5zdGF0aWMub3BlcmF0ZScpLFxyXG4gICAgICB0ZW1wbGF0ZTogdGhpcy5jb21tZW50T3BlcmF0ZUNlbGxcclxuICAgIH1dO1xyXG4gICAgLy/liqDovb3mhI/op4HliJfooahcclxuICAgIHRoaXMubG9hZENvbW1lbnRzKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICog54K55Ye75bi455So5oSP6KeB77yM6I635Y+W55So5oi35bi455So5oSP6KeB5YiX6KGoXHJcbiAqL1xyXG4gIGxvYWRDb21tZW50cygpIHtcclxuICAgIGNvbnN0IGxvYWQgPSB0aGlzLmxvYWRpbmdTZXJ2aWNlLnNob3coKTtcclxuICAgIHRoaXMudGFza1NlcnZpY2UuZ2V0Q29tbWVudExpc3QodGhpcy5maWx0ZXIpLnN1YnNjcmliZSgoZGF0YTogYW55W10pID0+IHtcclxuICAgICAgbG9hZC5jbG9zZSgpO1xyXG4gICAgICB0aGlzLmNvbW1lbnRMaXN0ID0gZGF0YTtcclxuICAgICAgdGhpcy5vcmlnaW5Db21tZW50TGlzdCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xyXG4gICAgfSwgKCkgPT4ge1xyXG4gICAgICBsb2FkLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaWsOWinuS4gOadoeW4uOeUqOaEj+ingVxyXG4gICAqL1xyXG4gIGFkZENvbW1vbkNvbW1lbnQoKSB7XHJcbiAgICBjb25zdCBuZXdFbnRpdHkgPSBDb21tb25Db21tZW50Lm5ld0VudGl0eSgpO1xyXG4gICAgbmV3RW50aXR5LnNvcnRPcmRlciA9IHRoaXMuY29tbWVudExpc3QubGVuZ3RoICsgMTtcclxuICAgIGlmICh0aGlzLmZpbHRlciAmJiB0aGlzLmZpbHRlci50eXBlKSB7XHJcbiAgICAgIG5ld0VudGl0eS50eXBlID0gdGhpcy5maWx0ZXIudHlwZTtcclxuICAgIH1cclxuICAgIHRoaXMuY29tbWVudExpc3QgPSB0aGlzLmNvbW1lbnRMaXN0LmNvbmNhdChuZXdFbnRpdHkpO1xyXG4gICAgLy/mlrDlop7lkI7nm7TmjqXnvJbovpHljZXlhYPmoLxcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICB0aGlzLmRhdGFHcmlkLmVkaXRDZWxsKG5ld0VudGl0eS5pZCwgJ21lc3NhZ2UnKTtcclxuICAgIH0sIDEwMCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliKDpmaTkuIDmnaHmhI/op4EgZGF0YS5yb3dEYXRhXHJcbiAgICovXHJcbiAgZGVsZXRlQ29tbWVudChkYXRhOiBhbnkpIHtcclxuICAgIGlmIChkYXRhLnJvd0RhdGEudXNlcklkICE9PSAnKicpIHtcclxuICAgICAgdGhpcy5jb21tZW50TGlzdCA9IHRoaXMuY29tbWVudExpc3QuZmlsdGVyKGMgPT4gYy5pZCAhPSBkYXRhLnJvd0RhdGEuaWQpO1xyXG4gICAgICB0aGlzLm9yaWdpbkNvbW1lbnRMaXN0ID0gdGhpcy5vcmlnaW5Db21tZW50TGlzdC5maWx0ZXIoYyA9PiBjLmlkICE9IGRhdGEucm93RGF0YS5pZCk7XHJcbiAgICAgIHRoaXMuZGF0YUdyaWQubG9hZERhdGEodGhpcy5jb21tZW50TGlzdCk7XHJcbiAgICAgIHRoaXMudGFza1NlcnZpY2UuZGVsZXRlQ29tbWVudChkYXRhLnJvd0RhdGEuaWQpLnN1YnNjcmliZSgoKSA9PiB7IH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5bi455So5oSP6KeB54K55Ye75L+d5a2YXHJcbiAgICovXHJcbiAgc2F2ZUNvbW1vbkNvbW1lbnQoKSB7XHJcbiAgICB0aGlzLmRhdGFHcmlkLmVuZENlbGxFZGl0KCk7XHJcbiAgICB0aGlzLmNvbW1lbnRMaXN0ID0gdGhpcy5jb21tZW50TGlzdC5maWx0ZXIoYyA9PiBjLm1lc3NhZ2UpO1xyXG4gICAgdGhpcy5jb21tZW50TGlzdC5mb3JFYWNoKGNvbW1lbnQgPT4ge1xyXG4gICAgICBpZiAodGhpcy50YXNrU2VydmljZS5nZXRCeXRlc0xlbmd0aChjb21tZW50Lm1lc3NhZ2UpID4gMjU1KSB7XHJcbiAgICAgICAgdGhpcy5ub3RpZnkud2FybmluZyh0aGlzLmkxOG5TZXJ2aWNlLmdldFZhbHVlKCdjdWVXb3Jkcy5jb21tb25Db21tZW50VG9vTG9uZycpKTtcclxuICAgICAgICB0aGlzLmRhdGFHcmlkLmVkaXRDZWxsKGNvbW1lbnQuaWQsICdtZXNzYWdlJyk7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiXCIpO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgdGhpcy5jb21tZW50TGlzdC5mb3JFYWNoKGNvbW1lbnQgPT4ge1xyXG4gICAgICBsZXQgb3JpZ2luID0gdGhpcy5vcmlnaW5Db21tZW50TGlzdC5maW5kKGMgPT4gYy5pZCA9PSBjb21tZW50LmlkKTtcclxuICAgICAgaWYgKCFvcmlnaW4gfHwgY29tbWVudC5tZXNzYWdlICE9PSBvcmlnaW4ubWVzc2FnZSB8fCBjb21tZW50LnNvcnRPcmRlciAhPSBvcmlnaW4uc29ydE9yZGVyKSB7XHJcbiAgICAgICAgdGhpcy50YXNrU2VydmljZS5hZGRDb21tZW50KGNvbW1lbnQpLnN1YnNjcmliZSgoKSA9PiB7IH0pO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLy/mraTlpITlt7Lov5Tlm57nu5lmYXJyaXNcclxuICAgIHRoaXMuY29uZmlybVN1YmplY3QubmV4dCh7IGFjdGlvbjogJ3N1Ym1pdCcsIGRhdGE6IHRoaXMuY29tbWVudExpc3QgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDngrnlh7vlj5bmtojvvIjmraTlpITlt7Lov5Tlm57nu5lmYXJyaXPvvIlcclxuICAgKi9cclxuICBjbGlja0NhbmNlbCgpIHtcclxuICAgIHRoaXMuY29tbWVudExpc3QgPSB0aGlzLmNvbW1lbnRMaXN0LmZpbHRlcihjID0+IGMubWVzc2FnZSk7XHJcbiAgICB0aGlzLmNhbmNlbFN1YmplY3QubmV4dCh7IGFjdGlvbjogJ2NhbmNlbCcsIGRhdGE6IHRoaXMub3JpZ2luQ29tbWVudExpc3QgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDns7vnu5/pooTnva7nmoTkuI3lhYHorrjnvJbovpHliKDpmaRcclxuICAgKiBAcGFyYW0gZGF0YSBkYXRhLnJvd0RhdGHkuLrlrp7kvZPmlbDmja5cclxuICAgKiBAcmV0dXJuc1xyXG4gICAqL1xyXG4gIGJlZm9yZUVkaXQgPSAoZGF0YTogYW55KSA9PiB7XHJcbiAgICBpZiAoZGF0YS5yb3dEYXRhLnVzZXJJZCA9PSAnKicpIHtcclxuICAgICAgcmV0dXJuIG9mKGZhbHNlKTtcclxuICAgIH1cclxuICAgIHJldHVybiBvZih0cnVlKTtcclxuICB9XHJcblxyXG4gIGdldENvbmZpcm1TVWJqZWN0KCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25maXJtU3ViamVjdC5hc09ic2VydmFibGUoKTtcclxuICB9XHJcblxyXG4gIGdldENhbmNlbFN1YmplY3QoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybiB0aGlzLmNhbmNlbFN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=