/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var CompleteContext = /** @class */ (function () {
    function CompleteContext() {
    }
    return CompleteContext;
}());
export { CompleteContext };
if (false) {
    /** @type {?} */
    CompleteContext.prototype.workItemId;
    /** @type {?} */
    CompleteContext.prototype.conclusionValue;
    /** @type {?} */
    CompleteContext.prototype.comment;
    /** @type {?} */
    CompleteContext.prototype.signAssignees;
    /** @type {?} */
    CompleteContext.prototype.nextFlowNodes;
    /** @type {?} */
    CompleteContext.prototype.addendum;
    /** @type {?} */
    CompleteContext.prototype.verifySigned;
    /** @type {?} */
    CompleteContext.prototype.dynamicBackWardRule;
    /** @type {?} */
    CompleteContext.prototype.priority;
    /** @type {?} */
    CompleteContext.prototype.otherAssignNodes;
}
var Addendum = /** @class */ (function () {
    function Addendum() {
    }
    return Addendum;
}());
export { Addendum };
if (false) {
    /** @type {?} */
    Addendum.prototype.signature;
    /** @type {?} */
    Addendum.prototype.attachment;
}
var VerifySigned = /** @class */ (function () {
    function VerifySigned() {
    }
    return VerifySigned;
}());
export { VerifySigned };
if (false) {
    /** @type {?} */
    VerifySigned.prototype.certBase64Info;
    /** @type {?} */
    VerifySigned.prototype.msg;
    /** @type {?} */
    VerifySigned.prototype.signedmsg;
    /** @type {?} */
    VerifySigned.prototype.useCase;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGxldGUtY29udGV4dC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtdGFzay1oYW5kbGVyLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9jb21wbGV0ZS1jb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQTtJQUFBO0lBdUJBLENBQUM7SUFBRCxzQkFBQztBQUFELENBQUMsQUF2QkQsSUF1QkM7Ozs7SUFyQkcscUNBQW1COztJQUVuQiwwQ0FBd0I7O0lBRXhCLGtDQUFnQjs7SUFFaEIsd0NBQXdCOztJQUV4Qix3Q0FBOEI7O0lBRTlCLG1DQUFtQjs7SUFFbkIsdUNBQTRCOztJQUU1Qiw4Q0FBNEI7O0lBRTVCLG1DQUFpQjs7SUFFakIsMkNBQWlDOztBQUtyQztJQUFBO0lBS0EsQ0FBQztJQUFELGVBQUM7QUFBRCxDQUFDLEFBTEQsSUFLQzs7OztJQUhHLDZCQUFrQjs7SUFFbEIsOEJBQW1COztBQUd2QjtJQUFBO0lBU0EsQ0FBQztJQUFELG1CQUFDO0FBQUQsQ0FBQyxBQVRELElBU0M7Ozs7SUFQRyxzQ0FBdUI7O0lBRXZCLDJCQUFjOztJQUVkLGlDQUFrQjs7SUFFbEIsK0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmxvd05vZGVJbmZvIH0gZnJvbSAnLi9zdGFydC1wcm9jZXNzLXBheWxvYWQnO1xyXG5cclxuZXhwb3J0IGNsYXNzIENvbXBsZXRlQ29udGV4dCB7XHJcblxyXG4gICAgd29ya0l0ZW1JZDogc3RyaW5nO1xyXG5cclxuICAgIGNvbmNsdXNpb25WYWx1ZTogc3RyaW5nO1xyXG5cclxuICAgIGNvbW1lbnQ6IHN0cmluZztcclxuXHJcbiAgICBzaWduQXNzaWduZWVzOiBzdHJpbmdbXTtcclxuXHJcbiAgICBuZXh0Rmxvd05vZGVzOiBGbG93Tm9kZUluZm9bXTtcclxuXHJcbiAgICBhZGRlbmR1bTogQWRkZW5kdW07XHJcblxyXG4gICAgdmVyaWZ5U2lnbmVkPzogVmVyaWZ5U2lnbmVkO1xyXG5cclxuICAgIGR5bmFtaWNCYWNrV2FyZFJ1bGU6IHN0cmluZztcclxuXHJcbiAgICBwcmlvcml0eTogbnVtYmVyO1xyXG5cclxuICAgIG90aGVyQXNzaWduTm9kZXM6IEZsb3dOb2RlSW5mb1tdO1xyXG5cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBBZGRlbmR1bSB7XHJcblxyXG4gICAgc2lnbmF0dXJlOiBzdHJpbmc7XHJcblxyXG4gICAgYXR0YWNobWVudDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVmVyaWZ5U2lnbmVkIHtcclxuXHJcbiAgICBjZXJ0QmFzZTY0SW5mbzogc3RyaW5nO1xyXG5cclxuICAgIG1zZzogc3RyaW5nW107XHJcblxyXG4gICAgc2lnbmVkbXNnOiBzdHJpbmc7XHJcblxyXG4gICAgdXNlQ2FzZTogc3RyaW5nO1xyXG59XHJcbiJdfQ==