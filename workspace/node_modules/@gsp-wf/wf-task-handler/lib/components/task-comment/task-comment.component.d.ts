import { OnInit, EventEmitter } from '@angular/core';
import { DialogComponent } from '@farris/ui-dialog';
import { ControlValueAccessor } from '@angular/forms';
import { FDropdownDirective } from '@farris/ui-dropdown';
import { UploadDialogService } from '@gsp-svc/formdoc-upload';
import { MessagerService } from '@farris/ui-messager';
import { SignHereComponent } from '@gsp-wf/wf-sign';
import { AvatarComponent } from '@farris/ui-avatar';
import { DownloadService } from '@gsp-svc/file-load';
import { TaskService } from '../../service/task.service';
import { CommonComment } from '../../entity/comment';
import { LoadingService } from '@farris/ui-loading';
import { TaskCenterConfig } from '../../entity/task-center-config';
import { CommentManageComponent } from '../comment-manage/comment-manage.component';
export declare class TaskCommentComponent implements OnInit, ControlValueAccessor {
    private taskService;
    private uploadDialog;
    private messageService;
    private loadingService;
    showAttachment: boolean;
    showSign: boolean;
    showCommonComment: boolean;
    comment: string;
    placeholder: string;
    processInstanceId: string;
    textAreaHeight: number;
    defaultComment: string;
    curUserId: string;
    taskOrigin: string;
    TaskCenterConfig: TaskCenterConfig[];
    attachment: EventEmitter<{}>;
    signature: EventEmitter<{}>;
    commentDialog: DialogComponent;
    signDialog: DialogComponent;
    dropDownEl: FDropdownDirective;
    signaturePad: SignHereComponent;
    farrisAvatar: AvatarComponent;
    commentManageComp: CommentManageComponent;
    private _value;
    attachmentList: any[];
    ifShowAttachment: boolean;
    ifShowSign: boolean;
    signatureImage: string;
    tmpSignatureImage: string;
    downloadService: DownloadService;
    ifUseSign: boolean;
    ifUseImg: boolean;
    ifEnableSign: boolean;
    ifUploadImg: boolean;
    ifCanEditSign: boolean;
    originSignId: string;
    isShowCommonTips: boolean;
    commentList: CommonComment[];
    btnHover: {
        commentHover: boolean;
        attachmentHover: boolean;
        signHover: boolean;
    };
    value: any;
    onModelChange: (obj: any) => void;
    onModelTouched: (obj: any) => void;
    constructor(taskService: TaskService, uploadDialog: UploadDialogService, messageService: MessagerService, loadingService: LoadingService);
    ngOnInit(): void;
    /**
     * 弹出常用意见管理框
     */
    showCommentDialog(): void;
    /**
     * 点击常用意见，获取用户常用意见列表
     */
    loadComments(): void;
    /**
     * ControlValueAccessor必须实现的方法
     */
    writeValue(value: string): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    /**
     * 选择一条常用意见后事件
     */
    buttonClick(data: any): void;
    /**
     * 上传附件
     */
    uploadAttachment(): void;
    /**
     * 删除附件
     */
    attachmentDelete(attachment: any): void;
    /**
    * web端打开附件预览
    */
    attachmentPreview(metadataId: any): void;
    /**
     * 获取不同格式附件的缩略图
     */
    imageUrl(attachmentInfo: any): string;
    /**
     * 展示手写签名dialog
     */
    showSignDialog(): void;
    /**
     * 点击删除签名
     */
    clickToDeleteImage(): void;
    clickToUseSign(): void;
    clickToUploadImg(): void;
    /**
     * 手写签名点确定
     */
    clickToConfirm(): void;
    /**
     * 点击清空
     */
    clickToReset(): void;
    /**
     * 点击取消
     */
    clickToCancel(): void;
    /**
     * 上传图片后事件
     * event.base64 是图片信息,event.name是带后缀的图片名，event.type如image/jpeg
     */
    imgChange(event: any): void;
    /**
     * 上传签名
     * @param image
     */
    private uploadSignatureImg;
    /**
     * 获取用户的最近一次签名
     */
    private getUserSign;
    valueChange(e: any): void;
}
