import { Injector, ComponentFactoryResolver, ApplicationRef } from '@angular/core';
import { WfApprovalLogsService } from '@gsp-wf/wf-approval-logs';
import { WFFlowchartService } from '@gsp-wf/ui-flowchart';
import { BsModalService } from '@farris/ui-modal';
import { Observable, Subject } from 'rxjs';
import { TaskService } from './service/task.service';
import { TaskAction } from './entity/task-action';
import { AssigneeInfo } from './entity/complete-response';
import { NotifyService } from '@farris/ui-notify';
import { I18nService } from './service/i18n/i18n.service';
import { FrameworkService } from '@gsp-sys/rtf-common';
import { TaskEntity } from './entity/task-entity';
import { StartProcessPayload, CancelSubmitPayload } from './entity/start-process-payload';
import { CommonCommentFilter } from './entity/commonCommentFilter';
export declare class WfTaskHandlerService {
    private logService;
    private flowchartService;
    private injector;
    private resolver;
    private modalService;
    private taskService;
    private notify;
    private i18nService;
    private frameworkService;
    private appRef;
    subject: Subject<any>;
    private loading;
    private message;
    private curLanguage;
    private batchSubmitNum;
    private batchCancelNum;
    constructor(logService: WfApprovalLogsService, flowchartService: WFFlowchartService, injector: Injector, resolver: ComponentFactoryResolver, modalService: BsModalService, taskService: TaskService, notify: NotifyService, i18nService: I18nService, frameworkService: FrameworkService, appRef: ApplicationRef);
    /**
     * 处理单条任务
     * @param entity 任务实体
     * @param action 任务动作
     */
    execute(task: TaskEntity, action: TaskAction, otherParams?: any): Observable<any>;
    assignByInfo(assigneeInfo: AssigneeInfo, openFromIframe: boolean): Observable<any>;
    private complete;
    /**
     * 打开审批联查界面
     * @param entity 任务实体
     * @param action 动作实体
     */
    openApp(entity: TaskEntity, action: TaskAction, otherParams?: any): void;
    /**
     * 打开菜单，区分是否inSuite环境，用不同方式打开菜单
     * @param options 打开参数
     * @param menuTitle 菜单名称
     */
    private openMenu;
    /**
     * 返回动作列表，表单嵌流程用到
     * @param workItemId
     */
    refreshActions(workItemId: string): Observable<any>;
    /**
     * 根据流程实例ID和动作Code办理任务（暂未用到 by fangpengfei@2020.06.22）
     * @param procInstId 流程实例ID
     * @param state 任务状态
     * @param actionCode 动作Code
     */
    executeByProcInstId(procInstId: string, state: number, actionCode: string): Observable<any>;
    /**
     * 根据workItemId 办理任务
     * @param workItemId 工作项ID
     * @param action 动作实体
     */
    executeByWorkItemId(workItemId: string, action: TaskAction): Observable<any>;
    /**
     * 提交审批
     * @param payload 上下文参数
     * @returns subject true：提交成功，false：提交失败
     */
    startProcess(payload: StartProcessPayload): Observable<any>;
    /**
     * 提交审批弹框
     * @param payload 参数
     * @param withResponse 是否带返回值
     */
    private showStartProcessDialog;
    /**
     * 取消提交
     * @payload payload 参数
     */
    cancelSubmit(payload: CancelSubmitPayload): Observable<any>;
    /**
     * 提交审批
     * @param dataId 表单id
     * @param bizDefKey 入口单据id
     * @param options 自定义配置
     */
    submitWithBizDefKey(dataId: string, bizDefKey: string): Observable<any>;
    /**
     * 取消提交审批
     * @param dataId 表单id
     * @param bizDefKey 入口单据id
     * @param options 自定义配置
     */
    cancelSubmitWithDataId(dataId: string, bizDefKey: string): Observable<any>;
    /**
     * 批量提交审批
     * @param dataIds 表单ID集合
     * @param bizDefKey 入口单据id
     */
    batchSubmitWithBizDefKey(dataIds: string[], bizDefKey: string): Observable<any>;
    /**
     * 批量提交审批辅助函数
     */
    private batchSubmitHelpFunction;
    /**
     * 批量取消提交审批
     * @param dataIds 表单ID集合
     * @param bizDefKey 入口单据id
     */
    batchCancelSubmitWithDataId(dataIds: string[], bizDefKey: string): Observable<any>;
    /**
     * 批量取消辅助函数
     */
    private batchCancelHelpFunction;
    /**
     * 子表提交审批
     * @param parentDataId 主表id
     * @param childDataId 子表id
     * @param bizDefKey 入口单据id
     */
    childSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any>;
    /**
     * 子表取消提交审批
     * @param parentDataId 主表id
     * @param childDataId 子表id
     * @param bizDefKey 入口单据id
     */
    childCancelSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any>;
    /**
     * 子表批量提交审批
     * @param parentDataId 主表id
     * @param childDataIds 子表id集合
     * @param bizDefKey 入口单据id
     */
    childBatchSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any>;
    /**
     * 子表批量取消提交审批
     * @param parentDataId 主表id
     * @param childDataIds 子表id集合
     * @param bizDefKey 入口单据id
     */
    childBatchCancelSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any>;
    /**
   * 批量提交提示信息
   * @param successNum 成功条数
   * @param failedNum 需要交互的条数
   * @param errorNum 执行报错的条数
   */
    private showBatchSubmitInfo;
    /**
     * 批量取消提交提示信息
     */
    private showBatchCancelSubmitInfo;
    handleSubmitMessage(code: string, ownerId: string): void;
    /**
     * 表单上触发流程预解析操作
     * 已封装为表单的命令操作
     */
    processSimulate(): Observable<any>;
    /**
     * 根据单据id查看流程图
     * 已封装为表单命令和操作
     */
    viewFlowChartByDataId(dataId: string): void;
    /**
     * 查看流程图（新，支持预览）
     * 已封装为表单命令和操作
     * @param bizDefKey 流程分类id
     * @param dataId 表单数据id
     */
    viewFlowChartWithForecast(bizDefKey: string, dataId: string): void;
    /**
     * 查看审批记录（弹框）
     * 已封装为表单命令
     * @param dataId 表单数据id
     * @param style 其他参数
     */
    viewApprovalLog(dataId: string, style: string): void;
    /**
     * 获取用户的常用意见（已暴露给farris）
     * @returns 用户常用意见list
     */
    getCommonComments(filter: CommonCommentFilter): Observable<any>;
    /**
     * 展示常用意见管理dialog（已暴露给farris）
     */
    showCommentManageDialog(filter: CommonCommentFilter): Observable<any>;
}
