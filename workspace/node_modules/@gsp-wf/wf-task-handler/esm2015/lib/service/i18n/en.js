/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export const en = {
    static: {
        assignee: {
            noAssignee: 'Please select at least one approver.',
        },
        columnName: {
            name: 'Name',
            code: 'Code',
            department: 'Department',
        },
        title: 'Approval confirmation',
        inputLabel: 'Approval comments',
        inputHolder: 'comments',
        footOk: 'OK',
        footCancel: 'Cancel',
        selectUser: 'Select User',
        hideComment: 'Hide comment',
        taskForm: 'Task Handle',
        success: ' success'
    },
    cueWords: {
        successPass: 'Approved successfully.',
        inputOpinion: 'Please input your opinion',
        selectNode: 'Please select target nodes',
        select: 'Please select',
        processor: 'processor',
        attachmentsRequired: 'Please upload the attachment',
        signatureRequired: 'Please upload the signature',
        assignUser: 'Assign user',
        operateSuccess: 'Operate successfully',
        commonCommentTooLong: 'Comment is too long',
    },
    task: {
        selectPlaceholder: 'Please select',
        passComment: 'Pass',
        processAlone: 'Please handle it separately',
        urgeText: 'Receiver',
        backNodeText: ' node',
        selectProcessor: 'Please select the user',
        notFoundBill: 'This document cannot be processed on the computer. Please try to process it on the mobile terminal',
        nextNodeText: 'Next node',
        assignText: 'Assign to',
        noUser: 'No one',
        title: 'Handle Task',
        noTask: 'There is no task.',
        commentTooLong: 'Comments exceed the 4000 English character limit, it is recommended to submit comments by uploading attachments',
        activityName: 'processor',
        receiver: 'receiver',
        urgeComment: "Please input your comment",
        noUrgeUsers: "There is no user to urge handle",
        noUrgeSubject: "no urge subject",
        noUrgeContent: "no urge content",
        person: " people",
        addSign: "Add sign",
        priority: "Priority",
        selectPriority: "Please select the priority"
    },
    startProcess: {
        selectProcess: 'Please select process',
        title: 'Select process',
        selectNode: 'Please select next node',
        submitSuccess: 'Start process successfully',
        submitFailed: 'Start process failed',
        cancelSubmitSuccess: 'Cancel submit successfully',
        cancelSubmitFailed: 'Cancel submit failed',
        dataIdIsNull: 'Please select a data',
        dataIdIsEmpty: 'Please select a data',
        bizDefKeyIsNull: 'Biz definition key is null',
        success: 'Success',
        row: '',
        failed: ', failed',
        node: 'node, ',
        noUser: 'no suitable handler was found',
        cancelSubmitInfo: 'Please resubmit',
        procDef: 'Process',
        processTowards: 'Process towards',
        otherNodesAssign: 'Assign other nodes'
    },
    batchSubmit: {
        row: '',
        success: 'Success',
        error: 'Error',
        failed: 'Failed',
        validationFailed: 'Signature verification failed',
        single: 'Failed tasks please process it singly',
        selected: 'Selected',
        item: 'items,',
        time: 'time more than',
        second: 'seconds'
    },
    batchStartProcess: {
        row: '<br/>',
        success: 'Success',
        error: 'Error',
        failed: 'Failed',
        single: 'Failed tasks please process it singly'
    },
    comment: {
        static: {
            title: 'Approval comments',
            add: 'Add',
            delete: 'Delete',
            save: 'Save',
            cancel: 'Cancel',
            content: 'Content',
            order: 'Order',
            inputLabel: 'Comments',
            manage: 'Comments management',
            attachmentUpload: 'Attachment',
            repeatFile: 'Contains repeat files:',
            type: 'Type',
            operate: 'Operate',
            confirm: 'Confirm',
            clickToAdd: 'Click to add',
            public: 'public',
            private: 'private',
            messageSubject: 'message subject',
            messageContent: 'message content',
            comment: 'Comments',
            tooLongTips: 'exceed the 4000 English character limit, it is recommended to submit comments by uploading attachments'
        },
        attachment: {
            tips: 'click to upload attachments'
        },
        signature: {
            title: 'Signature',
            reset: 'Reset',
            ok: 'OK',
            sign: 'Sign, ',
            upload: 'Upload',
            tips: 'click to sign or upload a picture',
            dialogTitle: 'Signature',
            note1: '',
            note2: 'or',
            note3: '',
            disable: 'disable signature',
            download: "download",
            view: "view",
            delete: "delete"
        }
    },
    addSign: {
        allowSignToSign: 'Allow',
        multiInstanceType: 'Multi instance type',
        parallel: 'parallel',
        preempt: 'preempt',
        sequential: 'sequential'
    },
    backWardConfig: {
        sequence: 'Sequence',
        backToMe: 'Back to me',
        backToCurrentNode: 'Back to current node',
        allowResubmitToThisNode: ',resubmit to this node'
    }
};
//# sourceMappingURL=data:application/json;base64,