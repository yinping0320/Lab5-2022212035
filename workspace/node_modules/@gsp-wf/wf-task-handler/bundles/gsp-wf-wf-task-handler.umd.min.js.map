{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@gsp-wf/wf-task-handler/lib/service/task.service.ts","ng://@gsp-wf/wf-task-handler/lib/entity/task-action.ts","ng://@gsp-wf/wf-task-handler/lib/service/i18n/en.ts","ng://@gsp-wf/wf-task-handler/lib/service/i18n/index.ts","ng://@gsp-wf/wf-task-handler/lib/service/i18n/zh-chs.ts","ng://@gsp-wf/wf-task-handler/lib/service/i18n/zh-cht.ts","ng://@gsp-wf/wf-task-handler/lib/service/i18n/i18n.service.ts","ng://@gsp-wf/wf-task-handler/lib/entity/task-entity.ts","ng://@gsp-wf/wf-task-handler/lib/entity/complete-context.ts","ng://@gsp-wf/wf-task-handler/lib/entity/complete-response.ts","ng://@gsp-wf/wf-task-handler/lib/entity/task-center-config.ts","ng://@gsp-wf/wf-task-handler/lib/entity/workitem-execute-param.ts","ng://@gsp-wf/wf-task-handler/lib/entity/user.ts","ng://@gsp-wf/wf-task-handler/lib/entity/urge-handle.ts","ng://@gsp-wf/wf-task-handler/lib/entity/batchVerifysigned.ts","ng://@gsp-wf/wf-task-handler/lib/entity/wfContext.ts","ng://@gsp-wf/wf-task-handler/lib/components/urge-handle/urge-handle.component.ts","ng://@gsp-wf/wf-task-handler/lib/entity/base-payload.ts","ng://@gsp-wf/wf-task-handler/lib/entity/add-sign.ts","ng://@gsp-wf/wf-task-handler/lib/entity/simulaite-subject.ts","ng://@gsp-wf/wf-task-handler/lib/components/task-execute/task-execute.component.ts","ng://@gsp-wf/wf-task-handler/lib/entity/start-process-payload.ts","ng://@gsp-wf/wf-task-handler/lib/entity/postMessage.ts","ng://@gsp-wf/wf-task-handler/lib/entity/process-cache.ts","ng://@gsp-wf/wf-task-handler/lib/submit/process-selector/process-selector.component.ts","ng://@gsp-wf/wf-task-handler/lib/entity/comment.ts","ng://@gsp-wf/wf-task-handler/lib/components/comment-manage/comment-manage.component.ts","ng://@gsp-wf/wf-task-handler/lib/wf-task-handler.service.ts","ng://@gsp-wf/wf-task-handler/lib/service/i18n/translate.pipe.ts","ng://@gsp-wf/wf-task-handler/lib/components/task-assigninfo/task-assigninfo.component.ts","ng://@gsp-wf/wf-task-handler/lib/entity/farris-user-help-param.ts","ng://@gsp-wf/wf-task-handler/lib/components/assignee-info/assignee-info.component.ts","ng://@gsp-wf/wf-task-handler/lib/throttleTime/throttleClickDirective.ts","ng://@gsp-wf/wf-task-handler/lib/entity/attachment.ts","ng://@gsp-wf/wf-task-handler/lib/components/task-comment/task-comment.component.ts","ng://@gsp-wf/wf-task-handler/lib/wf-task-handler.module.ts","ng://@gsp-wf/wf-task-handler/lib/entity/commonCommentFilter.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, forkJoin, Subject } from 'rxjs';\r\nimport { AssignParameter } from '../entity/complete-response';\r\nimport { CompleteContext } from '../entity/complete-context';\r\nimport { BatchVerifySignedContext } from '../entity/batchVerifysigned';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { CancelSubmitPayload, StartProcessPayload } from '../entity/start-process-payload';\r\nimport { FileDeleteEntity, FileUploadEntity, GspDocUploadEntity } from '../entity/attachment';\r\nimport { WorkItemExecuteParam } from '../entity/workitem-execute-param';\r\nimport { UrgeHandleContext, UrgeHandleSimulateContext } from '../entity/urge-handle';\r\nimport { AddSignPayload } from '../entity/add-sign';\r\nimport { ServerExceptionEntity } from '../entity/exception-entity';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { TaskCenterConfig } from '../entity/task-center-config';\r\nimport { CommonComment } from '../entity/comment';\r\nimport { CommonCommentFilter } from '../entity/commonCommentFilter';\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n    constructor(\r\n        private httpSvc: HttpService,\r\n        private message: MessagerService,\r\n    ) { }\r\n\r\n    getUsersByIds(ids: string[]): Observable<any> {\r\n        var pathUrl = '/api/runtime/sys/v1.0/users';\r\n        return forkJoin(ids.map(id => this.httpSvc.get(pathUrl + `/${id}` + `?mode=0002`)));\r\n    }\r\n    /**\r\n     * 获取工作项操作列表\r\n     */\r\n    getWorkItemActions(workItemId: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/${workItemId}/actions`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 执行审批操作\r\n     * @param context 执行审批上下文\r\n     */\r\n    complete(context: CompleteContext): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/complete`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**\r\n     * 执行审批预解析\r\n     * @param context 执行审批上下文\r\n     */\r\n    completeSimulate(context: CompleteContext): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/complete-simulation`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**\r\n     * 获取跳转活动信息\r\n     * @param workItemId 工作项Id\r\n     * @param action 动作编号\r\n     */\r\n    getDestinationScope(workItemId: string, action: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/${workItemId}/nextNodes/${action}`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 根据节点ID获取指定参与者的结果\r\n     * @param workItemId\r\n     * @param nodeId 说明：nodeIds=[\"node1\",\"node2\",···]\r\n     * @returns 指派信息的数组 re: FlowNodeInfo[]\r\n     */\r\n    getSimulationAssigneeInfo(workItemId: string, nodeId: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/${workItemId}/simulation-assigneeInfo?nodeIds=[${nodeId}]`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 执行征询、知会\r\n     * @param context 上下文\r\n     */\r\n    addSign(context: any): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/counterSignAdd`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**\r\n     * 已阅\r\n     * @param context 参数\r\n     */\r\n    readTask(context: WorkItemExecuteParam): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/read`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**\r\n     * 查询单据信息（方法名不要动，其他地方有引用）\r\n     * @param workItemId 工作项Id\r\n     */\r\n    getTaskFormInfo(workItemId: string): Observable<any> {\r\n        let subject = new Subject();\r\n        let cacheCode = \"gspWfTaskFormInfo\" + workItemId;\r\n        const taskForm = localStorage.getItem(cacheCode);\r\n        if (taskForm) {\r\n            setTimeout(() => {\r\n                subject.next(JSON.parse(taskForm));\r\n            }, 10);\r\n        } else {\r\n            const formParUrl = `/api/runtime/wf/v1.0/workItems/${workItemId}/formInfo`;\r\n            this.httpSvc.get(formParUrl).subscribe(re => {\r\n                subject.next(re);\r\n                localStorage.setItem(cacheCode, JSON.stringify(re));\r\n            }, error => {\r\n                subject.error(error);\r\n            })\r\n        }\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * 获取指派信息\r\n     * @param taskId 工作项Id\r\n     * 此接口只返回一个AssignInfo类序列化后的信息，不是多个\r\n     */\r\n    getAssigneeInfo(taskId: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/${taskId}/assigneeInfo`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取加签移交范围设置\r\n     * @param workItemId\r\n     * @param actionCode\r\n     */\r\n    getOrganizationScope(workItemId: string, actionCode: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/${workItemId}/organizationScope/${actionCode}`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 根据流程实例ID和任务状态办理任务\r\n     * @param procInstId 流程实例id\r\n     * @param state 任务状态 2或5\r\n     */\r\n    getTaskByProcInstId(procInstId: string, state: number): Observable<any> {\r\n        const url = `/api/runtime/task/v1.0/tasks/processInstanceId?procInstId=${procInstId}&state=${state}`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 根据workitemID获取任务实体\r\n     * @param workItemId\r\n     */\r\n    getTaskByWorkItemId(workItemId: string): Observable<any> {\r\n        const url = `/api/runtime/task/v1.0/tasks/sourceId/${workItemId}`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 根据工作项ID指派任务\r\n     * @param assigneesPa 指派参数\r\n     */\r\n    assignNextUsersByWorkItemId(assigneesPa: AssignParameter): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/assignUser`;\r\n        return this.httpSvc.post(url, assigneesPa);\r\n    }\r\n\r\n    /**\r\n     * 取回\r\n     * @param workItemId task id\r\n     * @param comment comment\r\n     */\r\n    retrieve(context: { workItemId: string, comment?: string }): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/retrieve`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**\r\n     * 任务移交\r\n     * @param taskId 工作项Id\r\n     * @param targetUId 目标用户Id\r\n     */\r\n    transfer(transferContext: any): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/transfer`;\r\n        return this.httpSvc.post(url, transferContext);\r\n    }\r\n\r\n    /**\r\n     * 任务评论\r\n     * @param taskId 工作项Id\r\n     * @param targetUId 目标用户Id\r\n     */\r\n    comment(commentContext: any): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/comment`;\r\n        return this.httpSvc.post(url, commentContext);\r\n    }\r\n\r\n    /**\r\n     * 领用任务\r\n     * @param taskId 工作项Id\r\n     */\r\n    claim(taskId: string, comment: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/claim`;\r\n        const options = {\r\n            workItemId: taskId,\r\n            comment: comment\r\n        };\r\n        return this.httpSvc.post(url, options);\r\n    }\r\n\r\n    /**\r\n     * 取消领用\r\n     * @param taskId 任务Id\r\n     */\r\n    unClaim(taskId: string, comment: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/unclaim`;\r\n        const options = {\r\n            workItemId: taskId,\r\n            comment: comment\r\n        };\r\n        return this.httpSvc.post(url, options);\r\n    }\r\n\r\n    /**\r\n     * 报错提示\r\n     * @param error\r\n     */\r\n    error(error: any) {\r\n        if (error && error.error && error.error.Message) {\r\n            var message = error.error.Message;\r\n            this.message.show('warning', message, { safeHtml: false });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启动流程接口\r\n     * @param payload API所需的上下文参数\r\n     */\r\n    startProcess(payload: StartProcessPayload): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/processInstances/startProcess`;\r\n        return this.httpSvc.post(url, payload);\r\n    }\r\n\r\n    /**\r\n     * 启动流程预解析\r\n     * @param payload API所需的上下文参数\r\n     */\r\n    startProcessSimulate(payload: StartProcessPayload): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/processInstances/startProcess-simulation`;\r\n        return this.httpSvc.post(url, payload);\r\n    }\r\n\r\n    /**\r\n     * 取消提交\r\n     * @param param 参数\r\n     */\r\n    cancelSubmit(param: CancelSubmitPayload): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/processInstances/cancelSubmit`;\r\n        return this.httpSvc.post(url, param);\r\n    }\r\n\r\n    static newId() {\r\n        const S4 = () => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n    /**\r\n     * 获取用户常用意见列表\r\n     * @returns \r\n     */\r\n    getCommentList(filter?: CommonCommentFilter): Observable<any> {\r\n        let url = `/api/runtime/wf/v1.0/commonComments`;\r\n        filter && filter.type && (url += `?type=${filter.type}`)\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 添加常用意见\r\n     * @returns \r\n     */\r\n    addComment(comment: CommonComment): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/commonComments`;\r\n        return this.httpSvc.post(url, comment);\r\n    }\r\n\r\n    /**\r\n     * 删除一条常用意见\r\n     * @param id 常用意见id\r\n     * @returns \r\n     */\r\n    deleteComment(id: string): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/commonComments/${id}`;\r\n        return this.httpSvc.delete(url, null);\r\n    }\r\n\r\n    /**\r\n     * 获取任务中心配置项\r\n     * @param code 配置项的Code\r\n     */\r\n    getTaskCenterConfigByCode(code: string, ownerType?: string, ownerId?: string): Observable<any> {\r\n        let url = `/api/runtime/task/v1.0/task-center-setting/code?code=${code}`;\r\n        ownerType && (url += `&ownerType=${ownerType}`);\r\n        ownerId && (url += `&ownerId=${ownerId}`);\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取系统级别配置（缓存为一天）\r\n     */\r\n    getAllTaskCenterConfig(): Observable<any> {\r\n        let subject = new Subject();\r\n        let code = \"gspWfTaskAllConfig\";\r\n        let todayCode = code + this.getCurrentDateString();\r\n        let configStr = localStorage.getItem(todayCode);\r\n        if (configStr) {\r\n            setTimeout(() => {\r\n                subject.next(JSON.parse(configStr));\r\n            }, 10);\r\n        } else {\r\n            let url = `/api/runtime/task/v1.0/task-center-setting/all?ownerType=all&ownerId=*`;\r\n            this.httpSvc.get(url).subscribe(re => {\r\n                localStorage.setItem(todayCode, JSON.stringify(re));\r\n                subject.next(re);\r\n                this.removeConfig(code);\r\n            }, error => {\r\n                subject.error(error);\r\n            })\r\n        }\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * 获取任务分类级别配置\r\n     */\r\n    getTaskCategoryCenterConfig(categoryId: string): Observable<any> {\r\n        let subject = new Subject();\r\n        let code = \"gspWfTaskCategoryConfig\" + categoryId;\r\n        let todayCode = code + this.getCurrentDateString();\r\n        let configStr = localStorage.getItem(todayCode);\r\n        if (configStr) {\r\n            setTimeout(() => {\r\n                subject.next(JSON.parse(configStr));\r\n            }, 10);\r\n        } else {\r\n            let url = `/api/runtime/task/v1.0/task-center-setting/all`;\r\n            url += `?ownerType=category&ownerId=${categoryId}`;\r\n            this.httpSvc.get(url).subscribe(re => {\r\n                localStorage.setItem(todayCode, JSON.stringify(re));\r\n                subject.next(re);\r\n                this.removeConfig(code);\r\n            }, error => {\r\n                subject.error(error);\r\n            })\r\n        }\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * 获取任务中心个人用户配置（缓存为一天）\r\n    */\r\n    getAllUserConfig(): Observable<any> {\r\n        let subject = new Subject();\r\n        let code = \"gspWfTaskUserConfig\";\r\n        let todayCode = code + this.getCurrentDateString();\r\n        let configStr = localStorage.getItem(todayCode);\r\n        if (configStr) {\r\n            setTimeout(() => {\r\n                subject.next(JSON.parse(configStr));\r\n            }, 10);\r\n        } else {\r\n            let url = `/api/runtime/task/v1.0/task-center-setting/all`;\r\n            this.httpSvc.get(url).subscribe(re => {\r\n                localStorage.setItem(todayCode, JSON.stringify(re));\r\n                this.removeConfig(code);\r\n                subject.next(re);\r\n            }, error => {\r\n                subject.error(error);\r\n            });\r\n        }\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * 添加用户级别自定义配置\r\n     * @param code 配置项编号\r\n     */\r\n    addUserConfig(code: string, currentValue: string): Observable<any> {\r\n        let configCode = \"gspWfTaskUserConfig\";\r\n        let todayCode = configCode + this.getCurrentDateString();\r\n        let configStr = localStorage.getItem(todayCode);\r\n        if (configStr) {\r\n            let list = JSON.parse(configStr);\r\n            if (list && list.length) {\r\n                let item = (list as TaskCenterConfig[]).find(l => l.configCode == code);\r\n                if (item) {\r\n                    item.currentValue = currentValue;\r\n                    localStorage.setItem(todayCode, JSON.stringify(list));\r\n                }\r\n            }\r\n        }\r\n        let url = `/api/runtime/task/v1.0/task-center-setting/add?configCode=${code}&currentValue=${currentValue}`;\r\n        return this.httpSvc.post(url, null);\r\n    }\r\n\r\n    /**\r\n     * 获取用户头像（已被任务中心调用）\r\n     * @param userId 用户ID\r\n     */\r\n    getUserAvatar(userId: string): Observable<any> {\r\n        let subject = new Subject();\r\n        let code = \"gspWfTaskUserAvatar\";\r\n        let todayCode = code + this.getCurrentDateString();\r\n        let todayUserCode = todayCode + userId;\r\n        let avatarStr = localStorage.getItem(todayUserCode);\r\n        if (avatarStr) {\r\n            setTimeout(() => {\r\n                subject.next(JSON.parse(avatarStr));\r\n            }, 100);\r\n        } else {\r\n            const url = `/api/runtime/sys/v1.0/userinfos/setting/users?userId=${userId}`;\r\n            this.httpSvc.get(url).subscribe(re => {\r\n                subject.next(re);\r\n                localStorage.setItem(todayUserCode, JSON.stringify(re));\r\n                this.removeConfig(code);\r\n            })\r\n        }\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * 获取当前日期\r\n     */\r\n    getCurrentDateString() {\r\n        let date = new Date();\r\n        let year = date.getFullYear().toString();\r\n        let month = (date.getMonth() + 1).toString();\r\n        let day = date.getDate().toString();\r\n        return year + month + day;\r\n    }\r\n\r\n    /**\r\n     * 移除localStorage缓存\r\n     * @param key \r\n     */\r\n    private removeConfig(key: string) {\r\n        let todayKey = key + this.getCurrentDateString();\r\n        for (let item in localStorage) {\r\n            if (item.indexOf(key) > -1 && item.indexOf(todayKey) < 0) {\r\n                localStorage.removeItem(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 真正上传附件\r\n     * @param files\r\n     */\r\n    uploadAttachment(files: FileUploadEntity): Observable<any> {\r\n        let url = `/api/runtime/dfs/v1.0/doc/commit`;\r\n        return this.httpSvc.put(url, files);\r\n    }\r\n\r\n    /**\r\n     * 删除附件\r\n     * @param fileDeleteEntity\r\n     */\r\n    deleteAttachment(fileDeleteEntity: FileDeleteEntity): Observable<any> {\r\n        let url = `/api/runtime/dfs/v1.0/doc`;\r\n        return this.httpSvc.delete(url, fileDeleteEntity);\r\n    }\r\n\r\n    /**\r\n     * 创建内码\r\n     */\r\n    createNM() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取当前用户信息\r\n     */\r\n    getUserInfo(): Observable<any> {\r\n        let url = `/api/runtime/sys/v1.0/userinfos?infoType=user`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取用户所有签名\r\n     */\r\n    getUserSignId(userId: string): Observable<any> {\r\n        let subject = new Subject();\r\n        let code = 'gspWfTaskUserSign' + userId;\r\n        let todayCode = code + this.getCurrentDateString();\r\n        let signId = localStorage.getItem(todayCode);\r\n        if (signId) {\r\n            setTimeout(() => {\r\n                subject.next(signId);\r\n            }, 100);\r\n        } else {\r\n            let url = `/api/runtime/dfs/v1.0/formdoc/fileinfo/form?formid=${userId}&rootid=taskcentersignature`;\r\n            this.httpSvc.get(url).subscribe((result: any) => {\r\n                if (result && result.length) {\r\n                    var sign;\r\n                    if (result.length == 1) {\r\n                        sign = result[0];\r\n                    } else {\r\n                        const list = result.filter(a => a && a.lastModifiedTime);\r\n                        sign = list.reduce(function (a, b) {\r\n                            return a.lastModifiedTime > b.lastModifiedTime ? a : b;\r\n                        })\r\n                    }\r\n                    subject.next(sign.id);\r\n                    localStorage.setItem(todayCode, sign.id);\r\n                    this.removeConfig(code);\r\n                } else {\r\n                    subject.next('');\r\n                }\r\n            }, error => {\r\n                subject.error(error);\r\n            })\r\n        }\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * 上传签名，返回长传后的签名id\r\n     */\r\n    uploadSignature(gspDocUploadEntity: GspDocUploadEntity): Observable<any> {\r\n        let url = `/api/runtime/dfs/v1.0/doc`;\r\n        let header = this.httpSvc.setHeader({\r\n            body: gspDocUploadEntity,\r\n            responseType: 'text'\r\n        })\r\n        return this.httpSvc.request('Post', url, header);\r\n    }\r\n\r\n\r\n    /**\r\n     * 解析文件类型，给出缩略图\r\n     * @param attachmentInfo\r\n     */\r\n    createItem(attachmentInfo: any) {\r\n        var pos = attachmentInfo.fileName.lastIndexOf(\".\");\r\n        var type = attachmentInfo.fileName.substring(pos + 1);\r\n        type = (type == '' ? 'Default' : type.toLowerCase());\r\n        var docLib = 'doc-docx-htm-html-js-pdf-ppt-pptx-rar-zip-txt-xls-xlsx';\r\n        var videoLib = 'wav-aif-aiff-au-mp1-mp2-mp3-ra-rm-ram-mid-rmi';\r\n        var audioLib = 'avi-rm-rmvb-mpeg-mpg-dat-mov-qt-asf-wm-mp4';\r\n        var imgLib = 'webp-baibmp-dupcx-tif-gif-jpeg-tga-exif-fpx-svg-psd-cdr-pcd-dxf-ufo-eps-ai-png-hdri-raw-wmf-flic-emf-ico-jpg';\r\n        if (docLib.indexOf(type) >= 0) {\r\n            type = type.toLowerCase();\r\n        } else if (videoLib.indexOf(type) >= 0) {\r\n            type = 'video';\r\n        } else if (audioLib.indexOf(type) >= 0) {\r\n            type = 'audio';\r\n        } else if (imgLib.indexOf(type) >= 0) {\r\n            type = 'picture';\r\n        } else {\r\n            type = 'default';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * 注册主题，并获取当前主题唯一标识token\r\n     * @param subjectCode 主题编码，非唯一标识，token为唯一标识\r\n     * @param token 主题唯一标识。\r\n     * @returns 主题的唯一标识。\r\n     */\r\n    subjectRegister(subjectCode: string, token: string) {\r\n        return (window as any).gspframeworkService.rtf.broadcast.subjectRegister(subjectCode, { funcId: token });\r\n    }\r\n\r\n    /**\r\n     * 监听移除\r\n     * @param token\r\n     */\r\n    subjectRemove(token: string) {\r\n        (window as any).gspframeworkService.rtf.broadcast.subjectRemove(token);\r\n    }\r\n\r\n    /**\r\n     * 通过某个token发送消息\r\n     * @param subjectToken 主题唯一的token标识\r\n     * @param message 要发送的消息\r\n     */\r\n    subjectNotify(subjectToken: string, message: any) {\r\n        (window as any).gspframeworkService.rtf.broadcast.notify(subjectToken, message);\r\n    }\r\n\r\n    /**\r\n     * 添加观察者，并监听消息\r\n     * @param subjectToken 主题token\r\n     * @param observerToken 当前监听主题的观察者唯一标识token。此处固定\r\n     * @param handler 监听到消息后执行的动作\r\n     */\r\n    subjectResponse(subjectToken: string, observerToken: string, handler: (value: any) => void) {\r\n        (window as any).gspframeworkService.rtf.broadcast.response(subjectToken, observerToken, handler);\r\n    }\r\n\r\n    /**\r\n     * 获取催办模拟结果\r\n     * @param context 参数\r\n     * @returns\r\n     */\r\n    urgeHandleSimulate(context: UrgeHandleSimulateContext): Observable<any> {\r\n        let url = `/api/runtime/wf/v1.0/processInstances/getUrgeHandleInfo`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**\r\n     * 执行催办\r\n     * @param context 参数\r\n     * @returns\r\n     */\r\n    urgeHandle(context: UrgeHandleContext): Observable<any> {\r\n        let url = `/api/runtime/wf/v1.0/processInstances/urgeHandle`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**批量数字签名\r\n     * @param context 参数\r\n     */\r\n    batchVerifySigned(context: BatchVerifySignedContext): Observable<any> {\r\n        const url = `/api/runtime/wf/v1.0/workItems/batchVerifySigned`;\r\n        return this.httpSvc.post(url, context);\r\n    }\r\n\r\n    /**\r\n     * 获取用户帮助前端配置\r\n     * @returns \r\n     */\r\n    getWfUserHelpConfig(): Observable<any> {\r\n        let date = new Date();\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n        const url = `/platform/runtime/wf/web/wf-user-help/config.json?v=` + year + month + day;\r\n        return this.httpSvc.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取加签配置\r\n     */\r\n    getAdhocConfig(workItemId: string): Observable<any> {\r\n        let url = `/api/runtime/wf/v1.0/workItems/${workItemId}/adhocConfig/AddSignBehind`;\r\n        return this.httpSvc.get(url);\r\n    }\r\n    /**\r\n     * 加签提交\r\n     */\r\n    adhocAssignee(payload: AddSignPayload) {\r\n        let url = `/api/runtime/wf/v1.0/workItems/adhocAssignee`;\r\n        return this.httpSvc.post(url, payload);\r\n    }\r\n    /**\r\n     * 取消征询\r\n     */\r\n    cancelConsult(payload: WorkItemExecuteParam) {\r\n        let url = `/api/runtime/wf/v1.0/workItems/cancelConsult`;\r\n        return this.httpSvc.post(url, payload);\r\n    }\r\n\r\n    /**\r\n     * 判断是否inSuite环境\r\n     */\r\n    isInSuite(): boolean {\r\n        const frameWorkService = (window as any).gspframeworkService;\r\n        if (frameWorkService && frameWorkService.rtf) {\r\n            const extendMethod = frameWorkService.rtf.extendMethod;\r\n            if (extendMethod && extendMethod.getExtObj()) {\r\n                var extObj = extendMethod.getExtObj();\r\n                const mode = extObj.iGIX4inSuiteMode();\r\n                if (mode) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取字符串字节长度\r\n     */\r\n    getBytesLength(str) {\r\n        // 在GBK编码里，除了ASCII字符，其它都占两个字符宽\r\n        return str.replace(/[^\\x00-\\xff]/g, 'xx').length;\r\n    }\r\n\r\n    /**\r\n     * 获取top window\r\n     * @returns \r\n     */\r\n    getTopWindow(): Window {\r\n        let curWin: Window = window.self;\r\n        try {\r\n            while (curWin.location.origin === curWin.parent.location.origin) {\r\n                if (curWin !== curWin.parent && !(curWin as any).isRTFTopWin) {\r\n                    curWin = curWin.parent;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        } catch (e) { }\r\n        return curWin;\r\n    }\r\n\r\n    /**\r\n     * 弹出错误提示\r\n     * @param error \r\n     */\r\n    handleErrorLevel(errorMessage: any): void {\r\n        if (errorMessage && errorMessage.status < 500) {\r\n            return;\r\n        }\r\n        let error = errorMessage.error as ServerExceptionEntity;\r\n        const exceptionMsg = error.Message || '';\r\n        const date = error.date || new Date();\r\n        const localDate = date;\r\n        const detail = error.Detail || `${error.Message}\\r\\n发生时间：${localDate}\\r\\n详细信息：${error.innerMessage}` || '';\r\n\r\n        const innerMessage = error.innerMessage || null;\r\n        let bsModalRef: BsModalRef;\r\n        const options = {\r\n            showMaxButton: false,\r\n            buttons: [\r\n                {\r\n                    text: '知道了',\r\n                    cls: 'btn btn-primary btn-lg',\r\n                    handle: () => {\r\n                        bsModalRef.close();\r\n                    }\r\n                }\r\n            ],\r\n            width: 440,\r\n            height: 200,\r\n            safeHtml: false,\r\n            exception: {\r\n                date: localDate,\r\n                message: innerMessage,\r\n                copyButton: {\r\n                    text: '复制详细信息',\r\n                    onClick: (e) => {\r\n                        const result = this.copyToClipboard(detail);\r\n                        bsModalRef.content.showMiniNotify(result, 1500);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        bsModalRef = this.message.show('exception', exceptionMsg, options);\r\n    }\r\n\r\n    /**\r\n     * 赋值到粘贴板\r\n     * @param text \r\n     * @returns \r\n     */\r\n    private copyToClipboard(text): boolean {\r\n        const windowRef: any = window;\r\n        if (windowRef.clipboardData && windowRef.clipboardData.setData) {\r\n            return windowRef.clipboardData.setData(\"Text\", text);\r\n        } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\r\n            var textarea = document.createElement(\"textarea\");\r\n            textarea.textContent = text;\r\n            textarea.style.position = \"fixed\";\r\n            document.body.appendChild(textarea);\r\n            textarea.select();\r\n            try {\r\n                return document.execCommand(\"copy\");\r\n            } catch (ex) {\r\n                console.warn(\"Copy to clipboard failed.\", ex);\r\n            } finally {\r\n                document.body.removeChild(textarea);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","/**\r\n * 业务动作参数\r\n */\r\nexport class ActionParameter {\r\n    /**\r\n     * 参数编号\r\n     */\r\n    code: string;\r\n    /**\r\n     * 参数值\r\n     */\r\n    value: string;\r\n}\r\n/**\r\n * 任务动作定义\r\n */\r\nexport class TaskActionDef {\r\n    /**\r\n     * id\r\n     */\r\n    id: string;\r\n    /**\r\n     * 动作编号\r\n     */\r\n    code: string;\r\n    /**\r\n     * 动作显示名称\r\n     */\r\n    name: string;\r\n    /**\r\n     * 动作实现\r\n     */\r\n    impl: string;\r\n    /**\r\n     * 是否批量操作\r\n     */\r\n    isBatchAction: boolean;\r\n    /**\r\n     * 是否是联查操作\r\n     */\r\n    isHyperlinkAction: boolean;\r\n    /**\r\n     * 是否主操作\r\n     */\r\n    isPrimaryAction: boolean;\r\n    /**\r\n     * 动作排序号\r\n     */\r\n    sortOrder: number;\r\n    /**\r\n     * 类型id\r\n     */\r\n    typeId: string;\r\n    /**\r\n     * 前事件\r\n     */\r\n    preEvents?: ActionEvent[];\r\n    /**\r\n     * 后事件\r\n     */\r\n    postEvents?: ActionEvent[];\r\n}\r\n/**\r\n * 任务动作定义\r\n */\r\nexport class TaskAction extends TaskActionDef {\r\n    /**\r\n     * 任务动作定义编号\r\n     */\r\n    code: string;\r\n    /**\r\n     * 参数列表\r\n     */\r\n    parameters: ActionParameter[];\r\n}\r\n\r\nexport class ActionEvent {\r\n    /**\r\n     * ID\r\n     */\r\n    id: string;\r\n    /**\r\n     * 任务分类\r\n     */\r\n    taskCategoryId: string;\r\n    /**\r\n     * 动作编号\r\n     */\r\n    actionCode: string;\r\n    /**\r\n     * 实现\r\n     */\r\n    eventImpl: string;\r\n    /**\r\n     * 排序\r\n     */\r\n    sortOrder: number;\r\n    /**\r\n     * 终端，web，app\r\n     */\r\n    terminal: string;\r\n    /**\r\n     * 类型，Pre,Post\r\n     */\r\n    type: string;\r\n    /**\r\n     * 是否为批量扩展\r\n     */\r\n    batch: boolean;\r\n}\r\n","export const en = {\r\n  static: {\r\n    assignee: {\r\n      noAssignee: 'Please select at least one approver.',\r\n    },\r\n    columnName: {\r\n      name: 'Name',\r\n      code: 'Code',\r\n      department: 'Department',\r\n    },\r\n    title: 'Approval confirmation',\r\n    inputLabel: 'Approval comments',\r\n    inputHolder: 'comments',\r\n    footOk: 'OK',\r\n    footCancel: 'Cancel',\r\n    selectUser: 'Select User',\r\n    hideComment: 'Hide comment',\r\n    taskForm: 'Task Handle',\r\n    success: ' success'\r\n  },\r\n  cueWords: {\r\n    successPass: 'Approved successfully.',\r\n    inputOpinion: 'Please input your opinion',\r\n    selectNode: 'Please select target nodes',\r\n    select: 'Please select',\r\n    processor: 'processor',\r\n    attachmentsRequired: 'Please upload the attachment',\r\n    signatureRequired: 'Please upload the signature',\r\n    assignUser: 'Assign user',\r\n    operateSuccess: 'Operate successfully',\r\n    commonCommentTooLong: 'Comment is too long',\r\n  },\r\n  task: {\r\n    selectPlaceholder: 'Please select',\r\n    passComment: 'Pass',\r\n    processAlone: 'Please handle it separately',\r\n    urgeText: 'Receiver',\r\n    backNodeText: ' node',\r\n    selectProcessor: 'Please select the user',\r\n    notFoundBill: 'This document cannot be processed on the computer. Please try to process it on the mobile terminal',\r\n    nextNodeText: 'Next node',\r\n    assignText: 'Assign to',\r\n    noUser: 'No one',\r\n    title: 'Handle Task',\r\n    noTask: 'There is no task.',\r\n    commentTooLong: 'Comments exceed the 4000 English character limit, it is recommended to submit comments by uploading attachments',\r\n    activityName: 'processor',\r\n    receiver: 'receiver',\r\n    urgeComment: \"Please input your comment\",\r\n    noUrgeUsers: \"There is no user to urge handle\",\r\n    noUrgeSubject: \"no urge subject\",\r\n    noUrgeContent: \"no urge content\",\r\n    person: \" people\",\r\n    addSign: \"Add sign\",\r\n    priority: \"Priority\",\r\n    selectPriority: \"Please select the priority\"\r\n  },\r\n  startProcess: {\r\n    selectProcess: 'Please select process',\r\n    title: 'Select process',\r\n    selectNode: 'Please select next node',\r\n    submitSuccess: 'Start process successfully',\r\n    submitFailed: 'Start process failed',\r\n    cancelSubmitSuccess: 'Cancel submit successfully',\r\n    cancelSubmitFailed: 'Cancel submit failed',\r\n    dataIdIsNull: 'Please select a data',\r\n    dataIdIsEmpty: 'Please select a data',\r\n    bizDefKeyIsNull: 'Biz definition key is null',\r\n    success: 'Success',\r\n    row: '',\r\n    failed: ', failed',\r\n    node: 'node, ',\r\n    noUser: 'no suitable handler was found',\r\n    cancelSubmitInfo: 'Please resubmit',\r\n    procDef: 'Process',\r\n    processTowards: 'Process towards',\r\n    otherNodesAssign: 'Assign other nodes'\r\n  },\r\n  batchSubmit: {\r\n    row: '',\r\n    success: 'Success',\r\n    error: 'Error',\r\n    failed: 'Failed',\r\n    validationFailed: 'Signature verification failed',\r\n    single: 'Failed tasks please process it singly',\r\n    selected: 'Selected',\r\n    item: 'items,',\r\n    time: 'time more than',\r\n    second: 'seconds'\r\n  },\r\n  batchStartProcess: {\r\n    row: '<br/>',\r\n    success: 'Success',\r\n    error: 'Error',\r\n    failed: 'Failed',\r\n    single: 'Failed tasks please process it singly'\r\n  },\r\n  comment: {\r\n    static: {\r\n      title: 'Approval comments',\r\n      add: 'Add',\r\n      delete: 'Delete',\r\n      save: 'Save',\r\n      cancel: 'Cancel',\r\n      content: 'Content',\r\n      order: 'Order',\r\n      inputLabel: 'Comments',\r\n      manage: 'Comments management',\r\n      attachmentUpload: 'Attachment',\r\n      repeatFile: 'Contains repeat files:',\r\n      type: 'Type',\r\n      operate: 'Operate',\r\n      confirm: 'Confirm',\r\n      clickToAdd: 'Click to add',\r\n      public: 'public',\r\n      private: 'private',\r\n      messageSubject: 'message subject',\r\n      messageContent: 'message content',\r\n      comment: 'Comments',\r\n      tooLongTips: 'exceed the 4000 English character limit, it is recommended to submit comments by uploading attachments'\r\n    },\r\n    attachment: {\r\n      tips: 'click to upload attachments'\r\n    },\r\n    signature: {\r\n      title: 'Signature',\r\n      reset: 'Reset',\r\n      ok: 'OK',\r\n      sign: 'Sign, ',\r\n      upload: 'Upload',\r\n      tips: 'click to sign or upload a picture',\r\n      dialogTitle: 'Signature',\r\n      note1: '',\r\n      note2: 'or',\r\n      note3: '',\r\n      disable: 'disable signature',\r\n      download: \"download\",\r\n      view: \"view\",\r\n      delete: \"delete\"\r\n    }\r\n  },\r\n  addSign: {\r\n    allowSignToSign: 'Allow',\r\n    multiInstanceType: 'Multi instance type',\r\n    parallel: 'parallel',\r\n    preempt: 'preempt',\r\n    sequential: 'sequential'\r\n  },\r\n  backWardConfig: {\r\n    sequence: 'Sequence',\r\n    backToMe: 'Back to me',\r\n    backToCurrentNode: 'Back to current node',\r\n    allowResubmitToThisNode: ',resubmit to this node'\r\n  }\r\n};\r\n","import { en } from './en';\r\nimport { zh_CHT } from './zh-cht';\r\nimport { zh_CHS } from './zh-chs';\r\n\r\nexport const translate = {\r\n    'zh-CHS': zh_CHS,\r\n    'en': en,\r\n    'zh-CHT': zh_CHT\r\n};\r\n","export const zh_CHS = {\r\n  static: {\r\n    assignee: {\r\n      noAssignee: '请选择办理人员',\r\n    },\r\n    columnName: {\r\n      name: '名称',\r\n      code: '编号',\r\n      department: '组织信息',\r\n    },\r\n    title: '审批确认',\r\n    inputLabel: '审批意见',\r\n    inputHolder: '请输入审批意见',\r\n    footOk: '确定',\r\n    footCancel: '取消',\r\n    selectUser: '选择用户',\r\n    hideComment: '意见隐藏',\r\n    taskForm: '任务办理',\r\n    success: '成功'\r\n  },\r\n  cueWords: {\r\n    successPass: '审批通过',\r\n    inputOpinion: '请输入审批意见',\r\n    selectNode: '请选择下一环节',\r\n    select: '请选择',\r\n    processor: '办理人',\r\n    attachmentsRequired: '请上传附件',\r\n    signatureRequired: '请设置签名',\r\n    assignUser: '指派',\r\n    operateSuccess: '操作成功',\r\n    commonCommentTooLong: '意见超长（最长255字符），请重新编辑',\r\n  },\r\n  task: {\r\n    selectPlaceholder: '请选择',\r\n    passComment: '通过',\r\n    processAlone: '请单独处理',\r\n    urgeText: '接收人员',\r\n    backNodeText: '节点',\r\n    selectProcessor: '请选择办理人员',\r\n    notFoundBill: '该单据不支持在电脑端办理，请尝试去移动端进行办理',\r\n    nextNodeText: '下一环节',\r\n    assignText: '办理人员',\r\n    noUser: '无',\r\n    title: '任务办理',\r\n    noTask: '未找到对应的任务',\r\n    commentTooLong: '处理意见超出 4000 个英文字符限制，建议以附件方式提交意见',\r\n    activityName: '办理人员',\r\n    receiver: \"接收人员\",\r\n    urgeComment: \"请输入催办信息\",\r\n    noUrgeUsers: \"没有符合条件的催办用户\",\r\n    noUrgeSubject: \"消息主题未配置\",\r\n    noUrgeContent: \"消息内容未配置\",\r\n    person: \"人员\",\r\n    addSign: \"加签\",\r\n    priority: \"紧急程度\",\r\n    selectPriority: \"请选择紧急程度\"\r\n  },\r\n  startProcess: {\r\n    selectProcess: '请选择流程',\r\n    title: '提交确认',\r\n    selectNode: '请选择下一环节',\r\n    submitSuccess: '提交审批成功',\r\n    submitFailed: '提交审批失败',\r\n    cancelSubmitSuccess: '取消提交成功',\r\n    cancelSubmitFailed: '取消提交失败',\r\n    dataIdIsNull: '请选择一条数据',\r\n    dataIdIsEmpty: '请选择一条数据',\r\n    bizDefKeyIsNull: '流程分类ID不能为空',\r\n    success: '取消成功',\r\n    row: '条<br/>',\r\n    failed: '取消失败',\r\n    node: '节点，',\r\n    noUser: '没有找到合适的办理人',\r\n    cancelSubmitInfo: '已撤回至流程的开始节点，请修改后重新提交',\r\n    procDef: '流程定义',\r\n    processTowards: '即将流向',\r\n    otherNodesAssign: '指定其他节点办理人'\r\n  },\r\n  batchSubmit: {\r\n    row: '条，<br/>',\r\n    success: '办理成功',\r\n    error: '办理失败',\r\n    failed: '需要交互',\r\n    single: '失败的任务请单独处理',\r\n    selected: '已选择',\r\n    item: '项，',\r\n    time: '预计处理时间较长（大于',\r\n    second: '秒）'\r\n  },\r\n  batchStartProcess: {\r\n    row: '条，<br/>',\r\n    success: '提交成功',\r\n    error: '提交失败',\r\n    failed: '需要交互',\r\n    validationFailed: '验签失败',\r\n    single: '失败的单据请单独处理'\r\n  },\r\n  comment: {\r\n    static: {\r\n      title: '常用意见管理',\r\n      add: '新增',\r\n      delete: '删除',\r\n      save: '保存',\r\n      cancel: '取消',\r\n      content: '常用意见',\r\n      order: '顺序',\r\n      inputLabel: '常用意见',\r\n      manage: '意见管理',\r\n      attachmentUpload: '附件',\r\n      repeatFile: '包含重复文件：',\r\n      type: '类别',\r\n      operate: '操作',\r\n      confirm: '确认',\r\n      clickToAdd: '新增常用意见',\r\n      public: '公有',\r\n      private: '个人',\r\n      messageSubject: '消息主题',\r\n      messageContent: '消息内容',\r\n      comment: '处理意见',\r\n      tooLongTips: '超出 4000 个英文字符限制，建议以附件方式提交意见'\r\n    },\r\n    attachment: {\r\n      tips: '点击上传附件'\r\n    },\r\n    signature: {\r\n      title: '签名',\r\n      reset: '清空',\r\n      ok: '确定',\r\n      sign: '手写签名，',\r\n      upload: '上传图片',\r\n      tips: '点击设置签名',\r\n      dialogTitle: '电子签名',\r\n      note1: '电子签名可',\r\n      note2: '也可通过',\r\n      note3: '进行设置',\r\n      disable: '不启用签名',\r\n      download: \"下载\",\r\n      view: \"查看\",\r\n      delete: \"删除\"\r\n    }\r\n  },\r\n  addSign: {\r\n    allowSignToSign: '允许再',\r\n    multiInstanceType: '多人审批方式',\r\n    parallel: '并行会签',\r\n    preempt: '任意人处理',\r\n    sequential: '按顺序依次处理'\r\n  },\r\n  backWardConfig: {\r\n    sequence: '按顺序流转',\r\n    backToMe: '返回我',\r\n    backToCurrentNode: '返回本节点',\r\n    title: '驳回的节点通过后',\r\n    allowResubmitToThisNode: '后再次提交时直接回到本节点'\r\n  }\r\n};\r\n","export const zh_CHT = {\r\n  static: {\r\n    assignee: {\r\n      noAssignee: '請選擇辦理人員',\r\n    },\r\n    columnName: {\r\n      name: '名稱',\r\n      code: '編號',\r\n      department: '組織信息',\r\n    },\r\n    title: '審批確認',\r\n    inputLabel: '審批意見',\r\n    inputHolder: '請輸入審批意見',\r\n    footOk: '確定',\r\n    footCancel: '取消',\r\n    selectUser: '選擇用戶',\r\n    hideComment: '意見隱藏',\r\n    taskForm: '任务办理',\r\n    success: '成功'\r\n  },\r\n  cueWords: {\r\n    successPass: '審批通過',\r\n    inputOpinion: '請輸入審批意見',\r\n    selectNode: '請選擇下一環節',\r\n    select: '請選擇',\r\n    processor: '辦理人',\r\n    attachmentsRequired: '請上傳附件',\r\n    signatureRequired: '請設置簽名',\r\n    assignUser: '指派',\r\n    operateSuccess: '操作成功',\r\n    commonCommentTooLong: '意見超長（最長255字符），請重新編輯',\r\n  },\r\n  task: {\r\n    selectPlaceholder: '請選擇',\r\n    passComment: '通過',\r\n    processAlone: '請單獨處理',\r\n    urgeText: '接收人员',\r\n    backNodeText: '節點',\r\n    selectProcessor: '請選擇辦理人員',\r\n    notFoundBill: '該單據不支持在電腦端辦理，請嘗試去移動端進行辦理',\r\n    nextNodeText: '下一環節',\r\n    assignText: '辦理人員',\r\n    noUser: '無',\r\n    title: '任務辦理',\r\n    noTask: '未找到對應的任務',\r\n    commentTooLong: '處理意見超出 4000 個英文字符限制，建議以附件方式提交意見',\r\n    activityName: '辦理人員',\r\n    receiver: \"接收人員\",\r\n    urgeComment: \"請輸入催辦信息\",\r\n    noUrgeUsers: \"沒有符合條件的催辦用戶\",\r\n    noUrgeSubject: \"消息主題未配置\",\r\n    noUrgeContent: \"消息內容未配置\",\r\n    person: \"人员\",\r\n    addSign: \"加签\",\r\n    priority: \"紧急程度\",\r\n    selectPriority: \"请选择紧急程度\"\r\n  },\r\n  startProcess: {\r\n    selectProcess: '請選擇流程',\r\n    title: '提交確認',\r\n    selectNode: '請選擇下一環節',\r\n    submitSuccess: '提交審批成功',\r\n    submitFailed: '提交審批失敗',\r\n    cancelSubmitSuccess: '取消提交成功',\r\n    cancelSubmitFailed: '取消提交失敗',\r\n    dataIdIsNull: '請選擇一條數據',\r\n    dataIdIsEmpty: '請選擇一條數據',\r\n    bizDefKeyIsNull: '流程分類ID不能為空',\r\n    success: '取消成功',\r\n    row: '條<br/>',\r\n    failed: '取消失敗',\r\n    node: '節點，',\r\n    noUser: '沒有找到合適的辦理人',\r\n    cancelSubmitInfo: '已撤回至流程的開始節點，請修改後重新提交',\r\n    procDef: '流程定义',\r\n    processTowards: '即將流向',\r\n    otherNodesAssign: '指定其他節點辦理人'\r\n  },\r\n  batchSubmit: {\r\n    row: '條，<br/>',\r\n    success: '辦理成功',\r\n    error: '辦理失敗',\r\n    failed: '需要交互',\r\n    single: '失敗的任務請單獨處理',\r\n    selected: '已選中',\r\n    item: '項，',\r\n    time: '預計處理時間較長（大於',\r\n    second: '秒）'\r\n  },\r\n  batchStartProcess: {\r\n    row: '條，<br/>',\r\n    success: '提交成功',\r\n    error: '提交失敗',\r\n    failed: '需要交互',\r\n    validationFailed: '驗簽失敗',\r\n    single: '失敗的單據請單獨處理'\r\n  },\r\n  comment: {\r\n    static: {\r\n      title: '常用意見管理',\r\n      add: '新增',\r\n      delete: '刪除',\r\n      save: '保存',\r\n      cancel: '取消',\r\n      content: '常用意見',\r\n      order: '順序',\r\n      inputLabel: '常用意見',\r\n      manage: '意見管理',\r\n      attachmentUpload: '附件',\r\n      repeatFile: '包含重復文件：',\r\n      type: '類別',\r\n      operate: '操作',\r\n      confirm: '確認',\r\n      clickToAdd: '新增常用意見',\r\n      public: '公有',\r\n      private: '個人',\r\n      messageSubject: '消息主題',\r\n      messageContent: '消息內容',\r\n      comment: '處理意見',\r\n      tooLongTips: '超出 4000 個英文字符限制，建議以附件方式提交意見'\r\n    },\r\n    attachment: {\r\n      tips: '點擊上傳附件'\r\n    },\r\n    signature: {\r\n      title: '簽名',\r\n      reset: '清空',\r\n      ok: '確定',\r\n      sign: '手寫簽名，',\r\n      upload: '上傳圖片',\r\n      tips: '點擊設置簽名',\r\n      dialogTitle: '電子簽名',\r\n      note1: '電子簽名可',\r\n      note2: '也可通過',\r\n      note3: '進行設置',\r\n      disable: '不啟用簽名',\r\n      download: \"下載\",\r\n      view: \"查看\",\r\n      delete: \"删除\"\r\n    }\r\n  },\r\n  addSign: {\r\n    allowSignToSign: '允許再',\r\n    multiInstanceType: '多人審批方式',\r\n    parallel: '並行會簽',\r\n    preempt: '任意人處理',\r\n    sequential: '按順序依次處理'\r\n  },\r\n  backWardConfig: {\r\n    sequence: '按順序流轉',\r\n    backToMe: '返回我',\r\n    backToCurrentNode: '返回本節點',\r\n    allowResubmitToThisNode: '后再次提交时直接回到本节点'\r\n  }\r\n};\r\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { translate } from './index';\r\n\r\n@Injectable()\r\nexport class I18nService {\r\n    defaultLang: string;\r\n    langData: any;\r\n    constructor() {\r\n        this.defaultLang = localStorage.getItem('languageCode');\r\n        if (!this.defaultLang) {\r\n            this.langData = translate['zh-CHS'];\r\n        } else {\r\n            this.langData = translate[this.defaultLang];\r\n        }\r\n    }\r\n\r\n    getValue(name: string): any {\r\n        if (!name) {\r\n            return '';\r\n        }\r\n        let resultVal = '';\r\n        if (name.indexOf('.') === -1) {\r\n            resultVal = this.langData[name];\r\n        } else {\r\n            resultVal = name.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, this.langData);\r\n        }\r\n        return resultVal;\r\n    }\r\n}\r\n","import { PriorityItem } from './simulate-response';\r\nimport { TaskAction, ActionParameter } from './task-action';\r\n\r\n/**\r\n * 任务状态\r\n */\r\nexport enum TaskState {\r\n    /**\r\n     * 待办\r\n     */\r\n    todo = 2,\r\n    /**\r\n     * 已办\r\n     */\r\n    done = 5,\r\n}\r\n/**\r\n * 任务实体定义\r\n */\r\nexport class TaskEntity {\r\n\r\n    id: string;\r\n\r\n    name: string;\r\n\r\n    categoryId: string;\r\n\r\n    state: TaskState;\r\n\r\n    startTime: Date;\r\n\r\n    endTime?: Date;\r\n\r\n    dueDate?: string;\r\n\r\n    targetDate?: string;\r\n\r\n    owner: string;\r\n\r\n    executor: string;\r\n\r\n    sourceId: string;\r\n\r\n    description: string;\r\n\r\n    taskType: number;\r\n\r\n    priority: number;\r\n\r\n    priorityName: string;\r\n\r\n    priorityItemList?: PriorityItem[];\r\n\r\n    submitter: string;\r\n\r\n    processInstanceId: string;\r\n\r\n    fStr1: string;\r\n    fStr2: string;\r\n    fStr3: string;\r\n    fStr4: string;\r\n    fStr5: string;\r\n    fStr6: string;\r\n    fStr7: string;\r\n    fStr8: string;\r\n\r\n    fTime1?: Date;\r\n    fTime2?: Date;\r\n    fTime3?: Date;\r\n    fTime4?: Date;\r\n\r\n    fDec1: number;\r\n    fDec2: number;\r\n    fDec3: number;\r\n    fDec4: number;\r\n\r\n    fText1: string;\r\n    fText2: string;\r\n    fText3: string;\r\n    fText4: string;\r\n\r\n    actions: TaskAction[];\r\n    refBizId: string;\r\n    conclusionValue: string;\r\n}\r\n","import { FlowNodeInfo } from './start-process-payload';\r\n\r\nexport class CompleteContext {\r\n\r\n    workItemId: string;\r\n\r\n    conclusionValue: string;\r\n\r\n    comment: string;\r\n\r\n    signAssignees: string[];\r\n\r\n    nextFlowNodes: FlowNodeInfo[];\r\n\r\n    addendum: Addendum;\r\n\r\n    verifySigned?: VerifySigned;\r\n\r\n    dynamicBackWardRule: string;\r\n\r\n    priority: number;\r\n\r\n    otherAssignNodes: FlowNodeInfo[];\r\n\r\n\r\n}\r\n\r\nexport class Addendum {\r\n\r\n    signature: string;\r\n\r\n    attachment: string;\r\n}\r\n\r\nexport class VerifySigned {\r\n\r\n    certBase64Info: string;\r\n\r\n    msg: string[];\r\n\r\n    signedmsg: string;\r\n\r\n    useCase: string;\r\n}\r\n","import { OrganizationScope } from './organization-scope';\r\nimport { User } from './user';\r\nimport { FlowNodeInfo } from './start-process-payload';\r\nimport { ProcessDefinition } from './execution-response';\r\nimport { Addendum } from './complete-context';\r\n\r\n/**\r\n * 指定参与者信息：需要指定参与者的活动、待指定用户列表\r\n */\r\nexport class AssigneeInfo {\r\n\r\n    /**\r\n     * 工作项ID\r\n     */\r\n    workItemId: string;\r\n\r\n    /**\r\n     * 参与者列表\r\n     */\r\n    assigneeIds: string[];\r\n\r\n    /**\r\n     * 参与者用户列表\r\n     */\r\n    assigneeUsers: User[];\r\n\r\n    /**\r\n     * 是否允许指派\r\n     */\r\n    selectAssignee: boolean;\r\n\r\n    /**\r\n     * 是否多选\r\n     */\r\n    multiSelect: boolean;\r\n\r\n    /**\r\n     * 是否允许全员指派\r\n     */\r\n    allowGlobalAssign: boolean;\r\n\r\n    /**\r\n     * 指派范围\r\n     */\r\n    organizationScope: OrganizationScope[];\r\n}\r\n\r\n/**\r\n * 根据流程指定下一步参与者参数\r\n */\r\nexport class AssignParameter {\r\n\r\n    workItemId: string;\r\n\r\n    assigneeIds: string[];\r\n\r\n    comment: string;\r\n\r\n    addendum?: Addendum;\r\n\r\n    priority: number;\r\n}\r\n\r\n\r\n/**\r\n * 完成工作项返回结果\r\n */\r\nexport class CompleteResponse {\r\n\r\n    dataId: string;\r\n\r\n    needInteraction: boolean;\r\n\r\n    nextAssigneeInfos: AssigneeInfo[];\r\n\r\n    procInstId: string;\r\n\r\n    nextFlowNodes: FlowNodeInfo[];//提交后并行的情况\r\n\r\n    procDefs: ProcessDefinition[];\r\n}\r\n\r\n","/**\r\n * 任务中心配置\r\n */\r\nexport class TaskCenterConfig {\r\n\r\n    id: string;\r\n\r\n    configCode: string;\r\n\r\n    configName: string;\r\n\r\n    configNote: string;\r\n\r\n    defaultValue: string;\r\n\r\n    currentValue: string;\r\n\r\n    displayText: string;\r\n\r\n    ownerId: string;\r\n\r\n    ownerType: string;\r\n\r\n    creator: string;\r\n\r\n    createTime: string;\r\n\r\n    lastModifier: string;\r\n\r\n    lastModifiedTime: string;\r\n\r\n}\r\n\r\n/**\r\n * 任务中心自定义配置项Code\r\n */\r\nexport enum ConfigCode {\r\n\r\n    If_Show_Submit_Dialog = 'If_Show_Submit_Dialog',\r\n\r\n    Info_After_Submit = 'Info_After_Submit',\r\n\r\n    Info_After_Cancel_Submit = 'Info_After_Cancel_Submit',\r\n\r\n    If_Use_Sign_By_Default = 'If_Use_Sign_By_Default',\r\n\r\n    If_Show_Attachment = 'If_Show_Attachment',\r\n\r\n    If_Show_Signature = 'If_Show_Signature',\r\n\r\n    Default_Approval_Comment = 'Default_Approval_Comment',\r\n\r\n    If_Store_Comment = 'If_Store_Comment',\r\n\r\n    User_Help_Type = 'User_Help_Type',\r\n\r\n    If_Can_Edit_Signature = 'If_Can_Edit_Signature'\r\n}\r\n\r\n/**\r\n * 配置项生效级别\r\n */\r\nexport enum OwnerType {\r\n\r\n    User = 'user',//用户级\r\n\r\n    Category = 'category',//任务分类级别\r\n\r\n    BizDefKey = 'bizdefkey',//流程分类级别\r\n\r\n    All = 'all',//全局级别\r\n}","import { Addendum } from \"./complete-context\";\r\n\r\n/**\r\n * 任务办理参数\r\n */\r\nexport class WorkItemExecuteParam {\r\n\r\n    workItemId: string;\r\n\r\n    comment: string;\r\n\r\n    addendum: Addendum;\r\n\r\n    hideComment?: boolean;\r\n\r\n    priority?: number;\r\n}\r\n\r\n/**\r\n * 加签、征询、知会参数\r\n */\r\nexport class CounterSignParam extends WorkItemExecuteParam {\r\n\r\n    action: string;//AddSignFront、AddSignBehind、Notify\r\n\r\n    assignees: string[];\r\n\r\n}","export class User {\r\n\r\n    id: string;\r\n\r\n    code?: string;\r\n\r\n    name: string;\r\n\r\n    note?: string;\r\n\r\n    orgId?: string;\r\n\r\n    orgCode?: string;\r\n\r\n    orgName?: string;\r\n\r\n    orgNamePath?: string;//组织全路径\r\n\r\n    orderNum?: number\r\n}","import {User} from \"./user\";\r\n\r\n/**\r\n * 催办模拟接口请求body\r\n */\r\nexport class UrgeHandleSimulateContext {\r\n\r\n  procInstId: string;\r\n\r\n}\r\n\r\n/**\r\n * 催办模拟返回实体\r\n */\r\nexport class UrgeHandleResponse {\r\n\r\n  urgeUsers: UrgeUser[];\r\n\r\n}\r\n\r\n/**\r\n * 催办用户返回实体\r\n */\r\nexport class UrgeUser extends User {\r\n\r\n  urgeInfos: UrgeInfo[];\r\n\r\n  anonymousText: string;\r\n\r\n  sendTypes: string;\r\n\r\n}\r\n\r\n/**\r\n * 执行催办请求body\r\n */\r\nexport class UrgeHandleContext {\r\n\r\n  procInstId: string;\r\n\r\n  urgeUsers: UrgeUser[];\r\n\r\n  urgeMessageSubject: string;\r\n\r\n  urgeMessageContent: string;\r\n\r\n  addReminder: boolean;\r\n\r\n}\r\n\r\nexport class UrgeInfo {\r\n\r\n  workItemId: string;\r\n\r\n  activityInstanceId: string;\r\n\r\n  sendTypes: string;\r\n\r\n  urgeMessageSubject: string;\r\n\r\n  urgeMessageContent: string;\r\n\r\n  addReminder: boolean;\r\n\r\n  subjectEditable: boolean;\r\n\r\n  contentEditable: boolean;\r\n}\r\n","export class BatchVerifySignedContext {\r\n\r\n  verifySigned: VerifySigned;\r\n\r\n}\r\nexport class VerifySigned {\r\n\r\n  certBase64Info: string;\r\n\r\n  msg: string[];\r\n\r\n  signedmsg: string;\r\n\r\n  useCase: string;\r\n\r\n}\r\n","/**\r\n * 工作流上下文\r\n */\r\nexport class WfContext {\r\n\r\n    processCategoryId: string;\r\n    \r\n}","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'urge-handle',\r\n  templateUrl: './urge-handle.component.html',\r\n  styleUrls: ['./urge-handle.component.css', '../task-execute/task-execute.component.css']\r\n})\r\nexport class UrgeHandleComponent implements OnInit {\r\n\r\n  @Input() placeholder = '';\r\n  @Input() showMessageSubject = false;// 是否显示消息主题\r\n  @Input() textAreaHeight: number;//文字框的高度\r\n  @Input() urgeMessageSubject: string; // 消息主题文本\r\n  @Input() urgeMessageContent: string; // 消息内容文本\r\n  @Input() subjectEditable: boolean = false; // 消息主题是否可编辑\r\n  @Input() contentEditable: boolean = false; // 消息内容是否可编辑\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Addendum } from \"./complete-context\";\r\n\r\n/**\r\n * 执行办理的基础payload\r\n */\r\nexport class BasePayload {\r\n\r\n    id?: string;\r\n    /**\r\n     工作项Id\r\n     */\r\n    workItemId: string;\r\n    /**\r\n     备注留言\r\n     */\r\n    comment: string;\r\n    /**\r\n     * 附录信息（含签名、附件）\r\n     */\r\n    addendum: Addendum;\r\n    /**\r\n     审批结论值\r\n     */\r\n    conclusionValue: string;\r\n\r\n}","import { BasePayload } from \"./base-payload\";\r\nimport { OrganizationScope } from \"./organization-scope\";\r\n\r\n/**\r\n * 加签模拟接口返回\r\n */\r\nexport class AddSignSimulateResponse {\r\n    /**\r\n     * 组织\r\n     */\r\n    organization: OrganizationScope;\r\n    /**\r\n     * 多人会签方式\r\n     */\r\n    multiInstanceType: MultiInstanceType;\r\n    /**\r\n     * 是否允许再加签\r\n     */\r\n    showSignToSign: boolean;\r\n}\r\n\r\n/**\r\n *  多人会签方式\r\n */\r\nexport enum MultiInstanceType {\r\n    /**\r\n     * 抢占\r\n     */\r\n    Preempt = 'Preempt',\r\n    /**\r\n     * 并行\r\n     */\r\n    Parallel = 'Parallel',\r\n    /**\r\n     * 串行\r\n     */\r\n    Sequential = 'Sequential'\r\n\r\n}\r\n\r\n/**\r\n * 加签提交的payload\r\n */\r\nexport class AddSignPayload extends BasePayload {\r\n\r\n    /**\r\n     * 加签方式：前加签、后加签、并加签（当前会签）、征询/协办\r\n     */\r\n    actionCode: string;\r\n\r\n    /**\r\n     * 多人会签方式：抢占 Preempt、并行会签 Parallel、串行会签Sequential\r\n     */\r\n    multiInstanceType: string;\r\n\r\n    /**\r\n     * 会签策略：全员通过allPass、一人通过onePass\r\n     */\r\n    counterSignRule: string;\r\n\r\n    /**\r\n     * 办理规则\r\n     * all所有用户都办理\r\n     * compliance符合规则往下流转\r\n     */\r\n    completedRule: string;\r\n\r\n    /**\r\n     * 加签人员\r\n     */\r\n    signAssignees: string[];\r\n\r\n    /**\r\n     * 加签节点名称\r\n     */\r\n    activityName: string;\r\n\r\n    /**\r\n     * 允许再加签\r\n     */\r\n    allowSignToSign: boolean;\r\n\r\n    /**\r\n     * 紧急程度\r\n     */\r\n    priority: number;\r\n\r\n\r\n}","/**\r\n * 预解析返回的subject\r\n */\r\nexport class SimulateSubject {\r\n\r\n    showDialog: boolean = true;//任务列表是否弹框\r\n\r\n    dialogHeight: number;//弹框高度\r\n\r\n    result: boolean;//结果\r\n\r\n}","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  TemplateRef,\r\n  HostBinding,\r\n  Injector,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { Addendum, VerifySigned, CompleteContext } from '../../entity/complete-context';\r\nimport { TaskService } from '../../service/task.service';\r\nimport { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { I18nService } from '../../service/i18n/i18n.service';\r\nimport { CompleteResponse, AssignParameter, AssigneeInfo } from '../../entity/complete-response';\r\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { TaskAction } from '../../entity/task-action';\r\nimport { WfTaskHandlerService } from '../../wf-task-handler.service';\r\nimport { TaskEntity } from '../../entity/task-entity';\r\nimport { SubmitResult, ActionBaseImplComponent, ActionEvent, TaskEventResult, TaskEventContext, ActionOrigin } from '@gsp-wf/task-impl-api';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { OrganizationScope } from '../../entity/organization-scope';\r\nimport { FlowNodeInfo, Assignee } from '../../entity/start-process-payload';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { AssignInfoHelpEntity } from '../../entity/assignInfoHelp';\r\nimport { SimulateResponse } from '../../entity/simulate-response';\r\nimport { BillMethodConfig, FormEventMessage } from '../../entity/formAction';\r\nimport { ConfigCode, TaskCenterConfig } from '../../entity/task-center-config';\r\nimport { CounterSignParam, WorkItemExecuteParam } from '../../entity/workitem-execute-param';\r\nimport { UrgeHandleContext, UrgeHandleResponse, UrgeHandleSimulateContext } from '../../entity/urge-handle';\r\nimport { BatchVerifySignedContext } from '../../entity/batchVerifysigned';\r\nimport { WfContext } from '../../entity/wfContext';\r\nimport { UrgeHandleComponent } from \"../urge-handle/urge-handle.component\";\r\nimport { AddSignPayload, AddSignSimulateResponse, MultiInstanceType } from '../../entity/add-sign';\r\nimport { SimulateSubject } from '../../entity/simulaite-subject';\r\n\r\ndeclare var System: any;\r\ndeclare const gspCA: any;\r\n\r\n@Component({\r\n  selector: 'lib-task-execute',\r\n  templateUrl: './task-execute.component.html',\r\n  styleUrls: ['./task-execute.component.css'],\r\n})\r\nexport class TaskExecuteComponent extends ActionBaseImplComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  /**\r\n   * 消息监听处理方法\r\n   */\r\n  private static func = null;\r\n  task: TaskEntity;//当前任务\r\n  workItemId: string; // 工作项ID\r\n  processInstanceId: string; // 流程实例ID\r\n  actionEntity = new TaskAction(); // 动作实体\r\n  comment = ''; // 审批意见\r\n  private MAX_COMMENT_LENGTH = 4000;//审批意见最大长度\r\n  defaultComment: string;//默认审批意见\r\n  wfCacheComment: string;//缓存的意见\r\n  currentDefaultValue: string;//当前动作的默认意见\r\n  taskList: TaskEntity[] = [];//批量审批接收到的任务list\r\n  batchSecond: number = 0;//批量操作的时间\r\n\r\n  ifSelectNode = false; // 是否显示选择下一环节\r\n  ifSelectUser = false; // 是否显示下一环节处理人\r\n  ifAssignUser = false; // 是否显示办理人员框\r\n  ifUrgeType = false; // 是否显示接收人框（催办消息接收人）\r\n  ifShowCommentToMySelf = false;// 是否显示审批记录仅自己可见\r\n\r\n  singleSelect = false; // 用户帮助是否单选，默认多选\r\n  selectTargetAble = false; // 是否允许选择下一环节\r\n  hideComment = false;//审批记录仅自己可见\r\n\r\n  filter = { notGetCurrentUser: true, notGetStopUser: true, orderField: 'order', withAllOrg: true, orgId: '' }; // 系统用户帮助是否过滤当前人\r\n  selectedUsers: string[] = []; // 用户帮助选择后的Id数组\r\n\r\n  selectedUserNgModule: string; // 选择处理人的placeholder\r\n\r\n  @ViewChild('taskExecuteButtons') buttons: TemplateRef<any>; // 确认取消按钮\r\n  @ViewChild(SysFarrisLookupComponent) sysUserHelp: SysFarrisLookupComponent; // 系统用户帮助\r\n  @ViewChild(UrgeHandleComponent) urgeHandleComponent: UrgeHandleComponent;\r\n\r\n  subject = new BehaviorSubject<SubmitResult>(null);\r\n  submitResult: SubmitResult = { result: true, isClose: true }; // 动作执行完成后返回的实体结果\r\n  bindingData: { id?: string, name?: string } = {}; // 系统帮助多选时用到\r\n\r\n  selectNodeText: string = this.i18nService.getValue('task.nextNodeText'); // 下一环节显示的文字,\"下一环节\"\r\n  selectUserText: string; // 处理人员显示文字\r\n  commentPlaceHolder: string = this.i18nService.getValue('static.inputHolder');//审批意见框placeholder\r\n  showAttachment: boolean = true;//是否显示附件上传\r\n  showSign: boolean = true;//是否显示签名\r\n  showCommonComment: boolean = true;//是否显示常用意见\r\n  textAreaHeight: number = 84;//文字框的高度\r\n\r\n  billMethodConfigs: BillMethodConfig[] = []; // 表单动作配置列表\r\n\r\n  nodeDefaultValue: string;//默认下一环节（提示用）\r\n\r\n  selectedNodeId: string; // 选择的下一环节ID，并行分支是，逗号隔开的\r\n  destNodes: { id: string, name: string }[] = []; // 候选下一环节\r\n\r\n  dialogHeight = 270; // 弹框的高度\r\n  dialogHeightBase = 70;\r\n\r\n  addendum = new Addendum(); // 附件、签名信息\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  assignInfos: AssignInfoHelpEntity[] = [{ // 节点返回的指派信息（多个）\r\n    selectedAssignees: [],\r\n    assigneeInfo: null,\r\n    assignees: [],\r\n    activityDefinitionName: '',\r\n    activityDefinitionId: '',\r\n    dependency: '',\r\n    anonymous: false,\r\n    anonymousText: null,\r\n    resolved: false,\r\n  }];\r\n\r\n  otherAssignInfos: AssignInfoHelpEntity[] = [];//其他节点指派信息\r\n\r\n  originOtherAssignInfos: AssignInfoHelpEntity[] = [];//缓存一开始的其他节点指派信息\r\n\r\n  response: SimulateResponse; // 保存模拟审批后返回的内容，选择节点时使用\r\n  urgeHandleResponse: UrgeHandleResponse;//保存催办模拟后返回的内容\r\n\r\n  formObject: any; // 表单对象\r\n  ifRegistered = false; // 表单是否注册\r\n  configList: TaskCenterConfig[] = []; //任务中心配置项\r\n\r\n  verifySigned: VerifySigned = new VerifySigned(); // 数字验签参数\r\n  submitDisable: boolean = false; // 提交按钮是否禁用\r\n\r\n  //加签使用\r\n  addSign = {\r\n    showSignToSign: false,\r\n    allowSignToSIgn: true,\r\n    showMultiInstanceType: false,\r\n    multiInstanceType: [\r\n      { value: 'Parallel', name: this.i18nService.getValue('addSign.parallel') },\r\n      { value: 'Sequential', name: this.i18nService.getValue('addSign.sequential') },\r\n      { value: 'Preempt', name: this.i18nService.getValue('addSign.preempt') },\r\n    ],\r\n    originMultiInstType: '',\r\n    curMultiInstType: MultiInstanceType.Parallel.toString()\r\n  }\r\n  //动态驳回配置\r\n  showBackWardConfig = {\r\n    title: this.i18nService.getValue('backWardConfig.title'),\r\n    dynamicBackWardRuleAble: false,\r\n    displayPlaceholder: '',\r\n    showTips: false,\r\n    enable: false,\r\n    backWardRules: [{\r\n      name: this.i18nService.getValue('backWardConfig.sequence'),\r\n      value: 'sequence'\r\n    }, {\r\n      name: this.i18nService.getValue('backWardConfig.backToMe'),\r\n      value: 'backToMe'\r\n    }, {\r\n      name: this.i18nService.getValue('backWardConfig.backToCurrentNode'),\r\n      value: 'backToCurrentNode'\r\n    }]\r\n  }\r\n\r\n  /**\r\n   * 任务催办时使用\r\n   */\r\n  showUrgeMessageSubject: boolean = false; // 是否显示催办消息主题（催办时使用）\r\n  urgeMessageSubject: string; // 催办消息主题文本\r\n  urgeMessageContent: string; // 催办消息内容文本\r\n  addReminder: boolean; // 是否显示催办人消息\r\n  subjectEditable: boolean; // 主题可编辑\r\n  contentEditable: boolean; // 内容可编辑\r\n\r\n  wfContext = new WfContext();//工作流上下文\r\n  enablePriority: boolean = false;//是否显示密级（动作级别）\r\n\r\n  @HostBinding('class') cls = '';\r\n\r\n  POST_MESSAGE_TARGET = window.document.location.origin;\r\n  private messageSubject;\r\n  private language = localStorage.getItem('languageCode') || 'zh-CHS';//中英文\r\n\r\n  actionToken: string;//subject动作注册token\r\n  simulateToken: string;//预解析注册token\r\n  selectedPriority: number;//任务办理选中后的紧急程度\r\n\r\n  constructor(\r\n    private taskService: TaskService,\r\n    private notify: NotifyService,\r\n    private i18nService: I18nService,\r\n    private handlerService: WfTaskHandlerService,\r\n    private loadingService: LoadingService,\r\n    private message: MessagerService,\r\n    private injector: Injector,\r\n  ) {\r\n    super();\r\n    // 如果存在消息监听，先删掉\r\n    if (TaskExecuteComponent.func) {\r\n      window.removeEventListener('message', TaskExecuteComponent.func, false);\r\n    }\r\n    this.addMessageListener();\r\n  }\r\n\r\n  /**\r\n   * 组件销毁时，去掉subject注册\r\n   */\r\n  ngOnDestroy(): void {\r\n    if (this.actionToken) {\r\n      this.taskService.subjectRemove(this.actionToken);\r\n    }\r\n    if (this.simulateToken) {\r\n      this.taskService.subjectRemove(this.simulateToken);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  ngOnInit() {\r\n    const load = this.loadingService.show();\r\n    this.taskService.getAllUserConfig().subscribe((configList: TaskCenterConfig[]) => {\r\n      load.close();\r\n      this.configList = configList;\r\n      const comment = configList.find(c => c.configCode === ConfigCode.Default_Approval_Comment);\r\n      const if_store_comment = configList.find(c => c.configCode === ConfigCode.If_Store_Comment);\r\n      let passComment: string;\r\n      let backComment: string;\r\n      if (comment && comment.currentValue) {\r\n        if (this.language == 'zh-CHS') {\r\n          passComment = JSON.parse(comment.currentValue).pass;\r\n          backComment = JSON.parse(comment.currentValue).back;\r\n        } else {\r\n          passComment = JSON.parse(comment.currentValue)['pass_' + this.language];\r\n          backComment = JSON.parse(comment.currentValue)['back_' + this.language];\r\n        }\r\n        if (this.actionEntity.code === 'Pass') {\r\n          this.comment = passComment;\r\n          this.defaultComment = passComment;\r\n        }\r\n        if (this.actionEntity.code === 'Back') {\r\n          this.comment = backComment;\r\n          this.defaultComment = backComment;\r\n        }\r\n      }\r\n      if (if_store_comment && if_store_comment.currentValue === 'true') {\r\n        if (this.wfCacheComment) {//开启暂存意见，当切换到驳回并且\r\n          if (this.actionEntity.code == 'Back' && this.wfCacheComment == passComment) {\r\n          } else {\r\n            this.comment = this.wfCacheComment;\r\n          }\r\n        }\r\n      }\r\n    }, () => {\r\n      load.close();\r\n    })\r\n    // 从任务办理界面打开时，才注册服务\r\n    if (this.origin === ActionOrigin.TaskForm) {\r\n      this.initFormEvent();\r\n      // 获取表单操作配置\r\n      this.taskService.getTaskFormInfo(this.workItemId).subscribe((re: any) => {\r\n        if (re && re.billMethodConfigs && re.billMethodConfigs.length) {\r\n          this.billMethodConfigs = re.billMethodConfigs;\r\n        }\r\n      });\r\n\r\n    }\r\n    let context = new UrgeHandleSimulateContext();\r\n    context.procInstId = this.processInstanceId;\r\n  }\r\n\r\n  private addMessageListener() {\r\n    window.addEventListener('message', this.eventHandler, false);\r\n    TaskExecuteComponent.func = this.eventHandler;\r\n  }\r\n\r\n  /**\r\n   * 监听事件处理\r\n   */\r\n  eventHandler = (event) => {\r\n    this.messageSubject.next(event);\r\n  }\r\n\r\n  /**\r\n   * 重写父类方法\r\n   * @param task\r\n   */\r\n  setTask(task: TaskEntity) {\r\n    if (task) {\r\n      this.task = task;\r\n      this.workItemId = task.sourceId;\r\n      this.processInstanceId = task.processInstanceId;\r\n      this.wfContext.processCategoryId = task.categoryId;\r\n      this.selectedPriority = task.priority;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 批量办理 设置任务列表\r\n   * @param taskList \r\n   */\r\n  setTaskList(taskList: TaskEntity[]) {\r\n    if (taskList.length > 20) {\r\n      this.dialogHeight = 290;\r\n    }\r\n    this.taskList = taskList;\r\n    this.batchSecond = Math.ceil(this.taskList.length / 6);\r\n  }\r\n\r\n  /**\r\n   * 重写父类方法\r\n   * @param action\r\n   */\r\n  setAction(action: TaskAction): Observable<any> {\r\n    let subject = new Subject<SimulateSubject>();\r\n    let result = new SimulateSubject();\r\n    if (action) {\r\n      this.actionEntity = action;\r\n      if (this.task) {// 单个、批量都setAction，单个才执行模拟\r\n        return this.simulate(this.actionEntity);\r\n      }\r\n      if (this.taskList && this.taskList.length) {\r\n        return this.batchSimulate();\r\n      }\r\n    }\r\n    //批量时，也要返回\r\n    setTimeout(() => {\r\n      subject.next(result);\r\n    }, 100);\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 前事件初始化，将服务注册到window上，供表单调用\r\n   * 任务办理界面的window，表单的window.parent\r\n   */\r\n  private initFormEvent() {\r\n    // 审批前事件\r\n    this.actionToken = this.workItemId + 'action';\r\n    const actionToken = this.actionToken;\r\n    const subjectCode = 'FormSubjectCode';\r\n    (window as any).gspWfEventService = (window as any).gspWfEventService || {};\r\n    (window as any).gspWfEventService.register = (formObject: any) => {\r\n      this.taskService.subjectRegister(subjectCode, actionToken);\r\n      this.ifRegistered = true;\r\n      this.formObject = formObject;\r\n    };\r\n\r\n    (window as any).gspWfEventService.notify = (value: FormEventMessage) => {\r\n      if (this.ifRegistered) {\r\n        this.taskService.subjectNotify(actionToken, value);\r\n      } else {// 表单不注册，也可直接调用notify\r\n        this.simulateToken = this.workItemId + 'simulate';\r\n        const simulateToken = this.simulateToken;\r\n        this.taskService.subjectRegister(subjectCode, simulateToken);\r\n        this.taskService.subjectResponse(simulateToken, '', (value: FormEventMessage) => {\r\n          value && value.dataChanged && this.completeSimulate();\r\n        });\r\n        this.taskService.subjectNotify(simulateToken, value);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 点击提交的时候，执行表单的前事件\r\n   */\r\n  private beforeCompleteSubmit() {\r\n    if (this.origin == ActionOrigin.TaskForm) {\r\n      // 获取表单操作配置\r\n      const passPreActions = this.billMethodConfigs.filter(action => action.action === this.actionEntity.code && action.executionTime === 'Pre').sort((x, y) => x.sortOrder - y.sortOrder);\r\n      // 如果表单注册了事件\r\n      if (passPreActions && passPreActions.length) {\r\n        this.executeFormActions([...passPreActions]);\r\n      } else {// 没有定义前后事件，直接提交\r\n        this.completeSubmit();\r\n      }\r\n    } else {\r\n      this.completeSubmit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param formActions 表单中要执行的动作\r\n   */\r\n  private executeFormActions(formActions: BillMethodConfig[]) {\r\n    if (formActions.length > 0) {\r\n      this.messageSubject = new Subject<any>();\r\n      this.messageSubject.subscribe((re: any) => {\r\n        const data = re.data.data;\r\n        if (data.result === true) {\r\n          if (data.dataChanged === true) {// 如果需要预解析，先预解析再继续执行\r\n            this.completeSimulate().subscribe((r) => {\r\n              if (r.result) {// 预解析正确\r\n                this.executeFormActions(formActions);\r\n              } else {// 预解析错误\r\n                this.subject.next({ result: false, isClose: false }); // 任务办理界面不关闭\r\n              }\r\n            });\r\n          } else {// 不需要预解析，继续执行\r\n            this.executeFormActions(formActions);\r\n          }\r\n        } else {\r\n          this.subject.next({ result: false, isClose: false }); // 任务办理界面不关闭\r\n          throw new Error('审批前表单操作执行失败！');\r\n        }\r\n      });\r\n      // 执行表单动作\r\n      const formAction = formActions.shift();\r\n      this.sendMessage(this.workItemId, formAction);\r\n    } else {\r\n      this.completeSubmit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 单个任务预解析\r\n   * @param action\r\n   */\r\n  private simulate(action: TaskAction): Observable<SimulateSubject> {\r\n    switch (action.code) {\r\n      case 'AssignUser': // 指派 单独参数\r\n        return this.assignSimulate();\r\n      case 'Claim': // 领用\r\n        return this.defaultSubjectNext();\r\n      case 'Unclaim': // 取消领用\r\n        return this.defaultSubjectNext();\r\n      case 'Retrieve': // 取回\r\n        return this.defaultSubjectNext();\r\n      case 'Transfer': // 移交 单独参数\r\n        return this.transferSimulate();\r\n      case 'AddSign': // 加签\r\n        return this.addSignSimulate();\r\n      case 'AddSignFront': // 征询\r\n        return this.addSignFrontSimulate();\r\n      case 'Notify': //知会\r\n        return this.notifySimulate();\r\n      case 'Refuse': // 否决\r\n        return this.defaultSubjectNext();\r\n      case 'Obsolete': // 作废\r\n        return this.defaultSubjectNext();\r\n      case 'Comment': // 评论\r\n        return this.defaultSubjectNext();\r\n      case 'ReadTask': // 已阅\r\n        this.ifShowCommentToMySelf = true;\r\n        return this.defaultSubjectNext(295);\r\n      case 'UrgeHandle'://催办\r\n        return this.urgeHandleSimulate();\r\n      case 'CancelConsult'://取消征询\r\n        return this.defaultSubjectNext();\r\n      default: // 通过 驳回 重新提交 其他自定义的动作\r\n        return this.completeSimulate();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 批量审批预解析\r\n   * @returns \r\n   */\r\n  private batchSimulate(): Observable<SimulateSubject> {\r\n    switch (this.actionEntity.code) {\r\n      case \"ReadTask\"://批量已阅\r\n        this.ifShowCommentToMySelf = true;\r\n        return this.defaultSubjectNext(295);\r\n      case \"Retrieve\"://批量取回\r\n        return this.defaultSubjectNext();\r\n      case \"Transfer\"://批量移交\r\n        this.ifSelectUser = true;\r\n        this.selectUserText = this.i18nService.getValue('task.receiver');//接收人员\r\n        this.singleSelect = true;\r\n        return this.defaultSubjectNext(this.dialogHeight + this.dialogHeightBase);\r\n      default:\r\n        return this.defaultSubjectNext();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 默认的预解析返回结果，可控制弹框高度\r\n   * @param dialogHeight \r\n   * @returns \r\n   */\r\n  private defaultSubjectNext(dialogHeight?: number): Observable<SimulateSubject> {\r\n    let subject = new Subject<SimulateSubject>();\r\n    let s = new SimulateSubject();\r\n    s.showDialog = true;\r\n    s.dialogHeight = dialogHeight ? dialogHeight : this.dialogHeight;\r\n    s.result = true;\r\n    setTimeout(() => {\r\n      subject.next(s);\r\n    }, 100);\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 真正地提交\r\n   * 重写父类方法\r\n   */\r\n  submit(): Observable<SubmitResult> {\r\n    switch (this.actionEntity.code) {\r\n      case 'AssignUser': // 指派 单独参数\r\n        this.assignSubmit();\r\n        break;\r\n      case 'Claim': // 领用\r\n        this.claimSubmit();\r\n        break;\r\n      case 'Unclaim': // 取消领用\r\n        this.unClaimSubmit();\r\n        break;\r\n      case 'Retrieve': // 取回\r\n        this.retrieveSubmit();\r\n        break;\r\n      case 'Transfer': // 移交 单独参数\r\n        this.transferSubmit();\r\n        break;\r\n      case 'AddSign': // 加签\r\n        this.addSignSubmit();\r\n        break;\r\n      case 'AddSignFront': // 征询\r\n        this.addSignFrontSubmit();\r\n        break;\r\n      case 'Comment': // 评论\r\n        this.commentSubmit();\r\n        break;\r\n      case 'Notify': //知会\r\n        this.notifySubmit();\r\n        break;\r\n      case 'ReadTask': // 已阅\r\n        this.readSubmit();\r\n        break;\r\n      case 'UrgeHandle'://催办\r\n        this.urgeHandleSubmit();\r\n        break;\r\n      case 'CancelConsult'://取消征询\r\n        this.cancelConsultSubmit();\r\n        break;\r\n      default: // 通过 驳回 否决 作废 重新提交 其他自定义动作\r\n        this.beforeCompleteSubmit();\r\n    }\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量办理点击提交\r\n   * @param tasks \r\n   * @returns \r\n   */\r\n  batchSubmit(tasks: TaskEntity[]): Observable<SubmitResult> {\r\n    switch (this.actionEntity.code) {\r\n      case \"ReadTask\"://批量已阅\r\n        return this.batchReadTaskSubmit(tasks);\r\n      case \"Retrieve\"://批量取回\r\n        return this.batchRetrieveSubmit(tasks);\r\n      case \"Claim\"://批量领用\r\n        return this.batchClaimSubmit(tasks);\r\n      case \"Unclaim\"://批量取消领用\r\n        return this.batchUnclaimSubmit(tasks);\r\n      case \"Transfer\"://批量移交\r\n        return this.batchTransferSubmit(tasks);\r\n      default:\r\n        return this.batchCompleteSubmit(tasks);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行批量前事件\r\n   * @param tasks 批量任务列表\r\n   */\r\n  batchCompleteSubmit(tasks: TaskEntity[]): Observable<SubmitResult> {\r\n    let filterNum = 0;\r\n    const subject = new BehaviorSubject<SubmitResult>(null);\r\n    const successSubmit: SubmitResult = { result: true, isClose: true };\r\n    if ((this.actionEntity.code === 'Back' || this.actionEntity.code === 'Refuse') && !this.comment) {// 批量意见是否必填不支持根据审批项配置操作，批量驳回意见必填\r\n      this.notify.warning(this.i18nService.getValue('cueWords.inputOpinion'));\r\n      subject.next({ result: false, isClose: false });\r\n    } else if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const noActionTasks = tasks.filter(t => t.actions.findIndex(a => a.code === this.actionEntity.code) === -1);\r\n      if (noActionTasks && noActionTasks.length > 0) {\r\n        for (const a of noActionTasks) {\r\n          filterNum++;\r\n          if (filterNum === tasks.length) {\r\n            subject.next(successSubmit);\r\n            this.showBatchSubmitInfo(0, filterNum, 0, 0);\r\n          }\r\n        }\r\n      }\r\n      let actTasks = tasks.filter(t => t.actions.some(a => a.code === this.actionEntity.code));\r\n      if (actTasks && actTasks.length > 0) {\r\n        this.executeBatchEvent([...this.actionEntity.preEvents.filter(e => e.batch)], actTasks, this.actionEntity, (re: TaskEventResult) => {\r\n          if (re && re.result) {\r\n            if (re.passTasks) {\r\n              const backTasks = actTasks.filter(t => re.passTasks.findIndex(id => id === t.id) === -1);\r\n              if (backTasks && backTasks.length > 0) {\r\n                for (const t of backTasks) {\r\n                  filterNum++;\r\n                  if (filterNum === tasks.length) {\r\n                    subject.next(successSubmit);\r\n                    this.showBatchSubmitInfo(0, filterNum, 0, 0);\r\n                  }\r\n                }\r\n              }\r\n              actTasks = actTasks.filter(t => re.passTasks.findIndex(id => id === t.id) > -1);\r\n            }\r\n            if (actTasks.length > 0) {\r\n              const batchVerifySignedContext = new BatchVerifySignedContext();\r\n              this.batchVerifySubmit(actTasks, filterNum, batchVerifySignedContext).subscribe((r: any) => {\r\n                if (r && r.successSubmit && r.successSubmit.result) {\r\n                  this.executeBatchEvent([...this.actionEntity.postEvents.filter(e => e.batch)], r.successHandleTasks, this.actionEntity, () => {\r\n                    subject.next(r.successSubmit);\r\n                  }, { result: true, passTasks: r.successHandleTasks.map(t => t.id) });\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            subject.next({ result: false, isClose: false });\r\n          }\r\n        }, { result: true, passTasks: actTasks.map(t => t.id) });\r\n      }\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量数字签名\r\n   * @param tasks \r\n   * @param filterNum \r\n   * @param batchVerifySignedContext \r\n   * @returns \r\n   */\r\n  private batchVerifySubmit(tasks: TaskEntity[], filterNum: number = 0, batchVerifySignedContext: BatchVerifySignedContext): Observable<any> {\r\n    const subject = new Subject();\r\n    const verifyTasks = tasks.filter(t => {\r\n      const action = t.actions.find(a => a.code === this.actionEntity.code);\r\n      if (!action) {\r\n        return false;\r\n      } else {\r\n        if (action.parameters.some(p => p.code === 'CertificationNecessary' && p.value === 'true')) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n    const verifyTasksNum = verifyTasks.length;\r\n    if (verifyTasks.length > 0) {\r\n      const that = this;\r\n      if (\r\n        (window as any).gspframeworkService &&\r\n        (window as any).gspframeworkService.rtf\r\n      ) {\r\n        (window as any).gspframeworkService.rtf.caEvent.on(\r\n          (window as any).gspframeworkService.rtf.caEvent.signedMsgOverToken(),\r\n          'signedMsgOver',\r\n          function signMsgOver(signedData) {\r\n            if (signedData && signedData[0] === 'true' && signedData.length > 0) {\r\n              // 证书对象\r\n              const cert = gspCA.getCurCert();\r\n              // 验签参数\r\n              that.verifySigned = {\r\n                // 要验证的证书base64编码的字符流(certkey)\r\n                certBase64Info: gspCA.getCertBase64(cert),\r\n                // 签名原信息\r\n                msg: ['BatchDigitalSignature'],\r\n                // 要签名后信息\r\n                signedmsg: signedData[1][0],\r\n                // 用户使用场景，目前未使用，可以为空\r\n                useCase: null,\r\n              };\r\n              batchVerifySignedContext.verifySigned = that.verifySigned;\r\n              that.taskService.batchVerifySigned(batchVerifySignedContext).subscribe(() => {\r\n                const verifyTasksNum = 0;\r\n                that.batchComplete(tasks, filterNum, verifyTasksNum).subscribe(re => {\r\n                  subject.next(re);\r\n                });\r\n              }, (error) => {\r\n                const otherTasks = tasks.filter(t => verifyTasks.findIndex(task => task.id === t.id) === -1);\r\n                that.batchComplete(otherTasks, filterNum, verifyTasksNum).subscribe(re => {\r\n                  subject.next(re);\r\n                });\r\n              });\r\n            } else {\r\n              that.notify.error(signedData[1]);\r\n              subject.next({ successSubmit: { result: false, isClose: false }, successHandleTasks: new Array() });\r\n            }\r\n          }\r\n        );\r\n      }\r\n      const msg = ['BatchDigitalSignature'];\r\n      gspCA.getSignedMsg(msg);\r\n    } else {\r\n      this.batchComplete(tasks, filterNum, verifyTasksNum).subscribe(re => {\r\n        subject.next(re);\r\n      });\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 真正的批量提交任务\r\n   * @param tasks \r\n   * @param filterNum \r\n   * @param verifyTasksNum \r\n   * @returns \r\n   */\r\n  private batchComplete(tasks: TaskEntity[], filterNum: number = 0, verifyTasksNum: number): Observable<any> {\r\n    const subject = new Subject<any>();\r\n    let successNum = 0;\r\n    let failedNum = 0;\r\n    let errorNum = 0;\r\n    const successSubmit: SubmitResult = { result: true, isClose: true };\r\n    const successHandleTasks = new Array();\r\n\r\n    const load = this.loadingService.show();\r\n    for (const task of tasks) {\r\n      const context = new CompleteContext();\r\n      context.workItemId = task.sourceId;\r\n      context.conclusionValue = this.actionEntity.code;\r\n      context.comment = this.comment;\r\n      context.addendum = this.addendum;\r\n      this.taskService.completeSimulate(context).subscribe((response: SimulateResponse) => {\r\n        if (response && response.needInteraction === true) {// 需要交互\r\n          failedNum++;\r\n          if (successNum + failedNum + errorNum === tasks.length) {\r\n            load.close();\r\n            subject.next({ successSubmit, successHandleTasks });\r\n            this.showBatchSubmitInfo(successNum, failedNum + filterNum, errorNum, verifyTasksNum);\r\n          }\r\n        } else {// 不需要交互\r\n          this.taskService.complete(context).subscribe(() => {// 执行成功\r\n            successNum++;\r\n            successHandleTasks.push(task);\r\n            if (successNum + failedNum + errorNum === tasks.length) {\r\n              load.close();\r\n              subject.next({ successSubmit, successHandleTasks });\r\n              this.showBatchSubmitInfo(successNum, failedNum + filterNum, errorNum, verifyTasksNum);\r\n            }\r\n          }, () => {// 执行报错\r\n            errorNum++;\r\n            if (successNum + failedNum + errorNum === tasks.length) {\r\n              load.close();\r\n              subject.next({ successSubmit, successHandleTasks });\r\n              this.showBatchSubmitInfo(successNum, failedNum + filterNum, errorNum, verifyTasksNum);\r\n            }\r\n          });\r\n        }\r\n      }, () => {// 任务模拟请求报错\r\n        errorNum++;\r\n        if (successNum + failedNum + errorNum === tasks.length) {\r\n          load.close();\r\n          subject.next({ successSubmit, successHandleTasks });\r\n          this.showBatchSubmitInfo(successNum, failedNum + filterNum, errorNum, verifyTasksNum);\r\n        }\r\n      });\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量已阅\r\n   * @param tasks \r\n   */\r\n  private batchReadTaskSubmit(tasks: TaskEntity[]): Observable<SubmitResult> {\r\n    const subject = new BehaviorSubject<SubmitResult>(null);\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      subject.next({ result: false, isClose: false });\r\n    } else {\r\n      let successNum = 0;\r\n      let errorNum = 0;\r\n      const load = this.loadingService.show();\r\n      tasks.forEach(task => {\r\n        let context: WorkItemExecuteParam = {\r\n          workItemId: task.sourceId,\r\n          comment: this.comment,\r\n          addendum: this.addendum,\r\n        }\r\n        this.taskService.readTask(context).subscribe(re => {\r\n          successNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            subject.next({ result: true, isClose: true });\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n          }\r\n        }, error => {\r\n          errorNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            subject.next({ result: false, isClose: false });\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n          }\r\n        })\r\n      })\r\n    }\r\n    return subject.asObservable();\r\n\r\n  }\r\n\r\n  /**\r\n   * 批量取回\r\n   * @param tasks \r\n   */\r\n  private batchRetrieveSubmit(tasks: TaskEntity[]): Observable<SubmitResult> {\r\n    const subject = new BehaviorSubject<SubmitResult>(null);\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      subject.next({ result: false, isClose: false });\r\n    } else {\r\n      let successNum = 0;\r\n      let errorNum = 0;\r\n      const load = this.loadingService.show();\r\n      tasks.forEach(task => {\r\n        let context: WorkItemExecuteParam = {\r\n          workItemId: task.sourceId,\r\n          comment: this.comment,\r\n          addendum: this.addendum,\r\n        }\r\n        this.taskService.retrieve(context).subscribe(re => {\r\n          successNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n            subject.next({ result: true, isClose: true });\r\n          }\r\n        }, error => {\r\n          errorNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            subject.next({ result: false, isClose: false });\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n          }\r\n        })\r\n      })\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量领用\r\n   */\r\n  private batchClaimSubmit(tasks: TaskEntity[]) {\r\n    const subject = new BehaviorSubject<SubmitResult>(null);\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      subject.next({ result: false, isClose: false });\r\n    } else {\r\n      let successNum = 0;\r\n      let errorNum = 0;\r\n      const load = this.loadingService.show();\r\n      tasks.forEach(task => {\r\n        this.taskService.claim(task.sourceId, this.comment).subscribe(re => {\r\n          successNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n            subject.next({ result: true, isClose: true });\r\n          }\r\n        }, error => {\r\n          errorNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            subject.next({ result: false, isClose: false });\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n          }\r\n        })\r\n      })\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量取消领用\r\n   */\r\n  private batchUnclaimSubmit(tasks: TaskEntity[]) {\r\n    const subject = new BehaviorSubject<SubmitResult>(null);\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      subject.next({ result: false, isClose: false });\r\n    } else {\r\n      let successNum = 0;\r\n      let errorNum = 0;\r\n      const load = this.loadingService.show();\r\n      tasks.forEach(task => {\r\n        this.taskService.unClaim(task.sourceId, this.comment).subscribe(re => {\r\n          successNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n            subject.next({ result: true, isClose: true });\r\n          }\r\n        }, error => {\r\n          errorNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            subject.next({ result: false, isClose: false });\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n          }\r\n        })\r\n      })\r\n    }\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量移交\r\n   * @param tasks 批量任务列表\r\n   */\r\n  private batchTransferSubmit(tasks: TaskEntity[]): Observable<any> {\r\n    const subject = new BehaviorSubject<SubmitResult>(null);\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      subject.next({ result: false, isClose: false });\r\n    } else if (this.selectedUsers.length === 0) {\r\n      this.notify.warning(this.i18nService.getValue('task.selectPlaceholder') + this.selectUserText);\r\n      subject.next({ result: false, isClose: false });\r\n    } else {\r\n      let successNum = 0;\r\n      let errorNum = 0;\r\n      const load = this.loadingService.show();\r\n      tasks.forEach(task => {\r\n        const context = {\r\n          workItemId: task.sourceId,\r\n          assignee: this.selectedUsers[0],\r\n          comment: this.comment,\r\n          addendum: this.addendum,\r\n        };\r\n        this.taskService.transfer(context).subscribe(re => {\r\n          successNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n            subject.next({ result: true, isClose: true });\r\n          }\r\n        }, error => {\r\n          errorNum++;\r\n          if (successNum + errorNum == tasks.length) {\r\n            load.close();\r\n            subject.next({ result: false, isClose: false });\r\n            this.showBatchSubmitInfo(successNum, 0, errorNum, 0);\r\n          }\r\n        })\r\n      })\r\n    }\r\n    return subject.asObservable();\r\n\r\n  }\r\n\r\n  /**\r\n   * 批量提交提示信息\r\n   * @param successNum 成功条数\r\n   * @param failedNum 需要交互的条数\r\n   * @param errorNum 执行报错的条数\r\n   * @param verifyTasksNum 需要数字签名的条数\r\n   */\r\n  private showBatchSubmitInfo(successNum: number, failedNum: number, errorNum: number, verifyTasksNum: number) {\r\n    let message = '';\r\n    if (successNum && !failedNum && !errorNum && !verifyTasksNum) {// 批量全部成功\r\n      this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n    } else {// 非全部成功\r\n      successNum && (message += this.i18nService.getValue('batchSubmit.success') + `【${successNum}】` + this.i18nService.getValue('batchSubmit.row'));\r\n      errorNum && (message += this.i18nService.getValue('batchSubmit.error') + `【${errorNum}】` + this.i18nService.getValue('batchSubmit.row'));\r\n      failedNum && (message += this.i18nService.getValue('batchSubmit.failed') + `【${failedNum}】` + this.i18nService.getValue('batchSubmit.row'));\r\n      verifyTasksNum && (message += this.i18nService.getValue('batchSubmit.validationFailed') + `【${verifyTasksNum}】` + this.i18nService.getValue('batchSubmit.row'));\r\n      message += this.i18nService.getValue('batchSubmit.single');\r\n      this.message.show('warning', message, { safeHtml: false });\r\n    }\r\n  }\r\n\r\n  private executeBatchEvent(events: ActionEvent[], entities: Array<TaskEntity>, action: TaskAction, handler: any, result?: TaskEventResult) {\r\n    if (this.injector) {\r\n      if (events && events.length > 0 && entities && entities.length > 0) {\r\n        const event = events.shift();\r\n        const url = event.eventImpl.split('#')[0];\r\n        const func = event.eventImpl.split('#')[1];\r\n        System.import(url + '?v=' + new Date().getTime().toString())\r\n          .then((moduleFactories: any) => {\r\n            const moduleFactory: any = Object.values(moduleFactories)[0];\r\n            const moduleRef = moduleFactory.create(this.injector);\r\n            const context: TaskEventContext = {\r\n              action,\r\n              taskList: entities,\r\n              origin: 'TaskCenter',\r\n              preEventResult: result\r\n            };\r\n            moduleRef.instance[func].apply(moduleRef.instance, [context]).subscribe((re: TaskEventResult) => {\r\n              if (re && re.result) {\r\n                this.executeBatchEvent(events, entities, action, handler, re);\r\n              } else {\r\n                handler(re);\r\n              }\r\n            });\r\n          });\r\n      } else {\r\n        handler(result);\r\n      }\r\n    } else {\r\n      handler(result);\r\n    }\r\n  }\r\n\r\n  private assignSimulate(): Observable<SimulateSubject> {\r\n    let subject = new Subject<SimulateSubject>();\r\n    let simulateSubject = new SimulateSubject();\r\n    this.ifAssignUser = true;\r\n    this.dialogHeight += this.dialogHeightBase;\r\n    this.enablePriority = true;\r\n    if (this.task.priority) {\r\n      this.dialogHeight += this.dialogHeightBase;\r\n    }\r\n    this.taskService.getAssigneeInfo(this.workItemId).subscribe((info: FlowNodeInfo) => {\r\n      this.assignInfos = [{\r\n        selectedAssignees: info.selectedAssignees,\r\n        assigneeInfo: info.assigneeInfo,\r\n        assignees: info.selectedAssignees.map(user => { return { id: user.id, name: user.name }; }),\r\n        activityDefinitionName: info.activityDefinitionName,\r\n        activityDefinitionId: info.activityDefinitionId,\r\n        dependency: info.dependency,\r\n        anonymous: info.anonymous,\r\n        anonymousText: info.anonymousText,\r\n        resolved: info.resolved,\r\n      }];\r\n      simulateSubject.dialogHeight = this.dialogHeight;\r\n      simulateSubject.result = true;\r\n      simulateSubject.showDialog = true;\r\n      subject.next(simulateSubject);\r\n    }, (error) => {\r\n      simulateSubject.result = false;\r\n      simulateSubject.showDialog = false;\r\n      subject.next(simulateSubject);\r\n      this.taskService.error(error);\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  private transferSimulate(): Observable<SimulateSubject> {// 移交\r\n    this.ifSelectUser = true;\r\n    this.selectUserText = this.i18nService.getValue('task.receiver');//接收人员\r\n    this.singleSelect = true;\r\n    this.dialogHeight += this.dialogHeightBase;\r\n    this.enablePriority = true;\r\n    if (this.task.priority) {\r\n      this.dialogHeight += this.dialogHeightBase;\r\n    }\r\n    return this.getOrganizationScope();\r\n\r\n  }\r\n\r\n  private addSignFrontSimulate(): Observable<SimulateSubject> {// 征询\r\n    this.ifSelectUser = true;\r\n    this.selectUserText = this.actionEntity.name + this.i18nService.getValue('task.person');\r\n    this.dialogHeight += this.dialogHeightBase;\r\n    this.enablePriority = true;\r\n    if (this.task.priority) {\r\n      this.dialogHeight += this.dialogHeightBase;\r\n    }\r\n    return this.getOrganizationScope();\r\n\r\n  }\r\n\r\n  private addSignSimulate(): Observable<SimulateSubject> {// 加签\r\n    let subject = new Subject<SimulateSubject>();\r\n    let simulateSubject = new SimulateSubject();\r\n    this.ifSelectUser = true;\r\n    this.selectUserText = this.actionEntity.name + this.i18nService.getValue('task.person');\r\n    this.dialogHeight += this.dialogHeightBase * 2;\r\n    this.enablePriority = true;\r\n    if (this.task.priority) {\r\n      this.dialogHeight += this.dialogHeightBase;\r\n    }\r\n    const load = this.loadingService.show();\r\n    this.taskService.getAdhocConfig(this.workItemId).subscribe((response: AddSignSimulateResponse) => {\r\n      load.close();\r\n      this.addSign.showSignToSign = response.showSignToSign;\r\n      this.addSign.originMultiInstType = response.multiInstanceType;\r\n      if (response.organization) {\r\n        this.filter.orgId = response.organization.id;\r\n        this.filter.withAllOrg = response.organization.includeChildren;\r\n      }\r\n      simulateSubject.dialogHeight = this.dialogHeight;\r\n      simulateSubject.showDialog = true;\r\n      simulateSubject.result = true;\r\n      subject.next(simulateSubject);\r\n    }, error => {\r\n      load.close();\r\n      this.taskService.error(error);\r\n      simulateSubject.showDialog = false;\r\n      simulateSubject.result = false;\r\n      subject.next(simulateSubject);\r\n    })\r\n    return subject.asObservable();\r\n  }\r\n\r\n  private notifySimulate(): Observable<SimulateSubject> {//知会\r\n    this.ifSelectUser = true;\r\n    this.selectUserText = this.actionEntity.name + this.i18nService.getValue('task.person');\r\n    this.dialogHeight += this.dialogHeightBase;\r\n    this.singleSelect = false;\r\n    this.enablePriority = true;\r\n    if (this.task.priority) {\r\n      this.dialogHeight += this.dialogHeightBase;\r\n    }\r\n    return this.getOrganizationScope();\r\n  }\r\n\r\n  //预解析组织、候选人范围\r\n  private getOrganizationScope(): Observable<SimulateSubject> {\r\n    let subject = new Subject<SimulateSubject>();\r\n    let simulateSubject = new SimulateSubject();\r\n    const load = this.loadingService.show();\r\n    this.taskService.getOrganizationScope(this.workItemId, this.actionEntity.code).subscribe((orgList: OrganizationScope[]) => {\r\n      load.close();\r\n      if (orgList.length) {// 全员会返回空数组\r\n        this.filter.orgId = orgList[0].id;\r\n        this.filter.withAllOrg = orgList[0].includeChildren;\r\n      }\r\n      simulateSubject.dialogHeight = this.dialogHeight;\r\n      simulateSubject.showDialog = true;\r\n      simulateSubject.result = true;\r\n      subject.next(simulateSubject);\r\n    }, error => {\r\n      load.close();\r\n      this.taskService.error(error);\r\n      simulateSubject.showDialog = false;\r\n      simulateSubject.result = false;\r\n      subject.next(simulateSubject);\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 催办模拟\r\n   */\r\n  private urgeHandleSimulate(): Observable<SimulateSubject> {\r\n    let subject = new Subject<SimulateSubject>();\r\n    let simulateSubject = new SimulateSubject();\r\n    this.ifSelectNode = false;\r\n    this.ifSelectUser = false;\r\n    this.ifAssignUser = false;\r\n    this.ifUrgeType = true;\r\n    this.commentPlaceHolder = this.i18nService.getValue('task.urgeComment');\r\n    this.showCommonComment = false;\r\n    this.showAttachment = false;\r\n    this.showUrgeMessageSubject = true;\r\n    this.showSign = false;\r\n    this.dialogHeight += this.dialogHeightBase * 2;\r\n    const load = this.loadingService.show();\r\n    let context = new UrgeHandleSimulateContext();\r\n    context.procInstId = this.processInstanceId;\r\n    this.taskService.urgeHandleSimulate(context).subscribe((re: UrgeHandleResponse) => {\r\n      load.close();\r\n      this.urgeHandleResponse = re;\r\n      if (re && re.urgeUsers && re.urgeUsers.length) {\r\n        this.urgeMessageSubject = re.urgeUsers[0].urgeInfos[0].urgeMessageSubject;\r\n        this.urgeMessageContent = re.urgeUsers[0].urgeInfos[0].urgeMessageContent;\r\n        this.subjectEditable = re.urgeUsers[0].urgeInfos[0].subjectEditable;\r\n        this.contentEditable = re.urgeUsers[0].urgeInfos[0].contentEditable;\r\n        this.addReminder = re.urgeUsers[0].urgeInfos[0].addReminder;\r\n        let urgeUsers = re.urgeUsers;\r\n        let assignInfo = new AssigneeInfo();\r\n        urgeUsers.forEach(user => {\r\n          if (user.anonymousText) {\r\n            user.name = user.anonymousText;\r\n            user.code = '';\r\n            user.orgName = '';\r\n          }\r\n        })\r\n        assignInfo.assigneeUsers = urgeUsers;\r\n        assignInfo.selectAssignee = urgeUsers.length > 1 ? true : false;\r\n        assignInfo.multiSelect = true;\r\n        this.assignInfos[0].assigneeInfo = assignInfo;\r\n        this.assignInfos[0].assignees = urgeUsers.length == 1 ? urgeUsers : [];\r\n        simulateSubject.showDialog = true;\r\n      } else {\r\n        this.notify.warning(this.i18nService.getValue('task.noUrgeUsers'));\r\n        simulateSubject.showDialog = false;\r\n      }\r\n      simulateSubject.dialogHeight = this.dialogHeight;\r\n      simulateSubject.result = true;\r\n      subject.next(simulateSubject);\r\n    }, error => {\r\n      load.close();\r\n      this.taskService.error(error);\r\n      simulateSubject.showDialog = false;\r\n      simulateSubject.result = false;\r\n      subject.next(simulateSubject);\r\n    })\r\n    return subject.asObservable();\r\n\r\n  }\r\n\r\n  /**\r\n   * 预解析\r\n   * 通过、驳回、重新提交、其他自定义动作\r\n   */\r\n  private completeSimulate(): Observable<any> {\r\n    const subject = new Subject<SimulateSubject>();\r\n    let simulateSubject = new SimulateSubject();\r\n    if (this.actionEntity.parameters && this.actionEntity.parameters.length) {// 是否允许加签\r\n      this.actionEntity.parameters.forEach((p) => {\r\n        if (p.code === 'AddSignBehindAble' && p.value === 'true') {\r\n          this.ifSelectUser = true;\r\n          this.selectUserText = this.i18nService.getValue('task.addSign') + this.i18nService.getValue('task.person');\r\n          this.dialogHeight += this.dialogHeightBase;\r\n          const load = this.loadingService.show();\r\n          //获取加签范围\r\n          this.taskService.getOrganizationScope(this.workItemId, 'AddSignBehind').subscribe((orgList: OrganizationScope[]) => {\r\n            load.close();\r\n            if (orgList.length) {// 全员会返回空数组\r\n              this.filter.orgId = orgList[0].id;\r\n              this.filter.withAllOrg = orgList[0].includeChildren;\r\n            }\r\n          }, error => {\r\n            load.close();\r\n            this.taskService.error(error);\r\n          });\r\n        }\r\n      });\r\n    }\r\n    //驳回节点标签名称\r\n    if (this.actionEntity.code === 'Back') {\r\n      this.selectNodeText = this.actionEntity.name + this.i18nService.getValue('task.backNodeText');\r\n    }\r\n\r\n    const context = new CompleteContext();\r\n    context.workItemId = this.workItemId;\r\n    context.conclusionValue = this.actionEntity.code;\r\n\r\n    const load = this.loadingService.show();\r\n    this.taskService.completeSimulate(context).subscribe((response: SimulateResponse) => {\r\n      load.close();\r\n      this.clearSimulateResult();\r\n      this.response = response;\r\n      if (this.task.priority) {\r\n        this.enablePriority = true;\r\n        this.dialogHeight += this.dialogHeightBase;\r\n      }\r\n      this.selectTargetAble = response.selectTargetAble;\r\n      if (response.dynamicBackWardRuleConfig) {\r\n        this.showBackWardConfig.dynamicBackWardRuleAble = response.dynamicBackWardRuleConfig.dynamicBackWardRuleAble;\r\n        this.showBackWardConfig.displayPlaceholder = response.dynamicBackWardRuleConfig.resubmitEffect;\r\n      }\r\n      if (!response.simulationPaths.length) {// 模拟返回路径为空时\r\n        this.ifSelectNode = false;\r\n        this.ifAssignUser = false;\r\n      } else {// 模拟返回了路径\r\n        this.ifSelectNode = true;\r\n        this.ifAssignUser = true;\r\n        this.dialogHeight += this.dialogHeightBase * 2;\r\n        this.destNodes = response.simulationPaths && response.simulationPaths.map(path => ({\r\n          id: path.nodeInfoList.map(node => node.activityDefinitionId).join('，'),\r\n          name: path.nodeInfoList.map(node => node.activityDefinitionName).join('，')\r\n        }));\r\n        // 处理默认分支，无默认分支返回-1\r\n        let defaultIndex = response.simulationPaths.findIndex(a => a.default);\r\n        //没有默认分支，且不允许选择目标节点时，取其中一个node展示（子流程参与者为空情况等）\r\n        if (defaultIndex < 0 && !response.selectTargetAble) {\r\n          defaultIndex = response.simulationPaths.findIndex(a => a.nodeInfoList && a.nodeInfoList.length > 0);\r\n        }\r\n        if (defaultIndex > -1) {\r\n          this.selectedNodeId = this.destNodes[defaultIndex].id;\r\n          this.nodeDefaultValue = this.destNodes[defaultIndex].name.indexOf('，') > -1 ? response.simulationPaths[defaultIndex].name : this.destNodes[defaultIndex].name;\r\n          this.setAssignInfo(response.simulationPaths[defaultIndex].nodeInfoList);\r\n          if (response.simulationPaths[defaultIndex].id.startsWith('EndEvent')) {//下一环节为结束时，不显示办理人员，弹框高度缩小\r\n            this.dialogHeight = 340;\r\n          }\r\n        }\r\n      }\r\n      //设置其他节点选人\r\n      this.setOtherAssignInfo(response);\r\n\r\n      this.dialogHeight = this.showBackWardConfig.dynamicBackWardRuleAble ? this.dialogHeight + this.dialogHeightBase : this.dialogHeight;\r\n      simulateSubject.result = true;\r\n      simulateSubject.showDialog = true;\r\n      simulateSubject.dialogHeight = this.dialogHeight;\r\n      subject.next(simulateSubject);\r\n    }, error => {\r\n      load.close();\r\n      simulateSubject.result = false;\r\n      simulateSubject.showDialog = false;\r\n      subject.next(simulateSubject);\r\n      this.taskService.error(error);\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 清空预解析结果\r\n   */\r\n  private clearSimulateResult() {\r\n    this.assignInfos = [{// 重新预解析时清空\r\n      selectedAssignees: [],\r\n      assigneeInfo: null,\r\n      assignees: [],\r\n      activityDefinitionName: '',\r\n      activityDefinitionId: '',\r\n      dependency: '',\r\n      anonymous: false,\r\n      anonymousText: '',\r\n      resolved: false,\r\n    }];\r\n    this.destNodes = []; // 重新预解析时清空\r\n    this.selectedNodeId = '';\r\n  }\r\n  /**\r\n   * 设置当前指派信息帮助参数\r\n   */\r\n  private setAssignInfo(nodeInfoList: FlowNodeInfo[]) {\r\n    this.assignInfos = [];\r\n    this.selectedNodeId.split('，').forEach(nodeId => {\r\n      const node = nodeInfoList.find(node => node.activityDefinitionId === nodeId);\r\n      if (node) {\r\n        this.assignInfos.push({\r\n          selectedAssignees: node.selectedAssignees,\r\n          assigneeInfo: node.assigneeInfo,\r\n          assignees: node.selectedAssignees.map(user => { return { id: user.id, name: user.name }; }),\r\n          activityDefinitionName: node.activityDefinitionName,\r\n          activityDefinitionId: node.activityDefinitionId,\r\n          dependency: node.dependency,\r\n          anonymous: node.anonymous,\r\n          anonymousText: node.anonymousText,\r\n          resolved: node.resolved,\r\n        });\r\n      } else {\r\n        this.assignInfos.push({\r\n          selectedAssignees: [],\r\n          assigneeInfo: null,\r\n          assignees: [],\r\n          activityDefinitionName: '',\r\n          activityDefinitionId: '',\r\n          dependency: '',\r\n          anonymous: false,\r\n          anonymousText: '',\r\n          resolved: false,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置其他节点指派\r\n   * @param response \r\n   */\r\n  private setOtherAssignInfo(response: SimulateResponse) {\r\n    this.otherAssignInfos = [];\r\n    let tmpOtherAssignInfos = [];\r\n    let otherAssignNodes = response.otherAssignNodes;\r\n    if (otherAssignNodes && otherAssignNodes.length) {\r\n      otherAssignNodes.forEach(node => {\r\n        tmpOtherAssignInfos.push({\r\n          selectedAssignees: node.selectedAssignees,\r\n          assigneeInfo: node.assigneeInfo,\r\n          assignees: node.selectedAssignees.map(user => { return { id: user.id, name: user.name } }),\r\n          activityDefinitionName: node.activityDefinitionName,\r\n          activityDefinitionId: node.activityDefinitionId,\r\n          dependency: node.dependency,\r\n          anonymous: node.anonymous,\r\n          anonymousText: node.anonymousText,\r\n          resolved: node.resolved\r\n        })\r\n      })\r\n      //保存最初的其他节点选人\r\n      this.originOtherAssignInfos = [...tmpOtherAssignInfos];\r\n      //其他节点与下一节点去重\r\n      if (this.assignInfos && this.assignInfos.length) {\r\n        tmpOtherAssignInfos = tmpOtherAssignInfos.filter(a => this.assignInfos.findIndex(b => b.activityDefinitionId == a.activityDefinitionId) < 0);\r\n      }\r\n      this.otherAssignInfos = tmpOtherAssignInfos;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 选完节点后，重新设置其他节点指派\r\n   * @param response \r\n   */\r\n  private setOtherAssignInfoAgain(nodeInfoList: FlowNodeInfo[]) {\r\n    if (nodeInfoList && nodeInfoList.length) {\r\n      this.otherAssignInfos = this.originOtherAssignInfos.filter(a => nodeInfoList.findIndex(b => b.activityDefinitionId == a.activityDefinitionId) < 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 点击确定后方法\r\n   */\r\n  private assignSubmit() {\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (!this.assignInfos[0].assignees.length) {\r\n      this.notify.warning(this.i18nService.getValue('static.assignee.noAssignee'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const context: AssignParameter = {\r\n        workItemId: this.workItemId,\r\n        assigneeIds: this.assignInfos[0].assignees.map(user => user.id),\r\n        comment: this.comment,\r\n        addendum: this.addendum,\r\n        priority: this.selectedPriority\r\n      };\r\n      this.taskService.assignNextUsersByWorkItemId(context).subscribe(() => {\r\n        this.notify.success(this.i18nService.getValue('cueWords.operateSuccess'));\r\n        this.subject.next(this.submitResult);\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  private claimSubmit() {\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      this.taskService.claim(this.workItemId, this.comment).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next(this.submitResult);\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  private unClaimSubmit() {\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      this.taskService.unClaim(this.workItemId, this.comment).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success')),\r\n          this.subject.next(this.submitResult);\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  private retrieveSubmit() {\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const retrieveContext = {\r\n        workItemId: this.workItemId,\r\n        comment: this.comment\r\n      };\r\n      this.taskService.retrieve(retrieveContext).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next(this.submitResult);\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  private transferSubmit() {\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (this.selectedUsers.length === 0) {\r\n      this.notify.warning(this.i18nService.getValue('task.selectPlaceholder') + this.selectUserText);\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const context = {\r\n        workItemId: this.workItemId,\r\n        assignee: this.selectedUsers[0],\r\n        comment: this.comment,\r\n        addendum: this.addendum,\r\n        priority: this.selectedPriority\r\n      };\r\n      this.submitDisable = true; // 禁用提交按钮\r\n      this.taskService.transfer(context).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next(this.submitResult);\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  private commentSubmit() { // 评论\r\n    if (!this.comment || this.comment.length === 0) {\r\n      this.notify.warning(this.i18nService.getValue('cueWords.inputOpinion'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const context = {\r\n        workItemId: this.workItemId,\r\n        comment: this.comment,\r\n        addendum: this.addendum\r\n      };\r\n      this.taskService.comment(context).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.submitResult.isClose = false;\r\n        this.subject.next(this.submitResult);\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n      this.comment = '';\r\n    }\r\n  }\r\n\r\n  private addSignFrontSubmit() {\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (this.selectedUsers.length === 0) {\r\n      this.notify.warning(this.i18nService.getValue('task.selectPlaceholder') + this.selectUserText);\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const context = {\r\n        workItemId: this.workItemId,\r\n        action: this.actionEntity.code,\r\n        assignees: this.selectedUsers,\r\n        comment: this.comment,\r\n        addendum: this.addendum,\r\n        priority: this.selectedPriority\r\n      };\r\n      this.submitDisable = true; // 禁用提交按钮\r\n      this.taskService.addSign(context).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next(this.submitResult);\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  private addSignSubmit() {// 加签提交\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (this.selectedUsers.length === 0) {\r\n      this.notify.warning(this.i18nService.getValue('task.selectPlaceholder') + this.selectUserText);\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      let payload: AddSignPayload = {\r\n        workItemId: this.workItemId,\r\n        comment: this.comment,\r\n        conclusionValue: \"Pass\",\r\n        signAssignees: this.selectedUsers,\r\n        actionCode: \"AddSignBehind\",\r\n        multiInstanceType: this.addSign.showMultiInstanceType ? this.addSign.curMultiInstType : this.addSign.originMultiInstType,\r\n        counterSignRule: 'allPass',\r\n        completedRule: 'all',\r\n        allowSignToSign: this.addSign.allowSignToSIgn,\r\n        activityName: '',\r\n        addendum: this.addendum,\r\n        priority: this.selectedPriority\r\n      };\r\n\r\n      const load = this.loadingService.show();\r\n      this.taskService.adhocAssignee(payload).subscribe(re => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next({ result: true, isClose: true });\r\n        load.close();\r\n      }, error => {\r\n        load.close();\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  private readSubmit() {//已阅提交\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const context: WorkItemExecuteParam = {\r\n        workItemId: this.workItemId,\r\n        comment: this.comment,\r\n        addendum: this.addendum,\r\n        hideComment: this.hideComment\r\n      }\r\n      this.taskService.readTask(context).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next({ result: true, isClose: true });\r\n      }, error => {\r\n        this.taskService.error(error);\r\n        this.subject.next({ result: false, isClose: false });\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  private notifySubmit() {//知会提交\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (this.selectedUsers.length === 0) {\r\n      this.notify.warning(this.i18nService.getValue('task.selectPlaceholder') + this.selectUserText);\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      const context: CounterSignParam = {\r\n        workItemId: this.workItemId,\r\n        comment: this.comment,\r\n        addendum: this.addendum,\r\n        action: this.actionEntity.code,\r\n        assignees: this.selectedUsers,\r\n        priority: this.selectedPriority\r\n      };\r\n      this.taskService.addSign(context).subscribe(() => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next({ result: true, isClose: false });\r\n      }, (error) => {\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 催办提交\r\n   */\r\n  private urgeHandleSubmit() {\r\n    if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (!this.urgeHandleResponse.urgeUsers || !this.urgeHandleResponse.urgeUsers.length) {//没有符合条件的催办用户\r\n      this.notify.warning(this.i18nService.getValue('task.noUrgeUsers'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (!this.assignInfos[0].assignees.length) {//没有选人\r\n      this.notify.warning(this.i18nService.getValue('task.selectPlaceholder') + this.i18nService.getValue('task.receiver'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (!this.urgeHandleComponent.urgeMessageSubject) {\r\n      this.notify.warning(this.i18nService.getValue('task.noUrgeSubject'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (!this.urgeHandleComponent.urgeMessageContent) {\r\n      this.notify.warning(this.i18nService.getValue('task.noUrgeContent'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      let context = new UrgeHandleContext();\r\n      context.procInstId = this.processInstanceId;\r\n      context.urgeUsers = this.urgeHandleResponse.urgeUsers.filter(a => this.assignInfos[0].assignees.some(b => b.id == a.id));\r\n      context.urgeMessageSubject = this.urgeHandleComponent.urgeMessageSubject;\r\n      context.urgeMessageContent = this.urgeHandleComponent.urgeMessageContent;\r\n      context.addReminder = this.addReminder;\r\n      const load = this.loadingService.show();\r\n      this.taskService.urgeHandle(context).subscribe(re => {\r\n        this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n        this.subject.next({ result: true, isClose: true });\r\n        load.close();\r\n      }, error => {\r\n        load.close();\r\n        this.subject.next({ result: false, isClose: false });\r\n        this.taskService.error(error);\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 取消征询提交\r\n   */\r\n  private cancelConsultSubmit() {\r\n    let context = new WorkItemExecuteParam();\r\n    context.workItemId = this.workItemId;\r\n    context.comment = this.comment;\r\n    context.addendum = this.addendum;\r\n    const load = this.loadingService.show();\r\n    this.taskService.cancelConsult(context).subscribe(() => {\r\n      load.close();\r\n      this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n      this.subject.next({ result: true, isClose: true });\r\n    }, error => {\r\n      load.close();\r\n      this.subject.next({ result: false, isClose: false });\r\n      this.taskService.error(error);\r\n    })\r\n\r\n  }\r\n\r\n  private completeSubmit() {// 通过、驳回、其他第三方动作\r\n    const context: CompleteContext = {\r\n      workItemId: this.workItemId,\r\n      conclusionValue: this.actionEntity.code,\r\n      comment: this.comment,\r\n      signAssignees: this.selectedUsers,\r\n      nextFlowNodes: [],\r\n      otherAssignNodes: [],\r\n      addendum: this.addendum,\r\n      //动态驳回规则\r\n      dynamicBackWardRule: this.showBackWardConfig.dynamicBackWardRuleAble ? this.showBackWardConfig.displayPlaceholder : '',\r\n      priority: this.selectedPriority\r\n    };\r\n\r\n    if (context.signAssignees.length || !this.response || !this.response.simulationPaths.length) {// 加签 or 仿真返回为空，直接往下走\r\n      this.completeTask(context);\r\n    } else {\r\n      if (this.selectedNodeId) {// 加签时，选择下一环节被禁用，destNodeId为undefined\r\n        const nextFlowNodes: FlowNodeInfo[] = [];\r\n        const nodes: string[] = this.selectedNodeId.split('，');\r\n        for (let i = 0; i < nodes.length; i++) {\r\n          const nextFlowNode: FlowNodeInfo = {\r\n            activityDefinitionId: nodes[i],\r\n            activityDefinitionName: this.assignInfos[i].activityDefinitionName,\r\n            dependency: this.assignInfos[i].dependency,\r\n            selectedAssignees: this.assignInfos[i].assigneeInfo ? this.assignInfos[i].assignees : [],\r\n            assigneeInfo: null,\r\n            resolved: false,\r\n            anonymous: this.assignInfos[i].anonymous,\r\n            anonymousText: this.assignInfos[i].anonymousText\r\n          };\r\n          //节点找不到人，且异常提示时，并行网关暂不处理\r\n          if (this.response && this.response.simulationPaths.length && !this.response.simulationPaths[0].id.startsWith('ParallelGateway')) {\r\n            if (nodes.length == 1 && nodes[i].startsWith('UserActivity') && this.assignInfos[i].resolved && !this.assignInfos[i].assigneeInfo && !this.assignInfos[i].selectedAssignees.length) {\r\n              const str = this.assignInfos[i].activityDefinitionName + this.i18nService.getValue('startProcess.node') + this.i18nService.getValue('startProcess.noUser');\r\n              this.notify.warning(str);\r\n              this.subject.next({ result: false, isClose: false });\r\n              return;\r\n            }\r\n          }\r\n          nextFlowNodes.push(nextFlowNode);\r\n        }\r\n        context.nextFlowNodes = nextFlowNodes;\r\n      }\r\n      //其他节点指派信息\r\n      if (this.otherAssignInfos && this.otherAssignInfos.length) {\r\n        for (let i = 0; i < this.otherAssignInfos.length; i++) {\r\n          let nextFlowNode: FlowNodeInfo = {\r\n            activityDefinitionId: this.otherAssignInfos[i].activityDefinitionId,\r\n            activityDefinitionName: this.otherAssignInfos[i].activityDefinitionName,\r\n            dependency: this.otherAssignInfos[i].dependency,\r\n            selectedAssignees: this.otherAssignInfos[i].assigneeInfo ? this.otherAssignInfos[i].assignees : [],\r\n            assigneeInfo: null,\r\n            resolved: false,\r\n            anonymous: false,\r\n            anonymousText: ''\r\n          }\r\n          context.otherAssignNodes.push(nextFlowNode);\r\n        }\r\n      }\r\n\r\n      if (this.response.selectTargetAble && this.destNodes.length > 1 && context.nextFlowNodes.length <= 0) {// 用户没选择跳转节点，不允许提交\r\n        this.notify.warning(this.i18nService.getValue('cueWords.selectNode'));\r\n        this.subject.next({ result: false, isClose: false });\r\n      } else if (this.assignInfos.filter(info => info.assigneeInfo && info.assigneeInfo.selectAssignee && !info.assignees.length).length) {\r\n        this.notify.warning(this.i18nService.getValue('task.selectProcessor'));\r\n        this.subject.next({ result: false, isClose: false });\r\n      } else {\r\n        this.completeTask(context);\r\n      }\r\n    }\r\n  }\r\n\r\n  private completeTask(completeContext: CompleteContext) {\r\n    const attachmentNecessary = this.actionEntity.parameters.find(entity => entity.code === 'AttachmentNecessary');\r\n    const certificationNecessary = this.actionEntity.parameters.find(entity => entity.code === 'CertificationNecessary');\r\n    const commentNecessary = this.actionEntity.parameters.find(entity => entity.code === 'CommentNecessary');\r\n    if (attachmentNecessary && attachmentNecessary.value === 'true' && (!completeContext.addendum.attachment || completeContext.addendum.attachment === '[]')) {\r\n      this.notify.warning(this.i18nService.getValue('cueWords.attachmentsRequired'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (commentNecessary && commentNecessary.value === 'true' && !completeContext.comment) {\r\n      this.notify.warning(this.i18nService.getValue('cueWords.inputOpinion'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else if (this.taskService.getBytesLength(this.comment) > this.MAX_COMMENT_LENGTH) {\r\n      this.notify.warning(this.i18nService.getValue('task.commentTooLong'));\r\n      this.subject.next({ result: false, isClose: false });\r\n    } else {\r\n      if (certificationNecessary && certificationNecessary.value === 'true') {\r\n        this.verifySignature(() => {\r\n          completeContext.verifySigned = this.verifySigned;\r\n          this.taskComplete(completeContext);\r\n        });\r\n        const msg = [this.workItemId];\r\n        gspCA.getSignedMsg(msg);\r\n      } else {\r\n        this.taskComplete(completeContext);\r\n      }\r\n    }\r\n  }\r\n\r\n  private executeFormActionsAfterCompleteTask(handler: any) {\r\n    // 如果表单注册了事件\r\n    if (this.origin == ActionOrigin.TaskForm && this.ifRegistered && this.formObject) {\r\n      const postActions = this.billMethodConfigs.filter(action => action.action === this.actionEntity.code && action.executionTime === 'Post').sort((x, y) => x.sortOrder - y.sortOrder);\r\n      if (postActions && postActions.length) {\r\n        this.executePostFormActions(postActions, handler);\r\n      }\r\n    } else {\r\n      handler();\r\n    }\r\n  }\r\n\r\n  private executePostFormActions(formActions: BillMethodConfig[], hander: any) {\r\n    if (formActions.length > 0) {\r\n      this.messageSubject = new Subject<any>();\r\n      this.messageSubject.subscribe((re: any) => {\r\n        const data = re.data.data;\r\n        if (data.result === true) {\r\n          this.executePostFormActions(formActions, hander);\r\n        } else {\r\n          this.subject.next({ result: false, isClose: false }); // 任务办理界面不关闭\r\n          throw new Error('审批后表单操作执行失败！');\r\n        }\r\n      });\r\n      // 执行表单动作\r\n      const formAction = formActions.shift();\r\n      this.sendMessage(this.workItemId, formAction);\r\n    } else {\r\n      hander();\r\n    }\r\n  }\r\n\r\n  //帮助选人后\r\n  afterConfirmForTransfer(data: Assignee[]) {\r\n    if (data && data.length) {\r\n      this.selectedUsers = data.map(user => user.id);\r\n      this.selectedUserNgModule = data.map(user => user.name).join();\r\n    } else {\r\n      this.selectedUsers = [];\r\n    }\r\n    if (this.actionEntity.code == 'AddSign' && this.addSign.originMultiInstType == MultiInstanceType.Preempt.toString() && this.selectedUsers.length > 1) {\r\n      this.addSign.showMultiInstanceType = true;\r\n    } else {\r\n      this.addSign.showMultiInstanceType = false;\r\n    }\r\n  }\r\n\r\n  cancel(): Observable<SubmitResult> {\r\n    this.submitResult.isClose = false;\r\n    this.subject.next(this.submitResult);\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  getSubject() {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  // 下一环节选择后事件\r\n  selectNodeChange(data: any) {\r\n    this.selectedNodeId = data && data.data && data.data.id;\r\n    if (this.response.simulationPaths[data.index].nodeInfoList.every(node => node.resolved === true)) {// 已预解析参与者\r\n      this.setAssignInfo(this.response.simulationPaths[data.index].nodeInfoList);\r\n      this.setOtherAssignInfoAgain(this.response.simulationPaths[data.index].nodeInfoList);\r\n    } else {\r\n      const nodeIds = this.selectedNodeId.split('，').map(node => `\"${node}\"`).join(); // 注意一个中文逗号一个英文逗号\r\n      const load = this.loadingService.show();\r\n      this.taskService.getSimulationAssigneeInfo(this.workItemId, nodeIds).subscribe((nodeInfoList: FlowNodeInfo[]) => {\r\n        load.close();\r\n        this.setAssignInfo(nodeInfoList);\r\n        this.setOtherAssignInfoAgain(nodeInfoList);\r\n      }, error => {\r\n        load.close();\r\n        this.taskService.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  // 下一环节清空后事件\r\n  selectNodeClear() {\r\n    this.selectedNodeId = null;\r\n    this.assignInfos = [{\r\n      selectedAssignees: [],\r\n      assigneeInfo: null,\r\n      assignees: [],\r\n      activityDefinitionName: '',\r\n      activityDefinitionId: '',\r\n      dependency: '',\r\n      anonymous: false,\r\n      anonymousText: '',\r\n      resolved: false,\r\n    }];\r\n  }\r\n\r\n  afterConfirmForAssign(data: Assignee[], index: number) {\r\n    this.assignInfos[index].assignees = data;\r\n  }\r\n\r\n  afterConfirmForOtherAssign(data: Assignee[], index: number) {\r\n    this.otherAssignInfos[index].assignees = data;\r\n  }\r\n\r\n  /**\r\n   * 上传附件后事件\r\n   */\r\n  addAttachment(data: any) {\r\n    this.addendum.attachment = JSON.stringify(data);\r\n  }\r\n\r\n  /**\r\n   * 手写签名后事件\r\n   */\r\n  addSignature(data: any) {\r\n    if (data) {\r\n      const signInfo = {\r\n        id: data,\r\n        waterMarking: null\r\n      };\r\n      this.addendum.signature = JSON.stringify(signInfo);\r\n    } else {\r\n      this.addendum.signature = '';\r\n    }\r\n  }\r\n\r\n  // 以服务方式打开组件时，左右加上padding\r\n  addPadding() {\r\n    this.cls = 'f-utils-fill-flex-column h-100 px-4 py-2';\r\n  }\r\n\r\n\r\n  private sendMessage(workItemId: string, action: BillMethodConfig) {\r\n    if (this.iframe) {\r\n      const iframeWindow = this.iframe.nativeElement.contentWindow;\r\n      const message = {\r\n        target: workItemId,\r\n        data: {\r\n          command: action.method,\r\n          arguments: action.methodParameters\r\n        }\r\n      };\r\n      iframeWindow.postMessage(message, this.POST_MESSAGE_TARGET);\r\n    } else {\r\n      this.subject.next({ result: false, isClose: false }); // 任务办理界面不关闭\r\n      this.notify.warning('请等待表单加载完成后再试');\r\n    }\r\n  }\r\n\r\n  // 提交审批前的数字签名及验签\r\n  verifySignature(handler: any) {\r\n    const that = this;\r\n    if (\r\n      (window as any).gspframeworkService &&\r\n      (window as any).gspframeworkService.rtf\r\n    ) {\r\n      (window as any).gspframeworkService.rtf.caEvent.on(\r\n        (window as any).gspframeworkService.rtf.caEvent.signedMsgOverToken(),\r\n        'signedMsgOver',\r\n        function signMsgOver(signedData) {\r\n          if (signedData && signedData[0] === 'true' && signedData.length > 0) {\r\n            // 证书对象\r\n            const cert = gspCA.getCurCert();\r\n            // 验签参数\r\n            that.verifySigned = {\r\n              // 要验证的证书base64编码的字符流(certkey)\r\n              certBase64Info: gspCA.getCertBase64(cert),\r\n              // 签名原信息\r\n              msg: [that.workItemId],\r\n              // 要签名后信息\r\n              signedmsg: signedData[1][0],\r\n              // 用户使用场景，目前未使用，可以为空\r\n              useCase: null,\r\n            };\r\n            handler();\r\n          } else {\r\n            that.loadingService.close();\r\n            that.subject.next({ result: false, isClose: false });\r\n            that.notify.error(signedData[1]);\r\n            throw new Error(signedData[1]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // 通过、驳回、其他第三方动作\r\n  taskComplete(completeContext: CompleteContext) {\r\n    this.taskService.complete(completeContext).subscribe((cr: CompleteResponse) => {\r\n      this.executeFormActionsAfterCompleteTask(() => {\r\n        if (cr.needInteraction) {// 通过后指派场景\r\n          if (this.origin == ActionOrigin.TaskCenter) {\r\n            this.subject.next({ result: true, isClose: false });\r\n          } else {\r\n            this.subject.next({ result: false, isClose: false });//关掉loading\r\n          }\r\n          this.notify.info(this.i18nService.getValue('cueWords.select')\r\n            + '【' + cr.nextFlowNodes[0].activityDefinitionName + '】'\r\n            + this.i18nService.getValue('cueWords.processor'));\r\n          let task = new TaskEntity();\r\n          let action = new TaskAction();\r\n          task.sourceId = cr.nextFlowNodes[0].assigneeInfo.workItemId;\r\n          action.code = 'AssignUser';\r\n          action.name = this.i18nService.getValue('cueWords.assignUser');\r\n          this.handlerService.execute(task, action).subscribe(re => {\r\n            if (re) {\r\n              this.subject.next({ result: true, isClose: true });\r\n            }\r\n          });\r\n        } else {\r\n          if (completeContext.conclusionValue === 'Pass') {\r\n            this.notify.success(this.i18nService.getValue('cueWords.successPass'));\r\n          } else if (completeContext.conclusionValue === 'Back') {\r\n            this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n          } else {\r\n            this.notify.success(this.actionEntity.name + this.i18nService.getValue('static.success'));\r\n          }\r\n          this.subject.next({ result: true, isClose: true });\r\n        }\r\n      });\r\n    }, (error) => {\r\n      this.subject.next({ result: false, isClose: false });\r\n      this.taskService.error(error);\r\n    }\r\n    );\r\n  }\r\n\r\n}","import { AssigneeInfo } from './complete-response';\r\nimport { User } from './user';\r\n\r\n/**\r\n * 提交审批上下文参数\r\n */\r\nexport class StartProcessPayload {\r\n\r\n    /**\r\n     * 随机生成的ID 无意义\r\n     */\r\n    id?: string;\r\n\r\n    /**\r\n     * 流程定义ID\r\n     */\r\n    processDefinitionId?: string;\r\n\r\n    /**\r\n     * 流程定义Key\r\n     */\r\n    processDefinitionKey?: string;\r\n\r\n    /**\r\n     * 流程分类ID\r\n     */\r\n    bizDefKey?: string;\r\n\r\n    /**\r\n     * 数据模型ID（BE上的节点ID）\r\n     */\r\n    dataModelId?: string;\r\n\r\n    /**\r\n     * 单据内码\r\n     */\r\n    dataId?: string;\r\n\r\n    /**\r\n     * 流程实例名称，可空\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * 流程发起人\r\n     */\r\n    startUserId?: string;\r\n\r\n    /**\r\n     * 下一环节\r\n     */\r\n    nextFlowNodes?: FlowNodeInfo[];\r\n\r\n    /**\r\n     * 参数\r\n     */\r\n    variables?: any;\r\n\r\n    /**\r\n     * 是否带返回值\r\n     */\r\n    withResponse?: boolean;\r\n\r\n    /**\r\n     * 紧急程度\r\n     */\r\n    priority?: number;\r\n\r\n    /**\r\n     * 其他需要指派的节点\r\n     */\r\n    otherAssignNodes: FlowNodeInfo[];\r\n\r\n}\r\n\r\nexport class FlowNodeInfo {\r\n\r\n    activityDefinitionId: string;\r\n\r\n    activityDefinitionName: string;\r\n\r\n    dependency: string;//前置依赖，执行提交时传给后端\r\n\r\n    selectedAssignees: User[];\r\n\r\n    assigneeInfo: AssigneeInfo;\r\n\r\n    resolved: boolean;//参与者是否解析\r\n\r\n    anonymous: boolean;\r\n\r\n    anonymousText: string;\r\n\r\n}\r\n\r\nexport class Assignee {\r\n\r\n    id: string;\r\n\r\n    name: string;\r\n\r\n}\r\n\r\nexport class CancelSubmitPayload {\r\n\r\n    procInstId: string;//可以单独根据流程实例ID取消\r\n\r\n    dataId: string;//也可以根据dataId+bizDefKey取消\r\n\r\n    bizDefKey: string;\r\n}\r\n","/**\r\n * 跨iframe通信，消息类型枚举类\r\n */\r\nexport enum MessageType {\r\n\r\n    SubmitSuccess = 'SubmitSuccess',//提交成功，要求iframe外弹出提示\r\n\r\n    SubmitFailed = 'SubmitFailed',//提交失败，失败信息\r\n\r\n    InfoSelectProcess = 'InfoSelectProcess',//提示选择流程\r\n\r\n    InfoSelectNode = 'InfoSelectNode',//提示选择节点\r\n\r\n    InfoSelectParticipant = 'InfoSelectParticipant',//提示选择办理人\r\n\r\n    Cancel = 'Cancel',//点击取消，iframe外关闭弹窗\r\n}\r\n\r\n/**\r\n * 跨iframe通信，消息类\r\n */\r\nexport class PostMessage {\r\n\r\n    type: MessageType;\r\n\r\n    message: any;\r\n}","/**\r\n * 提交审批时，记下选择的流程\r\n */\r\nexport class StartProcessCache {\r\n\r\n    selectedProcessList: SelectedProcessItem[];\r\n\r\n}\r\n\r\n/**\r\n * 提交审批时，记下选择的流程\r\n */\r\nexport class SelectedProcessItem {\r\n\r\n    /**\r\n     * 流程分类id\r\n     */\r\n    processCategory: string;\r\n\r\n    /**\r\n     * 流程定义id\r\n     */\r\n    processDefinitionId: string;\r\n\r\n    /**\r\n     * 流程定义名称\r\n     */\r\n    processDefinitionName: string;\r\n\r\n    /**\r\n     * 记录时间\r\n     */\r\n    logTime: Date = new Date();\r\n\r\n    constructor(processCategoryId: string, processDefinitionId: string, processDefinitionName: string) {\r\n        this.processCategory = processCategoryId;\r\n        this.processDefinitionId = processDefinitionId;\r\n        this.processDefinitionName = processDefinitionName;\r\n        this.logTime = new Date();\r\n\r\n    }\r\n\r\n}","import { Component, OnInit, ViewChild, TemplateRef, Input, Injector } from '@angular/core';\r\nimport { TaskService } from '../../service/task.service';\r\nimport { StartProcessPayload, FlowNodeInfo, Assignee } from '../../entity/start-process-payload';\r\nimport { ExecutionResponse } from '../../entity/execution-response';\r\nimport { LoadingService } from '@farris/ui-loading'\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { I18nService } from '../../service/i18n/i18n.service';\r\nimport { ComboListComponent } from '@farris/ui-combo-list';\r\nimport { MessageType } from '../../entity/postMessage';\r\nimport { MessagerService } from '@farris/ui-messager'\r\nimport { PriorityInfo, SimulateResponse, SimulationPath } from '../../entity/simulate-response';\r\nimport { AssignInfoHelpEntity } from '../../entity/assignInfoHelp';\r\nimport { WfTaskHandlerService } from '../../wf-task-handler.service';\r\nimport { ConfigCode } from '../../entity/task-center-config';\r\nimport { WfContext } from '../../entity/wfContext';\r\nimport { TaskEntity } from '../../entity/task-entity';\r\nimport { TaskAction } from '../../entity/task-action';\r\nimport { SelectedProcessItem, StartProcessCache } from '../../entity/process-cache';\r\n\r\n@Component({\r\n  selector: 'lib-process-selector',\r\n  templateUrl: './process-selector.component.html',\r\n  styleUrls: ['../../components/task-execute/task-execute.component.css'],\r\n})\r\nexport class ProcessSelectorComponent implements OnInit {\r\n\r\n  // task center-ui中start-process-menu使用了此选择器，构造方法改动时，需重新编译\r\n  constructor(\r\n    private taskService: TaskService,\r\n    private loadingService: LoadingService,\r\n    private notify: NotifyService,\r\n    private i18nService: I18nService,\r\n    private messager: MessagerService,\r\n    private injector: Injector,\r\n    private handlerService: WfTaskHandlerService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  destProcesses: { id: string, name: string }[] = [];//候选流程\r\n  destNodes: { id: string, name: string }[] = [];//候选下一环节\r\n  response: SimulateResponse;//保存模拟流程后返回的内容，选择节点时使用\r\n  assignInfos: AssignInfoHelpEntity[] =\r\n    [{\r\n      selectedAssignees: [],\r\n      assigneeInfo: null,\r\n      assignees: [],\r\n      activityDefinitionName: '',\r\n      activityDefinitionId: '',\r\n      dependency: '',\r\n      anonymous: false,\r\n      anonymousText: null,\r\n      resolved: false,\r\n    }];//节点返回的指派信息（多个）\r\n\r\n  otherAssignInfos: AssignInfoHelpEntity[] = [];//节点返回的指派信息（多个）\r\n\r\n  selectedProcessId: string;//选择的流程定义ID\r\n  selectedNodeId: string; //选择的下一环节ID，后续环节id的拼接\r\n  payload = new StartProcessPayload;//保存表单上传来的payload\r\n  subject = new Subject();//返回bool\r\n  subjectWithResponse = new Subject<any>();//返回流程上下文\r\n  subjectCancel = new Subject();//点击取消后的subject\r\n  submitDisable: boolean = false;//提交按钮是否禁用\r\n  showButtons: boolean = false;\r\n  curLanguage: string = localStorage.getItem('languageCode') || 'zh-CHS';//系统当前语言\r\n  nodePlaceholder: string;//下一环节的placeholder\r\n  processPlaceholder: string;//选择流程的placeholder\r\n  wfContext = new WfContext();//工作流上下文\r\n  processDefaultValue: string;//默认流程（提示用）\r\n  nodeDefaultValue: string;//默认下一环节（提示用）\r\n  dialogHeight: number = 240;//弹框基本高度\r\n\r\n  @ViewChild('nodeCombo') nodeCombo: ComboListComponent\r\n  @ViewChild('buttons') buttons: TemplateRef<any>;//确认取消按钮\r\n  @Input() openFromIframe: boolean = false;//是否从iframe打开，应用IDP提交审批集成\r\n\r\n  @Input()//原生JS提交审批使用\r\n  set parameter(parameter: any) {\r\n    if (parameter) {\r\n      this.showButtons = true;\r\n      this.setParam(parameter);\r\n    }\r\n  }\r\n\r\n  setParam(param: StartProcessPayload): Observable<any> {\r\n    let subject = new Subject<any>();\r\n    if (!param) { return; }\r\n    this.payload.id = param.id;\r\n    this.payload.processDefinitionId = param.processDefinitionId;\r\n    this.payload.processDefinitionKey = param.processDefinitionKey;\r\n    this.payload.bizDefKey = param.bizDefKey;\r\n    this.payload.dataModelId = param.dataModelId;\r\n    this.payload.dataId = param.dataId;\r\n    this.payload.name = param.name;\r\n    this.payload.startUserId = param.startUserId;\r\n    this.payload.nextFlowNodes = [];\r\n    this.payload.otherAssignNodes = [];\r\n    this.wfContext.processCategoryId = param.bizDefKey;\r\n    this.startProcessSimulate(this.payload, subject);\r\n    return subject.asObservable();\r\n  }\r\n\r\n  startProcessSimulate(payload: StartProcessPayload, subject: Subject<any>) {\r\n    const load = this.loadingService.show();\r\n    this.taskService.startProcessSimulate(payload).subscribe((response: SimulateResponse) => {\r\n      load.close();\r\n      this.response = response;\r\n      response.priorityInfo && response.priorityInfo.enable && (this.dialogHeight += 40);\r\n      this.destProcesses = response.procDefs.map(process => ({ id: process.procDefId, name: process.procDefName + `(v${process.version}.0)` }));//增加流程的版本信息\r\n      if (this.destProcesses.length === 1) {//只有一个候选流程时\r\n        this.selectedProcessId = this.destProcesses[0].id;\r\n        this.setNextNode(response);\r\n        this.processDefaultValue = this.destProcesses[0].name;\r\n        \r\n      } else {//多个流程时，取上一次选择的\r\n        const selectedProcessId = this.getSelectedProcessCache(this.payload.bizDefKey);\r\n        if (selectedProcessId && this.destProcesses.findIndex(p => p.id === selectedProcessId.processDefinitionId) > -1) {\r\n          this.getDestNodes(selectedProcessId.processDefinitionId);\r\n          this.processDefaultValue = selectedProcessId.processDefinitionName;\r\n        } else {\r\n          this.processPlaceholder = this.i18nService.getValue('task.selectPlaceholder');\r\n        }\r\n        this.dialogHeight = 330;\r\n      }\r\n      if (this.assignInfos && this.assignInfos.length) {\r\n        this.dialogHeight += (this.assignInfos.length) * 40;\r\n      }\r\n      if (this.otherAssignInfos && this.otherAssignInfos.length) {\r\n        this.dialogHeight += (this.otherAssignInfos.length + 1) * 40;\r\n      }\r\n      this.dialogHeight = this.dialogHeight > 440 ? 440 : this.dialogHeight;\r\n      subject.next({ result: true, dialogHeight: this.dialogHeight });\r\n    }, error => {\r\n      load.close();\r\n      subject.error(error);\r\n      this.taskService.error(error);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 选择某个流程后\r\n   * @param data\r\n   */\r\n  selectProcessChange(data: any) {\r\n    this.nodeCombo.onClear();\r\n    this.getDestNodes(data.data.id);\r\n  }\r\n\r\n  /**\r\n   * 根据选择的流程定义id获取下一环节信息\r\n   * @param selectedProcessId \r\n   */\r\n  private getDestNodes(selectedProcessId: string) {\r\n    this.selectedProcessId = selectedProcessId;\r\n    this.destNodes = [];\r\n    this.nodePlaceholder = '';\r\n    this.clearAssignInfos();\r\n\r\n    var payload = new StartProcessPayload();\r\n    payload.processDefinitionId = this.selectedProcessId;\r\n    payload.dataId = this.payload.dataId;\r\n\r\n    const load = this.loadingService.show();\r\n    this.taskService.startProcessSimulate(payload).subscribe((response: SimulateResponse) => {\r\n      load.close();\r\n      this.response = response;\r\n      this.setNextNode(response);\r\n    }, error => {\r\n      load.close();\r\n      this.taskService.error(error);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 选择节点后事件\r\n   */\r\n  selectNodeChange(data: any) {\r\n    this.clearAssignInfos();\r\n    this.selectedNodeId = data.data.id;\r\n    const nodeNames = data.data.name.split('，');\r\n\r\n    if (this.response.simulationPaths[data.index].nodeInfoList.every(node => node.resolved === true)) {//已预解析参与者\r\n      this.setAssignInfo(this.response.simulationPaths[data.index]);\r\n      this.setOtherAssignInfo(this.response);//切换节点后，其他节点指派需要更新，重新去重\r\n    } else {//未预解析参与者\r\n      let payload = new StartProcessPayload();\r\n      payload.processDefinitionId = this.selectedProcessId;\r\n      payload.dataId = this.payload.dataId;\r\n      payload.nextFlowNodes = [];\r\n\r\n      this.selectedNodeId.split('，').forEach((nodeId, index) => {\r\n        let nextFlowNode = new FlowNodeInfo();\r\n        nextFlowNode.activityDefinitionId = nodeId;\r\n        nextFlowNode.activityDefinitionName = nodeNames[index];\r\n        payload.nextFlowNodes.push(nextFlowNode);\r\n      });\r\n\r\n      const load = this.loadingService.show();\r\n      this.taskService.startProcessSimulate(payload).subscribe((response: SimulateResponse) => {\r\n        load.close();\r\n        this.setAssignInfo(response.simulationPaths[0]);//选择的下一环节应该在同一条路径上，故取simulationPaths[0]\r\n        this.setOtherAssignInfo(response);//切换节点后，其他节点指派需要更新，重新去重\r\n      }, error => {\r\n        load.close();\r\n        this.taskService.error(error);\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n * 实现真正的提交\r\n */\r\n  startProcessSubmit() {\r\n    if (!this.selectedProcessId) {\r\n      this.openFromIframe ? this.messager.warning(this.i18nService.getValue('startProcess.selectProcess')) :\r\n        this.notify.warning(this.i18nService.getValue('startProcess.selectProcess'));\r\n      return;\r\n    }\r\n    if (!this.selectedNodeId) {\r\n      this.openFromIframe ? this.messager.warning(this.i18nService.getValue('startProcess.selectNode')) :\r\n        this.notify.warning(this.i18nService.getValue('startProcess.selectNode'));\r\n      return;\r\n    }\r\n    if (this.assignInfos.filter(info => (info.assigneeInfo || info.selectedAssignees.length) && !info.assignees.length).length) {//空参与者策略时，不提示选人\r\n      this.openFromIframe ? this.messager.warning(this.i18nService.getValue('task.selectProcessor')) :\r\n        this.notify.warning(this.i18nService.getValue('task.selectProcessor'));\r\n      return;\r\n    }\r\n    if (this.response.priorityInfo && this.response.priorityInfo.enable && !this.response.priorityInfo.priority) {\r\n      this.openFromIframe ? this.messager.warning(this.i18nService.getValue('task.selectPriority')) :\r\n        this.notify.warning(this.i18nService.getValue('task.selectPriority'));\r\n      return;\r\n    }\r\n\r\n    const nodes: string[] = this.selectedNodeId.split('，');\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      let nextFlowNode: FlowNodeInfo = {\r\n        activityDefinitionId: nodes[i],\r\n        activityDefinitionName: this.assignInfos[i].activityDefinitionName,\r\n        dependency: this.assignInfos[i].dependency,\r\n        selectedAssignees: this.assignInfos[i].assigneeInfo ? this.assignInfos[i].assignees : [],\r\n        assigneeInfo: null,\r\n        resolved: false,\r\n        anonymous: false,\r\n        anonymousText: ''\r\n      }\r\n      //节点找不到人，且异常提示，前端控制住，不允许走提交请求（构件事务问题）。并行场景下暂不处理\r\n      if (this.response && this.response.simulationPaths.length && !this.response.simulationPaths[0].id.startsWith('ParallelGateway')) {\r\n        if (nodes.length == 1 && nodes[i].startsWith('UserActivity') && this.assignInfos[i].resolved && !this.assignInfos[i].assigneeInfo && !this.assignInfos[i].selectedAssignees.length) {\r\n          const str = this.assignInfos[i].activityDefinitionName + this.i18nService.getValue('startProcess.node') + this.i18nService.getValue('startProcess.noUser');\r\n          this.openFromIframe ? this.messager.warning(str) : this.notify.warning(str);\r\n          return;\r\n        }\r\n      }\r\n      this.payload.nextFlowNodes.push(nextFlowNode);\r\n    }\r\n    //拼接其他节点选人结果\r\n    if (this.otherAssignInfos && this.otherAssignInfos.length) {\r\n      for (let i = 0; i < this.otherAssignInfos.length; i++) {\r\n        let nextFlowNode: FlowNodeInfo = {\r\n          activityDefinitionId: this.otherAssignInfos[i].activityDefinitionId,\r\n          activityDefinitionName: this.otherAssignInfos[i].activityDefinitionName,\r\n          dependency: this.otherAssignInfos[i].dependency,\r\n          selectedAssignees: this.otherAssignInfos[i].assigneeInfo ? this.otherAssignInfos[i].assignees : [],\r\n          assigneeInfo: null,\r\n          resolved: false,\r\n          anonymous: false,\r\n          anonymousText: ''\r\n        }\r\n        this.payload.otherAssignNodes.push(nextFlowNode);\r\n      }\r\n    }\r\n    this.payload.processDefinitionId = this.selectedProcessId;\r\n    this.submitDisable = true;\r\n    //紧急程度\r\n    if (this.response.priorityInfo && this.response.priorityInfo.enable) {\r\n      this.payload.priority = this.response.priorityInfo.priority;\r\n    }\r\n    const load = this.loadingService.show();\r\n    this.taskService.startProcess(this.payload).subscribe((response: ExecutionResponse) => {\r\n      load.close();\r\n      this.submitDisable = false;\r\n      this.subject.next(true);\r\n      this.subjectWithResponse.next(response);\r\n      let messageAfterSubmit = this.i18nService.getValue('startProcess.submitSuccess');\r\n      if (this.openFromIframe) {\r\n        (window.parent as any).gspWfService.eventHandler({ data: { type: MessageType.SubmitSuccess, message: messageAfterSubmit } });\r\n      } else {\r\n        this.handlerService.handleSubmitMessage(ConfigCode.Info_After_Submit, this.payload.bizDefKey);\r\n      }\r\n      if (!this.openFromIframe && response.needInteraction) {//提交审批后需要指派场景\r\n        this.notify.info(this.i18nService.getValue('cueWords.select')\r\n          + response.nextFlowNodes[0].activityDefinitionName\r\n          + this.i18nService.getValue('cueWords.processor'));\r\n        let task = new TaskEntity();\r\n        let action = new TaskAction();\r\n        task.sourceId = response.nextFlowNodes[0].assigneeInfo.workItemId;\r\n        action.code = 'AssignUser';\r\n        action.name = this.i18nService.getValue('cueWords.assignUser');\r\n        this.handlerService.execute(task, action).subscribe(re => { });\r\n      }\r\n      this.setSelectedProcessCache();\r\n    }, (error) => {\r\n      load.close();\r\n      this.payload.nextFlowNodes = [];\r\n      this.submitDisable = false;\r\n      this.subject.next(false);//已经有人用了这个subject，提交失败的话返回false by fangpengfei@20210324\r\n      this.taskService.error(error);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 选择流程清空\r\n   */\r\n  selectProcessClear() {\r\n    this.selectedProcessId = '';\r\n    this.destNodes = [];\r\n    this.nodePlaceholder = '';\r\n    this.selectedNodeId = '';\r\n    this.clearAssignInfos();\r\n    this.response = null;\r\n  }\r\n\r\n  /**\r\n   * 选择节点清空\r\n   */\r\n  selectNodeClear() {\r\n    this.selectedNodeId = '';\r\n    this.clearAssignInfos();\r\n  }\r\n\r\n  /**\r\n   * 用户帮助选人\r\n   */\r\n  afterConfirm(data: Assignee[], index: number) {\r\n    this.assignInfos[index].assignees = data;\r\n  }\r\n\r\n  /**\r\n   * 其他节点用户帮助选人\r\n   * @param data \r\n   * @param index \r\n   */\r\n  otherAssignInfosAfterConfirm(data: Assignee[], index: number) {\r\n    this.otherAssignInfos[index].assignees = data;\r\n  }\r\n\r\n  /**\r\n   * 弹框点击取消\r\n   */\r\n  cancel() {\r\n    if (this.openFromIframe) {\r\n      (window.parent as any).gspWfService.eventHandler({ data: { type: MessageType.Cancel, message: '' } });\r\n    } else {\r\n      this.subjectCancel.next(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取提交审批后返回值（bool型，兼容历史）\r\n   */\r\n  getSubject() {\r\n    return this.subject.asObservable();\r\n  }\r\n  /**\r\n   * 获取提交审批后返回值（实体型，带流程上下文）\r\n   */\r\n  getSubjectWithResponse() {\r\n    return this.subjectWithResponse.asObservable();\r\n  }\r\n  /**\r\n   * 点击取消后的subject，关闭窗口使用\r\n   * @returns\r\n   */\r\n  getSubjectCancel() {\r\n    return this.subjectCancel.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 设置下一环节\r\n   */\r\n  private setNextNode(response: SimulateResponse) {\r\n    this.destNodes = response.simulationPaths && response.simulationPaths.map(path => ({\r\n      id: path.nodeInfoList.map(node => node.activityDefinitionId).join('，'),\r\n      name: path.nodeInfoList.map(node => node.activityDefinitionName).join('，')\r\n    }));\r\n    //处理默认分支，无默认分支返回-1\r\n    const defaultIndex = response.simulationPaths.findIndex(a => a.default);\r\n    if (defaultIndex > -1) {\r\n      this.selectedNodeId = this.destNodes[defaultIndex].id;\r\n      this.nodeDefaultValue = this.destNodes[defaultIndex].name.indexOf('，') > -1 ? response.simulationPaths[defaultIndex].name : this.destNodes[defaultIndex].name;\r\n      this.setAssignInfo(response.simulationPaths[defaultIndex]);\r\n      this.setOtherAssignInfo(response);\r\n    } else {\r\n      this.nodePlaceholder = this.i18nService.getValue('task.selectPlaceholder');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置当前指派信息帮助参数\r\n   */\r\n  private setAssignInfo(simulationPaths: SimulationPath) {\r\n    this.assignInfos = [];\r\n    this.selectedNodeId.split('，').forEach(nodeId => {\r\n      const node = simulationPaths.nodeInfoList.find(node => node.activityDefinitionId === nodeId);\r\n      if (node) {\r\n        this.assignInfos.push({\r\n          selectedAssignees: node.selectedAssignees,\r\n          assigneeInfo: node.assigneeInfo,\r\n          assignees: node.selectedAssignees.map(user => { return { id: user.id, name: user.name } }),\r\n          activityDefinitionName: node.activityDefinitionName,\r\n          activityDefinitionId: node.activityDefinitionId,\r\n          dependency: node.dependency,\r\n          anonymous: node.anonymous,\r\n          anonymousText: node.anonymousText,\r\n          resolved: node.resolved\r\n        })\r\n      } else {\r\n        this.assignInfos.push({\r\n          selectedAssignees: [],\r\n          assigneeInfo: null,\r\n          assignees: [],\r\n          activityDefinitionName: '',\r\n          activityDefinitionId: '',\r\n          dependency: '',\r\n          anonymous: false,\r\n          anonymousText: '',\r\n          resolved: false,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 设置其他节点指派\r\n   * @param response \r\n   */\r\n  private setOtherAssignInfo(response: SimulateResponse) {\r\n    this.otherAssignInfos = [];\r\n    let tmpOtherAssignInfos = [];\r\n    let otherAssignNodes = response.otherAssignNodes;\r\n    if (otherAssignNodes && otherAssignNodes.length) {\r\n      otherAssignNodes.forEach(node => {\r\n        tmpOtherAssignInfos.push({\r\n          selectedAssignees: node.selectedAssignees,\r\n          assigneeInfo: node.assigneeInfo,\r\n          assignees: node.selectedAssignees.map(user => { return { id: user.id, name: user.name } }),\r\n          activityDefinitionName: node.activityDefinitionName,\r\n          activityDefinitionId: node.activityDefinitionId,\r\n          dependency: node.dependency,\r\n          anonymous: node.anonymous,\r\n          anonymousText: node.anonymousText,\r\n          resolved: node.resolved\r\n        })\r\n      })\r\n      //其他节点与下一节点去重\r\n      if (this.assignInfos && this.assignInfos.length) {\r\n        tmpOtherAssignInfos = tmpOtherAssignInfos.filter(a => this.assignInfos.findIndex(b => b.activityDefinitionId == a.activityDefinitionId) < 0);\r\n      }\r\n      this.otherAssignInfos = tmpOtherAssignInfos;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清空当前指派信息帮助参数\r\n   */\r\n  private clearAssignInfos() {\r\n    this.assignInfos = [{\r\n      selectedAssignees: [],\r\n      assigneeInfo: null,\r\n      assignees: [],\r\n      activityDefinitionName: '',\r\n      activityDefinitionId: '',\r\n      dependency: '',\r\n      anonymous: false,\r\n      anonymousText: '',\r\n      resolved: false,\r\n    }];\r\n    this.otherAssignInfos = [];\r\n  }\r\n\r\n  /**\r\n   * 获取浏览器缓存，上次流程选择的结果\r\n   */\r\n  private getSelectedProcessCache(processCategoryId: string) {\r\n    let browserCache = JSON.parse(localStorage.getItem(\"gspWfStartProcess\")) as StartProcessCache;\r\n    if (browserCache && browserCache.selectedProcessList) {\r\n      return browserCache.selectedProcessList.find(a => a.processCategory == processCategoryId);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * 浏览器缓存记下流程选择的结果\r\n   */\r\n  private setSelectedProcessCache() {\r\n    const processCategoryId = this.payload.bizDefKey;\r\n    const processDefinitionId = this.payload.processDefinitionId;\r\n    let process = this.destProcesses.find(a => a.id == processDefinitionId);\r\n    const processDefinitionName = process && process.name;\r\n\r\n    let browserCache = JSON.parse(localStorage.getItem(\"gspWfStartProcess\")) as StartProcessCache;\r\n    if (browserCache && browserCache.selectedProcessList) {\r\n      let selectedProcessList = browserCache.selectedProcessList;\r\n      if (selectedProcessList.findIndex(a => a.processCategory == processCategoryId) > -1) {\r\n        selectedProcessList.map(item => {\r\n          if (item.processCategory == processCategoryId) {\r\n            item.processDefinitionId = processDefinitionId;\r\n            item.processDefinitionName = processDefinitionName;\r\n            item.logTime = new Date();\r\n          }\r\n        });\r\n        browserCache.selectedProcessList = selectedProcessList;\r\n        localStorage.setItem(\"gspWfStartProcess\", JSON.stringify(browserCache));\r\n      } else {\r\n        let item = new SelectedProcessItem(processCategoryId, processDefinitionId, processDefinitionName);\r\n        selectedProcessList.push(item);\r\n        browserCache.selectedProcessList = selectedProcessList;\r\n        localStorage.setItem(\"gspWfStartProcess\", JSON.stringify(browserCache));\r\n      }\r\n    } else {\r\n      let browserCache = new StartProcessCache();\r\n      let selectedProcessList = [];\r\n      let item = new SelectedProcessItem(processCategoryId, processDefinitionId, processDefinitionName);\r\n      selectedProcessList.push(item);\r\n      browserCache.selectedProcessList = selectedProcessList;\r\n      localStorage.setItem(\"gspWfStartProcess\", JSON.stringify(browserCache));\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { TaskService } from \"../service/task.service\";\r\n\r\nexport class CommonComment {\r\n    id: string;\r\n    userId?: string;\r\n    message: string;\r\n    sortOrder?: number;\r\n    type?: string;\r\n    static newEntity(): CommonComment {\r\n        return {\r\n            id: TaskService.newId(),\r\n            message: ''\r\n        };\r\n    }\r\n}\r\n","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { forkJoin, Observable, of, Subject } from 'rxjs';\r\nimport { CommonComment } from '../../entity/comment';\r\nimport { CommonCommentFilter } from '../../entity/commonCommentFilter';\r\nimport { I18nService } from '../../service/i18n/i18n.service';\r\nimport { TaskService } from '../../service/task.service';\r\n\r\n@Component({\r\n  selector: 'lib-comment-manage',\r\n  templateUrl: './comment-manage.component.html',\r\n  styleUrls: ['./comment-manage.component.scss']\r\n})\r\nexport class CommentManageComponent implements OnInit {\r\n\r\n  commentList: CommonComment[] = [];\r\n  originCommentList: CommonComment[] = [];\r\n  commentColumns: DataColumn[] = [];\r\n  confirmSubject = new Subject();//点击确定\r\n  cancelSubject = new Subject();//点击取消\r\n\r\n  @Input() filter: CommonCommentFilter;//意见类型\r\n\r\n  @ViewChild('dataGrid') dataGrid: DatagridComponent;\r\n  @ViewChild('commentTypeCell') commentTypeCell: TemplateRef<any>;//常用意见类别模板\r\n  @ViewChild('commentOperateCell') commentOperateCell: TemplateRef<any>;//常用意见删除\r\n  @ViewChild('formButtonRef') buttons: TemplateRef<any>;//取消确认按钮\r\n\r\n  constructor(\r\n    private i18nService: I18nService,\r\n    private taskService: TaskService,\r\n    private notify: NotifyService,\r\n    private loadingService: LoadingService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.commentColumns = [{\r\n      field: 'message',\r\n      width: 100,\r\n      title: this.i18nService.getValue('comment.static.content'),\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n    }, {\r\n      field: 'userId',\r\n      width: 20,\r\n      title: this.i18nService.getValue('comment.static.type'),\r\n      template: this.commentTypeCell\r\n    }, {\r\n      field: 'operate',\r\n      width: 20,\r\n      title: this.i18nService.getValue('comment.static.operate'),\r\n      template: this.commentOperateCell\r\n    }];\r\n    //加载意见列表\r\n    this.loadComments();\r\n  }\r\n\r\n  /**\r\n * 点击常用意见，获取用户常用意见列表\r\n */\r\n  loadComments() {\r\n    const load = this.loadingService.show();\r\n    this.taskService.getCommentList(this.filter).subscribe((data: any[]) => {\r\n      load.close();\r\n      this.commentList = data;\r\n      this.originCommentList = JSON.parse(JSON.stringify(data));\r\n    }, () => {\r\n      load.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 新增一条常用意见\r\n   */\r\n  addCommonComment() {\r\n    const newEntity = CommonComment.newEntity();\r\n    newEntity.sortOrder = this.commentList.length + 1;\r\n    if (this.filter && this.filter.type) {\r\n      newEntity.type = this.filter.type;\r\n    }\r\n    this.commentList = this.commentList.concat(newEntity);\r\n    //新增后直接编辑单元格\r\n    setTimeout(() => {\r\n      this.dataGrid.editCell(newEntity.id, 'message');\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * 删除一条意见 data.rowData\r\n   */\r\n  deleteComment(data: any) {\r\n    if (data.rowData.userId !== '*') {\r\n      this.commentList = this.commentList.filter(c => c.id != data.rowData.id);\r\n      this.originCommentList = this.originCommentList.filter(c => c.id != data.rowData.id);\r\n      this.dataGrid.loadData(this.commentList);\r\n      this.taskService.deleteComment(data.rowData.id).subscribe(() => { });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 常用意见点击保存\r\n   */\r\n  saveCommonComment() {\r\n    this.dataGrid.endCellEdit();\r\n    this.commentList = this.commentList.filter(c => c.message);\r\n    this.commentList.forEach(comment => {\r\n      if (this.taskService.getBytesLength(comment.message) > 255) {\r\n        this.notify.warning(this.i18nService.getValue('cueWords.commonCommentTooLong'));\r\n        this.dataGrid.editCell(comment.id, 'message');\r\n        throw new Error(\"\");\r\n      }\r\n    })\r\n    this.commentList.forEach(comment => {\r\n      let origin = this.originCommentList.find(c => c.id == comment.id);\r\n      if (!origin || comment.message !== origin.message || comment.sortOrder != origin.sortOrder) {\r\n        this.taskService.addComment(comment).subscribe(() => { });\r\n      }\r\n    })\r\n    //此处已返回给farris\r\n    this.confirmSubject.next({ action: 'submit', data: this.commentList });\r\n  }\r\n\r\n  /**\r\n   * 点击取消（此处已返回给farris）\r\n   */\r\n  clickCancel() {\r\n    this.commentList = this.commentList.filter(c => c.message);\r\n    this.cancelSubject.next({ action: 'cancel', data: this.originCommentList });\r\n  }\r\n\r\n  /**\r\n   * 系统预置的不允许编辑删除\r\n   * @param data data.rowData为实体数据\r\n   * @returns\r\n   */\r\n  beforeEdit = (data: any) => {\r\n    if (data.rowData.userId == '*') {\r\n      return of(false);\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  getConfirmSUbject(): Observable<any> {\r\n    return this.confirmSubject.asObservable();\r\n  }\r\n\r\n  getCancelSubject(): Observable<any> {\r\n    return this.cancelSubject.asObservable();\r\n  }\r\n\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver, ApplicationRef } from '@angular/core';\r\nimport { WfApprovalLogsService } from '@gsp-wf/wf-approval-logs'\r\nimport { ForecastProcessPayload, WFFlowchartService } from '@gsp-wf/ui-flowchart';\r\nimport { BsModalService, ModalOptions } from '@farris/ui-modal';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { TaskService } from './service/task.service';\r\nimport { TaskAction } from './entity/task-action';\r\nimport { AssigneeInfo } from './entity/complete-response';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { I18nService } from './service/i18n/i18n.service';\r\nimport { FrameworkService, AppOptions } from '@gsp-sys/rtf-common';\r\nimport { BizFormResult, FormParameter } from './entity/bizform';\r\nimport { TaskEntity } from './entity/task-entity';\r\nimport { TaskExecuteComponent } from './components/task-execute/task-execute.component';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { StartProcessPayload, CancelSubmitPayload } from './entity/start-process-payload';\r\nimport { ProcessSelectorComponent } from './submit/process-selector/process-selector.component';\r\nimport { ExecutionResponse } from './entity/execution-response';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BatchCancelNumber, BatchSubmitNumber } from './entity/batchNumber';\r\nimport { SimulateResponse } from './entity/simulate-response';\r\nimport { ConfigCode, OwnerType } from './entity/task-center-config';\r\nimport { TaskCommentComponent } from '../public-api';\r\nimport { CommentManageComponent } from './components/comment-manage/comment-manage.component';\r\nimport { CommonCommentFilter } from './entity/commonCommentFilter';\r\n\r\n@Injectable()\r\nexport class WfTaskHandlerService {\r\n\r\n  subject = new Subject<any>();\r\n  private loading: LoadingService;\r\n  private message: MessagerService;\r\n  private curLanguage: string = localStorage.getItem('languageCode') || 'zh-CHS';//系统当前语言\r\n\r\n  private batchSubmitNum: BatchSubmitNumber = {//批量提交数量\r\n    successNum: 0,\r\n    failedNum: 0,\r\n    errorNum: 0,\r\n  };\r\n  private batchCancelNum: BatchCancelNumber = {//批量取消提交数量\r\n    successNum: 0,\r\n    errorNum: 0\r\n  }\r\n\r\n  constructor(\r\n    private logService: WfApprovalLogsService,\r\n    private flowchartService: WFFlowchartService,\r\n    private injector: Injector,\r\n    private resolver: ComponentFactoryResolver,\r\n    private modalService: BsModalService,\r\n    private taskService: TaskService,\r\n    private notify: NotifyService,\r\n    private i18nService: I18nService,\r\n    private frameworkService: FrameworkService,\r\n    private appRef: ApplicationRef,\r\n  ) {\r\n    this.loading = this.injector.get(LoadingService);\r\n    this.message = this.injector.get(MessagerService);\r\n  }\r\n\r\n  /**\r\n   * 处理单条任务\r\n   * @param entity 任务实体\r\n   * @param action 任务动作\r\n   */\r\n  execute(task: TaskEntity, action: TaskAction, otherParams?: any): Observable<any> {\r\n    switch (action.code) {\r\n      case 'ViewBizLog'://审批日志。如果是inSuite，根据流程实例打开\r\n        this.logService.showByProcInstId(task.processInstanceId);\r\n        break;\r\n      case 'ViewFlowChart'://查看流程\r\n        this.flowchartService.viewFlowchartByProcInstIdAndDataId(task.processInstanceId, task.refBizId);\r\n        break;\r\n      case 'ViewExecuteForm':// 联查单据\r\n        this.openApp(task, action, otherParams);\r\n        break;\r\n      default: //办理类任务\r\n        this.complete(task, action);\r\n    }\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  assignByInfo(assigneeInfo: AssigneeInfo, openFromIframe: boolean): Observable<any> {\r\n    const assignSubject = new Subject<any>();\r\n    return assignSubject.asObservable();\r\n  }\r\n\r\n  private complete(task: TaskEntity, action: TaskAction) {\r\n    const compFactory = this.resolver.resolveComponentFactory(TaskExecuteComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.setTask(task);\r\n    compRef.instance.setAction(action);\r\n    compRef.instance.addPadding();\r\n    const modalConfig: ModalOptions = {\r\n      title: action.name ? action.name : this.i18nService.getValue('task.title'),\r\n      width: 550,\r\n      height: compRef.instance.dialogHeight,\r\n      showButtons: true,\r\n      buttons: compRef.instance.buttons\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.getSubject().subscribe(re => {\r\n      re && re.result && this.subject.next(true);\r\n      re && re.result && dialog.close();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 打开审批联查界面\r\n   * @param entity 任务实体\r\n   * @param action 动作实体\r\n   */\r\n  openApp(entity: TaskEntity, action: TaskAction, otherParams?: any) {\r\n    const sourceId = entity.sourceId;\r\n    const formInfoLoading = this.loading.show();\r\n    this.taskService.getTaskFormInfo(sourceId).subscribe((formInfo: BizFormResult) => {\r\n      formInfoLoading.close();\r\n      if (!formInfo) {\r\n        this.notify.info(this.i18nService.getValue('task.notFoundBill'));\r\n        return;\r\n      }\r\n      const options: AppOptions = {\r\n        appType: 'menu',\r\n        funcId: '',\r\n        appId: '',\r\n        appEntrance: '',\r\n        tabId: sourceId,\r\n        isNewTab: true\r\n      };\r\n      // 传工作流上下文参数\r\n      const parameters = new Map<string, any>();\r\n      // 功能菜单情况\r\n      if (formInfo.appId) {\r\n        // 默认联查审批界面\r\n        if (formInfo.formType === '1') {//表单嵌流程\r\n          parameters.set('workItemId', sourceId);\r\n          parameters.set('procInstId', action.parameters[0].value);\r\n          parameters.set('taskState', entity.state);\r\n          parameters.set('isAssign', entity.actions.some(action => action.code === 'AssignUser'));\r\n          formInfo.parameters.forEach((item: FormParameter) =>\r\n            parameters.set(item.code, item.value)\r\n          );\r\n          options.funcId = formInfo.appId;\r\n        } else {//流程嵌表单\r\n          options.funcId = 'WF0120';\r\n          parameters.set('task', entity);\r\n          parameters.set('formInfo', formInfo);\r\n          otherParams && parameters.set('taskFilter', otherParams.taskFilter);\r\n        }\r\n      } else if (formInfo.url) {//表单格式\r\n        options.funcId = 'WF0120';\r\n        parameters.set('task', entity);\r\n        parameters.set('formInfo', formInfo);\r\n        otherParams && parameters.set('taskFilter', otherParams.taskFilter);\r\n      } else {\r\n        this.notify.info(this.i18nService.getValue('task.notFoundBill'));\r\n        return;\r\n      }\r\n      options.entityParams = parameters;\r\n      options.queryStringParams = parameters;//兼容IDP表单\r\n      this.openMenu(options, this.i18nService.getValue('static.taskForm'));\r\n    }, error => {\r\n      formInfoLoading.close();\r\n      this.taskService.error(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 打开菜单，区分是否inSuite环境，用不同方式打开菜单\r\n   * @param options 打开参数\r\n   * @param menuTitle 菜单名称\r\n   */\r\n  private openMenu(options: any, menuTitle: string) {\r\n    if (this.taskService.isInSuite()) {\r\n      options.menuTitle = menuTitle;\r\n      var extObj = (window as any).gspframeworkService.rtf.extendMethod.getExtObj();\r\n      extObj.iGIXMenuOpen(options);\r\n    } else {\r\n      const openMenuLoading = this.loading.show();\r\n      this.frameworkService.openMenu$(options).subscribe(re => {\r\n        openMenuLoading.close();\r\n\r\n      }, error => {\r\n        openMenuLoading.close();\r\n        this.taskService.error(error);\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 返回动作列表，表单嵌流程用到\r\n   * @param workItemId \r\n   */\r\n  refreshActions(workItemId: string): Observable<any> {\r\n    return this.taskService.getWorkItemActions(workItemId).pipe(\r\n      switchMap((actionList: any[]) => {\r\n        return of(actionList.filter(action =>\r\n          action.code !== 'ViewBizLog' &&\r\n          action.code !== 'ViewFlowChart' &&\r\n          action.code !== 'ViewExecuteForm'\r\n        ));\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 根据流程实例ID和动作Code办理任务（暂未用到 by fangpengfei@2020.06.22）\r\n   * @param procInstId 流程实例ID\r\n   * @param state 任务状态\r\n   * @param actionCode 动作Code\r\n   */\r\n  executeByProcInstId(procInstId: string, state: number, actionCode: string): Observable<any> {\r\n    var action = new TaskAction();\r\n    action.code = actionCode;\r\n    const subject = new Subject();\r\n    this.taskService.getTaskByProcInstId(procInstId, state).subscribe((task: TaskEntity) => {\r\n      if (task) {\r\n        this.execute(task, action).subscribe(re => {\r\n          subject.next(re);\r\n        })\r\n      } else {\r\n        this.notify.info(this.i18nService.getValue('task.noTask'));\r\n      }\r\n    })\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 根据workItemId 办理任务\r\n   * @param workItemId 工作项ID\r\n   * @param action 动作实体\r\n   */\r\n  executeByWorkItemId(workItemId: string, action: TaskAction): Observable<any> {\r\n    let task = new TaskEntity();\r\n    task.sourceId = workItemId;\r\n    return this.execute(task, action);\r\n  }\r\n\r\n  /**\r\n   * 提交审批\r\n   * @param payload 上下文参数\r\n   * @returns subject true：提交成功，false：提交失败 \r\n   */\r\n  startProcess(payload: StartProcessPayload): Observable<any> {\r\n    const subject = new Subject();\r\n    const configLoad = this.loading.show();\r\n    this.taskService.getTaskCenterConfigByCode(ConfigCode.If_Show_Submit_Dialog, OwnerType.BizDefKey, payload.bizDefKey).subscribe(re => {\r\n      configLoad.close();\r\n      if (re && re.currentValue === 'false') {//自定义无需弹框\r\n        const simulateLoad = this.loading.show();\r\n        this.taskService.startProcessSimulate(payload).subscribe((response: SimulateResponse) => {//预解析\r\n          simulateLoad.close();\r\n          if (!response || response.needInteraction === false) {//预解析无需交互\r\n            const executeLoad = this.loading.show();\r\n            this.taskService.startProcess(payload).subscribe((response: ExecutionResponse) => {//执行\r\n              executeLoad.close();\r\n              if (payload.withResponse) {\r\n                subject.next(response);\r\n              } else {\r\n                subject.next(true);\r\n              }\r\n              this.handleSubmitMessage(ConfigCode.Info_After_Submit, payload.bizDefKey);\r\n            }, error => {//执行报错\r\n              executeLoad.close();\r\n              if (payload.withResponse) {\r\n                subject.next(null);\r\n              } else {\r\n                subject.next(false);\r\n              }\r\n              this.taskService.error(error);\r\n            });\r\n          } else {//预解析需要交互\r\n            this.showStartProcessDialog(payload).subscribe(re => {\r\n              subject.next(re);\r\n            });\r\n          }\r\n        }, error => {//预解析报错\r\n          simulateLoad.close();\r\n          subject.next(null);\r\n          this.taskService.error(error);\r\n        })\r\n      } else {//无是否弹框配置\r\n        this.showStartProcessDialog(payload).subscribe(re => {\r\n          subject.next(re);\r\n        });\r\n      }\r\n    }, error => {//获取配置出错\r\n      configLoad.close();\r\n      this.taskService.error(error);\r\n    })\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 提交审批弹框\r\n   * @param payload 参数\r\n   * @param withResponse 是否带返回值\r\n   */\r\n  private showStartProcessDialog(payload: StartProcessPayload): Observable<any> {\r\n    const subject = new Subject();\r\n    const compFactory = this.resolver.resolveComponentFactory(ProcessSelectorComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.setParam(payload).subscribe((re) => {\r\n      const modalConfig: ModalOptions = {\r\n        title: this.i18nService.getValue('startProcess.title'),\r\n        width: 520,\r\n        height: re && re.dialogHeight,\r\n        showButtons: true,\r\n        buttons: compRef.instance.buttons,\r\n        opened: () => {\r\n          setTimeout(() => {\r\n            compRef.changeDetectorRef && compRef.changeDetectorRef.detectChanges();\r\n          }, 100);\r\n        }\r\n      };\r\n      const dialog = this.modalService.show(compRef, modalConfig);\r\n      if (payload.withResponse === true) {//内部使用\r\n        compRef.instance.getSubjectWithResponse().subscribe(re => {\r\n          subject.next(re);\r\n          dialog.close();\r\n        });\r\n        compRef.instance.getSubjectCancel().subscribe(() => {\r\n          dialog.close();\r\n        });\r\n      } else {//已有业务组调用\r\n        compRef.instance.getSubject().subscribe(re => {\r\n          subject.next(re);\r\n          dialog.close();\r\n        });\r\n        compRef.instance.getSubjectCancel().subscribe(re => {\r\n          subject.next(re);\r\n          dialog.close();\r\n        });\r\n      }\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 取消提交\r\n   * @payload payload 参数\r\n   */\r\n  cancelSubmit(payload: CancelSubmitPayload): Observable<any> {\r\n    const subject = new Subject();\r\n    const load = this.loading.show();\r\n    this.taskService.cancelSubmit(payload).subscribe((re) => {\r\n      load.close();\r\n      subject.next(true);\r\n      if (re && re.needInteraction) {\r\n        this.notify.info(this.i18nService.getValue('startProcess.cancelSubmitInfo'));\r\n      } else {\r\n        this.handleSubmitMessage(ConfigCode.Info_After_Cancel_Submit, payload.bizDefKey);\r\n      }\r\n    }, error => {\r\n      load.close();\r\n      subject.error(false);\r\n      this.taskService.error(error);\r\n    })\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 提交审批\r\n   * @param dataId 表单id\r\n   * @param bizDefKey 入口单据id\r\n   * @param options 自定义配置\r\n   */\r\n  submitWithBizDefKey(dataId: string, bizDefKey: string): Observable<any> {\r\n    if (!dataId) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n\r\n    var payload = new StartProcessPayload();\r\n    payload.dataId = dataId;\r\n    payload.bizDefKey = bizDefKey;\r\n    payload.withResponse = true;\r\n\r\n    return this.startProcess(payload);\r\n  }\r\n\r\n  /**\r\n   * 取消提交审批\r\n   * @param dataId 表单id\r\n   * @param bizDefKey 入口单据id\r\n   * @param options 自定义配置\r\n   */\r\n  cancelSubmitWithDataId(dataId: string, bizDefKey: string): Observable<any> {\r\n    if (!dataId) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    var cancelSubmitPayload = new CancelSubmitPayload();\r\n    cancelSubmitPayload.dataId = dataId;\r\n    cancelSubmitPayload.bizDefKey = bizDefKey;\r\n    return this.cancelSubmit(cancelSubmitPayload);\r\n  }\r\n\r\n  /**\r\n   * 批量提交审批\r\n   * @param dataIds 表单ID集合\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  batchSubmitWithBizDefKey(dataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!dataIds || !dataIds.length) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsEmpty'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    if (dataIds.length === 1) {\r\n      var startPayload = new StartProcessPayload()\r\n      startPayload.bizDefKey = bizDefKey;\r\n      startPayload.dataId = dataIds[0];\r\n      return this.startProcess(startPayload);\r\n    }\r\n\r\n    const subject = new Subject();\r\n    const load = this.loading.show();\r\n    this.batchSubmitNum.successNum = 0;\r\n    this.batchSubmitNum.failedNum = 0;\r\n    this.batchSubmitNum.errorNum = 0;\r\n    this.batchSubmitHelpFunction([...dataIds], bizDefKey, () => {\r\n      load.close();\r\n      subject.next(true);\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量提交审批辅助函数\r\n   */\r\n  private batchSubmitHelpFunction(dataIds: string[], bizDefKey: string, handler: Function) {\r\n    if (dataIds && dataIds.length > 0) {\r\n      const dataId = dataIds.shift();//引用类型转换\r\n      let startPayload = new StartProcessPayload()\r\n      startPayload.bizDefKey = bizDefKey;\r\n      startPayload.dataId = dataId;\r\n      startPayload.variables = { simulate: true };\r\n      this.taskService.startProcess(startPayload).subscribe((response: ExecutionResponse) => {\r\n        if (response.needInteraction) {//需要交互\r\n          this.batchSubmitNum.failedNum++;\r\n          this.batchSubmitHelpFunction(dataIds, bizDefKey, handler);\r\n        } else {//不需要交互\r\n          startPayload.variables = { simulate: false };\r\n          this.taskService.startProcess(startPayload).subscribe((response: ExecutionResponse) => {\r\n            this.batchSubmitNum.successNum++;\r\n            this.batchSubmitHelpFunction(dataIds, bizDefKey, handler);\r\n          }, () => {//实际提交报错\r\n            this.batchSubmitNum.errorNum++;\r\n            this.batchSubmitHelpFunction(dataIds, bizDefKey, handler);\r\n          })\r\n        }\r\n      }, () => {//模拟提交报错\r\n        this.batchSubmitNum.errorNum++;\r\n        this.batchSubmitHelpFunction(dataIds, bizDefKey, handler);\r\n      })\r\n    } else {//批量执行完毕\r\n      this.showBatchSubmitInfo(this.batchSubmitNum, bizDefKey);\r\n      handler();//执行回调函数\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * 批量取消提交审批\r\n   * @param dataIds 表单ID集合\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  batchCancelSubmitWithDataId(dataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!dataIds || !dataIds.length) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsEmpty'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    if (dataIds.length === 1) {\r\n      return this.cancelSubmitWithDataId(dataIds[0], bizDefKey);\r\n    }\r\n    const subject = new Subject();\r\n    const load = this.loading.show();\r\n    this.batchCancelNum.successNum = 0;\r\n    this.batchCancelNum.errorNum = 0;\r\n    this.batchCancelHelpFunction([...dataIds], bizDefKey, () => {\r\n      load.close();\r\n      subject.next(true);\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 批量取消辅助函数\r\n   */\r\n  private batchCancelHelpFunction(dataIds: string[], bizDefKey: string, handler: Function) {\r\n    if (dataIds && dataIds.length) {\r\n      const dataId = dataIds.shift();//引用类型转换\r\n      let cancelPayload = new CancelSubmitPayload();\r\n      cancelPayload.dataId = dataId;\r\n      cancelPayload.bizDefKey = bizDefKey;\r\n      this.taskService.cancelSubmit(cancelPayload).subscribe(() => {//取消成功\r\n        this.batchCancelNum.successNum++;\r\n        this.batchCancelHelpFunction(dataIds, bizDefKey, handler);\r\n      }, () => {//取消失败\r\n        this.batchCancelNum.errorNum++;\r\n        this.batchCancelHelpFunction(dataIds, bizDefKey, handler);\r\n      })\r\n    } else {\r\n      this.showBatchCancelSubmitInfo(this.batchCancelNum, bizDefKey);\r\n      handler();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 子表提交审批\r\n   * @param parentDataId 主表id\r\n   * @param childDataId 子表id\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  childSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataId) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    var startProcessPayload = new StartProcessPayload();\r\n    startProcessPayload.dataId = `${parentDataId},${childDataId}`;\r\n    startProcessPayload.bizDefKey = bizDefKey;\r\n    return this.startProcess(startProcessPayload);\r\n  }\r\n\r\n  /**\r\n   * 子表取消提交审批\r\n   * @param parentDataId 主表id\r\n   * @param childDataId 子表id\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  childCancelSubmit(parentDataId: string, childDataId: string, bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataId) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    var cancelSubmitPayload = new CancelSubmitPayload();\r\n    cancelSubmitPayload.dataId = `${parentDataId},${childDataId}`;\r\n    cancelSubmitPayload.bizDefKey = bizDefKey;\r\n    return this.cancelSubmit(cancelSubmitPayload);\r\n  }\r\n\r\n  /**\r\n   * 子表批量提交审批\r\n   * @param parentDataId 主表id\r\n   * @param childDataIds 子表id集合\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  childBatchSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataIds) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    const dataIds = childDataIds.map(childDataId => `${parentDataId},${childDataId}`);\r\n    return this.batchSubmitWithBizDefKey(dataIds, bizDefKey);\r\n  }\r\n\r\n  /**\r\n   * 子表批量取消提交审批\r\n   * @param parentDataId 主表id\r\n   * @param childDataIds 子表id集合\r\n   * @param bizDefKey 入口单据id\r\n   */\r\n  childBatchCancelSubmit(parentDataId: string, childDataIds: string[], bizDefKey: string): Observable<any> {\r\n    if (!parentDataId || !childDataIds) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    const dataIds = childDataIds.map(childDataId => `${parentDataId},${childDataId}`);\r\n    return this.batchCancelSubmitWithDataId(dataIds, bizDefKey);\r\n  }\r\n\r\n  /**\r\n * 批量提交提示信息\r\n * @param successNum 成功条数\r\n * @param failedNum 需要交互的条数\r\n * @param errorNum 执行报错的条数\r\n */\r\n  private showBatchSubmitInfo(num: BatchSubmitNumber, bizDefKey: string) {\r\n    if (num.successNum && !num.failedNum && !num.errorNum) {//批量全部成功\r\n      this.taskService.getTaskCenterConfigByCode(ConfigCode.Info_After_Submit, OwnerType.BizDefKey, bizDefKey).subscribe((config: any) => {\r\n        if (this.curLanguage === 'en') {\r\n          this.notify.success(JSON.parse(config.currentValue).en);\r\n        }\r\n        if (this.curLanguage === 'zh-CHS') {\r\n          this.notify.success(JSON.parse(config.currentValue).zh_CHS);\r\n        }\r\n      })\r\n    } else {//非全部成功\r\n      let message = '';\r\n      num.successNum && (message += this.i18nService.getValue('batchStartProcess.success') + `【${num.successNum}】` + this.i18nService.getValue('batchStartProcess.row'));\r\n      num.errorNum && (message += this.i18nService.getValue('batchStartProcess.error') + `【${num.errorNum}】` + this.i18nService.getValue('batchStartProcess.row'));\r\n      num.failedNum && (message += this.i18nService.getValue('batchStartProcess.failed') + `【${num.failedNum}】` + this.i18nService.getValue('batchStartProcess.row'));\r\n      message += this.i18nService.getValue('batchStartProcess.single');\r\n      this.message.show('warning', message, { safeHtml: false });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 批量取消提交提示信息\r\n   */\r\n  private showBatchCancelSubmitInfo(num: BatchCancelNumber, bizDefKey: string) {\r\n    if (num.successNum && !num.errorNum) {//批量全部成功\r\n      this.taskService.getTaskCenterConfigByCode(ConfigCode.Info_After_Cancel_Submit, OwnerType.BizDefKey, bizDefKey).subscribe((config: any) => {\r\n        if (this.curLanguage === 'en') {\r\n          this.notify.success(JSON.parse(config.currentValue).en);\r\n        }\r\n        if (this.curLanguage === 'zh-CHS') {\r\n          this.notify.success(JSON.parse(config.currentValue).zh_CHS);\r\n        }\r\n      })\r\n    } else {\r\n      let message = '';\r\n      num.successNum && (message += this.i18nService.getValue('startProcess.success') + `【${num.successNum}】` + this.i18nService.getValue('startProcess.row'));\r\n      num.errorNum && (message += this.i18nService.getValue('startProcess.failed') + `【${num.errorNum}】` + this.i18nService.getValue('startProcess.row'));\r\n      this.message.show('warning', message, { safeHtml: false });\r\n    }\r\n  }\r\n\r\n  handleSubmitMessage(code: string, ownerId: string) {\r\n    const load = this.loading.show();\r\n    this.taskService.getTaskCenterConfigByCode(code, OwnerType.BizDefKey, ownerId).subscribe(re => {\r\n      load.close();\r\n      if (re && re.currentValue) {\r\n        let message = '';\r\n        const currentValue = JSON.parse(re.currentValue);\r\n        this.curLanguage === 'zh-CHS' && (message = currentValue.zh_CHS);\r\n        this.curLanguage === 'en' && (message = currentValue.en);\r\n        this.curLanguage === 'zh-CHT' && (message = currentValue.zh_CHT);\r\n        this.notify.success(message);\r\n      } else {\r\n        code === ConfigCode.Info_After_Submit && this.notify.success(this.i18nService.getValue('startProcess.submitSuccess'));\r\n        code === ConfigCode.Info_After_Cancel_Submit && this.notify.success(this.i18nService.getValue('startProcess.cancelSubmitSuccess'));\r\n      }\r\n    }, error => {\r\n      load.close();\r\n      this.taskService.error(error);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 表单上触发流程预解析操作\r\n   * 已封装为表单的命令操作\r\n   */\r\n  processSimulate(): Observable<any> {\r\n    const subject = new Subject();\r\n    const gspWfEventService = (window as any).parent.gspWfEventService;\r\n    gspWfEventService.simulate(() => {\r\n      subject.next(true);\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * 根据单据id查看流程图\r\n   * 已封装为表单命令和操作\r\n   */\r\n  viewFlowChartByDataId(dataId: string) {\r\n    if (!dataId) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    this.flowchartService.viewFlowChartByDataId(dataId);\r\n  }\r\n\r\n  /**\r\n   * 查看流程图（新，支持预览）\r\n   * 已封装为表单命令和操作\r\n   * @param bizDefKey 流程分类id\r\n   * @param dataId 表单数据id\r\n   */\r\n  viewFlowChartWithForecast(bizDefKey: string, dataId: string) {\r\n    if (!dataId) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    if (!bizDefKey) {\r\n      this.message.error(this.i18nService.getValue('startProcess.bizDefKeyIsNull'));\r\n      return;\r\n    }\r\n    let payload = new ForecastProcessPayload();\r\n    payload.bizDefKey = bizDefKey;\r\n    payload.dataId = dataId;\r\n    this.flowchartService.viewProcess(payload);\r\n  }\r\n\r\n  /**\r\n   * 查看审批记录（弹框）\r\n   * 已封装为表单命令\r\n   * @param dataId 表单数据id\r\n   * @param style 其他参数\r\n   */\r\n  viewApprovalLog(dataId: string, style: string) {\r\n    if (!dataId) {\r\n      this.notify.warning(this.i18nService.getValue('startProcess.dataIdIsNull'));\r\n      return;\r\n    }\r\n    const parameters = {\r\n      dataId: dataId,\r\n      style: style,\r\n    }\r\n    this.logService.showApprovalLog(parameters);\r\n  }\r\n\r\n  /**\r\n   * 获取用户的常用意见（已暴露给farris）\r\n   * @returns 用户常用意见list\r\n   */\r\n  getCommonComments(filter: CommonCommentFilter): Observable<any> {\r\n    return this.taskService.getCommentList(filter);\r\n  }\r\n\r\n  /**\r\n   * 展示常用意见管理dialog（已暴露给farris）\r\n   */\r\n  showCommentManageDialog(filter: CommonCommentFilter): Observable<any> {\r\n    let subject = new Subject();\r\n    const compFactory = this.resolver.resolveComponentFactory(CommentManageComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const options: ModalOptions = {\r\n      title: this.i18nService.getValue('comment.static.title'),\r\n      width: 740,\r\n      height: 440,\r\n      showButtons: true,\r\n      buttons: compRef.instance.buttons\r\n    }\r\n    compRef.instance.filter = filter;\r\n    const dialog = this.modalService.show(compRef, options);\r\n    compRef.instance.getConfirmSUbject().subscribe(re => {\r\n      dialog.close();\r\n      subject.next(re);\r\n    });\r\n    compRef.instance.getCancelSubject().subscribe(re => {\r\n      dialog.close();\r\n      subject.next(re);\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform, Optional } from '@angular/core';\r\nimport { I18nService } from './i18n.service';\r\n\r\n@Pipe({ name: 'translate' })\r\nexport class TranslatePipe implements PipeTransform {\r\n    constructor(@Optional() public i18nService: I18nService) { }\r\n    transform(name: any, defaultVal = ''): any {\r\n        if (this.i18nService) {\r\n            const r = this.i18nService.getValue(name);\r\n            return r ? r : defaultVal;\r\n        } else {\r\n            return defaultVal;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-task-assigninfo',\r\n  templateUrl: './task-assigninfo.component.html',\r\n  styleUrls: ['./task-assigninfo.component.css']\r\n})\r\n\r\n/**\r\n * 组件已弃用\r\n */\r\nexport class TaskAssigninfoComponent implements OnInit {\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","/**\r\n * farris用户帮助参数\r\n */\r\nexport class UserHelpParam {\r\n\r\n    readonly: boolean = false;\r\n\r\n    multiSelect: boolean;\r\n\r\n    includeJobLeavers: boolean = false;\r\n\r\n    includeCurrentUser: boolean;\r\n\r\n    includeStopUser: boolean = false;\r\n\r\n    unSelectedUserIds: string;\r\n\r\n    orgId: string;\r\n\r\n    enableChildHierarchy: boolean;\r\n\r\n    showTabIds: string;\r\n\r\n    activeTabId: string;\r\n\r\n    userIds: string;\r\n\r\n    personnelOrderField: string = \"orderby_ordernum\";\r\n\r\n    userTypeMode: string = \"WfMode\";\r\n\r\n    filterId: string;\r\n\r\n}","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef, Injector } from '@angular/core';\r\nimport { AssigneeInfo } from '../../entity/complete-response';\r\nimport { I18nService } from '../../service/i18n/i18n.service';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { User } from '../../entity/user';\r\nimport { Assignee } from '../../entity/start-process-payload';\r\nimport { TaskService } from '../../service/task.service';\r\nimport { WfContext } from '../../entity/wfContext';\r\nimport { UserHelpParam } from '../../entity/farris-user-help-param';\r\n\r\ndeclare let System: any;\r\n\r\n@Component({\r\n  selector: 'lib-assignee-info',\r\n  templateUrl: './assignee-info.component.html',\r\n  styleUrls: ['../task-execute/task-execute.component.css'],\r\n})\r\nexport class AssigneeInfoComponent implements OnInit {\r\n\r\n  assignUserNgModule: string;\r\n  _assigneeInfo: AssigneeInfo;\r\n  _selectedAssignees: User[];//已经选中的指派人\r\n  assignees: Assignee[] = [];//返回选中人的ID数组\r\n  anonymous = false; // 是否匿名\r\n  anonymousText = ''; // 匿名显示文本\r\n  defaultParticipant: string;//默认办理人（界面提示用）\r\n  pscChange = null;//farris用户帮助\r\n\r\n  @Input() disabled: boolean = false;//办理人员输入框是否禁用\r\n  @Input() placeholder: string;\r\n  @Input() singleSelect: boolean;\r\n  @Input() filter = { notGetCurrentUser: false, notGetStopUser: true, orderField: \"order\", withAllOrg: true, orgId: '' }\r\n  @Input() ifShowBlank: boolean = true;//办理人为空时，是否显示选人框\r\n  @Input() openFromIframe: boolean = false;//是否从iframe打开，应用IDP提交审批集成\r\n  @Input() activityName: string;//节点名称\r\n  @Input() allowGlobalAssign: boolean;//是否全员指派\r\n  @Input() wfContext: WfContext;//工作流上下文\r\n  @Input() index: any;//区分是哪个组件\r\n  @Input() isUseNewSelectUserHelp: boolean = false;//是否直接启用新版选人组件\r\n  @Input() ifHorizontal: boolean = false;//是否水平排列\r\n\r\n  @Output() afterConfirm = new EventEmitter<Assignee[]>();\r\n  groupIcon = '<i class=\"f-icon f-icon-plus-circle text-primary\"></i>';\r\n  extendUserHelp: boolean = false;//用户帮助是否扩展\r\n  extendUserHelpUrl: string;//扩展帮助的url\r\n\r\n  constructor(\r\n    private i18nService: I18nService,\r\n    private notify: NotifyService,\r\n    private cd: ChangeDetectorRef,\r\n    private taskService: TaskService,\r\n    private injector: Injector\r\n  ) {\r\n    //是否使用farris用户帮助\r\n    this.taskService.getWfUserHelpConfig().subscribe((re: any) => {\r\n      if (re && re.userHelpConfig && re.userHelpConfig.isExtend == 'true') {\r\n        this.extendUserHelp = true;\r\n        this.extendUserHelpUrl = re.userHelpConfig.url + '?v=20221114';\r\n      }\r\n    }, error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    //引入farris用户帮助脚本\r\n    if (this.openFromIframe) {\r\n      (top as any).System.import(\"/platform/common/web/@farris/common-personnel-select/psc.js\" + '?v=' + new Date().getTime().toString()).then((e) => {\r\n      }, error => {\r\n        console.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set assigneeInfo(info: AssigneeInfo) {\r\n    this.disabled = false;\r\n    this.placeholder = null;//清空\r\n    this.assignUserNgModule = null;//清空\r\n    this._assigneeInfo = info;//可以传null\r\n    if (!this._assigneeInfo) {\r\n      this.disabled = true;\r\n    } else {\r\n      if (this._assigneeInfo.selectAssignee) {\r\n        this.disabled = false;\r\n        this.placeholder = this.i18nService.getValue('task.selectPlaceholder');//请选择\r\n      } else {\r\n        this.disabled = true;\r\n        if (this._assigneeInfo.assigneeUsers && this._assigneeInfo.assigneeUsers.length) {\r\n          this.defaultParticipant = this.anonymous ? this.anonymousText : this._assigneeInfo.assigneeUsers.map(user => user.name).join();//解析人名\r\n        } else {\r\n          this.defaultParticipant = this.i18nService.getValue('task.noUser');//无\r\n        }\r\n      }\r\n      this.singleSelect = !this._assigneeInfo.multiSelect;\r\n      this.allowGlobalAssign = this._assigneeInfo.allowGlobalAssign;\r\n      if (this._assigneeInfo.organizationScope && this._assigneeInfo.organizationScope.length) {\r\n        const orgList = this._assigneeInfo.organizationScope[0];\r\n        this.filter.orgId = orgList.id;\r\n        this.filter.withAllOrg = orgList.includeChildren;\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set setAnonymous(anonymous: boolean) {\r\n    this.anonymous = anonymous;\r\n  }\r\n\r\n  @Input()\r\n  set setAnonymousText(anonymousText: string) {\r\n    this.anonymousText = anonymousText;\r\n  }\r\n\r\n  /**\r\n   * 已选中的人（帮助不可用）\r\n   */\r\n  @Input()\r\n  set selectedAssignees(selectedAssignees: User[]) {\r\n    !this._assigneeInfo && (this.placeholder = null);\r\n    this._selectedAssignees = selectedAssignees;\r\n    selectedAssignees.length && (this.defaultParticipant = this.anonymous ? this.anonymousText : selectedAssignees.map(user => user.name).join());\r\n  }\r\n\r\n  /**\r\n   * 选择参与者\r\n   */\r\n  clickAssignUser() {\r\n    if (this.isUseNewSelectUserHelp) {\r\n      this.extendUserHelp = true;\r\n      this.extendUserHelpUrl = '/platform/runtime/wf/web/wf-user-help/wf-user-help-farris/wf-user-help-farris.js' + '?v=' + new Date().getTime().toString();\r\n    }\r\n    let context = {\r\n      singleSelect: this.singleSelect,\r\n      allowGlobalAssign: this.allowGlobalAssign,\r\n      assigneeUsers: this._assigneeInfo && this._assigneeInfo.assigneeUsers && this._assigneeInfo.assigneeUsers.length ? this._assigneeInfo.assigneeUsers : [],\r\n      filter: this.filter,\r\n      selectedUsers: this.assignees && this.assignees.length ? this.assignees : this._selectedAssignees,\r\n      wfContext: this.wfContext\r\n    }\r\n    if (this.extendUserHelp) {\r\n      if (this.openFromIframe) {\r\n        this.showFarrisUserHelpFromWindow(context);\r\n      } else {\r\n        this.showExtendUserHelp(context);\r\n      }\r\n    } else {\r\n      this.showExtendUserHelp(context);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 加载扩展帮助\r\n   */\r\n  private showExtendUserHelp(context: any) {\r\n    System.import(this.extendUserHelpUrl).then((moduleFactories: any) => {\r\n      const moduleFactory: any = Object.values(moduleFactories)[0];\r\n      const moduleRef = moduleFactory.create(this.injector);\r\n      moduleRef.instance.showHelp(context).subscribe(re => {\r\n        let userList = re.userList;\r\n        if (userList && userList.length) {\r\n          this.assignees = userList.map(user => { return { id: user.id, name: user.name } });\r\n          this.assignUserNgModule = this.assignees.map(user => user.name).join();\r\n        } else {\r\n          this.assignees = [];\r\n          this.assignUserNgModule = '';\r\n        }\r\n        this.afterConfirm.emit(this.assignees);\r\n        this.cd.detectChanges();\r\n      }, error => {\r\n        console.error(error);\r\n      });\r\n    }, error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  //从window上弹出用户帮助\r\n  private showFarrisUserHelpFromWindow(context: any) {\r\n    let param = new UserHelpParam();\r\n    if (context.wfContext) {\r\n      param.filterId = context.wfContext.processCategoryId;\r\n    }\r\n    param.multiSelect = !context.singleSelect;\r\n    let showOrgTab = false;\r\n    if (context.allowGlobalAssign || (context.filter && context.filter.orgId)) {\r\n      showOrgTab = true;\r\n    }\r\n    let farrisUnSelectedUserIds = '';\r\n    if (context.assigneeUsers && context.assigneeUsers.length) {\r\n      farrisUnSelectedUserIds = context.assigneeUsers.map(user => user.id).join();\r\n      param.unSelectedUserIds = farrisUnSelectedUserIds;\r\n    }\r\n    //有参与者 + 允许全员\r\n    if (showOrgTab && farrisUnSelectedUserIds) {\r\n      param.showTabIds = 'candidate,recent,organization,favorites,group';\r\n      param.activeTabId = 'candidate';\r\n    }\r\n    //允许全员\r\n    if (showOrgTab && !farrisUnSelectedUserIds) {\r\n      param.showTabIds = 'recent,organization,favorites,group';\r\n      param.activeTabId = 'recent';\r\n    }\r\n    //仅有参与者\r\n    if (!showOrgTab && farrisUnSelectedUserIds) {\r\n      param.showTabIds = 'candidate';\r\n      param.activeTabId = 'candidate';\r\n    }\r\n    if (context.filter) {\r\n      let filter = context.filter;\r\n      param.includeCurrentUser = !filter.notGetCurrentUser;\r\n      param.orgId = filter.orgId ? filter.orgId : '*';\r\n      param.enableChildHierarchy = filter.withAllOrg;\r\n    }\r\n    if (context.selectedUsers && context.selectedUsers.length) {\r\n      param.userIds = context.selectedUsers.map(user => user.id).join();\r\n    }\r\n    const token = 'gspWfTask' + this.index;\r\n    (top.window as any).CommonPersonnelSelect.component.farrisDialogShowInWf(param, token);\r\n    if (!this.pscChange) {\r\n      this.pscChange = (top.window as any).FARRIS_PSC.selectionsChange.subscribe((re) => {\r\n        if (re.token == token) {\r\n          let userList = re.data;\r\n          if (userList && userList.length) {\r\n            this.assignees = userList.map(user => { return { id: user.userId, name: user.name } });\r\n            this.assignUserNgModule = this.assignees.map(user => user.name).join();\r\n          } else {\r\n            this.assignees = [];\r\n            this.assignUserNgModule = '';\r\n          }\r\n          this.afterConfirm.emit(this.assignees);\r\n          this.cd.detectChanges();\r\n        }\r\n      }\r\n      );\r\n    }\r\n  }\r\n\r\n  //清除\r\n  assignUserClear() {\r\n    this.assignees = [];\r\n    this.assignUserNgModule = null;\r\n    this.afterConfirm.emit([]);\r\n  }\r\n\r\n}\r\n","import { Directive, EventEmitter, HostListener, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n/**\r\n * 点击节流器：避免连续点击\r\n */\r\n@Directive({\r\n  selector: '[directive-throttle]'\r\n})\r\nexport class ThrottleClickDirective implements OnInit, OnDestroy {\r\n  // 一定的时间内只执行第一个事件\r\n  private THROTTLE_TIME: number = 2000;\r\n  private subject = new Subject<MouseEvent>();\r\n  private click: Subscription;\r\n  // 事件方法\r\n  @Output() throttleClick = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    const result = this.subject.pipe(\r\n      throttleTime(this.THROTTLE_TIME)\r\n    );\r\n    this.click = result.subscribe(e => {\r\n      this.throttleClick.emit(e)\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.click.unsubscribe();\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(evt: MouseEvent) {\r\n    this.subject.next(evt);\r\n  }\r\n}","\r\n/**\r\n * 执行上传附件实体\r\n */\r\nexport class FileUploadEntity {\r\n\r\n    rootId: string;\r\n\r\n    metadataIdList: string[];\r\n}\r\n\r\n/**\r\n * 执行删除附件所需实体\r\n */\r\nexport class FileDeleteEntity {\r\n\r\n    rootId: String;\r\n\r\n    metadataId: String;\r\n\r\n    mode: String;\r\n}\r\n\r\nexport class GspDocUploadEntity {\r\n\r\n    filePath: string;\r\n\r\n    metadata: GspDocMetadata;\r\n\r\n    fileContent: string;\r\n\r\n    mode: string;\r\n}\r\n\r\nexport class GspDocMetadata {\r\n\r\n    id: string;\r\n\r\n    fileName: string;\r\n\r\n    rootId: string;\r\n\r\n    docType: string;\r\n}","import { Component, OnInit, Input, ViewChild, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FDropdownDirective } from '@farris/ui-dropdown';\r\nimport { UploadDialogService } from '@gsp-svc/formdoc-upload';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { FileDeleteEntity, FileUploadEntity, GspDocMetadata, GspDocUploadEntity } from '../../entity/attachment';\r\nimport { SignHereComponent } from '@gsp-wf/wf-sign';\r\nimport { AvatarComponent } from '@farris/ui-avatar';\r\nimport { DownloadService } from '@gsp-svc/file-load';\r\nimport { TaskService } from '../../service/task.service';\r\nimport { CommonComment } from '../../entity/comment';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { ConfigCode, TaskCenterConfig } from '../../entity/task-center-config';\r\nimport { CommentManageComponent } from '../comment-manage/comment-manage.component';\r\n\r\n@Component({\r\n  selector: 'wf-comment',\r\n  templateUrl: './task-comment.component.html',\r\n  styleUrls: ['./task-comment.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TaskCommentComponent),\r\n    multi: true\r\n  },]\r\n})\r\nexport class TaskCommentComponent implements OnInit, ControlValueAccessor {\r\n\r\n  @Input() showAttachment: boolean = true;//是否显示附件上传，组件控制\r\n  @Input() showSign: boolean = true;//是否显示签名，组件控制（不同动作可能会不显示）\r\n  @Input() showCommonComment = true;//是否显示常用意见\r\n  @Input() comment: string;\r\n  @Input() placeholder = '';\r\n  @Input() processInstanceId: string;\r\n  @Input() textAreaHeight: number = 120;//文字框的高度\r\n  @Input() defaultComment: string;//默认的意见\r\n  @Input() curUserId: string;//当前用户id\r\n  @Input() taskOrigin: string;//当前是任务列表打开还是任务办理界面打开\r\n\r\n  @Input()\r\n  set TaskCenterConfig(configList: TaskCenterConfig[]) {\r\n    if (configList && configList.length) {\r\n      const attachment = configList.find(a => a.configCode == ConfigCode.If_Show_Attachment);\r\n      const sign = configList.find(a => a.configCode == ConfigCode.If_Show_Signature);\r\n      const enableSign = configList.find(a => a.configCode == ConfigCode.If_Use_Sign_By_Default);\r\n      const editSign = configList.find(a => a.configCode === ConfigCode.If_Can_Edit_Signature);\r\n      attachment && attachment.currentValue === 'true' && (this.ifShowAttachment = true);\r\n      sign && sign.currentValue === 'true' && (this.ifShowSign = true);\r\n      enableSign && enableSign.currentValue === 'false' && (this.ifEnableSign = false);\r\n      editSign && editSign.currentValue === 'false' && (this.ifCanEditSign = false);\r\n      if (this.ifShowSign && this.ifEnableSign) {\r\n        this.getUserSign(this.curUserId);\r\n      }\r\n    }\r\n  }\r\n\r\n  @Output() attachment = new EventEmitter();//附件\r\n  @Output() signature = new EventEmitter();//上传签名之后，发送签名id\r\n  @ViewChild('commentDialog') commentDialog: DialogComponent;//常用意见管理\r\n  @ViewChild('signDialog') signDialog: DialogComponent;//手写签名弹框\r\n  @ViewChild('dropdownEl') dropDownEl: FDropdownDirective;//解决选择意见后，下拉菜单无法收折的问题\r\n  @ViewChild('wfSignHere') signaturePad: SignHereComponent;//手写签名组件\r\n  @ViewChild('farrisAvatar') farrisAvatar: AvatarComponent;//头像组件，用作签名图片上传\r\n  @ViewChild('commentManageComp') commentManageComp: CommentManageComponent;//意见维护组件\r\n\r\n\r\n  private _value = '';\r\n  attachmentList: any[] = [];\r\n  ifShowAttachment: boolean = false;//任务中心配置，是否显示附件上传\r\n  ifShowSign: boolean = false;//任务中心配置，是否显示手写签名\r\n  signatureImage: string;//签名图片的base64值\r\n  tmpSignatureImage: string;//临时保存上传的图片\r\n  downloadService = new DownloadService();\r\n  ifUseSign: boolean = false;//是否使用手写\r\n  ifUseImg: boolean = true;//是否使用上传图片\r\n  ifEnableSign: boolean = true;//是否默认启用签名\r\n  ifUploadImg: boolean = false;//是否上传过图片\r\n  ifCanEditSign: boolean = true;//是否允许编辑签名\r\n  originSignId: string;//原始的签名id\r\n  isShowCommonTips: boolean = false;//是否展示提示\r\n  commentList: CommonComment[] = [];\r\n\r\n\r\n  btnHover = {//按钮hover样式变化\r\n    commentHover: false,\r\n    attachmentHover: false,\r\n    signHover: false\r\n  }\r\n\r\n  set value(v) {\r\n    if (this._value !== v) {\r\n      this._value = v;\r\n      this.onModelChange(v);\r\n    }\r\n\r\n  }\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  onModelChange = (obj: any) => { };\r\n  onModelTouched = (obj: any) => { };\r\n\r\n  constructor(\r\n    private taskService: TaskService,\r\n    private uploadDialog: UploadDialogService,\r\n    private messageService: MessagerService,\r\n    private loadingService: LoadingService,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.commentManageComp.getConfirmSUbject().subscribe(re => {\r\n      this.commentDialog && this.commentDialog.close();\r\n    })\r\n    this.commentManageComp.getCancelSubject().subscribe(() => {\r\n      this.commentDialog && this.commentDialog.close();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 弹出常用意见管理框\r\n   */\r\n  showCommentDialog() {\r\n    this.dropDownEl && this.dropDownEl.close();\r\n    this.commentDialog.show();\r\n  }\r\n\r\n  /**\r\n   * 点击常用意见，获取用户常用意见列表\r\n   */\r\n  loadComments() {\r\n    this.taskService.getCommentList().subscribe((data: any[]) => {\r\n      this.commentList = data;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ControlValueAccessor必须实现的方法\r\n   */\r\n  writeValue(value: string) {\r\n    if (value !== this.value) {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn) {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn) {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * 选择一条常用意见后事件\r\n   */\r\n  buttonClick(data: any) {\r\n    this.dropDownEl.close();\r\n    this.value = this.value == this.defaultComment ? data : this.value + data;\r\n  }\r\n\r\n  /**\r\n   * 上传附件\r\n   */\r\n  uploadAttachment() {\r\n    let isRepeat = false;\r\n    this.uploadDialog.uploadFile(this.processInstanceId ? this.processInstanceId : 'gspwftaskattachment', 'wf_attachment').then(re => {\r\n      for (let i of (re as any[])) {\r\n        isRepeat = false;\r\n        for (let attach of this.attachmentList) {\r\n          if (attach.fileName === i.fileName) {\r\n            this.messageService.info('包含重复文件' + i.fileName);\r\n            isRepeat = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!isRepeat) {\r\n          this.attachmentList.push(i);\r\n        }\r\n      }\r\n      this.attachment.emit(this.attachmentList);\r\n      //执行上传附件\r\n      let files = new FileUploadEntity();\r\n      files.rootId = \"wf_attachment\";\r\n      files.metadataIdList = [];\r\n      this.attachmentList.forEach(a => {\r\n        files.metadataIdList.push(a.metadataId);\r\n      })\r\n      files.metadataIdList.length && this.taskService.uploadAttachment(files).subscribe(() => { });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 删除附件\r\n   */\r\n  attachmentDelete(attachment) {\r\n    var gspDocDeleteEntity: FileDeleteEntity = {\r\n      rootId: \"wf_attachment\",\r\n      metadataId: attachment.metadataId,\r\n      mode: \"Formal\"\r\n    }\r\n    let index = this.attachmentList.indexOf(attachment);\r\n    if (index > -1) {\r\n      this.attachmentList.splice(index, 1);\r\n    }\r\n    this.attachment.emit(this.attachmentList);\r\n    this.taskService.deleteAttachment(gspDocDeleteEntity).subscribe(() => { });\r\n  }\r\n\r\n  /**\r\n  * web端打开附件预览\r\n  */\r\n  attachmentPreview(metadataId) {\r\n    const options = {\r\n      appType: \"app\",\r\n      funcId: \"\",\r\n      tabName: \"文档在线预览\",\r\n      appId: \"6ccb476b-f2ba-df8f-6f47-d37d100c56e2\",\r\n      appEntrance: \"docviewertab\",\r\n      tabId: new Date().getTime(),\r\n      entityParams: {\r\n        metadataIdList: [metadataId],\r\n        rootId: \"wf_attachment\",\r\n        metadataId: null,\r\n        viewOptions: {\r\n          showHeader: true,\r\n          showPaging: true,\r\n          showThumbnails: true,\r\n          showDownload: true,\r\n          showSearch: true,\r\n          showZoom: true,\r\n          showPrint: true,\r\n          showSecondaryToolBar: true,\r\n        },\r\n      },\r\n    };\r\n    (window as any).gspframeworkService.rtf.func.openMenu(options);\r\n  }\r\n\r\n  /**\r\n   * 获取不同格式附件的缩略图\r\n   */\r\n  imageUrl(attachmentInfo) {\r\n    const url = '/platform/runtime/wf/webapp/mobiletaskcenter/assets/accessory/';\r\n    return url + this.taskService.createItem(attachmentInfo) + '.svg?v=20220303';\r\n  }\r\n\r\n  /**\r\n   * 展示手写签名dialog\r\n   */\r\n  showSignDialog() {\r\n    this.signDialog.show();\r\n    if (!this.ifEnableSign) {\r\n      this.getUserSign(this.curUserId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 点击删除签名\r\n   */\r\n  clickToDeleteImage() {\r\n    this.signatureImage = '';\r\n    this.signature.emit(null);\r\n    const load = this.loadingService.show();\r\n    this.taskService.addUserConfig(ConfigCode.If_Use_Sign_By_Default, 'false').subscribe(re => {\r\n      load.close();\r\n    }, () => {\r\n      load.close();\r\n    })\r\n  }\r\n\r\n  clickToUseSign() {\r\n    this.ifUseImg = false;\r\n    this.ifUseSign = true;\r\n    const canvas: any = this.signaturePad.canvasDiv.nativeElement.querySelector('canvas');\r\n    canvas.height = 252;\r\n    canvas.width = 665;\r\n  }\r\n\r\n  clickToUploadImg() {\r\n    this.farrisAvatar.onClick();\r\n  }\r\n\r\n  /**\r\n   * 手写签名点确定\r\n   */\r\n  clickToConfirm() {\r\n    let image: any;\r\n    if (this.signaturePad && this.signaturePad.isDraw) {//如果签过名\r\n      image = this.signaturePad.confirm();\r\n    } else if (this.ifUploadImg) {//如果上传过图片\r\n      image = this.tmpSignatureImage;\r\n    }\r\n    if (image) {\r\n      this.uploadSignatureImg(image);\r\n    } else {\r\n      this.signatureImage = this.tmpSignatureImage;\r\n      this.signature.emit(this.originSignId);\r\n      this.signDialog.close();\r\n    }\r\n    //添加启用签名配置\r\n    const load = this.loadingService.show();\r\n    this.taskService.addUserConfig(ConfigCode.If_Use_Sign_By_Default, 'true').subscribe(re => {\r\n      load.close();\r\n    }, () => {\r\n      load.close();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 点击清空\r\n   */\r\n  clickToReset() {\r\n    this.ifUseSign = false;\r\n    this.ifUseImg = true;\r\n    this.signatureImage = '';\r\n    this.tmpSignatureImage = '';\r\n    this.signature.emit('');\r\n    this.signaturePad && (this.signaturePad.isDraw = false);\r\n    this.ifUploadImg = false;\r\n  }\r\n\r\n  /**\r\n   * 点击取消\r\n   */\r\n  clickToCancel() {\r\n    this.signDialog.close();\r\n  }\r\n\r\n  /**\r\n   * 上传图片后事件\r\n   * event.base64 是图片信息,event.name是带后缀的图片名，event.type如image/jpeg\r\n   */\r\n  imgChange(event: any) {\r\n    this.ifUseImg = true;\r\n    this.ifUseSign = false;\r\n    this.ifUploadImg = true;\r\n    const image = event.base64;\r\n    this.tmpSignatureImage = image;\r\n    this.signatureImage = image;\r\n  }\r\n\r\n  /**\r\n   * 上传签名\r\n   * @param image \r\n   */\r\n  private uploadSignatureImg(image: any) {\r\n    var uploadSignature = new GspDocUploadEntity();\r\n    uploadSignature.fileContent = image.split(',')[1];\r\n    uploadSignature.filePath = this.curUserId;\r\n    uploadSignature.mode = \"Formal\";\r\n    uploadSignature.metadata = new GspDocMetadata();\r\n    uploadSignature.metadata.id = this.taskService.createNM();\r\n    uploadSignature.metadata.fileName = this.taskService.createNM() + \".png\";\r\n    uploadSignature.metadata.rootId = \"taskcentersignature\";\r\n    uploadSignature.metadata.docType = \"png\";\r\n    const load = this.loadingService.show();\r\n    this.taskService.uploadSignature(uploadSignature).subscribe(signId => {\r\n      load.close();\r\n      this.originSignId = signId;\r\n      this.signature.emit(signId);\r\n      this.signatureImage = image;\r\n      this.signDialog.close();\r\n      localStorage.setItem('gspWfTaskUserSign' + this.curUserId + this.taskService.getCurrentDateString(), signId);\r\n    }, error => {\r\n      load.close();\r\n      this.messageService.error('上传签名失败');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取用户的最近一次签名\r\n   */\r\n  private getUserSign(userId: string) {\r\n    const load = this.loadingService.show();\r\n    this.taskService.getUserSignId(userId).subscribe(signId => {\r\n      load.close();\r\n      if (signId) {\r\n        this.signature.emit(signId);\r\n        this.originSignId = signId;\r\n        this.signatureImage = this.downloadService.getDownloadUrl(signId, 'taskcentersignature');\r\n        this.tmpSignatureImage = this.signatureImage;\r\n      }\r\n    }, error => {\r\n      console.error(error);\r\n      load.close();\r\n    })\r\n  }\r\n\r\n  //文本框值变动监听事件\r\n  valueChange(e) {\r\n    if (this.taskService.getBytesLength(this.value) > 4000) {\r\n      this.isShowCommonTips = true;\r\n    } else {\r\n      this.isShowCommonTips = false;\r\n    };\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { DataTableModule } from '@farris/ui-datatable';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\n\r\nimport { WfApprovalLogsModule } from '@gsp-wf/wf-approval-logs';\r\nimport { UiFlowchartModule } from '@gsp-wf/ui-flowchart'\r\nimport { TaskImplApiModule } from '@gsp-wf/task-impl-api';\r\nimport { AvatarModule } from '@farris/ui-avatar';\r\nimport { FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { WfSignModule } from '@gsp-wf/wf-sign';\r\n\r\nimport { CommonSharedModule } from '@gsp-sys/rtf-common';\r\nimport { SessionService, HttpService, CacheService } from '@ecp-caf/caf-common';\r\nimport { FrameworkService, FrmEventBus, FuncsService } from '@gsp-sys/rtf-common';\r\n\r\nimport { TaskService } from './service/task.service';\r\nimport { TranslatePipe } from './service/i18n/translate.pipe';\r\nimport { I18nService } from './service/i18n/i18n.service';\r\nimport { WfTaskHandlerService } from './wf-task-handler.service';\r\nimport { TaskExecuteComponent } from './components/task-execute/task-execute.component'\r\nimport { TaskAssigninfoComponent } from './components/task-assigninfo/task-assigninfo.component';\r\nimport { ProcessSelectorComponent } from './submit/process-selector/process-selector.component';\r\nimport { AssigneeInfoComponent } from './components/assignee-info/assignee-info.component';\r\nimport { ThrottleClickDirective } from './throttleTime/throttleClickDirective';\r\nimport { TaskCommentComponent } from './components/task-comment/task-comment.component';\r\nimport { UrgeHandleComponent } from './components/urge-handle/urge-handle.component';\r\nimport { CommentManageComponent } from './components/comment-manage/comment-manage.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TranslatePipe,\r\n    TaskExecuteComponent,\r\n    TaskAssigninfoComponent,\r\n    ProcessSelectorComponent,\r\n    AssigneeInfoComponent,\r\n    ThrottleClickDirective,\r\n    TaskCommentComponent,\r\n    UrgeHandleComponent,\r\n    CommentManageComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    DataTableModule,\r\n    FarrisDialogModule,\r\n    PaginationModule,\r\n    NotifyModule,\r\n    ComboListModule,\r\n    WfApprovalLogsModule,\r\n    UiFlowchartModule,\r\n    CommonSharedModule,\r\n    LoadingModule,\r\n    TaskImplApiModule,\r\n    MessagerModule,\r\n    InputGroupModule,\r\n    WfSignModule,//手写签名\r\n    AvatarModule,//签名上传图片\r\n    FDropdownDirectiveTypeModule,//下拉菜单\r\n    DatagridModule,//常用意见管理farris表格\r\n    DatagridEditorsModule,\r\n    DatagridModule.forRoot([\r\n      ...EditorProviders\r\n    ]),\r\n    FarrisFormsModule,\r\n    SwitchModule,\r\n    FarrisSectionModule\r\n  ],\r\n  providers: [\r\n    TaskService,\r\n    I18nService,\r\n    WfTaskHandlerService,\r\n    FrameworkService,//框架没提供module\r\n    SessionService,\r\n    HttpService,\r\n    CacheService,\r\n    FrmEventBus,\r\n    FuncsService,\r\n  ],\r\n  exports: [\r\n    TaskExecuteComponent,\r\n    TaskAssigninfoComponent,\r\n    ProcessSelectorComponent,\r\n    AssigneeInfoComponent,\r\n    TaskCommentComponent,\r\n    CommentManageComponent\r\n  ],\r\n  entryComponents: [\r\n    TaskExecuteComponent,\r\n    TaskAssigninfoComponent,\r\n    ProcessSelectorComponent,\r\n    AssigneeInfoComponent,\r\n    TaskCommentComponent,\r\n    CommentManageComponent\r\n  ]\r\n})\r\nexport class WfTaskHandlerModule { }\r\n","/**\r\n * 常用意见过滤\r\n */\r\nexport class CommonCommentFilter {\r\n    /**\r\n     * 类型\r\n     */\r\n    type?: string;\r\n\r\n}"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","TaskService","getUsersByIds","ids","_this","forkJoin","map","id","httpSvc","get","getWorkItemActions","workItemId","complete","context","post","completeSimulate","getDestinationScope","action","getSimulationAssigneeInfo","nodeId","addSign","readTask","getTaskFormInfo","subject","Subject","cacheCode","taskForm","localStorage","getItem","setTimeout","JSON","parse","subscribe","re","setItem","stringify","asObservable","getAssigneeInfo","taskId","getOrganizationScope","actionCode","getTaskByProcInstId","procInstId","state","getTaskByWorkItemId","assignNextUsersByWorkItemId","assigneesPa","retrieve","transfer","transferContext","comment","commentContext","claim","unClaim","Message","message","show","safeHtml","startProcess","payload","startProcessSimulate","cancelSubmit","param","newId","S4","Math","random","toString","substring","getCommentList","filter","url","type","addComment","deleteComment","delete","getTaskCenterConfigByCode","code","ownerType","ownerId","getAllTaskCenterConfig","todayCode","getCurrentDateString","configStr","removeConfig","getTaskCategoryCenterConfig","categoryId","getAllUserConfig","addUserConfig","currentValue","list","item","find","l","configCode","getUserAvatar","userId","todayUserCode","avatarStr","date","Date","getFullYear","getMonth","getDate","key","todayKey","indexOf","removeItem","uploadAttachment","files","put","deleteAttachment","fileDeleteEntity","createNM","replace","c","getUserInfo","getUserSignId","signId","result","sign","a","lastModifiedTime","reduce","uploadSignature","gspDocUploadEntity","header","setHeader","body","responseType","request","createItem","attachmentInfo","pos","fileName","lastIndexOf","toLowerCase","subjectRegister","subjectCode","token","gspframeworkService","rtf","broadcast","funcId","subjectRemove","subjectNotify","subjectToken","notify","subjectResponse","observerToken","handler","response","urgeHandleSimulate","urgeHandle","batchVerifySigned","getWfUserHelpConfig","year","month","day","getAdhocConfig","adhocAssignee","cancelConsult","isInSuite","frameWorkService","extendMethod","getExtObj","iGIX4inSuiteMode","getBytesLength","str","getTopWindow","curWin","window","self","location","origin","parent","isRTFTopWin","handleErrorLevel","errorMessage","exceptionMsg","detail","innerMessage","bsModalRef","status","Detail","showMaxButton","buttons","text","cls","handle","close","width","height","exception","copyButton","onClick","copyToClipboard","content","showMiniNotify","windowRef","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","appendChild","select","execCommand","ex","console","warn","removeChild","Injectable","HttpService","MessagerService","tslib_1.__extends","TaskAction","translate","zh-CHS","static","assignee","noAssignee","columnName","name","department","title","inputLabel","inputHolder","footOk","footCancel","selectUser","hideComment","success","cueWords","successPass","inputOpinion","selectNode","processor","attachmentsRequired","signatureRequired","assignUser","operateSuccess","commonCommentTooLong","task","selectPlaceholder","passComment","processAlone","urgeText","backNodeText","selectProcessor","notFoundBill","nextNodeText","assignText","noUser","noTask","commentTooLong","activityName","receiver","urgeComment","noUrgeUsers","noUrgeSubject","noUrgeContent","person","priority","selectPriority","selectProcess","submitSuccess","submitFailed","cancelSubmitSuccess","cancelSubmitFailed","dataIdIsNull","dataIdIsEmpty","bizDefKeyIsNull","row","failed","node","cancelSubmitInfo","procDef","processTowards","otherNodesAssign","batchSubmit","single","selected","time","second","batchStartProcess","validationFailed","add","save","cancel","order","manage","attachmentUpload","repeatFile","operate","confirm","clickToAdd","public","private","messageSubject","messageContent","tooLongTips","attachment","tips","signature","reset","ok","upload","dialogTitle","note1","note2","note3","disable","download","view","allowSignToSign","multiInstanceType","parallel","preempt","sequential","backWardConfig","sequence","backToMe","backToCurrentNode","allowResubmitToThisNode","en","zh-CHT","I18nService","getValue","langData","split","obj","defaultLang","CompleteContext","Addendum","VerifySigned","WorkItemExecuteParam","CounterSignParam","UrgeUser","BatchVerifySignedContext","UrgeHandleComponent","ngOnInit","Component","args","selector","template","Input","placeholder","showMessageSubject","subjectEditable","contentEditable","Preempt","Parallel","Sequential","AddSignPayload","showDialog","ActionBaseImplComponent","TaskExecuteComponent","ngOnDestroy","actionToken","taskService","simulateToken","ngAfterViewInit","load","loadingService","configList","ConfigCode","if_store_comment","backComment","language","pass","back","actionEntity","defaultComment","wfCacheComment","ActionOrigin","TaskForm","initFormEvent","billMethodConfigs","UrgeHandleSimulateContext","processInstanceId","addMessageListener","addEventListener","eventHandler","func","setTask","sourceId","wfContext","processCategoryId","selectedPriority","setTaskList","taskList","dialogHeight","batchSecond","ceil","setAction","SimulateSubject","simulate","batchSimulate","gspWfEventService","register","formObject","ifRegistered","dataChanged","beforeCompleteSubmit","passPreActions","executionTime","sort","x","y","sortOrder","executeFormActions","completeSubmit","formActions","formAction","data","isClose","Error","shift","sendMessage","assignSimulate","defaultSubjectNext","transferSimulate","addSignSimulate","addSignFrontSimulate","notifySimulate","ifShowCommentToMySelf","ifSelectUser","selectUserText","i18nService","singleSelect","dialogHeightBase","submit","assignSubmit","claimSubmit","unClaimSubmit","retrieveSubmit","transferSubmit","addSignSubmit","addSignFrontSubmit","commentSubmit","notifySubmit","readSubmit","urgeHandleSubmit","cancelConsultSubmit","tasks","batchReadTaskSubmit","batchRetrieveSubmit","batchClaimSubmit","batchUnclaimSubmit","batchTransferSubmit","batchCompleteSubmit","filterNum","BehaviorSubject","successSubmit","MAX_COMMENT_LENGTH","warning","noActionTasks","t","actions","findIndex","noActionTasks_1","tslib_1.__values","noActionTasks_1_1","showBatchSubmitInfo","actTasks_1","some","executeBatchEvent","preEvents","batch","batchVerifySignedContext","passTasks","backTasks","backTasks_1","backTasks_1_1","batchVerifySubmit","postEvents","successHandleTasks","that_1","verifyTasks","parameters","verifyTasksNum","caEvent","on","signedMsgOverToken","signedData","cert","gspCA","getCurCert","verifySigned","certBase64Info","getCertBase64","msg","signedmsg","useCase","batchComplete","otherTasks","getSignedMsg","successNum","failedNum","errorNum","tasks_1","tasks_1_1","conclusionValue","this_1","addendum","needInteraction","successNum_1","errorNum_1","load_1","forEach","successNum_2","errorNum_2","load_2","successNum_3","errorNum_3","load_3","successNum_4","errorNum_4","load_4","successNum_5","errorNum_5","load_5","selectedUsers","events","entities","event_1","func_1","injector","eventImpl","System","import","getTime","then","moduleFactories","moduleRef","values","instance","apply","preEventResult","simulateSubject","ifAssignUser","enablePriority","info","assignInfos","selectedAssignees","assigneeInfo","assignees","user","activityDefinitionName","activityDefinitionId","dependency","anonymous","anonymousText","resolved","showSignToSign","originMultiInstType","organization","orgId","withAllOrg","includeChildren","orgList","ifSelectNode","ifUrgeType","commentPlaceHolder","showCommonComment","showAttachment","showUrgeMessageSubject","showSign","urgeUsers","urgeHandleResponse","urgeMessageSubject","urgeInfos","urgeMessageContent","addReminder","assignInfo","AssigneeInfo","orgName","assigneeUsers","selectAssignee","multiSelect","load_6","selectNodeText","defaultIndex","clearSimulateResult","selectTargetAble","dynamicBackWardRuleConfig","showBackWardConfig","dynamicBackWardRuleAble","displayPlaceholder","resubmitEffect","simulationPaths","destNodes","path","nodeInfoList","join","default","selectedNodeId","nodeDefaultValue","setAssignInfo","startsWith","setOtherAssignInfo","otherAssignInfos","tmpOtherAssignInfos","otherAssignNodes","originOtherAssignInfos","setOtherAssignInfoAgain","assigneeIds","submitResult","retrieveContext","submitDisable","load_7","signAssignees","showMultiInstanceType","curMultiInstType","counterSignRule","completedRule","allowSignToSIgn","load_8","urgeHandleComponent","UrgeHandleContext","nextFlowNodes","dynamicBackWardRule","nodes","nextFlowNode","completeTask","completeContext","attachmentNecessary","entity","certificationNecessary","commentNecessary","verifySignature","taskComplete","executeFormActionsAfterCompleteTask","postActions","executePostFormActions","hander","afterConfirmForTransfer","selectedUserNgModule","MultiInstanceType","getSubject","selectNodeChange","load_9","index","every","nodeIds","selectNodeClear","afterConfirmForAssign","afterConfirmForOtherAssign","addAttachment","addSignature","waterMarking","addPadding","iframeWindow","iframe","nativeElement","contentWindow","target","command","method","methodParameters","postMessage","POST_MESSAGE_TARGET","that","cr","TaskCenter","TaskEntity","handlerService","execute","NotifyService","WfTaskHandlerService","LoadingService","Injector","ViewChild","SysFarrisLookupComponent","HostBinding","_super","notGetCurrentUser","notGetStopUser","orderField","bindingData","textAreaHeight","groupIcon","showTips","enable","backWardRules","WfContext","event","removeEventListener","processDefinitionId","processDefinitionName","logTime","processCategory","ProcessSelectorComponent","defineProperty","parameter","showButtons","setParam","processDefinitionKey","bizDefKey","dataModelId","dataId","startUserId","selectedProcessId_1","priorityInfo","destProcesses","procDefs","process","procDefId","procDefName","version","selectedProcessId","setNextNode","processDefaultValue","getSelectedProcessCache","getDestNodes","processPlaceholder","selectProcessChange","nodeCombo","onClear","nodePlaceholder","clearAssignInfos","StartProcessPayload","payload_1","nodeNames","FlowNodeInfo","startProcessSubmit","openFromIframe","messager","subjectWithResponse","messageAfterSubmit","gspWfService","MessageType","handleSubmitMessage","setSelectedProcessCache","selectProcessClear","afterConfirm","otherAssignInfosAfterConfirm","subjectCancel","getSubjectWithResponse","getSubjectCancel","browserCache","selectedProcessList","undefined","SelectedProcessItem","browserCache_1","StartProcessCache","curLanguage","CommonComment","newEntity","CommentManageComponent","commentColumns","field","editor","EditorTypes","TEXTBOX","options","commentTypeCell","commentOperateCell","loadComments","commentList","originCommentList","addCommonComment","dataGrid","editCell","rowData","loadData","saveCommonComment","endCellEdit","confirmSubject","clickCancel","cancelSubject","getConfirmSUbject","getCancelSubject","beforeEdit","of","otherParams","logService","showByProcInstId","flowchartService","viewFlowchartByProcInstIdAndDataId","refBizId","openApp","assignByInfo","compRef","resolver","resolveComponentFactory","modalConfig","dialog","modalService","formInfoLoading","loading","formInfo","appType","appId","appEntrance","tabId","isNewTab","Map","formType","set","taskFilter","entityParams","queryStringParams","openMenu","menuTitle","openMenuLoading_1","iGIXMenuOpen","frameworkService","openMenu$","refreshActions","pipe","switchMap","actionList","executeByProcInstId","executeByWorkItemId","configLoad","OwnerType","simulateLoad_1","executeLoad_1","showStartProcessDialog","withResponse","opened","changeDetectorRef","detectChanges","submitWithBizDefKey","cancelSubmitWithDataId","cancelSubmitPayload","CancelSubmitPayload","batchSubmitWithBizDefKey","dataIds","startPayload","batchSubmitNum","batchSubmitHelpFunction","startPayload_1","variables","batchCancelSubmitWithDataId","batchCancelNum","batchCancelHelpFunction","cancelPayload","showBatchCancelSubmitInfo","childSubmit","parentDataId","childDataId","startProcessPayload","childCancelSubmit","childBatchSubmit","childDataIds","childBatchCancelSubmit","num","config","zh_CHS","zh_CHT","processSimulate","viewFlowChartByDataId","viewFlowChartWithForecast","ForecastProcessPayload","viewProcess","viewApprovalLog","showApprovalLog","getCommonComments","showCommentManageDialog","WfApprovalLogsService","WFFlowchartService","ComponentFactoryResolver","BsModalService","FrameworkService","ApplicationRef","appRef","TranslatePipe","transform","defaultVal","Pipe","decorators","Optional","TaskAssigninfoComponent","readonly","includeJobLeavers","includeStopUser","personnelOrderField","userTypeMode","AssigneeInfoComponent","disabled","assignUserNgModule","_assigneeInfo","defaultParticipant","allowGlobalAssign","organizationScope","_selectedAssignees","clickAssignUser","isUseNewSelectUserHelp","extendUserHelp","extendUserHelpUrl","showFarrisUserHelpFromWindow","showExtendUserHelp","showHelp","userList","emit","cd","UserHelpParam","filterId","showOrgTab","farrisUnSelectedUserIds","unSelectedUserIds","showTabIds","activeTabId","includeCurrentUser","enableChildHierarchy","userIds","top","CommonPersonnelSelect","component","farrisDialogShowInWf","pscChange","FARRIS_PSC","selectionsChange","assignUserClear","ChangeDetectorRef","Output","ifShowBlank","ifHorizontal","EventEmitter","userHelpConfig","isExtend","ThrottleClickDirective","throttleTime","THROTTLE_TIME","click","throttleClick","unsubscribe","evt","Directive","HostListener","GspDocUploadEntity","GspDocMetadata","TaskCommentComponent","enableSign","editSign","ifShowAttachment","ifShowSign","ifEnableSign","ifCanEditSign","getUserSign","curUserId","_value","v","onModelChange","commentManageComp","commentDialog","showCommentDialog","dropDownEl","writeValue","registerOnChange","fn","registerOnTouched","onModelTouched","buttonClick","isRepeat","uploadDialog","uploadFile","_c","_d","_e","attachmentList","_f","messageService","FileUploadEntity","rootId","metadataIdList","metadataId","attachmentDelete","gspDocDeleteEntity","mode","splice","attachmentPreview","tabName","viewOptions","showHeader","showPaging","showThumbnails","showDownload","showSearch","showZoom","showPrint","showSecondaryToolBar","imageUrl","showSignDialog","signDialog","clickToDeleteImage","signatureImage","clickToUseSign","ifUseImg","ifUseSign","canvas","signaturePad","canvasDiv","querySelector","clickToUploadImg","farrisAvatar","clickToConfirm","image","isDraw","ifUploadImg","tmpSignatureImage","uploadSignatureImg","originSignId","clickToReset","clickToCancel","imgChange","base64","fileContent","filePath","metadata","docType","downloadService","getDownloadUrl","valueChange","isShowCommonTips","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","UploadDialogService","DownloadService","btnHover","commentHover","attachmentHover","signHover","NgModule","declarations","imports","CommonModule","FormsModule","DataTableModule","FarrisDialogModule","PaginationModule","NotifyModule","ComboListModule","WfApprovalLogsModule","UiFlowchartModule","CommonSharedModule","LoadingModule","TaskImplApiModule","MessagerModule","InputGroupModule","WfSignModule","AvatarModule","FDropdownDirectiveTypeModule","DatagridModule","DatagridEditorsModule","forRoot","EditorProviders","FarrisFormsModule","SwitchModule","FarrisSectionModule","SessionService","CacheService","FrmEventBus","FuncsService","exports","entryComponents","WfTaskHandlerModule"],"mappings":"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"}