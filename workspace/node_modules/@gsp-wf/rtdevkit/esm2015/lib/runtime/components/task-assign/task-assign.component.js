/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { TaskService } from '../../services/task.service';
import { UserService } from '../../services/user.service';
import { UserHelperComponent } from '../user-helper/user-helper.component';
import { NotifyService } from '@farris/ui-notify';
import { I18nService } from '../../services/i18n.service';
export class TaskAssignComponent extends UserHelperComponent {
    //是否允许全员指派
    /**
     * @param {?} taskSvc
     * @param {?} userSvc
     * @param {?} notify
     * @param {?} i18nService
     */
    constructor(taskSvc, userSvc, notify, i18nService) {
        super(i18nService, userSvc);
        this.taskSvc = taskSvc;
        this.userSvc = userSvc;
        this.notify = notify;
        this.i18nService = i18nService;
        this.completed = new EventEmitter();
        this.paginationOptions.id = 'WF-TaskAss-DataTable-Pagination';
        // this.title = this.i18nService.getValue('static.assignee.title');
    }
    // title = '请选择指派用户';
    /**
     * @param {?} assigneeInfos
     * @return {?}
     */
    set assigneeInfo(assigneeInfos) {
        if (assigneeInfos && assigneeInfos.length > 0) {
            this.assignees = assigneeInfos;
            this.showModal(true);
            this.execute();
        }
        else {
            this.showModal(false);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    execute() {
        this.assigneesPa = {
            workItemId: this.assignees[0].workItemId,
            assigneeIds: [],
            comment: ''
        };
        this.singleSelect = !this.assignees[0].multiSelect;
        this.allowGlobalAssign = this.assignees[0].allowGlobalAssign;
        if (this.assignees[0].assigneeUsers && this.assignees[0].assigneeUsers.length) {
            this.getAssignedUsers();
        }
        else {
            if (this.allowGlobalAssign) {
                this.getUserList();
            }
        }
    }
    /**
     * @return {?}
     */
    getAssignedUsers() {
        this.allUserData = this.assignees[0].assigneeUsers.map((/**
         * @param {?} user
         * @return {?}
         */
        user => {
            return {
                ID: user.id,
                Name: user.name,
                Code: user.code,
                OrgId: user.orgId,
                OrgName: user.orgNamePath
            };
        }));
        this.userListData = this.allUserData;
    }
    /**
     * @return {?}
     */
    handleOk() {
        this.selectedUsers = this.singleSelect ? [this.userTable.selections] : this.userTable.selections;
        if (!this.selectedUsers || this.selectedUsers.length < 1) {
            this.notify.warning(this.i18nService.getValue('static.assignee.noAssignee'));
            return;
        }
        this.assignees.shift();
        this.assigneesPa.assigneeIds = this.selectedUsers.map((/**
         * @param {?} user
         * @return {?}
         */
        user => user.ID));
        // 检查指定是否完成，如果完成提交，否则继续指派任务
        if (this.assignees.length > 0) {
            this.userListData = []; // clear source
            this.execute();
        }
        else {
            this.taskSvc.assignNextUsersByWorkItemId(this.assigneesPa).subscribe((/**
             * @return {?}
             */
            () => {
                this.showModal(false);
                this.notify.success(this.i18nService.getValue('static.assignee.successAssign'));
                this.completed.emit(true);
            }), (/**
             * @param {?} error
             * @return {?}
             */
            error => {
                if (error && error.error && error.error.Message) {
                    this.notify.error(error.error.Message);
                }
            }));
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    search(event) {
        if (!this.assignees[0].assigneeUsers || !this.assignees[0].assigneeUsers.length) {
            super.search(event);
        }
        else {
            this.searchValue = event.value;
            if (this.searchValue) {
                this.userListData = this.allUserData.filter((/**
                 * @param {?} user
                 * @return {?}
                 */
                user => (user.Name) && user.Name.includes(this.searchValue) ||
                    (user.Code) && user.Code.includes(this.searchValue)));
            }
            else {
                this.getAssignedUsers();
            }
        }
    }
    /**
     * @protected
     * @param {?} show
     * @return {?}
     */
    showModal(show) {
        if (show) {
            this.userDialog.show();
        }
        else {
            // 临时处理方案
            if (this.userDialog.beforeClose) {
                this.userDialog.close();
            }
        }
    }
    /**
     * @param {?} pageSize
     * @return {?}
     */
    onPageSizeChange(pageSize) {
        this.paginationOptions.itemsPerPage = pageSize;
        if (this.allowGlobalAssign) {
            this.getUserList();
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onPageChange(event) {
        this.paginationOptions.currentPage = event.pageIndex;
        if (this.allowGlobalAssign) {
            this.getUserList();
        }
    }
}
TaskAssignComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf-task-assign',
                template: "<farris-dialog #allUserDialog [buttons]=\"buttonRef\" [width]=\"850\" [height]=\"520\" [title]=\"'\u7CFB\u7EDF\u7528\u6237'\">\r\n  <div class=\"d-flex flex-column my-data-grid h-100\" style=\"padding: 0 14px;\">\r\n    <div class=\"flex-auto\" style=\"position:relative;\">\r\n      <farris-datatable #allUserTable [columns]=\"columns\" [data]=\"userListData | paginate: paginationOptions\"\r\n        [showFilterBar]='true' [singleSelect]=\"singleSelect\" [idField]=\"'ID'\" [remote]=\"'server'\" (search)=\"search($event)\"\r\n        [pagination]='false'></farris-datatable>\r\n    </div>\r\n    <div style=\"position:relative;\">\r\n      <pagination-controls [id]=\"paginationOptions.id\" [previousLabel]=\"' '\" [nextLabel]=\"' '\"\r\n        (pageChange)=\"onPageChange($event)\" (pageSizeChange)=\"onPageSizeChange($event)\">\r\n      </pagination-controls>\r\n    </div>\r\n  </div>\r\n</farris-dialog>\r\n<ng-template #buttonRef>\r\n  <button class=\"btn btn-sm btn-primary px-3\" (click)=\"handleOk()\">\u786E\u5B9A</button>\r\n  <button class=\"btn btn-sm btn-default px-3\" (click)=\"handleCancel()\">\u53D6\u6D88</button>\r\n</ng-template>",
                styles: [".my-data-grid .filter-row .search-fields{padding-left:0!important}.my-data-grid .filter-row .search-text{padding-right:0!important}"]
            }] }
];
/** @nocollapse */
TaskAssignComponent.ctorParameters = () => [
    { type: TaskService },
    { type: UserService },
    { type: NotifyService },
    { type: I18nService }
];
TaskAssignComponent.propDecorators = {
    assigneeInfo: [{ type: Input }],
    completed: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TaskAssignComponent.prototype.completed;
    /**
     * @type {?}
     * @private
     */
    TaskAssignComponent.prototype.allUserData;
    /**
     * @type {?}
     * @private
     */
    TaskAssignComponent.prototype.assignees;
    /**
     * @type {?}
     * @private
     */
    TaskAssignComponent.prototype.assigneesPa;
    /**
     * @type {?}
     * @private
     */
    TaskAssignComponent.prototype.allowGlobalAssign;
    /** @type {?} */
    TaskAssignComponent.prototype.taskSvc;
    /**
     * @type {?}
     * @protected
     */
    TaskAssignComponent.prototype.userSvc;
    /**
     * @type {?}
     * @protected
     */
    TaskAssignComponent.prototype.notify;
    /**
     * @type {?}
     * @protected
     */
    TaskAssignComponent.prototype.i18nService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1hc3NpZ24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi9ydGRldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9ydW50aW1lL2NvbXBvbmVudHMvdGFzay1hc3NpZ24vdGFzay1hc3NpZ24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBRTFGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWxELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQVExRCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsbUJBQW1COzs7Ozs7OztJQTZCMUQsWUFDUyxPQUFvQixFQUNqQixPQUFvQixFQUNwQixNQUFxQixFQUNyQixXQUF3QjtRQUVsQyxLQUFLLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBTHJCLFlBQU8sR0FBUCxPQUFPLENBQWE7UUFDakIsWUFBTyxHQUFQLE9BQU8sQ0FBYTtRQUNwQixXQUFNLEdBQU4sTUFBTSxDQUFlO1FBQ3JCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBakJwQyxjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQW9CdEMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsR0FBRyxpQ0FBaUMsQ0FBQztRQUM5RCxtRUFBbUU7SUFDckUsQ0FBQzs7Ozs7O0lBbENELElBQ0ksWUFBWSxDQUFDLGFBQTZCO1FBQzVDLElBQUksYUFBYSxJQUFJLGFBQWEsQ0FBQyxNQUFNLEdBQUcs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O0lBQzlCLHFDQUErQjs7Ozs7SUFDL0IsMENBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFzc2lnbmVlSW5mbyB9IGZyb20gJy4uLy4uLy4uL2VudGl0eSc7XHJcbmltcG9ydCB7IFRhc2tTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdGFzay5zZXJ2aWNlJztcclxuaW1wb3J0IHsgVXNlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy91c2VyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBVc2VySGVscGVyQ29tcG9uZW50IH0gZnJvbSAnLi4vdXNlci1oZWxwZXIvdXNlci1oZWxwZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTm90aWZ5U2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBJMThuU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2kxOG4uc2VydmljZSc7XHJcbmltcG9ydCB7IEFzc2lnbmVlSW5mb0J5V29ya0l0ZW1JZFBhcmFtZXRlciB9IGZyb20gJy4uLy4uLy4uL2VudGl0eS9jb21wbGV0ZS1yZXNwb25zZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3dmLXRhc2stYXNzaWduJyxcclxuICB0ZW1wbGF0ZVVybDogJy4uL3VzZXItaGVscGVyL3VzZXItaGVscGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi90YXNrLWFzc2lnbi5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFRhc2tBc3NpZ25Db21wb25lbnQgZXh0ZW5kcyBVc2VySGVscGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgLy8gdGl0bGUgPSAn6K+36YCJ5oup5oyH5rS+55So5oi3JztcclxuXHJcbiAgQElucHV0KClcclxuICBzZXQgYXNzaWduZWVJbmZvKGFzc2lnbmVlSW5mb3M6IEFzc2lnbmVlSW5mb1tdKSB7XHJcbiAgICBpZiAoYXNzaWduZWVJbmZvcyAmJiBhc3NpZ25lZUluZm9zLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy5hc3NpZ25lZXMgPSBhc3NpZ25lZUluZm9zO1xyXG4gICAgICB0aGlzLnNob3dNb2RhbCh0cnVlKTtcclxuICAgICAgdGhpcy5leGVjdXRlKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnNob3dNb2RhbChmYWxzZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAT3V0cHV0KClcclxuICBjb21wbGV0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XHJcblxyXG4gIHByaXZhdGUgYWxsVXNlckRhdGE6IHtcclxuICAgIElEOiBzdHJpbmcsXHJcbiAgICBDb2RlOiBzdHJpbmcsXHJcbiAgICBOYW1lOiBzdHJpbmcsXHJcbiAgICBPcmdJZDogc3RyaW5nLFxyXG4gICAgT3JnTmFtZTogc3RyaW5nXHJcbiAgfVtdO1xyXG4gIHByaXZhdGUgYXNzaWduZWVzOiBBc3NpZ25lZUluZm9bXTtcclxuICBwcml2YXRlIGFzc2lnbmVlc1BhOiBBc3NpZ25lZUluZm9CeVdvcmtJdGVtSWRQYXJhbWV0ZXI7XHJcbiAgcHJpdmF0ZSBhbGxvd0dsb2JhbEFzc2lnbjogYm9vbGVhbjsvL+aYr+WQpuWFgeiuuOWFqOWRmOaMh+a0vlxyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyB0YXNrU3ZjOiBUYXNrU2VydmljZSxcclxuICAgIHByb3RlY3RlZCB1c2VyU3ZjOiBVc2VyU2VydmljZSxcclxuICAgIHByb3RlY3RlZCBub3RpZnk6IE5vdGlmeVNlcnZpY2UsXHJcbiAgICBwcm90ZWN0ZWQgaTE4blNlcnZpY2U6IEkxOG5TZXJ2aWNlXHJcbiAgKSB7XHJcbiAgICBzdXBlcihpMThuU2VydmljZSwgdXNlclN2Yyk7XHJcbiAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zLmlkID0gJ1dGLVRhc2tBc3MtRGF0YVRhYmxlLVBhZ2luYXRpb24nO1xyXG4gICAgLy8gdGhpcy50aXRsZSA9IHRoaXMuaTE4blNlcnZpY2UuZ2V0VmFsdWUoJ3N0YXRpYy5hc3NpZ25lZS50aXRsZScpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgfVxyXG5cclxuICBleGVjdXRlKCkgeyBcclxuICAgIHRoaXMuYXNzaWduZWVzUGEgPSB7XHJcbiAgICAgIHdvcmtJdGVtSWQ6IHRoaXMuYXNzaWduZWVzWzBdLndvcmtJdGVtSWQsXHJcbiAgICAgIGFzc2lnbmVlSWRzOiBbXSxcclxuICAgICAgY29tbWVudDogJydcclxuICAgIH07XHJcbiAgICB0aGlzLnNpbmdsZVNlbGVjdCA9ICF0aGlzLmFzc2lnbmVlc1swXS5tdWx0aVNlbGVjdDtcclxuICAgIHRoaXMuYWxsb3dHbG9iYWxBc3NpZ24gPSB0aGlzLmFzc2lnbmVlc1swXS5hbGxvd0dsb2JhbEFzc2lnbjsgXHJcbiAgICBpZih0aGlzLmFzc2lnbmVlc1swXS5hc3NpZ25lZVVzZXJzICYmIHRoaXMuYXNzaWduZWVzWzBdLmFzc2lnbmVlVXNlcnMubGVuZ3RoKSB7XHJcbiAgICAgIHRoaXMuZ2V0QXNzaWduZWRVc2VycygpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYodGhpcy5hbGxvd0dsb2JhbEFzc2lnbikge1xyXG4gICAgICAgIHRoaXMuZ2V0VXNlckxpc3QoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgfVxyXG5cclxuICBnZXRBc3NpZ25lZFVzZXJzKCkge1xyXG4gICAgdGhpcy5hbGxVc2VyRGF0YSA9IHRoaXMuYXNzaWduZWVzWzBdLmFzc2lnbmVlVXNlcnMubWFwKCB1c2VyID0+IHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBJRDogdXNlci5pZCxcclxuICAgICAgICBOYW1lOiB1c2VyLm5hbWUsXHJcbiAgICAgICAgQ29kZTogdXNlci5jb2RlLFxyXG4gICAgICAgIE9yZ0lkOiB1c2VyLm9yZ0lkLFxyXG4gICAgICAgIE9yZ05hbWU6IHVzZXIub3JnTmFtZVBhdGhcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy51c2VyTGlzdERhdGEgPSB0aGlzLmFsbFVzZXJEYXRhO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlT2soKSB7XHJcbiAgICB0aGlzLnNlbGVjdGVkVXNlcnMgPSB0aGlzLnNpbmdsZVNlbGVjdCA/IFt0aGlzLnVzZXJUYWJsZS5zZWxlY3Rpb25zXSA6IHRoaXMudXNlclRhYmxlLnNlbGVjdGlvbnM7XHJcblxyXG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkVXNlcnMgfHwgdGhpcy5zZWxlY3RlZFVzZXJzLmxlbmd0aCA8IDEpIHtcclxuICAgICAgdGhpcy5ub3RpZnkud2FybmluZyh0aGlzLmkxOG5TZXJ2aWNlLmdldFZhbHVlKCdzdGF0aWMuYXNzaWduZWUubm9Bc3NpZ25lZScpKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuYXNzaWduZWVzLnNoaWZ0KCk7XHJcbiAgICB0aGlzLmFzc2lnbmVlc1BhLmFzc2lnbmVlSWRzID0gdGhpcy5zZWxlY3RlZFVzZXJzLm1hcCh1c2VyID0+IHVzZXIuSUQpO1xyXG5cclxuICAgIC8vIOajgOafpeaMh+WumuaYr+WQpuWujOaIkO+8jOWmguaenOWujOaIkOaPkOS6pO+8jOWQpuWImee7p+e7reaMh+a0vuS7u+WKoVxyXG4gICAgaWYgKHRoaXMuYXNzaWduZWVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy51c2VyTGlzdERhdGEgPSBbXTsgLy8gY2xlYXIgc291cmNlXHJcbiAgICAgIHRoaXMuZXhlY3V0ZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy50YXNrU3ZjLmFzc2lnbk5leHRVc2Vyc0J5V29ya0l0ZW1JZCh0aGlzLmFzc2lnbmVlc1BhKS5zdWJzY3JpYmUoKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2hvd01vZGFsKGZhbHNlKTtcclxuICAgICAgICB0aGlzLm5vdGlmeS5zdWNjZXNzKHRoaXMuaTE4blNlcnZpY2UuZ2V0VmFsdWUoJ3N0YXRpYy5hc3NpZ25lZS5zdWNjZXNzQXNzaWduJykpO1xyXG4gICAgICAgIHRoaXMuY29tcGxldGVkLmVtaXQodHJ1ZSk7XHJcbiAgICAgIH0sIGVycm9yID0+IHtcclxuICAgICAgICBpZihlcnJvciAmJiBlcnJvci5lcnJvciAmJiBlcnJvci5lcnJvci5NZXNzYWdlKSB7XHJcbiAgICAgICAgICB0aGlzLm5vdGlmeS5lcnJvcihlcnJvci5lcnJvci5NZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2VhcmNoKGV2ZW50KSB7XHJcbiAgICBpZighdGhpcy5hc3NpZ25lZXNbMF0uYXNzaWduZWVVc2VycyB8fCAhdGhpcy5hc3NpZ25lZXNbMF0uYXNzaWduZWVVc2Vycy5sZW5ndGgpIHtcclxuICAgICAgc3VwZXIuc2VhcmNoKGV2ZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuc2VhcmNoVmFsdWUgPSBldmVudC52YWx1ZTtcclxuICAgICAgaWYodGhpcy5zZWFyY2hWYWx1ZSkge1xyXG4gICAgICAgIHRoaXMudXNlckxpc3REYXRhID0gdGhpcy5hbGxVc2VyRGF0YS5maWx0ZXIodXNlciA9PiBcclxuICAgICAgICAgICh1c2VyLk5hbWUpICYmIHVzZXIuTmFtZS5pbmNsdWRlcyh0aGlzLnNlYXJjaFZhbHVlKSB8fFxyXG4gICAgICAgICAgKHVzZXIuQ29kZSkgJiYgdXNlci5Db2RlLmluY2x1ZGVzKHRoaXMuc2VhcmNoVmFsdWUpXHJcbiAgICAgICAgKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLmdldEFzc2lnbmVkVXNlcnMoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBwcm90ZWN0ZWQgc2hvd01vZGFsKHNob3c6IGJvb2xlYW4pOiB2b2lkIHtcclxuICAgIGlmIChzaG93KSB7XHJcbiAgICAgIHRoaXMudXNlckRpYWxvZy5zaG93KCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyDkuLTml7blpITnkIbmlrnmoYhcclxuICAgICAgaWYgKHRoaXMudXNlckRpYWxvZy5iZWZvcmVDbG9zZSkge1xyXG4gICAgICAgIHRoaXMudXNlckRpYWxvZy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvblBhZ2VTaXplQ2hhbmdlKHBhZ2VTaXplKSB7XHJcbiAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zLml0ZW1zUGVyUGFnZSA9IHBhZ2VTaXplO1xyXG4gICAgaWYodGhpcy5hbGxvd0dsb2JhbEFzc2lnbikge1xyXG4gICAgICB0aGlzLmdldFVzZXJMaXN0KCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvblBhZ2VDaGFuZ2UoZXZlbnQpIHtcclxuICAgIHRoaXMucGFnaW5hdGlvbk9wdGlvbnMuY3VycmVudFBhZ2UgPSBldmVudC5wYWdlSW5kZXg7XHJcbiAgICBpZih0aGlzLmFsbG93R2xvYmFsQXNzaWduKSB7XHJcbiAgICAgIHRoaXMuZ2V0VXNlckxpc3QoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19