/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Optional } from '@angular/core';
import { Subject } from 'rxjs';
import { MessagerService } from '@farris/ui-messager';
import { I18nService } from '../../runtime/services/i18n.service';
export class ProcessSelectorComponent {
    /**
     * @param {?} msgService
     * @param {?} i18nService
     */
    constructor(msgService, i18nService) {
        this.msgService = msgService;
        this.i18nService = i18nService;
        this.cls = 'farris-main-area flex-column';
        this.columns = [
            { title: this.i18nService ? this.i18nService.getValue('static.columnName.prcessName') : '流程名称', field: 'procDefName', width: 200 },
            { title: this.i18nService ? this.i18nService.getValue('static.columnName.version') : '版本', field: 'version', width: 100 }
        ];
        this.idField = 'procDefId';
        this.mySelection = [];
        this.subject = new Subject();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    btnOKClick() {
        if (this.mySelection.length < 1) {
            this.msgService.warning(this.i18nService ? this.i18nService.getValue('static.submit.noProcess') : '尚未选择流程定义，请了解。');
            return;
        }
        this.subject.next(this.mySelection[0]);
    }
    /**
     * @return {?}
     */
    btnCancelClick() {
        this.subject.next(null);
    }
    /**
     * @return {?}
     */
    subscribe() {
        return this.subject.asObservable();
    }
    /**
     * @param {?} data
     * @return {?}
     */
    onSelectionChange(data) {
        if (data && data.data) {
            this.mySelection = [data.data.procDefId];
        }
        else {
            this.mySelection = [];
        }
    }
}
ProcessSelectorComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf-process-selector',
                template: "<div style=\"background-color: white; overflow: auto;\">\r\n    <farris-datatable class=\"f-utils-fill\" [data]=\"gridData\" [idField]=\"idField\" [columns]=\"columns\" [pagination]=\"false\" [showFilterBar]='false'\r\n        [singleSelect]=\"true\" (selectedRow)=\"onSelectionChange($event)\" [fill]=\"true\" [height]=\"250\">\r\n    </farris-datatable>\r\n</div>\r\n<div class=\"modal-footer flex-shrink-0\">\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"btnOKClick()\">{{('static.footOk' | translate)?('static.footOk' | translate):'\u786E\u5B9A' }}</button>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"btnCancelClick()\">{{('static.footCancel' | translate)?('static.footCancel' | translate):'\u53D6\u6D88' }}</button>\r\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
ProcessSelectorComponent.ctorParameters = () => [
    { type: MessagerService },
    { type: I18nService, decorators: [{ type: Optional }] }
];
ProcessSelectorComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }]
};
if (false) {
    /** @type {?} */
    ProcessSelectorComponent.prototype.cls;
    /** @type {?} */
    ProcessSelectorComponent.prototype.gridData;
    /** @type {?} */
    ProcessSelectorComponent.prototype.columns;
    /** @type {?} */
    ProcessSelectorComponent.prototype.idField;
    /** @type {?} */
    ProcessSelectorComponent.prototype.mySelection;
    /**
     * @type {?}
     * @private
     */
    ProcessSelectorComponent.prototype.subject;
    /**
     * @type {?}
     * @private
     */
    ProcessSelectorComponent.prototype.msgService;
    /**
     * @type {?}
     * @private
     */
    ProcessSelectorComponent.prototype.i18nService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1zZWxlY3Rvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3J0ZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3N1Ym1pdC9wcm9jZXNzLXNlbGVjdG9yL3Byb2Nlc3Mtc2VsZWN0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUczQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBT2xFLE1BQU0sT0FBTyx3QkFBd0I7Ozs7O0lBWW5DLFlBQ1UsVUFBMkIsRUFDZixXQUF3QjtRQURwQyxlQUFVLEdBQVYsVUFBVSxDQUFpQjtRQUNmLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBWjlDLFFBQUcsR0FBRyw4QkFBOEIsQ0FBQztRQUdyQyxZQUFPLEdBQUc7WUFDUixFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFO1lBQ2xJLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLDJCQUEyQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUU7U0FBQyxDQUFDO1FBQzdILFlBQU8sR0FBRyxXQUFXLENBQUM7UUFDdEIsZ0JBQVcsR0FBYSxFQUFFLENBQUM7UUFFbkIsWUFBTyxHQUFHLElBQUksT0FBTyxFQUFVLENBQUM7SUFLeEMsQ0FBQzs7OztJQUVELFFBQVE7SUFDUixDQUFDOzs7O0lBRUQsVUFBVTtRQUNSLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQy9CLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQ25ILE9BQU87U0FDUjtRQUNELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN6QyxDQUFDOzs7O0lBQ0QsY0FBYztRQUNaLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFCLENBQUM7Ozs7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsSUFBSTtRQUNwQixJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ3JCLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQzFDO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztTQUN2QjtJQUNILENBQUM7OztZQS9DRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtnQkFDL0IsbXhCQUFnRDs7YUFFakQ7Ozs7WUFQUSxlQUFlO1lBQ2YsV0FBVyx1QkFxQmYsUUFBUTs7O2tCQWJWLFdBQVcsU0FBQyxPQUFPOzs7O0lBQXBCLHVDQUNxQzs7SUFFckMsNENBQThCOztJQUM5QiwyQ0FFNkg7O0lBQzdILDJDQUFzQjs7SUFDdEIsK0NBQTJCOzs7OztJQUUzQiwyQ0FBd0M7Ozs7O0lBRXRDLDhDQUFtQzs7Ozs7SUFDbkMsK0NBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFByb2Nlc3NEZWZpbml0aW9uIH0gZnJvbSAnLi4vLi4vZW50aXR5L3Byb2Nlc3NkZWZpbml0aW9uJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBJMThuU2VydmljZSB9IGZyb20gJy4uLy4uL3J1bnRpbWUvc2VydmljZXMvaTE4bi5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnd2YtcHJvY2Vzcy1zZWxlY3RvcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2Nlc3Mtc2VsZWN0b3IuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3Byb2Nlc3Mtc2VsZWN0b3IuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQcm9jZXNzU2VsZWN0b3JDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MnKVxyXG4gIGNscyA9ICdmYXJyaXMtbWFpbi1hcmVhIGZsZXgtY29sdW1uJztcclxuXHJcbiAgZ3JpZERhdGE6IFByb2Nlc3NEZWZpbml0aW9uW107XHJcbiAgY29sdW1ucyA9IFtcclxuICAgIHsgdGl0bGU6IHRoaXMuaTE4blNlcnZpY2UgPyB0aGlzLmkxOG5TZXJ2aWNlLmdldFZhbHVlKCdzdGF0aWMuY29sdW1uTmFtZS5wcmNlc3NOYW1lJykgOiAn5rWB56iL5ZCN56ewJywgZmllbGQ6ICdwcm9jRGVmTmFtZScsIHdpZHRoOiAyMDAgfSxcclxuICAgIHsgdGl0bGU6IHRoaXMuaTE4blNlcnZpY2UgPyB0aGlzLmkxOG5TZXJ2aWNlLmdldFZhbHVlKCdzdGF0aWMuY29sdW1uTmFtZS52ZXJzaW9uJykgOiAn54mI5pysJywgZmllbGQ6ICd2ZXJzaW9uJywgd2lkdGg6IDEwMCB9XTtcclxuICBpZEZpZWxkID0gJ3Byb2NEZWZJZCc7XHJcbiAgbXlTZWxlY3Rpb246IHN0cmluZ1tdID0gW107XHJcblxyXG4gIHByaXZhdGUgc3ViamVjdCA9IG5ldyBTdWJqZWN0PHN0cmluZz4oKTtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgbXNnU2VydmljZTogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBpMThuU2VydmljZTogSTE4blNlcnZpY2VcclxuICAgICkge1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgfVxyXG5cclxuICBidG5PS0NsaWNrKCkge1xyXG4gICAgaWYgKHRoaXMubXlTZWxlY3Rpb24ubGVuZ3RoIDwgMSkge1xyXG4gICAgICB0aGlzLm1zZ1NlcnZpY2Uud2FybmluZyh0aGlzLmkxOG5TZXJ2aWNlID8gdGhpcy5pMThuU2VydmljZS5nZXRWYWx1ZSgnc3RhdGljLnN1Ym1pdC5ub1Byb2Nlc3MnKSA6ICflsJrmnKrpgInmi6nmtYHnqIvlrprkuYnvvIzor7fkuobop6PjgIInKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zdWJqZWN0Lm5leHQodGhpcy5teVNlbGVjdGlvblswXSk7XHJcbiAgfVxyXG4gIGJ0bkNhbmNlbENsaWNrKCkge1xyXG4gICAgdGhpcy5zdWJqZWN0Lm5leHQobnVsbCk7XHJcbiAgfVxyXG5cclxuICBzdWJzY3JpYmUoKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcclxuICAgIHJldHVybiB0aGlzLnN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XHJcbiAgfVxyXG5cclxuICBvblNlbGVjdGlvbkNoYW5nZShkYXRhKSB7XHJcbiAgICBpZiAoZGF0YSAmJiBkYXRhLmRhdGEpIHtcclxuICAgICAgdGhpcy5teVNlbGVjdGlvbiA9IFtkYXRhLmRhdGEucHJvY0RlZklkXTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMubXlTZWxlY3Rpb24gPSBbXTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==