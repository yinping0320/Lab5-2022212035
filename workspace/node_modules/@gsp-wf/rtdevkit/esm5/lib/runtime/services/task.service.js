/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
var TaskService = /** @class */ (function () {
    function TaskService(httpSvc) {
        this.httpSvc = httpSvc;
    }
    /**
     * 获取工作项操作列表
     */
    /**
     * 获取工作项操作列表
     * @param {?} workItemId
     * @return {?}
     */
    TaskService.prototype.getWorkItemActions = /**
     * 获取工作项操作列表
     * @param {?} workItemId
     * @return {?}
     */
    function (workItemId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/actions";
        return this.httpSvc.get(url);
    };
    /**
     * 执行审批操作
     * @param taskId 任务Id
     * @param context 执行审批上下文
     */
    /**
     * 执行审批操作
     * @param {?} taskId 任务Id
     * @param {?} context 执行审批上下文
     * @return {?}
     */
    TaskService.prototype.excuteTask = /**
     * 执行审批操作
     * @param {?} taskId 任务Id
     * @param {?} context 执行审批上下文
     * @return {?}
     */
    function (taskId, context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/complete";
        context.workItemId = taskId;
        /** @type {?} */
        var options = {
            excuteParam: context
        };
        return this.httpSvc.post(url, context);
    };
    /**
     * 获取跳转活动信息
     * @param workItemId 工作项Id
     * @param action 动作编号
     */
    /**
     * 获取跳转活动信息
     * @param {?} workItemId 工作项Id
     * @param {?} action 动作编号
     * @return {?}
     */
    TaskService.prototype.getDestinationScope = /**
     * 获取跳转活动信息
     * @param {?} workItemId 工作项Id
     * @param {?} action 动作编号
     * @return {?}
     */
    function (workItemId, action) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/nextNodes/" + action;
        return this.httpSvc.get(url);
    };
    /**
     * 获取动作实体进而获取web实现和前后事件
     * @param taskId 任务ID
     * @param action 动作编号
     */
    /**
     * 获取动作实体进而获取web实现和前后事件
     * @param {?} taskId 任务ID
     * @param {?} action 动作编号
     * @return {?}
     */
    TaskService.prototype.getActionEntity = /**
     * 获取动作实体进而获取web实现和前后事件
     * @param {?} taskId 任务ID
     * @param {?} action 动作编号
     * @return {?}
     */
    function (taskId, action) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/approvalAction?code=" + action;
        return this.httpSvc.get(url);
    };
    /**
     * 执行加签操作
     * @param context 加签上下文
     */
    /**
     * 执行加签操作
     * @param {?} context 加签上下文
     * @return {?}
     */
    TaskService.prototype.addSign = /**
     * 执行加签操作
     * @param {?} context 加签上下文
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/counterSignAdd";
        /** @type {?} */
        var body = {
            excuteParam: context
        };
        return this.httpSvc.post(url, context);
    };
    /**
     * 查询单据信息
     * @param workItemId 工作项Id
     */
    /**
     * 查询单据信息
     * @param {?} workItemId 工作项Id
     * @return {?}
     */
    TaskService.prototype.getAppInfo = /**
     * 查询单据信息
     * @param {?} workItemId 工作项Id
     * @return {?}
     */
    function (workItemId) {
        /** @type {?} */
        var formParUrl = "/api/runtime/wf/v1.0/workItems/" + workItemId + "/formInfo";
        return this.httpSvc.get(formParUrl);
    };
    //#region 查看流程
    /**
     * 基于工作项ID获取bpmnModel
     * @param workitemId 工作项id
     */
    //#region 查看流程
    /**
     * 基于工作项ID获取bpmnModel
     * @param {?} workitemId 工作项id
     * @return {?}
     */
    TaskService.prototype.getBpmnModelbyWorkItemId = 
    //#region 查看流程
    /**
     * 基于工作项ID获取bpmnModel
     * @param {?} workitemId 工作项id
     * @return {?}
     */
    function (workitemId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + workitemId + "/bpmnModel";
        return this.httpSvc.get(url);
    };
    /**
     * 基于工作项Id获取所有活动实例
     * @param id taskId
     */
    /**
     * 基于工作项Id获取所有活动实例
     * @param {?} id taskId
     * @return {?}
     */
    TaskService.prototype.getAllActiInstsbyTaskId = /**
     * 基于工作项Id获取所有活动实例
     * @param {?} id taskId
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/activityInstanceSlims?workItemId=" + id;
        return this.httpSvc.get(url);
    };
    /**
     * 基于活动实例Id获取日志
     * @param actInstId 活动实例Id
     */
    /**
     * 基于活动实例Id获取日志
     * @param {?} actInstId 活动实例Id
     * @return {?}
     */
    TaskService.prototype.getActivityInstanceLogs = /**
     * 基于活动实例Id获取日志
     * @param {?} actInstId 活动实例Id
     * @return {?}
     */
    function (actInstId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/activityInstanceLogs?activityInstanceId=" + actInstId;
        return this.httpSvc.get(url);
    };
    /**
     * 获取审批日志信息
     * @param taskId 工作项Id
     */
    /**
     * 获取审批日志信息
     * @param {?} taskId 工作项Id
     * @return {?}
     */
    TaskService.prototype.getBizlogByTaskId = /**
     * 获取审批日志信息
     * @param {?} taskId 工作项Id
     * @return {?}
     */
    function (taskId) {
        /** @type {?} */
        var logUrl = "/api/runtime/wf/v1.0/workItems/" + taskId + "/fullComments";
        // if (false === environment.production) {
        //     logUrl = '/assets/mock/taskbizlog.json';
        // }
        return this.httpSvc.get(logUrl);
    };
    //#endregion
    /**
     * 获取指派信息
     * @param taskId 工作项Id
     */
    //#endregion
    /**
     * 获取指派信息
     * @param {?} taskId 工作项Id
     * @return {?}
     */
    TaskService.prototype.getAssigneeInfo = 
    //#endregion
    /**
     * 获取指派信息
     * @param {?} taskId 工作项Id
     * @return {?}
     */
    function (taskId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/" + taskId + "/assigneeInfo";
        return this.httpSvc.get(url);
    };
    /**
     * 根据流程实例Id批量指派（提交审批或执行审批后指派弹框调用，_后续调整与工作项的一致_）
     * @param assigneesPa 指派参数
     */
    /**
     * 根据流程实例Id批量指派（提交审批或执行审批后指派弹框调用，_后续调整与工作项的一致_）
     * @param {?} assigneesPa 指派参数
     * @return {?}
     */
    TaskService.prototype.assignNextUsersByProcInstId = /**
     * 根据流程实例Id批量指派（提交审批或执行审批后指派弹框调用，_后续调整与工作项的一致_）
     * @param {?} assigneesPa 指派参数
     * @return {?}
     */
    function (assigneesPa) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processInstances/assignNextUsers";
        /** @type {?} */
        var body = {
            assigneeInfoParameter: assigneesPa
        };
        return this.httpSvc.post(url, assigneesPa);
    };
    /**
     * 根据工作项ID指派任务
     * @param assigneesPa 指派参数
     */
    /**
     * 根据工作项ID指派任务
     * @param {?} assigneesPa 指派参数
     * @return {?}
     */
    TaskService.prototype.assignNextUsersByWorkItemId = /**
     * 根据工作项ID指派任务
     * @param {?} assigneesPa 指派参数
     * @return {?}
     */
    function (assigneesPa) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/assignUser";
        /** @type {?} */
        var body = {
            assigneeInfoParameter: assigneesPa
        };
        return this.httpSvc.post(url, assigneesPa);
    };
    /**
     * 取回
     * @param workItemId task id
     * @param comment comment
     */
    /**
     * 取回
     * @param {?} context
     * @return {?}
     */
    TaskService.prototype.retrieve = /**
     * 取回
     * @param {?} context
     * @return {?}
     */
    function (context) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/retrieve";
        /** @type {?} */
        var body = {
            excuteParam: context
        };
        return this.httpSvc.post(url, context);
    };
    /**
     * 任务移交
     * @param taskId 工作项Id
     * @param targetUId 目标用户Id
     */
    /**
     * 任务移交
     * @param {?} transferContext
     * @return {?}
     */
    TaskService.prototype.transfer = /**
     * 任务移交
     * @param {?} transferContext
     * @return {?}
     */
    function (transferContext) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/transfer";
        /** @type {?} */
        var body = {
            excuteParam: transferContext
        };
        return this.httpSvc.post(url, transferContext);
    };
    //#region  任务领用
    /**
     * 领用任务
     * @param taskId 工作项Id
     */
    //#region  任务领用
    /**
     * 领用任务
     * @param {?} taskId 工作项Id
     * @return {?}
     */
    TaskService.prototype.claim = 
    //#region  任务领用
    /**
     * 领用任务
     * @param {?} taskId 工作项Id
     * @return {?}
     */
    function (taskId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/claim";
        /** @type {?} */
        var options = {
            workItemId: taskId
        };
        return this.httpSvc.post(url, options);
    };
    /**
     * 取消领用
     * @param taskId 任务Id
     */
    /**
     * 取消领用
     * @param {?} taskId 任务Id
     * @return {?}
     */
    TaskService.prototype.unClaim = /**
     * 取消领用
     * @param {?} taskId 任务Id
     * @return {?}
     */
    function (taskId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/workItems/unclaim";
        /** @type {?} */
        var options = {
            workItemId: taskId
        };
        return this.httpSvc.post(url, options);
    };
    TaskService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    TaskService.ctorParameters = function () { return [
        { type: HttpService }
    ]; };
    return TaskService;
}());
export { TaskService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TaskService.prototype.httpSvc;
}
//# sourceMappingURL=data:application/json;base64,