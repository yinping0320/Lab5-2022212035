/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { TaskService } from '../../services/task.service';
import { UserService } from '../../services/user.service';
import { UserHelperComponent } from '../user-helper/user-helper.component';
import { NotifyService } from '@farris/ui-notify';
import { I18nService } from '../../services/i18n.service';
var TaskTransferComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TaskTransferComponent, _super);
    function TaskTransferComponent(taskSvc, userSvc, notify, i18nService) {
        var _this = _super.call(this, i18nService, userSvc) || this;
        _this.taskSvc = taskSvc;
        _this.userSvc = userSvc;
        _this.notify = notify;
        _this.i18nService = i18nService;
        _this.completed = new EventEmitter();
        _this.singleSelect = true;
        _this.paginationOptions.id = 'WF-TaskTransfer-DataTable-Pagination';
        return _this;
    }
    Object.defineProperty(TaskTransferComponent.prototype, "transfer_context", {
        set: /**
         * @param {?} context
         * @return {?}
         */
        function (context) {
            this.transferContext = tslib_1.__assign({}, context, { assignee: '' });
            this.selectedUsers = [];
            this.showModal(!!this.transferContext.workItemId);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TaskTransferComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    TaskTransferComponent.prototype.handleOk = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.selectedUsers = this.userTable.selections;
        // 需要校验选中唯一用户
        if (!this.selectedUsers) {
            this.notify.info(this.i18nService.getValue('static.transfer.selectHandover'));
            return;
        }
        this.transferContext.assignee = this.selectedUsers['ID'];
        this.taskSvc.transfer(this.transferContext).subscribe((/**
         * @return {?}
         */
        function () {
            _this.notify.success(_this.i18nService.getValue('static.transfer.successTransfer'));
            _this.completed.emit(true);
            _this.showModal(false);
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            if (error && error.error && error.error.Message) {
                _this.notify.error(error.error.Message);
            }
        }));
    };
    TaskTransferComponent.decorators = [
        { type: Component, args: [{
                    selector: 'wf-task-transfer',
                    template: "<farris-dialog #allUserDialog [buttons]=\"buttonRef\" [width]=\"850\" [height]=\"520\" [title]=\"'\u7CFB\u7EDF\u7528\u6237'\">\r\n  <div class=\"d-flex flex-column my-data-grid h-100\" style=\"padding: 0 14px;\">\r\n    <div class=\"flex-auto\" style=\"position:relative;\">\r\n      <farris-datatable #allUserTable [columns]=\"columns\" [data]=\"userListData | paginate: paginationOptions\"\r\n        [showFilterBar]='true' [singleSelect]=\"singleSelect\" [idField]=\"'ID'\" [remote]=\"'server'\" (search)=\"search($event)\"\r\n        [pagination]='false'></farris-datatable>\r\n    </div>\r\n    <div style=\"position:relative;\">\r\n      <pagination-controls [id]=\"paginationOptions.id\" [previousLabel]=\"' '\" [nextLabel]=\"' '\"\r\n        (pageChange)=\"onPageChange($event)\" (pageSizeChange)=\"onPageSizeChange($event)\">\r\n      </pagination-controls>\r\n    </div>\r\n  </div>\r\n</farris-dialog>\r\n<ng-template #buttonRef>\r\n  <button class=\"btn btn-sm btn-primary px-3\" (click)=\"handleOk()\">\u786E\u5B9A</button>\r\n  <button class=\"btn btn-sm btn-default px-3\" (click)=\"handleCancel()\">\u53D6\u6D88</button>\r\n</ng-template>",
                    styles: [".my-data-grid .filter-row .search-fields{padding-left:0!important}.my-data-grid .filter-row .search-text{padding-right:0!important}"]
                }] }
    ];
    /** @nocollapse */
    TaskTransferComponent.ctorParameters = function () { return [
        { type: TaskService },
        { type: UserService },
        { type: NotifyService },
        { type: I18nService }
    ]; };
    TaskTransferComponent.propDecorators = {
        transfer_context: [{ type: Input }],
        completed: [{ type: Output }]
    };
    return TaskTransferComponent;
}(UserHelperComponent));
export { TaskTransferComponent };
if (false) {
    /** @type {?} */
    TaskTransferComponent.prototype.completed;
    /** @type {?} */
    TaskTransferComponent.prototype.transferContext;
    /**
     * @type {?}
     * @private
     */
    TaskTransferComponent.prototype.taskSvc;
    /**
     * @type {?}
     * @protected
     */
    TaskTransferComponent.prototype.userSvc;
    /**
     * @type {?}
     * @protected
     */
    TaskTransferComponent.prototype.notify;
    /**
     * @type {?}
     * @protected
     */
    TaskTransferComponent.prototype.i18nService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay10cmFuc2Zlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3J0ZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3J1bnRpbWUvY29tcG9uZW50cy90YXNrLXRyYW5zZmVyL3Rhc2stdHJhbnNmZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzFELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFMUQ7SUFLMkMsaURBQW1CO0lBZ0I1RCwrQkFDVSxPQUFvQixFQUNsQixPQUFvQixFQUNwQixNQUFxQixFQUNyQixXQUF3QjtRQUpwQyxZQU1FLGtCQUFNLFdBQVcsRUFBRSxPQUFPLENBQUMsU0FHNUI7UUFSUyxhQUFPLEdBQVAsT0FBTyxDQUFhO1FBQ2xCLGFBQU8sR0FBUCxPQUFPLENBQWE7UUFDcEIsWUFBTSxHQUFOLE1BQU0sQ0FBZTtRQUNyQixpQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQVhwQyxlQUFTLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQWN0QyxLQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUN6QixLQUFJLENBQUMsaUJBQWlCLENBQUMsRUFBRSxHQUFHLHNDQUFzQyxDQUFDOztJQUNyRSxDQUFDO0lBdkJELHNCQUNXLG1EQUFnQjs7Ozs7UUFEM0IsVUFDNEIsT0FBZ0Q7WUFDMUUsSUFBSSxDQUFDLGVBQWUsd0JBQVEsT0FBTyxJQUFFLFFBQVEsRUFBRSxFQUFFLEdBQUUsQ0FBQztZQUNwRCxJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3BELENBQUM7OztPQUFBOzs7O0lBb0JELHdDQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7SUFFRCx3Q0FBUTs7O0lBQVI7UUFBQSxpQkFrQkM7UUFqQkMsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQztRQUMvQyxhQUFhO1FBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsZ0NBQWdDLENBQUMsQ0FBQyxDQUFDO1lBQzlFLE9BQU87U0FDUjtRQUVELElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVM7OztRQUFDO1lBQ3BELEtBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLGlDQUFpQyxDQUFDLENBQUMsQ0FBQztZQUNsRixLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQixLQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hCLENBQUM7Ozs7UUFBRSxVQUFBLEtBQUs7WUFDTixJQUFHLEtBQUssSUFBSSxLQUFLLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFO2dCQUM5QyxLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ3hDO1FBQ0gsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOztnQkFyREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLDhvQ0FBd0Q7O2lCQUV6RDs7OztnQkFWUSxXQUFXO2dCQUNYLFdBQVc7Z0JBRVgsYUFBYTtnQkFDYixXQUFXOzs7bUNBU2pCLEtBQUs7NEJBTUwsTUFBTTs7SUF5Q1QsNEJBQUM7Q0FBQSxBQXRERCxDQUsyQyxtQkFBbUIsR0FpRDdEO1NBakRZLHFCQUFxQjs7O0lBUWhDLDBDQUN3Qzs7SUFFeEMsZ0RBSUU7Ozs7O0lBRUEsd0NBQTRCOzs7OztJQUM1Qix3Q0FBOEI7Ozs7O0lBQzlCLHVDQUErQjs7Ozs7SUFDL0IsNENBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUYXNrU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3Rhc2suc2VydmljZSc7XHJcbmltcG9ydCB7IFVzZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvdXNlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgVXNlckhlbHBlckNvbXBvbmVudCB9IGZyb20gJy4uL3VzZXItaGVscGVyL3VzZXItaGVscGVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE5vdGlmeVNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IEkxOG5TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvaTE4bi5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnd2YtdGFzay10cmFuc2ZlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuLi91c2VyLWhlbHBlci91c2VyLWhlbHBlci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vdGFzay10cmFuc2Zlci5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFRhc2tUcmFuc2ZlckNvbXBvbmVudCBleHRlbmRzIFVzZXJIZWxwZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBzZXQgdHJhbnNmZXJfY29udGV4dChjb250ZXh0OiB7IHdvcmtJdGVtSWQ6IHN0cmluZywgY29tbWVudD86IHN0cmluZ30pIHtcclxuICAgIHRoaXMudHJhbnNmZXJDb250ZXh0ID0geyAuLi5jb250ZXh0LCBhc3NpZ25lZTogJycgfTtcclxuICAgIHRoaXMuc2VsZWN0ZWRVc2VycyA9IFtdO1xyXG4gICAgdGhpcy5zaG93TW9kYWwoISF0aGlzLnRyYW5zZmVyQ29udGV4dC53b3JrSXRlbUlkKTtcclxuICB9XHJcbiAgQE91dHB1dCgpXHJcbiAgY29tcGxldGVkID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xyXG5cclxuICB0cmFuc2ZlckNvbnRleHQ6IHtcclxuICAgIHdvcmtJdGVtSWQ6IHN0cmluZyxcclxuICAgIGFzc2lnbmVlOiBzdHJpbmcsXHJcbiAgICBjb21tZW50Pzogc3RyaW5nIC8vIFRPRE/vvJrnp7vkuqTlpIfms6hcclxuICB9O1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSB0YXNrU3ZjOiBUYXNrU2VydmljZSxcclxuICAgIHByb3RlY3RlZCB1c2VyU3ZjOiBVc2VyU2VydmljZSxcclxuICAgIHByb3RlY3RlZCBub3RpZnk6IE5vdGlmeVNlcnZpY2UsXHJcbiAgICBwcm90ZWN0ZWQgaTE4blNlcnZpY2U6IEkxOG5TZXJ2aWNlXHJcbiAgKSB7XHJcbiAgICBzdXBlcihpMThuU2VydmljZSwgdXNlclN2Yyk7XHJcbiAgICB0aGlzLnNpbmdsZVNlbGVjdCA9IHRydWU7XHJcbiAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zLmlkID0gJ1dGLVRhc2tUcmFuc2Zlci1EYXRhVGFibGUtUGFnaW5hdGlvbic7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIGhhbmRsZU9rKCk6IHZvaWQge1xyXG4gICAgdGhpcy5zZWxlY3RlZFVzZXJzID0gdGhpcy51c2VyVGFibGUuc2VsZWN0aW9ucztcclxuICAgIC8vIOmcgOimgeagoemqjOmAieS4reWUr+S4gOeUqOaIt1xyXG4gICAgaWYgKCF0aGlzLnNlbGVjdGVkVXNlcnMpIHtcclxuICAgICAgdGhpcy5ub3RpZnkuaW5mbyh0aGlzLmkxOG5TZXJ2aWNlLmdldFZhbHVlKCdzdGF0aWMudHJhbnNmZXIuc2VsZWN0SGFuZG92ZXInKSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnRyYW5zZmVyQ29udGV4dC5hc3NpZ25lZSA9IHRoaXMuc2VsZWN0ZWRVc2Vyc1snSUQnXTtcclxuICAgIHRoaXMudGFza1N2Yy50cmFuc2Zlcih0aGlzLnRyYW5zZmVyQ29udGV4dCkuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgdGhpcy5ub3RpZnkuc3VjY2Vzcyh0aGlzLmkxOG5TZXJ2aWNlLmdldFZhbHVlKCdzdGF0aWMudHJhbnNmZXIuc3VjY2Vzc1RyYW5zZmVyJykpO1xyXG4gICAgICB0aGlzLmNvbXBsZXRlZC5lbWl0KHRydWUpO1xyXG4gICAgICB0aGlzLnNob3dNb2RhbChmYWxzZSk7XHJcbiAgICB9LCBlcnJvciA9PiB7XHJcbiAgICAgIGlmKGVycm9yICYmIGVycm9yLmVycm9yICYmIGVycm9yLmVycm9yLk1lc3NhZ2UpIHtcclxuICAgICAgICB0aGlzLm5vdGlmeS5lcnJvcihlcnJvci5lcnJvci5NZXNzYWdlKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==