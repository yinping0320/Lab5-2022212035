/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { OperationActivity } from "@gsp-wf/wf-process-model";
import { UserActivityCell } from "./UserActivityCell";
import { FlowNodeState } from "@edp-pmf/bpmn-model";
import { WfConstants } from "../WfConstants";
/**
 * 人工操作活动节点
 */
export class OperationActivityCell extends UserActivityCell {
    /**
     * @param {?=} value
     * @param {?=} geometry
     * @param {?=} style
     */
    constructor(value, geometry, style) {
        super(value, geometry, style);
        this.clrTypeId = OperationActivityCell.CLR_TYPE_ID;
        this.name = "人工操作";
        this.nameLanguage = {
            "zh-CHS": "人工操作",
            "zh-CHT": "人工操作",
            "en": "Operation",
        };
        this.imgUrls = {
            [FlowNodeState.Default]: WfConstants.IMAGE_PATH + "/bizActivity.png",
            [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + "/bizActivity_select.svg",
        };
    }
    /**
     * @param {?=} flowElt
     * @return {?}
     */
    createFlowElement(flowElt) {
        /** @type {?} */
        const flowNode = (/** @type {?} */ (super.createFlowElement(flowElt)));
        return flowNode;
    }
    /**
     * @return {?}
     */
    getFarrisPropConfig() {
        return this.getFarrisPropConfigByIsOperation(true);
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    updateProps(obj) {
        this.updatePropsByIsOperation(obj, true);
    }
}
OperationActivityCell.CLR_TYPE_ID = OperationActivity.Clr_Type_ID;
if (false) {
    /** @type {?} */
    OperationActivityCell.CLR_TYPE_ID;
    /** @type {?} */
    OperationActivityCell.prototype.clrTypeId;
    /** @type {?} */
    OperationActivityCell.prototype.name;
    /** @type {?} */
    OperationActivityCell.prototype.nameLanguage;
    /** @type {?} */
    OperationActivityCell.prototype.flowElement;
    /** @type {?} */
    OperationActivityCell.prototype.imgUrls;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3BlcmF0aW9uQWN0aXZpdHlDZWxsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9kZXNpZ25lci93Zi1jZWxsL09wZXJhdGlvbkFjdGl2aXR5Q2VsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdEQsT0FBTyxFQUFtQixhQUFhLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFLN0MsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGdCQUFnQjs7Ozs7O0lBZ0J2RCxZQUFZLEtBQVcsRUFBRSxRQUErQixFQUFFLEtBQWM7UUFDcEUsS0FBSyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFoQmxDLGNBQVMsR0FBVyxxQkFBcUIsQ0FBQyxXQUFXLENBQUM7UUFDdEQsU0FBSSxHQUFXLE1BQU0sQ0FBQztRQUN0QixpQkFBWSxHQUFnQztZQUMxQyxRQUFRLEVBQUUsTUFBTTtZQUNoQixRQUFRLEVBQUUsTUFBTTtZQUNoQixJQUFJLEVBQUUsV0FBVztTQUNwQixDQUFDO1FBSUEsWUFBTyxHQUFHO1lBQ04sQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsV0FBVyxDQUFDLFVBQVUsR0FBRyxrQkFBa0I7WUFDcEUsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEVBQUUsV0FBVyxDQUFDLFVBQVUsR0FBRyx5QkFBeUI7U0FDL0UsQ0FBQztJQUlGLENBQUM7Ozs7O0lBRUQsaUJBQWlCLENBQUMsT0FBMkI7O2NBQ25DLFFBQVEsR0FBRyxtQkFBQSxLQUFLLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLEVBQXFCO1FBQ3RFLE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFFRCxtQkFBbUI7UUFDZixPQUFPLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxHQUFRO1FBQ2hCLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7QUF2Qk0saUNBQVcsR0FBVyxpQkFBaUIsQ0FBQyxXQUFXLENBQUM7OztJQUEzRCxrQ0FBMkQ7O0lBUDNELDBDQUFzRDs7SUFDdEQscUNBQXNCOztJQUN0Qiw2Q0FJQTs7SUFFQSw0Q0FBK0I7O0lBRS9CLHdDQUdFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmFycmlzUHJvcENvbmZpZ1dpdGhEYXRhIH0gZnJvbSBcIkBlZHAtcG1mL2dyYXBoZWRpdG9yXCI7XHJcbmltcG9ydCB7IE14R3JhcGhOUyB9IGZyb20gXCJAZWRwLXBtZi9teGdyYXBoLXRzXCI7XHJcbmltcG9ydCB7IE9wZXJhdGlvbkFjdGl2aXR5IH0gZnJvbSBcIkBnc3Atd2Yvd2YtcHJvY2Vzcy1tb2RlbFwiO1xyXG5pbXBvcnQgeyBVc2VyQWN0aXZpdHlDZWxsIH0gZnJvbSBcIi4vVXNlckFjdGl2aXR5Q2VsbFwiO1xyXG5pbXBvcnQgeyBCcG1uTW9kZWxIZWxwZXIsIEZsb3dOb2RlU3RhdGUgfSBmcm9tIFwiQGVkcC1wbWYvYnBtbi1tb2RlbFwiO1xyXG5pbXBvcnQgeyBXZkNvbnN0YW50cyB9IGZyb20gXCIuLi9XZkNvbnN0YW50c1wiO1xyXG5cclxuLyoqXHJcbiAqIOS6uuW3peaTjeS9nOa0u+WKqOiKgueCuVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE9wZXJhdGlvbkFjdGl2aXR5Q2VsbCBleHRlbmRzIFVzZXJBY3Rpdml0eUNlbGwge1xyXG4gICAgY2xyVHlwZUlkOiBzdHJpbmcgPSBPcGVyYXRpb25BY3Rpdml0eUNlbGwuQ0xSX1RZUEVfSUQ7XHJcbiAgICBuYW1lOiBzdHJpbmcgPSBcIuS6uuW3peaTjeS9nFwiO1xyXG4gICAgbmFtZUxhbmd1YWdlOiB7IFtsYW5nOiBzdHJpbmddOiBzdHJpbmc7IH0gPSB7XHJcbiAgICAgIFwiemgtQ0hTXCI6IFwi5Lq65bel5pON5L2cXCIsXHJcbiAgICAgIFwiemgtQ0hUXCI6IFwi5Lq65bel5pON5L2cXCIsXHJcbiAgICAgIFwiZW5cIjogXCJPcGVyYXRpb25cIixcclxuICB9O1xyXG4gICAgc3RhdGljIENMUl9UWVBFX0lEOiBzdHJpbmcgPSBPcGVyYXRpb25BY3Rpdml0eS5DbHJfVHlwZV9JRDtcclxuICAgIGZsb3dFbGVtZW50OiBPcGVyYXRpb25BY3Rpdml0eTtcclxuXHJcbiAgICBpbWdVcmxzID0ge1xyXG4gICAgICAgIFtGbG93Tm9kZVN0YXRlLkRlZmF1bHRdOiBXZkNvbnN0YW50cy5JTUFHRV9QQVRIICsgXCIvYml6QWN0aXZpdHkucG5nXCIsXHJcbiAgICAgICAgW0Zsb3dOb2RlU3RhdGUuU2VsZWN0ZWRdOiBXZkNvbnN0YW50cy5JTUFHRV9QQVRIICsgXCIvYml6QWN0aXZpdHlfc2VsZWN0LnN2Z1wiLFxyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih2YWx1ZT86IGFueSwgZ2VvbWV0cnk/OiBNeEdyYXBoTlMubXhHZW9tZXRyeSwgc3R5bGU/OiBzdHJpbmcpIHtcclxuICAgICAgICBzdXBlcih2YWx1ZSwgZ2VvbWV0cnksIHN0eWxlKTtcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVGbG93RWxlbWVudChmbG93RWx0PzogT3BlcmF0aW9uQWN0aXZpdHkpIHtcclxuICAgICAgICBjb25zdCBmbG93Tm9kZSA9IHN1cGVyLmNyZWF0ZUZsb3dFbGVtZW50KGZsb3dFbHQpIGFzIE9wZXJhdGlvbkFjdGl2aXR5O1xyXG4gICAgICAgIHJldHVybiBmbG93Tm9kZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRGYXJyaXNQcm9wQ29uZmlnKCk6IEZhcnJpc1Byb3BDb25maWdXaXRoRGF0YSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RmFycmlzUHJvcENvbmZpZ0J5SXNPcGVyYXRpb24odHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlUHJvcHMob2JqOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnVwZGF0ZVByb3BzQnlJc09wZXJhdGlvbihvYmosIHRydWUpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==