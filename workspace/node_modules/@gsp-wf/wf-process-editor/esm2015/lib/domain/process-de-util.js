/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BpmnModelHelper } from '@edp-pmf/bpmn-model';
export class ProcessDeUtil {
    constructor() { }
    /**
     * @return {?}
     */
    static GenerateElementId() {
        return BpmnModelHelper.GenerateElementId();
    }
    /**
     * 创建内码
     * @return {?}
     */
    static createNM() {
        /**
         * @return {?}
         */
        function S4() {
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());
    }
    /**
     * @param {?} value
     * @return {?}
     */
    static initVariableType(value) {
        if (value) {
            if (value.length >= 8 && value.slice(0, 8) === `{"expr":`) {
                return 'expression';
            }
            else {
                return 'constant';
            }
        }
        else {
            return 'variable';
        }
    }
    /**
     * @return {?}
     */
    getProcessDesignerRouter() {
        /** @type {?} */
        const url = 'processList';
        return url;
    }
    // 获取流程分类webapi
    /**
     * @return {?}
     */
    getFlowFormWebApi() {
        return '/api/runtime/wf/v1.0/flowForm';
    }
    // 获取参数列表webapi
    /**
     * @return {?}
     */
    getFormalParametersWebApi() {
        return '/api/runtime/wf/v1.0/formalParameter';
    }
    // 获取运行时元数据webapi
    /**
     * @return {?}
     */
    getMetaDataRUWebApi() {
        return '/api/runtime/lcm/v1.0/rt-metadatas/';
    }
    // 获取流程构件webapi
    /**
     * @return {?}
     */
    getBizComponentsWebApi() {
        return '/api/runtime/wf/v1.0/bizComponent';
    }
    // 基于流程分类获取表单定义
    /**
     * @return {?}
     */
    getExcuteFormsWebApi() {
        return '/api/runtime/wf/v1.0/excuteForm';
    }
    // 获取设计时流程定义WebAPi
    /**
     * @return {?}
     */
    getProcessDefinitionWebApi() {
        return '/api/runtime/wf/v1.0/dtProcDefs';
    }
    // 判断是否允许删除流程定义的api
    /**
     * @return {?}
     */
    getCheckExistActiveProcDefApi() {
        return '/api/runtime/wf/v1.0/procDefs/checkExistActiveProcDef';
    }
    /**
     * 获取业务活动webApi
     * @param {?} ffId
     * @return {?}
     */
    getBizActivityWebApi(ffId) {
        return `/api/runtime/wf/v1.0/bizActivity?flowFormKey=${ffId}`;
    }
    /**
     * @return {?}
     */
    getProcDefKeyWebApi() {
        return '/api/runtime/wf/v1.0/procDefs/processDefinitionKeys';
    }
    /**
     * 发布流程api
     * @return {?}
     */
    deployWebApi() {
        return '/api/runtime/wf/v1.0/procDefs/deploy';
    }
    /**
     * 保存流程api
     * @return {?}
     */
    saveWebApi() {
        return '/api/runtime/wf/v1.0/DTProcessDefinitions/SaveBpmnModel';
    }
    /**
     * 获取审批动作webapi
     * @return {?}
     */
    getApprovalActionWebApi() {
        return '/api/runtime/wf/v1.0/approvalAction';
    }
    /**
     * 获取运行时流程定义WebAPi
     * @return {?}
     */
    getRTProcessDefinitionWebApi() {
        return '/api/runtime/wf/v1.0/procDefs';
    }
    /**
     * @param {?} data
     * @param {?} code
     * @return {?}
     */
    getValue(data, code) {
        if (!code) {
            return '';
        }
        /** @type {?} */
        let resultVal = '';
        if (code.indexOf('.') === -1) {
            resultVal = data[code];
        }
        else {
            resultVal = code.split('.').reduce((/**
             * @param {?} obj
             * @param {?} key
             * @return {?}
             */
            (obj, key) => {
                if (obj) {
                    return obj[key];
                }
                else {
                    return null;
                }
            }), data);
        }
        return resultVal;
    }
    /**
     * 转换
     * @param {?} jsonObj Object
     * @return {?}
     */
    toUpperCase(jsonObj) {
        if (typeof (jsonObj) === 'object') {
            for (const key of Object.keys(jsonObj)) {
                jsonObj[key.substring(0, 1).toUpperCase() + key.substring(1)] = jsonObj[key];
                delete (jsonObj[key]);
            }
        }
        return jsonObj;
    }
    /**
     * @param {?} jsonObj
     * @return {?}
     */
    toLowCase(jsonObj) {
        if (typeof (jsonObj) === 'object') {
            for (const key of Object.keys(jsonObj)) {
                if ((key.substring(0, 1).toLowerCase() + key.substring(1)) !== key) {
                    jsonObj[key.substring(0, 1).toLowerCase() + key.substring(1)] = jsonObj[key];
                    delete (jsonObj[key]);
                }
            }
        }
        return jsonObj;
    }
}
ProcessDeUtil.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ProcessDeUtil.ctorParameters = () => [];
if (false) {
    /** @type {?} */
    ProcessDeUtil.prototype.funcId;
}
//# sourceMappingURL=data:application/json;base64,