/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ProcessDeUtil } from '../process-de-util';
export class BizComponentEntity {
    /**
     * @param {?=} name
     * @param {?=} metadataid
     * @param {?=} method
     */
    constructor(name, metadataid, method) {
        this.id = ProcessDeUtil.GenerateElementId();
        this.name = name;
        this.metadataId = metadataid;
        this.methodCode = method;
        this.isForCompensation = false;
    }
}
if (false) {
    /** @type {?} */
    BizComponentEntity.prototype.id;
    /** @type {?} */
    BizComponentEntity.prototype.name;
    /** @type {?} */
    BizComponentEntity.prototype.flowFormKey;
    /** @type {?} */
    BizComponentEntity.prototype.bizActivityId;
    /** @type {?} */
    BizComponentEntity.prototype.componentLocation;
    /** @type {?} */
    BizComponentEntity.prototype.executionTime;
    /** @type {?} */
    BizComponentEntity.prototype.metadataId;
    /** @type {?} */
    BizComponentEntity.prototype.methodCode;
    /** @type {?} */
    BizComponentEntity.prototype.methodName;
    /** @type {?} */
    BizComponentEntity.prototype.actualParameters;
    /** @type {?} */
    BizComponentEntity.prototype.owner;
    /** @type {?} */
    BizComponentEntity.prototype.ownerType;
    /** @type {?} */
    BizComponentEntity.prototype.isForCompensation;
    /** @type {?} */
    BizComponentEntity.prototype.condition;
    /** @type {?} */
    BizComponentEntity.prototype.scopeType;
}
/** @enum {number} */
const ComponentLocation = {
    Process: 0,
    Activity: 1,
};
export { ComponentLocation };
ComponentLocation[ComponentLocation.Process] = 'Process';
ComponentLocation[ComponentLocation.Activity] = 'Activity';
/** @enum {string} */
const OwnerType = {
    Process: 'Process',
    Activity: 'Activity',
    Schema: 'Schema',
};
export { OwnerType };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYml6LWNvbXBvbmVudC5lbnRpdHkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2RvbWFpbi9lbnRpdGllcy9iaXotY29tcG9uZW50LmVudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE1BQU0sT0FBTyxrQkFBa0I7Ozs7OztJQUMzQixZQUFZLElBQWEsRUFBRSxVQUFtQixFQUFFLE1BQWU7UUFDM0QsSUFBSSxDQUFDLEVBQUUsR0FBRyxhQUFhLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM1QyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQztRQUN6QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0lBQ25DLENBQUM7Q0FnQko7OztJQWZHLGdDQUFXOztJQUNYLGtDQUFhOztJQUNiLHlDQUFxQjs7SUFDckIsMkNBQXVCOztJQUN2QiwrQ0FBc0M7O0lBQ3RDLDJDQUFzQjs7SUFDdEIsd0NBQW1COztJQUNuQix3Q0FBbUI7O0lBQ25CLHdDQUFvQjs7SUFDcEIsOENBQXlDOztJQUN6QyxtQ0FBYzs7SUFDZCx1Q0FBcUI7O0lBQ3JCLCtDQUE0Qjs7SUFDNUIsdUNBQW1COztJQUNuQix1Q0FBbUI7Ozs7SUFHbkIsVUFBVztJQUNYLFdBQVk7Ozs7Ozs7SUFHWixTQUFVLFNBQVM7SUFDbkIsVUFBVyxVQUFVO0lBQ3JCLFFBQVMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdHVhbFBhcmFtZXRlciB9IGZyb20gJy4vYWN0dWFsLXBhcmFtZXRlcic7XHJcbmltcG9ydCB7IFByb2Nlc3NEZVV0aWwgfSBmcm9tICcuLi9wcm9jZXNzLWRlLXV0aWwnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJpekNvbXBvbmVudEVudGl0eSB7XHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lPzogc3RyaW5nLCBtZXRhZGF0YWlkPzogc3RyaW5nLCBtZXRob2Q/OiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLmlkID0gUHJvY2Vzc0RlVXRpbC5HZW5lcmF0ZUVsZW1lbnRJZCgpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5tZXRhZGF0YUlkID0gbWV0YWRhdGFpZDtcclxuICAgICAgICB0aGlzLm1ldGhvZENvZGUgPSBtZXRob2Q7XHJcbiAgICAgICAgdGhpcy5pc0ZvckNvbXBlbnNhdGlvbiA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIGZsb3dGb3JtS2V5Pzogc3RyaW5nO1xyXG4gICAgYml6QWN0aXZpdHlJZD86IHN0cmluZztcclxuICAgIGNvbXBvbmVudExvY2F0aW9uPzogQ29tcG9uZW50TG9jYXRpb247XHJcbiAgICBleGVjdXRpb25UaW1lOiBzdHJpbmc7XHJcbiAgICBtZXRhZGF0YUlkOiBzdHJpbmc7XHJcbiAgICBtZXRob2RDb2RlOiBzdHJpbmc7XHJcbiAgICBtZXRob2ROYW1lPzogc3RyaW5nO1xyXG4gICAgYWN0dWFsUGFyYW1ldGVyczogQXJyYXk8QWN0dWFsUGFyYW1ldGVyPjtcclxuICAgIG93bmVyOiBzdHJpbmc7XHJcbiAgICBvd25lclR5cGU6IE93bmVyVHlwZTtcclxuICAgIGlzRm9yQ29tcGVuc2F0aW9uPzogYm9vbGVhbjtcclxuICAgIGNvbmRpdGlvbj86IHN0cmluZztcclxuICAgIHNjb3BlVHlwZT86IHN0cmluZztcclxufVxyXG5leHBvcnQgZW51bSBDb21wb25lbnRMb2NhdGlvbiB7XHJcbiAgICBQcm9jZXNzID0gMCxcclxuICAgIEFjdGl2aXR5ID0gMVxyXG59XHJcbmV4cG9ydCBlbnVtIE93bmVyVHlwZSB7XHJcbiAgICBQcm9jZXNzID0gJ1Byb2Nlc3MnLFxyXG4gICAgQWN0aXZpdHkgPSAnQWN0aXZpdHknLFxyXG4gICAgU2NoZW1hID0gJ1NjaGVtYSdcclxufVxyXG4iXX0=