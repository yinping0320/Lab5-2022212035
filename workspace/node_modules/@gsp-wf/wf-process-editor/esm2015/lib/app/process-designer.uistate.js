/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { FlowFormInfo } from '../domain/entities/flowform-info';
import { HttpService } from '@ecp-caf/caf-common';
import { forkJoin } from 'rxjs';
import { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';
export class ProcessDesignerUIState {
    /**
     * @param {?} http
     * @param {?} localePipe
     */
    constructor(http, localePipe) {
        this.http = http;
        this.localePipe = localePipe;
        this.rootPath = '';
        // 入口单据Info
        this.flowFormInfo = new FlowFormInfo();
        // Model上下文
        this.content = '';
        // 属性框
        this.propertyConfig = [];
        this.propertyData = {};
        // 设计器地址
        this.POST_MESSAGE_TARGET = window.document.location.origin + this.rootPath + '/platform/runtime/wf/web/designer/index.html';
        this.schemas = [];
        // 审批活动属性
        this.counterSignVariables = [];
        this.approvalItems = [];
        // 流程的审批活动节点信息
        this.userActList = [];
        // 流程包括结束和审批活动节点的信息
        this.allActList = [];
        // 流程包括审批活动，知会活动，消息的节点信息
        this.MessageActList = [];
        this.NotifyActKist = [];
        this.SubAndCatchActList = [];
        this.enableAdminOrgAut = false;
        this.enableFlowFormAut = false;
        // 流程管理员信息
        this.isAdministratorConfig = false;
        // 审批活动属性枚举===========================================================================================
        this.assignIterator = [{ key: 'ALL', value: this.localePipe.transform("app.processDesigner.all") },
            { key: 'ASSIGN', value: this.localePipe.transform("app.processDesigner.assign") },
            { key: 'CLAIM', value: this.localePipe.transform("app.processDesigner.claim") }];
        this.completeIterator = [{ key: 'Preempt', value: this.localePipe.transform("app.processDesigner.preempt") },
            { key: 'Parallel', value: this.localePipe.transform("app.processDesigner.parallel") },
            { key: 'Sequential', value: this.localePipe.transform("app.processDesigner.sequential") }];
        this.completeIterator4Claim = [{ key: 'Preempt', value: this.localePipe.transform("app.processDesigner.preempt") }];
        this.boolIterator = [{ key: true, value: this.localePipe.transform("app.processDesigner.true") },
            { key: false, value: this.localePipe.transform("app.processDesigner.false") }];
        // 会签不允许跳转
        this.noJump4Sign = [{ key: false, value: this.localePipe.transform("app.processDesigner.false") }];
        // =================================================================================================
        // 流程实例上下文-----------------------------------------------
        this.procInstContext = [
            { key: 'dataId', name: this.localePipe.transform("app.processDesigner.dataId"), description: 'this.localePipe.transform("app.processDesigner.dataId")' },
            { key: 'procInstId', name: this.localePipe.transform("app.processDesigner.procInstId"), description: this.localePipe.transform("app.processDesigner.procInstId") },
            { key: 'bizDefKey', name: this.localePipe.transform("app.processDesigner.bizDefKey"), description: this.localePipe.transform("app.processDesigner.bizDefKey") },
            { key: 'processDefinitionKey', name: this.localePipe.transform("app.processDesigner.processDefinitionKey"), description: this.localePipe.transform("app.processDesigner.processDefinitionKey") },
            { key: 'procInstCreator', name: this.localePipe.transform("app.processDesigner.procInstCreator"), description: this.localePipe.transform("app.processDesigner.procInstCreator") },
            { key: 'businessCreator', name: this.localePipe.transform("app.processDesigner.businessCreator"), description: this.localePipe.transform("app.processDesigner.businessCreator") },
            { key: 'procInstDescription', name: this.localePipe.transform("app.processDesigner.procInstDescription"), description: this.localePipe.transform("app.processDesigner.procInstDescription") },
            { key: 'comment', name: this.localePipe.transform("app.processDesigner.comment"), description: this.localePipe.transform("app.processDesigner.comment") },
            { key: 'bizDefName', name: this.localePipe.transform("app.processDesigner.bizDefName"), description: this.localePipe.transform("app.processDesigner.bizDefName") },
            { key: 'curLoginUsername', name: this.localePipe.transform("app.processDesigner.curLoginUsername"), description: this.localePipe.transform("app.processDesigner.curLoginUsername") },
            { key: 'procInstCreatorName', name: this.localePipe.transform("app.processDesigner.procInstCreatorName"), description: this.localePipe.transform("app.processDesigner.procInstCreatorName") },
            { key: 'currentParticipantId', name: this.localePipe.transform("app.processDesigner.currentParticipantId"), description: this.localePipe.transform("app.processDesigner.currentParticipantId") },
            { key: 'currentParticipantName', name: this.localePipe.transform("app.processDesigner.currentParticipantName"), description: this.localePipe.transform("app.processDesigner.currentParticipantName") }
        ];
        // 催办上下文--------------------------------------------------
        this.urgeContext = [
            { key: 'dataId', name: this.localePipe.transform("app.processDesigner.dataId"), description: this.localePipe.transform("app.processDesigner.dataId") },
            { key: 'procInstId', name: this.localePipe.transform("app.processDesigner.procInstId"), description: this.localePipe.transform("app.processDesigner.procInstId") },
            { key: 'bizDefKey', name: this.localePipe.transform("app.processDesigner.bizDefKey"), description: this.localePipe.transform("app.processDesigner.bizDefKey") },
            { key: 'processDefinitionKey', name: this.localePipe.transform("app.processDesigner.processDefinitionKey"), description: this.localePipe.transform("app.processDesigner.processDefinitionKey") },
            { key: 'procInstCreator', name: this.localePipe.transform("app.processDesigner.procInstCreator"), description: this.localePipe.transform("app.processDesigner.procInstCreator") },
            { key: 'businessCreator', name: this.localePipe.transform("app.processDesigner.businessCreator"), description: this.localePipe.transform("app.processDesigner.businessCreator") },
            { key: 'procInstDescription', name: this.localePipe.transform("app.processDesigner.procInstDescription"), description: this.localePipe.transform("app.processDesigner.procInstDescription") },
            { key: 'comment', name: this.localePipe.transform("app.processDesigner.comment"), description: this.localePipe.transform("app.processDesigner.comment") },
            { key: 'bizDefName', name: this.localePipe.transform("app.processDesigner.bizDefName"), description: this.localePipe.transform("app.processDesigner.bizDefName") },
            { key: 'curLoginUsername', name: this.localePipe.transform("app.processDesigner.curLoginUsername"), description: this.localePipe.transform("app.processDesigner.curLoginUsername") },
            { key: 'procInstCreatorName', name: this.localePipe.transform("app.processDesigner.procInstCreatorName"), description: this.localePipe.transform("app.processDesigner.procInstCreatorName") }
        ];
        /**
         * 流程参数上下文
         */
        this.formalParameterContext = [];
        /**
         * 参与者上下文
         */
        this.participantContext = [
            {
                key: 'procInstCreator',
                name: this.localePipe.transform("app.processDesigner.procInstCreator"),
                description: this.localePipe.transform("app.processDesigner.procInstCreator")
            }, {
                key: 'businessCreator',
                name: this.localePipe.transform("app.processDesigner.businessCreator"),
                description: this.localePipe.transform("app.processDesigner.businessCreator")
            }, {
                key: 'currentUser',
                name: this.localePipe.transform("app.processDesigner.currentUser"),
                description: this.localePipe.transform("app.processDesigner.currentUser")
            }, {
                key: 'preActExecutors',
                name: this.localePipe.transform("app.processDesigner.preActExecutors"),
                description: this.localePipe.transform("app.processDesigner.preActExecutors")
            }
        ];
        /**
         * 子活动上下文
         */
        this.subActivityContext = [
            {
                key: 'collectionElementVariable',
                name: this.localePipe.transform("app.processDesigner.collectionElementVariable"),
                description: this.localePipe.transform("app.processDesigner.collectionElementVariable")
            }
        ];
        /**
         * 子流程元素上下文
         */
        this.subProcessElementContext = [
            {
                key: 'subCollectionElementVariable',
                name: this.localePipe.transform("app.processDesigner.subCollectionElementVariable"),
                description: this.localePipe.transform("app.processDesigner.subCollectionElementVariable")
            }
        ];
        /**
         * 多实例启用条件上下文
         */
        this.multiCounterSignVariables = [
            { key: 'nrOfInstances', name: this.localePipe.transform("app.processDesigner.nrOfInstances"), description: this.localePipe.transform("app.processDesigner.nrOfInstances") },
            { key: 'nrOfCompletedInstances', name: this.localePipe.transform("app.processDesigner.nrOfCompletedInstances"), description: this.localePipe.transform("app.processDesigner.nrOfCompletedInstances") },
            { key: 'nrOfActiveInstances', name: this.localePipe.transform("app.processDesigner.nrOfActiveInstances"), description: this.localePipe.transform("app.processDesigner.nrOfActiveInstances") },
            { key: 'nrOfForward', name: this.localePipe.transform("app.processDesigner.nrOfForward"), description: this.localePipe.transform("app.processDesigner.nrOfForward") },
            { key: 'nrOfBackward', name: this.localePipe.transform("app.processDesigner.nrOfBackward"), description: this.localePipe.transform("app.processDesigner.nrOfBackward") },
            { key: 'nrOfAbort', name: this.localePipe.transform("app.processDesigner.nrOfAbort"), description: this.localePipe.transform("app.processDesigner.nrOfAbort") }
        ];
        /**
         * 活动构件参数上下文
         */
        this.activityComponentContext = [
            {
                key: 'conclusionType',
                name: this.localePipe.transform("app.processDesigner.conclusionType"),
                description: this.localePipe.transform("app.processDesigner.conclusionTypeTips")
            }, {
                key: 'conclusionValue',
                name: this.localePipe.transform("app.processDesigner.conclusionValue"),
                description: this.localePipe.transform("app.processDesigner.conclusionValueTips")
            }
        ];
        this.processVariableContext = new Array();
        this.processVariables = new Array();
        /**
         * 汇报级次
         */
        this.dimensions = [
            { value: 'directSuperior', text: this.localePipe.transform("app.processDesigner.directSuperior") },
            { value: 'higherSuperior', text: this.localePipe.transform("app.processDesigner.higherSuperior") }
        ];
        /**
         * 启动方式
         */
        this.startModeIterator = [
            { key: 'DIRECT', value: this.localePipe.transform("app.processDesigner.DIRECT") },
            { key: 'EXTERNAL_PROCESS', value: this.localePipe.transform("app.processDesigner.EXTERNAL_PROCESS") },
            { key: 'SUB_PROCESS', value: this.localePipe.transform("app.processDesigner.SUB_PROCESS") }
        ];
        /**
         * 显示终端
         */
        this.displayTerminal = [
            { key: "ALL", value: this.localePipe.transform("app.processDesigner.ALL") },
            { key: "WEB", value: this.localePipe.transform("app.processDesigner.WEB") },
            { key: "APP", value: this.localePipe.transform("app.processDesigner.APP") }
        ];
        /**
         * 消息渠道列表
         */
        this.messageChannels = new Array();
        this.orgTypeCollection = [];
        try {
            this.rootPath = ((/** @type {?} */ (window))).gspframeworkService.common.getBasePath.get();
        }
        catch (error) {
        }
    }
    /**
     * @param {?} variables
     * @return {?}
     */
    set ProcessVariables(variables) {
        this.processVariables = variables;
        this.setProcessVariableContext();
    }
    /**
     * @return {?}
     */
    get ProcessVariables() {
        return this.processVariables;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    variableContextName(key) {
        return this.participantContext.find((/**
         * @param {?} i
         * @return {?}
         */
        i => i.key === key)).name;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    ranksName(value) {
        return this.dimensions.find((/**
         * @param {?} i
         * @return {?}
         */
        i => i.value === value)).text;
    }
    /**
     * @return {?}
     */
    getMessageChannels() {
        /** @type {?} */
        const url = '/api/runtime/msg/v1.0/messageplatform/channel/getenabledchannels';
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        (re) => {
            this.messageChannels = re;
        }));
    }
    /**
     * @return {?}
     */
    getAdministratorInfo() {
        this.getCurrentUser().subscribe((/**
         * @param {?} user
         * @return {?}
         */
        user => {
            /** @type {?} */
            const userId = user.userId;
            forkJoin(this.getAdministratorConfig(), this.getAdministrator(userId)).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            re => {
                this.isAdministratorConfig = re[0].currentValue === 'true' ? true : false;
                this.administrator = re[1];
            }));
        }));
    }
    /**
     * @return {?}
     */
    getEnableAdminOrgAut() {
        return this.getEnableProcessDesignerDataAut('WF_AdminOrg');
    }
    /**
     * @return {?}
     */
    getEnableFlowFormAut() {
        return this.getEnableProcessDesignerDataAut('WF_FlowForm');
    }
    /**
     * @private
     * @param {?} authField
     * @return {?}
     */
    getEnableProcessDesignerDataAut(authField) {
        /** @type {?} */
        const url = '/api/runtime/wf/v1.0/dtProcDefs/enableProcessDesignerDataAut/' + authField;
        return this.http.get(url);
    }
    /**
     * @private
     * @return {?}
     */
    getCurrentUser() {
        /** @type {?} */
        const url = '/api/runtime/sys/v1.0/userinfos?infoType=user';
        return this.http.get(url);
    }
    /**
     * @private
     * @param {?} userId
     * @return {?}
     */
    getAdministrator(userId) {
        /** @type {?} */
        const url = `/api/runtime/wf/v1.0/processAdministrator/${userId}`;
        return this.http.get(url);
    }
    /**
     * @return {?}
     */
    getReleaseConfig() {
        /** @type {?} */
        const url = `/api/runtime/wf/v1.0/generalConfig/Is_Enable_Examine`;
        return this.http.get(url);
    }
    /**
     * @private
     * @return {?}
     */
    getAdministratorConfig() {
        /** @type {?} */
        const url = `/api/runtime/wf/v1.0/generalConfig/Is_EnableAdministrator`;
        return this.http.get(url);
    }
    /**
     * @private
     * @param {?} orgId
     * @return {?}
     */
    getSysOrgById(orgId) {
        /** @type {?} */
        const url = `/api/runtime/sys/v1.0/sysOrgs/${orgId}`;
        return this.http.get(url);
    }
    /**
     * @private
     * @param {?} orgId
     * @return {?}
     */
    getSysOrgWithAllSubsById(orgId) {
        /** @type {?} */
        const url = `/api/runtime/sys/v1.0/sysOrgs?param=` + encodeURIComponent(`{"parentId":"${orgId}","withAllSub":true}`);
        return this.http.get(url);
    }
    /**
     * @private
     * @param {?} userId
     * @return {?}
     */
    getCurUserInfo(userId) {
        /** @type {?} */
        const url = `/api/runtime/sys/v1.0/users/${userId}`;
        return this.http.get(url);
    }
    /**
     * @return {?}
     */
    getOrgConfig() {
        /** @type {?} */
        const url = `/api/runtime/wf/v1.0/generalConfig/Is_Required_Organization`;
        return this.http.get(url);
    }
    /**
     * 获取当前用户信息
     * @return {?}
     */
    getUserInfo() {
        /** @type {?} */
        const url = `/api/runtime/sys/v1.0/userinfos?infoType=user`;
        return this.http.get(url);
    }
    /**
     * 流程审核：新增
     * @return {?}
     */
    createData() {
        /** @type {?} */
        const url = `/api/bpms/wf/v1.0/processrelease_frm`;
        /** @type {?} */
        const requestInfo = {
            dataChange: [],
            variableChange: null
        };
        return this.http.post(url, requestInfo);
    }
    /**
     * 流程审核：保存
     * @param {?} data
     * @return {?}
     */
    releaseSave(data) {
        /** @type {?} */
        const requestInfo = {
            dataChange: [data],
            variableChange: null
        };
        /** @type {?} */
        const url = `/api/bpms/wf/v1.0/processrelease_frm`;
        return this.http.put(url, requestInfo);
    }
    /**
     * @private
     * @return {?}
     */
    setProcessVariableContext() {
        this.processVariableContext = new Array();
        if (this.ProcessVariables && this.ProcessVariables.length > 0) {
            for (const v of this.ProcessVariables) {
                /** @type {?} */
                const varEntity = {
                    key: v.name,
                    name: v.documentation,
                    description: v.description
                };
                this.processVariableContext.push(varEntity);
            }
        }
    }
    /**
     * @param {?} helpId
     * @param {?} su
     * @return {?}
     */
    getHelpMetaData(helpId, su) {
        /** @type {?} */
        const url = `/api/runtime/lcm/v1.0/rt-metadatas/${helpId}`;
        return this.http.get(url);
    }
    /**
     * 获取框架的顶级window
     * 进行跨域封装
     * @private
     * @return {?}
     */
    getTopWindow() {
        /** @type {?} */
        let curWin = window.self;
        try {
            while (curWin.location.origin === curWin.parent.location.origin) {
                if (curWin !== curWin.parent && !((/** @type {?} */ (curWin))).isRTFTopWin) {
                    curWin = curWin.parent;
                }
                else {
                    break;
                }
            }
        }
        catch (e) { }
        return curWin;
    }
    // --------------------------0-------------------------
    // uiState初始
    /**
     * @return {?}
     */
    initUIState() {
        this.propertyConfig = [];
        this.propertyData = null;
        this.content = '';
        this.schemas = [];
    }
    /**
     * 获取所有审批节点信息
     * @param {?} data
     * @return {?}
     */
    getUserActList(data) {
        this.userActList = [];
        if (data && data.length > 0) {
            for (const userAct of data) {
                /** @type {?} */
                const userActInfo = {
                    Id: userAct.Id,
                    Name: userAct.NameLanguage ? (userAct.NameLanguage[this.localePipe.langCode] ? userAct.NameLanguage[this.localePipe.langCode] : userAct.Name) : userAct.Name,
                    ClrTypeID: userAct.ClrTypeID,
                    AssignmentStrategy: userAct.AssignmentStrategy
                };
                if (userAct.AssignmentStrategy === 'ASSIGN') {
                    userActInfo.AssignPerformerConfig = userAct.AssignPerformerConfig;
                }
                this.userActList.push(userActInfo);
            }
        }
    }
    /**
     * 获取所有结束节点信息
     * @param {?} data
     * @return {?}
     */
    getEndEventList(data) {
        this.allActList = [];
        if (data && data.length > 0) {
            for (const endEvent of data) {
                /** @type {?} */
                const endEventInfo = {
                    Id: endEvent.Id,
                    Name: endEvent.Name
                };
                // 取结束节点存到
                this.allActList.push(endEventInfo);
            }
        }
        // // 存入审批活动节点
        // this.allActList = this.allActList.concat(this.userActList);
    }
    /**
     * 获取所有知会活动节点信息
     * @param {?} data
     * @return {?}
     */
    getNotifyEventList(data) {
        this.NotifyActKist = [];
        if (data && data.length > 0) {
            for (const notifyEvent of data) {
                /** @type {?} */
                const notifyEventInfo = {
                    Id: notifyEvent.Id,
                    Name: notifyEvent.Name
                };
                // 取知会活动，消息节点存到
                this.NotifyActKist.push(notifyEventInfo);
            }
        }
    }
    //TODO: 只有审批\审批+人工\审批+人工+知会\审批、人工、子流程、信号捕获
    /**
     * 获取所有消息节点信息
     * @param {?} data
     * @return {?}
     */
    getMessageEventList(data) {
        this.MessageActList = [];
        if (data && data.length > 0) {
            for (const messageEvent of data) {
                /** @type {?} */
                const messageEventInfo = {
                    Id: messageEvent.Id,
                    Name: messageEvent.Name
                };
                // 取知会活动，消息节点存到
                this.MessageActList.push(messageEventInfo);
            }
        }
        // 存入审批活动节点
        this.MessageActList = this.MessageActList.concat(this.NotifyActKist);
        // 存入审批活动节点
        this.MessageActList = this.MessageActList.concat(this.userActList);
    }
    /**
     * @param {?} data
     * @return {?}
     */
    getSubAndCatchEventsList(data) {
        this.SubAndCatchActList = [];
        if (data && data.length > 0) {
            for (const subAndCatchEvent of data) {
                /** @type {?} */
                const subAndCatEventInfo = {
                    Id: subAndCatchEvent.Id,
                    Name: subAndCatchEvent.Name
                };
                // 取知会活动，消息节点存到
                this.SubAndCatchActList.push(subAndCatEventInfo);
            }
        }
    }
    /**
     * 获取当前流程启动方式
     * @param {?} data
     * @return {?}
     */
    getStartMode(data) {
        this.startMode = data;
    }
    /**
     * 添加上下文变量
     * @param {?} context
     * @return {?}
     */
    addContext(context) {
        if (this.procInstContext.length > 0) {
            for (const variable of this.procInstContext) {
                context.push(variable);
            }
        }
        if (this.formalParameterContext.length > 0) {
            for (const variable of this.formalParameterContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.participantContext.length > 0) {
            for (const variable of this.participantContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (this.processVariableContext.length > 0) {
            for (const variable of this.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        return context;
    }
}
ProcessDesignerUIState.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ProcessDesignerUIState.ctorParameters = () => [
    { type: HttpService },
    { type: WfLocalePipe }
];
if (false) {
    /** @type {?} */
    ProcessDesignerUIState.prototype.scene;
    /** @type {?} */
    ProcessDesignerUIState.prototype.rootPath;
    /** @type {?} */
    ProcessDesignerUIState.prototype.flowFormInfo;
    /** @type {?} */
    ProcessDesignerUIState.prototype.content;
    /** @type {?} */
    ProcessDesignerUIState.prototype.propertyConfig;
    /** @type {?} */
    ProcessDesignerUIState.prototype.propertyData;
    /** @type {?} */
    ProcessDesignerUIState.prototype.POST_MESSAGE_TARGET;
    /** @type {?} */
    ProcessDesignerUIState.prototype.BE;
    /** @type {?} */
    ProcessDesignerUIState.prototype.schemas;
    /** @type {?} */
    ProcessDesignerUIState.prototype.counterSignVariables;
    /** @type {?} */
    ProcessDesignerUIState.prototype.approvalItems;
    /** @type {?} */
    ProcessDesignerUIState.prototype.userActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.allActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.MessageActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.NotifyActKist;
    /** @type {?} */
    ProcessDesignerUIState.prototype.SubAndCatchActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.bizActivityId;
    /** @type {?} */
    ProcessDesignerUIState.prototype.enableAdminOrgAut;
    /** @type {?} */
    ProcessDesignerUIState.prototype.enableFlowFormAut;
    /** @type {?} */
    ProcessDesignerUIState.prototype.procDefId;
    /** @type {?} */
    ProcessDesignerUIState.prototype.time;
    /** @type {?} */
    ProcessDesignerUIState.prototype.isAdministratorConfig;
    /** @type {?} */
    ProcessDesignerUIState.prototype.administrator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.startMode;
    /** @type {?} */
    ProcessDesignerUIState.prototype.bpmnModel;
    /** @type {?} */
    ProcessDesignerUIState.prototype.assignIterator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.completeIterator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.completeIterator4Claim;
    /** @type {?} */
    ProcessDesignerUIState.prototype.boolIterator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.noJump4Sign;
    /** @type {?} */
    ProcessDesignerUIState.prototype.procInstContext;
    /** @type {?} */
    ProcessDesignerUIState.prototype.urgeContext;
    /**
     * 流程参数上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.formalParameterContext;
    /**
     * 参与者上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.participantContext;
    /**
     * 子活动上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.subActivityContext;
    /**
     * 子流程元素上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.subProcessElementContext;
    /**
     * 多实例启用条件上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.multiCounterSignVariables;
    /**
     * 活动构件参数上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.activityComponentContext;
    /** @type {?} */
    ProcessDesignerUIState.prototype.processVariableContext;
    /**
     * @type {?}
     * @private
     */
    ProcessDesignerUIState.prototype.processVariables;
    /**
     * 汇报级次
     * @type {?}
     */
    ProcessDesignerUIState.prototype.dimensions;
    /**
     * 启动方式
     * @type {?}
     */
    ProcessDesignerUIState.prototype.startModeIterator;
    /**
     * 显示终端
     * @type {?}
     */
    ProcessDesignerUIState.prototype.displayTerminal;
    /**
     * 消息渠道列表
     * @type {?}
     */
    ProcessDesignerUIState.prototype.messageChannels;
    /** @type {?} */
    ProcessDesignerUIState.prototype.orgTypeCollection;
    /**
     * @type {?}
     * @private
     */
    ProcessDesignerUIState.prototype.http;
    /**
     * @type {?}
     * @private
     */
    ProcessDesignerUIState.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,