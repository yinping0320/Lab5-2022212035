/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, TemplateRef, Optional, ChangeDetectorRef, LOCALE_ID, Inject } from '@angular/core';
import { Subject } from 'rxjs';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export class NoteComponent {
    /**
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(cdr, localeId, resources, localePipe) {
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.submit = new Subject();
        this.cancel = new Subject();
        this.placeholder = this.localePipe.transform('component.note.placeholder');
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.submit.next(this.record);
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.cancel.next();
    }
}
NoteComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-note',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <textarea class=\"form-control content-textarea\" style=\"height: 100%;\" [(ngModel)]=\"record\" [placeholder]=\"placeholder\"></textarea>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">{{'component.note.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.note.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
NoteComponent.ctorParameters = () => [
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
NoteComponent.propDecorators = {
    footer: [{ type: ViewChild, args: ['footer',] }]
};
if (false) {
    /** @type {?} */
    NoteComponent.prototype.footer;
    /** @type {?} */
    NoteComponent.prototype.record;
    /** @type {?} */
    NoteComponent.prototype.submit;
    /** @type {?} */
    NoteComponent.prototype.cancel;
    /** @type {?} */
    NoteComponent.prototype.placeholder;
    /**
     * @type {?}
     * @private
     */
    NoteComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    NoteComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    NoteComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    NoteComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL25vdGUvbm90ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsU0FBUyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxSCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQy9CLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQVdoRyxNQUFNLE9BQU8sYUFBYTs7Ozs7OztJQVd4QixZQUNvQixHQUFzQixFQUNmLFFBQWdCLEVBQ1IsU0FBYyxFQUM3QixVQUF3QjtRQUh4QixRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUNmLGFBQVEsR0FBUixRQUFRLENBQVE7UUFDUixjQUFTLEdBQVQsU0FBUyxDQUFLO1FBQzdCLGVBQVUsR0FBVixVQUFVLENBQWM7UUFUNUMsV0FBTSxHQUFHLElBQUksT0FBTyxFQUFVLENBQUM7UUFDL0IsV0FBTSxHQUFHLElBQUksT0FBTyxFQUFPLENBQUM7UUFFNUIsZ0JBQVcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1FBUXBFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLFlBQVksQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDNUUsQ0FBQzs7OztJQUVGLFFBQVE7SUFDUixDQUFDOzs7O0lBR0QsT0FBTztRQUNMLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDckIsQ0FBQzs7O1lBdENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsbXJCQUFvQztnQkFFcEMsU0FBUyxFQUFFO29CQUNSLFlBQVk7aUJBQ2Q7O2FBQ0Y7Ozs7WUFaNkQsaUJBQWlCLHVCQXlCNUUsUUFBUTt5Q0FDUixNQUFNLFNBQUMsU0FBUzs0Q0FDaEIsTUFBTSxTQUFDLGlCQUFpQjtZQXpCQyxZQUFZLHVCQTBCckMsUUFBUTs7O3FCQWJSLFNBQVMsU0FBQyxRQUFROzs7O0lBQW5CLCtCQUE4Qzs7SUFFOUMsK0JBQWU7O0lBRWYsK0JBQStCOztJQUMvQiwrQkFBNEI7O0lBRTVCLG9DQUFzRTs7Ozs7SUFHdEUsNEJBQTBDOzs7OztJQUMxQyxpQ0FBMkM7Ozs7O0lBQzNDLGtDQUFpRDs7Ozs7SUFDakQsbUNBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYsIE9wdGlvbmFsLCBDaGFuZ2VEZXRlY3RvclJlZiwgTE9DQUxFX0lELCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBXRl9MQU5HX1JFU09VUkNFUywgV2ZMb2NhbGVQaXBlIH0gZnJvbSAnLi4vLi4vaTE4bi9waXBlL3dmLXByb2Nlc3MtZWRpdG9yLWxvY2FsZS5waXBlJztcclxuaW1wb3J0IHsgV0ZfUFJPQ0VTU19FRElUT1JfTEFOR19SRVNPVVJDRVMgfSBmcm9tICcuLi8uLi9pMThuL2Fzc2V0cy9sYW5nLnJlc291cmNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLW5vdGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9ub3RlLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9ub3RlLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICAgV2ZMb2NhbGVQaXBlLFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5vdGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBAVmlld0NoaWxkKCdmb290ZXInKSBmb290ZXI6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gIHJlY29yZDogc3RyaW5nO1xyXG5cclxuICBzdWJtaXQgPSBuZXcgU3ViamVjdDxzdHJpbmc+KCk7XHJcbiAgY2FuY2VsID0gbmV3IFN1YmplY3Q8YW55PigpO1xyXG5cclxuICBwbGFjZWhvbGRlciA9IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5ub3RlLnBsYWNlaG9sZGVyJyk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gIEBPcHRpb25hbCgpIHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICBASW5qZWN0KExPQ0FMRV9JRCkgcHJpdmF0ZSBsb2NhbGVJZDogc3RyaW5nLFxyXG4gIEBJbmplY3QoV0ZfTEFOR19SRVNPVVJDRVMpIHByaXZhdGUgcmVzb3VyY2VzOiBhbnksXHJcbiAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBsb2NhbGVQaXBlOiBXZkxvY2FsZVBpcGVcclxuICApIHtcclxuICAgIHRoaXMubG9jYWxlUGlwZSA9IHRoaXMubG9jYWxlUGlwZSB8fCBuZXcgV2ZMb2NhbGVQaXBlKGxvY2FsZUlkLCByZXNvdXJjZXMpO1xyXG4gICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcblxyXG4gIGNsaWNrT0soKSB7XHJcbiAgICB0aGlzLnN1Ym1pdC5uZXh0KHRoaXMucmVjb3JkKTtcclxuICB9XHJcblxyXG4gIGNsaWNrQ2FuY2VsKCkge1xyXG4gICAgdGhpcy5jYW5jZWwubmV4dCgpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19