/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, TemplateRef, ViewChild, Input, Output, EventEmitter, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
export class ConstantEditComponent {
    /**
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(cdr, localeId, resources, localePipe) {
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        this.submitEmitter.emit(this.value);
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeEmitter.emit();
    }
}
ConstantEditComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-constant-edit',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <textarea class=\"form-control\" type=\"text\" value=\"message\" [(ngModel)]=\"value\"\r\n        name=\"message\" style=\"height: 100%;\"></textarea>\r\n      <div class=\"farris-feedback valid-feedback\"></div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">{{'component.optins.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.optins.clickOk' | wfLocale}}</button>\r\n</ng-template>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
ConstantEditComponent.ctorParameters = () => [
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
ConstantEditComponent.propDecorators = {
    footer: [{ type: ViewChild, args: ['footer',] }],
    closeEmitter: [{ type: Output }],
    submitEmitter: [{ type: Output }],
    value: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ConstantEditComponent.prototype.footer;
    /** @type {?} */
    ConstantEditComponent.prototype.closeEmitter;
    /** @type {?} */
    ConstantEditComponent.prototype.submitEmitter;
    /** @type {?} */
    ConstantEditComponent.prototype.value;
    /**
     * @type {?}
     * @private
     */
    ConstantEditComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    ConstantEditComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    ConstantEditComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    ConstantEditComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnQtZWRpdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL3ZhcmlhYmxlLXNldHRpbmcvdmlld3MvY29uc3RhbnQtZWRpdC9jb25zdGFudC1lZGl0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxXQUFXLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZKLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQVV0RyxNQUFNLE9BQU8scUJBQXFCOzs7Ozs7O0lBU2hDLFlBQ3NCLEdBQXNCLEVBQ2YsUUFBZ0IsRUFDUixTQUFjLEVBQzdCLFVBQXdCO1FBSHhCLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBQ2YsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUNSLGNBQVMsR0FBVCxTQUFTLENBQUs7UUFDN0IsZUFBVSxHQUFWLFVBQVUsQ0FBYztRQVRwQyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDdkMsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO0lBU2pELENBQUM7Ozs7SUFFTCxRQUFRO0lBQ1IsQ0FBQzs7OztJQUVELE9BQU87UUFDTCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzNCLENBQUM7OztZQWpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsK3ZCQUE2QztnQkFFN0MsU0FBUyxFQUFFO29CQUNSLFlBQVk7aUJBQ2Q7O2FBQ0Y7Ozs7WUFWZ0YsaUJBQWlCLHVCQXFCN0YsUUFBUTt5Q0FDUixNQUFNLFNBQUMsU0FBUzs0Q0FDaEIsTUFBTSxTQUFDLGlCQUFpQjtZQXRCRCxZQUFZLHVCQXVCbkMsUUFBUTs7O3FCQVhWLFNBQVMsU0FBQyxRQUFROzJCQUVsQixNQUFNOzRCQUNOLE1BQU07b0JBQ04sS0FBSzs7OztJQUpOLHVDQUE4Qzs7SUFFOUMsNkNBQWlEOztJQUNqRCw4Q0FBcUQ7O0lBQ3JELHNDQUNjOzs7OztJQUdaLG9DQUEwQzs7Ozs7SUFDMUMseUNBQTJDOzs7OztJQUMzQywwQ0FBaUQ7Ozs7O0lBQ2pELDJDQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdG9yUmVmLCBPcHRpb25hbCwgSW5qZWN0LCBMT0NBTEVfSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgV0ZfTEFOR19SRVNPVVJDRVMsIFdmTG9jYWxlUGlwZSB9IGZyb20gJy4uLy4uLy4uLy4uL2kxOG4vcGlwZS93Zi1wcm9jZXNzLWVkaXRvci1sb2NhbGUucGlwZSc7XHJcbmltcG9ydCB7IFdGX1BST0NFU1NfRURJVE9SX0xBTkdfUkVTT1VSQ0VTIH0gZnJvbSAnLi4vLi4vLi4vLi4vaTE4bi9hc3NldHMvbGFuZy5yZXNvdXJjZSc7XHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWNvbnN0YW50LWVkaXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25zdGFudC1lZGl0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9jb25zdGFudC1lZGl0LmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICAgV2ZMb2NhbGVQaXBlLFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIENvbnN0YW50RWRpdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2Zvb3RlcicpIGZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgQE91dHB1dCgpIGNsb3NlRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcbiAgQElucHV0KClcclxuICB2YWx1ZTogc3RyaW5nO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgIEBJbmplY3QoTE9DQUxFX0lEKSBwcml2YXRlIGxvY2FsZUlkOiBzdHJpbmcsXHJcbiAgICBASW5qZWN0KFdGX0xBTkdfUkVTT1VSQ0VTKSBwcml2YXRlIHJlc291cmNlczogYW55LFxyXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBsb2NhbGVQaXBlOiBXZkxvY2FsZVBpcGUsXHJcbiAgKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgfVxyXG5cclxuICBjbGlja09LKCkge1xyXG4gICAgdGhpcy5zdWJtaXRFbWl0dGVyLmVtaXQodGhpcy52YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBjbGlja0NhbmNlbCgpIHtcclxuICAgIHRoaXMuY2xvc2VFbWl0dGVyLmVtaXQoKTtcclxuICB9XHJcbn1cclxuIl19