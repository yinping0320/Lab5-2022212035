/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
export class ComponentEditLookUpService {
    /**
     * @param {?} http
     */
    constructor(http) {
        this.http = http;
    }
    /**
     * @param {?} url
     * @param {?=} params
     * @return {?}
     */
    getData(url, params) {
        /** @type {?} */
        const customData = params.customData;
        /** @type {?} */
        const index = params.pageIndex || 1;
        /** @type {?} */
        const size = params.pageSize || 20;
        /** @type {?} */
        const searchValue = params.searchValue;
        if (customData.helpId) {
            /** @type {?} */
            let query = `?helpId=${customData.helpId}&pageIndex=${index}&pageSize=${size}`;
            if (searchValue) {
                query += `&searchValue=${searchValue}`;
            }
            url += query;
            return this.http.get(url);
        }
    }
}
ComponentEditLookUpService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ComponentEditLookUpService.ctorParameters = () => [
    { type: HttpService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ComponentEditLookUpService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWVkaXQtbG9va3VwLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL3ZhcmlhYmxlLXNldHRpbmcvdmlld3MvY29tcG9uZW50LWVkaXQvY29tcG9uZW50LWVkaXQtbG9va3VwLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBS2xELE1BQU0sT0FBTywwQkFBMEI7Ozs7SUFDbkMsWUFDWSxJQUFpQjtRQUFqQixTQUFJLEdBQUosSUFBSSxDQUFhO0lBRTdCLENBQUM7Ozs7OztJQUVELE9BQU8sQ0FBQyxHQUFXLEVBQUUsTUFBcUI7O2NBQ2hDLFVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVTs7Y0FDOUIsS0FBSyxHQUFHLE1BQU0sQ0FBQyxTQUFTLElBQUksQ0FBQzs7Y0FDN0IsSUFBSSxHQUFHLE1BQU0sQ0FBQyxRQUFRLElBQUksRUFBRTs7Y0FDNUIsV0FBVyxHQUFHLE1BQU0sQ0FBQyxXQUFXO1FBQ3RDLElBQUksVUFBVSxDQUFDLE1BQU0sRUFBRTs7Z0JBQ2YsS0FBSyxHQUFHLFdBQVcsVUFBVSxDQUFDLE1BQU0sY0FBYyxLQUFLLGFBQWEsSUFBSSxFQUFFO1lBQzlFLElBQUksV0FBVyxFQUFFO2dCQUNiLEtBQUssSUFBSSxnQkFBZ0IsV0FBVyxFQUFFLENBQUM7YUFDMUM7WUFDRCxHQUFHLElBQUksS0FBSyxDQUFDO1lBQ2IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUM3QjtJQUNMLENBQUM7OztZQXBCSixVQUFVOzs7O1lBSkYsV0FBVzs7Ozs7OztJQU9aLDBDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSUxvb2t1cEh0dHBTZXJ2aWNlLCBMb29rdXBHcmlkUmVzdWx0LCBSZW1vdGVQYXJhbXMgfSBmcm9tICdAZmFycmlzL3VpLWxvb2t1cCc7XHJcbmltcG9ydCB7IEh0dHBTZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xyXG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBDb21wb25lbnRFZGl0TG9va1VwU2VydmljZSBpbXBsZW1lbnRzIElMb29rdXBIdHRwU2VydmljZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIGh0dHA6IEh0dHBTZXJ2aWNlLFxyXG4gICAgKSB7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGF0YSh1cmw6IHN0cmluZywgcGFyYW1zPzogUmVtb3RlUGFyYW1zKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgICAgICBjb25zdCBjdXN0b21EYXRhID0gcGFyYW1zLmN1c3RvbURhdGE7XHJcbiAgICAgICAgY29uc3QgaW5kZXggPSBwYXJhbXMucGFnZUluZGV4IHx8IDE7XHJcbiAgICAgICAgY29uc3Qgc2l6ZSA9IHBhcmFtcy5wYWdlU2l6ZSB8fCAyMDtcclxuICAgICAgICBjb25zdCBzZWFyY2hWYWx1ZSA9IHBhcmFtcy5zZWFyY2hWYWx1ZTtcclxuICAgICAgICBpZiAoY3VzdG9tRGF0YS5oZWxwSWQpIHtcclxuICAgICAgICAgICAgbGV0IHF1ZXJ5ID0gYD9oZWxwSWQ9JHtjdXN0b21EYXRhLmhlbHBJZH0mcGFnZUluZGV4PSR7aW5kZXh9JnBhZ2VTaXplPSR7c2l6ZX1gO1xyXG4gICAgICAgICAgICBpZiAoc2VhcmNoVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHF1ZXJ5ICs9IGAmc2VhcmNoVmFsdWU9JHtzZWFyY2hWYWx1ZX1gO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHVybCArPSBxdWVyeTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19