/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ActivityComponentUIState } from './activity-component.uistate';
import { ActivityComponentRepository } from './activity-component.repository';
import { MessagerService } from '@farris/ui-messager';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export class ActivityComponentViewModel {
    /**
     * @param {?} uistate
     * @param {?} repository
     * @param {?} messager
     * @param {?} localePipe
     */
    constructor(uistate, repository, messager, localePipe) {
        this.uistate = uistate;
        this.repository = repository;
        this.messager = messager;
        this.localePipe = localePipe;
    }
    /**
     * @return {?}
     */
    deleteRow() {
        if (this.uistate.curComponent) {
            if (this.uistate.curComponent.executionTime === 'LOADDATA') {
                this.messager.info(this.localePipe.transform('component.activityList.name'));
            }
            else {
                this.repository.removeComponent(this.uistate.curComponent.id);
            }
        }
        else {
            return;
        }
    }
    /**
     * @param {?} cpt
     * @return {?}
     */
    componentSelect(cpt) {
        if (cpt) {
            this.repository.addComponent(cpt);
        }
    }
    /**
     * @param {?} flowFormId
     * @param {?} bizActId
     * @return {?}
     */
    loadComponents(flowFormId, bizActId) {
        this.repository.loadComponents(flowFormId, bizActId);
    }
}
ActivityComponentViewModel.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ActivityComponentViewModel.ctorParameters = () => [
    { type: ActivityComponentUIState },
    { type: ActivityComponentRepository },
    { type: MessagerService },
    { type: WfLocalePipe }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.repository;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.messager;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHktY29tcG9uZW50LnZpZXdtb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvYWN0aXZpdHktY29tcG9uZW50L2FjdGl2aXR5LWNvbXBvbmVudC52aWV3bW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFHOUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUk3RSxNQUFNLE9BQU8sMEJBQTBCOzs7Ozs7O0lBRW5DLFlBQ1ksT0FBaUMsRUFDakMsVUFBdUMsRUFDdkMsUUFBeUIsRUFDekIsVUFBd0I7UUFIeEIsWUFBTyxHQUFQLE9BQU8sQ0FBMEI7UUFDakMsZUFBVSxHQUFWLFVBQVUsQ0FBNkI7UUFDdkMsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFDekIsZUFBVSxHQUFWLFVBQVUsQ0FBYztJQUNoQyxDQUFDOzs7O0lBRUwsU0FBUztRQUNMLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7WUFDM0IsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxhQUFhLEtBQUssVUFBVSxFQUFFO2dCQUN4RCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLENBQUM7YUFDaEY7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDakU7U0FDSjthQUFNO1lBQ0gsT0FBTztTQUNWO0lBQ0wsQ0FBQzs7Ozs7SUFDRCxlQUFlLENBQUMsR0FBaUI7UUFDN0IsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNyQztJQUNMLENBQUM7Ozs7OztJQUVELGNBQWMsQ0FBQyxVQUFrQixFQUFFLFFBQWdCO1FBQy9DLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN6RCxDQUFDOzs7WUE5QkosVUFBVTs7OztZQVBGLHdCQUF3QjtZQUN4QiwyQkFBMkI7WUFHM0IsZUFBZTtZQUNmLFlBQVk7Ozs7Ozs7SUFPYiw2Q0FBeUM7Ozs7O0lBQ3pDLGdEQUErQzs7Ozs7SUFDL0MsOENBQWlDOzs7OztJQUNqQyxnREFBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFjdGl2aXR5Q29tcG9uZW50VUlTdGF0ZSB9IGZyb20gJy4vYWN0aXZpdHktY29tcG9uZW50LnVpc3RhdGUnO1xyXG5pbXBvcnQgeyBBY3Rpdml0eUNvbXBvbmVudFJlcG9zaXRvcnkgfSBmcm9tICcuL2FjdGl2aXR5LWNvbXBvbmVudC5yZXBvc2l0b3J5JztcclxuaW1wb3J0IHsgQml6Q29tcG9uZW50RW50aXR5IH0gZnJvbSAnLi4vLi4vZG9tYWluL2VudGl0aWVzL2Jpei1jb21wb25lbnQuZW50aXR5JztcclxuaW1wb3J0IHsgR3NwQ29tcG9uZW50IH0gZnJvbSAnQGdzcC1jbXAvY29tbW9uLWNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBXZkxvY2FsZVBpcGUgfSBmcm9tICcuLi8uLi9pMThuL3BpcGUvd2YtcHJvY2Vzcy1lZGl0b3ItbG9jYWxlLnBpcGUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5cclxuZXhwb3J0IGNsYXNzIEFjdGl2aXR5Q29tcG9uZW50Vmlld01vZGVsIHtcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJpdmF0ZSB1aXN0YXRlOiBBY3Rpdml0eUNvbXBvbmVudFVJU3RhdGUsXHJcbiAgICAgICAgcHJpdmF0ZSByZXBvc2l0b3J5OiBBY3Rpdml0eUNvbXBvbmVudFJlcG9zaXRvcnksXHJcbiAgICAgICAgcHJpdmF0ZSBtZXNzYWdlcjogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgICAgIHByaXZhdGUgbG9jYWxlUGlwZTogV2ZMb2NhbGVQaXBlXHJcbiAgICApIHsgfVxyXG5cclxuICAgIGRlbGV0ZVJvdygpIHtcclxuICAgICAgICBpZiAodGhpcy51aXN0YXRlLmN1ckNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy51aXN0YXRlLmN1ckNvbXBvbmVudC5leGVjdXRpb25UaW1lID09PSAnTE9BRERBVEEnKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VyLmluZm8odGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50LmFjdGl2aXR5TGlzdC5uYW1lJykpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZXBvc2l0b3J5LnJlbW92ZUNvbXBvbmVudCh0aGlzLnVpc3RhdGUuY3VyQ29tcG9uZW50LmlkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb21wb25lbnRTZWxlY3QoY3B0OiBHc3BDb21wb25lbnQpIHtcclxuICAgICAgICBpZiAoY3B0KSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVwb3NpdG9yeS5hZGRDb21wb25lbnQoY3B0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbG9hZENvbXBvbmVudHMoZmxvd0Zvcm1JZDogc3RyaW5nLCBiaXpBY3RJZDogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5yZXBvc2l0b3J5LmxvYWRDb21wb25lbnRzKGZsb3dGb3JtSWQsIGJpekFjdElkKTtcclxuICAgIH1cclxufVxyXG4iXX0=