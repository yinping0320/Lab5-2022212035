/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, EventEmitter, Inject, LOCALE_ID, Optional, Output, TemplateRef, ViewChild } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export class ActivityListComponent {
    /**
     * @param {?} designerUIState
     * @param {?} message
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(designerUIState, message, cdr, localeId, resources, localePipe) {
        this.designerUIState = designerUIState;
        this.message = message;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
        this.multiSelect = true;
        this.showCheckbox = true;
        this.data = new Array();
        this.columns = [
            { title: this.localePipe.transform('component.activityList.name'), field: 'Name', width: 60 },
            { title: 'ID', field: 'Id', width: 90 }
        ];
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.data = this.designerUIState.userActList;
    }
    /**
     * @return {?}
     */
    clickOK() {
        /** @type {?} */
        const result = this.grid.checkeds;
        if (!result || result.length === 0) {
            this.message.info(this.localePipe.transform('component.activityList.checkeds'));
            return;
        }
        this.submitEmitter.emit(result);
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeEmitter.emit();
    }
}
ActivityListComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-activity-list',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"data\" [columns]=\"columns\" [idField]=\"'Id'\" [fit]=\"true\" [fitColumns]=\"true\"\r\n         [pagination]=\"false\" [showCheckbox]=\"showCheckbox\" [multiSelect]=\"multiSelect\" [showLineNumber]=\"true\" lineNumberTitle=\"{{'component.activityList.checkeds' | wfLocale}}\"\r\n         [lineNumberWidth]=\"50\" [checkOnSelect]=\"true\" [selectOnCheck]=\"true\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #buttonRef>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">{{'component.activityList.clickCancel' | wfLocale}}</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">{{'component.activityList.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
ActivityListComponent.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: MessagerService },
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
ActivityListComponent.propDecorators = {
    closeEmitter: [{ type: Output }],
    submitEmitter: [{ type: Output }],
    buttonRef: [{ type: ViewChild, args: ['buttonRef',] }],
    grid: [{ type: ViewChild, args: ['grid',] }]
};
if (false) {
    /** @type {?} */
    ActivityListComponent.prototype.closeEmitter;
    /** @type {?} */
    ActivityListComponent.prototype.submitEmitter;
    /** @type {?} */
    ActivityListComponent.prototype.buttonRef;
    /** @type {?} */
    ActivityListComponent.prototype.grid;
    /** @type {?} */
    ActivityListComponent.prototype.multiSelect;
    /** @type {?} */
    ActivityListComponent.prototype.showCheckbox;
    /** @type {?} */
    ActivityListComponent.prototype.data;
    /** @type {?} */
    ActivityListComponent.prototype.columns;
    /**
     * @type {?}
     * @private
     */
    ActivityListComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    ActivityListComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    ActivityListComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    ActivityListComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    ActivityListComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    ActivityListComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHktbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL2FjdGl2aXR5LWxpc3QvYWN0aXZpdHktbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQVUsUUFBUSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hKLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFXaEcsTUFBTSxPQUFPLHFCQUFxQjs7Ozs7Ozs7O0lBZWhDLFlBQ1UsZUFBdUMsRUFDdkMsT0FBd0IsRUFDWixHQUFzQixFQUNmLFFBQWdCLEVBQ1IsU0FBYyxFQUM3QixVQUF3QjtRQUxwQyxvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7UUFDdkMsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFDWixRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUNmLGFBQVEsR0FBUixRQUFRLENBQVE7UUFDUixjQUFTLEdBQVQsU0FBUyxDQUFLO1FBQzdCLGVBQVUsR0FBVixVQUFVLENBQWM7UUFuQnBDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN2QyxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFJbEQsZ0JBQVcsR0FBRyxJQUFJLENBQUM7UUFDbkIsaUJBQVksR0FBRyxJQUFJLENBQUM7UUFDcEIsU0FBSSxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFDbkIsWUFBTyxHQUFHO1lBQ1IsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsNkJBQTZCLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7WUFDN0YsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRTtTQUN4QyxDQUFDO1FBVUEsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksWUFBWSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM3RSxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxXQUFXLENBQUM7SUFDL0MsQ0FBQzs7OztJQUVELE9BQU87O2NBQ0MsTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUTtRQUNqQyxJQUFJLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLGlDQUFpQyxDQUFDLENBQUMsQ0FBQztZQUNoRixPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7O1lBakRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixrL0JBQTZDO2dCQUU3QyxTQUFTLEVBQUU7b0JBQ1IsWUFBWTtpQkFDZDs7YUFDRjs7OztZQVhRLHNCQUFzQjtZQUR0QixlQUFlO1lBRmYsaUJBQWlCLHVCQWlDckIsUUFBUTt5Q0FDUixNQUFNLFNBQUMsU0FBUzs0Q0FDaEIsTUFBTSxTQUFDLGlCQUFpQjtZQS9CRCxZQUFZLHVCQWdDbkMsUUFBUTs7OzJCQW5CVixNQUFNOzRCQUNOLE1BQU07d0JBQ04sU0FBUyxTQUFDLFdBQVc7bUJBQ3JCLFNBQVMsU0FBQyxNQUFNOzs7O0lBSGpCLDZDQUFpRDs7SUFDakQsOENBQWtEOztJQUNsRCwwQ0FBb0Q7O0lBQ3BELHFDQUEyQzs7SUFFM0MsNENBQW1COztJQUNuQiw2Q0FBb0I7O0lBQ3BCLHFDQUFtQjs7SUFDbkIsd0NBR0U7Ozs7O0lBR0EsZ0RBQStDOzs7OztJQUMvQyx3Q0FBZ0M7Ozs7O0lBQ2hDLG9DQUEwQzs7Ozs7SUFDMUMseUNBQTJDOzs7OztJQUMzQywwQ0FBaUQ7Ozs7O0lBQ2pELDJDQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5qZWN0LCBMT0NBTEVfSUQsIE9uSW5pdCwgT3B0aW9uYWwsIE91dHB1dCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZENvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuaW1wb3J0IHsgUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSB9IGZyb20gJy4uLy4uL2FwcC9wcm9jZXNzLWRlc2lnbmVyLnVpc3RhdGUnO1xyXG5pbXBvcnQgeyBXRl9MQU5HX1JFU09VUkNFUywgV2ZMb2NhbGVQaXBlIH0gZnJvbSAnLi4vLi4vaTE4bi9waXBlL3dmLXByb2Nlc3MtZWRpdG9yLWxvY2FsZS5waXBlJztcclxuaW1wb3J0IHsgV0ZfUFJPQ0VTU19FRElUT1JfTEFOR19SRVNPVVJDRVMgfSBmcm9tICcuLi8uLi9pMThuL2Fzc2V0cy9sYW5nLnJlc291cmNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWFjdGl2aXR5LWxpc3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hY3Rpdml0eS1saXN0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hY3Rpdml0eS1saXN0LmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICAgV2ZMb2NhbGVQaXBlLFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEFjdGl2aXR5TGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBPdXRwdXQoKSBjbG9zZUVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICBAT3V0cHV0KCkgc3VibWl0RW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBWaWV3Q2hpbGQoJ2J1dHRvblJlZicpIGJ1dHRvblJlZjogVGVtcGxhdGVSZWY8YW55PjtcclxuICBAVmlld0NoaWxkKCdncmlkJykgZ3JpZDogRGF0YWdyaWRDb21wb25lbnQ7XHJcblxyXG4gIG11bHRpU2VsZWN0ID0gdHJ1ZTtcclxuICBzaG93Q2hlY2tib3ggPSB0cnVlO1xyXG4gIGRhdGEgPSBuZXcgQXJyYXkoKTtcclxuICBjb2x1bW5zID0gW1xyXG4gICAgeyB0aXRsZTogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50LmFjdGl2aXR5TGlzdC5uYW1lJyksIGZpZWxkOiAnTmFtZScsIHdpZHRoOiA2MCB9LFxyXG4gICAgeyB0aXRsZTogJ0lEJywgZmllbGQ6ICdJZCcsIHdpZHRoOiA5MCB9XHJcbiAgXTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGRlc2lnbmVyVUlTdGF0ZTogUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSxcclxuICAgIHByaXZhdGUgbWVzc2FnZTogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgQEluamVjdChMT0NBTEVfSUQpIHByaXZhdGUgbG9jYWxlSWQ6IHN0cmluZyxcclxuICAgIEBJbmplY3QoV0ZfTEFOR19SRVNPVVJDRVMpIHByaXZhdGUgcmVzb3VyY2VzOiBhbnksXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGxvY2FsZVBpcGU6IFdmTG9jYWxlUGlwZVxyXG4gICkge1xyXG4gICAgdGhpcy5sb2NhbGVQaXBlID0gdGhpcy5sb2NhbGVQaXBlIHx8IG5ldyBXZkxvY2FsZVBpcGUobG9jYWxlSWQsIHJlc291cmNlcyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuZGF0YSA9IHRoaXMuZGVzaWduZXJVSVN0YXRlLnVzZXJBY3RMaXN0O1xyXG4gIH1cclxuXHJcbiAgY2xpY2tPSygpIHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZ3JpZC5jaGVja2VkcztcclxuICAgIGlmICghcmVzdWx0IHx8IHJlc3VsdC5sZW5ndGggPT09IDApIHtcclxuICAgICAgdGhpcy5tZXNzYWdlLmluZm8odGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50LmFjdGl2aXR5TGlzdC5jaGVja2VkcycpKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zdWJtaXRFbWl0dGVyLmVtaXQocmVzdWx0KTtcclxuICB9XHJcblxyXG4gIGNsaWNrQ2FuY2VsKCkge1xyXG4gICAgdGhpcy5jbG9zZUVtaXR0ZXIuZW1pdCgpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19