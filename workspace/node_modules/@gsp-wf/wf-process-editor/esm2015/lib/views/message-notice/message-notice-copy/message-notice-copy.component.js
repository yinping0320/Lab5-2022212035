/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, TemplateRef, EventEmitter, Output, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { DialogComponent } from '@farris/ui-dialog';
import { LookupGridComponent } from '@farris/ui-lookup';
import { MessagerService } from '@farris/ui-messager';
import { of } from 'rxjs';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { MessageNoticeBatchSet } from '../message-notice-batchSet';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
export class MessageNoticeCopyComponent {
    /**
     * @param {?} uistate
     * @param {?} message
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(uistate, message, cdr, localeId, resources, localePipe) {
        this.uistate = uistate;
        this.message = message;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
        this.cols = [
            { title: this.localePipe.transform('component.MessageNotice.name'), field: 'Name', width: 60, searchField: 'Name' },
            { title: 'ID', field: 'Id', width: 90, searchField: 'Id' }
        ];
        // ==========================================================
        this.actis = [];
        this.fullActis = [];
        this.pageInfo = {
            pageIndex: 1,
            pageList: [10, 20, 30, 50],
            pageSize: 20
        };
        this.messageNotice = [];
        this.messageNoticeValue = [];
        this.targetNodeID = [];
        this.activitySendTime = [
            { value: 'WORKITEM_CREATED', text: this.localePipe.transform('component.MessageNotice.workCreated') },
            { value: 'ACTIVITY_COMPLETED', text: this.localePipe.transform('component.MessageNotice.actComplete') },
            { value: 'ACTIVITY_ABORTED', text: this.localePipe.transform('component.MessageNotice.actAborted') },
        ];
        this.columns = [
            {
                field: 'subject', width: 100, title: this.localePipe.transform('component.MessageNotice.subject'),
            }, {
                field: 'content', width: 150, title: this.localePipe.transform('component.MessageNotice.content'), showTips: true,
            }, {
                field: 'sendTime', width: 100, title: this.localePipe.transform('component.MessageNotice.sendTime'),
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.activitySendTime }
                },
            }, {
                field: 'sendType', width: 100, title: this.localePipe.transform('component.MessageNotice.sendType'),
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'name', data: this.uistate.messageChannels.map((/**
                         * @param {?} m
                         * @return {?}
                         */
                        m => ({ value: m.code, name: m.name }))) }
                },
            }, {
                field: 'receiverText', width: 120, title: this.localePipe.transform('component.MessageNotice.receiverText'), showTips: true
            }
        ];
        this.actisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            for (const r of rowData) {
                this.targetNodeID.push(r.Id);
            }
            return of({
                closeDialog: true
            });
        });
        this.paramAfterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        (rowIndex, rowData, column) => {
            console.log(rowData);
            console.log(rowIndex);
            return of(true);
        });
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} e
     * @return {?}
     */
    endEdit(e) {
        console.log(e);
    }
    /**
     * @return {?}
     */
    get messageNotices() {
        return this.messageNotice;
    }
    /**
     * @param {?} m
     * @return {?}
     */
    set messageNotices(m) {
        this.messageNotice = m;
    }
    /**
     * @return {?}
     */
    clickOK() {
        if (!this.targetNodeID && this.targetNodeID.length === 0) {
            this.message.info(this.localePipe.transform('component.MessageNotice.noTargetNode'));
            return;
        }
        if (!this.messageNotice && this.messageNotice.length === 0) {
            this.message.info(this.localePipe.transform('component.MessageNotice.noMessageNotifyAttribute'));
            return;
        }
        /** @type {?} */
        const batchSetValue = new MessageNoticeBatchSet();
        batchSetValue.messageNotice = this.messageNotice;
        batchSetValue.targetNodeID = this.targetNodeID;
        batchSetValue.isBatchCopy = true;
        /** @type {?} */
        const object = { value: batchSetValue, parameters: null };
        this.submitEmitter.emit(object);
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeEmitter.emit();
    }
}
MessageNoticeCopyComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-message-notice-copy',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <form class=\"h-100\">\r\n          <div class=\"f-utils-fill-flex-column h-100\">\r\n            <!-- \u53EF\u9009\u8282\u70B9\u76EE\u6807\u5C0F\u6807\u9898 -->\r\n            <div class=\"mx-2 mt-1\">\r\n              <div class=\"title-content\">\r\n                <h4 class=\"title-text\">{{'component.messageNoticeEdit.optionalNodes'|wfLocale}}</h4><span class=\"title-line\"></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-2 mx-4 farris-form-controls-inline\">\r\n              <div class=\"farris-group-wrap\">\r\n                <!-- \u9644\u52A0\u8282\u70B9\u5E2E\u52A9 -->\r\n                <farris-lookup-grid #userActisDialog [items]=\"uistate.userActList\" [columns]=\"cols\" [resizable]=\"true\"\r\n                  [singleSelect]=\"false\" [idField]=\"'Id'\" [textField]=\"'Name'\" [(ngModel)]=\"actis\" [valueField]=\"'Id'\"\r\n                  [pagination]=\"false\" [pageIndex]=\"pageInfo.pageIndex\" name=\"defaultActivities\"\r\n                  [pageSize]=\"pageInfo.pageSize\" [pageList]=\"pageInfo.pageList\" [total]=\"total\" [enableClear]=\"false\"\r\n                  title=\"{{'component.messageNoticeEdit.targetNodeList'|wfLocale}}\" [displayType]=\"'List'\" [remoteSearch]='false' [enableToSelect]=\"false\"\r\n                  placeholder=\"{{'component.messageNoticeEdit.placeholder'|wfLocale}}\" [dictPicked]=\"actisSelect\" [nosearch]=\"true\" [showFilterBar]=\"false\">\r\n                </farris-lookup-grid>\r\n              </div>\r\n            </div>\r\n            <!-- \u53EF\u9009\u5C5E\u6027\u76EE\u6807\u5C0F\u6807\u9898 -->\r\n            <div class=\"mx-2 mt-1\">\r\n              <div class=\"title-content\">\r\n                <h4 class=\"title-text\">{{'component.messageNoticeEdit.optionalAttribute'|wfLocale}}</h4><span class=\"title-line\"></span>\r\n              </div>\r\n            </div>\r\n            <!-- \u6D88\u606F\u901A\u77E5\u5C5E\u6027 -->\r\n            <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n              <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n                <farris-datagrid #grid [data]=\"messageNotices\" [columns]=\"columns\" [idField]=\"'id'\" [fit]=\"true\"\r\n                  [fitColumns]=\"true\" [editable]=\"false\" [pagination]=\"false\" [showCheckbox]=\"false\"\r\n                  [multiSelect]=\"false\" [showLineNumber]=\"true\" lineNumberTitle=\"{{'component.messageNoticeEdit.lineNumber'|wfLocale}}\" [lineNumberWidth]=\"50\"\r\n                  [striped]=\"true\" [showAllCheckbox]=\"false\" [afterEdit]=\"paramAfterEdit\" (endEdit)=\"endEdit($event)\">\r\n                </farris-datagrid>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">{{'component.messageNoticeEdit.clickCancel'|wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.messageNoticeEdit.clickOK'|wfLocale}}</button>\r\n</ng-template>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [".title-content{color:#000;display:inline-flex;align-items:center;line-height:1.375rem;position:relative;overflow:hidden;padding:0 0 0 1rem;min-width:760px}.title-content ::before{content:'';width:.25rem;height:1.125rem;background:#59a1ff;border-radius:1px;position:absolute;top:50%;left:0;margin-top:-.5625rem}.title-text{font-size:1rem;line-height:1.375rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-bottom:0;margin-right:10px}.title-line{flex-grow:1;border-bottom:1px dashed rgba(0,0,0,.1)}"]
            }] }
];
/** @nocollapse */
MessageNoticeCopyComponent.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: MessagerService },
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
MessageNoticeCopyComponent.propDecorators = {
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    closeEmitter: [{ type: Output }],
    submitEmitter: [{ type: Output }],
    allActisTable: [{ type: ViewChild, args: ['allActisTable',] }],
    allActisDialog: [{ type: ViewChild, args: ['allActisDialog',] }],
    actTable: [{ type: ViewChild, args: ['actTable',] }],
    lookup: [{ type: ViewChild, args: ['lookup',] }]
};
if (false) {
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.modalFooter;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.closeEmitter;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.submitEmitter;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.allActisTable;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.allActisDialog;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.actTable;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.lookup;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.cols;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.actis;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.fullActis;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.pageInfo;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.total;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.messageNotice;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.messageNoticeValue;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.targetNodeID;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.activitySendTime;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.columns;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.actisSelect;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.paramAfterEdit;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,