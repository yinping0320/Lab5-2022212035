/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ViewChild, TemplateRef, Input, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { UrgeHandleRule } from './urge-handle-rule';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
import { SmsMessageTemplate } from '../sms-message-template/sms-message-template';
import { SmsMessageTemplateComponent } from '../sms-message-template/sms-message-template.component';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export class UrgeHandleRuleComponent {
    /**
     * @param {?} designerUIState
     * @param {?} expr
     * @param {?} message
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(designerUIState, expr, message, cdr, localeId, resources, localePipe) {
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.message = message;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.groupIcon2 = '<i class="f-icon f-icon-lookup"></i>';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.urgeHandleRule = new UrgeHandleRule();
        this.typeGroup = this.designerUIState.messageChannels.map((/**
         * @param {?} m
         * @return {?}
         */
        m => ({ value: m.code, name: m.name })));
        this.modalConfig = {
            title: this.localePipe.transform("component.urgeHandleRule.urgeHandle"),
            width: 800,
            height: 515,
            showButtons: true
        };
        this.hasSmsTemplate = false;
        this.parser = (/**
         * @param {?} val
         * @return {?}
         */
        (val) => {
            return Number(val);
        });
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set value(data) {
        if (!data) {
            this.urgeHandleRule.urgeHandleAble = true;
            this.urgeHandleRule.earlyTime = 0;
            this.urgeHandleRule.intervalTime = 0;
            this.urgeHandleRule.sendType = 'cloudplus,inmail';
            this.urgeHandleRule.urgeMessageSubject = `{\"expr\":\"'${this.localePipe.transform("component.urgeHandleRule.urgentApproval")}' + DefaultFunction.GetContextParameter(\\\"bizDefName\\\")\",\"sexpr\":\"\"}`;
            this.urgeHandleRule.urgeMessageContent = `{\"expr\":\"'${this.localePipe.transform("component.urgeHandleRule.pleaseApprove")}' + DefaultFunction.GetContextParameter(\\\"procInstCreatorName\\\") + '${this.localePipe.transform("component.urgeHandleRule.soOn")}' + DefaultFunction.GetContextParameter(\\\"bizDefName\\\") + '。'\",\"sexpr\":\"\"}`;
        }
        else {
            this.urgeHandleRule = data;
            if (this.hasSmsMessage(this.urgeHandleRule.sendType)) {
                this.hasSmsTemplate = true;
                if (!this.urgeHandleRule.smsMessageTemplate) {
                    this.urgeHandleRule.smsMessageTemplate = new SmsMessageTemplate();
                }
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        if (this.SmsTemplate) {
            this.SmsTemplate.endGridEdit();
        }
        if (this.hasSmsTemplate) {
            this.urgeHandleRule.smsMessageTemplate = this.SmsTemplate.smsMessageTemplate;
            if (this.urgeHandleRule.smsMessageTemplate.smsMessageVariables && this.urgeHandleRule.smsMessageTemplate.smsMessageVariables.length > 0) {
                this.urgeHandleRule.smsMessageTemplate.smsMessageVariables = this.urgeHandleRule.smsMessageTemplate.smsMessageVariables.filter((/**
                 * @param {?} variable
                 * @return {?}
                 */
                variable => variable.code));
            }
        }
        else {
            this.urgeHandleRule.smsMessageTemplate = null;
        }
        if (this.validator()) {
            /** @type {?} */
            const object = { value: this.urgeHandleRule, parameters: null };
            this.submitModal.emit(object);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeModal.emit();
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        if (!this.urgeHandleRule.sendType) {
            this.message.info(this.localePipe.transform("component.urgeHandleRule.noSendingMethod"));
            return false;
        }
        //去除消息模板编号校验
        // if (this.hasSmsTemplate) {
        //   if (!this.urgeHandleRule.smsMessageTemplate) {
        //     this.message.info(this.localePipe.transform("component.urgeHandleRule.setMessageTemplate"));
        //     return;
        //   }
        //   if (!this.urgeHandleRule.smsMessageTemplate.code) {
        //     this.message.info(this.localePipe.transform("component.urgeHandleRule.codeEmpty"));
        //     return;
        //   }
        // }
        if (!this.urgeHandleRule.urgeMessageSubject) {
            this.message.info(this.localePipe.transform("component.urgeHandleRule.noMessageSubject"));
            return false;
        }
        if (!this.urgeHandleRule.urgeMessageContent) {
            this.message.info(this.localePipe.transform("component.urgeHandleRule.noMessageContent"));
            return false;
        }
        if (!this.urgeHandleRule.earlyTime && this.urgeHandleRule.earlyTime !== 0) {
            this.message.info(this.localePipe.transform("component.urgeHandleRule.earliestTimeNotEmpty"));
            return false;
        }
        if (!this.urgeHandleRule.intervalTime && this.urgeHandleRule.intervalTime !== 0) {
            this.message.info(this.localePipe.transform("component.urgeHandleRule.minimumTimeNotEmpty"));
            return false;
        }
        return true;
    }
    /**
     * @param {?} sendType
     * @return {?}
     */
    sendTypeChange(sendType) {
        if (this.hasSmsMessage(sendType)) {
            this.hasSmsTemplate = true;
            if (!this.urgeHandleRule.smsMessageTemplate) {
                this.urgeHandleRule.smsMessageTemplate = new SmsMessageTemplate();
            }
        }
        else {
            this.hasSmsTemplate = false;
            this.urgeHandleRule.smsMessageTemplate = null;
        }
    }
    /**
     * @param {?} data
     * @return {?}
     */
    titleExpr(data) {
        this.showTitleHelp(data);
    }
    /**
     * @param {?} data
     * @return {?}
     */
    contentExpr(data) {
        this.showContentHelp(data);
    }
    /**
     * @param {?} data
     * @return {?}
     */
    showTitleHelp(data) {
        /** @type {?} */
        const context = this.showExpr();
        if (this.urgeHandleRule.urgeMessageSubject && this.urgeHandleRule.urgeMessageSubject.length > 0) {
            this.expr.addExpressionText(this.urgeHandleRule.urgeMessageSubject);
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        (expressionInfo) => {
            this.urgeHandleRule.urgeMessageSubject = expressionInfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                y => y.key === x.key))));
            }
        }));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    showContentHelp(data) {
        /** @type {?} */
        const context = this.showExpr();
        if (this.urgeHandleRule.urgeMessageContent && this.urgeHandleRule.urgeMessageContent.length > 0) {
            this.expr.addExpressionText(this.urgeHandleRule.urgeMessageContent);
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        (expressionInfo) => {
            this.urgeHandleRule.urgeMessageContent = expressionInfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                y => y.key === x.key))));
            }
        }));
    }
    /**
     * @return {?}
     */
    showExpr() {
        // this.expr.clearContext();
        if (this.designerUIState.schemas.length > 0) {
            for (const schema of this.designerUIState.schemas) {
                // this.expr.addCommonObject(co);
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        const context = new Array();
        if (this.designerUIState.urgeContext.length > 0) {
            for (const variable of this.designerUIState.urgeContext) {
                context.push(variable);
                // this.expr.addContext(variable);
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            for (const variable of this.designerUIState.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (this.designerUIState.subActivityContext.length > 0) {
            for (const variable of this.designerUIState.subActivityContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        return context;
    }
    /**
     * @private
     * @param {?} sendType
     * @return {?}
     */
    hasSmsMessage(sendType) {
        if (sendType) {
            /** @type {?} */
            const sendTypeList = sendType.split(',');
            /** @type {?} */
            let messageChannel = sendTypeList.find((/**
             * @param {?} val
             * @return {?}
             */
            val => this.designerUIState.messageChannels.find((/**
             * @param {?} channel
             * @return {?}
             */
            channel => channel.code == val && channel.channelType == 'Sms'))));
            if (messageChannel) {
                return true;
            }
            else {
                return false;
            }
        }
        else {
            return false;
        }
    }
}
UrgeHandleRuleComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-urge-handle-rule',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <perfect-scrollbar [config]=\"{}\">\r\n      <form class=\"h-100\">\r\n        <div class=\"f-form-layout farris-form farris-form-controls-inline farris-form-auto\">\r\n          <fieldset class=\"f-section-formgroup\">\r\n            <div class=\"f-section-formgroup-inputs\">\r\n              <div class=\"col-12 mt-2\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-info text-danger\">*</span>\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.enableUrgeHandle' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap ml-1\">\r\n                      <farris-switch [(ngModel)]=\"urgeHandleRule.urgeHandleAble\" name=\"urgeHandleEnable\"></farris-switch>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-10 mt-2\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-info text-danger\">*</span>\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.timeSetting' | wfLocale}}</span>\r\n                    </label>\r\n                    <label class=\"mb-0\">\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.earliestTime' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\" style=\"width: 300px;\">\r\n                      <farris-number-spinner [(ngModel)]=\"urgeHandleRule.earlyTime\" name=\"earlyTime\" [editable]=\"true\" [precision]=\"0\"\r\n                        [parser]=\"parser\" [min]=\"0\"></farris-number-spinner>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-10\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-text\"></span>\r\n                    </label>\r\n                    <label class=\"mb-0\">\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.minimumInterval' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\" style=\"width: 300px;\">\r\n                      <farris-number-spinner [(ngModel)]=\"urgeHandleRule.intervalTime\" name=\"intervalTime\" [editable]=\"true\" [precision]=\"0\"\r\n                        [parser]=\"parser\" [min]=\"0\"></farris-number-spinner>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 mt-2\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-info text-danger\">*</span>\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.sendingMethod' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-checkboxgroup #checkboxGroup [(ngModel)]=\"urgeHandleRule.sendType\" name=\"sendType\" [horizontal]=\"true\"\r\n                        [data]=\"typeGroup\" (changeValue)=\"sendTypeChange($event)\">\r\n                      </farris-checkboxgroup>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 mt-2\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-info text-danger\">*</span>\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.messageSubject' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\" style=\"width: 300px;\">\r\n                      <input-group [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                                    [(value)]=\"urgeHandleRule.urgeMessageSubject\" (clickHandle)=\"titleExpr($event)\">\r\n                      </input-group>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.supportEditing' | wfLocale}}</span>\r\n                    </label>\r\n                    <!-- 2023-6-14 \u5728\u6D4B\u8BD5\u73AF\u5883\u4E2D\u51FA\u73B0\u6309\u94AE\u9760\u6700\u53F3\u7684\u60C5\u51B5\uFF0C\u5220\u9664style=\"text-align: right\"\u540E\u6B63\u5E38 -->\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-switch [(ngModel)]=\"urgeHandleRule.subjectEditable\" name=\"enable1\" size=\"small\"></farris-switch>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 mt-2\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-info text-danger\">*</span>\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.messageContent' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\" style=\"width: 300px;\">\r\n                      <input-group [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                                    [(value)]=\"urgeHandleRule.urgeMessageContent\" (clickHandle)=\"contentExpr($event)\">\r\n                      </input-group>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.supportEditing' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-switch [(ngModel)]=\"urgeHandleRule.contentEditable\" name=\"enable2\" size=\"small\"></farris-switch>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 mt-2\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-text\">{{'component.urgeHandleRule.displayReminder' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\">\r\n                      <farris-switch [(ngModel)]=\"urgeHandleRule.addReminder\" name=\"enable\" size=\"small\"></farris-switch>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n        <lib-sms-message-template *ngIf=\"hasSmsTemplate\" [smsMessageTemplate]=\"urgeHandleRule.smsMessageTemplate\"></lib-sms-message-template>\r\n      </form>\r\n    </perfect-scrollbar>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">{{'component.urgeHandleRule.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">{{'component.urgeHandleRule.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
UrgeHandleRuleComponent.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: ExpressionService },
    { type: MessagerService },
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
UrgeHandleRuleComponent.propDecorators = {
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    SmsTemplate: [{ type: ViewChild, args: [SmsMessageTemplateComponent,] }],
    value: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.groupIcon2;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.closeModal;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.submitModal;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.modalFooter;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.SmsTemplate;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.urgeHandleRule;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.typeGroup;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.modalConfig;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.hasSmsTemplate;
    /** @type {?} */
    UrgeHandleRuleComponent.prototype.parser;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleComponent.prototype.localePipe;
}
export class UrgeHandleRuleConverter {
    /**
     * @param {?} localePipe
     */
    constructor(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (!data) {
            return this.localePipe.transform("component.urgeHandleRule.set");
        }
        else if (data.urgeHandleAble) {
            return this.localePipe.transform("component.urgeHandleRule.set");
        }
        else {
            return this.localePipe.transform("component.urgeHandleRule.notSet");
        }
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    UrgeHandleRuleConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,