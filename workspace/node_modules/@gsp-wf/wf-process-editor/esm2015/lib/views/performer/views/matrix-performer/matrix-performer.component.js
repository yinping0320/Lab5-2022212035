/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ComponentFactoryResolver, HostBinding, Inject, Injector, Input, LOCALE_ID, Optional, ViewChild } from '@angular/core';
import { MatrixDefInfoEntity } from './entitis/matrix-def-info.entity';
import { MatrixDataInfoEntity } from './entitis/matrix-data-info.entity';
import { HttpService } from '@ecp-caf/caf-common';
import { of } from 'rxjs';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { LookupGridComponent, ServerSideToken } from '@farris/ui-lookup';
import { BsModalService } from '@farris/ui-modal';
import { EnumListComponent } from './enum-list/enum-list.component';
import { MatrixDefHelpService } from './service/matrix-performer.component.service';
import { LookupDataService } from '@farris/lookup-config';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
export class MatrixPerformerComponent {
    /**
     * @param {?} http
     * @param {?} designerUIState
     * @param {?} expr
     * @param {?} modalService
     * @param {?} resolver
     * @param {?} injector
     * @param {?} matDefService
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(http, designerUIState, expr, modalService, resolver, injector, matDefService, cdr, localeId, resources, localePipe) {
        this.http = http;
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.modalService = modalService;
        this.resolver = resolver;
        this.injector = injector;
        this.matDefService = matDefService;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.cls = 'd-flex flex-fill h-100';
        this.display = 'none';
        this.typeReadOnly = false;
        this.items = [];
        this.pageIndex = 1;
        this.pageSize = 20;
        this.pageList = [10, 20, 30, 50, 100];
        this.total = 0;
        this.groupIcon2 = '<i class="f-icon f-icon-lookup"></i>';
        this.fieldId = '';
        /**
         * 矩阵定义显示列
         */
        this.columns = [
            { title: this.localePipe.transform('component.matrixPerformer.code'), field: 'code', width: 100 },
            { title: this.localePipe.transform('component.matrixPerformer.name'), field: 'name', width: 100 }
        ];
        this.users = [];
        this.dataFieldAndValues = []; // { text: '部门', value: 'department' },
        // { text: '部门', value: 'department' },
        this.curDataFieldValue = '';
        this.matrixDefEntityList = [];
        this.curMatrixDefEntity = new MatrixDefInfoEntity();
        this.curMatrixDataEntity = new MatrixDataInfoEntity();
        this.conditionFields = [];
        this.exprGroup = [
            { name: this.localePipe.transform('component.matrixPerformer.help'), value: 'help' }
        ];
        this.mulGroup = [
            { name: this.localePipe.transform('component.matrixPerformer.multivalue'), value: 'Multivalue' }
        ];
        this.condition1ExprAble = true;
        this.condition2ExprAble = true;
        this.condition3ExprAble = true;
        this.condition1Multivalue = false;
        this.condition2Multivalue = false;
        this.condition3Multivalue = false;
        /**
         * 编辑器页面显示文字，防范浅拷贝问题（对于条件字段的值和显示文字都不要在当前实体中进行修改只有点击确定时，才将其保存至当前实体并返回）
         */
        this.condition1Text = '';
        this.condition1Value = '';
        this.condition2Text = '';
        this.condition2Value = '';
        this.condition3Text = '';
        this.condition3Value = '';
        this.dictPicked = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            // 先将当前绑定的数据清空
            this.curMatrixDataEntity = new MatrixDataInfoEntity();
            this.curDataFieldValue = '';
            this.curMatrixDefEntity = rowData;
            this.curMatrixDataEntity.matrixDefId = rowData.id;
            this.curMatrixDataEntity.matrixDefName = rowData.name;
            this.setFields();
            return of(true);
        });
        this.dictHelpPicked = (/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            this.value = null;
            return of({ closeDialog: true });
        });
        this.onBeforeHelp = (/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            /** @type {?} */
            const lookupIns = e.instance;
            if (lookupIns) {
                /** @type {?} */
                const getDataFn = lookupIns.http.getData;
                lookupIns.http.getData = this.matDefService.getData;
                lookupIns.dialogClosed.subscribe((/**
                 * @return {?}
                 */
                () => {
                    lookupIns.http.getData = getDataFn;
                }));
            }
            return of(true);
        });
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
        // this.getMatrixLineType();
    }
    /**
     * @param {?} dataEntity
     * @return {?}
     */
    set setMatrixDataEntity(dataEntity) {
        this.curMatrixDataEntity = dataEntity;
        /** @type {?} */
        const url = '/api/runtime/wf/v1.0/matrixDefinition/' + dataEntity.matrixDefId;
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        (re) => {
            this.curMatrixDefEntity = re;
            this.setFields();
            this.curDataFieldValue = dataEntity.dataFieldAlias;
        }));
        if (dataEntity.matrixDefId) {
            this.typeReadOnly = true;
        }
        if (!this.curMatrixDataEntity.conditionField1) {
            this.condition1 = 'expr';
            this.condition1ExprAble = true;
        }
        else if (this.curMatrixDataEntity.conditionField1.charAt(0) === '{') {
            this.condition1 = 'expr';
            this.condition1ExprAble = true;
        }
        else {
            this.condition1 = 'help';
            this.condition1ExprAble = false;
        }
        if (!this.curMatrixDataEntity.conditionField2) {
            this.condition2 = 'expr';
            this.condition2ExprAble = true;
        }
        else if (this.curMatrixDataEntity.conditionField2.charAt(0) === '{') {
            this.condition2 = 'expr';
            this.condition2ExprAble = true;
        }
        else {
            this.condition2 = 'help';
            this.condition2ExprAble = false;
        }
        if (!this.curMatrixDataEntity.conditionField3) {
            this.condition3 = 'expr';
            this.condition3ExprAble = true;
        }
        else if (this.curMatrixDataEntity.conditionField3.charAt(0) === '{') {
            this.condition3 = 'expr';
            this.condition3ExprAble = true;
        }
        else {
            this.condition3 = 'help';
            this.condition3ExprAble = false;
        }
        if (this.curMatrixDataEntity.multivaluedCondition === 'condition1') {
            this.MultivalueOption1 = 'Multivalue';
            this.condition1Multivalue = true;
        }
        else if (this.curMatrixDataEntity.multivaluedCondition === 'condition2') {
            this.MultivalueOption2 = 'Multivalue';
            this.condition2Multivalue = true;
        }
        else if (this.curMatrixDataEntity.multivaluedCondition === 'condition3') {
            this.MultivalueOption3 = 'Multivalue';
            this.condition3Multivalue = true;
        }
        this.condition1Text = this.curMatrixDataEntity.conditionFieldText1 ? this.curMatrixDataEntity.conditionFieldText1 : '';
        this.condition1Value = this.curMatrixDataEntity.conditionField1 ? this.curMatrixDataEntity.conditionField1 : '';
        this.condition2Text = this.curMatrixDataEntity.conditionFieldText2 ? this.curMatrixDataEntity.conditionFieldText2 : '';
        this.condition2Value = this.curMatrixDataEntity.conditionField2 ? this.curMatrixDataEntity.conditionField2 : '';
        this.condition3Text = this.curMatrixDataEntity.conditionFieldText3 ? this.curMatrixDataEntity.conditionFieldText3 : '';
        this.condition3Value = this.curMatrixDataEntity.conditionField3 ? this.curMatrixDataEntity.conditionField3 : '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        let rootPath = '';
        try {
            rootPath = ((/** @type {?} */ (window))).gspframeworkService.common.getBasePath.get();
        }
        catch (error) {
        }
        this.dataUri = rootPath + '/api/runtime/wf/v1.0/matrixDefinition/getMatrixDef';
    }
    /**
     * 获取矩阵定义
     * @return {?}
     */
    getMatrixLineType() {
        /** @type {?} */
        const url = '/api/runtime/wf/v1.0/matrixDefinition';
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        (re) => {
            this.matrixDefEntityList = re;
            this.items = this.matrixDefEntityList.slice(0, this.pageSize);
            this.total = this.matrixDefEntityList.length;
        }));
    }
    /**
     * @private
     * @return {?}
     */
    setFields() {
        this.conditionFields = [];
        this.dataFieldAndValues = [];
        // 先对条件字段按照排序号进行排序
        this.curMatrixDefEntity.conditionField.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        (a, b) => {
            return a.sortOrder - b.sortOrder;
        }));
        // 将排序后的条件放入条件字段数组中
        for (const condition of this.curMatrixDefEntity.conditionField) {
            this.conditionFields.push(condition);
        }
        // 先对数据字段按照排序号进行排序
        this.curMatrixDefEntity.dataField.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        (a, b) => {
            return a.sortOrder - b.sortOrder;
        }));
        // 填充数据字段的下拉列表
        for (const data of this.curMatrixDefEntity.dataField) {
            /** @type {?} */
            const temp = {
                text: data.alias,
                value: data.alias
            };
            this.dataFieldAndValues.push(temp);
        }
    }
    /**
     * @return {?}
     */
    onClear() {
        this.curMatrixDataEntity = new MatrixDataInfoEntity();
    }
    /**
     * 编辑条件
     * @return {?}
     */
    editCondition() {
        // this.expr.clearContext();
        if (this.designerUIState.schemas.length > 0) {
            for (const schema of this.designerUIState.schemas) {
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        let context = new Array();
        context = this.designerUIState.addContext(context);
        if (this.designerUIState.subActivityContext.length > 0) {
            for (const variable of this.designerUIState.subActivityContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版
        this.expr.addExpressionText(this.curMatrixDataEntity.condition); // this.reportingLineDataEntity.condition
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        (expressioninfo) => {
            this.curMatrixDataEntity.condition = expressioninfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                y => y.key === x.key))));
            }
        }));
    }
    /**
     * @param {?} data
     * @param {?} index
     * @param {?} id
     * @return {?}
     */
    onHelpSearch(data, index, id) {
        this.index = index;
        this.fieldId = id;
        this.helpId = this.curMatrixDefEntity.conditionField[this.index].smartHelp;
        this.lookUp.onClear();
        this.lookUp.showDialog();
    }
    /**
     * @param {?} index
     * @param {?} id
     * @return {?}
     */
    openEnumValue(index, id) {
        this.index = index;
        this.fieldId = id;
        this.showEnumList(JSON.parse(this.curMatrixDefEntity.conditionField[this.index].enumList));
    }
    /**
     * @private
     * @param {?} enumList
     * @return {?}
     */
    showEnumList(enumList) {
        /** @type {?} */
        const compFactory = this.resolver.resolveComponentFactory(EnumListComponent);
        /** @type {?} */
        const compRef = compFactory.create(this.injector);
        /** @type {?} */
        const modalConfig = {
            title: this.localePipe.transform('component.matrixPerformer.enumSelection'),
            width: 650,
            height: 450,
            showButtons: true,
            buttons: compRef.instance.btnRef,
        };
        if (enumList && enumList.length > 0) {
            compRef.instance.load(enumList);
        }
        compRef.instance.confirm.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        (re) => {
            if (this.index === 0) {
                this.condition1Text = re[0].value;
                this.condition1Value = re[0].value;
            }
            else if (this.index === 1) {
                this.condition2Text = re[0].value;
                this.condition2Value = re[0].value;
            }
            else if (this.index === 2) {
                this.condition3Text = re[0].value;
                this.condition3Value = re[0].value;
            }
        }));
        /** @type {?} */
        const dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModalEmitter.subscribe((/**
         * @return {?}
         */
        () => {
            dialog.close();
        }));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    dataFieldChange(data) {
        this.curMatrixDataEntity.dataFieldAlias = data.data.value;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    selectedDataHandler(data) {
        if (this.index === 0) {
            this.condition1Text = data.name;
            this.condition1Value = data.id;
        }
        else if (this.index === 1) {
            this.condition2Text = data.name;
            this.condition2Value = data.id;
        }
        else if (this.index === 2) {
            this.condition3Text = data.name;
            this.condition3Value = data.id;
        }
    }
    /**
     * @return {?}
     */
    getPerformers() {
        this.curMatrixDataEntity.type = 'wf.MatrixParticipantExpression';
        this.curMatrixDataEntity.conditionFieldText1 = this.condition1Text;
        this.curMatrixDataEntity.conditionField1 = this.condition1Text === '' ? '' : this.condition1Value;
        this.curMatrixDataEntity.conditionFieldText2 = this.condition2Text;
        this.curMatrixDataEntity.conditionField2 = this.condition2Text === '' ? '' : this.condition2Value;
        this.curMatrixDataEntity.conditionFieldText3 = this.condition3Text;
        this.curMatrixDataEntity.conditionField3 = this.condition3Text === '' ? '' : this.condition3Value;
        if (this.condition1Multivalue) {
            this.curMatrixDataEntity.multivaluedCondition = 'condition1';
        }
        else if (this.condition2Multivalue) {
            this.curMatrixDataEntity.multivaluedCondition = 'condition2';
        }
        else if (this.condition3Multivalue) {
            this.curMatrixDataEntity.multivaluedCondition = 'condition3';
        }
        return this.curMatrixDataEntity;
    }
    /**
     * 打开表达式编辑器
     * @param {?} data 编辑第几个条件字段，值为（condition1，condition2，condition3）
     * @return {?}
     */
    showExprHelp(data) {
        // this.expr.clearContext();
        if (this.designerUIState.schemas.length > 0) {
            for (const schema of this.designerUIState.schemas) {
                // this.expr.addCommonObject(co);
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        const context = new Array();
        if (this.designerUIState.participantContext.length > 0) {
            for (const variable of this.designerUIState.participantContext) {
                context.push(variable);
                // this.expr.addContext(variable);
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            for (const variable of this.designerUIState.processVariableContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
                // this.expr.addContext(variable);
            }
        }
        if (this.designerUIState.subActivityContext.length > 0) {
            for (const variable of this.designerUIState.subActivityContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        if (data === 'condition1') {
            if (this.curMatrixDataEntity.conditionField1) {
                this.expr.addExpressionText(this.curMatrixDataEntity.conditionField1);
            }
            else {
                this.expr.addExpressionText('');
            }
        }
        else if (data === 'condition2') {
            if (this.curMatrixDataEntity.conditionField2) {
                this.expr.addExpressionText(this.curMatrixDataEntity.conditionField2);
            }
            else {
                this.expr.addExpressionText('');
            }
        }
        else if (data === 'condition3') {
            if (this.curMatrixDataEntity.conditionField3) {
                this.expr.addExpressionText(this.curMatrixDataEntity.conditionField3);
            }
            else {
                this.expr.addExpressionText('');
            }
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        (expressionInfo) => {
            if (data === 'condition1') {
                this.condition1Text = expressionInfo;
                this.condition1Value = expressionInfo;
            }
            else if (data === 'condition2') {
                this.condition2Text = expressionInfo;
                this.condition2Value = expressionInfo;
            }
            else {
                this.condition3Text = expressionInfo;
                this.condition3Value = expressionInfo;
            }
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                y => y.key === x.key))));
            }
        }));
    }
    /**
     * @param {?} data
     * @return {?}
     */
    condition1Expr(data) {
        this.showExprHelp(data);
    }
    /**
     * @return {?}
     */
    condition1ExprClick() {
        this.condition1ExprAble = !this.condition1ExprAble;
        this.condition1Multivalue = false;
        this.MultivalueOption1 = '';
        this.condition1Text = '';
        this.condition1Value = '';
    }
    /**
     * @return {?}
     */
    condition1MulClick() {
        this.MultivalueOption2 = '';
        this.MultivalueOption3 = '';
        this.condition2Multivalue = false;
        this.condition3Multivalue = false;
        this.condition1Multivalue = !this.condition1Multivalue;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    condition2Expr(data) {
        this.showExprHelp(data);
    }
    /**
     * @return {?}
     */
    condition2ExprClick() {
        this.condition2ExprAble = !this.condition2ExprAble;
        this.condition2Multivalue = false;
        this.MultivalueOption2 = '';
        this.condition2Text = '';
        this.condition2Value = '';
    }
    /**
     * @return {?}
     */
    condition2MulClick() {
        this.MultivalueOption1 = '';
        this.MultivalueOption3 = '';
        this.condition1Multivalue = false;
        this.condition3Multivalue = false;
        this.condition2Multivalue = !this.condition2Multivalue;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    condition3Expr(data) {
        this.showExprHelp(data);
    }
    /**
     * @return {?}
     */
    condition3ExprClick() {
        this.condition3ExprAble = !this.condition3ExprAble;
        this.condition3Multivalue = false;
        this.MultivalueOption3 = '';
        this.condition3Text = '';
        this.condition3Value = '';
    }
    /**
     * @return {?}
     */
    condition3MulClick() {
        this.MultivalueOption1 = '';
        this.MultivalueOption2 = '';
        this.condition1Multivalue = false;
        this.condition2Multivalue = false;
        this.condition3Multivalue = !this.condition3Multivalue;
    }
}
MatrixPerformerComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-matrix-performer',
                template: "<div class=\"d-flex flex-fill farris-overflow-y-auto p-md-2\" style=\"background: #FFF;\">\r\n  <div class=\"d-flex flex-fill farris-overflow-y-auto mx-3 my-2\" style=\"border-radius:16px;border: 1.5px solid #F1F3F7;\">\r\n  <form style=\"width: 100%;\">\r\n    <div class=\"d-flex m-2 flex-column w-100\">\r\n      <div class=\"d-flex flex-column\">\r\n        <div class=\"farris-form form-inline  farris-form-inline\"><!--mr-5-->\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\" style=\"width: 14%\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.matrixPerformer.refMatrixTable'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\" style=\"width: 77.5%\">\r\n                  <farris-lookup-grid [items]=\"items\" [columns]=\"columns\" [(ngModel)]=\"curMatrixDataEntity.matrixDefName\"\r\n                                      name=\"definitionId\" [resizable]=\"true\" [singleSelect]=\"true\" [idField]=\"'id'\" [pagination]=\"true\"\r\n                                      [pageIndex]=\"pageIndex\" [pageSize]=\"pageSize\" [pageList]=\"pageList\" [total]=\"total\" [textField]=\"'name'\"\r\n                                      [valueField]=\"'id'\" title=\"{{'component.matrixPerformer.matrixTable'|wfLocale}}\" [dictPicked]=\"dictPicked\" (clear)=\"onClear()\" [readonly]=\"typeReadOnly\"\r\n                                      [customDisplayType] = \"true\" [displayType]=\"'LIST'\" [uri]=\"dataUri\" [dictPicking]=\"onBeforeHelp\">\r\n                  </farris-lookup-grid>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n                <div style=\"width: 7.5%\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\" style=\"width: 14%\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.matrixPerformer.curDataFieldValue'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\" style=\"width: 77.5%\">\r\n                  <!--\u4E0B\u62C9\u5217\u8868-->\r\n                  <farris-combo-list [(ngModel)]=\"curDataFieldValue\" name=\"referObject\" [panelHeight]=\"200\" [idField]=\"'value'\"\r\n                                     [textField]=\"'text'\" [data]=\"dataFieldAndValues\" (selectChange)='dataFieldChange($event)'>\r\n                  </farris-combo-list>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n                <div style=\"width: 7.5%\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\" *ngIf=\"conditionFields && conditionFields.length > 0\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\" style=\"margin-top: -17px; margin-bottom: -22px\">\r\n                <label class=\"col-form-label\" style=\"width: 14%\">\r\n                  <span class=\"farris-label-text\" style=\"color: rgb(180,180,180)\">{{'component.matrixPerformer.conditionFields'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\" style=\"width: 77.5%\">\r\n                  <hr size=\"3px\">\r\n                </div>\r\n                <div style=\"width: 7.5%\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\" *ngIf=\"conditionFields && conditionFields.length > 0\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\" style=\"width: 14%\">\r\n                  <span class=\"farris-label-text\">{{conditionFields[0].alias}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"conditionFields[0].inputType === 'help' && !condition1ExprAble\">\r\n                  <input-group name=\"condition1\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\" [(ngModel)]=\"condition1Text\" (clickHandle)=\"onHelpSearch($event,0,conditionFields[0].id)\"></input-group>\r\n                </div>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"conditionFields[0].inputType === 'enum' && !condition1ExprAble\">\r\n                  <input-group name=\"condition1\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\" [(ngModel)]=\"condition1Text\" (clickHandle)=\"openEnumValue(0,conditionFields[0].id)\"></input-group>\r\n                </div>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"condition1ExprAble\">\r\n                  <input-group name=\"condition1\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                               [(ngModel)]=\"condition1Text\" (clickHandle)=\"condition1Expr('condition1')\">\r\n                  </input-group>\r\n                </div>\r\n                <farris-checkboxgroup style=\"width: 10%; padding-left: 5px\" [(ngModel)]=\"condition1\" name=\"Expr1Able\" [horizontal]=\"true\"\r\n                                      [data]=\"exprGroup\" (changeValue)=\"condition1ExprClick()\">\r\n                </farris-checkboxgroup>\r\n                <farris-checkboxgroup style=\"width: 10%\" [(ngModel)]=\"MultivalueOption1\" name=\"Expr1Mul\" [horizontal]=\"true\" [disable]=\"!condition1ExprAble\"\r\n                [data]=\"mulGroup\" (changeValue)=\"condition1MulClick()\">\r\n                </farris-checkboxgroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\" *ngIf=\"conditionFields && conditionFields.length > 1\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\" style=\"width: 14%\">\r\n                  <span class=\"farris-label-text\">{{conditionFields[1].alias}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"conditionFields[1].inputType === 'help' && !condition2ExprAble\">\r\n                  <input-group name=\"condition2\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\" [(ngModel)]=\"condition2Text\" (clickHandle)=\"onHelpSearch($event,1,conditionFields[1].id)\"></input-group>\r\n                </div>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"conditionFields[1].inputType === 'enum' && !condition2ExprAble\">\r\n                  <input-group name=\"condition2\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\" [(ngModel)]=\"condition2Text\" (clickHandle)=\"openEnumValue(1,conditionFields[1].id)\"></input-group>\r\n                </div>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"condition2ExprAble\">\r\n                  <input-group name=\"condition2\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                               [(ngModel)]=\"condition2Text\" (clickHandle)=\"condition2Expr('condition2')\">\r\n                  </input-group>\r\n                </div>\r\n                <farris-checkboxgroup style=\"width: 10%; padding-left: 5px\" [(ngModel)]=\"condition2\" name=\"Expr2Able\" [horizontal]=\"true\"\r\n                                      [data]=\"exprGroup\" (changeValue)=\"condition2ExprClick()\">\r\n                </farris-checkboxgroup>\r\n                <farris-checkboxgroup style=\"width: 10%\" [(ngModel)]=\"MultivalueOption2\" name=\"Expr2Mul\" [horizontal]=\"true\" [disable]=\"!condition2ExprAble\"\r\n                [data]=\"mulGroup\" (changeValue)=\"condition2MulClick()\">\r\n                </farris-checkboxgroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\" *ngIf=\"conditionFields && conditionFields.length > 2\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\" style=\"width: 14%\">\r\n                  <span class=\"farris-label-text\">{{conditionFields[2].alias}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"conditionFields[2].inputType === 'help' && !condition3ExprAble\">\r\n                  <input-group name=\"condition3\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\" [(ngModel)]=\"condition3Text\" (clickHandle)=\"onHelpSearch($event,2,conditionFields[2].id)\"></input-group>\r\n                </div>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"conditionFields[2].inputType === 'enum' && !condition3ExprAble\">\r\n                  <input-group name=\"condition3\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\" [(ngModel)]=\"condition3Text\" (clickHandle)=\"openEnumValue(2,conditionFields[2].id)\"></input-group>\r\n                </div>\r\n                <div class=\"farris-input-wrap\" style=\"width: 60%\" *ngIf=\"condition3ExprAble\">\r\n                  <input-group name=\"condition3\" [editable]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                               [(ngModel)]=\"condition3Text\" (clickHandle)=\"condition3Expr('condition3')\">\r\n                  </input-group>\r\n                </div>\r\n                <farris-checkboxgroup style=\"width: 10%; padding-left: 5px\" [(ngModel)]=\"condition3\" name=\"Expr3Able\" [horizontal]=\"true\"\r\n                                      [data]=\"exprGroup\" (changeValue)=\"condition3ExprClick()\">\r\n                </farris-checkboxgroup>\r\n                <farris-checkboxgroup style=\"width: 10%\" [(ngModel)]=\"MultivalueOption3\" name=\"Expr3Mul\" [horizontal]=\"true\" [disable]=\"!condition3ExprAble\"\r\n                [data]=\"mulGroup\" (changeValue)=\"condition3MulClick()\">\r\n                </farris-checkboxgroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex flex-column\">\r\n        <div class=\"farris-form form-inline farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.matrixPerformer.condition'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"curMatrixDataEntity.condition\" name=\"conditon\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text\" (click)=\"editCondition()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>\r\n\r\n<farris-lookup-grid style=\"display: none;\" #lookup [(ngModel)]=\"value\" name=\"value\" [helpId]=\"helpId\"\r\n  [singleSelect]=\"true\" [uri]=\"'assets/data/tree-list-help.json'\" (selectedData)=\"selectedDataHandler($event)\"\r\n  [dictPicked]=\"dictHelpPicked\" [enableCascade]=\"false\">\r\n</farris-lookup-grid>\r\n",
                providers: [
                    { provide: ServerSideToken, useClass: LookupDataService },
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
MatrixPerformerComponent.ctorParameters = () => [
    { type: HttpService },
    { type: ProcessDesignerUIState },
    { type: ExpressionService },
    { type: BsModalService },
    { type: ComponentFactoryResolver },
    { type: Injector },
    { type: MatrixDefHelpService },
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
MatrixPerformerComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class',] }],
    setMatrixDataEntity: [{ type: Input }],
    lookUp: [{ type: ViewChild, args: ['lookup',] }]
};
if (false) {
    /** @type {?} */
    MatrixPerformerComponent.prototype.cls;
    /** @type {?} */
    MatrixPerformerComponent.prototype.display;
    /** @type {?} */
    MatrixPerformerComponent.prototype.typeReadOnly;
    /** @type {?} */
    MatrixPerformerComponent.prototype.items;
    /** @type {?} */
    MatrixPerformerComponent.prototype.pageIndex;
    /** @type {?} */
    MatrixPerformerComponent.prototype.pageSize;
    /** @type {?} */
    MatrixPerformerComponent.prototype.pageList;
    /** @type {?} */
    MatrixPerformerComponent.prototype.total;
    /** @type {?} */
    MatrixPerformerComponent.prototype.groupIcon2;
    /** @type {?} */
    MatrixPerformerComponent.prototype.index;
    /** @type {?} */
    MatrixPerformerComponent.prototype.fieldId;
    /** @type {?} */
    MatrixPerformerComponent.prototype.value;
    /** @type {?} */
    MatrixPerformerComponent.prototype.helpId;
    /** @type {?} */
    MatrixPerformerComponent.prototype.dataUri;
    /**
     * 矩阵定义显示列
     * @type {?}
     */
    MatrixPerformerComponent.prototype.columns;
    /** @type {?} */
    MatrixPerformerComponent.prototype.users;
    /** @type {?} */
    MatrixPerformerComponent.prototype.dataFieldAndValues;
    /** @type {?} */
    MatrixPerformerComponent.prototype.curDataFieldValue;
    /** @type {?} */
    MatrixPerformerComponent.prototype.matrixDefEntityList;
    /** @type {?} */
    MatrixPerformerComponent.prototype.curMatrixDefEntity;
    /** @type {?} */
    MatrixPerformerComponent.prototype.curMatrixDataEntity;
    /** @type {?} */
    MatrixPerformerComponent.prototype.conditionFields;
    /** @type {?} */
    MatrixPerformerComponent.prototype.exprGroup;
    /** @type {?} */
    MatrixPerformerComponent.prototype.mulGroup;
    /**
     * 条件字段是否启用表达式
     * @type {?}
     */
    MatrixPerformerComponent.prototype.condition1;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition1ExprAble;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition2;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition2ExprAble;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition3;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition3ExprAble;
    /**
     * 条件字段是否启用多值
     * @type {?}
     */
    MatrixPerformerComponent.prototype.MultivalueOption1;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition1Multivalue;
    /** @type {?} */
    MatrixPerformerComponent.prototype.MultivalueOption2;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition2Multivalue;
    /** @type {?} */
    MatrixPerformerComponent.prototype.MultivalueOption3;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition3Multivalue;
    /**
     * 编辑器页面显示文字，防范浅拷贝问题（对于条件字段的值和显示文字都不要在当前实体中进行修改只有点击确定时，才将其保存至当前实体并返回）
     * @type {?}
     */
    MatrixPerformerComponent.prototype.condition1Text;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition1Value;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition2Text;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition2Value;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition3Text;
    /** @type {?} */
    MatrixPerformerComponent.prototype.condition3Value;
    /** @type {?} */
    MatrixPerformerComponent.prototype.lookUp;
    /** @type {?} */
    MatrixPerformerComponent.prototype.dictPicked;
    /** @type {?} */
    MatrixPerformerComponent.prototype.dictHelpPicked;
    /** @type {?} */
    MatrixPerformerComponent.prototype.onBeforeHelp;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.http;
    /** @type {?} */
    MatrixPerformerComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.matDefService;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    MatrixPerformerComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,