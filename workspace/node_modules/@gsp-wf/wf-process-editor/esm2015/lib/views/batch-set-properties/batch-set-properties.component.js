/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ComponentFactoryResolver, Inject, Injector, LOCALE_ID, Optional, TemplateRef, ViewChild } from '@angular/core';
import { Subject, of } from 'rxjs';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { OrganizationPotentialOwner } from '../organization-potential-owner/actionOrganizationScope';
import { BsModalService } from '@farris/ui-modal';
import { ProcessDesignerViewModel } from '../../app/process-designer.viewmodel';
import { UserActivity } from '@gsp-wf/wf-process-model';
import { ParticipantInfo } from '../participant/participant.info';
export class BatchSetPropertiesComponent {
    /**
     * @param {?} uistate
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     * @param {?} resolver
     * @param {?} injector
     * @param {?} modalService
     * @param {?} viewModel
     */
    constructor(uistate, localeId, resources, localePipe, resolver, injector, modalService, viewModel) {
        this.uistate = uistate;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.viewModel = viewModel;
        this.groupIcon2 = '<i class="f-icon f-icon-lookup"></i>';
        this.submit = new Subject();
        this.cancel = new Subject();
        this.cols = [
            { title: this.localePipe.transform('component.batchSet.name'), field: 'Name', width: 60, searchField: 'Name' },
            { title: 'ID', field: 'Id', width: 90, searchField: 'Id' }
        ];
        this.useractivities = [];
        this.useroperationnotifyactivities = [];
        this.useroperationsubcatchactivities = [];
        this.actis1 = [];
        this.actis2 = [];
        this.actis3 = [];
        this.actis4 = [];
        this.actis5 = [];
        this.addSignFrontActis = [];
        this.addSignBehindActis = [];
        this.transferActis = [];
        this.notifyActis = [];
        this.backWardRuleActis = [];
        this.nullActis = [];
        this.addSignFrontEnable = false;
        this.addSignBehindEnable = false;
        this.transferEnable = false;
        this.notifyEnable = false;
        this.backWardRuleEnable = false;
        this.backWardRule = {};
        this.addSignFrontScope = {};
        this.addSignBehindScope = {};
        this.transferScope = {};
        this.notifyScope = {};
        this.pageInfo = {
            pageIndex: 1,
            pageList: [10, 20, 30, 50],
            pageSize: 20
        };
        this.frontActisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            this.addSignFrontActis = rowData;
            return of({
                closeDialog: true
            });
        });
        this.behindActisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            this.addSignBehindActis = rowData;
            return of({
                closeDialog: true
            });
        });
        this.notifyActisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            this.notifyActis = rowData;
            return of({
                closeDialog: true
            });
        });
        this.transferActisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            this.transferActis = rowData;
            return of({
                closeDialog: true
            });
        });
        this.backWardRuleActisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            this.backWardRuleActis = rowData;
            return of({
                closeDialog: true
            });
        });
        this.actisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        (rowData) => {
            return of({
                closeDialog: true
            });
        });
        // 过滤只有审批节点的
        this.useractivities = this.uistate.userActList.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            return item.ClrTypeID === UserActivity.Clr_Type_ID;
        }));
        // 拼接审批+人工+知会
        this.useroperationnotifyactivities = [...this.uistate.userActList, ...this.uistate.NotifyActKist];
        // 拼接审批人工子流程信号捕获
        this.useroperationsubcatchactivities = [...this.uistate.userActList, ...this.uistate.SubAndCatchActList];
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        const addSignFront = this.activityModel.dynamicParticipants.filter((/**
         * @param {?} participant
         * @return {?}
         */
        function (participant) {
            return participant.actionScope === "AddSignFront";
        }));
        /** @type {?} */
        const addSignBehind = this.activityModel.dynamicParticipants.filter((/**
         * @param {?} participant
         * @return {?}
         */
        function (participant) {
            return participant.actionScope === "AddSignBehind";
        }));
        /** @type {?} */
        const transfer = this.activityModel.dynamicParticipants.filter((/**
         * @param {?} participant
         * @return {?}
         */
        function (participant) {
            return participant.actionScope === "Transfer";
        }));
        /** @type {?} */
        const notify = this.activityModel.dynamicParticipants.filter((/**
         * @param {?} participant
         * @return {?}
         */
        function (participant) {
            return participant.actionScope === "Notify";
        }));
        if (!addSignFront[0] || addSignFront[0].organizationLevel) {
            this.addSignFrontScope = {
                enable: this.activityModel.AddSignFrontAble,
                action: "AddSignFront",
                scope: addSignFront[0]
            };
        }
        else {
            /** @type {?} */
            let scope = new OrganizationPotentialOwner();
            /** @type {?} */
            let participant = new ParticipantInfo();
            participant.potentialOwnerList = addSignFront;
            participant.isAllScope = true; //反的
            scope.participantInfo = participant;
            this.addSignFrontScope = {
                enable: this.activityModel.AddSignFrontAble,
                action: "AddSignFront",
                scope: scope
            };
        }
        ;
        if (!addSignBehind[0] || addSignBehind[0].organizationLevel) {
            this.addSignBehindScope = {
                enable: this.activityModel.AddSignBehindAble,
                action: "AddSignBehind",
                scope: addSignBehind[0]
            };
        }
        else {
            /** @type {?} */
            let scope = new OrganizationPotentialOwner();
            /** @type {?} */
            let participant = new ParticipantInfo();
            participant.potentialOwnerList = addSignBehind;
            participant.isAllScope = true; //反的
            scope.participantInfo = participant;
            this.addSignBehindScope = {
                enable: this.activityModel.AddSignBehindAble,
                action: "AddSignBehind",
                scope: scope
            };
        }
        if (!transfer[0] || transfer[0].organizationLevel) {
            this.transferScope = {
                enable: this.activityModel.transferAble,
                action: "Transfer",
                scope: transfer[0]
            };
        }
        else {
            /** @type {?} */
            let scope = new OrganizationPotentialOwner();
            /** @type {?} */
            let participant = new ParticipantInfo();
            participant.potentialOwnerList = transfer;
            participant.isAllScope = true; //反的
            scope.participantInfo = participant;
            this.transferScope = {
                enable: this.activityModel.transferAble,
                action: "Transfer",
                scope: scope
            };
        }
        if (!notify[0] || notify[0].organizationLevel) {
            this.notifyScope = {
                enable: this.activityModel.NotifyAble,
                action: "Notify",
                scope: notify[0]
            };
        }
        else {
            /** @type {?} */
            let scope = new OrganizationPotentialOwner();
            /** @type {?} */
            let participant = new ParticipantInfo();
            participant.potentialOwnerList = notify;
            participant.isAllScope = true; //反的
            scope.participantInfo = participant;
            this.notifyScope = {
                enable: this.activityModel.NotifyAble,
                action: "Notify",
                scope: scope
            };
        }
        this.backWardRule = this.activityModel.BackWardRule;
    }
    // addSignFrontConfig() {
    //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);
    //   const compRef = compFactory.create(this.injector);
    //   compRef.instance.action = ActionScope.AddSignFront
    //   const orgModalConfig = {
    //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),
    //     width: 517,
    //     height: 382,
    //     showButtons: true,
    //     buttons: compRef.instance.modalFooter
    //   };
    //   const dialog = this.modalService.show(compRef, orgModalConfig);
    //   compRef.instance.closeModal.subscribe($event => dialog.close());
    //   compRef.instance.submitModal.subscribe((data: any) => {
    //     this.addSignFrontScope = data.value;
    //     this.frontPlaceholder = '（已设置）'
    //     dialog.close();
    //   });
    // }
    // addSignBehindConfig() {
    //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);
    //   const compRef = compFactory.create(this.injector);
    //   compRef.instance.action = ActionScope.AddSignBehind
    //   const orgModalConfig = {
    //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),
    //     width: 517,
    //     height: 382,
    //     showButtons: true,
    //     buttons: compRef.instance.modalFooter
    //   };
    //   const dialog = this.modalService.show(compRef, orgModalConfig); compRef.instance.closeModal.subscribe($event => dialog.close());
    //   compRef.instance.submitModal.subscribe((data: any) => {
    //     this.addSignBehindScope = data.value;
    //     this.behindPlaceholder = '（已设置）'
    //     dialog.close();
    //   });
    // }
    // transferConfig() {
    //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);
    //   const compRef = compFactory.create(this.injector);
    //   compRef.instance.action = ActionScope.Transfer
    //   const orgModalConfig = {
    //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),
    //     width: 517,
    //     height: 382,
    //     showButtons: true,
    //     buttons: compRef.instance.modalFooter
    //   };
    //   const dialog = this.modalService.show(compRef, orgModalConfig); compRef.instance.closeModal.subscribe($event => dialog.close());
    //   compRef.instance.submitModal.subscribe((data: any) => {
    //     this.transferScope = data.value;
    //     this.transferPlaceholder = '（已设置）'
    //     dialog.close();
    //   });
    // }
    // notifyConfig() {
    //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);
    //   const compRef = compFactory.create(this.injector);
    //   compRef.instance.action = ActionScope.Notify
    //   const orgModalConfig = {
    //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),
    //     width: 517,
    //     height: 382,
    //     showButtons: true,
    //     buttons: compRef.instance.modalFooter
    //   };
    //   const dialog = this.modalService.show(compRef, orgModalConfig);
    //   compRef.instance.closeModal.subscribe($event => dialog.close());
    //   compRef.instance.submitModal.subscribe((data: any) => {
    //     this.notifyScope = data.value;
    //     this.notifyPlaceholder = '（已设置）'
    //     dialog.close();
    //   });
    // }
    // backWardRuleConfig() {
    //   const compFactory = this.resolver.resolveComponentFactory(BackwardRuleComponent);
    //   const compRef = compFactory.create(this.injector);
    //   compRef.instance.editorParams.nodeType = 'UserActivity';
    //   const modalConfig = {
    //     title: this.localePipe.transform('component.backwardRule.backwardRule'),
    //     width: 760,
    //     height: 505,
    //     buttons: compRef.instance.modalFooter
    //   };
    //   const dialog = this.modalService.show(compRef, modalConfig);
    //   compRef.instance.closeModal.subscribe($event => dialog.close());
    //   compRef.instance.submitModal.subscribe((data: any) => {
    //     this.backWardRule = data.value;
    //     this.backWardPlaceholder = '（已设置）'
    //     dialog.close();
    //   });
    // }
    /**
     * @return {?}
     */
    clickOK() {
        /** @type {?} */
        const value = [];
        if (this.addSignFrontEnable) {
            /** @type {?} */
            const frontData = {
                type: 'addSignfront',
                actis: this.addSignFrontActis,
                config: this.addSignFrontScope
            };
            value.push(frontData);
        }
        if (this.addSignBehindEnable) {
            /** @type {?} */
            const behindData = {
                type: 'addSignBehind',
                actis: this.addSignFrontActis,
                config: this.addSignBehindScope
            };
            value.push(behindData);
        }
        if (this.transferEnable) {
            /** @type {?} */
            const transferData = {
                type: 'transfer',
                actis: this.addSignFrontActis,
                config: this.transferScope
            };
            value.push(transferData);
        }
        if (this.notifyEnable) {
            /** @type {?} */
            const notifyData = {
                type: 'notify',
                actis: this.addSignFrontActis,
                config: this.notifyScope
            };
            value.push(notifyData);
        }
        if (this.backWardRuleEnable) {
            /** @type {?} */
            const backWardRuleData = {
                type: 'backWardRule',
                actis: this.addSignFrontActis,
                config: this.backWardRule
            };
            value.push(backWardRuleData);
        }
        if (value && value.length > 0) {
            this.batchSet(value);
        }
        this.submit.next();
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.cancel.next();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    batchSet(value) {
        this.viewModel.batchSet(ResourceKeys.batchSetProperty, value);
    }
}
BatchSetPropertiesComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-batch-set-properties',
                template: "<div class=\"f-page\">\r\n  <section class=\"f-page-main d-flex flex-column\"\r\n    style=\"overflow:scroll;border-radius:10px;border: 1.5px solid #F1F3F7;\">\r\n    <div class=\"f-form-layout farris-form mx-3\">\r\n      <fieldset class=\"f-section-formgroup\">\r\n        <div class=\"f-section-formgroup-inputs\">\r\n          <div class=\"col-12 mt-3\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.batchSet.targetNode' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-lookup-grid #addSignFrontActisDialog [items]=\"useractivities\" [columns]=\"cols\"\r\n                    [resizable]=\"true\" [singleSelect]=\"false\" [idField]=\"'Id'\" [textField]=\"'Name'\" [(ngModel)]=\"actis1\"\r\n                    [valueField]=\"'Id'\" [pagination]=\"false\" [pageIndex]=\"pageInfo.pageIndex\" name=\"addSignFrontActis\"\r\n                    [pageSize]=\"pageInfo.pageSize\" [pageList]=\"pageInfo.pageList\" [total]=\"total\" [enableClear]=\"false\"\r\n                    title=\"{{'component.batchSet.targetNode'|wfLocale}}\" [displayType]=\"'List'\"\r\n                    [remoteSearch]='false' [enableToSelect]=\"false\"\r\n                    placeholder=\"{{'component.messageNoticeEdit.placeholder'|wfLocale}}\" [dictPicked]=\"frontActisSelect\"\r\n                    [nosearch]=\"true\" [showFilterBar]=\"false\">\r\n                  </farris-lookup-grid>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </fieldset>\r\n</div>\r\n<!-- \u5F81\u8BE2 -->\r\n  <div class=\"f-form-layout farris-form mx-3\">\r\n    <fieldset class=\"f-section-formgroup\">\r\n      <div class=\"f-section-formgroup-inputs\">\r\n        <div class=\"farris-form form-inline farris-form-inline col-12\">\r\n          <div class=\"farris-group-auto\">\r\n            <div class=\"form-group farris-form-group\">\r\n              <label class=\"col-3 col-form-label\" style=\"padding-right: 79px;padding-left: 0px;\">\r\n                <span class=\"farris-label-text\">{{'component.batchSet.addSignFront' | wfLocale}}</span>\r\n              </label>\r\n              <div class=\"col-9 col-form-label\">\r\n                <farris-switch [(ngModel)]=\"addSignFrontEnable\" name=\"addSignFrontEnable\"></farris-switch>\r\n                <div class=\"farris-feedback valid-feedback\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n<!-- \u52A0\u7B7E -->\r\n  <div class=\"f-form-layout farris-form mx-3\">\r\n    <fieldset class=\"f-section-formgroup\">\r\n      <div class=\"f-section-formgroup-inputs\">\r\n        <div class=\"farris-form form-inline farris-form-inline col-12\">\r\n          <div class=\"farris-group-auto\">\r\n            <div class=\"form-group farris-form-group\">\r\n              <label class=\"col-3 col-form-label\" style=\"padding-right: 79px;padding-left: 0px;\">\r\n                <span class=\"farris-label-text\">{{'component.batchSet.addSignBehind' | wfLocale}}</span>\r\n              </label>\r\n              <div class=\"col-9 col-form-label\">\r\n                <farris-switch [(ngModel)]=\"addSignBehindEnable\" name=\"addSignBehindEnable\"></farris-switch>\r\n                <div class=\"farris-feedback valid-feedback\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n  <div class=\"f-form-layout farris-form mx-3\">\r\n    <fieldset class=\"f-section-formgroup\">\r\n      <div class=\"f-section-formgroup-inputs\">\r\n        <div class=\"farris-form form-inline farris-form-inline col-12\">\r\n          <div class=\"farris-group-auto\">\r\n            <div class=\"form-group farris-form-group\">\r\n              <label class=\"col-3 col-form-label\" style=\"padding-right: 79px;padding-left: 0px;\">\r\n                <span class=\"farris-label-text\">{{'component.batchSet.transfer' | wfLocale}}</span>\r\n              </label>\r\n              <div class=\"col-9 col-form-label\">\r\n                <farris-switch [(ngModel)]=\"transferEnable\" name=\"transferEnable\"></farris-switch>\r\n                <div class=\"farris-feedback valid-feedback\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n  <div class=\"f-form-layout farris-form mx-3\">\r\n    <fieldset class=\"f-section-formgroup\">\r\n      <div class=\"f-section-formgroup-inputs\">\r\n        <div class=\"farris-form form-inline farris-form-inline col-12\">\r\n          <div class=\"farris-group-auto\">\r\n            <div class=\"form-group farris-form-group\">\r\n              <label class=\"col-3 col-form-label\" style=\"padding-right: 79px;padding-left: 0px;\">\r\n                <span class=\"farris-label-text\">{{'component.batchSet.notify' | wfLocale}}</span>\r\n              </label>\r\n              <div class=\"col-9 col-form-label\">\r\n                <farris-switch [(ngModel)]=\"notifyEnable\" name=\"notifyEnable\"></farris-switch>\r\n                <div class=\"farris-feedback valid-feedback\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n  <div class=\"f-form-layout farris-form mx-3\">\r\n    <fieldset class=\"f-section-formgroup\">\r\n      <div class=\"f-section-formgroup-inputs\">\r\n        <div class=\"farris-form form-inline farris-form-inline col-12\">\r\n          <div class=\"farris-group-auto\">\r\n            <div class=\"form-group farris-form-group\">\r\n              <label class=\"col-3 col-form-label\" style=\"padding-right: 54px;padding-left: 0px;\">\r\n                <span class=\"farris-label-text\">{{'component.batchSet.backWardRule' | wfLocale}}</span>\r\n              </label>\r\n              <div class=\"col-9 col-form-label\">\r\n                <farris-switch [(ngModel)]=\"backWardRuleEnable\" name=\"backWardRuleEnable\"></farris-switch>\r\n                <div class=\"farris-feedback valid-feedback\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n</section>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">{{'component.note.clickCancel' |\r\n    wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.note.clickOK' |\r\n    wfLocale}}</button>\r\n</ng-template>",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
BatchSetPropertiesComponent.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] },
    { type: ComponentFactoryResolver },
    { type: Injector },
    { type: BsModalService },
    { type: ProcessDesignerViewModel }
];
BatchSetPropertiesComponent.propDecorators = {
    footer: [{ type: ViewChild, args: ['footer',] }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
};
if (false) {
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.groupIcon2;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.submit;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.cancel;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.footer;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.modalFooter;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.cols;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.activityModel;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.useractivities;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.useroperationnotifyactivities;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.useroperationsubcatchactivities;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.actis1;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.actis2;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.actis3;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.actis4;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.actis5;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.addSignFrontActis;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.addSignBehindActis;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.transferActis;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.notifyActis;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.backWardRuleActis;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.nullActis;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.addSignFrontEnable;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.addSignBehindEnable;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.transferEnable;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.notifyEnable;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.backWardRuleEnable;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.backWardRule;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.addSignFrontScope;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.addSignBehindScope;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.transferScope;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.notifyScope;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.pageInfo;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.total;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.frontActisSelect;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.behindActisSelect;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.notifyActisSelect;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.transferActisSelect;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.backWardRuleActisSelect;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.actisSelect;
    /** @type {?} */
    BatchSetPropertiesComponent.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    BatchSetPropertiesComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    BatchSetPropertiesComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    BatchSetPropertiesComponent.prototype.localePipe;
    /**
     * @type {?}
     * @private
     */
    BatchSetPropertiesComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    BatchSetPropertiesComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    BatchSetPropertiesComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    BatchSetPropertiesComponent.prototype.viewModel;
}
/** @enum {string} */
const ResourceKeys = {
    batchSetProperty: 'batchSetProperty',
};
export { ResourceKeys };
//# sourceMappingURL=data:application/json;base64,