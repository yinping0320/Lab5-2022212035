/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, EventEmitter, Inject, Input, LOCALE_ID, Optional, Output, TemplateRef, ViewChild } from '@angular/core';
import { AutoHandle } from "../time-limit-control.entity";
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
export class AutoHandleOperationComponent {
    /**
     * @param {?} message
     * @param {?} uiState
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(message, uiState, cdr, localeId, resources, localePipe) {
        this.message = message;
        this.uiState = uiState;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.placeholder = '';
        this.operation = new AutoHandle('Pass', this.localePipe);
        this.submitEmitter = new EventEmitter();
        this.closeEmitter = new EventEmitter();
        this.autoHandleType = [
        // { value: 'autoPass', text: '自动通过' },
        // { value: 'autoBack', text: '自动驳回' }
        ];
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
        for (const item of this.uiState.propertyData.ApprovalItems) {
            this.autoHandleType.push({ value: item.Value, text: item.Text });
        }
    }
    /**
     * @param {?} info
     * @return {?}
     */
    set value(info) {
        this.operation = Object.assign({}, info);
        if (this.operation.autoHandleType === undefined) {
            /** @type {?} */
            const autoHandle = new AutoHandle(this.autoHandleType[0].value, this.localePipe);
            this.operation.autoHandleType = autoHandle.autoHandleType;
            this.operation.message = autoHandle.message;
        }
    }
    /**
     * @return {?}
     */
    get value() {
        return this.operation;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        if (this.validator()) {
            this.submitEmitter.emit(this.operation);
        }
    }
    /**
     * @return {?}
     */
    clickCancel() {
        this.closeEmitter.emit();
    }
    /**
     * @private
     * @return {?}
     */
    validator() {
        if (!this.operation.message) {
            this.message.info(this.localePipe.transform('component.sendMessageOperation.opinionsNotEmpty'));
            return false;
        }
        if (!this.operation.autoHandleType) {
            this.message.info(this.localePipe.transform('component.sendMessageOperation.processingNotEmpty'));
            return false;
        }
        return true;
    }
}
AutoHandleOperationComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-auto-handle-operation',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">{{'component.sendMessageOperation.automaticProcessSet' | wfLocale}}</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <perfect-scrollbar [config]=\"{}\">\r\n          <form class=\"h-100\">\r\n            <div class=\"farris-form form-inline farris-form-inline\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">{{'component.sendMessageOperation.automaticProcessMethod' | wfLocale}}</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <farris-combo-list [(ngModel)]=\"operation.autoHandleType\" name=\"cycleTimeUnit\" [idField]=\"'value'\" [textField]=\"'text'\"\r\n                                       [valueField]=\"'value'\" [data]=\"autoHandleType\" [panelHeight]=\"'auto'\"\r\n                                       [editable]=\"false\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-group-wrap my-3\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">{{'component.sendMessageOperation.automaticOpinionHandle' | wfLocale}}</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <textarea class=\"form-control\" type=\"text\" value=\"message\" [(ngModel)]=\"operation.message\" name=\"message\"\r\n                              [placeholder]=\"placeholder\" style=\"height: 100px;\"></textarea>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </perfect-scrollbar>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">{{'component.sendMessageOperation.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.sendMessageOperation.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
AutoHandleOperationComponent.ctorParameters = () => [
    { type: MessagerService },
    { type: ProcessDesignerUIState },
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
AutoHandleOperationComponent.propDecorators = {
    footer: [{ type: ViewChild, args: ['footer',] }],
    value: [{ type: Input }],
    submitEmitter: [{ type: Output }],
    closeEmitter: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    AutoHandleOperationComponent.prototype.footer;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.placeholder;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.operation;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.submitEmitter;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.closeEmitter;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.autoHandleType;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.message;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1oYW5kbGUtb3BlcmF0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvdGltZS1saW1pdC1jb250cm9sL2F1dG8taGFuZGxlLW9wZXJhdGlvbi9hdXRvLWhhbmRsZS1vcGVyYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBVSxRQUFRLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkosT0FBTyxFQUFFLFVBQVUsRUFBbUIsTUFBTSw4QkFBOEIsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFlBQVksRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBV25HLE1BQU0sT0FBTyw0QkFBNEI7Ozs7Ozs7OztJQTJCdkMsWUFDVSxPQUF3QixFQUN6QixPQUErQixFQUNsQixHQUFzQixFQUNmLFFBQWdCLEVBQ1IsU0FBYyxFQUM3QixVQUF3QjtRQUxwQyxZQUFPLEdBQVAsT0FBTyxDQUFpQjtRQUN6QixZQUFPLEdBQVAsT0FBTyxDQUF3QjtRQUNsQixRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUNmLGFBQVEsR0FBUixRQUFRLENBQVE7UUFDUixjQUFTLEdBQVQsU0FBUyxDQUFLO1FBQzdCLGVBQVUsR0FBVixVQUFVLENBQWM7UUFoQjlDLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLGNBQVMsR0FBZSxJQUFJLFVBQVUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FB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Qzs7SUFDaEMsK0NBQXNDOzs7OztJQUN0QywyQ0FBMEM7Ozs7O0lBQzFDLGdEQUEyQzs7Ozs7SUFDM0MsaURBQWlEOzs7OztJQUNqRCxrREFBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIEluamVjdCwgSW5wdXQsIExPQ0FMRV9JRCwgT25Jbml0LCBPcHRpb25hbCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEF1dG9IYW5kbGUsIEV4cGlyZU9wZXJhdGlvbiB9IGZyb20gXCIuLi90aW1lLWxpbWl0LWNvbnRyb2wuZW50aXR5XCI7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBQcm9jZXNzRGVzaWduZXJVSVN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vYXBwL3Byb2Nlc3MtZGVzaWduZXIudWlzdGF0ZSc7XHJcbmltcG9ydCB7IFdGX0xBTkdfUkVTT1VSQ0VTLCBXZkxvY2FsZVBpcGUgfSBmcm9tICcuLi8uLi8uLi9pMThuL3BpcGUvd2YtcHJvY2Vzcy1lZGl0b3ItbG9jYWxlLnBpcGUnO1xyXG5pbXBvcnQgeyBXRl9QUk9DRVNTX0VESVRPUl9MQU5HX1JFU09VUkNFUyB9IGZyb20gJy4uLy4uLy4uL2kxOG4vYXNzZXRzL2xhbmcucmVzb3VyY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItYXV0by1oYW5kbGUtb3BlcmF0aW9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYXV0by1oYW5kbGUtb3BlcmF0aW9uLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hdXRvLWhhbmRsZS1vcGVyYXRpb24uY29tcG9uZW50LmNzcyddLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgIFdmTG9jYWxlUGlwZSxcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBdXRvSGFuZGxlT3BlcmF0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZm9vdGVyJykgZm9vdGVyOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gIEBJbnB1dCgpXHJcbiAgc2V0IHZhbHVlKGluZm86IEF1dG9IYW5kbGUpIHtcclxuICAgIHRoaXMub3BlcmF0aW9uID0gT2JqZWN0LmFzc2lnbih7fSwgaW5mbyk7XHJcbiAgICBpZiAodGhpcy5vcGVyYXRpb24uYXV0b0hhbmRsZVR5cGUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICBjb25zdCBhdXRvSGFuZGxlID0gbmV3IEF1dG9IYW5kbGUodGhpcy5hdXRvSGFuZGxlVHlwZVswXS52YWx1ZSwgdGhpcy5sb2NhbGVQaXBlKTtcclxuICAgICAgdGhpcy5vcGVyYXRpb24uYXV0b0hhbmRsZVR5cGUgPSBhdXRvSGFuZGxlLmF1dG9IYW5kbGVUeXBlO1xyXG4gICAgICB0aGlzLm9wZXJhdGlvbi5tZXNzYWdlID0gYXV0b0hhbmRsZS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IHZhbHVlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMub3BlcmF0aW9uO1xyXG4gIH1cclxuXHJcbiAgcGxhY2Vob2xkZXIgPSAnJztcclxuICBvcGVyYXRpb246IEF1dG9IYW5kbGUgPSBuZXcgQXV0b0hhbmRsZSgnUGFzcycsIHRoaXMubG9jYWxlUGlwZSk7XHJcbiAgQE91dHB1dCgpIHN1Ym1pdEVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPEV4cGlyZU9wZXJhdGlvbj4oKTtcclxuICBAT3V0cHV0KCkgY2xvc2VFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIGF1dG9IYW5kbGVUeXBlID0gW1xyXG4gICAgLy8geyB2YWx1ZTogJ2F1dG9QYXNzJywgdGV4dDogJ+iHquWKqOmAmui/hycgfSxcclxuICAgIC8vIHsgdmFsdWU6ICdhdXRvQmFjaycsIHRleHQ6ICfoh6rliqjpqbPlm54nIH1cclxuICBdO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgbWVzc2FnZTogTWVzc2FnZXJTZXJ2aWNlLFxyXG4gICAgcHVibGljIHVpU3RhdGU6IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUsXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXHJcbiAgICBASW5qZWN0KExPQ0FMRV9JRCkgcHJpdmF0ZSBsb2NhbGVJZDogc3RyaW5nLFxyXG4gICAgQEluamVjdChXRl9MQU5HX1JFU09VUkNFUykgcHJpdmF0ZSByZXNvdXJjZXM6IGFueSxcclxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgbG9jYWxlUGlwZTogV2ZMb2NhbGVQaXBlLFxyXG4gICkge1xyXG4gICAgdGhpcy5sb2NhbGVQaXBlID0gdGhpcy5sb2NhbGVQaXBlIHx8IG5ldyBXZkxvY2FsZVBpcGUobG9jYWxlSWQsIHJlc291cmNlcyk7XHJcbiAgICBmb3IoY29uc3QgaXRlbSBvZiB0aGlzLnVpU3RhdGUucHJvcGVydHlEYXRhLkFwcHJvdmFsSXRlbXMpIHtcclxuICAgICAgdGhpcy5hdXRvSGFuZGxlVHlwZS5wdXNoKHt2YWx1ZTogaXRlbS5WYWx1ZSx0ZXh0OiBpdGVtLlRleHR9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxuXHJcbiAgY2xpY2tPSygpIHtcclxuICAgIGlmICh0aGlzLnZhbGlkYXRvcigpKSB7XHJcbiAgICAgIHRoaXMuc3VibWl0RW1pdHRlci5lbWl0KHRoaXMub3BlcmF0aW9uKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNsaWNrQ2FuY2VsKCkge1xyXG4gICAgdGhpcy5jbG9zZUVtaXR0ZXIuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB2YWxpZGF0b3IoKTogYm9vbGVhbiB7XHJcbiAgICBpZiAoIXRoaXMub3BlcmF0aW9uLm1lc3NhZ2UpIHtcclxuICAgICAgdGhpcy5tZXNzYWdlLmluZm8odGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50LnNlbmRNZXNzYWdlT3BlcmF0aW9uLm9waW5pb25zTm90RW1wdHknKSk7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIGlmICghdGhpcy5vcGVyYXRpb24uYXV0b0hhbmRsZVR5cGUpIHtcclxuICAgICAgdGhpcy5tZXNzYWdlLmluZm8odGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50LnNlbmRNZXNzYWdlT3BlcmF0aW9uLnByb2Nlc3NpbmdOb3RFbXB0eScpKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=