/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
export class AbstractDatagridComponent {
    /**
     * @param {?} messager
     * @param {?} notify
     * @param {?} metadataService
     * @param {?} modalService
     * @param {?} localePipe
     * @param {?} injector
     * @param {?} resolver
     * @param {?} cdf
     */
    constructor(messager, notify, metadataService, modalService, localePipe, injector, resolver, cdf) {
        this.messager = messager;
        this.notify = notify;
        this.metadataService = metadataService;
        this.modalService = modalService;
        this.localePipe = localePipe;
        this.injector = injector;
        this.resolver = resolver;
        this.cdf = cdf;
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
        this.toolbarData = [
            {
                id: 'btn-add',
                text: this.localePipe.instant("add"),
                class: 'btn btn-secondary',
                disabled: false
            },
            {
                id: 'btn-remove',
                text: this.localePipe.instant("remove"),
                class: 'btn btn-secondary',
                disabled: false
            },
        ];
        this.dgIdField = "id";
        this.editingRowId = null;
    }
    /**
     * @return {?}
     */
    get dgTotal() {
        return this.dgData.length || 0;
    }
    /**
     * @param {?} args
     * @return {?}
     */
    toolbarClickHandler(args) {
        switch (args.id) {
            case 'btn-add':
                this.add();
                break;
            case 'btn-remove':
                this.remove(null);
                break;
        }
    }
    /**
     * 开始行编辑
     * @param {?=} ctx
     * @return {?}
     */
    startRowEdit(ctx) {
        this.dg.editRow(ctx.rowData.id);
        this.editingRowId = ctx.rowData.id;
        this.cdf.detectChanges();
        return false;
    }
    /**
     * 取消行编辑
     * @param {?=} ctx
     * @return {?}
     */
    cancelRowEdit(ctx) {
        this.dg.cancelEdit(ctx.rowData.id);
        this.editingRowId = null;
        this.cdf.detectChanges();
        return false;
    }
    /**
     * 结束行编辑
     * @param {?=} ctx
     * @return {?}
     */
    endRowEdit(ctx) {
        this.dg.endRowEdit();
        this.editingRowId = null;
        this.cdf.detectChanges();
        return false;
    }
    /**
     * 行删除
     * @param {?} evt
     * @param {?=} ctx
     * @return {?}
     */
    remove(evt, ctx) {
        /** @type {?} */
        const ids = [];
        if (ctx == null) {
            // 批量删除
            this.dg.checkeds.forEach((/**
             * @param {?} it
             * @return {?}
             */
            it => {
                ids.push(it.id);
            }));
        }
        else {
            // 行内删除
            ids.push(ctx.rowData.id);
        }
        if (ids.length == 0) {
            this.notify.warning(this.localePipe.instant("pleaseSelectOneItemAtLeast"));
            if (evt != null) {
                evt.stopPropagation();
            }
            return false;
        }
        for (let id of ids) {
            this.dg.deleteRow(id);
        }
        this.dgData = this.dg.data;
        if (this.editingRowId != null) {
            if (ids.includes(this.editingRowId)) {
                this.editingRowId = null;
            }
            else {
                this.dg.editRow(this.editingRowId);
            }
        }
        this.cdf.detectChanges();
        if (evt != null) {
            evt.stopPropagation();
        }
        return false;
    }
    /**
     * 行移动
     * @param {?} evt
     * @param {?} ctx datagrid上下文
     * @param {?} direction -1: 上移， 1：下移
     * @return {?}
     */
    rowMove(evt, ctx, direction) {
        // const arr = dg.data;
        /** @type {?} */
        const arr = this.dgData;
        /** @type {?} */
        const index = this.findIndex(arr, ctx.rowData.id);
        if (index == -1 || (direction == 1 && index == arr.length - 1) || (direction == -1 && index == 0)) {
            return;
        }
        arr[index] = [arr[index + direction], arr[index + direction] = arr[index]][0];
        this.dgData = [...this.dgData];
        this.cdf.detectChanges();
        if (evt != null) {
            evt.stopPropagation();
        }
        return false;
    }
    /**
     * 查找数组中指定id的元素下标
     * @protected
     * @param {?} arr 数组
     * @param {?} id 数组唯一标识
     * @return {?} 元素下标
     */
    findIndex(arr, id) {
        /** @type {?} */
        let index = -1;
        for (let i = 0; i < arr.length; i++) {
            /** @type {?} */
            const elt = arr[i];
            if (elt.id == id) {
                index = i;
                break;
            }
        }
        return index;
    }
}
if (false) {
    /** @type {?} */
    AbstractDatagridComponent.prototype.groupIcon;
    /** @type {?} */
    AbstractDatagridComponent.prototype.toolbar;
    /** @type {?} */
    AbstractDatagridComponent.prototype.toolbarData;
    /** @type {?} */
    AbstractDatagridComponent.prototype.dg;
    /** @type {?} */
    AbstractDatagridComponent.prototype.dgIdField;
    /** @type {?} */
    AbstractDatagridComponent.prototype.dgColumns;
    /** @type {?} */
    AbstractDatagridComponent.prototype.dgIsEnabledStateCell;
    /** @type {?} */
    AbstractDatagridComponent.prototype.dgOpCell;
    /** @type {?} */
    AbstractDatagridComponent.prototype.editingRowId;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.messager;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.notify;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.metadataService;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.modalService;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.localePipe;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.injector;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.resolver;
    /**
     * @type {?}
     * @protected
     */
    AbstractDatagridComponent.prototype.cdf;
    /**
     * @abstract
     * @return {?}
     */
    AbstractDatagridComponent.prototype.dgData = function () { };
    /**
     * @abstract
     * @param {?} arr
     * @return {?}
     */
    AbstractDatagridComponent.prototype.dgData = function (arr) { };
    /**
     * @abstract
     * @return {?}
     */
    AbstractDatagridComponent.prototype.ngOnInit = function () { };
    /**
     * 新增行
     * @abstract
     * @return {?}
     */
    AbstractDatagridComponent.prototype.add = function () { };
    /**
     * @abstract
     * @return {?}
     */
    AbstractDatagridComponent.prototype.load = function () { };
    /**
     * @abstract
     * @return {?}
     */
    AbstractDatagridComponent.prototype.configDgColumns = function () { };
}
//# sourceMappingURL=data:application/json;base64,