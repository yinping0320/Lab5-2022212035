/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, ViewChild, TemplateRef, EventEmitter, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export class ExtendPropertyComponent {
    /**
     * @param {?} uiState
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(uiState, cdr, localeId, resources, localePipe) {
        this.uiState = uiState;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.modalConfig = {
            title: this.localePipe.transform("component.extendProperty.extendProperty"),
            width: 430,
            height: 370,
            showButtons: true
        };
        this.procExtendProperty = new Array();
        this.booleanlist = [
            { key: this.localePipe.transform("component.extendProperty.true"), value: 'true' },
            { key: this.localePipe.transform("component.extendProperty.false"), value: 'false' }
        ];
        this.extendPropertyList = {
            key: '',
            value: ''
        };
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @param {?} property
     * @return {?}
     */
    set value(property) {
        if (property && property.length > 0) {
            this.procExtendProperty = property.map((/**
             * @param {?} p
             * @return {?}
             */
            p => ({
                id: p.id,
                code: p.code,
                parentId: p.parentId,
                sortOrder: p.sortOrder,
                propertyNote: p.propertyNote,
                propertyTitle: p.propertyTitle,
                propertyLocation: p.propertyLocation,
                propertyType: p.propertyType,
                enumValue: p.enumValue,
                bizDefKey: p.bizDefKey,
                bizCategoryId: p.bizCategoryId,
                startMode: p.startMode,
                value: p.value,
            })));
        }
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    setProperty(obj) {
        this.uiState.propertyData = obj.propertyData;
        this.uiState.propertyConfig = obj.propertyConfig;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    clickOK() {
        /** @type {?} */
        const value = this.procExtendProperty;
        /** @type {?} */
        const object = { value, parameters: null };
        this.submitModal.emit(object);
    }
    /**
     * @return {?}
     */
    cancel() {
        this.closeModal.emit();
    }
}
ExtendPropertyComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-extend-property',
                template: "<div class=\"f-page\">\r\n  <div class=\"f-page-main\">\r\n    <section class=\"\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n      </div>\r\n      <div class=\"f-section-content\">\r\n        <div class=\"f-form-layout farris-form farris-form-controls-inline\">\r\n          <fieldset class=\"f-section-formgroup\"\r\n            style=\"flex-grow: 1; overflow-y: auto; height: 210px;\">\r\n            <div class=\"f-section-formgroup-inputs\">\r\n              <ng-container *ngFor=\"let data of procExtendProperty\">\r\n                <!-- \u6587\u672C\u578B\u5C5E\u6027\u6846 -->\r\n                <div *ngIf=\"data.propertyType === 'text'\" class=\"col-12 farris-group-auto pr-5\">\r\n                  <div class=\"farris-group-wrap\">\r\n                    <div class=\"form-group farris-form-group\">\r\n                      <label class=\"col-form-label\">\r\n                        <span class=\"farris-label-text\">{{data.propertyTitle}}</span>\r\n                      </label>\r\n                      <div class=\"farris-input-wrap ml-1\" style=\"padding-right: 30px\">\r\n                        <input-group [(ngModel)]=\"data.value\"></input-group>\r\n                        <div class=\"farris-feedback valid-feedback\"></div>\r\n                      </div>\r\n                      <span class=\"f-icon f-icon-info\" farrisPopover popoverTitle=\"{{'component.extendProperty.extendProperty'|wfLocale}}\"\r\n                        [popover]=\"data.propertyNote\" [container]=\"'body'\" [triggers]=\"'hover'\"\r\n                        [placement]=\"'left'\"></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- \u679A\u4E3E\u578B\u5C5E\u6027\u6846 -->\r\n                  <div *ngIf=\"data.propertyType === 'enum'\" class=\"col-12 farris-group-auto pr-5\">\r\n                    <div class=\"farris-group-wrap\">\r\n                      <div class=\"form-group farris-form-group\">\r\n                        <label class=\"col-form-label\">\r\n                          <span class=\"farris-label-text\">{{data.propertyTitle}}</span>\r\n                        </label>\r\n                        <div class=\"farris-input-wrap ml-1\" style=\"padding-right: 30px\">\r\n                          <farris-combo-list autoHeight=\"true\" [(ngModel)]=\"data.value\" name=\"booleanProperty\"\r\n                            [idField]=\"'value'\" [textField]=\"'key'\" [valueField]=\"'value'\" [data]=\"data.enumValue\"\r\n                            placeholder=\"{{'component.extendProperty.placeholder'|wfLocale}}\">\r\n                          </farris-combo-list>\r\n                          <div class=\"farris-feedback valid-feedback\"></div>\r\n                        </div>\r\n                        <span class=\"f-icon f-icon-info\" farrisPopover popoverTitle=\"{{'component.extendProperty.illustrate'|wfLocale}}\"\r\n                          [popover]=\"data.propertyNote\" [container]=\"'body'\" [triggers]=\"'hover'\"\r\n                          [placement]=\"'left'\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                <!-- \u5E03\u5C14\u578B\u5C5E\u6027\u6846 mt-4 -->\r\n                  <div *ngIf=\"data.propertyType === 'boolean'\" class=\"col-12 farris-group-auto pr-5\">\r\n                    <div class=\"farris-group-wrap\">\r\n                      <div class=\"form-group farris-form-group\">\r\n                        <label class=\"col-form-label\">\r\n                          <span class=\"farris-label-text\">{{data.propertyTitle}}</span>\r\n                        </label>\r\n                        <div class=\"farris-input-wrap ml-1\" style=\"padding-right: 30px\">\r\n                          <farris-combo-list autoHeight=\"true\" [(ngModel)]=\"data.value\" name=\"booleanProperty\"\r\n                            [idField]=\"'value'\" [textField]=\"'key'\" [valueField]=\"'value'\" [data]=\"booleanlist\"\r\n                            placeholder=\"{{'component.extendProperty.placeholder'|wfLocale}}\">\r\n                          </farris-combo-list>\r\n                          <div class=\"farris-feedback valid-feedback\"></div>\r\n                        </div>\r\n                        <span class=\"f-icon f-icon-info\" farrisPopover popoverTitle=\"{{'component.extendProperty.illustrate'|wfLocale}}\"\r\n                          [popover]=\"data.propertyNote\" [container]=\"'body'\" [triggers]=\"'hover'\"\r\n                          [placement]=\"'left'\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              </ng-container>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"cancel()\">{{'component.extendProperty.cancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.extendProperty.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
ExtendPropertyComponent.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
ExtendPropertyComponent.propDecorators = {
    closeModal: [{ type: Output }],
    submitModal: [{ type: Output }],
    modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
    value: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ExtendPropertyComponent.prototype.closeModal;
    /** @type {?} */
    ExtendPropertyComponent.prototype.submitModal;
    /** @type {?} */
    ExtendPropertyComponent.prototype.modalFooter;
    /** @type {?} */
    ExtendPropertyComponent.prototype.modalConfig;
    /** @type {?} */
    ExtendPropertyComponent.prototype.procExtendProperty;
    /** @type {?} */
    ExtendPropertyComponent.prototype.booleanlist;
    /** @type {?} */
    ExtendPropertyComponent.prototype.extendPropertyList;
    /**
     * @type {?}
     * @private
     */
    ExtendPropertyComponent.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    ExtendPropertyComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    ExtendPropertyComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    ExtendPropertyComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    ExtendPropertyComponent.prototype.localePipe;
}
export class ExtendPropertyConverter {
    /**
     * @param {?} localePipe
     */
    constructor(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    convertTo(data) {
        if (data && data instanceof Array && data.some((/**
         * @param {?} item
         * @return {?}
         */
        item => item.value))) {
            return this.localePipe.transform("component.extendProperty.set");
        }
        return this.localePipe.transform("component.extendProperty.notSet");
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    ExtendPropertyConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,