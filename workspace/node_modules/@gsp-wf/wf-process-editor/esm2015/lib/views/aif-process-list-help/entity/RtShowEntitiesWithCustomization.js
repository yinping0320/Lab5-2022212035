/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BpmnModelJsonHelper } from '@edp-bif/common-api';
import { RtShowEntity } from './RtShowEntity';
export class RtShowEntitiesWithCustomization extends RtShowEntity {
    constructor() {
        super(...arguments);
        this.customizationEntities = new Array();
    }
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.isEnabled = false;
        this.customizationEntities.length = 0;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "customizationEntities", this.customizationEntities);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.customizationEntities = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "customizationEntities", RtShowEntitiesWithCustomization);
    }
    /**
     * @protected
     * @return {?}
     */
    getTClass() {
        return RtShowEntitiesWithCustomization;
    }
}
if (false) {
    /** @type {?} */
    RtShowEntitiesWithCustomization.prototype.isEnabled;
    /** @type {?} */
    RtShowEntitiesWithCustomization.prototype.customizationEntities;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnRTaG93RW50aXRpZXNXaXRoQ3VzdG9taXphdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvYWlmLXByb2Nlc3MtbGlzdC1oZWxwL2VudGl0eS9SdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFOUMsTUFBTSxPQUFPLCtCQUFnQyxTQUFRLFlBQVk7SUFBakU7O1FBRUksMEJBQXFCLEdBQTJDLElBQUksS0FBSyxFQUFFLENBQUM7SUE0QmhGLENBQUM7Ozs7O0lBMUJhLG1CQUFtQjtRQUN6QixLQUFLLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMscUJBQXFCLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMxQyxDQUFDOzs7O0lBRU0sbUJBQW1COztZQUNsQixHQUFHLEdBQUcsS0FBSyxDQUFDLG1CQUFtQixFQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUVoRyxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sa0JBQWtCLENBQUMsR0FBTztRQUM3QixLQUFLLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDbEYsSUFBSSxDQUFDLHFCQUFxQixHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSwrQkFBK0IsQ0FBQyxDQUFDO0lBQzVJLENBQUM7Ozs7O0lBRVMsU0FBUztRQUNmLE9BQU8sK0JBQStCLENBQUM7SUFDM0MsQ0FBQztDQUNKOzs7SUE3Qkcsb0RBQW1COztJQUNuQixnRUFBNEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnQGVkcC1iaWYvY29tbW9uLWFwaSc7XHJcbmltcG9ydCB7IFJ0U2hvd0VudGl0eSB9IGZyb20gJy4vUnRTaG93RW50aXR5JztcclxuXHJcbmV4cG9ydCBjbGFzcyBSdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uIGV4dGVuZHMgUnRTaG93RW50aXR5IHtcclxuICAgIGlzRW5hYmxlZDogYm9vbGVhbjtcclxuICAgIGN1c3RvbWl6YXRpb25FbnRpdGllczogQXJyYXk8UnRTaG93RW50aXRpZXNXaXRoQ3VzdG9taXphdGlvbj4gPSBuZXcgQXJyYXkoKTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuaXNFbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jdXN0b21pemF0aW9uRW50aXRpZXMubGVuZ3RoID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiaXNFbmFibGVkXCIsIHRoaXMuaXNFbmFibGVkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjdXN0b21pemF0aW9uRW50aXRpZXNcIiwgdGhpcy5jdXN0b21pemF0aW9uRW50aXRpZXMpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmlzRW5hYmxlZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0Jvb2xlYW4ob2JqLCBcImlzRW5hYmxlZFwiKTtcclxuICAgICAgICB0aGlzLmN1c3RvbWl6YXRpb25FbnRpdGllcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcImN1c3RvbWl6YXRpb25FbnRpdGllc1wiLCBSdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgZ2V0VENsYXNzKCkge1xyXG4gICAgICAgIHJldHVybiBSdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uO1xyXG4gICAgfVxyXG59Il19