/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, Inject, Input, LOCALE_ID, Optional, ViewChild } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { MessagerService } from '@farris/ui-messager';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { SmsMessageTemplate, SmsMessageVariable } from './sms-message-template';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export class SmsMessageTemplateComponent {
    /**
     * @param {?} designerState
     * @param {?} expr
     * @param {?} message
     * @param {?} cdr
     * @param {?} localeId
     * @param {?} resources
     * @param {?} localePipe
     */
    constructor(designerState, expr, message, cdr, localeId, resources, localePipe) {
        this.designerState = designerState;
        this.expr = expr;
        this.message = message;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.smsVariableList = new Array();
        this.smsVariableCols = new Array();
        this.smsTemplateContent = this.localePipe.transform('component.smsMessageTemplate.smsTemplateContent');
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
        this.smsMessageTemplate = new SmsMessageTemplate();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.smsVariableCols = [{
                field: 'code', width: 80, title: this.localePipe.transform('component.smsMessageTemplate.code'), editor: { type: EditorTypes.TEXTBOX, options: {} }
            }, {
                field: 'value', width: 100, title: this.localePipe.transform('component.smsMessageTemplate.value'), showTips: true, editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            this.showExprHelp(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        (e) => {
                            console.log('clear', e);
                        })
                    }
                }
            }];
        console.log(this.smsMessageTemplate);
    }
    /**
     * @return {?}
     */
    addSmsVariable() {
        /** @type {?} */
        const variable = new SmsMessageVariable();
        this.smsMessageTemplate.smsMessageVariables.push(variable);
        this.grid.loadData(this.smsMessageTemplate.smsMessageVariables);
    }
    /**
     * @return {?}
     */
    deleteSmsVariable() {
        this.endGridEdit();
        /** @type {?} */
        const selectedVariable = this.grid.selectedRow;
        if (!selectedVariable) {
            this.message.info(this.localePipe.transform('component.smsMessageTemplate.noRowsSelected'));
            return;
        }
        /** @type {?} */
        const index = this.smsMessageTemplate.smsMessageVariables.findIndex((/**
         * @param {?} variable
         * @return {?}
         */
        variable => variable.id === selectedVariable.id));
        if (index > -1) {
            this.smsMessageTemplate.smsMessageVariables.splice(index, 1);
            this.grid.loadData(this.smsMessageTemplate.smsMessageVariables);
        }
    }
    /**
     * @return {?}
     */
    endGridEdit() {
        this.grid.endCellEdit();
    }
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    showExprHelp(e) {
        // this.expr.clearContext();
        if (this.designerState.schemas.length > 0) {
            for (const schema of this.designerState.schemas) {
                this.expr.addSchema('Schema', schema);
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                const entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        let context = new Array();
        context = this.designerState.addContext(context);
        if (this.designerState.subActivityContext.length > 0) {
            for (const variable of this.designerState.subActivityContext) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => c.key === variable.key))) {
                    context.push(variable);
                }
            }
        }
        if (context.length > 0) {
            for (const v of context) {
                this.expr.addContext(v);
            }
        }
        this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器
        this.expr.addExpressionText(e.instance.value);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        (expressioninfo) => {
            e.formControl.setValue(expressioninfo);
            e.instance.cd.detectChanges();
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                x => !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                y => y.key === x.key))));
            }
        }));
    }
}
SmsMessageTemplateComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-sms-message-template',
                template: "<div class=\"w-100\">\r\n  <farris-section class=\"py-0 \" [enableAccordion]=\"''\" [enableMaximize]=\"false\">\r\n    <ng-template farrisSectionHeader>\r\n      <div class=\"f-title\">\r\n        <h4 class=\"f-title-text\">{{'component.smsMessageTemplate.smsMessageTemplate'|wfLocale}}</h4>\r\n        <span farrisPopover class=\"f-icon f-icon-message_help\" style=\"color:#FBB902\" [container]=\"'body'\"\r\n          [triggers]=\"'hover'\" [placement]=\"'right'\" [popover]=\"poptmpl\">\r\n        </span>\r\n        <ng-template #poptmpl let-infos>\r\n          <div style=\"padding:10px 10px 10px 10px;font-size: 12px;color: black;width: 260px;\">\r\n            <h4 style=\"font-weight: 600;font-size: 16px;color: saddlebrown;\">{{'component.smsMessageTemplate.smsMessageTemplate'|wfLocale}}</h4>\r\n            <p style=\"margin: 0 0 10px;\">{{'component.smsMessageTemplate.tips1'|wfLocale}}</p>\r\n            <h4 style=\"font-weight: 600;font-size: 16px;color: saddlebrown;\">{{'component.smsMessageTemplate.smsTemplateNumber'|wfLocale}}</h4>\r\n            <p style=\"margin: 0 0 10px;\">{{'component.smsMessageTemplate.tips2'|wfLocale}}</p>\r\n            <!-- <h4 style=\"font-weight: 600;font-size: 16px;color: saddlebrown;\">\u77ED\u4FE1\u6A21\u677F\u5185\u5BB9</h4>\r\n            <p style=\"margin: 0 0 10px;\">{{smsTemplateContent}}</p> -->\r\n            <h4 style=\"font-weight: 600;font-size: 16px;color: saddlebrown;\">{{'component.smsMessageTemplate.smsVariableBinding'|wfLocale}}</h4>\r\n            <p style=\"margin: 0 0 10px;\">{{'component.smsMessageTemplate.tips3'|wfLocale}}</p>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n    </ng-template>\r\n    <div class=\"f-form-layout farris-form  farris-form-controls-inline f-form-lable-auto farris-form-auto\">\r\n      <div class=\"col-12\">\r\n        <div class=\"farris-group-wrap\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-info text-danger\">*</span>\r\n              <span class=\"farris-label-text\">{{'component.smsMessageTemplate.smsTemplateNumber'|wfLocale}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap ml-1\">\r\n              <input [(ngModel)]=\"smsMessageTemplate.code\" class=\"form-control\" name=\"tempCode\" type=\"text\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"col-12\">\r\n        <div class=\"farris-group-wrap\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-info text-danger\" style=\"visibility: hidden;\">*</span>\r\n              <span class=\"farris-label-text\">\u77ED\u4FE1\u6A21\u677F\u5185\u5BB9</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap ml-1\">\r\n              <textarea [(ngModel)]=\"smsMessageTemplate.content\"  class=\"form-control \" cols=\"10\" id=\"textobj\" name=\"tempText\" rows=\"3\"> </textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </farris-section>\r\n</div>\r\n<div class=\"w-100\">\r\n  <farris-section class=\"pt-0 f-section-grid f-section-in-managelist\"\r\n    enableAccordion=\"{{'component.smsMessageTemplate.smsTemplateNumber'|wfLocale}}\" [enableMaximize]=\"false\" [mainTitle]=\"''\">\r\n    <!-- <ng-template farrisSectionTitle>\r\n      <div class=\"farris-label-text\">\u77ED\u4FE1\u53D8\u91CF\u7ED1\u5B9A</div>\r\n    </ng-template> -->\r\n    <ng-template farrisSectionToolbar>\r\n      <farris-button [type]=\"'link'\" (click)=\"addSmsVariable()\">\r\n        <span class=\"f-icon f-icon-add\"></span>\r\n        {{'component.smsMessageTemplate.addSmsVariable'|wfLocale}}</farris-button>\r\n      <farris-button [type]=\"'link'\" (click)=\"deleteSmsVariable()\">\r\n        <span class=\"f-icon f-icon-delete\"></span>\r\n        {{'component.smsMessageTemplate.deleteSmsVariable'|wfLocale}}</farris-button>\r\n    </ng-template>\r\n    <div style=\"height: 180px\">\r\n      <farris-datagrid #grid [data]=\"smsMessageTemplate.smsMessageVariables\" [idField]=\"'id'\" [columns]=\"smsVariableCols\"\r\n        [fit]=\"true\" [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\"\r\n        [showLineNumber]=\"true\" [showCheckbox]=\"false\" [multiSelect]=\"false\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </farris-section>\r\n</div>\r\n",
                providers: [
                    WfLocalePipe,
                ],
                styles: [""]
            }] }
];
/** @nocollapse */
SmsMessageTemplateComponent.ctorParameters = () => [
    { type: ProcessDesignerUIState },
    { type: ExpressionService },
    { type: MessagerService },
    { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
    { type: WfLocalePipe, decorators: [{ type: Optional }] }
];
SmsMessageTemplateComponent.propDecorators = {
    grid: [{ type: ViewChild, args: ['grid',] }],
    smsMessageTemplate: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SmsMessageTemplateComponent.prototype.grid;
    /** @type {?} */
    SmsMessageTemplateComponent.prototype.smsVariableList;
    /** @type {?} */
    SmsMessageTemplateComponent.prototype.smsVariableCols;
    /** @type {?} */
    SmsMessageTemplateComponent.prototype.smsTemplateContent;
    /** @type {?} */
    SmsMessageTemplateComponent.prototype.smsMessageTemplate;
    /**
     * @type {?}
     * @private
     */
    SmsMessageTemplateComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    SmsMessageTemplateComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    SmsMessageTemplateComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    SmsMessageTemplateComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    SmsMessageTemplateComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    SmsMessageTemplateComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    SmsMessageTemplateComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,