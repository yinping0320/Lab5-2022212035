{"version":3,"sources":["ng://@gsp-wf/wf-process-editor/lib/wf-process-editor.service.ts","ng://@gsp-wf/wf-process-editor/lib/model/process-time.ts","node_modules/tslib/tslib.es6.js","ng://@gsp-wf/wf-process-editor/lib/domain/entities/flowform-info.ts","ng://@gsp-wf/wf-process-editor/lib/i18n/pipe/wf-process-editor-locale.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/app/process-designer.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/domain/process-de-util.ts","ng://@gsp-wf/wf-process-editor/lib/domain/process-designer.dataservice.ts","ng://@gsp-wf/wf-process-editor/lib/model/process-clrtypeId.ts","ng://@gsp-wf/wf-process-editor/lib/views/entryForm/entry-form-editor.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/domain/entities/biz-component.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.repository.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/edit-component-parameter/edit-component-parameter.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-component/activity-component.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.repository.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/execute-form.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/add-execute-form/form-format.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/execute-form.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/add-execute-form/add-execute-form.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/variable-grid/variable-grid.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/parameter-setting/parameter-setting.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/execute-forms.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/title-expression/title-expression.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/customize-action/entities/customize-action.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/customize-action/views/customize-action-list/customize-action-list.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/customize-action/customize-action.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/process-variables/process-variable.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/constant-edit/constant-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component-edit-lookup.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component-edit.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/views/component-edit/component-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/process-variables/process-variables.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/time-limit-control.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/sms-message-template/sms-message-template.ts","ng://@gsp-wf/wf-process-editor/lib/views/sms-message-template/sms-message-template.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/send-message-operation/send-message-operation.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/auto-handle-operation/auto-handle-operation.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/time-limit-control/time-limit-control.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-receiver.ts","ng://@gsp-wf/wf-process-editor/lib/views/activity-list/activity-list.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/entities/performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/entities/position-performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/position-performer/positions-name.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/position-performer/position-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice-edit/message-notice-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice-batchSet.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice-copy/message-notice-copy.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/message-notice/message-notice.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/extend-property/extend-property.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/image-set/image-set.ts","ng://@gsp-wf/wf-process-editor/lib/views/image-set/image-set.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-ui-common/pipe/aif-ui-common-locale.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/views/start-condition/start-condition.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/start-condition/abstract-datagrid-component.ts","ng://@gsp-wf/wf-process-editor/lib/views/start-condition/i18n/lang.resource.ts","ng://@gsp-wf/wf-process-editor/lib/views/start-condition/start-condition.component.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/ProcessPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/bpmn-process.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/approvel-items/entities/approval-item.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/sign-rule/entites/sign-rule.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/sign-rule/sign-rule.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/approvel-items/approvel-items.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/expressionEditor/expression-editor.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/jump-scope/jump-scope.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/backward-rule/backward-rule.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/backward-rule/backward-rule.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.repository.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/entities/user-performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer-config.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/user-performer/user-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/component-performer/component-performer.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/component-performer/component-performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/component-performer/component-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/reporting-line-data.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/service/wf-report-def-help.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/service/wf-report-def-help.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/reporting-line/reporting-line.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/entitis/matrix-def-info.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/entitis/matrix-data-info.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/enum-list/enum-list.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/service/matrix-performer.component.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/matrix-performer/matrix-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/activity-executor-performer/entities/activity-executor.participant.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/activity-executor-performer/activity-executor-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/domain/entities/organization-participant-expression.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/entities/variable-performer.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/variable-performer/variable-performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/performer-edit/performer-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/performer-options/performer-options.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/performer.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/organization-potential-owner/actionOrganizationScope.ts","ng://@gsp-wf/wf-process-editor/lib/views/participant/participant.info.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-strategy/assign-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-strategy/assign-strategy.ts","ng://@gsp-wf/wf-process-editor/lib/views/participant/participant.uistate.ts","ng://@gsp-wf/wf-process-editor/lib/views/participant/alternative-participant/alternative-participant.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/organization-potential-owner/organization-potential-owner.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/anonymous-set/anonymous-set.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/anonymous-set/anonymous-set.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/variable-setting.ts","ng://@gsp-wf/wf-process-editor/lib/views/variable-setting/variable-setting.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/approval-pivot/approval-pivot-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/approval-pivot/approval-pivot.ts","ng://@gsp-wf/wf-process-editor/lib/views/approval-pivot/approval-pivot.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/urge-handle-rule/urge-handle-rule.ts","ng://@gsp-wf/wf-process-editor/lib/views/urge-handle-rule/urge-handle-rule.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/check-condition/check-condition.ts","ng://@gsp-wf/wf-process-editor/lib/views/check-condition/check-condition.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-strategy/assign-strategy.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/participant/assign-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/participant/participant.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-scope/condition.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-scope/other-assign-activity-node-info.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-scope/assign-scope.component.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/UserActivityPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/views/multi-instance-loop-characteristics/multi-instance-loop-characteristics.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/multi-instance-loop-characteristics/multi-instance-loop-characteristics.component.ts","ng://@gsp-wf/wf-process-editor/lib/app/wf-flowElements.viewModel.ts","ng://@gsp-wf/wf-process-editor/lib/views/save-as-edit/save-as-edit.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/BillSourceType.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/SubProcessType.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/call-activity-sub-process.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/BifMonitorConstant.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/BifMetadataType.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/AbstractShowEntity.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/RtShowEntity.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/RtShowEntitiesWithCustomization.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/RtBillProcessListResult.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/services/process-list-help.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/ProcessFilterConditionArgs.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/OrderByDirection.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/i18n/lang.resource.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/components/process-list-help/process-list-help.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process2/call-activity-sub-process2.component.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/CallActivitySubProcessPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/sub-process.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/AutoActivityPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/auto-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/views/event-definition/event-definition.entity.ts","ng://@gsp-wf/wf-process-editor/lib/views/event-definition/event-definition.component.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/IntermediateCatchEventImplPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/catch-event.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/MessageActivityPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/message-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/domain/entities/audit-processDef-info.ts","ng://@gsp-wf/wf-process-editor/lib/model/process-info.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/NotifyActivityPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/notify-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/AifCreationBillProcessConverter.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/AifCreationBillActivityPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/aif-creation-bill-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/views/shared/event-bus.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/release-component/release-component.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/bill-type-help/entity/DocuTypeHelperEntity.ts","ng://@gsp-wf/wf-process-editor/lib/views/bill-type-help/bill-type-help.service.ts","ng://@gsp-wf/wf-process-editor/lib/views/bill-type-help/i18n/lang.resource.ts","ng://@gsp-wf/wf-process-editor/lib/views/bill-type-help/bill-type-help/bill-type-help.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/vo-config/vo-config.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/wf-options/wf-options.component.ts","ng://@gsp-wf/wf-process-editor/lib/app/bill-node-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/SequenceFlowPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/app/sequecne-activity.adapter.ts","ng://@gsp-wf/wf-process-editor/lib/app/process-designer.viewmodel.ts","ng://@gsp-wf/wf-process-editor/lib/views/note/note.component.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/MessageReceiver.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/BizComponent.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/BizParameter.ts","ng://@gsp-wf/wf-process-editor/lib/designer/WfConstants.ts","ng://@gsp-wf/wf-process-editor/lib/designer/WfDesignerUtils.ts","ng://@gsp-wf/wf-process-editor/lib/designer/WfEvents.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/Participant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/UserParticipant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/VariablePerformer.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/PositionParticipant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/ComponentParticipant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/ReportingLineParticipant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/ActivityExecutorParticipant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/MatrixParticipant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/OrganizationParticipant.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/ActionScope.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/PropertyHelper.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/WfProcessCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/WfGraph.ts","ng://@gsp-wf/wf-process-editor/lib/designer/WfSidebar.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/WfExclusiveGatewayCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/AifCreationBillActivityCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/AutoActivityCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/CallActivitySubProcessCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/IntermediateCatchEventImplCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/MessageActivityCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/ActualParameter.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/NotifyActivityCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/AssignConfig.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/AssignStrategy.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/ParticipantInfo.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/ProcExtendProperty.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/UserActivityCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/OperationActivityCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/StartActivityCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/property-keys/StartActivityPropertyKeys.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/WfParallelGatewayCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/WfEndEventCell.ts","ng://@gsp-wf/wf-process-editor/lib/designer/wf-cell/WfInclusiveGatewayCell.ts","ng://@gsp-wf/wf-process-editor/lib/views/batch-set-properties/batch-set-properties.component.ts","ng://@gsp-wf/wf-process-editor/lib/designer/WfEditorUi.ts","ng://@gsp-wf/wf-process-editor/lib/designer/WfValidatorAdapter.ts","ng://@gsp-wf/wf-process-editor/lib/model/event-bus-keys.ts","ng://@gsp-wf/wf-process-editor/lib/i18n/assets/lang.resource.ts","ng://@gsp-wf/wf-process-editor/lib/wf-process-editor.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/assign-performer-config/assign-performer-config.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/jump-scope/jump-scope.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/user-performer/users-name.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/index.ts","ng://@gsp-wf/wf-process-editor/lib/views/call-activity-sub-process/call-activity-sub-process.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/form-format.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/form-format-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/entities/form-method-config.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/form-operation-config/form-operation-config.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/form-format-config/form-format-config.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/execute-forms/form-config-container/form-config-container.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/entity/VOTemplateType.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/utils/common-model-type-helper.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/components/proc-help-query-solution/proc-help-query-solution.component.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-ui-common/aif-ui-common.module.ts","ng://@gsp-wf/wf-process-editor/lib/views/aif-process-list-help/process-list-help.module.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/activity-executor-performer/entities/activity-executor.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/views/performer/views/variable-performer/variable-name.pipe.ts","ng://@gsp-wf/wf-process-editor/lib/views/bill-type-help/bill-type-help.module.ts","ng://@gsp-wf/wf-process-editor/lib/service/translate-resolve.service.ts","ng://@gsp-wf/wf-process-editor/lib/wf-process-editor-routing.module.ts","ng://@gsp-wf/wf-process-editor/lib/i18n/wf-process-editor-locale.module.ts","ng://@gsp-wf/wf-process-editor/lib/wf-process-editor.module.ts","ng://@gsp-wf/wf-process-editor/lib/model/rt-process-info.ts","ng://@gsp-wf/wf-process-editor/lib/designer/entity/OrganizationLevel.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WfProcessEditorService {\r\n\r\n  constructor() { }\r\n}\r\n","export enum ProcessTime {\r\n    dt = 'dt',\r\n    rt = 'rt'\r\n}\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import { FlowFormEntity } from './flowform.entity';\r\nimport { FormalParameterEntity } from './formal-parameter.entity';\r\nimport { BizComponentEntity } from './biz-component.entity';\r\nimport { ExcuteFormEntity } from './excute-form.entity';\r\n\r\nexport class FlowFormInfo {\r\n    flowForm: FlowFormEntity;\r\n    formalParameters: Array<FormalParameterEntity>;\r\n    bizComponents: Array<BizComponentEntity>;\r\n    excuteForms: Array<ExcuteFormEntity>;\r\n    bizActivities: Array<any>;\r\n    customizeActions: Array<any>;\r\n}\r\n","import { Pipe, PipeTransform, Inject, LOCALE_ID, InjectionToken, Optional } from '@angular/core';\r\n\r\nexport const WF_LANG_RESOURCES = new InjectionToken(\"WF_LANG_RESOURCES\");\r\n\r\n@Pipe({ name: 'wfLocale' })\r\nexport class WfLocalePipe implements PipeTransform {\r\n    private readonly defaultLang: string = \"zh-CHS\";\r\n    public langCode: string;\r\n    private lang: {};\r\n    private resources;\r\n    constructor(\r\n        @Optional() @Inject(LOCALE_ID) localeId: string,\r\n        @Optional() @Inject(WF_LANG_RESOURCES) resources: any,\r\n    ) {\r\n        this.langCode = localeId || this.defaultLang;\r\n        this.resources = resources || {};\r\n        this.lang = resources[this.langCode] || resources[this.defaultLang] || {};\r\n    }\r\n    transform(name: string): any {\r\n        const keys = name.split(\".\")\r\n        let temp = this.lang;\r\n        for (let key of keys) {\r\n            temp = temp[key];\r\n            if (temp == null) {\r\n                break;\r\n            }\r\n        }\r\n        return temp || name;\r\n    }\r\n\r\n    instant(name: string): any {\r\n        return this.transform(name);\r\n    }\r\n}\r\n\r\n","import {Injectable, Injector} from '@angular/core';\r\nimport {KeyMap} from '@farris/ide-property-panel';\r\nimport {FlowFormInfo} from '../domain/entities/flowform-info';\r\nimport {VarEntity} from '@gsp-svc/expression';\r\nimport {GSPCommonModel} from '@gsp-bef/gsp-cm-metadata';\r\nimport {HttpService} from '@ecp-caf/caf-common';\r\nimport {forkJoin, Observable} from 'rxjs';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { ProcessTime } from '../model/process-time';\r\nimport { BpmnModel } from '@edp-pmf/bpmn-model';\r\n\r\n@Injectable()\r\n\r\nexport class ProcessDesignerUIState {\r\n  scene: string;\r\n  rootPath = '';\r\n  constructor(\r\n    private http: HttpService,\r\n    private localePipe: WfLocalePipe\r\n    ) {\r\n    try {\r\n      this.rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // 入口单据Info\r\n  flowFormInfo: FlowFormInfo = new FlowFormInfo();\r\n\r\n  // Model上下文\r\n  content = '';\r\n\r\n  // 属性框\r\n  propertyConfig: any[] = [];\r\n  propertyData: any = {};\r\n\r\n  // 设计器地址\r\n  POST_MESSAGE_TARGET = window.document.location.origin + this.rootPath +'/platform/runtime/wf/web/designer/index.html';\r\n\r\n  BE: GSPCommonModel;\r\n  schemas: any[] = [];\r\n\r\n  // 审批活动属性\r\n  counterSignVariables: any[] = [];\r\n  approvalItems: any[] = [];\r\n\r\n  // 流程的审批活动节点信息\r\n  userActList = [];\r\n  // 流程包括结束和审批活动节点的信息\r\n  allActList = [];\r\n  // 流程包括审批活动，知会活动，消息的节点信息\r\n  MessageActList = [];\r\n  NotifyActKist = [];\r\n  SubAndCatchActList = [];\r\n  // 记录当前选中用户活动节点的bizActivityId\r\n  bizActivityId: string;\r\n\r\n  enableAdminOrgAut = false;\r\n  enableFlowFormAut = false;\r\n\r\n  procDefId: string;\r\n  time: ProcessTime;\r\n\r\n  // 流程管理员信息\r\n  isAdministratorConfig = false;\r\n  administrator: any;\r\n  // organizations: any[] = new Array();\r\n  startMode: string;\r\n\r\n  //\r\n  bpmnModel: BpmnModel;\r\n\r\n  // 审批活动属性枚举===========================================================================================\r\n  public assignIterator: KeyMap[] = [{key: 'ALL', value: this.localePipe.transform(\"app.processDesigner.all\")},\r\n    {key: 'ASSIGN', value: this.localePipe.transform(\"app.processDesigner.assign\")},\r\n    {key: 'CLAIM', value: this.localePipe.transform(\"app.processDesigner.claim\")}];\r\n  public completeIterator: KeyMap[] = [{key: 'Preempt', value: this.localePipe.transform(\"app.processDesigner.preempt\")},\r\n    {key: 'Parallel', value: this.localePipe.transform(\"app.processDesigner.parallel\")},\r\n    {key: 'Sequential', value: this.localePipe.transform(\"app.processDesigner.sequential\")}];\r\n  public completeIterator4Claim: KeyMap[] = [{key: 'Preempt', value: this.localePipe.transform(\"app.processDesigner.preempt\")}];\r\n  public boolIterator: KeyMap[] = [{key: true, value: this.localePipe.transform(\"app.processDesigner.true\")},\r\n    {key: false, value:  this.localePipe.transform(\"app.processDesigner.false\")}];\r\n  // 会签不允许跳转\r\n  public noJump4Sign: KeyMap[] = [{key: false, value: this.localePipe.transform(\"app.processDesigner.false\")}];\r\n  // =================================================================================================\r\n\r\n  // 流程实例上下文-----------------------------------------------\r\n  procInstContext: VarEntity[] = [\r\n    {key: 'dataId', name: this.localePipe.transform(\"app.processDesigner.dataId\"), description: 'this.localePipe.transform(\"app.processDesigner.dataId\")'},\r\n    {key: 'procInstId', name: this.localePipe.transform(\"app.processDesigner.procInstId\"), description: this.localePipe.transform(\"app.processDesigner.procInstId\")},\r\n    {key: 'bizDefKey', name: this.localePipe.transform(\"app.processDesigner.bizDefKey\"), description: this.localePipe.transform(\"app.processDesigner.bizDefKey\")},\r\n    {key: 'processDefinitionKey', name: this.localePipe.transform(\"app.processDesigner.processDefinitionKey\"), description: this.localePipe.transform(\"app.processDesigner.processDefinitionKey\")},\r\n    {key: 'procInstCreator', name: this.localePipe.transform(\"app.processDesigner.procInstCreator\"), description: this.localePipe.transform(\"app.processDesigner.procInstCreator\")},\r\n    {key: 'businessCreator', name: this.localePipe.transform(\"app.processDesigner.businessCreator\"), description: this.localePipe.transform(\"app.processDesigner.businessCreator\")},\r\n    {key: 'procInstDescription', name: this.localePipe.transform(\"app.processDesigner.procInstDescription\"), description: this.localePipe.transform(\"app.processDesigner.procInstDescription\")},\r\n    {key: 'comment', name: this.localePipe.transform(\"app.processDesigner.comment\"), description: this.localePipe.transform(\"app.processDesigner.comment\") },\r\n    {key: 'bizDefName', name: this.localePipe.transform(\"app.processDesigner.bizDefName\"), description: this.localePipe.transform(\"app.processDesigner.bizDefName\")},\r\n    {key: 'curLoginUsername', name: this.localePipe.transform(\"app.processDesigner.curLoginUsername\"), description: this.localePipe.transform(\"app.processDesigner.curLoginUsername\")},\r\n    {key: 'procInstCreatorName', name: this.localePipe.transform(\"app.processDesigner.procInstCreatorName\"), description: this.localePipe.transform(\"app.processDesigner.procInstCreatorName\") },\r\n    {key: 'currentParticipantId', name: this.localePipe.transform(\"app.processDesigner.currentParticipantId\"), description: this.localePipe.transform(\"app.processDesigner.currentParticipantId\")},\r\n    {key: 'currentParticipantName', name: this.localePipe.transform(\"app.processDesigner.currentParticipantName\"), description: this.localePipe.transform(\"app.processDesigner.currentParticipantName\")}\r\n  ];\r\n\r\n  // 催办上下文--------------------------------------------------\r\n  urgeContext: VarEntity[] = [\r\n    {key: 'dataId', name: this.localePipe.transform(\"app.processDesigner.dataId\"), description: this.localePipe.transform(\"app.processDesigner.dataId\")},\r\n    {key: 'procInstId', name: this.localePipe.transform(\"app.processDesigner.procInstId\"), description: this.localePipe.transform(\"app.processDesigner.procInstId\")},\r\n    {key: 'bizDefKey', name: this.localePipe.transform(\"app.processDesigner.bizDefKey\"), description: this.localePipe.transform(\"app.processDesigner.bizDefKey\")},\r\n    {key: 'processDefinitionKey', name: this.localePipe.transform(\"app.processDesigner.processDefinitionKey\"), description: this.localePipe.transform(\"app.processDesigner.processDefinitionKey\")},\r\n    {key: 'procInstCreator', name: this.localePipe.transform(\"app.processDesigner.procInstCreator\"), description: this.localePipe.transform(\"app.processDesigner.procInstCreator\")},\r\n    {key: 'businessCreator', name: this.localePipe.transform(\"app.processDesigner.businessCreator\"), description: this.localePipe.transform(\"app.processDesigner.businessCreator\")},\r\n    {key: 'procInstDescription', name: this.localePipe.transform(\"app.processDesigner.procInstDescription\"), description: this.localePipe.transform(\"app.processDesigner.procInstDescription\")},\r\n    {key: 'comment', name: this.localePipe.transform(\"app.processDesigner.comment\"), description: this.localePipe.transform(\"app.processDesigner.comment\")},\r\n    {key: 'bizDefName', name: this.localePipe.transform(\"app.processDesigner.bizDefName\"), description: this.localePipe.transform(\"app.processDesigner.bizDefName\")},\r\n    {key: 'curLoginUsername', name: this.localePipe.transform(\"app.processDesigner.curLoginUsername\"), description:this.localePipe.transform(\"app.processDesigner.curLoginUsername\")},\r\n    {key: 'procInstCreatorName', name: this.localePipe.transform(\"app.processDesigner.procInstCreatorName\"), description: this.localePipe.transform(\"app.processDesigner.procInstCreatorName\")}\r\n  ];\r\n  /**\r\n   * 流程参数上下文\r\n   */\r\n  formalParameterContext: VarEntity[] = [];\r\n\r\n  /**\r\n   * 参与者上下文\r\n   */\r\n  participantContext: VarEntity[] = [\r\n    {\r\n      key: 'procInstCreator',\r\n      name: this.localePipe.transform(\"app.processDesigner.procInstCreator\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.procInstCreator\")\r\n    }, {\r\n      key: 'businessCreator',\r\n      name: this.localePipe.transform(\"app.processDesigner.businessCreator\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.businessCreator\")\r\n    }, {\r\n      key: 'currentUser',\r\n      name: this.localePipe.transform(\"app.processDesigner.currentUser\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.currentUser\")\r\n    }, {\r\n      key: 'preActExecutors',\r\n      name: this.localePipe.transform(\"app.processDesigner.preActExecutors\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.preActExecutors\")\r\n    }];\r\n\r\n    /**\r\n   * 子活动上下文\r\n   */\r\n  subActivityContext: VarEntity[] = [\r\n    {\r\n      key: 'collectionElementVariable',\r\n      name: this.localePipe.transform(\"app.processDesigner.collectionElementVariable\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.collectionElementVariable\")\r\n    }];\r\n\r\n    /**\r\n   * 子流程元素上下文\r\n   */\r\n  subProcessElementContext: VarEntity[] = [\r\n    {\r\n      key: 'subCollectionElementVariable',\r\n      name: this.localePipe.transform(\"app.processDesigner.subCollectionElementVariable\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.subCollectionElementVariable\")\r\n    }];\r\n\r\n  /**\r\n   * 多实例启用条件上下文\r\n   */\r\n  multiCounterSignVariables: VarEntity[] = [\r\n    {key: 'nrOfInstances', name: this.localePipe.transform(\"app.processDesigner.nrOfInstances\"), description: this.localePipe.transform(\"app.processDesigner.nrOfInstances\")},\r\n    {key: 'nrOfCompletedInstances', name: this.localePipe.transform(\"app.processDesigner.nrOfCompletedInstances\"), description: this.localePipe.transform(\"app.processDesigner.nrOfCompletedInstances\")},\r\n    {key: 'nrOfActiveInstances', name: this.localePipe.transform(\"app.processDesigner.nrOfActiveInstances\"), description: this.localePipe.transform(\"app.processDesigner.nrOfActiveInstances\")},\r\n    {key: 'nrOfForward', name: this.localePipe.transform(\"app.processDesigner.nrOfForward\"), description: this.localePipe.transform(\"app.processDesigner.nrOfForward\")},\r\n    {key: 'nrOfBackward', name: this.localePipe.transform(\"app.processDesigner.nrOfBackward\"), description: this.localePipe.transform(\"app.processDesigner.nrOfBackward\")},\r\n    {key: 'nrOfAbort', name: this.localePipe.transform(\"app.processDesigner.nrOfAbort\"), description: this.localePipe.transform(\"app.processDesigner.nrOfAbort\")}\r\n    ];\r\n\r\n  /**\r\n   * 活动构件参数上下文\r\n   */\r\n  activityComponentContext: VarEntity[] = [\r\n    {\r\n      key: 'conclusionType',\r\n      name: this.localePipe.transform(\"app.processDesigner.conclusionType\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.conclusionTypeTips\")\r\n    }, {\r\n      key: 'conclusionValue',\r\n      name: this.localePipe.transform(\"app.processDesigner.conclusionValue\"),\r\n      description: this.localePipe.transform(\"app.processDesigner.conclusionValueTips\")\r\n    }];\r\n  processVariableContext: VarEntity[] = new Array();\r\n\r\n  private processVariables = new Array();\r\n\r\n  set ProcessVariables(variables: any[]) {\r\n    this.processVariables = variables;\r\n    this.setProcessVariableContext();\r\n  }\r\n\r\n  get ProcessVariables() {\r\n    return this.processVariables;\r\n  }\r\n\r\n  /**\r\n   * 汇报级次\r\n   */\r\n  dimensions = [\r\n    {value: 'directSuperior', text: this.localePipe.transform(\"app.processDesigner.directSuperior\")},\r\n    {value: 'higherSuperior', text: this.localePipe.transform(\"app.processDesigner.higherSuperior\")}\r\n  ];\r\n\r\n  /**\r\n   * 启动方式\r\n   */\r\n  startModeIterator: KeyMap[] = [\r\n    {key: 'DIRECT', value: this.localePipe.transform(\"app.processDesigner.DIRECT\")},\r\n    {key: 'EXTERNAL_PROCESS', value: this.localePipe.transform(\"app.processDesigner.EXTERNAL_PROCESS\")},\r\n    {key: 'SUB_PROCESS', value: this.localePipe.transform(\"app.processDesigner.SUB_PROCESS\")}\r\n  ];\r\n\r\n  /**\r\n   * 显示终端\r\n   */\r\n  displayTerminal: KeyMap[] = [\r\n    {key: \"ALL\", value: this.localePipe.transform(\"app.processDesigner.ALL\")},\r\n    {key: \"WEB\", value: this.localePipe.transform(\"app.processDesigner.WEB\")},\r\n    {key: \"APP\", value: this.localePipe.transform(\"app.processDesigner.APP\")}\r\n  ];\r\n\r\n  /**\r\n   * 消息渠道列表\r\n   */\r\n  messageChannels = new Array();\r\n\r\n  orgTypeCollection: { value, text }[] = [];\r\n\r\n  variableContextName(key: string) {\r\n    return this.participantContext.find(i => i.key === key).name;\r\n  }\r\n\r\n  ranksName(value: string) {\r\n    return this.dimensions.find(i => i.value === value).text;\r\n  }\r\n\r\n  getMessageChannels() {\r\n    const url = '/api/runtime/msg/v1.0/messageplatform/channel/getenabledchannels';\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.messageChannels = re;\r\n    });\r\n  }\r\n\r\n  getAdministratorInfo() {\r\n    this.getCurrentUser().subscribe(user => {\r\n      const userId = user.userId;\r\n      forkJoin(this.getAdministratorConfig(), this.getAdministrator(userId)).subscribe(re => {\r\n        this.isAdministratorConfig = re[0].currentValue === 'true' ? true : false;\r\n        this.administrator = re[1];\r\n      });\r\n    });\r\n  }\r\n\r\n  getEnableAdminOrgAut(): Observable<any> {\r\n    return this.getEnableProcessDesignerDataAut('WF_AdminOrg');\r\n  }\r\n\r\n  getEnableFlowFormAut(): Observable<any> {\r\n      return this.getEnableProcessDesignerDataAut('WF_FlowForm');\r\n  }\r\n\r\n  private getEnableProcessDesignerDataAut(authField: string): Observable<any> {\r\n    const url = '/api/runtime/wf/v1.0/dtProcDefs/enableProcessDesignerDataAut/' + authField;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getCurrentUser(): Observable<any> {\r\n    const url = '/api/runtime/sys/v1.0/userinfos?infoType=user';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getAdministrator(userId: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/processAdministrator/${userId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  public getReleaseConfig(): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/generalConfig/Is_Enable_Examine`;\r\n    return this.http.get(url);\r\n  }\r\n  private getAdministratorConfig(): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/generalConfig/Is_EnableAdministrator`;\r\n    return this.http.get(url);\r\n  }\r\n  private getSysOrgById(orgId: string): Observable<any> {\r\n    const url = `/api/runtime/sys/v1.0/sysOrgs/${orgId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getSysOrgWithAllSubsById(orgId: string): Observable<any> {\r\n    const url = `/api/runtime/sys/v1.0/sysOrgs?param=` + encodeURIComponent(`{\"parentId\":\"${orgId}\",\"withAllSub\":true}`);\r\n    return this.http.get(url);\r\n  }\r\n\r\n  private getCurUserInfo(userId: string): Observable<any> {\r\n    const url = `/api/runtime/sys/v1.0/users/${userId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getOrgConfig(): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/generalConfig/Is_Required_Organization`;\r\n    return this.http.get(url);\r\n  }\r\n  /**\r\n   * 获取当前用户信息\r\n   */\r\n  getUserInfo(): Observable<any> {\r\n    const url = `/api/runtime/sys/v1.0/userinfos?infoType=user`;\r\n    return this.http.get(url);\r\n  }\r\n  /**\r\n   * 流程审核：新增\r\n   */\r\n  createData(): Observable<any> {\r\n    const url = `/api/bpms/wf/v1.0/processrelease_frm`;\r\n    const requestInfo = {\r\n      dataChange: [],\r\n      variableChange: null\r\n    };\r\n    return this.http.post(url, requestInfo);\r\n  }\r\n  /**\r\n   * 流程审核：保存\r\n   */\r\n  releaseSave(data: any): Observable<any> {\r\n    const requestInfo = {\r\n      dataChange: [data],\r\n      variableChange: null\r\n    };\r\n    const url = `/api/bpms/wf/v1.0/processrelease_frm`;\r\n    return this.http.put(url, requestInfo);\r\n  }\r\n  private setProcessVariableContext() {\r\n    this.processVariableContext = new Array();\r\n    if (this.ProcessVariables && this.ProcessVariables.length > 0) {\r\n      for (const v of this.ProcessVariables) {\r\n        const varEntity = {\r\n          key: v.name,\r\n          name: v.documentation,\r\n          description: v.description\r\n        };\r\n        this.processVariableContext.push(varEntity);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getHelpMetaData(helpId: string, su: string): Observable<any> {\r\n    const url = `/api/runtime/lcm/v1.0/rt-metadatas/${helpId}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n   * 获取框架的顶级window\r\n   * 进行跨域封装\r\n   */\r\n  private getTopWindow(): Window {\r\n    let curWin: Window = window.self;\r\n    try {\r\n        while (curWin.location.origin === curWin.parent.location.origin) {\r\n            if (curWin !== curWin.parent && !(curWin as any).isRTFTopWin) {\r\n                curWin = curWin.parent;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    } catch (e) { }\r\n    return curWin;\r\n  }\r\n\r\n  // --------------------------0-------------------------\r\n\r\n  // uiState初始\r\n  initUIState() {\r\n    this.propertyConfig = [];\r\n    this.propertyData = null;\r\n    this.content = '';\r\n    this.schemas = [];\r\n  }\r\n\r\n  /**\r\n   * 获取所有审批节点信息\r\n   * @param data\r\n   */\r\n  getUserActList(data: any[]) {\r\n    this.userActList = [];\r\n    if (data && data.length > 0) {\r\n      for (const userAct of data) {\r\n        const userActInfo: any = {\r\n          Id: userAct.Id,\r\n          Name: userAct.NameLanguage ? (userAct.NameLanguage[this.localePipe.langCode] ? userAct.NameLanguage[this.localePipe.langCode] : userAct.Name) : userAct.Name,\r\n          ClrTypeID: userAct.ClrTypeID,\r\n          AssignmentStrategy: userAct.AssignmentStrategy\r\n        };\r\n        if (userAct.AssignmentStrategy === 'ASSIGN') {\r\n          userActInfo.AssignPerformerConfig = userAct.AssignPerformerConfig;\r\n        }\r\n        this.userActList.push(userActInfo);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取所有结束节点信息\r\n   * @param data\r\n   */\r\n     getEndEventList(data: any[]) {\r\n      this.allActList = [];\r\n      if (data && data.length > 0) {\r\n        for (const endEvent of data) {\r\n          const endEventInfo = {\r\n            Id: endEvent.Id,\r\n            Name: endEvent.Name\r\n          };\r\n          // 取结束节点存到\r\n          this.allActList.push(endEventInfo);\r\n        }\r\n      }\r\n      // // 存入审批活动节点\r\n      // this.allActList = this.allActList.concat(this.userActList);\r\n    }\r\n\r\n  /**\r\n   * 获取所有知会活动节点信息\r\n   * @param data\r\n   */\r\n   getNotifyEventList(data: any[]) {\r\n    this.NotifyActKist = [];\r\n    if (data && data.length > 0) {\r\n      for (const notifyEvent of data) {\r\n        const notifyEventInfo = {\r\n          Id: notifyEvent.Id,\r\n          Name: notifyEvent.Name\r\n        };\r\n        // 取知会活动，消息节点存到\r\n        this.NotifyActKist.push(notifyEventInfo);\r\n      }\r\n    }\r\n  }\r\n  //TODO: 只有审批\\审批+人工\\审批+人工+知会\\审批、人工、子流程、信号捕获\r\n  /**\r\n   * 获取所有消息节点信息\r\n   * @param data\r\n   */\r\n   getMessageEventList(data: any[]) {\r\n    this.MessageActList = [];\r\n    if (data && data.length > 0) {\r\n      for (const messageEvent of data) {\r\n        const messageEventInfo = {\r\n          Id: messageEvent.Id,\r\n          Name: messageEvent.Name\r\n        };\r\n        // 取知会活动，消息节点存到\r\n        this.MessageActList.push(messageEventInfo);\r\n      }\r\n    }\r\n    // 存入审批活动节点\r\n    this.MessageActList = this.MessageActList.concat(this.NotifyActKist);\r\n    // 存入审批活动节点\r\n    this.MessageActList = this.MessageActList.concat(this.userActList);\r\n  }\r\n  /**\r\n   * @param data\r\n   */\r\n  getSubAndCatchEventsList(data: any[]) {\r\n    this.SubAndCatchActList = [];\r\n    if (data && data.length > 0) {\r\n      for (const subAndCatchEvent of data) {\r\n        const subAndCatEventInfo = {\r\n          Id: subAndCatchEvent.Id,\r\n          Name: subAndCatchEvent.Name\r\n        };\r\n        // 取知会活动，消息节点存到\r\n        this.SubAndCatchActList.push(subAndCatEventInfo);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取当前流程启动方式\r\n   * @param data\r\n   */\r\n  getStartMode(data: any) {\r\n    this.startMode = data;\r\n  }\r\n\r\n  /**\r\n   * 添加上下文变量\r\n   */\r\n  addContext(context: any[]) {\r\n    if (this.procInstContext.length > 0) {\r\n      for (const variable of this.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.formalParameterContext.length > 0) {\r\n      for (const variable of this.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.participantContext.length > 0) {\r\n      for (const variable of this.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.processVariableContext.length > 0) {\r\n      for (const variable of this.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    return context;\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BpmnModelHelper } from '@edp-pmf/bpmn-model';\r\n\r\n@Injectable()\r\n\r\nexport class ProcessDeUtil {\r\n  \r\n    public funcId: string;\r\n    constructor() { }\r\n\r\n    static GenerateElementId(): string {\r\n      return BpmnModelHelper.GenerateElementId();\r\n    }\r\n    /**\r\n     * 创建内码\r\n     */\r\n    static createNM() {\r\n        function S4() {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n    static initVariableType(value): string {\r\n        if (value) {\r\n            if (value.length >= 8 && value.slice(0, 8) === `{\"expr\":`) {\r\n                return 'expression';\r\n            } else {\r\n                return 'constant';\r\n            }\r\n        } else {\r\n            return 'variable';\r\n        }\r\n    }\r\n\r\n    getProcessDesignerRouter() {\r\n        const url = 'processList';\r\n        return url;\r\n    }\r\n    // 获取流程分类webapi\r\n    getFlowFormWebApi() {\r\n        return '/api/runtime/wf/v1.0/flowForm';\r\n    }\r\n    // 获取参数列表webapi\r\n    getFormalParametersWebApi() {\r\n        return '/api/runtime/wf/v1.0/formalParameter';\r\n    }\r\n    // 获取运行时元数据webapi\r\n    getMetaDataRUWebApi() {\r\n        return '/api/runtime/lcm/v1.0/rt-metadatas/';\r\n    }\r\n    // 获取流程构件webapi\r\n    getBizComponentsWebApi() {\r\n        return '/api/runtime/wf/v1.0/bizComponent';\r\n    }\r\n    // 基于流程分类获取表单定义\r\n    getExcuteFormsWebApi() {\r\n        return '/api/runtime/wf/v1.0/excuteForm';\r\n    }\r\n    // 获取设计时流程定义WebAPi\r\n    getProcessDefinitionWebApi() {\r\n        return '/api/runtime/wf/v1.0/dtProcDefs';\r\n    }\r\n\r\n    // 判断是否允许删除流程定义的api\r\n    getCheckExistActiveProcDefApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs/checkExistActiveProcDef';\r\n    }\r\n    /**\r\n     * 获取业务活动webApi\r\n     */\r\n    getBizActivityWebApi(ffId: string) {\r\n        return `/api/runtime/wf/v1.0/bizActivity?flowFormKey=${ffId}`;\r\n    }\r\n\r\n    getProcDefKeyWebApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs/processDefinitionKeys';\r\n    }\r\n    /**\r\n     * 发布流程api\r\n     */\r\n    deployWebApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs/deploy';\r\n    }\r\n    /**\r\n     * 保存流程api\r\n     */\r\n    saveWebApi() {\r\n        return '/api/runtime/wf/v1.0/DTProcessDefinitions/SaveBpmnModel';\r\n    }\r\n    /**\r\n     * 获取审批动作webapi\r\n     */\r\n    getApprovalActionWebApi() {\r\n        return '/api/runtime/wf/v1.0/approvalAction';\r\n    }\r\n\r\n    /**\r\n     * 获取运行时流程定义WebAPi\r\n     */\r\n    getRTProcessDefinitionWebApi() {\r\n        return '/api/runtime/wf/v1.0/procDefs';\r\n    }\r\n\r\n    getValue(data: any, code: string): string {\r\n        if (!code) {\r\n            return '';\r\n        }\r\n        let resultVal = '';\r\n        if (code.indexOf('.') === -1) {\r\n            resultVal = data[code];\r\n        } else {\r\n            resultVal = code.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n        return resultVal;\r\n    }\r\n    /**\r\n     * 转换\r\n     * @param jsonObj Object\r\n     */\r\n    toUpperCase(jsonObj: Object): any {\r\n        if (typeof (jsonObj) === 'object') {\r\n            for (const key of Object.keys(jsonObj)) {\r\n                jsonObj[key.substring(0, 1).toUpperCase() + key.substring(1)] = jsonObj[key];\r\n                delete (jsonObj[key]);\r\n            }\r\n        }\r\n        return jsonObj;\r\n    }\r\n    toLowCase(jsonObj: Object): any {\r\n        if (typeof (jsonObj) === 'object') {\r\n            for (const key of Object.keys(jsonObj)) {\r\n                if ((key.substring(0, 1).toLowerCase() + key.substring(1)) !== key) {\r\n                    jsonObj[key.substring(0, 1).toLowerCase() + key.substring(1)] = jsonObj[key];\r\n                    delete (jsonObj[key]);\r\n                }\r\n            }\r\n        }\r\n        return jsonObj;\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { ProcessDeUtil } from './process-de-util';\r\nimport { AuditProcessDefInfo } from './entities/audit-processDef-info';\r\nimport { ProcessInfo } from '../model/process-info';\r\nimport { RTProcessInfo } from '../model/rt-process-info';\r\n\r\n@Injectable()\r\nexport class ProcessDesignerDataService {\r\n    constructor(\r\n        private http: HttpService,\r\n        private util: ProcessDeUtil) { }\r\n\r\n    // 基于流程分类ID获取流程分类信息\r\n    GetFlowFormbyId(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getFlowFormWebApi() + '/getFlowForm';\r\n            url += `/${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // 基于流程分类获取参数列表\r\n    getParametersbyFlowFormKey(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getFormalParametersWebApi();\r\n            url += `?flowFormKey=${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // 基于流程分类获取流程构件\r\n    getComponentsbyFlowformkey(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getBizComponentsWebApi();\r\n            url += `/query?param=` + encodeURIComponent(`{\"flowFormKey\":\"${id}\"}`);\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // 基于流程分类获取表单定义\r\n    getExecuteFormbyFlowFormKey(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getExcuteFormsWebApi();\r\n            url += `?flowFormKey=${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * 基于流程分类Id获取业务活动\r\n     * @param ffId 流程分类id\r\n     */\r\n    getBizActivities(ffId: string) {\r\n        if (ffId) {\r\n            const url = this.util.getBizActivityWebApi(ffId);\r\n            return this.http.get(url);\r\n            // .pipe(\r\n            //     map((re: any) => re),\r\n            //     mergeMap((activities: any[]) => {\r\n            //         if (activities && activities.length > 0) {\r\n            //             return forkJoin(activities.map(activity => {\r\n            //                 return forkJoin(this.getBizActivityComponents(ffId, activity.id),\r\n            //                     this.getBizActivityActions(activity.id))\r\n            //                     .pipe(\r\n            //                         map((re: any[]) => {\r\n            //                             activity.components = re[0];\r\n            //                             activity.actions = re[1];\r\n            //                             return activity;\r\n            //                         }));\r\n            //             }));\r\n            //         } else {\r\n            //             return of([]);\r\n            //         }\r\n            //     })\r\n            // );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 基于流程分类ID获取自定义动作\r\n     * @param formId 流程分类ID\r\n     */\r\n    getCustomizeActions(formId: string): Observable<any> {\r\n        if (formId) {\r\n            const url = `/api/runtime/wf/v1.0/customizeAction?flowFormKey=${formId}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * 基于业务活动id获取业务活动构件\r\n     * @param id 业务活动id\r\n     */\r\n    private getBizActivityComponents(flowFormId: string, id: string) {\r\n        if (id) {\r\n            let url = this.util.getBizComponentsWebApi();\r\n            url += `/query?param=` + encodeURIComponent(`{\"flowFormKey\":\"${flowFormId}\",\"owner\":\"${id}\",\"ownerType\":\"Activity\"}`);\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    private getBizActivityActions(id: string) {\r\n        if (id) {\r\n            let url = this.util.getApprovalActionWebApi();\r\n            url += `?bizActivityId=${id}`;\r\n\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    // 基于ID获取BE\r\n    getBusinessEntitybyId(id: string): Observable<any> {\r\n        if (id) {\r\n            // let url = this.util.getMetaDataRUWebApi();\r\n            // url += id;\r\n            // const url = `/api/runtime/lcm/v1.0/bef/handledBeMeta?beId=${id}`;\r\n            const url = `/api/runtime/lcm/v1.0/bef/expression?beId=${id}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * 基于流程定义Key获取上下文\r\n     * @param key 流程定义key\r\n     */\r\n    getProcContentbyKey(key: string): Observable<any> {\r\n        if (key) {\r\n            let url = this.util.getProcessDefinitionWebApi();\r\n            url += `/bpmnModel?procDefKey=${key}`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * 基于流程定义Key获取上下文\r\n     * @param key 流程定义Id\r\n     */\r\n    getRTProcContentbyId(id: string): Observable<any> {\r\n        if (id) {\r\n            let url = this.util.getRTProcessDefinitionWebApi();\r\n            url += `/${id}/bpmnModel`;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n    /**\r\n     * 保存流程\r\n     * @param content\r\n     */\r\n    saveProcess(content: string, processInfo: ProcessInfo, state: number): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                organization: processInfo.procOrg ? processInfo.procOrg.orgId : '',\r\n                organizationName: processInfo.procOrg ? processInfo.procOrg.orgName : '',\r\n                accessLevel: processInfo.accessLevel,\r\n                procContent: content,\r\n                state\r\n            };\r\n            const url = this.util.getProcessDefinitionWebApi();\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n\r\n    auditProcessDef(info: AuditProcessDefInfo) {\r\n        const url = '/api/runtime/wf/v1.0/dtProcDefs/auditProcessDef';\r\n        this.http.post(url, info).subscribe(re => { });\r\n    }\r\n\r\n    /**\r\n     * 发布流程\r\n     * @param content\r\n     */\r\n    deployProcess(content: string): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                procDefContent: content\r\n            };\r\n            const url = this.util.deployWebApi();\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n\r\n    saveRTProcess(content: string, procDefId: string): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                procDefContent: content\r\n            };\r\n            let url = this.util.getRTProcessDefinitionWebApi();\r\n            url += `/${procDefId}/adjust`;\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n\r\n    syncDtProcess(content: string, rtProcessInfo: RTProcessInfo): Observable<any> {\r\n        if (content) {\r\n            const postData = {\r\n                organization: rtProcessInfo.procOrg ? rtProcessInfo.procOrg.orgId : '',\r\n                organizationName: rtProcessInfo.procOrg ? rtProcessInfo.procOrg.orgName : '',\r\n                accessLevel: rtProcessInfo.accessLevel || 'public',\r\n                procContent: content,\r\n                state: 0\r\n            };\r\n            const url = '/api/runtime/wf/v1.0/dtProcDefs';\r\n            return this.http.post(url, JSON.stringify(postData));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取流程扩展属性\r\n     * @param bizDefKey\r\n     * @param startMode\r\n     * @param bizCategoryId\r\n     * @returns\r\n     */\r\n    getProcExtendProperty(bizDefKey: string, startMode: string, bizCategoryId: string) {\r\n        let filter = '{';\r\n        filter += `\"bizDefKey\":\"${bizDefKey}\",`;\r\n        filter += `\"bizCategoryId\":\"${bizCategoryId}\",`;\r\n        filter += `\"startMode\":\"${startMode}\"`;\r\n        filter += '}';\r\n        filter = encodeURIComponent(filter);\r\n        const url = `/api/runtime/wf/v1.0/procExtendProperty?param=${filter}`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取流程构件\r\n     * @returns\r\n     */\r\n    getBizCmp() {\r\n        const url = `/api/runtime/wf/v1.0/bizComponent?flowFormKey=*&owner=*&ownerType=Process`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取全部流程构件\r\n     * @param flowFormKey\r\n     * @returns\r\n     */\r\n    getAllBizCmp(flowFormKey) {\r\n        const url = `/api/runtime/wf/v1.0/bizComponent?flowFormKey=${flowFormKey}&owner=${flowFormKey}&ownerType=Process`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取表单格式\r\n     */\r\n    getFormFormat(bizCategoryId: string) {\r\n        if (bizCategoryId == null) {\r\n            return of(null);\r\n        }\r\n        const url = `/api/runtime/wf/v1.0/formFormat/query?param=%7B%22bizCategory%22%3A%22${bizCategoryId}%22%7D`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取配置\r\n     * @returns\r\n     */\r\n    getGeneralConfig() {\r\n        return this.http.get(\"/api/runtime/wf/v1.0/generalConfig/Is_EnableTransfer\").pipe(\r\n            switchMap((enableTransfer: any) => {\r\n                return this.http.get(\"/api/runtime/wf/v1.0/generalConfig/Is_EnableNotify\").pipe(\r\n                    switchMap((enableNotify: any) => {\r\n                        return this.http.get(\"/api/runtime/wf/v1.0/generalConfig/Is_EnableAddSignBehind\").pipe(\r\n                            switchMap((enableAddSignBehind: any) => {\r\n                                return this.http.get(\"/api/runtime/wf/v1.0/generalConfig/Is_EnableAddSignFront\").pipe(\r\n                                    switchMap((enableAddSignFront: any) => {\r\n                                        const res = {\r\n                                            enableTransfer: JSON.parse(enableTransfer.currentValue),\r\n                                            enableNotify: JSON.parse(enableNotify.currentValue),\r\n                                            enableAddSignBehind: JSON.parse(enableAddSignBehind.currentValue),\r\n                                            enableAddSignFront: JSON.parse(enableAddSignFront.currentValue)\r\n                                        };\r\n                                        return of(res);\r\n                                    })\r\n                                );\r\n                            })\r\n                        );\r\n                    })\r\n                );\r\n            })\r\n        );\r\n    }\r\n}\r\n","export enum ProcessClrTypeID {\r\n    /**\r\n     * 流程typeId\r\n     */\r\n    process = 'bpmn.Process',\r\n    /**\r\n     * 开始活动typeId\r\n     */\r\n    startActivity = 'wf.StartActivity',\r\n    /**\r\n     * 活动节点typeId\r\n     */\r\n    userActivity = 'wf.UserActivity',\r\n    /**\r\n     * 人工操作typeId\r\n     */\r\n    operationActivity = 'wf.OperationActivity',\r\n    /**\r\n     * 结束活动typeId\r\n     */\r\n    endEvent = 'bpmn.EndEvent',\r\n    /**\r\n     * 流转线typeId\r\n     */\r\n    sequenceFlow = 'bpmn.SequenceFlow',\r\n    /**\r\n     * 排他网关typeId\r\n     */\r\n    exclusiveGateway = 'bpmn.ExclusiveGateway',\r\n    /**\r\n     * 并行网关typeId\r\n     */\r\n    parallelGateway = 'bpmn.ParallelGateway',\r\n\r\n    /**\r\n     * 子流程\r\n     */\r\n    subProcess = 'wf.CallActivitySubProcess',\r\n\r\n    /**\r\n     * 服务活动\r\n     */\r\n    autoActivity = 'wf.AutoActivity',\r\n\r\n    /**\r\n     * 信号捕获\r\n     */\r\n    catchEvent = 'wf.IntermediateCatchEventImpl',\r\n\r\n    /**\r\n     * 消息\r\n     */\r\n    messageActivity = 'wf.MessageActivity',\r\n\r\n    /**\r\n     * 知会活动\r\n     */\r\n    notifyActivity = \"wf.NotifyActivity\",\r\n\r\n    /**\r\n     * 生单活动\r\n     */\r\n    aifCreationBillActivity = \"wf.AifCreationBillActivity\",\r\n\r\n    billNodeActivity = \"wf.AifBillNodeActivity\",\r\n\r\n    sequenceActivity = \"wf.AifSequenceActivity\",\r\n}\r\n","import { Component, OnInit, Output, Input, ViewChild, EventEmitter, TemplateRef, AfterViewInit, ChangeDetectorRef, Optional, LOCALE_ID, Inject } from '@angular/core';\r\nimport { DataTableComponent } from '@farris/ui-datatable';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-entry-form-editor',\r\n  templateUrl: './entry-form-editor.component.html',\r\n  styleUrls: ['./entry-form-editor.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class EntryFormEditorComponent implements OnInit, AfterViewInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.flowFormId = data.id;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  private flowFormId: string;\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.entryFormEditor.flowForm'),\r\n    width: 760,\r\n    height: 506,\r\n    showButtons: true\r\n  };\r\n\r\n  columns = [\r\n    { title: this.localePipe.transform('component.entryFormEditor.code'), field: 'code', width: 100, sortable: true },\r\n    { title: this.localePipe.transform('component.entryFormEditor.name'), field: 'name', width: 100, sortable: true },\r\n    { title: this.localePipe.transform('component.entryFormEditor.base'), field: 'base', width: 60,\r\n    formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.entryFormEditor.extend'), falseText: this.localePipe.transform('component.entryFormEditor.foundation') } }}\r\n  ];\r\n\r\n  data = [];\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.getBaseAndExtendFlowForm();\r\n  }\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (!this.grid.selectedRow) {\r\n      this.message.info(this.localePipe.transform('component.entryFormEditor.selectedRow'));\r\n      return;\r\n    }\r\n    const object = { value: this.grid.selectedRow.data, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private getBaseAndExtendFlowForm() {\r\n    if (this.flowFormId) {\r\n      const url = `/api/runtime/wf/v1.0/flowForm/${this.flowFormId}/baseAndExtend`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        if (re && re.length > 0) {\r\n          this.data = re;\r\n          setTimeout(() => {\r\n            this.grid.selectRow(this.flowFormId, true);\r\n          }, 0);\r\n        } else {\r\n          this.message.info(this.localePipe.transform('component.entryFormEditor.absent'));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\nexport class FlowFormConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data): string {\r\n    if (data) {\r\n      return data.name;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { ActualParameter } from '../../domain/entities/actual-parameter';\r\nimport { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\n\r\nexport class ActivityComponentUIState {\r\n    constructor(\r\n        private localePipe: WfLocalePipe\r\n    ) { }\r\n    /**\r\n     * 构件列表\r\n     */\r\n    components: BizComponentEntity[] = [];\r\n    /**\r\n     * 选中构件\r\n     */\r\n    curComponent: BizComponentEntity;\r\n    /**\r\n     * 流程分类绑定的所有活动构件\r\n     */\r\n    allComponents: BizComponentEntity[] = [];\r\n    /**\r\n     * 构件执行时机数据绑定\r\n     */\r\n    public executionCollection = [\r\n        // { text: '流程创建', value: 'PROCESSINSTANCE_CREATED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_STARTED\"), value: 'PROCESSINSTANCE_STARTED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_SUSPENDED\"), value: 'PROCESSINSTANCE_SUSPENDED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_RESUMED\"), value: 'PROCESSINSTANCE_RESUMED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_COMPLETED\"), value: 'PROCESSINSTANCE_COMPLETED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_ABORTED\"), value: 'PROCESSINSTANCE_ABORTED' },\r\n        // { text: '流程预警', value: 'PROCESSINSTANCE_ALARM' },\r\n        // { text: '流程超时', value: 'PROCESSINSTANCE_TIMEOUT' },\r\n        // { text: '流程删除', value: 'PROCESSINSTANCE_DELETED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_CANCELED\"), value: 'PROCESSINSTANCE_CANCELED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_REACTIVATED\"), value: 'PROCESSINSTANCE_REACTIVATED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_ROLLBACK\"), value: 'PROCESSINSTANCE_ROLLBACK' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_RESUBMIT\"), value: 'PROCESSINSTANCE_RESUBMIT' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.ACTIVITY_AND_PARTICIPANT_UPDATED\"), value: 'ACTIVITY_AND_PARTICIPANT_UPDATED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_ABORTED_BY_ADMIN\"), value: 'PROCESSINSTANCE_ABORTED_BY_ADMIN' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.PROCESSINSTANCE_BEFORE_START\"), value: 'PROCESSINSTANCE_BEFORE_START' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_BEFORE_COMPLETE\"), value: 'WORKITEM_BEFORE_COMPLETE' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_AFTER_COMPLETE\"), value: 'WORKITEM_AFTER_COMPLETE' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.LOADDATA\"), value: 'LOADDATA' }\r\n    ];\r\n    activityCollection = [\r\n        // { text: '活动创建', value: 'ACTIVITY_CREATED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.ACTIVITY_STARTED\"), value: 'ACTIVITY_STARTED' },\r\n        // { text: '活动挂起', value: 'ACTIVITY_SUSPENDED' },\r\n        // { text: '活动恢复', value: 'ACTIVITY_RESUMED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.ACTIVITY_COMPLETED\"), value: 'ACTIVITY_COMPLETED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.ACTIVITY_ABORTED\"), value: 'ACTIVITY_ABORTED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_CREATED\"), value: 'WORKITEM_CREATED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_COMPLETED\"), value: 'WORKITEM_COMPLETED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_SUSPENDED\"), value: 'WORKITEM_SUSPENDED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_RESUMED\"), value: 'WORKITEM_RESUMED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_ABORTED\"), value: 'WORKITEM_ABORTED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_RETRIEVED\"), value: 'WORKITEM_RETRIEVED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_CLAIMED\"), value: 'WORKITEM_CLAIMED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.WORKITEM_UNCLAIMED\"), value: 'WORKITEM_UNCLAIMED' },\r\n        { text: this.localePipe.transform(\"component.activityComponent.ACTIVITY_ASSIGNMENT\"), value: 'ACTIVITY_ASSIGNMENT' }\r\n    ];\r\n}\r\n","import { ActualParameter } from './actual-parameter';\r\nimport { ProcessDeUtil } from '../process-de-util';\r\n\r\nexport class BizComponentEntity {\r\n    constructor(name?: string, metadataid?: string, method?: string) {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.name = name;\r\n        this.metadataId = metadataid;\r\n        this.methodCode = method;\r\n        this.isForCompensation = false;\r\n    }\r\n    id: string;\r\n    name: string;\r\n    flowFormKey?: string;\r\n    bizActivityId?: string;\r\n    componentLocation?: ComponentLocation;\r\n    executionTime: string;\r\n    metadataId: string;\r\n    methodCode: string;\r\n    methodName?: string;\r\n    actualParameters: Array<ActualParameter>;\r\n    owner: string;\r\n    ownerType: OwnerType;\r\n    isForCompensation?: boolean;\r\n    condition?: string;\r\n    scopeType?: string;\r\n}\r\nexport enum ComponentLocation {\r\n    Process = 0,\r\n    Activity = 1\r\n}\r\nexport enum OwnerType {\r\n    Process = 'Process',\r\n    Activity = 'Activity',\r\n    Schema = 'Schema'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivityComponentUIState } from './activity-component.uistate';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { map } from 'rxjs/operators';\r\nimport { BizComponentEntity, ComponentLocation, OwnerType } from '../../domain/entities/biz-component.entity';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { ActualParameter } from '../../domain/entities/actual-parameter';\r\nimport { Parameter } from '@ecp-caf/common-structure';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { Subject } from 'rxjs';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\n@Injectable()\r\n\r\nexport class ActivityComponentRepository {\r\n    private defaultProcessComponentIds = ['5863c8a8-e0a7-4137-a8b2-4c05e42b3b73', 'be781ba1-a88b-4bb8-9c88-2e2a27a9226e'];\r\n\r\n    subject: Subject<BizComponentEntity> = new Subject<BizComponentEntity>();\r\n    constructor(\r\n        private uistate: ActivityComponentUIState,\r\n        private util: ProcessDeUtil,\r\n        private http: HttpService,\r\n        private designerState: ProcessDesignerUIState,\r\n    ) { }\r\n\r\n    loadComponents(flowFormId: string, bizActId: string) {\r\n        let url = this.util.getBizComponentsWebApi();\r\n        if (bizActId) {\r\n            url += `/query?param=` + encodeURIComponent(`{\"flowFormKey\":\"${flowFormId}\",\"owner\":\"${bizActId}\",\"ownerType\":\"Activity\"}`);\r\n        } else {\r\n            this.uistate.allComponents = [];\r\n            return;\r\n        }\r\n        this.http.get(url).subscribe((data: any) => {\r\n            this.uistate.allComponents = data.filter((c: BizComponentEntity) => c.ownerType === OwnerType.Activity);\r\n        });\r\n    }\r\n    removeComponent(id: string) {\r\n        if (id) {\r\n            this.uistate.components = this.uistate.components.filter(c => c.id !== id);\r\n        }\r\n    }\r\n    addComponent(cpt: GspComponent) {\r\n        if (cpt) {\r\n            const component = new BizComponentEntity(cpt.name, cpt.id, cpt.operations[0].code);\r\n            component.id = ProcessDeUtil.GenerateElementId();\r\n            component.actualParameters = this.bindParas(cpt);\r\n            console.log(cpt);\r\n            console.log(component.actualParameters);\r\n            if (component.metadataId === '7433df25-9260-4c24-86f0-9da3e89450fb' ||\r\n            component.metadataId === 'd0783800-ed60-488c-b053-8806a15947fe' ||\r\n            component.metadataId === 'b89e9b9a-2e2d-4bd0-b354-187219544d34' ||\r\n            component.metadataId === 'a8b8f7a4-49ae-4b7d-88d2-b3772b9d0ae5' ) {\r\n              component.scopeType = 'ExternalProcess';\r\n            } else {\r\n              component.scopeType = 'DirectStart';\r\n            }\r\n            this.uistate.components.push(component);\r\n            this.subject.next(component);\r\n        }\r\n    }\r\n    private bindParas(component: GspComponent): ActualParameter[] {\r\n        let parameters = [];\r\n\r\n        if (component.operations[0].parameters && component.operations[0].parameters.length > 0) {\r\n            if (this.defaultProcessComponentIds.indexOf(component.id) > -1) {\r\n                parameters = this.assignParameterValue(component.operations[0].parameters);\r\n            } else {\r\n                parameters = component.operations[0].parameters.map(p => ({ code: p.code, name: p.name, value: '' }));\r\n            }\r\n        }\r\n        return parameters;\r\n    }\r\n    private assignParameterValue(params: Parameter[]): ActualParameter[] {\r\n        return params.map(p => {\r\n            if (p.code.indexOf('beId') > -1) {\r\n                const v = this.designerState.formalParameterContext.filter(c => c.key.indexOf('metadataId') > -1)[0].key;\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"${v}\\\\\")\"}` };\r\n            } else if (p.code.indexOf('nodeId') > -1) {\r\n                const v = this.designerState.formalParameterContext.filter(c => c.key.indexOf('schemaId') > -1)[0].key;\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"${v}\\\\\")\"}` };\r\n            } else if (p.code.indexOf('dataId') > -1) {\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"dataId\\\\\")\"}` };\r\n            } else if (p.code.indexOf('procInstId') > -1) {\r\n                return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"procInstId\\\\\")\"}` };\r\n            } else {\r\n                return { code: p.code, name: p.name, value: '' };\r\n            }\r\n        });\r\n    }\r\n\r\n    swapArray(arr: Array<any>, i1: number, i2: number): Array<any> {\r\n        arr[i1] = arr.splice(i2, 1, arr[i1])[0];\r\n        return arr;\r\n    }\r\n\r\n  // 获取是否预制了外部流程构件\r\n  getBizCmp(hander: any) {\r\n    const url = `/api/runtime/wf/v1.0/bizComponent?flowFormKey=*&owner=*&ownerType=Process`;\r\n    this.http.get(url).subscribe((data: any) => {\r\n      hander(data);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivityComponentUIState } from './activity-component.uistate';\r\nimport { ActivityComponentRepository } from './activity-component.repository';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\n\r\nexport class ActivityComponentViewModel {\r\n    \r\n    constructor(\r\n        private uistate: ActivityComponentUIState,\r\n        private repository: ActivityComponentRepository,\r\n        private messager: MessagerService,\r\n        private localePipe: WfLocalePipe\r\n    ) { }\r\n\r\n    deleteRow() {\r\n        if (this.uistate.curComponent) {\r\n            if (this.uistate.curComponent.executionTime === 'LOADDATA') {\r\n                this.messager.info(this.localePipe.transform('component.activityList.name'));\r\n            } else {\r\n                this.repository.removeComponent(this.uistate.curComponent.id);\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    componentSelect(cpt: GspComponent) {\r\n        if (cpt) {\r\n            this.repository.addComponent(cpt);\r\n        }\r\n    }\r\n\r\n    loadComponents(flowFormId: string, bizActId: string) {\r\n        this.repository.loadComponents(flowFormId, bizActId);\r\n    }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { of } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { Metadata4RefDto, MetadataDto, SelectMetadataRTComponent } from '@gsp-lcm/metadatart-selector';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { CommonComponentUiRTService, SelectorResult } from '@gsp-cmp/ccmp-ui';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { ActualParameter } from '../../domain/entities/actual-parameter';\r\nimport { Parameter } from '@ecp-caf/common-structure';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-edit-component-parameter',\r\n  templateUrl: './edit-component-parameter.component.html',\r\n  styleUrls: ['./edit-component-parameter.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class EditComponentParameterComponent implements OnInit, AfterViewInit {\r\n  private defaultProcessComponentIds = ['5863c8a8-e0a7-4137-a8b2-4c05e42b3b73', 'be781ba1-a88b-4bb8-9c88-2e2a27a9226e'];\r\n  @Input() editState: string;\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<any>();\r\n  @ViewChild('paramlist') paramlist: DatagridComponent;\r\n  @ViewChild('editFooter') editFooter: TemplateRef<any>;\r\n  paramColumns = [];\r\n  location: 'activity' | 'process' | 'autoActivity';\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  executionTimingList = new Array();;\r\n  canEdit: boolean;\r\n  @Input()\r\n  curComponent: BizComponentEntity;\r\n  constructor(\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private sessionSrc: SessionService,\r\n    private componentService: CommonComponentUiRTService,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    public cd: ChangeDetectorRef,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n  ngAfterViewInit(): void {\r\n  }\r\n  ngOnInit() {\r\n    this.paramColumns = [\r\n      { field: 'code', width: 50, title: this.localePipe.transform('component.editComponentParameter.code') },\r\n      { field: 'name', width: 50, title: this.localePipe.transform('component.editComponentParameter.name') },\r\n      {\r\n        field: 'required', width: 50, title: this.localePipe.transform('component.editComponentParameter.required'), formatter: (v, d, i) => {\r\n          if (v) {\r\n            return this.localePipe.transform('component.editComponentParameter.yes');\r\n          } else {\r\n            return this.localePipe.transform('component.editComponentParameter.no');\r\n          }\r\n        }\r\n      },\r\n      {\r\n        field: 'value', width: 100, title: this.localePipe.transform('component.editComponentParameter.value'),\r\n        editor: {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ];\r\n\r\n    // setTimeout(() => {\r\n    //   this.cd.detectChanges();\r\n    // },0 )\r\n  }\r\n  showExprHelp(e: any) {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.location === 'activity') {\r\n      for (const variable of this.designerState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      e.formControl.setValue(expressioninfo);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * 取数构件帮助new\r\n   */\r\n  openComponentSelectorNew(metadataId: string, sessionId: string) {\r\n    this.componentService.openSelector(metadataId, sessionId).subscribe(\r\n      (selectorResult: SelectorResult) => {\r\n        selectorResult.confirmEvent.subscribe(\r\n          (result: GspComponent) => {\r\n            if (result) {\r\n              const component = new BizComponentEntity(result.name, result.id, result.operations[0].code);\r\n              component.id = ProcessDeUtil.GenerateElementId();\r\n              component.actualParameters = this.bindParas(result);\r\n              if (component.metadataId === '7433df25-9260-4c24-86f0-9da3e89450fb' ||\r\n                component.metadataId === 'd0783800-ed60-488c-b053-8806a15947fe' ||\r\n                component.metadataId === 'b89e9b9a-2e2d-4bd0-b354-187219544d34' ||\r\n                component.metadataId === 'a8b8f7a4-49ae-4b7d-88d2-b3772b9d0ae5') {\r\n                component.scopeType = 'ExternalProcess';\r\n              } else {\r\n                component.scopeType = 'DirectStart';\r\n              }\r\n              this.curComponent = component;\r\n              this.cd.detectChanges();\r\n            }\r\n          });\r\n      });\r\n  }\r\n  private bindParas(component: GspComponent): ActualParameter[] {\r\n    let parameters = [];\r\n\r\n    if (component.operations[0].parameters && component.operations[0].parameters.length > 0) {\r\n      if (this.defaultProcessComponentIds.indexOf(component.id) > -1) {\r\n        parameters = this.assignParameterValue(component.operations[0].parameters);\r\n      } else {\r\n        parameters = component.operations[0].parameters.map(p => ({ code: p.code, name: p.name, value: '', required: p.code.toLowerCase() ==='wfcontext'? false : p.required }));\r\n      }\r\n    }\r\n    return parameters;\r\n  }\r\n  private assignParameterValue(params: Parameter[]): ActualParameter[] {\r\n    return params.map(p => {\r\n      if (p.code.indexOf('beId') > -1) {\r\n        const v = this.designerState.formalParameterContext.filter(c => c.key.indexOf('metadataId') > -1)[0].key;\r\n        return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"${v}\\\\\")\"}`, required: true};\r\n      } else if (p.code.indexOf('nodeId') > -1) {\r\n        const v = this.designerState.formalParameterContext.filter(c => c.key.indexOf('schemaId') > -1)[0].key;\r\n        return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"${v}\\\\\")\"}`, required: true };\r\n      } else if (p.code.indexOf('dataId') > -1) {\r\n        return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"dataId\\\\\")\"}`, required: true };\r\n      } else if (p.code.indexOf('procInstId') > -1) {\r\n        return { code: p.code, name: p.name, value: `{\"expr\":\"DefaultFunction.GetContextParameter(\\\\\"procInstId\\\\\")\"}`, required: true };\r\n      } else {\r\n        return { code: p.code, name: p.name, value: '', required: true };\r\n      }\r\n    });\r\n  }\r\n  componentSelect() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = 'WebServiceComponent'; // 目前只能根据元数据类型过滤，后续添加标签过滤\r\n    compRef.instance.selectedMetadata.subscribe(($event: Metadata4RefDto) => {\r\n      try {\r\n        const meta: MetadataDto = $event.metadata;\r\n        this.openComponentSelectorNew(meta.id, this.sessionSrc.getUserSessionId());\r\n      } catch {\r\n        console.log('$event', $event);\r\n        throw new Error(this.localePipe.transform('component.editComponentParameter.openComponentFail') + $event);\r\n      }\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.editComponentParameter.componentSelection'),\r\n      width: 980,\r\n      height: 548,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n  paramAfterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n  endCellEdit() {\r\n    this.paramlist.endCellEdit();\r\n  }\r\n\r\n  editOK() {\r\n    // 结束构件参数编辑状态\r\n    this.endCellEdit();\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.curComponent);\r\n    }\r\n  }\r\n\r\n  editCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  validator(): boolean {\r\n    if (!this.curComponent || !this.curComponent.metadataId || !this.curComponent.methodCode) {\r\n      this.message.info(this.localePipe.transform('component.editComponentParameter.curComponent'));\r\n      return false\r\n    } else if (this.location !== 'autoActivity' && !this.curComponent.executionTime) {\r\n      this.message.info(this.localePipe.transform('component.editComponentParameter.executionTime'));\r\n      return false;\r\n    } else {\r\n      let codeList = '';\r\n      for (const param of this.curComponent.actualParameters) {\r\n        if (param.required && !param.value) {\r\n          codeList = codeList + `，${param.code}`;\r\n        }\r\n      }\r\n      if (codeList.length > 0) {\r\n        codeList = codeList.slice(1, codeList.length)\r\n        this.message.info(this.localePipe.transform('component.editComponentParameter.para') + '【' + codeList + this.localePipe.transform('component.editComponentParameter.paraRequired'));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, TemplateRef, Input, ViewChild, ComponentFactoryResolver, Injector, AfterViewInit, Inject, Optional, ChangeDetectorRef, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ActivityComponentRepository } from './activity-component.repository';\r\nimport { ActivityComponentUIState } from './activity-component.uistate';\r\nimport { ActivityComponentViewModel } from './activity-component.viewmodel';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SelectorResult, CommonComponentUiRTService } from '@gsp-cmp/ccmp-ui';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { EditComponentParameterComponent } from '../edit-component-parameter/edit-component-parameter.component';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-activity-component',\r\n  templateUrl: './activity-component.component.html',\r\n  styleUrls: ['./activity-component.component.scss'],\r\n  providers: [ActivityComponentRepository, ActivityComponentUIState, ActivityComponentViewModel,\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ActivityComponentComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('buttonsTemplate') btnTemplate: TemplateRef<any>;\r\n  @ViewChild('cmplist') cmplist: DatagridComponent;\r\n  @ViewChild('paramlist') paramlist: DatagridComponent;\r\n  exBizTips = false;\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.activityComponent.component'),\r\n    width: 960,\r\n    height: 506,\r\n    showButtons: true\r\n  };\r\n  @Input()\r\n  set value(cpts: any[]) {\r\n    if (cpts && cpts.length > 0) {\r\n      let metaDataIdList = new Array();\r\n      for (const cmp of cpts) {\r\n        if (metaDataIdList.indexOf(cmp.metadataId) == -1) {\r\n          metaDataIdList.push(cmp.metadataId);\r\n        }\r\n      }\r\n      if (metaDataIdList.length > 0) {\r\n        forkJoin(metaDataIdList.map((metaDataId: string) => this.designerState.getHelpMetaData(metaDataId, ''))).subscribe(cmpMetas => {\r\n          for (const cpt of cpts) {\r\n            const bizComponent = new BizComponentEntity(cpt.name, cpt.metadataId, cpt.methodCode);\r\n            bizComponent.executionTime = cpt.executionTime,\r\n            bizComponent.id = cpt.id;\r\n            bizComponent.isForCompensation = cpt.isForCompensation;\r\n            bizComponent.actualParameters = new Array();\r\n            bizComponent.scopeType = cpt.scopeType || null;\r\n\r\n            const meta = cmpMetas.find(m => m.id === cpt.metadataId);\r\n            const content = JSON.parse(meta.content);\r\n            const operation = content.operations.find(o => o.code === cpt.methodCode);\r\n            if (operation) {\r\n              bizComponent.actualParameters = cpt.actualParameters.map(a => {\r\n                const p = operation.parameters.find(i => i.code === a.code);\r\n                if (p) {\r\n                  return {\r\n                    code: a.code,\r\n                    name: a.name,\r\n                    value: a.value,\r\n                    required: a.code.toLowerCase() ==='wfcontext'? false : p.required\r\n                  };\r\n                } else {\r\n                  console.error(this.localePipe.transform('component.activityComponent.method') + cpt.methodCode + this.localePipe.transform('component.activityComponent.inconsistentParameters'));\r\n                  return {\r\n                    code: a.code,\r\n                    name: a.name,\r\n                    value: a.value,\r\n                    required: false\r\n                  };\r\n                }\r\n              });\r\n            } else {\r\n              console.error(this.localePipe.transform('component.activityComponent.longerExists') + cpt.methodCode + this.localePipe.transform('component.activityComponent.pleaseCheck'));\r\n            }\r\n            this.uistate.components.push(bizComponent);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  buttonGroupData = [\r\n    {\r\n      id: 'edit',\r\n      text: this.localePipe.transform('component.activityComponent.edit'),\r\n    },\r\n    {\r\n      id: 'deleteRow',\r\n      text: this.localePipe.transform('component.activityComponent.deleteRow'),\r\n    }\r\n  ];\r\n  editState = 'new'; // 编辑状态，用于区分是新增还是编辑  new | edit\r\n  isPreExternalProcessCmps = false;\r\n  location: 'activity' | 'process' | 'autoActivity';\r\n  columns = [];\r\n  paramColumns = [];\r\n  constructor(\r\n    public uistate: ActivityComponentUIState,\r\n    public viewModel: ActivityComponentViewModel,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private componentService: CommonComponentUiRTService,\r\n    private repository: ActivityComponentRepository,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // 2023-5-25 网速慢的时候会导致加载不出来流程构件，因此加个延时\r\n    setTimeout(() => {\r\n      this.restart();\r\n    }, 300)\r\n  }\r\n\r\n  restart() {\r\n    if (this.designerState.startMode === 'EXTERNAL_PROCESS') {\r\n      this.repository.getBizCmp((cmps) => {\r\n        if (cmps && cmps.length > 0) {\r\n          // 此处标记有外部流程通用构件\r\n          for (const c of cmps) {\r\n            if (c.scopeType === 'ExternalProcess') {\r\n              this.exBizTips = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    this.location = this.editorParams.location;\r\n    if (this.location === 'activity') {\r\n      this.uistate.executionCollection = this.uistate.activityCollection;\r\n      this.columns = [\r\n        {\r\n          field: 'executionTime', width: 100, title: this.localePipe.transform('component.activityComponent.executionTime'),\r\n          editor: {\r\n            type: EditorTypes.COMBOLIST,\r\n            options: { data: this.uistate.executionCollection, groupField: 'text', valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }\r\n          },\r\n          formatter: (v, d, i) => {\r\n            if (v) {\r\n              return this.uistate.executionCollection.find(item => item.value === v).text;\r\n            } else {\r\n              return '';\r\n            }\r\n          },\r\n          validators: [\r\n            { type: 'required', messager: '必填' }\r\n          ]\r\n        },\r\n        {\r\n          field: 'name', width: 100, title: this.localePipe.transform('component.activityComponent.cmpName')\r\n        },\r\n        { field: 'metadataId', width: 100, title: this.localePipe.transform('component.activityComponent.metadataId') },\r\n        { field: 'methodCode', width: 100, title: this.localePipe.transform('component.activityComponent.methodCode') },\r\n        {\r\n          field: 'isForCompensation', width: 50, title: this.localePipe.transform('component.activityComponent.isForCompensation'),\r\n          editor: { type: EditorTypes.SWITCH, options: {} },\r\n          formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.activityComponent.yes'), falseText: this.localePipe.transform('component.activityComponent.no') } }\r\n        },\r\n        { title: this.localePipe.transform('component.activityComponent.operate'), width: 70, template: this.btnTemplate }\r\n      ];\r\n    } else if (this.location === 'autoActivity') {\r\n      this.columns = [\r\n        {\r\n          field: 'name', width: 100, title: this.localePipe.transform('component.activityComponent.cmpName')\r\n        },\r\n        { field: 'metadataId', width: 100, title: this.localePipe.transform('component.activityComponent.metadataId') },\r\n        { field: 'methodCode', width: 100, title: this.localePipe.transform('component.activityComponent.methodCode') },\r\n        {\r\n          field: 'isForCompensation', width: 50, title: this.localePipe.transform('component.activityComponent.isForCompensation'),\r\n          editor: { type: EditorTypes.SWITCH, options: {} },\r\n          formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.activityComponent.yes'), falseText: this.localePipe.transform('component.activityComponent.no') } }\r\n        },\r\n        { title: this.localePipe.transform('component.activityComponent.operate'), width: 70, template: this.btnTemplate }\r\n      ];\r\n    } else {\r\n      this.columns = [\r\n        {\r\n          field: 'executionTime', width: 100, title: this.localePipe.transform('component.activityComponent.executionTime'),\r\n          editor: {\r\n            type: EditorTypes.COMBOLIST,\r\n            options: { data: this.uistate.executionCollection, groupField: 'text', valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }\r\n          },\r\n          formatter: (v, d, i) => {\r\n            if (v) {\r\n              return this.uistate.executionCollection.find(item => item.value === v).text;\r\n            } else {\r\n              return '';\r\n            }\r\n          },\r\n          validators: [\r\n            { type: 'required', messager: '必填' }\r\n          ]\r\n        },\r\n        {\r\n          field: 'name', width: 100, title: this.localePipe.transform('component.activityComponent.cmpName')\r\n        },\r\n        { field: 'metadataId', width: 100, title: this.localePipe.transform('component.activityComponent.metadataId') },\r\n        { field: 'methodCode', width: 100, title: this.localePipe.transform('component.activityComponent.methodCode') },\r\n        { title: this.localePipe.transform('component.activityComponent.operate'), width: 70, template: this.btnTemplate }\r\n      ];\r\n    }\r\n    if (this.uistate.components && this.uistate.components.length > 0) {\r\n      this.cmplist.selectRow(this.uistate.components[0].id, true);\r\n    }\r\n\r\n    this.paramColumns = [\r\n      { field: 'code', width: 50, title: this.localePipe.transform('component.activityComponent.code') },\r\n      { field: 'name', width: 50, title: this.localePipe.transform('component.activityComponent.name') },\r\n      {\r\n        field: 'value', width: 100, title: this.localePipe.transform('component.activityComponent.value') ,\r\n        editor: {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    ];\r\n    // 选中当前行\r\n    this.repository.subject.subscribe(cmp => {\r\n      this.cmplist.loadData(this.uistate.components);\r\n      if (cmp) {\r\n        this.cmplist.selectRow(cmp.id, true);\r\n      } else {\r\n        this.uistate.curComponent = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.uistate.components && this.uistate.components.length > 0) {\r\n      this.cmplist.selectRow(this.uistate.components[0].id, true);\r\n    }\r\n  }\r\n  edit() {\r\n    this.editState = 'edit';\r\n    const compFactory = this.resolver.resolveComponentFactory(EditComponentParameterComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.activityComponent.editComponent'),\r\n      width: 700,\r\n      height: 400,\r\n      buttons: compRef.instance.editFooter,\r\n      showButtons: true,\r\n      initialState: {\r\n        curComponent: JSON.parse(JSON.stringify(this.uistate.curComponent))\r\n      }\r\n    };\r\n    const editDialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.canEdit = false;\r\n    compRef.instance.editState = this.editState;\r\n    compRef.instance.location = this.location;\r\n    compRef.instance.executionTimingList = this.uistate.executionCollection;\r\n    // compRef.instance.curComponent = JSON.parse(JSON.stringify(this.uistate.curComponent));\r\n    compRef.instance.submitEmitter.subscribe(cmp => {\r\n      const i = this.uistate.components.findIndex(item => item.id === cmp.id);\r\n      this.uistate.components[i] = cmp;\r\n      this.cmplist.loadData(this.uistate.components);\r\n      editDialog.close()\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      editDialog.close()\r\n    });\r\n    setTimeout(() => {\r\n      compRef.instance.cd.detectChanges();\r\n    })\r\n  }\r\n  deleteRow() {\r\n    this.message.confirm(this.localePipe.transform('component.activityComponent.confirmDelete')).subscribe((v) => {\r\n      if (v) {\r\n        this.closeCellEdit();\r\n        this.viewModel.deleteRow();\r\n        this.cmplist.loadData(this.uistate.components);\r\n      }\r\n    });\r\n  }\r\n  moveUp() {\r\n    if (!this.uistate.curComponent) {\r\n      this.message.info(this.localePipe.transform('component.activityComponent.curComponent'));\r\n      return;\r\n    }\r\n    const curCmpId: string = this.uistate.curComponent.id;\r\n    const i = this.uistate.components.findIndex(c => c.id === curCmpId);\r\n    if (i === 0) {\r\n      return;\r\n    }\r\n    this.repository.swapArray(this.uistate.components, i, i - 1);\r\n\r\n    this.cmplist.loadData(this.uistate.components);\r\n    this.cmplist.selectRow(curCmpId, true);\r\n  }\r\n\r\n  moveDown() {\r\n    if (!this.uistate.curComponent) {\r\n      this.message.info(this.localePipe.transform('component.activityComponent.curComponent'));\r\n      return;\r\n    }\r\n    const curCmpId: string = this.uistate.curComponent.id;\r\n    const i = this.uistate.components.findIndex(c => c.id === curCmpId);\r\n    if (i === this.uistate.components.length - 1) {\r\n      return;\r\n    }\r\n    this.repository.swapArray(this.uistate.components, i, i + 1);\r\n\r\n    this.cmplist.loadData(this.uistate.components);\r\n    this.cmplist.selectRow(curCmpId, true);\r\n  }\r\n\r\n  clickAction(buttonId: string, ctx: any) {\r\n    this.uistate.curComponent = ctx.rowData;\r\n    switch (buttonId) {\r\n      case 'edit':\r\n        this.edit();\r\n        break;\r\n      case 'deleteRow':\r\n        this.deleteRow();\r\n        break;\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.closeCellEdit();\r\n    if (this.validator()) {\r\n      const object = { value: this.uistate.components, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  componentSelect() {\r\n    this.editState = 'new';\r\n    const compFactory = this.resolver.resolveComponentFactory(EditComponentParameterComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.activityComponent.newComponent'),\r\n      width: 700,\r\n      height: 400,\r\n      buttons: compRef.instance.editFooter,\r\n      showButtons: true\r\n    };\r\n    const editDialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.canEdit = true;\r\n    compRef.instance.editState = this.editState;\r\n    compRef.instance.location = this.location;\r\n    compRef.instance.executionTimingList = this.uistate.executionCollection;\r\n    compRef.instance.curComponent = new BizComponentEntity();\r\n    compRef.instance.submitEmitter.subscribe(cmp => {\r\n      this.uistate.components.push(cmp);\r\n      this.cmplist.loadData(this.uistate.components);\r\n      editDialog.close()\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      editDialog.close()\r\n    });\r\n    setTimeout(() => {\r\n      compRef.instance.cd.detectChanges();\r\n    })\r\n  }\r\n  /**\r\n   * 取数构件帮助new\r\n   */\r\n  openComponentSelectorNew(metadataId: string, sessionId: string) {\r\n    this.componentService.openSelector(metadataId, sessionId).subscribe(\r\n      (selectorResult: SelectorResult) => {\r\n        selectorResult.confirmEvent.subscribe(\r\n          (result: GspComponent) => {\r\n            this.viewModel.componentSelect(result);\r\n          });\r\n      });\r\n  }\r\n  showExprHelp(e: any) {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerState.addContext(context);\r\n    if (this.location === 'activity') {\r\n      for (const variable of this.designerState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.location === 'activity') {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      e.formControl.setValue(expressioninfo);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  selectionChange(data: any) {\r\n    this.uistate.curComponent = data.data;\r\n  }\r\n  paramAfterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  private closeCellEdit() {\r\n    this.cmplist.endCellEdit();\r\n    if (this.paramlist) {\r\n      this.paramlist.endCellEdit();\r\n    }\r\n  }\r\n\r\n  private validator(): boolean {\r\n    // 校验是否存在重复的构件\r\n    const cache = [];\r\n    for (const cmp of this.uistate.components) {\r\n      if (cache.find(c => c.methodCode === cmp.methodCode && JSON.stringify(c.actualParameters) === JSON.stringify(cmp.actualParameters) &&\r\n        c.executionTime === cmp.executionTime)) {\r\n        console.log(cmp.actualParameters);\r\n        this.message.warning(this.localePipe.transform('component.activityComponent.sameCmp') + `${cmp.name}` + this.localePipe.transform('component.activityComponent.cmpMethod')+ cmp.methodCode + this.localePipe.transform('component.activityComponent.pleaseCheck'));\r\n        return false;\r\n      }\r\n      cache.push(cmp);\r\n      if (!cmp.executionTime && this.location !== 'autoActivity') {\r\n        this.message.warning(this.localePipe.transform('component.activityComponent.executionTimeNotNull'));\r\n        return false;\r\n      }\r\n      for (const param of cmp.actualParameters) {\r\n        if (param.required && !param.value) {\r\n          this.message.warning(this.localePipe.transform('component.activityComponent.component') + `【${cmp.name}】` + this.localePipe.transform('component.activityComponent.param') + `【${param.code}】` + this.localePipe.transform('component.activityComponent.required'));\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class ActivityComponentConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform(\"component.activityComponent.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.activityComponent.notSet\");\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\n\r\nexport class ExecuteFormsUIState {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ){}\r\n    public formTypeCollection = [\r\n        { text: this.localePipe.transform('component.executeForms.processEmbeddedForm'), value: '0' },\r\n        { text: this.localePipe.transform('component.executeForms.formEmbedProcess'), value: '1' },\r\n    ];\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class ExecuteFormsViewModel {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class ExecuteFormsRepository {\r\n\r\n}\r\n","\r\nexport class ExecuteFormModel {\r\n    Id: string;\r\n    Name: string;\r\n    ComponentId: string;\r\n    FormType: string;\r\n    TerminalType: TerminalType;\r\n    ActualParameters: ActualParameter[];\r\n    formFormatId: string;\r\n    formatConfigId: string;\r\n}\r\nexport class ActualParameter {\r\n    Name: string;\r\n    Value: string;\r\n    ValueText?: string;\r\n    Tag?: string;\r\n}\r\nexport enum TerminalType {\r\n    PC = 'PC',\r\n    MOBILE = 'MOBILE',\r\n    ALL = 'ALL'\r\n}\r\n","import { ILookupHttpService, RemoteParams, LookupGridResult } from '@farris/ui-lookup';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FormFormatService implements ILookupHttpService {\r\n    constructor(\r\n        private http: HttpService,\r\n    ) {\r\n    }\r\n    getData(url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n        const customData = params.customData;\r\n        const index = params.pageIndex || 1;\r\n        const size = params.pageSize || 20;\r\n        const searchValue = JSON.parse(params.searchValue);\r\n        const terminal = customData.tab === 'web' ? 'PC' : 'Mobile';\r\n        let query = '?param=';\r\n        let filter = `{\"terminal\":\"${terminal}\"`;\r\n        if (searchValue.searchValue) {\r\n            if (searchValue.searchField === '*') {\r\n                filter += `,\"allColumns\":\"${searchValue.searchValue}\"`;\r\n            } else {\r\n                filter += `,\"${searchValue.searchField}\":\"${searchValue.searchValue}\"`;\r\n            }\r\n        }\r\n        filter += '}';\r\n        filter = encodeURIComponent(filter);\r\n        query += (filter + `&pageNum=${index}&pageSize=${size}`);\r\n        url += query;\r\n        return this.http.get(url).pipe(\r\n            map((re: any) => ({\r\n                items: re.content,\r\n                total: re.totalElements,\r\n                pageInfo: {\r\n                    pageIndex: re.pageable.pageNumber + 1,\r\n                    pageSize: re.pageable.pageSize,\r\n                    pageList: [20, 40, 60, 80, 100],\r\n                    enablePager: true\r\n                }\r\n            }))\r\n        );\r\n    }\r\n}\r\n\r\n","export class ExecuteForm { \r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    appId: string;\r\n    flowFormKey: string;\r\n    formFormatId: string;\r\n    formType: string;\r\n    isDefault: boolean;\r\n    terminal: string;\r\n    actualParameters: Array<FormalParameter>;\r\n    sysInit: number;\r\n    remarks: string;\r\n}\r\n\r\nexport class FormalParameter {\r\n    code: string;\r\n    name: string;\r\n    valueType: string;\r\n    value: string;\r\n}\r\n","import { Component, OnInit, Injector, ComponentFactoryResolver, ViewChild, TemplateRef, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { RtfAppHelpComponent } from '@gsp-sys/rtf-ui';\r\nimport { RtfApp } from '@gsp-sys/rtf-ui/lib/rtf-app-help/entities/rtf-app';\r\nimport { of, Observable, Subject, from, forkJoin } from 'rxjs';\r\nimport { PickedResult, ServerSideToken, LookupGridComponent } from '@farris/ui-lookup';\r\nimport { FormFormatService } from './form-format.service';\r\nimport { ExecuteFormModel, TerminalType, ActualParameter } from '../entities/execute-form.entity';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ExecuteForm } from '../entities/execute-form';\r\nimport { ProcessDeUtil } from '../../../domain/process-de-util';\r\nimport { map } from 'rxjs/operators';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-add-execute-form',\r\n  templateUrl: './add-execute-form.component.html',\r\n  styleUrls: ['./add-execute-form.component.scss'],\r\n  providers: [{\r\n    provide: ServerSideToken, useClass: FormFormatService },\r\n     WfLocalePipe\r\n  ]\r\n})\r\nexport class AddExecuteFormComponent implements OnInit {\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  // @ViewChild(RtfAppHelpComponent) public appHelper: RtfAppHelpComponent;\r\n  // @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n  @ViewChild('grid') private grid: DatagridComponent;\r\n\r\n  submit = new Subject<ExecuteFormModel>();\r\n  cancel = new Subject();\r\n\r\n  tab: 'web' | 'mobile';\r\n\r\n  forms = new Array<ExecuteForm>();\r\n\r\n  // private formTypeCollection = [\r\n  //   { text: '流程嵌表单', value: '0' },\r\n  //   { text: '表单嵌流程', value: '1' },\r\n  // ];\r\n\r\n  columns = [\r\n    { field: 'code', width: 100, title: this.localePipe.transform('component.executeForms.code') },\r\n    {\r\n      field: 'name', width: 100, title: this.localePipe.transform('component.executeForms.name'),\r\n    },\r\n    {\r\n      field: 'tag', width: 80, title: this.localePipe.transform('component.executeForms.apptag'),\r\n      formatter: (v, d, i) => {\r\n        if (d.appId) {\r\n          return this.localePipe.transform('component.executeForms.functionMenu');\r\n        } else if (d.formFormatId) {\r\n          return this.localePipe.transform('component.executeForms.formFormat');\r\n        }\r\n      }\r\n    }\r\n    // {\r\n    //   field: 'formType', width: 80, title: '联查类型',\r\n    //   formatter: {\r\n    //     type: 'enum',\r\n    //     options: { valueField: 'value', textField: 'text', data: this.formTypeCollection }\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  // 表单格式显示列\r\n  cols = [\r\n    {\r\n      field: 'code', width: 100, title: this.localePipe.transform('component.executeForms.docFormatNumber'), searchField: 'code'\r\n    }, {\r\n      field: 'name', width: 100, title: this.localePipe.transform('component.executeForms.docFormatName'), searchField: 'name'\r\n    }\r\n  ];\r\n\r\n  dataUri = '/api/runtime/wf/v1.0/formFormat/page';\r\n  constructor(\r\n    private state: ProcessDesignerUIState,\r\n    private http: HttpService,\r\n    private session: SessionService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.getAllExecuteForms();\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.grid.selectedRow) {\r\n      const form: ExecuteForm = this.grid.selectedRow.data;\r\n      const model = new ExecuteFormModel();\r\n      model.Id = ProcessDeUtil.GenerateElementId();\r\n      model.Name = form.name;\r\n      model.ComponentId = form.appId;\r\n      model.FormType = form.formType;\r\n      model.formFormatId = form.formFormatId;\r\n      model.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;\r\n      model.ActualParameters = form.actualParameters.map(p => {\r\n        const a = new ActualParameter();\r\n        a.Name = p.code;\r\n        a.Tag = p.valueType ? p.valueType : this.initVariableType(p.value);\r\n        a.Value = p.value;\r\n        return a;\r\n      });\r\n      this.submit.next(model);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.executeForms.selectedRow'));\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n\r\n  // selectOtherFormFormat() {\r\n  //   this.lookUp.showDialog();\r\n  // }\r\n\r\n  // dictPicking = (arg) => {\r\n  //   return of({\r\n  //     showDialog: true, data: {\r\n  //       tab: this.tab\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // dictPicked = (data: any): Observable<PickedResult> => {\r\n  //   const model = new ExecuteFormModel();\r\n  //   model.Id = ProcessDeUtil.GenerateElementId();\r\n  //   model.Name = data.name;\r\n  //   model.ComponentId = null;\r\n  //   model.FormType = '0';\r\n  //   model.formFormatId = data.id;\r\n  //   model.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;\r\n  //   model.ActualParameters = data.urlParameters.map(p => {\r\n  //     const a = new ActualParameter();\r\n  //     a.Name = p.code;\r\n  //     a.Value = p.value;\r\n  //     return a;\r\n  //   });\r\n  //   this.submit.next(model);\r\n  //   return of({ closeDialog: true });\r\n  // }\r\n\r\n  // selectOtherFunc() {\r\n  //   this.appHelper.showHelp(this.session.getUserSessionId());\r\n  // }\r\n\r\n  // funcSelected(apps: RtfApp[]) {\r\n  //   if (apps && apps.length > 0) {\r\n  //     const model = new ExecuteFormModel();\r\n  //     model.Id = ProcessDeUtil.GenerateElementId();\r\n  //     model.Name = apps[0].Name;\r\n  //     model.ComponentId = apps[0].Id;\r\n  //     model.FormType = '0';\r\n  //     model.formFormatId = null;\r\n  //     model.TerminalType = this.tab === 'web' ? TerminalType.PC : TerminalType.MOBILE;\r\n  //     model.ActualParameters = [];\r\n  //     if (apps[0].InvokingConfig['entityParams']) {\r\n  //       const paras = JSON.parse(apps[0].InvokingConfig['entityParams']);\r\n  //       model.ActualParameters = paras.map(p => ({\r\n  //         Name: p.name,\r\n  //         Value: ''\r\n  //       }));\r\n  //     }\r\n  //     setTimeout(() => {\r\n  //       this.submit.next(model);\r\n  //     }, 0);\r\n  //   }\r\n  // }\r\n\r\n  private getAllExecuteForms() {\r\n    forkJoin(this.getExecuteForms(), this.getFormFormats()).subscribe(re => {\r\n      if (re[0]) {\r\n        this.forms = re[0];\r\n      }\r\n      if (re[1] && re[1].length > 0) {\r\n        const formFormats = re[1];\r\n        for (const format of formFormats) {\r\n          if (this.forms.findIndex(f => f.formFormatId && f.formFormatId === format.id) === -1) {\r\n            const executeForm = new ExecuteForm();\r\n            executeForm.id = ProcessDeUtil.createNM();\r\n            executeForm.flowFormKey = this.state.flowFormInfo.flowForm.id;\r\n            executeForm.appId = null;\r\n            executeForm.code = format.code;\r\n            executeForm.name = format.name;\r\n            executeForm.actualParameters = [];\r\n            executeForm.isDefault = false;\r\n            executeForm.formType = '0';\r\n            executeForm.terminal = 'web';\r\n            executeForm.formFormatId = format.id;\r\n            executeForm.sysInit = 0;\r\n            executeForm.remarks = '';\r\n            if (format.urlParameters && format.urlParameters.length > 0) {\r\n              const actPList = format.urlParameters.map(p => ({\r\n                code: p.code,\r\n                name: p.name,\r\n                valueType: p.valueType ? p.valueType : this.initVariableType(p.value),\r\n                value: p.value\r\n              }));\r\n              executeForm.actualParameters = actPList;\r\n            }\r\n            this.forms.push(executeForm);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  initVariableType(value): string {\r\n    if (value) {\r\n        if (value.length >= 8 && value.slice(0, 8) === `{\"expr\":`) {\r\n            return 'expression';\r\n        } else {\r\n            return 'constant';\r\n        }\r\n    } else {\r\n        return 'variable';\r\n    }\r\n  }\r\n\r\n  private getExecuteForms(): Observable<any> {\r\n    if (this.state.flowFormInfo.flowForm.id && this.tab) {\r\n      const url = `/api/runtime/wf/v1.0/excuteForm?flowFormKey=${this.state.flowFormInfo.flowForm.id}`;\r\n      return this.http.get(url).pipe(\r\n        map((re: any) => {\r\n          if (this.tab === 'web') {\r\n            return re.filter(f => f.terminal.indexOf('web') > -1);\r\n          } else if (this.tab === 'mobile') {\r\n            return re.filter(f => f.terminal.indexOf('app') > -1);\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n  private getFormFormats(): Observable<any>  {\r\n    if (this.state.flowFormInfo.flowForm.businessObjectId && this.tab) {\r\n      const terminal = this.tab === 'web' ? 'PC' : 'Mobile';\r\n      let url = `/api/runtime/wf/v1.0/formFormat/query?param=`;\r\n      let param = `{\"bizCategory\":\"${this.state.flowFormInfo.flowForm.businessObjectId}\",\"terminal\":\"${terminal}\"}`;\r\n      param = encodeURIComponent(param);\r\n      url += param;\r\n      return this.http.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, Inject, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-variable-grid',\r\n  templateUrl: './variable-grid.component.html',\r\n  styleUrls: ['./variable-grid.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class VariableGridComponent implements OnInit {\r\n\r\n  @ViewChild(DatagridComponent) grid: DatagridComponent;\r\n  @ViewChild('buttonRef') buttonRef: TemplateRef<any>;\r\n  @Output() cancel = new EventEmitter<any>();\r\n  @Output() submit = new EventEmitter<any>();\r\n\r\n  data = [];\r\n\r\n  columns = [\r\n    { field: 'key', width: 50, title: this.localePipe.transform('component.executeForms.key')},\r\n    { field: 'name', width: 50, title: this.localePipe.transform('component.executeForms.name')}\r\n  ];\r\n\r\n  constructor(\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    const selectedRow = this.grid.selectedRow;\r\n    console.log(selectedRow);\r\n    if (!selectedRow) {\r\n      this.submit.next(null);\r\n    } else {\r\n      this.submit.next(selectedRow.data);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, ChangeDetectorRef, Optional, LOCALE_ID, Inject } from '@angular/core';\r\nimport { ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { of, Subject } from 'rxjs';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { VariableGridComponent } from '../variable-grid/variable-grid.component';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-parameter-setting',\r\n  templateUrl: './parameter-setting.component.html',\r\n  styleUrls: ['./parameter-setting.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ParameterSettingComponent implements OnInit {\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  idField: 'Name' | 'code' = 'Name';\r\n\r\n  private _mode: 'bpmn' | 'usual' = 'bpmn';\r\n  set mode(m: 'bpmn' | 'usual') {\r\n    this._mode = m;\r\n    if (m === 'bpmn') {\r\n      this.idField = 'Name';\r\n      this.cols = [\r\n        { field: 'Name', width: 50, title: this.localePipe.transform('component.executeForms.code') },\r\n        { field: 'Tag', width: 50, title: this.localePipe.transform('component.executeForms.tag'),  formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.valueTypeCollection }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: {\r\n            valueField: 'value', textField: 'text', data: this.valueTypeCollection, idField: 'value', panelHeight: 'auto', enableClear: false,\r\n            selectChange: (e) => {\r\n              this.valueTypeChange(e);\r\n            }}\r\n        } },\r\n        {\r\n          field: 'Value', width: 100, title: this.localePipe.transform('component.executeForms.value'),\r\n          editor: {\r\n            type: 'input-group',\r\n            options: {\r\n              groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n              editable: false,\r\n              clickHandle: (e) => {\r\n                e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n                this.showExprHelp(e);\r\n              },\r\n              clear: (e) => {\r\n                console.log('clear', e);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ];\r\n    } else {\r\n      this.idField = 'code';\r\n      this.cols = [\r\n        { field: 'code', width: 50, title: this.localePipe.transform('component.executeForms.code') },\r\n        { field: 'name', width: 50, title: this.localePipe.transform('component.executeForms.name') },\r\n        {\r\n          field: 'value', width: 100, title: this.localePipe.transform('component.executeForms.value') ,\r\n          editor: {\r\n            type: 'input-group',\r\n            options: {\r\n              groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n              editable: false,\r\n              clickHandle: (e) => {\r\n                e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n                this.showExprHelp(e);\r\n              },\r\n              clear: (e) => {\r\n                console.log('clear', e);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ];\r\n    }\r\n  }\r\n\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n  submit = new Subject<any>();\r\n  cancel = new Subject();\r\n  formTypeCollection = [\r\n    { text: this.localePipe.transform('component.executeForms.processEmbeddedForm'), value: '0' },\r\n    { text: this.localePipe.transform('component.executeForms.formEmbedProcess'), value: '1' },\r\n  ];\r\n\r\n  public valueTypeCollection = [\r\n    { text: this.localePipe.transform('component.executeForms.variable'), value: 'variable' },\r\n    { text: this.localePipe.transform('component.executeForms.constant'), value: 'constant' },\r\n    { text: this.localePipe.transform('component.executeForms.expression'), value: 'expression' }\r\n  ];\r\n\r\n\r\n  cols = new Array();\r\n\r\n  parameters = new Array();\r\n\r\n  formType = this.formTypeCollection[0].value;\r\n\r\n  showFormType = false;\r\n\r\n  allParameters = new Array();\r\n\r\n  constructor(\r\n    private expr: ExpressionService,\r\n    private designerState: ProcessDesignerUIState,\r\n    private resolver: ComponentFactoryResolver,\r\n    private modalService: BsModalService,\r\n    public injector: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showExprHelp(e: any) {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n\r\n    this.expr.addExpressionText(e.instance.value);\r\n\r\n    this.expr.buildExpression().then((d: string) => { // 编辑器返回值\r\n      if (d) {\r\n        e.formControl.setValue(d);\r\n        e.instance.cd.detectChanges();\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    this.submit.next({ parameters: this.parameters, formType: this.formType });\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n\r\n  valueTypeChange(e: any) {\r\n    const param = this.parameters.find(p => p.Name === e.rowData.Name);\r\n    param.Value = '';\r\n  }\r\n\r\n  beforeEdit = (param: any) => {\r\n    if (this.mode === 'usual') {\r\n      return of(true);\r\n    } else {\r\n      if (param.column.field === 'Value') {\r\n        const rowData = param.rowData as any;\r\n        switch (rowData.Tag) {\r\n          case 'expression':\r\n            param.column.editor =  {\r\n              type: 'input-group',\r\n              options: {\r\n                groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n                editable: false,\r\n                clickHandle: (e) => {\r\n                  e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n                  this.showExprHelp(e);\r\n                },\r\n                clear: (e) => {\r\n                  console.log('clear', e);\r\n                }\r\n              }\r\n            };\r\n            break;\r\n          case 'variable':\r\n            param.column.editor =  {\r\n              type: 'input-group',\r\n              options: {\r\n                groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n                editable: true,\r\n                clickHandle: (e) => {\r\n                  this.selectVariable(e);\r\n                },\r\n                clear: (e) => {\r\n                  console.log('clear', e);\r\n                }\r\n              }\r\n            };\r\n            break;\r\n          case 'constant':\r\n            param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n            break;\r\n        }\r\n      }\r\n      return of(true);\r\n    }\r\n  }\r\n\r\n  selectVariable(e: any) {\r\n    const compFactory = this.resolver.resolveComponentFactory(VariableGridComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.data = this.allParameters; // 目前只能根据元数据类型过滤，后续添加标签过滤\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.executeForms.variable'),\r\n      width: 460,\r\n      height: 450,\r\n      showButtons: true,\r\n      buttons: compRef.instance.buttonRef\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.submit.subscribe(data => {\r\n      if (data) {\r\n        e.formControl.setValue(data.key);\r\n        e.instance.cd.detectChanges();\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe( data => dialog.close());\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ElementRef, ComponentFactoryResolver, Injector, AfterViewInit, AfterContentInit, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ExecuteFormsUIState } from './execute-forms.uistate';\r\nimport { ExecuteFormsViewModel } from './execute-forms.viewmodel';\r\nimport { ExecuteFormsRepository } from './execute-forms.repository';\r\nimport { ExecuteFormModel, TerminalType, ActualParameter } from './entities/execute-form.entity';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { AddExecuteFormComponent } from './add-execute-form/add-execute-form.component';\r\nimport { FormConfigContainerComponent } from './form-config-container/form-config-container.component';\r\nimport { ParameterSettingComponent } from './parameter-setting/parameter-setting.component';\r\nimport { Observable, Subject, forkJoin } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-execute-forms',\r\n  templateUrl: './execute-forms.component.html',\r\n  styleUrls: ['./execute-forms.component.css'],\r\n  providers: [\r\n    ExecuteFormsUIState, ExecuteFormsViewModel, ExecuteFormsRepository,\r\n    WfLocalePipe,\r\n  ]\r\n})\r\nexport class ExecuteFormsComponent implements OnInit, AfterViewInit {\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.executeForms.executeForms'),\r\n    width: 760,\r\n    height: 532,\r\n    showButtons: true\r\n  };\r\n\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @HostBinding('style.background') style = '#FFF';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(item: ExecuteFormModel) {\r\n    if (item) {\r\n      const paramArray = new Array<ActualParameter>();\r\n      item.ActualParameters.forEach(a => {\r\n        const para = new ActualParameter();\r\n        para.Name = a.Name;\r\n        para.Tag = a.Tag ? a.Tag : this.initVariableType(a.Value);\r\n        para.Value = a.Value;\r\n        paramArray.push(para);\r\n      });\r\n      this.form.ActualParameters = paramArray;\r\n      this.form.Id = item.Id;\r\n      this.form.Name = item.Name;\r\n      this.form.ComponentId = item.ComponentId;\r\n      this.form.formFormatId = item.formFormatId;\r\n      this.form.formatConfigId = item.formatConfigId;\r\n      this.form.FormType = item.FormType;\r\n      this.form.TerminalType = item.TerminalType;\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('configContainer') configContainer: FormConfigContainerComponent;\r\n\r\n  @ViewChild('configSection', { read: ElementRef }) configSection: ElementRef<any>;\r\n\r\n  form: ExecuteFormModel;\r\n\r\n  tab: 'web' | 'mobile' = 'web';\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  cols = [];\r\n\r\n  location: 'userActivity' | 'process' | 'startActivity';\r\n\r\n  showMethodTab = true;\r\n\r\n  allParameters = new Array();\r\n\r\n  // *******************************************************\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    public uistate: ExecuteFormsUIState,\r\n    public viewmodel: ExecuteFormsViewModel,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private designerState: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.form = new ExecuteFormModel();\r\n    this.allParameters = this.getVariableList();\r\n  }\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.location = this.editorParams.location;\r\n    this.tab = this.editorParams.tab;\r\n    if (this.location === 'userActivity') {\r\n      this.showMethodTab = true;\r\n    } else {\r\n      this.showMethodTab = false;\r\n    }\r\n  }\r\n  clickOK() {\r\n    let data = new ExecuteFormModel();\r\n    this.getForm().subscribe((re: any) => {\r\n      if (!re.result) {\r\n        return;\r\n      }\r\n      data = re.form;\r\n      if (this.validator(data)) {\r\n        let parameters = null;\r\n        // 如果存在变量类型参数在流程变量上不存在，需要同步流程变量\r\n        if (data && data.ActualParameters && data.ActualParameters.length > 0) {\r\n          const formalParameters = this.designerState.flowFormInfo.formalParameters.filter(p => p.dataType !== 'CDTSchema');\r\n          for (const parameter of data.ActualParameters) {\r\n            if (parameter.Tag ==='variable' && parameter.Value && !this.allParameters.some(p => p.key === parameter.Value) && formalParameters.some(p => p.code === parameter.Value)) {\r\n              parameters = formalParameters;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        const object = { value: data, parameters };\r\n        this.submitModal.emit(object);\r\n      }\r\n    });\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  validator(form: ExecuteFormModel) {\r\n    if (form && form.ActualParameters && form.ActualParameters.length > 0) {\r\n      const formalParameters = this.designerState.flowFormInfo.formalParameters.filter(p => p.dataType !== 'CDTSchema');\r\n      for (const parameter of form.ActualParameters) {\r\n        if (parameter.Tag ==='variable' && parameter.Value && !this.allParameters.some(p => p.key === parameter.Value) && !formalParameters.some(p => p.code === parameter.Value)) {\r\n          this.message.error(this.localePipe.transform('component.executeForms.parameters') + parameter.Name + this.localePipe.transform('component.executeForms.typeAsvariable'));\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  // tabChange(data) {\r\n  //   this.tab = data.nextId;\r\n  // }\r\n\r\n  // editCSS() {\r\n  //   this.configSection.nativeElement.querySelector('div.f-section-header').classList.add('mb-0');\r\n  // }\r\n\r\n  private getForm(): Observable<any> {\r\n    if (this.form.ComponentId) {\r\n      return of({ result: true, form: this.form });\r\n    } else if (this.form.formFormatId) {\r\n      return this.configContainer.submit().pipe(\r\n        switchMap((re: any) => {\r\n          if (re.result) {\r\n            this.form.formatConfigId = re.configId;\r\n            return of({ result: true, form: this.form });\r\n          } else {\r\n            return of({ result: false, form: this.form });\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({ result: true, form: null });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 参数设置\r\n   */\r\n  parametersSet() {\r\n    const compFactory = this.resolver.resolveComponentFactory(ParameterSettingComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.mode = 'bpmn';\r\n    compRef.instance.allParameters = this.allParameters;\r\n    if (this.tab === 'web') {\r\n      if (this.form.ComponentId) {\r\n        compRef.instance.showFormType = true;\r\n        compRef.instance.formType = this.form.FormType;\r\n      }\r\n      compRef.instance.parameters = [...this.form.ActualParameters.map(p => Object.assign({}, p))];\r\n    } else {\r\n      compRef.instance.parameters = [...this.form.ActualParameters.map(p => Object.assign({}, p))];\r\n    }\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.executeForms.parameterSettings'),\r\n      width: 620,\r\n      height: 400,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n    compRef.instance.submit.subscribe(re => {\r\n      if (this.tab === 'web') {\r\n        this.form.ActualParameters = re.parameters;\r\n        this.form.FormType = re.formType;\r\n      } else {\r\n        this.form.ActualParameters = re.parameters;\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n  }\r\n  /**\r\n   * 选择表单定义\r\n   */\r\n  selectExecuteForm() {\r\n    const compFactory = this.resolver.resolveComponentFactory(AddExecuteFormComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.tab = this.tab;\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.executeForms.formDefinitionList'),\r\n      width: 650,\r\n      height: 400,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.submit.subscribe((re: ExecuteFormModel) => {\r\n      this.form = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n  }\r\n  clear() {\r\n    this.form = new ExecuteFormModel();\r\n  }\r\n\r\n  initVariableType(value): string {\r\n    if (value) {\r\n        if (value.length >= 8 && value.slice(0, 8) === `{\"expr\":`) {\r\n            return 'expression';\r\n        } else {\r\n            return 'constant';\r\n        }\r\n    } else {\r\n        return 'variable';\r\n    }\r\n  }\r\n\r\n  private getVariableList() {\r\n    const context = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    return context;\r\n  }\r\n}\r\nexport class ExecuteFormsConverter implements TypeConverter {\r\n  params: any;\r\n  constructor(\r\n    params: any,\r\n    private localePipe: WfLocalePipe\r\n  ) {\r\n    this.params = params;\r\n  }\r\n  convertTo(data): string {\r\n    if (data) {\r\n      return data.Name;\r\n    } else {\r\n      if (this.params.location === 'process') {\r\n        return this.localePipe.transform('component.executeForms.notSet');\r\n      } else {\r\n        return this.localePipe.transform('component.executeForms.default');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, LOCALE_ID, ChangeDetectorRef, Optional, Inject } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ExpressionService, InjectedType, ExpressioneditorComponent } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-title-expression',\r\n  templateUrl: './title-expression.component.html',\r\n  styleUrls: ['./title-expression.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class TitleExpressionComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() value: any;\r\n  textWithMultiLanguage: Map<string, string> = new Map<string, string>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input() editorParams: any = {};\r\n  language = 'zh-CHS';\r\n  @ViewChild(ExpressioneditorComponent) editor: ExpressioneditorComponent;\r\n  languageOptions = [\r\n    { value: 'zh-CHS', text: this.localePipe.transform(\"component.titleExpression.zh-CHS\") },\r\n    { value: 'zh-CHT', text: this.localePipe.transform(\"component.titleExpression.zh-CHT\") },\r\n    { value: 'en', text: this.localePipe.transform(\"component.titleExpression.en\") }\r\n  ];\r\n  contextEntities = [];\r\n\r\n  schema: any = {};\r\n  injectName = '';\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.titleExpression.taskDescription\"),\r\n    width: 1140,\r\n    height: 720,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private expr: ExpressionService,\r\n    private injector: Injector,\r\n    public designerState: ProcessDesignerUIState,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    if (this.designerState.schemas[0]) {\r\n      this.schema = this.designerState.schemas[0];\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        this.injectName = this.designerState.schemas[0].entityTypes[0].name;\r\n      }\r\n    }\r\n    this.language = this.injector.get(LOCALE_ID, null) || this.language;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // 构造多语表达式编辑器的数据源，兼容历史\r\n    if (this.value != null) {\r\n      if (typeof(this.value) === 'string') {\r\n        this.textWithMultiLanguage.set('zh-CHS', this.value);\r\n      } else {\r\n        this.textWithMultiLanguage = new Map(Object.entries(this.value));\r\n      }\r\n    }\r\n    this.contextEntities = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        this.contextEntities = this.contextEntities.concat([variable]);\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.value = this.editor.getExprWithMultiLanguage();\r\n    const obj = [...this.value.entries()].reduce((obj, [key, value]) => (obj[key] = value==null?'':value, obj), {});\r\n    const object = { value: obj, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private convertToValue(val: string): string {\r\n    if (val) {\r\n      if (val.substring(9, val.length - 2)) {\r\n        return val;\r\n      } else {\r\n        return '';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n}\r\nexport class TitleExpressionConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && typeof data === 'string') {\r\n      return data;\r\n    } else if (data && Object.keys(data).length > 0) {\r\n      return this.areAllPropertiesEmpty(data)\r\n        ? this.localePipe.transform(\"component.titleExpression.notSet\")\r\n        : this.localePipe.transform(\"component.titleExpression.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.titleExpression.notSet\");\r\n    }\r\n  }\r\n\r\n  areAllPropertiesEmpty(obj) {\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key) && obj[key] !== '') {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","import { ActualParameter } from '../../execute-forms/entities/execute-form.entity';\r\n\r\nexport class CustomizeAciton {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    terminalType: string;\r\n    // enable: boolean;\r\n    actualParameters: ActualParameter[];\r\n    constructor(id?: string, code?: string, name?: string) {\r\n        this.id = id;\r\n        this.code = code;\r\n        this.name = name;\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, Output, EventEmitter, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { CustomizeAciton } from '../../entities/customize-action.entity';\r\nimport { ActualParameter } from '../../../execute-forms/entities/execute-form.entity';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-customize-action-list',\r\n  templateUrl: './customize-action-list.component.html',\r\n  styleUrls: ['./customize-action-list.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class CustomizeActionListComponent implements OnInit {\r\n\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  @Output() submit = new EventEmitter<any[]>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  customActionList: any[];\r\n\r\n  private terminalList = [\r\n    { value: 'app', text: this.localePipe.transform('component.customizeAction.app') },\r\n    { value: 'web', text: 'web' },\r\n    { value: 'web,app', text: this.localePipe.transform('component.customizeAction.all') }\r\n  ];\r\n\r\n  cols = [\r\n    { field: 'code', width: 100, title: this.localePipe.transform('component.customizeAction.code') },\r\n    { field: 'name', width: 100, title: this.localePipe.transform('component.customizeAction.name') },\r\n    {\r\n      field: 'terminal', width: 100, title: this.localePipe.transform('component.customizeAction.terminalType'),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.terminalList }\r\n      }, },\r\n    {\r\n      field: 'isAll', width: 100, title: this.localePipe.transform('component.customizeAction.isAll'),\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.customizeAction.yes'), falseText: this.localePipe.transform('component.customizeAction.no') } }  }\r\n  ];\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.customActionList = this.designerUIState.flowFormInfo.customizeActions || [];\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  clickOK() {\r\n    const selections = [];\r\n    const checkeds: any[] = this.grid.checkeds;\r\n    if (checkeds && checkeds.length > 0) {\r\n      checkeds.forEach(action => {\r\n        const item = new CustomizeAciton(action.data.id, action.data.code, action.data.name);\r\n        item.terminalType = action.data.terminal;\r\n        // item.enable = true;\r\n        item.actualParameters = [];\r\n        if (action.data.actualParameters && action.data.actualParameters.length > 0) {\r\n          for (const p of action.data.actualParameters) {\r\n            const param = {\r\n              Name: p.code,\r\n              Value: p.value,\r\n              ValueText: p.name,\r\n              Tag: 'expression'\r\n            } as ActualParameter;\r\n            item.actualParameters.push(param);\r\n          }\r\n        }\r\n        selections.push(item);\r\n      });\r\n    }\r\n    this.submit.emit(selections);\r\n  }\r\n  clickCancel() {\r\n    this.cancel.emit(true);\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, AfterViewInit, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { CustomizeAciton } from './entities/customize-action.entity';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { BsModalService, ModalOptions } from '@farris/ui-modal';\r\nimport { CustomizeActionListComponent } from './views/customize-action-list/customize-action-list.component';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ActualParameter } from '../execute-forms/entities/execute-form.entity';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-customize-action',\r\n  templateUrl: './customize-action.component.html',\r\n  styleUrls: ['./customize-action.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class CustomizeActionComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.customizeAction.customizeAction'),\r\n    width: 800,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n  @Input() set value(data: any[]) {\r\n    if (data && data.length > 0) {\r\n      for (const d of data) {\r\n        const action = new CustomizeAciton(d.id, d.code, d.name);\r\n        action.terminalType = d.terminalType;\r\n        action.actualParameters = [];\r\n        if (d.actualParameters && d.actualParameters.length > 0) {\r\n          for (const a of d.actualParameters) {\r\n            const p = new ActualParameter();\r\n            p.Name = a.Name;\r\n            p.Value = a.Value;\r\n            p.ValueText = a.ValueText;\r\n            p.Tag = a.Tag;\r\n            action.actualParameters.push(p);\r\n          }\r\n        }\r\n        this.actions.push(action);\r\n      }\r\n    }\r\n  }\r\n\r\n  @ViewChild('actionlist') actionlist: DatagridComponent;\r\n  @ViewChild('paramlist') paramlist: DatagridComponent;\r\n\r\n  private terminalList = [\r\n    { value: 'app', text: this.localePipe.transform('component.customizeAction.app') },\r\n    { value: 'web', text: 'web' },\r\n    { value: 'web,app', text: this.localePipe.transform('component.customizeAction.') }\r\n  ];\r\n  actions: CustomizeAciton[] = [];\r\n  curAction: CustomizeAciton;\r\n  columns = [\r\n    { field: 'code', width: 100, title: this.localePipe.transform('component.customizeAction.code') },\r\n    { field: 'name', width: 100, title: this.localePipe.transform('component.customizeAction.name') },\r\n    {\r\n      field: 'terminalType', width: 100, title: this.localePipe.transform('component.customizeAction.terminalType') ,\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.terminalList }\r\n      },\r\n    },\r\n    // {\r\n    //   field: 'enable', width: 100, title: '是否启用',\r\n    //   editor: { type: EditorTypes.SWITCH, options: {} },\r\n    //   formatter: { type: 'boolean', options: { trueText: '是', falseText: '否' } }\r\n    // }\r\n  ];\r\n  paramColumns = [\r\n    { field: 'Name', width: 50, title: this.localePipe.transform('component.customizeAction.paramName') },\r\n    { field: 'ValueText', width: 50, title: this.localePipe.transform('component.customizeAction.valueText') },\r\n    {\r\n      field: 'Value', width: 100, title: this.localePipe.transform('component.customizeAction.value'),\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.showExprHelp(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n  constructor(\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n    // this.actionlist.loadData(this.actions);\r\n    // if (this.actions && this.actions.length > 0) {\r\n    //   this.actionlist.selectRow(this.actions[0].id, true);\r\n    // }\r\n  }\r\n  addActions() {\r\n    const compFactory = this.resolver.resolveComponentFactory(CustomizeActionListComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const modalConfig: ModalOptions = {\r\n      title: this.localePipe.transform('component.customizeAction.addActions'),\r\n      width: 800,\r\n      height: 520,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.submit.subscribe((data: CustomizeAciton[]) => {\r\n      if (data && data.length > 0) {\r\n        for (const a of data) {\r\n          const index = this.actions.findIndex(act => act.code === a.code);\r\n          if (index > -1) {\r\n            this.message.info(this.localePipe.transform('component.customizeAction.actionExisted'));\r\n            this.actions.splice(index, 1);\r\n          }\r\n          this.actions.push(a);\r\n        }\r\n        this.loadData();\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe($event => dialog.close());\r\n  }\r\n  delete() {\r\n    this.actionlist.endCellEdit();\r\n    if (this.actionlist.selectedRow && this.actionlist.selectedRow.data) {\r\n      const i = this.actions.findIndex(d => d.code === this.actionlist.selectedRow.data.code);\r\n      this.actions.splice(i, 1);\r\n      this.loadData();\r\n      // this.actionlist.loadData(this.actions);\r\n      // if (this.actions && this.actions.length > 0) {\r\n      //   this.actionlist.selectRow(this.actions[0].id, true);\r\n      // } else {\r\n      //   this.curAction = null;\r\n      // }\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.customizeAction.selectedRow'));\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.actionlist.endCellEdit();\r\n    this.paramlist && this.paramlist.endCellEdit();\r\n\r\n    const object = { value: this.actions, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  loadData() {\r\n    this.actionlist.loadData(this.actions);\r\n    if (this.actions.length > 0 && (!this.actionlist.selectedRow || !this.actionlist.selectedRow.data)) {\r\n      this.actionlist.selectRow(this.actions[0].id, true);\r\n    } else {\r\n      this.curAction = null;\r\n    }\r\n  }\r\n\r\n  selectChanged(data: any) {\r\n    this.curAction = data.data;\r\n  }\r\n\r\n  showExprHelp(e: any) {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    // if (e.instance.value) {\r\n    this.expr.addExpressionText(e.instance.value);\r\n    // }\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      e.formControl.setValue(expressioninfo);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class CustomizeActionConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform(\"component.customizeAction.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.customizeAction.notSet\");\r\n    }\r\n  }\r\n}\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\nexport class ProcessVariable {\r\n    id: string;\r\n    name: string;\r\n    documentation: string;\r\n    basicType: string;\r\n    tag: string;\r\n    value: string;\r\n    valueText: string;\r\n    description: string;\r\n    component: any;\r\n\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.basicType = 'String';\r\n    }\r\n}\r\n","import { Component, OnInit, TemplateRef, ViewChild, Input, Output, EventEmitter, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n@Component({\r\n  selector: 'lib-constant-edit',\r\n  templateUrl: './constant-edit.component.html',\r\n  styleUrls: ['./constant-edit.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ConstantEditComponent implements OnInit {\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<string>();\r\n  @Input()\r\n  value: string;\r\n\r\n  constructor(\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    this.submitEmitter.emit(this.value);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ILookupHttpService, LookupGridResult, RemoteParams } from '@farris/ui-lookup';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ComponentEditLookUpService implements ILookupHttpService {\r\n    constructor(\r\n        private http: HttpService,\r\n    ) {\r\n    }\r\n\r\n    getData(url: string, params?: RemoteParams): Observable<any> {\r\n        const customData = params.customData;\r\n        const index = params.pageIndex || 1;\r\n        const size = params.pageSize || 20;\r\n        const searchValue = params.searchValue;\r\n        if (customData.helpId) {\r\n            let query = `?helpId=${customData.helpId}&pageIndex=${index}&pageSize=${size}`;\r\n            if (searchValue) {\r\n                query += `&searchValue=${searchValue}`;\r\n            }\r\n            url += query;\r\n            return this.http.get(url);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class ComponentEditService {\r\n    constructor(\r\n        private http: HttpService,\r\n    ) {\r\n    }\r\n\r\n    getHelpMetaData(helpId: string, su: string): Observable<any> {\r\n        const url = `/api/runtime/lcm/v1.0/rt-metadatas/${helpId}`;\r\n        return this.http.get(url);\r\n    }\r\n}\r\n","import { ProcessDeUtil } from '../../../../domain/process-de-util';\r\nexport class ComponentEntity {\r\n    Id: string;\r\n    Name: string;\r\n    MetadataId: string;\r\n    ComponentType: string;\r\n    MethodCode: string;\r\n    Execution: string;\r\n    AsyncCallBackType: string;\r\n    Time: string;\r\n    isForCompensation: boolean;\r\n    ActualParameters: Array<ActualParameter>;\r\n    constructor() {\r\n        this.Id = ProcessDeUtil.GenerateElementId();\r\n        this.ActualParameters = new Array();\r\n    }\r\n}\r\nexport class ActualParameter {\r\n    Name: string;\r\n    Value: string;\r\n    ValueText?: string;\r\n    Tag?: string;\r\n    fetchValueMode?: any;\r\n    fetchValueSetting?: any;\r\n}\r\n","import { Component, OnInit, ComponentFactoryResolver, Injector, Input, ViewChild, ElementRef, HostBinding, AfterViewInit, NgZone, TemplateRef, EventEmitter, Output, ChangeDetectorRef, Optional, LOCALE_ID, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { SessionService } from '@ecp-caf/caf-common';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { CommonComponentUiRTService, SelectorResult } from '@gsp-cmp/ccmp-ui';\r\nimport { SelectMetadataRTComponent, Metadata4RefDto, MetadataDto } from '@gsp-lcm/metadatart-selector';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { of, forkJoin, Observable } from 'rxjs';\r\nimport { RowEditParam } from '@farris/ui-datagrid/lib/types';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { LookupGridComponent, LookupGridResult, ServerSideToken } from '@farris/ui-lookup';\r\nimport { WebServiceParameter, ParameterFetchValueMode, HelpFetchValueSetting } from '@gsp-cmp/wscmp-models';\r\nimport { ComponentEditLookUpService } from './component-edit-lookup.service';\r\nimport { ComponentEditService } from './component-edit.service';\r\nimport { ComponentEntity, ActualParameter } from './component.entity';\r\nimport { ProcessDeUtil } from '../../../../domain/process-de-util';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-component-edit',\r\n  templateUrl: './component-edit.component.html',\r\n  styleUrls: ['./component-edit.component.scss'],\r\n  providers: [\r\n    ComponentEditService,\r\n    { provide: ServerSideToken, useClass: ComponentEditLookUpService },\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ComponentEditComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @ViewChild(DatagridComponent) grid: DatagridComponent;\r\n  @ViewChild(LookupGridComponent) lookup: LookupGridComponent;\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<any>();\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n  private _component: any = new ComponentEntity();\r\n  @Input()\r\n  set component(cmp: ComponentEntity) {\r\n    if (cmp && cmp.MethodCode) {\r\n      this.service.getHelpMetaData(cmp.MetadataId, '').subscribe(re => {\r\n        const c = JSON.parse(re.content);\r\n        const operation = c.operations.find(o => o.code === cmp.MethodCode);\r\n        if (operation) {\r\n          cmp.ActualParameters = cmp.ActualParameters.map(a => {\r\n            const p = operation.parameters.find(i => i.code === a.Name);\r\n            if (p) {\r\n              return {\r\n                ...a,\r\n                fetchValueMode: p.fetchValueMode,\r\n                fetchValueSetting: p.fetchValueSetting\r\n              };\r\n            } else {\r\n              throw new Error(this.localePipe.transform(\"component.variableSetting.inconsistentParameters\"));\r\n            }\r\n          });\r\n          this._component = cmp;\r\n        } else {\r\n          throw new Error(this.localePipe.transform(\"component.variableSetting.methodNotExist\"));\r\n        }\r\n      });\r\n    } else {\r\n      this._component = new ComponentEntity();\r\n    }\r\n  }\r\n  get component() {\r\n    return this._component;\r\n  }\r\n\r\n  curParameter: ActualParameter;\r\n  columns = [\r\n    { field: 'Name', width: 100, title: this.localePipe.transform(\"component.variableSetting.parameterName\") },\r\n    {\r\n      field: 'Value', width: 100, title: this.localePipe.transform(\"component.variableSetting.parameterValue\"),\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.showExprHelp(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  helpFields: { idField: string, valueField: string; textField: string } = {\r\n    idField: '',\r\n    valueField: '',\r\n    textField: ''\r\n  };\r\n  dataUri = '/api/runtime/wf/v1.0/dtProcDefs/getHelpData';\r\n  helpId;\r\n  su: string;\r\n  helpCols = [];\r\n  displayType = 'List';\r\n  title = '';\r\n  value: any;\r\n\r\n  cell: any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private sessionSrc: SessionService,\r\n    private modalService: BsModalService,\r\n    private componentService: CommonComponentUiRTService,\r\n    private ngZone: NgZone,\r\n    private service: ComponentEditService,\r\n    private util: ProcessDeUtil,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.component);\r\n    } else {\r\n      this.message.info(this.localePipe.transform(\"component.variableSetting.methodnotSelected\"));\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  private validator() {\r\n    if (!this.component.MethodCode || !this.component.MetadataId) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    switch (rowData.fetchValueMode) {\r\n      case ParameterFetchValueMode.express:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.none:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.const:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.enum:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.help:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              this.cell = e;\r\n              this.helpId = (rowData.fetchValueSetting as HelpFetchValueSetting).helpId;\r\n              this.su = (rowData.fetchValueSetting as HelpFetchValueSetting).serviceUnit;\r\n              this.getHelpInfo().subscribe(re => {\r\n                console.log(re);\r\n                const meta = re;\r\n                const help = JSON.parse(meta.content) as any;\r\n                this.helpCols = help.dataSource.columns;\r\n                this.displayType = help.displayType;\r\n                this.helpFields = {\r\n                  idField: help.idField,\r\n                  valueField: help.valueField,\r\n                  textField: help.textField\r\n                };\r\n                this.lookup.onClear();\r\n                this.lookup.showDialog();\r\n              }, err => {\r\n                  this.message.error(this.localePipe.transform(\"component.variableSetting.metadataNotExist\"));\r\n              });\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n        break;\r\n    }\r\n    return of(true);\r\n  }\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  clear() {\r\n    this.component = new ComponentEntity();\r\n  }\r\n  selectComponent() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = 'WebServiceComponent'; // 目前只能根据元数据类型过滤，后续添加标签过滤\r\n    compRef.instance.selectedMetadata.subscribe(($event: Metadata4RefDto) => {\r\n      try {\r\n        const meta: MetadataDto = $event.metadata;\r\n        this.openComponentSelectorNew(meta.id, this.sessionSrc.getUserSessionId());\r\n      } catch {\r\n        console.log('$event', $event);\r\n        throw new Error(this.localePipe.transform(\"component.variableSetting.errorObtainComponent\") + $event);\r\n      }\r\n    });\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"component.variableSetting.componentSelection\"),\r\n      width: 980,\r\n      height: 548,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n  private openComponentSelectorNew(metadataId: string, sessionId: string) {\r\n    this.componentService.openSelector(metadataId, sessionId).subscribe(\r\n      (selectorResult: SelectorResult) => {\r\n        selectorResult.confirmEvent.subscribe(\r\n          (result: GspComponent) => {\r\n            if (result) {\r\n              this.component.Name = result.name;\r\n              this.component.MetadataId = result.id;\r\n              this.component.MethodCode = result.operations[0].code;\r\n              // this.component.methodName = result.operations[0].name;\r\n              this.component.ActualParameters = [];\r\n\r\n              if (result.operations[0].parameters && result.operations[0].parameters.length > 0) {\r\n                this.component.ActualParameters = result.operations[0].parameters\r\n                  .map((p: WebServiceParameter) => (\r\n                    {\r\n                      Name: p.code, Value: '', Tag: p.fetchValueMode.indexOf('express,none') > -1 ? 'expression' : 'constant',\r\n                      fetchValueMode: p.fetchValueMode,\r\n                      fetchValueSetting: p.fetchValueSetting\r\n                    }));\r\n              }\r\n            }\r\n          });\r\n      });\r\n  }\r\n  showExprHelp(e: any) {\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((d: string) => {\r\n        e.formControl.setValue(d);\r\n        e.instance.cd.detectChanges();\r\n        //点击确定后，去除表达式里面的新增的上下文变量\r\n        if(context.length > 0) {\r\n          this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n        }\r\n    });\r\n  }\r\n\r\n  private getHelpInfo(): Observable<any> {\r\n    return this.service.getHelpMetaData(this.helpId, this.su);\r\n  }\r\n\r\n  dictPicking = () => {\r\n    return of({\r\n      showDialog: true, data: {\r\n        helpId: this.helpId\r\n      }\r\n    });\r\n  }\r\n  dictPicked = (rowData) => {\r\n    if (this.cell) {\r\n      console.log(rowData);\r\n      this.cell.formControl.setValue(this.util.getValue(rowData, this.helpFields.valueField));\r\n      this.cell.instance.cd.detectChanges();\r\n      return of(true);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ProcessVariable } from './process-variable.entity';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ConstantEditComponent } from '../variable-setting/views/constant-edit/constant-edit.component';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ComponentEditComponent } from '../variable-setting/views/component-edit/component-edit.component';\r\nimport { RowEditParam, DataColumn } from '@farris/ui-datagrid/lib/types';\r\nimport { of } from 'rxjs';\r\nimport { VariableSetting } from '../variable-setting/variable-setting';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-process-variables',\r\n  templateUrl: './process-variables.component.html',\r\n  styleUrls: ['./process-variables.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ProcessVariablesComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Input() variableSetting = false;\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @Output() variableSetEmitter = new EventEmitter<any>();\r\n\r\n  @Input() value: Array<ProcessVariable> = new Array();\r\n  @Input() selectedValue: Array<VariableSetting> = new Array();\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  private basicTypes = [\r\n    { value: 'String', text: this.localePipe.transform('component.processVariables.string') },\r\n    { value: 'Integer', text: this.localePipe.transform('component.processVariables.integer') },\r\n    { value: 'Decimal', text: this.localePipe.transform('component.processVariables.decimal') },\r\n    { value: 'Boolean', text: this.localePipe.transform('component.processVariables.boolean') },\r\n    // { value: 'DateTime', text: '日期' }\r\n  ];\r\n\r\n  private tags = [\r\n    { value: 'constant', text: this.localePipe.transform('component.processVariables.constant') },\r\n    { value: 'expression', text: this.localePipe.transform('component.processVariables.expression') },\r\n    { value: 'component', text: this.localePipe.transform('component.processVariables.component') }\r\n  ];\r\n\r\n  columns = [\r\n    {\r\n      field: 'name', width: 80, title: this.localePipe.transform('component.processVariables.name'), sortable: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'documentation', width: 80, title: this.localePipe.transform('component.processVariables.documentation'), sortable: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'basicType', width: 60, title: this.localePipe.transform('component.processVariables.basicType'), sortable: true,\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.basicTypes }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.basicTypes, idField: 'value', panelHeight: 'auto', showClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    }, {\r\n      field: 'description', width: 100, title: this.localePipe.transform('component.processVariables.description'), showTips: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n    }, {\r\n      field: 'tag', width: 60, title: this.localePipe.transform('component.processVariables.tag'), sortable: true,\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.tags }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: {\r\n          valueField: 'value', textField: 'text', data: this.tags, idField: 'value', panelHeight: 'auto',\r\n          selectChange: (e) => {\r\n            this.value = this.value.map(v => {\r\n              if (v.id === e.rowId) {\r\n                v.value = null;\r\n                v.valueText = null;\r\n                if (v.component) {\r\n                  v.component = null;\r\n                }\r\n                return v;\r\n              } else {\r\n                return v;\r\n              }\r\n            });\r\n          },\r\n          clear: (e) => {\r\n            this.value = this.value.map(v => {\r\n              if (v.id === e.rowId) {\r\n                v.value = null;\r\n                v.valueText = null;\r\n                if (v.component) {\r\n                  v.component = null;\r\n                }\r\n                return v;\r\n              } else {\r\n                return v;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }, {\r\n      field: 'valueText', width: 120, title: this.localePipe.transform('component.processVariables.valueText'), showTips: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} }\r\n    }\r\n  ];\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.processVariables.processVariables'),\r\n    width: 1070,\r\n    height: 510,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private uistate: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.variableSetting) {\r\n      this.columns = this.columns.filter(c => c.field !== 'tag'\r\n        && c.field !== 'valueText' && c.field !== 'description'\r\n      );\r\n    }\r\n  }\r\n\r\n  add() {\r\n    const variable = new ProcessVariable();\r\n    this.value = this.value.concat([variable]);\r\n  }\r\n\r\n  delete() {\r\n    this.grid.endCellEdit();\r\n    const selected = this.grid.selectedRow;\r\n    if (!selected) {\r\n      this.message.info(this.localePipe.transform('component.processVariables.notSelected'));\r\n      return;\r\n    }\r\n    this.value = this.value.filter(v => v.id !== selected.data.id);\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.variableSetting) {\r\n      const selecteds = this.grid.checkeds;\r\n      if (selecteds.length > 0 ) {\r\n        if (this.varValidator()) {\r\n          this.variableSetEmitter.emit(selecteds);\r\n        }\r\n      } else {\r\n        this.message.info(this.localePipe.transform('component.processVariables.notSelected'));\r\n      }\r\n    } else {\r\n      this.grid.endCellEdit();\r\n      if (this.validator()) {\r\n        const object = { value: this.value, parameters: null };\r\n        this.submitModal.emit(object);\r\n      }\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    const column = param.column;\r\n    if (column.field === 'valueText') {\r\n      if (!(rowData as ProcessVariable).tag) {\r\n        return of(false);\r\n      }\r\n      if ((rowData as ProcessVariable).tag === this.tags[0].value) {\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n      } else {\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            showClear: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.valueEdit(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(data: any) {\r\n    if (data.column.field === 'valueText' && data.rowData.tag === this.tags[0].value) {\r\n      data.rowData.value = data.rowData.valueText;\r\n    }\r\n  }\r\n  valueEdit(e: any) {\r\n    const rowdata: ProcessVariable = e.rowData;\r\n    switch (rowdata.tag) {\r\n      case this.tags[0].value:\r\n        this.editConstant(e);\r\n        break;\r\n      case this.tags[1].value:\r\n        this.editExpression(e);\r\n        break;\r\n      case this.tags[2].value:\r\n        this.editComponent(e);\r\n        break;\r\n    }\r\n  }\r\n  private editConstant(e: any) {\r\n    const data: ProcessVariable = e.rowData;\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ConstantEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value = data.value;\r\n    compRef.instance.submitEmitter.subscribe((re: string) => {\r\n      e.formControl.setValue(re);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.processVariables.constant'),\r\n      width: 340,\r\n      height: 280,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  private editExpression(e: any) {\r\n    // this.expr.clearContext();\r\n    const data: ProcessVariable = e.rowData;\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.uistate.addContext(context);\r\n    if (this.uistate.subActivityContext.length > 0) {\r\n      for (const variable of this.uistate.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // 表达式展现模式：默认高级版\r\n    this.expr.addExpressionText(data.value);\r\n    this.expr.buildExpression().then((re: string) => {\r\n      e.formControl.setValue(re);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re;\r\n      e.form.bindingData.value = re;\r\n      e.form.value.value = re;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  private editComponent(e: any) {\r\n    const data: ProcessVariable = e.rowData;\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ComponentEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.component = data.component;\r\n    compRef.instance.submitEmitter.subscribe((re: any) => {\r\n      e.formControl.setValue(re.Name + '-' + re.MethodCode);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re.Id;\r\n      data.component = re;\r\n      e.form.bindingData.value = re.Id;\r\n      e.form.value.value = re.Id;\r\n      e.form.value.component = re;\r\n      e.form.bindingData.component = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.processVariables.component'),\r\n      width: 800,\r\n      height: 515,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  private validator() {\r\n    for (const item of this.value) {\r\n      if (!item.name) {\r\n        this.message.warning(this.localePipe.transform('component.processVariables.variableNumberEmpty'));\r\n        return false;\r\n      }\r\n      if (!item.documentation) {\r\n        this.message.warning(this.localePipe.transform('component.processVariables.variableNameEmpty'));\r\n        return false;\r\n      }\r\n      if (!this.IsMatchVariableNameRules(item.name)) {\r\n        this.message.warning(this.localePipe.transform('component.processVariables.variableNumberNotStandard'));\r\n        return false;\r\n      }\r\n      if (item.value && !item.tag) {\r\n        this.message.warning(this.localePipe.transform('component.processVariables.tagNotEmpty'));\r\n        return false;\r\n      }\r\n    }\r\n    if (this.value.length > 1) {\r\n      for (let i = 0; i < this.value.length; i++) {\r\n        const code1 = this.value[i].name;\r\n        for (let j = i + 1; j < this.value.length; j++) {\r\n          const code2 = this.value[j].name;\r\n\r\n          if (code1 === code2) {\r\n            this.message.warning(this.localePipe.transform('component.processVariables.codeDuplicates'));\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  private IsMatchVariableNameRules(str: string) {\r\n    const Regx = /^[a-zA-Z_][a-zA-Z_0-9]{0,}/;\r\n    if (Regx.test(str)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // 变量赋值专用校验\r\n  private varValidator() {\r\n    for (const item of this.grid.checkeds) {\r\n      if (this.selectedValue.length && this.selectedValue.length > 0) {\r\n        if (this.selectedValue.filter(v => v.variableCode === item.data.name).length > 0){\r\n          this.message.warning(this.localePipe.transform('component.processVariables.alreadyExists'));\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class ProcessVariablesConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform(\"component.processVariables.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.processVariables.notSet\");\r\n    }\r\n  }\r\n}\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { SmsMessageTemplate } from '../sms-message-template/sms-message-template';\r\n\r\nexport class TimeLimitInfo {\r\n    tag: string;\r\n\r\n    /**\r\n     * 是否启用\r\n     */\r\n    enable: boolean;\r\n\r\n    /**\r\n     * 限定时长\r\n     */\r\n    dueTime: string;\r\n\r\n    /**\r\n     * 时间单位\r\n     */\r\n    timeUnit: string;\r\n\r\n    expireOperations: Array<ExpireOperation>;\r\n\r\n    constructor() {\r\n        this.tag = 'constant';\r\n        this.enable = false;\r\n        this.timeUnit = 'day';\r\n        this.expireOperations = new Array();\r\n    }\r\n}\r\n\r\nexport class ExpireOperation {\r\n    id: string;\r\n    /**\r\n     * 期限控制类型\r\n     */\r\n    durationType: string;\r\n\r\n    /**\r\n     * 任务期限\r\n     */\r\n    timeDuration: number;\r\n\r\n    /**\r\n     * 时间单位\r\n     */\r\n    timeUnit: string;\r\n\r\n    /**\r\n     * 操作类型名称\r\n     */\r\n    operationTypeName: string;\r\n\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.durationType = 'BeforeDuration';\r\n        this.timeDuration = 0;\r\n        this.timeUnit = 'day';\r\n        // 默认操作类型是发送预警消息\r\n        this.operationTypeName = 'SendMessageExpireOperation';\r\n    }\r\n}\r\n\r\n/**\r\n * 发送预警信息方式\r\n */\r\nexport class SendMessage extends ExpireOperation{\r\n    /**\r\n     * 预警信息内容\r\n     */\r\n    message: string;\r\n\r\n    /**\r\n     * 发送预警信息类型\r\n     */\r\n    sendType: string;\r\n\r\n    /**\r\n     * 预警信息主题\r\n     */\r\n    subject: string;\r\n\r\n    /**\r\n     * 消息接收人\r\n     * 用户IDs\r\n     */\r\n    receiver?: string;\r\n\r\n    /**\r\n     * 消息接收人显示\r\n     */\r\n    receiverText?: string;\r\n\r\n    /**\r\n     * 启用循环预警\r\n     */\r\n    cycleEnable: boolean;\r\n\r\n    /**\r\n     * 循环预警时间间隔\r\n     */\r\n    cycleTime: string;\r\n\r\n    /**\r\n     * 循环预警时间间隔单位\r\n     */\r\n    cycleTimeUnit: string;\r\n\r\n    /**\r\n     * 短信模板\r\n     */\r\n    smsMessageTemplate: SmsMessageTemplate\r\n\r\n    constructor(\r\n      location,\r\n      private localePipe: WfLocalePipe\r\n      ) {\r\n      super();\r\n      this.cycleEnable = false;\r\n      this.cycleTimeUnit = 'day';\r\n      this.receiver = location === 'activity' ? 'workItemParticipant' : 'procInstCreator';\r\n      this.receiverText = location === 'activity' ? this.localePipe.transform('component.timeLimitControl.workItemParticipant') : this.localePipe.transform('component.timeLimitControl.procInstCreator');\r\n      this.subject = `{\"expr\":\"\\'` + this.localePipe.transform('component.timeLimitControl.SendMessageExpireOperation') + `\\'\",\"sexpr\":\"\"}`;\r\n      this.message = `{\"expr\":\"\\'` + (location === 'activity' ?  this.localePipe.transform('component.timeLimitControl.to-doMessageTimeOut') :  this.localePipe.transform('component.timeLimitControl.messageTimeOut')) + `\\'\",\"sexpr\":\"\"}`;\r\n    }\r\n}\r\n\r\nexport class AutoHandle extends ExpireOperation {\r\n  /**\r\n   * 办理类型，通过驳回否决等等\r\n   */\r\n  autoHandleType: string;\r\n\r\n  /**\r\n   * 办理意见\r\n   */\r\n  message: string;\r\n\r\n  constructor(\r\n    type: string,\r\n    private localePipe: WfLocalePipe\r\n  ) {\r\n    super();\r\n    this.autoHandleType = type;\r\n    this.message = this.localePipe.transform('component.timeLimitControl.agree');\r\n  }\r\n}\r\n","import { ProcessDeUtil } from \"../../domain/process-de-util\";\r\n\r\nexport class SmsMessageTemplate { \r\n    code: string;\r\n\r\n    content: string;\r\n\r\n    smsMessageVariables: Array<SmsMessageVariable>;\r\n    constructor() { \r\n        this.smsMessageVariables = new Array();\r\n    }\r\n}\r\n\r\nexport class SmsMessageVariable { \r\n    constructor() { \r\n        this.id = ProcessDeUtil.createNM();\r\n    }\r\n    id: string;\r\n    code: string;\r\n    value: string\r\n    tag = 'expression';\r\n}","import { ChangeDetectorRef, Component, Inject, Input, LOCALE_ID, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { SmsMessageTemplate, SmsMessageVariable } from './sms-message-template';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-sms-message-template',\r\n  templateUrl: './sms-message-template.component.html',\r\n  styleUrls: ['./sms-message-template.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class SmsMessageTemplateComponent implements OnInit {\r\n\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  smsVariableList = new Array();\r\n  smsVariableCols = new Array();\r\n  smsTemplateContent = this.localePipe.transform('component.smsMessageTemplate.smsTemplateContent')\r\n\r\n  @Input()\r\n  smsMessageTemplate: SmsMessageTemplate;\r\n\r\n  constructor(\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.smsMessageTemplate = new SmsMessageTemplate();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.smsVariableCols=[{\r\n      field: 'code', width: 80, title: this.localePipe.transform('component.smsMessageTemplate.code'), editor: { type: EditorTypes.TEXTBOX, options: {} }\r\n    }, {\r\n      field: 'value', width: 100, title: this.localePipe.transform('component.smsMessageTemplate.value'), showTips: true,editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.showExprHelp(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n      }]\r\n    console.log(this.smsMessageTemplate);\r\n  }\r\n\r\n  addSmsVariable() {\r\n    const variable = new SmsMessageVariable();\r\n    this.smsMessageTemplate.smsMessageVariables.push(variable);\r\n    this.grid.loadData(this.smsMessageTemplate.smsMessageVariables);\r\n  }\r\n\r\n  deleteSmsVariable() {\r\n    this.endGridEdit();\r\n    const selectedVariable = this.grid.selectedRow;\r\n    if (!selectedVariable) {\r\n      this.message.info(this.localePipe.transform('component.smsMessageTemplate.noRowsSelected'));\r\n      return;\r\n    }\r\n    const index = this.smsMessageTemplate.smsMessageVariables.findIndex(variable => variable.id === selectedVariable.id);\r\n    if (index > -1) {\r\n      this.smsMessageTemplate.smsMessageVariables.splice(index, 1);\r\n      this.grid.loadData(this.smsMessageTemplate.smsMessageVariables);\r\n    }\r\n  }\r\n\r\n  endGridEdit() {\r\n    this.grid.endCellEdit();\r\n  }\r\n\r\n  private showExprHelp(e: any) {\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array<VarEntity>();\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      e.formControl.setValue(expressioninfo);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit, Injector, ViewChild, TemplateRef, Input, Output, EventEmitter, Optional, ChangeDetectorRef, LOCALE_ID, Inject } from '@angular/core';\r\nimport {ExpireOperation, SendMessage} from '../time-limit-control.entity';\r\nimport { ExprEditMode, ExpressionService, InjectedType} from '@gsp-svc/expression';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { SmsMessageTemplate } from '../../sms-message-template/sms-message-template';\r\nimport { SmsMessageTemplateComponent } from '../../sms-message-template/sms-message-template.component';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-send-message-operation',\r\n  templateUrl: './send-message-operation.component.html',\r\n  styleUrls: ['./send-message-operation.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class SendMessageOperationComponent implements OnInit {\r\n\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n  @ViewChild(SmsMessageTemplateComponent) SmsTemplate:SmsMessageTemplateComponent\r\n  @Input()\r\n  set value(info: SendMessage) {\r\n    this.operation = JSON.parse(JSON.stringify(info));\r\n    if (this.operation.sendType === undefined) {\r\n      const sendMessage = new SendMessage(this.location,this.localePipe);\r\n      this.operation.cycleEnable = sendMessage.cycleEnable;\r\n      this.operation.cycleTimeUnit = sendMessage.cycleTimeUnit;\r\n      this.operation.receiver = sendMessage.receiver;\r\n      this.operation.subject = sendMessage.subject;\r\n      this.operation.message = sendMessage.message;\r\n    }\r\n    if (this.operation.receiver && this.operation.receiver.length > 0) {\r\n      let array = this.operation.receiver.split(',');\r\n      if (array.indexOf('workItemParticipant') > -1) {\r\n        this.receiverVari = 'workItemParticipant';\r\n        this.activityReceiverVar += 'workItemParticipant,';\r\n      }\r\n      if (array.indexOf('procInstCreator') > -1) {\r\n        this.receiverVari = 'procInstCreator';\r\n        this.activityReceiverVar += 'procInstCreator,';\r\n      }\r\n      if (array.indexOf('preActExecutors') > -1){\r\n        this.activityReceiverVar += 'preActExecutors,';\r\n      }\r\n      if(this.activityReceiverVar.length > 0){\r\n        this.activityReceiverVar = this.activityReceiverVar.substring(0,this.activityReceiverVar.length-1);\r\n      }\r\n      if (array.length > 0) {\r\n        array = array.filter(a => a !== 'procInstCreator');\r\n        this.bindingData.id = '';\r\n        for (const r of array) {\r\n          this.bindingData.id += r + ',';\r\n        }\r\n        if (this.bindingData.id) {\r\n          this.bindingData.id = this.bindingData.id.substring(0, this.bindingData.id.length - 1);\r\n        }\r\n      }\r\n    }\r\n    if (this.operation.receiverText && this.operation.receiverText.length > 0) {\r\n      let array = this.operation.receiverText.split(',');\r\n      if (array.length > 0) {\r\n        array = array.filter(a => a !== '流程发起人');\r\n        this.bindingData.name = '';\r\n        for (const r of array) {\r\n          this.bindingData.name += r + ',';\r\n        }\r\n        if (this.bindingData.name) {\r\n          this.bindingData.name = this.bindingData.name.substring(0, this.bindingData.name.length - 1);\r\n        }\r\n      }\r\n    }\r\n    if (this.hasSmsMessage(this.operation.sendType)) {\r\n      this.hasSmsTemplate = true;\r\n      if (!this.operation.smsMessageTemplate) {\r\n        this.operation.smsMessageTemplate = new SmsMessageTemplate();\r\n      }\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.operation;\r\n  }\r\n\r\n  // operation: ExpireOperation = new ExpireOperation();\r\n  operation: SendMessage = new SendMessage('activity',this.localePipe);\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<ExpireOperation>();\r\n\r\n  typeGroup = this.uistate.messageChannels.map(m => ({ value: m.code, name: m.name }));\r\n\r\n  receiverVariables = [\r\n    { value: 'procInstCreator', name: this.localePipe.transform(\"component.sendMessageOperation.procInstCreator\") }\r\n  ];\r\n  activityReceiverVariables = [\r\n    { value: 'workItemParticipant', name: this.localePipe.transform(\"component.sendMessageOperation.workItemParticipant\")  },\r\n    { value: 'procInstCreator', name: this.localePipe.transform(\"component.sendMessageOperation.procInstCreator\")  },\r\n    { value: 'preActExecutors', name: this.localePipe.transform(\"component.sendMessageOperation.preActExecutors\") }\r\n  ];\r\n\r\n  placeholder = '';\r\n  placeholder2 = '';\r\n\r\n  hasSmsTemplate = false;\r\n\r\n  parser = (val: string | number) => {\r\n    // console.log(val);\r\n    return Number(val);\r\n  }\r\n\r\n  timeUnitCollection = [\r\n    { value: 'day', text: this.localePipe.transform(\"component.sendMessageOperation.day\") },\r\n    { value: 'hour', text: this.localePipe.transform(\"component.sendMessageOperation.hour\") },\r\n    { value: 'minute', text: this.localePipe.transform(\"component.sendMessageOperation.minute\") }\r\n  ];\r\n\r\n  location: 'activity' | 'process' = 'activity';\r\n\r\n  receiverVari: string;\r\n\r\n  activityReceiverVar: string = '';\r\n\r\n  bindingData: { id?, name?} = {};\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n    private expr: ExpressionService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  contentExpr(data: any){\r\n    this.showContentHelp(data);\r\n  }\r\n\r\n  titleExpr(data: any){\r\n    this.showTitleHelp(data);\r\n  }\r\n\r\n  showContentHelp(data: string){\r\n    const context = this.showExpr();\r\n    if (this.operation.message && this.operation.message.length > 0) {\r\n      if(!this.operation.message.startsWith(\"{\\\"\" + \"expr\\\"\" + \":\\\"\")) {\r\n          this.expr.addExpressionText(\"\\'\" + this.operation.message + \"\\'\");\r\n      }else {\r\n        this.expr.addExpressionText(this.operation.message);\r\n      }\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.operation.message = expressionInfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  showTitleHelp(data: string) {\r\n    const context = this.showExpr();\r\n    if (this.operation.subject && this.operation.subject.length > 0) {\r\n      if(!this.operation.subject.startsWith(\"{\\\"\" + \"expr\\\"\" + \":\\\"\")) {\r\n        this.expr.addExpressionText(\"\\'\" + this.operation.subject + \"\\'\");\r\n      }else {\r\n        this.expr.addExpressionText(this.operation.subject);\r\n      }\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.operation.subject = expressionInfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.SmsTemplate) {\r\n      this.SmsTemplate.endGridEdit();\r\n    }\r\n    this.operation.cycleTime += '';\r\n    if (this.location === 'process') {\r\n      this.setReceiver();\r\n    }\r\n    if(this.location === 'activity') {\r\n      this.setActivityReceiver()\r\n    }\r\n    if (this.hasSmsTemplate) {\r\n      this.operation.smsMessageTemplate = this.SmsTemplate.smsMessageTemplate;\r\n      if (this.operation.smsMessageTemplate.smsMessageVariables && this.operation.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n        this.operation.smsMessageTemplate.smsMessageVariables = this.operation.smsMessageTemplate.smsMessageVariables.filter(variable => variable.code);\r\n      }\r\n    } else {\r\n      this.operation.smsMessageTemplate = null;\r\n    }\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.operation);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  clear() {\r\n    this.bindingData = {};\r\n  }\r\n\r\n  sendTypeChange(sendType: string) {\r\n    if (this.hasSmsMessage(sendType)) {\r\n      this.hasSmsTemplate = true;\r\n      if (!this.operation.smsMessageTemplate) {\r\n        this.operation.smsMessageTemplate = new SmsMessageTemplate();\r\n      }\r\n    } else {\r\n      this.hasSmsTemplate = false;\r\n      this.operation.smsMessageTemplate = null;\r\n    }\r\n  }\r\n\r\n  private setReceiver() {\r\n    let receiver = '';\r\n    let receiverText = '';\r\n    if (this.receiverVari) {\r\n      receiver += this.receiverVari + ',';\r\n      const array = this.receiverVari.split(',');\r\n      if (array.length > 0) {\r\n        for (const a of array) {\r\n          const t = this.receiverVariables.find(v => v.value === a).name;\r\n          receiverText += t + ',';\r\n        }\r\n      }\r\n    }\r\n    if (this.bindingData.id) {\r\n      receiver += this.bindingData.id + ',';\r\n      receiverText += this.bindingData.name + ',';\r\n    }\r\n    if (receiver) {\r\n      receiver = receiver.substring(0, receiver.length - 1);\r\n    }\r\n    if (receiverText) {\r\n      receiverText = receiverText.substring(0, receiverText.length - 1);\r\n    }\r\n    this.operation.receiver = receiver;\r\n    this.operation.receiverText = receiverText;\r\n  }\r\n\r\n  setActivityReceiver(){\r\n    let receiver = '';\r\n    if (this.activityReceiverVar) {\r\n      receiver += this.activityReceiverVar + ',';\r\n    }\r\n    if (receiver) {\r\n      receiver = receiver.substring(0, receiver.length - 1);\r\n    }\r\n    this.operation.receiver = receiver;\r\n  }\r\n  private validator(): boolean {\r\n    // 2023-5-22 如果没有启用循环预警则不进行校验\r\n    if (this.operation.cycleEnable) {\r\n      if (this.operation.cycleTime === 'undefined') {\r\n        this.message.info(this.localePipe.transform(\"component.sendMessageOperation.cycleTimeNotEmpty\"));\r\n        return false;\r\n      }\r\n    }\r\n    if (!this.operation.sendType) {\r\n      this.message.info(this.localePipe.transform(\"component.sendMessageOperation.sendMethodNotEmpty\"));\r\n      return false;\r\n    }\r\n    if (!this.operation.subject) {\r\n      this.message.info(this.localePipe.transform(\"component.sendMessageOperation.subjectNotEmpty\"));\r\n      return false;\r\n    }\r\n    if (!this.operation.message) {\r\n      this.message.info(this.localePipe.transform(\"component.sendMessageOperation.contentNotEmpty\"));\r\n      return false;\r\n    }\r\n    if (!this.operation.receiver) {\r\n      this.message.info(this.localePipe.transform(\"component.sendMessageOperation.recipientNotEmpty\"));\r\n      return false;\r\n    }\r\n    //去除消息模板编号校验\r\n    // if (this.hasSmsTemplate) {\r\n    //   if (!this.operation.smsMessageTemplate) {\r\n    //     this.message.info(this.localePipe.transform(\"component.sendMessageOperation.messageTemplate\"));\r\n    //     return false;\r\n    //   }\r\n    //   if (!this.operation.smsMessageTemplate.code) {\r\n    //     this.message.info(this.localePipe.transform(\"component.sendMessageOperation.smsTemplateNumberNotEmpty\"));\r\n    //     return false;\r\n    //   }\r\n    // }\r\n    return true;\r\n  }\r\n\r\n  private hasSmsMessage(sendType: string) {\r\n    if (sendType) {\r\n      const sendTypeList = sendType.split(',');\r\n      let messageChannel = sendTypeList.find(val => this.uistate.messageChannels.find(channel => channel.code == val && channel.channelType == 'Sms'));\r\n      if (messageChannel) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  showExpr(){\r\n    // this.expr.clearContext();\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.uistate.procInstContext.length > 0) {\r\n      for (const variable of this.uistate.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.uistate.processVariableContext.length > 0) {\r\n      for (const variable of this.uistate.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.uistate.subActivityContext.length > 0) {\r\n      for (const variable of this.uistate.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    return context;\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, Inject, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { AutoHandle, ExpireOperation } from \"../time-limit-control.entity\";\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-auto-handle-operation',\r\n  templateUrl: './auto-handle-operation.component.html',\r\n  styleUrls: ['./auto-handle-operation.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class AutoHandleOperationComponent implements OnInit {\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n  @Input()\r\n  set value(info: AutoHandle) {\r\n    this.operation = Object.assign({}, info);\r\n    if (this.operation.autoHandleType === undefined) {\r\n      const autoHandle = new AutoHandle(this.autoHandleType[0].value, this.localePipe);\r\n      this.operation.autoHandleType = autoHandle.autoHandleType;\r\n      this.operation.message = autoHandle.message;\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.operation;\r\n  }\r\n\r\n  placeholder = '';\r\n  operation: AutoHandle = new AutoHandle('Pass', this.localePipe);\r\n  @Output() submitEmitter = new EventEmitter<ExpireOperation>();\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n\r\n  autoHandleType = [\r\n    // { value: 'autoPass', text: '自动通过' },\r\n    // { value: 'autoBack', text: '自动驳回' }\r\n  ];\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    public uiState: ProcessDesignerUIState,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    for(const item of this.uiState.propertyData.ApprovalItems) {\r\n      this.autoHandleType.push({value: item.Value,text: item.Text});\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.operation);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.operation.message) {\r\n      this.message.info(this.localePipe.transform('component.sendMessageOperation.opinionsNotEmpty'));\r\n      return false;\r\n    }\r\n    if (!this.operation.autoHandleType) {\r\n      this.message.info(this.localePipe.transform('component.sendMessageOperation.processingNotEmpty'));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SendMessageOperationComponent } from './send-message-operation/send-message-operation.component';\r\nimport { AutoHandleOperationComponent } from \"./auto-handle-operation/auto-handle-operation.component\";\r\nimport {TimeLimitInfo, ExpireOperation, SendMessage, AutoHandle} from './time-limit-control.entity';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-time-limit-control',\r\n  templateUrl: './time-limit-control.component.html',\r\n  styleUrls: ['./time-limit-control.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class TimeLimitControlComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n\r\n  @Input() set value(v: TimeLimitInfo) {\r\n    if (v) {\r\n      this.timeLimitInfo = v;\r\n    } else {\r\n      this.timeLimitInfo = new TimeLimitInfo();\r\n    }\r\n    // 兼容历史数据中的操作类型\r\n    for (const operation of this.timeLimitInfo.expireOperations) {\r\n      if (operation.operationTypeName === undefined) {\r\n        operation.operationTypeName = 'SendMessageExpireOperation';\r\n      }\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('cell') cell: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.timeLimitControl.timedOutOperation\"),\r\n    width: 760,\r\n    height: 532,\r\n    showButtons: true\r\n  };\r\n\r\n  timeLimitInfo: TimeLimitInfo = new TimeLimitInfo();\r\n\r\n  tagCollection = [\r\n    { value: 'constant', text: this.localePipe.transform(\"component.timeLimitControl.constant\") },\r\n    { value: 'scope', text: this.localePipe.transform(\"component.timeLimitControl.scope\") }\r\n  ];\r\n\r\n  timeUnitCollection = [\r\n    { value: 'day', text: this.localePipe.transform(\"component.timeLimitControl.day\") },\r\n    { value: 'hour', text: this.localePipe.transform(\"component.timeLimitControl.hour\") },\r\n    { value: 'minute', text: this.localePipe.transform(\"component.timeLimitControl.minute\") }\r\n  ];\r\n\r\n  durationTypeCollection = [\r\n    { value: 'BeforeDuration', text: this.localePipe.transform(\"component.timeLimitControl.BeforeDuration\") },\r\n    { value: 'OnDuration', text: this.localePipe.transform(\"component.timeLimitControl.OnDuration\") },\r\n    { value: 'AfterDuration', text: this.localePipe.transform(\"component.timeLimitControl.AfterDuration\") }\r\n  ];\r\n\r\n  activityOperationTypeName = [\r\n    { value : 'SendMessageExpireOperation', text: this.localePipe.transform(\"component.timeLimitControl.SendMessageExpireOperation\")},\r\n    { value : 'AutoHandleExpireOperation', text : this.localePipe.transform(\"component.timeLimitControl.AutoHandleExpireOperation\") }\r\n  ];\r\n\r\n  processOperationTypeName = [\r\n    { value : 'SendMessageExpireOperation', text: this.localePipe.transform(\"component.timeLimitControl.SendMessageExpireOperation\")}\r\n  ];\r\n\r\n  operationTypeName = [];\r\n\r\n  timeScopeCollection = [\r\n    {value:'curDay',name:this.localePipe.transform(\"component.timeLimitControl.curDay\")}\r\n  ]\r\n  timeScopeValue = this.timeScopeCollection[0].value\r\n  cols = [];\r\n\r\n  location: 'activity' | 'process' = 'activity';\r\n\r\n  parser = (val: string | number) => {\r\n    return Number(val);\r\n  }\r\n\r\n  durationTypeChange = (data) => {\r\n    if (data && data.value && data.value.value === this.durationTypeCollection[1].value) {\r\n      const operation = this.timeLimitInfo.expireOperations.find(e => e.id === data.rowData.id);\r\n      operation.timeDuration = 0;\r\n  }\r\n}\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.location = this.editorParams.location;\r\n    if (this.location === 'activity') {\r\n      this.operationTypeName = this.activityOperationTypeName;\r\n    } else {\r\n      this.operationTypeName = this.processOperationTypeName;\r\n    }\r\n    this.cols = [\r\n      {\r\n        field: 'durationType', width: 80, title: this.localePipe.transform(\"component.timeLimitControl.durationType\"),\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.durationTypeCollection }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: {\r\n            valueField: 'value', textField: 'text', data: this.durationTypeCollection, idField: 'value', panelHeight: 'auto',\r\n            valueChange: this.durationTypeChange, showClear: false\r\n          }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'timeDuration', width: 60, title: this.localePipe.transform(\"component.timeLimitControl.timeDuration\"),\r\n        editor: {\r\n          type: EditorTypes.NUMBERBOX, options: { min: 0},\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'timeUnit', width: 60, title: this.localePipe.transform(\"component.timeLimitControl.timeUnit\"),\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.timeUnitCollection }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: { valueField: 'value', textField: 'text', data: this.timeUnitCollection, idField: 'value', panelHeight: 'auto' }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'operationTypeName', width: 100, title: this.localePipe.transform(\"component.timeLimitControl.operationTypeName\"),\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.operationTypeName }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: { valueField: 'value', textField: 'text', data: this.operationTypeName, idField: 'value', panelHeight: 'auto' }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'sendType', width: 80, title: this.localePipe.transform(\"component.timeLimitControl.sendType\"), template: this.cell,\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    this.timeLimitInfo.dueTime += '';\r\n    if (this.validator()) {\r\n      const object = { value: this.timeLimitInfo, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if ((this.timeLimitInfo.dueTime).indexOf('.') > -1) {\r\n      console.log(this.timeLimitInfo.dueTime);\r\n      this.message.info(this.localePipe.transform(\"component.timeLimitControl.onlyBeInteger\"));\r\n      return false;\r\n    }\r\n    if (this.timeLimitInfo.expireOperations\r\n      && this.timeLimitInfo.expireOperations.length > 0) {\r\n      for (const e of this.timeLimitInfo.expireOperations) {\r\n        if (e.operationTypeName === 'SendMessageExpireOperation') {\r\n          const a = <SendMessage>e;\r\n          if (!a.sendType) {\r\n            this.message.info(this.localePipe.transform(\"component.timeLimitControl.setOperation\"));\r\n            return false;\r\n          }\r\n        }\r\n        if (e.operationTypeName === 'AutoHandleExpireOperation') {\r\n          const a = <AutoHandle>e;\r\n          if (!a.autoHandleType) {\r\n            this.message.info(this.localePipe.transform(\"component.timeLimitControl.setType\"));\r\n            return false;\r\n          }\r\n          if (!a.message) {\r\n            this.message.info(this.localePipe.transform(\"component.timeLimitControl.setComments\"));\r\n            return false;\r\n          }\r\n        }\r\n        if (e.durationType === 'OnDuration' && e.timeDuration !== 0) {\r\n          e.timeDuration = 0;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  add() {\r\n    let operation = new ExpireOperation();\r\n    this.timeLimitInfo.expireOperations.push(operation);\r\n    this.grid.loadData(this.timeLimitInfo.expireOperations);\r\n    this.grid.selectRow(operation.id);\r\n  }\r\n\r\n  remove() {\r\n    this.grid.endCellEdit();\r\n    const curItem = this.grid.selectedRow;\r\n    if (!curItem) {\r\n      this.message.info(this.localePipe.transform(\"component.timeLimitControl.selectedOperation\"));\r\n      return;\r\n    }\r\n    const i = this.timeLimitInfo.expireOperations.findIndex(a => a.id === curItem.data.id);\r\n    if (i > -1) {\r\n      this.timeLimitInfo.expireOperations.splice(i, 1);\r\n      this.grid.loadData(this.timeLimitInfo.expireOperations);\r\n    }\r\n  }\r\n\r\n  editOperation(ctx: any){\r\n    this.grid.endCellEdit();\r\n    if (ctx.rowData.operationTypeName === 'SendMessageExpireOperation'){\r\n      this.sendMassageOperation(ctx);\r\n    }\r\n    if (ctx.rowData.operationTypeName === 'AutoHandleExpireOperation'){\r\n      this.message.confirm(this.localePipe.transform(\"component.timeLimitControl.notSupportAutomatic\")).subscribe(re => re === true ? this.autoHandleOperation(ctx) : null);\r\n    }\r\n  }\r\n  sendMassageOperation(ctx: any) {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(SendMessageOperationComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.location = this.location;\r\n    compRef.instance.value = Object.assign({}, ctx.rowData);\r\n    compRef.instance.submitEmitter.subscribe((re: ExpireOperation) => {\r\n      let operation = this.timeLimitInfo.expireOperations.find(o => o.id === re.id);\r\n      operation = Object.assign(operation, re);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe((re: any) => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"component.timeLimitControl.warningMessage\"),\r\n      width: 800,\r\n      height: 515,\r\n      buttons: compRef.instance.footer,\r\n      showButtons: true\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  autoHandleOperation(ctx: any) {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(AutoHandleOperationComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value = Object.assign({}, ctx.rowData);\r\n    compRef.instance.submitEmitter.subscribe((re: ExpireOperation) => {\r\n      let operation = this.timeLimitInfo.expireOperations.find(o => o.id === re.id);\r\n      operation = Object.assign(operation, re);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe((re: any) => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"component.timeLimitControl.automaticProcessing\"),\r\n      width: 500,\r\n      height: this.location === 'activity' ? 390 : 460,\r\n      buttons: compRef.instance.footer,\r\n      showButtons: true\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  tagSelectChange(data){\r\n    if(data.data.value === 'constant'){\r\n      this.timeLimitInfo.timeUnit = \"day\";\r\n    }else if(data.data.value === 'scope'){\r\n      this.timeLimitInfo.timeUnit = '';\r\n      this.timeLimitInfo.dueTime = this.timeScopeValue;\r\n    }\r\n  }\r\n  changeTimeScope(data){\r\n    this.timeScopeValue = data;\r\n    this.timeLimitInfo.dueTime = this.timeScopeValue;\r\n  }\r\n}\r\n\r\nexport class TimeLimitControlConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.enable) {\r\n      return this.localePipe.transform(\"component.timeLimitControl.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.timeLimitControl.notSet\");\r\n    }\r\n  }\r\n}\r\n\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { SmsMessageTemplate } from '../sms-message-template/sms-message-template';\r\nimport { MessageReceiver } from './message-receiver';\r\n\r\nexport class MessageNotice {\r\n\r\n    id: string;\r\n    /**\r\n     * 消息内容\r\n     */\r\n    content: string;\r\n\r\n    /**\r\n     * 消息发送时机\r\n     */\r\n    sendTime: string;\r\n\r\n    /**\r\n     * 消息发送方式\r\n     */\r\n    sendType: string;\r\n\r\n    /**\r\n     * 消息主题\r\n     */\r\n    subject: string;\r\n\r\n    /**\r\n     * 消息接收人\r\n     */\r\n    receiver: string;\r\n\r\n    /**\r\n     * 消息接收人显示\r\n     */\r\n    receiverText: string;\r\n\r\n    /**\r\n     * 接收人列表\r\n     */\r\n    receivers: Array<MessageReceiver> = new Array();\r\n\r\n    smsMessageTemplate: SmsMessageTemplate\r\n\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.subject = '消息通知';\r\n        // this.sendType = 'email';\r\n        this.content = `{\"expr\":\"\\'您有一条消息通知。\\'\",\"sexpr\":\"\"}`;\r\n    }\r\n}\r\n// 2023-8-21 由于需要实现国际化，此处定义不能提取；\r\n// export const processSendTime = [\r\n//     { value: 'PROCESSINSTANCE_COMPLETED', text: this.localePipe.transform('component.MessageNotice.procComplete') },\r\n//     { value: 'PROCESSINSTANCE_ABORTED', text: this.localePipe.transform('component.MessageNotice.procAborted') },\r\n//     { value: 'PROCESSINSTANCE_ROLLBACK', text: this.localePipe.transform('component.MessageNotice.procRollBack') }\r\n// ];\r\n\r\n// export const activitySendTime = [\r\n//     { value: 'WORKITEM_CREATED', text: this.localePipe.transform('component.MessageNotice.workCreated') },\r\n//     { value: 'ACTIVITY_COMPLETED', text: this.localePipe.transform('component.MessageNotice.actComplete') },\r\n//     { value: 'ACTIVITY_ABORTED', text: this.localePipe.transform('component.MessageNotice.actAborted') },\r\n// ];\r\n\r\n// export const sendTypes = [\r\n//     { value: 'email', name: this.localePipe.transform('component.MessageNotice.email') },\r\n//     { value: 'sms', name: this.localePipe.transform('component.MessageNotice.sms') },\r\n//     { value: 'cloudplus', name: this.localePipe.transform('component.MessageNotice.cloudplus') }\r\n// ];\r\n\r\n// export const ReceiverType = [\r\n//     { value: 'processParticipant', text: this.localePipe.transform('component.MessageNotice.processParticipant') },\r\n//     { value: 'variableParticipant', text: this.localePipe.transform('component.MessageNotice.variableParticipant') },\r\n//     { value: 'userParticipant', text:  this.localePipe.transform('component.MessageNotice.userParticipant') },\r\n//     { value: 'positionParticipant', text:  this.localePipe.transform('component.MessageNotice.positionParticipant') },\r\n// ];\r\n\r\n// export const ProcessParticipantType = [\r\n//     { value: 'procInstCreator', text: this.localePipe.transform('component.MessageNotice.procInstCreator') },\r\n//     { value: 'workItemParticipant', text: this.localePipe.transform('component.MessageNotice.workItemParticipant') },\r\n//     { value: 'activityExecutorParticipant', text: this.localePipe.transform('component.MessageNotice.activityExecutorParticipant') },\r\n// ];\r\n\r\n\r\n// export const VariableOrgTypes = [\r\n//     { name: this.localePipe.transform('component.MessageNotice.sys'), value: 'Sys' },\r\n//     { name: this.localePipe.transform('component.MessageNotice.administrative_organization'), value: 'Administrative_organization'} ]\r\n","\r\nexport class MessageReceiver {\r\n    type: string;\r\n    processParticipant: string;\r\n    activityDefName: string;\r\n    activityDefId: string;\r\n    variableParticipant: string;\r\n    variableName: string;\r\n    userIds: string;\r\n    userNames: string;\r\n    positionId: string;\r\n    positionName: string;\r\n    positionType: string;\r\n    orgId: string;\r\n    orgType: string;\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, Inject, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-activity-list',\r\n  templateUrl: './activity-list.component.html',\r\n  styleUrls: ['./activity-list.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ActivityListComponent implements OnInit {\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<any>();\r\n  @ViewChild('buttonRef') buttonRef: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  multiSelect = true;\r\n  showCheckbox = true;\r\n  data = new Array();\r\n  columns = [\r\n    { title: this.localePipe.transform('component.activityList.name'), field: 'Name', width: 60 },\r\n    { title: 'ID', field: 'Id', width: 90 }\r\n  ];\r\n\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = this.designerUIState.userActList;\r\n  }\r\n\r\n  clickOK() {\r\n    const result = this.grid.checkeds;\r\n    if (!result || result.length === 0) {\r\n      this.message.info(this.localePipe.transform('component.activityList.checkeds'));\r\n      return;\r\n    }\r\n    this.submitEmitter.emit(result);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n}\r\n","import { ProcessDeUtil } from '../../../domain/process-de-util';\r\n\r\nexport class PerformerEntity {\r\n    constructor(id?: string, name?: string, type?: string) {\r\n        this.id = '_' + ProcessDeUtil.GenerateElementId();\r\n        this.performerId = id;\r\n        this.performerName = name;\r\n        this.type = type;\r\n    }\r\n    id: string;\r\n    performerId: string;\r\n    performerName: string;\r\n    type: string;\r\n    orgId?: string;\r\n    orgName?: string;\r\n    orgType?: string;\r\n    condition?: string;\r\n    tag?: string;\r\n}\r\n","import { PerformerEntity } from './performer.entity';\r\n\r\nexport class PositionPerformerEntity extends PerformerEntity {\r\n    positionType: string;\r\n    isRequired?: boolean;\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PositionPerformerEntity } from '../../entities/position-performer.entity';\r\n\r\n@Pipe({ name: 'positionsName' })\r\nexport class PositionsNamePipe implements PipeTransform {\r\n    constructor() { }\r\n    transform(positions: PositionPerformerEntity[], defaultVal = ''): string {\r\n        let r = '';\r\n        console.log(positions);\r\n        positions.forEach(u => {\r\n            r += u.performerName + '，';\r\n        });\r\n        if (r) {\r\n            r = r.substring(0, r.length - 1);\r\n        }\r\n        console.log(r);\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostBinding,\r\n  ViewChild,\r\n  ElementRef,\r\n  NgZone,\r\n  AfterViewInit,\r\n  ComponentFactoryResolver, Injector, Output, EventEmitter, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID\r\n} from '@angular/core';\r\nimport { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { PositionPerformerEntity } from '../../entities/position-performer.entity';\r\nimport {GspPositionFilter, SysLookupDetailComponent, TreeFilter} from '@gsp-sys/sysmgr-lookup';\r\nimport {BsModalService} from '@farris/ui-modal';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\nimport { PositionsNamePipe } from './positions-name.pipe';\r\n\r\n@Component({\r\n  selector: 'app-position-performer',\r\n  templateUrl: './position-performer.component.html',\r\n  styleUrls: ['./position-performer.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class PositionPerformerComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<any>();\r\n  @ViewChild(SysFarrisLookupComponent) posiHelp: SysFarrisLookupComponent;\r\n  @ViewChild('buttonRef') buttonRef: TemplateRef<any>;\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n  isRequired = false;\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  positionTypes = [\r\n    { value: '0', text: this.localePipe.transform('component.positionPerformer.orgPosition') },\r\n    { value: '1', text: this.localePipe.transform('component.positionPerformer.generalPosition') }\r\n  ];\r\n  performerName = '';\r\n  style: any = { background: '#FFF' };\r\n\r\n  condition: string;\r\n\r\n  newFilter: GspPositionFilter = {};\r\n  treeFilter: TreeFilter = {};\r\n  curPosIdList: any[] = [];\r\n  editState = true;\r\n  showCondition = true;\r\n  positionType: string;\r\n  position: PositionPerformerEntity;\r\n  positions: PositionPerformerEntity[] = [];\r\n  constructor(\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private ngZone: NgZone,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n    private positionsNamePipe: PositionsNamePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.position = this.position || new PositionPerformerEntity();\r\n    this.performerName = this.performerName || (this.positions && this.positions.length ? this.positionsNamePipe.transform(this.positions) : this.position.performerName || '');\r\n    if (this.designerUIState.scene === 'inSuite') {\r\n      this.position.positionType = '1';\r\n      this.newFilter = { positionType: '1' };\r\n      this.style = { background: '#FFF', height: '150px' };\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.designerUIState.getOrgConfig().subscribe(re => {\r\n      if (re && re.currentValue === 'true') {\r\n        this.isRequired = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.submitEmitter.emit(this.position);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  clear() {\r\n    this.position.performerId = null;\r\n    this.position.performerName = null;\r\n    this.performerName = '';\r\n  }\r\n\r\n  positionTypeChange(data) {\r\n    if (data.value === '0') {\r\n      this.newFilter = { positionType: '0' };\r\n      this.positionType = '0';\r\n    } else {\r\n      this.newFilter = { positionType: '1' };\r\n      this.positionType = '1';\r\n    }\r\n    this.clear();\r\n    this.position.orgType = null;\r\n    this.position.orgId = null;\r\n  }\r\n\r\n  selectOrganition() {\r\n    // this.expr.clearContext();\r\n    if (this.position.positionType === '1') {\r\n      if (this.designerUIState.schemas.length > 0) {\r\n        for (const schema of this.designerUIState.schemas) {\r\n          this.expr.addSchema('Schema', schema);\r\n        }\r\n        if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n          const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n          this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n            entityType.name, InjectedType.EntityType);\r\n        }\r\n      }\r\n      const context = new Array();\r\n      if (this.designerUIState.subActivityContext.length > 0) {\r\n        for (const variable of this.designerUIState.subActivityContext) {\r\n          if (!context.some(c => c.key === variable.key)) {\r\n            context.push(variable);\r\n          }\r\n        }\r\n      }\r\n      if (context.length > 0) {\r\n        for (const v of context) {\r\n          this.expr.addContext(v);\r\n        }\r\n      }\r\n      this.expr.setEditPattern(ExprEditMode.Advanced);\r\n      this.expr.addExpressionText(this.position.orgId);\r\n      this.expr.buildExpression().then((expr: string) => {\r\n        this.position.orgId = expr;\r\n        //点击确定后，去除表达式里面的新增的上下文变量\r\n        if(context.length > 0) {\r\n          this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n        }\r\n      });\r\n    }\r\n  }\r\n  selectPosition() {\r\n    this.setPosition();\r\n  }\r\n  editCondition() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版\r\n    this.expr.addExpressionText(this.position.condition);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.position.condition = expressioninfo;\r\n      for (const p of this.positions) {\r\n        p.condition = expressioninfo;\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  orgTypeChange(re: any) {\r\n    this.position.orgType = re.data.value;\r\n  }\r\n  clearOrgType() {\r\n    this.position.orgType = null;\r\n  }\r\n  positionsSelected(data) {\r\n    this.positions = [];\r\n    if (data || data.data.length > 0) {\r\n      const positions = [];\r\n      for(const dataSelected of data.data) {\r\n        if (this.editState) {\r\n          this.position =new PositionPerformerEntity();\r\n          this.position.performerId = dataSelected.id;\r\n          this.position.performerName = dataSelected.name;\r\n          this.position.type = 'wf.PositionParticipantExpression';\r\n          if (!this.position.positionType) {\r\n            this.position.positionType = dataSelected.posType + '';\r\n            this.newFilter = {\r\n              positionType: dataSelected.posType\r\n            };\r\n          }\r\n          this.position.isRequired = this.isRequired;\r\n          this.position.condition = this.condition ? this.condition:\"\";\r\n          positions.push(this.position);\r\n        } else {\r\n          this.position.performerId = dataSelected.id;\r\n          this.position.performerName = dataSelected.name;\r\n          this.position.type = 'wf.PositionParticipantExpression';\r\n          if (!this.position.positionType) {\r\n            this.position.positionType = dataSelected.posType + '';\r\n            this.newFilter = {\r\n              positionType: dataSelected.posType\r\n            };\r\n          }\r\n          this.position.isRequired = this.isRequired;\r\n          this.position.condition = this.condition ? this.condition:\"\";\r\n          positions.push(this.position);\r\n        }\r\n      }\r\n      this.positions = [...positions];\r\n      this.performerName = this.positions&&this.positions.length?(this.positionsNamePipe.transform(this.positions)):(this.position.performerName?this.position.performerName:'')\r\n    }\r\n  }\r\n  setPosition() {\r\n    this.positions = [];\r\n    const compFactory = this.resolver.resolveComponentFactory(SysLookupDetailComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.initGridIdList = this.curPosIdList ;\r\n    compRef.instance.treeFilter = this.treeFilter;\r\n    compRef.instance.listFilter = this.newFilter;\r\n    compRef.instance.sourceType = 'position';\r\n    compRef.instance.multiSelect = false;\r\n    // 编辑状态下只能单选\r\n    if(this.positionType === \"0\" && this.editState) {      \r\n      compRef.instance.multiSelect = true;\r\n    }\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.positionPerformer.sysPositions'),\r\n      width: 1000,\r\n      height: 550,\r\n      showButtons: true,\r\n      buttons: compRef.instance.btnTemplateRef,\r\n      showMaxButton: true,\r\n      resizable: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    // 取消后\r\n    compRef.instance.afterCancle.subscribe(res => {\r\n      // 消失模态框\r\n      dialog.close();\r\n    });\r\n    // 确认后\r\n    compRef.instance.afterConfirm.subscribe(res => {\r\n      this.positionsSelected(res);\r\n    });\r\n  }\r\n\r\n  getPerformers() {\r\n    if(!this.editState) {\r\n      this.positions.push(this.position)\r\n    }\r\n    return this.positions;\r\n  }\r\n\r\n}\r\n","import { filter } from 'rxjs/operators';\r\nimport { Component, OnInit, Input, ViewChild, TemplateRef, Output, EventEmitter, ComponentFactoryResolver, Injector, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { MessageNotice } from '../message-notice';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity} from '@gsp-svc/expression';\r\nimport { MessageReceiver } from '../message-receiver';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ActivityListComponent } from '../../activity-list/activity-list.component';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';\r\nimport { PositionPerformerComponent } from '../../performer/views/position-performer/position-performer.component';\r\nimport { SmsMessageTemplateComponent } from '../../sms-message-template/sms-message-template.component';\r\nimport { SmsMessageTemplate } from '../../sms-message-template/sms-message-template';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'lib-message-notice-edit',\r\n  templateUrl: './message-notice-edit.component.html',\r\n  styleUrls: ['./message-notice-edit.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class MessageNoticeEditComponent implements OnInit {\r\n\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  exprAble = false;\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n  @ViewChild(SmsMessageTemplateComponent) SmsTemplate:SmsMessageTemplateComponent\r\n\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<MessageNotice>();\r\n  @ViewChild(SysFarrisLookupComponent) userHelp: SysFarrisLookupComponent;\r\n\r\n  private _location: 'activity' | 'process' | 'messageActivity' = 'activity';\r\n  @Input()\r\n  set location(l: 'activity' | 'process' | 'messageActivity') {\r\n    this._location = l;\r\n    if (this.location !== 'activity') {\r\n      this.processParticipantTypes = [\r\n        { value: 'procInstCreator', text: this.localePipe.transform('component.messageNoticeEdit.procInstCreator') },\r\n        { value: 'activityExecutorParticipant', text:  this.localePipe.transform('component.messageNoticeEdit.activityExecutorParticipant') }];\r\n    }\r\n  }\r\n\r\n  get location() {\r\n    return this._location;\r\n  }\r\n\r\n  messageNotice = new MessageNotice();\r\n  @Input()\r\n  set value(m: MessageNotice) {\r\n    // 深拷贝处理messageNotice 2022-12-1\r\n    const jsonMessageNotice = JSON.stringify(Object.assign({}, m));\r\n    this.messageNotice = JSON.parse(jsonMessageNotice);\r\n    this.exprAble = this.messageNotice.subject.charAt(0) === '{';\r\n    if (this.hasSmsMessage(this.messageNotice.sendType)) {\r\n      this.hasSmsTemplate = true;\r\n      if (!this.messageNotice.smsMessageTemplate) {\r\n        this.messageNotice.smsMessageTemplate = new SmsMessageTemplate();\r\n      }\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this.messageNotice;\r\n  }\r\n  typeGroup = this.uistate.messageChannels.map(m => ({ value: m.code, name: m.name }));\r\n\r\n  receiverVariables = [\r\n    { value: 'workItemParticipant', name: this.localePipe.transform('component.messageNoticeEdit.workItemParticipant') }\r\n  ];\r\n\r\n  variableOrgTypes = [\r\n    { name: this.localePipe.transform('component.messageNoticeEdit.sys'), value: 'Sys' },\r\n    { name: this.localePipe.transform('component.messageNoticeEdit.administrative_organization'), value: 'Administrative_organization' }\r\n  ];\r\n  sendTimes = [];\r\n  receiverVari: string;\r\n  bindingData: { id?, name?} = {};\r\n  index;\r\n  receiverTypes = [\r\n    { value: 'processParticipant', text: this.localePipe.transform('component.MessageNotice.processParticipant') },\r\n    { value: 'variableParticipant', text: this.localePipe.transform('component.MessageNotice.variableParticipant') },\r\n    { value: 'userParticipant', text: this.localePipe.transform('component.MessageNotice.userParticipant') },\r\n    { value: 'positionParticipant', text: this.localePipe.transform('component.MessageNotice.positionParticipant') },\r\n  ];\r\n  processParticipantTypes = [\r\n    { value: 'procInstCreator', text: this.localePipe.transform('component.MessageNotice.procInstCreator') },\r\n    { value: 'workItemParticipant', text: this.localePipe.transform('component.MessageNotice.workItemParticipant') },\r\n    { value: 'activityExecutorParticipant', text: this.localePipe.transform('component.MessageNotice.activityExecutorParticipant') },\r\n  ];\r\n  userTypeButtonNeedShow = false; // 用户类型单选按钮是否需要显示\r\n  hasAdminOrg;\r\n  hasSmsTemplate = false;\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.location === 'activity') {\r\n      this.sendTimes = this.activitySendTime;\r\n      if (this.messageNotice.sendTime === this.activitySendTime[0].value) {\r\n        this.receiverTypes = [\r\n          { value: 'processParticipant', text: this.localePipe.transform('component.messageNoticeEdit.processParticipant') }\r\n        ];\r\n        this.processParticipantTypes = [\r\n          { value: 'workItemParticipant', text: this.localePipe.transform('component.messageNoticeEdit.workItemReceiveParticipant') }\r\n        ];\r\n      } else {\r\n        this.receiverTypes = [\r\n          { value: 'processParticipant', text: this.localePipe.transform('component.messageNoticeEdit.processParticipant') },\r\n          { value: 'variableParticipant', text: this.localePipe.transform('component.messageNoticeEdit.variableParticipant') },\r\n          { value: 'userParticipant', text: this.localePipe.transform('component.messageNoticeEdit.userParticipant') },\r\n          { value: 'positionParticipant', text: this.localePipe.transform('component.messageNoticeEdit.positionParticipant') },\r\n        ];\r\n        this.processParticipantTypes = [\r\n          { value: 'procInstCreator', text: this.localePipe.transform('component.messageNoticeEdit.procInstCreator') },\r\n          { value: 'activityExecutorParticipant', text: this.localePipe.transform('component.messageNoticeEdit.activityExecutorParticipant') }\r\n        ];\r\n      }\r\n    } else {\r\n      this.sendTimes = this.processSendTime;\r\n    }\r\n\r\n    const url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';\r\n    this.http.get(url).subscribe((data: any) => {\r\n      this.hasAdminOrg = data;\r\n      // inSuite场景，变量参与者场景下显示用户类型\r\n      if (this.designerUIState.scene === 'inSuite') {\r\n        this.userTypeButtonNeedShow = true;\r\n      } else {\r\n        this.userTypeButtonNeedShow = data;\r\n      }\r\n      if (!this.userTypeButtonNeedShow) {\r\n        this.variableOrgTypes = [{ name: this.localePipe.transform('component.messageNoticeEdit.sys'), value: 'Sys' }];\r\n      }\r\n    });\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.SmsTemplate) {\r\n      this.SmsTemplate.endGridEdit();\r\n    }\r\n    this.setReceiver();\r\n    if (this.hasSmsTemplate) {\r\n      this.messageNotice.smsMessageTemplate = this.SmsTemplate.smsMessageTemplate;\r\n      if (this.messageNotice.smsMessageTemplate.smsMessageVariables && this.messageNotice.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n        this.messageNotice.smsMessageTemplate.smsMessageVariables = this.messageNotice.smsMessageTemplate.smsMessageVariables.filter(variable => variable.code);\r\n      }\r\n    } else {\r\n      this.messageNotice.smsMessageTemplate = null;\r\n    }\r\n    if (this.validator()) {\r\n      this.submitEmitter.emit(this.messageNotice);\r\n    }\r\n  }\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n\r\n  sendTimeChange(data: any) {\r\n    if (data.data.value === this.activitySendTime[0].value) {\r\n      const messageReceiver = new MessageReceiver();\r\n      messageReceiver.type = 'processParticipant';\r\n      messageReceiver.processParticipant = 'workItemParticipant';\r\n      this.messageNotice.receivers = [messageReceiver];\r\n      this.receiverTypes = [\r\n        { value: 'processParticipant', text: this.localePipe.transform('component.messageNoticeEdit.processParticipant') }\r\n      ];\r\n      this.processParticipantTypes = [\r\n        { value: 'workItemParticipant', text: this.localePipe.transform('component.messageNoticeEdit.workItemParticipant') }\r\n      ];\r\n    } else {\r\n      for (const r of this.messageNotice.receivers) {\r\n        if (r.type === 'processParticipant' && r.processParticipant === 'workItemParticipant') {\r\n          r.processParticipant = 'procInstCreator';\r\n        }\r\n      }\r\n      this.receiverTypes = [\r\n        { value: 'processParticipant', text: this.localePipe.transform('component.messageNoticeEdit.processParticipant') },\r\n        { value: 'variableParticipant', text: this.localePipe.transform('component.messageNoticeEdit.variableParticipant') },\r\n        { value: 'userParticipant', text: this.localePipe.transform('component.messageNoticeEdit.userParticipant') },\r\n        { value: 'positionParticipant', text: this.localePipe.transform('component.messageNoticeEdit.positionParticipant') },\r\n      ];\r\n      this.processParticipantTypes = [\r\n        { value: 'procInstCreator', text: this.localePipe.transform('component.messageNoticeEdit.procInstCreator') },\r\n        { value: 'activityExecutorParticipant', text: this.localePipe.transform('component.messageNoticeEdit.activityExecutorParticipant') }\r\n      ];\r\n    }\r\n  }\r\n\r\n  sendTypeChange(sendType: string) {\r\n    if (this.hasSmsMessage(sendType)) {\r\n      this.hasSmsTemplate = true;\r\n      if (!this.messageNotice.smsMessageTemplate) {\r\n        this.messageNotice.smsMessageTemplate = new SmsMessageTemplate();\r\n      }\r\n    } else {\r\n      this.hasSmsTemplate = false;\r\n      this.messageNotice.smsMessageTemplate = null;\r\n    }\r\n  }\r\n  private hasSmsMessage(sendType: string) {\r\n    if (sendType) {\r\n      const sendTypeList = sendType.split(',');\r\n      let messageChannel = sendTypeList.find(val => this.uistate.messageChannels.find(channel => channel.code == val && channel.channelType == 'Sms'));\r\n      if (messageChannel) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  usersSelect(data: any[]) {\r\n    this.messageNotice.receivers[this.index].userIds = '';\r\n    this.messageNotice.receivers[this.index].userNames = '';\r\n    if (data && data.length > 0) {\r\n      let userIds = '';\r\n      for (const d of data) {\r\n        userIds += d.id + ',';\r\n      }\r\n      if (userIds) {\r\n        this.messageNotice.receivers[this.index].userIds = userIds.substring(0, userIds.length - 1);\r\n      }\r\n      let userNames = '';\r\n      for (const d of data) {\r\n        userNames += d.name + ',';\r\n      }\r\n      if (userNames) {\r\n        this.messageNotice.receivers[this.index].userNames = userNames.substring(0, userNames.length - 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  clearUsers(index: any) {\r\n    this.messageNotice.receivers[index].userIds = '';\r\n    this.messageNotice.receivers[index].userNames = '';\r\n  }\r\n\r\n  clearPosition(index: any) {\r\n    this.messageNotice.receivers[index].positionId = '';\r\n    this.messageNotice.receivers[index].positionName = '';\r\n    this.messageNotice.receivers[index].positionType = '';\r\n    this.messageNotice.receivers[index].orgId = '';\r\n    this.messageNotice.receivers[index].orgType = '';\r\n  }\r\n\r\n  clearActivityExecutor(index: any) {\r\n    this.messageNotice.receivers[index].activityDefId = '';\r\n    this.messageNotice.receivers[index].activityDefName = '';\r\n  }\r\n\r\n  clearVariableParticipant(index: any) {\r\n    this.messageNotice.receivers[index].variableParticipant = '';\r\n    this.messageNotice.receivers[index].variableName = '';\r\n  }\r\n\r\n  changeValue(data) {\r\n  }\r\n  clear() {\r\n    this.bindingData = {};\r\n  }\r\n  private setReceiver() {\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.messageNotice.sendType) {\r\n      this.message.info(this.localePipe.transform('component.messageNoticeEdit.sendType'));\r\n      return false;\r\n    }\r\n    //去除消息模板编号校验\r\n    // if (this.hasSmsTemplate) {\r\n    //   if (!this.messageNotice.smsMessageTemplate) {\r\n    //     this.message.info(this.localePipe.transform('component.messageNoticeEdit.smsMessageTemplate'));\r\n    //     return;\r\n    //   }\r\n    //   if (!this.messageNotice.smsMessageTemplate.code) {\r\n    //     this.message.info(this.localePipe.transform('component.messageNoticeEdit.smsMessageTemplateCode'));\r\n    //     return;\r\n    //   }\r\n    // }\r\n    if (this.location !== 'messageActivity' && !this.messageNotice.sendTime) {\r\n      this.message.info(this.localePipe.transform('component.messageNoticeEdit.sendTime'));\r\n      return false;\r\n    }\r\n    if (!this.messageNotice.subject) {\r\n      this.message.info(this.localePipe.transform('component.messageNoticeEdit.subject'));\r\n      return false;\r\n    }\r\n    if (!this.messageNotice.content) {\r\n      this.message.info(this.localePipe.transform('component.messageNoticeEdit.content'));\r\n      return false;\r\n    }\r\n    this.messageNotice.receivers = this.messageNotice.receivers.filter(r => r.type);\r\n    if (!this.messageNotice.receivers || this.messageNotice.receivers.length === 0) {\r\n      this.message.info(this.localePipe.transform('component.messageNoticeEdit.receivers'));\r\n      return false;\r\n    } else {\r\n      for (const r of this.messageNotice.receivers) {\r\n        switch (r.type) {\r\n          case 'processParticipant':\r\n            if (!r.processParticipant) {\r\n              this.message.info(this.localePipe.transform('component.messageNoticeEdit.processParticipantNotNull'));\r\n              return false;\r\n            } else if (r.processParticipant === 'activityExecutorParticipant' && !r.activityDefId) {\r\n              this.message.info(this.localePipe.transform('component.messageNoticeEdit.activityDefIdNotNull'));\r\n              return false;\r\n            }\r\n            break;\r\n          case 'variableParticipant':\r\n            if (!r.variableParticipant) {\r\n              this.message.info(this.localePipe.transform('component.messageNoticeEdit.variableParticipantNotNull'));\r\n              return false;\r\n            }\r\n            if (!r.orgType) {\r\n              this.message.info(this.localePipe.transform('component.messageNoticeEdit.orgType'));\r\n              return false;\r\n            }\r\n            break;\r\n          case 'userParticipant':\r\n            if (!r.userIds) {\r\n              this.message.info(this.localePipe.transform('component.messageNoticeEdit.userIds'));\r\n              return false;\r\n            }\r\n            break;\r\n          case 'positionParticipant':\r\n            if (!r.positionId) {\r\n              this.message.info(this.localePipe.transform('component.messageNoticeEdit.positionId'));\r\n              return false;\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  disableAdd = () => {\r\n    if (this.messageNotice.sendTime === 'WORKITEM_CREATED' && this.messageNotice.receivers.filter(r => r.type).length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  addReceiver() {\r\n    if (this.disableAdd()) {\r\n      return;\r\n    }\r\n    const receivers = this.messageNotice.receivers.filter(r => r.type);\r\n    if (receivers && receivers.length > 0) {\r\n      const userParticipant = new MessageReceiver();\r\n      userParticipant.type = 'userParticipant';\r\n      this.messageNotice.receivers = this.messageNotice.receivers.concat([userParticipant]);\r\n    } else {\r\n      if (this.location !== 'activity') {\r\n        const procInstCreator = new MessageReceiver();\r\n        procInstCreator.type = 'processParticipant';\r\n        procInstCreator.processParticipant = 'procInstCreator';\r\n        this.messageNotice.receivers = this.messageNotice.receivers.concat([procInstCreator]);\r\n      } else {\r\n        const workItemParticipant = new MessageReceiver();\r\n        workItemParticipant.type = 'processParticipant';\r\n        workItemParticipant.processParticipant = 'workItemParticipant';\r\n        this.messageNotice.receivers = this.messageNotice.receivers.concat([workItemParticipant]);\r\n      }\r\n    }\r\n  }\r\n  selectActivityExecutorParticipant(activityDefId: string, index: any) {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ActivityListComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.submitEmitter.subscribe((re: any[]) => {\r\n      const acticity = re.shift();\r\n      this.messageNotice.receivers[index].activityDefId = acticity.id;\r\n      this.messageNotice.receivers[index].activityDefName = acticity.data.Name;\r\n      if (re && re.length > 0) {\r\n        for (const a of re) {\r\n          const receiver = new MessageReceiver();\r\n          receiver.type = 'processParticipant';\r\n          receiver.processParticipant = 'activityExecutorParticipant';\r\n          receiver.activityDefId = a.id;\r\n          receiver.activityDefName = a.data.Name;\r\n          this.messageNotice.receivers = this.messageNotice.receivers.concat([receiver]);\r\n        }\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(r => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.messageNoticeEdit.activityList'),\r\n      width: 490,\r\n      height: 490,\r\n      showButtons: true,\r\n      buttons: compRef.instance.buttonRef\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n  selectVariableParticipant(variableParticipant: string, index: any) {\r\n    const context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    this.expr.setEditPattern(ExprEditMode.Advanced);\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (variableParticipant) {\r\n      this.expr.addExpressionText(variableParticipant);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.messageNotice.receivers[index].variableParticipant = expressioninfo;\r\n      this.messageNotice.receivers[index].variableName = this.variableParticipantName(expressioninfo);\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  selectUserParticipant(receiver: MessageReceiver, index: any) {\r\n    this.index = index;\r\n    this.bindingData = {};\r\n    if (receiver.userIds && receiver.userIds.length > 0) {\r\n      this.bindingData.id = receiver.userIds;\r\n      this.bindingData.name = receiver.userNames;\r\n    }\r\n    setTimeout(() => {\r\n      this.userHelp.showHelp();\r\n    }, 0);\r\n  }\r\n\r\n  selectPositionParticipant(receiver: MessageReceiver, index: any) {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(PositionPerformerComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.showCondition = false;\r\n    compRef.instance.position.performerId = this.messageNotice.receivers[index].positionId;\r\n    compRef.instance.position.performerName = this.messageNotice.receivers[index].positionName;\r\n    compRef.instance.position.positionType = this.messageNotice.receivers[index].positionType;\r\n    compRef.instance.position.orgId = this.messageNotice.receivers[index].orgId;\r\n    compRef.instance.position.orgType = this.messageNotice.receivers[index].orgType;\r\n    if (compRef.instance.position.positionType === '0') {\r\n      compRef.instance.newFilter = { positionType: '0' };\r\n    } else {\r\n      compRef.instance.newFilter = { positionType: '1' };\r\n    }\r\n    compRef.instance.submitEmitter.subscribe((re: any) => {\r\n      if (re.performerId) {\r\n        this.messageNotice.receivers[index].positionId = re.performerId;\r\n        this.messageNotice.receivers[index].positionName = re.performerName;\r\n        this.messageNotice.receivers[index].positionType = re.positionType;\r\n        this.messageNotice.receivers[index].orgId = re.orgId;\r\n        this.messageNotice.receivers[index].orgType = re.orgType;\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(r => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.messageNoticeEdit.position'),\r\n      width: 700,\r\n      height: 400,\r\n      showButtons: true,\r\n      buttons: compRef.instance.buttonRef\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  titleExpr(data: any){\r\n    this.showTitleHelp(data);\r\n  }\r\n  contentExpr(data: any){\r\n    this.showContentHelp(data);\r\n  }\r\n\r\n  showContentHelp(data: string){\r\n    const context = this.showExpr();\r\n    if (this.messageNotice.content && this.messageNotice.content.length > 0) {\r\n      this.expr.addExpressionText(this.messageNotice.content);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.messageNotice.content = expressionInfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  showTitleHelp(data: string) {\r\n    if(this.messageNotice.subject && this.messageNotice.subject.charAt(0) !== '{'){\r\n      this.messageNotice.subject = '';\r\n    }\r\n    const context = this.showExpr();\r\n    if (this.messageNotice.subject && this.messageNotice.subject.length > 0) {\r\n      this.expr.addExpressionText(this.messageNotice.subject);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.messageNotice.subject = expressionInfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  showExpr(){\r\n    const context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    if (this.uistate.procInstContext.length > 0) {\r\n      for (const variable of this.uistate.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.uistate.subActivityContext.length > 0) {\r\n      for (const variable of this.uistate.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.uistate.processVariableContext.length > 0) {\r\n      for (const variable of this.uistate.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n\r\n    return context;\r\n  }\r\n  tranExpr(){\r\n    this.messageNotice.subject = '';\r\n  }\r\n\r\n  private variableParticipantName(expr: string): string {\r\n    for (const c of this.designerUIState.participantContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    for (const c of this.designerUIState.processVariableContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    return JSON.parse(expr).expr;\r\n  }\r\n  // 由于需要实现国际化，此处定义不能提取；\r\n  processSendTime = [\r\n    { value: 'PROCESSINSTANCE_COMPLETED', text: this.localePipe.transform('component.MessageNotice.procComplete') },\r\n    { value: 'PROCESSINSTANCE_ABORTED', text: this.localePipe.transform('component.MessageNotice.procAborted') },\r\n    { value: 'PROCESSINSTANCE_ROLLBACK', text: this.localePipe.transform('component.MessageNotice.procRollBack') }\r\n  ];\r\n  ReceiverType = [\r\n    { value: 'processParticipant', text: this.localePipe.transform('component.MessageNotice.processParticipant') },\r\n    { value: 'variableParticipant', text: this.localePipe.transform('component.MessageNotice.variableParticipant') },\r\n    { value: 'userParticipant', text: this.localePipe.transform('component.MessageNotice.userParticipant') },\r\n    { value: 'positionParticipant', text: this.localePipe.transform('component.MessageNotice.positionParticipant') },\r\n  ];\r\n  activitySendTime = [\r\n    { value: 'WORKITEM_CREATED', text: this.localePipe.transform('component.MessageNotice.workCreated') },\r\n    { value: 'ACTIVITY_COMPLETED', text: this.localePipe.transform('component.MessageNotice.actComplete') },\r\n    { value: 'ACTIVITY_ABORTED', text: this.localePipe.transform('component.MessageNotice.actAborted') },\r\n  ];\r\n}\r\n","import { MessageNotice } from './message-notice';\r\n\r\nexport class MessageNoticeBatchSet {\r\n\r\n  // 消息通知属性\r\n  messageNotice: MessageNotice[];\r\n  // sendMessage时做判断\r\n  isBatchCopy: boolean;\r\n  // 目标节点ID\r\n  targetNodeID: string[];\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, EventEmitter, Output, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { LookupGridComponent, PickedResult } from '@farris/ui-lookup';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { MessageNoticeBatchSet } from '../message-notice-batchSet';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'lib-message-notice-copy',\r\n  templateUrl: './message-notice-copy.component.html',\r\n  styleUrls: ['./message-notice-copy.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class MessageNoticeCopyComponent implements OnInit {\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @Output() closeEmitter = new EventEmitter<any>();\r\n  @Output() submitEmitter = new EventEmitter<any>();\r\n  // 活动节点表信息============================================\r\n  @ViewChild('allActisTable') allActisTable: DatagridComponent;\r\n  @ViewChild('allActisDialog') allActisDialog: DialogComponent;\r\n  @ViewChild('actTable') actTable: DatagridComponent;\r\n  @ViewChild('lookup') lookup: LookupGridComponent;\r\n  cols = [\r\n    { title: this.localePipe.transform('component.MessageNotice.name'), field: 'Name', width: 60, searchField: 'Name' },\r\n    { title: 'ID', field: 'Id', width: 90, searchField: 'Id' }];\r\n  // ==========================================================\r\n  actis = [];\r\n  fullActis = [];\r\n  pageInfo = {\r\n    pageIndex: 1,\r\n    pageList: [10, 20, 30, 50],\r\n    pageSize: 20\r\n  };\r\n  total: number;\r\n  messageNotice = [];\r\n  messageNoticeValue = [];\r\n  targetNodeID = [];\r\n  activitySendTime = [\r\n    { value: 'WORKITEM_CREATED', text: this.localePipe.transform('component.MessageNotice.workCreated') },\r\n    { value: 'ACTIVITY_COMPLETED', text: this.localePipe.transform('component.MessageNotice.actComplete') },\r\n    { value: 'ACTIVITY_ABORTED', text: this.localePipe.transform('component.MessageNotice.actAborted') },\r\n];\r\n  columns = [\r\n    {\r\n      field: 'subject', width: 100, title: this.localePipe.transform('component.MessageNotice.subject'),\r\n    }, {\r\n      field: 'content', width: 150, title: this.localePipe.transform('component.MessageNotice.content'), showTips: true,\r\n    }, {\r\n      field: 'sendTime', width: 100, title: this.localePipe.transform('component.MessageNotice.sendTime'),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.activitySendTime }\r\n      },\r\n    }, {\r\n      field: 'sendType', width: 100, title: this.localePipe.transform('component.MessageNotice.sendType'),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'name', data: this.uistate.messageChannels.map(m => ({ value: m.code, name: m.name })) }\r\n      },\r\n    }, {\r\n      field: 'receiverText', width: 120, title: this.localePipe.transform('component.MessageNotice.receiverText'), showTips: true\r\n    }];\r\n\r\n  constructor(\r\n    public uistate: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  endEdit(e: any) {\r\n    console.log(e);\r\n  }\r\n\r\n  actisSelect = (rowData): Observable<PickedResult> => {\r\n    for (const r of rowData) {\r\n      this.targetNodeID.push(r.Id);\r\n    }\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  paramAfterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    console.log(rowData);\r\n    console.log(rowIndex);\r\n    return of(true);\r\n  }\r\n\r\n  get messageNotices() {\r\n    return this.messageNotice;\r\n  }\r\n\r\n  set messageNotices(m) {\r\n    this.messageNotice = m;\r\n  }\r\n\r\n  clickOK() {\r\n    if (!this.targetNodeID && this.targetNodeID.length === 0) {\r\n      this.message.info(this.localePipe.transform('component.MessageNotice.noTargetNode'));\r\n      return;\r\n    }\r\n    if (!this.messageNotice && this.messageNotice.length === 0) {\r\n      this.message.info(this.localePipe.transform('component.MessageNotice.noMessageNotifyAttribute'));\r\n      return;\r\n    }\r\n    const batchSetValue = new MessageNoticeBatchSet();\r\n    batchSetValue.messageNotice = this.messageNotice;\r\n    batchSetValue.targetNodeID = this.targetNodeID;\r\n    batchSetValue.isBatchCopy = true;\r\n    const object = { value: batchSetValue, parameters: null };\r\n    this.submitEmitter.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeEmitter.emit();\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, ElementRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { MessageNotice } from './message-notice';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { MessageNoticeEditComponent } from './message-notice-edit/message-notice-edit.component';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { MessageNoticeCopyComponent } from './message-notice-copy/message-notice-copy.component';\r\nimport { ProcessDesignerViewModel } from '../../app/process-designer.viewmodel';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { MessageReceiver } from './message-receiver';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-message-notice',\r\n  templateUrl: './message-notice.component.html',\r\n  styleUrls: ['./message-notice.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class MessageNoticeComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(notices: any[]) {\r\n    if (notices && notices.length > 0) {\r\n      this.messageNotices = notices.map(n => ({\r\n        id: ProcessDeUtil.GenerateElementId(),\r\n        content: n.content,\r\n        sendTime: n.sendTime,\r\n        sendType: n.sendType,\r\n        subject: n.subject,\r\n        receiver: n.receiver,\r\n        receiverText: n.receiverText,\r\n        receivers: n.receivers ? n.receivers : new Array(),\r\n        smsMessageTemplate: n.smsMessageTemplate\r\n      }));\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.MessageNotice.notify'),\r\n    width: 760,\r\n    height: 480,\r\n    showButtons: true\r\n  };\r\n\r\n  messageNotices: Array<MessageNotice> = new Array();\r\n  columns = [];\r\n\r\n  location: 'activity' | 'process' | 'messageActivity' = 'activity';\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState,\r\n    private viewModel: ProcessDesignerViewModel,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.GetOrganizationType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.location = this.editorParams.location;\r\n    this.columns = [\r\n      {\r\n        field: 'subject', width: 100, title: this.localePipe.transform('component.MessageNotice.subject'),\r\n      }, {\r\n        field: 'content', width: 150, title: this.localePipe.transform('component.MessageNotice.content'), showTips: true,\r\n      }, {\r\n        field: 'sendTime', width: 100, title: this.localePipe.transform('component.MessageNotice.sendTime'),\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.location === 'process' ? this.processSendTime : this.activitySendTime }\r\n        },\r\n      }, {\r\n        field: 'sendType', width: 100, title: this.localePipe.transform('component.MessageNotice.sendType'),\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'name', data: this.uistate.messageChannels.map(m => ({ value: m.code, name: m.name })) }\r\n        },\r\n      }, {\r\n        field: 'receiverText', width: 120, title: this.localePipe.transform('component.MessageNotice.receiverText'), showTips: true, formatter: (v, d, i) => {\r\n          let receiverText = '';\r\n          if (d.receivers && d.receivers.length > 0) {\r\n            for (const receiver of d.receivers) {\r\n              if (receiver.type === 'processParticipant') {\r\n                if (receiver.processParticipant === 'procInstCreator') {\r\n                  receiverText += this.localePipe.transform('component.MessageNotice.procInstCreator');\r\n                } else if (receiver.processParticipant === 'workItemParticipant') {\r\n                  receiverText += this.localePipe.transform('component.MessageNotice.workItemParticipant');\r\n                } else if (receiver.processParticipant === 'activityExecutorParticipant') {\r\n                  receiverText += (receiver.activityDefName + '，');\r\n                }\r\n              } else if (receiver.type === 'userParticipant') {\r\n                receiverText += (receiver.userNames + '，');\r\n              } else if (receiver.type === 'variableParticipant') {\r\n                receiverText += (receiver.variableName + '，');\r\n              } else if (receiver.type === 'positionParticipant') {\r\n                receiverText += (receiver.positionName + '，');\r\n              }\r\n            }\r\n          }\r\n          if (receiverText) {\r\n            receiverText = receiverText.substring(0, receiverText.length - 1);\r\n          }\r\n          return receiverText;\r\n        },\r\n      }];\r\n    if (this.location === 'messageActivity') {\r\n      this.columns = this.columns.filter(c => c.field !== 'sendTime');\r\n    }\r\n  }\r\n\r\n  add() {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(MessageNoticeEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.location = this.location;\r\n    const messageNotice = new MessageNotice();\r\n    if (this.location === 'activity') {\r\n      messageNotice.sendTime = 'WORKITEM_CREATED';\r\n      const messageReceiver = new MessageReceiver();\r\n      messageReceiver.type = 'processParticipant';\r\n      messageReceiver.processParticipant = 'workItemParticipant';\r\n      messageNotice.receivers = [messageReceiver];\r\n    } else if (this.location === 'process') {\r\n      messageNotice.sendTime = 'PROCESSINSTANCE_COMPLETED';\r\n      const messageReceiver = new MessageReceiver();\r\n      messageReceiver.type = 'processParticipant';\r\n      messageReceiver.processParticipant = 'procInstCreator';\r\n      messageNotice.receivers = [messageReceiver];\r\n    } else if (this.location === 'messageActivity') {\r\n      const messageReceiver = new MessageReceiver();\r\n      messageReceiver.type = 'processParticipant';\r\n      messageReceiver.processParticipant = 'procInstCreator';\r\n      messageNotice.receivers = [messageReceiver];\r\n    }\r\n    compRef.instance.value = messageNotice;\r\n    compRef.instance.submitEmitter.subscribe((re: MessageNotice) => {\r\n      this.messageNotices = this.messageNotices.concat([re]);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.MessageNotice.messageSet'),\r\n      width: 760,\r\n      height: 480,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n  edit() {\r\n    if (!this.grid.selectedRow) {\r\n      this.message.info(this.localePipe.transform('component.MessageNotice.selectedRow'));\r\n      return;\r\n    }\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(MessageNoticeEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.location = this.location;\r\n    compRef.instance.value = this.grid.selectedRow.data;\r\n    compRef.instance.submitEmitter.subscribe((re: MessageNotice) => {\r\n      this.messageNotices = this.messageNotices.map(m => {\r\n        if (m.id === re.id) {\r\n          return re;\r\n        }\r\n        return m;\r\n      });\r\n      this.grid.unSelectRow(this.grid.selectedRow.data.id, true);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.MessageNotice.messageSet'),\r\n      width: 760,\r\n      height: 480,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n  batchCopy() {\r\n    if (!this.messageNotices) {\r\n      this.message.info(this.localePipe.transform('component.MessageNotice.noCopy'));\r\n      return;\r\n    }\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(MessageNoticeCopyComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.messageNotices = this.messageNotices;\r\n    compRef.instance.submitEmitter.subscribe((data: any) => {\r\n      this.viewModel.copy(ResourceKeys.batchCopyProperty, data);\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.MessageNotice.batchCopy'),\r\n      width: 800,\r\n      height: 515,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n  delete() {\r\n    const selected = this.grid.selectedRow;\r\n    if (!selected) {\r\n      this.message.info(this.localePipe.transform('component.MessageNotice.selectedRow'));\r\n      return;\r\n    }\r\n    this.messageNotices = this.messageNotices.filter(m => m.id !== selected.id);\r\n  }\r\n  clickOK() {\r\n    const object = { value: this.messageNotices, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private GetOrganizationType() {\r\n    const url = '/api/runtime/sys/v1.0/authfields/globalauthfields';\r\n    this.http.get(url)\r\n      .subscribe((data: any) => this.uistate.orgTypeCollection = data.map(d => ({ value: d.id, text: d.name })));\r\n  }\r\n\r\n  processSendTime = [\r\n    { value: 'PROCESSINSTANCE_COMPLETED', text: this.localePipe.transform('component.MessageNotice.procComplete') },\r\n    { value: 'PROCESSINSTANCE_ABORTED', text: this.localePipe.transform('component.MessageNotice.procAborted') },\r\n    { value: 'PROCESSINSTANCE_ROLLBACK', text: this.localePipe.transform('component.MessageNotice.procRollBack') }\r\n  ];\r\n\r\n  activitySendTime = [\r\n    { value: 'WORKITEM_CREATED', text: this.localePipe.transform('component.MessageNotice.workCreated') },\r\n    { value: 'ACTIVITY_COMPLETED', text: this.localePipe.transform('component.MessageNotice.actComplete') },\r\n    { value: 'ACTIVITY_ABORTED', text: this.localePipe.transform('component.MessageNotice.actAborted') },\r\n  ];\r\n}\r\n\r\nexport enum ResourceKeys {\r\n  batchCopyProperty = 'batchCopyProperty'\r\n}\r\n\r\nexport class MessageNoticeConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform(\"component.MessageNotice.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.MessageNotice.notSet\");\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, Output, ViewChild, TemplateRef, EventEmitter, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ProcExtendProperty } from './extend-property';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-extend-property',\r\n  templateUrl: './extend-property.component.html',\r\n  styleUrls: ['./extend-property.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ExtendPropertyComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input()\r\n  set value(property: any[]) {\r\n    if (property && property.length > 0) {\r\n      this.procExtendProperty = property.map(p => ({\r\n        id: p.id,\r\n        code: p.code,\r\n        parentId: p.parentId,\r\n        sortOrder: p.sortOrder,\r\n        propertyNote: p.propertyNote,\r\n        propertyTitle: p.propertyTitle,\r\n        propertyLocation: p.propertyLocation,\r\n        propertyType: p.propertyType,\r\n        enumValue: p.enumValue,\r\n        bizDefKey: p.bizDefKey,\r\n        bizCategoryId: p.bizCategoryId,\r\n        startMode: p.startMode,\r\n        value: p.value,\r\n      }));\r\n    }\r\n  }\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.extendProperty.extendProperty\"),\r\n    width: 430,\r\n    height: 370,\r\n    showButtons: true\r\n  };\r\n  procExtendProperty: Array<ProcExtendProperty> = new Array();\r\n  booleanlist = [\r\n    { key: this.localePipe.transform(\"component.extendProperty.true\"), value: 'true' },\r\n    { key: this.localePipe.transform(\"component.extendProperty.false\"), value: 'false' }\r\n  ];\r\n  extendPropertyList = {\r\n    key: '',\r\n    value: ''\r\n  };\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n    ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  setProperty(obj: any) {\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.propertyConfig = obj.propertyConfig;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    const value = this.procExtendProperty;\r\n    const object = { value, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  cancel() {\r\n    this.closeModal.emit();\r\n  }\r\n}\r\nexport class ExtendPropertyConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data instanceof Array && data.some(item => item.value)) {\r\n      return this.localePipe.transform(\"component.extendProperty.set\");\r\n    }\r\n    return this.localePipe.transform(\"component.extendProperty.notSet\");\r\n  }\r\n}\r\n","export class ImageSetting {\r\n  imageOperation: string; // 影像设置\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, Input, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ImageSetting } from './image-set';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-image-set',\r\n  templateUrl: './image-set.component.html',\r\n  styleUrls: ['./image-set.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ImageSetComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(setValue: any) {\r\n    if (setValue) {\r\n      this.imageSetting.imageOperation = setValue.imageOperation;\r\n      }\r\n    }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.imageSet.imageSet'),\r\n    width: 520,\r\n    height: 360,\r\n    showButtons: true\r\n  };\r\n// 影像操作权限选项列表\r\n  operationList = [\r\n    { value: 'onlyView', name: this.localePipe.transform('component.imageSet.onlyView')},\r\n    { value: 'edit', name: this.localePipe.transform('component.imageSet.edit')},\r\n    { value: 'reScanStart', name: this.localePipe.transform('component.imageSet.reScanStart')},\r\n    { value: 'reScanComplete', name: this.localePipe.transform('component.imageSet.reScanComplete') }];\r\n// 影像操作权限\r\n  imageSetting: ImageSetting = new ImageSetting();\r\n  constructor(\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changeValue(data: any) {\r\n    // 先选0再选123的时候，暂时置为0？先选123再选0则置为0√\r\n    if (data.indexOf('onlyView') > -1) {\r\n      setTimeout(() => {\r\n        this.message.info(this.localePipe.transform('component.imageSet.mutualExclusion'));\r\n        this.imageSetting.imageOperation = 'onlyView';\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    const value = this.imageSetting;\r\n    const object = { value, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n}\r\nexport class ImageSetConverter implements TypeConverter {\r\n\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.imageOperation) {\r\n      return this.localePipe.transform('component.imageSet.set');\r\n    }\r\n    return this.localePipe.transform('component.imageSet.notSet');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform, Inject, LOCALE_ID, InjectionToken } from '@angular/core';\r\n\r\nexport const BIF_LANG_RESOURCES = new InjectionToken(\"BIF_LANG_RESOURCES\");\r\n\r\n@Pipe({ name: 'aifLocale' })\r\nexport class AifLocalePipe implements PipeTransform {\r\n    private readonly defaultLang: string = \"zh-CHS\";\r\n    private langCode: string;\r\n    private lang: {};\r\n    private resources;\r\n    constructor(\r\n        @Inject(LOCALE_ID) localeId: string,\r\n        @Inject(BIF_LANG_RESOURCES) resources: any,\r\n    ) {\r\n        this.langCode = localeId || this.defaultLang;\r\n        this.resources = resources || {};\r\n        this.lang = resources[this.langCode] || resources[this.defaultLang] || {};\r\n    }\r\n    transform(name: string): any {\r\n        return this.lang[name] || name;\r\n    }\r\n\r\n    instant(name: string): any {\r\n        return this.transform(name);\r\n    }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ConditionEntity, ConditionType } from \"@edp-bif/common-api\";\r\n\r\n@Injectable()\r\nexport class StartConditionService {\r\n    createConditionEntity(): ConditionEntity {\r\n        const entity = new ConditionEntity();\r\n        entity.id = this.generateGUID();\r\n        entity.isEnabled = true;\r\n        entity.type = ConditionType.COMPONENT;\r\n        return entity;\r\n    }\r\n\r\n    generateGUID(): string {\r\n        let d = new Date().getTime();\r\n        let guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n            let r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n\r\n        return guid;\r\n    }\r\n}","import { DtBillCreationProcessEntity, DtBillWritebackProcessEntity } from '@edp-bif/common-api';\r\nimport { ResponseToolbarComponent, ResponseToolbarClickEvent } from '@farris/ui-response-toolbar';\r\nimport { DatagridComponent, DataColumn } from '@farris/ui-datagrid';\r\nimport { TemplateRef, Injector, ComponentFactoryResolver, ChangeDetectorRef, OnInit, EventEmitter } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { AifLocalePipe } from '../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\n\r\nexport abstract class AbstractDatagridComponent implements OnInit {\r\n    readonly groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n    toolbar: ResponseToolbarComponent;\r\n    readonly toolbarData = [\r\n        {\r\n            id: 'btn-add',\r\n            text: this.localePipe.instant(\"add\"),\r\n            class: 'btn btn-secondary',\r\n            disabled: false\r\n        },\r\n        {\r\n            id: 'btn-remove',\r\n            text: this.localePipe.instant(\"remove\"),\r\n            class: 'btn btn-secondary',\r\n            disabled: false\r\n        },\r\n    ];\r\n\r\n    dg: DatagridComponent;\r\n    dgIdField: string = \"id\";\r\n    dgColumns: DataColumn[];\r\n    abstract get dgData(): Array<any>;\r\n    abstract set dgData(arr: Array<any>);\r\n    get dgTotal(): number {\r\n        return this.dgData.length || 0;\r\n    }\r\n\r\n    dgIsEnabledStateCell: TemplateRef<any>;\r\n    dgOpCell: TemplateRef<any>;\r\n    editingRowId: string = null;\r\n\r\n    constructor(\r\n        protected messager: MessagerService,\r\n        protected notify: NotifyService,\r\n        protected metadataService: GSPMetadataRTService,\r\n        protected modalService: BsModalService,\r\n        protected localePipe: AifLocalePipe,\r\n        protected injector: Injector,\r\n        protected resolver: ComponentFactoryResolver,\r\n        protected cdf: ChangeDetectorRef,\r\n    ) {\r\n\r\n    }\r\n\r\n    abstract ngOnInit(): void;\r\n\r\n    toolbarClickHandler(args: ResponseToolbarClickEvent) {\r\n        switch (args.id) {\r\n            case 'btn-add':\r\n                this.add();\r\n                break;\r\n            case 'btn-remove':\r\n                this.remove(null);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 新增行\r\n     */\r\n    abstract add(): void;\r\n\r\n    /**\r\n     * 开始行编辑\r\n     * @param ctx \r\n     */\r\n    startRowEdit(ctx?: { rowIndex: number; rowData: { [key: string]: any; id: any; }; }) {\r\n        this.dg.editRow(ctx.rowData.id);\r\n        this.editingRowId = ctx.rowData.id;\r\n        this.cdf.detectChanges();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 取消行编辑\r\n     * @param ctx \r\n     */\r\n    cancelRowEdit(ctx?: { rowIndex: number; rowData: { [key: string]: any; id: any; }; }) {\r\n        this.dg.cancelEdit(ctx.rowData.id);\r\n        this.editingRowId = null;\r\n        this.cdf.detectChanges();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 结束行编辑\r\n     * @param ctx \r\n     */\r\n    endRowEdit(ctx?: { rowIndex: number; rowData: { [key: string]: any; id: any; }; }) {\r\n        this.dg.endRowEdit();\r\n        this.editingRowId = null;\r\n        this.cdf.detectChanges();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 行删除\r\n     * @param ctx \r\n     */\r\n    remove(evt: Event, ctx?: { rowIndex: number, rowData: { id;[key: string]: any } }) {\r\n        const ids: string[] = [];\r\n        if (ctx == null) {\r\n            // 批量删除\r\n            this.dg.checkeds.forEach(it => {\r\n                ids.push(it.id);\r\n            });\r\n        } else {\r\n            // 行内删除\r\n            ids.push(ctx.rowData.id);\r\n        }\r\n        if (ids.length == 0) {\r\n            this.notify.warning(this.localePipe.instant(\"pleaseSelectOneItemAtLeast\"));\r\n            if (evt != null) {\r\n                evt.stopPropagation();\r\n            }\r\n            return false;\r\n        }\r\n        for (let id of ids) {\r\n            this.dg.deleteRow(id);\r\n        }\r\n        this.dgData = this.dg.data;\r\n        if (this.editingRowId != null) {\r\n            if (ids.includes(this.editingRowId)) {\r\n                this.editingRowId = null;\r\n            } else {\r\n                this.dg.editRow(this.editingRowId);\r\n            }\r\n        }\r\n        this.cdf.detectChanges();\r\n        if (evt != null) {\r\n            evt.stopPropagation();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 行移动\r\n     * @param ctx datagrid上下文\r\n     * @param direction -1: 上移， 1：下移\r\n     */\r\n    rowMove(evt: Event, ctx: { rowIndex: number, rowData: { id;[key: string]: any } }, direction: number) {\r\n        // const arr = dg.data;\r\n        const arr = this.dgData;\r\n        const index = this.findIndex(arr, ctx.rowData.id);\r\n\r\n        if (index == -1 || (direction == 1 && index == arr.length - 1) || (direction == -1 && index == 0)) {\r\n            return;\r\n        }\r\n        arr[index] = [arr[index + direction], arr[index + direction] = arr[index]][0];\r\n        this.dgData = [...this.dgData];\r\n        this.cdf.detectChanges();\r\n        if (evt != null) {\r\n            evt.stopPropagation();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 查找数组中指定id的元素下标\r\n     * @param arr 数组\r\n     * @param id 数组唯一标识\r\n     * @returns 元素下标\r\n     */\r\n    protected findIndex(arr: any[], id): number {\r\n        let index = -1;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const elt = arr[i];\r\n            if (elt.id == id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n    abstract load(): void;\r\n\r\n    abstract configDgColumns(): void;\r\n}","export const LANG_RESOURCES = {\r\n    \"zh-CHS\": {\r\n        \"startCondition\": \"启动条件\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"confirm\": \"确定\",\r\n        \"edit\": \"编辑\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"add\": \"新增\",\r\n        \"remove\": \"删除\",\r\n        \"isEnabled\": \"是否启用\",\r\n        \"type\": \"类型\",\r\n        \"commonComponent\": \"通用构件\",\r\n        \"expression\": \"表达式\",\r\n        \"billAction\": \"业务动作\",\r\n        \"content\": \"内容\",\r\n        \"description\": \"描述\",\r\n        \"operation\": \"操作\",\r\n        \"typeMustNotBeNull\": \"类型不可为空\",\r\n        \"contentMustNotBeNull\": \"内容不可为空\",\r\n        \"commonComponentMetadataSelector\": \"通用构件选择\",\r\n        \"pleaseSelectOneItemAtLeast\": \"请至少选择一条数据\",\r\n        \"pleaseEndCurrentRowEditing\": \"请先结束当前行编辑\",\r\n    },\r\n    \"en\": {\r\n        \"startCondition\": \"Start Condition\",\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"confirm\": \"Confirm\",\r\n        \"edit\": \"Edit\",\r\n        \"moveUp\": \"Move Up\",\r\n        \"moveDown\": \"Move Down\",\r\n        \"add\": \"Add\",\r\n        \"remove\": \"Remove\",\r\n        \"isEnabled\": \"Is Enabled\",\r\n        \"type\": \"Type\",\r\n        \"commonComponent\": \"Common Component\",\r\n        \"expression\": \"Expression\",\r\n        \"billAction\": \"Bill Action\",\r\n        \"content\": \"Content\",\r\n        \"description\": \"Description\",\r\n        \"operation\": \"Operation\",\r\n        \"typeMustNotBeNull\": \"Type must not be null\",\r\n        \"contentMustNotBeNull\": \"Content must not be null\",\r\n        \"commonComponentMetadataSelector\": \"Common Component Selector\",\r\n        \"pleaseSelectOneItemAtLeast\": \"Please select one item at least\",\r\n        \"pleaseEndCurrentRowEditing\": \"Please end current row editing\",\r\n    },\r\n    \"zh-CHT\": {\r\n        \"startCondition\": \"啓動條件\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"confirm\": \"確定\",\r\n        \"edit\": \"編輯\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"add\": \"新增\",\r\n        \"remove\": \"刪除\",\r\n        \"isEnabled\": \"是否啓用\",\r\n        \"type\": \"類型\",\r\n        \"commonComponent\": \"通用構件\",\r\n        \"expression\": \"表達式\",\r\n        \"billAction\": \"業務動作\",\r\n        \"content\": \"內容\",\r\n        \"description\": \"描述\",\r\n        \"operation\": \"操作\",\r\n        \"typeMustNotBeNull\": \"類型不可爲空\",\r\n        \"contentMustNotBeNull\": \"內容不可爲空\",\r\n        \"commonComponentMetadataSelector\": \"通用構件選擇\",\r\n        \"pleaseSelectOneItemAtLeast\": \"請至少選擇壹條數據\",\r\n        \"pleaseEndCurrentRowEditing\": \"請先結束當前行編輯\",\r\n    }\r\n};","import { ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BpmnModelJsonHelper, ComponentConditionContent, ConditionEntity, ConditionType, ExpressionConditionContent } from '@edp-bif/common-api';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ResponseToolbarClickEvent } from '@farris/ui-response-toolbar';\r\nimport { GSPMetadataRTService, Metadata4RefDto, SelectMetadataRTComponent } from '@gsp-lcm/metadatart-selector';\r\nimport { ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AifLocalePipe, BIF_LANG_RESOURCES } from '../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\nimport { IConditionEntity4Dg } from './entity/IConditionEntity4Dg';\r\nimport { StartConditionService } from './start-condition.service';\r\nimport { DataEntityService } from '@gsp-svc/data-entity-adapter';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { AbstractDatagridComponent } from './abstract-datagrid-component';\r\nimport { LANG_RESOURCES } from './i18n/lang.resource';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\n\r\n\r\n@Component({\r\n  selector: 'lib-start-condition',\r\n  templateUrl: './start-condition.component.html',\r\n  styleUrls: ['./start-condition.component.css'],\r\n  providers: [\r\n    { provide: BIF_LANG_RESOURCES, useValue: LANG_RESOURCES },\r\n    AifLocalePipe,\r\n    StartConditionService,\r\n  ]\r\n})\r\nexport class StartConditionComponent extends AbstractDatagridComponent implements OnInit {\r\n  readonly groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: string) {\r\n    data = data ? data : '[]';\r\n    const conditionEntities: ConditionEntity[] = data ? [] : BpmnModelJsonHelper.FromJson(data, ConditionEntity);\r\n    this.designedConditionEntities = conditionEntities.map((item) => {\r\n      const entity: IConditionEntity4Dg = {\r\n        id: item.id,\r\n        isEnabled: item.isEnabled,\r\n        name: item.name,\r\n        type: item.type,\r\n        remarks: item.remarks,\r\n        component: {},\r\n        expression: {},\r\n      };\r\n\r\n      if (entity.type == ConditionType.COMPONENT) {\r\n        const compCondCont = new ComponentConditionContent();\r\n        compCondCont.LoadFromJson(item.content);\r\n\r\n        entity.component.compId = compCondCont.componentId;\r\n        entity.component.compMetadataId = compCondCont.componentMetadataId;\r\n        entity.component.compName = compCondCont.name;\r\n\r\n        entity.displayedContent = entity.component.compName;\r\n      } else if (entity.type == ConditionType.EXPRESSION) {\r\n        const exprContent = new ExpressionConditionContent();\r\n        exprContent.LoadFromJson(item.content);\r\n\r\n        entity.expression.exprContent = exprContent.expressionContent;\r\n        entity.displayedContent = entity.expression.exprContent;\r\n      } else {\r\n\r\n      }\r\n      return entity;\r\n    });\r\n  }\r\n\r\n  @Input() editorParams: {\r\n    bizTypeId?: string;\r\n    voId?: string;\r\n  } = {};\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: '启动条件',\r\n    width: 900,\r\n    height: 400,\r\n    showButtons: true,\r\n    showHeader: false\r\n  };\r\n\r\n  @ViewChild(\"dg\")\r\n  dg: DatagridComponent;\r\n  dgIdField: string = \"id\";\r\n  dgColumns: DataColumn[];\r\n  get dgData(): IConditionEntity4Dg[] {\r\n    return this.designedConditionEntities;\r\n  }\r\n  set dgData(arr: IConditionEntity4Dg[]) {\r\n    this.designedConditionEntities = arr;\r\n  }\r\n  get dgTotal(): number {\r\n    return this.dgData.length || 0;\r\n  }\r\n  designedConditionEntities: Array<IConditionEntity4Dg> = new Array();\r\n\r\n  @ViewChild(\"dgIsEnabledStateCell\")\r\n  dgIsEnabledStateCell: TemplateRef<any>;\r\n  @ViewChild(\"dgOpCell\")\r\n  dgOpCell: TemplateRef<any>;\r\n\r\n  editingRowId: string = null;\r\n  canEdit: any = true;\r\n\r\n  constructor(\r\n    public startConditionService: StartConditionService,\r\n    private designerState: ProcessDesignerUIState,\r\n    public metadata: GSPMetadataRTService,\r\n    public expr: ExpressionService,\r\n    public des: DataEntityService,\r\n    public messager: MessagerService,\r\n    public notify: NotifyService,\r\n    public modal: BsModalService,\r\n    public framework: FrameworkService,\r\n    public router: Router,\r\n    public activatedRoute: ActivatedRoute,\r\n    public loading: LoadingService,\r\n    @Inject(LOCALE_ID) localeId: string,\r\n    public localePipe: AifLocalePipe,\r\n    public cfr: ComponentFactoryResolver,\r\n    public cdf: ChangeDetectorRef,\r\n    public inj: Injector,\r\n  ) {\r\n    super(messager, notify, metadata, modal, localePipe, inj, cfr, cdf)\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.configDgColumns();\r\n  }\r\n\r\n  clickOk() {\r\n    if (this.dg.isEditing() || this.editingRowId != null) {\r\n      return;\r\n    }\r\n    const conditionEntities = this.designedConditionEntities.map((entity) => {\r\n      const item: ConditionEntity = new ConditionEntity();\r\n      item.id = entity.id;\r\n      item.isEnabled = entity.isEnabled;\r\n      item.name = entity.name;\r\n      item.type = entity.type;\r\n      item.remarks = entity.remarks;\r\n\r\n      if (entity.type == ConditionType.COMPONENT) {\r\n        const compCondCont = new ComponentConditionContent();\r\n        compCondCont.name = entity.component.compName;\r\n        compCondCont.componentId = entity.component.compId;\r\n        compCondCont.componentMetadataId = entity.component.compMetadataId;\r\n\r\n        item.content = compCondCont.ConvertToJson();\r\n      } else if (entity.type == ConditionType.EXPRESSION) {\r\n        const exprContent = new ExpressionConditionContent();\r\n        exprContent.expressionContent = entity.expression.exprContent;\r\n\r\n        item.content = exprContent.ConvertToJson();\r\n      } else {\r\n\r\n      }\r\n\r\n      return item;\r\n    });\r\n\r\n    const val = BpmnModelJsonHelper.ToJson(conditionEntities);\r\n    const obj = { value: val, parameters: null };\r\n    this.submitModal.emit(obj);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  load(): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  toolbarClickHandler(args: ResponseToolbarClickEvent) {\r\n    switch (args.id) {\r\n      case 'btn-add':\r\n        this.add();\r\n        break;\r\n      case 'btn-remove':\r\n        this.remove(null);\r\n        break;\r\n    }\r\n  }\r\n\r\n  add() {\r\n    if (this.dg.isEditing() == false || this.dg.isEditing() == null) {\r\n      const newItem = this.startConditionService.createConditionEntity();\r\n      const newEntity: IConditionEntity4Dg = {\r\n        id: newItem.id,\r\n        name: newItem.name,\r\n        type: newItem.type,\r\n        isEnabled: newItem.isEnabled,\r\n        remarks: newItem.remarks,\r\n        component: {},\r\n        expression: {},\r\n      };\r\n\r\n      this.dgData = [...this.dgData, newEntity];\r\n      this.cdf.detectChanges();\r\n      setTimeout(() => {\r\n        this.dg.editRow(newItem.id);\r\n        this.editingRowId = newItem.id;\r\n      }, 0);\r\n    } else {\r\n      this.notify.warning(this.localePipe.instant(\"pleaseEndCurrentRowEditing\"));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 行删除\r\n   * @param ctx \r\n   */\r\n  remove(evt: Event, ctx?: { rowIndex: number, rowData: { id;[key: string]: any } }) {\r\n    const ids: string[] = [];\r\n    if (ctx == null) {\r\n      // 批量删除\r\n      this.dg.checkeds.forEach(it => {\r\n        ids.push(it.id);\r\n      });\r\n    } else {\r\n      // 行内删除\r\n      ids.push(ctx.rowData.id);\r\n    }\r\n    if (ids.length == 0) {\r\n      this.notify.warning(this.localePipe.instant(\"pleaseSelectOneItemAtLeast\"));\r\n      if (evt != null) {\r\n        evt.stopPropagation();\r\n      }\r\n      return false;\r\n    }\r\n    for (let id of ids) {\r\n      this.dg.deleteRow(id);\r\n    }\r\n    this.dgData = this.dg.data;\r\n    if (this.editingRowId != null) {\r\n      if (ids.includes(this.editingRowId)) {\r\n        this.editingRowId = null;\r\n      } else {\r\n        this.dg.editRow(this.editingRowId);\r\n      }\r\n    }\r\n    this.cdf.detectChanges();\r\n    if (evt != null) {\r\n      evt.stopPropagation();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  selectContent(e: { instance, form, formControl, $event }) {\r\n    switch (e.form.value.type) {\r\n      case ConditionType.COMPONENT:\r\n        this.selectCommonComp(e);\r\n        break;\r\n      case ConditionType.EXPRESSION:\r\n        this.showExpression(e);\r\n        break;\r\n      // case ConditionType.FULL_EXPRESSION:\r\n      //   this.showExpression(e);\r\n      //   break;\r\n      // case ConditionType.INCREMENTAL_EXPRESSION:\r\n      //   this.showExpression(e);\r\n      //   break;\r\n      case ConditionType.VOACTION:\r\n        this.selectVOAction(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  public selectCommonComp(e: { instance, form, formControl, $event }): void {\r\n    const compFactory = this.cfr.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.inj);\r\n    compRef.instance.typeList = \"CommonComponent\";\r\n    // compRef.instance.boId = `${this.processContent.upBillBoId},${this.processContent.downBillBoId}`;\r\n    compRef.instance.selectedMetadata.subscribe(\r\n      (metadata4RefDto: Metadata4RefDto) => {\r\n        const content = new ComponentConditionContent();\r\n\r\n        const metadata = metadata4RefDto.metadata;\r\n        const entity: IConditionEntity4Dg = e.form.bindingData;\r\n        entity.component.compName = metadata.name;\r\n        entity.component.compMetadataId = metadata.id;\r\n        const metadataContent = JSON.parse(metadata.content);\r\n        entity.component.compId = metadataContent.id || metadataContent.Id || metadataContent.ID || metadata.id;\r\n        entity.displayedContent = entity.component.compName;\r\n\r\n        e.formControl.setValue(entity.displayedContent);\r\n        e.instance.cd.detectChanges();\r\n      }\r\n    );\r\n    const modalConfig = {\r\n      title: this.localePipe.instant(\"commonComponentMetadataSelector\"),\r\n      width: 930,\r\n      height: 573,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modal.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n\r\n  public selectVOAction(e: { instance, form, formControl, $event }): void {\r\n\r\n  }\r\n\r\n  public showExpression(e: { instance, form, formControl, $event }): void {\r\n    // this.expr.clearContext();\r\n    const context = new Array<VarEntity>();\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n\r\n    this.expr.addExpressionText(e.formControl.value);\r\n    this.configExpressionExpendFuncs();\r\n\r\n    let schema$: Observable<any> = this.des.getSchemaById(this.editorParams.voId);\r\n    schema$.subscribe(\r\n      (schema) => {\r\n        this.expr.addNewSchema(schema.name, schema);\r\n        this.expr.addInjectedEntity(schema.entityTypes[0].code, schema.name, schema.entityTypes[0].code, InjectedType.EntityType);\r\n\r\n        this.expr.buildExpression(!this.canEdit).then(\r\n          expressioninfo => {\r\n            const content: ExpressionConditionContent = new ExpressionConditionContent();\r\n\r\n            let temp: any = expressioninfo;\r\n            const entity: IConditionEntity4Dg = e.form.bindingData;\r\n            entity.expression.exprContent = temp;\r\n            entity.displayedContent = entity.expression.exprContent;\r\n\r\n            e.formControl.setValue(entity.displayedContent);\r\n            e.instance.cd.detectChanges();\r\n            //点击确定后，去除表达式里面的新增的上下文变量\r\n            if(context.length > 0) {\r\n              this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n            }\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  clearContent(e: { instance, form, formControl, $event }) {\r\n    const entity: IConditionEntity4Dg = e.form.bindingData;\r\n    entity.displayedContent = null;\r\n\r\n    //构件\r\n    entity.component.compName = null;\r\n    entity.component.compMetadataId = null;\r\n    entity.component.compId = null;\r\n\r\n    //表达式\r\n    entity.expression.exprContent = null;\r\n\r\n    //VO动作\r\n\r\n    e.formControl.setValue(null);\r\n    e.instance.cd.detectChanges();\r\n  }\r\n\r\n  configDgColumns() {\r\n    this.dgColumns = [\r\n      // { field: 'id', title: this.localePipeService.instant(\"id\"), width: 160 },\r\n      {\r\n        field: 'isEnabled', title: this.localePipe.instant(\"isEnabled\"), width: 100, template: this.dgIsEnabledStateCell,\r\n      },\r\n      {\r\n        field: 'type', title: this.localePipe.instant(\"type\"), width: 120,\r\n        editor: {\r\n          type: EditorTypes.SELECT,\r\n          options: {\r\n            idField: \"value\",\r\n            valueField: 'value',\r\n            textField: 'text',\r\n            data: [\r\n              // { value: ConditionType.VOACTION, text: this.localePipeService.instant(\"billAction\") },\r\n              // { value: ConditionType.EXPRESSION, text: this.localePipe.instant(\"expression\") },\r\n              { value: ConditionType.COMPONENT, text: this.localePipe.instant(\"commonComponent\") },\r\n              // { value: ConditionType.FULL_EXPRESSION, text: this.localePipe.instant(\"fullExpression\") },\r\n              // { value: ConditionType.INCREMENTAL_EXPRESSION, text: this.localePipe.instant(\"incrementalExpression\") },\r\n            ]\r\n          },\r\n          validators: [\r\n            { type: 'required', messager: this.localePipe.instant(\"typeMustNotBeNull\") },\r\n          ]\r\n        },\r\n        validators: [\r\n          { type: 'required' },\r\n        ],\r\n        formatter: (value: ConditionType, rowData: any, rowIndex: any) => {\r\n          switch (value) {\r\n            case ConditionType.COMPONENT:\r\n              return this.localePipe.instant(\"commonComponent\");\r\n            case ConditionType.EXPRESSION:\r\n              return this.localePipe.instant(\"expression\");\r\n            // case ConditionType.FULL_EXPRESSION:\r\n            //   return this.localePipe.instant(\"fullExpression\");\r\n            // case ConditionType.INCREMENTAL_EXPRESSION:\r\n            //   return this.localePipe.instant(\"incrementalExpression\");\r\n            case ConditionType.VOACTION:\r\n              return this.localePipe.instant(\"billAction\");\r\n            default:\r\n              return \"Unknown\";\r\n          }\r\n        }\r\n      },\r\n      {\r\n        field: \"displayedContent\", title: this.localePipe.instant(\"content\"), width: 200,\r\n        editor: {\r\n          type: EditorTypes.INPUTGROUP,\r\n          options: {\r\n            groupText: this.groupIcon,\r\n            editable: false,\r\n            clickHandle: (e: { instance, form, formControl, $event }) => {\r\n              this.selectContent(e);\r\n            },\r\n            clear: (e: { instance, form, formControl, $event }) => {\r\n              this.clearContent(e);\r\n            },\r\n          },\r\n          validators: [\r\n            { type: 'required', messager: this.localePipe.instant(\"contentMustNotBeNull\") }\r\n          ]\r\n        },\r\n        validators: [\r\n          { type: 'required' },\r\n        ],\r\n      },\r\n      {\r\n        field: 'remarks', title: this.localePipe.instant(\"description\"), width: 200,\r\n        editor: {\r\n          type: EditorTypes.TEXTAREA, options: {},\r\n        }\r\n      },\r\n      { field: null, title: this.localePipe.instant(\"operation\"), width: 250, template: this.dgOpCell, halign: 'center', align: 'center' },\r\n    ];\r\n  }\r\n\r\n  beforeEdit = (...args) => {\r\n    // console.log('Before Edit', args);\r\n    return of(true);\r\n  }\r\n\r\n  beginEdit(param: { rowIndex: number, rowData: any, column: any, gridInstance: DatagridComponent }) {\r\n    // console.log('Begin Edit', param);\r\n    this.editingRowId = param.rowData.id;\r\n    const editors = param.gridInstance.getEditors();\r\n    const select = editors[0];\r\n    select.instance.formControl.valueChanges.subscribe((val) => {\r\n      if (select.instance.dr.form.bindingData.type != val) {\r\n        select.instance.group.bindingData.displayedContent = null;\r\n        select.instance.group.controls.displayedContent.setValue(null);\r\n\r\n        select.instance.group.bindingData.remarks = null;\r\n        select.instance.group.controls.remarks.setValue(null);\r\n        select.instance.dr.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  afterEdit = (rowIndex, rowData: IConditionEntity4Dg, ...args) => {\r\n    if (rowData.component && rowData.component.compMetadataId) {\r\n      return of(true);\r\n    } else if (rowData.expression && rowData.expression.exprContent) {\r\n      return of(true);\r\n    } else {\r\n      this.notify.warning(this.localePipe.instant(\"eventRouterConditionsContentCantBeEmpty\"));\r\n      return of(false);\r\n    }\r\n  }\r\n\r\n  endEdit(...args) {\r\n    // console.log('End Edit', args);\r\n    this.editingRowId = null;\r\n  }\r\n\r\n  cancelEdited(...args) {\r\n    // console.log('取消编辑', args);\r\n    this.editingRowId = null;\r\n  }\r\n\r\n  public configExpressionExpendFuncs() {\r\n    // let changeDetails: VarEntity =\r\n    // {\r\n    //   key: \"changeDetails\",\r\n    //   name: \"业务实体变更集列表\",\r\n    //   description: \"业务实体变更集列表\"\r\n    // }\r\n    // this.expr.addContext(changeDetails);\r\n  }\r\n}\r\n\r\nexport class StartConditionConverter implements TypeConverter {\r\n\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.StartCondition) {\r\n      return '（已设置）';\r\n    }\r\n    return '（未设置）';\r\n  }\r\n}","export enum ProcessPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    Key = \"Key\",\r\n    /**\r\n     * 分支条件\r\n     */\r\n    ConditionExpression = 'ConditionExpression',\r\n    /**\r\n     * 流程备注\r\n     */\r\n    wf_TitleExpression = 'wf_TitleExpression',\r\n    /**\r\n     * 默认分支\r\n     */\r\n    Default = 'Default',\r\n    startMode = \"startMode\",\r\n    wf_ExecuteForms_PC = \"wf_ExecuteForms_PC\",\r\n    wf_ExecuteForms_Mobile = \"wf_ExecuteForms_Mobile\",\r\n    wf_Component = \"wf_Component\",\r\n    processVariables = \"processVariables\",\r\n    wf_CustomizeAction = \"wf_CustomizeAction\",\r\n    enablePriority = \"enablePriority\",\r\n    imageSettings = \"imageSettings\",\r\n    timeLimitControl = \"timeLimitControl\",\r\n    messageNotice = \"messageNotice\",\r\n    allowPreAssign = \"allowPreAssign\",\r\n    EntryForm = \"EntryForm\",\r\n    DisplayTerminal = \"DisplayTerminal\",\r\n    StartCondition = \"StartCondition\",\r\n    /**\r\n     * 整单撤回审核中单据\r\n     */\r\n    enableWholeOrderRetrieve = 'enableWholeOrderRetrieve',\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { PropertyEntity, ElementPropertyConfig } from '@farris/ide-property-panel';\r\nimport { EntryFormEditorComponent, FlowFormConverter } from '../views/entryForm/entry-form-editor.component';\r\nimport {\r\n  ActivityComponentComponent,\r\n  ActivityComponentConverter\r\n} from '../views/activity-component/activity-component.component';\r\nimport { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';\r\nimport { TitleExpressionComponent, TitleExpressionConverter } from '../views/title-expression/title-expression.component';\r\nimport { CustomizeActionComponent, CustomizeActionConverter } from '../views/customize-action/customize-action.component';\r\nimport {\r\n  ProcessVariablesComponent,\r\n  ProcessVariablesConverter\r\n} from '../views/process-variables/process-variables.component';\r\nimport {\r\n  TimeLimitControlComponent,\r\n  TimeLimitControlConverter\r\n} from '../views/time-limit-control/time-limit-control.component';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';\r\nimport { ImageSetComponent, ImageSetConverter } from '../views/image-set/image-set.component';\r\nimport { StartConditionComponent, StartConditionConverter } from '../views/start-condition/start-condition.component';\r\nimport { ProcessPropertyKeys } from '../designer/wf-cell/property-keys/ProcessPropertyKeys';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\n\r\nexport class BpmnProcessViewModel {\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    private localPipe: WfLocalePipe\r\n  ) {\r\n  }\r\n\r\n  setProcessProperty(obj: any) {\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.ProcessVariables = this.uiState.propertyData[ProcessPropertyKeys.processVariables];\r\n    this.uiState.propertyConfig = this.setProcessConfig(obj.propertyConfig);\r\n  }\r\n\r\n  setProcessConfig(obj: any[]): ElementPropertyConfig[] {\r\n    const propertyConfig: ElementPropertyConfig[] = [];\r\n    if (obj) {\r\n      obj.forEach((element: ElementPropertyConfig) => {\r\n        this.setProcessEntity(element.properties);\r\n        propertyConfig.push(element);\r\n      });\r\n    }\r\n    return propertyConfig;\r\n  }\r\n\r\n  private setProcessEntity(obj: PropertyEntity[]) {\r\n    if (obj.length > 0) {\r\n      obj.forEach((item: PropertyEntity) => {\r\n        switch (item.propertyID) {\r\n          case ProcessPropertyKeys.Key: // 标识\r\n            break;\r\n          case ProcessPropertyKeys.EntryForm: // 流程分类\r\n            item.editor = EntryFormEditorComponent;\r\n            item.converter = new FlowFormConverter();\r\n            // item.editorParams = {\r\n            //     flowForms: [this.uiState.flowFormInfo.flowForm]\r\n            // };\r\n            break;\r\n          case ProcessPropertyKeys.wf_Component:\r\n            item.editor = ActivityComponentComponent;\r\n            item.converter = new ActivityComponentConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'process'\r\n            };\r\n            break;\r\n          case ProcessPropertyKeys.wf_ExecuteForms_PC:\r\n            item.editor = ExecuteFormsComponent;\r\n            const params = {\r\n              location: 'process',\r\n              tab: 'web'\r\n            }\r\n            item.converter = new ExecuteFormsConverter(params, this.localPipe);\r\n            item.editorParams = params;\r\n            break;\r\n          case ProcessPropertyKeys.wf_ExecuteForms_Mobile:\r\n            item.editor = ExecuteFormsComponent;\r\n            const editorParams = {\r\n              location: 'process',\r\n              tab: 'mobile'\r\n            };\r\n            item.converter = new ExecuteFormsConverter(editorParams, this.localPipe);\r\n            item.editorParams = editorParams;\r\n            break;\r\n          case ProcessPropertyKeys.wf_TitleExpression:\r\n            item.editor = TitleExpressionComponent;\r\n            item.converter = new TitleExpressionConverter(this.localPipe);\r\n            break;\r\n          case ProcessPropertyKeys.allowPreAssign:\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ProcessPropertyKeys.enablePriority:\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ProcessPropertyKeys.enableWholeOrderRetrieve:\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case ProcessPropertyKeys.startMode:\r\n            item.iterator = this.uiState.startModeIterator;\r\n            break;\r\n          case ProcessPropertyKeys.DisplayTerminal:\r\n            item.iterator = this.uiState.displayTerminal;\r\n            break;\r\n          case ProcessPropertyKeys.wf_CustomizeAction:\r\n            item.editor = CustomizeActionComponent;\r\n            item.converter = new CustomizeActionConverter(this.localPipe);\r\n            break;\r\n          case ProcessPropertyKeys.processVariables:\r\n            item.editor = ProcessVariablesComponent;\r\n            item.converter = new ProcessVariablesConverter(this.localPipe);\r\n            break;\r\n          case ProcessPropertyKeys.timeLimitControl:\r\n            item.editor = TimeLimitControlComponent;\r\n            item.converter = new TimeLimitControlConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'process'\r\n            };\r\n            break;\r\n          case ProcessPropertyKeys.messageNotice:\r\n            item.editor = MessageNoticeComponent;\r\n            item.converter = new MessageNoticeConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'process'\r\n            };\r\n            break;\r\n          case ProcessPropertyKeys.imageSettings:\r\n            item.editor = ImageSetComponent;\r\n            item.converter = new ImageSetConverter(this.localPipe);\r\n            break;\r\n          case ProcessPropertyKeys.StartCondition:\r\n            item.editor = StartConditionComponent;\r\n            item.editorParams = {};\r\n            item.converter = new StartConditionConverter();\r\n            break;\r\n          default:\r\n            item.editor = ExtendPropertyComponent;\r\n            item.converter = new ExtendPropertyConverter(this.localPipe);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","export class ApprovalItemEntity {\r\n    value: string;\r\n    text: string;\r\n    workFlowAction: string;\r\n    isDefault = false;\r\n    commentNecessary = false;\r\n    certification = false;\r\n    attachmentNecessary = false;\r\n    signatureNecessary = false;\r\n    defaultComment: string;\r\n\r\n    constructor(value?: string, text?: string, wfAction?: string) {\r\n        this.value = value;\r\n        this.text = text;\r\n        this.workFlowAction = wfAction;\r\n    }\r\n}\r\n","export class SignRuleEntity{\r\n    id: string;\r\n    conclusionValue: string;\r\n    conclusionName: string;\r\n    calculateType?: string; // 计算方式\r\n    conditionValue?: string; // 满足所有条件值\r\n    waitAllVotes?: boolean; // 是否等待所有选票\r\n    completionCondition: string;\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { SignRuleEntity } from './entites/sign-rule.entity';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { ExprEditMode, ExpressionService, VarEntity } from '@gsp-svc/expression';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { of } from 'rxjs';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\nimport { BpmnModel, BpmnModelHelper } from '@edp-pmf/bpmn-model';\r\nimport { Condition, CounterSignRule } from '@gsp-wf/wf-process-model';\r\n\r\n@Component({\r\n  selector: 'app-sign-rule',\r\n  templateUrl: './sign-rule.component.html',\r\n  styleUrls: ['./sign-rule.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class SignRuleComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n\r\n  //会签规则打开页面\r\n  @Input()\r\n  set value(rules: any[]) {\r\n    if (rules && rules.length > 0) {\r\n      for (const rule of rules) {\r\n        const val = new SignRuleEntity();\r\n        val.id = ProcessDeUtil.GenerateElementId();\r\n        val.conclusionValue = rule.ConclusionValue;\r\n        val.conclusionName = rule.ConclusionName;\r\n        val.calculateType = rule.CalculateType ? rule.CalculateType : 'null';\r\n        val.conditionValue = rule.ConditionValue ? rule.ConditionValue : 0;\r\n        val.waitAllVotes = rule.WaitAllVotes ? rule.WaitAllVotes : false;\r\n        val.completionCondition = rule.CompletionCondition ? rule.CompletionCondition._value : null;\r\n        this.data.push(val);\r\n      }\r\n    } else { // 如果模型上没有会签规则，自动带入所有的审批选项\r\n      this.deleteRow();\r\n    }\r\n  }\r\n\r\n  //多实例打开完成规则页面\r\n  @Input()\r\n  set value1(rules: any[]) {\r\n    this.editCondition = true;\r\n    if (rules && rules.length > 0) {\r\n      for (const rule of rules) {\r\n        const val = new SignRuleEntity();\r\n        val.id = BpmnModelHelper.GenerateElementId();\r\n        val.conclusionValue = rule.ConclusionValue;\r\n        // val.conclusionName = rule.conclusionName;\r\n        val.calculateType = rule.CalculateType ? rule.CalculateType : 'null';\r\n        val.conditionValue = rule.ConditionValue ? rule.ConditionValue : 0;\r\n        val.waitAllVotes = rule.WaitAllVotes ? rule.WaitAllVotes : false;\r\n        val.completionCondition = rule.CompletionCondition ? rule.CompletionCondition.Value : null;\r\n        this.data.push(val);\r\n      }\r\n      this.data = this.setName1(this.data);\r\n    } else { // 如果模型上没有会签规则，自动带入所有的审批选项\r\n      this.deleteRow1();\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('iconSelectFooter1') modalFooter1: TemplateRef<any>;\r\n  @ViewChild('approvalTable') apvlItemsGrid: DatagridComponent;\r\n  @ViewChild('approvalItemDialog') apvlItemDialog: DialogComponent;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.signRule.countersignRules'),\r\n    width: 800,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n  editCondition: boolean = false;\r\n  data: SignRuleEntity[] = [];\r\n  calculationMethods: any[] = [\r\n    { text: this.localePipe.transform('component.signRule.byNumber'), value: 'byNumber' },\r\n    { text: this.localePipe.transform('component.signRule.byProportion'), value: 'byProportion' },\r\n    { text: this.localePipe.transform('component.signRule.customConditions'), value: 'null' },\r\n  ];\r\n  counterSignVariables: VarEntity[] = [];\r\n\r\n  bpmnModel: BpmnModel = this.designerUIState.bpmnModel;\r\n  /******* 审批项帮助参数 *********************************************************/\r\n  approvalCols = [{ title: this.localePipe.transform('component.signRule.value'), field: 'value', width: 80 },\r\n  { title: this.localePipe.transform('component.signRule.text'), field: 'text', width: 90 }];\r\n  approvalItems: any[] = [];\r\n\r\n  approvalItems1: any[] = [\r\n    { value: 'Forward',  text: this.localePipe.transform('multiInstanceLoopCharacteristics.completionConditionRulesList.forward') },\r\n    { value: 'Backward', text: this.localePipe.transform('multiInstanceLoopCharacteristics.completionConditionRulesList.backward') },\r\n    { value: 'Abort',  text: this.localePipe.transform('multiInstanceLoopCharacteristics.completionConditionRulesList.abort') }\r\n  ];\r\n/*********************************** */\r\n  columns = [\r\n    { field: 'conclusionName', width: 25, title: this.localePipe.transform('component.signRule.conclusionName') },\r\n    { field: 'conclusionValue', width: 25, title: this.localePipe.transform('component.signRule.conclusionValue') },\r\n    { field: 'calculateType', width: 40, title: this.localePipe.transform('component.signRule.calculateType'),\r\n      formatter: {type: 'enum',options: { valueField: 'value', textField: 'text', data: this.calculationMethods }},\r\n      editor: {type: EditorTypes.COMBOLIST,options: { valueField: 'value', textField: 'text', data: this.calculationMethods, idField: 'value', panelHeight: 'auto' }}\r\n    },\r\n    { field: 'conditionValue', width: 25, title: this.localePipe.transform('component.signRule.conditionValue'),\r\n      editor: { type: EditorTypes.NUMBERBOX, options: {} },\r\n      formatter:{type: 'number', options: { precision: 0, min: 0 } }\r\n    },\r\n    { field: 'waitAllVotes', width: 35, title: this.localePipe.transform('component.signRule.waitAllVotes'),\r\n      editor: { type: EditorTypes.SWITCH, options: {} },\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.signRule.yes'), falseText: this.localePipe.transform('component.signRule.no') }}\r\n    },\r\n    { field: 'completionCondition', width: 50, title: this.localePipe.transform('component.signRule.customConditions'),\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.editConditon(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private message: MessagerService,\r\n    private exprService: ExpressionService,\r\n    private designerUIState: ProcessDesignerUIState,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.counterSignVariables = this.designerUIState.counterSignVariables || [];\r\n    this.approvalItems = this.designerUIState.approvalItems || [];\r\n  }\r\n  // 重置动作\r\n  deleteRow() {\r\n    this.data = [];\r\n    const ruleItems = this.designerUIState.approvalItems || [];\r\n    if (ruleItems && ruleItems.length > 0) {\r\n      for (const ruleItem of ruleItems) {\r\n        const val = new SignRuleEntity();\r\n        if (ruleItem.value === 'Pass') {\r\n          val.id = ProcessDeUtil.GenerateElementId();\r\n          val.conclusionValue = ruleItem.value;\r\n          val.conclusionName = ruleItem.text;\r\n          val.calculateType = 'byProportion';\r\n          val.conditionValue = '100';\r\n          val.waitAllVotes = true;\r\n        } else if (ruleItem.value === 'Back') {\r\n          val.id = ProcessDeUtil.GenerateElementId();\r\n          val.conclusionValue = ruleItem.value;\r\n          val.conclusionName = ruleItem.text;\r\n          val.calculateType = 'byNumber';\r\n          val.conditionValue = '1';\r\n          val.waitAllVotes = true;\r\n        } else {\r\n          val.id = ProcessDeUtil.GenerateElementId();\r\n          val.conclusionValue = ruleItem.value;\r\n          val.conclusionName = ruleItem.text;\r\n          val.calculateType = 'null';\r\n          val.conditionValue = '0';\r\n          val.waitAllVotes = true;\r\n        }\r\n        this.data.push(val);\r\n      }\r\n    }\r\n  }\r\n\r\n    // 重置动作\r\n    deleteRow1() {\r\n      this.data = [];\r\n      if (this.approvalItems1 && this.approvalItems1.length > 0) {\r\n        for (const ruleItem of this.approvalItems1) {\r\n          const val = new SignRuleEntity();\r\n          if (ruleItem.value === 'Forward') {\r\n            val.id = ProcessDeUtil.GenerateElementId();\r\n            val.conclusionValue = ruleItem.value;\r\n            val.conclusionName = ruleItem.text;\r\n            val.calculateType = 'byProportion';\r\n            val.conditionValue = '100';\r\n            val.waitAllVotes = true;\r\n          } else if (ruleItem.value === 'Backward' || ruleItem.value === 'Abort') {\r\n            val.id = ProcessDeUtil.GenerateElementId();\r\n            val.conclusionValue = ruleItem.value;\r\n            val.conclusionName = ruleItem.text;\r\n            val.calculateType = 'byNumber';\r\n            val.conditionValue = '1';\r\n            val.waitAllVotes = true;\r\n          } else {\r\n            val.id = ProcessDeUtil.GenerateElementId();\r\n            val.conclusionValue = ruleItem.value;\r\n            val.conclusionName = ruleItem.text;\r\n            val.calculateType = 'null';\r\n            val.conditionValue = '0';\r\n            val.waitAllVotes = true;\r\n          }\r\n          this.data.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n     // 给个名字\r\n     setName1(signRuleEntity:SignRuleEntity[]) {\r\n      if (signRuleEntity && signRuleEntity.length > 0) {\r\n        for (var i = 0; i < signRuleEntity.length;i++) {\r\n          if (signRuleEntity[i].conclusionValue === 'Forward') {\r\n            signRuleEntity[i].conclusionName = this.localePipe.transform('multiInstanceLoopCharacteristics.completionConditionRulesList.forward');\r\n          } else if (signRuleEntity[i].conclusionValue === 'Backward') {\r\n            signRuleEntity[i].conclusionName = this.localePipe.transform('multiInstanceLoopCharacteristics.completionConditionRulesList.backward');\r\n          } else if (signRuleEntity[i].conclusionValue === 'Abort'){\r\n            signRuleEntity[i].conclusionName = this.localePipe.transform('multiInstanceLoopCharacteristics.completionConditionRulesList.abort');\r\n          }\r\n        }\r\n      }\r\n      return signRuleEntity;\r\n    }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.data.length === 0) {\r\n      this.message.warning(this.localePipe.transform('component.signRule.notEmpty'));\r\n    } else {\r\n      const object = { value: this.data, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickOK1() {\r\n    this.grid.endCellEdit();\r\n    if (this.data.length === 0) {\r\n      this.message.warning(this.localePipe.transform('component.signRule.notEmpty'));\r\n    } else {\r\n      let counterSignRules = new Array<CounterSignRule>();\r\n      this.data.forEach(d => {\r\n        let counterSignRule = new CounterSignRule(this.bpmnModel);\r\n        counterSignRule.CalculateType = d.calculateType;\r\n        counterSignRule.ConclusionValue = d.conclusionValue;\r\n        counterSignRule.ConditionValue = d.conditionValue\r\n        counterSignRule.WaitAllVotes = d.waitAllVotes;\r\n        counterSignRule.CompletionCondition = new Condition(this.bpmnModel);\r\n        counterSignRule.CompletionCondition.Value = d.completionCondition;\r\n        counterSignRules.push(counterSignRule);\r\n      })\r\n      // let counterSignRules = new CounterSignRule(this.bpmnModel);\r\n\r\n      this.submitModal.emit(counterSignRules);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  editConditon(e: any) {\r\n    // this.exprService.clearContext();\r\n    const context = new Array();\r\n    if(this.editCondition) {\r\n      if (this.designerUIState.multiCounterSignVariables.length > 0) {\r\n        for (const variable of this.designerUIState.multiCounterSignVariables) {\r\n          if (!context.some(c => c.key === variable.key)) {\r\n            context.push(variable);\r\n          }\r\n        }\r\n      }\r\n      if (context.length > 0) {\r\n        for (const v of context) {\r\n          this.exprService.addContext(v);\r\n        }\r\n      }\r\n    }else {\r\n      if (this.counterSignVariables && this.counterSignVariables.length > 0) {\r\n        for (const variable of this.counterSignVariables) {\r\n          if (!context.some(c => c.key === variable.key)) {\r\n            context.push(variable);\r\n          }\r\n        }\r\n      }\r\n      if (this.designerUIState.subActivityContext.length > 0) {\r\n        for (const variable of this.designerUIState.subActivityContext) {\r\n          if (!context.some(c => c.key === variable.key)) {\r\n            context.push(variable);\r\n          }\r\n        }\r\n      }\r\n      if (context.length > 0) {\r\n        for (const v of context) {\r\n          this.exprService.addContext(v);\r\n        }\r\n      }\r\n    }    \r\n    this.exprService.setEditPattern(ExprEditMode.Advanced); // 表达式展现模式：默认高级版（会签规则需要上下文变量）\r\n    this.exprService.addExpressionText(e.instance.value);\r\n    this.exprService.buildExpression().then((cond: string) => {\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.exprService.exprEntity.contextEntities = this.exprService.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 选中审批项\r\n   */\r\n  approvalSelect() {\r\n    const selections: any[] = this.apvlItemsGrid.checkeds;\r\n    if (selections && selections.length > 0) {\r\n      for (const selection of selections) {\r\n        const signRule = new SignRuleEntity();\r\n        signRule.id = ProcessDeUtil.GenerateElementId();\r\n        signRule.conclusionValue = selection.data.value;\r\n        signRule.conclusionName = selection.data.text;\r\n        this.data.push(signRule);\r\n      }\r\n      this.grid.loadData(this.data);\r\n      this.apvlItemDialog.close();\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.signRule.pleaseSelect'));\r\n    }\r\n  }\r\n\r\n\r\n  preValue: SignRuleEntity;\r\n  curValue: SignRuleEntity;\r\n/**\r\n * 结束编辑前事件\r\n */\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    this.preValue = JSON.parse(JSON.stringify(rowData));\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(e: any) {\r\n    this.curValue = e.rowData;\r\n    // 自定义会签规则和预置会签规则互斥\r\n    if(this.preValue.completionCondition !== this.curValue.completionCondition && \r\n      !(this.isEmpty(this.preValue.completionCondition) && this.isEmpty(this.curValue.completionCondition))) {\r\n      this.data[e.rowIndex].calculateType = 'null',\r\n      this.data[e.rowIndex].conditionValue = '0';\r\n      this.data[e.rowIndex].waitAllVotes = false;\r\n    } else if (this.preValue.calculateType !== this.curValue.calculateType ||\r\n      this.preValue.conditionValue !== this.curValue.conditionValue ||\r\n      this.preValue.waitAllVotes !== this.curValue.waitAllVotes) {\r\n        this.data[e.rowIndex].completionCondition = null;\r\n    }\r\n\r\n    if(e.column.field === 'conditionValue' && this.data[e.rowIndex].calculateType === 'byProportion'\r\n    && Number.parseInt(e.value) > 100) {\r\n      this.message.info(this.localePipe.transform('component.signRule.maxConditionValue'));\r\n      this.data[e.rowIndex].conditionValue = '100';\r\n    } else if (e.column.field === 'conditionValue' && Number.parseInt(e.value) < 0) {\r\n      this.message.info(this.localePipe.transform('component.signRule.minConditionValue'));\r\n      this.data[e.rowIndex].conditionValue = '0';\r\n    } else if ((e.column.field === 'calculateType' || e.column.field === 'conditionValue') && (this.data[e.rowIndex].calculateType === 'oneVote' ||\r\n    this.data[e.rowIndex].calculateType === 'fullVote') && Number.parseInt(this.data[e.rowIndex].conditionValue) !== 0) {\r\n      this.message.info(this.localePipe.transform('component.signRule.noConditional'));\r\n      this.data[e.rowIndex].conditionValue = '0';\r\n    } else if (e.column.field === 'calculateType' && this.data[e.rowIndex].calculateType === 'byProportion' &&\r\n    Number.parseInt(this.data[e.rowIndex].conditionValue) > 100) {\r\n      this.message.info(this.localePipe.transform('component.signRule.maxConditionValue'));\r\n      this.data[e.rowIndex].conditionValue = '100';\r\n      }\r\n  }\r\n\r\n  isEmpty(s: string) {\r\n    if(!s || s.length == 0) {\r\n      return true;\r\n    }else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class SignRuleConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    // 会签规则只要启用就有默认值，所以始终置为'已设置';\r\n      return this.localePipe.transform(\"component.signRule.set\");\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DataTableComponent } from '@farris/ui-datatable';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { ApprovalItemEntity } from './entities/approval-item.entity';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { map } from 'rxjs/operators';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-approvel-items',\r\n  templateUrl: './approvel-items.component.html',\r\n  styleUrls: ['./approvel-items.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ApprovelItemsComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(items: any[]) {\r\n    if (items && items.length > 0) {\r\n      for (const item of items) {\r\n        const approval = new ApprovalItemEntity();\r\n        approval.value = item.Value;\r\n        approval.text = item.Text;\r\n        approval.workFlowAction = item.WorkFlowAction;\r\n        approval.isDefault = item.IsDefault;\r\n\r\n        if (item.commentNecessary === null || item.commentNecessary === undefined) {\r\n          approval.commentNecessary = (item.Value === 'Back' ? true : false);\r\n        } else {\r\n          approval.commentNecessary = item.commentNecessary;\r\n        }\r\n\r\n        approval.certification = item.certification ? item.certification : false;\r\n        approval.attachmentNecessary = item.attachmentNecessary ? item.attachmentNecessary : false;\r\n        approval.signatureNecessary = item.signatureNecessary ? item.signatureNecessary : false;\r\n        approval.defaultComment = item.defaultComment ? JSON.parse(item.defaultComment) : null;\r\n        this.data.push(approval);\r\n      }\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('actionsTable') actionsTable: DatagridComponent;\r\n  @ViewChild('actionsDialog') actionsDialog: DialogComponent;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.approvelItems.approvalOptions'),\r\n    width: 1100,\r\n    height: 515,\r\n    showButtons: true\r\n  };\r\n\r\n  workFlowActions: any[] = [\r\n    { text: this.localePipe.transform('component.approvelItems.forward'), value: 'Forward' },\r\n    { text: this.localePipe.transform('component.approvelItems.backward'), value: 'Backward' },\r\n    { text: this.localePipe.transform('component.approvelItems.abort'), value: 'Abort' }];\r\n\r\n  columns = [\r\n    {\r\n      field: 'value', width: 80, title: this.localePipe.transform('component.approvelItems.value'),\r\n    },\r\n    { field: 'text', width: 80, title:  this.localePipe.transform('component.approvelItems.text')},\r\n    {\r\n      field: 'workFlowAction', width: 80, title: this.localePipe.transform('component.approvelItems.workFlowAction'),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.workFlowActions}\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.workFlowActions, idField: 'value', panelHeight: 'auto' }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'isDefault', width: 60, title: this.localePipe.transform('component.approvelItems.isDefault'),\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.approvelItems.yes'), falseText: this.localePipe.transform('component.approvelItems.no') } },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'commentNecessary', width: 60, title: this.localePipe.transform('component.approvelItems.commentNecessary'),\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.approvelItems.yes'), falseText: this.localePipe.transform('component.approvelItems.no') } },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'attachmentNecessary', width: 60, title: this.localePipe.transform('component.approvelItems.attachmentNecessary'),\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.approvelItems.yes'), falseText: this.localePipe.transform('component.approvelItems.no') } },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'certification', width: 60, title: this.localePipe.transform('component.approvelItems.certification'),\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.approvelItems.yes'), falseText: this.localePipe.transform('component.approvelItems.no') } },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'signatureNecessary', width: 60, title: this.localePipe.transform('component.approvelItems.signatureNecessary'),\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.approvelItems.yes'), falseText: this.localePipe.transform('component.approvelItems.no') } },\r\n      validators: [\r\n      ]\r\n    },\r\n    {\r\n      field: 'defaultComment', isMultilingualField: true, width: 70, title: this.localePipe.transform('component.approvelItems.defaultComment'),\r\n      editor: {\r\n        type: EditorTypes.LANGUAGETEXTBOX, options: {\r\n            languages: [\r\n                { code: 'zh-CHS', name: this.localePipe.transform('component.approvelItems.zh-CHS') },\r\n                { code: 'zh-CHT', name: this.localePipe.transform('component.approvelItems.zh-CHT') },\r\n                { code: 'en', name: this.localePipe.transform('component.approvelItems.en') }\r\n            ]\r\n        }\r\n      },\r\n    }\r\n  ];\r\n\r\n  data: ApprovalItemEntity[] = [];\r\n\r\n  // 审批动作\r\n  actions: any[];\r\n  actionsCols = [\r\n    { title: this.localePipe.transform('component.approvelItems.value'), field: 'code', width: 80 },\r\n    { title: this.localePipe.transform('component.approvelItems.text'), field: 'name', width: 90 }];\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    private uiState: ProcessDesignerUIState,\r\n    private resolver: ComponentFactoryResolver,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.getActionsList();\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      const actionList = [];\r\n      // 将多语的默认意见转成String\r\n      for (const action of this.data) {\r\n        if (action.defaultComment != null) {\r\n          action.defaultComment = JSON.stringify(action.defaultComment);\r\n        }\r\n        actionList.push(action);\r\n      }\r\n      console.log(actionList);\r\n      const object = { value: actionList, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (this.data.findIndex(d => !d.workFlowAction) > -1) {\r\n      this.message.warning(this.localePipe.transform('component.approvelItems.workFlowActionNotNull'));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  selectChanged(data: any) { }\r\n\r\n  deleteRow() {\r\n    this.grid.endCellEdit();\r\n    if (this.grid.selectedRow && this.grid.selectedRow.data) {\r\n      const i = this.data.findIndex(d => d.value === this.grid.selectedRow.data.value);\r\n      this.data.splice(i, 1);\r\n      this.grid.loadData(this.data);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.approvelItems.deleteRow'));\r\n    }\r\n  }\r\n\r\n  private getActionsList() {\r\n    let url = this.util.getApprovalActionWebApi() + '?';\r\n    if (this.uiState.bizActivityId) {\r\n      url += `bizActivityId=${this.uiState.bizActivityId}`;\r\n    } else {\r\n      url += `bizActivityId=`;\r\n    }\r\n\r\n    this.http.get(url).subscribe((data: any) => {\r\n        data = data.filter(a => this.actionValidate(a));\r\n        this.actions = data;\r\n      });\r\n  }\r\n\r\n  actionsSelect() {\r\n    const selections: any[] = this.actionsTable.checkeds;\r\n    if (selections && selections.length > 0) {\r\n      selections.forEach(action => {\r\n        const item = new ApprovalItemEntity(action.data.code, action.data.name, action.data.workFlowAction);\r\n        const index = this.data.findIndex(act => act.value === action.data.code);\r\n        if (index > -1) {\r\n          this.data.splice(index, 1);\r\n        }\r\n        this.data.push(item);\r\n      });\r\n      this.grid.loadData(this.data);\r\n    }\r\n    // 2023-6-13 关闭前清空已选数据\r\n    this.actionsTable.clearCheckeds(true);\r\n    this.actionsDialog.close();\r\n  }\r\n\r\n  SelectCancel() {\r\n    // 2023-6-13 关闭前清空已选数据\r\n    this.actionsTable.clearCheckeds(true);\r\n    this.actionsDialog.close();\r\n  }\r\n\r\n  private actionValidate(action: any) {\r\n    const arr = ['ViewBizLog', 'ViewFlowChart', 'AssignUser', 'Claim', 'Unclaim', 'Retrieve', 'Resubmit', 'Obsolete', 'Transfer', 'AddSignFront', 'ViewExecuteForm'];\r\n    return arr.indexOf(action.code.trim()) === -1;\r\n  }\r\n}\r\n\r\nexport class ApprovelItemsConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform('component.approvelItems.set');\r\n    } else {\r\n      return this.localePipe.transform('component.approvelItems.notSet');\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, Input, EventEmitter, ViewChild, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { ExpressionService, ExpressioneditorComponent, ComputeRuleEditorComponent, ExprEditMode } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-expression-editor',\r\n  templateUrl: './expression-editor.component.html',\r\n  styleUrls: ['./expression-editor.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ExpressionEditorComponent implements OnInit {\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() value: string;\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  @ViewChild(ExpressioneditorComponent) editor: ExpressioneditorComponent;\r\n  @ViewChild('compute') compute: ComputeRuleEditorComponent;\r\n\r\n  contextEntities = [];\r\n\r\n  schema: any = {};\r\n  injectName = '';\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.expressionEditor.expressionEditor'),\r\n    width: 1036,\r\n    height: 530,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private expr: ExpressionService,\r\n    public designerState: ProcessDesignerUIState,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    if (this.designerState.schemas[0]) {\r\n      this.schema = this.designerState.schemas[0];\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        this.injectName = this.designerState.schemas[0].entityTypes[0].name;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contextEntities = new Array();\r\n    if (this.designerState.procInstContext.length > 0) {\r\n      for (const variable of this.designerState.procInstContext) {\r\n        this.contextEntities = this.contextEntities.concat([variable]);\r\n      }\r\n    }\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.formalParameterContext.length > 0) {\r\n      for (const variable of this.designerState.formalParameterContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.participantContext.length > 0) {\r\n      for (const variable of this.designerState.participantContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerState.activityComponentContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerState.processVariableContext) {\r\n        if (!this.contextEntities.some(c => c.key === variable.key)) {\r\n          this.contextEntities = this.contextEntities.concat([variable]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    const result = this.compute.getExpr();\r\n    this.value = this.convertToValue(result.text);\r\n    const object = { value: this.value, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  /**\r\n   * 切换表达式类型（简易表达式<--->高级表达式）\r\n   */\r\n  changeType() {\r\n    this.compute.changeType();\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private convertToValue(val: string): string {\r\n    if (val) {\r\n      if (val.substring(9, val.length - 2)) {\r\n        return val;\r\n      } else {\r\n        return '';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\nexport class ExpressionEditorConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data) {\r\n      return data;\r\n    } else {\r\n      return this.localePipe.transform(\"component.expressionEditor.notSet\");\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Optional, ChangeDetectorRef, LOCALE_ID, Inject } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LookupGridComponent, PickedResult } from '@farris/ui-lookup';\r\nimport { Observable, of } from 'rxjs';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-jump-scope',\r\n  templateUrl: './jump-scope.component.html',\r\n  styleUrls: ['./jump-scope.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class JumpScopeComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.category = data.Category;\r\n      this.defaultType = data.DefaultType;\r\n      // 取到DefaultActivity的节点Id，遍历出Name绑定到radiogroup上去（defaultacty）\r\n      const acty: string = data.DefaultActivity;\r\n      if (acty != null) {\r\n        for (const act of this.uistate.allActList) {\r\n          if (act.Id === acty) {\r\n            this.defaultacty = act.Name;\r\n          }\r\n        }\r\n      }\r\n      // 取到DestinationActivities的节点Id，遍历出Id和Name绑定到radiogroup上去（actis）\r\n      const strs: string[] = data.DestinationActivities;\r\n      if (strs && strs.length > 0) {\r\n        for (const str of strs) {\r\n          const name = this.uistate.allActList.filter(act => act.Id === str)[0].Name;\r\n          // const acti = { Id: str, Name: name };\r\n          this.actis.push(name);\r\n        }\r\n      }\r\n    } else {\r\n      this.category = 'OutConnectNode';\r\n      this.defaultType = 'FirstNode';\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.jumpScope.targetNodeOptions'),\r\n    width: 520,\r\n    height: 460,\r\n    showButtons: true\r\n  };\r\n  // 活动节点表信息============================================\r\n  @ViewChild('allActisTable') allActisTable: LookupGridComponent;\r\n  @ViewChild('allActisDialog') allActisDialog: DialogComponent;\r\n  @ViewChild('actTable') actTable: DatagridComponent;\r\n  @ViewChild('lookup') lookup: LookupGridComponent;\r\n  @ViewChild('userActisDialog') userActis: LookupGridComponent;\r\n\r\n  cols = [\r\n    { title: this.localePipe.transform('component.jumpScope.name'), field: 'Name', width: 60, searchField: 'Name' },\r\n    { title: 'ID', field: 'Id', width: 90, searchField: 'Id' }];\r\n  // ==========================================================\r\n  actis = [];\r\n  fullActis = [];\r\n  defaultacty = '';\r\n  categoryListItems = [\r\n    { value: 'OutConnectNode', name: this.localePipe.transform('component.jumpScope.outConnectNode')},\r\n    { value: 'Global', name: this.localePipe.transform('component.jumpScope.global')},\r\n    { value: 'AfterNodes', name: this.localePipe.transform('component.jumpScope.afterNodes')},\r\n    { value: 'SpecifiedSet', name: this.localePipe.transform('component.jumpScope.specifiedSet') }];\r\n  category = '';\r\n  defaultType = '';\r\n  defaultTypeListItems = [\r\n    { value: 'FirstNode', name: this.localePipe.transform('component.jumpScope.firstNode')},\r\n    { value: 'NullNode', name: this.localePipe.transform('component.jumpScope.nullNode')},\r\n    { value: 'SpecifyNode', name: this.localePipe.transform('component.jumpScope.specifyNode') }];\r\n  defaultActivity = '';\r\n  pageInfo = {\r\n    pageIndex: 1,\r\n    pageList: [10, 20, 30, 50],\r\n    pageSize: 20\r\n  };\r\n  outConnectNode: true;\r\n  total: number;\r\n  constructor(\r\n    public uistate: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n    ) {\r\n      this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n     }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      let value;\r\n      const list = [];\r\n      // 重新打开设置界面，没有进行节点配置的情况（DefaultActivity）\r\n      if ( this.defaultActivity === '' && this.defaultacty !== '') {\r\n        for (const defAct of this.uistate.allActList) {\r\n          if (defAct.Name === this.defaultacty) {\r\n            this.defaultActivity = defAct.Id;\r\n          }\r\n        }\r\n      }\r\n      // 重新打开设置界面，没有进行节点配置的情况（DestinationActivities）\r\n      if (this.fullActis.length === 0 && this.actis.length > 0) {\r\n        for (const act of this.actis) {\r\n          for (const allAct of this.uistate.allActList) {\r\n            if (act === allAct.Name) {\r\n              list.push(allAct.Id);\r\n            }\r\n          }\r\n        }\r\n      } else if (this.category === 'SpecifiedSet' && this.fullActis && this.fullActis.length > 0) {\r\n        // 附加节点的id传给模型上的DestinationActivities\r\n        this.fullActis.forEach(act => list.push(act.Id));\r\n      }\r\n      value = {\r\n        Category: this.category,\r\n        DefaultType: this.defaultType,\r\n        DefaultActivity: this.defaultActivity,\r\n        DestinationActivities: list,\r\n      };\r\n      const object = { value, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.category) {\r\n      this.message.warning(this.localePipe.transform('component.jumpScope.noSetTargetNode'));\r\n      return false;\r\n    }\r\n    // if (this.category === 'SpecifiedSet' && Object.prototype.isPrototypeOf(this.actis)) {\r\n    //   this.message.info('尚未选择附加节点，请了解！');\r\n    //   return false;\r\n    // }\r\n    if (this.defaultType === 'SpecifyNode' && this.defaultacty === '') {\r\n      this.message.warning(this.localePipe.transform('component.jumpScope.noSetSpecifyNode'));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  searchDefault(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageInfo.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageInfo.pageSize;\r\n    const search = arg.search;\r\n\r\n    this.loadDefault(search);\r\n  }\r\n\r\n  loadDefault(search?: { field: string, value: string}) {\r\n    const start = (this.pageInfo.pageIndex - 1) * this.pageInfo.pageSize;\r\n    const end = start + this.pageInfo.pageSize;\r\n    let items = [];\r\n    if (search && search.value) {\r\n      if (search.field === '*') {\r\n        items = this.uistate.allActList.filter(i => i.Name.indexOf(search.value) > -1 || i.Id.indexOf(search.value) > -1);\r\n      } else {\r\n        items = this.uistate.allActList.filter(f => f[search.field].indexOf(search.value) > -1);\r\n      }\r\n    } else {\r\n      items = this.uistate.allActList;\r\n    }\r\n    this.total = items.length;\r\n    // this.items = items;\r\n    if(items){\r\n      this.allActisTable.componentRef.instance.loadData({\r\n        data: items\r\n      });\r\n    }\r\n  }\r\n\r\n  searchSelect(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageInfo.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageInfo.pageSize;\r\n    const search = arg.search;\r\n\r\n    this.loadSelect(search);\r\n  }\r\n\r\n  loadSelect(search?: { field: string, value: string}) {\r\n    const start = (this.pageInfo.pageIndex - 1) * this.pageInfo.pageSize;\r\n    const end = start + this.pageInfo.pageSize;\r\n    let items = [];\r\n    if (search && search.value) {\r\n      if (search.field === '*') {\r\n        items = this.uistate.allActList.filter(i => i.Name.indexOf(search.value) > -1 || i.Id.indexOf(search.value) > -1);\r\n      } else {\r\n        items = this.uistate.allActList.filter(f => f[search.field].indexOf(search.value) > -1);\r\n      }\r\n    } else {\r\n      items = this.uistate.allActList;\r\n    }\r\n    this.total = items.length;\r\n    // this.items = items;\r\n    if(items){\r\n      this.userActis.componentRef.instance.loadData({\r\n        data: items\r\n      });\r\n    }\r\n  }\r\n\r\n  actisSelect = (rowData): Observable<PickedResult> => {\r\n    // 附加节点的帮助后事件，把选中的数据赋给fullActis（此处处理的目的是为了显示Name同时取Id值）\r\n    // console.log(rowData);\r\n    this.fullActis = rowData;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  defaultActivitySelect = (rowData): Observable<PickedResult> => {\r\n    // 默认节点的帮助后事件，把选中的id赋给defaultActivity（此处处理的目的是为了显示Name同时取Id值）\r\n    this.defaultActivity = rowData.Id;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  deleteRow() {\r\n    if (this.actTable.selectedRow && this.actTable.selectedRow.data) {\r\n      const i = this.actis.findIndex(d => d.id === this.actTable.selectedRow.data.id);\r\n      this.actis.splice(i, 1);\r\n      this.actTable.loadData(this.actis);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.jumpScope.selectedRow'));\r\n    }\r\n  }\r\n}\r\nexport class JumpScopeConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(): string {\r\n    return this.localePipe.transform('component.jumpScope.set');\r\n  }\r\n}\r\n\r\n","export class BackWardRule {\r\n    static Clr_Type_ID = 'wf.BackWardRule';\r\n\r\n    readonly ClrTypeID: string = BackWardRule.Clr_Type_ID;\r\n    TargetRef: string;\r\n    SelectTargetAble: boolean;\r\n    WaitReturn: boolean;\r\n    DynamicBackWardRuleAble: boolean;\r\n    SelectTargetList:Array<string>;\r\n    ResubmitEffect: ResubmitEffect;\r\n}\r\nexport enum ResubmitEffect {\r\n\r\n  sequence = 'sequence',\r\n\r\n  backToMe = 'backToMe',\r\n\r\n  backToCurrentNode = 'backToCurrentNode'\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, AfterViewInit, ChangeDetectorRef, Optional, LOCALE_ID, Inject } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { Observable, of } from 'rxjs';\r\nimport { PickedResult, LookupGridComponent } from '@farris/ui-lookup';\r\nimport { ResubmitEffect } from './backward-rule.entity';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'procDesigner-backward-rule',\r\n  templateUrl: './backward-rule.component.html',\r\n  styleUrls: ['./backward-rule.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class BackwardRuleComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Input() editorParams: any = {};\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.selectAbleChecked = data.SelectTargetAble;\r\n      if(!data.SelectTargetAble) {\r\n        this.selectTargetList = new Array<string>();\r\n      }else {\r\n        this.selectTargetList = data.SelectTargetList;\r\n      }\r\n      this.waitReturnChecked = data.WaitReturn;\r\n      this.dynamicBackWardRuleAbleChecked = data.DynamicBackWardRuleAble;\r\n      this.resubmitEffect = data.ResubmitEffect;\r\n      if (!data.TargetRef) {\r\n        this.targetRef = 'Empty';\r\n      } else {\r\n        this.targetRef = data.TargetRef;\r\n      }\r\n      if (this.resubmitEffect === null) {\r\n        this.resubmitEffect = ResubmitEffect.sequence;\r\n      }\r\n      const strs: string[] = data.SelectTargetList;\r\n      if (strs && strs.length > 0) {\r\n        for (const str of strs) {\r\n          if(this.listItems.filter(act => act.Id === str)[0]) {\r\n            const name = this.listItems.filter(act => act.Id === str)[0].Name;\r\n            this.displayTestText.push(name);\r\n          }\r\n          // const acti = { Id: str, Name: name };\r\n        }\r\n      }\r\n      const act = this.listItems.find(item => item.Id === this.targetRef);\r\n      if (act) {\r\n        this.displayText = act.Name;\r\n      } else {\r\n        this.displayText = '';\r\n        setTimeout(() => {\r\n          this.message.warning(this.localePipe.transform('component.backwardRule.reEdit'));\r\n        }, 500);\r\n      }\r\n    }\r\n  }\r\n  @Input() nodeType: 'UserActivity' | 'CallActivitySubProcess' = 'UserActivity';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('hlp') hlp: LookupGridComponent;\r\n  @ViewChild('hlpScope') hlpScope: LookupGridComponent;\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.backwardRule.backwardRule'),\r\n    width: 760,\r\n    height: 505,\r\n    showButtons: true\r\n  };\r\n  displayText: string;\r\n  displayTestText = [];\r\n  fullActs = [];\r\n  listItems = [\r\n    { Id: 'InitialActityId', Name: this.localePipe.transform('component.backwardRule.initialActityId') },\r\n    { Id: 'PrecursorActivityId', Name: this.localePipe.transform('component.backwardRule.precursorActivityId') },\r\n    { Id: 'Empty', Name: this.localePipe.transform('component.backwardRule.empty') }\r\n  ];\r\n\r\n  items = [];\r\n  itemsTemp = [];\r\n  itemsBackScope = [];\r\n  itemsBackScopeTemp = [];\r\n\r\n  columns = [\r\n    { title: this.localePipe.transform('component.backwardRule.name'), field: 'Name', width: 100, searchField: 'Name' },\r\n    { title: this.localePipe.transform('component.backwardRule.id'), field: 'Id', width: 100, searchField: 'Id' },\r\n  ];\r\n  selectAbleChecked = false;\r\n  waitReturnChecked = false;\r\n  resubmitEffect: ResubmitEffect;\r\n  resubmitEffectOptions = [\r\n    { value: ResubmitEffect.sequence, text: this.localePipe.transform('component.backwardRule.sequence') },\r\n    { value: ResubmitEffect.backToMe, text: this.localePipe.transform('component.backwardRule.backToMe') },\r\n    { value: ResubmitEffect.backToCurrentNode, text: this.localePipe.transform('component.backwardRule.backToCurrentNode') },\r\n  ];\r\n  dynamicBackWardRuleAbleChecked = false;\r\n  targetRef = this.listItems[0].Id;\r\n  selectTargetList = new Array<string>();\r\n  popover = '1.顺序流转:按照流转线顺序进行流转; 2.返回我:完成策略为抢占：只给驳回人创建任务,完成策略为会签：驳回人与未审批人收到新任务，已审批人员自动审批通过; 3.返回本节点:实际效果受“再次进入节点时，办理人是否是节点已办人员影响”选项的影响';\r\n  pageInfo = {\r\n    pageIndex: 1,\r\n    pageList: [10, 20, 30, 50],\r\n    pageSize: 20\r\n  };\r\n\r\n  total: number;\r\n  totalBackScope: number;\r\n\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    private notify: NotifyService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.listItems = this.listItems.concat(this.uiState.userActList);\r\n    this.items = this.listItems;\r\n    this.itemsBackScope = this.listItems;\r\n    this.total = this.listItems.length;\r\n    this.totalBackScope = this.listItems.length;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.nodeType = this.editorParams.nodeType;\r\n    if (this.nodeType !== 'UserActivity') {\r\n      this.listItems = this.listItems.filter(i => i.Id !== 'Empty');\r\n      this.items = this.listItems;\r\n      this.total = this.listItems.length;\r\n    }\r\n    this.itemsBackScope = this.listItems.filter(i => i.Id !== 'Empty' && i.Id !== 'PrecursorActivityId');\r\n    this.totalBackScope = this.itemsBackScope.length;\r\n    this.itemsTemp = this.deepCloneDefine(this.items);\r\n    this.itemsBackScopeTemp = this.deepCloneDefine(this.itemsBackScope);\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  selectAbleClick() {\r\n    if (this.uiState.propertyData.ClrTypeID === 'wf.UserActivity'\r\n      && this.uiState.propertyData.CompleteStrategy !== this.uiState.completeIterator[0].key\r\n      && this.selectAbleChecked === true) {\r\n      this.message.info(this.localePipe.transform('component.backwardRule.selectAbleClick'), () => {\r\n        this.selectAbleChecked = false;\r\n      });\r\n    }\r\n    if(this.selectAbleChecked == false) {\r\n      this.displayTestText = [];\r\n    }\r\n  }\r\n  waitReturnClick() {\r\n    this.waitReturnChecked = !this.waitReturnChecked;\r\n  }\r\n  dynamicBackWardRuleAbleClick() {\r\n    this.dynamicBackWardRuleAbleChecked = !this.dynamicBackWardRuleAbleChecked;\r\n  }\r\n  dictPicked = (arg: any): Observable<PickedResult> => {\r\n    this.targetRef = arg.Id;\r\n    this.displayText = arg.Name;\r\n    if (arg.Id === 'Empty' && !this.selectAbleChecked) {\r\n      this.selectAbleChecked = true;\r\n      this.notify.info(this.localePipe.transform('component.backwardRule.dictPicked'));\r\n    }\r\n    return of({ closeDialog: true });\r\n  }\r\n  dictPickedTest = (arg: any): Observable<PickedResult> => {\r\n    this.fullActs = arg;\r\n    return of({ closeDialog: true });\r\n  }\r\n\r\n  beforeOpen = (): Observable<boolean> => {\r\n    this.items = this.deepCloneBackDefine(this.itemsTemp);\r\n    return of(true);\r\n  }\r\n\r\n  beforeOpenTest = (): Observable<boolean> => {\r\n    this.itemsBackScope = this.deepCloneBackDefine(this.itemsBackScopeTemp);\r\n    return of(true);\r\n  }\r\n\r\n  clickOK() {\r\n    const list = [];\r\n    // 重新打开设置界面，没有进行节点配置的情况（DestinationActivities）\r\n    if (this.fullActs.length === 0 && this.displayTestText.length > 0) {\r\n      for (const act of this.displayTestText) {\r\n        for (const allAct of this.listItems) {\r\n          if (act === allAct.Name) {\r\n            list.push(allAct.Id);\r\n          }\r\n        }\r\n      }\r\n    } else if (this.fullActs && this.fullActs.length > 0) {\r\n      // 附加节点的id传给模型上的DestinationActivities\r\n      this.fullActs.forEach(act => {\r\n        if(this.uiState.userActList.some(u => u.Id == act.Id)) {\r\n          list.push(act.Id)\r\n        }\r\n      });\r\n    }\r\n    const backWardRule = {\r\n      TargetRef: this.getTargetRef(),\r\n      SelectTargetAble: this.selectAbleChecked,\r\n      WaitReturn: this.waitReturnChecked,\r\n      DynamicBackWardRuleAble: this.dynamicBackWardRuleAbleChecked,\r\n      SelectTargetList: list,\r\n      ResubmitEffect: this.resubmitEffect\r\n    };\r\n    const object = { value: backWardRule, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  pagerChanged(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageSize;\r\n    const search = {\r\n      field: arg.searchValue.searchField,\r\n      value: arg.searchValue.searchValue\r\n    };\r\n    this.load(search);\r\n  }\r\n\r\n  pagerChangedBackScope(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageSize;\r\n    const search = {\r\n      field: arg.searchValue.searchField,\r\n      value: arg.searchValue.searchValue\r\n    };\r\n    this.loadBackScope(search);\r\n  }\r\n\r\n  pageSizeChange(arg: any) {\r\n    console.log(arg);\r\n    this.pageInfo.pageIndex = arg.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageSize;\r\n    const search = {\r\n      field: arg.searchValue.searchField,\r\n      value: arg.searchValue.searchValue\r\n    };\r\n    this.load(search);\r\n  }\r\n\r\n  pageSizeChangeBackScope(arg: any) {\r\n    console.log(arg);\r\n    this.pageInfo.pageIndex = arg.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageSize;\r\n    const search = {\r\n      field: arg.searchValue.searchField,\r\n      value: arg.searchValue.searchValue\r\n    };\r\n    this.loadBackScope(search);\r\n  }\r\n\r\n  search(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageInfo.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageInfo.pageSize;\r\n    const search = arg.search;\r\n\r\n    this.load(search);\r\n  }\r\n\r\n  searchBackScope(arg: any) {\r\n    this.pageInfo.pageIndex = arg.pageInfo.pageIndex;\r\n    this.pageInfo.pageSize = arg.pageInfo.pageSize;\r\n    const search = arg.search;\r\n\r\n    this.loadBackScope(search);\r\n  }\r\n\r\n  load(search?: { field: string, value: string}) {\r\n    const start = (this.pageInfo.pageIndex - 1) * this.pageInfo.pageSize;\r\n    const end = start + this.pageInfo.pageSize;\r\n    let items = [];\r\n    if (search) {\r\n      if (search.field === '*') {\r\n        items = this.listItems.filter(i => i.Name.indexOf(search.value) > -1 || i.Id.indexOf(search.value) > -1);\r\n      } else {\r\n        items = this.listItems.filter(f => f[search.field].indexOf(search.value) > -1);\r\n      }\r\n    } else {\r\n      items = this.listItems;\r\n    }\r\n    this.total = items.length;\r\n    this.items = items;\r\n    this.hlp.componentRef.instance.loadData({\r\n      data: this.items\r\n    });\r\n  }\r\n\r\n  loadBackScope(search?: { field: string, value: string}) {\r\n    const start = (this.pageInfo.pageIndex - 1) * this.pageInfo.pageSize;\r\n    const end = start + this.pageInfo.pageSize;\r\n    let itemsBackScope = [];\r\n    if (search) {\r\n      if (search.field === '*') {\r\n        itemsBackScope = this.listItems.filter(i => i.Name.indexOf(search.value) > -1 || i.Id.indexOf(search.value) > -1);\r\n      } else {\r\n        itemsBackScope = this.listItems.filter(f => f[search.field].indexOf(search.value) > -1);\r\n      }\r\n    } else {\r\n      itemsBackScope = this.listItems;\r\n    }\r\n    this.totalBackScope = itemsBackScope.length;\r\n    this.itemsBackScope = itemsBackScope;\r\n    this.hlpScope.componentRef.instance.loadData({\r\n      data: this.itemsBackScope\r\n    });\r\n  }\r\n\r\n  private getTargetRef() {\r\n    if (this.targetRef === 'Empty') {\r\n      return '';\r\n    } else {\r\n      return this.targetRef;\r\n    }\r\n  }\r\n\r\n  //为了打开后仍然显示最初数据，而不是过滤后的数据\r\n  deepCloneDefine(target: any[]) {\r\n    let result = [];\r\n    target.forEach(t => result.push(JSON.stringify(t)));\r\n    return result;\r\n  }\r\n\r\n  deepCloneBackDefine(target: any[]) {\r\n    let result = [];\r\n    target.forEach(t => result.push(JSON.parse(t)));\r\n    return result;\r\n  }\r\n\r\n}\r\nexport class BackwardRuleConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data) {\r\n      return this.localePipe.transform('component.backwardRule.set');\r\n    }\r\n    return this.localePipe.transform('component.backwardRule.notSet');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { PerformerEntity } from './entities/performer.entity';\r\nimport { BizComponentEntity } from '../../domain/entities/biz-component.entity';\r\nimport { ReportingLineDataEntity } from './views/reporting-line/reporting-line-data.entity';\r\nimport { PerformerInfo } from './entities/performer-info.entity';\r\nimport { PerformerDescription } from './entities/performer-description';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\n\r\n@Injectable()\r\nexport class PerformerUIState {\r\n    performersList: PerformerDescription[] = [];\r\n    curPerformer: any;\r\n    typeCollection = [\r\n        { text: '用户', value: 'wf.UserParticipantExpression' },\r\n        { text: '变量参与者', value: 'wf.VariableParticipantExpression' },\r\n        { text: '岗位', value: 'wf.PositionParticipantExpression' },\r\n        { text: '构件参与者', value: 'wf.ComponentParticipantExpression' },\r\n        { text: '汇报关系', value: 'wf.ReportingLineParticipantExpression'},\r\n        { text: '矩阵', value: 'wf.MatrixParticipantExpression'},\r\n        { text: '历史活动办理人', value: 'wf.ActivityExecutorParticipantExpression' },\r\n        { text: '单位/部门', value: 'wf.OrganizationParticipantExpression'}\r\n    ];\r\n\r\n    performerInfo: PerformerInfo = {\r\n        performers: [],\r\n        variablePerformers: [],\r\n        components: [],\r\n        reportingLines: [],\r\n        matrixParticipants: [],\r\n        activityExecutors: [],\r\n        organizationParticipants: [],\r\n        options: null,\r\n        isAllScope: false\r\n    };\r\n\r\n    constructor(private uiState: ProcessDesignerUIState) {\r\n        if (this.uiState.scene === 'inSuite') {\r\n            this.typeCollection = [\r\n                { text: '用户', value: 'wf.UserParticipantExpression' },\r\n                { text: '变量参与者', value: 'wf.VariableParticipantExpression' },\r\n                { text: '角色', value: 'wf.PositionParticipantExpression' },\r\n                { text: '构件参与者', value: 'wf.ComponentParticipantExpression' },\r\n                { text: '汇报关系', value: 'wf.ReportingLineParticipantExpression' },\r\n                { text: '矩阵', value: 'wf.MatrixParticipantExpression' },\r\n                { text: '历史活动办理人', value: 'wf.ActivityExecutorParticipantExpression' },\r\n                { text: '单位/部门', value: 'wf.OrganizationParticipantExpression' }\r\n            ];\r\n        } else {\r\n            this.typeCollection = [\r\n                { text: '用户', value: 'wf.UserParticipantExpression' },\r\n                { text: '变量参与者', value: 'wf.VariableParticipantExpression' },\r\n                { text: '岗位', value: 'wf.PositionParticipantExpression' },\r\n                { text: '构件参与者', value: 'wf.ComponentParticipantExpression' },\r\n                { text: '汇报关系', value: 'wf.ReportingLineParticipantExpression' },\r\n                { text: '矩阵', value: 'wf.MatrixParticipantExpression' },\r\n                { text: '历史活动办理人', value: 'wf.ActivityExecutorParticipantExpression' },\r\n                { text: '单位/部门', value: 'wf.OrganizationParticipantExpression' }\r\n            ];\r\n        }\r\n    }\r\n\r\n    clearPerformer() {\r\n        this.performerInfo.performers = new Array();\r\n        this.performerInfo.components = new Array();\r\n        this.performerInfo.reportingLines = new Array();\r\n        this.performerInfo.matrixParticipants = new Array();\r\n        this.performerInfo.activityExecutors = new Array();\r\n        this.performerInfo.organizationParticipants = new Array();\r\n\r\n        this.performersList = new Array();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class PerformerRepository {\r\n\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { PerformerEditComponent } from './views/performer-edit/performer-edit.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\n\r\n@Injectable()\r\nexport class PerformerViewModel {\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private modalService: BsModalService\r\n    ) { }\r\n}\r\n","import { PerformerEntity } from './performer.entity';\r\n\r\nexport class UserPerformerEntity extends PerformerEntity {\r\n  userType: string; // 固定用户还是变量参与者\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\n\r\n@Injectable()\r\nexport class PerformerConfigService {\r\n    private lookupConfig = new ReplaySubject<any>();\r\n    constructor(private http: HttpService) {\r\n        // let rootPath = '';\r\n        // try {\r\n        //     rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n        // } catch (error) {\r\n        // }\r\n        // this.http.get(rootPath + '/platform/runtime/wf/web/wf-proc-designer/assets/config/performerlookupconfig.json').subscribe((data) => {\r\n        this.http.get('/platform/runtime/wf/web/wf-proc-designer/assets/config/performerlookupconfig.json').subscribe((data) => {\r\n            this.lookupConfig.next(data);\r\n        });\r\n    }\r\n\r\n    getLookupConfig(): Observable<any> {\r\n        return this.lookupConfig.asObservable();\r\n    }\r\n}\r\n","import { Component, OnInit, HostBinding, ViewChild, Injector, NgZone, AfterViewInit, ElementRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { UserPerformerEntity } from '../../entities/user-performer.entity';\r\nimport { PerformerConfigService } from '../../performer-config.service';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { PersonnelSelectorComponent } from '@farris/ui-personnel-selector';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n\r\ndeclare var System: any;\r\n@Component({\r\n  selector: 'app-user-performer',\r\n  templateUrl: './user-performer.component.html',\r\n  styleUrls: ['./user-performer.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class UserPerformerComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n\r\n  @ViewChild(PersonnelSelectorComponent) userHelp: PersonnelSelectorComponent;\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n  bindingData: { id?, name?} = {};\r\n  farrisUserHelpShowTabIds = 'recent,organization';\r\n  activeTabId = 'organization';\r\n  selectedUserIds =  '';\r\n  userTypeCollection = [\r\n    { text: this.localePipe.transform('component.userPerformer.regularUser'), value: 'user' },\r\n    { text: this.localePipe.transform('component.userPerformer.variablePart'), value: 'variable' }\r\n  ];\r\n  userType = this.userTypeCollection[0].value;\r\n  variableOrgTypes = [\r\n    { name: this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' },\r\n    { name: this.localePipe.transform('component.userPerformer.administrative_organization'), value: 'Administrative_organization' }\r\n  ];\r\n  curOrgType = this.variableOrgTypes[0].value;\r\n  hasAdminOrg = false;\r\n  userTypeButtonNeedShow = false; // 用户类型单选按钮是否需要显示\r\n  multiSelect = true; //选人组件是否支持多选（编辑用户时只能单选）\r\n  condition: string;\r\n  users: UserPerformerEntity[] = [];\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private injector: Injector,\r\n    private lookupConfig: PerformerConfigService,\r\n    private ngZone: NgZone,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n    private http?: HttpService,\r\n    private message?: MessagerService\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    const url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';\r\n    this.http.get(url).subscribe((data: any) => {\r\n      this.hasAdminOrg = data;\r\n      // inSuite场景，变量参与者场景下显示用户类型\r\n      if (this.designerUIState.scene === 'inSuite' && this.userType === 'variable') {\r\n        this.userTypeButtonNeedShow = true;\r\n      } else {\r\n        this.userTypeButtonNeedShow = data && (this.userType === 'variable' || this.userType === null);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n  clear(data: any) {\r\n    this.bindingData = {};\r\n    this.users = [];\r\n    this.selectedUserIds = '';\r\n    this.variableOrgTypes = [\r\n      { name: this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' },\r\n      { name: this.localePipe.transform('component.userPerformer.administrative_organization'), value: 'Administrative_organization' }\r\n    ];\r\n  }\r\n  selectUsers(data: any) {\r\n    // 固定用户\r\n    if (this.userType === this.userTypeCollection[0].value) {\r\n      this.lookupConfig.getLookupConfig().subscribe(re => {\r\n        // 项目配置了自己的帮助时\r\n        if (re.user && re.user.impl) {\r\n          System.import(re.user.impl)\r\n            .then((moduleFactorys: any) => {\r\n              const moduleFactory: any = Object.values(moduleFactorys)[0];\r\n              const moduleRef = moduleFactory.create(this.injector);\r\n              moduleRef.instance.showHelp().subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                  this.users = data.map(u => {\r\n                    const user = new UserPerformerEntity(u.id, u.name, 'wf.UserParticipantExpression');\r\n                    user.orgId = u.orgId;\r\n                    user.orgName = u.orgName;\r\n                    user.userType = this.userTypeCollection[0].value;\r\n                    return user;\r\n                  });\r\n                }\r\n              });\r\n            });\r\n        } else { // 加载默认帮助\r\n          this.userHelp.farrisDialogshow();\r\n        }\r\n      });\r\n    } else {\r\n      this.showExprHelp();\r\n    }\r\n  }\r\n  editConditon() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版\r\n    this.expr.addExpressionText(this.condition);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.condition = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  usersSelect(event: any) {\r\n    this.users = event.data.map(u => {\r\n      const user = new UserPerformerEntity(u.userId, u.name, 'wf.UserParticipantExpression');\r\n      user.orgId = u.defaultOrgId;\r\n      user.orgName = u.orgAllPath;\r\n      user.userType = this.userTypeCollection[0].value;\r\n\r\n      return user;\r\n    });\r\n  }\r\n  showExprHelp() {\r\n    // this.expr.clearContext();\r\n    this.expr.setEditPattern(ExprEditMode.Advanced);\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (this.users.length > 0) {\r\n      this.expr.addExpressionText(this.users[0].performerId);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      const user = new UserPerformerEntity(expressioninfo, '', 'wf.UserParticipantExpression');\r\n      user.tag = 'expression';\r\n      user.performerName = this.variableParticipantName(expressioninfo);\r\n      user.userType = this.userTypeCollection[1].value;\r\n      if (this.variableParticipantName(expressioninfo) === '') {\r\n        this.message.error(this.localePipe.transform('component.userPerformer.cantUseContext'));\r\n        this.users = [];\r\n      } else {\r\n        this.users = [user];\r\n      }\r\n      for (const c of this.designerUIState.participantContext) { // 根据表达式中的函数名判断是否使用的是上下文变量,除三种特殊上下文变量其余放开限制\r\n        if (user.performerId.indexOf(c.key) >= 0) {\r\n          this.variableOrgTypes = [\r\n            { name: this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' }];\r\n          break;\r\n        } else {\r\n          this.variableOrgTypes = [\r\n            { name: this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' },\r\n            { name: this.localePipe.transform('component.userPerformer.administrative_organization'), value: 'Administrative_organization' }\r\n          ];\r\n        }\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  getPerformers() {\r\n    this.users.map(user => {\r\n      if (user.orgId === undefined) {\r\n        user.orgType = this.curOrgType;\r\n        return user;\r\n      }\r\n    });\r\n    if (!this.condition) {\r\n      this.condition = '';\r\n    }\r\n    if (this.condition || this.condition === '') {\r\n      this.users = this.users.map(user => {\r\n        user.condition = this.condition;\r\n        return user;\r\n      });\r\n    }\r\n    return this.users;\r\n  }\r\n  private variableParticipantName(expr: string): string {\r\n    for (const c of this.designerUIState.participantContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        if (this.curOrgType !== 'Sys') { // 行政人员类型不允许使用上下文变量\r\n          return '';\r\n        }\r\n        return c.name;\r\n      }\r\n    }\r\n    for (const c of this.designerUIState.processVariableContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    return JSON.parse(expr).expr;\r\n  }\r\n  orgTypeChange(data: any) {\r\n    if (data === 'Sys') {\r\n      this.curOrgType = this.variableOrgTypes[0].value;\r\n    } else {\r\n        this.curOrgType = this.variableOrgTypes[1].value;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ComponentPerformerService {\r\n    constructor(private http: HttpService) {\r\n\r\n    }\r\n    getLookUpData(helpId: string, su: string, pageIndex: number, pageSiza: number, search?: any): Observable<any> {\r\n        let url = `/api/runtime/wf/v1.0/dtProcDefs/getHelpData?helpId=${helpId}&pageIndex=${pageIndex}&pageSize=${pageSiza}`;\r\n        if (search) {\r\n            url += `&searchValue=${JSON.stringify(search)}`;\r\n        }\r\n        return this.http.get(url);\r\n    }\r\n    getHelpMetaData(helpId: string, su: string): Observable<any> {\r\n        const url = `/api/runtime/lcm/v1.0/rt-metadatas/${helpId}`;\r\n        return this.http.get(url);\r\n    }\r\n}\r\n","import { ProcessDeUtil } from '../../../../domain/process-de-util';\r\n\r\nexport class ComponentPerformer {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n    }\r\n    id: string;\r\n    name: string;\r\n    metadataId: string;\r\n    methodCode: string;\r\n    methodName: string;\r\n    actualParameters: Array<ActualParameter>;\r\n    condition: string;\r\n}\r\n\r\nexport class ActualParameter {\r\n    code: string;\r\n    value: string;\r\n    valueText: string;\r\n    tag: string;\r\n    fetchValueMode?: any;\r\n    fetchValueSetting?: any;\r\n}\r\n","import { Component, OnInit, ComponentFactoryResolver, Injector, Input, ViewChild, ElementRef, HostBinding, AfterViewInit, NgZone, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { CommonComponentUiRTService, SelectorResult } from '@gsp-cmp/ccmp-ui';\r\nimport { SelectMetadataRTComponent, Metadata4RefDto, MetadataDto } from '@gsp-lcm/metadatart-selector';\r\nimport { GspComponent } from '@gsp-cmp/common-component';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { of, forkJoin, Observable, throwError } from 'rxjs';\r\nimport { RowEditParam } from '@farris/ui-datagrid/lib/types';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { ComponentPerformerService } from './component-performer.service';\r\nimport { WebServiceParameter, ParameterFetchValueMode, HelpFetchValueSetting } from '@gsp-cmp/wscmp-models';\r\nimport { ComponentPerformer, ActualParameter } from './component-performer.entity';\r\nimport { ProcessDeUtil } from '../../../../domain/process-de-util';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n@Component({\r\n  selector: 'app-component-performer',\r\n  templateUrl: './component-performer.component.html',\r\n  styleUrls: ['./component-performer.component.scss'],\r\n  providers: [\r\n    ComponentPerformerService,\r\n     WfLocalePipe\r\n  ]\r\n})\r\nexport class ComponentPerformerComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  private componentPerformer: ComponentPerformer;\r\n  @ViewChild(DatagridComponent) grid: DatagridComponent;\r\n  @ViewChild(LookupGridComponent) lookup: LookupGridComponent;\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n  helpId='';\r\n  lookupDisplayText='';\r\n  @Input()\r\n  set component(cmp: ComponentPerformer) {\r\n    if (cmp && cmp.methodCode) {\r\n      this.service.getHelpMetaData(cmp.metadataId, '').subscribe(re => {\r\n        const c = JSON.parse(re.content);\r\n        const operation = c.operations.find(o => o.code === cmp.methodCode);\r\n        if (operation) {\r\n          cmp.actualParameters = cmp.actualParameters.map(a => {\r\n            const p = operation.parameters.find(i => i.code === a.code);\r\n            if (p) {\r\n              return {\r\n                code: a.code,\r\n                name: p.name,\r\n                value: a.value,\r\n                valueText: a.valueText ? a.valueText : a.value,\r\n                description: p.description,\r\n                tag: a.tag,\r\n                fetchValueMode: p.fetchValueMode,\r\n                fetchValueSetting: p.fetchValueSetting\r\n              };\r\n            } else {\r\n              throw new Error(this.localePipe.transform('component.componentPerformer.componentMethod'));\r\n            }\r\n          });\r\n          this.componentPerformer = cmp;\r\n        } else {\r\n          throw new Error(this.localePipe.transform('component.componentPerformer.methodNotExist'));\r\n        }\r\n      });\r\n    } else {\r\n      this.componentPerformer = new ComponentPerformer();\r\n    }\r\n  }\r\n  get component() {\r\n    return this.componentPerformer;\r\n  }\r\n\r\n  curParameter: ActualParameter;\r\n  columns = [\r\n    { field: 'code', width: 60, title: this.localePipe.transform('component.componentPerformer.code') },\r\n    { field: 'name', width: 60, title: this.localePipe.transform('component.componentPerformer.name') },\r\n    { field: 'description', width: 60, title: this.localePipe.transform('component.componentPerformer.description'), showTips: true },\r\n    {\r\n      field: 'valueText', width: 100, title: this.localePipe.transform('component.componentPerformer.valueText'),\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.showExprHelp(e);\r\n          },\r\n          clear: (e) => {\r\n            // 清理valueText，也应该清理value\r\n            e.rowData.value = '';\r\n            for (const p of this.component.actualParameters) {\r\n              if (p.code === e.rowId) {\r\n                p.value = '';\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n  helpInfo = {\r\n    helpId: '',\r\n    su: '',\r\n    columns: [],\r\n    displayType: 'List',\r\n    items: [],\r\n    pageInfo: {\r\n      pageIndex: 1,\r\n      pageList: [10, 20, 30, 50],\r\n      pageSize: 20\r\n    },\r\n    search: { category: 'all'},\r\n    title: this.localePipe.transform('component.componentPerformer.help'),\r\n    total: 100,\r\n    fieldInfo: {\r\n      idField: 'id',\r\n      textField: 'name',\r\n      valueField: 'id'\r\n    }\r\n  };\r\n  cell: any;\r\n  constructor(\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private sessionSrc: SessionService,\r\n    private modalService: BsModalService,\r\n    private componentService: CommonComponentUiRTService,\r\n    private ngZone: NgZone,\r\n    private service: ComponentPerformerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n  selectChanged(event) {\r\n    this.curParameter = event.data;\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    this.curParameter = rowData;\r\n    switch (rowData.fetchValueMode) {\r\n      case ParameterFetchValueMode.express:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              // 清理valueText，也应该清理value\r\n              e.rowData.value = '';\r\n              for (const p of this.component.actualParameters) {\r\n                if (p.code === e.rowId) {\r\n                  p.value = '';\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.none:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.showExprHelp(e);\r\n            },\r\n            clear: (e) => {\r\n              // 清理valueText，也应该清理value\r\n              e.rowData.value = '';\r\n              for (const p of this.component.actualParameters) {\r\n                if (p.code === e.rowId) {\r\n                  p.value = '';\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        break;\r\n      case ParameterFetchValueMode.const:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.enum:\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n        break;\r\n      case ParameterFetchValueMode.help:\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            clickHandle: (e) => {\r\n              this.cell = e;\r\n              this.helpInfo.helpId = (rowData.fetchValueSetting as HelpFetchValueSetting).helpId;\r\n              this.helpInfo.su = (rowData.fetchValueSetting as HelpFetchValueSetting).serviceUnit;\r\n              this.helpInfo.pageInfo = {\r\n                pageIndex: 1,\r\n                pageList: [10, 20, 30, 50],\r\n                pageSize: 20\r\n              };\r\n              this.helpInfo.search = { category: 'all' };\r\n              this.getHelpInfo();\r\n            },\r\n            clear: (e) => {\r\n              // 清理valueText，也应该清理value\r\n              e.rowData.value = '';\r\n              for (const p of this.component.actualParameters) {\r\n                if (p.code === e.rowId) {\r\n                  p.value = '';\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n        break;\r\n    }\r\n    return of(true);\r\n  }\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(e: any) {\r\n    // 文本框编辑同时修改value\r\n    if (e.rowData.fetchValueMode === ParameterFetchValueMode.const || e.rowData.fetchValueMode === ParameterFetchValueMode.enum) {\r\n      this.component.actualParameters[e.rowIndex].value = this.component.actualParameters[e.rowIndex].valueText;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.componentPerformer.name = '';\r\n    this.componentPerformer.metadataId = '';\r\n    this.componentPerformer.methodCode = '';\r\n    this.componentPerformer.methodName = '';\r\n    this.componentPerformer.condition = '';\r\n    this.componentPerformer.actualParameters = new Array();\r\n  }\r\n\r\n  selectComponent() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = 'WebServiceComponent'; // 目前只能根据元数据类型过滤，后续添加标签过滤\r\n    compRef.instance.selectedMetadata.subscribe(($event: Metadata4RefDto) => {\r\n      try {\r\n        const meta: MetadataDto = $event.metadata;\r\n        this.openComponentSelectorNew(meta.id, this.sessionSrc.getUserSessionId());\r\n      } catch {\r\n        console.log('$event', $event);\r\n        throw new Error(this.localePipe.transform('component.componentPerformer.errorObtaining') + $event);\r\n      }\r\n    });\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.componentPerformer.componentSelection'),\r\n      width: 980,\r\n      height: 548,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n  private openComponentSelectorNew(metadataId: string, sessionId: string) {\r\n    this.componentService.openSelector(metadataId, sessionId).subscribe(\r\n      (selectorResult: SelectorResult) => {\r\n        selectorResult.confirmEvent.subscribe(\r\n          (result: GspComponent) => {\r\n            if (result) {\r\n              this.component.name = result.name;\r\n              this.component.metadataId = result.id;\r\n              this.component.methodCode = result.operations[0].code;\r\n              this.component.methodName = result.operations[0].name;\r\n              this.component.actualParameters = [];\r\n\r\n              if (result.operations[0].parameters && result.operations[0].parameters.length > 0) {\r\n                this.component.actualParameters = result.operations[0].parameters\r\n                  .map((p: WebServiceParameter) => (\r\n                    {\r\n                      code: p.code,\r\n                      name: p.name,\r\n                      value: '',\r\n                      valueText: '',\r\n                      description: p.description,\r\n                      fetchValueMode: p.fetchValueMode,\r\n                      fetchValueSetting: p.fetchValueSetting\r\n                    }) as any);\r\n              }\r\n            }\r\n          });\r\n      });\r\n  }\r\n  showExprHelp(e: any) {\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.buildExpression().then((d: string) => {\r\n      if (d) {\r\n        e.formControl.setValue(d);\r\n        e.instance.cd.detectChanges();\r\n        e.rowData.value = d;\r\n        for (const p of this.component.actualParameters) {\r\n          if (p.code === e.rowId) {\r\n            p.value = d;\r\n          }\r\n        }\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  getPerformers() {\r\n    this.grid.endCellEdit();\r\n    console.log(this.component);\r\n    return this.component;\r\n  }\r\n\r\n  private getHelpInfo() {\r\n    // 2023年6月29日 此处获取帮助的结构\r\n    this.service.getHelpMetaData(this.helpInfo.helpId, this.helpInfo.su).subscribe(re => {\r\n      if (re) {\r\n        const meta = re;\r\n        const help = JSON.parse(meta.content) as any;\r\n        this.helpInfo.columns = help.dataSource.columns;\r\n        this.helpInfo.displayType = help.displayType;\r\n        this.helpInfo.fieldInfo = {\r\n          idField: help.idField,\r\n          valueField: help.valueField,\r\n          textField: help.textField\r\n        };\r\n      } else {\r\n        throw new Error(this.localePipe.transform('component.componentPerformer.metadataNotExist'));\r\n      }\r\n    })\r\n    // 打开帮助\r\n    this.lookup.showDialog();\r\n  }\r\n\r\n  /**\r\n   * 帮助前事件\r\n   * @param e\r\n   * @returns\r\n   */\r\n  onDictPicking = (e) => {\r\n    e.instance.http = {\r\n      getData: (url:string, params: any): Observable<any>  => {\r\n        const _url = `/api/runtime/bcc/v1.0/help/data/${this.helpInfo.helpId}`;\r\n        params = Object.assign(params || {}, { withSpecificField: true });\r\n        return this.http.put(_url, params).pipe(\r\n            catchError((e) => {\r\n                if (e.error && e.error.innerMessage && e.error.innerMessage.indexOf('Could not find metadata') > -1) {\r\n                    e.error.Message = this.localePipe.transform('component.componentPerformer.serverSideNotFound');\r\n                }\r\n                return throwError(e);\r\n            })\r\n        )\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  dictPicked = (rowData) => {\r\n    if (this.cell) {\r\n      this.cell.formControl.setValue(this.util.getValue(rowData, this.helpInfo.fieldInfo.textField));\r\n      this.cell.instance.cd.detectChanges();\r\n      this.cell.rowData.value = this.util.getValue(rowData, this.helpInfo.fieldInfo.valueField);\r\n      for (const p of this.component.actualParameters) {\r\n        if (p.code === this.cell.rowId) {\r\n          p.value = this.util.getValue(rowData, this.helpInfo.fieldInfo.valueField);\r\n        }\r\n      }\r\n      return of(true);\r\n    }\r\n  }\r\n  pagerChanged(data: any) {\r\n    if (data) {\r\n      this.helpInfo.pageInfo.pageIndex = data.pageIndex;\r\n      this.helpInfo.pageInfo.pageSize = data.pageSize;\r\n      this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su,\r\n        this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)\r\n        .subscribe(re => {\r\n          this.helpInfo.items = re.items;\r\n          this.helpInfo.title = re.title;\r\n          this.helpInfo.total = re.total;\r\n          this.lookup.loadData(re);\r\n        });\r\n    }\r\n  }\r\n  search(data) {\r\n    console.log(data);\r\n    this.helpInfo.search = { category: 'search' };\r\n    if (data) {\r\n      const searchInfo = {\r\n        searchField: data.field || data.search.field,\r\n        searchValue: data.value || data.search.value\r\n      };\r\n      this.helpInfo.search = Object.assign(this.helpInfo.search, searchInfo);\r\n      this.service.getLookUpData(this.helpInfo.helpId, this.helpInfo.su,\r\n        this.helpInfo.pageInfo.pageIndex, this.helpInfo.pageInfo.pageSize, this.helpInfo.search)\r\n        .subscribe(re => {\r\n          this.helpInfo.items = re.items;\r\n          this.helpInfo.title = re.title;\r\n          this.helpInfo.total = re.total;\r\n          this.lookup.loadData(re);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { ProcessDeUtil } from '../../../../domain/process-de-util';\r\nimport {PerformerEntity} from \"../../entities/performer.entity\";\r\nexport enum ReportingRank {\r\n    DirectSuperior = 'DirectSuperior',\r\n    HigherSuperior = 'HigherSuperior'\r\n}\r\nexport class ReportingLineDataEntity extends PerformerEntity {\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n  reportingLineDefId: string;\r\n  reportingLineDefName: string;\r\n  refOrgId: string;\r\n  refOrgName: string;\r\n  refUserId: string;\r\n  refEmployeeId: string;\r\n  dimension: string;\r\n  condition: string;\r\n  reportingReferObject: string;\r\n}\r\n\r\n","import { ILookupHttpService, RemoteParams, LookupGridResult } from '@farris/ui-lookup';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class WfReportDefHelpService implements ILookupHttpService {\r\n\r\n  constructor(\r\n    private http: HttpService\r\n  ) {\r\n  }\r\n\r\n  getData(url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n    const customData = params.customData;\r\n    const index = params.pageIndex || 1;\r\n    const size = params.pageSize || 20;\r\n    const searchValue = JSON.parse(params.searchValue);\r\n    if (searchValue.searchValue || customData.filter) {\r\n      let query = '{';\r\n      if (searchValue.searchValue) {\r\n        if (searchValue.searchField === '*') {\r\n          query += `\"codeOrNameLike\":\"${searchValue.searchValue}\",`;\r\n        } else {\r\n          query += `\"${searchValue.searchField}\":\"${searchValue.searchValue}\",`;\r\n        }\r\n      }\r\n      if (customData.filter) {\r\n        const keys = Object.keys(customData.filter);\r\n        if (keys && keys.length > 0) {\r\n          for (const key of keys) {\r\n            if (customData.filter[key]) {\r\n              query += `\"${key}\":\"${customData.filter[key]}\",`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (query.substr(query.length - 1, 1) === ',') {\r\n        query = query.substring(0, query.length - 1);\r\n      }\r\n      query += '}';\r\n      query = encodeURIComponent(query);\r\n      query += `&pageIndex=${index}&pageSize=${size}`;\r\n      url += '?pageFilter=' + query;\r\n    } else {\r\n      url += `?pageIndex=${index}&pageSize=${size}`;\r\n    }\r\n    return this.http.get(url).pipe(\r\n      map((re: any) => ({\r\n        items: re.content,\r\n        total: re.totalElements,\r\n        pageInfo: {\r\n          pageIndex: re.pageable.pageNumber + 1,\r\n          pageSize: re.pageable.pageSize,\r\n          pageList: [20, 40, 60, 80, 100],\r\n          enablePager: true\r\n        }\r\n      }))\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { PickedResult, LookupGridComponent, ServerSideToken } from '@farris/ui-lookup';\r\nimport { WfReportDefHelpService } from './wf-report-def-help.service';\r\nimport { WfLocalePipe } from '../../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'app-wf-report-def-help',\r\n  template: `\r\n    <farris-lookup-grid #lookup\r\n      [disabled]=\"disabled\"\r\n      [editable]=\"false\"\r\n      [bindingData]=\"bindingData\"\r\n      [(ngModel)]=\"displayTxt\"\r\n      [columns]=\"columns\"\r\n      [singleSelect]=\"singleSelect\"\r\n      title=\"title\"\r\n      [displayType]=\"'List'\"\r\n      [uri]=\"dataUri\"\r\n      [idField]=\"'id'\"\r\n      [pageIndex]=\"pageIndex\"\r\n      [pageSize]=\"pageSize\"\r\n      [pagination]=\"pagination\"\r\n      [valueField]=\"'id'\"\r\n      [textField]=\"'name'\"\r\n      (clear)=\"afterClear($event)\"\r\n      [dialogWidth]=\"width\"\r\n      [dictPicking]=\"beforeOpen\"\r\n      [dictPicked]=\"dictPicked\">\r\n    </farris-lookup-grid>\r\n  `,\r\n  styles: [],\r\n  providers: [{ provide: ServerSideToken, useClass: WfReportDefHelpService }]\r\n})\r\nexport class WfReportDefHelpComponent implements OnInit {\r\n  /** 标题 */\r\n  @Input() title: string;\r\n  /** 宽度 */\r\n  @Input() width = 550;\r\n  /** 取数源 */\r\n  @Input() sourceType: 'matrixField';\r\n  /** 只读 */\r\n  @Input() disabled = false;\r\n  /** 是否单选 */\r\n  @Input() singleSelect = true;\r\n  /** 是否分页，默认true */\r\n  @Input() pagination = true;\r\n  /** 首次加载第几页，默认1 */\r\n  @Input() pageIndex = 1;\r\n  /** 每页加载数，默认20 */\r\n  @Input() pageSize = 20;\r\n  /** 绑定到帮助上的数据，初始显示值用 */\r\n  @Input() displayTxt: string;\r\n  /** 存储帮助选择的对象 */\r\n  @Input() bindingData: { id: string, name: string };\r\n  /** 过滤条件 */\r\n  @Input() filter: any = {};\r\n\r\n  // @Input() beforeClose: (selectData: any) => Observable<PickedResult>;\r\n  /** 帮助选择后事件 */\r\n  @Output() afterConfirm: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() dialogClosed: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() clear: EventEmitter<any> = new EventEmitter<any>();\r\n  dataUri: string;\r\n  columns: any[] = [];\r\n\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      { title: this.localePipe.transform('component.reportingLine.code'), field: 'code', width: '80', searchField: 'code', },\r\n      { title: this.localePipe.transform('component.reportingLine.name'), field: 'name', width: '100', searchField: 'name', }\r\n    ];\r\n    // this.dataUri = this.uiState.dataUri;\r\n    this.dataUri = '/api/runtime/wf/v1.0/reportingLineDefinitions/query';\r\n    // 必须要有，否则初始选中不起作用\r\n    this.lookUp.mapFields = { id: 'id', name: 'name' };\r\n  }\r\n\r\n  afterClear(arg: any) {\r\n    this.clear.next(arg);\r\n  }\r\n\r\n  /** 帮助前事件,强行传递过滤条件 */\r\n  beforeOpen = (arg) => {\r\n    // 把过滤数据和当前的数据传递到service层\r\n    return of({\r\n      showDialog: true, data: {\r\n        filter: this.filter\r\n      }\r\n    });\r\n  }\r\n  dictPicked = (arg: any): Observable<PickedResult> => {\r\n    this.afterConfirm.next(arg);\r\n    return of({ closeDialog: true });\r\n  }\r\n\r\n\r\n  /** 手动显示帮助 */\r\n  public showHelp() {\r\n    this.lookUp.showDialog();\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, HostBinding, ElementRef, NgZone, Input, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ReportingLineDefinitionEntity } from './reporting-line-definition.entity';\r\nimport { ReportingLineDataEntity } from './reporting-line-data.entity';\r\nimport { reportingLineDimensionEntity } from './reporting-line-dimension.entity';\r\nimport { of } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { SysFarrisTreeHelpComponent } from \"@gsp-sys/sysmgr-ui\";\r\nimport { PerformerEntity } from \"../../entities/performer.entity\";\r\nimport { WfReportDefHelpComponent } from \"./service/wf-report-def-help.component\";\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\ndeclare var System: any;\r\n\r\n@Component({\r\n  selector: 'app-reporting-line',\r\n  templateUrl: './reporting-line.component.html',\r\n  styleUrls: ['./reporting-line.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ReportingLineComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n  treeFilter = '';\r\n  display: string = 'none';\r\n  typeReadOnly = false;\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  defName = '';\r\n\r\n  /**\r\n   * 汇报关系数据\r\n   */\r\n  reportingLineDataEntity: ReportingLineDataEntity = new ReportingLineDataEntity();\r\n\r\n  /**\r\n   * 汇报关系定义列表\r\n   */\r\n  reportingLineDefinitionList: ReportingLineDefinitionEntity[] = [];\r\n  reportingLineDefinition: any;\r\n\r\n  reportingLineDimension: reportingLineDimensionEntity[] = [];\r\n  @ViewChild(WfReportDefHelpComponent) reportingLineDefHelp: WfReportDefHelpComponent;\r\n\r\n  @Input()\r\n  set setReportingLineDataEntity(dataEntity: ReportingLineDataEntity) {\r\n    this.defName = dataEntity.reportingLineDefName;\r\n    this.reportingLineDataEntity = dataEntity;\r\n    const defUrl = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + dataEntity.reportingLineDefId;\r\n    this.http.get(defUrl).subscribe((re: any) => {\r\n      this.reportingLineDefinition = re;\r\n      this.designerUIState.dimensions = [\r\n        { value: 'higherSuperior', text: this.localePipe.transform('component.reportingLine.higherSuperior') }\r\n      ];\r\n      // 兼容历史数据\r\n      if (JSON.parse(this.reportingLineDefinition.dimensions)[0].code !== 'directSuperior') {\r\n        const di = {\r\n          value: 'directSuperior',\r\n          text: this.localePipe.transform('component.reportingLine.directSuperior')\r\n        };\r\n        this.designerUIState.dimensions.push(di);\r\n      }\r\n      for (const dimension of JSON.parse(this.reportingLineDefinition.dimensions)) {\r\n        const di = {\r\n          value: dimension.code,\r\n          text: dimension.name\r\n        };\r\n        this.designerUIState.dimensions.push(di);\r\n      }\r\n    });\r\n    this.users = [dataEntity];\r\n    if (dataEntity.refUserId) {\r\n      this.users[0].performerName = this.variableParticipantName(dataEntity.refUserId);\r\n      this.curReportingRefer = this.reportingReferObjects[1].value;\r\n      this.display = 'block';\r\n    } else if (dataEntity.refEmployeeId) {\r\n      this.users[0].performerName = dataEntity.refEmployeeId;\r\n      this.curReportingRefer = this.reportingReferObjects[2].value;\r\n      this.display = 'block';\r\n    } else {\r\n      this.curReportingRefer = this.reportingReferObjects[0].value;\r\n    }\r\n    if (dataEntity.reportingLineDefId) {\r\n      this.typeReadOnly = true;\r\n    }\r\n  }\r\n\r\n  @ViewChild(LookupGridComponent) lookup: LookupGridComponent;\r\n  @ViewChild(SysFarrisTreeHelpComponent) orgHelp: SysFarrisTreeHelpComponent;\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  @ViewChild('inputGroup1') inputGroup1: ElementRef;\r\n  showClearButton = false;\r\n  condition: string;\r\n  items: ReportingLineDefinitionEntity[] = [];\r\n  users: PerformerEntity[] = [];\r\n  departments: PerformerEntity[] = [];\r\n  pageIndex = 1;\r\n  pageSize = 20;\r\n  pageList = [10, 20, 30, 50, 100];\r\n  total = 0;\r\n\r\n  /**\r\n   * 汇报类型显示列\r\n   */\r\n  columns = [\r\n    { title: this.localePipe.transform('component.reportingLine.code'), field: 'code', width: 100 },\r\n    { title: this.localePipe.transform('component.reportingLine.name'), field: 'name', width: 100 }\r\n  ];\r\n\r\n  /**\r\n   *  参与者列表汇报关系显示字段\r\n   */\r\n  reportingReferObjects = [\r\n    { name: this.localePipe.transform('component.reportingLine.dept'), value: 'dept' },\r\n    { name: this.localePipe.transform('component.reportingLine.sysUser'), value: 'sysUser' },\r\n    { name: this.localePipe.transform('component.reportingLine.employee'), value: 'employee' }\r\n  ];\r\n  curReportingRefer = this.reportingReferObjects[0].value;\r\n\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private ngZone: NgZone,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.getReportingLineType();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**\r\n   * 获取汇报关系类型\r\n   */\r\n  getReportingLineType() {\r\n    const url = '/api/runtime/wf/v1.0/reportingLineDefinitions';\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.reportingLineDefinitionList = re;\r\n      this.items = this.reportingLineDefinitionList.slice(0, this.pageSize);\r\n      this.total = this.reportingLineDefinitionList.length;\r\n    });\r\n  }\r\n\r\n  onclear() {\r\n    this.reportingLineDataEntity = new ReportingLineDataEntity();\r\n  }\r\n\r\n  // 参照类型改变\r\n  referObjectChange(data: any) {\r\n    if (data === 'dept') {\r\n      this.display = 'none';\r\n      this.curReportingRefer = this.reportingReferObjects[0].value;\r\n      this.reportingLineDataEntity.refUserId = null;\r\n      this.reportingLineDataEntity.refEmployeeId = null;\r\n    } else if (data === 'sysUser') {\r\n      this.display = 'block';\r\n      this.curReportingRefer = this.reportingReferObjects[1].value;\r\n      this.reportingLineDataEntity.refOrgId = null;\r\n      this.reportingLineDataEntity.refOrgName = null;\r\n      this.reportingLineDataEntity.refEmployeeId = null;\r\n    } else { // 员工的情况\r\n      this.display = 'block';\r\n      this.curReportingRefer = this.reportingReferObjects[2].value;\r\n      this.reportingLineDataEntity.refOrgId = null;\r\n      this.reportingLineDataEntity.refOrgName = null;\r\n      this.reportingLineDataEntity.refUserId = null;\r\n    }\r\n    // 参照对象切换时，清空user和department\r\n    this.users = [];\r\n    this.departments = [];\r\n  }\r\n\r\n  /**\r\n   * 参照用户改变\r\n   */\r\n  referUserChange(data: any) {\r\n    console.log(data);\r\n  }\r\n\r\n  /**\r\n   * 维度改变\r\n   */\r\n  reportingDimensionChange(data: any) {\r\n  }\r\n\r\n  /**\r\n   * 组织帮助选完后\r\n   */\r\n  orgSelected(org: any) { // 组织帮助选完后\r\n    this.reportingLineDataEntity.refOrgId = org.id;\r\n    this.reportingLineDataEntity.refOrgName = org.name;\r\n  }\r\n\r\n  /**\r\n   * 编辑条件\r\n   */\r\n  editCondition() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版\r\n    this.expr.addExpressionText(this.reportingLineDataEntity.condition); // this.reportingLineDataEntity.condition\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.reportingLineDataEntity.condition = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  getReportingTypes(value?: string) {\r\n    const start = (this.pageIndex - 1) * this.pageSize;\r\n    const end = start + this.pageSize;\r\n    let items = [];\r\n    if (value) {\r\n      items = this.reportingLineDefinitionList.filter(f => f.name.indexOf(value) > -1 || f.code.indexOf(value) > -1);\r\n    } else {\r\n      items = this.reportingLineDefinitionList;\r\n    }\r\n    this.total = items.length;\r\n    this.items = items.slice(start, end);\r\n    this.lookup.componentRef.instance.loadData({\r\n      total: this.total,\r\n      pageSize: this.pageSize,\r\n      pageIndex: this.pageIndex,\r\n      data: this.items\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n      this.inputGroup1.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup1.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n  clear(data: any) {\r\n    this.reportingLineDataEntity.refOrgId = '';\r\n    this.reportingLineDataEntity.refOrgName = '';\r\n  }\r\n  clearUser() {\r\n    this.users = [];\r\n    this.reportingLineDataEntity.refUserId = '';\r\n    this.reportingLineDataEntity.refEmployeeId = '';\r\n  }\r\n  clearOrg() {\r\n    this.departments = [];\r\n    this.reportingLineDataEntity.refOrgId = '';\r\n  }\r\n\r\n  selectOrg(data: string) {\r\n    this.showExprHelp(data);\r\n  }\r\n\r\n  selectUsers(data: string) {\r\n    this.showExprHelp(data);\r\n  }\r\n  showExprHelp(data: string) {\r\n    // this.expr.clearContext();\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // 表达式展现模式：默认高级\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (data === 'sysUser') {\r\n      if (this.reportingLineDataEntity.refUserId && this.reportingLineDataEntity.refUserId.length > 0) {\r\n        this.expr.addExpressionText(this.reportingLineDataEntity.refUserId);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else if (data === 'org') {\r\n      if (this.reportingLineDataEntity.refOrgId && this.reportingLineDataEntity.refOrgId.length > 0) {\r\n        this.expr.addExpressionText(this.reportingLineDataEntity.refOrgId);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else { // 员工及其他汇报对象类型\r\n      if (this.reportingLineDataEntity.refEmployeeId && this.reportingLineDataEntity.refEmployeeId.length > 0) {\r\n        this.expr.addExpressionText(this.reportingLineDataEntity.refEmployeeId);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      if (data === 'sysUser') {\r\n        const user = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipantExpression'); // wf.UserParticipantExpression\r\n        user.tag = 'expression';\r\n        user.performerName = this.variableParticipantName(expressionInfo);\r\n        this.reportingLineDataEntity.refUserId = user.performerId;\r\n        this.reportingLineDataEntity.tag = user.tag;\r\n        this.reportingLineDataEntity.performerName = user.performerName;\r\n        this.users = [this.reportingLineDataEntity];\r\n      } else if (data === 'org') {\r\n        const dept = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipantExpression');\r\n        dept.tag = 'expression';\r\n        this.reportingLineDataEntity.refOrgName = expressionInfo;\r\n        this.reportingLineDataEntity.refOrgId = expressionInfo;\r\n        this.departments = [this.reportingLineDataEntity];\r\n      } else {\r\n        const employee = new PerformerEntity(expressionInfo, '', 'wf.ReportingLineParticipantExpression');\r\n        employee.performerName = expressionInfo;\r\n        employee.tag = 'expression';\r\n        this.reportingLineDataEntity.refEmployeeId = expressionInfo;\r\n        this.reportingLineDataEntity.performerName = employee.performerName;\r\n        this.users = [this.reportingLineDataEntity];\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  private variableParticipantName(expr: string): string {\r\n    for (const c of this.designerUIState.participantContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    for (const c of this.designerUIState.processVariableContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    return this.localePipe.transform('component.reportingLine.businessFields');\r\n  }\r\n\r\n  defChanged() {\r\n    System.import('/platform/runtime/wf/web/wf-reporting-data/reportingLineDefHelp.js?v=20231123').then(() => {\r\n      (window as any).gspWfReportingLineDef.ReportingLineDefHelpUtil.getReportingLineHelp().then(data => {\r\n        this.defSelected(data);\r\n      });\r\n    });\r\n  }\r\n\r\n  defSelected(data) {\r\n    this.defName = data.name;\r\n    this.reportingLineDataEntity.reportingLineDefId = data.id;\r\n    this.reportingLineDataEntity.reportingLineDefName = data.name;\r\n\r\n    this.reportingLineDimension = JSON.parse(data.dimensions);\r\n    this.designerUIState.dimensions = [\r\n      { value: 'higherSuperior', text: this.localePipe.transform('component.reportingLine.higherSuperior') }\r\n    ];\r\n    // 兼容历史数据\r\n    if (this.reportingLineDimension[0].code !== 'directSuperior') {\r\n      const di = {\r\n        value: 'directSuperior',\r\n        text: this.localePipe.transform('component.reportingLine.directSuperior')\r\n      }\r\n      this.designerUIState.dimensions.push(di);\r\n    }\r\n    for (const dimension of this.reportingLineDimension) {\r\n      const di = {\r\n        value: dimension.code,\r\n        text: dimension.name\r\n      };\r\n      this.designerUIState.dimensions.push(di);\r\n    }\r\n    // 定义切换后，默认是参照组织\r\n    this.curReportingRefer = this.reportingReferObjects[0].value;\r\n    // 下边的参照人也得隐藏 2023-5-18\r\n    this.display = 'none';\r\n    this.reportingLineDataEntity.refUserId = null;\r\n    this.reportingLineDataEntity.refEmployeeId = null;\r\n    return of(true);\r\n  }\r\n\r\n  getPerformers() {\r\n    this.reportingLineDataEntity.type = 'wf.ReportingLineParticipantExpression';\r\n    this.reportingLineDataEntity.reportingReferObject = this.curReportingRefer;\r\n    return this.reportingLineDataEntity;\r\n  }\r\n}\r\n","import { MatrixFieldInfoEntity } from \"./matrix-field-info.entity\";\r\n\r\nexport class MatrixDefInfoEntity {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  conditionField: MatrixFieldInfoEntity[];\r\n  dataField: MatrixFieldInfoEntity[];\r\n}\r\n","import { PerformerEntity } from \"../../../entities/performer.entity\";\r\n\r\nexport class MatrixDataInfoEntity extends PerformerEntity {\r\n\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n\r\n  id: string; // 用于前端做唯一标识\r\n  matrixDefId: string; // 用于存储字段id\r\n  matrixDefName: string;\r\n  conditionField1: string;\r\n  conditionFieldText1: string;\r\n  conditionField2: string;\r\n  conditionFieldText2: string;\r\n  conditionField3: string;\r\n  conditionFieldText3: string;\r\n  dataFieldAlias: string;\r\n  condition: string;\r\n  multivaluedCondition: string;\r\n}\r\n","import { Component, OnInit, HostBinding, ViewChild, TemplateRef, Injector, Optional, ChangeDetectorRef, LOCALE_ID, Inject } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-enum-list',\r\n  templateUrl: './enum-list.component.html',\r\n  styleUrls: ['./enum-list.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class EnumListComponent implements OnInit {\r\n\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  columns = [\r\n    { field: 'key', width: 100, title: this.localePipe.transform('component.matrixPerformer.key') },\r\n    { field: 'value', width: 100, title: this.localePipe.transform('component.matrixPerformer.value')}];\r\n  @ViewChild('dg') dg: DatagridComponent;\r\n  @ViewChild('buttons') btnRef: TemplateRef<any>;\r\n\r\n  confirm = new Subject<any>();\r\n  closeModalEmitter = new Subject<any>();\r\n\r\n  /**\r\n   * 显示值\r\n   */\r\n  data = new Array();\r\n\r\n  selectedIds = new Array();\r\n\r\n  constructor(\r\n    private messageService: MessagerService,\r\n    private injector: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * 加载显示数据\r\n   */\r\n  load(enumValues) {\r\n    this.data = [...enumValues];\r\n  }\r\n\r\n  /**\r\n   * 确认\r\n   */\r\n  onConfirm(): void {\r\n    if (this.selectedIds.length === 0 ) {\r\n      this.messageService.warning(this.localePipe.transform('component.matrixPerformer.notSelectEnum'));\r\n    }\r\n    const enumValues = this.data.filter(d => this.selectedIds.findIndex(id => id === d.key) > -1);\r\n    this.confirm.next(enumValues);\r\n    this.closeModalEmitter.next();\r\n  }\r\n\r\n  /**\r\n   * 取消\r\n   */\r\n  cancel(): void {\r\n    this.closeModalEmitter.next();\r\n  }\r\n\r\n}\r\n","import { ILookupHttpService, RemoteParams, LookupGridResult } from '@farris/ui-lookup';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MatrixDefHelpService implements ILookupHttpService {\r\n\r\n  constructor(\r\n    private http: HttpService\r\n  ) {\r\n  }\r\n\r\n  getData(url: string, params?: RemoteParams): Observable<LookupGridResult> {\r\n    if (url.indexOf('getMatrixDef') > -1) {\r\n      const index = params.pageIndex || 1;\r\n      const size = params.pageSize || 20;\r\n      const searchValue = JSON.parse(params.searchValue);\r\n      if (searchValue.searchValue) {\r\n        let query = '{';\r\n        if (searchValue.searchValue) {\r\n          if (searchValue.searchField === '*') {\r\n            query += `\"codeOrNameLike\":\"${searchValue.searchValue}\",`;\r\n          } else {\r\n            query += `\"${searchValue.searchField}\":\"${searchValue.searchValue}\",`;\r\n          }\r\n        }\r\n        if (query.substr(query.length - 1, 1) === ',') {\r\n          query = query.substring(0, query.length - 1);\r\n        }\r\n        query += '}';\r\n        query = encodeURIComponent(query);\r\n        query += `&pageIndex=${index}&pageSize=${size}`;\r\n        url += '?searchValue=' + query;\r\n      } else {\r\n        url += `?pageIndex=${index}&pageSize=${size}`;\r\n      }\r\n      return this.http.get(url).pipe(\r\n        map((re: any) => ({\r\n          items: re.content,\r\n          total: re.totalElements,\r\n          pageInfo: {\r\n            pageIndex: re.pageable.pageNumber + 1,\r\n            pageSize: re.pageable.pageSize,\r\n            pageList: [20, 40, 60, 80, 100],\r\n            enablePager: true\r\n          }\r\n        }))\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ComponentFactoryResolver, HostBinding, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, ViewChild } from '@angular/core';\r\nimport { MatrixDefInfoEntity } from './entitis/matrix-def-info.entity';\r\nimport { MatrixDataInfoEntity } from './entitis/matrix-data-info.entity';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { LookupGridComponent, PickedResult, ServerSideToken } from '@farris/ui-lookup';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { EnumListComponent } from './enum-list/enum-list.component';\r\nimport { MatrixFieldInfoEntity } from './entitis/matrix-field-info.entity';\r\nimport { PerformerEntity } from '../../entities/performer.entity';\r\nimport { MatrixDefHelpService } from './service/matrix-performer.component.service';\r\nimport { LookupDataService } from '@farris/lookup-config';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-matrix-performer',\r\n  templateUrl: './matrix-performer.component.html',\r\n  styleUrls: ['./matrix-performer.component.scss'],\r\n  providers: [\r\n    { provide: ServerSideToken, useClass: LookupDataService },\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class MatrixPerformerComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n  display: string = 'none';\r\n  typeReadOnly = false;\r\n  items: MatrixDefInfoEntity[] = [];\r\n  pageIndex = 1;\r\n  pageSize = 20;\r\n  pageList = [10, 20, 30, 50, 100];\r\n  total = 0;\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  // 帮助相关\r\n  index: number;\r\n  fieldId = '';\r\n  value: any;\r\n  helpId;\r\n  dataUri: string;\r\n  /**\r\n   * 矩阵定义显示列\r\n   */\r\n  columns = [\r\n    { title: this.localePipe.transform('component.matrixPerformer.code'), field: 'code', width: 100 },\r\n    { title: this.localePipe.transform('component.matrixPerformer.name'), field: 'name', width: 100 }\r\n  ];\r\n  users: PerformerEntity[] = [];\r\n\r\n  dataFieldAndValues = []; // { text: '部门', value: 'department' },\r\n  curDataFieldValue = '';\r\n\r\n  matrixDefEntityList: MatrixDefInfoEntity[] = [];\r\n  curMatrixDefEntity: MatrixDefInfoEntity = new MatrixDefInfoEntity();\r\n  curMatrixDataEntity: MatrixDataInfoEntity = new MatrixDataInfoEntity();\r\n\r\n  conditionFields: MatrixFieldInfoEntity[] = [];\r\n  exprGroup = [\r\n    { name: this.localePipe.transform('component.matrixPerformer.help'), value: 'help' }\r\n  ];\r\n  mulGroup = [\r\n    { name: this.localePipe.transform('component.matrixPerformer.multivalue'), value: 'Multivalue' }\r\n  ];\r\n  /**\r\n   * 条件字段是否启用表达式\r\n   */\r\n  condition1: string;\r\n  condition1ExprAble = true;\r\n  condition2: string;\r\n  condition2ExprAble = true;\r\n  condition3: string;\r\n  condition3ExprAble = true;\r\n  /**\r\n   * 条件字段是否启用多值\r\n   */\r\n  MultivalueOption1: string;\r\n  condition1Multivalue = false;\r\n  MultivalueOption2: string;\r\n  condition2Multivalue = false;\r\n  MultivalueOption3: string;\r\n  condition3Multivalue = false;\r\n  /**\r\n   * 编辑器页面显示文字，防范浅拷贝问题（对于条件字段的值和显示文字都不要在当前实体中进行修改只有点击确定时，才将其保存至当前实体并返回）\r\n   */\r\n  condition1Text = '';\r\n  condition1Value = '';\r\n  condition2Text = '';\r\n  condition2Value = '';\r\n  condition3Text = '';\r\n  condition3Value = '';\r\n\r\n  @Input()\r\n  set setMatrixDataEntity(dataEntity: MatrixDataInfoEntity) {\r\n    this.curMatrixDataEntity = dataEntity;\r\n    const url = '/api/runtime/wf/v1.0/matrixDefinition/' + dataEntity.matrixDefId;\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.curMatrixDefEntity = re;\r\n      this.setFields();\r\n      this.curDataFieldValue = dataEntity.dataFieldAlias;\r\n    })\r\n    if (dataEntity.matrixDefId) {\r\n      this.typeReadOnly = true;\r\n    }\r\n\r\n    if (!this.curMatrixDataEntity.conditionField1) {\r\n      this.condition1 = 'expr';\r\n      this.condition1ExprAble = true;\r\n    } else if (this.curMatrixDataEntity.conditionField1.charAt(0) === '{') {\r\n      this.condition1 = 'expr';\r\n      this.condition1ExprAble = true;\r\n    } else {\r\n      this.condition1 = 'help';\r\n      this.condition1ExprAble = false;\r\n    }\r\n\r\n    if (!this.curMatrixDataEntity.conditionField2) {\r\n      this.condition2 = 'expr';\r\n      this.condition2ExprAble = true;\r\n    } else if (this.curMatrixDataEntity.conditionField2.charAt(0) === '{') {\r\n      this.condition2 = 'expr';\r\n      this.condition2ExprAble = true;\r\n    } else {\r\n      this.condition2 = 'help';\r\n      this.condition2ExprAble = false;\r\n    }\r\n\r\n    if (!this.curMatrixDataEntity.conditionField3) {\r\n      this.condition3 = 'expr';\r\n      this.condition3ExprAble = true;\r\n    } else if (this.curMatrixDataEntity.conditionField3.charAt(0) === '{') {\r\n      this.condition3 = 'expr';\r\n      this.condition3ExprAble = true;\r\n    } else {\r\n      this.condition3 = 'help';\r\n      this.condition3ExprAble = false;\r\n    }\r\n\r\n    if (this.curMatrixDataEntity.multivaluedCondition === 'condition1') {\r\n      this.MultivalueOption1 = 'Multivalue';\r\n      this.condition1Multivalue = true;\r\n    } else if (this.curMatrixDataEntity.multivaluedCondition === 'condition2') {\r\n      this.MultivalueOption2 = 'Multivalue';\r\n      this.condition2Multivalue = true;\r\n    } else if (this.curMatrixDataEntity.multivaluedCondition === 'condition3') {\r\n      this.MultivalueOption3 = 'Multivalue';\r\n      this.condition3Multivalue = true;\r\n    }\r\n\r\n    this.condition1Text = this.curMatrixDataEntity.conditionFieldText1 ? this.curMatrixDataEntity.conditionFieldText1 : '';\r\n    this.condition1Value = this.curMatrixDataEntity.conditionField1 ? this.curMatrixDataEntity.conditionField1 : '';\r\n    this.condition2Text = this.curMatrixDataEntity.conditionFieldText2 ? this.curMatrixDataEntity.conditionFieldText2 : '';\r\n    this.condition2Value = this.curMatrixDataEntity.conditionField2 ? this.curMatrixDataEntity.conditionField2 : '';\r\n    this.condition3Text = this.curMatrixDataEntity.conditionFieldText3 ? this.curMatrixDataEntity.conditionFieldText3 : '';\r\n    this.condition3Value = this.curMatrixDataEntity.conditionField3 ? this.curMatrixDataEntity.conditionField3 : '';\r\n  }\r\n\r\n\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private modalService: BsModalService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private matDefService: MatrixDefHelpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    // this.getMatrixLineType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    let rootPath = '';\r\n    try {\r\n      rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n    } catch (error) {\r\n    }\r\n    this.dataUri = rootPath + '/api/runtime/wf/v1.0/matrixDefinition/getMatrixDef';\r\n  }\r\n\r\n  /**\r\n   * 获取矩阵定义\r\n   */\r\n  getMatrixLineType() {\r\n    const url = '/api/runtime/wf/v1.0/matrixDefinition';\r\n    this.http.get(url).subscribe((re: any) => {\r\n      this.matrixDefEntityList = re;\r\n      this.items = this.matrixDefEntityList.slice(0, this.pageSize);\r\n      this.total = this.matrixDefEntityList.length;\r\n    });\r\n  }\r\n\r\n  private setFields() {\r\n    this.conditionFields = [];\r\n    this.dataFieldAndValues = [];\r\n    // 先对条件字段按照排序号进行排序\r\n    this.curMatrixDefEntity.conditionField.sort((a, b) => {\r\n      return a.sortOrder - b.sortOrder;\r\n    });\r\n    // 将排序后的条件放入条件字段数组中\r\n    for (const condition of this.curMatrixDefEntity.conditionField) {\r\n      this.conditionFields.push(condition);\r\n    }\r\n    // 先对数据字段按照排序号进行排序\r\n    this.curMatrixDefEntity.dataField.sort((a, b) => {\r\n      return a.sortOrder - b.sortOrder;\r\n    });\r\n    // 填充数据字段的下拉列表\r\n    for (const data of this.curMatrixDefEntity.dataField) {\r\n      const temp = {\r\n        text: data.alias,\r\n        value: data.alias\r\n      };\r\n      this.dataFieldAndValues.push(temp);\r\n    }\r\n  }\r\n\r\n  dictPicked = (rowData) => { // 选完矩阵定义后执行\r\n    // 先将当前绑定的数据清空\r\n    this.curMatrixDataEntity = new MatrixDataInfoEntity();\r\n    this.curDataFieldValue = '';\r\n    this.curMatrixDefEntity = rowData;\r\n    this.curMatrixDataEntity.matrixDefId = rowData.id;\r\n    this.curMatrixDataEntity.matrixDefName = rowData.name;\r\n    this.setFields();\r\n    return of(true);\r\n  }\r\n\r\n  onClear() {\r\n    this.curMatrixDataEntity = new MatrixDataInfoEntity();\r\n  }\r\n\r\n  /**\r\n   * 编辑条件\r\n   */\r\n  editCondition() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版\r\n    this.expr.addExpressionText(this.curMatrixDataEntity.condition); // this.reportingLineDataEntity.condition\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.curMatrixDataEntity.condition = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  onHelpSearch(data, index, id) { // 打开帮助\r\n    this.index = index;\r\n    this.fieldId = id;\r\n    this.helpId = this.curMatrixDefEntity.conditionField[this.index].smartHelp;\r\n    this.lookUp.onClear();\r\n    this.lookUp.showDialog();\r\n  }\r\n\r\n  openEnumValue(index, id) {\r\n    this.index = index;\r\n    this.fieldId = id;\r\n    this.showEnumList(JSON.parse(this.curMatrixDefEntity.conditionField[this.index].enumList));\r\n  }\r\n\r\n  private showEnumList(enumList: any[]) {\r\n    const compFactory = this.resolver.resolveComponentFactory(EnumListComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.matrixPerformer.enumSelection'),\r\n      width: 650,\r\n      height: 450,\r\n      showButtons: true,\r\n      buttons: compRef.instance.btnRef,\r\n    };\r\n    if (enumList && enumList.length > 0) {\r\n      compRef.instance.load(enumList);\r\n    }\r\n    compRef.instance.confirm.subscribe((re: any[]) => { // 点击确定\r\n      if (this.index === 0) {\r\n        this.condition1Text = re[0].value;\r\n        this.condition1Value = re[0].value;\r\n      } else if (this.index === 1) {\r\n        this.condition2Text = re[0].value;\r\n        this.condition2Value = re[0].value;\r\n      } else if (this.index === 2) {\r\n        this.condition3Text = re[0].value;\r\n        this.condition3Value = re[0].value;\r\n      }\r\n    });\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe(() => {\r\n      dialog.close();\r\n    });\r\n  }\r\n\r\n  dataFieldChange(data) {\r\n    this.curMatrixDataEntity.dataFieldAlias = data.data.value;\r\n  }\r\n\r\n  selectedDataHandler(data) {\r\n    if (this.index === 0) {\r\n      this.condition1Text = data.name;\r\n      this.condition1Value = data.id;\r\n    } else if (this.index === 1) {\r\n      this.condition2Text = data.name;\r\n      this.condition2Value = data.id;\r\n    } else if (this.index === 2) {\r\n      this.condition3Text = data.name;\r\n      this.condition3Value = data.id;\r\n    }\r\n  }\r\n\r\n  getPerformers() {\r\n    this.curMatrixDataEntity.type = 'wf.MatrixParticipantExpression';\r\n    this.curMatrixDataEntity.conditionFieldText1 = this.condition1Text;\r\n    this.curMatrixDataEntity.conditionField1 = this.condition1Text === '' ? '' : this.condition1Value;\r\n    this.curMatrixDataEntity.conditionFieldText2 = this.condition2Text;\r\n    this.curMatrixDataEntity.conditionField2 = this.condition2Text === '' ? '' : this.condition2Value;\r\n    this.curMatrixDataEntity.conditionFieldText3 = this.condition3Text;\r\n    this.curMatrixDataEntity.conditionField3 = this.condition3Text === '' ? '' : this.condition3Value;\r\n    if (this.condition1Multivalue) {\r\n      this.curMatrixDataEntity.multivaluedCondition = 'condition1';\r\n    } else if (this.condition2Multivalue) {\r\n      this.curMatrixDataEntity.multivaluedCondition = 'condition2';\r\n    } else if (this.condition3Multivalue) {\r\n      this.curMatrixDataEntity.multivaluedCondition = 'condition3';\r\n    }\r\n    return this.curMatrixDataEntity;\r\n  }\r\n\r\n  dictHelpPicked = (data: any): Observable<PickedResult> => {\r\n    this.value = null;\r\n    return of({ closeDialog: true });\r\n  }\r\n\r\n  /**\r\n   * 打开表达式编辑器\r\n   * @param data 编辑第几个条件字段，值为（condition1，condition2，condition3）\r\n   */\r\n  showExprHelp(data: string) {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (data === 'condition1') {\r\n      if (this.curMatrixDataEntity.conditionField1) {\r\n        this.expr.addExpressionText(this.curMatrixDataEntity.conditionField1);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else if (data === 'condition2') {\r\n      if (this.curMatrixDataEntity.conditionField2) {\r\n        this.expr.addExpressionText(this.curMatrixDataEntity.conditionField2);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    } else if (data === 'condition3') {\r\n      if (this.curMatrixDataEntity.conditionField3) {\r\n        this.expr.addExpressionText(this.curMatrixDataEntity.conditionField3);\r\n      } else {\r\n        this.expr.addExpressionText('');\r\n      }\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      if (data === 'condition1') {\r\n        this.condition1Text = expressionInfo;\r\n        this.condition1Value = expressionInfo;\r\n      } else if (data === 'condition2') {\r\n        this.condition2Text = expressionInfo;\r\n        this.condition2Value = expressionInfo;\r\n      } else {\r\n        this.condition3Text = expressionInfo;\r\n        this.condition3Value = expressionInfo;\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  condition1Expr(data) {\r\n    this.showExprHelp(data);\r\n  }\r\n  condition1ExprClick() {\r\n    this.condition1ExprAble = !this.condition1ExprAble;\r\n    this.condition1Multivalue = false;\r\n    this.MultivalueOption1 = '';\r\n    this.condition1Text = '';\r\n    this.condition1Value = '';\r\n  }\r\n  condition1MulClick() {\r\n    this.MultivalueOption2 = '';\r\n    this.MultivalueOption3 = '';\r\n    this.condition2Multivalue = false;\r\n    this.condition3Multivalue = false;\r\n    this.condition1Multivalue = !this.condition1Multivalue;\r\n  }\r\n  condition2Expr(data) {\r\n    this.showExprHelp(data);\r\n  }\r\n  condition2ExprClick() {\r\n    this.condition2ExprAble = !this.condition2ExprAble;\r\n    this.condition2Multivalue = false;\r\n    this.MultivalueOption2 = '';\r\n    this.condition2Text = '';\r\n    this.condition2Value = '';\r\n  }\r\n  condition2MulClick() {\r\n    this.MultivalueOption1 = '';\r\n    this.MultivalueOption3 = '';\r\n    this.condition1Multivalue = false;\r\n    this.condition3Multivalue = false;\r\n    this.condition2Multivalue = !this.condition2Multivalue;\r\n  }\r\n  condition3Expr(data) {\r\n    this.showExprHelp(data);\r\n  }\r\n  condition3ExprClick() {\r\n    this.condition3ExprAble = !this.condition3ExprAble;\r\n    this.condition3Multivalue = false;\r\n    this.MultivalueOption3 = '';\r\n    this.condition3Text = '';\r\n    this.condition3Value = '';\r\n  }\r\n  condition3MulClick() {\r\n    this.MultivalueOption1 = '';\r\n    this.MultivalueOption2 = '';\r\n    this.condition1Multivalue = false;\r\n    this.condition2Multivalue = false;\r\n    this.condition3Multivalue = !this.condition3Multivalue;\r\n  }\r\n\r\n  onBeforeHelp = (e) => {\r\n    const lookupIns = e.instance;\r\n    if (lookupIns) {\r\n      const getDataFn = lookupIns.http.getData;\r\n      lookupIns.http.getData = this.matDefService.getData;\r\n\r\n      lookupIns.dialogClosed.subscribe(() => {\r\n        lookupIns.http.getData = getDataFn;\r\n      });\r\n\r\n    }\r\n    return of(true);\r\n  }\r\n}\r\n","import {PerformerEntity} from \"../../../entities/performer.entity\";\r\n\r\nexport class ActivityExecutorParticipant extends PerformerEntity {\r\n\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n\r\n  activityDefId: string;\r\n  activityDefName: string;\r\n}\r\n","import {Component, OnInit, NgZone, ViewChild, ElementRef, HostBinding, ChangeDetectorRef, Optional, Inject, LOCALE_ID} from '@angular/core';\r\nimport {DialogComponent} from \"@farris/ui-dialog\";\r\nimport {DatagridComponent} from \"@farris/ui-datagrid\";\r\nimport {ExprEditMode, ExpressionService, InjectedType} from \"@gsp-svc/expression\";\r\nimport {ProcessDesignerUIState} from \"../../../../app/process-designer.uistate\";\r\nimport {ActivityExecutorParticipant} from \"./entities/activity-executor.participant\";\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-activity-handler-performer',\r\n  templateUrl: './activity-executor-performer.component.html',\r\n  styleUrls: ['./activity-executor-performer.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ActivityExecutorPerformerComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n  showClearButton = false;\r\n  activityExecutors: ActivityExecutorParticipant[] = [];\r\n  condition: string;\r\n  cols = [\r\n    { title: this.localePipe.transform('component.activityExecutor.name'), field: 'Name', width: 60 },\r\n    { title: 'ID', field: 'Id', width: 90 }\r\n  ];\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  @ViewChild('allActivityDialog') allActivityDialog: DialogComponent;\r\n  @ViewChild('allActivityTable') allActivityTable: DatagridComponent;\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n  clear(data: any) {\r\n    this.activityExecutors = [];\r\n  }\r\n  selectUsers(data: any) {\r\n    // 已办用户\r\n    const selectedUser = [];\r\n    if(this.activityExecutors && this.activityExecutors.length > 0){\r\n      for(const handler of this.activityExecutors) {\r\n        const data = {\r\n          data: {\r\n            Id: handler.activityDefId,\r\n            Name: handler.activityDefName\r\n          },\r\n          id: handler.activityDefId\r\n        }\r\n        selectedUser.push(data);\r\n      }\r\n    }\r\n    this.allActivityTable.setCurrentPagerData(selectedUser);\r\n    this.allActivityDialog.show();\r\n  }\r\n  editConditon() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版\r\n    this.expr.addExpressionText(this.condition);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.condition = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  activitiesSelect() {\r\n    const selectedActivities = this.allActivityTable.checkeds;\r\n    this.activityExecutors = selectedActivities.map(activity => {\r\n      const handler = new ActivityExecutorParticipant(activity.data.Id, activity.data.Name, 'wf.ActivityExecutorParticipantExpression');\r\n      handler.performerName = '<' + activity.data.Name + this.localePipe.transform('component.activityExecutor.eventHandler');\r\n      handler.activityDefId = activity.data.Id;\r\n      handler.activityDefName = activity.data.Name;\r\n      handler.condition = this.condition;\r\n      return handler;\r\n    });\r\n    this.allActivityDialog.close();\r\n  }\r\n  getPerformers() {\r\n    this.activityExecutors.map(x => x.condition = this.condition);\r\n    return this.activityExecutors;\r\n  }\r\n}\r\n","export class OrganizationParticipantExpression { \r\n    id: string;\r\n    name: string;\r\n    actionScope: ActionScope;\r\n    organizationLevel: OrganizationLevel;\r\n    organizationId: string ;\r\n    organizationCode: string ;\r\n    organizationName: string ;\r\n    includeChildren: boolean ;\r\n    parentsUntil: boolean;                          \r\n    tag: string \r\n    condition:string;\r\n}\r\n\r\nexport enum ActionScope {\r\n    /**\r\n     * 指派\r\n     */\r\n    AssignUser = 'AssignUser',\r\n    /**\r\n     * 移交\r\n     */\r\n    Transfer = 'Transfer',\r\n    /**\r\n     * 征询\r\n     */\r\n    AddSignFront = 'AddSignFront',\r\n    /**\r\n     * 加签\r\n     */\r\n    AddSignBehind = 'AddSignBehind',\r\n    /**\r\n     * 知会\r\n     */\r\n    Notify = \"Notify\",\r\n}\r\nexport enum OrganizationLevel {\r\n    /**\r\n     * 部门\r\n     */\r\n    DEPARTMENT = 'DEPARTMENT',\r\n    /**\r\n     * 单位\r\n     */\r\n    UNIT = 'UNIT',\r\n    /**\r\n    * 默认值\r\n    */\r\n    DEFAULT = 'DEFAULT',\r\n\r\n    VARORGANIZATION = 'VARORGANIZATION'\r\n}\r\n\r\n","import { PerformerEntity } from './performer.entity';\r\n\r\nexport class VariablePerformerEntity extends PerformerEntity {\r\n  // 变量参与者，已经从固定用户里分离出来了\r\n  varValue: string;\r\n  varType: string;\r\n  relation: string;\r\n  name: string;\r\n  constructor(id?: string, name?: string, type?: string) {\r\n    super(id,name,type);\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, ViewChild, NgZone, AfterViewInit, ElementRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { VariablePerformerEntity } from '../../entities/variable-performer.entity';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n\r\ndeclare var System: any;\r\n@Component({\r\n  selector: 'app-variable-performer',\r\n  templateUrl: './variable-performer.component.html',\r\n  styleUrls: ['./variable-performer.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class VariablePerformerComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'd-flex flex-fill h-100';\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n  editState = true;\r\n  bindingData: { id?, name?} = {};\r\n  inSuiteField: { name: string, value: string }[] = [];\r\n  variableOrgTypes = [\r\n    { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n    { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n  ];\r\n  userTypeButtonNeedShow = false;\r\n  personnelRelationShipTypes = [\r\n    { name: this.localePipe.transform('component.variablePerformer.oneself'), value: 'oneself' },\r\n  ];\r\n  curOrgType = this.variableOrgTypes[0].value;\r\n  relationShipType = this.designerUIState.scene !== 'inSuite' ? this.personnelRelationShipTypes[0].value : null;\r\n  scene = this.designerUIState.scene;\r\n  condition: string;\r\n  users: VariablePerformerEntity[] = [];\r\n  user: VariablePerformerEntity = new VariablePerformerEntity();\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private ngZone: NgZone,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n    private http?: HttpService,\r\n    private message?: MessagerService,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    const url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';\r\n    this.http.get(url).subscribe((data: any) => {\r\n      this.userTypeButtonNeedShow = data;\r\n      if (this.designerUIState.scene === 'inSuite') {\r\n        this.userTypeButtonNeedShow = true;\r\n        this.variableOrgTypes = [\r\n          { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n          { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n          { name: this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }\r\n        ];\r\n        this.getInSuiteField(this.user.varType ? this.user.varType : 'Sys');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n  clear(data: any) {\r\n    // 流程变量表达式编辑器清空\r\n    this.bindingData = {};\r\n    this.users = [];\r\n    this.user = null;\r\n    this.variableOrgTypes = [\r\n      { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n      { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n    ];\r\n    if (this.designerUIState.scene === 'inSuite') {\r\n      this.variableOrgTypes = [\r\n        { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n        { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n        { name: this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }\r\n      ];\r\n    }\r\n  }\r\n  selectUsers(data: any) {\r\n      this.showExprHelp();\r\n  }\r\n  editConditon() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版\r\n    this.expr.addExpressionText(this.condition);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.condition = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  showExprHelp() {\r\n    // this.expr.clearContext();\r\n    this.expr.setEditPattern(ExprEditMode.Advanced);\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    if (this.users.length > 0) {\r\n      this.expr.addExpressionText(this.users[0].varValue ? this.users[0].varValue : this.users[0].performerId);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    // 2023-6-13 编辑时表达式编辑器只读\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      if (expressioninfo) {\r\n        const user = new VariablePerformerEntity(expressioninfo, '', 'wf.VariableParticipantExpression');\r\n        user.tag = 'expression';\r\n        user.performerName = this.variableParticipantName(expressioninfo);\r\n        user.name =  this.variableParticipantName(expressioninfo);\r\n        user.varType = this.curOrgType;\r\n        if (this.designerUIState.scene === 'inSuite') {\r\n          user.relation = this.relationShipType;\r\n        } else {\r\n          user.relation = this.personnelRelationShipTypes[0].value;\r\n        }\r\n        if (this.variableParticipantName(expressioninfo) === '') {\r\n          // 如果先勾选行政人员id，再选择上下文变量，则提示并将变量值类型置为1\r\n          this.message.info(this.localePipe.transform('component.variablePerformer.cantUseContext'));\r\n          this.curOrgType = this.variableOrgTypes[0].value;\r\n        } else {\r\n          this.users = [user];\r\n          this.user = user;\r\n        }\r\n        for (const c of this.designerUIState.participantContext) {\r\n          // 根据表达式中的函数名判断是否使用的是上下文变量,除三种特殊上下文变量其余放开限制\r\n          if (user.performerId.indexOf(c.key) >= 0) {\r\n            this.variableOrgTypes = [\r\n              { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' }];\r\n            break;\r\n          } else {\r\n            this.variableOrgTypes = [\r\n              { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n              { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n            ];\r\n            if (this.designerUIState.scene === 'inSuite') {\r\n              this.variableOrgTypes = [\r\n                { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n                { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n                { name: this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }\r\n              ];\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.users = [];\r\n        this.user = null;\r\n        this.variableOrgTypes = [\r\n          { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n          { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n        ];\r\n        if (this.designerUIState.scene === 'inSuite') {\r\n          this.variableOrgTypes = [\r\n            { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },\r\n            { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },\r\n            { name: this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }\r\n          ];\r\n        }\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  getPerformers() {\r\n    if (this.user) {\r\n      this.user.varValue = this.user.performerId ? this.user.performerId : this.user.varValue;\r\n      this.user.name = this.user.performerName ? this.user.performerName : this.user.name;\r\n      // this.user.name = this.getRealName(this.user);\r\n      this.user.varType = this.curOrgType;\r\n      this.user.relation = this.relationShipType;\r\n      this.user.condition = this.condition ? this.condition : '';\r\n    }\r\n    return this.user;\r\n  }\r\n  // TODO: 变量参与者选多个值时名称只能显示一个，待调整\r\n  // getRealName(user: any) {\r\n  //   // 2023-6-15 计算是否是多值，排除表达式里自带的一个逗号\r\n  //   let r = user.name;\r\n  //   let id = user.varValue;\r\n  //   let char = ',';\r\n  //   let count = id.split(char).length - 1;\r\n  //   if (count > 1) {\r\n  //     r += ' 等';\r\n  //   }\r\n  //   return r;\r\n  // }\r\n\r\n  private variableParticipantName(expr: string): string {\r\n    for (const c of this.designerUIState.participantContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        if (this.curOrgType !== 'Sys') { // 行政人员类型不允许使用上下文变量\r\n          return '';\r\n        }\r\n        return c.name;\r\n      }\r\n    }\r\n    for (const c of this.designerUIState.processVariableContext) {\r\n      if (expr.indexOf(c.key) > -1) {\r\n        return c.name;\r\n      }\r\n    }\r\n    return JSON.parse(expr).expr;\r\n  }\r\n  orgTypeChange(data: any) {\r\n    if (data === 'Sys') {\r\n      this.curOrgType = this.variableOrgTypes[0].value;\r\n    } else if (data === 'Administrative_staff') {\r\n      this.curOrgType = this.variableOrgTypes[1].value;\r\n    } else {\r\n      this.curOrgType = this.variableOrgTypes[2].value;\r\n    }\r\n    // 如果是inSuite场景需要获取inSuite部门的负责人，分管领导等关系\r\n    if (this.designerUIState.scene === 'inSuite') {\r\n      this.getInSuiteField(data);\r\n      this.relationShipType = null;\r\n    } else {\r\n      this.relationShipType = this.personnelRelationShipTypes[0].value;\r\n    }\r\n  }\r\n  enabledStateChange(data: any) {\r\n    this.relationShipType = data.value;\r\n  }\r\n  getInSuiteField(fieldType: string) {\r\n    const url = `/api/runtime/wf/v1.0/dtProcDefs/getInSuiteFields/${fieldType}`;\r\n    this.http.get(url).subscribe((field: any) => {\r\n      this.inSuiteField = [];\r\n      for (const f of field) {\r\n        const type = {\r\n          name: f.field_description,\r\n          value: f.field\r\n        };\r\n        // 清空inSuiteField\r\n        this.inSuiteField.push(type);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, ViewChild, Input, AfterViewInit, Optional, LOCALE_ID, Inject } from '@angular/core';\r\nimport { UserPerformerComponent } from '../user-performer/user-performer.component';\r\nimport { PositionPerformerComponent } from '../position-performer/position-performer.component';\r\nimport { ComponentPerformerComponent } from '../component-performer/component-performer.component';\r\nimport { BizComponentEntity } from '../../../../domain/entities/biz-component.entity';\r\nimport { ReportingLineComponent } from '../reporting-line/reporting-line.component';\r\nimport { MatrixPerformerComponent } from '../matrix-performer/matrix-performer.component';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ActivityExecutorPerformerComponent } from '../activity-executor-performer/activity-executor-performer.component';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { OrganizationParticipantExpression, ActionScope, OrganizationLevel } from '../../../../domain/entities/organization-participant-expression';\r\nimport { VariablePerformerComponent } from '../variable-performer/variable-performer.component';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n\r\n@Component({\r\n  selector: 'app-performer-edit',\r\n  templateUrl: './performer-edit.component.html',\r\n  styleUrls: ['./performer-edit.component.scss'],\r\n  providers: [\r\n    WfLocalePipe,\r\n ]\r\n})\r\nexport class PerformerEditComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  component: BizComponentEntity;\r\n  performer: { type: string, value: any };\r\n  performerType: string;\r\n  userType: string;\r\n  editState: string;\r\n  tab = 'user';\r\n  @Input() display = true;\r\n\r\n  organizationLevelCollection = [\r\n    {\r\n      value: 'UNIT',\r\n      text: this.localePipe.transform('component.participant.currentUnit'),\r\n      orgId: 'currentUnit'\r\n    }, {\r\n      value: 'DEPARTMENT',\r\n      text: this.localePipe.transform('component.participant.currentDepartment'),\r\n      orgId: 'currentDepartment'\r\n    }, {\r\n      value: 'VARORGANIZATION',\r\n      text: this.localePipe.transform('component.participant.variableOrganization'),\r\n      orgId: ''\r\n    }\r\n  ];\r\n\r\n  organizationParticipant: OrganizationParticipantExpression;\r\n\r\n  @ViewChild(UserPerformerComponent) usersCmp: UserPerformerComponent;\r\n  @ViewChild(VariablePerformerComponent) varCmp: VariablePerformerComponent;\r\n  @ViewChild(PositionPerformerComponent) posiCmp: PositionPerformerComponent;\r\n  @ViewChild(ComponentPerformerComponent) cmpCmp: ComponentPerformerComponent;\r\n  @ViewChild(ReportingLineComponent) reportingLineCmp: ReportingLineComponent;\r\n  @ViewChild(MatrixPerformerComponent) matrixCmp: MatrixPerformerComponent;\r\n  @ViewChild(ActivityExecutorPerformerComponent) activityExecutorCmp: ActivityExecutorPerformerComponent;\r\n\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private http: HttpService,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.organizationParticipant = new OrganizationParticipantExpression();\r\n    this.organizationParticipant.actionScope = ActionScope.AssignUser;\r\n    this.organizationParticipant.organizationLevel = OrganizationLevel.DEPARTMENT;\r\n    this.organizationParticipant.organizationId = 'currentDepartment';\r\n    this.organizationParticipant.organizationName = this.localePipe.transform('component.participant.currentDepartment');\r\n    this.organizationParticipant.includeChildren = false;\r\n    this.organizationParticipant.tag = 'variable';\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.performer) {\r\n      switch (this.performer.type) {\r\n        case 'wf.UserParticipantExpression':\r\n          this.usersCmp.users = [];\r\n          this.usersCmp.users.push(this.performer.value);\r\n          // 2023-5-23 用户参与者支持编辑时单选+显示已选用户；\r\n          this.usersCmp.multiSelect = this.editState === 'edit' ? false : true;\r\n          // 考虑到兼容历史数据，暂时不使用用户参与者实体类中的userType属性\r\n          if (this.performer.value.performerId && this.performer.value.performerId.charAt(0) === '{') {\r\n            const url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';\r\n            this.http.get(url).subscribe((data: any) => {\r\n              this.usersCmp.userTypeButtonNeedShow = data;\r\n              this.usersCmp.userType = 'variable';\r\n              this.usersCmp.curOrgType = this.performer.value.orgType === 'Sys' ? 'Sys' : 'Administrative_organization';\r\n              this.usersCmp.condition = this.performer.value.condition;\r\n              // 根据表达式中的函数名判断是否使用的是上下文变量\r\n              const isContextVariable = this.performer.value.performerId.indexOf('GetContextParameter') >= 0;\r\n              this.usersCmp.variableOrgTypes = isContextVariable ? [\r\n                { name: '系统用户', value: 'Sys' }\r\n              ] : [\r\n                { name: '系统用户', value: 'Sys' },\r\n                { name: '员工', value: 'Administrative_organization' }\r\n              ];\r\n            });\r\n          } else {\r\n            this.usersCmp.userType = 'user';\r\n            this.usersCmp.condition = this.performer.value.condition;\r\n          }\r\n          break;\r\n        case 'wf.VariableParticipantExpression':\r\n          // TODO:参与者只保留一份最好\r\n          this.varCmp.users = [];\r\n          this.varCmp.users.push(this.performer.value);\r\n          this.varCmp.user = this.performer.value;\r\n          this.varCmp.editState = this.editState === 'edit' ? false : true;\r\n          // 判断是变量参与者\r\n          if (this.performer.value.varValue && this.performer.value.varValue.charAt(0) === '{') {\r\n            // 根据表达式中的函数名判断是否使用的是上下文变量\r\n            const isContextVariable = this.performer.value.varValue.indexOf('GetContextParameter') >= 0;\r\n            // 上下文变量的变量值类型只有系统用户id\r\n            this.varCmp.variableOrgTypes = isContextVariable ? [\r\n              { name: '用户ID', value: 'Sys' }\r\n            ] : [\r\n              { name: '用户ID', value: 'Sys' },\r\n              { name: '员工ID', value: 'Administrative_staff' },\r\n            ];\r\n            // 如果是insuite场景还要增加行政组织id\r\n            this.varCmp.curOrgType = this.performer.value.varType;\r\n            this.varCmp.relationShipType = this.performer.value.relation;\r\n            this.varCmp.condition = this.performer.value.condition;\r\n          }\r\n          break;\r\n        case 'wf.PositionParticipantExpression':\r\n          this.posiCmp.editState = this.editState === 'edit' ? false : true;\r\n          this.posiCmp.position = Object.assign({}, this.performer.value);\r\n          this.posiCmp.performerName = this.posiCmp.position.performerName;\r\n          if (this.posiCmp.position.positionType === '0') {\r\n            this.posiCmp.newFilter = { positionType: '0' };\r\n          } else {\r\n            this.posiCmp.newFilter = { positionType: '1' };\r\n          }\r\n          break;\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          // this.tab = 'report';\r\n          this.reportingLineCmp.setReportingLineDataEntity = this.performer.value;\r\n          break;\r\n        case 'wf.ComponentParticipantExpression':\r\n          // this.tab = 'component';\r\n          this.cmpCmp.component = this.performer.value;\r\n          break;\r\n        case 'wf.MatrixParticipantExpression':\r\n          // this.tab = 'matrix';\r\n          this.matrixCmp.setMatrixDataEntity = this.performer.value;\r\n          break;\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          // this.tab = 'activityExecutor';\r\n          this.activityExecutorCmp.activityExecutors = [];\r\n          this.activityExecutorCmp.activityExecutors.push(this.performer.value);\r\n          this.activityExecutorCmp.condition = this.performer.value.condition;\r\n          break;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          if (this.performer.value.organizationLevel === OrganizationLevel.DEFAULT && this.performer.value.tag === 'expression') {\r\n            this.performer.value.organizationLevel = OrganizationLevel.VARORGANIZATION;\r\n          } \r\n          this.organizationParticipant = this.performer.value;\r\n          if (this.performer.value.OrganizationLevel === OrganizationLevel.DEPARTMENT && this.performer.value.tag === 'expression') {\r\n            this.performer.value.OrganizationLevel === OrganizationLevel.VARORGANIZATION;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    if (this.performerType) {\r\n      switch (this.performerType) {\r\n        case 'wf.UserParticipantExpression':\r\n          this.usersCmp.userType = 'user';\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  valueChange(event: any) {\r\n    switch (event.value) {\r\n      case this.organizationLevelCollection[0].value:\r\n        this.organizationParticipant.organizationId = this.organizationLevelCollection[0].orgId;\r\n        this.organizationParticipant.organizationName = this.organizationLevelCollection[0].text;\r\n        this.organizationParticipant.includeChildren = true;\r\n        break;\r\n      case this.organizationLevelCollection[1].value:\r\n        this.organizationParticipant.organizationId = this.organizationLevelCollection[1].orgId;\r\n        this.organizationParticipant.organizationName = this.organizationLevelCollection[1].text;\r\n        break;\r\n      case this.organizationLevelCollection[2].value:\r\n        this.organizationParticipant.organizationId = this.organizationLevelCollection[2].orgId;\r\n        this.organizationParticipant.organizationName = this.organizationLevelCollection[2].text;\r\n        this.organizationParticipant.includeChildren = true;\r\n        this.organizationParticipant.tag = 'expression'\r\n        break;\r\n    }\r\n  }\r\n  getPerformers() {\r\n    const users = this.usersCmp ? this.usersCmp.getPerformers() : [];\r\n    const variable = this.varCmp ? this.varCmp.getPerformers() : null;\r\n    const positions = this.posiCmp ? this.posiCmp.getPerformers() : [];\r\n    const component = this.cmpCmp ? this.cmpCmp.getPerformers() : null;\r\n    const reportingLine = this.reportingLineCmp ? this.reportingLineCmp.getPerformers() : null;\r\n    const matrix = this.matrixCmp ? this.matrixCmp.getPerformers() : null;\r\n    const activityExecutors = this.activityExecutorCmp ? this.activityExecutorCmp.getPerformers() : [];\r\n\r\n    let userPerformers = []; // 用户参与者\r\n    let activityExecutorPerformers = []; // 已办活动节点参与者\r\n\r\n    if ((users && users.length > 0)) {\r\n      userPerformers = userPerformers.concat(users);\r\n    }\r\n    if (activityExecutors && activityExecutors.length > 0) {\r\n      activityExecutorPerformers = activityExecutorPerformers.concat(activityExecutors);\r\n    }\r\n    let organizationParticipant: OrganizationParticipantExpression;\r\n    if (this.performerType === 'wf.OrganizationParticipantExpression') {\r\n      if (this.organizationParticipant.organizationLevel === OrganizationLevel.VARORGANIZATION && this.organizationParticipant.tag === 'expression') {\r\n        this.organizationParticipant.organizationLevel = OrganizationLevel.DEFAULT;\r\n      }\r\n      organizationParticipant = this.organizationParticipant;\r\n    }\r\n    return { userPerformers, variable, positions, component, reportingLine, matrix, activityExecutorPerformers, organizationParticipant };\r\n  }\r\n\r\n  editConditon() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版\r\n    this.expr.addExpressionText(this.organizationParticipant.condition);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.organizationParticipant.condition = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  editOrganizationId() {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced);\r\n    this.expr.addExpressionText(this.organizationParticipant.organizationId);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.organizationParticipant.organizationId = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Input, NgZone, AfterViewInit, ViewChild, ElementRef, Output, EventEmitter, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { PerformerOptions } from '../../entities/performer-options';\r\nimport { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-performer-options',\r\n  templateUrl: './performer-options.component.html',\r\n  styleUrls: ['./performer-options.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class PerformerOptionsComponent implements OnInit, AfterViewInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Input() editorParams: any = {};\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  performerOptionsLocation = '';\r\n  @Input()\r\n  set value(options: PerformerOptions) {\r\n    if (options) {\r\n      this.exclusionPerformers = options.ExclusionPerformers;\r\n      this.noPerformerStrategy = options.NoPerformerStrategy;\r\n      this.historicFirst = options.HistoricFirst;\r\n      this.automaticPerformers = options.automaticPerformers;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set exclusionPerformers(e: string | Array<string>) {\r\n    if (e) {\r\n      if (typeof e === 'string') {\r\n        this.excludeProcInstCreator = e.indexOf('procInstCreator') > -1;\r\n        this.excludePreActExecutors = e.indexOf('preActExecutors') > -1;\r\n      } else {\r\n        this.excludeProcInstCreator = e.findIndex(i => i === 'procInstCreator') > -1;\r\n        this.excludePreActExecutors = e.findIndex(i => i === 'preActExecutors') > -1;\r\n        this.excludeAllPassExecutors = e.findIndex(i => i === 'allPassExecutors') > -1;\r\n        this.excludeExprPerformer = e.find(i => i.indexOf('expr') > -1);\r\n        if (this.excludeExprPerformer != null && (this.excludeExprPerformer.startsWith('Sys#') ||\r\n          this.excludeExprPerformer.startsWith('Administrative_staff#'))) {\r\n          const excludeValue = this.excludeExprPerformer.split(\"#\");\r\n          this.exprPerformerType = excludeValue[0];\r\n          this.excludeExprPerformer = excludeValue[1];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  set automaticPerformers(e: Array<string>) {\r\n    if (e && e.length > 0) {\r\n      this.autoProcInstCreator = e.findIndex(i => i === 'procInstCreator') > -1;\r\n      this.autoPreActExecutors = e.findIndex(i => i === 'preActExecutors') > -1;\r\n      this.autoAllPassExecutors = e.findIndex(i => i === 'allPassExecutors') > -1;\r\n    }\r\n\r\n  }\r\n\r\n  @ViewChild('inputGroup') inputGroup: ElementRef;\r\n  showClearButton = false;\r\n\r\n  historicFirst = false;\r\n\r\n  excludeExprPerformer: string;\r\n\r\n\r\n  excludeProcInstCreator = false;\r\n  excludePreActExecutors = false;\r\n  excludeAllPassExecutors = false;\r\n\r\n  autoProcInstCreator = false;\r\n  autoPreActExecutors = false;\r\n  autoAllPassExecutors = false;\r\n\r\n  noPerformerStrategyList = [\r\n    { text: this.localePipe.transform('component.performerOptions.leave'), value: 'leave' },\r\n    { text: this.localePipe.transform('component.performerOptions.throwException'), value: 'throwException' }];\r\n  variableOrgTypes = [\r\n    { name: this.localePipe.transform('component.performerOptions.sys'), value: 'Sys' },\r\n    { name: this.localePipe.transform('component.performerOptions.administrative_staff'), value: 'Administrative_staff' },\r\n  ];\r\n  exclusionPerformersOptions = [\r\n    { value: 'procInstCreator', name: this.localePipe.transform('component.performerOptions.procInstCreator') },\r\n    { value: 'preActExecutors', name: this.localePipe.transform('component.performerOptions.preActExecutors') },\r\n    { value: 'allPassExecutors', name: this.localePipe.transform('component.performerOptions.allPassExecutors') }\r\n  ];\r\n  exprPerformerType = this.variableOrgTypes[0].value;\r\n  noPerformerStrategy: string = this.noPerformerStrategyList[0].value;\r\n\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.performerOptions.performerOptions'),\r\n    width: 760,\r\n    height: 606,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.performerOptionsLocation = this.editorParams.location;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseenter',\r\n        this.onMouseEnter.bind(this)\r\n      );\r\n      this.inputGroup.nativeElement.addEventListener(\r\n        'mouseleave',\r\n        this.onMouseLeave.bind(this)\r\n      );\r\n    });\r\n  }\r\n\r\n  onMouseEnter(event) {\r\n    this.showClearButton = true;\r\n    if (this.showClearButton) {\r\n      this.toggleClearIcon(event, true);\r\n    }\r\n  }\r\n  onMouseLeave(event) {\r\n    this.showClearButton = false;\r\n    this.toggleClearIcon(event, false);\r\n  }\r\n  private toggleClearIcon(event: any, isShow = false) {\r\n    const str = isShow ? '' : 'none';\r\n    const clearIcon = event.target.querySelector('.input-group-clear');\r\n    if (clearIcon) {\r\n      clearIcon.style.display = str;\r\n    }\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    const options = {\r\n      ExclusionPerformers: this.getExclusionPerformers(),\r\n      NoPerformerStrategy: this.noPerformerStrategy,\r\n      HistoricFirst: this.historicFirst,\r\n      automaticPerformers: this.getAutoPerformers()\r\n    };\r\n    const object = {\r\n      value: options, parameters: null\r\n    };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  cancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  excludeProcInstCreatorClick(event: any) {\r\n    // this.excludeProcInstCreator = !this.excludeProcInstCreator;\r\n    if (this.excludeProcInstCreator && this.autoProcInstCreator) {\r\n      this.autoProcInstCreator = false;\r\n    }\r\n  }\r\n\r\n  excludePreActExecutorsClick(event: any) {\r\n    // this.excludePreActExecutors = !this.excludePreActExecutors;\r\n    if (this.autoAllPassExecutors === true && this.excludePreActExecutors === true) {\r\n      this.message.info(this.localePipe.transform('component.performerOptions.exclusionNotAllowed'), () => {\r\n        this.excludePreActExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    if (this.excludePreActExecutors && this.autoPreActExecutors) {\r\n      this.autoPreActExecutors = false;\r\n    }\r\n  }\r\n\r\n  excludeAllPassExecutorsClick(event: any) {\r\n    // this.excludeAllPassExecutors = !this.excludeAllPassExecutors;\r\n    if (this.excludeAllPassExecutors) {\r\n      if (this.autoPreActExecutors) {\r\n        this.autoPreActExecutors = false;\r\n      }\r\n      if (this.autoAllPassExecutors) {\r\n        this.autoAllPassExecutors = false;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  autoProcInstCreatorClick(event: any) {\r\n    // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key\r\n    //   && this.autoProcInstCreator === true ) {\r\n    //   this.message.info('【完成策略】为【会签】时，不允许设置自动审批，请了解！', () => {\r\n    //     this.autoProcInstCreator = false;\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key\r\n      && this.autoProcInstCreator === true ) {\r\n      this.message.info(this.localePipe.transform('component.performerOptions.approvalNotAllowedAsSet'), () => {\r\n        this.autoProcInstCreator = false;\r\n      });\r\n      return;\r\n    }\r\n    // this.autoProcInstCreator = !this.autoProcInstCreator;\r\n    if (this.autoProcInstCreator && this.excludeProcInstCreator) {\r\n      this.excludeProcInstCreator = false;\r\n    }\r\n  }\r\n\r\n  autoPreActExecutorsClick(event: any) {\r\n    // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key\r\n    //   && this.autoPreActExecutors === true) {\r\n    //   this.message.info('【完成策略】为【会签】时，不允许设置自动审批，请了解！', () => {\r\n    //     this.autoPreActExecutors = false;\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key\r\n      && this.autoPreActExecutors === true) {\r\n      this.message.info(this.localePipe.transform('component.performerOptions.approvalNotAllowed'), () => {\r\n        this.autoPreActExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    if (this.excludeAllPassExecutors === true && this.autoPreActExecutors === true) {\r\n      this.message.info(this.localePipe.transform('component.performerOptions.approvalNotAllowedAsSet'), () => {\r\n        this.autoPreActExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    // this.autoPreActExecutors = !this.autoPreActExecutors;\r\n    if (this.autoPreActExecutors && this.excludePreActExecutors) {\r\n      this.excludePreActExecutors = false;\r\n    }\r\n  }\r\n\r\n  autoAllPassExecutorsClick(event: any) {\r\n    // if (this.designerState.propertyData.CompleteStrategy !== this.designerState.completeIterator[0].key\r\n    //   && this.autoAllPassExecutors === true) {\r\n    //   this.message.info('【完成策略】为【会签】时，不允许设置自动审批，请了解！', () => {\r\n    //     this.autoAllPassExecutors = false;\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (this.designerState.propertyData.AssignStrategy === this.designerState.assignIterator[2].key\r\n      && this.autoAllPassExecutors === true) {\r\n      this.message.info(this.localePipe.transform('component.performerOptions.allocationStrategyIsCollect'), () => {\r\n        this.autoAllPassExecutors = false;\r\n      });\r\n      return;\r\n    }\r\n    // this.autoAllPassExecutors = !this.autoAllPassExecutors;\r\n    if (this.autoAllPassExecutors) {\r\n      if (this.excludeAllPassExecutors) {\r\n        this.excludeAllPassExecutors = false;\r\n      }\r\n      if (this.excludePreActExecutors) {\r\n        this.excludePreActExecutors = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  getPerformerOptions(): PerformerOptions {\r\n    return {\r\n      ExclusionPerformers: this.getExclusionPerformers(),\r\n      NoPerformerStrategy: this.noPerformerStrategy,\r\n      HistoricFirst: this.historicFirst,\r\n      automaticPerformers: this.getAutoPerformers()\r\n    };\r\n  }\r\n  private getExclusionPerformers(): string[] {\r\n    const exclusionPerf: Array<string> = [];\r\n    if (this.excludeProcInstCreator) {\r\n      exclusionPerf.push('procInstCreator');\r\n    }\r\n    if (this.excludePreActExecutors) {\r\n      exclusionPerf.push('preActExecutors');\r\n    }\r\n    if (this.excludeAllPassExecutors) {\r\n      exclusionPerf.push('allPassExecutors');\r\n    }\r\n    if (this.excludeExprPerformer) {\r\n      exclusionPerf.push(`${this.exprPerformerType}#${this.excludeExprPerformer}`);\r\n    }\r\n\r\n    return exclusionPerf;\r\n  }\r\n\r\n  private getAutoPerformers(): Array<string> {\r\n    const autoPerf: Array<string> = new Array();\r\n    if (this.autoProcInstCreator) {\r\n      autoPerf.push('procInstCreator');\r\n    }\r\n    if (this.autoPreActExecutors) {\r\n      autoPerf.push('preActExecutors');\r\n    }\r\n    if (this.autoAllPassExecutors) {\r\n      autoPerf.push('allPassExecutors');\r\n    }\r\n\r\n    return autoPerf;\r\n  }\r\n\r\n  openExprEditor() {\r\n    // this.expr.clearContext();\r\n    this.expr.setEditPattern(ExprEditMode.Advanced);\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    // if (this.excludeExprPerformer) {\r\n    this.expr.addExpressionText(this.excludeExprPerformer);\r\n    // }\r\n    this.expr.buildExpression().then((d: string) => {\r\n      this.excludeExprPerformer = d;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n  orgTypeChange(data: any) {\r\n    if (data === 'Sys') {\r\n      this.exprPerformerType = this.variableOrgTypes[0].value;\r\n    } else if (data === 'Administrative_staff') {\r\n      this.exprPerformerType = this.variableOrgTypes[1].value;\r\n    }\r\n  }\r\n  clear() {\r\n    this.excludeExprPerformer = '';\r\n  }\r\n\r\n}\r\n\r\nexport class PerformerOptionsConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    return this.localePipe.transform(\"component.performerOptions.set\");\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, ComponentRef } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { PerformerUIState } from './performer.uistate';\r\nimport { PerformerRepository } from './performer.repository';\r\nimport { PerformerViewModel } from './performer.viewmodel';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { PerformerEditComponent } from './views/performer-edit/performer-edit.component';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { PerformerOptionsComponent } from './views/performer-options/performer-options.component';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { PerformerEntity } from './entities/performer.entity';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';\r\nimport { ReportingLineDataEntity } from './views/reporting-line/reporting-line-data.entity';\r\nimport { PerformerInfo } from './entities/performer-info.entity';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { Observable, of} from 'rxjs';\r\nimport { PositionPerformerEntity } from './entities/position-performer.entity';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ComponentPerformer } from './views/component-performer/component-performer.entity';\r\nimport {MatrixDataInfoEntity} from './views/matrix-performer/entitis/matrix-data-info.entity';\r\nimport {FDropdownDirective} from \"@farris/ui-dropdown\";\r\nimport { AssignPerformerConfigComponent } from '../assign-performer-config/assign-performer-config.component';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\n@Component({\r\n  selector: 'app-performer',\r\n  templateUrl: './performer.component.html',\r\n  styleUrls: ['./performer.component.scss'],\r\n  providers: [PerformerViewModel, PerformerRepository, PerformerUIState]\r\n})\r\nexport class PerformerComponent implements OnInit {\r\n\r\n  display = true; // 控制矩阵参与者是否显示\r\n\r\n  type: 'defaultPerformer' | 'assignPerformer' = 'defaultPerformer';\r\n  nodeType: 'userActivity' | 'notifyActivity'  = 'userActivity';\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('editFooter') editFooter: TemplateRef<any>;\r\n  @ViewChild(PerformerOptionsComponent) options: PerformerOptionsComponent;\r\n  @ViewChild('participantOptions') optionsDialog: DialogComponent;\r\n  @ViewChild(DatagridComponent) grid: DatagridComponent;\r\n  @ViewChild('dropdownEl') dropDownEl: FDropdownDirective; // 解决选择意见后，下拉菜单无法收折的问题\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(partInfo: PerformerInfo) {\r\n    if (partInfo.performers && partInfo.performers.length > 0) {\r\n      this.uistate.performerInfo.performers = partInfo.performers;\r\n      this.uistate.performersList = this.uistate.performersList.concat(partInfo.performers as any[]);\r\n      this.uistate.performersList.map(performer => performer.description = this.performerDescription(performer as any));\r\n    }\r\n    if (partInfo.variablePerformers && partInfo.variablePerformers.length > 0) {\r\n      this.uistate.performerInfo.variablePerformers = partInfo.variablePerformers;\r\n      this.uistate.performersList = this.uistate.performersList.concat(partInfo.variablePerformers as any[]);\r\n      this.uistate.performersList.map(variablePerformers => variablePerformers.description = this.performerDescription(variablePerformers as any));\r\n    }\r\n    if (partInfo.components && partInfo.components.length > 0) {\r\n      this.uistate.performerInfo.components = partInfo.components;\r\n      partInfo.components.forEach(cmp => {\r\n        this.uistate.performersList.push({\r\n          id: cmp.id,\r\n          type: 'wf.ComponentParticipantExpression',\r\n          performerName: cmp.name,\r\n          description: this.componentDescription(cmp),\r\n          condition: cmp.condition\r\n        });\r\n      });\r\n    }\r\n    if (partInfo.reportingLines && partInfo.reportingLines.length > 0) {\r\n      this.uistate.performerInfo.reportingLines = partInfo.reportingLines;\r\n      partInfo.reportingLines.forEach(r => {\r\n        this.uistate.performersList.push({\r\n          id: r.id,\r\n          type: 'wf.ReportingLineParticipantExpression',\r\n          performerName: r.reportingLineDefName + '-' + r.dimension,\r\n          description: this.reportingLineDescription(r),\r\n          condition: r.condition\r\n        });\r\n      });\r\n    }\r\n    if(partInfo.activityExecutors && partInfo.activityExecutors.length > 0) {\r\n      this.uistate.performerInfo.activityExecutors = partInfo.activityExecutors;\r\n      partInfo.activityExecutors.forEach(handler => {\r\n        this.uistate.performersList.push({\r\n          id: handler.id,\r\n          type: 'wf.ActivityExecutorParticipantExpression',\r\n          performerName: '<' + handler.activityDefName + '>活动办理人',\r\n          description: '<' + handler.activityDefName + '>活动办理人',\r\n          condition: handler.condition\r\n        });\r\n      })\r\n    }\r\n    if (partInfo.matrixParticipants && partInfo.matrixParticipants.length > 0) {\r\n      this.uistate.performerInfo.matrixParticipants = partInfo.matrixParticipants;\r\n      partInfo.matrixParticipants.forEach(r => {\r\n        this.uistate.performersList.push({\r\n          id: r.id,\r\n          type: 'wf.MatrixParticipantExpression',\r\n          performerName: r.matrixDefName + '-' + r.dataFieldAlias,\r\n          description: this.matrixDescription(r),\r\n          condition: r.condition\r\n        });\r\n      });\r\n    }\r\n    if (partInfo.organizationParticipants && partInfo.organizationParticipants.length > 0) {\r\n      this.uistate.performerInfo.organizationParticipants = partInfo.organizationParticipants;\r\n      partInfo.organizationParticipants.forEach(o => {\r\n        this.uistate.performersList.push({\r\n          id: o.id,\r\n          type: 'wf.OrganizationParticipantExpression',\r\n          performerName: o.organizationName,\r\n          description: o.organizationName +'，' +(o.includeChildren ? '包含下级':'不包含下级'),\r\n          condition: o.condition\r\n        });\r\n      })\r\n    }\r\n    if (partInfo.options) {\r\n      this.uistate.performerInfo.options = partInfo.options;\r\n    }\r\n    this.uistate.performerInfo.isAllScope = partInfo.isAllScope;\r\n  }\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  editDialog: BsModalRef;\r\n  compRef: ComponentRef<PerformerEditComponent>;\r\n  isClose = true;\r\n\r\n  modalConfig = {\r\n    title: '参与者',\r\n    width: 700,\r\n    height: 400,\r\n    showButtons: true\r\n  };\r\n  columns = [\r\n    {\r\n      field: 'type', width: 50, title: '类型',\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.uistate.typeCollection }\r\n      }\r\n     },\r\n    { field: 'performerName', width: 50, title: '名称' },\r\n    { field: 'description', width: 100, title: '描述', showTips: true },\r\n    {\r\n      field: 'condition', width: 60, title: '启用条件', showTips: true,\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.editConditon(e);\r\n          },\r\n          clear: (e) => {\r\n            if (e.rowData.type === 'wf.ComponentParticipantExpression') {\r\n              const i = this.uistate.performerInfo.components.findIndex(item => item.id === e.rowData.id);\r\n              this.uistate.performerInfo.components[i].condition = '';\r\n            } else if (e.rowData.type === 'wf.ReportingLineParticipantExpression') {\r\n              const i = this.uistate.performerInfo.reportingLines.findIndex(item => item.id === e.rowData.id);\r\n              this.uistate.performerInfo.reportingLines[i].condition = '';\r\n            } else if (e.rowData.type === 'wf.MatrixParticipantExpression') {\r\n              const i = this.uistate.performerInfo.matrixParticipants.findIndex(item => item.id === e.rowData.id);\r\n              this.uistate.performerInfo.matrixParticipants[i].condition = '';\r\n            } else if (e.rowData.type === 'wf.ActivityExecutorParticipantExpression') {\r\n              const i = this.uistate.performerInfo.activityExecutors.findIndex(item => item.id === e.rowData.id);\r\n              this.uistate.performerInfo.activityExecutors[i].condition = '';\r\n            } else if (e.rowData.type === 'wf.OrganizationParticipantExpression'){\r\n              this.uistate.performerInfo.organizationParticipants[0].condition = '';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  curPerformer: any;\r\n  editState = 'new'; // 编辑状态，用于区分是新增还是编辑  new | edit\r\n\r\n  constructor(\r\n    public viewModel: PerformerViewModel,\r\n    public uistate: PerformerUIState,\r\n    private formBuilder: FormBuilder,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private http: HttpService,\r\n  ) {\r\n    this.GetOrganizationType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.type = this.editorParams.type;\r\n    this.nodeType = this.editorParams.nodeType;\r\n    this.getMatrixConfig().subscribe(re => {\r\n      if (re && re.currentValue === 'false') {\r\n        this.display = false;\r\n      }\r\n    });\r\n  }\r\n  switchChange(data: boolean) {\r\n    if (data) {\r\n      this.uistate.clearPerformer();\r\n    }\r\n  }\r\n  // add() {\r\n  //   this.editState = 'new';\r\n  //   const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n  //   this.compRef = compFactory.create(this.injector);\r\n  //   this.compRef.instance.display = this.display;\r\n\r\n  //   const modalConfig = {\r\n  //     title: '参与者选择',\r\n  //     width: 700,\r\n  //     height: 400,\r\n  //     buttons: this.editFooter,\r\n  //     showButtons: true\r\n  //   };\r\n  //   this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n  // }\r\n  addPerformer(performerType: string){\r\n    this.editState = 'new';\r\n    const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n    this.compRef = compFactory.create(this.injector);\r\n    this.compRef.instance.display = this.display;\r\n    this.compRef.instance.performerType = performerType;\r\n\r\n    const modalConfig = {\r\n      title: '参与者选择',\r\n      width: 700,\r\n      height: 400,\r\n      buttons: this.editFooter,\r\n      showButtons: true\r\n    };\r\n    this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n    this.dropDownEl.close();\r\n  }\r\n  edit() {\r\n    this.editState = 'edit';\r\n    if (this.uistate.curPerformer) {\r\n      const modalConfig = {\r\n        title: '参与者选择',\r\n        width: 700,\r\n        height: 400,\r\n        buttons: this.editFooter,\r\n        showButtons: true\r\n      };\r\n      const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n      this.compRef = compFactory.create(this.injector);\r\n      this.compRef.instance.performerType = this.uistate.curPerformer.type;\r\n      switch (this.uistate.curPerformer.type) {\r\n        case 'wf.PositionParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.PositionParticipantExpression',\r\n            value: this.uistate.performerInfo.performers.find(p => p.id === this.uistate.curPerformer.id)\r\n          };\r\n          break;\r\n        case 'wf.UserParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.UserParticipantExpression',\r\n            value: this.uistate.performerInfo.performers.find(p => p.id === this.uistate.curPerformer.id)\r\n          };\r\n          break;\r\n        case 'wf.VariableParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.VariableParticipantExpression',\r\n            value: this.uistate.performerInfo.variablePerformers.find(p => p.id === this.uistate.curPerformer.id)\r\n          };\r\n          break;\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          const reportingLine = this.uistate.performerInfo.reportingLines.find(r => {\r\n            return r.id === this.uistate.curPerformer.id;\r\n          });\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ReportingLineParticipantExpression',\r\n            value: reportingLine\r\n          };\r\n          const url = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + reportingLine.reportingLineDefId;\r\n          this.http.get(url).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error('该条汇报关系数据的定义已删除，该条数据将删除')\r\n              this.remove();\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.MatrixParticipantExpression':\r\n          const matrix = this.uistate.performerInfo.matrixParticipants.find(r => {\r\n            return r.id === this.uistate.curPerformer.id;\r\n          });\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.MatrixParticipantExpression',\r\n            value: matrix\r\n          };\r\n          const urlMatrix = '/api/runtime/wf/v1.0/matrixDefinition/' + matrix.matrixDefId;\r\n          this.http.get(urlMatrix).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error('该条矩阵数据的定义已删除，该条数据将删除')\r\n              this.remove();\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.ComponentParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ComponentParticipantExpression',\r\n            value: this.uistate.performerInfo.components.find(c => {\r\n              return c.id === this.uistate.curPerformer.id;\r\n            })\r\n          };\r\n          break;\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ActivityExecutorParticipantExpression',\r\n            value: this.uistate.performerInfo.activityExecutors.find( c => {\r\n              return c.id === this.uistate.curPerformer.id;\r\n            })\r\n          };\r\n          break;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.OrganizationParticipantExpression',\r\n            value: this.uistate.performerInfo.organizationParticipants[0]\r\n          };\r\n          break;\r\n      }\r\n      if(this.uistate.curPerformer.type !== 'wf.ReportingLineParticipantExpression' &&\r\n        this.uistate.curPerformer.type !== 'wf.MatrixParticipantExpression'){ // 汇报关系和矩阵单独处理\r\n        this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n      }\r\n    }\r\n  }\r\n  remove() {\r\n    if (this.grid.selectedRow) {\r\n      this.grid.endCellEdit();\r\n      if (this.grid.selectedRow.data.type === 'wf.ComponentParticipantExpression') {\r\n        const i = this.uistate.performerInfo.components.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.components.splice(i, 1);\r\n      } else if (this.grid.selectedRow.data.type === 'wf.ReportingLineParticipantExpression') {\r\n        const i = this.uistate.performerInfo.reportingLines.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.reportingLines.splice(i, 1);\r\n      } else if (this.grid.selectedRow.data.type === 'wf.MatrixParticipantExpression') {\r\n        const i = this.uistate.performerInfo.matrixParticipants.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.matrixParticipants.splice(i, 1);\r\n      } else if (this.grid.selectedRow.data.type === 'wf.ActivityExecutorParticipantExpression') {\r\n        const i = this.uistate.performerInfo.activityExecutors.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.activityExecutors.splice(i, 1);\r\n      } else if (this.grid.selectedRow.data.type === 'wf.OrganizationParticipantExpression') {\r\n        const i = this.uistate.performerInfo.organizationParticipants = new Array();\r\n      } else if (this.grid.selectedRow.data.type === 'wf.VariableParticipantExpression') {\r\n        const i = this.uistate.performerInfo.variablePerformers.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.variablePerformers.splice(i, 1);\r\n      } else {\r\n        const i = this.uistate.performerInfo.performers.findIndex(item => item.id === this.grid.selectedRow.data.id);\r\n        this.uistate.performerInfo.performers.splice(i, 1);\r\n      }\r\n      const index = this.uistate.performersList.findIndex(p => p.id === this.grid.selectedRow.data.id);\r\n      this.uistate.performersList.splice(index, 1);\r\n\r\n      this.grid.loadData(this.uistate.performersList);\r\n    } else {\r\n      this.message.info('请先选中一条参与者信息！');\r\n    }\r\n  }\r\n  clear() {\r\n    this.uistate.performerInfo.performers = [];\r\n    this.uistate.performerInfo.variablePerformers = [];\r\n    this.uistate.performerInfo.components = [];\r\n    this.uistate.performerInfo.reportingLines = [];\r\n    this.uistate.performerInfo.matrixParticipants = [];\r\n    this.uistate.performerInfo.activityExecutors = [];\r\n    this.uistate.performerInfo.organizationParticipants = new Array();\r\n    this.uistate.performersList = [];\r\n    this.grid.loadData(this.uistate.performersList);\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    const object = {\r\n      value: this.uistate.performerInfo, parameters: null\r\n    };\r\n    this.submitModal.emit(object);\r\n  }\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n  editOK() {\r\n    this.isClose = true;\r\n    if (this.compRef) {\r\n      const re = this.compRef.instance.getPerformers();\r\n      if (re.userPerformers && re.userPerformers.length > 0) {\r\n        re.userPerformers.forEach(p => {\r\n          const i = this.uistate.performerInfo.performers.findIndex(a => (a.id === p.id || a.performerId === p.performerId));\r\n          if (i > -1) {\r\n            const id = this.uistate.performerInfo.performers[i].id;\r\n            this.uistate.performerInfo.performers[i] = p;\r\n            const index = this.uistate.performersList.findIndex(a => a.id === id);\r\n            this.uistate.performersList[index] = p;\r\n          } else {\r\n            if (this.editState === 'edit') {\r\n              this.remove();\r\n            }\r\n            this.uistate.performerInfo.performers.push(p);\r\n            this.uistate.performersList = this.uistate.performersList.concat([p]);\r\n          }\r\n        });\r\n        this.uistate.performersList\r\n          .filter(p => p.type === this.uistate.typeCollection[0].value || p.type === this.uistate.typeCollection[1].value )\r\n          .map(performer => performer.description =\r\n            this.performerDescription(performer as any));\r\n      }\r\n      if (re.positions && re.positions.length > 0) {\r\n        for (const position of re.positions) {\r\n          if (position && position !== null && position.id) {\r\n            const p = position;\r\n            if (!p.performerId) {\r\n              this.message.info('尚未选择岗位！');\r\n              this.isClose = false;\r\n            } else {\r\n              if ((!p.orgType || p.orgType == null) && (p.isRequired && p.positionType === '1')) {\r\n                this.message.info('尚未选择组织类型！');\r\n                this.isClose = false;\r\n              } else if ((!p.orgId || p.orgId == null) && (p.isRequired && p.positionType === '1')) {\r\n                this.message.info('尚未填写组织！');\r\n                this.isClose = false;\r\n              } else {\r\n                // (1)id一致，为编辑岗位；（2）performid一致，新增的用户，岗位已存在\r\n                const i = this.uistate.performerInfo.performers.findIndex(a => (a.id === p.id || (a.performerId === p.performerId && a.orgId === p.orgId)));\r\n                if (i > -1) {\r\n                  const id = this.uistate.performerInfo.performers[i].id;\r\n                  this.uistate.performerInfo.performers[i] = p;\r\n                  const index = this.uistate.performersList.findIndex(a => a.id === id);\r\n                  this.uistate.performersList[index] = p;\r\n                } else {\r\n                  this.uistate.performerInfo.performers.push(p);\r\n                  this.uistate.performersList = this.uistate.performersList.concat([p]);\r\n                }\r\n                this.uistate.performersList\r\n                  .filter(p => p.type === this.uistate.typeCollection[0].value || p.type === this.uistate.typeCollection[1].value)\r\n                  .map(performer => performer.description =\r\n                    this.performerDescription(performer as any));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (re.component && re.component.metadataId && re.component.methodCode) {\r\n        const i = this.uistate.performerInfo.components.findIndex(a => a.id === re.component.id);\r\n        if (i > -1) {\r\n          this.uistate.performerInfo.components[i] = re.component;\r\n          const index = this.uistate.performersList.findIndex(a => a.id === re.component.id);\r\n          this.uistate.performersList[index] = {\r\n            id: re.component.id,\r\n            type: 'wf.ComponentParticipantExpression',\r\n            performerName: re.component.name,\r\n            description: this.componentDescription(re.component),\r\n            condition: re.component.condition\r\n          };\r\n        } else {\r\n          this.uistate.performerInfo.components.push(re.component);\r\n          this.uistate.performersList.push({\r\n            id: re.component.id,\r\n            type: 'wf.ComponentParticipantExpression',\r\n            performerName: re.component.name,\r\n            description: this.componentDescription(re.component),\r\n            condition: ''\r\n          });\r\n        }\r\n      }\r\n      if (re.reportingLine && re.reportingLine.reportingLineDefId && re.reportingLine.dimension) {\r\n        if(re.reportingLine.reportingReferObject === 'dept' && !re.reportingLine.refOrgId){\r\n          this.isClose = false;\r\n          this.message.info('“部门”汇报关系类型下，参照人所在部门不能为空');\r\n        } else if (re.reportingLine.reportingReferObject !== 'dept' && !re.reportingLine.refUserId && !re.reportingLine.refEmployeeId) { // 用户及其他人员汇报对象类型，参照用户和参照员工不能全部为空\r\n          this.isClose = false;\r\n          this.message.info('“用户”汇报关系类型下，参照人不能为空');\r\n        } else {\r\n          this.isClose = true;\r\n          this.addReportingLineData(re);\r\n        }\r\n      }\r\n      if (re.matrix && re.matrix.matrixDefId) {\r\n        if(!re.matrix.conditionField1 && !re.matrix.conditionField2 && !re.matrix.conditionField3){\r\n          this.isClose = false;\r\n          this.message.info('条件字段至少要存在一个');\r\n        } else if(!re.matrix.dataFieldAlias){\r\n          this.isClose = false;\r\n          this.message.info('数据字段不能为空');\r\n        } else {\r\n          this.isClose = true;\r\n          this.addMatrixData(re);\r\n        }\r\n      }\r\n      if (re.activityExecutorPerformers && re.activityExecutorPerformers.length > 0) {\r\n        re.activityExecutorPerformers.forEach(p => {\r\n          const i = this.uistate.performerInfo.activityExecutors.findIndex(a => (a.id === p.id || a.activityDefId === p.activityDefId));\r\n          if (i < 0) {\r\n            if (this.editState === 'edit') {\r\n              this.remove(); // 在编辑状态下配置了活动办理人参与者，先将选中的删除\r\n            }\r\n            this.uistate.performerInfo.activityExecutors.push(p);\r\n            this.uistate.performersList = this.uistate.performersList.concat([p]);\r\n          }\r\n        });\r\n        this.uistate.performersList\r\n          .filter(p => p.type === this.uistate.typeCollection[5].value )\r\n          .map(performer => performer.description =\r\n            this.performerDescription(performer as any));\r\n      }\r\n      if (re.organizationParticipant) {\r\n        console.log(re.organizationParticipant);\r\n        this.uistate.performerInfo.organizationParticipants = [re.organizationParticipant];\r\n        this.uistate.performersList = this.uistate.performersList.filter(p => p.type !== 'wf.OrganizationParticipantExpression');\r\n        this.uistate.performersList = this.uistate.performersList.concat({\r\n          id: re.organizationParticipant.id || ProcessDeUtil.GenerateElementId(),\r\n          type: 'wf.OrganizationParticipantExpression',\r\n          performerName: re.organizationParticipant.organizationName,\r\n          description: re.organizationParticipant.organizationName +'，且' +(re.organizationParticipant.includeChildren ? '包含下级':'不包含下级'),\r\n          condition: re.organizationParticipant.condition\r\n        });\r\n      }\r\n      this.grid.loadData(this.uistate.performersList);\r\n    }\r\n    if (this.editDialog && this.isClose) {\r\n      this.editDialog.close();\r\n    }\r\n  }\r\n  private addReportingLineData(re: any){\r\n    const i = this.uistate.performerInfo.reportingLines.findIndex(a => a.id === re.reportingLine.id);\r\n    if (i > -1) {\r\n      this.uistate.performerInfo.reportingLines[i] = re.reportingLine;\r\n      const index = this.uistate.performersList.findIndex(a => a.id === re.reportingLine.id);\r\n      this.uistate.performersList[index] = {\r\n        id: re.reportingLine.id,\r\n        type: 'wf.ReportingLineParticipantExpression',\r\n        performerName: re.reportingLine.reportingLineDefName + '-' + re.reportingLine.dimension,\r\n        description: this.reportingLineDescription(re.reportingLine),\r\n        condition: re.reportingLine.condition\r\n      };\r\n    } else {\r\n      for(const reportingLineData of this.uistate.performerInfo.reportingLines){\r\n        if(reportingLineData.reportingLineDefId === re.reportingLine.definitionId &&\r\n          reportingLineData.dimension === re.reportingLine.dimension &&\r\n          reportingLineData.refUserId === re.reportingLine.referUserId &&\r\n          reportingLineData.refEmployeeId === re.reportingLine.refEmployeeId &&\r\n          reportingLineData.refOrgId === re.reportingLine.referDeptId\r\n        ){\r\n          this.message.error('该汇报关系已经进行过配置');\r\n          return;\r\n        }\r\n      }\r\n      this.uistate.performerInfo.reportingLines.push(re.reportingLine);\r\n      this.uistate.performersList.push({\r\n        id: re.reportingLine.id,\r\n        type: 'wf.ReportingLineParticipantExpression',\r\n        performerName: re.reportingLine.reportingLineDefName + '-' + re.reportingLine.dimension,\r\n        description: this.reportingLineDescription(re.reportingLine),\r\n        condition: re.reportingLine.condition\r\n      });\r\n    }\r\n  }\r\n  private addMatrixData(re: any){\r\n    const i = this.uistate.performerInfo.matrixParticipants.findIndex(a => a.id === re.matrix.id);\r\n    if (i > -1) {\r\n      this.uistate.performerInfo.matrixParticipants[i] = re.matrix;\r\n      const index = this.uistate.performersList.findIndex(a => a.id === re.matrix.id);\r\n      this.uistate.performersList[index] = {\r\n        id: re.matrix.id,\r\n        type: 'wf.MatrixParticipantExpression',\r\n        performerName: re.matrix.matrixDefName + '-' + re.matrix.dataFieldAlias,\r\n        description: this.matrixDescription(re.matrix),\r\n        condition: re.matrix.condition\r\n      };\r\n    } else {\r\n      for(const matrixData of this.uistate.performerInfo.matrixParticipants){\r\n        if(matrixData.matrixDefId === re.matrix.matrixDefId &&\r\n          matrixData.conditionField1 === re.matrix.conditionField1 &&\r\n          matrixData.conditionField2 === re.matrix.conditionField2 &&\r\n          matrixData.conditionField3 === re.matrix.conditionField3 &&\r\n          matrixData.dataFieldAlias === re.matrix.dataFieldAlias\r\n        ){\r\n          this.message.error('该矩阵已经进行过配置');\r\n          return;\r\n        }\r\n      }\r\n      this.uistate.performerInfo.matrixParticipants.push(re.matrix);\r\n      this.uistate.performersList.push({\r\n        id: re.matrix.id,\r\n        type: 'wf.MatrixParticipantExpression',\r\n        performerName: re.matrix.matrixDefName + '-' + re.matrix.dataFieldAlias,\r\n        description: this.matrixDescription(re.matrix),\r\n        condition: re.matrix.condition\r\n      });\r\n    }\r\n  }\r\n  editCancel() {\r\n    if (this.editDialog) {\r\n      this.editDialog.close();\r\n    }\r\n  }\r\n  participantOptionsSet() {\r\n    this.uistate.performerInfo.options = this.options.getPerformerOptions();\r\n    this.optionsDialog.close();\r\n  }\r\n\r\n  private performerDescription(performer: PerformerEntity) {\r\n    if (performer.type === 'wf.UserParticipantExpression' || performer.type === 'wf.VariableParticipantExpression') {\r\n      if (performer.tag === 'expression') {\r\n        return performer.performerId;\r\n      } else {\r\n        if (performer.orgName) {\r\n          return `组织：${performer.orgName}`;\r\n        } else {\r\n          return '';\r\n        }\r\n      }\r\n    } else if (performer.type === 'wf.PositionParticipantExpression') {\r\n      if (this.designerUIState.scene === 'inSuite') {\r\n        return null;\r\n      }\r\n      if ((performer as PositionPerformerEntity).positionType === '1') {\r\n        if (performer.orgId) {\r\n          return `岗位类型：通用岗位，组织：${performer.orgId}`;\r\n        } else {\r\n          return `岗位类型：通用岗位`;\r\n        }\r\n      } else if ((performer as PositionPerformerEntity).positionType === '0') {\r\n        return '岗位类型：组织岗位';\r\n      }\r\n    } else if(performer.type === 'wf.ActivityExecutorParticipantExpression') {\r\n      return performer.performerName;\r\n    }\r\n  }\r\n  private componentDescription(component: ComponentPerformer) {\r\n    let des = `构件：${component.name},参数：{`;\r\n    if (component.actualParameters && component.actualParameters.length > 0) {\r\n      component.actualParameters.forEach(p => {\r\n        des += `${p.code}：${p.value}，`;\r\n      });\r\n      des = des.substring(0, des.length - 1);\r\n    }\r\n    des += '}';\r\n    return des;\r\n  }\r\n  private reportingLineDescription(reportingLine: ReportingLineDataEntity) {\r\n    let description = '';\r\n    if(reportingLine.refUserId){\r\n      description += `参照人：${reportingLine.refUserId}`;\r\n    }\r\n    if(reportingLine.refEmployeeId){\r\n      description += `参照人：${reportingLine.refEmployeeId}`;\r\n    }\r\n    if(reportingLine.refOrgId){\r\n      if(reportingLine.refUserId){\r\n        description += `，`;\r\n      }\r\n      if(reportingLine.refEmployeeId){\r\n        description += `，`;\r\n      }\r\n      description += `参照组织：${reportingLine.refOrgId}`;\r\n    }\r\n    return description;\r\n  }\r\n  private matrixDescription(matrix: MatrixDataInfoEntity) {\r\n    let description = '';\r\n    if(matrix.conditionField1){\r\n      description += `条件1：${matrix.conditionFieldText1}，`;\r\n    }\r\n    if(matrix.conditionField2){\r\n      description += `条件2：${matrix.conditionFieldText2}，`;\r\n    }\r\n    if(matrix.conditionField3){\r\n      description += `条件3：${matrix.conditionFieldText3}，`;\r\n    }\r\n    if(matrix.dataFieldAlias){\r\n      description += `数据：${matrix.dataFieldAlias}，`;\r\n    }\r\n    return description.slice(0, description.length - 1);\r\n  }\r\n\r\n  editConditon(e: any) {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 默认打开简易表达式编辑器\r\n    this.expr.buildExpression().then((cond: string) => {\r\n      if (this.grid.selectedRow.data.type === 'wf.ComponentParticipantExpression') {\r\n        this.uistate.performerInfo.components.find(c => c.id === this.grid.selectedRow.data.id).condition = cond;\r\n      } else if (this.grid.selectedRow.data.type === 'wf.ReportingLineParticipantExpression') {\r\n        this.uistate.performerInfo.reportingLines.find(c => c.id === this.grid.selectedRow.data.id).condition = cond;\r\n      } else if (this.grid.selectedRow.data.type === 'wf.MatrixParticipantExpression'){\r\n        this.uistate.performerInfo.matrixParticipants.find(c => c.id === this.grid.selectedRow.data.id).condition = cond;\r\n      } else if (this.grid.selectedRow.data.type === 'wf.ActivityExecutorParticipantExpression'){\r\n        this.uistate.performerInfo.activityExecutors.find(c => c.id === this.grid.selectedRow.data.id).condition = cond;\r\n      } else {\r\n        this.uistate.performerInfo.performers.find(p => p.id === this.grid.selectedRow.data.id).condition = cond;\r\n      }\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  afterEdit = (rowIndex: number, rowData: any, column?: DataColumn) => {\r\n    return of(true);\r\n  }\r\n\r\n  selectChanged(data: any) {\r\n    this.uistate.curPerformer = data.data;\r\n  }\r\n\r\n  private GetOrganizationType() {\r\n    const url = '/api/runtime/sys/v1.0/authfields/globalauthfields';\r\n    this.http.get(url)\r\n      .subscribe((data: any) => this.designerUIState.orgTypeCollection = data.map(d => ({ value: d.id, text: d.name })));\r\n  }\r\n\r\n  private getMatrixConfig(): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/generalConfig/Is_EnableMatrix`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n}\r\nexport class PerformerConverter implements TypeConverter {\r\n  constructor() { }\r\n\r\n  convertTo(data: any): string {\r\n    if ((data.performers && data.performers.length > 0)\r\n      || (data.variablePerformers && data.variablePerformers.length > 0)\r\n      || (data.components && data.components.length > 0)\r\n      || (data.reportingLines && data.reportingLines.length > 0)\r\n      || (data.matrixParticipants && data.matrixParticipants.length > 0)\r\n      || (data.activityExecutors && data.activityExecutors.length > 0)\r\n      || (data.organizationParticipants && data.organizationParticipants.length > 0)\r\n      || data.isAllScope\r\n    ) {\r\n      return '（已设置）';\r\n    } else {\r\n      return '（未设置）';\r\n    }\r\n  }\r\n}\r\n","import { ParticipantInfo } from \"../participant/participant.info\";\r\n\r\nexport class ActionOrganizationScope {\r\n    enable: boolean;\r\n    action: ActionScope;\r\n    scope: OrganizationPotentialOwner;\r\n}\r\n\r\nexport class ActionOrganizationScopeDesign {\r\n    enable: boolean;\r\n    action: ActionScope;\r\n    scope: OrganizationPotentialOwner;\r\n}\r\nexport class OrganizationPotentialOwner {\r\n    /**\r\n     * 作用域：AssignUser, Transfer, AddSignFront, AddSignBehind\r\n     */\r\n    actionScope: ActionScope;\r\n    /**\r\n     * 部门：DEPARTMENT；单位：UNIT\r\n     */\r\n    organizationLevel: OrganizationLevel;\r\n    /**\r\n     * 组织Id：currentDepartment, currentUnit\r\n     */\r\n    organizationId: string;\r\n    /**\r\n     * 组织编号\r\n     */\r\n    organizationCode: string;\r\n    /**\r\n     * 组织名称\r\n     */\r\n    organizationName: string;\r\n    /**\r\n     * 包含下级\r\n     */\r\n    includeChildren: boolean;\r\n    /**\r\n     * 遍历父级\r\n     */\r\n    parentsUntil: boolean;\r\n    /**\r\n     * variable 变量值\r\n     * expression 表达式值\r\n     * constant 常量值\r\n     */\r\n    tag: string;\r\n\r\n    /**\r\n     * 先改一下  存人员信息\r\n     */\r\n    participantInfo: ParticipantInfo;\r\n}\r\n\r\nexport enum ActionScope {\r\n    /**\r\n     * 指派\r\n     */\r\n    AssignUser = 'AssignUser',\r\n    /**\r\n     * 移交\r\n     */\r\n    Transfer = 'Transfer',\r\n    /**\r\n     * 征询\r\n     */\r\n    AddSignFront = 'AddSignFront',\r\n    /**\r\n     * 加签\r\n     */\r\n    AddSignBehind = 'AddSignBehind',\r\n    /**\r\n     * 知会\r\n     */\r\n    Notify = \"Notify\",\r\n}\r\n\r\nexport enum OrganizationLevel {\r\n    /**\r\n     * 部门\r\n     */\r\n    DEPARTMENT = 'DEPARTMENT',\r\n    /**\r\n     * 单位\r\n     */\r\n    UNIT = 'UNIT',\r\n    /**\r\n     * 默认值\r\n     */\r\n    DEFAULT = 'DEFAULT',\r\n    \r\n    VARORGANIZATION = 'VARORGANIZATION'\r\n}\r\n","import { AssignStrategy } from \"../assign-strategy/assign-strategy\";\r\nimport { PerformerInfo } from \"../performer/entities/performer-info.entity\";\r\n\r\nexport class ParticipantInfo {\r\n    constructor() {\r\n        this.assignStrategy = new AssignStrategy();\r\n        this.humanPerformerList = new Array();\r\n        this.potentialOwnerList = new Array();\r\n        this.isAllScope = false;\r\n    }\r\n    assignStrategy: AssignStrategy;\r\n    humanPerformerList: Array<Participant>;\r\n    potentialOwnerList: Array<Participant>;\r\n    isAllScope: boolean;\r\n}\r\n\r\nexport class Participant {\r\n    id: string;\r\n    type: string;\r\n    condition?: string;\r\n    order?: number;\r\n}\r\n\r\n\r\nexport class UserParticipant extends Participant {\r\n    performerId: string;\r\n    performerName: string;\r\n    orgId?: string;\r\n    orgName?: string;\r\n    orgType?: string;\r\n    tag?: string;\r\n}\r\n\r\nexport class VariableParticipant extends UserParticipant {\r\n    name: string;\r\n    varValue: string;\r\n    varType: string;\r\n    relation: string;\r\n}\r\n\r\nexport class PositionParticipant extends UserParticipant {\r\n    positionType: string;\r\n    isRequired?: boolean;\r\n}\r\n\r\nexport class ComponentParticipant extends Participant {\r\n    name: string;\r\n    metadataId: string;\r\n    methodCode: string;\r\n    methodName: string;\r\n    actualParameters: Array<ActualParameter>;\r\n}\r\n\r\nexport class ReportingLineParticipant extends UserParticipant {\r\n    reportingLineDefId: string;\r\n    reportingLineDefName: string;\r\n    refOrgId: string;\r\n    refOrgName: string;\r\n    refUserId: string;\r\n    refEmployeeId: string;\r\n    dimension: string;\r\n    reportingReferObject: string;\r\n}\r\n\r\nexport class MatrixParticipant extends UserParticipant {\r\n\r\n    matrixDefId: string; // 用于存储字段id\r\n    matrixDefName: string;\r\n    conditionField1: string;\r\n    conditionFieldText1: string;\r\n    conditionField2: string;\r\n    conditionFieldText2: string;\r\n    conditionField3: string;\r\n    conditionFieldText3: string;\r\n    dataFieldAlias: string;\r\n}\r\n\r\nexport class ActivityExecutorParticipant extends UserParticipant {\r\n  activityDefId: string;\r\n  activityDefName: string;\r\n}\r\n\r\nexport class OrganizationParticipant extends Participant {\r\n    name: string;\r\n    actionScope: ActionScope;\r\n    organizationLevel: OrganizationLevel;\r\n    organizationId: string ;\r\n    organizationCode: string ;\r\n    organizationName: string ;\r\n    includeChildren: boolean ;\r\n    parentsUntil: boolean;\r\n    tag: string;\r\n}\r\n\r\nexport enum ActionScope {\r\n    /**\r\n     * 指派\r\n     */\r\n    AssignUser = 'AssignUser',\r\n    /**\r\n     * 移交\r\n     */\r\n    Transfer = 'Transfer',\r\n    /**\r\n     * 征询\r\n     */\r\n    AddSignFront = 'AddSignFront',\r\n    /**\r\n     * 加签\r\n     */\r\n    AddSignBehind = 'AddSignBehind',\r\n    /**\r\n     * 知会\r\n     */\r\n    Notify = 'Notify',\r\n}\r\nexport enum OrganizationLevel {\r\n    /**\r\n     * 部门\r\n     */\r\n    DEPARTMENT = 'DEPARTMENT',\r\n    /**\r\n     * 单位\r\n     */\r\n    UNIT = 'UNIT',\r\n    /**\r\n    * 默认值\r\n    */\r\n    DEFAULT = 'DEFAULT',\r\n\r\n    VARORGANIZATION = 'VARORGANIZATION'\r\n}\r\n\r\n\r\nexport class ActualParameter {\r\n    code: string;\r\n    value: string;\r\n    valueText: string;\r\n    tag: string;\r\n    fetchValueMode?: any;\r\n    fetchValueSetting?: any;\r\n}\r\n\r\n","export class AssignConfig {\r\n    constructor() {\r\n        this.operator = 'currentUser';\r\n        this.multiSelect = true;\r\n        this.necessary = false;\r\n    }\r\n    operator: string;\r\n    multiSelect: boolean;\r\n    necessary: boolean;\r\n}\r\n","import { AssignConfig } from \"./assign-config\";\r\n\r\nexport class AssignStrategy {\r\n    constructor() {\r\n        this.assignStrategy = 'ALL';\r\n        this.assignConfig = new AssignConfig();\r\n    }\r\n    assignStrategy: string;\r\n    assignConfig: AssignConfig;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\nexport class ParticipantUIState {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) {}\r\n  typeCollection = [\r\n    { text: this.localePipe.transform('component.participant.user'), value: 'wf.UserParticipantExpression' },\r\n    { text: this.localePipe.transform('component.participant.variable'), value: 'wf.VariableParticipantExpression' },\r\n    { text: this.localePipe.transform('component.participant.position'), value: 'wf.PositionParticipantExpression' },\r\n    { text: this.localePipe.transform('component.participant.component'), value: 'wf.ComponentParticipantExpression' },\r\n    { text: this.localePipe.transform('component.participant.reportingLine'), value: 'wf.ReportingLineParticipantExpression' },\r\n    { text: this.localePipe.transform('component.participant.matrix'), value: 'wf.MatrixParticipantExpression' },\r\n    { text: this.localePipe.transform('component.participant.activityExecutor'), value: 'wf.ActivityExecutorParticipantExpression' },\r\n    { text: this.localePipe.transform('component.participant.organization'), value: 'wf.OrganizationParticipantExpression' }\r\n  ];\r\n}\r\n","import { ChangeDetectorRef, Component, ComponentFactoryResolver, ComponentRef, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { FDropdownDirective } from '@farris/ui-dropdown';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalRef, BsModalService } from '@farris/ui-modal';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../../app/process-designer.uistate';\r\nimport { OrganizationParticipantExpression } from '../../../domain/entities/organization-participant-expression';\r\nimport { ProcessDeUtil } from '../../../domain/process-de-util';\r\nimport { ComponentPerformer } from '../../performer/views/component-performer/component-performer.entity';\r\nimport { PerformerEditComponent } from '../../performer/views/performer-edit/performer-edit.component';\r\nimport { AssignConfig } from '../assign-config';\r\nimport { ActivityExecutorParticipant, ComponentParticipant, MatrixParticipant, OrganizationParticipant, ParticipantInfo, PositionParticipant, ReportingLineParticipant, UserParticipant, VariableParticipant } from '../participant.info';\r\nimport { ParticipantUIState } from '../participant.uistate';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'wf-alternative-participant',\r\n  templateUrl: './alternative-participant.component.html',\r\n  styleUrls: ['./alternative-participant.component.css'],\r\n  providers: [\r\n    ParticipantUIState,\r\n     WfLocalePipe\r\n  ]\r\n})\r\nexport class AlternativeParticipantComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  // @ViewChild('dropdownEl') dropDownEl: FDropdownDirective;\r\n  @ViewChild('dropdownE2') dropDownE2: FDropdownDirective;\r\n  @ViewChild('editFooter') editFooter: TemplateRef<any>;\r\n  // @ViewChild('humanPerformerGrid') humanPerformerGrid: DatagridComponent;\r\n  @ViewChild('potentialOwnerGrid') potentialOwnerGrid: DatagridComponent;\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  nodeType: 'userActivity' | 'notifyActivity'  = 'notifyActivity';\r\n\r\n  editDialog: BsModalRef;\r\n  compRef: ComponentRef<PerformerEditComponent>;\r\n  isClose = true;\r\n\r\n  participant: ParticipantInfo = new ParticipantInfo();\r\n  editState = 'new'; // 编辑状态，用于区分是新增还是编辑  new | edit\r\n\r\n  type = 'potentialOwner';\r\n\r\n  operatorCollection = [\r\n    { text: this.localePipe.transform('component.participant.currentUser'), value: 'currentUser' },\r\n    { text: this.localePipe.transform('component.participant.procInstCreator'), value: 'procInstCreator' }\r\n  ];\r\n\r\n  columns = [\r\n    {\r\n      field: 'order', width: 25, title: this.localePipe.transform('component.participant.order'),\r\n      editor: {\r\n        type: EditorTypes.NUMBERBOX, options: {\r\n        }\r\n      },\r\n    }, {\r\n    field: 'type', width: 50, title: this.localePipe.transform('component.participant.type'),\r\n    formatter: {\r\n      type: 'enum',\r\n      options: { valueField: 'value', textField: 'text', data: this.uistate.typeCollection }\r\n    }\r\n    }, {\r\n    field: 'performerName', width: 50, title: this.localePipe.transform('component.participant.performerName'), showTips: true, formatter: (v, d, i) => {\r\n      switch (d.type) {\r\n        case 'wf.UserParticipantExpression':\r\n          return d.performerName;\r\n        case 'wf.VariableParticipantExpression':\r\n          return (d as VariableParticipant).name;\r\n        case 'wf.PositionParticipantExpression':\r\n          return (d as PositionParticipant).performerName;\r\n        case 'wf.ComponentParticipantExpression':\r\n          return (d as ComponentParticipant).name;\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          return (d as ReportingLineParticipant).reportingLineDefName + '-' + (d as ReportingLineParticipant).dimension;\r\n        case 'wf.MatrixParticipantExpression':\r\n          return (d as MatrixParticipant).matrixDefName + '-' + (d as MatrixParticipant).dataFieldAlias;\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          return (d as ActivityExecutorParticipant).performerName;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          return (d as OrganizationParticipant).organizationName;\r\n        default:\r\n          return '';\r\n      }\r\n    }\r\n  },\r\n  {\r\n    field: 'description', width: 100, title: this.localePipe.transform('component.participant.description'), showTips: true,\r\n    formatter: (v, d, i) => {\r\n      switch (d.type) {\r\n        case 'wf.UserParticipantExpression':\r\n          return this.getUserPerformerDescription(d);\r\n        case 'wf.VariableParticipantExpression':\r\n          return this.getVariablePerformerDescription(d);\r\n        case 'wf.PositionParticipantExpression':\r\n          return this.getPositionPerformerDescription(d);\r\n        case 'wf.ComponentParticipantExpression':\r\n          return this.getComponentPerformerDescription(d);\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          return this.getReportingLinePerformerDescription(d);\r\n        case 'wf.MatrixParticipantExpression':\r\n          return this.getMatrixPerformerDescription(d);\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          return (d as ActivityExecutorParticipant).performerName;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          return (d as OrganizationParticipant).organizationName + '，且' + ((d as OrganizationParticipant).includeChildren ? '包含下级' : '不包含下级');\r\n        default:\r\n          return '';\r\n      }\r\n    }\r\n  },\r\n  {\r\n    field: 'condition', width: 60, title: this.localePipe.transform('component.participant.condition'), showTips: true,\r\n    editor: {\r\n      type: 'input-group',\r\n      options: {\r\n        groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n        editable: false,\r\n        clickHandle: (e) => {\r\n          e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n          this.editConditon(e);\r\n        },\r\n      }\r\n    }\r\n    }];\r\n\r\n  constructor(\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private uistate: ParticipantUIState,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private expr: ExpressionService,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.GetOrganizationType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nodeType = this.editorParams.nodeType;\r\n  }\r\n\r\n  switchChange(data: boolean) {\r\n    if (data) {\r\n      this.clearPerformer('potentialOwner');\r\n    }\r\n  }\r\n\r\n  assignStrategyChange(data) {\r\n    // this.preAssignStrategy = data;\r\n    if(data === 'ALL') {\r\n      this.participant.isAllScope = true;\r\n      this.clearPerformer('potentialOwner');\r\n    }else {\r\n      this.participant.isAllScope = false;\r\n    }\r\n  }\r\n\r\n  isEnable(data) {\r\n    if(data) {\r\n      this.participant.isAllScope = true;\r\n      this.clearPerformer('potentialOwner');\r\n    }else {\r\n      this.participant.isAllScope = false;\r\n    }\r\n  }\r\n\r\n  addPerformer(performerType: string, type: string) {\r\n    this.editState = 'new';\r\n    this.type = type;\r\n    const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n    this.compRef = compFactory.create(this.injector);\r\n    this.compRef.instance.performerType = performerType;\r\n    const boxsize = this.attributeBoxSize(performerType);\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.participant.participantSelection'),\r\n      width: boxsize.width,\r\n      height: boxsize.height,\r\n      buttons: this.editFooter,\r\n      showButtons: true\r\n    };\r\n    this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n    // this.dropDownEl.close();\r\n    if (this.dropDownE2) {\r\n      this.dropDownE2.close();\r\n    }\r\n  }\r\n\r\n  editOK() {\r\n    this.isClose = true;\r\n    if (this.compRef) {\r\n      const re = this.compRef.instance.getPerformers();\r\n      if (re.userPerformers && re.userPerformers.length > 0) {\r\n        for (const p of re.userPerformers) {\r\n          this.addUserPerformer(p);\r\n        }\r\n      }\r\n      if (re.variable && re.variable !== null && re.variable.performerId) {\r\n        this.addvariablePerformer(re.variable);\r\n      }\r\n      // 2023-7-28 组织岗支持多选\r\n      if (re.positions && re.positions.length > 0) {\r\n        this.addPositionPerformer(re.positions);\r\n      }\r\n      if (re.component && re.component.metadataId && re.component.methodCode) {\r\n        this.addComponentPerformer(re.component);\r\n      }\r\n      if (re.reportingLine && re.reportingLine.reportingLineDefId && re.reportingLine.dimension) {\r\n        this.addReportingLinePerformer(re.reportingLine);\r\n      }\r\n      if (re.matrix && re.matrix.matrixDefId) {\r\n        this.addMatrixPerformer(re.matrix);\r\n      }\r\n      if (re.activityExecutorPerformers && re.activityExecutorPerformers.length > 0) {\r\n        for (const a of re.activityExecutorPerformers) {\r\n          this.addActivityExecutorPerformer(a);\r\n        }\r\n      }\r\n      if (re.organizationParticipant) {\r\n        this.addOrganizationParticipant(re.organizationParticipant);\r\n      }\r\n    }\r\n    if (this.editDialog && this.isClose) {\r\n      this.editDialog.close();\r\n    }   \r\n    // 编辑完成后刷新两个组件\r\n    // this.humanPerformerGrid.refresh();\r\n    this.potentialOwnerGrid.refresh();\r\n  }\r\n\r\n  private addUserPerformer(userPerformer: UserParticipant) {\r\n    if (this.type === 'potentialOwner') {\r\n      const i = this.participant.potentialOwnerList.findIndex(a => (a.id === userPerformer.id || ((a as UserParticipant).performerId && (a as UserParticipant).performerId === userPerformer.performerId)));\r\n      if (i > -1) {\r\n        // this.participant.potentialOwnerList[i] = userPerformer;\r\n      } else {\r\n        if (this.editState === 'edit') {\r\n          this.removePotentialOwner();\r\n        }\r\n        let index;\r\n        if (this.participant.potentialOwnerList.length > 0) {\r\n          index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        userPerformer.order = index;\r\n        this.participant.potentialOwnerList.push(userPerformer);\r\n      }\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  private addvariablePerformer(variable: VariableParticipant) {\r\n    const v = variable;\r\n    if (!v || !v.varValue) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectProcessVariables'));\r\n      this.isClose = false;\r\n    } else if (!v.varType) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectVariableValueType'));\r\n      this.isClose = false;\r\n    } else if (!v.relation) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectRelation'));\r\n      this.isClose = false;\r\n    } else {\r\n      if (this.type === 'potentialOwner') {\r\n        const i = this.participant.potentialOwnerList.findIndex(a => (a.id === variable.id || ((a as VariableParticipant).performerId && (a as VariableParticipant).performerId === variable.performerId)));\r\n        if (i > -1) {\r\n          this.participant.potentialOwnerList[i] = variable;\r\n        } else {\r\n          if (this.editState === 'edit') {\r\n            this.removePotentialOwner();\r\n          }\r\n          let index;\r\n          if (this.participant.potentialOwnerList.length > 0) {\r\n            index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          variable.order = index;\r\n          this.participant.potentialOwnerList.push(variable);\r\n        }\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addPositionPerformer(positions: PositionParticipant[]) {\r\n    for (const position of positions) {\r\n      if (!position.performerId) {\r\n        this.message.info(this.localePipe.transform('component.participant.selectPosition'));\r\n        this.isClose = false;\r\n      } else {\r\n        if ((!position.orgType || position.orgType == null) && (position.isRequired && position.positionType === '1')) {\r\n          this.message.info(this.localePipe.transform('component.participant.selectOrgType'));\r\n          this.isClose = false;\r\n        } else if ((!position.orgId || position.orgId == null) && (position.isRequired && position.positionType === '1')) {\r\n          this.message.info(this.localePipe.transform('component.participant.orgFill'));\r\n          this.isClose = false;\r\n        } else {\r\n          // (1)id一致，为编辑岗位；（2）performid一致，新增的用户，岗位已存在\r\n          if (this.type === 'potentialOwner') {\r\n            const i = this.participant.potentialOwnerList.findIndex(a => {\r\n              if (a.type !== 'wf.PositionParticipantExpression') {\r\n                return false;\r\n              }\r\n              const p = a as PositionParticipant;\r\n              return (p.id === position.id);\r\n            });\r\n            if (i > -1) {\r\n              this.participant.potentialOwnerList[i] = position;\r\n            } else {\r\n              let index;\r\n              if (this.participant.potentialOwnerList.length > 0) {\r\n                index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n              } else {\r\n                index = 1;\r\n              }\r\n              position.order = index;\r\n              this.participant.potentialOwnerList.push(position);\r\n            }\r\n            this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private addComponentPerformer(component: ComponentPerformer) {\r\n    const cmp = new ComponentParticipant();\r\n    cmp.id = component.id;\r\n    cmp.metadataId = component.metadataId;\r\n    cmp.methodCode = component.methodCode;\r\n    cmp.methodName = component.methodName;\r\n    cmp.name = component.name;\r\n    cmp.actualParameters = component.actualParameters;\r\n    cmp.type = 'wf.ComponentParticipantExpression';\r\n    cmp.condition = component.condition;\r\n    if (this.type === 'potentialOwner') {\r\n      const i = this.participant.potentialOwnerList.findIndex(a => a.id === cmp.id);\r\n      if (i > -1) {\r\n        this.participant.potentialOwnerList[i] = cmp;\r\n      } else {\r\n        let index;\r\n        if (this.participant.potentialOwnerList.length > 0) {\r\n          index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        cmp.order = index;\r\n        this.participant.potentialOwnerList.push(cmp);\r\n      }\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  private addReportingLinePerformer(reportingLine: ReportingLineParticipant) {\r\n    if (reportingLine.reportingReferObject === 'dept' && !reportingLine.refOrgId) {\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.refOrgIdNotNull'));\r\n    } else if (reportingLine.reportingReferObject !== 'dept' && !reportingLine.refUserId && !reportingLine.refEmployeeId) { // 用户及其他人员汇报对象类型，参照用户和参照员工不能全部为空\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.refUserIdNotNull'));\r\n    } else {\r\n      this.isClose = true;\r\n      if (this.type === 'potentialOwner') {\r\n        const i = this.participant.potentialOwnerList.findIndex(a => a.id === reportingLine.id);\r\n        if (i > -1) {\r\n          this.participant.potentialOwnerList[i] = reportingLine;\r\n        } else {\r\n          const reportingLines = this.participant.potentialOwnerList.filter(h => h.type === 'wf.ReportingLineParticipantExpression');\r\n          for (const r of reportingLines) {\r\n            const reportingLineData = r as ReportingLineParticipant;\r\n            if (reportingLineData.reportingLineDefId === reportingLine.reportingLineDefId &&\r\n              reportingLineData.dimension === reportingLine.dimension &&\r\n              reportingLineData.refUserId === reportingLine.refUserId &&\r\n              reportingLineData.refEmployeeId === reportingLine.refEmployeeId &&\r\n              reportingLineData.refOrgId === reportingLine.refOrgId\r\n            ) {\r\n              this.message.error(this.localePipe.transform('component.participant.repDefConfigured'));\r\n              return;\r\n            }\r\n          }\r\n          let index;\r\n          if (this.participant.potentialOwnerList.length > 0) {\r\n            index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          reportingLine.order = index;\r\n          this.participant.potentialOwnerList.push(reportingLine);\r\n        }\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addMatrixPerformer(matrix: MatrixParticipant) {\r\n    if (!matrix.conditionField1 && !matrix.conditionField2 && !matrix.conditionField3) {\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.atLeastOneCondition'));\r\n    } else if (!matrix.dataFieldAlias) {\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.dataFieldAliasNotNull'));\r\n    } else {\r\n      this.isClose = true;\r\n      if (this.type === 'potentialOwner') {\r\n        const i = this.participant.potentialOwnerList.findIndex(a => a.id === matrix.id);\r\n        if (i > -1) {\r\n          this.participant.potentialOwnerList[i] = matrix;\r\n        } else {\r\n          const matrixParticipants = this.participant.potentialOwnerList.filter(h => h.type === 'wf.MatrixParticipantExpression');\r\n          for (const m of matrixParticipants) {\r\n            const matrixData = m as MatrixParticipant;\r\n            if (matrixData.matrixDefId === matrix.matrixDefId &&\r\n              matrixData.conditionField1 === matrix.conditionField1 &&\r\n              matrixData.conditionField2 === matrix.conditionField2 &&\r\n              matrixData.conditionField3 === matrix.conditionField3 &&\r\n              matrixData.dataFieldAlias === matrix.dataFieldAlias\r\n            ) {\r\n              this.message.error(this.localePipe.transform('component.participant.matrixConfigured'));\r\n              return;\r\n            }\r\n          }\r\n          let index;\r\n          if (this.participant.potentialOwnerList.length > 0) {\r\n            index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          matrix.order = index;\r\n          this.participant.potentialOwnerList.push(matrix);\r\n        }\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addActivityExecutorPerformer(activityExecutor: ActivityExecutorParticipant) {\r\n    if (this.type === 'potentialOwner') {\r\n      const i = this.participant.potentialOwnerList.findIndex(a => (a.id === activityExecutor.id ||\r\n        ((a as ActivityExecutorParticipant).activityDefId && (a as ActivityExecutorParticipant).activityDefId === activityExecutor.activityDefId)));\r\n      if (i < 0) {\r\n        if (this.editState === 'edit') {\r\n          this.removePotentialOwner(); // 在编辑状态下配置了活动办理人参与者，先将选中的删除\r\n        }\r\n        let index;\r\n        if (this.participant.potentialOwnerList.length > 0) {\r\n          index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        activityExecutor.order = index;\r\n        this.participant.potentialOwnerList.push(activityExecutor);\r\n      }\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n\r\n  addOrganizationParticipant(organization: OrganizationParticipantExpression) {\r\n    const organizationParticipant = new OrganizationParticipant();\r\n    organizationParticipant.id = organization.id || ProcessDeUtil.GenerateElementId();\r\n    organizationParticipant.type = 'wf.OrganizationParticipantExpression';\r\n    organizationParticipant.condition = organization.condition;\r\n    organizationParticipant.name = organization.name;\r\n    organizationParticipant.actionScope = organization.actionScope;\r\n    organizationParticipant.organizationLevel = organization.organizationLevel;\r\n    organizationParticipant.organizationId = organization.organizationId;\r\n    organizationParticipant.organizationCode = organization.organizationCode;\r\n    organizationParticipant.organizationName = organization.organizationName;\r\n    organizationParticipant.includeChildren = organization.includeChildren;\r\n    organizationParticipant.parentsUntil = organization.parentsUntil;\r\n    organizationParticipant.tag = organization.tag;\r\n\r\n    if (this.type === 'potentialOwner') {\r\n      this.participant.potentialOwnerList = this.participant.potentialOwnerList.filter(p => p.type !== 'wf.OrganizationParticipantExpression');\r\n      let index;\r\n      if (this.participant.potentialOwnerList.length > 0) {\r\n        index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n      } else {\r\n        index = 1;\r\n      }\r\n      organizationParticipant.order = index;\r\n      this.participant.potentialOwnerList.push(organizationParticipant);\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  editCancel() {\r\n    if (this.editDialog) {\r\n      this.editDialog.close();\r\n    }\r\n  }\r\n\r\n  editPerformer(type: string) {\r\n    this.editState = 'edit';\r\n    this.type = type;\r\n    let selectedRow;\r\n    if (type === 'potentialOwner') {\r\n      selectedRow = this.potentialOwnerGrid.selectedRow;\r\n    }\r\n    if (!selectedRow) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectPerformer'));\r\n      return;\r\n    }\r\n    const curPerformer = selectedRow.data;\r\n    if (curPerformer) {\r\n      const boxsize = this.attributeBoxSize(curPerformer.type);\r\n      const modalConfig = {\r\n        title: this.localePipe.transform('component.participant.participantSelection'),\r\n        width: boxsize.width,\r\n        height: boxsize.height,\r\n        buttons: this.editFooter,\r\n        showButtons: true\r\n      };\r\n      const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n      this.compRef = compFactory.create(this.injector);\r\n      this.compRef.instance.performerType = curPerformer.type;\r\n      this.compRef.instance.editState =  this.editState;\r\n      switch (curPerformer.type) {\r\n        case 'wf.PositionParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.PositionParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.UserParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.UserParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.VariableParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.VariableParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ReportingLineParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          const url = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + (curPerformer as ReportingLineParticipant).reportingLineDefId;\r\n          this.http.get(url).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error(this.localePipe.transform('component.participant.definitionDeleted'));\r\n              if (type === 'potentialOwner') {\r\n                this.removePotentialOwner();\r\n              }\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.MatrixParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.MatrixParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          const urlMatrix = '/api/runtime/wf/v1.0/matrixDefinition/' + (curPerformer as MatrixParticipant).matrixDefId;\r\n          this.http.get(urlMatrix).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error(this.localePipe.transform('component.participant.matrixDeleted'));\r\n              if (type === 'potentialOwner') {\r\n                this.removePotentialOwner();\r\n              }\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.ComponentParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ComponentParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ActivityExecutorParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.OrganizationParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n      }\r\n      if (curPerformer.type !== 'wf.ReportingLineParticipantExpression' &&\r\n        curPerformer.type !== 'wf.MatrixParticipantExpression') { // 汇报关系和矩阵单独处理\r\n        this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n      }\r\n    }\r\n  }\r\n  removePerformer(type: string) {\r\n    if (type === 'potentialOwner') {\r\n      if (this.potentialOwnerGrid.selectedRow) {\r\n        this.potentialOwnerGrid.endCellEdit();\r\n        const index = this.participant.potentialOwnerList.findIndex(p => p.id === this.potentialOwnerGrid.selectedRow.data.id);\r\n        this.participant.potentialOwnerList.splice(index, 1);\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      } else {\r\n        this.message.info(this.localePipe.transform('component.participant.selectParticipantInfo'));\r\n      }\r\n    }\r\n  }\r\n\r\n  clearPerformer(type: string) {\r\n    if (type === 'potentialOwner') {\r\n      this.participant.potentialOwnerList = new Array();\r\n    }\r\n    // this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n    if (this.potentialOwnerGrid) {\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  moveUp(type: string) {\r\n    if (type === 'potentialOwner') {\r\n      const selectedRow = this.potentialOwnerGrid.selectedRow;\r\n      if (!selectedRow) {\r\n        this.message.info(this.localePipe.transform('component.participant.noRowSelected'));\r\n        return;\r\n      }\r\n      const performer = selectedRow.data;\r\n      const i = this.participant.potentialOwnerList.findIndex(c => c.id === performer.id);\r\n      if (i === 0) {\r\n        return;\r\n      }\r\n      const index = this.participant.potentialOwnerList[i].order;\r\n      this.participant.potentialOwnerList[i].order = this.participant.potentialOwnerList[i - 1].order;\r\n      this.participant.potentialOwnerList[i-1].order = index;\r\n      this.swapArray(this.participant.potentialOwnerList, i, i - 1);\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      this.potentialOwnerGrid.selectRow(performer.id, true);\r\n    }\r\n\r\n  }\r\n\r\n  moveDown(type: string) {\r\n    if (type === 'potentialOwner') {\r\n      const selectedRow = this.potentialOwnerGrid.selectedRow;\r\n      if (!selectedRow) {\r\n        this.message.info(this.localePipe.transform('component.participant.noRowSelected'));\r\n        return;\r\n      }\r\n      const performer = selectedRow.data;\r\n      const i = this.participant.potentialOwnerList.findIndex(c => c.id === performer.id);\r\n      if (i === this.participant.potentialOwnerList.length-1) {\r\n        return;\r\n      }\r\n      const index = this.participant.potentialOwnerList[i].order;\r\n      this.participant.potentialOwnerList[i].order = this.participant.potentialOwnerList[i + 1].order;\r\n      this.participant.potentialOwnerList[i+1].order = index;\r\n      this.swapArray(this.participant.potentialOwnerList, i, i + 1);\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      this.potentialOwnerGrid.selectRow(performer.id, true);\r\n    }\r\n  }\r\n\r\n  private swapArray(arr: Array<any>, i1: number, i2: number): Array<any> {\r\n    arr[i1] = arr.splice(i2, 1, arr[i1])[0];\r\n    return arr;\r\n  }\r\n\r\n  removePotentialOwner() {\r\n    if (this.potentialOwnerGrid.selectedRow) {\r\n      this.potentialOwnerGrid.endCellEdit();\r\n      const i = this.participant.potentialOwnerList.findIndex(item => item.id === this.potentialOwnerGrid.selectedRow.data.id);\r\n      this.participant.potentialOwnerList.splice(i, 1);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.participant.selectpotentialtHandler'));\r\n    }\r\n  }\r\n\r\n  private getUserPerformerDescription(userPerformer: UserParticipant): string {\r\n    if (userPerformer.tag === 'expression') {\r\n      return userPerformer.performerId;\r\n    } else {\r\n      if (userPerformer.orgName) {\r\n        return this.localePipe.transform('component.participant.org') + userPerformer.orgName;\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n\r\n  private getVariablePerformerDescription(variablePerformer: VariableParticipant): string {\r\n    if (variablePerformer.tag === 'expression') {\r\n      return variablePerformer.varValue;\r\n    }\r\n  }\r\n\r\n  private getPositionPerformerDescription(position: PositionParticipant): string {\r\n    if (this.designerUIState.scene === 'inSuite') {\r\n      return null;\r\n    }\r\n    if (position.positionType === '1') {\r\n      if (position.orgId) {\r\n        return this.localePipe.transform('component.participant.positionType1') + position.orgId;\r\n      } else {\r\n        return this.localePipe.transform('component.participant.positionType2');\r\n      }\r\n    } else if (position.positionType === '0') {\r\n      return this.localePipe.transform('component.participant.positionType3');\r\n    }\r\n  }\r\n\r\n  private getComponentPerformerDescription(position: ComponentParticipant): string {\r\n    let des = this.localePipe.transform('component.participant.comp') + position.name\r\n    + this.localePipe.transform('component.participant.parameters');\r\n    if (position.actualParameters && position.actualParameters.length > 0) {\r\n      position.actualParameters.forEach(p => {\r\n        des += `${p.code}：${p.value}，`;\r\n      });\r\n      des = des.substring(0, des.length - 1);\r\n    }\r\n    des += '}';\r\n    return des;\r\n  }\r\n\r\n  private getReportingLinePerformerDescription(reportingLine: ReportingLineParticipant): string {\r\n    let description = '';\r\n    if (reportingLine.refUserId) {\r\n      description += this.localePipe.transform('component.participant.referencePerson') + reportingLine.refUserId;\r\n    }\r\n    if (reportingLine.refEmployeeId) {\r\n      description += this.localePipe.transform('component.participant.referencePerson') + reportingLine.refEmployeeId;\r\n    }\r\n    if (reportingLine.refOrgId) {\r\n      if (reportingLine.refUserId) {\r\n        description += `，`;\r\n      }\r\n      if (reportingLine.refEmployeeId) {\r\n        description += `，`;\r\n      }\r\n      description += this.localePipe.transform('component.participant.referenceOrganization') + reportingLine.refOrgId;\r\n    }\r\n    return description;\r\n  }\r\n\r\n  private getMatrixPerformerDescription(matrix: MatrixParticipant): string {\r\n    let description = '';\r\n    if (matrix.conditionField1) {\r\n      description += this.localePipe.transform('component.participant.condition1') + matrix.conditionFieldText1 + `，`;\r\n    }\r\n    if (matrix.conditionField2) {\r\n      description += this.localePipe.transform('component.participant.condition2') + matrix.conditionFieldText2 + `，`;\r\n    }\r\n    if (matrix.conditionField3) {\r\n      description += this.localePipe.transform('component.participant.condition3') + matrix.conditionFieldText3 + `，`;\r\n    }\r\n    if (matrix.dataFieldAlias) {\r\n      description += this.localePipe.transform('component.participant.data') + matrix.dataFieldAlias + `，`;\r\n    }\r\n    return description.slice(0, description.length - 1);\r\n  }\r\n\r\n  private editConditon(e: any) {\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 默认打开简易表达式编辑器\r\n    this.expr.buildExpression().then((cond: string) => {\r\n      if(this.potentialOwnerGrid && this.potentialOwnerGrid.selectedRow && this.potentialOwnerGrid.selectedRow.data) {\r\n        let temp = this.participant.potentialOwnerList.find(h => h.id === this.potentialOwnerGrid.selectedRow.data.id);\r\n        temp.condition = cond;\r\n      }\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  private GetOrganizationType() {\r\n    const url = '/api/runtime/sys/v1.0/authfields/globalauthfields';\r\n    this.http.get(url)\r\n      .subscribe((data: any) => this.designerUIState.orgTypeCollection = data.map(d => ({ value: d.id, text: d.name })));\r\n  }\r\n\r\n  // 构造不同参与者选择界面的尺寸 2023-7-5\r\n  private attributeBoxSize(boxType: string) {\r\n    const boxsize = {\r\n      width: 760,\r\n      height: 512\r\n    }\r\n    switch (boxType) {\r\n      case 'wf.PositionParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 455;\r\n        return boxsize;\r\n      case 'wf.UserParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 320;\r\n        return boxsize;\r\n      case 'wf.VariableParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 420;\r\n        return boxsize;;\r\n      case 'wf.ReportingLineParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 512;\r\n        return boxsize;;\r\n      case 'wf.MatrixParticipantExpression':\r\n        boxsize.width = 780;\r\n        boxsize.height = 420;\r\n        return boxsize;;\r\n      case 'wf.ComponentParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 512;\r\n        return boxsize;;\r\n      case 'wf.ActivityExecutorParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 320;\r\n        return boxsize;;\r\n      case 'wf.OrganizationParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 360;\r\n        return boxsize;;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ActionOrganizationScopeDesign, ActionScope, OrganizationPotentialOwner, OrganizationLevel } from './actionOrganizationScope';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { AlternativeParticipantComponent } from '../participant/alternative-participant/alternative-participant.component';\r\nimport { OrganizationParticipantExpression } from '../../domain/entities/organization-participant-expression';\r\nimport { Participant, ParticipantInfo } from '../participant/participant.info';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n  selector: 'app-organization-potential-owner',\r\n  templateUrl: './organization-potential-owner.component.html',\r\n  styleUrls: ['./organization-potential-owner.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class OrganizationPotentialOwnerComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  @ViewChild(AlternativeParticipantComponent) alternativeParticipant: AlternativeParticipantComponent;\r\n\r\n  @Input()\r\n  set value(v: ActionOrganizationScopeDesign) {\r\n    this.action = v.action as any;\r\n    if (this.action === this.actionCollection[2].value) {\r\n      if (v.enable === null || v.enable === undefined) {\r\n        this.enable = true;\r\n      } else {\r\n        this.enable = v.enable;\r\n      }\r\n    } else {\r\n      this.enable = v.enable;\r\n    }\r\n    if (v.scope) {\r\n      this.alternativeParticipant.participant.isAllScope = true;\r\n      let organizationParticipantExpression = new OrganizationParticipantExpression();\r\n      organizationParticipantExpression.actionScope = v.action as any;\r\n      if (v.scope.organizationLevel === OrganizationLevel.DEFAULT && v.scope.tag === 'expression') {\r\n        organizationParticipantExpression.organizationLevel = OrganizationLevel.VARORGANIZATION;\r\n        organizationParticipantExpression.tag = v.scope.tag;\r\n        this.organizationLevel = OrganizationLevel.VARORGANIZATION;\r\n      } else if(v.scope.organizationLevel){\r\n        this.organizationLevel = v.scope.organizationLevel;\r\n      }\r\n      this.includeChildren = v.scope.includeChildren;\r\n      organizationParticipantExpression.includeChildren = v.scope.includeChildren;\r\n      this.organizationId = v.scope.organizationId;\r\n      organizationParticipantExpression.organizationId = v.scope.organizationId;\r\n      organizationParticipantExpression.organizationName = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).text;\r\n      this.alternativeParticipant.addOrganizationParticipant(organizationParticipantExpression);\r\n      if(v.scope.participantInfo){\r\n        this.alternativeParticipant.participant = v.scope.participantInfo;\r\n      }else {\r\n        this.alternativeParticipant.participant = new ParticipantInfo();\r\n      }\r\n    }else {\r\n      this.alternativeParticipant.participant.isAllScope = false;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  organizationLevelCollection = [{\r\n    value: 'GLOBAL',\r\n    text: this.localePipe.transform('component.orgPotentialOwner.global'),\r\n    orgId: 'global',\r\n  }, {\r\n    value: 'UNIT',\r\n    text: this.localePipe.transform('component.orgPotentialOwner.currentUnit'),\r\n    orgId: 'currentUnit'\r\n  }, {\r\n    value: 'DEPARTMENT',\r\n    text: this.localePipe.transform('component.orgPotentialOwner.currentDepartment'),\r\n    orgId: 'currentDepartment'\r\n  },\r\n  {\r\n    value: 'VARORGANIZATION',\r\n    text: this.localePipe.transform('component.orgPotentialOwner.variableOrganization'),\r\n    orgId: ''\r\n  }];\r\n  actionCollection = [{\r\n      value: ActionScope.AddSignBehind, name: this.localePipe.transform('component.orgPotentialOwner.addSignBehind')\r\n  }, {\r\n      value: ActionScope.AddSignFront, name: this.localePipe.transform('component.orgPotentialOwner.addSignFront')\r\n  }, {\r\n      value: ActionScope.Transfer, name: this.localePipe.transform('component.orgPotentialOwner.transfer')\r\n  }, {\r\n    value: ActionScope.Notify, name: this.localePipe.transform('component.orgPotentialOwner.notify')\r\n}];\r\n  enable = false;\r\n  organizationLevel = this.organizationLevelCollection[0].value;\r\n  action = this.actionCollection[0].value;\r\n  includeChildren = false;\r\n  organizationId = '';\r\n  showClearButton = false;\r\n\r\n  constructor(\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService,\r\n    private designerUIState: ProcessDesignerUIState\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if(this.validate()){\r\n      const scope = new ActionOrganizationScopeDesign();\r\n      scope.enable = this.enable;\r\n      scope.action = this.action as any;\r\n      if (this.alternativeParticipant.participant.isAllScope) {\r\n        const potential = new OrganizationPotentialOwner();\r\n        potential.actionScope = this.action;\r\n        // potential.organizationLevel = this.organizationLevel as OrganizationLevel;\r\n        // potential.organizationId = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).orgId || this.organizationId;\r\n        // potential.organizationName = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).text;\r\n        // potential.includeChildren = this.includeChildren;\r\n        // if (potential.organizationLevel === OrganizationLevel.VARORGANIZATION) {\r\n        //   potential.tag = 'expression';\r\n        //   potential.organizationLevel = OrganizationLevel.DEFAULT;\r\n        // } else {\r\n        //   potential.tag = 'variable';\r\n        // }\r\n        scope.scope = potential as any;\r\n        scope.scope.participantInfo = this.alternativeParticipant.participant;\r\n      }\r\n      const object = { value: scope, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  validate() {\r\n    if(this.alternativeParticipant.participant.isAllScope && \r\n      (!this.alternativeParticipant.participant.potentialOwnerList || this.alternativeParticipant.participant.potentialOwnerList.length <= 0)) {\r\n        this.message.info(this.localePipe.transform('component.orgPotentialOwner.turnOffPrompt'));\r\n        return false;\r\n      }else {\r\n        return true;\r\n      }\r\n  }\r\n  valueChange(event: any) {\r\n    switch (event.value) {\r\n      case this.organizationLevelCollection[0].value:\r\n        this.includeChildren = false;\r\n        break;\r\n      case this.organizationLevelCollection[1].value:\r\n        this.includeChildren = true;\r\n        break;\r\n      case this.organizationLevelCollection[2].value:\r\n        this.includeChildren = false;\r\n        break;\r\n      case this.organizationLevelCollection[3].value:\r\n        this.includeChildren = true;\r\n        this.organizationId = '';\r\n        break;\r\n    }\r\n  }\r\n  actionName = () => {\r\n    return this.actionCollection.find(a => a.value === this.action).name;\r\n  }\r\n  clear($event) {\r\n    this.organizationId = '';\r\n  }\r\n  selectValue(data: any) {\r\n    this.showExprHelp();\r\n  }\r\n\r\n  showExprHelp() {\r\n    const context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    this.expr.setEditPattern(ExprEditMode.Advanced);\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    if (this.designerUIState.participantContext.length > 0) {\r\n      for (const variable of this.designerUIState.participantContext) {\r\n        context.push(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    // 预置表达式展示文本\r\n    if (this.organizationId) {\r\n      this.expr.addExpressionText(this.organizationId);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      if (expressioninfo) {\r\n        this.organizationId = expressioninfo;\r\n        this.organizationLevelCollection[3].orgId = expressioninfo;\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),\r\n    width: 760,\r\n    height: 506,\r\n    showButtons: true\r\n  };\r\n}\r\nexport class OrganizationPotentialOwnerConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: ActionOrganizationScopeDesign): string {\r\n    if (data && data.action === ActionScope.Transfer as any && (data.enable === null || data.enable === undefined)) {\r\n      return this.localePipe.transform(\"component.orgPotentialOwner.set\");\r\n    } else {\r\n      if (data && data.enable) {\r\n        return this.localePipe.transform(\"component.orgPotentialOwner.set\");\r\n      } else {\r\n        return this.localePipe.transform(\"component.orgPotentialOwner.notSet\");\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class AnonymousSet { \r\n    isAnonymity = false;\r\n    anonymous = '审批人';\r\n}\r\n","import { Component, OnInit, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, Inject, Injector, Optional, ChangeDetectorRef, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { AnonymousSet } from './anonymous-set.entity';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'lib-anonymous-set',\r\n  templateUrl: './anonymous-set.component.html',\r\n  styleUrls: ['./anonymous-set.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class AnonymousSetComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() set value(data: AnonymousSet) {\r\n    this.anonymousSet.isAnonymity = data.isAnonymity || false;\r\n    this.anonymousSet.anonymous = data.anonymous || this.localePipe.transform('component.anonymousSet.approver');\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  anonymousSet: AnonymousSet = new AnonymousSet();\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.anonymousSet.anonymousOpt'),\r\n    width: 450,\r\n    height: 360,\r\n    showButtons: true\r\n  };\r\n  constructor(\r\n    private injector: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  clickOK() {\r\n    const object = { value: this.anonymousSet, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n}\r\n\r\nexport class AnonymousSetConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.isAnonymity) {\r\n      return this.localePipe.transform(\"component.anonymousSet.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.anonymousSet.notSet\");\r\n    }\r\n  }\r\n}\r\n","export class VariableSetting {\r\n    /**\r\n     * 变量Id\r\n     */\r\n    // variableId: string;\r\n    /**\r\n     * 变量编号\r\n     */\r\n    variableCode: string;\r\n    /**\r\n     * 变量名称\r\n     */\r\n    variableName: string;\r\n    /**\r\n     * 自定义标签，赋值方式\r\n     * expression 语义化表达式\r\n     * constant 常量\r\n     * component 构件\r\n     */\r\n    tag: string;\r\n\r\n    /**\r\n     * 变量执行时机\r\n     * ACTIVITY_STARTED 活动开始\r\n     * ACTIVITY_COMPLETED 活动完成\r\n     */\r\n    executionTime: string;\r\n\r\n    /**\r\n     * 变量值\r\n     */\r\n    value: string;\r\n\r\n    valueText: string;\r\n\r\n    /**\r\n     * 构件\r\n     */\r\n    component: any;\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ProcessVariablesComponent } from '../process-variables/process-variables.component';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { VariableSetting } from './variable-setting';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ComponentEditComponent } from './views/component-edit/component-edit.component';\r\nimport { RowEditParam } from '@farris/ui-datagrid/lib/types';\r\nimport { of } from 'rxjs';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-variable-setting',\r\n  templateUrl: './variable-setting.component.html',\r\n  styleUrls: ['./variable-setting.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class VariableSettingComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input() value: Array<VariableSetting> = new Array();\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n  @ViewChild('cell') cell: TemplateRef<any>;\r\n\r\n  columns = [];\r\n\r\n  private tags = [\r\n    { value: 'constant', text: this.localePipe.transform(\"component.variableSetting.constant\") },\r\n    { value: 'expression', text: this.localePipe.transform(\"component.variableSetting.expression\") },\r\n    { value: 'component', text: this.localePipe.transform(\"component.variableSetting.component\") }\r\n  ];\r\n\r\n  private opportunities = [\r\n    { value: 'ACTIVITY_STARTED', text: this.localePipe.transform(\"component.variableSetting.ACTIVITY_STARTED\") },\r\n    { value: 'ACTIVITY_COMPLETED', text: this.localePipe.transform(\"component.variableSetting.ACTIVITY_COMPLETED\") }\r\n  ];\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.variableSetting.varAssign\"),\r\n    width: 780,\r\n    height: 460,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private uistate: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      {\r\n        field: 'variableCode', width: 90, title: this.localePipe.transform(\"component.variableSetting.varNumber\"), sortable: true,\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      },\r\n      {\r\n        field: 'variableName', width: 90, title: this.localePipe.transform(\"component.variableSetting.varName\"), sortable: true,\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      }, {\r\n        field: 'tag', width: 60, title: this.localePipe.transform(\"component.variableSetting.valueType\"), sortable: true,\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.tags }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: {\r\n            valueField: 'value', textField: 'text', data: this.tags, idField: 'value', panelHeight: 'auto', showClear: false,\r\n            selectChange: (e) => {\r\n              this.value = this.value.map(v => {\r\n                if (v.variableCode === e.rowId) {\r\n                  v.value = null;\r\n                  v.valueText = null;\r\n                  if (v.component) {\r\n                    v.component = null;\r\n                  }\r\n                  return v;\r\n                } else {\r\n                  return v;\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      }, {\r\n        field: 'executionTime', width: 80, title: this.localePipe.transform(\"component.variableSetting.executionTime\"), sortable: true,\r\n        formatter: {\r\n          type: 'enum',\r\n          options: { valueField: 'value', textField: 'text', data: this.opportunities }\r\n        },\r\n        editor: {\r\n          type: EditorTypes.COMBOLIST,\r\n          options: {\r\n            valueField: 'value', textField: 'text', data: this.opportunities, idField: 'value', panelHeight: 'auto', showClear: false,\r\n          }\r\n        },\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ],\r\n      },\r\n      {\r\n        field: 'valueText', width: 150, title: this.localePipe.transform(\"component.variableSetting.valueText\"), showTips: true,\r\n        editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n        validators: [\r\n          { type: 'required', messager: '必填' }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  add() {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ProcessVariablesComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.variableSetting = true;\r\n    compRef.instance.value = this.uistate.ProcessVariables;\r\n    compRef.instance.selectedValue = this.value;\r\n    compRef.instance.variableSetEmitter.subscribe((re: any[]) => {\r\n      for (const v of re) {\r\n        const variableSet = new VariableSetting();\r\n        variableSet.variableCode = v.data.name;\r\n        variableSet.variableName = v.data.documentation;\r\n        variableSet.tag = v.data.tag || this.tags[0].value;\r\n        variableSet.executionTime = v.data.executionTime || this.opportunities[0].value;\r\n        if (this.value.findIndex(i => i.variableCode === variableSet.variableCode) === -1) {\r\n          this.value = this.value.concat([variableSet]);\r\n        }\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeModal.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"component.variableSetting.processVariables\"),\r\n      width: 660,\r\n      height: 460,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  delete() {\r\n    this.grid.endCellEdit();\r\n    const selected = this.grid.selectedRow;\r\n    if (!selected) {\r\n      this.message.info(this.localePipe.transform(\"component.variableSetting.notSelectedVar\"));\r\n      return;\r\n    }\r\n    this.value = this.value.filter(v => v.variableCode !== selected.data.variableCode);\r\n  }\r\n\r\n  clickOK() {\r\n    // 先结束编辑状态\r\n    this.grid.endCellEdit();\r\n    // 等待编辑状态结束后再进行校验\r\n    setTimeout(() => {\r\n      if (this.validator()) {\r\n        const object = { value: this.value, parameters: null };\r\n        this.submitModal.emit(object);\r\n      }\r\n    }, 300);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  validator() {\r\n    for (const item of this.value) {\r\n      if (!item.value) {\r\n        this.message.warning(this.localePipe.transform(\"component.variableSetting.valueCannotEmpty\"));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  beforeEdit = (param: RowEditParam) => {\r\n    const rowData = param.rowData as any;\r\n    const column = param.column;\r\n    if (column.field === 'valueText') {\r\n      if ((rowData as VariableSetting).tag === this.tags[0].value) {\r\n        param.column.editor = { type: EditorTypes.TEXTBOX, options: {} };\r\n      } else {\r\n        param.column.editor = {\r\n          type: 'input-group',\r\n          options: {\r\n            groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n            editable: false,\r\n            showClear: false,\r\n            clickHandle: (e) => {\r\n              e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n              this.valueEdit(e);\r\n            },\r\n            clear: (e) => {\r\n              console.log('clear', e);\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n    return of(true);\r\n  }\r\n\r\n  endEdit(data: any) {\r\n    if (data.column.field === 'valueText' && data.rowData.tag === this.tags[0].value) {\r\n      data.rowData.value = data.rowData.valueText;\r\n    }\r\n  }\r\n\r\n  valueEdit(e: any) {\r\n    const rowdata: VariableSetting = e.rowData;\r\n    switch (rowdata.tag) {\r\n      case this.tags[1].value:\r\n        this.editExpression(e);\r\n        break;\r\n      case this.tags[2].value:\r\n        this.editComponent(e);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private editExpression(e: any) {\r\n    // this.expr.clearContext();\r\n    const data: VariableSetting = e.rowData;\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.uistate.addContext(context);\r\n    if (this.uistate.subActivityContext.length > 0) {\r\n      for (const variable of this.uistate.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.setEditPattern(ExprEditMode.Advanced); // 表达式展现模式：默认高级版\r\n    this.expr.addExpressionText(data.value);\r\n    this.expr.buildExpression().then((re: string) => {\r\n      e.formControl.setValue(re);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re;\r\n      e.form.bindingData.value = re;\r\n      e.form.value.value = re;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  private editComponent(e: any) {\r\n    const data: VariableSetting = e.rowData;\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(ComponentEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.component = data.component;\r\n    compRef.instance.submitEmitter.subscribe((re: any) => {\r\n      e.formControl.setValue(re.Name + '-' + re.MethodCode);\r\n      e.instance.cd.detectChanges();\r\n      data.value = re.Id;\r\n      data.component = re;\r\n      e.form.bindingData.value = re.Id;\r\n      e.form.value.value = re.Id;\r\n      e.form.value.component = re;\r\n      e.form.bindingData.component = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeEmitter.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"component.variableSetting.component\"),\r\n      width: 800,\r\n      height: 515,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n}\r\n\r\nexport class VariableSettingConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform(\"component.variableSetting.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.variableSetting.notSet\");;\r\n    }\r\n  }\r\n}\r\n","import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { ApprovalPivot } from './approval-pivot';\r\n\r\nexport class ApprovalPivotConfig {\r\n    localePipe: WfLocalePipe = null;\r\n\r\n    constructor() {\r\n        this.enable = false;\r\n        this.title = '审批要点';\r\n        this.approvalPivots = new Array();\r\n    }\r\n    title: string;\r\n    enable: boolean;\r\n    expand: boolean;\r\n    approvalPivots: Array<ApprovalPivot>;\r\n}\r\n","import { ProcessDeUtil } from '../../domain/process-de-util';\r\n\r\nexport class ApprovalPivot {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.GenerateElementId();\r\n        this.type = 'REMIND';\r\n    }\r\n    id: string;\r\n    type: string;\r\n    condition: string;\r\n    title: string;\r\n    description: string;\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, HostBinding, Output, EventEmitter, Input, ChangeDetectorRef, Optional, LOCALE_ID, Inject } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ApprovalPivotConfig } from './approval-pivot-config';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, ExprEditMode, VarEntity } from '@gsp-svc/expression';\r\nimport { ApprovalPivot } from './approval-pivot';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-approval-pivot',\r\n  templateUrl: './approval-pivot.component.html',\r\n  styleUrls: ['./approval-pivot.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ApprovalPivotComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    this.config.localePipe = this.localePipe;\r\n    if (data) {\r\n      this.config.enable = data.enable;\r\n      this.config.title = data.title;\r\n      this.config.expand = data.expand;\r\n      if (data.approvalPivots && data.approvalPivots.length > 0) {\r\n        for (const a of data.approvalPivots) {\r\n          const approvalPivot = new ApprovalPivot();\r\n          approvalPivot.type = a.type;\r\n          approvalPivot.title = a.title;\r\n          approvalPivot.description = a.description;\r\n          if (a.condition) {\r\n            if (typeof (a.condition) === 'string') {\r\n              approvalPivot.condition = a.condition;\r\n            } else {\r\n              approvalPivot.condition = a.condition._value;\r\n            }\r\n          }\r\n\r\n\r\n          this.config.approvalPivots = this.config.approvalPivots.concat([approvalPivot]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  config = new ApprovalPivotConfig();\r\n\r\n  typeList = [\r\n    { value: 'REMIND', text: this.localePipe.transform('component.approvalPivot.remind') }];\r\n\r\n  columns = [\r\n    {\r\n      field: 'type', width: 80, title: this.localePipe.transform('component.approvalPivot.type'),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.typeList }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.typeList, idField: 'value', panelHeight: 'auto', enableClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'condition', width: 120, title: this.localePipe.transform('component.approvalPivot.condition'), showTips: true,\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.editConditon(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      field: 'title', width: 80, title: this.localePipe.transform('component.approvalPivot.title'),\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} }\r\n    }, {\r\n      field: 'description', width: 100, title: this.localePipe.transform('component.approvalPivot.description'), showTips: true,\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} }\r\n    }\r\n  ];\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.approvalPivot.approvalPivot'),\r\n    width: 800,\r\n    height: 480,\r\n    showButtons: true\r\n  };\r\n\r\n\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  add() {\r\n    const approvalPivot = new ApprovalPivot();\r\n    this.config.approvalPivots = this.config.approvalPivots.concat([approvalPivot]);\r\n  }\r\n\r\n  delete() {\r\n    const selectedRow = this.grid.selectedRow;\r\n    if (!selectedRow) {\r\n      this.message.info(this.localePipe.transform('component.approvalPivot.selectedRow'));\r\n      return;\r\n    }\r\n    this.config.approvalPivots = this.config.approvalPivots.filter(a => a.id !== selectedRow.id);\r\n  }\r\n\r\n  clickOK() {\r\n    if (!this.config.title && this.config.enable) {\r\n      this.message.info(this.localePipe.transform('component.approvalPivot.configTitle'));\r\n      return;\r\n    }\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      const object = { value: this.config, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator() {\r\n    return true;\r\n  }\r\n\r\n\r\n  editConditon(e: any) {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.setEditPattern(ExprEditMode.Conditional);\r\n    this.expr.buildExpression().then((cond: string) => {\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class ApprovalPivotConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.enable) {\r\n      return this.localePipe.transform('component.approvalPivot.set');\r\n    } else {\r\n      return this.localePipe.transform('component.approvalPivot.notSet');\r\n    }\r\n  }\r\n}\r\n","import { SmsMessageTemplate } from \"../sms-message-template/sms-message-template\";\r\n\r\nexport class UrgeHandleRule {\r\n  cconstructor() {\r\n    this.urgeHandleAble = false;\r\n    this.earlyTime = 0;\r\n    this.intervalTime = 0;\r\n    this.urgeMessageSubject = \"{\\\"expr\\\":\\\"'催办审批：' + DefaultFunction.GetContextParameter(\\\\\\\"bizDefName\\\\\\\")\\\",\\\"sexpr\\\":\\\"\\\"}\";\r\n    this.urgeMessageContent = \"{\\\"expr\\\":\\\"'请您尽快审批' + DefaultFunction.GetContextParameter(\\\\\\\"procInstCreatorName\\\\\\\") + '的' + DefaultFunction.GetContextParameter(\\\\\\\"bizDefName\\\\\\\") + '。'\\\",\\\"sexpr\\\":\\\"\\\"}\";\r\n    this.addReminder = false;\r\n    this.subjectEditable = true;\r\n    this.contentEditable = true;\r\n  }\r\n\r\n  urgeHandleAble: boolean;\r\n  sendType: string;\r\n  earlyTime: number;\r\n  intervalTime: number;\r\n  urgeMessageSubject: string;\r\n  urgeMessageContent: string;\r\n  // 是否添加催办人信息\r\n  addReminder: boolean;\r\n  subjectEditable: boolean;\r\n  contentEditable: boolean;\r\n\r\n  /**\r\n   * 短信模板\r\n   */\r\n  smsMessageTemplate: SmsMessageTemplate\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, TemplateRef, Input, HostBinding, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { UrgeHandleRule } from './urge-handle-rule';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport {ExpressionService, InjectedType} from '@gsp-svc/expression';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { SmsMessageTemplate } from '../sms-message-template/sms-message-template';\r\nimport { SmsMessageTemplateComponent } from '../sms-message-template/sms-message-template.component';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'lib-urge-handle-rule',\r\n  templateUrl: './urge-handle-rule.component.html',\r\n  styleUrls: ['./urge-handle-rule.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class UrgeHandleRuleComponent implements OnInit {\r\n\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild(SmsMessageTemplateComponent) SmsTemplate:SmsMessageTemplateComponent\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (!data) {\r\n      this.urgeHandleRule.urgeHandleAble = true;\r\n      this.urgeHandleRule.earlyTime = 0;\r\n      this.urgeHandleRule.intervalTime = 0;\r\n      this.urgeHandleRule.sendType = 'cloudplus,inmail';\r\n      this.urgeHandleRule.urgeMessageSubject = `{\\\"expr\\\":\\\"'${this.localePipe.transform(\"component.urgeHandleRule.urgentApproval\")}' + DefaultFunction.GetContextParameter(\\\\\\\"bizDefName\\\\\\\")\\\",\\\"sexpr\\\":\\\"\\\"}`;\r\n      this.urgeHandleRule.urgeMessageContent = `{\\\"expr\\\":\\\"'${this.localePipe.transform(\"component.urgeHandleRule.pleaseApprove\")}' + DefaultFunction.GetContextParameter(\\\\\\\"procInstCreatorName\\\\\\\") + '${this.localePipe.transform(\"component.urgeHandleRule.soOn\")}' + DefaultFunction.GetContextParameter(\\\\\\\"bizDefName\\\\\\\") + '。'\\\",\\\"sexpr\\\":\\\"\\\"}`;\r\n    } else {\r\n      this.urgeHandleRule = data;\r\n      if (this.hasSmsMessage(this.urgeHandleRule.sendType)) {\r\n        this.hasSmsTemplate = true;\r\n        if (!this.urgeHandleRule.smsMessageTemplate) {\r\n          this.urgeHandleRule.smsMessageTemplate = new SmsMessageTemplate();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  urgeHandleRule: UrgeHandleRule = new UrgeHandleRule();\r\n\r\n\r\n  typeGroup = this.designerUIState.messageChannels.map(m => ({ value: m.code, name: m.name }));\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.urgeHandleRule.urgeHandle\"),\r\n    width: 800,\r\n    height: 515,\r\n    showButtons: true\r\n  };\r\n\r\n  hasSmsTemplate = false;\r\n\r\n  constructor(\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe) {\r\n      this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    }\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    if (this.SmsTemplate) {\r\n      this.SmsTemplate.endGridEdit();\r\n    }\r\n    if (this.hasSmsTemplate) {\r\n      this.urgeHandleRule.smsMessageTemplate = this.SmsTemplate.smsMessageTemplate;\r\n      if (this.urgeHandleRule.smsMessageTemplate.smsMessageVariables && this.urgeHandleRule.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n        this.urgeHandleRule.smsMessageTemplate.smsMessageVariables = this.urgeHandleRule.smsMessageTemplate.smsMessageVariables.filter(variable => variable.code);\r\n      }\r\n    } else {\r\n      this.urgeHandleRule.smsMessageTemplate = null;\r\n    }\r\n    if (this.validator()) {\r\n      const object = { value: this.urgeHandleRule, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator() {\r\n    if (!this.urgeHandleRule.sendType) {\r\n      this.message.info(this.localePipe.transform(\"component.urgeHandleRule.noSendingMethod\"));\r\n      return false;\r\n    }\r\n    //去除消息模板编号校验\r\n    // if (this.hasSmsTemplate) {\r\n    //   if (!this.urgeHandleRule.smsMessageTemplate) {\r\n    //     this.message.info(this.localePipe.transform(\"component.urgeHandleRule.setMessageTemplate\"));\r\n    //     return;\r\n    //   }\r\n    //   if (!this.urgeHandleRule.smsMessageTemplate.code) {\r\n    //     this.message.info(this.localePipe.transform(\"component.urgeHandleRule.codeEmpty\"));\r\n    //     return;\r\n    //   }\r\n    // }\r\n    if (!this.urgeHandleRule.urgeMessageSubject) {\r\n      this.message.info(this.localePipe.transform(\"component.urgeHandleRule.noMessageSubject\"));\r\n      return false;\r\n    }\r\n    if (!this.urgeHandleRule.urgeMessageContent) {\r\n      this.message.info(this.localePipe.transform(\"component.urgeHandleRule.noMessageContent\"));\r\n      return false;\r\n    }\r\n    if (!this.urgeHandleRule.earlyTime && this.urgeHandleRule.earlyTime!==0 ) {\r\n      this.message.info(this.localePipe.transform(\"component.urgeHandleRule.earliestTimeNotEmpty\"));\r\n      return false;\r\n    }\r\n    if (!this.urgeHandleRule.intervalTime && this.urgeHandleRule.intervalTime!==0 ) {\r\n      this.message.info(this.localePipe.transform(\"component.urgeHandleRule.minimumTimeNotEmpty\"));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  sendTypeChange(sendType: string) {\r\n    if (this.hasSmsMessage(sendType)) {\r\n      this.hasSmsTemplate = true;\r\n      if (!this.urgeHandleRule.smsMessageTemplate) {\r\n        this.urgeHandleRule.smsMessageTemplate = new SmsMessageTemplate();\r\n      }\r\n    } else {\r\n      this.hasSmsTemplate = false;\r\n      this.urgeHandleRule.smsMessageTemplate = null;\r\n    }\r\n  }\r\n\r\n  parser = (val: string | number) => {\r\n    return Number(val);\r\n  }\r\n\r\n  titleExpr(data: any){\r\n    this.showTitleHelp(data);\r\n  }\r\n\r\n  contentExpr(data: any){\r\n    this.showContentHelp(data);\r\n  }\r\n\r\n  showTitleHelp(data: string) {\r\n    const context = this.showExpr();\r\n    if (this.urgeHandleRule.urgeMessageSubject && this.urgeHandleRule.urgeMessageSubject.length > 0) {\r\n      this.expr.addExpressionText(this.urgeHandleRule.urgeMessageSubject);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.urgeHandleRule.urgeMessageSubject = expressionInfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  showContentHelp(data: string){\r\n    const context = this.showExpr();\r\n    if (this.urgeHandleRule.urgeMessageContent && this.urgeHandleRule.urgeMessageContent.length > 0) {\r\n      this.expr.addExpressionText(this.urgeHandleRule.urgeMessageContent);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      this.urgeHandleRule.urgeMessageContent = expressionInfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  showExpr(){\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.designerUIState.urgeContext.length > 0) {\r\n      for (const variable of this.designerUIState.urgeContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.processVariableContext.length > 0) {\r\n      for (const variable of this.designerUIState.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    return context;\r\n  }\r\n\r\n  private hasSmsMessage(sendType: string) {\r\n    if (sendType) {\r\n      const sendTypeList = sendType.split(',');\r\n      let messageChannel = sendTypeList.find(val => this.designerUIState.messageChannels.find(channel => channel.code == val && channel.channelType == 'Sms'));\r\n      if (messageChannel) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class UrgeHandleRuleConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (!data) {\r\n      return this.localePipe.transform(\"component.urgeHandleRule.set\");\r\n    } else if (data.urgeHandleAble) {\r\n      return this.localePipe.transform(\"component.urgeHandleRule.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.urgeHandleRule.notSet\");\r\n    }\r\n  }\r\n}\r\n","export class CheckCondition {\r\n    constructor(checkTime: string) {\r\n        this.checkTime = checkTime;\r\n    }\r\n    value: string;\r\n    checkTime: string;\r\n    errorTips: any;\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { CheckCondition } from './check-condition';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-check-condition',\r\n  templateUrl: './check-condition.component.html',\r\n  styleUrls: ['./check-condition.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class CheckConditionComponent implements OnInit {\r\n\r\n  readonly groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: CheckCondition[]) {\r\n    if (data && data.length > 0) {\r\n      console.log(data);\r\n      this.activityBeforeStarted = data.find(d => d.checkTime === 'ACTIVITY_BEFORE_STARTED') || new CheckCondition('ACTIVITY_BEFORE_STARTED');\r\n      this.activityBeforeCompleted = data.find(d => d.checkTime === 'ACTIVITY_BEFORE_COMPLETED') || new CheckCondition('ACTIVITY_BEFORE_COMPLETED');\r\n    }\r\n  }\r\n\r\n  languages = [\r\n    { code: 'zh-CHS', name: this.localePipe.transform('component.checkCondition.zhChs') },\r\n    { code: 'zh-CHT', name: this.localePipe.transform('component.checkCondition.zhCht') },\r\n    { code: 'en', name: this.localePipe.transform('component.checkCondition.en') }\r\n  ];\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  activityBeforeStarted: CheckCondition = new CheckCondition('ACTIVITY_BEFORE_STARTED');\r\n  activityBeforeCompleted: CheckCondition = new CheckCondition('ACTIVITY_BEFORE_COMPLETED');\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.checkCondition.checkCondition'),\r\n    width: 440,\r\n    height: 460,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private message: MessagerService,\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  editCondition(checkTime: string) {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    const text = checkTime === 'ACTIVITY_BEFORE_STARTED' ? this.activityBeforeStarted.value : this.activityBeforeCompleted.value;\r\n    this.expr.addExpressionText(text);\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 默认打开简易表达式编辑器\r\n    this.expr.buildExpression().then((cond: string) => {\r\n      if (checkTime === 'ACTIVITY_BEFORE_STARTED') {\r\n        this.activityBeforeStarted.value = cond;\r\n      } else {\r\n        this.activityBeforeCompleted.value = cond;\r\n      }\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  clearCondition(checkTime: string) {\r\n    if (checkTime === 'ACTIVITY_BEFORE_STARTED') {\r\n      this.activityBeforeStarted.value = null;\r\n    } else {\r\n      this.activityBeforeCompleted.value = null;\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    const checkConditions = new Array();\r\n    if (this.activityBeforeStarted.value || this.activityBeforeStarted.errorTips) {\r\n      checkConditions.push(this.activityBeforeStarted);\r\n    }\r\n    if (this.activityBeforeCompleted.value || this.activityBeforeCompleted.errorTips) {\r\n      checkConditions.push(this.activityBeforeCompleted);\r\n    }\r\n    const object = { value: checkConditions, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  validator() {\r\n\r\n  }\r\n}\r\nexport class CheckConditionConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform(\"component.checkCondition.set\");\r\n    }\r\n    return this.localePipe.transform(\"component.checkCondition.notSet\");\r\n  }\r\n}\r\n\r\n","import { ChangeDetectorRef, Component, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { AssignConfig } from './assign-config';\r\nimport { AssignStrategy } from './assign-strategy';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-assign-strategy',\r\n  templateUrl: './assign-strategy.component.html',\r\n  styleUrls: ['./assign-strategy.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class AssignStrategyComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(assignStrategy: AssignStrategy) {\r\n    this.assignStrategy = assignStrategy || new AssignStrategy();\r\n    if (!this.assignStrategy.assignConfig) {\r\n      this.assignStrategy.assignConfig = new AssignConfig();\r\n    }\r\n    this.assingPerformerConfigForm.setValue({\r\n      multiSelect: this.assignStrategy.assignConfig.multiSelect,\r\n      necessary: this.assignStrategy.assignConfig.necessary\r\n    });\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  assingPerformerConfigForm: FormGroup = new FormGroup({\r\n    multiSelect: new FormControl(true),\r\n    necessary: new FormControl(false)\r\n  });\r\n\r\n  assignStrategy = new AssignStrategy();\r\n  assignStrategyList = [\r\n    { value: 'ALL', name: this.localePipe.transform('component.assignStrategy.all') },\r\n    { value: 'ASSIGN', name: this.localePipe.transform('component.assignStrategy.assign') },\r\n    { value: 'CLAIM', name: this.localePipe.transform('component.assignStrategy.claim') }\r\n  ];\r\n\r\n  operatorCollection = [\r\n    { text: this.localePipe.transform('component.assignStrategy.currentUser'), value: 'currentUser' },\r\n    { text: this.localePipe.transform('component.assignStrategy.procInstCreator'), value: 'procInstCreator' }];\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.assignStrategy.assignStrategy'),\r\n    width: 405,\r\n    height: 350,\r\n    showButtons: true\r\n  };\r\n\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private message: MessagerService,\r\n    private designerUIState: ProcessDesignerUIState,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changeValue(event: any) {\r\n    if (event === 'ASSIGN') {\r\n      if (!this.assignStrategy.assignConfig) {\r\n        this.assignStrategy.assignConfig = new AssignConfig();\r\n      }\r\n      this.assingPerformerConfigForm.setValue({\r\n        multiSelect: this.assignStrategy.assignConfig.multiSelect,\r\n        necessary: this.assignStrategy.assignConfig.necessary\r\n      });\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.assignStrategy.assignConfig.multiSelect = this.assingPerformerConfigForm.get('multiSelect').value;\r\n    this.assignStrategy.assignConfig.necessary = this.assingPerformerConfigForm.get('necessary').value;\r\n    console.log(this.assignStrategy);\r\n    const object = { value: this.assignStrategy, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n}\r\n\r\nexport class AssignStrategyConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: AssignStrategy): string {\r\n    switch (data.assignStrategy) {\r\n      case 'ALL':\r\n        return this.localePipe.transform('component.assignStrategy.all');\r\n      case 'ASSIGN':\r\n        return this.localePipe.transform('component.assignStrategy.assign');\r\n      case 'CLAIM':\r\n        return this.localePipe.transform('component.assignStrategy.claim');\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n}\r\n\r\n","export class AssignConfig {\r\n    constructor() {\r\n        this.operator = 'currentUser';\r\n        this.multiSelect = true;\r\n        this.necessary = false;\r\n    }\r\n    operator: string;\r\n    multiSelect: boolean;\r\n    necessary: boolean;\r\n}\r\n","import { ChangeDetectorRef, Component, ComponentFactoryResolver, ComponentRef, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { FDropdownDirective } from '@farris/ui-dropdown';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalRef, BsModalService } from '@farris/ui-modal';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { OrganizationParticipantExpression } from '../../domain/entities/organization-participant-expression';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { ComponentPerformer } from '../performer/views/component-performer/component-performer.entity';\r\nimport { PerformerEditComponent } from '../performer/views/performer-edit/performer-edit.component';\r\nimport { AssignConfig } from './assign-config';\r\nimport { ActivityExecutorParticipant, ComponentParticipant, MatrixParticipant, OrganizationParticipant, ParticipantInfo, PositionParticipant, ReportingLineParticipant, UserParticipant, VariableParticipant } from './participant.info';\r\nimport { ParticipantUIState } from './participant.uistate';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-participant',\r\n  templateUrl: './participant.component.html',\r\n  styleUrls: ['./participant.component.scss'],\r\n  providers: [\r\n    ParticipantUIState,\r\n     WfLocalePipe\r\n  ]\r\n})\r\nexport class ParticipantComponent implements OnInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('dropdownEl') dropDownEl: FDropdownDirective;\r\n  @ViewChild('dropdownE2') dropDownE2: FDropdownDirective;\r\n  @ViewChild('editFooter') editFooter: TemplateRef<any>;\r\n  @ViewChild('humanPerformerGrid') humanPerformerGrid: DatagridComponent;\r\n  @ViewChild('potentialOwnerGrid') potentialOwnerGrid: DatagridComponent;\r\n\r\n  @Input() editorParams: any = {};\r\n\r\n  @Input() set value(participant: ParticipantInfo) {\r\n    this.participant = JSON.parse(JSON.stringify(participant));\r\n    if (!this.participant.assignStrategy.assignConfig) {\r\n      this.participant.assignStrategy.assignConfig = new AssignConfig();\r\n    }\r\n    this.preAssignStrategy = participant.assignStrategy.assignStrategy;\r\n    if (this.participant.humanPerformerList\r\n      && this.participant.humanPerformerList.length > 0\r\n    ) {\r\n      if (Math.max(...this.participant.humanPerformerList.map(p => p.order)) === 0) {\r\n        let index = 1;\r\n        for (const humanPerformer of this.participant.humanPerformerList) {\r\n          humanPerformer.order = index;\r\n          index++;\r\n        }\r\n      }\r\n      this.participant.humanPerformerList = this.participant.humanPerformerList.sort((a, b) => a.order - b.order);\r\n    }\r\n    if (this.participant.potentialOwnerList\r\n      && this.participant.potentialOwnerList.length > 0) {\r\n      if (Math.max(...this.participant.potentialOwnerList.map(p => p.order)) === 0) {\r\n        let index = 1;\r\n        for (const potentialOwner of this.participant.potentialOwnerList) {\r\n          potentialOwner.order = index;\r\n          index++;\r\n        }\r\n      }\r\n      this.participant.potentialOwnerList = this.participant.potentialOwnerList.sort((a, b) => a.order - b.order);\r\n    }\r\n  }\r\n\r\n  private preAssignStrategy;\r\n\r\n  nodeType: 'userActivity' | 'notifyActivity'  = 'notifyActivity';\r\n\r\n  editDialog: BsModalRef;\r\n  compRef: ComponentRef<PerformerEditComponent>;\r\n  isClose = true;\r\n\r\n  participant: ParticipantInfo = new ParticipantInfo();\r\n  editState = 'new'; // 编辑状态，用于区分是新增还是编辑  new | edit\r\n\r\n  type = 'humanPerformer';\r\n\r\n  assignStrategyList = [\r\n    { value: 'ALL', name: this.localePipe.transform('component.participant.all') },\r\n    { value: 'ASSIGN', name: this.localePipe.transform('component.participant.assign') },\r\n    { value: 'CLAIM', name: this.localePipe.transform('component.participant.claim') }\r\n  ];\r\n\r\n\r\n  operatorCollection = [\r\n    { text: this.localePipe.transform('component.participant.currentUser'), value: 'currentUser' },\r\n    { text: this.localePipe.transform('component.participant.procInstCreator'), value: 'procInstCreator' }\r\n  ];\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.participant.participantSet'),\r\n    width: 900,\r\n    height: 662,\r\n    showButtons: true\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      field: 'order', width: 25, title: this.localePipe.transform('component.participant.order'),\r\n      editor: {\r\n        type: EditorTypes.NUMBERBOX, options: {\r\n        }\r\n      },\r\n    }, {\r\n    field: 'type', width: 50, title: this.localePipe.transform('component.participant.type'),\r\n    formatter: {\r\n      type: 'enum',\r\n      options: { valueField: 'value', textField: 'text', data: this.uistate.typeCollection }\r\n    }\r\n    }, {\r\n    field: 'performerName', width: 50, title: this.localePipe.transform('component.participant.performerName'), showTips: true, formatter: (v, d, i) => {\r\n      switch (d.type) {\r\n        case 'wf.UserParticipantExpression':\r\n          return d.performerName;\r\n        case 'wf.VariableParticipantExpression':\r\n          return (d as VariableParticipant).name;\r\n        case 'wf.PositionParticipantExpression':\r\n          return (d as PositionParticipant).performerName;\r\n        case 'wf.ComponentParticipantExpression':\r\n          return (d as ComponentParticipant).name;\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          return (d as ReportingLineParticipant).reportingLineDefName + '-' + (d as ReportingLineParticipant).dimension;\r\n        case 'wf.MatrixParticipantExpression':\r\n          return (d as MatrixParticipant).matrixDefName + '-' + (d as MatrixParticipant).dataFieldAlias;\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          return (d as ActivityExecutorParticipant).performerName;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          return (d as OrganizationParticipant).organizationName;\r\n        default:\r\n          return '';\r\n      }\r\n    }\r\n  },\r\n  {\r\n    field: 'description', width: 100, title: this.localePipe.transform('component.participant.description'), showTips: true,\r\n    formatter: (v, d, i) => {\r\n      switch (d.type) {\r\n        case 'wf.UserParticipantExpression':\r\n          return this.getUserPerformerDescription(d);\r\n        case 'wf.VariableParticipantExpression':\r\n          return this.getVariablePerformerDescription(d);\r\n        case 'wf.PositionParticipantExpression':\r\n          return this.getPositionPerformerDescription(d);\r\n        case 'wf.ComponentParticipantExpression':\r\n          return this.getComponentPerformerDescription(d);\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          return this.getReportingLinePerformerDescription(d);\r\n        case 'wf.MatrixParticipantExpression':\r\n          return this.getMatrixPerformerDescription(d);\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          return (d as ActivityExecutorParticipant).performerName;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          return (d as OrganizationParticipant).organizationName + '，且' + ((d as OrganizationParticipant).includeChildren ? '包含下级' : '不包含下级');\r\n        default:\r\n          return '';\r\n      }\r\n    }\r\n  },\r\n  {\r\n    field: 'condition', width: 60, title: this.localePipe.transform('component.participant.condition'), showTips: true,\r\n    editor: {\r\n      type: 'input-group',\r\n      options: {\r\n        groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n        editable: false,\r\n        clickHandle: (e) => {\r\n          e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n          this.editConditon(e);\r\n        },\r\n      }\r\n    }\r\n    }];\r\n\r\n  constructor(\r\n    public designerUIState: ProcessDesignerUIState,\r\n    private uistate: ParticipantUIState,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private expr: ExpressionService,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.GetOrganizationType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nodeType = this.editorParams.nodeType;\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    this.humanPerformerGrid.endCellEdit();\r\n    if (this.potentialOwnerGrid) {\r\n      this.potentialOwnerGrid.endCellEdit();\r\n    }\r\n    const object = {\r\n      value: this.participant, parameters: null\r\n    };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  assignStrategyChange(data) {\r\n    if (this.preAssignStrategy !== 'ASSIGN' && data === 'ASSIGN' && this.participant.humanPerformerList.length > 0) {\r\n      if (!this.participant.assignStrategy.assignConfig) {\r\n        this.participant.assignStrategy.assignConfig = new AssignConfig();\r\n      }\r\n      this.message.question(this.localePipe.transform('component.participant.dataMovement1'), () => {\r\n        this.humanPerformerCopyToPotentialOwner();\r\n      });\r\n    } else if (this.preAssignStrategy === 'ASSIGN' && data !== 'ASSIGN' && this.participant.potentialOwnerList.length > 0) {\r\n      this.message.question(this.localePipe.transform('component.participant.dataMovement2'), () => {\r\n        this.potentialOwnerCopyToHumanPerformer();\r\n      });\r\n    }\r\n    this.preAssignStrategy = data;\r\n  }\r\n\r\n  switchChange(data: boolean) {\r\n    if (data) {\r\n      this.clearPerformer('potentialOwner');\r\n    }\r\n  }\r\n\r\n  addPerformer(performerType: string, type: string) {\r\n    this.editState = 'new';\r\n    this.type = type;\r\n    const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n    this.compRef = compFactory.create(this.injector);\r\n    this.compRef.instance.performerType = performerType;\r\n    const boxsize = this.attributeBoxSize(performerType);\r\n    const modalConfig = {\r\n      title: this.localePipe.transform('component.participant.participantSelection'),\r\n      width: boxsize.width,\r\n      height: boxsize.height,\r\n      buttons: this.editFooter,\r\n      showButtons: true\r\n    };\r\n    this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n    this.dropDownEl.close();\r\n    if (this.dropDownE2) {\r\n      this.dropDownE2.close();\r\n    }\r\n  }\r\n\r\n  editOK() {\r\n    this.isClose = true;\r\n    if (this.compRef) {\r\n      const re = this.compRef.instance.getPerformers();\r\n      if (re.userPerformers && re.userPerformers.length > 0) {\r\n        for (const p of re.userPerformers) {\r\n          this.addUserPerformer(p);\r\n        }\r\n      }\r\n      if (re.variable && re.variable !== null && re.variable.performerId) {\r\n        this.addvariablePerformer(re.variable);\r\n      }\r\n      // 2023-7-28 组织岗支持多选\r\n      if (re.positions && re.positions.length > 0) {\r\n        this.addPositionPerformer(re.positions);\r\n      }\r\n      if (re.component && re.component.metadataId && re.component.methodCode) {\r\n        this.addComponentPerformer(re.component);\r\n      }\r\n      if (re.reportingLine && re.reportingLine.reportingLineDefId && re.reportingLine.dimension) {\r\n        this.addReportingLinePerformer(re.reportingLine);\r\n      }\r\n      if (re.matrix && re.matrix.matrixDefId) {\r\n        this.addMatrixPerformer(re.matrix);\r\n      }\r\n      if (re.activityExecutorPerformers && re.activityExecutorPerformers.length > 0) {\r\n        for (const a of re.activityExecutorPerformers) {\r\n          this.addActivityExecutorPerformer(a);\r\n        }\r\n      }\r\n      if (re.organizationParticipant) {\r\n        this.addOrganizationParticipant(re.organizationParticipant);\r\n      }\r\n    }\r\n    if (this.editDialog && this.isClose) {\r\n      this.editDialog.close();\r\n    }   \r\n    // 编辑完成后刷新两个组件\r\n    this.humanPerformerGrid.refresh();\r\n    this.potentialOwnerGrid.refresh();\r\n  }\r\n\r\n  private addUserPerformer(userPerformer: UserParticipant) {\r\n    if (this.type === 'humanPerformer') {\r\n      const i = this.participant.humanPerformerList.findIndex(a => (a.id === userPerformer.id || ((a as UserParticipant).performerId && (a as UserParticipant).performerId === userPerformer.performerId)));\r\n      if (i > -1) {\r\n        // this.participant.humanPerformerList[i] = userPerformer;\r\n      } else {\r\n        if (this.editState === 'edit') {\r\n          this.removeHumanPerformer();\r\n        }\r\n        let index;\r\n        if (this.participant.humanPerformerList.length > 0) {\r\n          index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        userPerformer.order = index;\r\n        this.participant.humanPerformerList.push(userPerformer);\r\n      }\r\n      this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n    } else if (this.type === 'potentialOwner') {\r\n      const i = this.participant.potentialOwnerList.findIndex(a => (a.id === userPerformer.id || ((a as UserParticipant).performerId && (a as UserParticipant).performerId === userPerformer.performerId)));\r\n      if (i > -1) {\r\n        // this.participant.potentialOwnerList[i] = userPerformer;\r\n      } else {\r\n        if (this.editState === 'edit') {\r\n          this.removePotentialOwner();\r\n        }\r\n        let index;\r\n        if (this.participant.potentialOwnerList.length > 0) {\r\n          index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        userPerformer.order = index;\r\n        this.participant.potentialOwnerList.push(userPerformer);\r\n      }\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  private addvariablePerformer(variable: VariableParticipant) {\r\n    const v = variable;\r\n    if (!v || !v.varValue) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectProcessVariables'));\r\n      this.isClose = false;\r\n    } else if (!v.varType) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectVariableValueType'));\r\n      this.isClose = false;\r\n    } else if (!v.relation) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectRelation'));\r\n      this.isClose = false;\r\n    } else {\r\n      if (this.type === 'humanPerformer') {\r\n        const i = this.participant.humanPerformerList.findIndex(a => (a.id === variable.id || ((a as VariableParticipant).performerId && (a as VariableParticipant).performerId === variable.performerId)));\r\n        if (i > -1) {\r\n          this.participant.humanPerformerList[i] = variable;\r\n        } else {\r\n          if (this.editState === 'edit') {\r\n            this.removeHumanPerformer();\r\n          }\r\n          let index;\r\n          if (this.participant.humanPerformerList.length > 0) {\r\n            index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          variable.order = index;\r\n          this.participant.humanPerformerList.push(variable);\r\n        }\r\n        this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n      } else if (this.type === 'potentialOwner') {\r\n        const i = this.participant.potentialOwnerList.findIndex(a => (a.id === variable.id || ((a as VariableParticipant).performerId && (a as VariableParticipant).performerId === variable.performerId)));\r\n        if (i > -1) {\r\n          this.participant.potentialOwnerList[i] = variable;\r\n        } else {\r\n          if (this.editState === 'edit') {\r\n            this.removePotentialOwner();\r\n          }\r\n          let index;\r\n          if (this.participant.potentialOwnerList.length > 0) {\r\n            index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          variable.order = index;\r\n          this.participant.potentialOwnerList.push(variable);\r\n        }\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addPositionPerformer(positions: PositionParticipant[]) {\r\n    for (const position of positions) {\r\n      if (!position.performerId) {\r\n        this.message.info(this.localePipe.transform('component.participant.selectPosition'));\r\n        this.isClose = false;\r\n      } else {\r\n        if ((!position.orgType || position.orgType == null) && (position.isRequired && position.positionType === '1')) {\r\n          this.message.info(this.localePipe.transform('component.participant.selectOrgType'));\r\n          this.isClose = false;\r\n        } else if ((!position.orgId || position.orgId == null) && (position.isRequired && position.positionType === '1')) {\r\n          this.message.info(this.localePipe.transform('component.participant.orgFill'));\r\n          this.isClose = false;\r\n        } else {\r\n          // (1)id一致，为编辑岗位；（2）performid一致，新增的用户，岗位已存在\r\n          if (this.type === 'humanPerformer') {\r\n            const i = this.participant.humanPerformerList.findIndex(a => {\r\n              if (a.type !== 'wf.PositionParticipantExpression') {\r\n                return false;\r\n              }\r\n              const p = a as PositionParticipant;\r\n              return (p.id === position.id);\r\n            });\r\n            if (i > -1) {\r\n              this.participant.humanPerformerList[i] = position;\r\n            } else {\r\n              let index;\r\n              if (this.participant.humanPerformerList.length > 0) {\r\n                index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n              } else {\r\n                index = 1;\r\n              }\r\n              position.order = index;\r\n              this.participant.humanPerformerList.push(position);\r\n            }\r\n            this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n          } else if (this.type === 'potentialOwner') {\r\n            const i = this.participant.potentialOwnerList.findIndex(a => {\r\n              if (a.type !== 'wf.PositionParticipantExpression') {\r\n                return false;\r\n              }\r\n              const p = a as PositionParticipant;\r\n              return (p.id === position.id);\r\n            });\r\n            if (i > -1) {\r\n              this.participant.potentialOwnerList[i] = position;\r\n            } else {\r\n              let index;\r\n              if (this.participant.potentialOwnerList.length > 0) {\r\n                index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n              } else {\r\n                index = 1;\r\n              }\r\n              position.order = index;\r\n              this.participant.potentialOwnerList.push(position);\r\n            }\r\n            this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private addComponentPerformer(component: ComponentPerformer) {\r\n    const cmp = new ComponentParticipant();\r\n    cmp.id = component.id;\r\n    cmp.metadataId = component.metadataId;\r\n    cmp.methodCode = component.methodCode;\r\n    cmp.methodName = component.methodName;\r\n    cmp.name = component.name;\r\n    cmp.actualParameters = component.actualParameters;\r\n    cmp.type = 'wf.ComponentParticipantExpression';\r\n    cmp.condition = component.condition;\r\n    if (this.type === 'humanPerformer') {\r\n      const i = this.participant.humanPerformerList.findIndex(a => a.id === cmp.id);\r\n      if (i > -1) {\r\n        this.participant.humanPerformerList[i] = cmp;\r\n      } else {\r\n        let index;\r\n        if (this.participant.humanPerformerList.length > 0) {\r\n          index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        cmp.order = index;\r\n        this.participant.humanPerformerList.push(cmp);\r\n      }\r\n      this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n    } else if (this.type === 'potentialOwner') {\r\n      const i = this.participant.potentialOwnerList.findIndex(a => a.id === cmp.id);\r\n      if (i > -1) {\r\n        this.participant.potentialOwnerList[i] = cmp;\r\n      } else {\r\n        let index;\r\n        if (this.participant.potentialOwnerList.length > 0) {\r\n          index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        cmp.order = index;\r\n        this.participant.potentialOwnerList.push(cmp);\r\n      }\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  private addReportingLinePerformer(reportingLine: ReportingLineParticipant) {\r\n    if (reportingLine.reportingReferObject === 'dept' && !reportingLine.refOrgId) {\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.refOrgIdNotNull'));\r\n    } else if (reportingLine.reportingReferObject !== 'dept' && !reportingLine.refUserId && !reportingLine.refEmployeeId) { // 用户及其他人员汇报对象类型，参照用户和参照员工不能全部为空\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.refUserIdNotNull'));\r\n    } else {\r\n      this.isClose = true;\r\n      if (this.type === 'humanPerformer') {\r\n        const i = this.participant.humanPerformerList.findIndex(a => a.id === reportingLine.id);\r\n        if (i > -1) {\r\n          this.participant.humanPerformerList[i] = reportingLine;\r\n        } else {\r\n          const reportingLines = this.participant.humanPerformerList.filter(h => h.type === 'wf.ReportingLineParticipantExpression');\r\n          for (const r of reportingLines) {\r\n            const reportingLineData = r as ReportingLineParticipant;\r\n            if (reportingLineData.reportingLineDefId === reportingLine.reportingLineDefId &&\r\n              reportingLineData.dimension === reportingLine.dimension &&\r\n              reportingLineData.refUserId === reportingLine.refUserId &&\r\n              reportingLineData.refEmployeeId === reportingLine.refEmployeeId &&\r\n              reportingLineData.refOrgId === reportingLine.refOrgId\r\n            ) {\r\n              this.message.error(this.localePipe.transform('component.participant.repDefConfigured'));\r\n              return;\r\n            }\r\n          }\r\n          let index;\r\n          if (this.participant.humanPerformerList.length > 0) {\r\n            index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          reportingLine.order = index;\r\n          this.participant.humanPerformerList.push(reportingLine);\r\n        }\r\n        this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n      } else if (this.type === 'potentialOwner') {\r\n        const i = this.participant.potentialOwnerList.findIndex(a => a.id === reportingLine.id);\r\n        if (i > -1) {\r\n          this.participant.potentialOwnerList[i] = reportingLine;\r\n        } else {\r\n          const reportingLines = this.participant.potentialOwnerList.filter(h => h.type === 'wf.ReportingLineParticipantExpression');\r\n          for (const r of reportingLines) {\r\n            const reportingLineData = r as ReportingLineParticipant;\r\n            if (reportingLineData.reportingLineDefId === reportingLine.reportingLineDefId &&\r\n              reportingLineData.dimension === reportingLine.dimension &&\r\n              reportingLineData.refUserId === reportingLine.refUserId &&\r\n              reportingLineData.refEmployeeId === reportingLine.refEmployeeId &&\r\n              reportingLineData.refOrgId === reportingLine.refOrgId\r\n            ) {\r\n              this.message.error(this.localePipe.transform('component.participant.repDefConfigured'));\r\n              return;\r\n            }\r\n          }\r\n          let index;\r\n          if (this.participant.potentialOwnerList.length > 0) {\r\n            index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          reportingLine.order = index;\r\n          this.participant.potentialOwnerList.push(reportingLine);\r\n        }\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addMatrixPerformer(matrix: MatrixParticipant) {\r\n    if (!matrix.conditionField1 && !matrix.conditionField2 && !matrix.conditionField3) {\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.atLeastOneCondition'));\r\n    } else if (!matrix.dataFieldAlias) {\r\n      this.isClose = false;\r\n      this.message.info(this.localePipe.transform('component.participant.dataFieldAliasNotNull'));\r\n    } else {\r\n      this.isClose = true;\r\n      if (this.type === 'humanPerformer') {\r\n        const i = this.participant.humanPerformerList.findIndex(a => a.id === matrix.id);\r\n        if (i > -1) {\r\n          this.participant.humanPerformerList[i] = matrix;\r\n        } else {\r\n          const matrixParticipants = this.participant.humanPerformerList.filter(h => h.type === 'wf.MatrixParticipantExpression');\r\n          for (const m of matrixParticipants) {\r\n            const matrixData = m as MatrixParticipant;\r\n            if (matrixData.matrixDefId === matrix.matrixDefId &&\r\n              matrixData.conditionField1 === matrix.conditionField1 &&\r\n              matrixData.conditionField2 === matrix.conditionField2 &&\r\n              matrixData.conditionField3 === matrix.conditionField3 &&\r\n              matrixData.dataFieldAlias === matrix.dataFieldAlias\r\n            ) {\r\n              this.message.error(this.localePipe.transform('component.participant.matrixConfigured'));\r\n              return;\r\n            }\r\n          }\r\n          let index;\r\n          if (this.participant.humanPerformerList.length > 0) {\r\n            index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          matrix.order = index;\r\n          this.participant.humanPerformerList.push(matrix);\r\n        }\r\n        this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n      } else if (this.type === 'potentialOwner') {\r\n        const i = this.participant.potentialOwnerList.findIndex(a => a.id === matrix.id);\r\n        if (i > -1) {\r\n          this.participant.potentialOwnerList[i] = matrix;\r\n        } else {\r\n          const matrixParticipants = this.participant.potentialOwnerList.filter(h => h.type === 'wf.MatrixParticipantExpression');\r\n          for (const m of matrixParticipants) {\r\n            const matrixData = m as MatrixParticipant;\r\n            if (matrixData.matrixDefId === matrix.matrixDefId &&\r\n              matrixData.conditionField1 === matrix.conditionField1 &&\r\n              matrixData.conditionField2 === matrix.conditionField2 &&\r\n              matrixData.conditionField3 === matrix.conditionField3 &&\r\n              matrixData.dataFieldAlias === matrix.dataFieldAlias\r\n            ) {\r\n              this.message.error(this.localePipe.transform('component.participant.matrixConfigured'));\r\n              return;\r\n            }\r\n          }\r\n          let index;\r\n          if (this.participant.potentialOwnerList.length > 0) {\r\n            index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n          } else {\r\n            index = 1;\r\n          }\r\n          matrix.order = index;\r\n          this.participant.potentialOwnerList.push(matrix);\r\n        }\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private addActivityExecutorPerformer(activityExecutor: ActivityExecutorParticipant) {\r\n    if (this.type === 'humanPerformer') {\r\n      const i = this.participant.humanPerformerList.findIndex(a => (a.id === activityExecutor.id ||\r\n        ((a as ActivityExecutorParticipant).activityDefId && (a as ActivityExecutorParticipant).activityDefId === activityExecutor.activityDefId)));\r\n      if (i < 0) {\r\n        if (this.editState === 'edit') {\r\n          this.removeHumanPerformer(); // 在编辑状态下配置了活动办理人参与者，先将选中的删除\r\n        }\r\n        let index;\r\n        if (this.participant.humanPerformerList.length > 0) {\r\n          index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        activityExecutor.order = index;\r\n        this.participant.humanPerformerList.push(activityExecutor);\r\n      }\r\n      this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n    } else if (this.type === 'potentialOwner') {\r\n      const i = this.participant.potentialOwnerList.findIndex(a => (a.id === activityExecutor.id ||\r\n        ((a as ActivityExecutorParticipant).activityDefId && (a as ActivityExecutorParticipant).activityDefId === activityExecutor.activityDefId)));\r\n      if (i < 0) {\r\n        if (this.editState === 'edit') {\r\n          this.removePotentialOwner(); // 在编辑状态下配置了活动办理人参与者，先将选中的删除\r\n        }\r\n        let index;\r\n        if (this.participant.potentialOwnerList.length > 0) {\r\n          index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n        } else {\r\n          index = 1;\r\n        }\r\n        activityExecutor.order = index;\r\n        this.participant.potentialOwnerList.push(activityExecutor);\r\n      }\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n\r\n  private addOrganizationParticipant(organization: OrganizationParticipantExpression) {\r\n    const organizationParticipant = new OrganizationParticipant();\r\n    organizationParticipant.id = organization.id || ProcessDeUtil.GenerateElementId();\r\n    organizationParticipant.type = 'wf.OrganizationParticipantExpression';\r\n    organizationParticipant.condition = organization.condition;\r\n    organizationParticipant.name = organization.name;\r\n    organizationParticipant.actionScope = organization.actionScope;\r\n    organizationParticipant.organizationLevel = organization.organizationLevel;\r\n    organizationParticipant.organizationId = organization.organizationId;\r\n    organizationParticipant.organizationCode = organization.organizationCode;\r\n    organizationParticipant.organizationName = organization.organizationName;\r\n    organizationParticipant.includeChildren = organization.includeChildren;\r\n    organizationParticipant.parentsUntil = organization.parentsUntil;\r\n    organizationParticipant.tag = organization.tag;\r\n\r\n    if (this.type === 'humanPerformer') {\r\n      this.participant.humanPerformerList = this.participant.humanPerformerList.filter(p => p.type !== 'wf.OrganizationParticipantExpression');\r\n      let index;\r\n      if (this.participant.humanPerformerList.length > 0) {\r\n        index = Math.max(...this.participant.humanPerformerList.map(h => h.order))+1;\r\n      } else {\r\n        index = 1;\r\n      }\r\n      organizationParticipant.order = index;\r\n      this.participant.humanPerformerList.push(organizationParticipant);\r\n      this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n    } else if (this.type === 'potentialOwner') {\r\n      this.participant.potentialOwnerList = this.participant.potentialOwnerList.filter(p => p.type !== 'wf.OrganizationParticipantExpression');\r\n      let index;\r\n      if (this.participant.potentialOwnerList.length > 0) {\r\n        index = Math.max(...this.participant.potentialOwnerList.map(p => p.order))+1;\r\n      } else {\r\n        index = 1;\r\n      }\r\n      organizationParticipant.order = index;\r\n      this.participant.potentialOwnerList.push(organizationParticipant);\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  editCancel() {\r\n    if (this.editDialog) {\r\n      this.editDialog.close();\r\n    }\r\n  }\r\n\r\n  editPerformer(type: string) {\r\n    this.editState = 'edit';\r\n    this.type = type;\r\n    let selectedRow;\r\n    if (type === 'humanPerformer') {\r\n      selectedRow = this.humanPerformerGrid.selectedRow;\r\n    } else if (type === 'potentialOwner') {\r\n      selectedRow = this.potentialOwnerGrid.selectedRow;\r\n    }\r\n    if (!selectedRow) {\r\n      this.message.info(this.localePipe.transform('component.participant.selectPerformer'));\r\n      return;\r\n    }\r\n    const curPerformer = selectedRow.data;\r\n    if (curPerformer) {\r\n      const boxsize = this.attributeBoxSize(curPerformer.type);\r\n      const modalConfig = {\r\n        title: this.localePipe.transform('component.participant.participantSelection'),\r\n        width: boxsize.width,\r\n        height: boxsize.height,\r\n        buttons: this.editFooter,\r\n        showButtons: true\r\n      };\r\n      const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);\r\n      this.compRef = compFactory.create(this.injector);\r\n      this.compRef.instance.performerType = curPerformer.type;\r\n      this.compRef.instance.editState =  this.editState;\r\n      switch (curPerformer.type) {\r\n        case 'wf.PositionParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.PositionParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.UserParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.UserParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.VariableParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.VariableParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.ReportingLineParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ReportingLineParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          const url = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + (curPerformer as ReportingLineParticipant).reportingLineDefId;\r\n          this.http.get(url).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error(this.localePipe.transform('component.participant.definitionDeleted'));\r\n              if (type === 'humanPerformer') {\r\n                this.removeHumanPerformer();\r\n              } else if (type === 'potentialOwner') {\r\n                this.removePotentialOwner();\r\n              }\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.MatrixParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.MatrixParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          const urlMatrix = '/api/runtime/wf/v1.0/matrixDefinition/' + (curPerformer as MatrixParticipant).matrixDefId;\r\n          this.http.get(urlMatrix).subscribe((res: any) => {\r\n            if (!res) {\r\n              this.message.error(this.localePipe.transform('component.participant.matrixDeleted'));\r\n              if (type === 'humanPerformer') {\r\n                this.removeHumanPerformer();\r\n              } else if (type === 'potentialOwner') {\r\n                this.removePotentialOwner();\r\n              }\r\n            } else {\r\n              this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n            }\r\n          });\r\n          break;\r\n        case 'wf.ComponentParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ComponentParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.ActivityExecutorParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.ActivityExecutorParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n        case 'wf.OrganizationParticipantExpression':\r\n          this.compRef.instance.performer = {\r\n            type: 'wf.OrganizationParticipantExpression',\r\n            value: curPerformer\r\n          };\r\n          break;\r\n      }\r\n      if (curPerformer.type !== 'wf.ReportingLineParticipantExpression' &&\r\n        curPerformer.type !== 'wf.MatrixParticipantExpression') { // 汇报关系和矩阵单独处理\r\n        this.editDialog = this.modalService.show(this.compRef, modalConfig);\r\n      }\r\n    }\r\n  }\r\n  removePerformer(type: string) {\r\n    if (type === 'humanPerformer') {\r\n      if (this.humanPerformerGrid.selectedRow) {\r\n        this.humanPerformerGrid.endCellEdit();\r\n        const index = this.participant.humanPerformerList.findIndex(p => p.id === this.humanPerformerGrid.selectedRow.data.id);\r\n        this.participant.humanPerformerList.splice(index, 1);\r\n        this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n      } else {\r\n        this.message.info(this.localePipe.transform('component.participant.selectParticipantInfo'));\r\n      }\r\n    } else if (type === 'potentialOwner') {\r\n      if (this.potentialOwnerGrid.selectedRow) {\r\n        this.potentialOwnerGrid.endCellEdit();\r\n        const index = this.participant.potentialOwnerList.findIndex(p => p.id === this.potentialOwnerGrid.selectedRow.data.id);\r\n        this.participant.potentialOwnerList.splice(index, 1);\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      } else {\r\n        this.message.info(this.localePipe.transform('component.participant.selectParticipantInfo'));\r\n      }\r\n    }\r\n  }\r\n\r\n  clearPerformer(type: string) {\r\n    if (type === 'humanPerformer') {\r\n      this.participant.humanPerformerList = new Array();\r\n    } else if (type === 'potentialOwner') {\r\n      this.participant.potentialOwnerList = new Array();\r\n    }\r\n    this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n    if (this.potentialOwnerGrid) {\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n    }\r\n  }\r\n\r\n  moveUp(type: string) {\r\n    if (type === 'humanPerformer') {\r\n      const selectedRow = this.humanPerformerGrid.selectedRow;\r\n      if (!selectedRow) {\r\n        this.message.info(this.localePipe.transform('component.participant.noRowSelected'));\r\n        return;\r\n      }\r\n      const performer = selectedRow.data;\r\n      const i = this.participant.humanPerformerList.findIndex(c => c.id === performer.id);\r\n      if (i === 0) {\r\n        return;\r\n      }\r\n      const index = this.participant.humanPerformerList[i].order;\r\n      this.participant.humanPerformerList[i].order = this.participant.humanPerformerList[i - 1].order;\r\n      this.participant.humanPerformerList[i-1].order = index;\r\n      this.swapArray(this.participant.humanPerformerList, i, i - 1);\r\n      this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n      this.humanPerformerGrid.selectRow(performer.id, true);\r\n    } else if (type === 'potentialOwner') {\r\n      const selectedRow = this.potentialOwnerGrid.selectedRow;\r\n      if (!selectedRow) {\r\n        this.message.info(this.localePipe.transform('component.participant.noRowSelected'));\r\n        return;\r\n      }\r\n      const performer = selectedRow.data;\r\n      const i = this.participant.potentialOwnerList.findIndex(c => c.id === performer.id);\r\n      if (i === 0) {\r\n        return;\r\n      }\r\n      const index = this.participant.potentialOwnerList[i].order;\r\n      this.participant.potentialOwnerList[i].order = this.participant.potentialOwnerList[i - 1].order;\r\n      this.participant.potentialOwnerList[i-1].order = index;\r\n      this.swapArray(this.participant.potentialOwnerList, i, i - 1);\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      this.potentialOwnerGrid.selectRow(performer.id, true);\r\n    }\r\n\r\n  }\r\n\r\n  moveDown(type: string) {\r\n    if (type === 'humanPerformer') {\r\n      const selectedRow = this.humanPerformerGrid.selectedRow;\r\n      if (!selectedRow) {\r\n        this.message.info(this.localePipe.transform('component.participant.noRowSelected'));\r\n        return;\r\n      }\r\n      const performer = selectedRow.data;\r\n      const i = this.participant.humanPerformerList.findIndex(c => c.id === performer.id);\r\n      if (i === this.participant.humanPerformerList.length-1) {\r\n        return;\r\n      }\r\n      const index = this.participant.humanPerformerList[i].order;\r\n      this.participant.humanPerformerList[i].order = this.participant.humanPerformerList[i + 1].order;\r\n      this.participant.humanPerformerList[i+1].order = index;\r\n      this.swapArray(this.participant.humanPerformerList, i, i + 1);\r\n      this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n      this.humanPerformerGrid.selectRow(performer.id, true);\r\n    } else if (type === 'potentialOwner') {\r\n      const selectedRow = this.potentialOwnerGrid.selectedRow;\r\n      if (!selectedRow) {\r\n        this.message.info(this.localePipe.transform('component.participant.noRowSelected'));\r\n        return;\r\n      }\r\n      const performer = selectedRow.data;\r\n      const i = this.participant.potentialOwnerList.findIndex(c => c.id === performer.id);\r\n      if (i === this.participant.potentialOwnerList.length-1) {\r\n        return;\r\n      }\r\n      const index = this.participant.potentialOwnerList[i].order;\r\n      this.participant.potentialOwnerList[i].order = this.participant.potentialOwnerList[i + 1].order;\r\n      this.participant.potentialOwnerList[i+1].order = index;\r\n      this.swapArray(this.participant.potentialOwnerList, i, i + 1);\r\n      this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      this.potentialOwnerGrid.selectRow(performer.id, true);\r\n    }\r\n  }\r\n\r\n  private swapArray(arr: Array<any>, i1: number, i2: number): Array<any> {\r\n    arr[i1] = arr.splice(i2, 1, arr[i1])[0];\r\n    return arr;\r\n  }\r\n\r\n  removeHumanPerformer() {\r\n    if (this.humanPerformerGrid.selectedRow) {\r\n      this.humanPerformerGrid.endCellEdit();\r\n      const i = this.participant.humanPerformerList.findIndex(item => item.id === this.humanPerformerGrid.selectedRow.data.id);\r\n      this.participant.humanPerformerList.splice(i, 1);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.participant.selectDefaultHandler'));\r\n    }\r\n  }\r\n\r\n  removePotentialOwner() {\r\n    if (this.potentialOwnerGrid.selectedRow) {\r\n      this.potentialOwnerGrid.endCellEdit();\r\n      const i = this.participant.potentialOwnerList.findIndex(item => item.id === this.potentialOwnerGrid.selectedRow.data.id);\r\n      this.participant.potentialOwnerList.splice(i, 1);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.participant.selectpotentialtHandler'));\r\n    }\r\n  }\r\n\r\n  private getUserPerformerDescription(userPerformer: UserParticipant): string {\r\n    if (userPerformer.tag === 'expression') {\r\n      return userPerformer.performerId;\r\n    } else {\r\n      if (userPerformer.orgName) {\r\n        return this.localePipe.transform('component.participant.org') + userPerformer.orgName;\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n  }\r\n\r\n  private getVariablePerformerDescription(variablePerformer: VariableParticipant): string {\r\n    if (variablePerformer.tag === 'expression') {\r\n      return variablePerformer.varValue;\r\n    }\r\n  }\r\n\r\n  private getPositionPerformerDescription(position: PositionParticipant): string {\r\n    if (this.designerUIState.scene === 'inSuite') {\r\n      return null;\r\n    }\r\n    if (position.positionType === '1') {\r\n      if (position.orgId) {\r\n        return this.localePipe.transform('component.participant.positionType1') + position.orgId;\r\n      } else {\r\n        return this.localePipe.transform('component.participant.positionType2');\r\n      }\r\n    } else if (position.positionType === '0') {\r\n      return this.localePipe.transform('component.participant.positionType3');\r\n    }\r\n  }\r\n\r\n  private getComponentPerformerDescription(position: ComponentParticipant): string {\r\n    let des = this.localePipe.transform('component.participant.comp') + position.name\r\n    + this.localePipe.transform('component.participant.parameters');\r\n    if (position.actualParameters && position.actualParameters.length > 0) {\r\n      position.actualParameters.forEach(p => {\r\n        des += `${p.code}：${p.value}，`;\r\n      });\r\n      des = des.substring(0, des.length - 1);\r\n    }\r\n    des += '}';\r\n    return des;\r\n  }\r\n\r\n  private getReportingLinePerformerDescription(reportingLine: ReportingLineParticipant): string {\r\n    let description = '';\r\n    if (reportingLine.refUserId) {\r\n      description += this.localePipe.transform('component.participant.referencePerson') + reportingLine.refUserId;\r\n    }\r\n    if (reportingLine.refEmployeeId) {\r\n      description += this.localePipe.transform('component.participant.referencePerson') + reportingLine.refEmployeeId;\r\n    }\r\n    if (reportingLine.refOrgId) {\r\n      if (reportingLine.refUserId) {\r\n        description += `，`;\r\n      }\r\n      if (reportingLine.refEmployeeId) {\r\n        description += `，`;\r\n      }\r\n      description += this.localePipe.transform('component.participant.referenceOrganization') + reportingLine.refOrgId;\r\n    }\r\n    return description;\r\n  }\r\n\r\n  private getMatrixPerformerDescription(matrix: MatrixParticipant): string {\r\n    let description = '';\r\n    if (matrix.conditionField1) {\r\n      description += this.localePipe.transform('component.participant.condition1') + matrix.conditionFieldText1 + `，`;\r\n    }\r\n    if (matrix.conditionField2) {\r\n      description += this.localePipe.transform('component.participant.condition2') + matrix.conditionFieldText2 + `，`;\r\n    }\r\n    if (matrix.conditionField3) {\r\n      description += this.localePipe.transform('component.participant.condition3') + matrix.conditionFieldText3 + `，`;\r\n    }\r\n    if (matrix.dataFieldAlias) {\r\n      description += this.localePipe.transform('component.participant.data') + matrix.dataFieldAlias + `，`;\r\n    }\r\n    return description.slice(0, description.length - 1);\r\n  }\r\n\r\n  private editConditon(e: any) {\r\n    // this.expr.clearContext();\r\n    \r\n    if (this.designerUIState.schemas.length > 0) {\r\n      for (const schema of this.designerUIState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerUIState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    let context = new Array();\r\n    context = this.designerUIState.addContext(context);\r\n    if (this.designerUIState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerUIState.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.designerUIState.activityComponentContext.length > 0) {\r\n      for (const variable of this.designerUIState.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(e.instance.value);\r\n    this.expr.setEditPattern(ExprEditMode.Conditional); // 默认打开简易表达式编辑器\r\n    this.expr.buildExpression().then((cond: string) => {\r\n      if(this.humanPerformerGrid && this.humanPerformerGrid.selectedRow && this.humanPerformerGrid.selectedRow.data) {\r\n        let temp = this.participant.humanPerformerList.find(h => h.id === this.humanPerformerGrid.selectedRow.data.id);\r\n        temp.condition = cond;\r\n      }\r\n      if(this.potentialOwnerGrid && this.potentialOwnerGrid.selectedRow && this.potentialOwnerGrid.selectedRow.data) {\r\n        let temp = this.participant.potentialOwnerList.find(h => h.id === this.potentialOwnerGrid.selectedRow.data.id);\r\n        temp.condition = cond;\r\n      }\r\n\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  private humanPerformerCopyToPotentialOwner() {\r\n    if (this.participant.humanPerformerList && this.participant.humanPerformerList.length > 0) {\r\n      if (!this.participant.potentialOwnerList) {\r\n        this.participant.potentialOwnerList = new Array();\r\n      }\r\n      this.participant.potentialOwnerList.push(...this.participant.humanPerformerList);\r\n      this.participant.humanPerformerList = new Array();\r\n\r\n      this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n      if (this.potentialOwnerGrid) {\r\n        this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n      }\r\n    }\r\n  }\r\n\r\n  private potentialOwnerCopyToHumanPerformer() {\r\n    if (this.participant.potentialOwnerList && this.participant.potentialOwnerList.length > 0) {\r\n      if (!this.participant.humanPerformerList) {\r\n        this.participant.humanPerformerList = new Array();\r\n      }\r\n      const performers = this.participant.potentialOwnerList.filter(p => p.type !== 'wf.OrganizationParticipantExpression');\r\n      if (performers && performers.length > 0) {\r\n        // 此处直接push会导致order重复,需要重新排序\r\n        this.participant.humanPerformerList.push(...performers);\r\n        this.participant.humanPerformerList.forEach((human, index) => {\r\n          human.order = index + 1;\r\n        });\r\n        this.participant.potentialOwnerList = this.participant.potentialOwnerList.filter(p => p.type === 'wf.OrganizationParticipantExpression');\r\n        this.humanPerformerGrid.loadData(this.participant.humanPerformerList);\r\n        if (this.potentialOwnerGrid) {\r\n          this.potentialOwnerGrid.loadData(this.participant.potentialOwnerList);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private GetOrganizationType() {\r\n    const url = '/api/runtime/sys/v1.0/authfields/globalauthfields';\r\n    this.http.get(url)\r\n      .subscribe((data: any) => this.designerUIState.orgTypeCollection = data.map(d => ({ value: d.id, text: d.name })));\r\n  }\r\n\r\n  // 构造不同参与者选择界面的尺寸 2023-7-5\r\n  private attributeBoxSize(boxType: string) {\r\n    const boxsize = {\r\n      width: 760,\r\n      height: 512\r\n    }\r\n    switch (boxType) {\r\n      case 'wf.PositionParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 455;\r\n        return boxsize;\r\n      case 'wf.UserParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 320;\r\n        return boxsize;\r\n      case 'wf.VariableParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 420;\r\n        return boxsize;;\r\n      case 'wf.ReportingLineParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 512;\r\n        return boxsize;;\r\n      case 'wf.MatrixParticipantExpression':\r\n        boxsize.width = 780;\r\n        boxsize.height = 420;\r\n        return boxsize;;\r\n      case 'wf.ComponentParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 512;\r\n        return boxsize;;\r\n      case 'wf.ActivityExecutorParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 320;\r\n        return boxsize;;\r\n      case 'wf.OrganizationParticipantExpression':\r\n        boxsize.width = 760;\r\n        boxsize.height = 360;\r\n        return boxsize;;\r\n    }\r\n  }\r\n}\r\n\r\nexport class ParticipantConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: ParticipantInfo): string {\r\n    if (data && data.humanPerformerList && data.humanPerformerList.length > 0) {\r\n      return this.localePipe.transform(\"component.participant.set\");\r\n    }\r\n    if (data && data.potentialOwnerList && data.potentialOwnerList.length > 0) {\r\n      return this.localePipe.transform(\"component.participant.set\");\r\n    }\r\n    if (data && data.isAllScope) {\r\n      return this.localePipe.transform(\"component.participant.set\");\r\n    }\r\n    return this.localePipe.transform(\"component.participant.notSet\");\r\n  }\r\n}\r\n","import { ConditionType, ConditionValueVersion } from \"@gsp-wf/wf-process-model\";\r\nexport class Condition {\r\n    private _value;\r\n    private valueVersion;\r\n    private type;\r\n    ConditionType: ConditionType;\r\n    Value: string;\r\n    ValueVersion: ConditionValueVersion;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n","import { Condition } from \"./condition\";\r\n\r\nexport class DisplayInfor {\r\n    constructor(name:string, id: string) {\r\n        this.name = name;\r\n        this.activityDefinitionId = id;\r\n        this.required = false;\r\n    }\r\n    name: string;\r\n    activityDefinitionId: string;\r\n    condition: string;\r\n    required: boolean;\r\n}\r\n\r\nexport class OtherAssignActivityNodeInfo {\r\n\r\n    activityDefinitionId: string;\r\n    condition: Condition;\r\n    required: boolean;\r\n    constructor(id: string, condition: string, required: boolean) {\r\n        this.activityDefinitionId = id;\r\n        this.condition = new Condition();\r\n        this.condition.Value = condition;\r\n        this.required = required;\r\n    }\r\n}","import { AfterViewInit, ChangeDetectorRef, Component, EventEmitter, Inject, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { PickedResult } from '@farris/ui-lookup';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\nimport { DisplayInfor, OtherAssignActivityNodeInfo } from './other-assign-activity-node-info';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { ExprEditMode, ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\n\r\n@Component({\r\n  selector: 'lib-assign-scope',\r\n  templateUrl: './assign-scope.component.html',\r\n  styleUrls: ['./assign-scope.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class AssignScopeComponent implements OnInit, AfterViewInit {\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n  @ViewChild('actionsTable1') actionsTable1: DatagridComponent;\r\n  @ViewChild('actionsDialog1') actionsDialog1: DialogComponent;\r\n\r\n  @Input() editorParams: any = {};\r\n  @Input() set value(data) {\r\n    if (data && data.length > 0) {\r\n      // this.otherAssignActivities = [...data];\r\n      data.forEach(data1 =>{\r\n        let otherAssignActivityNodeInfo = new OtherAssignActivityNodeInfo(data1.activityDefinitionId, data1.condition ? data1.condition.Value : data1.condition, data1.required);\r\n        this.otherAssignActivityNodeInfos.push(otherAssignActivityNodeInfo);\r\n      } );\r\n      this.otherAssignActivityNodeInfos.forEach(other =>{\r\n        let displayInfo = new DisplayInfor(null,other.activityDefinitionId);\r\n        displayInfo.required = other.required;\r\n        if(other.condition){\r\n          displayInfo.condition = other.condition.Value;\r\n        }\r\n        // displayInfo.name = this.items.find(item => item.Id === displayInfo.activityDefinitionId).Name;\r\n        this.listItems.push(displayInfo);\r\n      } );\r\n    }\r\n  }\r\n\r\n  location;\r\n\r\n  items = new Array();\r\n\r\n  listItems = new Array<DisplayInfor>();\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.assignScope.assignScopeList'),\r\n    width: 600,\r\n    height: 520,\r\n    showButtons: true\r\n  };\r\n\r\n  cols = [\r\n    { title: this.localePipe.transform('component.assignScope.name'), field: 'name', width: 80},\r\n    { title: 'ID', field: 'activityDefinitionId', width: 100},\r\n    { title: this.localePipe.transform('component.assignScope.required'), field: 'required', width: 50,\r\n      editor: {\r\n        type: EditorTypes.SWITCH,\r\n        options: {}\r\n      },\r\n      formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.assignScope.yes'), falseText: this.localePipe.transform('component.assignScope.no') } },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    { title: this.localePipe.transform('component.assignScope.condition'), field: 'condition', width: 70,\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.editConditon(e);\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  nodeCols = [\r\n    { title: this.localePipe.transform('component.assignScope.name'), field: 'Name', width: 100, filter: true },\r\n    { title: 'ID', field: 'Id', width: 100, filter: true },\r\n  ]\r\n\r\n  // otherAssignActivities = new Array();\r\n\r\n  otherAssignActivityNodeInfos = new Array<OtherAssignActivityNodeInfo>();\r\n\r\n  curActivity;\r\n\r\n  constructor(\r\n    private uistate: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    private exprService: ExpressionService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    if (!this.location) {\r\n      this.location = this.editorParams.location;\r\n    }\r\n    let activities = new Array();\r\n    if (this.location === 'startActivity') {\r\n      activities = [...this.uistate.userActList.filter(a => a.Id !== this.uistate.propertyData.Id\r\n        && a.AssignmentStrategy === 'ASSIGN'\r\n        && a.AssignPerformerConfig\r\n        && a.AssignPerformerConfig.Operator === 'procInstCreator')];\r\n    } else {\r\n      activities = [...this.uistate.userActList.filter(a => a.Id !== this.uistate.propertyData.Id && a.AssignmentStrategy === 'ASSIGN')];\r\n    }\r\n    if (this.otherAssignActivityNodeInfos && this.otherAssignActivityNodeInfos.length > 0) {\r\n      for (const other of this.otherAssignActivityNodeInfos) {\r\n        const activity = activities.find(a => a.Id === other.activityDefinitionId);\r\n        if (activity) {\r\n          this.items = this.items.concat([activity]);\r\n        }\r\n      }\r\n      for (const activity of activities) {\r\n        if (this.items.findIndex(item => item.Id === activity.Id) === -1) {\r\n          this.items = this.items.concat([activity]);\r\n        }\r\n      }\r\n    } else {\r\n      this.items = activities;\r\n    }\r\n\r\n    this.listItems.forEach(listItem => {\r\n      listItem.name = this.items.find(item => item.Id === listItem.activityDefinitionId).Name;\r\n    })\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.otherAssignActivityNodeInfos && this.otherAssignActivityNodeInfos.length > 0) {\r\n      for (const other of this.otherAssignActivityNodeInfos) {\r\n        this.grid.checkRow(other.activityDefinitionId);\r\n      }\r\n    }\r\n  }\r\n\r\n  delete() {\r\n    this.grid.endCellEdit();\r\n    if (this.grid.selectedRow && this.grid.selectedRow.data) {\r\n      const i = this.listItems.findIndex(d => d.activityDefinitionId === this.grid.selectedRow.data.activityDefinitionId);\r\n      this.listItems.splice(i, 1);\r\n      this.grid.loadData(this.listItems);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.assignScope.deleteRow'));\r\n    }\r\n  }\r\n\r\n  moveUp() {\r\n    if (!this.curActivity) {\r\n      this.message.info(this.localePipe.transform('component.assignScope.curActivity'));\r\n      return;\r\n    }\r\n    const curCmpId: string = this.curActivity.activityDefinitionId;\r\n    const i = this.listItems.findIndex(c => c.activityDefinitionId === curCmpId);\r\n    if (i === 0) {\r\n      return;\r\n    }\r\n    this.swapArray(this.listItems, i, i - 1);\r\n\r\n    this.grid.loadData(this.listItems);\r\n    this.grid.selectRow(curCmpId, true);\r\n\r\n    // const selectedRow = this.grid.selectedRow;\r\n    // debugger;\r\n    // if (!selectedRow) {\r\n    //   this.message.info('尚未选中行');\r\n    //   return;\r\n    // }\r\n    // if (selectedRow.index === 0) {\r\n    //   return;\r\n    // }\r\n    // this.swapArray(this.items, selectedRow.index, selectedRow.index - 1);\r\n\r\n    // this.grid.loadData(this.items);\r\n    // this.grid.selectRow(selectedRow.id, true);\r\n  }\r\n\r\n  moveDown() {\r\n    if (!this.curActivity) {\r\n      this.message.info(this.localePipe.transform('component.assignScope.curActivity'));\r\n      return;\r\n    }\r\n    const curCmpId: string = this.curActivity.activityDefinitionId;\r\n    const i = this.listItems.findIndex(c => c.activityDefinitionId === curCmpId);\r\n    if (i === this.listItems.length - 1) {\r\n      return;\r\n    }\r\n    this.swapArray(this.listItems, i, i + 1);\r\n\r\n    this.grid.loadData(this.listItems);\r\n    this.grid.selectRow(curCmpId, true);\r\n\r\n\r\n    // const selectedRow = this.grid.selectedRow;\r\n    // if (!selectedRow) {\r\n    //   this.message.info('尚未选中行');\r\n    //   return;\r\n    // }\r\n    // if (selectedRow.index === this.items.length - 1) {\r\n    //   return;\r\n    // }\r\n    // this.swapArray(this.items, selectedRow.index, selectedRow.index + 1);\r\n\r\n    // this.grid.loadData(this.items);\r\n    // this.grid.selectRow(selectedRow.id, true);\r\n  }\r\n\r\n  selectionChange(data: any) {\r\n    this.curActivity = data.data;\r\n  }\r\n\r\n  private swapArray(arr: Array<any>, i1: number, i2: number): Array<any> {\r\n    arr[i1] = arr.splice(i2, 1, arr[i1])[0];\r\n    return arr;\r\n  }\r\n\r\n  clickOK() {\r\n    this.otherAssignActivityNodeInfos = new Array();\r\n    for (const item of this.listItems) {\r\n      this.otherAssignActivityNodeInfos.push(new OtherAssignActivityNodeInfo(\r\n        item.activityDefinitionId, item.condition, item.required));\r\n    }\r\n    const object = { value: this.otherAssignActivityNodeInfos, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  actionsSelect() {\r\n    const selections: any[] = this.actionsTable1.checkeds;\r\n    if (selections && selections.length > 0) {\r\n      selections.forEach(action => {\r\n        let item = new DisplayInfor(action.data.Name, action.data.Id);\r\n        const index = this.listItems.findIndex(act => act.activityDefinitionId === action.data.Id);\r\n        if (index > -1) {\r\n          this.listItems.splice(index, 1);\r\n        }\r\n        this.listItems.push(item);\r\n      });\r\n      this.grid.loadData(this.listItems);\r\n    }\r\n    // 2023-6-13 关闭前清空已选数据\r\n    this.actionsTable1.clearCheckeds(true);\r\n    this.actionsDialog1.close();\r\n  }\r\n\r\n  SelectCancel() {\r\n    // 2023-6-13 关闭前清空已选数据\r\n    this.actionsTable1.clearCheckeds(true);\r\n    this.actionsDialog1.close();\r\n  }\r\n\r\n  editConditon(e: any) {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        this.exprService.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.exprService.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.uistate.addContext(context);\r\n    if (this.uistate.subActivityContext.length > 0) {\r\n      for (const variable of this.uistate.subActivityContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (this.uistate.activityComponentContext.length > 0) {\r\n      for (const variable of this.uistate.activityComponentContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.exprService.addContext(v);\r\n      }\r\n    } \r\n    this.exprService.setEditPattern(ExprEditMode.Conditional);   \r\n    this.exprService.addExpressionText(e.instance.value);\r\n    this.exprService.buildExpression().then((cond: string) => {\r\n      e.formControl.setValue(cond);\r\n      e.instance.cd.detectChanges();\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.exprService.exprEntity.contextEntities = this.exprService.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport class AssignScopeConverter implements TypeConverter {\r\n  actList = new Array();\r\n  constructor(\r\n    private uistate: ProcessDesignerUIState,\r\n    private localePipe: WfLocalePipe\r\n    ) {\r\n    this.actList = [...this.uistate.userActList.filter(a => a.AssignmentStrategy === 'ASSIGN')];\r\n  }\r\n\r\n  convertTo(data): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform(\"component.assignScope.set\");\r\n    } else {\r\n      return this.localePipe.transform(\"component.assignScope.notSet\");\r\n    }\r\n\r\n  }\r\n}\r\n","export enum UserActivityPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    /**\r\n     * 参与者设置\r\n     */\r\n    ParticipantSchemes = 'ParticipantSchemes',\r\n    /**\r\n     * 参与者选项\r\n     */\r\n    ParticipantOptions = 'ParticipantOptions',\r\n    /**\r\n     * 审批项\r\n     */\r\n    ApprovalItems = 'ApprovalItems',\r\n    /**\r\n     * 分配策略\r\n     */\r\n    AssignStrategy = 'AssignStrategy',\r\n    /**\r\n     * 指派规则\r\n     */\r\n    OperatorConfig = 'OperatorConfig',\r\n    /**\r\n     * 完成策略\r\n     */\r\n    CompleteStrategy = 'CompleteStrategy',\r\n    /**\r\n     * 会签规则\r\n     */\r\n    SignRule = 'SignRule',\r\n    /**\r\n     * 多实例设置\r\n     */\r\n    MultiInstanceLoopCharacteristics = 'MultiInstanceLoopCharacteristics',\r\n    /**\r\n     * 允许取回\r\n     */\r\n    Retrievable = 'Retrievable',\r\n    /**\r\n     * 允许征询\r\n     */\r\n    AddSignFrontAble = 'AddSignFrontAble',\r\n    /**\r\n     * 允许加签\r\n     */\r\n    AddSignBehindAble = 'AddSignBehindAble',\r\n    /**\r\n     * 允许知会\r\n     */\r\n    NotifyAble = 'NotifyAble',\r\n    /**\r\n     * 表单定义\r\n     */\r\n    ExecuteForms = 'ExecuteForms',\r\n    /**\r\n     * 是否允许选择目标节点\r\n     */\r\n    SelectTargetAble = 'SelectTargetAble',\r\n    /**\r\n     * 跳转范围\r\n     */\r\n    JumpScope = 'JumpScope',\r\n    /**\r\n     * 驳回规则\r\n     */\r\n    BackWardRule = 'BackWardRule',\r\n    /**\r\n     * 活动构件\r\n     */\r\n    Tools = 'Tools',\r\n    /**\r\n     * 选择后续分支\r\n     */\r\n    SelectBranch = 'SelectBranch',\r\n    /**\r\n     * 活动标题\r\n     */\r\n    wf_TitleExpression = 'wf_TitleExpression',\r\n    /**\r\n     * 默认分支\r\n     */\r\n    Default = 'Default',\r\n    /**\r\n     * 移交范围\r\n     */\r\n    transferScope = 'transferScope',\r\n    /**\r\n     * 隐藏web端待办任务\r\n     */\r\n    DisplayTerminal = 'DisplayTerminal',\r\n    timeLimitControl = 'timeLimitControl',\r\n    anonymousSet = 'anonymousSet',\r\n    variableSettings = 'variableSettings',\r\n    messageNotice = 'messageNotice',\r\n    wf_ExecuteForms_PC = 'wf_ExecuteForms_PC',\r\n    wf_ExecuteForms_Mobile = 'wf_ExecuteForms_Mobile',\r\n    /**\r\n     * 审批要点\r\n     */\r\n    approvalPivotConfig = 'approvalPivotConfig',\r\n    urgeHandleRule = 'urgeHandleRule',\r\n    /**\r\n     * 影像设置\r\n     */\r\n    imageSettings = 'imageSettings',\r\n    checkConditions = 'checkConditions',\r\n    AssignPerformer = 'AssignPerformer',\r\n    wf_CustomizeAction = 'wf_CustomizeAction',\r\n    otherAssignNodes = 'otherAssignNodes',\r\n    otherAssignActivities = 'otherAssignActivities',\r\n    otherAssignActivityNodeInfos = 'OtherAssignActivityNodeInfos',\r\n    ConditionExpression = \"ConditionExpression\",\r\n    sendBackedTask = \"sendBackedTask\",\r\n    BizActivityID = \"BizActivityID\"\r\n}","import { ExtensionCompletionConditionRuler } from \"@edp-pmf/bpmn-model\";\r\n\r\n\r\nexport class MultiInstanceLoopCharacteristics {\r\n    static Clr_Type_ID = 'wf.MultiInstanceLoopCharacteristics';\r\n\r\n    readonly ClrTypeID: string = MultiInstanceLoopCharacteristics.Clr_Type_ID;\r\n\r\n    enable: boolean;\r\n    sequential: boolean;\r\n    loopCardinality: string;\r\n    completionCondition: string;\r\n    completionConditionRules: Array<ExtensionCompletionConditionRuler>;\r\n\r\n    constructor() {\r\n        this.enable = false;\r\n        this.sequential = false;\r\n        this.loopCardinality = null;\r\n        this.completionCondition = null;\r\n        this.completionConditionRules = new Array<ExtensionCompletionConditionRuler>();\r\n    }\r\n}","import { BpmnModel, Expression, ExtensionCompletionConditionRuler, MexExpression } from '@edp-pmf/bpmn-model';\r\nimport { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ComponentFactoryResolver, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ExpressionService, InjectedType} from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\nimport { MultiInstanceLoopCharacteristics } from './multi-instance-loop-characteristics.entity';\r\n// import { ExtensionCompletionConditionRuler } from './extension-completion-condition-ruler/extension-completion-condition-ruler.entity';\r\nimport { SignRuleComponent } from '../sign-rule/sign-rule.component';\r\nimport { Condition, CounterSignRule, SemanticExpression } from '@gsp-wf/wf-process-model';\r\n// import { SignRuleEntity } from '../sign-rule/entites/sign-rule.entity';\r\nimport { RTProcessInfo } from '../../model/rt-process-info';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { of } from 'rxjs';\r\nimport { ProcessTime } from '../../model/process-time';\r\n\r\n@Component({\r\n  selector: 'lib-multi-instance-loop-characteristics',\r\n  templateUrl: './multi-instance-loop-characteristics.component.html',\r\n  styleUrls: ['./multi-instance-loop-characteristics.component.css'],\r\n  providers: [\r\n    WfLocalePipe,\r\n ]\r\n})\r\nexport class MultiInstanceLoopCharacteristicsComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n\r\n  @Input() set value(v) {\r\n    this.loopCharacteristics = new MultiInstanceLoopCharacteristics();\r\n    if (v) {\r\n      this.loopCharacteristics.enable = v.enable;\r\n      this.loopCharacteristics.sequential = v.sequential;\r\n      this.preEnable = v.enable;\r\n      this.preSequential = v.sequential;\r\n      if(v.loopCardinality && (v.loopCardinality instanceof Expression) && ((v.loopCardinality).MexExpression)) {\r\n        this.loopCharacteristics.loopCardinality = ((v.loopCardinality).MexExpression as SemanticExpression).Value;\r\n        // this.loopCharacteristics.loopCardinality = this.peopleList;\r\n      }\r\n      if(v.completionConditionRules && v.completionConditionRules.length > 0) {\r\n        let signRuleEntityArray:ExtensionCompletionConditionRuler[] = new Array<CounterSignRule>();\r\n        for(let rule of v.completionConditionRules) {\r\n            let signRule = new CounterSignRule(this.bpmnModel);\r\n            signRule.ConclusionValue = rule.ConclusionValue;\r\n            signRule.CalculateType = rule.CalculateType;\r\n            signRule.ConditionValue = rule.ConditionValue;\r\n            signRule.WaitAllVotes = rule.WaitAllVotes;\r\n            if(!signRule.CompletionCondition) {\r\n              signRule.CompletionCondition = new Condition(this.bpmnModel);\r\n            }\r\n            signRule.CompletionCondition.Value = rule.CompletionCondition ? rule.CompletionCondition.Value : null;\r\n            signRuleEntityArray.push(signRule);\r\n        }\r\n        this.loopCharacteristics.completionConditionRules = signRuleEntityArray;\r\n      }\r\n    }\r\n  }\r\n  @Input() editorParams: any = {};\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('cell') cell: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  preEnable: boolean = false;\r\n\r\n  preSequential: boolean = false;\r\n\r\n  loopCharacteristics: MultiInstanceLoopCharacteristics = new MultiInstanceLoopCharacteristics();\r\n  \r\n  loopCharacteristicsTemp: MultiInstanceLoopCharacteristics = null;\r\n\r\n  // peopleList: string;\r\n\r\n  conditionRulesIsSet: string = this.localePipe.transform('multiInstanceLoopCharacteristics.conditionRulesSet');\r\n\r\n  promptAct: boolean;\r\n  \r\n  bpmnModel: BpmnModel = this.uistate.bpmnModel;\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('multiInstanceLoopCharacteristics.loopCharacteristics'),\r\n    width: 550,\r\n    height: 450,\r\n    showButtons: true\r\n  };\r\n\r\n  constructor(    \r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private uistate: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private http: HttpService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe) { \r\n      this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    }\r\n\r\n  ngOnInit() {\r\n    if(this.editorParams.location && this.editorParams.location == 'activity') {\r\n      this.promptAct = true;\r\n    }else {\r\n      this.promptAct = false;\r\n    }\r\n  }\r\n\r\n  loopCardinalityExpr(data: any){\r\n    this.showloopCardinalityHelp(data);\r\n  }\r\n\r\n  showloopCardinalityHelp(data: string){\r\n    this.showExpr();\r\n    if (this.loopCharacteristics.loopCardinality) {\r\n      this.expr.addExpressionText(this.loopCharacteristics.loopCardinality);\r\n    } else {\r\n      this.expr.addExpressionText('');\r\n    }\r\n    this.expr.buildExpression().then((expressionInfo: string) => {\r\n      // this.peopleList = expressionInfo;\r\n      this.loopCharacteristics.loopCardinality = expressionInfo;\r\n    });\r\n  }\r\n\r\n  showExpr(){\r\n    // this.expr.clearContext();\r\n    if (this.uistate.schemas.length > 0) {\r\n      for (const schema of this.uistate.schemas) {\r\n        // this.expr.addCommonObject(co);\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.uistate.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    const context = new Array();\r\n    if (this.uistate.procInstContext.length > 0) {\r\n      for (const variable of this.uistate.procInstContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (this.uistate.processVariableContext.length > 0) {\r\n      for (const variable of this.uistate.processVariableContext) {\r\n        if (!context.some(c => c.key === variable.key)) {\r\n          context.push(variable);\r\n        }\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n  }\r\n\r\n  isEnable(data: any) {\r\n    if(!data) {\r\n      this.loopCharacteristicsTemp = new MultiInstanceLoopCharacteristics();\r\n      this.loopCharacteristicsTemp.enable = true;\r\n      this.loopCharacteristicsTemp.sequential = this.loopCharacteristics.sequential;\r\n      this.loopCharacteristicsTemp.loopCardinality = this.loopCharacteristics.loopCardinality;\r\n      this.loopCharacteristicsTemp.completionConditionRules = new Array<CounterSignRule>();\r\n      if(this.loopCharacteristics && this.loopCharacteristics.completionConditionRules) {\r\n        this.loopCharacteristics.completionConditionRules.forEach(com => this.loopCharacteristicsTemp.completionConditionRules.push(com.clone() as any));\r\n      } \r\n      this.loopCharacteristics = new MultiInstanceLoopCharacteristics();\r\n    }else {\r\n      if(this.loopCharacteristicsTemp) {\r\n        this.loopCharacteristics.enable = true;\r\n        this.loopCharacteristics.sequential = this.loopCharacteristicsTemp.sequential;\r\n        this.loopCharacteristics.loopCardinality = this.loopCharacteristicsTemp.loopCardinality;\r\n        this.loopCharacteristics.completionConditionRules = new Array<CounterSignRule>();\r\n        if(this.loopCharacteristicsTemp.completionConditionRules) {\r\n          this.loopCharacteristicsTemp.completionConditionRules.forEach(com => this.loopCharacteristics.completionConditionRules.push(com.clone() as any));\r\n        }\r\n        this.loopCharacteristicsTemp = null;\r\n      }\r\n    }\r\n    this.validate(data);\r\n  }\r\n\r\n  validate(data: any) {\r\n    if(data == true) {\r\n      if(!this.loopCharacteristics.completionConditionRules || this.loopCharacteristics.completionConditionRules.length < 1) {\r\n        this.setCompletionConditionRules(this.loopCharacteristics.completionConditionRules);\r\n      }\r\n    }\r\n  }\r\n\r\n  setCompletionConditionRules(completionConditionRules: ExtensionCompletionConditionRuler[]) {\r\n    let dialog: any;\r\n    const compFactory = this.resolver.resolveComponentFactory(SignRuleComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.value1 = completionConditionRules;\r\n    // compRef.instance.data = this.loopCharacteristics.completionConditionRules;\r\n    compRef.instance.submitModal.subscribe((re: ExtensionCompletionConditionRuler[]) => {\r\n      this.loopCharacteristics.completionConditionRules = re;\r\n      dialog.close();\r\n    });\r\n    compRef.instance.closeModal.subscribe((re: any) => {\r\n      dialog.close();\r\n    });\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"multiInstanceLoopCharacteristics.completionConditionRules\"),\r\n      width: 800,\r\n      height: 515,\r\n      buttons: compRef.instance.modalFooter1,\r\n      showButtons: true\r\n    };\r\n    dialog = this.modalService.show(compRef, modalConfig);\r\n  }\r\n\r\n  clickOK() {\r\n    const object = { value: this.loopCharacteristics, parameters: null };\r\n    if(this.preEnable != this.loopCharacteristics.enable || this.preSequential != this.loopCharacteristics.sequential) {\r\n      const url = `/api/runtime/wf/v1.0/processInstances/runtimeActivityInstances?procDefId=${this.uistate.procDefId}&activityDefinitionId=${this.uistate.propertyData.Id}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n          if (this.uistate.time === ProcessTime.rt && re && re.length > 0) {\r\n            this.message.info(this.localePipe.transform('multiInstanceLoopCharacteristics.checkPrompt'));\r\n          }else {\r\n            this.submitModal.emit(object);\r\n          } \r\n        });\r\n    }else {\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n}\r\n\r\nexport class MultiInstanceLoopCharacteristicsConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && (data as MultiInstanceLoopCharacteristics).enable) {\r\n      return this.localePipe.transform('multiInstanceLoopCharacteristics.set');\r\n    }\r\n    return this.localePipe.transform('multiInstanceLoopCharacteristics.notSet');\r\n  }\r\n}\r\n","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ApprovalItemEntity } from '../views/approvel-items/entities/approval-item.entity';\r\nimport { PropertyEntity } from '@farris/ide-property-panel';\r\nimport { ElementPropertyConfig, KeyMap } from '@farris/ide-property-panel';\r\nimport { AssignPerformerConfigComponent, AssignConfigConverter } from '../views/assign-performer-config/assign-performer-config.component';\r\nimport { SignRuleComponent, SignRuleConverter } from '../views/sign-rule/sign-rule.component';\r\nimport { ApprovelItemsComponent, ApprovelItemsConverter } from '../views/approvel-items/approvel-items.component';\r\nimport { ExpressionEditorComponent, ExpressionEditorConverter } from '../views/expressionEditor/expression-editor.component';\r\nimport { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';\r\nimport { JumpScopeComponent, JumpScopeConverter } from '../views/jump-scope/jump-scope.component';\r\nimport { VarEntity } from '@gsp-svc/expression';\r\nimport { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BackWardRule } from '../views/backward-rule/backward-rule.entity';\r\nimport { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';\r\nimport { PerformerComponent, PerformerConverter } from '../views/performer/performer.component';\r\nimport { TitleExpressionComponent, TitleExpressionConverter } from '../views/title-expression/title-expression.component';\r\nimport { BsModalService, ModalOptions } from '@farris/ui-modal';\r\nimport { OrganizationPotentialOwnerComponent, OrganizationPotentialOwnerConverter } from '../views/organization-potential-owner/organization-potential-owner.component';\r\nimport { CustomizeActionComponent, CustomizeActionConverter } from '../views/customize-action/customize-action.component';\r\nimport { TimeLimitControlComponent, TimeLimitControlConverter } from '../views/time-limit-control/time-limit-control.component';\r\nimport { AnonymousSetComponent, AnonymousSetConverter } from '../views/anonymous-set/anonymous-set.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { ApprovalPivotComponent, ApprovalPivotConverter } from '../views/approval-pivot/approval-pivot.component';\r\nimport { UrgeHandleRuleComponent, UrgeHandleRuleConverter } from '../views/urge-handle-rule/urge-handle-rule.component';\r\nimport { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';\r\nimport { ImageSetComponent, ImageSetConverter } from '../views/image-set/image-set.component';\r\nimport { CheckConditionComponent, CheckConditionConverter } from '../views/check-condition/check-condition.component';\r\nimport { AssignStrategyComponent, AssignStrategyConverter } from '../views/assign-strategy/assign-strategy.component';\r\nimport { ParticipantComponent, ParticipantConverter } from '../views/participant/participant.component';\r\nimport { PerformerOptionsComponent, PerformerOptionsConverter } from '../views/performer/views/performer-options/performer-options.component';\r\nimport { AssignScopeComponent, AssignScopeConverter } from '../views/assign-scope/assign-scope.component';\r\nimport { UserActivityPropertyKeys } from '../designer/wf-cell/property-keys/UserActivityPropertyKeys';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { MultiInstanceLoopCharacteristicsComponent, MultiInstanceLoopCharacteristicsConverter } from '../views/multi-instance-loop-characteristics/multi-instance-loop-characteristics.component';\r\n@Injectable()\r\n\r\nexport class WFFlowElementsViewModel {\r\n\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    private message: MessagerService,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private localPipe: WfLocalePipe\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * 设置流程元素属性框\r\n   * @param obj\r\n   */\r\n  setFlowElementProperty(obj: any) {\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.propertyConfig = this.setFlowEleConfig(obj.propertyConfig);\r\n  }\r\n\r\n  private setFlowEleConfig(obj: any[]): ElementPropertyConfig[] {\r\n    const propertyConfig: ElementPropertyConfig[] = [];\r\n    if (obj) {\r\n      obj.forEach((element: ElementPropertyConfig) => {\r\n        this.setFlowEleEntity(element.properties);\r\n        propertyConfig.push(element);\r\n      });\r\n    }\r\n    return propertyConfig;\r\n  }\r\n\r\n  private setFlowEleEntity(obj: PropertyEntity[]) {\r\n    if (obj && obj.length > 0) {\r\n      obj.forEach((item: PropertyEntity) => {\r\n        switch (item.propertyID) {\r\n          case UserActivityPropertyKeys.Id: // 标识\r\n            break;\r\n          case UserActivityPropertyKeys.ConditionExpression:                  // 条件表达式\r\n            item.editor = ExpressionEditorComponent;\r\n            item.converter = new ExpressionEditorConverter(this.localPipe);\r\n            item.editorParams = {};\r\n            break;\r\n          case UserActivityPropertyKeys.wf_ExecuteForms_PC:                         // 开始活动的表单构件\r\n            item.editor = ExecuteFormsComponent;\r\n            const params = {\r\n              location: 'startActivity',\r\n              tab: 'web'\r\n            };\r\n            item.converter = new ExecuteFormsConverter(params, this.localPipe);\r\n            item.editorParams = params;\r\n            break;\r\n          case UserActivityPropertyKeys.wf_ExecuteForms_Mobile:                         // 开始活动的表单构件\r\n            item.editor = ExecuteFormsComponent;\r\n            const editorParams = {\r\n              location: 'startActivity',\r\n              tab: 'mobile'\r\n            };\r\n            item.converter = new ExecuteFormsConverter(editorParams, this.localPipe);\r\n            item.editorParams = editorParams\r\n            break;\r\n          case UserActivityPropertyKeys.sendBackedTask:                         // 开始活动的发送驳回任务\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case UserActivityPropertyKeys.SelectTargetAble: // 允许跳转\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case UserActivityPropertyKeys.JumpScope: // 跳转规则\r\n            item.editor = JumpScopeComponent;\r\n            item.converter = new JumpScopeConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.Default:                              // 默认分支\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case UserActivityPropertyKeys.otherAssignNodes:\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case UserActivityPropertyKeys.otherAssignActivityNodeInfos:\r\n            const assignScopeParams = {\r\n              location: 'startActivity',\r\n            };\r\n            item.editor = AssignScopeComponent;\r\n            item.converter = new AssignScopeConverter(this.uiState, this.localPipe);\r\n            item.editorParams = assignScopeParams;\r\n            break;\r\n          default:\r\n            item.editor = ExtendPropertyComponent;\r\n            item.converter = new ExtendPropertyConverter(this.localPipe);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置审批活动节点的属性框\r\n   * @param obj\r\n   */\r\n  setUserActivityProperty(obj: any, activityType: string) {\r\n    if (obj.propertyData.ApprovalItems) {\r\n      this.buildApprovalItems(obj.propertyData.ApprovalItems);\r\n      this.buildCounterSignVariables(obj.propertyData.ApprovalItems);\r\n      this.buildSignRules(obj.propertyData.SignRule); // 设置会签规则的结论名称\r\n    }\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.bizActivityId = obj.propertyData.BizActivityID;\r\n    this.uiState.propertyConfig = this.setUserActConfig(obj.propertyConfig, activityType);\r\n  }\r\n\r\n  private setUserActConfig(obj: any[], activityType: string): ElementPropertyConfig[] {\r\n    const propertyConfig: ElementPropertyConfig[] = [];\r\n    if (obj) {\r\n      obj.forEach((element: ElementPropertyConfig) => {\r\n        this.setUserActEntity(element.properties, activityType);\r\n        propertyConfig.push(element);\r\n      });\r\n    }\r\n    return propertyConfig;\r\n  }\r\n\r\n  private setUserActEntity(obj: PropertyEntity[], activityType: string) {\r\n    if (obj && obj.length > 0) {\r\n      obj.forEach((item: PropertyEntity) => {\r\n        switch (item.propertyID) {\r\n          case UserActivityPropertyKeys.Id: // 标识\r\n            break;\r\n          case UserActivityPropertyKeys.ParticipantSchemes: // 参与者\r\n            item.editor = ParticipantComponent;\r\n            item.converter = new ParticipantConverter(this.localPipe);\r\n            item.editorParams = {\r\n              nodeType: 'userActivity'\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.ParticipantOptions: // 参与者选项\r\n            item.editor = PerformerOptionsComponent;\r\n            item.converter = new PerformerOptionsConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: activityType\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.AssignPerformer:\r\n            item.editor = PerformerComponent;\r\n            item.converter = new PerformerConverter();\r\n            item.editorParams = {\r\n              nodeType: 'userActivity',\r\n              type: 'assignPerformer'\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.wf_ExecuteForms_PC: // 表单定义\r\n            item.editor = ExecuteFormsComponent;\r\n            const params = {\r\n              location: 'userActivity',\r\n              tab: 'web'\r\n            };\r\n            item.converter = new ExecuteFormsConverter(params, this.localPipe);\r\n            item.editorParams = params;\r\n            break;\r\n          case UserActivityPropertyKeys.wf_ExecuteForms_Mobile: // 表单定义\r\n            item.editor = ExecuteFormsComponent;\r\n            const editorParams = {\r\n              location: 'userActivity',\r\n              tab: 'mobile'\r\n            };\r\n            item.converter = new ExecuteFormsConverter(editorParams, this.localPipe);\r\n            item.editorParams = editorParams;\r\n            break;\r\n          case UserActivityPropertyKeys.AssignStrategy: // 分配策略\r\n            item.editor = AssignStrategyComponent;\r\n            item.converter = new AssignStrategyConverter(this.localPipe);\r\n            break;\r\n          // case UserActivityPropertyKeys.OperatorConfig: // 指派规则\r\n          //   item.editor = AssignPerformerConfigComponent;\r\n          //   item.converter = new AssignConfigConverter();\r\n          //   break;\r\n          case UserActivityPropertyKeys.CompleteStrategy: // 完成策略\r\n            if (this.uiState.propertyData.AssignStrategy === this.uiState.assignIterator[2].key) {\r\n              item.iterator = this.uiState.completeIterator4Claim; // 分配策略为领用时，完成策略只能是抢占模式\r\n            } else {\r\n              item.iterator = this.uiState.completeIterator;\r\n            }\r\n            break;\r\n          case UserActivityPropertyKeys.SignRule: // 会签规则\r\n            item.editor = SignRuleComponent;\r\n            item.converter = new SignRuleConverter(this.localPipe);\r\n            item.editorParams = {\r\n              variables: this.uiState.counterSignVariables,\r\n              approvalItems: this.uiState.approvalItems,\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.ApprovalItems: // 审批项\r\n            item.editor = ApprovelItemsComponent;\r\n            item.converter = new ApprovelItemsConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.Retrievable: // 允许取回\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case UserActivityPropertyKeys.AddSignFrontAble: // 允许征询\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter(this.localPipe);\r\n            item.editorParams = {\r\n              nodeType: 'userActivity',\r\n              tabId : 'approvalProperty',\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.AddSignBehindAble: // 允许加签\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter(this.localPipe);\r\n            item.editorParams = {\r\n              nodeType: 'userActivity',\r\n              tabId : 'approvalProperty',\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.NotifyAble: // 允许知会\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter(this.localPipe);\r\n            item.editorParams = {\r\n              nodeType: 'userActivity',\r\n              tabId : 'approvalProperty',\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.transferScope: // 移交范围\r\n            item.editor = OrganizationPotentialOwnerComponent;\r\n            item.converter = new OrganizationPotentialOwnerConverter(this.localPipe);\r\n            item.editorParams = {\r\n              nodeType: 'userActivity',\r\n              tabId : 'approvalProperty',\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.SelectBranch:  // 允许指定后续分支\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case UserActivityPropertyKeys.SelectTargetAble: // 允许跳转\r\n            if (this.uiState.propertyData.CompleteStrategy\r\n              && this.uiState.propertyData.CompleteStrategy !== this.uiState.completeIterator[0].key) {\r\n              item.iterator = this.uiState.noJump4Sign;\r\n            } else {\r\n              item.iterator = this.uiState.boolIterator;\r\n            }\r\n            break;\r\n          case UserActivityPropertyKeys.JumpScope: // 跳转规则\r\n            item.editor = JumpScopeComponent;\r\n            item.converter = new JumpScopeConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.BackWardRule: // 驳回规则\r\n            item.editor = BackwardRuleComponent;\r\n            item.converter = new BackwardRuleConverter(this.localPipe);\r\n            item.editorParams = {\r\n              nodeType: 'UserActivity'\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.wf_TitleExpression:\r\n            item.editor = TitleExpressionComponent;\r\n            item.converter = new TitleExpressionConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.Tools: // 活动构件\r\n            item.editor = ActivityComponentComponent;\r\n            item.converter = new ActivityComponentConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'activity'\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.wf_CustomizeAction: // 活动构件\r\n            item.editor = CustomizeActionComponent;\r\n            item.converter = new CustomizeActionConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.timeLimitControl: // 超时预警\r\n            item.editor = TimeLimitControlComponent;\r\n            item.converter = new TimeLimitControlConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'activity'\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.MultiInstanceLoopCharacteristics: // 多实例\r\n            item.editor = MultiInstanceLoopCharacteristicsComponent;\r\n            item.converter = new MultiInstanceLoopCharacteristicsConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'activity'\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.anonymousSet: // 匿名设置\r\n            item.editor = AnonymousSetComponent;\r\n            item.converter = new AnonymousSetConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.variableSettings: // 变量设置\r\n            item.editor = VariableSettingComponent;\r\n            item.converter = new VariableSettingConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.messageNotice: // 消息通知\r\n            item.editor = MessageNoticeComponent;\r\n            item.converter = new MessageNoticeConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'activity'\r\n            };\r\n            break;\r\n          case UserActivityPropertyKeys.approvalPivotConfig: // 审批要点\r\n            item.editor = ApprovalPivotComponent;\r\n            item.converter = new ApprovalPivotConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.DisplayTerminal: // 显示终端\r\n            item.iterator = this.uiState.displayTerminal;\r\n            break;\r\n          case UserActivityPropertyKeys.urgeHandleRule: // 显示终端\r\n            item.editor = UrgeHandleRuleComponent;\r\n            item.converter = new UrgeHandleRuleConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.imageSettings: // 影像设置\r\n            item.editor = ImageSetComponent;\r\n            item.converter = new ImageSetConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.checkConditions:\r\n            item.editor = CheckConditionComponent;\r\n            item.converter = new CheckConditionConverter(this.localPipe);\r\n            break;\r\n          case UserActivityPropertyKeys.otherAssignNodes:\r\n            item.iterator = this.uiState.boolIterator;\r\n            break;\r\n          case UserActivityPropertyKeys.otherAssignActivities:\r\n          case UserActivityPropertyKeys.otherAssignActivityNodeInfos:\r\n            item.editor = AssignScopeComponent;\r\n            const assignScopeParams = {\r\n              location: 'userActivity',\r\n            };\r\n            item.editorParams = assignScopeParams;\r\n            item.converter = new AssignScopeConverter(this.uiState, this.localPipe);\r\n            break;\r\n          default:\r\n            item.editor = ExtendPropertyComponent;\r\n            item.converter = new ExtendPropertyConverter(this.localPipe);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建会签规则变量\r\n   */\r\n  buildCounterSignVariables(conclusions: any[]) {\r\n    this.uiState.counterSignVariables = [];\r\n    this.uiState.counterSignVariables = this.uiState.counterSignVariables.concat([{\r\n      key: 'nrOfInstances',\r\n      name: '总任务数',\r\n      description: '总任务数'\r\n    }, {\r\n      key: 'nrOfCompletedInstances',\r\n      name: '已完成任务数',\r\n      description: '已完成任务数'\r\n    }\r\n    ]);\r\n    if (conclusions && conclusions.length > 0) {\r\n      for (const conclusion of conclusions) {\r\n        const variable = new VarEntity();\r\n        variable.key = `nrOf${conclusion.Value}`;\r\n        variable.name = `${conclusion.Text}_任务数`;\r\n        variable.description = `${conclusion.Text}_任务数`;\r\n        this.uiState.counterSignVariables.push(variable);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建自定义项\r\n   * @param conclusions\r\n   */\r\n  buildApprovalItems(conclusions: any[]) {\r\n    this.uiState.approvalItems = [];\r\n    if (conclusions && conclusions.length > 0) {\r\n      for (const item of conclusions) {\r\n        const conclusion = new ApprovalItemEntity();\r\n        conclusion.value = item.Value;\r\n        conclusion.text = item.Text;\r\n        conclusion.workFlowAction = item.WorkFlowAction;\r\n        conclusion.isDefault = item.IsDefault;\r\n        this.uiState.approvalItems.push(conclusion);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 会签规则绑定审批项名称\r\n   * @param signRules 会签规则\r\n   */\r\n  private buildSignRules(signRules: any[]) {\r\n    if (signRules && signRules.length > 0) {\r\n      // let info = false;\r\n      for (const signRule of signRules) {\r\n        const approvalItem: ApprovalItemEntity = this.uiState.approvalItems.find(item => item.value === signRule.ConclusionValue);\r\n        if (!approvalItem) {\r\n          // if (!info) {\r\n          //   this.message.info('审批项发生改变，请调整会签规则！');\r\n          //   info = true;\r\n          // }\r\n          signRule.ConclusionName = '已删除';\r\n        } else {\r\n          signRule.ConclusionName = approvalItem.text;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, TemplateRef, Injector, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LookupGridComponent, ServerSideToken } from '@farris/ui-lookup';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { LookupDataService } from '@farris/lookup-config';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'app-save-as-edit',\r\n  templateUrl: './save-as-edit.component.html',\r\n  styleUrls: ['./save-as-edit.component.scss'],\r\n  providers: [\r\n    { provide: ServerSideToken, useClass: LookupDataService },\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class SaveAsEditComponent implements OnInit {\r\n\r\n  @ViewChild('buttonRef') btnRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  procName: string;\r\n  @Input()\r\n  procKey: string;\r\n\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n\r\n  @Output() submit = new EventEmitter<any>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  accessLevel = 'public';\r\n  organization;\r\n  organizationName;\r\n\r\n  isAdministratorConfig = false;\r\n  enableAdminOrgAut = false;\r\n\r\n  administrator: any;\r\n  dataUri = '/api/runtime/sys/v1.0/sysOrgs';\r\n\r\n  loadType = 'layerload';\r\n\r\n  disabled = false;\r\n\r\n  // private _organizations: any[];\r\n  // set organizations(data: any[]) {\r\n  //   this._organizations = data;\r\n  //   if (this._organizations && this._organizations.length > 0) {\r\n  //     this.items = this.makeTreeByParent(this._organizations, 'parentId', 'id');\r\n  //   } else {\r\n  //     this.items = new Array();\r\n  //   }\r\n  // }\r\n  // get organizations() {\r\n  //   return this._organizations;\r\n  // }\r\n  items = new Array();\r\n\r\n  accessLevelCollection = [\r\n    { value: 'public', text: this.localePipe.transform('component.saveAsEdit.public') },\r\n    { value: 'private', text: this.localePipe.transform('component.saveAsEdit.private') }\r\n  ];\r\n\r\n  columns = [\r\n    { title: this.localePipe.transform('component.saveAsEdit.code'), field: 'code', width: '100', searchField: 'code' },\r\n    { title: this.localePipe.transform('component.saveAsEdit.name'), field: 'name', width: '100', searchField: 'name' },\r\n  ];\r\n\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private http: HttpService,\r\n    private message: MessagerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  saveAsOK() {\r\n    this.disabled = true;\r\n    if (this.validator()) {\r\n      this.submit.next({\r\n        procName: this.procName,\r\n        accessLevel: this.accessLevel,\r\n        organization: this.organization,\r\n        organizationName: this.organizationName\r\n      });\r\n    }\r\n  }\r\n  saveAsCancel() {\r\n    this.cancel.emit();\r\n  }\r\n\r\n  validator() {\r\n    if (!this.procName) {\r\n      this.message.warning(this.localePipe.transform('component.saveAsEdit.nameNotEmpty'));\r\n      this.disabled = false;\r\n      return false;\r\n    }\r\n    if (!this.organization) {\r\n      this.message.warning(this.localePipe.transform('component.saveAsEdit.organizationNotEmpty'));\r\n      this.disabled = false;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  search(data: any) {\r\n    const tt = this.lookUp.componentRef.instance as TreeTableComponent;\r\n    tt.searchHandle.search(data.field, data.value, 'client');\r\n  }\r\n\r\n  dictPicking = (data: any) => {\r\n    this.lookUp.http = {\r\n      getData: (uri, params) => {\r\n        console.log(params);\r\n        const searchValue = JSON.parse(params.searchValue);\r\n        const parent = searchValue.parentId;\r\n        let param;\r\n\r\n        if (this.lookUp._searchState && this.lookUp._searchState.field && this.lookUp._searchState.value) {\r\n          if (this.lookUp._searchState.field === '*') {\r\n            param = { codeOrName: this.lookUp._searchState.value };\r\n          } else if (this.lookUp._searchState.field === 'name') {\r\n            param = { name: this.lookUp._searchState.value };\r\n          } else {\r\n            param = { code: this.lookUp._searchState.value };\r\n          }\r\n        }\r\n        let filter;\r\n        if (this.isAdministratorConfig) {\r\n          filter = this.administrator.administratorAuthorities.map(a => ({\r\n            id: a.organization, rule: a.includeSubordinate ? 'SelectedAndChild' : 'Selected'\r\n          }));\r\n        }\r\n        return this.getSysOrgs(parent, param, filter).pipe(\r\n          switchMap((re: any) => {\r\n            console.log(re);\r\n            return of({\r\n              columns: this.columns,\r\n              displayInfo: { idField: 'id', valueField: 'id', textField: 'name' },\r\n              displayType: 'TreeList',\r\n              idField: 'id',\r\n              valueField: 'id',\r\n              textField: 'name',\r\n              searchFields: [\r\n                { label: 'code', value: 'code' }, { label: 'name', value: 'name' }\r\n              ],\r\n              title: this.localePipe.transform('component.saveAsEdit.organization'),\r\n              total: 0,\r\n              treeInfo: {\r\n                dataField: 'treeinfo',\r\n                isDetailField: 'isDetail',\r\n                layerField: 'layer',\r\n                layerType: 'parentId',\r\n                loadDataType: 'async',\r\n                onlySelectLeaf: false,\r\n                parentField: 'parentElement',\r\n                pathField: 'path',\r\n                treeDataIsInit: true\r\n              },\r\n              items: this.orgTreeData(re, param)\r\n            } as any);\r\n          })\r\n        );\r\n      }\r\n    };\r\n    return of(true);\r\n  }\r\n\r\n  dictPicked = (data: any) => {\r\n    this.organizationName = data.name;\r\n    this.organization = data.id;\r\n    return of(true);\r\n  }\r\n\r\n  selectedDataHandler(data) {\r\n    this.organization = data.id;\r\n    this.organizationName = data.name;\r\n  }\r\n\r\n  private orgTreeData(orgs: any[], searchValue: any) {\r\n    const result = new Array();\r\n    const treeData = new Array();\r\n    for (const org of orgs) {\r\n      const entity: any = {};\r\n      entity.data = org;\r\n      entity.children = [];\r\n      entity.id = org.id;\r\n      entity.leaf = org.isDetail;\r\n      entity.selectable = org.farris_selectable;\r\n\r\n      treeData.push(entity);\r\n    }\r\n\r\n    const obj = {}; // 使用对象重新存储数据\r\n    const len = treeData.length;\r\n    for (let i = 0; i < len; i++) {\r\n      const d = treeData[i];\r\n      obj[treeData[i].id] = treeData[i];\r\n    }\r\n    // 遍历数据\r\n    for (let j = 0; j < len; j++) {\r\n      const data = treeData[j];\r\n\r\n      const parentData = obj[data.data.parentId];\r\n\r\n      if (parentData) {\r\n        if (!parentData.children) {\r\n          parentData.children = new Array();\r\n        }\r\n        parentData.children.push(data);\r\n      } else {\r\n        result.push(data);\r\n      }\r\n    }\r\n    // 过滤的情况下，不包含下级的节点设置为叶子节点\r\n    if (searchValue) {\r\n      this.treeIterator(result);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private treeIterator(treeData: any[]) {\r\n    if (treeData && treeData.length > 0) {\r\n      for (const d of treeData) {\r\n        if (d.children && d.children.length > 0) {\r\n          this.treeIterator(d.children);\r\n        } else {\r\n          d.leaf = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private findChild(item, orgs) {\r\n    const childList = orgs.filter(childitem => {\r\n      if (childitem.parentId === item.id) {\r\n        return true;\r\n      }\r\n    });\r\n    if (childList && childList.length > 0) {\r\n      childList.forEach(child => {\r\n        const childEntity: any = {};\r\n        childEntity.data = child;\r\n        childEntity.children = [];\r\n        childEntity.id = child.id;\r\n        childEntity.leaf = child.isDetail;\r\n        childEntity.selectable = child.farris_selectable;\r\n        item.children.push(childEntity);\r\n        this.findChild(childEntity, orgs);\r\n      });\r\n    }\r\n  }\r\n\r\n  /** 按照parent码构造树 */\r\n  private makeTreeByParent(datas: any[], parentField: string, keyField: string): any[] {\r\n    // 上級爲空，或者沒有上級的\r\n    const pathLayerOnes = datas.filter(x => {\r\n      if (!x[parentField]) {\r\n        return true;\r\n      }\r\n      const p = datas.find(parent => parent[keyField] === x[parentField]);\r\n      if (!p) {\r\n        return true;\r\n      }\r\n    });\r\n    const treedata = [];\r\n    pathLayerOnes.forEach(x => {\r\n      const entity: any = {};\r\n      entity.data = x;\r\n      entity.children = [];\r\n      treedata.push(entity);\r\n      // this.root = x['id'];\r\n    });\r\n    treedata.forEach(item => {\r\n      this.findChildrenByParent(item, datas, parentField, keyField);\r\n    }\r\n    );\r\n    return treedata;\r\n  }\r\n\r\n  /** 找到子节点 */\r\n  private findChildrenByParent(parent: any, datas: any[], parentField: string, keyField: string) {\r\n    const childList = datas.filter(childitem => {\r\n      if (childitem[parentField] === parent.data[keyField]) {\r\n        return true;\r\n      }\r\n    });\r\n    if (childList && childList.length > 0) {\r\n      childList.forEach(child => {\r\n        const childEntity: any = {};\r\n        childEntity.data = child;\r\n        childEntity.children = [];\r\n        parent.children.push(childEntity);\r\n        this.findChildrenByParent(childEntity, datas, parentField, keyField);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  private getSysOrgs(parent: string, searchValue: any, filter: any[]): Observable<any> {\r\n    let url = `/api/runtime/sys/v1.0/sysOrgs`;\r\n    let param;\r\n    if (searchValue) {\r\n        param = Object.assign(searchValue, {\r\n            IsSearchTree: true,\r\n            withPermission: true,\r\n            ruleFilter: filter\r\n        });\r\n    } else {\r\n        if (parent) {\r\n            param = Object.assign({}, {\r\n                parentId: parent,\r\n                withPermission: true,\r\n                ruleFilter: filter\r\n            });\r\n        } else {\r\n            param = Object.assign({}, {\r\n                parentId: '',\r\n                layer: 1,\r\n                withPermission: true,\r\n                ruleFilter: filter\r\n            });\r\n        }\r\n    }\r\n    url += `?param=${JSON.stringify(param)}`;\r\n\r\n    return this.http.get(url);\r\n}\r\n}\r\n","export enum BillSourceType {\r\n    InheritParent = 'SameWithParent',\r\n    VariablesExpression = 'VariablesExpression',\r\n    AutoCreation = 'AutoGenerateDownBill',\r\n}","export enum SubProcessType {\r\n    Dynamic = \"Dynamic\",\r\n    Specified = \"Specified\",\r\n}","import { BillSourceType } from \"./BillSourceType\";\r\nimport { SubProcessType } from \"./SubProcessType\";\r\n\r\nexport class CallActivitySubProcess {\r\n    calledBizDefKey: string;\r\n    calledBizDefName: string;\r\n    calledElement: string;\r\n    calledElementName: string;\r\n    bizDataId: string;\r\n    inheritVariables: boolean;\r\n    inheritBizDataId: boolean;\r\n    useAutoCreationData: boolean;\r\n    aifProcessCode: string;\r\n    aifProcessName: string;\r\n    subProcessType: SubProcessType = SubProcessType.Specified;\r\n    billSourceType: BillSourceType = BillSourceType.InheritParent;\r\n}\r\n","export class BifMonitorConstant {\r\n    static readonly bifMonitorAppId: string = \"BillIntegrationFrameworkRT\";\r\n    static readonly bifManagerAppEntrance: string = \"bif-manager\";\r\n    \r\n    static readonly bifDiagnostorFuncId: string = \"BifDiagnostor\";\r\n    static readonly bifManagerFuncId: string = \"BifManager\";\r\n}\r\n\r\n","export enum BifMetadataType {\r\n    BifCreationProcess = \"BifCreationProcess\",\r\n    BifWritebackProcess = \"BifWritebackProcess\",\r\n}","import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { BifMetadataType } from './BifMetadataType';\r\nimport { IShowEntity } from './IShowEntity';\r\n\r\nexport abstract class AbstractShowEntity extends JsonConvertableImpl implements IShowEntity {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    upBillVoName: string;\r\n    downBillVoName: string;\r\n    bifMetadataType: BifMetadataType;\r\n    lastModifiedTime: Date;\r\n    parentId: string;\r\n    sysInit: boolean = false;\r\n    originId: string;\r\n    rootId: string;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.id = null;\r\n        this.code = null;\r\n        this.name = null;\r\n        this.upBillVoName = null;\r\n        this.downBillVoName = null;\r\n        this.parentId = null;\r\n        this.bifMetadataType = null;\r\n        this.lastModifiedTime = null;\r\n        this.sysInit = false;\r\n        this.originId = null;\r\n        this.rootId = null;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"id\", this.id);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"code\", this.code);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"name\", this.name);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"upBillVoName\", this.upBillVoName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"downBillVoName\", this.downBillVoName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"parentId\", this.parentId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"bifMetadataType\", this.bifMetadataType);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"lastModifiedTime\", this.lastModifiedTime);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"sysInit\", this.sysInit);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"originId\", this.originId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"rootId\", this.rootId);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.id = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"id\");\r\n        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"code\");\r\n        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"name\");\r\n        this.upBillVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"upBillVoName\");\r\n        this.downBillVoName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"downBillVoName\");\r\n        this.parentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"parentId\");\r\n        this.bifMetadataType = BifMetadataType[BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"bifMetadataType\")];\r\n        this.lastModifiedTime = BpmnModelJsonHelper.GetAttributeValueAsDateTime(obj, \"lastModifiedTime\");\r\n        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"sysInit\");\r\n        this.originId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"originId\");\r\n        this.rootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"rootId\");\r\n    }\r\n}","import { BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { IRtShowEntity } from './IRtShowEntity';\r\nimport { AbstractShowEntity } from './AbstractShowEntity';\r\n\r\nexport class RtShowEntity extends AbstractShowEntity implements IRtShowEntity {\r\n    isEnabled: boolean;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.isEnabled = false;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"isEnabled\", this.isEnabled);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"isEnabled\");\r\n    }\r\n}","import { BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { RtShowEntity } from './RtShowEntity';\r\n\r\nexport class RtShowEntitiesWithCustomization extends RtShowEntity {\r\n    isEnabled: boolean;\r\n    customizationEntities: Array<RtShowEntitiesWithCustomization> = new Array();\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.isEnabled = false;\r\n        this.customizationEntities.length = 0;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"isEnabled\", this.isEnabled);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"customizationEntities\", this.customizationEntities);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, \"isEnabled\");\r\n        this.customizationEntities = BpmnModelJsonHelper.GetAttributeValueAsList(obj, \"customizationEntities\", RtShowEntitiesWithCustomization);\r\n    }\r\n\r\n    protected getTClass() {\r\n        return RtShowEntitiesWithCustomization;\r\n    }\r\n}","import { JsonConvertableImpl, BpmnModelJsonHelper } from '@edp-bif/common-api';\r\nimport { RtShowEntitiesWithCustomization } from './RtShowEntitiesWithCustomization';\r\n\r\nexport class RtBillProcessListResult extends JsonConvertableImpl {\r\n    totalCount: number;\r\n    pageCount: number;\r\n    pageIndex: number;\r\n    pageSize: number;\r\n\r\n    entities: Array<RtShowEntitiesWithCustomization> = new Array();\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.totalCount = 0;\r\n        this.pageCount = 0;\r\n        this.pageIndex = 0;\r\n        this.pageSize = 0;\r\n        this.entities.length = 0;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"totalCount\", this.totalCount);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageCount\", this.pageCount);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageIndex\", this.pageIndex);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageSize\", this.pageSize);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"entities\", this.entities);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.totalCount = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"totalCount\");\r\n        this.pageCount = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageCount\");\r\n        this.pageIndex = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageIndex\");\r\n        this.pageSize = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageSize\");\r\n        this.entities = BpmnModelJsonHelper.GetAttributeValueAsList(obj, \"entities\", RtShowEntitiesWithCustomization);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppOptions, FrameworkService, AppService } from '@gsp-sys/rtf-common';\r\nimport { IRtShowEntity } from '../entity/IRtShowEntity';\r\nimport { BifMonitorConstant } from '../entity/BifMonitorConstant';\r\nimport { ProcessFilterConditionArgs } from '../entity/ProcessFilterConditionArgs';\r\nimport { RtBillProcessListResult } from '../entity/RtBillProcessListResult';\r\nimport { RtShowEntity } from '../entity/RtShowEntity';\r\n\r\n@Injectable()\r\nexport class ProcessListHelpService {\r\n  private readonly baseUrl = \"/api/runtime/aif/v1.0/rtbillprocess\";\r\n\r\n  constructor(\r\n    private appService: AppService,\r\n    private frameworkService: FrameworkService,\r\n    private httpService: HttpService,\r\n  ) {\r\n  }\r\n\r\n  public openBifManagerApp(entity: IRtShowEntity) {\r\n    const map = new Map();\r\n    map.set(\"id\", entity.id);\r\n    map.set(\"type\", entity.bifMetadataType);\r\n    map.set(\"srcFuncId\", BifMonitorConstant.bifDiagnostorFuncId);\r\n    const opt: AppOptions = {\r\n      funcId: BifMonitorConstant.bifManagerFuncId,\r\n      appId: BifMonitorConstant.bifMonitorAppId,\r\n      appEntrance: BifMonitorConstant.bifManagerAppEntrance,\r\n      appType: \"menu\",\r\n      entityParams: {},\r\n      queryStringParams: map,\r\n      tabId: entity.id,\r\n      tabName: entity.name\r\n    };\r\n    this.frameworkService.openMenu(opt);\r\n  }\r\n\r\n  public getDatagridData(args: ProcessFilterConditionArgs): Observable<RtBillProcessListResult> {\r\n    const body = args.ConvertToJson();\r\n    let data$: Observable<any> = null;\r\n    //有业务种类参数时不分页\r\n    if (args.bizType != null) {\r\n      data$ = this.httpService.post(`${this.baseUrl}/getpatch`, body);\r\n      return data$.pipe(\r\n        map(\r\n          (res: any) => {\r\n            const listRes = new RtBillProcessListResult();\r\n            listRes.entities = res.map(elt => {\r\n              const e = new RtShowEntity();\r\n              e.LoadFromJsonObject(elt);\r\n              return e;\r\n            });\r\n            return listRes;\r\n          }\r\n        )\r\n      );\r\n    } else {\r\n      data$ = this.httpService.post(`${this.baseUrl}/getpagedpatch`, body);\r\n      return data$.pipe(\r\n        map(\r\n          (res: any) => {\r\n            const listRes = new RtBillProcessListResult();\r\n            listRes.LoadFromJsonObject(res);\r\n            return listRes;\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据流程编号查询流程名称\r\n   * @param code\r\n   * @returns\r\n   */\r\n  public getProcessNameByCode(code: string): Observable<any> {\r\n    return this.httpService.request(\"GET\", `/api/runtime/aif/v1.0/rtbillcreationprocess/getname/${code}`, { responseType: 'text' });\r\n  }\r\n}\r\n","import { BpmnModelJsonHelper, JsonConvertableImpl, TextValue } from '@edp-bif/common-api';\r\n\r\nexport class ProcessFilterConditionArgs extends JsonConvertableImpl {\r\n    name: TextValue;\r\n    upBillVoId: TextValue;\r\n    downBillVoId: TextValue;\r\n    isEnabled: TextValue;\r\n    billProcessType: TextValue;\r\n    sysInit: TextValue;\r\n    bizType: TextValue;\r\n    orderByCode: TextValue;\r\n    orderByName: TextValue;\r\n    OrderByLastModifiedTime: TextValue;\r\n    pageSize: number;\r\n    pageIndex: number;\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.name = null;\r\n        this.upBillVoId = null;\r\n        this.downBillVoId = null;\r\n        this.isEnabled = null;\r\n        this.billProcessType = null;\r\n        this.sysInit = null;\r\n        this.bizType = null;\r\n        this.orderByCode = null;\r\n        this.orderByName = null;\r\n        this.OrderByLastModifiedTime = null;\r\n        this.pageSize = 0;\r\n        this.pageIndex = 0;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"name\", this.name);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"upBillVoId\", this.upBillVoId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"downBillVoId\", this.downBillVoId);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"isEnabled\", this.isEnabled);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"billProcessType\", this.billProcessType);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"sysInit\", this.sysInit);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"bizType\", this.bizType);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"orderByCode\", this.orderByCode);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"orderByName\", this.orderByName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"OrderByLastModifiedTime\", this.OrderByLastModifiedTime);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageSize\", this.pageSize);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"pageIndex\", this.pageIndex);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.name = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"name\", TextValue);\r\n        this.upBillVoId = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"upBillVoId\", TextValue);\r\n        this.downBillVoId = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"downBillVoId\", TextValue);\r\n        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"isEnabled\", TextValue);\r\n        this.billProcessType = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"billProcessType\", TextValue);\r\n        this.sysInit = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"sysInit\", TextValue);\r\n        this.bizType = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"bizType\", TextValue);\r\n        this.orderByCode = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"orderByCode\", TextValue);\r\n        this.orderByName = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"orderByName\", TextValue);\r\n        this.OrderByLastModifiedTime = BpmnModelJsonHelper.GetAttributeValueAsJsonSerializable(obj, \"OrderByLastModifiedTime\", TextValue);\r\n        this.pageSize = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageSize\");\r\n        this.pageIndex = BpmnModelJsonHelper.GetAttributeValueAsNumber(obj, \"pageIndex\");\r\n    }\r\n}\r\n","export enum OrderByDirection {\r\n    Asc = \"Asc\",\r\n    Desc = \"Desc\",\r\n}","export const AIF_PROCESS_LIST_HELP_LANG_RESOURCES = {\r\n  \"zh-CHS\": {\r\n    \"code\": \"编号\",\r\n    \"name\": \"名称\",\r\n    \"lastModifiedTime\": \"最后修改时间\",\r\n    \"upBill\": \"上游单据\",\r\n    \"downBill\": \"下游单据\",\r\n    \"processName\": \"流程名称\",\r\n    \"processType\": \"流程类型\",\r\n    \"creation\": \"生单\",\r\n    \"writeback\": \"回写\",\r\n    \"enabledState\": \"启用状态\",\r\n    \"sysInit\": \"系统预置\",\r\n    \"filter\": \"筛选\",\r\n    \"all\": \"全部\",\r\n    \"enabled\": \"已启用\",\r\n    \"disabled\": \"已禁用\",\r\n    \"yes\": \"是\",\r\n    \"no\": \"否\",\r\n    \"billSelector\": \"单据选择\",\r\n    \"querySolution\": \"筛选方案\",\r\n    \"collapse\": \"收起\",\r\n    \"expand\": \"展开\",\r\n    \"loading\": \"加载中\",\r\n    \"pleaseSelectNonVirtualVO\": \"请选择非虚拟VO\",\r\n    \"pleaseSelectOneItemOnly\": \"请选中一条数据\",\r\n    \"isExtendProcess\": \"扩展流程\",\r\n    \"creationProcess\": \"生单流程\",\r\n    \"clickCancel\": \"取消\",\r\n    \"clickOk\": \"确定\",\r\n    \"set\": \"（已设置）\",\r\n    \"notSet\": \"（未设置）\",\r\n    \"setProcess\": \"已设置：\",\r\n  },\r\n  \"en\": {\r\n    \"code\": \"Code\",\r\n    \"name\": \"Name\",\r\n    \"lastModifiedTime\": \"Last Modified Time\",\r\n    \"upBill\": \"Upstream Bill\",\r\n    \"downBill\": \"Downstream Bill\",\r\n    \"processName\": \"Process Name\",\r\n    \"processType\": \"Process Type\",\r\n    \"creation\": \"Creation\",\r\n    \"writeback\": \"Writeback\",\r\n    \"enabledState\": \"Enabled State\",\r\n    \"sysInit\": \"System Init\",\r\n    \"filter\": \"Filter\",\r\n    \"all\": \"All\",\r\n    \"enabled\": \"Enabled\",\r\n    \"disabled\": \"Disabled\",\r\n    \"yes\": \"Yes\",\r\n    \"no\": \"No\",\r\n    \"billSelector\": \"Bill Selector\",\r\n    \"querySolution\": \"Query Solution\",\r\n    \"collapse\": \"Collapse\",\r\n    \"expand\": \"Expand\",\r\n    \"loading\": \"Loading...\",\r\n    \"pleaseSelectNonVirtualVO\": \"Please select non-virtual VO\",\r\n    \"pleaseSelectOneItemOnly\": \"Please select only one item\",\r\n    \"isExtendProcess\": \"Extend Process\",\r\n    \"creationProcess\": \"Rreation Process\",\r\n    \"clickCancel\": \"Cancel\",\r\n    \"clickOk\": \"Ok\",\r\n    \"set\": \"(Set)\",\r\n    \"notSet\": \"(Not set)\",\r\n    \"setProcess\": \"Set: \",\r\n  },\r\n  \"zh-CHT\": {\r\n    \"code\": \"編號\",\r\n    \"name\": \"名稱\",\r\n    \"lastModifiedTime\": \"最後修改時間\",\r\n    \"upBill\": \"上遊單據\",\r\n    \"downBill\": \"下遊單據\",\r\n    \"processName\": \"流程名稱\",\r\n    \"processType\": \"流程類型\",\r\n    \"creation\": \"生單\",\r\n    \"writeback\": \"回寫\",\r\n    \"enabledState\": \"啟用狀態\",\r\n    \"sysInit\": \"系統預置\",\r\n    \"filter\": \"篩選\",\r\n    \"all\": \"全部\",\r\n    \"enabled\": \"已啟用\",\r\n    \"disabled\": \"已禁用\",\r\n    \"yes\": \"是\",\r\n    \"no\": \"否\",\r\n    \"billSelector\": \"單據選擇\",\r\n    \"querySolution\": \"篩選方案\",\r\n    \"collapse\": \"收起\",\r\n    \"expand\": \"展開\",\r\n    \"loading\": \"加載中\",\r\n    \"pleaseSelectNonVirtualVO\": \"請選擇非虛擬VO\",\r\n    \"pleaseSelectOneItemOnly\": \"請選中壹條數據\",\r\n    \"isExtendProcess\": \"擴展流程\",\r\n    \"creationProcess\": \"生單流程\",\r\n    \"clickCancel\": \"取消\",\r\n    \"clickOk\": \"確定\",\r\n    \"set\": \"（已設置）\",\r\n    \"notSet\": \"（未設置）\",\r\n    \"setProcess\": \"已設置：\",\r\n  }\r\n};\r\n","import { Component, OnInit, ViewChild, TemplateRef, EventEmitter, Inject, LOCALE_ID, Output, Input } from '@angular/core';\r\nimport { FarrisSectionComponent } from '@farris/ui-section';\r\nimport { ProcessListHelpService } from '../../services/process-list-help.service';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, catchError } from 'rxjs/operators';\r\nimport { IRtProcQueryParam } from '../../entity/IProcQueryParam';\r\nimport { BifMetadataType } from '../../entity/BifMetadataType';\r\nimport { ProcessFilterConditionArgs } from '../../entity/ProcessFilterConditionArgs';\r\nimport { TextValue } from '@edp-bif/common-api';\r\nimport { OrderByDirection } from '../../entity/OrderByDirection';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { RtBillProcessListResult } from '../../entity/RtBillProcessListResult';\r\nimport { AifLocalePipe, BIF_LANG_RESOURCES } from '../../../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\nimport { AIF_PROCESS_LIST_HELP_LANG_RESOURCES } from '../../i18n/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-process-list-help',\r\n  templateUrl: './process-list-help.component.html',\r\n  styleUrls: ['./process-list-help.component.css'],\r\n  providers: [\r\n    { provide: BIF_LANG_RESOURCES, useValue: AIF_PROCESS_LIST_HELP_LANG_RESOURCES },\r\n    AifLocalePipe,\r\n  ]\r\n})\r\nexport class ProcessListHelpComponent implements OnInit {\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: any) {\r\n    if (data) {\r\n      this.processCode = data;\r\n      this.setProcess.code = this.processCode;\r\n      this.setProcess.showText = this.processCode;\r\n    }\r\n  }\r\n\r\n  @Input() editorParams: {\r\n    bizTypeId?: string\r\n  } = {};\r\n\r\n  private processCode: string;\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"creationProcess\"),\r\n    width: 1250,\r\n    height: 500,\r\n    showButtons: true\r\n  };\r\n\r\n  procEmitter = new EventEmitter<any>();\r\n  queryParam: IRtProcQueryParam;\r\n\r\n  @ViewChild(\"tt\")\r\n  tt: DatagridComponent;\r\n  ttIdField: string = \"id\";\r\n  ttData: any[] = [];\r\n  ttColumns: any[] = [];\r\n  cascadeCheck = false;\r\n  cascadeDown = false;\r\n  cascadeUp = false;\r\n  @ViewChild('nameCellTemp')\r\n  nameCellTemp: TemplateRef<any>;\r\n\r\n  @ViewChild('iconSelectFooter')\r\n  modalFooter: TemplateRef<any>;\r\n\r\n  modalRef: BsModalRef;\r\n\r\n  readonly defaultPageSize: number = 30;\r\n  pageList = [this.defaultPageSize, 50, 100, 200, 500];\r\n\r\n  /**\r\n   * 已设置流程\r\n   */\r\n  setProcess: {\r\n    code?: string;\r\n    name?: string;\r\n    showText?: string;\r\n  } = {\r\n      showText: \"\"\r\n    };\r\n\r\n  constructor(\r\n    private procHelpService: ProcessListHelpService,\r\n    private messager: MessagerService,\r\n    private notify: NotifyService,\r\n    private modalService: BsModalService,\r\n    private frameworkService: FrameworkService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loading: LoadingService,\r\n    @Inject(LOCALE_ID) localeId: string,\r\n    private localePipe: AifLocalePipe,\r\n  ) {\r\n    this.queryParam = this.createDefaultQueryParam();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.configTtColumns();\r\n    // if (this.editorParams && this.editorParams.bizTypeId) {\r\n    //   this.queryParam.filterArgs.bizType = new TextValue();\r\n    //   this.queryParam.filterArgs.bizType.value = this.editorParams.bizTypeId;\r\n    //   this.queryParam.filterArgs.bizType.hasValue = true;\r\n    // }\r\n    if (this.processCode != null) {\r\n      this.procHelpService.getProcessNameByCode(this.processCode).subscribe(\r\n        (processName) => {\r\n          this.setProcess.name = processName;\r\n          if (this.setProcess.name) {\r\n            this.setProcess.showText = `${this.setProcess.name}(${this.setProcess.code})`;\r\n          } else {\r\n            this.setProcess.showText = this.setProcess.code;\r\n          }\r\n        }\r\n      );\r\n    }\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(() => {\r\n      setTimeout(() => {\r\n        if (this.ttData && this.ttData.length > 0) {\r\n          const proc = this.processCode != null ? this.ttData.find((it) => it.code == this.processCode) : this.ttData[0];\r\n          proc && this.tt.selectRow(proc.id);\r\n        }\r\n      }, 300);\r\n    });\r\n  }\r\n\r\n  clickOk(evt?) {\r\n    if (this.tt.selectedRow == null) {\r\n      this.notify.warning(this.localePipe.transform(\"pleaseSelectOneItemOnly\"));\r\n      return;\r\n    }\r\n    this.procEmitter.emit(this.tt.selectedRow.data);\r\n    const object = { value: this.tt.selectedRow.data.code, parameters: null };\r\n    this.submitModal.emit(object);\r\n    this.modalRef && this.modalRef.close();\r\n  }\r\n\r\n  clickCancel(evt?) {\r\n    this.procEmitter.complete();\r\n    this.closeModal.emit();\r\n    this.modalRef && this.modalRef.close();\r\n  }\r\n\r\n  onSearch(param: any) {\r\n    this.queryParam = param;\r\n    console.log(this.queryParam);\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        this.tt.clearCheckeds();\r\n        this.tt.clearSelections();\r\n      }\r\n    );\r\n  }\r\n\r\n  clickNameCell(ctx) {\r\n    this.procHelpService.openBifManagerApp(ctx.rowData);\r\n  }\r\n\r\n  onPageSizeChanged($event: { pageIndex: number, pageSize: number }) {\r\n    // console.log('PageSize Changed:', $event);\r\n    let checkedIds = this.tt.checkeds.map(r => r.data.id);\r\n\r\n    this.queryParam.filterArgs.pageSize = $event.pageSize;\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        setTimeout(() => {\r\n          this.tt.checkRows(checkedIds, true);\r\n          this.tt.refresh();\r\n        }, 0);\r\n      }\r\n    );\r\n  }\r\n\r\n  onPageChanged($event: { pageIndex: number, pageSize: number }) {\r\n    // console.log('PageNumber Changed:', $event);\r\n    let checkedIds = this.tt.checkeds.map(r => r.data.id);\r\n\r\n    this.queryParam.filterArgs.pageIndex = $event.pageIndex - 1;\r\n    this.queryParam.filterArgs.pageSize = $event.pageSize;\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        setTimeout(() => {\r\n          this.tt.checkRows(checkedIds, true);\r\n          this.tt.refresh();\r\n        }, 0);\r\n      }\r\n    );\r\n  }\r\n\r\n  pageChangeHandler(pageInfo: { pageIndex: number, pageSize: number }) {\r\n    let checkedIds = this.tt.checkeds.map(r => r.data.id);\r\n\r\n    this.queryParam.filterArgs.pageIndex = pageInfo.pageIndex - 1;\r\n    this.queryParam.filterArgs.pageSize = pageInfo.pageSize;\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        setTimeout(() => {\r\n          this.tt.checkRows(checkedIds, true);\r\n          this.tt.refresh();\r\n        }, 0);\r\n      }\r\n    );\r\n  }\r\n\r\n  pageSizeChangeHandler(size: number) {\r\n    let checkedIds = this.tt.checkeds.map(r => r.data.id);\r\n\r\n    this.queryParam.filterArgs.pageSize = size;\r\n    this.loadItems(this.queryParam.filterArgs).subscribe(\r\n      () => {\r\n        setTimeout(() => {\r\n          this.tt.checkRows(checkedIds, true);\r\n          this.tt.refresh();\r\n        }, 0);\r\n      }\r\n    );\r\n  }\r\n\r\n  removeSetProcess() {\r\n\r\n  }\r\n\r\n  private loadItems(args: ProcessFilterConditionArgs): Observable<any> {\r\n    const loadingComp = this.loading.show({ message: this.localePipe.transform(\"loading\") });\r\n    return this.procHelpService.getDatagridData(args).pipe(\r\n      switchMap(\r\n        (listRes: RtBillProcessListResult) => {\r\n          this.ttData = [...listRes.entities];\r\n          //更新分页信息\r\n          this.tt.setPageIndex(listRes.pageIndex + 1);\r\n          this.tt.total = listRes.totalCount;\r\n          this.tt.pageSize = listRes.pageSize;\r\n          // this.page.setCurrentPage(this.paginationId, listRes.pageIndex + 1);\r\n          // this.page.setItemsPerPage(this.paginationId, listRes.pageSize);\r\n          // this.page.setTotalItems(this.paginationId, listRes.totalCount);\r\n\r\n          loadingComp.close();\r\n          return of(listRes);\r\n        }\r\n      ),\r\n      catchError(\r\n        (err) => {\r\n          loadingComp.close();\r\n          setTimeout(() => {\r\n            //todo 确定异常结构, 目前采用兼容取值方式\r\n            this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  private configTtColumns() {\r\n    this.ttColumns = [\r\n      // {\r\n      //   field: \"isEnabled\", title: this.localePipe.transform(\"enabledState\"), width: 100, sortable: false,\r\n      //   formatter: (value: boolean, rowData, rowIndex) => {\r\n      //     if (value == true) {\r\n      //       return this.localePipe.transform(\"enabled\");\r\n      //     } else if (value == false) {\r\n      //       return this.localePipe.transform(\"disabled\");\r\n      //     } else {\r\n      //       return \"-\";\r\n      //     }\r\n      //   }\r\n      // },\r\n      { field: \"code\", title: this.localePipe.transform(\"code\"), width: 120, sortable: true },\r\n      {\r\n        field: \"name\", title: this.localePipe.transform(\"name\"), width: 250, sortable: true,\r\n        template: this.nameCellTemp,\r\n      },\r\n      { field: \"upBillVoName\", title: this.localePipe.transform(\"upBill\"), width: 120, sortable: true },\r\n      { field: \"downBillVoName\", title: this.localePipe.transform(\"downBill\"), width: 120, sortable: true },\r\n      // {\r\n      //   field: \"bifMetadataType\", title: this.localePipe.transform(\"processType\"), width: 120, sortable: false,\r\n      //   formatter: (value: BifMetadataType, rowData, rowIndex) => {\r\n      //     if (value == BifMetadataType.BifCreationProcess) {\r\n      //       return this.localePipe.transform(\"creation\");\r\n      //     } else if (value == BifMetadataType.BifWritebackProcess) {\r\n      //       return this.localePipe.transform(\"writeback\");\r\n      //     } else {\r\n      //       return \"-\";\r\n      //     }\r\n      //   }\r\n      // },\r\n      {\r\n        field: \"sysInit\", title: this.localePipe.transform(\"sysInit\"), width: 80, sortable: false,\r\n        formatter: (value: boolean, rowData, rowIndex) => {\r\n          if (value == true) {\r\n            return this.localePipe.transform(\"yes\");\r\n          } else if (value == false) {\r\n            return this.localePipe.transform(\"no\");\r\n          } else {\r\n            return \"-\";\r\n          }\r\n        }\r\n      },\r\n      // {\r\n      //   field: null, title: this.localePipe.transform(\"isExtendProcess\"), width: 80, sortable: false,\r\n      //   formatter: (value: boolean, rowData, rowIndex) => {\r\n      //     if (rowData.parentId == null) {\r\n      //       return this.localePipe.transform(\"no\");\r\n      //     } else {\r\n      //       return this.localePipe.transform(\"yes\");\r\n      //     }\r\n      //   }\r\n      // },\r\n      // { field: \"businessType\", title: this.translateService.instant(\"businessType\"), width: 120 },\r\n      // { field: \"creator\", title: this.translateService.instant(\"creator\"), width: 120 },\r\n      // { field: \"createdTime\", title: this.translateService.instant(\"createdTime\"), width: 120 },\r\n      // { field: \"lastModifier\", title: this.translateService.instant(\"lastModifier\"), width: 120 },\r\n      // {\r\n      //   field: \"lastModifiedTime\", title: this.localePipe.transform(\"lastModifiedTime\"), width: 120, sortable: true,\r\n      //   formatter: {\r\n      //     type: 'datetime',\r\n      //     options: {\r\n      //       format: 'YYYY-MM-DD HH:mm:ss'\r\n      //     }\r\n      //   },\r\n      // },\r\n    ];\r\n  }\r\n\r\n  private createDefaultQueryParam() {\r\n    const queryParam = {\r\n      filterArgs: new ProcessFilterConditionArgs(),\r\n      filterArgsExt: {}\r\n    };\r\n\r\n    queryParam.filterArgs.pageSize = this.defaultPageSize;\r\n    queryParam.filterArgs.pageIndex = 0;\r\n    queryParam.filterArgs.OrderByLastModifiedTime = new TextValue();\r\n    queryParam.filterArgs.OrderByLastModifiedTime.value = OrderByDirection.Desc;\r\n    queryParam.filterArgs.OrderByLastModifiedTime.hasValue = true;\r\n    queryParam.filterArgs.billProcessType = new TextValue();\r\n    queryParam.filterArgs.billProcessType.value = BifMetadataType.BifCreationProcess;\r\n    queryParam.filterArgs.billProcessType.hasValue = true;\r\n    queryParam.filterArgs.isEnabled = new TextValue();\r\n    queryParam.filterArgs.isEnabled.value = \"true\";\r\n    queryParam.filterArgs.isEnabled.hasValue = true;\r\n\r\n\r\n    return queryParam;\r\n  }\r\n}\r\n","import { Component, OnInit, HostBinding, Input, Output, EventEmitter, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { CallActivitySubProcess } from '../call-activity-sub-process/call-activity-sub-process.entity';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { ComboListComponent } from '@farris/ui-combo-list';\r\nimport { FarrisRadioGroupComponent } from '@farris/ui-forms';\r\nimport { IRtShowEntity } from '../../views/aif-process-list-help/entity/IRtShowEntity';\r\nimport { ProcessListHelpComponent } from '../../views/aif-process-list-help/components/process-list-help/process-list-help.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SubProcessType } from '../call-activity-sub-process/SubProcessType';\r\nimport { BillSourceType } from '../call-activity-sub-process/BillSourceType';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-call-activity-sub-process2',\r\n  templateUrl: './call-activity-sub-process2.component.html',\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class CallActivitySubProcess2Component implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Input() editorParams: {\r\n    bizTypeId?: string\r\n  } = {};\r\n\r\n  @Input() set value(v: CallActivitySubProcess) {\r\n    if (v) {\r\n      this.callActivitySubProcess = v;\r\n      // 为子流程类型赋值\r\n      if (this.callActivitySubProcess.calledElement == null || this.callActivitySubProcess.calledElement == \"\") {\r\n        if (this.callActivitySubProcess.calledBizDefKey == null || this.callActivitySubProcess.calledBizDefKey == \"\") {\r\n          this.callActivitySubProcess.subProcessType = SubProcessType.Specified;\r\n        } else {\r\n          this.callActivitySubProcess.subProcessType = SubProcessType.Dynamic;\r\n        }\r\n      } else {\r\n        this.callActivitySubProcess.subProcessType = SubProcessType.Specified;\r\n      }\r\n      // 为单据来源类型赋值\r\n      if (this.callActivitySubProcess.inheritBizDataId === true) {\r\n        this.callActivitySubProcess.billSourceType = BillSourceType.InheritParent;\r\n      } else if (this.callActivitySubProcess.inheritBizDataId === false && this.callActivitySubProcess.useAutoCreationData === false) {\r\n        this.callActivitySubProcess.billSourceType = BillSourceType.VariablesExpression;\r\n      } else if (this.callActivitySubProcess.inheritBizDataId === false && this.callActivitySubProcess.useAutoCreationData === true) {\r\n        this.callActivitySubProcess.billSourceType = BillSourceType.AutoCreation;\r\n      }\r\n      this.getProcessDefKey(this.callActivitySubProcess.calledElement);\r\n      this.getFlowForm(this.callActivitySubProcess.calledBizDefKey);\r\n      this.getAifProcessName(this.callActivitySubProcess.aifProcessCode);\r\n    }\r\n  }\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.subProcess.subProcessSet'),\r\n    width: 600,\r\n    height: 342,\r\n    showButtons: true\r\n  };\r\n\r\n  callActivitySubProcess: CallActivitySubProcess = new CallActivitySubProcess();\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  readonly subProcessType = SubProcessType;\r\n  readonly billSourceType = BillSourceType;\r\n  // @ViewChild(\"comboProcessType\")\r\n  // comboProcessType: ComboListComponent;\r\n  // comboProcessTypeIdField = \"value\";\r\n  // comboProcessTypeValueField = \"value\";\r\n  // comboProcessTypeTextField = \"text\";\r\n  // comboProcessTypeData = [\r\n  //   { value: \"Specified\", text: \"指定子流程\" },\r\n  //   { value: \"Dynamic\", text: \"动态子流程\" },\r\n  // ];\r\n\r\n  // @ViewChild(\"comboBillSource\")\r\n  // comboBillSource: ComboListComponent;\r\n  // comboBillSourceIdField = \"value\";\r\n  // comboBillSourceValueField = \"value\";\r\n  // comboBillSourceTextField = \"text\";\r\n  // comboBillSourceData = [\r\n  //   { value: BillSourceType.InheritParent, text: '与父流程相同' },\r\n  //   { value: BillSourceType.AutoCreation, text: '自动生成下游单据' },\r\n  //   { value: BillSourceType.VariablesExpression, text: '变量表达式' },\r\n  // ];\r\n\r\n  @ViewChild(\"radioGroupProcessType\")\r\n  radioGroupProcessType: FarrisRadioGroupComponent;\r\n  radioGroupProcessTypeData = [\r\n    { value: \"Specified\", name: this.localePipe.transform('component.subProcess.specified') },\r\n    { value: \"Dynamic\", name: this.localePipe.transform('component.subProcess.dynamic') },\r\n  ];\r\n\r\n  @ViewChild(\"radioGroupBillSource\")\r\n  radioGroupBillSource: FarrisRadioGroupComponent;\r\n  radioGroupBillSourceData = [\r\n    { value: BillSourceType.InheritParent, name: this.localePipe.transform('component.subProcess.inheritParent') },\r\n    { value: BillSourceType.AutoCreation, name: this.localePipe.transform('component.subProcess.autoCreation') },\r\n    { value: BillSourceType.VariablesExpression, name: this.localePipe.transform('component.subProcess.variablesExpression') },\r\n  ];\r\n\r\n  constructor(\r\n    private notify: NotifyService,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private inj: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      const object = { value: this.callActivitySubProcess, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  processConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledElement = args.procDefKey;\r\n      this.callActivitySubProcess.calledElementName = args.name;\r\n    }\r\n  }\r\n\r\n  processTypeChange(val) {\r\n    console.log(val);\r\n    if (val == SubProcessType.Specified) {\r\n      this.callActivitySubProcess.calledBizDefKey = null;\r\n      this.callActivitySubProcess.calledBizDefName = null;\r\n    } else if (val == SubProcessType.Dynamic) {\r\n      this.callActivitySubProcess.calledElement = null;\r\n      this.callActivitySubProcess.calledElementName = null;\r\n    }\r\n  }\r\n\r\n  billSourceChange(val) {\r\n    console.log(val);\r\n    if (val == BillSourceType.InheritParent) {\r\n      this.callActivitySubProcess.inheritBizDataId = true;\r\n      this.callActivitySubProcess.useAutoCreationData = false;\r\n    } else if (val == BillSourceType.AutoCreation) {\r\n      this.callActivitySubProcess.inheritBizDataId = false;\r\n      this.callActivitySubProcess.useAutoCreationData = true;\r\n    } else if (val == BillSourceType.VariablesExpression) {\r\n      this.callActivitySubProcess.inheritBizDataId = false;\r\n      this.callActivitySubProcess.useAutoCreationData = false;\r\n    }\r\n  }\r\n\r\n  selectProcess() {\r\n    this.openProcHelp().subscribe(\r\n      (rte: IRtShowEntity) => {\r\n        if (rte == null) {\r\n          this.notify.warning(this.localePipe.transform('component.subProcess.rteNull'));\r\n          return;\r\n        }\r\n        this.callActivitySubProcess.aifProcessCode = rte.code;\r\n        this.callActivitySubProcess.aifProcessName = rte.name;\r\n      }\r\n    );\r\n  }\r\n\r\n  clearProcess() {\r\n    this.callActivitySubProcess.aifProcessCode = null;\r\n    this.callActivitySubProcess.aifProcessName = null;\r\n  }\r\n\r\n  openProcHelp() {\r\n    const cmpF = this.cfr.resolveComponentFactory(ProcessListHelpComponent);\r\n    const cmpR = cmpF.create(this.inj, []);\r\n    cmpR.instance.editorParams = this.editorParams;\r\n    const modalRef = this.modalService.show(cmpR, {\r\n      title: this.localePipe.transform('component.subProcess.orderProcess'),\r\n      width: 1250,\r\n      height: 500,\r\n      resizable: true,\r\n      buttons: [\r\n        {\r\n          text: this.localePipe.transform('component.subProcess.clickOk'),\r\n          cls: \"btn btn-primary\",\r\n          handle: (evt) => {\r\n            cmpR.instance.clickOk(evt);\r\n            modalRef.close();\r\n          }\r\n        },\r\n        {\r\n          text: this.localePipe.transform('component.subProcess.clickCancel'),\r\n          cls: \"btn btn-secondary\",\r\n          handle: (evt) => {\r\n            cmpR.instance.clickCancel(evt);\r\n            modalRef.close();\r\n          }\r\n        }\r\n      ],\r\n      closed: () => {\r\n        modalRef.dialog.destroy();\r\n      }\r\n    });\r\n    cmpR.instance.modalRef = modalRef;\r\n\r\n    return cmpR.instance.procEmitter.asObservable();\r\n  }\r\n\r\n  clearProcessDef(args: any) {\r\n    this.callActivitySubProcess.calledElement = '';\r\n    this.callActivitySubProcess.calledElementName = '';\r\n  }\r\n\r\n  flowFormConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledBizDefKey = args.id;\r\n      this.callActivitySubProcess.calledBizDefName = args.name;\r\n    }\r\n  }\r\n  clearFlowForm(args: any) {\r\n    this.callActivitySubProcess.calledBizDefKey = '';\r\n    this.callActivitySubProcess.calledBizDefName = '';\r\n  }\r\n\r\n  setBizDataId() {\r\n    this.showExprHelp();\r\n  }\r\n\r\n  private showExprHelp() {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(this.callActivitySubProcess.bizDataId);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.callActivitySubProcess.bizDataId = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  valueChange(bool: boolean) {\r\n    if (bool) {\r\n      this.callActivitySubProcess.bizDataId = null;\r\n    }\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.callActivitySubProcess.inheritBizDataId && !this.callActivitySubProcess.useAutoCreationData && !this.callActivitySubProcess.bizDataId) {\r\n      this.message.warning(this.localePipe.transform('component.subProcess.inheritBizDataId'));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getProcessDefKey(key: string) {\r\n    let url = this.util.getProcessDefinitionWebApi();\r\n    if (key) {\r\n      url += `/procDefKey/${key}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledElementName = re.name;\r\n      });\r\n    }\r\n  }\r\n  private getFlowForm(id: string) {\r\n    let url = this.util.getFlowFormWebApi();\r\n    if (id) {\r\n      url += `/${id}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledBizDefName = re.name;\r\n      });\r\n    }\r\n  }\r\n\r\n  getAifProcessName(code: string) {\r\n    if (code != null && code != \"\") {\r\n      this.http.request(\"GET\", `/api/runtime/aif/v1.0/rtbillcreationprocess/getname/${code}`, { responseType: 'text' }).subscribe(\r\n        (res: any) => {\r\n          this.callActivitySubProcess.aifProcessName = res;\r\n        },\r\n        (err) => {\r\n          if (err.error && typeof err.error == \"string\") {\r\n            err.error = JSON.parse(err.error);\r\n          }\r\n          setTimeout(() => {\r\n            //todo 确定异常结构, 目前采用兼容取值方式\r\n            this.message.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n          }, 300);\r\n          throw err;\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class CallActivitySubProcess2Converter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && (data.calledBizDefKey || data.calledElement)) {\r\n      return this.localePipe.transform(\"component.subProcess.set\");\r\n    }\r\n    return this.localePipe.transform(\"component.subProcess.notSet\");\r\n  }\r\n}\r\n","export enum CallActivitySubProcessPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    callActivitySubProcess = 'callActivitySubProcess',\r\n    /**\r\n     * 驳回规则\r\n     */\r\n    BackWardRule = 'BackWardRule',\r\n    variableSettings = 'variableSettings',\r\n     /**\r\n     * 多实例设置\r\n     */\r\n    MultiInstanceLoopCharacteristics = 'MultiInstanceLoopCharacteristics',\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { CallActivitySubProcessComponent, CallActivitySubProcessConverter } from '../views/call-activity-sub-process/call-activity-sub-process.component';\r\nimport { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\nimport { CallActivitySubProcess2Component, CallActivitySubProcess2Converter } from '../views/call-activity-sub-process2/call-activity-sub-process2.component';\r\nimport { CallActivitySubProcessPropertyKeys } from '../designer/wf-cell/property-keys/CallActivitySubProcessPropertyKeys';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { MultiInstanceLoopCharacteristicsComponent, MultiInstanceLoopCharacteristicsConverter } from '../views/multi-instance-loop-characteristics/multi-instance-loop-characteristics.component';\r\n\r\n@Injectable()\r\n\r\nexport class SubProcessViewModel {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        private localPipe: WfLocalePipe\r\n        ) {\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case CallActivitySubProcessPropertyKeys.callActivitySubProcess: // 参与者\r\n                        // item.editor = CallActivitySubProcessComponent;\r\n                        // item.converter = new CallActivitySubProcessConverter();\r\n                        item.editor = CallActivitySubProcess2Component;\r\n                        item.converter = new CallActivitySubProcess2Converter(this.localPipe);\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId,\r\n                        };\r\n                        break;\r\n                    case CallActivitySubProcessPropertyKeys.BackWardRule:\r\n                        item.editor = BackwardRuleComponent;\r\n                        item.converter = new BackwardRuleConverter(this.localPipe);\r\n                        item.editorParams = {\r\n                            nodeType: 'CallActivitySubProcess'\r\n                        };\r\n                        break;\r\n                    case CallActivitySubProcessPropertyKeys.MultiInstanceLoopCharacteristics:\r\n                            item.editor = MultiInstanceLoopCharacteristicsComponent;\r\n                            item.converter = new MultiInstanceLoopCharacteristicsConverter(this.localPipe);\r\n                            item.editorParams = {\r\n                                location: 'CallActivitySubProcess'\r\n                            };\r\n                            break;\r\n                    case CallActivitySubProcessPropertyKeys.variableSettings: // 变量设置\r\n                        item.editor = VariableSettingComponent;\r\n                        item.converter = new VariableSettingConverter(this.localPipe);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","export enum AutoActivityPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    Tools = 'Tools',\r\n    variableSettings = 'variableSettings',\r\n    ParticipantOptions = 'ParticipantOptions'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\nimport { AutoActivityPropertyKeys } from '../designer/wf-cell/property-keys/AutoActivityPropertyKeys';\r\nimport { PerformerOptionsComponent, PerformerOptionsConverter } from '../views/performer/views/performer-options/performer-options.component';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\n\r\nexport class AutoActivityAdapter {\r\n\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    private localPipe: WfLocalePipe\r\n  ) {\r\n  }\r\n\r\n  setProperty(obj: any) {\r\n    this.uiState.propertyData = obj.propertyData;\r\n    this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n  }\r\n\r\n  private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n    const propertyConfig: ElementPropertyConfig[] = [];\r\n    if (obj) {\r\n      obj.forEach((element: ElementPropertyConfig) => {\r\n        this.setEntity(element.properties);\r\n        propertyConfig.push(element);\r\n      });\r\n    }\r\n    return propertyConfig;\r\n  }\r\n  private setEntity(obj: PropertyEntity[]) {\r\n    if (obj && obj.length > 0) {\r\n      obj.forEach((item: PropertyEntity) => {\r\n        switch (item.propertyID) {\r\n          case AutoActivityPropertyKeys.Tools: // 参与者\r\n            item.editor = ActivityComponentComponent;\r\n            item.converter = new ActivityComponentConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'autoActivity'\r\n            };\r\n            break;\r\n          case AutoActivityPropertyKeys.variableSettings: // 变量设置\r\n            item.editor = VariableSettingComponent;\r\n            item.converter = new VariableSettingConverter(this.localPipe);\r\n            break;\r\n          case AutoActivityPropertyKeys.ParticipantOptions: // 参与者选项\r\n            item.editor = PerformerOptionsComponent;\r\n            item.converter = new PerformerOptionsConverter(this.localPipe);\r\n            item.editorParams = {\r\n              location: 'autoActivity'\r\n            };\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\nexport class EventDefinition {\r\n    Id: string;\r\n    name: string;\r\n    triggerAction = 'Pass';\r\n    Async = false;\r\n    SignalRef: string;\r\n    constructor() { }\r\n}\r\n","import { Component, OnInit, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { EventDefinition } from './event-definition.entity';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-event-definition',\r\n  templateUrl: './event-definition.component.html',\r\n  styleUrls: ['./event-definition.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class EventDefinitionComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(items: any[]) {\r\n    if (items && items.length > 0) {\r\n      for (const item of items) {\r\n        const event = new EventDefinition();\r\n        event.Id = item.Id;\r\n        event.name = item.name;\r\n        event.triggerAction = item.triggerAction;\r\n        event.Async = item.Async;\r\n        event.SignalRef = item.SignalRef;\r\n        this.data.push(event);\r\n      }\r\n    }\r\n  }\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.eventDefinition.eventDefinition'),\r\n    width: 560,\r\n    height: 420,\r\n    showButtons: true\r\n  };\r\n\r\n  triggerActionCollection: any[] = [\r\n    { text: this.localePipe.transform('component.eventDefinition.pass'), value: 'Pass' },\r\n    { text: this.localePipe.transform('component.eventDefinition.back'), value: 'Back' },\r\n    { text: this.localePipe.transform('component.eventDefinition.abort'), value: 'Abort' }];\r\n\r\n  columns = new Array();\r\n  data = new Array<EventDefinition>();\r\n\r\n  constructor(\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private injector: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.columns = [{\r\n      field: 'SignalRef', width: 100, title: this.localePipe.transform('component.eventDefinition.signalRef'),\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'name', width: 100, title: this.localePipe.transform('component.eventDefinition.name'),\r\n      editor: { type: EditorTypes.TEXTBOX, options: {} },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'triggerAction', width: 100, title: this.localePipe.transform('component.eventDefinition.triggerAction'),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: this.triggerActionCollection, idField: 'value', panelHeight: 'auto', showClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    }];\r\n  }\r\n  add() {\r\n    const event = new EventDefinition();\r\n    event.Id = ProcessDeUtil.GenerateElementId();\r\n    this.data.push(event);\r\n    this.grid.loadData(this.data);\r\n  }\r\n  delete() {\r\n    this.grid.endCellEdit();\r\n    if (this.grid.selectedRow && this.grid.selectedRow.data) {\r\n      const i = this.data.findIndex(d => d.Id === this.grid.selectedRow.data.Id);\r\n      this.data.splice(i, 1);\r\n      this.grid.loadData(this.data);\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.eventDefinition.selectedRow'));\r\n    }\r\n  }\r\n\r\n  clickOK() {\r\n    this.grid.endCellEdit();\r\n    if (this.validator()) {\r\n      const object = { value: this.data, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (this.data.length === 0) {\r\n      this.message.info(this.localePipe.transform('component.eventDefinition.dataLength'));\r\n      return false;\r\n    } else {\r\n      for (const d of this.data) {\r\n        if (!d.SignalRef) {\r\n          this.message.info(this.localePipe.transform('component.eventDefinition.codeNotNull'));\r\n          return false;\r\n        } else if (!d.name) {\r\n          this.message.info(this.localePipe.transform('component.eventDefinition.nameNotNull'));\r\n          return false;\r\n        } else if (!isNaN(Number(d.SignalRef))) {\r\n          this.message.info(this.localePipe.transform('component.eventDefinition.codeNotNumber'));\r\n          return false;\r\n        }\r\n      }\r\n      if (this.data.length > 1) {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n          const code1 = this.data[i].SignalRef;\r\n          for (let j = i + 1; j < this.data.length; j++) {\r\n            const code2 = this.data[j].SignalRef;\r\n\r\n            if (code1 === code2) {\r\n              this.message.warning(this.localePipe.transform('component.eventDefinition.codeRepeat'));\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class EventDefinitionConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any[]): string {\r\n    if (data && data.length > 0) {\r\n      return this.localePipe.transform('component.eventDefinition.set');\r\n    } else {\r\n      return this.localePipe.transform('component.eventDefinition.notSet');\r\n    }\r\n  }\r\n}\r\n","export enum IntermediateCatchEventImplPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    /**\r\n     * 驳回规则\r\n     */\r\n    BackWardRule = 'BackWardRule',\r\n    EventDefinitions = 'EventDefinitions',\r\n    variableSettings = 'variableSettings',\r\n}","import { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';\r\nimport { EventDefinitionComponent, EventDefinitionConverter } from '../views/event-definition/event-definition.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\nimport { IntermediateCatchEventImplPropertyKeys } from '../designer/wf-cell/property-keys/IntermediateCatchEventImplPropertyKeys';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\n\r\nexport class CatchEventAdapter {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        private injector: Injector,\r\n        private localPipe: WfLocalePipe\r\n    ) { }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case IntermediateCatchEventImplPropertyKeys.BackWardRule:\r\n                        item.editor = BackwardRuleComponent;\r\n                        item.converter = new BackwardRuleConverter(this.localPipe);\r\n                        item.editorParams = {\r\n                            nodeType: 'CallActivitySubProcess'\r\n                        };\r\n                        break;\r\n                    case IntermediateCatchEventImplPropertyKeys.EventDefinitions:\r\n                        item.editor = EventDefinitionComponent;\r\n                        item.converter = new EventDefinitionConverter(this.localPipe);\r\n                        break;\r\n                    case IntermediateCatchEventImplPropertyKeys.variableSettings: // 变量设置\r\n                        item.editor = VariableSettingComponent;\r\n                        item.converter = new VariableSettingConverter(this.localPipe);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","export enum MessageActivityPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    messageNotice = 'messageNotice',\r\n    variableSettings = 'variableSettings',\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';\r\nimport { MessageActivityPropertyKeys } from '../designer/wf-cell/property-keys/MessageActivityPropertyKeys';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\n\r\nexport class MessageActivityAdapter {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        private localPipe: WfLocalePipe\r\n    ) {\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case MessageActivityPropertyKeys.messageNotice: // 参与者\r\n                        item.editor = MessageNoticeComponent;\r\n                        item.converter = new MessageNoticeConverter(this.localPipe);\r\n                        item.editorParams = {\r\n                            location: 'messageActivity'\r\n                        };\r\n                        break;\r\n                    case MessageActivityPropertyKeys.variableSettings: // 变量设置\r\n                        item.editor = VariableSettingComponent;\r\n                        item.converter = new VariableSettingConverter(this.localPipe);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","export class AuditProcessDefInfo {\r\n    auditId: AuditEvent;\r\n    success: boolean;\r\n    processDefKey: string;\r\n}\r\n\r\nexport enum AuditEvent {\r\n    WF_ProcessDef_SaveDT = 'WF_ProcessDef_SaveDT',\r\n    WF_ProcessDef_SaveRT = 'WF_ProcessDef_SaveRT',\r\n    WF_ProcessDef_Deploy = 'WF_ProcessDef_Deploy',\r\n    WF_ProcessDef_Import = 'WF_ProcessDef_Import',\r\n    WF_ProcessDef_Export = 'WF_ProcessDef_Export',\r\n    WF_ProcessDef_SyncDT = 'WF_ProcessDef_SyncDT'\r\n}\r\n","export class ProcessInfo {\r\n    /**\r\n     * 业务活动ID\r\n     */\r\n    bizObjId: string;\r\n    /**\r\n     * Key\r\n     */\r\n    processKey: string;\r\n    /**\r\n     * 流程名称\r\n     */\r\n    processName: string;\r\n    /**\r\n     * 流程编号\r\n     */\r\n    processCode: string;\r\n    /**\r\n     * 流程分类ID\r\n     */\r\n    flowFormId: string;\r\n    /**\r\n     * 流程分类名称\r\n     */\r\n    flowFormName: string;\r\n    /**\r\n     * 流程类型\r\n     */\r\n    startMode?: string;\r\n    /**\r\n     * 流程组织\r\n     */\r\n    procOrg?: ProcessOrganization;\r\n    /**\r\n     * 访问级别\r\n     */\r\n    accessLevel?: string;\r\n}\r\n\r\n\r\nexport class ProcessOrganization {\r\n    orgName: string;\r\n    orgId: string;\r\n}\r\n","export enum NotifyActivityPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    /**\r\n     * 参与者\r\n     */\r\n    ParticipantSchemes = 'ParticipantSchemes',\r\n    /**\r\n     * PC表单\r\n     */\r\n    wf_ExecuteForms_PC = 'wf_ExecuteForms_PC',\r\n    /**\r\n     * 移动表单\r\n     */\r\n    wf_ExecuteForms_Mobile = 'wf_ExecuteForms_Mobile',\r\n    /**\r\n     * 消息通知\r\n     */\r\n    messageNotice = 'messageNotice',\r\n    NotifyAble = 'NotifyAble',\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';\r\nimport { PerformerComponent, PerformerConverter } from '../views/performer/performer.component';\r\nimport { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';\r\nimport { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';\r\nimport { OrganizationPotentialOwnerComponent, OrganizationPotentialOwnerConverter } from '../views/organization-potential-owner/organization-potential-owner.component';\r\nimport { ParticipantComponent, ParticipantConverter } from '../views/participant/participant.component';\r\nimport { NotifyActivityPropertyKeys } from '../designer/wf-cell/property-keys/NotifyActivityPropertyKeys';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\nexport class NotifyActivityAdapter {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        private localPipe: WfLocalePipe\r\n    ) {\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case NotifyActivityPropertyKeys.Id: // 标识\r\n                        break;\r\n                    case NotifyActivityPropertyKeys.ParticipantSchemes: // 参与者\r\n                        item.editor = ParticipantComponent;\r\n                        item.converter = new ParticipantConverter(this.localPipe);\r\n                        item.editorParams = {\r\n                            nodeType: 'notifyActivity'\r\n                        };\r\n                        break;\r\n                    case NotifyActivityPropertyKeys.wf_ExecuteForms_PC: // 表单定义\r\n                        item.editor = ExecuteFormsComponent;\r\n                        const params = {\r\n                            location: 'notifyActivity',\r\n                            tab: 'web'\r\n                        };\r\n                        item.converter = new ExecuteFormsConverter(params, this.localPipe);\r\n                        item.editorParams = params;\r\n                        break;\r\n                    case NotifyActivityPropertyKeys.wf_ExecuteForms_Mobile: // 表单定义\r\n                        item.editor = ExecuteFormsComponent;\r\n                        const editorParams = {\r\n                            location: 'notifyActivity',\r\n                            tab: 'mobile'\r\n                        };\r\n                        item.converter = new ExecuteFormsConverter(editorParams, this.localPipe);\r\n                        item.editorParams = editorParams;\r\n                        break;\r\n                    case NotifyActivityPropertyKeys.messageNotice: // 消息通知\r\n                        item.editor = MessageNoticeComponent;\r\n                        item.converter = new MessageNoticeConverter(this.localPipe);\r\n                        item.editorParams = {\r\n                            location: 'activity'\r\n                        };\r\n                        break;\r\n                    case NotifyActivityPropertyKeys.NotifyAble: // 允许知会\r\n                        item.editor = OrganizationPotentialOwnerComponent;\r\n                        item.converter = new OrganizationPotentialOwnerConverter(this.localPipe);\r\n                        item.editorParams = {\r\n                            nodeType: 'notifyActivity',\r\n                          };\r\n                        break;\r\n                    default:\r\n                        item.editor = ExtendPropertyComponent;\r\n                        item.converter = new ExtendPropertyConverter(this.localPipe);\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { TypeConverter } from \"@farris/ide-property-panel\";\r\nimport { AifLocalePipe } from \"../aif-ui-common/pipe/aif-ui-common-locale.pipe\";\r\n\r\nexport class AifCreationBillProcessConverter implements TypeConverter {\r\n    constructor(\r\n        public localePipe: AifLocalePipe\r\n    ) { }\r\n\r\n    convertTo(data): string {\r\n        if (data) {\r\n            return data.name || data.code || this.localePipe.transform(\"set\");\r\n        } else {\r\n            return this.localePipe.transform(\"notSet\");\r\n        }\r\n    }\r\n}\r\n","export enum AifCreationBillActivityPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    /**\r\n     * 生单流程编号\r\n     */\r\n    aifProcessCode = 'aifProcessCode',\r\n    /**\r\n     * VoNodePath\r\n     */\r\n    voNodePath = 'voNodePath',\r\n    /**\r\n     * isRelied\r\n     */\r\n    isRelied = 'isRelied',\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { ProcessListHelpComponent } from '../views/aif-process-list-help/components/process-list-help/process-list-help.component';\r\nimport { AifCreationBillProcessConverter } from '../views/aif-process-list-help/AifCreationBillProcessConverter';\r\nimport { AifCreationBillActivityPropertyKeys } from '../designer/wf-cell/property-keys/AifCreationBillActivityPropertyKeys';\r\nimport { AifLocalePipe } from '../views/aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\n\r\n@Injectable()\r\nexport class AifCreationBillActivityAdapter {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        public localPipe: AifLocalePipe\r\n        ) {\r\n\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case AifCreationBillActivityPropertyKeys.aifProcessCode: // 单据流编号\r\n                        item.editor = ProcessListHelpComponent;\r\n                        item.converter = new AifCreationBillProcessConverter(this.localPipe);\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId\r\n                        };\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\nexport type Payload = any;\r\nexport interface EventBusMessage {\r\n    channel: string;\r\n    payload: Payload;\r\n}\r\n\r\n@Injectable()\r\nexport class EventBusService1 {\r\n    public listen: Observable<Payload>;\r\n\r\n    private next;\r\n    constructor() {\r\n        this.listen = new Observable(observer => {\r\n            this.next = (payload: Payload) => observer.next(payload);\r\n            return _ => _ /* nothing to clean */;\r\n        });\r\n        this.channelEmmiter = this.channelEmmiter.bind(this);\r\n        this.emit = this.emit.bind(this);\r\n    }\r\n\r\n    allChannels(): Observable<EventBusMessage> {\r\n        return this.listen;\r\n    }\r\n\r\n    channel(channelName: string): Observable<Payload> {\r\n        return this.listen\r\n            .pipe(filter(e => e.channel === channelName),\r\n                map(e => e.payload));\r\n    }\r\n\r\n    channelEmmiter(channelName) {\r\n        console.log('made listener for', channelName);\r\n        return (payload: Payload): void => {\r\n            this.emit({ channel: channelName, payload });\r\n        };\r\n    }\r\n\r\n    emit({ channel, payload }: EventBusMessage): void {\r\n        console.log('emit', channel);\r\n        this.next({ channel, payload });\r\n    }\r\n}\r\n\r\n/**\r\n * Global EventEmitter\r\n */\r\n@Injectable()\r\nexport class EventBusService<Events = any> {\r\n    /** Map event name to Subject  */\r\n    private _subjects = new Map<Events, Subject<any>>();\r\n\r\n    /**\r\n     *\r\n     * @param eventName\r\n     * @param handler\r\n     * @returns\r\n     */\r\n    on(eventName: Events, handler: (data: any) => any) {\r\n        if (!this._subjects.has(eventName)) {\r\n            this._subjects.set(eventName, new Subject());\r\n        }\r\n        const _subject = this._subjects.get(eventName);\r\n        const subscription = _subject.subscribe(handler);\r\n        return {\r\n            unsubscribe: () => {\r\n                subscription.unsubscribe();\r\n                if (_subject.observers.length > 0) {\r\n                    this._subjects.delete(eventName);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param eventName\r\n     * @param data\r\n     */\r\n    emit(eventName: Events, data) {\r\n        if (this._subjects.has(eventName)) {\r\n            this._subjects.get(eventName).next(data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destory all subscription and clear the map\r\n     */\r\n    destroy() {\r\n        this._subjects.forEach((subject, _) => {\r\n            subject.unsubscribe();\r\n        });\r\n        this._subjects.clear();\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WfTaskHandlerService } from '@gsp-wf/wf-task-handler';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-release-component',\r\n  templateUrl: './release-component.component.html',\r\n  styleUrls: ['./release-component.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class ReleaseComponent implements OnInit {\r\n  @ViewChild('buttonRef') btnRef: TemplateRef<any>;\r\n\r\n  applicantName: string;\r\n  applicantDepartment: string;\r\n  @Input()\r\n  procName: any;\r\n  @Input()\r\n  procVersion: number;\r\n  @Input()\r\n  processDefinitionKey: string;\r\n  @ViewChild('lookup') public lookUp: LookupGridComponent;\r\n\r\n  @Output() submit = new EventEmitter<any>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n  session: string;\r\n  accessLevel = 'public';\r\n  organization;\r\n  organizationName;\r\n  textDetail;\r\n  isAdministratorConfig = false;\r\n  editor: any;\r\n\r\n  administrator: any;\r\n  dataUri = '/api/runtime/sys/v1.0/sysOrgs';\r\n  applicantId: string;\r\n  loadType = 'layerload';\r\n  releaseType = 'release';\r\n  items = new Array();\r\n  releaseTypeList = [\r\n    { value: 'release', name: this.localePipe.transform('component.release.release') },\r\n    { value: 'update', name: this.localePipe.transform('component.release.update') },\r\n  ];\r\n  constructor(\r\n    private uiState: ProcessDesignerUIState,\r\n    private submitService: WfTaskHandlerService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.releaseType = this.procVersion === 1 ? 'release' : 'update';\r\n    this.uiState.getUserInfo().subscribe(re => {\r\n      this.applicantName = re.name;\r\n      this.applicantDepartment = re.orgName;\r\n      this.applicantId = re.id;\r\n    });\r\n  }\r\n\r\n  saveAsOK() {\r\n    this.uiState.createData().subscribe((saveData) => {\r\n      const dataId = saveData.returnValue.id;\r\n      const data = {\r\n        DataId: dataId,\r\n        applicantName: this.applicantName,\r\n        applicantDepartment: this.applicantDepartment,\r\n        procName: this.procName,\r\n        procVersion: this.procVersion,\r\n        releaseType: this.releaseType,\r\n        textDetail: this.textDetail,\r\n        processDefinitionKey: this.processDefinitionKey,\r\n        applicantId: this.applicantId\r\n      };\r\n      const Info = {\r\n        ChangeType: 'Modify',\r\n        ChangeInfo: data\r\n      };\r\n      this.uiState.releaseSave(Info).subscribe((re) => {\r\n        this.mySubmit(dataId, '03bdca37-8439-4924-8aef-20f3f4092b59');\r\n        this.submit.next();\r\n      });\r\n    });\r\n  }\r\n  saveAsCancel() {\r\n    this.cancel.emit();\r\n  }\r\n  editorCreated(quill) {\r\n    const toolbar = quill.getModule('toolbar');\r\n    this.editor = quill;\r\n  }\r\n\r\n  contentChanged(v) {\r\n    console.log(v);\r\n  }\r\n  validator() {\r\n    return true;\r\n  }\r\n  changeValue(data: any) {\r\n    this.releaseType = data;\r\n  }\r\n  /**\r\n   * 发布前审核：提交审批\r\n   */\r\n  private mySubmit(dataId: string, bizDefKey: string) {\r\n    this.submitService.submitWithBizDefKey(dataId, bizDefKey);\r\n  }\r\n}\r\n","import { BpmnModelJsonHelper, JsonConvertableImpl } from \"@edp-aif/common-api\";\r\n\r\nexport class DocuTypeHelperEntity extends JsonConvertableImpl {\r\n    id: string;\r\n    moduleName: string;\r\n    bizKindName: string;\r\n    bizTypeName: string;\r\n    code: string;\r\n    name: string;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected ResetBeforeLoadFrom(): void {\r\n        super.ResetBeforeLoadFrom();\r\n\r\n        this.id = null;\r\n        this.moduleName = null;\r\n        this.bizKindName = null;\r\n        this.bizTypeName = null;\r\n        this.code = null;\r\n        this.name = null;\r\n    }\r\n\r\n    public ConvertToJsonObject(): {} {\r\n        let obj = super.ConvertToJsonObject();\r\n\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"id\", this.id);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"moduleName\", this.moduleName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"bizKindName\", this.bizKindName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"bizTypeName\", this.bizTypeName);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"code\", this.code);\r\n        BpmnModelJsonHelper.SetAttributeValue(obj, \"name\", this.name);\r\n\r\n        return obj;\r\n    }\r\n\r\n    public LoadFromJsonObject(obj: {}): void {\r\n        super.LoadFromJsonObject(obj);\r\n\r\n        this.id = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"id\");\r\n        this.moduleName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"moduleName\");\r\n        this.bizKindName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"bizKindName\");\r\n        this.bizTypeName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"bizTypeName\");\r\n        this.code = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"code\");\r\n        this.name = BpmnModelJsonHelper.GetAttributeValueAsString(obj, \"name\");\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpService, SessionService } from \"@ecp-caf/caf-common\";\r\nimport { NotifyService } from \"@farris/ui-notify\";\r\nimport { BusinessObjectRtService } from \"@gsp-lcm/bo-rt-service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { DocuTypeHelperEntity } from \"./entity/DocuTypeHelperEntity\";\r\n\r\n@Injectable()\r\nexport class BillTypeHelpService {\r\n    documentTypeUrl = \"/api/runtime/aif/v1.0/documenttype\";\r\n\r\n    constructor(\r\n        public boRtService: BusinessObjectRtService,\r\n        public httpClient: HttpService,\r\n        public httpService: HttpService,\r\n        public sessionService: SessionService,\r\n        public notify: NotifyService,\r\n        public translate: TranslateService,\r\n    ) {\r\n    }\r\n\r\n    findDocumentTypeEntites() {\r\n        const body = {};\r\n        return this.httpService.post(`${this.documentTypeUrl}/docutypehelper`, body).pipe(\r\n            map(\r\n                (res: any) => {\r\n                    return res.map(it => {\r\n                        const e = new DocuTypeHelperEntity();\r\n                        e.LoadFromJsonObject(it);\r\n                        return e;\r\n                    });\r\n                }\r\n            )\r\n        );\r\n    }\r\n}","export const BILL_TYPE_HELP_LANG_RESOURCES = {\r\n    \"zh-CHS\": {\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"busineseCategory\": \"业务种类\",\r\n        \"module\": \"模块\",\r\n        \"busineseType\": \"业务类型\",\r\n        \"collapse\": \"收起\",\r\n        \"expand\": \"展开\",\r\n        \"loading\": \"加载中\",\r\n        \"allColumns\": \"所有列\",\r\n    },\r\n    \"en\": {\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"busineseCategory\": \"Businese Category\",\r\n        \"module\": \"Module\",\r\n        \"busineseType\": \"Businese Type\",\r\n        \"collapse\": \"Collapse\",\r\n        \"expand\": \"Expand\",\r\n        \"loading\": \"Loading\",\r\n        \"allColumns\": \"All Columns\",\r\n    },\r\n    \"zh-CHT\": {\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"busineseCategory\": \"業務種類\",\r\n        \"module\": \"模塊\",\r\n        \"busineseType\": \"業務類型\",\r\n        \"collapse\": \"收起\",\r\n        \"expand\": \"展開\",\r\n        \"loading\": \"加載中\",\r\n        \"allColumns\": \"所有列\",\r\n    }\r\n};","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService } from '@farris/ui-notify';\r\n\r\nimport { DocuTypeHelperEntity } from '../entity/DocuTypeHelperEntity';\r\nimport { BillTypeHelpService } from '../bill-type-help.service';\r\nimport { NodeSelectedParam, TreeNode, TreeTableComponent } from '@farris/ui-treetable';\r\nimport { AifLocalePipe, BIF_LANG_RESOURCES } from '../../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\nimport { BILL_TYPE_HELP_LANG_RESOURCES } from '../i18n/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-bill-type-help',\r\n  templateUrl: './bill-type-help.component.html',\r\n  styleUrls: ['./bill-type-help.component.css'],\r\n  providers: [\r\n    { provide: BIF_LANG_RESOURCES, useValue: BILL_TYPE_HELP_LANG_RESOURCES },\r\n    AifLocalePipe,\r\n  ]\r\n})\r\nexport class BillTypeHelpComponent implements OnInit {\r\n  @Output(\"onselected\")\r\n  onselected = new EventEmitter<DocuTypeHelperEntity>();\r\n\r\n  @ViewChild('tt')\r\n  tt: TreeTableComponent;\r\n  ttData: TreeNode[];\r\n  ttCols: any[];\r\n  ttIdField = 'id';\r\n  ttSearchFields: {\r\n    label: string;\r\n    value: string;\r\n  }[] = [];\r\n  ttSearchObj: { field: string, value: string };\r\n  ttAllColumnsTitle: string = this.localePipe.instant(\"allColumns\");\r\n\r\n  docuTypeList: DocuTypeHelperEntity[] = [];\r\n\r\n  docuTypeId: string;\r\n\r\n  constructor(\r\n    private entityService: BillTypeHelpService,\r\n    private messager: MessagerService,\r\n    private notify: NotifyService,\r\n    private modal: BsModalService,\r\n    private loading: LoadingService,\r\n    private localePipe: AifLocalePipe,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.configLookupColumns();\r\n    this.loadItems();\r\n  }\r\n\r\n  getSelectedDocuType(): DocuTypeHelperEntity {\r\n    return this.tt.selectedRow && this.tt.selectedRow.data;\r\n  }\r\n\r\n  /**\r\n   * 左侧树表搜索事件\r\n   */\r\n  ttSearch(obj: { field: string, value: string }) {\r\n    this.ttSearchObj = obj;\r\n    this.ttSearchObj && this.tt.searchHandle.search(this.ttSearchObj.field, this.ttSearchObj.value);\r\n  }\r\n\r\n\r\n  loadItems() {\r\n    let entities$: Observable<DocuTypeHelperEntity[]> = null;\r\n    entities$ = this.entityService.findDocumentTypeEntites();\r\n    const l = this.loading.show({ message: this.localePipe.instant(\"loading\") });\r\n    entities$.subscribe(\r\n      (entities: DocuTypeHelperEntity[]) => {\r\n        l.close();\r\n        this.ttData = [...this.buildTreeData(entities)];\r\n        this.docuTypeList = entities;\r\n        setTimeout(() => {\r\n          this.tt.expandAll();\r\n          if (this.docuTypeId) {\r\n            this.tt.selectNode(this.docuTypeId);\r\n          } else {\r\n            //默认选中第一条数据\r\n            this.docuTypeList && this.docuTypeList.length > 0 && this.tt.selectNode(this.docuTypeList[0].id);\r\n          }\r\n        }, 100);\r\n      },\r\n      (err) => {\r\n        l.close();\r\n        //todo 确定异常结构, 目前采用兼容取值方式\r\n        this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n        throw err;\r\n      }\r\n    );\r\n  }\r\n\r\n  ttNodeSelected(nsp: NodeSelectedParam) {\r\n    let rows: TreeNode[] = [];\r\n    if (Array.isArray(nsp.node)) {\r\n      const arr: TreeNode[] = nsp.node;\r\n      arr.forEach(it => {\r\n        rows.push(it);\r\n      });\r\n    } else {\r\n      rows.push(nsp.node);\r\n    }\r\n    if (rows.length == 0) {\r\n      return;\r\n    }\r\n    let row = rows[0];\r\n    this.docuTypeId = row.id;\r\n  }\r\n\r\n  buildTreeData(entities: DocuTypeHelperEntity[]): TreeNode[] {\r\n    const nodes: TreeNode[] = [];\r\n    const map: {\r\n      [key: string]: DocuTypeHelperEntity[]\r\n    } = {};\r\n    entities && entities.forEach(it => {\r\n      if (map[it.bizKindName] == null) {\r\n        map[it.bizKindName] = [it];\r\n      } else {\r\n        map[it.bizKindName].push(it);\r\n      }\r\n    });\r\n\r\n    Object.keys(map).forEach(key => {\r\n      const node: TreeNode = {\r\n        id: key,\r\n        data: {\r\n          id: key,\r\n          bizKindName: key,\r\n          treeInfo: {\r\n            layer: 1,\r\n          }\r\n        },\r\n        selectable: false,\r\n        leaf: false,\r\n      };\r\n\r\n      const children = map[key].map(it => {\r\n        const node: TreeNode = {\r\n          id: it.id,\r\n          data: {\r\n            ...it,\r\n            treeInfo: {\r\n              layer: 2,\r\n              parentId: key,\r\n            },\r\n          },\r\n          selectable: true,\r\n          leaf: true\r\n        };\r\n\r\n        return node;\r\n      });\r\n\r\n      node.children = children;\r\n\r\n      nodes.push(node);\r\n    });\r\n\r\n    return nodes;\r\n  }\r\n\r\n  private configLookupColumns() {\r\n    this.ttCols = [\r\n      { field: \"bizKindName\", title: this.localePipe.instant(\"busineseCategory\"), width: 100 },\r\n      { field: \"name\", title: this.localePipe.instant(\"name\"), width: 80 },\r\n      { field: \"code\", title: this.localePipe.instant(\"code\"), width: 80 },\r\n      { field: \"moduleName\", title: this.localePipe.instant(\"module\"), width: 100 },\r\n      { field: \"bizTypeName\", title: this.localePipe.instant(\"busineseType\"), width: 100 },\r\n    ];\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { GSPViewModel } from '@gsp-bef/gsp-vo-metadata';\r\nimport { Metadata4RefDto, SelectMetadataRTComponent } from '@gsp-lcm/metadatart-selector';\r\nimport { FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { BillTypeHelpComponent } from '../bill-type-help/bill-type-help/bill-type-help.component';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\ntype VoConfig = {\r\n  currentVoId?: string;\r\n  currentVoName?: string;\r\n  currentDocumentTypeId?: string;\r\n  currentDocumentTypeName?: string;\r\n};\r\n\r\n@Component({\r\n  selector: 'lib-vo-config',\r\n  templateUrl: './vo-config.component.html',\r\n  styleUrls: [],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class VoConfigComponent implements OnInit {\r\n  readonly groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @Input()\r\n  set value(data: VoConfig) {\r\n    if (data) {\r\n      this.entity = data || {};\r\n    }\r\n  }\r\n\r\n  @Input() editorParams: {\r\n    bizTypeId?: string\r\n  } = {};\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.voConfig.documentInfo\"),\r\n    width: 500,\r\n    height: 240,\r\n    showButtons: true\r\n  };\r\n\r\n  entity: VoConfig = {};\r\n\r\n  constructor(\r\n    private messager: MessagerService,\r\n    private notify: NotifyService,\r\n    private modal: BsModalService,\r\n    private framework: FrameworkService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loading: LoadingService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private inj: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOk() {\r\n    const obj = { value: this.entity, parameters: null };\r\n    this.submitModal.emit(obj);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  selectVo() {\r\n    const compFactory = this.cfr.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.inj);\r\n    compRef.instance.typeList = 'GSPViewModel';\r\n    // 元数据选择器bizTypeId表示业务种类Id\r\n    compRef.instance.bizTypeId = this.editorParams && this.editorParams.bizTypeId;\r\n\r\n    compRef.instance.selectedMetadata.subscribe(\r\n      (metadata4RefDto: Metadata4RefDto) => {\r\n        this.clearVo();\r\n        const voDto = metadata4RefDto.metadata;\r\n        const vo: GSPViewModel = JSON.parse(voDto.content);\r\n\r\n        this.entity.currentVoId = vo.ID;\r\n        this.entity.currentVoName = vo.Name;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n        // todo 确定异常结构, 目前采用兼容取值方式\r\n        this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n        this.clearVo();\r\n      }\r\n    );\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"component.voConfig.viewModelSelection\"),\r\n      width: 930,\r\n      height: 573,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modal.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n\r\n  clearVo() {\r\n    this.entity.currentVoId = undefined;\r\n    this.entity.currentVoName = undefined;\r\n  }\r\n\r\n  selectDocuType() {\r\n    const cmpF = this.cfr.resolveComponentFactory(BillTypeHelpComponent);\r\n    const cmpR = cmpF.create(this.inj, []);\r\n    cmpR.instance.docuTypeId = this.entity.currentDocumentTypeId;\r\n\r\n    const buttons = [];\r\n    buttons.push(\r\n      {\r\n        text: this.localePipe.transform(\"component.voConfig.cancel\"),\r\n        cls: \"btn btn-secondary\",\r\n        handle: () => {\r\n          bsModal && bsModal.close();\r\n        }\r\n      }\r\n    );\r\n\r\n    buttons.push(\r\n      {\r\n        text: this.localePipe.transform(\"component.voConfig.clickOk\"),\r\n        cls: \"btn btn-primary\",\r\n        handle: () => {\r\n          const docuType = cmpR.instance.getSelectedDocuType();\r\n          if (docuType == null) {\r\n            this.notify.warning(this.localePipe.transform(\"component.voConfig.selectOne\"));\r\n            return;\r\n          }\r\n          this.entity.currentDocumentTypeId = docuType.id;\r\n          this.entity.currentDocumentTypeName = docuType.name;\r\n          bsModal && bsModal.close();\r\n        }\r\n      },\r\n    );\r\n\r\n    const bsModal = this.modal.show(cmpR, {\r\n      title: this.localePipe.transform(\"component.voConfig.documentTypeSelect\"),\r\n      height: 573,\r\n      width: 930,\r\n      buttons: buttons,\r\n      showMaxButton: false,\r\n    });\r\n  }\r\n\r\n  clearDocuType() {\r\n    this.entity.currentDocumentTypeId = undefined;\r\n    this.entity.currentDocumentTypeName = undefined;\r\n  }\r\n}\r\n\r\nexport class VoConfigConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: VoConfig): string {\r\n    if (data && data.currentVoId) {\r\n      return data.currentVoName || data.currentVoId || this.localePipe.transform(\"component.voConfig.set\");\r\n    }\r\n    return this.localePipe.transform(\"component.voConfig.notSet\");\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ComponentFactoryResolver, EventEmitter, Inject, Injector, Input, LOCALE_ID, OnInit, Optional, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { FarrisRadioGroupComponent } from '@farris/ui-forms';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ExpressionService } from '@gsp-svc/expression';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { SubProcessType } from '../call-activity-sub-process/SubProcessType';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\ntype WfOptins = {\r\n  subProcessType?: SubProcessType;\r\n  calledElement?: string;\r\n  calledBizDefKey?: string;\r\n  calledElementName?: string;\r\n  calledBizDefName?: string;\r\n};\r\n\r\n@Component({\r\n  selector: 'lib-wf-options',\r\n  templateUrl: './wf-options.component.html',\r\n  styleUrls: [],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class WfOptionsComponent implements OnInit {\r\n  @Input() editorParams: {\r\n    bizTypeId?: string\r\n  } = {};\r\n\r\n  @Input() set value(v: WfOptins) {\r\n    if (v) {\r\n      this.entity = v;\r\n      // 为子流程类型赋值\r\n      if (this.entity.calledElement == null || this.entity.calledElement == \"\") {\r\n        if (this.entity.calledBizDefKey == null || this.entity.calledBizDefKey == \"\") {\r\n          this.entity.subProcessType = SubProcessType.Specified;\r\n        } else {\r\n          this.entity.subProcessType = SubProcessType.Dynamic;\r\n        }\r\n      } else {\r\n        this.entity.subProcessType = SubProcessType.Specified;\r\n      }\r\n\r\n      this.getProcessDefKey(this.entity.calledElement);\r\n      this.getFlowForm(this.entity.calledBizDefKey);\r\n    }\r\n  }\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.optins.wfOptions\"),\r\n    width: 500,\r\n    height: 240,\r\n    showButtons: true\r\n  };\r\n\r\n  readonly subProcessType = SubProcessType;\r\n\r\n  entity: WfOptins;\r\n\r\n  @ViewChild(\"radioGroupProcessType\")\r\n  radioGroupProcessType: FarrisRadioGroupComponent;\r\n  radioGroupProcessTypeData = [\r\n    { value: \"Specified\", name: this.localePipe.transform(\"component.optins.specified\") },\r\n    { value: \"Dynamic\", name: this.localePipe.transform(\"component.optins.dynamic\") },\r\n  ];\r\n\r\n  constructor(\r\n    private notify: NotifyService,\r\n    private modalService: BsModalService,\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private inj: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOk() {\r\n    const obj = { value: this.entity, parameters: null };\r\n    this.submitModal.emit(obj);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  processTypeChange(val) {\r\n    console.log(val);\r\n    if (val == SubProcessType.Specified) {\r\n      this.entity.calledBizDefKey = null;\r\n      this.entity.calledBizDefName = null;\r\n    } else if (val == SubProcessType.Dynamic) {\r\n      this.entity.calledElement = null;\r\n      this.entity.calledElementName = null;\r\n    }\r\n  }\r\n\r\n\r\n  processConfirm(args: any) {\r\n    if (args) {\r\n      this.entity.calledElement = args.procDefKey;\r\n      this.entity.calledElementName = args.name;\r\n    }\r\n  }\r\n\r\n  clearProcessDef(args: any) {\r\n    this.entity.calledElement = '';\r\n    this.entity.calledElementName = '';\r\n  }\r\n\r\n  flowFormConfirm(args: any) {\r\n    if (args) {\r\n      this.entity.calledBizDefKey = args.id;\r\n      this.entity.calledBizDefName = args.name;\r\n    }\r\n  }\r\n\r\n  clearFlowForm(args: any) {\r\n    this.entity.calledBizDefKey = '';\r\n    this.entity.calledBizDefName = '';\r\n  }\r\n\r\n  getProcessDefKey(key: string) {\r\n    let url = this.util.getProcessDefinitionWebApi();\r\n    if (key) {\r\n      url += `/procDefKey/${key}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.entity.calledElementName = re.name;\r\n      });\r\n    }\r\n  }\r\n\r\n  getFlowForm(id: string) {\r\n    let url = this.util.getFlowFormWebApi();\r\n    if (id) {\r\n      url += `/${id}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.entity.calledBizDefName = re.name;\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class WfOptionsConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && (data.calledBizDefKey || data.calledElement)) {\r\n      return this.localePipe.transform(\"component.optins.set\");\r\n    }\r\n    return this.localePipe.transform(\"component.optins.notSet\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { VoConfigComponent, VoConfigConverter } from '../views/vo-config/vo-config.component';\r\nimport { WfOptionsComponent, WfOptionsConverter } from '../views/wf-options/wf-options.component';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n@Injectable()\r\nexport class BillNodeActivityAdapter {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        private localPipe: WfLocalePipe\r\n    ) {\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case \"VoConfig\":\r\n                        item.converter = new VoConfigConverter(this.localPipe);\r\n                        item.editor = VoConfigComponent;\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId\r\n                        };\r\n                        break;\r\n                    case \"WfOpts\":\r\n                        item.converter = new WfOptionsConverter(this.localPipe);\r\n                        item.editor = WfOptionsComponent;\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId\r\n                        };\r\n                        break;\r\n                    case \"wfConfig\": //启用工作流\r\n                        item.iterator = this.uiState.boolIterator;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","export enum SequenceFlowPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    ConditionExpression = \"ConditionExpression\",\r\n    Default = \"Default\",\r\n    billCreationType = \"billCreationType\",\r\n    billRelationType = \"billRelationType\",\r\n    aifAutoProcessCode = \"aifAutoProcessCode\",\r\n    aifPushProcessCode = \"aifPushProcessCode\",\r\n    aifPullProcessCode = \"aifPullProcessCode\",\r\n}","import { Injectable } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ElementPropertyConfig, PropertyEntity } from '@farris/ide-property-panel';\r\nimport { KeyMap } from '@farris/ide-property-panel';\r\nimport { ProcessListHelpComponent } from '../views/aif-process-list-help/components/process-list-help/process-list-help.component';\r\nimport { AifCreationBillProcessConverter } from '../views/aif-process-list-help/AifCreationBillProcessConverter';\r\nimport { SequenceFlowPropertyKeys } from '../designer/wf-cell/property-keys/SequenceFlowPropertyKeys';\r\nimport { AifLocalePipe } from '../views/aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\n\r\n@Injectable()\r\nexport class SequenceActivityAdapter {\r\n    constructor(\r\n        private uiState: ProcessDesignerUIState,\r\n        public localePipe: AifLocalePipe\r\n        ) {\r\n\r\n    }\r\n    setProperty(obj: any) {\r\n        this.uiState.propertyData = obj.propertyData;\r\n        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);\r\n    }\r\n\r\n    private setConfig(obj: any[]): ElementPropertyConfig[] {\r\n        const propertyConfig: ElementPropertyConfig[] = [];\r\n        if (obj) {\r\n            obj.forEach((element: ElementPropertyConfig) => {\r\n                this.setEntity(element.properties);\r\n                propertyConfig.push(element);\r\n            });\r\n        }\r\n        return propertyConfig;\r\n    }\r\n    private setEntity(obj: PropertyEntity[]) {\r\n        if (obj && obj.length > 0) {\r\n            obj.forEach((item: PropertyEntity) => {\r\n                switch (item.propertyID) {\r\n                    case SequenceFlowPropertyKeys.billCreationType:\r\n                        item.iterator = billCreationTypeKeyMap;\r\n                        break;\r\n                    case SequenceFlowPropertyKeys.billRelationType:\r\n                        item.iterator = billRelationTypeKeyMap;\r\n                        break;\r\n                    case SequenceFlowPropertyKeys.aifAutoProcessCode:\r\n                        item.editor = ProcessListHelpComponent;\r\n                        item.converter = new AifCreationBillProcessConverter(this.localePipe);\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId\r\n                        };\r\n                        break;\r\n                    case SequenceFlowPropertyKeys.aifPushProcessCode:\r\n                        item.editor = ProcessListHelpComponent;\r\n                        item.converter = new AifCreationBillProcessConverter(this.localePipe);\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId\r\n                        };\r\n                        break;\r\n                    case SequenceFlowPropertyKeys.aifPullProcessCode:\r\n                        item.editor = ProcessListHelpComponent;\r\n                        item.converter = new AifCreationBillProcessConverter(this.localePipe);\r\n                        item.editorParams = {\r\n                            bizTypeId: this.uiState.flowFormInfo.flowForm.businessObjectId\r\n                        };\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const billCreationTypeKeyMap: KeyMap[] = [\r\n    { key: \"AUTO\", value: \"自动生单\" },\r\n    { key: \"PUSH\", value: \"推式生单\" },\r\n    { key: \"PULL\", value: \"拉式生单\" },\r\n];\r\n\r\nexport const billRelationTypeKeyMap: KeyMap[] = [\r\n    { key: \"CREATION\", value: \"通过生单流程生成目标单\" },\r\n    // { key: \"EXPRESSION\", value: \"通过表达式获取目标单\" },\r\n];","import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './process-designer.uistate';\r\nimport { ProcessDesignerDataService } from '../domain/process-designer.dataservice';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\nimport { ProcessClrTypeID } from '../model/process-clrtypeId';\r\nimport { BpmnProcessViewModel } from './bpmn-process.viewmodel';\r\nimport { WFFlowElementsViewModel } from './wf-flowElements.viewModel';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { FlowFormInfo } from '../domain/entities/flowform-info';\r\nimport { of, Subject, from, Observable } from 'rxjs';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { SaveAsEditComponent } from '../views/save-as-edit/save-as-edit.component';\r\nimport { ProcessDeUtil } from '../domain/process-de-util';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { SubProcessViewModel } from './sub-process.viewmodel';\r\nimport { AutoActivityAdapter } from './auto-activity.adapter';\r\nimport { CatchEventAdapter } from './catch-event.adapter';\r\nimport { MessageActivityAdapter } from './message-activity.adapter';\r\nimport { AuditEvent, AuditProcessDefInfo } from '../domain/entities/audit-processDef-info';\r\nimport { RTProcessInfo } from '../model/rt-process-info';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { ProcessInfo } from '../model/process-info';\r\nimport { NotifyActivityAdapter } from './notify-activity.adapter';\r\nimport { FlowFormEntity } from '../domain/entities/flowform.entity';\r\nimport { AifCreationBillActivityAdapter } from './aif-creation-bill-activity.adapter';\r\nimport { EventBusService } from '../views/shared/event-bus.service';\r\nimport { ReleaseComponent } from '../views/release-component/release-component.component';\r\nimport { BillNodeActivityAdapter } from './bill-node-activity.adapter';\r\nimport { SequenceActivityAdapter } from './sequecne-activity.adapter';\r\nimport { BpmnModel } from '@edp-pmf/bpmn-model';\r\nimport { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class ProcessDesignerViewModel {\r\n  constructor(\r\n    public uiState: ProcessDesignerUIState,\r\n    private service: ProcessDesignerDataService,\r\n    private util: ProcessDeUtil,\r\n    private notify: NotifyService,\r\n    private message: MessagerService,\r\n    private process: BpmnProcessViewModel,\r\n    private activity: WFFlowElementsViewModel,\r\n    private subProcess: SubProcessViewModel,\r\n    private autoActAdapter: AutoActivityAdapter,\r\n    private catchEventAdapter: CatchEventAdapter,\r\n    private messageActAdapter: MessageActivityAdapter,\r\n    private notifyActAdapter: NotifyActivityAdapter,\r\n    private creationActAdapter: AifCreationBillActivityAdapter,\r\n    private billNodeActivityAdapter: BillNodeActivityAdapter,\r\n    private sequenceActivityAdapter: SequenceActivityAdapter,\r\n    private modalService: BsModalService,\r\n    private injector: Injector,\r\n    private resolver: ComponentFactoryResolver,\r\n    private http: HttpService,\r\n    private eventBus: EventBusService,\r\n    private localePipe: WfLocalePipe\r\n  ) {\r\n  }\r\n\r\n  // 初始加载流程属性\r\n  initProcessProperty(obj: any) {\r\n    const pptData = obj.propertyData;\r\n    const ffId = pptData.EntryForm;\r\n    if (ffId) {\r\n      pptData.EntryForm = this.uiState.flowFormInfo.flowForm;\r\n      this.uiState.propertyConfig = this.process.setProcessConfig(obj.propertyConfig);\r\n      this.uiState.propertyData = pptData;\r\n    } else {\r\n      this.uiState.propertyConfig = this.process.setProcessConfig(obj.propertyConfig);\r\n      this.uiState.propertyData = pptData;\r\n    }\r\n  }\r\n  setProperty(obj: any) {\r\n    // 更新属性框数据与配置\r\n    const propertyData = obj.propertyData;\r\n    switch (propertyData.ClrTypeID) {\r\n      case ProcessClrTypeID.process:\r\n        this.process.setProcessProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.userActivity:\r\n        this.activity.setUserActivityProperty(obj, 'userActivity');\r\n        break;\r\n      case ProcessClrTypeID.subProcess:\r\n        this.subProcess.setProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.autoActivity:\r\n        this.autoActAdapter.setProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.catchEvent:\r\n        this.catchEventAdapter.setProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.operationActivity:\r\n        this.activity.setUserActivityProperty(obj, 'autoActivity');\r\n        break;\r\n      case ProcessClrTypeID.messageActivity:\r\n        this.messageActAdapter.setProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.notifyActivity:\r\n        this.notifyActAdapter.setProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.aifCreationBillActivity:\r\n        this.creationActAdapter.setProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.billNodeActivity:\r\n        this.billNodeActivityAdapter.setProperty(obj);\r\n        break;\r\n      case ProcessClrTypeID.sequenceActivity:\r\n        this.sequenceActivityAdapter.setProperty(obj);\r\n        break;\r\n      default:\r\n        this.activity.setFlowElementProperty(obj);\r\n        break;\r\n    }\r\n  }\r\n  public updateSchemas(): Observable<any> {\r\n    const $schemas = new Subject<any>();\r\n    this.uiState.schemas = [];\r\n    // 检查是否有精简be，如果有则覆盖原有be\r\n    if (this.uiState.flowFormInfo.formalParameters && this.uiState.flowFormInfo.formalParameters.length > 0) {\r\n      const schemaParams = this.uiState.flowFormInfo.formalParameters.filter(p => p.dataType === 'CDTSchema' && p.schemaMetadataId);\r\n      const bizDefKey = this.uiState.flowFormInfo.flowForm.id;\r\n      this.getBeMappingByBizDefKey(bizDefKey).subscribe((re) => {\r\n        if (re && re.enable) {\r\n          return this.service.getBusinessEntitybyId(re.newSchemaMetaDataId).subscribe(\r\n            d => {\r\n              let data = [d];\r\n              if (data && data.length > 0) {\r\n                data.forEach((d: any) => {\r\n                  this.uiState.schemas.push(d);\r\n                });\r\n              }\r\n              $schemas.next(true);\r\n            }, err => {\r\n              this.uiState.schemas = [];\r\n              $schemas.next(true);\r\n            })\r\n        } else {\r\n          forkJoin(schemaParams.map(para => {\r\n            return this.service.getBusinessEntitybyId(para.schemaMetadataId);\r\n          })).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n              data.forEach((d: any) => {\r\n                this.uiState.schemas.push(d);\r\n              });\r\n            }\r\n            $schemas.next(true);\r\n          }, err => {\r\n            this.uiState.schemas = [];\r\n            $schemas.next(true);\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.uiState.schemas = [];\r\n      $schemas.next(true);\r\n    }\r\n    return $schemas.asObservable();\r\n  }\r\n\r\n  public getFlowFormInfoById(formId: string): Observable<FlowFormInfo> {\r\n    const $flowform = new Subject<FlowFormInfo>();\r\n    if (formId) {\r\n      forkJoin(this.service.GetFlowFormbyId(formId),\r\n        this.service.getParametersbyFlowFormKey(formId).pipe(\r\n          map((params: any[]) => {\r\n            this.setFormParamCxt(params);\r\n            return params;\r\n          })\r\n        ),\r\n        this.service.getComponentsbyFlowformkey(formId),\r\n        this.service.getExecuteFormbyFlowFormKey(formId),\r\n        this.service.getBizActivities(formId),\r\n        this.service.getCustomizeActions(formId)\r\n      ).subscribe((re: any[]) => {\r\n        const flowform = new FlowFormInfo();\r\n        flowform.flowForm = re[0];\r\n        flowform.formalParameters = re[1];\r\n        flowform.bizComponents = re[2].filter(cmp => cmp.ownerType !== 'Activity');\r\n        flowform.excuteForms = re[3];\r\n        flowform.bizActivities = re[4];\r\n        flowform.customizeActions = re[5];\r\n        this.uiState.flowFormInfo = flowform;\r\n        this.updateSchemas().subscribe((re) => {\r\n          $flowform.next(flowform);\r\n        });\r\n      });\r\n    }\r\n    return $flowform.asObservable();\r\n  }\r\n\r\n  public getFormFormatsByBizCategory(): Observable<any> {\r\n    if (this.uiState.flowFormInfo.flowForm.businessObjectId) {\r\n      let url = `/api/runtime/wf/v1.0/formFormat/query?param=`;\r\n      let param = `{\"bizCategory\":\"${this.uiState.flowFormInfo.flowForm.businessObjectId}\"}`;\r\n      param = encodeURIComponent(param);\r\n      url += param;\r\n      return this.http.get(url);\r\n    } else {\r\n      return from(new Array());\r\n    }\r\n  }\r\n  /**\r\n   * 保存流程\r\n   * @param content 流程上下文\r\n   */\r\n  saveProcess(content: string, processInfo: ProcessInfo, state: number): Observable<any> {\r\n    return this.service.saveProcess(content, processInfo, state);\r\n  }\r\n  /**\r\n   * 发布流程\r\n   * @param content 流程上下文\r\n   */\r\n  deployProcess(content: string): Observable<any> {\r\n    return this.service.deployProcess(content);\r\n  }\r\n  /**\r\n   * 带审核的发布流程\r\n   * @param content 流程上下文\r\n   */\r\n  releaseProcess(content: string, version) {\r\n    const process = JSON.parse(content);\r\n    const compFactory = this.resolver.resolveComponentFactory(ReleaseComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.procName = process.DefaultProcess.Name;\r\n    compRef.instance.procVersion = version === 1 ? 1 : version + 1;\r\n    compRef.instance.processDefinitionKey = process.DefaultProcess.Key;\r\n    const modalOptions = {\r\n      title: this.localePipe.transform('app.processDesigner.releaseProcess'),\r\n      width: 500, height: 550,\r\n      buttons: compRef.instance.btnRef,\r\n      showButtons: true\r\n    };\r\n    const dlg = this.modalService.show(compRef, modalOptions);\r\n    compRef.instance.submit.subscribe((re: any) => {\r\n      dlg.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(re => {\r\n      dlg.close();\r\n    });\r\n  }\r\n\r\n  auditProcessDef(auditId: AuditEvent, success: boolean, key: string) {\r\n    const info = new AuditProcessDefInfo();\r\n    info.auditId = auditId;\r\n    info.success = success;\r\n    info.processDefKey = key;\r\n\r\n    this.service.auditProcessDef(info);\r\n  }\r\n\r\n  /**\r\n   * 保存运行时流程\r\n   * @param content 流程上下文\r\n   */\r\n  saveRTProcess(content: string, procDefId: string): Observable<any> {\r\n    return this.service.saveRTProcess(content, procDefId);\r\n  }\r\n\r\n  saveAsProcess(process: BpmnModel, processInfo: ProcessInfo) {\r\n    const compFactory = this.resolver.resolveComponentFactory(SaveAsEditComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.procKey = process.DefaultProcess.Key;\r\n    compRef.instance.procName = process.DefaultProcess.Name + this.localePipe.transform('app.processDesigner.copy');\r\n    compRef.instance.isAdministratorConfig = this.uiState.isAdministratorConfig;\r\n    compRef.instance.enableAdminOrgAut = this.uiState.enableAdminOrgAut;\r\n    compRef.instance.administrator = this.uiState.administrator;\r\n    compRef.instance.accessLevel = processInfo.accessLevel;\r\n    if (!this.uiState.enableAdminOrgAut && !this.uiState.isAdministratorConfig) {\r\n      compRef.instance.organization = processInfo.procOrg.orgId;\r\n      compRef.instance.organizationName = processInfo.procOrg.orgName;\r\n    }\r\n    const modalOptions = {\r\n      title: this.localePipe.transform('app.processDesigner.saveAs'),\r\n      width: 450, height: 400,\r\n      buttons: compRef.instance.btnRef,\r\n      showButtons: true\r\n    };\r\n    const dlg = this.modalService.show(compRef, modalOptions);\r\n    compRef.instance.submit.subscribe((re: any) => {\r\n      process.DefaultProcess.Name = re.procName;\r\n      const procInfo = new ProcessInfo();\r\n      procInfo.accessLevel = re.accessLevel;\r\n      procInfo.procOrg = {\r\n        orgId: re.organization,\r\n        orgName: re.organizationName\r\n      };\r\n      this.saveProcess(process.ConvertToJson(), procInfo, 1).subscribe(r => {\r\n        this.notify.success({\r\n          title: this.localePipe.transform('app.processDesigner.tips'), msg: this.localePipe.transform('app.processDesigner.saveAsSuccess'), timeout: 3000\r\n        } as NotifyOptions);\r\n      }, err => {\r\n        this.notify.error({\r\n          title: this.localePipe.transform('app.processDesigner.tips'), msg: this.localePipe.transform('app.processDesigner.saveAsFail'), timeout: 3000\r\n        } as NotifyOptions);\r\n      });\r\n      dlg.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(r => {\r\n      dlg.close();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * 同步设计器时流程定义\r\n   */\r\n  syncDtProcess(content: string, rtProcessInfo: RTProcessInfo, showTip = true) {\r\n    if (content) {\r\n      const process = JSON.parse(content);\r\n      if (showTip) {\r\n        this.message.question(this.localePipe.transform('app.processDesigner.syncDt'), () => {\r\n          this.service.syncDtProcess(content, rtProcessInfo).subscribe((data) => {\r\n            this.notify.success({\r\n              title: this.localePipe.transform('app.processDesigner.tips'), msg: this.localePipe.transform('app.processDesigner.syncSuccess'), timeout: 3000\r\n            } as NotifyOptions);\r\n            this.auditProcessDef(AuditEvent.WF_ProcessDef_SyncDT, true, process.DefaultProcess.Key);\r\n          },\r\n            (error: HttpErrorResponse) => {\r\n              this.notify.error({\r\n                title: this.localePipe.transform('app.processDesigner.tips'), msg: error.error.Message, timeout: 3000\r\n              } as NotifyOptions);\r\n              this.auditProcessDef(AuditEvent.WF_ProcessDef_SyncDT, false, process.DefaultProcess.Key);\r\n            });\r\n        });\r\n      } else {\r\n        this.service.syncDtProcess(content, rtProcessInfo).subscribe((data) => {\r\n          this.notify.success({\r\n            title: this.localePipe.transform('app.processDesigner.tips'), msg: this.localePipe.transform('app.processDesigner.syncSuccess'), timeout: 3000\r\n          } as NotifyOptions);\r\n          this.auditProcessDef(AuditEvent.WF_ProcessDef_SyncDT, true, process.DefaultProcess.Key);\r\n        },\r\n          (error: HttpErrorResponse) => {\r\n            this.notify.error({\r\n              title: this.localePipe.transform('app.processDesigner.tips'), msg: error.error.Message, timeout: 3000\r\n            } as NotifyOptions);\r\n            this.auditProcessDef(AuditEvent.WF_ProcessDef_SyncDT, false, process.DefaultProcess.Key);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  beforeCompleteStrategyChange(data: any, processInfo: RTProcessInfo): Observable<boolean> {\r\n    const url = `/api/runtime/wf/v1.0/processInstances/runtimeActivityInstances?procDefId=${processInfo.rtProcDefId}&activityDefinitionId=${data.Id}`;\r\n    return this.http.get(url).pipe(\r\n      switchMap((re: any) => {\r\n        if (re && re.length > 0) {\r\n          this.message.info(this.localePipe.transform('app.processDesigner.beforeCompleteStrategyChange'));\r\n          return of(false);\r\n        } else {\r\n          return of(true);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public getProcessCategory(procCategoryId: string): Observable<FlowFormEntity> {\r\n    return this.service.GetFlowFormbyId(procCategoryId);\r\n  }\r\n\r\n\r\n  private setFormParamCxt(params: any[]) {\r\n    this.uiState.formalParameterContext = [];\r\n    if (params && params.length > 0) {\r\n      params.forEach(param => {\r\n        if (param.dataType === 'CDTSchema') {\r\n          const formalParameterContext = [{\r\n            key: `schemaId_${param.code}`,\r\n            name: `schemaId_${param.name}`,\r\n            description: `schemaId_${param.name}`\r\n          }, {\r\n            key: `metadataId_${param.code}`,\r\n            name: `metadataId_${param.name}`,\r\n            description: `metadataId_${param.name}`\r\n          }];\r\n          this.uiState.formalParameterContext = this.uiState.formalParameterContext.concat(formalParameterContext);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  public copy(ResourceKeys, data) {\r\n    this.eventBus.emit(ResourceKeys, data);\r\n  }\r\n  public batchSet(ResourceKeys, data) {\r\n    this.eventBus.emit(ResourceKeys, data);\r\n  }\r\n  getProcDefsByKey(key: string): Observable<any> {\r\n    if (key) {\r\n      const url = `/api/runtime/wf/v1.0/procDefs/key?procDefKey=${key}`;\r\n      return this.http.get(url);\r\n    }\r\n  }\r\n  checkExpressionsByPayload(bizDefKey: string, schema: any): Observable<any> {\r\n    const checkExpressionsPayload = {\r\n      bizDefKey: bizDefKey,\r\n      schema: schema\r\n    };\r\n    const url = `/api/runtime/wf/v1.0/flowForm/checkExpressionsByPayload`;\r\n    return this.http.post(url, checkExpressionsPayload);\r\n  }\r\n  getBeMappingByBizDefKey(bizDefKey: string): Observable<any> {\r\n    const url = `/api/runtime/wf/v1.0/flowForm/getBeMappingByBizDefKey?bizDefKey=${bizDefKey}`;\r\n    return this.http.get(url);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, Optional, ChangeDetectorRef, LOCALE_ID, Inject } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-note',\r\n  templateUrl: './note.component.html',\r\n  styleUrls: ['./note.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class NoteComponent implements OnInit {\r\n\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n\r\n  record: string;\r\n\r\n  submit = new Subject<string>();\r\n  cancel = new Subject<any>();\r\n\r\n  placeholder = this.localePipe.transform('component.note.placeholder');\r\n\r\n  constructor(\r\n  @Optional() private cdr: ChangeDetectorRef,\r\n  @Inject(LOCALE_ID) private localeId: string,\r\n  @Inject(WF_LANG_RESOURCES) private resources: any,\r\n  @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    this.submit.next(this.record);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n\r\n}\r\n","export class MessageReceiver {\r\n    type: string;\r\n    processParticipant: string;\r\n    activityDefName: string;\r\n    activityDefId: string;\r\n    variableParticipant: string;\r\n    variableName: string;\r\n    userIds: string;\r\n    userNames: string;\r\n    positionId: string;\r\n    positionName: string;\r\n    positionType: string;\r\n    orgId: string;\r\n    orgType: string;\r\n}","import { BizParameter } from \"./BizParameter\";\r\n\r\nexport class BizComponent {\r\n    id: string;\r\n    name: string;\r\n    executionTime: string;\r\n    metadataId: string;\r\n    methodCode: string;\r\n    actualParameters: Array<BizParameter>;\r\n    isForCompensation?: boolean;\r\n    scopeType?: string;\r\n}","export class BizParameter {\r\n    code: string;\r\n    name: string;\r\n    value: string;\r\n}","/**\r\n * Wf相关常量\r\n */\r\nexport class WfConstants {\r\n    static getBasePath() {\r\n        try {\r\n            return (window as any).gspframeworkService.common.getBasePath.get();\r\n        } catch (error) {\r\n        }\r\n    }\r\n    static PF_CMP_ID1 = '7433df25-9260-4c24-86f0-9da3e89450fb';\r\n    static PF_CMP_ID2 = 'd0783800-ed60-488c-b053-8806a15947fe';\r\n    static PF_CMP_ID3 = 'b89e9b9a-2e2d-4bd0-b354-187219544d34';\r\n    static PF_CMP_ID4 = 'a8b8f7a4-49ae-4b7d-88d2-b3772b9d0ae5';\r\n    static IMAGE_PATH = WfConstants.getBasePath() + \"/platform/runtime/common/web/@gsp-wf/wf-process-editor/images\";\r\n}","import { WfConstants } from \"./WfConstants\";\r\n\r\nexport class WfDesignerUtils {\r\n    /**\r\n     * 是否为共享流程构件\r\n     * @param metadataId \r\n     * @returns \r\n     */\r\n    public static isPfComponent(metadataId: string) {\r\n        if (metadataId === WfConstants.PF_CMP_ID1\r\n            || metadataId === WfConstants.PF_CMP_ID2\r\n            || metadataId === WfConstants.PF_CMP_ID3\r\n            || metadataId === WfConstants.PF_CMP_ID4) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 创建内码\r\n     */\r\n    public static createNM() {\r\n        function S4() {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n}","/**\r\n * 工作流事件\r\n */\r\nexport enum WfEvents {\r\n    ShowTips = \"ShowTips\",\r\n}","export class Participant {\r\n    id: string;\r\n    type: string;\r\n    condition?: string;\r\n    order: number;\r\n}","import { Participant } from \"./Participant\";\r\n\r\nexport class UserParticipant extends Participant {\r\n    performerId: string;\r\n    performerName: string;\r\n    orgId?: string;\r\n    orgName?: string;\r\n    orgType?: string;\r\n    tag?: string;\r\n}\r\n","import { UserParticipant } from \"./UserParticipant\";\r\n\r\nexport class VariablePerformer extends UserParticipant {\r\n    name: string\r\n    varValue: string;\r\n    varType: string;\r\n    relation: string;\r\n}","import { UserParticipant } from \"./UserParticipant\";\r\n\r\nexport class PositionParticipant extends UserParticipant {\r\n    positionType: string;\r\n    isRequired?: boolean;\r\n}","import { ActualParameter } from \"./ActualParameter\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class ComponentParticipant extends Participant {\r\n    name: string;\r\n    metadataId: string;\r\n    methodCode: string;\r\n    methodName: string;\r\n    actualParameters: Array<ActualParameter>;\r\n}","import { UserParticipant } from \"./UserParticipant\";\r\n\r\nexport class ReportingLineParticipant extends UserParticipant {\r\n    reportingLineDefId: string;\r\n    reportingLineDefName: string;\r\n    refOrgId: string;\r\n    refOrgName: string;\r\n    refUserId: string;\r\n    refEmployeeId: string;\r\n    dimension: string;\r\n    reportingReferObject: string;\r\n}","import { UserParticipant } from \"./UserParticipant\";\r\n\r\nexport class ActivityExecutorParticipant extends UserParticipant {\r\n    activityDefId: string;\r\n    activityDefName: string;\r\n  }","import { UserParticipant } from \"./UserParticipant\";\r\n\r\nexport class MatrixParticipant extends UserParticipant {\r\n    /**\r\n     * 用于存储字段id\r\n     */\r\n    matrixDefId: string;\r\n    matrixDefName: string;\r\n    conditionField1: string;\r\n    conditionFieldText1: string;\r\n    conditionField2: string;\r\n    conditionFieldText2: string;\r\n    conditionField3: string;\r\n    conditionFieldText3: string;\r\n    multivaluedCondition: string;\r\n    dataFieldAlias: string;\r\n}","import { ActionScope } from \"./ActionScope\";\r\nimport { OrganizationLevel } from \"./OrganizationLevel\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class OrganizationParticipant extends Participant {\r\n    name: string;\r\n    actionScope: ActionScope;\r\n    organizationLevel: OrganizationLevel;\r\n    organizationId: string;\r\n    organizationCode: string;\r\n    organizationName: string;\r\n    includeChildren: boolean;\r\n    parentsUntil: boolean;\r\n    tag: string;\r\n}","export enum ActionScope {\r\n    /**\r\n     * 指派\r\n     */\r\n    AssignUser = 'AssignUser',\r\n    /**\r\n     * 移交\r\n     */\r\n    Transfer = 'Transfer',\r\n    /**\r\n     * 征询\r\n     */\r\n    AddSignFront = 'AddSignFront',\r\n    /**\r\n     * 加签\r\n     */\r\n    AddSignBehind = 'AddSignBehind',\r\n    /**\r\n     * 知会\r\n     */\r\n    Notify = 'Notify',\r\n}","import { BpmnModel, ExtensionElement, DataType, DataTypes, DataObject, Process } from \"@edp-pmf/bpmn-model\";\r\nimport { ValuedDataObject, CDTSchemaType, HumanPerformerImpl, PotentialOwnerImpl, ParticipantExpression, VariableParticipantExpression, ComponentParticipantExpression, ReportingLineParticipantExpression, MatrixParticipantExpression, OrganizationParticipantExpression, VariableSetting, Component, MessageNotice, ActivityExecutorParticipantExpression, UserParticipantExpression, PositionParticipantExpression } from \"@gsp-wf/wf-process-model\";\r\nimport { BizComponent } from \"../entity/BizComponent\";\r\nimport { BizParameter } from \"../entity/BizParameter\";\r\nimport { UserParticipant } from \"../entity/UserParticipant\";\r\nimport { Participant } from \"../entity/Participant\";\r\nimport { VariablePerformer } from \"../entity/VariablePerformer\";\r\nimport { PositionParticipant } from \"../entity/PositionParticipant\";\r\nimport { ComponentParticipant } from \"../entity/ComponentParticipant\";\r\nimport { ReportingLineParticipant } from \"../entity/ReportingLineParticipant\";\r\nimport { ActivityExecutorParticipant } from \"../entity/ActivityExecutorParticipant\";\r\nimport { MatrixParticipant } from \"../entity/MatrixParticipant\";\r\nimport { OrganizationParticipant } from \"../entity/OrganizationParticipant\";\r\nimport { ActionScope } from \"../entity/ActionScope\";\r\nimport { MessageReceiver } from \"../entity/MessageReceiver\";\r\nimport { WfDesignerUtils } from \"../WfDesignerUtils\";\r\nimport { mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { ActionOrganizationScope, OrganizationPotentialOwner } from \"../../views/organization-potential-owner/actionOrganizationScope\";\r\nimport { ParticipantInfo } from \"../../views/participant/participant.info\";\r\n\r\n/**\r\n * 属性工具\r\n */\r\nexport class PropertyHelper {\r\n    /**\r\n     * 获取变量赋值列表\r\n     * @param bpmnModel\r\n     * @param variablesSetting\r\n     * @returns\r\n     */\r\n    public static getVariableSettings(bpmnModel: BpmnModel, variablesSetting: VariableSetting[]) {\r\n        const variables = new Array();\r\n        const extendElements: ExtensionElement[] = bpmnModel.DefaultProcess.GetExtensionElements();\r\n        if (variablesSetting && variablesSetting.length > 0) {\r\n            for (const v of variablesSetting) {\r\n                const variable: any = {\r\n                    variableCode: v.variableCode,\r\n                    variableName: v.variableName,\r\n                    tag: v.tag,\r\n                    executionTime: v.executionTime,\r\n                    value: v.value,\r\n                    valueText: v.valueText\r\n                }\r\n                if (v.tag === 'component') {\r\n                    if (extendElements.length > 0) {\r\n                        for (const e of extendElements) {\r\n                            if (e instanceof Component && e.Id === v.value) {\r\n                                const component: any = {\r\n                                    Id: e.Id,\r\n                                    Name: e.Name,\r\n                                    MetadataId: e.MetadataId,\r\n                                    MethodCode: e.MethodCode,\r\n                                    ActualParameters: []\r\n                                }\r\n                                if (e.ActualParameters && e.ActualParameters.length > 0) {\r\n                                    for (const p of e.ActualParameters) {\r\n                                        const parameter = {\r\n                                            Name: p.Name,\r\n                                            Value: p.Value,\r\n                                            Tag: p.Tag,\r\n                                        };\r\n                                        component.ActualParameters.push(parameter);\r\n                                    }\r\n                                }\r\n                                variable.component = component;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                variables.push(variable);\r\n            }\r\n        }\r\n\r\n        return variables;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param messageNotices\r\n     * @returns\r\n     */\r\n    public static getMessageNotices(messageNotices: MessageNotice[]) {\r\n        if (!messageNotices || messageNotices.length == 0) {\r\n            return null;\r\n        }\r\n        return messageNotices.map(m => {\r\n            const message: any = new Object;\r\n            message.content = m.content;\r\n            message.sendTime = m.sendTime;\r\n            message.sendType = m.sendType;\r\n            message.subject = m.subject;\r\n            if (m.smsMessageTemplate) {\r\n                const smsTemplate: any = new Object;\r\n                smsTemplate.code = m.smsMessageTemplate.code;\r\n                smsTemplate.content = m.smsMessageTemplate.content;\r\n                smsTemplate.smsMessageVariables = new Array();\r\n                if (m.smsMessageTemplate.smsMessageVariables && m.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                    for (const v of m.smsMessageTemplate.smsMessageVariables) {\r\n                        const variable: any = new Object;\r\n                        variable.id = WfDesignerUtils.createNM();\r\n                        variable.code = v.code;\r\n                        variable.value = v.value;\r\n                        variable.tag = v.tag;\r\n                        smsTemplate.smsMessageVariables.push(variable);\r\n                    }\r\n                }\r\n                message.smsMessageTemplate = smsTemplate;\r\n            }\r\n            const receiverExpressions = new Array<MessageReceiver>();\r\n            if (m.receiver) {\r\n                const receivers = m.receiver.split(',');\r\n                const receiverTexts = m.receiverText.split(',');\r\n                let userReceiver = new MessageReceiver();\r\n                userReceiver.type = 'userParticipant';\r\n                userReceiver.userIds = '';\r\n                userReceiver.userNames = '';\r\n                for (const i in receivers) {\r\n                    if (receivers[i] === 'procInstCreator') {\r\n                        let procInstCreator = new MessageReceiver()\r\n                        procInstCreator.type = 'processParticipant';\r\n                        procInstCreator.processParticipant = 'procInstCreator';\r\n                        receiverExpressions.push(procInstCreator);\r\n                    } else if (receivers[i] === 'workItemParticipant') {\r\n                        let workItemParticipant = new MessageReceiver()\r\n                        workItemParticipant.type = 'processParticipant';\r\n                        workItemParticipant.processParticipant = 'workItemParticipant';\r\n                        receiverExpressions.push(workItemParticipant);\r\n                    } else {\r\n                        userReceiver.userIds += (receivers[i] + ',');\r\n                        userReceiver.userNames += (receiverTexts[i] + ',');\r\n                    }\r\n                }\r\n                if (userReceiver.userIds) {\r\n                    userReceiver.userIds = userReceiver.userIds.substring(0, userReceiver.userIds.length - 1);\r\n                    userReceiver.userNames = userReceiver.userNames.substring(0, userReceiver.userNames.length - 1);\r\n                    receiverExpressions.push(userReceiver);\r\n                }\r\n            }\r\n            if (m.receiverExpressions && m.receiverExpressions.length > 0) {\r\n                for (const e of m.receiverExpressions) {\r\n                    if (e instanceof ActivityExecutorParticipantExpression) {\r\n                        let activityExecutorParticipant = new MessageReceiver();\r\n                        activityExecutorParticipant.type = 'processParticipant';\r\n                        activityExecutorParticipant.processParticipant = 'activityExecutorParticipant';\r\n                        activityExecutorParticipant.activityDefId = e.activityDefId;\r\n                        activityExecutorParticipant.activityDefName = e.activityDefName;\r\n\r\n                        receiverExpressions.push(activityExecutorParticipant);\r\n                    } else if (e instanceof UserParticipantExpression) {\r\n                        let variableReceiver = new MessageReceiver();\r\n                        variableReceiver.type = 'variableParticipant';\r\n                        variableReceiver.variableParticipant = e.UserId;\r\n                        variableReceiver.variableName = e.name;\r\n                        variableReceiver.orgType = e.OrgType;\r\n                        receiverExpressions.push(variableReceiver);\r\n                    } else if (e instanceof PositionParticipantExpression) {\r\n                        let positionReceiver = new MessageReceiver();\r\n                        positionReceiver.type = 'positionParticipant';\r\n                        positionReceiver.positionId = e.PositionId;\r\n                        positionReceiver.positionName = e.PositionName;\r\n                        positionReceiver.positionType = e.PositionType;\r\n                        if (positionReceiver.positionType === '1') {\r\n                            positionReceiver.orgId = e.OrgId;\r\n                            positionReceiver.orgType = e.OrgType;\r\n                        }\r\n\r\n                        receiverExpressions.push(positionReceiver);\r\n                    }\r\n                }\r\n            }\r\n            if (receiverExpressions.length > 0) {\r\n                message.receivers = receiverExpressions;\r\n            }\r\n            return message;\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param components\r\n     * @returns\r\n     */\r\n    public static getBizComponentList(components: Array<Component>): Array<BizComponent> {\r\n        const bizComponentList = new Array();\r\n        if (components && components.length > 0) {\r\n            for (const component of components) {\r\n                const bizComponent = new BizComponent();\r\n                bizComponent.id = component.Id;\r\n                bizComponent.name = component.Name;\r\n                bizComponent.metadataId = component.MetadataId;\r\n                bizComponent.methodCode = component.MethodCode;\r\n                bizComponent.executionTime = component.Time;\r\n                bizComponent.isForCompensation = component.isForCompensation;\r\n                bizComponent.scopeType = component.ScopeType || null;\r\n                bizComponent.actualParameters = new Array();\r\n                if (component.ActualParameters && component.ActualParameters.length > 0) {\r\n                    for (const param of component.ActualParameters) {\r\n                        const bizParam = new BizParameter();\r\n                        bizParam.code = param.Name;\r\n                        bizParam.name = param.Name;\r\n                        bizParam.value = param.Value;\r\n                        bizComponent.actualParameters.push(bizParam);\r\n                    }\r\n                }\r\n                bizComponentList.push(bizComponent);\r\n            }\r\n        }\r\n        return bizComponentList;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param roles\r\n     * @param type\r\n     * @returns\r\n     */\r\n    public static getPerformerList(roles: (HumanPerformerImpl | PotentialOwnerImpl)[]): Participant[] {\r\n        const performers = new Array<Participant>();\r\n\r\n        roles.forEach((role: HumanPerformerImpl | PotentialOwnerImpl) => {\r\n            if (role == null) {\r\n                return;\r\n            }\r\n            if (role.participantExpression instanceof UserParticipantExpression) {\r\n                const user = role.participantExpression as UserParticipantExpression;\r\n                if (user) {\r\n                    const userPerformer = new UserParticipant();\r\n                    userPerformer.id = user.id;\r\n                    userPerformer.performerId = user.UserId;\r\n                    userPerformer.performerName = user.name;\r\n                    userPerformer.type = user.ClrTypeID;\r\n                    userPerformer.orgId = user.OrgId;\r\n                    userPerformer.orgName = user.OrgName;\r\n                    userPerformer.orgType = user.OrgType;\r\n                    userPerformer.condition = role.condition ? role.condition.Value : '';\r\n                    userPerformer.tag = user.Tag;\r\n                    userPerformer.order = role.order;\r\n                    performers.push(userPerformer);\r\n                }\r\n            } else if (role.participantExpression instanceof VariableParticipantExpression) {\r\n                const variable = role.participantExpression as VariableParticipantExpression;\r\n                if (variable) {\r\n                    const variablePerformer = new VariablePerformer();\r\n                    variablePerformer.id = variable.id,\r\n                        variablePerformer.name = variable.Name,\r\n                        variablePerformer.type = variable.ClrTypeID,\r\n                        variablePerformer.condition = role.condition ? role.condition.Value : '',\r\n                        variablePerformer.tag = variable.Tag\r\n                    variablePerformer.relation = variable.Relation;\r\n                    variablePerformer.varType = variable.VarType;\r\n                    variablePerformer.varValue = variable.VarValue;\r\n                    variablePerformer.order = role.order;\r\n                    performers.push(variablePerformer);\r\n                }\r\n            } else if (role.participantExpression instanceof PositionParticipantExpression) {\r\n                const position = role.participantExpression as PositionParticipantExpression;\r\n                if (position) {\r\n                    const positionPerformer = new PositionParticipant();\r\n                    positionPerformer.id = position.id;\r\n                    positionPerformer.performerId = position.PositionId;\r\n                    positionPerformer.positionType = position.PositionType;\r\n                    positionPerformer.performerName = position.PositionName;\r\n                    positionPerformer.type = position.ClrTypeID;\r\n                    positionPerformer.orgId = position.OrgId || '';\r\n                    positionPerformer.orgName = position.OrgName || '';\r\n                    positionPerformer.orgType = position.OrgType || '';\r\n                    positionPerformer.condition = role.condition ? role.condition.Value : '';\r\n                    positionPerformer.order = role.order;\r\n                    performers.push(positionPerformer);\r\n                }\r\n            } else if (role.participantExpression instanceof ComponentParticipantExpression) {\r\n                const cmp = role.participantExpression as ComponentParticipantExpression;\r\n                if (cmp) {\r\n                    const componentPerformer = new ComponentParticipant();\r\n                    componentPerformer.id = cmp.id;\r\n                    componentPerformer.name = cmp.componentName;\r\n                    componentPerformer.metadataId = cmp.componentId;\r\n                    componentPerformer.methodCode = cmp.methodCode;\r\n                    componentPerformer.methodName = cmp.methodName;\r\n                    componentPerformer.type = cmp.ClrTypeID;\r\n                    componentPerformer.actualParameters = new Array();\r\n\r\n                    if (cmp.actualParameters && cmp.actualParameters.length > 0) {\r\n                        let paramters: any = [];\r\n                        cmp.actualParameters.forEach(p => paramters.push({ code: p.Name, value: p.Value, valueText: p.ValueText, tag: p.Tag }));\r\n                        componentPerformer.actualParameters = paramters;\r\n                    }\r\n                    if (role.condition) {\r\n                        componentPerformer.condition = role.condition.Value;\r\n                    }\r\n                    componentPerformer.order = role.order;\r\n                    performers.push(componentPerformer);\r\n                }\r\n            } else if (role.participantExpression instanceof ReportingLineParticipantExpression) {\r\n                const r = role.participantExpression as ReportingLineParticipantExpression;\r\n                if (r) {\r\n                    const reportingLine = new ReportingLineParticipant();\r\n                    reportingLine.id = r.id;\r\n                    reportingLine.reportingLineDefId = r.ReportingLineDefId;\r\n                    reportingLine.reportingLineDefName = r.ReportingLineDefName;\r\n                    reportingLine.refOrgId = r.RefOrgId;\r\n                    reportingLine.refUserId = r.RefUserId;\r\n                    reportingLine.refEmployeeId = r.RefEmployeeId;\r\n                    reportingLine.dimension = r.Dimension;\r\n                    reportingLine.performerName = r.RefUserId;\r\n                    reportingLine.tag = r.Tag;\r\n                    reportingLine.type = r.ClrTypeID;\r\n                    if (role.condition) {\r\n                        reportingLine.condition = role.condition.Value;\r\n                    }\r\n                    reportingLine.order = role.order;\r\n                    performers.push(reportingLine);\r\n                }\r\n            } else if (role.participantExpression instanceof ActivityExecutorParticipantExpression) {\r\n                const r = role.participantExpression as ActivityExecutorParticipantExpression;\r\n                if (r) {\r\n                    const activityExecutor = new ActivityExecutorParticipant();\r\n                    activityExecutor.id = r.id;\r\n                    activityExecutor.type = r.ClrTypeID;\r\n                    activityExecutor.activityDefId = r.activityDefId;\r\n                    activityExecutor.activityDefName = r.activityDefName;\r\n                    activityExecutor.performerName = '<' + r.activityDefName + mxResources.get('eventHandler');\r\n                    if (role.condition) {\r\n                        activityExecutor.condition = role.condition.Value;\r\n                    }\r\n                    activityExecutor.order = role.order;\r\n                    performers.push(activityExecutor);\r\n                }\r\n            } else if (role.participantExpression instanceof MatrixParticipantExpression) {\r\n                const r = role.participantExpression as MatrixParticipantExpression;\r\n                if (r) {\r\n                    const matrix = new MatrixParticipant();\r\n                    matrix.id = r.id;\r\n                    matrix.matrixDefId = r.matrixDefId;\r\n                    matrix.matrixDefName = r.matrixDefName;\r\n                    matrix.conditionField1 = r.conditionField1;\r\n                    matrix.conditionFieldText1 = r.conditionFieldText1;\r\n                    matrix.conditionField2 = r.conditionField2;\r\n                    matrix.conditionFieldText2 = r.conditionFieldText2;\r\n                    matrix.conditionField3 = r.conditionField3;\r\n                    matrix.conditionFieldText3 = r.conditionFieldText3;\r\n                    matrix.multivaluedCondition = r.multivaluedCondition;\r\n                    matrix.dataFieldAlias = r.dataFieldAlias;\r\n                    matrix.type = r.ClrTypeID;\r\n                    matrix.order = role.order;\r\n                    if (role.condition) {\r\n                        matrix.condition = role.condition.Value;\r\n                    }\r\n\r\n                    performers.push(matrix);\r\n                }\r\n            } else if (role.participantExpression instanceof OrganizationParticipantExpression) {\r\n                const r = role.participantExpression as OrganizationParticipantExpression;\r\n                if (r) {\r\n                    const organization = new OrganizationParticipant;\r\n                    organization.id = r.id;\r\n                    organization.type = r.ClrTypeID;\r\n                    organization.name = r.name;\r\n                    organization.actionScope = r.actionScope as any;\r\n                    organization.organizationLevel = r.organizationLevel;\r\n                    organization.organizationId = r.organizationId;\r\n                    organization.organizationCode = r.organizationCode;\r\n                    organization.organizationName = r.organizationName;\r\n                    organization.includeChildren = r.includeChildren;\r\n                    organization.parentsUntil = r.parentsUntil;\r\n                    organization.tag = r.tag;\r\n                    organization.order = role.order;\r\n                    if (role.condition) {\r\n                        organization.condition = role.condition.Value;\r\n                    }\r\n\r\n                    performers.push(organization);\r\n                }\r\n            }\r\n        });\r\n        return performers;\r\n    }\r\n\r\n    /**\r\n     * 移交等的范围，与上个方法比这里传入的是具体的参与者类型（用户参与者、岗位参与者，balbala）\r\n     * @param roles\r\n     * @param type\r\n     * @returns\r\n     */\r\n    public static getPerformerListTest(roles: ParticipantExpression[]): Participant[] {\r\n        const performers = new Array<Participant>();\r\n\r\n        roles.forEach((role: ParticipantExpression) => {\r\n            if (role == null) {\r\n                return;\r\n            }\r\n            if (role instanceof UserParticipantExpression) {\r\n                const user = role as UserParticipantExpression;\r\n                if (user) {\r\n                    const userPerformer = new UserParticipant();\r\n                    userPerformer.id = user.id;\r\n                    userPerformer.performerId = user.UserId;\r\n                    userPerformer.performerName = user.name;\r\n                    userPerformer.type = user.ClrTypeID;\r\n                    userPerformer.orgId = user.OrgId;\r\n                    userPerformer.orgName = user.OrgName;\r\n                    userPerformer.orgType = user.OrgType;\r\n                    userPerformer.condition = role.condition ? role.condition.Value : '';\r\n                    userPerformer.tag = user.Tag;\r\n                    userPerformer.order = role.order;\r\n                    performers.push(userPerformer);\r\n                }\r\n            } else if (role instanceof VariableParticipantExpression) {\r\n                const variable = role as VariableParticipantExpression;\r\n                if (variable) {\r\n                    const variablePerformer = new VariablePerformer();\r\n                    variablePerformer.id = variable.id,\r\n                        variablePerformer.name = variable.Name,\r\n                        variablePerformer.type = variable.ClrTypeID,\r\n                        variablePerformer.condition = role.condition ? role.condition.Value : '',\r\n                        variablePerformer.tag = variable.Tag\r\n                    variablePerformer.relation = variable.Relation;\r\n                    variablePerformer.varType = variable.VarType;\r\n                    variablePerformer.varValue = variable.VarValue;\r\n                    variablePerformer.order = role.order;\r\n                    performers.push(variablePerformer);\r\n                }\r\n            } else if (role instanceof PositionParticipantExpression) {\r\n                const position = role as PositionParticipantExpression;\r\n                if (position) {\r\n                    const positionPerformer = new PositionParticipant();\r\n                    positionPerformer.id = position.id;\r\n                    positionPerformer.performerId = position.PositionId;\r\n                    positionPerformer.positionType = position.PositionType;\r\n                    positionPerformer.performerName = position.PositionName;\r\n                    positionPerformer.type = position.ClrTypeID;\r\n                    positionPerformer.orgId = position.OrgId || '';\r\n                    positionPerformer.orgName = position.OrgName || '';\r\n                    positionPerformer.orgType = position.OrgType || '';\r\n                    positionPerformer.condition = role.condition ? role.condition.Value : '';\r\n                    positionPerformer.order = role.order;\r\n                    performers.push(positionPerformer);\r\n                }\r\n            } else if (role instanceof ComponentParticipantExpression) {\r\n                const cmp = role as ComponentParticipantExpression;\r\n                if (cmp) {\r\n                    const componentPerformer = new ComponentParticipant();\r\n                    componentPerformer.id = cmp.id;\r\n                    componentPerformer.name = cmp.componentName;\r\n                    componentPerformer.metadataId = cmp.componentId;\r\n                    componentPerformer.methodCode = cmp.methodCode;\r\n                    componentPerformer.methodName = cmp.methodName;\r\n                    componentPerformer.type = cmp.ClrTypeID;\r\n                    componentPerformer.actualParameters = new Array();\r\n\r\n                    if (cmp.actualParameters && cmp.actualParameters.length > 0) {\r\n                        let paramters: any = [];\r\n                        cmp.actualParameters.forEach(p => paramters.push({ code: p.Name, value: p.Value, valueText: p.ValueText, tag: p.Tag }));\r\n                        componentPerformer.actualParameters = paramters;\r\n                    }\r\n                    if (role.condition) {\r\n                        componentPerformer.condition = role.condition.Value;\r\n                    }\r\n                    componentPerformer.order = role.order;\r\n                    performers.push(componentPerformer);\r\n                }\r\n            } else if (role instanceof ReportingLineParticipantExpression) {\r\n                const r = role as ReportingLineParticipantExpression;\r\n                if (r) {\r\n                    const reportingLine = new ReportingLineParticipant();\r\n                    reportingLine.id = r.id;\r\n                    reportingLine.reportingLineDefId = r.ReportingLineDefId;\r\n                    reportingLine.reportingLineDefName = r.ReportingLineDefName;\r\n                    reportingLine.refOrgId = r.RefOrgId;\r\n                    reportingLine.refUserId = r.RefUserId;\r\n                    reportingLine.refEmployeeId = r.RefEmployeeId;\r\n                    reportingLine.dimension = r.Dimension;\r\n                    reportingLine.performerName = r.RefUserId;\r\n                    reportingLine.tag = r.Tag;\r\n                    reportingLine.type = r.ClrTypeID;\r\n                    if (role.condition) {\r\n                        reportingLine.condition = role.condition.Value;\r\n                    }\r\n                    reportingLine.order = role.order;\r\n                    performers.push(reportingLine);\r\n                }\r\n            } else if (role instanceof ActivityExecutorParticipantExpression) {\r\n                const r = role as ActivityExecutorParticipantExpression;\r\n                if (r) {\r\n                    const activityExecutor = new ActivityExecutorParticipant();\r\n                    activityExecutor.id = r.id;\r\n                    activityExecutor.type = r.ClrTypeID;\r\n                    activityExecutor.activityDefId = r.activityDefId;\r\n                    activityExecutor.activityDefName = r.activityDefName;\r\n                    activityExecutor.performerName = '<' + r.activityDefName + mxResources.get('eventHandler');\r\n                    if (role.condition) {\r\n                        activityExecutor.condition = role.condition.Value;\r\n                    }\r\n                    activityExecutor.order = role.order;\r\n                    performers.push(activityExecutor);\r\n                }\r\n            } else if (role instanceof MatrixParticipantExpression) {\r\n                const r = role as MatrixParticipantExpression;\r\n                if (r) {\r\n                    const matrix = new MatrixParticipant();\r\n                    matrix.id = r.id;\r\n                    matrix.matrixDefId = r.matrixDefId;\r\n                    matrix.matrixDefName = r.matrixDefName;\r\n                    matrix.conditionField1 = r.conditionField1;\r\n                    matrix.conditionFieldText1 = r.conditionFieldText1;\r\n                    matrix.conditionField2 = r.conditionField2;\r\n                    matrix.conditionFieldText2 = r.conditionFieldText2;\r\n                    matrix.conditionField3 = r.conditionField3;\r\n                    matrix.conditionFieldText3 = r.conditionFieldText3;\r\n                    matrix.multivaluedCondition = r.multivaluedCondition;\r\n                    matrix.dataFieldAlias = r.dataFieldAlias;\r\n                    matrix.type = r.ClrTypeID;\r\n                    matrix.order = role.order;\r\n                    if (role.condition) {\r\n                        matrix.condition = role.condition.Value;\r\n                    }\r\n\r\n                    performers.push(matrix);\r\n                }\r\n            } else if (role instanceof OrganizationParticipantExpression) {\r\n                const r = role as OrganizationParticipantExpression;\r\n                if (r) {\r\n                    const organization = new OrganizationParticipant;\r\n                    organization.id = r.id;\r\n                    organization.type = r.ClrTypeID;\r\n                    organization.name = r.name;\r\n                    organization.actionScope = r.actionScope as any;\r\n                    organization.organizationLevel = r.organizationLevel;\r\n                    organization.organizationId = r.organizationId;\r\n                    organization.organizationCode = r.organizationCode;\r\n                    organization.organizationName = r.organizationName;\r\n                    organization.includeChildren = r.includeChildren;\r\n                    organization.parentsUntil = r.parentsUntil;\r\n                    organization.tag = r.tag;\r\n                    organization.order = role.order;\r\n                    if (role.condition) {\r\n                        organization.condition = role.condition.Value;\r\n                    }\r\n\r\n                    performers.push(organization);\r\n                }\r\n            }\r\n        });\r\n        return performers;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param act\r\n     * @returns\r\n     */\r\n    public static getNotifyAble(notifyAble: boolean, dynamicParticipants: ParticipantExpression[]) {\r\n        const notifyScope = new ActionOrganizationScope();\r\n        notifyScope.action = ActionScope.Notify;\r\n        notifyScope.enable = notifyAble;\r\n\r\n        if (notifyAble) {       \r\n            const roles = dynamicParticipants.filter(r => r.actionScope === ActionScope.Notify);\r\n            let res = roles.find(r => (r as any).organizationLevel && !(r as any).order);\r\n            let list : Participant[] = [];\r\n            if(res) {\r\n                const organization = new OrganizationParticipant;\r\n                organization.id = res.id;\r\n                organization.type = res.ClrTypeID;\r\n                organization.name = res.name;\r\n                organization.actionScope = res.actionScope as any;\r\n                organization.organizationLevel = (res as any).organizationLevel;\r\n                organization.organizationId = (res as any).organizationId;\r\n                organization.organizationCode = (res as any).organizationCode;\r\n                organization.organizationName = (res as any).organizationName;\r\n                organization.includeChildren = (res as any).includeChildren;\r\n                organization.parentsUntil = (res as any).parentsUntil;\r\n                organization.tag = (res as any).tag;\r\n                organization.order = 1;\r\n                list.push(organization);\r\n            }else {\r\n                list = PropertyHelper.getPerformerListTest(roles);\r\n            }\r\n            notifyScope.scope = new OrganizationPotentialOwner();\r\n            if(list && list.length > 0) {\r\n                notifyScope.scope.participantInfo = new ParticipantInfo();\r\n                notifyScope.scope.participantInfo.potentialOwnerList = list;\r\n                notifyScope.scope.participantInfo.isAllScope = true;\r\n            }else {\r\n                notifyScope.scope.participantInfo = new ParticipantInfo();\r\n                notifyScope.scope.participantInfo.isAllScope = false;\r\n            }\r\n        }\r\n        return notifyScope;\r\n    }\r\n\r\n    public static updateFormalParameters(process: Process, parameters: any[]) {\r\n        if (!parameters) {\r\n            parameters = [];\r\n        }\r\n        let objects = process.GetDataObjects();\r\n        if (parameters !== null && parameters.length > 0) {\r\n            for (const p of parameters) {\r\n                const dataType = new DataType(process.Model);\r\n                // 先移除code相同的dataObject\r\n                for (const o of objects) {\r\n                    if (o instanceof DataObject && o.Name === p.code) {\r\n                        process.RemoveDataObject(o.Id);\r\n                    }\r\n                }\r\n                dataType.Category = DataTypes.BasicType;\r\n                dataType.BasicType = p.dataType;\r\n                dataType.Description = p.description;\r\n                // dataType.InitialValue = p.initialValue;\r\n                if (p.parameterMode === 0) {\r\n                    const dataObject = new ValuedDataObject(process.Model);\r\n                    dataObject.Name = p.code;\r\n                    dataObject.Documentation = p.name;\r\n                    dataObject.DataType = dataType;\r\n                    dataObject.IsAllowNull = p.allowNull;\r\n                    if (p.initialValue || p.initialValueType) {\r\n                        const variableSetting = new VariableSetting(process.Model);\r\n                        variableSetting.variableCode = p.code;\r\n                        variableSetting.variableName = p.name;\r\n                        variableSetting.tag = p.initialValueType;\r\n                        variableSetting.value = p.initialValue;\r\n                        variableSetting.valueText = p.initialValue;\r\n\r\n                        dataObject.variableSetting = variableSetting;\r\n                    }\r\n\r\n                    process.AddDataObject(dataObject);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { FarrisPropConfigWithData, ElementPropertyConfig, IFarrisPropertyPanelOperation, PmfEvents, ProcessCell } from \"@edp-pmf/grapheditor\";\r\nimport { BpmnModel, Process, BPMNPlane, BpmnModelHelper, ExtensionElement, DataTypes, DataType, DataObject } from \"@edp-pmf/bpmn-model\";\r\nimport { ProcessHeader, StartMode, Component, ParticipantExpression, DurationType, CDTSchemaType, ToolTime, ExecuteForm, VariableSetting, ActualParameter, TitleExpression, CustomizeAction, MessageNotice, TimeLimitControl, ExtendProperty, ImageSettings, PositionParticipantExpression, UserParticipantExpression, ValuedDataObject, TimeLimitControlInfo, SendMessageExpireOperationInfo, SendMessageExpireOperation, AutoHandleExpireOperation, AutoHandleExpireOperationInfo, ActivityExecutorParticipantExpression, SmsMessageTemplate, SmsMessageVariable, } from \"@gsp-wf/wf-process-model\";\r\nimport { mxEventObject, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { WfEditorUi } from \"../WfEditorUi\";\r\nimport { MessageReceiver } from \"../entity/MessageReceiver\";\r\nimport { BizComponent } from \"../entity/BizComponent\";\r\nimport { BizParameter } from \"../entity/BizParameter\";\r\nimport { WfDesignerUtils } from \"../WfDesignerUtils\";\r\nimport { WfEvents } from \"../WfEvents\";\r\nimport { ProcessPropertyKeys } from \"./property-keys/ProcessPropertyKeys\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\nimport { ProcessDesignerUIState } from \"../../app/process-designer.uistate\";\r\nimport { WfLocalePipe } from \"../../i18n/pipe/wf-process-editor-locale.pipe\";\r\n\r\n/**\r\n * 流程元素类。\r\n * 取名虽然Cell，但实际上不需要继承mxCell以及Cell类，仅持有流程与画布实例，方法属性获取与修改操作。\r\n */\r\nexport class WfProcessCell extends ProcessCell {\r\n    process: Process;\r\n    plane: BPMNPlane;\r\n    editorUi: WfEditorUi;\r\n    uiState: ProcessDesignerUIState;\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        let extendList = [];\r\n        if (this.editorUi.procExtProps && this.editorUi.procExtProps.length > 0) {\r\n            extendList = JSON.parse(JSON.stringify(this.editorUi.procExtProps)).sort((a, b) => {\r\n                return a.sortOrder - b.sortOrder;\r\n            });\r\n        }\r\n        extendList = extendList.sort((a, b) => {\r\n            return a.sortOrder - b.sortOrder;\r\n        });\r\n\r\n        let propertyData = {};\r\n        let usual = new ElementPropertyConfig();\r\n        usual.categoryId = 'usual';\r\n        usual.categoryName =  mxResources.get(\"basicInfo\");\r\n        usual.tabId = 'basic';\r\n        usual.tabName =  mxResources.get(\"basic\");\r\n        usual.properties = [\r\n            { propertyID: ProcessPropertyKeys.Name, propertyName:  mxResources.get(\"name\"), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: ProcessPropertyKeys.NameLanguage, propertyName:  mxResources.get(\"nameLanguage\"), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: ProcessPropertyKeys.Key, propertyName:  mxResources.get(\"key\"), propertyType: 'string', readonly: true },\r\n            { propertyID: ProcessPropertyKeys.EntryForm, propertyName:  mxResources.get(\"entryForm\"), propertyType: 'modal' },\r\n            { propertyID: ProcessPropertyKeys.startMode, propertyName:  mxResources.get(\"startMode\"), propertyType: 'select' },\r\n            { propertyID: ProcessPropertyKeys.wf_TitleExpression, propertyName:  mxResources.get(\"wfTitle\"), propertyType: 'modal' },\r\n        ];\r\n\r\n        let formDef = new ElementPropertyConfig();\r\n        formDef.categoryId = 'formDef';\r\n        formDef.categoryName =  mxResources.get(\"formDef\");\r\n        formDef.tabId = 'basic';\r\n        formDef.tabName =  mxResources.get(\"basic\");\r\n        formDef.properties = [\r\n            { propertyID: ProcessPropertyKeys.wf_ExecuteForms_PC, propertyName:  mxResources.get(\"formsPC\"), propertyType: 'modal' },\r\n            { propertyID: ProcessPropertyKeys.wf_ExecuteForms_Mobile, propertyName:  mxResources.get(\"formsMobile\"), propertyType: 'modal' },\r\n        ];\r\n\r\n        let process = new ElementPropertyConfig();\r\n        process.categoryId = 'process';\r\n        process.categoryName =  mxResources.get(\"process\");\r\n        process.tabId = 'advanced';\r\n        process.tabName =  mxResources.get(\"advanced\");\r\n        process.properties = [\r\n            { propertyID: ProcessPropertyKeys.wf_Component, propertyName:  mxResources.get(\"wfComponent\"), propertyType: 'modal' },\r\n        ];\r\n\r\n        let advanced = new ElementPropertyConfig();\r\n        advanced.categoryId = 'advanced';\r\n        advanced.categoryName =  mxResources.get(\"otherConfig\");\r\n        advanced.tabId = 'advanced';\r\n        advanced.tabName =  mxResources.get(\"advanced\");\r\n        advanced.properties = [\r\n            { propertyID: ProcessPropertyKeys.processVariables, propertyName:  mxResources.get(\"processVariables\"), propertyType: 'modal' },\r\n            { propertyID: ProcessPropertyKeys.wf_CustomizeAction, propertyName:  mxResources.get(\"customizeAction\"), propertyType: 'modal' },\r\n            { propertyID: ProcessPropertyKeys.enablePriority, propertyName:  mxResources.get(\"enablePriority\"), propertyType: 'select' },\r\n            { propertyID: ProcessPropertyKeys.enableWholeOrderRetrieve, propertyName:  mxResources.get(\"enableWholeOrderRetrieve\"), propertyType: 'select', description: mxResources.get(\"description\") },\r\n            { propertyID: ProcessPropertyKeys.imageSettings, propertyName:  mxResources.get(\"messageProperty\"), propertyType: 'modal' },\r\n        ];\r\n\r\n        const time = new ElementPropertyConfig();\r\n        time.categoryId = 'messageProperty';                                                             // 消息属性\r\n        time.categoryName =  mxResources.get(\"timelinessInfo\");\r\n        time.tabId = 'advanced';\r\n        time.tabName =  mxResources.get(\"advanced\");\r\n        time.properties = [\r\n            { propertyID: ProcessPropertyKeys.timeLimitControl, propertyName:  mxResources.get(\"timeLimitControl\"), propertyType: 'modal' },\r\n            { propertyID: ProcessPropertyKeys.messageNotice, propertyName:  mxResources.get(\"messageNotice\"), propertyType: 'modal' },\r\n        ];\r\n\r\n        // 扩展属性分group处理，每个group包含父级属性和属于它的子扩展属性\r\n        const groupList = new Array();\r\n        for (const extend of extendList) {\r\n            if (!extend.parentId) {\r\n                const group = { parent: extend, childs: new Array() };\r\n                for (const e of extendList) {\r\n                    if (e.parentId === extend.id) {\r\n                        group.childs.push(e);\r\n                    }\r\n                }\r\n                groupList.push(group);\r\n            }\r\n        }\r\n        // 没有扩展属性值的时候不显示扩展属性一栏\r\n        if (groupList && groupList.length > 0) {\r\n            const extendProperty = new ElementPropertyConfig();\r\n            extendProperty.categoryId = 'extendProperty';\r\n            extendProperty.categoryName =  mxResources.get(\"extendProperty\");\r\n            extendProperty.tabId = 'advanced';\r\n            extendProperty.tabName =  mxResources.get(\"advanced\");\r\n            extendProperty.properties = new Array();\r\n            // 组织扩展属性的二级list\r\n            for (const g of groupList) {\r\n                extendProperty.properties.push(\r\n                    { propertyID: g.parent.id, propertyName: g.parent.propertyTitle, propertyType: 'modal' },\r\n                );\r\n            }\r\n            this.setProcessPropertyValue(propertyData, groupList);\r\n            return {\r\n                propertyConfig: [usual, formDef, process, time, advanced, extendProperty],\r\n                propertyData: propertyData\r\n            };\r\n        } else {\r\n            this.setProcessPropertyValue(propertyData, groupList);\r\n            return {\r\n                propertyConfig: [usual, formDef, process, time, advanced],\r\n                propertyData: propertyData\r\n            };\r\n        }\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const propertyID = obj.propertyID;\r\n        if (propertyID) {\r\n            switch (propertyID) {\r\n                case 'EntryForm'://流程分类\r\n                    // 更新流程分类名称（流程分类名称可能修改）\r\n                    this.updateProcessHeader(obj.propertyValue.name, obj.propertyValue.businessObjectId, obj.propertyValue.id);\r\n                    this.updateFlowFormInfo(obj.formalParameters, obj.processBizComponnets, obj.executeForms, obj.customizeActions, obj.bizCmps);\r\n                    this.bindProcessTitleExpression(obj.flowForm.processDescription);\r\n                    break;\r\n                case ProcessPropertyKeys.wf_Component: // 流程构件\r\n                    this.updateProcessComponents(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.wf_ExecuteForms_PC:\r\n                    this.updateExecuteForm(obj.propertyValue, 'PC');\r\n                    if (obj.parameters && obj.parameters.length > 0) {\r\n                        PropertyHelper.updateFormalParameters(this.process, obj.parameters);\r\n                    }\r\n                    break;\r\n                case ProcessPropertyKeys.wf_ExecuteForms_Mobile:\r\n                    this.updateExecuteForm(obj.propertyValue, 'MOBILE');\r\n                    if (obj.parameters && obj.parameters.length > 0) {\r\n                        PropertyHelper.updateFormalParameters(this.process, obj.parameters);\r\n                    }\r\n                    break;\r\n                case ProcessPropertyKeys.wf_CustomizeAction:\r\n                    this.updateCustomizeActions(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.wf_TitleExpression:\r\n                    this.modifyProcessTitleExpression(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.allowPreAssign:\r\n                    this.updateAllowPreAssign(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.startMode:\r\n                    this.updateStartMode(obj.propertyValue, obj.allBizCmps, obj.bizCmps);\r\n                    break;\r\n                case ProcessPropertyKeys.enablePriority:\r\n                    this.updateEnablePriority(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.enableWholeOrderRetrieve:\r\n                    this.updateEnableWholeOrderRetrieve(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.processVariables:\r\n                    this.updateProcessVariables(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.timeLimitControl:\r\n                    this.updateProcessTimeLimitControl(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.messageNotice:\r\n                    this.updateProcessMessageNotices(obj.propertyValue);\r\n                    break;\r\n                case ProcessPropertyKeys.imageSettings:\r\n                    this.updateImageSettings(obj.propertyValue);\r\n                    break;\r\n                default:\r\n                    // 判断ResourceKeys是不是groupid,是就走resetExtendProperty\r\n                    if (this.editorUi.procExtProps.findIndex(p => p.id === propertyID) > -1) {\r\n                        this.resetExtendProperty(obj.propertyValue);\r\n                    } else {\r\n                        super.updateProps(obj);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 设置流程属性值\r\n    * @param bpmnModel\r\n    * @param propertyData\r\n    * @param groupList\r\n    */\r\n    setProcessPropertyValue(propertyData: any, groupList?: any): void {\r\n        let process = this.process;\r\n        if (process) {\r\n            if (!process.Name)\r\n                process.Name = '默认流程';\r\n            if (!process.Key)\r\n                process.Key = BpmnModelHelper.GenerateElementId();\r\n\r\n            propertyData[ProcessPropertyKeys.Id] = process.Id;\r\n            propertyData[ProcessPropertyKeys.ClrTypeID] = process.ClrTypeID;\r\n            propertyData[ProcessPropertyKeys.Name] = process.Name;\r\n            propertyData[ProcessPropertyKeys.NameLanguage] = process.NameLanguage || {\r\n                \"zh-CHS\": process.Name,\r\n            };\r\n            propertyData[ProcessPropertyKeys.Key] = process.Key;\r\n            propertyData[ProcessPropertyKeys.wf_TitleExpression] = '';\r\n\r\n            let extendElements: ExtensionElement[] = process.GetExtensionElements();\r\n            let component = [];\r\n            let webForm;\r\n            let mobileForm;\r\n            let customizeActions = [];\r\n            let proExtendProperties = [];\r\n            let imageSettings;\r\n            const messagesNotices = new Array();\r\n            // tslint:disable-next-line: forin\r\n            for (let i in extendElements) {\r\n                if (extendElements[i] instanceof ProcessHeader) {\r\n                    propertyData[ProcessPropertyKeys.EntryForm] = {\r\n                        id: (extendElements[i] as ProcessHeader).BizDefKey,\r\n                        name: (extendElements[i] as ProcessHeader).BizDefName\r\n                    };\r\n                    propertyData[ProcessPropertyKeys.allowPreAssign] = (extendElements[i] as ProcessHeader).allowPreAssign;\r\n                    propertyData[ProcessPropertyKeys.startMode] = (extendElements[i] as ProcessHeader).startMode;\r\n                    propertyData[ProcessPropertyKeys.enablePriority] = (extendElements[i] as ProcessHeader).enablePriority ? (extendElements[i] as ProcessHeader).enablePriority : false;\r\n                    propertyData[ProcessPropertyKeys.enableWholeOrderRetrieve] = (extendElements[i] as ProcessHeader).enableWholeOrderRetrieve ? (extendElements[i] as ProcessHeader).enableWholeOrderRetrieve : false;\r\n                }\r\n                if (extendElements[i] instanceof Component\r\n                    && (extendElements[i] as Component).Time !== ToolTime.UNDEFINITION) {\r\n                    component.push(this.convert2Component(extendElements[i] as Component));\r\n                }\r\n                if (extendElements[i] instanceof ExecuteForm) {\r\n                    const form = extendElements[i] as ExecuteForm;\r\n                    if (form.TerminalType === 'PC') {\r\n                        webForm = form;\r\n                    } else if (form.TerminalType === 'MOBILE') {\r\n                        mobileForm = form;\r\n                    }\r\n                }\r\n                if (extendElements[i] instanceof TitleExpression) {\r\n                    propertyData[ProcessPropertyKeys.wf_TitleExpression] =\r\n                        (extendElements[i] as TitleExpression).valueLanguage ? (extendElements[i] as TitleExpression).valueLanguage : (extendElements[i] as TitleExpression).value;\r\n                }\r\n                if (extendElements[i] instanceof CustomizeAction) {\r\n                    customizeActions.push(extendElements[i]);\r\n                }\r\n                if (extendElements[i] instanceof MessageNotice) {\r\n                    messagesNotices.push(this.getMessageNotice(extendElements[i] as MessageNotice));\r\n                }\r\n                if (extendElements[i] instanceof TimeLimitControl) {\r\n                    propertyData[ProcessPropertyKeys.timeLimitControl] = this.getPrcocessTimeLimitInfo(extendElements[i] as TimeLimitControl);\r\n                }\r\n                if (extendElements[i] instanceof ExtendProperty) {\r\n                    proExtendProperties.push(extendElements[i]);\r\n                }\r\n                if (extendElements[i] instanceof ImageSettings) {\r\n                    // imageSettings.push(extendElements[i]);\r\n                    propertyData[ProcessPropertyKeys.imageSettings] = extendElements[i];\r\n                }\r\n            }\r\n            const processVariables = this.getProcessVariables(process);\r\n            propertyData[ProcessPropertyKeys.processVariables] = processVariables;\r\n            propertyData[ProcessPropertyKeys.wf_Component] = component;\r\n            propertyData[ProcessPropertyKeys.wf_ExecuteForms_PC] = webForm;\r\n            propertyData[ProcessPropertyKeys.wf_ExecuteForms_Mobile] = mobileForm;\r\n            propertyData[ProcessPropertyKeys.wf_CustomizeAction] = customizeActions;\r\n            propertyData[ProcessPropertyKeys.messageNotice] = messagesNotices;\r\n            for (const g of groupList) {\r\n                // 取回模型上的value值给到扩展属性组件里\r\n                if (proExtendProperties && proExtendProperties.length > 0) {\r\n                    g.childs.sort((a, b) => {\r\n                        return a.sortOrder - b.sortOrder;\r\n                    }).forEach(d => {\r\n                        proExtendProperties.forEach(e => {\r\n                            if (e.key == d.code) {\r\n                                d.value = e.value;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                propertyData[g.parent.id] = g.childs;\r\n            }\r\n        }\r\n    }\r\n\r\n    getProcessVariables(process: Process): any[] {\r\n        let processVariables = new Array();\r\n        const extendElements: ExtensionElement[] = process.GetExtensionElements();\r\n        const dataObjects = process.GetDataObjects();\r\n        if (dataObjects !== null && dataObjects.length > 0) {\r\n            for (const obj of dataObjects) {\r\n                if (obj instanceof ValuedDataObject && obj.DataType.Category !== DataTypes.CustomType) {\r\n                    const variable: any = {\r\n                        id: obj.Id,\r\n                        name: obj.Name,\r\n                        documentation: obj.Documentation,\r\n                        basicType: obj.DataType.BasicType,\r\n                        tag: obj.variableSetting ? obj.variableSetting.tag : '',\r\n                        value: obj.variableSetting ? obj.variableSetting.value : '',\r\n                        valueText: obj.variableSetting ? obj.variableSetting.valueText : '',\r\n                        description: obj.DataType.Description\r\n                    };\r\n                    if (obj.variableSetting && obj.variableSetting.tag === 'component') {\r\n                        if (extendElements.length > 0) {\r\n                            for (const e of extendElements) {\r\n                                if (e instanceof Component && e.Id === obj.variableSetting.value) {\r\n                                    const component: any = {\r\n                                        Id: e.Id,\r\n                                        Name: e.Name,\r\n                                        MetadataId: e.MetadataId,\r\n                                        MethodCode: e.MethodCode,\r\n                                        ActualParameters: []\r\n                                    };\r\n                                    if (e.ActualParameters && e.ActualParameters.length > 0) {\r\n                                        for (const p of e.ActualParameters) {\r\n                                            const parameter = {\r\n                                                Name: p.Name,\r\n                                                Value: p.Value,\r\n                                                Tag: p.Tag,\r\n                                            };\r\n                                            component.ActualParameters.push(parameter);\r\n                                        }\r\n                                    }\r\n                                    variable.component = component;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    processVariables.push(variable);\r\n                }\r\n            }\r\n        }\r\n        return processVariables;\r\n    }\r\n\r\n    getPrcocessTimeLimitInfo(timeLimitControl: TimeLimitControl): TimeLimitControlInfo {\r\n        let timeLimit;\r\n        if (timeLimitControl) {\r\n            timeLimit = new TimeLimitControlInfo();\r\n            timeLimit.enable = timeLimitControl.enable;\r\n            timeLimit.tag = timeLimitControl.tag;\r\n            timeLimit.dueTime = timeLimitControl.dueTime;\r\n            timeLimit.timeUnit = timeLimitControl.timeUnit;\r\n            timeLimit.expireOperations = new Array();\r\n            if (timeLimitControl.expireOperations && timeLimitControl.expireOperations.length > 0) {\r\n                const operations = timeLimitControl.expireOperations;\r\n                for (const o of operations) {\r\n                    if (o.ClrTypeID.indexOf('SendMessageExpireOperation') > 0) {\r\n                        const operation = o as SendMessageExpireOperation;\r\n                        const sendMessage = new SendMessageExpireOperationInfo();\r\n                        sendMessage.timeDuration = operation.timeDuration;\r\n                        sendMessage.durationType = operation.durationType;\r\n                        sendMessage.timeUnit = operation.timeUnit;\r\n                        sendMessage.message = operation.message;\r\n                        sendMessage.sendType = operation.sendType;\r\n                        sendMessage.subject = operation.subject;\r\n                        sendMessage.id = operation.id;\r\n                        sendMessage.receiver = operation.receiver;\r\n                        sendMessage.receiverText = operation.receiverText;\r\n                        sendMessage.cycleEnable = operation.cycleEnable;\r\n                        sendMessage.cycleTime = operation.cycleTime;\r\n                        sendMessage.cycleTimeUnit = operation.cycleTimeUnit;\r\n                        sendMessage.operationTypeName = operation.operationTypeName ? operation.operationTypeName : 'SendMessageExpireOperation';\r\n                        if (operation.smsMessageTemplate) {\r\n                            const smsTemplate: any = new Object;\r\n                            smsTemplate.code = operation.smsMessageTemplate.code;\r\n                            smsTemplate.content = operation.smsMessageTemplate.content;\r\n                            smsTemplate.smsMessageVariables = new Array();\r\n                            if (operation.smsMessageTemplate.smsMessageVariables && operation.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                                for (const v of operation.smsMessageTemplate.smsMessageVariables) {\r\n                                    const variable: any = new Object;\r\n                                    variable.id = WfDesignerUtils.createNM();\r\n                                    variable.code = v.code;\r\n                                    variable.value = v.value;\r\n                                    variable.tag = v.tag;\r\n                                    smsTemplate.smsMessageVariables.push(variable);\r\n                                }\r\n                            }\r\n                            sendMessage.smsMessageTemplate = smsTemplate;\r\n                        }\r\n                        timeLimit.expireOperations.push(sendMessage);\r\n                    } else if (o.ClrTypeID.indexOf('AutoHandleExpireOperation') > 0) {\r\n                        const operation = o as AutoHandleExpireOperation;\r\n                        const autoHandle = new AutoHandleExpireOperationInfo;\r\n                        autoHandle.id = operation.id;\r\n                        autoHandle.durationType = operation.durationType;\r\n                        autoHandle.timeDuration = operation.timeDuration;\r\n                        autoHandle.timeUnit = operation.timeUnit;\r\n                        autoHandle.operationTypeName = operation.operationTypeName ? operation.operationTypeName : 'AutoHandleExpireOperation';\r\n                        autoHandle.autoHandleType = operation.autoHandleType;\r\n                        autoHandle.message = operation.message;\r\n                        timeLimit.expireOperations.push(autoHandle);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return timeLimit;\r\n    }\r\n\r\n    getMessageNotice(messageNotice: MessageNotice) {\r\n        const message: any = new Object;\r\n        message.content = messageNotice.content;\r\n        message.sendTime = messageNotice.sendTime;\r\n        message.sendType = messageNotice.sendType;\r\n        message.subject = messageNotice.subject;\r\n        if (messageNotice.smsMessageTemplate) {\r\n            const smsTemplate: any = new Object;\r\n            smsTemplate.code = messageNotice.smsMessageTemplate.code;\r\n            smsTemplate.content = messageNotice.smsMessageTemplate.content;\r\n            smsTemplate.smsMessageVariables = new Array();\r\n            if (messageNotice.smsMessageTemplate.smsMessageVariables && messageNotice.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                for (const v of messageNotice.smsMessageTemplate.smsMessageVariables) {\r\n                    const variable: any = new Object;\r\n                    variable.id = WfDesignerUtils.createNM();\r\n                    variable.code = v.code;\r\n                    variable.value = v.value;\r\n                    variable.tag = v.tag;\r\n                    smsTemplate.smsMessageVariables.push(variable);\r\n                }\r\n            }\r\n            message.smsMessageTemplate = smsTemplate;\r\n        }\r\n        const receiverExpressions = new Array<MessageReceiver>();\r\n        if (messageNotice.receiver) {\r\n            const receivers = messageNotice.receiver.split(',');\r\n            const receiverTexts = messageNotice.receiverText.split(',');\r\n            let userReceiver = new MessageReceiver();\r\n            userReceiver.type = 'userParticipant';\r\n            userReceiver.userIds = '';\r\n            userReceiver.userNames = '';\r\n            for (const i in receivers) {\r\n                if (receivers[i] === 'procInstCreator') {\r\n                    let procInstCreator = new MessageReceiver()\r\n                    procInstCreator.type = 'processParticipant';\r\n                    procInstCreator.processParticipant = 'procInstCreator';\r\n                    receiverExpressions.push(procInstCreator);\r\n                } else if (receivers[i] === 'workItemParticipant') {\r\n                    let workItemParticipant = new MessageReceiver()\r\n                    workItemParticipant.type = 'processParticipant';\r\n                    workItemParticipant.processParticipant = 'workItemParticipant';\r\n                    receiverExpressions.push(workItemParticipant);\r\n                } else {\r\n                    userReceiver.userIds += (receivers[i] + ',');\r\n                    userReceiver.userNames += (receiverTexts[i] + ',');\r\n                }\r\n            }\r\n            if (userReceiver.userIds) {\r\n                userReceiver.userIds = userReceiver.userIds.substring(0, userReceiver.userIds.length - 1);\r\n                userReceiver.userNames = userReceiver.userNames.substring(0, userReceiver.userNames.length - 1);\r\n                receiverExpressions.push(userReceiver);\r\n            }\r\n        }\r\n        if (messageNotice.receiverExpressions && messageNotice.receiverExpressions.length > 0) {\r\n            for (const e of messageNotice.receiverExpressions) {\r\n                if (e instanceof ActivityExecutorParticipantExpression) {\r\n                    let activityExecutorParticipant = new MessageReceiver();\r\n                    activityExecutorParticipant.type = 'processParticipant';\r\n                    activityExecutorParticipant.processParticipant = 'activityExecutorParticipant';\r\n                    activityExecutorParticipant.activityDefId = (e as ActivityExecutorParticipantExpression).activityDefId;\r\n                    activityExecutorParticipant.activityDefName = (e as ActivityExecutorParticipantExpression).activityDefName;\r\n\r\n                    receiverExpressions.push(activityExecutorParticipant);\r\n                } else if (e instanceof UserParticipantExpression) {\r\n                    let variableReceiver = new MessageReceiver();\r\n                    variableReceiver.type = 'variableParticipant';\r\n                    variableReceiver.variableParticipant = (e as UserParticipantExpression).UserId;\r\n                    variableReceiver.variableName = (e as UserParticipantExpression).name;\r\n                    variableReceiver.orgType = (e as UserParticipantExpression).OrgType;\r\n                    receiverExpressions.push(variableReceiver);\r\n                } else if (e instanceof PositionParticipantExpression) {\r\n                    let positionReceiver = new MessageReceiver();\r\n                    positionReceiver.type = 'positionParticipant';\r\n                    positionReceiver.positionId = (e as PositionParticipantExpression).PositionId;\r\n                    positionReceiver.positionName = (e as PositionParticipantExpression).PositionName;\r\n                    positionReceiver.positionType = (e as PositionParticipantExpression).PositionType;\r\n                    if (positionReceiver.positionType === '1') {\r\n                        positionReceiver.orgId = (e as PositionParticipantExpression).OrgId;\r\n                        positionReceiver.orgType = (e as PositionParticipantExpression).OrgType;\r\n                    }\r\n\r\n                    receiverExpressions.push(positionReceiver);\r\n                }\r\n            }\r\n        }\r\n        if (receiverExpressions.length > 0) {\r\n            message.receivers = receiverExpressions;\r\n        }\r\n        return message;\r\n\r\n    }\r\n\r\n    convert2Component(component: Component): BizComponent {\r\n        const bizComponent = new BizComponent();\r\n        bizComponent.id = component.Id;\r\n        bizComponent.name = component.Name;\r\n        bizComponent.metadataId = component.MetadataId;\r\n        bizComponent.methodCode = component.MethodCode;\r\n        bizComponent.executionTime = component.Time;\r\n        bizComponent.isForCompensation = component.isForCompensation;\r\n        bizComponent.scopeType = component.ScopeType || null;\r\n        bizComponent.actualParameters = new Array();\r\n        if (component.ActualParameters && component.ActualParameters.length > 0) {\r\n            for (const param of component.ActualParameters) {\r\n                const bizParam = new BizParameter();\r\n                bizParam.code = param.Name;\r\n                bizParam.name = param.Name;\r\n                bizParam.value = param.Value;\r\n                bizComponent.actualParameters.push(bizParam);\r\n            }\r\n        }\r\n        return bizComponent;\r\n    }\r\n\r\n    /**\r\n     * 设置ProcessHeader\r\n     * @param ffId\r\n     * @param bizObjId\r\n     * @param ffName\r\n     * @param startMode\r\n     */\r\n    setProcessHeader(ffId: string, bizObjId: string, ffName: string, startMode: StartMode) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        const processHeader = new ProcessHeader(process.Model, ffId, bizObjId, ffName, startMode);\r\n        extendElements.push(processHeader);\r\n    }\r\n\r\n    /**\r\n     * 更新流程分类绑定的参数，流程组件，表单信息\r\n     * @param params 参数列表\r\n     * @param cpts 流程组件\r\n     * @param form 流程表单\r\n     */\r\n    updateFlowFormInfo(params: any[], cpts: any[], forms: any[], customizeActions: any[], bizCmps: any) {\r\n        this.updateFormalParameters(params, cpts.filter(cpt => cpt.ownerType === 'Schema'));\r\n        this.setProcessComponents(cpts, bizCmps);\r\n        this.updateExecuteForms(forms);\r\n        this.updateCustomizeActions(customizeActions);\r\n    }\r\n\r\n    updateFormalParameters(parameters: any[], cmps: any[] = new Array()) {\r\n        if (!parameters) {\r\n            parameters = [];\r\n        }\r\n        let process = this.process;\r\n        let objects = process.GetDataObjects();\r\n        if (parameters !== null && parameters.length > 0) {\r\n            for (const p of parameters) {\r\n                const dataType = new DataType(process.Model);\r\n                if (p.dataType === 'CDTSchema') {\r\n                    // 先清理CDTSchema类型的dataObject\r\n                    for (const o of objects) {\r\n                        //TODO:数据类型为customType暂时默认为参数预制\r\n                        if (o instanceof DataObject && o.DataType.Category === DataTypes.CustomType) {\r\n                            process.RemoveDataObject(o.Id);\r\n                        }\r\n                    }\r\n                    // 重新绑定流程分类支持精简be\r\n                    const customType = new CDTSchemaType(process.Model);\r\n                    if (p.newSchemaId && p.newSchemaMetadataId) {\r\n                      customType.SchemaId = p.newSchemaId;\r\n                      customType.MetadataId = p.newSchemaMetadataId;\r\n                    } else {\r\n                      customType.SchemaId = p.schemaId;\r\n                      customType.MetadataId = p.schemaMetadataId;\r\n                    }\r\n                    customType.ComponentId = cmps.filter(cmp => cmp.owner === p.schemaId)[0].id;\r\n                    dataType.Category = DataTypes.CustomType;\r\n                    dataType.CustomType = customType;\r\n                } else {\r\n                    // 先清理code相同的dataObject\r\n                    for (const o of objects) {\r\n                        if (o instanceof DataObject && o.Name === p.code) {\r\n                            process.RemoveDataObject(o.Id);\r\n                        }\r\n                    }\r\n                    dataType.Category = DataTypes.BasicType;\r\n                    dataType.BasicType = p.dataType;\r\n                }\r\n                dataType.Description = p.description;\r\n                // dataType.InitialValue = p.initialValue;\r\n                if (p.parameterMode === 0) {\r\n                    const dataObject = new ValuedDataObject(process.Model);\r\n                    dataObject.Name = p.code;\r\n                    dataObject.Documentation = p.name;\r\n                    dataObject.DataType = dataType;\r\n                    dataObject.IsAllowNull = p.allowNull;\r\n                    if (p.initialValue || p.initialValueType) {\r\n                        const variableSetting = new VariableSetting(process.Model);\r\n                        variableSetting.variableCode = p.code;\r\n                        variableSetting.variableName = p.name;\r\n                        variableSetting.tag = p.initialValueType;\r\n                        variableSetting.value = p.initialValue;\r\n                        variableSetting.valueText = p.initialValue;\r\n\r\n                        dataObject.variableSetting = variableSetting;\r\n                    }\r\n\r\n                    process.AddDataObject(dataObject);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 基于流程分类的切换更新流程构件\r\n     */\r\n    setProcessComponents(procCpts: any[], bizCmps: any) {\r\n        const process = this.process;\r\n        let processHeader: ProcessHeader;\r\n        let extendElements = process.GetExtensionElements();\r\n        //删除流程构件\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof Component\r\n                    && (extendElements[i - 1] as Component).Time !== ToolTime.UNDEFINITION) {\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n                if (extendElements[i - 1] instanceof ProcessHeader) {\r\n                    processHeader = extendElements[i - 1] as ProcessHeader;\r\n                }\r\n            }\r\n        }\r\n        // 子流程和外部流程的情况先需要绑定取数构件\r\n        if (processHeader.startMode !== StartMode.DIRECT) {\r\n            const loadDataComponent = procCpts.find(p => p.executionTime === ToolTime.LOADDATA);\r\n            if (loadDataComponent) {\r\n                let ldCpt = new Component(process.Model);\r\n                ldCpt.Time = loadDataComponent.executionTime as ToolTime;\r\n                ldCpt.MetadataId = loadDataComponent.metadataId;\r\n                ldCpt.MethodCode = loadDataComponent.methodCode;\r\n                ldCpt.Id = loadDataComponent.id;\r\n                ldCpt.Name = loadDataComponent.name;\r\n                ldCpt.isForCompensation = loadDataComponent.isForCompensation;\r\n                ldCpt.ActualParameters = [];\r\n                if (loadDataComponent.scopeType) {\r\n                    ldCpt.ScopeType = loadDataComponent.scopeType;\r\n                } else {\r\n                    ldCpt.ScopeType = \"Undefined\"\r\n                }\r\n                if (loadDataComponent.actualParameters && loadDataComponent.actualParameters.length > 0) {\r\n                    for (let item of loadDataComponent.actualParameters) {\r\n                        let parameter = new ActualParameter(process.Model, item.code, item.value);\r\n\r\n                        ldCpt.ActualParameters.push(parameter);\r\n                    }\r\n                }\r\n                // 把取数构件放进去\r\n                extendElements.push(ldCpt);\r\n                // 如果是外部流程，校验是否集成统一预制的外部流程构件\r\n                if (processHeader.startMode == StartMode.EXTERNAL_PROCESS) {\r\n                    let externalCmps = false;\r\n                    const cmps = bizCmps;\r\n                    if (cmps && cmps.length > 0) {\r\n                        // 此处标记有外部流程通用构件\r\n                        for (const c of cmps) {\r\n                            if (c.scopeType === 'ExternalProcess') {\r\n                                externalCmps = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    // 如果没有外部流程构件\r\n                    if (!externalCmps) {\r\n                        if (procCpts && procCpts.length > 0) {\r\n                            for (let procCpt of procCpts) {\r\n                                let cpt = new Component(process.Model);\r\n                                cpt.Time = procCpt.executionTime as ToolTime;\r\n                                cpt.MetadataId = procCpt.metadataId;\r\n                                cpt.MethodCode = procCpt.methodCode;\r\n                                cpt.Id = procCpt.id;\r\n                                cpt.Name = procCpt.name;\r\n                                cpt.isForCompensation = procCpt.isForCompensation;\r\n                                cpt.ActualParameters = [];\r\n                                if (procCpt.scopeType) {\r\n                                    cpt.ScopeType = procCpt.scopeType;\r\n                                } else {\r\n                                    cpt.ScopeType = \"Undefined\"\r\n                                }\r\n                                if (procCpt.actualParameters && procCpt.actualParameters.length > 0) {\r\n                                    for (let item of procCpt.actualParameters) {\r\n                                        let parameter = new ActualParameter(process.Model, item.code, item.value);\r\n                                        cpt.ActualParameters.push(parameter);\r\n                                    }\r\n                                }\r\n                                // 避免重复的放入取数构件,不要取数，子流程和直接流程的构件，要未定义，外部，全量的\r\n                                if (cpt.Time !== ToolTime.LOADDATA\r\n                                    && cpt.ScopeType !== StartMode.DIRECT\r\n                                    && cpt.ScopeType !== StartMode.SUB_PROCESS\r\n                                ) {\r\n                                    extendElements.push(cpt);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let procCpt of procCpts) {\r\n                            let cpt = new Component(process.Model);\r\n                            cpt.Time = procCpt.executionTime as ToolTime;\r\n                            cpt.MetadataId = procCpt.metadataId;\r\n                            cpt.MethodCode = procCpt.methodCode;\r\n                            cpt.Id = procCpt.id;\r\n                            cpt.Name = procCpt.name;\r\n                            cpt.isForCompensation = procCpt.isForCompensation;\r\n                            cpt.ActualParameters = [];\r\n                            if (procCpt.scopeType) {\r\n                                cpt.ScopeType = procCpt.scopeType;\r\n                            } else {\r\n                                cpt.ScopeType = \"Undefined\"\r\n                            }\r\n                            if (procCpt.actualParameters && procCpt.actualParameters.length > 0) {\r\n                                for (let item of procCpt.actualParameters) {\r\n                                    let parameter = new ActualParameter(process.Model, item.code, item.value);\r\n                                    cpt.ActualParameters.push(parameter);\r\n                                }\r\n                            }\r\n                            // 避免重复的放入取数构件,不要取数，子流程和直接流程,未知的构件，外部，全量的\r\n                            if (cpt.Time !== ToolTime.LOADDATA\r\n                                && cpt.ScopeType !== StartMode.DIRECT\r\n                                && cpt.ScopeType !== StartMode.SUB_PROCESS\r\n                                && cpt.ScopeType !== \"Undefined\"\r\n                            ) {\r\n                                extendElements.push(cpt);\r\n                            }\r\n                        }\r\n                    }\r\n                    // 如果有外部流程构件，同样只保留取数构件，不需要其他处理(取数构件已经放进去了)\r\n                    // 刷新一下属性框\r\n                    this.editorUi.fireEvent(new mxEventObject(PmfEvents.ShowProperty));\r\n                } else if (processHeader.startMode == StartMode.SUB_PROCESS) {\r\n                    if (procCpts && procCpts.length > 0) {\r\n                        for (let procCpt of procCpts) {\r\n                            let cpt = new Component(process.Model);\r\n                            cpt.Time = procCpt.executionTime as ToolTime;\r\n                            cpt.MetadataId = procCpt.metadataId;\r\n                            cpt.MethodCode = procCpt.methodCode;\r\n                            cpt.Id = procCpt.id;\r\n                            cpt.Name = procCpt.name;\r\n                            cpt.isForCompensation = procCpt.isForCompensation;\r\n                            cpt.ActualParameters = [];\r\n                            if (procCpt.scopeType) {\r\n                                cpt.ScopeType = procCpt.scopeType;\r\n                            } else {\r\n                                cpt.ScopeType = \"Undefined\"\r\n                            }\r\n                            if (procCpt.actualParameters && procCpt.actualParameters.length > 0) {\r\n                                for (let item of procCpt.actualParameters) {\r\n                                    let parameter = new ActualParameter(process.Model, item.code, item.value);\r\n                                    cpt.ActualParameters.push(parameter);\r\n                                }\r\n                            }\r\n                            // 避免重复的放入取数构件,不要取数，直接流程和外部流程，未定义的构件，要子流程，全量的\r\n                            if (cpt.Time !== ToolTime.LOADDATA\r\n                                && cpt.ScopeType !== StartMode.DIRECT\r\n                                && cpt.ScopeType !== StartMode.EXTERNAL_PROCESS\r\n                                && cpt.ScopeType !== \"Undefined\") {\r\n                                extendElements.push(cpt);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // 如果是子流程则不需要其他处理(取数构件已经放进去了)\r\n            }\r\n        } else { // 直接流程\r\n            // 直接流程过滤掉共享的构件\r\n            const actualCmps = procCpts.filter(p => WfDesignerUtils.isPfComponent(p.metadataId) === false);\r\n            if (actualCmps && actualCmps.length > 0) {\r\n                for (let procCpt of actualCmps) {\r\n                    let cpt = new Component(process.Model);\r\n                    cpt.Time = procCpt.executionTime as ToolTime;\r\n                    cpt.MetadataId = procCpt.metadataId;\r\n                    cpt.MethodCode = procCpt.methodCode;\r\n                    cpt.Id = procCpt.id;\r\n                    cpt.Name = procCpt.name;\r\n                    cpt.isForCompensation = procCpt.isForCompensation;\r\n                    if (procCpt.scopeType) {\r\n                        cpt.ScopeType = procCpt.scopeType;\r\n                    } else {\r\n                        cpt.ScopeType = \"Undefined\"\r\n                    }\r\n                    cpt.ActualParameters = [];\r\n                    if (procCpt.actualParameters && procCpt.actualParameters.length > 0) {\r\n                        for (let item of procCpt.actualParameters) {\r\n                            let parameter = new ActualParameter(process.Model, item.code, item.value);\r\n\r\n                            cpt.ActualParameters.push(parameter);\r\n                        }\r\n                    }\r\n                    // 避免重复的放入取数构件,子流程和外部流程的构件，要未定义，直接，全量的\r\n                    if (cpt.ScopeType !== StartMode.EXTERNAL_PROCESS\r\n                        && cpt.ScopeType !== StartMode.SUB_PROCESS) {\r\n                        extendElements.push(cpt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateExecuteForms(forms: any[]) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        //删除表单构件\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof ExecuteForm) {\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n            }\r\n        }\r\n        for (const f of forms) {\r\n            this.updateExecuteForm(f);\r\n        }\r\n    }\r\n    updateExecuteForm(form: any, terminal?: string) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        //删除表单构件\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof ExecuteForm) {\r\n                    const f = extendElements[i - 1] as ExecuteForm;\r\n                    if (f.TerminalType === (terminal ? terminal : form.TerminalType)) {\r\n                        extendElements.splice(i - 1, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (form) {\r\n            let params = form.ActualParameters as any[];\r\n            let actParas = new Array<ActualParameter>();\r\n            if (params && params.length > 0) {\r\n                for (let para of params) {\r\n                    let actPara = new ActualParameter(process.Model, para.Name, para.Value);\r\n                    if (para.Tag) {\r\n                        actPara.Tag = para.Tag;\r\n                    } else {\r\n                        if (para.Value) {\r\n                            if (para.Value.length >= 8 && para.Value.slice(0, 8) === `{\"expr\":`) {\r\n                                actPara.Tag = 'expression';\r\n                            } else {\r\n                                actPara.Tag = 'constant';\r\n                            }\r\n                        } else {\r\n                            actPara.Tag = 'variable';\r\n                        }\r\n\r\n                    }\r\n                    actParas.push(actPara);\r\n                }\r\n            }\r\n            const id = BpmnModelHelper.GenerateElementId();\r\n            let item = new ExecuteForm(process.Model, id, form.Name, actParas);\r\n            item.ComponentId = form.ComponentId;\r\n            item.FormType = form.FormType;\r\n            item.formFormatId = form.formFormatId;\r\n            item.formatConfigId = form.formatConfigId;\r\n            item.TerminalType = form.TerminalType;\r\n            extendElements.push(item);\r\n        }\r\n    }\r\n\r\n    updateCustomizeActions(customizeActions: any[]) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        //删除流程构件\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof CustomizeAction) {\r\n\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n            }\r\n        }\r\n        //重新绑定\r\n        if (customizeActions && customizeActions.length > 0) {\r\n            for (let a of customizeActions) {\r\n                let action = new CustomizeAction(process.Model);\r\n                action.id = BpmnModelHelper.GenerateElementId();\r\n                action.code = a.code;\r\n                action.name = a.name;\r\n                action.terminalType = a.terminalType;\r\n                // action.enable = a.enable;\r\n                action.actualParameters = [];\r\n                if (a.actualParameters && a.actualParameters.length > 0) {\r\n                    for (let p of a.actualParameters) {\r\n                        let parameter = new ActualParameter(process.Model, p.Name, p.Value, p.ValueText, p.Tag || 'expression');\r\n                        action.actualParameters.push(parameter);\r\n                    }\r\n                }\r\n\r\n                extendElements.push(action);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新流程备注\r\n     * @param bpmnModel\r\n     * @param value\r\n     */\r\n    modifyProcessTitleExpression(value: any) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof TitleExpression) {\r\n\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n            }\r\n        }\r\n        let title = new TitleExpression(process.Model);\r\n        if(typeof(value) === 'string'|| value == null) {\r\n          title = new TitleExpression(process.Model, value);\r\n        } else {\r\n          title = new TitleExpression(process.Model, value['zh-CHS'], value);\r\n        }\r\n        extendElements.push(title);\r\n    }\r\n\r\n    updateProcessHeader(ffName: string, bizObjId?: string, ffId?: string) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements !== null && extendElements.length > 0) {\r\n            for (let i in extendElements) {\r\n                if (extendElements[i] instanceof ProcessHeader) {\r\n                    (extendElements[i] as ProcessHeader).BizDefName = ffName;\r\n                    (extendElements[i] as ProcessHeader).BizObjId = bizObjId;\r\n                    (extendElements[i] as ProcessHeader).BizDefKey = ffId;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    bindProcessTitleExpression(value: string) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        const titleExpression = extendElements.find(e => e.ClrTypeID === TitleExpression.Clr_Type_ID) as TitleExpression;\r\n        if (titleExpression && titleExpression.value) {\r\n            return;\r\n        }\r\n        const title = new TitleExpression(process.Model, value);\r\n        extendElements.push(title);\r\n    }\r\n\r\n    /**\r\n     * 基于流程分类的切换更新流程构件\r\n     */\r\n    updateProcessComponents(procCpts: any[]) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        //删除流程构件\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof Component\r\n                    && (extendElements[i - 1] as Component).Time !== ToolTime.UNDEFINITION) {\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n            }\r\n        }\r\n        //重新绑定\r\n        if (procCpts && procCpts.length > 0) {\r\n            for (let procCpt of procCpts) {\r\n                let cpt = new Component(process.Model);\r\n                cpt.Time = procCpt.executionTime as ToolTime;\r\n                cpt.MetadataId = procCpt.metadataId;\r\n                cpt.MethodCode = procCpt.methodCode;\r\n                cpt.Id = procCpt.id;\r\n                cpt.Name = procCpt.name;\r\n                cpt.isForCompensation = procCpt.isForCompensation;\r\n                cpt.ActualParameters = [];\r\n                if (procCpt.actualParameters && procCpt.actualParameters.length > 0) {\r\n                    for (let item of procCpt.actualParameters) {\r\n                        let parameter = new ActualParameter(process.Model, item.code, item.value);\r\n\r\n                        cpt.ActualParameters.push(parameter);\r\n                    }\r\n                }\r\n\r\n                extendElements.push(cpt);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateAllowPreAssign(assign: boolean) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements !== null && extendElements.length > 0) {\r\n            for (let i in extendElements) {\r\n                if (extendElements[i] instanceof ProcessHeader) {\r\n                    (extendElements[i] as ProcessHeader).allowPreAssign = assign;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateEnablePriority(priority: boolean) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements !== null && extendElements.length > 0) {\r\n            for (let i in extendElements) {\r\n                if (extendElements[i] instanceof ProcessHeader) {\r\n                    (extendElements[i] as ProcessHeader).enablePriority = priority;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateStartMode(startMode: StartMode, allCmps: any, bizCmps: any) {\r\n        // 对于启动方式的提示信息\r\n        switch (startMode) {\r\n            case StartMode.DIRECT:\r\n                this.editorUi.fireEvent(new mxEventObject(WfEvents.ShowTips, \"data\", {\r\n                    type: 'message',\r\n                    level: 'info',\r\n                    message:  mxResources.get(\"directTips\"),\r\n                }));\r\n                break;\r\n            case StartMode.EXTERNAL_PROCESS:\r\n                this.editorUi.fireEvent(new mxEventObject(WfEvents.ShowTips, \"data\", {\r\n                    type: 'message',\r\n                    level: 'info',\r\n                    message:  mxResources.get(\"externalTips\"),\r\n                }));\r\n                break;\r\n            case StartMode.SUB_PROCESS:\r\n                this.editorUi.fireEvent(new mxEventObject(WfEvents.ShowTips, \"data\", {\r\n                    type: 'message',\r\n                    level: 'info',\r\n                    message:  mxResources.get(\"subprocessTips\"),\r\n                }));\r\n                break;\r\n        }\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements !== null && extendElements.length > 0) {\r\n            const procHeader = extendElements.filter(e => e instanceof ProcessHeader) as ProcessHeader[];\r\n            // 修改启动方式\r\n            procHeader[0].startMode = startMode;\r\n\r\n            const procCpts = allCmps;\r\n            //删除流程构件\r\n            if (extendElements.length > 0) {\r\n                for (let i = extendElements.length; i > 0; i--) {\r\n                    if (extendElements[i - 1] instanceof Component\r\n                        && (extendElements[i - 1] as Component).Time !== ToolTime.UNDEFINITION\r\n                        && (extendElements[i - 1] as Component).Time !== ToolTime.LOADDATA) {\r\n                        extendElements.splice(i - 1, 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            allCmps && allCmps.forEach(procCpt => {\r\n                const cpt = new Component(process.Model);\r\n                cpt.Time = procCpt.executionTime as ToolTime;\r\n                cpt.MetadataId = procCpt.metadataId;\r\n                cpt.MethodCode = procCpt.methodCode;\r\n                cpt.Id = procCpt.id;\r\n                cpt.Name = procCpt.name;\r\n                cpt.isForCompensation = procCpt.isForCompensation;\r\n                cpt.ActualParameters = [];\r\n                if (procCpt.scopeType) {\r\n                    cpt.ScopeType = procCpt.scopeType;\r\n                } else {\r\n                    cpt.ScopeType = \"Undefined\"\r\n                }\r\n\r\n                procCpt.actualParameters && procCpt.actualParameters.forEach((item) => {\r\n                    let parameter = new ActualParameter(process.Model, item.code, item.value);\r\n                    cpt.ActualParameters.push(parameter);\r\n                });\r\n\r\n                extendElements.push(cpt);\r\n            });\r\n\r\n            const procCmps = extendElements.filter(e => e instanceof Component) as Component[];\r\n            // 如果启动方式是子流程,只保留取数构件\r\n            if (startMode === StartMode.SUB_PROCESS) {\r\n                // Utils.postMessage(ResourceKeys.wf_showTip, {\r\n                //     type: 'message',\r\n                //     level: 'info',\r\n                //     message: `启动方式为子流程，需要移除取数构件以外的流程构件`,\r\n                // });\r\n                for (let i = extendElements.length; i > 0; i--) {\r\n                    if (extendElements[i - 1] instanceof Component) {\r\n                        const cmp = extendElements[i - 1] as Component;\r\n                        if (\r\n                            cmp.Time !== ToolTime.UNDEFINITION\r\n                            && cmp.Time !== ToolTime.LOADDATA\r\n                            && (cmp.ScopeType !== StartMode.SUB_PROCESS && cmp.ScopeType !== \"All_Process\")\r\n                        ) {\r\n                            extendElements.splice(i - 1, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 如果启动方式是直接启动,不允许存在共享的构件\r\n            if (startMode === StartMode.DIRECT) {\r\n                // 判断有没有共享（PF）的流程构件\r\n                const pfCmps = procCmps.filter((p: Component) => WfDesignerUtils.isPfComponent(p.MetadataId));\r\n                if (pfCmps && pfCmps.length > 0) {\r\n                    // 删掉共享的构件和启动方式\r\n                    for (let i = extendElements.length; i > 0; i--) {\r\n                        if (extendElements[i - 1] instanceof Component) {\r\n                            const cmp = extendElements[i - 1] as Component;\r\n                            if (\r\n                                WfDesignerUtils.isPfComponent(cmp.MetadataId)\r\n                                || cmp.ScopeType === StartMode.EXTERNAL_PROCESS\r\n                                || cmp.ScopeType === StartMode.SUB_PROCESS\r\n                            ) {\r\n                                extendElements.splice(i - 1, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // 如果启动方式是外部流程\r\n            } else if (startMode === StartMode.EXTERNAL_PROCESS) {\r\n                // const otherCmps = procCmps.filter((p: Component) => (p.MetadataId !== ResourceKeys.pf_Cmp_Id1\r\n                //     && p.MetadataId !== ResourceKeys.pf_Cmp_Id2\r\n                //     && p.MetadataId !== ResourceKeys.pf_Cmp_Id3\r\n                //     && p.MetadataId !== ResourceKeys.pf_Cmp_Id4\r\n                //     && p.Time !== ToolTime.LOADDATA\r\n                // ));\r\n                // 判断有没有预制外部流程通用构件\r\n                let externalCmps = false;\r\n                const cmps = bizCmps;\r\n                if (cmps && cmps.length > 0) {\r\n                    // 此处标记是外部流程通用构件\r\n                    for (const c of cmps) {\r\n                        if (c.scopeType === 'ExternalProcess') {\r\n                            externalCmps = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    // 如果预制了外部流程通用构件,只保留取数构件，没有则不处理\r\n                    if (externalCmps) {\r\n                        for (let i = extendElements.length; i > 0; i--) {\r\n                            if (extendElements[i - 1] instanceof Component) {\r\n                                const cmp = extendElements[i - 1] as Component;\r\n                                if (cmp.Time !== ToolTime.UNDEFINITION\r\n                                    && cmp.Time !== ToolTime.LOADDATA\r\n                                    && (cmp.ScopeType === StartMode.DIRECT\r\n                                        || cmp.ScopeType === StartMode.SUB_PROCESS\r\n                                        || cmp.ScopeType === \"Undefined\")) {\r\n                                    extendElements.splice(i - 1, 1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.editorUi.fireEvent(new mxEventObject(PmfEvents.ShowProperty));\r\n    }\r\n\r\n    updateProcessVariables(variables: any[]) {\r\n        let process = this.process;\r\n        let objects = process.GetDataObjects();\r\n        const extendElements = process.GetExtensionElements();\r\n        if (objects && objects.length > 0) {\r\n            for (const o of objects) {\r\n                if (o instanceof ValuedDataObject && o.DataType.Category !== DataTypes.CustomType) {\r\n                    if (o.variableSetting && o.variableSetting.tag === 'component') {\r\n                        const i = extendElements.findIndex(e => (e instanceof Component && e.Id === o.variableSetting.value));\r\n                        extendElements.splice(i, 1);\r\n                    }\r\n                    process.RemoveDataObject(o.Id);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (variables !== null && variables.length > 0) {\r\n            for (const v of variables) {\r\n                const dataType = new DataType(process.Model);\r\n                dataType.Category = DataTypes.BasicType;\r\n                dataType.BasicType = v.basicType;\r\n                dataType.Description = v.description;\r\n                const dataObject = new ValuedDataObject(process.Model);\r\n                dataObject.Id = v.id;\r\n                dataObject.Name = v.name;\r\n                dataObject.Documentation = v.documentation;\r\n                dataObject.DataType = dataType;\r\n\r\n                if (v.tag && v.value) {\r\n                    const variableSetting = new VariableSetting(process.Model);\r\n                    variableSetting.variableCode = v.name;\r\n                    variableSetting.variableName = v.documentation;\r\n                    variableSetting.tag = v.tag;\r\n                    variableSetting.value = v.value;\r\n                    variableSetting.valueText = v.valueText;\r\n\r\n                    dataObject.variableSetting = variableSetting;\r\n\r\n                    if (variableSetting.tag === 'component') {\r\n                        const c = v.component;\r\n                        if (c) {\r\n                            let cpt = new Component(process.Model);\r\n                            cpt.MetadataId = c.MetadataId;\r\n                            cpt.MethodCode = c.MethodCode;\r\n                            cpt.Id = c.Id;\r\n                            cpt.Name = c.Name;\r\n                            cpt.ActualParameters = new Array();\r\n                            if (c.ActualParameters && c.ActualParameters.length > 0) {\r\n                                for (let a of c.ActualParameters) {\r\n                                    let parameter = new ActualParameter(process.Model, a.Name, a.Value);\r\n                                    parameter.Tag = a.Tag;\r\n                                    cpt.ActualParameters.push(parameter);\r\n                                }\r\n                            }\r\n\r\n                            extendElements.push(cpt);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                process.AddDataObject(dataObject);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateProcessTimeLimitControl(timeLimit: any) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof TimeLimitControl) {\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n            }\r\n        }\r\n        const timeLimitInfo = timeLimit as TimeLimitControlInfo;\r\n        if (timeLimitInfo) {\r\n            const control = new TimeLimitControl(process.Model);\r\n            control.enable = timeLimitInfo.enable;\r\n            control.tag = timeLimitInfo.tag;\r\n            control.dueTime = timeLimitInfo.dueTime;\r\n            control.timeUnit = timeLimitInfo.timeUnit;\r\n            control.expireOperations = new Array<SendMessageExpireOperation>();\r\n            if (timeLimitInfo.expireOperations && timeLimitInfo.expireOperations.length > 0) {\r\n                for (const o of timeLimitInfo.expireOperations) {\r\n                    if (o.operationTypeName === 'SendMessageExpireOperation' || !o.operationTypeName) {\r\n                        const operation = o as SendMessageExpireOperation;\r\n                        const sendMessage = new SendMessageExpireOperation(process.Model);\r\n                        sendMessage.id = BpmnModelHelper.GenerateElementId();\r\n                        sendMessage.durationType = operation.durationType as DurationType;\r\n                        sendMessage.timeDuration = operation.timeDuration;\r\n                        sendMessage.timeUnit = operation.timeUnit;\r\n                        sendMessage.operationTypeName = operation.operationTypeName ? operation.operationTypeName : 'SendMessageExpireOperation';\r\n                        sendMessage.message = operation.message;\r\n                        sendMessage.subject = operation.subject;\r\n                        sendMessage.sendType = operation.sendType;\r\n                        sendMessage.receiver = operation.receiver;\r\n                        sendMessage.receiverText = operation.receiverText;\r\n                        sendMessage.cycleEnable = operation.cycleEnable;\r\n                        sendMessage.cycleTime = operation.cycleTime;\r\n                        sendMessage.cycleTimeUnit = operation.cycleTimeUnit;\r\n                        if (operation.smsMessageTemplate) {\r\n                            const smsMessageTemplate = new SmsMessageTemplate(process.Model);\r\n                            smsMessageTemplate.code = operation.smsMessageTemplate.code;\r\n                            smsMessageTemplate.content = operation.smsMessageTemplate.content;\r\n                            smsMessageTemplate.smsMessageVariables = new Array();\r\n                            if (operation.smsMessageTemplate.smsMessageVariables && operation.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                                for (const v of operation.smsMessageTemplate.smsMessageVariables) {\r\n                                    const variable = new SmsMessageVariable(process.Model);\r\n                                    variable.code = v.code;\r\n                                    variable.value = v.value;\r\n                                    variable.tag = v.tag;\r\n                                    smsMessageTemplate.smsMessageVariables.push(variable);\r\n                                }\r\n                            }\r\n                            sendMessage.smsMessageTemplate = smsMessageTemplate;\r\n                        }\r\n                        control.expireOperations.push(sendMessage);\r\n                    } else if (o.operationTypeName === 'AutoHandleExpireOperation') {\r\n                        const operation = o as AutoHandleExpireOperation;\r\n                        const autoHandle = new AutoHandleExpireOperation(process.Model);\r\n                        autoHandle.id = BpmnModelHelper.GenerateElementId();\r\n                        autoHandle.durationType = operation.durationType as DurationType;\r\n                        autoHandle.timeDuration = operation.timeDuration;\r\n                        autoHandle.timeUnit = operation.timeUnit;\r\n                        autoHandle.operationTypeName = operation.operationTypeName ? operation.operationTypeName : 'AutoHandleExpireOperation';\r\n                        autoHandle.autoHandleType = operation.autoHandleType;\r\n                        autoHandle.message = operation.message;\r\n                        control.expireOperations.push(autoHandle);\r\n                    }\r\n                }\r\n            }\r\n            extendElements.push(control);\r\n        }\r\n    }\r\n\r\n    updateProcessMessageNotices(notices: any[]) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof MessageNotice) {\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n            }\r\n        }\r\n        if (notices && notices.length > 0) {\r\n            for (let n of notices) {\r\n                const messageNotice = new MessageNotice(process.Model);\r\n                messageNotice.sendType = n.sendType;\r\n                messageNotice.sendTime = n.sendTime;\r\n                messageNotice.subject = n.subject;\r\n                messageNotice.content = n.content;\r\n                // messageNotice.receiver = n.receiver;\r\n                // messageNotice.receiverText = n.receiverText;\r\n                n.receivers = n.receivers.filter(r => r.type);\r\n                if (n.receivers && n.receivers.length > 0) {\r\n                    const receivers = n.receivers.filter(r => r.type === 'userParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant !== 'activityExecutorParticipant'));\r\n                    const participants = n.receivers.filter(r => r.type === 'variableParticipant' || r.type === 'positionParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant === 'activityExecutorParticipant'));\r\n                    if (receivers && receivers.length > 0) {\r\n                        let receiver = '';\r\n                        let receiverName = '';\r\n                        for (const r of receivers) {\r\n                            if (r.type === 'processParticipant') {\r\n                                receiver += (r.processParticipant + ',');\r\n                                if (r.processParticipant === 'procInstCreator') {\r\n                                    receiverName += '流程发起人,'\r\n                                } else if (r.processParticipant === 'workItemParticipant') {\r\n                                    receiverName += '任务接收人,'\r\n                                }\r\n                            } else if (r.type === 'userParticipant') {\r\n                                receiver += (r.userIds + ',');\r\n                                receiverName += (r.userNames + ',');\r\n                            }\r\n                        }\r\n                        if (receiver) {\r\n                            receiver = receiver.substring(0, receiver.length - 1);\r\n                        }\r\n                        if (receiverName) {\r\n                            receiverName = receiverName.substring(0, receiverName.length - 1);\r\n                        }\r\n                        messageNotice.receiver = receiver;\r\n                        messageNotice.receiverText = receiverName;\r\n                    }\r\n                    if (participants && participants.length > 0) {\r\n                        const receiverExpressions = new Array<ParticipantExpression>();\r\n                        for (const p of participants) {\r\n                            if (p.type === 'processParticipant') {\r\n                                let activityExecutor = new ActivityExecutorParticipantExpression(process.Model);\r\n                                activityExecutor.id = BpmnModelHelper.GenerateElementId();\r\n                                activityExecutor.activityDefId = p.activityDefId;\r\n                                activityExecutor.activityDefName = p.activityDefName;\r\n                                receiverExpressions.push(activityExecutor);\r\n                            }\r\n                            if (p.type === 'variableParticipant') {\r\n                                let variableParticipant = new UserParticipantExpression(process.Model, p.variableParticipant, p.variableName, p.orgType);\r\n                                variableParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                variableParticipant.Tag = 'expression';\r\n                                variableParticipant.OrgType = p.orgType;\r\n                                receiverExpressions.push(variableParticipant);\r\n                            }\r\n                            if (p.type === 'positionParticipant') {\r\n                                let posiParticipant = new PositionParticipantExpression(process.Model, p.positionId, p.positionName);\r\n                                posiParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                posiParticipant.PositionType = p.positionType;\r\n                                if (p.positionType === '1') {\r\n                                    posiParticipant.OrgId = p.orgId;\r\n                                    posiParticipant.OrgType = p.orgType;\r\n                                }\r\n                                receiverExpressions.push(posiParticipant);\r\n                            }\r\n                        }\r\n                        messageNotice.receiverExpressions = receiverExpressions;\r\n                    }\r\n                }\r\n\r\n                if (n.smsMessageTemplate) {\r\n                    const smsMessageTemplate = new SmsMessageTemplate(process.Model);\r\n                    smsMessageTemplate.code = n.smsMessageTemplate.code;\r\n                    smsMessageTemplate.content = n.smsMessageTemplate.content;\r\n                    smsMessageTemplate.smsMessageVariables = new Array();\r\n                    if (n.smsMessageTemplate.smsMessageVariables && n.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                        for (const v of n.smsMessageTemplate.smsMessageVariables) {\r\n                            const variable = new SmsMessageVariable(process.Model);\r\n                            variable.code = v.code;\r\n                            variable.value = v.value;\r\n                            variable.tag = v.tag;\r\n                            smsMessageTemplate.smsMessageVariables.push(variable);\r\n                        }\r\n                    }\r\n                    messageNotice.smsMessageTemplate = smsMessageTemplate;\r\n                }\r\n\r\n                extendElements.push(messageNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateImageSettings(imageSettings: any) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        if (extendElements.length > 0) {\r\n            for (let i = extendElements.length; i > 0; i--) {\r\n                if (extendElements[i - 1] instanceof ImageSettings) {\r\n                    extendElements.splice(i - 1, 1);\r\n                }\r\n            }\r\n        }\r\n        if (imageSettings) {\r\n            const imageSetting = new ImageSettings(process.Model);\r\n            imageSetting.imageOperation = imageSettings.imageOperation;\r\n            extendElements.push(imageSetting);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新扩展属性\r\n     * @param bpmnModel\r\n     * @param value\r\n     */\r\n    resetExtendProperty(value: any[]) {\r\n        const process = this.process;\r\n        let extendElements = process.GetExtensionElements();\r\n        for (const o of value) {\r\n            for (const e of extendElements) {\r\n                if (e instanceof ExtendProperty && e.key === o.code) {\r\n                    const index = extendElements.indexOf(e);\r\n                    if (index > -1) {\r\n                        extendElements.splice(index, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let attributes = value as any;\r\n        if (attributes) {\r\n            attributes.forEach(a => {\r\n                let item = new ExtendProperty(process.Model);\r\n                item.key = a.code;\r\n                item.value = a.value;\r\n                extendElements.push(item);\r\n            });\r\n        }\r\n    }\r\n\r\n    updateEnableWholeOrderRetrieve(wholeOrderRetrieve: boolean) {\r\n        let extendElements = this.process.GetExtensionElements();\r\n        if (extendElements !== null && extendElements.length > 0) {\r\n            for (let i in extendElements) {\r\n                if (extendElements[i] instanceof ProcessHeader) {\r\n                    (extendElements[i] as ProcessHeader).enableWholeOrderRetrieve = wholeOrderRetrieve;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Graph, Cell, NodeCell } from \"@edp-pmf/grapheditor\";\r\nimport { FlowNodeState, BpmnModel } from \"@edp-pmf/bpmn-model\";\r\nimport { StartMode } from \"@gsp-wf/wf-process-model\";\r\nimport { WfEditorUi } from \"./WfEditorUi\";\r\nimport { MxGraphNS, mxConstants, mxUtils } from \"@edp-pmf/mxgraph-ts\";\r\nimport { WfProcessCell } from \"./wf-cell/WfProcessCell\";\r\nimport { WfLocalePipe } from \"../i18n/pipe/wf-process-editor-locale.pipe\";\r\n\r\n/**\r\n * 工作流画布类\r\n */\r\nexport class WfGraph extends Graph {\r\n    localePipe: WfLocalePipe = null;\r\n    editorUi: WfEditorUi;\r\n    /**\r\n     * 流程元素实例\r\n     */\r\n    processCell: WfProcessCell = new WfProcessCell();\r\n    constructor(editorUi: WfEditorUi, container?: HTMLDivElement, model?: MxGraphNS.mxGraphModel, renderHint?: MxGraphNS.renderingHint, stylesheet?: MxGraphNS.mxStylesheet, themes?: Element) {\r\n        super(editorUi, container, model, renderHint, stylesheet, themes);\r\n    }\r\n\r\n    bpmnCellsSelectionChanged(cells: Cell[], sender: MxGraphNS.mxEventSource, eventObject: MxGraphNS.mxEventObject): void {\r\n      super.bpmnCellsSelectionChanged(cells, sender, eventObject);\r\n      // 修改选中节点样式\r\n      const selected = this.getSelectionCells() as NodeCell[];\r\n      const all = this.getChildVertices(this.getDefaultParent()) as NodeCell[];\r\n      all.forEach(c => {\r\n          if (selected.includes(c) && c.imgUrls && c.imgUrls[FlowNodeState.Selected]) {\r\n              c.setStyle(mxUtils.setStyle(c.getStyle(), mxConstants.STYLE_IMAGE, c.imgUrls[FlowNodeState.Selected]));\r\n          } else {\r\n              c.setStyle(mxUtils.setStyle(c.getStyle(), mxConstants.STYLE_IMAGE, c.imgUrls[FlowNodeState.Default]));\r\n          }\r\n          this.refresh(c);\r\n      });\r\n  }\r\n\r\n    /**\r\n     * 重写创建流程元素实例方法\r\n     * @param bpmnModel\r\n     * @returns\r\n     */\r\n    createProcessCell(bpmnModel: BpmnModel) {\r\n        const processCell = new WfProcessCell();\r\n        processCell.process = bpmnModel.DefaultProcess;\r\n        processCell.plane = bpmnModel.DefaultDiagram.BpmnPlane;\r\n        processCell.editorUi = this.editorUi;\r\n        return processCell;\r\n    }\r\n\r\n    /**\r\n     * 给定新流程信息创建BpmnModel\r\n     * @param newProcInfo\r\n     * @param bizCmps\r\n     */\r\n    createBpmnModelWithProcInfo(newProcInfo: any, bizCmps: any) {\r\n        const bpmnModel = this.createBpmnModel();\r\n        this.bpmnModel = bpmnModel;\r\n        this.processCell = this.createProcessCell(this.bpmnModel);\r\n        if (this.editorUi.langCode === 'zh-CHS') {\r\n          this.bpmnModel.DefaultProcess.Name = newProcInfo.name || bpmnModel.DefaultProcess.Name;\r\n        }\r\n        this.bpmnModel.DefaultProcess.NameLanguage = {\r\n          [this.editorUi.langCode]: newProcInfo.name || bpmnModel.DefaultProcess.Name,\r\n        }\r\n        //设置流程Header(业务对象ID、流程分类ID)\r\n        this.processCell.setProcessHeader(newProcInfo.ffId, newProcInfo.bizObjId, newProcInfo.ffName, newProcInfo.startMode as StartMode);\r\n\r\n        // 基于流程分类绑定参数，流程构件，流程表单\r\n        this.processCell.updateFlowFormInfo(newProcInfo.formalParameters, newProcInfo.processBizComponnets, newProcInfo.executeForms, newProcInfo.customizeActions, bizCmps);\r\n        this.processCell.modifyProcessTitleExpression(newProcInfo.processDescription);\r\n    }\r\n    setDefaultStyles(): void {\r\n      super.setDefaultStyles();\r\n\r\n      const styleSheet = this.getStylesheet();\r\n      // 连线样式默认为正交\r\n      const edgeStyle = styleSheet.getDefaultEdgeStyle();\r\n      edgeStyle[mxConstants.STYLE_ROUNDED] = 1;\r\n  }\r\n}\r\n","import { Sidebar, BpmnCellHelper, Graph, PmfEvents, IEditorUi } from \"@edp-pmf/grapheditor\";\r\nimport { BizActivity, UserActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { mxGeometry, MxGraphNS, mxEvent, mxEventObject, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { UserActivityCell } from \"./wf-cell/UserActivityCell\";\r\nimport { WfConstants } from \"./WfConstants\";\r\n\r\nexport class WfSidebar extends Sidebar {\r\n    bizActivities: BizActivity[] = [];\r\n    /**\r\n     * 添加业务活动面板\r\n     * @param bizActivities \r\n     */\r\n    addBizActPalette(bizActivities: BizActivity[]): void {\r\n        //如果添加了业务活动面板，需要先移除\r\n        if (this.palettes[\"bizactivitylib\"]) {\r\n            this.container.removeChild(this.palettes[\"bizactivitylib\"][0]);\r\n            this.container.removeChild(this.palettes[\"bizactivitylib\"][1]);\r\n            delete this.palettes[\"bizactivitylib\"];\r\n        }\r\n        this.bizActivities = bizActivities;\r\n        let bizActFactories = new Array<() => HTMLAnchorElement>();\r\n        //添加业务活动\r\n        this.bizActivities && this.bizActivities.forEach((activity: BizActivity) => {\r\n            const style = 'image=' + WfConstants.IMAGE_PATH + '/bizActivity.png;';\r\n            const cell = BpmnCellHelper.generate(UserActivity.Clr_Type_ID, undefined, new mxGeometry(0, 0, this.defaultImageWidth, this.defaultImageHeight), style) as UserActivityCell;\r\n            cell.name = activity.name;\r\n            cell.bizActivity = activity;\r\n\r\n            bizActFactories.push(this.createItemFactory([cell], cell.name, this.defaultImageWidth, this.defaultImageHeight));\r\n        });\r\n\r\n        if (bizActFactories.length > 0) {\r\n            this.addPaletteFunctions('bizactivitylib',  mxResources.get('bizactivitylib'), true, bizActFactories);\r\n        }\r\n    }\r\n}","import { ExclusiveGateway, BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { ExclusiveGatewayCell } from \"@edp-pmf/grapheditor\";\r\nimport { WfConstants } from \"../WfConstants\";\r\n\r\n/**\r\n * 排他网关节点，增加状态图片信息\r\n */\r\nexport class WfExclusiveGatewayCell extends ExclusiveGatewayCell {\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/ExclusiveGateway.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/ExclusiveGateway_select.svg\",\r\n    };\r\n\r\n    createFlowElement(flowElt?: ExclusiveGateway) {\r\n        const flowNode = super.createFlowElement(flowElt) as ExclusiveGateway;\r\n        flowNode.Id = \"ExclusiveGateway\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        return flowNode;\r\n    }\r\n}","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { AifCreationBillActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { AifCreationBillActivityPropertyKeys } from \"./property-keys/AifCreationBillActivityPropertyKeys\";\r\n\r\n/**\r\n * 自动生单活动节点\r\n */\r\nexport class AifCreationBillActivityCell extends NodeCell {\r\n    clrTypeId: string = AifCreationBillActivityCell.CLR_TYPE_ID;\r\n    name: string = \"自动生单\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"自动生单\",\r\n      \"zh-CHT\": \"自動生單\",\r\n      \"en\": \"Creation Bill \",\r\n  };\r\n    static CLR_TYPE_ID: string = AifCreationBillActivity.Clr_Type_ID;\r\n    flowElement: AifCreationBillActivity;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/aifCreationActivity.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/aifCreationActivity_select.svg\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: AifCreationBillActivity): AifCreationBillActivity {\r\n        const flowNode = super.createFlowElement(flowElt) as AifCreationBillActivity;\r\n        flowNode.Id = \"AifCreationBillActivity\" + BpmnModelHelper.GenerateElementId();\r\n        return flowNode;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        let act = this.flowElement;\r\n\r\n        let PropertyConfig: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = new Object();\r\n        PropertyConfig.categoryId = 'general';\r\n        PropertyConfig.categoryName = mxResources.get('basicInformation');\r\n        PropertyConfig.tabId = 'basic';\r\n        PropertyConfig.tabName = mxResources.get('basicAttributes');\r\n        PropertyConfig.properties = [\r\n            { propertyID: AifCreationBillActivityPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: AifCreationBillActivityPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: AifCreationBillActivityPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true }\r\n        ];\r\n\r\n        let bifDef = new ElementPropertyConfig();\r\n        bifDef.categoryId = 'bifDef';\r\n        bifDef.categoryName = mxResources.get('bifDef');\r\n        bifDef.tabId = 'basic';\r\n        bifDef.tabName = mxResources.get('basicAttributes')\r\n        bifDef.properties = [\r\n            { propertyID: AifCreationBillActivityPropertyKeys.aifProcessCode, propertyName: mxResources.get('aifProcess'), propertyType: 'modal' },\r\n            // { propertyID: AifCreationBillActivityResourceKeys.isRelied, propertyName: '后续依赖', propertyType: 'boolean' },\r\n        ];\r\n\r\n        propertyData[AifCreationBillActivityPropertyKeys.Id] = act.Id;\r\n        propertyData[AifCreationBillActivityPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n\r\n        propertyData[AifCreationBillActivityPropertyKeys.Name] = act.Name || mxResources.get('autoAif');\r\n        propertyData[AifCreationBillActivityPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n            \"zh-CHS\": act.Name,\r\n        };\r\n        propertyData[AifCreationBillActivityPropertyKeys.aifProcessCode] = act.aifProcessCode\r\n        propertyData[AifCreationBillActivityPropertyKeys.isRelied] = act.isRelied\r\n\r\n        return {\r\n            propertyConfig: [PropertyConfig, bifDef],\r\n            propertyData: propertyData\r\n        }\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case AifCreationBillActivityPropertyKeys.aifProcessCode:\r\n                this.resetProcessCode(this.flowElement, obj);\r\n                break;\r\n            default:\r\n                super.updateProps(obj);\r\n                break;\r\n        }\r\n    }\r\n\r\n    resetProcessCode(startActivity: AifCreationBillActivity, obj: any) {\r\n        const data = obj.propertyValue;\r\n        if (data) {\r\n            startActivity.aifProcessCode = data;\r\n        } else {\r\n            startActivity.aifProcessCode = null;\r\n        }\r\n    }\r\n}\r\n","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { AutoActivity, Component, Tool, ActualParameter, VariableSetting } from \"@gsp-wf/wf-process-model\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\nimport { BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { AutoActivityPropertyKeys } from \"./property-keys/AutoActivityPropertyKeys\";\r\n\r\n/**\r\n * 服务活动节点\r\n */\r\nexport class AutoActivityCell extends NodeCell {\r\n    clrTypeId: string = AutoActivityCell.CLR_TYPE_ID;\r\n    name: string = \"服务\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"服务\",\r\n      \"zh-CHT\": \"服務\",\r\n      \"en\": \"Service \",\r\n  };\r\n    static CLR_TYPE_ID: string = AutoActivity.Clr_Type_ID;\r\n    flowElement: AutoActivity;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/auto.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/auto_select.svg\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: AutoActivity) {\r\n        const flowNode = super.createFlowElement(flowElt) as AutoActivity;\r\n        flowNode.Id = \"autoActivity\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        return flowNode;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        let act = this.flowElement;\r\n\r\n        // 组织属性框\r\n        let basicProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let activityProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = {};\r\n\r\n        basicProperty.categoryId = 'basicProperty';\r\n        basicProperty.categoryName = mxResources.get('basicInformation');\r\n        basicProperty.tabId = 'basic';\r\n        basicProperty.tabName = mxResources.get('basicAttributes');\r\n        basicProperty.properties = [\r\n            { propertyID: AutoActivityPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: AutoActivityPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: AutoActivityPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true }\r\n        ];\r\n\r\n\r\n        activityProperty.categoryId = 'activityProperty';\r\n        activityProperty.categoryName = mxResources.get('activityProperty');\r\n        activityProperty.tabId = 'basic';\r\n        activityProperty.tabName = mxResources.get('basicAttributes');\r\n        activityProperty.properties = [\r\n            { propertyID: AutoActivityPropertyKeys.Tools, propertyName: mxResources.get('tools'), propertyType: 'modal' },\r\n            { propertyID: AutoActivityPropertyKeys.variableSettings, propertyName: mxResources.get('variableSettings'), propertyType: 'modal' },\r\n        ];\r\n\r\n        propertyData[AutoActivityPropertyKeys.Id] = act.Id;\r\n        propertyData[AutoActivityPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n        propertyData[AutoActivityPropertyKeys.Name] = act.Name;\r\n        propertyData[AutoActivityPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n            \"zh-CHS\": act.Name,\r\n        };\r\n        propertyData[AutoActivityPropertyKeys.Tools] = PropertyHelper.getBizComponentList(act.tools as Array<Component>);\r\n        propertyData[AutoActivityPropertyKeys.variableSettings] = PropertyHelper.getVariableSettings(act.Model, act.variableSettings);\r\n\r\n        return {\r\n            propertyConfig: [basicProperty, activityProperty],\r\n            propertyData: propertyData\r\n        }\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const autoActivity = this.flowElement;\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case AutoActivityPropertyKeys.Tools:\r\n                this.updateAutoActivityTools(autoActivity, obj);\r\n                break;\r\n            case AutoActivityPropertyKeys.variableSettings:\r\n                this.updateVariableSettings(autoActivity, obj);\r\n                break;\r\n            default:\r\n                super.updateProps(obj);\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateAutoActivityTools(autoActivity: AutoActivity, obj: any) {\r\n        let tools = obj.propertyValue as any[];\r\n        autoActivity.tools = new Array<Tool>();\r\n        if (tools && tools.length > 0) {\r\n            for (const tool of tools) {\r\n                let component = new Component(autoActivity.Model);\r\n                component.Id = tool.id;\r\n                component.Name = tool.name;\r\n                // component.Time = tool.executionTime;\r\n                // TODO 写死了构件类型\r\n                component.ComponentType = 'WebServiceComponent';\r\n                component.MetadataId = tool.metadataId;\r\n                component.MethodCode = tool.methodCode;\r\n                component.isForCompensation = tool.isForCompensation;\r\n                component.ActualParameters = [];\r\n                if (tool.actualParameters && (tool.actualParameters as any[]).length > 0) {\r\n                    for (let a of (tool.actualParameters as any[])) {\r\n                        let parameter = new ActualParameter(autoActivity.Model, a.code, a.value);\r\n                        component.ActualParameters.push(parameter);\r\n                    }\r\n                }\r\n                autoActivity.tools.push(component);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVariableSettings(autoActivity: AutoActivity, obj: any) {\r\n        const bpmnModel = autoActivity.Model;\r\n        const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n        if (autoActivity.variableSettings && autoActivity.variableSettings.length > 0) {\r\n            for (const v of autoActivity.variableSettings) {\r\n                if (v.tag === 'component') {\r\n                    const i = extendElements.findIndex(e => (e instanceof Component && e.Id === v.value));\r\n                    extendElements.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        autoActivity.variableSettings = new Array();\r\n\r\n        const variables = obj.propertyValue as any[];\r\n        if (variables && variables.length > 0) {\r\n            for (const v of variables) {\r\n                const variableSetting = new VariableSetting(bpmnModel);\r\n                variableSetting.variableCode = v.variableCode;\r\n                variableSetting.variableName = v.variableName;\r\n                variableSetting.tag = v.tag;\r\n                variableSetting.executionTime = v.executionTime;\r\n                variableSetting.value = v.value;\r\n                variableSetting.valueText = v.valueText;\r\n\r\n                autoActivity.variableSettings.push(variableSetting);\r\n                if (variableSetting.tag === 'component') {\r\n                    const c = v.component;\r\n                    if (c) {\r\n                        let cpt = new Component(bpmnModel);\r\n                        cpt.MetadataId = c.MetadataId;\r\n                        cpt.MethodCode = c.MethodCode;\r\n                        cpt.Id = c.Id;\r\n                        cpt.Name = c.Name;\r\n                        cpt.ActualParameters = new Array();\r\n                        if (c.ActualParameters && c.ActualParameters.length > 0) {\r\n                            for (let a of c.ActualParameters) {\r\n                                let parameter = new ActualParameter(bpmnModel, a.Name, a.Value);\r\n                                parameter.Tag = a.Tag;\r\n                                cpt.ActualParameters.push(parameter);\r\n                            }\r\n                        }\r\n\r\n                        extendElements.push(cpt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { CallActivitySubProcess, Component, BackWardRule, ActualParameter, VariableSetting, SemanticExpression, CounterSignRule, Condition } from \"@gsp-wf/wf-process-model\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\nimport { BpmnModelHelper, Expression, FlowNodeState, MultiInstanceLoopCharacteristics } from \"@edp-pmf/bpmn-model\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { CallActivitySubProcessPropertyKeys } from \"./property-keys/CallActivitySubProcessPropertyKeys\";\r\n\r\n/**\r\n * 子流程活动节点\r\n */\r\nexport class CallActivitySubProcessCell extends NodeCell {\r\n    clrTypeId: string = CallActivitySubProcessCell.CLR_TYPE_ID;\r\n    name: string = \"子流程\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"子流程\",\r\n      \"zh-CHT\": \"子流程\",\r\n      \"en\": \"Sub-Process\",\r\n  };\r\n    static CLR_TYPE_ID: string = CallActivitySubProcess.Clr_Type_ID;\r\n    flowElement: CallActivitySubProcess;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/sub.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/sub_select.svg\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: CallActivitySubProcess) {\r\n        const flowNode = super.createFlowElement(flowElt) as CallActivitySubProcess;\r\n        flowNode.Id = \"CallActivitySubProcess\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        return flowNode;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        let act = this.flowElement;\r\n        // 组织属性框\r\n        let basicProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let activityProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = {};\r\n\r\n        // 基本属性（名称）\r\n        basicProperty.categoryId = 'basicProperty';\r\n        basicProperty.categoryName = mxResources.get('basicInformation');\r\n        basicProperty.tabId = 'basic';\r\n        basicProperty.tabName = mxResources.get('basicAttributes')\r\n        basicProperty.properties = [\r\n            { propertyID: CallActivitySubProcessPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: CallActivitySubProcessPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: CallActivitySubProcessPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true }\r\n        ];\r\n\r\n        // 活动选项（表单定义+活动构件）\r\n        activityProperty.categoryId = 'activityProperty';\r\n        activityProperty.categoryName = mxResources.get('activityProperty');\r\n        activityProperty.tabId = 'basic';\r\n        activityProperty.tabName = mxResources.get('basicAttributes')\r\n        activityProperty.properties = [\r\n            { propertyID: CallActivitySubProcessPropertyKeys.callActivitySubProcess, propertyName: mxResources.get('callActivitySubProcess'), propertyType: 'modal' },\r\n            { propertyID: CallActivitySubProcessPropertyKeys.variableSettings, propertyName: mxResources.get('variableSettings'), propertyType: 'modal' },\r\n            { propertyID: CallActivitySubProcessPropertyKeys.BackWardRule, propertyName: mxResources.get('backWardRule'), propertyType: 'modal' },\r\n            { propertyID: CallActivitySubProcessPropertyKeys.MultiInstanceLoopCharacteristics, propertyName: mxResources.get('multiInstanceLoopCharacteristics'), propertyType: 'modal' }\r\n        ];\r\n\r\n        propertyData[CallActivitySubProcessPropertyKeys.Id] = act.Id;\r\n        propertyData[CallActivitySubProcessPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n        propertyData[CallActivitySubProcessPropertyKeys.Name] = act.Name;\r\n        propertyData[CallActivitySubProcessPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n            \"zh-CHS\": act.Name,\r\n        };\r\n        propertyData[CallActivitySubProcessPropertyKeys.callActivitySubProcess] = {\r\n            calledBizDefKey: act.calledBizDefKey,\r\n            calledElement: act.CalledElement,\r\n            inheritVariables: act.inheritVariables,\r\n            inheritBizDataId: act.inheritBizDataId,\r\n            bizDataId: act.bizDataId,\r\n            aifProcessCode: act.aifProcessCode,\r\n            useAutoCreationData: act.useAutoCreationData,\r\n        };\r\n        propertyData[CallActivitySubProcessPropertyKeys.BackWardRule] = act.backWardRule;\r\n        propertyData[CallActivitySubProcessPropertyKeys.variableSettings] = PropertyHelper.getVariableSettings(act.Model, act.variableSettings);\r\n        propertyData[CallActivitySubProcessPropertyKeys.MultiInstanceLoopCharacteristics] = act.LoopCharacteristics;\r\n        \r\n        return {\r\n            propertyConfig: [basicProperty, activityProperty],\r\n            propertyData: propertyData\r\n        }\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const subProcess = this.flowElement;\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case CallActivitySubProcessPropertyKeys.callActivitySubProcess:\r\n                this.updateSubProcessConfig(subProcess, obj);\r\n                break;\r\n            case CallActivitySubProcessPropertyKeys.BackWardRule:\r\n                this.updateBackWardRule(subProcess, obj);\r\n                break;\r\n            case CallActivitySubProcessPropertyKeys.variableSettings:\r\n                this.updateVariableSettings(subProcess, obj);\r\n                break;\r\n            case CallActivitySubProcessPropertyKeys.MultiInstanceLoopCharacteristics:\r\n                this.updateMultiInstanceLoopCharacteristic(subProcess, obj);\r\n                break;\r\n            default:\r\n                super.updateProps(obj);\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateSubProcessConfig(subProcess: CallActivitySubProcess, obj: any) {\r\n        const config: any = obj.propertyValue;\r\n        if (subProcess) {\r\n            subProcess.calledBizDefKey = config.calledBizDefKey;\r\n            subProcess.CalledElement = config.calledElement;\r\n            subProcess.inheritBizDataId = config.inheritBizDataId;\r\n            subProcess.inheritVariables = config.inheritVariables;\r\n            subProcess.bizDataId = config.bizDataId;\r\n            subProcess.aifProcessCode = config.aifProcessCode;\r\n            subProcess.useAutoCreationData = config.useAutoCreationData;\r\n        }\r\n    }\r\n\r\n    updateBackWardRule(subProcess: CallActivitySubProcess, obj: any) {\r\n        const data = obj.propertyValue;\r\n        let backWardRule = new BackWardRule(subProcess.Model);\r\n        backWardRule.TargetRef = data.TargetRef;\r\n        backWardRule.SelectTargetAble = data.SelectTargetAble;\r\n        backWardRule.WaitReturn = data.WaitReturn;\r\n        backWardRule.ResubmitEffect = data.ResubmitEffect;\r\n        backWardRule.DynamicBackWardRuleAble = data.DynamicBackWardRuleAble;\r\n        backWardRule.SelectTargetList = data.SelectTargetList;\r\n\r\n        subProcess.backWardRule = backWardRule;\r\n    }\r\n\r\n    updateVariableSettings(subProcess: CallActivitySubProcess, obj: any) {\r\n        const bpmnModel = this.flowElement.Model;\r\n        const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n        if (subProcess.variableSettings && subProcess.variableSettings.length > 0) {\r\n            for (const v of subProcess.variableSettings) {\r\n                if (v.tag === 'component') {\r\n                    const i = extendElements.findIndex(e => (e instanceof Component && e.Id === v.value));\r\n                    extendElements.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        subProcess.variableSettings = new Array();\r\n\r\n        const variables = obj.propertyValue as any[];\r\n        if (variables && variables.length > 0) {\r\n            for (const v of variables) {\r\n                const variableSetting = new VariableSetting(bpmnModel);\r\n                // variableSetting.variableId = v.variableId;\r\n                variableSetting.variableCode = v.variableCode;\r\n                variableSetting.variableName = v.variableName;\r\n                variableSetting.tag = v.tag;\r\n                variableSetting.executionTime = v.executionTime;\r\n                variableSetting.value = v.value;\r\n                variableSetting.valueText = v.valueText;\r\n\r\n                subProcess.variableSettings.push(variableSetting);\r\n                if (variableSetting.tag === 'component') {\r\n                    const c = v.component;\r\n                    if (c) {\r\n                        let cpt = new Component(bpmnModel);\r\n                        cpt.MetadataId = c.MetadataId;\r\n                        cpt.MethodCode = c.MethodCode;\r\n                        cpt.Id = c.Id;\r\n                        cpt.Name = c.Name;\r\n                        cpt.ActualParameters = new Array();\r\n                        if (c.ActualParameters && c.ActualParameters.length > 0) {\r\n                            for (let a of c.ActualParameters) {\r\n                                let parameter = new ActualParameter(bpmnModel, a.Name, a.Value);\r\n                                parameter.Tag = a.Tag;\r\n                                cpt.ActualParameters.push(parameter);\r\n                            }\r\n                        }\r\n\r\n                        extendElements.push(cpt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateMultiInstanceLoopCharacteristic(subProcess: CallActivitySubProcess, obj: any) {\r\n        const data = obj.propertyValue;\r\n        let loopCharacteristics = new MultiInstanceLoopCharacteristics(subProcess.Model);\r\n        loopCharacteristics.enable = data.enable;\r\n        loopCharacteristics.sequential = data.sequential;\r\n        loopCharacteristics.loopCardinality = data.loopCardinality;\r\n        loopCharacteristics.completionCondition = data.completionCondition;\r\n        loopCharacteristics.completionConditionRules = data.completionConditionRules;\r\n\r\n        subProcess.LoopCharacteristics = loopCharacteristics;\r\n        if(obj.propertyValue) {\r\n            const data = obj.propertyValue;\r\n            let loopCharacteristics = new MultiInstanceLoopCharacteristics(subProcess.Model);\r\n            loopCharacteristics.enable = data.enable;\r\n            loopCharacteristics.sequential = data.sequential;\r\n            loopCharacteristics.loopCardinality = new Expression(subProcess.Model);\r\n            if(data.loopCardinality) {\r\n                let variableExpression = new SemanticExpression(subProcess.Model);\r\n                variableExpression.Value = data.loopCardinality;\r\n                loopCharacteristics.loopCardinality.MexExpression = variableExpression;\r\n            }\r\n            loopCharacteristics.completionCondition = data.completionCondition;\r\n            let rules = data.completionConditionRules as any[];\r\n            loopCharacteristics.completionConditionRules = null;\r\n            if(rules && rules.length > 0) {\r\n                loopCharacteristics.completionConditionRules = new Array<CounterSignRule>();\r\n                for(let rule of rules) {\r\n                    let counterSignRule = new CounterSignRule(subProcess.Model);\r\n                    let condition = new Condition(subProcess.Model);\r\n                    condition.Value = rule.CompletionCondition.Value;\r\n                    counterSignRule.ConclusionValue = rule.ConclusionValue;\r\n                    counterSignRule.CalculateType = rule.CalculateType;\r\n                    counterSignRule.ConditionValue = rule.ConditionValue;\r\n                    counterSignRule.WaitAllVotes = rule.WaitAllVotes;\r\n                    counterSignRule.CompletionCondition = condition;\r\n                    loopCharacteristics.completionConditionRules.push(counterSignRule);\r\n                }\r\n            }\r\n            subProcess.LoopCharacteristics = loopCharacteristics;\r\n        }\r\n    }\r\n}\r\n","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { Signal, EventDefinition, BPMNShape } from \"@edp-pmf/bpmn-model\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { IntermediateCatchEventImpl, Component, BackWardRule, ActualParameter, VariableSetting, SignalEventDefinitionImpl } from \"@gsp-wf/wf-process-model\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\nimport { BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { IntermediateCatchEventImplPropertyKeys } from \"./property-keys/IntermediateCatchEventImplPropertyKeys\";\r\n\r\n/**\r\n * 信号捕获活动节点\r\n */\r\nexport class IntermediateCatchEventImplCell extends NodeCell {\r\n    clrTypeId: string = IntermediateCatchEventImplCell.CLR_TYPE_ID;\r\n    name: string = \"信号捕获\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"信号捕获\",\r\n      \"zh-CHT\": \"訊號捕獲\",\r\n      \"en\": \"Acquisition\",\r\n  };\r\n    static CLR_TYPE_ID: string = IntermediateCatchEventImpl.Clr_Type_ID;\r\n    flowElement: IntermediateCatchEventImpl;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/catchEvent.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/catchEvent_select.svg\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: IntermediateCatchEventImpl) {\r\n        const flowNode = super.createFlowElement(flowElt) as IntermediateCatchEventImpl;\r\n        flowNode.Id = \"IntermediateCatchEvent\" + BpmnModelHelper.GenerateElementId();\r\n        // 创建而非复制时执行\r\n        if (flowElt == null) {\r\n            flowNode.initEventDefinitions();\r\n        }\r\n\r\n        return flowNode;\r\n    }\r\n\r\n    bindBpmnModel(flowElt?: IntermediateCatchEventImpl, diagElt?: BPMNShape): void {\r\n        super.bindBpmnModel(flowElt, diagElt);\r\n\r\n        const bpmnModel = this.editorUi.graph.bpmnModel;\r\n        this.addSignals(this.flowElement);\r\n    }\r\n\r\n    addSignals(catchEvent: IntermediateCatchEventImpl) {\r\n        const bpmnModel = catchEvent.Model;\r\n        if (catchEvent.EventDefinitions && catchEvent.EventDefinitions.length > 0) {\r\n            if (!bpmnModel.signals) {\r\n                bpmnModel.signals = [];\r\n            }\r\n            for (const e of catchEvent.EventDefinitions) {\r\n                const event = e as SignalEventDefinitionImpl;\r\n                if (bpmnModel.signals.findIndex(s => s.Name === event.SignalRef) === -1) {\r\n                    const signal = new Signal(bpmnModel);\r\n                    signal.Name = event.SignalRef;\r\n                    bpmnModel.signals.push(signal);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        let act = this.flowElement;\r\n\r\n        let basicProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let activityProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = {};\r\n\r\n        basicProperty.categoryId = 'basicProperty';\r\n        basicProperty.categoryName = mxResources.get('basicInformation');\r\n        basicProperty.tabId = 'basic';\r\n        basicProperty.tabName = mxResources.get('basicAttributes');\r\n        basicProperty.properties = [\r\n            { propertyID: IntermediateCatchEventImplPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: IntermediateCatchEventImplPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: IntermediateCatchEventImplPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true }\r\n        ];\r\n\r\n\r\n        activityProperty.categoryId = 'activityProperty';\r\n        activityProperty.categoryName = mxResources.get('activityProperty');\r\n        activityProperty.tabId = 'basic';\r\n        activityProperty.tabName = mxResources.get('basicAttributes');\r\n        activityProperty.properties = [\r\n            { propertyID: IntermediateCatchEventImplPropertyKeys.EventDefinitions, propertyName: mxResources.get('eventDefinitions'), propertyType: 'modal' },\r\n            { propertyID: IntermediateCatchEventImplPropertyKeys.variableSettings, propertyName: mxResources.get('variableSettings'), propertyType: 'modal' }\r\n        ];\r\n        if (act.EventDefinitions && this.isBackEventExist(act.EventDefinitions)) {\r\n            activityProperty.properties.push(\r\n                { propertyID: IntermediateCatchEventImplPropertyKeys.BackWardRule, propertyName: mxResources.get('backWardRule'), propertyType: 'modal' }\r\n            );\r\n            propertyData[IntermediateCatchEventImplPropertyKeys.BackWardRule] = act.backWardRule;\r\n        }\r\n\r\n        propertyData[IntermediateCatchEventImplPropertyKeys.Id] = act.Id;\r\n        propertyData[IntermediateCatchEventImplPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n        propertyData[IntermediateCatchEventImplPropertyKeys.Name] = act.Name;\r\n        propertyData[IntermediateCatchEventImplPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n            \"zh-CHS\": act.Name,\r\n        };\r\n        propertyData[IntermediateCatchEventImplPropertyKeys.EventDefinitions] = act.EventDefinitions;\r\n        propertyData[IntermediateCatchEventImplPropertyKeys.variableSettings] = PropertyHelper.getVariableSettings(act.Model, act.variableSettings);\r\n\r\n        return {\r\n            propertyConfig: [basicProperty, activityProperty],\r\n            propertyData: propertyData\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否存在反向事件\r\n     * @param\r\n     */\r\n    isBackEventExist(events: EventDefinition[]) {\r\n        for (let e of events) {\r\n            const event = e as SignalEventDefinitionImpl;\r\n            if (event.triggerAction === 'Back') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const catchEvent = this.flowElement;\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case IntermediateCatchEventImplPropertyKeys.EventDefinitions:\r\n                this.updateEventDefinitions(catchEvent, obj);\r\n                break;\r\n            case IntermediateCatchEventImplPropertyKeys.BackWardRule:\r\n                this.updateBackWardRule(catchEvent, obj);\r\n                break;\r\n            case IntermediateCatchEventImplPropertyKeys.variableSettings:\r\n                this.updateVariableSettings(catchEvent, obj);\r\n                break;\r\n            default:\r\n                super.updateProps(obj);\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateEventDefinitions(catchEvent: IntermediateCatchEventImpl, obj: any) {\r\n        if (catchEvent) {\r\n            this.removeSignals(catchEvent);\r\n            let events = obj.propertyValue as any[];\r\n            catchEvent.EventDefinitions = new Array<EventDefinition>();\r\n            for (let e of events) {\r\n                let item = new SignalEventDefinitionImpl(catchEvent.Model);\r\n                item.name = e.name;\r\n                item.triggerAction = e.triggerAction\r\n                item.Async = false;\r\n                item.SignalRef = e.SignalRef;\r\n\r\n                catchEvent.EventDefinitions.push(item);\r\n            }\r\n            this.addSignals(catchEvent);\r\n        }\r\n        // 判断审批项是否包含驳回？不包含时，驳回规则清空\r\n        if (!this.isBackEventExist(catchEvent.EventDefinitions)) {\r\n            catchEvent.backWardRule = null;\r\n        } else if (!catchEvent.backWardRule) {\r\n            catchEvent.backWardRule = new BackWardRule(catchEvent.Model);\r\n        }\r\n        // 更新属性框\r\n        // Utils.postMessage(ResourceKeys.wf_showProperty, this.getPropConfig());\r\n    }\r\n\r\n    updateBackWardRule(catchEvent: IntermediateCatchEventImpl, obj: any) {\r\n        const data = obj.propertyValue;\r\n        let backWardRule = new BackWardRule(catchEvent.Model);\r\n        backWardRule.TargetRef = data.TargetRef;\r\n        backWardRule.SelectTargetAble = data.SelectTargetAble;\r\n        backWardRule.WaitReturn = data.WaitReturn;\r\n        backWardRule.ResubmitEffect = data.ResubmitEffect;\r\n        backWardRule.DynamicBackWardRuleAble = data.DynamicBackWardRuleAble;\r\n        backWardRule.SelectTargetList = data.SelectTargetList;\r\n\r\n        catchEvent.backWardRule = backWardRule;\r\n    }\r\n\r\n    updateVariableSettings(catchEvent: IntermediateCatchEventImpl, obj: any) {\r\n        const bpmnModel = catchEvent.Model;\r\n        const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n        if (catchEvent.variableSettings && catchEvent.variableSettings.length > 0) {\r\n            for (const v of catchEvent.variableSettings) {\r\n                if (v.tag === 'component') {\r\n                    const i = extendElements.findIndex(e => (e instanceof Component && e.Id === v.value));\r\n                    extendElements.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        catchEvent.variableSettings = new Array();\r\n\r\n        const variables = obj.propertyValue as any[];\r\n        if (variables && variables.length > 0) {\r\n            for (const v of variables) {\r\n                const variableSetting = new VariableSetting(bpmnModel);\r\n                // variableSetting.variableId = v.variableId;\r\n                variableSetting.variableCode = v.variableCode;\r\n                variableSetting.variableName = v.variableName;\r\n                variableSetting.tag = v.tag;\r\n                variableSetting.executionTime = v.executionTime;\r\n                variableSetting.value = v.value;\r\n                variableSetting.valueText = v.valueText;\r\n\r\n                catchEvent.variableSettings.push(variableSetting);\r\n                if (variableSetting.tag === 'component') {\r\n                    const c = v.component;\r\n                    if (c) {\r\n                        let cpt = new Component(bpmnModel);\r\n                        cpt.MetadataId = c.MetadataId;\r\n                        cpt.MethodCode = c.MethodCode;\r\n                        cpt.Id = c.Id;\r\n                        cpt.Name = c.Name;\r\n                        cpt.ActualParameters = new Array();\r\n                        if (c.ActualParameters && c.ActualParameters.length > 0) {\r\n                            for (let a of c.ActualParameters) {\r\n                                let parameter = new ActualParameter(bpmnModel, a.Name, a.Value);\r\n                                parameter.Tag = a.Tag;\r\n                                cpt.ActualParameters.push(parameter);\r\n                            }\r\n                        }\r\n\r\n                        extendElements.push(cpt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    removeSignals(catchEvent: IntermediateCatchEventImpl) {\r\n        const bpmnModel = catchEvent.Model;\r\n        if (catchEvent.EventDefinitions && catchEvent.EventDefinitions.length > 0) {\r\n            const flowElements = bpmnModel.DefaultProcess.GetFlowElements();\r\n            const eventDefs = new Map<string, SignalEventDefinitionImpl>();\r\n            for (const key in flowElements) {\r\n                if (flowElements[key] instanceof IntermediateCatchEventImpl && flowElements[key].Id !== catchEvent.Id) {\r\n                    const catchEvent = flowElements[key] as IntermediateCatchEventImpl;\r\n                    for (const e of catchEvent.EventDefinitions) {\r\n                        const event = e as SignalEventDefinitionImpl;\r\n                        if (!eventDefs.get(event.SignalRef)) {\r\n                            eventDefs.set(event.SignalRef, event);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (const e of catchEvent.EventDefinitions) {\r\n                const eventDef = e as SignalEventDefinitionImpl;\r\n                if (!eventDefs.get(eventDef.SignalRef)) {\r\n                    const i = bpmnModel.signals.findIndex(s => s.Name === eventDef.SignalRef);\r\n                    if (i > -1) {\r\n                        bpmnModel.signals.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { MessageActivity, MessageNotice, Component, ParticipantExpression, ActivityExecutorParticipantExpression, UserParticipantExpression, PositionParticipantExpression, VariableSetting, ActualParameter, SmsMessageTemplate, SmsMessageVariable, } from \"@gsp-wf/wf-process-model\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { MessageActivityPropertyKeys } from \"./property-keys/MessageActivityPropertyKeys\";\r\n\r\n/**\r\n * 消息活动节点\r\n */\r\nexport class MessageActivityCell extends NodeCell {\r\n    clrTypeId: string = MessageActivityCell.CLR_TYPE_ID;\r\n    name: string = \"消息\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"消息\",\r\n      \"zh-CHT\": \"消息\",\r\n      \"en\": \"Message\",\r\n  };\r\n    static CLR_TYPE_ID: string = MessageActivity.Clr_Type_ID;\r\n    flowElement: MessageActivity;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/message.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/message_select.svg\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: MessageActivity) {\r\n        const flowNode = super.createFlowElement(flowElt) as MessageActivity;\r\n        flowNode.Id = \"MessageActivity\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        return flowNode;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        let act = this.flowElement;\r\n\r\n        let basicProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let activityProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = {};\r\n\r\n        basicProperty.categoryId = 'basicProperty';\r\n        basicProperty.categoryName = mxResources.get('basicInformation');\r\n        basicProperty.tabId = 'basic';\r\n        basicProperty.tabName = mxResources.get('basicAttributes')\r\n        basicProperty.properties = [\r\n            { propertyID: MessageActivityPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: MessageActivityPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: MessageActivityPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true }\r\n        ];\r\n\r\n\r\n        activityProperty.categoryId = 'activityProperty';\r\n        activityProperty.categoryName = mxResources.get('activityProperty');\r\n        activityProperty.tabId = 'basic';\r\n        activityProperty.tabName = mxResources.get('basicAttributes')\r\n        activityProperty.properties = [\r\n            { propertyID: MessageActivityPropertyKeys.messageNotice, propertyName: mxResources.get('messageNotice'), propertyType: 'modal' },\r\n            { propertyID: MessageActivityPropertyKeys.variableSettings, propertyName: mxResources.get('variableSettings'), propertyType: 'modal' }\r\n        ];\r\n\r\n        propertyData[MessageActivityPropertyKeys.Id] = act.Id;\r\n        propertyData[MessageActivityPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n        propertyData[MessageActivityPropertyKeys.Name] = act.Name;\r\n        propertyData[MessageActivityPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n            \"zh-CHS\": act.Name,\r\n        };\r\n        propertyData[MessageActivityPropertyKeys.messageNotice] = PropertyHelper.getMessageNotices(act.messageNotices);\r\n        propertyData[MessageActivityPropertyKeys.variableSettings] = PropertyHelper.getVariableSettings(act.Model, act.variableSettings);\r\n\r\n        return {\r\n            propertyConfig: [basicProperty, activityProperty],\r\n            propertyData: propertyData\r\n        }\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const messageActivity = this.flowElement;\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case MessageActivityPropertyKeys.messageNotice:\r\n                this.updateMessageNotices(messageActivity, obj);\r\n                break;\r\n            case MessageActivityPropertyKeys.variableSettings:\r\n                this.updateVariableSettings(messageActivity, obj);\r\n                break;\r\n            default:\r\n                super.updateProps(obj);\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateMessageNotices(messageActivity: MessageActivity, obj: any) {\r\n        const bpmnModel = messageActivity.Model;\r\n        let notices = obj.propertyValue as any[];\r\n        messageActivity.messageNotices = new Array();\r\n        if (notices && notices.length > 0) {\r\n            for (let n of notices) {\r\n                const messageNotice = new MessageNotice(bpmnModel);\r\n                messageNotice.sendType = n.sendType;\r\n                messageNotice.sendTime = n.sendTime;\r\n                messageNotice.subject = n.subject;\r\n                messageNotice.content = n.content;\r\n                if (n.smsMessageTemplate) {\r\n                    const smsMessageTemplate = new SmsMessageTemplate(bpmnModel);\r\n                    smsMessageTemplate.code = n.smsMessageTemplate.code;\r\n                    smsMessageTemplate.content = n.smsMessageTemplate.content;\r\n                    smsMessageTemplate.smsMessageVariables = new Array();\r\n                    if (n.smsMessageTemplate.smsMessageVariables && n.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                        for (const v of n.smsMessageTemplate.smsMessageVariables) {\r\n                            const variable = new SmsMessageVariable(bpmnModel);\r\n                            variable.code = v.code;\r\n                            variable.value = v.value;\r\n                            variable.tag = v.tag;\r\n                            smsMessageTemplate.smsMessageVariables.push(variable);\r\n                        }\r\n                    }\r\n                    messageNotice.smsMessageTemplate = smsMessageTemplate;\r\n                }\r\n                // messageNotice.receiver = n.receiver;\r\n                // messageNotice.receiverText = n.receiverText;\r\n                if (n.receivers && n.receivers.length > 0) {\r\n                    const receivers = n.receivers.filter((r: any) => r.type === 'userParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant !== 'activityExecutorParticipant'));\r\n                    const participants = n.receivers.filter((r: any) => r.type === 'variableParticipant' || r.type === 'positionParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant === 'activityExecutorParticipant'));\r\n                    if (receivers && receivers.length > 0) {\r\n                        let receiver = '';\r\n                        let receiverName = '';\r\n                        for (const r of receivers) {\r\n                            if (r.type === 'processParticipant') {\r\n                                receiver += (r.processParticipant + ',');\r\n                                if (r.processParticipant === 'procInstCreator') {\r\n                                    receiverName += '流程发起人,'\r\n                                } else if (r.processParticipant === 'workItemParticipant') {\r\n                                    receiverName += '任务接收人,'\r\n                                }\r\n                            } else if (r.type === 'userParticipant') {\r\n                                receiver += (r.userIds + ',');\r\n                                receiverName += (r.userNames + ',');\r\n                            }\r\n                        }\r\n                        if (receiver) {\r\n                            receiver = receiver.substring(0, receiver.length - 1);\r\n                        }\r\n                        if (receiverName) {\r\n                            receiverName = receiverName.substring(0, receiverName.length - 1);\r\n                        }\r\n                        messageNotice.receiver = receiver;\r\n                        messageNotice.receiverText = receiverName;\r\n                    }\r\n                    if (participants && participants.length > 0) {\r\n                        const receiverExpressions = new Array<ParticipantExpression>();\r\n                        for (const p of participants) {\r\n                            if (p.type === 'processParticipant') {\r\n                                let activityExecutor = new ActivityExecutorParticipantExpression(messageActivity.Model);\r\n                                activityExecutor.id = BpmnModelHelper.GenerateElementId();\r\n                                activityExecutor.activityDefId = p.activityDefId;\r\n                                activityExecutor.activityDefName = p.activityDefName;\r\n                                receiverExpressions.push(activityExecutor);\r\n                            }\r\n                            if (p.type === 'variableParticipant') {\r\n                                let variableParticipant = new UserParticipantExpression(messageActivity.Model, p.variableParticipant, p.variableName, p.orgType);\r\n                                variableParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                variableParticipant.Tag = 'expression';\r\n                                variableParticipant.OrgType = p.orgType;\r\n                                receiverExpressions.push(variableParticipant);\r\n                            }\r\n                            if (p.type === 'positionParticipant') {\r\n                                let posiParticipant = new PositionParticipantExpression(messageActivity.Model, p.positionId, p.positionName);\r\n                                posiParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                posiParticipant.PositionType = p.positionType;\r\n                                if (p.positionType === '1') {\r\n                                    posiParticipant.OrgId = p.orgId;\r\n                                    posiParticipant.OrgType = p.orgType;\r\n                                }\r\n                                receiverExpressions.push(posiParticipant);\r\n                            }\r\n                        }\r\n                        messageNotice.receiverExpressions = receiverExpressions;\r\n                    }\r\n                }\r\n\r\n                messageActivity.messageNotices.push(messageNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVariableSettings(messageActivity: MessageActivity, obj: any) {\r\n        const bpmnModel = messageActivity.Model;\r\n        const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n        if (messageActivity.variableSettings && messageActivity.variableSettings.length > 0) {\r\n            for (const v of messageActivity.variableSettings) {\r\n                if (v.tag === 'component') {\r\n                    const i = extendElements.findIndex(e => (e instanceof Component && e.Id === v.value));\r\n                    extendElements.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        messageActivity.variableSettings = new Array();\r\n\r\n        const variables = obj.propertyValue as any[];\r\n        if (variables && variables.length > 0) {\r\n            for (const v of variables) {\r\n                const variableSetting = new VariableSetting(bpmnModel);\r\n                // variableSetting.variableId = v.variableId;\r\n                variableSetting.variableCode = v.variableCode;\r\n                variableSetting.variableName = v.variableName;\r\n                variableSetting.tag = v.tag;\r\n                variableSetting.executionTime = v.executionTime;\r\n                variableSetting.value = v.value;\r\n                variableSetting.valueText = v.valueText;\r\n\r\n                messageActivity.variableSettings.push(variableSetting);\r\n                if (variableSetting.tag === 'component') {\r\n                    const c = v.component;\r\n                    if (c) {\r\n                        let cpt = new Component(bpmnModel);\r\n                        cpt.MetadataId = c.MetadataId;\r\n                        cpt.MethodCode = c.MethodCode;\r\n                        cpt.Id = c.Id;\r\n                        cpt.Name = c.Name;\r\n                        cpt.ActualParameters = new Array();\r\n                        if (c.ActualParameters && c.ActualParameters.length > 0) {\r\n                            for (let a of c.ActualParameters) {\r\n                                let parameter = new ActualParameter(bpmnModel, a.Name, a.Value);\r\n                                parameter.Tag = a.Tag;\r\n                                cpt.ActualParameters.push(parameter);\r\n                            }\r\n                        }\r\n\r\n                        extendElements.push(cpt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","export class ActualParameter {\r\n    code: string;\r\n    value: string;\r\n    valueText: string;\r\n    tag: string;\r\n    fetchValueMode?: any;\r\n    fetchValueSetting?: any;\r\n}","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { NotifyActivity, ExtendProperty, MessageNotice, ActionScope, Condition, ExecuteForm, PotentialOwnerImpl, HumanPerformerImpl, OrganizationParticipantExpression, VariableParticipantExpression, ComponentParticipantExpression, ReportingLineParticipantExpression, MatrixParticipantExpression, ParticipantExpression, ActivityExecutorParticipantExpression, UserParticipantExpression, PositionParticipantExpression, ActualParameter, ActionOrganizationScope, SmsMessageTemplate, SmsMessageVariable, OrganizationLevel, } from \"@gsp-wf/wf-process-model\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\nimport { WfEditorUi } from \"../WfEditorUi\";\r\nimport { UserParticipant } from \"../entity/UserParticipant\";\r\nimport { PositionParticipant } from \"../entity/PositionParticipant\";\r\nimport { VariablePerformer } from \"../entity/VariablePerformer\";\r\nimport { ComponentParticipant } from \"../entity/ComponentParticipant\";\r\nimport { ReportingLineParticipant } from \"../entity/ReportingLineParticipant\";\r\nimport { ActivityExecutorParticipant } from \"../entity/ActivityExecutorParticipant\";\r\nimport { MatrixParticipant } from \"../entity/MatrixParticipant\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { NotifyActivityPropertyKeys } from \"./property-keys/NotifyActivityPropertyKeys\";\r\nimport { ActionOrganizationScopeDesign } from \"../../views/organization-potential-owner/actionOrganizationScope\";\r\n// import { ParticipantInfo } from \"../../views/participant/participant.info\";\r\nimport { OrganizationParticipant, ParticipantInfo } from \"../entity\";\r\n\r\n/**\r\n * 知会活动节点\r\n */\r\nexport class NotifyActivityCell extends NodeCell {\r\n    clrTypeId: string = NotifyActivityCell.CLR_TYPE_ID;\r\n    name: string = \"知会\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"知会\",\r\n      \"zh-CHT\": \"知會\",\r\n      \"en\": \"Notify\",\r\n  };\r\n    static CLR_TYPE_ID: string = NotifyActivity.Clr_Type_ID;\r\n    flowElement: NotifyActivity;\r\n    editorUi: WfEditorUi;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/notify.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/notify_backup.png\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: NotifyActivity) {\r\n        const flowNode = super.createFlowElement(flowElt) as NotifyActivity;\r\n        flowNode.Id = \"NotifyActivity\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        // 创建而非复制时执行\r\n        if (flowElt == null) {\r\n            flowNode.notifyAble = this.editorUi.generalConfig.enableNotify;\r\n        }\r\n        return flowNode;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        const editorUi = this.editorUi;\r\n        // const graph = editorUi.graph;\r\n        let act = this.flowElement;\r\n        // 过滤配置位置为节点的扩展属性，分离一级和二级属性：知会节点\r\n        // 一级节点List\r\n        let generalExtendList: any = [];\r\n        // 二级节点List\r\n        let detailExtendList = [];\r\n        if (editorUi.procExtProps && editorUi.procExtProps.length > 0) {\r\n            JSON.parse(JSON.stringify(editorUi.procExtProps)).forEach((p: any) => {\r\n                if (p.propertyLocation && p.propertyLocation.indexOf('activity') != -1 && !p.parentId) {\r\n                    generalExtendList.push(p);\r\n                } else if (p.propertyLocation && p.propertyLocation.indexOf('activity') != -1 && p.parentId) {\r\n                    detailExtendList.push(p);\r\n                }\r\n            })\r\n        }\r\n        generalExtendList = generalExtendList.sort((a, b) => {\r\n            return a.sortOrder - b.sortOrder;\r\n        });\r\n\r\n        let extendList = [];\r\n        if (editorUi.procExtProps && editorUi.procExtProps.length > 0) {\r\n            extendList = JSON.parse(JSON.stringify(editorUi.procExtProps)).sort((a, b) => {\r\n                return a.sortOrder - b.sortOrder;\r\n            });\r\n        }\r\n        extendList = extendList.sort((a, b) => {\r\n            return a.sortOrder - b.sortOrder;\r\n        })\r\n\r\n        let basicProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let activityProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = {};\r\n\r\n        basicProperty.categoryId = 'basicProperty';\r\n        basicProperty.categoryName = mxResources.get('basicInformation');\r\n        basicProperty.tabId = 'basic';\r\n        basicProperty.tabName = mxResources.get('basicAttributes')\r\n        basicProperty.properties = [\r\n            { propertyID: NotifyActivityPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: NotifyActivityPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: NotifyActivityPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true }\r\n        ];\r\n\r\n        let performerProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        performerProperty.categoryId = 'performerProperty';\r\n        performerProperty.categoryName = mxResources.get('performerProperty');\r\n        performerProperty.tabId = 'basic';\r\n        performerProperty.tabName = mxResources.get('basicAttributes');\r\n        performerProperty.properties = [\r\n            { propertyID: NotifyActivityPropertyKeys.ParticipantSchemes, propertyName: mxResources.get('notifyRecipient'), propertyType: 'modal' }\r\n        ];\r\n\r\n        let formDef = new ElementPropertyConfig();\r\n        formDef.categoryId = 'formDef';\r\n        formDef.categoryName = mxResources.get('formDef');\r\n        formDef.tabId = 'basic';\r\n        formDef.tabName = mxResources.get('basicAttributes')\r\n        formDef.properties = [\r\n            { propertyID: NotifyActivityPropertyKeys.wf_ExecuteForms_PC, propertyName: mxResources.get('pcForm'), propertyType: 'modal' },\r\n            { propertyID: NotifyActivityPropertyKeys.wf_ExecuteForms_Mobile, propertyName: mxResources.get('webForm'), propertyType: 'modal' },\r\n        ];\r\n\r\n        let approvalProperty = new ElementPropertyConfig();\r\n        approvalProperty.categoryId = 'activityProperty';\r\n        approvalProperty.categoryName = mxResources.get('activityProperty');\r\n        approvalProperty.tabId = 'basic';\r\n        approvalProperty.tabName = mxResources.get('basicAttributes');\r\n        approvalProperty.properties = [\r\n            { propertyID: NotifyActivityPropertyKeys.NotifyAble, propertyName: mxResources.get('notifyAble'), propertyType: 'modal' },\r\n        ];\r\n\r\n        activityProperty.categoryId = 'advanced';\r\n        activityProperty.categoryName = mxResources.get('otherConfigurations');\r\n        activityProperty.tabId = 'advanced';\r\n        activityProperty.tabName = mxResources.get('advancedAttributes');\r\n        activityProperty.properties = [\r\n            { propertyID: NotifyActivityPropertyKeys.messageNotice, propertyName: mxResources.get('messageNotice'), propertyType: 'modal' },\r\n        ];\r\n\r\n        // 扩展属性分group处理，每个group包含父级属性和属于它的子扩展属性\r\n        const groupList = new Array();\r\n        for (const extend of extendList) {\r\n            if (!extend.parentId) {\r\n                const group = { parent: extend, childs: new Array() };\r\n                for (const e of extendList) {\r\n                    if (e.parentId === extend.id) {\r\n                        group.childs.push(e);\r\n                    }\r\n                }\r\n                groupList.push(group)\r\n            }\r\n        }\r\n        // 没有扩展属性值的时候不显示扩展属性一栏\r\n        if (groupList && groupList.length > 0) {\r\n            let ExtendPropertyConfig: ElementPropertyConfig = new ElementPropertyConfig();\r\n            ExtendPropertyConfig.categoryId = 'extendPropertyConfig';\r\n            ExtendPropertyConfig.categoryName = mxResources.get('extendPropertyConfig');\r\n            ExtendPropertyConfig.tabId = 'advanced';\r\n            ExtendPropertyConfig.tabName = mxResources.get('advancedAttributes');\r\n            ExtendPropertyConfig.properties = new Array();\r\n            for (const g of groupList) {\r\n                ExtendPropertyConfig.properties.push(\r\n                    { propertyID: g.parent.id, propertyName: g.parent.propertyTitle, propertyType: 'modal' });\r\n            }\r\n            this.setPropertyData(act, propertyData, groupList);\r\n            return {\r\n                propertyConfig: [basicProperty, performerProperty, formDef, approvalProperty, activityProperty, ExtendPropertyConfig],\r\n                propertyData: propertyData\r\n            }\r\n        } else {\r\n            this.setPropertyData(act, propertyData, groupList);\r\n            return {\r\n                propertyConfig: [basicProperty, performerProperty, formDef, approvalProperty, activityProperty],\r\n                propertyData: propertyData\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 组织UserActivity的属性值propertyData\r\n     * @param act\r\n     * @param propertyData\r\n     */\r\n    setPropertyData(act: NotifyActivity, propertyData: any, groupList?: any): void {\r\n        propertyData[NotifyActivityPropertyKeys.Id] = act.Id;\r\n        propertyData[NotifyActivityPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n        propertyData[NotifyActivityPropertyKeys.Name] = act.Name;\r\n        propertyData[NotifyActivityPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n            \"zh-CHS\": act.Name,\r\n        };\r\n\r\n        propertyData[NotifyActivityPropertyKeys.ParticipantSchemes] = this.getParticipantInfo(act);\r\n\r\n        propertyData[NotifyActivityPropertyKeys.messageNotice] = PropertyHelper.getMessageNotices(act.messageNotices);;\r\n        propertyData[NotifyActivityPropertyKeys.wf_ExecuteForms_PC] =\r\n            act.executeForms ? act.executeForms.find(e => e.TerminalType === 'PC') : null;\r\n        propertyData[NotifyActivityPropertyKeys.wf_ExecuteForms_Mobile] =\r\n            act.executeForms ? act.executeForms.find(e => e.TerminalType === 'MOBILE') : null;\r\n        propertyData[NotifyActivityPropertyKeys.NotifyAble] = PropertyHelper.getNotifyAble(act.notifyAble, act.dynamicParticipants);\r\n\r\n        for (const g of groupList) {\r\n            // 取回模型上的value值给到扩展属性组件里\r\n            if (act.extendProperties && act.extendProperties.length > 0) {\r\n                g.childs.sort((a, b) => {\r\n                    return a.sortOrder - b.sortOrder;\r\n                }).forEach((d: any) => {\r\n                    act.extendProperties.forEach(e => {\r\n                        if (e.key == d.code) {\r\n                            d.value = e.value;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            propertyData[g.parent.id] = g.childs;\r\n        }\r\n    }\r\n\r\n    getParticipantInfo(notifyActivity: NotifyActivity): ParticipantInfo {\r\n        const partiInfo = new ParticipantInfo();\r\n        const roles = notifyActivity.GetResourceRoles().filter(role => role instanceof HumanPerformerImpl) as Array<HumanPerformerImpl>;\r\n        partiInfo.humanPerformerList = PropertyHelper.getPerformerList(roles);\r\n        return partiInfo;\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const notifyActivity = this.flowElement;\r\n        const editorUi = this.editorUi;\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            // 参与者属性\r\n            case NotifyActivityPropertyKeys.ParticipantSchemes:\r\n                this.updateParticipant(notifyActivity, obj);\r\n                break;\r\n            case NotifyActivityPropertyKeys.messageNotice:\r\n                this.updateMessageNotices(notifyActivity, obj);\r\n                break;\r\n            case NotifyActivityPropertyKeys.wf_ExecuteForms_PC:\r\n                this.updateStartActivityForm(notifyActivity, obj, 'PC');\r\n                if (obj.parameters && obj.parameters.length > 0) {\r\n                    PropertyHelper.updateFormalParameters(editorUi.graph.bpmnModel.DefaultProcess, obj.parameters);\r\n                }\r\n                break;\r\n            case NotifyActivityPropertyKeys.wf_ExecuteForms_Mobile:\r\n                this.updateStartActivityForm(notifyActivity, obj, 'MOBILE');\r\n                if (obj.parameters && obj.parameters.length > 0) {\r\n                    PropertyHelper.updateFormalParameters(editorUi.graph.bpmnModel.DefaultProcess, obj.parameters);\r\n                }\r\n                break;\r\n            case NotifyActivityPropertyKeys.NotifyAble:\r\n                this.updateNotifySet(notifyActivity, obj);\r\n                break;\r\n            default:\r\n                // 判断ResourceKeys是不是groupid,是就走resetExtendProperty\r\n                if (this.editorUi.procExtProps.findIndex(p => p.id === propertyId) > -1) {\r\n                    this.resetExtendProperty(notifyActivity, obj);\r\n                } else {\r\n                    super.updateProps(obj);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateParticipant(notifyActivity: NotifyActivity, obj: any) {\r\n        const performerInfo: ParticipantInfo = obj.propertyValue;\r\n\r\n        const resourceRoles = notifyActivity.GetResourceRoles();\r\n        if (resourceRoles && resourceRoles.length > 0) {\r\n            resourceRoles.forEach(r => {\r\n                if (r instanceof HumanPerformerImpl) {\r\n                    notifyActivity.RemoveResourceRole(r.Id);\r\n                }\r\n            });\r\n        }\r\n        if (performerInfo.humanPerformerList && performerInfo.humanPerformerList.length > 0) {\r\n            for (const humanPerformer of performerInfo.humanPerformerList) {\r\n                switch (humanPerformer.type) {\r\n                    case UserParticipantExpression.Clr_Type_ID:\r\n                        this.addUserParticipant(notifyActivity, humanPerformer as UserParticipant, 'humanPerformer', null);\r\n                        break;\r\n                    case PositionParticipantExpression.Clr_Type_ID:\r\n                        this.addPositionParticipant(notifyActivity, humanPerformer as PositionParticipant, 'humanPerformer', null);\r\n                        break;\r\n                    case VariableParticipantExpression.Clr_Type_ID:\r\n                        this.addVariableParticipant(notifyActivity, humanPerformer as VariablePerformer, 'humanPerformer', null)\r\n                        break;\r\n                    case ComponentParticipantExpression.Clr_Type_ID:\r\n                        this.addComponentParticipant(notifyActivity, humanPerformer as ComponentParticipant, 'humanPerformer', null);\r\n                        break;\r\n                    case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                        this.addReportingLineParticipant(notifyActivity, humanPerformer as ReportingLineParticipant, 'humanPerformer', null);\r\n                        break;\r\n                    case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                        this.addActivityExecutorParticipant(notifyActivity, humanPerformer as ActivityExecutorParticipant, 'humanPerformer', null);\r\n                        break;\r\n                    case MatrixParticipantExpression.Clr_Type_ID:\r\n                        this.addMatrixParticipant(notifyActivity, humanPerformer as MatrixParticipant, 'humanPerformer', null);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addUserParticipant(notifyActivity: NotifyActivity, performer: UserParticipant, type: string,  scope: ActionScope) {\r\n        let userParticipant = new UserParticipantExpression(notifyActivity.Model, performer.performerId, performer.performerName, performer.orgType);\r\n        userParticipant.id = performer.id;\r\n        userParticipant.OrgId = performer.orgId;\r\n        userParticipant.OrgName = performer.orgName;\r\n        userParticipant.Tag = performer.tag;\r\n        userParticipant.OrgType = performer.orgType;\r\n        userParticipant.order = performer.order;\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n            humanPerformerImpl.participantExpression = userParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = performer.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = performer.order;\r\n            notifyActivity.AddResourceRole(humanPerformerImpl);\r\n        }\r\n        else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n            otentialOwnerImpl.participantExpression = userParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = performer.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = performer.order;\r\n            if(scope) {\r\n                userParticipant.actionScope = scope;\r\n                notifyActivity.dynamicParticipants.push(userParticipant);\r\n            }else {\r\n                notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    addVariableParticipant(notifyActivity: NotifyActivity, performer: VariablePerformer, type: string, scope: ActionScope) {\r\n        let variablePerformer = new VariableParticipantExpression(notifyActivity.Model, performer.performerId, performer.performerName, performer.orgType);\r\n        variablePerformer.id = performer.id;\r\n        variablePerformer.Name = performer.performerName ? performer.performerName : performer.name;;\r\n        variablePerformer.Tag = performer.tag;\r\n        variablePerformer.VarValue = performer.varValue;\r\n        variablePerformer.VarType = performer.varType;\r\n        variablePerformer.Relation = performer.relation;\r\n        variablePerformer.order = performer.order;\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n            humanPerformerImpl.participantExpression = variablePerformer;\r\n            if (performer.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = performer.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = performer.order;\r\n            notifyActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n            otentialOwnerImpl.participantExpression = variablePerformer;\r\n            if (performer.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = performer.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = performer.order;\r\n            if(scope) {\r\n                variablePerformer.actionScope = scope;\r\n                notifyActivity.dynamicParticipants.push(variablePerformer);\r\n            }else {\r\n                notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    addPositionParticipant(notifyActivity: NotifyActivity, performer: PositionParticipant, type: string , scope: ActionScope) {\r\n        let posiParticipant = new PositionParticipantExpression(notifyActivity.Model, performer.performerId, performer.performerName);\r\n        posiParticipant.id = performer.id;\r\n        posiParticipant.PositionType = performer.positionType;\r\n        posiParticipant.order = performer.order;\r\n        if (performer.positionType === '1') {\r\n            posiParticipant.OrgId = performer.orgId;\r\n            posiParticipant.OrgName = performer.orgName;\r\n            posiParticipant.OrgType = performer.orgType;\r\n        }\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n            humanPerformerImpl.participantExpression = posiParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = performer.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = performer.order;\r\n            notifyActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n            otentialOwnerImpl.participantExpression = posiParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = performer.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = performer.order;\r\n            if(scope) {\r\n                posiParticipant.actionScope = scope;\r\n                notifyActivity.dynamicParticipants.push(posiParticipant);\r\n            }else {\r\n                notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    addComponentParticipant(notifyActivity: NotifyActivity, component: ComponentParticipant, type: string , scope: ActionScope) {\r\n        let componentParticipant = new ComponentParticipantExpression(notifyActivity.Model);\r\n        componentParticipant.id = component.id;\r\n        componentParticipant.componentId = component.metadataId;\r\n        componentParticipant.componentName = component.name;\r\n        componentParticipant.methodName = component.methodName;\r\n        componentParticipant.methodCode = component.methodCode;\r\n        componentParticipant.order = component.order;\r\n\r\n        if (component.actualParameters && component.actualParameters.length > 0) {\r\n            let actParas = new Array<ActualParameter>();\r\n            for (let para of component.actualParameters) {\r\n                let actPara = new ActualParameter(notifyActivity.Model, para.code, para.value, para.valueText);\r\n\r\n                // TODO:更新参与者会默认把构件参数属性改为contant，临时修复，后续代码优化\r\n                actPara.Tag = para.tag;\r\n                if (para.fetchValueMode) {\r\n                    switch (para.fetchValueMode) {\r\n                        case 'express':\r\n                            actPara.Tag = 'expression';\r\n                            break;\r\n                        case 'none':\r\n                            actPara.Tag = 'expression';\r\n                            break;\r\n                        default:\r\n                            actPara.Tag = 'constant';\r\n                            break;\r\n                    }\r\n                }\r\n                actParas.push(actPara);\r\n            }\r\n            componentParticipant.actualParameters = actParas;\r\n        }\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n            humanPerformerImpl.participantExpression = componentParticipant;\r\n            if (component.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = component.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = component.order;\r\n            notifyActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n            otentialOwnerImpl.participantExpression = componentParticipant;\r\n            if (component.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = component.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = component.order;\r\n            if(scope) {\r\n                componentParticipant.actionScope = scope;\r\n                notifyActivity.dynamicParticipants.push(componentParticipant);\r\n            }else {\r\n                notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    addReportingLineParticipant(notifyActivity: NotifyActivity, participant: ReportingLineParticipant, type: string , scope: ActionScope) {\r\n        let reportingLine = new ReportingLineParticipantExpression(notifyActivity.Model);\r\n        reportingLine.id = participant.id;\r\n        reportingLine.ReportingLineDefId = participant.reportingLineDefId;\r\n        reportingLine.ReportingLineDefName = participant.reportingLineDefName;\r\n        reportingLine.RefOrgId = participant.refOrgId;\r\n        reportingLine.RefUserId = participant.refUserId;\r\n        reportingLine.RefEmployeeId = participant.refEmployeeId;\r\n        reportingLine.order = participant.order;\r\n        reportingLine.Dimension = participant.dimension;\r\n        reportingLine.Tag = participant.tag;\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n            humanPerformerImpl.participantExpression = reportingLine;\r\n            if (participant.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = participant.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = participant.order;\r\n            notifyActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n            otentialOwnerImpl.participantExpression = reportingLine;\r\n            if (participant.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = participant.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = participant.order;\r\n            if(scope) {\r\n                reportingLine.actionScope = scope;\r\n                notifyActivity.dynamicParticipants.push(reportingLine);\r\n            }else {\r\n                notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    addActivityExecutorParticipant(notifyActivity: NotifyActivity, participant: ActivityExecutorParticipant, type: string , scope: ActionScope) {\r\n        let activityExecutor = new ActivityExecutorParticipantExpression(notifyActivity.Model);\r\n        activityExecutor.id = participant.id;\r\n        activityExecutor.activityDefId = participant.activityDefId;\r\n        activityExecutor.order = participant.order;\r\n        activityExecutor.activityDefName = participant.activityDefName;\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n            humanPerformerImpl.participantExpression = activityExecutor;\r\n            if (participant.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = participant.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = participant.order;\r\n            notifyActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n            otentialOwnerImpl.participantExpression = activityExecutor;\r\n            if (participant.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = participant.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = participant.order;\r\n            if(scope) {\r\n                activityExecutor.actionScope = scope;\r\n                notifyActivity.dynamicParticipants.push(activityExecutor);\r\n            }else {\r\n                notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    addMatrixParticipant(notifyActivity: NotifyActivity, participant: MatrixParticipant, type: string , scope: ActionScope) {\r\n        let matrix = new MatrixParticipantExpression(notifyActivity.Model);\r\n        matrix.order = participant.order;\r\n        matrix.id = participant.id;\r\n        matrix.matrixDefId = participant.matrixDefId;\r\n        matrix.matrixDefName = participant.matrixDefName;\r\n        matrix.conditionField1 = participant.conditionField1;\r\n        matrix.conditionFieldText1 = participant.conditionFieldText1;\r\n        matrix.conditionField2 = participant.conditionField2;\r\n        matrix.conditionFieldText2 = participant.conditionFieldText2;\r\n        matrix.conditionField3 = participant.conditionField3;\r\n        matrix.conditionFieldText3 = participant.conditionFieldText3;\r\n        matrix.multivaluedCondition = participant.multivaluedCondition;\r\n        matrix.dataFieldAlias = participant.dataFieldAlias;\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n            humanPerformerImpl.participantExpression = matrix;\r\n            if (participant.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = participant.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = participant.order;\r\n            notifyActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n            otentialOwnerImpl.participantExpression = matrix;\r\n            if (participant.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = participant.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = participant.order;\r\n            if(scope) {\r\n                matrix.actionScope = scope;\r\n                notifyActivity.dynamicParticipants.push(matrix);\r\n            }else {\r\n            notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n        /**\r\n     *\r\n     * @param userActivity\r\n     * @param participant\r\n     * @param type\r\n     */\r\n        addOrganizationParticipant(notifyActivity: NotifyActivity, participant: OrganizationParticipant, type: string, scope: ActionScope) {\r\n            let potential = new OrganizationParticipantExpression(notifyActivity.Model);\r\n            potential.id = participant.id;\r\n            potential.order = participant.order;\r\n            potential.actionScope = ActionScope.AssignUser;\r\n            potential.organizationLevel = participant.organizationLevel as any;\r\n            potential.organizationId = participant.organizationId;\r\n            potential.organizationName = participant.organizationName;\r\n            potential.includeChildren = participant.includeChildren;\r\n            potential.tag = participant.tag;\r\n    \r\n            if (participant.condition) {\r\n                const condition = new Condition(notifyActivity.Model);\r\n                condition.Value = participant.condition;\r\n                potential.condition = condition;\r\n            }\r\n    \r\n            if (type === 'humanPerformer') {\r\n                let humanPerformerImpl = new HumanPerformerImpl(notifyActivity.Model);\r\n                humanPerformerImpl.participantExpression = potential;\r\n                if (participant.condition) {\r\n                    const condition = new Condition(notifyActivity.Model);\r\n                    condition.Value = participant.condition;\r\n                    humanPerformerImpl.condition = condition;\r\n                }\r\n                humanPerformerImpl.order = participant.order;\r\n                notifyActivity.AddResourceRole(humanPerformerImpl);\r\n            } else if (type === 'potentialOwner') {\r\n                let otentialOwnerImpl = new PotentialOwnerImpl(notifyActivity.Model);\r\n                otentialOwnerImpl.participantExpression = potential;\r\n                if (participant.condition) {\r\n                    const condition = new Condition(notifyActivity.Model);\r\n                    condition.Value = participant.condition;\r\n                    otentialOwnerImpl.condition = condition;\r\n                }\r\n                otentialOwnerImpl.order = participant.order;\r\n                if(scope) {\r\n                    potential.actionScope = scope;\r\n                    notifyActivity.dynamicParticipants.push(potential);\r\n                }else {\r\n                    notifyActivity.AddResourceRole(otentialOwnerImpl);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    updateStartActivityForm(notifyActivity: NotifyActivity, obj: any, terminal: string) {\r\n        if (notifyActivity) {\r\n            let form = obj.propertyValue as any;\r\n            if (!notifyActivity.executeForms) {\r\n                notifyActivity.executeForms = new Array<ExecuteForm>();\r\n            }\r\n            notifyActivity.executeForms = notifyActivity.executeForms.filter(e => e.TerminalType !== terminal);\r\n            if (form) {\r\n                let params = form.ActualParameters as any[];\r\n                let actParas = new Array<ActualParameter>();\r\n                if (params && params.length > 0) {\r\n                    for (let para of params) {\r\n                        let actPara = new ActualParameter(notifyActivity.Model, para.Name, para.Value);\r\n                        if (para.Tag) {\r\n                            actPara.Tag = para.Tag;\r\n                        } else {\r\n                            if (para.Value) {\r\n                                if (para.Value.length >= 8 && para.Value.slice(0, 8) === `{\"expr\":`) {\r\n                                    actPara.Tag = 'expression';\r\n                                } else {\r\n                                    actPara.Tag = 'constant';\r\n                                }\r\n                            } else {\r\n                                actPara.Tag = 'variable';\r\n                            }\r\n\r\n                        }\r\n                        actParas.push(actPara);\r\n                    }\r\n                }\r\n                const id = BpmnModelHelper.GenerateElementId();\r\n                let item = new ExecuteForm(notifyActivity.Model, id, form.Name, actParas);\r\n                item.ComponentId = form.ComponentId;\r\n                item.FormType = form.FormType;\r\n                item.formFormatId = form.formFormatId;\r\n                item.formatConfigId = form.formatConfigId;\r\n                item.TerminalType = form.TerminalType;\r\n                notifyActivity.executeForms.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateNotifySet(notifyActivity: NotifyActivity, obj: any) {\r\n        const scope = obj.propertyValue as ActionOrganizationScopeDesign;\r\n\r\n        notifyActivity.dynamicParticipants = notifyActivity.dynamicParticipants.filter(p => (p as OrganizationParticipantExpression).actionScope !== ActionScope.Notify);\r\n        notifyActivity.notifyAble = scope.enable;\r\n        if (scope.scope) {\r\n            if(scope.scope.organizationLevel) {\r\n                const organizationParticipantExpression = new OrganizationParticipantExpression(notifyActivity.Model);\r\n                organizationParticipantExpression.id = BpmnModelHelper.GenerateElementId();\r\n                organizationParticipantExpression.actionScope = ActionScope.Notify;\r\n                organizationParticipantExpression.organizationLevel = scope.scope.organizationLevel as any;\r\n                organizationParticipantExpression.organizationId = scope.scope.organizationId;\r\n                organizationParticipantExpression.organizationName = scope.scope.organizationName;\r\n                organizationParticipantExpression.includeChildren = scope.scope.includeChildren;\r\n                organizationParticipantExpression.tag = scope.scope.tag;\r\n                notifyActivity.dynamicParticipants.push(organizationParticipantExpression);\r\n            }else {\r\n                const performerInfo: ParticipantInfo = scope.scope.participantInfo as any;\r\n                if (performerInfo.isAllScope && performerInfo.potentialOwnerList && performerInfo.potentialOwnerList.length > 0) {\r\n                    for (const potentialOwner of performerInfo.potentialOwnerList) {\r\n                        switch (potentialOwner.type) {\r\n                            case UserParticipantExpression.Clr_Type_ID:\r\n                                this.addUserParticipant(notifyActivity, potentialOwner as UserParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case VariableParticipantExpression.Clr_Type_ID:\r\n                                this.addVariableParticipant(notifyActivity, potentialOwner as VariablePerformer, 'potentialOwner', ActionScope.Notify)\r\n                                break;\r\n                            case PositionParticipantExpression.Clr_Type_ID:\r\n                                this.addPositionParticipant(notifyActivity, potentialOwner as PositionParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case ComponentParticipantExpression.Clr_Type_ID:\r\n                                this.addComponentParticipant(notifyActivity, potentialOwner as ComponentParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                                this.addReportingLineParticipant(notifyActivity, potentialOwner as ReportingLineParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                                this.addActivityExecutorParticipant(notifyActivity, potentialOwner as ActivityExecutorParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;notifyActivity\r\n                            case MatrixParticipantExpression.Clr_Type_ID:\r\n                                this.addMatrixParticipant(notifyActivity, potentialOwner as MatrixParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case OrganizationParticipantExpression.Clr_Type_ID:\r\n                                this.addOrganizationParticipant(notifyActivity, potentialOwner as OrganizationParticipant, 'potentialOwner' , ActionScope.Notify);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新知会活动扩展属性\r\n     * @param notifyActivity\r\n     * @param obj\r\n     */\r\n    resetExtendProperty(notifyActivity: NotifyActivity, obj: any) {\r\n        if (notifyActivity) {\r\n            let attributes = obj.propertyValue as any;\r\n            if (!notifyActivity.extendProperties) {\r\n                notifyActivity.extendProperties = new Array<ExtendProperty>();\r\n            }\r\n            for (const o of obj.propertyValue) {\r\n                const index = notifyActivity.extendProperties.findIndex(e => e.key === o.code);\r\n                if (index > -1) {\r\n                    notifyActivity.extendProperties.splice(index, 1);\r\n                }\r\n            }\r\n            if (attributes) {\r\n                attributes.forEach((a: any) => {\r\n                    let item = new ExtendProperty(notifyActivity.Model);\r\n                    item.key = a.code;\r\n                    item.value = a.value;\r\n                    notifyActivity.extendProperties.push(item);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    updateMessageNotices(notifyActivity: NotifyActivity, obj: any) {\r\n        const bpmnModel = notifyActivity.Model;\r\n        let notices = obj.propertyValue as any[];\r\n        notifyActivity.messageNotices = new Array();\r\n        if (notices && notices.length > 0) {\r\n            for (let n of notices) {\r\n                const messageNotice = new MessageNotice(bpmnModel);\r\n                messageNotice.sendType = n.sendType;\r\n                messageNotice.sendTime = n.sendTime;\r\n                messageNotice.subject = n.subject;\r\n                messageNotice.content = n.content;\r\n\r\n                if (n.smsMessageTemplate) {\r\n                    const smsMessageTemplate = new SmsMessageTemplate(bpmnModel);\r\n                    smsMessageTemplate.code = n.smsMessageTemplate.code;\r\n                    smsMessageTemplate.content = n.smsMessageTemplate.content;\r\n                    smsMessageTemplate.smsMessageVariables = new Array();\r\n                    if (n.smsMessageTemplate.smsMessageVariables && n.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                        for (const v of n.smsMessageTemplate.smsMessageVariables) {\r\n                            const variable = new SmsMessageVariable(bpmnModel);\r\n                            variable.code = v.code;\r\n                            variable.value = v.value;\r\n                            variable.tag = v.tag;\r\n                            smsMessageTemplate.smsMessageVariables.push(variable);\r\n                        }\r\n                    }\r\n                    messageNotice.smsMessageTemplate = smsMessageTemplate;\r\n                }\r\n                // messageNotice.receiver = n.receiver;\r\n                // messageNotice.receiverText = n.receiverText;\r\n                n.receivers = n.receivers.filter((r: any) => r.type);\r\n                if (n.receivers && n.receivers.length > 0) {\r\n                    const receivers = n.receivers.filter((r: any) => r.type === 'userParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant !== 'activityExecutorParticipant'));\r\n                    const participants = n.receivers.filter((r: any) => r.type === 'variableParticipant' || r.type === 'positionParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant === 'activityExecutorParticipant'));\r\n                    if (receivers && receivers.length > 0) {\r\n                        let receiver = '';\r\n                        let receiverName = '';\r\n                        for (const r of receivers) {\r\n                            if (r.type === 'processParticipant') {\r\n                                receiver += (r.processParticipant + ',');\r\n                                if (r.processParticipant === 'procInstCreator') {\r\n                                    receiverName += '流程发起人,'\r\n                                } else if (r.processParticipant === 'workItemParticipant') {\r\n                                    receiverName += '任务接收人,'\r\n                                }\r\n                            } else if (r.type === 'userParticipant') {\r\n                                receiver += (r.userIds + ',');\r\n                                receiverName += (r.userNames + ',');\r\n                            }\r\n                        }\r\n                        if (receiver) {\r\n                            receiver = receiver.substring(0, receiver.length - 1);\r\n                        }\r\n                        if (receiverName) {\r\n                            receiverName = receiverName.substring(0, receiverName.length - 1);\r\n                        }\r\n                        messageNotice.receiver = receiver;\r\n                        messageNotice.receiverText = receiverName;\r\n                    }\r\n                    if (participants && participants.length > 0) {\r\n                        const receiverExpressions = new Array<ParticipantExpression>();\r\n                        for (const p of participants) {\r\n                            if (p.type === 'processParticipant') {\r\n                                let activityExecutor = new ActivityExecutorParticipantExpression(notifyActivity.Model);\r\n                                activityExecutor.id = BpmnModelHelper.GenerateElementId();\r\n                                activityExecutor.activityDefId = p.activityDefId;\r\n                                activityExecutor.activityDefName = p.activityDefName;\r\n                                receiverExpressions.push(activityExecutor);\r\n                            }\r\n                            if (p.type === 'variableParticipant') {\r\n                                let variableParticipant = new UserParticipantExpression(notifyActivity.Model, p.variableParticipant, p.variableName, p.orgType);\r\n                                variableParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                variableParticipant.Tag = 'expression';\r\n                                variableParticipant.OrgType = p.orgType;\r\n                                receiverExpressions.push(variableParticipant);\r\n                            }\r\n                            if (p.type === 'positionParticipant') {\r\n                                let posiParticipant = new PositionParticipantExpression(notifyActivity.Model, p.positionId, p.positionName);\r\n                                posiParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                posiParticipant.PositionType = p.positionType;\r\n                                if (p.positionType === '1') {\r\n                                    posiParticipant.OrgId = p.orgId;\r\n                                    posiParticipant.OrgType = p.orgType;\r\n                                }\r\n                                receiverExpressions.push(posiParticipant);\r\n                            }\r\n                        }\r\n                        messageNotice.receiverExpressions = receiverExpressions;\r\n                    }\r\n                }\r\n\r\n                notifyActivity.messageNotices.push(messageNotice);\r\n            }\r\n        }\r\n    }\r\n}\r\n","export class AssignConfig {\r\n    operator: string;\r\n    multiSelect: boolean;\r\n    necessary: boolean;\r\n    allowGlobalAssign?: boolean;\r\n    assignScope?: any;\r\n}","import { AssignmentStrategy } from \"@gsp-wf/wf-process-model\";\r\nimport { AssignConfig } from \"./AssignConfig\";\r\n\r\nexport class AssignStrategy {\r\n    assignStrategy: AssignmentStrategy;\r\n    assignConfig: AssignConfig;\r\n}","import { AssignStrategy } from \"./AssignStrategy\";\r\nimport { Participant } from \"./Participant\";\r\n\r\nexport class ParticipantInfo {\r\n    constructor() {\r\n        this.assignStrategy = new AssignStrategy();\r\n        this.humanPerformerList = new Array();\r\n        this.potentialOwnerList = new Array();\r\n        this.isAllScope = false;\r\n    }\r\n    assignStrategy: AssignStrategy;\r\n    humanPerformerList: Array<Participant>;\r\n    potentialOwnerList: Array<Participant>;\r\n    isAllScope: boolean;\r\n}","export class ProcExtendProperty {\r\n    /**\r\n     * 设计器扩展属性Id\r\n     */\r\n    id: string;\r\n    /**\r\n     * 扩展属性code\r\n     */\r\n    code: string;\r\n    /**\r\n     * 父级id\r\n     */\r\n    parentId?: string;\r\n    /**\r\n     * 在当前层级的排序\r\n     */\r\n    sortOrder: number;\r\n    /**\r\n     * 扩展属性备注\r\n     */\r\n    propertyNote?: string;\r\n    /**\r\n     * 扩展属性标题\r\n     */\r\n    propertyTitle: string;\r\n    /**\r\n     * 扩展属性位置\r\n     */\r\n    propertyLocation: string;\r\n    /**\r\n     * 扩展属性类型\r\n     */\r\n    propertyType: string;\r\n    /**\r\n     * 枚举型扩展属性的枚举值\r\n     */\r\n    enumValue?: string;\r\n    /**\r\n     * 流程分类id\r\n     */\r\n    bizDefKey?: string;\r\n    /**\r\n     * 业务种类id\r\n     */\r\n    bizCategoryId?: string;\r\n    /**\r\n     * 流程启动方式\r\n     */\r\n    startMode: string;\r\n    /**\r\n     * 扩展属性value\r\n     */\r\n    value?: string;\r\n}","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { BpmnModelHelper, BPMNShape, Expression, FlowNodeState, MultiInstanceLoopCharacteristics } from \"@edp-pmf/bpmn-model\";\r\nimport { BizActivity, OtherAssignNodes, UserActivity, OperationActivity, StartActivity, UrgeHandleRule, ApprovalPivot, ApprovalPivotConfig, ImageSettings, CheckCondition, VariableSetting, CustomizeAction, DurationType, TimeLimitControl, Tool, TitleExpression, JumpScope, BackWardRule, CounterSignRule, ParticipantSetting, AssignPerformerConfig, Component, ConclusionItem, ExecuteWorkItemMode, WorkFlowAction, DisplayTerminal, AssignmentStrategy, TimeLimitControlInfo, SendMessageExpireOperation, SendMessageExpireOperationInfo, AutoHandleExpireOperation, AutoHandleExpireOperationInfo, ExtendProperty, MessageNotice, ActionScope, Condition, ExecuteForm, PotentialOwnerImpl, HumanPerformerImpl, OrganizationParticipantExpression, VariableParticipantExpression, ComponentParticipantExpression, ReportingLineParticipantExpression, MatrixParticipantExpression, ParticipantExpression, ActivityExecutorParticipantExpression, UserParticipantExpression, PositionParticipantExpression, ActualParameter, ActionOrganizationScope, SmsMessageTemplate, SmsMessageVariable, OtherAssignActivityNodeInfo, OrganizationLevel, SemanticExpression} from \"@gsp-wf/wf-process-model\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\nimport { WfEditorUi } from \"../WfEditorUi\";\r\nimport { UserParticipant } from \"../entity/UserParticipant\";\r\nimport { PositionParticipant } from \"../entity/PositionParticipant\";\r\nimport { VariablePerformer } from \"../entity/VariablePerformer\";\r\nimport { ComponentParticipant } from \"../entity/ComponentParticipant\";\r\nimport { ReportingLineParticipant } from \"../entity/ReportingLineParticipant\";\r\nimport { ActivityExecutorParticipant } from \"../entity/ActivityExecutorParticipant\";\r\nimport { MatrixParticipant } from \"../entity/MatrixParticipant\";\r\nimport { AssignConfig } from \"../entity/AssignConfig\";\r\nimport { AssignStrategy } from \"../entity/AssignStrategy\";\r\nimport { OrganizationParticipant } from \"../entity/OrganizationParticipant\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { UserActivityPropertyKeys } from \"./property-keys/UserActivityPropertyKeys\";\r\nimport { WfDesignerUtils } from \"../WfDesignerUtils\";\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ActionOrganizationScopeDesign, OrganizationPotentialOwner } from \"../../views/organization-potential-owner/actionOrganizationScope\";\r\n// import { ParticipantInfo } from \"../../views/participant/participant.info\";\r\nimport { Participant, ParticipantInfo } from \"../entity\";\r\n\r\n/**\r\n * 审批活动节点\r\n */\r\nexport class UserActivityCell extends NodeCell {\r\n    clrTypeId: string = UserActivityCell.CLR_TYPE_ID;\r\n    name: string = \"审批\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"审批\",\r\n      \"zh-CHT\": \"審批\",\r\n      \"en\": \"Approve\",\r\n  };\r\n    static CLR_TYPE_ID: string = UserActivity.Clr_Type_ID;\r\n    flowElement: UserActivity;\r\n    editorUi: WfEditorUi;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/approval.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/approval_select.svg\",\r\n    };\r\n\r\n    bizActivity: BizActivity;\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: UserActivity) {\r\n        const flowNode = super.createFlowElement(flowElt) as UserActivity;\r\n        const editorUi = this.editorUi;\r\n        const bpmnModel = editorUi.graph.bpmnModel;\r\n        flowNode.Id = \"UserActivity\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        // 创建而非复制时执行\r\n        if (flowElt == null) {\r\n            flowNode.transferAble = editorUi.generalConfig.enableTransfer;\r\n            flowNode.AddSignBehindAble = editorUi.generalConfig.enableAddSignBehind;\r\n            flowNode.AddSignFrontAble = editorUi.generalConfig.enableAddSignFront;\r\n            flowNode.NotifyAble = editorUi.generalConfig.enableNotify;\r\n\r\n            if (this.bizActivity) {\r\n                const bizActivity = this.bizActivity;\r\n                flowNode.BizActivityID = bizActivity.id;\r\n                flowNode.BizActivityName = bizActivity.name;\r\n                flowNode.Tools = [];\r\n                for (let c of bizActivity.bizComponents) {\r\n                    let tool = new Component(flowNode.Model);\r\n                    tool.Id = c.id\r\n                    tool.Name = c.name;\r\n                    tool.Time = c.executionTime;\r\n                    // TODO 写死了构件类型\r\n                    tool.ComponentType = 'CommonComponent';\r\n                    tool.MetadataId = c.metadataId;\r\n                    tool.MethodCode = c.methodCode;\r\n                    tool.ActualParameters = [];\r\n                    if (c.actualParameters && (c.actualParameters as any[]).length > 0) {\r\n                        for (let a of (c.actualParameters as any[])) {\r\n                            let parameter = new ActualParameter(bpmnModel, a.code, a.value);\r\n                            tool.ActualParameters.push(parameter);\r\n                        }\r\n                    }\r\n                    flowNode.Tools.push(tool);\r\n                }\r\n                flowNode.setBizConclusions(bpmnModel, bizActivity.bizActions);\r\n            } else {\r\n                flowNode.BizActivityID = \"\";\r\n                flowNode.initConclusions(bpmnModel);\r\n            }\r\n        }\r\n\r\n        return flowNode;\r\n    }\r\n\r\n    createDiagramElement(): BPMNShape {\r\n        if (this.bizActivity != null) {\r\n            this.imgUrls = {\r\n                [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/bizActivity.png\",\r\n                [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/bizActivity_select.svg\",\r\n            };\r\n        }\r\n\r\n        const shape = super.createDiagramElement();\r\n        return shape;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        return this.getFarrisPropConfigByIsOperation();\r\n    }\r\n\r\n    getFarrisPropConfigByIsOperation(isOperation: boolean = false) {\r\n        const editorUi = this.editorUi;\r\n        let extendList = [];\r\n        if (editorUi.procExtProps && editorUi.procExtProps.length > 0) {\r\n            extendList = JSON.parse(JSON.stringify(editorUi.procExtProps)).sort((a, b) => {\r\n                return a.sortOrder - b.sortOrder;\r\n            });\r\n        }\r\n        extendList = extendList.sort((a, b) => {\r\n            return a.sortOrder - b.sortOrder;\r\n        })\r\n\r\n        let userAct = this.flowElement;\r\n        let basicProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = {};\r\n\r\n        basicProperty.categoryId = 'basicProperty';\r\n        basicProperty.categoryName = mxResources.get('basicInformation');\r\n        basicProperty.tabId = 'basic';\r\n        basicProperty.tabName = mxResources.get('basicAttributes')\r\n        basicProperty.properties = [\r\n            { propertyID: UserActivityPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: UserActivityPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: UserActivityPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true },\r\n            { propertyID: UserActivityPropertyKeys.wf_TitleExpression, propertyName: mxResources.get('wfTitleExpression'), propertyType: 'modal' },\r\n        ];\r\n\r\n        let performerProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        performerProperty.categoryId = 'performerProperty';\r\n        performerProperty.categoryName = mxResources.get('participant');\r\n        performerProperty.tabId = 'basic';\r\n        performerProperty.tabName = mxResources.get('basicAttributes')\r\n        performerProperty.properties = [\r\n            { propertyID: UserActivityPropertyKeys.ParticipantSchemes, propertyName: mxResources.get('participantSchemes'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.ParticipantOptions, propertyName: mxResources.get('participantOptions'), propertyType: 'modal' },\r\n        ];\r\n        // if (userAct.AssignmentStrategy !== AssignmentStrategy.ASSIGN) {\r\n        //     performerProperty.properties.push(\r\n        //         { propertyID: UserActivityPropertyKeys.AssignStrategy, propertyName: '分配策略', propertyType: 'modal' }\r\n        //     );\r\n        // } else {\r\n        //     performerProperty.properties = performerProperty.properties.concat(\r\n        //         [{ propertyID: UserActivityPropertyKeys.AssignStrategy, propertyName: '分配策略', propertyType: 'modal' },\r\n        //         { propertyID: UserActivityPropertyKeys.AssignPerformer, propertyName: '备选办理人', propertyType: 'modal' }]);\r\n        // }\r\n        if (!isOperation) {\r\n            if (userAct.ExecuteWorkItemMode === ExecuteWorkItemMode.Preempt) {\r\n                performerProperty.properties.push(\r\n                    { propertyID: UserActivityPropertyKeys.CompleteStrategy, propertyName: mxResources.get('completeStrategy'), propertyType: 'select' },\r\n                );\r\n                propertyData[UserActivityPropertyKeys.CompleteStrategy] = userAct.ExecuteWorkItemMode;\r\n            } else {\r\n                performerProperty.properties = performerProperty.properties.concat([\r\n                    { propertyID: UserActivityPropertyKeys.CompleteStrategy, propertyName: mxResources.get('completeStrategy'), propertyType: 'select' },\r\n                    { propertyID: UserActivityPropertyKeys.SignRule, propertyName: mxResources.get('signRule'), propertyType: 'modal' },\r\n                ]);\r\n                propertyData[UserActivityPropertyKeys.CompleteStrategy] = userAct.ExecuteWorkItemMode;\r\n                propertyData[UserActivityPropertyKeys.SignRule] = userAct.CounterSignRules;\r\n            }\r\n        }\r\n\r\n        let approvalProperty: ElementPropertyConfig = new ElementPropertyConfig();\r\n        approvalProperty.categoryId = 'approvalProperty';\r\n        approvalProperty.categoryName = mxResources.get('operationsManage');\r\n        approvalProperty.tabId = 'approvalProperty';\r\n        approvalProperty.tabName = mxResources.get('operationsConfig');\r\n        approvalProperty.properties = [\r\n            { propertyID: UserActivityPropertyKeys.ApprovalItems, propertyName: mxResources.get('approvalItems'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.wf_CustomizeAction, propertyName: mxResources.get('wfCustomizeAction'), propertyType: 'modal' },\r\n        ];\r\n        // 审批活动节点含“驳回”审批动作时，属性框支持驳回规则属性\r\n        if (userAct.Conclusions && this.isBackConclusionExist(userAct.Conclusions)) {\r\n            approvalProperty.properties.push(\r\n                { propertyID: UserActivityPropertyKeys.BackWardRule, propertyName: mxResources.get('backWardRule'), propertyType: 'modal' },\r\n            );\r\n            propertyData[UserActivityPropertyKeys.BackWardRule] = userAct.BackWardRule;\r\n        }\r\n        approvalProperty.properties = approvalProperty.properties.concat([\r\n            { propertyID: UserActivityPropertyKeys.Retrievable, propertyName: mxResources.get('retrievable'), propertyType: 'select' },\r\n        ]);\r\n        if (!isOperation) {\r\n            approvalProperty.properties = approvalProperty.properties.concat([\r\n                { propertyID: UserActivityPropertyKeys.AddSignFrontAble, propertyName: mxResources.get('addSignFrontAble'), propertyType: 'modal' },\r\n                { propertyID: UserActivityPropertyKeys.AddSignBehindAble, propertyName: mxResources.get('addSignBehindAble'), propertyType: 'modal' },\r\n            ]);\r\n        }\r\n        if (editorUi.generalConfig.enableTransfer) {\r\n            approvalProperty.properties = approvalProperty.properties.concat([\r\n                { propertyID: UserActivityPropertyKeys.transferScope, propertyName: mxResources.get('transferScope'), propertyType: 'modal' },\r\n            ]);\r\n        }\r\n        approvalProperty.properties = approvalProperty.properties.concat([\r\n            { propertyID: UserActivityPropertyKeys.NotifyAble, propertyName: mxResources.get('notifyAble'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.urgeHandleRule, propertyName: mxResources.get('urgeHandleRule'), propertyType: 'modal' }\r\n        ]);\r\n        if (userAct.SelectTargetAble) {\r\n            approvalProperty.properties = approvalProperty.properties.concat([\r\n                { propertyID: UserActivityPropertyKeys.SelectTargetAble, propertyName: mxResources.get('selectTargetAble'), propertyType: 'select' },\r\n                { propertyID: UserActivityPropertyKeys.JumpScope, propertyName: mxResources.get('jumpScope'), propertyType: 'modal' },\r\n            ]);\r\n            propertyData[UserActivityPropertyKeys.SelectTargetAble] = userAct.SelectTargetAble;\r\n            propertyData[UserActivityPropertyKeys.JumpScope] = userAct.JumpScope;\r\n        } else {\r\n            approvalProperty.properties = approvalProperty.properties.concat([\r\n                { propertyID: UserActivityPropertyKeys.SelectTargetAble, propertyName: mxResources.get('selectTargetAble'), propertyType: 'select' },\r\n            ]);\r\n            propertyData[UserActivityPropertyKeys.SelectTargetAble] = userAct.SelectTargetAble;\r\n        }\r\n\r\n        if (userAct.otherAssignNodes) {\r\n            approvalProperty.properties = approvalProperty.properties.concat([\r\n                { propertyID: UserActivityPropertyKeys.otherAssignNodes, propertyName: mxResources.get('otherAssignNodes'), propertyType: 'select' },\r\n                // { propertyID: UserActivityPropertyKeys.otherAssignActivities, propertyName: mxResources.get('otherAssignActivities'), propertyType: 'modal' },\r\n                { propertyID: UserActivityPropertyKeys.otherAssignActivityNodeInfos, propertyName: mxResources.get('otherAssignActivityNodeInfos'), propertyType: 'modal' },\r\n            ]);\r\n            propertyData[UserActivityPropertyKeys.otherAssignNodes] = true;\r\n            // propertyData[UserActivityPropertyKeys.otherAssignActivities] = userAct.otherAssignNodes.otherAssignActivities;\r\n            propertyData[UserActivityPropertyKeys.otherAssignActivityNodeInfos] = userAct.otherAssignNodes.otherAssignActivityNodeInfos || userAct.otherAssignNodes.otherAssignActivityNodeInfos;\r\n            if(userAct.otherAssignNodes.otherAssignActivities){\r\n                userAct.otherAssignNodes.otherAssignActivities = null;\r\n            }\r\n\r\n        } else {\r\n            approvalProperty.properties = approvalProperty.properties.concat([\r\n                { propertyID: UserActivityPropertyKeys.otherAssignNodes, propertyName: mxResources.get('otherAssignNodes'), propertyType: 'select' }\r\n            ]);\r\n            propertyData[UserActivityPropertyKeys.otherAssignNodes] = false;\r\n        }\r\n\r\n        let eventListeners: ElementPropertyConfig = new ElementPropertyConfig();\r\n        eventListeners.categoryId = 'eventListeners';                                                      // 活动选项（表单定义+活动构件）\r\n        eventListeners.categoryName = mxResources.get('eventListeners');\r\n        eventListeners.tabId = 'advanced';\r\n        eventListeners.tabName = mxResources.get('advancedAttributes');\r\n        eventListeners.properties = [\r\n            { propertyID: UserActivityPropertyKeys.Tools, propertyName: mxResources.get('tools'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.checkConditions, propertyName: mxResources.get('checkConditions'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.variableSettings, propertyName: mxResources.get('variableSettings'), propertyType: 'modal' }\r\n        ];\r\n\r\n        let ApprovalSettings: ElementPropertyConfig = new ElementPropertyConfig();\r\n        ApprovalSettings.categoryId = 'ApprovalSettings';                                                      // 活动选项（表单定义+活动构件）\r\n        ApprovalSettings.categoryName = mxResources.get('approvalSettings');\r\n        ApprovalSettings.tabId = 'advanced';\r\n        ApprovalSettings.tabName = mxResources.get('advancedAttributes');\r\n        ApprovalSettings.properties = [\r\n            { propertyID: UserActivityPropertyKeys.anonymousSet, propertyName: mxResources.get('anonymousSet'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.approvalPivotConfig, propertyName: mxResources.get('approvalPivotConfig'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.imageSettings, propertyName: mxResources.get('imageSettings'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.MultiInstanceLoopCharacteristics, propertyName: mxResources.get('multiInstanceLoopCharacteristics'), propertyType: 'modal' }\r\n        ];\r\n        propertyData[UserActivityPropertyKeys.MultiInstanceLoopCharacteristics] = userAct.LoopCharacteristics;\r\n\r\n        let taskTimeliness: ElementPropertyConfig = new ElementPropertyConfig();\r\n        taskTimeliness.categoryId = 'taskTimeliness';                                                      // 活动选项（表单定义+活动构件）\r\n        taskTimeliness.categoryName = mxResources.get('taskTimeliness');\r\n        taskTimeliness.tabId = 'advanced';\r\n        taskTimeliness.tabName = mxResources.get('advancedAttributes');\r\n        taskTimeliness.properties = [\r\n            { propertyID: UserActivityPropertyKeys.timeLimitControl, propertyName: mxResources.get('timeLimitControl'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.messageNotice, propertyName: mxResources.get('messageNotice'), propertyType: 'modal' },\r\n        ];\r\n\r\n        let formDef = new ElementPropertyConfig();\r\n        formDef.categoryId = 'formDef';\r\n        formDef.categoryName = mxResources.get('formDef');\r\n        formDef.tabId = 'basic';\r\n        formDef.tabName = mxResources.get('basicAttributes');\r\n        formDef.properties = [\r\n            { propertyID: UserActivityPropertyKeys.DisplayTerminal, propertyName: mxResources.get('displayTerminal'), propertyType: 'select' },\r\n            { propertyID: UserActivityPropertyKeys.wf_ExecuteForms_PC, propertyName: mxResources.get('pcForm'), propertyType: 'modal' },\r\n            { propertyID: UserActivityPropertyKeys.wf_ExecuteForms_Mobile, propertyName: mxResources.get('webForm'), propertyType: 'modal' },\r\n        ];\r\n\r\n        // 扩展属性分group处理，每个group包含父级属性和属于它的子扩展属性\r\n        const groupList = new Array();\r\n        for (const extend of extendList) {\r\n            if (!extend.parentId) {\r\n                const group = { parent: extend, childs: new Array() };\r\n                for (const e of extendList) {\r\n                    if (e.parentId === extend.id) {\r\n                        group.childs.push(e);\r\n                    }\r\n                }\r\n                groupList.push(group)\r\n            }\r\n        }\r\n        // 没有扩展属性值的时候不显示扩展属性一栏\r\n        if (groupList && groupList.length > 0) {\r\n            let ExtendPropertyConfig: ElementPropertyConfig = new ElementPropertyConfig();\r\n            ExtendPropertyConfig.categoryId = 'extendPropertyConfig';\r\n            ExtendPropertyConfig.categoryName = mxResources.get('extendPropertyConfig');\r\n            ExtendPropertyConfig.tabId = 'advanced';\r\n            ExtendPropertyConfig.tabName = mxResources.get('advancedAttributes');\r\n            ExtendPropertyConfig.properties = new Array();\r\n            for (const g of groupList) {\r\n                ExtendPropertyConfig.properties.push(\r\n                    { propertyID: g.parent.id, propertyName: g.parent.propertyTitle, propertyType: 'modal' },\r\n                );\r\n            }\r\n            this.setPropertyData(userAct, propertyData, groupList);\r\n\r\n            return {\r\n                propertyConfig: [basicProperty, performerProperty, formDef, approvalProperty, eventListeners, taskTimeliness, ApprovalSettings, ExtendPropertyConfig],\r\n                propertyData: propertyData\r\n            }\r\n        } else {\r\n            this.setPropertyData(userAct, propertyData, groupList);\r\n            return {\r\n                propertyConfig: [basicProperty, performerProperty, formDef, approvalProperty, eventListeners, taskTimeliness, ApprovalSettings],\r\n                propertyData: propertyData\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断是否存在反向流程动作\r\n     * @param conclusions\r\n     */\r\n    isBackConclusionExist(conclusions: ConclusionItem[]) {\r\n        for (let conclusion of conclusions) {\r\n            if (conclusion.WorkFlowAction === WorkFlowAction.Backward) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 组织UserActivity的属性值propertyData\r\n     * @param act\r\n     * @param propertyData\r\n     */\r\n    setPropertyData(act: UserActivity, propertyData: any, groupList: any): void {\r\n        propertyData[UserActivityPropertyKeys.Id] = act.Id;\r\n        propertyData[UserActivityPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n        propertyData[UserActivityPropertyKeys.Name] = act.Name;\r\n        propertyData[UserActivityPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n            \"zh-CHS\": act.Name,\r\n        };\r\n\r\n        //活动传递bizActivityId\r\n        propertyData[UserActivityPropertyKeys.BizActivityID] = act.BizActivityID;\r\n\r\n        // 变量设置+流程变量\r\n        propertyData[UserActivityPropertyKeys.variableSettings] = PropertyHelper.getVariableSettings(act.Model, act.variableSettings);\r\n\r\n        propertyData[UserActivityPropertyKeys.ParticipantSchemes] = this.getParticipantInfo(act);\r\n        propertyData[UserActivityPropertyKeys.ParticipantOptions] = this.getParticipantOptions(act);\r\n        // if (userAct.AssignmentStrategy === AssignmentStrategy.ASSIGN) {\r\n        //     propertyData[UserActivityPropertyKeys.AssignPerformer] = this.getPotentialOwnerImpl(userAct);\r\n        // }\r\n\r\n        propertyData[UserActivityPropertyKeys.ApprovalItems] = act.Conclusions;\r\n        propertyData[UserActivityPropertyKeys.Tools] = PropertyHelper.getBizComponentList(act.Tools as Array<Component>);\r\n        propertyData[UserActivityPropertyKeys.wf_CustomizeAction] = act.customizeActions || [];\r\n\r\n        propertyData[UserActivityPropertyKeys.AssignStrategy] = this.getAssignStrategy(act);\r\n\r\n        propertyData[UserActivityPropertyKeys.Retrievable] = act.Retrievable;\r\n        propertyData[UserActivityPropertyKeys.SelectBranch] = act.SelectBranch;\r\n        propertyData[UserActivityPropertyKeys.AddSignFrontAble] = this.getSignFrontInfo(act);\r\n        propertyData[UserActivityPropertyKeys.AddSignBehindAble] = this.getSignBehindInfo(act);\r\n        propertyData[UserActivityPropertyKeys.transferScope] = this.getTransferScopeInfo(act);\r\n        propertyData[UserActivityPropertyKeys.NotifyAble] = this.getNotifyAble(act);\r\n        propertyData[UserActivityPropertyKeys.timeLimitControl] = this.getTimeLimitInfo(act);\r\n\r\n        propertyData[UserActivityPropertyKeys.wf_TitleExpression] = act.taskTitle ? (act.taskTitle.valueLanguage ? act.taskTitle.valueLanguage : act.taskTitle.value) : '';\r\n        propertyData[UserActivityPropertyKeys.anonymousSet] = {\r\n            isAnonymity: act.anonymous,\r\n            anonymous: act.anonymousText\r\n        };\r\n        propertyData[UserActivityPropertyKeys.messageNotice] = PropertyHelper.getMessageNotices(act.messageNotices);\r\n        // 影像设置\r\n        propertyData[UserActivityPropertyKeys.imageSettings] = act.imageSettings;\r\n        propertyData[UserActivityPropertyKeys.wf_ExecuteForms_PC] =\r\n            act.ExecuteForms ? act.ExecuteForms.find(e => e.TerminalType === 'PC') : null;\r\n        propertyData[UserActivityPropertyKeys.wf_ExecuteForms_Mobile] =\r\n            act.ExecuteForms ? act.ExecuteForms.find(e => e.TerminalType === 'MOBILE') : null;\r\n        propertyData[UserActivityPropertyKeys.approvalPivotConfig] = act.approvalPivotConfig;\r\n        propertyData[UserActivityPropertyKeys.DisplayTerminal] = act.DisplayTerminal ? act.DisplayTerminal : DisplayTerminal.ALL;\r\n        propertyData[UserActivityPropertyKeys.urgeHandleRule] = this.getUrgeHandleRule(act);\r\n        for (const g of groupList) {\r\n            // 取回模型上的value值给到扩展属性组件里\r\n            if (act.extendProperties && act.extendProperties.length > 0) {\r\n                g.childs.sort((a, b) => {\r\n                    return a.sortOrder - b.sortOrder;\r\n                }).forEach((d: any) => {\r\n                    act.extendProperties.forEach(e => {\r\n                        if (e.key == d.code) {\r\n                            d.value = e.value;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            propertyData[g.parent.id] = g.childs;\r\n        }\r\n        propertyData[UserActivityPropertyKeys.checkConditions] = this.getCheckConditions(act);\r\n\r\n    }\r\n\r\n    getParticipantInfo(userActivity: UserActivity): ParticipantInfo {\r\n        const partiInfo = new ParticipantInfo();\r\n        partiInfo.assignStrategy.assignStrategy = userActivity.AssignmentStrategy;\r\n        const roles = userActivity.GetResourceRoles().filter(role => role instanceof HumanPerformerImpl) as Array<HumanPerformerImpl>;\r\n        partiInfo.humanPerformerList = PropertyHelper.getPerformerList(roles);\r\n        if (userActivity.AssignmentStrategy === AssignmentStrategy.ASSIGN) {\r\n            if (userActivity.AssignPerformerConfig) {\r\n                const assignConfig = new AssignConfig();\r\n                assignConfig.operator = userActivity.AssignPerformerConfig.Operator;\r\n                assignConfig.multiSelect = userActivity.AssignPerformerConfig.MultiSelect;\r\n                assignConfig.necessary = userActivity.AssignPerformerConfig.Necessary;\r\n                partiInfo.assignStrategy.assignConfig = assignConfig;\r\n                partiInfo.isAllScope = userActivity.AssignPerformerConfig.AllowGlobalAssign;\r\n            }\r\n            const roles = userActivity.GetResourceRoles().filter(role => role instanceof PotentialOwnerImpl) as Array<PotentialOwnerImpl>;\r\n            partiInfo.potentialOwnerList = PropertyHelper.getPerformerList(roles);\r\n        }\r\n\r\n        return partiInfo;\r\n    }\r\n\r\n    getParticipantOptions(userActivity: UserActivity) {\r\n        const options: any = {};\r\n        if (userActivity.ParticipantSetting != null) {\r\n            options.ExclusionPerformers = userActivity.ParticipantSetting.ExclusionPerformers;\r\n            options.NoPerformerStrategy = userActivity.ParticipantSetting.NoPerformerStrategy;\r\n            options.HistoricFirst = userActivity.ParticipantSetting.HistoricFirst;\r\n            options.automaticPerformers = userActivity.ParticipantSetting.automaticPerformers;\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getAssignStrategy(userActivity: UserActivity): AssignStrategy {\r\n        const assignStrategy = new AssignStrategy();\r\n        assignStrategy.assignStrategy = userActivity.AssignmentStrategy;\r\n        if (userActivity.AssignPerformerConfig) {\r\n            const assignConfig = new AssignConfig();\r\n            assignConfig.operator = userActivity.AssignPerformerConfig.Operator;\r\n            assignConfig.multiSelect = userActivity.AssignPerformerConfig.MultiSelect;\r\n            assignConfig.necessary = userActivity.AssignPerformerConfig.Necessary;\r\n            assignStrategy.assignConfig = assignConfig;\r\n        }\r\n        return assignStrategy;\r\n    }\r\n\r\n\r\n    getSignFrontInfo(userActivity: UserActivity): ActionOrganizationScopeDesign {\r\n        const signFrontTest = new ActionOrganizationScopeDesign();\r\n        signFrontTest.action = ActionScope.AddSignFront as any;\r\n        if (userActivity.AddSignFrontAble) {\r\n            signFrontTest.enable = true;\r\n            const roles = userActivity.dynamicParticipants.filter(r => r.actionScope === ActionScope.AddSignFront);\r\n            let res = roles.find(r => (r as any).organizationLevel && !(r as any).order);\r\n            let list : Participant[] = [];\r\n            if(res) {\r\n                const organization = new OrganizationParticipant;\r\n                organization.id = res.id;\r\n                organization.type = res.ClrTypeID;\r\n                organization.name = res.name;\r\n                organization.actionScope = res.actionScope as any;\r\n                organization.organizationLevel = (res as any).organizationLevel;\r\n                organization.organizationId = (res as any).organizationId;\r\n                organization.organizationCode = (res as any).organizationCode;\r\n                organization.organizationName = (res as any).organizationName;\r\n                organization.includeChildren = (res as any).includeChildren;\r\n                organization.parentsUntil = (res as any).parentsUntil;\r\n                organization.tag = (res as any).tag;\r\n                organization.order = 1;\r\n                list.push(organization);\r\n            }else {\r\n                list = PropertyHelper.getPerformerListTest(roles);\r\n            }\r\n            signFrontTest.scope = new OrganizationPotentialOwner();\r\n            if(list && list.length > 0) {\r\n                signFrontTest.scope.participantInfo = new ParticipantInfo();\r\n                signFrontTest.scope.participantInfo.potentialOwnerList = list;\r\n                signFrontTest.scope.participantInfo.isAllScope = true;\r\n            }else {\r\n                signFrontTest.scope.participantInfo = new ParticipantInfo();\r\n                signFrontTest.scope.participantInfo.isAllScope = false;\r\n            }\r\n        } else {\r\n            signFrontTest.enable = false;\r\n        }\r\n        return signFrontTest;\r\n    }\r\n    getSignBehindInfo(userActivity: UserActivity): ActionOrganizationScopeDesign {\r\n        const signBehindTest = new ActionOrganizationScopeDesign();\r\n        signBehindTest.action = ActionScope.AddSignBehind as any;\r\n        if (userActivity.AddSignBehindAble) {\r\n            signBehindTest.enable = true;\r\n            const roles = userActivity.dynamicParticipants.filter(r => r.actionScope === ActionScope.AddSignBehind);\r\n            let res = roles.find(r => (r as any).organizationLevel && !(r as any).order);\r\n            let list : Participant[] = [];\r\n            if(res) {\r\n                const organization = new OrganizationParticipant;\r\n                organization.id = res.id;\r\n                organization.type = res.ClrTypeID;\r\n                organization.name = res.name;\r\n                organization.actionScope = res.actionScope as any;\r\n                organization.organizationLevel = (res as any).organizationLevel;\r\n                organization.organizationId = (res as any).organizationId;\r\n                organization.organizationCode = (res as any).organizationCode;\r\n                organization.organizationName = (res as any).organizationName;\r\n                organization.includeChildren = (res as any).includeChildren;\r\n                organization.parentsUntil = (res as any).parentsUntil;\r\n                organization.tag = (res as any).tag;\r\n                organization.order = 1;\r\n                list.push(organization);\r\n            }else {\r\n                list = PropertyHelper.getPerformerListTest(roles);\r\n            }\r\n            signBehindTest.scope = new OrganizationPotentialOwner();\r\n            if(list && list.length > 0) {\r\n                signBehindTest.scope.participantInfo = new ParticipantInfo();\r\n                signBehindTest.scope.participantInfo.potentialOwnerList = list;\r\n                signBehindTest.scope.participantInfo.isAllScope = true;\r\n            }else {\r\n                signBehindTest.scope.participantInfo = new ParticipantInfo();\r\n                signBehindTest.scope.participantInfo.isAllScope = false;\r\n            }\r\n        } else {\r\n            signBehindTest.enable = false;\r\n        }\r\n        return signBehindTest;\r\n    }\r\n    getTransferScopeInfo(userActivity: UserActivity): ActionOrganizationScopeDesign {\r\n        const transferScopeTest = new ActionOrganizationScopeDesign();\r\n        transferScopeTest.action = ActionScope.Transfer as any;\r\n\r\n        if (userActivity.transferAble) {\r\n            transferScopeTest.enable = true;\r\n            const roles = userActivity.dynamicParticipants.filter(r => r.actionScope === ActionScope.Transfer);\r\n            let res = roles.find(r => (r as any).organizationLevel && !(r as any).order);\r\n            let list : Participant[] = [];\r\n            if(res) {\r\n                const organization = new OrganizationParticipant;\r\n                organization.id = res.id;\r\n                organization.type = res.ClrTypeID;\r\n                organization.name = res.name;\r\n                organization.actionScope = res.actionScope as any;\r\n                organization.organizationLevel = (res as any).organizationLevel;\r\n                organization.organizationId = (res as any).organizationId;\r\n                organization.organizationCode = (res as any).organizationCode;\r\n                organization.organizationName = (res as any).organizationName;\r\n                organization.includeChildren = (res as any).includeChildren;\r\n                organization.parentsUntil = (res as any).parentsUntil;\r\n                organization.tag = (res as any).tag;\r\n                organization.order = 1;\r\n                list.push(organization);\r\n            }else {\r\n                list = PropertyHelper.getPerformerListTest(roles);\r\n            }\r\n            transferScopeTest.scope = new OrganizationPotentialOwner();\r\n            if(list && list.length > 0) {\r\n                transferScopeTest.scope.participantInfo = new ParticipantInfo();\r\n                transferScopeTest.scope.participantInfo.potentialOwnerList = list;\r\n                transferScopeTest.scope.participantInfo.isAllScope = true;\r\n            }else {\r\n                transferScopeTest.scope.participantInfo = new ParticipantInfo();\r\n                transferScopeTest.scope.participantInfo.isAllScope = false;\r\n            }\r\n        } else {\r\n            transferScopeTest.enable = userActivity.transferAble;\r\n        }\r\n        return transferScopeTest;\r\n    }\r\n    getNotifyAble(userActivity: UserActivity): ActionOrganizationScopeDesign {\r\n        const notifyScopeTest = new ActionOrganizationScopeDesign();\r\n        notifyScopeTest.action = ActionScope.Notify as any;\r\n\r\n        if (userActivity.NotifyAble) {\r\n            notifyScopeTest.enable = true;\r\n            const roles = userActivity.dynamicParticipants.filter(r => r.actionScope === ActionScope.Notify);\r\n            let res = roles.find(r => (r as any).organizationLevel && !(r as any).order);\r\n            let list : Participant[] = [];\r\n            if(res) {\r\n                const organization = new OrganizationParticipant;\r\n                organization.id = res.id;\r\n                organization.type = res.ClrTypeID;\r\n                organization.name = res.name;\r\n                organization.actionScope = res.actionScope as any;\r\n                organization.organizationLevel = (res as any).organizationLevel;\r\n                organization.organizationId = (res as any).organizationId;\r\n                organization.organizationCode = (res as any).organizationCode;\r\n                organization.organizationName = (res as any).organizationName;\r\n                organization.includeChildren = (res as any).includeChildren;\r\n                organization.parentsUntil = (res as any).parentsUntil;\r\n                organization.tag = (res as any).tag;\r\n                organization.order = 1;\r\n                list.push(organization);\r\n            }else {\r\n                list = PropertyHelper.getPerformerListTest(roles);\r\n            }\r\n            notifyScopeTest.scope = new OrganizationPotentialOwner();\r\n            if(list && list.length > 0) {\r\n                notifyScopeTest.scope.participantInfo = new ParticipantInfo();\r\n                notifyScopeTest.scope.participantInfo.potentialOwnerList = list;\r\n                notifyScopeTest.scope.participantInfo.isAllScope = true;\r\n            }else {\r\n                notifyScopeTest.scope.participantInfo = new ParticipantInfo();\r\n                notifyScopeTest.scope.participantInfo.isAllScope = false;\r\n            }\r\n        } else {\r\n            notifyScopeTest.enable = userActivity.NotifyAble;\r\n        }\r\n        return notifyScopeTest;\r\n    }\r\n    getTimeLimitInfo(userActivity: UserActivity): TimeLimitControlInfo {\r\n        if (userActivity.timeLimitControl) {\r\n            const timeLimit = new TimeLimitControlInfo();\r\n            timeLimit.enable = userActivity.timeLimitControl.enable;\r\n            timeLimit.tag = userActivity.timeLimitControl.tag;\r\n            timeLimit.dueTime = userActivity.timeLimitControl.dueTime;\r\n            timeLimit.timeUnit = userActivity.timeLimitControl.timeUnit;\r\n            timeLimit.expireOperations = new Array();\r\n            if (userActivity.timeLimitControl.expireOperations && userActivity.timeLimitControl.expireOperations.length > 0) {\r\n                const operations = userActivity.timeLimitControl.expireOperations;\r\n                for (const o of operations) {\r\n                    if (o.ClrTypeID.indexOf('SendMessageExpireOperation') > 0) {\r\n                        const operation = o as SendMessageExpireOperation;\r\n                        const sendMessage = new SendMessageExpireOperationInfo();\r\n                        sendMessage.timeDuration = operation.timeDuration;\r\n                        sendMessage.durationType = operation.durationType;\r\n                        sendMessage.timeUnit = operation.timeUnit;\r\n                        sendMessage.message = operation.message;\r\n                        sendMessage.sendType = operation.sendType;\r\n                        sendMessage.subject = operation.subject;\r\n                        sendMessage.id = operation.id;\r\n                        sendMessage.receiver = operation.receiver;\r\n                        sendMessage.cycleEnable = operation.cycleEnable;\r\n                        sendMessage.cycleTime = operation.cycleTime;\r\n                        sendMessage.cycleTimeUnit = operation.cycleTimeUnit;\r\n                        sendMessage.operationTypeName = operation.operationTypeName ? operation.operationTypeName : 'SendMessageExpireOperation';\r\n                        if (operation.smsMessageTemplate) {\r\n                            const smsTemplate: any = new Object;\r\n                            smsTemplate.code = operation.smsMessageTemplate.code;\r\n                            smsTemplate.content = operation.smsMessageTemplate.content;\r\n                            smsTemplate.smsMessageVariables = new Array();\r\n                            if (operation.smsMessageTemplate.smsMessageVariables && operation.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                                for (const v of operation.smsMessageTemplate.smsMessageVariables) {\r\n                                    const variable: any = new Object;\r\n                                    variable.id = WfDesignerUtils.createNM();\r\n                                    variable.code = v.code;\r\n                                    variable.value = v.value;\r\n                                    variable.tag = v.tag;\r\n                                    smsTemplate.smsMessageVariables.push(variable);\r\n                                }\r\n                            }\r\n                            sendMessage.smsMessageTemplate = smsTemplate;\r\n                        }\r\n                        timeLimit.expireOperations.push(sendMessage);\r\n                    } else if (o.ClrTypeID.indexOf('AutoHandleExpireOperation') > 0) {\r\n                        const operation = o as AutoHandleExpireOperation;\r\n                        const autoHandle = new AutoHandleExpireOperationInfo();\r\n                        autoHandle.id = operation.id;\r\n                        autoHandle.durationType = operation.durationType;\r\n                        autoHandle.timeDuration = operation.timeDuration;\r\n                        autoHandle.timeUnit = operation.timeUnit;\r\n                        autoHandle.operationTypeName = operation.operationTypeName ? operation.operationTypeName : 'AutoHandleExpireOperation';\r\n                        autoHandle.autoHandleType = operation.autoHandleType;\r\n                        autoHandle.message = operation.message;\r\n                        timeLimit.expireOperations.push(autoHandle);\r\n                    }\r\n\r\n                }\r\n            }\r\n            return timeLimit;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getUrgeHandleRule(userActivity: UserActivity) {\r\n        if (!userActivity.urgeHandleRule) {\r\n            return null;\r\n        }\r\n        const rule = userActivity.urgeHandleRule;\r\n        let urgeHandleRule: any = {\r\n            urgeHandleAble: rule.urgeHandleAble,\r\n            sendType: rule.sendType,\r\n            earlyTime: rule.earlyTime,\r\n            intervalTime: rule.intervalTime,\r\n            urgeMessageSubject: rule.urgeMessageSubject,\r\n            urgeMessageContent: rule.urgeMessageContent,\r\n            addReminder: rule.addReminder,\r\n            subjectEditable: rule.subjectEditable,\r\n            contentEditable: rule.contentEditable\r\n        }\r\n        if (rule.smsMessageTemplate) {\r\n            const smsTemplate: any = new Object;\r\n            smsTemplate.code = rule.smsMessageTemplate.code;\r\n            smsTemplate.content = rule.smsMessageTemplate.content;\r\n            smsTemplate.smsMessageVariables = new Array();\r\n            if (rule.smsMessageTemplate.smsMessageVariables && rule.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                for (const v of rule.smsMessageTemplate.smsMessageVariables) {\r\n                    const variable: any = new Object;\r\n                    variable.id = WfDesignerUtils.createNM();\r\n                    variable.code = v.code;\r\n                    variable.value = v.value;\r\n                    variable.tag = v.tag;\r\n                    smsTemplate.smsMessageVariables.push(variable);\r\n                }\r\n            }\r\n            urgeHandleRule.smsMessageTemplate = smsTemplate;\r\n        }\r\n        return urgeHandleRule;\r\n    }\r\n\r\n    getCheckConditions(userActivity: UserActivity): Array<any> {\r\n        if (userActivity.checkConditions && userActivity.checkConditions.length > 0) {\r\n            return userActivity.checkConditions.map(c => ({\r\n                value: c.value,\r\n                checkTime: c.checkTime,\r\n                errorTips: c.errorTips ? Array.from(c.errorTips).reduce((obj, [key, value]) => Object.assign(obj, { [key]: value }), {}) : null\r\n            }));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    updateProps(obj: any): void {\r\n        this.updatePropsByIsOperation(obj);\r\n    }\r\n\r\n    updatePropsByIsOperation(obj: any, isOperation: boolean = false) {\r\n        const editorUi = this.editorUi;\r\n        const userActivity = this.flowElement;\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case UserActivityPropertyKeys.ParticipantSchemes: // 参与者属性\r\n                this.updateParticipant(userActivity, obj, isOperation);\r\n                break;\r\n            case UserActivityPropertyKeys.ParticipantOptions: // 参与者选项\r\n                this.updateParticipantOptions(userActivity, obj);\r\n                break;\r\n            // case UserActivityPropertyKeys.AssignPerformer:\r\n            //     this.updatePotentialOwnerImpl(graph.bpmnModel, userActivity, obj);\r\n            //     break;\r\n            // case UserActivityPropertyKeys.AssignStrategy:\r\n            //     this.updateAssignStrategy(graph, userActivity, obj, isOperation);\r\n            //     break;\r\n            // case UserActivityPropertyKeys.OperatorConfig:\r\n            //     this.updateOperatorConfig(userActivity, obj);\r\n            //     break;\r\n            case UserActivityPropertyKeys.CompleteStrategy:\r\n                this.resetExecuteWorkItemMode(userActivity, obj, isOperation);\r\n                break;\r\n            case UserActivityPropertyKeys.DisplayTerminal:\r\n                this.resetDisplayTerminal(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.SignRule:\r\n                this.resetSignRules(userActivity, obj, isOperation);\r\n                break;\r\n            case UserActivityPropertyKeys.ApprovalItems:\r\n                this.resetApprovalItems(userActivity, obj, isOperation);\r\n                break;\r\n            case UserActivityPropertyKeys.wf_ExecuteForms_PC:\r\n                this.resetExecuteForm(userActivity, obj, 'PC');\r\n                if (obj.parameters && obj.parameters.length > 0) {\r\n                    PropertyHelper.updateFormalParameters(editorUi.graph.bpmnModel.DefaultProcess, obj.parameters);\r\n                }\r\n                break;\r\n            case UserActivityPropertyKeys.wf_ExecuteForms_Mobile:\r\n                this.resetExecuteForm(userActivity, obj, 'MOBILE');\r\n                if (obj.parameters && obj.parameters.length > 0) {\r\n                    PropertyHelper.updateFormalParameters(editorUi.graph.bpmnModel.DefaultProcess, obj.parameters);\r\n                }\r\n                break;\r\n            case UserActivityPropertyKeys.SelectTargetAble:\r\n                this.resetSelectTargetAble(userActivity, obj, isOperation);\r\n                break;\r\n            case UserActivityPropertyKeys.JumpScope:\r\n                this.resetJumpScope(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.BackWardRule:\r\n                this.resetBackWardRule(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.MultiInstanceLoopCharacteristics:\r\n                this.resetMultiInstanceLoopCharacteristics(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.Tools:\r\n                this.resetTools(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.wf_TitleExpression:\r\n                this.modifyTitleExpression(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.AddSignFrontAble:\r\n                this.updateSignFrontSet(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.AddSignBehindAble:\r\n                this.updateSignBehindsSet(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.NotifyAble:\r\n                this.updateNotifySet(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.transferScope:\r\n                this.updateTransferScope(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.wf_CustomizeAction:\r\n                this.updateCustomizeActions(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.timeLimitControl:\r\n                this.updateTimeLimitControl(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.anonymousSet:\r\n                this.updateAnonymousSet(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.variableSettings:\r\n                this.updateVariableSettings(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.messageNotice:\r\n                this.updateMessageNotices(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.approvalPivotConfig:\r\n                this.updateApprovalPivotConfig(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.urgeHandleRule:\r\n                this.updateUrgeHandleRule(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.imageSettings: // 更新变量设置属性\r\n                this.updateImageSettings(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.checkConditions:\r\n                this.updateCheckConditions(userActivity, obj, isOperation);\r\n                break;\r\n            case UserActivityPropertyKeys.otherAssignActivities:\r\n                this.updateOtherAssignActivities(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.otherAssignActivityNodeInfos:\r\n                this.updateOtherAssignActivities(userActivity, obj);\r\n                break;\r\n            case UserActivityPropertyKeys.otherAssignNodes:\r\n                this.updateOtherAssignNodes(userActivity, obj);\r\n                break;\r\n            default:\r\n                // 判断ResourceKeys是不是groupid,是就走resetExtendProperty\r\n                if (editorUi.procExtProps.findIndex(p => p.id === propertyId) > -1) {\r\n                    this.resetExtendProperty(userActivity, obj);\r\n                } else {\r\n                    super.updateProps(obj);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 修改参与者\r\n     * @param graph\r\n     * @param userActivity\r\n     * @param obj\r\n     * @param isOperation\r\n     */\r\n    updateParticipant(userActivity: UserActivity, obj: any, isOperation = false) {\r\n        const performerInfo: ParticipantInfo = obj.propertyValue;\r\n\r\n        if (performerInfo.assignStrategy.assignStrategy === AssignmentStrategy.CLAIM\r\n            && userActivity.ParticipantSetting\r\n            && userActivity.ParticipantSetting.automaticPerformers\r\n            && userActivity.ParticipantSetting.automaticPerformers.length > 0) {\r\n            // Utils.postMessage(ResourceKeys.wf_showTip, {\r\n            //     type: 'message',\r\n            //     level: 'warning',\r\n            //     message: '当前节点【参与者选项】已设置自动审批，【分配策略】不允许设置为【领用】'\r\n            // });\r\n        } else {\r\n            this.checkOtherAssignNodes(userActivity, performerInfo);\r\n            userActivity.AssignPerformerConfig = null;\r\n            userActivity.AssignmentStrategy = performerInfo.assignStrategy.assignStrategy;\r\n            const resourceRoles = userActivity.GetResourceRoles();\r\n            if (resourceRoles && resourceRoles.length > 0) {\r\n                resourceRoles.forEach(r => {\r\n                    if (r instanceof HumanPerformerImpl) {\r\n                        userActivity.RemoveResourceRole(r.Id);\r\n                    } else if (r instanceof PotentialOwnerImpl) {\r\n                        userActivity.RemoveResourceRole(r.Id);\r\n                    }\r\n                });\r\n            }\r\n            if (performerInfo.humanPerformerList && performerInfo.humanPerformerList.length > 0) {\r\n                for (const humanPerformer of performerInfo.humanPerformerList) {\r\n                    switch (humanPerformer.type) {\r\n                        case UserParticipantExpression.Clr_Type_ID:\r\n                            this.addUserParticipant(userActivity, humanPerformer as UserParticipant, 'humanPerformer', null);\r\n                            break;\r\n                        case VariableParticipantExpression.Clr_Type_ID:\r\n                            this.addVariableParticipant(userActivity, humanPerformer as VariablePerformer, 'humanPerformer', null)\r\n                            break;\r\n                        case PositionParticipantExpression.Clr_Type_ID:\r\n                            this.addPositionParticipant(userActivity, humanPerformer as PositionParticipant, 'humanPerformer', null);\r\n                            break;\r\n                        case ComponentParticipantExpression.Clr_Type_ID:\r\n                            this.addComponentParticipant(userActivity, humanPerformer as ComponentParticipant, 'humanPerformer', null);\r\n                            break;\r\n                        case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                            this.addReportingLineParticipant(userActivity, humanPerformer as ReportingLineParticipant, 'humanPerformer', null);\r\n                            break;\r\n                        case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                            this.addActivityExecutorParticipant(userActivity, humanPerformer as ActivityExecutorParticipant, 'humanPerformer', null);\r\n                            break;\r\n                        case MatrixParticipantExpression.Clr_Type_ID:\r\n                            this.addMatrixParticipant(userActivity, humanPerformer as MatrixParticipant, 'humanPerformer', null);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (performerInfo.assignStrategy.assignStrategy === AssignmentStrategy.ASSIGN) {\r\n\r\n                const assignPerformerConfig = new AssignPerformerConfig(userActivity.Model);\r\n                assignPerformerConfig.Operator = performerInfo.assignStrategy.assignConfig.operator;\r\n                assignPerformerConfig.MultiSelect = performerInfo.assignStrategy.assignConfig.multiSelect;\r\n                assignPerformerConfig.Necessary = performerInfo.assignStrategy.assignConfig.necessary;\r\n                assignPerformerConfig.AllowGlobalAssign = performerInfo.isAllScope;\r\n\r\n                userActivity.AssignPerformerConfig = assignPerformerConfig;\r\n                if (!performerInfo.isAllScope && performerInfo.potentialOwnerList && performerInfo.potentialOwnerList.length > 0) {\r\n                    for (const potentialOwner of performerInfo.potentialOwnerList) {\r\n                        switch (potentialOwner.type) {\r\n                            case UserParticipantExpression.Clr_Type_ID:\r\n                                this.addUserParticipant(userActivity, potentialOwner as UserParticipant, 'potentialOwner', null);\r\n                                break;\r\n                            case VariableParticipantExpression.Clr_Type_ID:\r\n                                this.addVariableParticipant(userActivity, potentialOwner as VariablePerformer, 'potentialOwner', null)\r\n                                break;\r\n                            case PositionParticipantExpression.Clr_Type_ID:\r\n                                this.addPositionParticipant(userActivity, potentialOwner as PositionParticipant, 'potentialOwner', null);\r\n                                break;\r\n                            case ComponentParticipantExpression.Clr_Type_ID:\r\n                                this.addComponentParticipant(userActivity, potentialOwner as ComponentParticipant, 'potentialOwner', null);\r\n                                break;\r\n                            case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                                this.addReportingLineParticipant(userActivity, potentialOwner as ReportingLineParticipant, 'potentialOwner', null);\r\n                                break;\r\n                            case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                                this.addActivityExecutorParticipant(userActivity, potentialOwner as ActivityExecutorParticipant, 'potentialOwner', null);\r\n                                break;\r\n                            case MatrixParticipantExpression.Clr_Type_ID:\r\n                                this.addMatrixParticipant(userActivity, potentialOwner as MatrixParticipant, 'potentialOwner', null);\r\n                                break;\r\n                            case OrganizationParticipantExpression.Clr_Type_ID:\r\n                                this.addOrganizationParticipant(userActivity, potentialOwner as OrganizationParticipant, 'potentialOwner', null);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // 分配策略为领用时，完成策略自动修改为抢占模式\r\n            if (userActivity.AssignmentStrategy === AssignmentStrategy.CLAIM) {\r\n                userActivity.ExecuteWorkItemMode = ExecuteWorkItemMode.Preempt;\r\n                userActivity.CounterSignRules = null;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    checkOtherAssignNodes(userActivity: UserActivity, performerInfo: ParticipantInfo) {\r\n        if (userActivity.AssignmentStrategy !== AssignmentStrategy.ASSIGN) {\r\n            return;\r\n        }\r\n        const bpmnModel = userActivity.Model;\r\n        const flowElements = bpmnModel.DefaultProcess.GetFlowElements();\r\n        if (performerInfo.assignStrategy.assignStrategy !== AssignmentStrategy.ASSIGN) {\r\n            for (const k in flowElements) {\r\n                if (flowElements[k] instanceof UserActivity) {\r\n                    const activity = flowElements[k] as UserActivity;\r\n                    if (activity.otherAssignNodes && activity.otherAssignNodes.otherAssignActivities\r\n                        && activity.otherAssignNodes.otherAssignActivities.length > 0\r\n                        && activity.otherAssignNodes.otherAssignActivities.findIndex(id => id === userActivity.Id) > -1\r\n                    ) {\r\n                        activity.otherAssignNodes.otherAssignActivities = activity.otherAssignNodes.otherAssignActivities.filter(id => id !== userActivity.Id);\r\n                    }\r\n                } else if (flowElements[k] instanceof OperationActivity) {\r\n                    const operationActivity = flowElements[k] as OperationActivity;\r\n                    if (operationActivity.otherAssignNodes && operationActivity.otherAssignNodes.otherAssignActivities\r\n                        && operationActivity.otherAssignNodes.otherAssignActivities.length > 0\r\n                        && operationActivity.otherAssignNodes.otherAssignActivities.findIndex(id => id === userActivity.Id) > -1\r\n                    ) {\r\n                        operationActivity.otherAssignNodes.otherAssignActivities = operationActivity.otherAssignNodes.otherAssignActivities.filter(id => id !== userActivity.Id);\r\n                    }\r\n                } else if (flowElements[k] instanceof StartActivity) {\r\n                    const startActivity = flowElements[k] as StartActivity;\r\n                    if (startActivity.otherAssignNodes && startActivity.otherAssignNodes.otherAssignActivities\r\n                        && startActivity.otherAssignNodes.otherAssignActivities.length > 0\r\n                        && startActivity.otherAssignNodes.otherAssignActivities.findIndex(id => id === userActivity.Id) > -1\r\n                    ) {\r\n                        startActivity.otherAssignNodes.otherAssignActivities = startActivity.otherAssignNodes.otherAssignActivities.filter(id => id !== userActivity.Id);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (userActivity.AssignPerformerConfig.Operator === 'currentUser'\r\n                && performerInfo.assignStrategy.assignConfig.operator !== 'currentUser'\r\n            ) {\r\n                for (const k in flowElements) {\r\n                    if (flowElements[k] instanceof UserActivity) {\r\n                        const activity = flowElements[k] as UserActivity;\r\n                        if (activity.otherAssignNodes && activity.otherAssignNodes.otherAssignActivities\r\n                            && activity.otherAssignNodes.otherAssignActivities.length > 0\r\n                            && activity.otherAssignNodes.otherAssignActivities.findIndex(id => id === userActivity.Id) > -1\r\n                        ) {\r\n                            activity.otherAssignNodes.otherAssignActivities = activity.otherAssignNodes.otherAssignActivities.filter(id => id !== userActivity.Id);\r\n                        }\r\n                    } else if (flowElements[k] instanceof OperationActivity) {\r\n                        const operationActivity = flowElements[k] as OperationActivity;\r\n                        if (operationActivity.otherAssignNodes && operationActivity.otherAssignNodes.otherAssignActivities\r\n                            && operationActivity.otherAssignNodes.otherAssignActivities.length > 0\r\n                            && operationActivity.otherAssignNodes.otherAssignActivities.findIndex(id => id === userActivity.Id) > -1\r\n                        ) {\r\n                            operationActivity.otherAssignNodes.otherAssignActivities = operationActivity.otherAssignNodes.otherAssignActivities.filter(id => id !== userActivity.Id);\r\n                        }\r\n                    }\r\n                }\r\n            } else if (userActivity.AssignPerformerConfig.Operator === 'procInstCreator'\r\n                && performerInfo.assignStrategy.assignConfig.operator !== 'procInstCreator'\r\n            ) {\r\n                for (const k in flowElements) {\r\n                    if (flowElements[k] instanceof StartActivity) {\r\n                        const startActivity = flowElements[k] as StartActivity;\r\n                        if (startActivity.otherAssignNodes && startActivity.otherAssignNodes.otherAssignActivities\r\n                            && startActivity.otherAssignNodes.otherAssignActivities.length > 0\r\n                            && startActivity.otherAssignNodes.otherAssignActivities.findIndex(id => id === userActivity.Id) > -1\r\n                        ) {\r\n                            startActivity.otherAssignNodes.otherAssignActivities = startActivity.otherAssignNodes.otherAssignActivities.filter(id => id !== userActivity.Id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加用户参与者\r\n     * @param userActivity\r\n     * @param performer\r\n     * @param type\r\n     */\r\n    addUserParticipant(userActivity: UserActivity, performer, type: string , scope: ActionScope) {\r\n        let userParticipant : UserParticipantExpression;\r\n        if(performer instanceof UserParticipantExpression) {\r\n            userParticipant = performer;\r\n        }else{\r\n            performer = performer as UserParticipant\r\n            userParticipant = new UserParticipantExpression(userActivity.Model, performer.performerId, performer.performerName, performer.orgType);\r\n            userParticipant.id = performer.id;\r\n            userParticipant.OrgId = performer.orgId;\r\n            userParticipant.actionScope = ActionScope.Default;\r\n            userParticipant.OrgName = performer.orgName;\r\n            userParticipant.Tag = performer.tag;\r\n            userParticipant.OrgType = performer.orgType;\r\n            userParticipant.order = performer.order;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                userParticipant.condition = condition;\r\n            }\r\n        }\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = userParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = performer.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = userParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = performer.order;\r\n            if(scope) {\r\n                userParticipant.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(userParticipant);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加变量参与者\r\n     * @param userActivity\r\n     * @param performer\r\n     * @param type\r\n     */\r\n    addVariableParticipant(userActivity: UserActivity, performer, type: string, scope: ActionScope) {\r\n        let variablePerformer: VariableParticipantExpression;\r\n        if(performer instanceof VariableParticipantExpression) {\r\n            variablePerformer = performer;\r\n        }else{\r\n            performer = performer as VariablePerformer;\r\n            variablePerformer = new VariableParticipantExpression(userActivity.Model, performer.performerId, performer.performerName, performer.orgType);\r\n            variablePerformer.id = performer.id;\r\n            variablePerformer.actionScope = ActionScope.Default;\r\n            variablePerformer.Name = performer.performerName ? performer.performerName : performer.name;\r\n            variablePerformer.Tag = performer.tag;\r\n            variablePerformer.VarValue = performer.varValue;\r\n            variablePerformer.VarType = performer.varType;\r\n            variablePerformer.order = performer.order;\r\n            variablePerformer.Relation = performer.relation;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                variablePerformer.condition = condition;\r\n            }\r\n        }\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = variablePerformer;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = performer.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = variablePerformer;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = performer.order;\r\n            if(scope) {\r\n                variablePerformer.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(variablePerformer);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加岗位参与者\r\n     * @param userActivity\r\n     * @param performer\r\n     * @param type\r\n     */\r\n    addPositionParticipant(userActivity: UserActivity, performer, type: string, scope: ActionScope) {\r\n        let posiParticipant : PositionParticipantExpression;\r\n        if(performer instanceof PositionParticipantExpression) {\r\n            posiParticipant = performer;\r\n        }else{\r\n            performer = performer as PositionParticipant;\r\n            posiParticipant = new PositionParticipantExpression(userActivity.Model, performer.performerId, performer.performerName);\r\n            posiParticipant.id = performer.id;\r\n            posiParticipant.actionScope = ActionScope.Default;\r\n            posiParticipant.PositionType = performer.positionType;\r\n            posiParticipant.order = performer.order;\r\n            if (performer.positionType === '1') {\r\n                posiParticipant.OrgId = performer.orgId;\r\n                posiParticipant.OrgName = performer.orgName;\r\n                posiParticipant.OrgType = performer.orgType;\r\n            }\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                posiParticipant.condition = condition;\r\n            }\r\n        }\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = posiParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = performer.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = posiParticipant;\r\n            if (performer.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = performer.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = performer.order;\r\n            if(scope) {\r\n                posiParticipant.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(posiParticipant);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加构件参与者\r\n     * @param userActivity\r\n     * @param component\r\n     * @param type\r\n     */\r\n    addComponentParticipant(userActivity: UserActivity, component, type: string, scope: ActionScope) {\r\n        let componentParticipant:ComponentParticipantExpression;\r\n        if(component instanceof ComponentParticipantExpression) {\r\n            componentParticipant = component;\r\n        }else {\r\n            component = component as ComponentParticipant;\r\n            componentParticipant = new ComponentParticipantExpression(userActivity.Model);\r\n            componentParticipant.id = component.id;\r\n            componentParticipant.componentId = component.metadataId;\r\n            componentParticipant.actionScope = ActionScope.Default;\r\n            componentParticipant.componentName = component.name;\r\n            componentParticipant.methodName = component.methodName;\r\n            componentParticipant.order = component.order;\r\n            componentParticipant.methodCode = component.methodCode;\r\n\r\n            if (component.actualParameters && component.actualParameters.length > 0) {\r\n                let actParas = new Array<ActualParameter>();\r\n                for (let para of component.actualParameters) {\r\n                    let actPara = new ActualParameter(userActivity.Model, para.code, para.value, para.valueText);\r\n\r\n                    // TODO:更新参与者会默认把构件参数属性改为contant，临时修复，后续代码优化\r\n                    actPara.Tag = para.tag;\r\n                    if (para.fetchValueMode) {\r\n                        switch (para.fetchValueMode) {\r\n                            case 'express':\r\n                                actPara.Tag = 'expression';\r\n                                break;\r\n                            case 'none':\r\n                                actPara.Tag = 'expression';\r\n                                break;\r\n                            default:\r\n                                actPara.Tag = 'constant';\r\n                                break;\r\n                        }\r\n                    }\r\n                    actParas.push(actPara);\r\n                }\r\n                componentParticipant.actualParameters = actParas;\r\n            }\r\n            if (component.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = component.condition;\r\n                componentParticipant.condition = condition;\r\n            }\r\n        }\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = componentParticipant;\r\n            if (component.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = component.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = component.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = componentParticipant;\r\n            if (component.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = component.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = component.order;\r\n            if(scope) {\r\n                componentParticipant.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(componentParticipant);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userActivity\r\n     * @param participant\r\n     * @param type\r\n     */\r\n    addReportingLineParticipant(userActivity: UserActivity, participant, type: string, scope: ActionScope) {\r\n        let reportingLine : ReportingLineParticipantExpression;\r\n        if(participant instanceof ReportingLineParticipantExpression) {\r\n            reportingLine = participant;\r\n        }else {\r\n            participant = participant as ReportingLineParticipant;\r\n            reportingLine = new ReportingLineParticipantExpression(userActivity.Model);\r\n            reportingLine.id = participant.id;\r\n            reportingLine.actionScope = ActionScope.Default;\r\n            reportingLine.ReportingLineDefId = participant.reportingLineDefId;\r\n            reportingLine.ReportingLineDefName = participant.reportingLineDefName;\r\n            reportingLine.RefOrgId = participant.refOrgId;\r\n            reportingLine.RefUserId = participant.refUserId;\r\n            reportingLine.RefEmployeeId = participant.refEmployeeId;\r\n            reportingLine.order = participant.order;\r\n            reportingLine.Dimension = participant.dimension;\r\n            reportingLine.Tag = participant.tag;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                reportingLine.condition = condition;\r\n            }\r\n        }\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = reportingLine;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = participant.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = reportingLine;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = participant.order;\r\n            if(scope) {\r\n                reportingLine.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(reportingLine);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userActivity\r\n     * @param participant\r\n     * @param type\r\n     */\r\n    addActivityExecutorParticipant(userActivity: UserActivity, participant, type: string, scope: ActionScope) {\r\n        let activityExecutor : ActivityExecutorParticipantExpression;\r\n        if(participant instanceof ActivityExecutorParticipantExpression) {\r\n            activityExecutor = participant;\r\n        }else {\r\n            participant = participant as ActivityExecutorParticipant;\r\n            activityExecutor = new ActivityExecutorParticipantExpression(userActivity.Model);\r\n            activityExecutor.id = participant.id;\r\n            activityExecutor.activityDefId = participant.activityDefId;\r\n            activityExecutor.actionScope = ActionScope.Default;\r\n            activityExecutor.order = participant.order;\r\n            activityExecutor.activityDefName = participant.activityDefName;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                activityExecutor.condition = condition;\r\n            }\r\n        }\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = activityExecutor;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = participant.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = activityExecutor;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = participant.order;\r\n            if(scope) {\r\n                activityExecutor.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(activityExecutor);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userActivity\r\n     * @param participant\r\n     * @param type\r\n     */\r\n    addMatrixParticipant(userActivity: UserActivity, participant, type: string, scope: ActionScope) {\r\n        let matrix : MatrixParticipantExpression;\r\n        matrix = new MatrixParticipantExpression(userActivity.Model);\r\n        if(participant instanceof MatrixParticipantExpression) {\r\n            matrix = participant;\r\n        }else {\r\n            participant = participant as MatrixParticipant;\r\n            matrix = new MatrixParticipantExpression(userActivity.Model);\r\n            matrix.order = participant.order;\r\n            matrix.id = participant.id;\r\n            matrix.actionScope = ActionScope.Default;\r\n            matrix.matrixDefId = participant.matrixDefId;\r\n            matrix.matrixDefName = participant.matrixDefName;\r\n            matrix.conditionField1 = participant.conditionField1;\r\n            matrix.conditionFieldText1 = participant.conditionFieldText1;\r\n            matrix.conditionField2 = participant.conditionField2;\r\n            matrix.conditionFieldText2 = participant.conditionFieldText2;\r\n            matrix.conditionField3 = participant.conditionField3;\r\n            matrix.conditionFieldText3 = participant.conditionFieldText3;\r\n            matrix.multivaluedCondition = participant.multivaluedCondition;\r\n            matrix.dataFieldAlias = participant.dataFieldAlias;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                matrix.condition = condition;\r\n            }\r\n        }\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = matrix;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = participant.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = matrix;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = participant.order;\r\n            if(scope) {\r\n                matrix.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(matrix);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param userActivity\r\n     * @param participant\r\n     * @param type\r\n     */\r\n    addOrganizationParticipant(userActivity: UserActivity, participant, type: string, scope: ActionScope) {\r\n        let potential : OrganizationParticipantExpression;\r\n        if(participant instanceof OrganizationParticipantExpression) {\r\n            potential = participant;\r\n        }else {\r\n            participant = participant as OrganizationParticipant;\r\n            potential = new OrganizationParticipantExpression(userActivity.Model);\r\n            potential.id = participant.id;\r\n            potential.order = participant.order;\r\n            potential.actionScope = ActionScope.AssignUser;\r\n            // potential.organizationLevel = participant.organizationLevel;\r\n            if(participant.organizationLevel === 'DEPARTMENT') {\r\n                potential.organizationLevel = OrganizationLevel.DEPARTMENT;\r\n            }else if(participant.organizationLevel === 'UNIT') {\r\n                potential.organizationLevel = OrganizationLevel.UNIT;\r\n            }else if(participant.organizationLevel === 'DEFAULT'){\r\n                potential.organizationLevel = OrganizationLevel.DEFAULT;\r\n            }\r\n            potential.organizationId = participant.organizationId;\r\n            potential.organizationName = participant.organizationName;\r\n            potential.includeChildren = participant.includeChildren;\r\n            potential.tag = participant.tag;\r\n\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                potential.condition = condition;\r\n            }\r\n        }\r\n\r\n        if (type === 'humanPerformer') {\r\n            let humanPerformerImpl = new HumanPerformerImpl(userActivity.Model);\r\n            humanPerformerImpl.participantExpression = potential;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                humanPerformerImpl.condition = condition;\r\n            }\r\n            humanPerformerImpl.order = participant.order;\r\n            userActivity.AddResourceRole(humanPerformerImpl);\r\n        } else if (type === 'potentialOwner') {\r\n            let otentialOwnerImpl = new PotentialOwnerImpl(userActivity.Model);\r\n            otentialOwnerImpl.participantExpression = potential;\r\n            if (participant.condition) {\r\n                const condition = new Condition(userActivity.Model);\r\n                condition.Value = participant.condition;\r\n                otentialOwnerImpl.condition = condition;\r\n            }\r\n            otentialOwnerImpl.order = participant.order;\r\n            if(scope) {\r\n                potential.actionScope = scope;\r\n                userActivity.dynamicParticipants.push(potential);\r\n            }else {\r\n                userActivity.AddResourceRole(otentialOwnerImpl);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 修改参与者选项\r\n     * @param userActivity\r\n     * @param obj\r\n     */\r\n    updateParticipantOptions(userActivity: UserActivity, obj: any) {\r\n        const options = obj.propertyValue;\r\n        if (userActivity.ParticipantSetting != null) {\r\n            userActivity.ParticipantSetting.ExclusionPerformers = options.ExclusionPerformers;\r\n            userActivity.ParticipantSetting.NoPerformerStrategy = options.NoPerformerStrategy;\r\n            userActivity.ParticipantSetting.HistoricFirst = options.HistoricFirst;\r\n            userActivity.ParticipantSetting.automaticPerformers = options.automaticPerformers;\r\n        } else {\r\n            let participantSetting = new ParticipantSetting(userActivity.Model);\r\n            participantSetting.ExclusionPerformers = options.ExclusionPerformers;\r\n            participantSetting.NoPerformerStrategy = options.NoPerformerStrategy;\r\n            participantSetting.HistoricFirst = options.HistoricFirst;\r\n            participantSetting.automaticPerformers = options.automaticPerformers;\r\n            userActivity.ParticipantSetting = participantSetting;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 修改完成策略属性\r\n     * @param graph\r\n     * @param userActivity\r\n     * @param obj\r\n     * @param isOperation\r\n     */\r\n    resetExecuteWorkItemMode(userActivity: UserActivity, obj: any, isOperation = false) {\r\n        if (userActivity) {\r\n            userActivity.ExecuteWorkItemMode = obj.propertyValue;\r\n            //抢占模式下清空会签规则\r\n            if (userActivity.ExecuteWorkItemMode === ExecuteWorkItemMode.Preempt) {\r\n                userActivity.CounterSignRules = null;\r\n            } else {\r\n\r\n                // 会签规则不存在时，即由抢占变为会签时，初始化会签规则\r\n                // 并行会签和串行会签之间切换时，不刷新会签规则\r\n                if (!userActivity.CounterSignRules) {\r\n                    userActivity.CounterSignRules = new Array<CounterSignRule>();\r\n                }\r\n                //会签策略时,不允许跳转；且驳回规则不允许动态选择驳回级次(驳回规则目前需要在流程设计器调整)\r\n                userActivity.SelectTargetAble = false;\r\n                userActivity.JumpScope = null;\r\n                // 切换会签策略时，分配策略不能是领用,自动切换为所有\r\n                // 2023-2-9 修复：由于新增了备选办理人，直接指派导致切换时时备选办理人丢失，修改为只有是领用才切到指所有\r\n                if (userActivity.AssignmentStrategy === AssignmentStrategy.CLAIM) {\r\n                    userActivity.AssignmentStrategy = AssignmentStrategy.ALL;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resetDisplayTerminal(userActivity: UserActivity, obj: any, isOperation = false) {\r\n        if (userActivity) {\r\n            userActivity.DisplayTerminal = obj.propertyValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新会签规则属性\r\n     * @param graph\r\n     * @param userActivity\r\n     * @param obj\r\n     * @param isOperation\r\n     */\r\n    resetSignRules(userActivity: UserActivity, obj: any, isOperation = false) {\r\n        if (userActivity) {\r\n            let rules = obj.propertyValue as any[];\r\n            userActivity.CounterSignRules = null;\r\n            if (rules && rules.length > 0) {\r\n                userActivity.CounterSignRules = new Array<CounterSignRule>();\r\n                for (let rule of rules) {\r\n                    let counterSignRule = new CounterSignRule(userActivity.Model);\r\n                    let condition = new Condition(userActivity.Model);\r\n                    condition.Value = rule.completionCondition;\r\n                    counterSignRule.ConclusionValue = rule.conclusionValue;\r\n                    counterSignRule.CalculateType = rule.calculateType;\r\n                    counterSignRule.ConditionValue = rule.conditionValue;\r\n                    counterSignRule.WaitAllVotes = rule.waitAllVotes;\r\n                    counterSignRule.CompletionCondition = condition;\r\n                    userActivity.CounterSignRules.push(counterSignRule);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新自定义项属性\r\n     * @param graph\r\n     * @param userActivity\r\n     * @param obj\r\n     * @param isOperation\r\n     */\r\n    resetApprovalItems(userActivity: UserActivity, obj: any, isOperation = false) {\r\n        if (userActivity) {\r\n            let conclusions = obj.propertyValue as any[];\r\n            userActivity.Conclusions = new Array<ConclusionItem>();\r\n            for (let conclusion of conclusions) {\r\n                let item = new ConclusionItem(userActivity.Model);\r\n                item.Value = conclusion.value;\r\n                item.Text = conclusion.text;\r\n                item.WorkFlowAction = conclusion.workFlowAction;\r\n                item.IsDefault = conclusion.isDefault;\r\n                item.commentNecessary = conclusion.commentNecessary;\r\n                item.certification = conclusion.certification;\r\n                item.attachmentNecessary = conclusion.attachmentNecessary;\r\n                item.signatureNecessary = conclusion.signatureNecessary;\r\n                item.defaultComment = conclusion.defaultComment;\r\n                userActivity.Conclusions.push(item);\r\n            }\r\n        }\r\n        // 判断审批项是否包含驳回？不包含时，驳回规则清空\r\n        if (!this.isBackConclusionExist(userActivity.Conclusions)) {\r\n            userActivity.BackWardRule = null;\r\n        } else if (!userActivity.BackWardRule) {\r\n            userActivity.BackWardRule = new BackWardRule(userActivity.Model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新审批活动表单定义属性\r\n     * @param userActivity\r\n     * @param obj\r\n     * @param terminal\r\n     */\r\n    resetExecuteForm(userActivity: UserActivity, obj: any, terminal: string) {\r\n        if (userActivity) {\r\n            let form = obj.propertyValue as any;\r\n            if (!userActivity.ExecuteForms) {\r\n                userActivity.ExecuteForms = new Array<ExecuteForm>();\r\n            }\r\n            userActivity.ExecuteForms = userActivity.ExecuteForms.filter(e => e.TerminalType !== terminal);\r\n            if (form) {\r\n                let params = form.ActualParameters as any[];\r\n                let actParas = new Array<ActualParameter>();\r\n                if (params && params.length > 0) {\r\n                    for (let para of params) {\r\n                        let actPara = new ActualParameter(userActivity.Model, para.Name, para.Value);\r\n                        if (para.Tag) {\r\n                            actPara.Tag = para.Tag;\r\n                        } else {\r\n                            if (para.Value) {\r\n                                if (para.Value.length >= 8 && para.Value.slice(0, 8) === `{\"expr\":`) {\r\n                                    actPara.Tag = 'expression';\r\n                                } else {\r\n                                    actPara.Tag = 'constant';\r\n                                }\r\n                            } else {\r\n                                actPara.Tag = 'variable';\r\n                            }\r\n\r\n                        }\r\n                        actParas.push(actPara);\r\n                    }\r\n                }\r\n                const id = BpmnModelHelper.GenerateElementId();\r\n                let item = new ExecuteForm(userActivity.Model, id, form.Name, actParas);\r\n                item.ComponentId = form.ComponentId;\r\n                item.FormType = form.FormType;\r\n                item.formFormatId = form.formFormatId;\r\n                item.formatConfigId = form.formatConfigId;\r\n                item.TerminalType = form.TerminalType;\r\n                userActivity.ExecuteForms.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新是否允许跳转属性\r\n     * @param graph\r\n     * @param userActivity\r\n     * @param obj\r\n     * @param isOperation\r\n     */\r\n    resetSelectTargetAble(userActivity: UserActivity, obj: any, isOperation = false) {\r\n        const SelectTargetAble = obj.propertyValue as boolean;\r\n        userActivity.SelectTargetAble = SelectTargetAble;\r\n        if (userActivity.SelectTargetAble) {\r\n        } else {\r\n            userActivity.JumpScope = null;\r\n        }\r\n    }\r\n\r\n    resetJumpScope(userActivity: UserActivity, obj: any) {\r\n        const data = obj.propertyValue;\r\n        if (data) {\r\n            let jumpScope = new JumpScope(userActivity.Model);\r\n            jumpScope.Category = data.Category;\r\n            jumpScope.DefaultType = data.DefaultType;\r\n            jumpScope.DestinationActivities = data.DestinationActivities;\r\n            jumpScope.DefaultActivity = data.DefaultActivity;\r\n            userActivity.JumpScope = jumpScope;\r\n        } else {\r\n            userActivity.JumpScope = null;\r\n        }\r\n    }\r\n\r\n    resetBackWardRule(userActivity: UserActivity, obj: any) {\r\n        const data = obj.propertyValue;\r\n        let backWardRule = new BackWardRule(userActivity.Model);\r\n        backWardRule.TargetRef = data.TargetRef;\r\n        backWardRule.SelectTargetAble = data.SelectTargetAble;\r\n        backWardRule.WaitReturn = data.WaitReturn;\r\n        backWardRule.ResubmitEffect = data.ResubmitEffect;\r\n        backWardRule.DynamicBackWardRuleAble = data.DynamicBackWardRuleAble;\r\n        backWardRule.SelectTargetList = data.SelectTargetList;\r\n\r\n        userActivity.BackWardRule = backWardRule;\r\n    }\r\n\r\n    resetMultiInstanceLoopCharacteristics(userActivity: UserActivity, obj: any) {\r\n        if(obj.propertyValue) {\r\n            const data = obj.propertyValue;\r\n            let loopCharacteristics = new MultiInstanceLoopCharacteristics(userActivity.Model);\r\n            loopCharacteristics.enable = data.enable;\r\n            loopCharacteristics.sequential = data.sequential;\r\n            loopCharacteristics.loopCardinality = new Expression(userActivity.Model);\r\n            if(data.loopCardinality) {\r\n                let variableExpression = new SemanticExpression(userActivity.Model);\r\n                variableExpression.Value = data.loopCardinality;\r\n                loopCharacteristics.loopCardinality.MexExpression = variableExpression;\r\n            }\r\n            loopCharacteristics.completionCondition = data.completionCondition;\r\n            let rules = data.completionConditionRules as any[];\r\n            loopCharacteristics.completionConditionRules = null;\r\n            if(rules && rules.length > 0) {\r\n                loopCharacteristics.completionConditionRules = new Array<CounterSignRule>();\r\n                for(let rule of rules) {\r\n                    let counterSignRule = new CounterSignRule(userActivity.Model);\r\n                    let condition = new Condition(userActivity.Model);\r\n                    condition.Value = rule.CompletionCondition.Value;\r\n                    counterSignRule.ConclusionValue = rule.ConclusionValue;\r\n                    counterSignRule.CalculateType = rule.CalculateType;\r\n                    counterSignRule.ConditionValue = rule.ConditionValue;\r\n                    counterSignRule.WaitAllVotes = rule.WaitAllVotes;\r\n                    counterSignRule.CompletionCondition = condition;\r\n                    loopCharacteristics.completionConditionRules.push(counterSignRule);\r\n                }\r\n            }\r\n            userActivity.LoopCharacteristics = loopCharacteristics;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新活动节点标题\r\n     * @param userActivity\r\n     * @param obj\r\n     */\r\n    modifyTitleExpression(userActivity: UserActivity, obj: any) {\r\n        if (userActivity.taskTitle) {\r\n            userActivity.taskTitle.valueLanguage = obj.propertyValue;\r\n            userActivity.taskTitle.value = obj.propertyValue['zh-CHS'];\r\n        } else {\r\n            const title = new TitleExpression(userActivity.Model, obj.propertyValue['zh-CHS'], obj.propertyValue);\r\n            userActivity.taskTitle = title;\r\n        }\r\n    }\r\n\r\n    resetTools(userActivity: UserActivity, obj: any) {\r\n        let tools = obj.propertyValue as any[];\r\n        userActivity.Tools = new Array<Tool>();\r\n        if (tools && tools.length > 0) {\r\n            for (let tool of tools) {\r\n                let component = new Component(userActivity.Model);\r\n                component.Id = tool.id;\r\n                component.Name = tool.name;\r\n                component.Time = tool.executionTime;\r\n                // TODO 写死了构件类型\r\n                component.ComponentType = 'WebServiceComponent';\r\n                component.MetadataId = tool.metadataId;\r\n                component.MethodCode = tool.methodCode;\r\n                component.isForCompensation = tool.isForCompensation;\r\n                component.ActualParameters = [];\r\n                if (tool.actualParameters && (tool.actualParameters as any[]).length > 0) {\r\n                    for (let a of (tool.actualParameters as any[])) {\r\n                        let parameter = new ActualParameter(userActivity.Model, a.code, a.value);\r\n                        component.ActualParameters.push(parameter);\r\n                    }\r\n                }\r\n                userActivity.Tools.push(component);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    updateSignFrontSet(userActivity: UserActivity, obj: any) {\r\n        const scope = obj.propertyValue as ActionOrganizationScopeDesign;\r\n        userActivity.dynamicParticipants = userActivity.dynamicParticipants.filter(p => (p as OrganizationParticipantExpression).actionScope !== ActionScope.AddSignFront);\r\n        userActivity.AddSignFrontAble = scope.enable;\r\n\r\n        if (scope.scope) {\r\n            if(scope.scope.organizationLevel) {\r\n                const organizationParticipantExpression = new OrganizationParticipantExpression(userActivity.Model);\r\n                organizationParticipantExpression.id = BpmnModelHelper.GenerateElementId();\r\n                organizationParticipantExpression.actionScope = ActionScope.AddSignFront;\r\n                organizationParticipantExpression.organizationLevel = scope.scope.organizationLevel as any;\r\n                organizationParticipantExpression.organizationId = scope.scope.organizationId;\r\n                organizationParticipantExpression.organizationName = scope.scope.organizationName;\r\n                organizationParticipantExpression.includeChildren = scope.scope.includeChildren;\r\n                organizationParticipantExpression.tag = scope.scope.tag;\r\n                userActivity.dynamicParticipants.push(organizationParticipantExpression);\r\n            }else {\r\n                const performerInfo: ParticipantInfo = scope.scope.participantInfo as any;\r\n                if (performerInfo.isAllScope && performerInfo.potentialOwnerList && performerInfo.potentialOwnerList.length > 0) {\r\n                    for (const potentialOwner of performerInfo.potentialOwnerList) {\r\n                        switch (potentialOwner.type ? potentialOwner.type : ((potentialOwner instanceof ParticipantExpression) ? potentialOwner.ClrTypeID : null)) {\r\n                            case UserParticipantExpression.Clr_Type_ID:\r\n                                this.addUserParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as UserParticipant), 'potentialOwner', ActionScope.AddSignFront);\r\n                                break;\r\n                            case VariableParticipantExpression.Clr_Type_ID:\r\n                                this.addVariableParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as VariablePerformer), 'potentialOwner', ActionScope.AddSignFront)\r\n                                break;\r\n                            case PositionParticipantExpression.Clr_Type_ID:\r\n                                this.addPositionParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as PositionParticipant), 'potentialOwner', ActionScope.AddSignFront);\r\n                                break;\r\n                            case ComponentParticipantExpression.Clr_Type_ID:\r\n                                this.addComponentParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ComponentParticipant), 'potentialOwner', ActionScope.AddSignFront);\r\n                                break;\r\n                            case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                                this.addReportingLineParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ReportingLineParticipant), 'potentialOwner', ActionScope.AddSignFront);\r\n                                break;\r\n                            case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                                this.addActivityExecutorParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ActivityExecutorParticipant), 'potentialOwner', ActionScope.AddSignFront);\r\n                                break;\r\n                            case MatrixParticipantExpression.Clr_Type_ID:\r\n                                this.addMatrixParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as MatrixParticipant), 'potentialOwner', ActionScope.AddSignFront);\r\n                                break;\r\n                            case OrganizationParticipantExpression.Clr_Type_ID:\r\n                                this.addOrganizationParticipant(userActivity, (potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as OrganizationParticipant), 'potentialOwner' , ActionScope.AddSignFront);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSignBehindsSet(userActivity: UserActivity, obj: any) {\r\n        const scope = obj.propertyValue as ActionOrganizationScopeDesign;\r\n        userActivity.dynamicParticipants = userActivity.dynamicParticipants.filter(p => (p as OrganizationParticipantExpression).actionScope !== ActionScope.AddSignBehind);\r\n        userActivity.AddSignBehindAble = scope.enable;\r\n\r\n        if (scope.scope) {\r\n            if(scope.scope.organizationLevel) {\r\n                const organizationParticipantExpression = new OrganizationParticipantExpression(userActivity.Model);\r\n                organizationParticipantExpression.id = BpmnModelHelper.GenerateElementId();\r\n                organizationParticipantExpression.actionScope = ActionScope.AddSignBehind;\r\n                organizationParticipantExpression.organizationLevel = scope.scope.organizationLevel as any;\r\n                organizationParticipantExpression.organizationId = scope.scope.organizationId;\r\n                organizationParticipantExpression.organizationName = scope.scope.organizationName;\r\n                organizationParticipantExpression.includeChildren = scope.scope.includeChildren;\r\n                organizationParticipantExpression.tag = scope.scope.tag;\r\n                userActivity.dynamicParticipants.push(organizationParticipantExpression);\r\n            }else {\r\n                const performerInfo: ParticipantInfo = scope.scope.participantInfo as any;\r\n                if (performerInfo.isAllScope && performerInfo.potentialOwnerList && performerInfo.potentialOwnerList.length > 0) {\r\n                    for (const potentialOwner of performerInfo.potentialOwnerList) {\r\n                        switch (potentialOwner.type ? potentialOwner.type : ((potentialOwner instanceof ParticipantExpression) ? potentialOwner.ClrTypeID : null)) {\r\n                            case UserParticipantExpression.Clr_Type_ID:\r\n                                this.addUserParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as UserParticipant, 'potentialOwner', ActionScope.AddSignBehind);\r\n                                break;\r\n                            case VariableParticipantExpression.Clr_Type_ID:\r\n                                this.addVariableParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as VariablePerformer, 'potentialOwner', ActionScope.AddSignBehind)\r\n                                break;\r\n                            case PositionParticipantExpression.Clr_Type_ID:\r\n                                this.addPositionParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as PositionParticipant, 'potentialOwner', ActionScope.AddSignBehind);\r\n                                break;\r\n                            case ComponentParticipantExpression.Clr_Type_ID:\r\n                                this.addComponentParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ComponentParticipant, 'potentialOwner', ActionScope.AddSignBehind);\r\n                                break;\r\n                            case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                                this.addReportingLineParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ReportingLineParticipant, 'potentialOwner', ActionScope.AddSignBehind);\r\n                                break;\r\n                            case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                                this.addActivityExecutorParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ActivityExecutorParticipant, 'potentialOwner', ActionScope.AddSignBehind);\r\n                                break;\r\n                            case MatrixParticipantExpression.Clr_Type_ID:\r\n                                this.addMatrixParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as MatrixParticipant, 'potentialOwner', ActionScope.AddSignBehind);\r\n                                break;\r\n                            case OrganizationParticipantExpression.Clr_Type_ID:\r\n                                this.addOrganizationParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as OrganizationParticipant, 'potentialOwner' , ActionScope.AddSignBehind);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateNotifySet(userActivity: UserActivity, obj: any) {\r\n        const scope = obj.propertyValue as ActionOrganizationScopeDesign;\r\n\r\n        userActivity.dynamicParticipants = userActivity.dynamicParticipants.filter(p => (p as OrganizationParticipantExpression).actionScope !== ActionScope.Notify);\r\n        userActivity.NotifyAble = scope.enable;\r\n\r\n        if (scope.scope) {\r\n            if(scope.scope.organizationLevel) {\r\n                const organizationParticipantExpression = new OrganizationParticipantExpression(userActivity.Model);\r\n                organizationParticipantExpression.id = BpmnModelHelper.GenerateElementId();\r\n                organizationParticipantExpression.actionScope = ActionScope.Notify;\r\n                organizationParticipantExpression.organizationLevel = scope.scope.organizationLevel as any;\r\n                organizationParticipantExpression.organizationId = scope.scope.organizationId;\r\n                organizationParticipantExpression.organizationName = scope.scope.organizationName;\r\n                organizationParticipantExpression.includeChildren = scope.scope.includeChildren;\r\n                organizationParticipantExpression.tag = scope.scope.tag;\r\n                userActivity.dynamicParticipants.push(organizationParticipantExpression);\r\n            }else {\r\n                const performerInfo: ParticipantInfo = scope.scope.participantInfo as any;\r\n                if (performerInfo.isAllScope && performerInfo.potentialOwnerList && performerInfo.potentialOwnerList.length > 0) {\r\n                    for (const potentialOwner of performerInfo.potentialOwnerList) {\r\n                        switch (potentialOwner.type ? potentialOwner.type : ((potentialOwner instanceof ParticipantExpression) ? potentialOwner.ClrTypeID : null)) {\r\n                            case UserParticipantExpression.Clr_Type_ID:\r\n                                this.addUserParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as UserParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case VariableParticipantExpression.Clr_Type_ID:\r\n                                this.addVariableParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as VariablePerformer, 'potentialOwner', ActionScope.Notify)\r\n                                break;\r\n                            case PositionParticipantExpression.Clr_Type_ID:\r\n                                this.addPositionParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as PositionParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case ComponentParticipantExpression.Clr_Type_ID:\r\n                                this.addComponentParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ComponentParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                                this.addReportingLineParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ReportingLineParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                                this.addActivityExecutorParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ActivityExecutorParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case MatrixParticipantExpression.Clr_Type_ID:\r\n                                this.addMatrixParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as MatrixParticipant, 'potentialOwner', ActionScope.Notify);\r\n                                break;\r\n                            case OrganizationParticipantExpression.Clr_Type_ID:\r\n                                this.addOrganizationParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as OrganizationParticipant, 'potentialOwner' , ActionScope.Notify);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            } \r\n        }\r\n    }\r\n    updateTransferScope(userActivity: UserActivity, obj: any) {\r\n        const scope = obj.propertyValue as ActionOrganizationScopeDesign;\r\n\r\n        userActivity.dynamicParticipants = userActivity.dynamicParticipants.filter(p => (p as OrganizationParticipantExpression).actionScope !== ActionScope.Transfer);\r\n        userActivity.transferAble = scope.enable;\r\n\r\n        if (scope.scope) {\r\n            if(scope.scope.organizationLevel) {\r\n                const organizationParticipantExpression = new OrganizationParticipantExpression(userActivity.Model);\r\n                organizationParticipantExpression.id = BpmnModelHelper.GenerateElementId();\r\n                organizationParticipantExpression.actionScope = ActionScope.Transfer;\r\n                organizationParticipantExpression.organizationLevel = scope.scope.organizationLevel as any;\r\n                organizationParticipantExpression.organizationId = scope.scope.organizationId;\r\n                organizationParticipantExpression.organizationName = scope.scope.organizationName;\r\n                organizationParticipantExpression.includeChildren = scope.scope.includeChildren;\r\n                organizationParticipantExpression.tag = scope.scope.tag;\r\n                userActivity.dynamicParticipants.push(organizationParticipantExpression);\r\n            }else {\r\n                const performerInfo: ParticipantInfo = scope.scope.participantInfo as any;\r\n                if (performerInfo.isAllScope && performerInfo.potentialOwnerList && performerInfo.potentialOwnerList.length > 0) {\r\n                    for (const potentialOwner of performerInfo.potentialOwnerList) {\r\n                        switch (potentialOwner.type ? potentialOwner.type : ((potentialOwner instanceof ParticipantExpression) ? potentialOwner.ClrTypeID : null)) {\r\n                            case UserParticipantExpression.Clr_Type_ID:\r\n                                this.addUserParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as UserParticipant, 'potentialOwner', ActionScope.Transfer);\r\n                                break;\r\n                            case VariableParticipantExpression.Clr_Type_ID:\r\n                                this.addVariableParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as VariablePerformer, 'potentialOwner', ActionScope.Transfer)\r\n                                break;\r\n                            case PositionParticipantExpression.Clr_Type_ID:\r\n                                this.addPositionParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as PositionParticipant, 'potentialOwner', ActionScope.Transfer);\r\n                                break;\r\n                            case ComponentParticipantExpression.Clr_Type_ID:\r\n                                this.addComponentParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ComponentParticipant, 'potentialOwner', ActionScope.Transfer);\r\n                                break;\r\n                            case ReportingLineParticipantExpression.Clr_Type_ID:\r\n                                this.addReportingLineParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ReportingLineParticipant, 'potentialOwner', ActionScope.Transfer);\r\n                                break;\r\n                            case ActivityExecutorParticipantExpression.Clr_Type_ID:\r\n                                this.addActivityExecutorParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as ActivityExecutorParticipant, 'potentialOwner', ActionScope.Transfer);\r\n                                break;\r\n                            case MatrixParticipantExpression.Clr_Type_ID:\r\n                                this.addMatrixParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as MatrixParticipant, 'potentialOwner', ActionScope.Transfer);\r\n                                break;\r\n                            case OrganizationParticipantExpression.Clr_Type_ID:\r\n                                this.addOrganizationParticipant(userActivity, potentialOwner instanceof ParticipantExpression ? potentialOwner : potentialOwner as OrganizationParticipant, 'potentialOwner' , ActionScope.Transfer);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateTimeLimitControl(userActivity: UserActivity, obj: any) {\r\n        const timeLimitInfo = obj.propertyValue as TimeLimitControlInfo;\r\n        userActivity.timeLimitControl = null;\r\n        if (timeLimitInfo) {\r\n            const control = new TimeLimitControl(userActivity.Model);\r\n            control.enable = timeLimitInfo.enable;\r\n            control.tag = timeLimitInfo.tag;\r\n            control.dueTime = timeLimitInfo.dueTime;\r\n            control.timeUnit = timeLimitInfo.timeUnit;\r\n            control.expireOperations = new Array<SendMessageExpireOperation>();\r\n            if (timeLimitInfo.expireOperations && timeLimitInfo.expireOperations.length > 0) {\r\n                for (const o of timeLimitInfo.expireOperations) {\r\n                    if (o.operationTypeName === 'SendMessageExpireOperation' || !o.operationTypeName) {\r\n                        const entity = o as SendMessageExpireOperation;\r\n                        const sendMessage = new SendMessageExpireOperation(userActivity.Model);\r\n                        sendMessage.id = BpmnModelHelper.GenerateElementId();\r\n                        sendMessage.durationType = entity.durationType as DurationType;\r\n                        sendMessage.timeDuration = entity.timeDuration;\r\n                        sendMessage.timeUnit = entity.timeUnit;\r\n                        sendMessage.message = entity.message;\r\n                        sendMessage.subject = entity.subject;\r\n                        sendMessage.sendType = entity.sendType;\r\n                        sendMessage.receiver = entity.receiver;\r\n                        sendMessage.cycleEnable = entity.cycleEnable;\r\n                        sendMessage.cycleTime = entity.cycleTime;\r\n                        sendMessage.cycleTimeUnit = entity.cycleTimeUnit;\r\n                        sendMessage.operationTypeName = entity.operationTypeName ? entity.operationTypeName : 'SendMessageExpireOperation';\r\n                        if (entity.smsMessageTemplate) {\r\n                            const smsMessageTemplate = new SmsMessageTemplate(userActivity.Model);\r\n                            smsMessageTemplate.code = entity.smsMessageTemplate.code;\r\n                            smsMessageTemplate.content = entity.smsMessageTemplate.content;\r\n                            smsMessageTemplate.smsMessageVariables = new Array();\r\n                            if (entity.smsMessageTemplate.smsMessageVariables && entity.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                                for (const v of entity.smsMessageTemplate.smsMessageVariables) {\r\n                                    const variable = new SmsMessageVariable(userActivity.Model);\r\n                                    variable.code = v.code;\r\n                                    variable.value = v.value;\r\n                                    variable.tag = v.tag;\r\n                                    smsMessageTemplate.smsMessageVariables.push(variable);\r\n                                }\r\n                            }\r\n                            sendMessage.smsMessageTemplate = smsMessageTemplate;\r\n                        }\r\n                        control.expireOperations.push(sendMessage);\r\n                    } else if (o.operationTypeName === 'AutoHandleExpireOperation') {\r\n                        const operation = o as AutoHandleExpireOperation;\r\n                        const autoHandle = new AutoHandleExpireOperation(userActivity.Model);\r\n                        autoHandle.id = o.id;\r\n                        autoHandle.durationType = operation.durationType;\r\n                        autoHandle.timeDuration = operation.timeDuration;\r\n                        autoHandle.timeUnit = operation.timeUnit;\r\n                        autoHandle.operationTypeName = operation.operationTypeName ? operation.operationTypeName : 'AutoHandleExpireOperation';\r\n                        autoHandle.autoHandleType = operation.autoHandleType;\r\n                        autoHandle.message = operation.message;\r\n                        control.expireOperations.push(autoHandle);\r\n                    }\r\n                }\r\n            }\r\n            userActivity.timeLimitControl = control;\r\n        }\r\n    }\r\n\r\n    updateAnonymousSet(userActivity: UserActivity, obj: any) {\r\n        const anonymousSet = obj.propertyValue;\r\n        if (anonymousSet) {\r\n            userActivity.anonymous = anonymousSet.isAnonymity;\r\n            userActivity.anonymousText = anonymousSet.anonymous;\r\n        }\r\n    }\r\n\r\n    updateCustomizeActions(userActivity: UserActivity, obj: any) {\r\n        let actions = obj.propertyValue as any[];\r\n        userActivity.customizeActions = new Array<CustomizeAction>();\r\n        if (actions && actions.length > 0) {\r\n            for (let a of actions) {\r\n                let action = new CustomizeAction(userActivity.Model);\r\n                action.id = BpmnModelHelper.GenerateElementId();\r\n                action.code = a.code;\r\n                action.name = a.name;\r\n                action.terminalType = a.terminalType;\r\n                action.actualParameters = [];\r\n                if (a.actualParameters && a.actualParameters.length > 0) {\r\n                    for (let p of a.actualParameters) {\r\n                        let parameter = new ActualParameter(userActivity.Model, p.Name, p.Value, p.ValueText, p.Tag || 'expression');\r\n                        action.actualParameters.push(parameter);\r\n                    }\r\n                }\r\n\r\n                userActivity.customizeActions.push(action);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    updateVariableSettings(userActivity: UserActivity, obj: any) {\r\n        const bpmnModel = userActivity.Model;\r\n        const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n        if (userActivity.variableSettings && userActivity.variableSettings.length > 0) {\r\n            for (const v of userActivity.variableSettings) {\r\n                if (v.tag === 'component') {\r\n                    const i = extendElements.findIndex(e => (e instanceof Component && e.Id === v.value));\r\n                    extendElements.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        userActivity.variableSettings = new Array();\r\n\r\n        const variables = obj.propertyValue as any[];\r\n        if (variables && variables.length > 0) {\r\n            for (const v of variables) {\r\n                const variableSetting = new VariableSetting(bpmnModel);\r\n                variableSetting.variableCode = v.variableCode;\r\n                variableSetting.variableName = v.variableName;\r\n                variableSetting.tag = v.tag;\r\n                variableSetting.executionTime = v.executionTime;\r\n                variableSetting.value = v.value;\r\n                variableSetting.valueText = v.valueText;\r\n\r\n                userActivity.variableSettings.push(variableSetting);\r\n                if (variableSetting.tag === 'component') {\r\n                    const c = v.component;\r\n                    if (c) {\r\n                        let cpt = new Component(bpmnModel);\r\n                        cpt.MetadataId = c.MetadataId;\r\n                        cpt.MethodCode = c.MethodCode;\r\n                        cpt.Id = c.Id;\r\n                        cpt.Name = c.Name;\r\n                        cpt.ActualParameters = new Array();\r\n                        if (c.ActualParameters && c.ActualParameters.length > 0) {\r\n                            for (let a of c.ActualParameters) {\r\n                                let parameter = new ActualParameter(bpmnModel, a.Name, a.Value);\r\n                                parameter.Tag = a.Tag;\r\n                                cpt.ActualParameters.push(parameter);\r\n                            }\r\n                        }\r\n\r\n                        extendElements.push(cpt);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateImageSettings(userActivity: UserActivity, obj: any) {\r\n        let Settings = obj.propertyValue as any;\r\n        if (userActivity.imageSettings) {\r\n            userActivity.imageSettings = new ImageSettings(userActivity.Model);\r\n        }\r\n        if (Settings && Settings.imageOperation) {\r\n            const imageSettings = new ImageSettings(userActivity.Model);\r\n            imageSettings.imageOperation = Settings.imageOperation;\r\n            userActivity.imageSettings = imageSettings;\r\n        }\r\n    }\r\n\r\n    updateCheckConditions(userActivity: UserActivity, obj: any, isOperation = false) {\r\n        const checkConditions = obj.propertyValue as Array<any>;\r\n        userActivity.checkConditions = new Array();\r\n        for (const c of checkConditions) {\r\n            if (c.value) {\r\n                const condition = new CheckCondition(userActivity.Model);\r\n                condition.value = c.value;\r\n                condition.checkTime = c.checkTime;\r\n                condition.errorTips = new Map<string, string>();\r\n                if (c.errorTips) {\r\n                    for (let key in c.errorTips) {\r\n                        condition.errorTips.set(key, c.errorTips[key]);\r\n                    }\r\n                }\r\n                userActivity.checkConditions.push(condition);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateOtherAssignNodes(userActivity: UserActivity, obj: any) {\r\n        const data: boolean = obj.propertyValue;\r\n        if (data) {\r\n            // const otherAssignNodes = new OtherAssignNodes(userActivity.Model);\r\n            // otherAssignNodes.otherAssignActivities = new Array();\r\n            // userActivity.otherAssignNodes = otherAssignNodes;\r\n            userActivity.otherAssignNodes = new OtherAssignNodes(userActivity.Model);\r\n        } else {\r\n            userActivity.otherAssignNodes = null;\r\n        }\r\n    }\r\n\r\n    updateOtherAssignActivities(userActivity: UserActivity, obj: any) {\r\n        const data:any[] = obj.propertyValue;\r\n        if (data && data.length > 0) {\r\n            if (typeof data[0] === \"string\") {\r\n                userActivity.otherAssignNodes.otherAssignActivityNodeInfos = new Array<OtherAssignActivityNodeInfo>();\r\n                data.forEach(d => {\r\n                    let other = new OtherAssignActivityNodeInfo(userActivity.Model);\r\n                    other.activityDefinitionId = d;\r\n                    other.required = false;\r\n                    other.condition = new Condition(userActivity.Model);\r\n                    userActivity.otherAssignNodes.otherAssignActivityNodeInfos.push(other);\r\n                });\r\n            } else {\r\n                userActivity.otherAssignNodes.otherAssignActivityNodeInfos = new Array<OtherAssignActivityNodeInfo>();\r\n                data.forEach(d => {\r\n                    let other = new OtherAssignActivityNodeInfo(userActivity.Model);\r\n                    other.activityDefinitionId = d.activityDefinitionId;\r\n                    other.required = d.required;\r\n                    other.condition = new Condition(userActivity.Model);\r\n                    other.condition.Value = d.condition.Value;                    \r\n                    userActivity.otherAssignNodes.otherAssignActivityNodeInfos.push(other);\r\n                });\r\n            }\r\n            // userActivity.otherAssignNodes.otherAssignActivities = [...data];\r\n        } else {\r\n            userActivity.otherAssignNodes.otherAssignActivityNodeInfos = new Array();\r\n        }\r\n    }\r\n\r\n    updateMessageNotices(userActivity: UserActivity, obj: any) {\r\n        let notices = obj.propertyValue as any[];\r\n        userActivity.messageNotices = new Array();\r\n        if (notices && notices.length > 0) {\r\n            for (let n of notices) {\r\n                const messageNotice = new MessageNotice(userActivity.Model);\r\n                messageNotice.sendType = n.sendType;\r\n                messageNotice.sendTime = n.sendTime;\r\n                messageNotice.subject = n.subject;\r\n                messageNotice.content = n.content;\r\n                n.receivers = n.receivers.filter((r: any) => r.type);\r\n                if (n.receivers && n.receivers.length > 0) {\r\n                    const receivers = n.receivers.filter((r: any) => r.type === 'userParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant !== 'activityExecutorParticipant'));\r\n                    const participants = n.receivers.filter((r: any) => r.type === 'variableParticipant' || r.type === 'positionParticipant'\r\n                        || (r.type === 'processParticipant' && r.processParticipant === 'activityExecutorParticipant'));\r\n                    if (receivers && receivers.length > 0) {\r\n                        let receiver = '';\r\n                        let receiverName = '';\r\n                        for (const r of receivers) {\r\n                            if (r.type === 'processParticipant') {\r\n                                receiver += (r.processParticipant + ',');\r\n                                if (r.processParticipant === 'procInstCreator') {\r\n                                    receiverName += '流程发起人,'\r\n                                } else if (r.processParticipant === 'workItemParticipant') {\r\n                                    receiverName += '任务接收人,'\r\n                                }\r\n                            } else if (r.type === 'userParticipant') {\r\n                                receiver += (r.userIds + ',');\r\n                                receiverName += (r.userNames + ',');\r\n                            }\r\n                        }\r\n                        if (receiver) {\r\n                            receiver = receiver.substring(0, receiver.length - 1);\r\n                        }\r\n                        if (receiverName) {\r\n                            receiverName = receiverName.substring(0, receiverName.length - 1);\r\n                        }\r\n                        messageNotice.receiver = receiver;\r\n                        messageNotice.receiverText = receiverName;\r\n                    }\r\n                    if (participants && participants.length > 0) {\r\n                        const receiverExpressions = new Array<ParticipantExpression>();\r\n                        for (const p of participants) {\r\n                            if (p.type === 'processParticipant') {\r\n                                let activityExecutor = new ActivityExecutorParticipantExpression(userActivity.Model);\r\n                                activityExecutor.id = BpmnModelHelper.GenerateElementId();\r\n                                activityExecutor.activityDefId = p.activityDefId;\r\n                                activityExecutor.activityDefName = p.activityDefName;\r\n                                receiverExpressions.push(activityExecutor);\r\n                            }\r\n                            if (p.type === 'variableParticipant') {\r\n                                let variableParticipant = new UserParticipantExpression(userActivity.Model, p.variableParticipant, p.variableName, p.orgType);\r\n                                variableParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                variableParticipant.Tag = 'expression';\r\n                                variableParticipant.OrgType = p.orgType;\r\n                                receiverExpressions.push(variableParticipant);\r\n                            }\r\n                            if (p.type === 'positionParticipant') {\r\n                                let posiParticipant = new PositionParticipantExpression(userActivity.Model, p.positionId, p.positionName);\r\n                                posiParticipant.id = BpmnModelHelper.GenerateElementId();\r\n                                posiParticipant.PositionType = p.positionType;\r\n                                if (p.positionType === '1') {\r\n                                    posiParticipant.OrgId = p.orgId;\r\n                                    posiParticipant.OrgType = p.orgType;\r\n                                }\r\n                                receiverExpressions.push(posiParticipant);\r\n                            }\r\n                        }\r\n                        messageNotice.receiverExpressions = receiverExpressions;\r\n                    }\r\n                }\r\n\r\n                if (n.smsMessageTemplate) {\r\n                    const smsMessageTemplate = new SmsMessageTemplate(userActivity.Model);\r\n                    smsMessageTemplate.code = n.smsMessageTemplate.code;\r\n                    smsMessageTemplate.content = n.smsMessageTemplate.content;\r\n                    smsMessageTemplate.smsMessageVariables = new Array();\r\n                    if (n.smsMessageTemplate.smsMessageVariables && n.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                        for (const v of n.smsMessageTemplate.smsMessageVariables) {\r\n                            const variable = new SmsMessageVariable(userActivity.Model);\r\n                            variable.code = v.code;\r\n                            variable.value = v.value;\r\n                            variable.tag = v.tag;\r\n                            smsMessageTemplate.smsMessageVariables.push(variable);\r\n                        }\r\n                    }\r\n                    messageNotice.smsMessageTemplate = smsMessageTemplate;\r\n                }\r\n\r\n                userActivity.messageNotices.push(messageNotice);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    updateApprovalPivotConfig(userActivity: UserActivity, obj: any) {\r\n        let config = obj.propertyValue;\r\n        const approvalPivotConfig = new ApprovalPivotConfig(userActivity.Model);\r\n        approvalPivotConfig.enable = config.enable;\r\n        approvalPivotConfig.expand = config.expand;\r\n        approvalPivotConfig.title = config.title;\r\n        approvalPivotConfig.approvalPivots = new Array();\r\n        if (config.approvalPivots && config.approvalPivots.length > 0) {\r\n            for (const a of config.approvalPivots) {\r\n                const approvalPivot = new ApprovalPivot(userActivity.Model);\r\n                approvalPivot.type = a.type;\r\n                approvalPivot.title = a.title;\r\n                approvalPivot.description = a.description;\r\n                if (a.condition) {\r\n                    const condition = new Condition(userActivity.Model);\r\n                    condition.Value = a.condition;\r\n                    approvalPivot.condition = condition;\r\n                }\r\n                approvalPivotConfig.approvalPivots.push(approvalPivot);\r\n            }\r\n        }\r\n        userActivity.approvalPivotConfig = approvalPivotConfig;\r\n    }\r\n\r\n    updateUrgeHandleRule(userActivity: UserActivity, obj: any) {\r\n        const rule = obj.propertyValue;\r\n        const urgeHandleRule = new UrgeHandleRule(userActivity.Model);\r\n        urgeHandleRule.urgeHandleAble = rule.urgeHandleAble;\r\n        urgeHandleRule.sendType = rule.sendType;\r\n        urgeHandleRule.earlyTime = rule.earlyTime;\r\n        urgeHandleRule.intervalTime = rule.intervalTime;\r\n        urgeHandleRule.urgeMessageSubject = rule.urgeMessageSubject;\r\n        urgeHandleRule.urgeMessageContent = rule.urgeMessageContent;\r\n        urgeHandleRule.addReminder = rule.addReminder;\r\n        urgeHandleRule.subjectEditable = rule.subjectEditable;\r\n        urgeHandleRule.contentEditable = rule.contentEditable;\r\n\r\n        if (rule.smsMessageTemplate) {\r\n            const smsMessageTemplate = new SmsMessageTemplate(userActivity.Model);\r\n            smsMessageTemplate.code = rule.smsMessageTemplate.code;\r\n            smsMessageTemplate.content = rule.smsMessageTemplate.content;\r\n            smsMessageTemplate.smsMessageVariables = new Array();\r\n            if (rule.smsMessageTemplate.smsMessageVariables && rule.smsMessageTemplate.smsMessageVariables.length > 0) {\r\n                for (const v of rule.smsMessageTemplate.smsMessageVariables) {\r\n                    const variable = new SmsMessageVariable(userActivity.Model);\r\n                    variable.code = v.code;\r\n                    variable.value = v.value;\r\n                    variable.tag = v.tag;\r\n                    smsMessageTemplate.smsMessageVariables.push(variable);\r\n                }\r\n            }\r\n            urgeHandleRule.smsMessageTemplate = smsMessageTemplate;\r\n        }\r\n\r\n        userActivity.urgeHandleRule = urgeHandleRule;\r\n    }\r\n\r\n    /**\r\n     * 删除节点或参与者时，对应删除HumanResourceRoles\r\n     * @param bpmnModel\r\n     * @param ids\r\n     */\r\n    removeHumanResourceRoles(ids: string[]) {\r\n        const bpmnModel = this.flowElement.Model;\r\n        if (ids && ids.length > 0) {\r\n            const userActivitys = bpmnModel.DefaultProcess.GetFlowElements();\r\n            let perfIds = '';\r\n            for (let key in userActivitys) {\r\n                if (userActivitys[key] instanceof UserActivity) {\r\n                    const userAct = userActivitys[key] as UserActivity;\r\n                    if (userAct.ParticipantSchemes && userAct.ParticipantSchemes.length > 0 && userAct.ParticipantSchemes[0].Performers) {\r\n                        perfIds += (userAct.ParticipantSchemes[0].Performers + ',');\r\n                    }\r\n                }\r\n            }\r\n            const removeIds = ids.filter(id => perfIds.indexOf(id) < 0);\r\n            removeIds.forEach(reId => {\r\n                bpmnModel.DefaultProcess.RemoveResourceRole(reId);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新审批活动扩展属性\r\n     * @param userActivity\r\n     * @param obj\r\n     */\r\n    resetExtendProperty(userActivity: UserActivity, obj: any) {\r\n        if (userActivity) {\r\n            let attributes = obj.propertyValue as any;\r\n            if (!userActivity.extendProperties) {\r\n                userActivity.extendProperties = new Array<ExtendProperty>();\r\n            }\r\n            for (const o of obj.propertyValue) {\r\n                const index = userActivity.extendProperties.findIndex(e => e.key === o.code);\r\n                if (index > -1) {\r\n                    userActivity.extendProperties.splice(index, 1);\r\n                }\r\n            }\r\n            if (attributes) {\r\n                attributes.forEach((a: any) => {\r\n                    let item = new ExtendProperty(userActivity.Model);\r\n                    item.key = a.code;\r\n                    item.value = a.value;\r\n                    userActivity.extendProperties.push(item);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS } from \"@edp-pmf/mxgraph-ts\";\r\nimport { OperationActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { UserActivityCell } from \"./UserActivityCell\";\r\nimport { BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { WfConstants } from \"../WfConstants\";\r\n\r\n/**\r\n * 人工操作活动节点\r\n */\r\nexport class OperationActivityCell extends UserActivityCell {\r\n    clrTypeId: string = OperationActivityCell.CLR_TYPE_ID;\r\n    name: string = \"人工操作\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"人工操作\",\r\n      \"zh-CHT\": \"人工操作\",\r\n      \"en\": \"Operation\",\r\n  };\r\n    static CLR_TYPE_ID: string = OperationActivity.Clr_Type_ID;\r\n    flowElement: OperationActivity;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/bizActivity.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/bizActivity_select.svg\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: OperationActivity) {\r\n        const flowNode = super.createFlowElement(flowElt) as OperationActivity;\r\n        return flowNode;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        return this.getFarrisPropConfigByIsOperation(true);\r\n    }\r\n\r\n    updateProps(obj: any): void {\r\n        this.updatePropsByIsOperation(obj, true);\r\n    }\r\n}\r\n","import { NodeCell, ElementPropertyConfig, FarrisPropConfigWithData } from \"@edp-pmf/grapheditor\";\r\nimport { MxGraphNS, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { StartActivity, ExtendProperty, JumpScope, ExecuteForm, ActualParameter, OtherAssignNodes, OtherAssignActivityNodeInfo, Condition } from \"@gsp-wf/wf-process-model\";\r\nimport { WfEditorUi } from \"../WfEditorUi\";\r\nimport { WfConstants } from \"../WfConstants\";\r\nimport { StartActivityPropertyKeys } from \"./property-keys/StartActivityPropertyKeys\";\r\nimport { PropertyHelper } from \"./PropertyHelper\";\r\n\r\n/**\r\n * 开始活动节点\r\n */\r\nexport class StartActivityCell extends NodeCell {\r\n    clrTypeId: string = StartActivityCell.CLR_TYPE_ID;\r\n    name: string = \"开始\";\r\n    nameLanguage: { [lang: string]: string; } = {\r\n      \"zh-CHS\": \"开始\",\r\n      \"zh-CHT\": \"開始\",\r\n      \"en\": \"Start\",\r\n  };\r\n    static CLR_TYPE_ID: string = StartActivity.Clr_Type_ID;\r\n    flowElement: StartActivity;\r\n    editorUi: WfEditorUi;\r\n\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/start.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/start_select.svg\",\r\n    };\r\n\r\n    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string) {\r\n        super(value, geometry, style);\r\n    }\r\n\r\n    createFlowElement(flowElt?: StartActivity) {\r\n        const flowNode = super.createFlowElement(flowElt) as StartActivity;\r\n        const editorUi = this.editorUi;\r\n        flowNode.Id = \"startActivity\" + BpmnModelHelper.GenerateElementId();\r\n        // 创建而非复制时执行\r\n        if (flowElt == null) {\r\n            // 设置默认表单\r\n            if (editorUi && editorUi.formFormats) {\r\n                const formFormats = editorUi.formFormats;\r\n                const startActivityForms = new Array();\r\n                const pcForm = formFormats.filter(f => f.terminal === 'PC' && f.status === 1)[0];\r\n                if (pcForm) {\r\n                    startActivityForms.push(pcForm);\r\n                }\r\n                const mobileForm = formFormats.filter(f => f.terminal === 'Mobile' && f.status === 1)[0];\r\n                if (mobileForm) {\r\n                    startActivityForms.push(mobileForm);\r\n                }\r\n\r\n                if (startActivityForms && startActivityForms.length > 0) {\r\n                    flowNode.setDefaultForms(startActivityForms);\r\n                }\r\n            }\r\n        }\r\n\r\n        return flowNode;\r\n    }\r\n\r\n    getFarrisPropConfig(): FarrisPropConfigWithData {\r\n        const editorUi = this.editorUi;\r\n        const act = this.flowElement as StartActivity;\r\n        let extendList = [];\r\n        if (editorUi.procExtProps && editorUi.procExtProps.length > 0) {\r\n            extendList = JSON.parse(JSON.stringify(editorUi.procExtProps)).sort((a, b) => {\r\n                return a.sortOrder - b.sortOrder;\r\n            });\r\n        }\r\n        extendList = extendList.sort((a, b) => {\r\n            return a.sortOrder - b.sortOrder;\r\n        })\r\n\r\n        let PropertyConfig: ElementPropertyConfig = new ElementPropertyConfig();\r\n        let propertyData: any = new Object();\r\n        PropertyConfig.categoryId = 'general';\r\n        PropertyConfig.categoryName = mxResources.get('basicInformation');\r\n        PropertyConfig.tabId = 'basic';\r\n        PropertyConfig.tabName = mxResources.get('basicAttributes');\r\n        PropertyConfig.properties = [\r\n            { propertyID: StartActivityPropertyKeys.Name, propertyName: mxResources.get('name'), propertyType: 'string', visible: !this.editorUi.multiLangEnabled },\r\n            { propertyID: StartActivityPropertyKeys.NameLanguage, propertyName: mxResources.get('nameLanguage'), propertyType: 'multiLanguage', visible: this.editorUi.multiLangEnabled },\r\n            { propertyID: StartActivityPropertyKeys.Id, propertyName: mxResources.get('id'), propertyType: 'string', readonly: true }\r\n        ];\r\n\r\n        let formDef = new ElementPropertyConfig();\r\n        formDef.categoryId = 'formDef';\r\n        formDef.categoryName = mxResources.get('formDef');\r\n        formDef.tabId = 'basic';\r\n        formDef.tabName = mxResources.get('basicAttributes');\r\n        formDef.properties = [\r\n            { propertyID: StartActivityPropertyKeys.wf_ExecuteForms_PC, propertyName: mxResources.get('pcForm'), propertyType: 'modal' },\r\n            { propertyID: StartActivityPropertyKeys.wf_ExecuteForms_Mobile, propertyName: mxResources.get('webForm'), propertyType: 'modal' },\r\n        ];\r\n\r\n        let ActivityConfig: ElementPropertyConfig = new ElementPropertyConfig();\r\n        ActivityConfig.categoryId = 'activityConfig';\r\n        ActivityConfig.categoryName = mxResources.get('activityProperty');\r\n        ActivityConfig.tabId = 'basic';\r\n        ActivityConfig.tabName = mxResources.get('basicAttributes');\r\n        ActivityConfig.properties = [\r\n            // { propertyID: StartActivityPropertyKeys.ExecuteForms, propertyName: mxResources.get('formDef'), propertyType: 'modal' },\r\n            { propertyID: 'sendBackedTask', propertyName: mxResources.get('sendBackedTask'), propertyType: 'select' }\r\n        ];\r\n\r\n        if (act.selectTargetAble) {\r\n            ActivityConfig.properties = ActivityConfig.properties.concat([\r\n                { propertyID: StartActivityPropertyKeys.SelectTargetAble, propertyName: mxResources.get('selectTargetAble'), propertyType: 'select' },\r\n                { propertyID: StartActivityPropertyKeys.JumpScope, propertyName: mxResources.get('jumpScope'), propertyType: 'modal' }]);\r\n            propertyData.SelectTargetAble = act.selectTargetAble || false;\r\n            propertyData.JumpScope = act.jumpScope;\r\n        } else {\r\n            ActivityConfig.properties = ActivityConfig.properties.concat([\r\n                { propertyID: StartActivityPropertyKeys.SelectTargetAble, propertyName: mxResources.get('selectTargetAble'), propertyType: 'select' }]);\r\n            propertyData.SelectTargetAble = act.selectTargetAble || false;\r\n        }\r\n\r\n        if (act.otherAssignNodes) {\r\n            ActivityConfig.properties = ActivityConfig.properties.concat([\r\n                { propertyID: StartActivityPropertyKeys.otherAssignNodes, propertyName: mxResources.get('otherAssignNodes'), propertyType: 'select' },\r\n                // { propertyID: StartActivityPropertyKeys.otherAssignActivities, propertyName: mxResources.get('otherAssignActivities'), propertyType: 'modal' }\r\n                { propertyID: StartActivityPropertyKeys.otherAssignActivityNodeInfos, propertyName: mxResources.get('otherAssignActivityNodeInfos'), propertyType: 'modal' }\r\n            ]);\r\n            propertyData[StartActivityPropertyKeys.otherAssignNodes] = true;\r\n            // propertyData[StartActivityPropertyKeys.otherAssignActivities] = act.otherAssignNodes.otherAssignActivities;\r\n            propertyData[StartActivityPropertyKeys.otherAssignActivityNodeInfos] = act.otherAssignNodes.otherAssignActivities || act.otherAssignNodes.otherAssignActivityNodeInfos;\r\n            if(act.otherAssignNodes.otherAssignActivities){\r\n                act.otherAssignNodes.otherAssignActivities = null;\r\n            }\r\n\r\n        } else {\r\n            ActivityConfig.properties = ActivityConfig.properties.concat([\r\n                { propertyID: StartActivityPropertyKeys.otherAssignNodes, propertyName: mxResources.get('otherAssignNodes'), propertyType: 'select' }\r\n            ]);\r\n            propertyData[StartActivityPropertyKeys.otherAssignNodes] = false;\r\n        }\r\n\r\n        const groupList = new Array();\r\n        for (const extend of extendList) {\r\n            if (!extend.parentId) {\r\n                const group = { parent: extend, childs: new Array() };\r\n                for (const e of extendList) {\r\n                    if (e.parentId === extend.id) {\r\n                        group.childs.push(e);\r\n                    }\r\n                }\r\n                groupList.push(group)\r\n            }\r\n        }\r\n        // 没有扩展属性值的时候不显示扩展属性一栏\r\n        if (groupList && groupList.length > 0) {\r\n            let ExtendPropertyConfig: ElementPropertyConfig = new ElementPropertyConfig();\r\n            ExtendPropertyConfig.categoryId = 'extendPropertyConfig';\r\n            ExtendPropertyConfig.categoryName = mxResources.get('extendPropertyConfig');\r\n            ExtendPropertyConfig.tabId = 'advanced';\r\n            ExtendPropertyConfig.tabName = mxResources.get('advancedAttributes');\r\n            ExtendPropertyConfig.properties = new Array();\r\n            for (const g of groupList) {\r\n                ExtendPropertyConfig.properties.push(\r\n                    { propertyID: g.parent.id, propertyName: g.parent.propertyTitle, propertyType: 'modal' });\r\n                // 取回模型上的value值给到扩展属性组件里\r\n                if (act.extendProperties && act.extendProperties.length > 0) {\r\n                    g.childs.sort((a, b) => {\r\n                        return a.sortOrder - b.sortOrder;\r\n                    }).forEach((d: any) => {\r\n                        act.extendProperties.forEach(e => {\r\n                            if (e.key == d.code) {\r\n                                d.value = e.value;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                propertyData[g.parent.id] = g.childs;\r\n            }\r\n            // todo：与else分支代码重复，可提取至if语句外，本次修改仅针对名称多语，故暂不修改\r\n            propertyData[StartActivityPropertyKeys.Id] = act.Id;\r\n            propertyData[StartActivityPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n            propertyData[StartActivityPropertyKeys.Name] = act.Name || mxResources.get('start');\r\n            propertyData[StartActivityPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n                \"zh-CHS\": act.Name,\r\n            };\r\n\r\n            propertyData[StartActivityPropertyKeys.sendBackedTask] = act.sendBackedTask;\r\n\r\n            propertyData[StartActivityPropertyKeys.wf_ExecuteForms_PC] =\r\n                act.ExecuteForms ? act.ExecuteForms.find(e => e.TerminalType === 'PC') : null;\r\n            propertyData[StartActivityPropertyKeys.wf_ExecuteForms_Mobile] =\r\n                act.ExecuteForms ? act.ExecuteForms.find(e => e.TerminalType === 'MOBILE') : null;\r\n            return {\r\n                propertyConfig: [PropertyConfig, formDef, ActivityConfig, ExtendPropertyConfig],\r\n                propertyData: propertyData\r\n            }\r\n        } else {\r\n            propertyData[StartActivityPropertyKeys.Id] = act.Id;\r\n            propertyData[StartActivityPropertyKeys.ClrTypeID] = act.ClrTypeID;\r\n            propertyData[StartActivityPropertyKeys.Name] = act.Name || mxResources.get('start');\r\n            propertyData[StartActivityPropertyKeys.NameLanguage] = act.NameLanguage || {\r\n                \"zh-CHS\": act.Name,\r\n            };\r\n\r\n            propertyData[StartActivityPropertyKeys.sendBackedTask] = act.sendBackedTask;\r\n\r\n            propertyData[StartActivityPropertyKeys.wf_ExecuteForms_PC] =\r\n                act.ExecuteForms ? act.ExecuteForms.find(e => e.TerminalType === 'PC') : null;\r\n            propertyData[StartActivityPropertyKeys.wf_ExecuteForms_Mobile] =\r\n                act.ExecuteForms ? act.ExecuteForms.find(e => e.TerminalType === 'MOBILE') : null;\r\n\r\n            return {\r\n                propertyConfig: [PropertyConfig, formDef, ActivityConfig],\r\n                propertyData: propertyData\r\n            }\r\n        }\r\n    }\r\n\r\n    updateProps(obj: any) {\r\n        const editorUi = this.editorUi;\r\n        const startActivity = this.flowElement;\r\n        const propertyId: string = obj.propertyID;\r\n        switch (propertyId) {\r\n            case StartActivityPropertyKeys.wf_ExecuteForms_PC:\r\n                this.updateStartActivityForm(startActivity, obj, 'PC');\r\n                if (obj.parameters && obj.parameters.length > 0) {\r\n                    PropertyHelper.updateFormalParameters(editorUi.graph.bpmnModel.DefaultProcess, obj.parameters);\r\n                }\r\n                break;\r\n            case StartActivityPropertyKeys.wf_ExecuteForms_Mobile:\r\n                this.updateStartActivityForm(startActivity, obj, 'MOBILE');\r\n                if (obj.parameters && obj.parameters.length > 0) {\r\n                    PropertyHelper.updateFormalParameters(editorUi.graph.bpmnModel.DefaultProcess, obj.parameters);\r\n                }\r\n                break;\r\n            case StartActivityPropertyKeys.SelectTargetAble:\r\n                this.resetSelectTargetAble(startActivity, obj);\r\n                break;\r\n            case StartActivityPropertyKeys.JumpScope:\r\n                this.resetJumpScope(startActivity, obj);\r\n                break;\r\n            case StartActivityPropertyKeys.otherAssignNodes:\r\n                this.updateOtherAssignNodes(startActivity, obj);\r\n                break;\r\n            case StartActivityPropertyKeys.otherAssignActivities:\r\n                this.updateOtherAssignActivities(startActivity, obj);\r\n                break;\r\n            case StartActivityPropertyKeys.otherAssignActivityNodeInfos:\r\n                this.updateOtherAssignActivities(startActivity, obj);\r\n                break;\r\n            default:\r\n                // 判断ResourceKeys是不是groupid,是就走resetExtendProperty\r\n                if (editorUi.procExtProps.findIndex(p => p.id === propertyId) > -1) {\r\n                    this.resetExtendProperty(startActivity, obj);\r\n                } else {\r\n                    super.updateProps(obj);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateStartActivityForm(start: StartActivity, obj: any, terminal: string) {\r\n        if (start) {\r\n            let form = obj.propertyValue as any;\r\n            if (!start.ExecuteForms) {\r\n                start.ExecuteForms = new Array<ExecuteForm>();\r\n            }\r\n            start.ExecuteForms = start.ExecuteForms.filter(e => e.TerminalType !== terminal);\r\n            if (form) {\r\n                let params = form.ActualParameters as any[];\r\n                let actParas = new Array<ActualParameter>();\r\n                if (params && params.length > 0) {\r\n                    for (let para of params) {\r\n                        let actPara = new ActualParameter(start.Model, para.Name, para.Value);\r\n                        if (para.Tag) {\r\n                            actPara.Tag = para.Tag;\r\n                        } else {\r\n                            if (para.Value) {\r\n                                if (para.Value.length >= 8 && para.Value.slice(0, 8) === `{\"expr\":`) {\r\n                                    actPara.Tag = 'expression';\r\n                                } else {\r\n                                    actPara.Tag = 'constant';\r\n                                }\r\n                            } else {\r\n                                actPara.Tag = 'variable';\r\n                            }\r\n\r\n                        }\r\n                        actParas.push(actPara);\r\n                    }\r\n                }\r\n                const id = BpmnModelHelper.GenerateElementId();\r\n                let item = new ExecuteForm(start.Model, id, form.Name, actParas);\r\n                item.ComponentId = form.ComponentId;\r\n                item.FormType = form.FormType;\r\n                item.formFormatId = form.formFormatId;\r\n                item.formatConfigId = form.formatConfigId;\r\n                item.TerminalType = form.TerminalType;\r\n                start.ExecuteForms.push(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新是否允许跳转属性\r\n     * @param startActivity\r\n     * @param obj\r\n     */\r\n    resetSelectTargetAble(startActivity: StartActivity, obj: any) {\r\n        const selectTargetAble = obj.propertyValue as boolean;\r\n        startActivity.selectTargetAble = selectTargetAble;\r\n        if (startActivity.selectTargetAble) {\r\n            startActivity.jumpScope = new JumpScope(startActivity.Model);\r\n        } else {\r\n            startActivity.jumpScope = null;\r\n        }\r\n    }\r\n\r\n    resetJumpScope(startActivity: StartActivity, obj: any) {\r\n        const data = obj.propertyValue;\r\n        if (data) {\r\n            let jumpScope = new JumpScope(startActivity.Model);\r\n            jumpScope.Category = data.Category;\r\n            jumpScope.DefaultType = data.DefaultType;\r\n            jumpScope.DefaultActivity = data.DefaultActivity;\r\n            jumpScope.DestinationActivities = data.DestinationActivities;\r\n            startActivity.jumpScope = jumpScope;\r\n        } else {\r\n            startActivity.jumpScope = null;\r\n        }\r\n    }\r\n\r\n    updateOtherAssignNodes(startActivity: StartActivity, obj: any) {\r\n        const data: boolean = obj.propertyValue;\r\n        if (data) {\r\n            // const otherAssignNodes = new OtherAssignNodes(startActivity.Model);\r\n            // otherAssignNodes.otherAssignActivities = new Array();\r\n            // startActivity.otherAssignNodes = otherAssignNodes;\r\n            startActivity.otherAssignNodes = new OtherAssignNodes(startActivity.Model);\r\n        } else {\r\n            startActivity.otherAssignNodes = null;\r\n        }\r\n    }\r\n\r\n    updateOtherAssignActivities(startActivity: StartActivity, obj: any) {\r\n        const data:any[] = obj.propertyValue;\r\n        if (data && data.length > 0) {\r\n            if (typeof data[0] === \"string\") {\r\n                startActivity.otherAssignNodes.otherAssignActivityNodeInfos = new Array<OtherAssignActivityNodeInfo>();\r\n                data.forEach(d => {\r\n                    let other = new OtherAssignActivityNodeInfo(startActivity.Model);\r\n                    other.activityDefinitionId = d;\r\n                    other.required = false;\r\n                    other.condition = new Condition(startActivity.Model);\r\n                    startActivity.otherAssignNodes.otherAssignActivityNodeInfos.push(other);\r\n                })\r\n            } else {\r\n                // startActivity.otherAssignNodes.otherAssignActivityNodeInfos = [...data];  \r\n                startActivity.otherAssignNodes.otherAssignActivityNodeInfos = new Array<OtherAssignActivityNodeInfo>();\r\n                data.forEach(d => {\r\n                    let other = new OtherAssignActivityNodeInfo(startActivity.Model);\r\n                    other.activityDefinitionId = d.activityDefinitionId;\r\n                    other.required = d.required;\r\n                    other.condition = new Condition(startActivity.Model);\r\n                    other.condition.Value = d.condition.Value;                    \r\n                    startActivity.otherAssignNodes.otherAssignActivityNodeInfos.push(other);\r\n                }); \r\n            }\r\n        } else {\r\n            startActivity.otherAssignNodes.otherAssignActivityNodeInfos = new Array();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新开始节点扩展属性\r\n     * @param startActivity\r\n     * @param obj\r\n     */\r\n    resetExtendProperty(startActivity: StartActivity, obj: any) {\r\n        if (startActivity) {\r\n            let attributes = obj.propertyValue as any;\r\n            if (!startActivity.extendProperties) {\r\n                startActivity.extendProperties = new Array<ExtendProperty>();\r\n            }\r\n            for (const o of obj.propertyValue) {\r\n                const index = startActivity.extendProperties.findIndex(e => e.key === o.code);\r\n                if (index > -1) {\r\n                    startActivity.extendProperties.splice(index, 1);\r\n                }\r\n            }\r\n            if (attributes) {\r\n                attributes.forEach((a: any) => {\r\n                    let item = new ExtendProperty(startActivity.Model);\r\n                    item.key = a.code;\r\n                    item.value = a.value;\r\n                    startActivity.extendProperties.push(item);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","export enum StartActivityPropertyKeys {\r\n    Id = \"Id\",\r\n    Name = \"Name\",\r\n    NameLanguage = \"NameLanguage\",\r\n    ClrTypeID = \"ClrTypeID\",\r\n    /**\r\n     * 是否允许选择目标节点\r\n     */\r\n    SelectTargetAble = 'SelectTargetAble',\r\n    /**\r\n     * 跳转范围\r\n     */\r\n    JumpScope = 'JumpScope',\r\n    ExecuteForms = 'ExecuteForms',\r\n    wf_ExecuteForms_PC = 'wf_ExecuteForms_PC',\r\n    wf_ExecuteForms_Mobile = 'wf_ExecuteForms_Mobile',\r\n    otherAssignNodes = 'otherAssignNodes',\r\n    otherAssignActivities = 'otherAssignActivities',\r\n    otherAssignActivityNodeInfos = 'OtherAssignActivityNodeInfos',\r\n    sendBackedTask = \"sendBackedTask\"\r\n}","import { ParallelGateway, BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { ParallelGatewayCell } from \"@edp-pmf/grapheditor\";\r\nimport { WfConstants } from \"../WfConstants\";\r\n\r\n/**\r\n * 并行事件节点，增加状态图片信息\r\n */\r\nexport class WfParallelGatewayCell extends ParallelGatewayCell {\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/ParallelGateway.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/ParallelGateway_select.svg\",\r\n    };\r\n\r\n    createFlowElement(flowElt?: ParallelGateway) {\r\n        const flowNode = super.createFlowElement(flowElt) as ParallelGateway;\r\n        flowNode.Id = \"ParallelGateway\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        return flowNode;\r\n    }\r\n}","import { EndEventCell } from \"@edp-pmf/grapheditor\";\r\nimport { BpmnModelHelper, EndEvent, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { WfConstants } from \"../WfConstants\";\r\n\r\n/**\r\n * 结束事件节点，增加状态图片信息\r\n */\r\nexport class WfEndEventCell extends EndEventCell {\r\n    imgUrls = {\r\n        [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/end.png\",\r\n        [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/end_select.svg\",\r\n    };\r\n\r\n    createFlowElement(flowElt?: EndEvent) {\r\n        const flowNode = super.createFlowElement(flowElt) as EndEvent;\r\n        flowNode.Id = \"EndEvent\" + BpmnModelHelper.GenerateElementId();\r\n\r\n        return flowNode;\r\n    }\r\n}","import { InclusiveGateway, BpmnModelHelper, FlowNodeState } from \"@edp-pmf/bpmn-model\";\r\nimport { InclusiveGatewayCell } from \"@edp-pmf/grapheditor\";\r\nimport { WfConstants } from \"../WfConstants\";\r\n\r\n/**\r\n * 排他网关节点，增加状态图片信息\r\n */\r\nexport class WfInclusiveGatewayCell extends InclusiveGatewayCell {\r\n  imgUrls = {\r\n    [FlowNodeState.Default]: WfConstants.IMAGE_PATH + \"/InclusiveGateway.png\",\r\n    [FlowNodeState.Selected]: WfConstants.IMAGE_PATH + \"/InclusiveGateway_select.png\",\r\n  };\r\n\r\n  createFlowElement(flowElt?: InclusiveGateway) {\r\n    const flowNode = super.createFlowElement(flowElt) as InclusiveGateway;\r\n    flowNode.Id = \"InclusiveGateway\" + BpmnModelHelper.GenerateElementId();\r\n\r\n    return flowNode;\r\n  }\r\n}\r\n","import { Component, ComponentFactoryResolver, ComponentRef, Inject, Injector, LOCALE_ID, OnInit, Optional, TemplateRef, ViewChild } from '@angular/core';\r\nimport { PickedResult } from '@farris/ui-lookup';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ActionScope, OrganizationPotentialOwner } from '../organization-potential-owner/actionOrganizationScope';\r\nimport { BackwardRuleComponent } from '../backward-rule/backward-rule.component';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { OrganizationPotentialOwnerComponent } from '../organization-potential-owner/organization-potential-owner.component';\r\nimport { ProcessDesignerViewModel } from '../../app/process-designer.viewmodel';\r\nimport { UserActivity } from '@gsp-wf/wf-process-model';\r\nimport { ParticipantInfo } from '../participant/participant.info';\r\n\r\n@Component({\r\n  selector: 'lib-batch-set-properties',\r\n  templateUrl: './batch-set-properties.component.html',\r\n  styleUrls: ['./batch-set-properties.component.css'],\r\n  providers: [\r\n    WfLocalePipe,\r\n  ]\r\n})\r\nexport class BatchSetPropertiesComponent implements OnInit {\r\n\r\n  groupIcon2 = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  submit = new Subject<string>();\r\n  cancel = new Subject<any>();\r\n  @ViewChild('footer') footer: TemplateRef<any>;\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  cols = [\r\n    { title: this.localePipe.transform('component.batchSet.name'), field: 'Name', width: 60, searchField: 'Name' },\r\n    { title: 'ID', field: 'Id', width: 90, searchField: 'Id' }];\r\n  activityModel: any;\r\n  useractivities = [];\r\n  useroperationnotifyactivities = [];\r\n  useroperationsubcatchactivities = [];\r\n  actis1 = [];\r\n  actis2 = [];\r\n  actis3 = [];\r\n  actis4 = [];\r\n  actis5= [];\r\n  addSignFrontActis = [];\r\n  addSignBehindActis = [];\r\n  transferActis = [];\r\n  notifyActis = [];\r\n  backWardRuleActis = [];\r\n  nullActis = [];\r\n  addSignFrontEnable = false;\r\n  addSignBehindEnable = false;\r\n  transferEnable = false;\r\n  notifyEnable = false;\r\n  backWardRuleEnable = false;\r\n  backWardRule = {};\r\n  addSignFrontScope = {};\r\n  addSignBehindScope = {};\r\n  transferScope = {};\r\n  notifyScope = {};\r\n  pageInfo = {\r\n    pageIndex: 1,\r\n    pageList: [10, 20, 30, 50],\r\n    pageSize: 20\r\n  };\r\n  total: number;\r\n  constructor(\r\n    public uistate: ProcessDesignerUIState,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private viewModel: ProcessDesignerViewModel,\r\n  ) {\r\n    // 过滤只有审批节点的\r\n    this.useractivities = this.uistate.userActList.filter(function(item) {\r\n      return item.ClrTypeID === UserActivity.Clr_Type_ID;\r\n  })\r\n    // 拼接审批+人工+知会\r\n    this.useroperationnotifyactivities = [...this.uistate.userActList, ...this.uistate.NotifyActKist];\r\n    // 拼接审批人工子流程信号捕获\r\n    this.useroperationsubcatchactivities = [...this.uistate.userActList, ...this.uistate.SubAndCatchActList];\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n  }\r\n\r\n  ngOnInit() {\r\n    const addSignFront = this.activityModel.dynamicParticipants.filter(function(participant) {\r\n      return participant.actionScope === \"AddSignFront\";\r\n    });\r\n    const addSignBehind = this.activityModel.dynamicParticipants.filter(function(participant) {\r\n      return participant.actionScope === \"AddSignBehind\";\r\n    });\r\n    const transfer = this.activityModel.dynamicParticipants.filter(function(participant) {\r\n      return participant.actionScope === \"Transfer\";\r\n    });\r\n    const notify = this.activityModel.dynamicParticipants.filter(function(participant) {\r\n      return participant.actionScope === \"Notify\";\r\n    });\r\n    if(!addSignFront[0] || addSignFront[0].organizationLevel) {  \r\n      this.addSignFrontScope = {\r\n        enable: this.activityModel.AddSignFrontAble,\r\n        action: \"AddSignFront\",\r\n        scope: addSignFront[0]\r\n      }\r\n    } else {\r\n      let scope = new OrganizationPotentialOwner();\r\n      let participant = new ParticipantInfo();\r\n      participant.potentialOwnerList = addSignFront;\r\n      participant.isAllScope = true;//反的\r\n      scope.participantInfo = participant;\r\n      this.addSignFrontScope = {\r\n        enable: this.activityModel.AddSignFrontAble,\r\n        action: \"AddSignFront\",\r\n        scope: scope\r\n      }\r\n    };\r\n    if(!addSignBehind[0] || addSignBehind[0].organizationLevel) {  \r\n      this.addSignBehindScope = {\r\n        enable: this.activityModel.AddSignBehindAble,\r\n        action: \"AddSignBehind\",\r\n        scope: addSignBehind[0]\r\n      }\r\n    } else {\r\n      let scope = new OrganizationPotentialOwner();\r\n      let participant = new ParticipantInfo();\r\n      participant.potentialOwnerList = addSignBehind;\r\n      participant.isAllScope = true;//反的\r\n      scope.participantInfo = participant;\r\n      this.addSignBehindScope = {\r\n        enable: this.activityModel.AddSignBehindAble,\r\n        action: \"AddSignBehind\",\r\n        scope: scope\r\n      };\r\n    }\r\n    if(!transfer[0] || transfer[0].organizationLevel) {  \r\n      this.transferScope = {\r\n        enable: this.activityModel.transferAble,\r\n        action: \"Transfer\",\r\n        scope: transfer[0]\r\n      };\r\n    } else {\r\n      let scope = new OrganizationPotentialOwner();\r\n      let participant = new ParticipantInfo();\r\n      participant.potentialOwnerList = transfer;\r\n      participant.isAllScope = true;//反的\r\n      scope.participantInfo = participant;\r\n      this.transferScope = {\r\n        enable: this.activityModel.transferAble,\r\n        action: \"Transfer\",\r\n        scope: scope\r\n      };\r\n    }\r\n    if(!notify[0] || notify[0].organizationLevel) {  \r\n      this.notifyScope = {\r\n        enable: this.activityModel.NotifyAble,\r\n        action: \"Notify\",\r\n        scope: notify[0]\r\n      };\r\n    } else {\r\n      let scope = new OrganizationPotentialOwner();\r\n      let participant = new ParticipantInfo();\r\n      participant.potentialOwnerList = notify;\r\n      participant.isAllScope = true;//反的\r\n      scope.participantInfo = participant;\r\n      this.notifyScope = {\r\n        enable: this.activityModel.NotifyAble,\r\n        action: \"Notify\",\r\n        scope: scope\r\n      };\r\n    }\r\n    this.backWardRule = this.activityModel.BackWardRule;\r\n  }\r\n\r\n  frontActisSelect = (rowData): Observable<PickedResult> => {\r\n    this.addSignFrontActis = rowData;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  behindActisSelect = (rowData): Observable<PickedResult> => {\r\n    this.addSignBehindActis = rowData;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  notifyActisSelect = (rowData): Observable<PickedResult> => {\r\n    this.notifyActis = rowData;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  transferActisSelect = (rowData): Observable<PickedResult> => {\r\n    this.transferActis = rowData;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  backWardRuleActisSelect = (rowData): Observable<PickedResult> => {\r\n    this.backWardRuleActis = rowData;\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  actisSelect = (rowData): Observable<PickedResult> => {\r\n    return of({\r\n      closeDialog: true\r\n    });\r\n  }\r\n\r\n  // addSignFrontConfig() {\r\n  //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);\r\n  //   const compRef = compFactory.create(this.injector);\r\n  //   compRef.instance.action = ActionScope.AddSignFront\r\n  //   const orgModalConfig = {\r\n  //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),\r\n  //     width: 517,\r\n  //     height: 382,\r\n  //     showButtons: true,\r\n  //     buttons: compRef.instance.modalFooter\r\n  //   };\r\n  //   const dialog = this.modalService.show(compRef, orgModalConfig);\r\n  //   compRef.instance.closeModal.subscribe($event => dialog.close());\r\n  //   compRef.instance.submitModal.subscribe((data: any) => {\r\n  //     this.addSignFrontScope = data.value;\r\n  //     this.frontPlaceholder = '（已设置）'\r\n  //     dialog.close();\r\n  //   });\r\n  // }\r\n\r\n  // addSignBehindConfig() {\r\n  //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);\r\n  //   const compRef = compFactory.create(this.injector);\r\n  //   compRef.instance.action = ActionScope.AddSignBehind\r\n  //   const orgModalConfig = {\r\n  //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),\r\n  //     width: 517,\r\n  //     height: 382,\r\n  //     showButtons: true,\r\n  //     buttons: compRef.instance.modalFooter\r\n  //   };\r\n  //   const dialog = this.modalService.show(compRef, orgModalConfig); compRef.instance.closeModal.subscribe($event => dialog.close());\r\n  //   compRef.instance.submitModal.subscribe((data: any) => {\r\n  //     this.addSignBehindScope = data.value;\r\n  //     this.behindPlaceholder = '（已设置）'\r\n  //     dialog.close();\r\n  //   });\r\n  // }\r\n\r\n  // transferConfig() {\r\n  //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);\r\n  //   const compRef = compFactory.create(this.injector);\r\n  //   compRef.instance.action = ActionScope.Transfer\r\n  //   const orgModalConfig = {\r\n  //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),\r\n  //     width: 517,\r\n  //     height: 382,\r\n  //     showButtons: true,\r\n  //     buttons: compRef.instance.modalFooter\r\n  //   };\r\n  //   const dialog = this.modalService.show(compRef, orgModalConfig); compRef.instance.closeModal.subscribe($event => dialog.close());\r\n  //   compRef.instance.submitModal.subscribe((data: any) => {\r\n  //     this.transferScope = data.value;\r\n  //     this.transferPlaceholder = '（已设置）'\r\n  //     dialog.close();\r\n  //   });\r\n  // }\r\n\r\n  // notifyConfig() {\r\n  //   const compFactory = this.resolver.resolveComponentFactory(OrganizationPotentialOwnerComponent);\r\n  //   const compRef = compFactory.create(this.injector);\r\n  //   compRef.instance.action = ActionScope.Notify\r\n  //   const orgModalConfig = {\r\n  //     title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),\r\n  //     width: 517,\r\n  //     height: 382,\r\n  //     showButtons: true,\r\n  //     buttons: compRef.instance.modalFooter\r\n  //   };\r\n  //   const dialog = this.modalService.show(compRef, orgModalConfig);\r\n  //   compRef.instance.closeModal.subscribe($event => dialog.close());\r\n  //   compRef.instance.submitModal.subscribe((data: any) => {\r\n  //     this.notifyScope = data.value;\r\n  //     this.notifyPlaceholder = '（已设置）'\r\n  //     dialog.close();\r\n  //   });\r\n  // }\r\n\r\n  // backWardRuleConfig() {\r\n  //   const compFactory = this.resolver.resolveComponentFactory(BackwardRuleComponent);\r\n  //   const compRef = compFactory.create(this.injector);\r\n  //   compRef.instance.editorParams.nodeType = 'UserActivity';\r\n  //   const modalConfig = {\r\n  //     title: this.localePipe.transform('component.backwardRule.backwardRule'),\r\n  //     width: 760,\r\n  //     height: 505,\r\n  //     buttons: compRef.instance.modalFooter\r\n  //   };\r\n  //   const dialog = this.modalService.show(compRef, modalConfig);\r\n  //   compRef.instance.closeModal.subscribe($event => dialog.close());\r\n  //   compRef.instance.submitModal.subscribe((data: any) => {\r\n  //     this.backWardRule = data.value;\r\n  //     this.backWardPlaceholder = '（已设置）'\r\n  //     dialog.close();\r\n  //   });\r\n  // }\r\n\r\n  clickOK() {\r\n    const value = [];\r\n    if (this.addSignFrontEnable) {\r\n      const frontData = {\r\n        type: 'addSignfront',\r\n        actis: this.addSignFrontActis,\r\n        config: this.addSignFrontScope\r\n      }\r\n      value.push(frontData)\r\n    }\r\n    if (this.addSignBehindEnable) {\r\n      const behindData = {\r\n        type: 'addSignBehind',\r\n        actis: this.addSignFrontActis,\r\n        config: this.addSignBehindScope\r\n      }\r\n      value.push(behindData)\r\n    }\r\n    if (this.transferEnable) {\r\n      const transferData = {\r\n        type: 'transfer',\r\n        actis: this.addSignFrontActis,\r\n        config: this.transferScope\r\n      }\r\n      value.push(transferData)\r\n    }\r\n    if (this.notifyEnable) {\r\n      const notifyData = {\r\n        type: 'notify',\r\n        actis: this.addSignFrontActis,\r\n        config: this.notifyScope\r\n      }\r\n      value.push(notifyData)\r\n    }\r\n    if (this.backWardRuleEnable) {\r\n      const backWardRuleData = {\r\n        type: 'backWardRule',\r\n        actis: this.addSignFrontActis,\r\n        config: this.backWardRule\r\n      }\r\n      value.push(backWardRuleData)\r\n    }\r\n    if (value && value.length > 0) {\r\n      this.batchSet(value);\r\n    }\r\n    this.submit.next();\r\n  }\r\n\r\n  clickCancel() {\r\n    this.cancel.next();\r\n  }\r\n\r\n  batchSet(value: any) {\r\n    this.viewModel.batchSet(ResourceKeys.batchSetProperty, value);\r\n  }\r\n\r\n}\r\n\r\nexport enum ResourceKeys {\r\n  batchSetProperty = 'batchSetProperty'\r\n}\r\n","import { Cell, EditorUi, Graph, ActionKeys, ToolboxGroup, ToolboxItem } from \"@edp-pmf/grapheditor\";\r\nimport { WfGraph } from \"./WfGraph\";\r\nimport { ProcessHeader, BizActivity, UserActivity, OperationActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { WfSidebar } from \"./WfSidebar\";\r\nimport { WfConstants } from \"./WfConstants\";\r\nimport { mxEvent, mxResources } from \"@edp-pmf/mxgraph-ts\";\r\nimport { UserActivityPropertyKeys } from \"./wf-cell/property-keys/UserActivityPropertyKeys\";\r\nimport { WfExclusiveGatewayCell } from \"./wf-cell/WfExclusiveGatewayCell\";\r\nimport { AifCreationBillActivityCell } from \"./wf-cell/AifCreationBillActivityCell\";\r\nimport { AutoActivityCell } from \"./wf-cell/AutoActivityCell\";\r\nimport { CallActivitySubProcessCell } from \"./wf-cell/CallActivitySubProcessCell\";\r\nimport { IntermediateCatchEventImplCell } from \"./wf-cell/IntermediateCatchEventImplCell\";\r\nimport { MessageActivityCell } from \"./wf-cell/MessageActivityCell\";\r\nimport { NotifyActivityCell } from \"./wf-cell/NotifyActivityCell\";\r\nimport { OperationActivityCell } from \"./wf-cell/OperationActivityCell\";\r\nimport { StartActivityCell } from \"./wf-cell/StartActivityCell\";\r\nimport { UserActivityCell } from \"./wf-cell/UserActivityCell\";\r\nimport { WfParallelGatewayCell } from \"./wf-cell/WfParallelGatewayCell\";\r\nimport { WfEndEventCell } from \"./wf-cell/WfEndEventCell\";\r\nimport { WfInclusiveGatewayCell } from \"./wf-cell/WfInclusiveGatewayCell\";\r\nimport { WfProcessEditorComponent } from \"../wf-process-editor.component\";\r\nimport { BatchSetPropertiesComponent } from \"../views/batch-set-properties/batch-set-properties.component\";\r\nimport { BsModalService, ModalOptions } from \"@farris/ui-modal\";\r\nimport { ComponentFactoryResolver, Injector } from \"@angular/core\";\r\n\r\nexport class WfEditorUi extends EditorUi {\r\n  editor: WfProcessEditorComponent;\r\n  graph: WfGraph;\r\n  sidebar: WfSidebar;\r\n  time: string;\r\n  bizCategoryId: string;\r\n  action: string;\r\n  mode: string;\r\n  scene: string;\r\n  procType: string;\r\n  procExtProps: any;\r\n  formFormats: any;\r\n  generalConfig: { enableTransfer: boolean; enableNotify: boolean; enableAddSignBehind: boolean; enableAddSignFront: boolean; } = {\r\n    enableTransfer: true,\r\n    enableNotify: false,\r\n    enableAddSignBehind: false,\r\n    enableAddSignFront: false,\r\n  };\r\n\r\n  zoomBar: HTMLDivElement;\r\n\r\n  constructor(time: string, action: string, container?: HTMLElement, private injector?: Injector,\r\n    private modalService?: BsModalService,\r\n    private resolver?: ComponentFactoryResolver, eventSource?: any, importLinks: boolean = true,) {\r\n    super(container, eventSource, importLinks);\r\n    let rootPath = '';\r\n    try {\r\n      rootPath = (window as any).gspframeworkService.common.getBasePath.get();\r\n    } catch (error) {\r\n    }\r\n    mxResources.add(rootPath + \"/platform/runtime/common/web/@gsp-wf/wf-process-editor/resources/wf-process-editor\");\r\n    this.showToolbar = false;\r\n    this.time = time;\r\n    this.action = action;\r\n  }\r\n\r\n  createActions() {\r\n    const actions = super.createActions();\r\n\r\n    // 只有设计时编辑状态下才启用删除动作\r\n    if (!(this.action === 'edit' && this.time !== 'rt')) {\r\n      const deleteAction = actions.getAction(ActionKeys.pmf_delete);\r\n\r\n      deleteAction.isEnabled = () => false;\r\n    }\r\n\r\n    return actions;\r\n  }\r\n\r\n  createToolbox() {\r\n    const toolbox = super.createToolbox();\r\n\r\n    const g1 = new ToolboxGroup();\r\n    g1.name = mxResources.get('basicElements');\r\n    g1.items.push(\r\n      new ToolboxItem(StartActivityCell.CLR_TYPE_ID),\r\n      new ToolboxItem(WfExclusiveGatewayCell.CLR_TYPE_ID),\r\n      new ToolboxItem(WfParallelGatewayCell.CLR_TYPE_ID),\r\n      // 暂时隐藏包容网关\r\n      new ToolboxItem(WfInclusiveGatewayCell.CLR_TYPE_ID),\r\n      new ToolboxItem(UserActivityCell.CLR_TYPE_ID),\r\n      new ToolboxItem(OperationActivityCell.CLR_TYPE_ID),\r\n      new ToolboxItem(NotifyActivityCell.CLR_TYPE_ID),\r\n      new ToolboxItem(CallActivitySubProcessCell.CLR_TYPE_ID),\r\n      new ToolboxItem(AutoActivityCell.CLR_TYPE_ID),\r\n      new ToolboxItem(IntermediateCatchEventImplCell.CLR_TYPE_ID),\r\n      new ToolboxItem(MessageActivityCell.CLR_TYPE_ID),\r\n      new ToolboxItem(AifCreationBillActivityCell.CLR_TYPE_ID),\r\n      new ToolboxItem(WfEndEventCell.CLR_TYPE_ID),\r\n    );\r\n\r\n    toolbox.groups = [g1];\r\n\r\n    return toolbox;\r\n  }\r\n\r\n  createGraphInstance(): Graph {\r\n    const graph = new WfGraph(this, this.diagramContainer);\r\n\r\n    if (this.action === 'view' || this.time === 'rt' || this.action === 'assignView') {\r\n      graph.setCellsLocked(true);\r\n    } else {\r\n      graph.setDropEnabled(true);\r\n      graph.setConnectable(true);\r\n    }\r\n    //TODO：右键查看只显示在审批节点上\r\n    graph.popupMenuHandler.autoExpand = true;\r\n    graph.popupMenuHandler.factoryMethod = (menu, cell, evt) => {\r\n      const actList = graph.getChildCells(graph.getDefaultParent())\r\n      if (cell != null\r\n        && cell.clrTypeId.indexOf('wf.UserActivity') > -1\r\n        && actList.findIndex(a => a.id === cell.getId()) > -1) {\r\n        menu.addItem('批量复制属性', null, () => {\r\n          const compFactory = this.resolver.resolveComponentFactory(BatchSetPropertiesComponent);\r\n          const compRef = compFactory.create(this.injector);\r\n          compRef.instance.activityModel = cell.flowElement;\r\n          const modalConfig: ModalOptions = {\r\n            title: '批量复制属性',\r\n            width: 512,\r\n            height: 465,\r\n            showButtons: true,\r\n            buttons: compRef.instance.footer\r\n          };\r\n          const dialog = this.modalService.show(compRef, modalConfig);\r\n          compRef.instance.cancel.subscribe($event => dialog.close());\r\n          compRef.instance.submit.subscribe((data: string) => {\r\n            dialog.close();\r\n          });\r\n        });\r\n      }\r\n    };\r\n    return graph;\r\n  }\r\n\r\n  createSidebar(): WfSidebar {\r\n    return new WfSidebar(this, this.sidebarContainer);\r\n  }\r\n\r\n  show(): void {\r\n    super.show();\r\n\r\n    if (this.action === 'view' || this.action === 'assignView') {\r\n      const span = this.createSpan('');\r\n      span.style.fontSize = '14px';\r\n      span.style.color = 'white';\r\n      span.style.borderRadius = '20px';\r\n      span.style.padding = '4px 20px';\r\n      span.style.background = 'rgb(199, 194, 187)';\r\n      const v = document.createTextNode(mxResources.get('readOnly'));\r\n      span.appendChild(v);\r\n      const d = this.createDiv('');\r\n      d.style.position = 'absolute';\r\n      d.style.top = '10px';\r\n      d.style.right = '10px';\r\n      d.style.zIndex = \"2\";\r\n      d.appendChild(span);\r\n      this.container.appendChild(d);\r\n    }\r\n\r\n    const buttonIn = document.createElement('a');\r\n    buttonIn.setAttribute('href', 'javascript:void(0);');\r\n    let buttonInImg = document.createElement('img');\r\n    buttonIn.style.marginRight = '10px';\r\n    buttonInImg.src = WfConstants.IMAGE_PATH + '/zoomIn.svg';\r\n    buttonInImg.style.display = \"inline-block\";\r\n    buttonInImg.style.verticalAlign = \"middle\";\r\n    buttonIn.appendChild(buttonInImg);\r\n    mxEvent.addListener(buttonIn, 'click', (evt: PointerEvent) => {\r\n      this.actions.getAction(ActionKeys.pmf_zoomIn).execute(evt);\r\n    });\r\n\r\n    const buttonOut = document.createElement('a');\r\n    buttonOut.setAttribute('href', 'javascript:void(0);');\r\n    let buttonOutImg = document.createElement('img');\r\n    buttonOutImg.src = WfConstants.IMAGE_PATH + '/zoomOut.svg';\r\n    buttonOutImg.style.display = \"inline-block\";\r\n    buttonOutImg.style.verticalAlign = \"middle\";\r\n    buttonOut.appendChild(buttonOutImg);\r\n    mxEvent.addListener(buttonOut, 'click', (evt: PointerEvent) => {\r\n      this.actions.getAction(ActionKeys.pmf_zoomOut).execute(evt);\r\n    });\r\n\r\n    const zoomBar = this.createDiv('zoomBar');\r\n    zoomBar.style.position = 'absolute';\r\n    zoomBar.style.zIndex = \"2\";\r\n    let t = 10;\r\n    if (this.showMenubar) {\r\n      t += this.menubarHeight;\r\n    }\r\n    if (this.showToolbar) {\r\n      t += this.toolbarHeight;\r\n    }\r\n    zoomBar.style.top = t + 'px';\r\n    zoomBar.style.left = (this.showSidebar ? this.sidebarSplitPosition + this.sidebarSplitSize : 0) + 10 + \"px\";\r\n\r\n    zoomBar.appendChild(buttonIn);\r\n    zoomBar.appendChild(buttonOut);\r\n    this.container.appendChild(zoomBar);\r\n    this.zoomBar = zoomBar;\r\n  }\r\n\r\n  sidebarSplitOnChange(value: number): void {\r\n    super.sidebarSplitOnChange(value);\r\n\r\n    // 分割条移动后更新缩放条位置\r\n    if (this.zoomBar) {\r\n      this.zoomBar.style.left = (this.showSidebar ? this.sidebarSplitPosition + this.sidebarSplitSize : 0) + 10 + \"px\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建带指定样式类的span\r\n   * @param classname\r\n   * @returns\r\n   */\r\n  createSpan(classname: string): HTMLSpanElement {\r\n    let elt = document.createElement('span');\r\n    elt.className = classname;\r\n\r\n    return elt;\r\n  }\r\n\r\n  /**\r\n   * 加载业务活动\r\n   * @param bizActivities\r\n   */\r\n  loadBizActivities(bizActivities: BizActivity[]) {\r\n    this.sidebar && this.sidebar.addBizActPalette(bizActivities);\r\n  }\r\n\r\n  /**\r\n   * 批量复制属性\r\n   * @param obj\r\n   */\r\n  batchCopyProperty(obj: any) {\r\n    // 放弃不需要的参数\r\n    const ids = obj.value.targetNodeID;\r\n    obj.propertyValue = obj.value.messageNotice;\r\n    // todo：多个活动具有同名属性时，如何更合理定义PropertyKey？\r\n    obj.propertyID = UserActivityPropertyKeys.messageNotice;\r\n    for (const id of ids) {\r\n      const cell = this.graph.getCellByFlowElementId(id);\r\n      if (cell) {\r\n        cell.updateProps(obj);\r\n        this.graph.refresh();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n * 批量设置属性\r\n * @param obj\r\n */\r\n  batchSetProperty(obj: any) {\r\n    for (const v of obj) {\r\n      switch (v.type) {\r\n        case 'addSignfront':\r\n          const afId = v.actis;\r\n          obj.propertyValue = v.config;\r\n          obj.propertyID = UserActivityPropertyKeys.AddSignFrontAble;\r\n          for (const id of afId) {\r\n            const cell = this.graph.getCellByFlowElementId(id.Id);\r\n            if (cell) {\r\n              cell.updateProps(obj);\r\n              this.graph.refresh();\r\n            }\r\n          }\r\n          break;\r\n        case 'addSignBehind':\r\n          const abId = v.actis;\r\n          obj.propertyValue = v.config;\r\n          obj.propertyID = UserActivityPropertyKeys.AddSignBehindAble;\r\n          for (const id of abId) {\r\n            const cell = this.graph.getCellByFlowElementId(id.Id);\r\n            if (cell) {\r\n              cell.updateProps(obj);\r\n              this.graph.refresh();\r\n            }\r\n          }\r\n          break;\r\n        case 'transfer':\r\n          const trId = v.actis;\r\n          obj.propertyValue = v.config;\r\n          obj.propertyID = UserActivityPropertyKeys.transferScope;\r\n          for (const id of trId) {\r\n            const cell = this.graph.getCellByFlowElementId(id.Id);\r\n            if (cell) {\r\n              cell.updateProps(obj);\r\n              this.graph.refresh();\r\n            }\r\n          }\r\n          break;\r\n        case 'notify':\r\n          const ntId = v.actis;\r\n          obj.propertyValue = v.config;\r\n          obj.propertyID = UserActivityPropertyKeys.NotifyAble;\r\n          for (const id of ntId) {\r\n            const cell = this.graph.getCellByFlowElementId(id.Id);\r\n            if (cell) {\r\n              cell.updateProps(obj);\r\n              this.graph.refresh();\r\n            }\r\n          }\r\n          break;\r\n        // 驳回规则需要特殊处理：子流程和信号的赋简版\r\n        case 'backWardRule':\r\n          const bwId = v.actis;\r\n          obj.propertyValue = v.config;\r\n          obj.propertyID = UserActivityPropertyKeys.BackWardRule;\r\n          for (const id of bwId) {\r\n            const cell = this.graph.getCellByFlowElementId(id.Id);\r\n            if (cell) {\r\n              cell.updateProps(obj);\r\n              this.graph.refresh();\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建新流程\r\n   * @param newProcInfo\r\n   * @param bizCmps\r\n   */\r\n  createBpmnModel(newProcInfo: any, bizCmps?: any) {\r\n    this.graph.createBpmnModelWithProcInfo(newProcInfo, bizCmps);\r\n\r\n  }\r\n\r\n  /**\r\n   * 打开流程\r\n   * @param content\r\n   */\r\n  openBpmnModel(content: string) {\r\n    this.graph.loadBpmnModel(content);\r\n  }\r\n\r\n  /**\r\n   * 获取属性配置，刷新属性框\r\n   * @param obj\r\n   * @returns\r\n   */\r\n  refreshProperty(obj: any) {\r\n    const cell = this.graph.getCellByFlowElementId(obj.Id);\r\n    return this.getFarrisPropConfig([cell]);\r\n  }\r\n\r\n  /**\r\n   * 获取用户活动\r\n   * @returns\r\n   */\r\n  getActivities() {\r\n    const list = [];\r\n    const bpmnModel = this.graph.bpmnModel;\r\n    const flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n    Object.keys(flowDict).forEach((key) => {\r\n      const flowElt = flowDict[key];\r\n      if (flowElt.ClrTypeID === UserActivity.Clr_Type_ID\r\n        || flowElt.ClrTypeID === OperationActivity.Clr_Type_ID) {\r\n        list.push(flowElt);\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * 获取结束事件\r\n   * @returns\r\n   */\r\n  getEndEvents() {\r\n    const userActArray = [];\r\n    const bpmnModel = this.graph.bpmnModel;\r\n    const flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n    Object.keys(flowDict).forEach((key) => {\r\n      const flowElt = flowDict[key];\r\n      if (flowElt.ClrTypeID === 'bpmn.EndEvent' || flowElt.ClrTypeID === UserActivity.Clr_Type_ID\r\n        || flowElt.ClrTypeID === OperationActivity.Clr_Type_ID) {\r\n        userActArray.push(flowElt);\r\n      }\r\n    });\r\n    return userActArray;\r\n  }\r\n\r\n  /**\r\n   * 获取知会事件\r\n   * @returns\r\n   */\r\n  getNotifyEvents() {\r\n    const list = [];\r\n    const bpmnModel = this.graph.bpmnModel;\r\n    const flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n    Object.keys(flowDict).forEach((key) => {\r\n      const flowElt = flowDict[key];\r\n      if (flowElt.ClrTypeID === 'wf.NotifyActivity') {\r\n        list.push(flowElt);\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * 获取消息事件\r\n   * @returns\r\n   */\r\n  getMessageEvents() {\r\n    const list = [];\r\n    const bpmnModel = this.graph.bpmnModel;\r\n    const flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n    Object.keys(flowDict).forEach((key) => {\r\n      const flowElt = flowDict[key];\r\n      if (flowElt.ClrTypeID === 'bpmn.MessageEvent') {\r\n        list.push(flowElt);\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n  /**\r\n   * 获取子流程和信号捕获节点\r\n   * @returns\r\n   */\r\n  getSubAndCatchEvents() {\r\n    const list = [];\r\n    const bpmnModel = this.graph.bpmnModel;\r\n    const flowDict = bpmnModel.DefaultProcess.GetFlowElements();\r\n    Object.keys(flowDict).forEach((key) => {\r\n      const flowElt = flowDict[key];\r\n      if (flowElt.ClrTypeID === 'wf.CallActivitySubProcess' ||\r\n      flowElt.ClrTypeID === 'wf.IntermediateCatchEventImpl') {\r\n        list.push(flowElt);\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n  /**\r\n   * 获取启动方式\r\n   * @returns\r\n   */\r\n  getStartMode() {\r\n    let startMode = null;\r\n    const bpmnModel = this.graph.bpmnModel;\r\n    const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n    if (extendElements.length > 0) {\r\n      for (const e of extendElements) {\r\n        if (e instanceof ProcessHeader) {\r\n          startMode = e.startMode;\r\n        }\r\n      }\r\n    }\r\n    return startMode;\r\n  }\r\n}\r\n","import { BpmnModel, ExclusiveGateway, ParallelGateway, EndEvent } from \"@edp-pmf/bpmn-model\";\r\nimport { ProcessHeader, Component, StartMode, ToolTime, StartActivity, UserActivity, OperationActivity, AutoActivity, MessageActivity, CallActivitySubProcess, IntermediateCatchEventImpl, NotifyActivity, AifCreationBillActivity } from \"@gsp-wf/wf-process-model\";\r\nimport { WfDesignerUtils } from \"./WfDesignerUtils\";\r\nimport { WfValidationResult } from \"./WfValidationResult\";\r\nimport { WfLocalePipe } from \"../i18n/pipe/wf-process-editor-locale.pipe\";\r\n\r\nexport class WfValidatorAdapter {\r\n  public static localePipe: WfLocalePipe = null;\r\n\r\n  constructor() {\r\n    \r\n  }\r\n    static validator(bpmnModel: BpmnModel, scene: string): WfValidationResult {\r\n        // 校验节点标识是否合规\r\n        const resActList = this.validateActivityList(bpmnModel);\r\n        if (!resActList.valid) {\r\n            return resActList;\r\n        }\r\n        // 校验流程变量\r\n        const resProcVars = this.validatePrcoessVaris(bpmnModel);\r\n        if (!resProcVars.valid) {\r\n            return resProcVars;\r\n        }\r\n        const warningList = this.warningValidator(bpmnModel, scene)\r\n        return {\r\n            valid: true,\r\n            warningList: warningList,\r\n        };\r\n    }\r\n\r\n  private static warningValidator(bpmnModel: BpmnModel, scene: string) {\r\n    let warningList = new Array();\r\n    // 校验并行网关是否成对出现\r\n    this.validateParallelGateway(bpmnModel, warningList);\r\n    // 校验流程构件\r\n    this.validateProcCmps(bpmnModel, scene, warningList);\r\n    // 校验审批活动、人工操作参与者\r\n    this.validateApprovalPerformers(bpmnModel, warningList);\r\n\r\n    return warningList;\r\n  }\r\n\r\n  private static validateProcCmps(bpmnModel: BpmnModel, scene: string, warningList: Array<any>) {\r\n    if (scene === 'inSuite') {\r\n      return;\r\n    }\r\n    const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n    const processHeader = extendElements.find(e => e instanceof ProcessHeader);\r\n    if (!processHeader) {\r\n      console.error(this.localePipe.instant('validate.noProcessHeader'))\r\n      return;\r\n    }\r\n    const procCmps = extendElements.filter(e => e instanceof Component);\r\n    if (!procCmps || procCmps.length === 0) {\r\n      const tip = {\r\n        id: 'lackCmp',\r\n        title: this.localePipe.instant('validate.cmpsEmpty'),\r\n        msg: this.localePipe.instant('validate.cmpsEmptyMsg'),\r\n        type: 'processWarning'\r\n      };\r\n      warningList.push(tip);\r\n      return;\r\n    }\r\n    // 启用方式为直接方式时\r\n    if ((processHeader as ProcessHeader).startMode === StartMode.DIRECT) {\r\n      // 直接启用方式时不允许存在共享的构件\r\n      const pfCmps = procCmps.filter((p: Component) => WfDesignerUtils.isPfComponent(p.MetadataId));\r\n      if (pfCmps && pfCmps.length > 0) {\r\n        let pfCmpsName = '';\r\n        for (const cmp of pfCmps) {\r\n          pfCmpsName = pfCmpsName.concat(`${(cmp as Component).Name}, `);\r\n        }\r\n        pfCmpsName = pfCmpsName.slice(0, pfCmpsName.length - 1);\r\n        const tip = {\r\n          id: 'directProcessWithPFCmp',\r\n          title: this.localePipe.instant('validate.directNoPf'),\r\n          msg: this.localePipe.instant('validate.directNoPfMsg')+`${pfCmpsName} `,\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n      if (!procCmps.some((c: Component) => c.Time === ToolTime.LOADDATA)) {\r\n        const tip = {\r\n          id: 'lackLoadDataCmp',\r\n          title: this.localePipe.instant('validate.noLoadDataCmp'),\r\n          msg: this.localePipe.instant('validate.noLoadDataCmpMsg'),\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n      if (!procCmps.some((c: Component) => c.Time === ToolTime.PROCESSINSTANCE_STARTED)) {\r\n        const tip = {\r\n          id: 'lackProcessStartCmp',\r\n          title: this.localePipe.instant('validate.noStartCmp'),\r\n          msg: this.localePipe.instant('validate.noStartCmpMsg'),\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n      if (!procCmps.some((c: Component) => c.Time === ToolTime.PROCESSINSTANCE_COMPLETED)) {\r\n        const tip = {\r\n          id: 'lackProcessCompleteCmp',\r\n          title: this.localePipe.instant('validate.lackProcessCompleteCmp'),\r\n          msg: this.localePipe.instant('validate.lackProcessCompleteCmpMsg'),\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n      if (!procCmps.some((c: Component) => (c.Time as any) === 'PROCESSINSTANCE_ABORTED')) {\r\n        const tip = {\r\n          id: 'lackProcessAbortCmp',\r\n          title: this.localePipe.instant('validate.lackProcessAbortCmp'),\r\n          msg: this.localePipe.instant('validate.lackProcessAbortCmpMsg'),\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n      if (!procCmps.some((c: Component) => c.Time === 'PROCESSINSTANCE_CANCELED')) {\r\n        const tip = {\r\n          id: 'lackProcessCancelCmp',\r\n          title: this.localePipe.instant('validate.lackProcessCancelCmp'),\r\n          msg: this.localePipe.instant('validate.lackProcessCancelCmpMsg'),\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n      if (!procCmps.some((c: Component) => c.Time === 'PROCESSINSTANCE_ROLLBACK')) {\r\n        const tip = {\r\n          id: 'lackProcessBackCmp',\r\n          title: this.localePipe.instant('validate.lackProcessBackCmp'),\r\n          msg: this.localePipe.instant('validate.lackProcessBackCmpMsg'),\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n      if (!procCmps.some((c: Component) => c.Time === 'PROCESSINSTANCE_RESUBMIT')) {\r\n        const tip = {\r\n          id: 'lackProcessReStartCmp',\r\n          title: this.localePipe.instant('validate.lackProcessReStartCmp'),\r\n          msg: this.localePipe.instant('validate.lackProcessReStartCmpMsg'),\r\n          type: 'processWarning'\r\n        };\r\n        warningList.push(tip);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static validateParallelGateway(bpmnModel: BpmnModel, warningList: Array<any>) {\r\n    const flowElements = bpmnModel.DefaultProcess.GetFlowElements();\r\n    let parallelGatewayCount = 0;\r\n    for (const k in flowElements) {\r\n      if (flowElements[k] instanceof ParallelGateway) {\r\n        parallelGatewayCount++;\r\n      }\r\n    }\r\n    if (parallelGatewayCount % 2 !== 0) {\r\n      const tip = {\r\n        id: 'parallelGatewayCheck',\r\n        title: this.localePipe.instant('validate.parallelGatewayCheck'),\r\n        msg: this.localePipe.instant('validate.parallelGatewayCheckMsg'),\r\n        type: 'processWarning'\r\n      };\r\n      warningList.push(tip);\r\n    }\r\n  }\r\n\r\n  private static validateApprovalPerformers(bpmnModel: BpmnModel, warningList: any[]) {\r\n    const flowElements = bpmnModel.DefaultProcess.GetFlowElements();\r\n    let count = 0;\r\n    for (const k in flowElements) {\r\n      const act = flowElements[k];\r\n      if (act instanceof UserActivity || act instanceof OperationActivity) {\r\n        const roles = act.GetResourceRoles();\r\n        if (roles.length == 0 && (!act.AssignPerformerConfig || !act.AssignPerformerConfig.AllowGlobalAssign)) {\r\n          const tip = {\r\n            id: 'approvalPerformerCheck' + count,\r\n            title: `【${flowElements[k].Name}】` +  this.localePipe.instant('validate.approvalPerformerCheck'),\r\n            msg: ``,\r\n            type: 'processWarning'\r\n          };\r\n          warningList.push(tip);\r\n\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static validatePrcoessVaris(bpmnModel: BpmnModel) {\r\n    const objects = bpmnModel.DefaultProcess.GetDataObjects();\r\n    let procVaris = new Array();\r\n    if (objects && objects.length > 0) {\r\n      procVaris = objects.filter(o => o.DataType.Category !== 'CustomType').map(o => o.Name);\r\n    }\r\n    const flowElements = bpmnModel.DefaultProcess.GetFlowElements();\r\n    for (const k in flowElements) {\r\n      if (flowElements[k] instanceof UserActivity ||\r\n        flowElements[k] instanceof OperationActivity ||\r\n        flowElements[k] instanceof AutoActivity ||\r\n        flowElements[k] instanceof MessageActivity ||\r\n        flowElements[k] instanceof CallActivitySubProcess ||\r\n        flowElements[k] instanceof IntermediateCatchEventImpl ||\r\n        flowElements[k] instanceof NotifyActivity) {\r\n        const variSets = (flowElements[k] as any).variableSettings;\r\n        if (variSets) {\r\n          for (const v of variSets) {\r\n            if (!procVaris.some(p => p === v.variableCode)) {\r\n              return {\r\n                valid: false,\r\n                type: 'message',\r\n                level: 'warning',\r\n                message: `【${flowElements[k].Name}】`+  this.localePipe.instant('validate.noVariable1')\r\n                +`【${v.variableName}】`+ this.localePipe.instant('validate.noVariable2')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      valid: true,\r\n    };\r\n  }\r\n\r\n  private static validateActivityList(bpmnModel: BpmnModel) {\r\n    const flowElements = bpmnModel.DefaultProcess.GetFlowElements();\r\n    const resActId = this.validateActivityId(flowElements);\r\n    if (!resActId.valid) {\r\n      return resActId;\r\n    }\r\n    const resActName = this.validateActivityName(flowElements);\r\n    if (!resActName.valid) {\r\n      return resActName;\r\n    }\r\n    return {\r\n      valid: true,\r\n    };\r\n  }\r\n\r\n  private static validateActivityId(flowElements: any) {\r\n    for (const k in flowElements) {\r\n      switch (flowElements[k].ClrTypeID) {\r\n        case 'wf.StartActivity':\r\n          const startActivity = flowElements[k] as StartActivity;\r\n          if (!startActivity.Id.startsWith('startActivity')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${startActivity.Name}`+ this.localePipe.instant('validate.noStartActivity')\r\n            };\r\n          }\r\n          break;\r\n        case 'bpmn.ExclusiveGateway':\r\n          const exclusiveGateway = flowElements[k] as ExclusiveGateway;\r\n          if (!exclusiveGateway.Id.startsWith('ExclusiveGateway')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${exclusiveGateway.Name}`+ this.localePipe.instant('validate.noExclusiveGateway')\r\n            }\r\n          }\r\n          break;\r\n        case 'bpmn.ParallelGateway':\r\n          const parallelGateway = flowElements[k] as ParallelGateway;\r\n          if (!parallelGateway.Id.startsWith('ParallelGateway')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${parallelGateway.Name}`+ this.localePipe.instant('validate.noParallelGateway')\r\n            };\r\n          }\r\n          break;\r\n        case 'wf.UserActivity':\r\n          const userActivity = flowElements[k] as UserActivity;\r\n          if (!userActivity.Id.startsWith('UserActivity')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${userActivity.Name}`+ this.localePipe.instant('validate.noUserActivity')\r\n            };\r\n          }\r\n          break;\r\n        case 'wf.OperationActivity':\r\n          const operationActivity = flowElements[k] as OperationActivity;\r\n          if (!operationActivity.Id.startsWith('UserActivity')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${operationActivity.Name}`+ this.localePipe.instant('validate.noOperationActivity')\r\n            };\r\n          }\r\n          break;\r\n        case 'wf.NotifyActivity':\r\n          const notifyActivity = flowElements[k] as NotifyActivity;\r\n          if (!notifyActivity.Id.startsWith('NotifyActivity')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${notifyActivity.Name}`+ this.localePipe.instant('validate.noNotifyActivity')\r\n            };\r\n          }\r\n          break;\r\n        case 'wf.CallActivitySubProcess':\r\n          const callActivitySubProcess = flowElements[k] as CallActivitySubProcess;\r\n          if (!callActivitySubProcess.Id.startsWith('CallActivitySubProcess')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${callActivitySubProcess.Name}`+ this.localePipe.instant('validate.noCallActivitySubProcess')\r\n            };\r\n          }\r\n          break;\r\n        case 'wf.AutoActivity':\r\n          const autoActivity = flowElements[k] as AutoActivity;\r\n          if (!autoActivity.Id.startsWith('autoActivity')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${autoActivity.Name}`+ this.localePipe.instant('validate.noAutoActivity')\r\n           };\r\n          }\r\n          break;\r\n        case 'wf.IntermediateCatchEventImpl':\r\n          const intermediateCatchEventImpl = flowElements[k] as IntermediateCatchEventImpl;\r\n          if (!intermediateCatchEventImpl.Id.startsWith('IntermediateCatchEvent')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${intermediateCatchEventImpl.Name}`+ this.localePipe.instant('validate.noIntermediateCatchEvent')\r\n            };\r\n          }\r\n          break;\r\n        case 'wf.MessageActivity':\r\n          const messageActivity = flowElements[k] as MessageActivity;\r\n          if (!messageActivity.Id.startsWith('MessageActivity')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${messageActivity.Name}`+ this.localePipe.instant('validate.noMessageActivity')\r\n            };\r\n          }\r\n          break;\r\n        case 'wf.AifCreationBillActivity':\r\n          const aifCreationBillActivity = flowElements[k] as AifCreationBillActivity;\r\n          if (!aifCreationBillActivity.Id.startsWith('AifCreationBillActivity')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${aifCreationBillActivity.Name}`+ this.localePipe.instant('validate.noAifCreationBillActivity')\r\n            };\r\n          }\r\n          break;\r\n        case 'bpmn.EndEvent':\r\n          const endEvent = flowElements[k] as EndEvent;\r\n          if (!endEvent.Id.startsWith('EndEvent')) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${endEvent.Name}`+ this.localePipe.instant('validate.noEndEvent')\r\n            };\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    return {\r\n      valid: true,\r\n    };\r\n  }\r\n\r\n  private static validateActivityName(flowElements: any) {\r\n    for (const k in flowElements) {\r\n      const flowNode = flowElements[k];\r\n      switch (flowNode.ClrTypeID) {\r\n        case \"wf.StartActivity\":\r\n        case \"bpmn.ExclusiveGateway\":\r\n        case \"bpmn.ParallelGateway\":\r\n        case \"wf.UserActivity\":\r\n        case \"wf.OperationActivity\":\r\n        case \"wf.NotifyActivity\":\r\n        case \"wf.CallActivitySubProcess\":\r\n        case \"wf.AutoActivity\":\r\n        case \"wf.IntermediateCatchEventImpl\":\r\n        case \"wf.MessageActivity\":\r\n        case \"wf.AifCreationBillActivity\":\r\n        case \"bpmn.EndEvent\":\r\n          if (flowNode.Name == null || flowNode.Name == \"\") {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.mark') +\r\n               `${flowNode.Id}` + this.localePipe.instant('validate.noFlowNodeChsName')\r\n            };\r\n          }\r\n          if (new Blob([flowNode.Name]).size > 128) {\r\n            return {\r\n              valid: false,\r\n              type: 'message',\r\n              level: 'error',\r\n              message: this.localePipe.instant('validate.activity') +\r\n              `${flowNode.Name}` + this.localePipe.instant('validate.nameExceedsLengthLimit')\r\n            };\r\n          }\r\n          break;\r\n      };\r\n    }\r\n    return {\r\n      valid: true,\r\n    };\r\n  }\r\n\r\n}\r\n","export enum EventBusKeys {\r\n    new = \"new\",\r\n    batchCopyProperty = \"batchCopyProperty\",\r\n    batchSetProperty = 'batchSetProperty'\r\n}","export const WF_PROCESS_EDITOR_LANG_RESOURCES = {\r\n  \"zh-CHS\": {\r\n    \"validate\": {\r\n      \"noProcessHeader\": \"模型不存在processHeader属性\",\r\n      \"cmpsEmpty\": \"流程构件为空\",\r\n      \"cmpsEmptyMsg\": \"流程构件不允许为空，请联系表单开发确认问题\",\r\n      \"directNoPf\": \"启动方式为【直接】的流程不应该包含共享（PF）的流程构件\",\r\n      \"directNoPfMsg\": \"请移除以下共享（PF）的流程构件：\",\r\n      \"noLoadDataCmp\": \"缺少执行时机为[获取数据]的流程构件\",\r\n      \"noLoadDataCmpMsg\": \"流程定义不能缺少取数构件，请联系表单开发确认问题\",\r\n      \"noStartCmp\": \"缺少执行时机为[流程启动]的流程构件\",\r\n      \"noStartCmpMsg\": \"会导致流程启动时无法修改单据状态，请联系表单开发确认问题\",\r\n      \"lackProcessCompleteCmp\": \"缺少执行时机为[流程完成]的流程构件\",\r\n      \"lackProcessCompleteCmpMsg\": \"会导致流程完成时无法修改单据状态，请联系表单开发确认问题\",\r\n      \"lackProcessAbortCmp\": \"缺少执行时机为[流程终止]的流程构件\",\r\n      \"lackProcessAbortCmpMsg\": \"会导致流程终止时无法修改单据状态，请联系表单开发确认问题\",\r\n      \"lackProcessCancelCmp\": \"缺少执行时机为[流程终止]的流程构件\",\r\n      \"lackProcessCancelCmpMsg\": \"会导致流程终止时无法修改单据状态，请联系表单开发确认问题\",\r\n      \"lackProcessBackCmp\": \"缺少执行时机为[流程驳回]的流程构件\",\r\n      \"lackProcessBackCmpMsg\": \"会导致流程驳回时无法修改单据状态，请联系表单开发确认问题\",\r\n      \"lackProcessReStartCmp\": \"缺少执行时机为[重新提交]的流程构件\",\r\n      \"lackProcessReStartCmpMsg\": \"会导致流程重新提交时无法修改单据状态，请联系表单开发确认问题\",\r\n      \"parallelGatewayCheck\": \"【并行网关】没有成对出现\",\r\n      \"parallelGatewayCheckMsg\": \"【并行网关】需作为一条流程分支的拆分节点和汇聚节点成对出现，请修改\",\r\n      \"approvalPerformerCheck\": \"活动，未设置参与者\",\r\n      \"noVariable1\": \"活动【变量设置】属性中已设置变量\",\r\n      \"noVariable2\": \"在流程属性【流程变量】中已不存在，请修改！\",\r\n      \"activity\": \"活动【\",\r\n      \"noStartActivity\": \"】的标识不合法，不是以[startActivity]开头\",\r\n      \"noExclusiveGateway\": \"】的标识不合法，不是以[ExclusiveGateway]开头\",\r\n      \"noParallelGateway\": \"】的标识不合法，不是以[ParallelGateway]开头\",\r\n      \"noUserActivity\": \"】的标识不合法，不是以[UserActivity]开头\",\r\n      \"noOperationActivity\": \"】的标识不合法，不是以[OperationActivity]开头\",\r\n      \"noNotifyActivity\": \"】的标识不合法，不是以[NotifyActivity]开头\",\r\n      \"noCallActivitySubProcess\": \"】的标识不合法，不是以[CallActivitySubProcess]开头\",\r\n      \"noAutoActivity\": \"】的标识不合法，不是以[AutoActivity]开头\",\r\n      \"noIntermediateCatchEvent\": \"】的标识不合法，不是以[IntermediateCatchEventImpl]开头\",\r\n      \"noMessageActivity\": \"】的标识不合法，不是以[MessageActivity]开头\",\r\n      \"noAifCreationBillActivity\": \"】的标识不合法，不是以[AifCreationBillActivity]开头\",\r\n      \"noEndEvent\": \"】的标识不合法，不是以[EndEvent]开头\",\r\n      \"mark\": \"标识为【\",\r\n      \"noFlowNodeChsName\": \"】的活动简体中文名称为空，请修改\",\r\n      \"nameExceedsLengthLimit\": \"】的名称超长，不能超过40个字符，请修改\"\r\n    },\r\n    \"processEditor\": {\r\n      \"tip\": \"提示\",\r\n      \"showButton\": \"显示查看模型按钮\",\r\n      \"changeRecord\": \"流程变更记录\",\r\n      \"noDtInfo\": \"不存在设计时流程信息！请先赋值！\",\r\n      \"noRtInfo\": \"不存在运行时流程信息！请先赋值！\",\r\n      \"wrongMoment\": \"设计器运行时机错误！\",\r\n      \"prompted\": \"系统提示\",\r\n      \"saveSuccess\": \"保存成功\",\r\n      \"waitReview\": \"保存成功，等待发起审核\",\r\n      \"successPublish\": \"发布成功\",\r\n      \"publishFail\": \"发布失败，\",\r\n      \"policyConflict\": \"会签策略下,“驳回规则”不允许“动态选择驳回级次”，请修改！\",\r\n      \"noPermissionToSave\": \"当前用户不具备另存流程的权限\",\r\n      \"closeProc1\": \"关闭此页面？\",\r\n      \"closeProc2\": \"系统可能不会保存您所做的更改。\",\r\n      \"viewModel\": \"查看模型\",\r\n      \"copied\": \"模型已经复制到剪贴板\",\r\n      \"button\": {\r\n        \"saveProc\": \"保存\",\r\n        \"releaseProc\": \"发布\",\r\n        \"sync\": \"同步设计时包\",\r\n        \"saveAs\": \"另存为\",\r\n        \"procRecord\": \"流程记录\",\r\n        \"viewProcModel\": \"查看模型\",\r\n        \"closeProc\": \"关闭\"\r\n      }\r\n    },\r\n    \"designer\": {\r\n      \"wfEditorUi\": {\r\n        \"basicElements\": \"基本元素\",\r\n        \"readOnly\": \"只读\"\r\n      },\r\n      \"wfProcessCell\": {\r\n        \"basicInfo\": \"基本信息\",\r\n        \"name\": \"名称\",\r\n        \"nameLanguage\": \"名称\",\r\n        \"key\": \"标识\",\r\n        \"entryForm\": \"流程分类\",\r\n        \"startMode\": \"启动方式\",\r\n        \"wfTitle\": \"流程摘要\",\r\n        \"formDef\": \"表单定义\",\r\n        \"formsPC\": \"PC表单\",\r\n        \"formsMobile\": \"移动表单\",\r\n        \"process\": \"事件监听\",\r\n        \"advanced\": \"高级属性\",\r\n        \"basic\": \"基础属性\",\r\n        \"wfComponent\": \"流程构件\",\r\n        \"otherConfig\": \"其他配置\",\r\n        \"processVariables\": \"流程变量\",\r\n        \"basicElements\": \"基本元素\",\r\n        \"customizeAction\": \"自定义动作\",\r\n        \"timelinessInfo\": \"时效信息\",\r\n        \"enablePriority\": \"启用紧急程度\",\r\n        \"enableWholeOrderRetrieve\": \"撤回在审单据\",\r\n        \"messageProperty\": \"影像设置\",\r\n        \"timeLimitControl\": \"超时操作\",\r\n        \"messageNotice\": \"消息通知\",\r\n        \"extendProperty\": \"扩展属性\",\r\n        \"directTips\": \"提示：启动方式切换为直接，直接启动是默认的流程启动方式，切换后会移除共享(PF)相关构件，请知悉！\",\r\n        \"externalTips\": \"提示：启动方式切换为外部流程，适用于作为共享流程的外部流程相关场景，切换后保留流程上的共享（PF)相关构件，请知悉！\",\r\n        \"subprocessTips\": \"提示：启动方式切换为子流程，适用于调用式子流程的场景，切换后会移除除取数构件外的其他流程构件，请知悉！\"\r\n      },\r\n      \"WfSequenceFlowEdge\": {\r\n        \"basicInfo\": \"基本信息\",\r\n        \"basic\": \"基础属性\",\r\n        \"name\": \"名称\",\r\n        \"nameLanguage\": \"名称\",\r\n        \"id\": \"标识\",\r\n        \"condition\": \"条件选项\",\r\n        \"ConditionExpression\": \"条件\",\r\n        \"default\": \"缺省转移线\"\r\n      },\r\n      \"wfSidebar\": {\r\n        \"bizactivitylib\": \"业务活动\"\r\n      }\r\n    },\r\n    \"app\": {\r\n      \"processDesigner\": {\r\n        \"all\": \"所有\",\r\n        \"assign\": \"指派\",\r\n        \"claim\": \"领用\",\r\n        \"preempt\": \"抢占模式\",\r\n        \"parallel\": \"并行会签\",\r\n        \"sequential\": \"串行会签\",\r\n        \"true\": \"是\",\r\n        \"false\": \"否\",\r\n        \"dataId\": \"单据内码\",\r\n        \"procInstId\": \"流程实例ID\",\r\n        \"bizDefKey\": \"入口单据ID\",\r\n        \"processDefinitionKey\": \"流程定义KEY\",\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"businessCreator\": \"业务发起人\",\r\n        \"procInstDescription\": \"流程摘要\",\r\n        \"comment\": \"审批意见\",\r\n        \"bizDefName\": \"流程分类名称\",\r\n        \"curLoginUsername\": \"当前登录人名称\",\r\n        \"procInstCreatorName\": \"流程发起人名称\",\r\n        \"currentParticipantId\": \"当前办理人ID\",\r\n        \"currentParticipantName\": \"当前办理人名称\",\r\n        \"currentUser\": \"当前登录用户\",\r\n        \"preActExecutors\": \"上一个活动的执行人\",\r\n        \"collectionElementVariable\": \"多实例子活动元素变量\",\r\n        \"subCollectionElementVariable\": \"多实例子流程元素变量\",\r\n        \"nrOfInstances\": \"多实例总数量\",\r\n        \"nrOfCompletedInstances\": \"多实例已完成数量\",\r\n        \"nrOfActiveInstances\": \"多实例正在运行中的数量\",\r\n        \"nrOfForward\": \"通过实例数量\",\r\n        \"nrOfBackward\": \"驳回实例数量\",\r\n        \"nrOfAbort\": \"终止实例数量\",\r\n        \"conclusionType\": \"结论类型\",\r\n        \"conclusionValue\": \"结论值\",\r\n        \"directSuperior\": \"直接上级\",\r\n        \"higherSuperior\": \"间接上级\",\r\n        \"DIRECT\": \"直接\",\r\n        \"EXTERNAL_PROCESS\": \"外部流程\",\r\n        \"SUB_PROCESS\": \"子流程\",\r\n        \"ALL\": \"电脑端和移动端\",\r\n        \"WEB\": \"电脑端\",\r\n        \"APP\": \"移动端\",\r\n        \"conclusionTypeTips\": \"审批项流转方向，1正向，2反向，3终止\",\r\n        \"conclusionValueTips\": `审批项编号，例如，\"Pass\"、\"Back\"、\"Refuse\"`,\r\n        \"copy\": \"_副本\",\r\n        \"saveAs\": \"另存为\",\r\n        \"tips\": \"系统提示\",\r\n        \"saveAsSuccess\": \"另存为成功\",\r\n        \"saveAsFail\": \"另存为失败，请检查流程是否正确！\",\r\n        \"syncDt\": \"是否将当前版本流程定义同步到设计时流程定义包\",\r\n        \"syncSuccess\": \"同步成功\",\r\n        \"beforeCompleteStrategyChange\": \"当前节点存在运行中的活动实例，不允许调整完成策略，请了解！\",\r\n        \"releaseProcess\": \"发布前审核\",\r\n        \"auto\": \"自动生单\",\r\n        \"push\": \"推式生单\",\r\n        \"pull\": \"拉式生单\",\r\n        \"creation\": \"通过生单流程生成目标单\"\r\n      }\r\n    },\r\n    \"multiInstanceLoopCharacteristics\": {\r\n      \"loopCharacteristics\": \"多实例设置\",\r\n      \"set\": \"（已设置）\",\r\n      \"notSet\": \"（未设置）\",\r\n      \"isEnable\": \"是否启用\",\r\n      \"isSequential\": \"是否串行\",\r\n      \"loopCardinality\": \"元素集合\",\r\n      \"completionConditionRules\": \"完成条件\",\r\n      \"promptAct1\": \"1、[集合]中的元素个数为子活动启动实例数量。\",\r\n      \"promptAct2\": \"2、子活动启动时系统会将[集合]中的元素拆分映射到各个子活动实例的[元素变量]。\",\r\n      \"promptProc1\": \"1、[集合]中的元素个数为子流程启动实例数量。\",\r\n      \"promptProc2\": \"2、子流程启动时系统会将[集合]中的元素拆分映射到各个子流程实例的[元素变量]。\",\r\n      \"checkPrompt\": \"当前节点存在运行中的活动实例，不允许调整\",\r\n      \"conditionRulesSet\": \"（已设置）\",\r\n      \"completionConditionRulesList\": {\r\n        \"forward\": \"正向\",\r\n        \"backward\": \"反向\",\r\n        \"abort\": \"终止\"\r\n      }\r\n    },\r\n    \"component\": {\r\n      \"optins\": {\r\n        \"wfOptions\": \"工作流选项\",\r\n        \"specified\": \"指定子流程\",\r\n        \"dynamic\": \"动态子流程\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"subProcessType\": \"子流程类型\",\r\n        \"processType\": \"流程类型\",\r\n        \"bizDef\": \"流程分类\",\r\n        \"procDef\": \"流程定义\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOk\": \"确定\"\r\n      },\r\n      \"voConfig\": {\r\n        \"documentInfo\": \"单据信息\",\r\n        \"viewModelSelection\": \"视图模型选择\",\r\n        \"cancel\": \"取消\",\r\n        \"clickOk\": \"确定\",\r\n        \"selectOne\": \"确定\",\r\n        \"documentTypeSelect\": \"单据类型选择\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"viewModel\": \"视图模型\",\r\n        \"documenttype\": \"单据类型\",\r\n        \"placeholder\": \"请选择\"\r\n      },\r\n      \"variableSetting\": {\r\n        \"constant\": \"常量\",\r\n        \"expression\": \"表达式\",\r\n        \"component\": \"构件\",\r\n        \"ACTIVITY_STARTED\": \"活动开始\",\r\n        \"ACTIVITY_COMPLETED\": \"活动结束\",\r\n        \"varAssign\": \"变量赋值\",\r\n        \"varNumber\": \"变量编号\",\r\n        \"REQUIRED\": \"必填\",\r\n        \"varName\": \"变量名称\",\r\n        \"valueType\": \"值类型\",\r\n        \"executionTime\": \"执行时机\",\r\n        \"valueText\": \"变量值\",\r\n        \"processVariables\": \"流程变量\",\r\n        \"notSelectedVar\": \"尚未选中变量！\",\r\n        \"valueCannotEmpty\": \"变量值不允许为空！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"删除\",\r\n        \"serialNumber\": \"序号\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"inconsistentParameters\": \"当前构件方法参数不一致，请更新！\",\r\n        \"methodNotExist\": \"当前构件已不存在此方法，请更新！\",\r\n        \"parameterName\": \"参数名\",\r\n        \"parameterValue\": \"参数值\",\r\n        \"methodnotSelected\": \"尚未选择构件方法\",\r\n        \"metadataNotExist\": \"帮助元数据不存在，请联系系统管理员查看原因！\",\r\n        \"errorObtainComponent\": \"获取解析构件出错\",\r\n        \"componentSelection\": \"构件选择\",\r\n        \"componentName\": \"构件名称\",\r\n        \"parameterList\": \"参数列表\",\r\n        \"lineNumber\": \"序号\"\r\n      },\r\n      \"urgeHandleRule\": {\r\n        \"urgentApproval\": \"催办审批：\",\r\n        \"pleaseApprove\": \"请您尽快审批\",\r\n        \"soOn\": \"的\",\r\n        \"urgeHandle\": \"催办\",\r\n        \"noSendingMethod\": \"尚未选择发送方式！\",\r\n        \"setMessageTemplate\": \"消息渠道启用短信时需设置消息模板\",\r\n        \"codeEmpty\": \"短信模板编号不允许为空\",\r\n        \"noMessageSubject\": \"尚未配置消息主题！\",\r\n        \"noMessageContent\": \"尚未选择消息内容！\",\r\n        \"earliestTimeNotEmpty\": \"最早允许催办时间不允许为空\",\r\n        \"minimumTimeNotEmpty\": \"最小允许催办间隔不允许为空\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"enableUrgeHandle\": \"启用催办\",\r\n        \"timeSetting\": \"时间设置\",\r\n        \"earliestTime\": \"最早允许催办时间（小时）\",\r\n        \"minimumInterval\": \"最小允许催办间隔（小时）\",\r\n        \"sendingMethod\": \"发送方式\",\r\n        \"messageSubject\": \"消息主题\",\r\n        \"supportEditing\": \"支持编辑\",\r\n        \"messageContent\": \"消息内容\",\r\n        \"displayReminder\": \"显示催办人\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"titleExpression\": {\r\n        \"zh-CHS\": \"中文简体\",\r\n        \"zh-CHT\": \"中文繁体\",\r\n        \"en\": \"英文\",\r\n        \"taskDescription\": \"任务描述\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"currentLanguage\": \"当前摘要语言:\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"timeLimitControl\": {\r\n        \"timedOutOperation\": \"超时操作\",\r\n        \"constant\": \"固定值\",\r\n        \"scope\": \"时间范围\",\r\n        \"day\": \"天\",\r\n        \"hour\": \"时\",\r\n        \"minute\": \"分\",\r\n        \"BeforeDuration\": \"到期之前\",\r\n        \"OnDuration\": \"到期时\",\r\n        \"AfterDuration\": \"到期之后\",\r\n        \"SendMessageExpireOperation\": \"超时预警\",\r\n        \"AutoHandleExpireOperation\": \"自动办理\",\r\n        \"curDay\": \"当天\",\r\n        \"durationType\": \"期限类型\",\r\n        \"required\": \"必填\",\r\n        \"timeDuration\": \"时长\",\r\n        \"timeUnit\": \"单位\",\r\n        \"operationTypeName\": \"操作类型名称\",\r\n        \"sendType\": \"操作\",\r\n        \"onlyBeInteger\": \"任务期限只能是整数！\",\r\n        \"setOperation\": \"请设置超时操作！\",\r\n        \"setType\": \"请设置自动办理类型！\",\r\n        \"setComments\": \"请设置自动办理意见！\",\r\n        \"selectedOperation\": \"尚未选中预警操作！\",\r\n        \"notSupportAutomatic\": \"下一节点是由当前办理人指派的话，当前节点不支持任务自动办理\",\r\n        \"warningMessage\": \"预警消息\",\r\n        \"automaticProcessing\": \"自动办理\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"timelinessControl\": \"任务处理时效控制\",\r\n        \"isEnable\": \"是否启用\",\r\n        \"taskDeadline\": \"任务期限\",\r\n        \"timelyOperation\": \"时效预警操作\",\r\n        \"actionList\": \"操作列表\",\r\n        \"add\": \"新增\",\r\n        \"remove\": \"删除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"workItemParticipant\": \"当前节点办理人\",\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"to-doMessageTimeOut\": \"您有一条待办消息即将超时。\",\r\n        \"messageTimeOut\": \"您有一条消息即将超时\",\r\n        \"agree\": \"同意\"\r\n      },\r\n      \"sendMessageOperation\": {\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"workItemParticipant\": \"当前节点办理人\",\r\n        \"preActExecutors\": \"上一节点办理人\",\r\n        \"day\": \"天\",\r\n        \"hour\": \"时\",\r\n        \"minute\": \"分\",\r\n        \"cycleTimeNotEmpty\": \"循环时间间隔不允许为空！\",\r\n        \"sendMethodNotEmpty\": \"发送方式不允许为空！\",\r\n        \"subjectNotEmpty\": \"消息主题不允许为空！\",\r\n        \"contentNotEmpty\": \"消息内容不允许为空！\",\r\n        \"recipientNotEmpty\": \"接收人不允许为空！\",\r\n        \"messageTemplate\": \"消息渠道启用短信时需设置消息模板\",\r\n        \"smsTemplateNumberNotEmpty\": \"短信模板编号不允许为空\",\r\n        \"cycleEnable\": \"启用循环预警\",\r\n        \"cycleTime\": \"循环时间间隔\",\r\n        \"sendType\": \"发送方式\",\r\n        \"subject\": \"消息主题\",\r\n        \"message\": \"消息内容\",\r\n        \"receiverVari\": \"接收人\",\r\n        \"sysUsers\": \"系统用户\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"opinionsNotEmpty\": \"自动办理意见不允许为空！\",\r\n        \"processingNotEmpty\": \"自动办理不允许为空！\",\r\n        \"automaticProcessSet\": \"自动办理设置\",\r\n        \"automaticProcessMethod\": \"自动办理方式\",\r\n        \"automaticOpinionHandle\": \"自动办理意见\"\r\n      },\r\n      \"smsMessageTemplate\": {\r\n        \"smsTemplateContent\": \"第三方短信服务商里定义的模板原文，例如:阿里云您的管控大数据平台账号已开通,用户名为:${username}，初始密码为:${code}，请及时登录系统\",\r\n        \"code\": \"变量\",\r\n        \"value\": \"值\",\r\n        \"noRowsSelected\": \"尚未选中行\",\r\n        \"smsMessageTemplate\": \"短信服务模板\",\r\n        \"tips1\": \"消息模板是指已经在第三方短信服务商定义模板后，需要在GS Cloud里将短信服务商的模板变量和GS Cloud变量关联\",\r\n        \"tips2\": \"第三方短信服务商里定义的模板编号，例如: 阿里云 SMS_220626324\",\r\n        \"tips3\": \"将第三方短信服务商模板里的变量和GSCloud里的变量配置关联\",\r\n        \"smsTemplateNumber\": \"短信模板编号\",\r\n        \"smsVariableBinding\": \"短信变量绑定\",\r\n        \"addSmsVariable\": \"新增\",\r\n        \"deleteSmsVariable\": \"删除\"\r\n      },\r\n      \"signRule\": {\r\n        \"countersignRules\": \"会签规则\",\r\n        \"byNumber\": \"按数量\",\r\n        \"byProportion\": \"按比例(%)\",\r\n        \"customConditions\": \"自定义条件\",\r\n        \"value\": \"编号\",\r\n        \"text\": \"名称\",\r\n        \"conclusionName\": \"结论名称\",\r\n        \"conclusionValue\": \"结论值\",\r\n        \"calculateType\": \"计算方式\",\r\n        \"conditionValue\": \"条件值\",\r\n        \"waitAllVotes\": \"等待全员办结\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"notEmpty\": \"完成策略为会签时，会签规则不允许为空，请了解！\",\r\n        \"pleaseSelect\": \"请首先选中一条审批项！\",\r\n        \"maxConditionValue\": \"条件值最大值是100\",\r\n        \"minConditionValue\": \"条件值最小值是0\",\r\n        \"noConditional\": \"结论执行方式为全票或一票时不需要条件值\",\r\n        \"set\": \"（已设置）\",\r\n        \"ruleList\": \"规则列表\",\r\n        \"approvalOptions\": \"审批选项\",\r\n        \"clickCancel\": \"取消\",\r\n        \"deleteRow\": \"重置\",\r\n        \"clickOK\": \"确定\",\r\n      },\r\n      \"saveAsEdit\": {\r\n        \"public\": \"公有\",\r\n        \"private\": \"私有\",\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"nameNotEmpty\": \"流程名称不能为空\",\r\n        \"organizationNotEmpty\": \"维护组织不能为空\",\r\n        \"organization\": \"组织\",\r\n        \"basicAttributes\": \"基础属性\",\r\n        \"processName\": \"流程名称\",\r\n        \"processKeyValue\": \"流程Key值\",\r\n        \"maintenanceOrg\": \"维护组织\",\r\n        \"accessLevel\": \"访问级别\",\r\n        \"saveAsCancel\": \"取消\",\r\n        \"saveAsOK\": \"确定\"\r\n      },\r\n      \"release\": {\r\n        \"release\": \"流程发布\",\r\n        \"update\": \"流程更新\",\r\n        \"applicantName\": \"申请人名称\",\r\n        \"applicantDepartment\": \"申请人部门\",\r\n        \"procName\": \"流程名称\",\r\n        \"procVersion\": \"流程版本\",\r\n        \"releaseType\": \"发布类型\",\r\n        \"textDetail\": \"说明\",\r\n        \"saveAsCancel\": \"取消\",\r\n        \"saveAsOK\": \"确定\"\r\n      },\r\n      \"processVariables\": {\r\n        \"string\": \"字符\",\r\n        \"integer\": \"整形\",\r\n        \"decimal\": \"小数\",\r\n        \"boolean\": \"布尔\",\r\n        \"constant\": \"常量\",\r\n        \"expression\": \"表达式\",\r\n        \"component\": \"构件\",\r\n        \"name\": \"变量编号\",\r\n        \"required\": \"必填\",\r\n        \"documentation\": \"变量名称\",\r\n        \"basicType\": \"变量类型\",\r\n        \"description\": \"描述\",\r\n        \"tag\": \"初始值类型\",\r\n        \"valueText\": \"初始值\",\r\n        \"processVariables\": \"流程变量\",\r\n        \"notSelected\": \"尚未选中流程变量！\",\r\n        \"variableNumberEmpty\": \"变量编号不允许为空！\",\r\n        \"variableNameEmpty\": \"变量名称不允许为空！\",\r\n        \"variableNumberNotStandard\": \"变量编号只能包含字母、数字和下划线，且不能以数字开头！\",\r\n        \"tagNotEmpty\": \"初始值类型不允许为空！\",\r\n        \"codeDuplicates\": \"流程变量编号不允许重复！\",\r\n        \"alreadyExists\": \"新增的变量已存在！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"删除\",\r\n        \"number\": \"序号\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"participant\": {\r\n        \"user\": \"用户\",\r\n        \"variable\": \"变量参与者\",\r\n        \"position\": \"岗位\",\r\n        \"role\": \"角色\",\r\n        \"component\": \"构件参与者\",\r\n        \"reportingLine\": \"汇报关系\",\r\n        \"matrix\": \"矩阵\",\r\n        \"activityExecutor\": \"历史活动办理人\",\r\n        \"organization\": \"单位/部门\",\r\n        \"all\": \"所有\",\r\n        \"assign\": \"指派\",\r\n        \"claim\": \"领用\",\r\n        \"currentUser\": \"当前办理人\",\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"participantSet\": \"参与者设置\",\r\n        \"order\": \"序号\",\r\n        \"type\": \"类型\",\r\n        \"performerName\": \"名称\",\r\n        \"description\": \"描述\",\r\n        \"condition\": \"启用条件\",\r\n        \"dataMovement1\": \"是否将默认办理人数据移动到到备选办理人？\",\r\n        \"dataMovement2\": \"是否将备选办理人数据移动到默认办理人？\",\r\n        \"participantSelection\": \"参与者选择\",\r\n        \"selectProcessVariables\": \"尚未选择流程变量！\",\r\n        \"selectVariableValueType\": \"尚未选择变量值类型！\",\r\n        \"selectRelation\": \"尚未选择关系！\",\r\n        \"selectPosition\": \"尚未选择岗位！\",\r\n        \"selectOrgType\": \"尚未选择组织类型！\",\r\n        \"orgFill\": \"尚未填写组织！\",\r\n        \"refOrgIdNotNull\": \"参照类型为组织时，参照组织字段不能为空\",\r\n        \"refUserIdNotNull\": \"参照类型为系统用户/员工时，参照人字段不能为空\",\r\n        \"repDefConfigured\": \"该汇报关系已经进行过配置\",\r\n        \"atLeastOneCondition\": \"条件字段至少要存在一个\",\r\n        \"dataFieldAliasNotNull\": \"数据字段不能为空\",\r\n        \"matrixConfigured\": \"该矩阵已经进行过配置\",\r\n        \"selectPerformer\": \"尚未选择参与者\",\r\n        \"definitionDeleted\": \"该条汇报关系数据的定义已删除，该条数据将删除\",\r\n        \"matrixDeleted\": \"该条矩阵数据的定义已删除，该条数据将删除\",\r\n        \"selectParticipantInfo\": \"请先选中一条参与者信息！\",\r\n        \"noRowSelected\": \"尚未选中行！\",\r\n        \"selectDefaultHandler\": \"请先选中一条默认办理人\",\r\n        \"selectpotentialtHandler\": \"请先选中一条备选办理人\",\r\n        \"org\": \"组织：\",\r\n        \"positionType1\": \"岗位类型：通用岗位，组织：\",\r\n        \"positionType2\": \"岗位类型：通用岗位\",\r\n        \"positionType3\": \"岗位类型：组织岗位\",\r\n        \"comp\": \"构件：\",\r\n        \"parameters:\": \",参数：{\",\r\n        \"referencePerson:\": \"参照人：\",\r\n        \"referenceOrganization:\": \"参照组织：\",\r\n        \"condition1\": \"条件1：\",\r\n        \"condition2\": \"条件2：\",\r\n        \"condition3\": \"条件3：\",\r\n        \"data\": \"数据：\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"allocationPolicy\": \"分配策略\",\r\n        \"operator\": \"指派操作人\",\r\n        \"multiSelect\": \"允许多选\",\r\n        \"necessary\": \"只有一个待选用户时，仍需手工选择\",\r\n        \"notifyRecipient\": \"知会接收人\",\r\n        \"defaultHandler\": \"默认办理人\",\r\n        \"new\": \"新增\",\r\n        \"editPerformer\": \"编辑\",\r\n        \"removePerformer\": \"移除\",\r\n        \"clearPerformer\": \"清空\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"alternativeHandler\": \"备选办理人\",\r\n        \"isAllScope\": \"指定参与人时不限范围，从全员用户中选择\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"alternativeScope\": \"备选范围\",\r\n        \"orgId\": \"组织ID\",\r\n        \"includeChildren\": \"包含下级\",\r\n        \"conditon\": \"启用条件\",\r\n        \"currentUnit\": \"本单位\",\r\n        \"currentDepartment\": \"本部门\",\r\n        \"variableOrganization\": \"变量组织\"\r\n      },\r\n      \"activityExecutor\": {\r\n        \"name\": \"名称\",\r\n        \"eventHandler\": \">活动办理人\",\r\n        \"nodeName\": \"节点名称\",\r\n        \"enablingConditions\": \"启用条件\",\r\n        \"activityList\": \"活动列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"componentPerformer\": {\r\n        \"componentMethod\": \"当前构件方法参数不一致，请更新！\",\r\n        \"methodNotExist\": \"当前构件已不存在此方法，请更新！\",\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"description\": \"描述\",\r\n        \"valueText\": \"参数值\",\r\n        \"help\": \"帮助\",\r\n        \"errorObtaining\": \"获取解析构件出错\",\r\n        \"componentSelection\": \"构件选择\",\r\n        \"metadataNotExist\": \"帮助元数据不存在！\",\r\n        \"serverSideNotFound\": \"服务器端未找到帮助元数据，请检查元数据是否已经部署到环境中\",\r\n        \"componentName\": \"构件名称\",\r\n        \"componentSelect\": \"构件选择\",\r\n        \"parameterList\": \"参数列表\"\r\n      },\r\n      \"matrixPerformer\": {\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"help\": \"帮助\",\r\n        \"multivalue\": \"多值\",\r\n        \"enumSelection\": \"枚举选择\",\r\n        \"refMatrixTable\": \"引用矩阵表\",\r\n        \"matrixTable\": \"矩阵表\",\r\n        \"curDataFieldValue\": \"结果列\",\r\n        \"conditionFields\": \"条件字段\",\r\n        \"condition\": \"启用条件\",\r\n        \"key\": \"键\",\r\n        \"value\": \"值\",\r\n        \"notSelectEnum\": \"尚未选中枚举值\",\r\n        \"cancel\": \"取消\",\r\n        \"onConfirm\": \"确定\",\r\n        \"lineNumber\": \"序号\"\r\n      },\r\n      \"performerOptions\": {\r\n        \"leave\": \"向下流转\",\r\n        \"throwException\": \"异常提示\",\r\n        \"sys\": \"用户ID\",\r\n        \"administrative_staff\": \"员工ID\",\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"preActExecutors\": \"上一节点办理人\",\r\n        \"allPassExecutors\": \"所有已办理人员\",\r\n        \"performerOptions\": \"参与者选项\",\r\n        \"exclusionNotAllowed\": \"所有已办理人员已设置自动审批，上个节点已办理人员默认不允许排除！\",\r\n        \"approvalNotAllowed\": \"【分配策略】为【领用】时，不允许设置自动审批，请了解！\",\r\n        \"approvalNotAllowedAsSet\": \"所有已办理人员已设置不允许审批，所以上个节点已办理人员默认不允许自动审批！\",\r\n        \"allocationStrategyIsCollect\": \"【分配策略】为【领用】时，不允许设置自动审批，请了解！\",\r\n        \"set\": \"（已设置）\",\r\n        \"advancedOptions\": \"参与者高级选项\",\r\n        \"historicFirst\": \"再次进入节点时，办理人是节点的已办人员\",\r\n        \"noPerformerStrategy\": \"办理人为空策略：\",\r\n        \"excludeProcInstCreator\": \"排除办理人选项\",\r\n        \"defaultNotParticipate\": \"流程发起人默认不参与审批\",\r\n        \"excludePreActExecutors\": \"上个节点已办理人员默认不参与审批\",\r\n        \"excludeAllPassExecutors\": \"所有已办理人员默认不参与审批\",\r\n        \"excludeExprPerformer\": \"流程变量：\",\r\n        \"variableOrgTypes\": \"变量值类型：\",\r\n        \"automaticApprovalOptions\": \"自动审批选项\",\r\n        \"autoProcInstCreator\": \"流程发起人默认自动审批通过\",\r\n        \"autoPreActExecutors\": \"上一节点办理人员默认自动审批通过\",\r\n        \"autoAllPassExecutors\": \"所有已办理人员默认自动审批通过\",\r\n        \"cancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"positionPerformer\": {\r\n        \"orgPosition\": \"组织岗\",\r\n        \"generalPosition\": \"通用岗\",\r\n        \"sysPositions\": \"系统岗位\",\r\n        \"positionType\": \"岗位类型\",\r\n        \"role\": \"角色\",\r\n        \"position\": \"岗位\",\r\n        \"sysType\": \"组织类型\",\r\n        \"placeholder\": \"请选择\",\r\n        \"orgId\": \"组织ID\",\r\n        \"condition\": \"启用条件\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"reportingLine\": {\r\n        \"higherSuperior\": \"间接上级\",\r\n        \"directSuperior\": \"直接上级\",\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"dept\": \"组织\",\r\n        \"sysUser\": \"系统用户\",\r\n        \"employee\": \"员工\",\r\n        \"businessFields\": \"业务字段\",\r\n        \"defName\": \"汇报定义\",\r\n        \"dimension\": \"汇报级别\",\r\n        \"curReportingRefer\": \"参照类型\",\r\n        \"usersName\": \"参照人\",\r\n        \"refOrgId\": \"参照组织\",\r\n        \"condition\": \"启用条件\",\r\n        \"definitionOfReport\": \"汇报关系定义\"\r\n      },\r\n      \"userPerformer\": {\r\n        \"regularUser\": \"固定用户\",\r\n        \"variablePart\": \"变量参与者\",\r\n        \"sys\": \"系统用户\",\r\n        \"administrative_organization\": \"员工\",\r\n        \"cantUseContext\": \"行政人员类型不能使用此上下文变量\",\r\n        \"user\": \"用户\",\r\n        \"variable\": \"变量\",\r\n        \"condition\": \"启用条件\"\r\n      },\r\n      \"variablePerformer\": {\r\n        \"sys\": \"用户ID\",\r\n        \"administrative_staff\": \"员工ID\",\r\n        \"oneself\": \"本人\",\r\n        \"administrative_organization\": \"部门ID\",\r\n        \"cantUseContext\": \"行政人员类型不能使用此上下文变量\",\r\n        \"processVariables\": \"流程变量\",\r\n        \"variableOrgTypes\": \"变量值类型\",\r\n        \"relationShipType\": \"关系\",\r\n        \"condition\": \"启用条件\",\r\n      },\r\n      \"orgPotentialOwner\": {\r\n        \"optionSettings\": \"选项设置\",\r\n        \"global\": \"全员\",\r\n        \"currentUnit\": \"本单位\",\r\n        \"currentDepartment\": \"本部门\",\r\n        \"addSignBehind\": \"加签\",\r\n        \"addSignFront\": \"征询\",\r\n        \"transfer\": \"移交\",\r\n        \"notify\": \"知会\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"option\": \"选项\",\r\n        \"enable\": \"是否启用\",\r\n        \"range\": \"范围\",\r\n        \"orgId\": \"组织ID\",\r\n        \"variableOrganization\": \"变量组织\",\r\n        \"includeChildren\": \"包含下级\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"limit\": \"限定人员范围\",\r\n        \"turnOffPrompt\": \"请关闭限定人员范围选项\"\r\n      },\r\n      \"note\": {\r\n        \"placeholder\": \"请输入流程变更记录\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"MessageNotice\": {\r\n        \"notify\": \"消息通知\",\r\n        \"subject\": \"消息主题\",\r\n        \"content\": \"消息内容\",\r\n        \"sendTime\": \"发送时机\",\r\n        \"sendType\": \"发送方式\",\r\n        \"receiverText\": \"消息接收人\",\r\n        \"procInstCreator\": \"流程发起人，\",\r\n        \"workItemParticipant\": \"任务接收人，\",\r\n        \"messageSet\": \"消息设置\",\r\n        \"selectedRow\": \"尚未选中消息通知！\",\r\n        \"noCopy\": \"没有待复制的消息通知属性！\",\r\n        \"batchCopy\": \"批量复制\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"add\": \"新增\",\r\n        \"edit\": \"编辑\",\r\n        \"delete\": \"删除\",\r\n        \"lineNumber\": \"序号\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"messContent\": `{\"expr\":\"\\'您有一条消息通知。\\'\",\"sexpr\":\"\"}`,\r\n        \"procComplete\": \"流程完成\",\r\n        \"procAborted\": \"流程终止\",\r\n        \"procRollBack\": \"流程驳回\",\r\n        \"workCreated\": \"任务创建\",\r\n        \"actComplete\": \"活动完成\",\r\n        \"actAborted\": \"活动终止\",\r\n        \"email\": \"邮件\",\r\n        \"sms\": \"短信\",\r\n        \"cloudplus\": \"云\",\r\n        \"processParticipant\": \"流程参与人\",\r\n        \"variableParticipant\": \"变量参与者\",\r\n        \"userParticipant\": \"指定用户\",\r\n        \"positionParticipant\": \"岗位\",\r\n        \"activityExecutorParticipant\": \"历史办理人\",\r\n        \"sys\": \"系统用户\",\r\n        \"administrative_organization\": \"员工\",\r\n        \"name\": \"名称\",\r\n        \"noTargetNode\": \"尚未选中节点！\",\r\n        \"noMessageNotifyAttribute!\": \"没有消息通知属性！\"\r\n      },\r\n      \"messageNoticeEdit\": {\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"activityExecutorParticipant\": \"历史办理人\",\r\n        \"workItemParticipant\": \"任务办理人\",\r\n        \"sys\": \"系统用户\",\r\n        \"administrative_organization\": \"员工\",\r\n        \"processParticipant\": \"流程参与人\",\r\n        \"workItemReceiveParticipant\": \"任务接收人\",\r\n        \"variableParticipant\": \"变量参与者\",\r\n        \"userParticipant\": \"指定用户\",\r\n        \"positionParticipant\": \"岗位\",\r\n        \"sendType\": \"发送方式不允许为空\",\r\n        \"smsMessageTemplate\": \"消息渠道启用短信时需设置消息模板\",\r\n        \"smsMessageTemplateCode\": \"短信模板编号不允许为空\",\r\n        \"sendTime\": \"发送时机不允许为空\",\r\n        \"subject\": \"消息主题不允许为空\",\r\n        \"content\": \"消息内容不允许为空\",\r\n        \"receivers\": \"接收人不允许为空！\",\r\n        \"processParticipantNotNull\": \"流程参与人不允许为空\",\r\n        \"activityDefIdNotNull\": \"流程参与人为历史办理人时，办理节点不允许为空\",\r\n        \"variableParticipantNotNull\": \"变量参与者不允许为空\",\r\n        \"orgType\": \"变量参与者组织类型不允许为空\",\r\n        \"userIds\": \"指定用户不允许为空\",\r\n        \"positionId\": \"岗位不允许为空\",\r\n        \"activityList\": \"活动列表\",\r\n        \"position\": \"岗位\",\r\n        \"optionalNodes\": \"可选节点\",\r\n        \"targetNodeList\": \"目标节点列表\",\r\n        \"placeholder\": \"请选择目标节点\",\r\n        \"optionalAttribute\": \"可选属性\",\r\n        \"lineNumber\": \"序号\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"messSendType\": \"消息渠道\",\r\n        \"messSubject\": \"消息主题\",\r\n        \"enable\": \"启用表达式\",\r\n        \"messContent\": \"消息内容\",\r\n        \"recipient\": \"接收人\",\r\n        \"addReceiver\": \"添加\",\r\n        \"organization\": \"组织：\",\r\n        \"posi\": \"岗位：\"\r\n      },\r\n      \"jumpScope\": {\r\n        \"targetNodeOptions\": \"目标节点选项\",\r\n        \"name\": \"名称\",\r\n        \"outConnectNode\": \"流程图连线节点\",\r\n        \"global\": \"流程内所有节点\",\r\n        \"afterNodes\": \"所有后继节点\",\r\n        \"specifiedSet\": \"流程图连线节点+附加节点\",\r\n        \"firstNode\": \"条件为true的连线节点，当有多条时默认选中首条\",\r\n        \"nullNode\": \"默认为空，每次都手动选择\",\r\n        \"specifyNode\": \"指定默认节点\",\r\n        \"noSetTargetNode\": \"尚未设置目标节点选项，请了解！\",\r\n        \"noSetSpecifyNode\": \"尚未指定默认节点，请了解！\",\r\n        \"selectedRow\": \"请首先选中一条选项！\",\r\n        \"optionalNodes\": \"可选节点\",\r\n        \"listOfAdditional\": \"附加节点列表\",\r\n        \"pleaseSelect1\": \"请选择附加节点\",\r\n        \"defaultNode\": \"默认节点\",\r\n        \"pleaseSelect2\": \"请选择默认节点\",\r\n        \"defaultNodeList\": \"默认节点列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"set\": \"（已设置）\"\r\n      },\r\n      \"imageSet\": {\r\n        \"imageSet\": \"影像设置\",\r\n        \"onlyView\": \"仅可查看\",\r\n        \"edit\": \"编辑\",\r\n        \"reScanStart\": \"发起重扫\",\r\n        \"reScanComplete\": \"重扫完成\",\r\n        \"mutualExclusion\": \"【仅可查看】选项与其他选项互斥，请了解！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"imageOperation\": \"影像操作权限\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"extendProperty\": {\r\n        \"extendProperty\": \"扩展属性\",\r\n        \"true\": \"是\",\r\n        \"false\": \"否\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"illustrate\": \"说明\",\r\n        \"placeholder\": \"请选择\",\r\n        \"cancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"expressionEditor\": {\r\n        \"expressionEditor\": \"条件编辑\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"clickCancel\": \"取消\",\r\n        \"changeType\": \"切换类型\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"executeForms\": {\r\n        \"executeForms\": \"表单定义\",\r\n        \"parameters\": \"参数【\",\r\n        \"typeAsvariable\": \"】类型为变量，但在流程变量里不存在\",\r\n        \"parameterSettings\": \"参数设置\",\r\n        \"formDefinitionList\": \"表单定义列表\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"default\": \"流程默认表单\",\r\n        \"processEmbeddedForm\": \"流程嵌表单\",\r\n        \"formEmbedProcess\": \"表单嵌流程\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"noForm\": \"暂无表单格式\",\r\n        \"form\": \"选择表单\",\r\n        \"placeholder\": \"请选择\",\r\n        \"parametersSet\": \"参数\",\r\n        \"key\": \"变量编号\",\r\n        \"name\": \"变量名称\",\r\n        \"lineNumber\": \"序号\",\r\n        \"code\": \"编号\",\r\n        \"tag\": \"类型\",\r\n        \"value\": \"参数值\",\r\n        \"variable\": \"变量\",\r\n        \"constant\": \"常量\",\r\n        \"expression\": \"表达式\",\r\n        \"method\": \"方法标识\",\r\n        \"methodName\": \"方法名称\",\r\n        \"description\": \"描述\",\r\n        \"workFlowAction\": \"流转方向\",\r\n        \"formOperations\": \"表单操作\",\r\n        \"executionTime\": \"执行时机\",\r\n        \"sortOrder\": \"执行顺序\",\r\n        \"methodParameters\": \"参数\",\r\n        \"selectFormActionConfig\": \"尚未选中表单操作配置！\",\r\n        \"selectFormAction\": \"尚未选中表单操作！\",\r\n        \"editParam\": \"设置\",\r\n        \"formEvents\": \"表单事件\",\r\n        \"buttonName\": \"按钮名称\",\r\n        \"enable\": \"是否可用\",\r\n        \"disabled\": \"是否禁用\",\r\n        \"hidden\": \"是否隐藏\",\r\n        \"fieldName\": \"字段名称\",\r\n        \"editable\": \"是否可写\",\r\n        \"readonly\": \"是否只读\",\r\n        \"required\": \"是否必填\",\r\n        \"saveFail\": \"保存配置失败，请联系管理员查看原因！\",\r\n        \"checkedRows\": \"尚未选择按钮集合\",\r\n        \"checkeds\": \"尚未选择字段集合\",\r\n        \"enableBtn\": \"可用\",\r\n        \"disabledBtn\": \"禁用\",\r\n        \"hiddenBtn\": \"隐藏\",\r\n        \"btnBatchReset\": \"重置\",\r\n        \"editableBtn\": \"可写\",\r\n        \"readonlyBtn\": \"只读\",\r\n        \"requiredBtn\": \"必填\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"删除\",\r\n        \"other\": \"其他\",\r\n        \"formBtn\": \"表单按钮\",\r\n        \"formfield\": \"表单字段\",\r\n        \"apptag\": \"单据类型\",\r\n        \"functionMenu\": \"功能菜单\",\r\n        \"formFormat\": \"表单格式\",\r\n        \"docFormatNumber\": \"单据格式编号\",\r\n        \"docFormatName\": \"单据格式名称\",\r\n        \"selectedRow\": \"尚未选择表单定义！\",\r\n        \"set\": \"（已设置）\"\r\n      },\r\n      \"eventDefinition\": {\r\n        \"eventDefinition\": \"信号定义\",\r\n        \"pass\": \"正向\",\r\n        \"back\": \"反向\",\r\n        \"abort\": \"终止\",\r\n        \"signalRef\": \"信号编号\",\r\n        \"name\": \"信号名称\",\r\n        \"triggerAction\": \"流转方向\",\r\n        \"selectedRow\": \"尚未选中一条触发事件！\",\r\n        \"dataLength\": \"至少需要一个信号定义，请了解！\",\r\n        \"codeNotNull\": \"信号编号不允许为空！\",\r\n        \"nameNotNull\": \"信号名称不允许为空！\",\r\n        \"codeNotNumber\": \"信号编号不允许为纯数字！\",\r\n        \"codeRepeat\": \"信号编号不允许重复！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"删除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"entryFormEditor\": {\r\n        \"flowForm\": \"流程分类\",\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"base\": \"类型\",\r\n        \"foundation\": \"基础\",\r\n        \"extend\": \"扩展\",\r\n        \"selectedRow\": \"尚未选择流程分类\",\r\n        \"absent\": \"流程分类已经不存在\",\r\n        \"lineNumber\": \"序号\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"重新绑定\"\r\n      },\r\n      \"editComponentParameter\": {\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"required\": \"必填\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"value\": \"参数值\",\r\n        \"openComponentFail\": \"获取解析构件出错\",\r\n        \"componentSelection\": \"构件选择\",\r\n        \"curComponent\": \"请选择流程构件\",\r\n        \"executionTime\": \"请选择执行时机\",\r\n        \"para\": \"参数\",\r\n        \"paraRequired\": \"】必填\",\r\n        \"execuTime\": \"执行时机\",\r\n        \"parameterList\": \"参数列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"customizeAction\": {\r\n        \"customizeAction\": \"自定义动作\",\r\n        \"app\": \"移动\",\r\n        \"web\": \"web\",\r\n        \"all\": \"web,移动\",\r\n        \"name\": \"名称\",\r\n        \"code\": \"编号\",\r\n        \"terminalType\": \"适用终端\",\r\n        \"isAll\": \"是否默认\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"paramName\": \"编号\",\r\n        \"valueText\": \"名称\",\r\n        \"value\": \"参数值\",\r\n        \"addActions\": \"自定义动作选择\",\r\n        \"actionExisted\": \"新增的自定义动作已经存在！\",\r\n        \"selectedRow\": \"请首先选中一条选项！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"删除\",\r\n        \"parameterList\": \"参数列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"checkCondition\": {\r\n        \"zhChs\": \"简体中文\",\r\n        \"zhCht\": \"繁体中文\",\r\n        \"en\": \"英文\",\r\n        \"checkCondition\": \"活动校验规则\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"nodeEntry\": \"节点进入\",\r\n        \"activityBeforeStarted\": \"节点进入条件\",\r\n        \"enterErrorTips\": \"进入条件不匹配提示语\",\r\n        \"activityBeforeCompleted\": \"节点离开\",\r\n        \"activityBeforeCompletedValue\": \"节点离开条件\",\r\n        \"leaveErrorTips\": \"离开条件不匹配提示语\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"batchSet\": {\r\n        \"targetNode\": \"目标节点\",\r\n        \"addSignFront\": \"征询\",\r\n        \"addSignBehind\": \"加签\",\r\n        \"transfer\": \"移交\",\r\n        \"notify\": \"知会\",\r\n        \"backWardRule\": \"驳回规则\",\r\n        \"name\": \"名称\"\r\n      },\r\n      \"subProcess\": {\r\n        \"subProcessSet\": \"子流程设置\",\r\n        \"specified\": \"指定子流程\",\r\n        \"dynamic\": \"动态子流程\",\r\n        \"inheritParent\": \"与父流程相同\",\r\n        \"autoCreation\": \"自动生成下游单据\",\r\n        \"variablesExpression\": \"变量表达式\",\r\n        \"rteNull\": \"请选中一条生单流程\",\r\n        \"orderProcess\": \"生单流程\",\r\n        \"clickOk\": \"确定\",\r\n        \"clickCancel\": \"取消\",\r\n        \"inheritBizDataId\": \"当子流程与父流程单据不一致时，请设置子流程单据内码！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"radioGroupProcessType\": \"子流程类型\",\r\n        \"flowForm\": \"流程分类\",\r\n        \"processDef\": \"流程定义\",\r\n        \"radioGroupBillSource\": \"单据来源\",\r\n        \"autoCreationProcess\": \"生单流程\",\r\n        \"bizDataId\": \"单据内码\",\r\n        \"setOption\": \"设置选项\",\r\n        \"SameParentProcess\": \"与父流程同一张业务单据\",\r\n        \"setBizDataId\": \"设置单据内码\",\r\n        \"subProcessOpt\": \"子流程选项\"\r\n      },\r\n      \"backwardRule\": {\r\n        \"reEdit\": \"驳回活动节点已不存在，请重新编辑\",\r\n        \"backwardRule\": \"驳回规则\",\r\n        \"initialActityId\": \"开始节点\",\r\n        \"precursorActivityId\": \"前置节点\",\r\n        \"empty\": \"空\",\r\n        \"name\": \"名称\",\r\n        \"id\": \"标识\",\r\n        \"sequence\": \"顺序流转\",\r\n        \"backToMe\": \"返回我\",\r\n        \"backToCurrentNode\": \"返回本节点\",\r\n        \"popover\": \"1.顺序流转:按照流转线顺序进行流转; 2.返回我:完成策略为抢占：只给驳回人创建任务,完成策略为会签：驳回人与未审批人收到新任务，已审批人员自动审批通过; 3.返回本节点:实际效果受“再次进入节点时，办理人是否是节点已办人员影响”选项的影响\",\r\n        \"selectAbleClick\": \"会签策略下，不允许动态选择驳回目标节点!\",\r\n        \"dictPicked\": \"“驳回至空”选项请搭配“允许动态选择驳回目标节点”使用\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"rejectedTo:\": \"驳回至：\",\r\n        \"backScope\": \"驳回范围\",\r\n        \"defaultPrompt\": \"默认选取全部历史驳回节点\",\r\n        \"title\": \"活动列表\",\r\n        \"dynamicSelection\": \"允许动态选择驳回目标节点\",\r\n        \"resubmitEffectOptions\": \"返回设置\",\r\n        \"popover1\": \"1.顺序流转:按照流转线顺序进行流转; \",\r\n        \"popover2\": \"2.返回我:完成策略为抢占：只给驳回人创建任务,完成策略为会签：驳回人与未审批人收到新任务，已审批人员自动审批通过;\",\r\n        \"popover3\": \"3.返回本节点:实际效果受“再次进入节点时，办理人是否是节点已办人员影响”选项的影响\",\r\n        \"allowModification\": \"允许修改返回设置\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOk\": \"确定\"\r\n      },\r\n      \"assignStrategy\": {\r\n        \"all\": \"所有\",\r\n        \"assign\": \"指派\",\r\n        \"claim\": \"领用\",\r\n        \"currentUser\": \"当前办理人\",\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"assignStrategy\": \"分配策略\",\r\n        \"option\": \"选项\",\r\n        \"assignmentRules\": \"指派规则\",\r\n        \"operator\": \"指派操作人\",\r\n        \"multiSelect\": \"允许选择多个待选用户\",\r\n        \"necessary\": \"只有一个待选用户时，仍需手工选择\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"assignScope\": {\r\n        \"assignScopeList\": \"指派节点列表\",\r\n        \"required\": \"必填\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"condition\": \"条件\",\r\n        \"add\": \"增加\",\r\n        \"delete\": \"删除\",\r\n        \"name\": \"名称\",\r\n        \"deleteRow\": \"请首先选中一条选项！\",\r\n        \"curActivity\": \"尚未选中行\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"nodeList\": \"节点列表\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"assignPerformer\": {\r\n        \"currentUser\": \"当前办理人\",\r\n        \"procInstCreator\": \"流程发起人\",\r\n        \"global\": \"全员\",\r\n        \"currentUnit\": \"本单位\",\r\n        \"currentDepartment\": \"本部门\",\r\n        \"assignPerformer\": \"指派规则\",\r\n        \"set\": \"（已设置）\",\r\n        \"operator\": \"指派操作人\",\r\n        \"multiSelect\": \"允许选择多个待选用户\",\r\n        \"necessary\": \"只有一个待选用户时，仍需手工选择\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"approvelItems\": {\r\n        \"approvalOptions\": \"审批选项\",\r\n        \"forward\": \"正向\",\r\n        \"backward\": \"反向\",\r\n        \"abort\": \"终止\",\r\n        \"value\": \"编号\",\r\n        \"text\": \"名称\",\r\n        \"workFlowAction\": \"流转方向\",\r\n        \"isDefault\": \"默认\",\r\n        \"no\": \"否\",\r\n        \"yes\": \"是\",\r\n        \"commentNecessary\": \"意见必填\",\r\n        \"attachmentNecessary\": \"附件上传\",\r\n        \"certification\": \"数字签名\",\r\n        \"signatureNecessary\": \"手写签名必填\",\r\n        \"defaultComment\": \"默认意见\",\r\n        \"zh-CHS\": \"中文简体\",\r\n        \"zh-CHT\": \"中文繁体\",\r\n        \"en\": \"英文\",\r\n        \"workFlowActionNotNull\": \"审批项流转方向不允许为空，请修改！\",\r\n        \"deleteRow\": \"请首先选中一条选项！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"删除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\",\r\n        \"approvalAction\": \"审批动作\",\r\n        \"lineNumber\": \"序号\"\r\n      },\r\n      \"approvalPivot\": {\r\n        \"remind\": \"文字提示\",\r\n        \"type\": \"类型\",\r\n        \"condition\": \"条件\",\r\n        \"title\": \"显示名称\",\r\n        \"description\": \"详细说明\",\r\n        \"approvalPivot\": \"审批要点\",\r\n        \"selectedRow\": \"尚未选中审批要点！\",\r\n        \"configTitle\": \"尚未填写显示标题！\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"enable\": \"是否启用\",\r\n        \"expand\": \"是否展开\",\r\n        \"showTitle\": \"显示标题\",\r\n        \"list\": \"列表\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"删除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"anonymousSet\": {\r\n        \"anonymousOpt\": \"匿名选项\",\r\n        \"approver\": \"审批人\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"anonymousSet\": \"匿名设置\",\r\n        \"isAnonymity\": \"是否启用\",\r\n        \"anonymous\": \"匿名代称\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"activityList\": {\r\n        \"name\": \"名称\",\r\n        \"checkeds\": \"尚未选择活动节点\",\r\n        \"lineNumber\": \"序号\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      },\r\n      \"activityComponent\": {\r\n        \"component\": \"构件\",\r\n        \"method\": \"构件方法\",\r\n        \"inconsistentParameters\": \"参数不一致，请检查\",\r\n        \"longerExists\": \"构件已不存在此构件方法\",\r\n        \"absent\": \"取消\",\r\n        \"pleaseCheck\": \"，请检查\",\r\n        \"edit\": \"编辑\",\r\n        \"deleteRow\": \"删除\",\r\n        \"executionTime\": \"执行时机\",\r\n        \"cmpName\": \"构件名称\",\r\n        \"metadataId\": \"构件ID\",\r\n        \"methodCode\": \"构件方法\",\r\n        \"isForCompensation\": \"补偿操作\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"operate\": \"操作\",\r\n        \"code\": \"编号\",\r\n        \"name\": \"名称\",\r\n        \"value\": \"参数值\",\r\n        \"editComponent\": \"编辑构件\",\r\n        \"confirmDelete\": \"确认是否删除构件？\",\r\n        \"curComponent\": \"尚未选中构件！\",\r\n        \"newComponent\": \"新建构件\",\r\n        \"sameCmp\": \"存在相同的流程构件\",\r\n        \"cmpMethod\": \"构件方法：\",\r\n        \"executionTimeNotNull\": \"构件执行时机不允许为空！\",\r\n        \"param\": \"的参数\",\r\n        \"required\": \"必填\",\r\n        \"set\": \"（已设置）\",\r\n        \"notSet\": \"（未设置）\",\r\n        \"PROCESSINSTANCE_STARTED\": \"流程启动\",\r\n        \"PROCESSINSTANCE_SUSPENDED\": \"流程挂起\",\r\n        \"PROCESSINSTANCE_RESUMED\": \"流程恢复\",\r\n        \"PROCESSINSTANCE_COMPLETED\": \"流程完成\",\r\n        \"PROCESSINSTANCE_ABORTED\": \"流程终止\",\r\n        \"PROCESSINSTANCE_CANCELED\": \"流程取消\",\r\n        \"PROCESSINSTANCE_REACTIVATED\": \"流程复活\",\r\n        \"PROCESSINSTANCE_ROLLBACK\": \"流程驳回\",\r\n        \"PROCESSINSTANCE_RESUBMIT\": \"重新提交\",\r\n        \"ACTIVITY_AND_PARTICIPANT_UPDATED\": \"环节办理人变更\",\r\n        \"PROCESSINSTANCE_ABORTED_BY_ADMIN\": \"管理员终止\",\r\n        \"PROCESSINSTANCE_BEFORE_START\": \"流程启动前\",\r\n        \"WORKITEM_BEFORE_COMPLETE\": \"任务完成前\",\r\n        \"WORKITEM_AFTER_COMPLETE\": \"任务完成后\",\r\n        \"LOADDATA\": \"获取数据\",\r\n        \"ACTIVITY_STARTED\": \"活动启动\",\r\n        \"ACTIVITY_COMPLETED\": \"活动完成\",\r\n        \"ACTIVITY_ABORTED\": \"活动终止\",\r\n        \"WORKITEM_CREATED\": \"工作项创建\",\r\n        \"WORKITEM_COMPLETED\": \"工作项完成\",\r\n        \"WORKITEM_SUSPENDED\": \"工作项挂起\",\r\n        \"WORKITEM_RESUMED\": \"工作项恢复\",\r\n        \"WORKITEM_ABORTED\": \"工作项终止\",\r\n        \"WORKITEM_RETRIEVED\": \"工作项取回\",\r\n        \"WORKITEM_CLAIMED\": \"工作项领用\",\r\n        \"WORKITEM_UNCLAIMED\": \"工作项反领用\",\r\n        \"ACTIVITY_ASSIGNMENT\": \"任务分配前\",\r\n        \"deleteNotAllowed\": \"取数构件不允许删除，请了解！\",\r\n        \"tips\": \"提示：\",\r\n        \"prefabricated\": \"已经预制外部流程构件，此处只保留取数构件\",\r\n        \"add\": \"新增\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"确定\"\r\n      }\r\n    }\r\n  },\r\n  \"en\": {\r\n    \"validate\": {\r\n      \"noProcessHeader\": \"processHeader attribute does not exist in the model\",\r\n      \"cmpsEmpty\": \"Process component is empty\",\r\n      \"cmpsEmptyMsg\": \"The process component cannot be empty, please contact the form development to confirm the problem\",\r\n      \"directNoPf\": \"A process whose startup mode is [direct] should not contain shared (PF) process components\",\r\n      \"directNoPfMsg\": \"Please remove the following process components of sharing (PF):\",\r\n      \"noLoadDataCmp\": \"There is no process component whose execution opportunity is [get data]\",\r\n      \"noLoadDataCmpMsg\": \"The process definition cannot be short of fetching components, please contact the form development to confirm the problem\",\r\n      \"noStartCmp\": \"The process component whose execution opportunity is [Process Start] is missing\",\r\n      \"noStartCmpMsg\": \"The document status cannot be modified when the process is started, please contact the form development to confirm the problem\",\r\n      \"lackProcessCompleteCmp\": \"There is no process component whose execution opportunity is [Process Completion]\",\r\n      \"lackProcessCompleteCmpMsg\": \"The document status cannot be modified when the process is completed, please contact the form development to confirm the problem\",\r\n      \"lackProcessAbortCmp\": \"Lack of process component with execution timing of [process termination]\",\r\n      \"lackProcessAbortCmpMsg\": \"The document status cannot be modified when the process is terminated, please contact the form development to confirm the problem\",\r\n      \"lackProcessCancelCmp\": \"The process component with execution opportunity of [Process Termination] is missing\",\r\n      \"lackProcessCancelCmpMsg\": \"The document status cannot be modified when the process is terminated, please contact the form development to confirm the problem\",\r\n      \"lackProcessBackCmp\": \"Lack of process component with execution opportunity of [Process Rejection]\",\r\n      \"lackProcessBackCmpMsg\": \"The document status cannot be modified when the process is rejected, please contact the form development to confirm the problem\",\r\n      \"lackProcessReStartCmp\": \"Lack of process component with execution opportunity of [resubmit]\",\r\n      \"lackProcessReStartCmpMsg\": \"It will lead to the failure to modify the document status when the process is resubmitted, please contact the form development to confirm the problem\",\r\n      \"parallelGatewayCheck\": \"[Parallel Gateway] does not appear in pairs\",\r\n      \"parallelGatewayCheckMsg\": \"Parallel Gateway needs to appear as a split node and a sink node of a process branch in pairs, please modify it\",\r\n      \"approvalPerformerCheck\": \"activity, no participant set\",\r\n      \"noVariable1\": \"A variable has been set in the variable setting attribute of the activity\",\r\n      \"noVariable2\": \"It no longer exists in the process attribute Process Variable. Please modify it!\",\r\n      \"activity\": \"activity [\",\r\n      \"noStartActivity\": \"] is illegal and does not start with [startActivity]\",\r\n      \"noExclusiveGateway\": \"] is illegal and does not start with [ExclusiveGateway]\",\r\n      \"noParallelGateway\": \"] is illegal and does not start with [ParallelGateway]\",\r\n      \"noUserActivity\": \"] is illegal and does not start with [UserActivity]\",\r\n      \"noOperationActivity\": \"] is illegal and does not start with [OperationActivity]\",\r\n      \"noNotifyActivity\": \"] is illegal and does not start with [NotifyActivity]\",\r\n      \"noCallActivitySubProcess\": \"] is illegal and does not start with [CallActivitySubProcess]\",\r\n      \"noAutoActivity\": \"] is illegal and does not start with [AutoActivity]\",\r\n      \"noIntermediateCatchEvent\": \"] is illegal and does not start with [MediaTechEventTimpl]\",\r\n      \"noMessageActivity\": \"] is illegal and does not start with [MessageActivity]\",\r\n      \"noAifCreationBillActivity\": \"] is illegal and does not start with [AifCreationBillActivity]\",\r\n      \"noEndEvent\": \"] is illegal and does not start with [EndEvent]\",\r\n      \"mark\": \"The logo is [\",\r\n      \"noFlowNodeChsName\": \"] is empty, please modify it\",\r\n      \"nameExceedsLengthLimit\": \"] is too long and cannot exceed 40 characters. Please modify it.\"\r\n    },\r\n    \"processEditor\": {\r\n      \"tip\": \"Tip\",\r\n      \"showButton\": \"Show Model View Button\",\r\n      \"changeRecord\": \"Process Change Record\",\r\n      \"noDtInfo\": \"No design time process information exists! Please assign it first!\",\r\n      \"noRtInfo\": \"No runtime process information exists! Please assign it first!\",\r\n      \"wrongMoment\": \"Wrong moment for the editor!\",\r\n      \"prompted\": \"System Prompt\",\r\n      \"saveSuccess\": \"Save successful\",\r\n      \"waitReview\": \"Save successful, awaiting review initiation\",\r\n      \"successPublish\": \"Publish successful\",\r\n      \"publishFail\": \"Publish failed,\",\r\n      \"policyConflict\": \"In countersign strategy, 'Rejection Rule' does not allow 'Dynamically Select Rejection Levels', please modify!\",\r\n      \"noPermissionToSave\": \"The current user does not have permission to save the process\",\r\n      \"closeProc1\": \"Close this page?\",\r\n      \"closeProc2\": \"The system may not save the changes you made.\",\r\n      \"viewModel\": \"View Model\",\r\n      \"copied\": \"The model has been copied to the clipboard\",\r\n      \"button\": {\r\n        \"saveProc\": \"Save\",\r\n        \"releaseProc\": \"Publish\",\r\n        \"sync\": \"Synchronize Design Time Package\",\r\n        \"saveAs\": \"Save As\",\r\n        \"procRecord\": \"Process Record\",\r\n        \"viewProcModel\": \"View Model\",\r\n        \"closeProc\": \"Close\"\r\n      }\r\n    },\r\n    \"designer\": {\r\n      \"wfEditorUi\": {\r\n        \"basicElements\": \"Basic Elements\",\r\n        \"readOnly\": \"Read-only\"\r\n      },\r\n      \"wfProcessCell\": {\r\n        \"basicInfo\": \"Basic Information\",\r\n        \"name\": \"Name\",\r\n        \"nameLanguage\": \"Name\",\r\n        \"key\": \"Identifier\",\r\n        \"entryForm\": \"Process Category\",\r\n        \"startMode\": \"Start Mode\",\r\n        \"wfTitle\": \"Process Summary\",\r\n        \"formDef\": \"Form Definition\",\r\n        \"formsPC\": \"PC Form\",\r\n        \"formsMobile\": \"Mobile Form\",\r\n        \"process\": \"Event Listener\",\r\n        \"advanced\": \"Advanced Properties\",\r\n        \"basic\": \"Basic Properties\",\r\n        \"wfComponent\": \"Process Component\",\r\n        \"otherConfig\": \"Other Configuration\",\r\n        \"processVariables\": \"Process Variables\",\r\n        \"basicElements\": \"Basic Elements\",\r\n        \"customizeAction\": \"Custom Actions\",\r\n        \"timelinessInfo\": \"Timeliness Information\",\r\n        \"enablePriority\": \"Enable Priority\",\r\n        \"enableWholeOrderRetrieve\": \"Withdraw Documents Under Review\",\r\n        \"messageProperty\": \"Image Setting\",\r\n        \"timeLimitControl\": \"Timeout Operation\",\r\n        \"messageNotice\": \"Message Notification\",\r\n        \"extendProperty\": \"Extended Properties\",\r\n        \"directTips\": \"Tip: Switching start mode to 'Direct' will remove shared (PF) related components as it is the default start mode. Please be aware of this!\",\r\n        \"externalTips\": \"Tip: Switching start mode to 'External Process' is suitable for scenarios where the process serves as an external process for sharing. After switching, shared (PF) related components on the process will be retained. Please be aware of this!\",\r\n        \"subprocessTips\": \"Tip: Switching start mode to 'Subprocess' is suitable for invoking sub-processes. After switching, all process components except those for data extraction will be removed. Please be aware of this!\"\r\n      },\r\n      \"WfSequenceFlowEdge\": {\r\n        \"basicInfo\": \"Basic Information\",\r\n        \"basic\": \"Basic Properties\",\r\n        \"name\": \"Name\",\r\n        \"nameLanguage\": \"Name\",\r\n        \"id\": \"Identifier\",\r\n        \"condition\": \"Condition Options\",\r\n        \"ConditionExpression\": \"Condition Expression\",\r\n        \"default\": \"Default Transition\"\r\n      },\r\n      \"wfSidebar\": {\r\n        \"bizactivitylib\": \"Business Activity Library\"\r\n      }\r\n    },\r\n    \"app\": {\r\n      \"processDesigner\": {\r\n        \"all\": \"All\",\r\n        \"assign\": \"Assign\",\r\n        \"claim\": \"Claim\",\r\n        \"preempt\": \"Preempt Mode\",\r\n        \"parallel\": \"Parallel Countersignature\",\r\n        \"sequential\": \"Sequential Countersignature\",\r\n        \"true\": \"Yes\",\r\n        \"false\": \"No\",\r\n        \"dataId\": \"Document ID\",\r\n        \"procInstId\": \"Process Instance ID\",\r\n        \"bizDefKey\": \"Entrance Document ID\",\r\n        \"processDefinitionKey\": \"Process Definition Key\",\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"businessCreator\": \"Business Initiator\",\r\n        \"procInstDescription\": \"Process Summary\",\r\n        \"comment\": \"Approval Comment\",\r\n        \"bizDefName\": \"Process Category Name\",\r\n        \"curLoginUsername\": \"Current Login User Name\",\r\n        \"procInstCreatorName\": \"Process Initiator Name\",\r\n        \"currentParticipantId\": \"Current Participant ID\",\r\n        \"currentParticipantName\": \"Current Participant Name\",\r\n        \"currentUser\": \"Current Login User\",\r\n        \"preActExecutors\": \"Executors of the Previous Activity\",\r\n        \"collectionElementVariable\": \"MultiInstance Child activity element variables\",\r\n        \"subCollectionElementVariable\": \"MultiInstance Sub-process element variables\",\r\n        \"nrOfInstances\": \"Total number of multiple instances\",\r\n        \"nrOfCompletedInstances\": \"Number of multi-instance completed\",\r\n        \"nrOfActiveInstances\": \"The number of multiple instances running\",\r\n        \"nrOfForward\": \"Number of Passed Instances\",\r\n        \"nrOfBackward\": \"Number of rejected instances\",\r\n        \"nrOfAbort\": \"Number of terminated instances\",\r\n        \"conclusionType\": \"Conclusion Type\",\r\n        \"conclusionValue\": \"Conclusion Value\",\r\n        \"directSuperior\": \"Direct Superior\",\r\n        \"higherSuperior\": \"Indirect Superior\",\r\n        \"DIRECT\": \"Direct\",\r\n        \"EXTERNAL_PROCESS\": \"External Process\",\r\n        \"SUB_PROCESS\": \"Subprocess\",\r\n        \"ALL\": \"PC and Mobile\",\r\n        \"WEB\": \"PC\",\r\n        \"APP\": \"Mobile\",\r\n        \"conclusionTypeTips\": \"The direction of item circulation, 1 for forward, 2 for backward, 3 for termination\",\r\n        \"conclusionValueTips\": \"Item number, for example, 'Pass', 'Back', 'Refuse'\",\r\n        \"copy\": \"_Copy\",\r\n        \"saveAs\": \"Save As\",\r\n        \"tips\": \"System Tips\",\r\n        \"saveAsSuccess\": \"Save As Successful\",\r\n        \"saveAsFail\": \"Save As Failed, please check if the process is correct!\",\r\n        \"syncDt\": \"Whether to synchronize the current version of the process definition to the design-time process definition package\",\r\n        \"syncSuccess\": \"Synchronization Successful\",\r\n        \"beforeCompleteStrategyChange\": \"There are running activity instances in the current node, adjusting the completion strategy is not allowed, please be aware!\",\r\n        \"releaseProcess\": \"Review before Release\",\r\n        \"auto\": \"Auto-generated Form\",\r\n        \"push\": \"Push-generated Form\",\r\n        \"pull\": \"Pull-generated Form\",\r\n        \"creation\": \"Generate the target form through the form generation process\"\r\n      }\r\n    },\r\n    \"multiInstanceLoopCharacteristics\": {\r\n      \"loopCharacteristics\": \"Multi-instance Setup\",\r\n      \"set\": \"(Set)\",\r\n      \"notSet\": \"(Not Set)\",\r\n      \"isEnable\": \"Enable\",\r\n      \"isSequential\": \"Sequential\",\r\n      \"loopCardinality\": \"Elements Collections\",\r\n      \"completionConditionRules\": \"Completion COnditions\",\r\n      \"promptAct1\": \"1. The number of elements in [Collection] is the number of instances of the sub-activity start.\",\r\n      \"promptAct2\": \"2. When the sub-activity starts, the system will split and map the elements in the [Collection] to the [Element Variables] of each sub-activity instance.\",\r\n      \"promptProc1\": \"1. The number of elements in [Collection] is the number of instances of the sub-process start.\",\r\n      \"promptProc2\": \"2. When the sub-process starts, the system will split and map the elements in the [Collection] to the [Element Variables] of each sub-process instance.\",\r\n      \"checkPrompt\": \"There are running activity instances in the current node, adjusting is not allowed\",\r\n      \"conditionRulesSet\": \"(Set)\",\r\n      \"completionConditionRulesList\": {\r\n        \"forward\": \"Forward\",\r\n        \"backward\": \"BackWard\",\r\n        \"abort\": \"Abort\"\r\n      }\r\n    },\r\n    \"component\": {\r\n      \"optins\": {\r\n        \"wfOptions\": \"Workflow Options\",\r\n        \"specified\": \"Specified Subprocess\",\r\n        \"dynamic\": \"Dynamic Subprocess\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"subProcessType\": \"Subprocess Type\",\r\n        \"processType\": \"Process Type\",\r\n        \"bizDef\": \"Process Category\",\r\n        \"procDef\": \"Process Definition\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOk\": \"OK\"\r\n      },\r\n      \"voConfig\": {\r\n        \"documentInfo\": \"Document Information\",\r\n        \"viewModelSelection\": \"View Model Selection\",\r\n        \"cancel\": \"Cancel\",\r\n        \"clickOk\": \"OK\",\r\n        \"selectOne\": \"Select One\",\r\n        \"documentTypeSelect\": \"Document Type Selection\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"viewModel\": \"View Model\",\r\n        \"documenttype\": \"Document Type\",\r\n        \"placeholder\": \"Please Select\"\r\n      },\r\n      \"variableSetting\": {\r\n        \"constant\": \"Constant\",\r\n        \"expression\": \"Expression\",\r\n        \"component\": \"Component\",\r\n        \"ACTIVITY_STARTED\": \"Activity Started\",\r\n        \"ACTIVITY_COMPLETED\": \"Activity Completed\",\r\n        \"varAssign\": \"Variable Assignment\",\r\n        \"varNumber\": \"Variable Number\",\r\n        \"REQUIRED\": \"Required\",\r\n        \"varName\": \"Variable Name\",\r\n        \"valueType\": \"Value Type\",\r\n        \"executionTime\": \"Execution Time\",\r\n        \"valueText\": \"Variable Value\",\r\n        \"processVariables\": \"Process Variables\",\r\n        \"notSelectedVar\": \"Variable Not Selected!\",\r\n        \"valueCannotEmpty\": \"Variable Value Cannot be Empty!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"serialNumber\": \"Serial Number\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"inconsistentParameters\": \"Inconsistent Method Parameters for the Current Component, Please Update!\",\r\n        \"methodNotExist\": \"The Current Component No Longer Exists This Method, Please Update!\",\r\n        \"parameterName\": \"Parameter Name\",\r\n        \"parameterValue\": \"Parameter Value\",\r\n        \"methodnotSelected\": \"Component Method Not Selected Yet\",\r\n        \"metadataNotExist\": \"Help Metadata Does Not Exist, Please Contact the System Administrator for Details!\",\r\n        \"errorObtainComponent\": \"Error Obtaining Parsed Component\",\r\n        \"componentSelection\": \"Component Selection\",\r\n        \"componentName\": \"Component Name\",\r\n        \"parameterList\": \"Parameter List\",\r\n        \"lineNumber\": \"No.\"\r\n      },\r\n      \"urgeHandleRule\": {\r\n        \"urgentApproval\": \"Urge Approval:\",\r\n        \"pleaseApprove\": \"Please Approve\",\r\n        \"soOn\": \" \",\r\n        \"urgeHandle\": \"Urge Handle\",\r\n        \"noSendingMethod\": \"No Sending Method Selected Yet!\",\r\n        \"setMessageTemplate\": \"Message Template Needs to be Set When Using SMS as the Message Channel\",\r\n        \"codeEmpty\": \"SMS Template Number Cannot be Empty\",\r\n        \"noMessageSubject\": \"No Message Subject Configured Yet!\",\r\n        \"noMessageContent\": \"No Message Content Selected Yet!\",\r\n        \"earliestTimeNotEmpty\": \"Earliest Urge Time Cannot be Empty\",\r\n        \"minimumTimeNotEmpty\": \"Minimum Urge Interval Cannot be Empty\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"enableUrgeHandle\": \"Enable Urgent Handling\",\r\n        \"timeSetting\": \"Time Setting\",\r\n        \"earliestTime\": \"Earliest Urge Time (Hours)\",\r\n        \"minimumInterval\": \"Minimum Urge Interval (Hours)\",\r\n        \"sendingMethod\": \"Sending Method\",\r\n        \"messageSubject\": \"Message Subject\",\r\n        \"supportEditing\": \"Support Editing\",\r\n        \"messageContent\": \"Message Content\",\r\n        \"displayReminder\": \"Display Urgent Reminder\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"titleExpression\": {\r\n        \"zh-CHS\": \"Simplified Chinese\",\r\n        \"zh-CHT\": \"Traditional Chinese\",\r\n        \"en\": \"English\",\r\n        \"taskDescription\": \"Task Description\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"currentLanguage\": \"Current Summary Language:\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"timeLimitControl\": {\r\n        \"timedOutOperation\": \"Timed Out Operation\",\r\n        \"constant\": \"Constant\",\r\n        \"scope\": \"Time Scope\",\r\n        \"day\": \"Day(s)\",\r\n        \"hour\": \"Hour(s)\",\r\n        \"minute\": \"Minute(s)\",\r\n        \"BeforeDuration\": \"Before Due\",\r\n        \"OnDuration\": \"On Due\",\r\n        \"AfterDuration\": \"After Due\",\r\n        \"SendMessageExpireOperation\": \"Expiring Alert\",\r\n        \"AutoHandleExpireOperation\": \"Automatic Processing\",\r\n        \"curDay\": \"Current Day\",\r\n        \"durationType\": \"Duration Type\",\r\n        \"required\": \"Required\",\r\n        \"timeDuration\": \"Duration\",\r\n        \"timeUnit\": \"Unit\",\r\n        \"operationTypeName\": \"Operation Type Name\",\r\n        \"sendType\": \"Operation\",\r\n        \"onlyBeInteger\": \"Task Duration Can Only Be an Integer!\",\r\n        \"setOperation\": \"Please Set Timeout Operation!\",\r\n        \"setType\": \"Please Set Automatic Processing Type!\",\r\n        \"setComments\": \"Please Set Automatic Processing Opinion!\",\r\n        \"selectedOperation\": \"No Expiring Operation Selected Yet!\",\r\n        \"notSupportAutomatic\": \"If the Next Node is Assigned by the Current Operator, the Current Node Does Not Support Automatic Task Processing\",\r\n        \"warningMessage\": \"Warning Message\",\r\n        \"automaticProcessing\": \"Automatic Processing\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"timelinessControl\": \"Task Processing Timeliness Control\",\r\n        \"isEnable\": \"Enable or Not\",\r\n        \"taskDeadline\": \"Task Deadline\",\r\n        \"timelyOperation\": \"Timely Alert Operation\",\r\n        \"actionList\": \"Action List\",\r\n        \"add\": \"Add\",\r\n        \"remove\": \"Remove\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"workItemParticipant\": \"Current Node Operator\",\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"to-doMessageTimeOut\": \"You Have a Pending Task Message About to Time Out.\",\r\n        \"messageTimeOut\": \"You Have a Message About to Time Out\",\r\n        \"agree\": \"Agree\"\r\n      },\r\n      \"sendMessageOperation\": {\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"workItemParticipant\": \"Current Node Handler\",\r\n        \"preActExecutors\": \"Previous Node Handlers\",\r\n        \"day\": \"Day\",\r\n        \"hour\": \"Hour\",\r\n        \"minute\": \"Minute\",\r\n        \"cycleTimeNotEmpty\": \"Cycle time interval cannot be empty!\",\r\n        \"sendMethodNotEmpty\": \"Send method cannot be empty!\",\r\n        \"subjectNotEmpty\": \"Message subject cannot be empty!\",\r\n        \"contentNotEmpty\": \"Message content cannot be empty!\",\r\n        \"recipientNotEmpty\": \"Recipient cannot be empty!\",\r\n        \"messageTemplate\": \"Message template needs to be set when SMS channel is enabled\",\r\n        \"smsTemplateNumberNotEmpty\": \"SMS template number cannot be empty\",\r\n        \"cycleEnable\": \"Enable cycle warning\",\r\n        \"cycleTime\": \"Cycle time interval\",\r\n        \"sendType\": \"Send method\",\r\n        \"subject\": \"Message subject\",\r\n        \"message\": \"Message content\",\r\n        \"receiverVari\": \"Recipient\",\r\n        \"sysUsers\": \"System users\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"opinionsNotEmpty\": \"Automatic handling opinion cannot be empty!\",\r\n        \"processingNotEmpty\": \"Automatic handling cannot be empty!\",\r\n        \"automaticProcessSet\": \"Automatic handling settings\",\r\n        \"automaticProcessMethod\": \"Automatic handling method\",\r\n        \"automaticOpinionHandle\": \"Automatic handling opinion\"\r\n      },\r\n      \"smsMessageTemplate\": {\r\n        \"smsTemplateContent\": \"Template text defined in third-party SMS service provider, for example: Your GS Cloud data platform account has been activated. Username: ${username}, initial password: ${code}. Please log in to the system in time.\",\r\n        \"code\": \"Variable\",\r\n        \"value\": \"Value\",\r\n        \"noRowsSelected\": \"No rows selected\",\r\n        \"smsMessageTemplate\": \"SMS Service Template\",\r\n        \"tips1\": \"Message template refers to the association of template variables defined by third-party SMS service provider with GS Cloud variables after the template has been defined.\",\r\n        \"tips2\": \"Template number defined in the third-party SMS service provider, for example: Aliyun SMS_220626324\",\r\n        \"tips3\": \"Configure the association between variables in the third-party SMS service provider's template and variables in GSCloud\",\r\n        \"smsTemplateNumber\": \"SMS template number\",\r\n        \"smsVariableBinding\": \"SMS variable binding\",\r\n        \"addSmsVariable\": \"Add\",\r\n        \"deleteSmsVariable\": \"Delete\"\r\n      },\r\n      \"signRule\": {\r\n        \"countersignRules\": \"Countersign rules\",\r\n        \"byNumber\": \"By Quantity\",\r\n        \"byProportion\": \"By Percentage (%)\",\r\n        \"customConditions\": \"Custom Conditions\",\r\n        \"value\": \"Number\",\r\n        \"text\": \"Name\",\r\n        \"conclusionName\": \"Conclusion Name\",\r\n        \"conclusionValue\": \"Conclusion Value\",\r\n        \"calculateType\": \"Calculation Method\",\r\n        \"conditionValue\": \"Condition Value\",\r\n        \"waitAllVotes\": \"Wait for all members to complete\",\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"notEmpty\": \"When the completion strategy is countersignature, the countersign rules cannot be empty. Please understand!\",\r\n        \"pleaseSelect\": \"Please select an item first!\",\r\n        \"maxConditionValue\": \"The maximum value of the condition must be 100\",\r\n        \"minConditionValue\": \"The minimum value of the condition must be 0\",\r\n        \"noConditional\": \"No conditional value is required when the execution mode is unanimous or one vote\",\r\n        \"set\": \"(Set)\",\r\n        \"ruleList\": \"Rule List\",\r\n        \"approvalOptions\": \"Approval Options\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"deleteRow\": \"Reset\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"saveAsEdit\": {\r\n        \"public\": \"Public\",\r\n        \"private\": \"Private\",\r\n        \"code\": \"Number\",\r\n        \"name\": \"Name\",\r\n        \"nameNotEmpty\": \"Process name cannot be empty\",\r\n        \"organizationNotEmpty\": \"Maintenance organization cannot be empty\",\r\n        \"organization\": \"Organization\",\r\n        \"basicAttributes\": \"Basic Attributes\",\r\n        \"processName\": \"Process name\",\r\n        \"processKeyValue\": \"Process Key value\",\r\n        \"maintenanceOrg\": \"Maintenance organization\",\r\n        \"accessLevel\": \"Access level\",\r\n        \"saveAsCancel\": \"Cancel\",\r\n        \"saveAsOK\": \"OK\"\r\n      },\r\n      \"release\": {\r\n        \"release\": \"Process Release\",\r\n        \"update\": \"Process Update\",\r\n        \"applicantName\": \"Applicant Name\",\r\n        \"applicantDepartment\": \"Applicant Department\",\r\n        \"procName\": \"Process name\",\r\n        \"procVersion\": \"Process version\",\r\n        \"releaseType\": \"Release type\",\r\n        \"textDetail\": \"Description\",\r\n        \"saveAsCancel\": \"Cancel\",\r\n        \"saveAsOK\": \"OK\"\r\n      },\r\n      \"processVariables\": {\r\n        \"string\": \"String\",\r\n        \"integer\": \"Integer\",\r\n        \"decimal\": \"Decimal\",\r\n        \"boolean\": \"Boolean\",\r\n        \"constant\": \"Constant\",\r\n        \"expression\": \"Expression\",\r\n        \"component\": \"Component\",\r\n        \"name\": \"Variable number\",\r\n        \"required\": \"Required\",\r\n        \"documentation\": \"Variable name\",\r\n        \"basicType\": \"Variable type\",\r\n        \"description\": \"Description\",\r\n        \"tag\": \"Initial value type\",\r\n        \"valueText\": \"Initial value\",\r\n        \"processVariables\": \"Process variables\",\r\n        \"notSelected\": \"No process variables selected!\",\r\n        \"variableNumberEmpty\": \"Variable number cannot be empty!\",\r\n        \"variableNameEmpty\": \"Variable name cannot be empty!\",\r\n        \"variableNumberNotStandard\": \"Variable number can only contain letters, numbers, and underscores, and cannot start with a number!\",\r\n        \"tagNotEmpty\": \"Initial value type cannot be empty!\",\r\n        \"codeDuplicates\": \"Process variable number cannot be duplicated!\",\r\n        \"alreadyExists\": \"The added variable already exists!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"number\": \"Number\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"participant\": {\r\n        \"user\": \"User\",\r\n        \"variable\": \"Variable Participant\",\r\n        \"position\": \"Position\",\r\n        \"role\": \"Role\",\r\n        \"component\": \"Component Participant\",\r\n        \"reportingLine\": \"Reporting Line\",\r\n        \"matrix\": \"Matrix\",\r\n        \"activityExecutor\": \"Historical Activity Executor\",\r\n        \"organization\": \"Organization/Department\",\r\n        \"all\": \"All\",\r\n        \"assign\": \"Assign\",\r\n        \"claim\": \"Claim\",\r\n        \"currentUser\": \"Current Handler\",\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"participantSet\": \"Participant Set\",\r\n        \"order\": \"Order\",\r\n        \"type\": \"Type\",\r\n        \"performerName\": \"Name\",\r\n        \"description\": \"Description\",\r\n        \"condition\": \"Enable Condition\",\r\n        \"dataMovement1\": \"Move default handler data to alternative handlers?\",\r\n        \"dataMovement2\": \"Move alternative handler data to default handler?\",\r\n        \"participantSelection\": \"Participant Selection\",\r\n        \"selectProcessVariables\": \"Process variables not selected yet!\",\r\n        \"selectVariableValueType\": \"Variable value type not selected yet!\",\r\n        \"selectRelation\": \"Relation not selected yet!\",\r\n        \"selectPosition\": \"Position not selected yet!\",\r\n        \"selectOrgType\": \"Organization type not selected yet!\",\r\n        \"orgFill\": \"Organization not filled yet!\",\r\n        \"refOrgIdNotNull\": \"When reference type is organization, the reference organization field cannot be empty\",\r\n        \"refUserIdNotNull\": \"When reference type is system user/employee, the reference person field cannot be empty\",\r\n        \"repDefConfigured\": \"The reporting line has already been configured\",\r\n        \"atLeastOneCondition\": \"At least one condition field must exist\",\r\n        \"dataFieldAliasNotNull\": \"Data field cannot be empty\",\r\n        \"matrixConfigured\": \"The matrix has already been configured\",\r\n        \"selectPerformer\": \"Performer not selected yet\",\r\n        \"definitionDeleted\": \"The definition of this reporting line data has been deleted, this data will be deleted\",\r\n        \"matrixDeleted\": \"The definition of this matrix data has been deleted, this data will be deleted\",\r\n        \"selectParticipantInfo\": \"Please select a participant information first!\",\r\n        \"noRowSelected\": \"No row selected yet!\",\r\n        \"selectDefaultHandler\": \"Please select a default handler first\",\r\n        \"selectpotentialtHandler\": \"Please select an alternative handler first\",\r\n        \"org\": \"Organization:\",\r\n        \"positionType1\": \"Position type: General position, Organization:\",\r\n        \"positionType2\": \"Position type: General position\",\r\n        \"positionType3\": \"Position type: Organization position\",\r\n        \"comp\": \"Component:\",\r\n        \"parameters:\": \", Parameters: {\",\r\n        \"referencePerson:\": \"Reference person: \",\r\n        \"referenceOrganization:\": \"Reference organization: \",\r\n        \"condition1\": \"Condition 1: \",\r\n        \"condition2\": \"Condition 2: \",\r\n        \"condition3\": \"Condition 3: \",\r\n        \"data\": \"Data: \",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not set)\",\r\n        \"allocationPolicy\": \"Allocation Policy\",\r\n        \"operator\": \"Assign Operator\",\r\n        \"multiSelect\": \"Allow Multiple Selection\",\r\n        \"necessary\": \"Only one candidate user, still requires manual selection\",\r\n        \"notifyRecipient\": \"Notify Recipient\",\r\n        \"defaultHandler\": \"Default Handler\",\r\n        \"new\": \"Add\",\r\n        \"editPerformer\": \"Edit\",\r\n        \"removePerformer\": \"Remove\",\r\n        \"clearPerformer\": \"Clear\",\r\n        \"moveUp\": \"Move Up\",\r\n        \"moveDown\": \"Move Down\",\r\n        \"alternativeHandler\": \"Alternative Handler\",\r\n        \"isAllScope\": \"When specifying participants, there is no restriction, select from all users\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"alternativeScope\": \"Alternative Scope\",\r\n        \"orgId\": \"OrgID\",\r\n        \"includeChildren\": \"Include Children\",\r\n        \"conditon\": \"Conditon\",\r\n        \"currentUnit\": \"Current Unit\",\r\n        \"currentDepartment\": \"Current Department\",\r\n        \"variableOrganization\": \"Variable Org\"\r\n      },\r\n      \"activityExecutor\": {\r\n        \"name\": \"Name\",\r\n        \"eventHandler\": \">Activity Executor\",\r\n        \"nodeName\": \"Node Name\",\r\n        \"enablingConditions\": \"Enable Conditions\",\r\n        \"activityList\": \"Activity List\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"componentPerformer\": {\r\n        \"componentMethod\": \"Current component method parameters are inconsistent, please update!\",\r\n        \"methodNotExist\": \"This method does not exist in the current component, please update!\",\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"description\": \"Description\",\r\n        \"valueText\": \"Parameter Value\",\r\n        \"help\": \"Help\",\r\n        \"errorObtaining\": \"Error obtaining parsing component\",\r\n        \"componentSelection\": \"Component Selection\",\r\n        \"metadataNotExist\": \"Help metadata does not exist!\",\r\n        \"serverSideNotFound\": \"Server side did not find help metadata, please check if the metadata has been deployed to the environment\",\r\n        \"componentName\": \"Component Name\",\r\n        \"componentSelect\": \"Component Selection\",\r\n        \"parameterList\": \"Parameter List\"\r\n      },\r\n      \"matrixPerformer\": {\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"help\": \"Help\",\r\n        \"multivalue\": \"Multi\",\r\n        \"enumSelection\": \"Enum Selection\",\r\n        \"refMatrixTable\": \"Reference Matrix Table\",\r\n        \"matrixTable\": \"Matrix Table\",\r\n        \"curDataFieldValue\": \"Result Column\",\r\n        \"conditionFields\": \"Condition Fields\",\r\n        \"condition\": \"Enable Condition\",\r\n        \"key\": \"Key\",\r\n        \"value\": \"Value\",\r\n        \"notSelectEnum\": \"Enum value not selected yet\",\r\n        \"cancel\": \"Cancel\",\r\n        \"onConfirm\": \"Confirm\",\r\n        \"lineNumber\": \"Line Number\"\r\n      },\r\n      \"performerOptions\": {\r\n        \"leave\": \"Flow Down\",\r\n        \"throwException\": \"Exception Prompt\",\r\n        \"sys\": \"User ID\",\r\n        \"administrative_staff\": \"Employee ID\",\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"preActExecutors\": \"Previous Node Executors\",\r\n        \"allPassExecutors\": \"All Approved Personnel\",\r\n        \"performerOptions\": \"Performer Options\",\r\n        \"exclusionNotAllowed\": \"All Approved Personnel have set automatic approval, previous node executors are not allowed to be excluded by default!\",\r\n        \"approvalNotAllowed\": \"When [Allocation Policy] is [Claim], automatic approval is not allowed to be set, please be aware!\",\r\n        \"approvalNotAllowedAsSet\": \"All Approved Personnel have set not allowed for approval, previous node executors are not allowed to be automatically approved by default!\",\r\n        \"allocationStrategyIsCollect\": \"When [Allocation Policy] is [Claim], automatic approval is not allowed to be set, please be aware!\",\r\n        \"set\": \"(Set)\",\r\n        \"advancedOptions\": \"Advanced Performer Options\",\r\n        \"historicFirst\": \"When entering the node again, the handler is the previously handled personnel of the node\",\r\n        \"noPerformerStrategy\": \"Handler is Empty Strategy:\",\r\n        \"excludeProcInstCreator\": \"Exclude Handler Options\",\r\n        \"defaultNotParticipate\": \"Process Initiator does not participate in approval by default\",\r\n        \"excludePreActExecutors\": \"Previous node executors do not participate in approval by default\",\r\n        \"excludeAllPassExecutors\": \"All Approved Personnel do not participate in approval by default\",\r\n        \"excludeExprPerformer\": \"Process Variable:\",\r\n        \"variableOrgTypes\": \"Variable Value Types:\",\r\n        \"automaticApprovalOptions\": \"Automatic Approval Options\",\r\n        \"autoProcInstCreator\": \"Process Initiator is automatically approved by default\",\r\n        \"autoPreActExecutors\": \"Previous node executors are automatically approved by default\",\r\n        \"autoAllPassExecutors\": \"All Approved Personnel are automatically approved by default\",\r\n        \"cancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"positionPerformer\": {\r\n        \"orgPosition\": \"Organization Position\",\r\n        \"generalPosition\": \"General Position\",\r\n        \"sysPositions\": \"System Positions\",\r\n        \"positionType\": \"Position Type\",\r\n        \"role\": \"Role\",\r\n        \"position\": \"Position\",\r\n        \"sysType\": \"Organization Type\",\r\n        \"placeholder\": \"Please select\",\r\n        \"orgId\": \"Organization ID\",\r\n        \"condition\": \"Enable Condition\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"reportingLine\": {\r\n        \"higherSuperior\": \"Indirect Supervisor\",\r\n        \"directSuperior\": \"Direct Supervisor\",\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"dept\": \"Organization\",\r\n        \"sysUser\": \"System User\",\r\n        \"employee\": \"Employee\",\r\n        \"businessFields\": \"Business Fields\",\r\n        \"defName\": \"Reporting Definition\",\r\n        \"dimension\": \"Reporting Level\",\r\n        \"curReportingRefer\": \"Reference Type\",\r\n        \"usersName\": \"Reference Person\",\r\n        \"refOrgId\": \"Reference Organization\",\r\n        \"condition\": \"Enable Condition\",\r\n        \"definitionOfReport\": \"Definition of Reporting Relationship\"\r\n      },\r\n      \"userPerformer\": {\r\n        \"regularUser\": \"Regular User\",\r\n        \"variablePart\": \"Variable Participant\",\r\n        \"sys\": \"System User\",\r\n        \"administrative_organization\": \"Employee\",\r\n        \"cantUseContext\": \"Administrative staff type cannot use this context variable\",\r\n        \"user\": \"User\",\r\n        \"variable\": \"Variable\",\r\n        \"condition\": \"Enable Condition\"\r\n      },\r\n      \"variablePerformer\": {\r\n        \"sys\": \"User ID\",\r\n        \"administrative_staff\": \"Employee ID\",\r\n        \"oneself\": \"Self\",\r\n        \"administrative_organization\": \"Department ID\",\r\n        \"cantUseContext\": \"Administrative staff type cannot use this context variable\",\r\n        \"processVariables\": \"Process Variables\",\r\n        \"variableOrgTypes\": \"Variable Value Types\",\r\n        \"relationShipType\": \"Relationship\",\r\n        \"condition\": \"Enable Condition\",\r\n      },\r\n      \"orgPotentialOwner\": {\r\n        \"optionSettings\": \"Option Settings\",\r\n        \"global\": \"All Members\",\r\n        \"currentUnit\": \"Current Unit\",\r\n        \"currentDepartment\": \"Current Department\",\r\n        \"addSignBehind\": \"Add Signature\",\r\n        \"addSignFront\": \"Consult\",\r\n        \"transfer\": \"Transfer\",\r\n        \"notify\": \"Notify\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"option\": \"Option\",\r\n        \"enable\": \"Enable or Not\",\r\n        \"range\": \"Range\",\r\n        \"OrgId\": \"Org Id\",\r\n        \"variableOrganization\": \"Variable Org\",\r\n        \"includeChildren\": \"Include Subordinates\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"limit\": \"Limit Scope\",\r\n        \"turnOffPrompt\": \"Please Turn off the Scope of People option!\"\r\n      },\r\n      \"note\": {\r\n        \"placeholder\": \"Please enter process change record\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"MessageNotice\": {\r\n        \"notify\": \"Message Notice\",\r\n        \"subject\": \"Message Subject\",\r\n        \"content\": \"Message Content\",\r\n        \"sendTime\": \"Sending Time\",\r\n        \"sendType\": \"Send Method\",\r\n        \"receiverText\": \"Message Receiver\",\r\n        \"procInstCreator\": \"Process Initiator,\",\r\n        \"workItemParticipant\": \"Task Receiver,\",\r\n        \"messageSet\": \"Message Settings\",\r\n        \"selectedRow\": \"No message notification selected yet!\",\r\n        \"noCopy\": \"No message notification attributes to copy!\",\r\n        \"batchCopy\": \"Batch Copy\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"add\": \"Add\",\r\n        \"edit\": \"Edit\",\r\n        \"delete\": \"Delete\",\r\n        \"lineNumber\": \"Number\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"messContent\": { \"expr\": \"\\'You have a message notification.\\'\", \"sexpr\": \"\" },\r\n        \"procComplete\": \"Process Completed\",\r\n        \"procAborted\": \"Process Aborted\",\r\n        \"procRollBack\": \"Process Rejected\",\r\n        \"workCreated\": \"Task Created\",\r\n        \"actComplete\": \"Activity Completed\",\r\n        \"actAborted\": \"Activity Aborted\",\r\n        \"email\": \"Email\",\r\n        \"sms\": \"SMS\",\r\n        \"cloudplus\": \"Cloud\",\r\n        \"processParticipant\": \"Process Participant\",\r\n        \"variableParticipant\": \"Variable Participant\",\r\n        \"userParticipant\": \"Designated User\",\r\n        \"positionParticipant\": \"Position\",\r\n        \"activityExecutorParticipant\": \"Historical Handler\",\r\n        \"sys\": \"System User\",\r\n        \"administrative_organization\": \"Employee\",\r\n        \"name\": \"Name\",\r\n        \"noTargetNode\": \"No node selected yet!\",\r\n        \"noMessageNotifyAttribute!\": \"No message notification attribute!\"\r\n      },\r\n      \"messageNoticeEdit\": {\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"activityExecutorParticipant\": \"Historical Handler\",\r\n        \"workItemParticipant\": \"Task Handler\",\r\n        \"sys\": \"System User\",\r\n        \"administrative_organization\": \"Employee\",\r\n        \"processParticipant\": \"Process Participant\",\r\n        \"workItemReceiveParticipant\": \"Task Receiver\",\r\n        \"variableParticipant\": \"Variable Participant\",\r\n        \"userParticipant\": \"Designated User\",\r\n        \"positionParticipant\": \"Position\",\r\n        \"sendType\": \"Send method cannot be empty\",\r\n        \"smsMessageTemplate\": \"Message channel requires SMS, please set the message template\",\r\n        \"smsMessageTemplateCode\": \"SMS template code cannot be empty\",\r\n        \"sendTime\": \"Sending time cannot be empty\",\r\n        \"subject\": \"Message subject cannot be empty\",\r\n        \"content\": \"Message content cannot be empty\",\r\n        \"receivers\": \"Receiver cannot be empty!\",\r\n        \"processParticipantNotNull\": \"Process participant cannot be empty\",\r\n        \"activityDefIdNotNull\": \"When process participant is historical handler, the handling node cannot be empty\",\r\n        \"variableParticipantNotNull\": \"Variable participant cannot be empty\",\r\n        \"orgType\": \"Organization type of variable participant cannot be empty\",\r\n        \"userIds\": \"Designated user cannot be empty\",\r\n        \"positionId\": \"Position cannot be empty\",\r\n        \"activityList\": \"Activity List\",\r\n        \"position\": \"Position\",\r\n        \"optionalNodes\": \"Optional Nodes\",\r\n        \"targetNodeList\": \"Target Node List\",\r\n        \"placeholder\": \"Please select target node\",\r\n        \"optionalAttribute\": \"Optional Attributes\",\r\n        \"lineNumber\": \"Number\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"messSendType\": \"Message Channel\",\r\n        \"messSubject\": \"Message Subject\",\r\n        \"enable\": \"Enable Expression\",\r\n        \"messContent\": \"Message Content\",\r\n        \"recipient\": \"Receiver\",\r\n        \"addReceiver\": \"Add\",\r\n        \"organization\": \"Organization:\",\r\n        \"posi\": \"Position:\"\r\n      },\r\n      \"jumpScope\": {\r\n        \"targetNodeOptions\": \"Target Node Options\",\r\n        \"name\": \"Name\",\r\n        \"outConnectNode\": \"Process Diagram Connection Node\",\r\n        \"global\": \"All Nodes within the Process\",\r\n        \"afterNodes\": \"All Successor Nodes\",\r\n        \"specifiedSet\": \"Process Diagram Connection Node + Additional Nodes\",\r\n        \"firstNode\": \"Conditional true connection node, when there are multiple options, the first one is selected by default\",\r\n        \"nullNode\": \"Default is empty, manual selection every time\",\r\n        \"specifyNode\": \"Specify the default node\",\r\n        \"noSetTargetNode\": \"Target node options not set yet, please understand!\",\r\n        \"noSetSpecifyNode\": \"Default node not specified yet, please understand!\",\r\n        \"selectedRow\": \"Please select an option first!\",\r\n        \"optionalNodes\": \"Optional Nodes\",\r\n        \"listOfAdditional\": \"List of Additional Nodes\",\r\n        \"pleaseSelect1\": \"Please select additional nodes\",\r\n        \"defaultNode\": \"Default Node\",\r\n        \"pleaseSelect2\": \"Please select default node\",\r\n        \"defaultNodeList\": \"Default Node List\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"set\": \"(Set)\"\r\n      },\r\n      \"imageSet\": {\r\n        \"imageSet\": \"Image Setting\",\r\n        \"onlyView\": \"View Only\",\r\n        \"edit\": \"Edit\",\r\n        \"reScanStart\": \"Initiate Re-scan\",\r\n        \"reScanComplete\": \"Re-scan Complete\",\r\n        \"mutualExclusion\": \"[View Only] option is exclusive with other options, please understand!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"imageOperation\": \"Image Operation Permission\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"extendProperty\": {\r\n        \"extendProperty\": \"Extended Property\",\r\n        \"true\": \"Yes\",\r\n        \"false\": \"No\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"illustrate\": \"Illustrate\",\r\n        \"placeholder\": \"Please select\",\r\n        \"cancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"expressionEditor\": {\r\n        \"expressionEditor\": \"Expression Editor\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"changeType\": \"Switch Type\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"executeForms\": {\r\n        \"executeForms\": \"Form Definition\",\r\n        \"parameters\": \"Parameters [\",\r\n        \"typeAsvariable\": \"] is of variable type, but does not exist in process variables\",\r\n        \"parameterSettings\": \"Parameter Settings\",\r\n        \"formDefinitionList\": \"Form Definition List\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"default\": \"Process Default Form\",\r\n        \"processEmbeddedForm\": \"Process-Embedded Form\",\r\n        \"formEmbedProcess\": \"Form-Embedded Process\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"noForm\": \"No Form Format\",\r\n        \"form\": \"Select Form\",\r\n        \"placeholder\": \"Please select\",\r\n        \"parametersSet\": \"Parameters\",\r\n        \"key\": \"Variable ID\",\r\n        \"name\": \"Variable Name\",\r\n        \"lineNumber\": \"Serial Number\",\r\n        \"code\": \"Code\",\r\n        \"tag\": \"Type\",\r\n        \"value\": \"Parameter Value\",\r\n        \"variable\": \"Variable\",\r\n        \"constant\": \"Constant\",\r\n        \"expression\": \"Expression\",\r\n        \"method\": \"Method Identifier\",\r\n        \"methodName\": \"Method Name\",\r\n        \"description\": \"Description\",\r\n        \"workFlowAction\": \"Workflow Direction\",\r\n        \"formOperations\": \"Form Operations\",\r\n        \"executionTime\": \"Execution Time\",\r\n        \"sortOrder\": \"Execution Order\",\r\n        \"methodParameters\": \"Parameters\",\r\n        \"selectFormActionConfig\": \"Form Action Configuration not selected!\",\r\n        \"selectFormAction\": \"Form Action not selected!\",\r\n        \"editParam\": \"Settings\",\r\n        \"formEvents\": \"Form Events\",\r\n        \"buttonName\": \"Button Name\",\r\n        \"enable\": \"Enabled\",\r\n        \"disabled\": \"Disabled\",\r\n        \"hidden\": \"Hidden\",\r\n        \"fieldName\": \"Field Name\",\r\n        \"editable\": \"Editable\",\r\n        \"readonly\": \"Read-only\",\r\n        \"required\": \"Required\",\r\n        \"saveFail\": \"Failed to save configuration. Please contact the administrator for details!\",\r\n        \"checkedRows\": \"No button collection selected\",\r\n        \"checkeds\": \"No field collection selected\",\r\n        \"enableBtn\": \"Enabled\",\r\n        \"disabledBtn\": \"Disabled\",\r\n        \"hiddenBtn\": \"Hidden\",\r\n        \"btnBatchReset\": \"Reset\",\r\n        \"editableBtn\": \"Editable\",\r\n        \"readonlyBtn\": \"Read-only\",\r\n        \"requiredBtn\": \"Required\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"other\": \"Other\",\r\n        \"formBtn\": \"Form Button\",\r\n        \"formfield\": \"Form Field\",\r\n        \"apptag\": \"Document Type\",\r\n        \"functionMenu\": \"Function Menu\",\r\n        \"formFormat\": \"Form Format\",\r\n        \"docFormatNumber\": \"Document Format Number\",\r\n        \"docFormatName\": \"Document Format Name\",\r\n        \"selectedRow\": \"No form definition selected!\",\r\n        \"set\": \"(Set)\"\r\n      },\r\n      \"eventDefinition\": {\r\n        \"eventDefinition\": \"Signal Definition\",\r\n        \"pass\": \"Forward\",\r\n        \"back\": \"Backward\",\r\n        \"abort\": \"Abort\",\r\n        \"signalRef\": \"Signal ID\",\r\n        \"name\": \"Signal Name\",\r\n        \"triggerAction\": \"Workflow Direction\",\r\n        \"selectedRow\": \"No trigger event selected!\",\r\n        \"dataLength\": \"At least one signal definition is required!\",\r\n        \"codeNotNull\": \"Signal ID cannot be empty!\",\r\n        \"nameNotNull\": \"Signal Name cannot be empty!\",\r\n        \"codeNotNumber\": \"Signal ID cannot be pure numbers!\",\r\n        \"codeRepeat\": \"Signal ID cannot be repeated!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"entryFormEditor\": {\r\n        \"flowForm\": \"Process Category\",\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"base\": \"Base\",\r\n        \"foundation\": \"Foundation\",\r\n        \"extend\": \"Extended\",\r\n        \"selectedRow\": \"No process category selected\",\r\n        \"absent\": \"Process category no longer exists\",\r\n        \"lineNumber\": \"Serial Number\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"Rebind\"\r\n      },\r\n      \"editComponentParameter\": {\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"required\": \"Required\",\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"value\": \"Parameter Value\",\r\n        \"openComponentFail\": \"Failed to parse component\",\r\n        \"componentSelection\": \"Component Selection\",\r\n        \"curComponent\": \"Please select a process component\",\r\n        \"executionTime\": \"Please select execution time\",\r\n        \"para\": \"Parameter\",\r\n        \"paraRequired\": \"] is required\",\r\n        \"execuTime\": \"Execution Time\",\r\n        \"parameterList\": \"Parameter List\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"customizeAction\": {\r\n        \"customizeAction\": \"Customize Action\",\r\n        \"app\": \"Mobile\",\r\n        \"web\": \"Web\",\r\n        \"all\": \"Web, Mobile\",\r\n        \"name\": \"Name\",\r\n        \"code\": \"Code\",\r\n        \"terminalType\": \"Terminal Type\",\r\n        \"isAll\": \"Default\",\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"paramName\": \"Code\",\r\n        \"valueText\": \"Name\",\r\n        \"value\": \"Parameter Value\",\r\n        \"addActions\": \"Select Custom Actions\",\r\n        \"actionExisted\": \"The added custom action already exists!\",\r\n        \"selectedRow\": \"Please select an option first!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not set)\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"parameterList\": \"Parameter List\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"checkCondition\": {\r\n        \"zhChs\": \"Simplified Chinese\",\r\n        \"zhCht\": \"Traditional Chinese\",\r\n        \"en\": \"English\",\r\n        \"checkCondition\": \"Activity Validation Rule\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not set)\",\r\n        \"nodeEntry\": \"Node Entry\",\r\n        \"activityBeforeStarted\": \"Node Entry Condition\",\r\n        \"enterErrorTips\": \"Enter Condition Mismatch Tips\",\r\n        \"activityBeforeCompleted\": \"Node Exit\",\r\n        \"activityBeforeCompletedValue\": \"Node Exit Condition\",\r\n        \"leaveErrorTips\": \"Leave Condition Mismatch Tips\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"batchSet\": {\r\n        \"targetNode\": \"target Node\",\r\n        \"addSignFront\": \"addSign Front\",\r\n        \"addSignBehind\": \"addSign Behind\",\r\n        \"transfer\": \"transfer\",\r\n        \"notify\": \"notify\",\r\n        \"backWardRule\": \"backWard Rule\",\r\n        \"name\": \"name\"\r\n      },\r\n      \"subProcess\": {\r\n        \"subProcessSet\": \"Subprocess Settings\",\r\n        \"specified\": \"Specify Subprocess\",\r\n        \"dynamic\": \"Dynamic Subprocess\",\r\n        \"inheritParent\": \"Same as Parent Process\",\r\n        \"autoCreation\": \"Auto Generate Downstream Documents\",\r\n        \"variablesExpression\": \"Variable Expression\",\r\n        \"rteNull\": \"Please select a document workflow\",\r\n        \"orderProcess\": \"Document Workflow\",\r\n        \"clickOk\": \"OK\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"inheritBizDataId\": \"When the subprocess is inconsistent with the parent process document, please set the subprocess document ID!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not set)\",\r\n        \"radioGroupProcessType\": \"Sub Type\",\r\n        \"flowForm\": \"Flow Category\",\r\n        \"processDef\": \"Process Definition\",\r\n        \"radioGroupBillSource\": \"Source\",\r\n        \"autoCreationProcess\": \"Auto Process\",\r\n        \"bizDataId\": \"Document ID\",\r\n        \"setOption\": \"Set options\",\r\n        \"SameParentProcess\": \"The same business document as the parent process\",\r\n        \"setBizDataId\": \"Set document ID\",\r\n        \"subProcessOpt\": \"Subprocess Options\"\r\n      },\r\n      \"backwardRule\": {\r\n        \"reEdit\": \"The rejected activity node no longer exists. Please re-edit.\",\r\n        \"backwardRule\": \"Rejection Rule\",\r\n        \"initialActityId\": \"Start Node\",\r\n        \"precursorActivityId\": \"Predecessor Node\",\r\n        \"empty\": \"Empty\",\r\n        \"name\": \"Name\",\r\n        \"id\": \"Identifier\",\r\n        \"sequence\": \"Sequential Transition\",\r\n        \"backToMe\": \"Return to Me\",\r\n        \"backToCurrentNode\": \"Return to Current Node\",\r\n        \"popover\": \"1. Sequential Transition: Transition according to the order of the flow lines; 2. Return to Me: If the completion strategy is Preemptive, only create tasks for the person who rejected it. If the completion strategy is Countersignature, the person who rejected it and the unapproved person will receive new tasks, and the approved personnel will automatically approve them; 3. Return to Current Node: The actual effect is affected by the option 'Is the executor a person who has already processed the node when entering the node again'\",\r\n        \"selectAbleClick\": \"Under the Countersignature strategy, dynamic selection of rejection target nodes is not allowed!\",\r\n        \"dictPicked\": \"Please use the 'Revert to Empty' option with the 'Allow dynamic selection of rejection target nodes' option\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not set)\",\r\n        \"rejectedTo:\": \"Reverted to:\",\r\n        \"backScope\": \"Scope of rejection\",\r\n        \"defaultPrompt\": \"All historical rejection nodes are selected by default\",\r\n        \"title\": \"Activity List\",\r\n        \"dynamicSelection\": \"Allow dynamic selection of rejection target nodes\",\r\n        \"resubmitEffectOptions\": \"Return Settings\",\r\n        \"popover1\": \"1. Sequential Transition: Transition according to the order of the flow lines;\",\r\n        \"popover2\": \"2. Return to Me: If the completion strategy is Preemptive, only create tasks for the person who rejected it. If the completion strategy is Countersignature, the person who rejected it and the unapproved person will receive new tasks, and the approved personnel will automatically approve them;\",\r\n        \"popover3\": \"3. Return to Current Node: The actual effect is affected by the option 'Is the executor a person who has already processed the node when entering the node again'\",\r\n        \"allowModification\": \"Allow modification of return settings\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOk\": \"OK\"\r\n      },\r\n      \"assignStrategy\": {\r\n        \"all\": \"All\",\r\n        \"assign\": \"Assign\",\r\n        \"claim\": \"Claim\",\r\n        \"currentUser\": \"Current Executor\",\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"assignStrategy\": \"Assignment Strategy\",\r\n        \"option\": \"Option\",\r\n        \"assignmentRules\": \"Assignment Rules\",\r\n        \"operator\": \"Assign Operator\",\r\n        \"multiSelect\": \"Multiple candidate users can be selected\",\r\n        \"necessary\": \"Only one candidate user, still requires manual selection\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"assignScope\": {\r\n        \"assignScopeList\": \"Assigned Node List\",\r\n        \"required\": \"Required\",\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"condition\": \"Condition\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"name\": \"Name\",\r\n        \"deleteRow\": \"Please select an option first!\",\r\n        \"curActivity\": \"No row selected\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not set)\",\r\n        \"nodeList\": \"Node List\",\r\n        \"moveUp\": \"Move Up\",\r\n        \"moveDown\": \"Move Down\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"assignPerformer\": {\r\n        \"currentUser\": \"Current User\",\r\n        \"procInstCreator\": \"Process Initiator\",\r\n        \"global\": \"Global\",\r\n        \"currentUnit\": \"Current Unit\",\r\n        \"currentDepartment\": \"Current Department\",\r\n        \"assignPerformer\": \"Assign Rule\",\r\n        \"set\": \"(Set)\",\r\n        \"operator\": \"Assign Operator\",\r\n        \"multiSelect\": \"Allow Selecting Multiple Candidates\",\r\n        \"necessary\": \"When there is only one candidate, manual selection is still required\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"approvelItems\": {\r\n        \"approvalOptions\": \"Approval Options\",\r\n        \"forward\": \"Forward\",\r\n        \"backward\": \"Backward\",\r\n        \"abort\": \"Abort\",\r\n        \"value\": \"Number\",\r\n        \"text\": \"Name\",\r\n        \"workFlowAction\": \"Workflow Direction\",\r\n        \"isDefault\": \"Default\",\r\n        \"no\": \"No\",\r\n        \"yes\": \"Yes\",\r\n        \"commentNecessary\": \"Comment Required\",\r\n        \"attachmentNecessary\": \"Attachment Upload\",\r\n        \"certification\": \"Digital Signature\",\r\n        \"signatureNecessary\": \"Manual Signature Required\",\r\n        \"defaultComment\": \"Default Comment\",\r\n        \"zh-CHS\": \"Simplified Chinese\",\r\n        \"zh-CHT\": \"Traditional Chinese\",\r\n        \"en\": \"English\",\r\n        \"workFlowActionNotNull\": \"Approval item workflow direction cannot be empty, please modify!\",\r\n        \"deleteRow\": \"Please select an option first!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\",\r\n        \"approvalAction\": \"Approval Action\",\r\n        \"lineNumber\": \"Number\"\r\n      },\r\n      \"approvalPivot\": {\r\n        \"remind\": \"Text Prompt\",\r\n        \"type\": \"Type\",\r\n        \"condition\": \"Condition\",\r\n        \"title\": \"Display Name\",\r\n        \"description\": \"Detailed Description\",\r\n        \"approvalPivot\": \"Approval Key Point\",\r\n        \"selectedRow\": \"Approval key point not selected!\",\r\n        \"configTitle\": \"Display title not filled!\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"enable\": \"Enable\",\r\n        \"expand\": \"Expand\",\r\n        \"showTitle\": \"Display Title\",\r\n        \"list\": \"List\",\r\n        \"add\": \"Add\",\r\n        \"delete\": \"Delete\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"anonymousSet\": {\r\n        \"anonymousOpt\": \"Anonymous Option\",\r\n        \"approver\": \"Approver\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"anonymousSet\": \"Anonymous Settings\",\r\n        \"isAnonymity\": \"Enable\",\r\n        \"anonymous\": \"Anonymous Alias\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"activityList\": {\r\n        \"name\": \"Name\",\r\n        \"checkeds\": \"No activity nodes selected\",\r\n        \"lineNumber\": \"Number\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      },\r\n      \"activityComponent\": {\r\n        \"component\": \"Component\",\r\n        \"method\": \"Component Method\",\r\n        \"inconsistentParameters\": \"Inconsistent parameters, please check\",\r\n        \"longerExists\": \"The component no longer exists in this method\",\r\n        \"absent\": \"Cancel\",\r\n        \"pleaseCheck\": \", please check\",\r\n        \"edit\": \"Edit\",\r\n        \"deleteRow\": \"Delete\",\r\n        \"executionTime\": \"Execution Time\",\r\n        \"cmpName\": \"Component Name\",\r\n        \"metadataId\": \"Component ID\",\r\n        \"methodCode\": \"Component Method\",\r\n        \"isForCompensation\": \"Compensation Operation\",\r\n        \"yes\": \"Yes\",\r\n        \"no\": \"No\",\r\n        \"operate\": \"Operate\",\r\n        \"code\": \"Code\",\r\n        \"name\": \"Name\",\r\n        \"value\": \"Parameter Value\",\r\n        \"editComponent\": \"Edit Component\",\r\n        \"confirmDelete\": \"Confirm whether to delete the component?\",\r\n        \"curComponent\": \"No component selected!\",\r\n        \"newComponent\": \"New Component\",\r\n        \"sameCmp\": \"There are duplicate process components\",\r\n        \"cmpMethod\": \"Component Method:\",\r\n        \"executionTimeNotNull\": \"Component execution time cannot be empty!\",\r\n        \"param\": \" parameter\",\r\n        \"required\": \"Required\",\r\n        \"set\": \"(Set)\",\r\n        \"notSet\": \"(Not Set)\",\r\n        \"PROCESSINSTANCE_STARTED\": \"Process Started\",\r\n        \"PROCESSINSTANCE_SUSPENDED\": \"Process Suspended\",\r\n        \"PROCESSINSTANCE_RESUMED\": \"Process Resumed\",\r\n        \"PROCESSINSTANCE_COMPLETED\": \"Process Completed\",\r\n        \"PROCESSINSTANCE_ABORTED\": \"Process Aborted\",\r\n        \"PROCESSINSTANCE_CANCELED\": \"Process Canceled\",\r\n        \"PROCESSINSTANCE_REACTIVATED\": \"Process Reactivated\",\r\n        \"PROCESSINSTANCE_ROLLBACK\": \"Process Rolled Back\",\r\n        \"PROCESSINSTANCE_RESUBMIT\": \"Resubmit Process\",\r\n        \"ACTIVITY_AND_PARTICIPANT_UPDATED\": \"Activity Participants Changed\",\r\n        \"PROCESSINSTANCE_ABORTED_BY_ADMIN\": \"Terminated by Administrator\",\r\n        \"PROCESSINSTANCE_BEFORE_START\": \"Before Process Start\",\r\n        \"WORKITEM_BEFORE_COMPLETE\": \"Before Task Completion\",\r\n        \"WORKITEM_AFTER_COMPLETE\": \"After Task Completion\",\r\n        \"LOADDATA\": \"Retrieve Data\",\r\n        \"ACTIVITY_STARTED\": \"Activity Started\",\r\n        \"ACTIVITY_COMPLETED\": \"Activity Completed\",\r\n        \"ACTIVITY_ABORTED\": \"Activity Aborted\",\r\n        \"WORKITEM_CREATED\": \"Work Item Created\",\r\n        \"WORKITEM_COMPLETED\": \"Work Item Completed\",\r\n        \"WORKITEM_SUSPENDED\": \"Work Item Suspended\",\r\n        \"WORKITEM_RESUMED\": \"Work Item Resumed\",\r\n        \"WORKITEM_ABORTED\": \"Work Item Aborted\",\r\n        \"WORKITEM_RETRIEVED\": \"Work Item Retrieved\",\r\n        \"WORKITEM_CLAIMED\": \"Work Item Claimed\",\r\n        \"WORKITEM_UNCLAIMED\": \"Work Item Unclaimed\",\r\n        \"ACTIVITY_ASSIGNMENT\": \"Task Assignment\",\r\n        \"deleteNotAllowed\": \"The data retrieval component cannot be deleted, please understand!\",\r\n        \"tips\": \"Tips:\",\r\n        \"prefabricated\": \"External process components have been prefabricated, only data retrieval components are retained here\",\r\n        \"add\": \"Add\",\r\n        \"moveUp\": \"Move Up\",\r\n        \"moveDown\": \"Move Down\",\r\n        \"clickCancel\": \"Cancel\",\r\n        \"clickOK\": \"OK\"\r\n      }\r\n    }\r\n  },\r\n  \"zh-CHT\": {\r\n    \"validate\": {\r\n      \"noProcessHeader\": \"模型不存在processHeader内容\",\r\n      \"cmpsEmpty\": \"流程構件為空\",\r\n      \"cmpsEmptyMsg\": \"流程構件不允許為空,請聯系表單開發確認問題\",\r\n      \"directNoPf\": \"啟動管道為【直接】的流程不應該包含共亯（PF）的流程構件\",\r\n      \"directNoPfMsg\": \"請移除以下共亯（PF）的流程構件:\",\r\n      \"noLoadDataCmp\": \"缺少執行時機為[獲取數據]的流程構件\",\r\n      \"noLoadDataCmpMsg\": \"流程定義不能缺少取數構件,請聯系表單開發確認問題\",\r\n      \"noStartCmp\": \"缺少執行時機為[流程啟動]的流程構件\",\r\n      \"noStartCmpMsg\": \"會導致流程啟動時無法修改單據狀態,請聯系表單開發確認問題\",\r\n      \"lackProcessCompleteCmp\": \"缺少執行時機為[流程完成]的流程構件\",\r\n      \"lackProcessCompleteCmpMsg\": \"會導致流程完成時無法修改單據狀態,請聯系表單開發確認問題\",\r\n      \"lackProcessAbortCmp\": \"缺少執行時機為[流程終止]的流程構件\",\r\n      \"lackProcessAbortCmpMsg\": \"會導致流程終止時無法修改單據狀態,請聯系表單開發確認問題\",\r\n      \"lackProcessCancelCmp\": \"缺少執行時機為[流程終止]的流程構件\",\r\n      \"lackProcessCancelCmpMsg\": \"會導致流程終止時無法修改單據狀態,請聯系表單開發確認問題\",\r\n      \"lackProcessBackCmp\": \"缺少執行時機為[流程駁回]的流程構件\",\r\n      \"lackProcessBackCmpMsg\": \"會導致流程駁回時無法修改單據狀態,請聯系表單開發確認問題\",\r\n      \"lackProcessReStartCmp\": \"缺少執行時機為[重新提交]的流程構件\",\r\n      \"lackProcessReStartCmpMsg\": \"會導致流程重新提交時無法修改單據狀態,請聯系表單開發確認問題\",\r\n      \"parallelGatewayCheck\": \"【並行閘道】沒有成對出現\",\r\n      \"parallelGatewayCheckMsg\": \"【並行閘道】需作為一條流程分支的折開節點和彙聚節點成對出現,請修改\",\r\n      \"approvalPerformerCheck\": \"活動,未設定參與者\",\r\n      \"noVariable1\": \"活動【變數設定】内容中已設定變數\",\r\n      \"noVariable2\": \"在流程内容【流程變數】中已不存在,請修改！\",\r\n      \"activity\": \"活動【\",\r\n      \"noStartActivity\": \"】的標識不合法,不是以[startActivity]開頭\",\r\n      \"noExclusiveGateway\": \"】的標識不合法,不是以[ExclusiveGateway]開頭\",\r\n      \"noParallelGateway\": \"】的標識不合法,不是以[ParallelGateway]開頭\",\r\n      \"noUserActivity\": \"】的標識不合法,不是以[UserActivity]開頭\",\r\n      \"noOperationActivity\": \"】的標識不合法,不是以[OperationActivity]開頭\",\r\n      \"noNotifyActivity\": \"】的標識不合法,不是以[NotifyActivity]開頭\",\r\n      \"noCallActivitySubProcess\": \"】的標識不合法,不是以[CallActivitySubProcess]開頭\",\r\n      \"noAutoActivity\": \"】的標識不合法,不是以[AutoActivity]開頭\",\r\n      \"noIntermediateCatchEvent\": \"】的標識不合法,不是以[IntermediateCatchEventImpl]開頭\",\r\n      \"noMessageActivity\": \"】的標識不合法,不是以[MessageActivity]開頭\",\r\n      \"noAifCreationBillActivity\": \"】的標識不合法,不是以[AifCreationBillActivity]開頭\",\r\n      \"noEndEvent\": \"】的標識不合法,不是以[EndEvent]開頭\",\r\n      \"mark\": \"標識為【\",\r\n      \"noFlowNodeChsName\": \"】的活動簡體中文名稱為空，請修改\",\r\n      \"nameExceedsLengthLimit\": \"】的名稱超長，不能超過40個字元，請修改\"\r\n    },\r\n    \"processEditor\": {\r\n      \"tip\": \"提示\",\r\n      \"showButton\": \"顯示查看模型按鈕\",\r\n      \"changeRecord\": \"流程變更記錄\",\r\n      \"noDtInfo\": \"不存在設計時流程信息！請先賦值！\",\r\n      \"noRtInfo\": \"不存在運行時流程信息！請先賦值！\",\r\n      \"wrongMoment\": \"設計者運行時機錯誤！\",\r\n      \"prompted\": \"系統提示\",\r\n      \"saveSuccess\": \"保存成功\",\r\n      \"waitReview\": \"保存成功，等待發起審核\",\r\n      \"successPublish\": \"發布成功\",\r\n      \"publishFail\": \"發布失敗，\",\r\n      \"policyConflict\": \"會簽策略下，“駁回規則”不允許“動態選擇駁回級次”，請修改！\",\r\n      \"noPermissionToSave\": \"當前用戶不具備另存流程的權限\",\r\n      \"closeProc1\": \"關閉此頁面？\",\r\n      \"closeProc2\": \"系統可能不會保存您所做的更改。\",\r\n      \"viewModel\": \"查看模型\",\r\n      \"copied\": \"模型已經復制到剪貼板\",\r\n      \"button\": {\r\n        \"saveProc\": \"保存\",\r\n        \"releaseProc\": \"發布\",\r\n        \"sync\": \"同步設計時包\",\r\n        \"saveAs\": \"另存為\",\r\n        \"procRecord\": \"流程記錄\",\r\n        \"viewProcModel\": \"查看模型\",\r\n        \"closeProc\": \"關閉\"\r\n      }\r\n    },\r\n    \"designer\": {\r\n      \"wfEditorUi\": {\r\n        \"basicElements\": \"基本元素\",\r\n        \"readOnly\": \"只讀\"\r\n      },\r\n      \"wfProcessCell\": {\r\n        \"basicInfo\": \"基本信息\",\r\n        \"name\": \"名稱\",\r\n        \"nameLanguage\": \"名稱\",\r\n        \"key\": \"標識\",\r\n        \"entryForm\": \"流程分類\",\r\n        \"startMode\": \"啟動方式\",\r\n        \"wfTitle\": \"流程摘要\",\r\n        \"formDef\": \"表單定義\",\r\n        \"formsPC\": \"PC表單\",\r\n        \"formsMobile\": \"移動表單\",\r\n        \"process\": \"事件監聽\",\r\n        \"advanced\": \"高級屬性\",\r\n        \"basic\": \"基礎屬性\",\r\n        \"wfComponent\": \"流程構件\",\r\n        \"otherConfig\": \"其他配置\",\r\n        \"processVariables\": \"流程變量\",\r\n        \"basicElements\": \"基本元素\",\r\n        \"customizeAction\": \"自定義動作\",\r\n        \"timelinessInfo\": \"時效信息\",\r\n        \"enablePriority\": \"啟用緊急程度\",\r\n        \"enableWholeOrderRetrieve\": \"撤回在審單據\",\r\n        \"messageProperty\": \"影像設置\",\r\n        \"timeLimitControl\": \"超時操作\",\r\n        \"messageNotice\": \"消息通知\",\r\n        \"extendProperty\": \"擴展屬性\",\r\n        \"directTips\": \"提示：啟動方式切換為直接，直接啟動是默認的流程啟動方式，切換後會移除共享(PF)相關構件，請知悉！\",\r\n        \"externalTips\": \"提示：啟動方式切換為外部流程，適用於作為共享流程的外部流程相關場景，切換後保留流程上的共享（PF)相關構件，請知悉！\",\r\n        \"subprocessTips\": \"提示：啟動方式切換為子流程，適用於調用式子流程的場景，切換後會移除除取數構件外的其他流程構件，請知悉！\"\r\n      },\r\n      \"WfSequenceFlowEdge\": {\r\n        \"basicInfo\": \"基本信息\",\r\n        \"basic\": \"基礎屬性\",\r\n        \"name\": \"名稱\",\r\n        \"nameLanguage\": \"名稱\",\r\n        \"id\": \"標識\",\r\n        \"condition\": \"條件選項\",\r\n        \"ConditionExpression\": \"條件\",\r\n        \"default\": \"缺省轉移線\"\r\n      },\r\n      \"wfSidebar\": {\r\n        \"bizactivitylib\": \"業務活動\"\r\n      }\r\n    },\r\n    \"app\": {\r\n      \"processDesigner\": {\r\n        \"all\": \"所有\",\r\n        \"assign\": \"指派\",\r\n        \"claim\": \"領用\",\r\n        \"preempt\": \"搶占模式\",\r\n        \"parallel\": \"並行會簽\",\r\n        \"sequential\": \"串行會簽\",\r\n        \"true\": \"是\",\r\n        \"false\": \"否\",\r\n        \"dataId\": \"單據內碼\",\r\n        \"procInstId\": \"流程實例ID\",\r\n        \"bizDefKey\": \"入口單據ID\",\r\n        \"processDefinitionKey\": \"流程定義KEY\",\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"businessCreator\": \"業務發起人\",\r\n        \"procInstDescription\": \"流程摘要\",\r\n        \"comment\": \"審批意見\",\r\n        \"bizDefName\": \"流程分類名稱\",\r\n        \"curLoginUsername\": \"當前登錄人名稱\",\r\n        \"procInstCreatorName\": \"流程發起人名稱\",\r\n        \"currentParticipantId\": \"當前辦理人ID\",\r\n        \"currentParticipantName\": \"當前辦理人名稱\",\r\n        \"currentUser\": \"當前登錄用戶\",\r\n        \"preActExecutors\": \"上一個活動的執行人\",\r\n        \"collectionElementVariable\": \"多實例子活動元素變數\",\r\n        \"subCollectionElementVariable\": \"多實例子流程元素變數\",\r\n        \"nrOfInstances\": \"多實例總數量\",\r\n        \"nrOfCompletedInstances\": \"多實例已完成數量\",\r\n        \"nrOfActiveInstances\": \"多實例正在運行中的數量\",\r\n        \"nrOfForward\": \"通過實例數量\",\r\n        \"nrOfBackward\": \"駁回實例數量\",\r\n        \"nrOfAbort\": \"終止實例數量\",\r\n        \"conclusionType\": \"結論類型\",\r\n        \"conclusionValue\": \"結論值\",\r\n        \"directSuperior\": \"直接上級\",\r\n        \"higherSuperior\": \"間接上級\",\r\n        \"DIRECT\": \"直接\",\r\n        \"EXTERNAL_PROCESS\": \"外部流程\",\r\n        \"SUB_PROCESS\": \"子流程\",\r\n        \"ALL\": \"電腦端和移動端\",\r\n        \"WEB\": \"電腦端\",\r\n        \"APP\": \"移動端\",\r\n        \"conclusionTypeTips\": \"審批項流轉方向，1正向，2反向，3終止\",\r\n        \"conclusionValueTips\": \"審批項編號，例如，Pass、Back、Refuse\",\r\n        \"copy\": \"_副本\",\r\n        \"saveAs\": \"另存為\",\r\n        \"tips\": \"系統提示\",\r\n        \"saveAsSuccess\": \"另存為成功\",\r\n        \"saveAsFail\": \"另存為失敗，請檢查流程是否正確！\",\r\n        \"syncDt\": \"是否將當前版本流程定義同步到設計時流程定義包\",\r\n        \"syncSuccess\": \"同步成功\",\r\n        \"beforeCompleteStrategyChange\": \"當前節點存在運行中的活動實例，不允許調整完成策略，請了解！\",\r\n        \"releaseProcess\": \"發布前審核\",\r\n        \"auto\": \"自動生單\",\r\n        \"push\": \"推式生單\",\r\n        \"pull\": \"拉式生單\",\r\n        \"creation\": \"通過生單流程生成目標單\"\r\n      }\r\n    },\r\n    \"multiInstanceLoopCharacteristics\": {\r\n      \"loopCharacteristics\": \"多實例設置\",\r\n      \"set\": \"（已設置）\",\r\n      \"notSet\": \"（未設置）\",\r\n      \"isEnable\": \"是否啟用\",\r\n      \"isSequential\": \"是否串行\",\r\n      \"loopCardinality\": \"元素集合\",\r\n      \"completionConditionRules\": \"完成條件\",\r\n      \"promptAct1\": \"1、[集合]中的元素個數為子活動啟動實例數量。\",\r\n      \"promptAct2\": \"2、子活動啟動時系統會將[集合]中的元素拆分映射到各個子活動實例的[元素變數]。\",\r\n      \"promptProc1\": \"1、[集合]中的元素個數為子流程啟動實例數量。\",\r\n      \"promptProc2\": \"2、子流程啟動時系統會將[集合]中的元素拆分映射到各個子流程實例的[元素變數]。\",\r\n      \"checkPrompt\": \"當前節點存在運行中的活動實例，不允許調整\",\r\n      \"conditionRulesSet\": \"（已設置）\",\r\n      \"completionConditionRulesList\": {\r\n        \"forward\": \"正向\",\r\n        \"backward\": \"反向\",\r\n        \"abort\": \"終止\"\r\n      }\r\n    },\r\n    \"component\": {\r\n      \"optins\": {\r\n        \"wfOptions\": \"工作流選項\",\r\n        \"specified\": \"指定子流程\",\r\n        \"dynamic\": \"動態子流程\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"subProcessType\": \"子流程類型\",\r\n        \"processType\": \"流程類型\",\r\n        \"bizDef\": \"流程分類\",\r\n        \"procDef\": \"流程定義\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOk\": \"確定\"\r\n      },\r\n      \"voConfig\": {\r\n        \"documentInfo\": \"單據信息\",\r\n        \"viewModelSelection\": \"視圖模型選擇\",\r\n        \"cancel\": \"取消\",\r\n        \"clickOk\": \"確定\",\r\n        \"selectOne\": \"確定\",\r\n        \"documentTypeSelect\": \"單據類型選擇\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"viewModel\": \"視圖模型\",\r\n        \"documenttype\": \"單據類型\",\r\n        \"placeholder\": \"請選擇\"\r\n      },\r\n      \"variableSetting\": {\r\n        \"constant\": \"常數\",\r\n        \"expression\": \"表達式\",\r\n        \"component\": \"構件\",\r\n        \"ACTIVITY_STARTED\": \"活動開始\",\r\n        \"ACTIVITY_COMPLETED\": \"活動結束\",\r\n        \"varAssign\": \"變量賦值\",\r\n        \"varNumber\": \"變量編號\",\r\n        \"REQUIRED\": \"必填\",\r\n        \"varName\": \"變量名稱\",\r\n        \"valueType\": \"值類型\",\r\n        \"executionTime\": \"執行時機\",\r\n        \"valueText\": \"變量值\",\r\n        \"processVariables\": \"流程變量\",\r\n        \"notSelectedVar\": \"尚未選中變量！\",\r\n        \"valueCannotEmpty\": \"變量值不允許為空！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"刪除\",\r\n        \"serialNumber\": \"序號\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"inconsistentParameters\": \"當前構件方法參數不一致，請更新！\",\r\n        \"methodNotExist\": \"當前構件已不存在此方法，請更新！\",\r\n        \"parameterName\": \"參數名\",\r\n        \"parameterValue\": \"參數值\",\r\n        \"methodnotSelected\": \"尚未選擇構件方法\",\r\n        \"metadataNotExist\": \"幫助元數據不存在，請聯繫系統管理員查看原因！\",\r\n        \"errorObtainComponent\": \"獲取解析構件錯誤\",\r\n        \"componentSelection\": \"構件選擇\",\r\n        \"componentName\": \"構件名稱\",\r\n        \"parameterList\": \"參數列表\",\r\n        \"lineNumber\": \"序號\"\r\n      },\r\n      \"urgeHandleRule\": {\r\n        \"urgentApproval\": \"催辦審批：\",\r\n        \"pleaseApprove\": \"請您儘快審批\",\r\n        \"soOn\": \"的\",\r\n        \"urgeHandle\": \"催辦\",\r\n        \"noSendingMethod\": \"尚未選擇發送方式！\",\r\n        \"setMessageTemplate\": \"消息渠道啟用簡訊時需設置消息模板\",\r\n        \"codeEmpty\": \"簡訊模板編號不允許為空\",\r\n        \"noMessageSubject\": \"尚未配置消息主題！\",\r\n        \"noMessageContent\": \"尚未選擇消息內容！\",\r\n        \"earliestTimeNotEmpty\": \"最早允許催辦時間不允許為空\",\r\n        \"minimumTimeNotEmpty\": \"最小允許催辦間隔不允許為空\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"enableUrgeHandle\": \"啟用催辦\",\r\n        \"timeSetting\": \"時間設置\",\r\n        \"earliestTime\": \"最早允許催辦時間（小時）\",\r\n        \"minimumInterval\": \"最小允許催辦間隔（小時）\",\r\n        \"sendingMethod\": \"發送方式\",\r\n        \"messageSubject\": \"消息主題\",\r\n        \"supportEditing\": \"支持編輯\",\r\n        \"messageContent\": \"消息內容\",\r\n        \"displayReminder\": \"顯示催辦人\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"titleExpression\": {\r\n        \"zh-CHS\": \"中文简体\",\r\n        \"zh-CHT\": \"中文繁體\",\r\n        \"en\": \"英文\",\r\n        \"taskDescription\": \"任務描述\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"currentLanguage\": \"當前摘要語言:\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"timeLimitControl\": {\r\n        \"timedOutOperation\": \"超時操作\",\r\n        \"constant\": \"固定值\",\r\n        \"scope\": \"時間範圍\",\r\n        \"day\": \"天\",\r\n        \"hour\": \"時\",\r\n        \"minute\": \"分\",\r\n        \"BeforeDuration\": \"到期之前\",\r\n        \"OnDuration\": \"到期時\",\r\n        \"AfterDuration\": \"到期之後\",\r\n        \"SendMessageExpireOperation\": \"超時預警\",\r\n        \"AutoHandleExpireOperation\": \"自動辦理\",\r\n        \"curDay\": \"當天\",\r\n        \"durationType\": \"期限類型\",\r\n        \"required\": \"必填\",\r\n        \"timeDuration\": \"時長\",\r\n        \"timeUnit\": \"單位\",\r\n        \"operationTypeName\": \"操作類型名稱\",\r\n        \"sendType\": \"操作\",\r\n        \"onlyBeInteger\": \"任務期限只能是整數！\",\r\n        \"setOperation\": \"請設置超時操作！\",\r\n        \"setType\": \"請設置自動辦理類型！\",\r\n        \"setComments\": \"請設置自動辦理意見！\",\r\n        \"selectedOperation\": \"尚未選中預警操作！\",\r\n        \"notSupportAutomatic\": \"下一節點是由當前辦理人指派的話，當前節點不支持任務自動辦理\",\r\n        \"warningMessage\": \"預警消息\",\r\n        \"automaticProcessing\": \"自動辦理\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"timelinessControl\": \"任務處理時效控制\",\r\n        \"isEnable\": \"是否啟用\",\r\n        \"taskDeadline\": \"任務期限\",\r\n        \"timelyOperation\": \"時效預警操作\",\r\n        \"actionList\": \"操作列表\",\r\n        \"add\": \"新增\",\r\n        \"remove\": \"刪除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"workItemParticipant\": \"當前節點辦理人\",\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"to-doMessageTimeOut\": \"您有一條待辦消息即將超時。\",\r\n        \"messageTimeOut\": \"您有一條消息即將超時\",\r\n        \"agree\": \"同意\"\r\n      },\r\n      \"sendMessageOperation\": {\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"workItemParticipant\": \"當前節點辦理人\",\r\n        \"preActExecutors\": \"上一節點辦理人\",\r\n        \"day\": \"天\",\r\n        \"hour\": \"時\",\r\n        \"minute\": \"分\",\r\n        \"cycleTimeNotEmpty\": \"循環時間間隔不允許為空！\",\r\n        \"sendMethodNotEmpty\": \"發送方式不允許為空！\",\r\n        \"subjectNotEmpty\": \"消息主題不允許為空！\",\r\n        \"contentNotEmpty\": \"消息內容不允許為空！\",\r\n        \"recipientNotEmpty\": \"接收人不允許為空！\",\r\n        \"messageTemplate\": \"消息渠道啟用短信時需設置消息模板\",\r\n        \"smsTemplateNumberNotEmpty\": \"短信模板編號不允許為空\",\r\n        \"cycleEnable\": \"啟用循環預警\",\r\n        \"cycleTime\": \"循環時間間隔\",\r\n        \"sendType\": \"發送方式\",\r\n        \"subject\": \"消息主題\",\r\n        \"message\": \"消息內容\",\r\n        \"receiverVari\": \"接收人\",\r\n        \"sysUsers\": \"系統用戶\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"opinionsNotEmpty\": \"自動辦理意見不允許為空！\",\r\n        \"processingNotEmpty\": \"自動辦理不允許為空！\",\r\n        \"automaticProcessSet\": \"自動辦理設置\",\r\n        \"automaticProcessMethod\": \"自動辦理方式\",\r\n        \"automaticOpinionHandle\": \"自動辦理意見\"\r\n      },\r\n      \"smsMessageTemplate\": {\r\n        \"smsTemplateContent\": \"協力廠商簡訊服務商裏定義的範本原文，例如：阿裡雲您的管控大數據平臺帳號已開通，用戶名為：${username}，初始密碼為：${code}，請及時登入系統\",\r\n        \"code\": \"變量\",\r\n        \"value\": \"值\",\r\n        \"noRowsSelected\": \"尚未選中行\",\r\n        \"smsMessageTemplate\": \"短信服務模板\",\r\n        \"tips1\": \"消息模板是指已經在第三方短信服務商定義模板後，需要在GS Cloud裡將短信服務商的模板變量和GS Cloud變量關聯\",\r\n        \"tips2\": \"第三方短信服務商裡定義的模板編號，例如: 阿里雲 SMS_220626324\",\r\n        \"tips3\": \"將第三方短信服務商模板裡的變量和GSCloud裡的變量配置關聯\",\r\n        \"smsTemplateNumber\": \"短信模板編號\",\r\n        \"smsVariableBinding\": \"短信變量綁定\",\r\n        \"addSmsVariable\": \"新增\",\r\n        \"deleteSmsVariable\": \"刪除\"\r\n      },\r\n      \"signRule\": {\r\n        \"countersignRules\": \"會簽規則\",\r\n        \"byNumber\": \"按數量\",\r\n        \"byProportion\": \"按比例(%)\",\r\n        \"customConditions\": \"自定義條件\",\r\n        \"value\": \"編號\",\r\n        \"text\": \"名稱\",\r\n        \"conclusionName\": \"結論名稱\",\r\n        \"conclusionValue\": \"結論值\",\r\n        \"calculateType\": \"計算方式\",\r\n        \"conditionValue\": \"條件值\",\r\n        \"waitAllVotes\": \"等待全員辦結\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"notEmpty\": \"完成策略為會簽時，會簽規則不允許為空，請了解！\",\r\n        \"pleaseSelect\": \"請首先選中一條審批項！\",\r\n        \"maxConditionValue\": \"條件值最大值是100\",\r\n        \"minConditionValue\": \"條件值最小值是0\",\r\n        \"noConditional\": \"結論執行方式為全票或一票時不需要條件值\",\r\n        \"set\": \"（已設置）\",\r\n        \"ruleList\": \"規則列表\",\r\n        \"approvalOptions\": \"審批選項\",\r\n        \"clickCancel\": \"取消\",\r\n        \"deleteRow\": \"重置\",\r\n        \"clickOK\": \"確定\",\r\n      },\r\n      \"saveAsEdit\": {\r\n        \"public\": \"公有\",\r\n        \"private\": \"私有\",\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"nameNotEmpty\": \"流程名稱不能為空\",\r\n        \"organizationNotEmpty\": \"維護組織不能為空\",\r\n        \"organization\": \"組織\",\r\n        \"basicAttributes\": \"基礎屬性\",\r\n        \"processName\": \"流程名稱\",\r\n        \"processKeyValue\": \"流程Key值\",\r\n        \"maintenanceOrg\": \"維護組織\",\r\n        \"accessLevel\": \"訪問級別\",\r\n        \"saveAsCancel\": \"取消\",\r\n        \"saveAsOK\": \"確定\"\r\n      },\r\n      \"release\": {\r\n        \"release\": \"流程發布\",\r\n        \"update\": \"流程更新\",\r\n        \"applicantName\": \"申請人名稱\",\r\n        \"applicantDepartment\": \"申請人部門\",\r\n        \"procName\": \"流程名稱\",\r\n        \"procVersion\": \"流程版本\",\r\n        \"releaseType\": \"發布類型\",\r\n        \"textDetail\": \"說明\",\r\n        \"saveAsCancel\": \"取消\",\r\n        \"saveAsOK\": \"確定\"\r\n      },\r\n      \"processVariables\": {\r\n        \"string\": \"字符\",\r\n        \"integer\": \"整型\",\r\n        \"decimal\": \"小數\",\r\n        \"boolean\": \"布爾\",\r\n        \"constant\": \"常量\",\r\n        \"expression\": \"表達式\",\r\n        \"component\": \"構件\",\r\n        \"name\": \"變量編號\",\r\n        \"required\": \"必填\",\r\n        \"documentation\": \"變量名稱\",\r\n        \"basicType\": \"變量類型\",\r\n        \"description\": \"描述\",\r\n        \"tag\": \"初始值類型\",\r\n        \"valueText\": \"初始值\",\r\n        \"processVariables\": \"流程變量\",\r\n        \"notSelected\": \"尚未選中流程變量！\",\r\n        \"variableNumberEmpty\": \"變量編號不允許為空！\",\r\n        \"variableNameEmpty\": \"變量名稱不允許為空！\",\r\n        \"variableNumberNotStandard\": \"變量編號只能包含字母、數字和下劃線，且不能以數字開頭！\",\r\n        \"tagNotEmpty\": \"初始值類型不允許為空！\",\r\n        \"codeDuplicates\": \"流程變量編號不允許重複！\",\r\n        \"alreadyExists\": \"新增的變量已存在！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"刪除\",\r\n        \"number\": \"序號\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"participant\": {\r\n        \"user\": \"用戶\",\r\n        \"variable\": \"變量參與者\",\r\n        \"position\": \"崗位\",\r\n        \"role\": \"角色\",\r\n        \"component\": \"構件參與者\",\r\n        \"reportingLine\": \"匯報關係\",\r\n        \"matrix\": \"矩陣\",\r\n        \"activityExecutor\": \"歷史活動辦理人\",\r\n        \"organization\": \"單位/部門\",\r\n        \"all\": \"所有\",\r\n        \"assign\": \"指派\",\r\n        \"claim\": \"領用\",\r\n        \"currentUser\": \"當前辦理人\",\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"participantSet\": \"參與者設置\",\r\n        \"order\": \"序號\",\r\n        \"type\": \"類型\",\r\n        \"performerName\": \"名稱\",\r\n        \"description\": \"描述\",\r\n        \"condition\": \"啟用條件\",\r\n        \"dataMovement1\": \"是否將默認辦理人數據移動到到備選辦理人？\",\r\n        \"dataMovement2\": \"是否將備選辦理人數據移動到默認辦理人？\",\r\n        \"participantSelection\": \"參與者選擇\",\r\n        \"selectProcessVariables\": \"尚未選擇流程變量！\",\r\n        \"selectVariableValueType\": \"尚未選擇變量值類型！\",\r\n        \"selectRelation\": \"尚未選擇關係！\",\r\n        \"selectPosition\": \"尚未選擇崗位！\",\r\n        \"selectOrgType\": \"尚未選擇組織類型！\",\r\n        \"orgFill\": \"尚未填寫組織！\",\r\n        \"refOrgIdNotNull\": \"參照類型為組織時，參照組織欄位不能為空\",\r\n        \"refUserIdNotNull\": \"參照類型為系統用戶/員工時，參照人欄位不能為空\",\r\n        \"repDefConfigured\": \"該匯報關係已經進行過配置\",\r\n        \"atLeastOneCondition\": \"條件欄位至少要存在一個\",\r\n        \"dataFieldAliasNotNull\": \"數據欄位不能為空\",\r\n        \"matrixConfigured\": \"該矩陣已經進行過配置\",\r\n        \"selectPerformer\": \"尚未選擇參與者\",\r\n        \"definitionDeleted\": \"該條匯報關係數據的定義已刪除，該條數據將刪除\",\r\n        \"matrixDeleted\": \"該條矩陣數據的定義已刪除，該條數據將刪除\",\r\n        \"selectParticipantInfo\": \"請先選中一條參與者信息！\",\r\n        \"noRowSelected\": \"尚未選中行！\",\r\n        \"selectDefaultHandler\": \"請先選中一條默認辦理人\",\r\n        \"selectpotentialtHandler\": \"請先選中一條備選辦理人\",\r\n        \"org\": \"組織：\",\r\n        \"positionType1\": \"崗位類型：通用崗位，組織：\",\r\n        \"positionType2\": \"崗位類型：通用崗位\",\r\n        \"positionType3\": \"崗位類型：組織崗位\",\r\n        \"comp\": \"構件：\",\r\n        \"parameters:\": \"，參數：{\",\r\n        \"referencePerson:\": \"參照人：\",\r\n        \"referenceOrganization:\": \"參照組織：\",\r\n        \"condition1\": \"條件1：\",\r\n        \"condition2\": \"條件2：\",\r\n        \"condition3\": \"條件3：\",\r\n        \"data\": \"數據：\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"allocationPolicy\": \"分配策略\",\r\n        \"operator\": \"指派操作人\",\r\n        \"multiSelect\": \"允許多選\",\r\n        \"necessary\": \"只有一個待選用戶時，仍需手工選擇\",\r\n        \"notifyRecipient\": \"知會接收人\",\r\n        \"defaultHandler\": \"默認辦理人\",\r\n        \"new\": \"新增\",\r\n        \"editPerformer\": \"編輯\",\r\n        \"removePerformer\": \"移除\",\r\n        \"clearPerformer\": \"清空\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"alternativeHandler\": \"備選辦理人\",\r\n        \"isAllScope\": \"指定參與人時不限範圍，從全員用戶中選擇\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"alternativeScope\": \"備選範圍\",\r\n        \"orgId\": \"組織ID\",\r\n        \"includeChildren\": \"包含下級\",\r\n        \"conditon\": \"啟用條件\",\r\n        \"currentUnit\": \"本組織\",\r\n        \"currentDepartment\": \"本部門\",\r\n        \"variableOrganization\": \"變量組織\"\r\n      },\r\n      \"activityExecutor\": {\r\n        \"name\": \"名稱\",\r\n        \"eventHandler\": \">活動辦理人\",\r\n        \"nodeName\": \"節點名稱\",\r\n        \"enablingConditions\": \"啟用條件\",\r\n        \"activityList\": \"活動列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"componentPerformer\": {\r\n        \"componentMethod\": \"當前構件方法參數不一致，請更新！\",\r\n        \"methodNotExist\": \"當前構件已不存在此方法，請更新！\",\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"description\": \"描述\",\r\n        \"valueText\": \"參數值\",\r\n        \"help\": \"幫助\",\r\n        \"errorObtaining\": \"獲取解析構件出錯\",\r\n        \"componentSelection\": \"構件選擇\",\r\n        \"metadataNotExist\": \"幫助元數據不存在！\",\r\n        \"serverSideNotFound\": \"服務器端未找到幫助元數據，請檢查元數據是否已經部署到環境中\",\r\n        \"componentName\": \"構件名稱\",\r\n        \"componentSelect\": \"構件選擇\",\r\n        \"parameterList\": \"參數列表\"\r\n      },\r\n      \"matrixPerformer\": {\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"help\": \"幫助\",\r\n        \"multivalue\": \"多值\",\r\n        \"enumSelection\": \"枚舉選擇\",\r\n        \"refMatrixTable\": \"引用矩陣表\",\r\n        \"matrixTable\": \"矩陣表\",\r\n        \"curDataFieldValue\": \"結果列\",\r\n        \"conditionFields\": \"條件字段\",\r\n        \"condition\": \"啟用條件\",\r\n        \"key\": \"鍵\",\r\n        \"value\": \"值\",\r\n        \"notSelectEnum\": \"尚未選中枚舉值\",\r\n        \"cancel\": \"取消\",\r\n        \"onConfirm\": \"確定\",\r\n        \"lineNumber\": \"序號\"\r\n      },\r\n      \"performerOptions\": {\r\n        \"leave\": \"向下流轉\",\r\n        \"throwException\": \"異常提示\",\r\n        \"sys\": \"用戶ID\",\r\n        \"administrative_staff\": \"員工ID\",\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"preActExecutors\": \"上一節點辦理人\",\r\n        \"allPassExecutors\": \"所有已辦理人員\",\r\n        \"performerOptions\": \"參與者選項\",\r\n        \"exclusionNotAllowed\": \"所有已辦理人員已設置自動審批，上個節點已辦理人員默認不允許排除！\",\r\n        \"approvalNotAllowed\": \"【分配策略】為【領用】時，不允許設置自動審批，請了解！\",\r\n        \"approvalNotAllowedAsSet\": \"所有已辦理人員已設置不允許審批，所以上個節點已辦理人員默認不允許自動審批！\",\r\n        \"allocationStrategyIsCollect\": \"【分配策略】為【領用】時，不允許設置自動審批，請了解！\",\r\n        \"set\": \"（已設置）\",\r\n        \"advancedOptions\": \"參與者高級選項\",\r\n        \"historicFirst\": \"再次進入節點時，辦理人是節點的已辦人員\",\r\n        \"noPerformerStrategy\": \"辦理人為空策略：\",\r\n        \"excludeProcInstCreator\": \"排除辦理人選項\",\r\n        \"defaultNotParticipate\": \"流程發起人默認不參與審批\",\r\n        \"excludePreActExecutors\": \"上個節點已辦理人員默認不參與審批\",\r\n        \"excludeAllPassExecutors\": \"所有已辦理人員默認不參與審批\",\r\n        \"excludeExprPerformer\": \"流程變量：\",\r\n        \"variableOrgTypes\": \"變量值類型：\",\r\n        \"automaticApprovalOptions\": \"自動審批選項\",\r\n        \"autoProcInstCreator\": \"流程發起人默認自動審批通過\",\r\n        \"autoPreActExecutors\": \"上一節點辦理人員默認自動審批通過\",\r\n        \"autoAllPassExecutors\": \"所有已辦理人員默認自動審批通過\",\r\n        \"cancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"positionPerformer\": {\r\n        \"orgPosition\": \"組織岗\",\r\n        \"generalPosition\": \"通用岗\",\r\n        \"sysPositions\": \"系統岗位\",\r\n        \"positionType\": \"岗位類型\",\r\n        \"role\": \"角色\",\r\n        \"position\": \"岗位\",\r\n        \"sysType\": \"組織類型\",\r\n        \"placeholder\": \"請選擇\",\r\n        \"orgId\": \"組織ID\",\r\n        \"condition\": \"啟用條件\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"reportingLine\": {\r\n        \"higherSuperior\": \"間接上級\",\r\n        \"directSuperior\": \"直接上級\",\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"dept\": \"組織\",\r\n        \"sysUser\": \"系統用戶\",\r\n        \"employee\": \"員工\",\r\n        \"businessFields\": \"業務字段\",\r\n        \"defName\": \"匯報定義\",\r\n        \"dimension\": \"匯報級別\",\r\n        \"curReportingRefer\": \"參照類型\",\r\n        \"usersName\": \"參照人\",\r\n        \"refOrgId\": \"參照組織\",\r\n        \"condition\": \"啟用條件\",\r\n        \"definitionOfReport\": \"匯報關係定義\"\r\n      },\r\n      \"userPerformer\": {\r\n        \"regularUser\": \"固定使用者\",\r\n        \"variablePart\": \"變數參與者\",\r\n        \"sys\": \"系統使用者\",\r\n        \"administrative_organization\": \"員工\",\r\n        \"cantUseContext\": \"行政人員類型不能使用此上下文變數\",\r\n        \"user\": \"使用者\",\r\n        \"variable\": \"變數\",\r\n        \"condition\": \"啟用條件\"\r\n      },\r\n      \"variablePerformer\": {\r\n        \"sys\": \"使用者ID\",\r\n        \"administrative_staff\": \"員工ID\",\r\n        \"oneself\": \"本人\",\r\n        \"administrative_organization\": \"部門ID\",\r\n        \"cantUseContext\": \"行政人員類型不能使用此上下文變數\",\r\n        \"processVariables\": \"流程變數\",\r\n        \"variableOrgTypes\": \"變數值類型\",\r\n        \"relationShipType\": \"關係\",\r\n        \"condition\": \"啟用條件\",\r\n      },\r\n      \"orgPotentialOwner\": {\r\n        \"optionSettings\": \"選項設置\",\r\n        \"global\": \"全體成員\",\r\n        \"currentUnit\": \"本單位\",\r\n        \"currentDepartment\": \"本部門\",\r\n        \"addSignBehind\": \"加簽\",\r\n        \"addSignFront\": \"徵詢\",\r\n        \"transfer\": \"移交\",\r\n        \"notify\": \"知會\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"option\": \"選項\",\r\n        \"enable\": \"是否啟用\",\r\n        \"range\": \"範圍\",\r\n        \"OrgId\": \"組織ID\",\r\n        \"variableOrganization\": \"變數組織\",\r\n        \"includeChildren\": \"包含下級\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"limit\": \"限定人員範圍\",\r\n        \"turnOffPrompt\": \"請關閉限定人員範圍選項\"\r\n      },\r\n      \"note\": {\r\n        \"placeholder\": \"請輸入流程變更記錄\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"MessageNotice\": {\r\n        \"notify\": \"消息通知\",\r\n        \"subject\": \"消息主題\",\r\n        \"content\": \"消息內容\",\r\n        \"sendTime\": \"發送時機\",\r\n        \"sendType\": \"發送方式\",\r\n        \"receiverText\": \"消息接收人\",\r\n        \"procInstCreator\": \"流程發起人，\",\r\n        \"workItemParticipant\": \"任務接收人，\",\r\n        \"messageSet\": \"消息設置\",\r\n        \"selectedRow\": \"尚未選中消息通知！\",\r\n        \"noCopy\": \"沒有待複製的消息通知屬性！\",\r\n        \"batchCopy\": \"批量複製\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"add\": \"新增\",\r\n        \"edit\": \"編輯\",\r\n        \"delete\": \"刪除\",\r\n        \"lineNumber\": \"序號\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"messContent\": `{\"expr\":\"\\'您有一條消息通知。\\'\",\"sexpr\":\"\"}`,\r\n        \"procComplete\": \"流程完成\",\r\n        \"procAborted\": \"流程終止\",\r\n        \"procRollBack\": \"流程驳回\",\r\n        \"workCreated\": \"任務創建\",\r\n        \"actComplete\": \"活動完成\",\r\n        \"actAborted\": \"活動終止\",\r\n        \"email\": \"郵件\",\r\n        \"sms\": \"短信\",\r\n        \"cloudplus\": \"雲\",\r\n        \"processParticipant\": \"流程參與人\",\r\n        \"variableParticipant\": \"變數參與者\",\r\n        \"userParticipant\": \"指定使用者\",\r\n        \"positionParticipant\": \"崗位\",\r\n        \"activityExecutorParticipant\": \"歷史辦理人\",\r\n        \"sys\": \"系統使用者\",\r\n        \"administrative_organization\": \"員工\",\r\n        \"name\": \"名稱\",\r\n        \"noTargetNode\": \"尚未選中節點！\",\r\n        \"noMessageNotifyAttribute!\": \"沒有消息通知屬性！\"\r\n      },\r\n      \"messageNoticeEdit\": {\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"activityExecutorParticipant\": \"歷史辦理人\",\r\n        \"workItemParticipant\": \"任務辦理人\",\r\n        \"sys\": \"系統使用者\",\r\n        \"administrative_organization\": \"員工\",\r\n        \"processParticipant\": \"流程參與人\",\r\n        \"workItemReceiveParticipant\": \"任務接收人\",\r\n        \"variableParticipant\": \"變數參與者\",\r\n        \"userParticipant\": \"指定使用者\",\r\n        \"positionParticipant\": \"崗位\",\r\n        \"sendType\": \"發送方式不允許為空\",\r\n        \"smsMessageTemplate\": \"消息渠道啟用短信時需設置消息模板\",\r\n        \"smsMessageTemplateCode\": \"短信模板編號不允許為空\",\r\n        \"sendTime\": \"發送時機不允許為空\",\r\n        \"subject\": \"消息主題不允許為空\",\r\n        \"content\": \"消息內容不允許為空\",\r\n        \"receivers\": \"接收人不允許為空！\",\r\n        \"processParticipantNotNull\": \"流程參與人不允許為空\",\r\n        \"activityDefIdNotNull\": \"流程參與人為歷史辦理人時，辦理節點不允許為空\",\r\n        \"variableParticipantNotNull\": \"變數參與者不允許為空\",\r\n        \"orgType\": \"變數參與者組織類型不允許為空\",\r\n        \"userIds\": \"指定使用者不允許為空\",\r\n        \"positionId\": \"崗位不允許為空\",\r\n        \"activityList\": \"活動列表\",\r\n        \"position\": \"崗位\",\r\n        \"optionalNodes\": \"可選節點\",\r\n        \"targetNodeList\": \"目標節點列表\",\r\n        \"placeholder\": \"請選擇目標節點\",\r\n        \"optionalAttribute\": \"可選屬性\",\r\n        \"lineNumber\": \"序號\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"messSendType\": \"消息渠道\",\r\n        \"messSubject\": \"消息主題\",\r\n        \"enable\": \"啟用表達式\",\r\n        \"messContent\": \"消息內容\",\r\n        \"recipient\": \"接收人\",\r\n        \"addReceiver\": \"添加\",\r\n        \"organization\": \"組織：\",\r\n        \"posi\": \"崗位：\"\r\n      },\r\n      \"jumpScope\": {\r\n        \"targetNodeOptions\": \"目標節點選項\",\r\n        \"name\": \"名稱\",\r\n        \"outConnectNode\": \"流程圖連線節點\",\r\n        \"global\": \"流程內所有節點\",\r\n        \"afterNodes\": \"所有後繼節點\",\r\n        \"specifiedSet\": \"流程圖連線節點+附加節點\",\r\n        \"firstNode\": \"條件為true的連線節點，當有多條時默認選中首條\",\r\n        \"nullNode\": \"默認為空，每次都手動選擇\",\r\n        \"specifyNode\": \"指定默認節點\",\r\n        \"noSetTargetNode\": \"尚未設置目標節點選項，請了解！\",\r\n        \"noSetSpecifyNode\": \"尚未指定默認節點，請了解！\",\r\n        \"selectedRow\": \"請首先選中一條選項！\",\r\n        \"optionalNodes\": \"可選節點\",\r\n        \"listOfAdditional\": \"附加節點列表\",\r\n        \"pleaseSelect1\": \"請選擇附加節點\",\r\n        \"defaultNode\": \"默認節點\",\r\n        \"pleaseSelect2\": \"請選擇默認節點\",\r\n        \"defaultNodeList\": \"默認節點列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"set\": \"（已設置）\"\r\n      },\r\n      \"imageSet\": {\r\n        \"imageSet\": \"影像設置\",\r\n        \"onlyView\": \"僅可查看\",\r\n        \"edit\": \"編輯\",\r\n        \"reScanStart\": \"發起重掃\",\r\n        \"reScanComplete\": \"重掃完成\",\r\n        \"mutualExclusion\": \"【僅可查看】選項與其他選項互斥，請了解！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"imageOperation\": \"影像操作權限\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"extendProperty\": {\r\n        \"extendProperty\": \"擴展屬性\",\r\n        \"true\": \"是\",\r\n        \"false\": \"否\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"illustrate\": \"說明\",\r\n        \"placeholder\": \"請選擇\",\r\n        \"cancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"expressionEditor\": {\r\n        \"expressionEditor\": \"條件編輯\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"clickCancel\": \"取消\",\r\n        \"changeType\": \"切換類型\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"executeForms\": {\r\n        \"executeForms\": \"表單定義\",\r\n        \"parameters\": \"參數【\",\r\n        \"typeAsvariable\": \"】類型為變量，但在流程變量裡不存在\",\r\n        \"parameterSettings\": \"參數設置\",\r\n        \"formDefinitionList\": \"表單定義列表\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"default\": \"流程默認表單\",\r\n        \"processEmbeddedForm\": \"流程嵌表單\",\r\n        \"formEmbedProcess\": \"表單嵌流程\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"noForm\": \"暫無表單格式\",\r\n        \"form\": \"選擇表單\",\r\n        \"placeholder\": \"請選擇\",\r\n        \"parametersSet\": \"參數\",\r\n        \"key\": \"變量編號\",\r\n        \"name\": \"變量名稱\",\r\n        \"lineNumber\": \"序號\",\r\n        \"code\": \"編號\",\r\n        \"tag\": \"類型\",\r\n        \"value\": \"參數值\",\r\n        \"variable\": \"變量\",\r\n        \"constant\": \"常量\",\r\n        \"expression\": \"表達式\",\r\n        \"method\": \"方法標識\",\r\n        \"methodName\": \"方法名稱\",\r\n        \"description\": \"描述\",\r\n        \"workFlowAction\": \"流轉方向\",\r\n        \"formOperations\": \"表單操作\",\r\n        \"executionTime\": \"執行時機\",\r\n        \"sortOrder\": \"執行順序\",\r\n        \"methodParameters\": \"參數\",\r\n        \"selectFormActionConfig\": \"尚未選中表單操作配置！\",\r\n        \"selectFormAction\": \"尚未選中表單操作！\",\r\n        \"editParam\": \"設置\",\r\n        \"formEvents\": \"表單事件\",\r\n        \"buttonName\": \"按鈕名稱\",\r\n        \"enable\": \"是否可用\",\r\n        \"disabled\": \"是否禁用\",\r\n        \"hidden\": \"是否隱藏\",\r\n        \"fieldName\": \"字段名稱\",\r\n        \"editable\": \"是否可寫\",\r\n        \"readonly\": \"是否只讀\",\r\n        \"required\": \"是否必填\",\r\n        \"saveFail\": \"保存配置失敗，請聯繫管理員查看原因！\",\r\n        \"checkedRows\": \"尚未選擇按鈕集合\",\r\n        \"checkeds\": \"尚未選擇字段集合\",\r\n        \"enableBtn\": \"可用\",\r\n        \"disabledBtn\": \"禁用\",\r\n        \"hiddenBtn\": \"隱藏\",\r\n        \"btnBatchReset\": \"重置\",\r\n        \"editableBtn\": \"可寫\",\r\n        \"readonlyBtn\": \"只讀\",\r\n        \"requiredBtn\": \"必填\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"刪除\",\r\n        \"other\": \"其他\",\r\n        \"formBtn\": \"表單按鈕\",\r\n        \"formfield\": \"表單字段\",\r\n        \"apptag\": \"單據類型\",\r\n        \"functionMenu\": \"功能菜單\",\r\n        \"formFormat\": \"表單格式\",\r\n        \"docFormatNumber\": \"單據格式編號\",\r\n        \"docFormatName\": \"單據格式名稱\",\r\n        \"selectedRow\": \"尚未選擇表單定義！\",\r\n        \"set\": \"（已設置）\"\r\n      },\r\n      \"eventDefinition\": {\r\n        \"eventDefinition\": \"信號定義\",\r\n        \"pass\": \"正向\",\r\n        \"back\": \"反向\",\r\n        \"abort\": \"終止\",\r\n        \"signalRef\": \"信號編號\",\r\n        \"name\": \"信號名稱\",\r\n        \"triggerAction\": \"流轉方向\",\r\n        \"selectedRow\": \"尚未選中一條觸發事件！\",\r\n        \"dataLength\": \"至少需要一個信號定義，請了解！\",\r\n        \"codeNotNull\": \"信號編號不允許為空！\",\r\n        \"nameNotNull\": \"信號名稱不允許為空！\",\r\n        \"codeNotNumber\": \"信號編號不允許為純數字！\",\r\n        \"codeRepeat\": \"信號編號不允許重複！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"刪除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"entryFormEditor\": {\r\n        \"flowForm\": \"流程分類\",\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"base\": \"類型\",\r\n        \"foundation\": \"基礎\",\r\n        \"extend\": \"擴展\",\r\n        \"selectedRow\": \"尚未選擇流程分類\",\r\n        \"absent\": \"流程分類已經不存在\",\r\n        \"lineNumber\": \"序號\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"重新綁定\"\r\n      },\r\n      \"editComponentParameter\": {\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"required\": \"必填\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"value\": \"參數值\",\r\n        \"openComponentFail\": \"獲取解析構件出錯\",\r\n        \"componentSelection\": \"構件選擇\",\r\n        \"curComponent\": \"請選擇流程構件\",\r\n        \"executionTime\": \"請選擇執行時機\",\r\n        \"para\": \"參數\",\r\n        \"paraRequired\": \"】必填\",\r\n        \"execuTime\": \"執行時機\",\r\n        \"parameterList\": \"參數列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"customizeAction\": {\r\n        \"customizeAction\": \"自定義動作\",\r\n        \"app\": \"移動\",\r\n        \"web\": \"web\",\r\n        \"all\": \"web,移動\",\r\n        \"name\": \"名稱\",\r\n        \"code\": \"編號\",\r\n        \"terminalType\": \"適用終端\",\r\n        \"isAll\": \"是否默認\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"paramName\": \"編號\",\r\n        \"valueText\": \"名稱\",\r\n        \"value\": \"參數值\",\r\n        \"addActions\": \"自定義動作選擇\",\r\n        \"actionExisted\": \"新增的自定義動作已經存在！\",\r\n        \"selectedRow\": \"請首先選中一條選項！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"刪除\",\r\n        \"parameterList\": \"參數列表\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"checkCondition\": {\r\n        \"zhChs\": \"簡體中文\",\r\n        \"zhCht\": \"繁體中文\",\r\n        \"en\": \"英文\",\r\n        \"checkCondition\": \"活動校驗規則\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"nodeEntry\": \"節點進入\",\r\n        \"activityBeforeStarted\": \"節點進入條件\",\r\n        \"enterErrorTips\": \"進入條件不匹配提示語\",\r\n        \"activityBeforeCompleted\": \"節點離開\",\r\n        \"activityBeforeCompletedValue\": \"節點離開條件\",\r\n        \"leaveErrorTips\": \"離開條件不匹配提示語\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"batchSet\": {\r\n        \"targetNode\": \"目標節點\",\r\n        \"addSignFront\": \"徵詢\",\r\n        \"addSignBehind\": \"加簽\",\r\n        \"transfer\": \"移交\",\r\n        \"notify\": \"知會\",\r\n        \"backWardRule\": \"駁回規則\",\r\n        \"name\": \"名稱\"\r\n      },\r\n      \"subProcess\": {\r\n        \"subProcessSet\": \"子流程設置\",\r\n        \"specified\": \"指定子流程\",\r\n        \"dynamic\": \"動態子流程\",\r\n        \"inheritParent\": \"與父流程相同\",\r\n        \"autoCreation\": \"自动生成下游單據\",\r\n        \"variablesExpression\": \"變量表達式\",\r\n        \"rteNull\": \"請選中一條生單流程\",\r\n        \"orderProcess\": \"生單流程\",\r\n        \"clickOk\": \"確定\",\r\n        \"clickCancel\": \"取消\",\r\n        \"inheritBizDataId\": \"當子流程與父流程單據不一致時，請設置子流程單據內碼！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"radioGroupProcessType\": \"子流程類型\",\r\n        \"flowForm\": \"流程分類\",\r\n        \"processDef\": \"流程定義\",\r\n        \"radioGroupBillSource\": \"單據來源\",\r\n        \"autoCreationProcess\": \"生單流程\",\r\n        \"bizDataId\": \"單據內碼\",\r\n        \"setOption\": \"設置選項\",\r\n        \"SameParentProcess\": \"與父流程同一張業務單據\",\r\n        \"setBizDataId\": \"設置單據內碼\",\r\n        \"subProcessOpt\": \"子流程選項\"\r\n      },\r\n      \"backwardRule\": {\r\n        \"reEdit\": \"駁回活動節點已不存在，請重新編輯\",\r\n        \"backwardRule\": \"駁回規則\",\r\n        \"initialActityId\": \"開始節點\",\r\n        \"precursorActivityId\": \"前置節點\",\r\n        \"empty\": \"空\",\r\n        \"name\": \"名稱\",\r\n        \"id\": \"標識\",\r\n        \"sequence\": \"順序流轉\",\r\n        \"backToMe\": \"返回我\",\r\n        \"backToCurrentNode\": \"返回本節點\",\r\n        \"popover\": \"1.順序流轉:按照流轉線順序進行流轉; 2.返回我:完成策略為搶佔：只給駁回人創建任務,完成策略為會簽：駁回人與未審批人收到新任務，已審批人員自動審批通過; 3.返回本節點:實際效果受“再次進入節點時，辦理人是否是節點已辦人員影響”選項的影響\",\r\n        \"selectAbleClick\": \"會簽策略下，不允許動態選擇駁回目標節點!\",\r\n        \"dictPicked\": \"“駁回至空”選項請搭配“允許動態選擇駁回目標節點”使用\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"rejectedTo:\": \"駁回至：\",\r\n        \"backScope\": \"駁回範圍\",\r\n        \"defaultPrompt\": \"默認選取全部歷史駁回節點\",\r\n        \"title\": \"活動列表\",\r\n        \"dynamicSelection\": \"允許修改返回設置\",\r\n        \"resubmitEffectOptions\": \"返回設置\",\r\n        \"popover1\": \"1.順序流轉:按照流轉線順序進行流轉; \",\r\n        \"popover2\": \"2.返回我:完成策略為搶佔：只給駁回人創建任務,完成策略為會簽：駁回人與未審批人收到新任務，已審批人員自動審批通過;\",\r\n        \"popover3\": \"3.返回本節點:實際效果受“再次進入節點時，辦理人是否是節點已辦人員影響”選項的影響\",\r\n        \"allowModification\": \"允許修改返回設置\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOk\": \"確定\"\r\n      },\r\n      \"assignStrategy\": {\r\n        \"all\": \"所有\",\r\n        \"assign\": \"指派\",\r\n        \"claim\": \"領用\",\r\n        \"currentUser\": \"當前辦理人\",\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"assignStrategy\": \"分配策略\",\r\n        \"option\": \"選項\",\r\n        \"assignmentRules\": \"指派規則\",\r\n        \"operator\": \"指派操作人\",\r\n        \"multiSelect\": \"允許選擇多個待選用戶\",\r\n        \"necessary\": \"只有一個待選用戶時，仍需手工選擇\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"assignScope\": {\r\n        \"assignScopeList\": \"指派節點列表\",\r\n        \"required\": \"必填\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"condition\": \"條件\",\r\n        \"add\": \"增加\",\r\n        \"delete\": \"刪除\",\r\n        \"name\": \"名稱\",\r\n        \"deleteRow\": \"請首先選中壹條選項！\",\r\n        \"curActivity\": \"尚未選中行\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"nodeList\": \"節點列表\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"assignPerformer\": {\r\n        \"currentUser\": \"當前辦理人\",\r\n        \"procInstCreator\": \"流程發起人\",\r\n        \"global\": \"全員\",\r\n        \"currentUnit\": \"本單位\",\r\n        \"currentDepartment\": \"本部門\",\r\n        \"assignPerformer\": \"指派規則\",\r\n        \"set\": \"（已設置）\",\r\n        \"operator\": \"指派操作人\",\r\n        \"multiSelect\": \"允許選擇多個待選用戶\",\r\n        \"necessary\": \"只有一個待選用戶時，仍需手工選擇\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"approvelItems\": {\r\n        \"approvalOptions\": \"審批選項\",\r\n        \"forward\": \"正向\",\r\n        \"backward\": \"反向\",\r\n        \"abort\": \"終止\",\r\n        \"value\": \"編號\",\r\n        \"text\": \"名稱\",\r\n        \"workFlowAction\": \"流轉方向\",\r\n        \"isDefault\": \"默認\",\r\n        \"no\": \"否\",\r\n        \"yes\": \"是\",\r\n        \"commentNecessary\": \"意見必填\",\r\n        \"attachmentNecessary\": \"附件上傳\",\r\n        \"certification\": \"數字簽名\",\r\n        \"signatureNecessary\": \"手寫簽名必填\",\r\n        \"defaultComment\": \"默認意見\",\r\n        \"zh-CHS\": \"中文簡體\",\r\n        \"zh-CHT\": \"中文繁體\",\r\n        \"en\": \"英文\",\r\n        \"workFlowActionNotNull\": \"審批項流轉方向不允許為空，請修改！\",\r\n        \"deleteRow\": \"請首先選中壹條選項！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"刪除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\",\r\n        \"approvalAction\": \"審批動作\",\r\n        \"lineNumber\": \"序號\"\r\n      },\r\n      \"approvalPivot\": {\r\n        \"remind\": \"文字提示\",\r\n        \"type\": \"類型\",\r\n        \"condition\": \"條件\",\r\n        \"title\": \"顯示名稱\",\r\n        \"description\": \"詳細說明\",\r\n        \"approvalPivot\": \"審批要點\",\r\n        \"selectedRow\": \"尚未選中審批要點！\",\r\n        \"configTitle\": \"尚未填寫顯示標題！\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"enable\": \"是否啟用\",\r\n        \"expand\": \"是否展開\",\r\n        \"showTitle\": \"顯示標題\",\r\n        \"list\": \"列表\",\r\n        \"add\": \"新增\",\r\n        \"delete\": \"刪除\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"anonymousSet\": {\r\n        \"anonymousOpt\": \"匿名選項\",\r\n        \"approver\": \"審批人\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"anonymousSet\": \"匿名設置\",\r\n        \"isAnonymity\": \"是否啟用\",\r\n        \"anonymous\": \"匿名代稱\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"activityList\": {\r\n        \"name\": \"名稱\",\r\n        \"checkeds\": \"尚未選擇活動節點\",\r\n        \"lineNumber\": \"序號\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      },\r\n      \"activityComponent\": {\r\n        \"component\": \"構件\",\r\n        \"method\": \"構件方法\",\r\n        \"inconsistentParameters\": \"參數不壹致，請檢查\",\r\n        \"longerExists\": \"構件已不存在此構件方法\",\r\n        \"absent\": \"取消\",\r\n        \"pleaseCheck\": \"，請檢查\",\r\n        \"edit\": \"編輯\",\r\n        \"deleteRow\": \"刪除\",\r\n        \"executionTime\": \"執行時機\",\r\n        \"cmpName\": \"構件名稱\",\r\n        \"metadataId\": \"構件ID\",\r\n        \"methodCode\": \"構件方法\",\r\n        \"isForCompensation\": \"補償操作\",\r\n        \"yes\": \"是\",\r\n        \"no\": \"否\",\r\n        \"operate\": \"操作\",\r\n        \"code\": \"編號\",\r\n        \"name\": \"名稱\",\r\n        \"value\": \"參數值\",\r\n        \"editComponent\": \"編輯構件\",\r\n        \"confirmDelete\": \"確認是否刪除構件？\",\r\n        \"curComponent\": \"尚未選中構件！\",\r\n        \"newComponent\": \"新建構件\",\r\n        \"sameCmp\": \"存在相同的流程構件\",\r\n        \"cmpMethod\": \"構件方法：\",\r\n        \"executionTimeNotNull\": \"構件執行時機不允許為空！\",\r\n        \"param\": \"的參數\",\r\n        \"required\": \"必填\",\r\n        \"set\": \"（已設置）\",\r\n        \"notSet\": \"（未設置）\",\r\n        \"PROCESSINSTANCE_STARTED\": \"流程啟動\",\r\n        \"PROCESSINSTANCE_SUSPENDED\": \"流程挂起\",\r\n        \"PROCESSINSTANCE_RESUMED\": \"流程恢復\",\r\n        \"PROCESSINSTANCE_COMPLETED\": \"流程完成\",\r\n        \"PROCESSINSTANCE_ABORTED\": \"流程終止\",\r\n        \"PROCESSINSTANCE_CANCELED\": \"流程取消\",\r\n        \"PROCESSINSTANCE_REACTIVATED\": \"流程復活\",\r\n        \"PROCESSINSTANCE_ROLLBACK\": \"流程驳回\",\r\n        \"PROCESSINSTANCE_RESUBMIT\": \"重新提交\",\r\n        \"ACTIVITY_AND_PARTICIPANT_UPDATED\": \"環節辦理人變更\",\r\n        \"PROCESSINSTANCE_ABORTED_BY_ADMIN\": \"管理員終止\",\r\n        \"PROCESSINSTANCE_BEFORE_START\": \"流程啟動前\",\r\n        \"WORKITEM_BEFORE_COMPLETE\": \"任務完成前\",\r\n        \"WORKITEM_AFTER_COMPLETE\": \"任務完成後\",\r\n        \"LOADDATA\": \"獲取數據\",\r\n        \"ACTIVITY_STARTED\": \"活動啟動\",\r\n        \"ACTIVITY_COMPLETED\": \"活動完成\",\r\n        \"ACTIVITY_ABORTED\": \"活動終止\",\r\n        \"WORKITEM_CREATED\": \"工作項創建\",\r\n        \"WORKITEM_COMPLETED\": \"工作項完成\",\r\n        \"WORKITEM_SUSPENDED\": \"工作項挂起\",\r\n        \"WORKITEM_RESUMED\": \"工作項恢復\",\r\n        \"WORKITEM_ABORTED\": \"工作項終止\",\r\n        \"WORKITEM_RETRIEVED\": \"工作項取回\",\r\n        \"WORKITEM_CLAIMED\": \"工作項領用\",\r\n        \"WORKITEM_UNCLAIMED\": \"工作項反領用\",\r\n        \"ACTIVITY_ASSIGNMENT\": \"任務分配前\",\r\n        \"deleteNotAllowed\": \"取數構件不允許刪除，請了解！\",\r\n        \"tips\": \"提示：\",\r\n        \"prefabricated\": \"已經預製外部流程構件，此處只保留取數構件\",\r\n        \"add\": \"新增\",\r\n        \"moveUp\": \"上移\",\r\n        \"moveDown\": \"下移\",\r\n        \"clickCancel\": \"取消\",\r\n        \"clickOK\": \"確定\"\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef, Injector, ComponentFactoryResolver, HostBinding, Output, EventEmitter, TemplateRef, ViewContainerRef, ChangeDetectorRef, Optional, LOCALE_ID, Inject } from '@angular/core';\r\nimport { ProcessTime } from './model/process-time';\r\nimport { ProcessDesignerUIState } from './app/process-designer.uistate';\r\nimport { FlowFormInfo } from './domain/entities/flowform-info';\r\nimport { ProcessDesignerViewModel } from './app/process-designer.viewmodel';\r\nimport { BizComponentEntity } from './domain/entities/biz-component.entity';\r\nimport { ExecuteFormModel, TerminalType } from './views/execute-forms/entities/execute-form.entity';\r\nimport { ExcuteFormEntity } from './domain/entities/excute-form.entity';\r\nimport { ModalOptions, BsModalService } from '@farris/ui-modal';\r\nimport { BackWardRule } from './views/backward-rule/backward-rule.entity';\r\nimport { ProcessDesignerDataService } from './domain/process-designer.dataservice';\r\nimport { LoadingService } from '@farris/ui-loading';\r\nimport { NotifyService, NotifyOptions } from '@farris/ui-notify';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { WFFlowElementsViewModel } from './app/wf-flowElements.viewModel';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { PropertyPanelComponent, ShowMode } from '@farris/ide-property-panel';\r\nimport { SignRuleComponent } from './views/sign-rule/sign-rule.component';\r\nimport { ProcessInfo } from './model/process-info';\r\nimport { RTProcessInfo } from './model/rt-process-info';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { AuditEvent } from './domain/entities/audit-processDef-info';\r\nimport { NoteComponent } from './views/note/note.component';\r\nimport { ProcessDeUtil } from './domain/process-de-util';\r\nimport { FlowFormEntity } from './domain/entities/flowform.entity';\r\nimport { EventBusService } from './views/shared/event-bus.service';\r\nimport { VerifyDetailService } from '@farris/ui-verify-detail';\r\nimport { AssignScopeComponent } from './views/assign-scope/assign-scope.component';\r\nimport { WfEditorUi } from './designer/WfEditorUi';\r\nimport { PmfEvents, Cell } from \"@edp-pmf/grapheditor\";\r\nimport { BpmnModel } from \"@edp-pmf/bpmn-model\";\r\nimport { MxGraphNS, mxEvent } from \"@edp-pmf/mxgraph-ts\";\r\nimport { WfValidatorAdapter } from \"./designer/WfValidatorAdapter\";\r\nimport { ProcessHeader, StartMode } from \"@gsp-wf/wf-process-model\";\r\nimport { EventBusKeys } from './model/event-bus-keys';\r\nimport { ProcessPropertyKeys } from './designer/wf-cell/property-keys/ProcessPropertyKeys';\r\nimport { UserActivityPropertyKeys } from './designer/wf-cell/property-keys/UserActivityPropertyKeys';\r\nimport { MessageActivityPropertyKeys } from './designer/wf-cell/property-keys/MessageActivityPropertyKeys';\r\nimport { StartActivityPropertyKeys } from './designer/wf-cell/property-keys/StartActivityPropertyKeys';\r\nimport { NotifyActivityPropertyKeys } from './designer/wf-cell/property-keys/NotifyActivityPropertyKeys';\r\nimport { delay, switchMap } from 'rxjs/operators';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from './i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from './i18n/assets/lang.resource';\r\nimport { BatchSetPropertiesComponent } from './views/batch-set-properties/batch-set-properties.component';\r\n@Component({\r\n  selector: 'wf-process-editor',\r\n  templateUrl: './wf-process-editor.component.html',\r\n  styles: [`\r\n    .bpmn-designer {\r\n      height: 100%;\r\n      min-height: 400px;\r\n      width: 100%;\r\n    }`\r\n  ],\r\n  providers: [\r\n    { provide: WF_LANG_RESOURCES, useValue: WF_PROCESS_EDITOR_LANG_RESOURCES },\r\n    WfLocalePipe,\r\n  ]\r\n})\r\n\r\nexport class WfProcessEditorComponent implements OnInit {\r\n  private flag = true;\r\n\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  private _time: ProcessTime;\r\n  @Input()\r\n  set time(t: ProcessTime) {\r\n    this._time = t;\r\n    this.uiState.time = t;\r\n  }\r\n  get time(): ProcessTime {\r\n    return this._time;\r\n  }\r\n\r\n  @Input()\r\n  processInfo: ProcessInfo;\r\n\r\n  @Input()\r\n  rtProcessInfo: RTProcessInfo;\r\n\r\n  @Input()\r\n  action: 'view' | 'edit' | 'assignView' = 'edit';\r\n\r\n  @Input()\r\n  mode: 'general' | 'simplify' = 'general';\r\n\r\n  @Input()\r\n  set scene(v: string) {\r\n    this.uiState.scene = v;\r\n  }\r\n  get scene() {\r\n    return this.uiState.scene;\r\n  }\r\n\r\n  @Input()\r\n  procType: \"wf\" | \"whole\" = \"wf\";\r\n\r\n  @Output() close = new EventEmitter<any>();\r\n\r\n  @ViewChild('propertyPanel')\r\n  propertyPanel: PropertyPanelComponent;\r\n  @ViewChild('tipsTmpl')\r\n  tipsTmpl: TemplateRef<any>;\r\n  @ViewChild('iframe')\r\n  iframe: ElementRef;\r\n  errorList = [];\r\n  tabTypeList = [\r\n    {\r\n      id: 'processWarning',\r\n      type: 'processWarning',\r\n      title: this.localePipe.instant(\"processEditor.tip\"),\r\n      iconCls: 'f-icon-default',\r\n      iconStyle: 'color:#f49730;'\r\n    }\r\n  ];\r\n  @ViewChild('content') contentEl;\r\n  verifyContainer;\r\n  listclick;\r\n  showchange;\r\n  panelWidth = 330;\r\n  propertyPanelResizable = true;\r\n  rightPanelWidth = 330; // 右侧面板宽度\r\n  clientWidth: number; // 界面总宽度\r\n  widthAfterResized: number; // 用户调整后的宽度（比例，如0.3）\r\n  private verifySer: VerifyDetailService;\r\n  procNameTitle: string;\r\n  @ViewChild(\"editorUiContainer\")\r\n  editorUiContainerER: ElementRef<HTMLDivElement>;\r\n  @ViewChild(\"editorUiContainer\", { read: ViewContainerRef })\r\n  editorUiContainerVCR: ElementRef<HTMLDivElement>;\r\n  editorUi: WfEditorUi;\r\n  // localeId: string = \"zh-CHS\";\r\n\r\n  /**\r\n   * 界面是否发生变化标志，修改属性、移动节点等均会将此值设为true\r\n   */\r\n  changedFlag = false;\r\n\r\n  constructor(\r\n    public uiState: ProcessDesignerUIState,\r\n    private viewModel: ProcessDesignerViewModel,\r\n    public service: ProcessDesignerDataService,\r\n    private loadService: LoadingService,\r\n    private notify: NotifyService,\r\n    private message: MessagerService,\r\n    private activity: WFFlowElementsViewModel,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private eventBus: EventBusService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    this.cdr = this.cdr || this.injector.get(ChangeDetectorRef, null);\r\n    this.verifySer = this.injector.get(VerifyDetailService);\r\n    this.localeId = this.injector.get(LOCALE_ID, null) || this.localeId;\r\n    WfValidatorAdapter.localePipe = this.localePipe;\r\n    forkJoin(this.uiState.getEnableAdminOrgAut(), this.uiState.getEnableFlowFormAut()).subscribe(re => {\r\n      this.uiState.enableAdminOrgAut = re[0];\r\n      this.uiState.enableFlowFormAut = re[1];\r\n      if (!this.uiState.enableAdminOrgAut) {\r\n        this.uiState.getAdministratorInfo();\r\n      }\r\n    });\r\n  }\r\n  showModelButton = false;\r\n  ngOnInit() {\r\n    this.procNameTitle = this.processInfo?this.processInfo.processName:this.rtProcessInfo.procName;\r\n    if(this.rtProcessInfo && this.rtProcessInfo.rtProcDefId) {\r\n      this.uiState.procDefId = this.rtProcessInfo.rtProcDefId;\r\n    }\r\n    this.addEventBusListener();\r\n    this.uiState.initUIState();\r\n    this.showLoading();\r\n    this.addPropertyChangedHandler();\r\n    // 获取消息列表\r\n    this.uiState.getMessageChannels();\r\n    focus();\r\n    document.body.addEventListener('keydown', (n) => {\r\n      if (!this.showModelButton && n.shiftKey && 'Slash' === n.code) {\r\n        this.showModelButton = true;\r\n        this.notify.success(this.localePipe.transform(\"processEditor.showButton\"));\r\n        this.viewProcModel();\r\n      }\r\n    });\r\n    this.cdr && this.cdr.detectChanges();\r\n    this.createEditorUi();\r\n  }\r\n\r\n  createEditorUi() {\r\n    this.service.getGeneralConfig().subscribe(\r\n      (generalConfig) => {\r\n        const processCategoryId: string = this._time === ProcessTime.rt ? this.rtProcessInfo.flowFormId : this.processInfo.flowFormId;\r\n        this.viewModel.getProcessCategory(processCategoryId).subscribe(\r\n          (procCategory: FlowFormEntity) => {\r\n            const bizCategoryId = this._time === ProcessTime.dt ? procCategory.businessObjectId : undefined;\r\n            this.service.getFormFormat(bizCategoryId).pipe(\r\n              switchMap(\r\n                (formFormats) => {\r\n                  this.cdr && this.cdr.detectChanges();\r\n                  this.editorUi = new WfEditorUi(this._time, this.action, this.editorUiContainerER.nativeElement,\r\n                  this.injector, this.modalService, this.resolver);\r\n                  this.editorUi.multiLangEnabled = true;\r\n                  this.editorUi.langCode = this.localeId;\r\n                  this.editorUi.bizCategoryId = bizCategoryId;\r\n                  this.editorUi.mode = this.mode;\r\n                  this.editorUi.scene = this.uiState.scene;\r\n                  this.editorUi.procType = this.procType;\r\n                  this.editorUi.generalConfig = generalConfig;\r\n                  this.editorUi.formFormats = formFormats;\r\n                  return of({});\r\n                }\r\n              )\r\n            )\r\n              // 2023-5-30 为了解决网络较差场景下的加载问题修改了加载顺序\r\n              .pipe(delay(200))\r\n              .subscribe(() => {\r\n                this.openProcContent();\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  addEditorUiListeners(editorUi: WfEditorUi) {\r\n    editorUi.addListener(PmfEvents.ShowProperty, (sender, evt: MxGraphNS.mxEventObject) => {\r\n      const cells: Cell[] = evt.getProperty(\"cells\");\r\n      this.viewModel.setProperty(this.editorUi.getFarrisPropConfig(cells));\r\n    });\r\n    // 工具箱节点拖动至画布后更新\r\n    editorUi.graph.addListener(PmfEvents.CellsInserted, (sender, evt: MxGraphNS.mxEventObject) => {\r\n      this.uiState.getUserActList(this.editorUi.getActivities());\r\n      this.uiState.getNotifyEventList(this.editorUi.getNotifyEvents());\r\n      this.uiState.getEndEventList(this.editorUi.getEndEvents());\r\n    });\r\n    // 删除节点时触发更新\r\n    editorUi.graph.addListener(mxEvent.CELLS_REMOVED, () => {\r\n      this.uiState.getUserActList(this.editorUi.getActivities());\r\n      this.uiState.getNotifyEventList(this.editorUi.getNotifyEvents());\r\n      this.uiState.getEndEventList(this.editorUi.getEndEvents());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 添加事件总线监听\r\n   */\r\n  private addEventBusListener() {\r\n    this.eventBus.on(EventBusKeys.batchCopyProperty, data => {\r\n      if (data) {\r\n        this.editorUi.batchCopyProperty(data);\r\n      }\r\n    });\r\n    this.eventBus.on(EventBusKeys.batchSetProperty, data => {\r\n      if (data) {\r\n        this.editorUi.batchSetProperty(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  private addPropertyChangedHandler(): boolean {\r\n    this.propertyPanel.propertyChanged.subscribe((data: any) => {\r\n      this.updateChangeProperty(data);\r\n    });\r\n    this.propertyPanel.submitModal.subscribe((data: any) => {\r\n      this.updateChangeProperty(data.changeObject, data.parameters);\r\n    });\r\n\r\n    return false; // 防止冒泡\r\n  }\r\n\r\n  /**\r\n   * 更新属性\r\n   */\r\n  private updateChangeProperty(data, parameters = null): any {\r\n    // 更新界面变更状态\r\n    this.changedFlag = false;\r\n\r\n    data.Id = this.uiState.propertyData.Id;\r\n    if (parameters) {\r\n      data.parameters = parameters;\r\n    }\r\n    switch (data.propertyID) {\r\n      case ProcessPropertyKeys.EntryForm:\r\n        this.bindEntryFormInfo(data);\r\n        break;\r\n      case UserActivityPropertyKeys.ApprovalItems:\r\n        this.editorUi.updateProperty(data);\r\n        this.activity.buildCounterSignVariables(data.propertyValue);\r\n        break;\r\n      case UserActivityPropertyKeys.CompleteStrategy:\r\n        this.beforeCompleteStrategyChange(data).subscribe(b => {\r\n          if (b) {\r\n            this.editorUi.updateProperty(data);\r\n            this.completeStrategyChanged(data.propertyValue);\r\n          }\r\n          this.viewModel.setProperty(this.editorUi.refreshProperty(data));\r\n        });\r\n        break;\r\n      // todo：多个活动具有同名属性时，如何更合理定义PropertyKey？\r\n      // case UserActivityPropertyKeys.otherAssignNodes:\r\n      // case StartActivityPropertyKeys.otherAssignNodes:\r\n      //   if (data.propertyValue) {\r\n      //     this.editorUi.updateProperty(data);\r\n      //     this.OtherAssignNodesChanged(data);\r\n      //   } else {\r\n      //     this.editorUi.updateProperty(data);\r\n      //   }\r\n      //   break;\r\n      case UserActivityPropertyKeys.SignRule:\r\n        this.editorUi.updateProperty(data);\r\n        break;\r\n      // todo：多个活动具有同名属性时，如何更合理定义PropertyKey？\r\n      case ProcessPropertyKeys.messageNotice: // 消息通知\r\n      case UserActivityPropertyKeys.messageNotice: // 消息通知\r\n      case MessageActivityPropertyKeys.messageNotice: // 消息通知\r\n      case NotifyActivityPropertyKeys.messageNotice: // 消息通知\r\n        if (data.propertyValue.isBatchCopy) { // 是否是消息通知属性批量复制\r\n          this.editorUi.batchCopyProperty(data);\r\n          break;\r\n        }\r\n        this.editorUi.updateProperty(data);\r\n        break;\r\n      case ProcessPropertyKeys.startMode:\r\n        this.updateStartMode(data);\r\n        break;\r\n      default:\r\n        this.editorUi.updateProperty(data);\r\n        break;\r\n    }\r\n    this.uiState.getUserActList(this.editorUi.getActivities());\r\n    this.uiState.getEndEventList(this.editorUi.getEndEvents());\r\n    this.uiState.getNotifyEventList(this.editorUi.getNotifyEvents());\r\n    this.uiState.getStartMode(this.editorUi.getStartMode());\r\n    if(this.editorUi.getStartMode() == StartMode.SUB_PROCESS) {\r\n      this.uiState.subActivityContext = this.uiState.subActivityContext.concat(this.uiState.subProcessElementContext);\r\n    }else {\r\n      this.uiState.subActivityContext = this.uiState.subActivityContext.filter(x => this.uiState.subProcessElementContext.some(y => y.key != x.key))\r\n    }\r\n    this.viewModel.setProperty(this.editorUi.refreshProperty(data));\r\n  }\r\n\r\n  /**\r\n   * 绑定流程分类的参数列表，流程构件，表单赋值\r\n   * @param data\r\n   */\r\n  private bindEntryFormInfo(data) {\r\n    const flowformId: string = data.propertyValue.id;\r\n    if (flowformId) {\r\n      this.viewModel.getFlowFormInfoById(flowformId).subscribe((info: FlowFormInfo) => {\r\n        data.flowForm = info.flowForm;\r\n        data.formalParameters = info.formalParameters;\r\n        data.processBizComponnets = info.bizComponents;\r\n        data.executeForms = [];\r\n        info.excuteForms.forEach(form => {\r\n          if (form.isDefault) {\r\n            // 流程绑定默认单据\r\n            const executeForms = this.ConvertExecuteForm(form);\r\n            data.executeForms = data.executeForms.concat(executeForms);\r\n          }\r\n        });\r\n        data.customizeActions = info.customizeActions.filter(a => a.isAll === true).map(a => ({\r\n          id: a.id, code: a.code, name: a.name, terminalType: a.terminal,\r\n          actualParameters: a.actualParameters.map(p => ({\r\n            Name: p.code, Value: p.value, ValueText: p.name, Tag: 'expression'\r\n          }))\r\n        }));\r\n        // 加载业务活动面板\r\n        this.editorUi.loadBizActivities(info.bizActivities || []);\r\n        this.service.getBizCmp().subscribe((cmps) => {\r\n          data.bizCmps = cmps;\r\n          this.editorUi.updateProperty(data);\r\n\r\n          this.uiState.getUserActList(this.editorUi.getActivities());\r\n          this.uiState.getEndEventList(this.editorUi.getEndEvents());\r\n          this.uiState.getNotifyEventList(this.editorUi.getNotifyEvents());\r\n          this.uiState.getStartMode(this.editorUi.getStartMode());\r\n          if(this.editorUi.getStartMode() == StartMode.SUB_PROCESS) {\r\n            this.uiState.subActivityContext = this.uiState.subActivityContext.concat(this.uiState.subProcessElementContext);\r\n          }else {\r\n            this.uiState.subActivityContext = this.uiState.subActivityContext.filter(x => this.uiState.subProcessElementContext.some(y => y.key != x.key))\r\n          }\r\n          this.viewModel.setProperty(this.editorUi.refreshProperty(data));\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  updateStartMode(data: any) {\r\n    const bpmnModel = this.editorUi.graph.bpmnModel;\r\n    const extendElements = bpmnModel.DefaultProcess.GetExtensionElements();\r\n    if (extendElements !== null && extendElements.length > 0) {\r\n      const procHeader = extendElements.filter(e => e instanceof ProcessHeader) as ProcessHeader[];\r\n      let flowFormKey = procHeader[0].BizDefKey;\r\n      this.service.getAllBizCmp(flowFormKey).subscribe((allBizCmps) => {\r\n        this.service.getBizCmp().subscribe((bizCmps) => {\r\n          data.allBizCmps = allBizCmps;\r\n          data.bizCmps = bizCmps;\r\n\r\n          this.editorUi.updateProperty(data);\r\n\r\n          this.uiState.getUserActList(this.editorUi.getActivities());\r\n          this.uiState.getEndEventList(this.editorUi.getEndEvents());\r\n          this.uiState.getStartMode(this.editorUi.getStartMode());\r\n          if(this.editorUi.getStartMode() == StartMode.SUB_PROCESS) {\r\n            this.uiState.subActivityContext = this.uiState.subActivityContext.concat(this.uiState.subProcessElementContext);\r\n          }else {\r\n            this.uiState.subActivityContext = this.uiState.subActivityContext.filter(x => this.uiState.subProcessElementContext.some(y => y.key != x.key))\r\n          }\r\n          this.viewModel.setProperty(this.editorUi.refreshProperty(data));\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private note(record: string) {\r\n    const compFactory = this.resolver.resolveComponentFactory(NoteComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n\r\n    compRef.instance.record = record;\r\n\r\n    const modalConfig: ModalOptions = {\r\n      title: this.localePipe.transform(\"processEditor.changeRecord\"),\r\n      width: 800,\r\n      height: 520,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.cancel.subscribe($event => dialog.close());\r\n    compRef.instance.submit.subscribe((data: string) => {\r\n      // 更新流程记录\r\n      this.editorUi.graph.bpmnModel.DefaultProcess.Documentation = data;\r\n      dialog.close();\r\n    });\r\n  }\r\n\r\n  private openProcContent() {\r\n    if (this.time === ProcessTime.dt) {\r\n      if (this.processInfo) {\r\n        if (this.processInfo.processKey === EventBusKeys.new && this.processInfo.flowFormId) {\r\n          this.openNewProcess(this.processInfo.flowFormId);\r\n        } else {\r\n          // TODO：首先获取流程分类信息，确保流程分类和流程构件获取到（会稍微影响设计器打开速度）\r\n          this.viewModel.getFlowFormInfoById(this.processInfo.flowFormId).subscribe((info: FlowFormInfo) => {\r\n            this.editorUi.loadBizActivities(info.bizActivities || []);\r\n            this.getProcContent(this.processInfo.processKey).subscribe(re => {\r\n              this.uiState.content = this.checkModelContent(JSON.stringify(re));\r\n              this.openProcess(this.uiState.content);\r\n            });\r\n          });\r\n        }\r\n      } else {\r\n        throw new Error(this.localePipe.transform(\"processEditor.noDtInfo\"));\r\n      }\r\n    } else if (this.time === ProcessTime.rt) {\r\n      if (this.rtProcessInfo) {\r\n        this.viewModel.getFlowFormInfoById(this.rtProcessInfo.flowFormId).subscribe((info: FlowFormInfo) => {\r\n          this.editorUi.loadBizActivities(info.bizActivities || []);\r\n          this.getProcContent(this.rtProcessInfo.rtProcDefId).subscribe(re => {\r\n            this.uiState.content = this.checkModelContent(JSON.stringify(re));\r\n            this.openProcess(this.uiState.content);\r\n          });\r\n        });\r\n      } else {\r\n        throw new Error(this.localePipe.transform(\"processEditor.noRtInfo\"));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 新增流程，基于流程分类获取参数列表，构件和表单\r\n   * @param ffId 流程分类ID\r\n   */\r\n  openNewProcess(ffId: string) {\r\n    this.viewModel.getFlowFormInfoById(ffId).subscribe(\r\n      (info: FlowFormInfo) => {\r\n        const processBizComponnets: BizComponentEntity[] = info.bizComponents;\r\n        const customizeActions = info.customizeActions.filter(a => a.isAll === true).map(a => ({\r\n          id: a.id, code: a.code, name: a.name, terminalType: a.terminal,\r\n          actualParameters: a.actualParameters.map(p => ({\r\n            Name: p.code, Value: p.value, ValueText: p.name, Tag: 'expression'\r\n          }))\r\n        }));\r\n        let executeForms: ExecuteFormModel[] = [];\r\n        info.excuteForms.forEach(form => {\r\n          if (form.isDefault) {\r\n            // 流程绑定默认单据\r\n            const forms = this.ConvertExecuteForm(form);\r\n            executeForms = executeForms.concat(forms);\r\n          }\r\n        });\r\n        // 如果不存在表单定义，需要去表单格式列表取一下\r\n        if (executeForms.length === 0\r\n          || executeForms.findIndex(e => e.TerminalType === TerminalType.PC) === -1\r\n          || executeForms.findIndex(e => e.TerminalType === TerminalType.MOBILE) === -1) {\r\n          this.viewModel.getFormFormatsByBizCategory().subscribe(\r\n            (formFormats: any[]) => {\r\n              if (formFormats && formFormats.length > 0) {\r\n                if (executeForms.findIndex(e => e.TerminalType === TerminalType.PC) === -1) {\r\n                  const formFormat = formFormats.filter(f => f.terminal === 'PC' && f.status === 0)[0];\r\n                  if (formFormat) {\r\n                    executeForms.push(this.formFormat2ExecuteForm(formFormat));\r\n                  }\r\n                }\r\n                if (executeForms.findIndex(e => e.TerminalType === TerminalType.MOBILE) === -1) {\r\n                  const formFormat = formFormats.filter(f => f.terminal === 'Mobile' && f.status === 0)[0];\r\n                  if (formFormat) {\r\n                    executeForms.push(this.formFormat2ExecuteForm(formFormat));\r\n                  }\r\n                }\r\n              }\r\n              const newProcInfo = {\r\n                name: this.processInfo.processName,\r\n                bizObjId: this.processInfo.bizObjId,\r\n                ffId: ffId,\r\n                ffName: this.processInfo.flowFormName,\r\n                startMode: this.processInfo.startMode,\r\n                formalParameters: info.formalParameters,\r\n                processBizComponnets: processBizComponnets,\r\n                executeForms: executeForms,\r\n                customizeActions: customizeActions,\r\n                processDescription: info.flowForm.processDescription,\r\n              };\r\n              this.createBpmnModel(info.bizActivities || [], newProcInfo);\r\n            }\r\n          );\r\n        } else {\r\n          const newProcInfo = {\r\n            name: this.processInfo.processName,\r\n            bizObjId: this.processInfo.bizObjId,\r\n            ffId: ffId,\r\n            ffName: this.processInfo.flowFormName,\r\n            startMode: this.processInfo.startMode,\r\n            formalParameters: info.formalParameters,\r\n            processBizComponnets: processBizComponnets,\r\n            executeForms: executeForms,\r\n            customizeActions: customizeActions,\r\n            processDescription: info.flowForm.processDescription,\r\n          };\r\n          this.createBpmnModel(info.bizActivities || [], newProcInfo);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  createBpmnModel(bizActivities, newProcInfo) {\r\n    this.service.getBizCmp().subscribe(\r\n      (cmps: any) => {\r\n        // 2023-5-30 为了解决网络较差场景下的加载问题修改了加载顺序 先加载数据再showeditorUi\r\n        this.editorUi.show();\r\n        this.addEditorUiListeners(this.editorUi);\r\n        this.editorUi.loadBizActivities(bizActivities || []);\r\n        this.editorUi.createBpmnModel(newProcInfo, cmps);\r\n\r\n        this.service.getProcExtendProperty(newProcInfo.BizDefKey, newProcInfo.startMode, this.editorUi.bizCategoryId).subscribe(\r\n          (property: any) => {\r\n            const props = [];\r\n            property.forEach(p => {\r\n              if ((p.bizCategoryId || p.bizDefKey) && ((p.bizCategoryId.indexOf(this.editorUi.bizCategoryId) != -1 || p.bizCategoryId === '*') ||\r\n                (p.bizDefKey.indexOf(newProcInfo.BizDefKey) != -1 || p.bizDefKey === '*')) &&\r\n                (p.startMode.indexOf(newProcInfo.startMode) != -1 || p.startMode === '*')) {\r\n                props.push(p);\r\n              }\r\n            });\r\n            this.editorUi.procExtProps = props;\r\n\r\n\r\n            if (this.flag) {\r\n              this.flag = false;\r\n              this.closeLoading();\r\n            }\r\n            // 显示流程属性\r\n            this.viewModel.initProcessProperty(this.editorUi.getFarrisPropConfig());\r\n            // 获取启动方式\r\n            this.uiState.getStartMode(this.editorUi.getStartMode());\r\n            if(this.editorUi.getStartMode() == StartMode.SUB_PROCESS) {\r\n              this.uiState.subActivityContext = this.uiState.subActivityContext.concat(this.uiState.subProcessElementContext);\r\n            }else {\r\n              this.uiState.subActivityContext = this.uiState.subActivityContext.filter(x => this.uiState.subProcessElementContext.some(y => y.key != x.key))\r\n            }\r\n            this.uiState.bpmnModel = this.editorUi.graph.bpmnModel;\r\n\r\n            this.addGraphModelChangedListener();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  openProcess(content: string) {\r\n    // 取ProcessHeader\r\n    const model = new BpmnModel();\r\n    model.LoadFromJson(content);\r\n    const processHeader = (model.DefaultProcess.GetExtensionElements().filter(e => e instanceof ProcessHeader)[0] as ProcessHeader);\r\n    this.service.getProcExtendProperty(processHeader.BizDefKey, processHeader.startMode, this.editorUi.bizCategoryId).subscribe(\r\n      (property: any) => {\r\n        const props = [];\r\n        property.forEach(p => {\r\n          if ((p.bizCategoryId || p.bizDefKey) && ((p.bizCategoryId.indexOf(this.editorUi.bizCategoryId) != -1 || p.bizCategoryId === '*') ||\r\n            (p.bizDefKey.indexOf(processHeader.BizDefKey) != -1 || p.bizDefKey === '*')) &&\r\n            (p.startMode.indexOf(processHeader.startMode) != -1 || p.startMode === '*')) {\r\n            props.push(p);\r\n          }\r\n        });\r\n        this.editorUi.procExtProps = props;\r\n        // 2023-5-30 为了解决网络较差场景下的加载问题修改了加载顺序 先加载数据再showeditorUi\r\n        this.editorUi.show();\r\n        this.addEditorUiListeners(this.editorUi);\r\n        this.editorUi.openBpmnModel(content);\r\n\r\n\r\n        if (this.flag) {\r\n          this.flag = false;\r\n          this.closeLoading();\r\n        }\r\n        // 显示流程属性\r\n        this.viewModel.initProcessProperty(this.editorUi.getFarrisPropConfig());\r\n        // 打开时获取所有活动节点信息\r\n        this.uiState.getUserActList(this.editorUi.getActivities());\r\n        // 打开时获取所有结束节点信息\r\n        this.uiState.getEndEventList(this.editorUi.getEndEvents());\r\n        // 打开时获取所有知会节点信息\r\n        this.uiState.getNotifyEventList(this.editorUi.getNotifyEvents());\r\n        // 打开时获取所有消息节点信息\r\n        this.uiState.getMessageEventList(this.editorUi.getMessageEvents());\r\n        // 打开时获取所有子流程和信号捕获节点信息\r\n        this.uiState.getSubAndCatchEventsList(this.editorUi.getSubAndCatchEvents());\r\n\r\n        this.uiState.bpmnModel = this.editorUi.graph.bpmnModel;\r\n\r\n        // 获取启动方式\r\n        this.uiState.getStartMode(this.editorUi.getStartMode());\r\n        if(this.editorUi.getStartMode() == StartMode.SUB_PROCESS) {\r\n          this.uiState.subActivityContext = this.uiState.subActivityContext.concat(this.uiState.subProcessElementContext);\r\n        }else {\r\n          this.uiState.subActivityContext = this.uiState.subActivityContext.filter(x => this.uiState.subProcessElementContext.some(y => y.key != x.key))\r\n        }\r\n\r\n        this.addGraphModelChangedListener();\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 添加graph model监听器，有变化则将changedFlag\r\n   */\r\n  addGraphModelChangedListener() {\r\n    // 监听画布变化，更新界面变更状态\r\n    const changedListener = () => {\r\n      this.changedFlag = false;\r\n    }\r\n    this.editorUi.graph.model.addListener(mxEvent.CHANGE, changedListener);\r\n  }\r\n\r\n  private showTip(data: any) {\r\n    if (data.type === 'message') {\r\n      switch (data.level) {\r\n        case 'warning':\r\n          this.message.warning(data.message);\r\n          break;\r\n        case 'error':\r\n          this.message.error(data.message);\r\n          break;\r\n        case 'question':\r\n          this.message.question(data.message, () => {\r\n            this.questionOKHandle(data);\r\n          });\r\n          break;\r\n        default:\r\n          this.message.info(data.message);\r\n          break;\r\n      }\r\n    } else if (data.type === 'notify') {\r\n      switch (data.level) {\r\n        case 'warning':\r\n          this.notify.warning(data.message);\r\n          break;\r\n        case 'error':\r\n          this.notify.error(data.message);\r\n          break;\r\n        default:\r\n          this.notify.info(data.message);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private showVerify(data: any) {\r\n    this.errorList = data;\r\n    this.createValidationTips();\r\n  }\r\n\r\n  private questionOKHandle(data: any) {\r\n    switch (data.action) {\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取流程上下文\r\n   * @param id 流程定义ID（设计时使用流程定义Key，运行时使用流程定义ID）\r\n   */\r\n  getProcContent(id: string): Observable<any> {\r\n    if (id) {\r\n      if (this.time === ProcessTime.dt) {\r\n        return this.service.getProcContentbyKey(id);\r\n      } else if (this.time === ProcessTime.rt) {\r\n        return this.service.getRTProcContentbyId(id);\r\n      } else {\r\n        throw new Error(this.localePipe.transform(\"processEditor.wrongMoment\"));\r\n      }\r\n    }\r\n  }\r\n\r\n  private save(content: string) {\r\n    this.uiState.content = content;\r\n    this.showLoading();\r\n    const process = JSON.parse(this.uiState.content);\r\n    this.saveHttp().subscribe((data) => {\r\n      this.closeLoading();\r\n      // 2023-6-13 保存后同步流程名称到标题栏\r\n      this.procNameTitle = process.DefaultProcess.Name;\r\n      this.notify.success({\r\n        title: this.localePipe.transform(\"processEditor.prompted\"),\r\n        msg: this.localePipe.transform(\"processEditor.saveSuccess\"),\r\n        timeout: 3000\r\n      } as NotifyOptions);\r\n      if (this.time === ProcessTime.dt) {\r\n        this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveDT, true, process.DefaultProcess.Key);\r\n      } else if (this.time === ProcessTime.rt) {\r\n        this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveRT, true, process.DefaultProcess.Key);\r\n      }\r\n      // 重置界面变更状态\r\n      this.changedFlag = false;\r\n    },\r\n      (error: HttpErrorResponse) => {\r\n        this.closeLoading();\r\n        this.notify.error({\r\n          title: this.localePipe.transform(\"processEditor.prompted\"),\r\n          msg: error.error.Message,\r\n          timeout: 3000\r\n        } as NotifyOptions);\r\n        if (this.time === ProcessTime.dt) {\r\n          this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveDT, false, process.DefaultProcess.Key);\r\n        } else if (this.time === ProcessTime.rt) {\r\n          this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_SaveRT, false, process.DefaultProcess.Key);\r\n        }\r\n      });\r\n  }\r\n\r\n  private release(content: string) {\r\n    this.uiState.content = content;\r\n    this.showLoading();\r\n    this.uiState.getReleaseConfig().subscribe((config) => {\r\n      if (config.currentValue === 'true') {\r\n        // 展示发布前审批页面，同时保存，记审计\r\n        this.viewModel.saveProcess(this.uiState.content, this.processInfo, 1).subscribe((re) => {\r\n          this.viewModel.getProcDefsByKey(JSON.parse(content).DefaultProcess.Key).subscribe((ProcDefs) => {\r\n            const maxVersion = Math.max.apply(Math, ProcDefs.map(function (item) {\r\n              return item.version << 0\r\n            }));\r\n            // 展示发布前审批页面，同时保存，记审计\r\n            this.viewModel.releaseProcess(content, maxVersion === -Infinity ? 1 : maxVersion);\r\n            this.closeLoading();\r\n          });\r\n        });\r\n        this.notify.success({\r\n          title: this.localePipe.transform(\"processEditor.prompted\"),\r\n          msg: this.localePipe.transform(\"processEditor.waitReview\"),\r\n          timeout: 3000\r\n        } as NotifyOptions);\r\n        const process = JSON.parse(this.uiState.content);\r\n        this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_Deploy, true, process.DefaultProcess.Key);\r\n      } else {\r\n        this.viewModel.deployProcess(this.uiState.content).subscribe((data) => {\r\n          this.closeLoading();\r\n          this.viewModel.saveProcess(this.uiState.content, this.processInfo, 0).subscribe((r) => { });\r\n          this.notify.success({\r\n            title: this.localePipe.transform(\"processEditor.prompted\"),\r\n            msg: this.localePipe.transform(\"processEditor.successPublish\"),\r\n            timeout: 3000\r\n          } as NotifyOptions);\r\n          const process = JSON.parse(this.uiState.content);\r\n          this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_Deploy, true, process.DefaultProcess.Key);\r\n        },\r\n          (e: any) => {\r\n            this.closeLoading();\r\n            this.notify.error({\r\n              title: this.localePipe.transform(\"processEditor.prompted\"),\r\n              msg: this.localePipe.transform(\"processEditor.publishFail\") + `${e.error.Message}`,\r\n              timeout: 3000\r\n            } as NotifyOptions);\r\n            const process = JSON.parse(this.uiState.content);\r\n            this.viewModel.auditProcessDef(AuditEvent.WF_ProcessDef_Deploy, false, process.DefaultProcess.Key);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 保存流程定义（设计时+运行时）\r\n   */\r\n  private saveHttp(): Observable<any> {\r\n    if (this.uiState.content) {\r\n      if (this.time === ProcessTime.dt) {\r\n        return this.viewModel.saveProcess(this.uiState.content, this.processInfo, 1);\r\n      } else if (this.time === ProcessTime.rt) {\r\n        return this.viewModel.saveRTProcess(this.uiState.content, this.rtProcessInfo.rtProcDefId);\r\n      } else {\r\n        throw new Error(this.localePipe.transform(\"processEditor.wrongMoment\"));\r\n      }\r\n    }\r\n  }\r\n\r\n  showLoading() {\r\n    this.loadService.show({ container: 'body', message: '', type: 1 });\r\n  }\r\n  closeLoading() {\r\n    this.loadService.close();\r\n  }\r\n\r\n  private ConvertExecuteForm(form: ExcuteFormEntity): ExecuteFormModel[] {\r\n    const executeForms = new Array();\r\n    if (form.terminal === 'web,app') {\r\n      const webForm = new ExecuteFormModel();\r\n      webForm.ComponentId = form.appId;\r\n      webForm.formFormatId = form.formFormatId;\r\n      webForm.FormType = form.formType;\r\n      webForm.Name = form.name;\r\n      webForm.TerminalType = TerminalType.PC;\r\n      if (form.actualParameters && form.actualParameters.length > 0) {\r\n        webForm.ActualParameters = form.actualParameters.map(p => ({\r\n          Name: p.code,\r\n          Value: p.value\r\n        }));\r\n      }\r\n      executeForms.push(webForm);\r\n      const appForm = new ExecuteFormModel();\r\n      appForm.ComponentId = form.appId;\r\n      appForm.formFormatId = form.formFormatId;\r\n      appForm.FormType = form.formType;\r\n      appForm.Name = form.name;\r\n      appForm.TerminalType = TerminalType.MOBILE;\r\n      if (form.actualParameters && form.actualParameters.length > 0) {\r\n        appForm.ActualParameters = form.actualParameters.map((p: any) => ({\r\n          Name: p.code,\r\n          Tag: p.valueType ? p.valueType : ProcessDeUtil.initVariableType(p.value),\r\n          Value: p.value\r\n        }));\r\n      }\r\n      executeForms.push(appForm);\r\n    } else {\r\n      const executeForm = new ExecuteFormModel();\r\n      executeForm.ComponentId = form.appId;\r\n      executeForm.formFormatId = form.formFormatId;\r\n      executeForm.FormType = form.formType;\r\n      executeForm.Name = form.name;\r\n      switch (form.terminal) {\r\n        case 'web':\r\n          executeForm.TerminalType = TerminalType.PC;\r\n          break;\r\n        case 'app':\r\n          executeForm.TerminalType = TerminalType.MOBILE;\r\n          break;\r\n      }\r\n      if (form.actualParameters && form.actualParameters.length > 0) {\r\n        executeForm.ActualParameters = form.actualParameters.map((p: any) => ({\r\n          Name: p.code,\r\n          Tag: p.valueType ? p.valueType : ProcessDeUtil.initVariableType(p.value),\r\n          Value: p.value\r\n        }));\r\n      }\r\n      executeForms.push(executeForm);\r\n    }\r\n    return executeForms;\r\n  }\r\n  private formFormat2ExecuteForm(formformat): ExecuteFormModel {\r\n    const form = new ExecuteFormModel();\r\n    form.Id = ProcessDeUtil.GenerateElementId();\r\n    form.ComponentId = null;\r\n    form.formFormatId = formformat.id;\r\n    form.FormType = '0';\r\n    form.Name = formformat.name;\r\n    switch (formformat.terminal) {\r\n      case 'PC':\r\n        form.TerminalType = TerminalType.PC;\r\n        break;\r\n      case 'Mobile':\r\n        form.TerminalType = TerminalType.MOBILE;\r\n        break;\r\n    }\r\n    if (formformat.urlParameters && formformat.urlParameters.length > 0) {\r\n      form.ActualParameters = formformat.urlParameters.map(p => ({\r\n        Name: p.code,\r\n        Tag: p.valueType ? p.valueType : ProcessDeUtil.initVariableType(p.value),\r\n        Value: p.value\r\n      }));\r\n    }\r\n    return form;\r\n  }\r\n\r\n  private completeStrategyChanged(strategy: string) {\r\n\r\n    if (strategy !== this.uiState.completeIterator[0].key) {\r\n\r\n      // 参与者存在自动审批的情况下，不允许修改完成策略为会签规则\r\n      // if (this.uiState.propertyData.ParticipantSchemes\r\n      //   && this.uiState.propertyData.ParticipantSchemes.options\r\n      //   && this.uiState.propertyData.ParticipantSchemes.options.automaticPerformers\r\n      //   && this.uiState.propertyData.ParticipantSchemes.options.automaticPerformers.length > 0) {\r\n      //   return;\r\n      // } else {\r\n      // 会签规则不存在，即由抢占模式，变为会签时\r\n      if (!this.uiState.propertyData.SignRule) {\r\n        // 会签是自动弹出会签规则编辑\r\n        const compFactory = this.resolver.resolveComponentFactory(SignRuleComponent);\r\n        const compRef = compFactory.create(this.injector);\r\n\r\n        compRef.instance.value = [];\r\n        // compRef.instance.counterSignVariables = this.uiState.counterSignVariables || [];\r\n        // compRef.instance.approvalItems = this.uiState.approvalItems || [];\r\n\r\n        const modalConfig: ModalOptions = Object.assign(compRef.instance.modalConfig,\r\n          { buttons: compRef.instance.modalFooter });\r\n        const dialog = this.modalService.show(compRef, modalConfig);\r\n        compRef.instance.closeModal.subscribe($event => dialog.close());\r\n        compRef.instance.submitModal.subscribe((data: any) => {\r\n          this.updateChangeProperty({\r\n            categoryId: 'performerProperty',\r\n            propertyID: UserActivityPropertyKeys.SignRule,\r\n            propertyValue: data.value\r\n          });\r\n          dialog.close();\r\n        });\r\n      }\r\n      // 会签规则下，驳回规则约束\r\n      if ((this.uiState.propertyData.BackWardRule as BackWardRule).SelectTargetAble === true) {\r\n        setTimeout(() => {\r\n          this.message.warning(this.localePipe.transform(\"processEditor.policyConflict\"));\r\n        }, 500);\r\n      }\r\n      // }\r\n    }\r\n  }\r\n\r\n  private OtherAssignNodesChanged(data: any) {\r\n    const compFactory = this.resolver.resolveComponentFactory(AssignScopeComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    let location;\r\n    if (data.Id.indexOf('startActivity') > -1) {\r\n      location = 'startActivity';\r\n    } else {\r\n      location = 'userActivity';\r\n    }\r\n    if (location === 'startActivity') {\r\n      compRef.instance.value = [];\r\n      const activities = this.uiState.userActList.filter(a => a.Id !== this.uiState.propertyData.Id\r\n        && a.AssignmentStrategy === 'ASSIGN'\r\n        && a.AssignPerformerConfig\r\n        && a.AssignPerformerConfig.Operator === 'procInstCreator');\r\n      if (activities && activities.length > 0) {\r\n        compRef.instance.value = activities.map(a => a.Id);\r\n      } else {\r\n        compRef.instance.value = new Array();\r\n      }\r\n    } else {\r\n      compRef.instance.value = [];\r\n    }\r\n    compRef.instance.location = location;\r\n    const modalConfig: ModalOptions = Object.assign(compRef.instance.modalConfig,\r\n      { buttons: compRef.instance.modalFooter });\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModal.subscribe($event => dialog.close());\r\n    compRef.instance.submitModal.subscribe((data: any) => {\r\n      this.updateChangeProperty({\r\n        categoryId: location = 'startActivity' ? 'activityConfig' : 'approvalProperty',\r\n        // todo：多个活动具有同名属性时，如何更合理定义PropertyKey？\r\n        propertyID: UserActivityPropertyKeys.otherAssignActivities,\r\n        propertyValue: data.value\r\n      });\r\n      dialog.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 完成策略调整校验\r\n   */\r\n  private beforeCompleteStrategyChange(data: any): Observable<boolean> {\r\n    if (this.time === ProcessTime.rt) {\r\n      return this.viewModel.beforeCompleteStrategyChange(data, this.rtProcessInfo);\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 保存，发布，另存，同步操作时\r\n   * 校验模型的流程分类ID与列表存储是否一致，不一致时，以列表为准\r\n   */\r\n  private checkModelContent(content: string): string {\r\n    const process = JSON.parse(content);\r\n    const modelBizDefKey = process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefKey;\r\n    if (this.time === ProcessTime.dt) {\r\n      if (modelBizDefKey === this.processInfo.flowFormId) {\r\n        return content;\r\n      } else {\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefKey = this.processInfo.flowFormId;\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefName = this.uiState.flowFormInfo.flowForm.name;\r\n        return JSON.stringify(process);\r\n      }\r\n    } else if (this.time === ProcessTime.rt) {\r\n      if (modelBizDefKey === this.rtProcessInfo.flowFormId) {\r\n        return content;\r\n      } else {\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefKey = this.rtProcessInfo.flowFormId;\r\n        process.DefaultProcess.extensionElements.find(e => e.ClrTypeID === 'wf.ProcessHeader').BizDefName = this.uiState.flowFormInfo.flowForm.name;\r\n        return JSON.stringify(process);\r\n      }\r\n    }\r\n  }\r\n\r\n  public showModeChange(event: any) {\r\n    const { mode = ShowMode.panel, wideWidth = 330, smallWidth = 41 } = event || {};\r\n    if (mode === ShowMode.panel) {\r\n      this.panelWidth = wideWidth;\r\n      this.rightPanelWidth = wideWidth;\r\n    } else if (mode === ShowMode.sidebar) {\r\n      this.panelWidth = smallWidth;\r\n      this.rightPanelWidth = smallWidth;\r\n    }\r\n  }\r\n\r\n  saveProc() {\r\n    const model = this.editorUi.graph.bpmnModel;\r\n    const res = WfValidatorAdapter.validator(model, this.scene);\r\n    if (res.valid == false) {\r\n      this.showTip(res);\r\n      return;\r\n    }\r\n    if (res.warningList && res.warningList.length > 0) {\r\n      this.showVerify(res.warningList);\r\n    } else {\r\n      this.clearValidationTips();\r\n    }\r\n    this.save(model.ConvertToJson());\r\n  }\r\n  saveAs() {\r\n    if (!(this.uiState.enableAdminOrgAut || ((this.uiState.isAdministratorConfig &&\r\n      this.uiState.administrator !== null) || (!this.uiState.isAdministratorConfig)))) {\r\n      this.message.info(this.localePipe.transform(\"processEditor.noPermissionToSave\"));\r\n      return;\r\n    }\r\n    const model = this.editorUi.graph.bpmnModel;\r\n    const res = WfValidatorAdapter.validator(model, this.scene);\r\n    if (res.valid == false) {\r\n      this.showTip(res);\r\n      return;\r\n    }\r\n    if (res.warningList && res.warningList.length > 0) {\r\n      this.showVerify(res.warningList);\r\n    } else {\r\n      this.clearValidationTips();\r\n    }\r\n    const process = new BpmnModel();\r\n    process.LoadFromJson(model.ConvertToJson());\r\n    process.DefaultProcess.Key = ProcessDeUtil.GenerateElementId();\r\n    process.DefaultProcess.Id = ProcessDeUtil.GenerateElementId();\r\n    process.DefaultDiagram.BpmnPlane.BpmnElementId = process.DefaultProcess.Id;\r\n    this.viewModel.saveAsProcess(process, this.processInfo);\r\n  }\r\n  releaseProc() {\r\n    const model = this.editorUi.graph.bpmnModel;\r\n    const res = WfValidatorAdapter.validator(model, this.scene);\r\n    if (res.valid == false) {\r\n      this.showTip(res);\r\n      return;\r\n    }\r\n    if (res.warningList && res.warningList.length > 0) {\r\n      this.showVerify(res.warningList);\r\n    } else {\r\n      this.clearValidationTips();\r\n    }\r\n    this.release(model.ConvertToJson());\r\n  }\r\n  sync() {\r\n    const model = this.editorUi.graph.bpmnModel;\r\n    const res = WfValidatorAdapter.validator(model, this.scene);\r\n    if (res.valid == false) {\r\n      this.showTip(res);\r\n      return;\r\n    }\r\n    if (res.warningList && res.warningList.length > 0) {\r\n      this.showVerify(res.warningList);\r\n    } else {\r\n      this.clearValidationTips();\r\n    }\r\n    this.viewModel.syncDtProcess(model.ConvertToJson(), this.rtProcessInfo);\r\n  }\r\n  procRecord() {\r\n    const record = this.editorUi.graph.bpmnModel.DefaultProcess.Documentation;\r\n    this.note(record);\r\n  }\r\n  batchSet() {\r\n    const compFactory = this.resolver.resolveComponentFactory(BatchSetPropertiesComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    const modalConfig: ModalOptions = {\r\n      title: '批量设置',\r\n      width: 512,\r\n      height: 565,\r\n      showButtons: true,\r\n      buttons: compRef.instance.footer\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.cancel.subscribe($event => dialog.close());\r\n    compRef.instance.submit.subscribe((data: string) => {\r\n      dialog.close();\r\n    });\r\n  }\r\n  closeProc() {\r\n    // 如果界面发生变化，增加确认框提示，无变化则直接关闭\r\n    if (this.changedFlag) {\r\n      this.message.confirm(this.localePipe.transform(\"processEditor.closeProc1\"),\r\n      this.localePipe.transform(\"processEditor.closeProc2\")).subscribe(\r\n        (f) => {\r\n          if (f) {\r\n            this.close.emit();\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      this.close.emit();\r\n    }\r\n  }\r\n  viewProcModel() {\r\n    const modalConfig: ModalOptions = {\r\n      title: this.localePipe.transform(\"processEditor.viewModel\"),\r\n      width: 800,\r\n      height: 520,\r\n      showButtons: false\r\n    };\r\n    // 模型自动复制到剪贴板\r\n    this.notify.success(this.localePipe.transform(\"processEditor.copied\"));\r\n    this.copy(this.editorUi.graph.bpmnModel.ConvertToJson());\r\n    this.modalService.show(this.editorUi.graph.bpmnModel.ConvertToJson(), modalConfig);\r\n  }\r\n  /**\r\n   * 左右拖动后事件，event.size.width是左侧面板的宽度\r\n   */\r\n  rzStop(event) {\r\n    this.panelWidth = event.size.width;\r\n\r\n    this.editorUi && this.editorUi.graph.refresh();\r\n  }\r\n\r\n  // 展示表单验证组件，用于构件校验\r\n  createValidationTips() {\r\n    this.verifySer.clear();\r\n    this.verifyContainer = this.verifySer.createVerify({\r\n      parent: this.contentEl,\r\n      verifyList: this.errorList,\r\n      verifyType: this.tabTypeList,\r\n      showList: true,\r\n      showType: 'processWarning',\r\n      verifyResultTipsTmpl: this.tipsTmpl // 提示模板\r\n    });\r\n    this.listclick = this.verifyContainer.validatorClick.subscribe(e => {\r\n      console.log(e);\r\n    });\r\n    this.showchange = this.verifyContainer.listshowChange.subscribe(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  public clearValidationTips() {\r\n    this.errorList = [];\r\n    if (this.verifySer) {\r\n      this.verifySer.clear();\r\n    }\r\n  }\r\n\r\n  copy(text) {\r\n    const el = document.createElement('input')\r\n    el.setAttribute('value', text)\r\n    document.body.appendChild(el)\r\n    el.select()\r\n    document.execCommand('copy')\r\n    document.body.removeChild(el)\r\n  }\r\n}\r\n","import { Component, OnInit, Output, Input, ViewChild, EventEmitter, TemplateRef, HostBinding, Optional, ChangeDetectorRef, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { AssignPerformerConfig } from './assign-performer-config.entity';\r\nimport { OrganizationPotentialOwner, ActionScope, OrganizationLevel } from '../organization-potential-owner/actionOrganizationScope';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'app-assign-performer-config',\r\n  templateUrl: './assign-performer-config.component.html',\r\n  styleUrls: ['./assign-performer-config.component.css'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class AssignPerformerConfigComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n  assingPerformerConfigForm: FormGroup;\r\n  private config: AssignPerformerConfig;\r\n\r\n  @Input()\r\n  set value(v: AssignPerformerConfig) {\r\n    this.assingPerformerConfigForm = new FormGroup({\r\n      multiSelect: new FormControl(v.multiSelect),\r\n      necessary: new FormControl(v.necessary)\r\n    });\r\n    this.operator = v.operator || 'currentUser';\r\n    this.allowGlobalAssign = v.allowGlobalAssign || false;\r\n    if (v.assignScope) {\r\n      this.organizationLevel = v.assignScope.organizationLevel;\r\n      this.includeChildren = v.assignScope.includeChildren;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  allowGlobalAssign = false;\r\n\r\n  operatorCollection = [\r\n    { text: this.localePipe.transform('component.assignPerformer.currentUser'), value: 'currentUser' },\r\n    { text: this.localePipe.transform('component.assignPerformer.procInstCreator'), value: 'procInstCreator' }];\r\n  operator = 'currentUser';\r\n\r\n  organizationLevelCollection = [\r\n    { value: 'GLOBAL', text: this.localePipe.transform('component.assignPerformer.global'), orgId: 'global' },\r\n    { value: 'UNIT', text: this.localePipe.transform('component.assignPerformer.currentUnit'), orgId: 'currentUnit' },\r\n    { value: 'DEPARTMENT', text: this.localePipe.transform('component.assignPerformer.currentDepartment'), orgId: 'currentDepartment' }];\r\n  organizationLevel = this.organizationLevelCollection[0].value;\r\n  includeChildren = false;\r\n\r\n  modalConfig = {\r\n    title: this.localePipe.transform('component.assignPerformer.assignPerformer'),\r\n    width: 720,\r\n    height: 490,\r\n    showButtons: true\r\n  };\r\n  constructor(\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickOK() {\r\n    this.config = {\r\n      operator: this.operator,\r\n      multiSelect: this.assingPerformerConfigForm.get('multiSelect').value,\r\n      necessary: this.assingPerformerConfigForm.get('necessary').value,\r\n      allowGlobalAssign: this.allowGlobalAssign\r\n    };\r\n    if (this.allowGlobalAssign && this.organizationLevel !== this.organizationLevelCollection[0].value) {\r\n      const potential = new OrganizationPotentialOwner();\r\n      potential.actionScope = ActionScope.AssignUser;\r\n      potential.organizationLevel = this.organizationLevel as OrganizationLevel;\r\n      potential.organizationId = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).orgId;\r\n      potential.organizationName = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).text;\r\n      potential.includeChildren = this.includeChildren;\r\n      potential.tag = 'variable';\r\n      this.config.assignScope = potential;\r\n    }\r\n    const object = { value: this.config, parameters: null };\r\n    this.submitModal.emit(object);\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  valueChange(event: any) {\r\n    switch (event.value) {\r\n      case this.organizationLevelCollection[0].value:\r\n        this.includeChildren = false;\r\n        break;\r\n      case this.organizationLevelCollection[1].value:\r\n        this.includeChildren = true;\r\n        break;\r\n      case this.organizationLevelCollection[2].value:\r\n        this.includeChildren = false;\r\n        break;\r\n    }\r\n  }\r\n}\r\nexport class AssignConfigConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data): string {\r\n    return this.localePipe.transform('component.assignPerformer.set');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'jumpScopePipe'})\r\nexport class JumpScopePipe implements PipeTransform {\r\n    transform(value: any[], nodeId: string): any[] {\r\n        return value.filter(item => item.Id !== nodeId);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { PerformerEntity } from '../../entities/performer.entity';\r\n\r\n@Pipe({ name: 'usersName' })\r\nexport class UsersNamePipe implements PipeTransform {\r\n    constructor() { }\r\n    transform(users: PerformerEntity[], defaultVal = ''): string {\r\n        let r = '';\r\n        users.forEach(u => {\r\n            r += u.performerName + '，';\r\n        });\r\n        if (r) {\r\n            r = r.substring(0, r.length - 1);\r\n        }\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n@Pipe({ name: 'usersId' })\r\nexport class UsersIdPipe implements PipeTransform {\r\n    constructor() { }\r\n    transform(users: PerformerEntity[], defaultVal = ''): string {\r\n        let r = '';\r\n        users.forEach(u => {\r\n            r += u.performerId + ',';\r\n        });\r\n        if (r) {\r\n            r = r.substring(0, r.length - 1);\r\n        }\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import { Provider } from '@angular/core';\r\nimport { ProcessDesignerUIState } from './app/process-designer.uistate';\r\nimport { ProcessDesignerViewModel } from './app/process-designer.viewmodel';\r\nimport { ProcessDesignerDataService } from './domain/process-designer.dataservice';\r\nimport { BpmnProcessViewModel } from './app/bpmn-process.viewmodel';\r\nimport { WFFlowElementsViewModel } from './app/wf-flowElements.viewModel';\r\nimport { SubProcessViewModel } from './app/sub-process.viewmodel';\r\nimport { AutoActivityAdapter } from './app/auto-activity.adapter';\r\nimport { CatchEventAdapter } from './app/catch-event.adapter';\r\nimport { MessageActivityAdapter } from './app/message-activity.adapter';\r\nimport { NotifyActivityAdapter } from './app/notify-activity.adapter';\r\nimport { AifCreationBillActivityAdapter } from './app/aif-creation-bill-activity.adapter';\r\nimport { BillNodeActivityAdapter } from './app/bill-node-activity.adapter';\r\nimport { SequenceActivityAdapter } from './app/sequecne-activity.adapter';\r\n\r\nconst PROCESS_DESIGNER_APP_PROVIDERS: Provider[] = [\r\n    ProcessDesignerUIState,\r\n    ProcessDesignerViewModel,\r\n    BpmnProcessViewModel,\r\n    WFFlowElementsViewModel,\r\n    SubProcessViewModel,\r\n    AutoActivityAdapter,\r\n    CatchEventAdapter,\r\n    MessageActivityAdapter,\r\n    NotifyActivityAdapter,\r\n    AifCreationBillActivityAdapter,\r\n    BillNodeActivityAdapter,\r\n    SequenceActivityAdapter,\r\n];\r\nexport {\r\n    ProcessDesignerUIState,\r\n    ProcessDesignerViewModel,\r\n    BpmnProcessViewModel,\r\n    WFFlowElementsViewModel,\r\n    SubProcessViewModel,\r\n    AutoActivityAdapter,\r\n    CatchEventAdapter,\r\n    MessageActivityAdapter,\r\n    NotifyActivityAdapter,\r\n    AifCreationBillActivityAdapter,\r\n    BillNodeActivityAdapter,\r\n    SequenceActivityAdapter,\r\n    PROCESS_DESIGNER_APP_PROVIDERS,\r\n};\r\nconst PROCESS_DESIGNER_DOMAIN_PROVIDERS: Provider[] = [\r\n    ProcessDesignerDataService\r\n];\r\nexport {\r\n    ProcessDesignerDataService,\r\n    PROCESS_DESIGNER_DOMAIN_PROVIDERS\r\n};\r\nconst PROCESS_DESIGNER_PART_PROVIDERS: Provider[] = [\r\n];\r\nexport {\r\n    PROCESS_DESIGNER_PART_PROVIDERS\r\n};\r\n","import { Component, OnInit, HostBinding, Input, Output, EventEmitter, ViewChild, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TypeConverter } from '@farris/ide-property-panel';\r\nimport { CallActivitySubProcess } from './call-activity-sub-process.entity';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ProcessDeUtil } from '../../domain/process-de-util';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcessDesignerUIState } from '../../app/process-designer.uistate';\r\nimport { ExpressionService, InjectedType, VarEntity } from '@gsp-svc/expression';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-call-activity-sub-process',\r\n  templateUrl: './call-activity-sub-process.component.html',\r\n  styleUrls: ['./call-activity-sub-process.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class CallActivitySubProcessComponent implements OnInit {\r\n  @HostBinding('class')\r\n  cls = 'farris-main-area flex-column';\r\n\r\n  @Input() set value(v: CallActivitySubProcess) {\r\n    if (v) {\r\n      this.callActivitySubProcess = v;\r\n      this.getProcessDefKey(this.callActivitySubProcess.calledElement);\r\n      this.getFlowForm(this.callActivitySubProcess.calledBizDefKey);\r\n    }\r\n  }\r\n  @Output() closeModal = new EventEmitter<any>();\r\n  @Output() submitModal = new EventEmitter<any>();\r\n\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n  modalConfig = {\r\n    title: this.localePipe.transform(\"component.subProcess.subProcessOpt\"),\r\n    width: 500,\r\n    height: 380,\r\n    showButtons: true\r\n  };\r\n\r\n  callActivitySubProcess: CallActivitySubProcess = new CallActivitySubProcess();\r\n\r\n  groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n  constructor(\r\n    private message: MessagerService,\r\n    private util: ProcessDeUtil,\r\n    private http: HttpService,\r\n    private designerState: ProcessDesignerUIState,\r\n    private expr: ExpressionService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  clickOK() {\r\n    if (this.validator()) {\r\n      const object = { value: this.callActivitySubProcess, parameters: null };\r\n      this.submitModal.emit(object);\r\n    }\r\n  }\r\n\r\n  clickCancel() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n  processConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledElement = args.procDefKey;\r\n      this.callActivitySubProcess.calledElementName = args.name;\r\n    }\r\n  }\r\n  clearProcessDef(args: any) {\r\n    this.callActivitySubProcess.calledElement = '';\r\n    this.callActivitySubProcess.calledElementName = '';\r\n  }\r\n\r\n  flowFormConfirm(args: any) {\r\n    if (args) {\r\n      this.callActivitySubProcess.calledBizDefKey = args.id;\r\n      this.callActivitySubProcess.calledBizDefName = args.name;\r\n    }\r\n  }\r\n  clearFlowForm(args: any) {\r\n    this.callActivitySubProcess.calledBizDefKey = '';\r\n    this.callActivitySubProcess.calledBizDefName = '';\r\n  }\r\n\r\n  setBizDataId() {\r\n    this.showExprHelp();\r\n  }\r\n\r\n  private showExprHelp() {\r\n    let context = new Array<VarEntity>();\r\n    // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {\r\n    //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));\r\n    // }\r\n    // this.expr.clearContext();\r\n    if (this.designerState.schemas.length > 0) {\r\n      for (const schema of this.designerState.schemas) {\r\n        this.expr.addSchema('Schema', schema);\r\n      }\r\n      if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {\r\n        const entityType = this.designerState.schemas[0].entityTypes[0];\r\n        this.expr.addInjectedEntity(entityType.name, 'Schema',\r\n          entityType.name, InjectedType.EntityType);\r\n      }\r\n    }\r\n    context = this.designerState.addContext(context);\r\n    if (this.designerState.subActivityContext.length > 0) {\r\n      for (const variable of this.designerState.subActivityContext) {\r\n        context.push(variable);\r\n        // this.expr.addContext(variable);\r\n      }\r\n    }\r\n    if (context.length > 0) {\r\n      for (const v of context) {\r\n        this.expr.addContext(v);\r\n      }\r\n    }\r\n    this.expr.addExpressionText(this.callActivitySubProcess.bizDataId);\r\n    this.expr.buildExpression().then((expressioninfo: string) => {\r\n      this.callActivitySubProcess.bizDataId = expressioninfo;\r\n      //点击确定后，去除表达式里面的新增的上下文变量\r\n      if(context.length > 0) {\r\n        this.expr.exprEntity.contextEntities = this.expr.exprEntity.contextEntities.filter(x => !context.some(y => y.key === x.key));\r\n      }\r\n    });\r\n  }\r\n\r\n  valueChange(bool: boolean) {\r\n    if (bool) {\r\n      this.callActivitySubProcess.bizDataId = null;\r\n    }\r\n  }\r\n\r\n  private validator(): boolean {\r\n    if (!this.callActivitySubProcess.inheritBizDataId && !this.callActivitySubProcess.bizDataId) {\r\n      this.message.warning(this.localePipe.transform(\"component.subProcess.inheritBizDataId\"));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getProcessDefKey(key: string){\r\n    let url = this.util.getProcessDefinitionWebApi();\r\n    if (key) {\r\n      url += `/procDefKey/${key}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledElementName = re.name;\r\n      });\r\n    }\r\n  }\r\n  private getFlowForm(id: string) {\r\n    let url = this.util.getFlowFormWebApi();\r\n    if (id) {\r\n      url += `/${id}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        this.callActivitySubProcess.calledBizDefName = re.name;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class CallActivitySubProcessConverter implements TypeConverter {\r\n  constructor(\r\n    private localePipe: WfLocalePipe\r\n  ) { }\r\n\r\n  convertTo(data: any): string {\r\n    if (data && (data.calledBizDefKey || data.calledElement)) {\r\n      return this.localePipe.transform(\"component.subProcess.set\");\r\n    }\r\n    return this.localePipe.transform(\"component.subProcess.notSet\");\r\n  }\r\n}\r\n","export class FormFormat {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    bizCategory: string;\r\n    formUrl: string;\r\n    urlType: string;\r\n    formatType: string;\r\n    status: number;\r\n    urlParameters: Array<FormatParameter>;\r\n    formButtons: Array<FormButton>;\r\n    formFields: Array<FormFieldData>;\r\n}\r\n\r\nexport class FormFieldData {\r\n    data: FormField;\r\n    expanded: boolean;\r\n    leaf: boolean;\r\n    children: Array<FormFieldData>;\r\n}\r\n\r\nexport class FormatParameter {\r\n    code: string;\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\nexport class FormButton {\r\n    id: string;\r\n    buttonId: string;\r\n    buttonName: string;\r\n    buttonState: string;\r\n    description: string;\r\n    sortOrder: number;\r\n    formFormatId: string;\r\n}\r\n\r\nexport class FormField {\r\n    id: string;\r\n    fieldId: string;\r\n    fieldName: string;\r\n    fieldState: string;\r\n    description: string;\r\n    sortOrder: number;\r\n    formFormatId: string;\r\n}\r\n","import { ProcessDeUtil } from '../../../domain/process-de-util';\r\nimport { FormMethodConfig } from './form-method-config';\r\n\r\nexport class FormFormatConfig {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.createNM();\r\n        this.formMethodConfigs = new Array();\r\n    }\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n    formFormatId: string;\r\n    description: string;\r\n    formButtonConfigs: Array<FormButtonConfig>;\r\n    formFieldConfigs: Array<FormFieldConfig>;\r\n    formMethodConfigs: Array<FormMethodConfig>;\r\n}\r\n\r\nexport class FormButtonConfig {\r\n    buttonId: string;\r\n    buttonState: string;\r\n}\r\n\r\nexport class FormFieldConfig {\r\n    fieldId: string;\r\n    fieldState: string;\r\n}\r\n","import { ProcessDeUtil } from '../../../domain/process-de-util';\r\n\r\nexport const workFlowActions: any[] = [\r\n    { text: '正向', value: 'Forward' },\r\n    { text: '反向', value: 'Backward' },\r\n    { text: '终止', value: 'Abort' }\r\n];\r\nexport const executionTime = [\r\n    { text: '流转前', value: 'Pre' },\r\n    { text: '流转后', value: 'Post' }\r\n];\r\n\r\nexport class FormMethodConfig {\r\n    constructor() {\r\n        this.id = ProcessDeUtil.createNM();\r\n        this.workFlowAction = workFlowActions[0].value;\r\n        this.executionTime = executionTime[0].value;\r\n        this.sortOrder = 1;\r\n    }\r\n    id: string;\r\n    formFormatConfigId: string;\r\n    workFlowAction: string;\r\n    method: string;\r\n    executionTime: string;\r\n    sortOrder: number;\r\n    methodParameters: Array<any>;\r\n}\r\n\r\n\r\n","import { Component, OnInit, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { EditorTypes } from '@farris/ui-datagrid-editors';\r\nimport { workFlowActions, executionTime, FormMethodConfig } from '../entities/form-method-config';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { FormMethod } from '../entities/form-method';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ParameterSettingComponent } from '../parameter-setting/parameter-setting.component';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\n\r\n@Component({\r\n  selector: 'lib-form-operation-config',\r\n  templateUrl: './form-operation-config.component.html',\r\n  styleUrls: ['./form-operation-config.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class FormOperationConfigComponent implements OnInit {\r\n  private _fromFormatId: string;\r\n  @Input()\r\n  set formFormatId(v: string) {\r\n    this._fromFormatId = v;\r\n    if (this._fromFormatId) {\r\n      this.getFormMethods();\r\n    }\r\n  }\r\n  get formFormatId() {\r\n    return this._fromFormatId;\r\n  }\r\n\r\n  @Input() formFormatConfigId: string;\r\n  @Input() operations = new Array<FormMethodConfig>();\r\n\r\n  @ViewChild('methodsDialog') methodsDialog: DialogComponent;\r\n  @ViewChild('grid') grid: DatagridComponent;\r\n  @ViewChild('methodGrid') methodGrid: DatagridComponent;\r\n  @ViewChild('cell') cell: TemplateRef<any>;\r\n\r\n  cols = new Array();\r\n\r\n  methodCols = [\r\n    { field: 'method', width: 100, title: this.localePipe.transform(\"component.executeForms.method\"), showTips: true },\r\n    { field: 'methodName', width: 80, title: this.localePipe.transform(\"component.executeForms.methodName\"), showTips: true },\r\n    { field: 'description', width: 120, title: this.localePipe.transform(\"component.executeForms.description\"), showTips: true }\r\n  ];\r\n  e: any;\r\n\r\n  formMethods = new Array<FormMethod>();\r\n  state: 'add' | 'edit' = 'add';\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private message: MessagerService,\r\n    private resolver: ComponentFactoryResolver,\r\n    private injector: Injector,\r\n    private modalService: BsModalService,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.cols = [\r\n    {\r\n      field: 'workFlowAction', width: 80, title: this.localePipe.transform(\"component.executeForms.workFlowAction\"),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: workFlowActions }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: workFlowActions, idField: 'value', panelHeight: 'auto', enableClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    }, {\r\n      field: 'method', width: 100, title: this.localePipe.transform(\"component.executeForms.formOperations\"),\r\n      editor: {\r\n        type: 'input-group',\r\n        options: {\r\n          groupText: '<i class=\"f-icon f-icon-lookup\"></i>',\r\n          editable: false,\r\n          clickHandle: (e) => {\r\n            e.formControl.setValue(e.instance.value ? e.instance.value : '');\r\n            this.e = e;\r\n            this.methodsDialog.show();\r\n            this.state = 'edit';\r\n          },\r\n          clear: (e) => {\r\n            console.log('clear', e);\r\n          }\r\n        }\r\n      },\r\n      formatter: (v, d, i) => {\r\n        if (v) {\r\n          const m = this.formMethods.find(item => item.method === v);\r\n          if (m) {\r\n            return m.methodName;\r\n          } else {\r\n            return '';\r\n          }\r\n        } else {\r\n          return '';\r\n        }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'executionTime', width: 80, title: this.localePipe.transform(\"component.executeForms.executionTime\"),\r\n      formatter: {\r\n        type: 'enum',\r\n        options: { valueField: 'value', textField: 'text', data: executionTime }\r\n      },\r\n      editor: {\r\n        type: EditorTypes.COMBOLIST,\r\n        options: { valueField: 'value', textField: 'text', data: executionTime, idField: 'value', panelHeight: 'auto', enableClear: false }\r\n      },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'sortOrder', width: 60, title: this.localePipe.transform(\"component.executeForms.sortOrder\"),\r\n      editor: {\r\n        type: EditorTypes.NUMBERBOX, options: {\r\n        }\r\n      },\r\n      formatter: { type: 'number', options: { precision: 0 } },\r\n      validators: [\r\n        { type: 'required', messager: '必填' }\r\n      ]\r\n    },\r\n    {\r\n      field: 'methodParameters', width: 80, title: this.localePipe.transform(\"component.executeForms.methodParameters\"),\r\n      template: this.cell,\r\n      halign: 'center', align: 'center'\r\n    }\r\n  ];\r\n  }\r\n\r\n  add() {\r\n    this.methodsDialog.show();\r\n    this.state = 'add';\r\n  }\r\n\r\n  delete() {\r\n    if (this.grid.selectedRow) {\r\n      this.operations = this.operations.filter(o => o.id !== this.grid.selectedRow.id);\r\n    } else {\r\n      this.message.info(this.localePipe.transform(\"component.executeForms.selectFormActionConfig\"));\r\n    }\r\n  }\r\n\r\n  editParam(ctx: any) {\r\n    const compFactory = this.resolver.resolveComponentFactory(ParameterSettingComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.mode = 'usual';\r\n    compRef.instance.showFormType = false;\r\n    if (ctx.rowData.methodParameters) {\r\n      compRef.instance.parameters = [...ctx.rowData.methodParameters.map(p => Object.assign({}, p))];\r\n    } else {\r\n      compRef.instance.parameters = new Array();\r\n    }\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"component.executeForms.parameterSettings\"),\r\n      width: 620,\r\n      height: 400,\r\n      showButtons: true,\r\n      buttons: compRef.instance.modalFooter\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n\r\n    compRef.instance.submit.subscribe(re => {\r\n      for (const o of this.operations) {\r\n        if (o.id === ctx.rowData.id) {\r\n          o.methodParameters = re.parameters;\r\n        }\r\n      }\r\n      dialog.close();\r\n    });\r\n    compRef.instance.cancel.subscribe(re => {\r\n      dialog.close();\r\n    });\r\n  }\r\n\r\n  methodSelected() {\r\n    if (this.methodGrid.selectedRow) {\r\n      const data = this.methodGrid.selectedRow.data;\r\n      if (this.state === 'edit') {\r\n        if (this.e) {\r\n          this.e.formControl.setValue(data.method);\r\n          this.e.instance.cd.detectChanges();\r\n          for (const o of this.operations) {\r\n            if (o.id === data.id) {\r\n              o.method = data.method;\r\n              o.sortOrder = data.sortOrder;\r\n              o.methodParameters = data.methodParameters;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        const operation = new FormMethodConfig();\r\n        operation.formFormatConfigId = this.formFormatConfigId;\r\n        operation.method = data.method;\r\n        operation.sortOrder = data.sortOrder;\r\n        operation.methodParameters = data.methodParameters;\r\n        this.operations = this.operations.concat([operation]);\r\n      }\r\n      this.methodsDialog.close();\r\n    } else {\r\n      this.message.info(this.localePipe.transform(\"component.executeForms.selectFormAction\"));\r\n    }\r\n  }\r\n\r\n  validator(): boolean {\r\n    this.grid.endCellEdit();\r\n    for (const o of this.operations) {\r\n      if (!o.method) {\r\n        this.message.info(this.localePipe.transform(\"component.executeForms.selectFormAction\"));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getFormMethods() {\r\n    if (this.formFormatId) {\r\n      const url = `/api/runtime/wf/v1.0/formOperation?formFormatId=${this.formFormatId}`;\r\n      this.http.get(url).subscribe((re: any) => {\r\n        if (re) {\r\n          this.formMethods = re;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, TemplateRef, ViewChild, HostBinding, Input, ViewContainerRef, ComponentRef, Injector, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { IFormFormatConfigComponent } from \"@gsp-wf/biz-process-api\";\r\nimport { Observable, of, forkJoin, Subject } from 'rxjs';\r\nimport { FormFormat, FormFieldData, FormField } from '../entities/form-format';\r\nimport { FormFormatConfig, FormButtonConfig, FormFieldConfig } from '../entities/form-format-config';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ProcessDeUtil } from '../../../domain/process-de-util';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { PickedResult, ServerSideToken, LookupGridComponent } from '@farris/ui-lookup';\r\nimport { switchMap, catchError } from 'rxjs/operators';\r\nimport { FormOperationConfigComponent } from '../form-operation-config/form-operation-config.component';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\nimport { FormFormatType } from '../entities/form-format-type';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from '../../../i18n/assets/lang.resource';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';\r\n\r\ndeclare var System: any;\r\n\r\n@Component({\r\n  selector: 'lib-form-format-config',\r\n  templateUrl: './form-format-config.component.html',\r\n  styleUrls: ['./form-format-config.component.scss'],\r\n  providers: [\r\n     WfLocalePipe,\r\n  ]\r\n})\r\nexport class FormFormatConfigComponent implements OnInit, IFormFormatConfigComponent {\r\n\r\n  @ViewChild('btnEnable') btnEnable: TemplateRef<any>;\r\n  @ViewChild('btnDisabled') btnDisabled: TemplateRef<any>;\r\n  @ViewChild('btnHidden') btnHidden: TemplateRef<any>;\r\n  @ViewChild('fieldEditable') fieldEditable: TemplateRef<any>;\r\n  @ViewChild('fieldReadonly') fieldReadonly: TemplateRef<any>;\r\n  @ViewChild('fieldHidden') fieldHidden: TemplateRef<any>;\r\n  @ViewChild('fieldRequired') fieldRequired: TemplateRef<any>;\r\n\r\n  @ViewChild('btnGrid') btnGrid: DatagridComponent;\r\n  @ViewChild('fieldTree') fieldTree: TreeTableComponent;\r\n  @ViewChild(FormOperationConfigComponent) operationConfig: FormOperationConfigComponent;\r\n\r\n  @ViewChild('container', { read: ViewContainerRef }) container: ViewContainerRef;\r\n  private extendComponentRef: ComponentRef<any>;\r\n\r\n  config: FormFormatConfig = new FormFormatConfig();\r\n  formFormat: FormFormat = new FormFormat();\r\n  formFormatType: FormFormatType;\r\n\r\n  state: 'new' | 'edit' = 'edit';\r\n\r\n  @Input() showMethodTab = true;\r\n\r\n  private _formFormatId: string;\r\n  set formFormatId(v: string) {\r\n    this._formFormatId = v;\r\n    this.config.formFormatId = v;\r\n  }\r\n\r\n  get formFormatId() {\r\n    return this._formFormatId;\r\n  }\r\n\r\n  private _formatConfigId: string;\r\n  set formatConfigId(v: string) {\r\n    this._formatConfigId = v;\r\n    if (!v) {\r\n      this.state = 'new';\r\n    }\r\n  }\r\n  get formatConfigId() {\r\n    return this._formatConfigId;\r\n  }\r\n\r\n  buttonCols = [];\r\n  buttonConfigs = new Array();\r\n\r\n  fieldCols = [];\r\n  fieldConfigs = new Array();\r\n\r\n  formatFieldList: Array<FormField> = new Array();\r\n\r\n  showExtendTab = false;\r\n\r\n  searchFields: { label: string, value: string }[];\r\n\r\n  constructor(\r\n    private http: HttpService,\r\n    private message: MessagerService,\r\n    private notify: NotifyService,\r\n    private injector: Injector,\r\n    @Optional() private cdr: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) private localeId: string,\r\n    @Inject(WF_LANG_RESOURCES) private resources: any,\r\n    @Optional() private localePipe: WfLocalePipe,\r\n  ) {\r\n    this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);\r\n    let serchFields = {\r\n      label : this.localePipe.transform('component.executeForms.fieldName'),\r\n      value : 'fieldName'\r\n    };\r\n    if(this.searchFields) {\r\n      if(!this.searchFields.some(x => x.value === serchFields.value)) {\r\n        this.searchFields = this.searchFields.concat(serchFields);\r\n      }\r\n    }else {\r\n      this.searchFields = [];\r\n      this.searchFields = this.searchFields.concat(serchFields);\r\n    }\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.buttonCols = [\r\n      { field: 'buttonName', width: 100, title: this.localePipe.transform('component.executeForms.buttonName'), filter: true },\r\n      // { field: 'buttonId', width: 100, title: '按钮标识' },\r\n      {\r\n        title: this.localePipe.transform('component.executeForms.enable'),\r\n        field: 'enable',\r\n        width: 80,\r\n        template: this.btnEnable,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: this.localePipe.transform('component.executeForms.disabled'),\r\n        field: 'disabled',\r\n        width: 80,\r\n        template: this.btnDisabled,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: this.localePipe.transform('component.executeForms.hidden'),\r\n        field: 'hidden',\r\n        width: 80,\r\n        template: this.btnHidden,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      }];\r\n    this.fieldCols = [\r\n      { field: 'fieldName', width: 100, title: this.localePipe.transform('component.executeForms.fieldName')},\r\n      // { field: 'fieldId', width: 100, title: '字段标识' },\r\n      {\r\n        title: this.localePipe.transform('component.executeForms.editable'),\r\n        field: 'editable',\r\n        width: 80,\r\n        template: this.fieldEditable,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: this.localePipe.transform('component.executeForms.readonly'),\r\n        field: 'readonly',\r\n        width: 80,\r\n        template: this.fieldReadonly,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: this.localePipe.transform('component.executeForms.hidden'),\r\n        field: 'hidden',\r\n        width: 80,\r\n        template: this.fieldHidden,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      },\r\n      {\r\n        title: this.localePipe.transform('component.executeForms.required'),\r\n        field: 'required',\r\n        width: 80,\r\n        template: this.fieldRequired,\r\n        align: 'center',\r\n        hAlign: 'center'\r\n      }];\r\n    this.getConfig();\r\n  }\r\n\r\n  submit(): Observable<any> {\r\n    const subject = new Subject<any>();\r\n    this.validator().subscribe(re => {\r\n      if (re) {\r\n        this.setBtnAndFieldConfigs();\r\n        if (this.extendComponentRef) {\r\n          this.extendComponentRef.instance.submit().subscribe(configId => {\r\n            if (configId) {\r\n              this.config.id = configId;\r\n              this.saveConfig(this.config).subscribe(re => {\r\n                subject.next({ result: true, configId: this.config.id });\r\n              }, err => {\r\n                this.message.error(this.localePipe.transform('component.executeForms.saveFail'));\r\n                subject.next({ result: false, configId: this.config.id });\r\n              });\r\n            } else {\r\n              if (this.state === 'new' &&\r\n                this.config.formButtonConfigs.length === 0 &&\r\n                this.config.formFieldConfigs.length === 0 &&\r\n                this.operationConfig.operations.length === 0\r\n              ) {\r\n                setTimeout(() => {\r\n                  subject.next({ result: true, configId: null });\r\n                }, 10);\r\n              } else {\r\n                this.saveConfig(this.config).subscribe(re => {\r\n                  subject.next({ result: true, configId: this.config.id });\r\n                }, err => {\r\n                  this.message.error(this.localePipe.transform('component.executeForms.saveFail'));\r\n                  subject.next({ result: false, configId: this.config.id });\r\n                });\r\n              }\r\n            }\r\n          })\r\n        } else {\r\n          if (this.state === 'new' &&\r\n          this.config.formButtonConfigs.length === 0 &&\r\n          this.config.formFieldConfigs.length === 0 &&\r\n          this.operationConfig.operations.length === 0\r\n          ) {\r\n            setTimeout(() => {\r\n              subject.next({ result: true, configId: null });\r\n            }, 10);\r\n          } else {\r\n            this.saveConfig(this.config).subscribe(re => {\r\n              subject.next({ result: true, configId: this.config.id });\r\n            }, err => {\r\n              this.message.error(this.localePipe.transform('component.executeForms.saveFail'));\r\n              subject.next({ result: false, configId: this.config.id });\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        setTimeout(() => {\r\n          subject.next({ result: false})\r\n        }, 10);\r\n      }\r\n    })\r\n    return subject.asObservable();\r\n  }\r\n\r\n\r\n\r\n  searchField(data) {\r\n    data.field = 'fieldName';\r\n    let searchData = {\r\n      field : 'fieldName',\r\n      value : data.value\r\n    };\r\n    this.fieldTree.searchData = searchData;\r\n    // this.fieldTree.searchData.field = 'fieldName';\r\n    let serchFields = {\r\n      label : this.localePipe.transform('component.executeForms.fieldName'),\r\n      value : 'fieldName'\r\n    };\r\n    if(this.fieldTree.searchFields) {\r\n      if(!this.fieldTree.searchFields.some(x => x.value === serchFields.value)) {\r\n        this.fieldTree.searchFields = this.fieldTree.searchFields.concat(serchFields);\r\n      }\r\n    }else {\r\n      this.fieldTree.searchFields = [];\r\n      this.fieldTree.searchFields = this.fieldTree.searchFields.concat(serchFields);\r\n    }\r\n    this.fieldTree.searchHandle.search(data.field, data.value, 'client');\r\n  }\r\n\r\n  btnConfigChange(bool: boolean, field: string, id: string) {\r\n    if (bool) {\r\n      for (const b of this.buttonConfigs) {\r\n        if (b.id === id) {\r\n          switch (field) {\r\n            case 'enable':\r\n              b.enable = bool;\r\n              b.disabled = false;\r\n              b.hidden = false;\r\n              break;\r\n            case 'disabled':\r\n              b.disabled = bool;\r\n              b.enable = false;\r\n              b.hidden = false;\r\n              break;\r\n            case 'hidden':\r\n              b.hidden = bool;\r\n              b.disabled = false;\r\n              b.enable = false;\r\n              break;\r\n          }\r\n          this.btnGrid.updateRow(id, b);\r\n        }\r\n      }\r\n    }\r\n    this.btnGrid.cd.detectChanges();\r\n  }\r\n\r\n  btnBatchOperate(operation: string) {\r\n    const checkeds = this.btnGrid.checkedRows;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        this.btnConfigChange(true, operation, c.id);\r\n      }\r\n      this.btnGrid.cd.detectChanges();\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.executeForms.checkedRows'))\r\n    }\r\n  }\r\n\r\n  btnBatchReset() {\r\n    const checkeds = this.btnGrid.checkedRows;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        const button = this.formFormat.formButtons.find(b => b.id === c.id);\r\n        for (const b of this.buttonConfigs) {\r\n          if (b.id === c.id) {\r\n            b.enable = button.buttonState === 'Enable' ? true : false;\r\n            b.disabled = button.buttonState === 'Disabled' ? true : false;\r\n            b.hidden = button.buttonState === 'Hidden' ? true : false;\r\n          }\r\n          this.btnGrid.updateRow(b.id, b);\r\n        }\r\n      }\r\n      this.btnGrid.cd.detectChanges();\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.executeForms.checkedRows'))\r\n    }\r\n  }\r\n\r\n  fieldConfigChange(bool: boolean, field: string, id: string, search=true) {\r\n    if (bool) {\r\n      this.fieldSwitchChange(this.fieldConfigs, field, id);\r\n    }\r\n    if (search) {\r\n      this.fieldTree.searchHandle['research']();\r\n    }\r\n  }\r\n  private fieldSwitchChange(fieldConfigs: Array<any>, field: string, id: string) {\r\n    if (fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.data.id === id) {\r\n          switch (field) {\r\n            case 'editable':\r\n              f.data.editable = true;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'readonly':\r\n              f.data.editable = false;\r\n              f.data.readonly = true;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'hidden':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = true;\r\n              f.data.required = false;\r\n              break;\r\n            case 'required':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = true;\r\n              break;\r\n          }\r\n          return;\r\n        } else {\r\n          if (f.children && f.children.length > 0) {\r\n            this.fieldSwitchChange(f.children, field, id);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  fieldBatchOperate(operation: string) {\r\n    const checkeds = this.fieldTree.checkeds;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        this.fieldConfigChange(true, operation, c.data.id, false);\r\n      }\r\n      this.fieldTree.searchHandle['research']();\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.executeForms.checkeds'))\r\n    }\r\n  }\r\n\r\n  fieldBatchReset() {\r\n    const checkeds = this.fieldTree.checkeds;\r\n    if (checkeds && checkeds.length > 0) {\r\n      for (const c of checkeds) {\r\n        const field = this.formatFieldList.find(f => f.id === c.data.id);\r\n        this.resetFieldConfig(this.fieldConfigs, c.data.id, field);\r\n      }\r\n      this.fieldTree.searchHandle['research']();\r\n    } else {\r\n      this.message.info(this.localePipe.transform('component.executeForms.checkeds'))\r\n    }\r\n  }\r\n  resetFieldConfig(fieldConfigs: Array<any>, id: string, field: FormField) {\r\n    if (fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.leaf === true && f.data.id === id) {\r\n          f.data.editable = field.fieldState === 'Editable' ? true : false;\r\n          f.data.readonly = field.fieldState === 'Readonly' ? true : false;\r\n          f.data.hidden = field.fieldState === 'Hidden' ? true : false;\r\n          f.data.required = field.fieldState === 'Required' ? true : false;\r\n          return;\r\n        } else {\r\n          if (f.children && f.children.length > 0) {\r\n            this.resetFieldConfig(f.children, id, field);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private validator(): Observable<boolean> {\r\n    if (this.extendComponentRef) {\r\n      const result$ = this.extendComponentRef.instance.validator();\r\n      if (result$ instanceof Observable) {\r\n        return result$.pipe(\r\n          switchMap((b: boolean) => {\r\n            if (b && this.innerValidator()) {\r\n              return of(true);\r\n            } else {\r\n              return of(false);\r\n            }\r\n          }));\r\n      } else {\r\n        if (result$) {\r\n          return of(this.innerValidator());\r\n        } else {\r\n          return of(false);\r\n        }\r\n      }\r\n    } else {\r\n      return of(this.innerValidator());\r\n    }\r\n  }\r\n\r\n  private innerValidator(): boolean  {\r\n    return this.operationConfig.validator();\r\n  }\r\n\r\n\r\n  private setBtnAndFieldConfigs() {\r\n    this.config.formButtonConfigs = new Array<FormButtonConfig>();\r\n    for (const btn of this.buttonConfigs) {\r\n      const button = this.formFormat.formButtons.find(b => b.buttonId === btn.buttonId);\r\n      const btnConfig = new FormButtonConfig();\r\n      btnConfig.buttonId = btn.buttonId;\r\n      if (btn.enable) {\r\n        btnConfig.buttonState = 'Enable';\r\n      } else if (btn.disabled) {\r\n        btnConfig.buttonState = 'Disabled';\r\n      } else if (btn.hidden) {\r\n        btnConfig.buttonState = 'Hidden';\r\n      } else {\r\n        continue;\r\n      }\r\n      if (!button.buttonState && btnConfig.buttonState) {\r\n        this.config.formButtonConfigs.push(btnConfig);\r\n      }\r\n      if (button.buttonState && button.buttonState !== btnConfig.buttonState) {\r\n        this.config.formButtonConfigs.push(btnConfig);\r\n      }\r\n    }\r\n    this.config.formFieldConfigs = new Array<FormFieldConfig>();\r\n    this.getFieldConfigs(this.fieldConfigs);\r\n\r\n    this.config.formMethodConfigs = this.operationConfig.operations || new Array();\r\n  }\r\n\r\n  private getFieldConfigs(fieldConfigs: Array<any>) {\r\n    if (fieldConfigs && fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.children && f.children.length > 0) {\r\n          this.getFieldConfigs(f.children);\r\n        }\r\n        if (f.leaf === false) {\r\n          continue;\r\n        }\r\n        const field = this.formatFieldList.find(fd => fd.fieldId === f.data.fieldId);\r\n        const fieldConfig = new FormFieldConfig();\r\n        fieldConfig.fieldId = f.data.fieldId;\r\n        if (f.data.editable) {\r\n          fieldConfig.fieldState = 'Editable';\r\n        } else if (f.data.readonly) {\r\n          fieldConfig.fieldState = 'Readonly';\r\n        } else if (f.data.hidden) {\r\n          fieldConfig.fieldState = 'Hidden';\r\n        } else if (f.data.required) {\r\n          fieldConfig.fieldState = 'Required';\r\n        } else {\r\n          continue;\r\n        }\r\n\r\n        if (!field.fieldState && fieldConfig.fieldState) {\r\n          this.config.formFieldConfigs.push(fieldConfig);\r\n        }\r\n\r\n        if (field.fieldState && field.fieldState !== fieldConfig.fieldState) {\r\n          this.config.formFieldConfigs.push(fieldConfig);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getConfig() {\r\n    if (this.formFormatId) {\r\n      forkJoin(this.getFormFormatType(), this.getFormFormat(), this.getFormFormatConfig()).subscribe((re: any[]) => {\r\n        const formFormatType = re[0] as FormFormatType;\r\n        if (formFormatType) {\r\n          this.formFormatType = formFormatType;\r\n          if (this.formFormatType.extendImpl) {\r\n            this.showExtendTab = true;\r\n            this.createExtendComponent(this.formFormatType.extendImpl);\r\n          } else {\r\n            this.showExtendTab = false;\r\n          }\r\n        }\r\n        const formFormat = re[1] as FormFormat;\r\n        if (formFormat) {\r\n          this.formFormat = this.convertFormFormat(formFormat);\r\n        }\r\n        const config = re[2] as FormFormatConfig;\r\n        if (config) {\r\n          this.config = config;\r\n        }\r\n        if (this.formFormat.formButtons) {\r\n          this.buttonConfigs = this.formFormat.formButtons.map(b => Object.assign({}, b, {\r\n            enable: b.buttonState === 'Enable' ? true : false,\r\n            disabled: b.buttonState === 'Disabled' ? true : false,\r\n            hidden: b.buttonState === 'Hidden' ? true : false\r\n          }));\r\n          let btnConfigs = new Array<FormButtonConfig>();\r\n          if (config && config.formButtonConfigs) {\r\n            btnConfigs = config.formButtonConfigs;\r\n          }\r\n          for (const b of btnConfigs) {\r\n            for (const btn of this.buttonConfigs) {\r\n              if (btn.buttonId === b.buttonId) {\r\n                switch (b.buttonState) {\r\n                  case 'Enable':\r\n                    btn.enable = true;\r\n                    btn.disabled = false;\r\n                    btn.hidden = false;\r\n                    break;\r\n                  case 'Disabled':\r\n                    btn.enable = false;\r\n                    btn.disabled = true;\r\n                    btn.hidden = false;\r\n                    break;\r\n                  case 'Hidden':\r\n                    btn.enable = false;\r\n                    btn.disabled = false;\r\n                    btn.hidden = true;\r\n                    break;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (this.formFormat.formFields) {\r\n          this.fieldConfigs = [...this.formFormat.formFields];\r\n          this.orgFieldConfigs(this.fieldConfigs);\r\n          let configs = new Array<FormFieldConfig>();\r\n          if (config && config.formFieldConfigs) {\r\n            configs = config.formFieldConfigs;\r\n          }\r\n          for (const f of configs) {\r\n            this.setFieldConfig(this.fieldConfigs, f);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  createExtendComponent(extendImpl: string) {\r\n    const url = extendImpl.split('#')[0];\r\n    const selectorCmp = extendImpl.split('#')[1];\r\n    System.import(url)\r\n      .then((moduleFactorys: any) => {\r\n        const moduleFactory: any = Object.values(moduleFactorys)[0];\r\n        const moduleRef = moduleFactory.create(this.injector);\r\n        if (selectorCmp) {\r\n          let facMap: Map<any, any> = moduleRef.componentFactoryResolver['_factories'];\r\n          facMap.forEach((value: any, key: Function, map: Map<any, any>) => {\r\n              const selector = value.selector;\r\n              if (selectorCmp == selector) {\r\n                const cmpFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(key as any);\r\n                this.extendComponentRef = cmpFactory.create(moduleRef.injector);\r\n                this.extendComponentRef.instance.formFormatId = this.formFormatId;\r\n                this.extendComponentRef.instance.formatConfigId = this.formatConfigId;\r\n                this.container.clear();\r\n                this.container.insert(this.extendComponentRef.hostView);\r\n              }\r\n          });\r\n        } else {\r\n          const bootstrapComponent = moduleRef['_bootstrapComponents'][0];\r\n          if (bootstrapComponent)//先找bootstrapComponent数组有无组件\r\n          {\r\n            const cmpFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(bootstrapComponent);\r\n            this.extendComponentRef = cmpFactory.create(moduleRef.injector);\r\n            this.extendComponentRef.instance.formFormatId = this.formFormatId;\r\n            this.extendComponentRef.instance.formatConfigId = this.formatConfigId;\r\n            this.container.clear();\r\n            this.container.insert(this.extendComponentRef.hostView);\r\n          }\r\n        }\r\n    });\r\n  }\r\n\r\n  private orgFieldConfigs(formFields: Array<FormFieldData>) {\r\n    if (formFields.length > 0) {\r\n      for (const d of formFields) {\r\n        d.data = Object.assign({}, d.data, {\r\n          editable: d.data.fieldState === 'Editable' ? true : false,\r\n          readonly: d.data.fieldState === 'Readonly' ? true : false,\r\n          hidden: d.data.fieldState === 'Hidden' ? true : false,\r\n          required: d.data.fieldState === 'Required' ? true : false\r\n        });\r\n        if (d.children && d.children) {\r\n          this.orgFieldConfigs(d.children);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private setFieldConfig(fieldConfigs: Array<any>, config: FormFieldConfig) {\r\n    if (fieldConfigs.length > 0) {\r\n      for (const f of fieldConfigs) {\r\n        if (f.data.fieldId === config.fieldId) {\r\n          switch (config.fieldState) {\r\n            case 'Editable':\r\n              f.data.editable = true;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'Readonly':\r\n              f.data.editable = false;\r\n              f.data.readonly = true;\r\n              f.data.hidden = false;\r\n              f.data.required = false;\r\n              break;\r\n            case 'Hidden':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = true;\r\n              f.data.required = false;\r\n              break;\r\n            case 'Required':\r\n              f.data.editable = false;\r\n              f.data.readonly = false;\r\n              f.data.hidden = false;\r\n              f.data.required = true;\r\n              break;\r\n          }\r\n          return;\r\n        } else {\r\n          if (f.children && f.children.length > 0) {\r\n            this.setFieldConfig(f.children, config);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private saveConfig(config: FormFormatConfig): Observable<any> {\r\n    const url = '/api/runtime/wf/v1.0/formFormatConfig';\r\n    return this.http.post(url, config);\r\n  }\r\n\r\n  private getFormFormat(): Observable<any> {\r\n    if (this.formFormatId) {\r\n      let url = `/api/runtime/wf/v1.0/formFormat/${this.formFormatId}`;\r\n      url = encodeURI(url);\r\n      return this.http.get(url);\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  private getFormFormatType(): Observable<any> {\r\n    if (this.formFormatId) {\r\n      const url = `/api/runtime/wf/v1.0/formFormatType/formFormat?formFormat=${this.formFormatId}`;\r\n      return this.http.get(url);\r\n    }\r\n  }\r\n\r\n  private getFormFormatConfig(): Observable<any> {\r\n    if (this.formatConfigId) {\r\n      let url = `/api/runtime/wf/v1.0/formFormatConfig/${this.formatConfigId}`;\r\n      url = encodeURI(url);\r\n      return this.http.get(url);\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n\r\n  private convertFormFormat(formFormat: FormFormat): FormFormat {\r\n    if (!formFormat.status) {\r\n      formFormat.status = 0;\r\n    }\r\n    this.convertformFields(formFormat.formFields);\r\n    this.getFormatFieldList(formFormat.formFields, this.formatFieldList);\r\n    return formFormat;\r\n  }\r\n\r\n  private convertformFields(formFields: Array<FormFieldData>) {\r\n    if (formFields && formFields.length > 0) {\r\n      for (const d of formFields) {\r\n        if (typeof(d.leaf) !== 'boolean' && (d.leaf == null || d.leaf === undefined)) {\r\n          d.leaf = true;\r\n        }\r\n        if (d.children && d.children) {\r\n          this.orgFieldConfigs(d.children);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getFormatFieldList(formFields: Array<FormFieldData>, array: Array<FormField>) {\r\n    if (formFields && formFields.length > 0) {\r\n      for (const d of formFields) {\r\n        array.push(d.data);\r\n        if (d.children && d.children) {\r\n          this.getFormatFieldList(d.children, array);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private getFormatField(formFields: Array<FormFieldData>, fieldId: string): FormFieldData {\r\n    for (const f of formFields) {\r\n      if (f.data.fieldId === fieldId) {\r\n        return f;\r\n      }\r\n      if (f.children && f.children.length > 0) {\r\n        return this.getFormatField(f.children, fieldId);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, ViewContainerRef, Injector, ComponentFactoryResolver, ComponentRef, TemplateRef, Input, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { IFormFormatConfigComponent } from '@gsp-wf/biz-process-api';\r\nimport { FormFormatConfigComponent } from '../form-format-config/form-format-config.component';\r\nimport { HttpService } from '@ecp-caf/caf-common';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { FormFormatType } from '../entities/form-format-type';\r\n\r\ndeclare var System: any;\r\n\r\n@Component({\r\n  selector: 'lib-form-config-container',\r\n  templateUrl: './form-config-container.component.html',\r\n  styleUrls: ['./form-config-container.component.css']\r\n})\r\nexport class FormConfigContainerComponent implements OnInit, OnChanges {\r\n\r\n  private componentRef: ComponentRef<any>;\r\n  @ViewChild('container', { read: ViewContainerRef }) container: ViewContainerRef;\r\n  @ViewChild('iconSelectFooter') modalFooter: TemplateRef<any>;\r\n\r\n  @Input()\r\n  formFormatId: string;\r\n  @Input()\r\n  formatConfigId: string;\r\n\r\n  @Input() showMethodTab = true;\r\n  constructor(\r\n    private injector: Injector,\r\n    private cfr: ComponentFactoryResolver,\r\n    private http: HttpService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.showComponentRef();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['formFormatId'] && changes['formFormatId'].currentValue) {\r\n      this.showComponentRef();\r\n    } else { // 功能菜单时\r\n      this.componentRef = this.createWFComponentRef();\r\n      this.componentRef.instance.formFormatId = null;\r\n      this.componentRef.instance.formatConfigId = null;\r\n      this.componentRef.instance.showMethodTab = this.showMethodTab;\r\n      this.container.clear();\r\n      this.container.insert(this.componentRef.hostView);\r\n    }\r\n  }\r\n\r\n  submit(): Observable<any> {\r\n    return this.componentRef.instance.submit();\r\n  }\r\n\r\n  private showComponentRef() {\r\n    this.componentRef = this.createWFComponentRef();\r\n    this.componentRef.instance.formFormatId = this.formFormatId;\r\n    this.componentRef.instance.formatConfigId = this.formatConfigId;\r\n    this.componentRef.instance.showMethodTab = this.showMethodTab;\r\n    this.container.clear();\r\n    this.container.insert(this.componentRef.hostView);\r\n    // if (this.formFormatId) {\r\n      // this.getFormFormatType().subscribe((re: FormFormatType) => {\r\n        // if (re.code === 'wf') {\r\n\r\n        // } else {\r\n        //   System.import(re.customImpl)\r\n        //     .then((moduleFactorys: any) => {\r\n        //       const moduleFactory: any = Object.values(moduleFactorys)[0];\r\n        //       const moduleRef = moduleFactory.create(this.injector);\r\n        //       this.componentRef = moduleRef.instance.createCustomComponentRef(this.injector);\r\n        //       this.componentRef.instance.formFormatId = this.formFormatId;\r\n        //       this.componentRef.instance.formatConfigId = this.formatConfigId;\r\n        //       this.componentRef.instance.showMethodTab = this.showMethodTab;\r\n        //       this.container.clear();\r\n        //       this.container.insert(this.componentRef.hostView);\r\n        //     });\r\n        // }\r\n      // });\r\n    // }\r\n  }\r\n\r\n  private createWFComponentRef(): ComponentRef<IFormFormatConfigComponent> {\r\n    const cmpF = this.cfr.resolveComponentFactory(FormFormatConfigComponent);\r\n    const cmpR = cmpF.create(this.injector);\r\n    return cmpR;\r\n  }\r\n\r\n  private getFormFormatType(): Observable<any> {\r\n    if (this.formFormatId) {\r\n      const url = `/api/runtime/wf/v1.0/formFormatType/formFormat?formFormat=${this.formFormatId}`;\r\n      return this.http.get(url);\r\n    }\r\n  }\r\n\r\n}\r\n","export enum VOTemplateType {\r\n    /**来自于BE的VO */\r\n    FromBE,\r\n    /**来自于VO的VO，即VO代理 */\r\n    FromVO,\r\n    /**没有来源的VO，即虚拟VO */\r\n    FromNone,\r\n}","import { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPViewModel } from '@gsp-bef/gsp-vo-metadata';\r\nimport { CommonModelUtil } from '@gsp-bef/gsp-cm-metadata';\r\nimport { VOTemplateType } from '../entity/VOTemplateType';\r\n\r\nexport class CommonModelTypeHelper {\r\n    public static getCommonModelType(cm: GSPBusinessEntity | GSPViewModel): string {\r\n        let type = CommonModelUtil.GetGeneratedConfigID(cm as any);\r\n        type = \"com.\" + type;\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * 判断VO来源于BE还是VO或者完全虚拟\r\n     * @param gspViewModel\r\n     */\r\n    public static judgeVoTemplateType(gspViewModel: GSPViewModel): VOTemplateType {\r\n        if (gspViewModel.IsVirtual === true) {\r\n            if (gspViewModel.TemplateVoInfo && gspViewModel.TemplateVoInfo.TemplateVoId != null) {\r\n                return VOTemplateType.FromVO;\r\n            } else {\r\n                return VOTemplateType.FromNone\r\n            }\r\n        } else {\r\n            return VOTemplateType.FromBE;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, Input, Injector, ComponentFactoryResolver, Inject, LOCALE_ID } from '@angular/core';\r\nimport { ComboListComponent } from '@farris/ui-combo-list';\r\nimport { ProcessListHelpService } from '../../services/process-list-help.service';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { GSPMetadataRTService, SelectMetadataRTComponent, Metadata4RefDto } from '@gsp-lcm/metadatart-selector';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { GSPViewModel } from '@gsp-bef/gsp-vo-metadata';\r\nimport { IRtProcQueryParam } from '../../entity/IProcQueryParam';\r\nimport { TextValue } from '@edp-bif/common-api';\r\nimport { BifMetadataType } from '../../entity/BifMetadataType';\r\nimport { CommonModelTypeHelper } from '../../utils/common-model-type-helper';\r\nimport { VOTemplateType } from '../../entity/VOTemplateType';\r\nimport { AifLocalePipe } from '../../../aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\n\r\n@Component({\r\n  selector: 'app-proc-help-query-solution',\r\n  templateUrl: './proc-help-query-solution.component.html',\r\n  styleUrls: ['./proc-help-query-solution.component.css'],\r\n})\r\nexport class ProcHelpQuerySolutionComponent implements OnInit {\r\n  readonly groupIcon = '<i class=\"f-icon f-icon-lookup\"></i>';\r\n\r\n  @Input(\"queryParam\")\r\n  queryParam: IRtProcQueryParam;\r\n  @Output(\"queryParamChange\")\r\n  queryParamChange = new EventEmitter<IRtProcQueryParam>();\r\n\r\n  @Output(\"onSearch\")\r\n  onSearchEmitter = new EventEmitter();\r\n\r\n  // //流程类型配置\r\n  // @ViewChild(\"comboProcessType\")\r\n  // comboProcessType: ComboListComponent;\r\n  // comboProcessTypeIdField = \"value\";\r\n  // comboProcessTypeValueField = \"value\";\r\n  // comboProcessTypeTextField = \"text\";\r\n  // comboProcessTypeData = [\r\n  //   { value: \"\", text: this.localePipe.transform(\"all\") },\r\n  //   { value: BifMetadataType.BifCreationProcess, text: this.localePipe.transform(\"creation\") },\r\n  //   { value: BifMetadataType.BifWritebackProcess, text: this.localePipe.transform(\"writeback\") },\r\n  // ];\r\n\r\n  // //启用状态配置\r\n  // @ViewChild(\"comboEnabledState\")\r\n  // comboEnabledState: ComboListComponent;\r\n  // comboEnabledStateIdField = \"value\";\r\n  // comboEnabledStateValueField = \"value\";\r\n  // comboEnabledStateTextField = \"text\";\r\n  // comboEnabledStateData = [\r\n  //   { value: \"\", text: this.localePipe.transform(\"all\") },\r\n  //   { value: \"true\", text: this.localePipe.transform(\"enabled\") },\r\n  //   { value: \"false\", text: this.localePipe.transform(\"disabled\") },\r\n  // ];\r\n\r\n  //系统预置配置\r\n  @ViewChild(\"comboSysInit\")\r\n  comboSysInit: ComboListComponent;\r\n  comboSysInitIdField = \"value\";\r\n  comboSysInitValueField = \"value\";\r\n  comboSysInitTextField = \"text\";\r\n  comboSysInitData = [\r\n    { value: \"\", text: this.localePipe.transform(\"all\") },\r\n    { value: \"true\", text: this.localePipe.transform(\"yes\") },\r\n    { value: \"false\", text: this.localePipe.transform(\"no\") },\r\n  ];\r\n\r\n  constructor(\r\n    private procHelpService: ProcessListHelpService,\r\n    private messager: MessagerService,\r\n    private notify: NotifyService,\r\n    private metadataService: GSPMetadataRTService,\r\n    private modalService: BsModalService,\r\n    private injector: Injector,\r\n    private resolver: ComponentFactoryResolver,\r\n    private localePipe: AifLocalePipe,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  processNameChange(name: string) {\r\n    this.queryParam.filterArgs.name = new TextValue();\r\n    this.queryParam.filterArgs.name.hasValue = true;\r\n    this.queryParam.filterArgs.name.value = name;\r\n    this.queryParam.filterArgsExt.name = name;\r\n  }\r\n\r\n  processTypeChange({ selections }) {\r\n    const item = selections[0];\r\n    this.queryParam.filterArgs.billProcessType = new TextValue();\r\n    if (item != null) {\r\n      if (item.value != \"\") {\r\n        this.queryParam.filterArgs.billProcessType.hasValue = true;\r\n      }\r\n      this.queryParam.filterArgs.billProcessType.value = item.value;\r\n    }\r\n  }\r\n\r\n  enabledStateChange({ selections }) {\r\n    const item = selections[0];\r\n    this.queryParam.filterArgs.isEnabled = new TextValue();\r\n    if (item != null) {\r\n      if (item.value != \"\") {\r\n        this.queryParam.filterArgs.isEnabled.hasValue = true;\r\n      }\r\n      this.queryParam.filterArgs.isEnabled.value = String(item.value);\r\n    }\r\n  }\r\n\r\n  sysInitChange({ selections }) {\r\n    const item = selections[0];\r\n    this.queryParam.filterArgs.sysInit = new TextValue();\r\n    if (item != null) {\r\n      if (item.value != \"\") {\r\n        this.queryParam.filterArgs.sysInit.hasValue = true;\r\n      }\r\n      this.queryParam.filterArgs.sysInit.value = String(item.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 打开上游单据VO选择器\r\n   */\r\n  selectUpBill() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = \"GSPViewModel\";\r\n\r\n    compRef.instance.selectedMetadata.subscribe(\r\n      (metadata4RefDto: Metadata4RefDto) => {\r\n        this.clearUpBill();\r\n        let upVODto = metadata4RefDto.metadata;\r\n        let upVO: GSPViewModel = JSON.parse(upVODto.content);\r\n\r\n        switch (CommonModelTypeHelper.judgeVoTemplateType(upVO)) {\r\n          //非代理VO\r\n          case VOTemplateType.FromBE:\r\n            {\r\n              this.queryParam.filterArgs.upBillVoId = new TextValue();\r\n              this.queryParam.filterArgs.upBillVoId.hasValue = true;\r\n              this.queryParam.filterArgs.upBillVoId.value = upVO.ID;\r\n              this.queryParam.filterArgsExt.upBillVoName = upVO.MainObject.Name;\r\n            }\r\n            break;\r\n          default:\r\n            this.notify.error(this.localePipe.transform(\"pleaseSelectNonVirtualVO\"));\r\n            break;\r\n        };\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n        //todo 确定异常结构, 目前采用兼容取值方式\r\n        this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n        this.clearUpBill();\r\n      }\r\n    );\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"billSelector\"),\r\n      width: 930,\r\n      height: 573,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n\r\n  /**\r\n   * 打开下游单据VO选择器\r\n   */\r\n  selectDownBill() {\r\n    const compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);\r\n    const compRef = compFactory.create(this.injector);\r\n    compRef.instance.typeList = \"GSPViewModel\";\r\n\r\n    compRef.instance.selectedMetadata.subscribe(\r\n      (metadata4RefDto: Metadata4RefDto) => {\r\n        this.clearDownBill();\r\n        let downVODto = metadata4RefDto.metadata;\r\n        let downVO: GSPViewModel = JSON.parse(downVODto.content);\r\n\r\n        switch (CommonModelTypeHelper.judgeVoTemplateType(downVO)) {\r\n          //非代理VO\r\n          case VOTemplateType.FromBE:\r\n            {\r\n              this.queryParam.filterArgs.downBillVoId = new TextValue();\r\n              this.queryParam.filterArgs.downBillVoId.hasValue = true;\r\n              this.queryParam.filterArgs.downBillVoId.value = downVO.ID;\r\n              this.queryParam.filterArgsExt.downBillVoName = downVO.MainObject.Name;\r\n            }\r\n            break;\r\n          default:\r\n            this.notify.error(this.localePipe.transform(\"pleaseSelectNonVirtualVO\"));\r\n            break;\r\n        };\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n        //todo 确定异常结构, 目前采用兼容取值方式\r\n        this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));\r\n        this.clearUpBill();\r\n      }\r\n    );\r\n\r\n    const modalConfig = {\r\n      title: this.localePipe.transform(\"billSelector\"),\r\n      width: 930,\r\n      height: 573,\r\n      showButtons: false\r\n    };\r\n    const dialog = this.modalService.show(compRef, modalConfig);\r\n    compRef.instance.closeModalEmitter.subscribe($event => dialog.close());\r\n  }\r\n\r\n  /**\r\n   * 清除流程名称\r\n   */\r\n  clearProcessName() {\r\n    delete this.queryParam.filterArgs.name;\r\n    this.queryParam.filterArgsExt.name = null;\r\n  }\r\n\r\n  /**\r\n   * 清除选中的流程类型\r\n   */\r\n  clearProcessType() {\r\n    delete this.queryParam.filterArgs.billProcessType;\r\n  }\r\n\r\n  /**\r\n   * 清除选中的上游单据信息\r\n   */\r\n  clearUpBill() {\r\n    delete this.queryParam.filterArgs.upBillVoId;\r\n    this.queryParam.filterArgsExt.upBillVoName = null;\r\n  }\r\n\r\n  /**\r\n   * 清除选中的下游单据信息\r\n   */\r\n  clearDownBill() {\r\n    delete this.queryParam.filterArgs.downBillVoId;\r\n    this.queryParam.filterArgsExt.downBillVoName = null;\r\n  }\r\n\r\n  /**\r\n   * 清除选中的启用状态\r\n   */\r\n  clearIsEnabled() {\r\n    delete this.queryParam.filterArgs.isEnabled;\r\n  }\r\n\r\n  /**\r\n   * 清除选中的发布状态\r\n   */\r\n  clearIsPublished() {\r\n    // delete this.queryParam.filterArgs.isPublished;\r\n  }\r\n\r\n  /**\r\n   * 清除选中的发布状态\r\n   */\r\n  clearSysInit() {\r\n    delete this.queryParam.filterArgs.sysInit;\r\n  }\r\n\r\n  /**\r\n   * 点击筛选按钮\r\n   */\r\n  clickBtnFilter() {\r\n    this.queryParam.filterArgs.pageIndex = 0;\r\n    this.onSearchEmitter.emit(this.queryParam);\r\n  }\r\n\r\n  /**\r\n   * 点击清空按钮\r\n   */\r\n  clickBtnClear() {\r\n    //重置下拉框\r\n    // this.comboProcessType.onClear();\r\n    // this.comboProcessTypeData = this.comboProcessTypeData.map(item => ({ ...item }));\r\n\r\n    // this.comboEnabledState.onClear();\r\n    // this.comboEnabledStateData = this.comboEnabledStateData.map(item => ({ ...item }));\r\n\r\n    // this.comboSysInit.onClear();\r\n    // this.comboSysInitData = this.comboSysInitData.map(item => ({ ...item }));\r\n\r\n    // this.comboPublishedState.onClear();\r\n    // this.comboPublishedStateData = this.comboPublishedStateData.map(item => ({ ...item }));\r\n\r\n    //重置查询参数\r\n    // const queryParam = {\r\n    //   filterArgs: new ProcessFilterConditionArgs(),\r\n    //   filterArgsExt: {}\r\n    // };\r\n    // queryParam.filterArgs.LoadFromJsonObject(this.queryParam.filterArgs.ConvertToJsonObject());\r\n\r\n    const queryParam = this.queryParam;\r\n    queryParam.filterArgsExt = {};\r\n\r\n    queryParam.filterArgs.upBillVoId = null;\r\n    queryParam.filterArgs.downBillVoId = null;\r\n    queryParam.filterArgs.sysInit = null;\r\n    queryParam.filterArgs.name = null;\r\n\r\n    // queryParam.filterArgs.pageSize = this.queryParam.filterArgs.pageSize;\r\n    // queryParam.filterArgs.pageIndex = this.queryParam.filterArgs.pageIndex;\r\n    // queryParam.filterArgs.orderByCode = this.queryParam.filterArgs.orderByCode;\r\n    // queryParam.filterArgs.orderByName = this.queryParam.filterArgs.orderByName;\r\n    // queryParam.filterArgs.OrderByLastModifiedTime = this.queryParam.filterArgs.OrderByLastModifiedTime;\r\n\r\n    this.queryParam = queryParam;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { AifLocalePipe, BIF_LANG_RESOURCES } from \"./pipe/aif-ui-common-locale.pipe\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AifLocalePipe\r\n    ],\r\n    exports: [\r\n        AifLocalePipe\r\n    ]\r\n})\r\nexport class AifUiCommonModule {\r\n    static forRoot(resources?: any): ModuleWithProviders {\r\n        return {\r\n            ngModule: AifUiCommonModule,\r\n            providers: [\r\n                { provide: BIF_LANG_RESOURCES, useValue: resources || {} },\r\n            ],\r\n        };\r\n    }\r\n}","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CacheService, SessionService, HttpService } from '@ecp-caf/caf-common';\r\nimport { FrmEventBus, FuncsService, AppService, FrameworkService } from '@gsp-sys/rtf-common';\r\nimport { BusinessObjectRtService } from '@gsp-lcm/bo-rt-service';\r\nimport { MetadataRTSelectModule, GSPMetadataRTServiceModule, GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { FResponseToolbarModule } from '@farris/ui-response-toolbar';\r\nimport { ListFilterModule } from '@farris/ui-list-filter';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisTabsModule } from '@farris/ui-tabs';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { LoadingModule, LoadingService } from '@farris/ui-loading';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ModalModule } from '@farris/ui-modal';\r\n\r\nimport { ProcessListHelpComponent } from './components/process-list-help/process-list-help.component';\r\nimport { ProcHelpQuerySolutionComponent } from './components/proc-help-query-solution/proc-help-query-solution.component';\r\nimport { ProcessListHelpService } from './services/process-list-help.service';\r\nimport { AifUiCommonModule } from '../aif-ui-common/aif-ui-common.module';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    MetadataRTSelectModule,\r\n    GSPMetadataRTServiceModule.forRoot(\"\"),\r\n    FResponseToolbarModule,\r\n    ListFilterModule,\r\n    AngularDraggableModule,\r\n    FarrisCommonModule.forRoot(),\r\n    FarrisFormsModule,\r\n    FarrisSectionModule,\r\n    DatagridEditorsModule,\r\n    DatagridModule.forRoot([\r\n      ...EditorProviders\r\n    ]),\r\n    ComboListModule,\r\n    InputGroupModule,\r\n    FarrisDialogModule,\r\n    SwitchModule,\r\n    FarrisTabsModule,\r\n    LookupModule,\r\n    LoadingModule.forRoot({\r\n      message: 'Loading...'\r\n    }),\r\n    NotifyModule.forRoot(),\r\n    MessagerModule.forRoot({\r\n      width: 550,\r\n      height: 450\r\n    }),\r\n    ModalModule.forRoot(),\r\n    AifUiCommonModule,\r\n  ],\r\n  providers: [\r\n    CacheService,\r\n    SessionService,\r\n    HttpService,\r\n    FrmEventBus,\r\n    FuncsService,\r\n    LoadingService,\r\n    AppService,\r\n    FrameworkService,\r\n    GSPMetadataRTService,\r\n    BusinessObjectRtService,\r\n    ProcessListHelpService,\r\n  ],\r\n  declarations: [\r\n    ProcessListHelpComponent,\r\n    ProcHelpQuerySolutionComponent,\r\n  ],\r\n  entryComponents: [\r\n    ProcessListHelpComponent,\r\n    ProcHelpQuerySolutionComponent,\r\n  ]\r\n})\r\nexport class ProcessListHelpModule {\r\n\r\n}\r\n","import {Pipe, PipeTransform} from \"@angular/core\";\r\nimport {ActivityExecutorParticipant} from \"./activity-executor.participant\";\r\n\r\n@Pipe({ name: 'activityExecutor' })\r\nexport class ActivityExecutorPipe implements PipeTransform {\r\n  constructor() { }\r\n\r\n  transform(activityExecutors: ActivityExecutorParticipant[], defaultVal = ''): string {\r\n    let r = '';\r\n    activityExecutors.forEach(u => {\r\n      r += u.activityDefName + '，';\r\n    });\r\n    if (r) {\r\n      r = r.substring(0, r.length - 1);\r\n    }\r\n    return r ? r : defaultVal;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { VariablePerformerEntity } from '../../entities/variable-performer.entity';\r\n\r\n@Pipe({ name: 'variableName' })\r\nexport class VariableNamePipe implements PipeTransform {\r\n    constructor() { }\r\n    transform(users: VariablePerformerEntity[], defaultVal = ''): string {\r\n        let r = '';\r\n        users.forEach(u => {\r\n            r += u.name + '，';\r\n        });\r\n        if (r) {\r\n            r = r.substring(0, r.length - 1);\r\n        }\r\n        return r ? r : defaultVal;\r\n    }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { LOCALE_ID, NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CacheService, HttpService, SessionService } from \"@ecp-caf/caf-common\";\r\nimport { ComboListModule } from \"@farris/ui-combo-list\";\r\nimport { FarrisCommonModule } from \"@farris/ui-common\";\r\nimport { DatagridModule } from \"@farris/ui-datagrid\";\r\nimport { DatagridEditorsModule, EditorProviders } from \"@farris/ui-datagrid-editors\";\r\nimport { FarrisDialogModule } from \"@farris/ui-dialog\";\r\nimport { AngularDraggableModule } from \"@farris/ui-draggable\";\r\nimport { FarrisFormsModule } from \"@farris/ui-forms\";\r\nimport { InputGroupModule } from \"@farris/ui-input-group\";\r\nimport { LanguageTextboxModule } from \"@farris/ui-language-textbox\";\r\nimport { ListFilterModule } from \"@farris/ui-list-filter\";\r\nimport { LoadingModule } from \"@farris/ui-loading\";\r\nimport { LookupModule } from \"@farris/ui-lookup\";\r\nimport { MessagerModule } from \"@farris/ui-messager\";\r\nimport { ModalModule } from \"@farris/ui-modal\";\r\nimport { NotifyModule } from \"@farris/ui-notify\";\r\nimport { PaginationModule } from \"@farris/ui-pagination\";\r\nimport { FResponseToolbarModule } from \"@farris/ui-response-toolbar\";\r\nimport { FarrisSectionModule } from \"@farris/ui-section\";\r\nimport { SplitterModule } from \"@farris/ui-splitter\";\r\nimport { SwitchModule } from \"@farris/ui-switch\";\r\nimport { FarrisTabsModule } from \"@farris/ui-tabs\";\r\nimport { TreeTableModule } from \"@farris/ui-treetable\";\r\nimport { BusinessObjectRtService } from \"@gsp-lcm/bo-rt-service\";\r\nimport { GSPMetadataRTService, GSPMetadataRTServiceModule, MetadataRTSelectModule } from \"@gsp-lcm/metadatart-selector\";\r\nimport { AppService, FrameworkService, FrmEventBus, FuncsService, LoadingService } from \"@gsp-sys/rtf-common\";\r\nimport { AifUiCommonModule } from \"../aif-ui-common/aif-ui-common.module\";\r\nimport { BillTypeHelpService } from \"./bill-type-help.service\";\r\nimport { BillTypeHelpComponent } from \"./bill-type-help/bill-type-help.component\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MetadataRTSelectModule,\r\n        GSPMetadataRTServiceModule.forRoot(\"\"),\r\n        FResponseToolbarModule,\r\n        ListFilterModule,\r\n        AngularDraggableModule,\r\n        FarrisCommonModule.forRoot(),\r\n        FarrisFormsModule,\r\n        FarrisSectionModule,\r\n        DatagridEditorsModule,\r\n        DatagridModule.forRoot([\r\n            ...EditorProviders\r\n        ]),\r\n        ComboListModule,\r\n        InputGroupModule,\r\n        FarrisDialogModule,\r\n        SwitchModule,\r\n        FarrisTabsModule,\r\n        LookupModule,\r\n        TreeTableModule,\r\n        LoadingModule.forRoot({\r\n            message: 'Loading...'\r\n        }),\r\n        NotifyModule.forRoot(),\r\n        MessagerModule.forRoot({\r\n            width: 550,\r\n            height: 450\r\n        }),\r\n        ModalModule.forRoot(),\r\n        PaginationModule,\r\n        SplitterModule,\r\n        LanguageTextboxModule,\r\n        AifUiCommonModule,\r\n    ],\r\n    providers: [\r\n        CacheService,\r\n        SessionService,\r\n        HttpService,\r\n        FrmEventBus,\r\n        FuncsService,\r\n        LoadingService,\r\n        AppService,\r\n        FrameworkService,\r\n        { provide: LOCALE_ID, useValue: localStorage.getItem('languageCode') || 'zh-CHS' },\r\n        GSPMetadataRTService,\r\n        BusinessObjectRtService,\r\n        BillTypeHelpService,\r\n    ],\r\n    declarations: [\r\n        BillTypeHelpComponent,\r\n    ],\r\n    entryComponents: [\r\n        BillTypeHelpComponent,\r\n    ],\r\n})\r\nexport class BillTypeHelpModule {\r\n\r\n}","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Resolve } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class TranslateResolveService implements Resolve<any> {\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    @Inject(LOCALE_ID) private curLanguage: string\r\n  ) { }\r\n  resolve(route: import ('@angular/router').ActivatedRouteSnapshot, state: import ('@angular/router').RouterStateSnapshot) {\r\n    this.translate.defaultLang = this.curLanguage;\r\n    return this.translate.getTranslation(this.curLanguage);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TranslateResolveService } from './service/translate-resolve.service';\r\nimport { WfProcessEditorComponent } from './wf-process-editor.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'WfProcessEditor', component: WfProcessEditorComponent,\r\n    children: [],\r\n    resolve: {\r\n      'translate': TranslateResolveService\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class WfProcessEditorRoutingModule { }\r\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\r\nimport { WfLocalePipe, WF_LANG_RESOURCES } from \"./pipe/wf-process-editor-locale.pipe\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WfLocalePipe\r\n  ],\r\n  exports: [\r\n    WfLocalePipe\r\n  ]\r\n})\r\nexport class WfLocaleModule {\r\n  static forRoot(resources?: any): ModuleWithProviders {\r\n    return {\r\n      ngModule: WfLocaleModule,\r\n      providers: [\r\n        { provide: WF_LANG_RESOURCES, useValue: resources || {} },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { WfProcessEditorComponent } from './wf-process-editor.component';\r\nimport { PerformerConfigService } from './views/performer/performer-config.service';\r\nimport { EntryFormEditorComponent } from './views/entryForm/entry-form-editor.component';\r\nimport { ExpressionEditorComponent } from './views/expressionEditor/expression-editor.component';\r\nimport { AssignPerformerConfigComponent } from './views/assign-performer-config/assign-performer-config.component';\r\nimport { SignRuleComponent } from './views/sign-rule/sign-rule.component';\r\nimport { ApprovelItemsComponent } from './views/approvel-items/approvel-items.component';\r\nimport { ExecuteFormsComponent } from './views/execute-forms/execute-forms.component';\r\nimport { JumpScopeComponent } from './views/jump-scope/jump-scope.component';\r\nimport { BackwardRuleComponent } from './views/backward-rule/backward-rule.component';\r\nimport { ActivityComponentComponent } from './views/activity-component/activity-component.component';\r\nimport { PerformerComponent } from './views/performer/performer.component';\r\nimport { PerformerEditComponent } from './views/performer/views/performer-edit/performer-edit.component';\r\nimport { UserPerformerComponent } from './views/performer/views/user-performer/user-performer.component';\r\nimport { ComponentPerformerComponent } from './views/performer/views/component-performer/component-performer.component';\r\nimport { PositionPerformerComponent } from './views/performer/views/position-performer/position-performer.component';\r\nimport { PerformerOptionsComponent } from './views/performer/views/performer-options/performer-options.component';\r\nimport { ReportingLineComponent } from './views/performer/views/reporting-line/reporting-line.component';\r\nimport { TitleExpressionComponent } from './views/title-expression/title-expression.component';\r\nimport { SaveAsEditComponent } from './views/save-as-edit/save-as-edit.component';\r\nimport { OrganizationPotentialOwnerComponent } from './views/organization-potential-owner/organization-potential-owner.component';\r\nimport { CustomizeActionComponent } from './views/customize-action/customize-action.component';\r\nimport { CustomizeActionListComponent } from './views/customize-action/views/customize-action-list/customize-action-list.component';\r\nimport { JumpScopePipe } from './views/jump-scope/jump-scope.pipe';\r\nimport { UsersIdPipe, UsersNamePipe } from './views/performer/views/user-performer/users-name.pipe';\r\nimport { PROCESS_DESIGNER_APP_PROVIDERS, PROCESS_DESIGNER_DOMAIN_PROVIDERS, PROCESS_DESIGNER_PART_PROVIDERS } from './index';\r\nimport { SessionService, HttpService } from '@ecp-caf/caf-common';\r\nimport { ExpressionService, ExpressionModule } from '@gsp-svc/expression';\r\nimport { CommonComponentUiRTService, CommonComponentUiModule } from '@gsp-cmp/ccmp-ui';\r\nimport { SelectMetadataRTComponent, GSPMetadataRTServiceModule, MetadataRTSelectModule } from '@gsp-lcm/metadatart-selector';\r\nimport { SysManagerUIModule } from '@gsp-sys/sysmgr-ui';\r\nimport { RtfAppHelpModule } from '@gsp-sys/rtf-ui';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { PropertyPanelModule } from '@farris/ide-property-panel';\r\nimport { DataTableModule } from '@farris/ui-datatable';\r\nimport { LayoutModule } from '@farris/ui-layout';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { SplitterModule } from '@farris/ui-splitter';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { FlexLayoutModule } from '@farris/ui-flex-layout';\r\nimport { FarrisPanelModule } from '@farris/ui-panel';\r\nimport { FarrisResponsiveModule } from '@farris/ui-responsive';\r\nimport { FarrisTabsModule } from '@farris/ui-tabs';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { PopoverModule } from '@farris/ui-popover';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { DatagridFilterRowModule } from '@farris/ui-datagrid-filter';\r\nimport { FarrisDropdownModule, FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';\r\nimport { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';\r\nimport { DatagridModule } from '@farris/ui-datagrid';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { WizardModule } from '@farris/ui-wizard';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { ProcessDeUtil } from './domain/process-de-util';\r\nimport { CallActivitySubProcessComponent } from './views/call-activity-sub-process/call-activity-sub-process.component';\r\nimport { WfBizprocessLookupModule } from '@gsp-wf/wf-bizprocess-lookup';\r\nimport { TimeLimitControlComponent } from './views/time-limit-control/time-limit-control.component';\r\nimport { SendMessageOperationComponent } from './views/time-limit-control/send-message-operation/send-message-operation.component';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { EventDefinitionComponent } from './views/event-definition/event-definition.component';\r\nimport { AnonymousSetComponent } from './views/anonymous-set/anonymous-set.component';\r\nimport { ProcessVariablesComponent } from './views/process-variables/process-variables.component';\r\nimport { VariableSettingComponent } from './views/variable-setting/variable-setting.component';\r\nimport { ConstantEditComponent } from './views/variable-setting/views/constant-edit/constant-edit.component';\r\nimport { ComponentEditComponent } from './views/variable-setting/views/component-edit/component-edit.component';\r\nimport { MessageNoticeComponent } from './views/message-notice/message-notice.component';\r\nimport { MessageNoticeEditComponent } from './views/message-notice/message-notice-edit/message-notice-edit.component';\r\nimport { AddExecuteFormComponent } from './views/execute-forms/add-execute-form/add-execute-form.component';\r\nimport { FormFormatConfigComponent } from './views/execute-forms/form-format-config/form-format-config.component';\r\nimport { FormConfigContainerComponent } from './views/execute-forms/form-config-container/form-config-container.component';\r\nimport { FarrisButtonModule } from '@farris/ui-button';\r\nimport { ParameterSettingComponent } from './views/execute-forms/parameter-setting/parameter-setting.component';\r\nimport { FormOperationConfigComponent } from './views/execute-forms/form-operation-config/form-operation-config.component';\r\nimport { NoteComponent } from './views/note/note.component';\r\nimport { ApprovalPivotComponent } from './views/approval-pivot/approval-pivot.component';\r\nimport { WfReportDefHelpComponent } from './views/performer/views/reporting-line/service/wf-report-def-help.component';\r\nimport { WfReportDefHelpService } from './views/performer/views/reporting-line/service/wf-report-def-help.service';\r\nimport { UrgeHandleRuleComponent } from './views/urge-handle-rule/urge-handle-rule.component';\r\nimport { MatrixPerformerComponent } from './views/performer/views/matrix-performer/matrix-performer.component';\r\nimport { EnumListComponent } from './views/performer/views/matrix-performer/enum-list/enum-list.component';\r\nimport { AutoHandleOperationComponent } from './views/time-limit-control/auto-handle-operation/auto-handle-operation.component';\r\nimport { ProcessListHelpModule } from './views/aif-process-list-help/process-list-help.module';\r\nimport { ProcessListHelpComponent } from './views/aif-process-list-help/components/process-list-help/process-list-help.component';\r\nimport { ExtendPropertyComponent } from './views/extend-property/extend-property.component';\r\nimport { CallActivitySubProcess2Component } from './views/call-activity-sub-process2/call-activity-sub-process2.component';\r\nimport { ComboLookupModule } from '@farris/ui-combo-lookup';\r\nimport { ActivityExecutorPipe } from './views/performer/views/activity-executor-performer/entities/activity-executor.pipe';\r\nimport { ActivityExecutorPerformerComponent } from './views/performer/views/activity-executor-performer/activity-executor-performer.component';\r\nimport { SysmgrLookupModule } from '@gsp-sys/sysmgr-lookup';\r\nimport { ImageSetComponent } from './views/image-set/image-set.component';\r\nimport { MessageNoticeCopyComponent } from './views/message-notice/message-notice-copy/message-notice-copy.component';\r\nimport { EventBusService } from './views/shared/event-bus.service';\r\nimport { CheckConditionComponent } from './views/check-condition/check-condition.component';\r\nimport { LanguageTextboxModule } from '@farris/ui-language-textbox';\r\nimport { AssignStrategyComponent } from './views/assign-strategy/assign-strategy.component';\r\nimport { VerifyDetailModule } from '@farris/ui-verify-detail';\r\nimport { ActivityListComponent } from './views/activity-list/activity-list.component';\r\nimport { EditComponentParameterComponent } from './views/edit-component-parameter/edit-component-parameter.component';\r\nimport { VariablePerformerComponent } from './views/performer/views/variable-performer/variable-performer.component';\r\nimport { ReleaseComponent } from './views/release-component/release-component.component';\r\nimport { FarrisHtmlEditorModule } from '@farris/ui-html-editor';\r\nimport { WfTaskHandlerModule } from '@gsp-wf/wf-task-handler';\r\nimport { ParticipantComponent } from './views/participant/participant.component';\r\nimport { MatrixDefHelpService } from './views/performer/views/matrix-performer/service/matrix-performer.component.service';\r\nimport { VariableGridComponent } from './views/execute-forms/variable-grid/variable-grid.component';\r\nimport { VariableNamePipe } from './views/performer/views/variable-performer/variable-name.pipe';\r\nimport { AssignScopeComponent } from './views/assign-scope/assign-scope.component';\r\nimport { SmsMessageTemplateComponent } from './views/sms-message-template/sms-message-template.component';\r\nimport { VoConfigComponent } from './views/vo-config/vo-config.component';\r\nimport { WfOptionsComponent } from './views/wf-options/wf-options.component';\r\nimport { BillTypeHelpModule } from './views/bill-type-help/bill-type-help.module';\r\nimport { StartConditionComponent } from './views/start-condition/start-condition.component';\r\nimport { FResponseToolbarModule } from '@farris/ui-response-toolbar';\r\nimport { AifUiCommonModule } from './views/aif-ui-common/aif-ui-common.module';\r\nimport { DataEntityModule } from '@gsp-svc/data-entity-adapter';\r\nimport { BizProcessApiModule } from '@gsp-wf/biz-process-api';\r\nimport { PersonnelSelectorModule, PersonnelSelectorDataGridEditorProvider } from '@farris/ui-personnel-selector';\r\nimport { PositionsNamePipe } from './views/performer/views/position-performer/positions-name.pipe';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateResolveService } from './service/translate-resolve.service';\r\nimport { WfProcessEditorRoutingModule } from './wf-process-editor-routing.module';\r\nimport { WfLocaleModule } from './i18n/wf-process-editor-locale.module';\r\nimport { WF_LANG_RESOURCES, WfLocalePipe } from './i18n/pipe/wf-process-editor-locale.pipe';\r\nimport { WF_PROCESS_EDITOR_LANG_RESOURCES } from './i18n/assets/lang.resource';\r\nimport { AifLocalePipe, BIF_LANG_RESOURCES } from './views/aif-ui-common/pipe/aif-ui-common-locale.pipe';\r\nimport { AIF_PROCESS_LIST_HELP_LANG_RESOURCES } from './views/aif-process-list-help/i18n/lang.resource';\r\nimport { BatchSetPropertiesComponent } from './views/batch-set-properties/batch-set-properties.component';\r\nimport { MultiInstanceLoopCharacteristicsComponent } from './views/multi-instance-loop-characteristics/multi-instance-loop-characteristics.component';\r\nimport { AlternativeParticipantComponent } from './views/participant/alternative-participant/alternative-participant.component';\r\n\r\n\r\n// 国际化相关\r\nexport function HttpLoaderFactory(httpClient: HttpClient) {\r\n  const languagePath = 'platform/runtime/common/web/@gsp-wf/wf-process-editor/i18n/';\r\n  return new TranslateHttpLoader(httpClient, languagePath, '.json?v=' + new Date().getTime());\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WfProcessEditorComponent,\r\n    EntryFormEditorComponent,\r\n    ExpressionEditorComponent,\r\n    AssignPerformerConfigComponent,\r\n    SignRuleComponent,\r\n    ApprovelItemsComponent,\r\n    ExecuteFormsComponent,\r\n    JumpScopeComponent,\r\n    BackwardRuleComponent,\r\n    JumpScopePipe,\r\n    ActivityComponentComponent,\r\n    PerformerComponent,\r\n    PerformerEditComponent,\r\n    UserPerformerComponent,\r\n    ComponentPerformerComponent,\r\n    PositionPerformerComponent,\r\n    PerformerOptionsComponent,\r\n    UsersNamePipe,\r\n    UsersIdPipe,\r\n    VariableNamePipe,\r\n    ActivityExecutorPipe,\r\n    ReportingLineComponent,\r\n    TitleExpressionComponent,\r\n    SaveAsEditComponent,\r\n    OrganizationPotentialOwnerComponent,\r\n    CustomizeActionComponent,\r\n    CustomizeActionListComponent,\r\n    CallActivitySubProcessComponent,\r\n    TimeLimitControlComponent,\r\n    SendMessageOperationComponent,\r\n    EventDefinitionComponent,\r\n    AnonymousSetComponent,\r\n    ProcessVariablesComponent,\r\n    VariableSettingComponent,\r\n    ConstantEditComponent,\r\n    ComponentEditComponent,\r\n    MessageNoticeComponent,\r\n    MessageNoticeEditComponent,\r\n    AddExecuteFormComponent,\r\n    FormFormatConfigComponent,\r\n    FormConfigContainerComponent,\r\n    ParameterSettingComponent,\r\n    FormOperationConfigComponent,\r\n    ApprovalPivotComponent,\r\n    WfReportDefHelpComponent,\r\n    UrgeHandleRuleComponent,\r\n    NoteComponent,\r\n    MatrixPerformerComponent,\r\n    EnumListComponent,\r\n    AutoHandleOperationComponent,\r\n    ExtendPropertyComponent,\r\n    CallActivitySubProcess2Component,\r\n    ActivityExecutorPerformerComponent,\r\n    ImageSetComponent,\r\n    MessageNoticeCopyComponent,\r\n    CheckConditionComponent,\r\n    AssignStrategyComponent,\r\n    ActivityListComponent,\r\n    EditComponentParameterComponent,\r\n    VariablePerformerComponent,\r\n    ReleaseComponent,\r\n    ParticipantComponent,\r\n    VariableGridComponent,\r\n    VoConfigComponent,\r\n    WfOptionsComponent,\r\n    AssignScopeComponent,\r\n    SmsMessageTemplateComponent,\r\n    StartConditionComponent,\r\n    PositionsNamePipe,\r\n    BatchSetPropertiesComponent,\r\n    MultiInstanceLoopCharacteristicsComponent,\r\n    AlternativeParticipantComponent\r\n  ],\r\n  imports: [\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SysManagerUIModule,\r\n    RtfAppHelpModule,\r\n    CommonComponentUiModule,\r\n    GSPMetadataRTServiceModule.forRoot(''),\r\n    MetadataRTSelectModule,\r\n    TreeTableModule,\r\n    DataTableModule,\r\n    LayoutModule,\r\n    NotifyModule,\r\n    FarrisDialogModule,\r\n    SplitterModule,\r\n    InputGroupModule,\r\n    LookupModule,\r\n    FlexLayoutModule,\r\n    FarrisPanelModule,\r\n    FarrisResponsiveModule,\r\n    FResponseToolbarModule,\r\n    ExpressionModule,\r\n    PropertyPanelModule,\r\n    FarrisTabsModule,\r\n    LoadingModule.forRoot({\r\n      message: '加载中...'\r\n    }),\r\n    MessagerModule.forRoot({\r\n      width: 500\r\n    }),\r\n    ModalModule,\r\n    PopoverModule,\r\n    PaginationModule,\r\n    FarrisDropdownModule,\r\n    DatagridEditorsModule,\r\n    DatagridModule.forRoot([\r\n      ...EditorProviders,\r\n      PersonnelSelectorDataGridEditorProvider\r\n    ]),\r\n    ComboListModule,\r\n    WizardModule,\r\n    FarrisFormsModule,\r\n    SwitchModule,\r\n    WfBizprocessLookupModule,\r\n    NumberSpinnerModule,\r\n    PerfectScrollbarModule,\r\n    FarrisSectionModule,\r\n    FarrisButtonModule,\r\n    ProcessListHelpModule,\r\n    BillTypeHelpModule,\r\n    FarrisButtonModule,\r\n    ComboLookupModule,\r\n    SysmgrLookupModule,\r\n    FDropdownDirectiveTypeModule,\r\n    LanguageTextboxModule,\r\n    VerifyDetailModule,\r\n    FarrisHtmlEditorModule,\r\n    WfTaskHandlerModule,\r\n    DatagridFilterRowModule.forRoot(),\r\n    AifUiCommonModule,\r\n    DataEntityModule,\r\n    BizProcessApiModule,\r\n    PersonnelSelectorModule,\r\n    WfProcessEditorRoutingModule,\r\n    WfLocaleModule,\r\n  ],\r\n  providers: [\r\n    SessionService,\r\n    HttpService,\r\n    ExpressionService,\r\n    CommonComponentUiRTService,\r\n    PROCESS_DESIGNER_APP_PROVIDERS,\r\n    PROCESS_DESIGNER_DOMAIN_PROVIDERS,\r\n    PROCESS_DESIGNER_PART_PROVIDERS,\r\n    PerformerConfigService,\r\n    ProcessDeUtil,\r\n    WfReportDefHelpService,\r\n    EventBusService,\r\n    MatrixDefHelpService,\r\n    { provide: LOCALE_ID, useValue: localStorage.getItem('languageCode') || 'zh-CHS' },\r\n    { provide: WF_LANG_RESOURCES, useValue: WF_PROCESS_EDITOR_LANG_RESOURCES },\r\n    WfLocalePipe,\r\n    TranslateResolveService,\r\n    PositionsNamePipe,\r\n    AifLocalePipe,\r\n    { provide: BIF_LANG_RESOURCES, useValue: AIF_PROCESS_LIST_HELP_LANG_RESOURCES },\r\n  ],\r\n  exports: [WfProcessEditorComponent, AlternativeParticipantComponent],\r\n  entryComponents: [\r\n    EntryFormEditorComponent,\r\n    ExpressionEditorComponent,\r\n    AssignPerformerConfigComponent,\r\n    SignRuleComponent,\r\n    ApprovelItemsComponent,\r\n    ExecuteFormsComponent,\r\n    JumpScopeComponent,\r\n    BackwardRuleComponent,\r\n    ActivityComponentComponent,\r\n    SelectMetadataRTComponent,\r\n    PerformerComponent,\r\n    PerformerEditComponent,\r\n    UserPerformerComponent,\r\n    ComponentPerformerComponent,\r\n    PositionPerformerComponent,\r\n    PerformerOptionsComponent,\r\n    ReportingLineComponent,\r\n    TitleExpressionComponent,\r\n    SaveAsEditComponent,\r\n    OrganizationPotentialOwnerComponent,\r\n    CustomizeActionComponent,\r\n    CustomizeActionListComponent,\r\n    CallActivitySubProcessComponent,\r\n    TimeLimitControlComponent,\r\n    SendMessageOperationComponent,\r\n    EventDefinitionComponent,\r\n    AnonymousSetComponent,\r\n    ProcessVariablesComponent,\r\n    VariableSettingComponent,\r\n    ConstantEditComponent,\r\n    ComponentEditComponent,\r\n    MessageNoticeComponent,\r\n    MessageNoticeEditComponent,\r\n    MessageNoticeCopyComponent,\r\n    AddExecuteFormComponent,\r\n    FormFormatConfigComponent,\r\n    FormConfigContainerComponent,\r\n    ParameterSettingComponent,\r\n    FormOperationConfigComponent,\r\n    ApprovalPivotComponent,\r\n    UrgeHandleRuleComponent,\r\n    NoteComponent,\r\n    MatrixPerformerComponent,\r\n    EnumListComponent,\r\n    AutoHandleOperationComponent,\r\n    ProcessListHelpComponent,\r\n    ExtendPropertyComponent,\r\n    CallActivitySubProcess2Component,\r\n    ActivityExecutorPerformerComponent,\r\n    ImageSetComponent,\r\n    CheckConditionComponent,\r\n    AssignStrategyComponent,\r\n    ActivityListComponent,\r\n    EditComponentParameterComponent,\r\n    VariablePerformerComponent,\r\n    ReleaseComponent,\r\n    ParticipantComponent,\r\n    VariableGridComponent,\r\n    VoConfigComponent,\r\n    WfOptionsComponent,\r\n    AssignScopeComponent,\r\n    StartConditionComponent,\r\n    BatchSetPropertiesComponent,\r\n    MultiInstanceLoopCharacteristicsComponent,\r\n    AlternativeParticipantComponent\r\n  ],\r\n})\r\nexport class WfProcessEditorModule { }\r\n","import { ProcessOrganization } from './process-info';\r\n\r\nexport class RTProcessInfo {\r\n    rtProcDefId: string;\r\n    flowFormId: string;\r\n    /**\r\n     * 流程组织\r\n     */\r\n    procOrg?: ProcessOrganization;\r\n    /**\r\n     * 访问级别\r\n     */\r\n    accessLevel?: string;\r\n    /**\r\n     * 流程名称\r\n     */\r\n    procName: string;\r\n}\r\n","export enum OrganizationLevel {\r\n    /**\r\n     * 部门\r\n     */\r\n    DEPARTMENT = 'DEPARTMENT',\r\n    /**\r\n     * 单位\r\n     */\r\n    UNIT = 'UNIT',\r\n    /**\r\n     * 表单上的变量单位\r\n     */\r\n    EXPRESSION = 'EXPRESSION',\r\n    /**\r\n     * 默认\r\n     */\r\n    DEFAULT = 'DEFAULT'\r\n}"],"names":["Injectable","args","providedIn","WfProcessEditorService","dt","rt","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__values","o","Symbol","iterator","m","next","value","done","__read","r","e","ar","push","error","__spread","concat","FlowFormInfo","WF_LANG_RESOURCES","InjectionToken","WfLocalePipe","transform","name","keys","split","temp","lang","keys_1","tslib_1.__values","keys_1_1","instant","Pipe","Optional","type","Inject","LOCALE_ID","localeId","resources","defaultLang","langCode","defineProperty","ProcessDesignerUIState","processVariables","variables","setProcessVariableContext","variableContextName","key","participantContext","find","ranksName","dimensions","text","getMessageChannels","_this","http","get","subscribe","re","messageChannels","getAdministratorInfo","getCurrentUser","user","userId","forkJoin","getAdministratorConfig","getAdministrator","isAdministratorConfig","currentValue","administrator","getEnableAdminOrgAut","getEnableProcessDesignerDataAut","getEnableFlowFormAut","authField","getReleaseConfig","getSysOrgById","orgId","getSysOrgWithAllSubsById","url","encodeURIComponent","getCurUserInfo","getOrgConfig","getUserInfo","createData","post","dataChange","variableChange","releaseSave","data","put","processVariableContext","ProcessVariables","_b","_c","v","varEntity","documentation","description","getHelpMetaData","helpId","su","getTopWindow","curWin","window","self","location","origin","parent","isRTFTopWin","initUIState","propertyConfig","propertyData","content","schemas","getUserActList","userActList","data_1","data_1_1","userAct","userActInfo","Id","Name","NameLanguage","localePipe","ClrTypeID","AssignmentStrategy","AssignPerformerConfig","getEndEventList","allActList","data_2","data_2_1","endEvent","endEventInfo","getNotifyEventList","NotifyActKist","data_3","data_3_1","notifyEvent","notifyEventInfo","getMessageEventList","MessageActList","data_4","data_4_1","messageEvent","messageEventInfo","getSubAndCatchEventsList","SubAndCatchActList","data_5","data_5_1","subAndCatchEvent","subAndCatEventInfo","getStartMode","startMode","addContext","context","procInstContext","_e","_f","variable","formalParameterContext","_g","_h","some","c","_j","_k","_l","_m","HttpService","rootPath","flowFormInfo","POST_MESSAGE_TARGET","document","counterSignVariables","approvalItems","enableAdminOrgAut","enableFlowFormAut","assignIterator","completeIterator","completeIterator4Claim","boolIterator","noJump4Sign","urgeContext","subActivityContext","subProcessElementContext","multiCounterSignVariables","activityComponentContext","startModeIterator","displayTerminal","orgTypeCollection","gspframeworkService","common","getBasePath","ProcessDeUtil","GenerateElementId","BpmnModelHelper","createNM","S4","Math","random","toString","substring","initVariableType","slice","getProcessDesignerRouter","getFlowFormWebApi","getFormalParametersWebApi","getMetaDataRUWebApi","getBizComponentsWebApi","getExcuteFormsWebApi","getProcessDefinitionWebApi","getCheckExistActiveProcDefApi","getBizActivityWebApi","ffId","getProcDefKeyWebApi","deployWebApi","saveWebApi","getApprovalActionWebApi","getRTProcessDefinitionWebApi","getValue","code","indexOf","reduce","obj","toUpperCase","jsonObj","toLowCase","toLowerCase","ProcessDesignerDataService","GetFlowFormbyId","id","util","getParametersbyFlowFormKey","getComponentsbyFlowformkey","getExecuteFormbyFlowFormKey","getBizActivities","getCustomizeActions","formId","getBizActivityComponents","flowFormId","getBizActivityActions","getBusinessEntitybyId","getProcContentbyKey","getRTProcContentbyId","saveProcess","processInfo","state","postData","organization","procOrg","organizationName","orgName","accessLevel","procContent","JSON","stringify","auditProcessDef","info","deployProcess","procDefContent","saveRTProcess","procDefId","syncDtProcess","rtProcessInfo","getProcExtendProperty","bizDefKey","bizCategoryId","filter","getBizCmp","getAllBizCmp","flowFormKey","getFormFormat","of","getGeneralConfig","pipe","switchMap","enableTransfer","enableNotify","enableAddSignBehind","enableAddSignFront","res","parse","EntryFormEditorComponent","ngOnInit","getBaseAndExtendFlowForm","ngAfterViewInit","clickOK","object","grid","selectedRow","parameters","submitModal","emit","message","clickCancel","closeModal","setTimeout","selectRow","Component","selector","template","providers","MessagerService","ChangeDetectorRef","decorators","Output","Input","ViewChild","cdr","EventEmitter","editorParams","modalConfig","title","width","height","showButtons","columns","field","sortable","formatter","options","trueText","falseText","FlowFormConverter","convertTo","ActivityComponentUIState","components","allComponents","executionCollection","activityCollection","BizComponentEntity","metadataid","method","metadataId","methodCode","isForCompensation","ActivityComponentRepository","loadComponents","bizActId","uistate","ownerType","OwnerType","removeComponent","addComponent","cpt","component","operations","actualParameters","bindParas","console","log","scopeType","subject","defaultProcessComponentIds","assignParameterValue","map","params","designerState","swapArray","arr","i1","i2","splice","hander","Subject","ActivityComponentViewModel","deleteRow","curComponent","executionTime","messager","repository","componentSelect","EditComponentParameterComponent","paramColumns","editor","groupText","editable","clickHandle","formControl","setValue","instance","showExprHelp","clear","entityType","schema","expr","addSchema","entityTypes","addInjectedEntity","InjectedType","EntityType","context_1","context_1_1","setEditPattern","ExprEditMode","Advanced","addExpressionText","buildExpression","then","expressioninfo","cd","detectChanges","exprEntity","contextEntities","x","y","openComponentSelectorNew","sessionId","componentService","openSelector","selectorResult","confirmEvent","result","required","compRef","resolver","resolveComponentFactory","SelectMetadataRTComponent","injector","typeList","selectedMetadata","$event","meta","metadata","sessionSrc","getUserSessionId","_a","Error","dialog","modalService","show","closeModalEmitter","close","endCellEdit","paramlist","editOK","validator","submitEmitter","editCancel","closeEmitter","codeList","param","ExpressionService","ComponentFactoryResolver","Injector","SessionService","CommonComponentUiRTService","BsModalService","groupIcon","executionTimingList","paramAfterEdit","rowIndex","rowData","column","ActivityComponentComponent","cpts","metaDataIdList","cpts_1","cpts_1_1","cmp","metaDataId","cmpMetas","cpts_2","cpts_2_1","bizComponent","operation","a","restart","cmps","cmps_1","cmps_1_1","exBizTips","EditorTypes","COMBOLIST","groupField","valueField","textField","idField","panelHeight","item","validators","SWITCH","btnTemplate","cmplist","loadData","edit","editState","buttons","editFooter","initialState","editDialog","canEdit","findIndex","confirm","closeCellEdit","viewModel","moveUp","curCmpId","moveDown","clickAction","buttonId","ctx","selectionChange","cache","this_1","warning","HostBinding","cls","buttonGroupData","isPreExternalProcessCmps","ActivityComponentConverter","ExecuteFormsUIState","formTypeCollection","ExecuteFormsViewModel","ExecuteFormsRepository","ExecuteFormModel","ActualParameter","FormFormatService","getData","customData","index","pageIndex","size","pageSize","searchValue","query","tab","searchField","items","total","totalElements","pageInfo","pageable","pageNumber","pageList","enablePager","ExecuteForm","AddExecuteFormComponent","getAllExecuteForms","form","model","ComponentId","appId","FormType","formType","formFormatId","TerminalType","ActualParameters","Tag","valueType","Value","submit","cancel","getExecuteForms","getFormFormats","forms","formFormats","formFormats_1","formFormats_1_1","format","executeForm","actPList","f","flowForm","isDefault","terminal","sysInit","remarks","urlParameters","from","businessObjectId","provide","ServerSideToken","useClass","session","cols","dataUri","VariableGridComponent","DatagridComponent","ParameterSettingComponent","_mode","valueTypeCollection","enableClear","selectChange","valueTypeChange","_d","selectVariable","allParameters","buttonRef","showFormType","beforeEdit","mode","TEXTBOX","ExecuteFormsComponent","paramArray_1","forEach","para","formatConfigId","showMethodTab","getForm","formalParameters","dataType","parameter","configContainer","configId","parametersSet","modalFooter","selectExecuteForm","getVariableList","_o","_p","_q","FormBuilder","read","ElementRef","formBuilder","viewmodel","style","ExecuteFormsConverter","TitleExpressionComponent","textWithMultiLanguage","set","Map","entries","this_2","this_3","this_4","getExprWithMultiLanguage","tslib_1.__spread","convertToValue","val","ExpressioneditorComponent","language","languageOptions","injectName","TitleExpressionConverter","areAllPropertiesEmpty","CustomizeAciton","CustomizeActionListComponent","selections","checkeds","action","terminalType","ValueText","designerUIState","terminalList","customActionList","customizeActions","CustomizeActionComponent","actions","addActions","footer","act","delete","actionlist","curAction","selectChanged","CustomizeActionConverter","ProcessVariable","basicType","ConstantEditComponent","ComponentEditLookUpService","ComponentEditService","ComponentEntity","ComponentEditComponent","_component","MethodCode","service","MetadataId","fetchValueMode","fetchValueSetting","ngZone","runOutsideAngular","inputGroup","nativeElement","addEventListener","onMouseEnter","bind","onMouseLeave","event","showClearButton","toggleClearIcon","isShow","str","clearIcon","target","querySelector","display","selectComponent","getHelpInfo","NgZone","LookupGridComponent","helpFields","helpCols","displayType","ParameterFetchValueMode","express","none","const","enum","help","cell","serviceUnit","dataSource","lookup","onClear","showDialog","err","afterEdit","dictPicking","dictPicked","ProcessVariablesComponent","variableSetting","add","selected","selecteds","varValidator","variableSetEmitter","endEdit","tag","tags","valueText","valueEdit","editConstant","editExpression","editComponent","bindingData","IsMatchVariableNameRules","code1","j","Regx","test","selectedValue","variableCode","basicTypes","showClear","showTips","rowId","ProcessVariablesConverter","TimeLimitInfo","enable","timeUnit","expireOperations","ExpireOperation","durationType","timeDuration","operationTypeName","tslib_1.__extends","SendMessage","_super","cycleEnable","cycleTimeUnit","receiver","receiverText","AutoHandle","autoHandleType","SmsMessageTemplate","smsMessageVariables","SmsMessageVariable","SmsMessageTemplateComponent","smsVariableCols","smsMessageTemplate","addSmsVariable","deleteSmsVariable","endGridEdit","selectedVariable","smsVariableList","smsTemplateContent","SendMessageOperationComponent","array","sendType","undefined","sendMessage","receiverVari","activityReceiverVar","array_1","array_1_1","array_2","array_2_1","hasSmsMessage","hasSmsTemplate","contentExpr","showContentHelp","titleExpr","showTitleHelp","showExpr","startsWith","expressionInfo","SmsTemplate","cycleTime","setReceiver","setActivityReceiver","sendTypeChange","array_3","array_3_1","receiverVariables","messageChannel","channel","channelType","groupIcon2","typeGroup","activityReceiverVariables","placeholder","placeholder2","parser","Number","timeUnitCollection","AutoHandleOperationComponent","autoHandle","uiState","ApprovalItems","Text","TimeLimitControlComponent","timeLimitInfo","activityOperationTypeName","processOperationTypeName","durationTypeCollection","valueChange","durationTypeChange","NUMBERBOX","min","dueTime","remove","curItem","editOperation","sendMassageOperation","autoHandleOperation","tagSelectChange","timeScopeValue","changeTimeScope","tagCollection","timeScopeCollection","TimeLimitControlConverter","MessageNotice","receivers","MessageReceiver","ActivityListComponent","multiSelect","showCheckbox","PerformerEntity","performerId","performerName","PositionPerformerEntity","PositionsNamePipe","positions","defaultVal","u","PositionPerformerComponent","isRequired","position","positionTypeChange","newFilter","positionType","orgType","selectOrganition","context_2","selectPosition","setPosition","editCondition","context_3","context_3_1","Conditional","condition","orgTypeChange","clearOrgType","positionsSelected","dataSelected","posType","positionsNamePipe","SysLookupDetailComponent","initGridIdList","curPosIdList","treeFilter","listFilter","sourceType","btnTemplateRef","showMaxButton","resizable","afterCancle","afterConfirm","getPerformers","SysFarrisLookupComponent","positionTypes","background","showCondition","scene","MessageNoticeEditComponent","_location","l","processParticipantTypes","messageNotice","jsonMessageNotice","exprAble","charAt","sendTimes","activitySendTime","sendTime","receiverTypes","processSendTime","hasAdminOrg","userTypeButtonNeedShow","variableOrgTypes","sendTimeChange","messageReceiver","processParticipant","usersSelect","userIds","userNames","clearUsers","clearPosition","positionId","positionName","clearActivityExecutor","activityDefId","activityDefName","clearVariableParticipant","variableParticipant","variableName","changeValue","addReceiver","workItemParticipant","disableAdd","userParticipant","procInstCreator","selectActivityExecutorParticipant","acticity","shift","re_1","re_1_1","selectVariableParticipant","variableParticipantName","selectUserParticipant","userHelp","showHelp","selectPositionParticipant","context_2_1","tranExpr","ReceiverType","MessageNoticeBatchSet","MessageNoticeCopyComponent","batchSetValue","targetNodeID","isBatchCopy","actis","fullActis","messageNoticeValue","actisSelect","rowData_1","rowData_1_1","closeDialog","MessageNoticeComponent","notices","messageNotices","unSelectRow","batchCopy","copy","ResourceKeys","batchCopyProperty","GetOrganizationType","ProcessDesignerViewModel","MessageNoticeConverter","ExtendPropertyComponent","property","procExtendProperty","parentId","sortOrder","propertyNote","propertyTitle","propertyLocation","propertyType","enumValue","setProperty","booleanlist","extendPropertyList","ExtendPropertyConverter","ImageSetting","ImageSetComponent","imageSetting","imageOperation","operationList","ImageSetConverter","BIF_LANG_RESOURCES","AifLocalePipe","StartConditionService","createConditionEntity","entity","ConditionEntity","generateGUID","isEnabled","ConditionType","COMPONENT","Date","getTime","replace","floor","AbstractDatagridComponent","dgData","toolbarClickHandler","startRowEdit","dg","editRow","editingRowId","cdf","cancelRowEdit","cancelEdit","endRowEdit","evt","ids","it","notify","ids_1","ids_1_1","includes","stopPropagation","rowMove","direction","metadataService","toolbarData","class","disabled","dgIdField","LANG_RESOURCES","zh-CHS","startCondition","yes","no","commonComponent","expression","billAction","typeMustNotBeNull","contentMustNotBeNull","commonComponentMetadataSelector","pleaseSelectOneItemAtLeast","pleaseEndCurrentRowEditing","en","zh-CHT","StartConditionComponent","conditionEntities","BpmnModelJsonHelper","FromJson","designedConditionEntities","exprContent","compCondCont","ComponentConditionContent","LoadFromJson","compId","componentId","compMetadataId","componentMetadataId","compName","displayedContent","EXPRESSION","ExpressionConditionContent","expressionContent","configDgColumns","clickOk","isEditing","ConvertToJson","ToJson","load","newItem_1","newEntity","startConditionService","selectContent","selectCommonComp","showExpression","VOACTION","selectVOAction","cfr","inj","metadata4RefDto","metadataContent","ID","modal","configExpressionExpendFuncs","des","getSchemaById","voId","addNewSchema","clearContent","dgColumns","dgIsEnabledStateCell","SELECT","INPUTGROUP","TEXTAREA","dgOpCell","halign","align","beginEdit","select","gridInstance","getEditors","valueChanges","dr","group","controls","_i","cancelEdited","useValue","ɵ0","GSPMetadataRTService","DataEntityService","NotifyService","FrameworkService","Router","ActivatedRoute","LoadingService","framework","router","activatedRoute","loading","showHeader","StartConditionConverter","StartCondition","BpmnProcessViewModel","setProcessProperty","ProcessPropertyKeys","setProcessConfig","element","setProcessEntity","properties","propertyID","converter","localPipe","ApprovalItemEntity","wfAction","commentNecessary","certification","attachmentNecessary","signatureNecessary","workFlowAction","SignRuleEntity","SignRuleComponent","rules","rules_1","rules_1_1","rule","conclusionValue","ConclusionValue","conclusionName","ConclusionName","calculateType","CalculateType","conditionValue","ConditionValue","waitAllVotes","WaitAllVotes","completionCondition","CompletionCondition","_value","rules_2","rules_2_1","setName1","deleteRow1","ruleItems","ruleItems_1","ruleItems_1_1","ruleItem","approvalItems1","signRuleEntity","clickOK1","counterSignRules_1","counterSignRule","CounterSignRule","bpmnModel","Condition","editConditon","exprService","cond","approvalSelect","apvlItemsGrid","selections_1","selections_1_1","selection","signRule","apvlItemDialog","curValue","preValue","isEmpty","parseInt","calculationMethods","approvalCols","precision","SignRuleConverter","ApprovelItemsComponent","items_1","items_1_1","approval","WorkFlowAction","IsDefault","defaultComment","getActionsList","actionList","bizActivityId","actionValidate","actionsSelect","actionsTable","clearCheckeds","actionsDialog","SelectCancel","trim","workFlowActions","isMultilingualField","LANGUAGETEXTBOX","languages","actionsCols","ApprovelItemsConverter","ExpressionEditorComponent","_r","_s","_t","this_5","compute","getExpr","changeType","ExpressionEditorConverter","JumpScopeComponent","category","Category","defaultType","DefaultType","acty","DefaultActivity","defaultacty","strs","DestinationActivities","strs_1","strs_1_1","name_1","list_1","defaultActivity","defAct","allAct","searchDefault","arg","search","loadDefault","allActisTable","componentRef","searchSelect","loadSelect","userActis","actTable","categoryListItems","defaultTypeListItems","defaultActivitySelect","JumpScopeConverter","BackwardRuleComponent","selectAbleChecked","SelectTargetAble","selectTargetList","SelectTargetList","waitReturnChecked","WaitReturn","dynamicBackWardRuleAbleChecked","DynamicBackWardRuleAble","resubmitEffect","ResubmitEffect","TargetRef","targetRef","listItems","displayTestText","displayText","nodeType","itemsBackScope","totalBackScope","itemsTemp","deepCloneDefine","itemsBackScopeTemp","selectAbleClick","CompleteStrategy","waitReturnClick","dynamicBackWardRuleAbleClick","list","fullActs","backWardRule","getTargetRef","pagerChanged","pagerChangedBackScope","loadBackScope","pageSizeChange","pageSizeChangeBackScope","searchBackScope","hlp","hlpScope","deepCloneBackDefine","resubmitEffectOptions","popover","dictPickedTest","beforeOpen","beforeOpenTest","BackwardRuleConverter","PerformerUIState","clearPerformer","performerInfo","performers","reportingLines","matrixParticipants","activityExecutors","organizationParticipants","performersList","typeCollection","variablePerformers","isAllScope","PerformerRepository","PerformerViewModel","UserPerformerEntity","PerformerConfigService","getLookupConfig","lookupConfig","asObservable","ReplaySubject","UserPerformerComponent","userType","users","selectedUserIds","selectUsers","userTypeCollection","impl","System","import","moduleFactorys","values","farrisDialogshow","defaultOrgId","orgAllPath","curOrgType","PersonnelSelectorComponent","farrisUserHelpShowTabIds","activeTabId","ComponentPerformerService","getLookUpData","pageSiza","ComponentPerformer","ComponentPerformerComponent","componentPerformer","curParameter","methodName","helpInfo","fieldInfo","searchInfo","lookupDisplayText","onDictPicking","_url","withSpecificField","catchError","innerMessage","Message","throwError","ReportingLineDataEntity","WfReportDefHelpService","substr","WfReportDefHelpComponent","lookUp","mapFields","afterClear","singleSelect","pagination","dialogClosed","ReportingLineComponent","dataEntity","defUrl","defName","reportingLineDefName","reportingLineDataEntity","reportingLineDefId","reportingLineDefinition","di","dimension","refUserId","curReportingRefer","reportingReferObjects","refEmployeeId","typeReadOnly","getReportingLineType","reportingLineDefinitionList","onclear","referObjectChange","refOrgId","refOrgName","departments","referUserChange","reportingDimensionChange","orgSelected","org","getReportingTypes","start","end","inputGroup1","clearUser","clearOrg","selectOrg","employee","defChanged","gspWfReportingLineDef","ReportingLineDefHelpUtil","getReportingLineHelp","defSelected","reportingLineDimension","reportingReferObject","SysFarrisTreeHelpComponent","MatrixDefInfoEntity","MatrixDataInfoEntity","EnumListComponent","enumValues","onConfirm","selectedIds","messageService","MatrixDefHelpService","MatrixPerformerComponent","curMatrixDataEntity","matrixDefId","curMatrixDefEntity","setFields","curDataFieldValue","dataFieldAlias","conditionField1","condition1","condition1ExprAble","conditionField2","condition2","condition2ExprAble","conditionField3","condition3","condition3ExprAble","multivaluedCondition","MultivalueOption1","condition1Multivalue","MultivalueOption2","condition2Multivalue","MultivalueOption3","condition3Multivalue","condition1Text","conditionFieldText1","condition1Value","condition2Text","conditionFieldText2","condition2Value","condition3Text","conditionFieldText3","condition3Value","getMatrixLineType","matrixDefEntityList","conditionFields","dataFieldAndValues","conditionField","sort","dataField","alias","onHelpSearch","fieldId","smartHelp","openEnumValue","showEnumList","enumList","btnRef","dataFieldChange","selectedDataHandler","condition1Expr","condition1ExprClick","condition1MulClick","condition2Expr","condition2ExprClick","condition2MulClick","condition3Expr","condition3ExprClick","condition3MulClick","LookupDataService","matDefService","exprGroup","mulGroup","matrixDefName","dictHelpPicked","onBeforeHelp","getDataFn_1","lookupIns","ActivityExecutorParticipant","ActivityExecutorPerformerComponent","selectedUser","handler","allActivityTable","setCurrentPagerData","allActivityDialog","activitiesSelect","selectedActivities","activity","OrganizationParticipantExpression","VariablePerformerEntity","VariablePerformerComponent","getInSuiteField","varType","varValue","relation","relationShipType","personnelRelationShipTypes","enabledStateChange","fieldType","inSuiteField","field_1","field_1_1","field_description","PerformerEditComponent","isContextVariable","performer","usersCmp","varCmp","posiCmp","reportingLineCmp","setReportingLineDataEntity","cmpCmp","matrixCmp","setMatrixDataEntity","activityExecutorCmp","organizationLevel","OrganizationLevel","organizationParticipant","performerType","organizationLevelCollection","organizationId","includeChildren","reportingLine","matrix","userPerformers","activityExecutorPerformers","editOrganizationId","actionScope","ActionScope","PerformerOptionsComponent","exclusionPerformers","ExclusionPerformers","noPerformerStrategy","NoPerformerStrategy","historicFirst","HistoricFirst","automaticPerformers","excludeProcInstCreator","excludePreActExecutors","excludeAllPassExecutors","excludeExprPerformer","excludeValue","exprPerformerType","autoProcInstCreator","autoPreActExecutors","autoAllPassExecutors","performerOptionsLocation","getExclusionPerformers","getAutoPerformers","excludeProcInstCreatorClick","excludePreActExecutorsClick","excludeAllPassExecutorsClick","autoProcInstCreatorClick","AssignStrategy","autoPreActExecutorsClick","autoAllPassExecutorsClick","getPerformerOptions","exclusionPerf","autoPerf","openExprEditor","noPerformerStrategyList","exclusionPerformersOptions","PerformerOptionsConverter","PerformerComponent","partInfo","performerDescription","componentDescription","reportingLineDescription","matrixDescription","getMatrixConfig","switchChange","addPerformer","compFactory","dropDownEl","curPerformer","modalConfig_1","urlMatrix","isClose","id_1","p_1","id_2","addReportingLineData","addMatrixData","reportingLineData","definitionId","referUserId","referDeptId","matrixData","participantOptionsSet","optionsDialog","PerformerConverter","ActionOrganizationScope","ActionOrganizationScopeDesign","OrganizationPotentialOwner","AssignConfig","operator","necessary","assignStrategy","assignConfig","ParticipantInfo","humanPerformerList","potentialOwnerList","Participant","UserParticipant","VariableParticipant","PositionParticipant","ComponentParticipant","ReportingLineParticipant","MatrixParticipant","OrganizationParticipant","ParticipantUIState","AlternativeParticipantComponent","assignStrategyChange","participant","isEnable","boxsize","attributeBoxSize","dropDownE2","addUserPerformer","addvariablePerformer","addPositionPerformer","addComponentPerformer","addReportingLinePerformer","addMatrixPerformer","addActivityExecutorPerformer","addOrganizationParticipant","potentialOwnerGrid","refresh","userPerformer","removePotentialOwner","max","order","positions_1","positions_1_1","h","reportingLines_1","reportingLines_1_1","matrixParticipants_1","matrixParticipants_1_1","activityExecutor","organizationCode","parentsUntil","editPerformer","removePerformer","performer_1","performer_2","getUserPerformerDescription","getVariablePerformerDescription","variablePerformer","getPositionPerformerDescription","getComponentPerformerDescription","getReportingLinePerformerDescription","getMatrixPerformerDescription","boxType","operatorCollection","OrganizationPotentialOwnerComponent","organizationParticipantExpression","actionCollection","scope","alternativeParticipant","participantInfo","potential","validate","selectValue","actionName","OrganizationPotentialOwnerConverter","AnonymousSet","isAnonymity","anonymous","AnonymousSetComponent","anonymousSet","AnonymousSetConverter","VariableSetting","VariableSettingComponent","opportunities","variableSet","VariableSettingConverter","ApprovalPivotConfig","approvalPivots","ApprovalPivot","ApprovalPivotComponent","config","expand","approvalPivot","ApprovalPivotConverter","UrgeHandleRule","cconstructor","urgeHandleAble","earlyTime","intervalTime","urgeMessageSubject","urgeMessageContent","addReminder","subjectEditable","contentEditable","UrgeHandleRuleComponent","urgeHandleRule","UrgeHandleRuleConverter","CheckCondition","checkTime","CheckConditionComponent","activityBeforeStarted","activityBeforeCompleted","clearCondition","checkConditions","errorTips","CheckConditionConverter","AssignStrategyComponent","assingPerformerConfigForm","FormGroup","FormControl","assignStrategyList","AssignStrategyConverter","AssignConfig$1","ParticipantComponent","preAssignStrategy","humanPerformerGrid","question","humanPerformerCopyToPotentialOwner","potentialOwnerCopyToHumanPerformer","removeHumanPerformer","reportingLines_2","reportingLines_2_1","matrixParticipants_2","matrixParticipants_2_1","performer_3","performer_4","human","ParticipantConverter","DisplayInfor","activityDefinitionId","OtherAssignActivityNodeInfo","AssignScopeComponent","data1","otherAssignActivityNodeInfo","otherAssignActivityNodeInfos","other","displayInfo","activities","Operator","activities_1","activities_1_1","listItem","checkRow","curActivity","actionsTable1","actionsDialog1","nodeCols","AssignScopeConverter","actList","MultiInstanceLoopCharacteristics","Clr_Type_ID","sequential","loopCardinality","completionConditionRules","MultiInstanceLoopCharacteristicsComponent","loopCharacteristics","preEnable","preSequential","Expression","signRuleEntityArray","promptAct","loopCardinalityExpr","showloopCardinalityHelp","loopCharacteristicsTemp","com","clone","setCompletionConditionRules","value1","modalFooter1","time","ProcessTime","conditionRulesIsSet","MultiInstanceLoopCharacteristicsConverter","WFFlowElementsViewModel","setFlowElementProperty","setFlowEleConfig","setFlowEleEntity","UserActivityPropertyKeys","setUserActivityProperty","activityType","buildApprovalItems","buildCounterSignVariables","buildSignRules","SignRule","BizActivityID","setUserActConfig","setUserActEntity","tabId","conclusions","conclusions_1","conclusions_1_1","conclusion","VarEntity","conclusions_2","conclusions_2_1","signRules","signRules_1","signRules_1_1","approvalItem","SaveAsEditComponent","saveAsOK","procName","saveAsCancel","searchHandle","orgTreeData","orgs","treeData","orgs_1","orgs_1_1","children","leaf","isDetail","selectable","farris_selectable","len","parentData","treeIterator","treeData_1","treeData_1_1","findChild","childList","childitem","child","childEntity","makeTreeByParent","datas","parentField","keyField","pathLayerOnes","treedata","findChildrenByParent","getSysOrgs","IsSearchTree","withPermission","ruleFilter","layer","loadType","accessLevelCollection","uri","_searchState","codeOrName","administratorAuthorities","includeSubordinate","searchFields","label","treeInfo","isDetailField","layerField","layerType","loadDataType","onlySelectLeaf","pathField","treeDataIsInit","InheritParent","VariablesExpression","AutoCreation","Dynamic","Specified","CallActivitySubProcess","subProcessType","SubProcessType","billSourceType","BillSourceType","BifMonitorConstant","bifMonitorAppId","bifManagerAppEntrance","bifDiagnostorFuncId","bifManagerFuncId","BifCreationProcess","BifWritebackProcess","JsonConvertableImpl","AbstractShowEntity","ResetBeforeLoadFrom","upBillVoName","downBillVoName","bifMetadataType","lastModifiedTime","originId","rootId","ConvertToJsonObject","SetAttributeValue","LoadFromJsonObject","GetAttributeValueAsString","BifMetadataType","GetAttributeValueAsDateTime","GetAttributeValueAsBoolean","RtShowEntity","RtShowEntitiesWithCustomization","customizationEntities","GetAttributeValueAsList","getTClass","RtBillProcessListResult","totalCount","pageCount","entities","GetAttributeValueAsNumber","ProcessListHelpService","openBifManagerApp","opt","funcId","appEntrance","appType","entityParams","queryStringParams","tabName","frameworkService","openMenu","getDatagridData","body","bizType","httpService","baseUrl","listRes","elt","getProcessNameByCode","request","responseType","AppService","appService","ProcessFilterConditionArgs","upBillVoId","downBillVoId","billProcessType","orderByCode","orderByName","OrderByLastModifiedTime","GetAttributeValueAsJsonSerializable","TextValue","AIF_PROCESS_LIST_HELP_LANG_RESOURCES","upBill","downBill","processName","processType","creation","writeback","enabledState","all","enabled","billSelector","querySolution","collapse","pleaseSelectNonVirtualVO","pleaseSelectOneItemOnly","isExtendProcess","creationProcess","notSet","setProcess","ProcessListHelpComponent","processCode","showText","configTtColumns","procHelpService","loadItems","queryParam","filterArgs","proc","ttData","tt","procEmitter","modalRef","complete","onSearch","clearSelections","clickNameCell","onPageSizeChanged","checkedIds","checkRows","onPageChanged","pageChangeHandler","pageSizeChangeHandler","removeSetProcess","loadingComp","setPageIndex","ttColumns","nameCellTemp","createDefaultQueryParam","filterArgsExt","defaultPageSize","OrderByDirection","hasValue","ɵ0$1","ttIdField","cascadeCheck","cascadeDown","cascadeUp","CallActivitySubProcess2Component","callActivitySubProcess","calledElement","calledBizDefKey","inheritBizDataId","useAutoCreationData","getProcessDefKey","getFlowForm","getAifProcessName","aifProcessCode","processConfirm","procDefKey","calledElementName","processTypeChange","calledBizDefName","billSourceChange","selectProcess","openProcHelp","rte","aifProcessName","clearProcess","cmpR","handle","closed","destroy","clearProcessDef","flowFormConfirm","clearFlowForm","setBizDataId","bizDataId","bool","radioGroupProcessTypeData","radioGroupBillSourceData","CallActivitySubProcess2Converter","SubProcessViewModel","setConfig","setEntity","CallActivitySubProcessPropertyKeys","bizTypeId","AutoActivityAdapter","AutoActivityPropertyKeys","EventDefinition","triggerAction","Async","EventDefinitionComponent","event_1","SignalRef","triggerActionCollection","isNaN","EventDefinitionConverter","CatchEventAdapter","IntermediateCatchEventImplPropertyKeys","MessageActivityAdapter","MessageActivityPropertyKeys","AuditProcessDefInfo","ProcessInfo","NotifyActivityAdapter","NotifyActivityPropertyKeys","AifCreationBillProcessConverter","AifCreationBillActivityAdapter","AifCreationBillActivityPropertyKeys","EventBusService","on","eventName","_subject","_subjects","has","subscription","unsubscribe","observers","_","ReleaseComponent","releaseType","procVersion","applicantName","applicantDepartment","applicantId","saveData","dataId","returnValue","DataId","textDetail","processDefinitionKey","ChangeType","ChangeInfo","mySubmit","editorCreated","quill","getModule","contentChanged","submitService","submitWithBizDefKey","WfTaskHandlerService","releaseTypeList","DocuTypeHelperEntity","moduleName","bizKindName","bizTypeName","BillTypeHelpService","findDocumentTypeEntites","documentTypeUrl","BusinessObjectRtService","TranslateService","boRtService","httpClient","sessionService","translate","BILL_TYPE_HELP_LANG_RESOURCES","busineseCategory","module","busineseType","allColumns","BillTypeHelpComponent","configLookupColumns","getSelectedDocuType","ttSearch","ttSearchObj","entities$","entityService","buildTreeData","docuTypeList","expandAll","docuTypeId","selectNode","ttNodeSelected","nsp","rows","isArray","node","nodes","ttCols","ɵ0$2","onselected","ttSearchFields","ttAllColumnsTitle","VoConfigComponent","selectVo","clearVo","voDto","vo","currentVoId","currentVoName","selectDocuType","currentDocumentTypeId","bsModal","docuType","currentDocumentTypeName","clearDocuType","VoConfigConverter","WfOptionsComponent","WfOptionsConverter","BillNodeActivityAdapter","SequenceActivityAdapter","SequenceFlowPropertyKeys","billCreationTypeKeyMap","billRelationTypeKeyMap","initProcessProperty","pptData","EntryForm","process","ProcessClrTypeID","subProcess","autoActAdapter","catchEventAdapter","messageActAdapter","notifyActAdapter","creationActAdapter","billNodeActivityAdapter","sequenceActivityAdapter","updateSchemas","schemaParams_1","$schemas","schemaMetadataId","getBeMappingByBizDefKey","newSchemaMetaDataId","getFlowFormInfoById","$flowform","setFormParamCxt","flowform","bizComponents","excuteForms","bizActivities","getFormFormatsByBizCategory","releaseProcess","version","modalOptions","DefaultProcess","Key","dlg","auditId","success","processDefKey","saveAsProcess","procKey","procInfo","msg","timeout","showTip","process_1","AuditEvent","beforeCompleteStrategyChange","rtProcDefId","getProcessCategory","procCategoryId","eventBus","batchSet","getProcDefsByKey","checkExpressionsByPayload","NoteComponent","record","MessageReceiver$1","BizComponent","BizParameter","WfConstants","PF_CMP_ID1","PF_CMP_ID2","PF_CMP_ID3","PF_CMP_ID4","IMAGE_PATH","WfDesignerUtils","isPfComponent","ShowTips","Participant$1","VariablePerformer","AssignUser","Transfer","AddSignFront","AddSignBehind","Notify","PropertyHelper","getVariableSettings","variablesSetting","extendElements","GetExtensionElements","variablesSetting_1","variablesSetting_1_1","extendElements_1","extendElements_1_1","getMessageNotices","smsTemplate","receiverExpressions","receiverTexts","userReceiver","activityExecutorParticipant","variableReceiver","positionReceiver","ActivityExecutorParticipantExpression","UserParticipantExpression","UserId","OrgType","PositionParticipantExpression","PositionId","PositionName","PositionType","OrgId","getBizComponentList","bizComponentList","components_1","components_1_1","Time","ScopeType","bizParam","getPerformerList","roles","role","paramters_1","participantExpression","OrgName","VariableParticipantExpression","Relation","VarType","VarValue","positionPerformer","ComponentParticipantExpression","componentName","ReportingLineParticipantExpression","ReportingLineDefId","ReportingLineDefName","RefOrgId","RefUserId","RefEmployeeId","Dimension","mxResources","MatrixParticipantExpression","getPerformerListTest","paramters_2","getNotifyAble","notifyAble","dynamicParticipants","notifyScope","updateFormalParameters","objects","GetDataObjects","parameters_1","parameters_1_1","dataObject","DataType","Model","objects_1","objects_1_1","DataObject","RemoveDataObject","DataTypes","BasicType","Description","parameterMode","ValuedDataObject","Documentation","IsAllowNull","allowNull","initialValue","initialValueType","AddDataObject","ProcessCell","WfProcessCell","getFarrisPropConfig","extendList","editorUi","procExtProps","usual","ElementPropertyConfig","formDef","categoryId","categoryName","propertyName","visible","multiLangEnabled","readonly","advanced","groupList","extendList_1","extendList_1_1","extend","childs","extendList_2","extendList_2_1","extendProperty","groupList_1","groupList_1_1","g","setProcessPropertyValue","updateProps","updateProcessHeader","propertyValue","updateFlowFormInfo","processBizComponnets","executeForms","bizCmps","bindProcessTitleExpression","processDescription","updateProcessComponents","updateExecuteForm","updateCustomizeActions","modifyProcessTitleExpression","updateAllowPreAssign","updateStartMode","allBizCmps","updateEnablePriority","updateEnableWholeOrderRetrieve","updateProcessVariables","updateProcessTimeLimitControl","updateProcessMessageNotices","updateImageSettings","resetExtendProperty","webForm","mobileForm","proExtendProperties_1","messagesNotices","ProcessHeader","BizDefKey","BizDefName","allowPreAssign","enablePriority","enableWholeOrderRetrieve","ToolTime","UNDEFINITION","convert2Component","TitleExpression","valueLanguage","CustomizeAction","getMessageNotice","TimeLimitControl","getPrcocessTimeLimitInfo","ExtendProperty","ImageSettings","getProcessVariables","groupList_2","groupList_2_1","dataObjects","dataObjects_1","dataObjects_1_1","CustomType","timeLimitControl","timeLimit","TimeLimitControlInfo","operations_1","operations_1_1","SendMessageExpireOperationInfo","AutoHandleExpireOperationInfo","setProcessHeader","bizObjId","ffName","processHeader","setProcessComponents","updateExecuteForms","customType","CDTSchemaType","newSchemaId","newSchemaMetadataId","SchemaId","schemaId","owner","objects_2","objects_2_1","procCpts","StartMode","DIRECT","loadDataComponent","LOADDATA","ldCpt","EXTERNAL_PROCESS","externalCmps","procCpts_2","procCpts_2_1","procCpt","SUB_PROCESS","procCpts_1","procCpts_1_1","fireEvent","mxEventObject","PmfEvents","ShowProperty","procCpts_3","procCpts_3_1","actualCmps","actualCmps_1","actualCmps_1_1","_u","_v","forms_1","forms_1_1","actParas","params_1","params_1_1","actPara","customizeActions_1","customizeActions_1_1","BizObjId","titleExpression","procCpts_4","procCpts_4_1","priority","allCmps","WfEvents","level","procCmps","pfCmps","cmps_2","cmps_2_1","objects_3","objects_3_1","variables_1","variables_1_1","control","AutoHandleExpireOperation","SendMessageExpireOperation","notices_1","notices_1_1","participants","receiverName","receivers_1","receivers_1_1","participants_1","participants_1_1","posiParticipant","imageSettings","value_1","value_1_1","extendElements_2","extendElements_2_1","wholeOrderRetrieve","Graph","WfGraph","bpmnCellsSelectionChanged","cells","sender","eventObject","getSelectionCells","getChildVertices","getDefaultParent","imgUrls","FlowNodeState","Selected","setStyle","mxUtils","getStyle","mxConstants","STYLE_IMAGE","Default","createProcessCell","processCell","plane","DefaultDiagram","BpmnPlane","createBpmnModelWithProcInfo","newProcInfo","createBpmnModel","setDefaultStyles","getStylesheet","getDefaultEdgeStyle","STYLE_ROUNDED","container","renderHint","stylesheet","themes","Sidebar","WfSidebar","addBizActPalette","bizActFactories","palettes","removeChild","BpmnCellHelper","generate","UserActivity","mxGeometry","defaultImageWidth","defaultImageHeight","bizActivity","createItemFactory","addPaletteFunctions","ExclusiveGatewayCell","WfExclusiveGatewayCell","createFlowElement","flowElt","flowNode","NodeCell","AifCreationBillActivityCell","flowElement","PropertyConfig","bifDef","isRelied","resetProcessCode","startActivity","CLR_TYPE_ID","AifCreationBillActivity","geometry","clrTypeId","nameLanguage","AutoActivityCell","basicProperty","activityProperty","variableSettings","autoActivity","updateAutoActivityTools","updateVariableSettings","tools","tools_1","tools_1_1","tool","ComponentType","AutoActivity","CallActivitySubProcessCell","CalledElement","inheritVariables","LoopCharacteristics","updateSubProcessConfig","updateBackWardRule","updateMultiInstanceLoopCharacteristic","BackWardRule","loopCharacteristics_1","variableExpression","SemanticExpression","MexExpression","IntermediateCatchEventImplCell","initEventDefinitions","bindBpmnModel","diagElt","graph","addSignals","catchEvent","EventDefinitions","signals","signal","Signal","isBackEventExist","events","events_1","events_1_1","updateEventDefinitions","removeSignals","events_2","events_2_1","SignalEventDefinitionImpl","flowElements","GetFlowElements","eventDefs","IntermediateCatchEventImpl","catchEvent_1","event_3","eventDef","MessageActivityCell","messageActivity","updateMessageNotices","MessageActivity","ActualParameter$4","AssignConfig$2","AssignStrategy$1","ParticipantInfo$1","ProcExtendProperty","NotifyActivityCell","generalConfig","generalExtendList","performerProperty","approvalProperty","ExtendPropertyConfig","setPropertyData","getParticipantInfo","extendProperties","notifyActivity","partiInfo","GetResourceRoles","HumanPerformerImpl","propertyId","updateParticipant","updateStartActivityForm","updateNotifySet","resourceRoles","RemoveResourceRole","humanPerformer","addUserParticipant","addPositionParticipant","addVariableParticipant","addComponentParticipant","addReportingLineParticipant","addActivityExecutorParticipant","addMatrixParticipant","otentialOwnerImpl","humanPerformerImpl","AddResourceRole","PotentialOwnerImpl","componentParticipant","potentialOwner","attributes","NotifyActivity","UserActivityCell","transferAble","AddSignBehindAble","AddSignFrontAble","NotifyAble","BizActivityName","Tools","setBizConclusions","bizActions","initConclusions","createDiagramElement","getFarrisPropConfigByIsOperation","isOperation","ExecuteWorkItemMode","Preempt","CounterSignRules","eventListeners","Conclusions","isBackConclusionExist","JumpScope","otherAssignNodes","otherAssignActivities","ApprovalSettings","taskTimeliness","Backward","getParticipantOptions","getAssignStrategy","Retrievable","SelectBranch","getSignFrontInfo","getSignBehindInfo","getTransferScopeInfo","getTimeLimitInfo","taskTitle","anonymousText","ExecuteForms","approvalPivotConfig","DisplayTerminal","ALL","getUrgeHandleRule","getCheckConditions","userActivity","ASSIGN","MultiSelect","Necessary","AllowGlobalAssign","roles_1","ParticipantSetting","signFrontTest","signBehindTest","transferScopeTest","notifyScopeTest","updatePropsByIsOperation","updateParticipantOptions","resetExecuteWorkItemMode","resetDisplayTerminal","resetSignRules","resetApprovalItems","resetExecuteForm","resetSelectTargetAble","resetJumpScope","resetBackWardRule","resetMultiInstanceLoopCharacteristics","resetTools","modifyTitleExpression","updateSignFrontSet","updateSignBehindsSet","updateTransferScope","updateTimeLimitControl","updateAnonymousSet","updateApprovalPivotConfig","updateUrgeHandleRule","updateCheckConditions","updateOtherAssignActivities","updateOtherAssignNodes","CLAIM","checkOtherAssignNodes","assignPerformerConfig","operationActivity","k","OperationActivity","StartActivity","DEPARTMENT","UNIT","DEFAULT","participantSetting","ConclusionItem","jumpScope","ParticipantExpression","actions_1","actions_1_1","Settings","checkConditions_1","checkConditions_1_1","OtherAssignNodes","removeHumanResourceRoles","userActivitys","perfIds_1","ParticipantSchemes","Performers","reId","OperationActivityCell","StartActivityCell","startActivityForms","pcForm","status","setDefaultForms","StartActivityPropertyKeys","ActivityConfig","selectTargetAble","sendBackedTask","ParallelGatewayCell","WfParallelGatewayCell","EndEventCell","WfEndEventCell","InclusiveGatewayCell","WfInclusiveGatewayCell","BatchSetPropertiesComponent","addSignFront","activityModel","addSignBehind","transfer","addSignFrontScope","addSignBehindScope","transferScope","backWardRuleData","addSignFrontEnable","frontData","addSignFrontActis","addSignBehindEnable","behindData","transferEnable","transferData","notifyEnable","notifyData","backWardRuleEnable","batchSetProperty","useractivities","useroperationnotifyactivities","useroperationsubcatchactivities","actis1","actis2","actis3","actis4","actis5","addSignBehindActis","transferActis","notifyActis","backWardRuleActis","nullActis","frontActisSelect","behindActisSelect","notifyActisSelect","transferActisSelect","backWardRuleActisSelect","EditorUi","WfEditorUi","createActions","getAction","ActionKeys","pmf_delete","createToolbox","toolbox","g1","ToolboxGroup","ToolboxItem","groups","createGraphInstance","diagramContainer","setCellsLocked","setDropEnabled","setConnectable","popupMenuHandler","autoExpand","factoryMethod","menu","getChildCells","getId","addItem","createSidebar","sidebarContainer","buttonIn","span","createSpan","fontSize","color","borderRadius","padding","createTextNode","appendChild","createDiv","top","right","zIndex","createElement","buttonInImg","setAttribute","buttonOut","marginRight","src","verticalAlign","mxEvent","addListener","pmf_zoomIn","execute","buttonOutImg","zoomBar","pmf_zoomOut","showMenubar","menubarHeight","showToolbar","toolbarHeight","left","showSidebar","sidebarSplitPosition","sidebarSplitSize","sidebarSplitOnChange","classname","className","loadBizActivities","sidebar","getCellByFlowElementId","obj_1","obj_1_1","afId","afId_1","afId_1_1","abId","abId_1","abId_1_1","trId","trId_1","trId_1_1","ntId","ntId_1","ntId_1_1","bwId","bwId_1","bwId_1_1","openBpmnModel","loadBpmnModel","refreshProperty","getActivities","flowDict","getEndEvents","userActArray","getNotifyEvents","getMessageEvents","getSubAndCatchEvents","eventSource","importLinks","WfValidatorAdapter","resProcVars","resActList","validateActivityList","valid","validatePrcoessVaris","warningList","warningValidator","validateParallelGateway","validateProcCmps","validateApprovalPerformers","pfCmpsName","pfCmps_1","pfCmps_1_1","tip","PROCESSINSTANCE_STARTED","PROCESSINSTANCE_COMPLETED","parallelGatewayCount","ParallelGateway","count","procVaris","variSets","variSets_1","variSets_1_1","resActId","validateActivityId","resActName","validateActivityName","exclusiveGateway","parallelGateway","intermediateCatchEventImpl","aifCreationBillActivity","Blob","WF_PROCESS_EDITOR_LANG_RESOURCES","noProcessHeader","cmpsEmpty","cmpsEmptyMsg","directNoPf","directNoPfMsg","noLoadDataCmp","noLoadDataCmpMsg","noStartCmp","noStartCmpMsg","lackProcessCompleteCmp","lackProcessCompleteCmpMsg","lackProcessAbortCmp","lackProcessAbortCmpMsg","lackProcessCancelCmp","lackProcessCancelCmpMsg","lackProcessBackCmp","lackProcessBackCmpMsg","lackProcessReStartCmp","lackProcessReStartCmpMsg","parallelGatewayCheck","parallelGatewayCheckMsg","approvalPerformerCheck","noVariable1","noVariable2","noStartActivity","noExclusiveGateway","noParallelGateway","noUserActivity","noOperationActivity","noNotifyActivity","noCallActivitySubProcess","noAutoActivity","noIntermediateCatchEvent","noMessageActivity","noAifCreationBillActivity","noEndEvent","mark","noFlowNodeChsName","nameExceedsLengthLimit","processEditor","showButton","changeRecord","noDtInfo","noRtInfo","wrongMoment","prompted","saveSuccess","waitReview","successPublish","publishFail","policyConflict","noPermissionToSave","closeProc1","closeProc2","copied","button","saveProc","releaseProc","sync","saveAs","procRecord","viewProcModel","closeProc","designer","wfEditorUi","basicElements","readOnly","wfProcessCell","basicInfo","entryForm","wfTitle","formsPC","formsMobile","basic","wfComponent","otherConfig","customizeAction","timelinessInfo","messageProperty","directTips","externalTips","subprocessTips","WfSequenceFlowEdge","ConditionExpression","default","wfSidebar","bizactivitylib","app","processDesigner","claim","preempt","parallel","true","false","procInstId","businessCreator","procInstDescription","comment","bizDefName","curLoginUsername","procInstCreatorName","currentParticipantId","currentParticipantName","currentUser","preActExecutors","collectionElementVariable","subCollectionElementVariable","nrOfInstances","nrOfCompletedInstances","nrOfActiveInstances","nrOfForward","nrOfBackward","nrOfAbort","conclusionType","directSuperior","higherSuperior","WEB","APP","conclusionTypeTips","conclusionValueTips","tips","saveAsSuccess","saveAsFail","syncDt","syncSuccess","auto","pull","multiInstanceLoopCharacteristics","isSequential","promptAct1","promptAct2","promptProc1","promptProc2","checkPrompt","conditionRulesSet","completionConditionRulesList","forward","backward","abort","optins","wfOptions","specified","dynamic","bizDef","procDef","voConfig","documentInfo","viewModelSelection","selectOne","documentTypeSelect","documenttype","constant","ACTIVITY_STARTED","ACTIVITY_COMPLETED","varAssign","varNumber","REQUIRED","varName","notSelectedVar","valueCannotEmpty","serialNumber","inconsistentParameters","methodNotExist","parameterName","parameterValue","methodnotSelected","metadataNotExist","errorObtainComponent","componentSelection","parameterList","lineNumber","urgentApproval","pleaseApprove","soOn","urgeHandle","noSendingMethod","setMessageTemplate","codeEmpty","noMessageSubject","noMessageContent","earliestTimeNotEmpty","minimumTimeNotEmpty","enableUrgeHandle","timeSetting","earliestTime","minimumInterval","sendingMethod","messageSubject","supportEditing","messageContent","displayReminder","taskDescription","currentLanguage","timedOutOperation","day","hour","minute","BeforeDuration","OnDuration","AfterDuration","curDay","onlyBeInteger","setOperation","setType","setComments","selectedOperation","notSupportAutomatic","warningMessage","automaticProcessing","timelinessControl","taskDeadline","timelyOperation","to-doMessageTimeOut","messageTimeOut","agree","sendMessageOperation","cycleTimeNotEmpty","sendMethodNotEmpty","subjectNotEmpty","contentNotEmpty","recipientNotEmpty","messageTemplate","smsTemplateNumberNotEmpty","sysUsers","opinionsNotEmpty","processingNotEmpty","automaticProcessSet","automaticProcessMethod","automaticOpinionHandle","noRowsSelected","tips1","tips2","tips3","smsTemplateNumber","smsVariableBinding","countersignRules","byNumber","byProportion","customConditions","notEmpty","pleaseSelect","maxConditionValue","minConditionValue","noConditional","ruleList","approvalOptions","saveAsEdit","public","private","nameNotEmpty","organizationNotEmpty","basicAttributes","processKeyValue","maintenanceOrg","release","update","string","integer","decimal","boolean","notSelected","variableNumberEmpty","variableNameEmpty","variableNumberNotStandard","tagNotEmpty","codeDuplicates","alreadyExists","number","participantSet","dataMovement1","dataMovement2","participantSelection","selectProcessVariables","selectVariableValueType","selectRelation","selectOrgType","orgFill","refOrgIdNotNull","refUserIdNotNull","repDefConfigured","atLeastOneCondition","dataFieldAliasNotNull","matrixConfigured","selectPerformer","definitionDeleted","matrixDeleted","selectParticipantInfo","noRowSelected","selectDefaultHandler","selectpotentialtHandler","positionType1","positionType2","positionType3","comp","parameters:","referencePerson:","referenceOrganization:","allocationPolicy","notifyRecipient","defaultHandler","new","alternativeHandler","alternativeScope","conditon","currentUnit","currentDepartment","variableOrganization","eventHandler","nodeName","enablingConditions","activityList","componentMethod","errorObtaining","serverSideNotFound","matrixPerformer","multivalue","enumSelection","refMatrixTable","matrixTable","notSelectEnum","performerOptions","leave","throwException","sys","administrative_staff","allPassExecutors","exclusionNotAllowed","approvalNotAllowed","approvalNotAllowedAsSet","allocationStrategyIsCollect","advancedOptions","defaultNotParticipate","automaticApprovalOptions","orgPosition","generalPosition","sysPositions","sysType","dept","sysUser","businessFields","usersName","definitionOfReport","regularUser","variablePart","administrative_organization","cantUseContext","oneself","orgPotentialOwner","optionSettings","global","option","range","limit","turnOffPrompt","note","messageSet","noCopy","messContent","procComplete","procAborted","procRollBack","workCreated","actComplete","actAborted","email","sms","cloudplus","positionParticipant","noTargetNode","noMessageNotifyAttribute!","messageNoticeEdit","workItemReceiveParticipant","smsMessageTemplateCode","processParticipantNotNull","activityDefIdNotNull","variableParticipantNotNull","optionalNodes","targetNodeList","optionalAttribute","messSendType","messSubject","recipient","posi","targetNodeOptions","outConnectNode","afterNodes","specifiedSet","firstNode","nullNode","specifyNode","noSetTargetNode","noSetSpecifyNode","listOfAdditional","pleaseSelect1","defaultNode","pleaseSelect2","defaultNodeList","imageSet","onlyView","reScanStart","reScanComplete","mutualExclusion","illustrate","expressionEditor","typeAsvariable","parameterSettings","formDefinitionList","processEmbeddedForm","formEmbedProcess","noForm","formOperations","methodParameters","selectFormActionConfig","selectFormAction","editParam","formEvents","buttonName","hidden","fieldName","saveFail","checkedRows","enableBtn","disabledBtn","hiddenBtn","btnBatchReset","editableBtn","readonlyBtn","requiredBtn","formBtn","formfield","apptag","functionMenu","formFormat","docFormatNumber","docFormatName","eventDefinition","pass","back","signalRef","dataLength","codeNotNull","nameNotNull","codeNotNumber","codeRepeat","entryFormEditor","base","foundation","absent","editComponentParameter","openComponentFail","paraRequired","execuTime","web","isAll","paramName","actionExisted","checkCondition","zhChs","zhCht","nodeEntry","enterErrorTips","activityBeforeCompletedValue","leaveErrorTips","targetNode","subProcessSet","inheritParent","autoCreation","variablesExpression","rteNull","orderProcess","radioGroupProcessType","processDef","radioGroupBillSource","autoCreationProcess","setOption","SameParentProcess","subProcessOpt","backwardRule","reEdit","initialActityId","precursorActivityId","empty","sequence","backToMe","backToCurrentNode","rejectedTo:","backScope","defaultPrompt","dynamicSelection","popover1","popover2","popover3","allowModification","assignmentRules","assignScope","assignScopeList","nodeList","assignPerformer","approvelItems","workFlowActionNotNull","approvalAction","remind","configTitle","showTitle","anonymousOpt","approver","activityComponent","longerExists","pleaseCheck","cmpName","operate","confirmDelete","newComponent","sameCmp","cmpMethod","executionTimeNotNull","PROCESSINSTANCE_SUSPENDED","PROCESSINSTANCE_RESUMED","PROCESSINSTANCE_ABORTED","PROCESSINSTANCE_CANCELED","PROCESSINSTANCE_REACTIVATED","PROCESSINSTANCE_ROLLBACK","PROCESSINSTANCE_RESUBMIT","ACTIVITY_AND_PARTICIPANT_UPDATED","PROCESSINSTANCE_ABORTED_BY_ADMIN","PROCESSINSTANCE_BEFORE_START","WORKITEM_BEFORE_COMPLETE","WORKITEM_AFTER_COMPLETE","ACTIVITY_ABORTED","WORKITEM_CREATED","WORKITEM_COMPLETED","WORKITEM_SUSPENDED","WORKITEM_RESUMED","WORKITEM_ABORTED","WORKITEM_RETRIEVED","WORKITEM_CLAIMED","WORKITEM_UNCLAIMED","ACTIVITY_ASSIGNMENT","deleteNotAllowed","prefabricated","sexpr","ɵ0$3","WfProcessEditorComponent","_time","procNameTitle","addEventBusListener","showLoading","addPropertyChangedHandler","focus","showModelButton","shiftKey","createEditorUi","processCategoryId","procCategory","editorUiContainerER","procType","delay","openProcContent","addEditorUiListeners","getProperty","CellsInserted","CELLS_REMOVED","EventBusKeys","propertyPanel","propertyChanged","updateChangeProperty","changeObject","changedFlag","bindEntryFormInfo","updateProperty","completeStrategyChanged","flowformId","ConvertExecuteForm","processKey","openNewProcess","getProcContent","checkModelContent","openProcess","formFormat2ExecuteForm","flowFormName","props","flag","closeLoading","addGraphModelChangedListener","BpmnModel","CHANGE","questionOKHandle","showVerify","errorList","createValidationTips","save","saveHttp","ProcDefs","maxVersion","Infinity","loadService","appForm","formformat","strategy","dialog_1","OtherAssignNodesChanged","modelBizDefKey","extensionElements","showModeChange","idePropertyPanel","ShowMode","panel","wideWidth","smallWidth","panelWidth","rightPanelWidth","clearValidationTips","BpmnElementId","rzStop","verifySer","verifyContainer","createVerify","contentEl","verifyList","verifyType","tabTypeList","showList","showType","verifyResultTipsTmpl","tipsTmpl","listclick","validatorClick","showchange","listshowChange","el","execCommand","ViewContainerRef","iconCls","iconStyle","propertyPanelResizable","VerifyDetailService","AssignPerformerConfigComponent","allowGlobalAssign","JumpScopePipe","nodeId","UsersNamePipe","UsersIdPipe","PROCESS_DESIGNER_APP_PROVIDERS","PROCESS_DESIGNER_DOMAIN_PROVIDERS","PROCESS_DESIGNER_PART_PROVIDERS","CallActivitySubProcessComponent","FormFormat","FormFormatConfig","formMethodConfigs","FormButtonConfig","FormFieldConfig","FormMethodConfig","FormOperationConfigComponent","_fromFormatId","getFormMethods","methodsDialog","formMethods","methodSelected","methodGrid","formFormatConfigId","methodCols","FormFormatConfigComponent","_formFormatId","_formatConfigId","buttonCols","btnEnable","hAlign","btnDisabled","btnHidden","fieldCols","fieldEditable","fieldReadonly","fieldHidden","fieldRequired","getConfig","setBtnAndFieldConfigs","extendComponentRef","saveConfig","formButtonConfigs","formFieldConfigs","operationConfig","searchData","serchFields","fieldTree","btnConfigChange","buttonConfigs","btnGrid","updateRow","btnBatchOperate","checkeds_1","checkeds_1_1","formButtons","buttonState","checkeds_2","checkeds_2_1","fieldConfigChange","fieldSwitchChange","fieldConfigs","fieldConfigs_1","fieldConfigs_1_1","fieldBatchOperate","checkeds_3","checkeds_3_1","fieldBatchReset","checkeds_4","checkeds_4_1","formatFieldList","resetFieldConfig","fieldConfigs_2","fieldConfigs_2_1","fieldState","result$","Observable","innerValidator","btn","btnConfig","getFieldConfigs","fieldConfigs_3","fieldConfigs_3_1","fd","fieldConfig","getFormFormatType","getFormFormatConfig","formFormatType","extendImpl","showExtendTab","createExtendComponent","convertFormFormat","btnConfigs","btnConfigs_1","btnConfigs_1_1","formFields","orgFieldConfigs","configs","configs_1","configs_1_1","setFieldConfig","selectorCmp","moduleRef","componentFactoryResolver","cmpFactory","insert","hostView","bootstrapComponent","formFields_1","formFields_1_1","fieldConfigs_4","fieldConfigs_4_1","encodeURI","convertformFields","getFormatFieldList","formFields_2","formFields_2_1","formFields_3","formFields_3_1","getFormatField","formFields_4","formFields_4_1","FormConfigContainerComponent","ngOnChanges","changes","showComponentRef","createWFComponentRef","FromBE","FromVO","FromNone","CommonModelTypeHelper","getCommonModelType","cm","CommonModelUtil","GetGeneratedConfigID","judgeVoTemplateType","gspViewModel","IsVirtual","TemplateVoInfo","TemplateVoId","VOTemplateType","ProcHelpQuerySolutionComponent","processNameChange","sysInitChange","selectUpBill","clearUpBill","upVODto","upVO","MainObject","selectDownBill","clearDownBill","downVODto","downVO","clearProcessName","clearProcessType","clearIsEnabled","clearIsPublished","clearSysInit","clickBtnFilter","onSearchEmitter","clickBtnClear","queryParamChange","comboSysInitIdField","comboSysInitValueField","comboSysInitTextField","comboSysInitData","AifUiCommonModule","forRoot","ngModule","NgModule","declarations","exports","imports","CommonModule","HttpClientModule","MetadataRTSelectModule","GSPMetadataRTServiceModule","FResponseToolbarModule","ListFilterModule","AngularDraggableModule","FarrisCommonModule","FarrisFormsModule","FarrisSectionModule","DatagridEditorsModule","DatagridModule","EditorProviders","ComboListModule","InputGroupModule","FarrisDialogModule","SwitchModule","FarrisTabsModule","LookupModule","LoadingModule","NotifyModule","MessagerModule","ModalModule","CacheService","FrmEventBus","FuncsService","entryComponents","ProcessListHelpModule","ActivityExecutorPipe","VariableNamePipe","localStorage","getItem","BillTypeHelpModule","FormsModule","ReactiveFormsModule","TreeTableModule","PaginationModule","SplitterModule","LanguageTextboxModule","ɵ0$4","TranslateResolveService","resolve","route","curLanguage","getTranslation","RouterModule","forChild","path","WfProcessEditorRoutingModule","WfLocaleModule","HttpLoaderFactory","TranslateHttpLoader","ɵ1","ɵ2","WfProcessEditorModule","TranslateModule","loader","TranslateLoader","useFactory","deps","HttpClient","SysManagerUIModule","RtfAppHelpModule","CommonComponentUiModule","DataTableModule","LayoutModule","FlexLayoutModule","FarrisPanelModule","FarrisResponsiveModule","ExpressionModule","PropertyPanelModule","PopoverModule","FarrisDropdownModule","PersonnelSelectorDataGridEditorProvider","WizardModule","WfBizprocessLookupModule","NumberSpinnerModule","PerfectScrollbarModule","FarrisButtonModule","ComboLookupModule","SysmgrLookupModule","FDropdownDirectiveTypeModule","VerifyDetailModule","FarrisHtmlEditorModule","WfTaskHandlerModule","DatagridFilterRowModule","DataEntityModule","BizProcessApiModule","PersonnelSelectorModule","ɵ0$5","RTProcessInfo"],"mappings":"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AAAA,mBACAsB,GAAAA,eACAvB,GAAAA,iBACAI,GAAAA,aACAgD,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,uBACAhE,GAAAA,uBACAiE,EAAAA,iBACAC,EAAAA,oBACArD,GAAAA,iBACAE,GAAAA,cAAczB,QAAQ,CACpB/1G,QAAS,Q,CACV,EACD03G,EAAAA,eAAe3B,QAAQ,CACrB30G,MAAO,G,CACR,EACDu2G,EAAAA,YACAiD,EAAAA,cACAnC,GAAAA,iBACAoC,EAAAA,qBACA9D,EAAAA,sBACAC,GAAAA,eAAejB,QAAOpnH,EACjBsoH,EAAAA,gBAAe,CAClB6D,GAAAA,wC,GAEF5D,GAAAA,gBACA6D,EAAAA,aACAlE,GAAAA,kBACAQ,GAAAA,aACA2D,GAAAA,yBACAC,GAAAA,oBACAC,EAAAA,uBACApE,GAAAA,oBACAqE,GAAAA,mBACAnD,GACAK,GACA8C,GAAAA,mBACAC,GAAAA,kBACAC,GAAAA,mBACAC,EAAAA,6BACA3C,GAAAA,sBACA4C,GAAAA,mBACAC,GAAAA,uBACAC,GAAAA,oBACAC,EAAAA,wBAAwB3F,QAAO,EAC/BD,GACA6F,GAAAA,iBACAC,GAAAA,oBACAC,GAAAA,wBACAxC,GACAC,IAEF94G,UAAW,CACTgJ,EAAAA,eACArR,EAAAA,YACAkR,EAAAA,kBACAI,EAAAA,2BACAqiG,GACAC,GACAC,GACA1sE,GACA1lC,EACAqoC,GACAurB,GACA7nB,GACA,CAAEr0B,QAASvhB,EAAAA,UAAWsiC,SAAQypF,EAAkD,EAChF,CAAExqG,QAASxiB,EAAmBujC,SAAQonF,EAAkC,EACxEzqH,EACA6pH,GACAv2F,GACA2I,GACA,CAAE3Z,QAAS0Z,GAAoBqH,SAAQqnF,EAAsC,GAE/EvD,QAAS,CAACzQ,GAA0BtzD,IACpC2lE,gBAAiB,CACf14G,GACA65B,GACAsyE,GACAj3E,GACAoD,GACA/kB,GACA+mB,GACA+B,GACAzxB,GACArC,GAAAA,0BACAwnC,GACA5D,GACA7L,GACAsB,GACAve,GACAwqB,GACAxK,GACApuB,GACA2pC,GACAjJ,GACA7+B,GACAV,GACAw2F,GACA1rF,GACA5C,GACA4uC,GACAzW,GACA57B,GACAg8B,GACAn/B,GACAI,GACA8R,GACAhE,GACAqD,GACAlZ,GACA69F,GACAiG,GACAphG,GACA06F,GACA/1D,GACAe,GACAmf,GACA/wB,GACAN,GACAplB,GACAmnC,GACAz9B,GACA+/B,GACA3f,GACArf,GACAktB,GACAO,GACAr2B,GACAhd,GACA4lC,GACAujB,GACAvV,GACA/mC,GACAsgD,GACAc,GACAnZ,GACAtrB,GACA6qD,GACAh+B,GACAhJ,G,EAEH,GACoCunE,IA/OrC,SAAAA,MCnJAoC,GAAA,a,saCEI9kC,WAAa,aAIbC,KAAO,OAIP5nD,WAAa,aAIb6nD,QAAU,S"}