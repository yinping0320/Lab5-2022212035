export declare const WF_PROCESS_EDITOR_LANG_RESOURCES: {
    "zh-CHS": {
        "validate": {
            "noProcessHeader": string;
            "cmpsEmpty": string;
            "cmpsEmptyMsg": string;
            "directNoPf": string;
            "directNoPfMsg": string;
            "noLoadDataCmp": string;
            "noLoadDataCmpMsg": string;
            "noStartCmp": string;
            "noStartCmpMsg": string;
            "lackProcessCompleteCmp": string;
            "lackProcessCompleteCmpMsg": string;
            "lackProcessAbortCmp": string;
            "lackProcessAbortCmpMsg": string;
            "lackProcessCancelCmp": string;
            "lackProcessCancelCmpMsg": string;
            "lackProcessBackCmp": string;
            "lackProcessBackCmpMsg": string;
            "lackProcessReStartCmp": string;
            "lackProcessReStartCmpMsg": string;
            "parallelGatewayCheck": string;
            "parallelGatewayCheckMsg": string;
            "approvalPerformerCheck": string;
            "noVariable1": string;
            "noVariable2": string;
            "activity": string;
            "noStartActivity": string;
            "noExclusiveGateway": string;
            "noParallelGateway": string;
            "noUserActivity": string;
            "noOperationActivity": string;
            "noNotifyActivity": string;
            "noCallActivitySubProcess": string;
            "noAutoActivity": string;
            "noIntermediateCatchEvent": string;
            "noMessageActivity": string;
            "noAifCreationBillActivity": string;
            "noEndEvent": string;
            "mark": string;
            "noFlowNodeChsName": string;
            "nameExceedsLengthLimit": string;
        };
        "processEditor": {
            "tip": string;
            "showButton": string;
            "changeRecord": string;
            "noDtInfo": string;
            "noRtInfo": string;
            "wrongMoment": string;
            "prompted": string;
            "saveSuccess": string;
            "waitReview": string;
            "successPublish": string;
            "publishFail": string;
            "policyConflict": string;
            "noPermissionToSave": string;
            "closeProc1": string;
            "closeProc2": string;
            "viewModel": string;
            "copied": string;
            "button": {
                "saveProc": string;
                "releaseProc": string;
                "sync": string;
                "saveAs": string;
                "procRecord": string;
                "viewProcModel": string;
                "closeProc": string;
            };
        };
        "designer": {
            "wfEditorUi": {
                "basicElements": string;
                "readOnly": string;
            };
            "wfProcessCell": {
                "basicInfo": string;
                "name": string;
                "nameLanguage": string;
                "key": string;
                "entryForm": string;
                "startMode": string;
                "wfTitle": string;
                "formDef": string;
                "formsPC": string;
                "formsMobile": string;
                "process": string;
                "advanced": string;
                "basic": string;
                "wfComponent": string;
                "otherConfig": string;
                "processVariables": string;
                "basicElements": string;
                "customizeAction": string;
                "timelinessInfo": string;
                "enablePriority": string;
                "enableWholeOrderRetrieve": string;
                "messageProperty": string;
                "timeLimitControl": string;
                "messageNotice": string;
                "extendProperty": string;
                "directTips": string;
                "externalTips": string;
                "subprocessTips": string;
            };
            "WfSequenceFlowEdge": {
                "basicInfo": string;
                "basic": string;
                "name": string;
                "nameLanguage": string;
                "id": string;
                "condition": string;
                "ConditionExpression": string;
                "default": string;
            };
            "wfSidebar": {
                "bizactivitylib": string;
            };
        };
        "app": {
            "processDesigner": {
                "all": string;
                "assign": string;
                "claim": string;
                "preempt": string;
                "parallel": string;
                "sequential": string;
                "true": string;
                "false": string;
                "dataId": string;
                "procInstId": string;
                "bizDefKey": string;
                "processDefinitionKey": string;
                "procInstCreator": string;
                "businessCreator": string;
                "procInstDescription": string;
                "comment": string;
                "bizDefName": string;
                "curLoginUsername": string;
                "procInstCreatorName": string;
                "currentParticipantId": string;
                "currentParticipantName": string;
                "currentUser": string;
                "preActExecutors": string;
                "collectionElementVariable": string;
                "subCollectionElementVariable": string;
                "nrOfInstances": string;
                "nrOfCompletedInstances": string;
                "nrOfActiveInstances": string;
                "nrOfForward": string;
                "nrOfBackward": string;
                "nrOfAbort": string;
                "conclusionType": string;
                "conclusionValue": string;
                "directSuperior": string;
                "higherSuperior": string;
                "DIRECT": string;
                "EXTERNAL_PROCESS": string;
                "SUB_PROCESS": string;
                "ALL": string;
                "WEB": string;
                "APP": string;
                "conclusionTypeTips": string;
                "conclusionValueTips": string;
                "copy": string;
                "saveAs": string;
                "tips": string;
                "saveAsSuccess": string;
                "saveAsFail": string;
                "syncDt": string;
                "syncSuccess": string;
                "beforeCompleteStrategyChange": string;
                "releaseProcess": string;
                "auto": string;
                "push": string;
                "pull": string;
                "creation": string;
            };
        };
        "multiInstanceLoopCharacteristics": {
            "loopCharacteristics": string;
            "set": string;
            "notSet": string;
            "isEnable": string;
            "isSequential": string;
            "loopCardinality": string;
            "completionConditionRules": string;
            "promptAct1": string;
            "promptAct2": string;
            "promptProc1": string;
            "promptProc2": string;
            "checkPrompt": string;
            "conditionRulesSet": string;
            "completionConditionRulesList": {
                "forward": string;
                "backward": string;
                "abort": string;
            };
        };
        "component": {
            "optins": {
                "wfOptions": string;
                "specified": string;
                "dynamic": string;
                "set": string;
                "notSet": string;
                "subProcessType": string;
                "processType": string;
                "bizDef": string;
                "procDef": string;
                "clickCancel": string;
                "clickOk": string;
            };
            "voConfig": {
                "documentInfo": string;
                "viewModelSelection": string;
                "cancel": string;
                "clickOk": string;
                "selectOne": string;
                "documentTypeSelect": string;
                "set": string;
                "notSet": string;
                "viewModel": string;
                "documenttype": string;
                "placeholder": string;
            };
            "variableSetting": {
                "constant": string;
                "expression": string;
                "component": string;
                "ACTIVITY_STARTED": string;
                "ACTIVITY_COMPLETED": string;
                "varAssign": string;
                "varNumber": string;
                "REQUIRED": string;
                "varName": string;
                "valueType": string;
                "executionTime": string;
                "valueText": string;
                "processVariables": string;
                "notSelectedVar": string;
                "valueCannotEmpty": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "serialNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "inconsistentParameters": string;
                "methodNotExist": string;
                "parameterName": string;
                "parameterValue": string;
                "methodnotSelected": string;
                "metadataNotExist": string;
                "errorObtainComponent": string;
                "componentSelection": string;
                "componentName": string;
                "parameterList": string;
                "lineNumber": string;
            };
            "urgeHandleRule": {
                "urgentApproval": string;
                "pleaseApprove": string;
                "soOn": string;
                "urgeHandle": string;
                "noSendingMethod": string;
                "setMessageTemplate": string;
                "codeEmpty": string;
                "noMessageSubject": string;
                "noMessageContent": string;
                "earliestTimeNotEmpty": string;
                "minimumTimeNotEmpty": string;
                "set": string;
                "notSet": string;
                "enableUrgeHandle": string;
                "timeSetting": string;
                "earliestTime": string;
                "minimumInterval": string;
                "sendingMethod": string;
                "messageSubject": string;
                "supportEditing": string;
                "messageContent": string;
                "displayReminder": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "titleExpression": {
                "zh-CHS": string;
                "zh-CHT": string;
                "en": string;
                "taskDescription": string;
                "set": string;
                "notSet": string;
                "currentLanguage": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "timeLimitControl": {
                "timedOutOperation": string;
                "constant": string;
                "scope": string;
                "day": string;
                "hour": string;
                "minute": string;
                "BeforeDuration": string;
                "OnDuration": string;
                "AfterDuration": string;
                "SendMessageExpireOperation": string;
                "AutoHandleExpireOperation": string;
                "curDay": string;
                "durationType": string;
                "required": string;
                "timeDuration": string;
                "timeUnit": string;
                "operationTypeName": string;
                "sendType": string;
                "onlyBeInteger": string;
                "setOperation": string;
                "setType": string;
                "setComments": string;
                "selectedOperation": string;
                "notSupportAutomatic": string;
                "warningMessage": string;
                "automaticProcessing": string;
                "set": string;
                "notSet": string;
                "timelinessControl": string;
                "isEnable": string;
                "taskDeadline": string;
                "timelyOperation": string;
                "actionList": string;
                "add": string;
                "remove": string;
                "clickCancel": string;
                "clickOK": string;
                "workItemParticipant": string;
                "procInstCreator": string;
                "to-doMessageTimeOut": string;
                "messageTimeOut": string;
                "agree": string;
            };
            "sendMessageOperation": {
                "procInstCreator": string;
                "workItemParticipant": string;
                "preActExecutors": string;
                "day": string;
                "hour": string;
                "minute": string;
                "cycleTimeNotEmpty": string;
                "sendMethodNotEmpty": string;
                "subjectNotEmpty": string;
                "contentNotEmpty": string;
                "recipientNotEmpty": string;
                "messageTemplate": string;
                "smsTemplateNumberNotEmpty": string;
                "cycleEnable": string;
                "cycleTime": string;
                "sendType": string;
                "subject": string;
                "message": string;
                "receiverVari": string;
                "sysUsers": string;
                "clickCancel": string;
                "clickOK": string;
                "opinionsNotEmpty": string;
                "processingNotEmpty": string;
                "automaticProcessSet": string;
                "automaticProcessMethod": string;
                "automaticOpinionHandle": string;
            };
            "smsMessageTemplate": {
                "smsTemplateContent": string;
                "code": string;
                "value": string;
                "noRowsSelected": string;
                "smsMessageTemplate": string;
                "tips1": string;
                "tips2": string;
                "tips3": string;
                "smsTemplateNumber": string;
                "smsVariableBinding": string;
                "addSmsVariable": string;
                "deleteSmsVariable": string;
            };
            "signRule": {
                "countersignRules": string;
                "byNumber": string;
                "byProportion": string;
                "customConditions": string;
                "value": string;
                "text": string;
                "conclusionName": string;
                "conclusionValue": string;
                "calculateType": string;
                "conditionValue": string;
                "waitAllVotes": string;
                "yes": string;
                "no": string;
                "notEmpty": string;
                "pleaseSelect": string;
                "maxConditionValue": string;
                "minConditionValue": string;
                "noConditional": string;
                "set": string;
                "ruleList": string;
                "approvalOptions": string;
                "clickCancel": string;
                "deleteRow": string;
                "clickOK": string;
            };
            "saveAsEdit": {
                "public": string;
                "private": string;
                "code": string;
                "name": string;
                "nameNotEmpty": string;
                "organizationNotEmpty": string;
                "organization": string;
                "basicAttributes": string;
                "processName": string;
                "processKeyValue": string;
                "maintenanceOrg": string;
                "accessLevel": string;
                "saveAsCancel": string;
                "saveAsOK": string;
            };
            "release": {
                "release": string;
                "update": string;
                "applicantName": string;
                "applicantDepartment": string;
                "procName": string;
                "procVersion": string;
                "releaseType": string;
                "textDetail": string;
                "saveAsCancel": string;
                "saveAsOK": string;
            };
            "processVariables": {
                "string": string;
                "integer": string;
                "decimal": string;
                "boolean": string;
                "constant": string;
                "expression": string;
                "component": string;
                "name": string;
                "required": string;
                "documentation": string;
                "basicType": string;
                "description": string;
                "tag": string;
                "valueText": string;
                "processVariables": string;
                "notSelected": string;
                "variableNumberEmpty": string;
                "variableNameEmpty": string;
                "variableNumberNotStandard": string;
                "tagNotEmpty": string;
                "codeDuplicates": string;
                "alreadyExists": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "number": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "participant": {
                "user": string;
                "variable": string;
                "position": string;
                "role": string;
                "component": string;
                "reportingLine": string;
                "matrix": string;
                "activityExecutor": string;
                "organization": string;
                "all": string;
                "assign": string;
                "claim": string;
                "currentUser": string;
                "procInstCreator": string;
                "participantSet": string;
                "order": string;
                "type": string;
                "performerName": string;
                "description": string;
                "condition": string;
                "dataMovement1": string;
                "dataMovement2": string;
                "participantSelection": string;
                "selectProcessVariables": string;
                "selectVariableValueType": string;
                "selectRelation": string;
                "selectPosition": string;
                "selectOrgType": string;
                "orgFill": string;
                "refOrgIdNotNull": string;
                "refUserIdNotNull": string;
                "repDefConfigured": string;
                "atLeastOneCondition": string;
                "dataFieldAliasNotNull": string;
                "matrixConfigured": string;
                "selectPerformer": string;
                "definitionDeleted": string;
                "matrixDeleted": string;
                "selectParticipantInfo": string;
                "noRowSelected": string;
                "selectDefaultHandler": string;
                "selectpotentialtHandler": string;
                "org": string;
                "positionType1": string;
                "positionType2": string;
                "positionType3": string;
                "comp": string;
                "parameters:": string;
                "referencePerson:": string;
                "referenceOrganization:": string;
                "condition1": string;
                "condition2": string;
                "condition3": string;
                "data": string;
                "set": string;
                "notSet": string;
                "allocationPolicy": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "notifyRecipient": string;
                "defaultHandler": string;
                "new": string;
                "editPerformer": string;
                "removePerformer": string;
                "clearPerformer": string;
                "moveUp": string;
                "moveDown": string;
                "alternativeHandler": string;
                "isAllScope": string;
                "clickCancel": string;
                "clickOK": string;
                "alternativeScope": string;
                "orgId": string;
                "includeChildren": string;
                "conditon": string;
                "currentUnit": string;
                "currentDepartment": string;
                "variableOrganization": string;
            };
            "activityExecutor": {
                "name": string;
                "eventHandler": string;
                "nodeName": string;
                "enablingConditions": string;
                "activityList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "componentPerformer": {
                "componentMethod": string;
                "methodNotExist": string;
                "code": string;
                "name": string;
                "description": string;
                "valueText": string;
                "help": string;
                "errorObtaining": string;
                "componentSelection": string;
                "metadataNotExist": string;
                "serverSideNotFound": string;
                "componentName": string;
                "componentSelect": string;
                "parameterList": string;
            };
            "matrixPerformer": {
                "code": string;
                "name": string;
                "help": string;
                "multivalue": string;
                "enumSelection": string;
                "refMatrixTable": string;
                "matrixTable": string;
                "curDataFieldValue": string;
                "conditionFields": string;
                "condition": string;
                "key": string;
                "value": string;
                "notSelectEnum": string;
                "cancel": string;
                "onConfirm": string;
                "lineNumber": string;
            };
            "performerOptions": {
                "leave": string;
                "throwException": string;
                "sys": string;
                "administrative_staff": string;
                "procInstCreator": string;
                "preActExecutors": string;
                "allPassExecutors": string;
                "performerOptions": string;
                "exclusionNotAllowed": string;
                "approvalNotAllowed": string;
                "approvalNotAllowedAsSet": string;
                "allocationStrategyIsCollect": string;
                "set": string;
                "advancedOptions": string;
                "historicFirst": string;
                "noPerformerStrategy": string;
                "excludeProcInstCreator": string;
                "defaultNotParticipate": string;
                "excludePreActExecutors": string;
                "excludeAllPassExecutors": string;
                "excludeExprPerformer": string;
                "variableOrgTypes": string;
                "automaticApprovalOptions": string;
                "autoProcInstCreator": string;
                "autoPreActExecutors": string;
                "autoAllPassExecutors": string;
                "cancel": string;
                "clickOK": string;
            };
            "positionPerformer": {
                "orgPosition": string;
                "generalPosition": string;
                "sysPositions": string;
                "positionType": string;
                "role": string;
                "position": string;
                "sysType": string;
                "placeholder": string;
                "orgId": string;
                "condition": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "reportingLine": {
                "higherSuperior": string;
                "directSuperior": string;
                "code": string;
                "name": string;
                "dept": string;
                "sysUser": string;
                "employee": string;
                "businessFields": string;
                "defName": string;
                "dimension": string;
                "curReportingRefer": string;
                "usersName": string;
                "refOrgId": string;
                "condition": string;
                "definitionOfReport": string;
            };
            "userPerformer": {
                "regularUser": string;
                "variablePart": string;
                "sys": string;
                "administrative_organization": string;
                "cantUseContext": string;
                "user": string;
                "variable": string;
                "condition": string;
            };
            "variablePerformer": {
                "sys": string;
                "administrative_staff": string;
                "oneself": string;
                "administrative_organization": string;
                "cantUseContext": string;
                "processVariables": string;
                "variableOrgTypes": string;
                "relationShipType": string;
                "condition": string;
            };
            "orgPotentialOwner": {
                "optionSettings": string;
                "global": string;
                "currentUnit": string;
                "currentDepartment": string;
                "addSignBehind": string;
                "addSignFront": string;
                "transfer": string;
                "notify": string;
                "set": string;
                "notSet": string;
                "option": string;
                "enable": string;
                "range": string;
                "orgId": string;
                "variableOrganization": string;
                "includeChildren": string;
                "clickCancel": string;
                "clickOK": string;
                "limit": string;
                "turnOffPrompt": string;
            };
            "note": {
                "placeholder": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "MessageNotice": {
                "notify": string;
                "subject": string;
                "content": string;
                "sendTime": string;
                "sendType": string;
                "receiverText": string;
                "procInstCreator": string;
                "workItemParticipant": string;
                "messageSet": string;
                "selectedRow": string;
                "noCopy": string;
                "batchCopy": string;
                "set": string;
                "notSet": string;
                "add": string;
                "edit": string;
                "delete": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "messContent": string;
                "procComplete": string;
                "procAborted": string;
                "procRollBack": string;
                "workCreated": string;
                "actComplete": string;
                "actAborted": string;
                "email": string;
                "sms": string;
                "cloudplus": string;
                "processParticipant": string;
                "variableParticipant": string;
                "userParticipant": string;
                "positionParticipant": string;
                "activityExecutorParticipant": string;
                "sys": string;
                "administrative_organization": string;
                "name": string;
                "noTargetNode": string;
                "noMessageNotifyAttribute!": string;
            };
            "messageNoticeEdit": {
                "procInstCreator": string;
                "activityExecutorParticipant": string;
                "workItemParticipant": string;
                "sys": string;
                "administrative_organization": string;
                "processParticipant": string;
                "workItemReceiveParticipant": string;
                "variableParticipant": string;
                "userParticipant": string;
                "positionParticipant": string;
                "sendType": string;
                "smsMessageTemplate": string;
                "smsMessageTemplateCode": string;
                "sendTime": string;
                "subject": string;
                "content": string;
                "receivers": string;
                "processParticipantNotNull": string;
                "activityDefIdNotNull": string;
                "variableParticipantNotNull": string;
                "orgType": string;
                "userIds": string;
                "positionId": string;
                "activityList": string;
                "position": string;
                "optionalNodes": string;
                "targetNodeList": string;
                "placeholder": string;
                "optionalAttribute": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "messSendType": string;
                "messSubject": string;
                "enable": string;
                "messContent": string;
                "recipient": string;
                "addReceiver": string;
                "organization": string;
                "posi": string;
            };
            "jumpScope": {
                "targetNodeOptions": string;
                "name": string;
                "outConnectNode": string;
                "global": string;
                "afterNodes": string;
                "specifiedSet": string;
                "firstNode": string;
                "nullNode": string;
                "specifyNode": string;
                "noSetTargetNode": string;
                "noSetSpecifyNode": string;
                "selectedRow": string;
                "optionalNodes": string;
                "listOfAdditional": string;
                "pleaseSelect1": string;
                "defaultNode": string;
                "pleaseSelect2": string;
                "defaultNodeList": string;
                "clickCancel": string;
                "clickOK": string;
                "set": string;
            };
            "imageSet": {
                "imageSet": string;
                "onlyView": string;
                "edit": string;
                "reScanStart": string;
                "reScanComplete": string;
                "mutualExclusion": string;
                "set": string;
                "notSet": string;
                "imageOperation": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "extendProperty": {
                "extendProperty": string;
                "true": string;
                "false": string;
                "set": string;
                "notSet": string;
                "illustrate": string;
                "placeholder": string;
                "cancel": string;
                "clickOK": string;
            };
            "expressionEditor": {
                "expressionEditor": string;
                "notSet": string;
                "clickCancel": string;
                "changeType": string;
                "clickOK": string;
            };
            "executeForms": {
                "executeForms": string;
                "parameters": string;
                "typeAsvariable": string;
                "parameterSettings": string;
                "formDefinitionList": string;
                "notSet": string;
                "default": string;
                "processEmbeddedForm": string;
                "formEmbedProcess": string;
                "clickCancel": string;
                "clickOK": string;
                "noForm": string;
                "form": string;
                "placeholder": string;
                "parametersSet": string;
                "key": string;
                "name": string;
                "lineNumber": string;
                "code": string;
                "tag": string;
                "value": string;
                "variable": string;
                "constant": string;
                "expression": string;
                "method": string;
                "methodName": string;
                "description": string;
                "workFlowAction": string;
                "formOperations": string;
                "executionTime": string;
                "sortOrder": string;
                "methodParameters": string;
                "selectFormActionConfig": string;
                "selectFormAction": string;
                "editParam": string;
                "formEvents": string;
                "buttonName": string;
                "enable": string;
                "disabled": string;
                "hidden": string;
                "fieldName": string;
                "editable": string;
                "readonly": string;
                "required": string;
                "saveFail": string;
                "checkedRows": string;
                "checkeds": string;
                "enableBtn": string;
                "disabledBtn": string;
                "hiddenBtn": string;
                "btnBatchReset": string;
                "editableBtn": string;
                "readonlyBtn": string;
                "requiredBtn": string;
                "add": string;
                "delete": string;
                "other": string;
                "formBtn": string;
                "formfield": string;
                "apptag": string;
                "functionMenu": string;
                "formFormat": string;
                "docFormatNumber": string;
                "docFormatName": string;
                "selectedRow": string;
                "set": string;
            };
            "eventDefinition": {
                "eventDefinition": string;
                "pass": string;
                "back": string;
                "abort": string;
                "signalRef": string;
                "name": string;
                "triggerAction": string;
                "selectedRow": string;
                "dataLength": string;
                "codeNotNull": string;
                "nameNotNull": string;
                "codeNotNumber": string;
                "codeRepeat": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "entryFormEditor": {
                "flowForm": string;
                "code": string;
                "name": string;
                "base": string;
                "foundation": string;
                "extend": string;
                "selectedRow": string;
                "absent": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "editComponentParameter": {
                "code": string;
                "name": string;
                "required": string;
                "yes": string;
                "no": string;
                "value": string;
                "openComponentFail": string;
                "componentSelection": string;
                "curComponent": string;
                "executionTime": string;
                "para": string;
                "paraRequired": string;
                "execuTime": string;
                "parameterList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "customizeAction": {
                "customizeAction": string;
                "app": string;
                "web": string;
                "all": string;
                "name": string;
                "code": string;
                "terminalType": string;
                "isAll": string;
                "yes": string;
                "no": string;
                "paramName": string;
                "valueText": string;
                "value": string;
                "addActions": string;
                "actionExisted": string;
                "selectedRow": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "parameterList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "checkCondition": {
                "zhChs": string;
                "zhCht": string;
                "en": string;
                "checkCondition": string;
                "set": string;
                "notSet": string;
                "nodeEntry": string;
                "activityBeforeStarted": string;
                "enterErrorTips": string;
                "activityBeforeCompleted": string;
                "activityBeforeCompletedValue": string;
                "leaveErrorTips": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "batchSet": {
                "targetNode": string;
                "addSignFront": string;
                "addSignBehind": string;
                "transfer": string;
                "notify": string;
                "backWardRule": string;
                "name": string;
            };
            "subProcess": {
                "subProcessSet": string;
                "specified": string;
                "dynamic": string;
                "inheritParent": string;
                "autoCreation": string;
                "variablesExpression": string;
                "rteNull": string;
                "orderProcess": string;
                "clickOk": string;
                "clickCancel": string;
                "inheritBizDataId": string;
                "set": string;
                "notSet": string;
                "radioGroupProcessType": string;
                "flowForm": string;
                "processDef": string;
                "radioGroupBillSource": string;
                "autoCreationProcess": string;
                "bizDataId": string;
                "setOption": string;
                "SameParentProcess": string;
                "setBizDataId": string;
                "subProcessOpt": string;
            };
            "backwardRule": {
                "reEdit": string;
                "backwardRule": string;
                "initialActityId": string;
                "precursorActivityId": string;
                "empty": string;
                "name": string;
                "id": string;
                "sequence": string;
                "backToMe": string;
                "backToCurrentNode": string;
                "popover": string;
                "selectAbleClick": string;
                "dictPicked": string;
                "set": string;
                "notSet": string;
                "rejectedTo:": string;
                "backScope": string;
                "defaultPrompt": string;
                "title": string;
                "dynamicSelection": string;
                "resubmitEffectOptions": string;
                "popover1": string;
                "popover2": string;
                "popover3": string;
                "allowModification": string;
                "clickCancel": string;
                "clickOk": string;
            };
            "assignStrategy": {
                "all": string;
                "assign": string;
                "claim": string;
                "currentUser": string;
                "procInstCreator": string;
                "assignStrategy": string;
                "option": string;
                "assignmentRules": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "assignScope": {
                "assignScopeList": string;
                "required": string;
                "yes": string;
                "no": string;
                "condition": string;
                "add": string;
                "delete": string;
                "name": string;
                "deleteRow": string;
                "curActivity": string;
                "set": string;
                "notSet": string;
                "nodeList": string;
                "moveUp": string;
                "moveDown": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "assignPerformer": {
                "currentUser": string;
                "procInstCreator": string;
                "global": string;
                "currentUnit": string;
                "currentDepartment": string;
                "assignPerformer": string;
                "set": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "approvelItems": {
                "approvalOptions": string;
                "forward": string;
                "backward": string;
                "abort": string;
                "value": string;
                "text": string;
                "workFlowAction": string;
                "isDefault": string;
                "no": string;
                "yes": string;
                "commentNecessary": string;
                "attachmentNecessary": string;
                "certification": string;
                "signatureNecessary": string;
                "defaultComment": string;
                "zh-CHS": string;
                "zh-CHT": string;
                "en": string;
                "workFlowActionNotNull": string;
                "deleteRow": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
                "approvalAction": string;
                "lineNumber": string;
            };
            "approvalPivot": {
                "remind": string;
                "type": string;
                "condition": string;
                "title": string;
                "description": string;
                "approvalPivot": string;
                "selectedRow": string;
                "configTitle": string;
                "set": string;
                "notSet": string;
                "enable": string;
                "expand": string;
                "showTitle": string;
                "list": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "anonymousSet": {
                "anonymousOpt": string;
                "approver": string;
                "set": string;
                "notSet": string;
                "anonymousSet": string;
                "isAnonymity": string;
                "anonymous": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "activityList": {
                "name": string;
                "checkeds": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "activityComponent": {
                "component": string;
                "method": string;
                "inconsistentParameters": string;
                "longerExists": string;
                "absent": string;
                "pleaseCheck": string;
                "edit": string;
                "deleteRow": string;
                "executionTime": string;
                "cmpName": string;
                "metadataId": string;
                "methodCode": string;
                "isForCompensation": string;
                "yes": string;
                "no": string;
                "operate": string;
                "code": string;
                "name": string;
                "value": string;
                "editComponent": string;
                "confirmDelete": string;
                "curComponent": string;
                "newComponent": string;
                "sameCmp": string;
                "cmpMethod": string;
                "executionTimeNotNull": string;
                "param": string;
                "required": string;
                "set": string;
                "notSet": string;
                "PROCESSINSTANCE_STARTED": string;
                "PROCESSINSTANCE_SUSPENDED": string;
                "PROCESSINSTANCE_RESUMED": string;
                "PROCESSINSTANCE_COMPLETED": string;
                "PROCESSINSTANCE_ABORTED": string;
                "PROCESSINSTANCE_CANCELED": string;
                "PROCESSINSTANCE_REACTIVATED": string;
                "PROCESSINSTANCE_ROLLBACK": string;
                "PROCESSINSTANCE_RESUBMIT": string;
                "ACTIVITY_AND_PARTICIPANT_UPDATED": string;
                "PROCESSINSTANCE_ABORTED_BY_ADMIN": string;
                "PROCESSINSTANCE_BEFORE_START": string;
                "WORKITEM_BEFORE_COMPLETE": string;
                "WORKITEM_AFTER_COMPLETE": string;
                "LOADDATA": string;
                "ACTIVITY_STARTED": string;
                "ACTIVITY_COMPLETED": string;
                "ACTIVITY_ABORTED": string;
                "WORKITEM_CREATED": string;
                "WORKITEM_COMPLETED": string;
                "WORKITEM_SUSPENDED": string;
                "WORKITEM_RESUMED": string;
                "WORKITEM_ABORTED": string;
                "WORKITEM_RETRIEVED": string;
                "WORKITEM_CLAIMED": string;
                "WORKITEM_UNCLAIMED": string;
                "ACTIVITY_ASSIGNMENT": string;
                "deleteNotAllowed": string;
                "tips": string;
                "prefabricated": string;
                "add": string;
                "moveUp": string;
                "moveDown": string;
                "clickCancel": string;
                "clickOK": string;
            };
        };
    };
    "en": {
        "validate": {
            "noProcessHeader": string;
            "cmpsEmpty": string;
            "cmpsEmptyMsg": string;
            "directNoPf": string;
            "directNoPfMsg": string;
            "noLoadDataCmp": string;
            "noLoadDataCmpMsg": string;
            "noStartCmp": string;
            "noStartCmpMsg": string;
            "lackProcessCompleteCmp": string;
            "lackProcessCompleteCmpMsg": string;
            "lackProcessAbortCmp": string;
            "lackProcessAbortCmpMsg": string;
            "lackProcessCancelCmp": string;
            "lackProcessCancelCmpMsg": string;
            "lackProcessBackCmp": string;
            "lackProcessBackCmpMsg": string;
            "lackProcessReStartCmp": string;
            "lackProcessReStartCmpMsg": string;
            "parallelGatewayCheck": string;
            "parallelGatewayCheckMsg": string;
            "approvalPerformerCheck": string;
            "noVariable1": string;
            "noVariable2": string;
            "activity": string;
            "noStartActivity": string;
            "noExclusiveGateway": string;
            "noParallelGateway": string;
            "noUserActivity": string;
            "noOperationActivity": string;
            "noNotifyActivity": string;
            "noCallActivitySubProcess": string;
            "noAutoActivity": string;
            "noIntermediateCatchEvent": string;
            "noMessageActivity": string;
            "noAifCreationBillActivity": string;
            "noEndEvent": string;
            "mark": string;
            "noFlowNodeChsName": string;
            "nameExceedsLengthLimit": string;
        };
        "processEditor": {
            "tip": string;
            "showButton": string;
            "changeRecord": string;
            "noDtInfo": string;
            "noRtInfo": string;
            "wrongMoment": string;
            "prompted": string;
            "saveSuccess": string;
            "waitReview": string;
            "successPublish": string;
            "publishFail": string;
            "policyConflict": string;
            "noPermissionToSave": string;
            "closeProc1": string;
            "closeProc2": string;
            "viewModel": string;
            "copied": string;
            "button": {
                "saveProc": string;
                "releaseProc": string;
                "sync": string;
                "saveAs": string;
                "procRecord": string;
                "viewProcModel": string;
                "closeProc": string;
            };
        };
        "designer": {
            "wfEditorUi": {
                "basicElements": string;
                "readOnly": string;
            };
            "wfProcessCell": {
                "basicInfo": string;
                "name": string;
                "nameLanguage": string;
                "key": string;
                "entryForm": string;
                "startMode": string;
                "wfTitle": string;
                "formDef": string;
                "formsPC": string;
                "formsMobile": string;
                "process": string;
                "advanced": string;
                "basic": string;
                "wfComponent": string;
                "otherConfig": string;
                "processVariables": string;
                "basicElements": string;
                "customizeAction": string;
                "timelinessInfo": string;
                "enablePriority": string;
                "enableWholeOrderRetrieve": string;
                "messageProperty": string;
                "timeLimitControl": string;
                "messageNotice": string;
                "extendProperty": string;
                "directTips": string;
                "externalTips": string;
                "subprocessTips": string;
            };
            "WfSequenceFlowEdge": {
                "basicInfo": string;
                "basic": string;
                "name": string;
                "nameLanguage": string;
                "id": string;
                "condition": string;
                "ConditionExpression": string;
                "default": string;
            };
            "wfSidebar": {
                "bizactivitylib": string;
            };
        };
        "app": {
            "processDesigner": {
                "all": string;
                "assign": string;
                "claim": string;
                "preempt": string;
                "parallel": string;
                "sequential": string;
                "true": string;
                "false": string;
                "dataId": string;
                "procInstId": string;
                "bizDefKey": string;
                "processDefinitionKey": string;
                "procInstCreator": string;
                "businessCreator": string;
                "procInstDescription": string;
                "comment": string;
                "bizDefName": string;
                "curLoginUsername": string;
                "procInstCreatorName": string;
                "currentParticipantId": string;
                "currentParticipantName": string;
                "currentUser": string;
                "preActExecutors": string;
                "collectionElementVariable": string;
                "subCollectionElementVariable": string;
                "nrOfInstances": string;
                "nrOfCompletedInstances": string;
                "nrOfActiveInstances": string;
                "nrOfForward": string;
                "nrOfBackward": string;
                "nrOfAbort": string;
                "conclusionType": string;
                "conclusionValue": string;
                "directSuperior": string;
                "higherSuperior": string;
                "DIRECT": string;
                "EXTERNAL_PROCESS": string;
                "SUB_PROCESS": string;
                "ALL": string;
                "WEB": string;
                "APP": string;
                "conclusionTypeTips": string;
                "conclusionValueTips": string;
                "copy": string;
                "saveAs": string;
                "tips": string;
                "saveAsSuccess": string;
                "saveAsFail": string;
                "syncDt": string;
                "syncSuccess": string;
                "beforeCompleteStrategyChange": string;
                "releaseProcess": string;
                "auto": string;
                "push": string;
                "pull": string;
                "creation": string;
            };
        };
        "multiInstanceLoopCharacteristics": {
            "loopCharacteristics": string;
            "set": string;
            "notSet": string;
            "isEnable": string;
            "isSequential": string;
            "loopCardinality": string;
            "completionConditionRules": string;
            "promptAct1": string;
            "promptAct2": string;
            "promptProc1": string;
            "promptProc2": string;
            "checkPrompt": string;
            "conditionRulesSet": string;
            "completionConditionRulesList": {
                "forward": string;
                "backward": string;
                "abort": string;
            };
        };
        "component": {
            "optins": {
                "wfOptions": string;
                "specified": string;
                "dynamic": string;
                "set": string;
                "notSet": string;
                "subProcessType": string;
                "processType": string;
                "bizDef": string;
                "procDef": string;
                "clickCancel": string;
                "clickOk": string;
            };
            "voConfig": {
                "documentInfo": string;
                "viewModelSelection": string;
                "cancel": string;
                "clickOk": string;
                "selectOne": string;
                "documentTypeSelect": string;
                "set": string;
                "notSet": string;
                "viewModel": string;
                "documenttype": string;
                "placeholder": string;
            };
            "variableSetting": {
                "constant": string;
                "expression": string;
                "component": string;
                "ACTIVITY_STARTED": string;
                "ACTIVITY_COMPLETED": string;
                "varAssign": string;
                "varNumber": string;
                "REQUIRED": string;
                "varName": string;
                "valueType": string;
                "executionTime": string;
                "valueText": string;
                "processVariables": string;
                "notSelectedVar": string;
                "valueCannotEmpty": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "serialNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "inconsistentParameters": string;
                "methodNotExist": string;
                "parameterName": string;
                "parameterValue": string;
                "methodnotSelected": string;
                "metadataNotExist": string;
                "errorObtainComponent": string;
                "componentSelection": string;
                "componentName": string;
                "parameterList": string;
                "lineNumber": string;
            };
            "urgeHandleRule": {
                "urgentApproval": string;
                "pleaseApprove": string;
                "soOn": string;
                "urgeHandle": string;
                "noSendingMethod": string;
                "setMessageTemplate": string;
                "codeEmpty": string;
                "noMessageSubject": string;
                "noMessageContent": string;
                "earliestTimeNotEmpty": string;
                "minimumTimeNotEmpty": string;
                "set": string;
                "notSet": string;
                "enableUrgeHandle": string;
                "timeSetting": string;
                "earliestTime": string;
                "minimumInterval": string;
                "sendingMethod": string;
                "messageSubject": string;
                "supportEditing": string;
                "messageContent": string;
                "displayReminder": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "titleExpression": {
                "zh-CHS": string;
                "zh-CHT": string;
                "en": string;
                "taskDescription": string;
                "set": string;
                "notSet": string;
                "currentLanguage": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "timeLimitControl": {
                "timedOutOperation": string;
                "constant": string;
                "scope": string;
                "day": string;
                "hour": string;
                "minute": string;
                "BeforeDuration": string;
                "OnDuration": string;
                "AfterDuration": string;
                "SendMessageExpireOperation": string;
                "AutoHandleExpireOperation": string;
                "curDay": string;
                "durationType": string;
                "required": string;
                "timeDuration": string;
                "timeUnit": string;
                "operationTypeName": string;
                "sendType": string;
                "onlyBeInteger": string;
                "setOperation": string;
                "setType": string;
                "setComments": string;
                "selectedOperation": string;
                "notSupportAutomatic": string;
                "warningMessage": string;
                "automaticProcessing": string;
                "set": string;
                "notSet": string;
                "timelinessControl": string;
                "isEnable": string;
                "taskDeadline": string;
                "timelyOperation": string;
                "actionList": string;
                "add": string;
                "remove": string;
                "clickCancel": string;
                "clickOK": string;
                "workItemParticipant": string;
                "procInstCreator": string;
                "to-doMessageTimeOut": string;
                "messageTimeOut": string;
                "agree": string;
            };
            "sendMessageOperation": {
                "procInstCreator": string;
                "workItemParticipant": string;
                "preActExecutors": string;
                "day": string;
                "hour": string;
                "minute": string;
                "cycleTimeNotEmpty": string;
                "sendMethodNotEmpty": string;
                "subjectNotEmpty": string;
                "contentNotEmpty": string;
                "recipientNotEmpty": string;
                "messageTemplate": string;
                "smsTemplateNumberNotEmpty": string;
                "cycleEnable": string;
                "cycleTime": string;
                "sendType": string;
                "subject": string;
                "message": string;
                "receiverVari": string;
                "sysUsers": string;
                "clickCancel": string;
                "clickOK": string;
                "opinionsNotEmpty": string;
                "processingNotEmpty": string;
                "automaticProcessSet": string;
                "automaticProcessMethod": string;
                "automaticOpinionHandle": string;
            };
            "smsMessageTemplate": {
                "smsTemplateContent": string;
                "code": string;
                "value": string;
                "noRowsSelected": string;
                "smsMessageTemplate": string;
                "tips1": string;
                "tips2": string;
                "tips3": string;
                "smsTemplateNumber": string;
                "smsVariableBinding": string;
                "addSmsVariable": string;
                "deleteSmsVariable": string;
            };
            "signRule": {
                "countersignRules": string;
                "byNumber": string;
                "byProportion": string;
                "customConditions": string;
                "value": string;
                "text": string;
                "conclusionName": string;
                "conclusionValue": string;
                "calculateType": string;
                "conditionValue": string;
                "waitAllVotes": string;
                "yes": string;
                "no": string;
                "notEmpty": string;
                "pleaseSelect": string;
                "maxConditionValue": string;
                "minConditionValue": string;
                "noConditional": string;
                "set": string;
                "ruleList": string;
                "approvalOptions": string;
                "clickCancel": string;
                "deleteRow": string;
                "clickOK": string;
            };
            "saveAsEdit": {
                "public": string;
                "private": string;
                "code": string;
                "name": string;
                "nameNotEmpty": string;
                "organizationNotEmpty": string;
                "organization": string;
                "basicAttributes": string;
                "processName": string;
                "processKeyValue": string;
                "maintenanceOrg": string;
                "accessLevel": string;
                "saveAsCancel": string;
                "saveAsOK": string;
            };
            "release": {
                "release": string;
                "update": string;
                "applicantName": string;
                "applicantDepartment": string;
                "procName": string;
                "procVersion": string;
                "releaseType": string;
                "textDetail": string;
                "saveAsCancel": string;
                "saveAsOK": string;
            };
            "processVariables": {
                "string": string;
                "integer": string;
                "decimal": string;
                "boolean": string;
                "constant": string;
                "expression": string;
                "component": string;
                "name": string;
                "required": string;
                "documentation": string;
                "basicType": string;
                "description": string;
                "tag": string;
                "valueText": string;
                "processVariables": string;
                "notSelected": string;
                "variableNumberEmpty": string;
                "variableNameEmpty": string;
                "variableNumberNotStandard": string;
                "tagNotEmpty": string;
                "codeDuplicates": string;
                "alreadyExists": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "number": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "participant": {
                "user": string;
                "variable": string;
                "position": string;
                "role": string;
                "component": string;
                "reportingLine": string;
                "matrix": string;
                "activityExecutor": string;
                "organization": string;
                "all": string;
                "assign": string;
                "claim": string;
                "currentUser": string;
                "procInstCreator": string;
                "participantSet": string;
                "order": string;
                "type": string;
                "performerName": string;
                "description": string;
                "condition": string;
                "dataMovement1": string;
                "dataMovement2": string;
                "participantSelection": string;
                "selectProcessVariables": string;
                "selectVariableValueType": string;
                "selectRelation": string;
                "selectPosition": string;
                "selectOrgType": string;
                "orgFill": string;
                "refOrgIdNotNull": string;
                "refUserIdNotNull": string;
                "repDefConfigured": string;
                "atLeastOneCondition": string;
                "dataFieldAliasNotNull": string;
                "matrixConfigured": string;
                "selectPerformer": string;
                "definitionDeleted": string;
                "matrixDeleted": string;
                "selectParticipantInfo": string;
                "noRowSelected": string;
                "selectDefaultHandler": string;
                "selectpotentialtHandler": string;
                "org": string;
                "positionType1": string;
                "positionType2": string;
                "positionType3": string;
                "comp": string;
                "parameters:": string;
                "referencePerson:": string;
                "referenceOrganization:": string;
                "condition1": string;
                "condition2": string;
                "condition3": string;
                "data": string;
                "set": string;
                "notSet": string;
                "allocationPolicy": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "notifyRecipient": string;
                "defaultHandler": string;
                "new": string;
                "editPerformer": string;
                "removePerformer": string;
                "clearPerformer": string;
                "moveUp": string;
                "moveDown": string;
                "alternativeHandler": string;
                "isAllScope": string;
                "clickCancel": string;
                "clickOK": string;
                "alternativeScope": string;
                "orgId": string;
                "includeChildren": string;
                "conditon": string;
                "currentUnit": string;
                "currentDepartment": string;
                "variableOrganization": string;
            };
            "activityExecutor": {
                "name": string;
                "eventHandler": string;
                "nodeName": string;
                "enablingConditions": string;
                "activityList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "componentPerformer": {
                "componentMethod": string;
                "methodNotExist": string;
                "code": string;
                "name": string;
                "description": string;
                "valueText": string;
                "help": string;
                "errorObtaining": string;
                "componentSelection": string;
                "metadataNotExist": string;
                "serverSideNotFound": string;
                "componentName": string;
                "componentSelect": string;
                "parameterList": string;
            };
            "matrixPerformer": {
                "code": string;
                "name": string;
                "help": string;
                "multivalue": string;
                "enumSelection": string;
                "refMatrixTable": string;
                "matrixTable": string;
                "curDataFieldValue": string;
                "conditionFields": string;
                "condition": string;
                "key": string;
                "value": string;
                "notSelectEnum": string;
                "cancel": string;
                "onConfirm": string;
                "lineNumber": string;
            };
            "performerOptions": {
                "leave": string;
                "throwException": string;
                "sys": string;
                "administrative_staff": string;
                "procInstCreator": string;
                "preActExecutors": string;
                "allPassExecutors": string;
                "performerOptions": string;
                "exclusionNotAllowed": string;
                "approvalNotAllowed": string;
                "approvalNotAllowedAsSet": string;
                "allocationStrategyIsCollect": string;
                "set": string;
                "advancedOptions": string;
                "historicFirst": string;
                "noPerformerStrategy": string;
                "excludeProcInstCreator": string;
                "defaultNotParticipate": string;
                "excludePreActExecutors": string;
                "excludeAllPassExecutors": string;
                "excludeExprPerformer": string;
                "variableOrgTypes": string;
                "automaticApprovalOptions": string;
                "autoProcInstCreator": string;
                "autoPreActExecutors": string;
                "autoAllPassExecutors": string;
                "cancel": string;
                "clickOK": string;
            };
            "positionPerformer": {
                "orgPosition": string;
                "generalPosition": string;
                "sysPositions": string;
                "positionType": string;
                "role": string;
                "position": string;
                "sysType": string;
                "placeholder": string;
                "orgId": string;
                "condition": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "reportingLine": {
                "higherSuperior": string;
                "directSuperior": string;
                "code": string;
                "name": string;
                "dept": string;
                "sysUser": string;
                "employee": string;
                "businessFields": string;
                "defName": string;
                "dimension": string;
                "curReportingRefer": string;
                "usersName": string;
                "refOrgId": string;
                "condition": string;
                "definitionOfReport": string;
            };
            "userPerformer": {
                "regularUser": string;
                "variablePart": string;
                "sys": string;
                "administrative_organization": string;
                "cantUseContext": string;
                "user": string;
                "variable": string;
                "condition": string;
            };
            "variablePerformer": {
                "sys": string;
                "administrative_staff": string;
                "oneself": string;
                "administrative_organization": string;
                "cantUseContext": string;
                "processVariables": string;
                "variableOrgTypes": string;
                "relationShipType": string;
                "condition": string;
            };
            "orgPotentialOwner": {
                "optionSettings": string;
                "global": string;
                "currentUnit": string;
                "currentDepartment": string;
                "addSignBehind": string;
                "addSignFront": string;
                "transfer": string;
                "notify": string;
                "set": string;
                "notSet": string;
                "option": string;
                "enable": string;
                "range": string;
                "OrgId": string;
                "variableOrganization": string;
                "includeChildren": string;
                "clickCancel": string;
                "clickOK": string;
                "limit": string;
                "turnOffPrompt": string;
            };
            "note": {
                "placeholder": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "MessageNotice": {
                "notify": string;
                "subject": string;
                "content": string;
                "sendTime": string;
                "sendType": string;
                "receiverText": string;
                "procInstCreator": string;
                "workItemParticipant": string;
                "messageSet": string;
                "selectedRow": string;
                "noCopy": string;
                "batchCopy": string;
                "set": string;
                "notSet": string;
                "add": string;
                "edit": string;
                "delete": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "messContent": {
                    "expr": string;
                    "sexpr": string;
                };
                "procComplete": string;
                "procAborted": string;
                "procRollBack": string;
                "workCreated": string;
                "actComplete": string;
                "actAborted": string;
                "email": string;
                "sms": string;
                "cloudplus": string;
                "processParticipant": string;
                "variableParticipant": string;
                "userParticipant": string;
                "positionParticipant": string;
                "activityExecutorParticipant": string;
                "sys": string;
                "administrative_organization": string;
                "name": string;
                "noTargetNode": string;
                "noMessageNotifyAttribute!": string;
            };
            "messageNoticeEdit": {
                "procInstCreator": string;
                "activityExecutorParticipant": string;
                "workItemParticipant": string;
                "sys": string;
                "administrative_organization": string;
                "processParticipant": string;
                "workItemReceiveParticipant": string;
                "variableParticipant": string;
                "userParticipant": string;
                "positionParticipant": string;
                "sendType": string;
                "smsMessageTemplate": string;
                "smsMessageTemplateCode": string;
                "sendTime": string;
                "subject": string;
                "content": string;
                "receivers": string;
                "processParticipantNotNull": string;
                "activityDefIdNotNull": string;
                "variableParticipantNotNull": string;
                "orgType": string;
                "userIds": string;
                "positionId": string;
                "activityList": string;
                "position": string;
                "optionalNodes": string;
                "targetNodeList": string;
                "placeholder": string;
                "optionalAttribute": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "messSendType": string;
                "messSubject": string;
                "enable": string;
                "messContent": string;
                "recipient": string;
                "addReceiver": string;
                "organization": string;
                "posi": string;
            };
            "jumpScope": {
                "targetNodeOptions": string;
                "name": string;
                "outConnectNode": string;
                "global": string;
                "afterNodes": string;
                "specifiedSet": string;
                "firstNode": string;
                "nullNode": string;
                "specifyNode": string;
                "noSetTargetNode": string;
                "noSetSpecifyNode": string;
                "selectedRow": string;
                "optionalNodes": string;
                "listOfAdditional": string;
                "pleaseSelect1": string;
                "defaultNode": string;
                "pleaseSelect2": string;
                "defaultNodeList": string;
                "clickCancel": string;
                "clickOK": string;
                "set": string;
            };
            "imageSet": {
                "imageSet": string;
                "onlyView": string;
                "edit": string;
                "reScanStart": string;
                "reScanComplete": string;
                "mutualExclusion": string;
                "set": string;
                "notSet": string;
                "imageOperation": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "extendProperty": {
                "extendProperty": string;
                "true": string;
                "false": string;
                "set": string;
                "notSet": string;
                "illustrate": string;
                "placeholder": string;
                "cancel": string;
                "clickOK": string;
            };
            "expressionEditor": {
                "expressionEditor": string;
                "notSet": string;
                "clickCancel": string;
                "changeType": string;
                "clickOK": string;
            };
            "executeForms": {
                "executeForms": string;
                "parameters": string;
                "typeAsvariable": string;
                "parameterSettings": string;
                "formDefinitionList": string;
                "notSet": string;
                "default": string;
                "processEmbeddedForm": string;
                "formEmbedProcess": string;
                "clickCancel": string;
                "clickOK": string;
                "noForm": string;
                "form": string;
                "placeholder": string;
                "parametersSet": string;
                "key": string;
                "name": string;
                "lineNumber": string;
                "code": string;
                "tag": string;
                "value": string;
                "variable": string;
                "constant": string;
                "expression": string;
                "method": string;
                "methodName": string;
                "description": string;
                "workFlowAction": string;
                "formOperations": string;
                "executionTime": string;
                "sortOrder": string;
                "methodParameters": string;
                "selectFormActionConfig": string;
                "selectFormAction": string;
                "editParam": string;
                "formEvents": string;
                "buttonName": string;
                "enable": string;
                "disabled": string;
                "hidden": string;
                "fieldName": string;
                "editable": string;
                "readonly": string;
                "required": string;
                "saveFail": string;
                "checkedRows": string;
                "checkeds": string;
                "enableBtn": string;
                "disabledBtn": string;
                "hiddenBtn": string;
                "btnBatchReset": string;
                "editableBtn": string;
                "readonlyBtn": string;
                "requiredBtn": string;
                "add": string;
                "delete": string;
                "other": string;
                "formBtn": string;
                "formfield": string;
                "apptag": string;
                "functionMenu": string;
                "formFormat": string;
                "docFormatNumber": string;
                "docFormatName": string;
                "selectedRow": string;
                "set": string;
            };
            "eventDefinition": {
                "eventDefinition": string;
                "pass": string;
                "back": string;
                "abort": string;
                "signalRef": string;
                "name": string;
                "triggerAction": string;
                "selectedRow": string;
                "dataLength": string;
                "codeNotNull": string;
                "nameNotNull": string;
                "codeNotNumber": string;
                "codeRepeat": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "entryFormEditor": {
                "flowForm": string;
                "code": string;
                "name": string;
                "base": string;
                "foundation": string;
                "extend": string;
                "selectedRow": string;
                "absent": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "editComponentParameter": {
                "code": string;
                "name": string;
                "required": string;
                "yes": string;
                "no": string;
                "value": string;
                "openComponentFail": string;
                "componentSelection": string;
                "curComponent": string;
                "executionTime": string;
                "para": string;
                "paraRequired": string;
                "execuTime": string;
                "parameterList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "customizeAction": {
                "customizeAction": string;
                "app": string;
                "web": string;
                "all": string;
                "name": string;
                "code": string;
                "terminalType": string;
                "isAll": string;
                "yes": string;
                "no": string;
                "paramName": string;
                "valueText": string;
                "value": string;
                "addActions": string;
                "actionExisted": string;
                "selectedRow": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "parameterList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "checkCondition": {
                "zhChs": string;
                "zhCht": string;
                "en": string;
                "checkCondition": string;
                "set": string;
                "notSet": string;
                "nodeEntry": string;
                "activityBeforeStarted": string;
                "enterErrorTips": string;
                "activityBeforeCompleted": string;
                "activityBeforeCompletedValue": string;
                "leaveErrorTips": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "batchSet": {
                "targetNode": string;
                "addSignFront": string;
                "addSignBehind": string;
                "transfer": string;
                "notify": string;
                "backWardRule": string;
                "name": string;
            };
            "subProcess": {
                "subProcessSet": string;
                "specified": string;
                "dynamic": string;
                "inheritParent": string;
                "autoCreation": string;
                "variablesExpression": string;
                "rteNull": string;
                "orderProcess": string;
                "clickOk": string;
                "clickCancel": string;
                "inheritBizDataId": string;
                "set": string;
                "notSet": string;
                "radioGroupProcessType": string;
                "flowForm": string;
                "processDef": string;
                "radioGroupBillSource": string;
                "autoCreationProcess": string;
                "bizDataId": string;
                "setOption": string;
                "SameParentProcess": string;
                "setBizDataId": string;
                "subProcessOpt": string;
            };
            "backwardRule": {
                "reEdit": string;
                "backwardRule": string;
                "initialActityId": string;
                "precursorActivityId": string;
                "empty": string;
                "name": string;
                "id": string;
                "sequence": string;
                "backToMe": string;
                "backToCurrentNode": string;
                "popover": string;
                "selectAbleClick": string;
                "dictPicked": string;
                "set": string;
                "notSet": string;
                "rejectedTo:": string;
                "backScope": string;
                "defaultPrompt": string;
                "title": string;
                "dynamicSelection": string;
                "resubmitEffectOptions": string;
                "popover1": string;
                "popover2": string;
                "popover3": string;
                "allowModification": string;
                "clickCancel": string;
                "clickOk": string;
            };
            "assignStrategy": {
                "all": string;
                "assign": string;
                "claim": string;
                "currentUser": string;
                "procInstCreator": string;
                "assignStrategy": string;
                "option": string;
                "assignmentRules": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "assignScope": {
                "assignScopeList": string;
                "required": string;
                "yes": string;
                "no": string;
                "condition": string;
                "add": string;
                "delete": string;
                "name": string;
                "deleteRow": string;
                "curActivity": string;
                "set": string;
                "notSet": string;
                "nodeList": string;
                "moveUp": string;
                "moveDown": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "assignPerformer": {
                "currentUser": string;
                "procInstCreator": string;
                "global": string;
                "currentUnit": string;
                "currentDepartment": string;
                "assignPerformer": string;
                "set": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "approvelItems": {
                "approvalOptions": string;
                "forward": string;
                "backward": string;
                "abort": string;
                "value": string;
                "text": string;
                "workFlowAction": string;
                "isDefault": string;
                "no": string;
                "yes": string;
                "commentNecessary": string;
                "attachmentNecessary": string;
                "certification": string;
                "signatureNecessary": string;
                "defaultComment": string;
                "zh-CHS": string;
                "zh-CHT": string;
                "en": string;
                "workFlowActionNotNull": string;
                "deleteRow": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
                "approvalAction": string;
                "lineNumber": string;
            };
            "approvalPivot": {
                "remind": string;
                "type": string;
                "condition": string;
                "title": string;
                "description": string;
                "approvalPivot": string;
                "selectedRow": string;
                "configTitle": string;
                "set": string;
                "notSet": string;
                "enable": string;
                "expand": string;
                "showTitle": string;
                "list": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "anonymousSet": {
                "anonymousOpt": string;
                "approver": string;
                "set": string;
                "notSet": string;
                "anonymousSet": string;
                "isAnonymity": string;
                "anonymous": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "activityList": {
                "name": string;
                "checkeds": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "activityComponent": {
                "component": string;
                "method": string;
                "inconsistentParameters": string;
                "longerExists": string;
                "absent": string;
                "pleaseCheck": string;
                "edit": string;
                "deleteRow": string;
                "executionTime": string;
                "cmpName": string;
                "metadataId": string;
                "methodCode": string;
                "isForCompensation": string;
                "yes": string;
                "no": string;
                "operate": string;
                "code": string;
                "name": string;
                "value": string;
                "editComponent": string;
                "confirmDelete": string;
                "curComponent": string;
                "newComponent": string;
                "sameCmp": string;
                "cmpMethod": string;
                "executionTimeNotNull": string;
                "param": string;
                "required": string;
                "set": string;
                "notSet": string;
                "PROCESSINSTANCE_STARTED": string;
                "PROCESSINSTANCE_SUSPENDED": string;
                "PROCESSINSTANCE_RESUMED": string;
                "PROCESSINSTANCE_COMPLETED": string;
                "PROCESSINSTANCE_ABORTED": string;
                "PROCESSINSTANCE_CANCELED": string;
                "PROCESSINSTANCE_REACTIVATED": string;
                "PROCESSINSTANCE_ROLLBACK": string;
                "PROCESSINSTANCE_RESUBMIT": string;
                "ACTIVITY_AND_PARTICIPANT_UPDATED": string;
                "PROCESSINSTANCE_ABORTED_BY_ADMIN": string;
                "PROCESSINSTANCE_BEFORE_START": string;
                "WORKITEM_BEFORE_COMPLETE": string;
                "WORKITEM_AFTER_COMPLETE": string;
                "LOADDATA": string;
                "ACTIVITY_STARTED": string;
                "ACTIVITY_COMPLETED": string;
                "ACTIVITY_ABORTED": string;
                "WORKITEM_CREATED": string;
                "WORKITEM_COMPLETED": string;
                "WORKITEM_SUSPENDED": string;
                "WORKITEM_RESUMED": string;
                "WORKITEM_ABORTED": string;
                "WORKITEM_RETRIEVED": string;
                "WORKITEM_CLAIMED": string;
                "WORKITEM_UNCLAIMED": string;
                "ACTIVITY_ASSIGNMENT": string;
                "deleteNotAllowed": string;
                "tips": string;
                "prefabricated": string;
                "add": string;
                "moveUp": string;
                "moveDown": string;
                "clickCancel": string;
                "clickOK": string;
            };
        };
    };
    "zh-CHT": {
        "validate": {
            "noProcessHeader": string;
            "cmpsEmpty": string;
            "cmpsEmptyMsg": string;
            "directNoPf": string;
            "directNoPfMsg": string;
            "noLoadDataCmp": string;
            "noLoadDataCmpMsg": string;
            "noStartCmp": string;
            "noStartCmpMsg": string;
            "lackProcessCompleteCmp": string;
            "lackProcessCompleteCmpMsg": string;
            "lackProcessAbortCmp": string;
            "lackProcessAbortCmpMsg": string;
            "lackProcessCancelCmp": string;
            "lackProcessCancelCmpMsg": string;
            "lackProcessBackCmp": string;
            "lackProcessBackCmpMsg": string;
            "lackProcessReStartCmp": string;
            "lackProcessReStartCmpMsg": string;
            "parallelGatewayCheck": string;
            "parallelGatewayCheckMsg": string;
            "approvalPerformerCheck": string;
            "noVariable1": string;
            "noVariable2": string;
            "activity": string;
            "noStartActivity": string;
            "noExclusiveGateway": string;
            "noParallelGateway": string;
            "noUserActivity": string;
            "noOperationActivity": string;
            "noNotifyActivity": string;
            "noCallActivitySubProcess": string;
            "noAutoActivity": string;
            "noIntermediateCatchEvent": string;
            "noMessageActivity": string;
            "noAifCreationBillActivity": string;
            "noEndEvent": string;
            "mark": string;
            "noFlowNodeChsName": string;
            "nameExceedsLengthLimit": string;
        };
        "processEditor": {
            "tip": string;
            "showButton": string;
            "changeRecord": string;
            "noDtInfo": string;
            "noRtInfo": string;
            "wrongMoment": string;
            "prompted": string;
            "saveSuccess": string;
            "waitReview": string;
            "successPublish": string;
            "publishFail": string;
            "policyConflict": string;
            "noPermissionToSave": string;
            "closeProc1": string;
            "closeProc2": string;
            "viewModel": string;
            "copied": string;
            "button": {
                "saveProc": string;
                "releaseProc": string;
                "sync": string;
                "saveAs": string;
                "procRecord": string;
                "viewProcModel": string;
                "closeProc": string;
            };
        };
        "designer": {
            "wfEditorUi": {
                "basicElements": string;
                "readOnly": string;
            };
            "wfProcessCell": {
                "basicInfo": string;
                "name": string;
                "nameLanguage": string;
                "key": string;
                "entryForm": string;
                "startMode": string;
                "wfTitle": string;
                "formDef": string;
                "formsPC": string;
                "formsMobile": string;
                "process": string;
                "advanced": string;
                "basic": string;
                "wfComponent": string;
                "otherConfig": string;
                "processVariables": string;
                "basicElements": string;
                "customizeAction": string;
                "timelinessInfo": string;
                "enablePriority": string;
                "enableWholeOrderRetrieve": string;
                "messageProperty": string;
                "timeLimitControl": string;
                "messageNotice": string;
                "extendProperty": string;
                "directTips": string;
                "externalTips": string;
                "subprocessTips": string;
            };
            "WfSequenceFlowEdge": {
                "basicInfo": string;
                "basic": string;
                "name": string;
                "nameLanguage": string;
                "id": string;
                "condition": string;
                "ConditionExpression": string;
                "default": string;
            };
            "wfSidebar": {
                "bizactivitylib": string;
            };
        };
        "app": {
            "processDesigner": {
                "all": string;
                "assign": string;
                "claim": string;
                "preempt": string;
                "parallel": string;
                "sequential": string;
                "true": string;
                "false": string;
                "dataId": string;
                "procInstId": string;
                "bizDefKey": string;
                "processDefinitionKey": string;
                "procInstCreator": string;
                "businessCreator": string;
                "procInstDescription": string;
                "comment": string;
                "bizDefName": string;
                "curLoginUsername": string;
                "procInstCreatorName": string;
                "currentParticipantId": string;
                "currentParticipantName": string;
                "currentUser": string;
                "preActExecutors": string;
                "collectionElementVariable": string;
                "subCollectionElementVariable": string;
                "nrOfInstances": string;
                "nrOfCompletedInstances": string;
                "nrOfActiveInstances": string;
                "nrOfForward": string;
                "nrOfBackward": string;
                "nrOfAbort": string;
                "conclusionType": string;
                "conclusionValue": string;
                "directSuperior": string;
                "higherSuperior": string;
                "DIRECT": string;
                "EXTERNAL_PROCESS": string;
                "SUB_PROCESS": string;
                "ALL": string;
                "WEB": string;
                "APP": string;
                "conclusionTypeTips": string;
                "conclusionValueTips": string;
                "copy": string;
                "saveAs": string;
                "tips": string;
                "saveAsSuccess": string;
                "saveAsFail": string;
                "syncDt": string;
                "syncSuccess": string;
                "beforeCompleteStrategyChange": string;
                "releaseProcess": string;
                "auto": string;
                "push": string;
                "pull": string;
                "creation": string;
            };
        };
        "multiInstanceLoopCharacteristics": {
            "loopCharacteristics": string;
            "set": string;
            "notSet": string;
            "isEnable": string;
            "isSequential": string;
            "loopCardinality": string;
            "completionConditionRules": string;
            "promptAct1": string;
            "promptAct2": string;
            "promptProc1": string;
            "promptProc2": string;
            "checkPrompt": string;
            "conditionRulesSet": string;
            "completionConditionRulesList": {
                "forward": string;
                "backward": string;
                "abort": string;
            };
        };
        "component": {
            "optins": {
                "wfOptions": string;
                "specified": string;
                "dynamic": string;
                "set": string;
                "notSet": string;
                "subProcessType": string;
                "processType": string;
                "bizDef": string;
                "procDef": string;
                "clickCancel": string;
                "clickOk": string;
            };
            "voConfig": {
                "documentInfo": string;
                "viewModelSelection": string;
                "cancel": string;
                "clickOk": string;
                "selectOne": string;
                "documentTypeSelect": string;
                "set": string;
                "notSet": string;
                "viewModel": string;
                "documenttype": string;
                "placeholder": string;
            };
            "variableSetting": {
                "constant": string;
                "expression": string;
                "component": string;
                "ACTIVITY_STARTED": string;
                "ACTIVITY_COMPLETED": string;
                "varAssign": string;
                "varNumber": string;
                "REQUIRED": string;
                "varName": string;
                "valueType": string;
                "executionTime": string;
                "valueText": string;
                "processVariables": string;
                "notSelectedVar": string;
                "valueCannotEmpty": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "serialNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "inconsistentParameters": string;
                "methodNotExist": string;
                "parameterName": string;
                "parameterValue": string;
                "methodnotSelected": string;
                "metadataNotExist": string;
                "errorObtainComponent": string;
                "componentSelection": string;
                "componentName": string;
                "parameterList": string;
                "lineNumber": string;
            };
            "urgeHandleRule": {
                "urgentApproval": string;
                "pleaseApprove": string;
                "soOn": string;
                "urgeHandle": string;
                "noSendingMethod": string;
                "setMessageTemplate": string;
                "codeEmpty": string;
                "noMessageSubject": string;
                "noMessageContent": string;
                "earliestTimeNotEmpty": string;
                "minimumTimeNotEmpty": string;
                "set": string;
                "notSet": string;
                "enableUrgeHandle": string;
                "timeSetting": string;
                "earliestTime": string;
                "minimumInterval": string;
                "sendingMethod": string;
                "messageSubject": string;
                "supportEditing": string;
                "messageContent": string;
                "displayReminder": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "titleExpression": {
                "zh-CHS": string;
                "zh-CHT": string;
                "en": string;
                "taskDescription": string;
                "set": string;
                "notSet": string;
                "currentLanguage": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "timeLimitControl": {
                "timedOutOperation": string;
                "constant": string;
                "scope": string;
                "day": string;
                "hour": string;
                "minute": string;
                "BeforeDuration": string;
                "OnDuration": string;
                "AfterDuration": string;
                "SendMessageExpireOperation": string;
                "AutoHandleExpireOperation": string;
                "curDay": string;
                "durationType": string;
                "required": string;
                "timeDuration": string;
                "timeUnit": string;
                "operationTypeName": string;
                "sendType": string;
                "onlyBeInteger": string;
                "setOperation": string;
                "setType": string;
                "setComments": string;
                "selectedOperation": string;
                "notSupportAutomatic": string;
                "warningMessage": string;
                "automaticProcessing": string;
                "set": string;
                "notSet": string;
                "timelinessControl": string;
                "isEnable": string;
                "taskDeadline": string;
                "timelyOperation": string;
                "actionList": string;
                "add": string;
                "remove": string;
                "clickCancel": string;
                "clickOK": string;
                "workItemParticipant": string;
                "procInstCreator": string;
                "to-doMessageTimeOut": string;
                "messageTimeOut": string;
                "agree": string;
            };
            "sendMessageOperation": {
                "procInstCreator": string;
                "workItemParticipant": string;
                "preActExecutors": string;
                "day": string;
                "hour": string;
                "minute": string;
                "cycleTimeNotEmpty": string;
                "sendMethodNotEmpty": string;
                "subjectNotEmpty": string;
                "contentNotEmpty": string;
                "recipientNotEmpty": string;
                "messageTemplate": string;
                "smsTemplateNumberNotEmpty": string;
                "cycleEnable": string;
                "cycleTime": string;
                "sendType": string;
                "subject": string;
                "message": string;
                "receiverVari": string;
                "sysUsers": string;
                "clickCancel": string;
                "clickOK": string;
                "opinionsNotEmpty": string;
                "processingNotEmpty": string;
                "automaticProcessSet": string;
                "automaticProcessMethod": string;
                "automaticOpinionHandle": string;
            };
            "smsMessageTemplate": {
                "smsTemplateContent": string;
                "code": string;
                "value": string;
                "noRowsSelected": string;
                "smsMessageTemplate": string;
                "tips1": string;
                "tips2": string;
                "tips3": string;
                "smsTemplateNumber": string;
                "smsVariableBinding": string;
                "addSmsVariable": string;
                "deleteSmsVariable": string;
            };
            "signRule": {
                "countersignRules": string;
                "byNumber": string;
                "byProportion": string;
                "customConditions": string;
                "value": string;
                "text": string;
                "conclusionName": string;
                "conclusionValue": string;
                "calculateType": string;
                "conditionValue": string;
                "waitAllVotes": string;
                "yes": string;
                "no": string;
                "notEmpty": string;
                "pleaseSelect": string;
                "maxConditionValue": string;
                "minConditionValue": string;
                "noConditional": string;
                "set": string;
                "ruleList": string;
                "approvalOptions": string;
                "clickCancel": string;
                "deleteRow": string;
                "clickOK": string;
            };
            "saveAsEdit": {
                "public": string;
                "private": string;
                "code": string;
                "name": string;
                "nameNotEmpty": string;
                "organizationNotEmpty": string;
                "organization": string;
                "basicAttributes": string;
                "processName": string;
                "processKeyValue": string;
                "maintenanceOrg": string;
                "accessLevel": string;
                "saveAsCancel": string;
                "saveAsOK": string;
            };
            "release": {
                "release": string;
                "update": string;
                "applicantName": string;
                "applicantDepartment": string;
                "procName": string;
                "procVersion": string;
                "releaseType": string;
                "textDetail": string;
                "saveAsCancel": string;
                "saveAsOK": string;
            };
            "processVariables": {
                "string": string;
                "integer": string;
                "decimal": string;
                "boolean": string;
                "constant": string;
                "expression": string;
                "component": string;
                "name": string;
                "required": string;
                "documentation": string;
                "basicType": string;
                "description": string;
                "tag": string;
                "valueText": string;
                "processVariables": string;
                "notSelected": string;
                "variableNumberEmpty": string;
                "variableNameEmpty": string;
                "variableNumberNotStandard": string;
                "tagNotEmpty": string;
                "codeDuplicates": string;
                "alreadyExists": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "number": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "participant": {
                "user": string;
                "variable": string;
                "position": string;
                "role": string;
                "component": string;
                "reportingLine": string;
                "matrix": string;
                "activityExecutor": string;
                "organization": string;
                "all": string;
                "assign": string;
                "claim": string;
                "currentUser": string;
                "procInstCreator": string;
                "participantSet": string;
                "order": string;
                "type": string;
                "performerName": string;
                "description": string;
                "condition": string;
                "dataMovement1": string;
                "dataMovement2": string;
                "participantSelection": string;
                "selectProcessVariables": string;
                "selectVariableValueType": string;
                "selectRelation": string;
                "selectPosition": string;
                "selectOrgType": string;
                "orgFill": string;
                "refOrgIdNotNull": string;
                "refUserIdNotNull": string;
                "repDefConfigured": string;
                "atLeastOneCondition": string;
                "dataFieldAliasNotNull": string;
                "matrixConfigured": string;
                "selectPerformer": string;
                "definitionDeleted": string;
                "matrixDeleted": string;
                "selectParticipantInfo": string;
                "noRowSelected": string;
                "selectDefaultHandler": string;
                "selectpotentialtHandler": string;
                "org": string;
                "positionType1": string;
                "positionType2": string;
                "positionType3": string;
                "comp": string;
                "parameters:": string;
                "referencePerson:": string;
                "referenceOrganization:": string;
                "condition1": string;
                "condition2": string;
                "condition3": string;
                "data": string;
                "set": string;
                "notSet": string;
                "allocationPolicy": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "notifyRecipient": string;
                "defaultHandler": string;
                "new": string;
                "editPerformer": string;
                "removePerformer": string;
                "clearPerformer": string;
                "moveUp": string;
                "moveDown": string;
                "alternativeHandler": string;
                "isAllScope": string;
                "clickCancel": string;
                "clickOK": string;
                "alternativeScope": string;
                "orgId": string;
                "includeChildren": string;
                "conditon": string;
                "currentUnit": string;
                "currentDepartment": string;
                "variableOrganization": string;
            };
            "activityExecutor": {
                "name": string;
                "eventHandler": string;
                "nodeName": string;
                "enablingConditions": string;
                "activityList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "componentPerformer": {
                "componentMethod": string;
                "methodNotExist": string;
                "code": string;
                "name": string;
                "description": string;
                "valueText": string;
                "help": string;
                "errorObtaining": string;
                "componentSelection": string;
                "metadataNotExist": string;
                "serverSideNotFound": string;
                "componentName": string;
                "componentSelect": string;
                "parameterList": string;
            };
            "matrixPerformer": {
                "code": string;
                "name": string;
                "help": string;
                "multivalue": string;
                "enumSelection": string;
                "refMatrixTable": string;
                "matrixTable": string;
                "curDataFieldValue": string;
                "conditionFields": string;
                "condition": string;
                "key": string;
                "value": string;
                "notSelectEnum": string;
                "cancel": string;
                "onConfirm": string;
                "lineNumber": string;
            };
            "performerOptions": {
                "leave": string;
                "throwException": string;
                "sys": string;
                "administrative_staff": string;
                "procInstCreator": string;
                "preActExecutors": string;
                "allPassExecutors": string;
                "performerOptions": string;
                "exclusionNotAllowed": string;
                "approvalNotAllowed": string;
                "approvalNotAllowedAsSet": string;
                "allocationStrategyIsCollect": string;
                "set": string;
                "advancedOptions": string;
                "historicFirst": string;
                "noPerformerStrategy": string;
                "excludeProcInstCreator": string;
                "defaultNotParticipate": string;
                "excludePreActExecutors": string;
                "excludeAllPassExecutors": string;
                "excludeExprPerformer": string;
                "variableOrgTypes": string;
                "automaticApprovalOptions": string;
                "autoProcInstCreator": string;
                "autoPreActExecutors": string;
                "autoAllPassExecutors": string;
                "cancel": string;
                "clickOK": string;
            };
            "positionPerformer": {
                "orgPosition": string;
                "generalPosition": string;
                "sysPositions": string;
                "positionType": string;
                "role": string;
                "position": string;
                "sysType": string;
                "placeholder": string;
                "orgId": string;
                "condition": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "reportingLine": {
                "higherSuperior": string;
                "directSuperior": string;
                "code": string;
                "name": string;
                "dept": string;
                "sysUser": string;
                "employee": string;
                "businessFields": string;
                "defName": string;
                "dimension": string;
                "curReportingRefer": string;
                "usersName": string;
                "refOrgId": string;
                "condition": string;
                "definitionOfReport": string;
            };
            "userPerformer": {
                "regularUser": string;
                "variablePart": string;
                "sys": string;
                "administrative_organization": string;
                "cantUseContext": string;
                "user": string;
                "variable": string;
                "condition": string;
            };
            "variablePerformer": {
                "sys": string;
                "administrative_staff": string;
                "oneself": string;
                "administrative_organization": string;
                "cantUseContext": string;
                "processVariables": string;
                "variableOrgTypes": string;
                "relationShipType": string;
                "condition": string;
            };
            "orgPotentialOwner": {
                "optionSettings": string;
                "global": string;
                "currentUnit": string;
                "currentDepartment": string;
                "addSignBehind": string;
                "addSignFront": string;
                "transfer": string;
                "notify": string;
                "set": string;
                "notSet": string;
                "option": string;
                "enable": string;
                "range": string;
                "OrgId": string;
                "variableOrganization": string;
                "includeChildren": string;
                "clickCancel": string;
                "clickOK": string;
                "limit": string;
                "turnOffPrompt": string;
            };
            "note": {
                "placeholder": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "MessageNotice": {
                "notify": string;
                "subject": string;
                "content": string;
                "sendTime": string;
                "sendType": string;
                "receiverText": string;
                "procInstCreator": string;
                "workItemParticipant": string;
                "messageSet": string;
                "selectedRow": string;
                "noCopy": string;
                "batchCopy": string;
                "set": string;
                "notSet": string;
                "add": string;
                "edit": string;
                "delete": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "messContent": string;
                "procComplete": string;
                "procAborted": string;
                "procRollBack": string;
                "workCreated": string;
                "actComplete": string;
                "actAborted": string;
                "email": string;
                "sms": string;
                "cloudplus": string;
                "processParticipant": string;
                "variableParticipant": string;
                "userParticipant": string;
                "positionParticipant": string;
                "activityExecutorParticipant": string;
                "sys": string;
                "administrative_organization": string;
                "name": string;
                "noTargetNode": string;
                "noMessageNotifyAttribute!": string;
            };
            "messageNoticeEdit": {
                "procInstCreator": string;
                "activityExecutorParticipant": string;
                "workItemParticipant": string;
                "sys": string;
                "administrative_organization": string;
                "processParticipant": string;
                "workItemReceiveParticipant": string;
                "variableParticipant": string;
                "userParticipant": string;
                "positionParticipant": string;
                "sendType": string;
                "smsMessageTemplate": string;
                "smsMessageTemplateCode": string;
                "sendTime": string;
                "subject": string;
                "content": string;
                "receivers": string;
                "processParticipantNotNull": string;
                "activityDefIdNotNull": string;
                "variableParticipantNotNull": string;
                "orgType": string;
                "userIds": string;
                "positionId": string;
                "activityList": string;
                "position": string;
                "optionalNodes": string;
                "targetNodeList": string;
                "placeholder": string;
                "optionalAttribute": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
                "messSendType": string;
                "messSubject": string;
                "enable": string;
                "messContent": string;
                "recipient": string;
                "addReceiver": string;
                "organization": string;
                "posi": string;
            };
            "jumpScope": {
                "targetNodeOptions": string;
                "name": string;
                "outConnectNode": string;
                "global": string;
                "afterNodes": string;
                "specifiedSet": string;
                "firstNode": string;
                "nullNode": string;
                "specifyNode": string;
                "noSetTargetNode": string;
                "noSetSpecifyNode": string;
                "selectedRow": string;
                "optionalNodes": string;
                "listOfAdditional": string;
                "pleaseSelect1": string;
                "defaultNode": string;
                "pleaseSelect2": string;
                "defaultNodeList": string;
                "clickCancel": string;
                "clickOK": string;
                "set": string;
            };
            "imageSet": {
                "imageSet": string;
                "onlyView": string;
                "edit": string;
                "reScanStart": string;
                "reScanComplete": string;
                "mutualExclusion": string;
                "set": string;
                "notSet": string;
                "imageOperation": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "extendProperty": {
                "extendProperty": string;
                "true": string;
                "false": string;
                "set": string;
                "notSet": string;
                "illustrate": string;
                "placeholder": string;
                "cancel": string;
                "clickOK": string;
            };
            "expressionEditor": {
                "expressionEditor": string;
                "notSet": string;
                "clickCancel": string;
                "changeType": string;
                "clickOK": string;
            };
            "executeForms": {
                "executeForms": string;
                "parameters": string;
                "typeAsvariable": string;
                "parameterSettings": string;
                "formDefinitionList": string;
                "notSet": string;
                "default": string;
                "processEmbeddedForm": string;
                "formEmbedProcess": string;
                "clickCancel": string;
                "clickOK": string;
                "noForm": string;
                "form": string;
                "placeholder": string;
                "parametersSet": string;
                "key": string;
                "name": string;
                "lineNumber": string;
                "code": string;
                "tag": string;
                "value": string;
                "variable": string;
                "constant": string;
                "expression": string;
                "method": string;
                "methodName": string;
                "description": string;
                "workFlowAction": string;
                "formOperations": string;
                "executionTime": string;
                "sortOrder": string;
                "methodParameters": string;
                "selectFormActionConfig": string;
                "selectFormAction": string;
                "editParam": string;
                "formEvents": string;
                "buttonName": string;
                "enable": string;
                "disabled": string;
                "hidden": string;
                "fieldName": string;
                "editable": string;
                "readonly": string;
                "required": string;
                "saveFail": string;
                "checkedRows": string;
                "checkeds": string;
                "enableBtn": string;
                "disabledBtn": string;
                "hiddenBtn": string;
                "btnBatchReset": string;
                "editableBtn": string;
                "readonlyBtn": string;
                "requiredBtn": string;
                "add": string;
                "delete": string;
                "other": string;
                "formBtn": string;
                "formfield": string;
                "apptag": string;
                "functionMenu": string;
                "formFormat": string;
                "docFormatNumber": string;
                "docFormatName": string;
                "selectedRow": string;
                "set": string;
            };
            "eventDefinition": {
                "eventDefinition": string;
                "pass": string;
                "back": string;
                "abort": string;
                "signalRef": string;
                "name": string;
                "triggerAction": string;
                "selectedRow": string;
                "dataLength": string;
                "codeNotNull": string;
                "nameNotNull": string;
                "codeNotNumber": string;
                "codeRepeat": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "entryFormEditor": {
                "flowForm": string;
                "code": string;
                "name": string;
                "base": string;
                "foundation": string;
                "extend": string;
                "selectedRow": string;
                "absent": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "editComponentParameter": {
                "code": string;
                "name": string;
                "required": string;
                "yes": string;
                "no": string;
                "value": string;
                "openComponentFail": string;
                "componentSelection": string;
                "curComponent": string;
                "executionTime": string;
                "para": string;
                "paraRequired": string;
                "execuTime": string;
                "parameterList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "customizeAction": {
                "customizeAction": string;
                "app": string;
                "web": string;
                "all": string;
                "name": string;
                "code": string;
                "terminalType": string;
                "isAll": string;
                "yes": string;
                "no": string;
                "paramName": string;
                "valueText": string;
                "value": string;
                "addActions": string;
                "actionExisted": string;
                "selectedRow": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "parameterList": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "checkCondition": {
                "zhChs": string;
                "zhCht": string;
                "en": string;
                "checkCondition": string;
                "set": string;
                "notSet": string;
                "nodeEntry": string;
                "activityBeforeStarted": string;
                "enterErrorTips": string;
                "activityBeforeCompleted": string;
                "activityBeforeCompletedValue": string;
                "leaveErrorTips": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "batchSet": {
                "targetNode": string;
                "addSignFront": string;
                "addSignBehind": string;
                "transfer": string;
                "notify": string;
                "backWardRule": string;
                "name": string;
            };
            "subProcess": {
                "subProcessSet": string;
                "specified": string;
                "dynamic": string;
                "inheritParent": string;
                "autoCreation": string;
                "variablesExpression": string;
                "rteNull": string;
                "orderProcess": string;
                "clickOk": string;
                "clickCancel": string;
                "inheritBizDataId": string;
                "set": string;
                "notSet": string;
                "radioGroupProcessType": string;
                "flowForm": string;
                "processDef": string;
                "radioGroupBillSource": string;
                "autoCreationProcess": string;
                "bizDataId": string;
                "setOption": string;
                "SameParentProcess": string;
                "setBizDataId": string;
                "subProcessOpt": string;
            };
            "backwardRule": {
                "reEdit": string;
                "backwardRule": string;
                "initialActityId": string;
                "precursorActivityId": string;
                "empty": string;
                "name": string;
                "id": string;
                "sequence": string;
                "backToMe": string;
                "backToCurrentNode": string;
                "popover": string;
                "selectAbleClick": string;
                "dictPicked": string;
                "set": string;
                "notSet": string;
                "rejectedTo:": string;
                "backScope": string;
                "defaultPrompt": string;
                "title": string;
                "dynamicSelection": string;
                "resubmitEffectOptions": string;
                "popover1": string;
                "popover2": string;
                "popover3": string;
                "allowModification": string;
                "clickCancel": string;
                "clickOk": string;
            };
            "assignStrategy": {
                "all": string;
                "assign": string;
                "claim": string;
                "currentUser": string;
                "procInstCreator": string;
                "assignStrategy": string;
                "option": string;
                "assignmentRules": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "assignScope": {
                "assignScopeList": string;
                "required": string;
                "yes": string;
                "no": string;
                "condition": string;
                "add": string;
                "delete": string;
                "name": string;
                "deleteRow": string;
                "curActivity": string;
                "set": string;
                "notSet": string;
                "nodeList": string;
                "moveUp": string;
                "moveDown": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "assignPerformer": {
                "currentUser": string;
                "procInstCreator": string;
                "global": string;
                "currentUnit": string;
                "currentDepartment": string;
                "assignPerformer": string;
                "set": string;
                "operator": string;
                "multiSelect": string;
                "necessary": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "approvelItems": {
                "approvalOptions": string;
                "forward": string;
                "backward": string;
                "abort": string;
                "value": string;
                "text": string;
                "workFlowAction": string;
                "isDefault": string;
                "no": string;
                "yes": string;
                "commentNecessary": string;
                "attachmentNecessary": string;
                "certification": string;
                "signatureNecessary": string;
                "defaultComment": string;
                "zh-CHS": string;
                "zh-CHT": string;
                "en": string;
                "workFlowActionNotNull": string;
                "deleteRow": string;
                "set": string;
                "notSet": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
                "approvalAction": string;
                "lineNumber": string;
            };
            "approvalPivot": {
                "remind": string;
                "type": string;
                "condition": string;
                "title": string;
                "description": string;
                "approvalPivot": string;
                "selectedRow": string;
                "configTitle": string;
                "set": string;
                "notSet": string;
                "enable": string;
                "expand": string;
                "showTitle": string;
                "list": string;
                "add": string;
                "delete": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "anonymousSet": {
                "anonymousOpt": string;
                "approver": string;
                "set": string;
                "notSet": string;
                "anonymousSet": string;
                "isAnonymity": string;
                "anonymous": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "activityList": {
                "name": string;
                "checkeds": string;
                "lineNumber": string;
                "clickCancel": string;
                "clickOK": string;
            };
            "activityComponent": {
                "component": string;
                "method": string;
                "inconsistentParameters": string;
                "longerExists": string;
                "absent": string;
                "pleaseCheck": string;
                "edit": string;
                "deleteRow": string;
                "executionTime": string;
                "cmpName": string;
                "metadataId": string;
                "methodCode": string;
                "isForCompensation": string;
                "yes": string;
                "no": string;
                "operate": string;
                "code": string;
                "name": string;
                "value": string;
                "editComponent": string;
                "confirmDelete": string;
                "curComponent": string;
                "newComponent": string;
                "sameCmp": string;
                "cmpMethod": string;
                "executionTimeNotNull": string;
                "param": string;
                "required": string;
                "set": string;
                "notSet": string;
                "PROCESSINSTANCE_STARTED": string;
                "PROCESSINSTANCE_SUSPENDED": string;
                "PROCESSINSTANCE_RESUMED": string;
                "PROCESSINSTANCE_COMPLETED": string;
                "PROCESSINSTANCE_ABORTED": string;
                "PROCESSINSTANCE_CANCELED": string;
                "PROCESSINSTANCE_REACTIVATED": string;
                "PROCESSINSTANCE_ROLLBACK": string;
                "PROCESSINSTANCE_RESUBMIT": string;
                "ACTIVITY_AND_PARTICIPANT_UPDATED": string;
                "PROCESSINSTANCE_ABORTED_BY_ADMIN": string;
                "PROCESSINSTANCE_BEFORE_START": string;
                "WORKITEM_BEFORE_COMPLETE": string;
                "WORKITEM_AFTER_COMPLETE": string;
                "LOADDATA": string;
                "ACTIVITY_STARTED": string;
                "ACTIVITY_COMPLETED": string;
                "ACTIVITY_ABORTED": string;
                "WORKITEM_CREATED": string;
                "WORKITEM_COMPLETED": string;
                "WORKITEM_SUSPENDED": string;
                "WORKITEM_RESUMED": string;
                "WORKITEM_ABORTED": string;
                "WORKITEM_RETRIEVED": string;
                "WORKITEM_CLAIMED": string;
                "WORKITEM_UNCLAIMED": string;
                "ACTIVITY_ASSIGNMENT": string;
                "deleteNotAllowed": string;
                "tips": string;
                "prefabricated": string;
                "add": string;
                "moveUp": string;
                "moveDown": string;
                "clickCancel": string;
                "clickOK": string;
            };
        };
    };
};
