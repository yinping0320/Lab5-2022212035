import { OnInit, EventEmitter, TemplateRef, AfterViewInit, ChangeDetectorRef } from '@angular/core';
import { TypeConverter } from '@farris/ide-property-panel';
import { HttpService } from '@ecp-caf/caf-common';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class EntryFormEditorComponent implements OnInit, AfterViewInit {
    private http;
    private message;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: any;
    modalFooter: TemplateRef<any>;
    grid: DatagridComponent;
    editorParams: any;
    private flowFormId;
    modalConfig: {
        title: any;
        width: number;
        height: number;
        showButtons: boolean;
    };
    columns: ({
        title: any;
        field: string;
        width: number;
        sortable: boolean;
        formatter?: undefined;
    } | {
        title: any;
        field: string;
        width: number;
        formatter: {
            type: string;
            options: {
                trueText: any;
                falseText: any;
            };
        };
        sortable?: undefined;
    })[];
    data: any[];
    constructor(http: HttpService, message: MessagerService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private getBaseAndExtendFlowForm;
}
export declare class FlowFormConverter implements TypeConverter {
    constructor();
    convertTo(data: any): string;
}
