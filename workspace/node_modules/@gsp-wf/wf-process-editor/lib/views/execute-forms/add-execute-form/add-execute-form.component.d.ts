import { OnInit, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { HttpService, SessionService } from '@ecp-caf/caf-common';
import { Subject } from 'rxjs';
import { ExecuteFormModel } from '../entities/execute-form.entity';
import { MessagerService } from '@farris/ui-messager';
import { ExecuteForm } from '../entities/execute-form';
import { WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class AddExecuteFormComponent implements OnInit {
    private state;
    private http;
    private session;
    private message;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    modalFooter: TemplateRef<any>;
    private grid;
    submit: Subject<ExecuteFormModel>;
    cancel: Subject<{}>;
    tab: 'web' | 'mobile';
    forms: ExecuteForm[];
    columns: ({
        field: string;
        width: number;
        title: any;
        formatter?: undefined;
    } | {
        field: string;
        width: number;
        title: any;
        formatter: (v: any, d: any, i: any) => any;
    })[];
    cols: {
        field: string;
        width: number;
        title: any;
        searchField: string;
    }[];
    dataUri: string;
    constructor(state: ProcessDesignerUIState, http: HttpService, session: SessionService, message: MessagerService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private getAllExecuteForms;
    initVariableType(value: any): string;
    private getExecuteForms;
    private getFormFormats;
}
