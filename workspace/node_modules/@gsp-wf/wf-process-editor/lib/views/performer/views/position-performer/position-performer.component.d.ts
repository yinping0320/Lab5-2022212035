import { OnInit, ElementRef, NgZone, AfterViewInit, ComponentFactoryResolver, Injector, EventEmitter, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExpressionService } from '@gsp-svc/expression';
import { PositionPerformerEntity } from '../../entities/position-performer.entity';
import { GspPositionFilter, TreeFilter } from '@gsp-sys/sysmgr-lookup';
import { BsModalService } from '@farris/ui-modal';
import { WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
import { PositionsNamePipe } from './positions-name.pipe';
export declare class PositionPerformerComponent implements OnInit, AfterViewInit {
    designerUIState: ProcessDesignerUIState;
    private expr;
    private ngZone;
    private resolver;
    private injector;
    private modalService;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    private positionsNamePipe;
    cls: string;
    closeEmitter: EventEmitter<any>;
    submitEmitter: EventEmitter<any>;
    posiHelp: SysFarrisLookupComponent;
    buttonRef: TemplateRef<any>;
    inputGroup: ElementRef;
    showClearButton: boolean;
    isRequired: boolean;
    groupIcon: string;
    positionTypes: {
        value: string;
        text: any;
    }[];
    performerName: string;
    style: any;
    condition: string;
    newFilter: GspPositionFilter;
    treeFilter: TreeFilter;
    curPosIdList: any[];
    editState: boolean;
    showCondition: boolean;
    positionType: string;
    position: PositionPerformerEntity;
    positions: PositionPerformerEntity[];
    constructor(designerUIState: ProcessDesignerUIState, expr: ExpressionService, ngZone: NgZone, resolver: ComponentFactoryResolver, injector: Injector, modalService: BsModalService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe, positionsNamePipe: PositionsNamePipe);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    onMouseEnter(event: any): void;
    onMouseLeave(event: any): void;
    private toggleClearIcon;
    clickOK(): void;
    clickCancel(): void;
    clear(): void;
    positionTypeChange(data: any): void;
    selectOrganition(): void;
    selectPosition(): void;
    editCondition(): void;
    orgTypeChange(re: any): void;
    clearOrgType(): void;
    positionsSelected(data: any): void;
    setPosition(): void;
    getPerformers(): PositionPerformerEntity[];
}
