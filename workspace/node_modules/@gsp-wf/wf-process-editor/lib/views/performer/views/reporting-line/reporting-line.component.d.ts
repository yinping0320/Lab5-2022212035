import { OnInit, ElementRef, NgZone, ChangeDetectorRef } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
import { ReportingLineDefinitionEntity } from './reporting-line-definition.entity';
import { ReportingLineDataEntity } from './reporting-line-data.entity';
import { reportingLineDimensionEntity } from './reporting-line-dimension.entity';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExpressionService } from '@gsp-svc/expression';
import { LookupGridComponent } from '@farris/ui-lookup';
import { SysFarrisTreeHelpComponent } from "@gsp-sys/sysmgr-ui";
import { PerformerEntity } from "../../entities/performer.entity";
import { WfReportDefHelpComponent } from "./service/wf-report-def-help.component";
import { WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class ReportingLineComponent implements OnInit {
    private http;
    designerUIState: ProcessDesignerUIState;
    private expr;
    private ngZone;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    cls: string;
    treeFilter: string;
    display: string;
    typeReadOnly: boolean;
    groupIcon2: string;
    defName: string;
    /**
     * 汇报关系数据
     */
    reportingLineDataEntity: ReportingLineDataEntity;
    /**
     * 汇报关系定义列表
     */
    reportingLineDefinitionList: ReportingLineDefinitionEntity[];
    reportingLineDefinition: any;
    reportingLineDimension: reportingLineDimensionEntity[];
    reportingLineDefHelp: WfReportDefHelpComponent;
    setReportingLineDataEntity: ReportingLineDataEntity;
    lookup: LookupGridComponent;
    orgHelp: SysFarrisTreeHelpComponent;
    inputGroup: ElementRef;
    inputGroup1: ElementRef;
    showClearButton: boolean;
    condition: string;
    items: ReportingLineDefinitionEntity[];
    users: PerformerEntity[];
    departments: PerformerEntity[];
    pageIndex: number;
    pageSize: number;
    pageList: number[];
    total: number;
    /**
     * 汇报类型显示列
     */
    columns: {
        title: any;
        field: string;
        width: number;
    }[];
    /**
     *  参与者列表汇报关系显示字段
     */
    reportingReferObjects: {
        name: any;
        value: string;
    }[];
    curReportingRefer: string;
    constructor(http: HttpService, designerUIState: ProcessDesignerUIState, expr: ExpressionService, ngZone: NgZone, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    /**
     * 获取汇报关系类型
     */
    getReportingLineType(): void;
    onclear(): void;
    referObjectChange(data: any): void;
    /**
     * 参照用户改变
     */
    referUserChange(data: any): void;
    /**
     * 维度改变
     */
    reportingDimensionChange(data: any): void;
    /**
     * 组织帮助选完后
     */
    orgSelected(org: any): void;
    /**
     * 编辑条件
     */
    editCondition(): void;
    getReportingTypes(value?: string): void;
    ngAfterViewInit(): void;
    onMouseEnter(event: any): void;
    onMouseLeave(event: any): void;
    private toggleClearIcon;
    clear(data: any): void;
    clearUser(): void;
    clearOrg(): void;
    selectOrg(data: string): void;
    selectUsers(data: string): void;
    showExprHelp(data: string): void;
    private variableParticipantName;
    defChanged(): void;
    defSelected(data: any): import("rxjs").Observable<boolean>;
    getPerformers(): ReportingLineDataEntity;
}
