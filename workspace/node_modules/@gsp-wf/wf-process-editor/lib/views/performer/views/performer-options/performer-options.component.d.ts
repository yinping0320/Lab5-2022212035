import { OnInit, NgZone, AfterViewInit, ElementRef, EventEmitter, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { PerformerOptions } from '../../entities/performer-options';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExpressionService } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
import { TypeConverter } from '@farris/ide-property-panel';
import { WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class PerformerOptionsComponent implements OnInit, AfterViewInit {
    private ngZone;
    private designerState;
    private expr;
    private message;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    cls: string;
    editorParams: any;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    modalFooter: TemplateRef<any>;
    performerOptionsLocation: string;
    value: PerformerOptions;
    exclusionPerformers: string | Array<string>;
    automaticPerformers: Array<string>;
    inputGroup: ElementRef;
    showClearButton: boolean;
    historicFirst: boolean;
    excludeExprPerformer: string;
    excludeProcInstCreator: boolean;
    excludePreActExecutors: boolean;
    excludeAllPassExecutors: boolean;
    autoProcInstCreator: boolean;
    autoPreActExecutors: boolean;
    autoAllPassExecutors: boolean;
    noPerformerStrategyList: {
        text: any;
        value: string;
    }[];
    variableOrgTypes: {
        name: any;
        value: string;
    }[];
    exclusionPerformersOptions: {
        value: string;
        name: any;
    }[];
    exprPerformerType: string;
    noPerformerStrategy: string;
    modalConfig: {
        title: any;
        width: number;
        height: number;
        showButtons: boolean;
    };
    constructor(ngZone: NgZone, designerState: ProcessDesignerUIState, expr: ExpressionService, message: MessagerService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    onMouseEnter(event: any): void;
    onMouseLeave(event: any): void;
    private toggleClearIcon;
    clickOK(): void;
    cancel(): void;
    excludeProcInstCreatorClick(event: any): void;
    excludePreActExecutorsClick(event: any): void;
    excludeAllPassExecutorsClick(event: any): void;
    autoProcInstCreatorClick(event: any): void;
    autoPreActExecutorsClick(event: any): void;
    autoAllPassExecutorsClick(event: any): void;
    getPerformerOptions(): PerformerOptions;
    private getExclusionPerformers;
    private getAutoPerformers;
    openExprEditor(): void;
    orgTypeChange(data: any): void;
    clear(): void;
}
export declare class PerformerOptionsConverter implements TypeConverter {
    private localePipe;
    constructor(localePipe: WfLocalePipe);
    convertTo(data: any[]): string;
}
