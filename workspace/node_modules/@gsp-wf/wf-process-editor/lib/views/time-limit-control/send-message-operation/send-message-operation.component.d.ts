import { OnInit, Injector, TemplateRef, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ExpireOperation, SendMessage } from '../time-limit-control.entity';
import { ExpressionService } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { SmsMessageTemplateComponent } from '../../sms-message-template/sms-message-template.component';
import { WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class SendMessageOperationComponent implements OnInit {
    private injector;
    private message;
    private uistate;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    private expr;
    groupIcon2: string;
    footer: TemplateRef<any>;
    SmsTemplate: SmsMessageTemplateComponent;
    value: SendMessage;
    operation: SendMessage;
    closeEmitter: EventEmitter<any>;
    submitEmitter: EventEmitter<ExpireOperation>;
    typeGroup: {
        value: any;
        name: any;
    }[];
    receiverVariables: {
        value: string;
        name: any;
    }[];
    activityReceiverVariables: {
        value: string;
        name: any;
    }[];
    placeholder: string;
    placeholder2: string;
    hasSmsTemplate: boolean;
    parser: (val: string | number) => number;
    timeUnitCollection: {
        value: string;
        text: any;
    }[];
    location: 'activity' | 'process';
    receiverVari: string;
    activityReceiverVar: string;
    bindingData: {
        id?: any;
        name?: any;
    };
    constructor(injector: Injector, message: MessagerService, uistate: ProcessDesignerUIState, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe, expr: ExpressionService);
    ngOnInit(): void;
    contentExpr(data: any): void;
    titleExpr(data: any): void;
    showContentHelp(data: string): void;
    showTitleHelp(data: string): void;
    clickOK(): void;
    clickCancel(): void;
    clear(): void;
    sendTypeChange(sendType: string): void;
    private setReceiver;
    setActivityReceiver(): void;
    private validator;
    private hasSmsMessage;
    showExpr(): any[];
}
