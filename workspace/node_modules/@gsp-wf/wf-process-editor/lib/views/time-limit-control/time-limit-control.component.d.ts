import { OnInit, EventEmitter, TemplateRef, Injector, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';
import { TypeConverter } from '@farris/ide-property-panel';
import { BsModalService } from '@farris/ui-modal';
import { TimeLimitInfo } from './time-limit-control.entity';
import { DatagridComponent } from '@farris/ui-datagrid';
import { MessagerService } from '@farris/ui-messager';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class TimeLimitControlComponent implements OnInit {
    private resolver;
    private injector;
    private modalService;
    private message;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    cls: string;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: TimeLimitInfo;
    editorParams: any;
    modalFooter: TemplateRef<any>;
    cell: TemplateRef<any>;
    grid: DatagridComponent;
    modalConfig: {
        title: any;
        width: number;
        height: number;
        showButtons: boolean;
    };
    timeLimitInfo: TimeLimitInfo;
    tagCollection: {
        value: string;
        text: any;
    }[];
    timeUnitCollection: {
        value: string;
        text: any;
    }[];
    durationTypeCollection: {
        value: string;
        text: any;
    }[];
    activityOperationTypeName: {
        value: string;
        text: any;
    }[];
    processOperationTypeName: {
        value: string;
        text: any;
    }[];
    operationTypeName: any[];
    timeScopeCollection: {
        value: string;
        name: any;
    }[];
    timeScopeValue: string;
    cols: any[];
    location: 'activity' | 'process';
    parser: (val: string | number) => number;
    durationTypeChange: (data: any) => void;
    constructor(resolver: ComponentFactoryResolver, injector: Injector, modalService: BsModalService, message: MessagerService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private validator;
    add(): void;
    remove(): void;
    editOperation(ctx: any): void;
    sendMassageOperation(ctx: any): void;
    autoHandleOperation(ctx: any): void;
    tagSelectChange(data: any): void;
    changeTimeScope(data: any): void;
}
export declare class TimeLimitControlConverter implements TypeConverter {
    private localePipe;
    constructor(localePipe: WfLocalePipe);
    convertTo(data: any): string;
}
