import { OnInit, EventEmitter, TemplateRef, Injector, ChangeDetectorRef } from '@angular/core';
import { TypeConverter } from '@farris/ide-property-panel';
import { ExpressionService, ExpressioneditorComponent } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class TitleExpressionComponent implements OnInit {
    private expr;
    private injector;
    designerState: ProcessDesignerUIState;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: any;
    textWithMultiLanguage: Map<string, string>;
    modalFooter: TemplateRef<any>;
    editorParams: any;
    language: string;
    editor: ExpressioneditorComponent;
    languageOptions: {
        value: string;
        text: any;
    }[];
    contextEntities: any[];
    schema: any;
    injectName: string;
    modalConfig: {
        title: any;
        width: number;
        height: number;
        showButtons: boolean;
    };
    constructor(expr: ExpressionService, injector: Injector, designerState: ProcessDesignerUIState, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private convertToValue;
}
export declare class TitleExpressionConverter implements TypeConverter {
    private localePipe;
    constructor(localePipe: WfLocalePipe);
    convertTo(data: any): string;
    areAllPropertiesEmpty(obj: any): boolean;
}
