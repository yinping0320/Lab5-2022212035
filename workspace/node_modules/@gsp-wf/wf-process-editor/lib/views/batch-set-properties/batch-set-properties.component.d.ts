import { ComponentFactoryResolver, Injector, OnInit, TemplateRef } from '@angular/core';
import { PickedResult } from '@farris/ui-lookup';
import { Observable, Subject } from 'rxjs';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { BsModalService } from '@farris/ui-modal';
import { ProcessDesignerViewModel } from '../../app/process-designer.viewmodel';
export declare class BatchSetPropertiesComponent implements OnInit {
    uistate: ProcessDesignerUIState;
    private localeId;
    private resources;
    private localePipe;
    private resolver;
    private injector;
    private modalService;
    private viewModel;
    groupIcon2: string;
    submit: Subject<string>;
    cancel: Subject<any>;
    footer: TemplateRef<any>;
    modalFooter: TemplateRef<any>;
    cols: {
        title: any;
        field: string;
        width: number;
        searchField: string;
    }[];
    activityModel: any;
    useractivities: any[];
    useroperationnotifyactivities: any[];
    useroperationsubcatchactivities: any[];
    actis1: any[];
    actis2: any[];
    actis3: any[];
    actis4: any[];
    actis5: any[];
    addSignFrontActis: any[];
    addSignBehindActis: any[];
    transferActis: any[];
    notifyActis: any[];
    backWardRuleActis: any[];
    nullActis: any[];
    addSignFrontEnable: boolean;
    addSignBehindEnable: boolean;
    transferEnable: boolean;
    notifyEnable: boolean;
    backWardRuleEnable: boolean;
    backWardRule: {};
    addSignFrontScope: {};
    addSignBehindScope: {};
    transferScope: {};
    notifyScope: {};
    pageInfo: {
        pageIndex: number;
        pageList: number[];
        pageSize: number;
    };
    total: number;
    constructor(uistate: ProcessDesignerUIState, localeId: string, resources: any, localePipe: WfLocalePipe, resolver: ComponentFactoryResolver, injector: Injector, modalService: BsModalService, viewModel: ProcessDesignerViewModel);
    ngOnInit(): void;
    frontActisSelect: (rowData: any) => Observable<PickedResult>;
    behindActisSelect: (rowData: any) => Observable<PickedResult>;
    notifyActisSelect: (rowData: any) => Observable<PickedResult>;
    transferActisSelect: (rowData: any) => Observable<PickedResult>;
    backWardRuleActisSelect: (rowData: any) => Observable<PickedResult>;
    actisSelect: (rowData: any) => Observable<PickedResult>;
    clickOK(): void;
    clickCancel(): void;
    batchSet(value: any): void;
}
export declare enum ResourceKeys {
    batchSetProperty = "batchSetProperty"
}
