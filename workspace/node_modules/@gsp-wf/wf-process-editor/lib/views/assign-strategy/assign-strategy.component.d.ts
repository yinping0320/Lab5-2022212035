import { ChangeDetectorRef, EventEmitter, Injector, OnInit, TemplateRef } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { HttpService } from '@ecp-caf/caf-common';
import { MessagerService } from '@farris/ui-messager';
import { TypeConverter } from '@farris/ide-property-panel';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { AssignStrategy } from './assign-strategy';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class AssignStrategyComponent implements OnInit {
    private injector;
    private message;
    private designerUIState;
    private http;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: AssignStrategy;
    modalFooter: TemplateRef<any>;
    assingPerformerConfigForm: FormGroup;
    assignStrategy: AssignStrategy;
    assignStrategyList: {
        value: string;
        name: any;
    }[];
    operatorCollection: {
        text: any;
        value: string;
    }[];
    modalConfig: {
        title: any;
        width: number;
        height: number;
        showButtons: boolean;
    };
    constructor(injector: Injector, message: MessagerService, designerUIState: ProcessDesignerUIState, http: HttpService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    changeValue(event: any): void;
    clickOK(): void;
    clickCancel(): void;
}
export declare class AssignStrategyConverter implements TypeConverter {
    private localePipe;
    constructor(localePipe: WfLocalePipe);
    convertTo(data: AssignStrategy): string;
}
