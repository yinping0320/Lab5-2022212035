import { OnInit, TemplateRef, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { DataColumn, DatagridComponent } from '@farris/ui-datagrid';
import { DialogComponent } from '@farris/ui-dialog';
import { LookupGridComponent, PickedResult } from '@farris/ui-lookup';
import { MessagerService } from '@farris/ui-messager';
import { Observable } from 'rxjs';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class MessageNoticeCopyComponent implements OnInit {
    uistate: ProcessDesignerUIState;
    private message;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    modalFooter: TemplateRef<any>;
    closeEmitter: EventEmitter<any>;
    submitEmitter: EventEmitter<any>;
    allActisTable: DatagridComponent;
    allActisDialog: DialogComponent;
    actTable: DatagridComponent;
    lookup: LookupGridComponent;
    cols: {
        title: any;
        field: string;
        width: number;
        searchField: string;
    }[];
    actis: any[];
    fullActis: any[];
    pageInfo: {
        pageIndex: number;
        pageList: number[];
        pageSize: number;
    };
    total: number;
    messageNotice: any[];
    messageNoticeValue: any[];
    targetNodeID: any[];
    activitySendTime: {
        value: string;
        text: any;
    }[];
    columns: ({
        field: string;
        width: number;
        title: any;
        showTips?: undefined;
        formatter?: undefined;
    } | {
        field: string;
        width: number;
        title: any;
        showTips: boolean;
        formatter?: undefined;
    } | {
        field: string;
        width: number;
        title: any;
        formatter: {
            type: string;
            options: {
                valueField: string;
                textField: string;
                data: {
                    value: string;
                    text: any;
                }[];
            };
        };
        showTips?: undefined;
    } | {
        field: string;
        width: number;
        title: any;
        formatter: {
            type: string;
            options: {
                valueField: string;
                textField: string;
                data: {
                    value: any;
                    name: any;
                }[];
            };
        };
        showTips?: undefined;
    })[];
    constructor(uistate: ProcessDesignerUIState, message: MessagerService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    endEdit(e: any): void;
    actisSelect: (rowData: any) => Observable<PickedResult>;
    paramAfterEdit: (rowIndex: number, rowData: any, column?: DataColumn) => Observable<boolean>;
    messageNotices: any[];
    clickOK(): void;
    clickCancel(): void;
}
