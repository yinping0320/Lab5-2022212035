import { OnInit, EventEmitter, TemplateRef, ComponentFactoryResolver, Injector, ChangeDetectorRef } from '@angular/core';
import { TypeConverter } from '@farris/ide-property-panel';
import { MessageNotice } from './message-notice';
import { BsModalService } from '@farris/ui-modal';
import { MessagerService } from '@farris/ui-messager';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ProcessDesignerViewModel } from '../../app/process-designer.viewmodel';
import { HttpService } from '@ecp-caf/caf-common';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class MessageNoticeComponent implements OnInit {
    private resolver;
    private injector;
    private modalService;
    private message;
    private uistate;
    private viewModel;
    private http;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    cls: string;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    value: any[];
    editorParams: any;
    modalFooter: TemplateRef<any>;
    grid: DatagridComponent;
    modalConfig: {
        title: any;
        width: number;
        height: number;
        showButtons: boolean;
    };
    messageNotices: Array<MessageNotice>;
    columns: any[];
    location: 'activity' | 'process' | 'messageActivity';
    constructor(resolver: ComponentFactoryResolver, injector: Injector, modalService: BsModalService, message: MessagerService, uistate: ProcessDesignerUIState, viewModel: ProcessDesignerViewModel, http: HttpService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    add(): void;
    edit(): void;
    batchCopy(): void;
    delete(): void;
    clickOK(): void;
    clickCancel(): void;
    private GetOrganizationType;
    processSendTime: {
        value: string;
        text: any;
    }[];
    activitySendTime: {
        value: string;
        text: any;
    }[];
}
export declare enum ResourceKeys {
    batchCopyProperty = "batchCopyProperty"
}
export declare class MessageNoticeConverter implements TypeConverter {
    private localePipe;
    constructor(localePipe: WfLocalePipe);
    convertTo(data: any[]): string;
}
