import { OnInit, EventEmitter, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { TypeConverter } from '@farris/ide-property-panel';
import { UrgeHandleRule } from './urge-handle-rule';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
import { SmsMessageTemplateComponent } from '../sms-message-template/sms-message-template.component';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
export declare class UrgeHandleRuleComponent implements OnInit {
    private designerUIState;
    private expr;
    private message;
    private cdr;
    private localeId;
    private resources;
    private localePipe;
    groupIcon2: string;
    closeModal: EventEmitter<any>;
    submitModal: EventEmitter<any>;
    modalFooter: TemplateRef<any>;
    SmsTemplate: SmsMessageTemplateComponent;
    value: any;
    urgeHandleRule: UrgeHandleRule;
    typeGroup: {
        value: any;
        name: any;
    }[];
    modalConfig: {
        title: any;
        width: number;
        height: number;
        showButtons: boolean;
    };
    hasSmsTemplate: boolean;
    constructor(designerUIState: ProcessDesignerUIState, expr: ExpressionService, message: MessagerService, cdr: ChangeDetectorRef, localeId: string, resources: any, localePipe: WfLocalePipe);
    ngOnInit(): void;
    clickOK(): void;
    clickCancel(): void;
    private validator;
    sendTypeChange(sendType: string): void;
    parser: (val: string | number) => number;
    titleExpr(data: any): void;
    contentExpr(data: any): void;
    showTitleHelp(data: string): void;
    showContentHelp(data: string): void;
    showExpr(): any[];
    private hasSmsMessage;
}
export declare class UrgeHandleRuleConverter implements TypeConverter {
    private localePipe;
    constructor(localePipe: WfLocalePipe);
    convertTo(data: any): string;
}
