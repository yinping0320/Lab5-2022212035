import { EditorUi, Graph } from "@edp-pmf/grapheditor";
import { WfGraph } from "./WfGraph";
import { BizActivity } from "@gsp-wf/wf-process-model";
import { WfSidebar } from "./WfSidebar";
import { WfProcessEditorComponent } from "../wf-process-editor.component";
import { BsModalService } from "@farris/ui-modal";
import { ComponentFactoryResolver, Injector } from "@angular/core";
export declare class WfEditorUi extends EditorUi {
    private injector?;
    private modalService?;
    private resolver?;
    editor: WfProcessEditorComponent;
    graph: WfGraph;
    sidebar: WfSidebar;
    time: string;
    bizCategoryId: string;
    action: string;
    mode: string;
    scene: string;
    procType: string;
    procExtProps: any;
    formFormats: any;
    generalConfig: {
        enableTransfer: boolean;
        enableNotify: boolean;
        enableAddSignBehind: boolean;
        enableAddSignFront: boolean;
    };
    zoomBar: HTMLDivElement;
    constructor(time: string, action: string, container?: HTMLElement, injector?: Injector, modalService?: BsModalService, resolver?: ComponentFactoryResolver, eventSource?: any, importLinks?: boolean);
    createActions(): import("@edp-pmf/grapheditor").Actions;
    createToolbox(): import("@edp-pmf/grapheditor").Toolbox;
    createGraphInstance(): Graph;
    createSidebar(): WfSidebar;
    show(): void;
    sidebarSplitOnChange(value: number): void;
    /**
     * 创建带指定样式类的span
     * @param classname
     * @returns
     */
    createSpan(classname: string): HTMLSpanElement;
    /**
     * 加载业务活动
     * @param bizActivities
     */
    loadBizActivities(bizActivities: BizActivity[]): void;
    /**
     * 批量复制属性
     * @param obj
     */
    batchCopyProperty(obj: any): void;
    /**
   * 批量设置属性
   * @param obj
   */
    batchSetProperty(obj: any): void;
    /**
     * 创建新流程
     * @param newProcInfo
     * @param bizCmps
     */
    createBpmnModel(newProcInfo: any, bizCmps?: any): void;
    /**
     * 打开流程
     * @param content
     */
    openBpmnModel(content: string): void;
    /**
     * 获取属性配置，刷新属性框
     * @param obj
     * @returns
     */
    refreshProperty(obj: any): import("@edp-pmf/grapheditor").FarrisPropConfigWithData;
    /**
     * 获取用户活动
     * @returns
     */
    getActivities(): any[];
    /**
     * 获取结束事件
     * @returns
     */
    getEndEvents(): any[];
    /**
     * 获取知会事件
     * @returns
     */
    getNotifyEvents(): any[];
    /**
     * 获取消息事件
     * @returns
     */
    getMessageEvents(): any[];
    /**
     * 获取子流程和信号捕获节点
     * @returns
     */
    getSubAndCatchEvents(): any[];
    /**
     * 获取启动方式
     * @returns
     */
    getStartMode(): any;
}
