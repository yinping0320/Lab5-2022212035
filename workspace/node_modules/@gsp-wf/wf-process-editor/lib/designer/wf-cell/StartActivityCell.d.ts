import { NodeCell, FarrisPropConfigWithData } from "@edp-pmf/grapheditor";
import { MxGraphNS } from "@edp-pmf/mxgraph-ts";
import { FlowNodeState } from "@edp-pmf/bpmn-model";
import { StartActivity } from "@gsp-wf/wf-process-model";
import { WfEditorUi } from "../WfEditorUi";
/**
 * 开始活动节点
 */
export declare class StartActivityCell extends NodeCell {
    clrTypeId: string;
    name: string;
    nameLanguage: {
        [lang: string]: string;
    };
    static CLR_TYPE_ID: string;
    flowElement: StartActivity;
    editorUi: WfEditorUi;
    imgUrls: {
        [FlowNodeState.Default]: string;
        [FlowNodeState.Selected]: string;
    };
    constructor(value?: any, geometry?: MxGraphNS.mxGeometry, style?: string);
    createFlowElement(flowElt?: StartActivity): StartActivity;
    getFarrisPropConfig(): FarrisPropConfigWithData;
    updateProps(obj: any): void;
    updateStartActivityForm(start: StartActivity, obj: any, terminal: string): void;
    /**
     * 更新是否允许跳转属性
     * @param startActivity
     * @param obj
     */
    resetSelectTargetAble(startActivity: StartActivity, obj: any): void;
    resetJumpScope(startActivity: StartActivity, obj: any): void;
    updateOtherAssignNodes(startActivity: StartActivity, obj: any): void;
    updateOtherAssignActivities(startActivity: StartActivity, obj: any): void;
    /**
     * 更新开始节点扩展属性
     * @param startActivity
     * @param obj
     */
    resetExtendProperty(startActivity: StartActivity, obj: any): void;
}
