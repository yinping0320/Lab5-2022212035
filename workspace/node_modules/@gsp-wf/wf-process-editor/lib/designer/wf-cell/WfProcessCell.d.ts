import { FarrisPropConfigWithData, ProcessCell } from "@edp-pmf/grapheditor";
import { Process, BPMNPlane } from "@edp-pmf/bpmn-model";
import { StartMode, Component, MessageNotice, TimeLimitControl, TimeLimitControlInfo } from "@gsp-wf/wf-process-model";
import { WfEditorUi } from "../WfEditorUi";
import { BizComponent } from "../entity/BizComponent";
import { ProcessDesignerUIState } from "../../app/process-designer.uistate";
/**
 * 流程元素类。
 * 取名虽然Cell，但实际上不需要继承mxCell以及Cell类，仅持有流程与画布实例，方法属性获取与修改操作。
 */
export declare class WfProcessCell extends ProcessCell {
    process: Process;
    plane: BPMNPlane;
    editorUi: WfEditorUi;
    uiState: ProcessDesignerUIState;
    getFarrisPropConfig(): FarrisPropConfigWithData;
    updateProps(obj: any): void;
    /**
    * 设置流程属性值
    * @param bpmnModel
    * @param propertyData
    * @param groupList
    */
    setProcessPropertyValue(propertyData: any, groupList?: any): void;
    getProcessVariables(process: Process): any[];
    getPrcocessTimeLimitInfo(timeLimitControl: TimeLimitControl): TimeLimitControlInfo;
    getMessageNotice(messageNotice: MessageNotice): any;
    convert2Component(component: Component): BizComponent;
    /**
     * 设置ProcessHeader
     * @param ffId
     * @param bizObjId
     * @param ffName
     * @param startMode
     */
    setProcessHeader(ffId: string, bizObjId: string, ffName: string, startMode: StartMode): void;
    /**
     * 更新流程分类绑定的参数，流程组件，表单信息
     * @param params 参数列表
     * @param cpts 流程组件
     * @param form 流程表单
     */
    updateFlowFormInfo(params: any[], cpts: any[], forms: any[], customizeActions: any[], bizCmps: any): void;
    updateFormalParameters(parameters: any[], cmps?: any[]): void;
    /**
     * 基于流程分类的切换更新流程构件
     */
    setProcessComponents(procCpts: any[], bizCmps: any): void;
    updateExecuteForms(forms: any[]): void;
    updateExecuteForm(form: any, terminal?: string): void;
    updateCustomizeActions(customizeActions: any[]): void;
    /**
     * 更新流程备注
     * @param bpmnModel
     * @param value
     */
    modifyProcessTitleExpression(value: any): void;
    updateProcessHeader(ffName: string, bizObjId?: string, ffId?: string): void;
    bindProcessTitleExpression(value: string): void;
    /**
     * 基于流程分类的切换更新流程构件
     */
    updateProcessComponents(procCpts: any[]): void;
    updateAllowPreAssign(assign: boolean): void;
    updateEnablePriority(priority: boolean): void;
    updateStartMode(startMode: StartMode, allCmps: any, bizCmps: any): void;
    updateProcessVariables(variables: any[]): void;
    updateProcessTimeLimitControl(timeLimit: any): void;
    updateProcessMessageNotices(notices: any[]): void;
    updateImageSettings(imageSettings: any): void;
    /**
     * 更新扩展属性
     * @param bpmnModel
     * @param value
     */
    resetExtendProperty(value: any[]): void;
    updateEnableWholeOrderRetrieve(wholeOrderRetrieve: boolean): void;
}
