import { HttpService } from '@ecp-caf/caf-common';
import { Observable } from 'rxjs/Observable';
import { ProcessDeUtil } from './process-de-util';
import { AuditProcessDefInfo } from './entities/audit-processDef-info';
import { ProcessInfo } from '../model/process-info';
import { RTProcessInfo } from '../model/rt-process-info';
export declare class ProcessDesignerDataService {
    private http;
    private util;
    constructor(http: HttpService, util: ProcessDeUtil);
    GetFlowFormbyId(id: string): Observable<any>;
    getParametersbyFlowFormKey(id: string): Observable<any>;
    getComponentsbyFlowformkey(id: string): Observable<any>;
    getExecuteFormbyFlowFormKey(id: string): Observable<any>;
    /**
     * 基于流程分类Id获取业务活动
     * @param ffId 流程分类id
     */
    getBizActivities(ffId: string): Observable<ArrayBuffer>;
    /**
     * 基于流程分类ID获取自定义动作
     * @param formId 流程分类ID
     */
    getCustomizeActions(formId: string): Observable<any>;
    /**
     * 基于业务活动id获取业务活动构件
     * @param id 业务活动id
     */
    private getBizActivityComponents;
    private getBizActivityActions;
    getBusinessEntitybyId(id: string): Observable<any>;
    /**
     * 基于流程定义Key获取上下文
     * @param key 流程定义key
     */
    getProcContentbyKey(key: string): Observable<any>;
    /**
     * 基于流程定义Key获取上下文
     * @param key 流程定义Id
     */
    getRTProcContentbyId(id: string): Observable<any>;
    /**
     * 保存流程
     * @param content
     */
    saveProcess(content: string, processInfo: ProcessInfo, state: number): Observable<any>;
    auditProcessDef(info: AuditProcessDefInfo): void;
    /**
     * 发布流程
     * @param content
     */
    deployProcess(content: string): Observable<any>;
    saveRTProcess(content: string, procDefId: string): Observable<any>;
    syncDtProcess(content: string, rtProcessInfo: RTProcessInfo): Observable<any>;
    /**
     * 获取流程扩展属性
     * @param bizDefKey
     * @param startMode
     * @param bizCategoryId
     * @returns
     */
    getProcExtendProperty(bizDefKey: string, startMode: string, bizCategoryId: string): Observable<ArrayBuffer>;
    /**
     * 获取流程构件
     * @returns
     */
    getBizCmp(): Observable<ArrayBuffer>;
    /**
     * 获取全部流程构件
     * @param flowFormKey
     * @returns
     */
    getAllBizCmp(flowFormKey: any): Observable<ArrayBuffer>;
    /**
     * 获取表单格式
     */
    getFormFormat(bizCategoryId: string): Observable<any>;
    /**
     * 获取配置
     * @returns
     */
    getGeneralConfig(): Observable<{
        enableTransfer: any;
        enableNotify: any;
        enableAddSignBehind: any;
        enableAddSignFront: any;
    }>;
}
