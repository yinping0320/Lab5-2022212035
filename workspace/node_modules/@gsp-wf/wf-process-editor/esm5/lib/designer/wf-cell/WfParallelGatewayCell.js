/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelHelper, FlowNodeState } from "@edp-pmf/bpmn-model";
import { ParallelGatewayCell } from "@edp-pmf/grapheditor";
import { WfConstants } from "../WfConstants";
/**
 * 并行事件节点，增加状态图片信息
 */
var /**
 * 并行事件节点，增加状态图片信息
 */
WfParallelGatewayCell = /** @class */ (function (_super) {
    tslib_1.__extends(WfParallelGatewayCell, _super);
    function WfParallelGatewayCell() {
        var _a;
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.imgUrls = (_a = {},
            _a[FlowNodeState.Default] = WfConstants.IMAGE_PATH + "/ParallelGateway.png",
            _a[FlowNodeState.Selected] = WfConstants.IMAGE_PATH + "/ParallelGateway_select.svg",
            _a);
        return _this;
    }
    /**
     * @param {?=} flowElt
     * @return {?}
     */
    WfParallelGatewayCell.prototype.createFlowElement = /**
     * @param {?=} flowElt
     * @return {?}
     */
    function (flowElt) {
        /** @type {?} */
        var flowNode = (/** @type {?} */ (_super.prototype.createFlowElement.call(this, flowElt)));
        flowNode.Id = "ParallelGateway" + BpmnModelHelper.GenerateElementId();
        return flowNode;
    };
    return WfParallelGatewayCell;
}(ParallelGatewayCell));
/**
 * 并行事件节点，增加状态图片信息
 */
export { WfParallelGatewayCell };
if (false) {
    /** @type {?} */
    WfParallelGatewayCell.prototype.imgUrls;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ZQYXJhbGxlbEdhdGV3YXlDZWxsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9kZXNpZ25lci93Zi1jZWxsL1dmUGFyYWxsZWxHYXRld2F5Q2VsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBbUIsZUFBZSxFQUFFLGFBQWEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzNELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUs3Qzs7OztJQUEyQyxpREFBbUI7SUFBOUQ7O1FBQUEscUVBWUM7UUFYRyxhQUFPO1lBQ0gsR0FBQyxhQUFhLENBQUMsT0FBTyxJQUFHLFdBQVcsQ0FBQyxVQUFVLEdBQUcsc0JBQXNCO1lBQ3hFLEdBQUMsYUFBYSxDQUFDLFFBQVEsSUFBRyxXQUFXLENBQUMsVUFBVSxHQUFHLDZCQUE2QjtnQkFDbEY7O0lBUU4sQ0FBQzs7Ozs7SUFORyxpREFBaUI7Ozs7SUFBakIsVUFBa0IsT0FBeUI7O1lBQ2pDLFFBQVEsR0FBRyxtQkFBQSxpQkFBTSxpQkFBaUIsWUFBQyxPQUFPLENBQUMsRUFBbUI7UUFDcEUsUUFBUSxDQUFDLEVBQUUsR0FBRyxpQkFBaUIsR0FBRyxlQUFlLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUV0RSxPQUFPLFFBQVEsQ0FBQztJQUNwQixDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQUFDLEFBWkQsQ0FBMkMsbUJBQW1CLEdBWTdEOzs7Ozs7O0lBWEcsd0NBR0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYXJhbGxlbEdhdGV3YXksIEJwbW5Nb2RlbEhlbHBlciwgRmxvd05vZGVTdGF0ZSB9IGZyb20gXCJAZWRwLXBtZi9icG1uLW1vZGVsXCI7XHJcbmltcG9ydCB7IFBhcmFsbGVsR2F0ZXdheUNlbGwgfSBmcm9tIFwiQGVkcC1wbWYvZ3JhcGhlZGl0b3JcIjtcclxuaW1wb3J0IHsgV2ZDb25zdGFudHMgfSBmcm9tIFwiLi4vV2ZDb25zdGFudHNcIjtcclxuXHJcbi8qKlxyXG4gKiDlubbooYzkuovku7boioLngrnvvIzlop7liqDnirbmgIHlm77niYfkv6Hmga9cclxuICovXHJcbmV4cG9ydCBjbGFzcyBXZlBhcmFsbGVsR2F0ZXdheUNlbGwgZXh0ZW5kcyBQYXJhbGxlbEdhdGV3YXlDZWxsIHtcclxuICAgIGltZ1VybHMgPSB7XHJcbiAgICAgICAgW0Zsb3dOb2RlU3RhdGUuRGVmYXVsdF06IFdmQ29uc3RhbnRzLklNQUdFX1BBVEggKyBcIi9QYXJhbGxlbEdhdGV3YXkucG5nXCIsXHJcbiAgICAgICAgW0Zsb3dOb2RlU3RhdGUuU2VsZWN0ZWRdOiBXZkNvbnN0YW50cy5JTUFHRV9QQVRIICsgXCIvUGFyYWxsZWxHYXRld2F5X3NlbGVjdC5zdmdcIixcclxuICAgIH07XHJcblxyXG4gICAgY3JlYXRlRmxvd0VsZW1lbnQoZmxvd0VsdD86IFBhcmFsbGVsR2F0ZXdheSkge1xyXG4gICAgICAgIGNvbnN0IGZsb3dOb2RlID0gc3VwZXIuY3JlYXRlRmxvd0VsZW1lbnQoZmxvd0VsdCkgYXMgUGFyYWxsZWxHYXRld2F5O1xyXG4gICAgICAgIGZsb3dOb2RlLklkID0gXCJQYXJhbGxlbEdhdGV3YXlcIiArIEJwbW5Nb2RlbEhlbHBlci5HZW5lcmF0ZUVsZW1lbnRJZCgpO1xyXG5cclxuICAgICAgICByZXR1cm4gZmxvd05vZGU7XHJcbiAgICB9XHJcbn0iXX0=