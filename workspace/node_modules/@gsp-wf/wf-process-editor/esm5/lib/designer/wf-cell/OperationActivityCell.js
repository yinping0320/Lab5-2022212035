/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { OperationActivity } from "@gsp-wf/wf-process-model";
import { UserActivityCell } from "./UserActivityCell";
import { FlowNodeState } from "@edp-pmf/bpmn-model";
import { WfConstants } from "../WfConstants";
/**
 * 人工操作活动节点
 */
var OperationActivityCell = /** @class */ (function (_super) {
    tslib_1.__extends(OperationActivityCell, _super);
    function OperationActivityCell(value, geometry, style) {
        var _a;
        var _this = _super.call(this, value, geometry, style) || this;
        _this.clrTypeId = OperationActivityCell.CLR_TYPE_ID;
        _this.name = "人工操作";
        _this.nameLanguage = {
            "zh-CHS": "人工操作",
            "zh-CHT": "人工操作",
            "en": "Operation",
        };
        _this.imgUrls = (_a = {},
            _a[FlowNodeState.Default] = WfConstants.IMAGE_PATH + "/bizActivity.png",
            _a[FlowNodeState.Selected] = WfConstants.IMAGE_PATH + "/bizActivity_select.svg",
            _a);
        return _this;
    }
    /**
     * @param {?=} flowElt
     * @return {?}
     */
    OperationActivityCell.prototype.createFlowElement = /**
     * @param {?=} flowElt
     * @return {?}
     */
    function (flowElt) {
        /** @type {?} */
        var flowNode = (/** @type {?} */ (_super.prototype.createFlowElement.call(this, flowElt)));
        return flowNode;
    };
    /**
     * @return {?}
     */
    OperationActivityCell.prototype.getFarrisPropConfig = /**
     * @return {?}
     */
    function () {
        return this.getFarrisPropConfigByIsOperation(true);
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    OperationActivityCell.prototype.updateProps = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        this.updatePropsByIsOperation(obj, true);
    };
    OperationActivityCell.CLR_TYPE_ID = OperationActivity.Clr_Type_ID;
    return OperationActivityCell;
}(UserActivityCell));
export { OperationActivityCell };
if (false) {
    /** @type {?} */
    OperationActivityCell.CLR_TYPE_ID;
    /** @type {?} */
    OperationActivityCell.prototype.clrTypeId;
    /** @type {?} */
    OperationActivityCell.prototype.name;
    /** @type {?} */
    OperationActivityCell.prototype.nameLanguage;
    /** @type {?} */
    OperationActivityCell.prototype.flowElement;
    /** @type {?} */
    OperationActivityCell.prototype.imgUrls;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3BlcmF0aW9uQWN0aXZpdHlDZWxsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9kZXNpZ25lci93Zi1jZWxsL09wZXJhdGlvbkFjdGl2aXR5Q2VsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzdELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBbUIsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBSzdDO0lBQTJDLGlEQUFnQjtJQWdCdkQsK0JBQVksS0FBVyxFQUFFLFFBQStCLEVBQUUsS0FBYzs7UUFBeEUsWUFDSSxrQkFBTSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxTQUNoQztRQWpCRCxlQUFTLEdBQVcscUJBQXFCLENBQUMsV0FBVyxDQUFDO1FBQ3RELFVBQUksR0FBVyxNQUFNLENBQUM7UUFDdEIsa0JBQVksR0FBZ0M7WUFDMUMsUUFBUSxFQUFFLE1BQU07WUFDaEIsUUFBUSxFQUFFLE1BQU07WUFDaEIsSUFBSSxFQUFFLFdBQVc7U0FDcEIsQ0FBQztRQUlBLGFBQU87WUFDSCxHQUFDLGFBQWEsQ0FBQyxPQUFPLElBQUcsV0FBVyxDQUFDLFVBQVUsR0FBRyxrQkFBa0I7WUFDcEUsR0FBQyxhQUFhLENBQUMsUUFBUSxJQUFHLFdBQVcsQ0FBQyxVQUFVLEdBQUcseUJBQXlCO2dCQUM5RTs7SUFJRixDQUFDOzs7OztJQUVELGlEQUFpQjs7OztJQUFqQixVQUFrQixPQUEyQjs7WUFDbkMsUUFBUSxHQUFHLG1CQUFBLGlCQUFNLGlCQUFpQixZQUFDLE9BQU8sQ0FBQyxFQUFxQjtRQUN0RSxPQUFPLFFBQVEsQ0FBQztJQUNwQixDQUFDOzs7O0lBRUQsbURBQW1COzs7SUFBbkI7UUFDSSxPQUFPLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDOzs7OztJQUVELDJDQUFXOzs7O0lBQVgsVUFBWSxHQUFRO1FBQ2hCLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQXZCTSxpQ0FBVyxHQUFXLGlCQUFpQixDQUFDLFdBQVcsQ0FBQztJQXdCL0QsNEJBQUM7Q0FBQSxBQWhDRCxDQUEyQyxnQkFBZ0IsR0FnQzFEO1NBaENZLHFCQUFxQjs7O0lBUTlCLGtDQUEyRDs7SUFQM0QsMENBQXNEOztJQUN0RCxxQ0FBc0I7O0lBQ3RCLDZDQUlBOztJQUVBLDRDQUErQjs7SUFFL0Isd0NBR0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGYXJyaXNQcm9wQ29uZmlnV2l0aERhdGEgfSBmcm9tIFwiQGVkcC1wbWYvZ3JhcGhlZGl0b3JcIjtcclxuaW1wb3J0IHsgTXhHcmFwaE5TIH0gZnJvbSBcIkBlZHAtcG1mL214Z3JhcGgtdHNcIjtcclxuaW1wb3J0IHsgT3BlcmF0aW9uQWN0aXZpdHkgfSBmcm9tIFwiQGdzcC13Zi93Zi1wcm9jZXNzLW1vZGVsXCI7XHJcbmltcG9ydCB7IFVzZXJBY3Rpdml0eUNlbGwgfSBmcm9tIFwiLi9Vc2VyQWN0aXZpdHlDZWxsXCI7XHJcbmltcG9ydCB7IEJwbW5Nb2RlbEhlbHBlciwgRmxvd05vZGVTdGF0ZSB9IGZyb20gXCJAZWRwLXBtZi9icG1uLW1vZGVsXCI7XHJcbmltcG9ydCB7IFdmQ29uc3RhbnRzIH0gZnJvbSBcIi4uL1dmQ29uc3RhbnRzXCI7XHJcblxyXG4vKipcclxuICog5Lq65bel5pON5L2c5rS75Yqo6IqC54K5XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgT3BlcmF0aW9uQWN0aXZpdHlDZWxsIGV4dGVuZHMgVXNlckFjdGl2aXR5Q2VsbCB7XHJcbiAgICBjbHJUeXBlSWQ6IHN0cmluZyA9IE9wZXJhdGlvbkFjdGl2aXR5Q2VsbC5DTFJfVFlQRV9JRDtcclxuICAgIG5hbWU6IHN0cmluZyA9IFwi5Lq65bel5pON5L2cXCI7XHJcbiAgICBuYW1lTGFuZ3VhZ2U6IHsgW2xhbmc6IHN0cmluZ106IHN0cmluZzsgfSA9IHtcclxuICAgICAgXCJ6aC1DSFNcIjogXCLkurrlt6Xmk43kvZxcIixcclxuICAgICAgXCJ6aC1DSFRcIjogXCLkurrlt6Xmk43kvZxcIixcclxuICAgICAgXCJlblwiOiBcIk9wZXJhdGlvblwiLFxyXG4gIH07XHJcbiAgICBzdGF0aWMgQ0xSX1RZUEVfSUQ6IHN0cmluZyA9IE9wZXJhdGlvbkFjdGl2aXR5LkNscl9UeXBlX0lEO1xyXG4gICAgZmxvd0VsZW1lbnQ6IE9wZXJhdGlvbkFjdGl2aXR5O1xyXG5cclxuICAgIGltZ1VybHMgPSB7XHJcbiAgICAgICAgW0Zsb3dOb2RlU3RhdGUuRGVmYXVsdF06IFdmQ29uc3RhbnRzLklNQUdFX1BBVEggKyBcIi9iaXpBY3Rpdml0eS5wbmdcIixcclxuICAgICAgICBbRmxvd05vZGVTdGF0ZS5TZWxlY3RlZF06IFdmQ29uc3RhbnRzLklNQUdFX1BBVEggKyBcIi9iaXpBY3Rpdml0eV9zZWxlY3Quc3ZnXCIsXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHZhbHVlPzogYW55LCBnZW9tZXRyeT86IE14R3JhcGhOUy5teEdlb21ldHJ5LCBzdHlsZT86IHN0cmluZykge1xyXG4gICAgICAgIHN1cGVyKHZhbHVlLCBnZW9tZXRyeSwgc3R5bGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZUZsb3dFbGVtZW50KGZsb3dFbHQ/OiBPcGVyYXRpb25BY3Rpdml0eSkge1xyXG4gICAgICAgIGNvbnN0IGZsb3dOb2RlID0gc3VwZXIuY3JlYXRlRmxvd0VsZW1lbnQoZmxvd0VsdCkgYXMgT3BlcmF0aW9uQWN0aXZpdHk7XHJcbiAgICAgICAgcmV0dXJuIGZsb3dOb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEZhcnJpc1Byb3BDb25maWcoKTogRmFycmlzUHJvcENvbmZpZ1dpdGhEYXRhIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRGYXJyaXNQcm9wQ29uZmlnQnlJc09wZXJhdGlvbih0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVQcm9wcyhvYmo6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudXBkYXRlUHJvcHNCeUlzT3BlcmF0aW9uKG9iaiwgdHJ1ZSk7XHJcbiAgICB9XHJcbn1cclxuIl19