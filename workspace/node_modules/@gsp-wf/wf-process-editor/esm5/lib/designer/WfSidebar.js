/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Sidebar, BpmnCellHelper } from "@edp-pmf/grapheditor";
import { UserActivity } from "@gsp-wf/wf-process-model";
import { mxGeometry, mxResources } from "@edp-pmf/mxgraph-ts";
import { WfConstants } from "./WfConstants";
var WfSidebar = /** @class */ (function (_super) {
    tslib_1.__extends(WfSidebar, _super);
    function WfSidebar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bizActivities = [];
        return _this;
    }
    /**
     * 添加业务活动面板
     * @param bizActivities
     */
    /**
     * 添加业务活动面板
     * @param {?} bizActivities
     * @return {?}
     */
    WfSidebar.prototype.addBizActPalette = /**
     * 添加业务活动面板
     * @param {?} bizActivities
     * @return {?}
     */
    function (bizActivities) {
        var _this = this;
        //如果添加了业务活动面板，需要先移除
        if (this.palettes["bizactivitylib"]) {
            this.container.removeChild(this.palettes["bizactivitylib"][0]);
            this.container.removeChild(this.palettes["bizactivitylib"][1]);
            delete this.palettes["bizactivitylib"];
        }
        this.bizActivities = bizActivities;
        /** @type {?} */
        var bizActFactories = new Array();
        //添加业务活动
        this.bizActivities && this.bizActivities.forEach((/**
         * @param {?} activity
         * @return {?}
         */
        function (activity) {
            /** @type {?} */
            var style = 'image=' + WfConstants.IMAGE_PATH + '/bizActivity.png;';
            /** @type {?} */
            var cell = (/** @type {?} */ (BpmnCellHelper.generate(UserActivity.Clr_Type_ID, undefined, new mxGeometry(0, 0, _this.defaultImageWidth, _this.defaultImageHeight), style)));
            cell.name = activity.name;
            cell.bizActivity = activity;
            bizActFactories.push(_this.createItemFactory([cell], cell.name, _this.defaultImageWidth, _this.defaultImageHeight));
        }));
        if (bizActFactories.length > 0) {
            this.addPaletteFunctions('bizactivitylib', mxResources.get('bizactivitylib'), true, bizActFactories);
        }
    };
    return WfSidebar;
}(Sidebar));
export { WfSidebar };
if (false) {
    /** @type {?} */
    WfSidebar.prototype.bizActivities;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ZTaWRlYmFyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9kZXNpZ25lci9XZlNpZGViYXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBK0IsTUFBTSxzQkFBc0IsQ0FBQztBQUM1RixPQUFPLEVBQWUsWUFBWSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckUsT0FBTyxFQUFFLFVBQVUsRUFBcUMsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFakcsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1QztJQUErQixxQ0FBTztJQUF0QztRQUFBLHFFQTZCQztRQTVCRyxtQkFBYSxHQUFrQixFQUFFLENBQUM7O0lBNEJ0QyxDQUFDO0lBM0JHOzs7T0FHRzs7Ozs7O0lBQ0gsb0NBQWdCOzs7OztJQUFoQixVQUFpQixhQUE0QjtRQUE3QyxpQkFzQkM7UUFyQkcsbUJBQW1CO1FBQ25CLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9ELElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9ELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQzFDO1FBQ0QsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7O1lBQy9CLGVBQWUsR0FBRyxJQUFJLEtBQUssRUFBMkI7UUFDMUQsUUFBUTtRQUNSLElBQUksQ0FBQyxhQUFhLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQyxRQUFxQjs7Z0JBQzdELEtBQUssR0FBRyxRQUFRLEdBQUcsV0FBVyxDQUFDLFVBQVUsR0FBRyxtQkFBbUI7O2dCQUMvRCxJQUFJLEdBQUcsbUJBQUEsY0FBYyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLFNBQVMsRUFBRSxJQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUksQ0FBQyxpQkFBaUIsRUFBRSxLQUFJLENBQUMsa0JBQWtCLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBb0I7WUFDM0ssSUFBSSxDQUFDLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDO1lBQzFCLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO1lBRTVCLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxLQUFJLENBQUMsaUJBQWlCLEVBQUUsS0FBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztRQUNySCxDQUFDLEVBQUMsQ0FBQztRQUVILElBQUksZUFBZSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDNUIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixFQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7U0FDekc7SUFDTCxDQUFDO0lBQ0wsZ0JBQUM7QUFBRCxDQUFDLEFBN0JELENBQStCLE9BQU8sR0E2QnJDOzs7O0lBNUJHLGtDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpZGViYXIsIEJwbW5DZWxsSGVscGVyLCBHcmFwaCwgUG1mRXZlbnRzLCBJRWRpdG9yVWkgfSBmcm9tIFwiQGVkcC1wbWYvZ3JhcGhlZGl0b3JcIjtcclxuaW1wb3J0IHsgQml6QWN0aXZpdHksIFVzZXJBY3Rpdml0eSB9IGZyb20gXCJAZ3NwLXdmL3dmLXByb2Nlc3MtbW9kZWxcIjtcclxuaW1wb3J0IHsgbXhHZW9tZXRyeSwgTXhHcmFwaE5TLCBteEV2ZW50LCBteEV2ZW50T2JqZWN0LCBteFJlc291cmNlcyB9IGZyb20gXCJAZWRwLXBtZi9teGdyYXBoLXRzXCI7XHJcbmltcG9ydCB7IFVzZXJBY3Rpdml0eUNlbGwgfSBmcm9tIFwiLi93Zi1jZWxsL1VzZXJBY3Rpdml0eUNlbGxcIjtcclxuaW1wb3J0IHsgV2ZDb25zdGFudHMgfSBmcm9tIFwiLi9XZkNvbnN0YW50c1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFdmU2lkZWJhciBleHRlbmRzIFNpZGViYXIge1xyXG4gICAgYml6QWN0aXZpdGllczogQml6QWN0aXZpdHlbXSA9IFtdO1xyXG4gICAgLyoqXHJcbiAgICAgKiDmt7vliqDkuJrliqHmtLvliqjpnaLmnb9cclxuICAgICAqIEBwYXJhbSBiaXpBY3Rpdml0aWVzIFxyXG4gICAgICovXHJcbiAgICBhZGRCaXpBY3RQYWxldHRlKGJpekFjdGl2aXRpZXM6IEJpekFjdGl2aXR5W10pOiB2b2lkIHtcclxuICAgICAgICAvL+WmguaenOa3u+WKoOS6huS4muWKoea0u+WKqOmdouadv++8jOmcgOimgeWFiOenu+mZpFxyXG4gICAgICAgIGlmICh0aGlzLnBhbGV0dGVzW1wiYml6YWN0aXZpdHlsaWJcIl0pIHtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5wYWxldHRlc1tcImJpemFjdGl2aXR5bGliXCJdWzBdKTtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIucmVtb3ZlQ2hpbGQodGhpcy5wYWxldHRlc1tcImJpemFjdGl2aXR5bGliXCJdWzFdKTtcclxuICAgICAgICAgICAgZGVsZXRlIHRoaXMucGFsZXR0ZXNbXCJiaXphY3Rpdml0eWxpYlwiXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5iaXpBY3Rpdml0aWVzID0gYml6QWN0aXZpdGllcztcclxuICAgICAgICBsZXQgYml6QWN0RmFjdG9yaWVzID0gbmV3IEFycmF5PCgpID0+IEhUTUxBbmNob3JFbGVtZW50PigpO1xyXG4gICAgICAgIC8v5re75Yqg5Lia5Yqh5rS75YqoXHJcbiAgICAgICAgdGhpcy5iaXpBY3Rpdml0aWVzICYmIHRoaXMuYml6QWN0aXZpdGllcy5mb3JFYWNoKChhY3Rpdml0eTogQml6QWN0aXZpdHkpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc3R5bGUgPSAnaW1hZ2U9JyArIFdmQ29uc3RhbnRzLklNQUdFX1BBVEggKyAnL2JpekFjdGl2aXR5LnBuZzsnO1xyXG4gICAgICAgICAgICBjb25zdCBjZWxsID0gQnBtbkNlbGxIZWxwZXIuZ2VuZXJhdGUoVXNlckFjdGl2aXR5LkNscl9UeXBlX0lELCB1bmRlZmluZWQsIG5ldyBteEdlb21ldHJ5KDAsIDAsIHRoaXMuZGVmYXVsdEltYWdlV2lkdGgsIHRoaXMuZGVmYXVsdEltYWdlSGVpZ2h0KSwgc3R5bGUpIGFzIFVzZXJBY3Rpdml0eUNlbGw7XHJcbiAgICAgICAgICAgIGNlbGwubmFtZSA9IGFjdGl2aXR5Lm5hbWU7XHJcbiAgICAgICAgICAgIGNlbGwuYml6QWN0aXZpdHkgPSBhY3Rpdml0eTtcclxuXHJcbiAgICAgICAgICAgIGJpekFjdEZhY3Rvcmllcy5wdXNoKHRoaXMuY3JlYXRlSXRlbUZhY3RvcnkoW2NlbGxdLCBjZWxsLm5hbWUsIHRoaXMuZGVmYXVsdEltYWdlV2lkdGgsIHRoaXMuZGVmYXVsdEltYWdlSGVpZ2h0KSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmIChiaXpBY3RGYWN0b3JpZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICB0aGlzLmFkZFBhbGV0dGVGdW5jdGlvbnMoJ2JpemFjdGl2aXR5bGliJywgIG14UmVzb3VyY2VzLmdldCgnYml6YWN0aXZpdHlsaWInKSwgdHJ1ZSwgYml6QWN0RmFjdG9yaWVzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=