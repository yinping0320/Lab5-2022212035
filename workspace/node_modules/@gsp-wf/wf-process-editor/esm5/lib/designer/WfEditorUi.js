/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { EditorUi, ActionKeys, ToolboxGroup, ToolboxItem } from "@edp-pmf/grapheditor";
import { WfGraph } from "./WfGraph";
import { ProcessHeader, UserActivity, OperationActivity } from "@gsp-wf/wf-process-model";
import { WfSidebar } from "./WfSidebar";
import { WfConstants } from "./WfConstants";
import { mxEvent, mxResources } from "@edp-pmf/mxgraph-ts";
import { UserActivityPropertyKeys } from "./wf-cell/property-keys/UserActivityPropertyKeys";
import { WfExclusiveGatewayCell } from "./wf-cell/WfExclusiveGatewayCell";
import { AifCreationBillActivityCell } from "./wf-cell/AifCreationBillActivityCell";
import { AutoActivityCell } from "./wf-cell/AutoActivityCell";
import { CallActivitySubProcessCell } from "./wf-cell/CallActivitySubProcessCell";
import { IntermediateCatchEventImplCell } from "./wf-cell/IntermediateCatchEventImplCell";
import { MessageActivityCell } from "./wf-cell/MessageActivityCell";
import { NotifyActivityCell } from "./wf-cell/NotifyActivityCell";
import { OperationActivityCell } from "./wf-cell/OperationActivityCell";
import { StartActivityCell } from "./wf-cell/StartActivityCell";
import { UserActivityCell } from "./wf-cell/UserActivityCell";
import { WfParallelGatewayCell } from "./wf-cell/WfParallelGatewayCell";
import { WfEndEventCell } from "./wf-cell/WfEndEventCell";
import { WfInclusiveGatewayCell } from "./wf-cell/WfInclusiveGatewayCell";
import { BatchSetPropertiesComponent } from "../views/batch-set-properties/batch-set-properties.component";
var WfEditorUi = /** @class */ (function (_super) {
    tslib_1.__extends(WfEditorUi, _super);
    function WfEditorUi(time, action, container, injector, modalService, resolver, eventSource, importLinks) {
        if (importLinks === void 0) { importLinks = true; }
        var _this = _super.call(this, container, eventSource, importLinks) || this;
        _this.injector = injector;
        _this.modalService = modalService;
        _this.resolver = resolver;
        _this.generalConfig = {
            enableTransfer: true,
            enableNotify: false,
            enableAddSignBehind: false,
            enableAddSignFront: false,
        };
        /** @type {?} */
        var rootPath = '';
        try {
            rootPath = ((/** @type {?} */ (window))).gspframeworkService.common.getBasePath.get();
        }
        catch (error) {
        }
        mxResources.add(rootPath + "/platform/runtime/common/web/@gsp-wf/wf-process-editor/resources/wf-process-editor");
        _this.showToolbar = false;
        _this.time = time;
        _this.action = action;
        return _this;
    }
    /**
     * @return {?}
     */
    WfEditorUi.prototype.createActions = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var actions = _super.prototype.createActions.call(this);
        // 只有设计时编辑状态下才启用删除动作
        if (!(this.action === 'edit' && this.time !== 'rt')) {
            /** @type {?} */
            var deleteAction = actions.getAction(ActionKeys.pmf_delete);
            deleteAction.isEnabled = (/**
             * @return {?}
             */
            function () { return false; });
        }
        return actions;
    };
    /**
     * @return {?}
     */
    WfEditorUi.prototype.createToolbox = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var toolbox = _super.prototype.createToolbox.call(this);
        /** @type {?} */
        var g1 = new ToolboxGroup();
        g1.name = mxResources.get('basicElements');
        g1.items.push(new ToolboxItem(StartActivityCell.CLR_TYPE_ID), new ToolboxItem(WfExclusiveGatewayCell.CLR_TYPE_ID), new ToolboxItem(WfParallelGatewayCell.CLR_TYPE_ID), 
        // 暂时隐藏包容网关
        new ToolboxItem(WfInclusiveGatewayCell.CLR_TYPE_ID), new ToolboxItem(UserActivityCell.CLR_TYPE_ID), new ToolboxItem(OperationActivityCell.CLR_TYPE_ID), new ToolboxItem(NotifyActivityCell.CLR_TYPE_ID), new ToolboxItem(CallActivitySubProcessCell.CLR_TYPE_ID), new ToolboxItem(AutoActivityCell.CLR_TYPE_ID), new ToolboxItem(IntermediateCatchEventImplCell.CLR_TYPE_ID), new ToolboxItem(MessageActivityCell.CLR_TYPE_ID), new ToolboxItem(AifCreationBillActivityCell.CLR_TYPE_ID), new ToolboxItem(WfEndEventCell.CLR_TYPE_ID));
        toolbox.groups = [g1];
        return toolbox;
    };
    /**
     * @return {?}
     */
    WfEditorUi.prototype.createGraphInstance = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var graph = new WfGraph(this, this.diagramContainer);
        if (this.action === 'view' || this.time === 'rt' || this.action === 'assignView') {
            graph.setCellsLocked(true);
        }
        else {
            graph.setDropEnabled(true);
            graph.setConnectable(true);
        }
        //TODO：右键查看只显示在审批节点上
        graph.popupMenuHandler.autoExpand = true;
        graph.popupMenuHandler.factoryMethod = (/**
         * @param {?} menu
         * @param {?} cell
         * @param {?} evt
         * @return {?}
         */
        function (menu, cell, evt) {
            /** @type {?} */
            var actList = graph.getChildCells(graph.getDefaultParent());
            if (cell != null
                && cell.clrTypeId.indexOf('wf.UserActivity') > -1
                && actList.findIndex((/**
                 * @param {?} a
                 * @return {?}
                 */
                function (a) { return a.id === cell.getId(); })) > -1) {
                menu.addItem('批量复制属性', null, (/**
                 * @return {?}
                 */
                function () {
                    /** @type {?} */
                    var compFactory = _this.resolver.resolveComponentFactory(BatchSetPropertiesComponent);
                    /** @type {?} */
                    var compRef = compFactory.create(_this.injector);
                    compRef.instance.activityModel = cell.flowElement;
                    /** @type {?} */
                    var modalConfig = {
                        title: '批量复制属性',
                        width: 512,
                        height: 465,
                        showButtons: true,
                        buttons: compRef.instance.footer
                    };
                    /** @type {?} */
                    var dialog = _this.modalService.show(compRef, modalConfig);
                    compRef.instance.cancel.subscribe((/**
                     * @param {?} $event
                     * @return {?}
                     */
                    function ($event) { return dialog.close(); }));
                    compRef.instance.submit.subscribe((/**
                     * @param {?} data
                     * @return {?}
                     */
                    function (data) {
                        dialog.close();
                    }));
                }));
            }
        });
        return graph;
    };
    /**
     * @return {?}
     */
    WfEditorUi.prototype.createSidebar = /**
     * @return {?}
     */
    function () {
        return new WfSidebar(this, this.sidebarContainer);
    };
    /**
     * @return {?}
     */
    WfEditorUi.prototype.show = /**
     * @return {?}
     */
    function () {
        var _this = this;
        _super.prototype.show.call(this);
        if (this.action === 'view' || this.action === 'assignView') {
            /** @type {?} */
            var span = this.createSpan('');
            span.style.fontSize = '14px';
            span.style.color = 'white';
            span.style.borderRadius = '20px';
            span.style.padding = '4px 20px';
            span.style.background = 'rgb(199, 194, 187)';
            /** @type {?} */
            var v = document.createTextNode(mxResources.get('readOnly'));
            span.appendChild(v);
            /** @type {?} */
            var d = this.createDiv('');
            d.style.position = 'absolute';
            d.style.top = '10px';
            d.style.right = '10px';
            d.style.zIndex = "2";
            d.appendChild(span);
            this.container.appendChild(d);
        }
        /** @type {?} */
        var buttonIn = document.createElement('a');
        buttonIn.setAttribute('href', 'javascript:void(0);');
        /** @type {?} */
        var buttonInImg = document.createElement('img');
        buttonIn.style.marginRight = '10px';
        buttonInImg.src = WfConstants.IMAGE_PATH + '/zoomIn.svg';
        buttonInImg.style.display = "inline-block";
        buttonInImg.style.verticalAlign = "middle";
        buttonIn.appendChild(buttonInImg);
        mxEvent.addListener(buttonIn, 'click', (/**
         * @param {?} evt
         * @return {?}
         */
        function (evt) {
            _this.actions.getAction(ActionKeys.pmf_zoomIn).execute(evt);
        }));
        /** @type {?} */
        var buttonOut = document.createElement('a');
        buttonOut.setAttribute('href', 'javascript:void(0);');
        /** @type {?} */
        var buttonOutImg = document.createElement('img');
        buttonOutImg.src = WfConstants.IMAGE_PATH + '/zoomOut.svg';
        buttonOutImg.style.display = "inline-block";
        buttonOutImg.style.verticalAlign = "middle";
        buttonOut.appendChild(buttonOutImg);
        mxEvent.addListener(buttonOut, 'click', (/**
         * @param {?} evt
         * @return {?}
         */
        function (evt) {
            _this.actions.getAction(ActionKeys.pmf_zoomOut).execute(evt);
        }));
        /** @type {?} */
        var zoomBar = this.createDiv('zoomBar');
        zoomBar.style.position = 'absolute';
        zoomBar.style.zIndex = "2";
        /** @type {?} */
        var t = 10;
        if (this.showMenubar) {
            t += this.menubarHeight;
        }
        if (this.showToolbar) {
            t += this.toolbarHeight;
        }
        zoomBar.style.top = t + 'px';
        zoomBar.style.left = (this.showSidebar ? this.sidebarSplitPosition + this.sidebarSplitSize : 0) + 10 + "px";
        zoomBar.appendChild(buttonIn);
        zoomBar.appendChild(buttonOut);
        this.container.appendChild(zoomBar);
        this.zoomBar = zoomBar;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    WfEditorUi.prototype.sidebarSplitOnChange = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        _super.prototype.sidebarSplitOnChange.call(this, value);
        // 分割条移动后更新缩放条位置
        if (this.zoomBar) {
            this.zoomBar.style.left = (this.showSidebar ? this.sidebarSplitPosition + this.sidebarSplitSize : 0) + 10 + "px";
        }
    };
    /**
     * 创建带指定样式类的span
     * @param classname
     * @returns
     */
    /**
     * 创建带指定样式类的span
     * @param {?} classname
     * @return {?}
     */
    WfEditorUi.prototype.createSpan = /**
     * 创建带指定样式类的span
     * @param {?} classname
     * @return {?}
     */
    function (classname) {
        /** @type {?} */
        var elt = document.createElement('span');
        elt.className = classname;
        return elt;
    };
    /**
     * 加载业务活动
     * @param bizActivities
     */
    /**
     * 加载业务活动
     * @param {?} bizActivities
     * @return {?}
     */
    WfEditorUi.prototype.loadBizActivities = /**
     * 加载业务活动
     * @param {?} bizActivities
     * @return {?}
     */
    function (bizActivities) {
        this.sidebar && this.sidebar.addBizActPalette(bizActivities);
    };
    /**
     * 批量复制属性
     * @param obj
     */
    /**
     * 批量复制属性
     * @param {?} obj
     * @return {?}
     */
    WfEditorUi.prototype.batchCopyProperty = /**
     * 批量复制属性
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_1, _a;
        // 放弃不需要的参数
        /** @type {?} */
        var ids = obj.value.targetNodeID;
        obj.propertyValue = obj.value.messageNotice;
        // todo：多个活动具有同名属性时，如何更合理定义PropertyKey？
        obj.propertyID = UserActivityPropertyKeys.messageNotice;
        try {
            for (var ids_1 = tslib_1.__values(ids), ids_1_1 = ids_1.next(); !ids_1_1.done; ids_1_1 = ids_1.next()) {
                var id = ids_1_1.value;
                /** @type {?} */
                var cell = this.graph.getCellByFlowElementId(id);
                if (cell) {
                    cell.updateProps(obj);
                    this.graph.refresh();
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (ids_1_1 && !ids_1_1.done && (_a = ids_1.return)) _a.call(ids_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    /**
   * 批量设置属性
   * @param obj
   */
    /**
     * 批量设置属性
     * @param {?} obj
     * @return {?}
     */
    WfEditorUi.prototype.batchSetProperty = /**
     * 批量设置属性
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e, e_7, _f;
        try {
            for (var obj_1 = tslib_1.__values(obj), obj_1_1 = obj_1.next(); !obj_1_1.done; obj_1_1 = obj_1.next()) {
                var v = obj_1_1.value;
                switch (v.type) {
                    case 'addSignfront':
                        /** @type {?} */
                        var afId = v.actis;
                        obj.propertyValue = v.config;
                        obj.propertyID = UserActivityPropertyKeys.AddSignFrontAble;
                        try {
                            for (var afId_1 = tslib_1.__values(afId), afId_1_1 = afId_1.next(); !afId_1_1.done; afId_1_1 = afId_1.next()) {
                                var id = afId_1_1.value;
                                /** @type {?} */
                                var cell = this.graph.getCellByFlowElementId(id.Id);
                                if (cell) {
                                    cell.updateProps(obj);
                                    this.graph.refresh();
                                }
                            }
                        }
                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
                        finally {
                            try {
                                if (afId_1_1 && !afId_1_1.done && (_b = afId_1.return)) _b.call(afId_1);
                            }
                            finally { if (e_3) throw e_3.error; }
                        }
                        break;
                    case 'addSignBehind':
                        /** @type {?} */
                        var abId = v.actis;
                        obj.propertyValue = v.config;
                        obj.propertyID = UserActivityPropertyKeys.AddSignBehindAble;
                        try {
                            for (var abId_1 = tslib_1.__values(abId), abId_1_1 = abId_1.next(); !abId_1_1.done; abId_1_1 = abId_1.next()) {
                                var id = abId_1_1.value;
                                /** @type {?} */
                                var cell = this.graph.getCellByFlowElementId(id.Id);
                                if (cell) {
                                    cell.updateProps(obj);
                                    this.graph.refresh();
                                }
                            }
                        }
                        catch (e_4_1) { e_4 = { error: e_4_1 }; }
                        finally {
                            try {
                                if (abId_1_1 && !abId_1_1.done && (_c = abId_1.return)) _c.call(abId_1);
                            }
                            finally { if (e_4) throw e_4.error; }
                        }
                        break;
                    case 'transfer':
                        /** @type {?} */
                        var trId = v.actis;
                        obj.propertyValue = v.config;
                        obj.propertyID = UserActivityPropertyKeys.transferScope;
                        try {
                            for (var trId_1 = tslib_1.__values(trId), trId_1_1 = trId_1.next(); !trId_1_1.done; trId_1_1 = trId_1.next()) {
                                var id = trId_1_1.value;
                                /** @type {?} */
                                var cell = this.graph.getCellByFlowElementId(id.Id);
                                if (cell) {
                                    cell.updateProps(obj);
                                    this.graph.refresh();
                                }
                            }
                        }
                        catch (e_5_1) { e_5 = { error: e_5_1 }; }
                        finally {
                            try {
                                if (trId_1_1 && !trId_1_1.done && (_d = trId_1.return)) _d.call(trId_1);
                            }
                            finally { if (e_5) throw e_5.error; }
                        }
                        break;
                    case 'notify':
                        /** @type {?} */
                        var ntId = v.actis;
                        obj.propertyValue = v.config;
                        obj.propertyID = UserActivityPropertyKeys.NotifyAble;
                        try {
                            for (var ntId_1 = tslib_1.__values(ntId), ntId_1_1 = ntId_1.next(); !ntId_1_1.done; ntId_1_1 = ntId_1.next()) {
                                var id = ntId_1_1.value;
                                /** @type {?} */
                                var cell = this.graph.getCellByFlowElementId(id.Id);
                                if (cell) {
                                    cell.updateProps(obj);
                                    this.graph.refresh();
                                }
                            }
                        }
                        catch (e_6_1) { e_6 = { error: e_6_1 }; }
                        finally {
                            try {
                                if (ntId_1_1 && !ntId_1_1.done && (_e = ntId_1.return)) _e.call(ntId_1);
                            }
                            finally { if (e_6) throw e_6.error; }
                        }
                        break;
                    // 驳回规则需要特殊处理：子流程和信号的赋简版
                    case 'backWardRule':
                        /** @type {?} */
                        var bwId = v.actis;
                        obj.propertyValue = v.config;
                        obj.propertyID = UserActivityPropertyKeys.BackWardRule;
                        try {
                            for (var bwId_1 = tslib_1.__values(bwId), bwId_1_1 = bwId_1.next(); !bwId_1_1.done; bwId_1_1 = bwId_1.next()) {
                                var id = bwId_1_1.value;
                                /** @type {?} */
                                var cell = this.graph.getCellByFlowElementId(id.Id);
                                if (cell) {
                                    cell.updateProps(obj);
                                    this.graph.refresh();
                                }
                            }
                        }
                        catch (e_7_1) { e_7 = { error: e_7_1 }; }
                        finally {
                            try {
                                if (bwId_1_1 && !bwId_1_1.done && (_f = bwId_1.return)) _f.call(bwId_1);
                            }
                            finally { if (e_7) throw e_7.error; }
                        }
                        break;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (obj_1_1 && !obj_1_1.done && (_a = obj_1.return)) _a.call(obj_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    /**
     * 创建新流程
     * @param newProcInfo
     * @param bizCmps
     */
    /**
     * 创建新流程
     * @param {?} newProcInfo
     * @param {?=} bizCmps
     * @return {?}
     */
    WfEditorUi.prototype.createBpmnModel = /**
     * 创建新流程
     * @param {?} newProcInfo
     * @param {?=} bizCmps
     * @return {?}
     */
    function (newProcInfo, bizCmps) {
        this.graph.createBpmnModelWithProcInfo(newProcInfo, bizCmps);
    };
    /**
     * 打开流程
     * @param content
     */
    /**
     * 打开流程
     * @param {?} content
     * @return {?}
     */
    WfEditorUi.prototype.openBpmnModel = /**
     * 打开流程
     * @param {?} content
     * @return {?}
     */
    function (content) {
        this.graph.loadBpmnModel(content);
    };
    /**
     * 获取属性配置，刷新属性框
     * @param obj
     * @returns
     */
    /**
     * 获取属性配置，刷新属性框
     * @param {?} obj
     * @return {?}
     */
    WfEditorUi.prototype.refreshProperty = /**
     * 获取属性配置，刷新属性框
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var cell = this.graph.getCellByFlowElementId(obj.Id);
        return this.getFarrisPropConfig([cell]);
    };
    /**
     * 获取用户活动
     * @returns
     */
    /**
     * 获取用户活动
     * @return {?}
     */
    WfEditorUi.prototype.getActivities = /**
     * 获取用户活动
     * @return {?}
     */
    function () {
        /** @type {?} */
        var list = [];
        /** @type {?} */
        var bpmnModel = this.graph.bpmnModel;
        /** @type {?} */
        var flowDict = bpmnModel.DefaultProcess.GetFlowElements();
        Object.keys(flowDict).forEach((/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            /** @type {?} */
            var flowElt = flowDict[key];
            if (flowElt.ClrTypeID === UserActivity.Clr_Type_ID
                || flowElt.ClrTypeID === OperationActivity.Clr_Type_ID) {
                list.push(flowElt);
            }
        }));
        return list;
    };
    /**
     * 获取结束事件
     * @returns
     */
    /**
     * 获取结束事件
     * @return {?}
     */
    WfEditorUi.prototype.getEndEvents = /**
     * 获取结束事件
     * @return {?}
     */
    function () {
        /** @type {?} */
        var userActArray = [];
        /** @type {?} */
        var bpmnModel = this.graph.bpmnModel;
        /** @type {?} */
        var flowDict = bpmnModel.DefaultProcess.GetFlowElements();
        Object.keys(flowDict).forEach((/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            /** @type {?} */
            var flowElt = flowDict[key];
            if (flowElt.ClrTypeID === 'bpmn.EndEvent' || flowElt.ClrTypeID === UserActivity.Clr_Type_ID
                || flowElt.ClrTypeID === OperationActivity.Clr_Type_ID) {
                userActArray.push(flowElt);
            }
        }));
        return userActArray;
    };
    /**
     * 获取知会事件
     * @returns
     */
    /**
     * 获取知会事件
     * @return {?}
     */
    WfEditorUi.prototype.getNotifyEvents = /**
     * 获取知会事件
     * @return {?}
     */
    function () {
        /** @type {?} */
        var list = [];
        /** @type {?} */
        var bpmnModel = this.graph.bpmnModel;
        /** @type {?} */
        var flowDict = bpmnModel.DefaultProcess.GetFlowElements();
        Object.keys(flowDict).forEach((/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            /** @type {?} */
            var flowElt = flowDict[key];
            if (flowElt.ClrTypeID === 'wf.NotifyActivity') {
                list.push(flowElt);
            }
        }));
        return list;
    };
    /**
     * 获取消息事件
     * @returns
     */
    /**
     * 获取消息事件
     * @return {?}
     */
    WfEditorUi.prototype.getMessageEvents = /**
     * 获取消息事件
     * @return {?}
     */
    function () {
        /** @type {?} */
        var list = [];
        /** @type {?} */
        var bpmnModel = this.graph.bpmnModel;
        /** @type {?} */
        var flowDict = bpmnModel.DefaultProcess.GetFlowElements();
        Object.keys(flowDict).forEach((/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            /** @type {?} */
            var flowElt = flowDict[key];
            if (flowElt.ClrTypeID === 'bpmn.MessageEvent') {
                list.push(flowElt);
            }
        }));
        return list;
    };
    /**
     * 获取子流程和信号捕获节点
     * @returns
     */
    /**
     * 获取子流程和信号捕获节点
     * @return {?}
     */
    WfEditorUi.prototype.getSubAndCatchEvents = /**
     * 获取子流程和信号捕获节点
     * @return {?}
     */
    function () {
        /** @type {?} */
        var list = [];
        /** @type {?} */
        var bpmnModel = this.graph.bpmnModel;
        /** @type {?} */
        var flowDict = bpmnModel.DefaultProcess.GetFlowElements();
        Object.keys(flowDict).forEach((/**
         * @param {?} key
         * @return {?}
         */
        function (key) {
            /** @type {?} */
            var flowElt = flowDict[key];
            if (flowElt.ClrTypeID === 'wf.CallActivitySubProcess' ||
                flowElt.ClrTypeID === 'wf.IntermediateCatchEventImpl') {
                list.push(flowElt);
            }
        }));
        return list;
    };
    /**
     * 获取启动方式
     * @returns
     */
    /**
     * 获取启动方式
     * @return {?}
     */
    WfEditorUi.prototype.getStartMode = /**
     * 获取启动方式
     * @return {?}
     */
    function () {
        var e_8, _a;
        /** @type {?} */
        var startMode = null;
        /** @type {?} */
        var bpmnModel = this.graph.bpmnModel;
        /** @type {?} */
        var extendElements = bpmnModel.DefaultProcess.GetExtensionElements();
        if (extendElements.length > 0) {
            try {
                for (var extendElements_1 = tslib_1.__values(extendElements), extendElements_1_1 = extendElements_1.next(); !extendElements_1_1.done; extendElements_1_1 = extendElements_1.next()) {
                    var e = extendElements_1_1.value;
                    if (e instanceof ProcessHeader) {
                        startMode = e.startMode;
                    }
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (extendElements_1_1 && !extendElements_1_1.done && (_a = extendElements_1.return)) _a.call(extendElements_1);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        return startMode;
    };
    return WfEditorUi;
}(EditorUi));
export { WfEditorUi };
if (false) {
    /** @type {?} */
    WfEditorUi.prototype.editor;
    /** @type {?} */
    WfEditorUi.prototype.graph;
    /** @type {?} */
    WfEditorUi.prototype.sidebar;
    /** @type {?} */
    WfEditorUi.prototype.time;
    /** @type {?} */
    WfEditorUi.prototype.bizCategoryId;
    /** @type {?} */
    WfEditorUi.prototype.action;
    /** @type {?} */
    WfEditorUi.prototype.mode;
    /** @type {?} */
    WfEditorUi.prototype.scene;
    /** @type {?} */
    WfEditorUi.prototype.procType;
    /** @type {?} */
    WfEditorUi.prototype.procExtProps;
    /** @type {?} */
    WfEditorUi.prototype.formFormats;
    /** @type {?} */
    WfEditorUi.prototype.generalConfig;
    /** @type {?} */
    WfEditorUi.prototype.zoomBar;
    /**
     * @type {?}
     * @private
     */
    WfEditorUi.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WfEditorUi.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    WfEditorUi.prototype.resolver;
}
//# sourceMappingURL=data:application/json;base64,