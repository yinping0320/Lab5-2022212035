/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';
import { TranslateResolveService } from './service/translate-resolve.service';
import { WfProcessEditorComponent } from './wf-process-editor.component';
/** @type {?} */
var routes = [
    {
        path: 'WfProcessEditor', component: WfProcessEditorComponent,
        children: [],
        resolve: {
            'translate': TranslateResolveService
        }
    }
];
var WfProcessEditorRoutingModule = /** @class */ (function () {
    function WfProcessEditorRoutingModule() {
    }
    WfProcessEditorRoutingModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        RouterModule.forChild(routes)
                    ],
                    exports: [
                        RouterModule
                    ]
                },] }
    ];
    return WfProcessEditorRoutingModule;
}());
export { WfProcessEditorRoutingModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2YtcHJvY2Vzcy1lZGl0b3Itcm91dGluZy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3dmLXByb2Nlc3MtZWRpdG9yLXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQVUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDOUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7O0lBRW5FLE1BQU0sR0FBVztJQUNyQjtRQUNFLElBQUksRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsd0JBQXdCO1FBQzVELFFBQVEsRUFBRSxFQUFFO1FBQ1osT0FBTyxFQUFFO1lBQ1AsV0FBVyxFQUFFLHVCQUF1QjtTQUNyQztLQUNGO0NBQ0Y7QUFFRDtJQUFBO0lBUzRDLENBQUM7O2dCQVQ1QyxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7cUJBQzlCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3FCQUNiO2lCQUNGOztJQUMyQyxtQ0FBQztDQUFBLEFBVDdDLElBUzZDO1NBQWhDLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFJvdXRlcywgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgVHJhbnNsYXRlUmVzb2x2ZVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvdHJhbnNsYXRlLXJlc29sdmUuc2VydmljZSc7XHJcbmltcG9ydCB7IFdmUHJvY2Vzc0VkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vd2YtcHJvY2Vzcy1lZGl0b3IuY29tcG9uZW50JztcclxuXHJcbmNvbnN0IHJvdXRlczogUm91dGVzID0gW1xyXG4gIHtcclxuICAgIHBhdGg6ICdXZlByb2Nlc3NFZGl0b3InLCBjb21wb25lbnQ6IFdmUHJvY2Vzc0VkaXRvckNvbXBvbmVudCxcclxuICAgIGNoaWxkcmVuOiBbXSxcclxuICAgIHJlc29sdmU6IHtcclxuICAgICAgJ3RyYW5zbGF0ZSc6IFRyYW5zbGF0ZVJlc29sdmVTZXJ2aWNlXHJcbiAgICB9XHJcbiAgfVxyXG5dO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQocm91dGVzKVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgUm91dGVyTW9kdWxlXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgV2ZQcm9jZXNzRWRpdG9yUm91dGluZ01vZHVsZSB7IH1cclxuIl19