/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ProcessDesignerUIState } from './process-designer.uistate';
import { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';
import { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';
import { AutoActivityPropertyKeys } from '../designer/wf-cell/property-keys/AutoActivityPropertyKeys';
import { PerformerOptionsComponent, PerformerOptionsConverter } from '../views/performer/views/performer-options/performer-options.component';
import { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';
var AutoActivityAdapter = /** @class */ (function () {
    function AutoActivityAdapter(uiState, localPipe) {
        this.uiState = uiState;
        this.localPipe = localPipe;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    AutoActivityAdapter.prototype.setProperty = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        this.uiState.propertyData = obj.propertyData;
        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    AutoActivityAdapter.prototype.setConfig = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        /** @type {?} */
        var propertyConfig = [];
        if (obj) {
            obj.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this.setEntity(element.properties);
                propertyConfig.push(element);
            }));
        }
        return propertyConfig;
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    AutoActivityAdapter.prototype.setEntity = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        if (obj && obj.length > 0) {
            obj.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                switch (item.propertyID) {
                    case AutoActivityPropertyKeys.Tools: // 参与者
                        item.editor = ActivityComponentComponent;
                        item.converter = new ActivityComponentConverter(_this.localPipe);
                        item.editorParams = {
                            location: 'autoActivity'
                        };
                        break;
                    case AutoActivityPropertyKeys.variableSettings: // 变量设置
                        item.editor = VariableSettingComponent;
                        item.converter = new VariableSettingConverter(_this.localPipe);
                        break;
                    case AutoActivityPropertyKeys.ParticipantOptions: // 参与者选项
                        item.editor = PerformerOptionsComponent;
                        item.converter = new PerformerOptionsConverter(_this.localPipe);
                        item.editorParams = {
                            location: 'autoActivity'
                        };
                        break;
                    default:
                        break;
                }
            }));
        }
    };
    AutoActivityAdapter.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AutoActivityAdapter.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: WfLocalePipe }
    ]; };
    return AutoActivityAdapter;
}());
export { AutoActivityAdapter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AutoActivityAdapter.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    AutoActivityAdapter.prototype.localPipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1hY3Rpdml0eS5hZGFwdGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9hcHAvYXV0by1hY3Rpdml0eS5hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXBFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ2xJLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQzFILE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ3RHLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHdFQUF3RSxDQUFDO0FBQzlJLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUUxRTtJQUlFLDZCQUNVLE9BQStCLEVBQy9CLFNBQXVCO1FBRHZCLFlBQU8sR0FBUCxPQUFPLENBQXdCO1FBQy9CLGNBQVMsR0FBVCxTQUFTLENBQWM7SUFFakMsQ0FBQzs7Ozs7SUFFRCx5Q0FBVzs7OztJQUFYLFVBQVksR0FBUTtRQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDO1FBQzdDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7Ozs7OztJQUVPLHVDQUFTOzs7OztJQUFqQixVQUFrQixHQUFVO1FBQTVCLGlCQVNDOztZQVJPLGNBQWMsR0FBNEIsRUFBRTtRQUNsRCxJQUFJLEdBQUcsRUFBRTtZQUNQLEdBQUcsQ0FBQyxPQUFPOzs7O1lBQUMsVUFBQyxPQUE4QjtnQkFDekMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ25DLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDL0IsQ0FBQyxFQUFDLENBQUM7U0FDSjtRQUNELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7Ozs7OztJQUNPLHVDQUFTOzs7OztJQUFqQixVQUFrQixHQUFxQjtRQUF2QyxpQkEyQkM7UUExQkMsSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDekIsR0FBRyxDQUFDLE9BQU87Ozs7WUFBQyxVQUFDLElBQW9CO2dCQUMvQixRQUFRLElBQUksQ0FBQyxVQUFVLEVBQUU7b0JBQ3ZCLEtBQUssd0JBQXdCLENBQUMsS0FBSyxFQUFFLE1BQU07d0JBQ3pDLElBQUksQ0FBQyxNQUFNLEdBQUcsMEJBQTBCLENBQUM7d0JBQ3pDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSwwQkFBMEIsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7d0JBQ2hFLElBQUksQ0FBQyxZQUFZLEdBQUc7NEJBQ2xCLFFBQVEsRUFBRSxjQUFjO3lCQUN6QixDQUFDO3dCQUNGLE1BQU07b0JBQ1IsS0FBSyx3QkFBd0IsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPO3dCQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLHdCQUF3QixDQUFDO3dCQUN2QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksd0JBQXdCLENBQUMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO3dCQUM5RCxNQUFNO29CQUNSLEtBQUssd0JBQXdCLENBQUMsa0JBQWtCLEVBQUUsUUFBUTt3QkFDeEQsSUFBSSxDQUFDLE1BQU0sR0FBRyx5QkFBeUIsQ0FBQzt3QkFDeEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLHlCQUF5QixDQUFDLEtBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQzt3QkFDL0QsSUFBSSxDQUFDLFlBQVksR0FBRzs0QkFDbEIsUUFBUSxFQUFFLGNBQWM7eUJBQ3pCLENBQUM7d0JBQ0YsTUFBTTtvQkFDUjt3QkFDRSxNQUFNO2lCQUNUO1lBQ0gsQ0FBQyxFQUFDLENBQUM7U0FDSjtJQUNILENBQUM7O2dCQXBERixVQUFVOzs7O2dCQVJGLHNCQUFzQjtnQkFNdEIsWUFBWTs7SUF1RHJCLDBCQUFDO0NBQUEsQUFyREQsSUFxREM7U0FuRFksbUJBQW1COzs7Ozs7SUFHNUIsc0NBQXVDOzs7OztJQUN2Qyx3Q0FBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUgfSBmcm9tICcuL3Byb2Nlc3MtZGVzaWduZXIudWlzdGF0ZSc7XHJcbmltcG9ydCB7IEVsZW1lbnRQcm9wZXJ0eUNvbmZpZywgUHJvcGVydHlFbnRpdHkgfSBmcm9tICdAZmFycmlzL2lkZS1wcm9wZXJ0eS1wYW5lbCc7XHJcbmltcG9ydCB7IEFjdGl2aXR5Q29tcG9uZW50Q29tcG9uZW50LCBBY3Rpdml0eUNvbXBvbmVudENvbnZlcnRlciB9IGZyb20gJy4uL3ZpZXdzL2FjdGl2aXR5LWNvbXBvbmVudC9hY3Rpdml0eS1jb21wb25lbnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVmFyaWFibGVTZXR0aW5nQ29tcG9uZW50LCBWYXJpYWJsZVNldHRpbmdDb252ZXJ0ZXIgfSBmcm9tICcuLi92aWV3cy92YXJpYWJsZS1zZXR0aW5nL3ZhcmlhYmxlLXNldHRpbmcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQXV0b0FjdGl2aXR5UHJvcGVydHlLZXlzIH0gZnJvbSAnLi4vZGVzaWduZXIvd2YtY2VsbC9wcm9wZXJ0eS1rZXlzL0F1dG9BY3Rpdml0eVByb3BlcnR5S2V5cyc7XHJcbmltcG9ydCB7IFBlcmZvcm1lck9wdGlvbnNDb21wb25lbnQsIFBlcmZvcm1lck9wdGlvbnNDb252ZXJ0ZXIgfSBmcm9tICcuLi92aWV3cy9wZXJmb3JtZXIvdmlld3MvcGVyZm9ybWVyLW9wdGlvbnMvcGVyZm9ybWVyLW9wdGlvbnMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgV2ZMb2NhbGVQaXBlIH0gZnJvbSAnLi4vaTE4bi9waXBlL3dmLXByb2Nlc3MtZWRpdG9yLWxvY2FsZS5waXBlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuXHJcbmV4cG9ydCBjbGFzcyBBdXRvQWN0aXZpdHlBZGFwdGVyIHtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIHVpU3RhdGU6IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUsXHJcbiAgICBwcml2YXRlIGxvY2FsUGlwZTogV2ZMb2NhbGVQaXBlXHJcbiAgKSB7XHJcbiAgfVxyXG5cclxuICBzZXRQcm9wZXJ0eShvYmo6IGFueSkge1xyXG4gICAgdGhpcy51aVN0YXRlLnByb3BlcnR5RGF0YSA9IG9iai5wcm9wZXJ0eURhdGE7XHJcbiAgICB0aGlzLnVpU3RhdGUucHJvcGVydHlDb25maWcgPSB0aGlzLnNldENvbmZpZyhvYmoucHJvcGVydHlDb25maWcpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzZXRDb25maWcob2JqOiBhbnlbXSk6IEVsZW1lbnRQcm9wZXJ0eUNvbmZpZ1tdIHtcclxuICAgIGNvbnN0IHByb3BlcnR5Q29uZmlnOiBFbGVtZW50UHJvcGVydHlDb25maWdbXSA9IFtdO1xyXG4gICAgaWYgKG9iaikge1xyXG4gICAgICBvYmouZm9yRWFjaCgoZWxlbWVudDogRWxlbWVudFByb3BlcnR5Q29uZmlnKSA9PiB7XHJcbiAgICAgICAgdGhpcy5zZXRFbnRpdHkoZWxlbWVudC5wcm9wZXJ0aWVzKTtcclxuICAgICAgICBwcm9wZXJ0eUNvbmZpZy5wdXNoKGVsZW1lbnQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcm9wZXJ0eUNvbmZpZztcclxuICB9XHJcbiAgcHJpdmF0ZSBzZXRFbnRpdHkob2JqOiBQcm9wZXJ0eUVudGl0eVtdKSB7XHJcbiAgICBpZiAob2JqICYmIG9iai5sZW5ndGggPiAwKSB7XHJcbiAgICAgIG9iai5mb3JFYWNoKChpdGVtOiBQcm9wZXJ0eUVudGl0eSkgPT4ge1xyXG4gICAgICAgIHN3aXRjaCAoaXRlbS5wcm9wZXJ0eUlEKSB7XHJcbiAgICAgICAgICBjYXNlIEF1dG9BY3Rpdml0eVByb3BlcnR5S2V5cy5Ub29sczogLy8g5Y+C5LiO6ICFXHJcbiAgICAgICAgICAgIGl0ZW0uZWRpdG9yID0gQWN0aXZpdHlDb21wb25lbnRDb21wb25lbnQ7XHJcbiAgICAgICAgICAgIGl0ZW0uY29udmVydGVyID0gbmV3IEFjdGl2aXR5Q29tcG9uZW50Q29udmVydGVyKHRoaXMubG9jYWxQaXBlKTtcclxuICAgICAgICAgICAgaXRlbS5lZGl0b3JQYXJhbXMgPSB7XHJcbiAgICAgICAgICAgICAgbG9jYXRpb246ICdhdXRvQWN0aXZpdHknXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSBBdXRvQWN0aXZpdHlQcm9wZXJ0eUtleXMudmFyaWFibGVTZXR0aW5nczogLy8g5Y+Y6YeP6K6+572uXHJcbiAgICAgICAgICAgIGl0ZW0uZWRpdG9yID0gVmFyaWFibGVTZXR0aW5nQ29tcG9uZW50O1xyXG4gICAgICAgICAgICBpdGVtLmNvbnZlcnRlciA9IG5ldyBWYXJpYWJsZVNldHRpbmdDb252ZXJ0ZXIodGhpcy5sb2NhbFBpcGUpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGNhc2UgQXV0b0FjdGl2aXR5UHJvcGVydHlLZXlzLlBhcnRpY2lwYW50T3B0aW9uczogLy8g5Y+C5LiO6ICF6YCJ6aG5XHJcbiAgICAgICAgICAgIGl0ZW0uZWRpdG9yID0gUGVyZm9ybWVyT3B0aW9uc0NvbXBvbmVudDtcclxuICAgICAgICAgICAgaXRlbS5jb252ZXJ0ZXIgPSBuZXcgUGVyZm9ybWVyT3B0aW9uc0NvbnZlcnRlcih0aGlzLmxvY2FsUGlwZSk7XHJcbiAgICAgICAgICAgIGl0ZW0uZWRpdG9yUGFyYW1zID0ge1xyXG4gICAgICAgICAgICAgIGxvY2F0aW9uOiAnYXV0b0FjdGl2aXR5J1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==