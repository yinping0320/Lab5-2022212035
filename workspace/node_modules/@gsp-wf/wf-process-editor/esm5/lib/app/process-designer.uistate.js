/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { FlowFormInfo } from '../domain/entities/flowform-info';
import { HttpService } from '@ecp-caf/caf-common';
import { forkJoin } from 'rxjs';
import { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';
var ProcessDesignerUIState = /** @class */ (function () {
    function ProcessDesignerUIState(http, localePipe) {
        this.http = http;
        this.localePipe = localePipe;
        this.rootPath = '';
        // 入口单据Info
        this.flowFormInfo = new FlowFormInfo();
        // Model上下文
        this.content = '';
        // 属性框
        this.propertyConfig = [];
        this.propertyData = {};
        // 设计器地址
        this.POST_MESSAGE_TARGET = window.document.location.origin + this.rootPath + '/platform/runtime/wf/web/designer/index.html';
        this.schemas = [];
        // 审批活动属性
        this.counterSignVariables = [];
        this.approvalItems = [];
        // 流程的审批活动节点信息
        this.userActList = [];
        // 流程包括结束和审批活动节点的信息
        this.allActList = [];
        // 流程包括审批活动，知会活动，消息的节点信息
        this.MessageActList = [];
        this.NotifyActKist = [];
        this.SubAndCatchActList = [];
        this.enableAdminOrgAut = false;
        this.enableFlowFormAut = false;
        // 流程管理员信息
        this.isAdministratorConfig = false;
        // 审批活动属性枚举===========================================================================================
        this.assignIterator = [{ key: 'ALL', value: this.localePipe.transform("app.processDesigner.all") },
            { key: 'ASSIGN', value: this.localePipe.transform("app.processDesigner.assign") },
            { key: 'CLAIM', value: this.localePipe.transform("app.processDesigner.claim") }];
        this.completeIterator = [{ key: 'Preempt', value: this.localePipe.transform("app.processDesigner.preempt") },
            { key: 'Parallel', value: this.localePipe.transform("app.processDesigner.parallel") },
            { key: 'Sequential', value: this.localePipe.transform("app.processDesigner.sequential") }];
        this.completeIterator4Claim = [{ key: 'Preempt', value: this.localePipe.transform("app.processDesigner.preempt") }];
        this.boolIterator = [{ key: true, value: this.localePipe.transform("app.processDesigner.true") },
            { key: false, value: this.localePipe.transform("app.processDesigner.false") }];
        // 会签不允许跳转
        this.noJump4Sign = [{ key: false, value: this.localePipe.transform("app.processDesigner.false") }];
        // =================================================================================================
        // 流程实例上下文-----------------------------------------------
        this.procInstContext = [
            { key: 'dataId', name: this.localePipe.transform("app.processDesigner.dataId"), description: 'this.localePipe.transform("app.processDesigner.dataId")' },
            { key: 'procInstId', name: this.localePipe.transform("app.processDesigner.procInstId"), description: this.localePipe.transform("app.processDesigner.procInstId") },
            { key: 'bizDefKey', name: this.localePipe.transform("app.processDesigner.bizDefKey"), description: this.localePipe.transform("app.processDesigner.bizDefKey") },
            { key: 'processDefinitionKey', name: this.localePipe.transform("app.processDesigner.processDefinitionKey"), description: this.localePipe.transform("app.processDesigner.processDefinitionKey") },
            { key: 'procInstCreator', name: this.localePipe.transform("app.processDesigner.procInstCreator"), description: this.localePipe.transform("app.processDesigner.procInstCreator") },
            { key: 'businessCreator', name: this.localePipe.transform("app.processDesigner.businessCreator"), description: this.localePipe.transform("app.processDesigner.businessCreator") },
            { key: 'procInstDescription', name: this.localePipe.transform("app.processDesigner.procInstDescription"), description: this.localePipe.transform("app.processDesigner.procInstDescription") },
            { key: 'comment', name: this.localePipe.transform("app.processDesigner.comment"), description: this.localePipe.transform("app.processDesigner.comment") },
            { key: 'bizDefName', name: this.localePipe.transform("app.processDesigner.bizDefName"), description: this.localePipe.transform("app.processDesigner.bizDefName") },
            { key: 'curLoginUsername', name: this.localePipe.transform("app.processDesigner.curLoginUsername"), description: this.localePipe.transform("app.processDesigner.curLoginUsername") },
            { key: 'procInstCreatorName', name: this.localePipe.transform("app.processDesigner.procInstCreatorName"), description: this.localePipe.transform("app.processDesigner.procInstCreatorName") },
            { key: 'currentParticipantId', name: this.localePipe.transform("app.processDesigner.currentParticipantId"), description: this.localePipe.transform("app.processDesigner.currentParticipantId") },
            { key: 'currentParticipantName', name: this.localePipe.transform("app.processDesigner.currentParticipantName"), description: this.localePipe.transform("app.processDesigner.currentParticipantName") }
        ];
        // 催办上下文--------------------------------------------------
        this.urgeContext = [
            { key: 'dataId', name: this.localePipe.transform("app.processDesigner.dataId"), description: this.localePipe.transform("app.processDesigner.dataId") },
            { key: 'procInstId', name: this.localePipe.transform("app.processDesigner.procInstId"), description: this.localePipe.transform("app.processDesigner.procInstId") },
            { key: 'bizDefKey', name: this.localePipe.transform("app.processDesigner.bizDefKey"), description: this.localePipe.transform("app.processDesigner.bizDefKey") },
            { key: 'processDefinitionKey', name: this.localePipe.transform("app.processDesigner.processDefinitionKey"), description: this.localePipe.transform("app.processDesigner.processDefinitionKey") },
            { key: 'procInstCreator', name: this.localePipe.transform("app.processDesigner.procInstCreator"), description: this.localePipe.transform("app.processDesigner.procInstCreator") },
            { key: 'businessCreator', name: this.localePipe.transform("app.processDesigner.businessCreator"), description: this.localePipe.transform("app.processDesigner.businessCreator") },
            { key: 'procInstDescription', name: this.localePipe.transform("app.processDesigner.procInstDescription"), description: this.localePipe.transform("app.processDesigner.procInstDescription") },
            { key: 'comment', name: this.localePipe.transform("app.processDesigner.comment"), description: this.localePipe.transform("app.processDesigner.comment") },
            { key: 'bizDefName', name: this.localePipe.transform("app.processDesigner.bizDefName"), description: this.localePipe.transform("app.processDesigner.bizDefName") },
            { key: 'curLoginUsername', name: this.localePipe.transform("app.processDesigner.curLoginUsername"), description: this.localePipe.transform("app.processDesigner.curLoginUsername") },
            { key: 'procInstCreatorName', name: this.localePipe.transform("app.processDesigner.procInstCreatorName"), description: this.localePipe.transform("app.processDesigner.procInstCreatorName") }
        ];
        /**
         * 流程参数上下文
         */
        this.formalParameterContext = [];
        /**
         * 参与者上下文
         */
        this.participantContext = [
            {
                key: 'procInstCreator',
                name: this.localePipe.transform("app.processDesigner.procInstCreator"),
                description: this.localePipe.transform("app.processDesigner.procInstCreator")
            }, {
                key: 'businessCreator',
                name: this.localePipe.transform("app.processDesigner.businessCreator"),
                description: this.localePipe.transform("app.processDesigner.businessCreator")
            }, {
                key: 'currentUser',
                name: this.localePipe.transform("app.processDesigner.currentUser"),
                description: this.localePipe.transform("app.processDesigner.currentUser")
            }, {
                key: 'preActExecutors',
                name: this.localePipe.transform("app.processDesigner.preActExecutors"),
                description: this.localePipe.transform("app.processDesigner.preActExecutors")
            }
        ];
        /**
         * 子活动上下文
         */
        this.subActivityContext = [
            {
                key: 'collectionElementVariable',
                name: this.localePipe.transform("app.processDesigner.collectionElementVariable"),
                description: this.localePipe.transform("app.processDesigner.collectionElementVariable")
            }
        ];
        /**
         * 子流程元素上下文
         */
        this.subProcessElementContext = [
            {
                key: 'subCollectionElementVariable',
                name: this.localePipe.transform("app.processDesigner.subCollectionElementVariable"),
                description: this.localePipe.transform("app.processDesigner.subCollectionElementVariable")
            }
        ];
        /**
         * 多实例启用条件上下文
         */
        this.multiCounterSignVariables = [
            { key: 'nrOfInstances', name: this.localePipe.transform("app.processDesigner.nrOfInstances"), description: this.localePipe.transform("app.processDesigner.nrOfInstances") },
            { key: 'nrOfCompletedInstances', name: this.localePipe.transform("app.processDesigner.nrOfCompletedInstances"), description: this.localePipe.transform("app.processDesigner.nrOfCompletedInstances") },
            { key: 'nrOfActiveInstances', name: this.localePipe.transform("app.processDesigner.nrOfActiveInstances"), description: this.localePipe.transform("app.processDesigner.nrOfActiveInstances") },
            { key: 'nrOfForward', name: this.localePipe.transform("app.processDesigner.nrOfForward"), description: this.localePipe.transform("app.processDesigner.nrOfForward") },
            { key: 'nrOfBackward', name: this.localePipe.transform("app.processDesigner.nrOfBackward"), description: this.localePipe.transform("app.processDesigner.nrOfBackward") },
            { key: 'nrOfAbort', name: this.localePipe.transform("app.processDesigner.nrOfAbort"), description: this.localePipe.transform("app.processDesigner.nrOfAbort") }
        ];
        /**
         * 活动构件参数上下文
         */
        this.activityComponentContext = [
            {
                key: 'conclusionType',
                name: this.localePipe.transform("app.processDesigner.conclusionType"),
                description: this.localePipe.transform("app.processDesigner.conclusionTypeTips")
            }, {
                key: 'conclusionValue',
                name: this.localePipe.transform("app.processDesigner.conclusionValue"),
                description: this.localePipe.transform("app.processDesigner.conclusionValueTips")
            }
        ];
        this.processVariableContext = new Array();
        this.processVariables = new Array();
        /**
         * 汇报级次
         */
        this.dimensions = [
            { value: 'directSuperior', text: this.localePipe.transform("app.processDesigner.directSuperior") },
            { value: 'higherSuperior', text: this.localePipe.transform("app.processDesigner.higherSuperior") }
        ];
        /**
         * 启动方式
         */
        this.startModeIterator = [
            { key: 'DIRECT', value: this.localePipe.transform("app.processDesigner.DIRECT") },
            { key: 'EXTERNAL_PROCESS', value: this.localePipe.transform("app.processDesigner.EXTERNAL_PROCESS") },
            { key: 'SUB_PROCESS', value: this.localePipe.transform("app.processDesigner.SUB_PROCESS") }
        ];
        /**
         * 显示终端
         */
        this.displayTerminal = [
            { key: "ALL", value: this.localePipe.transform("app.processDesigner.ALL") },
            { key: "WEB", value: this.localePipe.transform("app.processDesigner.WEB") },
            { key: "APP", value: this.localePipe.transform("app.processDesigner.APP") }
        ];
        /**
         * 消息渠道列表
         */
        this.messageChannels = new Array();
        this.orgTypeCollection = [];
        try {
            this.rootPath = ((/** @type {?} */ (window))).gspframeworkService.common.getBasePath.get();
        }
        catch (error) {
        }
    }
    Object.defineProperty(ProcessDesignerUIState.prototype, "ProcessVariables", {
        get: /**
         * @return {?}
         */
        function () {
            return this.processVariables;
        },
        set: /**
         * @param {?} variables
         * @return {?}
         */
        function (variables) {
            this.processVariables = variables;
            this.setProcessVariableContext();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} key
     * @return {?}
     */
    ProcessDesignerUIState.prototype.variableContextName = /**
     * @param {?} key
     * @return {?}
     */
    function (key) {
        return this.participantContext.find((/**
         * @param {?} i
         * @return {?}
         */
        function (i) { return i.key === key; })).name;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ProcessDesignerUIState.prototype.ranksName = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return this.dimensions.find((/**
         * @param {?} i
         * @return {?}
         */
        function (i) { return i.value === value; })).text;
    };
    /**
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getMessageChannels = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/msg/v1.0/messageplatform/channel/getenabledchannels';
        this.http.get(url).subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            _this.messageChannels = re;
        }));
    };
    /**
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getAdministratorInfo = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.getCurrentUser().subscribe((/**
         * @param {?} user
         * @return {?}
         */
        function (user) {
            /** @type {?} */
            var userId = user.userId;
            forkJoin(_this.getAdministratorConfig(), _this.getAdministrator(userId)).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                _this.isAdministratorConfig = re[0].currentValue === 'true' ? true : false;
                _this.administrator = re[1];
            }));
        }));
    };
    /**
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getEnableAdminOrgAut = /**
     * @return {?}
     */
    function () {
        return this.getEnableProcessDesignerDataAut('WF_AdminOrg');
    };
    /**
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getEnableFlowFormAut = /**
     * @return {?}
     */
    function () {
        return this.getEnableProcessDesignerDataAut('WF_FlowForm');
    };
    /**
     * @private
     * @param {?} authField
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getEnableProcessDesignerDataAut = /**
     * @private
     * @param {?} authField
     * @return {?}
     */
    function (authField) {
        /** @type {?} */
        var url = '/api/runtime/wf/v1.0/dtProcDefs/enableProcessDesignerDataAut/' + authField;
        return this.http.get(url);
    };
    /**
     * @private
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getCurrentUser = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = '/api/runtime/sys/v1.0/userinfos?infoType=user';
        return this.http.get(url);
    };
    /**
     * @private
     * @param {?} userId
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getAdministrator = /**
     * @private
     * @param {?} userId
     * @return {?}
     */
    function (userId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/processAdministrator/" + userId;
        return this.http.get(url);
    };
    /**
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getReleaseConfig = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/generalConfig/Is_Enable_Examine";
        return this.http.get(url);
    };
    /**
     * @private
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getAdministratorConfig = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/generalConfig/Is_EnableAdministrator";
        return this.http.get(url);
    };
    /**
     * @private
     * @param {?} orgId
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getSysOrgById = /**
     * @private
     * @param {?} orgId
     * @return {?}
     */
    function (orgId) {
        /** @type {?} */
        var url = "/api/runtime/sys/v1.0/sysOrgs/" + orgId;
        return this.http.get(url);
    };
    /**
     * @private
     * @param {?} orgId
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getSysOrgWithAllSubsById = /**
     * @private
     * @param {?} orgId
     * @return {?}
     */
    function (orgId) {
        /** @type {?} */
        var url = "/api/runtime/sys/v1.0/sysOrgs?param=" + encodeURIComponent("{\"parentId\":\"" + orgId + "\",\"withAllSub\":true}");
        return this.http.get(url);
    };
    /**
     * @private
     * @param {?} userId
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getCurUserInfo = /**
     * @private
     * @param {?} userId
     * @return {?}
     */
    function (userId) {
        /** @type {?} */
        var url = "/api/runtime/sys/v1.0/users/" + userId;
        return this.http.get(url);
    };
    /**
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getOrgConfig = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/generalConfig/Is_Required_Organization";
        return this.http.get(url);
    };
    /**
     * 获取当前用户信息
     */
    /**
     * 获取当前用户信息
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getUserInfo = /**
     * 获取当前用户信息
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/sys/v1.0/userinfos?infoType=user";
        return this.http.get(url);
    };
    /**
     * 流程审核：新增
     */
    /**
     * 流程审核：新增
     * @return {?}
     */
    ProcessDesignerUIState.prototype.createData = /**
     * 流程审核：新增
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/bpms/wf/v1.0/processrelease_frm";
        /** @type {?} */
        var requestInfo = {
            dataChange: [],
            variableChange: null
        };
        return this.http.post(url, requestInfo);
    };
    /**
     * 流程审核：保存
     */
    /**
     * 流程审核：保存
     * @param {?} data
     * @return {?}
     */
    ProcessDesignerUIState.prototype.releaseSave = /**
     * 流程审核：保存
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var requestInfo = {
            dataChange: [data],
            variableChange: null
        };
        /** @type {?} */
        var url = "/api/bpms/wf/v1.0/processrelease_frm";
        return this.http.put(url, requestInfo);
    };
    /**
     * @private
     * @return {?}
     */
    ProcessDesignerUIState.prototype.setProcessVariableContext = /**
     * @private
     * @return {?}
     */
    function () {
        var e_1, _a;
        this.processVariableContext = new Array();
        if (this.ProcessVariables && this.ProcessVariables.length > 0) {
            try {
                for (var _b = tslib_1.__values(this.ProcessVariables), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var v = _c.value;
                    /** @type {?} */
                    var varEntity = {
                        key: v.name,
                        name: v.documentation,
                        description: v.description
                    };
                    this.processVariableContext.push(varEntity);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    /**
     * @param {?} helpId
     * @param {?} su
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getHelpMetaData = /**
     * @param {?} helpId
     * @param {?} su
     * @return {?}
     */
    function (helpId, su) {
        /** @type {?} */
        var url = "/api/runtime/lcm/v1.0/rt-metadatas/" + helpId;
        return this.http.get(url);
    };
    /**
     * 获取框架的顶级window
     * 进行跨域封装
     */
    /**
     * 获取框架的顶级window
     * 进行跨域封装
     * @private
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getTopWindow = /**
     * 获取框架的顶级window
     * 进行跨域封装
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var curWin = window.self;
        try {
            while (curWin.location.origin === curWin.parent.location.origin) {
                if (curWin !== curWin.parent && !((/** @type {?} */ (curWin))).isRTFTopWin) {
                    curWin = curWin.parent;
                }
                else {
                    break;
                }
            }
        }
        catch (e) { }
        return curWin;
    };
    // --------------------------0-------------------------
    // uiState初始
    // --------------------------0-------------------------
    // uiState初始
    /**
     * @return {?}
     */
    ProcessDesignerUIState.prototype.initUIState = 
    // --------------------------0-------------------------
    // uiState初始
    /**
     * @return {?}
     */
    function () {
        this.propertyConfig = [];
        this.propertyData = null;
        this.content = '';
        this.schemas = [];
    };
    /**
     * 获取所有审批节点信息
     * @param data
     */
    /**
     * 获取所有审批节点信息
     * @param {?} data
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getUserActList = /**
     * 获取所有审批节点信息
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_2, _a;
        this.userActList = [];
        if (data && data.length > 0) {
            try {
                for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                    var userAct = data_1_1.value;
                    /** @type {?} */
                    var userActInfo = {
                        Id: userAct.Id,
                        Name: userAct.NameLanguage ? (userAct.NameLanguage[this.localePipe.langCode] ? userAct.NameLanguage[this.localePipe.langCode] : userAct.Name) : userAct.Name,
                        ClrTypeID: userAct.ClrTypeID,
                        AssignmentStrategy: userAct.AssignmentStrategy
                    };
                    if (userAct.AssignmentStrategy === 'ASSIGN') {
                        userActInfo.AssignPerformerConfig = userAct.AssignPerformerConfig;
                    }
                    this.userActList.push(userActInfo);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    /**
     * 获取所有结束节点信息
     * @param data
     */
    /**
     * 获取所有结束节点信息
     * @param {?} data
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getEndEventList = /**
     * 获取所有结束节点信息
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_3, _a;
        this.allActList = [];
        if (data && data.length > 0) {
            try {
                for (var data_2 = tslib_1.__values(data), data_2_1 = data_2.next(); !data_2_1.done; data_2_1 = data_2.next()) {
                    var endEvent = data_2_1.value;
                    /** @type {?} */
                    var endEventInfo = {
                        Id: endEvent.Id,
                        Name: endEvent.Name
                    };
                    // 取结束节点存到
                    this.allActList.push(endEventInfo);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (data_2_1 && !data_2_1.done && (_a = data_2.return)) _a.call(data_2);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        // // 存入审批活动节点
        // this.allActList = this.allActList.concat(this.userActList);
    };
    /**
     * 获取所有知会活动节点信息
     * @param data
     */
    /**
     * 获取所有知会活动节点信息
     * @param {?} data
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getNotifyEventList = /**
     * 获取所有知会活动节点信息
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_4, _a;
        this.NotifyActKist = [];
        if (data && data.length > 0) {
            try {
                for (var data_3 = tslib_1.__values(data), data_3_1 = data_3.next(); !data_3_1.done; data_3_1 = data_3.next()) {
                    var notifyEvent = data_3_1.value;
                    /** @type {?} */
                    var notifyEventInfo = {
                        Id: notifyEvent.Id,
                        Name: notifyEvent.Name
                    };
                    // 取知会活动，消息节点存到
                    this.NotifyActKist.push(notifyEventInfo);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (data_3_1 && !data_3_1.done && (_a = data_3.return)) _a.call(data_3);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    };
    //TODO: 只有审批\审批+人工\审批+人工+知会\审批、人工、子流程、信号捕获
    /**
     * 获取所有消息节点信息
     * @param data
     */
    //TODO: 只有审批\审批+人工\审批+人工+知会\审批、人工、子流程、信号捕获
    /**
     * 获取所有消息节点信息
     * @param {?} data
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getMessageEventList = 
    //TODO: 只有审批\审批+人工\审批+人工+知会\审批、人工、子流程、信号捕获
    /**
     * 获取所有消息节点信息
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_5, _a;
        this.MessageActList = [];
        if (data && data.length > 0) {
            try {
                for (var data_4 = tslib_1.__values(data), data_4_1 = data_4.next(); !data_4_1.done; data_4_1 = data_4.next()) {
                    var messageEvent = data_4_1.value;
                    /** @type {?} */
                    var messageEventInfo = {
                        Id: messageEvent.Id,
                        Name: messageEvent.Name
                    };
                    // 取知会活动，消息节点存到
                    this.MessageActList.push(messageEventInfo);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (data_4_1 && !data_4_1.done && (_a = data_4.return)) _a.call(data_4);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        // 存入审批活动节点
        this.MessageActList = this.MessageActList.concat(this.NotifyActKist);
        // 存入审批活动节点
        this.MessageActList = this.MessageActList.concat(this.userActList);
    };
    /**
     * @param data
     */
    /**
     * @param {?} data
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getSubAndCatchEventsList = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_6, _a;
        this.SubAndCatchActList = [];
        if (data && data.length > 0) {
            try {
                for (var data_5 = tslib_1.__values(data), data_5_1 = data_5.next(); !data_5_1.done; data_5_1 = data_5.next()) {
                    var subAndCatchEvent = data_5_1.value;
                    /** @type {?} */
                    var subAndCatEventInfo = {
                        Id: subAndCatchEvent.Id,
                        Name: subAndCatchEvent.Name
                    };
                    // 取知会活动，消息节点存到
                    this.SubAndCatchActList.push(subAndCatEventInfo);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (data_5_1 && !data_5_1.done && (_a = data_5.return)) _a.call(data_5);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
    };
    /**
     * 获取当前流程启动方式
     * @param data
     */
    /**
     * 获取当前流程启动方式
     * @param {?} data
     * @return {?}
     */
    ProcessDesignerUIState.prototype.getStartMode = /**
     * 获取当前流程启动方式
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.startMode = data;
    };
    /**
     * 添加上下文变量
     */
    /**
     * 添加上下文变量
     * @param {?} context
     * @return {?}
     */
    ProcessDesignerUIState.prototype.addContext = /**
     * 添加上下文变量
     * @param {?} context
     * @return {?}
     */
    function (context) {
        var e_7, _a, e_8, _b, e_9, _c, e_10, _d;
        if (this.procInstContext.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.procInstContext), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var variable = _f.value;
                    context.push(variable);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (this.formalParameterContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _g = tslib_1.__values(this.formalParameterContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    _loop_1(variable);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        if (this.participantContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.participantContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_2(variable);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        if (this.processVariableContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _l = tslib_1.__values(this.processVariableContext), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var variable = _m.value;
                    _loop_3(variable);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        return context;
    };
    ProcessDesignerUIState.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ProcessDesignerUIState.ctorParameters = function () { return [
        { type: HttpService },
        { type: WfLocalePipe }
    ]; };
    return ProcessDesignerUIState;
}());
export { ProcessDesignerUIState };
if (false) {
    /** @type {?} */
    ProcessDesignerUIState.prototype.scene;
    /** @type {?} */
    ProcessDesignerUIState.prototype.rootPath;
    /** @type {?} */
    ProcessDesignerUIState.prototype.flowFormInfo;
    /** @type {?} */
    ProcessDesignerUIState.prototype.content;
    /** @type {?} */
    ProcessDesignerUIState.prototype.propertyConfig;
    /** @type {?} */
    ProcessDesignerUIState.prototype.propertyData;
    /** @type {?} */
    ProcessDesignerUIState.prototype.POST_MESSAGE_TARGET;
    /** @type {?} */
    ProcessDesignerUIState.prototype.BE;
    /** @type {?} */
    ProcessDesignerUIState.prototype.schemas;
    /** @type {?} */
    ProcessDesignerUIState.prototype.counterSignVariables;
    /** @type {?} */
    ProcessDesignerUIState.prototype.approvalItems;
    /** @type {?} */
    ProcessDesignerUIState.prototype.userActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.allActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.MessageActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.NotifyActKist;
    /** @type {?} */
    ProcessDesignerUIState.prototype.SubAndCatchActList;
    /** @type {?} */
    ProcessDesignerUIState.prototype.bizActivityId;
    /** @type {?} */
    ProcessDesignerUIState.prototype.enableAdminOrgAut;
    /** @type {?} */
    ProcessDesignerUIState.prototype.enableFlowFormAut;
    /** @type {?} */
    ProcessDesignerUIState.prototype.procDefId;
    /** @type {?} */
    ProcessDesignerUIState.prototype.time;
    /** @type {?} */
    ProcessDesignerUIState.prototype.isAdministratorConfig;
    /** @type {?} */
    ProcessDesignerUIState.prototype.administrator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.startMode;
    /** @type {?} */
    ProcessDesignerUIState.prototype.bpmnModel;
    /** @type {?} */
    ProcessDesignerUIState.prototype.assignIterator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.completeIterator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.completeIterator4Claim;
    /** @type {?} */
    ProcessDesignerUIState.prototype.boolIterator;
    /** @type {?} */
    ProcessDesignerUIState.prototype.noJump4Sign;
    /** @type {?} */
    ProcessDesignerUIState.prototype.procInstContext;
    /** @type {?} */
    ProcessDesignerUIState.prototype.urgeContext;
    /**
     * 流程参数上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.formalParameterContext;
    /**
     * 参与者上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.participantContext;
    /**
     * 子活动上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.subActivityContext;
    /**
     * 子流程元素上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.subProcessElementContext;
    /**
     * 多实例启用条件上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.multiCounterSignVariables;
    /**
     * 活动构件参数上下文
     * @type {?}
     */
    ProcessDesignerUIState.prototype.activityComponentContext;
    /** @type {?} */
    ProcessDesignerUIState.prototype.processVariableContext;
    /**
     * @type {?}
     * @private
     */
    ProcessDesignerUIState.prototype.processVariables;
    /**
     * 汇报级次
     * @type {?}
     */
    ProcessDesignerUIState.prototype.dimensions;
    /**
     * 启动方式
     * @type {?}
     */
    ProcessDesignerUIState.prototype.startModeIterator;
    /**
     * 显示终端
     * @type {?}
     */
    ProcessDesignerUIState.prototype.displayTerminal;
    /**
     * 消息渠道列表
     * @type {?}
     */
    ProcessDesignerUIState.prototype.messageChannels;
    /** @type {?} */
    ProcessDesignerUIState.prototype.orgTypeCollection;
    /**
     * @type {?}
     * @private
     */
    ProcessDesignerUIState.prototype.http;
    /**
     * @type {?}
     * @private
     */
    ProcessDesignerUIState.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,