/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable, Injector, ComponentFactoryResolver } from '@angular/core';
import { ProcessDesignerUIState } from './process-designer.uistate';
import { ApprovalItemEntity } from '../views/approvel-items/entities/approval-item.entity';
import { SignRuleComponent, SignRuleConverter } from '../views/sign-rule/sign-rule.component';
import { ApprovelItemsComponent, ApprovelItemsConverter } from '../views/approvel-items/approvel-items.component';
import { ExpressionEditorComponent, ExpressionEditorConverter } from '../views/expressionEditor/expression-editor.component';
import { ExecuteFormsComponent, ExecuteFormsConverter } from '../views/execute-forms/execute-forms.component';
import { JumpScopeComponent, JumpScopeConverter } from '../views/jump-scope/jump-scope.component';
import { VarEntity } from '@gsp-svc/expression';
import { BackwardRuleComponent, BackwardRuleConverter } from '../views/backward-rule/backward-rule.component';
import { MessagerService } from '@farris/ui-messager';
import { ActivityComponentComponent, ActivityComponentConverter } from '../views/activity-component/activity-component.component';
import { PerformerComponent, PerformerConverter } from '../views/performer/performer.component';
import { TitleExpressionComponent, TitleExpressionConverter } from '../views/title-expression/title-expression.component';
import { BsModalService } from '@farris/ui-modal';
import { OrganizationPotentialOwnerComponent, OrganizationPotentialOwnerConverter } from '../views/organization-potential-owner/organization-potential-owner.component';
import { CustomizeActionComponent, CustomizeActionConverter } from '../views/customize-action/customize-action.component';
import { TimeLimitControlComponent, TimeLimitControlConverter } from '../views/time-limit-control/time-limit-control.component';
import { AnonymousSetComponent, AnonymousSetConverter } from '../views/anonymous-set/anonymous-set.component';
import { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';
import { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';
import { ApprovalPivotComponent, ApprovalPivotConverter } from '../views/approval-pivot/approval-pivot.component';
import { UrgeHandleRuleComponent, UrgeHandleRuleConverter } from '../views/urge-handle-rule/urge-handle-rule.component';
import { ExtendPropertyComponent, ExtendPropertyConverter } from '../views/extend-property/extend-property.component';
import { ImageSetComponent, ImageSetConverter } from '../views/image-set/image-set.component';
import { CheckConditionComponent, CheckConditionConverter } from '../views/check-condition/check-condition.component';
import { AssignStrategyComponent, AssignStrategyConverter } from '../views/assign-strategy/assign-strategy.component';
import { ParticipantComponent, ParticipantConverter } from '../views/participant/participant.component';
import { PerformerOptionsComponent, PerformerOptionsConverter } from '../views/performer/views/performer-options/performer-options.component';
import { AssignScopeComponent, AssignScopeConverter } from '../views/assign-scope/assign-scope.component';
import { UserActivityPropertyKeys } from '../designer/wf-cell/property-keys/UserActivityPropertyKeys';
import { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';
import { MultiInstanceLoopCharacteristicsComponent, MultiInstanceLoopCharacteristicsConverter } from '../views/multi-instance-loop-characteristics/multi-instance-loop-characteristics.component';
var WFFlowElementsViewModel = /** @class */ (function () {
    function WFFlowElementsViewModel(uiState, message, injector, modalService, resolver, localPipe) {
        this.uiState = uiState;
        this.message = message;
        this.injector = injector;
        this.modalService = modalService;
        this.resolver = resolver;
        this.localPipe = localPipe;
    }
    /**
     * 设置流程元素属性框
     * @param obj
     */
    /**
     * 设置流程元素属性框
     * @param {?} obj
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.setFlowElementProperty = /**
     * 设置流程元素属性框
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        this.uiState.propertyData = obj.propertyData;
        this.uiState.propertyConfig = this.setFlowEleConfig(obj.propertyConfig);
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.setFlowEleConfig = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        /** @type {?} */
        var propertyConfig = [];
        if (obj) {
            obj.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this.setFlowEleEntity(element.properties);
                propertyConfig.push(element);
            }));
        }
        return propertyConfig;
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.setFlowEleEntity = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        if (obj && obj.length > 0) {
            obj.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                switch (item.propertyID) {
                    case UserActivityPropertyKeys.Id: // 标识
                        break;
                    case UserActivityPropertyKeys.ConditionExpression: // 条件表达式
                        item.editor = ExpressionEditorComponent;
                        item.converter = new ExpressionEditorConverter(_this.localPipe);
                        item.editorParams = {};
                        break;
                    case UserActivityPropertyKeys.wf_ExecuteForms_PC: // 开始活动的表单构件
                        item.editor = ExecuteFormsComponent;
                        /** @type {?} */
                        var params = {
                            location: 'startActivity',
                            tab: 'web'
                        };
                        item.converter = new ExecuteFormsConverter(params, _this.localPipe);
                        item.editorParams = params;
                        break;
                    case UserActivityPropertyKeys.wf_ExecuteForms_Mobile: // 开始活动的表单构件
                        item.editor = ExecuteFormsComponent;
                        /** @type {?} */
                        var editorParams = {
                            location: 'startActivity',
                            tab: 'mobile'
                        };
                        item.converter = new ExecuteFormsConverter(editorParams, _this.localPipe);
                        item.editorParams = editorParams;
                        break;
                    case UserActivityPropertyKeys.sendBackedTask: // 开始活动的发送驳回任务
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case UserActivityPropertyKeys.SelectTargetAble: // 允许跳转
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case UserActivityPropertyKeys.JumpScope: // 跳转规则
                        item.editor = JumpScopeComponent;
                        item.converter = new JumpScopeConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.Default: // 默认分支
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case UserActivityPropertyKeys.otherAssignNodes:
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case UserActivityPropertyKeys.otherAssignActivityNodeInfos:
                        /** @type {?} */
                        var assignScopeParams = {
                            location: 'startActivity',
                        };
                        item.editor = AssignScopeComponent;
                        item.converter = new AssignScopeConverter(_this.uiState, _this.localPipe);
                        item.editorParams = assignScopeParams;
                        break;
                    default:
                        item.editor = ExtendPropertyComponent;
                        item.converter = new ExtendPropertyConverter(_this.localPipe);
                        break;
                }
            }));
        }
    };
    /**
     * 设置审批活动节点的属性框
     * @param obj
     */
    /**
     * 设置审批活动节点的属性框
     * @param {?} obj
     * @param {?} activityType
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.setUserActivityProperty = /**
     * 设置审批活动节点的属性框
     * @param {?} obj
     * @param {?} activityType
     * @return {?}
     */
    function (obj, activityType) {
        if (obj.propertyData.ApprovalItems) {
            this.buildApprovalItems(obj.propertyData.ApprovalItems);
            this.buildCounterSignVariables(obj.propertyData.ApprovalItems);
            this.buildSignRules(obj.propertyData.SignRule); // 设置会签规则的结论名称
        }
        this.uiState.propertyData = obj.propertyData;
        this.uiState.bizActivityId = obj.propertyData.BizActivityID;
        this.uiState.propertyConfig = this.setUserActConfig(obj.propertyConfig, activityType);
    };
    /**
     * @private
     * @param {?} obj
     * @param {?} activityType
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.setUserActConfig = /**
     * @private
     * @param {?} obj
     * @param {?} activityType
     * @return {?}
     */
    function (obj, activityType) {
        var _this = this;
        /** @type {?} */
        var propertyConfig = [];
        if (obj) {
            obj.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this.setUserActEntity(element.properties, activityType);
                propertyConfig.push(element);
            }));
        }
        return propertyConfig;
    };
    /**
     * @private
     * @param {?} obj
     * @param {?} activityType
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.setUserActEntity = /**
     * @private
     * @param {?} obj
     * @param {?} activityType
     * @return {?}
     */
    function (obj, activityType) {
        var _this = this;
        if (obj && obj.length > 0) {
            obj.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                switch (item.propertyID) {
                    case UserActivityPropertyKeys.Id: // 标识
                        break;
                    case UserActivityPropertyKeys.ParticipantSchemes: // 参与者
                        item.editor = ParticipantComponent;
                        item.converter = new ParticipantConverter(_this.localPipe);
                        item.editorParams = {
                            nodeType: 'userActivity'
                        };
                        break;
                    case UserActivityPropertyKeys.ParticipantOptions: // 参与者选项
                        item.editor = PerformerOptionsComponent;
                        item.converter = new PerformerOptionsConverter(_this.localPipe);
                        item.editorParams = {
                            location: activityType
                        };
                        break;
                    case UserActivityPropertyKeys.AssignPerformer:
                        item.editor = PerformerComponent;
                        item.converter = new PerformerConverter();
                        item.editorParams = {
                            nodeType: 'userActivity',
                            type: 'assignPerformer'
                        };
                        break;
                    case UserActivityPropertyKeys.wf_ExecuteForms_PC: // 表单定义
                        item.editor = ExecuteFormsComponent;
                        /** @type {?} */
                        var params = {
                            location: 'userActivity',
                            tab: 'web'
                        };
                        item.converter = new ExecuteFormsConverter(params, _this.localPipe);
                        item.editorParams = params;
                        break;
                    case UserActivityPropertyKeys.wf_ExecuteForms_Mobile: // 表单定义
                        item.editor = ExecuteFormsComponent;
                        /** @type {?} */
                        var editorParams = {
                            location: 'userActivity',
                            tab: 'mobile'
                        };
                        item.converter = new ExecuteFormsConverter(editorParams, _this.localPipe);
                        item.editorParams = editorParams;
                        break;
                    case UserActivityPropertyKeys.AssignStrategy: // 分配策略
                        item.editor = AssignStrategyComponent;
                        item.converter = new AssignStrategyConverter(_this.localPipe);
                        break;
                    // case UserActivityPropertyKeys.OperatorConfig: // 指派规则
                    //   item.editor = AssignPerformerConfigComponent;
                    //   item.converter = new AssignConfigConverter();
                    //   break;
                    case UserActivityPropertyKeys.CompleteStrategy: // 完成策略
                        if (_this.uiState.propertyData.AssignStrategy === _this.uiState.assignIterator[2].key) {
                            item.iterator = _this.uiState.completeIterator4Claim; // 分配策略为领用时，完成策略只能是抢占模式
                        }
                        else {
                            item.iterator = _this.uiState.completeIterator;
                        }
                        break;
                    case UserActivityPropertyKeys.SignRule: // 会签规则
                        item.editor = SignRuleComponent;
                        item.converter = new SignRuleConverter(_this.localPipe);
                        item.editorParams = {
                            variables: _this.uiState.counterSignVariables,
                            approvalItems: _this.uiState.approvalItems,
                        };
                        break;
                    case UserActivityPropertyKeys.ApprovalItems: // 审批项
                        item.editor = ApprovelItemsComponent;
                        item.converter = new ApprovelItemsConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.Retrievable: // 允许取回
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case UserActivityPropertyKeys.AddSignFrontAble: // 允许征询
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter(_this.localPipe);
                        item.editorParams = {
                            nodeType: 'userActivity',
                            tabId: 'approvalProperty',
                        };
                        break;
                    case UserActivityPropertyKeys.AddSignBehindAble: // 允许加签
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter(_this.localPipe);
                        item.editorParams = {
                            nodeType: 'userActivity',
                            tabId: 'approvalProperty',
                        };
                        break;
                    case UserActivityPropertyKeys.NotifyAble: // 允许知会
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter(_this.localPipe);
                        item.editorParams = {
                            nodeType: 'userActivity',
                            tabId: 'approvalProperty',
                        };
                        break;
                    case UserActivityPropertyKeys.transferScope: // 移交范围
                        item.editor = OrganizationPotentialOwnerComponent;
                        item.converter = new OrganizationPotentialOwnerConverter(_this.localPipe);
                        item.editorParams = {
                            nodeType: 'userActivity',
                            tabId: 'approvalProperty',
                        };
                        break;
                    case UserActivityPropertyKeys.SelectBranch: // 允许指定后续分支
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case UserActivityPropertyKeys.SelectTargetAble: // 允许跳转
                        if (_this.uiState.propertyData.CompleteStrategy
                            && _this.uiState.propertyData.CompleteStrategy !== _this.uiState.completeIterator[0].key) {
                            item.iterator = _this.uiState.noJump4Sign;
                        }
                        else {
                            item.iterator = _this.uiState.boolIterator;
                        }
                        break;
                    case UserActivityPropertyKeys.JumpScope: // 跳转规则
                        item.editor = JumpScopeComponent;
                        item.converter = new JumpScopeConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.BackWardRule: // 驳回规则
                        item.editor = BackwardRuleComponent;
                        item.converter = new BackwardRuleConverter(_this.localPipe);
                        item.editorParams = {
                            nodeType: 'UserActivity'
                        };
                        break;
                    case UserActivityPropertyKeys.wf_TitleExpression:
                        item.editor = TitleExpressionComponent;
                        item.converter = new TitleExpressionConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.Tools: // 活动构件
                        item.editor = ActivityComponentComponent;
                        item.converter = new ActivityComponentConverter(_this.localPipe);
                        item.editorParams = {
                            location: 'activity'
                        };
                        break;
                    case UserActivityPropertyKeys.wf_CustomizeAction: // 活动构件
                        item.editor = CustomizeActionComponent;
                        item.converter = new CustomizeActionConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.timeLimitControl: // 超时预警
                        item.editor = TimeLimitControlComponent;
                        item.converter = new TimeLimitControlConverter(_this.localPipe);
                        item.editorParams = {
                            location: 'activity'
                        };
                        break;
                    case UserActivityPropertyKeys.MultiInstanceLoopCharacteristics: // 多实例
                        item.editor = MultiInstanceLoopCharacteristicsComponent;
                        item.converter = new MultiInstanceLoopCharacteristicsConverter(_this.localPipe);
                        item.editorParams = {
                            location: 'activity'
                        };
                        break;
                    case UserActivityPropertyKeys.anonymousSet: // 匿名设置
                        item.editor = AnonymousSetComponent;
                        item.converter = new AnonymousSetConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.variableSettings: // 变量设置
                        item.editor = VariableSettingComponent;
                        item.converter = new VariableSettingConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.messageNotice: // 消息通知
                        item.editor = MessageNoticeComponent;
                        item.converter = new MessageNoticeConverter(_this.localPipe);
                        item.editorParams = {
                            location: 'activity'
                        };
                        break;
                    case UserActivityPropertyKeys.approvalPivotConfig: // 审批要点
                        item.editor = ApprovalPivotComponent;
                        item.converter = new ApprovalPivotConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.DisplayTerminal: // 显示终端
                        item.iterator = _this.uiState.displayTerminal;
                        break;
                    case UserActivityPropertyKeys.urgeHandleRule: // 显示终端
                        item.editor = UrgeHandleRuleComponent;
                        item.converter = new UrgeHandleRuleConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.imageSettings: // 影像设置
                        item.editor = ImageSetComponent;
                        item.converter = new ImageSetConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.checkConditions:
                        item.editor = CheckConditionComponent;
                        item.converter = new CheckConditionConverter(_this.localPipe);
                        break;
                    case UserActivityPropertyKeys.otherAssignNodes:
                        item.iterator = _this.uiState.boolIterator;
                        break;
                    case UserActivityPropertyKeys.otherAssignActivities:
                    case UserActivityPropertyKeys.otherAssignActivityNodeInfos:
                        item.editor = AssignScopeComponent;
                        /** @type {?} */
                        var assignScopeParams = {
                            location: 'userActivity',
                        };
                        item.editorParams = assignScopeParams;
                        item.converter = new AssignScopeConverter(_this.uiState, _this.localPipe);
                        break;
                    default:
                        item.editor = ExtendPropertyComponent;
                        item.converter = new ExtendPropertyConverter(_this.localPipe);
                        break;
                }
            }));
        }
    };
    /**
     * 创建会签规则变量
     */
    /**
     * 创建会签规则变量
     * @param {?} conclusions
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.buildCounterSignVariables = /**
     * 创建会签规则变量
     * @param {?} conclusions
     * @return {?}
     */
    function (conclusions) {
        var e_1, _a;
        this.uiState.counterSignVariables = [];
        this.uiState.counterSignVariables = this.uiState.counterSignVariables.concat([{
                key: 'nrOfInstances',
                name: '总任务数',
                description: '总任务数'
            }, {
                key: 'nrOfCompletedInstances',
                name: '已完成任务数',
                description: '已完成任务数'
            }
        ]);
        if (conclusions && conclusions.length > 0) {
            try {
                for (var conclusions_1 = tslib_1.__values(conclusions), conclusions_1_1 = conclusions_1.next(); !conclusions_1_1.done; conclusions_1_1 = conclusions_1.next()) {
                    var conclusion = conclusions_1_1.value;
                    /** @type {?} */
                    var variable = new VarEntity();
                    variable.key = "nrOf" + conclusion.Value;
                    variable.name = conclusion.Text + "_\u4EFB\u52A1\u6570";
                    variable.description = conclusion.Text + "_\u4EFB\u52A1\u6570";
                    this.uiState.counterSignVariables.push(variable);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (conclusions_1_1 && !conclusions_1_1.done && (_a = conclusions_1.return)) _a.call(conclusions_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    /**
     * 创建自定义项
     * @param conclusions
     */
    /**
     * 创建自定义项
     * @param {?} conclusions
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.buildApprovalItems = /**
     * 创建自定义项
     * @param {?} conclusions
     * @return {?}
     */
    function (conclusions) {
        var e_2, _a;
        this.uiState.approvalItems = [];
        if (conclusions && conclusions.length > 0) {
            try {
                for (var conclusions_2 = tslib_1.__values(conclusions), conclusions_2_1 = conclusions_2.next(); !conclusions_2_1.done; conclusions_2_1 = conclusions_2.next()) {
                    var item = conclusions_2_1.value;
                    /** @type {?} */
                    var conclusion = new ApprovalItemEntity();
                    conclusion.value = item.Value;
                    conclusion.text = item.Text;
                    conclusion.workFlowAction = item.WorkFlowAction;
                    conclusion.isDefault = item.IsDefault;
                    this.uiState.approvalItems.push(conclusion);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (conclusions_2_1 && !conclusions_2_1.done && (_a = conclusions_2.return)) _a.call(conclusions_2);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    /**
     * 会签规则绑定审批项名称
     * @param signRules 会签规则
     */
    /**
     * 会签规则绑定审批项名称
     * @private
     * @param {?} signRules 会签规则
     * @return {?}
     */
    WFFlowElementsViewModel.prototype.buildSignRules = /**
     * 会签规则绑定审批项名称
     * @private
     * @param {?} signRules 会签规则
     * @return {?}
     */
    function (signRules) {
        var e_3, _a;
        if (signRules && signRules.length > 0) {
            var _loop_1 = function (signRule) {
                /** @type {?} */
                var approvalItem = this_1.uiState.approvalItems.find((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.value === signRule.ConclusionValue; }));
                if (!approvalItem) {
                    // if (!info) {
                    //   this.message.info('审批项发生改变，请调整会签规则！');
                    //   info = true;
                    // }
                    signRule.ConclusionName = '已删除';
                }
                else {
                    signRule.ConclusionName = approvalItem.text;
                }
            };
            var this_1 = this;
            try {
                // let info = false;
                for (var signRules_1 = tslib_1.__values(signRules), signRules_1_1 = signRules_1.next(); !signRules_1_1.done; signRules_1_1 = signRules_1.next()) {
                    var signRule = signRules_1_1.value;
                    _loop_1(signRule);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (signRules_1_1 && !signRules_1_1.done && (_a = signRules_1.return)) _a.call(signRules_1);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
    };
    WFFlowElementsViewModel.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    WFFlowElementsViewModel.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: MessagerService },
        { type: Injector },
        { type: BsModalService },
        { type: ComponentFactoryResolver },
        { type: WfLocalePipe }
    ]; };
    return WFFlowElementsViewModel;
}());
export { WFFlowElementsViewModel };
if (false) {
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.message;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    WFFlowElementsViewModel.prototype.localPipe;
}
//# sourceMappingURL=data:application/json;base64,