/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ProcessDesignerUIState } from './process-designer.uistate';
import { MessageNoticeComponent, MessageNoticeConverter } from '../views/message-notice/message-notice.component';
import { VariableSettingComponent, VariableSettingConverter } from '../views/variable-setting/variable-setting.component';
import { MessageActivityPropertyKeys } from '../designer/wf-cell/property-keys/MessageActivityPropertyKeys';
import { WfLocalePipe } from '../i18n/pipe/wf-process-editor-locale.pipe';
var MessageActivityAdapter = /** @class */ (function () {
    function MessageActivityAdapter(uiState, localPipe) {
        this.uiState = uiState;
        this.localPipe = localPipe;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    MessageActivityAdapter.prototype.setProperty = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        this.uiState.propertyData = obj.propertyData;
        this.uiState.propertyConfig = this.setConfig(obj.propertyConfig);
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    MessageActivityAdapter.prototype.setConfig = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        /** @type {?} */
        var propertyConfig = [];
        if (obj) {
            obj.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this.setEntity(element.properties);
                propertyConfig.push(element);
            }));
        }
        return propertyConfig;
    };
    /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    MessageActivityAdapter.prototype.setEntity = /**
     * @private
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        if (obj && obj.length > 0) {
            obj.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                switch (item.propertyID) {
                    case MessageActivityPropertyKeys.messageNotice: // 参与者
                        item.editor = MessageNoticeComponent;
                        item.converter = new MessageNoticeConverter(_this.localPipe);
                        item.editorParams = {
                            location: 'messageActivity'
                        };
                        break;
                    case MessageActivityPropertyKeys.variableSettings: // 变量设置
                        item.editor = VariableSettingComponent;
                        item.converter = new VariableSettingConverter(_this.localPipe);
                        break;
                    default:
                        break;
                }
            }));
        }
    };
    MessageActivityAdapter.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    MessageActivityAdapter.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: WfLocalePipe }
    ]; };
    return MessageActivityAdapter;
}());
export { MessageActivityAdapter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    MessageActivityAdapter.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    MessageActivityAdapter.prototype.localPipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1hY3Rpdml0eS5hZGFwdGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9hcHAvbWVzc2FnZS1hY3Rpdml0eS5hZGFwdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXBFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ2xILE9BQU8sRUFBRSx3QkFBd0IsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQzFILE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBQzVHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUUxRTtJQUdJLGdDQUNZLE9BQStCLEVBQy9CLFNBQXVCO1FBRHZCLFlBQU8sR0FBUCxPQUFPLENBQXdCO1FBQy9CLGNBQVMsR0FBVCxTQUFTLENBQWM7SUFFbkMsQ0FBQzs7Ozs7SUFDRCw0Q0FBVzs7OztJQUFYLFVBQVksR0FBUTtRQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDO1FBQzdDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Ozs7OztJQUVPLDBDQUFTOzs7OztJQUFqQixVQUFrQixHQUFVO1FBQTVCLGlCQVNDOztZQVJTLGNBQWMsR0FBNEIsRUFBRTtRQUNsRCxJQUFJLEdBQUcsRUFBRTtZQUNMLEdBQUcsQ0FBQyxPQUFPOzs7O1lBQUMsVUFBQyxPQUE4QjtnQkFDdkMsS0FBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ25DLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDakMsQ0FBQyxFQUFDLENBQUM7U0FDTjtRQUNELE9BQU8sY0FBYyxDQUFDO0lBQzFCLENBQUM7Ozs7OztJQUNPLDBDQUFTOzs7OztJQUFqQixVQUFrQixHQUFxQjtRQUF2QyxpQkFvQkM7UUFuQkcsSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdkIsR0FBRyxDQUFDLE9BQU87Ozs7WUFBQyxVQUFDLElBQW9CO2dCQUM3QixRQUFRLElBQUksQ0FBQyxVQUFVLEVBQUU7b0JBQ3JCLEtBQUssMkJBQTJCLENBQUMsYUFBYSxFQUFFLE1BQU07d0JBQ2xELElBQUksQ0FBQyxNQUFNLEdBQUcsc0JBQXNCLENBQUM7d0JBQ3JDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxzQkFBc0IsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7d0JBQzVELElBQUksQ0FBQyxZQUFZLEdBQUc7NEJBQ2hCLFFBQVEsRUFBRSxpQkFBaUI7eUJBQzlCLENBQUM7d0JBQ0YsTUFBTTtvQkFDVixLQUFLLDJCQUEyQixDQUFDLGdCQUFnQixFQUFFLE9BQU87d0JBQ3RELElBQUksQ0FBQyxNQUFNLEdBQUcsd0JBQXdCLENBQUM7d0JBQ3ZDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSx3QkFBd0IsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7d0JBQzlELE1BQU07b0JBQ1Y7d0JBQ0ksTUFBTTtpQkFDYjtZQUNMLENBQUMsRUFBQyxDQUFDO1NBQ047SUFDTCxDQUFDOztnQkEzQ0osVUFBVTs7OztnQkFQRixzQkFBc0I7Z0JBS3RCLFlBQVk7O0lBOENyQiw2QkFBQztDQUFBLEFBNUNELElBNENDO1NBMUNZLHNCQUFzQjs7Ozs7O0lBRTNCLHlDQUF1Qzs7Ozs7SUFDdkMsMkNBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQcm9jZXNzRGVzaWduZXJVSVN0YXRlIH0gZnJvbSAnLi9wcm9jZXNzLWRlc2lnbmVyLnVpc3RhdGUnO1xyXG5pbXBvcnQgeyBFbGVtZW50UHJvcGVydHlDb25maWcsIFByb3BlcnR5RW50aXR5IH0gZnJvbSAnQGZhcnJpcy9pZGUtcHJvcGVydHktcGFuZWwnO1xyXG5pbXBvcnQgeyBNZXNzYWdlTm90aWNlQ29tcG9uZW50LCBNZXNzYWdlTm90aWNlQ29udmVydGVyIH0gZnJvbSAnLi4vdmlld3MvbWVzc2FnZS1ub3RpY2UvbWVzc2FnZS1ub3RpY2UuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVmFyaWFibGVTZXR0aW5nQ29tcG9uZW50LCBWYXJpYWJsZVNldHRpbmdDb252ZXJ0ZXIgfSBmcm9tICcuLi92aWV3cy92YXJpYWJsZS1zZXR0aW5nL3ZhcmlhYmxlLXNldHRpbmcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWVzc2FnZUFjdGl2aXR5UHJvcGVydHlLZXlzIH0gZnJvbSAnLi4vZGVzaWduZXIvd2YtY2VsbC9wcm9wZXJ0eS1rZXlzL01lc3NhZ2VBY3Rpdml0eVByb3BlcnR5S2V5cyc7XHJcbmltcG9ydCB7IFdmTG9jYWxlUGlwZSB9IGZyb20gJy4uL2kxOG4vcGlwZS93Zi1wcm9jZXNzLWVkaXRvci1sb2NhbGUucGlwZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcblxyXG5leHBvcnQgY2xhc3MgTWVzc2FnZUFjdGl2aXR5QWRhcHRlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIHVpU3RhdGU6IFByb2Nlc3NEZXNpZ25lclVJU3RhdGUsXHJcbiAgICAgICAgcHJpdmF0ZSBsb2NhbFBpcGU6IFdmTG9jYWxlUGlwZVxyXG4gICAgKSB7XHJcbiAgICB9XHJcbiAgICBzZXRQcm9wZXJ0eShvYmo6IGFueSkge1xyXG4gICAgICAgIHRoaXMudWlTdGF0ZS5wcm9wZXJ0eURhdGEgPSBvYmoucHJvcGVydHlEYXRhO1xyXG4gICAgICAgIHRoaXMudWlTdGF0ZS5wcm9wZXJ0eUNvbmZpZyA9IHRoaXMuc2V0Q29uZmlnKG9iai5wcm9wZXJ0eUNvbmZpZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXRDb25maWcob2JqOiBhbnlbXSk6IEVsZW1lbnRQcm9wZXJ0eUNvbmZpZ1tdIHtcclxuICAgICAgICBjb25zdCBwcm9wZXJ0eUNvbmZpZzogRWxlbWVudFByb3BlcnR5Q29uZmlnW10gPSBbXTtcclxuICAgICAgICBpZiAob2JqKSB7XHJcbiAgICAgICAgICAgIG9iai5mb3JFYWNoKChlbGVtZW50OiBFbGVtZW50UHJvcGVydHlDb25maWcpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0RW50aXR5KGVsZW1lbnQucHJvcGVydGllcyk7XHJcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eUNvbmZpZy5wdXNoKGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHByb3BlcnR5Q29uZmlnO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBzZXRFbnRpdHkob2JqOiBQcm9wZXJ0eUVudGl0eVtdKSB7XHJcbiAgICAgICAgaWYgKG9iaiAmJiBvYmoubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBvYmouZm9yRWFjaCgoaXRlbTogUHJvcGVydHlFbnRpdHkpID0+IHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoaXRlbS5wcm9wZXJ0eUlEKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBNZXNzYWdlQWN0aXZpdHlQcm9wZXJ0eUtleXMubWVzc2FnZU5vdGljZTogLy8g5Y+C5LiO6ICFXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uZWRpdG9yID0gTWVzc2FnZU5vdGljZUNvbXBvbmVudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5jb252ZXJ0ZXIgPSBuZXcgTWVzc2FnZU5vdGljZUNvbnZlcnRlcih0aGlzLmxvY2FsUGlwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uZWRpdG9yUGFyYW1zID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb246ICdtZXNzYWdlQWN0aXZpdHknXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgTWVzc2FnZUFjdGl2aXR5UHJvcGVydHlLZXlzLnZhcmlhYmxlU2V0dGluZ3M6IC8vIOWPmOmHj+iuvue9rlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmVkaXRvciA9IFZhcmlhYmxlU2V0dGluZ0NvbXBvbmVudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5jb252ZXJ0ZXIgPSBuZXcgVmFyaWFibGVTZXR0aW5nQ29udmVydGVyKHRoaXMubG9jYWxQaXBlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=