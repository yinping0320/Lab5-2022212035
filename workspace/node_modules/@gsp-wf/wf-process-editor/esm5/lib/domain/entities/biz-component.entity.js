/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ProcessDeUtil } from '../process-de-util';
var BizComponentEntity = /** @class */ (function () {
    function BizComponentEntity(name, metadataid, method) {
        this.id = ProcessDeUtil.GenerateElementId();
        this.name = name;
        this.metadataId = metadataid;
        this.methodCode = method;
        this.isForCompensation = false;
    }
    return BizComponentEntity;
}());
export { BizComponentEntity };
if (false) {
    /** @type {?} */
    BizComponentEntity.prototype.id;
    /** @type {?} */
    BizComponentEntity.prototype.name;
    /** @type {?} */
    BizComponentEntity.prototype.flowFormKey;
    /** @type {?} */
    BizComponentEntity.prototype.bizActivityId;
    /** @type {?} */
    BizComponentEntity.prototype.componentLocation;
    /** @type {?} */
    BizComponentEntity.prototype.executionTime;
    /** @type {?} */
    BizComponentEntity.prototype.metadataId;
    /** @type {?} */
    BizComponentEntity.prototype.methodCode;
    /** @type {?} */
    BizComponentEntity.prototype.methodName;
    /** @type {?} */
    BizComponentEntity.prototype.actualParameters;
    /** @type {?} */
    BizComponentEntity.prototype.owner;
    /** @type {?} */
    BizComponentEntity.prototype.ownerType;
    /** @type {?} */
    BizComponentEntity.prototype.isForCompensation;
    /** @type {?} */
    BizComponentEntity.prototype.condition;
    /** @type {?} */
    BizComponentEntity.prototype.scopeType;
}
/** @enum {number} */
var ComponentLocation = {
    Process: 0,
    Activity: 1,
};
export { ComponentLocation };
ComponentLocation[ComponentLocation.Process] = 'Process';
ComponentLocation[ComponentLocation.Activity] = 'Activity';
/** @enum {string} */
var OwnerType = {
    Process: 'Process',
    Activity: 'Activity',
    Schema: 'Schema',
};
export { OwnerType };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYml6LWNvbXBvbmVudC5lbnRpdHkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2RvbWFpbi9lbnRpdGllcy9iaXotY29tcG9uZW50LmVudGl0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRW5EO0lBQ0ksNEJBQVksSUFBYSxFQUFFLFVBQW1CLEVBQUUsTUFBZTtRQUMzRCxJQUFJLENBQUMsRUFBRSxHQUFHLGFBQWEsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1FBQzVDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO1FBQzdCLElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7SUFDbkMsQ0FBQztJQWdCTCx5QkFBQztBQUFELENBQUMsQUF2QkQsSUF1QkM7Ozs7SUFmRyxnQ0FBVzs7SUFDWCxrQ0FBYTs7SUFDYix5Q0FBcUI7O0lBQ3JCLDJDQUF1Qjs7SUFDdkIsK0NBQXNDOztJQUN0QywyQ0FBc0I7O0lBQ3RCLHdDQUFtQjs7SUFDbkIsd0NBQW1COztJQUNuQix3Q0FBb0I7O0lBQ3BCLDhDQUF5Qzs7SUFDekMsbUNBQWM7O0lBQ2QsdUNBQXFCOztJQUNyQiwrQ0FBNEI7O0lBQzVCLHVDQUFtQjs7SUFDbkIsdUNBQW1COzs7O0lBR25CLFVBQVc7SUFDWCxXQUFZOzs7Ozs7O0lBR1osU0FBVSxTQUFTO0lBQ25CLFVBQVcsVUFBVTtJQUNyQixRQUFTLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3R1YWxQYXJhbWV0ZXIgfSBmcm9tICcuL2FjdHVhbC1wYXJhbWV0ZXInO1xyXG5pbXBvcnQgeyBQcm9jZXNzRGVVdGlsIH0gZnJvbSAnLi4vcHJvY2Vzcy1kZS11dGlsJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCaXpDb21wb25lbnRFbnRpdHkge1xyXG4gICAgY29uc3RydWN0b3IobmFtZT86IHN0cmluZywgbWV0YWRhdGFpZD86IHN0cmluZywgbWV0aG9kPzogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5pZCA9IFByb2Nlc3NEZVV0aWwuR2VuZXJhdGVFbGVtZW50SWQoKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMubWV0YWRhdGFJZCA9IG1ldGFkYXRhaWQ7XHJcbiAgICAgICAgdGhpcy5tZXRob2RDb2RlID0gbWV0aG9kO1xyXG4gICAgICAgIHRoaXMuaXNGb3JDb21wZW5zYXRpb24gPSBmYWxzZTtcclxuICAgIH1cclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBmbG93Rm9ybUtleT86IHN0cmluZztcclxuICAgIGJpekFjdGl2aXR5SWQ/OiBzdHJpbmc7XHJcbiAgICBjb21wb25lbnRMb2NhdGlvbj86IENvbXBvbmVudExvY2F0aW9uO1xyXG4gICAgZXhlY3V0aW9uVGltZTogc3RyaW5nO1xyXG4gICAgbWV0YWRhdGFJZDogc3RyaW5nO1xyXG4gICAgbWV0aG9kQ29kZTogc3RyaW5nO1xyXG4gICAgbWV0aG9kTmFtZT86IHN0cmluZztcclxuICAgIGFjdHVhbFBhcmFtZXRlcnM6IEFycmF5PEFjdHVhbFBhcmFtZXRlcj47XHJcbiAgICBvd25lcjogc3RyaW5nO1xyXG4gICAgb3duZXJUeXBlOiBPd25lclR5cGU7XHJcbiAgICBpc0ZvckNvbXBlbnNhdGlvbj86IGJvb2xlYW47XHJcbiAgICBjb25kaXRpb24/OiBzdHJpbmc7XHJcbiAgICBzY29wZVR5cGU/OiBzdHJpbmc7XHJcbn1cclxuZXhwb3J0IGVudW0gQ29tcG9uZW50TG9jYXRpb24ge1xyXG4gICAgUHJvY2VzcyA9IDAsXHJcbiAgICBBY3Rpdml0eSA9IDFcclxufVxyXG5leHBvcnQgZW51bSBPd25lclR5cGUge1xyXG4gICAgUHJvY2VzcyA9ICdQcm9jZXNzJyxcclxuICAgIEFjdGl2aXR5ID0gJ0FjdGl2aXR5JyxcclxuICAgIFNjaGVtYSA9ICdTY2hlbWEnXHJcbn1cclxuIl19