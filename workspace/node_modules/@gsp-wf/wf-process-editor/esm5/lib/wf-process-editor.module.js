/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule, LOCALE_ID } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule, FormsModule } from '@angular/forms';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { WfProcessEditorComponent } from './wf-process-editor.component';
import { PerformerConfigService } from './views/performer/performer-config.service';
import { EntryFormEditorComponent } from './views/entryForm/entry-form-editor.component';
import { ExpressionEditorComponent } from './views/expressionEditor/expression-editor.component';
import { AssignPerformerConfigComponent } from './views/assign-performer-config/assign-performer-config.component';
import { SignRuleComponent } from './views/sign-rule/sign-rule.component';
import { ApprovelItemsComponent } from './views/approvel-items/approvel-items.component';
import { ExecuteFormsComponent } from './views/execute-forms/execute-forms.component';
import { JumpScopeComponent } from './views/jump-scope/jump-scope.component';
import { BackwardRuleComponent } from './views/backward-rule/backward-rule.component';
import { ActivityComponentComponent } from './views/activity-component/activity-component.component';
import { PerformerComponent } from './views/performer/performer.component';
import { PerformerEditComponent } from './views/performer/views/performer-edit/performer-edit.component';
import { UserPerformerComponent } from './views/performer/views/user-performer/user-performer.component';
import { ComponentPerformerComponent } from './views/performer/views/component-performer/component-performer.component';
import { PositionPerformerComponent } from './views/performer/views/position-performer/position-performer.component';
import { PerformerOptionsComponent } from './views/performer/views/performer-options/performer-options.component';
import { ReportingLineComponent } from './views/performer/views/reporting-line/reporting-line.component';
import { TitleExpressionComponent } from './views/title-expression/title-expression.component';
import { SaveAsEditComponent } from './views/save-as-edit/save-as-edit.component';
import { OrganizationPotentialOwnerComponent } from './views/organization-potential-owner/organization-potential-owner.component';
import { CustomizeActionComponent } from './views/customize-action/customize-action.component';
import { CustomizeActionListComponent } from './views/customize-action/views/customize-action-list/customize-action-list.component';
import { JumpScopePipe } from './views/jump-scope/jump-scope.pipe';
import { UsersIdPipe, UsersNamePipe } from './views/performer/views/user-performer/users-name.pipe';
import { PROCESS_DESIGNER_APP_PROVIDERS, PROCESS_DESIGNER_DOMAIN_PROVIDERS, PROCESS_DESIGNER_PART_PROVIDERS } from './index';
import { SessionService, HttpService } from '@ecp-caf/caf-common';
import { ExpressionService, ExpressionModule } from '@gsp-svc/expression';
import { CommonComponentUiRTService, CommonComponentUiModule } from '@gsp-cmp/ccmp-ui';
import { SelectMetadataRTComponent, GSPMetadataRTServiceModule, MetadataRTSelectModule } from '@gsp-lcm/metadatart-selector';
import { SysManagerUIModule } from '@gsp-sys/sysmgr-ui';
import { RtfAppHelpModule } from '@gsp-sys/rtf-ui';
import { TreeTableModule } from '@farris/ui-treetable';
import { PropertyPanelModule } from '@farris/ide-property-panel';
import { DataTableModule } from '@farris/ui-datatable';
import { LayoutModule } from '@farris/ui-layout';
import { NotifyModule } from '@farris/ui-notify';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { SplitterModule } from '@farris/ui-splitter';
import { InputGroupModule } from '@farris/ui-input-group';
import { LookupModule } from '@farris/ui-lookup';
import { FlexLayoutModule } from '@farris/ui-flex-layout';
import { FarrisPanelModule } from '@farris/ui-panel';
import { FarrisResponsiveModule } from '@farris/ui-responsive';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { LoadingModule } from '@farris/ui-loading';
import { MessagerModule } from '@farris/ui-messager';
import { ModalModule } from '@farris/ui-modal';
import { PopoverModule } from '@farris/ui-popover';
import { PaginationModule } from '@farris/ui-pagination';
import { DatagridFilterRowModule } from '@farris/ui-datagrid-filter';
import { FarrisDropdownModule, FDropdownDirectiveTypeModule } from '@farris/ui-dropdown';
import { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';
import { DatagridModule } from '@farris/ui-datagrid';
import { ComboListModule } from '@farris/ui-combo-list';
import { FarrisFormsModule } from '@farris/ui-forms';
import { SwitchModule } from '@farris/ui-switch';
import { WizardModule } from '@farris/ui-wizard';
import { FarrisSectionModule } from '@farris/ui-section';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { ProcessDeUtil } from './domain/process-de-util';
import { CallActivitySubProcessComponent } from './views/call-activity-sub-process/call-activity-sub-process.component';
import { WfBizprocessLookupModule } from '@gsp-wf/wf-bizprocess-lookup';
import { TimeLimitControlComponent } from './views/time-limit-control/time-limit-control.component';
import { SendMessageOperationComponent } from './views/time-limit-control/send-message-operation/send-message-operation.component';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { EventDefinitionComponent } from './views/event-definition/event-definition.component';
import { AnonymousSetComponent } from './views/anonymous-set/anonymous-set.component';
import { ProcessVariablesComponent } from './views/process-variables/process-variables.component';
import { VariableSettingComponent } from './views/variable-setting/variable-setting.component';
import { ConstantEditComponent } from './views/variable-setting/views/constant-edit/constant-edit.component';
import { ComponentEditComponent } from './views/variable-setting/views/component-edit/component-edit.component';
import { MessageNoticeComponent } from './views/message-notice/message-notice.component';
import { MessageNoticeEditComponent } from './views/message-notice/message-notice-edit/message-notice-edit.component';
import { AddExecuteFormComponent } from './views/execute-forms/add-execute-form/add-execute-form.component';
import { FormFormatConfigComponent } from './views/execute-forms/form-format-config/form-format-config.component';
import { FormConfigContainerComponent } from './views/execute-forms/form-config-container/form-config-container.component';
import { FarrisButtonModule } from '@farris/ui-button';
import { ParameterSettingComponent } from './views/execute-forms/parameter-setting/parameter-setting.component';
import { FormOperationConfigComponent } from './views/execute-forms/form-operation-config/form-operation-config.component';
import { NoteComponent } from './views/note/note.component';
import { ApprovalPivotComponent } from './views/approval-pivot/approval-pivot.component';
import { WfReportDefHelpComponent } from './views/performer/views/reporting-line/service/wf-report-def-help.component';
import { WfReportDefHelpService } from './views/performer/views/reporting-line/service/wf-report-def-help.service';
import { UrgeHandleRuleComponent } from './views/urge-handle-rule/urge-handle-rule.component';
import { MatrixPerformerComponent } from './views/performer/views/matrix-performer/matrix-performer.component';
import { EnumListComponent } from './views/performer/views/matrix-performer/enum-list/enum-list.component';
import { AutoHandleOperationComponent } from './views/time-limit-control/auto-handle-operation/auto-handle-operation.component';
import { ProcessListHelpModule } from './views/aif-process-list-help/process-list-help.module';
import { ProcessListHelpComponent } from './views/aif-process-list-help/components/process-list-help/process-list-help.component';
import { ExtendPropertyComponent } from './views/extend-property/extend-property.component';
import { CallActivitySubProcess2Component } from './views/call-activity-sub-process2/call-activity-sub-process2.component';
import { ComboLookupModule } from '@farris/ui-combo-lookup';
import { ActivityExecutorPipe } from './views/performer/views/activity-executor-performer/entities/activity-executor.pipe';
import { ActivityExecutorPerformerComponent } from './views/performer/views/activity-executor-performer/activity-executor-performer.component';
import { SysmgrLookupModule } from '@gsp-sys/sysmgr-lookup';
import { ImageSetComponent } from './views/image-set/image-set.component';
import { MessageNoticeCopyComponent } from './views/message-notice/message-notice-copy/message-notice-copy.component';
import { EventBusService } from './views/shared/event-bus.service';
import { CheckConditionComponent } from './views/check-condition/check-condition.component';
import { LanguageTextboxModule } from '@farris/ui-language-textbox';
import { AssignStrategyComponent } from './views/assign-strategy/assign-strategy.component';
import { VerifyDetailModule } from '@farris/ui-verify-detail';
import { ActivityListComponent } from './views/activity-list/activity-list.component';
import { EditComponentParameterComponent } from './views/edit-component-parameter/edit-component-parameter.component';
import { VariablePerformerComponent } from './views/performer/views/variable-performer/variable-performer.component';
import { ReleaseComponent } from './views/release-component/release-component.component';
import { FarrisHtmlEditorModule } from '@farris/ui-html-editor';
import { WfTaskHandlerModule } from '@gsp-wf/wf-task-handler';
import { ParticipantComponent } from './views/participant/participant.component';
import { MatrixDefHelpService } from './views/performer/views/matrix-performer/service/matrix-performer.component.service';
import { VariableGridComponent } from './views/execute-forms/variable-grid/variable-grid.component';
import { VariableNamePipe } from './views/performer/views/variable-performer/variable-name.pipe';
import { AssignScopeComponent } from './views/assign-scope/assign-scope.component';
import { SmsMessageTemplateComponent } from './views/sms-message-template/sms-message-template.component';
import { VoConfigComponent } from './views/vo-config/vo-config.component';
import { WfOptionsComponent } from './views/wf-options/wf-options.component';
import { BillTypeHelpModule } from './views/bill-type-help/bill-type-help.module';
import { StartConditionComponent } from './views/start-condition/start-condition.component';
import { FResponseToolbarModule } from '@farris/ui-response-toolbar';
import { AifUiCommonModule } from './views/aif-ui-common/aif-ui-common.module';
import { DataEntityModule } from '@gsp-svc/data-entity-adapter';
import { BizProcessApiModule } from '@gsp-wf/biz-process-api';
import { PersonnelSelectorModule, PersonnelSelectorDataGridEditorProvider } from '@farris/ui-personnel-selector';
import { PositionsNamePipe } from './views/performer/views/position-performer/positions-name.pipe';
import { TranslateHttpLoader } from '@ngx-translate/http-loader';
import { TranslateLoader, TranslateModule } from '@ngx-translate/core';
import { TranslateResolveService } from './service/translate-resolve.service';
import { WfProcessEditorRoutingModule } from './wf-process-editor-routing.module';
import { WfLocaleModule } from './i18n/wf-process-editor-locale.module';
import { WF_LANG_RESOURCES, WfLocalePipe } from './i18n/pipe/wf-process-editor-locale.pipe';
import { WF_PROCESS_EDITOR_LANG_RESOURCES } from './i18n/assets/lang.resource';
import { AifLocalePipe, BIF_LANG_RESOURCES } from './views/aif-ui-common/pipe/aif-ui-common-locale.pipe';
import { AIF_PROCESS_LIST_HELP_LANG_RESOURCES } from './views/aif-process-list-help/i18n/lang.resource';
import { BatchSetPropertiesComponent } from './views/batch-set-properties/batch-set-properties.component';
import { MultiInstanceLoopCharacteristicsComponent } from './views/multi-instance-loop-characteristics/multi-instance-loop-characteristics.component';
import { AlternativeParticipantComponent } from './views/participant/alternative-participant/alternative-participant.component';
// 国际化相关
/**
 * @param {?} httpClient
 * @return {?}
 */
export function HttpLoaderFactory(httpClient) {
    /** @type {?} */
    var languagePath = 'platform/runtime/common/web/@gsp-wf/wf-process-editor/i18n/';
    return new TranslateHttpLoader(httpClient, languagePath, '.json?v=' + new Date().getTime());
}
var ɵ0 = localStorage.getItem('languageCode') || 'zh-CHS', ɵ1 = WF_PROCESS_EDITOR_LANG_RESOURCES, ɵ2 = AIF_PROCESS_LIST_HELP_LANG_RESOURCES;
var WfProcessEditorModule = /** @class */ (function () {
    function WfProcessEditorModule() {
    }
    WfProcessEditorModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        WfProcessEditorComponent,
                        EntryFormEditorComponent,
                        ExpressionEditorComponent,
                        AssignPerformerConfigComponent,
                        SignRuleComponent,
                        ApprovelItemsComponent,
                        ExecuteFormsComponent,
                        JumpScopeComponent,
                        BackwardRuleComponent,
                        JumpScopePipe,
                        ActivityComponentComponent,
                        PerformerComponent,
                        PerformerEditComponent,
                        UserPerformerComponent,
                        ComponentPerformerComponent,
                        PositionPerformerComponent,
                        PerformerOptionsComponent,
                        UsersNamePipe,
                        UsersIdPipe,
                        VariableNamePipe,
                        ActivityExecutorPipe,
                        ReportingLineComponent,
                        TitleExpressionComponent,
                        SaveAsEditComponent,
                        OrganizationPotentialOwnerComponent,
                        CustomizeActionComponent,
                        CustomizeActionListComponent,
                        CallActivitySubProcessComponent,
                        TimeLimitControlComponent,
                        SendMessageOperationComponent,
                        EventDefinitionComponent,
                        AnonymousSetComponent,
                        ProcessVariablesComponent,
                        VariableSettingComponent,
                        ConstantEditComponent,
                        ComponentEditComponent,
                        MessageNoticeComponent,
                        MessageNoticeEditComponent,
                        AddExecuteFormComponent,
                        FormFormatConfigComponent,
                        FormConfigContainerComponent,
                        ParameterSettingComponent,
                        FormOperationConfigComponent,
                        ApprovalPivotComponent,
                        WfReportDefHelpComponent,
                        UrgeHandleRuleComponent,
                        NoteComponent,
                        MatrixPerformerComponent,
                        EnumListComponent,
                        AutoHandleOperationComponent,
                        ExtendPropertyComponent,
                        CallActivitySubProcess2Component,
                        ActivityExecutorPerformerComponent,
                        ImageSetComponent,
                        MessageNoticeCopyComponent,
                        CheckConditionComponent,
                        AssignStrategyComponent,
                        ActivityListComponent,
                        EditComponentParameterComponent,
                        VariablePerformerComponent,
                        ReleaseComponent,
                        ParticipantComponent,
                        VariableGridComponent,
                        VoConfigComponent,
                        WfOptionsComponent,
                        AssignScopeComponent,
                        SmsMessageTemplateComponent,
                        StartConditionComponent,
                        PositionsNamePipe,
                        BatchSetPropertiesComponent,
                        MultiInstanceLoopCharacteristicsComponent,
                        AlternativeParticipantComponent
                    ],
                    imports: [
                        TranslateModule.forRoot({
                            loader: {
                                provide: TranslateLoader,
                                useFactory: HttpLoaderFactory,
                                deps: [HttpClient]
                            }
                        }),
                        CommonModule,
                        ReactiveFormsModule,
                        FormsModule,
                        HttpClientModule,
                        SysManagerUIModule,
                        RtfAppHelpModule,
                        CommonComponentUiModule,
                        GSPMetadataRTServiceModule.forRoot(''),
                        MetadataRTSelectModule,
                        TreeTableModule,
                        DataTableModule,
                        LayoutModule,
                        NotifyModule,
                        FarrisDialogModule,
                        SplitterModule,
                        InputGroupModule,
                        LookupModule,
                        FlexLayoutModule,
                        FarrisPanelModule,
                        FarrisResponsiveModule,
                        FResponseToolbarModule,
                        ExpressionModule,
                        PropertyPanelModule,
                        FarrisTabsModule,
                        LoadingModule.forRoot({
                            message: '加载中...'
                        }),
                        MessagerModule.forRoot({
                            width: 500
                        }),
                        ModalModule,
                        PopoverModule,
                        PaginationModule,
                        FarrisDropdownModule,
                        DatagridEditorsModule,
                        DatagridModule.forRoot(tslib_1.__spread(EditorProviders, [
                            PersonnelSelectorDataGridEditorProvider
                        ])),
                        ComboListModule,
                        WizardModule,
                        FarrisFormsModule,
                        SwitchModule,
                        WfBizprocessLookupModule,
                        NumberSpinnerModule,
                        PerfectScrollbarModule,
                        FarrisSectionModule,
                        FarrisButtonModule,
                        ProcessListHelpModule,
                        BillTypeHelpModule,
                        FarrisButtonModule,
                        ComboLookupModule,
                        SysmgrLookupModule,
                        FDropdownDirectiveTypeModule,
                        LanguageTextboxModule,
                        VerifyDetailModule,
                        FarrisHtmlEditorModule,
                        WfTaskHandlerModule,
                        DatagridFilterRowModule.forRoot(),
                        AifUiCommonModule,
                        DataEntityModule,
                        BizProcessApiModule,
                        PersonnelSelectorModule,
                        WfProcessEditorRoutingModule,
                        WfLocaleModule,
                    ],
                    providers: [
                        SessionService,
                        HttpService,
                        ExpressionService,
                        CommonComponentUiRTService,
                        PROCESS_DESIGNER_APP_PROVIDERS,
                        PROCESS_DESIGNER_DOMAIN_PROVIDERS,
                        PROCESS_DESIGNER_PART_PROVIDERS,
                        PerformerConfigService,
                        ProcessDeUtil,
                        WfReportDefHelpService,
                        EventBusService,
                        MatrixDefHelpService,
                        { provide: LOCALE_ID, useValue: ɵ0 },
                        { provide: WF_LANG_RESOURCES, useValue: ɵ1 },
                        WfLocalePipe,
                        TranslateResolveService,
                        PositionsNamePipe,
                        AifLocalePipe,
                        { provide: BIF_LANG_RESOURCES, useValue: ɵ2 },
                    ],
                    exports: [WfProcessEditorComponent, AlternativeParticipantComponent],
                    entryComponents: [
                        EntryFormEditorComponent,
                        ExpressionEditorComponent,
                        AssignPerformerConfigComponent,
                        SignRuleComponent,
                        ApprovelItemsComponent,
                        ExecuteFormsComponent,
                        JumpScopeComponent,
                        BackwardRuleComponent,
                        ActivityComponentComponent,
                        SelectMetadataRTComponent,
                        PerformerComponent,
                        PerformerEditComponent,
                        UserPerformerComponent,
                        ComponentPerformerComponent,
                        PositionPerformerComponent,
                        PerformerOptionsComponent,
                        ReportingLineComponent,
                        TitleExpressionComponent,
                        SaveAsEditComponent,
                        OrganizationPotentialOwnerComponent,
                        CustomizeActionComponent,
                        CustomizeActionListComponent,
                        CallActivitySubProcessComponent,
                        TimeLimitControlComponent,
                        SendMessageOperationComponent,
                        EventDefinitionComponent,
                        AnonymousSetComponent,
                        ProcessVariablesComponent,
                        VariableSettingComponent,
                        ConstantEditComponent,
                        ComponentEditComponent,
                        MessageNoticeComponent,
                        MessageNoticeEditComponent,
                        MessageNoticeCopyComponent,
                        AddExecuteFormComponent,
                        FormFormatConfigComponent,
                        FormConfigContainerComponent,
                        ParameterSettingComponent,
                        FormOperationConfigComponent,
                        ApprovalPivotComponent,
                        UrgeHandleRuleComponent,
                        NoteComponent,
                        MatrixPerformerComponent,
                        EnumListComponent,
                        AutoHandleOperationComponent,
                        ProcessListHelpComponent,
                        ExtendPropertyComponent,
                        CallActivitySubProcess2Component,
                        ActivityExecutorPerformerComponent,
                        ImageSetComponent,
                        CheckConditionComponent,
                        AssignStrategyComponent,
                        ActivityListComponent,
                        EditComponentParameterComponent,
                        VariablePerformerComponent,
                        ReleaseComponent,
                        ParticipantComponent,
                        VariableGridComponent,
                        VoConfigComponent,
                        WfOptionsComponent,
                        AssignScopeComponent,
                        StartConditionComponent,
                        BatchSetPropertiesComponent,
                        MultiInstanceLoopCharacteristicsComponent,
                        AlternativeParticipantComponent
                    ],
                },] }
    ];
    return WfProcessEditorModule;
}());
export { WfProcessEditorModule };
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,