/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { CustomizeAciton } from './entities/customize-action.entity';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { BsModalService } from '@farris/ui-modal';
import { CustomizeActionListComponent } from './views/customize-action-list/customize-action-list.component';
import { MessagerService } from '@farris/ui-messager';
import { ActualParameter } from '../execute-forms/entities/execute-form.entity';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var CustomizeActionComponent = /** @class */ (function () {
    function CustomizeActionComponent(designerState, expr, resolver, injector, modalService, message, cdr, localeId, resources, localePipe) {
        var _this = this;
        this.designerState = designerState;
        this.expr = expr;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.message = message;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.modalConfig = {
            title: this.localePipe.transform('component.customizeAction.customizeAction'),
            width: 800,
            height: 520,
            showButtons: true
        };
        this.terminalList = [
            { value: 'app', text: this.localePipe.transform('component.customizeAction.app') },
            { value: 'web', text: 'web' },
            { value: 'web,app', text: this.localePipe.transform('component.customizeAction.') }
        ];
        this.actions = [];
        this.columns = [
            { field: 'code', width: 100, title: this.localePipe.transform('component.customizeAction.code') },
            { field: 'name', width: 100, title: this.localePipe.transform('component.customizeAction.name') },
            {
                field: 'terminalType', width: 100, title: this.localePipe.transform('component.customizeAction.terminalType'),
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.terminalList }
                },
            },
        ];
        this.paramColumns = [
            { field: 'Name', width: 50, title: this.localePipe.transform('component.customizeAction.paramName') },
            { field: 'ValueText', width: 50, title: this.localePipe.transform('component.customizeAction.valueText') },
            {
                field: 'Value', width: 100, title: this.localePipe.transform('component.customizeAction.value'),
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            _this.showExprHelp(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            console.log('clear', e);
                        })
                    }
                }
            }
        ];
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    Object.defineProperty(CustomizeActionComponent.prototype, "value", {
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            var e_1, _a, e_2, _b;
            if (data && data.length > 0) {
                try {
                    for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                        var d = data_1_1.value;
                        /** @type {?} */
                        var action = new CustomizeAciton(d.id, d.code, d.name);
                        action.terminalType = d.terminalType;
                        action.actualParameters = [];
                        if (d.actualParameters && d.actualParameters.length > 0) {
                            try {
                                for (var _c = tslib_1.__values(d.actualParameters), _d = _c.next(); !_d.done; _d = _c.next()) {
                                    var a = _d.value;
                                    /** @type {?} */
                                    var p = new ActualParameter();
                                    p.Name = a.Name;
                                    p.Value = a.Value;
                                    p.ValueText = a.ValueText;
                                    p.Tag = a.Tag;
                                    action.actualParameters.push(p);
                                }
                            }
                            catch (e_2_1) { e_2 = { error: e_2_1 }; }
                            finally {
                                try {
                                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                                }
                                finally { if (e_2) throw e_2.error; }
                            }
                        }
                        this.actions.push(action);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CustomizeActionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    CustomizeActionComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.loadData();
        // this.actionlist.loadData(this.actions);
        // if (this.actions && this.actions.length > 0) {
        //   this.actionlist.selectRow(this.actions[0].id, true);
        // }
    };
    /**
     * @return {?}
     */
    CustomizeActionComponent.prototype.addActions = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(CustomizeActionListComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        /** @type {?} */
        var modalConfig = {
            title: this.localePipe.transform('component.customizeAction.addActions'),
            width: 800,
            height: 520,
            showButtons: true,
            buttons: compRef.instance.footer
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.submit.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            var e_3, _a;
            if (data && data.length > 0) {
                var _loop_1 = function (a) {
                    /** @type {?} */
                    var index = _this.actions.findIndex((/**
                     * @param {?} act
                     * @return {?}
                     */
                    function (act) { return act.code === a.code; }));
                    if (index > -1) {
                        _this.message.info(_this.localePipe.transform('component.customizeAction.actionExisted'));
                        _this.actions.splice(index, 1);
                    }
                    _this.actions.push(a);
                };
                try {
                    for (var data_2 = tslib_1.__values(data), data_2_1 = data_2.next(); !data_2_1.done; data_2_1 = data_2.next()) {
                        var a = data_2_1.value;
                        _loop_1(a);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (data_2_1 && !data_2_1.done && (_a = data_2.return)) _a.call(data_2);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
                _this.loadData();
            }
            dialog.close();
        }));
        compRef.instance.cancel.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) { return dialog.close(); }));
    };
    /**
     * @return {?}
     */
    CustomizeActionComponent.prototype.delete = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.actionlist.endCellEdit();
        if (this.actionlist.selectedRow && this.actionlist.selectedRow.data) {
            /** @type {?} */
            var i = this.actions.findIndex((/**
             * @param {?} d
             * @return {?}
             */
            function (d) { return d.code === _this.actionlist.selectedRow.data.code; }));
            this.actions.splice(i, 1);
            this.loadData();
            // this.actionlist.loadData(this.actions);
            // if (this.actions && this.actions.length > 0) {
            //   this.actionlist.selectRow(this.actions[0].id, true);
            // } else {
            //   this.curAction = null;
            // }
        }
        else {
            this.message.info(this.localePipe.transform('component.customizeAction.selectedRow'));
        }
    };
    /**
     * @return {?}
     */
    CustomizeActionComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.actionlist.endCellEdit();
        this.paramlist && this.paramlist.endCellEdit();
        /** @type {?} */
        var object = { value: this.actions, parameters: null };
        this.submitModal.emit(object);
    };
    /**
     * @return {?}
     */
    CustomizeActionComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @return {?}
     */
    CustomizeActionComponent.prototype.loadData = /**
     * @return {?}
     */
    function () {
        this.actionlist.loadData(this.actions);
        if (this.actions.length > 0 && (!this.actionlist.selectedRow || !this.actionlist.selectedRow.data)) {
            this.actionlist.selectRow(this.actions[0].id, true);
        }
        else {
            this.curAction = null;
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    CustomizeActionComponent.prototype.selectChanged = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.curAction = data.data;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    CustomizeActionComponent.prototype.showExprHelp = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        var e_4, _a, e_5, _b, e_6, _c;
        /** @type {?} */
        var context = new Array();
        // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {
        //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));
        // }
        // this.expr.clearContext();
        if (this.designerState.schemas.length > 0) {
            try {
                for (var _d = tslib_1.__values(this.designerState.schemas), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var schema = _e.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_4) throw e_4.error; }
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        context = this.designerState.addContext(context);
        if (this.designerState.subActivityContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _f = tslib_1.__values(this.designerState.subActivityContext), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var variable = _g.value;
                    _loop_2(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_c = context_1.return)) _c.call(context_1);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        // if (e.instance.value) {
        this.expr.addExpressionText(e.instance.value);
        // }
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            e.formControl.setValue(expressioninfo);
            e.instance.cd.detectChanges();
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    CustomizeActionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-customize-action',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <!-- <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span> -->\r\n        <!-- <h4 class=\"f-title-text\">\u5217\u8868</h4> -->\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n        <button class=\"btn btn-primary mr-2\" (click)=\"addActions()\">{{'component.customizeAction.add' | wfLocale}}</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"delete()\">{{'component.customizeAction.delete' | wfLocale}}</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <div [style.height.%]=\"curAction?45:100\">\r\n        <farris-datagrid #actionlist [data]=\"actions\" [idField]=\"'id'\"\r\n          [columns]=\"columns\" [fit]=\"true\" [fitColumns]=\"true\" [editable]=\"true\"\r\n          [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\" [multiSelect]=\"false\"\r\n          (selectChanged)=\"selectChanged($event)\" [closeOtherGridEditor]=\"true\">\r\n        </farris-datagrid>\r\n      </div>\r\n      <ng-container *ngIf=\"curAction\">\r\n        <farris-tabs class=\"f-utils-fill\" [value]=\"'parameters'\" [contentFill]=\"true\" [autoTitleWidth]=\"true\">\r\n          <farris-tab title=\"{{'component.customizeAction.parameterList'|wfLocale}}\" [id]=\"'parameters'\">\r\n            <ng-template #content>\r\n              <div class=\"f-utils-fill-flex-column h-100\">\r\n                <farris-datagrid #paramlist [data]=\"curAction.actualParameters\" [columns]=\"paramColumns\"\r\n                  [idField]=\"'Name'\" [fit]=\"true\" [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\"\r\n                  [pagination]=\"false\" [showCheckbox]=\"false\" [multiSelect]=\"false\" [closeOtherGridEditor]=\"true\">\r\n                </farris-datagrid>\r\n              </div>\r\n            </ng-template>\r\n          </farris-tab>\r\n        </farris-tabs>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">{{'component.customizeAction.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">{{'component.customizeAction.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    CustomizeActionComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: MessagerService },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    CustomizeActionComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        editorParams: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        value: [{ type: Input }],
        actionlist: [{ type: ViewChild, args: ['actionlist',] }],
        paramlist: [{ type: ViewChild, args: ['paramlist',] }]
    };
    return CustomizeActionComponent;
}());
export { CustomizeActionComponent };
if (false) {
    /** @type {?} */
    CustomizeActionComponent.prototype.cls;
    /** @type {?} */
    CustomizeActionComponent.prototype.closeModal;
    /** @type {?} */
    CustomizeActionComponent.prototype.submitModal;
    /** @type {?} */
    CustomizeActionComponent.prototype.editorParams;
    /** @type {?} */
    CustomizeActionComponent.prototype.modalFooter;
    /** @type {?} */
    CustomizeActionComponent.prototype.modalConfig;
    /** @type {?} */
    CustomizeActionComponent.prototype.actionlist;
    /** @type {?} */
    CustomizeActionComponent.prototype.paramlist;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.terminalList;
    /** @type {?} */
    CustomizeActionComponent.prototype.actions;
    /** @type {?} */
    CustomizeActionComponent.prototype.curAction;
    /** @type {?} */
    CustomizeActionComponent.prototype.columns;
    /** @type {?} */
    CustomizeActionComponent.prototype.paramColumns;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    CustomizeActionComponent.prototype.localePipe;
}
var CustomizeActionConverter = /** @class */ (function () {
    function CustomizeActionConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    CustomizeActionConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.length > 0) {
            return this.localePipe.transform("component.customizeAction.set");
        }
        else {
            return this.localePipe.transform("component.customizeAction.notSet");
        }
    };
    return CustomizeActionConverter;
}());
export { CustomizeActionConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CustomizeActionConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,