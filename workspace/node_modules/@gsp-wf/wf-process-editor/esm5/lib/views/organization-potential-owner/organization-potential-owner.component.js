/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Output, EventEmitter, Input, ViewChild, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { ActionOrganizationScopeDesign, ActionScope, OrganizationPotentialOwner, OrganizationLevel } from './actionOrganizationScope';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { AlternativeParticipantComponent } from '../participant/alternative-participant/alternative-participant.component';
import { OrganizationParticipantExpression } from '../../domain/entities/organization-participant-expression';
import { ParticipantInfo } from '../participant/participant.info';
import { MessagerService } from '@farris/ui-messager';
var OrganizationPotentialOwnerComponent = /** @class */ (function () {
    function OrganizationPotentialOwnerComponent(cdr, localeId, resources, localePipe, expr, message, designerUIState) {
        var _this = this;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.expr = expr;
        this.message = message;
        this.designerUIState = designerUIState;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.organizationLevelCollection = [{
                value: 'GLOBAL',
                text: this.localePipe.transform('component.orgPotentialOwner.global'),
                orgId: 'global',
            }, {
                value: 'UNIT',
                text: this.localePipe.transform('component.orgPotentialOwner.currentUnit'),
                orgId: 'currentUnit'
            }, {
                value: 'DEPARTMENT',
                text: this.localePipe.transform('component.orgPotentialOwner.currentDepartment'),
                orgId: 'currentDepartment'
            },
            {
                value: 'VARORGANIZATION',
                text: this.localePipe.transform('component.orgPotentialOwner.variableOrganization'),
                orgId: ''
            }];
        this.actionCollection = [{
                value: ActionScope.AddSignBehind, name: this.localePipe.transform('component.orgPotentialOwner.addSignBehind')
            }, {
                value: ActionScope.AddSignFront, name: this.localePipe.transform('component.orgPotentialOwner.addSignFront')
            }, {
                value: ActionScope.Transfer, name: this.localePipe.transform('component.orgPotentialOwner.transfer')
            }, {
                value: ActionScope.Notify, name: this.localePipe.transform('component.orgPotentialOwner.notify')
            }];
        this.enable = false;
        this.organizationLevel = this.organizationLevelCollection[0].value;
        this.action = this.actionCollection[0].value;
        this.includeChildren = false;
        this.organizationId = '';
        this.showClearButton = false;
        this.actionName = (/**
         * @return {?}
         */
        function () {
            return _this.actionCollection.find((/**
             * @param {?} a
             * @return {?}
             */
            function (a) { return a.value === _this.action; })).name;
        });
        this.modalConfig = {
            title: this.localePipe.transform('component.orgPotentialOwner.optionSettings'),
            width: 760,
            height: 506,
            showButtons: true
        };
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    Object.defineProperty(OrganizationPotentialOwnerComponent.prototype, "value", {
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            var _this = this;
            this.action = (/** @type {?} */ (v.action));
            if (this.action === this.actionCollection[2].value) {
                if (v.enable === null || v.enable === undefined) {
                    this.enable = true;
                }
                else {
                    this.enable = v.enable;
                }
            }
            else {
                this.enable = v.enable;
            }
            if (v.scope) {
                this.alternativeParticipant.participant.isAllScope = true;
                /** @type {?} */
                var organizationParticipantExpression = new OrganizationParticipantExpression();
                organizationParticipantExpression.actionScope = (/** @type {?} */ (v.action));
                if (v.scope.organizationLevel === OrganizationLevel.DEFAULT && v.scope.tag === 'expression') {
                    organizationParticipantExpression.organizationLevel = OrganizationLevel.VARORGANIZATION;
                    organizationParticipantExpression.tag = v.scope.tag;
                    this.organizationLevel = OrganizationLevel.VARORGANIZATION;
                }
                else if (v.scope.organizationLevel) {
                    this.organizationLevel = v.scope.organizationLevel;
                }
                this.includeChildren = v.scope.includeChildren;
                organizationParticipantExpression.includeChildren = v.scope.includeChildren;
                this.organizationId = v.scope.organizationId;
                organizationParticipantExpression.organizationId = v.scope.organizationId;
                organizationParticipantExpression.organizationName = this.organizationLevelCollection.find((/**
                 * @param {?} o
                 * @return {?}
                 */
                function (o) { return o.value === _this.organizationLevel; })).text;
                this.alternativeParticipant.addOrganizationParticipant(organizationParticipantExpression);
                if (v.scope.participantInfo) {
                    this.alternativeParticipant.participant = v.scope.participantInfo;
                }
                else {
                    this.alternativeParticipant.participant = new ParticipantInfo();
                }
            }
            else {
                this.alternativeParticipant.participant.isAllScope = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (this.validate()) {
            /** @type {?} */
            var scope = new ActionOrganizationScopeDesign();
            scope.enable = this.enable;
            scope.action = (/** @type {?} */ (this.action));
            if (this.alternativeParticipant.participant.isAllScope) {
                /** @type {?} */
                var potential = new OrganizationPotentialOwner();
                potential.actionScope = this.action;
                // potential.organizationLevel = this.organizationLevel as OrganizationLevel;
                // potential.organizationId = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).orgId || this.organizationId;
                // potential.organizationName = this.organizationLevelCollection.find(o => o.value === this.organizationLevel).text;
                // potential.includeChildren = this.includeChildren;
                // if (potential.organizationLevel === OrganizationLevel.VARORGANIZATION) {
                //   potential.tag = 'expression';
                //   potential.organizationLevel = OrganizationLevel.DEFAULT;
                // } else {
                //   potential.tag = 'variable';
                // }
                scope.scope = (/** @type {?} */ (potential));
                scope.scope.participantInfo = this.alternativeParticipant.participant;
            }
            /** @type {?} */
            var object = { value: scope, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.validate = /**
     * @return {?}
     */
    function () {
        if (this.alternativeParticipant.participant.isAllScope &&
            (!this.alternativeParticipant.participant.potentialOwnerList || this.alternativeParticipant.participant.potentialOwnerList.length <= 0)) {
            this.message.info(this.localePipe.transform('component.orgPotentialOwner.turnOffPrompt'));
            return false;
        }
        else {
            return true;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.valueChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        switch (event.value) {
            case this.organizationLevelCollection[0].value:
                this.includeChildren = false;
                break;
            case this.organizationLevelCollection[1].value:
                this.includeChildren = true;
                break;
            case this.organizationLevelCollection[2].value:
                this.includeChildren = false;
                break;
            case this.organizationLevelCollection[3].value:
                this.includeChildren = true;
                this.organizationId = '';
                break;
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.clear = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.organizationId = '';
    };
    /**
     * @param {?} data
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.selectValue = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showExprHelp();
    };
    /**
     * @return {?}
     */
    OrganizationPotentialOwnerComponent.prototype.showExprHelp = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e;
        /** @type {?} */
        var context = new Array();
        // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {
        //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));
        // }
        // this.expr.clearContext();
        this.expr.setEditPattern(ExprEditMode.Advanced);
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _f = tslib_1.__values(this.designerUIState.schemas), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var schema = _g.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        if (this.designerUIState.participantContext.length > 0) {
            try {
                for (var _h = tslib_1.__values(this.designerUIState.participantContext), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var variable = _j.value;
                    context.push(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _k = tslib_1.__values(this.designerUIState.processVariableContext), _l = _k.next(); !_l.done; _l = _k.next()) {
                    var variable = _l.value;
                    _loop_1(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.designerUIState.subActivityContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _m = tslib_1.__values(this.designerUIState.subActivityContext), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var variable = _o.value;
                    _loop_2(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_e = context_1.return)) _e.call(context_1);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        // 预置表达式展示文本
        if (this.organizationId) {
            this.expr.addExpressionText(this.organizationId);
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            if (expressioninfo) {
                _this.organizationId = expressioninfo;
                _this.organizationLevelCollection[3].orgId = expressioninfo;
            }
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    OrganizationPotentialOwnerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-organization-potential-owner',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100 farris-overflow-y-auto farris-overflow-y-auto\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-utils-fill-flex-column h-100 farris-overflow-y-auto\" style=\"border-radius:16px;border: 1.5px solid #F1F3F7;\">\r\n        <div class=\"farris-form form-inline farris-form-inline\">\r\n          <div class=\"col-12 farris-group-auto my-3 pr-5\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\" style=\"width: 5.3rem\">\r\n                  <span class=\"farris-label-text\">{{('component.orgPotentialOwner.enable'|wfLocale) + actionName()}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <farris-switch [(ngModel)]=\"enable\" name=\"enable\"></farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-3 pr-5\">\r\n            <wf-alternative-participant [editorParams] = \"editorParams.nodeType\">\r\n            </wf-alternative-participant>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">{{'component.orgPotentialOwner.clickCancel'|wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.orgPotentialOwner.clickOK'|wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [".title-content{color:#000;display:inline-flex;align-items:center;line-height:1.375rem;position:relative;overflow:hidden;padding:0 0 0 1rem;min-width:390px}.title-content ::before{content:'';width:.25rem;height:1.125rem;background:#59a1ff;border-radius:1px;position:absolute;top:50%;left:0;margin-top:-.5625rem}.title-text{font-size:1rem;line-height:1.375rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-bottom:0;margin-right:10px}.title-line{flex-grow:1;border-bottom:1px dashed rgba(0,0,0,.1)}"]
                }] }
    ];
    /** @nocollapse */
    OrganizationPotentialOwnerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] },
        { type: ExpressionService },
        { type: MessagerService },
        { type: ProcessDesignerUIState }
    ]; };
    OrganizationPotentialOwnerComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        editorParams: [{ type: Input }],
        alternativeParticipant: [{ type: ViewChild, args: [AlternativeParticipantComponent,] }],
        value: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
    };
    return OrganizationPotentialOwnerComponent;
}());
export { OrganizationPotentialOwnerComponent };
if (false) {
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.cls;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.closeModal;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.submitModal;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.editorParams;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.alternativeParticipant;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.modalFooter;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.organizationLevelCollection;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.actionCollection;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.enable;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.organizationLevel;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.action;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.includeChildren;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.organizationId;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.showClearButton;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.actionName;
    /** @type {?} */
    OrganizationPotentialOwnerComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerComponent.prototype.localePipe;
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerComponent.prototype.designerUIState;
}
var OrganizationPotentialOwnerConverter = /** @class */ (function () {
    function OrganizationPotentialOwnerConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    OrganizationPotentialOwnerConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.action === (/** @type {?} */ (ActionScope.Transfer)) && (data.enable === null || data.enable === undefined)) {
            return this.localePipe.transform("component.orgPotentialOwner.set");
        }
        else {
            if (data && data.enable) {
                return this.localePipe.transform("component.orgPotentialOwner.set");
            }
            else {
                return this.localePipe.transform("component.orgPotentialOwner.notSet");
            }
        }
    };
    return OrganizationPotentialOwnerConverter;
}());
export { OrganizationPotentialOwnerConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    OrganizationPotentialOwnerConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,