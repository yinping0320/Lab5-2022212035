/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, EventEmitter, Inject, Injector, Input, LOCALE_ID, Optional, Output, TemplateRef, ViewChild } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import { HttpService } from '@ecp-caf/caf-common';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { AssignConfig } from './assign-config';
import { AssignStrategy } from './assign-strategy';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var AssignStrategyComponent = /** @class */ (function () {
    function AssignStrategyComponent(injector, message, designerUIState, http, cdr, localeId, resources, localePipe) {
        this.injector = injector;
        this.message = message;
        this.designerUIState = designerUIState;
        this.http = http;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.assingPerformerConfigForm = new FormGroup({
            multiSelect: new FormControl(true),
            necessary: new FormControl(false)
        });
        this.assignStrategy = new AssignStrategy();
        this.assignStrategyList = [
            { value: 'ALL', name: this.localePipe.transform('component.assignStrategy.all') },
            { value: 'ASSIGN', name: this.localePipe.transform('component.assignStrategy.assign') },
            { value: 'CLAIM', name: this.localePipe.transform('component.assignStrategy.claim') }
        ];
        this.operatorCollection = [
            { text: this.localePipe.transform('component.assignStrategy.currentUser'), value: 'currentUser' },
            { text: this.localePipe.transform('component.assignStrategy.procInstCreator'), value: 'procInstCreator' }
        ];
        this.modalConfig = {
            title: this.localePipe.transform('component.assignStrategy.assignStrategy'),
            width: 405,
            height: 350,
            showButtons: true
        };
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    Object.defineProperty(AssignStrategyComponent.prototype, "value", {
        set: /**
         * @param {?} assignStrategy
         * @return {?}
         */
        function (assignStrategy) {
            this.assignStrategy = assignStrategy || new AssignStrategy();
            if (!this.assignStrategy.assignConfig) {
                this.assignStrategy.assignConfig = new AssignConfig();
            }
            this.assingPerformerConfigForm.setValue({
                multiSelect: this.assignStrategy.assignConfig.multiSelect,
                necessary: this.assignStrategy.assignConfig.necessary
            });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AssignStrategyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AssignStrategyComponent.prototype.changeValue = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event === 'ASSIGN') {
            if (!this.assignStrategy.assignConfig) {
                this.assignStrategy.assignConfig = new AssignConfig();
            }
            this.assingPerformerConfigForm.setValue({
                multiSelect: this.assignStrategy.assignConfig.multiSelect,
                necessary: this.assignStrategy.assignConfig.necessary
            });
        }
    };
    /**
     * @return {?}
     */
    AssignStrategyComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.assignStrategy.assignConfig.multiSelect = this.assingPerformerConfigForm.get('multiSelect').value;
        this.assignStrategy.assignConfig.necessary = this.assingPerformerConfigForm.get('necessary').value;
        console.log(this.assignStrategy);
        /** @type {?} */
        var object = { value: this.assignStrategy, parameters: null };
        this.submitModal.emit(object);
    };
    /**
     * @return {?}
     */
    AssignStrategyComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    AssignStrategyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-assign-strategy',
                    template: "<div class=\"f-page\">\r\n  <section class=\"f-page-main d-flex flex-column\">\r\n    <farris-section class=\"pt-0 f-section-form f-section-in-mainsubcard\" mainTitle=\"{{'component.assignStrategy.option' | wfLocale}}\" [enableAccordion]=\"''\"\r\n      [enableMaximize]=\"false\">\r\n      <div class=\"f-form-layout farris-form farris-form-controls-inline\">\r\n        <fieldset class=\"f-section-formgroup\">\r\n          <div class=\"f-section-formgroup-inputs\">\r\n            <div class=\"col-12\">\r\n              <div class=\"farris-group-wrap ml-2 pl-4\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-radiogroup [(ngModel)]=\"assignStrategy.assignStrategy\" [data]=\"assignStrategyList\" name=\"assignStrategy\"\r\n                      [horizontal]=\"true\">\r\n                    </farris-radiogroup>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n    </farris-section>\r\n    <farris-section *ngIf=\"assignStrategy.assignStrategy==='ASSIGN'\" class=\"pt-0 f-section-form f-section-in-mainsubcard\" mainTitle=\"{{'component.assignStrategy.assignmentRules' | wfLocale}}\" [enableAccordion]=\"''\"\r\n      [enableMaximize]=\"false\">\r\n      <form class=\"h-100\" [formGroup]=\"assingPerformerConfigForm\">\r\n        <div class=\"f-form-layout farris-form farris-form-controls-inline\">\r\n          <fieldset class=\"f-section-formgroup\">\r\n            <div class=\"f-section-formgroup-inputs\">\r\n              <div class=\"col-12\">\r\n                <div class=\"farris-group-wrap\">\r\n                  <div class=\"form-group\">\r\n                    <label class=\"col-form-label\">\r\n                      <span class=\"farris-label-text\">{{'component.assignStrategy.operator' | wfLocale}}</span>\r\n                    </label>\r\n                    <div class=\"farris-input-wrap\" style=\"width: 300px;\">\r\n                      <farris-combo-list [(ngModel)]=\"assignStrategy.assignConfig.operator\" name=\"operator\" [ngModelOptions]=\"{standalone: true}\"\r\n                        [idField]=\"'value'\" [textField]=\"'text'\" [valueField]=\"'value'\" [data]=\"operatorCollection\"\r\n                        [panelHeight]=\"60\">\r\n                      </farris-combo-list>\r\n                      <div class=\"farris-feedback valid-feedback\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 mt-2\">\r\n                <div class=\"farris-group-wrap ml-2 pl-4\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <div class=\"farris-input-wrap\">\r\n                      <div class=\"custom-control custom-checkbox\">\r\n                        <input class=\"custom-control-input\" type=\"checkbox\" id=\"multiSelect\" formControlName=\"multiSelect\"\r\n                          [readOnly]=\"false\" />\r\n                        <label class=\"custom-control-label\" for=\"multiSelect\">{{'component.assignStrategy.multiSelect' | wfLocale}}</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 mt-2\">\r\n                <div class=\"farris-group-wrap ml-2 pl-4\">\r\n                  <div class=\"form-group farris-form-group\">\r\n                    <div class=\"farris-input-wrap\">\r\n                      <div class=\"custom-control custom-checkbox\">\r\n                        <input class=\"custom-control-input\" type=\"checkbox\" id=\"necessary\" formControlName=\"necessary\" [readOnly]=\"false\" />\r\n                        <label class=\"custom-control-label\" for=\"necessary\">{{'component.assignStrategy.necessary' | wfLocale}}</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n      </form>\r\n    </farris-section>\r\n  </section>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">{{'component.assignStrategy.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">{{'component.assignStrategy.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    AssignStrategyComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: MessagerService },
        { type: ProcessDesignerUIState },
        { type: HttpService },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    AssignStrategyComponent.propDecorators = {
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
    };
    return AssignStrategyComponent;
}());
export { AssignStrategyComponent };
if (false) {
    /** @type {?} */
    AssignStrategyComponent.prototype.closeModal;
    /** @type {?} */
    AssignStrategyComponent.prototype.submitModal;
    /** @type {?} */
    AssignStrategyComponent.prototype.modalFooter;
    /** @type {?} */
    AssignStrategyComponent.prototype.assingPerformerConfigForm;
    /** @type {?} */
    AssignStrategyComponent.prototype.assignStrategy;
    /** @type {?} */
    AssignStrategyComponent.prototype.assignStrategyList;
    /** @type {?} */
    AssignStrategyComponent.prototype.operatorCollection;
    /** @type {?} */
    AssignStrategyComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    AssignStrategyComponent.prototype.localePipe;
}
var AssignStrategyConverter = /** @class */ (function () {
    function AssignStrategyConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    AssignStrategyConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        switch (data.assignStrategy) {
            case 'ALL':
                return this.localePipe.transform('component.assignStrategy.all');
            case 'ASSIGN':
                return this.localePipe.transform('component.assignStrategy.assign');
            case 'CLAIM':
                return this.localePipe.transform('component.assignStrategy.claim');
            default:
                return '';
        }
    };
    return AssignStrategyConverter;
}());
export { AssignStrategyConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AssignStrategyConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,