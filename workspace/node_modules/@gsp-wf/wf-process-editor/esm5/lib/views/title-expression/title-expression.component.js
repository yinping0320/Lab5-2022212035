/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, Input, ViewChild, TemplateRef, Injector, LOCALE_ID, ChangeDetectorRef, Optional, Inject } from '@angular/core';
import { ExpressionService, ExpressioneditorComponent } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var TitleExpressionComponent = /** @class */ (function () {
    function TitleExpressionComponent(expr, injector, designerState, cdr, localeId, resources, localePipe) {
        this.expr = expr;
        this.injector = injector;
        this.designerState = designerState;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.textWithMultiLanguage = new Map();
        this.editorParams = {};
        this.language = 'zh-CHS';
        this.languageOptions = [
            { value: 'zh-CHS', text: this.localePipe.transform("component.titleExpression.zh-CHS") },
            { value: 'zh-CHT', text: this.localePipe.transform("component.titleExpression.zh-CHT") },
            { value: 'en', text: this.localePipe.transform("component.titleExpression.en") }
        ];
        this.contextEntities = [];
        this.schema = {};
        this.injectName = '';
        this.modalConfig = {
            title: this.localePipe.transform("component.titleExpression.taskDescription"),
            width: 1140,
            height: 720,
            showButtons: true
        };
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
        if (this.designerState.schemas[0]) {
            this.schema = this.designerState.schemas[0];
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                this.injectName = this.designerState.schemas[0].entityTypes[0].name;
            }
        }
        this.language = this.injector.get(LOCALE_ID, null) || this.language;
    }
    /**
     * @return {?}
     */
    TitleExpressionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e;
        // 构造多语表达式编辑器的数据源，兼容历史
        if (this.value != null) {
            if (typeof (this.value) === 'string') {
                this.textWithMultiLanguage.set('zh-CHS', this.value);
            }
            else {
                this.textWithMultiLanguage = new Map(Object.entries(this.value));
            }
        }
        this.contextEntities = new Array();
        if (this.designerState.procInstContext.length > 0) {
            try {
                for (var _f = tslib_1.__values(this.designerState.procInstContext), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var variable = _g.value;
                    this.contextEntities = this.contextEntities.concat([variable]);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!this_1.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_1.contextEntities = this_1.contextEntities.concat([variable]);
                }
            };
            var this_1 = this;
            try {
                for (var _h = tslib_1.__values(this.designerState.formalParameterContext), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var variable = _j.value;
                    _loop_1(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerState.subActivityContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!this_2.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_2.contextEntities = this_2.contextEntities.concat([variable]);
                }
            };
            var this_2 = this;
            try {
                for (var _k = tslib_1.__values(this.designerState.subActivityContext), _l = _k.next(); !_l.done; _l = _k.next()) {
                    var variable = _l.value;
                    _loop_2(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!this_3.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_3.contextEntities = this_3.contextEntities.concat([variable]);
                }
            };
            var this_3 = this;
            try {
                for (var _m = tslib_1.__values(this.designerState.participantContext), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var variable = _o.value;
                    _loop_3(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            var _loop_4 = function (variable) {
                if (!this_4.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_4.contextEntities = this_4.contextEntities.concat([variable]);
                }
            };
            var this_4 = this;
            try {
                for (var _p = tslib_1.__values(this.designerState.processVariableContext), _q = _p.next(); !_q.done; _q = _p.next()) {
                    var variable = _q.value;
                    _loop_4(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_q && !_q.done && (_e = _p.return)) _e.call(_p);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
    };
    /**
     * @return {?}
     */
    TitleExpressionComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.value = this.editor.getExprWithMultiLanguage();
        /** @type {?} */
        var obj = tslib_1.__spread(this.value.entries()).reduce((/**
         * @param {?} obj
         * @param {?} __1
         * @return {?}
         */
        function (obj, _a) {
            var _b = tslib_1.__read(_a, 2), key = _b[0], value = _b[1];
            return (obj[key] = value == null ? '' : value, obj);
        }), {});
        /** @type {?} */
        var object = { value: obj, parameters: null };
        this.submitModal.emit(object);
    };
    /**
     * @return {?}
     */
    TitleExpressionComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @private
     * @param {?} val
     * @return {?}
     */
    TitleExpressionComponent.prototype.convertToValue = /**
     * @private
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (val) {
            if (val.substring(9, val.length - 2)) {
                return val;
            }
            else {
                return '';
            }
        }
        else {
            return '';
        }
    };
    TitleExpressionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-title-expression',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <div class=\"col-12 farris-group-auto pr-5\">\r\n          <div class=\"farris-group-wrap\">\r\n            <div class=\"form-group farris-form-group\" style=\"display:flex\">\r\n              <label class=\"col-form-label\">\r\n                <span class=\"farris-label-text\">{{'component.titleExpression.currentLanguage' | wfLocale}}</span>\r\n              </label>\r\n              <div class=\"farris-input-wrap\">\r\n                <farris-combo-list [data]=\"languageOptions\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                  [idField]=\"'value'\" [(ngModel)]=\"language\" style=\"flex: 1;\" [enableClear]=\"false\">\r\n                </farris-combo-list>\r\n                <div class=\"farris-feedback valid-feedback\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <app-expressioneditor class=\"h-100\" [isPanel]=\"true\" [contextEntities]=\"contextEntities\" [text]=\"value\"\r\n        [customSchemaName]=\"'Schema'\" [customSchema]=\"schema\" [injectName]=\"injectName\" [injectSchemaName]=\"'Schema'\"\r\n        [injectNameInSchema]=\"injectName\" [language]=\"language\" [textWithMultiLanguage]=\"textWithMultiLanguage\">\r\n      </app-expressioneditor>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <div class=\"btns\">\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">{{'component.titleExpression.clickCancel' | wfLocale}}</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-sm mr-2\" (click)=\"clickOK()\">{{'component.titleExpression.clickOK' | wfLocale}}</button>\r\n  </div>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    TitleExpressionComponent.ctorParameters = function () { return [
        { type: ExpressionService },
        { type: Injector },
        { type: ProcessDesignerUIState },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    TitleExpressionComponent.propDecorators = {
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        editorParams: [{ type: Input }],
        editor: [{ type: ViewChild, args: [ExpressioneditorComponent,] }]
    };
    return TitleExpressionComponent;
}());
export { TitleExpressionComponent };
if (false) {
    /** @type {?} */
    TitleExpressionComponent.prototype.closeModal;
    /** @type {?} */
    TitleExpressionComponent.prototype.submitModal;
    /** @type {?} */
    TitleExpressionComponent.prototype.value;
    /** @type {?} */
    TitleExpressionComponent.prototype.textWithMultiLanguage;
    /** @type {?} */
    TitleExpressionComponent.prototype.modalFooter;
    /** @type {?} */
    TitleExpressionComponent.prototype.editorParams;
    /** @type {?} */
    TitleExpressionComponent.prototype.language;
    /** @type {?} */
    TitleExpressionComponent.prototype.editor;
    /** @type {?} */
    TitleExpressionComponent.prototype.languageOptions;
    /** @type {?} */
    TitleExpressionComponent.prototype.contextEntities;
    /** @type {?} */
    TitleExpressionComponent.prototype.schema;
    /** @type {?} */
    TitleExpressionComponent.prototype.injectName;
    /** @type {?} */
    TitleExpressionComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    TitleExpressionComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    TitleExpressionComponent.prototype.injector;
    /** @type {?} */
    TitleExpressionComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    TitleExpressionComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    TitleExpressionComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    TitleExpressionComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    TitleExpressionComponent.prototype.localePipe;
}
var TitleExpressionConverter = /** @class */ (function () {
    function TitleExpressionConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    TitleExpressionConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && typeof data === 'string') {
            return data;
        }
        else if (data && Object.keys(data).length > 0) {
            return this.areAllPropertiesEmpty(data)
                ? this.localePipe.transform("component.titleExpression.notSet")
                : this.localePipe.transform("component.titleExpression.set");
        }
        else {
            return this.localePipe.transform("component.titleExpression.notSet");
        }
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    TitleExpressionConverter.prototype.areAllPropertiesEmpty = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        for (var key in obj) {
            if (obj.hasOwnProperty(key) && obj[key] !== '') {
                return false;
            }
        }
        return true;
    };
    return TitleExpressionConverter;
}());
export { TitleExpressionConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TitleExpressionConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,