/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '@edp-bif/common-api';
import { RtShowEntity } from './RtShowEntity';
var RtShowEntitiesWithCustomization = /** @class */ (function (_super) {
    tslib_1.__extends(RtShowEntitiesWithCustomization, _super);
    function RtShowEntitiesWithCustomization() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.customizationEntities = new Array();
        return _this;
    }
    /**
     * @protected
     * @return {?}
     */
    RtShowEntitiesWithCustomization.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.isEnabled = false;
        this.customizationEntities.length = 0;
    };
    /**
     * @return {?}
     */
    RtShowEntitiesWithCustomization.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isEnabled", this.isEnabled);
        BpmnModelJsonHelper.SetAttributeValue(obj, "customizationEntities", this.customizationEntities);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    RtShowEntitiesWithCustomization.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.isEnabled = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isEnabled");
        this.customizationEntities = BpmnModelJsonHelper.GetAttributeValueAsList(obj, "customizationEntities", RtShowEntitiesWithCustomization);
    };
    /**
     * @protected
     * @return {?}
     */
    RtShowEntitiesWithCustomization.prototype.getTClass = /**
     * @protected
     * @return {?}
     */
    function () {
        return RtShowEntitiesWithCustomization;
    };
    return RtShowEntitiesWithCustomization;
}(RtShowEntity));
export { RtShowEntitiesWithCustomization };
if (false) {
    /** @type {?} */
    RtShowEntitiesWithCustomization.prototype.isEnabled;
    /** @type {?} */
    RtShowEntitiesWithCustomization.prototype.customizationEntities;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUnRTaG93RW50aXRpZXNXaXRoQ3VzdG9taXphdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvYWlmLXByb2Nlc3MtbGlzdC1oZWxwL2VudGl0eS9SdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTlDO0lBQXFELDJEQUFZO0lBQWpFO1FBQUEscUVBOEJDO1FBNUJHLDJCQUFxQixHQUEyQyxJQUFJLEtBQUssRUFBRSxDQUFDOztJQTRCaEYsQ0FBQzs7Ozs7SUExQmEsNkRBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMscUJBQXFCLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMxQyxDQUFDOzs7O0lBRU0sNkRBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFHLGlCQUFNLG1CQUFtQixXQUFFO1FBRXJDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hFLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUVoRyxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7Ozs7O0lBRU0sNERBQWtCOzs7O0lBQXpCLFVBQTBCLEdBQU87UUFDN0IsaUJBQU0sa0JBQWtCLFlBQUMsR0FBRyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDbEYsSUFBSSxDQUFDLHFCQUFxQixHQUFHLG1CQUFtQixDQUFDLHVCQUF1QixDQUFDLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSwrQkFBK0IsQ0FBQyxDQUFDO0lBQzVJLENBQUM7Ozs7O0lBRVMsbURBQVM7Ozs7SUFBbkI7UUFDSSxPQUFPLCtCQUErQixDQUFDO0lBQzNDLENBQUM7SUFDTCxzQ0FBQztBQUFELENBQUMsQUE5QkQsQ0FBcUQsWUFBWSxHQThCaEU7Ozs7SUE3Qkcsb0RBQW1COztJQUNuQixnRUFBNEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcG1uTW9kZWxKc29uSGVscGVyIH0gZnJvbSAnQGVkcC1iaWYvY29tbW9uLWFwaSc7XHJcbmltcG9ydCB7IFJ0U2hvd0VudGl0eSB9IGZyb20gJy4vUnRTaG93RW50aXR5JztcclxuXHJcbmV4cG9ydCBjbGFzcyBSdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uIGV4dGVuZHMgUnRTaG93RW50aXR5IHtcclxuICAgIGlzRW5hYmxlZDogYm9vbGVhbjtcclxuICAgIGN1c3RvbWl6YXRpb25FbnRpdGllczogQXJyYXk8UnRTaG93RW50aXRpZXNXaXRoQ3VzdG9taXphdGlvbj4gPSBuZXcgQXJyYXkoKTtcclxuXHJcbiAgICBwcm90ZWN0ZWQgUmVzZXRCZWZvcmVMb2FkRnJvbSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5SZXNldEJlZm9yZUxvYWRGcm9tKCk7XHJcblxyXG4gICAgICAgIHRoaXMuaXNFbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jdXN0b21pemF0aW9uRW50aXRpZXMubGVuZ3RoID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgQ29udmVydFRvSnNvbk9iamVjdCgpOiB7fSB7XHJcbiAgICAgICAgbGV0IG9iaiA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiaXNFbmFibGVkXCIsIHRoaXMuaXNFbmFibGVkKTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJjdXN0b21pemF0aW9uRW50aXRpZXNcIiwgdGhpcy5jdXN0b21pemF0aW9uRW50aXRpZXMpO1xyXG5cclxuICAgICAgICByZXR1cm4gb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBMb2FkRnJvbUpzb25PYmplY3Qob2JqOiB7fSk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLkxvYWRGcm9tSnNvbk9iamVjdChvYmopO1xyXG5cclxuICAgICAgICB0aGlzLmlzRW5hYmxlZCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0Jvb2xlYW4ob2JqLCBcImlzRW5hYmxlZFwiKTtcclxuICAgICAgICB0aGlzLmN1c3RvbWl6YXRpb25FbnRpdGllcyA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc0xpc3Qob2JqLCBcImN1c3RvbWl6YXRpb25FbnRpdGllc1wiLCBSdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgZ2V0VENsYXNzKCkge1xyXG4gICAgICAgIHJldHVybiBSdFNob3dFbnRpdGllc1dpdGhDdXN0b21pemF0aW9uO1xyXG4gICAgfVxyXG59Il19