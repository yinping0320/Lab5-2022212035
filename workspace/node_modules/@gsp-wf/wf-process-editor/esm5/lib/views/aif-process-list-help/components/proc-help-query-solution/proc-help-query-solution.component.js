/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ViewChild, Input, Injector, ComponentFactoryResolver } from '@angular/core';
import { ComboListComponent } from '@farris/ui-combo-list';
import { ProcessListHelpService } from '../../services/process-list-help.service';
import { MessagerService } from '@farris/ui-messager';
import { NotifyService } from '@farris/ui-notify';
import { GSPMetadataRTService, SelectMetadataRTComponent } from '@gsp-lcm/metadatart-selector';
import { BsModalService } from '@farris/ui-modal';
import { TextValue } from '@edp-bif/common-api';
import { CommonModelTypeHelper } from '../../utils/common-model-type-helper';
import { VOTemplateType } from '../../entity/VOTemplateType';
import { AifLocalePipe } from '../../../aif-ui-common/pipe/aif-ui-common-locale.pipe';
var ProcHelpQuerySolutionComponent = /** @class */ (function () {
    function ProcHelpQuerySolutionComponent(procHelpService, messager, notify, metadataService, modalService, injector, resolver, localePipe) {
        this.procHelpService = procHelpService;
        this.messager = messager;
        this.notify = notify;
        this.metadataService = metadataService;
        this.modalService = modalService;
        this.injector = injector;
        this.resolver = resolver;
        this.localePipe = localePipe;
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
        this.queryParamChange = new EventEmitter();
        this.onSearchEmitter = new EventEmitter();
        this.comboSysInitIdField = "value";
        this.comboSysInitValueField = "value";
        this.comboSysInitTextField = "text";
        this.comboSysInitData = [
            { value: "", text: this.localePipe.transform("all") },
            { value: "true", text: this.localePipe.transform("yes") },
            { value: "false", text: this.localePipe.transform("no") },
        ];
    }
    /**
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} name
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.processNameChange = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        this.queryParam.filterArgs.name = new TextValue();
        this.queryParam.filterArgs.name.hasValue = true;
        this.queryParam.filterArgs.name.value = name;
        this.queryParam.filterArgsExt.name = name;
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.processTypeChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var selections = _a.selections;
        /** @type {?} */
        var item = selections[0];
        this.queryParam.filterArgs.billProcessType = new TextValue();
        if (item != null) {
            if (item.value != "") {
                this.queryParam.filterArgs.billProcessType.hasValue = true;
            }
            this.queryParam.filterArgs.billProcessType.value = item.value;
        }
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.enabledStateChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var selections = _a.selections;
        /** @type {?} */
        var item = selections[0];
        this.queryParam.filterArgs.isEnabled = new TextValue();
        if (item != null) {
            if (item.value != "") {
                this.queryParam.filterArgs.isEnabled.hasValue = true;
            }
            this.queryParam.filterArgs.isEnabled.value = String(item.value);
        }
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.sysInitChange = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var selections = _a.selections;
        /** @type {?} */
        var item = selections[0];
        this.queryParam.filterArgs.sysInit = new TextValue();
        if (item != null) {
            if (item.value != "") {
                this.queryParam.filterArgs.sysInit.hasValue = true;
            }
            this.queryParam.filterArgs.sysInit.value = String(item.value);
        }
    };
    /**
     * 打开上游单据VO选择器
     */
    /**
     * 打开上游单据VO选择器
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.selectUpBill = /**
     * 打开上游单据VO选择器
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.typeList = "GSPViewModel";
        compRef.instance.selectedMetadata.subscribe((/**
         * @param {?} metadata4RefDto
         * @return {?}
         */
        function (metadata4RefDto) {
            _this.clearUpBill();
            /** @type {?} */
            var upVODto = metadata4RefDto.metadata;
            /** @type {?} */
            var upVO = JSON.parse(upVODto.content);
            switch (CommonModelTypeHelper.judgeVoTemplateType(upVO)) {
                //非代理VO
                case VOTemplateType.FromBE:
                    {
                        _this.queryParam.filterArgs.upBillVoId = new TextValue();
                        _this.queryParam.filterArgs.upBillVoId.hasValue = true;
                        _this.queryParam.filterArgs.upBillVoId.value = upVO.ID;
                        _this.queryParam.filterArgsExt.upBillVoName = upVO.MainObject.Name;
                    }
                    break;
                default:
                    _this.notify.error(_this.localePipe.transform("pleaseSelectNonVirtualVO"));
                    break;
            }
            ;
        }), (/**
         * @param {?} err
         * @return {?}
         */
        function (err) {
            console.error(err);
            //todo 确定异常结构, 目前采用兼容取值方式
            _this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));
            _this.clearUpBill();
        }));
        /** @type {?} */
        var modalConfig = {
            title: this.localePipe.transform("billSelector"),
            width: 930,
            height: 573,
            showButtons: false
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModalEmitter.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) { return dialog.close(); }));
    };
    /**
     * 打开下游单据VO选择器
     */
    /**
     * 打开下游单据VO选择器
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.selectDownBill = /**
     * 打开下游单据VO选择器
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(SelectMetadataRTComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.typeList = "GSPViewModel";
        compRef.instance.selectedMetadata.subscribe((/**
         * @param {?} metadata4RefDto
         * @return {?}
         */
        function (metadata4RefDto) {
            _this.clearDownBill();
            /** @type {?} */
            var downVODto = metadata4RefDto.metadata;
            /** @type {?} */
            var downVO = JSON.parse(downVODto.content);
            switch (CommonModelTypeHelper.judgeVoTemplateType(downVO)) {
                //非代理VO
                case VOTemplateType.FromBE:
                    {
                        _this.queryParam.filterArgs.downBillVoId = new TextValue();
                        _this.queryParam.filterArgs.downBillVoId.hasValue = true;
                        _this.queryParam.filterArgs.downBillVoId.value = downVO.ID;
                        _this.queryParam.filterArgsExt.downBillVoName = downVO.MainObject.Name;
                    }
                    break;
                default:
                    _this.notify.error(_this.localePipe.transform("pleaseSelectNonVirtualVO"));
                    break;
            }
            ;
        }), (/**
         * @param {?} err
         * @return {?}
         */
        function (err) {
            console.error(err);
            //todo 确定异常结构, 目前采用兼容取值方式
            _this.messager.error(err.error == null ? err.message : (err.error.Message || err.error.message || err.message));
            _this.clearUpBill();
        }));
        /** @type {?} */
        var modalConfig = {
            title: this.localePipe.transform("billSelector"),
            width: 930,
            height: 573,
            showButtons: false
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModalEmitter.subscribe((/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) { return dialog.close(); }));
    };
    /**
     * 清除流程名称
     */
    /**
     * 清除流程名称
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clearProcessName = /**
     * 清除流程名称
     * @return {?}
     */
    function () {
        delete this.queryParam.filterArgs.name;
        this.queryParam.filterArgsExt.name = null;
    };
    /**
     * 清除选中的流程类型
     */
    /**
     * 清除选中的流程类型
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clearProcessType = /**
     * 清除选中的流程类型
     * @return {?}
     */
    function () {
        delete this.queryParam.filterArgs.billProcessType;
    };
    /**
     * 清除选中的上游单据信息
     */
    /**
     * 清除选中的上游单据信息
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clearUpBill = /**
     * 清除选中的上游单据信息
     * @return {?}
     */
    function () {
        delete this.queryParam.filterArgs.upBillVoId;
        this.queryParam.filterArgsExt.upBillVoName = null;
    };
    /**
     * 清除选中的下游单据信息
     */
    /**
     * 清除选中的下游单据信息
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clearDownBill = /**
     * 清除选中的下游单据信息
     * @return {?}
     */
    function () {
        delete this.queryParam.filterArgs.downBillVoId;
        this.queryParam.filterArgsExt.downBillVoName = null;
    };
    /**
     * 清除选中的启用状态
     */
    /**
     * 清除选中的启用状态
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clearIsEnabled = /**
     * 清除选中的启用状态
     * @return {?}
     */
    function () {
        delete this.queryParam.filterArgs.isEnabled;
    };
    /**
     * 清除选中的发布状态
     */
    /**
     * 清除选中的发布状态
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clearIsPublished = /**
     * 清除选中的发布状态
     * @return {?}
     */
    function () {
        // delete this.queryParam.filterArgs.isPublished;
    };
    /**
     * 清除选中的发布状态
     */
    /**
     * 清除选中的发布状态
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clearSysInit = /**
     * 清除选中的发布状态
     * @return {?}
     */
    function () {
        delete this.queryParam.filterArgs.sysInit;
    };
    /**
     * 点击筛选按钮
     */
    /**
     * 点击筛选按钮
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clickBtnFilter = /**
     * 点击筛选按钮
     * @return {?}
     */
    function () {
        this.queryParam.filterArgs.pageIndex = 0;
        this.onSearchEmitter.emit(this.queryParam);
    };
    /**
     * 点击清空按钮
     */
    /**
     * 点击清空按钮
     * @return {?}
     */
    ProcHelpQuerySolutionComponent.prototype.clickBtnClear = /**
     * 点击清空按钮
     * @return {?}
     */
    function () {
        //重置下拉框
        // this.comboProcessType.onClear();
        // this.comboProcessTypeData = this.comboProcessTypeData.map(item => ({ ...item }));
        //重置下拉框
        // this.comboProcessType.onClear();
        // this.comboProcessTypeData = this.comboProcessTypeData.map(item => ({ ...item }));
        // this.comboEnabledState.onClear();
        // this.comboEnabledStateData = this.comboEnabledStateData.map(item => ({ ...item }));
        // this.comboSysInit.onClear();
        // this.comboSysInitData = this.comboSysInitData.map(item => ({ ...item }));
        // this.comboPublishedState.onClear();
        // this.comboPublishedStateData = this.comboPublishedStateData.map(item => ({ ...item }));
        //重置查询参数
        // const queryParam = {
        //   filterArgs: new ProcessFilterConditionArgs(),
        //   filterArgsExt: {}
        // };
        // queryParam.filterArgs.LoadFromJsonObject(this.queryParam.filterArgs.ConvertToJsonObject());
        /** @type {?} */
        var queryParam = this.queryParam;
        queryParam.filterArgsExt = {};
        queryParam.filterArgs.upBillVoId = null;
        queryParam.filterArgs.downBillVoId = null;
        queryParam.filterArgs.sysInit = null;
        queryParam.filterArgs.name = null;
        // queryParam.filterArgs.pageSize = this.queryParam.filterArgs.pageSize;
        // queryParam.filterArgs.pageIndex = this.queryParam.filterArgs.pageIndex;
        // queryParam.filterArgs.orderByCode = this.queryParam.filterArgs.orderByCode;
        // queryParam.filterArgs.orderByName = this.queryParam.filterArgs.orderByName;
        // queryParam.filterArgs.OrderByLastModifiedTime = this.queryParam.filterArgs.OrderByLastModifiedTime;
        this.queryParam = queryParam;
    };
    ProcHelpQuerySolutionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-proc-help-query-solution',
                    template: "<farris-section #sectionQuerySolution class=\"f-section-scheme f-section-in-managelist\" [expandStatus]=\"true\"\r\n  [enableMaximize]=\"false\" [enableAccordion]=\"''\" mainTitle=\"{{ 'querySolution' | aifLocale }}\" [fill]=\"false\"\r\n  [showHeader]=\"true\">\r\n  <ng-template farrisSectionTitle>\r\n    <div\r\n      style=\"border-radius: 6px; padding: 5px 12px; background: linear-gradient(-51deg, rgb(42, 135, 255, 0.2) 0%, rgb(50, 139, 255, 0.2) 100%);\">\r\n      <span style=\"font-size: 13px;color: #2A87FF;line-height: 16px;\">{{ 'querySolution' | aifLocale }}</span>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template farrisSectionToolbar>\r\n    <div class=\"query-solution\">\r\n      <div class=\"solution-action\">\r\n        <ng-container *ngIf=\"sectionQuerySolution.expandStatus == true\">\r\n          <div class=\"btn-group\">\r\n            <button class=\"btn btn-primary\" (click)=\"clickBtnFilter()\">{{ 'filter' | aifLocale }}</button>\r\n          </div>\r\n          <div class=\"icon-group\">\r\n            <span class=\"icon-group-remove\" title=\"{{'clear' | aifLocale}}\" (click)=\"clickBtnClear()\">\r\n              <span class=\"f-icon f-icon-remove\"></span>\r\n            </span>\r\n            <span class=\"divide\"></span>\r\n            <span class=\"icon-group-setup\" *ngIf=\"false\">\r\n              <span class=\"f-icon f-icon-home-setup\"></span>\r\n            </span>\r\n            <span class=\"icon-group-packup\" title=\"{{ 'collapse' | aifLocale }}\"\r\n              (click)=\"sectionQuerySolution.expandStatus = false\">\r\n              <span class=\"f-icon f-icon-packup\"></span>\r\n            </span>\r\n          </div>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"sectionQuerySolution.expandStatus == false\">\r\n          <div class=\"icon-group\">\r\n            <span class=\"icon-group-packup\" title=\"{{ 'expand' | aifLocale }}\"\r\n              (click)=\"sectionQuerySolution.expandStatus = true\">\r\n              <span class=\"f-icon f-icon-packup\" style=\"transform: rotate(180deg);\"></span>\r\n            </span>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <div class=\"form f-form-layout farris-form farris-form-controls-inline\"\r\n    *ngIf=\"sectionQuerySolution.expandStatus == true\">\r\n    <!-- \u6D41\u7A0B\u540D\u79F0 -->\r\n    <div class=\"col-12 col-md-6 col-xl-3\">\r\n      <div class=\"farris-group-wrap\">\r\n        <div class=\"form-group farris-form-group\">\r\n          <label for=\"\" class=\"col-form-label\" title=\"{{'processName' | aifLocale}}\">\r\n            <span class=\"farris-label-text\">{{\"processName\" | aifLocale}}</span>\r\n          </label>\r\n          <div class=\"farris-input-wrap\">\r\n            <input-group [ngModel]=\"queryParam.filterArgsExt.name\" (valueChange)=\"processNameChange($event)\"\r\n              (clear)=\"clearProcessName()\">\r\n            </input-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- \u6D41\u7A0B\u7C7B\u578B -->\r\n    <!-- <div class=\"col-12 col-md-6 col-xl-3\" *ngIf=\"true\">\r\n      <div class=\"farris-group-wrap\">\r\n        <div class=\"form-group farris-form-group\">\r\n          <label for=\"\" class=\"col-form-label\" title=\"{{'processType' | aifLocale}}\">\r\n            <span class=\"farris-label-text\">{{\"processType\" | aifLocale}}</span>\r\n          </label>\r\n          <div class=\"farris-input-wrap\">\r\n            <farris-combo-list #comboProcessType [ngModel]=\"queryParam.filterArgs.billProcessType?.value\"\r\n              [idField]=\"comboProcessTypeIdField\" [valueField]=\"comboProcessTypeValueField\"\r\n              [textField]=\"comboProcessTypeTextField\" [data]=\"comboProcessTypeData\" (clear)=\"clearProcessType()\"\r\n              (valueChange)=\"processTypeChange($event)\" [editable]=\"false\"></farris-combo-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- \u4E0A\u6E38\u5355\u636E -->\r\n    <div class=\"col-12 col-md-6 col-xl-3\">\r\n      <div class=\"farris-group-wrap\">\r\n        <div class=\"form-group farris-form-group\">\r\n          <label for=\"\" class=\"col-form-label\" title=\"{{'upBill' | aifLocale}}\">\r\n            <span class=\"farris-label-text\">{{\"upBill\" | aifLocale}}</span>\r\n          </label>\r\n          <div class=\"farris-input-wrap\">\r\n            <input-group [editable]=\"false\" [ngModel]=\"queryParam.filterArgsExt.upBillVoName\"\r\n              (clickHandle)=\"selectUpBill()\" [groupText]=\"groupIcon\" (clear)=\"clearUpBill()\"></input-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- \u4E0B\u6E38\u5355\u636E -->\r\n    <div class=\"col-12 col-md-6 col-xl-3\">\r\n      <div class=\"farris-group-wrap\">\r\n        <div class=\"form-group farris-form-group\">\r\n          <label for=\"\" class=\"col-form-label\" title=\"{{'downBill' | aifLocale}}\">\r\n            <span class=\"farris-label-text\">{{\"downBill\" | aifLocale}}</span>\r\n          </label>\r\n          <div class=\"farris-input-wrap\">\r\n            <input-group [editable]=\"false\" [ngModel]=\"queryParam.filterArgsExt.downBillVoName\"\r\n              (clickHandle)=\"selectDownBill()\" [groupText]=\"groupIcon\" (clear)=\"clearDownBill()\">\r\n            </input-group>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- \u542F\u7528\u72B6\u6001 -->\r\n    <!-- <div class=\"col-12 col-md-6 col-xl-3\">\r\n      <div class=\"farris-group-wrap\">\r\n        <div class=\"form-group farris-form-group\">\r\n          <label for=\"enabledState\" class=\"col-form-label\" title=\"{{'enabledState' | aifLocale}}\">\r\n            <span class=\"farris-label-text\">{{\"enabledState\" | aifLocale}}</span>\r\n          </label>\r\n          <div class=\"farris-input-wrap\">\r\n            <farris-combo-list #comboEnabledState [ngModel]=\"queryParam.filterArgs.isEnabled?.value\"\r\n              [idField]=\"comboEnabledStateIdField\" [valueField]=\"comboEnabledStateValueField\"\r\n              [textField]=\"comboEnabledStateTextField\" [data]=\"comboEnabledStateData\" (clear)=\"clearIsEnabled()\"\r\n              (valueChange)=\"enabledStateChange($event)\" [editable]=\"false\"></farris-combo-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <!-- \u7CFB\u7EDF\u9884\u7F6E -->\r\n    <div class=\"col-12 col-md-6 col-xl-3\" *ngIf=\"true\">\r\n      <div class=\"farris-group-wrap\">\r\n        <div class=\"form-group farris-form-group\">\r\n          <label for=\"\" class=\"col-form-label\" title=\"{{'sysInit' | aifLocale}}\">\r\n            <span class=\"farris-label-text\">{{\"sysInit\" | aifLocale}}</span>\r\n          </label>\r\n          <div class=\"farris-input-wrap\">\r\n            <farris-combo-list #comboSysInit [ngModel]=\"queryParam.filterArgs.sysInit?.value\"\r\n              [idField]=\"comboSysInitIdField\" [valueField]=\"comboSysInitValueField\" [textField]=\"comboSysInitTextField\"\r\n              [data]=\"comboSysInitData\" (clear)=\"clearSysInit()\" (valueChange)=\"sysInitChange($event)\"\r\n              [editable]=\"false\">\r\n            </farris-combo-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</farris-section>",
                    styles: [".query-solution span{vertical-align:middle;margin:0 3px;cursor:pointer}"]
                }] }
    ];
    /** @nocollapse */
    ProcHelpQuerySolutionComponent.ctorParameters = function () { return [
        { type: ProcessListHelpService },
        { type: MessagerService },
        { type: NotifyService },
        { type: GSPMetadataRTService },
        { type: BsModalService },
        { type: Injector },
        { type: ComponentFactoryResolver },
        { type: AifLocalePipe }
    ]; };
    ProcHelpQuerySolutionComponent.propDecorators = {
        queryParam: [{ type: Input, args: ["queryParam",] }],
        queryParamChange: [{ type: Output, args: ["queryParamChange",] }],
        onSearchEmitter: [{ type: Output, args: ["onSearch",] }],
        comboSysInit: [{ type: ViewChild, args: ["comboSysInit",] }]
    };
    return ProcHelpQuerySolutionComponent;
}());
export { ProcHelpQuerySolutionComponent };
if (false) {
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.groupIcon;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.queryParam;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.queryParamChange;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.onSearchEmitter;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.comboSysInit;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.comboSysInitIdField;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.comboSysInitValueField;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.comboSysInitTextField;
    /** @type {?} */
    ProcHelpQuerySolutionComponent.prototype.comboSysInitData;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.procHelpService;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.messager;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.notify;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.metadataService;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    ProcHelpQuerySolutionComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,