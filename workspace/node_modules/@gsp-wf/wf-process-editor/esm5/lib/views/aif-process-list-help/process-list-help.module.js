/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { CacheService, SessionService, HttpService } from '@ecp-caf/caf-common';
import { FrmEventBus, FuncsService, AppService, FrameworkService } from '@gsp-sys/rtf-common';
import { BusinessObjectRtService } from '@gsp-lcm/bo-rt-service';
import { MetadataRTSelectModule, GSPMetadataRTServiceModule, GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';
import { FResponseToolbarModule } from '@farris/ui-response-toolbar';
import { ListFilterModule } from '@farris/ui-list-filter';
import { AngularDraggableModule } from '@farris/ui-draggable';
import { FarrisCommonModule } from '@farris/ui-common';
import { FarrisFormsModule } from '@farris/ui-forms';
import { FarrisSectionModule } from '@farris/ui-section';
import { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';
import { DatagridModule } from '@farris/ui-datagrid';
import { ComboListModule } from '@farris/ui-combo-list';
import { InputGroupModule } from '@farris/ui-input-group';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { SwitchModule } from '@farris/ui-switch';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { LookupModule } from '@farris/ui-lookup';
import { LoadingModule, LoadingService } from '@farris/ui-loading';
import { NotifyModule } from '@farris/ui-notify';
import { MessagerModule } from '@farris/ui-messager';
import { ModalModule } from '@farris/ui-modal';
import { ProcessListHelpComponent } from './components/process-list-help/process-list-help.component';
import { ProcHelpQuerySolutionComponent } from './components/proc-help-query-solution/proc-help-query-solution.component';
import { ProcessListHelpService } from './services/process-list-help.service';
import { AifUiCommonModule } from '../aif-ui-common/aif-ui-common.module';
var ProcessListHelpModule = /** @class */ (function () {
    function ProcessListHelpModule() {
    }
    ProcessListHelpModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        HttpClientModule,
                        MetadataRTSelectModule,
                        GSPMetadataRTServiceModule.forRoot(""),
                        FResponseToolbarModule,
                        ListFilterModule,
                        AngularDraggableModule,
                        FarrisCommonModule.forRoot(),
                        FarrisFormsModule,
                        FarrisSectionModule,
                        DatagridEditorsModule,
                        DatagridModule.forRoot(tslib_1.__spread(EditorProviders)),
                        ComboListModule,
                        InputGroupModule,
                        FarrisDialogModule,
                        SwitchModule,
                        FarrisTabsModule,
                        LookupModule,
                        LoadingModule.forRoot({
                            message: 'Loading...'
                        }),
                        NotifyModule.forRoot(),
                        MessagerModule.forRoot({
                            width: 550,
                            height: 450
                        }),
                        ModalModule.forRoot(),
                        AifUiCommonModule,
                    ],
                    providers: [
                        CacheService,
                        SessionService,
                        HttpService,
                        FrmEventBus,
                        FuncsService,
                        LoadingService,
                        AppService,
                        FrameworkService,
                        GSPMetadataRTService,
                        BusinessObjectRtService,
                        ProcessListHelpService,
                    ],
                    declarations: [
                        ProcessListHelpComponent,
                        ProcHelpQuerySolutionComponent,
                    ],
                    entryComponents: [
                        ProcessListHelpComponent,
                        ProcHelpQuerySolutionComponent,
                    ]
                },] }
    ];
    return ProcessListHelpModule;
}());
export { ProcessListHelpModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1saXN0LWhlbHAubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9haWYtcHJvY2Vzcy1saXN0LWhlbHAvcHJvY2Vzcy1saXN0LWhlbHAubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDaEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDakUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLDBCQUEwQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEgsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDckQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDekQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3JGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRS9DLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ3RHLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDBFQUEwRSxDQUFDO0FBQzFILE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzFFO0lBQUE7SUF5REEsQ0FBQzs7Z0JBekRBLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixnQkFBZ0I7d0JBQ2hCLHNCQUFzQjt3QkFDdEIsMEJBQTBCLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQzt3QkFDdEMsc0JBQXNCO3dCQUN0QixnQkFBZ0I7d0JBQ2hCLHNCQUFzQjt3QkFDdEIsa0JBQWtCLENBQUMsT0FBTyxFQUFFO3dCQUM1QixpQkFBaUI7d0JBQ2pCLG1CQUFtQjt3QkFDbkIscUJBQXFCO3dCQUNyQixjQUFjLENBQUMsT0FBTyxrQkFDakIsZUFBZSxFQUNsQjt3QkFDRixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsa0JBQWtCO3dCQUNsQixZQUFZO3dCQUNaLGdCQUFnQjt3QkFDaEIsWUFBWTt3QkFDWixhQUFhLENBQUMsT0FBTyxDQUFDOzRCQUNwQixPQUFPLEVBQUUsWUFBWTt5QkFDdEIsQ0FBQzt3QkFDRixZQUFZLENBQUMsT0FBTyxFQUFFO3dCQUN0QixjQUFjLENBQUMsT0FBTyxDQUFDOzRCQUNyQixLQUFLLEVBQUUsR0FBRzs0QkFDVixNQUFNLEVBQUUsR0FBRzt5QkFDWixDQUFDO3dCQUNGLFdBQVcsQ0FBQyxPQUFPLEVBQUU7d0JBQ3JCLGlCQUFpQjtxQkFDbEI7b0JBQ0QsU0FBUyxFQUFFO3dCQUNULFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxXQUFXO3dCQUNYLFdBQVc7d0JBQ1gsWUFBWTt3QkFDWixjQUFjO3dCQUNkLFVBQVU7d0JBQ1YsZ0JBQWdCO3dCQUNoQixvQkFBb0I7d0JBQ3BCLHVCQUF1Qjt3QkFDdkIsc0JBQXNCO3FCQUN2QjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1osd0JBQXdCO3dCQUN4Qiw4QkFBOEI7cUJBQy9CO29CQUNELGVBQWUsRUFBRTt3QkFDZix3QkFBd0I7d0JBQ3hCLDhCQUE4QjtxQkFDL0I7aUJBQ0Y7O0lBR0QsNEJBQUM7Q0FBQSxBQXpERCxJQXlEQztTQUZZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBMT0NBTEVfSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuXHJcbmltcG9ydCB7IENhY2hlU2VydmljZSwgU2Vzc2lvblNlcnZpY2UsIEh0dHBTZXJ2aWNlIH0gZnJvbSAnQGVjcC1jYWYvY2FmLWNvbW1vbic7XHJcbmltcG9ydCB7IEZybUV2ZW50QnVzLCBGdW5jc1NlcnZpY2UsIEFwcFNlcnZpY2UsIEZyYW1ld29ya1NlcnZpY2UgfSBmcm9tICdAZ3NwLXN5cy9ydGYtY29tbW9uJztcclxuaW1wb3J0IHsgQnVzaW5lc3NPYmplY3RSdFNlcnZpY2UgfSBmcm9tICdAZ3NwLWxjbS9iby1ydC1zZXJ2aWNlJztcclxuaW1wb3J0IHsgTWV0YWRhdGFSVFNlbGVjdE1vZHVsZSwgR1NQTWV0YWRhdGFSVFNlcnZpY2VNb2R1bGUsIEdTUE1ldGFkYXRhUlRTZXJ2aWNlIH0gZnJvbSAnQGdzcC1sY20vbWV0YWRhdGFydC1zZWxlY3Rvcic7XHJcbmltcG9ydCB7IEZSZXNwb25zZVRvb2xiYXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXJlc3BvbnNlLXRvb2xiYXInO1xyXG5pbXBvcnQgeyBMaXN0RmlsdGVyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1saXN0LWZpbHRlcic7XHJcbmltcG9ydCB7IEFuZ3VsYXJEcmFnZ2FibGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRyYWdnYWJsZSc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgRmFycmlzRm9ybXNNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZvcm1zJztcclxuaW1wb3J0IHsgRmFycmlzU2VjdGlvbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktc2VjdGlvbic7XHJcbmltcG9ydCB7IERhdGFncmlkRWRpdG9yc01vZHVsZSwgRWRpdG9yUHJvdmlkZXJzIH0gZnJvbSAnQGZhcnJpcy91aS1kYXRhZ3JpZC1lZGl0b3JzJztcclxuaW1wb3J0IHsgRGF0YWdyaWRNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgQ29tYm9MaXN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21iby1saXN0JztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IFN3aXRjaE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktc3dpdGNoJztcclxuaW1wb3J0IHsgRmFycmlzVGFic01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdGFicyc7XHJcbmltcG9ydCB7IExvb2t1cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcclxuaW1wb3J0IHsgTG9hZGluZ01vZHVsZSwgTG9hZGluZ1NlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLWxvYWRpbmcnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcblxyXG5pbXBvcnQgeyBQcm9jZXNzTGlzdEhlbHBDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvcHJvY2Vzcy1saXN0LWhlbHAvcHJvY2Vzcy1saXN0LWhlbHAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvY0hlbHBRdWVyeVNvbHV0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Byb2MtaGVscC1xdWVyeS1zb2x1dGlvbi9wcm9jLWhlbHAtcXVlcnktc29sdXRpb24uY29tcG9uZW50JztcclxuaW1wb3J0IHsgUHJvY2Vzc0xpc3RIZWxwU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcHJvY2Vzcy1saXN0LWhlbHAuc2VydmljZSc7XHJcbmltcG9ydCB7IEFpZlVpQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vYWlmLXVpLWNvbW1vbi9haWYtdWktY29tbW9uLm1vZHVsZSc7XHJcbkBOZ01vZHVsZSh7XHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgSHR0cENsaWVudE1vZHVsZSxcclxuICAgIE1ldGFkYXRhUlRTZWxlY3RNb2R1bGUsXHJcbiAgICBHU1BNZXRhZGF0YVJUU2VydmljZU1vZHVsZS5mb3JSb290KFwiXCIpLFxyXG4gICAgRlJlc3BvbnNlVG9vbGJhck1vZHVsZSxcclxuICAgIExpc3RGaWx0ZXJNb2R1bGUsXHJcbiAgICBBbmd1bGFyRHJhZ2dhYmxlTW9kdWxlLFxyXG4gICAgRmFycmlzQ29tbW9uTW9kdWxlLmZvclJvb3QoKSxcclxuICAgIEZhcnJpc0Zvcm1zTW9kdWxlLFxyXG4gICAgRmFycmlzU2VjdGlvbk1vZHVsZSxcclxuICAgIERhdGFncmlkRWRpdG9yc01vZHVsZSxcclxuICAgIERhdGFncmlkTW9kdWxlLmZvclJvb3QoW1xyXG4gICAgICAuLi5FZGl0b3JQcm92aWRlcnNcclxuICAgIF0pLFxyXG4gICAgQ29tYm9MaXN0TW9kdWxlLFxyXG4gICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgIEZhcnJpc0RpYWxvZ01vZHVsZSxcclxuICAgIFN3aXRjaE1vZHVsZSxcclxuICAgIEZhcnJpc1RhYnNNb2R1bGUsXHJcbiAgICBMb29rdXBNb2R1bGUsXHJcbiAgICBMb2FkaW5nTW9kdWxlLmZvclJvb3Qoe1xyXG4gICAgICBtZXNzYWdlOiAnTG9hZGluZy4uLidcclxuICAgIH0pLFxyXG4gICAgTm90aWZ5TW9kdWxlLmZvclJvb3QoKSxcclxuICAgIE1lc3NhZ2VyTW9kdWxlLmZvclJvb3Qoe1xyXG4gICAgICB3aWR0aDogNTUwLFxyXG4gICAgICBoZWlnaHQ6IDQ1MFxyXG4gICAgfSksXHJcbiAgICBNb2RhbE1vZHVsZS5mb3JSb290KCksXHJcbiAgICBBaWZVaUNvbW1vbk1vZHVsZSxcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgQ2FjaGVTZXJ2aWNlLFxyXG4gICAgU2Vzc2lvblNlcnZpY2UsXHJcbiAgICBIdHRwU2VydmljZSxcclxuICAgIEZybUV2ZW50QnVzLFxyXG4gICAgRnVuY3NTZXJ2aWNlLFxyXG4gICAgTG9hZGluZ1NlcnZpY2UsXHJcbiAgICBBcHBTZXJ2aWNlLFxyXG4gICAgRnJhbWV3b3JrU2VydmljZSxcclxuICAgIEdTUE1ldGFkYXRhUlRTZXJ2aWNlLFxyXG4gICAgQnVzaW5lc3NPYmplY3RSdFNlcnZpY2UsXHJcbiAgICBQcm9jZXNzTGlzdEhlbHBTZXJ2aWNlLFxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBQcm9jZXNzTGlzdEhlbHBDb21wb25lbnQsXHJcbiAgICBQcm9jSGVscFF1ZXJ5U29sdXRpb25Db21wb25lbnQsXHJcbiAgXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgIFByb2Nlc3NMaXN0SGVscENvbXBvbmVudCxcclxuICAgIFByb2NIZWxwUXVlcnlTb2x1dGlvbkNvbXBvbmVudCxcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQcm9jZXNzTGlzdEhlbHBNb2R1bGUge1xyXG5cclxufVxyXG4iXX0=