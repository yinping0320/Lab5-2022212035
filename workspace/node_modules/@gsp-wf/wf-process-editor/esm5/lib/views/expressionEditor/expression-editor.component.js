/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Output, Input, EventEmitter, ViewChild, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { ExpressionService, ExpressioneditorComponent, ComputeRuleEditorComponent } from '@gsp-svc/expression';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var ExpressionEditorComponent = /** @class */ (function () {
    function ExpressionEditorComponent(expr, designerState, cdr, localeId, resources, localePipe) {
        this.expr = expr;
        this.designerState = designerState;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.contextEntities = [];
        this.schema = {};
        this.injectName = '';
        this.modalConfig = {
            title: this.localePipe.transform('component.expressionEditor.expressionEditor'),
            width: 1036,
            height: 530,
            showButtons: true
        };
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
        if (this.designerState.schemas[0]) {
            this.schema = this.designerState.schemas[0];
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                this.injectName = this.designerState.schemas[0].entityTypes[0].name;
            }
        }
    }
    /**
     * @return {?}
     */
    ExpressionEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;
        this.contextEntities = new Array();
        if (this.designerState.procInstContext.length > 0) {
            try {
                for (var _g = tslib_1.__values(this.designerState.procInstContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    this.contextEntities = this.contextEntities.concat([variable]);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        if (this.designerState.subActivityContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!this_1.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_1.contextEntities = this_1.contextEntities.concat([variable]);
                }
            };
            var this_1 = this;
            try {
                for (var _j = tslib_1.__values(this.designerState.subActivityContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_1(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerState.formalParameterContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!this_2.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_2.contextEntities = this_2.contextEntities.concat([variable]);
                }
            };
            var this_2 = this;
            try {
                for (var _l = tslib_1.__values(this.designerState.formalParameterContext), _m = _l.next(); !_m.done; _m = _l.next()) {
                    var variable = _m.value;
                    _loop_2(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (this.designerState.participantContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!this_3.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_3.contextEntities = this_3.contextEntities.concat([variable]);
                }
            };
            var this_3 = this;
            try {
                for (var _o = tslib_1.__values(this.designerState.participantContext), _p = _o.next(); !_p.done; _p = _o.next()) {
                    var variable = _p.value;
                    _loop_3(variable);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_p && !_p.done && (_d = _o.return)) _d.call(_o);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        if (this.designerState.activityComponentContext.length > 0) {
            var _loop_4 = function (variable) {
                if (!this_4.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_4.contextEntities = this_4.contextEntities.concat([variable]);
                }
            };
            var this_4 = this;
            try {
                for (var _q = tslib_1.__values(this.designerState.activityComponentContext), _r = _q.next(); !_r.done; _r = _q.next()) {
                    var variable = _r.value;
                    _loop_4(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_r && !_r.done && (_e = _q.return)) _e.call(_q);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.designerState.processVariableContext.length > 0) {
            var _loop_5 = function (variable) {
                if (!this_5.contextEntities.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    this_5.contextEntities = this_5.contextEntities.concat([variable]);
                }
            };
            var this_5 = this;
            try {
                for (var _s = tslib_1.__values(this.designerState.processVariableContext), _t = _s.next(); !_t.done; _t = _s.next()) {
                    var variable = _t.value;
                    _loop_5(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_t && !_t.done && (_f = _s.return)) _f.call(_s);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
    };
    /**
     * @return {?}
     */
    ExpressionEditorComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var result = this.compute.getExpr();
        this.value = this.convertToValue(result.text);
        /** @type {?} */
        var object = { value: this.value, parameters: null };
        this.submitModal.emit(object);
    };
    /**
     * 切换表达式类型（简易表达式<--->高级表达式）
     */
    /**
     * 切换表达式类型（简易表达式<--->高级表达式）
     * @return {?}
     */
    ExpressionEditorComponent.prototype.changeType = /**
     * 切换表达式类型（简易表达式<--->高级表达式）
     * @return {?}
     */
    function () {
        this.compute.changeType();
    };
    /**
     * @return {?}
     */
    ExpressionEditorComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @private
     * @param {?} val
     * @return {?}
     */
    ExpressionEditorComponent.prototype.convertToValue = /**
     * @private
     * @param {?} val
     * @return {?}
     */
    function (val) {
        if (val) {
            if (val.substring(9, val.length - 2)) {
                return val;
            }
            else {
                return '';
            }
        }
        else {
            return '';
        }
    };
    ExpressionEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-expression-editor',
                    template: "<div class=\"mx-3 h-100\" style=\"border-radius:16px;border: 1.5px solid #F1F3F7;\">\r\n  <app-compute-rule-editor #compute\r\n  [text]=\"value\"\r\n  [advancedContexts]=\"contextEntities\"\r\n  [injectName]=\"injectName\"\r\n  [injectSchemaName]=\"'Schema'\"\r\n  [injectNameInSchema]=\"injectName\"\r\n  [schema]=\"schema\"\r\n  [schemaName]=\"'Schema'\">\r\n</app-compute-rule-editor>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <div class=\"btns\">\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm mr-2\" (click)=\"clickCancel()\">{{'component.expressionEditor.clickCancel' | wfLocale}}</button>\r\n    <button type=\"button\" class=\"btn btn-secondary btn-sm mr-2\" (click)=\"changeType()\">{{'component.expressionEditor.changeType' | wfLocale}}</button>\r\n    <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"clickOK()\">{{'component.expressionEditor.clickOK' | wfLocale}}</button>\r\n  </div>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ExpressionEditorComponent.ctorParameters = function () { return [
        { type: ExpressionService },
        { type: ProcessDesignerUIState },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    ExpressionEditorComponent.propDecorators = {
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        editorParams: [{ type: Input }],
        editor: [{ type: ViewChild, args: [ExpressioneditorComponent,] }],
        compute: [{ type: ViewChild, args: ['compute',] }]
    };
    return ExpressionEditorComponent;
}());
export { ExpressionEditorComponent };
if (false) {
    /** @type {?} */
    ExpressionEditorComponent.prototype.closeModal;
    /** @type {?} */
    ExpressionEditorComponent.prototype.submitModal;
    /** @type {?} */
    ExpressionEditorComponent.prototype.value;
    /** @type {?} */
    ExpressionEditorComponent.prototype.modalFooter;
    /** @type {?} */
    ExpressionEditorComponent.prototype.editorParams;
    /** @type {?} */
    ExpressionEditorComponent.prototype.editor;
    /** @type {?} */
    ExpressionEditorComponent.prototype.compute;
    /** @type {?} */
    ExpressionEditorComponent.prototype.contextEntities;
    /** @type {?} */
    ExpressionEditorComponent.prototype.schema;
    /** @type {?} */
    ExpressionEditorComponent.prototype.injectName;
    /** @type {?} */
    ExpressionEditorComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    ExpressionEditorComponent.prototype.expr;
    /** @type {?} */
    ExpressionEditorComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    ExpressionEditorComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    ExpressionEditorComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    ExpressionEditorComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    ExpressionEditorComponent.prototype.localePipe;
}
var ExpressionEditorConverter = /** @class */ (function () {
    function ExpressionEditorConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    ExpressionEditorConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data) {
            return data;
        }
        else {
            return this.localePipe.transform("component.expressionEditor.notSet");
        }
    };
    return ExpressionEditorConverter;
}());
export { ExpressionEditorConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ExpressionEditorConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,