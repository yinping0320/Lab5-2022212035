/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, EventEmitter, Output, Input, ViewChild, TemplateRef, Inject, Injector, Optional, ChangeDetectorRef, LOCALE_ID } from '@angular/core';
import { AnonymousSet } from './anonymous-set.entity';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var AnonymousSetComponent = /** @class */ (function () {
    function AnonymousSetComponent(injector, cdr, localeId, resources, localePipe) {
        this.injector = injector;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.anonymousSet = new AnonymousSet();
        this.modalConfig = {
            title: this.localePipe.transform('component.anonymousSet.anonymousOpt'),
            width: 450,
            height: 360,
            showButtons: true
        };
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    Object.defineProperty(AnonymousSetComponent.prototype, "value", {
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            this.anonymousSet.isAnonymity = data.isAnonymity || false;
            this.anonymousSet.anonymous = data.anonymous || this.localePipe.transform('component.anonymousSet.approver');
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AnonymousSetComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    AnonymousSetComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var object = { value: this.anonymousSet, parameters: null };
        this.submitModal.emit(object);
    };
    /**
     * @return {?}
     */
    AnonymousSetComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    AnonymousSetComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-anonymous-set',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">{{'component.anonymousSet.anonymousSet'|wfLocale}}</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <div class=\"farris-form form-inline farris-form-inline\">\r\n          <div class=\"col-12 farris-group-auto my-3 pr-5\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.anonymousSet.isAnonymity'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <farris-switch [(ngModel)]=\"anonymousSet.isAnonymity\" name=\"isAnonymity\"></farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto mt-4 pr-5\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.anonymousSet.anonymous'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <textarea class=\"form-control\" type=\"text\" value=\"anonymous\" [(ngModel)]=\"anonymousSet.anonymous\" name=\"anonymous\"\r\n                  style=\"height: 50px;\" [readOnly]=\"!anonymousSet.isAnonymity\"></textarea>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">{{'component.anonymousSet.clickCancel'|wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.anonymousSet.clickOK'|wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    AnonymousSetComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    AnonymousSetComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
    };
    return AnonymousSetComponent;
}());
export { AnonymousSetComponent };
if (false) {
    /** @type {?} */
    AnonymousSetComponent.prototype.cls;
    /** @type {?} */
    AnonymousSetComponent.prototype.closeModal;
    /** @type {?} */
    AnonymousSetComponent.prototype.submitModal;
    /** @type {?} */
    AnonymousSetComponent.prototype.modalFooter;
    /** @type {?} */
    AnonymousSetComponent.prototype.anonymousSet;
    /** @type {?} */
    AnonymousSetComponent.prototype.modalConfig;
    /**
     * @type {?}
     * @private
     */
    AnonymousSetComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    AnonymousSetComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    AnonymousSetComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    AnonymousSetComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    AnonymousSetComponent.prototype.localePipe;
}
var AnonymousSetConverter = /** @class */ (function () {
    function AnonymousSetConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    AnonymousSetConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.isAnonymity) {
            return this.localePipe.transform("component.anonymousSet.set");
        }
        else {
            return this.localePipe.transform("component.anonymousSet.notSet");
        }
    };
    return AnonymousSetConverter;
}());
export { AnonymousSetConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AnonymousSetConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5vbnltb3VzLXNldC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL2Fub255bW91cy1zZXQvYW5vbnltb3VzLXNldC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlLLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFFaEc7SUE2QkUsK0JBQ1UsUUFBa0IsRUFDTixHQUFzQixFQUNmLFFBQWdCLEVBQ1IsU0FBYyxFQUM3QixVQUF3QjtRQUpwQyxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ04sUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFDZixhQUFRLEdBQVIsUUFBUSxDQUFRO1FBQ1IsY0FBUyxHQUFULFNBQVMsQ0FBSztRQUM3QixlQUFVLEdBQVYsVUFBVSxDQUFjO1FBeEI5QyxRQUFHLEdBQUcsOEJBQThCLENBQUM7UUFFM0IsZUFBVSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDckMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBU2hELGlCQUFZLEdBQWlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDaEQsZ0JBQVcsR0FBRztZQUNaLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxxQ0FBcUMsQ0FBQztZQUN2RSxLQUFLLEVBQUUsR0FBRztZQUNWLE1BQU0sRUFBRSxHQUFHO1lBQ1gsV0FBVyxFQUFFLElBQUk7U0FDbEIsQ0FBQztRQVFBLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLFlBQVksQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDNUUsQ0FBQztJQXRCRixzQkFBYSx3Q0FBSzs7Ozs7UUFBbEIsVUFBbUIsSUFBa0I7WUFDbkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsSUFBSSxLQUFLLENBQUM7WUFDMUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1FBQy9HLENBQUM7OztPQUFBOzs7O0lBcUJELHdDQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7SUFDRCx1Q0FBTzs7O0lBQVA7O1lBQ1EsTUFBTSxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRTtRQUM3RCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsMkNBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDOztnQkFoREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLG83RUFBNkM7b0JBRTdDLFNBQVMsRUFBRTt3QkFDUixZQUFZO3FCQUNkOztpQkFDRjs7OztnQkFicUcsUUFBUTtnQkFBWSxpQkFBaUIsdUJBcUN0SSxRQUFROzZDQUNSLE1BQU0sU0FBQyxTQUFTO2dEQUNoQixNQUFNLFNBQUMsaUJBQWlCO2dCQW5DRCxZQUFZLHVCQW9DbkMsUUFBUTs7O3NCQXpCVixXQUFXLFNBQUMsT0FBTzs2QkFHbkIsTUFBTTs4QkFDTixNQUFNO3dCQUVOLEtBQUs7OEJBS0wsU0FBUyxTQUFDLGtCQUFrQjs7SUE2Qi9CLDRCQUFDO0NBQUEsQUFqREQsSUFpREM7U0F6Q1kscUJBQXFCOzs7SUFDaEMsb0NBQ3FDOztJQUVyQywyQ0FBK0M7O0lBQy9DLDRDQUFnRDs7SUFPaEQsNENBQTZEOztJQUU3RCw2Q0FBZ0Q7O0lBQ2hELDRDQUtFOzs7OztJQUVBLHlDQUEwQjs7Ozs7SUFDMUIsb0NBQTBDOzs7OztJQUMxQyx5Q0FBMkM7Ozs7O0lBQzNDLDBDQUFpRDs7Ozs7SUFDakQsMkNBQTRDOztBQWlCaEQ7SUFDRSwrQkFDVSxVQUF3QjtRQUF4QixlQUFVLEdBQVYsVUFBVSxDQUFjO0lBQzlCLENBQUM7Ozs7O0lBRUwseUNBQVM7Ozs7SUFBVCxVQUFVLElBQVM7UUFDakIsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUM1QixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLDRCQUE0QixDQUFDLENBQUM7U0FDaEU7YUFBTTtZQUNMLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsK0JBQStCLENBQUMsQ0FBQztTQUNuRTtJQUNILENBQUM7SUFDSCw0QkFBQztBQUFELENBQUMsQUFaRCxJQVlDOzs7Ozs7O0lBVkcsMkNBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgSW5wdXQsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYsIEluamVjdCwgSW5qZWN0b3IsIE9wdGlvbmFsLCBDaGFuZ2VEZXRlY3RvclJlZiwgTE9DQUxFX0lEIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFR5cGVDb252ZXJ0ZXIgfSBmcm9tICdAZmFycmlzL2lkZS1wcm9wZXJ0eS1wYW5lbCc7XHJcbmltcG9ydCB7IEFub255bW91c1NldCB9IGZyb20gJy4vYW5vbnltb3VzLXNldC5lbnRpdHknO1xyXG5pbXBvcnQgeyBXRl9QUk9DRVNTX0VESVRPUl9MQU5HX1JFU09VUkNFUyB9IGZyb20gJy4uLy4uL2kxOG4vYXNzZXRzL2xhbmcucmVzb3VyY2UnO1xyXG5pbXBvcnQgeyBXRl9MQU5HX1JFU09VUkNFUywgV2ZMb2NhbGVQaXBlIH0gZnJvbSAnLi4vLi4vaTE4bi9waXBlL3dmLXByb2Nlc3MtZWRpdG9yLWxvY2FsZS5waXBlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWFub255bW91cy1zZXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hbm9ueW1vdXMtc2V0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hbm9ueW1vdXMtc2V0LmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICAgV2ZMb2NhbGVQaXBlLFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEFub255bW91c1NldENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXHJcbiAgY2xzID0gJ2ZhcnJpcy1tYWluLWFyZWEgZmxleC1jb2x1bW4nO1xyXG5cclxuICBAT3V0cHV0KCkgY2xvc2VNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBASW5wdXQoKSBzZXQgdmFsdWUoZGF0YTogQW5vbnltb3VzU2V0KSB7XHJcbiAgICB0aGlzLmFub255bW91c1NldC5pc0Fub255bWl0eSA9IGRhdGEuaXNBbm9ueW1pdHkgfHwgZmFsc2U7XHJcbiAgICB0aGlzLmFub255bW91c1NldC5hbm9ueW1vdXMgPSBkYXRhLmFub255bW91cyB8fCB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuYW5vbnltb3VzU2V0LmFwcHJvdmVyJyk7XHJcbiAgfVxyXG5cclxuICBAVmlld0NoaWxkKCdpY29uU2VsZWN0Rm9vdGVyJykgbW9kYWxGb290ZXI6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gIGFub255bW91c1NldDogQW5vbnltb3VzU2V0ID0gbmV3IEFub255bW91c1NldCgpO1xyXG4gIG1vZGFsQ29uZmlnID0ge1xyXG4gICAgdGl0bGU6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5hbm9ueW1vdXNTZXQuYW5vbnltb3VzT3B0JyksXHJcbiAgICB3aWR0aDogNDUwLFxyXG4gICAgaGVpZ2h0OiAzNjAsXHJcbiAgICBzaG93QnV0dG9uczogdHJ1ZVxyXG4gIH07XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcclxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgIEBJbmplY3QoTE9DQUxFX0lEKSBwcml2YXRlIGxvY2FsZUlkOiBzdHJpbmcsXHJcbiAgICBASW5qZWN0KFdGX0xBTkdfUkVTT1VSQ0VTKSBwcml2YXRlIHJlc291cmNlczogYW55LFxyXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBsb2NhbGVQaXBlOiBXZkxvY2FsZVBpcGUsXHJcbiAgKSB7XHJcbiAgICB0aGlzLmxvY2FsZVBpcGUgPSB0aGlzLmxvY2FsZVBpcGUgfHwgbmV3IFdmTG9jYWxlUGlwZShsb2NhbGVJZCwgcmVzb3VyY2VzKTtcclxuICAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcbiAgY2xpY2tPSygpIHtcclxuICAgIGNvbnN0IG9iamVjdCA9IHsgdmFsdWU6IHRoaXMuYW5vbnltb3VzU2V0LCBwYXJhbWV0ZXJzOiBudWxsIH07XHJcbiAgICB0aGlzLnN1Ym1pdE1vZGFsLmVtaXQob2JqZWN0KTtcclxuICB9XHJcblxyXG4gIGNsaWNrQ2FuY2VsKCkge1xyXG4gICAgdGhpcy5jbG9zZU1vZGFsLmVtaXQoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBBbm9ueW1vdXNTZXRDb252ZXJ0ZXIgaW1wbGVtZW50cyBUeXBlQ29udmVydGVyIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgbG9jYWxlUGlwZTogV2ZMb2NhbGVQaXBlXHJcbiAgKSB7IH1cclxuXHJcbiAgY29udmVydFRvKGRhdGE6IGFueSk6IHN0cmluZyB7XHJcbiAgICBpZiAoZGF0YSAmJiBkYXRhLmlzQW5vbnltaXR5KSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKFwiY29tcG9uZW50LmFub255bW91c1NldC5zZXRcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybShcImNvbXBvbmVudC5hbm9ueW1vdXNTZXQubm90U2V0XCIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=