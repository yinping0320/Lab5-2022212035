/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ActivityComponentUIState } from './activity-component.uistate';
import { ActivityComponentRepository } from './activity-component.repository';
import { MessagerService } from '@farris/ui-messager';
import { WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var ActivityComponentViewModel = /** @class */ (function () {
    function ActivityComponentViewModel(uistate, repository, messager, localePipe) {
        this.uistate = uistate;
        this.repository = repository;
        this.messager = messager;
        this.localePipe = localePipe;
    }
    /**
     * @return {?}
     */
    ActivityComponentViewModel.prototype.deleteRow = /**
     * @return {?}
     */
    function () {
        if (this.uistate.curComponent) {
            if (this.uistate.curComponent.executionTime === 'LOADDATA') {
                this.messager.info(this.localePipe.transform('component.activityList.name'));
            }
            else {
                this.repository.removeComponent(this.uistate.curComponent.id);
            }
        }
        else {
            return;
        }
    };
    /**
     * @param {?} cpt
     * @return {?}
     */
    ActivityComponentViewModel.prototype.componentSelect = /**
     * @param {?} cpt
     * @return {?}
     */
    function (cpt) {
        if (cpt) {
            this.repository.addComponent(cpt);
        }
    };
    /**
     * @param {?} flowFormId
     * @param {?} bizActId
     * @return {?}
     */
    ActivityComponentViewModel.prototype.loadComponents = /**
     * @param {?} flowFormId
     * @param {?} bizActId
     * @return {?}
     */
    function (flowFormId, bizActId) {
        this.repository.loadComponents(flowFormId, bizActId);
    };
    ActivityComponentViewModel.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ActivityComponentViewModel.ctorParameters = function () { return [
        { type: ActivityComponentUIState },
        { type: ActivityComponentRepository },
        { type: MessagerService },
        { type: WfLocalePipe }
    ]; };
    return ActivityComponentViewModel;
}());
export { ActivityComponentViewModel };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.repository;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.messager;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentViewModel.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHktY29tcG9uZW50LnZpZXdtb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvYWN0aXZpdHktY29tcG9uZW50L2FjdGl2aXR5LWNvbXBvbmVudC52aWV3bW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFHOUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUU3RTtJQUlJLG9DQUNZLE9BQWlDLEVBQ2pDLFVBQXVDLEVBQ3ZDLFFBQXlCLEVBQ3pCLFVBQXdCO1FBSHhCLFlBQU8sR0FBUCxPQUFPLENBQTBCO1FBQ2pDLGVBQVUsR0FBVixVQUFVLENBQTZCO1FBQ3ZDLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBQ3pCLGVBQVUsR0FBVixVQUFVLENBQWM7SUFDaEMsQ0FBQzs7OztJQUVMLDhDQUFTOzs7SUFBVDtRQUNJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUU7WUFDM0IsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxhQUFhLEtBQUssVUFBVSxFQUFFO2dCQUN4RCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDLENBQUM7YUFDaEY7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDakU7U0FDSjthQUFNO1lBQ0gsT0FBTztTQUNWO0lBQ0wsQ0FBQzs7Ozs7SUFDRCxvREFBZTs7OztJQUFmLFVBQWdCLEdBQWlCO1FBQzdCLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDckM7SUFDTCxDQUFDOzs7Ozs7SUFFRCxtREFBYzs7Ozs7SUFBZCxVQUFlLFVBQWtCLEVBQUUsUUFBZ0I7UUFDL0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3pELENBQUM7O2dCQTlCSixVQUFVOzs7O2dCQVBGLHdCQUF3QjtnQkFDeEIsMkJBQTJCO2dCQUczQixlQUFlO2dCQUNmLFlBQVk7O0lBaUNyQixpQ0FBQztDQUFBLEFBL0JELElBK0JDO1NBN0JZLDBCQUEwQjs7Ozs7O0lBRy9CLDZDQUF5Qzs7Ozs7SUFDekMsZ0RBQStDOzs7OztJQUMvQyw4Q0FBaUM7Ozs7O0lBQ2pDLGdEQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQWN0aXZpdHlDb21wb25lbnRVSVN0YXRlIH0gZnJvbSAnLi9hY3Rpdml0eS1jb21wb25lbnQudWlzdGF0ZSc7XHJcbmltcG9ydCB7IEFjdGl2aXR5Q29tcG9uZW50UmVwb3NpdG9yeSB9IGZyb20gJy4vYWN0aXZpdHktY29tcG9uZW50LnJlcG9zaXRvcnknO1xyXG5pbXBvcnQgeyBCaXpDb21wb25lbnRFbnRpdHkgfSBmcm9tICcuLi8uLi9kb21haW4vZW50aXRpZXMvYml6LWNvbXBvbmVudC5lbnRpdHknO1xyXG5pbXBvcnQgeyBHc3BDb21wb25lbnQgfSBmcm9tICdAZ3NwLWNtcC9jb21tb24tY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWVzc2FnZXJTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IFdmTG9jYWxlUGlwZSB9IGZyb20gJy4uLy4uL2kxOG4vcGlwZS93Zi1wcm9jZXNzLWVkaXRvci1sb2NhbGUucGlwZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcblxyXG5leHBvcnQgY2xhc3MgQWN0aXZpdHlDb21wb25lbnRWaWV3TW9kZWwge1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIHVpc3RhdGU6IEFjdGl2aXR5Q29tcG9uZW50VUlTdGF0ZSxcclxuICAgICAgICBwcml2YXRlIHJlcG9zaXRvcnk6IEFjdGl2aXR5Q29tcG9uZW50UmVwb3NpdG9yeSxcclxuICAgICAgICBwcml2YXRlIG1lc3NhZ2VyOiBNZXNzYWdlclNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSBsb2NhbGVQaXBlOiBXZkxvY2FsZVBpcGVcclxuICAgICkgeyB9XHJcblxyXG4gICAgZGVsZXRlUm93KCkge1xyXG4gICAgICAgIGlmICh0aGlzLnVpc3RhdGUuY3VyQ29tcG9uZW50KSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnVpc3RhdGUuY3VyQ29tcG9uZW50LmV4ZWN1dGlvblRpbWUgPT09ICdMT0FEREFUQScpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZXIuaW5mbyh0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuYWN0aXZpdHlMaXN0Lm5hbWUnKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlcG9zaXRvcnkucmVtb3ZlQ29tcG9uZW50KHRoaXMudWlzdGF0ZS5jdXJDb21wb25lbnQuaWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbXBvbmVudFNlbGVjdChjcHQ6IEdzcENvbXBvbmVudCkge1xyXG4gICAgICAgIGlmIChjcHQpIHtcclxuICAgICAgICAgICAgdGhpcy5yZXBvc2l0b3J5LmFkZENvbXBvbmVudChjcHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBsb2FkQ29tcG9uZW50cyhmbG93Rm9ybUlkOiBzdHJpbmcsIGJpekFjdElkOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLnJlcG9zaXRvcnkubG9hZENvbXBvbmVudHMoZmxvd0Zvcm1JZCwgYml6QWN0SWQpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==