/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Output, EventEmitter, TemplateRef, Input, ViewChild, ComponentFactoryResolver, Injector, Inject, Optional, ChangeDetectorRef, LOCALE_ID } from '@angular/core';
import { ActivityComponentRepository } from './activity-component.repository';
import { ActivityComponentUIState } from './activity-component.uistate';
import { ActivityComponentViewModel } from './activity-component.viewmodel';
import { BizComponentEntity } from '../../domain/entities/biz-component.entity';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { BsModalService } from '@farris/ui-modal';
import { CommonComponentUiRTService } from '@gsp-cmp/ccmp-ui';
import { DatagridComponent } from '@farris/ui-datagrid';
import { forkJoin, of } from 'rxjs';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { MessagerService } from '@farris/ui-messager';
import { EditComponentParameterComponent } from '../edit-component-parameter/edit-component-parameter.component';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var ActivityComponentComponent = /** @class */ (function () {
    function ActivityComponentComponent(uistate, viewModel, designerState, expr, resolver, injector, modalService, componentService, repository, message, cdr, localeId, resources, localePipe) {
        this.uistate = uistate;
        this.viewModel = viewModel;
        this.designerState = designerState;
        this.expr = expr;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.componentService = componentService;
        this.repository = repository;
        this.message = message;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.exBizTips = false;
        this.modalConfig = {
            title: this.localePipe.transform('component.activityComponent.component'),
            width: 960,
            height: 506,
            showButtons: true
        };
        this.buttonGroupData = [
            {
                id: 'edit',
                text: this.localePipe.transform('component.activityComponent.edit'),
            },
            {
                id: 'deleteRow',
                text: this.localePipe.transform('component.activityComponent.deleteRow'),
            }
        ];
        this.editState = 'new'; // 编辑状态，用于区分是新增还是编辑  new | edit
        // 编辑状态，用于区分是新增还是编辑  new | edit
        this.isPreExternalProcessCmps = false;
        this.columns = [];
        this.paramColumns = [];
        this.paramAfterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        function (rowIndex, rowData, column) {
            return of(true);
        });
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    Object.defineProperty(ActivityComponentComponent.prototype, "value", {
        set: /**
         * @param {?} cpts
         * @return {?}
         */
        function (cpts) {
            var _this = this;
            var e_1, _a;
            if (cpts && cpts.length > 0) {
                /** @type {?} */
                var metaDataIdList = new Array();
                try {
                    for (var cpts_1 = tslib_1.__values(cpts), cpts_1_1 = cpts_1.next(); !cpts_1_1.done; cpts_1_1 = cpts_1.next()) {
                        var cmp = cpts_1_1.value;
                        if (metaDataIdList.indexOf(cmp.metadataId) == -1) {
                            metaDataIdList.push(cmp.metadataId);
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (cpts_1_1 && !cpts_1_1.done && (_a = cpts_1.return)) _a.call(cpts_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                if (metaDataIdList.length > 0) {
                    forkJoin(metaDataIdList.map((/**
                     * @param {?} metaDataId
                     * @return {?}
                     */
                    function (metaDataId) { return _this.designerState.getHelpMetaData(metaDataId, ''); }))).subscribe((/**
                     * @param {?} cmpMetas
                     * @return {?}
                     */
                    function (cmpMetas) {
                        var e_2, _a;
                        var _loop_1 = function (cpt) {
                            /** @type {?} */
                            var bizComponent = new BizComponentEntity(cpt.name, cpt.metadataId, cpt.methodCode);
                            bizComponent.executionTime = cpt.executionTime,
                                bizComponent.id = cpt.id;
                            bizComponent.isForCompensation = cpt.isForCompensation;
                            bizComponent.actualParameters = new Array();
                            bizComponent.scopeType = cpt.scopeType || null;
                            /** @type {?} */
                            var meta = cmpMetas.find((/**
                             * @param {?} m
                             * @return {?}
                             */
                            function (m) { return m.id === cpt.metadataId; }));
                            /** @type {?} */
                            var content = JSON.parse(meta.content);
                            /** @type {?} */
                            var operation = content.operations.find((/**
                             * @param {?} o
                             * @return {?}
                             */
                            function (o) { return o.code === cpt.methodCode; }));
                            if (operation) {
                                bizComponent.actualParameters = cpt.actualParameters.map((/**
                                 * @param {?} a
                                 * @return {?}
                                 */
                                function (a) {
                                    /** @type {?} */
                                    var p = operation.parameters.find((/**
                                     * @param {?} i
                                     * @return {?}
                                     */
                                    function (i) { return i.code === a.code; }));
                                    if (p) {
                                        return {
                                            code: a.code,
                                            name: a.name,
                                            value: a.value,
                                            required: a.code.toLowerCase() === 'wfcontext' ? false : p.required
                                        };
                                    }
                                    else {
                                        console.error(_this.localePipe.transform('component.activityComponent.method') + cpt.methodCode + _this.localePipe.transform('component.activityComponent.inconsistentParameters'));
                                        return {
                                            code: a.code,
                                            name: a.name,
                                            value: a.value,
                                            required: false
                                        };
                                    }
                                }));
                            }
                            else {
                                console.error(_this.localePipe.transform('component.activityComponent.longerExists') + cpt.methodCode + _this.localePipe.transform('component.activityComponent.pleaseCheck'));
                            }
                            _this.uistate.components.push(bizComponent);
                        };
                        try {
                            for (var cpts_2 = tslib_1.__values(cpts), cpts_2_1 = cpts_2.next(); !cpts_2_1.done; cpts_2_1 = cpts_2.next()) {
                                var cpt = cpts_2_1.value;
                                _loop_1(cpt);
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (cpts_2_1 && !cpts_2_1.done && (_a = cpts_2.return)) _a.call(cpts_2);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                    }));
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 2023-5-25 网速慢的时候会导致加载不出来流程构件，因此加个延时
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.restart();
        }), 300);
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.restart = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.designerState.startMode === 'EXTERNAL_PROCESS') {
            this.repository.getBizCmp((/**
             * @param {?} cmps
             * @return {?}
             */
            function (cmps) {
                var e_3, _a;
                if (cmps && cmps.length > 0) {
                    try {
                        // 此处标记有外部流程通用构件
                        for (var cmps_1 = tslib_1.__values(cmps), cmps_1_1 = cmps_1.next(); !cmps_1_1.done; cmps_1_1 = cmps_1.next()) {
                            var c = cmps_1_1.value;
                            if (c.scopeType === 'ExternalProcess') {
                                _this.exBizTips = true;
                                break;
                            }
                        }
                    }
                    catch (e_3_1) { e_3 = { error: e_3_1 }; }
                    finally {
                        try {
                            if (cmps_1_1 && !cmps_1_1.done && (_a = cmps_1.return)) _a.call(cmps_1);
                        }
                        finally { if (e_3) throw e_3.error; }
                    }
                }
            }));
        }
        this.location = this.editorParams.location;
        if (this.location === 'activity') {
            this.uistate.executionCollection = this.uistate.activityCollection;
            this.columns = [
                {
                    field: 'executionTime', width: 100, title: this.localePipe.transform('component.activityComponent.executionTime'),
                    editor: {
                        type: EditorTypes.COMBOLIST,
                        options: { data: this.uistate.executionCollection, groupField: 'text', valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }
                    },
                    formatter: (/**
                     * @param {?} v
                     * @param {?} d
                     * @param {?} i
                     * @return {?}
                     */
                    function (v, d, i) {
                        if (v) {
                            return _this.uistate.executionCollection.find((/**
                             * @param {?} item
                             * @return {?}
                             */
                            function (item) { return item.value === v; })).text;
                        }
                        else {
                            return '';
                        }
                    }),
                    validators: [
                        { type: 'required', messager: '必填' }
                    ]
                },
                {
                    field: 'name', width: 100, title: this.localePipe.transform('component.activityComponent.cmpName')
                },
                { field: 'metadataId', width: 100, title: this.localePipe.transform('component.activityComponent.metadataId') },
                { field: 'methodCode', width: 100, title: this.localePipe.transform('component.activityComponent.methodCode') },
                {
                    field: 'isForCompensation', width: 50, title: this.localePipe.transform('component.activityComponent.isForCompensation'),
                    editor: { type: EditorTypes.SWITCH, options: {} },
                    formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.activityComponent.yes'), falseText: this.localePipe.transform('component.activityComponent.no') } }
                },
                { title: this.localePipe.transform('component.activityComponent.operate'), width: 70, template: this.btnTemplate }
            ];
        }
        else if (this.location === 'autoActivity') {
            this.columns = [
                {
                    field: 'name', width: 100, title: this.localePipe.transform('component.activityComponent.cmpName')
                },
                { field: 'metadataId', width: 100, title: this.localePipe.transform('component.activityComponent.metadataId') },
                { field: 'methodCode', width: 100, title: this.localePipe.transform('component.activityComponent.methodCode') },
                {
                    field: 'isForCompensation', width: 50, title: this.localePipe.transform('component.activityComponent.isForCompensation'),
                    editor: { type: EditorTypes.SWITCH, options: {} },
                    formatter: { type: 'boolean', options: { trueText: this.localePipe.transform('component.activityComponent.yes'), falseText: this.localePipe.transform('component.activityComponent.no') } }
                },
                { title: this.localePipe.transform('component.activityComponent.operate'), width: 70, template: this.btnTemplate }
            ];
        }
        else {
            this.columns = [
                {
                    field: 'executionTime', width: 100, title: this.localePipe.transform('component.activityComponent.executionTime'),
                    editor: {
                        type: EditorTypes.COMBOLIST,
                        options: { data: this.uistate.executionCollection, groupField: 'text', valueField: 'value', textField: 'text', idField: 'value', panelHeight: 'auto' }
                    },
                    formatter: (/**
                     * @param {?} v
                     * @param {?} d
                     * @param {?} i
                     * @return {?}
                     */
                    function (v, d, i) {
                        if (v) {
                            return _this.uistate.executionCollection.find((/**
                             * @param {?} item
                             * @return {?}
                             */
                            function (item) { return item.value === v; })).text;
                        }
                        else {
                            return '';
                        }
                    }),
                    validators: [
                        { type: 'required', messager: '必填' }
                    ]
                },
                {
                    field: 'name', width: 100, title: this.localePipe.transform('component.activityComponent.cmpName')
                },
                { field: 'metadataId', width: 100, title: this.localePipe.transform('component.activityComponent.metadataId') },
                { field: 'methodCode', width: 100, title: this.localePipe.transform('component.activityComponent.methodCode') },
                { title: this.localePipe.transform('component.activityComponent.operate'), width: 70, template: this.btnTemplate }
            ];
        }
        if (this.uistate.components && this.uistate.components.length > 0) {
            this.cmplist.selectRow(this.uistate.components[0].id, true);
        }
        this.paramColumns = [
            { field: 'code', width: 50, title: this.localePipe.transform('component.activityComponent.code') },
            { field: 'name', width: 50, title: this.localePipe.transform('component.activityComponent.name') },
            {
                field: 'value', width: 100, title: this.localePipe.transform('component.activityComponent.value'),
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            _this.showExprHelp(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            console.log('clear', e);
                        })
                    }
                }
            }
        ];
        // 选中当前行
        this.repository.subject.subscribe((/**
         * @param {?} cmp
         * @return {?}
         */
        function (cmp) {
            _this.cmplist.loadData(_this.uistate.components);
            if (cmp) {
                _this.cmplist.selectRow(cmp.id, true);
            }
            else {
                _this.uistate.curComponent = null;
            }
        }));
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.uistate.components && this.uistate.components.length > 0) {
            this.cmplist.selectRow(this.uistate.components[0].id, true);
        }
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.edit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.editState = 'edit';
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(EditComponentParameterComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        /** @type {?} */
        var modalConfig = {
            title: this.localePipe.transform('component.activityComponent.editComponent'),
            width: 700,
            height: 400,
            buttons: compRef.instance.editFooter,
            showButtons: true,
            initialState: {
                curComponent: JSON.parse(JSON.stringify(this.uistate.curComponent))
            }
        };
        /** @type {?} */
        var editDialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.canEdit = false;
        compRef.instance.editState = this.editState;
        compRef.instance.location = this.location;
        compRef.instance.executionTimingList = this.uistate.executionCollection;
        // compRef.instance.curComponent = JSON.parse(JSON.stringify(this.uistate.curComponent));
        compRef.instance.submitEmitter.subscribe((/**
         * @param {?} cmp
         * @return {?}
         */
        function (cmp) {
            /** @type {?} */
            var i = _this.uistate.components.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.id === cmp.id; }));
            _this.uistate.components[i] = cmp;
            _this.cmplist.loadData(_this.uistate.components);
            editDialog.close();
        }));
        compRef.instance.closeEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            editDialog.close();
        }));
        setTimeout((/**
         * @return {?}
         */
        function () {
            compRef.instance.cd.detectChanges();
        }));
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.deleteRow = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.message.confirm(this.localePipe.transform('component.activityComponent.confirmDelete')).subscribe((/**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (v) {
                _this.closeCellEdit();
                _this.viewModel.deleteRow();
                _this.cmplist.loadData(_this.uistate.components);
            }
        }));
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.moveUp = /**
     * @return {?}
     */
    function () {
        if (!this.uistate.curComponent) {
            this.message.info(this.localePipe.transform('component.activityComponent.curComponent'));
            return;
        }
        /** @type {?} */
        var curCmpId = this.uistate.curComponent.id;
        /** @type {?} */
        var i = this.uistate.components.findIndex((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.id === curCmpId; }));
        if (i === 0) {
            return;
        }
        this.repository.swapArray(this.uistate.components, i, i - 1);
        this.cmplist.loadData(this.uistate.components);
        this.cmplist.selectRow(curCmpId, true);
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.moveDown = /**
     * @return {?}
     */
    function () {
        if (!this.uistate.curComponent) {
            this.message.info(this.localePipe.transform('component.activityComponent.curComponent'));
            return;
        }
        /** @type {?} */
        var curCmpId = this.uistate.curComponent.id;
        /** @type {?} */
        var i = this.uistate.components.findIndex((/**
         * @param {?} c
         * @return {?}
         */
        function (c) { return c.id === curCmpId; }));
        if (i === this.uistate.components.length - 1) {
            return;
        }
        this.repository.swapArray(this.uistate.components, i, i + 1);
        this.cmplist.loadData(this.uistate.components);
        this.cmplist.selectRow(curCmpId, true);
    };
    /**
     * @param {?} buttonId
     * @param {?} ctx
     * @return {?}
     */
    ActivityComponentComponent.prototype.clickAction = /**
     * @param {?} buttonId
     * @param {?} ctx
     * @return {?}
     */
    function (buttonId, ctx) {
        this.uistate.curComponent = ctx.rowData;
        switch (buttonId) {
            case 'edit':
                this.edit();
                break;
            case 'deleteRow':
                this.deleteRow();
                break;
        }
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.closeCellEdit();
        if (this.validator()) {
            /** @type {?} */
            var object = { value: this.uistate.components, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @return {?}
     */
    ActivityComponentComponent.prototype.componentSelect = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.editState = 'new';
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(EditComponentParameterComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        /** @type {?} */
        var modalConfig = {
            title: this.localePipe.transform('component.activityComponent.newComponent'),
            width: 700,
            height: 400,
            buttons: compRef.instance.editFooter,
            showButtons: true
        };
        /** @type {?} */
        var editDialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.canEdit = true;
        compRef.instance.editState = this.editState;
        compRef.instance.location = this.location;
        compRef.instance.executionTimingList = this.uistate.executionCollection;
        compRef.instance.curComponent = new BizComponentEntity();
        compRef.instance.submitEmitter.subscribe((/**
         * @param {?} cmp
         * @return {?}
         */
        function (cmp) {
            _this.uistate.components.push(cmp);
            _this.cmplist.loadData(_this.uistate.components);
            editDialog.close();
        }));
        compRef.instance.closeEmitter.subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            editDialog.close();
        }));
        setTimeout((/**
         * @return {?}
         */
        function () {
            compRef.instance.cd.detectChanges();
        }));
    };
    /**
     * 取数构件帮助new
     */
    /**
     * 取数构件帮助new
     * @param {?} metadataId
     * @param {?} sessionId
     * @return {?}
     */
    ActivityComponentComponent.prototype.openComponentSelectorNew = /**
     * 取数构件帮助new
     * @param {?} metadataId
     * @param {?} sessionId
     * @return {?}
     */
    function (metadataId, sessionId) {
        var _this = this;
        this.componentService.openSelector(metadataId, sessionId).subscribe((/**
         * @param {?} selectorResult
         * @return {?}
         */
        function (selectorResult) {
            selectorResult.confirmEvent.subscribe((/**
             * @param {?} result
             * @return {?}
             */
            function (result) {
                _this.viewModel.componentSelect(result);
            }));
        }));
    };
    /**
     * @param {?} e
     * @return {?}
     */
    ActivityComponentComponent.prototype.showExprHelp = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        var e_4, _a, e_5, _b, e_6, _c, e_7, _d;
        /** @type {?} */
        var context = new Array();
        // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {
        //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));
        // }
        // this.expr.clearContext();
        if (this.designerState.schemas.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.designerState.schemas), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var schema = _f.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_4) throw e_4.error; }
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        context = this.designerState.addContext(context);
        if (this.location === 'activity') {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _g = tslib_1.__values(this.designerState.activityComponentContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    _loop_2(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.location === 'activity') {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.designerState.subActivityContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_3(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_d = context_1.return)) _d.call(context_1);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        this.expr.setEditPattern(ExprEditMode.Advanced); // 默认打开高级表达式编辑器
        this.expr.addExpressionText(e.instance.value);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            e.formControl.setValue(expressioninfo);
            e.instance.cd.detectChanges();
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    ActivityComponentComponent.prototype.selectionChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.uistate.curComponent = data.data;
    };
    /**
     * @private
     * @return {?}
     */
    ActivityComponentComponent.prototype.closeCellEdit = /**
     * @private
     * @return {?}
     */
    function () {
        this.cmplist.endCellEdit();
        if (this.paramlist) {
            this.paramlist.endCellEdit();
        }
    };
    /**
     * @private
     * @return {?}
     */
    ActivityComponentComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        var e_8, _a;
        // 校验是否存在重复的构件
        /** @type {?} */
        var cache = [];
        var _loop_4 = function (cmp) {
            var e_9, _a;
            if (cache.find((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return c.methodCode === cmp.methodCode && JSON.stringify(c.actualParameters) === JSON.stringify(cmp.actualParameters) &&
                c.executionTime === cmp.executionTime; }))) {
                console.log(cmp.actualParameters);
                this_1.message.warning(this_1.localePipe.transform('component.activityComponent.sameCmp') + ("" + cmp.name) + this_1.localePipe.transform('component.activityComponent.cmpMethod') + cmp.methodCode + this_1.localePipe.transform('component.activityComponent.pleaseCheck'));
                return { value: false };
            }
            cache.push(cmp);
            if (!cmp.executionTime && this_1.location !== 'autoActivity') {
                this_1.message.warning(this_1.localePipe.transform('component.activityComponent.executionTimeNotNull'));
                return { value: false };
            }
            try {
                for (var _b = tslib_1.__values(cmp.actualParameters), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var param = _c.value;
                    if (param.required && !param.value) {
                        this_1.message.warning(this_1.localePipe.transform('component.activityComponent.component') + ("\u3010" + cmp.name + "\u3011") + this_1.localePipe.transform('component.activityComponent.param') + ("\u3010" + param.code + "\u3011") + this_1.localePipe.transform('component.activityComponent.required'));
                        return { value: false };
                    }
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
        };
        var this_1 = this;
        try {
            for (var _b = tslib_1.__values(this.uistate.components), _c = _b.next(); !_c.done; _c = _b.next()) {
                var cmp = _c.value;
                var state_1 = _loop_4(cmp);
                if (typeof state_1 === "object")
                    return state_1.value;
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
        return true;
    };
    ActivityComponentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-activity-component',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n              <ng-container *ngIf=\"exBizTips\">\r\n                <div  class=\"f-component-wizard-page-detail-header\">\r\n                  <div class=\"page-friendly-reminder\" style=\"background:#E6F7FF;padding: 0.5rem!important\">\r\n                    <div class=\"reminder-message\">\r\n                      <span class=\"reminder-title\">\r\n                        <span class=\"f-icon f-icon-info\">\r\n                        </span>\r\n                        <span class=\"reminder-name\" style=\"padding-left: 0.25rem\">{{'component.activityComponent.tips' | wfLocale}}\r\n                        </span>\r\n                      </span>\r\n                      <span class=\"message\">{{'component.activityComponent.prefabricated' | wfLocale}}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n        <button class=\"btn btn-primary mr-2\" (click)=\"componentSelect()\">{{'component.activityComponent.add' | wfLocale}}</button>\r\n        <button class=\"btn btn-secondary mr-2\" (click)=\"moveUp()\">{{'component.activityComponent.moveUp' | wfLocale}}</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"moveDown()\">{{'component.activityComponent.moveDown' | wfLocale}}</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\" style=\"border-radius:16px;border: 1.5px solid #F1F3F7;margin-left: 6px;margin-right: 6px;\">\r\n      <div [style.height.%]=\"uistate.curComponent?100:100\">\r\n        <farris-datagrid #cmplist [data]=\"uistate.components\" [idField]=\"'id'\" [columns]=\"columns\" [fit]=\"true\"\r\n          [showGroupColumn]=\"true\" [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\"\r\n          [showCheckbox]=\"false\" [groupRows]=\"true\" [multiSelect]=\"false\" (selectChanged)=\"selectionChange($event)\"\r\n          [closeOtherGridEditor]=\"true\" [mergeCell]=\"true\" [mergeFields]=\"['executionTime']\">\r\n        </farris-datagrid>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #buttonsTemplate let-ctx>\r\n  <farris-button-group [count]=\"2\" [data]=\"buttonGroupData\" (change)=\"clickAction($event, ctx)\">\r\n  </farris-button-group>\r\n</ng-template>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">{{'component.activityComponent.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">{{'component.activityComponent.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [ActivityComponentRepository, ActivityComponentUIState, ActivityComponentViewModel,
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ActivityComponentComponent.ctorParameters = function () { return [
        { type: ActivityComponentUIState },
        { type: ActivityComponentViewModel },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: CommonComponentUiRTService },
        { type: ActivityComponentRepository },
        { type: MessagerService },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    ActivityComponentComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        editorParams: [{ type: Input }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        btnTemplate: [{ type: ViewChild, args: ['buttonsTemplate',] }],
        cmplist: [{ type: ViewChild, args: ['cmplist',] }],
        paramlist: [{ type: ViewChild, args: ['paramlist',] }],
        value: [{ type: Input }]
    };
    return ActivityComponentComponent;
}());
export { ActivityComponentComponent };
if (false) {
    /** @type {?} */
    ActivityComponentComponent.prototype.cls;
    /** @type {?} */
    ActivityComponentComponent.prototype.closeModal;
    /** @type {?} */
    ActivityComponentComponent.prototype.submitModal;
    /** @type {?} */
    ActivityComponentComponent.prototype.editorParams;
    /** @type {?} */
    ActivityComponentComponent.prototype.modalFooter;
    /** @type {?} */
    ActivityComponentComponent.prototype.btnTemplate;
    /** @type {?} */
    ActivityComponentComponent.prototype.cmplist;
    /** @type {?} */
    ActivityComponentComponent.prototype.paramlist;
    /** @type {?} */
    ActivityComponentComponent.prototype.exBizTips;
    /** @type {?} */
    ActivityComponentComponent.prototype.modalConfig;
    /** @type {?} */
    ActivityComponentComponent.prototype.buttonGroupData;
    /** @type {?} */
    ActivityComponentComponent.prototype.editState;
    /** @type {?} */
    ActivityComponentComponent.prototype.isPreExternalProcessCmps;
    /** @type {?} */
    ActivityComponentComponent.prototype.location;
    /** @type {?} */
    ActivityComponentComponent.prototype.columns;
    /** @type {?} */
    ActivityComponentComponent.prototype.paramColumns;
    /** @type {?} */
    ActivityComponentComponent.prototype.paramAfterEdit;
    /** @type {?} */
    ActivityComponentComponent.prototype.uistate;
    /** @type {?} */
    ActivityComponentComponent.prototype.viewModel;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.componentService;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.repository;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    ActivityComponentComponent.prototype.localePipe;
}
var ActivityComponentConverter = /** @class */ (function () {
    function ActivityComponentConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    ActivityComponentConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && data.length > 0) {
            return this.localePipe.transform("component.activityComponent.set");
        }
        else {
            return this.localePipe.transform("component.activityComponent.notSet");
        }
    };
    return ActivityComponentConverter;
}());
export { ActivityComponentConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ActivityComponentConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,