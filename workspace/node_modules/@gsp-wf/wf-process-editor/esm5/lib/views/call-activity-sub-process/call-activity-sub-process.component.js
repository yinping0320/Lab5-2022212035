/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, Input, Output, EventEmitter, ViewChild, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { CallActivitySubProcess } from './call-activity-sub-process.entity';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDeUtil } from '../../domain/process-de-util';
import { HttpService } from '@ecp-caf/caf-common';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../i18n/pipe/wf-process-editor-locale.pipe';
var CallActivitySubProcessComponent = /** @class */ (function () {
    function CallActivitySubProcessComponent(message, util, http, designerState, expr, cdr, localeId, resources, localePipe) {
        this.message = message;
        this.util = util;
        this.http = http;
        this.designerState = designerState;
        this.expr = expr;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.cls = 'farris-main-area flex-column';
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.modalConfig = {
            title: this.localePipe.transform("component.subProcess.subProcessOpt"),
            width: 500,
            height: 380,
            showButtons: true
        };
        this.callActivitySubProcess = new CallActivitySubProcess();
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    Object.defineProperty(CallActivitySubProcessComponent.prototype, "value", {
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (v) {
                this.callActivitySubProcess = v;
                this.getProcessDefKey(this.callActivitySubProcess.calledElement);
                this.getFlowForm(this.callActivitySubProcess.calledBizDefKey);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (this.validator()) {
            /** @type {?} */
            var object = { value: this.callActivitySubProcess, parameters: null };
            this.submitModal.emit(object);
        }
    };
    /**
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.processConfirm = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        if (args) {
            this.callActivitySubProcess.calledElement = args.procDefKey;
            this.callActivitySubProcess.calledElementName = args.name;
        }
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.clearProcessDef = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.callActivitySubProcess.calledElement = '';
        this.callActivitySubProcess.calledElementName = '';
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.flowFormConfirm = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        if (args) {
            this.callActivitySubProcess.calledBizDefKey = args.id;
            this.callActivitySubProcess.calledBizDefName = args.name;
        }
    };
    /**
     * @param {?} args
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.clearFlowForm = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
        this.callActivitySubProcess.calledBizDefKey = '';
        this.callActivitySubProcess.calledBizDefName = '';
    };
    /**
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.setBizDataId = /**
     * @return {?}
     */
    function () {
        this.showExprHelp();
    };
    /**
     * @private
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.showExprHelp = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a, e_2, _b, e_3, _c;
        /** @type {?} */
        var context = new Array();
        // if(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage')) {
        //   context.push(this.expr.exprEntity.contextEntities.find(x => x.key === 'CurrentLanguage'));
        // }
        // this.expr.clearContext();
        if (this.designerState.schemas.length > 0) {
            try {
                for (var _d = tslib_1.__values(this.designerState.schemas), _e = _d.next(); !_e.done; _e = _d.next()) {
                    var schema = _e.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerState.schemas[0].entityTypes && this.designerState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        context = this.designerState.addContext(context);
        if (this.designerState.subActivityContext.length > 0) {
            try {
                for (var _f = tslib_1.__values(this.designerState.subActivityContext), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var variable = _g.value;
                    context.push(variable);
                    // this.expr.addContext(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_c = context_1.return)) _c.call(context_1);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        this.expr.addExpressionText(this.callActivitySubProcess.bizDataId);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            _this.callActivitySubProcess.bizDataId = expressioninfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @param {?} bool
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.valueChange = /**
     * @param {?} bool
     * @return {?}
     */
    function (bool) {
        if (bool) {
            this.callActivitySubProcess.bizDataId = null;
        }
    };
    /**
     * @private
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.callActivitySubProcess.inheritBizDataId && !this.callActivitySubProcess.bizDataId) {
            this.message.warning(this.localePipe.transform("component.subProcess.inheritBizDataId"));
            return false;
        }
        return true;
    };
    /**
     * @private
     * @param {?} key
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.getProcessDefKey = /**
     * @private
     * @param {?} key
     * @return {?}
     */
    function (key) {
        var _this = this;
        /** @type {?} */
        var url = this.util.getProcessDefinitionWebApi();
        if (key) {
            url += "/procDefKey/" + key;
            this.http.get(url).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                _this.callActivitySubProcess.calledElementName = re.name;
            }));
        }
    };
    /**
     * @private
     * @param {?} id
     * @return {?}
     */
    CallActivitySubProcessComponent.prototype.getFlowForm = /**
     * @private
     * @param {?} id
     * @return {?}
     */
    function (id) {
        var _this = this;
        /** @type {?} */
        var url = this.util.getFlowFormWebApi();
        if (id) {
            url += "/" + id;
            this.http.get(url).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                _this.callActivitySubProcess.calledBizDefName = re.name;
            }));
        }
    };
    CallActivitySubProcessComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-call-activity-sub-process',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">{{'component.subProcess.setOption' | wfLocale}}</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <form class=\"h-100\">\r\n          <div class=\"farris-form form-inline farris-form-inline\">\r\n            <div class=\"farris-group-wrap mt-1\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.subProcess.flowForm' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <wf-bizprocess-lookup title=\"{{'component.subProcess.flowForm' | wfLocale}}\" [sourceType]=\"'flowform'\" [displayTxt]=\"callActivitySubProcess.calledBizDefName\"\r\n                    (afterConfirm)=\"flowFormConfirm($event)\" (clear)=\"clearFlowForm($event)\">\r\n                  </wf-bizprocess-lookup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"farris-group-wrap my-4\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.subProcess.processDef' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <wf-bizprocess-lookup title=\"{{'component.subProcess.processDef' | wfLocale}}\"  [displayTxt]=\"callActivitySubProcess.calledElementName\"\r\n                    (afterConfirm)=\"processConfirm($event)\" (clear)=\"clearProcessDef($event)\">\r\n                  </wf-bizprocess-lookup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"farris-group-wrap my-4\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">\u7EE7\u627F\u53D8\u91CF</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <farris-switch [(ngModel)]=\"callActivitySubProcess.inheritVariables\" name=\"inheritVariables\">\r\n                  </farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"farris-group-wrap my-4\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"ml-4 pl-3\">\r\n                  <span class=\"farris-label-text\">{{'component.subProcess.SameParentProcess' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-3\">\r\n                  <farris-switch  [(ngModel)]=\"callActivitySubProcess.inheritBizDataId\" name=\"inheritBizDataId\"\r\n                    (valueChange)=\"valueChange($event)\">\r\n                  </farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"!callActivitySubProcess.inheritBizDataId\" class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"ml-4 pl-3\">\r\n                  <span class=\"farris-label-text\">{{'component.subProcess.setBizDataId' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-3\">\r\n                  <input-group class=\"form-control\" style=\"width: 100%;padding:0;border:0;\" [enableClear]=\"false\"\r\n                    [ngModel]=\"callActivitySubProcess.bizDataId\" name=\"bizDataId\"\r\n                    [editable]=\"false\" (clickHandle)=\"setBizDataId()\" [groupText]=\"groupIcon\"></input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">{{'component.subProcess.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.subProcess.clickOk' | wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    CallActivitySubProcessComponent.ctorParameters = function () { return [
        { type: MessagerService },
        { type: ProcessDeUtil },
        { type: HttpService },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    CallActivitySubProcessComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        value: [{ type: Input }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }]
    };
    return CallActivitySubProcessComponent;
}());
export { CallActivitySubProcessComponent };
if (false) {
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.cls;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.closeModal;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.submitModal;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.modalFooter;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.modalConfig;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.callActivitySubProcess;
    /** @type {?} */
    CallActivitySubProcessComponent.prototype.groupIcon;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.util;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.designerState;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessComponent.prototype.localePipe;
}
var CallActivitySubProcessConverter = /** @class */ (function () {
    function CallActivitySubProcessConverter(localePipe) {
        this.localePipe = localePipe;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    CallActivitySubProcessConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data && (data.calledBizDefKey || data.calledElement)) {
            return this.localePipe.transform("component.subProcess.set");
        }
        return this.localePipe.transform("component.subProcess.notSet");
    };
    return CallActivitySubProcessConverter;
}());
export { CallActivitySubProcessConverter };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CallActivitySubProcessConverter.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,