/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Injector, ViewChild, TemplateRef, Input, Output, EventEmitter, Optional, ChangeDetectorRef, LOCALE_ID, Inject } from '@angular/core';
import { SendMessage } from '../time-limit-control.entity';
import { ExpressionService, InjectedType } from '@gsp-svc/expression';
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { SmsMessageTemplate } from '../../sms-message-template/sms-message-template';
import { SmsMessageTemplateComponent } from '../../sms-message-template/sms-message-template.component';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
var SendMessageOperationComponent = /** @class */ (function () {
    function SendMessageOperationComponent(injector, message, uistate, cdr, localeId, resources, localePipe, expr) {
        this.injector = injector;
        this.message = message;
        this.uistate = uistate;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.expr = expr;
        this.groupIcon2 = '<i class="f-icon f-icon-lookup"></i>';
        // operation: ExpireOperation = new ExpireOperation();
        this.operation = new SendMessage('activity', this.localePipe);
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
        this.typeGroup = this.uistate.messageChannels.map((/**
         * @param {?} m
         * @return {?}
         */
        function (m) { return ({ value: m.code, name: m.name }); }));
        this.receiverVariables = [
            { value: 'procInstCreator', name: this.localePipe.transform("component.sendMessageOperation.procInstCreator") }
        ];
        this.activityReceiverVariables = [
            { value: 'workItemParticipant', name: this.localePipe.transform("component.sendMessageOperation.workItemParticipant") },
            { value: 'procInstCreator', name: this.localePipe.transform("component.sendMessageOperation.procInstCreator") },
            { value: 'preActExecutors', name: this.localePipe.transform("component.sendMessageOperation.preActExecutors") }
        ];
        this.placeholder = '';
        this.placeholder2 = '';
        this.hasSmsTemplate = false;
        this.parser = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            // console.log(val);
            return Number(val);
        });
        this.timeUnitCollection = [
            { value: 'day', text: this.localePipe.transform("component.sendMessageOperation.day") },
            { value: 'hour', text: this.localePipe.transform("component.sendMessageOperation.hour") },
            { value: 'minute', text: this.localePipe.transform("component.sendMessageOperation.minute") }
        ];
        this.location = 'activity';
        this.activityReceiverVar = '';
        this.bindingData = {};
    }
    Object.defineProperty(SendMessageOperationComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.operation;
        },
        set: /**
         * @param {?} info
         * @return {?}
         */
        function (info) {
            var e_1, _a, e_2, _b;
            this.operation = JSON.parse(JSON.stringify(info));
            if (this.operation.sendType === undefined) {
                /** @type {?} */
                var sendMessage = new SendMessage(this.location, this.localePipe);
                this.operation.cycleEnable = sendMessage.cycleEnable;
                this.operation.cycleTimeUnit = sendMessage.cycleTimeUnit;
                this.operation.receiver = sendMessage.receiver;
                this.operation.subject = sendMessage.subject;
                this.operation.message = sendMessage.message;
            }
            if (this.operation.receiver && this.operation.receiver.length > 0) {
                /** @type {?} */
                var array = this.operation.receiver.split(',');
                if (array.indexOf('workItemParticipant') > -1) {
                    this.receiverVari = 'workItemParticipant';
                    this.activityReceiverVar += 'workItemParticipant,';
                }
                if (array.indexOf('procInstCreator') > -1) {
                    this.receiverVari = 'procInstCreator';
                    this.activityReceiverVar += 'procInstCreator,';
                }
                if (array.indexOf('preActExecutors') > -1) {
                    this.activityReceiverVar += 'preActExecutors,';
                }
                if (this.activityReceiverVar.length > 0) {
                    this.activityReceiverVar = this.activityReceiverVar.substring(0, this.activityReceiverVar.length - 1);
                }
                if (array.length > 0) {
                    array = array.filter((/**
                     * @param {?} a
                     * @return {?}
                     */
                    function (a) { return a !== 'procInstCreator'; }));
                    this.bindingData.id = '';
                    try {
                        for (var array_1 = tslib_1.__values(array), array_1_1 = array_1.next(); !array_1_1.done; array_1_1 = array_1.next()) {
                            var r = array_1_1.value;
                            this.bindingData.id += r + ',';
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (array_1_1 && !array_1_1.done && (_a = array_1.return)) _a.call(array_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    if (this.bindingData.id) {
                        this.bindingData.id = this.bindingData.id.substring(0, this.bindingData.id.length - 1);
                    }
                }
            }
            if (this.operation.receiverText && this.operation.receiverText.length > 0) {
                /** @type {?} */
                var array = this.operation.receiverText.split(',');
                if (array.length > 0) {
                    array = array.filter((/**
                     * @param {?} a
                     * @return {?}
                     */
                    function (a) { return a !== '流程发起人'; }));
                    this.bindingData.name = '';
                    try {
                        for (var array_2 = tslib_1.__values(array), array_2_1 = array_2.next(); !array_2_1.done; array_2_1 = array_2.next()) {
                            var r = array_2_1.value;
                            this.bindingData.name += r + ',';
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (array_2_1 && !array_2_1.done && (_b = array_2.return)) _b.call(array_2);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    if (this.bindingData.name) {
                        this.bindingData.name = this.bindingData.name.substring(0, this.bindingData.name.length - 1);
                    }
                }
            }
            if (this.hasSmsMessage(this.operation.sendType)) {
                this.hasSmsTemplate = true;
                if (!this.operation.smsMessageTemplate) {
                    this.operation.smsMessageTemplate = new SmsMessageTemplate();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SendMessageOperationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} data
     * @return {?}
     */
    SendMessageOperationComponent.prototype.contentExpr = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showContentHelp(data);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    SendMessageOperationComponent.prototype.titleExpr = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showTitleHelp(data);
    };
    /**
     * @param {?} data
     * @return {?}
     */
    SendMessageOperationComponent.prototype.showContentHelp = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        /** @type {?} */
        var context = this.showExpr();
        if (this.operation.message && this.operation.message.length > 0) {
            if (!this.operation.message.startsWith("{\"" + "expr\"" + ":\"")) {
                this.expr.addExpressionText("\'" + this.operation.message + "\'");
            }
            else {
                this.expr.addExpressionText(this.operation.message);
            }
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        function (expressionInfo) {
            _this.operation.message = expressionInfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    SendMessageOperationComponent.prototype.showTitleHelp = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        /** @type {?} */
        var context = this.showExpr();
        if (this.operation.subject && this.operation.subject.length > 0) {
            if (!this.operation.subject.startsWith("{\"" + "expr\"" + ":\"")) {
                this.expr.addExpressionText("\'" + this.operation.subject + "\'");
            }
            else {
                this.expr.addExpressionText(this.operation.subject);
            }
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressionInfo
         * @return {?}
         */
        function (expressionInfo) {
            _this.operation.subject = expressionInfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @return {?}
     */
    SendMessageOperationComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (this.SmsTemplate) {
            this.SmsTemplate.endGridEdit();
        }
        this.operation.cycleTime += '';
        if (this.location === 'process') {
            this.setReceiver();
        }
        if (this.location === 'activity') {
            this.setActivityReceiver();
        }
        if (this.hasSmsTemplate) {
            this.operation.smsMessageTemplate = this.SmsTemplate.smsMessageTemplate;
            if (this.operation.smsMessageTemplate.smsMessageVariables && this.operation.smsMessageTemplate.smsMessageVariables.length > 0) {
                this.operation.smsMessageTemplate.smsMessageVariables = this.operation.smsMessageTemplate.smsMessageVariables.filter((/**
                 * @param {?} variable
                 * @return {?}
                 */
                function (variable) { return variable.code; }));
            }
        }
        else {
            this.operation.smsMessageTemplate = null;
        }
        if (this.validator()) {
            this.submitEmitter.emit(this.operation);
        }
    };
    /**
     * @return {?}
     */
    SendMessageOperationComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeEmitter.emit();
    };
    /**
     * @return {?}
     */
    SendMessageOperationComponent.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.bindingData = {};
    };
    /**
     * @param {?} sendType
     * @return {?}
     */
    SendMessageOperationComponent.prototype.sendTypeChange = /**
     * @param {?} sendType
     * @return {?}
     */
    function (sendType) {
        if (this.hasSmsMessage(sendType)) {
            this.hasSmsTemplate = true;
            if (!this.operation.smsMessageTemplate) {
                this.operation.smsMessageTemplate = new SmsMessageTemplate();
            }
        }
        else {
            this.hasSmsTemplate = false;
            this.operation.smsMessageTemplate = null;
        }
    };
    /**
     * @private
     * @return {?}
     */
    SendMessageOperationComponent.prototype.setReceiver = /**
     * @private
     * @return {?}
     */
    function () {
        var e_3, _a;
        /** @type {?} */
        var receiver = '';
        /** @type {?} */
        var receiverText = '';
        if (this.receiverVari) {
            receiver += this.receiverVari + ',';
            /** @type {?} */
            var array = this.receiverVari.split(',');
            if (array.length > 0) {
                var _loop_1 = function (a) {
                    /** @type {?} */
                    var t = this_1.receiverVariables.find((/**
                     * @param {?} v
                     * @return {?}
                     */
                    function (v) { return v.value === a; })).name;
                    receiverText += t + ',';
                };
                var this_1 = this;
                try {
                    for (var array_3 = tslib_1.__values(array), array_3_1 = array_3.next(); !array_3_1.done; array_3_1 = array_3.next()) {
                        var a = array_3_1.value;
                        _loop_1(a);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (array_3_1 && !array_3_1.done && (_a = array_3.return)) _a.call(array_3);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
        }
        if (this.bindingData.id) {
            receiver += this.bindingData.id + ',';
            receiverText += this.bindingData.name + ',';
        }
        if (receiver) {
            receiver = receiver.substring(0, receiver.length - 1);
        }
        if (receiverText) {
            receiverText = receiverText.substring(0, receiverText.length - 1);
        }
        this.operation.receiver = receiver;
        this.operation.receiverText = receiverText;
    };
    /**
     * @return {?}
     */
    SendMessageOperationComponent.prototype.setActivityReceiver = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var receiver = '';
        if (this.activityReceiverVar) {
            receiver += this.activityReceiverVar + ',';
        }
        if (receiver) {
            receiver = receiver.substring(0, receiver.length - 1);
        }
        this.operation.receiver = receiver;
    };
    /**
     * @private
     * @return {?}
     */
    SendMessageOperationComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        // 2023-5-22 如果没有启用循环预警则不进行校验
        if (this.operation.cycleEnable) {
            if (this.operation.cycleTime === 'undefined') {
                this.message.info(this.localePipe.transform("component.sendMessageOperation.cycleTimeNotEmpty"));
                return false;
            }
        }
        if (!this.operation.sendType) {
            this.message.info(this.localePipe.transform("component.sendMessageOperation.sendMethodNotEmpty"));
            return false;
        }
        if (!this.operation.subject) {
            this.message.info(this.localePipe.transform("component.sendMessageOperation.subjectNotEmpty"));
            return false;
        }
        if (!this.operation.message) {
            this.message.info(this.localePipe.transform("component.sendMessageOperation.contentNotEmpty"));
            return false;
        }
        if (!this.operation.receiver) {
            this.message.info(this.localePipe.transform("component.sendMessageOperation.recipientNotEmpty"));
            return false;
        }
        //去除消息模板编号校验
        // if (this.hasSmsTemplate) {
        //   if (!this.operation.smsMessageTemplate) {
        //     this.message.info(this.localePipe.transform("component.sendMessageOperation.messageTemplate"));
        //     return false;
        //   }
        //   if (!this.operation.smsMessageTemplate.code) {
        //     this.message.info(this.localePipe.transform("component.sendMessageOperation.smsTemplateNumberNotEmpty"));
        //     return false;
        //   }
        // }
        return true;
    };
    /**
     * @private
     * @param {?} sendType
     * @return {?}
     */
    SendMessageOperationComponent.prototype.hasSmsMessage = /**
     * @private
     * @param {?} sendType
     * @return {?}
     */
    function (sendType) {
        var _this = this;
        if (sendType) {
            /** @type {?} */
            var sendTypeList = sendType.split(',');
            /** @type {?} */
            var messageChannel = sendTypeList.find((/**
             * @param {?} val
             * @return {?}
             */
            function (val) { return _this.uistate.messageChannels.find((/**
             * @param {?} channel
             * @return {?}
             */
            function (channel) { return channel.code == val && channel.channelType == 'Sms'; })); }));
            if (messageChannel) {
                return true;
            }
            else {
                return false;
            }
        }
        else {
            return false;
        }
    };
    /**
     * @return {?}
     */
    SendMessageOperationComponent.prototype.showExpr = /**
     * @return {?}
     */
    function () {
        var e_4, _a, e_5, _b, e_6, _c, e_7, _d, e_8, _e;
        // this.expr.clearContext();
        if (this.uistate.schemas.length > 0) {
            try {
                for (var _f = tslib_1.__values(this.uistate.schemas), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var schema = _g.value;
                    // this.expr.addCommonObject(co);
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
                }
                finally { if (e_4) throw e_4.error; }
            }
            if (this.uistate.schemas[0].entityTypes && this.uistate.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.uistate.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.uistate.procInstContext.length > 0) {
            try {
                for (var _h = tslib_1.__values(this.uistate.procInstContext), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var variable = _j.value;
                    context.push(variable);
                    // this.expr.addContext(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.uistate.processVariableContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _k = tslib_1.__values(this.uistate.processVariableContext), _l = _k.next(); !_l.done; _l = _k.next()) {
                    var variable = _l.value;
                    _loop_2(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (this.uistate.subActivityContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _m = tslib_1.__values(this.uistate.subActivityContext), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var variable = _o.value;
                    _loop_3(variable);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_e = context_1.return)) _e.call(context_1);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        return context;
    };
    SendMessageOperationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-send-message-operation',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column h-100\">\r\n    <perfect-scrollbar [config]=\"{}\">\r\n      <form class=\"h-100\">\r\n        <div class=\"f-form-layout farris-form farris-form-controls-inline farris-form-auto\" style=\"padding-right: 0.875rem; padding-left: 0.875rem;\">\r\n          <div class=\"col-12 mt-2\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group\">\r\n                <label class=\"col-form-label pl-1 mr-3\">\r\n                  <span class=\"farris-label-text\">{{'component.sendMessageOperation.cycleEnable' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap mr-5\">\r\n                  <farris-switch [(ngModel)]=\"operation.cycleEnable\" name=\"cycleEnable\"></farris-switch>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-7 mt-2 pr-1\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group\" style=\"width: 100%;\">\r\n                <label class=\"col-form-label pl-1 mr-3\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.sendMessageOperation.cycleTime' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap mr-1\" style=\"width: 35%;\">\r\n                  <farris-number-spinner [(ngModel)]=\"operation.cycleTime\" name=\"cycleTime\"\r\n                                          [editable]=\"true\" [precision]=\"0\" [parser]=\"parser\"\r\n                                          [min]=\"0\"></farris-number-spinner>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3 mt-2 pl-1\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group\" style=\"width: 100%;\">\r\n                <div class=\"farris-input-wrap mr-5\" style=\"width: 30%;\">\r\n                  <farris-combo-list [(ngModel)]=\"operation.cycleTimeUnit\" name=\"cycleTimeUnit\" [idField]=\"'value'\" [textField]=\"'text'\"\r\n                                      [valueField]=\"'value'\" [data]=\"timeUnitCollection\" [panelHeight]=\"'auto'\"\r\n                                      [editable]=\"false\" [enableClear]=\"false\">\r\n                  </farris-combo-list>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-2\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.sendMessageOperation.sendType' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <farris-checkboxgroup #checkboxGroup [(ngModel)]=\"operation.sendType\" name=\"sendType\" [horizontal]=\"true\"\r\n                    [data]=\"typeGroup\" (changeValue)=\"sendTypeChange($event)\">\r\n                  </farris-checkboxgroup>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-2\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.sendMessageOperation.subject' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                    <input-group [editable]=\"false\" [enableClear]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                    [(value)]=\"operation.subject\" (clickHandle)=\"titleExpr($event)\">\r\n                    </input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-2\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.sendMessageOperation.message' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                    <input-group [editable]=\"false\" [enableClear]=\"false\" [customCls]=\"'custom-cls'\" [groupText]=\"groupIcon2\"\r\n                    [(value)]=\"operation.message\" (clickHandle)=\"contentExpr($event)\">\r\n                    </input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 mt-2\">\r\n            <div *ngIf=\"location==='process'\" class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.sendMessageOperation.receiverVari' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <div class=\"pb-2\">\r\n                    <farris-checkboxgroup #receiverVariable [(ngModel)]=\"receiverVari\" name=\"receiverVariable\"\r\n                      [horizontal]=\"true\" [data]=\"receiverVariables\">\r\n                    </farris-checkboxgroup>\r\n                  </div>\r\n                  <div>\r\n                    <sys-farris-grid-lookup #userHelp [singleSelect]=\"false\" [displayTxt]=\"bindingData.name\" [pagination]=\"true\"\r\n                      [pageSize]=\"20\" title=\"{{'component.sendMessageOperation.sysUsers' | wfLocale}}\" [sourceType]=\"'user'\" [bindingData]=\"bindingData\"\r\n                      [filter]=\"{notGetCurrentUser:false, notGetStopUser:true}\" [typeMode]=\"1\" (clear)=\"clear()\">\r\n                    </sys-farris-grid-lookup>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"location==='activity'\" class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.sendMessageOperation.receiverVari' | wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap ml-1\">\r\n                  <div class=\"pb-2\">\r\n                    <farris-checkboxgroup #receiverVariable1 [(ngModel)]=\"activityReceiverVar\" name=\"ActivityReceiverVariable\"\r\n                                          [horizontal]=\"true\" [data]=\"activityReceiverVariables\">\r\n                    </farris-checkboxgroup>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <lib-sms-message-template *ngIf=\"hasSmsTemplate\" [smsMessageTemplate]=\"operation.smsMessageTemplate\"></lib-sms-message-template>\r\n      </form>\r\n    </perfect-scrollbar>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">{{'component.sendMessageOperation.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.sendMessageOperation.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SendMessageOperationComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: MessagerService },
        { type: ProcessDesignerUIState },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] },
        { type: ExpressionService }
    ]; };
    SendMessageOperationComponent.propDecorators = {
        footer: [{ type: ViewChild, args: ['footer',] }],
        SmsTemplate: [{ type: ViewChild, args: [SmsMessageTemplateComponent,] }],
        value: [{ type: Input }],
        closeEmitter: [{ type: Output }],
        submitEmitter: [{ type: Output }]
    };
    return SendMessageOperationComponent;
}());
export { SendMessageOperationComponent };
if (false) {
    /** @type {?} */
    SendMessageOperationComponent.prototype.groupIcon2;
    /** @type {?} */
    SendMessageOperationComponent.prototype.footer;
    /** @type {?} */
    SendMessageOperationComponent.prototype.SmsTemplate;
    /** @type {?} */
    SendMessageOperationComponent.prototype.operation;
    /** @type {?} */
    SendMessageOperationComponent.prototype.closeEmitter;
    /** @type {?} */
    SendMessageOperationComponent.prototype.submitEmitter;
    /** @type {?} */
    SendMessageOperationComponent.prototype.typeGroup;
    /** @type {?} */
    SendMessageOperationComponent.prototype.receiverVariables;
    /** @type {?} */
    SendMessageOperationComponent.prototype.activityReceiverVariables;
    /** @type {?} */
    SendMessageOperationComponent.prototype.placeholder;
    /** @type {?} */
    SendMessageOperationComponent.prototype.placeholder2;
    /** @type {?} */
    SendMessageOperationComponent.prototype.hasSmsTemplate;
    /** @type {?} */
    SendMessageOperationComponent.prototype.parser;
    /** @type {?} */
    SendMessageOperationComponent.prototype.timeUnitCollection;
    /** @type {?} */
    SendMessageOperationComponent.prototype.location;
    /** @type {?} */
    SendMessageOperationComponent.prototype.receiverVari;
    /** @type {?} */
    SendMessageOperationComponent.prototype.activityReceiverVar;
    /** @type {?} */
    SendMessageOperationComponent.prototype.bindingData;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.localePipe;
    /**
     * @type {?}
     * @private
     */
    SendMessageOperationComponent.prototype.expr;
}
//# sourceMappingURL=data:application/json;base64,