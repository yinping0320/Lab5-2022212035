/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, EventEmitter, Inject, Input, LOCALE_ID, Optional, Output, TemplateRef, ViewChild } from '@angular/core';
import { AutoHandle } from "../time-limit-control.entity";
import { MessagerService } from '@farris/ui-messager';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
var AutoHandleOperationComponent = /** @class */ (function () {
    function AutoHandleOperationComponent(message, uiState, cdr, localeId, resources, localePipe) {
        var e_1, _a;
        this.message = message;
        this.uiState = uiState;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.placeholder = '';
        this.operation = new AutoHandle('Pass', this.localePipe);
        this.submitEmitter = new EventEmitter();
        this.closeEmitter = new EventEmitter();
        this.autoHandleType = [
        // { value: 'autoPass', text: '自动通过' },
        // { value: 'autoBack', text: '自动驳回' }
        ];
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
        try {
            for (var _b = tslib_1.__values(this.uiState.propertyData.ApprovalItems), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                this.autoHandleType.push({ value: item.Value, text: item.Text });
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    Object.defineProperty(AutoHandleOperationComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.operation;
        },
        set: /**
         * @param {?} info
         * @return {?}
         */
        function (info) {
            this.operation = Object.assign({}, info);
            if (this.operation.autoHandleType === undefined) {
                /** @type {?} */
                var autoHandle = new AutoHandle(this.autoHandleType[0].value, this.localePipe);
                this.operation.autoHandleType = autoHandle.autoHandleType;
                this.operation.message = autoHandle.message;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AutoHandleOperationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    AutoHandleOperationComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (this.validator()) {
            this.submitEmitter.emit(this.operation);
        }
    };
    /**
     * @return {?}
     */
    AutoHandleOperationComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeEmitter.emit();
    };
    /**
     * @private
     * @return {?}
     */
    AutoHandleOperationComponent.prototype.validator = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.operation.message) {
            this.message.info(this.localePipe.transform('component.sendMessageOperation.opinionsNotEmpty'));
            return false;
        }
        if (!this.operation.autoHandleType) {
            this.message.info(this.localePipe.transform('component.sendMessageOperation.processingNotEmpty'));
            return false;
        }
        return true;
    };
    AutoHandleOperationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-auto-handle-operation',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-section-header pt-2 mx-2\">\r\n        <div class=\"f-title\">\r\n          <h4 class=\"f-title-text\">{{'component.sendMessageOperation.automaticProcessSet' | wfLocale}}</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <perfect-scrollbar [config]=\"{}\">\r\n          <form class=\"h-100\">\r\n            <div class=\"farris-form form-inline farris-form-inline\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">{{'component.sendMessageOperation.automaticProcessMethod' | wfLocale}}</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <farris-combo-list [(ngModel)]=\"operation.autoHandleType\" name=\"cycleTimeUnit\" [idField]=\"'value'\" [textField]=\"'text'\"\r\n                                       [valueField]=\"'value'\" [data]=\"autoHandleType\" [panelHeight]=\"'auto'\"\r\n                                       [editable]=\"false\" [enableClear]=\"false\">\r\n                    </farris-combo-list>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"farris-group-wrap my-3\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">{{'component.sendMessageOperation.automaticOpinionHandle' | wfLocale}}</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap ml-1\">\r\n                    <textarea class=\"form-control\" type=\"text\" value=\"message\" [(ngModel)]=\"operation.message\" name=\"message\"\r\n                              [placeholder]=\"placeholder\" style=\"height: 100px;\"></textarea>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </perfect-scrollbar>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #footer>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm mx-2\" (click)=\"clickCancel()\">{{'component.sendMessageOperation.clickCancel' | wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.sendMessageOperation.clickOK' | wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    AutoHandleOperationComponent.ctorParameters = function () { return [
        { type: MessagerService },
        { type: ProcessDesignerUIState },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    AutoHandleOperationComponent.propDecorators = {
        footer: [{ type: ViewChild, args: ['footer',] }],
        value: [{ type: Input }],
        submitEmitter: [{ type: Output }],
        closeEmitter: [{ type: Output }]
    };
    return AutoHandleOperationComponent;
}());
export { AutoHandleOperationComponent };
if (false) {
    /** @type {?} */
    AutoHandleOperationComponent.prototype.footer;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.placeholder;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.operation;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.submitEmitter;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.closeEmitter;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.autoHandleType;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.message;
    /** @type {?} */
    AutoHandleOperationComponent.prototype.uiState;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    AutoHandleOperationComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0by1oYW5kbGUtb3BlcmF0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvdGltZS1saW1pdC1jb250cm9sL2F1dG8taGFuZGxlLW9wZXJhdGlvbi9hdXRvLWhhbmRsZS1vcGVyYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQVUsUUFBUSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZKLE9BQU8sRUFBRSxVQUFVLEVBQW1CLE1BQU0sOEJBQThCLENBQUM7QUFDM0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUduRztJQW1DRSxzQ0FDVSxPQUF3QixFQUN6QixPQUErQixFQUNsQixHQUFzQixFQUNmLFFBQWdCLEVBQ1IsU0FBYyxFQUM3QixVQUF3Qjs7UUFMcEMsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFDekIsWUFBTyxHQUFQLE9BQU8sQ0FBd0I7UUFDbEIsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFDZixhQUFRLEdBQVIsUUFBUSxDQUFRO1FBQ1IsY0FBUyxHQUFULFNBQVMsQ0FBSztRQUM3QixlQUFVLEdBQVYsVUFBVSxDQUFjO1FBaEI5QyxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUNqQixjQUFTLEdBQWUsSUFBSSxVQUFVLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN0RCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFtQixDQUFDO1FBQ3BELGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUVqRCxtQkFBYyxHQUFHO1FBQ2YsdUNBQXVDO1FBQ3ZDLHNDQUFzQztTQUN2QyxDQUFDO1FBVUEsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksWUFBWSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQzs7WUFDM0UsS0FBa0IsSUFBQSxLQUFBLGlCQUFBLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQSxnQkFBQSw0QkFBRTtnQkFBdkQsSUFBTSxJQUFJLFdBQUE7Z0JBQ1osSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsRUFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUM7YUFDL0Q7Ozs7Ozs7OztJQUNILENBQUM7SUFwQ0Qsc0JBQ0ksK0NBQUs7Ozs7UUFTVDtZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN4QixDQUFDOzs7OztRQVpELFVBQ1UsSUFBZ0I7WUFDeEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN6QyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxLQUFLLFNBQVMsRUFBRTs7b0JBQ3pDLFVBQVUsR0FBRyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDO2dCQUNoRixJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsR0FBRyxVQUFVLENBQUMsY0FBYyxDQUFDO2dCQUMxRCxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDO2FBQzdDO1FBQ0gsQ0FBQzs7O09BQUE7Ozs7SUE4QkQsK0NBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7OztJQUVELDhDQUFPOzs7SUFBUDtRQUNFLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7Ozs7SUFFRCxrREFBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzNCLENBQUM7Ozs7O0lBRU8sZ0RBQVM7Ozs7SUFBakI7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsaURBQWlELENBQUMsQ0FBQyxDQUFDO1lBQ2hHLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUU7WUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsbURBQW1ELENBQUMsQ0FBQyxDQUFDO1lBQ2xHLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7O2dCQXhFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMscThGQUFxRDtvQkFFckQsU0FBUyxFQUFFO3dCQUNSLFlBQVk7cUJBQ2Q7O2lCQUNGOzs7O2dCQVpRLGVBQWU7Z0JBQ2Ysc0JBQXNCO2dCQUh0QixpQkFBaUIsdUJBNkNyQixRQUFROzZDQUNSLE1BQU0sU0FBQyxTQUFTO2dEQUNoQixNQUFNLFNBQUMsaUJBQWlCO2dCQTNDRCxZQUFZLHVCQTRDbkMsUUFBUTs7O3lCQS9CVixTQUFTLFNBQUMsUUFBUTt3QkFDbEIsS0FBSztnQ0FnQkwsTUFBTTsrQkFDTixNQUFNOztJQThDVCxtQ0FBQztDQUFBLEFBMUVELElBMEVDO1NBbEVZLDRCQUE0Qjs7O0lBRXZDLDhDQUE4Qzs7SUFlOUMsbURBQWlCOztJQUNqQixpREFBZ0U7O0lBQ2hFLHFEQUE4RDs7SUFDOUQsb0RBQWlEOztJQUVqRCxzREFHRTs7Ozs7SUFHQSwrQ0FBZ0M7O0lBQ2hDLCtDQUFzQzs7Ozs7SUFDdEMsMkNBQTBDOzs7OztJQUMxQyxnREFBMkM7Ozs7O0lBQzNDLGlEQUFpRDs7Ozs7SUFDakQsa0RBQTRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbmplY3QsIElucHV0LCBMT0NBTEVfSUQsIE9uSW5pdCwgT3B0aW9uYWwsIE91dHB1dCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBdXRvSGFuZGxlLCBFeHBpcmVPcGVyYXRpb24gfSBmcm9tIFwiLi4vdGltZS1saW1pdC1jb250cm9sLmVudGl0eVwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuaW1wb3J0IHsgUHJvY2Vzc0Rlc2lnbmVyVUlTdGF0ZSB9IGZyb20gJy4uLy4uLy4uL2FwcC9wcm9jZXNzLWRlc2lnbmVyLnVpc3RhdGUnO1xyXG5pbXBvcnQgeyBXRl9MQU5HX1JFU09VUkNFUywgV2ZMb2NhbGVQaXBlIH0gZnJvbSAnLi4vLi4vLi4vaTE4bi9waXBlL3dmLXByb2Nlc3MtZWRpdG9yLWxvY2FsZS5waXBlJztcclxuaW1wb3J0IHsgV0ZfUFJPQ0VTU19FRElUT1JfTEFOR19SRVNPVVJDRVMgfSBmcm9tICcuLi8uLi8uLi9pMThuL2Fzc2V0cy9sYW5nLnJlc291cmNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWF1dG8taGFuZGxlLW9wZXJhdGlvbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2F1dG8taGFuZGxlLW9wZXJhdGlvbi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXV0by1oYW5kbGUtb3BlcmF0aW9uLmNvbXBvbmVudC5jc3MnXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgICBXZkxvY2FsZVBpcGUsXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXV0b0hhbmRsZU9wZXJhdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2Zvb3RlcicpIGZvb3RlcjogVGVtcGxhdGVSZWY8YW55PjtcclxuICBASW5wdXQoKVxyXG4gIHNldCB2YWx1ZShpbmZvOiBBdXRvSGFuZGxlKSB7XHJcbiAgICB0aGlzLm9wZXJhdGlvbiA9IE9iamVjdC5hc3NpZ24oe30sIGluZm8pO1xyXG4gICAgaWYgKHRoaXMub3BlcmF0aW9uLmF1dG9IYW5kbGVUeXBlID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgY29uc3QgYXV0b0hhbmRsZSA9IG5ldyBBdXRvSGFuZGxlKHRoaXMuYXV0b0hhbmRsZVR5cGVbMF0udmFsdWUsIHRoaXMubG9jYWxlUGlwZSk7XHJcbiAgICAgIHRoaXMub3BlcmF0aW9uLmF1dG9IYW5kbGVUeXBlID0gYXV0b0hhbmRsZS5hdXRvSGFuZGxlVHlwZTtcclxuICAgICAgdGhpcy5vcGVyYXRpb24ubWVzc2FnZSA9IGF1dG9IYW5kbGUubWVzc2FnZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCB2YWx1ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLm9wZXJhdGlvbjtcclxuICB9XHJcblxyXG4gIHBsYWNlaG9sZGVyID0gJyc7XHJcbiAgb3BlcmF0aW9uOiBBdXRvSGFuZGxlID0gbmV3IEF1dG9IYW5kbGUoJ1Bhc3MnLCB0aGlzLmxvY2FsZVBpcGUpO1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxFeHBpcmVPcGVyYXRpb24+KCk7XHJcbiAgQE91dHB1dCgpIGNsb3NlRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBhdXRvSGFuZGxlVHlwZSA9IFtcclxuICAgIC8vIHsgdmFsdWU6ICdhdXRvUGFzcycsIHRleHQ6ICfoh6rliqjpgJrov4cnIH0sXHJcbiAgICAvLyB7IHZhbHVlOiAnYXV0b0JhY2snLCB0ZXh0OiAn6Ieq5Yqo6amz5ZueJyB9XHJcbiAgXTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIG1lc3NhZ2U6IE1lc3NhZ2VyU2VydmljZSxcclxuICAgIHB1YmxpYyB1aVN0YXRlOiBQcm9jZXNzRGVzaWduZXJVSVN0YXRlLFxyXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgQEluamVjdChMT0NBTEVfSUQpIHByaXZhdGUgbG9jYWxlSWQ6IHN0cmluZyxcclxuICAgIEBJbmplY3QoV0ZfTEFOR19SRVNPVVJDRVMpIHByaXZhdGUgcmVzb3VyY2VzOiBhbnksXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGxvY2FsZVBpcGU6IFdmTG9jYWxlUGlwZSxcclxuICApIHtcclxuICAgIHRoaXMubG9jYWxlUGlwZSA9IHRoaXMubG9jYWxlUGlwZSB8fCBuZXcgV2ZMb2NhbGVQaXBlKGxvY2FsZUlkLCByZXNvdXJjZXMpO1xyXG4gICAgZm9yKGNvbnN0IGl0ZW0gb2YgdGhpcy51aVN0YXRlLnByb3BlcnR5RGF0YS5BcHByb3ZhbEl0ZW1zKSB7XHJcbiAgICAgIHRoaXMuYXV0b0hhbmRsZVR5cGUucHVzaCh7dmFsdWU6IGl0ZW0uVmFsdWUsdGV4dDogaXRlbS5UZXh0fSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIGNsaWNrT0soKSB7XHJcbiAgICBpZiAodGhpcy52YWxpZGF0b3IoKSkge1xyXG4gICAgICB0aGlzLnN1Ym1pdEVtaXR0ZXIuZW1pdCh0aGlzLm9wZXJhdGlvbik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjbGlja0NhbmNlbCgpIHtcclxuICAgIHRoaXMuY2xvc2VFbWl0dGVyLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgdmFsaWRhdG9yKCk6IGJvb2xlYW4ge1xyXG4gICAgaWYgKCF0aGlzLm9wZXJhdGlvbi5tZXNzYWdlKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5zZW5kTWVzc2FnZU9wZXJhdGlvbi5vcGluaW9uc05vdEVtcHR5JykpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBpZiAoIXRoaXMub3BlcmF0aW9uLmF1dG9IYW5kbGVUeXBlKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5zZW5kTWVzc2FnZU9wZXJhdGlvbi5wcm9jZXNzaW5nTm90RW1wdHknKSk7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuXHJcbn1cclxuIl19