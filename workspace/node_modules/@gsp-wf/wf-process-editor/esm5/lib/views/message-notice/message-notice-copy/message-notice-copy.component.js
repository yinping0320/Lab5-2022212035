/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, TemplateRef, EventEmitter, Output, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { DialogComponent } from '@farris/ui-dialog';
import { LookupGridComponent } from '@farris/ui-lookup';
import { MessagerService } from '@farris/ui-messager';
import { of } from 'rxjs';
import { ProcessDesignerUIState } from '../../../app/process-designer.uistate';
import { MessageNoticeBatchSet } from '../message-notice-batchSet';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../i18n/pipe/wf-process-editor-locale.pipe';
var MessageNoticeCopyComponent = /** @class */ (function () {
    function MessageNoticeCopyComponent(uistate, message, cdr, localeId, resources, localePipe) {
        var _this = this;
        this.uistate = uistate;
        this.message = message;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
        this.cols = [
            { title: this.localePipe.transform('component.MessageNotice.name'), field: 'Name', width: 60, searchField: 'Name' },
            { title: 'ID', field: 'Id', width: 90, searchField: 'Id' }
        ];
        // ==========================================================
        this.actis = [];
        this.fullActis = [];
        this.pageInfo = {
            pageIndex: 1,
            pageList: [10, 20, 30, 50],
            pageSize: 20
        };
        this.messageNotice = [];
        this.messageNoticeValue = [];
        this.targetNodeID = [];
        this.activitySendTime = [
            { value: 'WORKITEM_CREATED', text: this.localePipe.transform('component.MessageNotice.workCreated') },
            { value: 'ACTIVITY_COMPLETED', text: this.localePipe.transform('component.MessageNotice.actComplete') },
            { value: 'ACTIVITY_ABORTED', text: this.localePipe.transform('component.MessageNotice.actAborted') },
        ];
        this.columns = [
            {
                field: 'subject', width: 100, title: this.localePipe.transform('component.MessageNotice.subject'),
            }, {
                field: 'content', width: 150, title: this.localePipe.transform('component.MessageNotice.content'), showTips: true,
            }, {
                field: 'sendTime', width: 100, title: this.localePipe.transform('component.MessageNotice.sendTime'),
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.activitySendTime }
                },
            }, {
                field: 'sendType', width: 100, title: this.localePipe.transform('component.MessageNotice.sendType'),
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'name', data: this.uistate.messageChannels.map((/**
                         * @param {?} m
                         * @return {?}
                         */
                        function (m) { return ({ value: m.code, name: m.name }); })) }
                },
            }, {
                field: 'receiverText', width: 120, title: this.localePipe.transform('component.MessageNotice.receiverText'), showTips: true
            }
        ];
        this.actisSelect = (/**
         * @param {?} rowData
         * @return {?}
         */
        function (rowData) {
            var e_1, _a;
            try {
                for (var rowData_1 = tslib_1.__values(rowData), rowData_1_1 = rowData_1.next(); !rowData_1_1.done; rowData_1_1 = rowData_1.next()) {
                    var r = rowData_1_1.value;
                    _this.targetNodeID.push(r.Id);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (rowData_1_1 && !rowData_1_1.done && (_a = rowData_1.return)) _a.call(rowData_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return of({
                closeDialog: true
            });
        });
        this.paramAfterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        function (rowIndex, rowData, column) {
            console.log(rowData);
            console.log(rowIndex);
            return of(true);
        });
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    MessageNoticeCopyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} e
     * @return {?}
     */
    MessageNoticeCopyComponent.prototype.endEdit = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        console.log(e);
    };
    Object.defineProperty(MessageNoticeCopyComponent.prototype, "messageNotices", {
        get: /**
         * @return {?}
         */
        function () {
            return this.messageNotice;
        },
        set: /**
         * @param {?} m
         * @return {?}
         */
        function (m) {
            this.messageNotice = m;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MessageNoticeCopyComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        if (!this.targetNodeID && this.targetNodeID.length === 0) {
            this.message.info(this.localePipe.transform('component.MessageNotice.noTargetNode'));
            return;
        }
        if (!this.messageNotice && this.messageNotice.length === 0) {
            this.message.info(this.localePipe.transform('component.MessageNotice.noMessageNotifyAttribute'));
            return;
        }
        /** @type {?} */
        var batchSetValue = new MessageNoticeBatchSet();
        batchSetValue.messageNotice = this.messageNotice;
        batchSetValue.targetNodeID = this.targetNodeID;
        batchSetValue.isBatchCopy = true;
        /** @type {?} */
        var object = { value: batchSetValue, parameters: null };
        this.submitEmitter.emit(object);
    };
    /**
     * @return {?}
     */
    MessageNoticeCopyComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeEmitter.emit();
    };
    MessageNoticeCopyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-message-notice-copy',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-utils-fill-flex-column farris-split-section m-2 h-100\">\r\n    <section class=\"f-utils-fill-flex-column h-100\">\r\n      <div class=\"f-utils-fill-flex-column h-100\">\r\n        <form class=\"h-100\">\r\n          <div class=\"f-utils-fill-flex-column h-100\">\r\n            <!-- \u53EF\u9009\u8282\u70B9\u76EE\u6807\u5C0F\u6807\u9898 -->\r\n            <div class=\"mx-2 mt-1\">\r\n              <div class=\"title-content\">\r\n                <h4 class=\"title-text\">{{'component.messageNoticeEdit.optionalNodes'|wfLocale}}</h4><span class=\"title-line\"></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-2 mx-4 farris-form-controls-inline\">\r\n              <div class=\"farris-group-wrap\">\r\n                <!-- \u9644\u52A0\u8282\u70B9\u5E2E\u52A9 -->\r\n                <farris-lookup-grid #userActisDialog [items]=\"uistate.userActList\" [columns]=\"cols\" [resizable]=\"true\"\r\n                  [singleSelect]=\"false\" [idField]=\"'Id'\" [textField]=\"'Name'\" [(ngModel)]=\"actis\" [valueField]=\"'Id'\"\r\n                  [pagination]=\"false\" [pageIndex]=\"pageInfo.pageIndex\" name=\"defaultActivities\"\r\n                  [pageSize]=\"pageInfo.pageSize\" [pageList]=\"pageInfo.pageList\" [total]=\"total\" [enableClear]=\"false\"\r\n                  title=\"{{'component.messageNoticeEdit.targetNodeList'|wfLocale}}\" [displayType]=\"'List'\" [remoteSearch]='false' [enableToSelect]=\"false\"\r\n                  placeholder=\"{{'component.messageNoticeEdit.placeholder'|wfLocale}}\" [dictPicked]=\"actisSelect\" [nosearch]=\"true\" [showFilterBar]=\"false\">\r\n                </farris-lookup-grid>\r\n              </div>\r\n            </div>\r\n            <!-- \u53EF\u9009\u5C5E\u6027\u76EE\u6807\u5C0F\u6807\u9898 -->\r\n            <div class=\"mx-2 mt-1\">\r\n              <div class=\"title-content\">\r\n                <h4 class=\"title-text\">{{'component.messageNoticeEdit.optionalAttribute'|wfLocale}}</h4><span class=\"title-line\"></span>\r\n              </div>\r\n            </div>\r\n            <!-- \u6D88\u606F\u901A\u77E5\u5C5E\u6027 -->\r\n            <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n              <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n                <farris-datagrid #grid [data]=\"messageNotices\" [columns]=\"columns\" [idField]=\"'id'\" [fit]=\"true\"\r\n                  [fitColumns]=\"true\" [editable]=\"false\" [pagination]=\"false\" [showCheckbox]=\"false\"\r\n                  [multiSelect]=\"false\" [showLineNumber]=\"true\" lineNumberTitle=\"{{'component.messageNoticeEdit.lineNumber'|wfLocale}}\" [lineNumberWidth]=\"50\"\r\n                  [striped]=\"true\" [showAllCheckbox]=\"false\" [afterEdit]=\"paramAfterEdit\" (endEdit)=\"endEdit($event)\">\r\n                </farris-datagrid>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"clickCancel()\">{{'component.messageNoticeEdit.clickCancel'|wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm mx-2\" (click)=\"clickOK()\">{{'component.messageNoticeEdit.clickOK'|wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [".title-content{color:#000;display:inline-flex;align-items:center;line-height:1.375rem;position:relative;overflow:hidden;padding:0 0 0 1rem;min-width:760px}.title-content ::before{content:'';width:.25rem;height:1.125rem;background:#59a1ff;border-radius:1px;position:absolute;top:50%;left:0;margin-top:-.5625rem}.title-text{font-size:1rem;line-height:1.375rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-bottom:0;margin-right:10px}.title-line{flex-grow:1;border-bottom:1px dashed rgba(0,0,0,.1)}"]
                }] }
    ];
    /** @nocollapse */
    MessageNoticeCopyComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: MessagerService },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    MessageNoticeCopyComponent.propDecorators = {
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        closeEmitter: [{ type: Output }],
        submitEmitter: [{ type: Output }],
        allActisTable: [{ type: ViewChild, args: ['allActisTable',] }],
        allActisDialog: [{ type: ViewChild, args: ['allActisDialog',] }],
        actTable: [{ type: ViewChild, args: ['actTable',] }],
        lookup: [{ type: ViewChild, args: ['lookup',] }]
    };
    return MessageNoticeCopyComponent;
}());
export { MessageNoticeCopyComponent };
if (false) {
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.modalFooter;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.closeEmitter;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.submitEmitter;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.allActisTable;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.allActisDialog;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.actTable;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.lookup;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.cols;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.actis;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.fullActis;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.pageInfo;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.total;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.messageNotice;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.messageNoticeValue;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.targetNodeID;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.activitySendTime;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.columns;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.actisSelect;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.paramAfterEdit;
    /** @type {?} */
    MessageNoticeCopyComponent.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.message;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    MessageNoticeCopyComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1ub3RpY2UtY29weS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL21lc3NhZ2Utbm90aWNlL21lc3NhZ2Utbm90aWNlLWNvcHkvbWVzc2FnZS1ub3RpY2UtY29weS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFNBQVMsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoSixPQUFPLEVBQWMsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLG1CQUFtQixFQUFnQixNQUFNLG1CQUFtQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRW5FLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxZQUFZLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUVuRztJQTBERSxvQ0FDUyxPQUErQixFQUM5QixPQUF3QixFQUNaLEdBQXNCLEVBQ2YsUUFBZ0IsRUFDUixTQUFjLEVBQzdCLFVBQXdCO1FBTjlDLGlCQVNDO1FBUlEsWUFBTyxHQUFQLE9BQU8sQ0FBd0I7UUFDOUIsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFDWixRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUNmLGFBQVEsR0FBUixRQUFRLENB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QUZ0QixlQUFlO2dCQUprRCxpQkFBaUIsdUJBd0V0RixRQUFROzZDQUNSLE1BQU0sU0FBQyxTQUFTO2dEQUNoQixNQUFNLFNBQUMsaUJBQWlCO2dCQWpFRCxZQUFZLHVCQWtFbkMsUUFBUTs7OzhCQXZEVixTQUFTLFNBQUMsa0JBQWtCOytCQUM1QixNQUFNO2dDQUNOLE1BQU07Z0NBRU4sU0FBUyxTQUFDLGVBQWU7aUNBQ3pCLFNBQVMsU0FBQyxnQkFBZ0I7MkJBQzFCLFNBQVMsU0FBQyxVQUFVO3lCQUNwQixTQUFTLFNBQUMsUUFBUTs7SUFzR3JCLGlDQUFDO0NBQUEsQUF0SEQsSUFzSEM7U0E5R1ksMEJBQTBCOzs7SUFDckMsaURBQTZEOztJQUM3RCxrREFBaUQ7O0lBQ2pELG1EQUFrRDs7SUFFbEQsbURBQTZEOztJQUM3RCxvREFBNkQ7O0lBQzdELDhDQUFtRDs7SUFDbkQsNENBQWlEOztJQUNqRCwwQ0FFOEQ7O0lBRTlELDJDQUFXOztJQUNYLCtDQUFlOztJQUNmLDhDQUlFOztJQUNGLDJDQUFjOztJQUNkLG1EQUFtQjs7SUFDbkIsd0RBQXdCOztJQUN4QixrREFBa0I7O0lBQ2xCLHNEQUlBOztJQUNBLDZDQW1CSzs7SUFtQkwsaURBT0M7O0lBRUQsb0RBSUM7O0lBN0JDLDZDQUFzQzs7Ozs7SUFDdEMsNkNBQWdDOzs7OztJQUNoQyx5Q0FBMEM7Ozs7O0lBQzFDLDhDQUEyQzs7Ozs7SUFDM0MsK0NBQWlEOzs7OztJQUNqRCxnREFBNEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkLCBUZW1wbGF0ZVJlZiwgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIENoYW5nZURldGVjdG9yUmVmLCBPcHRpb25hbCwgSW5qZWN0LCBMT0NBTEVfSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YUNvbHVtbiwgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBMb29rdXBHcmlkQ29tcG9uZW50LCBQaWNrZWRSZXN1bHQgfSBmcm9tICdAZmFycmlzL3VpLWxvb2t1cCc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBQcm9jZXNzRGVzaWduZXJVSVN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vYXBwL3Byb2Nlc3MtZGVzaWduZXIudWlzdGF0ZSc7XHJcbmltcG9ydCB7IE1lc3NhZ2VOb3RpY2VCYXRjaFNldCB9IGZyb20gJy4uL21lc3NhZ2Utbm90aWNlLWJhdGNoU2V0JztcclxuaW1wb3J0IHsgV0ZfUFJPQ0VTU19FRElUT1JfTEFOR19SRVNPVVJDRVMgfSBmcm9tICcuLi8uLi8uLi9pMThuL2Fzc2V0cy9sYW5nLnJlc291cmNlJztcclxuaW1wb3J0IHsgV0ZfTEFOR19SRVNPVVJDRVMsIFdmTG9jYWxlUGlwZSB9IGZyb20gJy4uLy4uLy4uL2kxOG4vcGlwZS93Zi1wcm9jZXNzLWVkaXRvci1sb2NhbGUucGlwZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2xpYi1tZXNzYWdlLW5vdGljZS1jb3B5JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbWVzc2FnZS1ub3RpY2UtY29weS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbWVzc2FnZS1ub3RpY2UtY29weS5jb21wb25lbnQuY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICAgV2ZMb2NhbGVQaXBlLFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VOb3RpY2VDb3B5Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBAVmlld0NoaWxkKCdpY29uU2VsZWN0Rm9vdGVyJykgbW9kYWxGb290ZXI6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgQE91dHB1dCgpIGNsb3NlRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBzdWJtaXRFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgLy8g5rS75Yqo6IqC54K56KGo5L+h5oGvPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICBAVmlld0NoaWxkKCdhbGxBY3Rpc1RhYmxlJykgYWxsQWN0aXNUYWJsZTogRGF0YWdyaWRDb21wb25lbnQ7XHJcbiAgQFZpZXdDaGlsZCgnYWxsQWN0aXNEaWFsb2cnKSBhbGxBY3Rpc0RpYWxvZzogRGlhbG9nQ29tcG9uZW50O1xyXG4gIEBWaWV3Q2hpbGQoJ2FjdFRhYmxlJykgYWN0VGFibGU6IERhdGFncmlkQ29tcG9uZW50O1xyXG4gIEBWaWV3Q2hpbGQoJ2xvb2t1cCcpIGxvb2t1cDogTG9va3VwR3JpZENvbXBvbmVudDtcclxuICBjb2xzID0gW1xyXG4gICAgeyB0aXRsZTogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UubmFtZScpLCBmaWVsZDogJ05hbWUnLCB3aWR0aDogNjAsIHNlYXJjaEZpZWxkOiAnTmFtZScgfSxcclxuICAgIHsgdGl0bGU6ICdJRCcsIGZpZWxkOiAnSWQnLCB3aWR0aDogOTAsIHNlYXJjaEZpZWxkOiAnSWQnIH1dO1xyXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICBhY3RpcyA9IFtdO1xyXG4gIGZ1bGxBY3RpcyA9IFtdO1xyXG4gIHBhZ2VJbmZvID0ge1xyXG4gICAgcGFnZUluZGV4OiAxLFxyXG4gICAgcGFnZUxpc3Q6IFsxMCwgMjAsIDMwLCA1MF0sXHJcbiAgICBwYWdlU2l6ZTogMjBcclxuICB9O1xyXG4gIHRvdGFsOiBudW1iZXI7XHJcbiAgbWVzc2FnZU5vdGljZSA9IFtdO1xyXG4gIG1lc3NhZ2VOb3RpY2VWYWx1ZSA9IFtdO1xyXG4gIHRhcmdldE5vZGVJRCA9IFtdO1xyXG4gIGFjdGl2aXR5U2VuZFRpbWUgPSBbXHJcbiAgICB7IHZhbHVlOiAnV09SS0lURU1fQ1JFQVRFRCcsIHRleHQ6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLndvcmtDcmVhdGVkJykgfSxcclxuICAgIHsgdmFsdWU6ICdBQ1RJVklUWV9DT01QTEVURUQnLCB0ZXh0OiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS5hY3RDb21wbGV0ZScpIH0sXHJcbiAgICB7IHZhbHVlOiAnQUNUSVZJVFlfQUJPUlRFRCcsIHRleHQ6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLmFjdEFib3J0ZWQnKSB9LFxyXG5dO1xyXG4gIGNvbHVtbnMgPSBbXHJcbiAgICB7XHJcbiAgICAgIGZpZWxkOiAnc3ViamVjdCcsIHdpZHRoOiAxMDAsIHRpdGxlOiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS5zdWJqZWN0JyksXHJcbiAgICB9LCB7XHJcbiAgICAgIGZpZWxkOiAnY29udGVudCcsIHdpZHRoOiAxNTAsIHRpdGxlOiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS5jb250ZW50JyksIHNob3dUaXBzOiB0cnVlLFxyXG4gICAgfSwge1xyXG4gICAgICBmaWVsZDogJ3NlbmRUaW1lJywgd2lkdGg6IDEwMCwgdGl0bGU6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLnNlbmRUaW1lJyksXHJcbiAgICAgIGZvcm1hdHRlcjoge1xyXG4gICAgICAgIHR5cGU6ICdlbnVtJyxcclxuICAgICAgICBvcHRpb25zOiB7IHZhbHVlRmllbGQ6ICd2YWx1ZScsIHRleHRGaWVsZDogJ3RleHQnLCBkYXRhOiB0aGlzLmFjdGl2aXR5U2VuZFRpbWUgfVxyXG4gICAgICB9LFxyXG4gICAgfSwge1xyXG4gICAgICBmaWVsZDogJ3NlbmRUeXBlJywgd2lkdGg6IDEwMCwgdGl0bGU6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLnNlbmRUeXBlJyksXHJcbiAgICAgIGZvcm1hdHRlcjoge1xyXG4gICAgICAgIHR5cGU6ICdlbnVtJyxcclxuICAgICAgICBvcHRpb25zOiB7IHZhbHVlRmllbGQ6ICd2YWx1ZScsIHRleHRGaWVsZDogJ25hbWUnLCBkYXRhOiB0aGlzLnVpc3RhdGUubWVzc2FnZUNoYW5uZWxzLm1hcChtID0+ICh7IHZhbHVlOiBtLmNvZGUsIG5hbWU6IG0ubmFtZSB9KSkgfVxyXG4gICAgICB9LFxyXG4gICAgfSwge1xyXG4gICAgICBmaWVsZDogJ3JlY2VpdmVyVGV4dCcsIHdpZHRoOiAxMjAsIHRpdGxlOiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS5yZWNlaXZlclRleHQnKSwgc2hvd1RpcHM6IHRydWVcclxuICAgIH1dO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHB1YmxpYyB1aXN0YXRlOiBQcm9jZXNzRGVzaWduZXJVSVN0YXRlLFxyXG4gICAgcHJpdmF0ZSBtZXNzYWdlOiBNZXNzYWdlclNlcnZpY2UsXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXHJcbiAgICBASW5qZWN0KExPQ0FMRV9JRCkgcHJpdmF0ZSBsb2NhbGVJZDogc3RyaW5nLFxyXG4gICAgQEluamVjdChXRl9MQU5HX1JFU09VUkNFUykgcHJpdmF0ZSByZXNvdXJjZXM6IGFueSxcclxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgbG9jYWxlUGlwZTogV2ZMb2NhbGVQaXBlLFxyXG4gICkge1xyXG4gICAgdGhpcy5sb2NhbGVQaXBlID0gdGhpcy5sb2NhbGVQaXBlIHx8IG5ldyBXZkxvY2FsZVBpcGUobG9jYWxlSWQsIHJlc291cmNlcyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHt9XHJcblxyXG4gIGVuZEVkaXQoZTogYW55KSB7XHJcbiAgICBjb25zb2xlLmxvZyhlKTtcclxuICB9XHJcblxyXG4gIGFjdGlzU2VsZWN0ID0gKHJvd0RhdGEpOiBPYnNlcnZhYmxlPFBpY2tlZFJlc3VsdD4gPT4ge1xyXG4gICAgZm9yIChjb25zdCByIG9mIHJvd0RhdGEpIHtcclxuICAgICAgdGhpcy50YXJnZXROb2RlSUQucHVzaChyLklkKTtcclxuICAgIH1cclxuICAgIHJldHVybiBvZih7XHJcbiAgICAgIGNsb3NlRGlhbG9nOiB0cnVlXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHBhcmFtQWZ0ZXJFZGl0ID0gKHJvd0luZGV4OiBudW1iZXIsIHJvd0RhdGE6IGFueSwgY29sdW1uPzogRGF0YUNvbHVtbikgPT4ge1xyXG4gICAgY29uc29sZS5sb2cocm93RGF0YSk7XHJcbiAgICBjb25zb2xlLmxvZyhyb3dJbmRleCk7XHJcbiAgICByZXR1cm4gb2YodHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXQgbWVzc2FnZU5vdGljZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5tZXNzYWdlTm90aWNlO1xyXG4gIH1cclxuXHJcbiAgc2V0IG1lc3NhZ2VOb3RpY2VzKG0pIHtcclxuICAgIHRoaXMubWVzc2FnZU5vdGljZSA9IG07XHJcbiAgfVxyXG5cclxuICBjbGlja09LKCkge1xyXG4gICAgaWYgKCF0aGlzLnRhcmdldE5vZGVJRCAmJiB0aGlzLnRhcmdldE5vZGVJRC5sZW5ndGggPT09IDApIHtcclxuICAgICAgdGhpcy5tZXNzYWdlLmluZm8odGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2Uubm9UYXJnZXROb2RlJykpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAoIXRoaXMubWVzc2FnZU5vdGljZSAmJiB0aGlzLm1lc3NhZ2VOb3RpY2UubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHRoaXMubWVzc2FnZS5pbmZvKHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLm5vTWVzc2FnZU5vdGlmeUF0dHJpYnV0ZScpKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYmF0Y2hTZXRWYWx1ZSA9IG5ldyBNZXNzYWdlTm90aWNlQmF0Y2hTZXQoKTtcclxuICAgIGJhdGNoU2V0VmFsdWUubWVzc2FnZU5vdGljZSA9IHRoaXMubWVzc2FnZU5vdGljZTtcclxuICAgIGJhdGNoU2V0VmFsdWUudGFyZ2V0Tm9kZUlEID0gdGhpcy50YXJnZXROb2RlSUQ7XHJcbiAgICBiYXRjaFNldFZhbHVlLmlzQmF0Y2hDb3B5ID0gdHJ1ZTtcclxuICAgIGNvbnN0IG9iamVjdCA9IHsgdmFsdWU6IGJhdGNoU2V0VmFsdWUsIHBhcmFtZXRlcnM6IG51bGwgfTtcclxuICAgIHRoaXMuc3VibWl0RW1pdHRlci5lbWl0KG9iamVjdCk7XHJcbiAgfVxyXG5cclxuICBjbGlja0NhbmNlbCgpIHtcclxuICAgIHRoaXMuY2xvc2VFbWl0dGVyLmVtaXQoKTtcclxuICB9XHJcbn1cclxuIl19