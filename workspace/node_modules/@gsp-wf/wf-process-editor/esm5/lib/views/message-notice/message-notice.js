/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ProcessDeUtil } from '../../domain/process-de-util';
var MessageNotice = /** @class */ (function () {
    function MessageNotice() {
        /**
         * 接收人列表
         */
        this.receivers = new Array();
        this.id = ProcessDeUtil.GenerateElementId();
        this.subject = '消息通知';
        // this.sendType = 'email';
        this.content = "{\"expr\":\"'\u60A8\u6709\u4E00\u6761\u6D88\u606F\u901A\u77E5\u3002'\",\"sexpr\":\"\"}";
    }
    return MessageNotice;
}());
export { MessageNotice };
if (false) {
    /** @type {?} */
    MessageNotice.prototype.id;
    /**
     * 消息内容
     * @type {?}
     */
    MessageNotice.prototype.content;
    /**
     * 消息发送时机
     * @type {?}
     */
    MessageNotice.prototype.sendTime;
    /**
     * 消息发送方式
     * @type {?}
     */
    MessageNotice.prototype.sendType;
    /**
     * 消息主题
     * @type {?}
     */
    MessageNotice.prototype.subject;
    /**
     * 消息接收人
     * @type {?}
     */
    MessageNotice.prototype.receiver;
    /**
     * 消息接收人显示
     * @type {?}
     */
    MessageNotice.prototype.receiverText;
    /**
     * 接收人列表
     * @type {?}
     */
    MessageNotice.prototype.receivers;
    /** @type {?} */
    MessageNotice.prototype.smsMessageTemplate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1ub3RpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLXByb2Nlc3MtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3ZpZXdzL21lc3NhZ2Utbm90aWNlL21lc3NhZ2Utbm90aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFLN0Q7SUF3Q0k7Ozs7UUFKQSxjQUFTLEdBQTJCLElBQUksS0FBSyxFQUFFLENBQUM7UUFLNUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxhQUFhLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QiwyQkFBMkI7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyx3RkFBcUMsQ0FBQztJQUN6RCxDQUFDO0lBQ0wsb0JBQUM7QUFBRCxDQUFDLEFBOUNELElBOENDOzs7O0lBNUNHLDJCQUFXOzs7OztJQUlYLGdDQUFnQjs7Ozs7SUFLaEIsaUNBQWlCOzs7OztJQUtqQixpQ0FBaUI7Ozs7O0lBS2pCLGdDQUFnQjs7Ozs7SUFLaEIsaUNBQWlCOzs7OztJQUtqQixxQ0FBcUI7Ozs7O0lBS3JCLGtDQUFnRDs7SUFFaEQsMkNBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvY2Vzc0RlVXRpbCB9IGZyb20gJy4uLy4uL2RvbWFpbi9wcm9jZXNzLWRlLXV0aWwnO1xyXG5pbXBvcnQgeyBXZkxvY2FsZVBpcGUgfSBmcm9tICcuLi8uLi9pMThuL3BpcGUvd2YtcHJvY2Vzcy1lZGl0b3ItbG9jYWxlLnBpcGUnO1xyXG5pbXBvcnQgeyBTbXNNZXNzYWdlVGVtcGxhdGUgfSBmcm9tICcuLi9zbXMtbWVzc2FnZS10ZW1wbGF0ZS9zbXMtbWVzc2FnZS10ZW1wbGF0ZSc7XHJcbmltcG9ydCB7IE1lc3NhZ2VSZWNlaXZlciB9IGZyb20gJy4vbWVzc2FnZS1yZWNlaXZlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgTWVzc2FnZU5vdGljZSB7XHJcblxyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5raI5oGv5YaF5a65XHJcbiAgICAgKi9cclxuICAgIGNvbnRlbnQ6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOa2iOaBr+WPkemAgeaXtuaculxyXG4gICAgICovXHJcbiAgICBzZW5kVGltZTogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5raI5oGv5Y+R6YCB5pa55byPXHJcbiAgICAgKi9cclxuICAgIHNlbmRUeXBlOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmtojmga/kuLvpophcclxuICAgICAqL1xyXG4gICAgc3ViamVjdDogc3RyaW5nO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5raI5oGv5o6l5pS25Lq6XHJcbiAgICAgKi9cclxuICAgIHJlY2VpdmVyOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmtojmga/mjqXmlLbkurrmmL7npLpcclxuICAgICAqL1xyXG4gICAgcmVjZWl2ZXJUZXh0OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmjqXmlLbkurrliJfooahcclxuICAgICAqL1xyXG4gICAgcmVjZWl2ZXJzOiBBcnJheTxNZXNzYWdlUmVjZWl2ZXI+ID0gbmV3IEFycmF5KCk7XHJcblxyXG4gICAgc21zTWVzc2FnZVRlbXBsYXRlOiBTbXNNZXNzYWdlVGVtcGxhdGVcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmlkID0gUHJvY2Vzc0RlVXRpbC5HZW5lcmF0ZUVsZW1lbnRJZCgpO1xyXG4gICAgICAgIHRoaXMuc3ViamVjdCA9ICfmtojmga/pgJrnn6UnO1xyXG4gICAgICAgIC8vIHRoaXMuc2VuZFR5cGUgPSAnZW1haWwnO1xyXG4gICAgICAgIHRoaXMuY29udGVudCA9IGB7XCJleHByXCI6XCJcXCfmgqjmnInkuIDmnaHmtojmga/pgJrnn6XjgIJcXCdcIixcInNleHByXCI6XCJcIn1gO1xyXG4gICAgfVxyXG59XHJcbi8vIDIwMjMtOC0yMSDnlLHkuo7pnIDopoHlrp7njrDlm73pmYXljJbvvIzmraTlpITlrprkuYnkuI3og73mj5Dlj5bvvJtcclxuLy8gZXhwb3J0IGNvbnN0IHByb2Nlc3NTZW5kVGltZSA9IFtcclxuLy8gICAgIHsgdmFsdWU6ICdQUk9DRVNTSU5TVEFOQ0VfQ09NUExFVEVEJywgdGV4dDogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UucHJvY0NvbXBsZXRlJykgfSxcclxuLy8gICAgIHsgdmFsdWU6ICdQUk9DRVNTSU5TVEFOQ0VfQUJPUlRFRCcsIHRleHQ6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLnByb2NBYm9ydGVkJykgfSxcclxuLy8gICAgIHsgdmFsdWU6ICdQUk9DRVNTSU5TVEFOQ0VfUk9MTEJBQ0snLCB0ZXh0OiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS5wcm9jUm9sbEJhY2snKSB9XHJcbi8vIF07XHJcblxyXG4vLyBleHBvcnQgY29uc3QgYWN0aXZpdHlTZW5kVGltZSA9IFtcclxuLy8gICAgIHsgdmFsdWU6ICdXT1JLSVRFTV9DUkVBVEVEJywgdGV4dDogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2Uud29ya0NyZWF0ZWQnKSB9LFxyXG4vLyAgICAgeyB2YWx1ZTogJ0FDVElWSVRZX0NPTVBMRVRFRCcsIHRleHQ6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLmFjdENvbXBsZXRlJykgfSxcclxuLy8gICAgIHsgdmFsdWU6ICdBQ1RJVklUWV9BQk9SVEVEJywgdGV4dDogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UuYWN0QWJvcnRlZCcpIH0sXHJcbi8vIF07XHJcblxyXG4vLyBleHBvcnQgY29uc3Qgc2VuZFR5cGVzID0gW1xyXG4vLyAgICAgeyB2YWx1ZTogJ2VtYWlsJywgbmFtZTogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UuZW1haWwnKSB9LFxyXG4vLyAgICAgeyB2YWx1ZTogJ3NtcycsIG5hbWU6IHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLnNtcycpIH0sXHJcbi8vICAgICB7IHZhbHVlOiAnY2xvdWRwbHVzJywgbmFtZTogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UuY2xvdWRwbHVzJykgfVxyXG4vLyBdO1xyXG5cclxuLy8gZXhwb3J0IGNvbnN0IFJlY2VpdmVyVHlwZSA9IFtcclxuLy8gICAgIHsgdmFsdWU6ICdwcm9jZXNzUGFydGljaXBhbnQnLCB0ZXh0OiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS5wcm9jZXNzUGFydGljaXBhbnQnKSB9LFxyXG4vLyAgICAgeyB2YWx1ZTogJ3ZhcmlhYmxlUGFydGljaXBhbnQnLCB0ZXh0OiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS52YXJpYWJsZVBhcnRpY2lwYW50JykgfSxcclxuLy8gICAgIHsgdmFsdWU6ICd1c2VyUGFydGljaXBhbnQnLCB0ZXh0OiAgdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UudXNlclBhcnRpY2lwYW50JykgfSxcclxuLy8gICAgIHsgdmFsdWU6ICdwb3NpdGlvblBhcnRpY2lwYW50JywgdGV4dDogIHRoaXMubG9jYWxlUGlwZS50cmFuc2Zvcm0oJ2NvbXBvbmVudC5NZXNzYWdlTm90aWNlLnBvc2l0aW9uUGFydGljaXBhbnQnKSB9LFxyXG4vLyBdO1xyXG5cclxuLy8gZXhwb3J0IGNvbnN0IFByb2Nlc3NQYXJ0aWNpcGFudFR5cGUgPSBbXHJcbi8vICAgICB7IHZhbHVlOiAncHJvY0luc3RDcmVhdG9yJywgdGV4dDogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UucHJvY0luc3RDcmVhdG9yJykgfSxcclxuLy8gICAgIHsgdmFsdWU6ICd3b3JrSXRlbVBhcnRpY2lwYW50JywgdGV4dDogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2Uud29ya0l0ZW1QYXJ0aWNpcGFudCcpIH0sXHJcbi8vICAgICB7IHZhbHVlOiAnYWN0aXZpdHlFeGVjdXRvclBhcnRpY2lwYW50JywgdGV4dDogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2UuYWN0aXZpdHlFeGVjdXRvclBhcnRpY2lwYW50JykgfSxcclxuLy8gXTtcclxuXHJcblxyXG4vLyBleHBvcnQgY29uc3QgVmFyaWFibGVPcmdUeXBlcyA9IFtcclxuLy8gICAgIHsgbmFtZTogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lk1lc3NhZ2VOb3RpY2Uuc3lzJyksIHZhbHVlOiAnU3lzJyB9LFxyXG4vLyAgICAgeyBuYW1lOiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQuTWVzc2FnZU5vdGljZS5hZG1pbmlzdHJhdGl2ZV9vcmdhbml6YXRpb24nKSwgdmFsdWU6ICdBZG1pbmlzdHJhdGl2ZV9vcmdhbml6YXRpb24nfSBdXHJcbiJdfQ==