/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { CommonModule } from "@angular/common";
import { HttpClientModule } from "@angular/common/http";
import { LOCALE_ID, NgModule } from "@angular/core";
import { FormsModule, ReactiveFormsModule } from "@angular/forms";
import { CacheService, HttpService, SessionService } from "@ecp-caf/caf-common";
import { ComboListModule } from "@farris/ui-combo-list";
import { FarrisCommonModule } from "@farris/ui-common";
import { DatagridModule } from "@farris/ui-datagrid";
import { DatagridEditorsModule, EditorProviders } from "@farris/ui-datagrid-editors";
import { FarrisDialogModule } from "@farris/ui-dialog";
import { AngularDraggableModule } from "@farris/ui-draggable";
import { FarrisFormsModule } from "@farris/ui-forms";
import { InputGroupModule } from "@farris/ui-input-group";
import { LanguageTextboxModule } from "@farris/ui-language-textbox";
import { ListFilterModule } from "@farris/ui-list-filter";
import { LoadingModule } from "@farris/ui-loading";
import { LookupModule } from "@farris/ui-lookup";
import { MessagerModule } from "@farris/ui-messager";
import { ModalModule } from "@farris/ui-modal";
import { NotifyModule } from "@farris/ui-notify";
import { PaginationModule } from "@farris/ui-pagination";
import { FResponseToolbarModule } from "@farris/ui-response-toolbar";
import { FarrisSectionModule } from "@farris/ui-section";
import { SplitterModule } from "@farris/ui-splitter";
import { SwitchModule } from "@farris/ui-switch";
import { FarrisTabsModule } from "@farris/ui-tabs";
import { TreeTableModule } from "@farris/ui-treetable";
import { BusinessObjectRtService } from "@gsp-lcm/bo-rt-service";
import { GSPMetadataRTService, GSPMetadataRTServiceModule, MetadataRTSelectModule } from "@gsp-lcm/metadatart-selector";
import { AppService, FrameworkService, FrmEventBus, FuncsService, LoadingService } from "@gsp-sys/rtf-common";
import { AifUiCommonModule } from "../aif-ui-common/aif-ui-common.module";
import { BillTypeHelpService } from "./bill-type-help.service";
import { BillTypeHelpComponent } from "./bill-type-help/bill-type-help.component";
var ɵ0 = localStorage.getItem('languageCode') || 'zh-CHS';
var BillTypeHelpModule = /** @class */ (function () {
    function BillTypeHelpModule() {
    }
    BillTypeHelpModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        HttpClientModule,
                        FormsModule,
                        ReactiveFormsModule,
                        MetadataRTSelectModule,
                        GSPMetadataRTServiceModule.forRoot(""),
                        FResponseToolbarModule,
                        ListFilterModule,
                        AngularDraggableModule,
                        FarrisCommonModule.forRoot(),
                        FarrisFormsModule,
                        FarrisSectionModule,
                        DatagridEditorsModule,
                        DatagridModule.forRoot(tslib_1.__spread(EditorProviders)),
                        ComboListModule,
                        InputGroupModule,
                        FarrisDialogModule,
                        SwitchModule,
                        FarrisTabsModule,
                        LookupModule,
                        TreeTableModule,
                        LoadingModule.forRoot({
                            message: 'Loading...'
                        }),
                        NotifyModule.forRoot(),
                        MessagerModule.forRoot({
                            width: 550,
                            height: 450
                        }),
                        ModalModule.forRoot(),
                        PaginationModule,
                        SplitterModule,
                        LanguageTextboxModule,
                        AifUiCommonModule,
                    ],
                    providers: [
                        CacheService,
                        SessionService,
                        HttpService,
                        FrmEventBus,
                        FuncsService,
                        LoadingService,
                        AppService,
                        FrameworkService,
                        { provide: LOCALE_ID, useValue: ɵ0 },
                        GSPMetadataRTService,
                        BusinessObjectRtService,
                        BillTypeHelpService,
                    ],
                    declarations: [
                        BillTypeHelpComponent,
                    ],
                    entryComponents: [
                        BillTypeHelpComponent,
                    ],
                },] }
    ];
    return BillTypeHelpModule;
}());
export { BillTypeHelpModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,