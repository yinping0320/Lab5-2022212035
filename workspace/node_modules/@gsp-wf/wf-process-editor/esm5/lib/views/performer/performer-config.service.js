/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
import { ReplaySubject } from 'rxjs/ReplaySubject';
var PerformerConfigService = /** @class */ (function () {
    function PerformerConfigService(http) {
        var _this = this;
        this.http = http;
        this.lookupConfig = new ReplaySubject();
        // let rootPath = '';
        // try {
        //     rootPath = (window as any).gspframeworkService.common.getBasePath.get();
        // } catch (error) {
        // }
        // this.http.get(rootPath + '/platform/runtime/wf/web/wf-proc-designer/assets/config/performerlookupconfig.json').subscribe((data) => {
        this.http.get('/platform/runtime/wf/web/wf-proc-designer/assets/config/performerlookupconfig.json').subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.lookupConfig.next(data);
        }));
    }
    /**
     * @return {?}
     */
    PerformerConfigService.prototype.getLookupConfig = /**
     * @return {?}
     */
    function () {
        return this.lookupConfig.asObservable();
    };
    PerformerConfigService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    PerformerConfigService.ctorParameters = function () { return [
        { type: HttpService }
    ]; };
    return PerformerConfigService;
}());
export { PerformerConfigService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PerformerConfigService.prototype.lookupConfig;
    /**
     * @type {?}
     * @private
     */
    PerformerConfigService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZm9ybWVyLWNvbmZpZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9wZXJmb3JtZXIvcGVyZm9ybWVyLWNvbmZpZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVsRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFbkQ7SUFHSSxnQ0FBb0IsSUFBaUI7UUFBckMsaUJBVUM7UUFWbUIsU0FBSSxHQUFKLElBQUksQ0FBYTtRQUQ3QixpQkFBWSxHQUFHLElBQUksYUFBYSxFQUFPLENBQUM7UUFFNUMscUJBQXFCO1FBQ3JCLFFBQVE7UUFDUiwrRUFBK0U7UUFDL0Usb0JBQW9CO1FBQ3BCLElBQUk7UUFDSix1SUFBdUk7UUFDdkksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsb0ZBQW9GLENBQUMsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQyxJQUFJO1lBQy9HLEtBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pDLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7OztJQUVELGdEQUFlOzs7SUFBZjtRQUNJLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM1QyxDQUFDOztnQkFqQkosVUFBVTs7OztnQkFKRixXQUFXOztJQXNCcEIsNkJBQUM7Q0FBQSxBQWxCRCxJQWtCQztTQWpCWSxzQkFBc0I7Ozs7OztJQUMvQiw4Q0FBZ0Q7Ozs7O0lBQ3BDLHNDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBSZXBsYXlTdWJqZWN0IH0gZnJvbSAncnhqcy9SZXBsYXlTdWJqZWN0JztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFBlcmZvcm1lckNvbmZpZ1NlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBsb29rdXBDb25maWcgPSBuZXcgUmVwbGF5U3ViamVjdDxhbnk+KCk7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBTZXJ2aWNlKSB7XHJcbiAgICAgICAgLy8gbGV0IHJvb3RQYXRoID0gJyc7XHJcbiAgICAgICAgLy8gdHJ5IHtcclxuICAgICAgICAvLyAgICAgcm9vdFBhdGggPSAod2luZG93IGFzIGFueSkuZ3NwZnJhbWV3b3JrU2VydmljZS5jb21tb24uZ2V0QmFzZVBhdGguZ2V0KCk7XHJcbiAgICAgICAgLy8gfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gdGhpcy5odHRwLmdldChyb290UGF0aCArICcvcGxhdGZvcm0vcnVudGltZS93Zi93ZWIvd2YtcHJvYy1kZXNpZ25lci9hc3NldHMvY29uZmlnL3BlcmZvcm1lcmxvb2t1cGNvbmZpZy5qc29uJykuc3Vic2NyaWJlKChkYXRhKSA9PiB7XHJcbiAgICAgICAgdGhpcy5odHRwLmdldCgnL3BsYXRmb3JtL3J1bnRpbWUvd2Yvd2ViL3dmLXByb2MtZGVzaWduZXIvYXNzZXRzL2NvbmZpZy9wZXJmb3JtZXJsb29rdXBjb25maWcuanNvbicpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvb2t1cENvbmZpZy5uZXh0KGRhdGEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldExvb2t1cENvbmZpZygpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmxvb2t1cENvbmZpZy5hc09ic2VydmFibGUoKTtcclxuICAgIH1cclxufVxyXG4iXX0=