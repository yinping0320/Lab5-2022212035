/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
var UsersNamePipe = /** @class */ (function () {
    function UsersNamePipe() {
    }
    /**
     * @param {?} users
     * @param {?=} defaultVal
     * @return {?}
     */
    UsersNamePipe.prototype.transform = /**
     * @param {?} users
     * @param {?=} defaultVal
     * @return {?}
     */
    function (users, defaultVal) {
        if (defaultVal === void 0) { defaultVal = ''; }
        /** @type {?} */
        var r = '';
        users.forEach((/**
         * @param {?} u
         * @return {?}
         */
        function (u) {
            r += u.performerName + 'ï¼Œ';
        }));
        if (r) {
            r = r.substring(0, r.length - 1);
        }
        return r ? r : defaultVal;
    };
    UsersNamePipe.decorators = [
        { type: Pipe, args: [{ name: 'usersName' },] }
    ];
    /** @nocollapse */
    UsersNamePipe.ctorParameters = function () { return []; };
    return UsersNamePipe;
}());
export { UsersNamePipe };
var UsersIdPipe = /** @class */ (function () {
    function UsersIdPipe() {
    }
    /**
     * @param {?} users
     * @param {?=} defaultVal
     * @return {?}
     */
    UsersIdPipe.prototype.transform = /**
     * @param {?} users
     * @param {?=} defaultVal
     * @return {?}
     */
    function (users, defaultVal) {
        if (defaultVal === void 0) { defaultVal = ''; }
        /** @type {?} */
        var r = '';
        users.forEach((/**
         * @param {?} u
         * @return {?}
         */
        function (u) {
            r += u.performerId + ',';
        }));
        if (r) {
            r = r.substring(0, r.length - 1);
        }
        return r ? r : defaultVal;
    };
    UsersIdPipe.decorators = [
        { type: Pipe, args: [{ name: 'usersId' },] }
    ];
    /** @nocollapse */
    UsersIdPipe.ctorParameters = function () { return []; };
    return UsersIdPipe;
}());
export { UsersIdPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlcnMtbmFtZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9wZXJmb3JtZXIvdmlld3MvdXNlci1wZXJmb3JtZXIvdXNlcnMtbmFtZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUdwRDtJQUVJO0lBQWdCLENBQUM7Ozs7OztJQUNqQixpQ0FBUzs7Ozs7SUFBVCxVQUFVLEtBQXdCLEVBQUUsVUFBZTtRQUFmLDJCQUFBLEVBQUEsZUFBZTs7WUFDM0MsQ0FBQyxHQUFHLEVBQUU7UUFDVixLQUFLLENBQUMsT0FBTzs7OztRQUFDLFVBQUEsQ0FBQztZQUNYLENBQUMsSUFBSSxDQUFDLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQztRQUMvQixDQUFDLEVBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxFQUFFO1lBQ0gsQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDcEM7UUFDRCxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7SUFDOUIsQ0FBQzs7Z0JBWkosSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRTs7OztJQWEzQixvQkFBQztDQUFBLEFBYkQsSUFhQztTQVpZLGFBQWE7QUFhMUI7SUFFSTtJQUFnQixDQUFDOzs7Ozs7SUFDakIsK0JBQVM7Ozs7O0lBQVQsVUFBVSxLQUF3QixFQUFFLFVBQWU7UUFBZiwyQkFBQSxFQUFBLGVBQWU7O1lBQzNDLENBQUMsR0FBRyxFQUFFO1FBQ1YsS0FBSyxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLENBQUM7WUFDWCxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUM7UUFDN0IsQ0FBQyxFQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsRUFBRTtZQUNILENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3BDO1FBQ0QsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBQzlCLENBQUM7O2dCQVpKLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7Ozs7SUFhekIsa0JBQUM7Q0FBQSxBQWJELElBYUM7U0FaWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQZXJmb3JtZXJFbnRpdHkgfSBmcm9tICcuLi8uLi9lbnRpdGllcy9wZXJmb3JtZXIuZW50aXR5JztcclxuXHJcbkBQaXBlKHsgbmFtZTogJ3VzZXJzTmFtZScgfSlcclxuZXhwb3J0IGNsYXNzIFVzZXJzTmFtZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XHJcbiAgICB0cmFuc2Zvcm0odXNlcnM6IFBlcmZvcm1lckVudGl0eVtdLCBkZWZhdWx0VmFsID0gJycpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCByID0gJyc7XHJcbiAgICAgICAgdXNlcnMuZm9yRWFjaCh1ID0+IHtcclxuICAgICAgICAgICAgciArPSB1LnBlcmZvcm1lck5hbWUgKyAn77yMJztcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAocikge1xyXG4gICAgICAgICAgICByID0gci5zdWJzdHJpbmcoMCwgci5sZW5ndGggLSAxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHIgPyByIDogZGVmYXVsdFZhbDtcclxuICAgIH1cclxufVxyXG5AUGlwZSh7IG5hbWU6ICd1c2Vyc0lkJyB9KVxyXG5leHBvcnQgY2xhc3MgVXNlcnNJZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIGNvbnN0cnVjdG9yKCkgeyB9XHJcbiAgICB0cmFuc2Zvcm0odXNlcnM6IFBlcmZvcm1lckVudGl0eVtdLCBkZWZhdWx0VmFsID0gJycpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCByID0gJyc7XHJcbiAgICAgICAgdXNlcnMuZm9yRWFjaCh1ID0+IHtcclxuICAgICAgICAgICAgciArPSB1LnBlcmZvcm1lcklkICsgJywnO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChyKSB7XHJcbiAgICAgICAgICAgIHIgPSByLnN1YnN0cmluZygwLCByLmxlbmd0aCAtIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gciA/IHIgOiBkZWZhdWx0VmFsO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==