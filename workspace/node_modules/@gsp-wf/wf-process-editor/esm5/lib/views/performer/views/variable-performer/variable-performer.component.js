/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, ViewChild, NgZone, ElementRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { HttpService } from '@ecp-caf/caf-common';
import { MessagerService } from '@farris/ui-messager';
import { VariablePerformerEntity } from '../../entities/variable-performer.entity';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
var VariablePerformerComponent = /** @class */ (function () {
    function VariablePerformerComponent(designerUIState, expr, ngZone, cdr, localeId, resources, localePipe, http, message) {
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.ngZone = ngZone;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.http = http;
        this.message = message;
        this.cls = 'd-flex flex-fill h-100';
        this.showClearButton = false;
        this.editState = true;
        this.bindingData = {};
        this.inSuiteField = [];
        this.variableOrgTypes = [
            { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
            { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
        ];
        this.userTypeButtonNeedShow = false;
        this.personnelRelationShipTypes = [
            { name: this.localePipe.transform('component.variablePerformer.oneself'), value: 'oneself' },
        ];
        this.curOrgType = this.variableOrgTypes[0].value;
        this.relationShipType = this.designerUIState.scene !== 'inSuite' ? this.personnelRelationShipTypes[0].value : null;
        this.scene = this.designerUIState.scene;
        this.users = [];
        this.user = new VariablePerformerEntity();
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    VariablePerformerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';
        this.http.get(url).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.userTypeButtonNeedShow = data;
            if (_this.designerUIState.scene === 'inSuite') {
                _this.userTypeButtonNeedShow = true;
                _this.variableOrgTypes = [
                    { name: _this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
                    { name: _this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
                    { name: _this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }
                ];
                _this.getInSuiteField(_this.user.varType ? _this.user.varType : 'Sys');
            }
        }));
    };
    /**
     * @return {?}
     */
    VariablePerformerComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.inputGroup.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    VariablePerformerComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    VariablePerformerComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    VariablePerformerComponent.prototype.toggleClearIcon = /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    function (event, isShow) {
        if (isShow === void 0) { isShow = false; }
        /** @type {?} */
        var str = isShow ? '' : 'none';
        /** @type {?} */
        var clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    VariablePerformerComponent.prototype.clear = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        // 流程变量表达式编辑器清空
        this.bindingData = {};
        this.users = [];
        this.user = null;
        this.variableOrgTypes = [
            { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
            { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
        ];
        if (this.designerUIState.scene === 'inSuite') {
            this.variableOrgTypes = [
                { name: this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
                { name: this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
                { name: this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }
            ];
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    VariablePerformerComponent.prototype.selectUsers = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.showExprHelp();
    };
    /**
     * @return {?}
     */
    VariablePerformerComponent.prototype.editConditon = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
        // this.expr.clearContext();
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.designerUIState.schemas), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var schema = _f.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        context = this.designerUIState.addContext(context);
        if (this.designerUIState.subActivityContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _g = tslib_1.__values(this.designerUIState.subActivityContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    _loop_1(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerUIState.activityComponentContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.designerUIState.activityComponentContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_2(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_d = context_1.return)) _d.call(context_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版
        this.expr.addExpressionText(this.condition);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            _this.condition = expressioninfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @return {?}
     */
    VariablePerformerComponent.prototype.showExprHelp = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_5, _a, e_6, _b, e_7, _c, e_8, _d, e_9, _e;
        // this.expr.clearContext();
        this.expr.setEditPattern(ExprEditMode.Advanced);
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _f = tslib_1.__values(this.designerUIState.schemas), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var schema = _g.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
                }
                finally { if (e_5) throw e_5.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerUIState.participantContext.length > 0) {
            try {
                for (var _h = tslib_1.__values(this.designerUIState.participantContext), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var variable = _j.value;
                    context.push(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (this.designerUIState.subActivityContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _k = tslib_1.__values(this.designerUIState.subActivityContext), _l = _k.next(); !_l.done; _l = _k.next()) {
                    var variable = _l.value;
                    _loop_3(variable);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            var _loop_4 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _m = tslib_1.__values(this.designerUIState.processVariableContext), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var variable = _o.value;
                    _loop_4(variable);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_2 = tslib_1.__values(context), context_2_1 = context_2.next(); !context_2_1.done; context_2_1 = context_2.next()) {
                    var v = context_2_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (context_2_1 && !context_2_1.done && (_e = context_2.return)) _e.call(context_2);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        if (this.users.length > 0) {
            this.expr.addExpressionText(this.users[0].varValue ? this.users[0].varValue : this.users[0].performerId);
        }
        else {
            this.expr.addExpressionText('');
        }
        // 2023-6-13 编辑时表达式编辑器只读
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            var e_10, _a;
            if (expressioninfo) {
                /** @type {?} */
                var user = new VariablePerformerEntity(expressioninfo, '', 'wf.VariableParticipantExpression');
                user.tag = 'expression';
                user.performerName = _this.variableParticipantName(expressioninfo);
                user.name = _this.variableParticipantName(expressioninfo);
                user.varType = _this.curOrgType;
                if (_this.designerUIState.scene === 'inSuite') {
                    user.relation = _this.relationShipType;
                }
                else {
                    user.relation = _this.personnelRelationShipTypes[0].value;
                }
                if (_this.variableParticipantName(expressioninfo) === '') {
                    // 如果先勾选行政人员id，再选择上下文变量，则提示并将变量值类型置为1
                    _this.message.info(_this.localePipe.transform('component.variablePerformer.cantUseContext'));
                    _this.curOrgType = _this.variableOrgTypes[0].value;
                }
                else {
                    _this.users = [user];
                    _this.user = user;
                }
                try {
                    for (var _b = tslib_1.__values(_this.designerUIState.participantContext), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var c = _c.value;
                        // 根据表达式中的函数名判断是否使用的是上下文变量,除三种特殊上下文变量其余放开限制
                        if (user.performerId.indexOf(c.key) >= 0) {
                            _this.variableOrgTypes = [
                                { name: _this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' }
                            ];
                            break;
                        }
                        else {
                            _this.variableOrgTypes = [
                                { name: _this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
                                { name: _this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
                            ];
                            if (_this.designerUIState.scene === 'inSuite') {
                                _this.variableOrgTypes = [
                                    { name: _this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
                                    { name: _this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
                                    { name: _this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }
                                ];
                            }
                        }
                    }
                }
                catch (e_10_1) { e_10 = { error: e_10_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_10) throw e_10.error; }
                }
            }
            else {
                _this.users = [];
                _this.user = null;
                _this.variableOrgTypes = [
                    { name: _this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
                    { name: _this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
                ];
                if (_this.designerUIState.scene === 'inSuite') {
                    _this.variableOrgTypes = [
                        { name: _this.localePipe.transform('component.variablePerformer.sys'), value: 'Sys' },
                        { name: _this.localePipe.transform('component.variablePerformer.administrative_staff'), value: 'Administrative_staff' },
                        { name: _this.localePipe.transform('component.variablePerformer.administrative_organization'), value: 'Administrative_organization' }
                    ];
                }
            }
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @return {?}
     */
    VariablePerformerComponent.prototype.getPerformers = /**
     * @return {?}
     */
    function () {
        if (this.user) {
            this.user.varValue = this.user.performerId ? this.user.performerId : this.user.varValue;
            this.user.name = this.user.performerName ? this.user.performerName : this.user.name;
            // this.user.name = this.getRealName(this.user);
            this.user.varType = this.curOrgType;
            this.user.relation = this.relationShipType;
            this.user.condition = this.condition ? this.condition : '';
        }
        return this.user;
    };
    // TODO: 变量参与者选多个值时名称只能显示一个，待调整
    // getRealName(user: any) {
    //   // 2023-6-15 计算是否是多值，排除表达式里自带的一个逗号
    //   let r = user.name;
    //   let id = user.varValue;
    //   let char = ',';
    //   let count = id.split(char).length - 1;
    //   if (count > 1) {
    //     r += ' 等';
    //   }
    //   return r;
    // }
    // TODO: 变量参与者选多个值时名称只能显示一个，待调整
    // getRealName(user: any) {
    //   // 2023-6-15 计算是否是多值，排除表达式里自带的一个逗号
    //   let r = user.name;
    //   let id = user.varValue;
    //   let char = ',';
    //   let count = id.split(char).length - 1;
    //   if (count > 1) {
    //     r += ' 等';
    //   }
    //   return r;
    // }
    /**
     * @private
     * @param {?} expr
     * @return {?}
     */
    VariablePerformerComponent.prototype.variableParticipantName = 
    // TODO: 变量参与者选多个值时名称只能显示一个，待调整
    // getRealName(user: any) {
    //   // 2023-6-15 计算是否是多值，排除表达式里自带的一个逗号
    //   let r = user.name;
    //   let id = user.varValue;
    //   let char = ',';
    //   let count = id.split(char).length - 1;
    //   if (count > 1) {
    //     r += ' 等';
    //   }
    //   return r;
    // }
    /**
     * @private
     * @param {?} expr
     * @return {?}
     */
    function (expr) {
        var e_11, _a, e_12, _b;
        try {
            for (var _c = tslib_1.__values(this.designerUIState.participantContext), _d = _c.next(); !_d.done; _d = _c.next()) {
                var c = _d.value;
                if (expr.indexOf(c.key) > -1) {
                    if (this.curOrgType !== 'Sys') { // 行政人员类型不允许使用上下文变量
                        return '';
                    }
                    return c.name;
                }
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_11) throw e_11.error; }
        }
        try {
            for (var _e = tslib_1.__values(this.designerUIState.processVariableContext), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                if (expr.indexOf(c.key) > -1) {
                    return c.name;
                }
            }
        }
        catch (e_12_1) { e_12 = { error: e_12_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_12) throw e_12.error; }
        }
        return JSON.parse(expr).expr;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    VariablePerformerComponent.prototype.orgTypeChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data === 'Sys') {
            this.curOrgType = this.variableOrgTypes[0].value;
        }
        else if (data === 'Administrative_staff') {
            this.curOrgType = this.variableOrgTypes[1].value;
        }
        else {
            this.curOrgType = this.variableOrgTypes[2].value;
        }
        // 如果是inSuite场景需要获取inSuite部门的负责人，分管领导等关系
        if (this.designerUIState.scene === 'inSuite') {
            this.getInSuiteField(data);
            this.relationShipType = null;
        }
        else {
            this.relationShipType = this.personnelRelationShipTypes[0].value;
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    VariablePerformerComponent.prototype.enabledStateChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.relationShipType = data.value;
    };
    /**
     * @param {?} fieldType
     * @return {?}
     */
    VariablePerformerComponent.prototype.getInSuiteField = /**
     * @param {?} fieldType
     * @return {?}
     */
    function (fieldType) {
        var _this = this;
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/dtProcDefs/getInSuiteFields/" + fieldType;
        this.http.get(url).subscribe((/**
         * @param {?} field
         * @return {?}
         */
        function (field) {
            var e_13, _a;
            _this.inSuiteField = [];
            try {
                for (var field_1 = tslib_1.__values(field), field_1_1 = field_1.next(); !field_1_1.done; field_1_1 = field_1.next()) {
                    var f = field_1_1.value;
                    /** @type {?} */
                    var type = {
                        name: f.field_description,
                        value: f.field
                    };
                    // 清空inSuiteField
                    _this.inSuiteField.push(type);
                }
            }
            catch (e_13_1) { e_13 = { error: e_13_1 }; }
            finally {
                try {
                    if (field_1_1 && !field_1_1.done && (_a = field_1.return)) _a.call(field_1);
                }
                finally { if (e_13) throw e_13.error; }
            }
        }));
    };
    VariablePerformerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-variable-performer',
                    template: "<div class=\"d-flex flex-fill farris-overflow-y-auto p-md-2\" style=\"background: #FFF;\">\r\n  <div class=\"d-flex flex-fill farris-overflow-y-auto mx-3 my-2\" style=\"border-radius:16px;border: 1.5px solid #F1F3F7;\">\r\n  <form style=\"width: 100%;\" >\r\n    <div class=\"d-flex m-2 flex-column w-100\">\r\n      <div class=\"d-flex flex-column\">\r\n        <div class=\"farris-form form-inline  farris-form-inline mr-5 my-2\">\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.variablePerformer.processVariables'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div #inputGroup class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [value]=\"users | variableName \" name=\"users\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\"\r\n                        (click)=\"clear($event)\">\r\n                        <i class=\"f-icon modal_close\"></i>\r\n                      </span>\r\n                      <span class=\"input-group-text\" (click)=\"selectUsers($event)\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ng-container *ngIf=\"userTypeButtonNeedShow\">\r\n            <div class=\"col-12 farris-group-auto my-4\">\r\n              <div class=\"farris-group-wrap\">\r\n                <div class=\"form-group farris-form-group\">\r\n                  <label class=\"col-form-label\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                    <span class=\"farris-label-text\">{{'component.variablePerformer.variableOrgTypes'|wfLocale}}</span>\r\n                  </label>\r\n                  <div class=\"farris-input-wrap\">\r\n                    <farris-radiogroup [data]=\"variableOrgTypes\" [horizontal]=\"true\"\r\n                                       [(ngModel)]=\"curOrgType\" name=\"referObject\"\r\n                                       (changeValue)=\"orgTypeChange($event)\"\r\n                    ></farris-radiogroup>\r\n                    <div class=\"farris-feedback valid-feedback\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n            <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{'component.variablePerformer.relationShipType'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-combo-list [data]=\"scene !== 'inSuite'?personnelRelationShipTypes:inSuiteField\"\r\n                                     [idField]=\"'value'\" [textField]=\"'name'\" [valueField]=\"'value'\" [readonly]=\"scene !== 'inSuite'\"\r\n                                     [(ngModel)]=\"relationShipType\" name=\"relationShipObject\" (valueChange)=\"enabledStateChange($event)\"\r\n                  ></farris-combo-list>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex flex-column\" style=\"background: #FFF;\">\r\n        <div class=\"farris-form form-inline farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.variablePerformer.condition'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"condition\" name=\"conditon\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text\" (click)=\"editConditon()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    VariablePerformerComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: NgZone },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] },
        { type: HttpService },
        { type: MessagerService }
    ]; };
    VariablePerformerComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        inputGroup: [{ type: ViewChild, args: ['inputGroup',] }]
    };
    return VariablePerformerComponent;
}());
export { VariablePerformerComponent };
if (false) {
    /** @type {?} */
    VariablePerformerComponent.prototype.cls;
    /** @type {?} */
    VariablePerformerComponent.prototype.inputGroup;
    /** @type {?} */
    VariablePerformerComponent.prototype.showClearButton;
    /** @type {?} */
    VariablePerformerComponent.prototype.editState;
    /** @type {?} */
    VariablePerformerComponent.prototype.bindingData;
    /** @type {?} */
    VariablePerformerComponent.prototype.inSuiteField;
    /** @type {?} */
    VariablePerformerComponent.prototype.variableOrgTypes;
    /** @type {?} */
    VariablePerformerComponent.prototype.userTypeButtonNeedShow;
    /** @type {?} */
    VariablePerformerComponent.prototype.personnelRelationShipTypes;
    /** @type {?} */
    VariablePerformerComponent.prototype.curOrgType;
    /** @type {?} */
    VariablePerformerComponent.prototype.relationShipType;
    /** @type {?} */
    VariablePerformerComponent.prototype.scene;
    /** @type {?} */
    VariablePerformerComponent.prototype.condition;
    /** @type {?} */
    VariablePerformerComponent.prototype.users;
    /** @type {?} */
    VariablePerformerComponent.prototype.user;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.localePipe;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    VariablePerformerComponent.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,