/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpService } from '@ecp-caf/caf-common';
var ComponentPerformerService = /** @class */ (function () {
    function ComponentPerformerService(http) {
        this.http = http;
    }
    /**
     * @param {?} helpId
     * @param {?} su
     * @param {?} pageIndex
     * @param {?} pageSiza
     * @param {?=} search
     * @return {?}
     */
    ComponentPerformerService.prototype.getLookUpData = /**
     * @param {?} helpId
     * @param {?} su
     * @param {?} pageIndex
     * @param {?} pageSiza
     * @param {?=} search
     * @return {?}
     */
    function (helpId, su, pageIndex, pageSiza, search) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/dtProcDefs/getHelpData?helpId=" + helpId + "&pageIndex=" + pageIndex + "&pageSize=" + pageSiza;
        if (search) {
            url += "&searchValue=" + JSON.stringify(search);
        }
        return this.http.get(url);
    };
    /**
     * @param {?} helpId
     * @param {?} su
     * @return {?}
     */
    ComponentPerformerService.prototype.getHelpMetaData = /**
     * @param {?} helpId
     * @param {?} su
     * @return {?}
     */
    function (helpId, su) {
        /** @type {?} */
        var url = "/api/runtime/lcm/v1.0/rt-metadatas/" + helpId;
        return this.http.get(url);
    };
    ComponentPerformerService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ComponentPerformerService.ctorParameters = function () { return [
        { type: HttpService }
    ]; };
    return ComponentPerformerService;
}());
export { ComponentPerformerService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ComponentPerformerService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LXBlcmZvcm1lci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1wcm9jZXNzLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi92aWV3cy9wZXJmb3JtZXIvdmlld3MvY29tcG9uZW50LXBlcmZvcm1lci9jb21wb25lbnQtcGVyZm9ybWVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR2xEO0lBRUksbUNBQW9CLElBQWlCO1FBQWpCLFNBQUksR0FBSixJQUFJLENBQWE7SUFFckMsQ0FBQzs7Ozs7Ozs7O0lBQ0QsaURBQWE7Ozs7Ozs7O0lBQWIsVUFBYyxNQUFjLEVBQUUsRUFBVSxFQUFFLFNBQWlCLEVBQUUsUUFBZ0IsRUFBRSxNQUFZOztZQUNuRixHQUFHLEdBQUcsd0RBQXNELE1BQU0sbUJBQWMsU0FBUyxrQkFBYSxRQUFVO1FBQ3BILElBQUksTUFBTSxFQUFFO1lBQ1IsR0FBRyxJQUFJLGtCQUFnQixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBRyxDQUFDO1NBQ25EO1FBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDOzs7Ozs7SUFDRCxtREFBZTs7Ozs7SUFBZixVQUFnQixNQUFjLEVBQUUsRUFBVTs7WUFDaEMsR0FBRyxHQUFHLHdDQUFzQyxNQUFRO1FBQzFELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7Z0JBZkosVUFBVTs7OztnQkFIRixXQUFXOztJQW1CcEIsZ0NBQUM7Q0FBQSxBQWhCRCxJQWdCQztTQWZZLHlCQUF5Qjs7Ozs7O0lBQ3RCLHlDQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cFNlcnZpY2UgfSBmcm9tICdAZWNwLWNhZi9jYWYtY29tbW9uJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ29tcG9uZW50UGVyZm9ybWVyU2VydmljZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBTZXJ2aWNlKSB7XHJcblxyXG4gICAgfVxyXG4gICAgZ2V0TG9va1VwRGF0YShoZWxwSWQ6IHN0cmluZywgc3U6IHN0cmluZywgcGFnZUluZGV4OiBudW1iZXIsIHBhZ2VTaXphOiBudW1iZXIsIHNlYXJjaD86IGFueSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgbGV0IHVybCA9IGAvYXBpL3J1bnRpbWUvd2YvdjEuMC9kdFByb2NEZWZzL2dldEhlbHBEYXRhP2hlbHBJZD0ke2hlbHBJZH0mcGFnZUluZGV4PSR7cGFnZUluZGV4fSZwYWdlU2l6ZT0ke3BhZ2VTaXphfWA7XHJcbiAgICAgICAgaWYgKHNlYXJjaCkge1xyXG4gICAgICAgICAgICB1cmwgKz0gYCZzZWFyY2hWYWx1ZT0ke0pTT04uc3RyaW5naWZ5KHNlYXJjaCl9YDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsKTtcclxuICAgIH1cclxuICAgIGdldEhlbHBNZXRhRGF0YShoZWxwSWQ6IHN0cmluZywgc3U6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gYC9hcGkvcnVudGltZS9sY20vdjEuMC9ydC1tZXRhZGF0YXMvJHtoZWxwSWR9YDtcclxuICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldCh1cmwpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==