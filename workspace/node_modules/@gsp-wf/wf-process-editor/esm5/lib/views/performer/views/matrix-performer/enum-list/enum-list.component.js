/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, ViewChild, TemplateRef, Injector, Optional, ChangeDetectorRef, LOCALE_ID, Inject } from '@angular/core';
import { DatagridComponent } from '@farris/ui-datagrid';
import { Subject } from 'rxjs/Subject';
import { MessagerService } from '@farris/ui-messager';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../../i18n/pipe/wf-process-editor-locale.pipe';
var EnumListComponent = /** @class */ (function () {
    function EnumListComponent(messageService, injector, cdr, localeId, resources, localePipe) {
        this.messageService = messageService;
        this.injector = injector;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.cls = 'farris-main-area flex-column';
        this.columns = [
            { field: 'key', width: 100, title: this.localePipe.transform('component.matrixPerformer.key') },
            { field: 'value', width: 100, title: this.localePipe.transform('component.matrixPerformer.value') }
        ];
        this.confirm = new Subject();
        this.closeModalEmitter = new Subject();
        /**
         * 显示值
         */
        this.data = new Array();
        this.selectedIds = new Array();
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    EnumListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 加载显示数据
     */
    /**
     * 加载显示数据
     * @param {?} enumValues
     * @return {?}
     */
    EnumListComponent.prototype.load = /**
     * 加载显示数据
     * @param {?} enumValues
     * @return {?}
     */
    function (enumValues) {
        this.data = tslib_1.__spread(enumValues);
    };
    /**
     * 确认
     */
    /**
     * 确认
     * @return {?}
     */
    EnumListComponent.prototype.onConfirm = /**
     * 确认
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.selectedIds.length === 0) {
            this.messageService.warning(this.localePipe.transform('component.matrixPerformer.notSelectEnum'));
        }
        /** @type {?} */
        var enumValues = this.data.filter((/**
         * @param {?} d
         * @return {?}
         */
        function (d) { return _this.selectedIds.findIndex((/**
         * @param {?} id
         * @return {?}
         */
        function (id) { return id === d.key; })) > -1; }));
        this.confirm.next(enumValues);
        this.closeModalEmitter.next();
    };
    /**
     * 取消
     */
    /**
     * 取消
     * @return {?}
     */
    EnumListComponent.prototype.cancel = /**
     * 取消
     * @return {?}
     */
    function () {
        this.closeModalEmitter.next();
    };
    EnumListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-enum-list',
                    template: "<ng-template #buttons>\r\n  <button class=\"btn btn-secondary\" (click)=\"cancel()\">{{'component.matrixPerformer.cancel'|wfLocale}}</button>\r\n  <button class=\"btn btn-primary\" (click)=\"onConfirm()\">{{'component.matrixPerformer.onConfirm'|wfLocale}}</button>\r\n</ng-template>\r\n\r\n<div class=\"f-page\">\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid [data]=\"data\" [columns]=\"columns\" #dg=\"datagrid\" [fit]=\"true\"\r\n                       [idField]=\"'key'\" [fitColumns]=\"true\" [showLineNumber]=\"true\" [(checkValues)]=\"selectedIds\"\r\n                       [showAllCheckbox]=\"true\" [showCheckbox]=\"true\" [multiSelect]=\"false\" [checkOnSelect]=\"true\" [selectOnCheck]=\"true\"\r\n                       lineNumberTitle=\"{{'component.matrixPerformer.lineNumber'|wfLocale}}\" [lineNumberWidth]=\"50\" [striped]=\"true\" [virtualized]=\"true\" [pagination]=\"false\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    EnumListComponent.ctorParameters = function () { return [
        { type: MessagerService },
        { type: Injector },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] }
    ]; };
    EnumListComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        dg: [{ type: ViewChild, args: ['dg',] }],
        btnRef: [{ type: ViewChild, args: ['buttons',] }]
    };
    return EnumListComponent;
}());
export { EnumListComponent };
if (false) {
    /** @type {?} */
    EnumListComponent.prototype.cls;
    /** @type {?} */
    EnumListComponent.prototype.columns;
    /** @type {?} */
    EnumListComponent.prototype.dg;
    /** @type {?} */
    EnumListComponent.prototype.btnRef;
    /** @type {?} */
    EnumListComponent.prototype.confirm;
    /** @type {?} */
    EnumListComponent.prototype.closeModalEmitter;
    /**
     * 显示值
     * @type {?}
     */
    EnumListComponent.prototype.data;
    /** @type {?} */
    EnumListComponent.prototype.selectedIds;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.messageService;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    EnumListComponent.prototype.localePipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvdmlld3MvcGVyZm9ybWVyL3ZpZXdzL21hdHJpeC1wZXJmb3JtZXIvZW51bS1saXN0L2VudW0tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFdBQVcsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqSixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFHekc7SUE2QkUsMkJBQ1UsY0FBK0IsRUFDL0IsUUFBa0IsRUFDTixHQUFzQixFQUNmLFFBQWdCLEVBQ1IsU0FBYyxFQUM3QixVQUF3QjtRQUxwQyxtQkFBYyxHQUFkLGNBQWMsQ0FBaUI7UUFDL0IsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNOLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBQ2YsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUNSLGNBQVMsR0FBVCxTQUFTLENBQUs7UUFDN0IsZUFBVSxHQUFWLFVBQVUsQ0FBYztRQXhCOUMsUUFBRyxHQUFHLDhCQUE4QixDQUFDO1FBRXJDLFlBQU8sR0FBRztZQUNSLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQywrQkFBK0IsQ0FBQyxFQUFFO1lBQy9GLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxpQ0FBaUMsQ0FBQyxFQUFDO1NBQUMsQ0FBQztRQUl0RyxZQUFPLEdBQUcsSUFBSSxPQUFPLEVBQU8sQ0FBQztRQUM3QixzQkFBaUIsR0FBRyxJQUFJLE9BQU8sRUFBTyxDQUFDOzs7O1FBS3ZDLFNBQUksR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBRW5CLGdCQUFXLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQVV4QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxZQUFZLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzVFLENBQUM7Ozs7SUFFRixvQ0FBUTs7O0lBQVI7SUFFQSxDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNILGdDQUFJOzs7OztJQUFKLFVBQUssVUFBVTtRQUNiLElBQUksQ0FBQyxJQUFJLG9CQUFPLFVBQVUsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSCxxQ0FBUzs7OztJQUFUO1FBQUEsaUJBT0M7UUFOQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRztZQUNsQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDLENBQUM7U0FDbkc7O1lBQ0ssVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTTs7OztRQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxFQUFFLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBWixDQUFZLEVBQUMsR0FBRyxDQUFDLENBQUMsRUFBbkQsQ0FBbUQsRUFBQztRQUM3RixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNILGtDQUFNOzs7O0lBQU47UUFDRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQzs7Z0JBcEVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsMmtDQUF5QztvQkFFekMsU0FBUyxFQUFFO3dCQUNSLFlBQVk7cUJBQ2Q7O2lCQUNGOzs7O2dCQVhRLGVBQWU7Z0JBSHlDLFFBQVE7Z0JBQVksaUJBQWlCLHVCQXVDakcsUUFBUTs2Q0FDUixNQUFNLFNBQUMsU0FBUztnREFDaEIsTUFBTSxTQUFDLGlCQUFpQjtnQkFyQ0QsWUFBWSx1QkFzQ25DLFFBQVE7OztzQkF6QlYsV0FBVyxTQUFDLE9BQU87cUJBTW5CLFNBQVMsU0FBQyxJQUFJO3lCQUNkLFNBQVMsU0FBQyxTQUFTOztJQXFEdEIsd0JBQUM7Q0FBQSxBQXRFRCxJQXNFQztTQTlEWSxpQkFBaUI7OztJQUU1QixnQ0FDcUM7O0lBRXJDLG9DQUVzRzs7SUFDdEcsK0JBQXVDOztJQUN2QyxtQ0FBK0M7O0lBRS9DLG9DQUE2Qjs7SUFDN0IsOENBQXVDOzs7OztJQUt2QyxpQ0FBbUI7O0lBRW5CLHdDQUEwQjs7Ozs7SUFHeEIsMkNBQXVDOzs7OztJQUN2QyxxQ0FBMEI7Ozs7O0lBQzFCLGdDQUEwQzs7Ozs7SUFDMUMscUNBQTJDOzs7OztJQUMzQyxzQ0FBaUQ7Ozs7O0lBQ2pELHVDQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBIb3N0QmluZGluZywgVmlld0NoaWxkLCBUZW1wbGF0ZVJlZiwgSW5qZWN0b3IsIE9wdGlvbmFsLCBDaGFuZ2VEZXRlY3RvclJlZiwgTE9DQUxFX0lELCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMvU3ViamVjdCc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBXRl9MQU5HX1JFU09VUkNFUywgV2ZMb2NhbGVQaXBlIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vaTE4bi9waXBlL3dmLXByb2Nlc3MtZWRpdG9yLWxvY2FsZS5waXBlJztcclxuaW1wb3J0IHsgV0ZfUFJPQ0VTU19FRElUT1JfTEFOR19SRVNPVVJDRVMgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9pMThuL2Fzc2V0cy9sYW5nLnJlc291cmNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXBwLWVudW0tbGlzdCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2VudW0tbGlzdC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vZW51bS1saXN0LmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICAgV2ZMb2NhbGVQaXBlLFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEVudW1MaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpXHJcbiAgY2xzID0gJ2ZhcnJpcy1tYWluLWFyZWEgZmxleC1jb2x1bW4nO1xyXG5cclxuICBjb2x1bW5zID0gW1xyXG4gICAgeyBmaWVsZDogJ2tleScsIHdpZHRoOiAxMDAsIHRpdGxlOiB0aGlzLmxvY2FsZVBpcGUudHJhbnNmb3JtKCdjb21wb25lbnQubWF0cml4UGVyZm9ybWVyLmtleScpIH0sXHJcbiAgICB7IGZpZWxkOiAndmFsdWUnLCB3aWR0aDogMTAwLCB0aXRsZTogdGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lm1hdHJpeFBlcmZvcm1lci52YWx1ZScpfV07XHJcbiAgQFZpZXdDaGlsZCgnZGcnKSBkZzogRGF0YWdyaWRDb21wb25lbnQ7XHJcbiAgQFZpZXdDaGlsZCgnYnV0dG9ucycpIGJ0blJlZjogVGVtcGxhdGVSZWY8YW55PjtcclxuXHJcbiAgY29uZmlybSA9IG5ldyBTdWJqZWN0PGFueT4oKTtcclxuICBjbG9zZU1vZGFsRW1pdHRlciA9IG5ldyBTdWJqZWN0PGFueT4oKTtcclxuXHJcbiAgLyoqXHJcbiAgICog5pi+56S65YC8XHJcbiAgICovXHJcbiAgZGF0YSA9IG5ldyBBcnJheSgpO1xyXG5cclxuICBzZWxlY3RlZElkcyA9IG5ldyBBcnJheSgpO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgbWVzc2FnZVNlcnZpY2U6IE1lc3NhZ2VyU2VydmljZSxcclxuICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLFxyXG4gICAgQE9wdGlvbmFsKCkgcHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgQEluamVjdChMT0NBTEVfSUQpIHByaXZhdGUgbG9jYWxlSWQ6IHN0cmluZyxcclxuICAgIEBJbmplY3QoV0ZfTEFOR19SRVNPVVJDRVMpIHByaXZhdGUgcmVzb3VyY2VzOiBhbnksXHJcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIGxvY2FsZVBpcGU6IFdmTG9jYWxlUGlwZSxcclxuICApIHtcclxuICAgIHRoaXMubG9jYWxlUGlwZSA9IHRoaXMubG9jYWxlUGlwZSB8fCBuZXcgV2ZMb2NhbGVQaXBlKGxvY2FsZUlkLCByZXNvdXJjZXMpO1xyXG4gICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG5cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWKoOi9veaYvuekuuaVsOaNrlxyXG4gICAqL1xyXG4gIGxvYWQoZW51bVZhbHVlcykge1xyXG4gICAgdGhpcy5kYXRhID0gWy4uLmVudW1WYWx1ZXNdO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog56Gu6K6kXHJcbiAgICovXHJcbiAgb25Db25maXJtKCk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWRJZHMubGVuZ3RoID09PSAwICkge1xyXG4gICAgICB0aGlzLm1lc3NhZ2VTZXJ2aWNlLndhcm5pbmcodGhpcy5sb2NhbGVQaXBlLnRyYW5zZm9ybSgnY29tcG9uZW50Lm1hdHJpeFBlcmZvcm1lci5ub3RTZWxlY3RFbnVtJykpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgZW51bVZhbHVlcyA9IHRoaXMuZGF0YS5maWx0ZXIoZCA9PiB0aGlzLnNlbGVjdGVkSWRzLmZpbmRJbmRleChpZCA9PiBpZCA9PT0gZC5rZXkpID4gLTEpO1xyXG4gICAgdGhpcy5jb25maXJtLm5leHQoZW51bVZhbHVlcyk7XHJcbiAgICB0aGlzLmNsb3NlTW9kYWxFbWl0dGVyLm5leHQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWPlua2iFxyXG4gICAqL1xyXG4gIGNhbmNlbCgpOiB2b2lkIHtcclxuICAgIHRoaXMuY2xvc2VNb2RhbEVtaXR0ZXIubmV4dCgpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19