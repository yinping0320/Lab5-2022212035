/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, ViewChild, ElementRef, NgZone, ComponentFactoryResolver, Injector, Output, EventEmitter, TemplateRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { SysFarrisLookupComponent } from '@gsp-sys/sysmgr-ui';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { PositionPerformerEntity } from '../../entities/position-performer.entity';
import { SysLookupDetailComponent } from '@gsp-sys/sysmgr-lookup';
import { BsModalService } from '@farris/ui-modal';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
import { PositionsNamePipe } from './positions-name.pipe';
var PositionPerformerComponent = /** @class */ (function () {
    function PositionPerformerComponent(designerUIState, expr, ngZone, resolver, injector, modalService, cdr, localeId, resources, localePipe, positionsNamePipe) {
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.ngZone = ngZone;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.positionsNamePipe = positionsNamePipe;
        this.cls = 'd-flex flex-fill h-100';
        this.closeEmitter = new EventEmitter();
        this.submitEmitter = new EventEmitter();
        this.showClearButton = false;
        this.isRequired = false;
        this.groupIcon = '<i class="f-icon f-icon-lookup"></i>';
        this.positionTypes = [
            { value: '0', text: this.localePipe.transform('component.positionPerformer.orgPosition') },
            { value: '1', text: this.localePipe.transform('component.positionPerformer.generalPosition') }
        ];
        this.performerName = '';
        this.style = { background: '#FFF' };
        this.newFilter = {};
        this.treeFilter = {};
        this.curPosIdList = [];
        this.editState = true;
        this.showCondition = true;
        this.positions = [];
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
        this.position = this.position || new PositionPerformerEntity();
        this.performerName = this.performerName || (this.positions && this.positions.length ? this.positionsNamePipe.transform(this.positions) : this.position.performerName || '');
        if (this.designerUIState.scene === 'inSuite') {
            this.position.positionType = '1';
            this.newFilter = { positionType: '1' };
            this.style = { background: '#FFF', height: '150px' };
        }
    }
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.designerUIState.getOrgConfig().subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            if (re && re.currentValue === 'true') {
                _this.isRequired = true;
            }
        }));
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.inputGroup.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PositionPerformerComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PositionPerformerComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    PositionPerformerComponent.prototype.toggleClearIcon = /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    function (event, isShow) {
        if (isShow === void 0) { isShow = false; }
        /** @type {?} */
        var str = isShow ? '' : 'none';
        /** @type {?} */
        var clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.submitEmitter.emit(this.position);
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeEmitter.emit();
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.position.performerId = null;
        this.position.performerName = null;
        this.performerName = '';
    };
    /**
     * @param {?} data
     * @return {?}
     */
    PositionPerformerComponent.prototype.positionTypeChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data.value === '0') {
            this.newFilter = { positionType: '0' };
            this.positionType = '0';
        }
        else {
            this.newFilter = { positionType: '1' };
            this.positionType = '1';
        }
        this.clear();
        this.position.orgType = null;
        this.position.orgId = null;
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.selectOrganition = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a, e_2, _b, e_3, _c;
        // this.expr.clearContext();
        if (this.position.positionType === '1') {
            if (this.designerUIState.schemas.length > 0) {
                try {
                    for (var _d = tslib_1.__values(this.designerUIState.schemas), _e = _d.next(); !_e.done; _e = _d.next()) {
                        var schema = _e.value;
                        this.expr.addSchema('Schema', schema);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                    /** @type {?} */
                    var entityType = this.designerUIState.schemas[0].entityTypes[0];
                    this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
                }
            }
            /** @type {?} */
            var context_2 = new Array();
            if (this.designerUIState.subActivityContext.length > 0) {
                var _loop_1 = function (variable) {
                    if (!context_2.some((/**
                     * @param {?} c
                     * @return {?}
                     */
                    function (c) { return c.key === variable.key; }))) {
                        context_2.push(variable);
                    }
                };
                try {
                    for (var _f = tslib_1.__values(this.designerUIState.subActivityContext), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var variable = _g.value;
                        _loop_1(variable);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            if (context_2.length > 0) {
                try {
                    for (var context_1 = tslib_1.__values(context_2), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                        var v = context_1_1.value;
                        this.expr.addContext(v);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (context_1_1 && !context_1_1.done && (_c = context_1.return)) _c.call(context_1);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
            this.expr.setEditPattern(ExprEditMode.Advanced);
            this.expr.addExpressionText(this.position.orgId);
            this.expr.buildExpression().then((/**
             * @param {?} expr
             * @return {?}
             */
            function (expr) {
                _this.position.orgId = expr;
                //点击确定后，去除表达式里面的新增的上下文变量
                if (context_2.length > 0) {
                    _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                     * @param {?} x
                     * @return {?}
                     */
                    function (x) { return !context_2.some((/**
                     * @param {?} y
                     * @return {?}
                     */
                    function (y) { return y.key === x.key; })); }));
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.selectPosition = /**
     * @return {?}
     */
    function () {
        this.setPosition();
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.editCondition = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_4, _a, e_5, _b, e_6, _c, e_7, _d;
        // this.expr.clearContext();
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.designerUIState.schemas), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var schema = _f.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_4) throw e_4.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        context = this.designerUIState.addContext(context);
        if (this.designerUIState.subActivityContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _g = tslib_1.__values(this.designerUIState.subActivityContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    _loop_2(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.designerUIState.activityComponentContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.designerUIState.activityComponentContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_3(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_3 = tslib_1.__values(context), context_3_1 = context_3.next(); !context_3_1.done; context_3_1 = context_3.next()) {
                    var v = context_3_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (context_3_1 && !context_3_1.done && (_d = context_3.return)) _d.call(context_3);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版
        this.expr.addExpressionText(this.position.condition);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            var e_8, _a;
            _this.position.condition = expressioninfo;
            try {
                for (var _b = tslib_1.__values(_this.positions), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    p.condition = expressioninfo;
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_8) throw e_8.error; }
            }
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @param {?} re
     * @return {?}
     */
    PositionPerformerComponent.prototype.orgTypeChange = /**
     * @param {?} re
     * @return {?}
     */
    function (re) {
        this.position.orgType = re.data.value;
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.clearOrgType = /**
     * @return {?}
     */
    function () {
        this.position.orgType = null;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    PositionPerformerComponent.prototype.positionsSelected = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_9, _a;
        this.positions = [];
        if (data || data.data.length > 0) {
            /** @type {?} */
            var positions = [];
            try {
                for (var _b = tslib_1.__values(data.data), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var dataSelected = _c.value;
                    if (this.editState) {
                        this.position = new PositionPerformerEntity();
                        this.position.performerId = dataSelected.id;
                        this.position.performerName = dataSelected.name;
                        this.position.type = 'wf.PositionParticipantExpression';
                        if (!this.position.positionType) {
                            this.position.positionType = dataSelected.posType + '';
                            this.newFilter = {
                                positionType: dataSelected.posType
                            };
                        }
                        this.position.isRequired = this.isRequired;
                        this.position.condition = this.condition ? this.condition : "";
                        positions.push(this.position);
                    }
                    else {
                        this.position.performerId = dataSelected.id;
                        this.position.performerName = dataSelected.name;
                        this.position.type = 'wf.PositionParticipantExpression';
                        if (!this.position.positionType) {
                            this.position.positionType = dataSelected.posType + '';
                            this.newFilter = {
                                positionType: dataSelected.posType
                            };
                        }
                        this.position.isRequired = this.isRequired;
                        this.position.condition = this.condition ? this.condition : "";
                        positions.push(this.position);
                    }
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
            this.positions = tslib_1.__spread(positions);
            this.performerName = this.positions && this.positions.length ? (this.positionsNamePipe.transform(this.positions)) : (this.position.performerName ? this.position.performerName : '');
        }
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.setPosition = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.positions = [];
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(SysLookupDetailComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.initGridIdList = this.curPosIdList;
        compRef.instance.treeFilter = this.treeFilter;
        compRef.instance.listFilter = this.newFilter;
        compRef.instance.sourceType = 'position';
        compRef.instance.multiSelect = false;
        // 编辑状态下只能单选
        if (this.positionType === "0" && this.editState) {
            compRef.instance.multiSelect = true;
        }
        /** @type {?} */
        var modalConfig = {
            title: this.localePipe.transform('component.positionPerformer.sysPositions'),
            width: 1000,
            height: 550,
            showButtons: true,
            buttons: compRef.instance.btnTemplateRef,
            showMaxButton: true,
            resizable: false
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        // 取消后
        compRef.instance.afterCancle.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            // 消失模态框
            dialog.close();
        }));
        // 确认后
        compRef.instance.afterConfirm.subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.positionsSelected(res);
        }));
    };
    /**
     * @return {?}
     */
    PositionPerformerComponent.prototype.getPerformers = /**
     * @return {?}
     */
    function () {
        if (!this.editState) {
            this.positions.push(this.position);
        }
        return this.positions;
    };
    PositionPerformerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-position-performer',
                    template: "<div class=\"d-flex flex-fill farris-overflow-y-auto p-md-2\" style=\"background: #FFF;\">\r\n  <div class=\"d-flex flex-fill farris-overflow-y-auto mx-3 my-2\" style=\"border-radius:16px;border: 1.5px solid #F1F3F7;\">\r\n  <form style=\"width: 100%;\">\r\n    <div class=\"d-flex m-2 flex-column w-100\" style=\"margin-top: 20px!important;\">\r\n      <div class=\"d-flex flex-column\" [ngStyle]=\"style\">\r\n        <div class=\"farris-form form-inline  farris-form-inline mr-5\">\r\n          <div *ngIf=\"designerUIState.scene!=='inSuite'\" class=\"col-12 farris-group-auto my-3\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.positionPerformer.positionType'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-combo-list [(ngModel)]=\"position.positionType\" name=\"positionType\" [panelHeight]=\"'auto'\" [idField]=\"'value'\"\r\n                    [textField]=\"'text'\" [data]=\"positionTypes\" (valueChange)=\"positionTypeChange($event)\"\r\n                    [panelHeight]=\"'auto'\" [enableClear]=\"false\">\r\n                  </farris-combo-list>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\">{{designerUIState.scene==='inSuite'?('component.positionPerformer.role'|wfLocale):('component.positionPerformer.position'|wfLocale)}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div #inputGroup class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"performerName\" name=\"positionName\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\" (click)=\"clear()\">\r\n                        <i class=\"f-icon modal_close\"></i>\r\n                      </span>\r\n                      <span class=\"input-group-text\" (click)=\"selectPosition()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"designerUIState.scene!=='inSuite' && position.positionType === '1'\" class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <ng-container *ngIf=\"isRequired&&position.positionType==='1'\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                  </ng-container>\r\n                  <span class=\"farris-label-text\">{{'component.positionPerformer.sysType'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <farris-combo-list [(ngModel)]=\"position.orgType\" name=\"orgType\" [idField]=\"'value'\" [textField]=\"'text'\" [valueField]=\"'value'\"\r\n                    [data]=\"designerUIState.orgTypeCollection\" [panelHeight]=\"'auto'\" (clear)=\"clearOrgType()\"\r\n                    (selectChange)='orgTypeChange($event)' [readonly]=\"!(position.positionType==='1')\" placeholder=\"{{position.positionType==='1'?('component.positionPerformer.placeholder'|wfLocale):''}}\">\r\n                  </farris-combo-list>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"designerUIState.scene!=='inSuite' && position.positionType === '1'\" class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <ng-container *ngIf=\"isRequired&&position.positionType==='1'\">\r\n                    <span class=\"farris-label-info text-danger\">*</span>\r\n                  </ng-container>\r\n                  <span class=\"farris-label-text\">{{'component.positionPerformer.orgId'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <input-group class=\"form-control\" style=\"width: 100%;padding:0;border:0;\" [enableClear]=\"false\"\r\n                    [showButtonWhenDisabled]=\"false\" [readonly]=\"!(position.positionType==='1')\"\r\n                    [(ngModel)]=\"position.orgId\" name=\"organization\" placeholder=\"{{position.positionType==='1'?('component.positionPerformer.placeholder'|wfLocale):''}}\"\r\n                    [editable]=\"false\" (clickHandle)=\"selectOrganition()\" [groupText]=\"groupIcon\"></input-group>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"showCondition\" class=\"d-flex flex-column\" style=\"background: #FFF;\">\r\n        <div class=\"farris-form form-inline farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-3\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.positionPerformer.condition'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"this.position.condition\" name=\"conditon\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text\" (click)=\"editCondition()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>\r\n\r\n<ng-template #buttonRef>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3\" (click)=\"clickCancel()\">{{'component.positionPerformer.clickCancel'|wfLocale}}</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">{{'component.positionPerformer.clickOK'|wfLocale}}</button>\r\n</ng-template>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PositionPerformerComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: NgZone },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] },
        { type: PositionsNamePipe }
    ]; };
    PositionPerformerComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        closeEmitter: [{ type: Output }],
        submitEmitter: [{ type: Output }],
        posiHelp: [{ type: ViewChild, args: [SysFarrisLookupComponent,] }],
        buttonRef: [{ type: ViewChild, args: ['buttonRef',] }],
        inputGroup: [{ type: ViewChild, args: ['inputGroup',] }]
    };
    return PositionPerformerComponent;
}());
export { PositionPerformerComponent };
if (false) {
    /** @type {?} */
    PositionPerformerComponent.prototype.cls;
    /** @type {?} */
    PositionPerformerComponent.prototype.closeEmitter;
    /** @type {?} */
    PositionPerformerComponent.prototype.submitEmitter;
    /** @type {?} */
    PositionPerformerComponent.prototype.posiHelp;
    /** @type {?} */
    PositionPerformerComponent.prototype.buttonRef;
    /** @type {?} */
    PositionPerformerComponent.prototype.inputGroup;
    /** @type {?} */
    PositionPerformerComponent.prototype.showClearButton;
    /** @type {?} */
    PositionPerformerComponent.prototype.isRequired;
    /** @type {?} */
    PositionPerformerComponent.prototype.groupIcon;
    /** @type {?} */
    PositionPerformerComponent.prototype.positionTypes;
    /** @type {?} */
    PositionPerformerComponent.prototype.performerName;
    /** @type {?} */
    PositionPerformerComponent.prototype.style;
    /** @type {?} */
    PositionPerformerComponent.prototype.condition;
    /** @type {?} */
    PositionPerformerComponent.prototype.newFilter;
    /** @type {?} */
    PositionPerformerComponent.prototype.treeFilter;
    /** @type {?} */
    PositionPerformerComponent.prototype.curPosIdList;
    /** @type {?} */
    PositionPerformerComponent.prototype.editState;
    /** @type {?} */
    PositionPerformerComponent.prototype.showCondition;
    /** @type {?} */
    PositionPerformerComponent.prototype.positionType;
    /** @type {?} */
    PositionPerformerComponent.prototype.position;
    /** @type {?} */
    PositionPerformerComponent.prototype.positions;
    /** @type {?} */
    PositionPerformerComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.localePipe;
    /**
     * @type {?}
     * @private
     */
    PositionPerformerComponent.prototype.positionsNamePipe;
}
//# sourceMappingURL=data:application/json;base64,