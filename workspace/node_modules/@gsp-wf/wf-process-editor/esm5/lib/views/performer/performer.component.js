/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, Input, ViewChild, TemplateRef, ComponentFactoryResolver, Injector } from '@angular/core';
import { PerformerUIState } from './performer.uistate';
import { PerformerRepository } from './performer.repository';
import { PerformerViewModel } from './performer.viewmodel';
import { FormBuilder } from '@angular/forms';
import { BsModalService } from '@farris/ui-modal';
import { PerformerEditComponent } from './views/performer-edit/performer-edit.component';
import { MessagerService } from '@farris/ui-messager';
import { PerformerOptionsComponent } from './views/performer-options/performer-options.component';
import { DialogComponent } from '@farris/ui-dialog';
import { ProcessDesignerUIState } from '../../app/process-designer.uistate';
import { ExpressionService, InjectedType, ExprEditMode } from '@gsp-svc/expression';
import { PerformerInfo } from './entities/performer-info.entity';
import { DatagridComponent } from '@farris/ui-datagrid';
import { of } from 'rxjs';
import { HttpService } from '@ecp-caf/caf-common';
import { FDropdownDirective } from "@farris/ui-dropdown";
import { ProcessDeUtil } from '../../domain/process-de-util';
var PerformerComponent = /** @class */ (function () {
    function PerformerComponent(viewModel, uistate, formBuilder, resolver, injector, modalService, message, designerUIState, expr, http) {
        var _this = this;
        this.viewModel = viewModel;
        this.uistate = uistate;
        this.formBuilder = formBuilder;
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.message = message;
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.http = http;
        this.display = true; // 控制矩阵参与者是否显示
        // 控制矩阵参与者是否显示
        this.type = 'defaultPerformer';
        this.nodeType = 'userActivity';
        // 解决选择意见后，下拉菜单无法收折的问题
        this.closeModal = new EventEmitter();
        this.submitModal = new EventEmitter();
        this.editorParams = {};
        this.isClose = true;
        this.modalConfig = {
            title: '参与者',
            width: 700,
            height: 400,
            showButtons: true
        };
        this.columns = [
            {
                field: 'type', width: 50, title: '类型',
                formatter: {
                    type: 'enum',
                    options: { valueField: 'value', textField: 'text', data: this.uistate.typeCollection }
                }
            },
            { field: 'performerName', width: 50, title: '名称' },
            { field: 'description', width: 100, title: '描述', showTips: true },
            {
                field: 'condition', width: 60, title: '启用条件', showTips: true,
                editor: {
                    type: 'input-group',
                    options: {
                        groupText: '<i class="f-icon f-icon-lookup"></i>',
                        editable: false,
                        clickHandle: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            e.formControl.setValue(e.instance.value ? e.instance.value : '');
                            _this.editConditon(e);
                        }),
                        clear: (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            if (e.rowData.type === 'wf.ComponentParticipantExpression') {
                                /** @type {?} */
                                var i = _this.uistate.performerInfo.components.findIndex((/**
                                 * @param {?} item
                                 * @return {?}
                                 */
                                function (item) { return item.id === e.rowData.id; }));
                                _this.uistate.performerInfo.components[i].condition = '';
                            }
                            else if (e.rowData.type === 'wf.ReportingLineParticipantExpression') {
                                /** @type {?} */
                                var i = _this.uistate.performerInfo.reportingLines.findIndex((/**
                                 * @param {?} item
                                 * @return {?}
                                 */
                                function (item) { return item.id === e.rowData.id; }));
                                _this.uistate.performerInfo.reportingLines[i].condition = '';
                            }
                            else if (e.rowData.type === 'wf.MatrixParticipantExpression') {
                                /** @type {?} */
                                var i = _this.uistate.performerInfo.matrixParticipants.findIndex((/**
                                 * @param {?} item
                                 * @return {?}
                                 */
                                function (item) { return item.id === e.rowData.id; }));
                                _this.uistate.performerInfo.matrixParticipants[i].condition = '';
                            }
                            else if (e.rowData.type === 'wf.ActivityExecutorParticipantExpression') {
                                /** @type {?} */
                                var i = _this.uistate.performerInfo.activityExecutors.findIndex((/**
                                 * @param {?} item
                                 * @return {?}
                                 */
                                function (item) { return item.id === e.rowData.id; }));
                                _this.uistate.performerInfo.activityExecutors[i].condition = '';
                            }
                            else if (e.rowData.type === 'wf.OrganizationParticipantExpression') {
                                _this.uistate.performerInfo.organizationParticipants[0].condition = '';
                            }
                        })
                    }
                }
            }
        ];
        this.editState = 'new'; // 编辑状态，用于区分是新增还是编辑  new | edit
        this.afterEdit = (/**
         * @param {?} rowIndex
         * @param {?} rowData
         * @param {?=} column
         * @return {?}
         */
        function (rowIndex, rowData, column) {
            return of(true);
        });
        this.GetOrganizationType();
    }
    Object.defineProperty(PerformerComponent.prototype, "value", {
        set: /**
         * @param {?} partInfo
         * @return {?}
         */
        function (partInfo) {
            var _this = this;
            if (partInfo.performers && partInfo.performers.length > 0) {
                this.uistate.performerInfo.performers = partInfo.performers;
                this.uistate.performersList = this.uistate.performersList.concat((/** @type {?} */ (partInfo.performers)));
                this.uistate.performersList.map((/**
                 * @param {?} performer
                 * @return {?}
                 */
                function (performer) { return performer.description = _this.performerDescription((/** @type {?} */ (performer))); }));
            }
            if (partInfo.variablePerformers && partInfo.variablePerformers.length > 0) {
                this.uistate.performerInfo.variablePerformers = partInfo.variablePerformers;
                this.uistate.performersList = this.uistate.performersList.concat((/** @type {?} */ (partInfo.variablePerformers)));
                this.uistate.performersList.map((/**
                 * @param {?} variablePerformers
                 * @return {?}
                 */
                function (variablePerformers) { return variablePerformers.description = _this.performerDescription((/** @type {?} */ (variablePerformers))); }));
            }
            if (partInfo.components && partInfo.components.length > 0) {
                this.uistate.performerInfo.components = partInfo.components;
                partInfo.components.forEach((/**
                 * @param {?} cmp
                 * @return {?}
                 */
                function (cmp) {
                    _this.uistate.performersList.push({
                        id: cmp.id,
                        type: 'wf.ComponentParticipantExpression',
                        performerName: cmp.name,
                        description: _this.componentDescription(cmp),
                        condition: cmp.condition
                    });
                }));
            }
            if (partInfo.reportingLines && partInfo.reportingLines.length > 0) {
                this.uistate.performerInfo.reportingLines = partInfo.reportingLines;
                partInfo.reportingLines.forEach((/**
                 * @param {?} r
                 * @return {?}
                 */
                function (r) {
                    _this.uistate.performersList.push({
                        id: r.id,
                        type: 'wf.ReportingLineParticipantExpression',
                        performerName: r.reportingLineDefName + '-' + r.dimension,
                        description: _this.reportingLineDescription(r),
                        condition: r.condition
                    });
                }));
            }
            if (partInfo.activityExecutors && partInfo.activityExecutors.length > 0) {
                this.uistate.performerInfo.activityExecutors = partInfo.activityExecutors;
                partInfo.activityExecutors.forEach((/**
                 * @param {?} handler
                 * @return {?}
                 */
                function (handler) {
                    _this.uistate.performersList.push({
                        id: handler.id,
                        type: 'wf.ActivityExecutorParticipantExpression',
                        performerName: '<' + handler.activityDefName + '>活动办理人',
                        description: '<' + handler.activityDefName + '>活动办理人',
                        condition: handler.condition
                    });
                }));
            }
            if (partInfo.matrixParticipants && partInfo.matrixParticipants.length > 0) {
                this.uistate.performerInfo.matrixParticipants = partInfo.matrixParticipants;
                partInfo.matrixParticipants.forEach((/**
                 * @param {?} r
                 * @return {?}
                 */
                function (r) {
                    _this.uistate.performersList.push({
                        id: r.id,
                        type: 'wf.MatrixParticipantExpression',
                        performerName: r.matrixDefName + '-' + r.dataFieldAlias,
                        description: _this.matrixDescription(r),
                        condition: r.condition
                    });
                }));
            }
            if (partInfo.organizationParticipants && partInfo.organizationParticipants.length > 0) {
                this.uistate.performerInfo.organizationParticipants = partInfo.organizationParticipants;
                partInfo.organizationParticipants.forEach((/**
                 * @param {?} o
                 * @return {?}
                 */
                function (o) {
                    _this.uistate.performersList.push({
                        id: o.id,
                        type: 'wf.OrganizationParticipantExpression',
                        performerName: o.organizationName,
                        description: o.organizationName + '，' + (o.includeChildren ? '包含下级' : '不包含下级'),
                        condition: o.condition
                    });
                }));
            }
            if (partInfo.options) {
                this.uistate.performerInfo.options = partInfo.options;
            }
            this.uistate.performerInfo.isAllScope = partInfo.isAllScope;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PerformerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.type = this.editorParams.type;
        this.nodeType = this.editorParams.nodeType;
        this.getMatrixConfig().subscribe((/**
         * @param {?} re
         * @return {?}
         */
        function (re) {
            if (re && re.currentValue === 'false') {
                _this.display = false;
            }
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    PerformerComponent.prototype.switchChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data) {
            this.uistate.clearPerformer();
        }
    };
    // add() {
    //   this.editState = 'new';
    //   const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);
    //   this.compRef = compFactory.create(this.injector);
    //   this.compRef.instance.display = this.display;
    //   const modalConfig = {
    //     title: '参与者选择',
    //     width: 700,
    //     height: 400,
    //     buttons: this.editFooter,
    //     showButtons: true
    //   };
    //   this.editDialog = this.modalService.show(this.compRef, modalConfig);
    // }
    // add() {
    //   this.editState = 'new';
    //   const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);
    //   this.compRef = compFactory.create(this.injector);
    //   this.compRef.instance.display = this.display;
    //   const modalConfig = {
    //     title: '参与者选择',
    //     width: 700,
    //     height: 400,
    //     buttons: this.editFooter,
    //     showButtons: true
    //   };
    //   this.editDialog = this.modalService.show(this.compRef, modalConfig);
    // }
    /**
     * @param {?} performerType
     * @return {?}
     */
    PerformerComponent.prototype.addPerformer = 
    // add() {
    //   this.editState = 'new';
    //   const compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);
    //   this.compRef = compFactory.create(this.injector);
    //   this.compRef.instance.display = this.display;
    //   const modalConfig = {
    //     title: '参与者选择',
    //     width: 700,
    //     height: 400,
    //     buttons: this.editFooter,
    //     showButtons: true
    //   };
    //   this.editDialog = this.modalService.show(this.compRef, modalConfig);
    // }
    /**
     * @param {?} performerType
     * @return {?}
     */
    function (performerType) {
        this.editState = 'new';
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);
        this.compRef = compFactory.create(this.injector);
        this.compRef.instance.display = this.display;
        this.compRef.instance.performerType = performerType;
        /** @type {?} */
        var modalConfig = {
            title: '参与者选择',
            width: 700,
            height: 400,
            buttons: this.editFooter,
            showButtons: true
        };
        this.editDialog = this.modalService.show(this.compRef, modalConfig);
        this.dropDownEl.close();
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.edit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.editState = 'edit';
        if (this.uistate.curPerformer) {
            /** @type {?} */
            var modalConfig_1 = {
                title: '参与者选择',
                width: 700,
                height: 400,
                buttons: this.editFooter,
                showButtons: true
            };
            /** @type {?} */
            var compFactory = this.resolver.resolveComponentFactory(PerformerEditComponent);
            this.compRef = compFactory.create(this.injector);
            this.compRef.instance.performerType = this.uistate.curPerformer.type;
            switch (this.uistate.curPerformer.type) {
                case 'wf.PositionParticipantExpression':
                    this.compRef.instance.performer = {
                        type: 'wf.PositionParticipantExpression',
                        value: this.uistate.performerInfo.performers.find((/**
                         * @param {?} p
                         * @return {?}
                         */
                        function (p) { return p.id === _this.uistate.curPerformer.id; }))
                    };
                    break;
                case 'wf.UserParticipantExpression':
                    this.compRef.instance.performer = {
                        type: 'wf.UserParticipantExpression',
                        value: this.uistate.performerInfo.performers.find((/**
                         * @param {?} p
                         * @return {?}
                         */
                        function (p) { return p.id === _this.uistate.curPerformer.id; }))
                    };
                    break;
                case 'wf.VariableParticipantExpression':
                    this.compRef.instance.performer = {
                        type: 'wf.VariableParticipantExpression',
                        value: this.uistate.performerInfo.variablePerformers.find((/**
                         * @param {?} p
                         * @return {?}
                         */
                        function (p) { return p.id === _this.uistate.curPerformer.id; }))
                    };
                    break;
                case 'wf.ReportingLineParticipantExpression':
                    /** @type {?} */
                    var reportingLine = this.uistate.performerInfo.reportingLines.find((/**
                     * @param {?} r
                     * @return {?}
                     */
                    function (r) {
                        return r.id === _this.uistate.curPerformer.id;
                    }));
                    this.compRef.instance.performer = {
                        type: 'wf.ReportingLineParticipantExpression',
                        value: reportingLine
                    };
                    /** @type {?} */
                    var url = '/api/runtime/wf/v1.0/reportingLineDefinitions/' + reportingLine.reportingLineDefId;
                    this.http.get(url).subscribe((/**
                     * @param {?} res
                     * @return {?}
                     */
                    function (res) {
                        if (!res) {
                            _this.message.error('该条汇报关系数据的定义已删除，该条数据将删除');
                            _this.remove();
                        }
                        else {
                            _this.editDialog = _this.modalService.show(_this.compRef, modalConfig_1);
                        }
                    }));
                    break;
                case 'wf.MatrixParticipantExpression':
                    /** @type {?} */
                    var matrix = this.uistate.performerInfo.matrixParticipants.find((/**
                     * @param {?} r
                     * @return {?}
                     */
                    function (r) {
                        return r.id === _this.uistate.curPerformer.id;
                    }));
                    this.compRef.instance.performer = {
                        type: 'wf.MatrixParticipantExpression',
                        value: matrix
                    };
                    /** @type {?} */
                    var urlMatrix = '/api/runtime/wf/v1.0/matrixDefinition/' + matrix.matrixDefId;
                    this.http.get(urlMatrix).subscribe((/**
                     * @param {?} res
                     * @return {?}
                     */
                    function (res) {
                        if (!res) {
                            _this.message.error('该条矩阵数据的定义已删除，该条数据将删除');
                            _this.remove();
                        }
                        else {
                            _this.editDialog = _this.modalService.show(_this.compRef, modalConfig_1);
                        }
                    }));
                    break;
                case 'wf.ComponentParticipantExpression':
                    this.compRef.instance.performer = {
                        type: 'wf.ComponentParticipantExpression',
                        value: this.uistate.performerInfo.components.find((/**
                         * @param {?} c
                         * @return {?}
                         */
                        function (c) {
                            return c.id === _this.uistate.curPerformer.id;
                        }))
                    };
                    break;
                case 'wf.ActivityExecutorParticipantExpression':
                    this.compRef.instance.performer = {
                        type: 'wf.ActivityExecutorParticipantExpression',
                        value: this.uistate.performerInfo.activityExecutors.find((/**
                         * @param {?} c
                         * @return {?}
                         */
                        function (c) {
                            return c.id === _this.uistate.curPerformer.id;
                        }))
                    };
                    break;
                case 'wf.OrganizationParticipantExpression':
                    this.compRef.instance.performer = {
                        type: 'wf.OrganizationParticipantExpression',
                        value: this.uistate.performerInfo.organizationParticipants[0]
                    };
                    break;
            }
            if (this.uistate.curPerformer.type !== 'wf.ReportingLineParticipantExpression' &&
                this.uistate.curPerformer.type !== 'wf.MatrixParticipantExpression') { // 汇报关系和矩阵单独处理
                this.editDialog = this.modalService.show(this.compRef, modalConfig_1);
            }
        }
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.remove = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.grid.selectedRow) {
            this.grid.endCellEdit();
            if (this.grid.selectedRow.data.type === 'wf.ComponentParticipantExpression') {
                /** @type {?} */
                var i = this.uistate.performerInfo.components.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.id === _this.grid.selectedRow.data.id; }));
                this.uistate.performerInfo.components.splice(i, 1);
            }
            else if (this.grid.selectedRow.data.type === 'wf.ReportingLineParticipantExpression') {
                /** @type {?} */
                var i = this.uistate.performerInfo.reportingLines.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.id === _this.grid.selectedRow.data.id; }));
                this.uistate.performerInfo.reportingLines.splice(i, 1);
            }
            else if (this.grid.selectedRow.data.type === 'wf.MatrixParticipantExpression') {
                /** @type {?} */
                var i = this.uistate.performerInfo.matrixParticipants.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.id === _this.grid.selectedRow.data.id; }));
                this.uistate.performerInfo.matrixParticipants.splice(i, 1);
            }
            else if (this.grid.selectedRow.data.type === 'wf.ActivityExecutorParticipantExpression') {
                /** @type {?} */
                var i = this.uistate.performerInfo.activityExecutors.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.id === _this.grid.selectedRow.data.id; }));
                this.uistate.performerInfo.activityExecutors.splice(i, 1);
            }
            else if (this.grid.selectedRow.data.type === 'wf.OrganizationParticipantExpression') {
                /** @type {?} */
                var i = this.uistate.performerInfo.organizationParticipants = new Array();
            }
            else if (this.grid.selectedRow.data.type === 'wf.VariableParticipantExpression') {
                /** @type {?} */
                var i = this.uistate.performerInfo.variablePerformers.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.id === _this.grid.selectedRow.data.id; }));
                this.uistate.performerInfo.variablePerformers.splice(i, 1);
            }
            else {
                /** @type {?} */
                var i = this.uistate.performerInfo.performers.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item.id === _this.grid.selectedRow.data.id; }));
                this.uistate.performerInfo.performers.splice(i, 1);
            }
            /** @type {?} */
            var index = this.uistate.performersList.findIndex((/**
             * @param {?} p
             * @return {?}
             */
            function (p) { return p.id === _this.grid.selectedRow.data.id; }));
            this.uistate.performersList.splice(index, 1);
            this.grid.loadData(this.uistate.performersList);
        }
        else {
            this.message.info('请先选中一条参与者信息！');
        }
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.clear = /**
     * @return {?}
     */
    function () {
        this.uistate.performerInfo.performers = [];
        this.uistate.performerInfo.variablePerformers = [];
        this.uistate.performerInfo.components = [];
        this.uistate.performerInfo.reportingLines = [];
        this.uistate.performerInfo.matrixParticipants = [];
        this.uistate.performerInfo.activityExecutors = [];
        this.uistate.performerInfo.organizationParticipants = new Array();
        this.uistate.performersList = [];
        this.grid.loadData(this.uistate.performersList);
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.clickOK = /**
     * @return {?}
     */
    function () {
        this.grid.endCellEdit();
        /** @type {?} */
        var object = {
            value: this.uistate.performerInfo, parameters: null
        };
        this.submitModal.emit(object);
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.clickCancel = /**
     * @return {?}
     */
    function () {
        this.closeModal.emit();
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.editOK = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a;
        this.isClose = true;
        if (this.compRef) {
            /** @type {?} */
            var re_1 = this.compRef.instance.getPerformers();
            if (re_1.userPerformers && re_1.userPerformers.length > 0) {
                re_1.userPerformers.forEach((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) {
                    /** @type {?} */
                    var i = _this.uistate.performerInfo.performers.findIndex((/**
                     * @param {?} a
                     * @return {?}
                     */
                    function (a) { return (a.id === p.id || a.performerId === p.performerId); }));
                    if (i > -1) {
                        /** @type {?} */
                        var id_1 = _this.uistate.performerInfo.performers[i].id;
                        _this.uistate.performerInfo.performers[i] = p;
                        /** @type {?} */
                        var index = _this.uistate.performersList.findIndex((/**
                         * @param {?} a
                         * @return {?}
                         */
                        function (a) { return a.id === id_1; }));
                        _this.uistate.performersList[index] = p;
                    }
                    else {
                        if (_this.editState === 'edit') {
                            _this.remove();
                        }
                        _this.uistate.performerInfo.performers.push(p);
                        _this.uistate.performersList = _this.uistate.performersList.concat([p]);
                    }
                }));
                this.uistate.performersList
                    .filter((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return p.type === _this.uistate.typeCollection[0].value || p.type === _this.uistate.typeCollection[1].value; }))
                    .map((/**
                 * @param {?} performer
                 * @return {?}
                 */
                function (performer) { return performer.description =
                    _this.performerDescription((/** @type {?} */ (performer))); }));
            }
            if (re_1.positions && re_1.positions.length > 0) {
                var _loop_1 = function (position) {
                    if (position && position !== null && position.id) {
                        /** @type {?} */
                        var p_1 = position;
                        if (!p_1.performerId) {
                            this_1.message.info('尚未选择岗位！');
                            this_1.isClose = false;
                        }
                        else {
                            if ((!p_1.orgType || p_1.orgType == null) && (p_1.isRequired && p_1.positionType === '1')) {
                                this_1.message.info('尚未选择组织类型！');
                                this_1.isClose = false;
                            }
                            else if ((!p_1.orgId || p_1.orgId == null) && (p_1.isRequired && p_1.positionType === '1')) {
                                this_1.message.info('尚未填写组织！');
                                this_1.isClose = false;
                            }
                            else {
                                // (1)id一致，为编辑岗位；（2）performid一致，新增的用户，岗位已存在
                                /** @type {?} */
                                var i = this_1.uistate.performerInfo.performers.findIndex((/**
                                 * @param {?} a
                                 * @return {?}
                                 */
                                function (a) { return (a.id === p_1.id || (a.performerId === p_1.performerId && a.orgId === p_1.orgId)); }));
                                if (i > -1) {
                                    /** @type {?} */
                                    var id_2 = this_1.uistate.performerInfo.performers[i].id;
                                    this_1.uistate.performerInfo.performers[i] = p_1;
                                    /** @type {?} */
                                    var index = this_1.uistate.performersList.findIndex((/**
                                     * @param {?} a
                                     * @return {?}
                                     */
                                    function (a) { return a.id === id_2; }));
                                    this_1.uistate.performersList[index] = p_1;
                                }
                                else {
                                    this_1.uistate.performerInfo.performers.push(p_1);
                                    this_1.uistate.performersList = this_1.uistate.performersList.concat([p_1]);
                                }
                                this_1.uistate.performersList
                                    .filter((/**
                                 * @param {?} p
                                 * @return {?}
                                 */
                                function (p) { return p.type === _this.uistate.typeCollection[0].value || p.type === _this.uistate.typeCollection[1].value; }))
                                    .map((/**
                                 * @param {?} performer
                                 * @return {?}
                                 */
                                function (performer) { return performer.description =
                                    _this.performerDescription((/** @type {?} */ (performer))); }));
                            }
                        }
                    }
                };
                var this_1 = this;
                try {
                    for (var _b = tslib_1.__values(re_1.positions), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var position = _c.value;
                        _loop_1(position);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            if (re_1.component && re_1.component.metadataId && re_1.component.methodCode) {
                /** @type {?} */
                var i = this.uistate.performerInfo.components.findIndex((/**
                 * @param {?} a
                 * @return {?}
                 */
                function (a) { return a.id === re_1.component.id; }));
                if (i > -1) {
                    this.uistate.performerInfo.components[i] = re_1.component;
                    /** @type {?} */
                    var index = this.uistate.performersList.findIndex((/**
                     * @param {?} a
                     * @return {?}
                     */
                    function (a) { return a.id === re_1.component.id; }));
                    this.uistate.performersList[index] = {
                        id: re_1.component.id,
                        type: 'wf.ComponentParticipantExpression',
                        performerName: re_1.component.name,
                        description: this.componentDescription(re_1.component),
                        condition: re_1.component.condition
                    };
                }
                else {
                    this.uistate.performerInfo.components.push(re_1.component);
                    this.uistate.performersList.push({
                        id: re_1.component.id,
                        type: 'wf.ComponentParticipantExpression',
                        performerName: re_1.component.name,
                        description: this.componentDescription(re_1.component),
                        condition: ''
                    });
                }
            }
            if (re_1.reportingLine && re_1.reportingLine.reportingLineDefId && re_1.reportingLine.dimension) {
                if (re_1.reportingLine.reportingReferObject === 'dept' && !re_1.reportingLine.refOrgId) {
                    this.isClose = false;
                    this.message.info('“部门”汇报关系类型下，参照人所在部门不能为空');
                }
                else if (re_1.reportingLine.reportingReferObject !== 'dept' && !re_1.reportingLine.refUserId && !re_1.reportingLine.refEmployeeId) { // 用户及其他人员汇报对象类型，参照用户和参照员工不能全部为空
                    this.isClose = false;
                    this.message.info('“用户”汇报关系类型下，参照人不能为空');
                }
                else {
                    this.isClose = true;
                    this.addReportingLineData(re_1);
                }
            }
            if (re_1.matrix && re_1.matrix.matrixDefId) {
                if (!re_1.matrix.conditionField1 && !re_1.matrix.conditionField2 && !re_1.matrix.conditionField3) {
                    this.isClose = false;
                    this.message.info('条件字段至少要存在一个');
                }
                else if (!re_1.matrix.dataFieldAlias) {
                    this.isClose = false;
                    this.message.info('数据字段不能为空');
                }
                else {
                    this.isClose = true;
                    this.addMatrixData(re_1);
                }
            }
            if (re_1.activityExecutorPerformers && re_1.activityExecutorPerformers.length > 0) {
                re_1.activityExecutorPerformers.forEach((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) {
                    /** @type {?} */
                    var i = _this.uistate.performerInfo.activityExecutors.findIndex((/**
                     * @param {?} a
                     * @return {?}
                     */
                    function (a) { return (a.id === p.id || a.activityDefId === p.activityDefId); }));
                    if (i < 0) {
                        if (_this.editState === 'edit') {
                            _this.remove(); // 在编辑状态下配置了活动办理人参与者，先将选中的删除
                        }
                        _this.uistate.performerInfo.activityExecutors.push(p);
                        _this.uistate.performersList = _this.uistate.performersList.concat([p]);
                    }
                }));
                this.uistate.performersList
                    .filter((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return p.type === _this.uistate.typeCollection[5].value; }))
                    .map((/**
                 * @param {?} performer
                 * @return {?}
                 */
                function (performer) { return performer.description =
                    _this.performerDescription((/** @type {?} */ (performer))); }));
            }
            if (re_1.organizationParticipant) {
                console.log(re_1.organizationParticipant);
                this.uistate.performerInfo.organizationParticipants = [re_1.organizationParticipant];
                this.uistate.performersList = this.uistate.performersList.filter((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return p.type !== 'wf.OrganizationParticipantExpression'; }));
                this.uistate.performersList = this.uistate.performersList.concat({
                    id: re_1.organizationParticipant.id || ProcessDeUtil.GenerateElementId(),
                    type: 'wf.OrganizationParticipantExpression',
                    performerName: re_1.organizationParticipant.organizationName,
                    description: re_1.organizationParticipant.organizationName + '，且' + (re_1.organizationParticipant.includeChildren ? '包含下级' : '不包含下级'),
                    condition: re_1.organizationParticipant.condition
                });
            }
            this.grid.loadData(this.uistate.performersList);
        }
        if (this.editDialog && this.isClose) {
            this.editDialog.close();
        }
    };
    /**
     * @private
     * @param {?} re
     * @return {?}
     */
    PerformerComponent.prototype.addReportingLineData = /**
     * @private
     * @param {?} re
     * @return {?}
     */
    function (re) {
        var e_2, _a;
        /** @type {?} */
        var i = this.uistate.performerInfo.reportingLines.findIndex((/**
         * @param {?} a
         * @return {?}
         */
        function (a) { return a.id === re.reportingLine.id; }));
        if (i > -1) {
            this.uistate.performerInfo.reportingLines[i] = re.reportingLine;
            /** @type {?} */
            var index = this.uistate.performersList.findIndex((/**
             * @param {?} a
             * @return {?}
             */
            function (a) { return a.id === re.reportingLine.id; }));
            this.uistate.performersList[index] = {
                id: re.reportingLine.id,
                type: 'wf.ReportingLineParticipantExpression',
                performerName: re.reportingLine.reportingLineDefName + '-' + re.reportingLine.dimension,
                description: this.reportingLineDescription(re.reportingLine),
                condition: re.reportingLine.condition
            };
        }
        else {
            try {
                for (var _b = tslib_1.__values(this.uistate.performerInfo.reportingLines), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var reportingLineData = _c.value;
                    if (reportingLineData.reportingLineDefId === re.reportingLine.definitionId &&
                        reportingLineData.dimension === re.reportingLine.dimension &&
                        reportingLineData.refUserId === re.reportingLine.referUserId &&
                        reportingLineData.refEmployeeId === re.reportingLine.refEmployeeId &&
                        reportingLineData.refOrgId === re.reportingLine.referDeptId) {
                        this.message.error('该汇报关系已经进行过配置');
                        return;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
            this.uistate.performerInfo.reportingLines.push(re.reportingLine);
            this.uistate.performersList.push({
                id: re.reportingLine.id,
                type: 'wf.ReportingLineParticipantExpression',
                performerName: re.reportingLine.reportingLineDefName + '-' + re.reportingLine.dimension,
                description: this.reportingLineDescription(re.reportingLine),
                condition: re.reportingLine.condition
            });
        }
    };
    /**
     * @private
     * @param {?} re
     * @return {?}
     */
    PerformerComponent.prototype.addMatrixData = /**
     * @private
     * @param {?} re
     * @return {?}
     */
    function (re) {
        var e_3, _a;
        /** @type {?} */
        var i = this.uistate.performerInfo.matrixParticipants.findIndex((/**
         * @param {?} a
         * @return {?}
         */
        function (a) { return a.id === re.matrix.id; }));
        if (i > -1) {
            this.uistate.performerInfo.matrixParticipants[i] = re.matrix;
            /** @type {?} */
            var index = this.uistate.performersList.findIndex((/**
             * @param {?} a
             * @return {?}
             */
            function (a) { return a.id === re.matrix.id; }));
            this.uistate.performersList[index] = {
                id: re.matrix.id,
                type: 'wf.MatrixParticipantExpression',
                performerName: re.matrix.matrixDefName + '-' + re.matrix.dataFieldAlias,
                description: this.matrixDescription(re.matrix),
                condition: re.matrix.condition
            };
        }
        else {
            try {
                for (var _b = tslib_1.__values(this.uistate.performerInfo.matrixParticipants), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var matrixData = _c.value;
                    if (matrixData.matrixDefId === re.matrix.matrixDefId &&
                        matrixData.conditionField1 === re.matrix.conditionField1 &&
                        matrixData.conditionField2 === re.matrix.conditionField2 &&
                        matrixData.conditionField3 === re.matrix.conditionField3 &&
                        matrixData.dataFieldAlias === re.matrix.dataFieldAlias) {
                        this.message.error('该矩阵已经进行过配置');
                        return;
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_3) throw e_3.error; }
            }
            this.uistate.performerInfo.matrixParticipants.push(re.matrix);
            this.uistate.performersList.push({
                id: re.matrix.id,
                type: 'wf.MatrixParticipantExpression',
                performerName: re.matrix.matrixDefName + '-' + re.matrix.dataFieldAlias,
                description: this.matrixDescription(re.matrix),
                condition: re.matrix.condition
            });
        }
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.editCancel = /**
     * @return {?}
     */
    function () {
        if (this.editDialog) {
            this.editDialog.close();
        }
    };
    /**
     * @return {?}
     */
    PerformerComponent.prototype.participantOptionsSet = /**
     * @return {?}
     */
    function () {
        this.uistate.performerInfo.options = this.options.getPerformerOptions();
        this.optionsDialog.close();
    };
    /**
     * @private
     * @param {?} performer
     * @return {?}
     */
    PerformerComponent.prototype.performerDescription = /**
     * @private
     * @param {?} performer
     * @return {?}
     */
    function (performer) {
        if (performer.type === 'wf.UserParticipantExpression' || performer.type === 'wf.VariableParticipantExpression') {
            if (performer.tag === 'expression') {
                return performer.performerId;
            }
            else {
                if (performer.orgName) {
                    return "\u7EC4\u7EC7\uFF1A" + performer.orgName;
                }
                else {
                    return '';
                }
            }
        }
        else if (performer.type === 'wf.PositionParticipantExpression') {
            if (this.designerUIState.scene === 'inSuite') {
                return null;
            }
            if (((/** @type {?} */ (performer))).positionType === '1') {
                if (performer.orgId) {
                    return "\u5C97\u4F4D\u7C7B\u578B\uFF1A\u901A\u7528\u5C97\u4F4D\uFF0C\u7EC4\u7EC7\uFF1A" + performer.orgId;
                }
                else {
                    return "\u5C97\u4F4D\u7C7B\u578B\uFF1A\u901A\u7528\u5C97\u4F4D";
                }
            }
            else if (((/** @type {?} */ (performer))).positionType === '0') {
                return '岗位类型：组织岗位';
            }
        }
        else if (performer.type === 'wf.ActivityExecutorParticipantExpression') {
            return performer.performerName;
        }
    };
    /**
     * @private
     * @param {?} component
     * @return {?}
     */
    PerformerComponent.prototype.componentDescription = /**
     * @private
     * @param {?} component
     * @return {?}
     */
    function (component) {
        /** @type {?} */
        var des = "\u6784\u4EF6\uFF1A" + component.name + ",\u53C2\u6570\uFF1A{";
        if (component.actualParameters && component.actualParameters.length > 0) {
            component.actualParameters.forEach((/**
             * @param {?} p
             * @return {?}
             */
            function (p) {
                des += p.code + "\uFF1A" + p.value + "\uFF0C";
            }));
            des = des.substring(0, des.length - 1);
        }
        des += '}';
        return des;
    };
    /**
     * @private
     * @param {?} reportingLine
     * @return {?}
     */
    PerformerComponent.prototype.reportingLineDescription = /**
     * @private
     * @param {?} reportingLine
     * @return {?}
     */
    function (reportingLine) {
        /** @type {?} */
        var description = '';
        if (reportingLine.refUserId) {
            description += "\u53C2\u7167\u4EBA\uFF1A" + reportingLine.refUserId;
        }
        if (reportingLine.refEmployeeId) {
            description += "\u53C2\u7167\u4EBA\uFF1A" + reportingLine.refEmployeeId;
        }
        if (reportingLine.refOrgId) {
            if (reportingLine.refUserId) {
                description += "\uFF0C";
            }
            if (reportingLine.refEmployeeId) {
                description += "\uFF0C";
            }
            description += "\u53C2\u7167\u7EC4\u7EC7\uFF1A" + reportingLine.refOrgId;
        }
        return description;
    };
    /**
     * @private
     * @param {?} matrix
     * @return {?}
     */
    PerformerComponent.prototype.matrixDescription = /**
     * @private
     * @param {?} matrix
     * @return {?}
     */
    function (matrix) {
        /** @type {?} */
        var description = '';
        if (matrix.conditionField1) {
            description += "\u6761\u4EF61\uFF1A" + matrix.conditionFieldText1 + "\uFF0C";
        }
        if (matrix.conditionField2) {
            description += "\u6761\u4EF62\uFF1A" + matrix.conditionFieldText2 + "\uFF0C";
        }
        if (matrix.conditionField3) {
            description += "\u6761\u4EF63\uFF1A" + matrix.conditionFieldText3 + "\uFF0C";
        }
        if (matrix.dataFieldAlias) {
            description += "\u6570\u636E\uFF1A" + matrix.dataFieldAlias + "\uFF0C";
        }
        return description.slice(0, description.length - 1);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    PerformerComponent.prototype.editConditon = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var _this = this;
        var e_4, _a, e_5, _b, e_6, _c, e_7, _d;
        // this.expr.clearContext();
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.designerUIState.schemas), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var schema = _f.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_4) throw e_4.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        context = this.designerUIState.addContext(context);
        if (this.designerUIState.subActivityContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _g = tslib_1.__values(this.designerUIState.subActivityContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    _loop_2(variable);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.designerUIState.activityComponentContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.designerUIState.activityComponentContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_3(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_d = context_1.return)) _d.call(context_1);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        this.expr.addExpressionText(e.instance.value);
        this.expr.setEditPattern(ExprEditMode.Conditional); // 默认打开简易表达式编辑器
        this.expr.buildExpression().then((/**
         * @param {?} cond
         * @return {?}
         */
        function (cond) {
            if (_this.grid.selectedRow.data.type === 'wf.ComponentParticipantExpression') {
                _this.uistate.performerInfo.components.find((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.id === _this.grid.selectedRow.data.id; })).condition = cond;
            }
            else if (_this.grid.selectedRow.data.type === 'wf.ReportingLineParticipantExpression') {
                _this.uistate.performerInfo.reportingLines.find((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.id === _this.grid.selectedRow.data.id; })).condition = cond;
            }
            else if (_this.grid.selectedRow.data.type === 'wf.MatrixParticipantExpression') {
                _this.uistate.performerInfo.matrixParticipants.find((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.id === _this.grid.selectedRow.data.id; })).condition = cond;
            }
            else if (_this.grid.selectedRow.data.type === 'wf.ActivityExecutorParticipantExpression') {
                _this.uistate.performerInfo.activityExecutors.find((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.id === _this.grid.selectedRow.data.id; })).condition = cond;
            }
            else {
                _this.uistate.performerInfo.performers.find((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) { return p.id === _this.grid.selectedRow.data.id; })).condition = cond;
            }
            e.formControl.setValue(cond);
            e.instance.cd.detectChanges();
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    PerformerComponent.prototype.selectChanged = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.uistate.curPerformer = data.data;
    };
    /**
     * @private
     * @return {?}
     */
    PerformerComponent.prototype.GetOrganizationType = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/sys/v1.0/authfields/globalauthfields';
        this.http.get(url)
            .subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) { return _this.designerUIState.orgTypeCollection = data.map((/**
         * @param {?} d
         * @return {?}
         */
        function (d) { return ({ value: d.id, text: d.name }); })); }));
    };
    /**
     * @private
     * @return {?}
     */
    PerformerComponent.prototype.getMatrixConfig = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/generalConfig/Is_EnableMatrix";
        return this.http.get(url);
    };
    PerformerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-performer',
                    template: "<div class=\"f-page\">\r\n  <div class=\"f-page-header\">\r\n    <nav class=\"f-page-header-base\">\r\n      <div class=\"f-title\">\r\n        <span class=\"f-title-icon f-text-orna-bill\">\r\n          <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n        </span>\r\n        <h4 *ngIf=\"nodeType==='notifyActivity' || type==='defaultPerformer'\"  class=\"f-title-text\">\u529E\u7406\u4EBA\u5217\u8868</h4>\r\n        <h5 *ngIf=\"type==='assignPerformer'\" class=\"f-title-subtitle\">\u5168\u5458\u8303\u56F4</h5>\r\n        <farris-switch *ngIf=\"type==='assignPerformer'\" style=\"height: 22px;\"\r\n          [(ngModel)]=\"uistate.performerInfo.isAllScope\" name=\"isAllScope\"\r\n          [readonly]=\"false\" (valueChange)=\"switchChange($event)\"></farris-switch>\r\n      </div>\r\n      <div class=\"btn-toolbar btn-group-lg\">\r\n      <!--<button class=\"btn btn-primary mr-2\" (click)=\"add()\">\u65B0\u589E</button>-->\r\n        <div *ngIf=\"type!=='assignPerformer' || !uistate.performerInfo.isAllScope\" class=\"btn-group mr-2\"  fDropdown #dropdownEl=\"fDropdown\">\r\n          <button class=\"btn btn-primary dropdown-toggle\" fDropdownToggle type=\"button\">\r\n            \u65B0\u589E\r\n          </button>\r\n          <div class=\"dropdown-menu\" fDropdownMenu>\r\n            <li class=\"dropdown-item\" (click)=\"addPerformer('wf.UserParticipantExpression')\"><span>\u7528\u6237</span></li>\r\n            <li class=\"dropdown-item\" (click)=\"addPerformer('wf.VariableParticipantExpression')\"><span>\u53D8\u91CF\u53C2\u4E0E\u8005</span></li>\r\n            <li class=\"dropdown-item\" (click)=\"addPerformer('wf.PositionParticipantExpression')\"><span>{{designerUIState.scene==='inSuite'?'\u89D2\u8272':'\u5C97\u4F4D'}}</span></li>\r\n            <li class=\"dropdown-item\" (click)=\"addPerformer('wf.ReportingLineParticipantExpression')\"><span>\u6C47\u62A5\u5173\u7CFB</span></li>\r\n            <li class=\"dropdown-item\" (click)=\"addPerformer('wf.ActivityExecutorParticipantExpression')\"><span>\u5386\u53F2\u6D3B\u52A8\u529E\u7406\u4EBA</span></li>\r\n            <li class=\"dropdown-item\" (click)=\"addPerformer('wf.MatrixParticipantExpression')\"><span>\u77E9\u9635\u5173\u7CFB</span></li>\r\n            <li class=\"dropdown-item\" (click)=\"addPerformer('wf.ComponentParticipantExpression')\"><span>\u53C2\u4E0E\u8005\u6784\u4EF6</span></li>\r\n            <li *ngIf=\"type==='assignPerformer'\" class=\"dropdown-item\" (click)=\"addPerformer('wf.OrganizationParticipantExpression')\"><span>\u5355\u4F4D/\u90E8\u95E8\r\n            </span></li>\r\n          </div>\r\n        </div>\r\n        <button *ngIf=\"type!=='assignPerformer' || !uistate.performerInfo.isAllScope\" class=\"btn btn-secondary mr-2\" [disabled]=\"(!uistate.curPerformer)\"\r\n        (click)=\"edit()\">\u7F16\u8F91</button>\r\n        <button *ngIf=\"type!=='assignPerformer' || !uistate.performerInfo.isAllScope\" class=\"btn btn-secondary mr-2\" (click)=\"remove()\">\u79FB\u9664</button>\r\n        <button *ngIf=\"type!=='assignPerformer' || !uistate.performerInfo.isAllScope\" class=\"btn btn-secondary mr-2\" (click)=\"clear()\">\u6E05\u7A7A</button>\r\n        <button *ngIf=\"nodeType==='userActivity' && type==='defaultPerformer'\" class=\"btn btn-secondary\" (click)=\"participantOptions.show()\">\u529E\u7406\u4EBA\u9009\u9879</button>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n  <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n    <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n      <farris-datagrid #grid [data]=\"uistate.performersList\" [columns]=\"columns\" [idField]=\"'id'\" [fit]=\"true\"\r\n        [fitColumns]=\"true\" [editable]=\"true\" [editMode]=\"'cell'\" [pagination]=\"false\" [showCheckbox]=\"false\"\r\n        [multiSelect]=\"false\" [afterEdit]=\"afterEdit\" (selectChanged)=\"selectChanged($event)\">\r\n      </farris-datagrid>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #iconSelectFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"clickCancel()\">\u53D6\u6D88</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"clickOK()\">\u786E\u5B9A</button>\r\n</ng-template>\r\n\r\n<ng-template #editFooter>\r\n  <button type=\"button\" class=\"btn btn-secondary btn-sm px-3 mx-2\" (click)=\"editCancel()\">\u53D6\u6D88</button>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm px-3 mx-2\" (click)=\"editOK()\">\u786E\u5B9A</button>\r\n</ng-template>\r\n\r\n<farris-dialog #participantOptions [buttons]=\"buttonRef\" [width]=\"500\" [height]=\"530\" title=\"'\u53C2\u4E0E\u8005\u9009\u9879'\">\r\n  <app-performer-options [value]=\"uistate.performerInfo.options\"></app-performer-options>\r\n</farris-dialog>\r\n<ng-template #buttonRef>\r\n  <button class=\"btn btn-sm btn-default px-3\" (click)=\"participantOptions.close()\">\u53D6\u6D88</button>\r\n  <button class=\"btn btn-sm btn-primary px-3\" (click)=\"participantOptionsSet()\">\u786E\u5B9A</button>\r\n</ng-template>\r\n",
                    providers: [PerformerViewModel, PerformerRepository, PerformerUIState],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PerformerComponent.ctorParameters = function () { return [
        { type: PerformerViewModel },
        { type: PerformerUIState },
        { type: FormBuilder },
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: MessagerService },
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: HttpService }
    ]; };
    PerformerComponent.propDecorators = {
        modalFooter: [{ type: ViewChild, args: ['iconSelectFooter',] }],
        editFooter: [{ type: ViewChild, args: ['editFooter',] }],
        options: [{ type: ViewChild, args: [PerformerOptionsComponent,] }],
        optionsDialog: [{ type: ViewChild, args: ['participantOptions',] }],
        grid: [{ type: ViewChild, args: [DatagridComponent,] }],
        dropDownEl: [{ type: ViewChild, args: ['dropdownEl',] }],
        closeModal: [{ type: Output }],
        submitModal: [{ type: Output }],
        value: [{ type: Input }],
        editorParams: [{ type: Input }]
    };
    return PerformerComponent;
}());
export { PerformerComponent };
if (false) {
    /** @type {?} */
    PerformerComponent.prototype.display;
    /** @type {?} */
    PerformerComponent.prototype.type;
    /** @type {?} */
    PerformerComponent.prototype.nodeType;
    /** @type {?} */
    PerformerComponent.prototype.modalFooter;
    /** @type {?} */
    PerformerComponent.prototype.editFooter;
    /** @type {?} */
    PerformerComponent.prototype.options;
    /** @type {?} */
    PerformerComponent.prototype.optionsDialog;
    /** @type {?} */
    PerformerComponent.prototype.grid;
    /** @type {?} */
    PerformerComponent.prototype.dropDownEl;
    /** @type {?} */
    PerformerComponent.prototype.closeModal;
    /** @type {?} */
    PerformerComponent.prototype.submitModal;
    /** @type {?} */
    PerformerComponent.prototype.editorParams;
    /** @type {?} */
    PerformerComponent.prototype.editDialog;
    /** @type {?} */
    PerformerComponent.prototype.compRef;
    /** @type {?} */
    PerformerComponent.prototype.isClose;
    /** @type {?} */
    PerformerComponent.prototype.modalConfig;
    /** @type {?} */
    PerformerComponent.prototype.columns;
    /** @type {?} */
    PerformerComponent.prototype.curPerformer;
    /** @type {?} */
    PerformerComponent.prototype.editState;
    /** @type {?} */
    PerformerComponent.prototype.afterEdit;
    /** @type {?} */
    PerformerComponent.prototype.viewModel;
    /** @type {?} */
    PerformerComponent.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    PerformerComponent.prototype.formBuilder;
    /**
     * @type {?}
     * @private
     */
    PerformerComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    PerformerComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    PerformerComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    PerformerComponent.prototype.message;
    /** @type {?} */
    PerformerComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    PerformerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    PerformerComponent.prototype.http;
}
var PerformerConverter = /** @class */ (function () {
    function PerformerConverter() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    PerformerConverter.prototype.convertTo = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if ((data.performers && data.performers.length > 0)
            || (data.variablePerformers && data.variablePerformers.length > 0)
            || (data.components && data.components.length > 0)
            || (data.reportingLines && data.reportingLines.length > 0)
            || (data.matrixParticipants && data.matrixParticipants.length > 0)
            || (data.activityExecutors && data.activityExecutors.length > 0)
            || (data.organizationParticipants && data.organizationParticipants.length > 0)
            || data.isAllScope) {
            return '（已设置）';
        }
        else {
            return '（未设置）';
        }
    };
    return PerformerConverter;
}());
export { PerformerConverter };
//# sourceMappingURL=data:application/json;base64,