/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, ViewChild, Injector, NgZone, ElementRef, ChangeDetectorRef, Optional, Inject, LOCALE_ID } from '@angular/core';
import { ProcessDesignerUIState } from '../../../../app/process-designer.uistate';
import { ExprEditMode, ExpressionService, InjectedType } from '@gsp-svc/expression';
import { UserPerformerEntity } from '../../entities/user-performer.entity';
import { PerformerConfigService } from '../../performer-config.service';
import { HttpService } from '@ecp-caf/caf-common';
import { MessagerService } from '@farris/ui-messager';
import { PersonnelSelectorComponent } from '@farris/ui-personnel-selector';
import { WF_LANG_RESOURCES, WfLocalePipe } from '../../../../i18n/pipe/wf-process-editor-locale.pipe';
var UserPerformerComponent = /** @class */ (function () {
    function UserPerformerComponent(designerUIState, expr, injector, lookupConfig, ngZone, cdr, localeId, resources, localePipe, http, message) {
        this.designerUIState = designerUIState;
        this.expr = expr;
        this.injector = injector;
        this.lookupConfig = lookupConfig;
        this.ngZone = ngZone;
        this.cdr = cdr;
        this.localeId = localeId;
        this.resources = resources;
        this.localePipe = localePipe;
        this.http = http;
        this.message = message;
        this.cls = 'd-flex flex-fill h-100';
        this.showClearButton = false;
        this.bindingData = {};
        this.farrisUserHelpShowTabIds = 'recent,organization';
        this.activeTabId = 'organization';
        this.selectedUserIds = '';
        this.userTypeCollection = [
            { text: this.localePipe.transform('component.userPerformer.regularUser'), value: 'user' },
            { text: this.localePipe.transform('component.userPerformer.variablePart'), value: 'variable' }
        ];
        this.userType = this.userTypeCollection[0].value;
        this.variableOrgTypes = [
            { name: this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' },
            { name: this.localePipe.transform('component.userPerformer.administrative_organization'), value: 'Administrative_organization' }
        ];
        this.curOrgType = this.variableOrgTypes[0].value;
        this.hasAdminOrg = false;
        this.userTypeButtonNeedShow = false; // 用户类型单选按钮是否需要显示
        // 用户类型单选按钮是否需要显示
        this.multiSelect = true; //选人组件是否支持多选（编辑用户时只能单选）
        this.users = [];
        this.localePipe = this.localePipe || new WfLocalePipe(localeId, resources);
    }
    /**
     * @return {?}
     */
    UserPerformerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var url = '/api/runtime/wf/v1.0/reportingOrgType/hasAdminOrg';
        this.http.get(url).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.hasAdminOrg = data;
            // inSuite场景，变量参与者场景下显示用户类型
            if (_this.designerUIState.scene === 'inSuite' && _this.userType === 'variable') {
                _this.userTypeButtonNeedShow = true;
            }
            else {
                _this.userTypeButtonNeedShow = data && (_this.userType === 'variable' || _this.userType === null);
            }
        }));
    };
    /**
     * @return {?}
     */
    UserPerformerComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.ngZone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            _this.inputGroup.nativeElement.addEventListener('mouseenter', _this.onMouseEnter.bind(_this));
            _this.inputGroup.nativeElement.addEventListener('mouseleave', _this.onMouseLeave.bind(_this));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    UserPerformerComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = true;
        if (this.showClearButton) {
            this.toggleClearIcon(event, true);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    UserPerformerComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showClearButton = false;
        this.toggleClearIcon(event, false);
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    UserPerformerComponent.prototype.toggleClearIcon = /**
     * @private
     * @param {?} event
     * @param {?=} isShow
     * @return {?}
     */
    function (event, isShow) {
        if (isShow === void 0) { isShow = false; }
        /** @type {?} */
        var str = isShow ? '' : 'none';
        /** @type {?} */
        var clearIcon = event.target.querySelector('.input-group-clear');
        if (clearIcon) {
            clearIcon.style.display = str;
        }
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UserPerformerComponent.prototype.clear = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.bindingData = {};
        this.users = [];
        this.selectedUserIds = '';
        this.variableOrgTypes = [
            { name: this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' },
            { name: this.localePipe.transform('component.userPerformer.administrative_organization'), value: 'Administrative_organization' }
        ];
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UserPerformerComponent.prototype.selectUsers = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        // 固定用户
        if (this.userType === this.userTypeCollection[0].value) {
            this.lookupConfig.getLookupConfig().subscribe((/**
             * @param {?} re
             * @return {?}
             */
            function (re) {
                // 项目配置了自己的帮助时
                if (re.user && re.user.impl) {
                    System.import(re.user.impl)
                        .then((/**
                     * @param {?} moduleFactorys
                     * @return {?}
                     */
                    function (moduleFactorys) {
                        /** @type {?} */
                        var moduleFactory = Object.values(moduleFactorys)[0];
                        /** @type {?} */
                        var moduleRef = moduleFactory.create(_this.injector);
                        moduleRef.instance.showHelp().subscribe((/**
                         * @param {?} data
                         * @return {?}
                         */
                        function (data) {
                            if (data && data.length > 0) {
                                _this.users = data.map((/**
                                 * @param {?} u
                                 * @return {?}
                                 */
                                function (u) {
                                    /** @type {?} */
                                    var user = new UserPerformerEntity(u.id, u.name, 'wf.UserParticipantExpression');
                                    user.orgId = u.orgId;
                                    user.orgName = u.orgName;
                                    user.userType = _this.userTypeCollection[0].value;
                                    return user;
                                }));
                            }
                        }));
                    }));
                }
                else { // 加载默认帮助
                    _this.userHelp.farrisDialogshow();
                }
            }));
        }
        else {
            this.showExprHelp();
        }
    };
    /**
     * @return {?}
     */
    UserPerformerComponent.prototype.editConditon = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
        // this.expr.clearContext();
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _e = tslib_1.__values(this.designerUIState.schemas), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var schema = _f.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        context = this.designerUIState.addContext(context);
        if (this.designerUIState.subActivityContext.length > 0) {
            var _loop_1 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _g = tslib_1.__values(this.designerUIState.subActivityContext), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var variable = _h.value;
                    _loop_1(variable);
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        if (this.designerUIState.activityComponentContext.length > 0) {
            var _loop_2 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _j = tslib_1.__values(this.designerUIState.activityComponentContext), _k = _j.next(); !_k.done; _k = _j.next()) {
                    var variable = _k.value;
                    _loop_2(variable);
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_1 = tslib_1.__values(context), context_1_1 = context_1.next(); !context_1_1.done; context_1_1 = context_1.next()) {
                    var v = context_1_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (context_1_1 && !context_1_1.done && (_d = context_1.return)) _d.call(context_1);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        this.expr.setEditPattern(ExprEditMode.Conditional); // 表达式展现模式：默认简易版
        this.expr.addExpressionText(this.condition);
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            _this.condition = expressioninfo;
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    UserPerformerComponent.prototype.usersSelect = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        this.users = event.data.map((/**
         * @param {?} u
         * @return {?}
         */
        function (u) {
            /** @type {?} */
            var user = new UserPerformerEntity(u.userId, u.name, 'wf.UserParticipantExpression');
            user.orgId = u.defaultOrgId;
            user.orgName = u.orgAllPath;
            user.userType = _this.userTypeCollection[0].value;
            return user;
        }));
    };
    /**
     * @return {?}
     */
    UserPerformerComponent.prototype.showExprHelp = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var e_5, _a, e_6, _b, e_7, _c, e_8, _d, e_9, _e;
        // this.expr.clearContext();
        this.expr.setEditPattern(ExprEditMode.Advanced);
        if (this.designerUIState.schemas.length > 0) {
            try {
                for (var _f = tslib_1.__values(this.designerUIState.schemas), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var schema = _g.value;
                    this.expr.addSchema('Schema', schema);
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
                }
                finally { if (e_5) throw e_5.error; }
            }
            if (this.designerUIState.schemas[0].entityTypes && this.designerUIState.schemas[0].entityTypes.length > 0) {
                /** @type {?} */
                var entityType = this.designerUIState.schemas[0].entityTypes[0];
                this.expr.addInjectedEntity(entityType.name, 'Schema', entityType.name, InjectedType.EntityType);
            }
        }
        /** @type {?} */
        var context = new Array();
        if (this.designerUIState.participantContext.length > 0) {
            try {
                for (var _h = tslib_1.__values(this.designerUIState.participantContext), _j = _h.next(); !_j.done; _j = _h.next()) {
                    var variable = _j.value;
                    context.push(variable);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        if (this.designerUIState.subActivityContext.length > 0) {
            var _loop_3 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _k = tslib_1.__values(this.designerUIState.subActivityContext), _l = _k.next(); !_l.done; _l = _k.next()) {
                    var variable = _l.value;
                    _loop_3(variable);
                }
            }
            catch (e_7_1) { e_7 = { error: e_7_1 }; }
            finally {
                try {
                    if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
                }
                finally { if (e_7) throw e_7.error; }
            }
        }
        if (this.designerUIState.processVariableContext.length > 0) {
            var _loop_4 = function (variable) {
                if (!context.some((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.key === variable.key; }))) {
                    context.push(variable);
                }
            };
            try {
                for (var _m = tslib_1.__values(this.designerUIState.processVariableContext), _o = _m.next(); !_o.done; _o = _m.next()) {
                    var variable = _o.value;
                    _loop_4(variable);
                }
            }
            catch (e_8_1) { e_8 = { error: e_8_1 }; }
            finally {
                try {
                    if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
                }
                finally { if (e_8) throw e_8.error; }
            }
        }
        if (context.length > 0) {
            try {
                for (var context_2 = tslib_1.__values(context), context_2_1 = context_2.next(); !context_2_1.done; context_2_1 = context_2.next()) {
                    var v = context_2_1.value;
                    this.expr.addContext(v);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (context_2_1 && !context_2_1.done && (_e = context_2.return)) _e.call(context_2);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        if (this.users.length > 0) {
            this.expr.addExpressionText(this.users[0].performerId);
        }
        else {
            this.expr.addExpressionText('');
        }
        this.expr.buildExpression().then((/**
         * @param {?} expressioninfo
         * @return {?}
         */
        function (expressioninfo) {
            var e_10, _a;
            /** @type {?} */
            var user = new UserPerformerEntity(expressioninfo, '', 'wf.UserParticipantExpression');
            user.tag = 'expression';
            user.performerName = _this.variableParticipantName(expressioninfo);
            user.userType = _this.userTypeCollection[1].value;
            if (_this.variableParticipantName(expressioninfo) === '') {
                _this.message.error(_this.localePipe.transform('component.userPerformer.cantUseContext'));
                _this.users = [];
            }
            else {
                _this.users = [user];
            }
            try {
                for (var _b = tslib_1.__values(_this.designerUIState.participantContext), _c = _b.next(); !_c.done; _c = _b.next()) { // 根据表达式中的函数名判断是否使用的是上下文变量,除三种特殊上下文变量其余放开限制
                    var c = _c.value;
                    if (user.performerId.indexOf(c.key) >= 0) {
                        _this.variableOrgTypes = [
                            { name: _this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' }
                        ];
                        break;
                    }
                    else {
                        _this.variableOrgTypes = [
                            { name: _this.localePipe.transform('component.userPerformer.sys'), value: 'Sys' },
                            { name: _this.localePipe.transform('component.userPerformer.administrative_organization'), value: 'Administrative_organization' }
                        ];
                    }
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_10) throw e_10.error; }
            }
            //点击确定后，去除表达式里面的新增的上下文变量
            if (context.length > 0) {
                _this.expr.exprEntity.contextEntities = _this.expr.exprEntity.contextEntities.filter((/**
                 * @param {?} x
                 * @return {?}
                 */
                function (x) { return !context.some((/**
                 * @param {?} y
                 * @return {?}
                 */
                function (y) { return y.key === x.key; })); }));
            }
        }));
    };
    /**
     * @return {?}
     */
    UserPerformerComponent.prototype.getPerformers = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.users.map((/**
         * @param {?} user
         * @return {?}
         */
        function (user) {
            if (user.orgId === undefined) {
                user.orgType = _this.curOrgType;
                return user;
            }
        }));
        if (!this.condition) {
            this.condition = '';
        }
        if (this.condition || this.condition === '') {
            this.users = this.users.map((/**
             * @param {?} user
             * @return {?}
             */
            function (user) {
                user.condition = _this.condition;
                return user;
            }));
        }
        return this.users;
    };
    /**
     * @private
     * @param {?} expr
     * @return {?}
     */
    UserPerformerComponent.prototype.variableParticipantName = /**
     * @private
     * @param {?} expr
     * @return {?}
     */
    function (expr) {
        var e_11, _a, e_12, _b;
        try {
            for (var _c = tslib_1.__values(this.designerUIState.participantContext), _d = _c.next(); !_d.done; _d = _c.next()) {
                var c = _d.value;
                if (expr.indexOf(c.key) > -1) {
                    if (this.curOrgType !== 'Sys') { // 行政人员类型不允许使用上下文变量
                        return '';
                    }
                    return c.name;
                }
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_11) throw e_11.error; }
        }
        try {
            for (var _e = tslib_1.__values(this.designerUIState.processVariableContext), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                if (expr.indexOf(c.key) > -1) {
                    return c.name;
                }
            }
        }
        catch (e_12_1) { e_12 = { error: e_12_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_12) throw e_12.error; }
        }
        return JSON.parse(expr).expr;
    };
    /**
     * @param {?} data
     * @return {?}
     */
    UserPerformerComponent.prototype.orgTypeChange = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        if (data === 'Sys') {
            this.curOrgType = this.variableOrgTypes[0].value;
        }
        else {
            this.curOrgType = this.variableOrgTypes[1].value;
        }
    };
    UserPerformerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-user-performer',
                    template: "<div class=\"d-flex flex-fill farris-overflow-y-auto p-md-2\" style=\"background: #FFF;\">\r\n  <div class=\"d-flex flex-fill farris-overflow-y-auto mx-3 my-2\" style=\"border-radius:16px;border: 1.5px solid #F1F3F7;\">\r\n  <form style=\"width: 100%;\" >\r\n    <div class=\"d-flex m-2 flex-column w-100\">\r\n      <div class=\"d-flex flex-column\">\r\n        <div class=\"farris-form form-inline  farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-info text-danger\">*</span>\r\n                  <span class=\"farris-label-text\" *ngIf=\"userType === 'user'\">{{'component.userPerformer.user'|wfLocale}}</span>\r\n                  <span class=\"farris-label-text\" *ngIf=\"userType === 'variable'\">{{'component.userPerformer.variable'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div #inputGroup class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [value]=\"users | usersName \" name=\"users\" [readOnly]=\"true\" />\r\n                    <div *ngIf=\"multiSelect\" class=\"input-group-append\">\r\n                      <span [style.display]=\"showClearButton ? '' : 'none'\" class=\"input-group-text input-group-clear\"\r\n                        (click)=\"clear($event)\">\r\n                        <i class=\"f-icon modal_close\"></i>\r\n                      </span>\r\n                      <span class=\"input-group-text\" (click)=\"selectUsers($event)\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex flex-column\">\r\n        <div class=\"farris-form form-inline farris-form-inline mr-5\">\r\n          <div class=\"col-12 farris-group-auto my-4\">\r\n            <div class=\"farris-group-wrap\">\r\n              <div class=\"form-group farris-form-group\">\r\n                <label class=\"col-form-label\">\r\n                  <span class=\"farris-label-text\">{{'component.userPerformer.condition'|wfLocale}}</span>\r\n                </label>\r\n                <div class=\"farris-input-wrap\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"condition\" name=\"conditon\" [readOnly]=\"true\" />\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text\" (click)=\"editConditon()\" style=\"background: #FFF;\">\r\n                        <i class=\"f-icon f-icon-lookup\"></i>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"farris-feedback valid-feedback\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>\r\n\r\n<farris-personnel-selector #userHelp style=\"display: none\" [readonly]=\"false\" [width]=\"'100%'\"\r\n  [multiSelect]=\"multiSelect\" [includeJobLeavers]=\"false\" [includeCurrentUser]=\"true\" [unSelectedUserIds]=\"users | usersId \"\r\n  [enableChildHierarchy]=\"true\" [showTabIds]=\"farrisUserHelpShowTabIds\" [activeTabId]=\"activeTabId\"\r\n  [userIds]=\"selectedUserIds\" [personnelOrderField]=\"'orderby_ordernum'\" [userTypeMode]=\"'WfMode'\"\r\n  [includeStopUser]=\"false\" (selectionsChange)=\"usersSelect($event)\">\r\n</farris-personnel-selector>\r\n",
                    providers: [
                        WfLocalePipe,
                    ],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    UserPerformerComponent.ctorParameters = function () { return [
        { type: ProcessDesignerUIState },
        { type: ExpressionService },
        { type: Injector },
        { type: PerformerConfigService },
        { type: NgZone },
        { type: ChangeDetectorRef, decorators: [{ type: Optional }] },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WF_LANG_RESOURCES,] }] },
        { type: WfLocalePipe, decorators: [{ type: Optional }] },
        { type: HttpService },
        { type: MessagerService }
    ]; };
    UserPerformerComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        userHelp: [{ type: ViewChild, args: [PersonnelSelectorComponent,] }],
        inputGroup: [{ type: ViewChild, args: ['inputGroup',] }]
    };
    return UserPerformerComponent;
}());
export { UserPerformerComponent };
if (false) {
    /** @type {?} */
    UserPerformerComponent.prototype.cls;
    /** @type {?} */
    UserPerformerComponent.prototype.userHelp;
    /** @type {?} */
    UserPerformerComponent.prototype.inputGroup;
    /** @type {?} */
    UserPerformerComponent.prototype.showClearButton;
    /** @type {?} */
    UserPerformerComponent.prototype.bindingData;
    /** @type {?} */
    UserPerformerComponent.prototype.farrisUserHelpShowTabIds;
    /** @type {?} */
    UserPerformerComponent.prototype.activeTabId;
    /** @type {?} */
    UserPerformerComponent.prototype.selectedUserIds;
    /** @type {?} */
    UserPerformerComponent.prototype.userTypeCollection;
    /** @type {?} */
    UserPerformerComponent.prototype.userType;
    /** @type {?} */
    UserPerformerComponent.prototype.variableOrgTypes;
    /** @type {?} */
    UserPerformerComponent.prototype.curOrgType;
    /** @type {?} */
    UserPerformerComponent.prototype.hasAdminOrg;
    /** @type {?} */
    UserPerformerComponent.prototype.userTypeButtonNeedShow;
    /** @type {?} */
    UserPerformerComponent.prototype.multiSelect;
    /** @type {?} */
    UserPerformerComponent.prototype.condition;
    /** @type {?} */
    UserPerformerComponent.prototype.users;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.designerUIState;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.expr;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.lookupConfig;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.localeId;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.resources;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.localePipe;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    UserPerformerComponent.prototype.message;
}
//# sourceMappingURL=data:application/json;base64,