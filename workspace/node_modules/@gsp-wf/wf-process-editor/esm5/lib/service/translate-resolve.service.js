/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Inject, LOCALE_ID } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
var TranslateResolveService = /** @class */ (function () {
    function TranslateResolveService(translate, curLanguage) {
        this.translate = translate;
        this.curLanguage = curLanguage;
    }
    /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    TranslateResolveService.prototype.resolve = /**
     * @param {?} route
     * @param {?} state
     * @return {?}
     */
    function (route, state) {
        this.translate.defaultLang = this.curLanguage;
        return this.translate.getTranslation(this.curLanguage);
    };
    TranslateResolveService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    TranslateResolveService.ctorParameters = function () { return [
        { type: TranslateService },
        { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }
    ]; };
    return TranslateResolveService;
}());
export { TranslateResolveService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    TranslateResolveService.prototype.translate;
    /**
     * @type {?}
     * @private
     */
    TranslateResolveService.prototype.curLanguage;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLXJlc29sdmUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bnc3Atd2Yvd2YtcHJvY2Vzcy1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS90cmFuc2xhdGUtcmVzb2x2ZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFHdkQ7SUFHRSxpQ0FDVSxTQUEyQixFQUNSLFdBQW1CO1FBRHRDLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBQ1IsZ0JBQVcsR0FBWCxXQUFXLENBQVE7SUFDNUMsQ0FBQzs7Ozs7O0lBQ0wseUNBQU87Ozs7O0lBQVAsVUFBUSxLQUF3RCxFQUFFLEtBQXFEO1FBQ3JILElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDOUMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDekQsQ0FBQzs7Z0JBVkYsVUFBVTs7OztnQkFIRixnQkFBZ0I7NkNBUXBCLE1BQU0sU0FBQyxTQUFTOztJQU1yQiw4QkFBQztDQUFBLEFBWEQsSUFXQztTQVZZLHVCQUF1Qjs7Ozs7O0lBR2hDLDRDQUFtQzs7Ozs7SUFDbkMsOENBQThDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0LCBMT0NBTEVfSUQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xyXG5pbXBvcnQgeyBSZXNvbHZlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFRyYW5zbGF0ZVJlc29sdmVTZXJ2aWNlIGltcGxlbWVudHMgUmVzb2x2ZTxhbnk+IHtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIHRyYW5zbGF0ZTogVHJhbnNsYXRlU2VydmljZSxcclxuICAgIEBJbmplY3QoTE9DQUxFX0lEKSBwcml2YXRlIGN1ckxhbmd1YWdlOiBzdHJpbmdcclxuICApIHsgfVxyXG4gIHJlc29sdmUocm91dGU6IGltcG9ydCAoJ0Bhbmd1bGFyL3JvdXRlcicpLkFjdGl2YXRlZFJvdXRlU25hcHNob3QsIHN0YXRlOiBpbXBvcnQgKCdAYW5ndWxhci9yb3V0ZXInKS5Sb3V0ZXJTdGF0ZVNuYXBzaG90KSB7XHJcbiAgICB0aGlzLnRyYW5zbGF0ZS5kZWZhdWx0TGFuZyA9IHRoaXMuY3VyTGFuZ3VhZ2U7XHJcbiAgICByZXR1cm4gdGhpcy50cmFuc2xhdGUuZ2V0VHJhbnNsYXRpb24odGhpcy5jdXJMYW5ndWFnZSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==