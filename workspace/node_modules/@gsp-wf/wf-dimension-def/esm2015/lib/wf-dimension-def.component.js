/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { MessagerService } from '@farris/ui-messager';
import { DimenDefEntityUtil } from './entity/dimendef-entity.util';
import { ItemEditState, DimensionInputType } from './entity/dimensiondef.entity';
import { WFDimensionDefViewmodel } from './service/wf-dimension-def.viewModel';
import { NotifyService } from '@farris/ui-notify';
import { WFDimensionDefUIState } from './service/wf-dimension-def.uistate';
import { forkJoin } from 'rxjs/observable/forkJoin';
import { switchMap, catchError } from 'rxjs/operators';
import { of } from 'rxjs';
export class WfDimensionDefComponent {
    /**
     * @param {?} messageService
     * @param {?} viewmodel
     * @param {?} notifyService
     * @param {?} uistate
     */
    constructor(messageService, viewmodel, notifyService, uistate) {
        this.messageService = messageService;
        this.viewmodel = viewmodel;
        this.notifyService = notifyService;
        this.uistate = uistate;
        this.entry = 'flowForm';
        // tslint:disable-next-line: variable-name
        this._editable = false;
        this.data = new Array();
        this.editData = new Array();
    }
    /**
     * @return {?}
     */
    get flowFormId() {
        return this._flowFormId;
    }
    /**
     * @param {?} id
     * @return {?}
     */
    set flowFormId(id) {
        this._flowFormId = id;
        this.load();
        this.getDimensionDefSet(this._flowFormId);
    }
    /**
     * @param {?} s
     * @return {?}
     */
    set schema(s) {
        this.uistate.schema = s;
    }
    /**
     * @return {?}
     */
    get schema() {
        return this.uistate.schema;
    }
    /**
     * @param {?} m
     * @return {?}
     */
    set beMetaData(m) {
        this.uistate.beMetaData = m;
    }
    /**
     * @return {?}
     */
    get beMetaData() {
        return this.uistate.beMetaData;
    }
    /**
     * @param {?} e
     * @return {?}
     */
    set editable(e) {
        this._editable = e;
        for (const d of this.editData) {
            d.canEdit = this._editable;
        }
    }
    /**
     * @return {?}
     */
    get editable() {
        return this._editable;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
    }
    /**
     * @return {?}
     */
    load() {
        if (this.flowFormId) {
            this.viewmodel.loadDimensionDefs(this.flowFormId).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            (re) => {
                this.data = re;
                this.editData = [];
                if (this.data && this.data.length > 0) {
                    this.data.forEach((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => {
                        this.addItem(item, this.editable);
                    }));
                }
            }));
        }
    }
    /**
     * @param {?} flowFormId
     * @return {?}
     */
    getDimensionDefSet(flowFormId) {
        if (flowFormId) {
            this.viewmodel.getDimensionDefSet(flowFormId).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            re => {
                this.dimensionDefSet = re;
            }));
        }
    }
    /**
     * @param {?} index
     * @return {?}
     */
    hasItem(index) {
        return this.editData.find((/**
         * @param {?} item
         * @return {?}
         */
        item => item.index === index));
    }
    /**
     * @param {?} index
     * @return {?}
     */
    getItem(index) {
        return this.hasItem(index) ? this.editData.find((/**
         * @param {?} item
         * @return {?}
         */
        item => item.index === index)).itemData : null;
    }
    /**
     * @param {?} index
     * @param {?} itemData
     * @return {?}
     */
    setItem(index, itemData) {
        this.editData.find((/**
         * @param {?} item
         * @return {?}
         */
        item => item.index === index)).itemData = itemData;
    }
    /**
     * @param {?} itemData
     * @param {?} canEdit
     * @return {?}
     */
    addItem(itemData, canEdit) {
        /** @type {?} */
        const editDataItem = new ItemEditState();
        editDataItem.canEdit = canEdit;
        editDataItem.index = this.editData.length;
        editDataItem.itemData = Object.assign({}, itemData);
        editDataItem.id = itemData.id;
        this.editData.push(editDataItem);
    }
    /**
     * @param {?} index
     * @return {?}
     */
    getTitle(index) {
        /** @type {?} */
        let suffix = '';
        switch (index) {
            case 0:
                suffix = '一';
                break;
            case 1:
                suffix = '二';
                break;
        }
        return `维度${suffix}`;
    }
    /**
     * @param {?} index
     * @return {?}
     */
    getState(index) {
        if (!this.hasItem(index)) {
            return false;
        }
        /** @type {?} */
        const sysInit = this.editData.find((/**
         * @param {?} item
         * @return {?}
         */
        item => item.index === index)).itemData.sysInit;
        return sysInit === 1 ? true : false;
    }
    /**
     * @param {?} index
     * @return {?}
     */
    isEditState(index) {
        if (!this.hasItem(index)) {
            return false;
        }
        return this.editData.find((/**
         * @param {?} item
         * @return {?}
         */
        item => item.index === index)).canEdit;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    edit(item) {
        this.editData.find((/**
         * @param {?} d
         * @return {?}
         */
        d => d.id === item.id)).canEdit = true;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    remove(item) {
        if (this.dimensionDefSet && (item.id === this.dimensionDefSet.dimension1 || item.id === this.dimensionDefSet.dimension2)) {
            this.messageService.info('当前维度定义已在流程分配维度配置中启用');
            return;
        }
        if (this.entry === 'flowForm') {
            this.removeDimensionDef(item);
            // const i = this.data.findIndex(d => d.id === item.id);
            // if (i > -1) {
            //   this.data.splice(i, 1);
            // }
        }
        else {
            this.messageService.question(`确认删除'${this.getTitle(item.index)}'吗？`, (/**
             * @return {?}
             */
            () => {
                if (this.data.findIndex((/**
                 * @param {?} d
                 * @return {?}
                 */
                d => d.id === item.id)) === -1) {
                    this.removeDimensionDef(item);
                    this.notifyService.success('删除成功');
                    return;
                }
                this.viewmodel.removeDimensionDef(item.id).subscribe((/**
                 * @param {?} re
                 * @return {?}
                 */
                re => {
                    this.removeDimensionDef(item);
                    /** @type {?} */
                    const i = this.data.findIndex((/**
                     * @param {?} d
                     * @return {?}
                     */
                    d => d.id === item.id));
                    if (i > -1) {
                        this.data.splice(i, 1);
                    }
                    this.notifyService.success('删除成功');
                }), (/**
                 * @param {?} err
                 * @return {?}
                 */
                err => {
                    this.notifyService.error('删除失败，请联系管理员查看原因！');
                }));
            }));
        }
    }
    /**
     * @return {?}
     */
    getDimensionDefs() {
        return this.editData.map((/**
         * @param {?} d
         * @return {?}
         */
        d => d.itemData));
    }
    /**
     * @private
     * @param {?} item
     * @return {?}
     */
    removeDimensionDef(item) {
        /** @type {?} */
        const index = this.editData.findIndex((/**
         * @param {?} d
         * @return {?}
         */
        d => d.id === item.id));
        if (index > -1) {
            this.editData.splice(index, 1);
        }
        if (index < this.editData.length) {
            for (let i = 0; i < this.editData.length; i++) {
                this.editData[i].index = i;
            }
        }
    }
    /**
     * @param {?} item
     * @return {?}
     */
    save(item) {
        /** @type {?} */
        const v = this.validate(item.itemData);
        if (!v.result) {
            this.messageService.info(v.message);
            return;
        }
        if (this.data.findIndex((/**
         * @param {?} d
         * @return {?}
         */
        d => d.id === item.id)) === -1) {
            this.viewmodel.addDimensionDef(item.itemData).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            re => {
                this.endEdit(item);
                this.data.push(Object.assign({}, item.itemData));
                this.notifyService.success('保存成功');
            }), (/**
             * @param {?} err
             * @return {?}
             */
            err => {
                this.notifyService.error('保存失败，请联系管理员查看原因！');
            }));
        }
        else {
            this.viewmodel.updateDimensionDef(item.itemData).subscribe((/**
             * @param {?} re
             * @return {?}
             */
            re => {
                this.endEdit(item);
                /** @type {?} */
                const data = this.data.find((/**
                 * @param {?} d
                 * @return {?}
                 */
                d => d.id === item.id));
                Object.assign(data, item.itemData);
                this.notifyService.success('保存成功');
            }), (/**
             * @param {?} err
             * @return {?}
             */
            err => {
                this.notifyService.error('保存失败，请联系管理员查看原因！');
            }));
        }
    }
    /**
     * @return {?}
     */
    saveAll() {
        /** @type {?} */
        const deleteDefs = this.data.filter((/**
         * @param {?} d
         * @return {?}
         */
        d => this.editData.findIndex((/**
         * @param {?} e
         * @return {?}
         */
        e => e.id === d.id)) === -1));
        /** @type {?} */
        const addDefs = this.editData.filter((/**
         * @param {?} e
         * @return {?}
         */
        e => this.data.findIndex((/**
         * @param {?} d
         * @return {?}
         */
        d => d.id === e.id)) === -1)).map((/**
         * @param {?} e
         * @return {?}
         */
        e => e.itemData));
        /** @type {?} */
        const updateDefs = this.editData.filter((/**
         * @param {?} e
         * @return {?}
         */
        e => this.data.findIndex((/**
         * @param {?} d
         * @return {?}
         */
        d => d.id === e.id)) > -1))
            .map((/**
         * @param {?} e
         * @return {?}
         */
        e => e.itemData))
            .filter((/**
         * @param {?} d
         * @return {?}
         */
        d => d.sysInit === 0));
        return forkJoin(deleteDefs.map((/**
         * @param {?} d
         * @return {?}
         */
        d => {
            return this.viewmodel.removeDimensionDef(d.id);
        })).concat(updateDefs.map((/**
         * @param {?} u
         * @return {?}
         */
        u => {
            return this.viewmodel.updateDimensionDef(u);
        })).concat(addDefs.map((/**
         * @param {?} a
         * @return {?}
         */
        a => {
            return this.viewmodel.addDimensionDef(a);
        }))))).pipe(switchMap((/**
         * @param {?} re
         * @return {?}
         */
        re => {
            this.data = this.editData.map((/**
             * @param {?} e
             * @return {?}
             */
            e => e.itemData));
            // this.editData.map(e => e.canEdit = false);
            return of(true);
        })), catchError((/**
         * @param {?} err
         * @return {?}
         */
        err => {
            console.error(err);
            return of(false);
        })));
        //   .subscribe(re => {
        //   this.data = this.editData.map(e => e.itemData);
        //   this.editData.map(e => e.canEdit = false);
        // },
        // err => {
        //   this.notifyService.error('保存维度定义失败，请联系系统管理员查看原因！');
        // });
    }
    /**
     * @param {?} item
     * @return {?}
     */
    cancel(item) {
        this.endEdit(item);
        if (this.data.findIndex((/**
         * @param {?} d
         * @return {?}
         */
        d => d.id === item.id)) === -1) {
            this.removeDimensionDef(item);
            return;
        }
        else {
            Object.assign(this.editData.find((/**
             * @param {?} d
             * @return {?}
             */
            d => d.id === item.id)).itemData, this.data.find((/**
             * @param {?} d
             * @return {?}
             */
            d => d.id === item.id)));
        }
    }
    /**
     * @return {?}
     */
    addHandler() {
        if (this.entry === 'flowForm' && !this.editable) {
            return;
        }
        /** @type {?} */
        const info = DimenDefEntityUtil.newDimendefEntity(this.flowFormId);
        this.addItem(info, true);
    }
    /**
     * @param {?} index
     * @return {?}
     */
    isOtherItemEditting(index) {
        /** @type {?} */
        let isOtherItemEditting = false;
        this.editData.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (item.canEdit === true && item.index !== index) {
                isOtherItemEditting = true;
                this.messageService.info(`请先保存对于'${this.getTitle(item.index)}'的修改。`);
            }
        }));
        return isOtherItemEditting;
    }
    /**
     * @param {?} item
     * @return {?}
     */
    endEdit(item) {
        for (const d of this.editData) {
            if (d.id === item.id) {
                d.canEdit = false;
            }
        }
    }
    /**
     * @private
     * @param {?} d
     * @return {?}
     */
    validate(d) {
        if (!d.code) {
            return { result: false, message: '维度定义不允许编号为空，请修改！' };
        }
        else if (!d.dimensionName) {
            return { result: false, message: '维度定义不允许维度名称为空，请修改！' };
        }
        else if (!d.dimensionCode) {
            return { result: false, message: '维度定义不允许分配维度为空，请修改！' };
        }
        else if (d.inputType === DimensionInputType.Help && !d.smartHelp) {
            return { result: false, message: '维度定义数据类型为帮助，但帮助值为空，请修改！' };
        }
        else if (d.inputType === DimensionInputType.Enum && !d.enumList) {
            return { result: false, message: '维度定义数据类型为枚举，但枚举值为空，请修改！' };
        }
        return { result: true, message: '' };
    }
}
WfDimensionDefComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf-dimension-def',
                template: "<wf-dimension-panel [model]=\"['b']\" [width]=\"'700px'\" [defaultExpand]=\"true\">\r\n    <div *ngFor=\"let item of editData; index as index;\"\r\n        style=\"width: 100%;border: 1px solid rgba(0, 0, 0, .125);margin-bottom: 25px;\">\r\n        <wf-dimension-panel-item [title]=\"getTitle(index)\" [sysInit]=\"getState(index)\" [value]=\"index\" [editState]=\"entry==='billCategory'?isEditState(index):false\">\r\n            <ng-template #contentTempl>\r\n                <wf-dimension-item-card [data]=\"getItem(index)\" [canCardEdit]=\"isEditState(index)\" [sysInit]=\"getState(index)\">\r\n                </wf-dimension-item-card>\r\n            </ng-template>\r\n            <ng-template #toolTempl>\r\n                <farris-button *ngIf=\"entry==='billCategory'\" [type]=\"'link'\" (click)=\"edit(item)\"><span class=\"f-icon text-info k-i-edit\"></span>\u4FEE\u6539\r\n                </farris-button>\r\n                <farris-button *ngIf=\"editable && !getState(index)\" [type]=\"'link'\" (click)=\"remove(item)\"><span\r\n                        class=\"f-icon text-info k-i-delete\"></span> \u5220\u9664\r\n                </farris-button>\r\n            </ng-template>\r\n            <ng-template #bottomRef>\r\n                <farris-button (click)=\"save(item)\">\u4FDD\u5B58</farris-button>\r\n                <farris-button style=\"margin-left:10px\" [type]=\"'secondary'\" (click)=\"cancel(item)\">\u53D6\u6D88</farris-button>\r\n            </ng-template>\r\n        </wf-dimension-panel-item>\r\n    </div>\r\n</wf-dimension-panel>\r\n<div *ngIf=\"hasItem(1)\" class=\"panel-ony-two\">\r\n    <div style=\"width: 250px;margin:0 auto\">\r\n        <p style=\"color:rgba(217,217,217)\">Tips:\u76EE\u524D\u4EC5\u652F\u6301\u6DFB\u52A0\u4E24\u4E2A\u7EF4\u5EA6</p>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"!hasItem(1)\" class=\"panel-add\">\r\n    <div style=\"width: 100px;margin:0 auto\">\r\n        <farris-button style=\"margin:25px\" [type]=\"'link'\" [disabled]=\"entry==='flowForm'&&!editable\" (click)=\"addHandler()\">\r\n            <span *ngIf=\"!(entry==='flowForm'&&!editable)\" class=\"f-icon text-info k-i-plus\"></span>\u6DFB\u52A0\u7EF4\u5EA6</farris-button>\r\n    </div>\r\n</div>",
                styles: [".panel-add{margin:25px;padding:10px;border:1px dashed rgba(0,0,0,.125)}.panel-ony-two{margin:20px}"]
            }] }
];
/** @nocollapse */
WfDimensionDefComponent.ctorParameters = () => [
    { type: MessagerService },
    { type: WFDimensionDefViewmodel },
    { type: NotifyService },
    { type: WFDimensionDefUIState }
];
WfDimensionDefComponent.propDecorators = {
    flowFormId: [{ type: Input }],
    schema: [{ type: Input }],
    beMetaData: [{ type: Input }],
    entry: [{ type: Input }],
    editable: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    WfDimensionDefComponent.prototype._flowFormId;
    /** @type {?} */
    WfDimensionDefComponent.prototype.entry;
    /** @type {?} */
    WfDimensionDefComponent.prototype._editable;
    /**
     * @type {?}
     * @private
     */
    WfDimensionDefComponent.prototype.data;
    /** @type {?} */
    WfDimensionDefComponent.prototype.editData;
    /** @type {?} */
    WfDimensionDefComponent.prototype.dimensionDefSet;
    /**
     * @type {?}
     * @private
     */
    WfDimensionDefComponent.prototype.messageService;
    /**
     * @type {?}
     * @private
     */
    WfDimensionDefComponent.prototype.viewmodel;
    /**
     * @type {?}
     * @private
     */
    WfDimensionDefComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    WfDimensionDefComponent.prototype.uistate;
}
//# sourceMappingURL=data:application/json;base64,