/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter } from '@angular/core';
export class SelectElementComponent {
    constructor() {
        /**
         * 关闭窗口事件
         */
        this.closeModal = new EventEmitter();
        /**
         * 确认选择字段
         */
        this.confirm = new EventEmitter();
        this.progressData = {
            activeIndex: 0,
            stepMessages: [
                {
                    id: 'selectobject',
                    title: '选择节点',
                    icon: ''
                },
                {
                    id: 'selectelement',
                    title: '选择字段',
                    icon: ''
                }
            ]
        };
        this.changeObj = true;
        /**
         * 字段选择信息
         */
        this.selectEleInfo = {
            be: null,
            // be实体
            selectedObj: null,
            // be节点
            BeFields: [],
            // Be字段列表
            selectedBeFields: [],
            // Be字段ID列表
            singleElement: false,
            // 是否单选
            assoRefElement: false // 是否包含关联带出字段
        };
        this.result = {
            be: null,
            // be实体
            selectedObj: null,
            // be节点
            selectedBeFields: [],
        };
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * 页面状态变化时触发事件 {state:'', fromPageId:'', toPageId:''}
     * 其中state分别对应0：Finish:1：Cancel:2：Prev:3：Next:4：StepChange
     * @param {?} value
     * @return {?}
     */
    stateChange(value) {
        switch (value.state) {
            case 0:
                // 返回选择结果
                this.result.be = this.selectEleInfo.be;
                this.result.selectedObj = this.selectEleInfo.selectedObj;
                this.result.selectedBeFields = this.selectEleInfo.BeFields.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                (item) => {
                    /** @type {?} */
                    const ele = (/** @type {?} */ (item));
                    // 此处使用==判断值相等，若为===，则无法找到id相同的字段
                    // tslint:disable-next-line:triple-equals
                    return this.selectEleInfo.selectedBeFields.findIndex((/**
                     * @param {?} fieldId
                     * @return {?}
                     */
                    fieldId => fieldId == ele.ID)) >= 0;
                }));
                this.confirm.next(this.result);
                this.close();
                break;
            case 1:
                this.close();
                break;
            case 3:
                this.changeObj = !this.changeObj;
                break;
        }
    }
    /**
     * 关闭弹窗
     * @return {?}
     */
    close() {
        this.closeModal.next();
    }
}
SelectElementComponent.decorators = [
    { type: Component, args: [{
                selector: 'select-element',
                template: "<farris-wizard style=\"display:flex;flex:1\" [progressData]=\"progressData\" [stepClickable]=\"false\" [fill]=\"true\" [stepDirection]=\"'vertical'\" [stepPosition]=\"'PageLeft'\" (stateChange)=\"stateChange($event)\">\r\n    <wizard-page [pageId]=\"progressData.stepMessages[0].id\">\r\n        <select-object [data]=\"selectEleInfo\"></select-object>\r\n    </wizard-page>\r\n    <wizard-page [pageId]=\"progressData.stepMessages[1].id\">\r\n        <select-obj-element [data]=\"selectEleInfo\" [changeObj]=\"changeObj\"></select-obj-element>\r\n    </wizard-page>\r\n</farris-wizard>",
                styles: [":host{display:flex;position:absolute;top:0;bottom:0;left:0;right:0}"]
            }] }
];
/** @nocollapse */
SelectElementComponent.ctorParameters = () => [];
if (false) {
    /**
     * 关闭窗口事件
     * @type {?}
     */
    SelectElementComponent.prototype.closeModal;
    /**
     * 确认选择字段
     * @type {?}
     */
    SelectElementComponent.prototype.confirm;
    /** @type {?} */
    SelectElementComponent.prototype.progressData;
    /** @type {?} */
    SelectElementComponent.prototype.changeObj;
    /**
     * 字段选择信息
     * @type {?}
     */
    SelectElementComponent.prototype.selectEleInfo;
    /** @type {?} */
    SelectElementComponent.prototype.result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWVsZW1lbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC13Zi93Zi1kaW1lbnNpb24tZGVmLyIsInNvdXJjZXMiOlsibGliL3JlZk1vZHVsZS9zZWxlY3QtZWxlbWVudC9zZWxlY3QtZWxlbWVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUWhFLE1BQU0sT0FBTyxzQkFBc0I7SUE4Q2pDOzs7O1FBMUNBLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDOzs7O1FBSXJDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRWxDLGlCQUFZLEdBQUc7WUFDYixXQUFXLEVBQUUsQ0FBQztZQUNkLFlBQVksRUFBRTtnQkFDWjtvQkFDRSxFQUFFLEVBQUUsY0FBYztvQkFDbEIsS0FBSyxFQUFFLE1BQU07b0JBQ2IsSUFBSSxFQUFFLEVBQUU7aUJBQ1Q7Z0JBQ0Q7b0JBQ0UsRUFBRSxFQUFFLGVBQWU7b0JBQ25CLEtBQUssRUFBRSxNQUFNO29CQUNiLElBQUksRUFBRSxFQUFFO2lCQUNUO2FBQ0Y7U0FDRixDQUFDO1FBRUYsY0FBUyxHQUFHLElBQUksQ0FBQzs7OztRQUtqQixrQkFBYSxHQUFHO1lBQ2QsRUFBRSxFQUFFLElBQUk7O1lBQ1IsV0FBVyxFQUFFLElBQUk7O1lBQ2pCLFFBQVEsRUFBRSxFQUFFOztZQUNaLGdCQUFnQixFQUFFLEVBQUU7O1lBQ3BCLGFBQWEsRUFBRSxLQUFLOztZQUNwQixjQUFjLEVBQUUsS0FBSyxDQUFFLGFBQWE7U0FDckMsQ0FBQztRQUVGLFdBQU0sR0FBRztZQUNQLEVBQUUsRUFBRSxJQUFJOztZQUNSLFdBQVcsRUFBRSxJQUFJOztZQUNqQixnQkFBZ0IsRUFBRSxFQUFFO1NBQ3JCLENBQUE7SUFFZSxDQUFDOzs7O0lBRWpCLFFBQVE7SUFDUixDQUFDOzs7Ozs7O0lBT0QsV0FBVyxDQUFDLEtBQUs7UUFDZixRQUFRLEtBQUssQ0FBQyxLQUFLLEVBQUU7WUFDbkIsS0FBSyxDQUFDO2dCQUNKLFNBQVM7Z0JBQ1QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7Z0JBQ3ZDLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDO2dCQUN6RCxJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLE1BQU07Ozs7Z0JBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTs7MEJBQ25FLEdBQUcsR0FBRyxtQkFBQSxJQUFJLEVBQW9CO29CQUNwQyxpQ0FBaUM7b0JBQ2pDLHlDQUF5QztvQkFDekMsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLFNBQVM7Ozs7b0JBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLElBQUksR0FBRyxDQUFDLEVBQUUsRUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDMUYsQ0FBQyxFQUFDLENBQUM7Z0JBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUMvQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ2IsTUFBTTtZQUNSLEtBQUssQ0FBQztnQkFDSixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ2IsTUFBTTtZQUNSLEtBQUssQ0FBQztnQkFDSixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDakMsTUFBTTtTQUNUO0lBQ0gsQ0FBQzs7Ozs7SUFLRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDOzs7WUExRkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLHNsQkFBOEM7O2FBRS9DOzs7Ozs7Ozs7SUFLQyw0Q0FBcUM7Ozs7O0lBSXJDLHlDQUFrQzs7SUFFbEMsOENBY0U7O0lBRUYsMkNBQWlCOzs7OztJQUtqQiwrQ0FPRTs7SUFFRix3Q0FJQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgR1NQQ29tbW9uRWxlbWVudCB9IGZyb20gJ0Bnc3AtYmVmL2dzcC1jbS1tZXRhZGF0YSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3NlbGVjdC1lbGVtZW50JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2VsZWN0LWVsZW1lbnQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NlbGVjdC1lbGVtZW50LmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2VsZWN0RWxlbWVudENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgLyoqXHJcbiAgICog5YWz6Zet56qX5Y+j5LqL5Lu2XHJcbiAgICovXHJcbiAgY2xvc2VNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIC8qKlxyXG4gICAqIOehruiupOmAieaLqeWtl+autVxyXG4gICAqL1xyXG4gIGNvbmZpcm0gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgcHJvZ3Jlc3NEYXRhID0ge1xyXG4gICAgYWN0aXZlSW5kZXg6IDAsXHJcbiAgICBzdGVwTWVzc2FnZXM6IFtcclxuICAgICAge1xyXG4gICAgICAgIGlkOiAnc2VsZWN0b2JqZWN0JyxcclxuICAgICAgICB0aXRsZTogJ+mAieaLqeiKgueCuScsXHJcbiAgICAgICAgaWNvbjogJydcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGlkOiAnc2VsZWN0ZWxlbWVudCcsXHJcbiAgICAgICAgdGl0bGU6ICfpgInmi6nlrZfmrrUnLFxyXG4gICAgICAgIGljb246ICcnXHJcbiAgICAgIH1cclxuICAgIF1cclxuICB9O1xyXG5cclxuICBjaGFuZ2VPYmogPSB0cnVlO1xyXG5cclxuICAvKipcclxuICAgKiDlrZfmrrXpgInmi6nkv6Hmga9cclxuICAgKi9cclxuICBzZWxlY3RFbGVJbmZvID0ge1xyXG4gICAgYmU6IG51bGwsICAgICAgICAgICAgICAvLyBiZeWunuS9k1xyXG4gICAgc2VsZWN0ZWRPYmo6IG51bGwsICAgICAvLyBiZeiKgueCuVxyXG4gICAgQmVGaWVsZHM6IFtdLCAgICAgICAgICAvLyBCZeWtl+auteWIl+ihqFxyXG4gICAgc2VsZWN0ZWRCZUZpZWxkczogW10sICAvLyBCZeWtl+autUlE5YiX6KGoXHJcbiAgICBzaW5nbGVFbGVtZW50OiBmYWxzZSwgIC8vIOaYr+WQpuWNlemAiVxyXG4gICAgYXNzb1JlZkVsZW1lbnQ6IGZhbHNlICAvLyDmmK/lkKbljIXlkKvlhbPogZTluKblh7rlrZfmrrVcclxuICB9O1xyXG5cclxuICByZXN1bHQgPSB7XHJcbiAgICBiZTogbnVsbCwgICAgICAgICAgICAgIC8vIGJl5a6e5L2TXHJcbiAgICBzZWxlY3RlZE9iajogbnVsbCwgICAgIC8vIGJl6IqC54K5XHJcbiAgICBzZWxlY3RlZEJlRmllbGRzOiBbXSwgIC8vIEJl5a2X5q615YiX6KGoXHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOmhtemdoueKtuaAgeWPmOWMluaXtuinpuWPkeS6i+S7tiB7c3RhdGU6JycsIGZyb21QYWdlSWQ6JycsIHRvUGFnZUlkOicnfVxyXG4gICAqIOWFtuS4rXN0YXRl5YiG5Yir5a+55bqUMO+8mkZpbmlzaDox77yaQ2FuY2VsOjLvvJpQcmV2OjPvvJpOZXh0OjTvvJpTdGVwQ2hhbmdlXHJcbiAgICogQHBhcmFtIHZhbHVlIFxyXG4gICAqL1xyXG4gIHN0YXRlQ2hhbmdlKHZhbHVlKSB7XHJcbiAgICBzd2l0Y2ggKHZhbHVlLnN0YXRlKSB7XHJcbiAgICAgIGNhc2UgMDpcclxuICAgICAgICAvLyDov5Tlm57pgInmi6nnu5PmnpxcclxuICAgICAgICB0aGlzLnJlc3VsdC5iZSA9IHRoaXMuc2VsZWN0RWxlSW5mby5iZTtcclxuICAgICAgICB0aGlzLnJlc3VsdC5zZWxlY3RlZE9iaiA9IHRoaXMuc2VsZWN0RWxlSW5mby5zZWxlY3RlZE9iajtcclxuICAgICAgICB0aGlzLnJlc3VsdC5zZWxlY3RlZEJlRmllbGRzID0gdGhpcy5zZWxlY3RFbGVJbmZvLkJlRmllbGRzLmZpbHRlcigoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgZWxlID0gaXRlbSBhcyBHU1BDb21tb25FbGVtZW50O1xyXG4gICAgICAgICAgLy8g5q2k5aSE5L2/55SoPT3liKTmlq3lgLznm7jnrYnvvIzoi6XkuLo9PT3vvIzliJnml6Dms5Xmib7liLBpZOebuOWQjOeahOWtl+autVxyXG4gICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnRyaXBsZS1lcXVhbHNcclxuICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdEVsZUluZm8uc2VsZWN0ZWRCZUZpZWxkcy5maW5kSW5kZXgoZmllbGRJZCA9PiBmaWVsZElkID09IGVsZS5JRCkgPj0gMDtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmNvbmZpcm0ubmV4dCh0aGlzLnJlc3VsdCk7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDE6XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIDM6XHJcbiAgICAgICAgdGhpcy5jaGFuZ2VPYmogPSAhdGhpcy5jaGFuZ2VPYmo7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlhbPpl63lvLnnqpdcclxuICAgKi9cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuY2xvc2VNb2RhbC5uZXh0KCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==