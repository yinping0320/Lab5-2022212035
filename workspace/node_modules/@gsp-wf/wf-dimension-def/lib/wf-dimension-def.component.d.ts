import { OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { MessagerService } from '@farris/ui-messager';
import { DimensionDefEntity, ItemEditState } from './entity/dimensiondef.entity';
import { WFDimensionDefViewmodel } from './service/wf-dimension-def.viewModel';
import { NotifyService } from '@farris/ui-notify';
import { WFDimensionDefUIState } from './service/wf-dimension-def.uistate';
import { Observable } from 'rxjs';
export declare class WfDimensionDefComponent implements OnInit, OnChanges {
    private messageService;
    private viewmodel;
    private notifyService;
    private uistate;
    private _flowFormId;
    flowFormId: string;
    schema: any;
    beMetaData: any;
    entry: 'flowForm' | 'billCategory';
    _editable: boolean;
    editable: boolean;
    private data;
    editData: ItemEditState[];
    dimensionDefSet: any;
    constructor(messageService: MessagerService, viewmodel: WFDimensionDefViewmodel, notifyService: NotifyService, uistate: WFDimensionDefUIState);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    load(): void;
    getDimensionDefSet(flowFormId: string): void;
    hasItem(index: number): ItemEditState;
    getItem(index: number): DimensionDefEntity;
    setItem(index: number, itemData: any): void;
    addItem(itemData: DimensionDefEntity, canEdit: boolean): void;
    getTitle(index: number): string;
    getState(index: number): boolean;
    isEditState(index: number): boolean;
    edit(item: ItemEditState): void;
    remove(item: ItemEditState): void;
    getDimensionDefs(): DimensionDefEntity[];
    private removeDimensionDef;
    save(item: ItemEditState): void;
    saveAll(): Observable<boolean>;
    cancel(item: ItemEditState): void;
    addHandler(): void;
    isOtherItemEditting(index: number): boolean;
    endEdit(item: ItemEditState): void;
    private validate;
}
