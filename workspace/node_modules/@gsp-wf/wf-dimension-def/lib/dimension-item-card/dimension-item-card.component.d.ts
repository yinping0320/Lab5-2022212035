import { OnInit, ComponentFactoryResolver, Injector, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { BsModalService } from '@farris/ui-modal';
import { MessagerService } from '@farris/ui-messager';
import { DimensionDefEntity, DimensionType, DimensionInputType } from '../entity/dimensiondef.entity';
import { WFDimensionDefUIState } from '../service/wf-dimension-def.uistate';
import { ExpressionService } from '@gsp-svc/expression';
import { LookupConfigService } from '@farris/lookup-config';
export declare class DimensionItemCardComponent implements OnInit, OnChanges {
    private modalService;
    private resolver;
    private injector;
    private messageService;
    private uistate;
    private exprService;
    private configService;
    data: DimensionDefEntity;
    canCardEdit: boolean;
    sysInit: boolean;
    canEdit: boolean;
    /**
     * 维度种类
     */
    dimensionTypes: {
        index: number;
        text: string;
        value: DimensionType;
    }[];
    inputTypes: {
        index: number;
        text: string;
        value: DimensionInputType;
    }[];
    selectedBEMetadata: EventEmitter<any>;
    selectedHelpMetadata: EventEmitter<any>;
    groupIcon: string;
    lookupConfig: any;
    dimensionItemCode: string;
    dimensionItemName: string;
    dimensionCode: string;
    inputType: DimensionInputType;
    dimensionType: DimensionType;
    constructor(modalService: BsModalService, resolver: ComponentFactoryResolver, injector: Injector, messageService: MessagerService, uistate: WFDimensionDefUIState, exprService: ExpressionService, configService: LookupConfigService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * 维度类型
     */
    selectDimensionType(data: any): void;
    /**
     * 维度选择1-be字段
     */
    selectBEMeta(): void;
    /**
     * 输入类型
     * @param value
     */
    selectInputType(data: any): void;
    /**
     * 是否枚举输入
     */
    getIsEnumInput(): boolean;
    /**
     * 是否帮助输入
     */
    getIsSmartHelpInput(): boolean;
    /**
     * 枚举显示值
     */
    getEnumInputDisplay(): void;
    /**
     * 帮助名称
     */
    readonly helperName: string;
    enumListText: () => string;
    /**
     * 帮助选择
     */
    selectHelpMeta(): void;
    editEnumValues(): void;
}
