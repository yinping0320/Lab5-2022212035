import { OnInit, TemplateRef, ComponentFactoryResolver, Injector } from '@angular/core';
import { Subject } from 'rxjs';
import { MessagerService } from '@farris/ui-messager';
import { DatagridComponent } from '@farris/ui-datagrid';
import { EnumItem } from '../entity/dimensiondef.entity';
import { WFDimensionDefUIState } from '../service/wf-dimension-def.uistate';
import { BsModalService } from '@farris/ui-modal';
export declare class EnumEditComponent implements OnInit {
    private messageService;
    private uistate;
    private modalService;
    private resolver;
    private injector;
    cls: string;
    columns: {
        field: string;
        width: number;
        title: string;
        editor: {
            type: string;
            options: {};
        };
    }[];
    dg: DatagridComponent;
    btnRef: TemplateRef<any>;
    confirm: Subject<any>;
    closeModalEmitter: Subject<any>;
    /**
     * 显示值
     */
    editData: any[];
    maxNum: number;
    /**
     * 实际值
     */
    readonly enumValues: EnumItem[];
    constructor(messageService: MessagerService, uistate: WFDimensionDefUIState, modalService: BsModalService, resolver: ComponentFactoryResolver, injector: Injector);
    ngOnInit(): void;
    /**
     * 加载显示数据
     */
    load(enumValues: any): void;
    /**
     * 确认
     */
    onConfirm(): void;
    /**
     * 取消
     */
    cancel(): void;
    /**
     * 保存前检查
     */
    checkBeforeSave(): boolean;
    /**
     * 取消编辑
     */
    closeCell(): void;
    /**
     * 引入
     */
    import(): void;
    /**
     * 新增
     */
    add(): void;
    /**
     * 删除
     */
    remove(): void;
    createData(enumValues: EnumItem[]): any[];
}
