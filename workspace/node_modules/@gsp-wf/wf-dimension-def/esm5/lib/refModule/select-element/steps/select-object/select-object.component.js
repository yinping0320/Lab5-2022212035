/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, Input } from '@angular/core';
import { FarrisPageDetailComponent } from '@farris/ui-wizard';
var SelectObjectComponent = /** @class */ (function () {
    function SelectObjectComponent() {
        this.enableNextStep = true;
        this.detailPage = null;
        // 记录当前BE所有表的code
        this.treeTables = [];
        this.grid_selected = {};
        this.readonlyFields = []; // 不可取消勾选的字段
        // 不可取消勾选的字段
        /**
         * 左侧树信息
         */
        this.treeData = [];
        this.farrisTreeData = [];
        this.treeConfig = {
            idField: 'ID',
            columns: [
                { field: 'Name', title: 'Name', width: 200 }
            ],
            /**
             * 叶子节点图标
             */
            leafIcon: 'f-icon f-icon-folder text-info',
            /**
             * 节点展开图标
             */
            expandIcon: 'f-icon f-icon-folder-open text-info',
            /**
             * 节点折叠图标
             */
            collapseIcon: 'f-icon f-icon-folder text-info',
            /**
             * 树列表默认展开层级。 -1： 不展开； 0： 全部展开； >0:  展开到指定级数；
             */
            expandLevel: 2,
        };
    }
    Object.defineProperty(SelectObjectComponent.prototype, "cmpPageDetail", {
        set: /**
         * @param {?} cmp
         * @return {?}
         */
        function (cmp) {
            this.detailPage = cmp;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SelectObjectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.load();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    SelectObjectComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        this.load();
    };
    /**
     * @return {?}
     */
    SelectObjectComponent.prototype.load = /**
     * @return {?}
     */
    function () {
        if (this.data && this.data.be) {
            /** @type {?} */
            var mainObject = this.data.be.MainObject;
            this.treeData = this.getTablesTree(mainObject);
            this.farrisTreeData = this.getFarrisTreeData(this.treeData);
        }
    };
    /**
     * 组装farris-tree左侧树
     */
    /**
     * 组装farris-tree左侧树
     * @param {?} data
     * @return {?}
     */
    SelectObjectComponent.prototype.getFarrisTreeData = /**
     * 组装farris-tree左侧树
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this = this;
        /** @type {?} */
        var newArr = [];
        if (data && data.length) {
            data.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                /** @type {?} */
                var childrenArr = [];
                if (item && item.Children && item.Children.length) {
                    childrenArr = _this.getFarrisTreeData(item.Children);
                }
                newArr.push({ data: item, children: childrenArr, expanded: true });
            }));
        }
        return newArr;
    };
    /**
     * 组装左侧树
     */
    /**
     * 组装左侧树
     * @param {?} mainObject
     * @return {?}
     */
    SelectObjectComponent.prototype.getTablesTree = /**
     * 组装左侧树
     * @param {?} mainObject
     * @return {?}
     */
    function (mainObject) {
        var _this = this;
        var ContainChildObjects = mainObject.ContainChildObjects, ColumnGenerateID = mainObject.ColumnGenerateID, Keys = mainObject.Keys, parentTable = tslib_1.__rest(mainObject, ["ContainChildObjects", "ColumnGenerateID", "Keys"]);
        this.treeTables.push(parentTable.Code);
        // const selectedAll = this.grid_selected[parentTable.Code] ? false : true;
        // this.gridData[parentTable.Code] = this.getGridFields(parentTable.ContainElements, parentTable.Code, selectedAll);
        if (ContainChildObjects && ContainChildObjects.length > 0) {
            parentTable['Children'] = [];
            ContainChildObjects.forEach((/**
             * @param {?} child
             * @return {?}
             */
            function (child) {
                /** @type {?} */
                var childTree = _this.getTablesTree((/** @type {?} */ (child)));
                parentTable['Children'] = parentTable['Children'].concat(childTree);
            }));
        }
        // 判断主键
        if (ColumnGenerateID) {
            this.readonlyFields.push(ColumnGenerateID.ElementID);
        }
        // 判断主从表的关联字段
        if (Keys && Keys.length > 0) {
            Keys.forEach((/**
             * @param {?} key
             * @return {?}
             */
            function (key) {
                _this.readonlyFields.push(key.SourceElement);
            }));
        }
        return [parentTable];
    };
    /**
     * 选中节点事件
     * @param event 被选中节点
     */
    /**
     * 选中节点事件
     * @param {?} event 被选中节点
     * @return {?}
     */
    SelectObjectComponent.prototype.handleTreeSelection = /**
     * 选中节点事件
     * @param {?} event 被选中节点
     * @return {?}
     */
    function (event) {
        this.data.selectedObj = event.node.data;
    };
    /**
     * @return {?}
     */
    SelectObjectComponent.prototype.nextStep = /**
     * @return {?}
     */
    function () {
        // 设置当前页传递出去数据
        this.data.BeFields = this.data.selectedObj.ContainElements;
        this.detailPage.setPageData(this.data.selectedObj);
        // 下一步
        this.detailPage.nextStep();
    };
    /**
     * @return {?}
     */
    SelectObjectComponent.prototype.cancel = /**
     * @return {?}
     */
    function () {
        this.detailPage.cancelWizard();
    };
    /**
     * @param {?} args
     * @return {?}
     */
    SelectObjectComponent.prototype.pagedetailSelected = /**
     * @param {?} args
     * @return {?}
     */
    function (args) {
    };
    SelectObjectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'select-object',
                    template: "<wizard-page-detail #detailpage1 (pagedetailSelected)=\"pagedetailSelected($event)\">\r\n    <ng-template wizardPageContent>\r\n        <div class=\"f-template-wizard-page-content\" style=\"margin-left:2px\">\r\n            <farris-treetable #treetable [columns]=\"treeConfig.columns\" [showBorder]=\"false\" [showHeader]=\"false\" [data]=\"farrisTreeData\" [fit]=\"true\" [idField]=\"treeConfig.idField\" [singleSelect]=\"true\" [showCheckbox]=\"false\" [showIcon]=\"true\" [disabled]=\"false\"\r\n                [checkOnSelect]=\"true\" (nodeSelected)=\"handleTreeSelection($event)\" [leafIcon]=\"treeConfig.leafIcon\" [expandIcon]=\"treeConfig.expandIcon\" [collapseIcon]=\"treeConfig.collapseIcon\">\r\n            </farris-treetable>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template wizardPageFooter>\r\n        <div class=\"f-template-wizard-page-footer\">\r\n            <button class=\"btn btn-secondary\" (click)=\"cancel()\">\r\n              \u53D6\u6D88\r\n          </button>\r\n            <button class=\"btn btn-primary\" [disabled]=\"!enableNextStep\" (click)=\"nextStep()\">\r\n              \u4E0B\u4E00\u6B65\r\n          </button>\r\n        </div>\r\n    </ng-template>\r\n</wizard-page-detail>",
                    styles: [":host{display:flex;flex:1}button{margin:10px}"]
                }] }
    ];
    /** @nocollapse */
    SelectObjectComponent.ctorParameters = function () { return []; };
    SelectObjectComponent.propDecorators = {
        data: [{ type: Input }],
        cmpPageDetail: [{ type: ViewChild, args: [FarrisPageDetailComponent,] }]
    };
    return SelectObjectComponent;
}());
export { SelectObjectComponent };
if (false) {
    /** @type {?} */
    SelectObjectComponent.prototype.data;
    /** @type {?} */
    SelectObjectComponent.prototype.enableNextStep;
    /**
     * @type {?}
     * @private
     */
    SelectObjectComponent.prototype.detailPage;
    /** @type {?} */
    SelectObjectComponent.prototype.treeTables;
    /** @type {?} */
    SelectObjectComponent.prototype.grid_selected;
    /** @type {?} */
    SelectObjectComponent.prototype.readonlyFields;
    /**
     * 左侧树信息
     * @type {?}
     */
    SelectObjectComponent.prototype.treeData;
    /** @type {?} */
    SelectObjectComponent.prototype.farrisTreeData;
    /** @type {?} */
    SelectObjectComponent.prototype.treeConfig;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW9iamVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLWRpbWVuc2lvbi1kZWYvIiwic291cmNlcyI6WyJsaWIvcmVmTW9kdWxlL3NlbGVjdC1lbGVtZW50L3N0ZXBzL3NlbGVjdC1vYmplY3Qvc2VsZWN0LW9iamVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRzlEO0lBa0RFO1FBaENBLG1CQUFjLEdBQUcsSUFBSSxDQUFDO1FBQ2QsZUFBVSxHQUE4QixJQUFJLENBQUM7O1FBUXJELGVBQVUsR0FBRyxFQUFFLENBQUM7UUFDaEIsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFDbkIsbUJBQWMsR0FBRyxFQUFFLENBQUMsQ0FBQyxZQUFZOzs7OztRQUdqQyxhQUFRLEdBQVUsRUFBRSxDQUFDO1FBQ3JCLG1CQUFjLEdBQUcsRUFBRSxDQUFDO1FBRXBCLGVBQVUsR0FBRztZQUNYLE9BQU8sRUFBRSxJQUFJO1lBQ2IsT0FBTyxFQUFFO2dCQUNQLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUU7YUFDN0M7Ozs7WUFFRCxRQUFRLEVBQUUsZ0NBQWdDOzs7O1lBRTFDLFVBQVUsRUFBRSxxQ0FBcUM7Ozs7WUFFakQsWUFBWSxFQUFFLGdDQUFnQzs7OztZQUU5QyxXQUFXLEVBQUUsQ0FBQztTQUNmLENBQUM7SUFFYyxDQUFDO0lBOUJqQixzQkFBMEMsZ0RBQWE7Ozs7O1FBQXZELFVBQ0UsR0FBOEI7WUFFOUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7UUFDeEIsQ0FBQzs7O09BQUE7Ozs7SUE0QkQsd0NBQVE7OztJQUFSO1FB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S0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDMUMsQ0FBQzs7OztJQUVELHdDQUFROzs7SUFBUjtRQUNFLGNBQWM7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUM7UUFDM0QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNuRCxNQUFNO1FBQ04sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7O0lBQ0Qsc0NBQU07OztJQUFOO1FBQ0UsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzs7OztJQUNELGtEQUFrQjs7OztJQUFsQixVQUFtQixJQUFJO0lBRXZCLENBQUM7O2dCQXJJRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLHd0Q0FBNkM7O2lCQUU5Qzs7Ozs7dUJBWUUsS0FBSztnQ0FJTCxTQUFTLFNBQUMseUJBQXlCOztJQWtIdEMsNEJBQUM7Q0FBQSxBQXRJRCxJQXNJQztTQWpJWSxxQkFBcUI7OztJQVdoQyxxQ0FBYzs7SUFFZCwrQ0FBc0I7Ozs7O0lBQ3RCLDJDQUFxRDs7SUFRckQsMkNBQWdCOztJQUNoQiw4Q0FBbUI7O0lBQ25CLCtDQUFvQjs7Ozs7SUFHcEIseUNBQXFCOztJQUNyQiwrQ0FBb0I7O0lBRXBCLDJDQWFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZCwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGYXJyaXNQYWdlRGV0YWlsQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS13aXphcmQnO1xyXG5pbXBvcnQgeyBHU1BDb21tb25PYmplY3QgfSBmcm9tICdAZ3NwLWJlZi9nc3AtY20tbWV0YWRhdGEnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdzZWxlY3Qtb2JqZWN0JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vc2VsZWN0LW9iamVjdC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vc2VsZWN0LW9iamVjdC5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNlbGVjdE9iamVjdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICAvLyAvKipcclxuICAvLyAgICog6L6T5YWl5Y+C5pWw5qC85byPXHJcbiAgLy8gICAqL1xyXG4gIC8vIGRhdGEgPSB7XHJcbiAgLy8gICBiZTogbnVsbCwgICAgICAgICAgICAgIC8vIGJl5a6e5L2TXHJcbiAgLy8gICBzZWxlY3RlZE9iajogbnVsbCwgICAgIC8vIGJl6IqC54K5XHJcbiAgLy8gICBCZUZpZWxkczogW10sICAgICAgICAgIC8vIEJl5a2X5q615YiX6KGoXHJcbiAgLy8gICBzZWxlY3RlZEJlRmllbGRzOiBbXSwgIC8vIEJl5a2X5q61SUTliJfooahcclxuICAvLyB9O1xyXG5cclxuICBASW5wdXQoKSBkYXRhO1xyXG5cclxuICBlbmFibGVOZXh0U3RlcCA9IHRydWU7XHJcbiAgcHJpdmF0ZSBkZXRhaWxQYWdlOiBGYXJyaXNQYWdlRGV0YWlsQ29tcG9uZW50ID0gbnVsbDtcclxuICBAVmlld0NoaWxkKEZhcnJpc1BhZ2VEZXRhaWxDb21wb25lbnQpIHNldCBjbXBQYWdlRGV0YWlsKFxyXG4gICAgY21wOiBGYXJyaXNQYWdlRGV0YWlsQ29tcG9uZW50XHJcbiAgKSB7XHJcbiAgICB0aGlzLmRldGFpbFBhZ2UgPSBjbXA7XHJcbiAgfVxyXG5cclxuICAvLyDorrDlvZXlvZPliY1CReaJgOacieihqOeahGNvZGVcclxuICB0cmVlVGFibGVzID0gW107XHJcbiAgZ3JpZF9zZWxlY3RlZCA9IHt9O1xyXG4gIHJlYWRvbmx5RmllbGRzID0gW107IC8vIOS4jeWPr+WPlua2iOWLvumAieeahOWtl+autVxyXG5cclxuICAvKiog5bem5L6n5qCR5L+h5oGvICovXHJcbiAgdHJlZURhdGE6IGFueVtdID0gW107XHJcbiAgZmFycmlzVHJlZURhdGEgPSBbXTtcclxuXHJcbiAgdHJlZUNvbmZpZyA9IHtcclxuICAgIGlkRmllbGQ6ICdJRCcsXHJcbiAgICBjb2x1bW5zOiBbXHJcbiAgICAgIHsgZmllbGQ6ICdOYW1lJywgdGl0bGU6ICdOYW1lJywgd2lkdGg6IDIwMCB9XHJcbiAgICBdLFxyXG4gICAgLyoqIOWPtuWtkOiKgueCueWbvuaghyAqL1xyXG4gICAgbGVhZkljb246ICdmLWljb24gZi1pY29uLWZvbGRlciB0ZXh0LWluZm8nLFxyXG4gICAgLyoqIOiKgueCueWxleW8gOWbvuaghyAqL1xyXG4gICAgZXhwYW5kSWNvbjogJ2YtaWNvbiBmLWljb24tZm9sZGVyLW9wZW4gdGV4dC1pbmZvJyxcclxuICAgIC8qKiDoioLngrnmipjlj6Dlm77moIcgKi9cclxuICAgIGNvbGxhcHNlSWNvbjogJ2YtaWNvbiBmLWljb24tZm9sZGVyIHRleHQtaW5mbycsXHJcbiAgICAvKiogIOagkeWIl+ihqOm7mOiupOWxleW8gOWxgue6p+OAgiAtMe+8miDkuI3lsZXlvIDvvJsgMO+8miDlhajpg6jlsZXlvIDvvJsgPjA6ICDlsZXlvIDliLDmjIflrprnuqfmlbDvvJsgKi9cclxuICAgIGV4cGFuZExldmVsOiAyLFxyXG4gIH07XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5sb2FkKCk7XHJcbiAgfVxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIHRoaXMubG9hZCgpO1xyXG4gIH1cclxuXHJcbiAgbG9hZCgpIHtcclxuICAgIGlmICh0aGlzLmRhdGEgJiYgdGhpcy5kYXRhLmJlKSB7XHJcbiAgICAgIGNvbnN0IG1haW5PYmplY3QgPSB0aGlzLmRhdGEuYmUuTWFpbk9iamVjdDtcclxuICAgICAgdGhpcy50cmVlRGF0YSA9IHRoaXMuZ2V0VGFibGVzVHJlZShtYWluT2JqZWN0KTtcclxuICAgICAgdGhpcy5mYXJyaXNUcmVlRGF0YSA9IHRoaXMuZ2V0RmFycmlzVHJlZURhdGEodGhpcy50cmVlRGF0YSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOe7hOijhWZhcnJpcy10cmVl5bem5L6n5qCRXHJcbiAgICovXHJcbiAgZ2V0RmFycmlzVHJlZURhdGEoZGF0YTogYW55W10pIHtcclxuICAgIGNvbnN0IG5ld0FyciA9IFtdO1xyXG4gICAgaWYgKGRhdGEgJiYgZGF0YS5sZW5ndGgpIHtcclxuICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgIGxldCBjaGlsZHJlbkFyciA9IFtdO1xyXG4gICAgICAgIGlmIChpdGVtICYmIGl0ZW0uQ2hpbGRyZW4gJiYgaXRlbS5DaGlsZHJlbi5sZW5ndGgpIHtcclxuICAgICAgICAgIGNoaWxkcmVuQXJyID0gdGhpcy5nZXRGYXJyaXNUcmVlRGF0YShpdGVtLkNoaWxkcmVuKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbmV3QXJyLnB1c2goeyBkYXRhOiBpdGVtLCBjaGlsZHJlbjogY2hpbGRyZW5BcnIsIGV4cGFuZGVkOiB0cnVlIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXdBcnI7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOe7hOijheW3puS+p+agkVxyXG4gICAqL1xyXG4gIGdldFRhYmxlc1RyZWUobWFpbk9iamVjdDogR1NQQ29tbW9uT2JqZWN0KSB7XHJcbiAgICBjb25zdCB7IENvbnRhaW5DaGlsZE9iamVjdHMsIENvbHVtbkdlbmVyYXRlSUQsIEtleXMsIC4uLnBhcmVudFRhYmxlIH0gPSBtYWluT2JqZWN0O1xyXG4gICAgdGhpcy50cmVlVGFibGVzLnB1c2gocGFyZW50VGFibGUuQ29kZSk7XHJcblxyXG4gICAgLy8gY29uc3Qgc2VsZWN0ZWRBbGwgPSB0aGlzLmdyaWRfc2VsZWN0ZWRbcGFyZW50VGFibGUuQ29kZV0gPyBmYWxzZSA6IHRydWU7XHJcbiAgICAvLyB0aGlzLmdyaWREYXRhW3BhcmVudFRhYmxlLkNvZGVdID0gdGhpcy5nZXRHcmlkRmllbGRzKHBhcmVudFRhYmxlLkNvbnRhaW5FbGVtZW50cywgcGFyZW50VGFibGUuQ29kZSwgc2VsZWN0ZWRBbGwpO1xyXG5cclxuICAgIGlmIChDb250YWluQ2hpbGRPYmplY3RzICYmIENvbnRhaW5DaGlsZE9iamVjdHMubGVuZ3RoID4gMCkge1xyXG4gICAgICBwYXJlbnRUYWJsZVsnQ2hpbGRyZW4nXSA9IFtdO1xyXG4gICAgICBDb250YWluQ2hpbGRPYmplY3RzLmZvckVhY2goY2hpbGQgPT4ge1xyXG4gICAgICAgIGNvbnN0IGNoaWxkVHJlZSA9IHRoaXMuZ2V0VGFibGVzVHJlZShjaGlsZCBhcyBHU1BDb21tb25PYmplY3QpO1xyXG4gICAgICAgIHBhcmVudFRhYmxlWydDaGlsZHJlbiddID0gcGFyZW50VGFibGVbJ0NoaWxkcmVuJ10uY29uY2F0KGNoaWxkVHJlZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLy8g5Yik5pat5Li76ZSuXHJcbiAgICBpZiAoQ29sdW1uR2VuZXJhdGVJRCkge1xyXG4gICAgICB0aGlzLnJlYWRvbmx5RmllbGRzLnB1c2goQ29sdW1uR2VuZXJhdGVJRC5FbGVtZW50SUQpO1xyXG4gICAgfVxyXG4gICAgLy8g5Yik5pat5Li75LuO6KGo55qE5YWz6IGU5a2X5q61XHJcbiAgICBpZiAoS2V5cyAmJiBLZXlzLmxlbmd0aCA+IDApIHtcclxuICAgICAgS2V5cy5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgICAgdGhpcy5yZWFkb25seUZpZWxkcy5wdXNoKGtleS5Tb3VyY2VFbGVtZW50KTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG4gICAgcmV0dXJuIFtwYXJlbnRUYWJsZV07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDpgInkuK3oioLngrnkuovku7ZcclxuICAgKiBAcGFyYW0gZXZlbnQg6KKr6YCJ5Lit6IqC54K5XHJcbiAgICovXHJcbiAgaGFuZGxlVHJlZVNlbGVjdGlvbihldmVudCk6IHZvaWQge1xyXG4gICAgdGhpcy5kYXRhLnNlbGVjdGVkT2JqID0gZXZlbnQubm9kZS5kYXRhO1xyXG4gIH1cclxuXHJcbiAgbmV4dFN0ZXAoKSB7XHJcbiAgICAvLyDorr7nva7lvZPliY3pobXkvKDpgJLlh7rljrvmlbDmja5cclxuICAgIHRoaXMuZGF0YS5CZUZpZWxkcyA9IHRoaXMuZGF0YS5zZWxlY3RlZE9iai5Db250YWluRWxlbWVudHM7XHJcbiAgICB0aGlzLmRldGFpbFBhZ2Uuc2V0UGFnZURhdGEodGhpcy5kYXRhLnNlbGVjdGVkT2JqKTtcclxuICAgIC8vIOS4i+S4gOatpVxyXG4gICAgdGhpcy5kZXRhaWxQYWdlLm5leHRTdGVwKCk7XHJcbiAgfVxyXG4gIGNhbmNlbCgpIHtcclxuICAgIHRoaXMuZGV0YWlsUGFnZS5jYW5jZWxXaXphcmQoKTtcclxuICB9XHJcbiAgcGFnZWRldGFpbFNlbGVjdGVkKGFyZ3MpIHtcclxuXHJcbiAgfVxyXG59XHJcbiJdfQ==