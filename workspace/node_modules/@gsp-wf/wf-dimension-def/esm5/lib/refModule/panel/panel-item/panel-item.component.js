/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ContentChild, TemplateRef, Optional, ViewEncapsulation, ChangeDetectorRef, HostBinding, Renderer2, ElementRef } from '@angular/core';
import { dropAnimation } from '../panel/util/drop.animation';
import { WFDimensionPanelComponent } from '../panel/panel-item-list.component';
var WFDimensionPanelItemComponent = /** @class */ (function () {
    function WFDimensionPanelItemComponent(panel, changeRef, render, el) {
        this.panel = panel;
        this.changeRef = changeRef;
        this.render = render;
        this.el = el;
        this.sysInit = false;
        // @HostBinding('class.farris-panel-item') isPanelItem = true;
        // @HostBinding('class.card') isCard = true;
        // 默认非激活状态(不显示)
        this.active = false;
    }
    /**
     * @return {?}
     */
    WFDimensionPanelItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    WFDimensionPanelItemComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.editState) {
            if (this.editState) {
                this.active = true;
            }
            else {
                this.active = false;
            }
        }
    };
    WFDimensionPanelItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'wf-dimension-panel-item',
                    template: "<!-- \u6807\u9898  \u662F\u5426\u6709\u6A21\u677F -->\r\n\r\n<div id=\"cardheader\" class=\"card-header\" style=\"height: 45px; background-color: white;border-bottom: 1px solid rgba(0, 0, 0, .125);\">\r\n    <!-- \u6807\u9898  \u662F\u5426\u6709\u6A21\u677F -->\r\n    <div class=\"panel-item-title\">\r\n        <span class=\"f-icon f-icon-new-dimension\"></span>\r\n        <span *ngIf=\"!headRef;else head\">\r\n            {{tabTitle}}\r\n        </span>\r\n        <span [class]=\"sysInit?'sysInit-flow-form':'customize-flow-form'\">{{sysInit?'\u7CFB\u7EDF\u9884\u7F6E':'\u81EA\u5B9A\u4E49'}}</span>\r\n        <ng-template #head [ngTemplateOutlet]=\"headRef\"></ng-template>\r\n    </div>\r\n    <div class=\"panel-item-tool\">\r\n        <ng-template [ngTemplateOutlet]=\"toolTempl\"></ng-template>\r\n    </div>\r\n    <div class=\"panel-item-clear\">\r\n    </div>\r\n\r\n</div>\r\n<!-- panel\u5185\u5BB9\u6A21\u677F -->\r\n<div class=\" card-body \">\r\n    <ng-template [ngTemplateOutlet]=\"contentRef\">\r\n    </ng-template>\r\n</div>\r\n<!-- \u5E95\u90E8  \u662F\u5426\u6709\u6A21\u677F -->\r\n<div class=\"card-bottom \" style=\"border-top: 1px solid rgba(0, 0, 0, .125);\" [@dropAnimation]=\"active? 'active': 'inactive' \">\r\n    <div style=\"float: right; margin: 9px;\">\r\n        <ng-template [ngTemplateOutlet]=\"bottomRef \">\r\n        </ng-template>\r\n    </div>\r\n</div>",
                    animations: [dropAnimation],
                    encapsulation: ViewEncapsulation.None,
                    styles: [":host{width:100%}#cardheader .card-header{cursor:pointer;border-width:1px;background-color:#fff}.panel-item-title{float:left}.card-bottom{background-color:rgba(242,242,242);height:45px}.panel-item-tool{float:right}.panel-item-clear{clear:both}.f-state-disable{pointer-events:none}.customize-flow-form{font-size:12px;color:#fff;margin-left:10px;border-radius:20px;padding:2px 8px;background:#59a1ff}.sysInit-flow-form{font-size:12px;color:#fff;margin-left:10px;border-radius:20px;padding:2px 8px;background:#ff8e59}"]
                }] }
    ];
    /** @nocollapse */
    WFDimensionPanelItemComponent.ctorParameters = function () { return [
        { type: WFDimensionPanelComponent, decorators: [{ type: Optional }] },
        { type: ChangeDetectorRef },
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    WFDimensionPanelItemComponent.propDecorators = {
        editState: [{ type: Input }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        value: [{ type: Input }],
        tabTitle: [{ type: Input, args: ['title',] }],
        sysInit: [{ type: Input }],
        disable: [{ type: Input }, { type: HostBinding, args: ['class.f-state-disable',] }],
        headRef: [{ type: ContentChild, args: ['headTempl',] }],
        bottomRef: [{ type: ContentChild, args: ['bottomRef',] }],
        toolTempl: [{ type: ContentChild, args: ['toolTempl',] }],
        contentRef: [{ type: ContentChild, args: ['contentTempl',] }]
    };
    return WFDimensionPanelItemComponent;
}());
export { WFDimensionPanelItemComponent };
if (false) {
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.editState;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.width;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.height;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.value;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.tabTitle;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.sysInit;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.disable;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.headRef;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.bottomRef;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.toolTempl;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.contentRef;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.active;
    /** @type {?} */
    WFDimensionPanelItemComponent.prototype.panel;
    /**
     * @type {?}
     * @private
     */
    WFDimensionPanelItemComponent.prototype.changeRef;
    /**
     * @type {?}
     * @private
     */
    WFDimensionPanelItemComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    WFDimensionPanelItemComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWwtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLWRpbWVuc2lvbi1kZWYvIiwic291cmNlcyI6WyJsaWIvcmVmTW9kdWxlL3BhbmVsL3BhbmVsLWl0ZW0vcGFuZWwtaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUNyRCxpQkFBaUIsRUFBaUIsaUJBQWlCLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQzFGLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMvRTtJQTZDSSx1Q0FDdUIsS0FBZ0MsRUFDM0MsU0FBNEIsRUFDNUIsTUFBaUIsRUFDakIsRUFBYztRQUhILFVBQUssR0FBTCxLQUFLLENBQTJCO1FBQzNDLGNBQVMsR0FBVCxTQUFTLENBQW1CO1FBQzVCLFdBQU0sR0FBTixNQUFNLENBQVc7UUFDakIsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQTVCakIsWUFBTyxHQUFHLEtBQUssQ0FBQzs7OztRQXVCekIsV0FBTSxHQUFHLEtBQUssQ0FBQztJQU9mLENBQUM7Ozs7SUFDRCxnREFBUTs7O0lBQVI7SUFFQSxDQUFDOzs7OztJQUVELG1EQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUM5QixJQUFJLE9BQU8sQ0FBQyxTQUFTLEVBQUU7WUFDbkIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNoQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQzthQUN0QjtpQkFBTTtnQkFDSCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQzthQUN2QjtTQUNKO0lBQ0wsQ0FBQzs7Z0JBaEVKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxtNENBQTBDO29CQUUxQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLENBQUM7b0JBQzNCLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOztpQkFDeEM7Ozs7Z0JBUFEseUJBQXlCLHVCQStDekIsUUFBUTtnQkFsRHFCLGlCQUFpQjtnQkFBZSxTQUFTO2dCQUFFLFVBQVU7Ozs0QkFhdEYsS0FBSzt3QkFFTCxLQUFLO3lCQUNMLEtBQUs7d0JBR0wsS0FBSzsyQkFJTCxLQUFLLFNBQUMsT0FBTzswQkFFYixLQUFLOzBCQUdMLEtBQUssWUFDTCxXQUFXLFNBQUMsdUJBQXVCOzBCQUluQyxZQUFZLFNBQUMsV0FBVzs0QkFHeEIsWUFBWSxTQUFDLFdBQVc7NEJBR3hCLFlBQVksU0FBQyxXQUFXOzZCQUd4QixZQUFZLFNBQUMsY0FBYzs7SUF3RWhDLG9DQUFDO0NBQUEsQUE5R0QsSUE4R0M7U0F2R1ksNkJBQTZCOzs7SUFFdEMsa0RBQTRCOztJQUU1Qiw4Q0FBdUI7O0lBQ3ZCLCtDQUF3Qjs7SUFHeEIsOENBQW9COztJQUlwQixpREFBaUM7O0lBRWpDLGdEQUF5Qjs7SUFHekIsZ0RBRWlCOztJQUdqQixnREFBcUQ7O0lBR3JELGtEQUF1RDs7SUFHdkQsa0RBQXVEOztJQUd2RCxtREFBMkQ7O0lBTTNELCtDQUFlOztJQUVYLDhDQUFtRDs7Ozs7SUFDbkQsa0RBQW9DOzs7OztJQUNwQywrQ0FBeUI7Ozs7O0lBQ3pCLDJDQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsIElucHV0LCBDb250ZW50Q2hpbGQsIFRlbXBsYXRlUmVmLCBPcHRpb25hbCwgT25Jbml0LFxyXG4gICAgVmlld0VuY2Fwc3VsYXRpb24sIEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBIb3N0QmluZGluZywgUmVuZGVyZXIyLCBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXNcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgZHJvcEFuaW1hdGlvbiB9IGZyb20gJy4uL3BhbmVsL3V0aWwvZHJvcC5hbmltYXRpb24nO1xyXG5pbXBvcnQgeyBXRkRpbWVuc2lvblBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi4vcGFuZWwvcGFuZWwtaXRlbS1saXN0LmNvbXBvbmVudCc7XHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd3Zi1kaW1lbnNpb24tcGFuZWwtaXRlbScsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vcGFuZWwtaXRlbS5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9wYW5lbC1pdGVtLmNvbXBvbmVudC5jc3MnXSxcclxuICAgIGFuaW1hdGlvbnM6IFtkcm9wQW5pbWF0aW9uXSxcclxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIFdGRGltZW5zaW9uUGFuZWxJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xyXG4gICAgLy8g6K6+572u5piv5ZCm5pi+56S65bqV6YOoXHJcbiAgICBASW5wdXQoKSBlZGl0U3RhdGU6IGJvb2xlYW47XHJcbiAgICAvLyDorr7nva7lrr0g6auY5bGe5oCnXHJcbiAgICBASW5wdXQoKSB3aWR0aDogbnVtYmVyO1xyXG4gICAgQElucHV0KCkgaGVpZ2h0OiBudW1iZXI7XHJcblxyXG4gICAgLyogcGFuZWxJdGVtICovXHJcbiAgICBASW5wdXQoKSB2YWx1ZTogYW55O1xyXG5cclxuICAgIC8vIOm7mOiupHRhYiDmoIfpopgg5oiW6ICF5piv6YCJ5Lit5qCH6aKYXHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8taW5wdXQtcmVuYW1lXHJcbiAgICBASW5wdXQoJ3RpdGxlJykgdGFiVGl0bGU6IHN0cmluZztcclxuXHJcbiAgICBASW5wdXQoKSBzeXNJbml0ID0gZmFsc2U7XHJcblxyXG4gICAgLyog56aB55SoICovXHJcbiAgICBASW5wdXQoKVxyXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mLXN0YXRlLWRpc2FibGUnKVxyXG4gICAgZGlzYWJsZTogYm9vbGVhbjtcclxuXHJcbiAgICAvKiDlpLTpg6jmqKHmnb8gKi9cclxuICAgIEBDb250ZW50Q2hpbGQoJ2hlYWRUZW1wbCcpIGhlYWRSZWY6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gICAgLyog5bqV6YOo5qih5p2/ICovXHJcbiAgICBAQ29udGVudENoaWxkKCdib3R0b21SZWYnKSBib3R0b21SZWY6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gICAgLyog5bel5YW35oyJ6ZKu5qih5p2/ICovXHJcbiAgICBAQ29udGVudENoaWxkKCd0b29sVGVtcGwnKSB0b29sVGVtcGw6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gICAgLyog5YaF5a655qih5p2/ICovXHJcbiAgICBAQ29udGVudENoaWxkKCdjb250ZW50VGVtcGwnKSBjb250ZW50UmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICAgIC8vIEBIb3N0QmluZGluZygnY2xhc3MuZmFycmlzLXBhbmVsLWl0ZW0nKSBpc1BhbmVsSXRlbSA9IHRydWU7XHJcbiAgICAvLyBASG9zdEJpbmRpbmcoJ2NsYXNzLmNhcmQnKSBpc0NhcmQgPSB0cnVlO1xyXG5cclxuICAgIC8vIOm7mOiupOmdnua/gOa0u+eKtuaAgSjkuI3mmL7npLopXHJcbiAgICBhY3RpdmUgPSBmYWxzZTtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIEBPcHRpb25hbCgpIHB1YmxpYyBwYW5lbDogV0ZEaW1lbnNpb25QYW5lbENvbXBvbmVudCxcclxuICAgICAgICBwcml2YXRlIGNoYW5nZVJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXHJcbiAgICAgICAgcHJpdmF0ZSByZW5kZXI6IFJlbmRlcmVyMixcclxuICAgICAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmXHJcbiAgICApIHtcclxuICAgIH1cclxuICAgIG5nT25Jbml0KCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXMuZWRpdFN0YXRlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmVkaXRTdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICAvLyAgICAgLy8g5YWo6YOo5bGV5byAXHJcbiAgICAvLyAgICAgaWYgKHRoaXMucGFuZWwuZGVmYXVsdEV4cGFuZCkge1xyXG4gICAgLy8gICAgICAgICBpZiAodGhpcy52YWx1ZSA9PT0gbnVsbCB8fCB0aGlzLnZhbHVlID09PSB1bmRlZmluZWQpIHtcclxuICAgIC8vICAgICAgICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmdlbmVyYXRlUmFuZG9tSWQoKTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICB0aGlzLnBhbmVsLnVwZGF0ZU1vZGVsKHRoaXMudmFsdWUpO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICAvLyDmlLbmipjlj5jmjaJcclxuICAgIC8vICAgICBjb25zdCB1cGRhdGVIYW5kbGU6ICgpID0+IHZvaWQgPSAoKSA9PiB0aGlzLnNldEFjdGl2ZSgpO1xyXG4gICAgLy8gICAgIHRoaXMucGFuZWwuc3Vic2NyaWJlci5wdXNoKHVwZGF0ZUhhbmRsZSk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gLyog6K6+572ucGFuZWznmoTmv4DmtLvnirbmgIEgKi9cclxuICAgIC8vIHNldEFjdGl2ZSgpIHtcclxuICAgIC8vICAgICB0aGlzLmFjdGl2ZSA9IHRoaXMucGFuZWwubW9kZWwuc29tZSh2YWwgPT4gdGhpcy52YWx1ZSA9PT0gdmFsKTtcclxuICAgIC8vICAgICAvLyDmt7vliqDliKDpmaTnsbvlkI1cclxuICAgIC8vICAgICB0aGlzLmFjdGl2ZSA/IHRoaXMucmVuZGVyLmFkZENsYXNzKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ2Ytc3RhdGUtc2VsZWN0ZWQnKSA6XHJcbiAgICAvLyAgICAgICAgIHRoaXMucmVuZGVyLnJlbW92ZUNsYXNzKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ2Ytc3RhdGUtc2VsZWN0ZWQnKTtcclxuICAgIC8vICAgICB0aGlzLmNoYW5nZVJlZi5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICAvLyAgICAgdGhpcy5jaGFuZ2VSZWYubWFya0ZvckNoZWNrKCk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gLyog55Sf5oiQ6ZqP5py6SWQgKi9cclxuICAgIC8vIGdlbmVyYXRlUmFuZG9tSWQoKSB7XHJcbiAgICAvLyAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMTYpLnN1YnN0cmluZygyLCAxMCk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gLyoqXHJcbiAgICAvLyAgKiBUT0RPIOemgeatouS6i+S7tuaNleiOtyAg5LiN5aSf5a6M5ZaEXHJcbiAgICAvLyAgKiDmv4DmtLsg5aSx5Y6754Sm54K5IOmdouadv1xyXG4gICAgLy8gICogQHBhcmFtIGV2ZW50IOS6i+S7tuWvueixoVxyXG4gICAgLy8gICovXHJcbiAgICAvLyBzZWxlY3RQYW5lbEl0ZW0oZTogTW91c2VFdmVudCkge1xyXG4gICAgLy8gICAgIC8vIOiuvue9ruS4jeWPr+aUtuaKmOS4jeWPr+aUtuaKmFxyXG4gICAgLy8gICAgIGlmICghdGhpcy5wYW5lbC5mb2xkYWJsZSkge1xyXG4gICAgLy8gICAgICAgICByZXR1cm47XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIC8vIHZhbHVlIOiLpeS4uuepuiAg5Yid5aeL5YyW6ZqP5py65pWw5a2X56ym5LiyXHJcbiAgICAvLyAgICAgaWYgKHRoaXMudmFsdWUgPT09IG51bGwgfHwgdGhpcy52YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAvLyAgICAgICAgIHRoaXMudmFsdWUgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMiwgMTApO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICB0aGlzLnBhbmVsLnVwZGF0ZU1vZGVsKHRoaXMudmFsdWUpO1xyXG4gICAgLy8gfVxyXG59XHJcbiJdfQ==