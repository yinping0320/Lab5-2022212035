/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpService } from '@ecp-caf/caf-common';
import { Injectable } from '@angular/core';
var WFDimensionDefViewmodel = /** @class */ (function () {
    function WFDimensionDefViewmodel(http) {
        this.http = http;
        this.url = '/api/runtime/wf/v1.0/dimensionDef';
    }
    /**
     * @param {?} flowFormId
     * @return {?}
     */
    WFDimensionDefViewmodel.prototype.loadDimensionDefs = /**
     * @param {?} flowFormId
     * @return {?}
     */
    function (flowFormId) {
        if (flowFormId) {
            /** @type {?} */
            var url = this.url + ("?entryFormID=" + flowFormId);
            return this.http.get(url);
        }
    };
    /**
     * @param {?} id
     * @return {?}
     */
    WFDimensionDefViewmodel.prototype.removeDimensionDef = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        if (id) {
            /** @type {?} */
            var url = this.url + ("/" + id);
            return this.http.delete(url, {});
        }
    };
    /**
     * @param {?} dimensionDef
     * @return {?}
     */
    WFDimensionDefViewmodel.prototype.addDimensionDef = /**
     * @param {?} dimensionDef
     * @return {?}
     */
    function (dimensionDef) {
        return this.http.post(this.url, dimensionDef);
    };
    /**
     * @param {?} dimensionDef
     * @return {?}
     */
    WFDimensionDefViewmodel.prototype.updateDimensionDef = /**
     * @param {?} dimensionDef
     * @return {?}
     */
    function (dimensionDef) {
        return this.http.patch(this.url, dimensionDef);
    };
    /**
     * @param {?} flowFormId
     * @return {?}
     */
    WFDimensionDefViewmodel.prototype.getDimensionDefSet = /**
     * @param {?} flowFormId
     * @return {?}
     */
    function (flowFormId) {
        /** @type {?} */
        var url = "/api/runtime/wf/v1.0/dimensionDef/customSetting?entryFormId=" + flowFormId;
        return this.http.get(url);
    };
    WFDimensionDefViewmodel.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    WFDimensionDefViewmodel.ctorParameters = function () { return [
        { type: HttpService }
    ]; };
    return WFDimensionDefViewmodel;
}());
export { WFDimensionDefViewmodel };
if (false) {
    /**
     * @type {?}
     * @private
     */
    WFDimensionDefViewmodel.prototype.url;
    /**
     * @type {?}
     * @private
     */
    WFDimensionDefViewmodel.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2YtZGltZW5zaW9uLWRlZi52aWV3TW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLWRpbWVuc2lvbi1kZWYvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS93Zi1kaW1lbnNpb24tZGVmLnZpZXdNb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJM0M7SUFHSSxpQ0FDWSxJQUFpQjtRQUFqQixTQUFJLEdBQUosSUFBSSxDQUFhO1FBRnJCLFFBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUc5QyxDQUFDOzs7OztJQUVMLG1EQUFpQjs7OztJQUFqQixVQUFrQixVQUFrQjtRQUNoQyxJQUFJLFVBQVUsRUFBRTs7Z0JBQ04sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUcsa0JBQWdCLFVBQVksQ0FBQTtZQUNuRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzdCO0lBQ0wsQ0FBQzs7Ozs7SUFDRCxvREFBa0I7Ozs7SUFBbEIsVUFBbUIsRUFBVTtRQUN6QixJQUFJLEVBQUUsRUFBRTs7Z0JBQ0UsR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUcsTUFBSSxFQUFJLENBQUE7WUFDL0IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDcEM7SUFDTCxDQUFDOzs7OztJQUVELGlEQUFlOzs7O0lBQWYsVUFBZ0IsWUFBZ0M7UUFDNUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2xELENBQUM7Ozs7O0lBRUQsb0RBQWtCOzs7O0lBQWxCLFVBQW1CLFlBQWdDO1FBQy9DLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNuRCxDQUFDOzs7OztJQUdELG9EQUFrQjs7OztJQUFsQixVQUFtQixVQUFrQjs7WUFDM0IsR0FBRyxHQUFHLGlFQUErRCxVQUFZO1FBQ3ZGLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7Z0JBaENKLFVBQVU7Ozs7Z0JBTEYsV0FBVzs7SUFzQ3BCLDhCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0FoQ1ksdUJBQXVCOzs7Ozs7SUFDaEMsc0NBQWtEOzs7OztJQUU5Qyx1Q0FBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERpbWVuc2lvbkRlZkVudGl0eSB9IGZyb20gJy4uL2VudGl0eS9kaW1lbnNpb25kZWYuZW50aXR5JztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgV0ZEaW1lbnNpb25EZWZWaWV3bW9kZWwgeyBcclxuICAgIHByaXZhdGUgdXJsID0gJy9hcGkvcnVudGltZS93Zi92MS4wL2RpbWVuc2lvbkRlZic7XHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIGh0dHA6IEh0dHBTZXJ2aWNlXHJcbiAgICApIHsgfVxyXG5cclxuICAgIGxvYWREaW1lbnNpb25EZWZzKGZsb3dGb3JtSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7IFxyXG4gICAgICAgIGlmIChmbG93Rm9ybUlkKSB7IFxyXG4gICAgICAgICAgICBjb25zdCB1cmwgPSB0aGlzLnVybCArIGA/ZW50cnlGb3JtSUQ9JHtmbG93Rm9ybUlkfWA7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmVtb3ZlRGltZW5zaW9uRGVmKGlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4geyBcclxuICAgICAgICBpZiAoaWQpIHtcclxuICAgICAgICAgICAgY29uc3QgdXJsID0gdGhpcy51cmwgKyBgLyR7aWR9YDtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5kZWxldGUodXJsLCB7fSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZERpbWVuc2lvbkRlZihkaW1lbnNpb25EZWY6IERpbWVuc2lvbkRlZkVudGl0eSk6IE9ic2VydmFibGU8YW55PiB7IFxyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdCh0aGlzLnVybCwgZGltZW5zaW9uRGVmKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVEaW1lbnNpb25EZWYoZGltZW5zaW9uRGVmOiBEaW1lbnNpb25EZWZFbnRpdHkpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAucGF0Y2godGhpcy51cmwsIGRpbWVuc2lvbkRlZik7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGdldERpbWVuc2lvbkRlZlNldChmbG93Rm9ybUlkOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB1cmwgPSBgL2FwaS9ydW50aW1lL3dmL3YxLjAvZGltZW5zaW9uRGVmL2N1c3RvbVNldHRpbmc/ZW50cnlGb3JtSWQ9JHtmbG93Rm9ybUlkfWA7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsKTtcclxuICAgIH1cclxufVxyXG4iXX0=