/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, TemplateRef, HostBinding, ComponentFactoryResolver, Injector } from '@angular/core';
import { Subject } from 'rxjs';
import { MessagerService } from '@farris/ui-messager';
import { EditorTypes } from '@farris/ui-datagrid-editors';
import { DatagridComponent } from '@farris/ui-datagrid';
import { EnumItem } from '../entity/dimensiondef.entity';
import { WFDimensionDefUIState } from '../service/wf-dimension-def.uistate';
import { GSPElementObjectType } from '@gsp-bef/gsp-cm-metadata';
import { SelectElementComponent } from '../refModule/select-element/select-element.component';
import { BsModalService } from '@farris/ui-modal';
var EnumEditComponent = /** @class */ (function () {
    function EnumEditComponent(messageService, uistate, modalService, resolver, injector) {
        this.messageService = messageService;
        this.uistate = uistate;
        this.modalService = modalService;
        this.resolver = resolver;
        this.injector = injector;
        this.cls = 'farris-main-area flex-column';
        this.columns = [
            { field: 'key', width: 100, title: '键', editor: { type: EditorTypes.TEXTBOX, options: {} } },
            { field: 'value', width: 100, title: '值', editor: { type: EditorTypes.TEXTBOX, options: {} } }
        ];
        this.confirm = new Subject();
        this.closeModalEmitter = new Subject();
        /**
         * 显示值
         */
        this.editData = new Array();
        this.maxNum = 0;
    }
    Object.defineProperty(EnumEditComponent.prototype, "enumValues", {
        /**
         * 实际值
         */
        get: /**
         * 实际值
         * @return {?}
         */
        function () {
            /** @type {?} */
            var arr = [];
            if (this.editData && this.editData.length >= 0) {
                this.editData.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    /** @type {?} */
                    var enumItem = new EnumItem();
                    enumItem.key = item.key;
                    enumItem.value = item.value;
                    arr.push(enumItem);
                }));
            }
            return arr;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    EnumEditComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 加载显示数据
     */
    /**
     * 加载显示数据
     * @param {?} enumValues
     * @return {?}
     */
    EnumEditComponent.prototype.load = /**
     * 加载显示数据
     * @param {?} enumValues
     * @return {?}
     */
    function (enumValues) {
        this.editData = tslib_1.__spread(this.createData(enumValues));
    };
    /**
     * 确认
     */
    /**
     * 确认
     * @return {?}
     */
    EnumEditComponent.prototype.onConfirm = /**
     * 确认
     * @return {?}
     */
    function () {
        this.closeCell();
        if (this.checkBeforeSave()) {
            this.confirm.next(this.enumValues);
            this.closeModalEmitter.next();
        }
    };
    /**
     * 取消
     */
    /**
     * 取消
     * @return {?}
     */
    EnumEditComponent.prototype.cancel = /**
     * 取消
     * @return {?}
     */
    function () {
        this.closeModalEmitter.next();
    };
    /**
     * 保存前检查
     */
    /**
     * 保存前检查
     * @return {?}
     */
    EnumEditComponent.prototype.checkBeforeSave = /**
     * 保存前检查
     * @return {?}
     */
    function () {
        var e_1, _a;
        // ① 空，则通过；
        if (!(this.enumValues) || this.enumValues.length === 0) {
            this.messageService.warning('请添加枚举值。');
            return false;
        }
        try {
            // ② 非空，则校验每个的键值是否为空；
            for (var _b = tslib_1.__values(this.enumValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                var item = _c.value;
                if (!item.key || !item.value) {
                    this.messageService.warning('枚举的[键][值]均不允许为空。');
                    return false;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // ③ 多于一个，索引不允许重复；
        if (this.enumValues.length > 1) {
            for (var i = 0; i < this.enumValues.length; i++) {
                /** @type {?} */
                var code1 = this.enumValues[i].value;
                /** @type {?} */
                var name1 = this.enumValues[i].key;
                for (var j = i + 1; j < this.enumValues.length; j++) {
                    /** @type {?} */
                    var code2 = this.enumValues[j].value;
                    /** @type {?} */
                    var name2 = this.enumValues[j].key;
                    if (code1 === code2) {
                        this.messageService.warning("\u679A\u4E3E\u7684[\u7F16\u53F7]\u4E0D\u5141\u8BB8\u91CD\u590D\uFF0C\u91CD\u590D\u7F16\u53F7\u4E3A[" + code1 + "]\u3002");
                        return false;
                    }
                    if (name1 === name2) {
                        this.messageService.warning("\u679A\u4E3E\u7684[\u540D\u79F0]\u4E0D\u5141\u8BB8\u91CD\u590D\uFF0C\u91CD\u590D\u540D\u79F0\u4E3A[" + name1 + "]\u3002");
                        return false;
                    }
                }
            }
        }
        return true;
    };
    /**
     * 取消编辑
     */
    /**
     * 取消编辑
     * @return {?}
     */
    EnumEditComponent.prototype.closeCell = /**
     * 取消编辑
     * @return {?}
     */
    function () {
        this.dg.endCellEdit();
    };
    /**
     * 引入
     */
    /**
     * 引入
     * @return {?}
     */
    EnumEditComponent.prototype.import = /**
     * 引入
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.uistate.beMetaData) {
            this.messageService.error('未获取到BE元数据，请联系管理员查看原因！');
            return;
        }
        /** @type {?} */
        var model = this.uistate.beMetaData.content;
        /** @type {?} */
        var compFactory = this.resolver.resolveComponentFactory(SelectElementComponent);
        /** @type {?} */
        var compRef = compFactory.create(this.injector);
        compRef.instance.selectEleInfo.be = model;
        compRef.instance.selectEleInfo.singleElement = true;
        compRef.instance.selectEleInfo.assoRefElement = false;
        compRef.instance.confirm.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            var e_2, _a;
            /** @type {?} */
            var selectedElement = (/** @type {?} */ (data.selectedBeFields[0]));
            if (selectedElement.ObjectType === GSPElementObjectType.Enum) {
                _this.editData = new Array();
                /** @type {?} */
                var k = 0;
                try {
                    for (var _b = tslib_1.__values(selectedElement.ContainEnumValues), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var enumValue = _c.value;
                        _this.editData.push({
                            id: k,
                            key: enumValue.Value,
                            value: enumValue.Name,
                        });
                        k++;
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
                _this.maxNum = k;
            }
            else {
                _this.messageService.info('选中字段并非枚举字段，请了解！');
            }
        }));
        /** @type {?} */
        var modalConfig = {
            title: '枚举字段选择',
            width: 1000,
            height: 550,
            showButtons: false
        };
        /** @type {?} */
        var dialog = this.modalService.show(compRef, modalConfig);
        compRef.instance.closeModal.subscribe((/**
         * @return {?}
         */
        function () {
            dialog.close();
        }));
    };
    /**
     * 新增
     */
    /**
     * 新增
     * @return {?}
     */
    EnumEditComponent.prototype.add = /**
     * 新增
     * @return {?}
     */
    function () {
        this.closeCell();
        /** @type {?} */
        var newId = this.maxNum;
        this.editData = this.editData.concat([{
                id: newId
            }]);
        this.maxNum++;
    };
    /**
     * 删除
     */
    /**
     * 删除
     * @return {?}
     */
    EnumEditComponent.prototype.remove = /**
     * 删除
     * @return {?}
     */
    function () {
        this.closeCell();
        if (this.dg.selectedRow) {
            /** @type {?} */
            var id_1 = this.dg.selectedRow.id;
            this.dg.selectPrevRow();
            this.editData = this.editData.filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n.id !== id_1; }));
        }
    };
    /**
     * @param {?} enumValues
     * @return {?}
     */
    EnumEditComponent.prototype.createData = /**
     * @param {?} enumValues
     * @return {?}
     */
    function (enumValues) {
        var e_3, _a;
        /** @type {?} */
        var arr = [];
        /** @type {?} */
        var k = 0;
        try {
            for (var enumValues_1 = tslib_1.__values(enumValues), enumValues_1_1 = enumValues_1.next(); !enumValues_1_1.done; enumValues_1_1 = enumValues_1.next()) {
                var enumValue = enumValues_1_1.value;
                arr.push({
                    id: k,
                    key: enumValue.key,
                    value: enumValue.value,
                });
                k++;
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (enumValues_1_1 && !enumValues_1_1.done && (_a = enumValues_1.return)) _a.call(enumValues_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this.maxNum = k;
        return arr;
    };
    EnumEditComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-enum-edit',
                    template: "<ng-template #buttons>\r\n    <button class=\"btn btn-primary\" (click)=\"onConfirm()\">\u786E\u5B9A</button>\r\n    <button class=\"btn btn-secondary\" (click)=\"cancel()\">\u53D6\u6D88</button>\r\n</ng-template>\r\n\r\n<div class=\"f-page\">\r\n    <div class=\"f-page-header\">\r\n        <nav class=\"f-page-header-base\">\r\n            <div class=\"f-title\">\r\n                <span class=\"f-title-icon f-text-orna-bill\">\r\n                    <i class=\"f-icon f-icon-page-title-administer\"></i>\r\n                </span>\r\n                <h4 class=\"f-title-text\">\u5217\u8868</h4>\r\n            </div>\r\n            <div class=\"btn-toolbar btn-group-lg\">\r\n                <button class=\"btn btn-primary mr-2\" (click)=\"import()\">\u5F15\u5165</button>\r\n                <button class=\"btn btn-secondary mr-2\" (click)=\"add()\">\u65B0\u589E</button>\r\n                <button class=\"btn btn-secondary\" (click)=\"remove()\">\u5220\u9664</button>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n    <div class=\"f-page-main f-utils-fill-flex-column h-100\">\r\n        <div class=\"f-utils-fill-flex-column farris-overflow-y-auto h-100\">\r\n            <farris-datagrid [data]=\"editData\" [columns]=\"columns\" #dg=\"datagrid\" [fit]=\"true\" \r\n                [editable]=\"true\" [editMode]=\"'cell'\" [idField]=\"'id'\"\r\n                [showCheckbox]=\"false\" [fitColumns]=\"true\" [showLineNumber]=\"true\" [lineNumberTitle]=\"'\u5E8F\u53F7'\" [lineNumberWidth]=\"50\" \r\n                [striped]=\"true\" [virtualized]=\"true\" [pagination]=\"false\">\r\n            </farris-datagrid>\r\n        </div>\r\n    </div>\r\n</div>",
                    styles: [":host{position:absolute;top:0;bottom:0;right:0;left:0}"]
                }] }
    ];
    /** @nocollapse */
    EnumEditComponent.ctorParameters = function () { return [
        { type: MessagerService },
        { type: WFDimensionDefUIState },
        { type: BsModalService },
        { type: ComponentFactoryResolver },
        { type: Injector }
    ]; };
    EnumEditComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class',] }],
        dg: [{ type: ViewChild, args: ['dg',] }],
        btnRef: [{ type: ViewChild, args: ['buttons',] }]
    };
    return EnumEditComponent;
}());
export { EnumEditComponent };
if (false) {
    /** @type {?} */
    EnumEditComponent.prototype.cls;
    /** @type {?} */
    EnumEditComponent.prototype.columns;
    /** @type {?} */
    EnumEditComponent.prototype.dg;
    /** @type {?} */
    EnumEditComponent.prototype.btnRef;
    /** @type {?} */
    EnumEditComponent.prototype.confirm;
    /** @type {?} */
    EnumEditComponent.prototype.closeModalEmitter;
    /**
     * 显示值
     * @type {?}
     */
    EnumEditComponent.prototype.editData;
    /** @type {?} */
    EnumEditComponent.prototype.maxNum;
    /**
     * @type {?}
     * @private
     */
    EnumEditComponent.prototype.messageService;
    /**
     * @type {?}
     * @private
     */
    EnumEditComponent.prototype.uistate;
    /**
     * @type {?}
     * @private
     */
    EnumEditComponent.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    EnumEditComponent.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    EnumEditComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,