/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FarrisButtonModule } from '@farris/ui-button';
import { MessagerModule } from '@farris/ui-messager';
import { DatagridEditorsModule, EditorProviders } from '@farris/ui-datagrid-editors';
import { DatagridModule } from '@farris/ui-datagrid';
import { InputGroupModule } from '@farris/ui-input-group';
import { NotifyModule } from '@farris/ui-notify';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { ComboListModule } from '@farris/ui-combo-list';
import { WfDimensionDefComponent } from './wf-dimension-def.component';
import { MetadataRTSelectModule, GSPMetadataRTServiceModule, GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';
import { DimensionItemCardComponent } from './dimension-item-card/dimension-item-card.component';
import { HttpService } from '@ecp-caf/caf-common';
import { WFDimensionDefViewmodel } from './service/wf-dimension-def.viewModel';
import { WFDimensionDefUIState } from './service/wf-dimension-def.uistate';
import { ExpressionModule, ExpressionService } from '@gsp-svc/expression';
import { EnumEditComponent } from './enum-edit/enum-edit.component';
import { WFDimensionPanelModule } from './refModule/panel/panel.module';
import { SelectElementModule } from './refModule/select-element/select-element.module';
import { LookupConfigModule } from '@farris/lookup-config';
var WfDimensionDefModule = /** @class */ (function () {
    function WfDimensionDefModule() {
    }
    WfDimensionDefModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        WfDimensionDefComponent,
                        DimensionItemCardComponent,
                        EnumEditComponent
                    ],
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        FarrisButtonModule,
                        MessagerModule.forRoot(),
                        FarrisDialogModule,
                        NotifyModule,
                        GSPMetadataRTServiceModule.forRoot(''),
                        MetadataRTSelectModule,
                        InputGroupModule,
                        WFDimensionPanelModule,
                        DatagridEditorsModule,
                        DatagridModule.forRoot(tslib_1.__spread(EditorProviders)),
                        ComboListModule,
                        ExpressionModule,
                        SelectElementModule,
                        LookupConfigModule
                    ],
                    providers: [
                        GSPMetadataRTService,
                        WFDimensionDefViewmodel,
                        WFDimensionDefUIState,
                        ExpressionService,
                        HttpService
                    ],
                    entryComponents: [
                        EnumEditComponent
                    ],
                    exports: [WfDimensionDefComponent, DimensionItemCardComponent]
                },] }
    ];
    return WfDimensionDefModule;
}());
export { WfDimensionDefModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2YtZGltZW5zaW9uLWRlZi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLXdmL3dmLWRpbWVuc2lvbi1kZWYvIiwic291cmNlcyI6WyJsaWIvd2YtZGltZW5zaW9uLWRlZi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBbUIsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdkUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLDBCQUEwQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEgsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0scURBQXFELENBQUM7QUFDakcsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTNEO0lBQUE7SUF1Q29DLENBQUM7O2dCQXZDcEMsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWix1QkFBdUI7d0JBQ3ZCLDBCQUEwQjt3QkFDMUIsaUJBQWlCO3FCQUNsQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixXQUFXO3dCQUNYLG1CQUFtQjt3QkFDbkIsa0JBQWtCO3dCQUNsQixjQUFjLENBQUMsT0FBTyxFQUFFO3dCQUN4QixrQkFBa0I7d0JBQ2xCLFlBQVk7d0JBQ1osMEJBQTBCLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQzt3QkFDdEMsc0JBQXNCO3dCQUN0QixnQkFBZ0I7d0JBQ2hCLHNCQUFzQjt3QkFDdEIscUJBQXFCO3dCQUNyQixjQUFjLENBQUMsT0FBTyxrQkFDakIsZUFBZSxFQUNsQjt3QkFDRixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsbUJBQW1CO3dCQUNuQixrQkFBa0I7cUJBQ25CO29CQUNELFNBQVMsRUFBRTt3QkFDVCxvQkFBb0I7d0JBQ3BCLHVCQUF1Qjt3QkFDdkIscUJBQXFCO3dCQUNyQixpQkFBaUI7d0JBQ2pCLFdBQVc7cUJBQ1o7b0JBQ0QsZUFBZSxFQUFFO3dCQUNmLGlCQUFpQjtxQkFDbEI7b0JBQ0QsT0FBTyxFQUFFLENBQUMsdUJBQXVCLEVBQUUsMEJBQTBCLENBQUM7aUJBQy9EOztJQUNtQywyQkFBQztDQUFBLEFBdkNyQyxJQXVDcUM7U0FBeEIsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5pbXBvcnQgeyBGYXJyaXNCdXR0b25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWJ1dHRvbic7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlLCBNZXNzYWdlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuaW1wb3J0IHsgRGF0YWdyaWRFZGl0b3JzTW9kdWxlLCBFZGl0b3JQcm92aWRlcnMgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkLWVkaXRvcnMnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBJbnB1dEdyb3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1pbnB1dC1ncm91cCc7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgRmFycmlzRGlhbG9nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBDb21ib0xpc3RNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbWJvLWxpc3QnO1xyXG5pbXBvcnQgeyBXZkRpbWVuc2lvbkRlZkNvbXBvbmVudCB9IGZyb20gJy4vd2YtZGltZW5zaW9uLWRlZi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNZXRhZGF0YVJUU2VsZWN0TW9kdWxlLCBHU1BNZXRhZGF0YVJUU2VydmljZU1vZHVsZSwgR1NQTWV0YWRhdGFSVFNlcnZpY2UgfSBmcm9tICdAZ3NwLWxjbS9tZXRhZGF0YXJ0LXNlbGVjdG9yJztcclxuaW1wb3J0IHsgRGltZW5zaW9uSXRlbUNhcmRDb21wb25lbnQgfSBmcm9tICcuL2RpbWVuc2lvbi1pdGVtLWNhcmQvZGltZW5zaW9uLWl0ZW0tY2FyZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBIdHRwU2VydmljZSB9IGZyb20gJ0BlY3AtY2FmL2NhZi1jb21tb24nO1xyXG5pbXBvcnQgeyBXRkRpbWVuc2lvbkRlZlZpZXdtb2RlbCB9IGZyb20gJy4vc2VydmljZS93Zi1kaW1lbnNpb24tZGVmLnZpZXdNb2RlbCc7XHJcbmltcG9ydCB7IFdGRGltZW5zaW9uRGVmVUlTdGF0ZSB9IGZyb20gJy4vc2VydmljZS93Zi1kaW1lbnNpb24tZGVmLnVpc3RhdGUnO1xyXG5pbXBvcnQgeyBFeHByZXNzaW9uTW9kdWxlLCBFeHByZXNzaW9uU2VydmljZSB9IGZyb20gJ0Bnc3Atc3ZjL2V4cHJlc3Npb24nO1xyXG5pbXBvcnQgeyBFbnVtRWRpdENvbXBvbmVudCB9IGZyb20gJy4vZW51bS1lZGl0L2VudW0tZWRpdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBXRkRpbWVuc2lvblBhbmVsTW9kdWxlIH0gZnJvbSAnLi9yZWZNb2R1bGUvcGFuZWwvcGFuZWwubW9kdWxlJztcclxuaW1wb3J0IHsgU2VsZWN0RWxlbWVudE1vZHVsZSB9IGZyb20gJy4vcmVmTW9kdWxlL3NlbGVjdC1lbGVtZW50L3NlbGVjdC1lbGVtZW50Lm1vZHVsZSc7XHJcbmltcG9ydCB7IExvb2t1cENvbmZpZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvbG9va3VwLWNvbmZpZyc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgV2ZEaW1lbnNpb25EZWZDb21wb25lbnQsXHJcbiAgICBEaW1lbnNpb25JdGVtQ2FyZENvbXBvbmVudCxcclxuICAgIEVudW1FZGl0Q29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICBGYXJyaXNCdXR0b25Nb2R1bGUsXHJcbiAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICBGYXJyaXNEaWFsb2dNb2R1bGUsXHJcbiAgICBOb3RpZnlNb2R1bGUsXHJcbiAgICBHU1BNZXRhZGF0YVJUU2VydmljZU1vZHVsZS5mb3JSb290KCcnKSxcclxuICAgIE1ldGFkYXRhUlRTZWxlY3RNb2R1bGUsXHJcbiAgICBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgV0ZEaW1lbnNpb25QYW5lbE1vZHVsZSxcclxuICAgIERhdGFncmlkRWRpdG9yc01vZHVsZSxcclxuICAgIERhdGFncmlkTW9kdWxlLmZvclJvb3QoW1xyXG4gICAgICAuLi5FZGl0b3JQcm92aWRlcnNcclxuICAgIF0pLFxyXG4gICAgQ29tYm9MaXN0TW9kdWxlLFxyXG4gICAgRXhwcmVzc2lvbk1vZHVsZSxcclxuICAgIFNlbGVjdEVsZW1lbnRNb2R1bGUsXHJcbiAgICBMb29rdXBDb25maWdNb2R1bGVcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgR1NQTWV0YWRhdGFSVFNlcnZpY2UsXHJcbiAgICBXRkRpbWVuc2lvbkRlZlZpZXdtb2RlbCxcclxuICAgIFdGRGltZW5zaW9uRGVmVUlTdGF0ZSxcclxuICAgIEV4cHJlc3Npb25TZXJ2aWNlLFxyXG4gICAgSHR0cFNlcnZpY2VcclxuICBdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW1xyXG4gICAgRW51bUVkaXRDb21wb25lbnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtXZkRpbWVuc2lvbkRlZkNvbXBvbmVudCwgRGltZW5zaW9uSXRlbUNhcmRDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBXZkRpbWVuc2lvbkRlZk1vZHVsZSB7IH1cclxuIl19