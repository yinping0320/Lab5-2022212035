import { BeSessionStorageStrategy } from './storage_strategy';
/**
 * 基于浏览器SessionStorage的BeSession缓存
 * @summary
 * 1、SeparatedSession模式下：
 *  {
 *    BE_SESSION_ID: {
 *      frmSessionId1_beSessionUri1: beSessionId-1,
 *      frmSessionId2_beSessionUri2: beSessionId-2,
 *    }
 *  }
 * 2、UnifiedSession模式下（在Debug状态，同模式1）：
 * {
 *    BE_SESSION_ID: {
 *      frmSessionId1: beSessionId-1,
 *      frmSessionId2: beSessionId-2,
 *    }
 *  }
 */
declare class SessionStorageBeSessionStorageStrategy implements BeSessionStorageStrategy {
    /**
     * 缓存Token
     */
    private sessionStorageKey;
    /**
     * 获取值
     */
    getItem(beSessionKey: string): string;
    /**
     * 设置值
     */
    setItem(beSessionKey: string, beSessionId: string): void;
    /**
     * 删除值
     */
    removeItem(beSessionKey: string): void;
    /**
     * 根据scope删除值
     */
    removeItemsByScope(beSessionScope: string): void;
    /**
     * 清空所有会话
     */
    clear(): void;
    /**
     * 从SessionStorage中获取全部BeSessions
     */
    private getAllBeSessions;
    /**
     * 设置全部BeSessions到SessionStorage
     */
    setAllBeSessions(beSessions: any): void;
}
export { SessionStorageBeSessionStorageStrategy };
