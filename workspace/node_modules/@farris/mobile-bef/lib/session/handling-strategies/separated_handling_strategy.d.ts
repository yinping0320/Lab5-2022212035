import { Observable } from 'rxjs';
import { HttpHeaders, HttpClient } from '@farris/mobile-devkit';
import { FrameworkSessionService } from '../../framework_session_service';
import { BeSessionStorageStrategy } from '../storage-strategies/index';
import { BefSessionHandlingStrategy } from './handling_strategy';
/**
 * 隔离的BeSession处理策略
 */
declare class BefSeparatedSessionHandlingStrategy extends BefSessionHandlingStrategy {
    /**
     * 构造函数
     */
    constructor(storageStrategy: BeSessionStorageStrategy, frmSessionService: FrameworkSessionService, httpClient: HttpClient, beBaseUrl: string);
    /**
     * 获取BeSessionId
     */
    getSessionId(): Observable<string>;
    /**
     * 设置BeSessionId
     */
    setSessionId(sessionId: string): void;
    /**
     * 清空BeSessionId
     */
    clearSessionId(): void;
    /**
     * 扩展BeSessionId相关头信息
     */
    handleRequestHeaders(headers: HttpHeaders): HttpHeaders;
    /**
     * 处理服务器端返回的headers
     */
    handleReponseHeaders(headers: any): void;
    /**
     * 获取某个Repository对应的BeSession的唯一key
     */
    protected getSessionStorageKey(): string;
}
export { BefSeparatedSessionHandlingStrategy };
