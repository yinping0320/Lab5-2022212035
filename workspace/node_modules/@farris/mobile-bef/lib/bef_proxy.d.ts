import { Observable } from 'rxjs';
import { HttpMethod, HttpRequestConfig, HttpClient } from '@farris/mobile-devkit';
import { RequestInfo, ResponseInfo, ChangeDetail } from './types';
import { IProxyExtend } from './bef_proxy_extend';
/**
 * Bef API代理类
 */
export declare abstract class BefProxy {
    httpClient: HttpClient;
    /**
     * API基路径
     * @summary
     * 延迟到实现类确定，考虑使用注解指定。
     */
    abstract baseUrl: string;
    associatedUrlMap: Map<string, string>;
    /**
     * 代理扩展
     */
    protected proxyExtend: IProxyExtend;
    /**
     * 构造函数
     */
    constructor(httpClient: HttpClient);
    setAssociatedUrl(url: any): void;
    /**
     * 设置扩展策略
     */
    setProxyExtend(proxyExtend: IProxyExtend): void;
    /**
     * 查询
     */
    query(entityFilter?: any): Observable<any>;
    /**
     * 列表数据查询（扩展）
     */
    extendQuery(entityFilter: any): Observable<ResponseInfo>;
    /**
     * 单条数据检索
     */
    retrieve(id: string): Observable<any>;
    /**
     * 单条数据检索（扩展）
     */
    extendRetrieve(id: string): Observable<ResponseInfo>;
    /**
     * 单条数据检索（加锁）
     */
    edit(id: string): Observable<ResponseInfo>;
    /**
     * 新增数据
     */
    create(defaultValue?: any, requestInfo?: RequestInfo): Observable<any>;
    /**
     * 新增从表数据
     * @path 新增路径（从表形如：/1/edus，从从表形如：/1/edus/11/grades）
     */
    createByPath(fpath: string): Observable<any>;
    /**
     * 提交变更
     */
    update(changeDetail: ChangeDetail): Observable<any>;
    /**
     * 执行保存
     */
    save(): Observable<any>;
    /**
     * 删除
     */
    delete(id: string): Observable<any>;
    /**
     * 删除（扩展）
     */
    extendDelete(id: string): Observable<any>;
    /**
     * 删除并保存
     */
    deleteAndSave(id: any): Observable<any>;
    /**
     * 删除后代
     */
    deletByPath(fpath: string, id: string): Observable<any>;
    /**
     * 删除后代（扩展）
     */
    extendDeletByPath(fpath: string, id: string): Observable<any>;
    /**
     * 批量删除
     * @param ids 待删除的id数组
     */
    batchDelete(ids: string[]): Observable<any>;
    /**
     * 批量删除（扩展）
     */
    extendBatchDelete(ids: string[]): Observable<any>;
    /**
     * 取消
     */
    cancel(): Observable<any>;
    /**
     * 调用httpclient取数
     * @param url url
     * @param method methods
     * @param requestConfigs options
     */
    request(method: HttpMethod, url: string, requestConfigs?: HttpRequestConfig, ignoreHandlingChanges?: boolean): Observable<any>;
}
