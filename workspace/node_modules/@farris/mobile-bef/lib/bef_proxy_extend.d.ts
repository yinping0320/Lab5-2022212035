import { Observable } from 'rxjs';
import { Entity, HttpHeaders } from '@farris/mobile-devkit';
import { ResponseInfo } from './types';
import { BefRepository } from './bef_repository';
/**
 * 代理钩子
 */
export interface IProxyExtend {
    extendBody(body: any): {
        [propName: string]: any;
    };
    extendHeaders(headers: {
        [propName: string]: any;
    }): Observable<any>;
    onResponse?(response: ResponseInfo, ignoreChanges?: boolean): any;
    onError?(error: any, selfHandError: boolean, ignoreError: boolean): Observable<any>;
}
/**
 * Bef代理扩展类
 */
export declare class BefProxyExtend implements IProxyExtend {
    private repository;
    /**
   * 注入器
   */
    private readonly injector;
    /**
     * 构造函数
     */
    constructor(repository: BefRepository<Entity>);
    /**
     * 返回结果处理
     */
    onResponse(response: any): ResponseInfo;
    /**
     * 处理服务器端返回的headers数据
     */
    private handleResponseHeaders;
    /**
     * 处理服务器端返回的的body数据
     */
    private handleResponseBody;
    /**
     * 错误处理
     */
    onError(error: any): Observable<any>;
    /**
     * 扩展Headers
     */
    extendHeaders(headers: HttpHeaders): Observable<{
        [propName: string]: any;
    }>;
    /**
     * 扩展Body
     */
    extendBody(body: any): any;
}
