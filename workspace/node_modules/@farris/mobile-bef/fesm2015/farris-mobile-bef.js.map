{"version":3,"file":"farris-mobile-bef.js","sources":["ng://@farris/mobile-bef/lib/types.ts","ng://@farris/mobile-bef/lib/tokens.ts","ng://@farris/mobile-bef/lib/utils/bef_http.util.ts","ng://@farris/mobile-bef/lib/utils/request_info.util.ts","ng://@farris/mobile-bef/lib/utils/response_info.util.ts","ng://@farris/mobile-bef/lib/utils/bef_change_util.ts","ng://@farris/mobile-bef/lib/utils/bef_data_path_util.ts","ng://@farris/mobile-bef/lib/utils/bef_proxy_util.ts","ng://@farris/mobile-bef/lib/utils/bef_repository_util.ts","ng://@farris/mobile-bef/lib/utils/entity_util.ts","ng://@farris/mobile-bef/lib/utils/bef_env_util.ts","ng://@farris/mobile-bef/lib/bef_change_builder.ts","ng://@farris/mobile-bef/lib/bef_change_handler.ts","ng://@farris/mobile-bef/lib/session/handling-strategies/handling_strategy.ts","ng://@farris/mobile-bef/lib/session/handling-strategies/separated_handling_strategy.ts","ng://@farris/mobile-bef/lib/session/handling-strategies/unified_handling_strategy.ts","ng://@farris/mobile-bef/lib/session/storage-strategies/storage_strategy.ts","ng://@farris/mobile-bef/lib/session/storage-strategies/session_storage_strategy.ts","ng://@farris/mobile-bef/lib/session/handling-strategies/handling_strategy_factory.ts","ng://@farris/mobile-bef/lib/session/bef_session_service.ts","ng://@farris/mobile-bef/lib/bef_proxy.ts","ng://@farris/mobile-bef/lib/decorators.ts","ng://@farris/mobile-bef/lib/bef_entity_manager.ts","ng://@farris/mobile-bef/lib/bef_variable_manager.ts","ng://@farris/mobile-bef/lib/bef_data_service.ts","ng://@farris/mobile-bef/lib/framework_session_service.ts","ng://@farris/mobile-bef/lib/bef_proxy_extend.ts","ng://@farris/mobile-bef/lib/bef_repository_initializer.ts","ng://@farris/mobile-bef/lib/bef_repository.ts","ng://@farris/mobile-bef/lib/bef-lookup-data.service.ts"],"sourcesContent":["\r\n/**\r\n * 变更类型\r\n */\r\nexport class ChangeDetailType {\r\n\r\n  /**\r\n   * 新增\r\n   */\r\n  static Added = 'Added';\r\n\r\n  /**\r\n   * 修改\r\n   */\r\n  static Modify = 'Modify';\r\n\r\n  /**\r\n   * 删除\r\n   */\r\n  static Deleted = 'Deleted';\r\n}\r\n\r\n/**\r\n * 行变更信息\r\n * 必须包含：\r\n * 1、DataId   => 主键值；\r\n * 2、属性名   => 新的属性值；\r\n * 3、子表名+s => 子表行的ChangeDetail数组\r\n */\r\nexport interface ChangeDetailInfo {\r\n  DataId?: string;\r\n  [key: string]: number | string | boolean | null | ChangeDetail | ChangeDetail[] | { [key: string]: any };\r\n}\r\n\r\n/**\r\n * 行变更详情\r\n * 包含：\r\n * 1、变更类型；\r\n * 2、变更信息\r\n */\r\nexport interface ChangeDetail {\r\n  ChangeType: ChangeDetailType;\r\n  ChangeInfo: ChangeDetailInfo;\r\n}\r\n\r\n\r\n/**\r\n * 请求类型\r\n */\r\nexport interface RequestInfo {\r\n  dataChange: ChangeDetail[];\r\n  variableChange?: ChangeDetail;\r\n}\r\n\r\n\r\n/**\r\n * 分页信息\r\n */\r\nexport interface Pagination {\r\n  pageSize: number;\r\n  totalCount: number;\r\n  pageCount: number;\r\n  pageIndex: number;\r\n}\r\n\r\n/**\r\n * 查询结果\r\n */\r\nexport interface QueryResult {\r\n  result: any[];\r\n  pagination: Pagination;\r\n}\r\n\r\n/**\r\n * 返回结果类型\r\n */\r\nexport interface ResponseInfo {\r\n  returnValue: any;\r\n  message: any[];\r\n  innerDataChange: ChangeDetail[];\r\n  innerVariableChange: ChangeDetail;\r\n}\r\n\r\n/**\r\n * 带RequestInfo的body对象\r\n */\r\nexport interface BodyWithRequestInfo {\r\n  requestInfo: RequestInfo;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * request option格式\r\n */\r\nexport interface RequestOption {\r\n  body: BodyWithRequestInfo;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n *  异常处理信息接口\r\n */\r\nexport interface IErrorServe {\r\n  show(error: any): any;\r\n}","import { InjectionToken } from '@farris/mobile-devkit';\r\nimport { IErrorServe } from './types';\r\n\r\nconst BE_SERVER_URI_TOKEN = new InjectionToken<string>('@farris/be BE_SERVER_URL');\r\n\r\n/**\r\n * 1、因为bef里，很多类都没有注入，BefSessionHandlingStragegy无法直接注入；\r\n * 2、通过一个字符串Token来间接做策略选择。\r\n */\r\nconst BE_SESSION_HANDLING_STRATEGY_TOKEN = new InjectionToken<boolean>('@farris/be BE_SESSION_HANDLING_STRATEGY_TOKEN');\r\n\r\n/**\r\n * 注入异常处理service\r\n */\r\nconst BE_ERROR_HANDLER__TOKEN = new InjectionToken<IErrorServe>('@farris/be BE_ERROR_HANDLER__TOKEN')\r\n\r\nexport { BE_SERVER_URI_TOKEN, BE_SESSION_HANDLING_STRATEGY_TOKEN, BE_ERROR_HANDLER__TOKEN };\r\n","import { HttpHeaders, HttpUtil } from '@farris/mobile-devkit';\r\n\r\n/**\r\n * BefHttp工具类\r\n */\r\nclass BefHttpUtil {\r\n\r\n  /**\r\n   * 追加SessionId头\r\n   */\r\n  public static appendSessionId(headers: HttpHeaders, sessionId: string): any {\r\n    headers = HttpUtil.appendHeader(headers, 'SessionId', sessionId);\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * 追加CommonVariable头\r\n   * @summary\r\n   * 框架会话token，等价于原来的SessionId\r\n   */\r\n  public static appendCafRuntimeCommonVariable(headers: any, commonVariable: string): any {\r\n    headers = HttpUtil.appendHeader(headers, 'X-CAF-Runtime-CommonVariable', commonVariable);\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * 追加X-CAF-Runtime-Context头\r\n   * @summary\r\n   * X-CAF-Runtime-Context等价于BeSessionId\r\n   */\r\n  public static appendCafRuntimeContext(headers: any, context: string): any {\r\n    headers = HttpUtil.appendHeader(headers, 'X-CAF-Runtime-Context', context);\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * 追加Content-Type头\r\n   * @summary\r\n   * 提交内容的MIME类型，默认为application/json\r\n   */\r\n  public static appendContextType(headers: any, contentType?: string): any {\r\n    contentType = contentType ? contentType : 'application/json';\r\n    headers = HttpUtil.appendHeader(headers, 'Content-Type', contentType);\r\n    return headers;\r\n  }\r\n\r\n}\r\n\r\nexport { BefHttpUtil };\r\n","import { Entity } from '@farris/mobile-devkit';\r\nimport { BefRepository } from '../bef_repository';\r\nimport { RequestInfo } from '../types';\r\n\r\nclass RequestInfoUtil {\r\n\r\n  /**\r\n   * 构造RequestInfo\r\n   */\r\n  public static buildRequestInfo(repository: BefRepository<Entity>): RequestInfo {\r\n    const requestInfo: RequestInfo = {\r\n      dataChange: repository.entityManager.buildAllEntityChangeDetails(),\r\n      variableChange: repository.variableManager.buildChangeDetail()\r\n    };\r\n    return requestInfo;\r\n  }\r\n\r\n  /**\r\n   * 向body中添加RequestInfo\r\n   */\r\n  public static appendRequestInfoToBody(body: any, repository: BefRepository<Entity>): any {\r\n    if (body.requestInfo) {\r\n      return body;\r\n    }\r\n    const requestInfo = this.buildRequestInfo(repository);\r\n\r\n    // body不存在时，body=requestInfo\r\n    if (!body || Object.keys(body).length === 0) {\r\n      return requestInfo;\r\n    }\r\n\r\n    const bodyWithRequestInfo = Object.assign({}, body, { requestInfo: requestInfo });\r\n    return bodyWithRequestInfo;\r\n  }\r\n}\r\n\r\nexport { RequestInfoUtil };\r\n","class ResponseInfoUtil {\r\n\r\n  /**\r\n   * 将ResponseInfo转换为老接口的数据返回格式\r\n   */\r\n  public static unWrapResponseInfo(result: any) {\r\n\r\n    // 兼容cancel没有返回值的情况\r\n    if (!result) {\r\n      return result;\r\n    }\r\n\r\n    // 没有returnValue的情况下，兼容query取数的的格式\r\n    if (result.hasOwnProperty('returnValue') === false) {\r\n      if (result.hasOwnProperty('result') && result.hasOwnProperty('pagination')) {\r\n\r\n        // 兼容返回带分页的列表数据\r\n        return result.result;\r\n      }\r\n      return result;\r\n    }\r\n\r\n    // 其他：返回RequestInfo.returnValue的情况\r\n    const returnValue = result.returnValue;\r\n    if (returnValue && returnValue.hasOwnProperty('result') && returnValue.hasOwnProperty('pagination')) {\r\n\r\n      // 兼容返回带分页的列表数据\r\n      return returnValue.result;\r\n    }\r\n    return result.returnValue;\r\n\r\n  }\r\n}\r\n\r\nexport { ResponseInfoUtil };\r\n","import { ChangeDetailType, ChangeDetail } from '../types';\r\n\r\n/**\r\n * 变更集工具类\r\n */\r\nclass BefChangeUtil {\r\n\r\n  /**\r\n   * 创建空的ChangeDetail\r\n   * @param type   the type of change\r\n   * @param dataId the identity of the entity whose properties's values have changed\r\n   */\r\n  static createEmpty(type: ChangeDetailType, dataId?: string) {\r\n    const changeDetail: ChangeDetail = {\r\n      ChangeType: type,\r\n      ChangeInfo: {}\r\n    };\r\n\r\n    if (dataId) {\r\n      changeDetail.ChangeInfo.DataId = dataId ;\r\n    }\r\n    return changeDetail;\r\n  }\r\n\r\n  /**\r\n   * Get changes from an ChangeDetail object or an plain object\r\n   * @param changeDetail 变更详情\r\n   */\r\n  static getChangeInfo(changeDetail: any): any {\r\n\r\n    const isChangeDetail = this.isChangeDetail(changeDetail);\r\n    if (isChangeDetail === true) {\r\n      return changeDetail.ChangeInfo;\r\n    } else {\r\n      return changeDetail;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check whether the changeDetial object is an instance of the ChangeDetial class.\r\n   */\r\n  static isChangeDetail(changeDetail: any) {\r\n\r\n    // @todo: if the associated object has only two properties: ChangeType and ChangeInfo, it fails.\r\n    const keys = Object.keys(changeDetail);\r\n    return keys.length === 2 && keys.indexOf('ChangeType') > -1 && keys.indexOf('ChangeInfo') > -1;\r\n  }\r\n}\r\n\r\nexport { BefChangeUtil };\r\n","import {\r\n  BindingData, BindingPropertyType, PropertyUtil, BindingPathConverter\r\n} from '@farris/mobile-devkit';\r\n\r\n/**\r\n * Bef数据中各种Path的转换\r\n */\r\nclass BefDataPathUtil {\r\n\r\n  /**\r\n   * 转换成路径数组\r\n   * 返回结果：\r\n   * 主表（/）：[ parentId ]\r\n   * 从表（/childCodes）：[ parentId, childCodes, childId ]\r\n   * 从从表（/childCodes/grandCodes）： [ parentId, childCode, childId, grandCode, grandId ]\r\n   */\r\n  public static convertToPathArray(bindingPath: string | string[], bindingData: BindingData): string[] {\r\n    const bindingPathArray: string[] = BindingPathConverter.toBindingPathArray(bindingPath);\r\n    const pathArray: string[] = [];\r\n\r\n    let currentBindingObject = bindingData.list.currentItem;\r\n    pathArray.push(currentBindingObject.primaryKeyValue);\r\n\r\n    bindingPathArray.forEach((propName: string) => {\r\n      const propInfo = PropertyUtil.getPropertyByName(currentBindingObject.properties, propName);\r\n      if (propInfo.type !== BindingPropertyType.List) {\r\n        throw new Error(`${propInfo.name}不是子表对应的属性`);\r\n      }\r\n      const currentBindingList = currentBindingObject[propName];\r\n      currentBindingObject = currentBindingList.currentItem;\r\n      pathArray.push(this.trimTrailingS(propName));\r\n      pathArray.push(currentBindingObject.primaryKeyValue);\r\n    });\r\n\r\n    return pathArray;\r\n  }\r\n\r\n  /**\r\n   * 转换为RestUrl里的路径\r\n   *\r\n   * 返回结果：\r\n   * 主表（/）：/\r\n   * 从表（/jiwtEdus）：/xxx/jiwtEdu\r\n   * 从从表（/jiwtEdus/jiwtGrades）： /xxx/jiwtEdu/xxx/jiwtGrade\r\n   */\r\n  public static convertToPathUrl(bindingPath: string | string[], bindingData: BindingData): string {\r\n    const pathArray = this.convertToPathArray(bindingPath, bindingData);\r\n    pathArray.pop();\r\n    return '/' + pathArray.join('/');\r\n  }\r\n\r\n  /**\r\n   * 转换为表名数组\r\n   * 返回结果：\r\n   * 主表（/）：[]\r\n   * 从表（/childCodes）：[ childCodes ]\r\n   * 从从表（/childCodes/grandCodes [childCode ,grandCode]\r\n   */\r\n  public static convertToObjectCodes(bindingPath: string | string[], bindingData: BindingData) {\r\n    const pathArray = this.convertToPathArray(bindingPath, bindingData);\r\n    const pathLen = pathArray.length;\r\n\r\n    const objectCodes = [];\r\n    for (let i = 1; i < pathLen; i = i + 2) {\r\n      objectCodes.push(pathArray[i]);\r\n    }\r\n\r\n    return objectCodes;\r\n  }\r\n\r\n  /**\r\n   * 转换为id数组，包含最后一级的主键\r\n   * 主表（/）：[ parentId ]\r\n   * 从表（/childCodes）：[ parentId, childId ]\r\n   * 从从表（/childCodes/grandCodes）： [ parentId, childId, grandId]\r\n   */\r\n  public static convertToDataIdsForUpdate(bindingPath: string | string[], bindingData: BindingData) {\r\n    const pathArray = this.convertToPathArray(bindingPath, bindingData);\r\n    const pathLen = pathArray.length;\r\n\r\n    const dataIds = [];\r\n    for (let i = 0; i < pathLen; i = i + 2) {\r\n      dataIds.push(pathArray[i]);\r\n    }\r\n\r\n    return dataIds;\r\n  }\r\n\r\n  /**\r\n   * 转换为id数组，不包含最后一级的主键\r\n   * 主表（/）：[ ]\r\n   * 从表（/childCodes）：[ parentId ]\r\n   * 从从表（/childCodes/grandCodes）： [ parentId, childId]\r\n   */\r\n  public static convertToDataIdsForAdd(bindingPath: string | string[], bindingData: BindingData) {\r\n    const dataIds = this.convertToDataIdsForUpdate(bindingPath, bindingData);\r\n    dataIds.pop();\r\n    return dataIds;\r\n  }\r\n\r\n  /**\r\n   * 将EntityPathString转换为Url\r\n   * @deprecated\r\n   */\r\n  public static convertPathToUrl(path: string): string {\r\n    const subPaths = path.split('/');\r\n    for (let i = subPaths.length - 1; i > 0; i--) {\r\n      if (subPaths[i] && subPaths[i].endsWith('s')) {\r\n        subPaths[i] = subPaths[i].substr(0, subPaths[i].length - 1);\r\n      }\r\n    }\r\n    return subPaths.join('/').toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * 去除最后的s\r\n   */\r\n  private static trimTrailingS(str: string) {\r\n    return str.substr(0, str.length - 1);\r\n  }\r\n  /**\r\n   * 转换通用路径为仅有表名的数组\r\n   *\r\n   * 1.['id:xxx','child1s','id:xx','prop'] => ['child1s','prop']\r\n   * 2.['prop1','prop2','prop3'] => ['prop1','prop2','prop3']\r\n   * 3.['prop1','id:xxx','prop2'] => ['prop1','prop2']\r\n   * @param paths 内置路径，格式:['id:xxx','child1s','id:xx','prop']\r\n   */\r\n  public static convertPathsToNodeCodes(paths: string[]) {\r\n    const result = [];\r\n    if (!paths || paths.length < 1) {\r\n      return result;\r\n    }\r\n    paths.filter(item => !!item && item.indexOf(':') === -1).forEach(node => {\r\n      result.push(node);\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * 转换通用路径为仅有实体主键值的数组\r\n   * @param paths 通用路径，格式:['id:xxx','child1s','id:xx','prop'] => ['xxx','xx']\r\n   */\r\n  public static convertPathsToIds(paths: string[]) {\r\n    const result = [];\r\n    if (!paths || paths.length < 1) {\r\n      return result;\r\n    }\r\n    paths.filter(item => !!item && item.indexOf(':') !== -1).forEach(id => {\r\n      result.push(id.split(':')[1]);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n\r\nexport { BefDataPathUtil };\r\n","import { RequestInfo } from '../types';\r\nimport { BefRepository } from '../bef_repository';\r\n\r\n/**\r\n * BefProxy工具类\r\n * @summary\r\n * 1、BefProxy辅助工具类；\r\n * 2、暂时无法归类的代码封装；\r\n */\r\nclass BefProxyUtil {\r\n\r\n  /**\r\n   * 构造RequestInfo\r\n   */\r\n  public static buildRequestInfo(befRepository: BefRepository<any>): RequestInfo {\r\n    const requestInfo: RequestInfo = {\r\n      dataChange: befRepository.entityManager.buildAllEntityChangeDetails(),\r\n      variableChange: befRepository.variableManager.buildChangeDetail()\r\n    };\r\n    return requestInfo;\r\n  }\r\n}\r\n\r\nexport { BefProxyUtil };\r\n","import { BefRepository } from '../bef_repository';\r\n\r\nexport class BefRepositoryUtil {\r\n\r\n  /**\r\n   * isExistUnsaveData\r\n   */\r\n  public static isExistUnsaveData(befRepository: BefRepository<any>): boolean {\r\n    let hasUnsavedData = false;\r\n    if (!befRepository || !befRepository.entityCollection) {\r\n      throw new Error('Current Object is null or it\\'s entityCollection is null.');\r\n    }\r\n\r\n    const entityArray = befRepository.entityCollection.toArray();\r\n    if (befRepository.dataChangeHistory.isChanged()) {\r\n      return true;\r\n    }\r\n    for (let i = 0; i < entityArray.length; i++) {\r\n      if (entityArray[i].changes.length > 0) {\r\n        hasUnsavedData = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return hasUnsavedData;\r\n  }\r\n\r\n}\r\n","import { FieldMetadataUtil } from '@farris/mobile-devkit';\r\n\r\nclass EntityUtil {\r\n  /**\r\n   * 查找属性的类型\r\n   * @param entityType 实体类型\r\n   * @param targetPropName 属性名称\r\n   * @return 属性信息，包含属性类型（NgField、NgObject、NgList, NgDynamic）和属性对应的实体类型（当NgField类型时为null）\r\n   */\r\n  static getPropInfo(entityType: any, targetPropName: string): { propType: string, propEntityType: any, propMetadata: any} {\r\n\r\n    let propType: string;\r\n    let propEntityType: any;\r\n    let propMetadata: any;\r\n\r\n    // NgField\r\n    const ngFieldProperties = FieldMetadataUtil.getNgFields(entityType);\r\n    Object.keys(ngFieldProperties).forEach((propName: string) => {\r\n      if (propName === targetPropName) {\r\n        propType = 'NgField';\r\n        propEntityType = null;\r\n        propMetadata = ngFieldProperties[propName];\r\n      }\r\n    });\r\n\r\n    // NgObject\r\n    const ngObjectProperties = FieldMetadataUtil.getNgObjects(entityType);\r\n    Object.keys(ngObjectProperties).forEach((propName: string) => {\r\n      if (propName === targetPropName) {\r\n        propType = 'NgObject';\r\n        propEntityType = ngObjectProperties[propName].type;\r\n        propMetadata = ngObjectProperties[propName];\r\n      }\r\n    });\r\n\r\n    // NgList\r\n    const ngListProperties = FieldMetadataUtil.getNgList(entityType);\r\n    Object.keys(ngListProperties).forEach((propName: string) => {\r\n      if (propName === targetPropName) {\r\n        propType = 'NgList';\r\n        propEntityType = ngListProperties[propName].type;\r\n        propMetadata = ngListProperties[propName];\r\n      }\r\n    });\r\n\r\n    const ngDynamicProperties = FieldMetadataUtil.getNgDynamic(entityType);\r\n    Object.keys(ngDynamicProperties).forEach((propName: string) => {\r\n      if (propName === targetPropName) {\r\n        propType = 'NgDynamic';\r\n        propEntityType = ngDynamicProperties[propName].type;\r\n        propMetadata = ngDynamicProperties[propName];\r\n      }\r\n    });\r\n\r\n    return { propType, propEntityType, propMetadata };\r\n  }\r\n\r\n  /**\r\n   * 获取实体的主键名\r\n   * @param entityType 实体类型\r\n   */\r\n  static getPrimaryKey(entityType: any) {\r\n    const primaryNgFiledProp = FieldMetadataUtil.getPrimaryFieldMetadata(entityType);\r\n    if (primaryNgFiledProp) {\r\n      return primaryNgFiledProp.dataField;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 是否为对象属性\r\n   */\r\n  static isObjectProp(entityType: any, targetPropName: string, ) {\r\n    let isObjectProp = false;\r\n    const ngObjectProperties = FieldMetadataUtil.getNgObjects(entityType);\r\n    Object.keys(ngObjectProperties).forEach((propName: string) => {\r\n      if (propName === targetPropName) {\r\n        isObjectProp = true;\r\n      }\r\n    });\r\n    return isObjectProp;\r\n  }\r\n\r\n  /**\r\n   * 检查是否是动态列属性\r\n   */\r\n  static isDynamicProp(entityType: any, targetPropName: string) {\r\n    let isDynamicProp = false;\r\n    const ngDynamicProperties = FieldMetadataUtil.getNgDynamic(entityType);\r\n    Object.keys(ngDynamicProperties).forEach((propName: string) => {\r\n      if (propName === targetPropName) {\r\n        isDynamicProp = true;\r\n      }\r\n    });\r\n    return isDynamicProp;\r\n  }\r\n\r\n  /**\r\n   * 为实体增加initialData属性\r\n   * @param entity 实体实例\r\n   * @param initialData 默认值对象\r\n   */\r\n  static appendInitialData (entity, initialData) {\r\n    const data = Object.assign({}, initialData);\r\n    delete data.id;\r\n    delete data.parentID;\r\n    entity['initialData'] = data;\r\n  }\r\n\r\n}\r\n\r\nexport { EntityUtil };\r\n","/**\r\n * Bef环境监测工具类\r\n */\r\nclass BefEnvUtil {\r\n\r\n  /**\r\n   * 是否在框架内运行\r\n   */\r\n  public static isInFramework(): boolean {\r\n    const hashString = window.location.hash;\r\n    if (!hashString) {\r\n      return false;\r\n    }\r\n    return hashString.indexOf('formToken=') !== -1;\r\n  }\r\n\r\n}\r\n\r\nexport { BefEnvUtil };\r\n","import { Type, Modification, ModifyType, Entity, EntityCollection } from '@farris/mobile-devkit';\r\nimport { ChangeDetailType, ChangeDetail } from './types';\r\nimport { EntityUtil } from './utils/index';\r\n\r\n\r\n/**\r\n * BEF变更集构造器\r\n */\r\nclass BefChangeBuilder {\r\n\r\n  /**\r\n   * Bef变更集\r\n   */\r\n  public changeDetail: ChangeDetail;\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param entityType 实体类型\r\n   */\r\n  constructor(\r\n    private entityType: Type<Entity>,\r\n    private entityCollection: EntityCollection<Entity>\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * 构造Bef变更集\r\n   */\r\n  public build(modifications: Modification[]): ChangeDetail {\r\n\r\n    // 重置changeDetail\r\n    this.changeDetail = {\r\n      ChangeType: ChangeDetailType.Modify,\r\n      ChangeInfo: {\r\n        DataId: ''\r\n      }\r\n    };\r\n\r\n    modifications.forEach(modification => {\r\n      this.buildChangeDetail(modification);\r\n    });\r\n    return this.changeDetail;\r\n  }\r\n\r\n  /**\r\n   * 构造Bef变更详情\r\n   */\r\n  public buildChangeDetail(modification: Modification) {\r\n\r\n    const paths = modification.path.concat();\r\n\r\n    // 设置根节点DataId\r\n    if (!this.changeDetail.ChangeInfo.DataId) {\r\n      this.changeDetail.ChangeInfo.DataId = paths[0].split(':')[1];\r\n    }\r\n\r\n    let parentChangeDetail = this.changeDetail;\r\n    let parentEntityType = this.entityType;\r\n\r\n    for (let i = 1; i < paths.length && parentChangeDetail; i = i + 2) {\r\n\r\n      const parentChangeInfo = this.getChangeInfo(parentChangeDetail);\r\n      const propName = paths[i];\r\n      const { propType, propEntityType, propMetadata } = EntityUtil.getPropInfo(parentEntityType, propName);\r\n      const dataField = propMetadata.dataField || propName;\r\n\r\n      if (propType === 'NgField') {\r\n\r\n        // 不支持主键变更，忽略\r\n        const primaryKey = EntityUtil.getPrimaryKey(parentEntityType);\r\n        if (propName === primaryKey) {\r\n          continue;\r\n        }\r\n\r\n        if (modification.type !== ModifyType.ValueChange) {\r\n          throw Error('简单类型的属性上不支持ValueChange类型之外的变更');\r\n        }\r\n\r\n        // NgField类型：说明是最后一级\r\n        parentChangeInfo[dataField] = modification.value;\r\n        parentChangeDetail = null;\r\n\r\n      } else if (propType === 'NgObject') {\r\n\r\n        // NgObject属性本身无法触发变更，只有它的子节点才能触发，所以它上边的变更永远是Modify类型的。\r\n        const childId = paths[i + 1].split(':')[1];\r\n        const childIdName = paths[i + 1].split(':')[0];\r\n\r\n        if (childIdName) {\r\n\r\n          // 有主键（关联对象）：是一个普通的对象\r\n          let changeObject = parentChangeInfo[dataField];\r\n\r\n          // 获取数据\r\n          const entityPath = paths.slice(0, i + 1);\r\n          const changedEntity = this.entityCollection.getEntityByPath(entityPath);\r\n          changeObject = changedEntity ? changedEntity.toJSON() : {};\r\n          parentChangeInfo[dataField] = changeObject;\r\n          parentChangeDetail = null;\r\n          parentEntityType = null;\r\n\r\n        } else {\r\n\r\n          // 没有主键（值对象）：是一个完整的ChangeDetail\r\n          let changeDetail = parentChangeInfo[dataField] as ChangeDetail;\r\n          if (!changeDetail) {\r\n            changeDetail = {\r\n              ChangeType: ChangeDetailType.Modify,\r\n              ChangeInfo: {}\r\n            };\r\n          }\r\n          parentChangeInfo[dataField] = changeDetail;\r\n          parentChangeDetail = changeDetail;\r\n          parentEntityType = propEntityType;\r\n        }\r\n\r\n      } else if (propType === 'NgList') {\r\n\r\n        // 如果不存在则创建一个空数组\r\n        if (!parentChangeDetail.ChangeInfo[dataField]) {\r\n          parentChangeDetail.ChangeInfo[dataField] = [];\r\n        }\r\n        const changeDetails = parentChangeDetail.ChangeInfo[dataField] as ChangeDetail[];\r\n\r\n        // 如果这个属性，不是叶子节点，需要查找当前属性是否已经存在对应ChangeDetail：\r\n        // 1、不存在：创建一个Modify类型的ChangeDetail；\r\n        // 2、存在：返回查找到的ChangeDetai，这个ChangeDetail可能是一个Add类型也可能是一个Modify类型；\r\n        // 3、现状：目前BEF不支持Add类型的变更，肯定是一个Modify类型的变更。\r\n        if (i !== paths.length - 1) {\r\n\r\n          // 遍历检查变更是否已经存在\r\n          const dataId = paths[i + 1].split(':')[1];\r\n\r\n          let changeDetail = changeDetails.find(changeDetailItem => {\r\n            return changeDetailItem.ChangeInfo.DataId === dataId;\r\n          });\r\n\r\n          // 如果不存在，则创建并添加\r\n          if (!changeDetail) {\r\n            changeDetail = this.createEmptyChangeDetail(ChangeDetailType.Modify, dataId);\r\n            changeDetails.push(changeDetail);\r\n          }\r\n          parentChangeDetail = changeDetail;\r\n          parentEntityType = propEntityType;\r\n          continue;\r\n        }\r\n\r\n        // 重置\r\n        parentChangeDetail = null;\r\n        parentEntityType = null;\r\n\r\n      } else if (propType === 'NgDynamic') {\r\n        // 获取数据\r\n        const entityPath = paths.slice(0, i + 1);\r\n        const changedEntity = this.entityCollection.getEntityByPath(entityPath);\r\n        parentChangeInfo[dataField] = {\r\n          ChangeType: ChangeDetailType.Modify,\r\n          ChangeInfo: changedEntity ? changedEntity.toJSON() : {}\r\n        };\r\n        parentChangeDetail = null;\r\n        parentEntityType = null;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 获取变更信息\r\n   * 在整个ChangeDetail树上，存在两种类型的节点\r\n   * ChangeDetail：实体变更、值对象变更（没有DataID）\r\n   * PlainObject: 关联对象的变更\r\n   * 从这两种节点上拿具体变更信息的时候，需要统一处理，屏蔽这个差异。\r\n   * @todo：为这两种节点封装ChangeNode基类来解决这个差异。\r\n   */\r\n  private getChangeInfo(changeDetail: any): any {\r\n\r\n    // @todo：可能存在同名属性\r\n    if (changeDetail.hasOwnProperty('ChangeInfo')) {\r\n      return changeDetail.ChangeInfo;\r\n    } else {\r\n      return changeDetail;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 创建ChangeDetail\r\n   * @param type BEF变更类型\r\n   * @param dataId 数据内码\r\n   */\r\n  private createEmptyChangeDetail(type: ChangeDetailType, dataId: string): ChangeDetail {\r\n    const changeDetail: ChangeDetail = {\r\n      ChangeType: type,\r\n      ChangeInfo: {\r\n        DataId: dataId\r\n      }\r\n    };\r\n    return changeDetail;\r\n  }\r\n\r\n}\r\n\r\nexport { BefChangeBuilder };\r\n","import { Type, Entity, EntityList, EntityCollection } from '@farris/mobile-devkit';\r\nimport { EntityUtil } from './utils/index';\r\nimport { ChangeDetailType, ChangeDetail } from './types';\r\n\r\n/**\r\n * 处理服务器端变更\r\n */\r\nclass BefChangeHandler {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * 处理Bef变更集\r\n   */\r\n  handle(\r\n    entityType: Type<Entity>,\r\n    entityCollection: EntityCollection<Entity>,\r\n    changeDetails: ChangeDetail[]\r\n  ) {\r\n    this.handleChangeDetails(entityType, entityCollection, changeDetails);\r\n  }\r\n\r\n  /**\r\n   * 处理Bef变更集（批量）\r\n   */\r\n  handleChangeDetails(\r\n    entityType: Type<Entity>,\r\n    entityList: EntityList<Entity> | EntityCollection<Entity>,\r\n    changeDetails: ChangeDetail[]\r\n  ) {\r\n    if (!changeDetails) {\r\n      return;\r\n    }\r\n\r\n    changeDetails.forEach((changeDetail: ChangeDetail) => {\r\n      const id = (changeDetail.ChangeInfo.dataId || changeDetail.ChangeInfo.DataId) as string;\r\n      const entity = this.getEntityById(entityList, id);\r\n      if (!entity) {\r\n        return;\r\n      }\r\n      this.handleChangeDetail(entityType, entity, changeDetail);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 处理Bef变更集（单条）\r\n   */\r\n  handleChangeDetail(\r\n    entityType: Type<Entity>,\r\n    entity: Entity,\r\n    changeDetail: ChangeDetail\r\n  ) {\r\n\r\n    if (!changeDetail || !entity) {\r\n      return;\r\n    }\r\n\r\n    // 只处理值变更，其他变更待进一步验证。\r\n    if (changeDetail.ChangeType !== ChangeDetailType.Modify) {\r\n      return;\r\n    }\r\n\r\n    const changeInfo = changeDetail.ChangeInfo;\r\n    Object.keys(changeInfo).forEach((propName: string) => {\r\n      const { propType, propEntityType } = EntityUtil.getPropInfo(entityType, propName);\r\n      if (propType === 'NgField') {\r\n\r\n        // 简单属性：更新值\r\n        entity[propName] = changeInfo[propName];\r\n      } else if (propType === 'NgObject') {\r\n        const childEntity = entity[propName] as Entity;\r\n        if (childEntity.primaryKey) {\r\n\r\n          // 关联对象：重新加载数据\r\n          const childEntityData = changeInfo[propName];\r\n          childEntity.load(childEntityData);\r\n\r\n        } else {\r\n\r\n          // 值对象：递归处理变更\r\n          const childChangeDetail = changeInfo[propName] as ChangeDetail;\r\n          this.handleChangeDetail(propEntityType, childEntity, childChangeDetail);\r\n        }\r\n\r\n      } else if (propType === 'NgList') {\r\n\r\n        // 子列表：递归处理变更集合\r\n        const childEntityList = entity[propName] as EntityList<Entity>;\r\n        const childChangeDetails = changeInfo[propName] as ChangeDetail[];\r\n        this.handleChangeDetails(propEntityType, childEntityList, childChangeDetails);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 根据id获取实体，屏蔽EntityCollection和EntityList之间的差异\r\n   */\r\n  private getEntityById(entityList: EntityList<Entity> | EntityCollection<Entity>, id: string): Entity {\r\n    let target: Entity;\r\n    if (entityList instanceof EntityCollection) {\r\n      target = entityList.getEntityById(id);\r\n    } else {\r\n      target = entityList.get(id);\r\n    }\r\n    return target ? target : null;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport { BefChangeHandler };\r\n","import { Observable, BehaviorSubject, of, Subject } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { HttpHeaders, HttpRequestConfig, HttpClient } from '@farris/mobile-devkit';\r\n\r\nimport { BefHttpUtil } from '../../utils/index';\r\nimport { FrameworkSessionService } from '../../framework_session_service';\r\nimport { BeSessionStorageStrategy } from '../storage-strategies/index';\r\n\r\n/**\r\n * BefSession处理策略类\r\n */\r\nabstract class BefSessionHandlingStrategy {\r\n\r\n  /**\r\n   * 存储策略\r\n   */\r\n  protected storageStrategy: BeSessionStorageStrategy;\r\n\r\n  /**\r\n   * 框架Session服务\r\n   */\r\n  protected frmSessionService: FrameworkSessionService;\r\n\r\n  /**\r\n   * Http客户端\r\n   */\r\n  protected httpClient: HttpClient;\r\n\r\n  /**\r\n   * 创建Session的的EAPI地址\r\n   */\r\n  protected beBaseUrl: string;\r\n\r\n  /**\r\n   * 创建BeSession接口地址\r\n   */\r\n  protected beCreateSessionUrl: string;\r\n\r\n  /**\r\n   * 关闭BeSession接口地址\r\n   */\r\n  protected beCloseSessionUrl: string;\r\n\r\n  /**\r\n   * 框架SessionId（用户的或者功能菜单的）\r\n   */\r\n  protected get frmSessionId(): string {\r\n    return this.frmSessionService.getCurrentSessionId();\r\n  }\r\n\r\n  /**\r\n   * 清空的BeSessionId\r\n   */\r\n  protected oldBeSessionId: string;\r\n\r\n  /**\r\n   * BeSession是否存在\r\n   */\r\n  private beSessionExisted = false;\r\n\r\n  /**\r\n   * BeSession是否存在流\r\n   */\r\n  private beSessionExisted$: BehaviorSubject<boolean>;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(\r\n    storageStrategy: BeSessionStorageStrategy, frmSessionService: FrameworkSessionService,\r\n    httpClient: HttpClient, beBaseUrl: string\r\n  ) {\r\n    this.storageStrategy = storageStrategy;\r\n    this.frmSessionService = frmSessionService;\r\n    this.httpClient = httpClient;\r\n    this.beBaseUrl = beBaseUrl;\r\n    this.beCreateSessionUrl = `${beBaseUrl}/service/createsession`;\r\n    this.beCloseSessionUrl = `${beBaseUrl}/service/closesession`;\r\n    this.beSessionExisted$ = new BehaviorSubject<boolean>(this.beSessionExisted);\r\n  }\r\n\r\n  public abstract getSessionId(): Observable<string>;\r\n  public abstract setSessionId(sessionId): void;\r\n  public abstract clearSessionId(): void;\r\n  public abstract handleRequestHeaders(headers: HttpHeaders): HttpHeaders;\r\n  public abstract handleReponseHeaders(headers: HttpHeaders): void;\r\n  protected abstract getSessionStorageKey(): string;\r\n\r\n  /**\r\n   * 获取框架SessionId\r\n   */\r\n  public getFrameworkSessionId() {\r\n    return this.frmSessionId;\r\n  }\r\n\r\n  /**\r\n   * 从缓存中获取BeSession\r\n   */\r\n  protected getSessionIdFromStorage() {\r\n    const sessionStorageKey = this.getSessionStorageKey();\r\n    const beSessionId = this.storageStrategy.getItem(sessionStorageKey);\r\n    return beSessionId;\r\n  }\r\n\r\n  /**\r\n   * 创建BeSessionId\r\n   */\r\n  protected createSession(): Observable<string> {\r\n    const requestConfig: HttpRequestConfig = {\r\n      responseType: 'text',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const frmSessionId = this.frmSessionId;\r\n    if (frmSessionId) {\r\n      requestConfig.headers = BefHttpUtil.appendSessionId(requestConfig.headers, this.frmSessionId);\r\n      requestConfig.headers = BefHttpUtil.appendCafRuntimeCommonVariable(requestConfig.headers, this.frmSessionId);\r\n    }\r\n    //创建前判断当前的frmsessionid是不是在当前会话下被清除过\r\n    const ClearItOnce = window.sessionStorage.getItem(\"ClearItOnce\");\r\n    if ('true' !== ClearItOnce  && frmSessionId) {\r\n      return this.clear(frmSessionId).pipe(\r\n        switchMap(() => {\r\n          window.sessionStorage.setItem(\"ClearItOnce\", 'true');\r\n          return this.httpClient.post(this.beCreateSessionUrl, null, requestConfig).pipe(\r\n            tap((beSessionId: string) => {\r\n              this.setSessionId(beSessionId);\r\n              this.setBesessionExisted(true);\r\n            })\r\n          );\r\n\r\n        })\r\n      )\r\n    }\r\n\r\n    return this.httpClient.post(this.beCreateSessionUrl, null, requestConfig).pipe(\r\n      tap((beSessionId: string) => {\r\n        this.setSessionId(beSessionId);\r\n        this.setBesessionExisted(true);\r\n      })\r\n    );\r\n  }\r\n\r\n  clear(formToken) {\r\n    const subject = new Subject();\r\n    if (formToken && window['frmMobileService']) {\r\n      window['frmMobileService'].rtf.func.clearState({ formToken }, () => { subject.next(true) },)\r\n    }\r\n    return subject;\r\n  }\r\n\r\n  test() {\r\n    const requestConfig: HttpRequestConfig = {\r\n      responseType: 'text',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    if (this.frmSessionId) {\r\n      requestConfig.headers = BefHttpUtil.appendSessionId(requestConfig.headers, this.frmSessionId);\r\n      requestConfig.headers = BefHttpUtil.appendCafRuntimeCommonVariable(requestConfig.headers, this.frmSessionId);\r\n    }\r\n\r\n    return this.httpClient.post(this.beCreateSessionUrl, null, requestConfig).pipe(\r\n      tap((beSessionId: string) => {\r\n        this.setSessionId(beSessionId);\r\n        this.setBesessionExisted(true);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 关闭BeSessionId\r\n   */\r\n  protected closeOldSession(): Observable<boolean> {\r\n    if (!this.oldBeSessionId) {\r\n      return of(true);\r\n    }\r\n\r\n    const requestConfig: HttpRequestConfig = {\r\n      responseType: 'text',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    // headers处理\r\n    requestConfig.headers = BefHttpUtil.appendCafRuntimeContext(requestConfig.headers, this.oldBeSessionId);\r\n    requestConfig.headers = BefHttpUtil.appendSessionId(requestConfig.headers, this.oldBeSessionId);\r\n    if (this.frmSessionId) {\r\n      requestConfig.headers = BefHttpUtil.appendCafRuntimeCommonVariable(requestConfig.headers, this.frmSessionId);\r\n    }\r\n\r\n    // 无论是否成功，统一置空cleardBeSessionId\r\n    return this.httpClient.post(this.beCloseSessionUrl, null, requestConfig).pipe(\r\n      tap(\r\n        () => {\r\n          this.oldBeSessionId = null;\r\n          return of(true);\r\n        },\r\n        () => {\r\n          this.oldBeSessionId = null;\r\n          return of(true);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 设置BeSession存在状态，并发出通知\r\n   */\r\n  protected setBesessionExisted(beSessionExisted: boolean) {\r\n    if (this.beSessionExisted === beSessionExisted) {\r\n      return;\r\n    }\r\n    this.beSessionExisted = beSessionExisted;\r\n    this.beSessionExisted$.next(beSessionExisted);\r\n  }\r\n\r\n  /**\r\n   * 获取BeSession是否存在状态\r\n   */\r\n  public getBeSessionExisted(): Observable<boolean> {\r\n    return this.beSessionExisted$;\r\n  }\r\n\r\n}\r\n\r\nexport { BefSessionHandlingStrategy };\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { HttpHeaders, HttpClient } from '@farris/mobile-devkit';\r\n\r\nimport { BefHttpUtil, BefEnvUtil } from '../../utils/index';\r\nimport { FrameworkSessionService } from '../../framework_session_service';\r\nimport { BeSessionStorageStrategy } from '../storage-strategies/index';\r\nimport { BefSessionHandlingStrategy } from './handling_strategy';\r\n\r\n/**\r\n * 隔离的BeSession处理策略\r\n */\r\nclass BefSeparatedSessionHandlingStrategy extends BefSessionHandlingStrategy {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(\r\n    storageStrategy: BeSessionStorageStrategy,\r\n    frmSessionService: FrameworkSessionService,\r\n    httpClient: HttpClient,\r\n    beBaseUrl: string\r\n  ) {\r\n    super(storageStrategy, frmSessionService, httpClient, beBaseUrl);\r\n  }\r\n\r\n  /**\r\n   * 获取BeSessionId\r\n   */\r\n  public getSessionId(): Observable<string> {\r\n    const beSessionId = this.getSessionIdFromStorage();\r\n    let beSessionId$: Observable<string>;\r\n    if (beSessionId) {\r\n      beSessionId$ =  of(beSessionId);\r\n      this.setBesessionExisted(true);\r\n    } else {\r\n      beSessionId$ = this.createSession();\r\n    }\r\n\r\n    const result$ = this.closeOldSession().pipe(\r\n      switchMap(() => {\r\n        return beSessionId$;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n\r\n  }\r\n\r\n  /**\r\n   * 设置BeSessionId\r\n   */\r\n  public setSessionId(sessionId: string): void {\r\n    const sessionKey = this.getSessionStorageKey();\r\n    this.storageStrategy.setItem(sessionKey, sessionId);\r\n  }\r\n\r\n  /**\r\n   * 清空BeSessionId\r\n   */\r\n  public clearSessionId() {\r\n    if (BefEnvUtil.isInFramework() === true) {\r\n      this.storageStrategy.removeItemsByScope(this.frmSessionId);\r\n    } else {\r\n      const sessionKey = this.getSessionStorageKey();\r\n      this.oldBeSessionId = this.getSessionIdFromStorage();\r\n      this.storageStrategy.removeItem(sessionKey);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 扩展BeSessionId相关头信息\r\n   */\r\n  public handleRequestHeaders(headers: HttpHeaders): HttpHeaders {\r\n    const frmSessionId = this.getFrameworkSessionId();\r\n    const beSessionId = this.getSessionIdFromStorage();\r\n\r\n    if (frmSessionId) {\r\n      headers = BefHttpUtil.appendCafRuntimeCommonVariable(headers, frmSessionId);\r\n    }\r\n\r\n    if (beSessionId) {\r\n      headers = BefHttpUtil.appendCafRuntimeContext(headers, beSessionId);\r\n      headers = BefHttpUtil.appendSessionId(headers, beSessionId);\r\n    }\r\n\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * 处理服务器端返回的headers\r\n   */\r\n  public handleReponseHeaders(headers: any): void {\r\n  }\r\n\r\n  /**\r\n   * 获取某个Repository对应的BeSession的唯一key\r\n   */\r\n  protected getSessionStorageKey(): string {\r\n    return `${this.frmSessionId}_${this.beBaseUrl}`;\r\n  }\r\n\r\n}\r\n\r\nexport { BefSeparatedSessionHandlingStrategy };\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\nimport { HttpClient } from '@farris/mobile-devkit';\r\nimport { FrameworkSessionService } from '../../framework_session_service';\r\nimport { BefHttpUtil } from '../../utils/index';\r\nimport { BeSessionStorageStrategy } from '../storage-strategies/index';\r\nimport { BefSessionHandlingStrategy } from './handling_strategy';\r\n\r\n\r\n/**\r\n * 统一的Session处理策略\r\n * @todo\r\n * 1、目前Session其实还是隔离的，因为使用了beBaseUrl做了缓存；\r\n * 2、将来框架token问题解决了之后，使用token或者表单基url做缓存key；\r\n * 3、基于2缓存之后，如何closeSession，成为问题，除非appAcontext是一颗树，只有根AppContext初始化的时候，才去closeSession。\r\n */\r\nclass BefUnifiedSessionHandlingStrategy extends BefSessionHandlingStrategy {\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(\r\n    storageStrategy: BeSessionStorageStrategy,\r\n    frmSessionService: FrameworkSessionService,\r\n    httpClient: HttpClient,\r\n    beBaseUrl: string\r\n  ) {\r\n    super(storageStrategy, frmSessionService, httpClient, beBaseUrl);\r\n    this.beCloseSessionUrl = `${beBaseUrl}/service/closesession`;\r\n  }\r\n\r\n  /**\r\n   * 获取BeSession\r\n   */\r\n  public getSessionId(): Observable<string> {\r\n    const sessionKey = this.getSessionStorageKey();\r\n    const sessionId = this.storageStrategy.getItem(sessionKey);\r\n    const beSessionId$ =  of(sessionId);\r\n\r\n    const result$ = this.closeOldSession().pipe(\r\n      switchMap(() => {\r\n        return beSessionId$;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 设置BeSessionId\r\n   */\r\n  public setSessionId(sessionId: string): void {\r\n    const sessionKey = this.getSessionStorageKey();\r\n    this.storageStrategy.setItem(sessionKey, sessionId);\r\n  }\r\n\r\n  /**\r\n   * 清空Sessionid\r\n   */\r\n  public clearSessionId() {\r\n    const sessionKey = this.getSessionStorageKey();\r\n    this.oldBeSessionId = this.getSessionIdFromStorage();\r\n    this.storageStrategy.removeItem(sessionKey);\r\n  }\r\n\r\n  /**\r\n   * 扩展Session相关头信息\r\n   */\r\n  public handleRequestHeaders(headers: any): any {\r\n    const frmSessionId = this.getFrameworkSessionId();\r\n    if (frmSessionId) {\r\n      headers = BefHttpUtil.appendCafRuntimeCommonVariable(headers, frmSessionId);\r\n    }\r\n\r\n    const beSessionId = this.getSessionIdFromStorage();\r\n    if (beSessionId) {\r\n      headers = BefHttpUtil.appendCafRuntimeContext(headers, beSessionId);\r\n    }\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * 处理服务器端返回的headers\r\n   */\r\n  public handleReponseHeaders(headers: any): void {\r\n    const beSessionId = headers['befsessionid'];\r\n    const oldBeSessionId = this.getSessionId();\r\n    if (beSessionId && beSessionId !== oldBeSessionId) {\r\n      this.setSessionId(beSessionId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取某个Repository对应的BeSession的唯一key\r\n   */\r\n  protected getSessionStorageKey(): string {\r\n    return this.beBaseUrl;\r\n  }\r\n\r\n}\r\n\r\nexport { BefUnifiedSessionHandlingStrategy };\r\n","\r\n/**\r\n * BeSession缓存\r\n */\r\ninterface BeSessionStorageStrategy {\r\n  getItem(beSessionKey: string): string;\r\n  setItem(beSessionKey: string, beSessionid: string): void;\r\n  removeItem(beSessionKey: string): void;\r\n  removeItemsByScope(beSessionScope: string): void;\r\n  clear(): void;\r\n}\r\n\r\nexport { BeSessionStorageStrategy };\r\n\r\n","import { BeSessionStorageStrategy } from './storage_strategy';\r\n\r\n/**\r\n * 基于浏览器SessionStorage的BeSession缓存\r\n * @summary\r\n * 1、SeparatedSession模式下：\r\n *  {\r\n *    BE_SESSION_ID: {\r\n *      frmSessionId1_beSessionUri1: beSessionId-1,\r\n *      frmSessionId2_beSessionUri2: beSessionId-2,\r\n *    }\r\n *  }\r\n * 2、UnifiedSession模式下（在Debug状态，同模式1）：\r\n * {\r\n *    BE_SESSION_ID: {\r\n *      frmSessionId1: beSessionId-1,\r\n *      frmSessionId2: beSessionId-2,\r\n *    }\r\n *  }\r\n */\r\nclass SessionStorageBeSessionStorageStrategy implements BeSessionStorageStrategy {\r\n\r\n  /**\r\n   * 缓存Token\r\n   */\r\n  private sessionStorageKey = 'BE_SESSION_ID';\r\n\r\n  /**\r\n   * 获取值\r\n   */\r\n  public getItem(beSessionKey: string): string {\r\n    const beSessions = this.getAllBeSessions();\r\n    return beSessions[beSessionKey];\r\n  }\r\n\r\n  /**\r\n   * 设置值\r\n   */\r\n  public setItem(beSessionKey: string, beSessionId: string) {\r\n    const beSessions = this.getAllBeSessions();\r\n    beSessions[beSessionKey] = beSessionId;\r\n    this.setAllBeSessions(beSessions);\r\n  }\r\n\r\n  /**\r\n   * 删除值\r\n   */\r\n  public removeItem(beSessionKey: string) {\r\n    const beSessions = this.getAllBeSessions();\r\n    if (beSessions[beSessionKey]) {\r\n      delete beSessions[beSessionKey];\r\n    }\r\n    this.setAllBeSessions(beSessions);\r\n  }\r\n\r\n  /**\r\n   * 根据scope删除值\r\n   */\r\n  public removeItemsByScope(beSessionScope: string) {\r\n    const beSessions = this.getAllBeSessions();\r\n    Object.keys(beSessions).forEach((beSessionKey: string) => {\r\n      if (beSessionKey.startsWith(beSessionScope) === true) {\r\n        delete beSessions[beSessionKey];\r\n      }\r\n    });\r\n    this.setAllBeSessions(beSessions);\r\n  }\r\n\r\n  /**\r\n   * 清空所有会话\r\n   */\r\n  public clear(): void {\r\n    window.sessionStorage.removeItem(this.sessionStorageKey);\r\n  }\r\n\r\n  /**\r\n   * 从SessionStorage中获取全部BeSessions\r\n   */\r\n  private getAllBeSessions(): any {\r\n    const beSessionsJson = window.sessionStorage.getItem(this.sessionStorageKey);\r\n    if (!beSessionsJson) {\r\n      return {};\r\n    }\r\n    return JSON.parse(beSessionsJson);\r\n  }\r\n\r\n  /**\r\n   * 设置全部BeSessions到SessionStorage\r\n   */\r\n  setAllBeSessions(beSessions: any): void {\r\n    const beSessionsString = JSON.stringify(beSessions);\r\n    window.sessionStorage.setItem(this.sessionStorageKey, beSessionsString);\r\n  }\r\n}\r\n\r\nexport { SessionStorageBeSessionStorageStrategy };","import { HttpClient } from '@farris/mobile-devkit';\r\nimport { FrameworkSessionService } from '../../framework_session_service';\r\nimport { BeSessionStorageStrategy, SessionStorageBeSessionStorageStrategy } from '../storage-strategies/index';\r\nimport { BefSessionHandlingStrategy } from './handling_strategy';\r\nimport { BefSeparatedSessionHandlingStrategy } from './separated_handling_strategy';\r\nimport { BefUnifiedSessionHandlingStrategy } from './unified_handling_strategy';\r\n\r\n\r\n/**\r\n * BeSession处理策略工厂\r\n */\r\nclass BefSessionHandlingStrategyFactory {\r\n\r\n  /**\r\n   * 创建BeSession处理策略\r\n   */\r\n  public create(\r\n    handlingStrategyName: string,\r\n    frmSessionService: FrameworkSessionService,\r\n    beBaseUrl: string,\r\n    httpClient: HttpClient\r\n  ): BefSessionHandlingStrategy {\r\n\r\n    const storageStrategy = this.createStorageStrategy();\r\n\r\n    if (handlingStrategyName === 'UnifiedSession') {\r\n      return new BefUnifiedSessionHandlingStrategy(storageStrategy, frmSessionService, httpClient, beBaseUrl);\r\n    } else {\r\n      return new BefSeparatedSessionHandlingStrategy(storageStrategy, frmSessionService, httpClient, beBaseUrl);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建BeSession缓存策略\r\n   */\r\n  private createStorageStrategy(): BeSessionStorageStrategy {\r\n    return new SessionStorageBeSessionStorageStrategy();\r\n  }\r\n\r\n}\r\n\r\nexport { BefSessionHandlingStrategyFactory };\r\n\r\n\r\n","import { Observable } from 'rxjs';\r\nimport { BefSessionHandlingStrategy } from './handling-strategies/index';\r\n\r\n/**\r\n * BefSessionService\r\n */\r\nclass BefSessionService {\r\n\r\n  /**\r\n   * Session处理策略类\r\n   */\r\n  private handlingStrategy: BefSessionHandlingStrategy;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(handlingStrategy: BefSessionHandlingStrategy) {\r\n    this.handlingStrategy = handlingStrategy;\r\n  }\r\n  /**\r\n   * 获取token\r\n   */\r\n  public get token() {\r\n    return this.handlingStrategy.getFrameworkSessionId();\r\n  }\r\n\r\n  /**\r\n   * 获取BeSessionId\r\n   */\r\n  public getBeSessionId(): Observable<string> {\r\n    return this.handlingStrategy.getSessionId();\r\n  }\r\n\r\n  /**\r\n   * 获取BeSession是否存在状态\r\n   */\r\n  public getBeSessionExisted(): Observable<boolean> {\r\n    return this.handlingStrategy.getBeSessionExisted();\r\n  }\r\n\r\n  /**\r\n   * 设置sessionId\r\n   * @param sessionId sessionId\r\n   */\r\n  public setBeSessionId(sessionId: string) {\r\n    this.handlingStrategy.setSessionId(sessionId);\r\n  }\r\n\r\n  /**\r\n   * 清空BeSessionId\r\n   */\r\n  public clearBeSessionId() {\r\n    this.handlingStrategy.clearSessionId();\r\n  }\r\n\r\n  /**\r\n   * 扩展请求header\r\n   */\r\n  public extendRequestHeaders(headers: any): any {\r\n    return this.handlingStrategy.handleRequestHeaders(headers);\r\n  }\r\n\r\n  /**\r\n   * 处理响应header\r\n   */\r\n  public handleResponseHeaders(headers: any): void {\r\n    return this.handlingStrategy.handleReponseHeaders(headers);\r\n  }\r\n}\r\n\r\nexport { BefSessionService };\r\n","import { Observable } from 'rxjs';\r\nimport { switchMap, map, catchError, tap } from 'rxjs/operators';\r\nimport { HttpHeaders, HttpParams, HttpMethod, HttpMethods, HttpRequestConfig, HttpResponse, HttpClient } from '@farris/mobile-devkit';\r\n\r\nimport { RequestInfo, ResponseInfo, ChangeDetail } from './types';\r\nimport { IProxyExtend } from './bef_proxy_extend';\r\nimport { BefDataPathUtil } from './utils/index';\r\n\r\n\r\n/**\r\n * Bef API代理类\r\n */\r\nexport abstract class BefProxy {\r\n\r\n  /**\r\n   * API基路径\r\n   * @summary\r\n   * 延迟到实现类确定，考虑使用注解指定。\r\n   */\r\n  public abstract baseUrl: string;\r\n\r\n\r\n  public associatedUrlMap: Map<string, string>;\r\n\r\n  /**\r\n   * 代理扩展\r\n   */\r\n  protected proxyExtend: IProxyExtend;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(public httpClient: HttpClient) {\r\n    this.associatedUrlMap = new Map();\r\n  }\r\n\r\n  // 记录附件取跨Be url\r\n  setAssociatedUrl(url){\r\n    this.associatedUrlMap.set(url,url)\r\n  }\r\n  /**\r\n   * 设置扩展策略\r\n   */\r\n  public setProxyExtend(proxyExtend: IProxyExtend) {\r\n    this.proxyExtend = proxyExtend;\r\n  }\r\n\r\n  /**\r\n   * 查询\r\n   */\r\n  public query(entityFilter?: any): Observable<any> {\r\n    const url = this.baseUrl;\r\n    const params: HttpParams = {};\r\n    if (entityFilter) {\r\n      const entityFilterString = JSON.stringify(entityFilter);\r\n      params.entityFilter = entityFilterString;\r\n    }\r\n    const requestConfig: HttpRequestConfig = {\r\n      params: params\r\n    };\r\n    return this.request(HttpMethods.GET, url, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 列表数据查询（扩展）\r\n   */\r\n  public extendQuery(entityFilter: any): Observable<ResponseInfo> {\r\n    const url = `${this.baseUrl}/extension/query`;\r\n    const params: HttpParams = {};\r\n    if (entityFilter) {\r\n      const entityFilterString = JSON.stringify(entityFilter);\r\n      params.entityFilter = entityFilterString;\r\n    }\r\n    const requestConfig: HttpRequestConfig = {\r\n      params: params\r\n    };\r\n    return this.request(HttpMethods.PUT, url, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 单条数据检索\r\n   */\r\n  public retrieve(id: string): Observable<any> {\r\n    const url = `${this.baseUrl}/${id}`;\r\n    return this.request(HttpMethods.GET, url);\r\n  }\r\n\r\n  /**\r\n   * 单条数据检索（扩展）\r\n   */\r\n  public extendRetrieve(id: string): Observable<ResponseInfo> {\r\n    const url = `${this.baseUrl}/extension/retrieve/${id}`;\r\n    return this.request(HttpMethods.PUT, url);\r\n  }\r\n\r\n  /**\r\n   * 单条数据检索（加锁）\r\n   */\r\n  public edit(id: string): Observable<ResponseInfo> {\r\n    const url = `${this.baseUrl}/service/edit/${id}`;\r\n    return this.request(HttpMethods.PUT, url);\r\n  }\r\n\r\n  /**\r\n   * 新增数据\r\n   */\r\n  public create(defaultValue?: any, requestInfo?: RequestInfo): Observable<any> {\r\n    const body = {\r\n      defaultValue,\r\n      requestInfo: requestInfo,\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: body\r\n    };\r\n    return this.request(HttpMethods.POST, this.baseUrl, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 新增从表数据\r\n   * @path 新增路径（从表形如：/1/edus，从从表形如：/1/edus/11/grades）\r\n   */\r\n  public createByPath(fpath: string): Observable<any> {\r\n    const pathUrl = BefDataPathUtil.convertPathToUrl(fpath);\r\n    const url = `${this.baseUrl}${pathUrl}`;\r\n    return this.request(HttpMethods.POST, url);\r\n  }\r\n\r\n  /**\r\n   * 提交变更\r\n   */\r\n  update(changeDetail: ChangeDetail): Observable<any> {\r\n    const body = {\r\n      changeDetail\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: body\r\n    };\r\n\r\n    return this.request(HttpMethods.PATCH, this.baseUrl, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 执行保存\r\n   */\r\n  public save(): Observable<any> {\r\n    return this.request( HttpMethods.PUT, this.baseUrl);\r\n  }\r\n\r\n  /**\r\n   * 删除\r\n   */\r\n  public delete(id: string): Observable<any> {\r\n    const url = `${this.baseUrl}/${id}`;\r\n    return this.request(HttpMethods.DELETE, url);\r\n  }\r\n\r\n  /**\r\n   * 删除（扩展）\r\n   */\r\n  public extendDelete(id: string): Observable<any> {\r\n    const url = `${this.baseUrl}/extension/delete/${id}`;\r\n    return this.request(HttpMethods.PUT, url);\r\n  }\r\n\r\n  /**\r\n   * 删除并保存\r\n   */\r\n  public deleteAndSave(id: any): Observable<any> {\r\n    const url = `${this.baseUrl}/service/delete/${id}`;\r\n    const requestConfig: HttpRequestConfig = {};\r\n    return this.request(HttpMethods.PUT, url, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 删除后代\r\n   */\r\n  public deletByPath(fpath: string, id: string): Observable<any> {\r\n    const pathUrl = BefDataPathUtil.convertPathToUrl(fpath);\r\n    const url = `${this.baseUrl}${pathUrl}/${id}`;\r\n    return this.request(HttpMethods.DELETE, url);\r\n  }\r\n\r\n  /**\r\n   * 删除后代（扩展）\r\n   */\r\n  public extendDeletByPath(fpath: string, id: string): Observable<any> {\r\n    const pathUrl = BefDataPathUtil.convertPathToUrl(fpath);\r\n    const url = `${this.baseUrl}/extension${pathUrl}/${id}`;\r\n    return this.request(HttpMethods.PUT, url);\r\n  }\r\n\r\n  /**\r\n   * 批量删除\r\n   * @param ids 待删除的id数组\r\n   */\r\n  public batchDelete(ids: string[]): Observable<any> {\r\n    const params = {\r\n      ids: ids.join(',')\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      params: params\r\n    };\r\n    return this.request(HttpMethods.DELETE, this.baseUrl, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 批量删除（扩展）\r\n   */\r\n  public extendBatchDelete(ids: string[]): Observable<any> {\r\n    const url = `${this.baseUrl}/extension/batchdelete`;\r\n    const params = {\r\n      ids: ids.join(',')\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      params: params\r\n    };\r\n    return this.request(HttpMethods.PUT, url, requestConfig);\r\n  }\r\n\r\n  /**\r\n   * 取消\r\n   */\r\n  public cancel(): Observable<any> {\r\n    const url = `${this.baseUrl}/service/cancel`;\r\n    return this.request(HttpMethods.POST, url);\r\n  }\r\n\r\n  /**\r\n   * 调用httpclient取数\r\n   * @param url url\r\n   * @param method methods\r\n   * @param requestConfigs options\r\n   */\r\n  public request(method: HttpMethod, url: string,  requestConfigs?: HttpRequestConfig, ignoreHandlingChanges = false) {\r\n\r\n    requestConfigs = requestConfigs || {};\r\n\r\n    // 扩展body\r\n    if (ignoreHandlingChanges !== true) {\r\n      if (method === HttpMethods.POST || method === HttpMethods.PUT || method === HttpMethods.PATCH) {\r\n        const body = requestConfigs.body || {};\r\n        requestConfigs.body = this.proxyExtend.extendBody(body);\r\n      }\r\n    }\r\n\r\n    // 扩展headers\r\n    const headers$ = this.proxyExtend.extendHeaders(requestConfigs.headers);\r\n\r\n    // 发送请求\r\n    return headers$.pipe(\r\n      switchMap((headers: HttpHeaders) => {\r\n        requestConfigs.headers = headers;\r\n        requestConfigs.observe = 'response';\r\n        return this.httpClient.request(method, url, requestConfigs).pipe(\r\n            map((result: any) => {\r\n              if (ignoreHandlingChanges === true) {\r\n                return result && result.body  && result.body.returnValue ? result.body.returnValue : result;\r\n              } else {\r\n                return  this.proxyExtend.onResponse(result);\r\n              }\r\n            }),\r\n            catchError((error: any) => {\r\n              return this.proxyExtend.onError(error, false, false);\r\n            })\r\n          );\r\n      }),\r\n      catchError((error: any) => {\r\n        return this.proxyExtend.onError(error, false, false);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Type, makeDecorator, makePropDecorator } from '@farris/mobile-devkit';\r\n\r\n\r\n/**\r\n * 变量元数据名称\r\n */\r\nexport const VARIABLE_PROP_META = '@farris/bef VARIABLE_PROP_META';\r\n\r\n\r\n/**\r\n * NgVariable元数据接口\r\n */\r\nexport interface VariablePropMetadata {\r\n\r\n  /**\r\n   * 变量影射\r\n   */\r\n  mapping: string;\r\n\r\n}\r\n\r\n\r\n/**\r\n * NgVariable装饰器工厂接口\r\n */\r\nexport interface VariablePropDecorator {\r\n  (obj?: VariablePropMetadata): any;\r\n  new(obj?: VariablePropMetadata): any;\r\n}\r\n\r\n\r\n/**\r\n * NgVariable装饰工厂的工厂\r\n */\r\nexport const VariablePropMeta: VariablePropDecorator =\r\n  makePropDecorator(VARIABLE_PROP_META, (obj: VariablePropMetadata) => obj);\r\n","/*\r\n * @Author: Witt\r\n * @Date: 2019-03-07 17:24:38\r\n * @Last Modified by:   Witt\r\n * @Last Modified time: 2019-03-07 17:24:38\r\n */\r\n\r\nimport { Entity, EntityCollection, EntityManager } from '@farris/mobile-devkit';\r\nimport { ChangeDetail} from './types';\r\nimport { BefChangeBuilder } from './bef_change_builder';\r\nimport { BefChangeHandler } from './bef_change_handler';\r\n\r\n\r\n/**\r\n * 实体管理类：管理Entity和\r\n * @todo\r\n * 1、实体管理应该放在Devkit中；\r\n * 2、目前只是简单代码拆分，待进一步明确职责。\r\n */\r\nclass BefEntityManager<T extends Entity> extends EntityManager<T> {\r\n\r\n  /**\r\n   * ChangeDetail构造器\r\n   */\r\n  public changeBuilder: BefChangeBuilder;\r\n\r\n  /**\r\n   * ChangeDetail处理器\r\n   */\r\n  public changeHandler: BefChangeHandler;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(entityCollection: EntityCollection<T>) {\r\n    super(entityCollection);\r\n    this.changeBuilder = new BefChangeBuilder(this.entityCollection.entityType, this.entityCollection);\r\n    this.changeHandler = new BefChangeHandler();\r\n  }\r\n\r\n  /**\r\n   * 获取数据变更\r\n   */\r\n  public buildAllEntityChangeDetails(): ChangeDetail[] {\r\n    const changeDetails: ChangeDetail[] = [];\r\n    const entities = this.entityCollection.getAllEntities();\r\n    entities.forEach((entity: Entity) => {\r\n      if (entity.changes.length === 0) {\r\n        return;\r\n      }\r\n      const changeDetail = this.changeBuilder.build(entity.changes);\r\n\r\n      // 防止空id的变更被提交\r\n      // @todo：此处判断应该放到更底层，临时修复Bug。\r\n      if (changeDetail && changeDetail.ChangeInfo && changeDetail.ChangeInfo.DataId) {\r\n        changeDetails.push(changeDetail);\r\n      }\r\n    });\r\n    return changeDetails;\r\n  }\r\n\r\n  /**\r\n   * 获取单个实体\r\n   */\r\n  public buildEntityChangeDetailById(id: string): ChangeDetail {\r\n    const entity = this.entityCollection.getEntityById(id);\r\n    if (entity.changes.length === 0) {\r\n      return null;\r\n    }\r\n    const changeDetail = this.changeBuilder.build(entity.changes);\r\n    return changeDetail;\r\n  }\r\n\r\n  /**\r\n   * 应用数据变更\r\n   */\r\n  public handleDataChangeDetails(changeDetails: ChangeDetail[]): void {\r\n    this.changeHandler.handle(this.entityType, this.entityCollection, changeDetails);\r\n  }\r\n\r\n  // #endregion\r\n\r\n  /**\r\n   * 清空所有实体\r\n   */\r\n  public reset() {\r\n    this.entityCollection.clear();\r\n  }\r\n\r\n}\r\n\r\nexport { BefEntityManager };\r\n","import { format } from 'date-fns';\r\nimport { AppContext, UIState, Injector } from '@farris/mobile-devkit';\r\nimport { ChangeDetailType, ChangeDetail } from './types';\r\nimport { VariablePropMetadata } from './decorators';\r\nimport { BefChangeUtil } from './utils/index';\r\n\r\n/**\r\n * Be变量管理器\r\n */\r\nclass BefVariableManager {\r\n\r\n  /**\r\n   * 变量元数据\r\n   */\r\n  private ngVariableMap: Map<string, VariablePropMetadata>;\r\n\r\n  /**\r\n   * 最近向服务器端同步的变量值\r\n   */\r\n  private lastSyncValuesMap: Map<string, any>;\r\n\r\n  /**\r\n   * 当前最新的变量值\r\n   */\r\n  private latestVariableValues: Map<string, string>;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(private ngVariables: any) {\r\n\r\n    this.ngVariableMap = new Map<string, VariablePropMetadata>();\r\n    this.lastSyncValuesMap = new Map<string, any>();\r\n    this.latestVariableValues = new Map<string, any>();\r\n\r\n    // 重新组织变量元数据\r\n    Object.keys(this.ngVariables).forEach((propName: string) => {\r\n      this.ngVariableMap.set(propName, ngVariables[propName]);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置变量值\r\n   */\r\n  public setValue(name: string, value: any) {\r\n    if (this.ngVariableMap.has(name) === false) {\r\n      throw new Error(`不存在名为${name}的变量`);\r\n    }\r\n    this.latestVariableValues.set(name, value);\r\n  }\r\n\r\n  /**\r\n   * 获取变量值\r\n   */\r\n  public getValue(name: string): any {\r\n    if (this.ngVariableMap.has(name) === false) {\r\n      throw new Error(`不存在名为${name}的变量`);\r\n    }\r\n    this.latestVariableValues.get(name);\r\n  }\r\n\r\n  /**\r\n   * 处理服务器端返回的变量变更\r\n   */\r\n  public handleChangeDetail(changeDetail: ChangeDetail): void {\r\n  }\r\n\r\n  /**\r\n   * Build ChangeDetail instance for all variables.\r\n   */\r\n  public buildChangeDetail(): ChangeDetail {\r\n    const changeDetail = BefChangeUtil.createEmpty(ChangeDetailType.Modify);\r\n    this.ngVariableMap.forEach((ngVariable: VariablePropMetadata, varName: string) => {\r\n      const newValue = this.latestVariableValues.get(varName);\r\n      const oldValue = this.lastSyncValuesMap.get(varName);\r\n      if (this.isValueEqual(newValue, oldValue) === false) {\r\n        this.lastSyncValuesMap.set(varName, newValue);\r\n        this.appendToChangeInfo(changeDetail, varName, newValue);\r\n      }\r\n    });\r\n\r\n    if (Object.keys(changeDetail.ChangeInfo).length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return changeDetail;\r\n  }\r\n\r\n  /**\r\n   * Clear variable values cached in the innerValueMap property.\r\n   */\r\n  public reset() {\r\n    this.lastSyncValuesMap.clear();\r\n    this.latestVariableValues.clear();\r\n  }\r\n\r\n  /**\r\n   * Append changed variable to ChangeDetail instance.\r\n   */\r\n  private appendToChangeInfo(changeDetail: ChangeDetail, varName: string, varValue: any): void {\r\n    if (this.isUdtVariable(varValue) === true) {\r\n      const udtVarChangeDetail = BefChangeUtil.createEmpty(ChangeDetailType.Modify);\r\n      udtVarChangeDetail.ChangeInfo = varValue;\r\n      changeDetail.ChangeInfo[varName] = udtVarChangeDetail;\r\n    } else {\r\n      changeDetail.ChangeInfo[varName] = varValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 值比较\r\n   * @todo 临时采用这种方式\r\n   */\r\n  private isValueEqual(srcValue: any, dstValue: any): boolean {\r\n    return JSON.stringify(srcValue) === JSON.stringify(dstValue);\r\n  }\r\n\r\n  /**\r\n   * Check if the object is a plain object\r\n   */\r\n  private isUdtVariable(obj: any): boolean {\r\n    return obj && obj.constructor &&\r\n      obj.toString() === '[object Object]' &&\r\n      obj.constructor.prototype.hasOwnProperty('isPrototypeOf');\r\n  }\r\n\r\n}\r\n\r\nexport { BefVariableManager };\r\n","import { Observable, of, zip, EMPTY } from 'rxjs';\r\nimport { tap, map, switchMap } from 'rxjs/operators';\r\nimport { Entity, DataChangeType, } from '@farris/mobile-devkit';\r\n\r\nimport { QueryResult } from './types';\r\nimport { BefRepository } from './bef_repository';\r\nimport { BefProxy } from './bef_proxy';\r\n\r\n/**\r\n * Bef数据访问服务\r\n */\r\nclass BefDataService<T extends Entity> {\r\n\r\n  /**\r\n   * 实体仓库\r\n   */\r\n  private repository: BefRepository<T>;\r\n\r\n  /**\r\n   * Api代理类\r\n   */\r\n  private get apiProxy(): BefProxy {\r\n    return this.repository.apiProxy;\r\n  }\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(repository: BefRepository<T>) {\r\n    this.repository = repository;\r\n  }\r\n\r\n  /**\r\n   * 获取实体集合\r\n   */\r\n  public getList(filter: any[], sort: any[], pageSize: number | null, pageIndex: number | null): Observable<T[]> {\r\n    const entityFilter = this.buildEntityFilter(filter, sort, pageSize, pageIndex);\r\n    const query$ = this.apiProxy.extendQuery(entityFilter);\r\n    const result$ = query$.pipe(\r\n      map((returnValue: any) => {\r\n        this.repository.setPaginationInfo((returnValue as QueryResult).pagination)\r\n        const listData = (returnValue as QueryResult).result;\r\n        const entities = this.repository.buildEntities(listData);\r\n        if (this.determineIsAppend(pageIndex)) {\r\n          this.repository.entityCollection.addEntities(entities);\r\n        } else {\r\n          this.repository.entityCollection.loadEntities(entities);\r\n        }\r\n        return entities;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 根据当前页判断是否追加\r\n   */\r\n  determineIsAppend(pageIndex: number): boolean {\r\n    return pageIndex > 1\r\n  }\r\n\r\n  /**\r\n   * 获取单个实体\r\n   */\r\n  public getById(id: string): Observable<T> {\r\n    const retrieve$ = this.apiProxy.extendRetrieve(id);\r\n    const result$ = retrieve$.pipe(\r\n      map((returnValue: any) => {\r\n        const entityData = returnValue;\r\n        const entity = this.repository.buildEntity(entityData);\r\n        this.repository.entityCollection.loadEntities([entity]);\r\n        return entity;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 更新并对实体加锁\r\n   */\r\n  public editById(id: string): Observable<T> {\r\n    const entity = this.repository.entityCollection.getEntityById(id);\r\n    if (!entity) {\r\n      return of(null);\r\n    }\r\n\r\n    const retrieve$ = this.apiProxy.edit(id);\r\n    const result$ = retrieve$.pipe(\r\n      map((returnValue: any) => {\r\n        const entityData = returnValue.data;\r\n        const entityToUpdate = this.repository.entityCollection.getEntityById(id);\r\n        if (entityToUpdate && entityData) {\r\n          this.reloadEntityData(entityToUpdate, entityData);\r\n        }\r\n        return entityToUpdate;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 根据id更新实体\r\n   * @param id 实体id\r\n   */\r\n  public updateById(id: string): Observable<T> {\r\n    const entity = this.repository.entityCollection.getEntityById(id);\r\n    if (!entity) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const retrieve$ = this.apiProxy.extendRetrieve(id);\r\n    const result$ = retrieve$.pipe(\r\n      map((returnValue: any) => {\r\n        const entityData = returnValue;\r\n        const entityToUpdate = this.repository.entityCollection.getEntityById(id);\r\n        this.reloadEntityData(entityToUpdate, entityData);\r\n        return entityToUpdate;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 重新加载实体数据\r\n   */\r\n  private reloadEntityData(entity: Entity, entityData: any): void {\r\n    if (!entity) {\r\n      return;\r\n    }\r\n    entity.load(entityData);\r\n    entity.changes.splice(0, entity.changes.length);\r\n  }\r\n\r\n  /**\r\n   * 创建新实体，并加载\r\n   */\r\n  public create(defaultValue?: any) {\r\n    const result$ = this.apiProxy.create(defaultValue);\r\n    return result$.pipe(\r\n      map((returnValue: any) => {\r\n        const newEntityData = returnValue;\r\n        const newEntity = this.repository.buildEntity(newEntityData);\r\n        this.repository.entityCollection.loadEntities([newEntity]);\r\n        this.repository.dataChangeHistory.addChange({ dataId: newEntity.primaryValue, changeType: DataChangeType.Add });\r\n        return newEntity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 追加实体\r\n   */\r\n  public append(defaultValue?: any): Observable<T> {\r\n    const append$ = this.apiProxy.create(defaultValue);\r\n    return append$.pipe(\r\n      map((returnValue: any) => {\r\n        const newEntityData = returnValue;\r\n        const newEntity = this.repository.buildEntity(newEntityData);\r\n        this.repository.entityCollection.addEntity(newEntity);\r\n        return newEntity;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 创建子实体，并追加\r\n   * @param fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）\r\n   */\r\n  public appendByPath(fpath: string): Observable<Entity> {\r\n    const append$ = this.apiProxy.createByPath(fpath);\r\n    return append$.pipe(\r\n      map((returnValue: any) => {\r\n        const newEntityData = returnValue;\r\n        const newEntity = this.repository.entityManager.appendEntityByPath(fpath, newEntityData, newEntityData);\r\n        return newEntity;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * 根据id删除实体\r\n   * @param id 内码\r\n   */\r\n  public removeById(id: string, ifSave?: boolean): Observable<boolean> {\r\n\r\n    ifSave = (ifSave === undefined) ? true : ifSave;\r\n    const delete$ = this.apiProxy.extendDelete(id);\r\n\r\n    // 从本地实体集合中移除\r\n    return delete$.pipe(\r\n      switchMap(() => {\r\n        // 执行保存\r\n        if (ifSave === true) {\r\n          return this.applyChangesById(id).pipe(tap(result => {\r\n            if (result) {\r\n              this.repository.entityCollection.removeEntityById(id);\r\n            }\r\n          }));\r\n        } else {\r\n\r\n          // 从实体集合中删除\r\n          this.repository.entityCollection.removeEntityById(id);\r\n          this.repository.dataChangeHistory.addChange({ dataId: id, changeType: DataChangeType.Delete });\r\n          return of(true);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 删除并保存\r\n   * @param id 要删除的实体id\r\n   */\r\n  public removeAndSaveById(id: string) {\r\n    const delete$ = this.apiProxy.deleteAndSave(id);\r\n    const result$ = delete$.pipe(\r\n      switchMap(() => {\r\n        this.repository.entityCollection.removeEntityById(id);\r\n        return of(true);\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 批量删除\r\n   * @param id 内码\r\n   */\r\n  public removeByIds(ids: string[]): Observable<boolean> {\r\n\r\n    // 服务器端删除\r\n    const delete$ = this.apiProxy.extendBatchDelete(ids);\r\n\r\n    // 从本地实体集合中移除\r\n    return delete$.pipe(\r\n      switchMap(() => {\r\n        // 执行保存\r\n        return this.applyChangesByIdArray(ids).pipe(\r\n          tap(result => {\r\n            if (result) {\r\n              // 从实体集合中删除\r\n              this.repository.entityCollection.removeEntities(\r\n                (value) => {\r\n                  return this.checkEntityValueExists(value, ids);\r\n                }\r\n              );\r\n            }\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 检测实体的主键值是否存在于数组中，如果存在返回true\r\n   * @param array 待遍历数组\r\n   */\r\n  private checkEntityValueExists(entity: Entity, primaryValueArray: any[]): boolean {\r\n    let isExistInTargetArray = false;\r\n\r\n    for (let i = 0; i < primaryValueArray.length; i++) {\r\n      if (entity.primaryValue === primaryValueArray[i]) {\r\n        isExistInTargetArray = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return isExistInTargetArray;\r\n  }\r\n\r\n  /**\r\n   * 删除子级\r\n   * @param path 路径\r\n   * @param id   内码\r\n   */\r\n  public removeByPath(fpath: string, id: string): Observable<boolean> {\r\n\r\n    const delete$ = this.apiProxy.extendDeletByPath(fpath, id);\r\n\r\n    // 从本地实体集合中移除\r\n    return delete$.pipe(\r\n      map(() => {\r\n        this.repository.entityManager.removeEntityByPath(fpath, id);\r\n        this.repository.dataChangeHistory.addChange({ fpath, dataId: id, changeType: DataChangeType.Delete });\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 将id对应的实体的变更提交的服务器端\r\n   */\r\n  public updateChangesById(id: string): Observable<boolean> {\r\n    const entity = this.repository.entityCollection.getEntityById(id);\r\n\r\n    // 变更集为空\r\n    if (!entity.changes || entity.changes.length === 0) {\r\n      return of(true);\r\n    }\r\n\r\n    const changeDetail = this.repository.entityManager.buildEntityChangeDetailById(id);\r\n    const update$ = this.apiProxy.update(changeDetail);\r\n    const result$ = update$.pipe(\r\n      tap(() => {\r\n        this.repository.entityManager.clearEntityChangesById(id);\r\n      }),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 提交所有变更\r\n   */\r\n  public updateAllChanges(): Observable<boolean> {\r\n\r\n    // 遍历实体，提交变更\r\n    const updateResults: Observable<boolean>[] = [];\r\n    const entities: Entity[] = this.repository.entityCollection.toArray();\r\n    if (entities.length === 0) {\r\n      return of(true);\r\n    }\r\n\r\n    entities.forEach((entity: Entity) => {\r\n      const updateResult$ = this.updateChangesById(entity.primaryValue);\r\n      updateResults.push(updateResult$);\r\n    });\r\n\r\n    // 串联流\r\n    const result$ = zip(...updateResults).pipe(\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 应用变更\r\n   */\r\n  public applyChanges(): Observable<boolean> {\r\n    const save$ = this.apiProxy.save();\r\n    const result$ = save$.pipe(\r\n      tap(() => {\r\n        this.repository.entityManager.clearAllEntityChanges();\r\n        this.repository.dataChangeHistory.clear();\r\n      }),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 应用idArray对应数据的变更\r\n   */\r\n  public applyChangesByIdArray(ids: string[]): Observable<boolean> {\r\n    const save$ = this.apiProxy.save();\r\n    const result$ = save$.pipe(\r\n      tap(() => {\r\n        this.repository.entityManager.clearEntityChangesByIds(ids);\r\n        this.repository.dataChangeHistory.clearByIds(ids);\r\n      }),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 应用id对应数据的变更\r\n   */\r\n  public applyChangesById(id: string): Observable<boolean> {\r\n    const save$ = this.apiProxy.save();\r\n    const result$ = save$.pipe(\r\n      tap(() => {\r\n        this.repository.entityManager.clearEntityChangesById(id);\r\n        this.repository.dataChangeHistory.clearByIds([id]);\r\n      }),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 取消变更\r\n   */\r\n  public cancelChanges(): Observable<boolean> {\r\n    const cancel$ = this.apiProxy.cancel();\r\n    const result$ = cancel$.pipe(\r\n      tap(() => {\r\n        this.repository.entityManager.clearAllEntityChanges();\r\n        this.repository.dataChangeHistory.clear();\r\n      }),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n    return result$;\r\n  }\r\n\r\n  /**\r\n   * 构造EntityFilter\r\n   */\r\n  private buildEntityFilter(filter: any[], sort: any[], pageSize: number, pageIndex: number) {\r\n    const entityFilter = {\r\n      FilterConditions: filter,\r\n      SortConditions: sort,\r\n      IsUsePagination: pageSize === 0 ? false : true,\r\n      Pagination: {\r\n        PageIndex: pageIndex,\r\n        PageSize: pageSize,\r\n        PageCount: 0,\r\n        TotalCount: 0\r\n      }\r\n    };\r\n\r\n    return entityFilter;\r\n  }\r\n}\r\n\r\nexport { BefDataService };\r\n","/**\r\n * 框架Session服务\r\n */\r\nclass FrameworkSessionService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * 获取用户SessionId\r\n   */\r\n  getUserSessionId(): string {\r\n    const userSessionId = window.localStorage.getItem('sessionId');\r\n    return userSessionId;\r\n  }\r\n\r\n  /**\r\n   * 获取框架菜单id\r\n   */\r\n  getFuncSessionId(): string {\r\n    const frmMobileService = window['frmMobileService'];\r\n    if (frmMobileService) {\r\n      return frmMobileService.rtf.commonVariable.formToken();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取当前会话id\r\n   */\r\n  getCurrentSessionId(): string {\r\n\r\n    let funcSessionId = window.sessionStorage.getItem('FuncSessionId');\r\n    let latestFuncSessionId = this.getFuncSessionId();\r\n    if (latestFuncSessionId && latestFuncSessionId !== funcSessionId) {\r\n      \r\n      // 设置为空，触发后续逻辑更新最新FuncSessionId\r\n      funcSessionId = null;\r\n    }\r\n\r\n    if (!funcSessionId) {\r\n      funcSessionId = this.getFuncSessionId();\r\n      if (funcSessionId) {\r\n        window.sessionStorage.setItem('FuncSessionId', funcSessionId)\r\n      }\r\n    }\r\n    return funcSessionId;\r\n  }\r\n\r\n}\r\n\r\nexport { FrameworkSessionService };\r\n","import { Observable, of, EMPTY, throwError } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Entity, HttpHeaders, InjectFlags, Injector } from '@farris/mobile-devkit';\r\nimport { IErrorServe, ResponseInfo } from './types';\r\nimport { BefRepository } from './bef_repository';\r\nimport { RequestInfoUtil } from './utils';\r\n\r\nimport { BE_ERROR_HANDLER__TOKEN } from './tokens';\r\n\r\n/**\r\n * 代理钩子\r\n */\r\nexport interface IProxyExtend {\r\n  extendBody(body: any): { [propName: string]: any };\r\n  extendHeaders(headers: { [propName: string]: any }): Observable<any>;\r\n  onResponse?(response: ResponseInfo, ignoreChanges?: boolean);\r\n  onError?(error: any, selfHandError: boolean, ignoreError: boolean): Observable<any>;\r\n}\r\n\r\n/**\r\n * Bef代理扩展类\r\n */\r\nexport class BefProxyExtend implements IProxyExtend {\r\n\r\n  /**\r\n * 注入器\r\n */\r\n  private get injector() {\r\n    return this.repository.getInjector();\r\n  }\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(private repository: BefRepository<Entity>) { }\r\n\r\n  /**\r\n   * 返回结果处理\r\n   */\r\n  public onResponse(response: any): ResponseInfo {\r\n    this.handleResponseHeaders(response.headers);\r\n    return this.handleResponseBody(response.body);\r\n  }\r\n\r\n  /**\r\n   * 处理服务器端返回的headers数据\r\n   */\r\n  private handleResponseHeaders(headers: any): void {\r\n    this.repository.sessionService.handleResponseHeaders(headers);\r\n  }\r\n\r\n  /**\r\n   * 处理服务器端返回的的body数据\r\n   */\r\n  private handleResponseBody(responseInfo: ResponseInfo): ResponseInfo {\r\n    if (responseInfo && responseInfo.innerDataChange) {\r\n      this.repository.entityManager.handleDataChangeDetails(responseInfo.innerDataChange);\r\n    }\r\n    this.repository.entityManager.clearAllEntityChanges();\r\n\r\n    if (responseInfo && responseInfo.hasOwnProperty('returnValue')) {\r\n      return responseInfo.returnValue;\r\n    } else {\r\n      return responseInfo;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 错误处理\r\n   */\r\n  public onError(error: any): Observable<any> {\r\n    // 获取所有load组件实例，消除\r\n    const loadingServices = window['DEVKIT_LOADING_SERVICE'];\r\n    if (loadingServices && loadingServices instanceof Array && loadingServices.length > 0) {\r\n      for (const loadingService of loadingServices) {\r\n        if (typeof (loadingService.hide) === 'function') {\r\n          loadingService.hide();\r\n        }\r\n      }\r\n    }\r\n    // 捕获到异常，处理异常信息\r\n    const exceptionService = this.injector.get<IErrorServe>(BE_ERROR_HANDLER__TOKEN, null)\r\n    if (!!exceptionService) {\r\n      exceptionService.show(error)\r\n      return EMPTY;\r\n    } else {\r\n      return EMPTY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 扩展Headers\r\n   */\r\n  public extendHeaders(headers: HttpHeaders): Observable<{ [propName: string]: any }> {\r\n    const $getSessionId = this.repository.sessionService.getBeSessionId();\r\n    return $getSessionId.pipe(\r\n      switchMap(() => {\r\n        headers = this.repository.sessionService.extendRequestHeaders(headers);\r\n        return of(headers);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 扩展Body\r\n   */\r\n  public extendBody(body: any): any {\r\n    return RequestInfoUtil.appendRequestInfoToBody(body, this.repository);\r\n  }\r\n\r\n}\r\n","\r\nimport { MetadataUtil, Entity, AppContext, InjectFlags, HttpClient } from '@farris/mobile-devkit';\r\n\r\nimport { VARIABLE_PROP_META } from './decorators';\r\nimport { BefEntityManager } from './bef_entity_manager';\r\nimport { BefVariableManager } from './bef_variable_manager';\r\nimport { BefSessionHandlingStrategyFactory, BefSessionService } from './session/index';\r\nimport { BefDataService } from './bef_data_service';\r\nimport { FrameworkSessionService } from './framework_session_service';\r\nimport { BE_SESSION_HANDLING_STRATEGY_TOKEN } from './tokens';\r\nimport { BefRepository } from './bef_repository';\r\nimport { BefProxyExtend } from './bef_proxy_extend';\r\n\r\n/**\r\n * BefRepository初始化器\r\n * @summary\r\n * 为了抽离这部分路径，强制对外暴露了Repository的相关属性，待优化。\r\n */\r\nclass BefRepositoryInitializer {\r\n\r\n  /**\r\n   * BefRepository实例\r\n   */\r\n  private repository: BefRepository<Entity>;\r\n\r\n  /**\r\n   * 注入器\r\n   */\r\n  private get injector() {\r\n    return this.repository.getInjector();\r\n  }\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(repository: BefRepository<Entity>) {\r\n    this.repository = repository;\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   */\r\n  public init() {\r\n    this.initAppContext();\r\n    this.initEntityManager();\r\n    this.initVariableManager();\r\n    this.initApiProxy();\r\n    this.initSessionService();\r\n    this.initDataService();\r\n  }\r\n\r\n  /**\r\n   * 初始化应用上下文\r\n   */\r\n  private initAppContext() {\r\n    this.repository.appContext = this.injector.get<AppContext>(AppContext);\r\n  }\r\n\r\n  /**\r\n   * 初始化EntityManager\r\n   */\r\n  private initEntityManager() {\r\n    this.repository.entityManager = new BefEntityManager(this.repository.entityCollection);\r\n  }\r\n\r\n  /**\r\n   * 初始化VariableManager\r\n   */\r\n  private initVariableManager() {\r\n    const ngVariables = MetadataUtil.getPropsMetadatasByName(this.repository.constructor, VARIABLE_PROP_META);\r\n    this.repository.variableManager = new BefVariableManager(ngVariables);\r\n  }\r\n\r\n  /**\r\n   * 初始化Proxy\r\n   */\r\n  private initApiProxy() {\r\n    this.repository.apiProxy = this.injector.get(this.repository.apiProxyType);\r\n    const apiProxyExtend = new BefProxyExtend(this.repository);\r\n    this.repository.apiProxy.setProxyExtend(apiProxyExtend);\r\n  }\r\n\r\n  /**\r\n   * 初始化SessionService\r\n   */\r\n  private initSessionService() {\r\n    let handlingStrategyName = this.injector.get<string>(BE_SESSION_HANDLING_STRATEGY_TOKEN, null, InjectFlags.Optional);\r\n    handlingStrategyName = handlingStrategyName || 'SeparatedSession';\r\n    const frmSessionService = this.injector.get<FrameworkSessionService>(FrameworkSessionService);\r\n    const httpClient = this.injector.get<HttpClient>(HttpClient);\r\n    const baseUrl = `${this.repository.apiProxy.baseUrl}`;\r\n    const sessionHandlingStrategyFactory = new BefSessionHandlingStrategyFactory();\r\n    const sessionHandlingStrategy = sessionHandlingStrategyFactory.create(handlingStrategyName, frmSessionService, baseUrl, httpClient);\r\n    this.repository.sessionService = new BefSessionService(sessionHandlingStrategy);\r\n  }\r\n\r\n  /**\r\n   * 初始化DataService\r\n   */\r\n  private initDataService() {\r\n    this.repository.dataService = new BefDataService(this.repository);\r\n  }\r\n}\r\n\r\nexport { BefRepositoryInitializer };\r\n","import { Observable } from 'rxjs';\r\nimport { Type, Entity, AppContext, Repository, Injector} from '@farris/mobile-devkit';\r\n\r\nimport { BefEntityManager } from './bef_entity_manager';\r\nimport { BefVariableManager } from './bef_variable_manager';\r\nimport { BefProxy } from './bef_proxy';\r\nimport { BefSessionService } from './session/index';\r\nimport { BefDataService } from './bef_data_service';\r\nimport { BefRepositoryInitializer } from './bef_repository_initializer';\r\n\r\n/**\r\n * Bef实体仓库实现类\r\n */\r\nabstract class BefRepository<T extends Entity> extends Repository<T> {\r\n\r\n  /**\r\n   * 名称\r\n   */\r\n  public abstract name: string;\r\n\r\n  /**\r\n   * Bef代理\r\n   */\r\n  public abstract apiProxyType: Type<BefProxy>;\r\n\r\n  /**\r\n   * 应用上下文\r\n   */\r\n  public appContext: AppContext;\r\n\r\n  /**\r\n   * 实体管理器\r\n   */\r\n  public entityManager: BefEntityManager<T>;\r\n\r\n  /**\r\n   * 变量管理器\r\n   */\r\n  public variableManager: BefVariableManager;\r\n\r\n  /**\r\n   * API代理\r\n   */\r\n  public apiProxy: BefProxy;\r\n\r\n  /**\r\n   * Bef会话管理\r\n   */\r\n  public sessionService: BefSessionService;\r\n\r\n  /**\r\n   * Bef数据操作\r\n   */\r\n  public dataService: BefDataService<T>;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(protected injector: Injector) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * 初始化\r\n   * @summary\r\n   * 实现类的构造函数中调用才能正确获取apiProxy\r\n   */\r\n  protected init() {\r\n    super.init();\r\n    const initializer = new BefRepositoryInitializer(this);\r\n    initializer.init();\r\n  }\r\n\r\n  /**\r\n   * 获取注入器\r\n   */\r\n  public getInjector() {\r\n    return this.injector;\r\n  }\r\n\r\n  /**\r\n   * 获取实体数组\r\n   */\r\n  public getEntities(filter: any[], sort: any[], pageSize: number | null, pageIndex: number | null): Observable<T[]> {\r\n    return this.dataService.getList(filter, sort, pageSize, pageIndex);\r\n  }\r\n\r\n  /**\r\n   * 获取主键为id的实体\r\n   * @param id 实体id\r\n   */\r\n  public getEntityById(id: string): Observable<T> {\r\n    return this.dataService.getById(id);\r\n  }\r\n\r\n  /**\r\n   * 更新实体数据\r\n   */\r\n  public updateEntityById(id: string): Observable<T> {\r\n    return this.dataService.updateById(id);\r\n  }\r\n\r\n  /**\r\n   * 更新实体数据并加锁\r\n   */\r\n  public editEntityById(id: string): Observable<T> {\r\n    return this.dataService.editById(id);\r\n  }\r\n\r\n  /**\r\n   * 创建实体\r\n   */\r\n  public createEntity(defaultValue?: any): Observable<T> {\r\n    return this.dataService.create(defaultValue);\r\n  }\r\n\r\n  /**\r\n   * 追加实体\r\n   */\r\n  public appendEntity(defaultValue?: any): Observable<T> {\r\n    return this.dataService.append(defaultValue);\r\n  }\r\n\r\n  /**\r\n   * 创建子实体，并追加\r\n   * @param fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）\r\n   */\r\n  public appendEntityByPath(fpath: string): Observable<Entity> {\r\n    return this.dataService.appendByPath(fpath);\r\n  }\r\n\r\n  /**\r\n   * 根据id删除实体\r\n   */\r\n  public removeEntityById(id: string, ifSave?: boolean): Observable<boolean> {\r\n    return this.dataService.removeById(id, ifSave);\r\n  }\r\n\r\n  /**\r\n   * 根据ids批量删除实体\r\n   */\r\n  public removeEntitiesByIds(ids: string[]) {\r\n    return this.dataService.removeByIds(ids);\r\n  }\r\n\r\n  /**\r\n   * 根据id删除实体并执行保存\r\n   */\r\n  public removeEntityAndSaveById(id: string): Observable<boolean> {\r\n    return this.dataService.removeAndSaveById(id);\r\n  }\r\n\r\n  /**\r\n   * 删除子级\r\n   */\r\n  public removeEntityByPath(fpath: string, id: string): Observable<boolean> {\r\n    return this.dataService.removeByPath(fpath, id);\r\n  }\r\n\r\n  /**\r\n   * 保存主键为id的实体\r\n   */\r\n  public saveEntityById(id: string): Observable<boolean> {\r\n    return this.dataService.applyChangesById(id);\r\n  }\r\n\r\n  /**\r\n   * 批量保存\r\n   */\r\n  public saveEntities(): Observable<boolean> {\r\n    return this.dataService.applyChanges();\r\n  }\r\n\r\n  /**\r\n   * 取消实体变更\r\n   */\r\n  public cancelEntityChanges(): Observable<boolean> {\r\n    return this.dataService.cancelChanges();\r\n  }\r\n\r\n  /**\r\n   * 清空Repositoy内的数据和变量\r\n   */\r\n  public reset() {\r\n    this.entityManager.reset();\r\n    this.variableManager.reset();\r\n    this.sessionService.clearBeSessionId();\r\n  }\r\n}\r\n\r\nexport { BefRepository };\r\n","import { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Entity, HttpMethods, HttpRequestConfig, ViewModelContext } from '@farris/mobile-devkit';\r\nimport { ResponseInfo } from './types';\r\nimport { RequestInfoUtil } from './utils/index';\r\nimport { BefRepository } from './bef_repository';\r\n\r\n/**\r\n * Bef帮助取数服务\r\n */\r\nexport class BefLookupDataService {\r\n\r\n  private viewModelContext: ViewModelContext;\r\n\r\n  private befRepository: BefRepository<Entity>;\r\n\r\n  public context: any;\r\n\r\n  /**\r\n   * 构造函数\r\n   */\r\n  constructor(viewModelContext: ViewModelContext) {\r\n    this.viewModelContext = viewModelContext;\r\n    this.befRepository = this.viewModelContext.repository as BefRepository<Entity>\r\n  }\r\n\r\n  /**\r\n   * 帮助取数\r\n   */\r\n  public getData(helpMetadataId: string, queryParam?: any): Observable<any> {\r\n    const tableName = helpMetadataId.split('.')[0];\r\n    const labelId = helpMetadataId.split('.')[1];\r\n    queryParam = queryParam || {};\r\n    return this.extendGetHelpData(labelId, tableName, queryParam);\r\n  }\r\n\r\n  /**\r\n   * 扩展的帮助取数\r\n   */\r\n  private extendGetHelpData(labelId: string, tableName: string, queryParam: any): Observable<any> {\r\n    const url = `${this.befRepository.apiProxy.baseUrl}/extension/elementhelps`;\r\n    const requestInfo = RequestInfoUtil.buildRequestInfo(this.befRepository);\r\n    const body = {\r\n      labelId: labelId,\r\n      nodeCode: tableName,\r\n      queryParam: queryParam,\r\n      requestInfo: requestInfo\r\n    };\r\n    const requestConfig: HttpRequestConfig = {\r\n      body: body\r\n    };\r\n\r\n    const result$ = this.befRepository.apiProxy.request(HttpMethods.PUT, url, requestConfig);\r\n    return result$.pipe(\r\n      map((result: any) => {\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n}"],"names":[],"mappings":"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"}