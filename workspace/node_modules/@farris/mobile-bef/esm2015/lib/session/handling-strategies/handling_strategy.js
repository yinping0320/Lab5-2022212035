/**
 * @fileoverview added by tsickle
 * Generated from: lib/session/handling-strategies/handling_strategy.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BehaviorSubject, of, Subject } from 'rxjs';
import { switchMap, tap } from 'rxjs/operators';
import { BefHttpUtil } from '../../utils/index';
/**
 * BefSession处理策略类
 * @abstract
 */
class BefSessionHandlingStrategy {
    /**
     * 构造函数
     * @param {?} storageStrategy
     * @param {?} frmSessionService
     * @param {?} httpClient
     * @param {?} beBaseUrl
     */
    constructor(storageStrategy, frmSessionService, httpClient, beBaseUrl) {
        /**
         * BeSession是否存在
         */
        this.beSessionExisted = false;
        this.storageStrategy = storageStrategy;
        this.frmSessionService = frmSessionService;
        this.httpClient = httpClient;
        this.beBaseUrl = beBaseUrl;
        this.beCreateSessionUrl = `${beBaseUrl}/service/createsession`;
        this.beCloseSessionUrl = `${beBaseUrl}/service/closesession`;
        this.beSessionExisted$ = new BehaviorSubject(this.beSessionExisted);
    }
    /**
     * 框架SessionId（用户的或者功能菜单的）
     * @protected
     * @return {?}
     */
    get frmSessionId() {
        return this.frmSessionService.getCurrentSessionId();
    }
    /**
     * 获取框架SessionId
     * @return {?}
     */
    getFrameworkSessionId() {
        return this.frmSessionId;
    }
    /**
     * 从缓存中获取BeSession
     * @protected
     * @return {?}
     */
    getSessionIdFromStorage() {
        /** @type {?} */
        const sessionStorageKey = this.getSessionStorageKey();
        /** @type {?} */
        const beSessionId = this.storageStrategy.getItem(sessionStorageKey);
        return beSessionId;
    }
    /**
     * 创建BeSessionId
     * @protected
     * @return {?}
     */
    createSession() {
        /** @type {?} */
        const requestConfig = {
            responseType: 'text',
            headers: {
                'Content-Type': 'application/json'
            }
        };
        /** @type {?} */
        const frmSessionId = this.frmSessionId;
        if (frmSessionId) {
            requestConfig.headers = BefHttpUtil.appendSessionId(requestConfig.headers, this.frmSessionId);
            requestConfig.headers = BefHttpUtil.appendCafRuntimeCommonVariable(requestConfig.headers, this.frmSessionId);
        }
        //创建前判断当前的frmsessionid是不是在当前会话下被清除过
        /** @type {?} */
        const ClearItOnce = window.sessionStorage.getItem("ClearItOnce");
        if ('true' !== ClearItOnce && frmSessionId) {
            return this.clear(frmSessionId).pipe(switchMap((/**
             * @return {?}
             */
            () => {
                window.sessionStorage.setItem("ClearItOnce", 'true');
                return this.httpClient.post(this.beCreateSessionUrl, null, requestConfig).pipe(tap((/**
                 * @param {?} beSessionId
                 * @return {?}
                 */
                (beSessionId) => {
                    this.setSessionId(beSessionId);
                    this.setBesessionExisted(true);
                })));
            })));
        }
        return this.httpClient.post(this.beCreateSessionUrl, null, requestConfig).pipe(tap((/**
         * @param {?} beSessionId
         * @return {?}
         */
        (beSessionId) => {
            this.setSessionId(beSessionId);
            this.setBesessionExisted(true);
        })));
    }
    /**
     * @param {?} formToken
     * @return {?}
     */
    clear(formToken) {
        /** @type {?} */
        const subject = new Subject();
        if (formToken && window['frmMobileService']) {
            window['frmMobileService'].rtf.func.clearState({ formToken }, (/**
             * @return {?}
             */
            () => { subject.next(true); }));
        }
        return subject;
    }
    /**
     * @return {?}
     */
    test() {
        /** @type {?} */
        const requestConfig = {
            responseType: 'text',
            headers: {
                'Content-Type': 'application/json'
            }
        };
        if (this.frmSessionId) {
            requestConfig.headers = BefHttpUtil.appendSessionId(requestConfig.headers, this.frmSessionId);
            requestConfig.headers = BefHttpUtil.appendCafRuntimeCommonVariable(requestConfig.headers, this.frmSessionId);
        }
        return this.httpClient.post(this.beCreateSessionUrl, null, requestConfig).pipe(tap((/**
         * @param {?} beSessionId
         * @return {?}
         */
        (beSessionId) => {
            this.setSessionId(beSessionId);
            this.setBesessionExisted(true);
        })));
    }
    /**
     * 关闭BeSessionId
     * @protected
     * @return {?}
     */
    closeOldSession() {
        if (!this.oldBeSessionId) {
            return of(true);
        }
        /** @type {?} */
        const requestConfig = {
            responseType: 'text',
            headers: {
                'Content-Type': 'application/json'
            }
        };
        // headers处理
        requestConfig.headers = BefHttpUtil.appendCafRuntimeContext(requestConfig.headers, this.oldBeSessionId);
        requestConfig.headers = BefHttpUtil.appendSessionId(requestConfig.headers, this.oldBeSessionId);
        if (this.frmSessionId) {
            requestConfig.headers = BefHttpUtil.appendCafRuntimeCommonVariable(requestConfig.headers, this.frmSessionId);
        }
        // 无论是否成功，统一置空cleardBeSessionId
        return this.httpClient.post(this.beCloseSessionUrl, null, requestConfig).pipe(tap((/**
         * @return {?}
         */
        () => {
            this.oldBeSessionId = null;
            return of(true);
        }), (/**
         * @return {?}
         */
        () => {
            this.oldBeSessionId = null;
            return of(true);
        })));
    }
    /**
     * 设置BeSession存在状态，并发出通知
     * @protected
     * @param {?} beSessionExisted
     * @return {?}
     */
    setBesessionExisted(beSessionExisted) {
        if (this.beSessionExisted === beSessionExisted) {
            return;
        }
        this.beSessionExisted = beSessionExisted;
        this.beSessionExisted$.next(beSessionExisted);
    }
    /**
     * 获取BeSession是否存在状态
     * @return {?}
     */
    getBeSessionExisted() {
        return this.beSessionExisted$;
    }
}
if (false) {
    /**
     * 存储策略
     * @type {?}
     * @protected
     */
    BefSessionHandlingStrategy.prototype.storageStrategy;
    /**
     * 框架Session服务
     * @type {?}
     * @protected
     */
    BefSessionHandlingStrategy.prototype.frmSessionService;
    /**
     * Http客户端
     * @type {?}
     * @protected
     */
    BefSessionHandlingStrategy.prototype.httpClient;
    /**
     * 创建Session的的EAPI地址
     * @type {?}
     * @protected
     */
    BefSessionHandlingStrategy.prototype.beBaseUrl;
    /**
     * 创建BeSession接口地址
     * @type {?}
     * @protected
     */
    BefSessionHandlingStrategy.prototype.beCreateSessionUrl;
    /**
     * 关闭BeSession接口地址
     * @type {?}
     * @protected
     */
    BefSessionHandlingStrategy.prototype.beCloseSessionUrl;
    /**
     * 清空的BeSessionId
     * @type {?}
     * @protected
     */
    BefSessionHandlingStrategy.prototype.oldBeSessionId;
    /**
     * BeSession是否存在
     * @type {?}
     * @private
     */
    BefSessionHandlingStrategy.prototype.beSessionExisted;
    /**
     * BeSession是否存在流
     * @type {?}
     * @private
     */
    BefSessionHandlingStrategy.prototype.beSessionExisted$;
    /**
     * @abstract
     * @return {?}
     */
    BefSessionHandlingStrategy.prototype.getSessionId = function () { };
    /**
     * @abstract
     * @param {?} sessionId
     * @return {?}
     */
    BefSessionHandlingStrategy.prototype.setSessionId = function (sessionId) { };
    /**
     * @abstract
     * @return {?}
     */
    BefSessionHandlingStrategy.prototype.clearSessionId = function () { };
    /**
     * @abstract
     * @param {?} headers
     * @return {?}
     */
    BefSessionHandlingStrategy.prototype.handleRequestHeaders = function (headers) { };
    /**
     * @abstract
     * @param {?} headers
     * @return {?}
     */
    BefSessionHandlingStrategy.prototype.handleReponseHeaders = function (headers) { };
    /**
     * @abstract
     * @protected
     * @return {?}
     */
    BefSessionHandlingStrategy.prototype.getSessionStorageKey = function () { };
}
export { BefSessionHandlingStrategy };
//# sourceMappingURL=data:application/json;base64,