/**
 * @fileoverview added by tsickle
 * Generated from: lib/session/bef_session_service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * BefSessionService
 */
class BefSessionService {
    /**
     * 构造函数
     * @param {?} handlingStrategy
     */
    constructor(handlingStrategy) {
        this.handlingStrategy = handlingStrategy;
    }
    /**
     * 获取token
     * @return {?}
     */
    get token() {
        return this.handlingStrategy.getFrameworkSessionId();
    }
    /**
     * 获取BeSessionId
     * @return {?}
     */
    getBeSessionId() {
        return this.handlingStrategy.getSessionId();
    }
    /**
     * 获取BeSession是否存在状态
     * @return {?}
     */
    getBeSessionExisted() {
        return this.handlingStrategy.getBeSessionExisted();
    }
    /**
     * 设置sessionId
     * @param {?} sessionId sessionId
     * @return {?}
     */
    setBeSessionId(sessionId) {
        this.handlingStrategy.setSessionId(sessionId);
    }
    /**
     * 清空BeSessionId
     * @return {?}
     */
    clearBeSessionId() {
        this.handlingStrategy.clearSessionId();
    }
    /**
     * 扩展请求header
     * @param {?} headers
     * @return {?}
     */
    extendRequestHeaders(headers) {
        return this.handlingStrategy.handleRequestHeaders(headers);
    }
    /**
     * 处理响应header
     * @param {?} headers
     * @return {?}
     */
    handleResponseHeaders(headers) {
        return this.handlingStrategy.handleReponseHeaders(headers);
    }
}
if (false) {
    /**
     * Session处理策略类
     * @type {?}
     * @private
     */
    BefSessionService.prototype.handlingStrategy;
}
export { BefSessionService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX3Nlc3Npb25fc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWJlZi8iLCJzb3VyY2VzIjpbImxpYi9zZXNzaW9uL2JlZl9zZXNzaW9uX3NlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFNQSxNQUFNLGlCQUFpQjs7Ozs7SUFVckIsWUFBWSxnQkFBNEM7UUFDdEQsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO0lBQzNDLENBQUM7Ozs7O0lBSUQsSUFBVyxLQUFLO1FBQ2QsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUN2RCxDQUFDOzs7OztJQUtNLGNBQWM7UUFDbkIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDOUMsQ0FBQzs7Ozs7SUFLTSxtQkFBbUI7UUFDeEIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUNyRCxDQUFDOzs7Ozs7SUFNTSxjQUFjLENBQUMsU0FBaUI7UUFDckMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoRCxDQUFDOzs7OztJQUtNLGdCQUFnQjtRQUNyQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDekMsQ0FBQzs7Ozs7O0lBS00sb0JBQW9CLENBQUMsT0FBWTtRQUN0QyxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3RCxDQUFDOzs7Ozs7SUFLTSxxQkFBcUIsQ0FBQyxPQUFZO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdELENBQUM7Q0FDRjs7Ozs7OztJQXpEQyw2Q0FBcUQ7O0FBMkR2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQmVmU2Vzc2lvbkhhbmRsaW5nU3RyYXRlZ3kgfSBmcm9tICcuL2hhbmRsaW5nLXN0cmF0ZWdpZXMvaW5kZXgnO1xyXG5cclxuLyoqXHJcbiAqIEJlZlNlc3Npb25TZXJ2aWNlXHJcbiAqL1xyXG5jbGFzcyBCZWZTZXNzaW9uU2VydmljZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIFNlc3Npb27lpITnkIbnrZbnlaXnsbtcclxuICAgKi9cclxuICBwcml2YXRlIGhhbmRsaW5nU3RyYXRlZ3k6IEJlZlNlc3Npb25IYW5kbGluZ1N0cmF0ZWd5O1xyXG5cclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihoYW5kbGluZ1N0cmF0ZWd5OiBCZWZTZXNzaW9uSGFuZGxpbmdTdHJhdGVneSkge1xyXG4gICAgdGhpcy5oYW5kbGluZ1N0cmF0ZWd5ID0gaGFuZGxpbmdTdHJhdGVneTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog6I635Y+WdG9rZW5cclxuICAgKi9cclxuICBwdWJsaWMgZ2V0IHRva2VuKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuaGFuZGxpbmdTdHJhdGVneS5nZXRGcmFtZXdvcmtTZXNzaW9uSWQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPlkJlU2Vzc2lvbklkXHJcbiAgICovXHJcbiAgcHVibGljIGdldEJlU2Vzc2lvbklkKCk6IE9ic2VydmFibGU8c3RyaW5nPiB7XHJcbiAgICByZXR1cm4gdGhpcy5oYW5kbGluZ1N0cmF0ZWd5LmdldFNlc3Npb25JZCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+WQmVTZXNzaW9u5piv5ZCm5a2Y5Zyo54q25oCBXHJcbiAgICovXHJcbiAgcHVibGljIGdldEJlU2Vzc2lvbkV4aXN0ZWQoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XHJcbiAgICByZXR1cm4gdGhpcy5oYW5kbGluZ1N0cmF0ZWd5LmdldEJlU2Vzc2lvbkV4aXN0ZWQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9rnNlc3Npb25JZFxyXG4gICAqIEBwYXJhbSBzZXNzaW9uSWQgc2Vzc2lvbklkXHJcbiAgICovXHJcbiAgcHVibGljIHNldEJlU2Vzc2lvbklkKHNlc3Npb25JZDogc3RyaW5nKSB7XHJcbiAgICB0aGlzLmhhbmRsaW5nU3RyYXRlZ3kuc2V0U2Vzc2lvbklkKHNlc3Npb25JZCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmuIXnqbpCZVNlc3Npb25JZFxyXG4gICAqL1xyXG4gIHB1YmxpYyBjbGVhckJlU2Vzc2lvbklkKCkge1xyXG4gICAgdGhpcy5oYW5kbGluZ1N0cmF0ZWd5LmNsZWFyU2Vzc2lvbklkKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmianlsZXor7fmsYJoZWFkZXJcclxuICAgKi9cclxuICBwdWJsaWMgZXh0ZW5kUmVxdWVzdEhlYWRlcnMoaGVhZGVyczogYW55KTogYW55IHtcclxuICAgIHJldHVybiB0aGlzLmhhbmRsaW5nU3RyYXRlZ3kuaGFuZGxlUmVxdWVzdEhlYWRlcnMoaGVhZGVycyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlpITnkIblk43lupRoZWFkZXJcclxuICAgKi9cclxuICBwdWJsaWMgaGFuZGxlUmVzcG9uc2VIZWFkZXJzKGhlYWRlcnM6IGFueSk6IHZvaWQge1xyXG4gICAgcmV0dXJuIHRoaXMuaGFuZGxpbmdTdHJhdGVneS5oYW5kbGVSZXBvbnNlSGVhZGVycyhoZWFkZXJzKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IEJlZlNlc3Npb25TZXJ2aWNlIH07XHJcbiJdfQ==