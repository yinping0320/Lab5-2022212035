/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/bef_http.util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpUtil } from '@farris/mobile-devkit';
/**
 * BefHttp工具类
 */
class BefHttpUtil {
    /**
     * 追加SessionId头
     * @param {?} headers
     * @param {?} sessionId
     * @return {?}
     */
    static appendSessionId(headers, sessionId) {
        headers = HttpUtil.appendHeader(headers, 'SessionId', sessionId);
        return headers;
    }
    /**
     * 追加CommonVariable头
     * \@summary
     * 框架会话token，等价于原来的SessionId
     * @param {?} headers
     * @param {?} commonVariable
     * @return {?}
     */
    static appendCafRuntimeCommonVariable(headers, commonVariable) {
        headers = HttpUtil.appendHeader(headers, 'X-CAF-Runtime-CommonVariable', commonVariable);
        return headers;
    }
    /**
     * 追加X-CAF-Runtime-Context头
     * \@summary
     * X-CAF-Runtime-Context等价于BeSessionId
     * @param {?} headers
     * @param {?} context
     * @return {?}
     */
    static appendCafRuntimeContext(headers, context) {
        headers = HttpUtil.appendHeader(headers, 'X-CAF-Runtime-Context', context);
        return headers;
    }
    /**
     * 追加Content-Type头
     * \@summary
     * 提交内容的MIME类型，默认为application/json
     * @param {?} headers
     * @param {?=} contentType
     * @return {?}
     */
    static appendContextType(headers, contentType) {
        contentType = contentType ? contentType : 'application/json';
        headers = HttpUtil.appendHeader(headers, 'Content-Type', contentType);
        return headers;
    }
}
export { BefHttpUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX2h0dHAudXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWJlZi8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9iZWZfaHR0cC51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFlLFFBQVEsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7O0FBSzlELE1BQU0sV0FBVzs7Ozs7OztJQUtSLE1BQU0sQ0FBQyxlQUFlLENBQUMsT0FBb0IsRUFBRSxTQUFpQjtRQUNuRSxPQUFPLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ2pFLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7Ozs7Ozs7OztJQU9NLE1BQU0sQ0FBQyw4QkFBOEIsQ0FBQyxPQUFZLEVBQUUsY0FBc0I7UUFDL0UsT0FBTyxHQUFHLFFBQVEsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLDhCQUE4QixFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQ3pGLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7Ozs7Ozs7OztJQU9NLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxPQUFZLEVBQUUsT0FBZTtRQUNqRSxPQUFPLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDM0UsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQzs7Ozs7Ozs7O0lBT00sTUFBTSxDQUFDLGlCQUFpQixDQUFDLE9BQVksRUFBRSxXQUFvQjtRQUNoRSxXQUFXLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDO1FBQzdELE9BQU8sR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDdEUsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztDQUVGO0FBRUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cEhlYWRlcnMsIEh0dHBVdGlsIH0gZnJvbSAnQGZhcnJpcy9tb2JpbGUtZGV2a2l0JztcclxuXHJcbi8qKlxyXG4gKiBCZWZIdHRw5bel5YW357G7XHJcbiAqL1xyXG5jbGFzcyBCZWZIdHRwVXRpbCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOi/veWKoFNlc3Npb25JZOWktFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgYXBwZW5kU2Vzc2lvbklkKGhlYWRlcnM6IEh0dHBIZWFkZXJzLCBzZXNzaW9uSWQ6IHN0cmluZyk6IGFueSB7XHJcbiAgICBoZWFkZXJzID0gSHR0cFV0aWwuYXBwZW5kSGVhZGVyKGhlYWRlcnMsICdTZXNzaW9uSWQnLCBzZXNzaW9uSWQpO1xyXG4gICAgcmV0dXJuIGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDov73liqBDb21tb25WYXJpYWJsZeWktFxyXG4gICAqIEBzdW1tYXJ5XHJcbiAgICog5qGG5p625Lya6K+ddG9rZW7vvIznrYnku7fkuo7ljp/mnaXnmoRTZXNzaW9uSWRcclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIGFwcGVuZENhZlJ1bnRpbWVDb21tb25WYXJpYWJsZShoZWFkZXJzOiBhbnksIGNvbW1vblZhcmlhYmxlOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgaGVhZGVycyA9IEh0dHBVdGlsLmFwcGVuZEhlYWRlcihoZWFkZXJzLCAnWC1DQUYtUnVudGltZS1Db21tb25WYXJpYWJsZScsIGNvbW1vblZhcmlhYmxlKTtcclxuICAgIHJldHVybiBoZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6L+95YqgWC1DQUYtUnVudGltZS1Db250ZXh05aS0XHJcbiAgICogQHN1bW1hcnlcclxuICAgKiBYLUNBRi1SdW50aW1lLUNvbnRleHTnrYnku7fkuo5CZVNlc3Npb25JZFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgYXBwZW5kQ2FmUnVudGltZUNvbnRleHQoaGVhZGVyczogYW55LCBjb250ZXh0OiBzdHJpbmcpOiBhbnkge1xyXG4gICAgaGVhZGVycyA9IEh0dHBVdGlsLmFwcGVuZEhlYWRlcihoZWFkZXJzLCAnWC1DQUYtUnVudGltZS1Db250ZXh0JywgY29udGV4dCk7XHJcbiAgICByZXR1cm4gaGVhZGVycztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOi/veWKoENvbnRlbnQtVHlwZeWktFxyXG4gICAqIEBzdW1tYXJ5XHJcbiAgICog5o+Q5Lqk5YaF5a6555qETUlNReexu+Wei++8jOm7mOiupOS4umFwcGxpY2F0aW9uL2pzb25cclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIGFwcGVuZENvbnRleHRUeXBlKGhlYWRlcnM6IGFueSwgY29udGVudFR5cGU/OiBzdHJpbmcpOiBhbnkge1xyXG4gICAgY29udGVudFR5cGUgPSBjb250ZW50VHlwZSA/IGNvbnRlbnRUeXBlIDogJ2FwcGxpY2F0aW9uL2pzb24nO1xyXG4gICAgaGVhZGVycyA9IEh0dHBVdGlsLmFwcGVuZEhlYWRlcihoZWFkZXJzLCAnQ29udGVudC1UeXBlJywgY29udGVudFR5cGUpO1xyXG4gICAgcmV0dXJuIGhlYWRlcnM7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IHsgQmVmSHR0cFV0aWwgfTtcclxuIl19