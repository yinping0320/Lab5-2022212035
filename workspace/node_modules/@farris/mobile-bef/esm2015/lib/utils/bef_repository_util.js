/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/bef_repository_util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export class BefRepositoryUtil {
    /**
     * isExistUnsaveData
     * @param {?} befRepository
     * @return {?}
     */
    static isExistUnsaveData(befRepository) {
        /** @type {?} */
        let hasUnsavedData = false;
        if (!befRepository || !befRepository.entityCollection) {
            throw new Error('Current Object is null or it\'s entityCollection is null.');
        }
        /** @type {?} */
        const entityArray = befRepository.entityCollection.toArray();
        if (befRepository.dataChangeHistory.isChanged()) {
            return true;
        }
        for (let i = 0; i < entityArray.length; i++) {
            if (entityArray[i].changes.length > 0) {
                hasUnsavedData = true;
                break;
            }
        }
        return hasUnsavedData;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX3JlcG9zaXRvcnlfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWJlZi8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9iZWZfcmVwb3NpdG9yeV91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsTUFBTSxPQUFPLGlCQUFpQjs7Ozs7O0lBS3JCLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxhQUFpQzs7WUFDM0QsY0FBYyxHQUFHLEtBQUs7UUFDMUIsSUFBSSxDQUFDLGFBQWEsSUFBSSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsRUFBRTtZQUNyRCxNQUFNLElBQUksS0FBSyxDQUFDLDJEQUEyRCxDQUFDLENBQUM7U0FDOUU7O2NBRUssV0FBVyxHQUFHLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUU7UUFDNUQsSUFBSSxhQUFhLENBQUMsaUJBQWlCLENBQUMsU0FBUyxFQUFFLEVBQUU7WUFDL0MsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzNDLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUNyQyxjQUFjLEdBQUcsSUFBSSxDQUFDO2dCQUN0QixNQUFNO2FBQ1A7U0FDRjtRQUVELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7Q0FFRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJlZlJlcG9zaXRvcnkgfSBmcm9tICcuLi9iZWZfcmVwb3NpdG9yeSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQmVmUmVwb3NpdG9yeVV0aWwge1xyXG5cclxuICAvKipcclxuICAgKiBpc0V4aXN0VW5zYXZlRGF0YVxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgaXNFeGlzdFVuc2F2ZURhdGEoYmVmUmVwb3NpdG9yeTogQmVmUmVwb3NpdG9yeTxhbnk+KTogYm9vbGVhbiB7XHJcbiAgICBsZXQgaGFzVW5zYXZlZERhdGEgPSBmYWxzZTtcclxuICAgIGlmICghYmVmUmVwb3NpdG9yeSB8fCAhYmVmUmVwb3NpdG9yeS5lbnRpdHlDb2xsZWN0aW9uKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ3VycmVudCBPYmplY3QgaXMgbnVsbCBvciBpdFxcJ3MgZW50aXR5Q29sbGVjdGlvbiBpcyBudWxsLicpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGVudGl0eUFycmF5ID0gYmVmUmVwb3NpdG9yeS5lbnRpdHlDb2xsZWN0aW9uLnRvQXJyYXkoKTtcclxuICAgIGlmIChiZWZSZXBvc2l0b3J5LmRhdGFDaGFuZ2VIaXN0b3J5LmlzQ2hhbmdlZCgpKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbnRpdHlBcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoZW50aXR5QXJyYXlbaV0uY2hhbmdlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgaGFzVW5zYXZlZERhdGEgPSB0cnVlO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGhhc1Vuc2F2ZWREYXRhO1xyXG4gIH1cclxuXHJcbn1cclxuIl19