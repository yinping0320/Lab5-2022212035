/**
 * @fileoverview added by tsickle
 * Generated from: lib/bef_repository.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Repository } from '@farris/mobile-devkit';
import { BefRepositoryInitializer } from './bef_repository_initializer';
/**
 * Bef实体仓库实现类
 * @abstract
 * @template T
 */
var /**
 * Bef实体仓库实现类
 * @abstract
 * @template T
 */
BefRepository = /** @class */ (function (_super) {
    tslib_1.__extends(BefRepository, _super);
    /**
     * 构造函数
     */
    function BefRepository(injector) {
        var _this = _super.call(this) || this;
        _this.injector = injector;
        return _this;
    }
    /**
     * 初始化
     * @summary
     * 实现类的构造函数中调用才能正确获取apiProxy
     */
    /**
     * 初始化
     * \@summary
     * 实现类的构造函数中调用才能正确获取apiProxy
     * @protected
     * @return {?}
     */
    BefRepository.prototype.init = /**
     * 初始化
     * \@summary
     * 实现类的构造函数中调用才能正确获取apiProxy
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.init.call(this);
        /** @type {?} */
        var initializer = new BefRepositoryInitializer(this);
        initializer.init();
    };
    /**
     * 获取注入器
     */
    /**
     * 获取注入器
     * @return {?}
     */
    BefRepository.prototype.getInjector = /**
     * 获取注入器
     * @return {?}
     */
    function () {
        return this.injector;
    };
    /**
     * 获取实体数组
     */
    /**
     * 获取实体数组
     * @param {?} filter
     * @param {?} sort
     * @param {?} pageSize
     * @param {?} pageIndex
     * @return {?}
     */
    BefRepository.prototype.getEntities = /**
     * 获取实体数组
     * @param {?} filter
     * @param {?} sort
     * @param {?} pageSize
     * @param {?} pageIndex
     * @return {?}
     */
    function (filter, sort, pageSize, pageIndex) {
        return this.dataService.getList(filter, sort, pageSize, pageIndex);
    };
    /**
     * 获取主键为id的实体
     * @param id 实体id
     */
    /**
     * 获取主键为id的实体
     * @param {?} id 实体id
     * @return {?}
     */
    BefRepository.prototype.getEntityById = /**
     * 获取主键为id的实体
     * @param {?} id 实体id
     * @return {?}
     */
    function (id) {
        return this.dataService.getById(id);
    };
    /**
     * 更新实体数据
     */
    /**
     * 更新实体数据
     * @param {?} id
     * @return {?}
     */
    BefRepository.prototype.updateEntityById = /**
     * 更新实体数据
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.dataService.updateById(id);
    };
    /**
     * 更新实体数据并加锁
     */
    /**
     * 更新实体数据并加锁
     * @param {?} id
     * @return {?}
     */
    BefRepository.prototype.editEntityById = /**
     * 更新实体数据并加锁
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.dataService.editById(id);
    };
    /**
     * 创建实体
     */
    /**
     * 创建实体
     * @param {?=} defaultValue
     * @return {?}
     */
    BefRepository.prototype.createEntity = /**
     * 创建实体
     * @param {?=} defaultValue
     * @return {?}
     */
    function (defaultValue) {
        return this.dataService.create(defaultValue);
    };
    /**
     * 追加实体
     */
    /**
     * 追加实体
     * @param {?=} defaultValue
     * @return {?}
     */
    BefRepository.prototype.appendEntity = /**
     * 追加实体
     * @param {?=} defaultValue
     * @return {?}
     */
    function (defaultValue) {
        return this.dataService.append(defaultValue);
    };
    /**
     * 创建子实体，并追加
     * @param fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     */
    /**
     * 创建子实体，并追加
     * @param {?} fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     * @return {?}
     */
    BefRepository.prototype.appendEntityByPath = /**
     * 创建子实体，并追加
     * @param {?} fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     * @return {?}
     */
    function (fpath) {
        return this.dataService.appendByPath(fpath);
    };
    /**
     * 根据id删除实体
     */
    /**
     * 根据id删除实体
     * @param {?} id
     * @param {?=} ifSave
     * @return {?}
     */
    BefRepository.prototype.removeEntityById = /**
     * 根据id删除实体
     * @param {?} id
     * @param {?=} ifSave
     * @return {?}
     */
    function (id, ifSave) {
        return this.dataService.removeById(id, ifSave);
    };
    /**
     * 根据ids批量删除实体
     */
    /**
     * 根据ids批量删除实体
     * @param {?} ids
     * @return {?}
     */
    BefRepository.prototype.removeEntitiesByIds = /**
     * 根据ids批量删除实体
     * @param {?} ids
     * @return {?}
     */
    function (ids) {
        return this.dataService.removeByIds(ids);
    };
    /**
     * 根据id删除实体并执行保存
     */
    /**
     * 根据id删除实体并执行保存
     * @param {?} id
     * @return {?}
     */
    BefRepository.prototype.removeEntityAndSaveById = /**
     * 根据id删除实体并执行保存
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.dataService.removeAndSaveById(id);
    };
    /**
     * 删除子级
     */
    /**
     * 删除子级
     * @param {?} fpath
     * @param {?} id
     * @return {?}
     */
    BefRepository.prototype.removeEntityByPath = /**
     * 删除子级
     * @param {?} fpath
     * @param {?} id
     * @return {?}
     */
    function (fpath, id) {
        return this.dataService.removeByPath(fpath, id);
    };
    /**
     * 保存主键为id的实体
     */
    /**
     * 保存主键为id的实体
     * @param {?} id
     * @return {?}
     */
    BefRepository.prototype.saveEntityById = /**
     * 保存主键为id的实体
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.dataService.applyChangesById(id);
    };
    /**
     * 批量保存
     */
    /**
     * 批量保存
     * @return {?}
     */
    BefRepository.prototype.saveEntities = /**
     * 批量保存
     * @return {?}
     */
    function () {
        return this.dataService.applyChanges();
    };
    /**
     * 取消实体变更
     */
    /**
     * 取消实体变更
     * @return {?}
     */
    BefRepository.prototype.cancelEntityChanges = /**
     * 取消实体变更
     * @return {?}
     */
    function () {
        return this.dataService.cancelChanges();
    };
    /**
     * 清空Repositoy内的数据和变量
     */
    /**
     * 清空Repositoy内的数据和变量
     * @return {?}
     */
    BefRepository.prototype.reset = /**
     * 清空Repositoy内的数据和变量
     * @return {?}
     */
    function () {
        this.entityManager.reset();
        this.variableManager.reset();
        this.sessionService.clearBeSessionId();
    };
    return BefRepository;
}(Repository));
if (false) {
    /**
     * 名称
     * @type {?}
     */
    BefRepository.prototype.name;
    /**
     * Bef代理
     * @type {?}
     */
    BefRepository.prototype.apiProxyType;
    /**
     * 应用上下文
     * @type {?}
     */
    BefRepository.prototype.appContext;
    /**
     * 实体管理器
     * @type {?}
     */
    BefRepository.prototype.entityManager;
    /**
     * 变量管理器
     * @type {?}
     */
    BefRepository.prototype.variableManager;
    /**
     * API代理
     * @type {?}
     */
    BefRepository.prototype.apiProxy;
    /**
     * Bef会话管理
     * @type {?}
     */
    BefRepository.prototype.sessionService;
    /**
     * Bef数据操作
     * @type {?}
     */
    BefRepository.prototype.dataService;
    /**
     * @type {?}
     * @protected
     */
    BefRepository.prototype.injector;
}
export { BefRepository };
//# sourceMappingURL=data:application/json;base64,