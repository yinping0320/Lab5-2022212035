/**
 * @fileoverview added by tsickle
 * Generated from: lib/bef_entity_manager.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 * @Author: Witt
 * @Date: 2019-03-07 17:24:38
 * @Last Modified by:   Witt
 * @Last Modified time: 2019-03-07 17:24:38
 */
import { EntityManager } from '@farris/mobile-devkit';
import { BefChangeBuilder } from './bef_change_builder';
import { BefChangeHandler } from './bef_change_handler';
/**
 * 实体管理类：管理Entity和
 * \@todo
 * 1、实体管理应该放在Devkit中；
 * 2、目前只是简单代码拆分，待进一步明确职责。
 * @template T
 */
var /**
 * 实体管理类：管理Entity和
 * \@todo
 * 1、实体管理应该放在Devkit中；
 * 2、目前只是简单代码拆分，待进一步明确职责。
 * @template T
 */
BefEntityManager = /** @class */ (function (_super) {
    tslib_1.__extends(BefEntityManager, _super);
    /**
     * 构造函数
     */
    function BefEntityManager(entityCollection) {
        var _this = _super.call(this, entityCollection) || this;
        _this.changeBuilder = new BefChangeBuilder(_this.entityCollection.entityType, _this.entityCollection);
        _this.changeHandler = new BefChangeHandler();
        return _this;
    }
    /**
     * 获取数据变更
     */
    /**
     * 获取数据变更
     * @return {?}
     */
    BefEntityManager.prototype.buildAllEntityChangeDetails = /**
     * 获取数据变更
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var changeDetails = [];
        /** @type {?} */
        var entities = this.entityCollection.getAllEntities();
        entities.forEach((/**
         * @param {?} entity
         * @return {?}
         */
        function (entity) {
            if (entity.changes.length === 0) {
                return;
            }
            /** @type {?} */
            var changeDetail = _this.changeBuilder.build(entity.changes);
            // 防止空id的变更被提交
            // @todo：此处判断应该放到更底层，临时修复Bug。
            if (changeDetail && changeDetail.ChangeInfo && changeDetail.ChangeInfo.DataId) {
                changeDetails.push(changeDetail);
            }
        }));
        return changeDetails;
    };
    /**
     * 获取单个实体
     */
    /**
     * 获取单个实体
     * @param {?} id
     * @return {?}
     */
    BefEntityManager.prototype.buildEntityChangeDetailById = /**
     * 获取单个实体
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var entity = this.entityCollection.getEntityById(id);
        if (entity.changes.length === 0) {
            return null;
        }
        /** @type {?} */
        var changeDetail = this.changeBuilder.build(entity.changes);
        return changeDetail;
    };
    /**
     * 应用数据变更
     */
    /**
     * 应用数据变更
     * @param {?} changeDetails
     * @return {?}
     */
    BefEntityManager.prototype.handleDataChangeDetails = /**
     * 应用数据变更
     * @param {?} changeDetails
     * @return {?}
     */
    function (changeDetails) {
        this.changeHandler.handle(this.entityType, this.entityCollection, changeDetails);
    };
    // #endregion
    /**
     * 清空所有实体
     */
    // #endregion
    /**
     * 清空所有实体
     * @return {?}
     */
    BefEntityManager.prototype.reset = 
    // #endregion
    /**
     * 清空所有实体
     * @return {?}
     */
    function () {
        this.entityCollection.clear();
    };
    return BefEntityManager;
}(EntityManager));
if (false) {
    /**
     * ChangeDetail构造器
     * @type {?}
     */
    BefEntityManager.prototype.changeBuilder;
    /**
     * ChangeDetail处理器
     * @type {?}
     */
    BefEntityManager.prototype.changeHandler;
}
export { BefEntityManager };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX2VudGl0eV9tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtYmVmLyIsInNvdXJjZXMiOlsibGliL2JlZl9lbnRpdHlfbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFPQSxPQUFPLEVBQTRCLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRWhGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOzs7Ozs7OztBQVN4RDs7Ozs7Ozs7SUFBaUQsNENBQWdCO0lBWS9EOztPQUVHO0lBQ0gsMEJBQVksZ0JBQXFDO1FBQWpELFlBQ0Usa0JBQU0sZ0JBQWdCLENBQUMsU0FHeEI7UUFGQyxLQUFJLENBQUMsYUFBYSxHQUFHLElBQUksZ0JBQWdCLENBQUMsS0FBSSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBRSxLQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNuRyxLQUFJLENBQUMsYUFBYSxHQUFHLElBQUksZ0JBQWdCLEVBQUUsQ0FBQzs7SUFDOUMsQ0FBQztJQUVEOztPQUVHOzs7OztJQUNJLHNEQUEyQjs7OztJQUFsQztRQUFBLGlCQWdCQzs7WUFmTyxhQUFhLEdBQW1CLEVBQUU7O1lBQ2xDLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFO1FBQ3ZELFFBQVEsQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQyxNQUFjO1lBQzlCLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUMvQixPQUFPO2FBQ1I7O2dCQUNLLFlBQVksR0FBRyxLQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO1lBRTdELGNBQWM7WUFDZCw2QkFBNkI7WUFDN0IsSUFBSSxZQUFZLElBQUksWUFBWSxDQUFDLFVBQVUsSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRTtnQkFDN0UsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUNsQztRQUNILENBQUMsRUFBQyxDQUFDO1FBQ0gsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDSSxzREFBMkI7Ozs7O0lBQWxDLFVBQW1DLEVBQVU7O1lBQ3JDLE1BQU0sR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztRQUN0RCxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQztTQUNiOztZQUNLLFlBQVksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO1FBQzdELE9BQU8sWUFBWSxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7T0FFRzs7Ozs7O0lBQ0ksa0RBQXVCOzs7OztJQUE5QixVQUErQixhQUE2QjtRQUMxRCxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNuRixDQUFDO0lBRUQsYUFBYTtJQUViOztPQUVHOzs7Ozs7SUFDSSxnQ0FBSzs7Ozs7O0lBQVo7UUFDRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVILHVCQUFDO0FBQUQsQ0FBQyxBQXRFRCxDQUFpRCxhQUFhLEdBc0U3RDs7Ozs7O0lBakVDLHlDQUF1Qzs7Ozs7SUFLdkMseUNBQXVDOztBQThEekMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiBXaXR0XHJcbiAqIEBEYXRlOiAyMDE5LTAzLTA3IDE3OjI0OjM4XHJcbiAqIEBMYXN0IE1vZGlmaWVkIGJ5OiAgIFdpdHRcclxuICogQExhc3QgTW9kaWZpZWQgdGltZTogMjAxOS0wMy0wNyAxNzoyNDozOFxyXG4gKi9cclxuXHJcbmltcG9ydCB7IEVudGl0eSwgRW50aXR5Q29sbGVjdGlvbiwgRW50aXR5TWFuYWdlciB9IGZyb20gJ0BmYXJyaXMvbW9iaWxlLWRldmtpdCc7XHJcbmltcG9ydCB7IENoYW5nZURldGFpbH0gZnJvbSAnLi90eXBlcyc7XHJcbmltcG9ydCB7IEJlZkNoYW5nZUJ1aWxkZXIgfSBmcm9tICcuL2JlZl9jaGFuZ2VfYnVpbGRlcic7XHJcbmltcG9ydCB7IEJlZkNoYW5nZUhhbmRsZXIgfSBmcm9tICcuL2JlZl9jaGFuZ2VfaGFuZGxlcic7XHJcblxyXG5cclxuLyoqXHJcbiAqIOWunuS9k+euoeeQhuexu++8mueuoeeQhkVudGl0eeWSjFxyXG4gKiBAdG9kb1xyXG4gKiAx44CB5a6e5L2T566h55CG5bqU6K+l5pS+5ZyoRGV2a2l05Lit77ybXHJcbiAqIDLjgIHnm67liY3lj6rmmK/nroDljZXku6PnoIHmi4bliIbvvIzlvoXov5vkuIDmraXmmI7noa7ogYzotKPjgIJcclxuICovXHJcbmNsYXNzIEJlZkVudGl0eU1hbmFnZXI8VCBleHRlbmRzIEVudGl0eT4gZXh0ZW5kcyBFbnRpdHlNYW5hZ2VyPFQ+IHtcclxuXHJcbiAgLyoqXHJcbiAgICogQ2hhbmdlRGV0YWls5p6E6YCg5ZmoXHJcbiAgICovXHJcbiAgcHVibGljIGNoYW5nZUJ1aWxkZXI6IEJlZkNoYW5nZUJ1aWxkZXI7XHJcblxyXG4gIC8qKlxyXG4gICAqIENoYW5nZURldGFpbOWkhOeQhuWZqFxyXG4gICAqL1xyXG4gIHB1YmxpYyBjaGFuZ2VIYW5kbGVyOiBCZWZDaGFuZ2VIYW5kbGVyO1xyXG5cclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihlbnRpdHlDb2xsZWN0aW9uOiBFbnRpdHlDb2xsZWN0aW9uPFQ+KSB7XHJcbiAgICBzdXBlcihlbnRpdHlDb2xsZWN0aW9uKTtcclxuICAgIHRoaXMuY2hhbmdlQnVpbGRlciA9IG5ldyBCZWZDaGFuZ2VCdWlsZGVyKHRoaXMuZW50aXR5Q29sbGVjdGlvbi5lbnRpdHlUeXBlLCB0aGlzLmVudGl0eUNvbGxlY3Rpb24pO1xyXG4gICAgdGhpcy5jaGFuZ2VIYW5kbGVyID0gbmV3IEJlZkNoYW5nZUhhbmRsZXIoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluaVsOaNruWPmOabtFxyXG4gICAqL1xyXG4gIHB1YmxpYyBidWlsZEFsbEVudGl0eUNoYW5nZURldGFpbHMoKTogQ2hhbmdlRGV0YWlsW10ge1xyXG4gICAgY29uc3QgY2hhbmdlRGV0YWlsczogQ2hhbmdlRGV0YWlsW10gPSBbXTtcclxuICAgIGNvbnN0IGVudGl0aWVzID0gdGhpcy5lbnRpdHlDb2xsZWN0aW9uLmdldEFsbEVudGl0aWVzKCk7XHJcbiAgICBlbnRpdGllcy5mb3JFYWNoKChlbnRpdHk6IEVudGl0eSkgPT4ge1xyXG4gICAgICBpZiAoZW50aXR5LmNoYW5nZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnN0IGNoYW5nZURldGFpbCA9IHRoaXMuY2hhbmdlQnVpbGRlci5idWlsZChlbnRpdHkuY2hhbmdlcyk7XHJcblxyXG4gICAgICAvLyDpmLLmraLnqbppZOeahOWPmOabtOiiq+aPkOS6pFxyXG4gICAgICAvLyBAdG9kb++8muatpOWkhOWIpOaWreW6lOivpeaUvuWIsOabtOW6leWxgu+8jOS4tOaXtuS/ruWkjUJ1Z+OAglxyXG4gICAgICBpZiAoY2hhbmdlRGV0YWlsICYmIGNoYW5nZURldGFpbC5DaGFuZ2VJbmZvICYmIGNoYW5nZURldGFpbC5DaGFuZ2VJbmZvLkRhdGFJZCkge1xyXG4gICAgICAgIGNoYW5nZURldGFpbHMucHVzaChjaGFuZ2VEZXRhaWwpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBjaGFuZ2VEZXRhaWxzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5Y2V5Liq5a6e5L2TXHJcbiAgICovXHJcbiAgcHVibGljIGJ1aWxkRW50aXR5Q2hhbmdlRGV0YWlsQnlJZChpZDogc3RyaW5nKTogQ2hhbmdlRGV0YWlsIHtcclxuICAgIGNvbnN0IGVudGl0eSA9IHRoaXMuZW50aXR5Q29sbGVjdGlvbi5nZXRFbnRpdHlCeUlkKGlkKTtcclxuICAgIGlmIChlbnRpdHkuY2hhbmdlcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICBjb25zdCBjaGFuZ2VEZXRhaWwgPSB0aGlzLmNoYW5nZUJ1aWxkZXIuYnVpbGQoZW50aXR5LmNoYW5nZXMpO1xyXG4gICAgcmV0dXJuIGNoYW5nZURldGFpbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOW6lOeUqOaVsOaNruWPmOabtFxyXG4gICAqL1xyXG4gIHB1YmxpYyBoYW5kbGVEYXRhQ2hhbmdlRGV0YWlscyhjaGFuZ2VEZXRhaWxzOiBDaGFuZ2VEZXRhaWxbXSk6IHZvaWQge1xyXG4gICAgdGhpcy5jaGFuZ2VIYW5kbGVyLmhhbmRsZSh0aGlzLmVudGl0eVR5cGUsIHRoaXMuZW50aXR5Q29sbGVjdGlvbiwgY2hhbmdlRGV0YWlscyk7XHJcbiAgfVxyXG5cclxuICAvLyAjZW5kcmVnaW9uXHJcblxyXG4gIC8qKlxyXG4gICAqIOa4heepuuaJgOacieWunuS9k1xyXG4gICAqL1xyXG4gIHB1YmxpYyByZXNldCgpIHtcclxuICAgIHRoaXMuZW50aXR5Q29sbGVjdGlvbi5jbGVhcigpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7IEJlZkVudGl0eU1hbmFnZXIgfTtcclxuIl19