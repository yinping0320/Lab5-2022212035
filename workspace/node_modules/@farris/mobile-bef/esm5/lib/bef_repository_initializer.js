/**
 * @fileoverview added by tsickle
 * Generated from: lib/bef_repository_initializer.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { MetadataUtil, AppContext, InjectFlags, HttpClient } from '@farris/mobile-devkit';
import { VARIABLE_PROP_META } from './decorators';
import { BefEntityManager } from './bef_entity_manager';
import { BefVariableManager } from './bef_variable_manager';
import { BefSessionHandlingStrategyFactory, BefSessionService } from './session/index';
import { BefDataService } from './bef_data_service';
import { FrameworkSessionService } from './framework_session_service';
import { BE_SESSION_HANDLING_STRATEGY_TOKEN } from './tokens';
import { BefProxyExtend } from './bef_proxy_extend';
/**
 * BefRepository初始化器
 * \@summary
 * 为了抽离这部分路径，强制对外暴露了Repository的相关属性，待优化。
 */
var /**
 * BefRepository初始化器
 * \@summary
 * 为了抽离这部分路径，强制对外暴露了Repository的相关属性，待优化。
 */
BefRepositoryInitializer = /** @class */ (function () {
    /**
     * 构造函数
     */
    function BefRepositoryInitializer(repository) {
        this.repository = repository;
    }
    Object.defineProperty(BefRepositoryInitializer.prototype, "injector", {
        /**
         * 注入器
         */
        get: /**
         * 注入器
         * @private
         * @return {?}
         */
        function () {
            return this.repository.getInjector();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 初始化
     */
    /**
     * 初始化
     * @return {?}
     */
    BefRepositoryInitializer.prototype.init = /**
     * 初始化
     * @return {?}
     */
    function () {
        this.initAppContext();
        this.initEntityManager();
        this.initVariableManager();
        this.initApiProxy();
        this.initSessionService();
        this.initDataService();
    };
    /**
     * 初始化应用上下文
     */
    /**
     * 初始化应用上下文
     * @private
     * @return {?}
     */
    BefRepositoryInitializer.prototype.initAppContext = /**
     * 初始化应用上下文
     * @private
     * @return {?}
     */
    function () {
        this.repository.appContext = this.injector.get(AppContext);
    };
    /**
     * 初始化EntityManager
     */
    /**
     * 初始化EntityManager
     * @private
     * @return {?}
     */
    BefRepositoryInitializer.prototype.initEntityManager = /**
     * 初始化EntityManager
     * @private
     * @return {?}
     */
    function () {
        this.repository.entityManager = new BefEntityManager(this.repository.entityCollection);
    };
    /**
     * 初始化VariableManager
     */
    /**
     * 初始化VariableManager
     * @private
     * @return {?}
     */
    BefRepositoryInitializer.prototype.initVariableManager = /**
     * 初始化VariableManager
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ngVariables = MetadataUtil.getPropsMetadatasByName(this.repository.constructor, VARIABLE_PROP_META);
        this.repository.variableManager = new BefVariableManager(ngVariables);
    };
    /**
     * 初始化Proxy
     */
    /**
     * 初始化Proxy
     * @private
     * @return {?}
     */
    BefRepositoryInitializer.prototype.initApiProxy = /**
     * 初始化Proxy
     * @private
     * @return {?}
     */
    function () {
        this.repository.apiProxy = this.injector.get(this.repository.apiProxyType);
        /** @type {?} */
        var apiProxyExtend = new BefProxyExtend(this.repository);
        this.repository.apiProxy.setProxyExtend(apiProxyExtend);
    };
    /**
     * 初始化SessionService
     */
    /**
     * 初始化SessionService
     * @private
     * @return {?}
     */
    BefRepositoryInitializer.prototype.initSessionService = /**
     * 初始化SessionService
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var handlingStrategyName = this.injector.get(BE_SESSION_HANDLING_STRATEGY_TOKEN, null, InjectFlags.Optional);
        handlingStrategyName = handlingStrategyName || 'SeparatedSession';
        /** @type {?} */
        var frmSessionService = this.injector.get(FrameworkSessionService);
        /** @type {?} */
        var httpClient = this.injector.get(HttpClient);
        /** @type {?} */
        var baseUrl = "" + this.repository.apiProxy.baseUrl;
        /** @type {?} */
        var sessionHandlingStrategyFactory = new BefSessionHandlingStrategyFactory();
        /** @type {?} */
        var sessionHandlingStrategy = sessionHandlingStrategyFactory.create(handlingStrategyName, frmSessionService, baseUrl, httpClient);
        this.repository.sessionService = new BefSessionService(sessionHandlingStrategy);
    };
    /**
     * 初始化DataService
     */
    /**
     * 初始化DataService
     * @private
     * @return {?}
     */
    BefRepositoryInitializer.prototype.initDataService = /**
     * 初始化DataService
     * @private
     * @return {?}
     */
    function () {
        this.repository.dataService = new BefDataService(this.repository);
    };
    return BefRepositoryInitializer;
}());
if (false) {
    /**
     * BefRepository实例
     * @type {?}
     * @private
     */
    BefRepositoryInitializer.prototype.repository;
}
export { BefRepositoryInitializer };
//# sourceMappingURL=data:application/json;base64,