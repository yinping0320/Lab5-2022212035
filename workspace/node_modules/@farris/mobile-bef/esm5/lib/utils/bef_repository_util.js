/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/bef_repository_util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BefRepositoryUtil = /** @class */ (function () {
    function BefRepositoryUtil() {
    }
    /**
     * isExistUnsaveData
     */
    /**
     * isExistUnsaveData
     * @param {?} befRepository
     * @return {?}
     */
    BefRepositoryUtil.isExistUnsaveData = /**
     * isExistUnsaveData
     * @param {?} befRepository
     * @return {?}
     */
    function (befRepository) {
        /** @type {?} */
        var hasUnsavedData = false;
        if (!befRepository || !befRepository.entityCollection) {
            throw new Error('Current Object is null or it\'s entityCollection is null.');
        }
        /** @type {?} */
        var entityArray = befRepository.entityCollection.toArray();
        if (befRepository.dataChangeHistory.isChanged()) {
            return true;
        }
        for (var i = 0; i < entityArray.length; i++) {
            if (entityArray[i].changes.length > 0) {
                hasUnsavedData = true;
                break;
            }
        }
        return hasUnsavedData;
    };
    return BefRepositoryUtil;
}());
export { BefRepositoryUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX3JlcG9zaXRvcnlfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvbW9iaWxlLWJlZi8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9iZWZfcmVwb3NpdG9yeV91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUE7SUFBQTtJQXlCQSxDQUFDO0lBdkJDOztPQUVHOzs7Ozs7SUFDVyxtQ0FBaUI7Ozs7O0lBQS9CLFVBQWdDLGFBQWlDOztZQUMzRCxjQUFjLEdBQUcsS0FBSztRQUMxQixJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsYUFBYSxDQUFDLGdCQUFnQixFQUFFO1lBQ3JELE1BQU0sSUFBSSxLQUFLLENBQUMsMkRBQTJELENBQUMsQ0FBQztTQUM5RTs7WUFFSyxXQUFXLEdBQUcsYUFBYSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRTtRQUM1RCxJQUFJLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLEVBQUUsRUFBRTtZQUMvQyxPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsSUFBSSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ3JDLGNBQWMsR0FBRyxJQUFJLENBQUM7Z0JBQ3RCLE1BQU07YUFDUDtTQUNGO1FBRUQsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQztJQUVILHdCQUFDO0FBQUQsQ0FBQyxBQXpCRCxJQXlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJlZlJlcG9zaXRvcnkgfSBmcm9tICcuLi9iZWZfcmVwb3NpdG9yeSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQmVmUmVwb3NpdG9yeVV0aWwge1xyXG5cclxuICAvKipcclxuICAgKiBpc0V4aXN0VW5zYXZlRGF0YVxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgaXNFeGlzdFVuc2F2ZURhdGEoYmVmUmVwb3NpdG9yeTogQmVmUmVwb3NpdG9yeTxhbnk+KTogYm9vbGVhbiB7XHJcbiAgICBsZXQgaGFzVW5zYXZlZERhdGEgPSBmYWxzZTtcclxuICAgIGlmICghYmVmUmVwb3NpdG9yeSB8fCAhYmVmUmVwb3NpdG9yeS5lbnRpdHlDb2xsZWN0aW9uKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ3VycmVudCBPYmplY3QgaXMgbnVsbCBvciBpdFxcJ3MgZW50aXR5Q29sbGVjdGlvbiBpcyBudWxsLicpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGVudGl0eUFycmF5ID0gYmVmUmVwb3NpdG9yeS5lbnRpdHlDb2xsZWN0aW9uLnRvQXJyYXkoKTtcclxuICAgIGlmIChiZWZSZXBvc2l0b3J5LmRhdGFDaGFuZ2VIaXN0b3J5LmlzQ2hhbmdlZCgpKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbnRpdHlBcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAoZW50aXR5QXJyYXlbaV0uY2hhbmdlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgaGFzVW5zYXZlZERhdGEgPSB0cnVlO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGhhc1Vuc2F2ZWREYXRhO1xyXG4gIH1cclxuXHJcbn1cclxuIl19