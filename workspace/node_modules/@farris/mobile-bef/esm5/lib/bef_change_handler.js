/**
 * @fileoverview added by tsickle
 * Generated from: lib/bef_change_handler.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EntityCollection } from '@farris/mobile-devkit';
import { EntityUtil } from './utils/index';
import { ChangeDetailType } from './types';
/**
 * 处理服务器端变更
 */
var /**
 * 处理服务器端变更
 */
BefChangeHandler = /** @class */ (function () {
    /**
     * 构造函数
     */
    function BefChangeHandler() {
    }
    /**
     * 处理Bef变更集
     */
    /**
     * 处理Bef变更集
     * @param {?} entityType
     * @param {?} entityCollection
     * @param {?} changeDetails
     * @return {?}
     */
    BefChangeHandler.prototype.handle = /**
     * 处理Bef变更集
     * @param {?} entityType
     * @param {?} entityCollection
     * @param {?} changeDetails
     * @return {?}
     */
    function (entityType, entityCollection, changeDetails) {
        this.handleChangeDetails(entityType, entityCollection, changeDetails);
    };
    /**
     * 处理Bef变更集（批量）
     */
    /**
     * 处理Bef变更集（批量）
     * @param {?} entityType
     * @param {?} entityList
     * @param {?} changeDetails
     * @return {?}
     */
    BefChangeHandler.prototype.handleChangeDetails = /**
     * 处理Bef变更集（批量）
     * @param {?} entityType
     * @param {?} entityList
     * @param {?} changeDetails
     * @return {?}
     */
    function (entityType, entityList, changeDetails) {
        var _this = this;
        if (!changeDetails) {
            return;
        }
        changeDetails.forEach((/**
         * @param {?} changeDetail
         * @return {?}
         */
        function (changeDetail) {
            /** @type {?} */
            var id = (/** @type {?} */ ((changeDetail.ChangeInfo.dataId || changeDetail.ChangeInfo.DataId)));
            /** @type {?} */
            var entity = _this.getEntityById(entityList, id);
            if (!entity) {
                return;
            }
            _this.handleChangeDetail(entityType, entity, changeDetail);
        }));
    };
    /**
     * 处理Bef变更集（单条）
     */
    /**
     * 处理Bef变更集（单条）
     * @param {?} entityType
     * @param {?} entity
     * @param {?} changeDetail
     * @return {?}
     */
    BefChangeHandler.prototype.handleChangeDetail = /**
     * 处理Bef变更集（单条）
     * @param {?} entityType
     * @param {?} entity
     * @param {?} changeDetail
     * @return {?}
     */
    function (entityType, entity, changeDetail) {
        var _this = this;
        if (!changeDetail || !entity) {
            return;
        }
        // 只处理值变更，其他变更待进一步验证。
        if (changeDetail.ChangeType !== ChangeDetailType.Modify) {
            return;
        }
        /** @type {?} */
        var changeInfo = changeDetail.ChangeInfo;
        Object.keys(changeInfo).forEach((/**
         * @param {?} propName
         * @return {?}
         */
        function (propName) {
            var _a = EntityUtil.getPropInfo(entityType, propName), propType = _a.propType, propEntityType = _a.propEntityType;
            if (propType === 'NgField') {
                // 简单属性：更新值
                entity[propName] = changeInfo[propName];
            }
            else if (propType === 'NgObject') {
                /** @type {?} */
                var childEntity = (/** @type {?} */ (entity[propName]));
                if (childEntity.primaryKey) {
                    // 关联对象：重新加载数据
                    /** @type {?} */
                    var childEntityData = changeInfo[propName];
                    childEntity.load(childEntityData);
                }
                else {
                    // 值对象：递归处理变更
                    /** @type {?} */
                    var childChangeDetail = (/** @type {?} */ (changeInfo[propName]));
                    _this.handleChangeDetail(propEntityType, childEntity, childChangeDetail);
                }
            }
            else if (propType === 'NgList') {
                // 子列表：递归处理变更集合
                /** @type {?} */
                var childEntityList = (/** @type {?} */ (entity[propName]));
                /** @type {?} */
                var childChangeDetails = (/** @type {?} */ (changeInfo[propName]));
                _this.handleChangeDetails(propEntityType, childEntityList, childChangeDetails);
            }
        }));
    };
    /**
     * 根据id获取实体，屏蔽EntityCollection和EntityList之间的差异
     */
    /**
     * 根据id获取实体，屏蔽EntityCollection和EntityList之间的差异
     * @private
     * @param {?} entityList
     * @param {?} id
     * @return {?}
     */
    BefChangeHandler.prototype.getEntityById = /**
     * 根据id获取实体，屏蔽EntityCollection和EntityList之间的差异
     * @private
     * @param {?} entityList
     * @param {?} id
     * @return {?}
     */
    function (entityList, id) {
        /** @type {?} */
        var target;
        if (entityList instanceof EntityCollection) {
            target = entityList.getEntityById(id);
        }
        else {
            target = entityList.get(id);
        }
        return target ? target : null;
    };
    return BefChangeHandler;
}());
export { BefChangeHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX2NoYW5nZV9oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9tb2JpbGUtYmVmLyIsInNvdXJjZXMiOlsibGliL2JlZl9jaGFuZ2VfaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBNEIsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBZ0IsTUFBTSxTQUFTLENBQUM7Ozs7QUFLekQ7Ozs7SUFFRTs7T0FFRztJQUNIO0lBQ0EsQ0FBQztJQUVEOztPQUVHOzs7Ozs7OztJQUNILGlDQUFNOzs7Ozs7O0lBQU4sVUFDRSxVQUF3QixFQUN4QixnQkFBMEMsRUFDMUMsYUFBNkI7UUFFN0IsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRUQ7O09BRUc7Ozs7Ozs7O0lBQ0gsOENBQW1COzs7Ozs7O0lBQW5CLFVBQ0UsVUFBd0IsRUFDeEIsVUFBeUQsRUFDekQsYUFBNkI7UUFIL0IsaUJBaUJDO1FBWkMsSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUNsQixPQUFPO1NBQ1I7UUFFRCxhQUFhLENBQUMsT0FBTzs7OztRQUFDLFVBQUMsWUFBMEI7O2dCQUN6QyxFQUFFLEdBQUcsbUJBQUEsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFVOztnQkFDakYsTUFBTSxHQUFHLEtBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQztZQUNqRCxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNYLE9BQU87YUFDUjtZQUNELEtBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQzVELENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHOzs7Ozs7OztJQUNILDZDQUFrQjs7Ozs7OztJQUFsQixVQUNFLFVBQXdCLEVBQ3hCLE1BQWMsRUFDZCxZQUEwQjtRQUg1QixpQkE2Q0M7UUF2Q0MsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUM1QixPQUFPO1NBQ1I7UUFFRCxxQkFBcUI7UUFDckIsSUFBSSxZQUFZLENBQUMsVUFBVSxLQUFLLGdCQUFnQixDQUFDLE1BQU0sRUFBRTtZQUN2RCxPQUFPO1NBQ1I7O1lBRUssVUFBVSxHQUFHLFlBQVksQ0FBQyxVQUFVO1FBQzFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTzs7OztRQUFDLFVBQUMsUUFBZ0I7WUFDekMsSUFBQSxpREFBMkUsRUFBekUsc0JBQVEsRUFBRSxrQ0FBK0Q7WUFDakYsSUFBSSxRQUFRLEtBQUssU0FBUyxFQUFFO2dCQUUxQixXQUFXO2dCQUNYLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDekM7aUJBQU0sSUFBSSxRQUFRLEtBQUssVUFBVSxFQUFFOztvQkFDNUIsV0FBVyxHQUFHLG1CQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBVTtnQkFDOUMsSUFBSSxXQUFXLENBQUMsVUFBVSxFQUFFOzs7d0JBR3BCLGVBQWUsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDO29CQUM1QyxXQUFXLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO2lCQUVuQztxQkFBTTs7O3dCQUdDLGlCQUFpQixHQUFHLG1CQUFBLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBZ0I7b0JBQzlELEtBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixDQUFDLENBQUM7aUJBQ3pFO2FBRUY7aUJBQU0sSUFBSSxRQUFRLEtBQUssUUFBUSxFQUFFOzs7b0JBRzFCLGVBQWUsR0FBRyxtQkFBQSxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQXNCOztvQkFDeEQsa0JBQWtCLEdBQUcsbUJBQUEsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFrQjtnQkFDakUsS0FBSSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsRUFBRSxlQUFlLEVBQUUsa0JBQWtCLENBQUMsQ0FBQzthQUMvRTtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHOzs7Ozs7OztJQUNLLHdDQUFhOzs7Ozs7O0lBQXJCLFVBQXNCLFVBQXlELEVBQUUsRUFBVTs7WUFDckYsTUFBYztRQUNsQixJQUFJLFVBQVUsWUFBWSxnQkFBZ0IsRUFBRTtZQUMxQyxNQUFNLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUN2QzthQUFNO1lBQ0wsTUFBTSxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDN0I7UUFDRCxPQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDaEMsQ0FBQztJQUdILHVCQUFDO0FBQUQsQ0FBQyxBQXpHRCxJQXlHQztBQUVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZSwgRW50aXR5LCBFbnRpdHlMaXN0LCBFbnRpdHlDb2xsZWN0aW9uIH0gZnJvbSAnQGZhcnJpcy9tb2JpbGUtZGV2a2l0JztcclxuaW1wb3J0IHsgRW50aXR5VXRpbCB9IGZyb20gJy4vdXRpbHMvaW5kZXgnO1xyXG5pbXBvcnQgeyBDaGFuZ2VEZXRhaWxUeXBlLCBDaGFuZ2VEZXRhaWwgfSBmcm9tICcuL3R5cGVzJztcclxuXHJcbi8qKlxyXG4gKiDlpITnkIbmnI3liqHlmajnq6/lj5jmm7RcclxuICovXHJcbmNsYXNzIEJlZkNoYW5nZUhhbmRsZXIge1xyXG5cclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWkhOeQhkJlZuWPmOabtOmbhlxyXG4gICAqL1xyXG4gIGhhbmRsZShcclxuICAgIGVudGl0eVR5cGU6IFR5cGU8RW50aXR5PixcclxuICAgIGVudGl0eUNvbGxlY3Rpb246IEVudGl0eUNvbGxlY3Rpb248RW50aXR5PixcclxuICAgIGNoYW5nZURldGFpbHM6IENoYW5nZURldGFpbFtdXHJcbiAgKSB7XHJcbiAgICB0aGlzLmhhbmRsZUNoYW5nZURldGFpbHMoZW50aXR5VHlwZSwgZW50aXR5Q29sbGVjdGlvbiwgY2hhbmdlRGV0YWlscyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlpITnkIZCZWblj5jmm7Tpm4bvvIjmibnph4/vvIlcclxuICAgKi9cclxuICBoYW5kbGVDaGFuZ2VEZXRhaWxzKFxyXG4gICAgZW50aXR5VHlwZTogVHlwZTxFbnRpdHk+LFxyXG4gICAgZW50aXR5TGlzdDogRW50aXR5TGlzdDxFbnRpdHk+IHwgRW50aXR5Q29sbGVjdGlvbjxFbnRpdHk+LFxyXG4gICAgY2hhbmdlRGV0YWlsczogQ2hhbmdlRGV0YWlsW11cclxuICApIHtcclxuICAgIGlmICghY2hhbmdlRGV0YWlscykge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlRGV0YWlscy5mb3JFYWNoKChjaGFuZ2VEZXRhaWw6IENoYW5nZURldGFpbCkgPT4ge1xyXG4gICAgICBjb25zdCBpZCA9IChjaGFuZ2VEZXRhaWwuQ2hhbmdlSW5mby5kYXRhSWQgfHwgY2hhbmdlRGV0YWlsLkNoYW5nZUluZm8uRGF0YUlkKSBhcyBzdHJpbmc7XHJcbiAgICAgIGNvbnN0IGVudGl0eSA9IHRoaXMuZ2V0RW50aXR5QnlJZChlbnRpdHlMaXN0LCBpZCk7XHJcbiAgICAgIGlmICghZW50aXR5KSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlRGV0YWlsKGVudGl0eVR5cGUsIGVudGl0eSwgY2hhbmdlRGV0YWlsKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5aSE55CGQmVm5Y+Y5pu06ZuG77yI5Y2V5p2h77yJXHJcbiAgICovXHJcbiAgaGFuZGxlQ2hhbmdlRGV0YWlsKFxyXG4gICAgZW50aXR5VHlwZTogVHlwZTxFbnRpdHk+LFxyXG4gICAgZW50aXR5OiBFbnRpdHksXHJcbiAgICBjaGFuZ2VEZXRhaWw6IENoYW5nZURldGFpbFxyXG4gICkge1xyXG5cclxuICAgIGlmICghY2hhbmdlRGV0YWlsIHx8ICFlbnRpdHkpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOWPquWkhOeQhuWAvOWPmOabtO+8jOWFtuS7luWPmOabtOW+hei/m+S4gOatpemqjOivgeOAglxyXG4gICAgaWYgKGNoYW5nZURldGFpbC5DaGFuZ2VUeXBlICE9PSBDaGFuZ2VEZXRhaWxUeXBlLk1vZGlmeSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY2hhbmdlSW5mbyA9IGNoYW5nZURldGFpbC5DaGFuZ2VJbmZvO1xyXG4gICAgT2JqZWN0LmtleXMoY2hhbmdlSW5mbykuZm9yRWFjaCgocHJvcE5hbWU6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zdCB7IHByb3BUeXBlLCBwcm9wRW50aXR5VHlwZSB9ID0gRW50aXR5VXRpbC5nZXRQcm9wSW5mbyhlbnRpdHlUeXBlLCBwcm9wTmFtZSk7XHJcbiAgICAgIGlmIChwcm9wVHlwZSA9PT0gJ05nRmllbGQnKSB7XHJcblxyXG4gICAgICAgIC8vIOeugOWNleWxnuaAp++8muabtOaWsOWAvFxyXG4gICAgICAgIGVudGl0eVtwcm9wTmFtZV0gPSBjaGFuZ2VJbmZvW3Byb3BOYW1lXTtcclxuICAgICAgfSBlbHNlIGlmIChwcm9wVHlwZSA9PT0gJ05nT2JqZWN0Jykge1xyXG4gICAgICAgIGNvbnN0IGNoaWxkRW50aXR5ID0gZW50aXR5W3Byb3BOYW1lXSBhcyBFbnRpdHk7XHJcbiAgICAgICAgaWYgKGNoaWxkRW50aXR5LnByaW1hcnlLZXkpIHtcclxuXHJcbiAgICAgICAgICAvLyDlhbPogZTlr7nosaHvvJrph43mlrDliqDovb3mlbDmja5cclxuICAgICAgICAgIGNvbnN0IGNoaWxkRW50aXR5RGF0YSA9IGNoYW5nZUluZm9bcHJvcE5hbWVdO1xyXG4gICAgICAgICAgY2hpbGRFbnRpdHkubG9hZChjaGlsZEVudGl0eURhdGEpO1xyXG5cclxuICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgIC8vIOWAvOWvueixoe+8mumAkuW9kuWkhOeQhuWPmOabtFxyXG4gICAgICAgICAgY29uc3QgY2hpbGRDaGFuZ2VEZXRhaWwgPSBjaGFuZ2VJbmZvW3Byb3BOYW1lXSBhcyBDaGFuZ2VEZXRhaWw7XHJcbiAgICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZURldGFpbChwcm9wRW50aXR5VHlwZSwgY2hpbGRFbnRpdHksIGNoaWxkQ2hhbmdlRGV0YWlsKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICB9IGVsc2UgaWYgKHByb3BUeXBlID09PSAnTmdMaXN0Jykge1xyXG5cclxuICAgICAgICAvLyDlrZDliJfooajvvJrpgJLlvZLlpITnkIblj5jmm7Tpm4blkIhcclxuICAgICAgICBjb25zdCBjaGlsZEVudGl0eUxpc3QgPSBlbnRpdHlbcHJvcE5hbWVdIGFzIEVudGl0eUxpc3Q8RW50aXR5PjtcclxuICAgICAgICBjb25zdCBjaGlsZENoYW5nZURldGFpbHMgPSBjaGFuZ2VJbmZvW3Byb3BOYW1lXSBhcyBDaGFuZ2VEZXRhaWxbXTtcclxuICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZURldGFpbHMocHJvcEVudGl0eVR5cGUsIGNoaWxkRW50aXR5TGlzdCwgY2hpbGRDaGFuZ2VEZXRhaWxzKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmoLnmja5pZOiOt+WPluWunuS9k++8jOWxj+iUvUVudGl0eUNvbGxlY3Rpb27lkoxFbnRpdHlMaXN05LmL6Ze055qE5beu5byCXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBnZXRFbnRpdHlCeUlkKGVudGl0eUxpc3Q6IEVudGl0eUxpc3Q8RW50aXR5PiB8IEVudGl0eUNvbGxlY3Rpb248RW50aXR5PiwgaWQ6IHN0cmluZyk6IEVudGl0eSB7XHJcbiAgICBsZXQgdGFyZ2V0OiBFbnRpdHk7XHJcbiAgICBpZiAoZW50aXR5TGlzdCBpbnN0YW5jZW9mIEVudGl0eUNvbGxlY3Rpb24pIHtcclxuICAgICAgdGFyZ2V0ID0gZW50aXR5TGlzdC5nZXRFbnRpdHlCeUlkKGlkKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRhcmdldCA9IGVudGl0eUxpc3QuZ2V0KGlkKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0YXJnZXQgPyB0YXJnZXQgOiBudWxsO1xyXG4gIH1cclxuXHJcblxyXG59XHJcblxyXG5leHBvcnQgeyBCZWZDaGFuZ2VIYW5kbGVyIH07XHJcbiJdfQ==