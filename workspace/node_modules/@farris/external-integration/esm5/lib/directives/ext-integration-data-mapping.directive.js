/**
 * @fileoverview added by tsickle
 * Generated from: lib/directives/ext-integration-data-mapping.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, EventEmitter, Input, Optional, Output } from "@angular/core";
import { ViewModel } from "@farris/devkit";
import { ExternalIntegrationComponent } from "../../lib/component/external-integration/external-integration.component";
var ExtIntegrationDataMappingDirective = /** @class */ (function () {
    function ExtIntegrationDataMappingDirective(vm, extIntegrationComponent) {
        this.vm = vm;
        this.extIntegrationComponent = extIntegrationComponent;
        this.showModal = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ExtIntegrationDataMappingDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.extIntegrationComponent.selectSapData.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.mappingData(data, _this.myField);
        }));
    };
    /**
     * 字段映射
     * @param sapData sap返回信息
     * @param mappingField 映射关系
     */
    /**
     * 字段映射
     * @param {?} sapData sap返回信息
     * @param {?} mappingField 映射关系
     * @return {?}
     */
    ExtIntegrationDataMappingDirective.prototype.mappingData = /**
     * 字段映射
     * @param {?} sapData sap返回信息
     * @param {?} mappingField 映射关系
     * @return {?}
     */
    function (sapData, mappingField) {
        var _this = this;
        /** @type {?} */
        var helpFields = Object.keys(mappingField);
        helpFields.forEach((/**
         * @param {?} fieldName
         * @return {?}
         */
        function (fieldName) {
            /** @type {?} */
            var pathArr = _this.getBindingPathArray();
            // 获取字段值
            /** @type {?} */
            var val;
            if (sapData) {
                val = sapData[fieldName];
            }
            _this.vm.bindingData.setValue(pathArr.concat(mappingField[fieldName]), val, true, true);
        }));
    };
    /**
     * @private
     * @return {?}
     */
    ExtIntegrationDataMappingDirective.prototype.getBindingPathArray = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var path = this.vm.bindingPath;
        if (path) {
            return path.split("/").filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n !== ""; }));
        }
        return [];
    };
    ExtIntegrationDataMappingDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[extIntegration-dataMapping]",
                },] }
    ];
    /** @nocollapse */
    ExtIntegrationDataMappingDirective.ctorParameters = function () { return [
        { type: ViewModel, decorators: [{ type: Optional }] },
        { type: ExternalIntegrationComponent }
    ]; };
    ExtIntegrationDataMappingDirective.propDecorators = {
        myField: [{ type: Input, args: ["mapFields",] }],
        showModal: [{ type: Output }]
    };
    return ExtIntegrationDataMappingDirective;
}());
export { ExtIntegrationDataMappingDirective };
if (false) {
    /** @type {?} */
    ExtIntegrationDataMappingDirective.prototype.myField;
    /** @type {?} */
    ExtIntegrationDataMappingDirective.prototype.showModal;
    /**
     * @type {?}
     * @private
     */
    ExtIntegrationDataMappingDirective.prototype.vm;
    /**
     * @type {?}
     * @private
     */
    ExtIntegrationDataMappingDirective.prototype.extIntegrationComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0LWludGVncmF0aW9uLWRhdGEtbWFwcGluZy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVybmFsLWludGVncmF0aW9uLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvZXh0LWludGVncmF0aW9uLWRhdGEtbWFwcGluZy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsUUFBUSxFQUNSLE1BQU0sRUFDUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUcsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0seUVBQXlFLENBQUM7QUFDdkg7SUFPRSw0Q0FDc0IsRUFBYSxFQUN6Qix1QkFBcUQ7UUFEekMsT0FBRSxHQUFGLEVBQUUsQ0FBVztRQUN6Qiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQThCO1FBSHJELGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBSXRDLENBQUM7Ozs7SUFFSixxREFBUTs7O0lBQVI7UUFBQSxpQkFJQztRQUhDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxhQUFhLENBQUMsU0FBUzs7OztRQUFDLFVBQUMsSUFBUTtZQUM1RCxLQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxLQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkMsQ0FBQyxFQUFDLENBQUE7SUFDSixDQUFDO0lBR0Q7Ozs7T0FJRzs7Ozs7OztJQUNILHdEQUFXOzs7Ozs7SUFBWCxVQUFZLE9BQU8sRUFBRSxZQUFZO1FBQWpDLGlCQWdCQzs7WUFmSyxVQUFVLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDMUMsVUFBVSxDQUFDLE9BQU87Ozs7UUFBQyxVQUFDLFNBQWM7O2dCQUM1QixPQUFPLEdBQUcsS0FBSSxDQUFDLG1CQUFtQixFQUFFOzs7Z0JBRXBDLEdBQVE7WUFDWixJQUFJLE9BQU8sRUFBRTtnQkFDWCxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQzFCO1lBQ0QsS0FBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUMxQixPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUN2QyxHQUFHLEVBQ0gsSUFBSSxFQUNKLElBQUksQ0FDTCxDQUFDO1FBQ0osQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVPLGdFQUFtQjs7OztJQUEzQjs7WUFDUSxJQUFJLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXO1FBQ2hDLElBQUksSUFBSSxFQUFFO1lBQ1IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU07Ozs7WUFBQyxVQUFDLENBQUMsSUFBSyxPQUFBLENBQUMsS0FBSyxFQUFFLEVBQVIsQ0FBUSxFQUFDLENBQUM7U0FDaEQ7UUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7O2dCQWhERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDhCQUE4QjtpQkFFekM7Ozs7Z0JBTFMsU0FBUyx1QkFVZCxRQUFRO2dCQVRKLDRCQUE0Qjs7OzBCQU1sQyxLQUFLLFNBQUMsV0FBVzs0QkFDakIsTUFBTTs7SUE2Q1QseUNBQUM7Q0FBQSxBQW5ERCxJQW1EQztTQS9DWSxrQ0FBa0M7OztJQUM3QyxxREFBaUM7O0lBQ2pDLHVEQUF5Qzs7Ozs7SUFFdkMsZ0RBQWlDOzs7OztJQUNqQyxxRUFBNkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIERpcmVjdGl2ZSxcclxuICBFdmVudEVtaXR0ZXIsXHJcbiAgSW5wdXQsXHJcbiAgT3B0aW9uYWwsXHJcbiAgT3V0cHV0XHJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgIFZpZXdNb2RlbCB9IGZyb20gXCJAZmFycmlzL2RldmtpdFwiO1xyXG5pbXBvcnQgeyBFeHRlcm5hbEludGVncmF0aW9uQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uL2xpYi9jb21wb25lbnQvZXh0ZXJuYWwtaW50ZWdyYXRpb24vZXh0ZXJuYWwtaW50ZWdyYXRpb24uY29tcG9uZW50XCI7XHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiBcIltleHRJbnRlZ3JhdGlvbi1kYXRhTWFwcGluZ11cIixcclxuICBcclxufSlcclxuZXhwb3J0IGNsYXNzIEV4dEludGVncmF0aW9uRGF0YU1hcHBpbmdEaXJlY3RpdmUge1xyXG4gIEBJbnB1dChcIm1hcEZpZWxkc1wiKSBteUZpZWxkOiBhbnk7XHJcbiAgQE91dHB1dCgpIHNob3dNb2RhbCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgdm06IFZpZXdNb2RlbCxcclxuICAgIHByaXZhdGUgZXh0SW50ZWdyYXRpb25Db21wb25lbnQ6IEV4dGVybmFsSW50ZWdyYXRpb25Db21wb25lbnRcclxuICApIHt9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5leHRJbnRlZ3JhdGlvbkNvbXBvbmVudC5zZWxlY3RTYXBEYXRhLnN1YnNjcmliZSgoZGF0YTphbnkpID0+IHtcclxuICAgICAgdGhpcy5tYXBwaW5nRGF0YShkYXRhLCB0aGlzLm15RmllbGQpO1xyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIOWtl+auteaYoOWwhFxyXG4gICAqIEBwYXJhbSBzYXBEYXRhIHNhcOi/lOWbnuS/oeaBr1xyXG4gICAqIEBwYXJhbSBtYXBwaW5nRmllbGQg5pig5bCE5YWz57O7XHJcbiAgICovXHJcbiAgbWFwcGluZ0RhdGEoc2FwRGF0YSwgbWFwcGluZ0ZpZWxkKSB7XHJcbiAgICBsZXQgaGVscEZpZWxkcyA9IE9iamVjdC5rZXlzKG1hcHBpbmdGaWVsZCk7XHJcbiAgICBoZWxwRmllbGRzLmZvckVhY2goKGZpZWxkTmFtZTogYW55KSA9PiB7XHJcbiAgICAgIGxldCBwYXRoQXJyID0gdGhpcy5nZXRCaW5kaW5nUGF0aEFycmF5KCk7XHJcbiAgICAgIC8vIOiOt+WPluWtl+auteWAvFxyXG4gICAgICBsZXQgdmFsOiBhbnk7XHJcbiAgICAgIGlmIChzYXBEYXRhKSB7XHJcbiAgICAgICAgdmFsID0gc2FwRGF0YVtmaWVsZE5hbWVdO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMudm0uYmluZGluZ0RhdGEuc2V0VmFsdWUoXHJcbiAgICAgICAgcGF0aEFyci5jb25jYXQobWFwcGluZ0ZpZWxkW2ZpZWxkTmFtZV0pLFxyXG4gICAgICAgIHZhbCxcclxuICAgICAgICB0cnVlLFxyXG4gICAgICAgIHRydWVcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRCaW5kaW5nUGF0aEFycmF5KCk6IGFueVtdIHtcclxuICAgIGNvbnN0IHBhdGggPSB0aGlzLnZtLmJpbmRpbmdQYXRoO1xyXG4gICAgaWYgKHBhdGgpIHtcclxuICAgICAgcmV0dXJuIHBhdGguc3BsaXQoXCIvXCIpLmZpbHRlcigobikgPT4gbiAhPT0gXCJcIik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gW107XHJcbiAgfVxyXG5cclxuICBcclxufVxyXG4iXX0=