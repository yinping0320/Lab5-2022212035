/**
 * @fileoverview added by tsickle
 * Generated from: lib/component/external-integration/external-integration-service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient } from "@angular/common/http";
import { Injectable, Output, EventEmitter } from "@angular/core";
import { VariableParseService, ViewModel } from "@farris/devkit";
var ExternalIntegrationService = /** @class */ (function () {
    function ExternalIntegrationService(http, variableParseService, vm) {
        this.http = http;
        this.variableParseService = variableParseService;
        this.vm = vm;
        this.sapData = new EventEmitter();
        this.sapUrl = "/api/runtime/icc/v1.0/externalServiceOpenApi/invokeService";
    }
    /**
     * 调用外部服务
     */
    /**
     * 调用外部服务
     * @param {?} externalParams
     * @param {?} serviceCode
     * @return {?}
     */
    ExternalIntegrationService.prototype.queryExtIntegrationService = /**
     * 调用外部服务
     * @param {?} externalParams
     * @param {?} serviceCode
     * @return {?}
     */
    function (externalParams, serviceCode) {
        var _this = this;
        /** @type {?} */
        var req = this.assembleSapRequest(externalParams, serviceCode);
        this.http.post(this.sapUrl, req).subscribe((/**
         * @param {?} response
         * @return {?}
         */
        function (response) {
            /** @type {?} */
            var respObj = Object.create(response);
            if (!respObj || !respObj.success) {
                return;
            }
            /** @type {?} */
            var resp = Object.create(respObj);
            /** @type {?} */
            var sapData = resp.data;
            _this.sapData.emit(sapData);
        }), (/**
         * @param {?} error
         * @return {?}
         */
        function (error) {
            console.log(error);
            _this.sapData.emit({});
        }));
    };
    /**
     * 组装sap api入参
     */
    /**
     * 组装sap api入参
     * @private
     * @param {?} externalParams
     * @param {?} serviceCode
     * @return {?}
     */
    ExternalIntegrationService.prototype.assembleSapRequest = /**
     * 组装sap api入参
     * @private
     * @param {?} externalParams
     * @param {?} serviceCode
     * @return {?}
     */
    function (externalParams, serviceCode) {
        /** @type {?} */
        var params = JSON.parse(JSON.stringify(externalParams));
        /** @type {?} */
        var requestParam = {
            code: serviceCode,
            params: this.variableParseService.parse(params, this.vm.frameContext),
        };
        return requestParam;
    };
    ExternalIntegrationService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ExternalIntegrationService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: VariableParseService },
        { type: ViewModel }
    ]; };
    ExternalIntegrationService.propDecorators = {
        sapData: [{ type: Output }]
    };
    return ExternalIntegrationService;
}());
export { ExternalIntegrationService };
if (false) {
    /** @type {?} */
    ExternalIntegrationService.prototype.sapData;
    /** @type {?} */
    ExternalIntegrationService.prototype.sapUrl;
    /**
     * @type {?}
     * @private
     */
    ExternalIntegrationService.prototype.http;
    /**
     * @type {?}
     * @private
     */
    ExternalIntegrationService.prototype.variableParseService;
    /**
     * @type {?}
     * @private
     */
    ExternalIntegrationService.prototype.vm;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZXJuYWwtaW50ZWdyYXRpb24tc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZXh0ZXJuYWwtaW50ZWdyYXRpb24vIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50L2V4dGVybmFsLWludGVncmF0aW9uL2V4dGVybmFsLWludGVncmF0aW9uLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVqRTtJQUVFLG9DQUNVLElBQWdCLEVBQ2hCLG9CQUEwQyxFQUMxQyxFQUFhO1FBRmIsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUNoQix5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBQzFDLE9BQUUsR0FBRixFQUFFLENBQVc7UUFFYixZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUV2QyxXQUFNLEdBQUcsNERBQTRELENBQUM7SUFIbkUsQ0FBQztJQUtKOztPQUVHOzs7Ozs7O0lBQ0gsK0RBQTBCOzs7Ozs7SUFBMUIsVUFBMkIsY0FBYyxFQUFFLFdBQVc7UUFBdEQsaUJBaUJDOztZQWhCSyxHQUFHLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGNBQWMsRUFBRSxXQUFXLENBQUM7UUFDOUQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxTQUFTOzs7O1FBQ3hDLFVBQUEsUUFBUTs7Z0JBQ0YsT0FBTyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFO2dCQUNoQyxPQUFPO2FBQ1I7O2dCQUNHLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQzs7Z0JBQzdCLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSTtZQUN2QixLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QixDQUFDOzs7O1FBQ0QsVUFBQSxLQUFLO1lBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNuQixLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN4QixDQUFDLEVBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRzs7Ozs7Ozs7SUFDSyx1REFBa0I7Ozs7Ozs7SUFBMUIsVUFBMkIsY0FBYyxFQUFFLFdBQVc7O1lBQzlDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLENBQUM7O1lBQ3JELFlBQVksR0FBRztZQUNqQixJQUFJLEVBQUUsV0FBVztZQUNqQixNQUFNLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUM7U0FDdEU7UUFDRCxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDOztnQkEzQ0YsVUFBVTs7OztnQkFKRixVQUFVO2dCQUVWLG9CQUFvQjtnQkFBRSxTQUFTOzs7MEJBU3JDLE1BQU07O0lBcUNULGlDQUFDO0NBQUEsQUE1Q0QsSUE0Q0M7U0EzQ1ksMEJBQTBCOzs7SUFNckMsNkNBQXVDOztJQUV2Qyw0Q0FBc0U7Ozs7O0lBTnBFLDBDQUF3Qjs7Ozs7SUFDeEIsMERBQWtEOzs7OztJQUNsRCx3Q0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XHJcbmltcG9ydCB7IEluamVjdGFibGUsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgVmFyaWFibGVQYXJzZVNlcnZpY2UsIFZpZXdNb2RlbCB9IGZyb20gXCJAZmFycmlzL2RldmtpdFwiO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRXh0ZXJuYWxJbnRlZ3JhdGlvblNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LFxyXG4gICAgcHJpdmF0ZSB2YXJpYWJsZVBhcnNlU2VydmljZTogVmFyaWFibGVQYXJzZVNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHZtOiBWaWV3TW9kZWxcclxuICApIHt9XHJcbiAgQE91dHB1dCgpIHNhcERhdGEgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIHNhcFVybCA9IFwiL2FwaS9ydW50aW1lL2ljYy92MS4wL2V4dGVybmFsU2VydmljZU9wZW5BcGkvaW52b2tlU2VydmljZVwiO1xyXG5cclxuICAvKipcclxuICAgKiDosIPnlKjlpJbpg6jmnI3liqFcclxuICAgKi9cclxuICBxdWVyeUV4dEludGVncmF0aW9uU2VydmljZShleHRlcm5hbFBhcmFtcywgc2VydmljZUNvZGUpIHtcclxuICAgIGxldCByZXEgPSB0aGlzLmFzc2VtYmxlU2FwUmVxdWVzdChleHRlcm5hbFBhcmFtcywgc2VydmljZUNvZGUpO1xyXG4gICAgdGhpcy5odHRwLnBvc3QodGhpcy5zYXBVcmwsIHJlcSkuc3Vic2NyaWJlKFxyXG4gICAgICByZXNwb25zZSA9PiB7XHJcbiAgICAgICAgbGV0IHJlc3BPYmogPSBPYmplY3QuY3JlYXRlKHJlc3BvbnNlKTtcclxuICAgICAgICBpZiAoIXJlc3BPYmogfHwgIXJlc3BPYmouc3VjY2Vzcykge1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgcmVzcCA9IE9iamVjdC5jcmVhdGUocmVzcE9iaik7XHJcbiAgICAgICAgbGV0IHNhcERhdGEgPSByZXNwLmRhdGE7XHJcbiAgICAgICAgdGhpcy5zYXBEYXRhLmVtaXQoc2FwRGF0YSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIGVycm9yID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgdGhpcy5zYXBEYXRhLmVtaXQoe30pO1xyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog57uE6KOFc2FwIGFwaeWFpeWPglxyXG4gICAqL1xyXG4gIHByaXZhdGUgYXNzZW1ibGVTYXBSZXF1ZXN0KGV4dGVybmFsUGFyYW1zLCBzZXJ2aWNlQ29kZSkge1xyXG4gICAgY29uc3QgcGFyYW1zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShleHRlcm5hbFBhcmFtcykpO1xyXG4gICAgbGV0IHJlcXVlc3RQYXJhbSA9IHtcclxuICAgICAgY29kZTogc2VydmljZUNvZGUsXHJcbiAgICAgIHBhcmFtczogdGhpcy52YXJpYWJsZVBhcnNlU2VydmljZS5wYXJzZShwYXJhbXMsIHRoaXMudm0uZnJhbWVDb250ZXh0KSxcclxuICAgIH07XHJcbiAgICByZXR1cm4gcmVxdWVzdFBhcmFtO1xyXG4gIH1cclxufVxyXG4iXX0=