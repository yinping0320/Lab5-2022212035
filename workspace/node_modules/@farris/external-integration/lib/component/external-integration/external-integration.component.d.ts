import { AfterViewInit, ComponentFactoryResolver, ComponentRef, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewContainerRef } from "@angular/core";
import { DialogComponent } from "@farris/ui-dialog";
import { VariableParseService, ViewModel } from "@farris/devkit";
import { ExternalIntegrationService } from "./external-integration-service";
import { DatagridComponent } from "@farris/ui-datagrid";
import { ControlValueAccessor, NgControl } from "@angular/forms";
import { TableInfo } from "./external-integration-displaytype";
import { Observable } from "rxjs";
import { ListViewComponent } from "@farris/ui-list-view";
export declare class ExternalIntegrationComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy, ControlValueAccessor {
    private vm;
    el: ElementRef;
    private extIntgrtnSrvc;
    private variableParseService;
    private resolver;
    private inj;
    /** 模态框宽 */
    width: number;
    /** 模态框高 */
    height: number;
    /** 服务名 */
    serviceCode: string;
    /** 外部服务请求入参,表达式 */
    externalParams: any;
    /** form:主表回填形式,grid：子表回填形式 */
    mappingType: string;
    /** 映射关系 */
    myField: any;
    fieldText: string;
    /** sap出参表信息描述 */
    extTableSchemas: any;
    placeholder: string;
    readonly: boolean;
    beforeSapSrvc: Observable<any>;
    /** 内容中留白边距 */
    containerMargin: {
        top: number;
        bottom: number;
        left: number;
        right: number;
    };
    /** 自定义数据 */
    customData: any;
    /** 指令回填sap数据 */
    selectSapData: EventEmitter<{}>;
    afterOnblur: EventEmitter<{}>;
    dialog: DialogComponent;
    input: ElementRef<any>;
    girdView: ViewContainerRef;
    farrisListView: ListViewComponent;
    componentRef: ComponentRef<DatagridComponent>;
    /** 多表数据集合 */
    tableData: TableInfo[];
    /** 模态框导航栏当前选中项 */
    currentLink: any;
    /** 模态框确定按钮是否可用 */
    ensureFlag: boolean;
    ngControl: NgControl;
    containerStyle: {
        marginLeft: string;
        marginRight: string;
        marginTop: string;
        marginBottom: string;
    };
    constructor(vm: ViewModel, el: ElementRef, extIntgrtnSrvc: ExternalIntegrationService, variableParseService: VariableParseService, resolver: ComponentFactoryResolver, inj: Injector);
    ngOnChanges(changes: SimpleChanges): void;
    fieldTextChange(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    ngOnInit(): void;
    /**
     * 打开模态框
     * @returns
     */
    showDialog(): any;
    /**
     * 调用sap外部服务，出参在ngOninit监听
     */
    callSapService(): void;
    /**
     * 处理sap出参
     * @param data sap出参
     */
    sapDataHandle(data: any): void;
    checkMultiTableData(data: any, tableNameList: any): string;
    /**
     * 组装模态框数据
     * @param data sap出参
     */
    assembleTableData(data: any): void;
    getTableListFromMapFields(): any[];
    /**
     * 组装模态框中单表数据
     * @param mapTable 表名
     * @param data sap出参
     * @returns 模态框单表数据对象
     */
    assembleTableInfo(mapTable: any, data: any): TableInfo;
    /**
     * 导航栏点击事件
     * @param event 导航栏信息
     * @returns
     */
    listClick(event: any): boolean;
    /**
     * 模态框，确定，取消按钮
     * @param flag ensure:确定按钮，cancel：取消按钮
     */
    confirm(flag: any): void;
    beforeClose: () => Observable<boolean>;
    /**
     * 选中一行事件
     * @param selectedRow 选中行数据
     * @param tableName 当前表格对应表名
     */
    selectRowChange(selectedRow: any, tableName: any): void;
    /**
     * 取消一行事件
     * @param selectedRow 被取消行数据
     * @param tableName 当前表格对应表名
     */
    unSelect(selectedRow: any, tableName: any): void;
    /**
     * 设置模态框确定按钮是否可用
     */
    setEnsureButtonFlag(): void;
    /**
     * 组装sap回填数据
     * @param tableName 表名
     * @param tableData 表数据
     * @returns (表名.表字段名:表数据):Object
     */
    assembleSapData(tableName: any, tableData: any): any;
    /**
     * 回填sap数据
     * @param sapData 将要回填的sap数据
     */
    private sendSapData;
    private getBindingPathArray;
}
