/**
 * @fileoverview added by tsickle
 * Generated from: lib/page-modal.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, HostListener, Renderer2, ViewChild, Output, EventEmitter, Input, HostBinding } from '@angular/core';
import { AngularDraggableDirective } from '@farris/ui-draggable';
import { DomSanitizer } from "@angular/platform-browser";
import { FEPageModalCLASS_NAME, FPageModalDISMISS_REASONS, FEPageModalOptions, FPageModalTRANSITION_DURATIONS } from './page-modal-options.class';
var FEPageModalComponent = /** @class */ (function () {
    function FEPageModalComponent(options, el, _renderer, sanitizer) {
        this.el = el;
        this._renderer = _renderer;
        this.sanitizer = sanitizer;
        this.isShown = false;
        this.isModalHiding = false;
        this.isMax = false;
        this.closed = new EventEmitter();
        this.opened = new EventEmitter();
        this.resized = new EventEmitter();
        this.modalID = "MODALID_" + Date.now().toPrecision();
        this.config = Object.assign({}, options);
    }
    Object.defineProperty(FEPageModalComponent.prototype, "iframe", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.sanitizer) {
                this.iframeSrc = this.sanitizer.bypassSecurityTrustResourceUrl(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.boundsElement = this.el.nativeElement;
        if (this.config.fitContent) {
            this._renderer.addClass(this.el.nativeElement, 'f-modal-fitContent');
        }
        if (this.isAnimated) {
            this._renderer.addClass(this.el.nativeElement, FEPageModalCLASS_NAME.FADE);
        }
        // this.ngZone.runOutsideAngular(() => {
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.isShown = true;
            _this._renderer.addClass(_this.el.nativeElement, FEPageModalCLASS_NAME.SHOW);
            _this._renderer.setStyle(_this.el.nativeElement, 'display', 'block');
            if (_this.config.fitContent && _this.el.nativeElement.className.indexOf('f-modal-fitContent-scroll') > -1) {
                _this.el.nativeElement.scrollTop = 0;
            }
            if (document && document.body) {
                /** @type {?} */
                var modalLen = _this.bsModalService.getModalsCount();
                if (modalLen === 1) {
                    _this.bsModalService.checkScrollbar();
                    _this.bsModalService.setScrollbar();
                }
                if (!document.body.classList.contains(FEPageModalCLASS_NAME.OPEN)) {
                    _this._renderer.addClass(document.body, FEPageModalCLASS_NAME.OPEN);
                }
            }
            _this.opened.emit({ modal: _this });
        }), this.isAnimated ? FPageModalTRANSITION_DURATIONS.BACKDROP : 0);
        // });
        if (this.el.nativeElement) {
            this.el.nativeElement.focus();
        }
    };
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this._renderer.setStyle(this.el.nativeElement, 'display', 'block');
        // 如果内容适应宽度
        if (this.config.fitContent) {
            /** @type {?} */
            var initElRect = this.el.nativeElement.getBoundingClientRect();
            /** @type {?} */
            var initBodySize = this.getContainerSize();
            if (initElRect.height < initBodySize.height + 30) {
                this._renderer.addClass(this.el.nativeElement, 'f-modal-fitContent-scroll');
            }
        }
    };
    // 获取内容区域的尺寸
    // 获取内容区域的尺寸
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.getContainerSize = 
    // 获取内容区域的尺寸
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var bodyTarget = this.el.nativeElement.querySelector('.modal-body');
        /** @type {?} */
        var height = bodyTarget.offsetHeight;
        /** @type {?} */
        var width = bodyTarget.offsetWidth;
        return { width: width, height: height };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FEPageModalComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var tag = (/** @type {?} */ (event.target));
        if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this.el.nativeElement) {
            event.stopPropagation();
            return;
        }
        this.bsModalService.setDismissReason(FPageModalDISMISS_REASONS.BACKRDOP);
        this.close();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FEPageModalComponent.prototype.onEsc = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.isShown) {
            return;
        }
        if (event.keyCode === 27) {
            event.preventDefault();
        }
        if (this.config.keyboard &&
            this.level === this.bsModalService.getModalsCount()) {
            this.bsModalService.setDismissReason(FPageModalDISMISS_REASONS.ESC);
            this.close(event);
        }
    };
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.isShown) {
            this.close();
        }
    };
    /**
     * @param {?=} e
     * @param {?=} isCloseButton
     * @return {?}
     */
    FEPageModalComponent.prototype.close = /**
     * @param {?=} e
     * @param {?=} isCloseButton
     * @return {?}
     */
    function (e, isCloseButton) {
        var _this = this;
        if (isCloseButton === void 0) { isCloseButton = false; }
        if (e) {
            e.stopPropagation();
        }
        if (this.isModalHiding || !this.isShown) {
            return;
        }
        this.config.beforeClose(this).subscribe((/**
         * @param {?} r
         * @return {?}
         */
        function (r) {
            if (!r) {
                return false;
            }
            _this.isModalHiding = true;
            _this._renderer.removeClass(_this.el.nativeElement, FEPageModalCLASS_NAME.SHOW);
            // this.ngZone.runOutsideAngular(() => {
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.isShown = false;
                if (document &&
                    document.body) {
                    if (_this.bsModalService.getModalsCount() === 1) {
                        _this._renderer.removeClass(document.body, FEPageModalCLASS_NAME.OPEN);
                    }
                }
                _this.bsModalService.hide(_this.level);
                _this.isModalHiding = false;
                if (_this.config.closed) {
                    _this.config.closed(isCloseButton);
                }
                _this.closed.emit(_this.level);
            }), _this.isAnimated ? FPageModalTRANSITION_DURATIONS.MODAL : 0);
            // });
        }));
    };
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.toCenter = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var marginLeft = parseInt('' + -this.config.width / 2, 10) + 'px';
        /** @type {?} */
        var marginTop = parseInt('' + -this.config.height / 2, 10) + 'px';
        /** @type {?} */
        var dialogEl = this.el.nativeElement.querySelector('.modal-dialog');
        /** @type {?} */
        var contentEl = this.el.nativeElement.querySelector('.modal-body');
        this._renderer.setStyle(dialogEl, 'margin-left', marginLeft);
        this._renderer.setStyle(dialogEl, 'margin-top', marginTop);
        /** @type {?} */
        var contentHeight = parseInt('' + this.config.height, 10) - 38;
        if (!this.config.fitContent) {
            this._renderer.setStyle(contentEl, 'height', contentHeight + 'px');
        }
        this._renderer.setStyle(contentEl, 'overflow', 'hidden');
        this._renderer.setStyle(dialogEl, 'transform', "translate3d(0px, 0px, 0px)");
        setTimeout((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var container = _this.getContainerSize();
            var containerWidth = container.width, containerHeight = container.height;
            _this.resized.emit({ width: _this.config.width, height: _this.config.height, containerWidth: containerWidth, containerHeight: containerHeight });
        }));
    };
    /**
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    FEPageModalComponent.prototype.moveTo = /**
     * @param {?} x
     * @param {?} y
     * @return {?}
     */
    function (x, y) {
        /** @type {?} */
        var dialogEl = this.el.nativeElement.querySelector('.modal-dialog');
        this._renderer.setStyle(dialogEl, 'transform', "translate3d(" + x + "px, " + y + "px, 0px)");
        this.draggbar.position = { x: x, y: y };
        this.draggbar.resetPosition();
    };
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.maxDialog = /**
     * @return {?}
     */
    function () {
        this.originalWidth = this.config.width;
        this.originalHeight = this.config.height;
        this.config.width = document.scrollingElement.clientWidth - 20;
        this.config.height = document.scrollingElement.clientHeight - 20;
        this.config.draggable = false;
        this.config.resizable = false;
        /** @type {?} */
        var dialogEl = this.el.nativeElement.querySelector('.modal-dialog');
        this._renderer.addClass(dialogEl, 'model-dialog-maximize');
        this._renderer.setStyle(dialogEl, 'top', '50%');
        this._renderer.setStyle(dialogEl, 'left', '50%');
        this.isMax = true;
        this.toCenter();
    };
    /**
     * @param {?} el
     * @return {?}
     */
    FEPageModalComponent.prototype.dropdown = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
    };
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.revertDialog = /**
     * @return {?}
     */
    function () {
        this.isMax = false;
        this.config.width = this.originalWidth;
        this.config.height = this.originalHeight;
        this.config.draggable = true;
        this.config.resizable = true;
        /** @type {?} */
        var dialogEl = this.el.nativeElement.querySelector('.modal-dialog');
        this._renderer.removeClass(dialogEl, 'model-dialog-maximize');
        this.toCenter();
        this.draggbar.resetPosition();
    };
    /**
     * @return {?}
     */
    FEPageModalComponent.prototype.changeDialogSize = /**
     * @return {?}
     */
    function () {
        if (this.isMax) {
            this.revertDialog();
        }
        else {
            this.maxDialog();
        }
    };
    /**
     * @param {?} opts
     * @return {?}
     */
    FEPageModalComponent.prototype.resizeStop = /**
     * @param {?} opts
     * @return {?}
     */
    function (opts) {
        this.config.width = opts.size.width;
        this.config.height = opts.size.height;
        /** @type {?} */
        var container = this.getContainerSize();
        var containerWidth = container.width, containerHeight = container.height;
        this.resized.emit(tslib_1.__assign({}, opts.size, { containerWidth: containerWidth, containerHeight: containerHeight }));
    };
    FEPageModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fe-page-modal',
                    template: "\n  <div [attr.id]=\"modalID\"\n  [ngDraggable]=\"config.draggable\"\n  [ngResizable]=\"config.resizable\"\n  [rzMinWidth]=\"config.minWidth\"\n  [rzMaxWidth]=\"config.maxWidth\"\n  [rzMinHeight]=\"config.minHeight\"\n  [rzMaxHeight]=\"config.maxHeight\"\n  rzHandles=\"all\" [handle]=\"dragEl\"\n  (stopped)=\"dropdown($event)\"\n  (rzStop)=\"resizeStop($event)\"\n  [inBounds]=\"true\" [bounds]=\"boundsElement\"\n  [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\"\n  [style.width]=\"config.width + 'px'\" [style.height]=\"config.fitContent?'auto':(config.height + 'px')\"\n  style=\"position: absolute;top: 50%;left: 50%;\">\n  <div class=\"modal-content\">   \n      <ng-container *ngIf=\"config.showCloseButton&&!config.showMaxButton\">\n        <div class=\"action-wrapper\">\n          <span class=\"close-icon\" (click)=\"close($event, true)\">\n            <i class=\"f-icon f-icon-close\"></i>\n          </span>\n          </div>\n      </ng-container> \n      <ng-container *ngIf=\"config.showMaxButton\">\n        <ul class=\"action-list\" [ngDraggable]=\"true\" [handle]=\"actionListDrag\" [inBounds]=\"true\" [bounds]=\"boundsElement\">\n            <li class=\"action-list--item\" *ngIf=\"config.showCloseButton\">\n                <span class=\"action-list--icon close-icon\"  (click)=\"close($event, true)\">\n                  <i class=\"f-icon f-icon-close\"></i>\n                </span>\n            </li>\n            <li *ngIf=\"config.showMaxButton\" class=\"action-list--item\">\n                  <span class=\"action-list--icon max-icon\"  (click)=\"changeDialogSize()\" >                \n                    <i class=\"f-icon modal_maximize\" [class.modalrevert]=\"isMax\"></i>\n                  </span>\n            </li>\n            <div #actionListDrag class=\"action-list--drag\"></div>\n        </ul>     \n    </ng-container>   \n \n    <div #dragEl class=\"f-utils-absolute-all\" style=\"height:10px;z-index: 1;\"></div>\n        <div class=\"modal-body\" [class.f-utils-flex-column]=\"dialogType === 'iframe'\" [f-area-response]=\"config.areaResponse\">\n            <perfect-scrollbar [config]=\"{}\" [disabled]=\"!config.enableScroll||config.fitContent\"  *ngIf=\"dialogType!=='iframe'\">\n                <ng-content ></ng-content>\n            </perfect-scrollbar>\n            <iframe *ngIf=\"dialogType === 'iframe'\" class=\"f-utils-fill\" width=\"100%\" frameborder=\"0\" [src]=\"iframeSrc\"></iframe>\n        </div>\n    </div>\n</div>\n  ",
                    host: {
                        class: 'modal farris-modal fe-cmp-page-modal',
                        role: 'dialog',
                        tabindex: '-1',
                        '[attr.aria-modal]': 'true'
                    }
                }] }
    ];
    /** @nocollapse */
    FEPageModalComponent.ctorParameters = function () { return [
        { type: FEPageModalOptions },
        { type: ElementRef },
        { type: Renderer2 },
        { type: DomSanitizer }
    ]; };
    FEPageModalComponent.propDecorators = {
        iframe: [{ type: Input }],
        draggbar: [{ type: ViewChild, args: [AngularDraggableDirective,] }],
        modalHeader: [{ type: ViewChild, args: ['header',] }],
        closed: [{ type: Output }],
        opened: [{ type: Output }],
        resized: [{ type: Output }],
        modalID: [{ type: HostBinding, args: ['id',] }],
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
        onEsc: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }]
    };
    return FEPageModalComponent;
}());
export { FEPageModalComponent };
if (false) {
    /** @type {?} */
    FEPageModalComponent.prototype.config;
    /** @type {?} */
    FEPageModalComponent.prototype.isShown;
    /** @type {?} */
    FEPageModalComponent.prototype.level;
    /** @type {?} */
    FEPageModalComponent.prototype.isAnimated;
    /** @type {?} */
    FEPageModalComponent.prototype.bsModalService;
    /** @type {?} */
    FEPageModalComponent.prototype.dialogType;
    /** @type {?} */
    FEPageModalComponent.prototype.iframeSrc;
    /**
     * @type {?}
     * @private
     */
    FEPageModalComponent.prototype.isModalHiding;
    /**
     * @type {?}
     * @private
     */
    FEPageModalComponent.prototype.originalWidth;
    /**
     * @type {?}
     * @private
     */
    FEPageModalComponent.prototype.originalHeight;
    /** @type {?} */
    FEPageModalComponent.prototype.isMax;
    /** @type {?} */
    FEPageModalComponent.prototype.draggbar;
    /** @type {?} */
    FEPageModalComponent.prototype.modalHeader;
    /** @type {?} */
    FEPageModalComponent.prototype.boundsElement;
    /** @type {?} */
    FEPageModalComponent.prototype.closed;
    /** @type {?} */
    FEPageModalComponent.prototype.opened;
    /** @type {?} */
    FEPageModalComponent.prototype.resized;
    /** @type {?} */
    FEPageModalComponent.prototype.modalID;
    /** @type {?} */
    FEPageModalComponent.prototype.dlgHeaderLineHeight;
    /**
     * @type {?}
     * @protected
     */
    FEPageModalComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    FEPageModalComponent.prototype._renderer;
    /**
     * @type {?}
     * @private
     */
    FEPageModalComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,