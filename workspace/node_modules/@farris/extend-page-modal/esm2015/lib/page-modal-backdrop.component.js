/**
 * @fileoverview added by tsickle
 * Generated from: lib/page-modal-backdrop.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Renderer2 } from '@angular/core';
import { FEPageModalCLASS_NAME } from './page-modal-options.class';
import { Utils } from '@farris/ui-modal/utils';
/**
 * This component will be added as background layout for modals if enabled
 */
export class FEModalBackdropComponent {
    /**
     * @param {?} element
     * @param {?} renderer
     */
    constructor(element, renderer) {
        this._isShown = false;
        this._dialogType = 'modal';
        this.element = element;
        this.renderer = renderer;
    }
    /**
     * @return {?}
     */
    get isAnimated() {
        return this._isAnimated;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isAnimated(value) {
        this._isAnimated = value;
        // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);
    }
    /**
     * @return {?}
     */
    get isShown() {
        return this._isShown;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isShown(value) {
        this._isShown = value;
        if (value) {
            this.renderer.addClass(this.element.nativeElement, `${FEPageModalCLASS_NAME.IN}`);
        }
        else {
            this.renderer.removeClass(this.element.nativeElement, `${FEPageModalCLASS_NAME.IN}`);
        }
        if (value) {
            this.renderer.addClass(this.element.nativeElement, `${FEPageModalCLASS_NAME.SHOW}`);
        }
        else {
            this.renderer.removeClass(this.element.nativeElement, `${FEPageModalCLASS_NAME.SHOW}`);
        }
    }
    /**
     * @return {?}
     */
    get dialogType() {
        return this._dialogType;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set dialogType(value) {
        // 只有一次显示，不考虑其他
        if (value) {
            this.renderer.addClass(this.element.nativeElement, 'fe-modal-backdrop-' + value);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.isAnimated) {
            this.renderer.addClass(this.element.nativeElement, `${FEPageModalCLASS_NAME.FADE}`);
            Utils.reflow(this.element.nativeElement);
        }
        this.isShown = true;
    }
}
FEModalBackdropComponent.decorators = [
    { type: Component, args: [{
                selector: 'fe-modal-backdrop',
                template: ' ',
                host: { class: FEPageModalCLASS_NAME.BACKDROP }
            }] }
];
/** @nocollapse */
FEModalBackdropComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
if (false) {
    /** @type {?} */
    FEModalBackdropComponent.prototype.element;
    /** @type {?} */
    FEModalBackdropComponent.prototype.renderer;
    /**
     * @type {?}
     * @protected
     */
    FEModalBackdropComponent.prototype._isAnimated;
    /**
     * @type {?}
     * @protected
     */
    FEModalBackdropComponent.prototype._isShown;
    /**
     * @type {?}
     * @protected
     */
    FEModalBackdropComponent.prototype._dialogType;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1tb2RhbC1iYWNrZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1wYWdlLW1vZGFsLyIsInNvdXJjZXMiOlsibGliL3BhZ2UtbW9kYWwtYmFja2Ryb3AuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQVUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ25FLE9BQU8sRUFBRSxLQUFLLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQzs7OztBQVE5QyxNQUFNLE9BQU8sd0JBQXdCOzs7OztJQW9EakMsWUFBWSxPQUFtQixFQUFFLFFBQW1CO1FBRjFDLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsZ0JBQVcsR0FBQyxPQUFPLENBQUM7UUFFMUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQzs7OztJQXRERCxJQUFJLFVBQVU7UUFDVixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFFRCxJQUFJLFVBQVUsQ0FBQyxLQUFjO1FBQ3pCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLHlGQUF5RjtJQUM3RixDQUFDOzs7O0lBRUQsSUFBSSxPQUFPO1FBQ1AsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7Ozs7O0lBRUQsSUFBSSxPQUFPLENBQUMsS0FBYztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLEtBQUssRUFBRTtZQUNQLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLEdBQUcscUJBQXFCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUNyRjthQUFNO1lBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsR0FBRyxxQkFBcUIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ3hGO1FBRUQsSUFBSSxLQUFLLEVBQUU7WUFDUCxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQzFCLEdBQUcscUJBQXFCLENBQUMsSUFBSSxFQUFFLENBQ2xDLENBQUM7U0FDTDthQUFNO1lBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUMxQixHQUFHLHFCQUFxQixDQUFDLElBQUksRUFBRSxDQUNsQyxDQUFDO1NBQ0w7SUFFTCxDQUFDOzs7O0lBS0QsSUFBSSxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBQ0QsSUFBSSxVQUFVLENBQUMsS0FBWTtRQUN2QixlQUFlO1FBQ2YsSUFBRyxLQUFLLEVBQUM7WUFDTCxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBQyxvQkFBb0IsR0FBQyxLQUFLLENBQUMsQ0FBQztTQUNqRjtJQUNMLENBQUM7Ozs7SUFVRCxRQUFRO1FBQ0osSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLEdBQUcscUJBQXFCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztZQUNwRixLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDNUM7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUN4QixDQUFDOzs7WUFwRUosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLFFBQVEsRUFBRSxHQUFHO2dCQUNiLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxxQkFBcUIsQ0FBQyxRQUFRLEVBQUU7YUFDbEQ7Ozs7WUFUbUIsVUFBVTtZQUFVLFNBQVM7Ozs7SUE4QzdDLDJDQUFvQjs7SUFDcEIsNENBQW9COzs7OztJQVlwQiwrQ0FBK0I7Ozs7O0lBQy9CLDRDQUEyQjs7Ozs7SUFDM0IsK0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGRVBhZ2VNb2RhbENMQVNTX05BTUUgfSBmcm9tICcuL3BhZ2UtbW9kYWwtb3B0aW9ucy5jbGFzcyc7XHJcbmltcG9ydCB7IFV0aWxzfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsL3V0aWxzJztcclxuXHJcbi8qKiBUaGlzIGNvbXBvbmVudCB3aWxsIGJlIGFkZGVkIGFzIGJhY2tncm91bmQgbGF5b3V0IGZvciBtb2RhbHMgaWYgZW5hYmxlZCAqL1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZmUtbW9kYWwtYmFja2Ryb3AnLFxyXG4gICAgdGVtcGxhdGU6ICcgJyxcclxuICAgIGhvc3Q6IHsgY2xhc3M6IEZFUGFnZU1vZGFsQ0xBU1NfTkFNRS5CQUNLRFJPUCB9XHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGRU1vZGFsQmFja2Ryb3BDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgZ2V0IGlzQW5pbWF0ZWQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzQW5pbWF0ZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGlzQW5pbWF0ZWQodmFsdWU6IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLl9pc0FuaW1hdGVkID0gdmFsdWU7XHJcbiAgICAgICAgLy8gdGhpcy5yZW5kZXJlci5zZXRFbGVtZW50Q2xhc3ModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIGAke0NsYXNzTmFtZS5GQURFfWAsIHZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgaXNTaG93bigpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faXNTaG93bjtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgaXNTaG93bih2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX2lzU2hvd24gPSB2YWx1ZTtcclxuICAgICAgICBpZiAodmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgYCR7RkVQYWdlTW9kYWxDTEFTU19OQU1FLklOfWApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIGAke0ZFUGFnZU1vZGFsQ0xBU1NfTkFNRS5JTn1gKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKFxyXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsXHJcbiAgICAgICAgICAgICAgICBgJHtGRVBhZ2VNb2RhbENMQVNTX05BTUUuU0hPV31gXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDbGFzcyhcclxuICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgYCR7RkVQYWdlTW9kYWxDTEFTU19OQU1FLlNIT1d9YFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgZWxlbWVudDogRWxlbWVudFJlZjtcclxuICAgIHJlbmRlcmVyOiBSZW5kZXJlcjI7XHJcblxyXG4gICAgZ2V0IGRpYWxvZ1R5cGUoKTpzdHJpbmd7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RpYWxvZ1R5cGU7XHJcbiAgICB9XHJcbiAgICBzZXQgZGlhbG9nVHlwZSh2YWx1ZTpzdHJpbmcpe1xyXG4gICAgICAgIC8vIOWPquacieS4gOasoeaYvuekuu+8jOS4jeiAg+iZkeWFtuS7llxyXG4gICAgICAgIGlmKHZhbHVlKXtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwnZmUtbW9kYWwtYmFja2Ryb3AtJyt2YWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBfaXNBbmltYXRlZDogYm9vbGVhbjtcclxuICAgIHByb3RlY3RlZCBfaXNTaG93biA9IGZhbHNlO1xyXG4gICAgcHJvdGVjdGVkIF9kaWFsb2dUeXBlPSdtb2RhbCc7XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICAgICAgICB0aGlzLnJlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNBbmltYXRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50LCBgJHtGRVBhZ2VNb2RhbENMQVNTX05BTUUuRkFERX1gKTtcclxuICAgICAgICAgICAgVXRpbHMucmVmbG93KHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pc1Nob3duID0gdHJ1ZTtcclxuICAgIH1cclxufVxyXG4iXX0=