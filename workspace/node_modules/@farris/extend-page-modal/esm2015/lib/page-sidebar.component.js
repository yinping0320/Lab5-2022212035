/**
 * @fileoverview added by tsickle
 * Generated from: lib/page-sidebar.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, Renderer2, ElementRef, ViewChild, HostBinding, HostListener } from '@angular/core';
import { DomSanitizer } from "@angular/platform-browser";
import { FPageModalDISMISS_REASONS, FEPageModalOptions } from './page-modal-options.class';
export class FEPageModalSidebarComponent {
    /**
     * @param {?} options
     * @param {?} el
     * @param {?} _renderer
     * @param {?} sanitizer
     */
    constructor(options, el, _renderer, sanitizer) {
        this.el = el;
        this._renderer = _renderer;
        this.sanitizer = sanitizer;
        this.isShown = false;
        this.closed = new EventEmitter();
        this.opened = new EventEmitter();
        this.resized = new EventEmitter();
        this.modalID = `MODALID_${Date.now().toPrecision()}`;
        this.iframeSrc = '';
        this._iframe = '';
        this.isModalHiding = false;
        this.canRemoveInitNoAnimateCls = true;
        this.sidebarCls = {
            'parent': 'f-sidebar-parent',
            'openParent': 'f-sidebar-parent-expand',
            'closeParent': 'f-sidebar-parent-collapse',
            'init': 'animated-none'
        };
        this.isOpen = false;
        this.config = Object.assign({}, options);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set iframe(value) {
        if (this.sanitizer) {
            this._iframe = value;
            this.iframeSrc = this.sanitizer.bypassSecurityTrustResourceUrl(value);
        }
    }
    /**
     * @return {?}
     */
    get iframe() {
        return this._iframe;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onClick(event) {
        /** @type {?} */
        const tag = (/** @type {?} */ (event.target));
        if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this.el.nativeElement) {
            event.stopPropagation();
            return;
        }
        this.bsModalService.setDismissReason(FPageModalDISMISS_REASONS.BACKRDOP);
        this.close();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onEsc(event) {
        if (!this.isShown) {
            return;
        }
        if (event.keyCode === 27) {
            event.preventDefault();
        }
        if (this.config.keyboard &&
            this.level === this.bsModalService.getModalsCount()) {
            this.bsModalService.setDismissReason(FPageModalDISMISS_REASONS.ESC);
            this.close(event);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.parentEl = this.el.nativeElement.parentElement;
        this._renderer.addClass(this.parentEl, this.sidebarCls.parent);
        this.removeNoneAnimateCls();
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.isShown = true;
            this.isOpen = true;
            // this._renderer.addClass(
            //     this.el.nativeElement, FEPageModalCLASS_NAME.SHOW
            // );
            // Parent
            this._renderer.removeClass(this.parentEl, this.sidebarCls.closeParent);
            this._renderer.addClass(this.parentEl, this.sidebarCls.openParent);
            // this._renderer.setStyle(this.el.nativeElement, 'display', 'block');
            // if (this.config.fitContent && this.el.nativeElement.className.indexOf('f-modal-fitContent-scroll') > -1) {
            //   this.el.nativeElement.scrollTop = 0;
            // }
            // if (document && document.body) {
            //     const modalLen = this.bsModalService.getModalsCount();
            //     if (modalLen === 1) {
            //         this.bsModalService.checkScrollbar();
            //         this.bsModalService.setScrollbar();
            //     }
            //     if (!document.body.classList.contains(FEPageModalCLASS_NAME.OPEN)) {
            //         this._renderer.addClass(document.body, FEPageModalCLASS_NAME.OPEN);
            //     }
            // }
            this.opened.emit({ modal: this });
        }), 0);
        if (this.el.nativeElement) {
            this.el.nativeElement.focus();
        }
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.isShown) {
            this.close();
        }
    }
    /**
     * @return {?}
     */
    hasIframe() {
        return this._iframe != '';
    }
    /**
     * @return {?}
     */
    closeSideBar() {
        // this.removeNoneAnimateCls();
        // if (this.beforeClose) {
        //     this.beforeClose().subscribe((isOpen: boolean) => {
        //         this.isOpen = !isOpen;
        //     })
        // } else {
        //     this.isOpen = false;
        // }
        this._renderer.removeClass(this.parentEl, this.sidebarCls.openParent);
        this._renderer.addClass(this.parentEl, this.sidebarCls.closeParent);
    }
    /**
     * @return {?}
     */
    openSideBar() {
        this.removeNoneAnimateCls();
        this.isOpen = true;
        this._renderer.removeClass(this.parentEl, this.sidebarCls.closeParent);
        this._renderer.addClass(this.parentEl, this.sidebarCls.openParent);
    }
    /*侧边栏初始因为动画收起时，会被看到, 移除 */
    /**
     * @private
     * @return {?}
     */
    removeNoneAnimateCls() {
        if (!this.canRemoveInitNoAnimateCls) {
            return;
        }
        if (this.sidebarMainEl) {
            this._renderer.removeClass(this.sidebarMainEl.nativeElement, this.sidebarCls.init);
            this.canRemoveInitNoAnimateCls = false;
        }
    }
    // 侧边栏宽度计算
    /**
     * @return {?}
     */
    getSidebarWidth() {
        if (typeof this.config['width'] == 'string') {
            return this.config['width'];
        }
        else {
            return this.config['width'] + 'px';
        }
    }
    // 必须带的方法
    /**
     * @param {?=} e
     * @param {?=} isCloseButton
     * @return {?}
     */
    close(e, isCloseButton = false) {
        if (e) {
            e.stopPropagation();
        }
        if (this.isModalHiding || !this.isShown) {
            return;
        }
        this.config.beforeClose(this).subscribe((/**
         * @param {?} r
         * @return {?}
         */
        r => {
            if (!r) {
                return false;
            }
            //动画结束执行其他操作
            this.sidebarMainEl.nativeElement.parentElement.addEventListener('transitionend', (/**
             * @param {?} e
             * @return {?}
             */
            (e) => {
                this.bsModalService.hide(this.level);
                this.isModalHiding = false;
                if (this.config.closed) {
                    this.config.closed(isCloseButton);
                }
                this.closed.emit(this.level);
            }), false);
            this.isModalHiding = true;
            this.isShown = false;
            this._renderer.removeClass(this.parentEl, this.sidebarCls.openParent);
            this._renderer.addClass(this.parentEl, this.sidebarCls.closeParent);
        }));
    }
    /**
     * @return {?}
     */
    toCenter() {
    }
}
FEPageModalSidebarComponent.decorators = [
    { type: Component, args: [{
                selector: 'fe-page-sidebar',
                template: "<div [attr.id]=\"modalID\" class=\"f-cmp-sidebar f-sidebar-slide fe-page-sidebar\" [class]=\"config.class+' '+'f-sidebar-pos-'+config.sidebar['showPos']\"\r\n  [ngClass]=\"{'f-sidebar-show': isShown||isOpen, 'f-sidebar-collapse': !isShown||!isOpen}\">\r\n  <div class=\"f-sidebar-main animated-none\" [ngClass]=\"{'f-sidebar-main--has-actions':config.showCloseButton}\" #sidebarMain [ngStyle]=\"{width:config.width}\"\r\n    [f-area-response]=\"!iframe&&config.areaResponse\">\r\n    <perfect-scrollbar [config]=\"{}\" [disabled]=\"!config.enableScroll||config.fitContent\" *ngIf=\"!iframe\">\r\n      <ng-content></ng-content>\r\n    </perfect-scrollbar>\r\n    <iframe *ngIf=\"iframe\" class=\"f-utils-fill\" width=\"100%\" frameborder=\"0\" [src]=\"iframeSrc\"></iframe>\r\n    <div class=\"f-sidebar--action-list\" *ngIf=\"config.showCloseButton\">\r\n      <div class=\"action-list--item\" (click)=\"close($event,true)\">\r\n        <span class=\"action-list--icon close-icon\">\r\n          <i class=\"f-icon f-icon-close\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>",
                host: {
                    class: 'fe-cmp-page-modal'
                }
            }] }
];
/** @nocollapse */
FEPageModalSidebarComponent.ctorParameters = () => [
    { type: FEPageModalOptions },
    { type: ElementRef },
    { type: Renderer2 },
    { type: DomSanitizer }
];
FEPageModalSidebarComponent.propDecorators = {
    closed: [{ type: Output }],
    opened: [{ type: Output }],
    resized: [{ type: Output }],
    modalID: [{ type: HostBinding, args: ['id',] }],
    iframe: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
    onEsc: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }],
    sidebarMainEl: [{ type: ViewChild, args: ['sidebarMain',] }]
};
if (false) {
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.config;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.isShown;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.level;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.isAnimated;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.bsModalService;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.dialogType;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.closed;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.opened;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.resized;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.modalID;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.iframeSrc;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype._iframe;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype.isModalHiding;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype.sidebarMainEl;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype.canRemoveInitNoAnimateCls;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype.parentEl;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype.sidebarCls;
    /** @type {?} */
    FEPageModalSidebarComponent.prototype.isOpen;
    /**
     * @type {?}
     * @protected
     */
    FEPageModalSidebarComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype._renderer;
    /**
     * @type {?}
     * @private
     */
    FEPageModalSidebarComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,