/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
var MultiSelectedDaysComponent = /** @class */ (function () {
    function MultiSelectedDaysComponent() {
        this.locales = {};
        this.selectedDates = [];
        this.removed = new EventEmitter();
        this.clear = new EventEmitter();
        this.clicked = new EventEmitter();
    }
    /**
     * @return {?}
     */
    MultiSelectedDaysComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    MultiSelectedDaysComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
    };
    /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    MultiSelectedDaysComponent.prototype.onRemove = /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    function ($event, item) {
        $event.stopPropagation();
        this.removed.emit(item);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    MultiSelectedDaysComponent.prototype.onClear = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
        this.clear.emit();
    };
    /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    MultiSelectedDaysComponent.prototype.onSelectDateClick = /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    function ($event, item) {
        $event.stopPropagation();
        this.clicked.emit(item);
    };
    MultiSelectedDaysComponent.decorators = [
        { type: Component, args: [{
                    selector: 'multi-days',
                    template: "\n        <div class=\"d-flex mb-2 f-datepicker-multi-selectdays-header\">\n            <span style=\"font-size: 14px;\" class=\"ml-3\">{{ locales?.selected.split(',')[0] || '\u5DF2\u9009'}} <span style=\"font-weight: bold;font-size: 17px;\">{{selectedDates.length}}</span> {{locales?.selected.split(',')[1] ||'\u5929'}}</span>\n            <span class=\"f-datepicker-multi-selectdays-clear\" (click)=\"onClear($event)\">{{ locales?.clearSelections || '\u6E05\u7A7A'}}</span>\n        </div>\n        <div #selecteditems style=\"height: 230px;overflow-y: auto;\" class=\"ml-3 multi-date-select win11Scroll nobtn\" (wheel)=\"$event.stopPropagation()\">\n            <ul [style.width.px]=\"167\">\n                <li class=\"d-flex align-items-center f-datepicker-multi-selectdays\" *ngFor=\"let d of selectedDates\" (click)=\"onSelectDateClick($event, d)\">\n                    {{d.value}} <span class=\"f-icon f-icon-close remove\" title=\"{{ locales?.delete || '\u5220\u9664'}}\" (click)=\"onRemove($event, d)\"></span>\n                </li>\n            </ul>\n        </div>\n    ",
                    styles: ["\n        .f-datepicker-multi-selectdays-header{\n            height: 41px;border-bottom: 1px solid #E4E7EF;line-height: 40px;justify-content: space-between;\n        }\n\n        .f-datepicker-multi-selectdays {\n            justify-content: space-between;color: #2D2F33;height: 30px;padding: 0 5px;border-radius: 6px;\n            cursor: pointer;\n        }\n\n        .f-datepicker-multi-selectdays:hover {\n            background: #F7F8FB;\n        }\n\n        .f-datepicker-multi-selectdays .remove {\n            font-size: 12px;color: #C7CFDD;cursor: pointer;\n        }\n\n        .f-datepicker-multi-selectdays .remove:hover {\n            color: #5f96f5;\n        }\n\n        .f-datepicker-multi-selectdays-clear {\n            font-size: 13px;margin-right: 10px; color: #CCD1DD; cursor: pointer;\n        }\n        .f-datepicker-multi-selectdays-clear:hover {\n            color: #5f96f5;\n        }\n\n        .mr14 {\n            margin-right: 14px;\n        }\n        "]
                }] }
    ];
    /** @nocollapse */
    MultiSelectedDaysComponent.ctorParameters = function () { return []; };
    MultiSelectedDaysComponent.propDecorators = {
        locales: [{ type: Input }],
        selectedDates: [{ type: Input }],
        removed: [{ type: Output }],
        clear: [{ type: Output }],
        clicked: [{ type: Output }],
        selecteditemsEl: [{ type: ViewChild, args: ['selecteditems',] }]
    };
    return MultiSelectedDaysComponent;
}());
export { MultiSelectedDaysComponent };
if (false) {
    /** @type {?} */
    MultiSelectedDaysComponent.prototype.locales;
    /** @type {?} */
    MultiSelectedDaysComponent.prototype.selectedDates;
    /** @type {?} */
    MultiSelectedDaysComponent.prototype.removed;
    /** @type {?} */
    MultiSelectedDaysComponent.prototype.clear;
    /** @type {?} */
    MultiSelectedDaysComponent.prototype.clicked;
    /** @type {?} */
    MultiSelectedDaysComponent.prototype.selecteditemsEl;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktZGF5cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGVwaWNrZXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9tdWx0aS1kYXktdmlldy9tdWx0aS1kYXlzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFpQixTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEk7SUFpRUk7UUFYUyxZQUFPLEdBQVEsRUFBRSxDQUFDO1FBRWxCLGtCQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzdCLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzNCLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBTXZCLENBQUM7Ozs7SUFFakIsNkNBQVE7OztJQUFSO0lBRUEsQ0FBQzs7Ozs7SUFFRCxnREFBVzs7OztJQUFYLFVBQVksT0FBc0I7SUFDbEMsQ0FBQzs7Ozs7O0lBRUQsNkNBQVE7Ozs7O0lBQVIsVUFBUyxNQUFrQixFQUFFLElBQUk7UUFDN0IsTUFBTSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7Ozs7O0lBRUQsNENBQU87Ozs7SUFBUCxVQUFRLE1BQWtCO1FBQ3RCLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7OztJQUVELHNEQUFpQjs7Ozs7SUFBakIsVUFBa0IsTUFBTSxFQUFFLElBQUk7UUFDMUIsTUFBTSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7O2dCQXZGSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFFBQVEsRUFBRSxna0NBWVQ7NkJBRUcsNjlCQWdDQztpQkFFUjs7Ozs7MEJBSUksS0FBSztnQ0FFTCxLQUFLOzBCQUNMLE1BQU07d0JBQ04sTUFBTTswQkFDTixNQUFNO2tDQUdOLFNBQVMsU0FBQyxlQUFlOztJQTBCOUIsaUNBQUM7Q0FBQSxBQXhGRCxJQXdGQztTQXBDWSwwQkFBMEI7OztJQUVuQyw2Q0FBMkI7O0lBRTNCLG1EQUE0Qjs7SUFDNUIsNkNBQXVDOztJQUN2QywyQ0FBcUM7O0lBQ3JDLDZDQUF1Qzs7SUFHdkMscURBQXdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3V0cHV0LCBTaW1wbGVDaGFuZ2VzLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgc29ydEJ5IH0gZnJvbSAnbG9kYXNoLWVzJztcclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ211bHRpLWRheXMnLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IG1iLTIgZi1kYXRlcGlja2VyLW11bHRpLXNlbGVjdGRheXMtaGVhZGVyXCI+XHJcbiAgICAgICAgICAgIDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOiAxNHB4O1wiIGNsYXNzPVwibWwtM1wiPnt7IGxvY2FsZXM/LnNlbGVjdGVkLnNwbGl0KCcsJylbMF0gfHwgJ+W3sumAiSd9fSA8c3BhbiBzdHlsZT1cImZvbnQtd2VpZ2h0OiBib2xkO2ZvbnQtc2l6ZTogMTdweDtcIj57e3NlbGVjdGVkRGF0ZXMubGVuZ3RofX08L3NwYW4+IHt7bG9jYWxlcz8uc2VsZWN0ZWQuc3BsaXQoJywnKVsxXSB8fCflpKknfX08L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZi1kYXRlcGlja2VyLW11bHRpLXNlbGVjdGRheXMtY2xlYXJcIiAoY2xpY2spPVwib25DbGVhcigkZXZlbnQpXCI+e3sgbG9jYWxlcz8uY2xlYXJTZWxlY3Rpb25zIHx8ICfmuIXnqbonfX08L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiAjc2VsZWN0ZWRpdGVtcyBzdHlsZT1cImhlaWdodDogMjMwcHg7b3ZlcmZsb3cteTogYXV0bztcIiBjbGFzcz1cIm1sLTMgbXVsdGktZGF0ZS1zZWxlY3Qgd2luMTFTY3JvbGwgbm9idG5cIiAod2hlZWwpPVwiJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXCI+XHJcbiAgICAgICAgICAgIDx1bCBbc3R5bGUud2lkdGgucHhdPVwiMTY3XCI+XHJcbiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGYtZGF0ZXBpY2tlci1tdWx0aS1zZWxlY3RkYXlzXCIgKm5nRm9yPVwibGV0IGQgb2Ygc2VsZWN0ZWREYXRlc1wiIChjbGljayk9XCJvblNlbGVjdERhdGVDbGljaygkZXZlbnQsIGQpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAge3tkLnZhbHVlfX0gPHNwYW4gY2xhc3M9XCJmLWljb24gZi1pY29uLWNsb3NlIHJlbW92ZVwiIHRpdGxlPVwie3sgbG9jYWxlcz8uZGVsZXRlIHx8ICfliKDpmaQnfX1cIiAoY2xpY2spPVwib25SZW1vdmUoJGV2ZW50LCBkKVwiPjwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICBgLFxyXG4gICAgc3R5bGVzOiBbXHJcbiAgICAgICAgYFxyXG4gICAgICAgIC5mLWRhdGVwaWNrZXItbXVsdGktc2VsZWN0ZGF5cy1oZWFkZXJ7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDFweDtib3JkZXItYm90dG9tOiAxcHggc29saWQgI0U0RTdFRjtsaW5lLWhlaWdodDogNDBweDtqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZi1kYXRlcGlja2VyLW11bHRpLXNlbGVjdGRheXMge1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Y29sb3I6ICMyRDJGMzM7aGVpZ2h0OiAzMHB4O3BhZGRpbmc6IDAgNXB4O2JvcmRlci1yYWRpdXM6IDZweDtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmYtZGF0ZXBpY2tlci1tdWx0aS1zZWxlY3RkYXlzOmhvdmVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogI0Y3RjhGQjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5mLWRhdGVwaWNrZXItbXVsdGktc2VsZWN0ZGF5cyAucmVtb3ZlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O2NvbG9yOiAjQzdDRkREO2N1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5mLWRhdGVwaWNrZXItbXVsdGktc2VsZWN0ZGF5cyAucmVtb3ZlOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICM1Zjk2ZjU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZi1kYXRlcGlja2VyLW11bHRpLXNlbGVjdGRheXMtY2xlYXIge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEzcHg7bWFyZ2luLXJpZ2h0OiAxMHB4OyBjb2xvcjogI0NDRDFERDsgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuZi1kYXRlcGlja2VyLW11bHRpLXNlbGVjdGRheXMtY2xlYXI6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogIzVmOTZmNTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5tcjE0IHtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBgXHJcbiAgICBdXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgTXVsdGlTZWxlY3RlZERheXNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcblxyXG4gICAgQElucHV0KCkgbG9jYWxlczogYW55ID0ge307XHJcblxyXG4gICAgQElucHV0KCkgc2VsZWN0ZWREYXRlcyA9IFtdO1xyXG4gICAgQE91dHB1dCgpIHJlbW92ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgY2xlYXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgY2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcblxyXG4gICAgQFZpZXdDaGlsZCgnc2VsZWN0ZWRpdGVtcycpIHNlbGVjdGVkaXRlbXNFbDogRWxlbWVudFJlZjtcclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIG9uUmVtb3ZlKCRldmVudDogTW91c2VFdmVudCwgaXRlbSkge1xyXG4gICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB0aGlzLnJlbW92ZWQuZW1pdChpdGVtKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsZWFyKCRldmVudDogTW91c2VFdmVudCkge1xyXG4gICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB0aGlzLmNsZWFyLmVtaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBvblNlbGVjdERhdGVDbGljaygkZXZlbnQsIGl0ZW0pIHtcclxuICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5jbGlja2VkLmVtaXQoaXRlbSk7XHJcbiAgICB9XHJcbn0iXX0=