/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-02 14:14:22
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-09-09 09:27:58
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { OPTS, YEARS, VISIBLE_MONTH, SELECT_MONTH, SELECT_YEAR, PREV_VIEW_DISABLED, NEXT_VIEW_DISABLED, YYYY, MM } from '../../constants/constants';
export class SelectionBarComponent {
    constructor() {
        this.prevNavigateBtnClicked = new EventEmitter();
        this.nextNavigateBtnClicked = new EventEmitter();
        this.monthViewBtnClicked = new EventEmitter();
        this.yearViewBtnClicked = new EventEmitter();
        this.todayViewBtnClicked = new EventEmitter();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.hasOwnProperty(OPTS)) {
            this.opts = changes[OPTS].currentValue;
        }
        if (changes.hasOwnProperty(YEARS)) {
            this.years = changes[YEARS].currentValue;
        }
        if (changes.hasOwnProperty(VISIBLE_MONTH)) {
            this.visibleMonth = changes[VISIBLE_MONTH].currentValue;
        }
        if (changes.hasOwnProperty(SELECT_MONTH)) {
            this.selectMonth = changes[SELECT_MONTH].currentValue;
        }
        if (changes.hasOwnProperty(SELECT_YEAR)) {
            this.selectYear = changes[SELECT_YEAR].currentValue;
        }
        if (changes.hasOwnProperty(PREV_VIEW_DISABLED)) {
            this.prevViewDisabled = changes[PREV_VIEW_DISABLED].currentValue;
        }
        if (changes.hasOwnProperty(NEXT_VIEW_DISABLED)) {
            this.nextViewDisabled = changes[NEXT_VIEW_DISABLED].currentValue;
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onPrevNavigateBtnClicked(event) {
        event.stopPropagation();
        !this.prevViewDisabled && this.prevNavigateBtnClicked.emit(true);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onNextNavigateBtnClicked(event) {
        event.stopPropagation();
        !this.nextViewDisabled && this.nextNavigateBtnClicked.emit(true);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onPrevDobNavigateBtnClicked(event) {
        event.stopPropagation();
        !this.prevDobViewDisabled && this.prevNavigateBtnClicked.emit(false);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onNextDobNavigateBtnClicked(event) {
        event.stopPropagation();
        !this.nextDobViewDisabled && this.nextNavigateBtnClicked.emit(false);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMonthViewBtnClicked(event) {
        event.stopPropagation();
        this.monthViewBtnClicked.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onYearViewBtnClicked(event) {
        event.stopPropagation();
        this.yearViewBtnClicked.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onTodayViewBtnClicked(event) {
        event.stopPropagation();
        this.todayViewBtnClicked.emit();
    }
    /**
     * @return {?}
     */
    getFormateType() {
        /** @type {?} */
        const yIndex = this.opts.dateFormat
            ? this.opts.dateFormat.indexOf(YYYY)
            : 0;
        /** @type {?} */
        const mIndex = this.opts.dateFormat
            ? this.opts.dateFormat.indexOf(MM)
            : 0;
        return yIndex > mIndex ? `${MM}-${YYYY}` : `${YYYY}-${MM}`;
    }
}
SelectionBarComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-selection-bar',
                template: "<div\r\n    class=\"f-datepicker-header\"\r\n    [ngClass]=\"{ monthYearSelBarBorder: selectMonth || selectYear }\"\r\n>\r\n    <div class=\"f-datepicker-prev-btn\">\r\n        <button\r\n            type=\"button\"\r\n            class=\"f-datepicker-header-btn\"\r\n            (click)=\"onPrevDobNavigateBtnClicked($event)\"\r\n            [ngClass]=\"{\r\n                'f-datepicker-header-btn-disabled': prevDobViewDisabled\r\n            }\"\r\n        >\r\n            <i class=\"k-icon k-i-arrow-double-60-left\"></i>\r\n        </button>\r\n        <button\r\n            type=\"button\"\r\n            *ngIf=\"!selectMonth && !selectYear\"\r\n            [attr.aria-label]=\"opts.ariaLabelPrevMonth\"\r\n            class=\"f-datepicker-header-btn\"\r\n            (click)=\"onPrevNavigateBtnClicked($event)\"\r\n            [ngClass]=\"{ 'f-datepicker-header-btn-disabled': prevViewDisabled }\"\r\n        >\r\n            <i class=\"k-icon k-i-arrow-chevron-left\"></i>\r\n        </button>\r\n    </div>\r\n    <div class=\"f-datepicker-monthYearText\">\r\n        <ng-container *ngIf=\"getFormateType() === 'yyyy-MM'; else elseTemplate\">\r\n            <button\r\n                type=\"button\"\r\n                class=\"f-datepicker-header-btn\"\r\n                (click)=\"opts.yearSelector && onYearViewBtnClicked($event)\"\r\n                tabindex=\"{{ opts.yearSelector ? '0' : '-1' }}\"\r\n                [disabled]=\"opts.showType === 3\"\r\n                [ngClass]=\"{\r\n                    'f-datepicker-yearLabel': opts.yearSelector,\r\n                    'f-datepicker-labelBtnNotEdit': !opts.yearSelector\r\n                }\"\r\n            >\r\n                {{\r\n                    !selectYear\r\n                        ? visibleMonth.year + visibleMonth.yearTxt \r\n                        : years[0][1].year + ' - ' + years[3][1].year\r\n                }}\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                class=\"f-datepicker-header-btn\"\r\n                *ngIf=\"!selectYear && opts.showType !== 2\"\r\n                (click)=\"opts.monthSelector && onMonthViewBtnClicked($event)\"\r\n                tabindex=\"{{ opts.monthSelector ? '0' : '-1' }}\"\r\n                [ngClass]=\"{\r\n                    'f-datepicker-monthLabel': opts.monthSelector,\r\n                    'f-datepicker-labelBtnNotEdit': !opts.monthSelector\r\n                }\"\r\n            >\r\n                {{ visibleMonth.monthTxt }}\r\n            </button>\r\n        </ng-container>\r\n        <ng-template #elseTemplate>\r\n            <button\r\n                type=\"button\"\r\n                class=\"f-datepicker-header-btn\"\r\n                *ngIf=\"!selectYear\"\r\n                (click)=\"opts.monthSelector && onMonthViewBtnClicked($event)\"\r\n                tabindex=\"{{ opts.monthSelector ? '0' : '-1' }}\"\r\n                [ngClass]=\"{\r\n                    'f-datepicker-monthLabel': opts.monthSelector,\r\n                    'f-datepicker-labelBtnNotEdit': !opts.monthSelector\r\n                }\"\r\n            >\r\n                {{ visibleMonth.monthTxt }}\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                class=\"f-datepicker-header-btn\"\r\n                (click)=\"opts.yearSelector && onYearViewBtnClicked($event)\"\r\n                tabindex=\"{{ opts.yearSelector ? '0' : '-1' }}\"\r\n                [ngClass]=\"{\r\n                    'f-datepicker-yearLabel': opts.yearSelector,\r\n                    'f-datepicker-labelBtnNotEdit': !opts.yearSelector\r\n                }\"\r\n            >\r\n                {{\r\n                    !selectYear\r\n                        ? visibleMonth.year + visibleMonth.yearTxt\r\n                        : years[0][1].year + ' - ' + years[3][1].year\r\n                }}\r\n            </button>\r\n        </ng-template>\r\n    </div>\r\n    <div class=\"f-datepicker-next-btn\">\r\n        <button\r\n            type=\"button\"\r\n            *ngIf=\"!selectMonth && !selectYear\"\r\n            [attr.aria-label]=\"opts.ariaLabelNextMonth\"\r\n            class=\"f-datepicker-header-btn\"\r\n            (click)=\"onNextNavigateBtnClicked($event)\"\r\n            [ngClass]=\"{ 'f-datepicker-header-btn-disabled': nextViewDisabled }\"\r\n        >\r\n            <i class=\"k-icon k-i-arrow-chevron-right\"></i>\r\n        </button>\r\n        <button\r\n            type=\"button\"\r\n            class=\"f-datepicker-header-btn\"\r\n            (click)=\"onNextDobNavigateBtnClicked($event)\"\r\n            [ngClass]=\"{\r\n                'f-datepicker-header-btn-disabled': nextDobViewDisabled\r\n            }\"\r\n        >\r\n            <i class=\"k-icon k-i-arrow-double-60-right\"></i>\r\n        </button>\r\n    </div>\r\n</div>\r\n",
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
SelectionBarComponent.ctorParameters = () => [];
SelectionBarComponent.propDecorators = {
    opts: [{ type: Input }],
    years: [{ type: Input }],
    visibleMonth: [{ type: Input }],
    selectMonth: [{ type: Input }],
    selectYear: [{ type: Input }],
    selectToday: [{ type: Input }],
    prevViewDisabled: [{ type: Input }],
    nextViewDisabled: [{ type: Input }],
    prevDobViewDisabled: [{ type: Input }],
    nextDobViewDisabled: [{ type: Input }],
    prevNavigateBtnClicked: [{ type: Output }],
    nextNavigateBtnClicked: [{ type: Output }],
    monthViewBtnClicked: [{ type: Output }],
    yearViewBtnClicked: [{ type: Output }],
    todayViewBtnClicked: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    SelectionBarComponent.prototype.opts;
    /** @type {?} */
    SelectionBarComponent.prototype.years;
    /** @type {?} */
    SelectionBarComponent.prototype.visibleMonth;
    /** @type {?} */
    SelectionBarComponent.prototype.selectMonth;
    /** @type {?} */
    SelectionBarComponent.prototype.selectYear;
    /** @type {?} */
    SelectionBarComponent.prototype.selectToday;
    /** @type {?} */
    SelectionBarComponent.prototype.prevViewDisabled;
    /** @type {?} */
    SelectionBarComponent.prototype.nextViewDisabled;
    /** @type {?} */
    SelectionBarComponent.prototype.prevDobViewDisabled;
    /** @type {?} */
    SelectionBarComponent.prototype.nextDobViewDisabled;
    /** @type {?} */
    SelectionBarComponent.prototype.prevNavigateBtnClicked;
    /** @type {?} */
    SelectionBarComponent.prototype.nextNavigateBtnClicked;
    /** @type {?} */
    SelectionBarComponent.prototype.monthViewBtnClicked;
    /** @type {?} */
    SelectionBarComponent.prototype.yearViewBtnClicked;
    /** @type {?} */
    SelectionBarComponent.prototype.todayViewBtnClicked;
}
//# sourceMappingURL=data:application/json;base64,