/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-09-04 07:39:58
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-09-04 15:03:39
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { UtilService } from '../../services/public-api';
import { MonthId, KeyCode } from '../../enums/public-api';
import { OPTS, DATES, WEEK_DAYS, SELECTED_DATE, SELECTED_DATE_RANGE } from '../../constants/constants';
// import { IMyWeek } from '../../interfaces/my-month-row.interface'
export class MultiDayViewComponent {
    /**
     * @param {?} utilService
     */
    constructor(utilService) {
        this.utilService = utilService;
        this.selectedDates = [];
        this.dayCellClicked = new EventEmitter();
        this.dayCellKeyDown = new EventEmitter();
        this.weekClicked = new EventEmitter();
        this.onMouseEnter = new EventEmitter();
        this.onMouseLeave = new EventEmitter();
        this.prevMonthId = MonthId.prev;
        this.currMonthId = MonthId.curr;
        this.nextMonthId = MonthId.next;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.hasOwnProperty(OPTS)) {
            this.opts = changes[OPTS].currentValue;
        }
        if (changes.hasOwnProperty(DATES)) {
            this.dates = changes[DATES].currentValue;
        }
        if (changes.hasOwnProperty(WEEK_DAYS)) {
            this.weekDays = changes[WEEK_DAYS].currentValue;
        }
        if (changes.hasOwnProperty(SELECTED_DATE)) {
            this.selectedDate = changes[SELECTED_DATE].currentValue;
        }
        if (changes.hasOwnProperty(SELECTED_DATE_RANGE)) {
            this.selectedDateRange = changes[SELECTED_DATE_RANGE].currentValue;
        }
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */
    onDayCellClicked(event, cell) {
        if (cell.disabled || this.opts.showType === 4) {
            return;
        }
        event.stopPropagation();
        this.dayCellClicked.emit(cell);
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */
    onDayCellKeyDown(event, cell) {
        /** @type {?} */
        const keyCode = this.utilService.getKeyCodeFromEvent(event);
        if (keyCode !== KeyCode.tab) {
            event.preventDefault();
            if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
                this.onDayCellClicked(event, cell);
            }
            else if (this.opts.moveFocusByArrowKeys) {
                this.dayCellKeyDown.emit(cell);
            }
        }
    }
    /**
     * @param {?} event
     * @param {?} week
     * @return {?}
     */
    onWeekClicked(event, week) {
        if (this.opts.showType !== 4) {
            return;
        }
        event.stopPropagation();
        this.weekClicked.emit(week);
    }
    /**
     * @param {?} cell
     * @return {?}
     */
    onDayCellMouseEnter(cell) {
        if (this.utilService.isInitializedDate(this.selectedDateRange.begin) &&
            (!this.utilService.isInitializedDate(this.selectedDateRange.end) ||
                JSON.stringify(this.selectedDateRange.begin) === JSON.stringify(this.selectedDateRange.end))) {
            for (const w of this.dates) {
                for (const day of w.week) {
                    day.range =
                        (this.utilService.isDateSameOrEarlier(this.selectedDateRange.begin, day.dateObj) && this.utilService.isDateSameOrEarlier(day.dateObj, cell.dateObj)) ||
                            (this.utilService.isDateSameOrEarlier(day.dateObj, this.selectedDateRange.begin) && this.utilService.isDateSameOrEarlier(cell.dateObj, day.dateObj));
                }
            }
            this.onMouseEnter.emit(cell);
        }
    }
    /**
     * @return {?}
     */
    onDayCellMouseLeave() {
        for (const w of this.dates) {
            for (const day of w.week) {
                day.range = false;
            }
        }
        this.onMouseLeave.emit();
    }
    /**
     * @param {?} date
     * @return {?}
     */
    isDateInRange(date) {
        return this.utilService.isDateInRange(date, this.selectedDateRange);
    }
    /**
     * @param {?} date
     * @return {?}
     */
    isDateSame(date) {
        return this.utilService.isDateSame({
            year: this.selectedDate.year,
            month: this.selectedDate.month,
            day: this.selectedDate.day
        }, date);
    }
    /**
     * @param {?} date
     * @return {?}
     */
    isDateRangeBeginOrEndSame(date) {
        /** @type {?} */
        const selectedDateRange = {
            begin: {
                year: this.selectedDateRange.begin.year,
                month: this.selectedDateRange.begin.month,
                day: this.selectedDateRange.begin.day
            },
            end: {
                year: this.selectedDateRange.end.year,
                month: this.selectedDateRange.end.month,
                day: this.selectedDateRange.end.day
            }
        };
        return this.utilService.isDateRangeBeginOrEndSame(selectedDateRange, date);
    }
    /**
     * @param {?} date
     * @return {?}
     */
    isDateSelected(date) {
        return !!this.selectedDates.find((/**
         * @param {?} n
         * @return {?}
         */
        n => this.utilService.isDateSame(n, date)));
    }
}
MultiDayViewComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-multi-day-view',
                template: "<div class=\"f-datepicker-table-wrapper\">\r\n    <table class=\"f-datepicker-table\" cellpadding=\"0\">\r\n        <thead>\r\n            <tr>\r\n                <th\r\n                    class=\"f-datepicker-weeknbr-title\" style=\"padding-bottom: 8px;padding-top: 4px\"\r\n                    *ngIf=\"opts.showWeekNumbers\"\r\n                >\r\n                    {{ opts.weekText ? opts.weekText : 'Week'}}\r\n                </th>\r\n                <th\r\n                    scope=\"col\"\r\n                    *ngFor=\"let d of weekDays\"\r\n                    style=\"padding-bottom: 8px;padding-top: 4px\"\r\n                >\r\n                    {{ d }}\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr\r\n                *ngFor=\"let w of dates; let di = index\"\r\n                [ngClass]=\"{\r\n                    'f-datepicker-selectWeek': opts.showType === 4,\r\n                    'f-datepicker-selectedWeek':\r\n                        opts.showType === 4 &&\r\n                        w.weekNbr === selectedWeek.weekNbr &&\r\n                        w.year === selectedWeek.year\r\n                }\"\r\n                (click)=\"onWeekClicked($event, w)\"\r\n            >\r\n                <td\r\n                    class=\"f-datepicker-weeknbr\"\r\n                    *ngIf=\"opts.showWeekNumbers\"\r\n                >\r\n                    <div class=\"f-datepicker-date\">{{ w.weekNbr }}</div>\r\n                </td>\r\n                <td\r\n                    id=\"d_{{ di }}_{{ i }}\"\r\n                    class=\"d_{{ di }}_{{ i }} \"\r\n                    *ngFor=\"let d of w.week; let i = index\"\r\n                    [ngClass]=\"{\r\n                        'f-datepicker-range':\r\n                            opts.showType !== 4 && d.cmo === currMonthId &&\r\n                            ((this.opts.dateRange &&\r\n                                isDateInRange(d.dateObj) &&\r\n                                !isDateRangeBeginOrEndSame(d.dateObj)) ||\r\n                                d.range),\r\n                        'f-datepicker-no-currmonth':\r\n                            d.cmo === prevMonthId || d.cmo === nextMonthId,\r\n                        'f-datepicker-disabled': d.disabled,\r\n                        'f-datepicker-singledate': !d.disabled\r\n                    }\"\r\n                    (click)=\"onDayCellClicked($event, d)\"\r\n                    (keydown)=\"onDayCellKeyDown($event, d)\"\r\n                    (mouseenter)=\"onDayCellMouseEnter(d)\"\r\n                    (mouseleave)=\"onDayCellMouseLeave()\"\r\n                    tabindex=\"0\"\r\n                >\r\n                    <span\r\n                        *ngIf=\"d.markedDate.marked\"\r\n                        class=\"f-datepicker-markdate\"\r\n                        [ngStyle]=\"{ 'background-color': d.markedDate.color }\"\r\n                    ></span>\r\n                    <div\r\n                        class=\"f-datepicker-date\"\r\n                        [ngClass]=\"{\r\n                            'f-datepicker-selected':\r\n                                opts.showType !== 4 &&\r\n                                d.cmo === currMonthId &&\r\n                                ((!this.opts.dateRange && isDateSame(d.dateObj)) ||\r\n                                (this.opts.dateRange && isDateRangeBeginOrEndSame(d.dateObj)) || \r\n                                (this.opts.multiSelect && isDateSelected(d.dateObj))),\r\n                            'f-datepicker-current':\r\n                                d.currDay && opts.markCurrentDay,\r\n                            'f-datepicker-opacity':\r\n                                d.highlight &&\r\n                                (d.cmo === prevMonthId ||\r\n                                    d.cmo === nextMonthId ||\r\n                                    d.disabled),\r\n                            'f-datepicker-highlight': d.highlight,\r\n                            'f-datepicker-disabled': d.disabled\r\n                        }\"\r\n                    >\r\n                        {{ d.dateObj.day }}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n",
                providers: [UtilService],
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
MultiDayViewComponent.ctorParameters = () => [
    { type: UtilService }
];
MultiDayViewComponent.propDecorators = {
    opts: [{ type: Input }],
    dates: [{ type: Input }],
    weekDays: [{ type: Input }],
    selectedDate: [{ type: Input }],
    selectedDateRange: [{ type: Input }],
    selectedWeek: [{ type: Input }],
    selectedDates: [{ type: Input }],
    dayCellClicked: [{ type: Output }],
    dayCellKeyDown: [{ type: Output }],
    weekClicked: [{ type: Output }],
    onMouseEnter: [{ type: Output }],
    onMouseLeave: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    MultiDayViewComponent.prototype.opts;
    /** @type {?} */
    MultiDayViewComponent.prototype.dates;
    /** @type {?} */
    MultiDayViewComponent.prototype.weekDays;
    /** @type {?} */
    MultiDayViewComponent.prototype.selectedDate;
    /** @type {?} */
    MultiDayViewComponent.prototype.selectedDateRange;
    /** @type {?} */
    MultiDayViewComponent.prototype.selectedWeek;
    /** @type {?} */
    MultiDayViewComponent.prototype.selectedDates;
    /** @type {?} */
    MultiDayViewComponent.prototype.dayCellClicked;
    /** @type {?} */
    MultiDayViewComponent.prototype.dayCellKeyDown;
    /** @type {?} */
    MultiDayViewComponent.prototype.weekClicked;
    /** @type {?} */
    MultiDayViewComponent.prototype.onMouseEnter;
    /** @type {?} */
    MultiDayViewComponent.prototype.onMouseLeave;
    /** @type {?} */
    MultiDayViewComponent.prototype.prevMonthId;
    /** @type {?} */
    MultiDayViewComponent.prototype.currMonthId;
    /** @type {?} */
    MultiDayViewComponent.prototype.nextMonthId;
    /**
     * @type {?}
     * @private
     */
    MultiDayViewComponent.prototype.utilService;
}
//# sourceMappingURL=data:application/json;base64,