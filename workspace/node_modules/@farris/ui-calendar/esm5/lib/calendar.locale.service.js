/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
import * as i0 from "@angular/core";
import * as i1 from "@farris/ui-locale";
var CalendarLocaleService = /** @class */ (function () {
    function CalendarLocaleService(localeService) {
        this.localeService = localeService;
        this.localeConfig = {
            'ZH_CN': {
                locale: 'zh-cn',
                buttonText: {
                    today: '今天',
                    month: '月',
                    week: '周',
                    day: '天',
                    listWeek: '列表'
                },
                allDayText: '全天',
                noEventsMessage: '没数据啊',
                eventLimitText: '更多',
                weekNumberTitle: '周',
                firstDay: 1
            },
            'EN_US': {
                locale: 'en'
            }
        };
    }
    /**
     * @return {?}
     */
    CalendarLocaleService.prototype.getLocaleConfig = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var locale = this.localeService.getValue('locale');
        if (locale && this.localeConfig[locale]) {
            return this.localeConfig[locale];
        }
        else {
            return this.localeConfig.ZH_CN;
        }
    };
    CalendarLocaleService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    CalendarLocaleService.ctorParameters = function () { return [
        { type: LocaleService }
    ]; };
    /** @nocollapse */ CalendarLocaleService.ngInjectableDef = i0.defineInjectable({ factory: function CalendarLocaleService_Factory() { return new CalendarLocaleService(i0.inject(i1.LocaleService)); }, token: CalendarLocaleService, providedIn: "root" });
    return CalendarLocaleService;
}());
export { CalendarLocaleService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    CalendarLocaleService.prototype.localeConfig;
    /**
     * @type {?}
     * @private
     */
    CalendarLocaleService.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIubG9jYWxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWNhbGVuZGFyLyIsInNvdXJjZXMiOlsibGliL2NhbGVuZGFyLmxvY2FsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7O0FBRWxEO0lBd0JJLCtCQUFvQixhQUE0QjtRQUE1QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQXBCeEMsaUJBQVksR0FBRztZQUNuQixPQUFPLEVBQUc7Z0JBQ04sTUFBTSxFQUFFLE9BQU87Z0JBQ2YsVUFBVSxFQUFFO29CQUNSLEtBQUssRUFBRSxJQUFJO29CQUNYLEtBQUssRUFBRSxHQUFHO29CQUNWLElBQUksRUFBRSxHQUFHO29CQUNULEdBQUcsRUFBRSxHQUFHO29CQUNSLFFBQVEsRUFBRSxJQUFJO2lCQUNqQjtnQkFDRCxVQUFVLEVBQUcsSUFBSTtnQkFDakIsZUFBZSxFQUFHLE1BQU07Z0JBQ3hCLGNBQWMsRUFBSSxJQUFJO2dCQUN0QixlQUFlLEVBQUcsR0FBRztnQkFDckIsUUFBUSxFQUFFLENBQUM7YUFDZDtZQUNELE9BQU8sRUFBRztnQkFDTixNQUFNLEVBQUUsSUFBSTthQUNmO1NBQ0osQ0FBQztJQUNpRCxDQUFDOzs7O0lBQzdDLCtDQUFlOzs7SUFBdEI7O1lBQ1UsTUFBTSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNwRCxJQUFJLE1BQU0sSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3JDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNwQzthQUFNO1lBQ0gsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQztTQUNsQztJQUNMLENBQUM7O2dCQWhDSixVQUFVLFNBQUM7b0JBQ1IsVUFBVSxFQUFFLE1BQU07aUJBQ3JCOzs7O2dCQUpRLGFBQWE7OztnQ0FEdEI7Q0FvQ0MsQUFqQ0QsSUFpQ0M7U0E5QlkscUJBQXFCOzs7Ozs7SUFDOUIsNkNBbUJFOzs7OztJQUNVLDhDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTG9jYWxlU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2FsZW5kYXJMb2NhbGVTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgbG9jYWxlQ29uZmlnID0ge1xyXG4gICAgICAgICdaSF9DTicgOiB7XHJcbiAgICAgICAgICAgIGxvY2FsZTogJ3poLWNuJyxcclxuICAgICAgICAgICAgYnV0dG9uVGV4dDoge1xyXG4gICAgICAgICAgICAgICAgdG9kYXk6ICfku4rlpKknLFxyXG4gICAgICAgICAgICAgICAgbW9udGg6ICfmnIgnLFxyXG4gICAgICAgICAgICAgICAgd2VlazogJ+WRqCcsXHJcbiAgICAgICAgICAgICAgICBkYXk6ICflpKknLFxyXG4gICAgICAgICAgICAgICAgbGlzdFdlZWs6ICfliJfooagnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGFsbERheVRleHQgOiAn5YWo5aSpJyxcclxuICAgICAgICAgICAgbm9FdmVudHNNZXNzYWdlIDogJ+ayoeaVsOaNruWViicsXHJcbiAgICAgICAgICAgIGV2ZW50TGltaXRUZXh0ICA6ICfmm7TlpJonLFxyXG4gICAgICAgICAgICB3ZWVrTnVtYmVyVGl0bGUgOiAn5ZGoJyxcclxuICAgICAgICAgICAgZmlyc3REYXk6IDFcclxuICAgICAgICB9LFxyXG4gICAgICAgICdFTl9VUycgOiB7XHJcbiAgICAgICAgICAgIGxvY2FsZTogJ2VuJ1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGxvY2FsZVNlcnZpY2U6IExvY2FsZVNlcnZpY2UpIHt9XHJcbiAgICBwdWJsaWMgZ2V0TG9jYWxlQ29uZmlnKCkge1xyXG4gICAgICAgIGNvbnN0IGxvY2FsZSA9IHRoaXMubG9jYWxlU2VydmljZS5nZXRWYWx1ZSgnbG9jYWxlJyk7XHJcbiAgICAgICAgaWYgKGxvY2FsZSAmJiB0aGlzLmxvY2FsZUNvbmZpZ1tsb2NhbGVdKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxvY2FsZUNvbmZpZ1tsb2NhbGVdO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxvY2FsZUNvbmZpZy5aSF9DTjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19