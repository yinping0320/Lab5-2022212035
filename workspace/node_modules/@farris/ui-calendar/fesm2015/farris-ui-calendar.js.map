{"version":3,"file":"farris-ui-calendar.js.map","sources":["ng://@farris/ui-calendar/lib/utils.ts","ng://@farris/ui-calendar/lib/calendar-options.ts","ng://@farris/ui-calendar/lib/calendar.locale.service.ts","ng://@farris/ui-calendar/lib/calendar.config.service.ts","ng://@farris/ui-calendar/lib/calendar.component.ts","ng://@farris/ui-calendar/lib/calendar.module.ts"],"sourcesContent":["const hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst isArray = Array.isArray;\r\nconst keyList = Object.keys;\r\nconst hasProp = Object.prototype.hasOwnProperty;\r\n/*\r\nReally simple clone utility. Only copies plain arrays, objects, and Dates. Transfers everything else as-is.\r\nWanted to use a third-party lib, but none did exactly this.\r\n*/\r\nexport function deepCopy(input) {\r\n    if (Array.isArray(input)) {\r\n        return input.map(deepCopy);\r\n    } else if (input instanceof Date) {\r\n        return new Date(input.valueOf());\r\n    } else if (typeof input === 'object' && input) {\r\n        // non-null object\r\n        return mapHash(input, deepCopy);\r\n    } else {\r\n        // everything else (null, function, etc)\r\n        return input;\r\n    }\r\n}\r\n\r\nfunction mapHash(input, func) {\r\n    const output = {};\r\n\r\n    for (const key in input) {\r\n        if (hasOwnProperty.call(input, key)) {\r\n            output[key] = func(input[key], key);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\nexport function deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n\r\n    // tslint:disable-next-line: triple-equals\r\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\r\n        const arrA = isArray(a);\r\n        const arrB = isArray(b);\r\n        let i: number;\r\n        let length: number;\r\n        let key: any;\r\n\r\n        if (arrA && arrB) {\r\n            length = a.length;\r\n            // tslint:disable-next-line: triple-equals\r\n            if (length != b.length) {\r\n                return false;\r\n            }\r\n            for (i = length; i-- !== 0; ) {\r\n                if (!deepEqual(a[i], b[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        // tslint:disable-next-line: triple-equals\r\n        if (arrA != arrB) {\r\n            return false;\r\n        }\r\n\r\n        const dateA = a instanceof Date;\r\n        const dateB = b instanceof Date;\r\n        // tslint:disable-next-line: triple-equals\r\n        if (dateA != dateB) {\r\n            return false;\r\n        }\r\n        if (dateA && dateB) {\r\n            // tslint:disable-next-line: triple-equals\r\n            return a.getTime() == b.getTime();\r\n        }\r\n\r\n        const regexpA = a instanceof RegExp;\r\n        const regexpB = b instanceof RegExp;\r\n        // tslint:disable-next-line: triple-equals\r\n        if (regexpA != regexpB) {\r\n            return false;\r\n        }\r\n        if (regexpA && regexpB) {\r\n            // tslint:disable-next-line: triple-equals\r\n            return a.toString() == b.toString();\r\n        }\r\n\r\n        const keys = keyList(a);\r\n        length = keys.length;\r\n\r\n        if (length !== keyList(b).length) {\r\n            return false;\r\n        }\r\n\r\n        for (i = length; i-- !== 0; ) {\r\n            if (!hasProp.call(b, keys[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        for (i = length; i-- !== 0; ) {\r\n            key = keys[i];\r\n            if (!deepEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return a !== a && b !== b;\r\n}\r\n","/*\r\nthe docs point to this file as an index of options.\r\nwhen this files is moved, update the docs.\r\n*/\r\n\r\nexport const INPUT_NAMES = [\r\n    'header',\r\n    'footer',\r\n    'customButtons',\r\n    'buttonIcons',\r\n    'themeSystem',\r\n    'bootstrapFontAwesome',\r\n    'firstDay',\r\n    'dir',\r\n    'weekends',\r\n    'hiddenDays',\r\n    'fixedWeekCount',\r\n    'weekNumbers',\r\n    'weekNumbersWithinDays',\r\n    'weekNumberCalculation',\r\n    'businessHours',\r\n    'showNonCurrentDates',\r\n    'height',\r\n    'contentHeight',\r\n    'aspectRatio',\r\n    'handleWindowResize',\r\n    'windowResizeDelay',\r\n    'eventLimit',\r\n    'eventLimitClick',\r\n    'timeZone',\r\n    'now',\r\n    'defaultView',\r\n    'allDaySlot',\r\n    'allDayText',\r\n    'slotDuration',\r\n    'slotLabelFormat',\r\n    'slotLabelInterval',\r\n    'snapDuration',\r\n    'scrollTime',\r\n    'minTime',\r\n    'maxTime',\r\n    'slotEventOverlap',\r\n    'listDayFormat',\r\n    'listDayAltFormat',\r\n    'noEventsMessage',\r\n    'defaultDate',\r\n    'nowIndicator',\r\n    'visibleRange',\r\n    'validRange',\r\n    'dateIncrement',\r\n    'dateAlignment',\r\n    'duration',\r\n    'dayCount',\r\n    'locales',\r\n    'locale',\r\n    'eventTimeFormat',\r\n    'columnHeader',\r\n    'columnHeaderFormat',\r\n    'columnHeaderText',\r\n    'columnHeaderHtml',\r\n    'titleFormat',\r\n    'weekLabel',\r\n    'displayEventTime',\r\n    'displayEventEnd',\r\n    'eventLimitText',\r\n    'dayPopoverFormat',\r\n    'navLinks',\r\n    'selectable',\r\n    'selectMirror',\r\n    'selectMinDistance',\r\n    'unselectAuto',\r\n    'unselectCancel',\r\n    'defaultAllDayEventDuration',\r\n    'defaultTimedEventDuration',\r\n    'cmdFormatter',\r\n    'defaultRangeSeparator',\r\n    'selectConstraint',\r\n    'selectOverlap',\r\n    'selectAllow',\r\n    'editable',\r\n    'eventStartEditable',\r\n    'eventDurationEditable',\r\n    'eventConstraint',\r\n    'eventOverlap',\r\n    'eventAllow',\r\n    'eventClassName',\r\n    'eventClassNames',\r\n    'eventBackgroundColor',\r\n    'eventBorderColor',\r\n    'eventTextColor',\r\n    'eventColor',\r\n    'events',\r\n    'eventSources',\r\n    'allDayDefault',\r\n    'startParam',\r\n    'endParam',\r\n    'lazyFetching',\r\n    'nextDayThreshold',\r\n    'eventOrder',\r\n    'rerenderDelay',\r\n    'dragRevertDuration',\r\n    'dragScroll',\r\n    'longPressDelay',\r\n    'eventLongPressDelay',\r\n    'droppable',\r\n    'dropAccept',\r\n    'eventDataTransform',\r\n    'allDayMaintainDuration',\r\n    'eventResizableFromStart',\r\n    'timeGridEventMinHeight',\r\n    'allDayHtml',\r\n    'eventDragMinDistance',\r\n    'eventSourceFailure',\r\n    'eventSourceSuccess',\r\n    'forceEventDuration',\r\n    'progressiveEventRendering',\r\n    'selectLongPressDelay',\r\n    'selectMinDistance',\r\n    'timeZoneParam',\r\n    'titleRangeSeparator',\r\n    // compound OptionsInput...\r\n    'buttonText',\r\n    'views',\r\n    'plugins',\r\n    // scheduler...\r\n    'schedulerLicenseKey',\r\n    'resources',\r\n    'resourceLabelText',\r\n    'resourceOrder',\r\n    'filterResourcesWithEvents',\r\n    'resourceText',\r\n    'resourceGroupField',\r\n    'resourceGroupText',\r\n    'resourceAreaWidth',\r\n    'resourceColumns',\r\n    'resourcesInitiallyExpanded',\r\n    'slotWidth',\r\n    'datesAboveResources',\r\n    'googleCalendarApiKey',\r\n    'refetchResourcesOnNavigate',\r\n    'eventResourceEditable'\r\n];\r\n\r\nexport const INPUT_IS_DEEP = {\r\n    header: true,\r\n    footer: true,\r\n    events: true,\r\n    eventSources: true,\r\n    resources: true\r\n};\r\n\r\nexport const OUTPUT_NAMES = [\r\n    'windowResize',\r\n    'dateClick',\r\n    'eventClick',\r\n    'navLinkDayClick',\r\n    'navLinkWeekClick',\r\n    'eventMouseEnter',\r\n    'eventMouseLeave',\r\n    'select',\r\n    'unselect',\r\n    'loading',\r\n    'eventPositioned',\r\n    'eventDragStart',\r\n    'eventDragStop',\r\n    'eventDrop',\r\n    'eventResizeStart',\r\n    'eventResizeStop',\r\n    'eventResize',\r\n    'drop',\r\n    'eventReceive',\r\n    'eventLeave',\r\n    '_destroyed',\r\n    // TODO: make these inputs...\r\n    'viewSkeletonRender',\r\n    'viewSkeletonDestroy',\r\n    'datesRender',\r\n    'datesDestroy',\r\n    'dayRender',\r\n    'eventRender',\r\n    'eventDestroy',\r\n    'resourceRender'\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CalendarLocaleService {\r\n    private localeConfig = {\r\n        'ZH_CN' : {\r\n            locale: 'zh-cn',\r\n            buttonText: {\r\n                today: 'ä»å¤©',\r\n                month: 'æ',\r\n                week: 'å¨',\r\n                day: 'å¤©',\r\n                listWeek: 'åè¡¨'\r\n            },\r\n            allDayText : 'å¨å¤©',\r\n            noEventsMessage : 'æ²¡æ°æ®å',\r\n            eventLimitText  : 'æ´å¤',\r\n            weekNumberTitle : 'å¨',\r\n            firstDay: 1\r\n        },\r\n        'EN_US' : {\r\n            locale: 'en'\r\n        }\r\n    };\r\n    constructor(private localeService: LocaleService) {}\r\n    public getLocaleConfig() {\r\n        const locale = this.localeService.getValue('locale');\r\n        if (locale && this.localeConfig[locale]) {\r\n            return this.localeConfig[locale];\r\n        } else {\r\n            return this.localeConfig.ZH_CN;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OptionsInput } from '@fullcalendar/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGrigPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport {CalendarLocaleService} from './calendar.locale.service';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DefaultConfigService {\r\n    constructor(private localeService: CalendarLocaleService) {}\r\n    private defaultConfig: OptionsInput = {\r\n        header: {\r\n            left: 'prevYear,prev,next,nextYear today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        },\r\n        navLinks: true, // can click day/week names to navigate views\r\n        editable: true,\r\n        selectable: true,\r\n        defaultView: 'dayGridMonth',\r\n        eventLimit: true, // allow \"more\" link when too many events\r\n        plugins: [dayGridPlugin, timeGrigPlugin, interactionPlugin]\r\n    };\r\n    public getDefaultConfig() {\r\n        return Object.assign(this.defaultConfig, this.localeService.getLocaleConfig());\r\n        // return this.defaultConfig;\r\n    }\r\n}\r\n","// import deepEqual from 'fast-deep-equal';\r\nimport { deepCopy, deepEqual } from \"./utils\";\r\nimport {\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    SimpleChanges,\r\n    AfterViewInit,\r\n    DoCheck,\r\n    OnChanges,\r\n    AfterContentChecked,\r\n    OnDestroy,\r\n    ViewEncapsulation,\r\n    ChangeDetectionStrategy,\r\n    Injector\r\n} from \"@angular/core\";\r\nimport {\r\n    Calendar,\r\n    BusinessHoursInput,\r\n    ConstraintInput,\r\n    EventApi,\r\n    PluginDef\r\n} from \"@fullcalendar/core\";\r\nimport {\r\n    ToolbarInput,\r\n    CustomButtonInput,\r\n    ButtonIconsInput,\r\n    CellInfo,\r\n    ButtonTextCompoundInput,\r\n    ViewOptionsInput\r\n} from \"@fullcalendar/core/types/input-types\";\r\nimport { DateInput } from \"@fullcalendar/core/datelib/env\";\r\nimport { DurationInput } from \"@fullcalendar/core/datelib/duration\";\r\nimport { FormatterInput } from \"@fullcalendar/core/datelib/formatting\";\r\nimport { DateRangeInput } from \"@fullcalendar/core/datelib/date-range\";\r\nimport {\r\n    RawLocale,\r\n    LocaleSingularArg\r\n} from \"@fullcalendar/core/datelib/locale\";\r\nimport { OverlapFunc, AllowFunc } from \"@fullcalendar/core/validation\";\r\nimport {\r\n    EventSourceInput,\r\n    EventInputTransformer,\r\n    EventSourceErrorResponseHandler,\r\n    EventSourceSuccessResponseHandler\r\n} from \"@fullcalendar/core/structs/event-source\";\r\nimport { INPUT_NAMES, INPUT_IS_DEEP, OUTPUT_NAMES } from \"./calendar-options\";\r\nimport { DefaultConfigService } from \"./calendar.config.service\";\r\nimport { Observable } from \"rxjs\";\r\nimport { FarrisComponentInstanceService } from '@farris/ui-common';\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: \"farris-calendar\",\r\n    template: \"\",\r\n    styleUrls: [\"./calendar.component.css\"],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CalendarComponent\r\n    implements\r\n        AfterViewInit,\r\n        DoCheck,\r\n        OnChanges,\r\n        AfterContentChecked,\r\n        OnDestroy {\r\n    @Input() deepChangeDetection?: boolean;\r\n    // è®¾ç½®å¤´é¨ä¿¡æ¯ï¼å¦æä¸æ³æ¾ç¤ºï¼å¯ä»¥è®¾ç½®headerä¸ºfalse\r\n    @Input() header?: boolean | ToolbarInput;\r\n    @Input() footer?: boolean | ToolbarInput;\r\n    @Input() customButtons?: { [name: string]: CustomButtonInput };\r\n    // è®¾ç½®headerä¸­ä½¿ç¨çprev, nextç­åéå¯¹åºæé®çæ ·å¼\r\n    @Input() buttonIcons?: boolean | ButtonIconsInput;\r\n    @Input() themeSystem?: \"standard\" | string;\r\n    @Input() bootstrapFontAwesome?: boolean | ButtonIconsInput;\r\n    // è®¾ç½®ä¸å¨ä¸­æ¾ç¤ºçç¬¬ä¸å¤©æ¯åªå¤©ï¼å¨æ¥æ¯0ï¼å¨ä¸æ¯1ï¼ç±»æ¨ã\r\n    @Input() firstDay?: number;\r\n    @Input() dir?: \"ltr\" | \"rtl\" | \"auto\";\r\n    // è®¾ç½®æ¯å¦æ¾ç¤ºå¨å­åå¨æ¥ï¼è®¾ä¸ºfalseåä¸æ¾ç¤º\r\n    @Input() weekends?: boolean;\r\n    // éèä¸å¨ä¸­çæä¸å¤©ææå å¤©ï¼æ°ç»å½¢å¼ï¼å¦éèå¨äºåå¨äºï¼[2,5]ï¼é»è®¤ä¸éèï¼é¤éweekendsè®¾ç½®ä¸ºfalseã\r\n    @Input() hiddenDays?: number[];\r\n    // Determines the number of weeks displayed in a month view.\r\n    @Input() fixedWeekCount?: boolean;\r\n    // æ¯å¦å¨æ¥åä¸­æ¾ç¤ºå¨æ¬¡(ä¸å¹´ä¸­çç¬¬å å¨)ï¼å¦æè®¾ç½®ä¸ºtrueï¼åä¼å¨æè§å¾çå·¦ä¾§ãå¨è§å¾åæ¥è§å¾çå·¦ä¸è§æ¾ç¤ºå¨æ°ã\r\n    @Input() weekNumbers?: boolean;\r\n    // Determines the styling for week numbers in Month and DayGrid views.\r\n    @Input() weekNumbersWithinDays?: boolean;\r\n    // å¨æ¬¡çæ¾ç¤ºæ ¼å¼ã\r\n    @Input() weekNumberCalculation?: \"local\" | \"ISO\" | ((m: Date) => number);\r\n    // åºåå·¥ä½æ¶é´\r\n    @Input() businessHours?: BusinessHoursInput;\r\n    // In month view, whether dates in the previous or next month should be rendered at all.\r\n    @Input() showNonCurrentDates?: boolean;\r\n    // è®¾ç½®æ¥åçé«åº¦ï¼åæ¬headeræ¥åå¤´é¨ï¼é»è®¤æªè®¾ç½®ï¼é«åº¦æ ¹æ®aspectRatioå¼èªéåºã\r\n    @Input() height?: number | \"auto\" | \"parent\" | (() => number);\r\n    // è®¾ç½®æ¥åä¸»ä½åå®¹çé«åº¦ï¼ä¸åæ¬headeré¨åï¼é»è®¤æªè®¾ç½®ï¼é«åº¦æ ¹æ®aspectRatioå¼èªéåº\r\n    @Input() contentHeight?: number | \"auto\" | (() => number);\r\n    // æè§å¾ä¸æ¥åæ ¼å­å®½åº¦åé«åº¦çæ¯ä¾\r\n    @Input() aspectRatio?: number;\r\n    // æ¯å¦éæµè§å¨çªå£å¤§å°ååèèªå¨ååã\r\n    @Input() handleWindowResize?: boolean;\r\n    // The time the calendar will wait to adjust its size after a window resize occurs, in milliseconds.\r\n    @Input() windowResizeDelay?: number;\r\n    // è®¾ç½®ä¸ºtrueæ¶ï¼å¦ææ°æ®è¿å¤è¶è¿æ¥åæ ¼å­æ¾ç¤ºçé«åº¦æ¶ï¼å¤åºå»çæ°æ®ä¸ä¼å°æ ¼å­æ¤å¼ï¼èæ¯æ¾ç¤ºä¸º +...more ï¼ç¹å»åæä¼å®æ´æ¾ç¤ºææçæ°æ®\r\n    @Input() eventLimit?: boolean | number;\r\n    // Determines the action taken when the user clicks on a âmoreâ link created by the eventLimit option.\r\n    @Input() eventLimitClick?:\r\n        | \"popover\"\r\n        | \"week\"\r\n        | \"day\"\r\n        | string\r\n        | ((cellinfo: CellInfo, jsevent: Event) => void);\r\n    // æ¶åºéæ©  é»è®¤ local\r\n    @Input() timeZone?: string | boolean;\r\n    // Explicitly sets the âtodayâ date of the calendar. This is the day that is normally highlighted in yellow.\r\n    @Input() now?: DateInput | (() => DateInput);\r\n    // åå§åæ¶çé»è®¤è§å¾\r\n    @Input() defaultView?: string;\r\n    // å¨agendaè§å¾æ¨¡å¼ä¸ï¼æ¯å¦å¨æ¥åä¸æ¹æ¾ç¤ºall-day(å¨å¤©)\r\n    @Input() allDaySlot?: boolean;\r\n    // \tå¨agendaè§å¾æ¨¡å¼ä¸ï¼å®ä¹æ¥åä¸æ¹æ¾ç¤ºå¨å¤©ä¿¡æ¯çææ¬\r\n    @Input() allDayText?: string;\r\n    // The frequency for displaying time slots.\r\n    @Input() slotDuration?: DurationInput;\r\n    // Determines the text that will be displayed within a time slot.\r\n    @Input() slotLabelFormat?: FormatterInput;\r\n    // The frequency that the time slots should be labelled with text.\r\n    @Input() slotLabelInterval?: DurationInput;\r\n    // The time interval at which a dragged event will snap to the time axis. Also affects the granularity at which selections can be made.\r\n    @Input() snapDuration?: DurationInput;\r\n    // Determines how far forward the scroll pane is initially scrolled.\r\n    @Input() scrollTime?: DurationInput;\r\n    // Determines the first time slot that will be displayed for each day.\r\n    @Input() minTime?: DurationInput;\r\n    // Determines the last time slot that will be displayed for each day.\r\n    @Input() maxTime?: DurationInput;\r\n    // Determines if timed events in TimeGrid view should visually overlap.\r\n    @Input() slotEventOverlap?: boolean;\r\n    // A Date Formatter that affects the text on the left side of the day headings in list view.\r\n    @Input() listDayFormat?: FormatterInput | boolean;\r\n    // A Date Formatter that affects the text on the right side of the day headings in list view.\r\n    @Input() listDayAltFormat?: FormatterInput | boolean;\r\n    // The text that is displayed in the middle of list view, alerting the user that there are no events within the given range.\r\n    @Input() noEventsMessage?: string;\r\n    // æ¥ååå§åæ¶æ¾ç¤ºçæ¥æï¼æè§å¾æ¾ç¤ºè¯¥æï¼å¨è§å¾æ¾ç¤ºè¯¥å¨ï¼æ¥è§å¾æ¾ç¤ºè¯¥å¤©ï¼åå½åæ¥ææ²¡æå³ç³»\r\n    @Input() defaultDate?: DateInput;\r\n    // Whether or not to display a marker indicating the current time.\r\n    @Input() nowIndicator?: boolean;\r\n    @Input() visibleRange?:\r\n        | ((currentDate: Date) => DateRangeInput)\r\n        | DateRangeInput;\r\n    // Limits which dates the user can navigate to and where events can go.\r\n    @Input() validRange?: DateRangeInput;\r\n    // How far into the future/past the calendar navigates when prev/next is executed\r\n    @Input() dateIncrement?: DurationInput;\r\n    // ç¡®å®èªå®ä¹è§å¾çç¬¬ä¸ä¸ªå¯è§æ¥ã\r\n    @Input() dateAlignment?: string;\r\n    @Input() duration?: DurationInput;\r\n    @Input() dayCount?: number;\r\n    // The locale and locales options allow you to localize calendar\r\n    @Input() locales?: RawLocale[];\r\n    @Input() locale?: LocaleSingularArg;\r\n    @Input() eventTimeFormat?: FormatterInput;\r\n    @Input() columnHeader?: boolean;\r\n    @Input() columnHeaderFormat?: FormatterInput;\r\n    @Input() columnHeaderText?: string | ((date: DateInput) => string);\r\n    @Input() columnHeaderHtml?: string | ((date: DateInput) => string);\r\n    @Input() titleFormat?: FormatterInput;\r\n    @Input() weekLabel?: string;\r\n    @Input() displayEventTime?: boolean;\r\n    @Input() displayEventEnd?: boolean;\r\n    // Determines the text of the link created by the eventLimit setting.\r\n    @Input() eventLimitText?: string | ((eventCnt: number) => string);\r\n    // ç¡®å®ç±eventLimitClickéé¡¹åå»ºçå¼¹åºçªå£æ é¢çæ¥ææ ¼å¼\r\n    @Input() dayPopoverFormat?: FormatterInput;\r\n    // ç¡®å®æ¯å¦å¯ä»¥åå»æ¥ååå¨å\r\n    @Input() navLinks?: boolean;\r\n    // Determines what happens upon a week-number nav-link click.\r\n    @Input() navLinkWeekClick?:\r\n        | string\r\n        | ((weekStart: any, jsEvent: Event) => void);\r\n    // è®¾ç½®æ¯å¦å¯è¢«åå»æèæå¨éæ©\r\n    @Input() selectable?: boolean;\r\n    // Whether to draw a âplaceholderâ event while the user is dragging.\r\n    @Input() selectMirror?: boolean;\r\n    // ç¹å»æèæå¨éä¸­ä¹åï¼ç¹å»æ¥åå¤çç©ºç½åºåæ¯å¦åæ¶éä¸­ç¶æ trueä¸ºåæ¶ falseä¸ºä¸åæ¶ï¼åªæéæ°éæ©æ¶æä¼åæ¶\r\n    @Input() unselectAuto?: boolean;\r\n    // A way to specify elements that will ignore the unselectAuto option.\r\n    @Input() unselectCancel?: string;\r\n    @Input() defaultAllDayEventDuration?: DurationInput;\r\n    @Input() defaultTimedEventDuration?: DurationInput;\r\n    @Input() cmdFormatter?: string;\r\n    @Input() defaultRangeSeparator?: string;\r\n    // Limits user selection to certain windows of time.\r\n    @Input() selectConstraint?: ConstraintInput;\r\n    // Determines whether the user is allowed to select periods of time that are occupied by events.\r\n    @Input() selectOverlap?: boolean | OverlapFunc;\r\n    // Exact programmatic control over where the user can select.\r\n    @Input() selectAllow?: AllowFunc;\r\n    // The minimum distance the userâs mouse must travel after a mousedown, before a selection is allowed.\r\n    @Input() selectMinDistance?: number;\r\n    // Eventæ¯å¦å¯è¢«æå¨æèææ½\r\n    @Input() editable?: boolean;\r\n    // Allow eventsâ start times to be editable through dragging.\r\n    @Input() eventStartEditable?: boolean;\r\n    // Allow eventsâ durations to be editable through resizing.\r\n    @Input() eventDurationEditable?: boolean;\r\n    // Limits event dragging and resizing to certain windows of time.\r\n    @Input() eventConstraint?: ConstraintInput;\r\n    // Determines if events being dragged and resized are allowed to overlap each other.\r\n    @Input() eventOverlap?: boolean | OverlapFunc;\r\n    // Exact programmatic control over where an event can be dropped.\r\n    @Input() eventAllow?: AllowFunc;\r\n    @Input() eventClassName?: string[] | string;\r\n    @Input() eventClassNames?: string[] | string;\r\n    @Input() eventBackgroundColor?: string;\r\n    @Input() eventBorderColor?: string;\r\n    @Input() eventTextColor?: string;\r\n    @Input() eventColor?: string;\r\n    // æ¥ç¨æ°æ®\r\n    @Input()\r\n    set events(e: any) {\r\n        if (e instanceof Observable) {\r\n            e.subscribe((val: EventSourceInput) => {\r\n                this._events = val;\r\n            });\r\n        } else {\r\n            this._events = e;\r\n        }\r\n    }\r\n    get events(): any {\r\n        return this._events;\r\n    }\r\n    // æå®å¤ä¸ªäºä»¶æºçæ¹æ³ã\r\n    @Input() eventSources?: EventSourceInput[];\r\n    @Input() allDayDefault?: boolean;\r\n    // A parameter of this name will be sent to each JSON event feed. It describes the start of the interval being fetched.\r\n    @Input() startParam?: string;\r\n    // A parameter of this name will be sent to each JSON event feed. It describes the exclusive end of the interval being fetched.\r\n    @Input() endParam?: string;\r\n    // Determines when event fetching should occur.\r\n    @Input() lazyFetching?: boolean;\r\n    @Input() nextDayThreshold?: DurationInput;\r\n    @Input() eventOrder?:\r\n        | string\r\n        | Array<\r\n              | ((a: EventApi, b: EventApi) => number)\r\n              | (string | ((a: EventApi, b: EventApi) => number))\r\n          >;\r\n    @Input() rerenderDelay?: number | null;\r\n    // Time it takes for an event to revert to its original position after an unsuccessful drag.\r\n    @Input() dragRevertDuration?: number;\r\n    // Whether to automatically scoll the scroll-containers during event drag-and-drop and date selecting.\r\n    @Input() dragScroll?: boolean;\r\n    @Input() longPressDelay?: number;\r\n    @Input() eventLongPressDelay?: number;\r\n    // Determines if external draggable elements or events from other calendars can be dropped onto the calendar.\r\n    @Input() droppable?: boolean;\r\n    // Provides a way to filter which external elements can be dropped onto the calendar.\r\n    @Input() dropAccept?: string | ((draggable: any) => boolean);\r\n    @Input() eventDataTransform?: EventInputTransformer;\r\n    @Input() allDayMaintainDuration?: boolean;\r\n    @Input() eventResizableFromStart?: boolean;\r\n    @Input() timeGridEventMinHeight?: number;\r\n    @Input() allDayHtml?: string;\r\n    @Input() eventDragMinDistance?: number;\r\n    // å½ä»»ä½äºä»¶æºå¤±è´¥æ¶è°ç¨\r\n    @Input() eventSourceFailure?: EventSourceErrorResponseHandler;\r\n    // A function that gets called when fetching succeeds.\r\n    @Input() eventSourceSuccess?: EventSourceSuccessResponseHandler;\r\n    @Input() forceEventDuration?: boolean;\r\n    @Input() progressiveEventRendering?: boolean;\r\n    @Input() selectLongPressDelay?: number;\r\n    // A parameter of this name will be sent to each JSON event feed. It describes the timezone of the startParam and endParam values\r\n    @Input() timeZoneParam?: string;\r\n    @Input() titleRangeSeparator?: string;\r\n    // compound OptionsInput...\r\n    @Input() buttonText?: ButtonTextCompoundInput;\r\n    @Input() views?: { [viewId: string]: ViewOptionsInput };\r\n    @Input() plugins?: (PluginDef | string)[];\r\n    // scheduler...\r\n    @Input() schedulerLicenseKey?: string;\r\n    @Input() resources?: any;\r\n    @Input() resourceLabelText?: string;\r\n    @Input() resourceOrder?: any;\r\n    @Input() filterResourcesWithEvents?: any;\r\n    @Input() resourceText?: any;\r\n    @Input() resourceGroupField?: any;\r\n    @Input() resourceGroupText?: any;\r\n    @Input() resourceAreaWidth?: any;\r\n    @Input() resourceColumns?: any;\r\n    @Input() resourcesInitiallyExpanded?: any;\r\n    @Input() slotWidth?: any;\r\n    @Input() datesAboveResources?: any;\r\n    @Input() googleCalendarApiKey?: string;\r\n    @Input() refetchResourcesOnNavigate?: boolean;\r\n    @Input() eventResourceEditable?: boolean;\r\n\r\n    // Determines what happens upon a day heading nav-link click.\r\n    @Output() navLinkDayClick = new EventEmitter<any>(); // ?: string | ((date: Date, jsEvent: Event) => void);\r\n    @Output() windowResize = new EventEmitter<any>();\r\n    @Output() dateClick = new EventEmitter<any>();\r\n    // ç¼è¾äºä»¶\r\n    @Output() eventClick = new EventEmitter<any>();\r\n    @Output() eventMouseEnter = new EventEmitter<any>();\r\n    @Output() eventMouseLeave = new EventEmitter<any>();\r\n    @Output() select = new EventEmitter<any>();\r\n    @Output() unselect = new EventEmitter<any>();\r\n    @Output() loading = new EventEmitter<any>();\r\n    @Output() eventPositioned = new EventEmitter<any>();\r\n    @Output() eventDragStart = new EventEmitter<any>();\r\n    @Output() eventDragStop = new EventEmitter<any>();\r\n    // æå¨äºä»¶\r\n    @Output() eventDrop = new EventEmitter<any>();\r\n    @Output() eventResizeStart = new EventEmitter<any>();\r\n    @Output() eventResizeStop = new EventEmitter<any>();\r\n    @Output() eventResize = new EventEmitter<any>();\r\n    @Output() drop = new EventEmitter<any>();\r\n    @Output() eventReceive = new EventEmitter<any>();\r\n    @Output() eventLeave = new EventEmitter<any>();\r\n    // tslint:disable-next-line: variable-name\r\n    @Output() _destroyed = new EventEmitter<any>();\r\n    // TODO: make these inputs...\r\n    @Output() viewSkeletonRender = new EventEmitter<any>();\r\n    @Output() viewSkeletonDestroy = new EventEmitter<any>();\r\n    @Output() datesRender = new EventEmitter<any>();\r\n    @Output() datesDestroy = new EventEmitter<any>();\r\n    @Output() dayRender = new EventEmitter<any>();\r\n    @Output() eventRender = new EventEmitter<any>();\r\n    @Output() eventDestroy = new EventEmitter<any>();\r\n    @Output() resourceRender = new EventEmitter<any>();\r\n\r\n    private calendar: Calendar;\r\n    private dirtyProps: any = {};\r\n    private deepCopies: any = {}; // holds frozen states\r\n    private _events: EventSourceInput;\r\n\r\n    private farrisInstances: FarrisComponentInstanceService = null;\r\n\r\n    constructor(\r\n        public element: ElementRef,\r\n        private configService: DefaultConfigService,\r\n        public injector: Injector\r\n    ) {\r\n        this.farrisInstances = this.injector.get(FarrisComponentInstanceService, null);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.calendar = new Calendar(\r\n            this.element.nativeElement,\r\n            Object.assign(\r\n                {},\r\n                this.configService.getDefaultConfig(),\r\n                this.buildOptions()\r\n            )\r\n        );\r\n        this.calendar.render();\r\n\r\n        if (this.element && this.farrisInstances) {\r\n            this.farrisInstances.add(this.element.nativeElement, this);\r\n        }\r\n    }\r\n\r\n    private buildOptions() {\r\n        const options = {};\r\n\r\n        OUTPUT_NAMES.forEach(outputName => {\r\n            options[outputName] = (...args) => {\r\n                this[outputName].emit(...args);\r\n            };\r\n        });\r\n\r\n        // do after outputs, so that inputs with same name override\r\n        INPUT_NAMES.forEach(inputName => {\r\n            let inputVal = this[inputName];\r\n\r\n            if (inputVal !== undefined) {\r\n                // unfortunately FC chokes when some props are set to undefined\r\n                if (inputName === \"header\") {\r\n                    inputVal = Object.assign(\r\n                        {},\r\n                        this.configService.getDefaultConfig().header,\r\n                        inputVal\r\n                    );\r\n                }\r\n                if (this.deepChangeDetection && INPUT_IS_DEEP[inputName]) {\r\n                    inputVal = deepCopy(inputVal);\r\n                    this.deepCopies[inputName] = inputVal; // side effect!\r\n                }\r\n\r\n                options[inputName] = inputVal;\r\n            }\r\n        });\r\n        return options;\r\n    }\r\n\r\n    /*\r\n  called before ngOnChanges, allows us to manually detect input changes.\r\n  called much more often than ngOnChanges.\r\n  */\r\n    ngDoCheck() {\r\n        if (this.calendar && this.deepChangeDetection) {\r\n            // not the initial render AND we do deep-mutation checks\r\n            const { deepCopies } = this;\r\n\r\n            for (const inputName in INPUT_IS_DEEP) {\r\n                if (INPUT_IS_DEEP.hasOwnProperty(inputName)) {\r\n                    let inputVal = this[inputName];\r\n\r\n                    if (inputVal !== undefined) {\r\n                        // unfortunately FC chokes when some props are set to undefined\r\n                        if (!deepEqual(inputVal, deepCopies[inputName])) {\r\n                            const copy = deepCopy(inputVal);\r\n                            deepCopies[inputName] = copy;\r\n                            this.dirtyProps[inputName] = copy;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n        called with confirmed changes to input references\r\n    */\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.calendar) {\r\n            // not the initial render\r\n\r\n            for (const inputName in changes) {\r\n                if (changes.hasOwnProperty(inputName)) {\r\n                    if (this.deepCopies[inputName] === undefined) {\r\n                        // not already handled in ngDoCheck\r\n                        // this.dirtyProps[inputName] =\r\n                        //     changes[inputName].currentValue;\r\n                        if (\r\n                            changes[inputName].currentValue instanceof\r\n                            Observable\r\n                        ) {\r\n                            changes[inputName].currentValue.subscribe(\r\n                                (val: EventSourceInput) => {\r\n                                    this.dirtyProps[inputName] = val;\r\n                                }\r\n                            );\r\n                        } else {\r\n                            this.dirtyProps[inputName] =\r\n                                changes[inputName].currentValue;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterContentChecked() {\r\n        const { dirtyProps } = this; // hold on to reference before clearing\r\n\r\n        if (Object.keys(dirtyProps).length > 0) {\r\n            this.dirtyProps = {}; // clear first, in case the rerender causes new dirtiness\r\n            this.calendar.mutateOptions(dirtyProps, [], false, deepEqual);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.calendar) {\r\n            this.calendar.destroy();\r\n        }\r\n        this.calendar = null;\r\n    }\r\n\r\n    public getApi(): Calendar {\r\n        return this.calendar;\r\n    }\r\n    public render() {\r\n        this.calendar.render();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarComponent } from './calendar.component';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\n@NgModule({\r\n    declarations: [CalendarComponent],\r\n    imports: [\r\n        LocaleModule,\r\n        FarrisCommonModule\r\n    ],\r\n    exports: [CalendarComponent]\r\n})\r\nexport class CalendarModule {}\r\n"],"names":[],"mappings":"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"}
