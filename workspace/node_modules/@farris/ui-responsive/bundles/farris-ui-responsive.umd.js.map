{"version":3,"file":"farris-ui-responsive.umd.js.map","sources":["ng://@farris/ui-responsive/lib/row/res-row.directive.ts","ng://@farris/ui-responsive/lib/col/res-col.directive.ts","ng://@farris/ui-responsive/lib/container/res-container.directive.ts","ng://@farris/ui-responsive/lib/responsive.module.ts"],"sourcesContent":["import { Directive, Input, ElementRef, HostBinding, OnInit } from '@angular/core';\n@Directive({\n    selector: '[farris-row]',\n})\nexport class FarrisRowDirective implements OnInit {\n    @Input() type: string = 'flex';\n    @Input() gutter: number = 16;\n    @Input() justify: string = 'start';\n    @Input() align: string = 'start';\n    /**\n     * xs={\n     * justify:'start',\n     * align:'start'\n     * }\n     */\n    @Input() xs: any;\n    @Input() sm: any;\n    @Input() md: any;\n    @Input() lg: any;\n    @Input() xl: any;\n    @HostBinding('class')\n    get respClass() {\n        return `${this.getJustifyClass()}${this.getAlignClass()}${this.getGutterClass()}${this.getBreakpointClass()}`;\n    }\n    // ç»å®row å°class\n    @HostBinding('class.row') isRow = this.type === 'flex';\n    //\n    nativeClass: string = '';\n    constructor(private el: ElementRef) {\n        // åå§åç±»å æ·»å å®¿ä¸»åç´ å·²æçç±»å\n        this.nativeClass += this.el.nativeElement.classList.value;\n    }\n    ngOnInit() {\n    }\n    // è·åjustify class\n    getJustifyClass() {\n        const justifyStr = this.justify !== 'start' ? ` justify-content-${this.justify}` : ' ';\n        return `${this.nativeClass}${justifyStr}`;\n    }\n    // è·å align class\n    getAlignClass() {\n        return this.align !== 'start' ? ` align-items-${this.align}` : ' ';\n    }\n    // ååºå¼ justify\n    getBreakpointClass() {\n        const makeClass = (breakpoint: string): string => {\n            const props = this[breakpoint] || {};\n            // è·åå¯¹è±¡ä¸­  justifyæèalign\n            return Object.keys(props).map(prop => prop === 'justify' ?\n                `justify-content-${breakpoint}-${props[prop]}` : `align-items-${breakpoint}-${props[prop]}`).join(' ');\n        };\n        const classStr = ['sm', 'md', 'lg', 'xl'].reduce((pre, current) => {\n            return `${pre} ${makeClass(current)}`;\n        }, '');\n        return classStr;\n    }\n    // ææ é´é\n    getGutterClass() {\n        return !this.gutter ? ' no-gutters' : ' ';\n    }\n}\n","import { Directive, Input, ElementRef, HostBinding } from '@angular/core';\n@Directive({\n    selector: '[farris-col]'\n})\nexport class FarrisColDirective {\n    // col\n    @Input() col: boolean;\n    @Input('col-sm') colSm: boolean;\n    @Input('col-md') colMd: boolean;\n    @Input('col-lg') colLg: boolean;\n    @Input('col-xl') colXl: boolean;\n    @Input() span: number = 0;\n    // åå³ç§»å¨å ä¸ªcol\n    @Input() offset: number = 0;\n    // order colé¡ºåº\n    @Input() order: number;\n    // <576\n    @Input() xs: any;\n    // >=576\n    @Input() sm: any;\n    // >=768\n    @Input() md: any;\n    // >=960\n    @Input() lg: any;\n    // >=1200\n    @Input() xl: any;\n    @HostBinding('class')\n    get ColClass() {\n        return `${this.nativeClass} ${this.getSpanClass()}${this.getBreakpointClass()}${this.getOffsetClass()}${this.getOrderClass()}`;\n    }\n    @HostBinding('class.col')\n    get isCol() {\n        return this.col;\n    }\n    @HostBinding('class.col-sm')\n    get isColSm() {\n        return this.colSm;\n    }\n    @HostBinding('class.col-md')\n    get isColMd() {\n        return this.colMd;\n    }\n    @HostBinding('class.col-lg')\n    get isColLg() {\n        return this.colLg;\n    }\n    @HostBinding('class.col-xl')\n    get isColXl() {\n        return this.colXl;\n    }\n    nativeClass = '';\n    constructor(private el: ElementRef) {\n        this.nativeClass += this.el.nativeElement.classList.value;\n    }\n    /* è·åspan ç±»å */\n    getSpanClass() {\n        return this.span ? ` col-${this.span}` : ` `;\n    }\n    /* è·åååºå¼ ç±»å  xs sm md lg xl å¯ä»¥æ¯æ°å­ï¼ä»£è¡¨span;ä¹å¯ä»¥æ¯å¯¹è±¡ï¼åé¨åå«span offset*/\n    getBreakpointClass() {\n        const makeClass = (breakpoint: string): string => {\n            const props = this[breakpoint] || {};\n            // è·åå¯¹è±¡ä¸­  spanæèoffset\n            return Object.keys(props).map(prop => prop === 'span' ?\n                `col-${breakpoint}-${props[prop]}` : prop === 'offset' ? `offset-${breakpoint}-${props[prop]}` :\n                    `order-${breakpoint}-${props[prop]}`).join(' ');\n        };\n        return ['sm', 'md', 'lg', 'xl'].reduce((pre, current) => {\n            return typeof this[current] === 'object' ? `${pre} ${makeClass(current)}` :\n                typeof this[current] === 'number' ? `${pre} col-${current}-${this[current]}` : `${pre} `;\n        }, '');\n    }\n    /* è·åoffset */\n    getOffsetClass() {\n        return this.offset ? ` offset-${this.offset}` : ` `;\n    }\n    // get order class\n    getOrderClass() {\n        return this.order ? ` order-${this.order}` : ` `;\n    }\n}\n","import { Directive, Input, ElementRef, Host, HostBinding, OnInit, Renderer2 } from '@angular/core';\n@Directive({\n    selector: '[farris-container]'\n})\nexport class FarrisContainerDirective implements OnInit {\n    @HostBinding('class.container') isContainer = true;\n    // å¯ä»¥è®¾ç½®å®½åº¦åé«åº¦\n    // è®¾ç½®å®½ é«å±æ§\n    _width: string | number;\n    _height: string | number;\n    @Input()\n    get width() {\n        // å¯¹åä¸ªåä½è¿è¡å¤ç\n        return this._width;\n    }\n    set width(width: any) {\n        this._width = this.resolveSize(width);\n    }\n    @Input()\n    get height() {\n        return this._height;\n    }\n    set height(height: any) {\n        this._height = this.resolveSize(height);\n    }\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n    ngOnInit() {\n        // å®½é«  èµå¼\n        this.render.setStyle(this.el.nativeElement, 'width', this.width);\n        this.render.setStyle(this.el.nativeElement, 'height', this.height);\n    }\n    /*å®½é«ç±»åæ¯ stringæènumber è§£æå®½é«  å°ºå¯¸ */\n    resolveSize(size) {\n        const regex = /px|em|rem|pt|%/;\n        // è¯´ææ¯å­ç¬¦ä¸²\n        return regex.test(size) ? `${parseInt(size, 10)}${size.match(regex)[0]}` : `${size}px`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FarrisRowDirective } from './row/res-row.directive';\nimport { FarrisColDirective } from './col/res-col.directive';\nimport { FarrisContainerDirective } from './container/res-container.directive';\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [FarrisContainerDirective, FarrisColDirective, FarrisRowDirective],\n    exports: [FarrisContainerDirective, FarrisColDirective, FarrisRowDirective],\n})\nexport class FarrisResponsiveModule {\n}\n"],"names":["Directive","ElementRef","Input","HostBinding","Renderer2","NgModule","CommonModule"],"mappings":"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"}
