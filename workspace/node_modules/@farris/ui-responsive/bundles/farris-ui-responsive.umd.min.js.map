{"version":3,"sources":["ng://@farris/ui-responsive/lib/row/res-row.directive.ts","ng://@farris/ui-responsive/lib/col/res-col.directive.ts","ng://@farris/ui-responsive/lib/container/res-container.directive.ts","ng://@farris/ui-responsive/lib/responsive.module.ts"],"names":["FarrisRowDirective","el","this","type","gutter","justify","align","isRow","nativeClass","nativeElement","classList","value","Object","defineProperty","prototype","getJustifyClass","getAlignClass","getGutterClass","getBreakpointClass","ngOnInit","justifyStr","_this","reduce","pre","current","breakpoint","props","keys","map","prop","join","makeClass","Directive","args","selector","ElementRef","Input","HostBinding","FarrisColDirective","span","offset","getSpanClass","getOffsetClass","getOrderClass","col","colSm","colMd","colLg","colXl","order","FarrisContainerDirective","render","isContainer","_width","width","resolveSize","_height","height","setStyle","size","regex","test","parseInt","match","Renderer2","FarrisResponsiveModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Directive, Input, ElementRef, HostBinding, OnInit } from '@angular/core';\n@Directive({\n    selector: '[farris-row]',\n})\nexport class FarrisRowDirective implements OnInit {\n    @Input() type: string = 'flex';\n    @Input() gutter: number = 16;\n    @Input() justify: string = 'start';\n    @Input() align: string = 'start';\n    /**\n     * xs={\n     * justify:'start',\n     * align:'start'\n     * }\n     */\n    @Input() xs: any;\n    @Input() sm: any;\n    @Input() md: any;\n    @Input() lg: any;\n    @Input() xl: any;\n    @HostBinding('class')\n    get respClass() {\n        return `${this.getJustifyClass()}${this.getAlignClass()}${this.getGutterClass()}${this.getBreakpointClass()}`;\n    }\n    // ç»å®row å°class\n    @HostBinding('class.row') isRow = this.type === 'flex';\n    //\n    nativeClass: string = '';\n    constructor(private el: ElementRef) {\n        // åå§åç±»å æ·»å å®¿ä¸»åç´ å·²æçç±»å\n        this.nativeClass += this.el.nativeElement.classList.value;\n    }\n    ngOnInit() {\n    }\n    // è·åjustify class\n    getJustifyClass() {\n        const justifyStr = this.justify !== 'start' ? ` justify-content-${this.justify}` : ' ';\n        return `${this.nativeClass}${justifyStr}`;\n    }\n    // è·å align class\n    getAlignClass() {\n        return this.align !== 'start' ? ` align-items-${this.align}` : ' ';\n    }\n    // ååºå¼ justify\n    getBreakpointClass() {\n        const makeClass = (breakpoint: string): string => {\n            const props = this[breakpoint] || {};\n            // è·åå¯¹è±¡ä¸­  justifyæèalign\n            return Object.keys(props).map(prop => prop === 'justify' ?\n                `justify-content-${breakpoint}-${props[prop]}` : `align-items-${breakpoint}-${props[prop]}`).join(' ');\n        };\n        const classStr = ['sm', 'md', 'lg', 'xl'].reduce((pre, current) => {\n            return `${pre} ${makeClass(current)}`;\n        }, '');\n        return classStr;\n    }\n    // ææ é´é\n    getGutterClass() {\n        return !this.gutter ? ' no-gutters' : ' ';\n    }\n}\n","import { Directive, Input, ElementRef, HostBinding } from '@angular/core';\n@Directive({\n    selector: '[farris-col]'\n})\nexport class FarrisColDirective {\n    // col\n    @Input() col: boolean;\n    @Input('col-sm') colSm: boolean;\n    @Input('col-md') colMd: boolean;\n    @Input('col-lg') colLg: boolean;\n    @Input('col-xl') colXl: boolean;\n    @Input() span: number = 0;\n    // åå³ç§»å¨å ä¸ªcol\n    @Input() offset: number = 0;\n    // order colé¡ºåº\n    @Input() order: number;\n    // <576\n    @Input() xs: any;\n    // >=576\n    @Input() sm: any;\n    // >=768\n    @Input() md: any;\n    // >=960\n    @Input() lg: any;\n    // >=1200\n    @Input() xl: any;\n    @HostBinding('class')\n    get ColClass() {\n        return `${this.nativeClass} ${this.getSpanClass()}${this.getBreakpointClass()}${this.getOffsetClass()}${this.getOrderClass()}`;\n    }\n    @HostBinding('class.col')\n    get isCol() {\n        return this.col;\n    }\n    @HostBinding('class.col-sm')\n    get isColSm() {\n        return this.colSm;\n    }\n    @HostBinding('class.col-md')\n    get isColMd() {\n        return this.colMd;\n    }\n    @HostBinding('class.col-lg')\n    get isColLg() {\n        return this.colLg;\n    }\n    @HostBinding('class.col-xl')\n    get isColXl() {\n        return this.colXl;\n    }\n    nativeClass = '';\n    constructor(private el: ElementRef) {\n        this.nativeClass += this.el.nativeElement.classList.value;\n    }\n    /* è·åspan ç±»å */\n    getSpanClass() {\n        return this.span ? ` col-${this.span}` : ` `;\n    }\n    /* è·åååºå¼ ç±»å  xs sm md lg xl å¯ä»¥æ¯æ°å­ï¼ä»£è¡¨span;ä¹å¯ä»¥æ¯å¯¹è±¡ï¼åé¨åå«span offset*/\n    getBreakpointClass() {\n        const makeClass = (breakpoint: string): string => {\n            const props = this[breakpoint] || {};\n            // è·åå¯¹è±¡ä¸­  spanæèoffset\n            return Object.keys(props).map(prop => prop === 'span' ?\n                `col-${breakpoint}-${props[prop]}` : prop === 'offset' ? `offset-${breakpoint}-${props[prop]}` :\n                    `order-${breakpoint}-${props[prop]}`).join(' ');\n        };\n        return ['sm', 'md', 'lg', 'xl'].reduce((pre, current) => {\n            return typeof this[current] === 'object' ? `${pre} ${makeClass(current)}` :\n                typeof this[current] === 'number' ? `${pre} col-${current}-${this[current]}` : `${pre} `;\n        }, '');\n    }\n    /* è·åoffset */\n    getOffsetClass() {\n        return this.offset ? ` offset-${this.offset}` : ` `;\n    }\n    // get order class\n    getOrderClass() {\n        return this.order ? ` order-${this.order}` : ` `;\n    }\n}\n","import { Directive, Input, ElementRef, Host, HostBinding, OnInit, Renderer2 } from '@angular/core';\n@Directive({\n    selector: '[farris-container]'\n})\nexport class FarrisContainerDirective implements OnInit {\n    @HostBinding('class.container') isContainer = true;\n    // å¯ä»¥è®¾ç½®å®½åº¦åé«åº¦\n    // è®¾ç½®å®½ é«å±æ§\n    _width: string | number;\n    _height: string | number;\n    @Input()\n    get width() {\n        // å¯¹åä¸ªåä½è¿è¡å¤ç\n        return this._width;\n    }\n    set width(width: any) {\n        this._width = this.resolveSize(width);\n    }\n    @Input()\n    get height() {\n        return this._height;\n    }\n    set height(height: any) {\n        this._height = this.resolveSize(height);\n    }\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n    ngOnInit() {\n        // å®½é«  èµå¼\n        this.render.setStyle(this.el.nativeElement, 'width', this.width);\n        this.render.setStyle(this.el.nativeElement, 'height', this.height);\n    }\n    /*å®½é«ç±»åæ¯ stringæènumber è§£æå®½é«  å°ºå¯¸ */\n    resolveSize(size) {\n        const regex = /px|em|rem|pt|%/;\n        // è¯´ææ¯å­ç¬¦ä¸²\n        return regex.test(size) ? `${parseInt(size, 10)}${size.match(regex)[0]}` : `${size}px`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FarrisRowDirective } from './row/res-row.directive';\nimport { FarrisColDirective } from './col/res-col.directive';\nimport { FarrisContainerDirective } from './container/res-container.directive';\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [FarrisContainerDirective, FarrisColDirective, FarrisRowDirective],\n    exports: [FarrisContainerDirective, FarrisColDirective, FarrisRowDirective],\n})\nexport class FarrisResponsiveModule {\n}\n"]}