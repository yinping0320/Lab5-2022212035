/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ElementRef, HostBinding } from '@angular/core';
var FarrisColDirective = /** @class */ (function () {
    function FarrisColDirective(el) {
        this.el = el;
        this.span = 0;
        // 向右移动几个col
        this.offset = 0;
        this.nativeClass = '';
        this.nativeClass += this.el.nativeElement.classList.value;
    }
    Object.defineProperty(FarrisColDirective.prototype, "ColClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.nativeClass + " " + this.getSpanClass() + this.getBreakpointClass() + this.getOffsetClass() + this.getOrderClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisColDirective.prototype, "isCol", {
        get: /**
         * @return {?}
         */
        function () {
            return this.col;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisColDirective.prototype, "isColSm", {
        get: /**
         * @return {?}
         */
        function () {
            return this.colSm;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisColDirective.prototype, "isColMd", {
        get: /**
         * @return {?}
         */
        function () {
            return this.colMd;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisColDirective.prototype, "isColLg", {
        get: /**
         * @return {?}
         */
        function () {
            return this.colLg;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisColDirective.prototype, "isColXl", {
        get: /**
         * @return {?}
         */
        function () {
            return this.colXl;
        },
        enumerable: true,
        configurable: true
    });
    /* 获取span 类名 */
    /* 获取span 类名 */
    /**
     * @return {?}
     */
    FarrisColDirective.prototype.getSpanClass = /* 获取span 类名 */
    /**
     * @return {?}
     */
    function () {
        return this.span ? " col-" + this.span : " ";
    };
    /* 获取响应式 类名  xs sm md lg xl 可以是数字，代表span;也可以是对象，内部包含span offset*/
    /* 获取响应式 类名  xs sm md lg xl 可以是数字，代表span;也可以是对象，内部包含span offset*/
    /**
     * @return {?}
     */
    FarrisColDirective.prototype.getBreakpointClass = /* 获取响应式 类名  xs sm md lg xl 可以是数字，代表span;也可以是对象，内部包含span offset*/
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var makeClass = (/**
         * @param {?} breakpoint
         * @return {?}
         */
        function (breakpoint) {
            /** @type {?} */
            var props = _this[breakpoint] || {};
            // 获取对象中  span或者offset
            return Object.keys(props).map((/**
             * @param {?} prop
             * @return {?}
             */
            function (prop) { return prop === 'span' ?
                "col-" + breakpoint + "-" + props[prop] : prop === 'offset' ? "offset-" + breakpoint + "-" + props[prop] :
                "order-" + breakpoint + "-" + props[prop]; })).join(' ');
        });
        return ['sm', 'md', 'lg', 'xl'].reduce((/**
         * @param {?} pre
         * @param {?} current
         * @return {?}
         */
        function (pre, current) {
            return typeof _this[current] === 'object' ? pre + " " + makeClass(current) :
                typeof _this[current] === 'number' ? pre + " col-" + current + "-" + _this[current] : pre + " ";
        }), '');
    };
    /* 获取offset */
    /* 获取offset */
    /**
     * @return {?}
     */
    FarrisColDirective.prototype.getOffsetClass = /* 获取offset */
    /**
     * @return {?}
     */
    function () {
        return this.offset ? " offset-" + this.offset : " ";
    };
    // get order class
    // get order class
    /**
     * @return {?}
     */
    FarrisColDirective.prototype.getOrderClass = 
    // get order class
    /**
     * @return {?}
     */
    function () {
        return this.order ? " order-" + this.order : " ";
    };
    FarrisColDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-col]'
                },] }
    ];
    /** @nocollapse */
    FarrisColDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    FarrisColDirective.propDecorators = {
        col: [{ type: Input }],
        colSm: [{ type: Input, args: ['col-sm',] }],
        colMd: [{ type: Input, args: ['col-md',] }],
        colLg: [{ type: Input, args: ['col-lg',] }],
        colXl: [{ type: Input, args: ['col-xl',] }],
        span: [{ type: Input }],
        offset: [{ type: Input }],
        order: [{ type: Input }],
        xs: [{ type: Input }],
        sm: [{ type: Input }],
        md: [{ type: Input }],
        lg: [{ type: Input }],
        xl: [{ type: Input }],
        ColClass: [{ type: HostBinding, args: ['class',] }],
        isCol: [{ type: HostBinding, args: ['class.col',] }],
        isColSm: [{ type: HostBinding, args: ['class.col-sm',] }],
        isColMd: [{ type: HostBinding, args: ['class.col-md',] }],
        isColLg: [{ type: HostBinding, args: ['class.col-lg',] }],
        isColXl: [{ type: HostBinding, args: ['class.col-xl',] }]
    };
    return FarrisColDirective;
}());
export { FarrisColDirective };
if (false) {
    /** @type {?} */
    FarrisColDirective.prototype.col;
    /** @type {?} */
    FarrisColDirective.prototype.colSm;
    /** @type {?} */
    FarrisColDirective.prototype.colMd;
    /** @type {?} */
    FarrisColDirective.prototype.colLg;
    /** @type {?} */
    FarrisColDirective.prototype.colXl;
    /** @type {?} */
    FarrisColDirective.prototype.span;
    /** @type {?} */
    FarrisColDirective.prototype.offset;
    /** @type {?} */
    FarrisColDirective.prototype.order;
    /** @type {?} */
    FarrisColDirective.prototype.xs;
    /** @type {?} */
    FarrisColDirective.prototype.sm;
    /** @type {?} */
    FarrisColDirective.prototype.md;
    /** @type {?} */
    FarrisColDirective.prototype.lg;
    /** @type {?} */
    FarrisColDirective.prototype.xl;
    /** @type {?} */
    FarrisColDirective.prototype.nativeClass;
    /**
     * @type {?}
     * @private
     */
    FarrisColDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzLWNvbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXJlc3BvbnNpdmUvIiwic291cmNlcyI6WyJsaWIvY29sL3Jlcy1jb2wuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFFO0lBa0RJLDRCQUFvQixFQUFjO1FBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQXhDekIsU0FBSSxHQUFXLENBQUMsQ0FBQzs7UUFFakIsV0FBTSxHQUFXLENBQUMsQ0FBQztRQXFDNUIsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFFYixJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7SUFDOUQsQ0FBQztJQTNCRCxzQkFDSSx3Q0FBUTs7OztRQURaO1lBRUksT0FBVSxJQUFJLENBQUMsV0FBVyxTQUFJLElBQUksQ0FBQyxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxFQUFFLEdBQUcsSUFBSSxDQUFDLGFBQWEsRUFBSSxDQUFDO1FBQ25JLENBQUM7OztPQUFBO0lBQ0Qsc0JBQ0kscUNBQUs7Ozs7UUFEVDtZQUVJLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUNwQixDQUFDOzs7T0FBQTtJQUNELHNCQUNJLHVDQUFPOzs7O1FBRFg7WUFFSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7SUFDRCxzQkFDSSx1Q0FBTzs7OztRQURYO1lBRUksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3RCLENBQUM7OztPQUFBO0lBQ0Qsc0JBQ0ksdUNBQU87Ozs7UUFEWDtZQUVJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN0QixD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aEMsbUNBQWdDOztJQUNoQyxrQ0FBMEI7O0lBRTFCLG9DQUE0Qjs7SUFFNUIsbUNBQXVCOztJQUV2QixnQ0FBaUI7O0lBRWpCLGdDQUFpQjs7SUFFakIsZ0NBQWlCOztJQUVqQixnQ0FBaUI7O0lBRWpCLGdDQUFpQjs7SUF5QmpCLHlDQUFpQjs7Ozs7SUFDTCxnQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBFbGVtZW50UmVmLCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbZmFycmlzLWNvbF0nXG59KVxuZXhwb3J0IGNsYXNzIEZhcnJpc0NvbERpcmVjdGl2ZSB7XG4gICAgLy8gY29sXG4gICAgQElucHV0KCkgY29sOiBib29sZWFuO1xuICAgIEBJbnB1dCgnY29sLXNtJykgY29sU206IGJvb2xlYW47XG4gICAgQElucHV0KCdjb2wtbWQnKSBjb2xNZDogYm9vbGVhbjtcbiAgICBASW5wdXQoJ2NvbC1sZycpIGNvbExnOiBib29sZWFuO1xuICAgIEBJbnB1dCgnY29sLXhsJykgY29sWGw6IGJvb2xlYW47XG4gICAgQElucHV0KCkgc3BhbjogbnVtYmVyID0gMDtcbiAgICAvLyDlkJHlj7Pnp7vliqjlh6DkuKpjb2xcbiAgICBASW5wdXQoKSBvZmZzZXQ6IG51bWJlciA9IDA7XG4gICAgLy8gb3JkZXIgY29s6aG65bqPXG4gICAgQElucHV0KCkgb3JkZXI6IG51bWJlcjtcbiAgICAvLyA8NTc2XG4gICAgQElucHV0KCkgeHM6IGFueTtcbiAgICAvLyA+PTU3NlxuICAgIEBJbnB1dCgpIHNtOiBhbnk7XG4gICAgLy8gPj03NjhcbiAgICBASW5wdXQoKSBtZDogYW55O1xuICAgIC8vID49OTYwXG4gICAgQElucHV0KCkgbGc6IGFueTtcbiAgICAvLyA+PTEyMDBcbiAgICBASW5wdXQoKSB4bDogYW55O1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICAgIGdldCBDb2xDbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMubmF0aXZlQ2xhc3N9ICR7dGhpcy5nZXRTcGFuQ2xhc3MoKX0ke3RoaXMuZ2V0QnJlYWtwb2ludENsYXNzKCl9JHt0aGlzLmdldE9mZnNldENsYXNzKCl9JHt0aGlzLmdldE9yZGVyQ2xhc3MoKX1gO1xuICAgIH1cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmNvbCcpXG4gICAgZ2V0IGlzQ29sKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb2w7XG4gICAgfVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuY29sLXNtJylcbiAgICBnZXQgaXNDb2xTbSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sU207XG4gICAgfVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuY29sLW1kJylcbiAgICBnZXQgaXNDb2xNZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sTWQ7XG4gICAgfVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuY29sLWxnJylcbiAgICBnZXQgaXNDb2xMZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sTGc7XG4gICAgfVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuY29sLXhsJylcbiAgICBnZXQgaXNDb2xYbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sWGw7XG4gICAgfVxuICAgIG5hdGl2ZUNsYXNzID0gJyc7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLm5hdGl2ZUNsYXNzICs9IHRoaXMuZWwubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QudmFsdWU7XG4gICAgfVxuICAgIC8qIOiOt+WPlnNwYW4g57G75ZCNICovXG4gICAgZ2V0U3BhbkNsYXNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zcGFuID8gYCBjb2wtJHt0aGlzLnNwYW59YCA6IGAgYDtcbiAgICB9XG4gICAgLyog6I635Y+W5ZON5bqU5byPIOexu+WQjSAgeHMgc20gbWQgbGcgeGwg5Y+v5Lul5piv5pWw5a2X77yM5Luj6KGoc3BhbjvkuZ/lj6/ku6XmmK/lr7nosaHvvIzlhoXpg6jljIXlkKtzcGFuIG9mZnNldCovXG4gICAgZ2V0QnJlYWtwb2ludENsYXNzKCkge1xuICAgICAgICBjb25zdCBtYWtlQ2xhc3MgPSAoYnJlYWtwb2ludDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHByb3BzID0gdGhpc1ticmVha3BvaW50XSB8fCB7fTtcbiAgICAgICAgICAgIC8vIOiOt+WPluWvueixoeS4rSAgc3BhbuaIluiAhW9mZnNldFxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHByb3BzKS5tYXAocHJvcCA9PiBwcm9wID09PSAnc3BhbicgP1xuICAgICAgICAgICAgICAgIGBjb2wtJHticmVha3BvaW50fS0ke3Byb3BzW3Byb3BdfWAgOiBwcm9wID09PSAnb2Zmc2V0JyA/IGBvZmZzZXQtJHticmVha3BvaW50fS0ke3Byb3BzW3Byb3BdfWAgOlxuICAgICAgICAgICAgICAgICAgICBgb3JkZXItJHticmVha3BvaW50fS0ke3Byb3BzW3Byb3BdfWApLmpvaW4oJyAnKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFsnc20nLCAnbWQnLCAnbGcnLCAneGwnXS5yZWR1Y2UoKHByZSwgY3VycmVudCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzW2N1cnJlbnRdID09PSAnb2JqZWN0JyA/IGAke3ByZX0gJHttYWtlQ2xhc3MoY3VycmVudCl9YCA6XG4gICAgICAgICAgICAgICAgdHlwZW9mIHRoaXNbY3VycmVudF0gPT09ICdudW1iZXInID8gYCR7cHJlfSBjb2wtJHtjdXJyZW50fS0ke3RoaXNbY3VycmVudF19YCA6IGAke3ByZX0gYDtcbiAgICAgICAgfSwgJycpO1xuICAgIH1cbiAgICAvKiDojrflj5ZvZmZzZXQgKi9cbiAgICBnZXRPZmZzZXRDbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub2Zmc2V0ID8gYCBvZmZzZXQtJHt0aGlzLm9mZnNldH1gIDogYCBgO1xuICAgIH1cbiAgICAvLyBnZXQgb3JkZXIgY2xhc3NcbiAgICBnZXRPcmRlckNsYXNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vcmRlciA/IGAgb3JkZXItJHt0aGlzLm9yZGVyfWAgOiBgIGA7XG4gICAgfVxufVxuIl19