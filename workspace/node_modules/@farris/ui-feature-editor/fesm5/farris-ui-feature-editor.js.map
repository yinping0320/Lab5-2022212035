{"version":3,"file":"farris-ui-feature-editor.js.map","sources":["ng://@farris/ui-feature-editor/lib/type.ts","ng://@farris/ui-feature-editor/lib/lookup.service.ts","ng://@farris/ui-feature-editor/lib/feature-editor.component.ts","ng://@farris/ui-feature-editor/lib/i18n-service.ts","ng://@farris/ui-feature-editor/lib/feature-editor.service.ts","ng://@farris/ui-feature-editor/lib/lookup.directive.ts","ng://@farris/ui-feature-editor/lib/feature-editor.module.ts"],"sourcesContent":["/**\r\n * ç¹æ§å±æ§\r\n */\r\n// export interface IFeatures {\r\n//   id: string;\r\n//   /**\r\n//    * ç¼å·\r\n//    */\r\n//   code: string;\r\n//   /**\r\n//    * åç§°\r\n//    */\r\n//   __name__: { \"zh-CHS\": string, \"zh-CHT\": string, en: string };\r\n//   name_chs: string;\r\n//   name_cht: string;\r\n//   name_en: string;\r\n//   /**\r\n//    * æ¯å¦å¿å¡«\r\n//    * @description å¯éå¼ \"1\" | \"0\"\r\n//    */\r\n//   isrequired: string;\r\n//   /**\r\n//    * è¾å¥æ§ä»¶ç±»å\r\n//    * @description å¯éå¼ Help | Number | Enum etc\r\n//    */\r\n//   inputtype: string;\r\n//   textfield: string;\r\n//   codefield: string;\r\n//   /**\r\n//    * è¿æ»¤æ¡ä»¶\r\n//    */\r\n//   filtercondition: string;\r\n//   /**\r\n//    * æä¸¾ä¿¡æ¯\r\n//    */\r\n//   enuminfo: string;\r\n//   /**\r\n//    * æä¸¾æ°æ®æº\r\n//    */\r\n//   __data__: Array<{ id: string, text: string }>;\r\n//   /**\r\n//    * ç²¾åº¦\r\n//    */\r\n//   digitalaccuracy: number;\r\n//   /**\r\n//    * ç¹å¾éid\r\n//    */\r\n//   setid: string;\r\n//   /**\r\n//    * æ¯å¦æ¯æ å¸®å©\r\n//    * @description å¯éå¼ \"0\" | \"1\"\r\n//    */\r\n//   setistree: string;\r\n//   /**\r\n//    * idpå¸®å©id\r\n//    */\r\n//   codesetid: string;\r\n//   /**\r\n//    * åªè¯»\r\n//    * @description å¯éå¼ \"0\" | \"1\"\r\n//    */\r\n//   isreadonly: string;\r\n//   /**\r\n//    * é¡ºåºå·\r\n//    */\r\n//   sortorder: number;\r\n//   value: string;\r\n//   helpid: string;\r\n\r\nimport { Observable } from \"rxjs\";\r\n\r\n// }\r\nexport interface IFeatureEditorOptions {\r\n  width?: number;\r\n  height?: number;\r\n  title?: string;\r\n  /**\r\n   * ç¡®è®¤äºä»¶\r\n   */\r\n  onConfirm?: (features: IFeature[]) => void;\r\n  /**\r\n   * ç¡®è®¤å\r\n   * @description æ¹æ³è¿åå¼å¯ä»¥ä¸º\r\n   */\r\n  onConfirming?: (features: IFeature[]) => Observable<boolean | any> | boolean;\r\n  /**\r\n   * ç¹æ§ç¼è¾å¨æå¼å\r\n   */\r\n  onOpening?: (options: any) => Observable<boolean | any> | boolean;\r\n}\r\nexport enum InputType {\r\n  Help = 'Help',\r\n  String = 'String',\r\n  Enum = 'Enum',\r\n  Date = 'Date'\r\n}\r\n/**\r\n * ç¼è¾å¨ç±»å\r\n */\r\nexport const enum EditorTypes {\r\n  TEXTAREA = 'textarea',\r\n  TEXTBOX = 'textbox',\r\n  CHECKBOX = 'checkbox',\r\n  DATEPICKER = 'datepicker',\r\n  INPUTGROUP = 'input-group',\r\n  SELECT = 'select',\r\n  LOOKUP = 'lookup',\r\n  NUMBERBOX = 'numberbox',\r\n  COMBOLIST = 'combolist',\r\n  SWITCH = 'switch',\r\n  TIMEPICKER = 'timepicker',\r\n  COMBOLOOKUP = 'combo-lookup',\r\n  LANGUAGETEXTBOX = 'language-textbox',\r\n  ENUMEDITOR = 'enum-editor',\r\n  FILTEREDITOR = 'filter-editor',\r\n  SORTEDITOR = 'sort-editor'\r\n};\r\nexport interface IEditor {\r\n  controlType: EditorTypes,\r\n  [prop: string]: any;\r\n}\r\n/**\r\n * æä¸¾ç¼è¾å¨\r\n */\r\nexport interface IEnumEditor extends IEditor {\r\n  controlType: EditorTypes.ENUMEDITOR,\r\n  idField: string;\r\n  textField: string;\r\n  multiSelect?: boolean;\r\n  items?: any[];\r\n};\r\n/**\r\n * æ°å­ç¼è¾å¨\r\n */\r\nexport interface INumberEditor extends IEditor {\r\n  controlType: EditorTypes.NUMBERBOX;\r\n  precision: number;\r\n  step?: number;\r\n  min?: number;\r\n  max?: number;\r\n};\r\n/**\r\n * æ¥æç¼è¾å¨\r\n */\r\nexport interface IDateEditor extends IEditor {\r\n  controlType: EditorTypes.DATEPICKER;\r\n  dateRange?: boolean;\r\n}\r\n/**\r\n * æ¶é´ç¼è¾å¨\r\n */\r\nexport interface ITimeEditor extends IEditor {\r\n  controlType: EditorTypes.TIMEPICKER,\r\n  use12Hours?: boolean;\r\n}\r\n/**\r\n * å¸®å©ç¼è¾å¨\r\n */\r\nexport interface ILookupEditor extends IEditor {\r\n  idField: string;\r\n  textField: string;\r\n  valueField: string;\r\n  displayType?: string;\r\n  singleSelect?: boolean;\r\n  multiSelect?: boolean;\r\n  mapFields?: string | object;\r\n  dialogTitle?: string;\r\n  hiddenInputName?: string;\r\n}\r\n/**\r\n * ç¹æ§æè¿°\r\n */\r\nexport interface IFeature {\r\n  id: any;\r\n  title: string;\r\n  field: string;\r\n  editor: IEditor | IEnumEditor | INumberEditor | IDateEditor | ITimeEditor | ILookupEditor;\r\n  value?: any;\r\n  results?: any;\r\n  options?: { [prop: string]: any };\r\n}","import { ILookupHttpService, LookupGridResult } from '@farris/ui-lookup';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class LookupService implements ILookupHttpService {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n    getData(url: string, params: any): Observable<LookupGridResult> {\r\n        const urls = url.split(':');\r\n        const realUrl = '/api/scm/scmfnd/v1.0/scmcommoncmpservice/service/gethelpdata';\r\n        const helpID = urls[0] === '1' ? '9e2dca82-0aa2-4394-b26d-cb91164f44d5' : '344ffc53-7167-48d1-866b-a84083404e9e';\r\n        const filter = 'setid:' + urls[1] + '&' + 'state_isenabled:1';\r\n        const httpParams: any = {};\r\n        if (params) {\r\n            if (params.pageIndex) {\r\n                httpParams['pageIndex'] = JSON.stringify(params.pageIndex - 0);\r\n            }\r\n            if (params.pageSize) {\r\n                httpParams['pageSize'] = JSON.stringify(params.pageSize - 0);\r\n            }\r\n            if (params.condition) {\r\n                httpParams['condition'] = JSON.stringify(params.condition);\r\n            }\r\n            if (params.searchValue) {\r\n                httpParams['search'] = params.searchValue;\r\n            }\r\n        }\r\n        return this.http.put(realUrl, {\r\n            helpID: helpID,\r\n            queryParam: JSON.stringify(httpParams),\r\n            filterStr: filter\r\n        }).pipe(map((data: any) => JSON.parse(data.returnValue)));\r\n\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { ServerSideToken } from '@farris/ui-lookup';\r\nimport { LookupService } from './lookup.service';\r\nimport { IFeature } from './type';\r\n\r\n@Component({\r\n    selector: 'farris-feature-editor',\r\n    templateUrl: 'feature-editor.component.html',\r\n    styles: ['feature-editor.component.css'],\r\n    // providers: [\r\n    //   { provide: ServerSideToken, useClass: LookupService }\r\n    // ]\r\n})\r\nexport class FeatureEditorComponent implements OnInit {\r\n    public localeId: string;\r\n    /**\r\n     * ç¹æ§\r\n     */\r\n    @Input() features: Array<IFeature>;\r\n    constructor(\r\n        private localeService: LocaleService\r\n    ) {\r\n        if (this.localeService) {\r\n            this.localeId = this.localeService.localeId;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n    /**\r\n     * å¸®å©éæ©æ°æ®åçåè°\r\n     * @param event event\r\n     */\r\n    public onSelectRows(event: any) {\r\n        const { code = null, rows = [] } = event || {};\r\n        if (code) {\r\n            const item = this.features.find((feature: IFeature) => feature.field === code);\r\n            item.results = rows;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Inject, Injectable, LOCALE_ID, Optional } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class I18nService {\r\n  constructor(@Optional() @Inject(LOCALE_ID) public localeId: string) { }\r\n\r\n  public get title(): string {\r\n    let result = 'ç¹æ§ç¼è¾å¨';\r\n    switch (this.localeId) {\r\n      case 'en':\r\n        result = 'Feature Editor'; break;\r\n      case 'zh-CHT':\r\n        result = 'ç¹æ§ç·¨è¼¯å¨'; break;\r\n      default: break;\r\n    }\r\n    return result;\r\n  }\r\n}","import { ComponentFactoryResolver, ComponentRef, EventEmitter, Injectable, Injector, LOCALE_ID } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { IFeature, IFeatureEditorOptions } from './type';\r\nimport { FeatureEditorComponent } from './feature-editor.component';\r\nimport { I18nService } from './i18n-service';\r\nimport { isObservable, Observable, of } from 'rxjs';\r\nimport { EventManager } from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class FeatureEditorService {\r\n    public dialog: BsModalRef = null;\r\n    private componentRef: ComponentRef<FeatureEditorComponent> = null;\r\n    private keyDownHandler = null;\r\n    onUserConfirmed: EventEmitter<any> = new EventEmitter<any>();\r\n    private eventManager: EventManager;\r\n    constructor(\r\n        public injector: Injector,\r\n        private modalService: BsModalService,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private localeService: LocaleService,\r\n        private languageService: I18nService\r\n    ) {\r\n        if (!this.languageService) {\r\n            const localeId = this.injector.get<string>(LOCALE_ID, 'zh-CHS');\r\n            this.languageService = new I18nService(localeId);\r\n        }\r\n\r\n        this.eventManager = this.injector.get(EventManager, null);\r\n    }\r\n    /**\r\n     * å¼¹åºç¹æ§ç¼è¾å¨\r\n     * @param features ç¹å¾æ°ç»\r\n     * @param options å¼¹çªéç½®\r\n     * @returns \r\n     */\r\n    public show(features: Array<IFeature>, options?: IFeatureEditorOptions): void {\r\n        if (!features || features.length < 1) {\r\n            return;\r\n        }\r\n        this.canOpen(options).subscribe((canOpen: boolean) => {\r\n            if (!canOpen) {\r\n                return;\r\n            }\r\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(FeatureEditorComponent);\r\n            this.componentRef = componentFactory.create(this.injector);\r\n            this.componentRef.instance.features = features;\r\n            const titleText = this.languageService.title;\r\n            const okText = this.localeService.getValue('batchEditDialog.okText');\r\n            const cancelText = this.localeService.getValue('batchEditDialog.cancelText');\r\n            const { width = 470, height = 500, title = titleText } = options || {};\r\n            const modalOptions: any = {\r\n                title,\r\n                width,\r\n                height,\r\n                buttons: [\r\n                    {\r\n                        text: cancelText, cls: 'btn btn-secondary', handle: () => {\r\n                            this.dialog.close();\r\n                        }\r\n                    },\r\n                    {\r\n                        text: okText, cls: 'btn btn-primary',\r\n                        handle: () => {\r\n                            this.onConfirmClick(options);\r\n                        }\r\n                    }\r\n                ],\r\n                showButtons: true,\r\n                areaResponse: true,\r\n                opened: (e) => {\r\n                    this.registerShortcutKey(options, e.instance);\r\n                },\r\n                closed: () => {\r\n                    if (this.keyDownHandler) {\r\n                        this.keyDownHandler();\r\n                        this.keyDownHandler = null;\r\n                    }\r\n                }\r\n            };\r\n            this.dialog = this.modalService.show(this.componentRef, modalOptions);\r\n        });\r\n    }\r\n\r\n\r\n    private registerShortcutKey(options, dialogRef) {\r\n        // åè½¦ï¼ä¸ç¡®å®æé®å¤çé»è¾ä¸è³ã\r\n        const dlgContainerDom = dialogRef.dialog.location.nativeElement;\r\n\r\n        if (dlgContainerDom && !this.keyDownHandler) {\r\n            this.keyDownHandler = this.eventManager.addEventListener(dlgContainerDom, 'keydown', (e: KeyboardEvent) => {\r\n                e.stopPropagation();\r\n                if (e.key === 'Enter') {\r\n                    // if (e.target['nodeName'] === 'INPUT' && !e.ctrlKey) {\r\n                    //     return;\r\n                    // }\r\n                    this.onConfirmClick(options);\r\n                } else if (e.key === 'Escape') {\r\n                    this.dialog.close();\r\n                } else if (e.key === 'Tab') {\r\n                    this.onTabKeydownHandler(e.target);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.componentRef) {\r\n            this.setFirstInputFocus();\r\n        }\r\n    }\r\n\r\n    private setFirstInputFocus() {\r\n        const firstInputEl = this.componentRef.location.nativeElement.querySelector('input,textarea');\r\n        if (firstInputEl) {\r\n            firstInputEl.focus();\r\n        }\r\n    }\r\n\r\n    private onTabKeydownHandler(currentTarget) {\r\n        let allInputs = this.componentRef.location.nativeElement.querySelectorAll('input,textarea');\r\n        allInputs = Array.from(allInputs);\r\n        const currentInputIndex = allInputs.findIndex(n => n === currentTarget);\r\n        let nextInputIndex = currentInputIndex + 1;\r\n        if (nextInputIndex >= allInputs.length) {\r\n            nextInputIndex = 0;\r\n        }\r\n        const nextInputTarget = allInputs[nextInputIndex];\r\n        if (nextInputTarget) {\r\n            setTimeout(() => {\r\n                nextInputTarget.focus();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ç¨æ·ç¹å»ç¡®è®¤æé®\r\n     */\r\n    private onConfirmClick(options?: IFeatureEditorOptions) {\r\n        this.canClose(options).subscribe((result: boolean) => {\r\n            if (result === true) {\r\n                this.onConfirm(options);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * ç¡®è®¤\r\n     * @param options options\r\n     */\r\n    private onConfirm(options?: IFeatureEditorOptions) {\r\n        const features = this.componentRef && this.componentRef.instance && this.componentRef.instance.features || [];\r\n        this.dialog.close();\r\n        if (options.onConfirm && typeof options.onConfirm) {\r\n            options.onConfirm(features);\r\n        }\r\n        this.onUserConfirmed.next(features);\r\n    }\r\n    /**\r\n     * æ¯å¦å¯ä»¥å³é­\r\n     * @param options options\r\n     * @returns \r\n     */\r\n    private canClose(options?: IFeatureEditorOptions): Observable<any> {\r\n        const features = this.componentRef && this.componentRef.instance && this.componentRef.instance.features || [];\r\n        const onConfirmingRef = options && options.onConfirming || null;\r\n        if (!onConfirmingRef) {\r\n            return of(true);\r\n        }\r\n        // æç¡®è®¤åäºä»¶\r\n        const onConfirming = onConfirmingRef(features);\r\n        if (isObservable(onConfirming)) {\r\n            return onConfirming;\r\n        } else {\r\n            return of(onConfirming);\r\n        }\r\n    }\r\n    /**\r\n     * æ¯å¦å¯ä»¥å¼¹åºç¹æ§ç¼è¾å¨\r\n     * @param options options\r\n     * @returns \r\n     */\r\n    private canOpen(options?: IFeatureEditorOptions): Observable<any> {\r\n        const onOpeningHandlerRef = options && options.onOpening || null;\r\n        if (!onOpeningHandlerRef) {\r\n            return of(true);\r\n        }\r\n        const onOpeningHandler = onOpeningHandlerRef(options);\r\n        if (isObservable(onOpeningHandler)) {\r\n            return onOpeningHandler;\r\n        } else {\r\n            return of(onOpeningHandler);\r\n        }\r\n    }\r\n}\r\n","import { Directive, Input, Output, EventEmitter, AfterViewInit, Injector } from '@angular/core';\r\nimport { LookupComponent } from '@farris/ui-lookup';\r\nimport { of } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[lookup-extra]'\r\n})\r\nexport class LookupDirective implements AfterViewInit {\r\n  @Input('lookup-extra')\r\n  public code: string;\r\n  @Input('ins') lookup: LookupComponent;\r\n  @Output() onSelectRows: EventEmitter<any> = new EventEmitter<any>();\r\n  constructor() {\r\n  }\r\n  ngAfterViewInit(): void {\r\n    if (this.lookup) {\r\n      this.lookup.dictPicked = (rows: any) => {\r\n        if (this.onSelectRows) {\r\n          this.onSelectRows.emit({ code: this.code, rows: [].concat(rows) })\r\n        }\r\n        const result = {\r\n          closeDialog: true\r\n        };\r\n        return of(result);\r\n      };\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { TimePickerModule } from '@farris/ui-time-picker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { FeatureEditorComponent } from './feature-editor.component';\r\nimport { LookupDirective } from './lookup.directive';\r\nimport { I18nService } from './i18n-service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeatureEditorComponent,\r\n    LookupDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FarrisFormsModule,\r\n    LookupModule,\r\n    ComboListModule,\r\n    InputGroupModule,\r\n    ModalModule,\r\n    FarrisDatePickerModule,\r\n    NumberSpinnerModule,\r\n    TimePickerModule,\r\n    SwitchModule,\r\n    FarrisSectionModule,\r\n    LocaleModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    FeatureEditorComponent,\r\n    LookupDirective\r\n  ],\r\n  entryComponents: [\r\n    FeatureEditorComponent\r\n  ],\r\n  providers: [\r\n    I18nService\r\n  ]\r\n})\r\nexport class FeatureEditorModule { }\r\n"],"names":[],"mappings":"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"}
