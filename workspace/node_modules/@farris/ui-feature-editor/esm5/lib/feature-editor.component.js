/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
var FeatureEditorComponent = /** @class */ (function () {
    function FeatureEditorComponent(localeService) {
        this.localeService = localeService;
        if (this.localeService) {
            this.localeId = this.localeService.localeId;
        }
    }
    /**
     * @return {?}
     */
    FeatureEditorComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * 帮助选择数据后的回调
     * @param event event
     */
    /**
     * 帮助选择数据后的回调
     * @param {?} event event
     * @return {?}
     */
    FeatureEditorComponent.prototype.onSelectRows = /**
     * 帮助选择数据后的回调
     * @param {?} event event
     * @return {?}
     */
    function (event) {
        var _a = event || {}, _b = _a.code, code = _b === void 0 ? null : _b, _c = _a.rows, rows = _c === void 0 ? [] : _c;
        if (code) {
            /** @type {?} */
            var item = this.features.find((/**
             * @param {?} feature
             * @return {?}
             */
            function (feature) { return feature.field === code; }));
            item.results = rows;
        }
    };
    FeatureEditorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-feature-editor',
                    template: "<farris-section class=\"f-section-form f-section-in-mainsubcard\" [showHeader]=\"false\" [enableMaximize]=\"false\">\r\n  <div class=\"f-form-layout farris-form-controls-inline\" [class.farris-form-controls-inline]=\"true\">\r\n    <div class=\"col-12 col-md-6 col-xl-3 col-el-2\"  *ngFor=\"let feature of features;let row = index\">\r\n      <div class=\"farris-group-wrap\">\r\n        <div class=\"form-group farris-form-group\">\r\n          <label class=\"col-form-label\" title=\"feature?.title\" for=\"{{feature?.id}}\"><span\r\n              class=\"farris-label-info text-danger\" *ngIf=\"feature?.options.required\">*</span><span\r\n              class=\"farris-label-text\">{{feature?.title}}</span></label>\r\n          <div class=\"farris-input-wrap\">\r\n            <!--\u5E2E\u52A9-->\r\n          <ng-template [ngIf]=\"feature?.editor?.controlType==='lookup'\">\r\n            <!-- <ng-container *ngTemplateOutlet=\"lookupTemplate;context:input\"></ng-container> -->\r\n            <farris-lookup-grid #lookupGrid [lookup-extra]=\"feature?.field\" [ins]=\"lookupGrid\" [enableClear]='feature?.options?.enableClear || false'\r\n              (onSelectRows)=\"onSelectRows($event)\" input-end-edit [uri]=\"feature?.options?.uri\" [editable]=\"feature?.options?.editable || false\"\r\n              [mapFields]=\"feature?.options?.mapFields\" [displayType]=\"feature?.options?.displayType || 'List'\"\r\n              [idField]=\"feature?.options?.idField\" [singleSelect]=\"feature?.options?.singleSelect || true\"\r\n              [pageSize]=\"feature?.options?.pageSize\" [pageIndex]=\"1\" [pagination]=\"feature?.options?.pagination\"\r\n              [textField]=\"feature?.options?.textField\" [valueField]=\"feature?.options?.valueField\"\r\n              [title]=\"feature?.options?.dialogTitle\" [showMaxButton]=\"feature?.options?.showMaxButton\"\r\n              [showCloseButton]=\"feature?.options?.showCloseButton\" [resizable]=\"feature?.options?.resizable\"\r\n              [context]=\"feature?.options?.context\" [expandLevel]=\"feature?.options?.expandLevel\"\r\n              [isRecordSize]=\"feature?.options?.isRecordSize\" [enableFullTree]=\"feature?.options?.enableFullTree\"\r\n              [loadTreeDataType]=\"'default'\" [(ngModel)]=\"feature.value\" [bindingData]=\"feature?.options?.data\" [dictPicking]=\"feature?.options?.dictPicking\" [dictPicked]=\"feature?.options?.dictPicked\">\r\n            </farris-lookup-grid>\r\n          </ng-template>\r\n          <!--\u8F93\u5165\u6846-->\r\n          <ng-template\r\n            [ngIf]=\"feature?.editor?.controlType==='textbox' ||feature?.editor?.controlType==='textarea' || feature?.editor?.controlType === 'input-group'\">\r\n            <!-- <ng-container *ngTemplateOutlet=\"textboxTemplate;context:input\"></ng-container> -->\r\n            <input-group [(ngModel)]=\"feature.value\"></input-group>\r\n          </ng-template>\r\n          <!--\u65E5\u671F-->\r\n          <ng-template [ngIf]=\"feature?.editor?.controlType === 'datepicker'\">\r\n            <!-- <ng-container *ngTemplateOutlet=\"datepickerTemplate;context:input\"></ng-container> -->\r\n            <farris-datepicker [(ngModel)]=\"feature.value\" [dateRange]=\"feature?.options?.dateRange\">\r\n            </farris-datepicker>\r\n          </ng-template>\r\n          <!--\u6570\u5B57-->\r\n          <ng-template [ngIf]=\"feature?.editor?.controlType === 'numberbox'\">\r\n            <!-- <ng-container *ngTemplateOutlet=\"numberboxTemplate;context:input\"></ng-container> -->\r\n            <farris-number-spinner [(ngModel)]=\"feature.value\" [min]=\"feature?.options?.min\"\r\n              [max]=\"feature?.options?.max\" [precision]=\"feature?.options?.precision\" [step]=\"feature?.options?.step\">\r\n            </farris-number-spinner>\r\n          </ng-template>\r\n          <!--\u4E0B\u62C9-->\r\n          <ng-template\r\n            [ngIf]=\"feature?.editor?.controlType === 'combolist' || feature?.editor?.controlType === 'select'\">\r\n            <!-- <ng-container *ngTemplateOutlet=\"combolistTemplate;context:input\"></ng-container> -->\r\n            <farris-combo-list [(ngModel)]=\"feature.value\"\r\n              [idField]=\"feature?.options?.valueField || feature?.options?.idField || 'id'\"\r\n              [textField]=\"feature?.options?.textField ||'label'\" [data]=\"feature?.options?.data\">\r\n            </farris-combo-list>\r\n          </ng-template>\r\n          <!--\u65F6\u95F4-->\r\n          <ng-template [ngIf]=\"feature?.editor?.controlType === 'timepicker'\">\r\n            <!-- <ng-container *ngTemplateOutlet=\"timepickerTemplate;context:input\"></ng-container> -->\r\n            <farris-time-picker [(ngModel)]=\"feature.value\" [use12Hours]=\"feature?.options?.use12Hours\">\r\n            </farris-time-picker>\r\n          </ng-template>\r\n          <!--\u590D\u9009\u6846-->\r\n          <ng-template [ngIf]=\"feature?.editor?.controlType === 'checkbox'\">\r\n            <div class=\"custom-control custom-checkbox f-checkradio-single pl-5\">\r\n              <input [id]=\"feature.id\" class=\"custom-control-input\" type=\"checkbox\" [(ngModel)]=\"feature.value\">\r\n              <label class=\"custom-control-label\" [for]=\"feature.id\"></label>\r\n            </div>\r\n          </ng-template>\r\n          <!--\u5F00\u5173-->\r\n          <ng-template [ngIf]=\"feature?.editor?.controlType === 'switch'\">\r\n            <farris-switch [(ngModel)]=\"feature.value\" class=\"ml-5\">\r\n            </farris-switch>\r\n          </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</farris-section>",
                    styles: ['feature-editor.component.css']
                }] }
    ];
    /** @nocollapse */
    FeatureEditorComponent.ctorParameters = function () { return [
        { type: LocaleService }
    ]; };
    FeatureEditorComponent.propDecorators = {
        features: [{ type: Input }]
    };
    return FeatureEditorComponent;
}());
export { FeatureEditorComponent };
if (false) {
    /** @type {?} */
    FeatureEditorComponent.prototype.localeId;
    /**
     * 特性
     * @type {?}
     */
    FeatureEditorComponent.prototype.features;
    /**
     * @type {?}
     * @private
     */
    FeatureEditorComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS1lZGl0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1mZWF0dXJlLWVkaXRvci8iLCJzb3VyY2VzIjpbImxpYi9mZWF0dXJlLWVkaXRvci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUtsRDtJQWNJLGdDQUNZLGFBQTRCO1FBQTVCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBRXBDLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUNwQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDO1NBQy9DO0lBQ0wsQ0FBQzs7OztJQUVELHlDQUFROzs7SUFBUjtJQUNBLENBQUM7SUFDRDs7O09BR0c7Ozs7OztJQUNJLDZDQUFZOzs7OztJQUFuQixVQUFvQixLQUFVO1FBQ3BCLElBQUEsZ0JBQXdDLEVBQXRDLFlBQVcsRUFBWCxnQ0FBVyxFQUFFLFlBQVMsRUFBVCw4QkFBeUI7UUFDOUMsSUFBSSxJQUFJLEVBQUU7O2dCQUNBLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7Ozs7WUFBQyxVQUFDLE9BQWlCLElBQUssT0FBQSxPQUFPLENBQUMsS0FBSyxLQUFLLElBQUksRUFBdEIsQ0FBc0IsRUFBQztZQUM5RSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztTQUN2QjtJQUNMLENBQUM7O2dCQWxDSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsOGpMQUE0Qzs2QkFDbkMsOEJBQThCO2lCQUkxQzs7OztnQkFaUSxhQUFhOzs7MkJBa0JqQixLQUFLOztJQXVCViw2QkFBQztDQUFBLEFBcENELElBb0NDO1NBNUJZLHNCQUFzQjs7O0lBQy9CLDBDQUF3Qjs7Ozs7SUFJeEIsMENBQW1DOzs7OztJQUUvQiwrQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTG9jYWxlU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgU2VydmVyU2lkZVRva2VuIH0gZnJvbSAnQGZhcnJpcy91aS1sb29rdXAnO1xyXG5pbXBvcnQgeyBMb29rdXBTZXJ2aWNlIH0gZnJvbSAnLi9sb29rdXAuc2VydmljZSc7XHJcbmltcG9ydCB7IElGZWF0dXJlIH0gZnJvbSAnLi90eXBlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdmYXJyaXMtZmVhdHVyZS1lZGl0b3InLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdmZWF0dXJlLWVkaXRvci5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZXM6IFsnZmVhdHVyZS1lZGl0b3IuY29tcG9uZW50LmNzcyddLFxyXG4gICAgLy8gcHJvdmlkZXJzOiBbXHJcbiAgICAvLyAgIHsgcHJvdmlkZTogU2VydmVyU2lkZVRva2VuLCB1c2VDbGFzczogTG9va3VwU2VydmljZSB9XHJcbiAgICAvLyBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGZWF0dXJlRWRpdG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIHB1YmxpYyBsb2NhbGVJZDogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiDnibnmgKdcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgZmVhdHVyZXM6IEFycmF5PElGZWF0dXJlPjtcclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgbG9jYWxlU2VydmljZTogTG9jYWxlU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgaWYgKHRoaXMubG9jYWxlU2VydmljZSkge1xyXG4gICAgICAgICAgICB0aGlzLmxvY2FsZUlkID0gdGhpcy5sb2NhbGVTZXJ2aWNlLmxvY2FsZUlkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5biu5Yqp6YCJ5oup5pWw5o2u5ZCO55qE5Zue6LCDXHJcbiAgICAgKiBAcGFyYW0gZXZlbnQgZXZlbnRcclxuICAgICAqL1xyXG4gICAgcHVibGljIG9uU2VsZWN0Um93cyhldmVudDogYW55KSB7XHJcbiAgICAgICAgY29uc3QgeyBjb2RlID0gbnVsbCwgcm93cyA9IFtdIH0gPSBldmVudCB8fCB7fTtcclxuICAgICAgICBpZiAoY29kZSkge1xyXG4gICAgICAgICAgICBjb25zdCBpdGVtID0gdGhpcy5mZWF0dXJlcy5maW5kKChmZWF0dXJlOiBJRmVhdHVyZSkgPT4gZmVhdHVyZS5maWVsZCA9PT0gY29kZSk7XHJcbiAgICAgICAgICAgIGl0ZW0ucmVzdWx0cyA9IHJvd3M7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=