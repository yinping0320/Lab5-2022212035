{"version":3,"file":"farris-ui-feature-editor.umd.js.map","sources":["ng://@farris/ui-feature-editor/lib/type.ts","ng://@farris/ui-feature-editor/lib/lookup.service.ts","ng://@farris/ui-feature-editor/lib/feature-editor.component.ts","ng://@farris/ui-feature-editor/lib/i18n-service.ts","ng://@farris/ui-feature-editor/lib/feature-editor.service.ts","ng://@farris/ui-feature-editor/lib/lookup.directive.ts","ng://@farris/ui-feature-editor/lib/feature-editor.module.ts"],"sourcesContent":["/**\r\n * ç¹æ§å±æ§\r\n */\r\n// export interface IFeatures {\r\n//   id: string;\r\n//   /**\r\n//    * ç¼å·\r\n//    */\r\n//   code: string;\r\n//   /**\r\n//    * åç§°\r\n//    */\r\n//   __name__: { \"zh-CHS\": string, \"zh-CHT\": string, en: string };\r\n//   name_chs: string;\r\n//   name_cht: string;\r\n//   name_en: string;\r\n//   /**\r\n//    * æ¯å¦å¿å¡«\r\n//    * @description å¯éå¼ \"1\" | \"0\"\r\n//    */\r\n//   isrequired: string;\r\n//   /**\r\n//    * è¾å¥æ§ä»¶ç±»å\r\n//    * @description å¯éå¼ Help | Number | Enum etc\r\n//    */\r\n//   inputtype: string;\r\n//   textfield: string;\r\n//   codefield: string;\r\n//   /**\r\n//    * è¿æ»¤æ¡ä»¶\r\n//    */\r\n//   filtercondition: string;\r\n//   /**\r\n//    * æä¸¾ä¿¡æ¯\r\n//    */\r\n//   enuminfo: string;\r\n//   /**\r\n//    * æä¸¾æ°æ®æº\r\n//    */\r\n//   __data__: Array<{ id: string, text: string }>;\r\n//   /**\r\n//    * ç²¾åº¦\r\n//    */\r\n//   digitalaccuracy: number;\r\n//   /**\r\n//    * ç¹å¾éid\r\n//    */\r\n//   setid: string;\r\n//   /**\r\n//    * æ¯å¦æ¯æ å¸®å©\r\n//    * @description å¯éå¼ \"0\" | \"1\"\r\n//    */\r\n//   setistree: string;\r\n//   /**\r\n//    * idpå¸®å©id\r\n//    */\r\n//   codesetid: string;\r\n//   /**\r\n//    * åªè¯»\r\n//    * @description å¯éå¼ \"0\" | \"1\"\r\n//    */\r\n//   isreadonly: string;\r\n//   /**\r\n//    * é¡ºåºå·\r\n//    */\r\n//   sortorder: number;\r\n//   value: string;\r\n//   helpid: string;\r\n\r\nimport { Observable } from \"rxjs\";\r\n\r\n// }\r\nexport interface IFeatureEditorOptions {\r\n  width?: number;\r\n  height?: number;\r\n  title?: string;\r\n  /**\r\n   * ç¡®è®¤äºä»¶\r\n   */\r\n  onConfirm?: (features: IFeature[]) => void;\r\n  /**\r\n   * ç¡®è®¤å\r\n   * @description æ¹æ³è¿åå¼å¯ä»¥ä¸º\r\n   */\r\n  onConfirming?: (features: IFeature[]) => Observable<boolean | any> | boolean;\r\n  /**\r\n   * ç¹æ§ç¼è¾å¨æå¼å\r\n   */\r\n  onOpening?: (options: any) => Observable<boolean | any> | boolean;\r\n}\r\nexport enum InputType {\r\n  Help = 'Help',\r\n  String = 'String',\r\n  Enum = 'Enum',\r\n  Date = 'Date'\r\n}\r\n/**\r\n * ç¼è¾å¨ç±»å\r\n */\r\nexport const enum EditorTypes {\r\n  TEXTAREA = 'textarea',\r\n  TEXTBOX = 'textbox',\r\n  CHECKBOX = 'checkbox',\r\n  DATEPICKER = 'datepicker',\r\n  INPUTGROUP = 'input-group',\r\n  SELECT = 'select',\r\n  LOOKUP = 'lookup',\r\n  NUMBERBOX = 'numberbox',\r\n  COMBOLIST = 'combolist',\r\n  SWITCH = 'switch',\r\n  TIMEPICKER = 'timepicker',\r\n  COMBOLOOKUP = 'combo-lookup',\r\n  LANGUAGETEXTBOX = 'language-textbox',\r\n  ENUMEDITOR = 'enum-editor',\r\n  FILTEREDITOR = 'filter-editor',\r\n  SORTEDITOR = 'sort-editor'\r\n};\r\nexport interface IEditor {\r\n  controlType: EditorTypes,\r\n  [prop: string]: any;\r\n}\r\n/**\r\n * æä¸¾ç¼è¾å¨\r\n */\r\nexport interface IEnumEditor extends IEditor {\r\n  controlType: EditorTypes.ENUMEDITOR,\r\n  idField: string;\r\n  textField: string;\r\n  multiSelect?: boolean;\r\n  items?: any[];\r\n};\r\n/**\r\n * æ°å­ç¼è¾å¨\r\n */\r\nexport interface INumberEditor extends IEditor {\r\n  controlType: EditorTypes.NUMBERBOX;\r\n  precision: number;\r\n  step?: number;\r\n  min?: number;\r\n  max?: number;\r\n};\r\n/**\r\n * æ¥æç¼è¾å¨\r\n */\r\nexport interface IDateEditor extends IEditor {\r\n  controlType: EditorTypes.DATEPICKER;\r\n  dateRange?: boolean;\r\n}\r\n/**\r\n * æ¶é´ç¼è¾å¨\r\n */\r\nexport interface ITimeEditor extends IEditor {\r\n  controlType: EditorTypes.TIMEPICKER,\r\n  use12Hours?: boolean;\r\n}\r\n/**\r\n * å¸®å©ç¼è¾å¨\r\n */\r\nexport interface ILookupEditor extends IEditor {\r\n  idField: string;\r\n  textField: string;\r\n  valueField: string;\r\n  displayType?: string;\r\n  singleSelect?: boolean;\r\n  multiSelect?: boolean;\r\n  mapFields?: string | object;\r\n  dialogTitle?: string;\r\n  hiddenInputName?: string;\r\n}\r\n/**\r\n * ç¹æ§æè¿°\r\n */\r\nexport interface IFeature {\r\n  id: any;\r\n  title: string;\r\n  field: string;\r\n  editor: IEditor | IEnumEditor | INumberEditor | IDateEditor | ITimeEditor | ILookupEditor;\r\n  value?: any;\r\n  results?: any;\r\n  options?: { [prop: string]: any };\r\n}","import { ILookupHttpService, LookupGridResult } from '@farris/ui-lookup';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class LookupService implements ILookupHttpService {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n    getData(url: string, params: any): Observable<LookupGridResult> {\r\n        const urls = url.split(':');\r\n        const realUrl = '/api/scm/scmfnd/v1.0/scmcommoncmpservice/service/gethelpdata';\r\n        const helpID = urls[0] === '1' ? '9e2dca82-0aa2-4394-b26d-cb91164f44d5' : '344ffc53-7167-48d1-866b-a84083404e9e';\r\n        const filter = 'setid:' + urls[1] + '&' + 'state_isenabled:1';\r\n        const httpParams: any = {};\r\n        if (params) {\r\n            if (params.pageIndex) {\r\n                httpParams['pageIndex'] = JSON.stringify(params.pageIndex - 0);\r\n            }\r\n            if (params.pageSize) {\r\n                httpParams['pageSize'] = JSON.stringify(params.pageSize - 0);\r\n            }\r\n            if (params.condition) {\r\n                httpParams['condition'] = JSON.stringify(params.condition);\r\n            }\r\n            if (params.searchValue) {\r\n                httpParams['search'] = params.searchValue;\r\n            }\r\n        }\r\n        return this.http.put(realUrl, {\r\n            helpID: helpID,\r\n            queryParam: JSON.stringify(httpParams),\r\n            filterStr: filter\r\n        }).pipe(map((data: any) => JSON.parse(data.returnValue)));\r\n\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { ServerSideToken } from '@farris/ui-lookup';\r\nimport { LookupService } from './lookup.service';\r\nimport { IFeature } from './type';\r\n\r\n@Component({\r\n    selector: 'farris-feature-editor',\r\n    templateUrl: 'feature-editor.component.html',\r\n    styles: ['feature-editor.component.css'],\r\n    // providers: [\r\n    //   { provide: ServerSideToken, useClass: LookupService }\r\n    // ]\r\n})\r\nexport class FeatureEditorComponent implements OnInit {\r\n    public localeId: string;\r\n    /**\r\n     * ç¹æ§\r\n     */\r\n    @Input() features: Array<IFeature>;\r\n    constructor(\r\n        private localeService: LocaleService\r\n    ) {\r\n        if (this.localeService) {\r\n            this.localeId = this.localeService.localeId;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n    /**\r\n     * å¸®å©éæ©æ°æ®åçåè°\r\n     * @param event event\r\n     */\r\n    public onSelectRows(event: any) {\r\n        const { code = null, rows = [] } = event || {};\r\n        if (code) {\r\n            const item = this.features.find((feature: IFeature) => feature.field === code);\r\n            item.results = rows;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Inject, Injectable, LOCALE_ID, Optional } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class I18nService {\r\n  constructor(@Optional() @Inject(LOCALE_ID) public localeId: string) { }\r\n\r\n  public get title(): string {\r\n    let result = 'ç¹æ§ç¼è¾å¨';\r\n    switch (this.localeId) {\r\n      case 'en':\r\n        result = 'Feature Editor'; break;\r\n      case 'zh-CHT':\r\n        result = 'ç¹æ§ç·¨è¼¯å¨'; break;\r\n      default: break;\r\n    }\r\n    return result;\r\n  }\r\n}","import { ComponentFactoryResolver, ComponentRef, EventEmitter, Injectable, Injector, LOCALE_ID } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { IFeature, IFeatureEditorOptions } from './type';\r\nimport { FeatureEditorComponent } from './feature-editor.component';\r\nimport { I18nService } from './i18n-service';\r\nimport { isObservable, Observable, of } from 'rxjs';\r\nimport { EventManager } from '@angular/platform-browser';\r\n\r\n@Injectable()\r\nexport class FeatureEditorService {\r\n    public dialog: BsModalRef = null;\r\n    private componentRef: ComponentRef<FeatureEditorComponent> = null;\r\n    private keyDownHandler = null;\r\n    onUserConfirmed: EventEmitter<any> = new EventEmitter<any>();\r\n    private eventManager: EventManager;\r\n    constructor(\r\n        public injector: Injector,\r\n        private modalService: BsModalService,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private localeService: LocaleService,\r\n        private languageService: I18nService\r\n    ) {\r\n        if (!this.languageService) {\r\n            const localeId = this.injector.get<string>(LOCALE_ID, 'zh-CHS');\r\n            this.languageService = new I18nService(localeId);\r\n        }\r\n\r\n        this.eventManager = this.injector.get(EventManager, null);\r\n    }\r\n    /**\r\n     * å¼¹åºç¹æ§ç¼è¾å¨\r\n     * @param features ç¹å¾æ°ç»\r\n     * @param options å¼¹çªéç½®\r\n     * @returns \r\n     */\r\n    public show(features: Array<IFeature>, options?: IFeatureEditorOptions): void {\r\n        if (!features || features.length < 1) {\r\n            return;\r\n        }\r\n        this.canOpen(options).subscribe((canOpen: boolean) => {\r\n            if (!canOpen) {\r\n                return;\r\n            }\r\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(FeatureEditorComponent);\r\n            this.componentRef = componentFactory.create(this.injector);\r\n            this.componentRef.instance.features = features;\r\n            const titleText = this.languageService.title;\r\n            const okText = this.localeService.getValue('batchEditDialog.okText');\r\n            const cancelText = this.localeService.getValue('batchEditDialog.cancelText');\r\n            const { width = 470, height = 500, title = titleText } = options || {};\r\n            const modalOptions: any = {\r\n                title,\r\n                width,\r\n                height,\r\n                buttons: [\r\n                    {\r\n                        text: cancelText, cls: 'btn btn-secondary', handle: () => {\r\n                            this.dialog.close();\r\n                        }\r\n                    },\r\n                    {\r\n                        text: okText, cls: 'btn btn-primary',\r\n                        handle: () => {\r\n                            this.onConfirmClick(options);\r\n                        }\r\n                    }\r\n                ],\r\n                showButtons: true,\r\n                areaResponse: true,\r\n                opened: (e) => {\r\n                    this.registerShortcutKey(options, e.instance);\r\n                },\r\n                closed: () => {\r\n                    if (this.keyDownHandler) {\r\n                        this.keyDownHandler();\r\n                        this.keyDownHandler = null;\r\n                    }\r\n                }\r\n            };\r\n            this.dialog = this.modalService.show(this.componentRef, modalOptions);\r\n        });\r\n    }\r\n\r\n\r\n    private registerShortcutKey(options, dialogRef) {\r\n        // åè½¦ï¼ä¸ç¡®å®æé®å¤çé»è¾ä¸è³ã\r\n        const dlgContainerDom = dialogRef.dialog.location.nativeElement;\r\n\r\n        if (dlgContainerDom && !this.keyDownHandler) {\r\n            this.keyDownHandler = this.eventManager.addEventListener(dlgContainerDom, 'keydown', (e: KeyboardEvent) => {\r\n                e.stopPropagation();\r\n                if (e.key === 'Enter') {\r\n                    // if (e.target['nodeName'] === 'INPUT' && !e.ctrlKey) {\r\n                    //     return;\r\n                    // }\r\n                    this.onConfirmClick(options);\r\n                } else if (e.key === 'Escape') {\r\n                    this.dialog.close();\r\n                } else if (e.key === 'Tab') {\r\n                    this.onTabKeydownHandler(e.target);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.componentRef) {\r\n            this.setFirstInputFocus();\r\n        }\r\n    }\r\n\r\n    private setFirstInputFocus() {\r\n        const firstInputEl = this.componentRef.location.nativeElement.querySelector('input,textarea');\r\n        if (firstInputEl) {\r\n            firstInputEl.focus();\r\n        }\r\n    }\r\n\r\n    private onTabKeydownHandler(currentTarget) {\r\n        let allInputs = this.componentRef.location.nativeElement.querySelectorAll('input,textarea');\r\n        allInputs = Array.from(allInputs);\r\n        const currentInputIndex = allInputs.findIndex(n => n === currentTarget);\r\n        let nextInputIndex = currentInputIndex + 1;\r\n        if (nextInputIndex >= allInputs.length) {\r\n            nextInputIndex = 0;\r\n        }\r\n        const nextInputTarget = allInputs[nextInputIndex];\r\n        if (nextInputTarget) {\r\n            setTimeout(() => {\r\n                nextInputTarget.focus();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ç¨æ·ç¹å»ç¡®è®¤æé®\r\n     */\r\n    private onConfirmClick(options?: IFeatureEditorOptions) {\r\n        this.canClose(options).subscribe((result: boolean) => {\r\n            if (result === true) {\r\n                this.onConfirm(options);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * ç¡®è®¤\r\n     * @param options options\r\n     */\r\n    private onConfirm(options?: IFeatureEditorOptions) {\r\n        const features = this.componentRef && this.componentRef.instance && this.componentRef.instance.features || [];\r\n        this.dialog.close();\r\n        if (options.onConfirm && typeof options.onConfirm) {\r\n            options.onConfirm(features);\r\n        }\r\n        this.onUserConfirmed.next(features);\r\n    }\r\n    /**\r\n     * æ¯å¦å¯ä»¥å³é­\r\n     * @param options options\r\n     * @returns \r\n     */\r\n    private canClose(options?: IFeatureEditorOptions): Observable<any> {\r\n        const features = this.componentRef && this.componentRef.instance && this.componentRef.instance.features || [];\r\n        const onConfirmingRef = options && options.onConfirming || null;\r\n        if (!onConfirmingRef) {\r\n            return of(true);\r\n        }\r\n        // æç¡®è®¤åäºä»¶\r\n        const onConfirming = onConfirmingRef(features);\r\n        if (isObservable(onConfirming)) {\r\n            return onConfirming;\r\n        } else {\r\n            return of(onConfirming);\r\n        }\r\n    }\r\n    /**\r\n     * æ¯å¦å¯ä»¥å¼¹åºç¹æ§ç¼è¾å¨\r\n     * @param options options\r\n     * @returns \r\n     */\r\n    private canOpen(options?: IFeatureEditorOptions): Observable<any> {\r\n        const onOpeningHandlerRef = options && options.onOpening || null;\r\n        if (!onOpeningHandlerRef) {\r\n            return of(true);\r\n        }\r\n        const onOpeningHandler = onOpeningHandlerRef(options);\r\n        if (isObservable(onOpeningHandler)) {\r\n            return onOpeningHandler;\r\n        } else {\r\n            return of(onOpeningHandler);\r\n        }\r\n    }\r\n}\r\n","import { Directive, Input, Output, EventEmitter, AfterViewInit, Injector } from '@angular/core';\r\nimport { LookupComponent } from '@farris/ui-lookup';\r\nimport { of } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[lookup-extra]'\r\n})\r\nexport class LookupDirective implements AfterViewInit {\r\n  @Input('lookup-extra')\r\n  public code: string;\r\n  @Input('ins') lookup: LookupComponent;\r\n  @Output() onSelectRows: EventEmitter<any> = new EventEmitter<any>();\r\n  constructor() {\r\n  }\r\n  ngAfterViewInit(): void {\r\n    if (this.lookup) {\r\n      this.lookup.dictPicked = (rows: any) => {\r\n        if (this.onSelectRows) {\r\n          this.onSelectRows.emit({ code: this.code, rows: [].concat(rows) })\r\n        }\r\n        const result = {\r\n          closeDialog: true\r\n        };\r\n        return of(result);\r\n      };\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { TimePickerModule } from '@farris/ui-time-picker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisSectionModule } from '@farris/ui-section';\r\nimport { FeatureEditorComponent } from './feature-editor.component';\r\nimport { LookupDirective } from './lookup.directive';\r\nimport { I18nService } from './i18n-service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FeatureEditorComponent,\r\n    LookupDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FarrisFormsModule,\r\n    LookupModule,\r\n    ComboListModule,\r\n    InputGroupModule,\r\n    ModalModule,\r\n    FarrisDatePickerModule,\r\n    NumberSpinnerModule,\r\n    TimePickerModule,\r\n    SwitchModule,\r\n    FarrisSectionModule,\r\n    LocaleModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    FeatureEditorComponent,\r\n    LookupDirective\r\n  ],\r\n  entryComponents: [\r\n    FeatureEditorComponent\r\n  ],\r\n  providers: [\r\n    I18nService\r\n  ]\r\n})\r\nexport class FeatureEditorModule { }\r\n"],"names":["http","map","Injectable","HttpClient","Component","LocaleService","Input","Optional","Inject","LOCALE_ID","EventEmitter","EventManager","of","isObservable","Injector","BsModalService","ComponentFactoryResolver","Directive","Output","NgModule","CommonModule","FormsModule","FarrisFormsModule","LookupModule","ComboListModule","InputGroupModule","ModalModule","FarrisDatePickerModule","NumberSpinnerModule","TimePickerModule","SwitchModule","FarrisSectionModule","LocaleModule"],"mappings":"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"}
