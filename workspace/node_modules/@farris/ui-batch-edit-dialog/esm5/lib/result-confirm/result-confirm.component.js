/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var ResultConfirmComponent = /** @class */ (function () {
    function ResultConfirmComponent() {
        this.dialogRef = null;
        this.rows = 0;
        this.confirmed = new EventEmitter();
        this.canceled = new EventEmitter();
    }
    Object.defineProperty(ResultConfirmComponent.prototype, "showNotify", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var _showNotify = localStorage.getItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY');
            if (_showNotify === 'always' || !_showNotify) {
                return true;
            }
            else {
                return false;
            }
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var _showNotify = 'never';
            if (value === true) {
                _showNotify = 'always';
            }
            else {
                _showNotify = 'never';
            }
            localStorage.setItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY', _showNotify);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ResultConfirmComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ResultConfirmComponent.prototype.cancel = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.canceled.emit({ instance: this, event: event });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ResultConfirmComponent.prototype.confirm = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.confirmed.emit({ instance: this, event: event });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ResultConfirmComponent.prototype.setRemindOpporunity = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var checked = event && event.target && event.target.checked || false;
        if (checked === true) {
            this.showNotify = false;
        }
        else {
            this.showNotify = true;
        }
    };
    ResultConfirmComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-result-confirm',
                    template: "<div class=\"result-confirm modal-message\">\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title\">\n        <span class=\"modal-title-label\">{{'batchEditDialog.confirmTitle' | locale:'\u63D0\u793A'}}</span>\n      </div>\n      <div class=\"actions\">\n        <ul>\n          <li class=\"f-btn-icon f-bare\"><span class=\"f-icon modal_close\" (click)='cancel($event)'></span></li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"f-utils-absolute-all\" style=\"height: 10px; z-index: 1; display: none;\"></div>\n    <div class=\"modal-body\">\n      <div style=\"position: static;\" class=\"ps\">\n        <div class=\"ps-content\">\n          <div class=\"farris-messager\">\n            <section class=\"modal-tips d-flex flex-row messager-type-question\">\n              <div class=\"float-left modal-tips-iconwrap\"><span class=\"f-icon f-icon-warning\"></span></div>\n              <div class=\"modal-tips-content\">\n                <p class=\"toast-msg-title\">{{'batchEditDialog.confirmText' | locale:'\u5C06\u4FEE\u6539{0}\u884C\u6570\u636E\uFF0C\u786E\u5B9A\u4FEE\u6539\u5417\uFF1F' | replaceX:\n                  rows}}</p>\n              </div>\n            </section>\n            <div class=\"modal-footer\">\n              <div class=\"custom-control custom-checkbox custom-control-inline never-show\">\n                <input class=\"custom-control-input\" id=\"never\" type=\"checkbox\" (change)=\"setRemindOpporunity($event)\">\n                <label class=\"custom-control-label\" for=\"never\">{{'batchEditDialog.neverShow' | locale:'\u4E0D\u518D\u63D0\u793A'}}</label>\n              </div>\n              <button class=\"btn btn-secondary  btn-lg\" type=\"button\"\n                (click)='cancel($event)'>{{'batchEditDialog.cancelText' | locale:'\u53D6\u6D88'}}</button>\n              <button class=\"btn btn-primary btn-lg\" type=\"button\" (click)=\"confirm($event)\">{{'batchEditDialog.okText'\n                | locale:'\u786E\u5B9A'}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
                    styles: [".result-confirm{height:100%}.result-confirm .modal-header{border-bottom:none}.modal-footer .never-show{text-align:left;width:90%;color:#2d2f33;font-size:14px}"]
                }] }
    ];
    /** @nocollapse */
    ResultConfirmComponent.ctorParameters = function () { return []; };
    ResultConfirmComponent.propDecorators = {
        dialogRef: [{ type: Input }],
        rows: [{ type: Input }],
        confirmed: [{ type: Output }],
        canceled: [{ type: Output }],
        showNotify: [{ type: Input }]
    };
    return ResultConfirmComponent;
}());
export { ResultConfirmComponent };
if (false) {
    /** @type {?} */
    ResultConfirmComponent.prototype.dialogRef;
    /** @type {?} */
    ResultConfirmComponent.prototype.rows;
    /** @type {?} */
    ResultConfirmComponent.prototype.confirmed;
    /** @type {?} */
    ResultConfirmComponent.prototype.canceled;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0LWNvbmZpcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1iYXRjaC1lZGl0LWRpYWxvZy8iLCJzb3VyY2VzIjpbImxpYi9yZXN1bHQtY29uZmlybS9yZXN1bHQtY29uZmlybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0U7SUE0QkU7UUF0QlMsY0FBUyxHQUFRLElBQUksQ0FBQztRQUN0QixTQUFJLEdBQVcsQ0FBQyxDQUFDO1FBQ2hCLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9CLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBbUJ4QixDQUFDO0lBbEJqQixzQkFDVyw4Q0FBVTs7OztRQVNyQjs7Z0JBQ1EsV0FBVyxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsK0JBQStCLENBQUM7WUFDekUsSUFBSSxXQUFXLEtBQUssUUFBUSxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUM1QyxPQUFPLElBQUksQ0FBQzthQUNiO2lCQUFNO2dCQUNMLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7UUFDSCxDQUFDOzs7OztRQWpCRCxVQUNzQixLQUFjOztnQkFDOUIsV0FBVyxHQUFXLE9BQU87WUFDakMsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO2dCQUNsQixXQUFXLEdBQUcsUUFBUSxDQUFDO2FBQ3hCO2lCQUFNO2dCQUNMLFdBQVcsR0FBRyxPQUFPLENBQUM7YUFDdkI7WUFDRCxZQUFZLENBQUMsT0FBTyxDQUFDLCtCQUErQixFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ3JFLENBQUM7OztPQUFBOzs7O0lBV0QseUNBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7Ozs7SUFDTSx1Q0FBTTs7OztJQUFiLFVBQWMsS0FBVTtRQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsS0FBSyxPQUFBLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Ozs7O0lBQ00sd0NBQU87Ozs7SUFBZCxVQUFlLEtBQVU7UUFDdkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEtBQUssT0FBQSxFQUFFLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7OztJQUNNLG9EQUFtQjs7OztJQUExQixVQUEyQixLQUFVOztZQUM3QixPQUFPLEdBQUcsS0FBSyxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksS0FBSztRQUN0RSxJQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7WUFDcEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7U0FDekI7YUFBTTtZQUNMLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1NBQ3hCO0lBQ0gsQ0FBQzs7Z0JBN0NGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixnbUVBQThDOztpQkFFL0M7Ozs7OzRCQUVFLEtBQUs7dUJBQ0wsS0FBSzs0QkFDTCxNQUFNOzJCQUNOLE1BQU07NkJBQ04sS0FBSzs7SUFvQ1IsNkJBQUM7Q0FBQSxBQTlDRCxJQThDQztTQXpDWSxzQkFBc0I7OztJQUNqQywyQ0FBK0I7O0lBQy9CLHNDQUEwQjs7SUFDMUIsMkNBQXlDOztJQUN6QywwQ0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1yZXN1bHQtY29uZmlybScsXG4gIHRlbXBsYXRlVXJsOiAnLi9yZXN1bHQtY29uZmlybS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Jlc3VsdC1jb25maXJtLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBSZXN1bHRDb25maXJtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgZGlhbG9nUmVmOiBhbnkgPSBudWxsO1xuICBASW5wdXQoKSByb3dzOiBudW1iZXIgPSAwO1xuICBAT3V0cHV0KCkgY29uZmlybWVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgY2FuY2VsZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBzZXQgc2hvd05vdGlmeSh2YWx1ZTogYm9vbGVhbikge1xuICAgIGxldCBfc2hvd05vdGlmeTogc3RyaW5nID0gJ25ldmVyJztcbiAgICBpZiAodmFsdWUgPT09IHRydWUpIHtcbiAgICAgIF9zaG93Tm90aWZ5ID0gJ2Fsd2F5cyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIF9zaG93Tm90aWZ5ID0gJ25ldmVyJztcbiAgICB9XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ0JBVENIX0VESVRfRElBTE9HX1NIT1dfTk9USUZZJywgX3Nob3dOb3RpZnkpO1xuICB9XG4gIHB1YmxpYyBnZXQgc2hvd05vdGlmeSgpIHtcbiAgICBjb25zdCBfc2hvd05vdGlmeSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdCQVRDSF9FRElUX0RJQUxPR19TSE9XX05PVElGWScpO1xuICAgIGlmIChfc2hvd05vdGlmeSA9PT0gJ2Fsd2F5cycgfHwgIV9zaG93Tm90aWZ5KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG4gIHB1YmxpYyBjYW5jZWwoZXZlbnQ6IGFueSkge1xuICAgIHRoaXMuY2FuY2VsZWQuZW1pdCh7IGluc3RhbmNlOiB0aGlzLCBldmVudCB9KTtcbiAgfVxuICBwdWJsaWMgY29uZmlybShldmVudDogYW55KSB7XG4gICAgdGhpcy5jb25maXJtZWQuZW1pdCh7IGluc3RhbmNlOiB0aGlzLCBldmVudCB9KTtcbiAgfVxuICBwdWJsaWMgc2V0UmVtaW5kT3Bwb3J1bml0eShldmVudDogYW55KSB7XG4gICAgY29uc3QgY2hlY2tlZCA9IGV2ZW50ICYmIGV2ZW50LnRhcmdldCAmJiBldmVudC50YXJnZXQuY2hlY2tlZCB8fCBmYWxzZTtcbiAgICBpZiAoY2hlY2tlZCA9PT0gdHJ1ZSkge1xuICAgICAgdGhpcy5zaG93Tm90aWZ5ID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2hvd05vdGlmeSA9IHRydWU7XG4gICAgfVxuICB9XG59XG4iXX0=