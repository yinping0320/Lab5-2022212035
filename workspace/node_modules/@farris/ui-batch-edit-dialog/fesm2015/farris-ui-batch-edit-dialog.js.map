{"version":3,"file":"farris-ui-batch-edit-dialog.js.map","sources":["ng://@farris/ui-batch-edit-dialog/lib/batch-edit-dialog.component.ts","ng://@farris/ui-batch-edit-dialog/lib/result-confirm/result-confirm.component.ts","ng://@farris/ui-batch-edit-dialog/lib/batch-edit-dialog.service.ts","ng://@farris/ui-batch-edit-dialog/lib/lookup.directive.ts","ng://@farris/ui-batch-edit-dialog/lib/batch-edit-dialog.module.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef, Injector, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Component({\r\n  selector: 'farris-batch-edit-dialog',\r\n  templateUrl: './batch-edit-dialog.component.html',\r\n  styleUrls: ['batch-edit-dialog.component.css']\r\n})\r\nexport class BatchEditDialogComponent implements OnInit {\r\n  @ViewChild(\"header\") header: ElementRef;\r\n  // è¾å¥ç»ä»¶\r\n  public inputs = [];\r\n  /**\r\n   * gridå\r\n   * @description æ°æ®æ ¼å¼\r\n   * ```json\r\n   *  { id: \"name\", label: \"å§å\", dataType:\"boolean\" },\r\n   * ```\r\n   */\r\n  @Input() fields = [];\r\n  /**\r\n   * gridåå¯¹åºçç¼è¾å¨\r\n   * @description æ°æ®æ ¼å¼\r\n   * ```json\r\n   * {\r\n   *   field: \"sex\",\r\n   *   editor: {\r\n   *      controlType: \"textbox\"\r\n   *   }\r\n   * }\r\n   * ```\r\n   */\r\n  @Input() eidtors = [];\r\n  /**\r\n   * å¼¹çªå®ä¾\r\n   */\r\n  @Input() dialogRef = null;\r\n\r\n  @Input() title: string = null;\r\n  @Input() rows: number = 1;\r\n  @Output() confirmed = new EventEmitter();\r\n  @Output() canceled = new EventEmitter();\r\n\r\n  constructor(private injector: Injector, private cdr: ChangeDetectorRef, private localeService: LocaleService) { }\r\n\r\n  ngOnInit() {\r\n    this.inputs.push({\r\n      fields: this.fields.slice(0),\r\n      field: '',\r\n      controlType: 'default',\r\n      id: 'input0',\r\n      value: null,\r\n      options: {}\r\n    });\r\n    this.cdr.markForCheck();\r\n  }\r\n  public cancel(event: any) {\r\n    this.canceled.emit({ instance: this, event });\r\n  }\r\n  public confirm(event: any) {\r\n    this.confirmed.emit({ instance: this, event });\r\n  }\r\n  /**\r\n   * æ°å¢å­æ®µç¼è¾è¡\r\n   */\r\n  public appendRow() {\r\n    const fields = this.computeFields() || [];\r\n    // ä¸å¯¹æ°å¢å­æ®µåéå¶\r\n    /*\r\n    if(fields.length<1){\r\n        return;\r\n    }*/\r\n    this.inputs.push({\r\n      fields,\r\n      controlType: 'default',\r\n      value: null,\r\n      id: 'input' + this.inputs.length,\r\n    });\r\n    this.cdr.markForCheck();\r\n  }\r\n  /**\r\n   * å é¤å­æ®µç¼è¾è¡\r\n   * @param event event\r\n   * @param row row\r\n   */\r\n  public removeRow(event: any, row: number) {\r\n    this.inputs.splice(row, 1);\r\n    this.updateFields();\r\n    this.cdr.markForCheck();\r\n  }\r\n  /**\r\n   * ç¼è¾å­æ®µåçåå\r\n   * @param event event\r\n   * @param row row\r\n   */\r\n  public onFieldChanged(event: any, row: number) {\r\n    const { value: field = null } = event || {};\r\n    const input = this.inputs[row];\r\n    // æ´æ°å½åè¡å­æ®µ\r\n    input.fields = this.computeFields();\r\n    input.field = field;\r\n    const fieldInfo = this.fields.find(item => item.id === field);\r\n    const dataType = fieldInfo && fieldInfo.dataType || null;\r\n    input.dataType = dataType;\r\n    if (field) {\r\n      const editorInfo = this.eidtors.find(item => item.field === field);\r\n      // æ´æ°å½åè¡ç¼è¾å¨\r\n      if (editorInfo && editorInfo.editor) {\r\n        input.controlType = editorInfo.editor.controlType || 'default';\r\n        input.options = editorInfo.editor.options || {};\r\n      }\r\n    }\r\n    this.updateFields();\r\n  }\r\n  /**\r\n   * å¸®å©éæ©æ°æ®åçåè°\r\n   * @param event event\r\n   */\r\n  public onSelectRows(event: any) {\r\n    const { field = null, rows = [] } = event || {};\r\n    if (field) {\r\n      const item = this.inputs.find(input => input.field === field);\r\n      item.value = rows;\r\n    }\r\n  }\r\n  /**\r\n   * è®¡ç®å½åè¡å¯ä»¥éæ©çå­æ®µ\r\n   * @param appendField è¦æ·»å çå­æ®µ\r\n   */\r\n  private computeFields(appendField?: any) {\r\n    const others = this.fields.filter(field => {\r\n      if (appendField && field.id === appendField) {\r\n        return true;\r\n      }\r\n      return !this.inputs.find(input => input.field === field.id);\r\n    });\r\n    return others;\r\n  }\r\n  /**\r\n   * æ´æ°ææè¡å¯ä»¥éæ©çå­æ®µ\r\n   */\r\n  private updateFields() {\r\n    this.inputs.forEach(input => {\r\n      input.fields = this.computeFields(input.field);\r\n    });\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-result-confirm',\n  templateUrl: './result-confirm.component.html',\n  styleUrls: ['./result-confirm.component.css']\n})\nexport class ResultConfirmComponent implements OnInit {\n  @Input() dialogRef: any = null;\n  @Input() rows: number = 0;\n  @Output() confirmed = new EventEmitter();\n  @Output() canceled = new EventEmitter();\n  @Input()\n  public set showNotify(value: boolean) {\n    let _showNotify: string = 'never';\n    if (value === true) {\n      _showNotify = 'always';\n    } else {\n      _showNotify = 'never';\n    }\n    localStorage.setItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY', _showNotify);\n  }\n  public get showNotify() {\n    const _showNotify = localStorage.getItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY');\n    if (_showNotify === 'always' || !_showNotify) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n  public cancel(event: any) {\n    this.canceled.emit({ instance: this, event });\n  }\n  public confirm(event: any) {\n    this.confirmed.emit({ instance: this, event });\n  }\n  public setRemindOpporunity(event: any) {\n    const checked = event && event.target && event.target.checked || false;\n    if (checked === true) {\n      this.showNotify = false;\n    } else {\n      this.showNotify = true;\n    }\n  }\n}\n","import { Injectable, ComponentFactoryResolver, Injector, EventEmitter, ComponentRef } from '@angular/core';\r\nimport { BatchEditDialogComponent } from './batch-edit-dialog.component';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { isObservable, Observable, of, Subject } from 'rxjs';\r\nimport { ResultConfirmComponent } from './result-confirm/result-confirm.component';\r\n// tslint:disable: max-line-length\r\n@Injectable()\r\nexport class BatchEditDialogService {\r\n  public dialogRef: BsModalRef = null;\r\n  private componentRef: ComponentRef<BatchEditDialogComponent> = null;\r\n  // ç¨æ·å¯¹è¾å¥è¿è¡ç¡®è®¤ï¼æ­¤æ¶å¯ä»¥æ´æ°bindingDataæ°æ®\r\n  public onUserConfirmed: EventEmitter<any> = new EventEmitter<any>();\r\n  constructor(\r\n    public injector: Injector,\r\n    private modalService: BsModalService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private localeService: LocaleService,\r\n  ) { }\r\n  /**\r\n   * @description æ§ä»¶åæ°æ ¼å¼\r\n   * # æ§ä»¶åæ°æ ¼å¼\r\n   * ## textbox\r\n   * ```json\r\n   * {\"title\":\"å§å\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.TEXTBOX}}\r\n   * ```\r\n   * ## dropdown\r\n   * ```json\r\n   * {\"title\":\"å§å\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.COMBOLIST,\"idField\":\"id\",\"textField\":\"text\",\"items\":[],\"multiSelect\":false}}\r\n   * ```\r\n   * ## lookup\r\n   * ```json\r\n   * {\"title\":\"å§å\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.LOOKUP,\"uri\":\"\",\"idField\":\"id\",\"textField\":\"text\",\"valueField\":\"id\",\"displayType\":\"LIST\",\"mapFields\":{},\"singleSelect\":true,\"dialogTitle\":\"\",\"hiddenInputName\":\"\",\"items\":[],\"multiSelect\":false}}\r\n   * ```\r\n   * ## æ°å¼è¾å¥æ¡\r\n   * ```json\r\n   * {\"title\":\"æ°å¼\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.NUMBER,\"precision\":2,\"step\":1,\"min\":1,\"max\":10}}\r\n   * ```\r\n   */\r\n  public batchEdit(columns: any, options?: { [propName: string]: any }): BsModalRef {\r\n    const titleText = this.localeService.getValue('batchEditDialog.title');\r\n    const okText = this.localeService.getValue('batchEditDialog.okText');\r\n    const cancelText = this.localeService.getValue('batchEditDialog.cancelText');\r\n    const { width = 792, height = 580, title = titleText, rows = 1 } = options || {};\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(BatchEditDialogComponent);\r\n    this.componentRef = componentFactory.create(this.injector);\r\n    this.componentRef.instance.fields = this.getFields(columns);\r\n    this.componentRef.instance.eidtors = this.getEditors(columns);\r\n    this.componentRef.instance.title = title;\r\n    this.componentRef.instance.rows = rows;\r\n\r\n    this.dialogRef = this.modalService.show(this.componentRef, {\r\n      title,\r\n      width,\r\n      height,\r\n      buttons: [\r\n        {\r\n          text: cancelText, cls: 'btn btn-secondary', handle: () => {\r\n            this.dialogRef.close();\r\n          }\r\n        },\r\n        {\r\n          text: okText, cls: 'btn btn-primary',\r\n          handle: () => {\r\n            this.userConfired();\r\n          }\r\n        }\r\n      ],\r\n      showHeader: false,\r\n      showButtons: false,\r\n    });\r\n    this.componentRef.instance.confirmed.subscribe((e: { instance: any, event: any }) => {\r\n      this.canConfirm(options).subscribe((result: boolean) => {\r\n        if (result === true) {\r\n          this.userConfired(options);\r\n          this.dialogRef.close();\r\n        }\r\n      });\r\n    });\r\n    this.componentRef.instance.canceled.subscribe((e: { instance: any, event: any }) => {\r\n      this.dialogRef.close();\r\n    });\r\n\r\n    this.componentRef.instance.dialogRef = this.dialogRef;\r\n    this.dialogRef.dialog.instance.draggbar.handle = this.componentRef.instance.header.nativeElement;\r\n    return this.dialogRef;\r\n  }\r\n  /**\r\n   * ç¨æ·ç¡®è®¤ä¿®æ¹\r\n   */\r\n  public userConfired(options?: { [propName: string]: any }) {\r\n    const inputs = this.componentRef && this.componentRef.instance && this.componentRef.instance.inputs || [];\r\n    // éå¯¹checkboxåç¹æ®å¤ç\r\n    if (inputs && inputs.length > 0) {\r\n      inputs.forEach(input => {\r\n        const { controlType, dataType } = input;\r\n        if (controlType === 'checkbox' && dataType === 'boolean') {\r\n          input.value = input.value ? true : false;\r\n        }\r\n      });\r\n    }\r\n    if (options && options.onConfirm && typeof options.onConfirm === 'function') {\r\n      options.onConfirm(inputs);\r\n    }\r\n    this.onUserConfirmed.next(inputs);\r\n  }\r\n  /**\r\n   * ä»domä¸­è·ågridå\r\n   * @param columns dom\r\n   */\r\n  private getFields(columns: any): Array<any> {\r\n    const fields = [];\r\n    if (!columns || columns.length < 1) {\r\n      return fields;\r\n    }\r\n    columns.forEach((collect: Array<any>) => {\r\n      // collectä¸ºæ°ç»\r\n      if (collect && collect.length > 0) {\r\n        collect.forEach((column: any) => {\r\n          const { field = null, title = '', dataType = null, enableBatchEdit = false } = column || {};\r\n          if (field && enableBatchEdit) {\r\n            fields.push({ id: field, label: title, dataType });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return fields;\r\n  }\r\n  /**\r\n   * ä»columnsä¸­è·åç¼è¾å¨\r\n   * @param columns dom\r\n   */\r\n  private getEditors(columns: any): Array<any> {\r\n    const editors = [];\r\n    if (!columns || columns.length < 1) {\r\n      return editors;\r\n    }\r\n    columns.forEach((collect: Array<any>) => {\r\n      // collectä¸ºæ°ç»\r\n      if (collect && collect.length > 0) {\r\n        collect.forEach((column: any) => {\r\n          const { field = null, editor = {}, enableBatchEdit = false } = column || {};\r\n          if (editor && field && enableBatchEdit) {\r\n            editor.controlType = editor.type;\r\n            editors.push({ field, editor });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return editors;\r\n  }\r\n  private canConfirm(options?: { [propName: string]: any }) {\r\n    const subject = new Subject<any>();\r\n    let showNotify = options && options.showNotify;\r\n    const { rows = 1 } = options || {};\r\n    const valueChanged = this.isValueChanged();\r\n    if (!valueChanged) {\r\n      return of(true);\r\n    }\r\n    if (showNotify === undefined) {\r\n      showNotify = true;\r\n    }\r\n    if (!showNotify) {\r\n      return of(true);\r\n    }\r\n    let dialogRef = null;\r\n    try {\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ResultConfirmComponent);\r\n      const componentRef = componentFactory.create(this.injector);\r\n      const shouldShowNotify = componentRef.instance.showNotify || false;\r\n\r\n      componentRef.instance.rows = rows;\r\n      if (shouldShowNotify) {\r\n        dialogRef = this.modalService.show(componentRef, {\r\n          title: '',\r\n          width: 500,\r\n          height: 240,\r\n          showHeader: false,\r\n          showButtons: false,\r\n          buttons: []\r\n        });\r\n        // ç¡®è®¤\r\n        componentRef.instance.confirmed.subscribe((e: { instance: any, event: any }) => {\r\n          if (dialogRef) {\r\n            dialogRef.close();\r\n          }\r\n          subject.next(true);\r\n        });\r\n        // åæ¶\r\n        componentRef.instance.canceled.subscribe((e: { instance: any, event: any }) => {\r\n          if (dialogRef) {\r\n            dialogRef.close();\r\n          }\r\n          subject.next(false);\r\n        });\r\n      } else {\r\n        return of(true);\r\n      }\r\n    } catch (e) {\r\n      return of(true);\r\n    }\r\n    return subject;\r\n  }\r\n  public isValueChanged() {\r\n    const inputs = this.componentRef && this.componentRef.instance && this.componentRef.instance.inputs || [];\r\n    if (!inputs || inputs.length < 1) {\r\n      return false;\r\n    }\r\n    const unChanged = inputs.every((item) => !item.field);\r\n    return !unChanged;\r\n  }\r\n}\r\n","import { Directive, Input, Output, EventEmitter, AfterViewInit, Injector } from '@angular/core';\r\nimport { LookupComponent } from '@farris/ui-lookup';\r\nimport { of } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[lookup-extra]'\r\n})\r\nexport class LookupDirective implements AfterViewInit {\r\n    @Input('lookup-extra') field: string;\r\n    @Input('ins') lookup: LookupComponent;\r\n    @Output() onSelectRows: EventEmitter<any> = new EventEmitter<any>();\r\n    constructor() {\r\n    }\r\n    ngAfterViewInit(): void {\r\n        if (this.lookup) {\r\n            this.lookup.dictPicked = (rows: any) => {\r\n                if (this.onSelectRows) {\r\n                    this.onSelectRows.emit({ field: this.field, rows: [].concat(rows) })\r\n                }\r\n                const result = {\r\n                    closeDialog: true\r\n                };\r\n                return of(result);\r\n            };\r\n        }\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { TimePickerModule } from '@farris/ui-time-picker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { FarrisCommonModule} from '@farris/ui-common'\r\n// import { BatchEditDialogService } from './batch-edit-dialog.service';\r\nimport { BatchEditDialogComponent } from './batch-edit-dialog.component';\r\nimport { LookupDirective } from './lookup.directive';\r\nimport { ResultConfirmComponent } from './result-confirm/result-confirm.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BatchEditDialogComponent,\r\n    LookupDirective,\r\n    ResultConfirmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FarrisFormsModule,\r\n    LookupModule,\r\n    ComboListModule,\r\n    InputGroupModule,\r\n    ModalModule,\r\n    FarrisDatePickerModule,\r\n    NumberSpinnerModule,\r\n    TimePickerModule,\r\n    SwitchModule,\r\n    FarrisTooltipModule,\r\n    FarrisCommonModule,\r\n    LocaleModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    BatchEditDialogComponent,\r\n    LookupDirective,\r\n    ResultConfirmComponent\r\n  ],\r\n  entryComponents: [\r\n    BatchEditDialogComponent,\r\n    ResultConfirmComponent\r\n  ]\r\n})\r\nexport class BatchEditDialogModule {\r\n  // static forRoot(): ModuleWithProviders {\r\n  //     return {\r\n  //         ngModule: BatchEditDialogModule,\r\n  //         providers: [\r\n  //             BatchEditDialogService\r\n  //         ]\r\n  //     };\r\n  // }\r\n}\r\n"],"names":[],"mappings":"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"}
