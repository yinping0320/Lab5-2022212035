{"version":3,"file":"farris-ui-batch-edit-dialog.umd.js.map","sources":["ng://@farris/ui-batch-edit-dialog/lib/batch-edit-dialog.component.ts","ng://@farris/ui-batch-edit-dialog/lib/result-confirm/result-confirm.component.ts","ng://@farris/ui-batch-edit-dialog/lib/batch-edit-dialog.service.ts","ng://@farris/ui-batch-edit-dialog/lib/lookup.directive.ts","ng://@farris/ui-batch-edit-dialog/lib/batch-edit-dialog.module.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectorRef, Injector, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n@Component({\r\n  selector: 'farris-batch-edit-dialog',\r\n  templateUrl: './batch-edit-dialog.component.html',\r\n  styleUrls: ['batch-edit-dialog.component.css']\r\n})\r\nexport class BatchEditDialogComponent implements OnInit {\r\n  @ViewChild(\"header\") header: ElementRef;\r\n  // è¾å¥ç»ä»¶\r\n  public inputs = [];\r\n  /**\r\n   * gridå\r\n   * @description æ°æ®æ ¼å¼\r\n   * ```json\r\n   *  { id: \"name\", label: \"å§å\", dataType:\"boolean\" },\r\n   * ```\r\n   */\r\n  @Input() fields = [];\r\n  /**\r\n   * gridåå¯¹åºçç¼è¾å¨\r\n   * @description æ°æ®æ ¼å¼\r\n   * ```json\r\n   * {\r\n   *   field: \"sex\",\r\n   *   editor: {\r\n   *      controlType: \"textbox\"\r\n   *   }\r\n   * }\r\n   * ```\r\n   */\r\n  @Input() eidtors = [];\r\n  /**\r\n   * å¼¹çªå®ä¾\r\n   */\r\n  @Input() dialogRef = null;\r\n\r\n  @Input() title: string = null;\r\n  @Input() rows: number = 1;\r\n  @Output() confirmed = new EventEmitter();\r\n  @Output() canceled = new EventEmitter();\r\n\r\n  constructor(private injector: Injector, private cdr: ChangeDetectorRef, private localeService: LocaleService) { }\r\n\r\n  ngOnInit() {\r\n    this.inputs.push({\r\n      fields: this.fields.slice(0),\r\n      field: '',\r\n      controlType: 'default',\r\n      id: 'input0',\r\n      value: null,\r\n      options: {}\r\n    });\r\n    this.cdr.markForCheck();\r\n  }\r\n  public cancel(event: any) {\r\n    this.canceled.emit({ instance: this, event });\r\n  }\r\n  public confirm(event: any) {\r\n    this.confirmed.emit({ instance: this, event });\r\n  }\r\n  /**\r\n   * æ°å¢å­æ®µç¼è¾è¡\r\n   */\r\n  public appendRow() {\r\n    const fields = this.computeFields() || [];\r\n    // ä¸å¯¹æ°å¢å­æ®µåéå¶\r\n    /*\r\n    if(fields.length<1){\r\n        return;\r\n    }*/\r\n    this.inputs.push({\r\n      fields,\r\n      controlType: 'default',\r\n      value: null,\r\n      id: 'input' + this.inputs.length,\r\n    });\r\n    this.cdr.markForCheck();\r\n  }\r\n  /**\r\n   * å é¤å­æ®µç¼è¾è¡\r\n   * @param event event\r\n   * @param row row\r\n   */\r\n  public removeRow(event: any, row: number) {\r\n    this.inputs.splice(row, 1);\r\n    this.updateFields();\r\n    this.cdr.markForCheck();\r\n  }\r\n  /**\r\n   * ç¼è¾å­æ®µåçåå\r\n   * @param event event\r\n   * @param row row\r\n   */\r\n  public onFieldChanged(event: any, row: number) {\r\n    const { value: field = null } = event || {};\r\n    const input = this.inputs[row];\r\n    // æ´æ°å½åè¡å­æ®µ\r\n    input.fields = this.computeFields();\r\n    input.field = field;\r\n    const fieldInfo = this.fields.find(item => item.id === field);\r\n    const dataType = fieldInfo && fieldInfo.dataType || null;\r\n    input.dataType = dataType;\r\n    if (field) {\r\n      const editorInfo = this.eidtors.find(item => item.field === field);\r\n      // æ´æ°å½åè¡ç¼è¾å¨\r\n      if (editorInfo && editorInfo.editor) {\r\n        input.controlType = editorInfo.editor.controlType || 'default';\r\n        input.options = editorInfo.editor.options || {};\r\n      }\r\n    }\r\n    this.updateFields();\r\n  }\r\n  /**\r\n   * å¸®å©éæ©æ°æ®åçåè°\r\n   * @param event event\r\n   */\r\n  public onSelectRows(event: any) {\r\n    const { field = null, rows = [] } = event || {};\r\n    if (field) {\r\n      const item = this.inputs.find(input => input.field === field);\r\n      item.value = rows;\r\n    }\r\n  }\r\n  /**\r\n   * è®¡ç®å½åè¡å¯ä»¥éæ©çå­æ®µ\r\n   * @param appendField è¦æ·»å çå­æ®µ\r\n   */\r\n  private computeFields(appendField?: any) {\r\n    const others = this.fields.filter(field => {\r\n      if (appendField && field.id === appendField) {\r\n        return true;\r\n      }\r\n      return !this.inputs.find(input => input.field === field.id);\r\n    });\r\n    return others;\r\n  }\r\n  /**\r\n   * æ´æ°ææè¡å¯ä»¥éæ©çå­æ®µ\r\n   */\r\n  private updateFields() {\r\n    this.inputs.forEach(input => {\r\n      input.fields = this.computeFields(input.field);\r\n    });\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-result-confirm',\n  templateUrl: './result-confirm.component.html',\n  styleUrls: ['./result-confirm.component.css']\n})\nexport class ResultConfirmComponent implements OnInit {\n  @Input() dialogRef: any = null;\n  @Input() rows: number = 0;\n  @Output() confirmed = new EventEmitter();\n  @Output() canceled = new EventEmitter();\n  @Input()\n  public set showNotify(value: boolean) {\n    let _showNotify: string = 'never';\n    if (value === true) {\n      _showNotify = 'always';\n    } else {\n      _showNotify = 'never';\n    }\n    localStorage.setItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY', _showNotify);\n  }\n  public get showNotify() {\n    const _showNotify = localStorage.getItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY');\n    if (_showNotify === 'always' || !_showNotify) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n  public cancel(event: any) {\n    this.canceled.emit({ instance: this, event });\n  }\n  public confirm(event: any) {\n    this.confirmed.emit({ instance: this, event });\n  }\n  public setRemindOpporunity(event: any) {\n    const checked = event && event.target && event.target.checked || false;\n    if (checked === true) {\n      this.showNotify = false;\n    } else {\n      this.showNotify = true;\n    }\n  }\n}\n","import { Injectable, ComponentFactoryResolver, Injector, EventEmitter, ComponentRef } from '@angular/core';\r\nimport { BatchEditDialogComponent } from './batch-edit-dialog.component';\r\nimport { BsModalService, BsModalRef } from '@farris/ui-modal';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { isObservable, Observable, of, Subject } from 'rxjs';\r\nimport { ResultConfirmComponent } from './result-confirm/result-confirm.component';\r\n// tslint:disable: max-line-length\r\n@Injectable()\r\nexport class BatchEditDialogService {\r\n  public dialogRef: BsModalRef = null;\r\n  private componentRef: ComponentRef<BatchEditDialogComponent> = null;\r\n  // ç¨æ·å¯¹è¾å¥è¿è¡ç¡®è®¤ï¼æ­¤æ¶å¯ä»¥æ´æ°bindingDataæ°æ®\r\n  public onUserConfirmed: EventEmitter<any> = new EventEmitter<any>();\r\n  constructor(\r\n    public injector: Injector,\r\n    private modalService: BsModalService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private localeService: LocaleService,\r\n  ) { }\r\n  /**\r\n   * @description æ§ä»¶åæ°æ ¼å¼\r\n   * # æ§ä»¶åæ°æ ¼å¼\r\n   * ## textbox\r\n   * ```json\r\n   * {\"title\":\"å§å\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.TEXTBOX}}\r\n   * ```\r\n   * ## dropdown\r\n   * ```json\r\n   * {\"title\":\"å§å\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.COMBOLIST,\"idField\":\"id\",\"textField\":\"text\",\"items\":[],\"multiSelect\":false}}\r\n   * ```\r\n   * ## lookup\r\n   * ```json\r\n   * {\"title\":\"å§å\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.LOOKUP,\"uri\":\"\",\"idField\":\"id\",\"textField\":\"text\",\"valueField\":\"id\",\"displayType\":\"LIST\",\"mapFields\":{},\"singleSelect\":true,\"dialogTitle\":\"\",\"hiddenInputName\":\"\",\"items\":[],\"multiSelect\":false}}\r\n   * ```\r\n   * ## æ°å¼è¾å¥æ¡\r\n   * ```json\r\n   * {\"title\":\"æ°å¼\",\"field\":\"name\",\"editor\":{\"controlType\":EditorTypes.NUMBER,\"precision\":2,\"step\":1,\"min\":1,\"max\":10}}\r\n   * ```\r\n   */\r\n  public batchEdit(columns: any, options?: { [propName: string]: any }): BsModalRef {\r\n    const titleText = this.localeService.getValue('batchEditDialog.title');\r\n    const okText = this.localeService.getValue('batchEditDialog.okText');\r\n    const cancelText = this.localeService.getValue('batchEditDialog.cancelText');\r\n    const { width = 792, height = 580, title = titleText, rows = 1 } = options || {};\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(BatchEditDialogComponent);\r\n    this.componentRef = componentFactory.create(this.injector);\r\n    this.componentRef.instance.fields = this.getFields(columns);\r\n    this.componentRef.instance.eidtors = this.getEditors(columns);\r\n    this.componentRef.instance.title = title;\r\n    this.componentRef.instance.rows = rows;\r\n\r\n    this.dialogRef = this.modalService.show(this.componentRef, {\r\n      title,\r\n      width,\r\n      height,\r\n      buttons: [\r\n        {\r\n          text: cancelText, cls: 'btn btn-secondary', handle: () => {\r\n            this.dialogRef.close();\r\n          }\r\n        },\r\n        {\r\n          text: okText, cls: 'btn btn-primary',\r\n          handle: () => {\r\n            this.userConfired();\r\n          }\r\n        }\r\n      ],\r\n      showHeader: false,\r\n      showButtons: false,\r\n    });\r\n    this.componentRef.instance.confirmed.subscribe((e: { instance: any, event: any }) => {\r\n      this.canConfirm(options).subscribe((result: boolean) => {\r\n        if (result === true) {\r\n          this.userConfired(options);\r\n          this.dialogRef.close();\r\n        }\r\n      });\r\n    });\r\n    this.componentRef.instance.canceled.subscribe((e: { instance: any, event: any }) => {\r\n      this.dialogRef.close();\r\n    });\r\n\r\n    this.componentRef.instance.dialogRef = this.dialogRef;\r\n    this.dialogRef.dialog.instance.draggbar.handle = this.componentRef.instance.header.nativeElement;\r\n    return this.dialogRef;\r\n  }\r\n  /**\r\n   * ç¨æ·ç¡®è®¤ä¿®æ¹\r\n   */\r\n  public userConfired(options?: { [propName: string]: any }) {\r\n    const inputs = this.componentRef && this.componentRef.instance && this.componentRef.instance.inputs || [];\r\n    // éå¯¹checkboxåç¹æ®å¤ç\r\n    if (inputs && inputs.length > 0) {\r\n      inputs.forEach(input => {\r\n        const { controlType, dataType } = input;\r\n        if (controlType === 'checkbox' && dataType === 'boolean') {\r\n          input.value = input.value ? true : false;\r\n        }\r\n      });\r\n    }\r\n    if (options && options.onConfirm && typeof options.onConfirm === 'function') {\r\n      options.onConfirm(inputs);\r\n    }\r\n    this.onUserConfirmed.next(inputs);\r\n  }\r\n  /**\r\n   * ä»domä¸­è·ågridå\r\n   * @param columns dom\r\n   */\r\n  private getFields(columns: any): Array<any> {\r\n    const fields = [];\r\n    if (!columns || columns.length < 1) {\r\n      return fields;\r\n    }\r\n    columns.forEach((collect: Array<any>) => {\r\n      // collectä¸ºæ°ç»\r\n      if (collect && collect.length > 0) {\r\n        collect.forEach((column: any) => {\r\n          const { field = null, title = '', dataType = null, enableBatchEdit = false } = column || {};\r\n          if (field && enableBatchEdit) {\r\n            fields.push({ id: field, label: title, dataType });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return fields;\r\n  }\r\n  /**\r\n   * ä»columnsä¸­è·åç¼è¾å¨\r\n   * @param columns dom\r\n   */\r\n  private getEditors(columns: any): Array<any> {\r\n    const editors = [];\r\n    if (!columns || columns.length < 1) {\r\n      return editors;\r\n    }\r\n    columns.forEach((collect: Array<any>) => {\r\n      // collectä¸ºæ°ç»\r\n      if (collect && collect.length > 0) {\r\n        collect.forEach((column: any) => {\r\n          const { field = null, editor = {}, enableBatchEdit = false } = column || {};\r\n          if (editor && field && enableBatchEdit) {\r\n            editor.controlType = editor.type;\r\n            editors.push({ field, editor });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return editors;\r\n  }\r\n  private canConfirm(options?: { [propName: string]: any }) {\r\n    const subject = new Subject<any>();\r\n    let showNotify = options && options.showNotify;\r\n    const { rows = 1 } = options || {};\r\n    const valueChanged = this.isValueChanged();\r\n    if (!valueChanged) {\r\n      return of(true);\r\n    }\r\n    if (showNotify === undefined) {\r\n      showNotify = true;\r\n    }\r\n    if (!showNotify) {\r\n      return of(true);\r\n    }\r\n    let dialogRef = null;\r\n    try {\r\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ResultConfirmComponent);\r\n      const componentRef = componentFactory.create(this.injector);\r\n      const shouldShowNotify = componentRef.instance.showNotify || false;\r\n\r\n      componentRef.instance.rows = rows;\r\n      if (shouldShowNotify) {\r\n        dialogRef = this.modalService.show(componentRef, {\r\n          title: '',\r\n          width: 500,\r\n          height: 240,\r\n          showHeader: false,\r\n          showButtons: false,\r\n          buttons: []\r\n        });\r\n        // ç¡®è®¤\r\n        componentRef.instance.confirmed.subscribe((e: { instance: any, event: any }) => {\r\n          if (dialogRef) {\r\n            dialogRef.close();\r\n          }\r\n          subject.next(true);\r\n        });\r\n        // åæ¶\r\n        componentRef.instance.canceled.subscribe((e: { instance: any, event: any }) => {\r\n          if (dialogRef) {\r\n            dialogRef.close();\r\n          }\r\n          subject.next(false);\r\n        });\r\n      } else {\r\n        return of(true);\r\n      }\r\n    } catch (e) {\r\n      return of(true);\r\n    }\r\n    return subject;\r\n  }\r\n  public isValueChanged() {\r\n    const inputs = this.componentRef && this.componentRef.instance && this.componentRef.instance.inputs || [];\r\n    if (!inputs || inputs.length < 1) {\r\n      return false;\r\n    }\r\n    const unChanged = inputs.every((item) => !item.field);\r\n    return !unChanged;\r\n  }\r\n}\r\n","import { Directive, Input, Output, EventEmitter, AfterViewInit, Injector } from '@angular/core';\r\nimport { LookupComponent } from '@farris/ui-lookup';\r\nimport { of } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[lookup-extra]'\r\n})\r\nexport class LookupDirective implements AfterViewInit {\r\n    @Input('lookup-extra') field: string;\r\n    @Input('ins') lookup: LookupComponent;\r\n    @Output() onSelectRows: EventEmitter<any> = new EventEmitter<any>();\r\n    constructor() {\r\n    }\r\n    ngAfterViewInit(): void {\r\n        if (this.lookup) {\r\n            this.lookup.dictPicked = (rows: any) => {\r\n                if (this.onSelectRows) {\r\n                    this.onSelectRows.emit({ field: this.field, rows: [].concat(rows) })\r\n                }\r\n                const result = {\r\n                    closeDialog: true\r\n                };\r\n                return of(result);\r\n            };\r\n        }\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { TimePickerModule } from '@farris/ui-time-picker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { FarrisCommonModule} from '@farris/ui-common'\r\n// import { BatchEditDialogService } from './batch-edit-dialog.service';\r\nimport { BatchEditDialogComponent } from './batch-edit-dialog.component';\r\nimport { LookupDirective } from './lookup.directive';\r\nimport { ResultConfirmComponent } from './result-confirm/result-confirm.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BatchEditDialogComponent,\r\n    LookupDirective,\r\n    ResultConfirmComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FarrisFormsModule,\r\n    LookupModule,\r\n    ComboListModule,\r\n    InputGroupModule,\r\n    ModalModule,\r\n    FarrisDatePickerModule,\r\n    NumberSpinnerModule,\r\n    TimePickerModule,\r\n    SwitchModule,\r\n    FarrisTooltipModule,\r\n    FarrisCommonModule,\r\n    LocaleModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    BatchEditDialogComponent,\r\n    LookupDirective,\r\n    ResultConfirmComponent\r\n  ],\r\n  entryComponents: [\r\n    BatchEditDialogComponent,\r\n    ResultConfirmComponent\r\n  ]\r\n})\r\nexport class BatchEditDialogModule {\r\n  // static forRoot(): ModuleWithProviders {\r\n  //     return {\r\n  //         ngModule: BatchEditDialogModule,\r\n  //         providers: [\r\n  //             BatchEditDialogService\r\n  //         ]\r\n  //     };\r\n  // }\r\n}\r\n"],"names":["EventEmitter","Component","Injector","ChangeDetectorRef","LocaleService","ViewChild","Input","Output","Subject","of","Injectable","BsModalService","ComponentFactoryResolver","Directive","NgModule","CommonModule","FormsModule","FarrisFormsModule","LookupModule","ComboListModule","InputGroupModule","ModalModule","FarrisDatePickerModule","NumberSpinnerModule","TimePickerModule","SwitchModule","FarrisTooltipModule","FarrisCommonModule","LocaleModule"],"mappings":"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"}
