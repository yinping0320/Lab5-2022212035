/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FarrisFormsModule } from '@farris/ui-forms';
import { LookupModule } from '@farris/ui-lookup';
import { ComboListModule } from '@farris/ui-combo-list';
import { InputGroupModule } from '@farris/ui-input-group';
import { ModalModule } from '@farris/ui-modal';
import { FarrisDatePickerModule } from '@farris/ui-datepicker';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { TimePickerModule } from '@farris/ui-time-picker';
import { LocaleModule } from '@farris/ui-locale';
import { SwitchModule } from '@farris/ui-switch';
import { FarrisTooltipModule } from '@farris/ui-tooltip';
import { FarrisCommonModule } from '@farris/ui-common';
// import { BatchEditDialogService } from './batch-edit-dialog.service';
import { BatchEditDialogComponent } from './batch-edit-dialog.component';
import { LookupDirective } from './lookup.directive';
import { ResultConfirmComponent } from './result-confirm/result-confirm.component';
export class BatchEditDialogModule {
}
BatchEditDialogModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    BatchEditDialogComponent,
                    LookupDirective,
                    ResultConfirmComponent
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    FarrisFormsModule,
                    LookupModule,
                    ComboListModule,
                    InputGroupModule,
                    ModalModule,
                    FarrisDatePickerModule,
                    NumberSpinnerModule,
                    TimePickerModule,
                    SwitchModule,
                    FarrisTooltipModule,
                    FarrisCommonModule,
                    LocaleModule.forRoot(),
                ],
                exports: [
                    BatchEditDialogComponent,
                    LookupDirective,
                    ResultConfirmComponent
                ],
                entryComponents: [
                    BatchEditDialogComponent,
                    ResultConfirmComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmF0Y2gtZWRpdC1kaWFsb2cubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1iYXRjaC1lZGl0LWRpYWxvZy8iLCJzb3VyY2VzIjpbImxpYi9iYXRjaC1lZGl0LWRpYWxvZy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDL0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQTs7QUFFckQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBa0NuRixNQUFNLE9BQU8scUJBQXFCOzs7WUFoQ2pDLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osd0JBQXdCO29CQUN4QixlQUFlO29CQUNmLHNCQUFzQjtpQkFDdkI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osV0FBVztvQkFDWCxpQkFBaUI7b0JBQ2pCLFlBQVk7b0JBQ1osZUFBZTtvQkFDZixnQkFBZ0I7b0JBQ2hCLFdBQVc7b0JBQ1gsc0JBQXNCO29CQUN0QixtQkFBbUI7b0JBQ25CLGdCQUFnQjtvQkFDaEIsWUFBWTtvQkFDWixtQkFBbUI7b0JBQ25CLGtCQUFrQjtvQkFDbEIsWUFBWSxDQUFDLE9BQU8sRUFBRTtpQkFDdkI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLHdCQUF3QjtvQkFDeEIsZUFBZTtvQkFDZixzQkFBc0I7aUJBQ3ZCO2dCQUNELGVBQWUsRUFBRTtvQkFDZix3QkFBd0I7b0JBQ3hCLHNCQUFzQjtpQkFDdkI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBGYXJyaXNGb3Jtc01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZm9ybXMnO1xyXG5pbXBvcnQgeyBMb29rdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvb2t1cCc7XHJcbmltcG9ydCB7IENvbWJvTGlzdE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tYm8tbGlzdCc7XHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgTW9kYWxNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsJztcclxuaW1wb3J0IHsgRmFycmlzRGF0ZVBpY2tlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0ZXBpY2tlcic7XHJcbmltcG9ydCB7IE51bWJlclNwaW5uZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW51bWJlci1zcGlubmVyJztcclxuaW1wb3J0IHsgVGltZVBpY2tlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdGltZS1waWNrZXInO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IFN3aXRjaE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktc3dpdGNoJztcclxuaW1wb3J0IHsgRmFycmlzVG9vbHRpcE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdG9vbHRpcCc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZX0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nXHJcbi8vIGltcG9ydCB7IEJhdGNoRWRpdERpYWxvZ1NlcnZpY2UgfSBmcm9tICcuL2JhdGNoLWVkaXQtZGlhbG9nLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBCYXRjaEVkaXREaWFsb2dDb21wb25lbnQgfSBmcm9tICcuL2JhdGNoLWVkaXQtZGlhbG9nLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cERpcmVjdGl2ZSB9IGZyb20gJy4vbG9va3VwLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFJlc3VsdENvbmZpcm1Db21wb25lbnQgfSBmcm9tICcuL3Jlc3VsdC1jb25maXJtL3Jlc3VsdC1jb25maXJtLmNvbXBvbmVudCc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgQmF0Y2hFZGl0RGlhbG9nQ29tcG9uZW50LFxyXG4gICAgTG9va3VwRGlyZWN0aXZlLFxyXG4gICAgUmVzdWx0Q29uZmlybUNvbXBvbmVudFxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBGYXJyaXNGb3Jtc01vZHVsZSxcclxuICAgIExvb2t1cE1vZHVsZSxcclxuICAgIENvbWJvTGlzdE1vZHVsZSxcclxuICAgIElucHV0R3JvdXBNb2R1bGUsXHJcbiAgICBNb2RhbE1vZHVsZSxcclxuICAgIEZhcnJpc0RhdGVQaWNrZXJNb2R1bGUsXHJcbiAgICBOdW1iZXJTcGlubmVyTW9kdWxlLFxyXG4gICAgVGltZVBpY2tlck1vZHVsZSxcclxuICAgIFN3aXRjaE1vZHVsZSxcclxuICAgIEZhcnJpc1Rvb2x0aXBNb2R1bGUsXHJcbiAgICBGYXJyaXNDb21tb25Nb2R1bGUsXHJcbiAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpLFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgQmF0Y2hFZGl0RGlhbG9nQ29tcG9uZW50LFxyXG4gICAgTG9va3VwRGlyZWN0aXZlLFxyXG4gICAgUmVzdWx0Q29uZmlybUNvbXBvbmVudFxyXG4gIF0sXHJcbiAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICBCYXRjaEVkaXREaWFsb2dDb21wb25lbnQsXHJcbiAgICBSZXN1bHRDb25maXJtQ29tcG9uZW50XHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQmF0Y2hFZGl0RGlhbG9nTW9kdWxlIHtcclxuICAvLyBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAvLyAgICAgcmV0dXJuIHtcclxuICAvLyAgICAgICAgIG5nTW9kdWxlOiBCYXRjaEVkaXREaWFsb2dNb2R1bGUsXHJcbiAgLy8gICAgICAgICBwcm92aWRlcnM6IFtcclxuICAvLyAgICAgICAgICAgICBCYXRjaEVkaXREaWFsb2dTZXJ2aWNlXHJcbiAgLy8gICAgICAgICBdXHJcbiAgLy8gICAgIH07XHJcbiAgLy8gfVxyXG59XHJcbiJdfQ==