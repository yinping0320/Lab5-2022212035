/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
export class ResultConfirmComponent {
    constructor() {
        this.dialogRef = null;
        this.rows = 0;
        this.confirmed = new EventEmitter();
        this.canceled = new EventEmitter();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set showNotify(value) {
        /** @type {?} */
        let _showNotify = 'never';
        if (value === true) {
            _showNotify = 'always';
        }
        else {
            _showNotify = 'never';
        }
        localStorage.setItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY', _showNotify);
    }
    /**
     * @return {?}
     */
    get showNotify() {
        /** @type {?} */
        const _showNotify = localStorage.getItem('BATCH_EDIT_DIALOG_SHOW_NOTIFY');
        if (_showNotify === 'always' || !_showNotify) {
            return true;
        }
        else {
            return false;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} event
     * @return {?}
     */
    cancel(event) {
        this.canceled.emit({ instance: this, event });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    confirm(event) {
        this.confirmed.emit({ instance: this, event });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    setRemindOpporunity(event) {
        /** @type {?} */
        const checked = event && event.target && event.target.checked || false;
        if (checked === true) {
            this.showNotify = false;
        }
        else {
            this.showNotify = true;
        }
    }
}
ResultConfirmComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-result-confirm',
                template: "<div class=\"result-confirm modal-message\">\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <div class=\"modal-title\">\n        <span class=\"modal-title-label\">{{'batchEditDialog.confirmTitle' | locale:'\u63D0\u793A'}}</span>\n      </div>\n      <div class=\"actions\">\n        <ul>\n          <li class=\"f-btn-icon f-bare\"><span class=\"f-icon modal_close\" (click)='cancel($event)'></span></li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"f-utils-absolute-all\" style=\"height: 10px; z-index: 1; display: none;\"></div>\n    <div class=\"modal-body\">\n      <div style=\"position: static;\" class=\"ps\">\n        <div class=\"ps-content\">\n          <div class=\"farris-messager\">\n            <section class=\"modal-tips d-flex flex-row messager-type-question\">\n              <div class=\"float-left modal-tips-iconwrap\"><span class=\"f-icon f-icon-warning\"></span></div>\n              <div class=\"modal-tips-content\">\n                <p class=\"toast-msg-title\">{{'batchEditDialog.confirmText' | locale:'\u5C06\u4FEE\u6539{0}\u884C\u6570\u636E\uFF0C\u786E\u5B9A\u4FEE\u6539\u5417\uFF1F' | replaceX:\n                  rows}}</p>\n              </div>\n            </section>\n            <div class=\"modal-footer\">\n              <div class=\"custom-control custom-checkbox custom-control-inline never-show\">\n                <input class=\"custom-control-input\" id=\"never\" type=\"checkbox\" (change)=\"setRemindOpporunity($event)\">\n                <label class=\"custom-control-label\" for=\"never\">{{'batchEditDialog.neverShow' | locale:'\u4E0D\u518D\u63D0\u793A'}}</label>\n              </div>\n              <button class=\"btn btn-secondary  btn-lg\" type=\"button\"\n                (click)='cancel($event)'>{{'batchEditDialog.cancelText' | locale:'\u53D6\u6D88'}}</button>\n              <button class=\"btn btn-primary btn-lg\" type=\"button\" (click)=\"confirm($event)\">{{'batchEditDialog.okText'\n                | locale:'\u786E\u5B9A'}}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
                styles: [".result-confirm{height:100%}.result-confirm .modal-header{border-bottom:none}.modal-footer .never-show{text-align:left;width:90%;color:#2d2f33;font-size:14px}"]
            }] }
];
/** @nocollapse */
ResultConfirmComponent.ctorParameters = () => [];
ResultConfirmComponent.propDecorators = {
    dialogRef: [{ type: Input }],
    rows: [{ type: Input }],
    confirmed: [{ type: Output }],
    canceled: [{ type: Output }],
    showNotify: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ResultConfirmComponent.prototype.dialogRef;
    /** @type {?} */
    ResultConfirmComponent.prototype.rows;
    /** @type {?} */
    ResultConfirmComponent.prototype.confirmed;
    /** @type {?} */
    ResultConfirmComponent.prototype.canceled;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0LWNvbmZpcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1iYXRjaC1lZGl0LWRpYWxvZy8iLCJzb3VyY2VzIjpbImxpYi9yZXN1bHQtY29uZmlybS9yZXN1bHQtY29uZmlybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPL0UsTUFBTSxPQUFPLHNCQUFzQjtJQXVCakM7UUF0QlMsY0FBUyxHQUFRLElBQUksQ0FBQztRQUN0QixTQUFJLEdBQVcsQ0FBQyxDQUFDO1FBQ2hCLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9CLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBbUJ4QixDQUFDOzs7OztJQWxCakIsSUFDVyxVQUFVLENBQUMsS0FBYzs7WUFDOUIsV0FBVyxHQUFXLE9BQU87UUFDakMsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQ2xCLFdBQVcsR0FBRyxRQUFRLENBQUM7U0FDeEI7YUFBTTtZQUNMLFdBQVcsR0FBRyxPQUFPLENBQUM7U0FDdkI7UUFDRCxZQUFZLENBQUMsT0FBTyxDQUFDLCtCQUErQixFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Ozs7SUFDRCxJQUFXLFVBQVU7O2NBQ2IsV0FBVyxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsK0JBQStCLENBQUM7UUFDekUsSUFBSSxXQUFXLEtBQUssUUFBUSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQzVDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7YUFBTTtZQUNMLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7SUFDSCxDQUFDOzs7O0lBR0QsUUFBUTtJQUNSLENBQUM7Ozs7O0lBQ00sTUFBTSxDQUFDLEtBQVU7UUFDdEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7Ozs7SUFDTSxPQUFPLENBQUMsS0FBVTtRQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7OztJQUNNLG1CQUFtQixDQUFDLEtBQVU7O2NBQzdCLE9BQU8sR0FBRyxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxLQUFLO1FBQ3RFLElBQUksT0FBTyxLQUFLLElBQUksRUFBRTtZQUNwQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztTQUN6QjthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7U0FDeEI7SUFDSCxDQUFDOzs7WUE3Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLGdtRUFBOEM7O2FBRS9DOzs7Ozt3QkFFRSxLQUFLO21CQUNMLEtBQUs7d0JBQ0wsTUFBTTt1QkFDTixNQUFNO3lCQUNOLEtBQUs7Ozs7SUFKTiwyQ0FBK0I7O0lBQy9CLHNDQUEwQjs7SUFDMUIsMkNBQXlDOztJQUN6QywwQ0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1yZXN1bHQtY29uZmlybScsXG4gIHRlbXBsYXRlVXJsOiAnLi9yZXN1bHQtY29uZmlybS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Jlc3VsdC1jb25maXJtLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBSZXN1bHRDb25maXJtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgZGlhbG9nUmVmOiBhbnkgPSBudWxsO1xuICBASW5wdXQoKSByb3dzOiBudW1iZXIgPSAwO1xuICBAT3V0cHV0KCkgY29uZmlybWVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgY2FuY2VsZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBzZXQgc2hvd05vdGlmeSh2YWx1ZTogYm9vbGVhbikge1xuICAgIGxldCBfc2hvd05vdGlmeTogc3RyaW5nID0gJ25ldmVyJztcbiAgICBpZiAodmFsdWUgPT09IHRydWUpIHtcbiAgICAgIF9zaG93Tm90aWZ5ID0gJ2Fsd2F5cyc7XG4gICAgfSBlbHNlIHtcbiAgICAgIF9zaG93Tm90aWZ5ID0gJ25ldmVyJztcbiAgICB9XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ0JBVENIX0VESVRfRElBTE9HX1NIT1dfTk9USUZZJywgX3Nob3dOb3RpZnkpO1xuICB9XG4gIHB1YmxpYyBnZXQgc2hvd05vdGlmeSgpIHtcbiAgICBjb25zdCBfc2hvd05vdGlmeSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdCQVRDSF9FRElUX0RJQUxPR19TSE9XX05PVElGWScpO1xuICAgIGlmIChfc2hvd05vdGlmeSA9PT0gJ2Fsd2F5cycgfHwgIV9zaG93Tm90aWZ5KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG4gIHB1YmxpYyBjYW5jZWwoZXZlbnQ6IGFueSkge1xuICAgIHRoaXMuY2FuY2VsZWQuZW1pdCh7IGluc3RhbmNlOiB0aGlzLCBldmVudCB9KTtcbiAgfVxuICBwdWJsaWMgY29uZmlybShldmVudDogYW55KSB7XG4gICAgdGhpcy5jb25maXJtZWQuZW1pdCh7IGluc3RhbmNlOiB0aGlzLCBldmVudCB9KTtcbiAgfVxuICBwdWJsaWMgc2V0UmVtaW5kT3Bwb3J1bml0eShldmVudDogYW55KSB7XG4gICAgY29uc3QgY2hlY2tlZCA9IGV2ZW50ICYmIGV2ZW50LnRhcmdldCAmJiBldmVudC50YXJnZXQuY2hlY2tlZCB8fCBmYWxzZTtcbiAgICBpZiAoY2hlY2tlZCA9PT0gdHJ1ZSkge1xuICAgICAgdGhpcy5zaG93Tm90aWZ5ID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2hvd05vdGlmeSA9IHRydWU7XG4gICAgfVxuICB9XG59XG4iXX0=