!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core"),require("@angular/animations")):"function"==typeof define&&define.amd?define("@farris/ui-panel",["exports","@angular/common","@angular/core","@angular/animations"],t):t((e.farris=e.farris||{},e.farris["ui-panel"]={}),e.ng.common,e.ng.core,e.ng.animations)}(this,function(e,t,n,a){"use strict";var i=function(){function e(e){this.render=e,this.className=[],this.foldable=!0,this.accordion=!1,this.modelChange=new n.EventEmitter,this.modelValue=[],this.subscriber=[]}return Object.defineProperty(e.prototype,"model",{get:function(){return this.modelValue},set:function(e){this.modelValue=e,this.updateSubscriber()},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.ngAfterViewInit=function(){var t=this;this.className.length&&this.className.forEach(function(e){t.render.addClass(t.farrisPanel.nativeElement,e)}),this.updateSubscriber()},e.prototype.updateModel=function(t){var e=this.modelValue.findIndex(function(e){return e===t});if(e<0)return this.accordion&&(this.model=[]),this.modelValue.push(t),this.updateSubscriber(),this.modelChange.emit(this.modelValue);this.accordion?this.model=[]:this.modelValue.splice(e,1),this.updateSubscriber(),this.modelChange.emit(this.modelValue)},e.prototype.updateSubscriber=function(){this.subscriber.forEach(function(e){return e()})},e.decorators=[{type:n.Component,args:[{selector:"farris-panel",template:'<div #farrisPanel class="farris-panel" [class.accordion]="accordion" [style.width]="width+\'px\'" [style.height]="height+\'px\'">\r\n    <ng-content>\r\n    </ng-content>\r\n</div>',encapsulation:n.ViewEncapsulation.None,styles:[".farris-panel{border:1px solid rgba(0,0,0,.125)}"]}]}],e.ctorParameters=function(){return[{type:n.Renderer2}]},e.propDecorators={farrisPanel:[{type:n.ViewChild,args:["farrisPanel"]}],width:[{type:n.Input}],height:[{type:n.Input}],className:[{type:n.Input}],foldable:[{type:n.Input}],defaultExpand:[{type:n.Input}],accordion:[{type:n.Input}],model:[{type:n.Input}],modelChange:[{type:n.Output}]},e}(),r=a.trigger("dropAnimation",[a.state("active",a.style({height:"*"})),a.state("inactive",a.style({height:"0",overflow:"hidden"})),a.transition("active<=>inactive",a.animate(".35s ease"))]),s=function(){function e(e,t,n,a){this.panel=e,this.changeRef=t,this.render=n,this.el=a,this.isPanelItem=!0,this.isCard=!0,this.active=!1}return e.prototype.ngOnInit=function(){},e.prototype.ngAfterViewInit=function(){var e=this;this.panel.defaultExpand&&(null!==this.value&&this.value!==undefined||(this.value=this.generateRandomId()),this.panel.updateModel(this.value));this.panel.subscriber.push(function(){return e.setActive()})},e.prototype.setActive=function(){var t=this;this.active=this.panel.model.some(function(e){return t.value===e}),this.active?this.render.addClass(this.el.nativeElement,"f-state-selected"):this.render.removeClass(this.el.nativeElement,"f-state-selected"),this.changeRef.detectChanges(),this.changeRef.markForCheck()},e.prototype.generateRandomId=function(){return Math.random().toString(16).substring(2,10)},e.prototype.selectPanelItem=function(e){this.panel.foldable&&(null!==this.value&&this.value!==undefined||(this.value=Math.random().toString(16).substring(2,10)),this.panel.updateModel(this.value))},e.decorators=[{type:n.Component,args:[{selector:"farris-panel-item",template:'\x3c!-- 标题  是否有模板 --\x3e\r\n\r\n<div class="card-header" (click)="selectPanelItem($event)">\r\n    \x3c!-- 标题  是否有模板 --\x3e\r\n    <div class="panel-item-title">\r\n        <span *ngIf="!headRef;else head">\r\n            {{tabTitle}}\r\n        </span>\r\n        <ng-template #head [ngTemplateOutlet]="headRef"></ng-template>\r\n        <span class="f-icon f-accordion-collapse" *ngIf="!active"></span>\r\n        <span class="f-icon f-accordion-expand" *ngIf="active"></span>\r\n    </div>\r\n    <div class="panel-item-tool">\r\n        <ng-template [ngTemplateOutlet]="toolTempl"></ng-template>\r\n    </div>\r\n    <div class="panel-item-clear">\r\n    </div>\r\n</div>\r\n\x3c!-- panel内容模板 --\x3e\r\n<div [@dropAnimation]="active?\'active\':\'inactive\'">\r\n    <div class="card-body">\r\n        <ng-template [ngTemplateOutlet]="contentRef">\r\n\r\n        </ng-template>\r\n    </div>\r\n</div>',animations:[r],encapsulation:n.ViewEncapsulation.None,styles:[".card-header{cursor:pointer}.panel-item-title{float:left}.panel-item-tool{float:right}.panel-item-clear{clear:both}.f-state-disable{pointer-events:none}.card{border-left:0;border-right:0}"]}]}],e.ctorParameters=function(){return[{type:i,decorators:[{type:n.Optional}]},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.ElementRef}]},e.propDecorators={width:[{type:n.Input}],height:[{type:n.Input}],value:[{type:n.Input}],tabTitle:[{type:n.Input,args:["title"]}],disable:[{type:n.Input},{type:n.HostBinding,args:["class.f-state-disable"]}],headRef:[{type:n.ContentChild,args:["headTempl"]}],toolTempl:[{type:n.ContentChild,args:["toolTempl"]}],contentRef:[{type:n.ContentChild,args:["contentTempl"]}],isPanelItem:[{type:n.HostBinding,args:["class.farris-panel-item"]}],isCard:[{type:n.HostBinding,args:["class.card"]}]},e}(),o=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[t.CommonModule],declarations:[s,i],exports:[s,i]}]}],e}();e.FarrisPanelModule=o,e.FarrisPanelComponent=i,e.FarrisPanelItemComponent=s,e.dropAnimation=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-panel.umd.min.js.map