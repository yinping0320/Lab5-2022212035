{"version":3,"file":"farris-ui-panel.js.map","sources":["ng://@farris/ui-panel/lib/panel/panel-item-list.component.ts","ng://@farris/ui-panel/lib/util/drop.animation.ts","ng://@farris/ui-panel/lib/panel-item/panel-item.component.ts","ng://@farris/ui-panel/lib/panel.module.ts"],"sourcesContent":["import {\r\n    Component, Input, AfterViewInit,\r\n    ViewEncapsulation, Output, EventEmitter, ElementRef, Renderer2, OnInit, ViewChild\r\n} from '@angular/core';\r\n@Component({\r\n    selector: 'farris-panel',\r\n    templateUrl: './panel-item-list.component.html',\r\n    styleUrls: ['./panel-item-list.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class FarrisPanelComponent implements AfterViewInit, OnInit {\r\n\r\n    @ViewChild('farrisPanel') farrisPanel: ElementRef;\r\n\r\n    /* è®¾ç½®å®½é« */\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n\r\n\r\n\r\n    /* èªå®ä¹className */\r\n    @Input() className = [];\r\n\r\n    /* é¢æ¿æ¯å¦å¯æ¶æ  é»è®¤æ¶æ*/\r\n    @Input() foldable = true;\r\n\r\n    /* é¢æ¿æ¯å¦å¨é¨å±å¼  é»è®¤ä¸æ¯å¨é¨å±å¼*/\r\n    @Input() defaultExpand: false;\r\n\r\n    // è®¾ç½®æé£ç´æ¨¡å¼  è³å¤åªæä¸ä¸ªpanelå¯ä»¥è¢«éä¸­\r\n    @Input() accordion = false;\r\n\r\n    /* panelæ°æ®å­å¨ */\r\n    @Input() get model() {\r\n        return this.modelValue;\r\n    }\r\n\r\n    set model(modelValue) {\r\n        // è·åç¨æ·è¾å¥çå¼\r\n        this.modelValue = modelValue;\r\n        this.updateSubscriber();\r\n    }\r\n\r\n\r\n    @Output() modelChange: EventEmitter<Array<string | number>> = new EventEmitter<Array<string | number>>();\r\n\r\n    // @HostBinding('class.farris-panel') isPanel =\r\n\r\n    // ååç»å®  å½modelæ°ç»æ¹åæ¶ï¼ç¸åºçactiveç¶æçpanelä¹è¦æ¹å ä»èæ¹åè§å¾\r\n    // ååç»å® ç¨äºå­åactiveç¶æçpanel\r\n    modelValue: Array<string | number> = [];\r\n    subscriber: Array<() => void> = [];\r\n\r\n    constructor(\r\n        private render: Renderer2) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // æ·»å classå\r\n        if (this.className.length) {\r\n            this.className.forEach(ele => {\r\n                this.render.addClass(this.farrisPanel.nativeElement, ele);\r\n            });\r\n        }\r\n        this.updateSubscriber();\r\n    }\r\n\r\n    /**\r\n     * @param value panelå­å¨æ¿æ´»å¼\r\n     */\r\n    updateModel(value: string) {\r\n        const index = this.modelValue.findIndex(val => val === value);\r\n        // å¦ææ²¡æå¹éå°ç¹å»çpanelå¼  å¯è½modeléé¢ä¸å­å¨ å¯è½modelä¸ºç©º\r\n        if (index < 0) {\r\n            // è¥æ¯æé£ç´æ¨¡å¼  åæææpanelå¤äºæªæ¿æ´»ç¶æ\r\n            if (this.accordion) {\r\n                this.model = [];\r\n            }\r\n            // å¦æä¸æ¯æé£ç´æ¨¡å¼  ç´æ¥æ¿æ´»å³å¯\r\n            this.modelValue.push(value);\r\n            this.updateSubscriber();\r\n            return this.modelChange.emit(this.modelValue);\r\n        }\r\n        // å¦æindexä¸ä¸º-1\r\n        // æé£ç´æ¨¡å¼  å³é­æææ¿æ´»ç¶æ\r\n        if (this.accordion) {\r\n            this.model = [];\r\n        } else {\r\n            // éæé£ç´æ¨¡å¼ ç´æ¥å³é­å½åpanelå³å¯\r\n            this.modelValue.splice(index, 1);\r\n        }\r\n        this.updateSubscriber();\r\n        this.modelChange.emit(this.modelValue);\r\n    }\r\n\r\n    /* å½æ°åå */\r\n    private updateSubscriber(): void {\r\n        this.subscriber.forEach(handle => handle());\r\n    }\r\n}\r\n","import { AnimationTriggerMetadata, trigger, state, style, animate, transition } from '@angular/animations';\r\nexport const dropAnimation: AnimationTriggerMetadata = trigger(\r\n    'dropAnimation', [\r\n        state('active', style({\r\n            'height': '*',\r\n        })),\r\n        state('inactive', style({\r\n            'height': '0',\r\n            'overflow': 'hidden'\r\n        })),\r\n        transition('active<=>inactive', animate(`.35s ease`)),\r\n    ]);\r\n","import {\r\n    Component, Input, ContentChild, TemplateRef, Optional, OnInit,\r\n    ViewEncapsulation, AfterViewInit, ChangeDetectorRef, HostBinding, Renderer2, ElementRef\r\n} from '@angular/core';\r\nimport { dropAnimation } from '../util/drop.animation';\r\nimport { FarrisPanelComponent } from '../panel/panel-item-list.component';\r\n@Component({\r\n    selector: 'farris-panel-item',\r\n    templateUrl: './panel-item.component.html',\r\n    styleUrls: ['./panel-item.component.css'],\r\n    animations: [dropAnimation],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FarrisPanelItemComponent implements OnInit, AfterViewInit {\r\n\r\n    // è®¾ç½®å®½ é«å±æ§\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n\r\n    /* panelItem */\r\n    @Input() value: any;\r\n\r\n    // é»è®¤tab æ é¢ æèæ¯éä¸­æ é¢\r\n    // tslint:disable-next-line:no-input-rename\r\n    @Input('title') tabTitle: string;\r\n\r\n    /* ç¦ç¨ */\r\n    @Input()\r\n    @HostBinding('class.f-state-disable')\r\n    disable: boolean;\r\n\r\n    /* å¤´é¨æ¨¡æ¿ */\r\n    @ContentChild('headTempl') headRef: TemplateRef<any>;\r\n\r\n    /* å·¥å·æé®æ¨¡æ¿ */\r\n    @ContentChild('toolTempl') toolTempl: TemplateRef<any>;\r\n\r\n    /* åå®¹æ¨¡æ¿ */\r\n    @ContentChild('contentTempl') contentRef: TemplateRef<any>;\r\n\r\n    @HostBinding('class.farris-panel-item') isPanelItem = true;\r\n    @HostBinding('class.card') isCard = true;\r\n\r\n    // é»è®¤éæ¿æ´»ç¶æ\r\n    active = false;\r\n    constructor(\r\n        @Optional() public panel: FarrisPanelComponent,\r\n        private changeRef: ChangeDetectorRef,\r\n        private render: Renderer2,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n    ngOnInit() {\r\n\r\n    }\r\n    ngAfterViewInit() {\r\n        // å¨é¨å±å¼\r\n        if (this.panel.defaultExpand) {\r\n            if (this.value === null || this.value === undefined) {\r\n                this.value = this.generateRandomId();\r\n            }\r\n            this.panel.updateModel(this.value);\r\n        }\r\n        // æ¶æåæ¢\r\n        const updateHandle: () => void = () => this.setActive();\r\n        this.panel.subscriber.push(updateHandle);\r\n    }\r\n\r\n    /* è®¾ç½®panelçæ¿æ´»ç¶æ */\r\n    setActive() {\r\n        this.active = this.panel.model.some(val => this.value === val);\r\n        // æ·»å å é¤ç±»å\r\n        this.active ? this.render.addClass(this.el.nativeElement, 'f-state-selected') :\r\n            this.render.removeClass(this.el.nativeElement, 'f-state-selected');\r\n        this.changeRef.detectChanges();\r\n        this.changeRef.markForCheck();\r\n    }\r\n\r\n    /* çæéæºId */\r\n    generateRandomId() {\r\n        return Math.random().toString(16).substring(2, 10);\r\n    }\r\n\r\n    /**\r\n     * TODO ç¦æ­¢äºä»¶æè·  ä¸å¤å®å\r\n     * æ¿æ´» å¤±å»ç¦ç¹ é¢æ¿\r\n     * @param event äºä»¶å¯¹è±¡\r\n     */\r\n    selectPanelItem(e: MouseEvent) {\r\n        // è®¾ç½®ä¸å¯æ¶æä¸å¯æ¶æ\r\n        if (!this.panel.foldable) {\r\n            return;\r\n        }\r\n        // value è¥ä¸ºç©º  åå§åéæºæ°å­ç¬¦ä¸²\r\n        if (this.value === null || this.value === undefined) {\r\n            this.value = Math.random().toString(16).substring(2, 10);\r\n        }\r\n        this.panel.updateModel(this.value);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FarrisPanelComponent } from './panel/panel-item-list.component';\r\nimport { FarrisPanelItemComponent } from './panel-item/panel-item.component';\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        FarrisPanelItemComponent,\r\n        FarrisPanelComponent,\r\n    ],\r\n    exports: [\r\n        FarrisPanelItemComponent,\r\n        FarrisPanelComponent\r\n    ],\r\n})\r\nexport class FarrisPanelModule {\r\n\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA,MAWa,oBAAoB;;;;IA2C7B,YACY,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;;QAjCpB,cAAS,GAAG,EAAE,CAAC;;QAGf,aAAQ,GAAG,IAAI,CAAC;;QAMhB,cAAS,GAAG,KAAK,CAAC;QAcjB,gBAAW,GAAyC,IAAI,YAAY,EAA0B,CAAC;;;;QAMzG,eAAU,GAA2B,EAAE,CAAC;QACxC,eAAU,GAAsB,EAAE,CAAC;KAKlC;;;;;IAvBD,IAAa,KAAK;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;IAED,IAAI,KAAK,CAAC,UAAU;;QAEhB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;IAiBD,QAAQ;KACP;;;;IAED,eAAe;;QAEX,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACvB,IAAI,CAAC,SAAS,CAAC,OAAO;;;;YAAC,GAAG;gBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;aAC7D,EAAC,CAAC;SACN;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAKD,WAAW,CAAC,KAAa;;cACf,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS;;;;QAAC,GAAG,IAAI,GAAG,KAAK,KAAK,EAAC;;QAE7D,IAAI,KAAK,GAAG,CAAC,EAAE;;YAEX,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACnB;;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACjD;;;QAGD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACnB;aAAM;;YAEH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1C;;;;;;IAGO,gBAAgB;QACpB,IAAI,CAAC,UAAU,CAAC,OAAO;;;;QAAC,MAAM,IAAI,MAAM,EAAE,EAAC,CAAC;KAC/C;;;YAnGJ,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,oMAA+C;gBAE/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;;YAPwD,SAAS;;;0BAW7D,SAAS,SAAC,aAAa;oBAGvB,KAAK;qBACL,KAAK;wBAKL,KAAK;uBAGL,KAAK;4BAGL,KAAK;wBAGL,KAAK;oBAGL,KAAK;0BAWL,MAAM;;;;;;;AC7CX;AACA,MAAa,aAAa,GAA6B,OAAO,CAC1D,eAAe,EAAE;IACb,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC;QAClB,QAAQ,EAAE,GAAG;KAChB,CAAC,CAAC;IACH,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC;QACpB,QAAQ,EAAE,GAAG;QACb,UAAU,EAAE,QAAQ;KACvB,CAAC,CAAC;IACH,UAAU,CAAC,mBAAmB,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;CACxD,CAAC;;;;;;ACXN,MAaa,wBAAwB;;;;;;;IAgCjC,YACuB,KAA2B,EACtC,SAA4B,EAC5B,MAAiB,EACjB,EAAc;QAHH,UAAK,GAAL,KAAK,CAAsB;QACtC,cAAS,GAAT,SAAS,CAAmB;QAC5B,WAAM,GAAN,MAAM,CAAW;QACjB,OAAE,GAAF,EAAE,CAAY;QATc,gBAAW,GAAG,IAAI,CAAC;QAChC,WAAM,GAAG,IAAI,CAAC;;QAGzC,WAAM,GAAG,KAAK,CAAC;KAOd;;;;IACD,QAAQ;KAEP;;;;IACD,eAAe;;QAEX,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;YAC1B,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;gBACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACxC;YACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACtC;;;cAEK,YAAY;;;QAAe,MAAM,IAAI,CAAC,SAAS,EAAE,CAAA;QACvD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC5C;;;;;IAGD,SAAS;QACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI;;;;QAAC,GAAG,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,EAAC,CAAC;;QAE/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC;YACzE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;KACjC;;;;;IAGD,gBAAgB;QACZ,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KACtD;;;;;;;IAOD,eAAe,CAAC,CAAa;;QAEzB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACtB,OAAO;SACV;;QAED,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;SAC5D;QACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;;;YA5FJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,s/BAA0C;gBAE1C,UAAU,EAAE,CAAC,aAAa,CAAC;gBAC3B,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;;YAPQ,oBAAoB,uBAyCpB,QAAQ;YA5CqB,iBAAiB;YAAe,SAAS;YAAE,UAAU;;;oBActF,KAAK;qBACL,KAAK;oBAGL,KAAK;uBAIL,KAAK,SAAC,OAAO;sBAGb,KAAK,YACL,WAAW,SAAC,uBAAuB;sBAInC,YAAY,SAAC,WAAW;wBAGxB,YAAY,SAAC,WAAW;yBAGxB,YAAY,SAAC,cAAc;0BAE3B,WAAW,SAAC,yBAAyB;qBACrC,WAAW,SAAC,YAAY;;;;;;;ACzC7B,MAiBa,iBAAiB;;;YAb7B,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;iBACf;gBACD,YAAY,EAAE;oBACV,wBAAwB;oBACxB,oBAAoB;iBACvB;gBACD,OAAO,EAAE;oBACL,wBAAwB;oBACxB,oBAAoB;iBACvB;aACJ;;;;;;;;;;;;;;;;;;;;"}
