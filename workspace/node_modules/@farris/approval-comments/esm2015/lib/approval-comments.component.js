/**
 * @fileoverview added by tsickle
 * Generated from: lib/approval-comments.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Injector, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ApprovalComment } from '../entity/approval-comments';
import { ApiService } from '../utils/api.service';
/** @enum {string} */
const DisplayTypes = {
    Single: "single",
    Default: "default",
    Theme1: "theme1",
};
export class ApprovalCommentComponent {
    /**
     * @param {?} apiService
     * @param {?} injector
     */
    constructor(apiService, injector) {
        this.apiService = apiService;
        this.injector = injector;
        /*
            * 域配置
            */
        this.domains = [];
        this.displayType = DisplayTypes.Default;
        this.attachmentVisible = true; // 附件是否可见
        this.filterAction = ['Pass', 'Back'];
        this.DisplayTypes = DisplayTypes;
        /** @type {?} */
        const rootViewModel = this.injector["view"].component.viewModel;
        rootViewModel.bindingData.changes.subscribe((/**
         * @param {?} change
         * @return {?}
         */
        (change) => {
            if (this.displayType === this.DisplayTypes.Single) {
                this.getFieldData(rootViewModel.bindingData.getValue(this.sortPath(this.field)));
            }
        }));
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (!this.procInstId) {
            return;
        }
        if (!!this.dataList) {
            return;
        }
        if (this.displayType === this.DisplayTypes.Default && this.domains.length) {
            this.getApprovalComment();
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.displayType === this.DisplayTypes.Single) {
            /** @type {?} */
            const rootViewModel = this.injector["view"].component.viewModel;
            this.getFieldData(rootViewModel.bindingData.getValue(this.sortPath(this.field)));
        }
        /** @type {?} */
        const AttachUtil = {
            mergeString: (/**
             * @param {?} str
             * @param {?} str1
             * @return {?}
             */
            (str, str1) => {
                /** @type {?} */
                const min = str.length < str1.length ? str.length : str1.length;
                /** @type {?} */
                let res = '';
                /** @type {?} */
                let i = 0;
                for (i = 0; i < min; i++) {
                    res += str.substring(i, i + 1);
                    res += str1.substring(i, i + 1);
                }
                res += str.length < str1.length ? str1.substring(i) : str.substring(i);
                return res;
            }),
            getToken: (/**
             * @param {?} str
             * @return {?}
             */
            (str) => {
                /** @type {?} */
                const array = [1, 2, 3];
                if (str.length > 24) {
                    str = str.substring(0, 24);
                }
                /** @type {?} */
                const length = Math.floor(str.length / 3);
                /** @type {?} */
                const str1 = str.substring(0, length);
                /** @type {?} */
                const str2 = str.substring(length, 2 * length);
                /** @type {?} */
                const str3 = str.substring(2 * length, 3 * length);
                /** @type {?} */
                const randomArray = [];
                /** @type {?} */
                let random = Math.ceil(Math.random() * 3);
                randomArray.push(array[random - 1]);
                array.splice(random - 1, 1);
                random = Math.ceil(Math.random() * 2);
                randomArray.push(array[random - 1]);
                array.splice(random - 1, 1);
                randomArray.push(array[0]);
                /** @type {?} */
                const timeStamp = Math.round(new Date().getTime() / 1000) + '';
                return (timeStamp.substring(0, 5) +
                    'times' +
                    randomArray[0] +
                    '' +
                    randomArray[1] +
                    '' +
                    randomArray[2] +
                    AttachUtil.switchStr(str1, str2, str3, randomArray[0]) +
                    AttachUtil.switchStr(str1, str2, str3, randomArray[1]) +
                    AttachUtil.switchStr(str1, str2, str3, randomArray[2]) +
                    'times' +
                    timeStamp.substring(5));
            }),
            switchStr: (/**
             * @param {?} str1
             * @param {?} str2
             * @param {?} str3
             * @param {?} i
             * @return {?}
             */
            (str1, str2, str3, i) => {
                switch (i) {
                    case 1:
                        return str1;
                    case 2:
                        return str2;
                    case 3:
                        return str3;
                }
            })
        };
        this.AttachUtil = AttachUtil;
    }
    /**
     * @private
     * @param {?} field
     * @return {?}
     */
    sortPath(field) {
        /** @type {?} */
        const pathArry = field.split('_');
        return pathArry.reduce((/**
         * @param {?} pre
         * @param {?} bindingPath
         * @return {?}
         */
        (pre, bindingPath) => {
            pre.push(bindingPath[0].toLowerCase() + bindingPath.substring(1, bindingPath.length));
            return pre;
        }), []);
    }
    /**
     * @private
     * @param {?} fieldData
     * @return {?}
     */
    getFieldData(fieldData) {
        if (!fieldData) {
            return;
        }
        try {
            /** @type {?} */
            const workItemLogs = [];
            /** @type {?} */
            const retList = JSON.parse(fieldData);
            retList.forEach((/**
             * @param {?} element
             * @return {?}
             */
            element => {
                if (element.signature) {
                    element.url = this.getUrl(`{"id":"${element.signature}"}`, 'taskcentersignature');
                }
                workItemLogs.push({
                    url: element.url,
                    createdTime: element.operateTime,
                    message: element.comment,
                    operatorName: element.operatorName,
                });
            }));
            this.workItemLogs = workItemLogs;
        }
        catch (error) {
            console.error(error);
        }
    }
    /*
        * 从根据域配置获取审批意见信息
        */
    /**
     * @private
     * @return {?}
     */
    getApprovalComment() {
        /** @type {?} */
        const domainList = this.domains.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => item.domainCode && item.domainName && item.activityDefinedIds));
        /** @type {?} */
        const params = {
            processsInstId: this.procInstId,
            domains: domainList
        };
        this.dataList = [];
        this.apiService.getApprovalCommentApi(params).subscribe((/**
         * @param {?} resp
         * @return {?}
         */
        resp => {
            if (resp) {
                [].concat(resp).forEach((/**
                 * @param {?} value
                 * @return {?}
                 */
                value => {
                    /** @type {?} */
                    const data = new ApprovalComment();
                    data.title = value.domainName;
                    /** @type {?} */
                    let workItemLogs = [];
                    if (value.taskCommentImpl) {
                        if (this.sortOrder === 'time') {
                            workItemLogs = value.taskCommentImpl.sort((/**
                             * @param {?} a
                             * @param {?} b
                             * @return {?}
                             */
                            (a, b) => {
                                return Date.parse(a.operatorTime) - Date.parse(b.operatorTime);
                            }));
                        }
                        else {
                            workItemLogs = value.taskCommentImpl;
                        }
                    }
                    // const workItemLogsFilter = workItemLogs.filter(workItem => workItem.action && this.filterAction.indexOf(workItem.action) > -1);
                    /** @type {?} */
                    const workItemLogsFilter = workItemLogs.filter((/**
                     * @param {?} workItem
                     * @return {?}
                     */
                    workItem => workItem.action && workItem.action !== 'Submit'));
                    workItemLogsFilter.map((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => {
                        if (item.signature) {
                            item.url = this.getUrl(item.signature, 'taskcentersignature');
                        }
                        if (item.attachmentRef && item.attachmentRef !== '') {
                            /** @type {?} */
                            const attachmentInfo = JSON.parse(item.attachmentRef);
                            /** @type {?} */
                            const attachmentList = [];
                            for (let i = 0; i < attachmentInfo.length; i++) {
                                /** @type {?} */
                                const info = {
                                    fileName: attachmentInfo[i].fileName,
                                    fileType: this.getFileType(attachmentInfo[i].fileName),
                                    fileSize: attachmentInfo[i].fileSize,
                                    url: this.getDownLoadUrl(attachmentInfo[i].metadataId, 'wf_attachment'),
                                    metadataId: attachmentInfo[i].metadataId,
                                };
                                attachmentList.push(info);
                            }
                            item.attachmentList = attachmentList;
                        }
                    }));
                    data.workItemLogs = workItemLogsFilter;
                    this.dataList.push(data);
                }));
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
        }));
    }
    /*
        * 获取审批意见附件地址
        */
    /**
     * @private
     * @param {?} signature
     * @param {?} rootId
     * @return {?}
     */
    getUrl(signature, rootId) {
        /** @type {?} */
        const AttachUtil = {
            mergeString: (/**
             * @param {?} str
             * @param {?} str1
             * @return {?}
             */
            (str, str1) => {
                /** @type {?} */
                const min = str.length < str1.length ? str.length : str1.length;
                /** @type {?} */
                let res = '';
                /** @type {?} */
                let i = 0;
                for (i = 0; i < min; i++) {
                    res += str.substring(i, i + 1);
                    res += str1.substring(i, i + 1);
                }
                res += str.length < str1.length ? str1.substring(i) : str.substring(i);
                return res;
            }),
            getToken: (/**
             * @param {?} str
             * @return {?}
             */
            (str) => {
                /** @type {?} */
                const array = [1, 2, 3];
                if (str.length > 24) {
                    str = str.substring(0, 24);
                }
                /** @type {?} */
                const length = Math.floor(str.length / 3);
                /** @type {?} */
                const str1 = str.substring(0, length);
                /** @type {?} */
                const str2 = str.substring(length, 2 * length);
                /** @type {?} */
                const str3 = str.substring(2 * length, 3 * length);
                /** @type {?} */
                const randomArray = [];
                /** @type {?} */
                let random = Math.ceil(Math.random() * 3);
                randomArray.push(array[random - 1]);
                array.splice(random - 1, 1);
                random = Math.ceil(Math.random() * 2);
                randomArray.push(array[random - 1]);
                array.splice(random - 1, 1);
                randomArray.push(array[0]);
                /** @type {?} */
                const timeStamp = Math.round(new Date().getTime() / 1000) + '';
                return (timeStamp.substring(0, 5) +
                    'times' +
                    randomArray[0] +
                    '' +
                    randomArray[1] +
                    '' +
                    randomArray[2] +
                    AttachUtil.switchStr(str1, str2, str3, randomArray[0]) +
                    AttachUtil.switchStr(str1, str2, str3, randomArray[1]) +
                    AttachUtil.switchStr(str1, str2, str3, randomArray[2]) +
                    'times' +
                    timeStamp.substring(5));
            }),
            switchStr: (/**
             * @param {?} str1
             * @param {?} str2
             * @param {?} str3
             * @param {?} i
             * @return {?}
             */
            (str1, str2, str3, i) => {
                switch (i) {
                    case 1:
                        return str1;
                    case 2:
                        return str2;
                    case 3:
                        return str3;
                }
            })
        };
        rootId = rootId || 'default-root';
        /** @type {?} */
        const attachId = JSON.parse(signature).id;
        /** @type {?} */
        const url = `/api/runtime/dfs/v1.0/doc/filecontent?metadataid=${attachId}&rootid=${rootId}&token=${AttachUtil.getToken(AttachUtil.mergeString(attachId, rootId))}`;
        return url;
    }
    /*
        * 审批日志国际化信息
        */
    /**
     * @param {?} code
     * @return {?}
     */
    translateTask(code) {
        /** @type {?} */
        const supportLanguage = ['zh-CHS', 'zh_CHT', 'en'];
        /** @type {?} */
        const defaultLang = localStorage.getItem('languageCode');
        /** @type {?} */
        let langData;
        /** @type {?} */
        const translate = {
            'zh-CHS': {
                logDate: '处理时间',
                processTime: '处理时长',
                message: '办理意见',
                showForecastLog: '显示后续审批人',
                hiddenForecastLog: '隐藏后续审批人',
                terminal: '来自',
                web: '电脑端',
                mobile: '移动端',
                title: '审批记录',
                viewProcess: '查看流程',
                nodeName: '节点名称',
                participant: '办理人',
                receiveTime: '接收时间',
                action: '操作',
                submitTime: '提交时间',
                todo: '待办理',
                done: '已办理',
                submit: '已提交',
                undo: '未到达',
                toAssign: '未指派',
                toRead: '待阅',
                noResolvedUser: '未解析到用户',
                noData: '暂无数据',
                startTime: '接收时间',
                taskRead: '已读',
                taskToRead: '未读',
                taskHandle: '实际操作人',
                toSubmit: '待提交',
                download: '下载',
                view: '查看',
            },
            en: {
                logDate: 'EndTime',
                processTime: 'ProcessTime',
                message: 'Approval opinion',
                showForecastLog: 'show forecast log',
                hiddenForecastLog: 'hide forecast log',
                terminal: 'From',
                web: 'Web',
                mobile: 'Mobile',
                title: 'Logs',
                viewProcess: 'View Process',
                nodeName: 'Node name',
                participant: 'Participant',
                receiveTime: 'Receive time',
                action: 'Action',
                submitTime: 'Submit time',
                todo: 'Todo',
                done: 'Done',
                submit: 'Submit',
                undo: 'Undo',
                toAssign: 'To Assign',
                toRead: 'To Read',
                noResolvedUser: 'No one',
                noData: 'Empty',
                startTime: 'Start time',
                taskRead: 'Read',
                taskToRead: 'To read',
                taskOwner: 'Operator',
                toSubmit: 'To submit',
                download: 'download',
                view: 'view',
            },
            'zh-CHT': {
                logDate: '處理時間',
                processTime: '處理時長',
                message: '辦理意見',
                showForecastLog: '顯示後續審批人',
                hiddenForecastLog: '隱藏後續審批人',
                terminal: '來自',
                web: '電腦端',
                mobile: '移動端',
                title: '審批記錄',
                viewProcess: '查看流程',
                nodeName: '節點名稱',
                participant: '辦理人',
                receiveTime: '接收時間',
                action: '操作',
                submitTime: '提交時間',
                todo: '待辦理',
                done: '已辦理',
                submit: '已提交',
                undo: '未到達',
                toAssign: '未指派',
                toRead: '待閱',
                noResolvedUser: '未解析到用戶',
                noData: '暫無數據',
                startTime: '接收時間',
                taskRead: '已讀',
                taskToRead: '未讀',
                taskHandle: '實際操作人',
                toSubmit: '待提交',
                download: '下載',
                view: '查看',
            },
        };
        if (defaultLang && supportLanguage.includes(defaultLang)) {
            langData = translate[defaultLang];
        }
        else {
            langData = translate['zh-CHS'];
        }
        return langData[code];
    }
    /*
        * 获取附件文件类型
        */
    /**
     * @private
     * @param {?} fileName
     * @return {?}
     */
    getFileType(fileName) {
        /** @type {?} */
        const pos = fileName.lastIndexOf('.');
        /** @type {?} */
        let type = fileName.substring(pos + 1);
        type = type === '' ? 'Default' : type.toLowerCase();
        /** @type {?} */
        const docLib = 'doc-docx-htm-html-js-pdf-ppt-pptx-rar-zip-txt-xls-xlsx';
        /** @type {?} */
        const videoLib = 'wav-aif-aiff-au-mp1-mp2-mp3-ra-rm-ram-mid-rmi';
        /** @type {?} */
        const audioLib = 'avi-rm-rmvb-mpeg-mpg-dat-mov-qt-asf-wm-mp4';
        /** @type {?} */
        const imgLib = 'webp-baibmp-dupcx-tif-gif-jpeg-tga-exif-fpx-svg-psd-cdr-pcd-dxf-ufo-eps-ai-png-hdri-raw-wmf-flic-emf-ico-jpg';
        if (docLib.indexOf(type) >= 0) {
            type = type.toLowerCase();
        }
        else if (videoLib.indexOf(type) >= 0) {
            type = 'video';
        }
        else if (audioLib.indexOf(type) >= 0) {
            type = 'audio';
        }
        else if (imgLib.indexOf(type) >= 0) {
            type = 'picture';
        }
        else {
            type = 'default';
        }
        return ('/platform/runtime/wf/webapp/mobiletaskcenter/assets/accessory/' +
            type +
            '.svg?v=20230316');
    }
    /*
        * 获取附件下载地址
        */
    /**
     * @private
     * @param {?} attachId
     * @param {?} rootId
     * @return {?}
     */
    getDownLoadUrl(attachId, rootId) {
        rootId = rootId || 'default-root';
        /** @type {?} */
        const ishttps = 'https:' === document.location.protocol ? true : false;
        /** @type {?} */
        let url = window.location.host;
        if (ishttps) {
            url = 'https://' + url;
        }
        else {
            url = 'http://' + url;
        }
        url += `/api/runtime/dfs/v1.0/doc/filecontent?metadataid=${attachId}&rootid=${rootId}&token=${this.AttachUtil.getToken(this.AttachUtil.mergeString(attachId, rootId))}`;
        return url;
    }
    /*
        * 点击下载
        */
    /**
     * @param {?} downloadUrl
     * @return {?}
     */
    attachmentDownload(downloadUrl) {
        window.open(downloadUrl);
    }
    /**
     * 预览附件
     * @param {?} metadataIds
     * @return {?}
     */
    attachmentPreview(metadataIds) {
        /** @type {?} */
        const options = {
            appType: 'app',
            funcId: '',
            tabName: '文档在线预览',
            appId: '6ccb476b-f2ba-df8f-6f47-d37d100c56e2',
            appEntrance: 'docviewertab',
            tabId: new Date().getTime(),
            entityParams: {
                metadataIdList: metadataIds,
                rootId: 'wf_attachment',
                metadataId: null,
                viewOptions: {
                    showHeader: true,
                    showPaging: true,
                    showThumbnails: true,
                    showDownload: true,
                    showSearch: true,
                    showZoom: true,
                    showPrint: true,
                    showSecondaryToolBar: true,
                },
            },
        };
        if (((/** @type {?} */ (top))).gspframeworkService) {
            ((/** @type {?} */ (top))).gspframeworkService.rtf.func.openMenu(options);
            top.postMessage('TaskCloseLogDialog', top.document.location.origin);
        }
    }
}
ApprovalCommentComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-approval-comments',
                template: "<ng-container *ngIf=\"dataList && displayType === DisplayTypes.Default\">\r\n    <div class=\"main-content\">\r\n        <div class=\"body-content\" *ngFor=\"let comment of dataList\">\r\n            <div class=\"left-content\">\r\n                <div class=\"approval-suggestion\">{{comment.title}}</div>\r\n            </div>\r\n            <div class=\"right-content\">\r\n                <div *ngFor=\"let item of comment.workItemLogs\">\r\n                    <div class=\"right-content-item\">\r\n                        <div class=\"right-content-item-list-content\">\r\n                            <div class=\"approval-comment-message\">{{item?.message}}</div>\r\n                            <div *ngIf=\"attachmentVisible\" class=\"approval-comment-attachment\">\r\n                                <div *ngFor=\"let attachment of item.attachmentList\"\r\n                                    class=\"log-attachment task-attachmentlist-li\">\r\n                                    <!-- \u9644\u4EF6\u540D\u79F0 -->\r\n                                    <div class=\"log-attachment-title\">\r\n                                        <img class=\"log-attachment-img\" src=\"{{attachment.fileType}}\" />\r\n                                        <span>{{attachment.fileName}}</span>\r\n                                    </div>\r\n                                    <div style=\"display: flex; align-items: center\">\r\n                                        <!-- \u9644\u4EF6\u5927\u5C0F -->\r\n                                        <div><span class=\"log-attachment-size\">{{attachment.fileSize}}</span></div>\r\n                                        <!-- \u4E0B\u8F7D\u6309\u94AE -->\r\n                                        <div class=\"log-attachment-icon-download\" id=\"log-attachment-download\"\r\n                                            title=\"{{translateTask('download')}}\">\r\n                                            <img src=\"/platform/runtime/wf/webapp/mobiletaskcenter/assets/img/web-attachment-download.svg?v=20230222\"\r\n                                                (click)=\"attachmentDownload(attachment.url)\" />\r\n                                        </div>\r\n                                        <!-- \u67E5\u770B\u6309\u94AE -->\r\n                                        <div class=\"log-attachment-icon-preview\" id=\"log-attachment-preview\"\r\n                                            title=\"{{translateTask('view')}}\">\r\n                                            <img src=\"/platform/runtime/wf/webapp/mobiletaskcenter/assets/img/web-attachment-view.svg?v=20230222\"\r\n                                                (click)=\"attachmentPreview([attachment?.metadataId])\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"right-content-item-list-sign\">\r\n                            <div *ngIf=\"item?.url\" class=\"approval-operator-name\">\r\n                                <img class=\"image-height-width\" src=\"{{item?.url}}\">\r\n                            </div>\r\n                            <div *ngIf=\"!item?.url\" class=\"approval-operator-name\">{{item?.operatorName}}</div>\r\n                            <div class=\"approval-start-time\">\r\n                                <span>\u5904\u7406\u65F6\u95F4\uFF1A</span>{{(item?.createdTime |date:'yyyy-MM-dd HH:mm:ss') || '--'}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-container *ngIf=\"dataList && displayType === DisplayTypes.Theme1\">\r\n    <div class=\"main-content\">\r\n        <div class=\"body-content-item2\" *ngFor=\"let comment of dataList\">\r\n            <div class=\"approval-suggestion\">{{comment.title}}</div>\r\n            <div *ngFor=\"let item of comment.workItemLogs\">\r\n                <div class=\"right-content-item\">\r\n                    <div class=\"right-content-item-list-content\">\r\n                        <div class=\"approval-comment-message-item2\">{{item?.message}}</div>\r\n                    </div>\r\n                    <div class=\"right-content-item-list-sign\">\r\n                        <div *ngIf=\"item?.url\" class=\"approval-operator-name-item2\">\r\n                            <img class=\"image-height-width\" src=\"{{item?.url}}\">\r\n                        </div>\r\n                        <div *ngIf=\"!item?.url\" class=\"approval-operator-name-item2\">{{item?.operatorName}}</div>\r\n                        <div class=\"approval-start-time-item2\">\r\n                            <span>\u5904\u7406\u65F6\u95F4\uFF1A</span>{{(item?.createdTime |date:'yyyy-MM-dd HH:mm:ss') || '--'}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"displayType === DisplayTypes.Single\">\r\n\r\n    <div class=\"main-content\">\r\n        <div class=\"body-content\">\r\n            <div class=\"left-content\">\r\n                <div class=\"approval-suggestion\">{{title}}</div>\r\n            </div>\r\n            <div class=\"right-content\">\r\n                <div *ngFor=\"let item of workItemLogs\">\r\n                    <div class=\"right-content-item\">\r\n                        <div class=\"right-content-item-list-content\">\r\n                            <div class=\"approval-comment-message\">{{item?.message}}</div>\r\n                            <div *ngIf=\"attachmentVisible\" class=\"approval-comment-attachment\">\r\n                                <div *ngFor=\"let attachment of item.attachmentList\"\r\n                                    class=\"log-attachment task-attachmentlist-li\">\r\n                                    <!-- \u9644\u4EF6\u540D\u79F0 -->\r\n                                    <div class=\"log-attachment-title\">\r\n                                        <img class=\"log-attachment-img\" src=\"{{attachment.fileType}}\" />\r\n                                        <span>{{attachment.fileName}}</span>\r\n                                    </div>\r\n                                    <div style=\"display: flex; align-items: center\">\r\n                                        <!-- \u9644\u4EF6\u5927\u5C0F -->\r\n                                        <div><span class=\"log-attachment-size\">{{attachment.fileSize}}</span></div>\r\n                                        <!-- \u4E0B\u8F7D\u6309\u94AE -->\r\n                                        <div class=\"log-attachment-icon-download\" id=\"log-attachment-download\"\r\n                                            title=\"{{translateTask('download')}}\">\r\n                                            <img src=\"/platform/runtime/wf/webapp/mobiletaskcenter/assets/img/web-attachment-download.svg?v=20230222\"\r\n                                                (click)=\"attachmentDownload(attachment.url)\" />\r\n                                        </div>\r\n                                        <!-- \u67E5\u770B\u6309\u94AE -->\r\n                                        <div class=\"log-attachment-icon-preview\" id=\"log-attachment-preview\"\r\n                                            title=\"{{translateTask('view')}}\">\r\n                                            <img src=\"/platform/runtime/wf/webapp/mobiletaskcenter/assets/img/web-attachment-view.svg?v=20230222\"\r\n                                                (click)=\"attachmentPreview([attachment?.metadataId])\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"right-content-item-list-sign\">\r\n                            <div *ngIf=\"item?.url\" class=\"approval-operator-name\">\r\n                                <img class=\"image-height-width\" src=\"{{item?.url}}\">\r\n                            </div>\r\n                            <div *ngIf=\"!item?.url\" class=\"approval-operator-name\">{{item?.operatorName}}</div>\r\n                            <div class=\"approval-start-time\">\r\n                                <span>\u5904\u7406\u65F6\u95F4\uFF1A</span>{{(item?.createdTime |date:'yyyy-MM-dd HH:mm:ss') || '--'}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-container>",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ApprovalCommentComponent)),
                        multi: true
                    },
                    ApiService,
                ],
                styles: [".fos-dialog .fos-content{width:100%;height:100%;min-width:760px;overflow:hidden}.fos-dialog ::ng-deep .modal-content{border-radius:10px}.fos-dialog ::ng-deep .modal-header{color:#2d2f33;border-bottom:none;padding:15px 0 15px 24px}.fos-dialog ::ng-deep .actions{padding-right:22px;font-size:20px}.fos-dialog ::ng-deep .modal-title-label{font-size:17px;font-weight:600}.fos-dialog ::ng-deep .modal-footer{padding:17px 24px;background:#fff;border-top:none}.fos-dialog .fos-content .fos-content-container{display:flex;width:calc(100% - 48px);height:100%;margin:0 24px;border:1px solid #dee1ea;border-radius:3px}.fos-dialog .fos-content .fos-content-container .fos-content-main{flex:0 0 100%;position:relative;display:flex}.fos-dialog .fos-content .fos-content-container .fos-content-main .fos-search-input{position:absolute;top:7px;right:14px;color:#959ab1;z-index:99;width:320px}.fos-dialog .fos-content .fos-content-container .fos-content-main .fos-tabs{min-width:575px}.fos-dialog ::ng-deep .fos-tabs .nav-link{line-height:18px;padding:11px 0!important}.fos-dialog ::ng-deep .fos-tabs .farris-tabs-header{background:#f9f9f9}.fos-dialog ::ng-deep .fos-tabs .nav-item{margin-right:30px}.fos-dialog ::ng-deep .fos-tabs .nav{padding-left:14px;font-size:16px;font-weight:600}.fos-dialog ::ng-deep .fos-tabs .nav-item .st-tab-text{color:#6f8cb4}.fos-dialog ::ng-deep .fos-tabs .nav-item .active .st-tab-text{color:#2a87ff}.fos-dialog::ng-deep input::-webkit-input-placeholder{color:#b4bccc;font-size:13px;line-height:24px}.fos-dialog ::ng-deep input::-moz-input-placeholder{color:#b4bccc;font-size:13px;line-height:24px}.fos-dialog ::ng-deep input::-ms-input-placeholder{color:#b4bccc;font-size:13px;line-height:24px}.fos-dialog ::ng-deep .fos-search-input .form-control{line-height:26px;height:26px;font-size:13px}.fos-dialog ::ng-deep .fos-treetable .farris-treetable-thead{background:#fff;font-size:13px}.fos-dialog ::ng-deep .fos-treetable .farris-treetable-thead th .tt-checkbox .custom-control-label::before{top:2px;margin:0}.fos-dialog ::ng-deep .fos-treetable .farris-treetable-thead th:hover{background:#fff}.fos-dialog ::ng-deep .fos-treetable .treetable-cell-content span{font-size:13px}:host .input-group .input-group-append{background:#fff}:host .s-input-group .input-group-text{color:rgba(0,0,0,.25)}:host .cursor-pointer{cursor:pointer}:host .s-input-group .multi-more{padding:0 0 2px 8px;height:auto;min-height:24px;flex:1;overflow:hidden}:host .s-input-group .multi--content{display:flex;flex-wrap:nowrap;cursor:default;padding:0 5px;background:#ebf7fe;border:1px solid #cfedff;margin:3px 3px 0 0;float:left;height:17px;border-radius:3px;line-height:17px;justify-content:space-between;box-sizing:content-box;max-width:calc(100% - 10px)}:host .s-input-group .multi--item{line-height:16px;text-overflow:ellipsis;height:16px;flex:1;overflow:hidden;word-break:break-all}:host .s-input-group .multi-another{padding:3px 3px 0 0;line-height:16px;float:left;height:17px;box-sizing:content-box;border:1px solid #fff;color:#bfbfbf}.fos-dialog ::ng-deep .fos-dialog-footer{width:200px;height:30px;line-height:30px;position:absolute;left:24px;text-align:left;cursor:default}.fos-dialog ::ng-deep .fos-dialog-footer .fosd-footer-selection{font-size:14px;color:#2d2f33;background:#f4f9ff;border-radius:5px;padding:2px 5px}.fos-dialog ::ng-deep .fos-dialog-footer .fosd-footer-selection a{font-size:17px;color:#2a87ff}.fos-dialog ::ng-deep .fos-dialog-footer .fosd-footer-clear{font-size:13px;color:#2a87ff;margin-left:1rem;cursor:pointer}.fos-dialog ::ng-deep .fos-dialog-footer .fosd-selection-content{position:absolute;bottom:25px;left:-10px;background:#fff;z-index:102}.fos-dialog::ng-deep .pagination-container{height:1.5rem;margin-bottom:21px}.fos-dialog::ng-deep .pagination-container input::-webkit-inner-spin-button,.fos-dialog::ng-deep .pagination-container input::-webkit-outer-spin-button{-webkit-appearance:none}.fos-dialog::ng-deep .pagination-container input[type=number]{-moz-appearance:textfield;text-align:center;width:38px;line-height:20px;border:1px solid #e9ecf3;border-radius:6px;box-shadow:0 2px 6px 0 rgba(31,35,41,.06);margin-left:4px;outline:0}.fos-dialog::ng-deep .pagination-container input[type=number]:focus{border:1px solid #0084ff}.fos-dialog::ng-deep .pagination-container li{line-height:22px}.fos-dialog ::ng-deep .fos-treetable td{border-color:#fff}.fos-dialog ::ng-deep .default-light-color{color:#f7b500}.fos-dialog ::ng-deep .default-dark-color{color:#d8dce6}.fos-dialog ::ng-deep .s-personnel-group{width:440px;height:250px;border-radius:5px;background:#fff;box-shadow:0 0 40px 0 rgba(0,0,0,.2);padding:16px 24px;position:fixed;top:50%;left:50%;margin-left:-220px;margin-top:-125px;z-index:9999}.fos-dialog ::ng-deep .s-personnel-group .s-personnel-group-title{font-size:17px;line-height:24px;color:#2d2f33;font-weight:600}.fos-dialog ::ng-deep .s-personnel-group .s-personnel-group-title .f-icon{float:right;font-size:20px;color:#878d99;margin-top:3px;cursor:pointer}.fos-dialog ::ng-deep .s-personnel-group .s-personnel-group-footer{margin-top:20px}.fos-dialog ::ng-deep .s-personnel-group .col-12{padding:0}.fos-dialog ::ng-deep .s-personnel-group-footer .title-checkall{margin-top:6px}.fos-dialog ::ng-deep .s-personnel-group .farris-label-text{color:#5a5e66}.fos-dialog ::ng-deep .s-personnel-group .s-personnel-group-footer .fr{float:right;height:32px}.main-content{width:100%;height:100%;display:flex;flex-direction:column}.body-content{box-sizing:border-box;flex:1.5;display:flex;flex-direction:row;margin:0 -1px -1px 0;border:1px dashed #ccc;border-collapse:collapse}.body-content-item2{box-sizing:border-box;flex:1.5;display:flex;flex-direction:column;padding:10px 0 0 10px;margin:0 -1px -1px 0;border:1px dashed #ccc;border-collapse:collapse;min-height:36px}.left-content{width:160px;box-sizing:border-box;display:flex;justify-content:center;align-items:center;min-height:36px;border-right:1px dashed #ccc}.right-content{box-sizing:border-box;padding-left:12px;flex:1;display:flex;flex-direction:column}.right-content-item{box-sizing:border-box;display:flex;flex-direction:row}.right-content-item-list-content{display:flex;flex:1;flex-direction:column;box-sizing:border-box;padding-top:10px}.right-content-item-list-sign{display:flex;box-sizing:border-box;width:210px;flex-direction:column}.approval-comment-message{flex:1;font-size:12px;padding:0 10px 10px}.approval-comment-attachment{padding-bottom:10px}.approval-comment-message-item2{font-size:12px;padding:10px}.date_area{font-size:6px}.approval-start-time{font-size:10px;padding:0 10px 15px}.approval-start-time-item2{font-size:10px;padding-top:10px;margin-bottom:15px}.approval-operator-name{flex:1;display:flex;align-items:center;justify-content:center;font-size:12px;text-align:center;margin-top:20px;padding-bottom:10px}.approval-operator-name-item2{font-size:12px;text-align:center}.footer-content .right-content .right-content-item .right-content-item-list-sign{margin-top:8px}.approval-suggestion{white-space:pre-line;padding:10px;font-size:12px;word-wrap:break-word;word-break:break-all}.image-height-width{height:34px;width:100px}.log-attachment{display:flex;justify-content:space-between;align-items:center;background:rgba(249,252,255,.87);border:0 solid rgba(229,232,237,.71);border-radius:3px;margin-top:10px;padding:5px 10px;cursor:pointer}.log-attachment-title{display:flex;align-items:center;font-size:12px}.log-attachment-img{height:24px;margin-right:10px}.log-attachment-name{white-space:pre-wrap;word-break:break-all}.log-attachment-size{display:block;font-size:12px;color:rgba(45,47,51,.45);padding:0 10px}.log-attachment-icon-download{border-radius:50%;background:#c7d4ee;margin-left:10px;color:#fff;cursor:pointer;width:16px;height:16px;display:flex;justify-content:center;align-items:center}.log-attachment-icon-preview{border-radius:50%;background:#2b87ff;margin-left:10px;color:#fff;cursor:pointer;width:16px;height:16px;display:flex;justify-content:center;align-items:center}.log-task-read{display:flex;align-items:center;font-size:12px;color:rgba(0,0,0,.45);padding:8px 14px;background:rgba(245,248,252,.6);box-shadow:inset 0 1px 0 0 #e9ecf3}.log-task-read-text{padding:0 8px}"]
            }] }
];
/** @nocollapse */
ApprovalCommentComponent.ctorParameters = () => [
    { type: ApiService },
    { type: Injector }
];
ApprovalCommentComponent.propDecorators = {
    title: [{ type: Input }],
    domains: [{ type: Input }],
    procInstId: [{ type: Input }],
    sortOrder: [{ type: Input }],
    field: [{ type: Input }],
    bindingfield: [{ type: Input }],
    displayType: [{ type: Input }],
    attachmentVisible: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ApprovalCommentComponent.prototype.title;
    /** @type {?} */
    ApprovalCommentComponent.prototype.domains;
    /** @type {?} */
    ApprovalCommentComponent.prototype.procInstId;
    /** @type {?} */
    ApprovalCommentComponent.prototype.sortOrder;
    /** @type {?} */
    ApprovalCommentComponent.prototype.field;
    /** @type {?} */
    ApprovalCommentComponent.prototype.bindingfield;
    /** @type {?} */
    ApprovalCommentComponent.prototype.displayType;
    /** @type {?} */
    ApprovalCommentComponent.prototype.attachmentVisible;
    /** @type {?} */
    ApprovalCommentComponent.prototype.dataList;
    /** @type {?} */
    ApprovalCommentComponent.prototype.filterAction;
    /** @type {?} */
    ApprovalCommentComponent.prototype.AttachUtil;
    /** @type {?} */
    ApprovalCommentComponent.prototype.DisplayTypes;
    /** @type {?} */
    ApprovalCommentComponent.prototype.workItemLogs;
    /**
     * @type {?}
     * @private
     */
    ApprovalCommentComponent.prototype.apiService;
    /**
     * @type {?}
     * @private
     */
    ApprovalCommentComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,