/**
 * @fileoverview added by tsickle
 * Generated from: utils/api.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
var ApiService = /** @class */ (function () {
    function ApiService(http) {
        this.http = http;
    }
    /**
     * @param {?} param
     * @return {?}
     */
    ApiService.prototype.demoapi = /**
     * @param {?} param
     * @return {?}
     */
    function (param) {
        /** @type {?} */
        var options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            }),
        };
        return this.http.post(this.baseURL + '/path', param, options);
    };
    // 获取审批意见接口
    // 获取审批意见接口
    /**
     * @param {?} param
     * @return {?}
     */
    ApiService.prototype.getApprovalCommentApi = 
    // 获取审批意见接口
    /**
     * @param {?} param
     * @return {?}
     */
    function (param) {
        /** @type {?} */
        var options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            }),
        };
        // this.baseURL = '/api/dev/nocode/v1.0/micro-apps/getworkitemlogs';
        this.baseURL = '/api/no/code/runtime/v1.0/getworkitemlogs';
        return this.http.post(this.baseURL, param, options);
    };
    // 获取审批节点接口
    // 获取审批节点接口
    /**
     * @param {?} microAppId
     * @return {?}
     */
    ApiService.prototype.getAuditorsByMicroAppId = 
    // 获取审批节点接口
    /**
     * @param {?} microAppId
     * @return {?}
     */
    function (microAppId) {
        /** @type {?} */
        var options = {
            headers: new HttpHeaders({
                'Content-Type': 'application/json',
            }),
        };
        this.baseURL = '/api/dev/nocode/v1.0/micro-apps/getauditorsbyappid/' + microAppId;
        return this.http.get(this.baseURL, options);
    };
    ApiService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ApiService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    return ApiService;
}());
export { ApiService };
if (false) {
    /** @type {?} */
    ApiService.prototype.baseURL;
    /**
     * @type {?}
     * @private
     */
    ApiService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2FwcHJvdmFsLWNvbW1lbnRzLyIsInNvdXJjZXMiOlsidXRpbHMvYXBpLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0M7SUFJRSxvQkFDVSxJQUFnQjtRQUFoQixTQUFJLEdBQUosSUFBSSxDQUFZO0lBQ3RCLENBQUM7Ozs7O0lBRUgsNEJBQU87Ozs7SUFBUCxVQUFRLEtBQUs7O1lBQ0gsT0FBTyxHQUFHO1lBQ1osT0FBTyxFQUFFLElBQUksV0FBVyxDQUFDO2dCQUNyQixjQUFjLEVBQUUsa0JBQWtCO2FBQ3JDLENBQUM7U0FDTDtRQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFRCxXQUFXOzs7Ozs7SUFDWCwwQ0FBcUI7Ozs7OztJQUFyQixVQUFzQixLQUFLOztZQUNqQixPQUFPLEdBQUc7WUFDWixPQUFPLEVBQUUsSUFBSSxXQUFXLENBQUM7Z0JBQ3JCLGNBQWMsRUFBRSxrQkFBa0I7YUFDckMsQ0FBQztTQUNMO1FBQ0Qsb0VBQW9FO1FBQ3BFLElBQUksQ0FBQyxPQUFPLEdBQUcsMkNBQTJDLENBQUM7UUFDM0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsV0FBVzs7Ozs7O0lBQ1gsNENBQXVCOzs7Ozs7SUFBdkIsVUFBd0IsVUFBa0I7O1lBQ2hDLE9BQU8sR0FBRztZQUNaLE9BQU8sRUFBRSxJQUFJLFdBQVcsQ0FBQztnQkFDckIsY0FBYyxFQUFFLGtCQUFrQjthQUNyQyxDQUFDO1NBQ0w7UUFDRCxJQUFJLENBQUMsT0FBTyxHQUFHLHFEQUFxRCxHQUFHLFVBQVUsQ0FBQztRQUNsRixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7Z0JBdENKLFVBQVU7Ozs7Z0JBSkYsVUFBVTs7SUE0Q25CLGlCQUFDO0NBQUEsQUF4Q0QsSUF3Q0M7U0F2Q1ksVUFBVTs7O0lBRXJCLDZCQUFnQjs7Ozs7SUFFZCwwQkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwSGVhZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBBcGlTZXJ2aWNlIHtcclxuXHJcbiAgYmFzZVVSTDogc3RyaW5nO1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50XHJcbiAgKSB7IH1cclxuXHJcbiAgICBkZW1vYXBpKHBhcmFtKSB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgaGVhZGVyczogbmV3IEh0dHBIZWFkZXJzKHtcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KHRoaXMuYmFzZVVSTCArICcvcGF0aCcsIHBhcmFtLCBvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDojrflj5blrqHmibnmhI/op4HmjqXlj6NcclxuICAgIGdldEFwcHJvdmFsQ29tbWVudEFwaShwYXJhbSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgaGVhZGVyczogbmV3IEh0dHBIZWFkZXJzKHtcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8gdGhpcy5iYXNlVVJMID0gJy9hcGkvZGV2L25vY29kZS92MS4wL21pY3JvLWFwcHMvZ2V0d29ya2l0ZW1sb2dzJztcclxuICAgICAgICB0aGlzLmJhc2VVUkwgPSAnL2FwaS9uby9jb2RlL3J1bnRpbWUvdjEuMC9nZXR3b3JraXRlbWxvZ3MnO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdCh0aGlzLmJhc2VVUkwsIHBhcmFtLCBvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDojrflj5blrqHmibnoioLngrnmjqXlj6NcclxuICAgIGdldEF1ZGl0b3JzQnlNaWNyb0FwcElkKG1pY3JvQXBwSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgaGVhZGVyczogbmV3IEh0dHBIZWFkZXJzKHtcclxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5iYXNlVVJMID0gJy9hcGkvZGV2L25vY29kZS92MS4wL21pY3JvLWFwcHMvZ2V0YXVkaXRvcnNieWFwcGlkLycgKyBtaWNyb0FwcElkO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmh0dHAuZ2V0KHRoaXMuYmFzZVVSTCwgb3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==