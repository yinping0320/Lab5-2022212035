/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, HostBinding, ElementRef, Renderer2 } from '@angular/core';
var FarrisFlexDirective = /** @class */ (function () {
    function FarrisFlexDirective(el, render) {
        this.el = el;
        this.render = render;
        this.fill = false;
        this.direction = 'row';
        this.type = 'flex';
        this.justifyContent = 'start';
        this.alignItems = 'start';
        this.displayFlex = this.type === 'flex';
        this.nativeClass = ' ';
        this.nativeClass += this.el.nativeElement.classList.value;
    }
    Object.defineProperty(FarrisFlexDirective.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            // 对各个单位进行处理
            return this._width;
        },
        set: /**
         * @param {?} width
         * @return {?}
         */
        function (width) {
            this._width = this.resolveSize(width);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisFlexDirective.prototype, "height", {
        get: /**
         * @return {?}
         */
        function () {
            return this._height;
        },
        set: /**
         * @param {?} height
         * @return {?}
         */
        function (height) {
            this._height = this.resolveSize(height);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisFlexDirective.prototype, "currentStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this.nativeClass + " " + this.getDirection() + " " + this.getJsutifyClass() + " " + this.getAlignClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisFlexDirective.prototype, "flexFill", {
        get: /**
         * @return {?}
         */
        function () {
            return this.fill;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FarrisFlexDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.render.setStyle(this.el.nativeElement, 'width', this.width);
        this.render.setStyle(this.el.nativeElement, 'height', this.height);
    };
    /**
     * @return {?}
     */
    FarrisFlexDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /*宽高类型是 string或者number 解析宽高  尺寸 */
    /*宽高类型是 string或者number 解析宽高  尺寸 */
    /**
     * @param {?} size
     * @return {?}
     */
    FarrisFlexDirective.prototype.resolveSize = /*宽高类型是 string或者number 解析宽高  尺寸 */
    /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        /** @type {?} */
        var regex = /px|em|rem|pt|%/;
        // 说明是字符串
        return regex.test(size) ? "" + parseInt(size, 10) + size.match(regex)[0] : size + "px";
    };
    /**
     * @return {?}
     */
    FarrisFlexDirective.prototype.getDirection = /**
     * @return {?}
     */
    function () {
        return this.direction !== 'row' ? "flex-" + this.direction : '';
    };
    /* 获取flex 主轴排列方式类 */
    /* 获取flex 主轴排列方式类 */
    /**
     * @return {?}
     */
    FarrisFlexDirective.prototype.getJsutifyClass = /* 获取flex 主轴排列方式类 */
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var isJustify = this.justifyContent !== 'start';
        return isJustify ? "justify-content-" + this.justifyContent : '';
    };
    /* 获取flex交叉轴 排列方式类 */
    /* 获取flex交叉轴 排列方式类 */
    /**
     * @return {?}
     */
    FarrisFlexDirective.prototype.getAlignClass = /* 获取flex交叉轴 排列方式类 */
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var isAlign = this.alignItems !== 'start';
        return isAlign ? "align-items-" + this.alignItems : '';
    };
    FarrisFlexDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-flex]'
                },] }
    ];
    /** @nocollapse */
    FarrisFlexDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    FarrisFlexDirective.propDecorators = {
        fill: [{ type: Input }],
        direction: [{ type: Input }],
        type: [{ type: Input }],
        justifyContent: [{ type: Input, args: ['justify',] }],
        alignItems: [{ type: Input, args: ['align',] }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        currentStyle: [{ type: HostBinding, args: ["class",] }],
        flexFill: [{ type: HostBinding, args: ['class.flex-fill',] }],
        displayFlex: [{ type: HostBinding, args: ['class.d-flex',] }]
    };
    return FarrisFlexDirective;
}());
export { FarrisFlexDirective };
if (false) {
    /** @type {?} */
    FarrisFlexDirective.prototype.fill;
    /** @type {?} */
    FarrisFlexDirective.prototype.direction;
    /** @type {?} */
    FarrisFlexDirective.prototype.type;
    /** @type {?} */
    FarrisFlexDirective.prototype.justifyContent;
    /** @type {?} */
    FarrisFlexDirective.prototype.alignItems;
    /** @type {?} */
    FarrisFlexDirective.prototype._width;
    /** @type {?} */
    FarrisFlexDirective.prototype._height;
    /** @type {?} */
    FarrisFlexDirective.prototype.displayFlex;
    /** @type {?} */
    FarrisFlexDirective.prototype.nativeClass;
    /**
     * @type {?}
     * @private
     */
    FarrisFlexDirective.prototype.el;
    /**
     * @type {?}
     * @private
     */
    FarrisFlexDirective.prototype.render;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWZsZXgtbGF5b3V0LyIsInNvdXJjZXMiOlsibGliL2ZsZXgtZGlyZWN0aXZlL2ZsZXguZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQVUsVUFBVSxFQUFFLFNBQVMsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDNUc7SUFzQ0ksNkJBQW9CLEVBQWMsRUFBVSxNQUFpQjtRQUF6QyxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBVztRQWxDcEQsU0FBSSxHQUFZLEtBQUssQ0FBQztRQUN0QixjQUFTLEdBQVcsS0FBSyxDQUFDO1FBQzFCLFNBQUksR0FBVyxNQUFNLENBQUM7UUFDYixtQkFBYyxHQUFXLE9BQU8sQ0FBQztRQUNuQyxlQUFVLEdBQVcsT0FBTyxDQUFDO1FBNEJoQixnQkFBVyxHQUFZLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDO1FBQ3pFLGdCQUFXLEdBQUcsR0FBRyxDQUFDO1FBRWQsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO0lBQzlELENBQUM7SUEzQkQsc0JBQ0ksc0NBQUs7Ozs7UUFEVDtZQUVJLFlBQVk7WUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDdkIsQ0FBQzs7Ozs7UUFDRCxVQUFVLEtBQVU7WUFDaEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFDLENBQUM7OztPQUhBO0lBSUQsc0JBQ0ksdUNBQU07Ozs7UUFEVjtZQUVJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDOzs7OztRQUNELFVBQVcsTUFBVztZQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUMsQ0FBQzs7O09BSEE7SUFJRCxzQkFDSSw2Q0FBWTs7OztRQURoQjtZQUVJLE9BQVUsSUFBSSxDQUFDLFdBQVcsU0FBSSxJQUFJLENBQUMsWUFBWSxFQUFFLFNBQUksSUFBSSxDQUFDLGVBQWUsRUFBRSxTQUFJLElBQUksQ0FBQyxhQUFhLEVBQUksQ0FBQztRQUMxRyxDQUFDOzs7T0FBQTtJQUNELHNCQUNJLHlDQUFROzs7O1FBRFo7WUFFSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDckIsQ0FBQzs7O09BQUE7Ozs7SUFNRCxzQ0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkUsQ0FBQzs7OztJQUNELDZDQUFlOzs7SUFBZjtJQUVBLENBQUM7SUFDRCxrQ0FBa0M7Ozs7OztJQUNsQyx5Q0FBVzs7Ozs7SUFBWCxVQUFZLElBQUk7O1lBQ04sS0FBSyxHQUFHLGdCQUFnQjtRQUM5QixTQUFTO1FBQ1QsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUcsQ0FBQyxDQUFDLENBQUksSUFBSSxPQUFJLENBQUM7SUFDM0YsQ0FBQzs7OztJQUNELDBDQUFZOzs7SUFBWjtRQUNJLE9BQU8sSUFBSSxDQUFDLFNBQVMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVEsSUFBSSxDQUFDLFNBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ3BFLENBQUM7SUFDRCxvQkFBb0I7Ozs7O0lBQ3BCLDZDQUFlOzs7O0lBQWY7O1lBQ1UsU0FBUyxHQUFHLElBQUksQ0FBQyxjQUFjLEtBQUssT0FBTztRQUVqRCxPQUFPLFNBQVMsQ0FBQyxDQUFDLENBQUMscUJBQW1CLElBQUksQ0FBQyxjQUFnQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDckUsQ0FBQztJQUNELHFCQUFxQjs7Ozs7SUFDckIsMkNBQWE7Ozs7SUFBYjs7WUFDVSxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsS0FBSyxPQUFPO1FBQzNDLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxpQkFBZSxJQUFJLENBQUMsVUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDM0QsQ0FBQzs7Z0JBbkVKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZUFBZTtpQkFDNUI7Ozs7Z0JBSCtDLFVBQVU7Z0JBQUUsU0FBUzs7O3VCQUtoRSxLQUFLOzRCQUNMLEtBQUs7dUJBQ0wsS0FBSztpQ0FDTCxLQUFLLFNBQUMsU0FBUzs2QkFDZixLQUFLLFNBQUMsT0FBTzt3QkFLYixLQUFLO3lCQVFMLEtBQUs7K0JBT0wsV0FBVyxTQUFDLE9BQU87MkJBSW5CLFdBQVcsU0FBQyxpQkFBaUI7OEJBSTdCLFdBQVcsU0FBQyxjQUFjOztJQWdDL0IsMEJBQUM7Q0FBQSxBQXBFRCxJQW9FQztTQWpFWSxtQkFBbUI7OztJQUM1QixtQ0FBK0I7O0lBQy9CLHdDQUFtQzs7SUFDbkMsbUNBQStCOztJQUMvQiw2Q0FBbUQ7O0lBQ25ELHlDQUE2Qzs7SUFHN0MscUNBQXdCOztJQUN4QixzQ0FBeUI7O0lBd0J6QiwwQ0FBeUU7O0lBQ3pFLDBDQUFrQjs7Ozs7SUFDTixpQ0FBc0I7Ozs7O0lBQUUscUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgSG9zdEJpbmRpbmcsIE9uSW5pdCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tmYXJyaXMtZmxleF0nXG59KVxuZXhwb3J0IGNsYXNzIEZhcnJpc0ZsZXhEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICAgIEBJbnB1dCgpIGZpbGw6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBASW5wdXQoKSBkaXJlY3Rpb246IHN0cmluZyA9ICdyb3cnO1xuICAgIEBJbnB1dCgpIHR5cGU6IHN0cmluZyA9ICdmbGV4JztcbiAgICBASW5wdXQoJ2p1c3RpZnknKSBqdXN0aWZ5Q29udGVudDogc3RyaW5nID0gJ3N0YXJ0JztcbiAgICBASW5wdXQoJ2FsaWduJykgYWxpZ25JdGVtczogc3RyaW5nID0gJ3N0YXJ0JztcbiAgICAvLyDlj6/ku6Xorr7nva7lrr3luqblkozpq5jluqZcbiAgICAvLyDorr7nva7lrr0g6auY5bGe5oCnXG4gICAgX3dpZHRoOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgX2hlaWdodDogc3RyaW5nIHwgbnVtYmVyO1xuICAgIEBJbnB1dCgpXG4gICAgZ2V0IHdpZHRoKCkge1xuICAgICAgICAvLyDlr7nlkITkuKrljZXkvY3ov5vooYzlpITnkIZcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dpZHRoO1xuICAgIH1cbiAgICBzZXQgd2lkdGgod2lkdGg6IGFueSkge1xuICAgICAgICB0aGlzLl93aWR0aCA9IHRoaXMucmVzb2x2ZVNpemUod2lkdGgpO1xuICAgIH1cbiAgICBASW5wdXQoKVxuICAgIGdldCBoZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9oZWlnaHQ7XG4gICAgfVxuICAgIHNldCBoZWlnaHQoaGVpZ2h0OiBhbnkpIHtcbiAgICAgICAgdGhpcy5faGVpZ2h0ID0gdGhpcy5yZXNvbHZlU2l6ZShoZWlnaHQpO1xuICAgIH1cbiAgICBASG9zdEJpbmRpbmcoYGNsYXNzYClcbiAgICBnZXQgY3VycmVudFN0eWxlKCkge1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5uYXRpdmVDbGFzc30gJHt0aGlzLmdldERpcmVjdGlvbigpfSAke3RoaXMuZ2V0SnN1dGlmeUNsYXNzKCl9ICR7dGhpcy5nZXRBbGlnbkNsYXNzKCl9YDtcbiAgICB9XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mbGV4LWZpbGwnKVxuICAgIGdldCBmbGV4RmlsbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsbDtcbiAgICB9XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5kLWZsZXgnKSBkaXNwbGF5RmxleDogYm9vbGVhbiA9IHRoaXMudHlwZSA9PT0gJ2ZsZXgnO1xuICAgIG5hdGl2ZUNsYXNzID0gJyAnO1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyOiBSZW5kZXJlcjIpIHtcbiAgICAgICAgdGhpcy5uYXRpdmVDbGFzcyArPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LnZhbHVlO1xuICAgIH1cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5yZW5kZXIuc2V0U3R5bGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnd2lkdGgnLCB0aGlzLndpZHRoKTtcbiAgICAgICAgdGhpcy5yZW5kZXIuc2V0U3R5bGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnaGVpZ2h0JywgdGhpcy5oZWlnaHQpO1xuICAgIH1cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG5cbiAgICB9XG4gICAgLyrlrr3pq5jnsbvlnovmmK8gc3RyaW5n5oiW6ICFbnVtYmVyIOino+aekOWuvemrmCAg5bC65a+4ICovXG4gICAgcmVzb2x2ZVNpemUoc2l6ZSkge1xuICAgICAgICBjb25zdCByZWdleCA9IC9weHxlbXxyZW18cHR8JS87XG4gICAgICAgIC8vIOivtOaYjuaYr+Wtl+espuS4slxuICAgICAgICByZXR1cm4gcmVnZXgudGVzdChzaXplKSA/IGAke3BhcnNlSW50KHNpemUsIDEwKX0ke3NpemUubWF0Y2gocmVnZXgpWzBdfWAgOiBgJHtzaXplfXB4YDtcbiAgICB9XG4gICAgZ2V0RGlyZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kaXJlY3Rpb24gIT09ICdyb3cnID8gYGZsZXgtJHt0aGlzLmRpcmVjdGlvbn1gIDogJyc7XG4gICAgfVxuICAgIC8qIOiOt+WPlmZsZXgg5Li76L205o6S5YiX5pa55byP57G7ICovXG4gICAgZ2V0SnN1dGlmeUNsYXNzKCkge1xuICAgICAgICBjb25zdCBpc0p1c3RpZnkgPSB0aGlzLmp1c3RpZnlDb250ZW50ICE9PSAnc3RhcnQnO1xuXG4gICAgICAgIHJldHVybiBpc0p1c3RpZnkgPyBganVzdGlmeS1jb250ZW50LSR7dGhpcy5qdXN0aWZ5Q29udGVudH1gIDogJyc7XG4gICAgfVxuICAgIC8qIOiOt+WPlmZsZXjkuqTlj4novbQg5o6S5YiX5pa55byP57G7ICovXG4gICAgZ2V0QWxpZ25DbGFzcygpIHtcbiAgICAgICAgY29uc3QgaXNBbGlnbiA9IHRoaXMuYWxpZ25JdGVtcyAhPT0gJ3N0YXJ0JztcbiAgICAgICAgcmV0dXJuIGlzQWxpZ24gPyBgYWxpZ24taXRlbXMtJHt0aGlzLmFsaWduSXRlbXN9YCA6ICcnO1xuICAgIH1cbn1cbiJdfQ==