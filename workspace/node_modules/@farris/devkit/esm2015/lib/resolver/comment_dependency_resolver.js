import { Injectable } from "@angular/core";
/**
 * 用户自定义参数解析器
 */
export class CommentDependencyResolver {
    resolve(expr) {
        const dependencies = [];
        if (!expr || expr.length < 1) {
            return dependencies;
        }
        const defineRegex = /\/\*\*\s*__define__\((.*)\)\s*\*\//;
        const defineMatchArray = expr.match(defineRegex);
        if (defineMatchArray && defineMatchArray.length === 2) {
            const defineString = defineMatchArray[1].trim();
            let defineObject = null;
            try {
                defineObject = JSON.parse(defineString);
            }
            catch (e) {
                console.warn(`自定义依赖解析失败：${defineString}`);
            }
            if (defineObject && defineObject.hasOwnProperty('deps') && Array.isArray(defineObject['deps'])) {
                dependencies.push(...defineObject['deps']);
            }
        }
        return dependencies;
    }
}
CommentDependencyResolver.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudF9kZXBlbmRlbmN5X3Jlc29sdmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvcmVzb2x2ZXIvY29tbWVudF9kZXBlbmRlbmN5X3Jlc29sdmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0M7O0dBRUc7QUFFSCxNQUFNLE9BQU8seUJBQXlCO0lBQzdCLE9BQU8sQ0FBQyxJQUFZO1FBQ3pCLE1BQU0sWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzVCLE9BQU8sWUFBWSxDQUFDO1NBQ3JCO1FBQ0QsTUFBTSxXQUFXLEdBQUcsb0NBQW9DLENBQUM7UUFDekQsTUFBTSxnQkFBZ0IsR0FBcUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNuRSxJQUFJLGdCQUFnQixJQUFJLGdCQUFnQixDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDckQsTUFBTSxZQUFZLEdBQVcsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDeEQsSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQ3hCLElBQUk7Z0JBQ0YsWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7YUFDekM7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsWUFBWSxFQUFFLENBQUMsQ0FBQzthQUFFO1lBQzFELElBQUksWUFBWSxJQUFJLFlBQVksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtnQkFDOUYsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2FBQzVDO1NBQ0Y7UUFDRCxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDOzs7WUFwQkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBJUmVzb2x2ZXIgfSBmcm9tIFwiLi90eXBlc1wiO1xyXG4vKipcclxuICog55So5oi36Ieq5a6a5LmJ5Y+C5pWw6Kej5p6Q5ZmoXHJcbiAqL1xyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBDb21tZW50RGVwZW5kZW5jeVJlc29sdmVyIGltcGxlbWVudHMgSVJlc29sdmVyIHtcclxuICBwdWJsaWMgcmVzb2x2ZShleHByOiBzdHJpbmcpOiBzdHJpbmdbXSB7XHJcbiAgICBjb25zdCBkZXBlbmRlbmNpZXMgPSBbXTtcclxuICAgIGlmICghZXhwciB8fCBleHByLmxlbmd0aCA8IDEpIHtcclxuICAgICAgcmV0dXJuIGRlcGVuZGVuY2llcztcclxuICAgIH1cclxuICAgIGNvbnN0IGRlZmluZVJlZ2V4ID0gL1xcL1xcKlxcKlxccypfX2RlZmluZV9fXFwoKC4qKVxcKVxccypcXCpcXC8vO1xyXG4gICAgY29uc3QgZGVmaW5lTWF0Y2hBcnJheTogUmVnRXhwTWF0Y2hBcnJheSA9IGV4cHIubWF0Y2goZGVmaW5lUmVnZXgpO1xyXG4gICAgaWYgKGRlZmluZU1hdGNoQXJyYXkgJiYgZGVmaW5lTWF0Y2hBcnJheS5sZW5ndGggPT09IDIpIHtcclxuICAgICAgY29uc3QgZGVmaW5lU3RyaW5nOiBzdHJpbmcgPSBkZWZpbmVNYXRjaEFycmF5WzFdLnRyaW0oKTtcclxuICAgICAgbGV0IGRlZmluZU9iamVjdCA9IG51bGw7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgZGVmaW5lT2JqZWN0ID0gSlNPTi5wYXJzZShkZWZpbmVTdHJpbmcpO1xyXG4gICAgICB9IGNhdGNoIChlKSB7IGNvbnNvbGUud2Fybihg6Ieq5a6a5LmJ5L6d6LWW6Kej5p6Q5aSx6LSl77yaJHtkZWZpbmVTdHJpbmd9YCk7IH1cclxuICAgICAgaWYgKGRlZmluZU9iamVjdCAmJiBkZWZpbmVPYmplY3QuaGFzT3duUHJvcGVydHkoJ2RlcHMnKSAmJiBBcnJheS5pc0FycmF5KGRlZmluZU9iamVjdFsnZGVwcyddKSkge1xyXG4gICAgICAgIGRlcGVuZGVuY2llcy5wdXNoKC4uLmRlZmluZU9iamVjdFsnZGVwcyddKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGRlcGVuZGVuY2llcztcclxuICB9XHJcbn0iXX0=