const CONTEXT_FUNCTIONS = ['GetContextParameter', 'GetSessionValue'];
export class StateDependencyResolver {
    resolve(expr) {
        const deps = [];
        const regex = new RegExp(`DefaultFunction\\.(${CONTEXT_FUNCTIONS.join('|')})\\s*\\([^\\r\\n\\)]*\\)`, 'g');
        const contextFunctions = expr.match(regex);
        if (contextFunctions && contextFunctions.length > 0) {
            // todo: 使用正则匹配时可能会因为参数中有逗号导致问题，后续使用ast解析
            const argumentsRegex = /\(([^\r\n\)]*)\)/;
            contextFunctions.forEach((groupFunction) => {
                const argumentMatchResult = groupFunction.match(argumentsRegex);
                if (argumentMatchResult.length === 2) {
                    const argument = argumentMatchResult[1].trim().replace(/\"/g, '');
                    const dep = ['STATE~'];
                    dep.push(argument);
                    deps.push(dep.join('/'));
                }
            });
        }
        return deps;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGVfZGVwZW5kZW5jeV9yZXNvbHZlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3Jlc29sdmVyL3N0YXRlX2RlcGVuZGVuY3lfcmVzb2x2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLHFCQUFxQixFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFDckUsTUFBTSxPQUFPLHVCQUF1QjtJQUMzQixPQUFPLENBQUMsSUFBWTtRQUN6QixNQUFNLElBQUksR0FBRyxFQUFFLENBQUM7UUFDaEIsTUFBTSxLQUFLLEdBQUcsSUFBSSxNQUFNLENBQUMsc0JBQXNCLGlCQUFpQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDM0csTUFBTSxnQkFBZ0IsR0FBcUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3RCxJQUFJLGdCQUFnQixJQUFJLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbkQseUNBQXlDO1lBQ3pDLE1BQU0sY0FBYyxHQUFHLGtCQUFrQixDQUFDO1lBQzFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDLGFBQXFCLEVBQUUsRUFBRTtnQkFDakQsTUFBTSxtQkFBbUIsR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO2dCQUNoRSxJQUFJLG1CQUFtQixDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7b0JBQ3BDLE1BQU0sUUFBUSxHQUFHLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ2pFLE1BQU0sR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7b0JBQ3ZCLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7b0JBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2lCQUMxQjtZQUNILENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElSZXNvbHZlciB9IGZyb20gXCIuL3R5cGVzXCI7XHJcbmNvbnN0IENPTlRFWFRfRlVOQ1RJT05TID0gWydHZXRDb250ZXh0UGFyYW1ldGVyJywgJ0dldFNlc3Npb25WYWx1ZSddO1xyXG5leHBvcnQgY2xhc3MgU3RhdGVEZXBlbmRlbmN5UmVzb2x2ZXIgaW1wbGVtZW50cyBJUmVzb2x2ZXIge1xyXG4gIHB1YmxpYyByZXNvbHZlKGV4cHI6IHN0cmluZyk6IHN0cmluZ1tdIHtcclxuICAgIGNvbnN0IGRlcHMgPSBbXTtcclxuICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChgRGVmYXVsdEZ1bmN0aW9uXFxcXC4oJHtDT05URVhUX0ZVTkNUSU9OUy5qb2luKCd8Jyl9KVxcXFxzKlxcXFwoW15cXFxcclxcXFxuXFxcXCldKlxcXFwpYCwgJ2cnKTtcclxuICAgIGNvbnN0IGNvbnRleHRGdW5jdGlvbnM6IFJlZ0V4cE1hdGNoQXJyYXkgPSBleHByLm1hdGNoKHJlZ2V4KTtcclxuICAgIGlmIChjb250ZXh0RnVuY3Rpb25zICYmIGNvbnRleHRGdW5jdGlvbnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAvLyB0b2RvOiDkvb/nlKjmraPliJnljLnphY3ml7blj6/og73kvJrlm6DkuLrlj4LmlbDkuK3mnInpgJflj7flr7zoh7Tpl67popjvvIzlkI7nu63kvb/nlKhhc3Top6PmnpBcclxuICAgICAgY29uc3QgYXJndW1lbnRzUmVnZXggPSAvXFwoKFteXFxyXFxuXFwpXSopXFwpLztcclxuICAgICAgY29udGV4dEZ1bmN0aW9ucy5mb3JFYWNoKChncm91cEZ1bmN0aW9uOiBzdHJpbmcpID0+IHtcclxuICAgICAgICBjb25zdCBhcmd1bWVudE1hdGNoUmVzdWx0ID0gZ3JvdXBGdW5jdGlvbi5tYXRjaChhcmd1bWVudHNSZWdleCk7XHJcbiAgICAgICAgaWYgKGFyZ3VtZW50TWF0Y2hSZXN1bHQubGVuZ3RoID09PSAyKSB7XHJcbiAgICAgICAgICBjb25zdCBhcmd1bWVudCA9IGFyZ3VtZW50TWF0Y2hSZXN1bHRbMV0udHJpbSgpLnJlcGxhY2UoL1xcXCIvZywnJyk7XHJcbiAgICAgICAgICBjb25zdCBkZXAgPSBbJ1NUQVRFfiddO1xyXG4gICAgICAgICAgZGVwLnB1c2goYXJndW1lbnQpO1xyXG4gICAgICAgICAgZGVwcy5wdXNoKGRlcC5qb2luKCcvJykpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGVwcztcclxuICB9XHJcbn0iXX0=