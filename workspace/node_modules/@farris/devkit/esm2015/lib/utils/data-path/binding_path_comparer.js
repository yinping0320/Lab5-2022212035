import { BindingPathConverter } from './binding_path_converter';
/**
 * BindingPath比较器
 */
class BindingPathComparer {
    /**
     * 是否相等
     */
    static isEqual(srcPath, dstPath) {
        const srcPathArray = BindingPathConverter.toBindingPathArray(srcPath);
        const dstPathArray = BindingPathConverter.toBindingPathArray(dstPath);
        const isEqual = srcPathArray.every((srcPathItem, srcPathIndex) => {
            return srcPathItem === dstPathArray[srcPathIndex];
        });
        return isEqual;
    }
    /**
     * 是否是父路径
     */
    static isParent(childPath, parentPath) {
        const childPathArray = BindingPathConverter.toBindingPathArray(childPath);
        const parentPathArray = BindingPathConverter.toBindingPathArray(parentPath);
        // 长度差1个
        if (childPathArray.length !== parentPathArray.length + 1) {
            return;
        }
        return this.isAncestor(childPath, parentPath);
    }
    /**
     * 是否是祖先路径
     */
    static isAncestor(descendantPath, ancestorPath) {
        const descendantPathArray = BindingPathConverter.toBindingPathArray(descendantPath);
        const ancestorPathArray = BindingPathConverter.toBindingPathArray(ancestorPath);
        if (descendantPath.length <= ancestorPathArray.length) {
            return false;
        }
        const isAncestor = ancestorPathArray.every((ancestorPathItem, ancestorPathIndex) => {
            return ancestorPathItem === descendantPathArray[ancestorPathIndex];
        });
        return isAncestor;
    }
}
export { BindingPathComparer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZGluZ19wYXRoX2NvbXBhcmVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvZGF0YS1wYXRoL2JpbmRpbmdfcGF0aF9jb21wYXJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVoRTs7R0FFRztBQUNILE1BQU0sbUJBQW1CO0lBRXZCOztPQUVHO0lBQ0ksTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUEwQixFQUFFLE9BQTBCO1FBQzFFLE1BQU0sWUFBWSxHQUFHLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3RFLE1BQU0sWUFBWSxHQUFHLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXRFLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxXQUFtQixFQUFFLFlBQW9CLEVBQUUsRUFBRTtZQUMvRSxPQUFPLFdBQVcsS0FBSyxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDcEQsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQTRCLEVBQUUsVUFBNkI7UUFFaEYsTUFBTSxjQUFjLEdBQUksb0JBQW9CLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDM0UsTUFBTSxlQUFlLEdBQUcsb0JBQW9CLENBQUMsa0JBQWtCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFNUUsUUFBUTtRQUNSLElBQUksY0FBYyxDQUFDLE1BQU0sS0FBSyxlQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUN4RCxPQUFPO1NBQ1I7UUFFRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU0sQ0FBQyxVQUFVLENBQUMsY0FBaUMsRUFBRSxZQUErQjtRQUN6RixNQUFNLG1CQUFtQixHQUFHLG9CQUFvQixDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3BGLE1BQU0saUJBQWlCLEdBQUssb0JBQW9CLENBQUMsa0JBQWtCLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFbEYsSUFBSSxjQUFjLENBQUMsTUFBTSxJQUFJLGlCQUFpQixDQUFDLE1BQU0sRUFBRTtZQUNyRCxPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsTUFBTSxVQUFVLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsZ0JBQXdCLEVBQUUsaUJBQXlCLEVBQUUsRUFBRTtZQUNqRyxPQUFPLGdCQUFnQixLQUFLLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDckUsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0NBRUY7QUFFRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpbmRpbmdQYXRoQ29udmVydGVyIH0gZnJvbSAnLi9iaW5kaW5nX3BhdGhfY29udmVydGVyJztcclxuXHJcbi8qKlxyXG4gKiBCaW5kaW5nUGF0aOavlOi+g+WZqFxyXG4gKi9cclxuY2xhc3MgQmluZGluZ1BhdGhDb21wYXJlciB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOaYr+WQpuebuOetiVxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgaXNFcXVhbChzcmNQYXRoOiBzdHJpbmcgfCBzdHJpbmdbXSwgZHN0UGF0aDogc3RyaW5nIHwgc3RyaW5nW10pIHtcclxuICAgIGNvbnN0IHNyY1BhdGhBcnJheSA9IEJpbmRpbmdQYXRoQ29udmVydGVyLnRvQmluZGluZ1BhdGhBcnJheShzcmNQYXRoKTtcclxuICAgIGNvbnN0IGRzdFBhdGhBcnJheSA9IEJpbmRpbmdQYXRoQ29udmVydGVyLnRvQmluZGluZ1BhdGhBcnJheShkc3RQYXRoKTtcclxuXHJcbiAgICBjb25zdCBpc0VxdWFsID0gc3JjUGF0aEFycmF5LmV2ZXJ5KChzcmNQYXRoSXRlbTogc3RyaW5nLCBzcmNQYXRoSW5kZXg6IG51bWJlcikgPT4ge1xyXG4gICAgICByZXR1cm4gc3JjUGF0aEl0ZW0gPT09IGRzdFBhdGhBcnJheVtzcmNQYXRoSW5kZXhdO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGlzRXF1YWw7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmmK/lkKbmmK/niLbot6/lvoRcclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIGlzUGFyZW50KGNoaWxkUGF0aDogc3RyaW5nIHwgc3RyaW5nW10sIHBhcmVudFBhdGg6IHN0cmluZyB8IHN0cmluZ1tdKTogYm9vbGVhbiB7XHJcblxyXG4gICAgY29uc3QgY2hpbGRQYXRoQXJyYXkgID0gQmluZGluZ1BhdGhDb252ZXJ0ZXIudG9CaW5kaW5nUGF0aEFycmF5KGNoaWxkUGF0aCk7XHJcbiAgICBjb25zdCBwYXJlbnRQYXRoQXJyYXkgPSBCaW5kaW5nUGF0aENvbnZlcnRlci50b0JpbmRpbmdQYXRoQXJyYXkocGFyZW50UGF0aCk7XHJcblxyXG4gICAgLy8g6ZW/5bqm5beuMeS4qlxyXG4gICAgaWYgKGNoaWxkUGF0aEFycmF5Lmxlbmd0aCAhPT0gcGFyZW50UGF0aEFycmF5Lmxlbmd0aCArIDEpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLmlzQW5jZXN0b3IoY2hpbGRQYXRoLCBwYXJlbnRQYXRoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaYr+WQpuaYr+elluWFiOi3r+W+hFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgaXNBbmNlc3RvcihkZXNjZW5kYW50UGF0aDogc3RyaW5nIHwgc3RyaW5nW10sIGFuY2VzdG9yUGF0aDogc3RyaW5nIHwgc3RyaW5nW10pOiBib29sZWFuIHtcclxuICAgIGNvbnN0IGRlc2NlbmRhbnRQYXRoQXJyYXkgPSBCaW5kaW5nUGF0aENvbnZlcnRlci50b0JpbmRpbmdQYXRoQXJyYXkoZGVzY2VuZGFudFBhdGgpO1xyXG4gICAgY29uc3QgYW5jZXN0b3JQYXRoQXJyYXkgICA9IEJpbmRpbmdQYXRoQ29udmVydGVyLnRvQmluZGluZ1BhdGhBcnJheShhbmNlc3RvclBhdGgpO1xyXG5cclxuICAgIGlmIChkZXNjZW5kYW50UGF0aC5sZW5ndGggPD0gYW5jZXN0b3JQYXRoQXJyYXkubGVuZ3RoKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBpc0FuY2VzdG9yID0gYW5jZXN0b3JQYXRoQXJyYXkuZXZlcnkoKGFuY2VzdG9yUGF0aEl0ZW06IHN0cmluZywgYW5jZXN0b3JQYXRoSW5kZXg6IG51bWJlcikgPT4ge1xyXG4gICAgICByZXR1cm4gYW5jZXN0b3JQYXRoSXRlbSA9PT0gZGVzY2VuZGFudFBhdGhBcnJheVthbmNlc3RvclBhdGhJbmRleF07XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gaXNBbmNlc3RvcjtcclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgeyBCaW5kaW5nUGF0aENvbXBhcmVyIH07XHJcbiJdfQ==