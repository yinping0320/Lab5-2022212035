import { Injectable, Optional } from '@angular/core';
import { Subject } from 'rxjs';
import { ListenerRegistry } from './listener_registry';
/**
 * 监听器
 * @description 监听bindingList、UIState变更
 */
class Listeners {
    constructor(registry) {
        this.registry = registry;
        this.subject = new Subject();
        this.regist();
    }
    get onEvent() {
        return this.subject;
    }
    regist() {
        const listeners = this.registry && this.registry.listeners || [];
        if (listeners && listeners.length > 0) {
            listeners.forEach((listener) => {
                listener.onEvent.subscribe((modification) => {
                    this.subject.next(modification);
                });
            });
        }
    }
}
Listeners.decorators = [
    { type: Injectable }
];
/** @nocollapse */
Listeners.ctorParameters = () => [
    { type: ListenerRegistry, decorators: [{ type: Optional }] }
];
export { Listeners };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGVuZXJzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvbGlzdGVuZXIvbGlzdGVuZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBVSxVQUFVLEVBQVksUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFNdkQ7OztHQUdHO0FBQ0gsTUFDTSxTQUFTO0lBS2IsWUFBZ0MsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7UUFKbEQsWUFBTyxHQUF1QixJQUFJLE9BQU8sRUFBYSxDQUFDO1FBSzdELElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBTEQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBSU8sTUFBTTtRQUNaLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDO1FBQ2pFLElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ3JDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFrQixFQUFFLEVBQUU7Z0JBQ3ZDLFFBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsWUFBdUIsRUFBRSxFQUFFO29CQUNyRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDbEMsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQzs7O1lBbEJGLFVBQVU7Ozs7WUFWRixnQkFBZ0IsdUJBZ0JWLFFBQVE7O0FBY3ZCLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSwgSW5qZWN0b3IsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgTGlzdGVuZXJSZWdpc3RyeSB9IGZyb20gJy4vbGlzdGVuZXJfcmVnaXN0cnknO1xyXG5pbXBvcnQgeyBFeHByZXNzaW9uIH0gZnJvbSAnLi4vZXhwcmVzc2lvbi9pbmRleCc7XHJcblxyXG50eXBlIEV2ZW50QXJncyA9IEV4cHJlc3Npb24uRXZlbnRBcmdzO1xyXG50eXBlIExpc3RlbmVyID0gRXhwcmVzc2lvbi5MaXN0ZW5lcjtcclxuXHJcbi8qKlxyXG4gKiDnm5HlkKzlmahcclxuICogQGRlc2NyaXB0aW9uIOebkeWQrGJpbmRpbmdMaXN044CBVUlTdGF0ZeWPmOabtFxyXG4gKi9cclxuQEluamVjdGFibGUoKVxyXG5jbGFzcyBMaXN0ZW5lcnMge1xyXG4gIHByaXZhdGUgc3ViamVjdDogU3ViamVjdDxFdmVudEFyZ3M+ID0gbmV3IFN1YmplY3Q8RXZlbnRBcmdzPigpO1xyXG4gIHB1YmxpYyBnZXQgb25FdmVudCgpOiBPYnNlcnZhYmxlPEV2ZW50QXJncz4ge1xyXG4gICAgcmV0dXJuIHRoaXMuc3ViamVjdDtcclxuICB9XHJcbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgcHJpdmF0ZSByZWdpc3RyeTogTGlzdGVuZXJSZWdpc3RyeSkge1xyXG4gICAgdGhpcy5yZWdpc3QoKTtcclxuICB9XHJcbiAgcHJpdmF0ZSByZWdpc3QoKSB7XHJcbiAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLnJlZ2lzdHJ5ICYmIHRoaXMucmVnaXN0cnkubGlzdGVuZXJzIHx8IFtdO1xyXG4gICAgaWYgKGxpc3RlbmVycyAmJiBsaXN0ZW5lcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICBsaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXI6IExpc3RlbmVyKSA9PiB7XHJcbiAgICAgICAgbGlzdGVuZXIub25FdmVudC5zdWJzY3JpYmUoKG1vZGlmaWNhdGlvbjogRXZlbnRBcmdzKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnN1YmplY3QubmV4dChtb2RpZmljYXRpb24pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuZXhwb3J0IHsgTGlzdGVuZXJzIH07XHJcbiJdfQ==