/**
 * 绑定列表工厂相关定义
 * @author Witt<jiwt@inspur.com>
 */
import { BindingListTypeFactory } from './binding_list_type_factory';
/**
 * BindingList工厂用于创建一个空的BindingList对象，并将当前行的属性影射到BindingList对象上。
 *
 * **示例代码**
 * ```ts
 * const deptProperties: BindingProperty[] = PropertyUtil.getProperties(DeptEntity);
 * const deptList = BindingListFactory.create(deptProperties);
 * ```
 */
class BindingListFactory {
    /**
     * 创建BindingList实例，并扩展其属性
     * @param bindingProperties 绑定属性集合
     */
    static create(bindingProperties) {
        // const bindingList = new BindingList(bindingProperties);
        // this.extendProperties(bindingList, bindingProperties);
        const bindingList = BindingListTypeFactory.create(bindingProperties);
        return bindingList;
    }
    /**
     * 扩展BindingList属性，将当前行上的属性映射到列表上
     * @param bindingList       要扩展的绑定列表
     * @param bindingProperties 绑定属性集合
     */
    static extendProperties(bindingList, bindingProperties) {
        bindingProperties.forEach((bindingProperty) => {
            const propertyName = bindingProperty.name;
            Object.defineProperty(bindingList, propertyName, {
                get: () => {
                    return bindingList.currentItem[propertyName];
                }
            });
        });
    }
}
export { BindingListFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluZGluZ19saXN0X2ZhY3RvcnkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2RldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9iaW5kaW5nLWRhdGEvYmluZGluZ19saXN0X2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBR0gsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFHckU7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLGtCQUFrQjtJQUV0Qjs7O09BR0c7SUFDSCxNQUFNLENBQUMsTUFBTSxDQUFDLGlCQUFvQztRQUNoRCwwREFBMEQ7UUFDMUQseURBQXlEO1FBQ3pELE1BQU0sV0FBVyxHQUFHLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3JFLE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFdBQXdCLEVBQUUsaUJBQW9DO1FBQ3BGLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDLGVBQWdDLEVBQUUsRUFBRTtZQUM3RCxNQUFNLFlBQVksR0FBRyxlQUFlLENBQUMsSUFBSSxDQUFDO1lBQzFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLFlBQVksRUFBRTtnQkFDL0MsR0FBRyxFQUFFLEdBQUcsRUFBRTtvQkFDUixPQUFPLFdBQVcsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQy9DLENBQUM7YUFDRixDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQUVELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIOe7keWumuWIl+ihqOW3peWOguebuOWFs+WumuS5iVxyXG4gKiBAYXV0aG9yIFdpdHQ8aml3dEBpbnNwdXIuY29tPlxyXG4gKi9cclxuXHJcbmltcG9ydCB7IEJpbmRpbmdMaXN0IH0gZnJvbSAnLi9iaW5kaW5nX2xpc3QnO1xyXG5pbXBvcnQgeyBCaW5kaW5nTGlzdFR5cGVGYWN0b3J5IH0gZnJvbSAnLi9iaW5kaW5nX2xpc3RfdHlwZV9mYWN0b3J5JztcclxuaW1wb3J0IHsgQmluZGluZ1Byb3BlcnR5IH0gZnJvbSAnLi9iaW5kaW5nX3Byb3BlcnR5JztcclxuXHJcbi8qKlxyXG4gKiBCaW5kaW5nTGlzdOW3peWOgueUqOS6juWIm+W7uuS4gOS4quepuueahEJpbmRpbmdMaXN05a+56LGh77yM5bm25bCG5b2T5YmN6KGM55qE5bGe5oCn5b2x5bCE5YiwQmluZGluZ0xpc3Tlr7nosaHkuIrjgIJcclxuICpcclxuICogKirnpLrkvovku6PnoIEqKlxyXG4gKiBgYGB0c1xyXG4gKiBjb25zdCBkZXB0UHJvcGVydGllczogQmluZGluZ1Byb3BlcnR5W10gPSBQcm9wZXJ0eVV0aWwuZ2V0UHJvcGVydGllcyhEZXB0RW50aXR5KTtcclxuICogY29uc3QgZGVwdExpc3QgPSBCaW5kaW5nTGlzdEZhY3RvcnkuY3JlYXRlKGRlcHRQcm9wZXJ0aWVzKTtcclxuICogYGBgXHJcbiAqL1xyXG5jbGFzcyBCaW5kaW5nTGlzdEZhY3Rvcnkge1xyXG5cclxuICAvKipcclxuICAgKiDliJvlu7pCaW5kaW5nTGlzdOWunuS+i++8jOW5tuaJqeWxleWFtuWxnuaAp1xyXG4gICAqIEBwYXJhbSBiaW5kaW5nUHJvcGVydGllcyDnu5HlrprlsZ7mgKfpm4blkIhcclxuICAgKi9cclxuICBzdGF0aWMgY3JlYXRlKGJpbmRpbmdQcm9wZXJ0aWVzOiBCaW5kaW5nUHJvcGVydHlbXSk6IEJpbmRpbmdMaXN0IHtcclxuICAgIC8vIGNvbnN0IGJpbmRpbmdMaXN0ID0gbmV3IEJpbmRpbmdMaXN0KGJpbmRpbmdQcm9wZXJ0aWVzKTtcclxuICAgIC8vIHRoaXMuZXh0ZW5kUHJvcGVydGllcyhiaW5kaW5nTGlzdCwgYmluZGluZ1Byb3BlcnRpZXMpO1xyXG4gICAgY29uc3QgYmluZGluZ0xpc3QgPSBCaW5kaW5nTGlzdFR5cGVGYWN0b3J5LmNyZWF0ZShiaW5kaW5nUHJvcGVydGllcyk7XHJcbiAgICByZXR1cm4gYmluZGluZ0xpc3Q7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmianlsZVCaW5kaW5nTGlzdOWxnuaAp++8jOWwhuW9k+WJjeihjOS4iueahOWxnuaAp+aYoOWwhOWIsOWIl+ihqOS4ilxyXG4gICAqIEBwYXJhbSBiaW5kaW5nTGlzdCAgICAgICDopoHmianlsZXnmoTnu5HlrprliJfooahcclxuICAgKiBAcGFyYW0gYmluZGluZ1Byb3BlcnRpZXMg57uR5a6a5bGe5oCn6ZuG5ZCIXHJcbiAgICovXHJcbiAgc3RhdGljIGV4dGVuZFByb3BlcnRpZXMoYmluZGluZ0xpc3Q6IEJpbmRpbmdMaXN0LCBiaW5kaW5nUHJvcGVydGllczogQmluZGluZ1Byb3BlcnR5W10pIHtcclxuICAgIGJpbmRpbmdQcm9wZXJ0aWVzLmZvckVhY2goKGJpbmRpbmdQcm9wZXJ0eTogQmluZGluZ1Byb3BlcnR5KSA9PiB7XHJcbiAgICAgIGNvbnN0IHByb3BlcnR5TmFtZSA9IGJpbmRpbmdQcm9wZXJ0eS5uYW1lO1xyXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYmluZGluZ0xpc3QsIHByb3BlcnR5TmFtZSwge1xyXG4gICAgICAgIGdldDogKCkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIGJpbmRpbmdMaXN0LmN1cnJlbnRJdGVtW3Byb3BlcnR5TmFtZV07XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgQmluZGluZ0xpc3RGYWN0b3J5IH07XHJcblxyXG4iXX0=