/*
 * StateMachine变量解析
 * @Author: Witt
 * @Date: 2018-12-04 17:09:42
 * @Last Modified by: Witt
 * @Last Modified time: 2019-10-30 11:07:10
 */
// import { AppContext } from '../app/index';
// import { FrameContext } from '../frame/index';
// import { CommandContext } from '../command/index';
/**
 * 解析辅助工具类
 */
class ParseUtil {
    /**
     * 获取应用上下文
     */
    static getAppContext(context) {
        if (context.typeName === 'CommandContext') {
            return context.frameContext.appContext;
        }
        else if (context.appContext) {
            return context.appContext;
        }
        else if (context.typeName === 'AppContext') {
            return context;
        }
        else {
            throw new Error('上下文中找不到AppContext，请检查！');
        }
    }
    /**
     * 获取当前Frame的Context
     */
    static getFrameContext(context) {
        if (context.typeName === 'CommandContext') {
            return context.frameContext;
        }
        else if (context.typeName === 'FrameContext') {
            return context;
        }
        else {
            throw new Error('上下文中找不到FrameContext，请检查！');
        }
    }
    /**
     * 获取根Frame的Context
     */
    static getRootFrameContext(context) {
        const frameContext = this.getFrameContext(context);
        return frameContext.root;
    }
    /**
     * 根据frameId获取FrameContext
     */
    static getFrameContextById(context, frameId) {
        const appContext = this.getAppContext(context);
        return appContext.frameContextManager.getFrameContextById(frameId);
    }
}
export { ParseUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VfdXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3ZhcmlhYmxlL3BhcnNlX3V0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsNkNBQTZDO0FBQzdDLGlEQUFpRDtBQUNqRCxxREFBcUQ7QUFFckQ7O0dBRUc7QUFDSCxNQUFNLFNBQVM7SUFFYjs7T0FFRztJQUNILE1BQU0sQ0FBQyxhQUFhLENBQUMsT0FBWTtRQUMvQixJQUFJLE9BQU8sQ0FBQyxRQUFRLEtBQUssZ0JBQWdCLEVBQUU7WUFDekMsT0FBTyxPQUFPLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQztTQUN4QzthQUFNLElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtZQUM3QixPQUFPLE9BQU8sQ0FBQyxVQUFVLENBQUM7U0FDM0I7YUFBTSxJQUFJLE9BQU8sQ0FBQyxRQUFRLEtBQUssWUFBWSxFQUFFO1lBQzVDLE9BQU8sT0FBTyxDQUFDO1NBQ2hCO2FBQU07WUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLHdCQUF3QixDQUFDLENBQUM7U0FDM0M7SUFDSCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNLENBQUMsZUFBZSxDQUFDLE9BQVk7UUFDakMsSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLGdCQUFnQixFQUFFO1lBQ3pDLE9BQU8sT0FBTyxDQUFDLFlBQVksQ0FBQztTQUM3QjthQUFNLElBQUksT0FBTyxDQUFDLFFBQVEsS0FBSyxjQUFjLEVBQUU7WUFDOUMsT0FBTyxPQUFPLENBQUM7U0FDaEI7YUFBTTtZQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztTQUM3QztJQUVILENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxPQUFZO1FBQ3JDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbkQsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDO0lBQzNCLENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxPQUFZLEVBQUUsT0FBZTtRQUN0RCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQy9DLE9BQU8sVUFBVSxDQUFDLG1CQUFtQixDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRjtBQUVELE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFN0YXRlTWFjaGluZeWPmOmHj+ino+aekFxyXG4gKiBAQXV0aG9yOiBXaXR0XHJcbiAqIEBEYXRlOiAyMDE4LTEyLTA0IDE3OjA5OjQyXHJcbiAqIEBMYXN0IE1vZGlmaWVkIGJ5OiBXaXR0XHJcbiAqIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTktMTAtMzAgMTE6MDc6MTBcclxuICovXHJcblxyXG4vLyBpbXBvcnQgeyBBcHBDb250ZXh0IH0gZnJvbSAnLi4vYXBwL2luZGV4JztcclxuLy8gaW1wb3J0IHsgRnJhbWVDb250ZXh0IH0gZnJvbSAnLi4vZnJhbWUvaW5kZXgnO1xyXG4vLyBpbXBvcnQgeyBDb21tYW5kQ29udGV4dCB9IGZyb20gJy4uL2NvbW1hbmQvaW5kZXgnO1xyXG5cclxuLyoqXHJcbiAqIOino+aekOi+heWKqeW3peWFt+exu1xyXG4gKi9cclxuY2xhc3MgUGFyc2VVdGlsIHtcclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5bqU55So5LiK5LiL5paHXHJcbiAgICovXHJcbiAgc3RhdGljIGdldEFwcENvbnRleHQoY29udGV4dDogYW55KTogYW55IHtcclxuICAgIGlmIChjb250ZXh0LnR5cGVOYW1lID09PSAnQ29tbWFuZENvbnRleHQnKSB7XHJcbiAgICAgIHJldHVybiBjb250ZXh0LmZyYW1lQ29udGV4dC5hcHBDb250ZXh0O1xyXG4gICAgfSBlbHNlIGlmIChjb250ZXh0LmFwcENvbnRleHQpIHtcclxuICAgICAgcmV0dXJuIGNvbnRleHQuYXBwQ29udGV4dDtcclxuICAgIH0gZWxzZSBpZiAoY29udGV4dC50eXBlTmFtZSA9PT0gJ0FwcENvbnRleHQnKSB7XHJcbiAgICAgIHJldHVybiBjb250ZXh0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCfkuIrkuIvmlofkuK3mib7kuI3liLBBcHBDb250ZXh077yM6K+35qOA5p+l77yBJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5blvZPliY1GcmFtZeeahENvbnRleHRcclxuICAgKi9cclxuICBzdGF0aWMgZ2V0RnJhbWVDb250ZXh0KGNvbnRleHQ6IGFueSkge1xyXG4gICAgaWYgKGNvbnRleHQudHlwZU5hbWUgPT09ICdDb21tYW5kQ29udGV4dCcpIHtcclxuICAgICAgcmV0dXJuIGNvbnRleHQuZnJhbWVDb250ZXh0O1xyXG4gICAgfSBlbHNlIGlmIChjb250ZXh0LnR5cGVOYW1lID09PSAnRnJhbWVDb250ZXh0Jykge1xyXG4gICAgICByZXR1cm4gY29udGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcign5LiK5LiL5paH5Lit5om+5LiN5YiwRnJhbWVDb250ZXh077yM6K+35qOA5p+l77yBJyk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5qC5RnJhbWXnmoRDb250ZXh0XHJcbiAgICovXHJcbiAgc3RhdGljIGdldFJvb3RGcmFtZUNvbnRleHQoY29udGV4dDogYW55KTogYW55IHtcclxuICAgIGNvbnN0IGZyYW1lQ29udGV4dCA9IHRoaXMuZ2V0RnJhbWVDb250ZXh0KGNvbnRleHQpO1xyXG4gICAgcmV0dXJuIGZyYW1lQ29udGV4dC5yb290O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5qC55o2uZnJhbWVJZOiOt+WPlkZyYW1lQ29udGV4dFxyXG4gICAqL1xyXG4gIHN0YXRpYyBnZXRGcmFtZUNvbnRleHRCeUlkKGNvbnRleHQ6IGFueSwgZnJhbWVJZDogc3RyaW5nKTogYW55IHtcclxuICAgIGNvbnN0IGFwcENvbnRleHQgPSB0aGlzLmdldEFwcENvbnRleHQoY29udGV4dCk7XHJcbiAgICByZXR1cm4gYXBwQ29udGV4dC5mcmFtZUNvbnRleHRNYW5hZ2VyLmdldEZyYW1lQ29udGV4dEJ5SWQoZnJhbWVJZCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBQYXJzZVV0aWwgfTtcclxuIl19