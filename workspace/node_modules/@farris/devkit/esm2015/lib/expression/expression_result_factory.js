import { Injectable, Injector } from "@angular/core";
import { ExpressionManager } from "./expression_manager";
;
import { ExpressionRegistry } from "./expression_registry";
import { ExpressionResult } from "./expression_result";
export class ExpressionResultFactory {
    constructor(injector, expressionRegistry, expressionManager, expressionResult) {
        this.injector = injector;
        this.expressionRegistry = expressionRegistry;
        this.expressionManager = expressionManager;
        this.expressionResult = expressionResult;
        this.registeEvent();
    }
    registeEvent() {
        this.expressionRegistry.expressions.subscribe((expressionObjects) => {
            // 加载完表达式之后做一次计算
            expressionObjects.forEach((expressionObject) => {
                if (expressionObject.deps && expressionObject.deps.length > 0) {
                    return;
                }
                const result = this.expressionManager.eval(expressionObject.id);
                this.expressionResult[expressionObject.id] = result;
            });
        });
    }
}
ExpressionResultFactory.decorators = [
    { type: Injectable }
];
/** @nocollapse */
ExpressionResultFactory.ctorParameters = () => [
    { type: Injector },
    { type: ExpressionRegistry },
    { type: ExpressionManager },
    { type: ExpressionResult }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc2lvbl9yZXN1bHRfZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2V4cHJlc3Npb24vZXhwcmVzc2lvbl9yZXN1bHRfZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUFBLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUE7QUFJdEQsTUFBTSxPQUFPLHVCQUF1QjtJQUNsQyxZQUFvQixRQUFrQixFQUFVLGtCQUFzQyxFQUFVLGlCQUFvQyxFQUFVLGdCQUFrQztRQUE1SixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQVUsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUFVLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFBVSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQzlLLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBQ08sWUFBWTtRQUNsQixJQUFJLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLGlCQUFnRCxFQUFFLEVBQUU7WUFDakcsZ0JBQWdCO1lBQ2hCLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDLGdCQUE2QyxFQUFFLEVBQUU7Z0JBQzFFLElBQUksZ0JBQWdCLENBQUMsSUFBSSxJQUFJLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO29CQUM3RCxPQUFPO2lCQUNSO2dCQUNELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7Z0JBQ2hFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUM7WUFDdEQsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7OztZQWhCRixVQUFVOzs7O1lBTlUsUUFBUTtZQUVwQixrQkFBa0I7WUFEbEIsaUJBQWlCO1lBRWpCLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdG9yIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRXhwcmVzc2lvbk1hbmFnZXIgfSBmcm9tIFwiLi9leHByZXNzaW9uX21hbmFnZXJcIjs7XHJcbmltcG9ydCB7IEV4cHJlc3Npb25SZWdpc3RyeSB9IGZyb20gXCIuL2V4cHJlc3Npb25fcmVnaXN0cnlcIjtcclxuaW1wb3J0IHsgRXhwcmVzc2lvblJlc3VsdCB9IGZyb20gXCIuL2V4cHJlc3Npb25fcmVzdWx0XCJcclxuaW1wb3J0IHsgRXhwcmVzc2lvbiB9IGZyb20gXCIuL3R5cGVzXCI7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBFeHByZXNzaW9uUmVzdWx0RmFjdG9yeSB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgZXhwcmVzc2lvblJlZ2lzdHJ5OiBFeHByZXNzaW9uUmVnaXN0cnksIHByaXZhdGUgZXhwcmVzc2lvbk1hbmFnZXI6IEV4cHJlc3Npb25NYW5hZ2VyLCBwcml2YXRlIGV4cHJlc3Npb25SZXN1bHQ6IEV4cHJlc3Npb25SZXN1bHQpIHtcclxuICAgIHRoaXMucmVnaXN0ZUV2ZW50KCk7XHJcbiAgfVxyXG4gIHByaXZhdGUgcmVnaXN0ZUV2ZW50KCkge1xyXG4gICAgdGhpcy5leHByZXNzaW9uUmVnaXN0cnkuZXhwcmVzc2lvbnMuc3Vic2NyaWJlKChleHByZXNzaW9uT2JqZWN0czogRXhwcmVzc2lvbi5FeHByZXNzaW9uT2JqZWN0W10pID0+IHtcclxuICAgICAgLy8g5Yqg6L295a6M6KGo6L6+5byP5LmL5ZCO5YGa5LiA5qyh6K6h566XXHJcbiAgICAgIGV4cHJlc3Npb25PYmplY3RzLmZvckVhY2goKGV4cHJlc3Npb25PYmplY3Q6IEV4cHJlc3Npb24uRXhwcmVzc2lvbk9iamVjdCkgPT4ge1xyXG4gICAgICAgIGlmIChleHByZXNzaW9uT2JqZWN0LmRlcHMgJiYgZXhwcmVzc2lvbk9iamVjdC5kZXBzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5leHByZXNzaW9uTWFuYWdlci5ldmFsKGV4cHJlc3Npb25PYmplY3QuaWQpO1xyXG4gICAgICAgIHRoaXMuZXhwcmVzc2lvblJlc3VsdFtleHByZXNzaW9uT2JqZWN0LmlkXSA9IHJlc3VsdDtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn0iXX0=