/**
 * 组件实例管理
 */
export class ComponentRefManager {
    constructor() {
        this.components = new Map();
    }
    /**
     * 增加组件实例
     * @param id
     * @param component
     */
    add(id, component) {
        const components = this.components.get(id);
        if (components) {
            components.push(component);
        }
        else {
            this.components.set(id, [component]);
        }
    }
    /**
     * 删除组件实例
     * @param id
     */
    remove(id) {
        const components = this.components.get(id);
        if (components && components.length > 0) {
            components.length = 0;
            this.components.delete(id);
        }
    }
    /**
     * 通过id获取组件实例
     * @param id
     * @returns
     */
    get(id) {
        if (id) {
            const components = this.components.get(id);
            if (components && components.length > 0) {
                return components;
            }
        }
        return null;
    }
    /**
     * 是否包含id的组件
     * @param id
     * @returns
     */
    has(id) {
        return this.components.has(id);
    }
    /**
     * 清空
     */
    clear() {
        this.components.clear();
    }
    /**
     * 获取指定类型的组件
     * @param componentType
     * @returns
     */
    getComponentByType(componentType) {
        const containers = Array.from(this.components.values());
        let component = null;
        for (let containerIndex = 0; containers && containerIndex < containers.length; containerIndex++) {
            const components = containers[containerIndex];
            for (let index = 0; components && index < components.length; index++) {
                if (components[index] instanceof componentType) {
                    component = components[index];
                    break;
                }
            }
        }
        return component;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50X3JlZl9tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvZnJhbWUvY29tcG9uZW50X3JlZl9tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBOztHQUVHO0FBQ0gsTUFBTSxPQUFPLG1CQUFtQjtJQUFoQztRQUNVLGVBQVUsR0FBdUIsSUFBSSxHQUFHLEVBQWlCLENBQUM7SUF3RXBFLENBQUM7SUF2RUM7Ozs7T0FJRztJQUNJLEdBQUcsQ0FBQyxFQUFVLEVBQUUsU0FBYztRQUNuQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMzQyxJQUFJLFVBQVUsRUFBRTtZQUNkLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDNUI7YUFBTTtZQUNMLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLEVBQVU7UUFDdEIsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0MsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdkMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDNUI7SUFDSCxDQUFDO0lBQ0Q7Ozs7T0FJRztJQUNJLEdBQUcsQ0FBQyxFQUFVO1FBQ25CLElBQUksRUFBRSxFQUFFO1lBQ04sTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDM0MsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ3ZDLE9BQU8sVUFBVSxDQUFDO2FBQ25CO1NBQ0Y7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRDs7OztPQUlHO0lBQ0ksR0FBRyxDQUFDLEVBQVU7UUFDbkIsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBQ0Q7O09BRUc7SUFDSSxLQUFLO1FBQ1YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBQ0Q7Ozs7T0FJRztJQUNJLGtCQUFrQixDQUFDLGFBQWtCO1FBQzFDLE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1FBQ3hELElBQUksU0FBUyxHQUFHLElBQUksQ0FBQztRQUNyQixLQUFLLElBQUksY0FBYyxHQUFHLENBQUMsRUFBRSxVQUFVLElBQUksY0FBYyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsY0FBYyxFQUFFLEVBQUU7WUFDL0YsTUFBTSxVQUFVLEdBQUcsVUFBVSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQzlDLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLFVBQVUsSUFBSSxLQUFLLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDcEUsSUFBSSxVQUFVLENBQUMsS0FBSyxDQUFDLFlBQVksYUFBYSxFQUFFO29CQUM5QyxTQUFTLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO29CQUM5QixNQUFNO2lCQUNQO2FBQ0Y7U0FDRjtRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudFJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbi8qKlxyXG4gKiDnu4Tku7blrp7kvovnrqHnkIZcclxuICovXHJcbmV4cG9ydCBjbGFzcyBDb21wb25lbnRSZWZNYW5hZ2VyIHtcclxuICBwcml2YXRlIGNvbXBvbmVudHM6IE1hcDxzdHJpbmcsIGFueVtdPiA9IG5ldyBNYXA8c3RyaW5nLCBhbnlbXT4oKTtcclxuICAvKipcclxuICAgKiDlop7liqDnu4Tku7blrp7kvotcclxuICAgKiBAcGFyYW0gaWQgXHJcbiAgICogQHBhcmFtIGNvbXBvbmVudCBcclxuICAgKi9cclxuICBwdWJsaWMgYWRkKGlkOiBzdHJpbmcsIGNvbXBvbmVudDogYW55KSB7XHJcbiAgICBjb25zdCBjb21wb25lbnRzID0gdGhpcy5jb21wb25lbnRzLmdldChpZCk7XHJcbiAgICBpZiAoY29tcG9uZW50cykge1xyXG4gICAgICBjb21wb25lbnRzLnB1c2goY29tcG9uZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuY29tcG9uZW50cy5zZXQoaWQsIFtjb21wb25lbnRdKTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqXHJcbiAgICog5Yig6Zmk57uE5Lu25a6e5L6LXHJcbiAgICogQHBhcmFtIGlkIFxyXG4gICAqL1xyXG4gIHB1YmxpYyByZW1vdmUoaWQ6IHN0cmluZykge1xyXG4gICAgY29uc3QgY29tcG9uZW50cyA9IHRoaXMuY29tcG9uZW50cy5nZXQoaWQpO1xyXG4gICAgaWYgKGNvbXBvbmVudHMgJiYgY29tcG9uZW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbXBvbmVudHMubGVuZ3RoID0gMDtcclxuICAgICAgdGhpcy5jb21wb25lbnRzLmRlbGV0ZShpZCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOmAmui/h2lk6I635Y+W57uE5Lu25a6e5L6LXHJcbiAgICogQHBhcmFtIGlkIFxyXG4gICAqIEByZXR1cm5zIFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQoaWQ6IHN0cmluZykge1xyXG4gICAgaWYgKGlkKSB7XHJcbiAgICAgIGNvbnN0IGNvbXBvbmVudHMgPSB0aGlzLmNvbXBvbmVudHMuZ2V0KGlkKTtcclxuICAgICAgaWYgKGNvbXBvbmVudHMgJiYgY29tcG9uZW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudHM7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDmmK/lkKbljIXlkKtpZOeahOe7hOS7tlxyXG4gICAqIEBwYXJhbSBpZCBcclxuICAgKiBAcmV0dXJucyBcclxuICAgKi9cclxuICBwdWJsaWMgaGFzKGlkOiBzdHJpbmcpIHtcclxuICAgIHJldHVybiB0aGlzLmNvbXBvbmVudHMuaGFzKGlkKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog5riF56m6XHJcbiAgICovXHJcbiAgcHVibGljIGNsZWFyKCkge1xyXG4gICAgdGhpcy5jb21wb25lbnRzLmNsZWFyKCk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluaMh+Wumuexu+Wei+eahOe7hOS7tlxyXG4gICAqIEBwYXJhbSBjb21wb25lbnRUeXBlIFxyXG4gICAqIEByZXR1cm5zIFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRDb21wb25lbnRCeVR5cGUoY29tcG9uZW50VHlwZTogYW55KTogYW55IHtcclxuICAgIGNvbnN0IGNvbnRhaW5lcnMgPSBBcnJheS5mcm9tKHRoaXMuY29tcG9uZW50cy52YWx1ZXMoKSk7XHJcbiAgICBsZXQgY29tcG9uZW50ID0gbnVsbDtcclxuICAgIGZvciAobGV0IGNvbnRhaW5lckluZGV4ID0gMDsgY29udGFpbmVycyAmJiBjb250YWluZXJJbmRleCA8IGNvbnRhaW5lcnMubGVuZ3RoOyBjb250YWluZXJJbmRleCsrKSB7XHJcbiAgICAgIGNvbnN0IGNvbXBvbmVudHMgPSBjb250YWluZXJzW2NvbnRhaW5lckluZGV4XTtcclxuICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBjb21wb25lbnRzICYmIGluZGV4IDwgY29tcG9uZW50cy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICBpZiAoY29tcG9uZW50c1tpbmRleF0gaW5zdGFuY2VvZiBjb21wb25lbnRUeXBlKSB7XHJcbiAgICAgICAgICBjb21wb25lbnQgPSBjb21wb25lbnRzW2luZGV4XTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcclxuICB9XHJcbn0iXX0=