import { Injectable } from '@angular/core';
/**
 * 路由参数服务
 */
class RouterParamService {
    /**
     * 获取参数
     */
    getParams(url) {
        const allParams = this.getAllParams();
        return allParams[url] || {};
    }
    /**
     * 设置参数
     */
    setParams(url, params) {
        const allParams = this.getAllParams();
        allParams[url] = params;
        this.setAllParams(allParams);
    }
    /**
     * 清空参数
     */
    clearParams() {
        throw new Error('Not Implemented');
    }
    /**
     * 获取全部参数
     */
    getAllParams() {
        const allParamsJson = window.sessionStorage.getItem('ROUTER_PARAMS') || '{}';
        const allParams = JSON.parse(allParamsJson);
        return allParams;
    }
    /**
     * 设置所有的参数
     */
    setAllParams(allParams) {
        allParams = allParams || {};
        const allParamsJson = JSON.stringify(allParams);
        window.sessionStorage.setItem('ROUTER_PARAMS', allParamsJson);
    }
    /**
     * 清空所有参数
     */
    clearAllParams() {
        window.sessionStorage.setItem('ROUTER_PARAMS', '{}');
    }
}
RouterParamService.decorators = [
    { type: Injectable }
];
export { RouterParamService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLXBhcmFtLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2RldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9taXNjL3JvdXRlci1wYXJhbS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0M7O0dBRUc7QUFDSCxNQUNNLGtCQUFrQjtJQUV0Qjs7T0FFRztJQUNJLFNBQVMsQ0FBQyxHQUFXO1FBQzFCLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN0QyxPQUFPLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVEOztPQUVHO0lBQ0ksU0FBUyxDQUFDLEdBQVcsRUFBRSxNQUFXO1FBQ3ZDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN0QyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVEOztPQUVHO0lBQ0ksV0FBVztRQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWTtRQUNqQixNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsSUFBSSxJQUFJLENBQUM7UUFDN0UsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM1QyxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBRUQ7O09BRUc7SUFDSSxZQUFZLENBQUMsU0FBYztRQUNoQyxTQUFTLEdBQUcsU0FBUyxJQUFJLEVBQUUsQ0FBQztRQUM1QixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBRUQ7O09BRUc7SUFDSSxjQUFjO1FBQ25CLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDOzs7WUFsREYsVUFBVTs7QUFxRFgsT0FBTyxFQUFFLGtCQUFrQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG4vKipcclxuICog6Lev55Sx5Y+C5pWw5pyN5YqhXHJcbiAqL1xyXG5ASW5qZWN0YWJsZSgpXHJcbmNsYXNzIFJvdXRlclBhcmFtU2VydmljZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWPguaVsFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRQYXJhbXModXJsOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgY29uc3QgYWxsUGFyYW1zID0gdGhpcy5nZXRBbGxQYXJhbXMoKTtcclxuICAgIHJldHVybiBhbGxQYXJhbXNbdXJsXSB8fCB7fTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9ruWPguaVsFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXRQYXJhbXModXJsOiBzdHJpbmcsIHBhcmFtczogYW55KSB7XHJcbiAgICBjb25zdCBhbGxQYXJhbXMgPSB0aGlzLmdldEFsbFBhcmFtcygpO1xyXG4gICAgYWxsUGFyYW1zW3VybF0gPSBwYXJhbXM7XHJcbiAgICB0aGlzLnNldEFsbFBhcmFtcyhhbGxQYXJhbXMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5riF56m65Y+C5pWwXHJcbiAgICovXHJcbiAgcHVibGljIGNsZWFyUGFyYW1zKCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgSW1wbGVtZW50ZWQnKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWFqOmDqOWPguaVsFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRBbGxQYXJhbXMoKTogYW55IHtcclxuICAgIGNvbnN0IGFsbFBhcmFtc0pzb24gPSB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnUk9VVEVSX1BBUkFNUycpIHx8ICd7fSc7XHJcbiAgICBjb25zdCBhbGxQYXJhbXMgPSBKU09OLnBhcnNlKGFsbFBhcmFtc0pzb24pO1xyXG4gICAgcmV0dXJuIGFsbFBhcmFtcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiuvue9ruaJgOacieeahOWPguaVsFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzZXRBbGxQYXJhbXMoYWxsUGFyYW1zOiBhbnkpOiB2b2lkIHtcclxuICAgIGFsbFBhcmFtcyA9IGFsbFBhcmFtcyB8fCB7fTtcclxuICAgIGNvbnN0IGFsbFBhcmFtc0pzb24gPSBKU09OLnN0cmluZ2lmeShhbGxQYXJhbXMpO1xyXG4gICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ1JPVVRFUl9QQVJBTVMnLCBhbGxQYXJhbXNKc29uKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOa4heepuuaJgOacieWPguaVsFxyXG4gICAqL1xyXG4gIHB1YmxpYyBjbGVhckFsbFBhcmFtcygpIHtcclxuICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdST1VURVJfUEFSQU1TJywgJ3t9Jyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBSb3V0ZXJQYXJhbVNlcnZpY2UgfTtcclxuIl19