/**
 * 变更检测控制器
 */
class ChangeDetectionController {
    /**
     * 构造函数
     */
    constructor(frameContextManager) {
        this.frameContextManager = frameContextManager;
    }
    /**
     * 所有的FrameContext数组
     */
    get frameContexts() {
        return this.frameContextManager.getFrameContexts();
    }
    /**
     * 将所有的FrameComponent重新加入到变更检测树
     * @todo
     * 1、该方法仅供数据源变更产生大量变更时优化性能使用；
     * 2、加setTimeout来保证数据变更流完成之后，再执行变更检测，目前父对象是通过subscribe监听子对象变化，导致产生异步；
     * 3、应该从根本上解决该问题，而不是setTimeout。
     */
    reattach() {
        setTimeout(() => {
            this.frameContexts.forEach((frameContext) => {
                frameContext.frameComponent.reattach();
                frameContext.frameComponent.detectChanges();
            });
        });
    }
    /**
     * 将所有的FrameComponent脱离变更检测树
     */
    detach() {
        this.frameContexts.forEach((frameContext) => {
            frameContext.frameComponent.detach();
        });
    }
}
export { ChangeDetectionController };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlX2RldGVjdGlvbl9jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvYXBwL2NoYW5nZV9kZXRlY3Rpb25fY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTs7R0FFRztBQUNILE1BQU0seUJBQXlCO0lBUzdCOztPQUVHO0lBQ0gsWUFBb0IsbUJBQXdDO1FBQXhDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7SUFDNUQsQ0FBQztJQVhEOztPQUVHO0lBQ0gsSUFBWSxhQUFhO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDckQsQ0FBQztJQVFEOzs7Ozs7T0FNRztJQUNJLFFBQVE7UUFDYixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxZQUEwQixFQUFFLEVBQUU7Z0JBQ3hELFlBQVksQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ3ZDLFlBQVksQ0FBQyxjQUFjLENBQUMsYUFBYSxFQUFFLENBQUM7WUFDOUMsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNJLE1BQU07UUFDWCxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQTBCLEVBQUUsRUFBRTtZQUN4RCxZQUFZLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBRUQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGcmFtZUNvbnRleHQgfSBmcm9tICcuLi9mcmFtZS9pbmRleCc7XHJcbmltcG9ydCB7IEZyYW1lQ29udGV4dE1hbmFnZXIgfSBmcm9tICcuL2ZyYW1lX2NvbnRleF9tYW5hZ2VyJztcclxuXHJcbi8qKlxyXG4gKiDlj5jmm7Tmo4DmtYvmjqfliLblmahcclxuICovXHJcbmNsYXNzIENoYW5nZURldGVjdGlvbkNvbnRyb2xsZXIge1xyXG5cclxuICAvKipcclxuICAgKiDmiYDmnInnmoRGcmFtZUNvbnRleHTmlbDnu4RcclxuICAgKi9cclxuICBwcml2YXRlIGdldCBmcmFtZUNvbnRleHRzKCk6IEZyYW1lQ29udGV4dFtdIHtcclxuICAgIHJldHVybiB0aGlzLmZyYW1lQ29udGV4dE1hbmFnZXIuZ2V0RnJhbWVDb250ZXh0cygpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Ye95pWwXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBmcmFtZUNvbnRleHRNYW5hZ2VyOiBGcmFtZUNvbnRleHRNYW5hZ2VyKSB7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlsIbmiYDmnInnmoRGcmFtZUNvbXBvbmVudOmHjeaWsOWKoOWFpeWIsOWPmOabtOajgOa1i+agkVxyXG4gICAqIEB0b2RvXHJcbiAgICogMeOAgeivpeaWueazleS7heS+m+aVsOaNrua6kOWPmOabtOS6p+eUn+Wkp+mHj+WPmOabtOaXtuS8mOWMluaAp+iDveS9v+eUqO+8m1xyXG4gICAqIDLjgIHliqBzZXRUaW1lb3V05p2l5L+d6K+B5pWw5o2u5Y+Y5pu05rWB5a6M5oiQ5LmL5ZCO77yM5YaN5omn6KGM5Y+Y5pu05qOA5rWL77yM55uu5YmN54i25a+56LGh5piv6YCa6L+Hc3Vic2NyaWJl55uR5ZCs5a2Q5a+56LGh5Y+Y5YyW77yM5a+86Ie05Lqn55Sf5byC5q2l77ybXHJcbiAgICogM+OAgeW6lOivpeS7juagueacrOS4iuino+WGs+ivpemXrumimO+8jOiAjOS4jeaYr3NldFRpbWVvdXTjgIJcclxuICAgKi9cclxuICBwdWJsaWMgcmVhdHRhY2goKTogdm9pZCB7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgdGhpcy5mcmFtZUNvbnRleHRzLmZvckVhY2goKGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KSA9PiB7XHJcbiAgICAgICAgZnJhbWVDb250ZXh0LmZyYW1lQ29tcG9uZW50LnJlYXR0YWNoKCk7XHJcbiAgICAgICAgZnJhbWVDb250ZXh0LmZyYW1lQ29tcG9uZW50LmRldGVjdENoYW5nZXMoKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWwhuaJgOacieeahEZyYW1lQ29tcG9uZW506ISx56a75Y+Y5pu05qOA5rWL5qCRXHJcbiAgICovXHJcbiAgcHVibGljIGRldGFjaCgpOiB2b2lkIHtcclxuICAgIHRoaXMuZnJhbWVDb250ZXh0cy5mb3JFYWNoKChmcmFtZUNvbnRleHQ6IEZyYW1lQ29udGV4dCkgPT4ge1xyXG4gICAgICBmcmFtZUNvbnRleHQuZnJhbWVDb21wb25lbnQuZGV0YWNoKCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IENoYW5nZURldGVjdGlvbkNvbnRyb2xsZXIgfTtcclxuIl19