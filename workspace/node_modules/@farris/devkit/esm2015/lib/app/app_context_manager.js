/**
 * The manager for all appContexts.
 * @summary
 * 1, The generator create unique frameId dynamically for each frameContext in the combination forms.
 * 2, Combined form and Host form visit each other by these unique frameIds.
 * 3, Now we make these forms has own appContext, they can't visit each other in old way.
 * 4, For compatible purpose, we collect all appContexts together and search frameContext in these appContexts by unque frameId.
 */
class AppContextManager {
    /**
     * constructor
     */
    constructor() {
        this.appContextSet = new Set();
    }
    /**
     * Register AppContext
     */
    registerAppContext(appContext) {
        this.appContextSet.add(appContext);
    }
    /**
     * Unregister AppContext
     */
    unregisterAppContext(appContext) {
        this.appContextSet.delete(appContext);
    }
    /**
     * Get an array of all AppContexts.
     */
    getAppContexts() {
        return Array.from(this.appContextSet);
    }
}
export { AppContextManager };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwX2NvbnRleHRfbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2FwcC9hcHBfY29udGV4dF9tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLGlCQUFpQjtJQU9yQjs7T0FFRztJQUNIO1FBQ0UsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLEdBQUcsRUFBYyxDQUFDO0lBQzdDLENBQUM7SUFFRDs7T0FFRztJQUNJLGtCQUFrQixDQUFDLFVBQXNCO1FBQzlDLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRDs7T0FFRztJQUNJLG9CQUFvQixDQUFDLFVBQXNCO1FBQ2hELElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRDs7T0FFRztJQUNJLGNBQWM7UUFDbkIsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN4QyxDQUFDO0NBRUY7QUFFRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcENvbnRleHQgfSBmcm9tICcuL2FwcF9jb250ZXh0JztcclxuXHJcbi8qKlxyXG4gKiBUaGUgbWFuYWdlciBmb3IgYWxsIGFwcENvbnRleHRzLlxyXG4gKiBAc3VtbWFyeVxyXG4gKiAxLCBUaGUgZ2VuZXJhdG9yIGNyZWF0ZSB1bmlxdWUgZnJhbWVJZCBkeW5hbWljYWxseSBmb3IgZWFjaCBmcmFtZUNvbnRleHQgaW4gdGhlIGNvbWJpbmF0aW9uIGZvcm1zLlxyXG4gKiAyLCBDb21iaW5lZCBmb3JtIGFuZCBIb3N0IGZvcm0gdmlzaXQgZWFjaCBvdGhlciBieSB0aGVzZSB1bmlxdWUgZnJhbWVJZHMuXHJcbiAqIDMsIE5vdyB3ZSBtYWtlIHRoZXNlIGZvcm1zIGhhcyBvd24gYXBwQ29udGV4dCwgdGhleSBjYW4ndCB2aXNpdCBlYWNoIG90aGVyIGluIG9sZCB3YXkuXHJcbiAqIDQsIEZvciBjb21wYXRpYmxlIHB1cnBvc2UsIHdlIGNvbGxlY3QgYWxsIGFwcENvbnRleHRzIHRvZ2V0aGVyIGFuZCBzZWFyY2ggZnJhbWVDb250ZXh0IGluIHRoZXNlIGFwcENvbnRleHRzIGJ5IHVucXVlIGZyYW1lSWQuXHJcbiAqL1xyXG5jbGFzcyBBcHBDb250ZXh0TWFuYWdlciB7XHJcblxyXG4gIC8qKlxyXG4gICAqIEFwcENvbnRleHQgU2V0XHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhcHBDb250ZXh0U2V0OiBTZXQ8QXBwQ29udGV4dD47XHJcblxyXG4gIC8qKlxyXG4gICAqIGNvbnN0cnVjdG9yXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmFwcENvbnRleHRTZXQgPSBuZXcgU2V0PEFwcENvbnRleHQ+KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWdpc3RlciBBcHBDb250ZXh0XHJcbiAgICovXHJcbiAgcHVibGljIHJlZ2lzdGVyQXBwQ29udGV4dChhcHBDb250ZXh0OiBBcHBDb250ZXh0KTogdm9pZCB7XHJcbiAgICB0aGlzLmFwcENvbnRleHRTZXQuYWRkKGFwcENvbnRleHQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVW5yZWdpc3RlciBBcHBDb250ZXh0XHJcbiAgICovXHJcbiAgcHVibGljIHVucmVnaXN0ZXJBcHBDb250ZXh0KGFwcENvbnRleHQ6IEFwcENvbnRleHQpOiB2b2lkIHtcclxuICAgIHRoaXMuYXBwQ29udGV4dFNldC5kZWxldGUoYXBwQ29udGV4dCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgYW4gYXJyYXkgb2YgYWxsIEFwcENvbnRleHRzLlxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRBcHBDb250ZXh0cygpOiBBcHBDb250ZXh0W10ge1xyXG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5hcHBDb250ZXh0U2V0KTtcclxuICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgeyBBcHBDb250ZXh0TWFuYWdlciB9O1xyXG4iXX0=