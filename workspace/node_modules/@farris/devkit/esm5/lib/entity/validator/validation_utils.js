/**
 * 数据验证帮助类，提供一些公共的操作方法函数
 */
var ValidationUtils = /** @class */ (function () {
    function ValidationUtils() {
    }
    /**
     * 将错误信息集合转变为可读性高的文本数组
     * @param errors 验证失败错误集合
     * @param messages 返回的错误信息文本集合
     * @param parentPath 验证属性上级路径
     */
    ValidationUtils.createDetailedErrorMessage = function (errors, messages, parentPath) {
        if (messages === void 0) { messages = []; }
        if (parentPath === void 0) { parentPath = ''; }
        errors.forEach(function (error) {
            var targetName = error.target ? error.target.constructor.name : '';
            var property = error.propertyName;
            var propConstraintFailed = function (propertyName) {
                return "   - \u5C5E\u6027 " + parentPath + propertyName + " \u9A8C\u8BC1\u5931\u8D25\u7684\u89C4\u5219:  \n" +
                    ("" + Object.keys(error.constraints)
                        .map(function (ruleName) {
                        return "        #" + ruleName + ": " + error.constraints[ruleName] + "\n";
                    })
                        .join(''));
            };
            if (!parentPath) {
                messages.push("\u7C7B\u578B\u4E3A " + targetName + " \u7684\u5B9E\u4F8B\u5BF9\u8C61\u6570\u636E\u9A8C\u8BC1\u5931\u8D25\uFF0C\u8BE6\u7EC6\u4FE1\u606F\uFF1A\n");
                if (error.constraints) {
                    messages.push(propConstraintFailed(property));
                }
                if (error.children.length) {
                    ValidationUtils.createDetailedErrorMessage(error.children, messages, property);
                }
            }
            else {
                var formattedProperty = Number.isInteger(+error.index)
                    ? "[" + error.index + "]." + property
                    : "" + (parentPath ? "." : "") + property;
                if (error.constraints) {
                    messages.push(propConstraintFailed(formattedProperty));
                }
                if (error.children.length) {
                    ValidationUtils.createDetailedErrorMessage(error.children, messages, "" + parentPath + formattedProperty);
                }
            }
        });
        return messages;
    };
    /**
     * 错误信息集合转换为简单对象格式
     * @param errors 错误信息集合
     * @param errObj 返回简单对象。如:
     * ```
     * { name: { required: '必填', max: '最大值99' },
     *   list: {
     *      0: { name:{required: '必填'},
     *           age: { min: '最小值 20' }
     *         },
     *      2: { ... }
     *   }
     * }
     *
     * ```
     */
    ValidationUtils.convertErrorsToNormalObject = function (errors, errObj) {
        errors.forEach(function (err) {
            var property = err.propertyName;
            var buildArray = function (childErrors) {
                var itemErr = {};
                childErrors.forEach(function (childErr) {
                    var _a, _b;
                    if (childErr.children.length) {
                        itemErr[childErr.index] = ValidationUtils.convertErrorsToNormalObject(childErr.children, childErr);
                    }
                    else {
                        if (itemErr[childErr.index]) {
                            itemErr[childErr.index] = Object.assign({}, itemErr[childErr.index], (_a = {},
                                _a[childErr.propertyName] = childErr.constraints,
                                _a));
                        }
                        else {
                            itemErr[childErr.index] = (_b = {}, _b[childErr.propertyName] = childErr.constraints, _b);
                        }
                    }
                });
                return itemErr;
            };
            if (!err.isArray) {
                if (!err.children.length) {
                    errObj[property] = err.constraints;
                }
                else {
                    errObj[property] = ValidationUtils.convertErrorsToNormalObject(err.children, errObj);
                }
            }
            else {
                errObj[property] = buildArray(err.children);
            }
        });
        return errObj;
    };
    return ValidationUtils;
}());
export { ValidationUtils };
//# sourceMappingURL=data:application/json;base64,