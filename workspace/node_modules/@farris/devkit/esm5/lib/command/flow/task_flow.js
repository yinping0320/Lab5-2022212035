/*
 * @Author: Witt
 * @Date: 2018-10-17 14:13:40
 * @Last Modified by: Witt
 * @Last Modified time: 2018-10-17 16:08:34
 */
import { TaskNode } from './task_node';
import { TaskLink } from './task_link';
/**
 * 任务执行流程
 */
var TaskFlow = /** @class */ (function () {
    function TaskFlow() {
        /**
         * 节点集合
         */
        this.nodes = [];
        /**
         * 边集合
         */
        this.links = [];
        // #endregion
    }
    // #region 节点操作
    /**
     * 添加节点
     */
    TaskFlow.prototype.addNode = function (name, func) {
        var node = new TaskNode(name, func);
        this.nodes.push(node);
    };
    /**
     * 批量添加链接
     */
    TaskFlow.prototype.addNodes = function (nodes) {
        this.nodes = this.nodes.concat(nodes);
    };
    /**
     * 在目标节点之前插入一个节点
     * @param target 目标节点名称
     * @param name 名称
     * @param func 函数
     */
    TaskFlow.prototype.insertNode = function (target, name, func) {
        var index = this.findNodeIndex(target);
        var node = this.createNode(name, func);
        this.nodes.splice(index, 0, node);
    };
    /**
     * 在目标节点之前插入一个节点
     */
    TaskFlow.prototype.appendNode = function (target, name, func) {
        var index = this.findNodeIndex(target) + 1;
        var node = this.createNode(name, func);
        this.nodes.splice(index, 0, node);
    };
    /**
     * 获取节点索引
     * @param name 名称
     */
    TaskFlow.prototype.findNodeIndex = function (name) {
        return this.nodes.findIndex(function (node) {
            return node.name === name;
        });
    };
    /**
     * 创建任务节点
     * @param name 名称
     * @param func 函数
     */
    TaskFlow.prototype.createNode = function (name, func) {
        var node = new TaskNode(name, func);
        return node;
    };
    // #endregion
    // #region 链接操作
    /**
     * 添加链接
     * @param name 名称
     * @param func 函数
     */
    TaskFlow.prototype.addLink = function (from, to, condition) {
        var link = this.createLink(from, to, condition);
        this.links.push(link);
    };
    /**
     * 批量添加链接
     */
    TaskFlow.prototype.addLinks = function (links) {
        this.links = this.links.concat(links);
    };
    /**
     * 创建链接
     */
    TaskFlow.prototype.createLink = function (from, to, condition) {
        var link = new TaskLink(from, to, condition);
        return link;
    };
    // #endregion
    // #region 流程控制
    /**
     * 获取下一个节点
     * @param from    源节点名称
     * @param context 上下文
     */
    TaskFlow.prototype.getNext = function (from, context) {
        if (!from) {
            return this.nodes.shift();
        }
        // 符合满足条件的边
        var nextLink = this.links.find(function (link) {
            return link.from === from && link.canLink(context);
        });
        if (!nextLink) {
            return;
        }
        return this.nodes.find(function (node) {
            return node.name === nextLink.to;
        });
    };
    // #endregion
    // #region 其他方法
    /**
     * 克隆任务流
     */
    TaskFlow.prototype.clone = function () {
        var taskFlow = new TaskFlow();
        taskFlow.addNodes(this.nodes);
        taskFlow.addLinks(this.links);
        return taskFlow;
    };
    return TaskFlow;
}());
export { TaskFlow };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFza19mbG93LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvY29tbWFuZC9mbG93L3Rhc2tfZmxvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7R0FLRztBQUVILE9BQU8sRUFBWSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDakQsT0FBTyxFQUFZLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUdqRDs7R0FFRztBQUNIO0lBQUE7UUFFRTs7V0FFRztRQUNLLFVBQUssR0FBZSxFQUFFLENBQUM7UUFFL0I7O1dBRUc7UUFDSyxVQUFLLEdBQWUsRUFBRSxDQUFDO1FBcUkvQixhQUFhO0lBQ2YsQ0FBQztJQW5JQyxlQUFlO0lBRWY7O09BRUc7SUFDSSwwQkFBTyxHQUFkLFVBQWUsSUFBWSxFQUFFLElBQWM7UUFDekMsSUFBTSxJQUFJLEdBQUcsSUFBSSxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFHRDs7T0FFRztJQUNJLDJCQUFRLEdBQWYsVUFBZ0IsS0FBaUI7UUFDL0IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSw2QkFBVSxHQUFqQixVQUFrQixNQUFjLEVBQUUsSUFBWSxFQUFFLElBQWM7UUFDNUQsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6QyxJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FB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Q0FBQztJQUdILGVBQUM7QUFBRCxDQUFDLEFBaEpELElBZ0pDO0FBRUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQEF1dGhvcjogV2l0dFxyXG4gKiBARGF0ZTogMjAxOC0xMC0xNyAxNDoxMzo0MFxyXG4gKiBATGFzdCBNb2RpZmllZCBieTogV2l0dFxyXG4gKiBATGFzdCBNb2RpZmllZCB0aW1lOiAyMDE4LTEwLTE3IDE2OjA4OjM0XHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgVGFza0Z1bmMsIFRhc2tOb2RlIH0gZnJvbSAnLi90YXNrX25vZGUnO1xyXG5pbXBvcnQgeyBMaW5rRnVuYywgVGFza0xpbmsgfSBmcm9tICcuL3Rhc2tfbGluayc7XHJcbmltcG9ydCB7IENvbW1hbmRDb250ZXh0IH0gZnJvbSAnLi4vY29tbWFuZF9jb250ZXh0JztcclxuXHJcbi8qKlxyXG4gKiDku7vliqHmiafooYzmtYHnqItcclxuICovXHJcbmNsYXNzIFRhc2tGbG93IHtcclxuXHJcbiAgLyoqXHJcbiAgICog6IqC54K56ZuG5ZCIXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBub2RlczogVGFza05vZGVbXSA9IFtdO1xyXG5cclxuICAvKipcclxuICAgKiDovrnpm4blkIhcclxuICAgKi9cclxuICBwcml2YXRlIGxpbmtzOiBUYXNrTGlua1tdID0gW107XHJcblxyXG5cclxuICAvLyAjcmVnaW9uIOiKgueCueaTjeS9nFxyXG5cclxuICAvKipcclxuICAgKiDmt7vliqDoioLngrlcclxuICAgKi9cclxuICBwdWJsaWMgYWRkTm9kZShuYW1lOiBzdHJpbmcsIGZ1bmM6IFRhc2tGdW5jKTogdm9pZCB7XHJcbiAgICBjb25zdCBub2RlID0gbmV3IFRhc2tOb2RlKG5hbWUsIGZ1bmMpO1xyXG4gICAgdGhpcy5ub2Rlcy5wdXNoKG5vZGUpO1xyXG4gIH1cclxuXHJcblxyXG4gIC8qKlxyXG4gICAqIOaJuemHj+a3u+WKoOmTvuaOpVxyXG4gICAqL1xyXG4gIHB1YmxpYyBhZGROb2Rlcyhub2RlczogVGFza05vZGVbXSkge1xyXG4gICAgdGhpcy5ub2RlcyA9IHRoaXMubm9kZXMuY29uY2F0KG5vZGVzKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWcqOebruagh+iKgueCueS5i+WJjeaPkuWFpeS4gOS4quiKgueCuVxyXG4gICAqIEBwYXJhbSB0YXJnZXQg55uu5qCH6IqC54K55ZCN56ewXHJcbiAgICogQHBhcmFtIG5hbWUg5ZCN56ewXHJcbiAgICogQHBhcmFtIGZ1bmMg5Ye95pWwXHJcbiAgICovXHJcbiAgcHVibGljIGluc2VydE5vZGUodGFyZ2V0OiBzdHJpbmcsIG5hbWU6IHN0cmluZywgZnVuYzogVGFza0Z1bmMpOiB2b2lkIHtcclxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5maW5kTm9kZUluZGV4KHRhcmdldCk7XHJcbiAgICBjb25zdCBub2RlID0gdGhpcy5jcmVhdGVOb2RlKG5hbWUsIGZ1bmMpO1xyXG4gICAgdGhpcy5ub2Rlcy5zcGxpY2UoaW5kZXgsIDAsIG5vZGUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Zyo55uu5qCH6IqC54K55LmL5YmN5o+S5YWl5LiA5Liq6IqC54K5XHJcbiAgICovXHJcbiAgcHVibGljIGFwcGVuZE5vZGUodGFyZ2V0OiBzdHJpbmcsIG5hbWU6IHN0cmluZywgZnVuYzogVGFza0Z1bmMpIHtcclxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5maW5kTm9kZUluZGV4KHRhcmdldCkgKyAxO1xyXG4gICAgY29uc3Qgbm9kZSA9IHRoaXMuY3JlYXRlTm9kZShuYW1lLCBmdW5jKTtcclxuICAgIHRoaXMubm9kZXMuc3BsaWNlKGluZGV4LCAwLCBub2RlKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluiKgueCuee0ouW8lVxyXG4gICAqIEBwYXJhbSBuYW1lIOWQjeensFxyXG4gICAqL1xyXG4gIHByaXZhdGUgZmluZE5vZGVJbmRleChuYW1lOiBzdHJpbmcpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMubm9kZXMuZmluZEluZGV4KChub2RlOiBUYXNrTm9kZSkgPT4ge1xyXG4gICAgICByZXR1cm4gbm9kZS5uYW1lID09PSBuYW1lO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDliJvlu7rku7vliqHoioLngrlcclxuICAgKiBAcGFyYW0gbmFtZSDlkI3np7BcclxuICAgKiBAcGFyYW0gZnVuYyDlh73mlbBcclxuICAgKi9cclxuICBwcml2YXRlIGNyZWF0ZU5vZGUobmFtZTogc3RyaW5nLCBmdW5jOiBUYXNrRnVuYyk6IFRhc2tOb2RlIHtcclxuICAgIGNvbnN0IG5vZGUgPSBuZXcgVGFza05vZGUobmFtZSwgZnVuYyk7XHJcbiAgICByZXR1cm4gbm9kZTtcclxuICB9XHJcblxyXG4gIC8vICNlbmRyZWdpb25cclxuXHJcblxyXG4gIC8vICNyZWdpb24g6ZO+5o6l5pON5L2cXHJcblxyXG4gIC8qKlxyXG4gICAqIOa3u+WKoOmTvuaOpVxyXG4gICAqIEBwYXJhbSBuYW1lIOWQjeensFxyXG4gICAqIEBwYXJhbSBmdW5jIOWHveaVsFxyXG4gICAqL1xyXG4gIHB1YmxpYyBhZGRMaW5rKGZyb206IHN0cmluZywgdG86IHN0cmluZywgY29uZGl0aW9uOiBzdHJpbmcgfCBib29sZWFuKSB7XHJcbiAgICBjb25zdCBsaW5rID0gdGhpcy5jcmVhdGVMaW5rKGZyb20sIHRvLCBjb25kaXRpb24pO1xyXG4gICAgdGhpcy5saW5rcy5wdXNoKGxpbmspO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5om56YeP5re75Yqg6ZO+5o6lXHJcbiAgICovXHJcbiAgcHVibGljIGFkZExpbmtzKGxpbmtzOiBUYXNrTGlua1tdKSB7XHJcbiAgICB0aGlzLmxpbmtzID0gdGhpcy5saW5rcy5jb25jYXQobGlua3MpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Yib5bu66ZO+5o6lXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBjcmVhdGVMaW5rKGZyb206IHN0cmluZywgdG86IHN0cmluZywgY29uZGl0aW9uOiBzdHJpbmcgfCBib29sZWFuKSB7XHJcbiAgICBjb25zdCBsaW5rID0gbmV3IFRhc2tMaW5rKGZyb20sIHRvLCBjb25kaXRpb24pO1xyXG4gICAgcmV0dXJuIGxpbms7XHJcbiAgfVxyXG5cclxuICAvLyAjZW5kcmVnaW9uXHJcblxyXG5cclxuICAvLyAjcmVnaW9uIOa1geeoi+aOp+WItlxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluS4i+S4gOS4quiKgueCuVxyXG4gICAqIEBwYXJhbSBmcm9tICAgIOa6kOiKgueCueWQjeensFxyXG4gICAqIEBwYXJhbSBjb250ZXh0IOS4iuS4i+aWh1xyXG4gICAqL1xyXG4gIGdldE5leHQoZnJvbT86IHN0cmluZywgY29udGV4dD86IENvbW1hbmRDb250ZXh0KTogVGFza05vZGUge1xyXG4gICAgaWYgKCFmcm9tKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLm5vZGVzLnNoaWZ0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g56ym5ZCI5ruh6Laz5p2h5Lu255qE6L65XHJcbiAgICBjb25zdCBuZXh0TGluayA9IHRoaXMubGlua3MuZmluZCgobGluazogVGFza0xpbmspID0+IHtcclxuICAgICAgcmV0dXJuIGxpbmsuZnJvbSA9PT0gZnJvbSAmJiBsaW5rLmNhbkxpbmsoY29udGV4dCk7XHJcbiAgICB9KTtcclxuICAgIGlmICghbmV4dExpbmspIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLm5vZGVzLmZpbmQoKG5vZGU6IFRhc2tOb2RlKSA9PiB7XHJcbiAgICAgIHJldHVybiBub2RlLm5hbWUgPT09IG5leHRMaW5rLnRvO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyAjZW5kcmVnaW9uXHJcblxyXG4gIC8vICNyZWdpb24g5YW25LuW5pa55rOVXHJcblxyXG4gIC8qKlxyXG4gICAqIOWFi+mahuS7u+WKoea1gVxyXG4gICAqL1xyXG4gIGNsb25lKCkge1xyXG4gICAgY29uc3QgdGFza0Zsb3cgPSBuZXcgVGFza0Zsb3coKTtcclxuICAgIHRhc2tGbG93LmFkZE5vZGVzKHRoaXMubm9kZXMpO1xyXG4gICAgdGFza0Zsb3cuYWRkTGlua3ModGhpcy5saW5rcyk7XHJcbiAgICByZXR1cm4gdGFza0Zsb3c7XHJcbiAgfVxyXG5cclxuICAvLyAjZW5kcmVnaW9uXHJcbn1cclxuXHJcbmV4cG9ydCB7IFRhc2tGbG93IH07XHJcbiJdfQ==