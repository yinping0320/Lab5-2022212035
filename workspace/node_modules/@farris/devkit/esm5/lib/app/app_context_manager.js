/**
 * The manager for all appContexts.
 * @summary
 * 1, The generator create unique frameId dynamically for each frameContext in the combination forms.
 * 2, Combined form and Host form visit each other by these unique frameIds.
 * 3, Now we make these forms has own appContext, they can't visit each other in old way.
 * 4, For compatible purpose, we collect all appContexts together and search frameContext in these appContexts by unque frameId.
 */
var AppContextManager = /** @class */ (function () {
    /**
     * constructor
     */
    function AppContextManager() {
        this.appContextSet = new Set();
    }
    /**
     * Register AppContext
     */
    AppContextManager.prototype.registerAppContext = function (appContext) {
        this.appContextSet.add(appContext);
    };
    /**
     * Unregister AppContext
     */
    AppContextManager.prototype.unregisterAppContext = function (appContext) {
        this.appContextSet.delete(appContext);
    };
    /**
     * Get an array of all AppContexts.
     */
    AppContextManager.prototype.getAppContexts = function () {
        return Array.from(this.appContextSet);
    };
    return AppContextManager;
}());
export { AppContextManager };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwX2NvbnRleHRfbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL2FwcC9hcHBfY29udGV4dF9tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7Ozs7O0dBT0c7QUFDSDtJQU9FOztPQUVHO0lBQ0g7UUFDRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksR0FBRyxFQUFjLENBQUM7SUFDN0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksOENBQWtCLEdBQXpCLFVBQTBCLFVBQXNCO1FBQzlDLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRDs7T0FFRztJQUNJLGdEQUFvQixHQUEzQixVQUE0QixVQUFzQjtRQUNoRCxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQ7O09BRUc7SUFDSSwwQ0FBYyxHQUFyQjtRQUNFLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVILHdCQUFDO0FBQUQsQ0FBQyxBQW5DRCxJQW1DQztBQUVELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwQ29udGV4dCB9IGZyb20gJy4vYXBwX2NvbnRleHQnO1xyXG5cclxuLyoqXHJcbiAqIFRoZSBtYW5hZ2VyIGZvciBhbGwgYXBwQ29udGV4dHMuXHJcbiAqIEBzdW1tYXJ5XHJcbiAqIDEsIFRoZSBnZW5lcmF0b3IgY3JlYXRlIHVuaXF1ZSBmcmFtZUlkIGR5bmFtaWNhbGx5IGZvciBlYWNoIGZyYW1lQ29udGV4dCBpbiB0aGUgY29tYmluYXRpb24gZm9ybXMuXHJcbiAqIDIsIENvbWJpbmVkIGZvcm0gYW5kIEhvc3QgZm9ybSB2aXNpdCBlYWNoIG90aGVyIGJ5IHRoZXNlIHVuaXF1ZSBmcmFtZUlkcy5cclxuICogMywgTm93IHdlIG1ha2UgdGhlc2UgZm9ybXMgaGFzIG93biBhcHBDb250ZXh0LCB0aGV5IGNhbid0IHZpc2l0IGVhY2ggb3RoZXIgaW4gb2xkIHdheS5cclxuICogNCwgRm9yIGNvbXBhdGlibGUgcHVycG9zZSwgd2UgY29sbGVjdCBhbGwgYXBwQ29udGV4dHMgdG9nZXRoZXIgYW5kIHNlYXJjaCBmcmFtZUNvbnRleHQgaW4gdGhlc2UgYXBwQ29udGV4dHMgYnkgdW5xdWUgZnJhbWVJZC5cclxuICovXHJcbmNsYXNzIEFwcENvbnRleHRNYW5hZ2VyIHtcclxuXHJcbiAgLyoqXHJcbiAgICogQXBwQ29udGV4dCBTZXRcclxuICAgKi9cclxuICBwcml2YXRlIGFwcENvbnRleHRTZXQ6IFNldDxBcHBDb250ZXh0PjtcclxuXHJcbiAgLyoqXHJcbiAgICogY29uc3RydWN0b3JcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuYXBwQ29udGV4dFNldCA9IG5ldyBTZXQ8QXBwQ29udGV4dD4oKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlZ2lzdGVyIEFwcENvbnRleHRcclxuICAgKi9cclxuICBwdWJsaWMgcmVnaXN0ZXJBcHBDb250ZXh0KGFwcENvbnRleHQ6IEFwcENvbnRleHQpOiB2b2lkIHtcclxuICAgIHRoaXMuYXBwQ29udGV4dFNldC5hZGQoYXBwQ29udGV4dCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBVbnJlZ2lzdGVyIEFwcENvbnRleHRcclxuICAgKi9cclxuICBwdWJsaWMgdW5yZWdpc3RlckFwcENvbnRleHQoYXBwQ29udGV4dDogQXBwQ29udGV4dCk6IHZvaWQge1xyXG4gICAgdGhpcy5hcHBDb250ZXh0U2V0LmRlbGV0ZShhcHBDb250ZXh0KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCBhbiBhcnJheSBvZiBhbGwgQXBwQ29udGV4dHMuXHJcbiAgICovXHJcbiAgcHVibGljIGdldEFwcENvbnRleHRzKCk6IEFwcENvbnRleHRbXSB7XHJcbiAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLmFwcENvbnRleHRTZXQpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7IEFwcENvbnRleHRNYW5hZ2VyIH07XHJcbiJdfQ==