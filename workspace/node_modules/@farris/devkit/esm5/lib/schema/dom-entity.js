/**
 * Component节点
 */
var FormComponent = /** @class */ (function () {
    function FormComponent() {
        this.type = 'Component';
    }
    return FormComponent;
}());
export { FormComponent };
/**
 * 组件类型
 */
export var FormComponentType;
(function (FormComponentType) {
    /**
     * 表单
     */
    FormComponentType["Frame"] = "Frame";
    /**
     * 列表/树表类
     */
    FormComponentType["dataGrid"] = "dataGrid";
    /**
     * 列表视图
     */
    FormComponentType["listView"] = "listView";
    /**
     * 卡片类（待优化，目前类型中带有控件列布局信息）
     */
    FormComponentType["form"] = "form";
    /**
     * 移动审批：人员信息组件
     */
    FormComponentType["detailHeaderForMobileApprove"] = "detailHeaderForMobileApprove";
    /**
     * 移动审批：面板
     */
    FormComponentType["panelForMobileApprove"] = "panelForMobileApprove";
    /**
     * 移动审批：流程图组件
     */
    FormComponentType["flowProcessForMobileApprove"] = "flowProcessForMobileApprove";
})(FormComponentType || (FormComponentType = {}));
/**
 * DOM 控件binding实体
 */
var FormBinding = /** @class */ (function () {
    function FormBinding() {
    }
    return FormBinding;
}());
export { FormBinding };
/**
 * binding 类型
 */
export var FormBindingType;
(function (FormBindingType) {
    FormBindingType["Form"] = "Form";
    FormBindingType["Variable"] = "Variable";
})(FormBindingType || (FormBindingType = {}));
/**
 * dom Json ViewModel 节点实体
 */
var FormViewModel = /** @class */ (function () {
    function FormViewModel() {
    }
    return FormViewModel;
}());
export { FormViewModel };
/**
 * dom Json ViewModel 节点中fields实体
 */
var FormViewModelField = /** @class */ (function () {
    function FormViewModelField() {
    }
    return FormViewModelField;
}());
export { FormViewModelField };
/**
 * dom Json ViewModel 节点中states实体
 */
var FormVariable = /** @class */ (function () {
    function FormVariable() {
        this.id = '';
        this.category = 'locale';
    }
    return FormVariable;
}());
export { FormVariable };
/**
 * 变量类型
 */
export var FormVariableCategory;
(function (FormVariableCategory) {
    FormVariableCategory["locale"] = "locale";
    FormVariableCategory["remote"] = "remote";
})(FormVariableCategory || (FormVariableCategory = {}));
/**
 * 支持的变量类型
 */
export var FormVariableTypes = [
    { text: '字符串', value: 'String' },
    { text: '数字', value: 'Number' },
    { text: '布尔', value: 'Boolean' },
    { text: '日期', value: 'Date' },
    { text: '日期时间', value: 'DateTime' },
    { text: '文本', value: 'Text' },
    { text: '对象', value: 'Object' },
    { text: '数组', value: 'Array' }
];
/**
 * DOM GridField 中的数据类型
 */
export var GridFieldDataType;
(function (GridFieldDataType) {
    GridFieldDataType["string"] = "string";
    GridFieldDataType["boolean"] = "boolean";
    GridFieldDataType["date"] = "date";
    GridFieldDataType["number"] = "number";
    GridFieldDataType["enum"] = "enum";
    GridFieldDataType["datetime"] = "datetime";
})(GridFieldDataType || (GridFieldDataType = {}));
/**
 * 枚举类型
 */
var EnumData = /** @class */ (function () {
    function EnumData() {
    }
    return EnumData;
}());
export { EnumData };
/**
 * Item类型数据
 */
var ItemData = /** @class */ (function () {
    function ItemData() {
    }
    return ItemData;
}());
export { ItemData };
/**
 * vm 分页配置
 */
var FormViewModelPagination = /** @class */ (function () {
    function FormViewModelPagination() {
    }
    return FormViewModelPagination;
}());
export { FormViewModelPagination };
/**
 * 组合表单-声明实体
 */
var FormDeclaration = /** @class */ (function () {
    function FormDeclaration() {
    }
    return FormDeclaration;
}());
export { FormDeclaration };
/**
 * 组合表单-事件声明实体
 */
var DeclarationEvent = /** @class */ (function () {
    function DeclarationEvent() {
    }
    return DeclarationEvent;
}());
export { DeclarationEvent };
/**
 * 组合表单-参数实体
 */
var DeclarationParam = /** @class */ (function () {
    function DeclarationParam() {
    }
    return DeclarationParam;
}());
export { DeclarationParam };
/**
 * 组合表单-命令声明实体
 */
var DeclarationCommand = /** @class */ (function () {
    function DeclarationCommand() {
    }
    return DeclarationCommand;
}());
export { DeclarationCommand };
/**
 * 组合表单-变量声明实体
 */
var DeclartionState = /** @class */ (function () {
    function DeclartionState() {
    }
    return DeclartionState;
}());
export { DeclartionState };
/**
 * 组合表单-订阅实体
 */
var Subscription = /** @class */ (function () {
    function Subscription() {
    }
    return Subscription;
}());
export { Subscription };
/**
 * 组合表单-订阅参数实体
 */
var SubscriptionParamMapping = /** @class */ (function () {
    function SubscriptionParamMapping() {
    }
    return SubscriptionParamMapping;
}());
export { SubscriptionParamMapping };
//# sourceMappingURL=data:application/json;base64,