var FormContent = /** @class */ (function () {
    function FormContent() {
    }
    return FormContent;
}());
export { FormContent };
var FormContentForDB = /** @class */ (function () {
    function FormContentForDB(content) {
        this.Id = content.Id;
        this.Code = content.Code;
        this.Name = content.Name;
        this.Contents = JSON.stringify(content.Contents);
    }
    return FormContentForDB;
}());
export { FormContentForDB };
var FormMetadaDataDom = /** @class */ (function () {
    function FormMetadaDataDom() {
    }
    return FormMetadaDataDom;
}());
export { FormMetadaDataDom };
var FormModule = /** @class */ (function () {
    function FormModule() {
    }
    return FormModule;
}());
export { FormModule };
// export class FormDeclaration {
//     events: Array<any>;
//     commands: Array<any>;
//     states: Array<any>;
// }
var FormOptions = /** @class */ (function () {
    function FormOptions() {
    }
    return FormOptions;
}());
export { FormOptions };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1tZXRhZGF0YS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZGV2a2l0LyIsInNvdXJjZXMiOlsibGliL3NjaGVtYS9mb3JtLW1ldGFkYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0lBQUE7SUFRQSxDQUFDO0lBQUQsa0JBQUM7QUFBRCxDQUFDLEFBUkQsSUFRQzs7QUFFRDtJQU1JLDBCQUFZLE9BQW9CO1FBQzVCLElBQUksQ0FBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUNMLHVCQUFDO0FBQUQsQ0FBQyxBQVpELElBWUM7O0FBRUQ7SUFBQTtJQUVBLENBQUM7SUFBRCx3QkFBQztBQUFELENBQUMsQUFGRCxJQUVDOztBQUVEO0lBQUE7SUF1Q0EsQ0FBQztJQUFELGlCQUFDO0FBQUQsQ0FBQyxBQXZDRCxJQXVDQzs7QUFFRCxpQ0FBaUM7QUFDakMsMEJBQTBCO0FBQzFCLDRCQUE0QjtBQUM1QiwwQkFBMEI7QUFDMUIsSUFBSTtBQUVKO0lBQUE7SUFHQSxDQUFDO0lBQUQsa0JBQUM7QUFBRCxDQUFDLEFBSEQsSUFHQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1EZWNsYXJhdGlvbiB9IGZyb20gJy4vZG9tLWVudGl0eSc7XHJcbmltcG9ydCB7IFNjaGVtYSB9IGZyb20gJy4vc2NoZW1hJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtQ29udGVudCB7XHJcbiAgICBJZDogc3RyaW5nO1xyXG4gICAgQ29kZTogc3RyaW5nO1xyXG4gICAgTmFtZTogc3RyaW5nO1xyXG4gICAgQ29udGVudHM6IHtcclxuICAgICAgICBtb2R1bGU6IEZvcm1Nb2R1bGUsXHJcbiAgICAgICAgb3B0aW9ucz86IEZvcm1PcHRpb25zXHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRm9ybUNvbnRlbnRGb3JEQiB7XHJcbiAgICBJZDogc3RyaW5nO1xyXG4gICAgQ29kZTogc3RyaW5nO1xyXG4gICAgTmFtZTogc3RyaW5nO1xyXG4gICAgQ29udGVudHM6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihjb250ZW50OiBGb3JtQ29udGVudCkge1xyXG4gICAgICAgIHRoaXMuSWQgPSBjb250ZW50LklkO1xyXG4gICAgICAgIHRoaXMuQ29kZSA9IGNvbnRlbnQuQ29kZTtcclxuICAgICAgICB0aGlzLk5hbWUgPSBjb250ZW50Lk5hbWU7XHJcbiAgICAgICAgdGhpcy5Db250ZW50cyA9IEpTT04uc3RyaW5naWZ5KGNvbnRlbnQuQ29udGVudHMpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRm9ybU1ldGFkYURhdGFEb20ge1xyXG4gICAgbW9kdWxlOiBGb3JtTW9kdWxlO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRm9ybU1vZHVsZSB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgY29kZTogc3RyaW5nO1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgY2FwdGlvbjogc3RyaW5nO1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgY3JlYXRvcjogc3RyaW5nO1xyXG4gICAgY3JlYXRpb25EYXRlOiBEYXRlO1xyXG4gICAgdXBkYXRlVmVyc2lvbjogc3RyaW5nO1xyXG4gICAgc2hvd1RpdGxlOiBib29sZWFuO1xyXG4gICAgYm9vc3RyYXA6IHN0cmluZztcclxuICAgIHNjaGVtYXM6IEFycmF5PFNjaGVtYT47XHJcbiAgICBzdGF0ZXM6IEFycmF5PGFueT47XHJcbiAgICBjb250ZW50czogQXJyYXk8YW55PjtcclxuICAgIHN0YXRlTWFjaGluZXM6IEFycmF5PGFueT47XHJcbiAgICB2aWV3bW9kZWxzOiBBcnJheTxJRm9ybVZpZXdNb2RlbD47XHJcbiAgICBjb21wb25lbnRzOiBBcnJheTxhbnk+O1xyXG4gICAgd2ViY21kczogQXJyYXk8YW55PjtcclxuICAgIHNlcnZpY2VSZWZzOiBBcnJheTxhbnk+O1xyXG4gICAgY3RybExhbmdzOiBhbnk7XHJcblxyXG4gICAgLy8g5piv5ZCm56e75Yqo5a6h5om56KGo5Y2VXHJcbiAgICBpc01vYmlsZUFwcHJvdmU6IGJvb2xlYW47XHJcblxyXG4gICAgLy8g5piv5ZCm57uE5ZCI6KGo5Y2VXHJcbiAgICBpc0NvbXBvc2VkRnJtOiBib29sZWFuO1xyXG5cclxuICAgIC8vIOihqOWNleaJgOWcqOeahOW3peeoi+WQjVxyXG4gICAgcHJvamVjdE5hbWU6IHN0cmluZztcclxuXHJcbiAgICAvLyDlpJbpg6jmqKHlnZflo7DmmI5cclxuICAgIGV4dHJhSW1wb3J0czogQXJyYXk8eyBuYW1lOiBzdHJpbmcsIHBhdGg6IHN0cmluZyB9PjtcclxuXHJcbiAgICAvLyDlpJbpg6jnu4Tku7ZcclxuICAgIGV4dGVybmFsQ29tcG9uZW50czogQXJyYXk8YW55PjtcclxuICAgIC8vIOW9k+WJjee7hOS7tuWjsOaYju+8muS6i+S7tuOAgeWPmOmHj+OAgeWRveS7pFxyXG4gICAgZGVjbGFyYXRpb25zOiBGb3JtRGVjbGFyYXRpb247XHJcbiAgICAvLyDorqLpmIVcclxuICAgIHN1YnNjcmlwdGlvbnM6IEFycmF5PGFueT47XHJcbn1cclxuXHJcbi8vIGV4cG9ydCBjbGFzcyBGb3JtRGVjbGFyYXRpb24ge1xyXG4vLyAgICAgZXZlbnRzOiBBcnJheTxhbnk+O1xyXG4vLyAgICAgY29tbWFuZHM6IEFycmF5PGFueT47XHJcbi8vICAgICBzdGF0ZXM6IEFycmF5PGFueT47XHJcbi8vIH1cclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtT3B0aW9ucyB7XHJcbiAgICBlbmFibGVUZXh0QXJlYTogYm9vbGVhbjtcclxuICAgIGVuYWJsZURyYWdBbmREcm9wVG9Nb2RpZnlMYXlvdXQ6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUZvcm1WaWV3TW9kZWwge1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIGNvZGU6IHN0cmluZztcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIGZpZWxkczogSUZvcm1WaWV3TW9kZWxGaWVsZFtdO1xyXG4gICAgY29tbWFuZHM6IGFueVtdO1xyXG4gICAgc2VydmljZVJlZnM6IGFueVtdO1xyXG4gICAgc3RhdGVzOiBJRm9ybVZpZXdNb2RlbFVpU3RhdGVbXTtcclxuICAgIGJpbmRUbzogc3RyaW5nO1xyXG4gICAgcGFyZW50OiBzdHJpbmc7XHJcbiAgICBwYWdpbmF0aW9uOiBhbnk7XHJcbiAgICBlbmFibGVWYWxpZGF0aW9uOiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGb3JtVmlld01vZGVsRmllbGQge1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIGZpZWxkTmFtZTogc3RyaW5nO1xyXG4gICAgYmluZGluZ1BhdGg6IHN0cmluZztcclxuICAgIGdyb3VwSWQ6IHN0cmluZztcclxuICAgIGdyb3VwTmFtZTogc3RyaW5nO1xyXG4gICAgdmFsdWVDaGFuZ2luZzogc3RyaW5nO1xyXG4gICAgdmFsdWVDaGFuZ2VkOiBzdHJpbmc7XHJcbiAgICB1cGRhdGVPbjogJ2NoYW5nZScgfCAnYmx1cicgfCAnc3VibWl0JztcclxufVxyXG5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSVN0YXRlTWFjaGluZSB7XHJcbiAgICBpbml0aWFsU3RhdGU6IHN0cmluZztcclxuICAgIHJlbmRlclN0YXRlOiB7IFtyZW5kZXJTdGF0ZU5hbWU6IHN0cmluZ106IElSZW5kZXJTdGF0ZSB9O1xyXG4gICAgc3RhdGU6IElTdGF0ZVtdO1xyXG4gICAgYWN0aW9uOiB7IFthY3Rpb25OYW1lOiBzdHJpbmddOiBJQWN0aW9uIH07XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSVJlbmRlclN0YXRlIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIGNvbmRpdGlvbjogSVJlbmRlclN0YXRlQ29uZGl0aW9uW107XHJcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElSZW5kZXJTdGF0ZUNvbmRpdGlvbiB7XHJcbiAgICBjb21wYXJlOiBzdHJpbmc7XHJcbiAgICBsQnJhY2tldDogc3RyaW5nO1xyXG4gICAgckJyYWNrZXQ6IHN0cmluZztcclxuICAgIHJlbGF0aW9uOiBzdHJpbmc7XHJcbiAgICBzb3VyY2U6IHN0cmluZztcclxuICAgIHRhcmdldDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElTdGF0ZSB7XHJcbiAgICBzdGF0ZTogc3RyaW5nO1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJQWN0aW9uIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHRyYW5zaXRUbzogc3RyaW5nO1xyXG4gICAgcHJlY29uZGl0aW9uOiBhbnlbXTtcclxuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUZvcm1WaWV3TW9kZWxDb21tYW5kIHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICBjb2RlOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBwYXJhbXM6IElGb3JtVmlld01vZGVsQ29tbWFuZFBhcmFtW107XHJcbiAgICBoYW5kbGVyTmFtZTogc3RyaW5nO1xyXG4gICAgY21wSWQ6IHN0cmluZztcclxuICAgIHNob3J0Y3V0OiBhbnk7XHJcbiAgICBleHRlbnNpb25zOiBhbnlbXVxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElGb3JtVmlld01vZGVsQ29tbWFuZFBhcmFtIHtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIHNob3dOYW1lOiBzdHJpbmc7XHJcbiAgICB2YWx1ZTogc3RyaW5nO1xyXG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJRm9ybVZpZXdNb2RlbFVpU3RhdGUge1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIGNhdGVnb3J5OiBzdHJpbmc7XHJcbiAgICBjb2RlOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbn1cclxuXHJcbiJdfQ==