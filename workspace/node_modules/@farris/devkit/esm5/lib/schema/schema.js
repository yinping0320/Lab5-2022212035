/**
 * schema
 */
var Schema = /** @class */ (function () {
    function Schema() {
    }
    return Schema;
}());
export { Schema };
/**
 * 实体
 */
var SchemaEntity = /** @class */ (function () {
    function SchemaEntity() {
    }
    return SchemaEntity;
}());
export { SchemaEntity };
/**
 * 实体类型对象
 */
var SchemaEntityType = /** @class */ (function () {
    function SchemaEntityType() {
    }
    return SchemaEntityType;
}());
export { SchemaEntityType };
/**
 * 字段
 */
var SchemaEntityField = /** @class */ (function () {
    function SchemaEntityField() {
    }
    return SchemaEntityField;
}());
export { SchemaEntityField };
/**
 * 字段类型对象
 */
var SchemaEntityFieldType = /** @class */ (function () {
    function SchemaEntityFieldType() {
    }
    return SchemaEntityFieldType;
}());
export { SchemaEntityFieldType };
/**
 * 字段编辑器对象
 */
var SchemaEntityFieldEditor = /** @class */ (function () {
    function SchemaEntityFieldEditor() {
    }
    return SchemaEntityFieldEditor;
}());
export { SchemaEntityFieldEditor };
/**
 * 字段类型枚举
 */
export var SchemaEntityField$Type;
(function (SchemaEntityField$Type) {
    /**
     * 简单类型字段
     */
    SchemaEntityField$Type["SimpleField"] = "SimpleField";
    /**
     * 关联/UDT类型字段
     */
    SchemaEntityField$Type["ComplexField"] = "ComplexField";
})(SchemaEntityField$Type || (SchemaEntityField$Type = {}));
/**
 * 字段类型对象中的类型枚举
 */
export var SchemaEntityFieldType$Type;
(function (SchemaEntityFieldType$Type) {
    /**
     * 字符串
     */
    SchemaEntityFieldType$Type["StringType"] = "StringType";
    /**
     * 备注
     */
    SchemaEntityFieldType$Type["TextType"] = "TextType";
    /**
     * 数字（整数、浮点数）
     */
    SchemaEntityFieldType$Type["NumericType"] = "NumericType";
    /**
     * 布尔
     */
    SchemaEntityFieldType$Type["BooleanType"] = "BooleanType";
    /**
     * 日期
     */
    SchemaEntityFieldType$Type["DateType"] = "DateType";
    /**
     * 日期时间
     */
    SchemaEntityFieldType$Type["DateTimeType"] = "DateTimeType";
    /**
     * 枚举
     */
    SchemaEntityFieldType$Type["EnumType"] = "EnumType";
    /**
     * 实体类
     */
    SchemaEntityFieldType$Type["EntityType"] = "EntityType";
    /**
     * 分级码
     */
    SchemaEntityFieldType$Type["HierarchyType"] = "HierarchyType";
    /**
     * 对象
     */
    SchemaEntityFieldType$Type["ObjectType"] = "ObjectType";
    /**
     * 数字（大数据）
     */
    SchemaEntityFieldType$Type["BigNumericType"] = "BigNumericType";
})(SchemaEntityFieldType$Type || (SchemaEntityFieldType$Type = {}));
/**
 * 字段类型中的名称
 */
export var SchemaEntityFieldTypeName;
(function (SchemaEntityFieldTypeName) {
    /**
     * 简单类型字段
     */
    SchemaEntityFieldTypeName["String"] = "String";
    /**
     * 日期时间
     */
    SchemaEntityFieldTypeName["DateTime"] = "DateTime";
    /**
     * 日期
     */
    SchemaEntityFieldTypeName["Date"] = "Date";
    /**
     * 枚举
     */
    SchemaEntityFieldTypeName["Enum"] = "Enum";
    /**
     * 布尔
     */
    SchemaEntityFieldTypeName["Boolean"] = "Boolean";
    /**
     * 数字
     */
    SchemaEntityFieldTypeName["Number"] = "Number";
    /**
     * 备注
     */
    SchemaEntityFieldTypeName["Text"] = "Text";
    /**
     * 大数字
     */
    SchemaEntityFieldTypeName["BigNumber"] = "BigNumber";
})(SchemaEntityFieldTypeName || (SchemaEntityFieldTypeName = {}));
//# sourceMappingURL=data:application/json;base64,