import * as tslib_1 from "tslib";
var SchemaService = /** @class */ (function () {
    function SchemaService() {
    }
    /**
     * 根据字段标识数组获取指定字段集合
     * @param fieldIds 字段标识数组
     * @param schema 实体结构
     * @param viewModel 视图模型
     * @returns 已Map形式存储的指定字段字典
     */
    SchemaService.prototype.getFieldsByIds = function (fieldIds, schema, viewModel) {
        var specifiedFieldsMap = new Map();
        var entities = schema.entities;
        if (entities && entities.length && viewModel) {
            var entityPath = viewModel.bindTo;
            var fields = this.getEntityFields(entities, entityPath);
            var fieldsMap_1 = this.flattenFields(fields);
            fieldIds.forEach(function (fieldId) {
                if (fieldsMap_1.has(fieldId)) {
                    specifiedFieldsMap.set(fieldId, fieldsMap_1.get(fieldId));
                }
            });
        }
        return specifiedFieldsMap;
    };
    /**
     * 将字段列表打平为字典结构
     * @param fields 字段属性
     * @param fieldsMap 缺省参数，用来存储字段的Map对象
     * @returns 以Map形式存储的字段字段
     */
    SchemaService.prototype.flattenFields = function (fields, fieldsMap) {
        if (fieldsMap === void 0) { fieldsMap = new Map(); }
        var e_1, _a;
        try {
            for (var fields_1 = tslib_1.__values(fields), fields_1_1 = fields_1.next(); !fields_1_1.done; fields_1_1 = fields_1.next()) {
                var field = fields_1_1.value;
                fieldsMap.set(field.id, field);
                if (field.type && field.type.fields && field.type.fields.length > 0) {
                    this.flattenFields(field.type.fields, fieldsMap);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (fields_1_1 && !fields_1_1.done && (_a = fields_1.return)) _a.call(fields_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return fieldsMap;
    };
    /**
     * 获取表字段列表
     * @param entities 实体对象集合
     * @param entityPath 指定实体路径，根实体路径为'/'
     */
    SchemaService.prototype.getEntityFields = function (entities, entityPath) {
        var e_2, _a;
        if (entities && entities.length) {
            var splitIndex = entityPath.indexOf('/');
            if (splitIndex > -1) {
                entityPath = entityPath.slice(splitIndex + 1, entityPath.length);
            }
            try {
                // 遍历所有实体，查找匹配指定路径的实体
                for (var entities_1 = tslib_1.__values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {
                    var entity = entities_1_1.value;
                    if (entityPath === '' || entityPath === entity.code || entityPath === entity.label) {
                        return entity.type.fields;
                    }
                    else {
                        var fields = this.getEntityFields(entity.type.entities, entityPath);
                        if (fields && fields.length) {
                            return fields;
                        }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        return [];
    };
    return SchemaService;
}());
export { SchemaService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2RldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9zY2hlbWEvc2NoZW1hLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUlBO0lBRUk7SUFBZ0IsQ0FBQztJQUVqQjs7Ozs7O09BTUc7SUFDSSxzQ0FBYyxHQUFyQixVQUFzQixRQUFrQixFQUFFLE1BQWMsRUFBRSxTQUF5QjtRQUUvRSxJQUFNLGtCQUFrQixHQUFHLElBQUksR0FBRyxFQUE2QixDQUFDO1FBQ2hFLElBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDakMsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxTQUFTLEVBQUU7WUFDMUMsSUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQztZQUNwQyxJQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUMxRCxJQUFNLFdBQVMsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzdDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxPQUFPO2dCQUNwQixJQUFJLFdBQVMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUU7b0JBQ3hCLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsV0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2lCQUMzRDtZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFDRCxPQUFPLGtCQUFrQixDQUFDO0lBQzlCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNLLHFDQUFhLEdBQXJCLFVBQ0ksTUFBMkIsRUFDM0IsU0FBZ0Y7UUFBaEYsMEJBQUEsRUFBQSxnQkFBZ0QsR0FBRyxFQUE2Qjs7O1lBRWhGLEtBQW9CLElBQUEsV0FBQSxpQkFBQSxNQUFNLENBQUEsOEJBQUEsa0RBQUU7Z0JBQXZCLElBQU0sS0FBSyxtQkFBQTtnQkFDWixTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQy9CLElBQUksS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO29CQUNqRSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDO2lCQUNwRDthQUNKOzs7Ozs7Ozs7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNyQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNLLHVDQUFlLEdBQXZCLFVBQXdCLFFBQXdCLEVBQUUsVUFBa0I7O1FBQ2hFLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEVBQUU7WUFDN0IsSUFBTSxVQUFVLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMzQyxJQUFJLFVBQVUsR0FBRyxDQUFDLENBQUMsRUFBRTtnQkFDakIsVUFBVSxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLENBQUMsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDcEU7O2dCQUNELHFCQUFxQjtnQkFDckIsS0FBcUIsSUFBQSxhQUFBLGlCQUFBLFFBQVEsQ0FBQSxrQ0FBQSx3REFBRTtvQkFBMUIsSUFBTSxNQUFNLHFCQUFBO29CQUNiLElBQUksVUFBVSxLQUFLLEVBQUUsSUFBSSxVQUFVLEtBQUssTUFBTSxDQUFDLElBQUksSUFBSSxVQUFVLEtBQUssTUFBTSxDQUFDLEtBQUssRUFBRTt3QkFDaEYsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztxQkFDN0I7eUJBQU07d0JBQ0gsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQzt3QkFDdEUsSUFBSSxNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRTs0QkFDekIsT0FBTyxNQUFNLENBQUM7eUJBQ2pCO3FCQUNKO2lCQUNKOzs7Ozs7Ozs7U0FDSjtRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0FBQyxBQXhFRCxJQXdFQyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBJRm9ybVZpZXdNb2RlbCB9IGZyb20gJy4vZm9ybS1tZXRhZGF0YSc7XHJcbmltcG9ydCB7IFNjaGVtYSwgU2NoZW1hRW50aXR5LCBTY2hlbWFFbnRpdHlGaWVsZCB9IGZyb20gJy4vc2NoZW1hJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTY2hlbWFTZXJ2aWNlIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5qC55o2u5a2X5q615qCH6K+G5pWw57uE6I635Y+W5oyH5a6a5a2X5q616ZuG5ZCIXHJcbiAgICAgKiBAcGFyYW0gZmllbGRJZHMg5a2X5q615qCH6K+G5pWw57uEXHJcbiAgICAgKiBAcGFyYW0gc2NoZW1hIOWunuS9k+e7k+aehFxyXG4gICAgICogQHBhcmFtIHZpZXdNb2RlbCDop4blm77mqKHlnotcclxuICAgICAqIEByZXR1cm5zIOW3sk1hcOW9ouW8j+WtmOWCqOeahOaMh+WumuWtl+auteWtl+WFuFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0RmllbGRzQnlJZHMoZmllbGRJZHM6IHN0cmluZ1tdLCBzY2hlbWE6IFNjaGVtYSwgdmlld01vZGVsOiBJRm9ybVZpZXdNb2RlbClcclxuICAgICAgICA6IE1hcDxzdHJpbmcsIFNjaGVtYUVudGl0eUZpZWxkPiB7XHJcbiAgICAgICAgY29uc3Qgc3BlY2lmaWVkRmllbGRzTWFwID0gbmV3IE1hcDxzdHJpbmcsIFNjaGVtYUVudGl0eUZpZWxkPigpO1xyXG4gICAgICAgIGNvbnN0IGVudGl0aWVzID0gc2NoZW1hLmVudGl0aWVzO1xyXG4gICAgICAgIGlmIChlbnRpdGllcyAmJiBlbnRpdGllcy5sZW5ndGggJiYgdmlld01vZGVsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVudGl0eVBhdGggPSB2aWV3TW9kZWwuYmluZFRvO1xyXG4gICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0aGlzLmdldEVudGl0eUZpZWxkcyhlbnRpdGllcywgZW50aXR5UGF0aCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkc01hcCA9IHRoaXMuZmxhdHRlbkZpZWxkcyhmaWVsZHMpO1xyXG4gICAgICAgICAgICBmaWVsZElkcy5mb3JFYWNoKGZpZWxkSWQgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGZpZWxkc01hcC5oYXMoZmllbGRJZCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBzcGVjaWZpZWRGaWVsZHNNYXAuc2V0KGZpZWxkSWQsIGZpZWxkc01hcC5nZXQoZmllbGRJZCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHNwZWNpZmllZEZpZWxkc01hcDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWwhuWtl+auteWIl+ihqOaJk+W5s+S4uuWtl+WFuOe7k+aehFxyXG4gICAgICogQHBhcmFtIGZpZWxkcyDlrZfmrrXlsZ7mgKdcclxuICAgICAqIEBwYXJhbSBmaWVsZHNNYXAg57y655yB5Y+C5pWw77yM55So5p2l5a2Y5YKo5a2X5q6155qETWFw5a+56LGhXHJcbiAgICAgKiBAcmV0dXJucyDku6VNYXDlvaLlvI/lrZjlgqjnmoTlrZfmrrXlrZfmrrVcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBmbGF0dGVuRmllbGRzKFxyXG4gICAgICAgIGZpZWxkczogU2NoZW1hRW50aXR5RmllbGRbXSxcclxuICAgICAgICBmaWVsZHNNYXA6IE1hcDxzdHJpbmcsIFNjaGVtYUVudGl0eUZpZWxkPiA9IG5ldyBNYXA8c3RyaW5nLCBTY2hlbWFFbnRpdHlGaWVsZD4oKVxyXG4gICAgKTogTWFwPHN0cmluZywgU2NoZW1hRW50aXR5RmllbGQ+IHtcclxuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkIG9mIGZpZWxkcykge1xyXG4gICAgICAgICAgICBmaWVsZHNNYXAuc2V0KGZpZWxkLmlkLCBmaWVsZCk7XHJcbiAgICAgICAgICAgIGlmIChmaWVsZC50eXBlICYmIGZpZWxkLnR5cGUuZmllbGRzICYmIGZpZWxkLnR5cGUuZmllbGRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmxhdHRlbkZpZWxkcyhmaWVsZC50eXBlLmZpZWxkcywgZmllbGRzTWFwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmllbGRzTWFwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W6KGo5a2X5q615YiX6KGoXHJcbiAgICAgKiBAcGFyYW0gZW50aXRpZXMg5a6e5L2T5a+56LGh6ZuG5ZCIXHJcbiAgICAgKiBAcGFyYW0gZW50aXR5UGF0aCDmjIflrprlrp7kvZPot6/lvoTvvIzmoLnlrp7kvZPot6/lvoTkuLonLydcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBnZXRFbnRpdHlGaWVsZHMoZW50aXRpZXM6IFNjaGVtYUVudGl0eVtdLCBlbnRpdHlQYXRoOiBzdHJpbmcpOiBTY2hlbWFFbnRpdHlGaWVsZFtdIHtcclxuICAgICAgICBpZiAoZW50aXRpZXMgJiYgZW50aXRpZXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNwbGl0SW5kZXggPSBlbnRpdHlQYXRoLmluZGV4T2YoJy8nKTtcclxuICAgICAgICAgICAgaWYgKHNwbGl0SW5kZXggPiAtMSkge1xyXG4gICAgICAgICAgICAgICAgZW50aXR5UGF0aCA9IGVudGl0eVBhdGguc2xpY2Uoc3BsaXRJbmRleCArIDEsIGVudGl0eVBhdGgubGVuZ3RoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyDpgY3ljobmiYDmnInlrp7kvZPvvIzmn6Xmib7ljLnphY3mjIflrprot6/lvoTnmoTlrp7kvZNcclxuICAgICAgICAgICAgZm9yIChjb25zdCBlbnRpdHkgb2YgZW50aXRpZXMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChlbnRpdHlQYXRoID09PSAnJyB8fCBlbnRpdHlQYXRoID09PSBlbnRpdHkuY29kZSB8fCBlbnRpdHlQYXRoID09PSBlbnRpdHkubGFiZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZW50aXR5LnR5cGUuZmllbGRzO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0aGlzLmdldEVudGl0eUZpZWxkcyhlbnRpdHkudHlwZS5lbnRpdGllcywgZW50aXR5UGF0aCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkcyAmJiBmaWVsZHMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmaWVsZHM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxufVxyXG4iXX0=