/*
 * @Author: Witt
 * @Date: 2018-12-07 09:05:09
 * @Last Modified by: Witt
 * @Last Modified time: 2018-12-27 20:35:02
 */
import * as tslib_1 from "tslib";
import { EntityMetadataUtil } from '../../entity/metadata/index';
import { DataPropGroup } from './data_prop_info';
/**
 * 实体类型信息
 * @todo：
 * 1、构造时不应该识别Entity模块的东西，应该是更抽象的；
 * 2、构造函数应该接收一个Builder接口，由Entity或者其他实现层来实现这个接口。
 */
var DataTypeInfo = /** @class */ (function () {
    /**
     * 构造函数
     * @todo：不应该识别
     */
    function DataTypeInfo(type) {
        this.type = type;
        this.primaryKey = '';
        this.foreignKey = '';
        this.propInfoMap = new Map();
        this.collectEntityInfos();
        this.collectPropInfos();
    }
    Object.defineProperty(DataTypeInfo.prototype, "isValueObject", {
        /**
         * 是否为值对象
         */
        get: function () {
            return !this.primaryKey;
        },
        enumerable: true,
        configurable: true
    });
    DataTypeInfo.prototype.getBindingPathByTableName = function (tableName) {
        var fullEntityPath = this.getFullEntityPath(this, tableName);
        if (!fullEntityPath) {
            return null;
        }
        fullEntityPath.splice(0, 1);
        return '/' + fullEntityPath.join('/');
    };
    DataTypeInfo.prototype.getFullEntityPath = function (dataTypeInfo, tableName, paths) {
        if (paths === void 0) { paths = []; }
        if (dataTypeInfo.entityInfo && (dataTypeInfo.entityInfo.nodeCode === tableName || dataTypeInfo.entityInfo.originalCode === tableName)) {
            paths.push(dataTypeInfo.entityInfo.nodeCode);
            return paths;
        }
        var props = Array.from(dataTypeInfo.propInfoMap.values()).filter(function (p) { return p.typeInfo; });
        if (props.length < 1) {
            paths = [];
            return paths;
        }
        if (dataTypeInfo.entityInfo) {
            paths.push(dataTypeInfo.entityInfo.nodeCode);
        }
        for (var idx = 0; idx < props.length; idx++) {
            var dataTypeInfo_1 = props[idx].typeInfo;
            var path = this.getFullEntityPath(dataTypeInfo_1, tableName);
            if (!path || path.length < 1) {
                continue;
            }
            else {
                paths = paths.concat(path);
                return paths;
            }
        }
        return null;
    };
    /**
     * 获取全部属性信息
     */
    DataTypeInfo.prototype.getPropInfos = function () {
        return Array.from(this.propInfoMap.values()).filter(function (propInfo) { return !propInfo.isVOField; });
    };
    /**
     * 获取全部属性的名称
     */
    DataTypeInfo.prototype.getPropNames = function () {
        var propNames = [];
        var propInfos = this.getPropInfos();
        propInfos.forEach(function (propInfo) {
            propNames.push(propInfo.name);
        });
        return propNames;
    };
    /**
     * 根据group获取属性信息数组
     */
    DataTypeInfo.prototype.getPropInfosByGroup = function (group) {
        var allPropInfos = Array.from(this.propInfoMap.values());
        var propInfos = allPropInfos.filter(function (propInfo) {
            return propInfo.group === group && !propInfo.isVOField;
        });
        return propInfos;
    };
    /**
     * 根据group获取属性名称数组
     * @param group 属性分组
     */
    DataTypeInfo.prototype.getPropNamesByGroup = function (group) {
        var propNames = [];
        var propInfos = this.getPropInfosByGroup(group);
        propInfos.forEach(function (propInfo) {
            propNames.push(propInfo.name);
        });
        return propNames;
    };
    /**
     * 根据propName获取属性信息
     */
    DataTypeInfo.prototype.getPropInfoByName = function (propName) {
        if (this.propInfoMap.has(propName)) {
            return this.propInfoMap.get(propName);
        }
        return null;
    };
    /**
     * 根据path获取属性信息
     */
    DataTypeInfo.prototype.getPropInfoByPath = function (path) {
        // 先复制，防止shift方法产生污染
        var arrPath = path.concat([]);
        if (arrPath.length === 0) {
            throw Error("\u5C5E\u6027\u8DEF\u5F84\u4E0D\u80FD\u4E3A\u7A7A");
        }
        // 循环查找
        var typeInfo = this;
        var propInfo = null;
        while (typeInfo && arrPath.length > 0) {
            var propName = arrPath.shift();
            propInfo = typeInfo.getPropInfoByName(propName);
            if (!propInfo) {
                throw Error("\u8DEF\u5F84" + path + "\u4E2D\u5B58\u5728\u4E0D\u6B63\u786E\u7684\u8282\u70B9" + propName + "\uFF0C\u8BF7\u68C0\u67E5");
            }
            typeInfo = propInfo.typeInfo;
            // 如果是动态列，并且路径数组里还有属性，统一设置为null(动态列不再描述属性信息)
            if (propInfo.group === DataPropGroup.Dynamic && arrPath.length > 0) {
                propInfo = null;
                typeInfo = null;
            }
        }
        return propInfo;
    };
    /**
     * 根据path获取对应属性的TypeInfo
     */
    DataTypeInfo.prototype.getTypeInfoByPath = function (path) {
        // 空数组时返回
        if (path.length === 0) {
            return this;
        }
        // 获取对应属性信息
        var propInfo = this.getPropInfoByPath(path);
        if (!propInfo.typeInfo) {
            throw Error("\u8DEF\u5F84" + path + "\u65E0\u6CD5\u5B9A\u4F4D\u5230\u4E00\u4E2AEntityTypeInfo\uFF0C\u8BF7\u68C0\u67E5");
        }
        return propInfo.typeInfo;
    };
    /**
     * 获取主键的属性信息
     */
    DataTypeInfo.prototype.getPrimaryKeyPropInfo = function () {
        return this.getPropInfoByName(this.primaryKey);
    };
    /**
     * 根据name获取影射名
     */
    DataTypeInfo.prototype.getPropMappingByName = function (name) {
        var propInfo = this.getPropInfoByName(name);
        if (!propInfo) {
            return '';
        }
        return propInfo.mapping;
    };
    /**
     * 根据path获取映射名
     */
    DataTypeInfo.prototype.getPropMappingByPath = function (path) {
        var propInfo = this.getPropInfoByPath(path);
        if (!propInfo) {
            return '';
        }
        return propInfo.mapping;
    };
    /**
     * 检查属性是否属于特定的分组
     */
    DataTypeInfo.prototype.checkPropGroup = function (propName, propGroup) {
        var propInfo = this.getPropInfoByName(propName);
        if (propInfo && propInfo.group === propGroup) {
            return true;
        }
        return false;
    };
    /**
     * --------------------------------------------------------------------------------
     * 属性元数据 => 属性描述信息
     * --------------------------------------------------------------------------------
     */
    /**
     * 搜集所有属性信息
     * @todo：消除重复代码，ts不支持interface类型检测，暂时通过遍历实现。
     */
    DataTypeInfo.prototype.collectPropInfos = function () {
        var _this = this;
        // 简单属性
        var ngPlainProperties = EntityMetadataUtil.getNgFieldProperties(this.type);
        Object.keys(ngPlainProperties).forEach(function (propName) {
            var ngProperty = ngPlainProperties[propName];
            if (ngProperty.primary === true) {
                _this.primaryKey = propName;
            }
            if (ngProperty.foreign === true) {
                _this.foreignKey = propName;
            }
            _this.addPropInfo(DataPropGroup.Plain, propName, ngProperty.dataField, null, ngProperty);
        });
        // 实体属性
        var ngEntityProperties = EntityMetadataUtil.getNgObjectProperties(this.type);
        Object.keys(ngEntityProperties).forEach(function (propName) {
            var ngProperty = ngEntityProperties[propName];
            _this.addPropInfo(DataPropGroup.Object, propName, ngProperty.dataField, ngProperty.type, ngProperty);
        });
        // 动态实体属性
        var ngDynamicProperties = EntityMetadataUtil.getNgDynamicProperties(this.type);
        Object.keys(ngDynamicProperties).forEach(function (propName) {
            var ngProperty = ngDynamicProperties[propName];
            _this.addPropInfo(DataPropGroup.Dynamic, propName, ngProperty.dataField, null, ngProperty);
        });
        // 实体列表属性
        var ngEntityListProperties = EntityMetadataUtil.getNgListProperties(this.type);
        Object.keys(ngEntityListProperties).forEach(function (propName) {
            var ngProperty = ngEntityListProperties[propName];
            _this.addPropInfo(DataPropGroup.List, propName, ngProperty.dataField, ngProperty.type, ngProperty);
        });
    };
    DataTypeInfo.prototype.collectEntityInfos = function () {
        var entityInfo = EntityMetadataUtil.getNgEntityMatadata(this.type);
        if (!entityInfo) {
            // 应用于解析表单
            entityInfo = {
                originalCode: this.type["code"],
                nodeCode: this.type["label"]
            };
        }
        this.entityInfo = entityInfo;
    };
    /**
     * 添加属性信息
     */
    DataTypeInfo.prototype.addPropInfo = function (group, name, mapping, type, metadataInfo) {
        // 没有设置影射时，用属性名充当影射
        mapping = mapping ? mapping : name;
        var typeInfo = null;
        if (type) {
            typeInfo = new DataTypeInfo(type);
        }
        var propInfo = { group: group, name: name, mapping: mapping, typeInfo: typeInfo, metadataInfo: metadataInfo };
        this.propInfoMap.set(name, propInfo);
        // 将vo字段也加入便于表达式查找
        var originalDataField = metadataInfo && metadataInfo.originalDataField;
        if (originalDataField && !this.propInfoMap.has(originalDataField)) {
            this.propInfoMap.set(originalDataField, tslib_1.__assign({}, propInfo, { isVOField: true }));
        }
        else if (metadataInfo && metadataInfo.type) {
            var entityInfo = EntityMetadataUtil.getNgEntityMatadata(metadataInfo.type);
            if (entityInfo && entityInfo.originalCode) {
                this.propInfoMap.set(entityInfo.originalCode, tslib_1.__assign({}, propInfo, { isVOField: true }));
            }
        }
    };
    return DataTypeInfo;
}());
export { DataTypeInfo };
//# sourceMappingURL=data:application/json;base64,