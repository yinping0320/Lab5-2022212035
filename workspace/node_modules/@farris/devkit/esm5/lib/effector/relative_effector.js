import { Inject, Injectable, Injector } from '@angular/core';
import { NAMESPACE } from '../frame/index';
import { MESSAGE_SERVICE_TOKEN, NOTIFY_SERVICE_TOKEN } from '../core/index';
var RelativeEffector = /** @class */ (function () {
    function RelativeEffector(injector, messageService, notifyService, namespace) {
        this.injector = injector;
        this.messageService = messageService;
        this.notifyService = notifyService;
        this.namespace = namespace;
        this.ns = namespace;
    }
    RelativeEffector.prototype.effect = function (path, value, options) {
        if (value === true && options.message && this.notifyService) {
            var messageType = options.messageType || 'info';
            this.notifyService[messageType](options.message, { hideTitle: true });
        }
    };
    RelativeEffector.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    RelativeEffector.ctorParameters = function () { return [
        { type: Injector },
        { type: undefined, decorators: [{ type: Inject, args: [MESSAGE_SERVICE_TOKEN,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [NOTIFY_SERVICE_TOKEN,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [NAMESPACE,] }] }
    ]; };
    return RelativeEffector;
}());
export { RelativeEffector };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVsYXRpdmVfZWZmZWN0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2RldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9lZmZlY3Rvci9yZWxhdGl2ZV9lZmZlY3Rvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0QsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxvQkFBb0IsRUFBbUMsTUFBTSxlQUFlLENBQUM7QUFFN0c7SUFHRSwwQkFBb0IsUUFBa0IsRUFBeUMsY0FBK0IsRUFBd0MsYUFBNkIsRUFBNkIsU0FBUztRQUFyTSxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQXlDLG1CQUFjLEdBQWQsY0FBYyxDQUFpQjtRQUF3QyxrQkFBYSxHQUFiLGFBQWEsQ0FBZ0I7UUFBNkIsY0FBUyxHQUFULFNBQVMsQ0FBQTtRQUN2TixJQUFJLENBQUMsRUFBRSxHQUFHLFNBQVMsQ0FBQztJQUN0QixDQUFDO0lBRU0saUNBQU0sR0FBYixVQUFjLElBQVksRUFBRSxLQUFVLEVBQUUsT0FBaUM7UUFDdkUsSUFBSSxLQUFLLEtBQUssSUFBSSxJQUFJLE9BQU8sQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUMzRCxJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVyxJQUFJLE1BQU0sQ0FBQztZQUNsRCxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN2RTtJQUNILENBQUM7O2dCQVpGLFVBQVU7Ozs7Z0JBTGtCLFFBQVE7Z0RBUU0sTUFBTSxTQUFDLHFCQUFxQjtnREFBNEMsTUFBTSxTQUFDLG9CQUFvQjtnREFBMEMsTUFBTSxTQUFDLFNBQVM7O0lBVXhNLHVCQUFDO0NBQUEsQUFiRCxJQWFDO1NBWlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFeHByZXNzaW9uIH0gZnJvbSAnLi4vZXhwcmVzc2lvbi9pbmRleCc7XHJcbmltcG9ydCB7IE5BTUVTUEFDRSB9IGZyb20gJy4uL2ZyYW1lL2luZGV4JztcclxuaW1wb3J0IHsgTUVTU0FHRV9TRVJWSUNFX1RPS0VOLCBOT1RJRllfU0VSVklDRV9UT0tFTiwgSU1lc3NhZ2VTZXJ2aWNlLCBJTm90aWZ5U2VydmljZSB9IGZyb20gJy4uL2NvcmUvaW5kZXgnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgUmVsYXRpdmVFZmZlY3RvciBpbXBsZW1lbnRzIEV4cHJlc3Npb24uRWZmZWN0b3Ige1xyXG4gIHB1YmxpYyBuczogc3RyaW5nO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBASW5qZWN0KE1FU1NBR0VfU0VSVklDRV9UT0tFTikgcHJpdmF0ZSBtZXNzYWdlU2VydmljZTogSU1lc3NhZ2VTZXJ2aWNlLCBASW5qZWN0KE5PVElGWV9TRVJWSUNFX1RPS0VOKSBwcml2YXRlIG5vdGlmeVNlcnZpY2U6IElOb3RpZnlTZXJ2aWNlLCBASW5qZWN0KE5BTUVTUEFDRSkgcHJpdmF0ZSBuYW1lc3BhY2UpIHtcclxuICAgIHRoaXMubnMgPSBuYW1lc3BhY2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZWZmZWN0KHBhdGg6IHN0cmluZywgdmFsdWU6IGFueSwgb3B0aW9uczogRXhwcmVzc2lvbi5FZmZlY3RPcHRpb25zKSB7XHJcbiAgICBpZiAodmFsdWUgPT09IHRydWUgJiYgb3B0aW9ucy5tZXNzYWdlICYmIHRoaXMubm90aWZ5U2VydmljZSkge1xyXG4gICAgICBjb25zdCBtZXNzYWdlVHlwZSA9IG9wdGlvbnMubWVzc2FnZVR5cGUgfHwgJ2luZm8nO1xyXG4gICAgICB0aGlzLm5vdGlmeVNlcnZpY2VbbWVzc2FnZVR5cGVdKG9wdGlvbnMubWVzc2FnZSwgeyBoaWRlVGl0bGU6IHRydWUgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59Il19