import { Inject, Injectable, Optional } from "@angular/core";
import { EVENT_HANDLER_TOKEN } from "../expression/tokens";
import { RepositoryAddEntityEventHandler } from "./repository_add_entity_event_handler";
import { RepositoryRemoveEntityEventHandler } from "./repository_remove_entity_event_handler";
import { EntityValueChangedEventHandler } from "./entity_value_changed_event_handler";
import { StateValueChangedEventHandler } from "./state_value_changed_event_handler";
import { EntityUpdateEventHandler } from "./entity_update_event_handler";
import { RepositoryLoadEventHandler } from "./repository_load_event_handler";
import { BindingDataAppendObjectEventHandler } from "./binding_data_append_object_event_handler";
import { BindingDataValueChangeEventHandler } from "./binding_data_value_change_event_handler";
import { BindingDataRemoveObjectEventHandler } from "./binding_data_remove_object_event_handler";
import { BindingDataLoadEventHandler } from "./binding_data_load_event_handler";
import { BindingDataSelectionChangedEventHandler } from "./binding_data_selection_changed_event_handler";
var EventHandlerRegistry = /** @class */ (function () {
    function EventHandlerRegistry(handlers) {
        this.handlers = handlers;
    }
    Object.defineProperty(EventHandlerRegistry.prototype, "entityValueChangedEventHandler", {
        /**
         * 实体值变化处理器
         */
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof EntityValueChangedEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "stateValueChangedEventHandler", {
        /**
         * 状态值变化处理器
         */
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof StateValueChangedEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "repositoryAddEntityEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof RepositoryAddEntityEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "repositoryRemoveEntityEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof RepositoryRemoveEntityEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "entityUpdateEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof EntityUpdateEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "repositoryLoadEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof RepositoryLoadEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "bindingDataAppendEntityEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof BindingDataAppendObjectEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "bindingDataValueChangeEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof BindingDataValueChangeEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "bindingDataRemoveObjectEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof BindingDataRemoveObjectEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "bindingDataLoadEventHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof BindingDataLoadEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventHandlerRegistry.prototype, "bindingDataSelectionChangedHandler", {
        get: function () {
            return this.handlers && this.handlers.find(function (handler) { return handler instanceof BindingDataSelectionChangedEventHandler; });
        },
        enumerable: true,
        configurable: true
    });
    EventHandlerRegistry.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    EventHandlerRegistry.ctorParameters = function () { return [
        { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [EVENT_HANDLER_TOKEN,] }] }
    ]; };
    return EventHandlerRegistry;
}());
export { EventHandlerRegistry };
//# sourceMappingURL=data:application/json;base64,