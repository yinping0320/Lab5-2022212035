import { Injectable, Optional } from '@angular/core';
import { Subject } from 'rxjs';
import { ListenerRegistry } from './listener_registry';
/**
 * 监听器
 * @description 监听bindingList、UIState变更
 */
var Listeners = /** @class */ (function () {
    function Listeners(registry) {
        this.registry = registry;
        this.subject = new Subject();
        this.regist();
    }
    Object.defineProperty(Listeners.prototype, "onEvent", {
        get: function () {
            return this.subject;
        },
        enumerable: true,
        configurable: true
    });
    Listeners.prototype.regist = function () {
        var _this = this;
        var listeners = this.registry && this.registry.listeners || [];
        if (listeners && listeners.length > 0) {
            listeners.forEach(function (listener) {
                listener.onEvent.subscribe(function (modification) {
                    _this.subject.next(modification);
                });
            });
        }
    };
    Listeners.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    Listeners.ctorParameters = function () { return [
        { type: ListenerRegistry, decorators: [{ type: Optional }] }
    ]; };
    return Listeners;
}());
export { Listeners };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGVuZXJzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvbGlzdGVuZXIvbGlzdGVuZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBVSxVQUFVLEVBQVksUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFNdkQ7OztHQUdHO0FBQ0g7SUFNRSxtQkFBZ0MsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7UUFKbEQsWUFBTyxHQUF1QixJQUFJLE9BQU8sRUFBYSxDQUFDO1FBSzdELElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBTEQsc0JBQVcsOEJBQU87YUFBbEI7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7SUFJTywwQkFBTSxHQUFkO1FBQUEsaUJBU0M7UUFSQyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztRQUNqRSxJQUFJLFNBQVMsSUFBSSxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNyQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQUMsUUFBa0I7Z0JBQ25DLFFBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFVBQUMsWUFBdUI7b0JBQ2pELEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUNsQyxDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDOztnQkFsQkYsVUFBVTs7OztnQkFWRixnQkFBZ0IsdUJBZ0JWLFFBQVE7O0lBYXZCLGdCQUFDO0NBQUEsQUFuQkQsSUFtQkM7QUFDRCxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIEluamVjdG9yLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IExpc3RlbmVyUmVnaXN0cnkgfSBmcm9tICcuL2xpc3RlbmVyX3JlZ2lzdHJ5JztcclxuaW1wb3J0IHsgRXhwcmVzc2lvbiB9IGZyb20gJy4uL2V4cHJlc3Npb24vaW5kZXgnO1xyXG5cclxudHlwZSBFdmVudEFyZ3MgPSBFeHByZXNzaW9uLkV2ZW50QXJncztcclxudHlwZSBMaXN0ZW5lciA9IEV4cHJlc3Npb24uTGlzdGVuZXI7XHJcblxyXG4vKipcclxuICog55uR5ZCs5ZmoXHJcbiAqIEBkZXNjcmlwdGlvbiDnm5HlkKxiaW5kaW5nTGlzdOOAgVVJU3RhdGXlj5jmm7RcclxuICovXHJcbkBJbmplY3RhYmxlKClcclxuY2xhc3MgTGlzdGVuZXJzIHtcclxuICBwcml2YXRlIHN1YmplY3Q6IFN1YmplY3Q8RXZlbnRBcmdzPiA9IG5ldyBTdWJqZWN0PEV2ZW50QXJncz4oKTtcclxuICBwdWJsaWMgZ2V0IG9uRXZlbnQoKTogT2JzZXJ2YWJsZTxFdmVudEFyZ3M+IHtcclxuICAgIHJldHVybiB0aGlzLnN1YmplY3Q7XHJcbiAgfVxyXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHByaXZhdGUgcmVnaXN0cnk6IExpc3RlbmVyUmVnaXN0cnkpIHtcclxuICAgIHRoaXMucmVnaXN0KCk7XHJcbiAgfVxyXG4gIHByaXZhdGUgcmVnaXN0KCkge1xyXG4gICAgY29uc3QgbGlzdGVuZXJzID0gdGhpcy5yZWdpc3RyeSAmJiB0aGlzLnJlZ2lzdHJ5Lmxpc3RlbmVycyB8fCBbXTtcclxuICAgIGlmIChsaXN0ZW5lcnMgJiYgbGlzdGVuZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyOiBMaXN0ZW5lcikgPT4ge1xyXG4gICAgICAgIGxpc3RlbmVyLm9uRXZlbnQuc3Vic2NyaWJlKChtb2RpZmljYXRpb246IEV2ZW50QXJncykgPT4ge1xyXG4gICAgICAgICAgdGhpcy5zdWJqZWN0Lm5leHQobW9kaWZpY2F0aW9uKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbmV4cG9ydCB7IExpc3RlbmVycyB9O1xyXG4iXX0=