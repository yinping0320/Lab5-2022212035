import { Subject } from 'rxjs';
import { CommandContext } from './command_context';
import { CommandHandler } from './command_handler';
import { ControllerMethod, ExecutingStage, MethodStage, StageParam } from './dynamic_command_handler_metadata';
export declare class DynamicCommandHandler extends CommandHandler {
    commandName: string;
    private method;
    constructor(commandName: string, method: ControllerMethod);
    dynamicInvoke(serviceTocken: string, method: string, args: StageParam[], context: CommandContext): any;
    dynamicInvoke2(methodObject: ExecutingStage, context: CommandContext): Subject<{}>;
    private executeWithServiceModule;
    schedule(): void;
    scheduleStages(stages: MethodStage[], initialStage: MethodStage): void;
    private loadProvidersFromModule;
    private isInjectableService;
}
