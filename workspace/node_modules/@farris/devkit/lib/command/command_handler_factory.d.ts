/**
 * 命令处理器工厂相关定义
 * @author Witt<jiwt@inspur.com>
 */
import { FrameContext } from '../frame/index';
import { CommandHandler } from './command_handler';
import { CommandHandlerRegistry } from './command_handler_registry';
import { CommandHandlerExtenderRegistry } from './command_handler_extender_registry';
import { VariableParseService } from '../variable/variable_parse_service';
/**
 * 命令处理器工厂
 */
declare class CommandHandlerFactory {
    private handlerRegistry;
    private extenderRegistry;
    private frameContext;
    private variableParseService;
    /**
     * 构造函数
     * @param handlerRegistry  命令处理注册器
     * @param extenderRegistry 命令处理扩展注册器
     */
    constructor(handlerRegistry: CommandHandlerRegistry, extenderRegistry: CommandHandlerExtenderRegistry, frameContext: FrameContext, variableParseService: VariableParseService);
    /**
     * 创建命令处理器
     * @param   commandName 命令名称
     * @returns 对应的命令处理器实例
     */
    create(commandName: string): CommandHandler;
    dispose(): void;
}
export { CommandHandlerFactory };
