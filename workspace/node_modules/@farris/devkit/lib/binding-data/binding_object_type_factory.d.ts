import { BindingProperty } from './binding_property';
import { BindingObject } from './binding_object';
/**
 * BindingObjectTypeFactory
 */
export declare class BindingObjectTypeFactory {
    private static provider;
    /**
     * 创建BindingObject
     * @param properties
     * @returns
     */
    static create(properties: BindingProperty[]): BindingObject;
    /**
     * 创建原型类型
     * @param properties
     * @returns
     */
    private static createType;
    /**
     * 扩展原型属性
     * @param typePrototype
     * @param properties
     */
    private static extendProperties;
    /**
     * 扩展原型列表属性
     * @param typePrototype
     * @param property
     */
    private static extendListProperty;
    /**
     * 扩展原型对象属性
     * @param typePrototype
     * @param property
     */
    private static extendObjectProperty;
    /**
     * 扩展原型动态属性
     * @param typePrototype
     * @param property
     */
    private static extendDynamicObjectProperty;
    /**
     * 扩展原型简单属性
     * @param typePrototype
     * @param property
     */
    private static extendPlainProperty;
    /**
     * 获取缓存的bindingList模板类
     * @param properties bindingList属性
     * @returns
     */
    private static getType;
}
