import { Expression } from "../expression/index";
import { EventHandler } from "./event_handler";
export declare class StateValueChangedEventHandler extends EventHandler {
    /**
     * 获取相关表达式
     * @param event event
     */
    filter(event: Expression.EventArgs): Expression.ExpressionObject[];
    /**
     * 发布事件
     * @param event event
     */
    dispatch(event: Expression.EventArgs): void;
    /**
     * 副作用
     * @param event event
     * @param expressionObject expressionObject
     */
    effect(event: Expression.EventArgs, expressionObject: Expression.ExpressionObject): void;
    output(event: Expression.EventArgs, expressionObject: Expression.ExpressionObject, currentRows: Expression.ICurrentRow[], effector: Expression.Effector, paths: any[][]): void;
    private effectRows;
    /**
     * 获取子表事件行
     * @param paths
     * @param event
     * @returns
     */
    getCurrentRowByEvent(paths: string[], event: Expression.EventArgs): {
        [prop: string]: any;
    };
}
