/**
 * 日期处理类
 */
declare class DateUtil {
    /**
     * 空日期字符串（N版）
     * @todo：兼容服务器端，不应该在devkit体现这种兼容，待移除
     */
    static emptyDateTimeString: any;
    /**
     * 默认空日期字符串（ISO标准格式）
     */
    static emptyISODateTimeString: any;
    /**
     * 默认日期听格式
     */
    static defaultISOFormat: string;
    static defaultDisplayFormat: string;
    static defaultDateFormat: string;
    static defaultTimeFormat: string;
    /**
     * 将日期（或日期字符串）转换为完整的的ISO格式的字符串
     */
    static formatISO(dateOrDateString: string | Date): string;
    /**
     * 将日期（或日期字符串）转换为指定格式的字符串
     * @param dateOrDateString 日期对象或符合ISO8601规范的日期字符串
     * @param dateFormat 日期格式字符串
     */
    static format(dateOrDateString: string | Date, dateFormat?: string): string;
    /**
     * 创建日期
     * @param dateOrDateString 日期对象或符合ISO8601规范的日期字符串
     */
    static parse(dateOrDateString: string | Date): Date;
    /**
     * 是否是日期对象
     */
    static isDate(date: any): boolean;
    /**
     * 是否是空日期或者空日期字符串
     * @param dateOrDateString 日期或日期字符串
     */
    static isEmptyDateOrDateString(dateOrDateString: string | Date): boolean;
    /**
     * 是否为空日期字符串
     * @param date 日期对象
     */
    static isEmptyDate(date: Date): boolean;
    /**
     * 是否是空日期字符串
     * @param dateString 日期字符串
     */
    static isEmptyDateString(dateString: string): boolean;
    /**
     * 两个日期是否相等
     * @param dateOrDateString1 日期对象或字符串
     * @param dateOrDateString1 日期对象或字符串
     * @return 相等返回true，否则返回false
     */
    static isEqual(dateOrDateString1: string | Date, dateOrDateString2: string | Date): boolean;
    /**
     * 两个日期是否相等
     * @param dateOrDateString1 日期对象或字符串
     * @param dateOrDateString1 日期对象或字符串
     * @return 返回-1、0、1
     */
    static compare(dateOrDateString1: string | Date, dateOrDateString2: string | Date): number;
}
export { DateUtil };
