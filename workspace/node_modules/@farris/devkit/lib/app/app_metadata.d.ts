import { CommandHandler, CommandHandlerExtender } from '../command';
import { NgChildForm, NgFormControl, NgValidateForm } from '../form/decorators';
import { FormDeclaration } from '../schema/dom-entity';
import { NgAction, NgRenderState, NgState } from '../state-machine/decorators';
import { NgParam } from '../ui-state';
import { NgCommand } from '../view-model/decorators';
export interface IContextMetadata {
    identify?: string;
    namespace?: string;
    commands?: {
        [commandName: string]: NgCommand;
    };
    commandHandlers?: CommandHandler[];
    commandHandlerExtends?: CommandHandlerExtender[];
    form?: NgValidateForm;
    formControls?: {
        [formControlName: string]: NgFormControl;
    };
    subForms?: {
        [formName: string]: NgChildForm;
    };
    stateMachine?: IContextStateMachineMetadata;
    uiStates?: {
        [propName: string]: NgParam;
    };
    bindingTo?: string;
    viewModelCode?: string;
    declarations?: FormDeclaration;
    subscriptions?: Array<any>;
}
export interface IContextStateMachineMetadata {
    states: {
        [stateName: string]: NgState;
    };
    renderStates: {
        [renderStateName: string]: NgRenderState;
    };
    actions: {
        [actionName: string]: NgAction;
    };
}
