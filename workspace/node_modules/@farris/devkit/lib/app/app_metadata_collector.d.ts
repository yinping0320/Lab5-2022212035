import { CommandController } from '../command';
import { Schema } from '../schema';
import { IFormViewModel, IStateMachine } from '../schema/form-metadata';
import { IContextMetadata } from './app_metadata';
export declare class ContextMetadataBuilder {
    constructor();
    /**
     * 构造应用程序上下文元数据
     * @param formMetadataContent 表单元数据
     * @param stateMachineMetadata 状态机元数
     * @returns 应用程序上下文元数据
     */
    buildAppContextMetadata(formMetadataContent: any, stateMachineMetadata: IStateMachine): IContextMetadata;
    /**
     * 构造视图上下文元数据
     * @param componentId 组件标识
     * @param viewModel 视图模型元数据
     * @param declarations 外部接口定义
     * @param subscriptions 事件订阅定义
     * @returns 视图上下文元数据
     */
    buildViewContextMetadata(component: any, viewModel: IFormViewModel, schema: Schema, controllers: {
        [id: string]: CommandController;
    }, dynamicOptions: any): IContextMetadata;
    private buildCommand;
    private buildFormMetadata;
    private buildFormControlMetadata;
    /**
     * 获取对应的title值
     * @param matchedElement
     * @param defaultValue
     * @returns
     */
    private getTitle;
    /**
     * 构造对应的converter
     * @param field
     * @returns
     */
    private generateConverter;
    /**
     * 由状态机元数据创建状态机上下文描述
     * @param stateMachineMetadata 状态机元数据
     * @returns 状态机上下文描述
     */
    private buildStataMachineMetadata;
    private buildUiStateMetadata;
    private buildRenderFunction;
    private buildCommandHandlers;
}
