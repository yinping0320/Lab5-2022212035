import { BindingData } from '../binding-data';
import { IDisposable } from '../core';
/**
 * BindingData管理类
 */
declare class BindingDataManager implements IDisposable {
    /**
     * BindingDataMap
     */
    private bindingDataMap;
    /**
     * 构造函数
     */
    constructor();
    /**
     * 获取BindingDataMap
     */
    getBindingDataMap(): Map<string, BindingData>;
    /**
     * 根据name获取BindingData
     * @return 找不到时返回undefined
     */
    getBindingDataByName(name: string): BindingData;
    /**
     * 初始化全局的BindingData
     * @description 仅在高速模式时注册bindingData
     */
    regBindingData(name: string, bindingData: BindingData): void;
    unRegisteBindingData(name: string): void;
    /**
     * 是否Repository已经存在
     */
    ifBindingDataExits(name: string): boolean;
    dispose(): void;
}
export { BindingDataManager };
