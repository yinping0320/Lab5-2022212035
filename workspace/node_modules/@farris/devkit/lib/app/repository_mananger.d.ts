import { Repository } from '../repository/index';
import { Entity } from '../entity/index';
import { IDisposable } from '../core';
/**
 * Repository管理类
 */
declare class RepositoryManager implements IDisposable {
    /**
     * repositoryMap
     */
    private repositoryMap;
    /**
     * 构造函数
     */
    constructor();
    /**
     * 注册Repository
     */
    regRepository(name: string, repository: Repository<Entity>): void;
    unRegisteRepository(name: string): void;
    /**
     * 获取RepositoryMap
     * @internal
     */
    getRepositoryMap(): Map<string, Repository<Entity>>;
    /**
     * 获取Repository数组
     */
    getRepositories(): Repository<Entity>[];
    /**
     * 根据name获取Repository
     */
    getRepositoryByName(name: string): Repository<Entity>;
    /**
     * 是否Repository已经存在
     */
    ifRepositoryExits(name: string): boolean;
    dispose(): void;
}
export { RepositoryManager };
