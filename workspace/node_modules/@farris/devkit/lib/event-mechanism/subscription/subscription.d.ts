import { FrameComponent } from '../../frame/index';
import { IDisposable } from '../../core/index';
declare class Subscription {
    /**
     * 初始化
     */
    init(frameComponent: FrameComponent): IDisposable[];
    /**
     *  根据订阅列表进行初始化
     * @param frameComponent
     * @param ngEvents 订阅列表
     * @returns eventPipes
     */
    initWithSubscriptions(frameComponent: FrameComponent, ngEvents: {
        [propName: string]: any;
    }): IDisposable[];
    /**
     * 更改成为public形式 目的为了解析表单可以进行重新绑定
     * @param frameComponent
     * @param ngEvents
     * @returns
     */
    bindSubscription(frameComponent: FrameComponent, ngEvents: {
        [propName: string]: any;
    }): IDisposable[];
    /**
     * 获取组件订阅列表
     * @param frameComponent 表单component
     * @returns 组件订阅列表信息
     */
    getNgEvents(frameComponent: FrameComponent): {
        [propName: string]: any;
    };
    private subscriptionHandler;
    /**
     * 设置paramMap后，将param映射到UISTATE上
     */
    private paramMap2UiState;
    private getFrameContext;
    private setUiStateProperty;
}
export { Subscription };
