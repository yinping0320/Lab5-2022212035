/**
 * 过滤条件管理器
 */
export declare class FilterConditionManager {
    private filters;
    /**
     * 获取过滤条件
     * @param bindingPath 绑定路径
     */
    getFilters(bindingPath: string): any[];
    /**
     * 自定义合并
     * @param bindingPath 绑定路径
     * @param merge 合并函数
     */
    mergeCondition(bindingPath: string, merge: (conditions: any) => any): void;
    /**
     * 增加过滤条件
     * @param bindingPath 绑定路径
     * @param condition 过滤条件
     */
    addCondition(bindingPath: string, condition: any): void;
    /**
     * 批量增加过滤条件
     * @param bindingPath 绑定路径
     * @param conditions 过滤条件数组
     */
    addConditions(bindingPath: string, conditions: Array<any>): void;
    /**
     * 删除过滤条件
     * @param bindingPath 绑定路径
     * @param predicate 条件表达式
     */
    removeCondition(bindingPath: string, predicate: (value: any, index: number, array: any[]) => boolean): void;
    /**
     * 清空过滤条件
     */
    clear(): void;
    /**
     * 设置过滤条件数组
     * @param bindingPath 绑定路径
     * @param conditions 过滤条件数组
     */
    setConditions(bindingPath: string, conditions: Array<any>): void;
    /**
     * 查找过滤条件索引
     * @param bindingPath 绑定路径
     * @param condition 过滤条件
     */
    private findConditionIndex;
}
