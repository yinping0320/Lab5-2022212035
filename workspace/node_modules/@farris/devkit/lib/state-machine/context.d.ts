import { StateMachine } from './state_machine';
import { State } from './types';
import { Context } from '../context/context';
import { VariableParseService } from '../variable/index';
import { FrameContext } from '../frame/index';
import { StateMachineEvent } from './state_machine_event';
/**
 * 状态机上下文
 */
export declare class StateMachineContext {
    stateMachine: StateMachine;
    /**
     * 当前状态名称
     */
    state: string;
    parent: Context;
    parser: VariableParseService;
    frameContext: FrameContext;
    stateMachineEvent: StateMachineEvent;
    /**
     * 构造函数
     * @param stateMachine 状态机
     * @param initialState 初始状态
     */
    constructor(stateMachine: StateMachine);
    initialize(variableParseService: VariableParseService, initialState: State): void;
    /**
     * 状态迁移
     * @param stateName 下一状态的名称
     */
    transitTo(stateName: string): void;
    parse(expression: string, targetType: 'source' | 'target'): any;
    private parseSourceValue;
    get(expression: string): any;
    getUIState(expression: string): any;
    getData(expression: string): any;
}
