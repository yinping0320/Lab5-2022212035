import { EnumData } from './dom-entity';
export interface SchemaType {
    name: string;
    code: string;
    label: string;
    fields?: SchemaEntityField[];
    entities?: SchemaEntity[];
    primary?: string;
}
/**
 * schema
 */
export declare class Schema {
    dataSource?: string;
    sourceUri: string;
    id: string;
    code: string;
    name: string;
    entities: SchemaEntity[];
    variables: SchemaEntityField[];
    eapiId: string;
    extendProperties: {
        enableStdTimeFormat: boolean;
    };
}
/**
 * 实体
 */
export declare class SchemaEntity {
    id: string;
    code: string;
    name: string;
    label: string;
    type: SchemaEntityType;
}
/**
 * 实体类型对象
 */
export declare class SchemaEntityType implements SchemaType {
    code: string;
    label: string;
    name: string;
    primary: string;
    fields: SchemaEntityField[];
    entities?: SchemaEntity[];
    displayName?: string;
}
/**
 * 字段
 */
export declare class SchemaEntityField {
    $type: SchemaEntityField$Type;
    id: string;
    originalId: string;
    code: string;
    label: string;
    bindingField: string;
    name: string;
    defaultValue: any;
    require: boolean;
    readonly: boolean;
    type: SchemaEntityFieldType;
    editor?: SchemaEntityFieldEditor;
    path?: string;
    bindingPath?: string;
    multiLanguage?: boolean;
    converter?: any;
    expression?: any;
}
/**
 * 字段类型对象
 */
export declare class SchemaEntityFieldType implements SchemaType {
    code: string;
    label: string;
    $type: SchemaEntityFieldType$Type;
    name: SchemaEntityFieldTypeName | any;
    length?: number;
    precision?: number;
    valueType?: SchemaEntityFieldType;
    enumValues?: EnumData[];
    fields?: SchemaEntityField[];
    displayName?: string;
    primary?: string;
    entities?: SchemaEntity[];
    elementType?: any;
    extendProperty?: any;
}
/**
 * 字段编辑器对象
 */
export declare class SchemaEntityFieldEditor {
    $type: any;
    [propName: string]: any;
}
/**
 * 字段类型枚举
 */
export declare enum SchemaEntityField$Type {
    /**
     * 简单类型字段
     */
    SimpleField = "SimpleField",
    /**
     * 关联/UDT类型字段
     */
    ComplexField = "ComplexField"
}
/**
 * 字段类型对象中的类型枚举
 */
export declare enum SchemaEntityFieldType$Type {
    /**
     * 字符串
     */
    StringType = "StringType",
    /**
     * 备注
     */
    TextType = "TextType",
    /**
     * 数字（整数、浮点数）
     */
    NumericType = "NumericType",
    /**
     * 布尔
     */
    BooleanType = "BooleanType",
    /**
     * 日期
     */
    DateType = "DateType",
    /**
     * 日期时间
     */
    DateTimeType = "DateTimeType",
    /**
     * 枚举
     */
    EnumType = "EnumType",
    /**
     * 实体类
     */
    EntityType = "EntityType",
    /**
     * 分级码
     */
    HierarchyType = "HierarchyType",
    /**
     * 对象
     */
    ObjectType = "ObjectType",
    /**
     * 数字（大数据）
     */
    BigNumericType = "BigNumericType"
}
/**
 * 字段类型中的名称
 */
export declare enum SchemaEntityFieldTypeName {
    /**
     * 简单类型字段
     */
    String = "String",
    /**
     * 日期时间
     */
    DateTime = "DateTime",
    /**
     * 日期
     */
    Date = "Date",
    /**
     * 枚举
     */
    Enum = "Enum",
    /**
     * 布尔
     */
    Boolean = "Boolean",
    /**
     * 数字
     */
    Number = "Number",
    /**
     * 备注
     */
    Text = "Text",
    /**
     * 大数字
     */
    BigNumber = "BigNumber"
}
