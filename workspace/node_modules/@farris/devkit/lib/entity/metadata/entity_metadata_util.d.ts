import { Type } from '@angular/core';
import { Entity } from '../entity';
import { NgEntity } from './entity_decorator';
import { NgProperty, NgFieldProperty, NgObjectProperty, NgDynamicProperty, NgListProperty } from './field_decorator';
/**
 * 实体元数据工具类
 */
export declare class EntityMetadataUtil {
    /**
     * 获取所有属性
     * @todo：封装根据基类获取所有元数据的方法，解决重复代码
     */
    static getAllNgProperties(entityType: Type<Entity>): {
        [propName: string]: NgProperty;
    };
    /**
     * 获取实体元数据描述
     */
    static getNgEntityMatadata(entityType: any): NgEntity;
    /**
     * 获取NgField的属性元数据
     */
    static getNgFieldProperties(entityType: any): {
        [propName: string]: NgFieldProperty;
    };
    /**
     * 获取NgObject属性元数据
     */
    static getNgObjectProperties(entityType: any): {
        [propName: string]: NgObjectProperty;
    };
    /**
     * 获取NgDynamic属性元数据
     */
    static getNgDynamicProperties(entityType: any): {
        [propName: string]: NgDynamicProperty;
    };
    /**
     * 获取NgList属性元数据
     */
    static getNgListProperties(entityType: any): {
        [propName: string]: NgListProperty;
    };
    /**
     * 获取主键属性元数据
     */
    static getPrimaryKeyProperty(entityType: Type<Entity>): NgFieldProperty;
}
