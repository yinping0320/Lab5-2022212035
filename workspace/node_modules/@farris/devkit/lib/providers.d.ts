import { Provider } from '@angular/core';
import { AppContext, AppContextManager } from './app/index';
import { RestfulService } from './rest/index';
import { RouterParamService } from './misc/index';
import { FrameContext, FrameEventBus } from './frame/index';
import { Subscription } from './event-mechanism/index';
import { EventBus } from './event-bus-new/index';
/**
 * Providers for compatibility.
 */
export declare const FARRIS_DEVKIT_APP_PROVIDERS: (Provider[] | typeof AppContext | typeof Subscription | typeof EventBus | typeof AppContextManager | typeof RouterParamService | typeof FrameEventBus | typeof RestfulService)[];
/**
 * Providers for DevkitModule.
 */
export declare const FARRIS_DEVKIT_MODULE_PROVIDERS: (Provider[] | typeof Subscription | typeof EventBus | typeof AppContextManager | typeof RouterParamService | typeof RestfulService)[];
/**
 * Providers for root frame components.
 */
export declare const FARRIS_DEVKIT_ROOT_FRAME_PROVIDERS: Provider[];
/**
 * 表达式provider
 * @description 放置到root-component，整个表单只需要注入一次
 */
export declare const FARRIS_DEVKIT_EXPRESSION_ROOT_FRAME_PROVIDERS: Provider[];
/**
 * 表达式监听器provider
 * @description 放置到每个表单的root上，组合表单root也需要放置
 */
export declare const FARRIS_DEVKIT_EXPRESSION_LISTENER_PROVIDERS: Provider[];
export declare const FARRIS_DEVKIT_EXPRESSION_EFFECTOR_PROVIDERS: Provider[];
/**
 * Providers for frame components.
 */
export declare const FARRIS_DEVKIT_FRAME_PROVIDERS: ((typeof import("./command/command_handler_registry").CommandHandlerRegistry | typeof import("./command/command_handler_extender_registry").CommandHandlerExtenderRegistry | typeof import("./command/command_handler_factory").CommandHandlerFactory | typeof import("./command/command_bus").CommandBus)[] | typeof FrameContext)[];
