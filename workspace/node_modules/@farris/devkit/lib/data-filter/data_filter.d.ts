import { Compare, FilterCondition, ObjectFilterCondition } from './types';
import { List } from 'immutable';
import { BindingObject } from '../binding-data';
export declare abstract class DataFilter {
    constructor();
    abstract filter(data: List<BindingObject>, conditions: Array<FilterCondition> | ObjectFilterCondition): any;
    protected getCurrentLanguage(): string;
    getCompareResult(fieldDataValue: any, operator: Compare, targetValue: any): boolean;
    getValue(object: any, propertyName: string): any;
}
