export declare enum Compare {
    /**
     * 等于
     */
    Equal = 0,
    /**
     * 不等于
     */
    NotEqual = 1,
    /**
     * 大于
     */
    Greater = 2,
    /**
     * 大于等于
     */
    GreaterOrEqual = 3,
    /**
     * 小于
     */
    Less = 4,
    /**
     * 小于等于
     */
    LessOrEqual = 5,
    /**
     * 包含
     */
    Like = 6,
    /**
     * 不包含
     */
    NotLike = 9,
    In = 14,
    /**
     * 为空
     */
    Empty = 1001,
    /**
     * 不为空
     */
    NotEmpty = 1002
}
export declare enum FilterRelation {
    Empty = 0,
    /**
     * 并且
     */
    And = 1,
    /**
     * 或者
     */
    Or = 2
}
export interface FilterCondition {
    /**
     * 字段
     */
    FilterField: string;
    /**
     * 值
     */
    Value: string;
    /**
     * 左括号
     */
    Lbracket?: string;
    /**
     * 右括号
     */
    Rbracket?: string;
    /**
     * 关系
     */
    Relation?: FilterRelation;
    /**
     * 比较符
     */
    Compare?: Compare;
    /**
     * 表达式类型
     */
    Expresstype?: ExpressValueType;
}
/**
 * 值类型
 */
export declare enum ExpressValueType {
    /**
     * 值
     */
    Value = 0,
    /**
     * 表达式
     */
    Expression = 1,
    /**
     * 前端表达式
     */
    FrontExpress = "frontExpress"
}
export declare const LeftBracket: string[];
export declare const RighttBracket: string[];
/**
 * 对象类型过滤条件
 */
export declare type ObjectFilterCondition = {
    [filterField: string]: {
        operator1: Compare;
        operator2?: Compare;
        relation: 'and' | 'or';
        value1: any;
        value2: any;
    };
};
