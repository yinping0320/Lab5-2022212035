import { OnInit, EventEmitter, AfterViewInit, ElementRef } from '@angular/core';
import { QueryCondition } from '../../entity/querycondition';
import { SolutionService } from '../../service/solution.service';
import { NumberRangeValue } from '../../entity/conditionvalue/numberrangevaue';
export declare class NumberComponent implements OnInit, AfterViewInit {
    private solutionService;
    private readonly element;
    autoLabel: boolean;
    disabled: boolean;
    searchHandle: EventEmitter<{}>;
    /**判断是否是在扩展区域展示 */
    extend: boolean;
    /**判断是否显示label */
    showlabel: boolean;
    canNull: boolean;
    number: string;
    beginValue: any;
    endValue: any;
    precision: number;
    placeholder: string;
    beginPlaceHolder: string;
    endPlaceHolder: string;
    bigNumber: boolean;
    max: number;
    min: number;
    readonly isExtend: boolean;
    readonly hidenLabel: boolean;
    _item: any;
    numberRange: string;
    item: any;
    constructor(solutionService: SolutionService, element: ElementRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    getConditionItemTitle(field: QueryCondition): string;
    constructMultiFieldNumberRange(value: NumberRangeValue): void;
    numberChange(event: any): void;
    beginValueChange($event: any): void;
    endValueChange($event: any): void;
}
