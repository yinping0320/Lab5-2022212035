/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
import { TextValue } from "./textvalue";
import { NumberRangeValueConvertor } from "./numberrangevaue";
import { DateRangeValue } from "./daterangevalue";
import { HelpValue } from "./helpvalue";
import { DropDownListValueConvert } from "./dropdownlistvalue";
/**
 * @record
 */
export function IValue() { }
if (false) {
    /**
     * @return {?}
     */
    IValue.prototype.getControlType = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.getOriginalValue = function () { };
    /**
     * @param {?} value
     * @return {?}
     */
    IValue.prototype.setOriginalValue = function (value) { };
    /**
     * @return {?}
     */
    IValue.prototype.clearValue = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.isEmpty = function () { };
    /**
     * @param {?=} ctrl
     * @return {?}
     */
    IValue.prototype.getValueText = function (ctrl) { };
}
export class ConditionValueConvert {
    /**
     * @param {?} obj
     * @return {?}
     */
    convertToObject(obj) {
        /** @type {?} */
        let conditionValue = (/** @type {?} */ (obj));
        /** @type {?} */
        let controlType = conditionValue.getControlType();
        /** @type {?} */
        let jobj = new Object();
        jobj["Type"] = controlType;
        if (controlType == ControlType.DropDown) {
            /** @type {?} */
            let convertor = new DropDownListValueConvert();
            jobj["Content"] = convertor.convertToObject(conditionValue);
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            let convertor = new NumberRangeValueConvertor();
            jobj["Content"] = convertor.convertToObject(conditionValue);
        }
        else {
            jobj["Content"] = conditionValue;
        }
        return jobj;
    }
    /**
     * @param {?} jobj
     * @return {?}
     */
    initFromObject(jobj) {
        /** @type {?} */
        let controlType = (/** @type {?} */ (jobj["Type"]));
        /** @type {?} */
        let content = jobj["Content"];
        if (controlType == ControlType.Text) {
            return Object.assign(new TextValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            let convertor = new NumberRangeValueConvertor();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.DateRange) {
            return Object.assign(new DateRangeValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.DropDown) {
            /** @type {?} */
            let convertor = new DropDownListValueConvert();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.Help) {
            return Object.assign(new HelpValue(), (/** @type {?} */ (content)));
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXZhbHVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2NvbmRpdGlvbnZhbHVlL2l2YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFFL0QsNEJBT0M7Ozs7O0lBTkcsa0RBQTZCOzs7O0lBQzdCLG9EQUF3Qjs7Ozs7SUFDeEIseURBQW1DOzs7O0lBQ25DLDhDQUFtQjs7OztJQUNuQiwyQ0FBbUI7Ozs7O0lBQ25CLG9EQUFnQzs7QUFHcEMsTUFBTSxPQUFPLHFCQUFxQjs7Ozs7SUFDOUIsZUFBZSxDQUFDLEdBQVU7O1lBQ2xCLGNBQWMsR0FBQyxtQkFBQSxHQUFHLEVBQVU7O1lBQzVCLFdBQVcsR0FBQyxjQUFjLENBQUMsY0FBYyxFQUFFOztZQUMzQyxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7UUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFDLFdBQVcsQ0FBQztRQUN6QixJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsUUFBUSxFQUFDOztnQkFDN0IsU0FBUyxHQUFDLElBQUksd0JBQXdCLEVBQUU7WUFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDN0Q7YUFDSSxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsV0FBVyxFQUFDOztnQkFDckMsU0FBUyxHQUFDLElBQUkseUJBQXlCLEVBQUU7WUFDN0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDN0Q7YUFDRztZQUNBLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBQyxjQUFjLENBQUM7U0FDbEM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVELGNBQWMsQ0FBQyxJQUFXOztZQUNsQixXQUFXLEdBQUMsbUJBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFlOztZQUN2QyxPQUFPLEdBQVEsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNsQyxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsSUFBSSxFQUFDO1lBQzdCLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFNBQVMsRUFBRSxFQUFDLG1CQUFBLE9BQU8sRUFBYSxDQUFDLENBQUM7U0FDOUQ7YUFDSSxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsV0FBVyxFQUFDOztnQkFDckMsU0FBUyxHQUFDLElBQUkseUJBQXlCLEVBQUU7WUFDN0MsT0FBTyxTQUFTLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVDO2FBQ0ksSUFBRyxXQUFXLElBQUUsV0FBVyxDQUFDLFNBQVMsRUFBQztZQUN2QyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxjQUFjLEVBQUUsRUFBQyxtQkFBQSxPQUFPLEVBQWtCLENBQUMsQ0FBQztTQUN4RTthQUNJLElBQUcsV0FBVyxJQUFFLFdBQVcsQ0FBQyxRQUFRLEVBQUM7O2dCQUNsQyxTQUFTLEdBQUMsSUFBSSx3QkFBd0IsRUFBRTtZQUM1QyxPQUFPLFNBQVMsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDNUM7YUFDSSxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsSUFBSSxFQUFDO1lBQ2xDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFNBQVMsRUFBRSxFQUFDLG1CQUFBLE9BQU8sRUFBYSxDQUFDLENBQUM7U0FDOUQ7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250cm9sVHlwZSB9IGZyb20gXCIuLi9jb250cm9sdHlwZVwiO1xyXG5pbXBvcnQgeyBUZXh0VmFsdWUgfSBmcm9tIFwiLi90ZXh0dmFsdWVcIjtcclxuaW1wb3J0IHsgTnVtYmVyUmFuZ2VWYWx1ZUNvbnZlcnRvciB9IGZyb20gXCIuL251bWJlcnJhbmdldmF1ZVwiO1xyXG5pbXBvcnQgeyBEYXRlUmFuZ2VWYWx1ZSB9IGZyb20gXCIuL2RhdGVyYW5nZXZhbHVlXCI7XHJcbmltcG9ydCB7IEhlbHBWYWx1ZSB9IGZyb20gXCIuL2hlbHB2YWx1ZVwiO1xyXG5pbXBvcnQgeyBEcm9wRG93bkxpc3RWYWx1ZUNvbnZlcnQgfSBmcm9tIFwiLi9kcm9wZG93bmxpc3R2YWx1ZVwiO1xyXG5pbXBvcnQgeyBJQ29udHJvbCB9IGZyb20gXCIuLi9jb250cm9sdHlwZS9pY29udHJvbFwiO1xyXG5leHBvcnQgaW50ZXJmYWNlIElWYWx1ZXtcclxuICAgIGdldENvbnRyb2xUeXBlKCk6Q29udHJvbFR5cGU7XHJcbiAgICBnZXRPcmlnaW5hbFZhbHVlKCk6IGFueTtcclxuICAgIHNldE9yaWdpbmFsVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XHJcbiAgICBjbGVhclZhbHVlKCk6IHZvaWQ7XHJcbiAgICBpc0VtcHR5KCk6IGJvb2xlYW47XHJcbiAgICBnZXRWYWx1ZVRleHQoY3RybD86IGFueSk6c3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ29uZGl0aW9uVmFsdWVDb252ZXJ0e1xyXG4gICAgY29udmVydFRvT2JqZWN0KG9iajpJVmFsdWUpOk9iamVjdHtcclxuICAgICAgICBsZXQgY29uZGl0aW9uVmFsdWU9b2JqIGFzIElWYWx1ZTtcclxuICAgICAgICBsZXQgY29udHJvbFR5cGU9Y29uZGl0aW9uVmFsdWUuZ2V0Q29udHJvbFR5cGUoKTtcclxuICAgICAgICBsZXQgam9iaj1uZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgam9ialtcIlR5cGVcIl09Y29udHJvbFR5cGU7XHJcbiAgICAgICAgaWYoY29udHJvbFR5cGU9PUNvbnRyb2xUeXBlLkRyb3BEb3duKXtcclxuICAgICAgICAgICAgbGV0IGNvbnZlcnRvcj1uZXcgRHJvcERvd25MaXN0VmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgICAgIGpvYmpbXCJDb250ZW50XCJdPWNvbnZlcnRvci5jb252ZXJ0VG9PYmplY3QoY29uZGl0aW9uVmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvbnRyb2xUeXBlPT1Db250cm9sVHlwZS5OdW1iZXJSYW5nZSl7XHJcbiAgICAgICAgICAgIGxldCBjb252ZXJ0b3I9bmV3IE51bWJlclJhbmdlVmFsdWVDb252ZXJ0b3IoKTtcclxuICAgICAgICAgICAgam9ialtcIkNvbnRlbnRcIl09Y29udmVydG9yLmNvbnZlcnRUb09iamVjdChjb25kaXRpb25WYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIGpvYmpbXCJDb250ZW50XCJdPWNvbmRpdGlvblZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gam9iajtcclxuICAgIH1cclxuXHJcbiAgICBpbml0RnJvbU9iamVjdChqb2JqOk9iamVjdCk6SVZhbHVle1xyXG4gICAgICAgIGxldCBjb250cm9sVHlwZT1qb2JqW1wiVHlwZVwiXSBhcyBDb250cm9sVHlwZTtcclxuICAgICAgICBsZXQgY29udGVudDpJVmFsdWU9am9ialtcIkNvbnRlbnRcIl07XHJcbiAgICAgICAgaWYoY29udHJvbFR5cGU9PUNvbnRyb2xUeXBlLlRleHQpe1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgVGV4dFZhbHVlKCksY29udGVudCBhcyBUZXh0VmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvbnRyb2xUeXBlPT1Db250cm9sVHlwZS5OdW1iZXJSYW5nZSl7XHJcbiAgICAgICAgICAgIGxldCBjb252ZXJ0b3I9bmV3IE51bWJlclJhbmdlVmFsdWVDb252ZXJ0b3IoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnRvci5pbml0RnJvbU9iamVjdChjb250ZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihjb250cm9sVHlwZT09Q29udHJvbFR5cGUuRGF0ZVJhbmdlKXtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IERhdGVSYW5nZVZhbHVlKCksY29udGVudCBhcyBEYXRlUmFuZ2VWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoY29udHJvbFR5cGU9PUNvbnRyb2xUeXBlLkRyb3BEb3duKXtcclxuICAgICAgICAgICAgbGV0IGNvbnZlcnRvcj1uZXcgRHJvcERvd25MaXN0VmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJ0b3IuaW5pdEZyb21PYmplY3QoY29udGVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoY29udHJvbFR5cGU9PUNvbnRyb2xUeXBlLkhlbHApe1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgSGVscFZhbHVlKCksY29udGVudCBhcyBIZWxwVmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==