/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from '../controltype';
import { EventEmitter } from '@angular/core';
import { cloneDeep } from 'lodash-es';
export class HelpValue {
    /**
     * @param {?=} data
     */
    constructor(data = { value: [], valueField: undefined, textValue: undefined }) {
        this.clear$ = new EventEmitter();
        if (data.hasOwnProperty('textValue')) { // 新结构，value是数组
            this.valueField = data.valueField;
            this.value = data.value;
            this.textValue = data.textValue;
        }
        else { // 旧结构，value是对象
            this.valueField = data.valueField;
            this.value = data.value ? [data.value] : [];
            this.textValue = 'help-text-value-null'; // 旧结构无textValue属性
        }
    }
    /**
     * @param {?} helpItem
     * @param {?} args
     * @return {?}
     */
    static getPropValue(helpItem, args) {
        if (args.length > 1) {
            /** @type {?} */
            const arg = args.shift();
            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;
        }
        return helpItem[args[0]];
    }
    /**
     * @return {?}
     */
    clearValue() {
        this.value = [];
        this.valueField = undefined;
        this.textValue = undefined;
        this.clear$.emit();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    setOriginalValue(value) {
        throw new Error("Method not implemented.");
    }
    /**
     * @return {?}
     */
    getOriginalValue() {
        if (this.valueField) {
            /** @type {?} */
            const args = this.valueField.split('.');
            /** @type {?} */
            const valueArr = this.value.map((/**
             * @param {?} helpItem
             * @return {?}
             */
            helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args))));
            return valueArr && valueArr.length ? valueArr.join(',') : '';
        }
        else {
            return '';
        }
    }
    /**
     * @return {?}
     */
    getControlType() {
        return ControlType.Help;
    }
    /**
     * @return {?}
     */
    isEmpty() {
        return !this.valueField;
    }
    /**
     * @param {?} textField
     * @return {?}
     */
    getTextValue(textField) {
        /** @type {?} */
        const args = textField.split('.');
        /** @type {?} */
        const textArr = this.value.map((/**
         * @param {?} helpItem
         * @return {?}
         */
        helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args))));
        return textArr && textArr.length ? textArr.join(',') : '';
    }
    /**
     * @return {?}
     */
    getValueText() {
        return this.textValue;
    }
}
if (false) {
    /** @type {?} */
    HelpValue.prototype.valueField;
    /** @type {?} */
    HelpValue.prototype.value;
    /** @type {?} */
    HelpValue.prototype.textValue;
    /** @type {?} */
    HelpValue.prototype.clear$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscHZhbHVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2NvbmRpdGlvbnZhbHVlL2hlbHB2YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUV0QyxNQUFNLE9BQU8sU0FBUzs7OztJQVFsQixZQUFZLE9BSVIsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRTtRQVI5RCxXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQVN4QixJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLEVBQUUsRUFBQyxlQUFlO1lBQ2xELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUNsQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDeEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQ25DO2FBQU0sRUFBQyxlQUFlO1lBQ25CLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztZQUNsQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDNUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQyxDQUFDLGtCQUFrQjtTQUM5RDtJQUVMLENBQUM7Ozs7OztJQUVELE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBYSxFQUFFLElBQW1CO1FBQ2xELElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7O2tCQUNYLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3hCLE9BQU8sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1NBQ3hFO1FBQ0QsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7OztJQUdELFVBQVU7UUFDTixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUM1QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBQ0QsZ0JBQWdCLENBQUMsS0FBVTtRQUN2QixNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDL0MsQ0FBQzs7OztJQUNELGdCQUFnQjtRQUNaLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTs7a0JBQ1gsSUFBSSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQzs7a0JBQ2pDLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUc7Ozs7WUFBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFDO1lBQzlGLE9BQU8sUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztTQUNoRTthQUNJO1lBQ0QsT0FBTyxFQUFFLENBQUM7U0FDYjtJQUNMLENBQUM7Ozs7SUFDRCxjQUFjO1FBQ1YsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDO0lBQzVCLENBQUM7Ozs7SUFHRCxPQUFPO1FBQ0gsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDNUIsQ0FBQzs7Ozs7SUFJRCxZQUFZLENBQUMsU0FBaUI7O2NBQ3BCLElBQUksR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQzs7Y0FDM0IsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRzs7OztRQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUM7UUFDN0YsT0FBTyxPQUFPLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzlELENBQUM7Ozs7SUFDRCxZQUFZO1FBQ1IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7Q0FDSjs7O0lBdkVHLCtCQUFtQjs7SUFDbkIsMEJBQWE7O0lBQ2IsOEJBQWtCOztJQUNsQiwyQkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJVmFsdWUgfSBmcm9tICcuL2l2YWx1ZSc7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSAnLi4vY29udHJvbHR5cGUnO1xyXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAnbG9kYXNoLWVzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBIZWxwVmFsdWUgaW1wbGVtZW50cyBJVmFsdWUge1xyXG4gICAgdmFsdWVGaWVsZDogc3RyaW5nO1xyXG4gICAgdmFsdWU6IGFueVtdO1xyXG4gICAgdGV4dFZhbHVlOiBzdHJpbmc7XHJcbiAgICBjbGVhciQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG5cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihkYXRhOiB7XHJcbiAgICAgICAgdmFsdWU6IGFueSxcclxuICAgICAgICB2YWx1ZUZpZWxkOiBzdHJpbmcsXHJcbiAgICAgICAgdGV4dFZhbHVlOiBzdHJpbmc7XHJcbiAgICB9ID0geyB2YWx1ZTogW10sIHZhbHVlRmllbGQ6IHVuZGVmaW5lZCwgdGV4dFZhbHVlOiB1bmRlZmluZWQgfSkge1xyXG4gICAgICAgIGlmIChkYXRhLmhhc093blByb3BlcnR5KCd0ZXh0VmFsdWUnKSkgey8vIOaWsOe7k+aehO+8jHZhbHVl5piv5pWw57uEXHJcbiAgICAgICAgICAgIHRoaXMudmFsdWVGaWVsZCA9IGRhdGEudmFsdWVGaWVsZDtcclxuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IGRhdGEudmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFZhbHVlID0gZGF0YS50ZXh0VmFsdWU7XHJcbiAgICAgICAgfSBlbHNlIHsvLyDml6fnu5PmnoTvvIx2YWx1ZeaYr+WvueixoVxyXG4gICAgICAgICAgICB0aGlzLnZhbHVlRmllbGQgPSBkYXRhLnZhbHVlRmllbGQ7XHJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBkYXRhLnZhbHVlID8gW2RhdGEudmFsdWVdIDogW107XHJcbiAgICAgICAgICAgIHRoaXMudGV4dFZhbHVlID0gJ2hlbHAtdGV4dC12YWx1ZS1udWxsJzsgLy8g5pen57uT5p6E5pegdGV4dFZhbHVl5bGe5oCnXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0UHJvcFZhbHVlKGhlbHBJdGVtOiBhbnksIGFyZ3M6IEFycmF5PHN0cmluZz4pOiBhbnkge1xyXG4gICAgICAgIGlmIChhcmdzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgY29uc3QgYXJnID0gYXJncy5zaGlmdCgpO1xyXG4gICAgICAgICAgICByZXR1cm4gaGVscEl0ZW1bYXJnXSA/IHRoaXMuZ2V0UHJvcFZhbHVlKGhlbHBJdGVtW2FyZ10sIGFyZ3MpIDogbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGhlbHBJdGVtW2FyZ3NbMF1dO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBjbGVhclZhbHVlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSBbXTtcclxuICAgICAgICB0aGlzLnZhbHVlRmllbGQgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy50ZXh0VmFsdWUgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5jbGVhciQuZW1pdCgpO1xyXG4gICAgfVxyXG4gICAgc2V0T3JpZ2luYWxWYWx1ZSh2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XHJcbiAgICB9XHJcbiAgICBnZXRPcmlnaW5hbFZhbHVlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgaWYgKHRoaXMudmFsdWVGaWVsZCkge1xyXG4gICAgICAgICAgICBjb25zdCBhcmdzID0gdGhpcy52YWx1ZUZpZWxkLnNwbGl0KCcuJyk7XHJcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlQXJyID0gdGhpcy52YWx1ZS5tYXAoaGVscEl0ZW0gPT4gSGVscFZhbHVlLmdldFByb3BWYWx1ZShoZWxwSXRlbSwgY2xvbmVEZWVwKGFyZ3MpKSk7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZUFyciAmJiB2YWx1ZUFyci5sZW5ndGggPyB2YWx1ZUFyci5qb2luKCcsJykgOiAnJztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBnZXRDb250cm9sVHlwZSgpOiBDb250cm9sVHlwZSB7XHJcbiAgICAgICAgcmV0dXJuIENvbnRyb2xUeXBlLkhlbHA7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGlzRW1wdHkoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuICF0aGlzLnZhbHVlRmllbGQ7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICBnZXRUZXh0VmFsdWUodGV4dEZpZWxkOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGFyZ3MgPSB0ZXh0RmllbGQuc3BsaXQoJy4nKTtcclxuICAgICAgICBjb25zdCB0ZXh0QXJyID0gdGhpcy52YWx1ZS5tYXAoaGVscEl0ZW0gPT4gSGVscFZhbHVlLmdldFByb3BWYWx1ZShoZWxwSXRlbSwgY2xvbmVEZWVwKGFyZ3MpKSk7XHJcbiAgICAgICAgcmV0dXJuIHRleHRBcnIgJiYgdGV4dEFyci5sZW5ndGggPyB0ZXh0QXJyLmpvaW4oJywnKSA6ICcnO1xyXG4gICAgfVxyXG4gICAgZ2V0VmFsdWVUZXh0KCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudGV4dFZhbHVlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==