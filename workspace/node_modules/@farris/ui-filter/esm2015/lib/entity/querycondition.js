/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * 查询条件实体类
 */
export class QueryCondition {
}
if (false) {
    /**
     * 唯一性标识
     * @type {?}
     */
    QueryCondition.prototype.id;
    /**
     * 左括号
     * @type {?}
     */
    QueryCondition.prototype.leftBrackets;
    /**
     * 字段编号
     * @type {?}
     */
    QueryCondition.prototype.fieldCode;
    /** @type {?} */
    QueryCondition.prototype.labelCode;
    /**
     * 字段名称
     * @type {?}
     */
    QueryCondition.prototype.fieldName;
    /** @type {?} */
    QueryCondition.prototype.name;
    /**
     * 比较符
     * @type {?}
     */
    QueryCondition.prototype.compareType;
    /**
     * 值类型
     * @type {?}
     */
    QueryCondition.prototype.valueType;
    /**
     * 值
     * 该属性为IValue接口，根据不同的控件类型有不同的实现类：具体如下：
     * 1. 文本类型：TextValue
     * 2. 下拉列表：DropDownListValue
     * 3. 日期区间：DateRangeValue
     * 4. 数字区间：NumberRangeValue
     * 5. 帮助类型：SmartHelpValue
     * @type {?}
     */
    QueryCondition.prototype.value;
    /**
     * 右括号
     * @type {?}
     */
    QueryCondition.prototype.rightBrackets;
    /**
     * 关系符
     * @type {?}
     */
    QueryCondition.prototype.relationType;
    /**
     * 控件类型，目前包括文本类型，下拉列表，日期区间，数字区间，帮助类型
     * 控件类型为IControl接口，根据不同的控件类型对应不同的实现类，具体如下：
     * 1. 文本类型：TextControl
     * 2. 下拉列表：DropDownListControl
     * 3. 日期区间：DateRangeControl
     * 4. 数字区间：NumberRangeControl
     * 5. 帮助类型：SmartHelpContol
     * @type {?}
     */
    QueryCondition.prototype.control;
    /** @type {?} */
    QueryCondition.prototype.placeHolder;
    /** @type {?} */
    QueryCondition.prototype.filled;
    /** @type {?} */
    QueryCondition.prototype.valueText;
    /** @type {?} */
    QueryCondition.prototype.beginPlaceHolder;
    /** @type {?} */
    QueryCondition.prototype.endPlaceHolder;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnljb25kaXRpb24uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvcXVlcnljb25kaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVNBLE1BQU0sT0FBTyxjQUFjO0NBeUUxQjs7Ozs7O0lBcEVHLDRCQUFXOzs7OztJQUtYLHNDQUFxQjs7Ozs7SUFLckIsbUNBQWtCOztJQUNsQixtQ0FBbUI7Ozs7O0lBS25CLG1DQUFrQjs7SUFDbEIsOEJBQWE7Ozs7O0lBS2IscUNBQXlCOzs7OztJQUt6QixtQ0FBcUI7Ozs7Ozs7Ozs7O0lBV3JCLCtCQUFjOzs7OztJQUtkLHVDQUFzQjs7Ozs7SUFLdEIsc0NBQTJCOzs7Ozs7Ozs7OztJQVczQixpQ0FBa0I7O0lBRWxCLHFDQUFvQjs7SUFFcEIsZ0NBQWdCOztJQUVoQixtQ0FBa0I7O0lBQ2xCLDBDQUEwQjs7SUFDMUIsd0NBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcGFyZVR5cGUgfSBmcm9tIFwiLi9jb21wYXJldHlwZVwiO1xyXG5pbXBvcnQgeyBWYWx1ZVR5cGUgfSBmcm9tIFwiLi92YWx1ZXR5cGVcIjtcclxuaW1wb3J0IHsgUmVsYXRpb25UeXBlIH0gZnJvbSBcIi4vcmVsYXRpb250eXBlXCI7XHJcbmltcG9ydCB7IElDb250cm9sLCBDb250cm9sQ29udmVydCB9IGZyb20gXCIuL2NvbnRyb2x0eXBlL2ljb250cm9sXCI7XHJcbmltcG9ydCB7IElWYWx1ZSwgQ29uZGl0aW9uVmFsdWVDb252ZXJ0IH0gZnJvbSBcIi4vY29uZGl0aW9udmFsdWUvaXZhbHVlXCI7XHJcblxyXG4vKipcclxuICog5p+l6K+i5p2h5Lu25a6e5L2T57G7XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgUXVlcnlDb25kaXRpb24ge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ZSv5LiA5oCn5qCH6K+GXHJcbiAgICAgKi9cclxuICAgIGlkOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlt6bmi6zlj7dcclxuICAgICAqL1xyXG4gICAgbGVmdEJyYWNrZXRzOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlrZfmrrXnvJblj7dcclxuICAgICAqL1xyXG4gICAgZmllbGRDb2RlOiBzdHJpbmc7XHJcbiAgICBsYWJlbENvZGU/OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlrZfmrrXlkI3np7BcclxuICAgICAqL1xyXG4gICAgZmllbGROYW1lOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmr5TovoPnrKZcclxuICAgICAqL1xyXG4gICAgY29tcGFyZVR5cGU6IENvbXBhcmVUeXBlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YC857G75Z6LXHJcbiAgICAgKi9cclxuICAgIHZhbHVlVHlwZTogVmFsdWVUeXBlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YC8XHJcbiAgICAgKiDor6XlsZ7mgKfkuLpJVmFsdWXmjqXlj6PvvIzmoLnmja7kuI3lkIznmoTmjqfku7bnsbvlnovmnInkuI3lkIznmoTlrp7njrDnsbvvvJrlhbfkvZPlpoLkuIvvvJpcclxuICAgICAqIDEuIOaWh+acrOexu+Wei++8mlRleHRWYWx1ZVxyXG4gICAgICogMi4g5LiL5ouJ5YiX6KGo77yaRHJvcERvd25MaXN0VmFsdWVcclxuICAgICAqIDMuIOaXpeacn+WMuumXtO+8mkRhdGVSYW5nZVZhbHVlXHJcbiAgICAgKiA0LiDmlbDlrZfljLrpl7TvvJpOdW1iZXJSYW5nZVZhbHVlXHJcbiAgICAgKiA1LiDluK7liqnnsbvlnovvvJpTbWFydEhlbHBWYWx1ZVxyXG4gICAgICovXHJcbiAgICB2YWx1ZTogSVZhbHVlO1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Y+z5ous5Y+3XHJcbiAgICAgKi9cclxuICAgIHJpZ2h0QnJhY2tldHM6IHN0cmluZztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFs+ezu+esplxyXG4gICAgICovXHJcbiAgICByZWxhdGlvblR5cGU6IFJlbGF0aW9uVHlwZTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaOp+S7tuexu+Wei++8jOebruWJjeWMheaLrOaWh+acrOexu+Wei++8jOS4i+aLieWIl+ihqO+8jOaXpeacn+WMuumXtO+8jOaVsOWtl+WMuumXtO+8jOW4ruWKqeexu+Wei1xyXG4gICAgICog5o6n5Lu257G75Z6L5Li6SUNvbnRyb2zmjqXlj6PvvIzmoLnmja7kuI3lkIznmoTmjqfku7bnsbvlnovlr7nlupTkuI3lkIznmoTlrp7njrDnsbvvvIzlhbfkvZPlpoLkuIvvvJpcclxuICAgICAqIDEuIOaWh+acrOexu+Wei++8mlRleHRDb250cm9sXHJcbiAgICAgKiAyLiDkuIvmi4nliJfooajvvJpEcm9wRG93bkxpc3RDb250cm9sXHJcbiAgICAgKiAzLiDml6XmnJ/ljLrpl7TvvJpEYXRlUmFuZ2VDb250cm9sXHJcbiAgICAgKiA0LiDmlbDlrZfljLrpl7TvvJpOdW1iZXJSYW5nZUNvbnRyb2xcclxuICAgICAqIDUuIOW4ruWKqeexu+Wei++8mlNtYXJ0SGVscENvbnRvbFxyXG4gICAgICovXHJcbiAgICBjb250cm9sOiBJQ29udHJvbDtcclxuICAgIC8v6buY6K6k5pi+56S6XHJcbiAgICBwbGFjZUhvbGRlcjogc3RyaW5nO1xyXG4gICAgLy/mmK/lkKbmnInlgLxcclxuICAgIGZpbGxlZDogYm9vbGVhbjtcclxuICAgIC8v6YCJ5oup5ZCO55qE5YC8XHJcbiAgICB2YWx1ZVRleHQ6IHN0cmluZztcclxuICAgIGJlZ2luUGxhY2VIb2xkZXI/OiBzdHJpbmc7XHJcbiAgICBlbmRQbGFjZUhvbGRlcj86IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIOafpeivouadoeS7tuW6j+WIl+WMluS4juWPjeW6j+WIl+WMluWZqFxyXG4gKi9cclxuLy8gZXhwb3J0IGNsYXNzIFF1ZXJ5Q29uZGl0aW9uQ29udmVydHtcclxuXHJcbi8vICAgICAvKipcclxuLy8gICAgICAqIOW6j+WIl+WMllxyXG4vLyAgICAgICogQHBhcmFtIG9iaiDmn6Xor6LmnaHku7blrp7kvZNcclxuLy8gICAgICAqL1xyXG4vLyAgICAgY29udmVydEpPYmplY3Qob2JqOlF1ZXJ5Q29uZGl0aW9uKTpPYmplY3R7XHJcbi8vICAgICAgICAgbGV0IHF1ZXJ5Q29uZGl0aW9uPW9iaiBhcyBRdWVyeUNvbmRpdGlvbjtcclxuLy8gICAgICAgICBsZXQgam9iaj1uZXcgT2JqZWN0KCk7XHJcbi8vICAgICAgICAgam9ialtcImlkXCJdPXF1ZXJ5Q29uZGl0aW9uLmlkO1xyXG4vLyAgICAgICAgIGpvYmpbXCJsZWZ0QnJhY2tldHNcIl09cXVlcnlDb25kaXRpb24ubGVmdEJyYWNrZXRzO1xyXG4vLyAgICAgICAgIGpvYmpbXCJmaWVsZENvZGVcIl09cXVlcnlDb25kaXRpb24uZmllbGRDb2RlO1xyXG4vLyAgICAgICAgIGpvYmpbXCJmaWVsZE5hbWVcIl09cXVlcnlDb25kaXRpb24uZmllbGROYW1lO1xyXG4vLyAgICAgICAgIGpvYmpbXCJjb21wYXJlVHlwZVwiXT1xdWVyeUNvbmRpdGlvbi5jb21wYXJlVHlwZTtcclxuLy8gICAgICAgICBqb2JqW1widmFsdWVUeXBlXCJdPXF1ZXJ5Q29uZGl0aW9uLnZhbHVlVHlwZTtcclxuLy8gICAgICAgICBsZXQgdmFsdWVDb252ZXJ0PW5ldyBDb25kaXRpb25WYWx1ZUNvbnZlcnQoKTtcclxuLy8gICAgICAgICBpZihxdWVyeUNvbmRpdGlvbi52YWx1ZSl7XHJcbi8vICAgICAgICAgICAgIGpvYmpbXCJ2YWx1ZVwiXT12YWx1ZUNvbnZlcnQuY29udmVydFRvT2JqZWN0KHF1ZXJ5Q29uZGl0aW9uLnZhbHVlKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgam9ialtcInJpZ2h0QnJhY2tldHNcIl09cXVlcnlDb25kaXRpb24ucmlnaHRCcmFja2V0cztcclxuLy8gICAgICAgICBqb2JqW1wicmVsYXRpb25UeXBlXCJdPXF1ZXJ5Q29uZGl0aW9uLnJlbGF0aW9uVHlwZTtcclxuLy8gICAgICAgICBsZXQgY29udHJvbENvbnZlcnRvcj1uZXcgQ29udHJvbENvbnZlcnQoKTtcclxuLy8gICAgICAgICBpZihxdWVyeUNvbmRpdGlvbi5jb250cm9sKXtcclxuLy8gICAgICAgICAgICAgam9ialtcImNvbnRyb2xcIl09Y29udHJvbENvbnZlcnRvci5jb252ZXJ0Sk9iamVjdChxdWVyeUNvbmRpdGlvbi5jb250cm9sKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgcmV0dXJuIGpvYmo7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgLyoqXHJcbi8vICAgICAgKiDlj43luo/liJfljJZcclxuLy8gICAgICAqIEBwYXJhbSBqb2JqIOafpeivouadoeS7tuWunuS9k+W6j+WIl+WMluWQjueahEpTT07lr7nosaFcclxuLy8gICAgICAqL1xyXG4vLyAgICAgaW5pdEZyb21Kb2JqZWN0KGpvYmo6T2JqZWN0KTpRdWVyeUNvbmRpdGlvbntcclxuLy8gICAgICAgICBsZXQgcXVlcnlDb25kaXRpb249bmV3IFF1ZXJ5Q29uZGl0aW9uKCk7XHJcbi8vICAgICAgICAgcXVlcnlDb25kaXRpb24uaWQ9am9ialtcImlkXCJdO1xyXG4vLyAgICAgICAgIHF1ZXJ5Q29uZGl0aW9uLmZpZWxkQ29kZT1qb2JqW1wiZmllbGRDb2RlXCJdO1xyXG4vLyAgICAgICAgIHF1ZXJ5Q29uZGl0aW9uLmZpZWxkTmFtZT1qb2JqW1wiZmllbGROYW1lXCJdO1xyXG4vLyAgICAgICAgIHF1ZXJ5Q29uZGl0aW9uLmxlZnRCcmFja2V0cz1qb2JqW1wibGVmdEJyYWNrZXRzXCJdO1xyXG4vLyAgICAgICAgIHF1ZXJ5Q29uZGl0aW9uLmNvbXBhcmVUeXBlPWpvYmpbXCJjb21wYXJlVHlwZVwiXSBhcyBDb21wYXJlVHlwZTtcclxuLy8gICAgICAgICBxdWVyeUNvbmRpdGlvbi52YWx1ZVR5cGU9am9ialtcInZhbHVlVHlwZVwiXSBhcyBWYWx1ZVR5cGU7XHJcbi8vICAgICAgICAgaWYoam9ialtcInZhbHVlXCJdKXtcclxuLy8gICAgICAgICAgICAgbGV0IHZhbHVlQ29udmVydD1uZXcgQ29uZGl0aW9uVmFsdWVDb252ZXJ0KCk7XHJcbi8vICAgICAgICAgICAgIHF1ZXJ5Q29uZGl0aW9uLnZhbHVlPXZhbHVlQ29udmVydC5pbml0RnJvbU9iamVjdChqb2JqW1widmFsdWVcIl0pO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgICBxdWVyeUNvbmRpdGlvbi5yaWdodEJyYWNrZXRzPWpvYmpbXCJyaWdodEJyYWNrZXRzXCJdO1xyXG4vLyAgICAgICAgIHF1ZXJ5Q29uZGl0aW9uLnJlbGF0aW9uVHlwZT1qb2JqW1wicmVsYXRpb25UeXBlXCJdIGFzIFJlbGF0aW9uVHlwZTtcclxuLy8gICAgICAgICBpZihqb2JqW1wiY29udHJvbFwiXSl7XHJcbi8vICAgICAgICAgICAgIGxldCBjb250cm9sQ29udmVydG9yPW5ldyBDb250cm9sQ29udmVydCgpO1xyXG4vLyAgICAgICAgICAgICBxdWVyeUNvbmRpdGlvbi5jb250cm9sPWNvbnRyb2xDb252ZXJ0b3IuaW5pdEZyb21Kb2JqZWN0KGpvYmpbXCJjb250cm9sXCJdKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgcmV0dXJuIHF1ZXJ5Q29uZGl0aW9uO1xyXG4vLyAgICAgfVxyXG4vLyB9XHJcbiJdfQ==