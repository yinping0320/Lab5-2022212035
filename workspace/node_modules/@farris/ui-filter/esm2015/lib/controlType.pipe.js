/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { ControlType } from './entity/controltype';
export class ControlTypeXPipe {
    /**
     * @param {?} value
     * @return {?}
     */
    transform(value) {
        /** @type {?} */
        let type;
        switch (value.control.getControlType()) {
            case ControlType.Text:
                type = 'input';
                break;
            case ControlType.Search:
                type = 'search';
                break;
            case ControlType.Date:
                type = 'date';
                break;
            case ControlType.Year:
                type = 'year';
                break;
            case ControlType.Month:
                type = 'month';
                break;
            case ControlType.MonthRange:
                type = 'monthrange';
                break;
            case ControlType.YearRange:
                type = 'yearrange';
                break;
            case ControlType.DateRange:
                type = 'daterange';
                break;
            case ControlType.DateRangeTime:
                type = 'daterangetime';
                break;
            case ControlType.DropDown:
                type = 'dropdown';
                break;
            case ControlType.NumberRange:
                type = 'number';
                break;
            case ControlType.Help:
                type = 'help';
                break;
            case ControlType.CheckboxGroup:
                type = 'checkboxgroup';
                break;
            case ControlType.Radio:
                type = 'radio';
                break;
            case ControlType.InputGroup:
                type = 'input-group';
                break;
            case ControlType.Number:
                type = 'singlenumber';
                break;
            case ControlType.FlexibleNumber:
                type = 'flexiblenumber';
                break;
            case ControlType.FlexibleDate:
                type = 'flexibledate';
                break;
            case ControlType.BoolCheck:
                type = 'bool-check';
                break;
            default:
                type = 'input';
                break;
        }
        return type;
    }
}
ControlTypeXPipe.decorators = [
    { type: Pipe, args: [{ name: 'controlType' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbFR5cGUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZmlsdGVyLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xUeXBlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUduRCxNQUFNLE9BQU8sZ0JBQWdCOzs7OztJQUN6QixTQUFTLENBQUMsS0FBcUI7O1lBQ3ZCLElBQUk7UUFDUixRQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFLEVBQUM7WUFDbEMsS0FBSyxXQUFXLENBQUMsSUFBSTtnQkFDakIsSUFBSSxHQUFHLE9BQU8sQ0FBQztnQkFDZixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsTUFBTTtnQkFDbkIsSUFBSSxHQUFHLFFBQVEsQ0FBQztnQkFDaEIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLElBQUk7Z0JBQ2pCLElBQUksR0FBRyxNQUFNLENBQUM7Z0JBQ2QsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLElBQUk7Z0JBQ2pCLElBQUksR0FBRyxNQUFNLENBQUM7Z0JBQ2QsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLEtBQUs7Z0JBQ2xCLElBQUksR0FBRyxPQUFPLENBQUM7Z0JBQ2YsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFVBQVU7Z0JBQ3ZCLElBQUksR0FBRyxZQUFZLENBQUM7Z0JBQ3BCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxTQUFTO2dCQUN0QixJQUFJLEdBQUcsV0FBVyxDQUFDO2dCQUNuQixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsU0FBUztnQkFDdEIsSUFBSSxHQUFHLFdBQVcsQ0FBQztnQkFDbkIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLGFBQWE7Z0JBQzFCLElBQUksR0FBRyxlQUFlLENBQUM7Z0JBQ3ZCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxRQUFRO2dCQUNyQixJQUFJLEdBQUcsVUFBVSxDQUFDO2dCQUNsQixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsV0FBVztnQkFDeEIsSUFBSSxHQUFHLFFBQVEsQ0FBQztnQkFDaEIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLElBQUk7Z0JBQ2pCLElBQUksR0FBRyxNQUFNLENBQUM7Z0JBQ2QsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLGFBQWE7Z0JBQzFCLElBQUksR0FBRyxlQUFlLENBQUM7Z0JBQ3ZCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxLQUFLO2dCQUNsQixJQUFJLEdBQUcsT0FBTyxDQUFDO2dCQUNmLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxVQUFVO2dCQUN2QixJQUFJLEdBQUcsYUFBYSxDQUFDO2dCQUNyQixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsTUFBTTtnQkFDbkIsSUFBSSxHQUFHLGNBQWMsQ0FBQztnQkFDdEIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLGNBQWM7Z0JBQzNCLElBQUksR0FBRyxnQkFBZ0IsQ0FBQztnQkFDeEIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFlBQVk7Z0JBQ3pCLElBQUksR0FBRyxjQUFjLENBQUM7Z0JBQ3RCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxTQUFTO2dCQUN0QixJQUFJLEdBQUcsWUFBWSxDQUFDO2dCQUNwQixNQUFNO1lBQ1Y7Z0JBQ0ksSUFBSSxHQUFHLE9BQU8sQ0FBQztnQkFDZixNQUFNO1NBQ2I7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7WUFuRUosSUFBSSxTQUFDLEVBQUMsSUFBSSxFQUFFLGFBQWEsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUXVlcnlDb25kaXRpb24gfSBmcm9tICcuL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSAnLi9lbnRpdHkvY29udHJvbHR5cGUnO1xyXG5cclxuQFBpcGUoe25hbWU6ICdjb250cm9sVHlwZSd9KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbFR5cGVYUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgdHJhbnNmb3JtKHZhbHVlOiBRdWVyeUNvbmRpdGlvbik6IEFycmF5PGFueT4ge1xyXG4gICAgICAgIGxldCB0eXBlO1xyXG4gICAgICAgIHN3aXRjaCh2YWx1ZS5jb250cm9sLmdldENvbnRyb2xUeXBlKCkpe1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLlRleHQ6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2lucHV0JztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLlNlYXJjaDpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnc2VhcmNoJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkRhdGU6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2RhdGUnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuWWVhcjpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAneWVhcic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5Nb250aDpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnbW9udGgnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuTW9udGhSYW5nZTpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnbW9udGhyYW5nZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5ZZWFyUmFuZ2U6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3llYXJyYW5nZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5EYXRlUmFuZ2U6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2RhdGVyYW5nZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5EYXRlUmFuZ2VUaW1lOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdkYXRlcmFuZ2V0aW1lJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkRyb3BEb3duOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdkcm9wZG93bic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5OdW1iZXJSYW5nZTpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnbnVtYmVyJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkhlbHA6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2hlbHAnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuQ2hlY2tib3hHcm91cDpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnY2hlY2tib3hncm91cCc7XHJcbiAgICAgICAgICAgICAgICBicmVhazsgXHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuUmFkaW86XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3JhZGlvJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLklucHV0R3JvdXA6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2lucHV0LWdyb3VwJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLk51bWJlcjpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnc2luZ2xlbnVtYmVyJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkZsZXhpYmxlTnVtYmVyOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdmbGV4aWJsZW51bWJlcic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5GbGV4aWJsZURhdGU6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2ZsZXhpYmxlZGF0ZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5Cb29sQ2hlY2s6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2Jvb2wtY2hlY2snO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2lucHV0JztcclxuICAgICAgICAgICAgICAgIGJyZWFrOyAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0eXBlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==