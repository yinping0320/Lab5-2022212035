/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from '../controltype';
import { EventEmitter } from '@angular/core';
import { EnumValueConvert } from '../controltype/dropdownlist/ienumvalue';
var DropDownListValue = /** @class */ (function () {
    function DropDownListValue(data) {
        if (data === void 0) { data = ''; }
        this.clear$ = new EventEmitter();
        this.value = data;
    }
    /**
     * @return {?}
     */
    DropDownListValue.prototype.clearValue = /**
     * @return {?}
     */
    function () {
        this.value = undefined;
        this.clear$.emit();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    DropDownListValue.prototype.setOriginalValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        throw new Error("Method not implemented.");
    };
    /**
     * @return {?}
     */
    DropDownListValue.prototype.getOriginalValue = /**
     * @return {?}
     */
    function () {
        return this.value;
    };
    /**
     * @return {?}
     */
    DropDownListValue.prototype.getControlType = /**
     * @return {?}
     */
    function () {
        return ControlType.DropDown;
    };
    /**
     * @return {?}
     */
    DropDownListValue.prototype.isEmpty = /**
     * @return {?}
     */
    function () {
        return !this.value;
    };
    /**
     * @return {?}
     */
    DropDownListValue.prototype.getValueText = /**
     * @return {?}
     */
    function () {
        return this.value;
    };
    return DropDownListValue;
}());
export { DropDownListValue };
if (false) {
    /** @type {?} */
    DropDownListValue.prototype.value;
    /** @type {?} */
    DropDownListValue.prototype.clear$;
}
var DropDownListValueConvert = /** @class */ (function () {
    function DropDownListValueConvert() {
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    DropDownListValueConvert.prototype.convertToObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var dropDownListValue = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        /** @type {?} */
        var convertor = new EnumValueConvert();
        if (!!(dropDownListValue.value)) {
            // jobj["value"]=convertor.convertJObject(dropDownListValue.value);
            jobj["value"] = dropDownListValue.value;
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DropDownListValueConvert.prototype.initFromObject = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var dropDownListValue = new DropDownListValue();
        if (!!(jobj["value"])) {
            /** @type {?} */
            var convertor = new EnumValueConvert();
            // dropDownListValue.value=convertor.initFromJobject(jobj["value"]);
            dropDownListValue.value = jobj["value"];
        }
        return dropDownListValue;
    };
    return DropDownListValueConvert;
}());
export { DropDownListValueConvert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd25saXN0dmFsdWUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvY29uZGl0aW9udmFsdWUvZHJvcGRvd25saXN0dmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdDLE9BQU8sRUFBYyxnQkFBZ0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBRXRGO0lBR0ksMkJBQVksSUFBaUI7UUFBakIscUJBQUEsRUFBQSxTQUFpQjtRQUQ3QixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUV4QixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUN0QixDQUFDOzs7O0lBQ0Qsc0NBQVU7OztJQUFWO1FBQ0ksSUFBSSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN2QixDQUFDOzs7OztJQUNELDRDQUFnQjs7OztJQUFoQixVQUFpQixLQUFVO1FBQ3ZCLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs7O0lBQ0QsNENBQWdCOzs7SUFBaEI7UUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdEIsQ0FBQzs7OztJQUNELDBDQUFjOzs7SUFBZDtRQUNJLE9BQU8sV0FBVyxDQUFDLFFBQVEsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsbUNBQU87OztJQUFQO1FBQ0ksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdkIsQ0FBQzs7OztJQUNELHdDQUFZOzs7SUFBWjtRQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQUFDLEFBMUJELElBMEJDOzs7O0lBekJHLGtDQUFjOztJQUNkLG1DQUE0Qjs7QUEwQmhDO0lBQUE7SUFxQkEsQ0FBQzs7Ozs7SUFwQkcsa0RBQWU7Ozs7SUFBZixVQUFnQixHQUFXOztZQUNuQixpQkFBaUIsR0FBRyxtQkFBQSxHQUFHLEVBQXFCOztZQUM1QyxJQUFJLEdBQUcsSUFBSSxNQUFNLEVBQUU7O1lBQ25CLFNBQVMsR0FBRyxJQUFJLGdCQUFnQixFQUFFO1FBQ3RDLElBQUksQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDN0IsbUVBQW1FO1lBQ25FLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUM7U0FDM0M7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVELGlEQUFjOzs7O0lBQWQsVUFBZSxJQUFZOztZQUNuQixpQkFBaUIsR0FBRyxJQUFJLGlCQUFpQixFQUFFO1FBQy9DLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUU7O2dCQUNmLFNBQVMsR0FBRyxJQUFJLGdCQUFnQixFQUFFO1lBQ3RDLG9FQUFvRTtZQUNwRSxpQkFBaUIsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzNDO1FBQ0QsT0FBTyxpQkFBaUIsQ0FBQztJQUM3QixDQUFDO0lBQ0wsK0JBQUM7QUFBRCxDQUFDLEFBckJELElBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVZhbHVlIH0gZnJvbSAnLi9pdmFsdWUnO1xyXG5pbXBvcnQgeyBDb250cm9sVHlwZSB9IGZyb20gJy4uL2NvbnRyb2x0eXBlJztcclxuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IElFbnVtVmFsdWUsIEVudW1WYWx1ZUNvbnZlcnQgfSBmcm9tICcuLi9jb250cm9sdHlwZS9kcm9wZG93bmxpc3QvaWVudW12YWx1ZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgRHJvcERvd25MaXN0VmFsdWUgaW1wbGVtZW50cyBJVmFsdWUge1xyXG4gICAgdmFsdWU6IHN0cmluZztcclxuICAgIGNsZWFyJCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIGNvbnN0cnVjdG9yKGRhdGE6IHN0cmluZyA9ICcnKSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZSA9IGRhdGE7XHJcbiAgICB9XHJcbiAgICBjbGVhclZhbHVlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSB1bmRlZmluZWQ7XHJcbiAgICAgICAgdGhpcy5jbGVhciQuZW1pdCgpO1xyXG4gICAgfVxyXG4gICAgc2V0T3JpZ2luYWxWYWx1ZSh2YWx1ZTogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XHJcbiAgICB9XHJcbiAgICBnZXRPcmlnaW5hbFZhbHVlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xyXG4gICAgfVxyXG4gICAgZ2V0Q29udHJvbFR5cGUoKTogQ29udHJvbFR5cGUge1xyXG4gICAgICAgIHJldHVybiBDb250cm9sVHlwZS5Ecm9wRG93bjtcclxuICAgIH1cclxuXHJcbiAgICBpc0VtcHR5KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAhdGhpcy52YWx1ZTtcclxuICAgIH1cclxuICAgIGdldFZhbHVlVGV4dCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRHJvcERvd25MaXN0VmFsdWVDb252ZXJ0IHtcclxuICAgIGNvbnZlcnRUb09iamVjdChvYmo6IElWYWx1ZSk6IE9iamVjdCB7XHJcbiAgICAgICAgbGV0IGRyb3BEb3duTGlzdFZhbHVlID0gb2JqIGFzIERyb3BEb3duTGlzdFZhbHVlO1xyXG4gICAgICAgIGxldCBqb2JqID0gbmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGxldCBjb252ZXJ0b3IgPSBuZXcgRW51bVZhbHVlQ29udmVydCgpO1xyXG4gICAgICAgIGlmICghIShkcm9wRG93bkxpc3RWYWx1ZS52YWx1ZSkpIHtcclxuICAgICAgICAgICAgLy8gam9ialtcInZhbHVlXCJdPWNvbnZlcnRvci5jb252ZXJ0Sk9iamVjdChkcm9wRG93bkxpc3RWYWx1ZS52YWx1ZSk7XHJcbiAgICAgICAgICAgIGpvYmpbXCJ2YWx1ZVwiXSA9IGRyb3BEb3duTGlzdFZhbHVlLnZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gam9iajtcclxuICAgIH1cclxuXHJcbiAgICBpbml0RnJvbU9iamVjdChqb2JqOiBPYmplY3QpOiBEcm9wRG93bkxpc3RWYWx1ZSB7XHJcbiAgICAgICAgbGV0IGRyb3BEb3duTGlzdFZhbHVlID0gbmV3IERyb3BEb3duTGlzdFZhbHVlKCk7XHJcbiAgICAgICAgaWYgKCEhKGpvYmpbXCJ2YWx1ZVwiXSkpIHtcclxuICAgICAgICAgICAgbGV0IGNvbnZlcnRvciA9IG5ldyBFbnVtVmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgICAgIC8vIGRyb3BEb3duTGlzdFZhbHVlLnZhbHVlPWNvbnZlcnRvci5pbml0RnJvbUpvYmplY3Qoam9ialtcInZhbHVlXCJdKTtcclxuICAgICAgICAgICAgZHJvcERvd25MaXN0VmFsdWUudmFsdWUgPSBqb2JqW1widmFsdWVcIl07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBkcm9wRG93bkxpc3RWYWx1ZTtcclxuICAgIH1cclxufSJdfQ==