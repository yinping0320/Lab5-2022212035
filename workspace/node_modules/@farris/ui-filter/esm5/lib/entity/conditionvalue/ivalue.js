/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
import { TextValue } from "./textvalue";
import { NumberRangeValueConvertor } from "./numberrangevaue";
import { DateRangeValue } from "./daterangevalue";
import { HelpValue } from "./helpvalue";
import { DropDownListValueConvert } from "./dropdownlistvalue";
/**
 * @record
 */
export function IValue() { }
if (false) {
    /**
     * @return {?}
     */
    IValue.prototype.getControlType = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.getOriginalValue = function () { };
    /**
     * @param {?} value
     * @return {?}
     */
    IValue.prototype.setOriginalValue = function (value) { };
    /**
     * @return {?}
     */
    IValue.prototype.clearValue = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.isEmpty = function () { };
    /**
     * @param {?=} ctrl
     * @return {?}
     */
    IValue.prototype.getValueText = function (ctrl) { };
}
var ConditionValueConvert = /** @class */ (function () {
    function ConditionValueConvert() {
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    ConditionValueConvert.prototype.convertToObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var conditionValue = (/** @type {?} */ (obj));
        /** @type {?} */
        var controlType = conditionValue.getControlType();
        /** @type {?} */
        var jobj = new Object();
        jobj["Type"] = controlType;
        if (controlType == ControlType.DropDown) {
            /** @type {?} */
            var convertor = new DropDownListValueConvert();
            jobj["Content"] = convertor.convertToObject(conditionValue);
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            var convertor = new NumberRangeValueConvertor();
            jobj["Content"] = convertor.convertToObject(conditionValue);
        }
        else {
            jobj["Content"] = conditionValue;
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    ConditionValueConvert.prototype.initFromObject = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var controlType = (/** @type {?} */ (jobj["Type"]));
        /** @type {?} */
        var content = jobj["Content"];
        if (controlType == ControlType.Text) {
            return Object.assign(new TextValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            var convertor = new NumberRangeValueConvertor();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.DateRange) {
            return Object.assign(new DateRangeValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.DropDown) {
            /** @type {?} */
            var convertor = new DropDownListValueConvert();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.Help) {
            return Object.assign(new HelpValue(), (/** @type {?} */ (content)));
        }
    };
    return ConditionValueConvert;
}());
export { ConditionValueConvert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXZhbHVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2NvbmRpdGlvbnZhbHVlL2l2YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFFL0QsNEJBT0M7Ozs7O0lBTkcsa0RBQTZCOzs7O0lBQzdCLG9EQUF3Qjs7Ozs7SUFDeEIseURBQW1DOzs7O0lBQ25DLDhDQUFtQjs7OztJQUNuQiwyQ0FBbUI7Ozs7O0lBQ25CLG9EQUFnQzs7QUFHcEM7SUFBQTtJQXlDQSxDQUFDOzs7OztJQXhDRywrQ0FBZTs7OztJQUFmLFVBQWdCLEdBQVU7O1lBQ2xCLGNBQWMsR0FBQyxtQkFBQSxHQUFHLEVBQVU7O1lBQzVCLFdBQVcsR0FBQyxjQUFjLENBQUMsY0FBYyxFQUFFOztZQUMzQyxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7UUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFDLFdBQVcsQ0FBQztRQUN6QixJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsUUFBUSxFQUFDOztnQkFDN0IsU0FBUyxHQUFDLElBQUksd0JBQXdCLEVBQUU7WUFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDN0Q7YUFDSSxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsV0FBVyxFQUFDOztnQkFDckMsU0FBUyxHQUFDLElBQUkseUJBQXlCLEVBQUU7WUFDN0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDN0Q7YUFDRztZQUNBLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBQyxjQUFjLENBQUM7U0FDbEM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVELDhDQUFjOzs7O0lBQWQsVUFBZSxJQUFXOztZQUNsQixXQUFXLEdBQUMsbUJBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFlOztZQUN2QyxPQUFPLEdBQVEsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNsQyxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsSUFBSSxFQUFDO1lBQzdCLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFNBQVMsRUFBRSxFQUFDLG1CQUFBLE9BQU8sRUFBYSxDQUFDLENBQUM7U0FDOUQ7YUFDSSxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsV0FBVyxFQUFDOztnQkFDckMsU0FBUyxHQUFDLElBQUkseUJBQXlCLEVBQUU7WUFDN0MsT0FBTyxTQUFTLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVDO2FBQ0ksSUFBRyxXQUFXLElBQUUsV0FBVyxDQUFDLFNBQVMsRUFBQztZQUN2QyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxjQUFjLEVBQUUsRUFBQyxtQkFBQSxPQUFPLEVBQWtCLENBQUMsQ0FBQztTQUN4RTthQUNJLElBQUcsV0FBVyxJQUFFLFdBQVcsQ0FBQyxRQUFRLEVBQUM7O2dCQUNsQyxTQUFTLEdBQUMsSUFBSSx3QkFBd0IsRUFBRTtZQUM1QyxPQUFPLFNBQVMsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDNUM7YUFDSSxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsSUFBSSxFQUFDO1lBQ2xDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFNBQVMsRUFBRSxFQUFDLG1CQUFBLE9BQU8sRUFBYSxDQUFDLENBQUM7U0FDOUQ7SUFDTCxDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQUFDLEFBekNELElBeUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJvbFR5cGUgfSBmcm9tIFwiLi4vY29udHJvbHR5cGVcIjtcclxuaW1wb3J0IHsgVGV4dFZhbHVlIH0gZnJvbSBcIi4vdGV4dHZhbHVlXCI7XHJcbmltcG9ydCB7IE51bWJlclJhbmdlVmFsdWVDb252ZXJ0b3IgfSBmcm9tIFwiLi9udW1iZXJyYW5nZXZhdWVcIjtcclxuaW1wb3J0IHsgRGF0ZVJhbmdlVmFsdWUgfSBmcm9tIFwiLi9kYXRlcmFuZ2V2YWx1ZVwiO1xyXG5pbXBvcnQgeyBIZWxwVmFsdWUgfSBmcm9tIFwiLi9oZWxwdmFsdWVcIjtcclxuaW1wb3J0IHsgRHJvcERvd25MaXN0VmFsdWVDb252ZXJ0IH0gZnJvbSBcIi4vZHJvcGRvd25saXN0dmFsdWVcIjtcclxuaW1wb3J0IHsgSUNvbnRyb2wgfSBmcm9tIFwiLi4vY29udHJvbHR5cGUvaWNvbnRyb2xcIjtcclxuZXhwb3J0IGludGVyZmFjZSBJVmFsdWV7XHJcbiAgICBnZXRDb250cm9sVHlwZSgpOkNvbnRyb2xUeXBlO1xyXG4gICAgZ2V0T3JpZ2luYWxWYWx1ZSgpOiBhbnk7XHJcbiAgICBzZXRPcmlnaW5hbFZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xyXG4gICAgY2xlYXJWYWx1ZSgpOiB2b2lkO1xyXG4gICAgaXNFbXB0eSgpOiBib29sZWFuO1xyXG4gICAgZ2V0VmFsdWVUZXh0KGN0cmw/OiBhbnkpOnN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIENvbmRpdGlvblZhbHVlQ29udmVydHtcclxuICAgIGNvbnZlcnRUb09iamVjdChvYmo6SVZhbHVlKTpPYmplY3R7XHJcbiAgICAgICAgbGV0IGNvbmRpdGlvblZhbHVlPW9iaiBhcyBJVmFsdWU7XHJcbiAgICAgICAgbGV0IGNvbnRyb2xUeXBlPWNvbmRpdGlvblZhbHVlLmdldENvbnRyb2xUeXBlKCk7XHJcbiAgICAgICAgbGV0IGpvYmo9bmV3IE9iamVjdCgpO1xyXG4gICAgICAgIGpvYmpbXCJUeXBlXCJdPWNvbnRyb2xUeXBlO1xyXG4gICAgICAgIGlmKGNvbnRyb2xUeXBlPT1Db250cm9sVHlwZS5Ecm9wRG93bil7XHJcbiAgICAgICAgICAgIGxldCBjb252ZXJ0b3I9bmV3IERyb3BEb3duTGlzdFZhbHVlQ29udmVydCgpO1xyXG4gICAgICAgICAgICBqb2JqW1wiQ29udGVudFwiXT1jb252ZXJ0b3IuY29udmVydFRvT2JqZWN0KGNvbmRpdGlvblZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihjb250cm9sVHlwZT09Q29udHJvbFR5cGUuTnVtYmVyUmFuZ2Upe1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yPW5ldyBOdW1iZXJSYW5nZVZhbHVlQ29udmVydG9yKCk7XHJcbiAgICAgICAgICAgIGpvYmpbXCJDb250ZW50XCJdPWNvbnZlcnRvci5jb252ZXJ0VG9PYmplY3QoY29uZGl0aW9uVmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBqb2JqW1wiQ29udGVudFwiXT1jb25kaXRpb25WYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGpvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdEZyb21PYmplY3Qoam9iajpPYmplY3QpOklWYWx1ZXtcclxuICAgICAgICBsZXQgY29udHJvbFR5cGU9am9ialtcIlR5cGVcIl0gYXMgQ29udHJvbFR5cGU7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQ6SVZhbHVlPWpvYmpbXCJDb250ZW50XCJdO1xyXG4gICAgICAgIGlmKGNvbnRyb2xUeXBlPT1Db250cm9sVHlwZS5UZXh0KXtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IFRleHRWYWx1ZSgpLGNvbnRlbnQgYXMgVGV4dFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihjb250cm9sVHlwZT09Q29udHJvbFR5cGUuTnVtYmVyUmFuZ2Upe1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yPW5ldyBOdW1iZXJSYW5nZVZhbHVlQ29udmVydG9yKCk7XHJcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJ0b3IuaW5pdEZyb21PYmplY3QoY29udGVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoY29udHJvbFR5cGU9PUNvbnRyb2xUeXBlLkRhdGVSYW5nZSl7XHJcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBEYXRlUmFuZ2VWYWx1ZSgpLGNvbnRlbnQgYXMgRGF0ZVJhbmdlVmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvbnRyb2xUeXBlPT1Db250cm9sVHlwZS5Ecm9wRG93bil7XHJcbiAgICAgICAgICAgIGxldCBjb252ZXJ0b3I9bmV3IERyb3BEb3duTGlzdFZhbHVlQ29udmVydCgpO1xyXG4gICAgICAgICAgICByZXR1cm4gY29udmVydG9yLmluaXRGcm9tT2JqZWN0KGNvbnRlbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvbnRyb2xUeXBlPT1Db250cm9sVHlwZS5IZWxwKXtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IEhlbHBWYWx1ZSgpLGNvbnRlbnQgYXMgSGVscFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=