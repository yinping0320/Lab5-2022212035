/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from '../controltype';
import { EventEmitter } from '@angular/core';
var CheckboxGroupValue = /** @class */ (function () {
    function CheckboxGroupValue(value) {
        if (value === void 0) { value = { value: [] }; }
        this.clear$ = new EventEmitter();
        this.value = value.value;
    }
    /**
     * @return {?}
     */
    CheckboxGroupValue.prototype.clearValue = /**
     * @return {?}
     */
    function () {
        this.value = [];
        this.clear$.emit();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    CheckboxGroupValue.prototype.setOriginalValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.value = value;
    };
    /**
     * @return {?}
     */
    CheckboxGroupValue.prototype.getOriginalValue = /**
     * @return {?}
     */
    function () {
        return this.value;
    };
    /**
     * @return {?}
     */
    CheckboxGroupValue.prototype.getControlType = /**
     * @return {?}
     */
    function () {
        return ControlType.CheckboxGroup;
    };
    /**
     * @return {?}
     */
    CheckboxGroupValue.prototype.isEmpty = /**
     * @return {?}
     */
    function () {
        return this.value.length == 0;
    };
    /**
     * @return {?}
     */
    CheckboxGroupValue.prototype.getValueText = /**
     * @return {?}
     */
    function () {
        return this.value.join(',');
    };
    return CheckboxGroupValue;
}());
export { CheckboxGroupValue };
if (false) {
    /** @type {?} */
    CheckboxGroupValue.prototype.value;
    /** @type {?} */
    CheckboxGroupValue.prototype.clear$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3hncm91cHZhbHVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2NvbmRpdGlvbnZhbHVlL2NoZWNrYm94Z3JvdXB2YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0M7SUFHSSw0QkFBWSxLQUF1QztRQUF2QyxzQkFBQSxFQUFBLFVBQTRCLEtBQUssRUFBRSxFQUFFLEVBQUU7UUFEbkQsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCx1Q0FBVTs7O0lBQVY7UUFDSSxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBQ0QsNkNBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQVk7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQzs7OztJQUNELDZDQUFnQjs7O0lBQWhCO1FBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFDRCwyQ0FBYzs7O0lBQWQ7UUFDSSxPQUFPLFdBQVcsQ0FBQyxhQUFhLENBQUM7SUFDckMsQ0FBQzs7OztJQUVELG9DQUFPOzs7SUFBUDtRQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Ozs7SUFDRCx5Q0FBWTs7O0lBQVo7UUFDSSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFDTCx5QkFBQztBQUFELENBQUMsQUEzQkQsSUEyQkM7Ozs7SUExQkcsbUNBQWE7O0lBQ2Isb0NBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVZhbHVlIH0gZnJvbSAnLi9pdmFsdWUnO1xyXG5pbXBvcnQgeyBDb250cm9sVHlwZSB9IGZyb20gJy4uL2NvbnRyb2x0eXBlJztcclxuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2hlY2tib3hHcm91cFZhbHVlIGltcGxlbWVudHMgSVZhbHVlIHtcclxuICAgIHZhbHVlOiBhbnlbXTtcclxuICAgIGNsZWFyJCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIGNvbnN0cnVjdG9yKHZhbHVlOiB7IHZhbHVlOiBhbnlbXSB9ID0geyB2YWx1ZTogW10gfSkge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZS52YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBjbGVhclZhbHVlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSBbXTtcclxuICAgICAgICB0aGlzLmNsZWFyJC5lbWl0KCk7XHJcbiAgICB9XHJcbiAgICBzZXRPcmlnaW5hbFZhbHVlKHZhbHVlOiBhbnlbXSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcclxuICAgIH1cclxuICAgIGdldE9yaWdpbmFsVmFsdWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XHJcbiAgICB9XHJcbiAgICBnZXRDb250cm9sVHlwZSgpOiBDb250cm9sVHlwZSB7XHJcbiAgICAgICAgcmV0dXJuIENvbnRyb2xUeXBlLkNoZWNrYm94R3JvdXA7XHJcbiAgICB9XHJcblxyXG4gICAgaXNFbXB0eSgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZS5sZW5ndGggPT0gMDtcclxuICAgIH1cclxuICAgIGdldFZhbHVlVGV4dCgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlLmpvaW4oJywnKTtcclxuICAgIH1cclxufVxyXG4iXX0=