/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../../controltype";
import { EnumType } from "./enumtype";
import { EnumValueConvert } from "./ienumvalue";
import { EnumStringValue } from "./stringenumvalue";
import { EnumBoolValue } from "./boolenumvalue";
import { EnumIntegerValue } from "./integerenumvalue";
/**
 * 下拉列表控件
 */
var /**
 * 下拉列表控件
 */
DropDownControl = /** @class */ (function () {
    function DropDownControl() {
    }
    /**
     * 获取控件类型
     */
    /**
     * 获取控件类型
     * @return {?}
     */
    DropDownControl.prototype.getControlType = /**
     * 获取控件类型
     * @return {?}
     */
    function () {
        return ControlType.DropDown;
    };
    return DropDownControl;
}());
/**
 * 下拉列表控件
 */
export { DropDownControl };
if (false) {
    /**
     * 下拉值类型
     * @type {?}
     */
    DropDownControl.prototype.valueType;
    /**
     * 默认显示
     * @type {?}
     */
    DropDownControl.prototype.placeholder;
    /**
     * 下拉数据源列表
     * 该属性为IEnumValue接口类型，具体实现类如下：
     * 1.布尔类型：EnumBoolValue,布尔类型的控件会转成下拉列表，实现类使用EnumBoolValue
     * 2.字符串类型：EnumStringValue
     * 3.整型类型：EnumIntegerValue 例如Radio Button类型需要使用EnumIntegerValue实现类
     * @type {?}
     */
    DropDownControl.prototype.enumValues;
    /**
     * 是否是展示在扩展区域内的
     * @type {?}
     */
    DropDownControl.prototype.isExtend;
    /**
     * 是否显示label
     * @type {?}
     */
    DropDownControl.prototype.showLabel;
    /**
     * 是否必填
     * @type {?}
     */
    DropDownControl.prototype.required;
}
/**
 * 下拉列表控件序列化与反序列化器
 */
var /**
 * 下拉列表控件序列化与反序列化器
 */
DropDownListControlConvert = /** @class */ (function () {
    function DropDownListControlConvert() {
    }
    /**
     * 序列化
     * @param obj 下拉列表控件实体
     */
    /**
     * 序列化
     * @param {?} obj 下拉列表控件实体
     * @return {?}
     */
    DropDownListControlConvert.prototype.convertToObject = /**
     * 序列化
     * @param {?} obj 下拉列表控件实体
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var dropDownListControl = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        jobj["valueType"] = dropDownListControl.valueType;
        if (dropDownListControl.enumValues != null) {
            /** @type {?} */
            var jarray_1 = jobj["enumValues"] = [];
            /** @type {?} */
            var convertor_1 = new EnumValueConvert();
            dropDownListControl.enumValues.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                if (dropDownListControl.valueType == EnumType.BoolType) {
                    jarray_1.push(convertor_1.convertJObject(Object.assign(new EnumBoolValue(), element)));
                }
                else if (dropDownListControl.valueType == EnumType.IntType) {
                    jarray_1.push(convertor_1.convertJObject(Object.assign(new EnumIntegerValue(), element)));
                }
                else {
                    jarray_1.push(convertor_1.convertJObject(Object.assign(new EnumStringValue(), element)));
                }
            }));
        }
        return jobj;
    };
    /**
     * 反序列化
     * @param jobj 下拉列表控件实体序列化后的JSON对象
     */
    /**
     * 反序列化
     * @param {?} jobj 下拉列表控件实体序列化后的JSON对象
     * @return {?}
     */
    DropDownListControlConvert.prototype.initFromObject = /**
     * 反序列化
     * @param {?} jobj 下拉列表控件实体序列化后的JSON对象
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var control = new DropDownControl();
        if (jobj["valueType"] != null) {
            control.valueType = (/** @type {?} */ (jobj["valueType"]));
        }
        if (jobj["enumValues"] != null) {
            control.enumValues = new Array();
            jobj["enumValues"].forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                /** @type {?} */
                var convertor = new EnumValueConvert();
                control.enumValues.push(convertor.initFromJobject(element));
            }));
        }
        return control;
    };
    return DropDownListControlConvert;
}());
/**
 * 下拉列表控件序列化与反序列化器
 */
export { DropDownListControlConvert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd25jb250cm9sLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2NvbnRyb2x0eXBlL2Ryb3Bkb3dubGlzdC9kcm9wZG93bmNvbnRyb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3RDLE9BQU8sRUFBYyxnQkFBZ0IsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7O0FBS3REOzs7O0lBQUE7SUFtQ0EsQ0FBQztJQWpDRzs7T0FFRzs7Ozs7SUFDSCx3Q0FBYzs7OztJQUFkO1FBQ0ksT0FBTyxXQUFXLENBQUMsUUFBUSxDQUFDO0lBQ2hDLENBQUM7SUE0Qkwsc0JBQUM7QUFBRCxDQUFDLEFBbkNELElBbUNDOzs7Ozs7Ozs7O0lBdkJHLG9DQUFtQjs7Ozs7SUFJbkIsc0NBQW1COzs7Ozs7Ozs7SUFRbkIscUNBQTZCOzs7OztJQUs3QixtQ0FBaUI7Ozs7O0lBR2pCLG9DQUFrQjs7Ozs7SUFFbEIsbUNBQWlCOzs7OztBQU1yQjs7OztJQUFBO0lBOENBLENBQUM7SUE1Q0c7OztPQUdHOzs7Ozs7SUFDSCxvREFBZTs7Ozs7SUFBZixVQUFnQixHQUFtQjs7WUFDM0IsbUJBQW1CLEdBQUUsbUJBQUEsR0FBRyxFQUFtQjs7WUFDM0MsSUFBSSxHQUFDLElBQUksTUFBTSxFQUFFO1FBQ3JCLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBQyxtQkFBbUIsQ0FBQyxTQUFTLENBQUM7UUFDaEQsSUFBRyxtQkFBbUIsQ0FBQyxVQUFVLElBQUUsSUFBSSxFQUFDOztnQkFDaEMsUUFBTSxHQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBQyxFQUFFOztnQkFDNUIsV0FBUyxHQUFDLElBQUksZ0JBQWdCLEVBQUU7WUFDcEMsbUJBQW1CLENBQUMsVUFBVSxDQUFDLE9BQU87Ozs7WUFBQyxVQUFBLE9BQU87Z0JBQzFDLElBQUcsbUJBQW1CLENBQUMsU0FBUyxJQUFFLFFBQVEsQ0FBQyxRQUFRLEVBQUM7b0JBQ2hELFFBQU0sQ0FBQyxJQUFJLENBQUMsV0FBUyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksYUFBYSxFQUFFLEVBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUNyRjtxQkFDSSxJQUFHLG1CQUFtQixDQUFDLFNBQVMsSUFBRSxRQUFRLENBQUMsT0FBTyxFQUFDO29CQUNwRCxRQUFNLENBQUMsSUFBSSxDQUFDLFdBQVMsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLGdCQUFnQixFQUFFLEVBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUN4RjtxQkFDRztvQkFDQSxRQUFNLENBQUMsSUFBSSxDQUFDLFdBQVMsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLGVBQWUsRUFBRSxFQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDdkY7WUFDTCxDQUFDLEVBQUMsQ0FBQztTQUNOO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7O0lBQ0gsbURBQWM7Ozs7O0lBQWQsVUFBZSxJQUFXOztZQUNsQixPQUFPLEdBQUMsSUFBSSxlQUFlLEVBQUU7UUFDakMsSUFBRyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUUsSUFBSSxFQUFDO1lBQ3ZCLE9BQU8sQ0FBQyxTQUFTLEdBQUMsbUJBQUEsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFVLENBQUM7U0FDakQ7UUFDRCxJQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBRSxJQUFJLEVBQUM7WUFDeEIsT0FBTyxDQUFDLFVBQVUsR0FBQyxJQUFJLEtBQUssRUFBYyxDQUFDO1lBQzNDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPOzs7O1lBQUMsVUFBQSxPQUFPOztvQkFDMUIsU0FBUyxHQUFDLElBQUksZ0JBQWdCLEVBQUU7Z0JBQ3BDLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNoRSxDQUFDLEVBQUMsQ0FBQztTQUNOO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUNMLGlDQUFDO0FBQUQsQ0FBQyxBQTlDRCxJQThDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElDb250cm9sIH0gZnJvbSBcIi4uL2ljb250cm9sXCI7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSBcIi4uLy4uL2NvbnRyb2x0eXBlXCI7XHJcbmltcG9ydCB7IEVudW1UeXBlIH0gZnJvbSBcIi4vZW51bXR5cGVcIjtcclxuaW1wb3J0IHsgSUVudW1WYWx1ZSwgRW51bVZhbHVlQ29udmVydCB9IGZyb20gXCIuL2llbnVtdmFsdWVcIjtcclxuaW1wb3J0IHsgRW51bVN0cmluZ1ZhbHVlIH0gZnJvbSBcIi4vc3RyaW5nZW51bXZhbHVlXCI7XHJcbmltcG9ydCB7IEVudW1Cb29sVmFsdWUgfSBmcm9tIFwiLi9ib29sZW51bXZhbHVlXCI7XHJcbmltcG9ydCB7IEVudW1JbnRlZ2VyVmFsdWUgfSBmcm9tIFwiLi9pbnRlZ2VyZW51bXZhbHVlXCI7XHJcblxyXG4vKipcclxuICog5LiL5ouJ5YiX6KGo5o6n5Lu2XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRHJvcERvd25Db250cm9sIGltcGxlbWVudHMgSUNvbnRyb2x7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bmjqfku7bnsbvlnotcclxuICAgICAqL1xyXG4gICAgZ2V0Q29udHJvbFR5cGUoKTogQ29udHJvbFR5cGUge1xyXG4gICAgICAgIHJldHVybiBDb250cm9sVHlwZS5Ecm9wRG93bjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOS4i+aLieWAvOexu+Wei1xyXG4gICAgICovXHJcbiAgICB2YWx1ZVR5cGU6RW51bVR5cGU7XHJcbiAgICAvKipcclxuICAgICAqIOm7mOiupOaYvuekulxyXG4gICAgICovXHJcbiAgICBwbGFjZWhvbGRlcjpzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOS4i+aLieaVsOaNrua6kOWIl+ihqFxyXG4gICAgICog6K+l5bGe5oCn5Li6SUVudW1WYWx1ZeaOpeWPo+exu+Wei++8jOWFt+S9k+WunueOsOexu+WmguS4i++8mlxyXG4gICAgICogMS7luIPlsJTnsbvlnovvvJpFbnVtQm9vbFZhbHVlLOW4g+WwlOexu+Wei+eahOaOp+S7tuS8mui9rOaIkOS4i+aLieWIl+ihqO+8jOWunueOsOexu+S9v+eUqEVudW1Cb29sVmFsdWVcclxuICAgICAqIDIu5a2X56ym5Liy57G75Z6L77yaRW51bVN0cmluZ1ZhbHVlXHJcbiAgICAgKiAzLuaVtOWei+exu+Wei++8mkVudW1JbnRlZ2VyVmFsdWUg5L6L5aaCUmFkaW8gQnV0dG9u57G75Z6L6ZyA6KaB5L2/55SoRW51bUludGVnZXJWYWx1ZeWunueOsOexu1xyXG4gICAgICovXHJcbiAgICBlbnVtVmFsdWVzOkFycmF5PElFbnVtVmFsdWU+O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm5piv5bGV56S65Zyo5omp5bGV5Yy65Z+f5YaF55qEXHJcbiAgICAgKi9cclxuICAgIGlzRXh0ZW5kOmJvb2xlYW47XHJcblxyXG4gICAgLyoq5piv5ZCm5pi+56S6bGFiZWwgKi9cclxuICAgIHNob3dMYWJlbDpib29sZWFuO1xyXG4gICAgLyoq5piv5ZCm5b+F5aGrICovXHJcbiAgICByZXF1aXJlZDpib29sZWFuO1xyXG59XHJcblxyXG4vKipcclxuICog5LiL5ouJ5YiX6KGo5o6n5Lu25bqP5YiX5YyW5LiO5Y+N5bqP5YiX5YyW5ZmoXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRHJvcERvd25MaXN0Q29udHJvbENvbnZlcnR7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDluo/liJfljJZcclxuICAgICAqIEBwYXJhbSBvYmog5LiL5ouJ5YiX6KGo5o6n5Lu25a6e5L2TXHJcbiAgICAgKi9cclxuICAgIGNvbnZlcnRUb09iamVjdChvYmo6RHJvcERvd25Db250cm9sKXtcclxuICAgICAgICBsZXQgZHJvcERvd25MaXN0Q29udHJvbD0gb2JqIGFzIERyb3BEb3duQ29udHJvbDtcclxuICAgICAgICBsZXQgam9iaj1uZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgam9ialtcInZhbHVlVHlwZVwiXT1kcm9wRG93bkxpc3RDb250cm9sLnZhbHVlVHlwZTtcclxuICAgICAgICBpZihkcm9wRG93bkxpc3RDb250cm9sLmVudW1WYWx1ZXMhPW51bGwpe1xyXG4gICAgICAgICAgICBsZXQgamFycmF5PWpvYmpbXCJlbnVtVmFsdWVzXCJdPVtdO1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yPW5ldyBFbnVtVmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgICAgIGRyb3BEb3duTGlzdENvbnRyb2wuZW51bVZhbHVlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYoZHJvcERvd25MaXN0Q29udHJvbC52YWx1ZVR5cGU9PUVudW1UeXBlLkJvb2xUeXBlKXtcclxuICAgICAgICAgICAgICAgICAgICBqYXJyYXkucHVzaChjb252ZXJ0b3IuY29udmVydEpPYmplY3QoT2JqZWN0LmFzc2lnbihuZXcgRW51bUJvb2xWYWx1ZSgpLGVsZW1lbnQpKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmKGRyb3BEb3duTGlzdENvbnRyb2wudmFsdWVUeXBlPT1FbnVtVHlwZS5JbnRUeXBlKXtcclxuICAgICAgICAgICAgICAgICAgICBqYXJyYXkucHVzaChjb252ZXJ0b3IuY29udmVydEpPYmplY3QoT2JqZWN0LmFzc2lnbihuZXcgRW51bUludGVnZXJWYWx1ZSgpLGVsZW1lbnQpKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIGphcnJheS5wdXNoKGNvbnZlcnRvci5jb252ZXJ0Sk9iamVjdChPYmplY3QuYXNzaWduKG5ldyBFbnVtU3RyaW5nVmFsdWUoKSxlbGVtZW50KSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGpvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlj43luo/liJfljJZcclxuICAgICAqIEBwYXJhbSBqb2JqIOS4i+aLieWIl+ihqOaOp+S7tuWunuS9k+W6j+WIl+WMluWQjueahEpTT07lr7nosaFcclxuICAgICAqL1xyXG4gICAgaW5pdEZyb21PYmplY3Qoam9iajpPYmplY3QpOkRyb3BEb3duQ29udHJvbHtcclxuICAgICAgICBsZXQgY29udHJvbD1uZXcgRHJvcERvd25Db250cm9sKCk7XHJcbiAgICAgICAgaWYoam9ialtcInZhbHVlVHlwZVwiXSE9bnVsbCl7XHJcbiAgICAgICAgICAgIGNvbnRyb2wudmFsdWVUeXBlPWpvYmpbXCJ2YWx1ZVR5cGVcIl0gYXMgbnVtYmVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihqb2JqW1wiZW51bVZhbHVlc1wiXSE9bnVsbCl7XHJcbiAgICAgICAgICAgIGNvbnRyb2wuZW51bVZhbHVlcz1uZXcgQXJyYXk8SUVudW1WYWx1ZT4oKTtcclxuICAgICAgICAgICAgam9ialtcImVudW1WYWx1ZXNcIl0uZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBjb252ZXJ0b3I9bmV3IEVudW1WYWx1ZUNvbnZlcnQoKTtcclxuICAgICAgICAgICAgICAgIGNvbnRyb2wuZW51bVZhbHVlcy5wdXNoKGNvbnZlcnRvci5pbml0RnJvbUpvYmplY3QoZWxlbWVudCkpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNvbnRyb2w7XHJcbiAgICB9XHJcbn0iXX0=