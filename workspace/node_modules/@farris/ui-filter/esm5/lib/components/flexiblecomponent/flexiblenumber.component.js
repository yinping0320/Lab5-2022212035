/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, EventEmitter, Output, ElementRef } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
import { LocaleService } from '@farris/ui-locale';
var FlexibleNumberComponent = /** @class */ (function () {
    function FlexibleNumberComponent(solutionService, element, localeService) {
        this.solutionService = solutionService;
        this.element = element;
        this.localeService = localeService;
        this.searchHandle = new EventEmitter();
        /**
         * 判断是否是在扩展区域展示
         */
        this.extend = false;
        /**
         * 判断是否显示label
         */
        this.showlabel = true;
        this.canNull = true;
    }
    Object.defineProperty(FlexibleNumberComponent.prototype, "isExtend", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.extend && this.autoLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexibleNumberComponent.prototype, "hidenLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.showlabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexibleNumberComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this._item;
        },
        set: /**
         * @param {?} nr
         * @return {?}
         */
        function (nr) {
            this._item = nr;
            this.precision = nr.control.precision;
            this.bigNumber = nr.control.bigNumber;
            if (!this.bigNumber) {
                this.min = -2147483648;
                this.max = 2147483647;
            }
            if (this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')) {
                this.extend = this._item.control.isExtend;
                if (!this.extend) {
                    this.showlabel = this._item.control.showLabel;
                }
            }
            this.beginPlaceHolder = (this._item.hasOwnProperty('beginPlaceHolder') && this._item.beginPlaceHolder) ? this._item.beginPlaceHolder : this.localeService.getValue('filterPanel.beginPlaceHolder');
            this.endPlaceHolder = (this._item.hasOwnProperty('endPlaceHolder') && this._item.beginPlaceHolder) ? this._item.endPlaceHolder : this.localeService.getValue('filterPanel.endPlaceHolder');
            this.placeholder = (this._item.hasOwnProperty('placeHolder') && this._item.placeHolder) ? this._item.placeHolder : '';
            this.single = this._item.control.single;
            this._item.value.single = this.single;
            this.constructMultiFieldNumberRange((/** @type {?} */ (nr.value)));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FlexibleNumberComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FlexibleNumberComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} field
     * @return {?}
     */
    FlexibleNumberComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    FlexibleNumberComponent.prototype.constructMultiFieldNumberRange = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.single) {
            this.value = value.value == null ? null : value.value;
        }
        else {
            this.beginValue = value.startValue == null ? null : value.startValue;
            this.endValue = value.endValue == null ? null : value.endValue;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FlexibleNumberComponent.prototype.numberChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event) {
            this._item.value.value = event;
        }
        else {
            this._item.value.value = null;
        }
        if (Object.keys(this._item.value).length === 0) {
            this._item.valueText = '';
        }
        else {
            this._item.valueText = '' + this._item.value.value;
        }
        if (this.disabled) {
            return;
        }
        this.searchHandle.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FlexibleNumberComponent.prototype.beginValueChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this._item.value.startValue = event;
        this.setValueText();
        if (this.disabled) {
            return;
        }
        this.searchHandle.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FlexibleNumberComponent.prototype.endValueChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this._item.value.endValue = event;
        this.setValueText();
        if (this.disabled) {
            return;
        }
        this.searchHandle.emit();
    };
    /**
     * @return {?}
     */
    FlexibleNumberComponent.prototype.setValueText = /**
     * @return {?}
     */
    function () {
        if (Object.keys(this._item.value).length === 0 || (this._item.value.startValue == null && this._item.value.endValue == null)) {
            this._item.valueText = '';
        }
        else if (this._item.value.startValue == null) {
            this._item.valueText = '~' + this._item.value.endValue;
        }
        else if (this._item.value.endValue == null) {
            this._item.valueText = this._item.value.startValue + '~';
        }
        else {
            this._item.valueText = this._item.value.startValue + '~' + this._item.value.endValue;
        }
    };
    FlexibleNumberComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-filter-flexiblenumber',
                    template: "<label class=\"col-form-label\" *ngIf=\"item && showlabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n    <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.required\">*</span>\r\n    <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n</label>\r\n<div class=\"farris-input-wrap d-flex\">\r\n    <ng-container *ngIf=\"single; else elseTemplate\">\r\n        <farris-number-spinner class=\"f-utils-fill-flex-row\" [(ngModel)]=\"value\" [canNull]=\"canNull\" [disabled]=\"disabled\"\r\n            [precision]=\"precision\" [bigNumber]=\"bigNumber\" [min]=\"min\" [max]=\"max\" [placeholder]=\"placeholder\"\r\n            (valueChange)=\"numberChange($event)\" #numberText></farris-number-spinner>\r\n    </ng-container>\r\n    <ng-template #elseTemplate>\r\n        <div class=\"d-flex align-items-center\">\r\n            <farris-number-spinner [(ngModel)]=\"beginValue\" [canNull]=\"canNull\" [precision]=\"precision\" [disabled]=\"disabled\"\r\n                [bigNumber]=\"bigNumber\" [min]=\"min\" [max]=\"endValue?endValue:max\" [placeholder]=\"beginPlaceHolder\"\r\n                (valueChange)=\"beginValueChange($event)\" #beginNumberText></farris-number-spinner>\r\n            <span class=\"f-icon f-icon-orientation-arrow f-filter-panel-flexible-icon\"></span>\r\n            <farris-number-spinner [(ngModel)]=\"endValue\" [canNull]=\"canNull\" [precision]=\"precision\"\r\n                [bigNumber]=\"bigNumber\" [min]=\"beginValue?beginValue:min\" [max]=\"max\" [placeholder]=\"endPlaceHolder\"\r\n                (valueChange)=\"endValueChange($event)\"></farris-number-spinner>\r\n        </div>\r\n    </ng-template>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    FlexibleNumberComponent.ctorParameters = function () { return [
        { type: SolutionService },
        { type: ElementRef },
        { type: LocaleService }
    ]; };
    FlexibleNumberComponent.propDecorators = {
        autoLabel: [{ type: Input }],
        disabled: [{ type: Input }],
        searchHandle: [{ type: Output, args: ['searchHandle',] }],
        isExtend: [{ type: HostBinding, args: ['class.filter-item-wrap',] }],
        hidenLabel: [{ type: HostBinding, args: ['class.filter-item-hiddenlabel',] }],
        item: [{ type: Input }]
    };
    return FlexibleNumberComponent;
}());
export { FlexibleNumberComponent };
if (false) {
    /** @type {?} */
    FlexibleNumberComponent.prototype.autoLabel;
    /** @type {?} */
    FlexibleNumberComponent.prototype.disabled;
    /** @type {?} */
    FlexibleNumberComponent.prototype.searchHandle;
    /**
     * 判断是否是在扩展区域展示
     * @type {?}
     */
    FlexibleNumberComponent.prototype.extend;
    /**
     * 判断是否显示label
     * @type {?}
     */
    FlexibleNumberComponent.prototype.showlabel;
    /** @type {?} */
    FlexibleNumberComponent.prototype.canNull;
    /** @type {?} */
    FlexibleNumberComponent.prototype.number;
    /** @type {?} */
    FlexibleNumberComponent.prototype.value;
    /** @type {?} */
    FlexibleNumberComponent.prototype.beginValue;
    /** @type {?} */
    FlexibleNumberComponent.prototype.endValue;
    /** @type {?} */
    FlexibleNumberComponent.prototype.precision;
    /** @type {?} */
    FlexibleNumberComponent.prototype.placeholder;
    /** @type {?} */
    FlexibleNumberComponent.prototype.beginPlaceHolder;
    /** @type {?} */
    FlexibleNumberComponent.prototype.endPlaceHolder;
    /** @type {?} */
    FlexibleNumberComponent.prototype.bigNumber;
    /** @type {?} */
    FlexibleNumberComponent.prototype.max;
    /** @type {?} */
    FlexibleNumberComponent.prototype.min;
    /** @type {?} */
    FlexibleNumberComponent.prototype.single;
    /** @type {?} */
    FlexibleNumberComponent.prototype._item;
    /**
     * @type {?}
     * @private
     */
    FlexibleNumberComponent.prototype.solutionService;
    /**
     * @type {?}
     * @private
     */
    FlexibleNumberComponent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    FlexibleNumberComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,