/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, EventEmitter, Output } from '@angular/core';
import { ControlType } from '../../entity/controltype';
import { SolutionService } from '../../service/solution.service';
import { RadioGroupValue } from '../../entity/conditionvalue/radiovalue';
import { RadioValue } from '../../entity/controltype/radio/radiovalue';
var filterRadioComponent = /** @class */ (function () {
    function filterRadioComponent(solutionService) {
        this.solutionService = solutionService;
        this.searchHandle = new EventEmitter();
        /**
         * 判断是否是在扩展区域展示
         */
        this.extend = false;
        /**
         * 判断是否显示label
         */
        this.showlabel = true;
        this.selectCheck = [];
        this.cla = true;
        this.radioDataSource = new Array();
    }
    Object.defineProperty(filterRadioComponent.prototype, "isExtend", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.extend && this.autoLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(filterRadioComponent.prototype, "isCheckExtend", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.extend;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(filterRadioComponent.prototype, "hidenLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.showlabel;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    filterRadioComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getDataSource();
        this.radioValue = this.item.value.getOriginalValue();
        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {
            this.extend = this.item.control.isExtend;
            if (!this.extend) {
                this.showlabel = this.item.control.showLabel;
            }
        }
    };
    /**
     * @return {?}
     */
    filterRadioComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.getDataSource();
    };
    /**
     * @return {?}
     */
    filterRadioComponent.prototype.getDataSource = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.item && this.item.control && this.item.control.getControlType() == ControlType.Radio) {
            /** @type {?} */
            var radioboxList = ((/** @type {?} */ (this.item.control)));
            this.radioDataSource = Array();
            if (radioboxList.enumValues && radioboxList.enumValues.length > 0) {
                radioboxList.enumValues.forEach((/**
                 * @param {?} element
                 * @return {?}
                 */
                function (element) {
                    _this.radioDataSource.push(Object.assign(new RadioValue(), element));
                }));
            }
        }
    };
    /**
     * @param {?} field
     * @return {?}
     */
    filterRadioComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    filterRadioComponent.prototype.onSearch = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event) {
            this.item.value.value = event;
        }
        else {
            this.item.value.value = new RadioGroupValue();
        }
        if (this.disabled) {
            return;
        }
        this.searchHandle.emit();
    };
    filterRadioComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-filter-radio',
                    template: "<label class=\"col-form-label\" *ngIf=\"item && showlabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n    <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.required\">*</span>\r\n    <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n</label>\r\n<div class=\"farris-input-wrap\" *ngIf=\"item\">\r\n    <farris-radiogroup \r\n    [(ngModel)]=\"item.value.value\" \r\n    [horizontal]=\"true\" \r\n    [data]=\"radioDataSource\"\r\n    (changeValue)=\"onSearch($event)\">\r\n    </farris-radiogroup>\r\n</div>"
                    // encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    filterRadioComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    filterRadioComponent.propDecorators = {
        item: [{ type: Input }],
        autoLabel: [{ type: Input }],
        disabled: [{ type: Input }],
        searchHandle: [{ type: Output, args: ['searchHandle',] }],
        isExtend: [{ type: HostBinding, args: ['class.filter-item-wrap',] }],
        isCheckExtend: [{ type: HostBinding, args: ['class.filter-item-checbox-wrap',] }],
        cla: [{ type: HostBinding, args: ['class.filter-item-checkboxgroup',] }],
        hidenLabel: [{ type: HostBinding, args: ['class.filter-item-hiddenlabel',] }]
    };
    return filterRadioComponent;
}());
export { filterRadioComponent };
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    filterRadioComponent.prototype.item;
    /** @type {?} */
    filterRadioComponent.prototype.autoLabel;
    /** @type {?} */
    filterRadioComponent.prototype.disabled;
    /** @type {?} */
    filterRadioComponent.prototype.searchHandle;
    /**
     * 判断是否是在扩展区域展示
     * @type {?}
     */
    filterRadioComponent.prototype.extend;
    /**
     * 判断是否显示label
     * @type {?}
     */
    filterRadioComponent.prototype.showlabel;
    /** @type {?} */
    filterRadioComponent.prototype.radioValue;
    /** @type {?} */
    filterRadioComponent.prototype.selectCheck;
    /** @type {?} */
    filterRadioComponent.prototype.cla;
    /** @type {?} */
    filterRadioComponent.prototype.radioDataSource;
    /**
     * @type {?}
     * @private
     */
    filterRadioComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,