/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, EventEmitter, Output, ElementRef } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
var InputComponent = /** @class */ (function () {
    function InputComponent(solutionService, element) {
        this.solutionService = solutionService;
        this.element = element;
        this.searchHandle = new EventEmitter();
        /**
         * 判断是否是在扩展区域展示
         */
        this.extend = false;
        /**
         * 判断是否显示label
         */
        this.showlabel = true;
    }
    Object.defineProperty(InputComponent.prototype, "isExtend", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.extend && this.autoLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputComponent.prototype, "hidenLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.showlabel;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    InputComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        //console.log(this.item);
        if (this.item) {
            this.placeholder = this.item.placeHolder || '';
            // const type = Object.prototype.toString.call(this.item.placeHolder);
            // if(type == '[object Undefined]'){
            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){
            //         this.placeholder = this.item.control.placeholder;
            //     }
            // }
            // else{
            //     this.placeholder = this.item.placeHolder;
            // }
        }
        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {
            this.extend = this.item.control.isExtend;
            if (!this.extend) {
                this.showlabel = this.item.control.showLabel;
            }
        }
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // if(!this.extend){
        //     const El = this.element.nativeElement;
        //     const itemWidth = El.clientWidth;
        //     El.querySelector('.list-filter-input-item').style.width = itemWidth + 'px';
        //     El.querySelector('.input-item-btns').style.width = itemWidth + 100 + 'px';
        // }
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
    };
    // getConditionItemStyle(field: QueryCondition, controlType: any) {
    //     return this.solutionService.getConditionItemStyle(field,controlType);
    // }
    // getConditionItemStyle(field: QueryCondition, controlType: any) {
    //     return this.solutionService.getConditionItemStyle(field,controlType);
    // }
    /**
     * @param {?} field
     * @return {?}
     */
    InputComponent.prototype.getConditionItemTitle = 
    // getConditionItemStyle(field: QueryCondition, controlType: any) {
    //     return this.solutionService.getConditionItemStyle(field,controlType);
    // }
    /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    InputComponent.prototype.InputChanged = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        // let keycode = window.event ? e.keyCode : e.which;
        // if(keycode == 13){//回车键
        //     this.searchHandle.emit(this.item.value.value);
        // }
        if (this.disabled) {
            return;
        }
        this.searchHandle.emit(this.item.value.value);
    };
    InputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-filter-input',
                    template: "<label class=\"col-form-label\" *ngIf=\"item && showlabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n    <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.required\">*</span>\r\n    <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n</label>\r\n<div class=\"farris-input-wrap\" *ngIf=\"item\">\r\n    <input class=\"form-control\" \r\n    type=\"text\" \r\n    [disabled]=\"disabled\"\r\n    [(ngModel)]=\"item.value.value\" \r\n    [placeholder]=\"placeholder\"\r\n    (keyup.enter)=\"InputChanged($event)\"\r\n    (blur)=\"InputChanged($event)\"\r\n    >\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    InputComponent.ctorParameters = function () { return [
        { type: SolutionService },
        { type: ElementRef }
    ]; };
    InputComponent.propDecorators = {
        item: [{ type: Input }],
        autoLabel: [{ type: Input }],
        disabled: [{ type: Input }],
        searchHandle: [{ type: Output, args: ['searchHandle',] }],
        isExtend: [{ type: HostBinding, args: ['class.filter-item-wrap',] }],
        hidenLabel: [{ type: HostBinding, args: ['class.filter-item-hiddenlabel',] }]
    };
    return InputComponent;
}());
export { InputComponent };
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    InputComponent.prototype.item;
    /** @type {?} */
    InputComponent.prototype.autoLabel;
    /** @type {?} */
    InputComponent.prototype.disabled;
    /** @type {?} */
    InputComponent.prototype.searchHandle;
    /**
     * 判断是否是在扩展区域展示
     * @type {?}
     */
    InputComponent.prototype.extend;
    /**
     * 判断是否显示label
     * @type {?}
     */
    InputComponent.prototype.showlabel;
    /** @type {?} */
    InputComponent.prototype.placeholder;
    /**
     * @type {?}
     * @private
     */
    InputComponent.prototype.solutionService;
    /**
     * @type {?}
     * @private
     */
    InputComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9pbnB1dGNvbXBvbmVudC9pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixXQUFXLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBaUIsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWpJLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVqRTtJQThCSSx3QkFBb0IsZUFBK0IsRUFBa0IsT0FBbUI7UUFBcEUsb0JBQWUsR0FBZixlQUFlLENBQWdCO1FBQWtCLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFqQmhFLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQzs7OztRQUcxRCxXQUFNLEdBQVcsS0FBSyxDQUFDOzs7O1FBRXZCLGNBQVMsR0FBVyxJQUFJLENBQUM7SUFZaUUsQ0FBQztJQVQzRixzQkFDSSxvQ0FBUTs7OztRQURaO1lBRUksT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUMxQyxDQUFDOzs7T0FBQTtJQUNELHNCQUNJLHNDQUFVOzs7O1FBRGQ7WUFFSSxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUMzQixDQUFDOzs7T0FBQTs7OztJQUlELGlDQUFROzs7SUFBUjtRQUNJLHlCQUF5QjtRQUN6QixJQUFHLElBQUksQ0FBQyxJQUFJLEVBQUM7WUFDVCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLEVBQUUsQ0FBQztZQUMvQyxzRUFBc0U7WUFDdEUsb0NBQW9DO1lBQ3BDLGdGQUFnRjtZQUNoRiw0REFBNEQ7WUFDNUQsUUFBUTtZQUNSLElBQUk7WUFDSixRQUFRO1lBQ1IsZ0RBQWdEO1lBQ2hELElBQUk7U0FDUDtRQUNELElBQUcsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDL0UsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDekMsSUFBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUM7Z0JBQ1osSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7YUFDaEQ7U0FDSjtJQUNMLENBQUM7Ozs7SUFDRCx3Q0FBZTs7O0lBQWY7UUFDSSxvQkFBb0I7UUFDcEIsNkNBQTZDO1FBQzdDLHdDQUF3QztRQUN4QyxrRkFBa0Y7UUFDbEYsaUZBQWlGO1FBQ2pGLElBQUk7SUFDUixDQUFDOzs7O0lBQ0Qsb0NBQVc7OztJQUFYO0lBRUEsQ0FBQztJQUVELG1FQUFtRTtJQUNuRSw0RUFBNEU7SUFDNUUsSUFBSTs7Ozs7Ozs7SUFFSiw4Q0FBcUI7Ozs7Ozs7O0lBQXJCLFVBQXNCLEtBQW9CO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3RCxDQUFDOzs7OztJQUVELHFDQUFZOzs7O0lBQVosVUFBYSxDQUFDO1FBQ1Ysb0RBQW9EO1FBQ3BELDBCQUEwQjtRQUMxQixxREFBcUQ7UUFDckQsSUFBSTtRQUNKLElBQUcsSUFBSSxDQUFDLFFBQVEsRUFBQztZQUFDLE9BQU87U0FBQztRQUMxQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsRCxDQUFDOztnQkFoRkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLG9tQkFBcUM7aUJBQ3hDOzs7O2dCQUxRLGVBQWU7Z0JBRndFLFVBQVU7Ozt1QkFjckcsS0FBSzs0QkFDTCxLQUFLOzJCQUNMLEtBQUs7K0JBQ0wsTUFBTSxTQUFDLGNBQWM7MkJBUXJCLFdBQVcsU0FBQyx3QkFBd0I7NkJBSXBDLFdBQVcsU0FBQywrQkFBK0I7O0lBd0RoRCxxQkFBQztDQUFBLEFBakZELElBaUZDO1NBNUVZLGNBQWM7Ozs7OztJQUt2Qiw4QkFBa0I7O0lBQ2xCLG1DQUEyQjs7SUFDM0Isa0NBQTBCOztJQUMxQixzQ0FBMEQ7Ozs7O0lBRzFELGdDQUF1Qjs7Ozs7SUFFdkIsbUNBQXlCOztJQUN6QixxQ0FBb0I7Ozs7O0lBV1IseUNBQXVDOzs7OztJQUFDLGlDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBIb3N0QmluZGluZywgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJy4uLy4uL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IFNvbHV0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2Uvc29sdXRpb24uc2VydmljZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnYXBwLWZpbHRlci1pbnB1dCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsT25DaGFuZ2VzLEFmdGVyVmlld0luaXR7XHJcbiAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiBRdWVyeUNvbmRpdGlvbuexu+Wei1xyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBpdGVtOmFueTtcclxuICAgIEBJbnB1dCgpIGF1dG9MYWJlbDpib29sZWFuO1xyXG4gICAgQElucHV0KCkgZGlzYWJsZWQ6Ym9vbGVhbjtcclxuICAgIEBPdXRwdXQoJ3NlYXJjaEhhbmRsZScpIHNlYXJjaEhhbmRsZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICAvKirliKTmlq3mmK/lkKbmmK/lnKjmianlsZXljLrln5/lsZXnpLogKi9cclxuICAgIGV4dGVuZDpib29sZWFuID0gZmFsc2U7XHJcbiAgICAvKirliKTmlq3mmK/lkKbmmL7npLpsYWJlbCAqL1xyXG4gICAgc2hvd2xhYmVsOmJvb2xlYW4gPSB0cnVlO1xyXG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcclxuXHJcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZpbHRlci1pdGVtLXdyYXAnKVxyXG4gICAgZ2V0IGlzRXh0ZW5kKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAhdGhpcy5leHRlbmQgJiYgdGhpcy5hdXRvTGFiZWw7XHJcbiAgICB9XHJcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZpbHRlci1pdGVtLWhpZGRlbmxhYmVsJylcclxuICAgIGdldCBoaWRlbkxhYmVsKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAhdGhpcy5zaG93bGFiZWw7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgc29sdXRpb25TZXJ2aWNlOlNvbHV0aW9uU2VydmljZSxwcml2YXRlIHJlYWRvbmx5IGVsZW1lbnQ6IEVsZW1lbnRSZWYpe31cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMuaXRlbSk7XHJcbiAgICAgICAgaWYodGhpcy5pdGVtKXtcclxuICAgICAgICAgICAgdGhpcy5wbGFjZWhvbGRlciA9IHRoaXMuaXRlbS5wbGFjZUhvbGRlciB8fCAnJztcclxuICAgICAgICAgICAgLy8gY29uc3QgdHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0aGlzLml0ZW0ucGxhY2VIb2xkZXIpO1xyXG4gICAgICAgICAgICAvLyBpZih0eXBlID09ICdbb2JqZWN0IFVuZGVmaW5lZF0nKXtcclxuICAgICAgICAgICAgLy8gICAgIGlmKHRoaXMuaXRlbS5jb250cm9sICYmIHRoaXMuaXRlbS5jb250cm9sLmhhc093blByb3BlcnR5KCdwbGFjZWhvbGRlcicpKXtcclxuICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gdGhpcy5pdGVtLmNvbnRyb2wucGxhY2Vob2xkZXI7XHJcbiAgICAgICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgLy8gZWxzZXtcclxuICAgICAgICAgICAgLy8gICAgIHRoaXMucGxhY2Vob2xkZXIgPSB0aGlzLml0ZW0ucGxhY2VIb2xkZXI7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYodGhpcy5pdGVtICYmIHRoaXMuaXRlbS5jb250cm9sICYmIHRoaXMuaXRlbS5jb250cm9sLmhhc093blByb3BlcnR5KCdpc0V4dGVuZCcpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZXh0ZW5kID0gdGhpcy5pdGVtLmNvbnRyb2wuaXNFeHRlbmQ7XHJcbiAgICAgICAgICAgIGlmKCF0aGlzLmV4dGVuZCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dsYWJlbCA9IHRoaXMuaXRlbS5jb250cm9sLnNob3dMYWJlbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgICAgICAvLyBpZighdGhpcy5leHRlbmQpe1xyXG4gICAgICAgIC8vICAgICBjb25zdCBFbCA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xyXG4gICAgICAgIC8vICAgICBjb25zdCBpdGVtV2lkdGggPSBFbC5jbGllbnRXaWR0aDtcclxuICAgICAgICAvLyAgICAgRWwucXVlcnlTZWxlY3RvcignLmxpc3QtZmlsdGVyLWlucHV0LWl0ZW0nKS5zdHlsZS53aWR0aCA9IGl0ZW1XaWR0aCArICdweCc7XHJcbiAgICAgICAgLy8gICAgIEVsLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1pdGVtLWJ0bnMnKS5zdHlsZS53aWR0aCA9IGl0ZW1XaWR0aCArIDEwMCArICdweCc7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfVxyXG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0Q29uZGl0aW9uSXRlbVN0eWxlKGZpZWxkOiBRdWVyeUNvbmRpdGlvbiwgY29udHJvbFR5cGU6IGFueSkge1xyXG4gICAgLy8gICAgIHJldHVybiB0aGlzLnNvbHV0aW9uU2VydmljZS5nZXRDb25kaXRpb25JdGVtU3R5bGUoZmllbGQsY29udHJvbFR5cGUpO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIGdldENvbmRpdGlvbkl0ZW1UaXRsZShmaWVsZDpRdWVyeUNvbmRpdGlvbil7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldENvbmRpdGlvbkl0ZW1UaXRsZShmaWVsZCk7XHJcbiAgICB9XHJcblxyXG4gICAgSW5wdXRDaGFuZ2VkKGUpe1xyXG4gICAgICAgIC8vIGxldCBrZXljb2RlID0gd2luZG93LmV2ZW50ID8gZS5rZXlDb2RlIDogZS53aGljaDtcclxuICAgICAgICAvLyBpZihrZXljb2RlID09IDEzKXsvL+Wbnui9pumUrlxyXG4gICAgICAgIC8vICAgICB0aGlzLnNlYXJjaEhhbmRsZS5lbWl0KHRoaXMuaXRlbS52YWx1ZS52YWx1ZSk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIGlmKHRoaXMuZGlzYWJsZWQpe3JldHVybjt9XHJcbiAgICAgICAgdGhpcy5zZWFyY2hIYW5kbGUuZW1pdCh0aGlzLml0ZW0udmFsdWUudmFsdWUpO1xyXG4gICAgfVxyXG59Il19