/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { ControlType } from './entity/controltype';
var ControlTypeXPipe = /** @class */ (function () {
    function ControlTypeXPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    ControlTypeXPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var type;
        switch (value.control.getControlType()) {
            case ControlType.Text:
                type = 'input';
                break;
            case ControlType.Search:
                type = 'search';
                break;
            case ControlType.Date:
                type = 'date';
                break;
            case ControlType.Year:
                type = 'year';
                break;
            case ControlType.Month:
                type = 'month';
                break;
            case ControlType.MonthRange:
                type = 'monthrange';
                break;
            case ControlType.YearRange:
                type = 'yearrange';
                break;
            case ControlType.DateRange:
                type = 'daterange';
                break;
            case ControlType.DateRangeTime:
                type = 'daterangetime';
                break;
            case ControlType.DropDown:
                type = 'dropdown';
                break;
            case ControlType.NumberRange:
                type = 'number';
                break;
            case ControlType.Help:
                type = 'help';
                break;
            case ControlType.CheckboxGroup:
                type = 'checkboxgroup';
                break;
            case ControlType.Radio:
                type = 'radio';
                break;
            case ControlType.InputGroup:
                type = 'input-group';
                break;
            case ControlType.Number:
                type = 'singlenumber';
                break;
            case ControlType.FlexibleNumber:
                type = 'flexiblenumber';
                break;
            case ControlType.FlexibleDate:
                type = 'flexibledate';
                break;
            case ControlType.BoolCheck:
                type = 'bool-check';
                break;
            default:
                type = 'input';
                break;
        }
        return type;
    };
    ControlTypeXPipe.decorators = [
        { type: Pipe, args: [{ name: 'controlType' },] }
    ];
    return ControlTypeXPipe;
}());
export { ControlTypeXPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbFR5cGUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZmlsdGVyLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xUeXBlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVuRDtJQUFBO0lBb0VBLENBQUM7Ozs7O0lBbEVHLG9DQUFTOzs7O0lBQVQsVUFBVSxLQUFxQjs7WUFDdkIsSUFBSTtRQUNSLFFBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsRUFBQztZQUNsQyxLQUFLLFdBQVcsQ0FBQyxJQUFJO2dCQUNqQixJQUFJLEdBQUcsT0FBTyxDQUFDO2dCQUNmLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxNQUFNO2dCQUNuQixJQUFJLEdBQUcsUUFBUSxDQUFDO2dCQUNoQixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsSUFBSTtnQkFDakIsSUFBSSxHQUFHLE1BQU0sQ0FBQztnQkFDZCxNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsSUFBSTtnQkFDakIsSUFBSSxHQUFHLE1BQU0sQ0FBQztnQkFDZCxNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsS0FBSztnQkFDbEIsSUFBSSxHQUFHLE9BQU8sQ0FBQztnQkFDZixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsVUFBVTtnQkFDdkIsSUFBSSxHQUFHLFlBQVksQ0FBQztnQkFDcEIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFNBQVM7Z0JBQ3RCLElBQUksR0FBRyxXQUFXLENBQUM7Z0JBQ25CLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxTQUFTO2dCQUN0QixJQUFJLEdBQUcsV0FBVyxDQUFDO2dCQUNuQixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsYUFBYTtnQkFDMUIsSUFBSSxHQUFHLGVBQWUsQ0FBQztnQkFDdkIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFFBQVE7Z0JBQ3JCLElBQUksR0FBRyxVQUFVLENBQUM7Z0JBQ2xCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxXQUFXO2dCQUN4QixJQUFJLEdBQUcsUUFBUSxDQUFDO2dCQUNoQixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsSUFBSTtnQkFDakIsSUFBSSxHQUFHLE1BQU0sQ0FBQztnQkFDZCxNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsYUFBYTtnQkFDMUIsSUFBSSxHQUFHLGVBQWUsQ0FBQztnQkFDdkIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLEtBQUs7Z0JBQ2xCLElBQUksR0FBRyxPQUFPLENBQUM7Z0JBQ2YsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFVBQVU7Z0JBQ3ZCLElBQUksR0FBRyxhQUFhLENBQUM7Z0JBQ3JCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxNQUFNO2dCQUNuQixJQUFJLEdBQUcsY0FBYyxDQUFDO2dCQUN0QixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsY0FBYztnQkFDM0IsSUFBSSxHQUFHLGdCQUFnQixDQUFDO2dCQUN4QixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsWUFBWTtnQkFDekIsSUFBSSxHQUFHLGNBQWMsQ0FBQztnQkFDdEIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFNBQVM7Z0JBQ3RCLElBQUksR0FBRyxZQUFZLENBQUM7Z0JBQ3BCLE1BQU07WUFDVjtnQkFDSSxJQUFJLEdBQUcsT0FBTyxDQUFDO2dCQUNmLE1BQU07U0FDYjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7O2dCQW5FSixJQUFJLFNBQUMsRUFBQyxJQUFJLEVBQUUsYUFBYSxFQUFDOztJQW9FM0IsdUJBQUM7Q0FBQSxBQXBFRCxJQW9FQztTQW5FWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFF1ZXJ5Q29uZGl0aW9uIH0gZnJvbSAnLi9lbnRpdHkvcXVlcnljb25kaXRpb24nO1xyXG5pbXBvcnQgeyBDb250cm9sVHlwZSB9IGZyb20gJy4vZW50aXR5L2NvbnRyb2x0eXBlJztcclxuXHJcbkBQaXBlKHtuYW1lOiAnY29udHJvbFR5cGUnfSlcclxuZXhwb3J0IGNsYXNzIENvbnRyb2xUeXBlWFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIHRyYW5zZm9ybSh2YWx1ZTogUXVlcnlDb25kaXRpb24pOiBBcnJheTxhbnk+IHtcclxuICAgICAgICBsZXQgdHlwZTtcclxuICAgICAgICBzd2l0Y2godmFsdWUuY29udHJvbC5nZXRDb250cm9sVHlwZSgpKXtcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5UZXh0OlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdpbnB1dCc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5TZWFyY2g6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3NlYXJjaCc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5EYXRlOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdkYXRlJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLlllYXI6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3llYXInO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuTW9udGg6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ21vbnRoJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLk1vbnRoUmFuZ2U6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ21vbnRocmFuZ2UnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuWWVhclJhbmdlOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICd5ZWFycmFuZ2UnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuRGF0ZVJhbmdlOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdkYXRlcmFuZ2UnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuRGF0ZVJhbmdlVGltZTpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnZGF0ZXJhbmdldGltZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5Ecm9wRG93bjpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnZHJvcGRvd24nO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuTnVtYmVyUmFuZ2U6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ251bWJlcic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5IZWxwOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdoZWxwJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkNoZWNrYm94R3JvdXA6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2NoZWNrYm94Z3JvdXAnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7IFxyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLlJhZGlvOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdyYWRpbyc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5JbnB1dEdyb3VwOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdpbnB1dC1ncm91cCc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5OdW1iZXI6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3NpbmdsZW51bWJlcic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5GbGV4aWJsZU51bWJlcjpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnZmxleGlibGVudW1iZXInO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuRmxleGlibGVEYXRlOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdmbGV4aWJsZWRhdGUnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuQm9vbENoZWNrOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdib29sLWNoZWNrJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdpbnB1dCc7XHJcbiAgICAgICAgICAgICAgICBicmVhazsgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHlwZTtcclxuICAgIH1cclxufVxyXG4iXX0=