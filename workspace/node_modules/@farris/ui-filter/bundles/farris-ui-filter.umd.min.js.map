{"version":3,"sources":["ng://@farris/ui-filter/lib/entity/controltype.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/checkboxgroupvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/helpvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/textvalue.ts","ng://@farris/ui-filter/lib/entity/fieldconfig/fieldconfig.ts","ng://@farris/ui-filter/lib/entity/controltype/text/textcontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/searchvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/datevalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/daterangevalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/daterangetimevalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/enumtype.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/integerenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/stringenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/boolenumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/ienumvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/dropdownlistvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/numberrangevaue.ts","ng://@farris/ui-filter/lib/entity/controltype/date/datecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/numberrange/numberrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/search/searchcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/dropdownlist/dropdowncontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/help/helpcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/datarange/daterangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/datarangetime/daterangetimecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/checkboxcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/radiocontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/radiovalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/yearvalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/month.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/yearrange.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/monthrange.ts","ng://@farris/ui-filter/lib/entity/controltype/year/yearcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/month/monthcontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/yearrange/yearrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/monthrange/monthrangecontrol.ts","ng://@farris/ui-filter/lib/entity/controltype/input-group/inputgroupcontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/inputgroup.ts","ng://@farris/ui-filter/lib/entity/controltype/number/numbercontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/numbervalue.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/flexiblenumbervalue.ts","ng://@farris/ui-filter/lib/entity/controltype/flexiblenumbercontrol.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/flexibledatevalue.ts","ng://@farris/ui-filter/lib/entity/controltype/flexibledatecontrol.ts","ng://@farris/ui-filter/lib/filter.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-filter/lib/entity/querycondition.ts","ng://@farris/ui-filter/lib/entity/comparetype.ts","ng://@farris/ui-filter/lib/entity/valuetype.ts","ng://@farris/ui-filter/lib/entity/relationtype.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/ienumvalue.ts","ng://@farris/ui-filter/lib/service/convertorservice.ts","ng://@farris/ui-filter/lib/interface/filterHandler.ts","ng://@farris/ui-filter/lib/utils.ts","ng://@farris/ui-filter/lib/filter.component.ts","ng://@farris/ui-filter/lib/service/solution.service.ts","ng://@farris/ui-filter/lib/components/inputcomponent/input.component.ts","ng://@farris/ui-filter/lib/components/numbercomponent/number.component.ts","ng://@farris/ui-filter/lib/components/dropdowncomponent/dropdown.component.ts","ng://@farris/ui-filter/lib/components/searchcomponent/search.component.ts","ng://@farris/ui-filter/lib/entity/controltype/checkbox/checkboxvalue.ts","ng://@farris/ui-filter/lib/components/checkboxcomponent/checkbox.component.ts","ng://@farris/ui-filter/lib/components/daterangecomponent/daterange.component.ts","ng://@farris/ui-filter/lib/components/helpcomponent.ts/help.component.ts","ng://@farris/ui-filter/lib/components/datecomponent/date.component.ts","ng://@farris/ui-filter/lib/controlType.pipe.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/radiovalue.ts","ng://@farris/ui-filter/lib/components/radiocomponent/radio.component.ts","ng://@farris/ui-filter/lib/components/inputgroupcomponent/inputgroup.component.ts","ng://@farris/ui-filter/lib/components/singlenumbercomponent/number.component.ts","ng://@farris/ui-filter/lib/components/flexiblecomponent/flexiblenumber.component.ts","ng://@farris/ui-filter/lib/components/flexibledatecomponent/flexibledate.component.ts","ng://@farris/ui-filter/lib/filter.module.ts","ng://@farris/ui-filter/lib/entity/conditionvalue/ivalue.ts","ng://@farris/ui-filter/lib/entity/controltype/radio/ienumvalue.ts","ng://@farris/ui-filter/lib/entity/controltype/help/displayType.ts","ng://@farris/ui-filter/lib/entity/controltype/icontrol.ts","ng://@farris/ui-filter/lib/entity/list-filter.model.ts"],"names":["Text","Help","DropDown","DateRange","NumberRange","Search","Date","CheckboxGroup","DateRangeTime","Radio","Year","Month","MonthRange","YearRange","InputGroup","Number","FlexibleNumber","FlexibleDate","BoolCheck","CheckboxGroupValue","prototype","clearValue","this","value","clear$","emit","setOriginalValue","getOriginalValue","getControlType","ControlType","isEmpty","length","getValueText","join","EventEmitter","HelpValue","getPropValue","helpItem","args","arg","shift","valueField","undefined","textValue","Error","args_1","split","valueArr","map","cloneDeep","getTextValue","textField","textArr","data","hasOwnProperty","TextValue","FieldConfig","TextControl","SearchValue","DateValue","formatted","ctrl","format","DateTimeHelperService","formatTo","DateRangeValue","startTime","delimiter","endTime","dateHlp","DateRangeTimeValue","fmt","controltype","indexOf","IntType","StringType","BoolType","EnumIntegerValue","getEnumType","EnumType","getEnumValueName","name","getEnumValue","EnumStringValue","EnumBoolValue","EnumValueConvert","convertJObject","obj","enumValue","enumType","jobj","Object","initFromJobject","content","assign","DropDownListValue","DropDownListValueConvert","convertToObject","dropDownListValue","initFromObject","NumberRangeValue","startValue","endValue","begin","end","parseFloat","NumberRangeValueConvertor","numberRangeValue","DateControl","NumberRangeControl","SearchControl","DropDownControl","DropDownListControlConvert","dropDownListControl","valueType","enumValues","jarray_1","convertor_1","forEach","element","push","control","Array","convertor","HelpContol","DateRangeControl","DateRangeTimeControl","CheckboxGroupControl","boolcheck","enableSearch","RadioControl","RadioGroupValue","YearValue","MonthValue","YearRangeValue","MonthRangeValue","YearControl","MonthControl","YearRangeControl","MonthRangeControl","InputGroupControl","isRequired","required","DialogConfig","DialogButtonConfig","InputGroupValue","_this","item","isInputText","targetField","trim","NumberControl","NumberValue","FlexibleNumberValue","single","FlexibleNumberControl","FlexibleDateValue","FlexibleDateControl","FilterService","fieldSchemasConvert","filedSchemas","fieldConfigs","filedSchema","fieldConfig","id","labelCode","code","placeHolder","beginPlaceHolder","endPlaceHolder","fieldName","filled","getTextControl","getSearchControl","getDateControl","getYearControl","getMonthControl","getYearRangeControl","getMonthRangeControl","getDateRangeControl","getDateRangeTimeControl","getDropDownControl","getNumberRangeControl","getLookUpEditControl","getCheckboxGroupControl","getRadioControl","getInputGroupControl","getNumberControl","getFlexibleNumberControl","getFlexibleDateControl","enableClear","valueText","textControl","placeholder","isExtend","showLabel","inputGroupControl","editable","groupText","usageMode","dialogOptions","setInputGroupDialog","modalConfig","click","dateControl","compareType","yearControl","monthControl","yearRangeControl","monthRangeControl","numberRangeControl","precision","bigNumber","numberControl","flexiblenumberControl","flexibledateControl","showType","showTime","searchControl","dropdowncontrol","lookupEdit","uri","idField","helpId","mapFields","context","preEventCmd","postEventCmd","enableFullTree","loadTreeDataType","singleSelect","expandLevel","enableCascade","displayType","checkboxGroupcontrol","dateRangeControl","modalConfigData","dialogConfig","modalId","JSON","parse","replace","showHeader","title","width","height","setInputGroupDialogButtons","buttonData","button","text","appearance","class","cls","handle","setValues","Injectable","providedIn","__assign","t","s","i","n","arguments","p","call","apply","QueryCondition","Equal","GreaterThan","GreaterThanOrEqual","LessThan","LessThanOrEqual","BetWeen","Value","SmartHelp","Enum","Express","And","Or","CheckboxEnumValue","ConvertorService","getFeildConfigs","selectedConditions","fieldsConfigs","condition","fieldCode","getSelectedFieldConditions","fileds","selectedFieldConditions","tempSelectedFieldConditions","arrayClone","filed","getDropListEnumValues","tempIndex","findIndex","x","getNewFieldConditions","enumValues_1","enumValues_2","enumValues_3","getCheckGroupEnumValues","selectedFieldCondition","ValueType","relationType","RelationType","getTextValueFieldCondition","getDateRangeValueFieldCondition","getDateRangeTimeValueFieldCondition","getDateValueFieldCondition","getNumberRangeValueFieldCondition","getSmartHelpValueFieldCondition","getDropDownValueFieldCondition","getSearchValueFieldCondition","getCheckboxGroupValueFieldCondition","getRadioValueFieldCondition","getInputGroupValueFieldCondition","getNumberValueFieldCondition","getFlexibleNumberValueFieldCondition","getFlexibleDateValueFieldCondition","CompareType","input","result","FILTER_HANDLER_TOKEN","InjectionToken","deepCopy","newobj","constructor","type","toString","defineProperty","FilterComponent","_filterList","filterList","initFilterList","_enableAutoWidth","filterEllipsis","filterExtendShow","_defaultValue","configs","_this_1","defaultEmptyValueSearch","setTimeout","setFilterValue","ngOnInit","filterWrapperEl","filterListWrapper","nativeElement","bindRoEvent","foldText","localeService","getValue","expandText","filterExtendText","currentLocale","localeIds","isControlInline","fromEvent","window","pipe","auditTime","subscribe","floatPanelHeight","innerHeight","floatFilterIconBottom","ngOnDestroy","ro","unobserve","floatPanel","overLayService","destory","filterWrapper","ngzone","runOutsideAngular","ResizeObserver","entries","observer","tempWidth","contentRect","Math","abs","containerWidthRecord","distanceThreshold","enableAutoWidth","listEllipsisInit","observe","ngOnChanges","changes","ngAfterViewInit","listFilterConditions","filterDatas","filterService","convertorService","stagListFilterConditions","o","filterListClassify","showReminder","showFilterList","showReminderItem","filterlistItems","children","showRemItem","getAttribute","reminderLeft","offsetLeft","cd","detectChanges","extendFilterList","extendFilterListStore","filledFilterList","filledExtendFilterList","loopFilterList","extendRequiredList","showRequiredList","requiredList","filter","listitem","requiredListFilter","canSubmit","canSubmitFilter","field","filledFilter","list","showrequiredList","showCanSubmit","advancedCanSubmit","filterClick","event","index","stopPropagation","disabled","instanceID","localStorageKey","currentFilterId","panelItem","_a","currentTarget","getBoundingClientRect","left","top_1","top","right","filterPanelContainer","filterPanelService","showPanel","hidePanel","e","clearFilter","_this_2","submit","panelListIndex","conditionChangeHandler","inSetCurrentFilterConditions","findItem","find","markForCheck","filterClear","resetListCondition","advancedFilter","extendFilterListTemporary","farrissidebar","openSideBar","listCancel","closeSideBar","floatPanelOpen","advancedPanelClose","floatFilterOpen","$evnet","render","removeClass","parentElement","bottom","registerMouseEvent","contains","target","nodeName","className","k","closest","filterListW","filterMainWidth","filterMain","offsetWidth","filterToolWidth","filterTool","filterExtend","filterItems","filterItemWidth","len","setStyle","filterResize","filterExpand","filterExtendIcon","expandFilter","packupFilter","onSearch","$event","searchChange","conditions","instance","requirelist","formCanSubmit","tv","keys","shv","ddv","drv","mrv","yrv","nrv","sv","dv","mv","yv","cbgv","radiov","flexv","flexdatev","listSearch","farrisSearchRecord","farrisSearchRecordArray","storagelabelCode","filterPanelArray","localStorage","getItem","isArray","unshift","slice","setItem","stringify","extendAmendedList","showExpandTag","extendListIndex","isOpen","filterlist","filterItem","queryList","handler","setFilterConditions","query","listFilter","resetFilterValue","resetCondition","qc","controlType","v","c","filterHandler","setCurrentFilterConditions","listFilterCondition","resetSearch","resetChange","resetAdvancedSearch","value_1","texts","val","value_2","enums","value_3","buildSmartHelpKey","idService","pathArr","prefix","location","hash","pathname","encrypt","searchEmit","conditionsChange","Component","selector","template","encapsulation","ViewEncapsulation","None","providers","FilterPanelService","QuerySolutionService","ChangeDetectorRef","Renderer2","NgZone","LocaleService","Injector","decorators","Optional","Input","HostBinding","Output","ViewChild","injector","floatFilter","clearSelectedText","cla","sidebarOpen","en","zh-CHS","get","LOCALE_ID","InjectFlags","IdService","OverLayHiddenService","SolutionService","getGuid","s4","random","substring","getConditionItemTitle","InputComponent","extend","autoLabel","showlabel","solutionService","InputChanged","searchHandle","ElementRef","NumberComponent","_item","nr","min","max","constructMultiFieldNumberRange","beginValue","numberChange","dataArray","beginValueChange","endValueChange","canNull","DropDownComponent","getDataSource","initialValue","selectedItemId","dropDownList","dropDownListDataSource","onClear","SearchComponent","groupIcon","CheckboxValue","filterCheckboxComponent","checkValue","boolchecked","boolCheckState","checkboxList","checkboxDataSource","checkboxValue","handleClick","indeterminate","selectCheck","DateRangeComponent","initDate","itemDateFormat","dateFormat","rangeDateValue","rangeDate","getDate","dateString","onDateChange","returnFormatted","HelpComponent","getHelpBindingInfo","selectedDataHandler","selectedItem","helpValue","helpList_1","hostRef","selectItem","clearData","of","DateComponent","date","ControlTypeXPipe","transform","Pipe","RadioValue","filterRadioComponent","radioValue","radioboxList","radioDataSource","SimpleInputGroupComponent","constructTextItem","textItem","textValueObj","testId","getInputGroupBindingInfo","onClick","options","selectedItems","isTextFromDialog","textFormDialog","onBlur","SingleNumberComponent","FlexibleNumberComponent","setValueText","FlexibleDateComponent","constructMultiFieldDateRange","startValueText","endValueText","SimpleFilterModule","NgModule","declarations","imports","CommonModule","FormsModule","FilterPanelModule","FarrisSidebarModule","FarrisTooltipModule","InputGroupModule","FarrisDatePickerModule","DatalistModule","ComboListModule","LookupModule","FarrisFormsModule","NumberSpinnerModule","PerfectScrollbarModule","FilterConditionModule","LocaleModule","forRoot","FarrisCommonModule","exports","ConditionValueConvert","conditionValue","RadioEnumValue","LIST","TREELIST","ControlConvert","listFilterItem","setWidth","parseInt","getWidth","_id","_groupName","listFilterGroup","responsedIndex","listItems"],"mappings":"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","sourcesContent":["export enum ControlType{\r\n    Text=0,\r\n    Help=1,\r\n    DropDown=2,\r\n    DateRange=3,\r\n    NumberRange=4,\r\n    Search=5,\r\n    Date=6,\r\n    CheckboxGroup=7,\r\n    DateRangeTime=8,\r\n    Radio=9,\r\n    Year=10,\r\n    Month=11,\r\n    MonthRange=12,\r\n    YearRange=13,\r\n    InputGroup=14,\r\n    Number=15,\r\n    FlexibleNumber=16,\r\n    FlexibleDate=17,\r\n    BoolCheck=18\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class CheckboxGroupValue implements IValue {\r\n    value: any[];\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: any[] } = { value: [] }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any[]): void {\r\n        this.value = value;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.value.length == 0;\r\n    }\r\n    getValueText(): string {\r\n        return this.value.join(',');\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class HelpValue implements IValue {\r\n    valueField: string;\r\n    value: any[];\r\n    textValue: string;\r\n    clear$ = new EventEmitter();\r\n\r\n\r\n\r\n    constructor(data: {\r\n        value: any,\r\n        valueField: string,\r\n        textValue: string;\r\n    } = { value: [], valueField: undefined, textValue: undefined }) {\r\n        if (data.hasOwnProperty('textValue')) {// æ°ç»æï¼valueæ¯æ°ç»\r\n            this.valueField = data.valueField;\r\n            this.value = data.value;\r\n            this.textValue = data.textValue;\r\n        } else {// æ§ç»æï¼valueæ¯å¯¹è±¡\r\n            this.valueField = data.valueField;\r\n            this.value = data.value ? [data.value] : [];\r\n            this.textValue = 'help-text-value-null'; // æ§ç»ææ textValueå±æ§\r\n        }\r\n\r\n    }\r\n\r\n    static getPropValue(helpItem: any, args: Array<string>): any {\r\n        if (args.length > 1) {\r\n            const arg = args.shift();\r\n            return helpItem[arg] ? this.getPropValue(helpItem[arg], args) : null;\r\n        }\r\n        return helpItem[args[0]];\r\n    }\r\n\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.valueField = undefined;\r\n        this.textValue = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue(): string {\r\n        if (this.valueField) {\r\n            const args = this.valueField.split('.');\r\n            const valueArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n            return valueArr && valueArr.length ? valueArr.join(',') : '';\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n\r\n\r\n    isEmpty(): boolean {\r\n        return !this.valueField;\r\n    }\r\n\r\n\r\n\r\n    getTextValue(textField: string): string {\r\n        const args = textField.split('.');\r\n        const textArr = this.value.map(helpItem => HelpValue.getPropValue(helpItem, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(',') : '';\r\n    }\r\n    getValueText(): string {\r\n        return this.textValue;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class TextValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}","import { IControl } from \"../controltype/icontrol\";\r\nimport { IValue } from '../conditionvalue/ivalue';\r\n\r\n/**\r\n * å­æ®µéç½®\r\n */\r\nexport class FieldConfig{\r\n\r\n    /**\r\n     * å­æ®µID\r\n     */\r\n    id?:string;\r\n    \r\n    /**\r\n     * å­æ®µæ ç­¾ï¼å­æ®µç¼å·çå¯ä¸æ è¯\r\n     */\r\n    labelCode:string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    code?:string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    name?:string;\r\n\r\n    /**\r\n     * å­æ®µæè¿°\r\n     */\r\n    //description:string;\r\n\r\n    /**\r\n     * å¼\r\n     * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextValue\r\n     * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n     * 3. æ¥æåºé´ï¼DateRangeValue\r\n     * 4. æ°å­åºé´ï¼NumberRangeValue\r\n     * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n    */\r\n   //value:IValue;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ1\r\n     */\r\n    //extend1:string;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ2\r\n     */\r\n    //extend2:string;\r\n\r\n    /**\r\n     * æ©å±å­æ®µ3\r\n     */\r\n    //extend3:string;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control?:IControl;\r\n\r\n    /** è¡¨åæ°æ® */\r\n    value?:any;\r\n\r\n    /**æ¯å¦æ¯æ©å±åºåçè¡¨å */\r\n    // isExtend:boolean;\r\n\r\n    /**æ¯å¦å æ»¡å¨å±å©ä½ */\r\n    // expand:boolean;\r\n    //é»è®¤æ¾ç¤º\r\n    placeHolder?:string;\r\n    //æ¯å¦æå¼\r\n    filled:boolean;\r\n    //éæ©åçå¼\r\n    valueText:string;\r\n    beginPlaceHolder?:string;\r\n    endPlaceHolder?:string;\r\n\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * ææ¬æ§ä»¶\r\n */\r\nexport class TextControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼ææ¬æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Text;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class SearchValue implements IValue{\r\n    value:string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = {value: ''}){\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n    \r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText():string{\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nexport class DateValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n        return this.value;\r\n    }\r\n}","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from \"@farris/ui-common/date\";\r\nexport class DateRangeValue implements IValue {\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n\r\n    getValueText(ctrl?: any): string {\r\n        // å¯è½å­å¨this.startTimeæ¯undefinedçæåµ\r\n        if (this.startTime&&this.startTime.length&&this.endTime&&this.endTime.length) {\r\n           if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { IValue } from \"./ivalue\";\r\nimport { ControlType } from \"../controltype\";\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from \"@farris/ui-common/date\";\r\nexport class DateRangeTimeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        // å¯è½å­å¨this.startTimeæ¯undefinedçæåµ\r\n        if (this.startTime&&this.startTime.length&&this.endTime&&this.endTime.length) {\r\n            if (ctrl && ctrl.format) {\r\n                let fmt = ctrl.format;\r\n                if (ctrl.controltype === 'datetime') {\r\n                    if (ctrl.format.indexOf('HH:mm') === -1) {\r\n                        fmt = ctrl.format + ' HH:mm:ss';\r\n                    } \r\n                }\r\n\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, fmt) +'~'+ dateHlp.formatTo(this.endTime, fmt);\r\n            }\r\n            return (this.startTime + '~' + this.endTime); \r\n        }\r\n        else {\r\n            return '';           \r\n        }\r\n    }\r\n}\r\n","export enum EnumType{\r\n    IntType=0,\r\n    StringType=1,\r\n    BoolType=2\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Integerç±»å\r\n */\r\nexport class EnumIntegerValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return EnumType.IntType;\r\n    }\r\n    \r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:number;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Stringç±»å\r\n */\r\nexport class EnumStringValue implements IEnumValue{\r\n    getEnumType(): EnumType {\r\n        return  EnumType.StringType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { IEnumValue } from \"./ienumvalue\";\r\nimport { EnumType } from \"./enumtype\";\r\n\r\n/**\r\n * ä¸æåè¡¨Boolç±»å\r\n */\r\nexport class EnumBoolValue implements IEnumValue{\r\n    \r\n    getEnumType(): EnumType {\r\n        return  EnumType.BoolType;\r\n    }\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:boolean;\r\n}","import { EnumType } from \"./enumtype\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface IEnumValue{\r\n    getEnumType():EnumType;\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n}\r\n\r\nexport class EnumValueConvert{\r\n\r\n    convertJObject(obj:IEnumValue):Object{\r\n        let enumValue=obj as IEnumValue;\r\n        let enumType=enumValue.getEnumType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=enumType;\r\n        jobj[\"Content\"]=enumValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IEnumValue{\r\n        let enumType=jobj[\"Type\"] as EnumType;\r\n        let content=jobj[\"Content\"] as IEnumValue;\r\n        if(enumType==EnumType.IntType){\r\n            return Object.assign(new EnumIntegerValue(),content) ;\r\n        }\r\n        else if(enumType==EnumType.BoolType){\r\n            return Object.assign(new EnumBoolValue(),content) ;\r\n        }\r\n        else{\r\n            return Object.assign(new EnumStringValue(),content) ;\r\n        }\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { IEnumValue, EnumValueConvert } from '../controltype/dropdownlist/ienumvalue';\r\n\r\nexport class DropDownListValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: string = '') {\r\n        this.value = data;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nexport class DropDownListValueConvert {\r\n    convertToObject(obj: IValue): Object {\r\n        let dropDownListValue = obj as DropDownListValue;\r\n        let jobj = new Object();\r\n        let convertor = new EnumValueConvert();\r\n        if (!!(dropDownListValue.value)) {\r\n            // jobj[\"value\"]=convertor.convertJObject(dropDownListValue.value);\r\n            jobj[\"value\"] = dropDownListValue.value;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): DropDownListValue {\r\n        let dropDownListValue = new DropDownListValue();\r\n        if (!!(jobj[\"value\"])) {\r\n            let convertor = new EnumValueConvert();\r\n            // dropDownListValue.value=convertor.initFromJobject(jobj[\"value\"]);\r\n            dropDownListValue.value = jobj[\"value\"];\r\n        }\r\n        return dropDownListValue;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class NumberRangeValue implements IValue {\r\n    startValue: number;\r\n    endValue: number;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: { startValue: string, endValue: string } = { startValue: '', endValue: '' }) {\r\n        this.startValue = data.startValue ? parseFloat(data.startValue) : null;\r\n        this.endValue = data.endValue ? parseFloat(data.endValue) : null;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue\r\n        };\r\n    }\r\n\r\n    getValueText(): string {\r\n        if (this.startValue == undefined && this.endValue == undefined) {\r\n            return '';\r\n        }\r\n        else if (this.startValue == undefined) {\r\n            return ('~' + this.endValue);\r\n        }\r\n        else if (this.endValue == undefined) {\r\n            return (this.startValue + '~');\r\n        }\r\n        else {\r\n            return (this.startValue + '~' + this.endValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberRangeValueConvertor {\r\n    convertToObject(obj: IValue): Object {\r\n        let dropDownListValue = obj as NumberRangeValue;\r\n        let jobj = new Object();\r\n        jobj[\"startValue\"] = dropDownListValue.startValue;\r\n        jobj[\"endValue\"] = dropDownListValue.endValue;\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj: Object): NumberRangeValue {\r\n        let numberRangeValue = new NumberRangeValue();\r\n        if (!!(jobj[\"startValue\"])) {\r\n            numberRangeValue.startValue = jobj[\"startValue\"] as number;\r\n        }\r\n        if (!!(jobj[\"endValue\"])) {\r\n            numberRangeValue.endValue = jobj[\"endValue\"] as number;\r\n        }\r\n        return numberRangeValue;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * æ¥ææ§ä»¶\r\n */\r\nexport class DateControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.NumberRange;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æç´¢æ§ä»¶\r\n */\r\nexport class SearchControl implements IControl{\r\n    \r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æç´¢æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Search;\r\n    }\r\n\r\n    /**\r\n     * æç´¢æ¡é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { EnumType } from \"./enumtype\";\r\nimport { IEnumValue, EnumValueConvert } from \"./ienumvalue\";\r\nimport { EnumStringValue } from \"./stringenumvalue\";\r\nimport { EnumBoolValue } from \"./boolenumvalue\";\r\nimport { EnumIntegerValue } from \"./integerenumvalue\";\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶\r\n */\r\nexport class DropDownControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DropDown;\r\n    }\r\n\r\n    /**\r\n     * ä¸æå¼ç±»å\r\n     */\r\n    valueType:EnumType;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * ä¸ææ°æ®æºåè¡¨\r\n     * è¯¥å±æ§ä¸ºIEnumValueæ¥å£ç±»åï¼å·ä½å®ç°ç±»å¦ä¸ï¼\r\n     * 1.å¸å°ç±»åï¼EnumBoolValue,å¸å°ç±»åçæ§ä»¶ä¼è½¬æä¸æåè¡¨ï¼å®ç°ç±»ä½¿ç¨EnumBoolValue\r\n     * 2.å­ç¬¦ä¸²ç±»åï¼EnumStringValue\r\n     * 3.æ´åç±»åï¼EnumIntegerValue ä¾å¦Radio Buttonç±»åéè¦ä½¿ç¨EnumIntegerValueå®ç°ç±»\r\n     */\r\n    enumValues:Array<IEnumValue>;\r\n\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}\r\n\r\n/**\r\n * ä¸æåè¡¨æ§ä»¶åºååä¸ååºååå¨\r\n */\r\nexport class DropDownListControlConvert{\r\n\r\n    /**\r\n     * åºåå\r\n     * @param obj ä¸æåè¡¨æ§ä»¶å®ä½\r\n     */\r\n    convertToObject(obj:DropDownControl){\r\n        let dropDownListControl= obj as DropDownControl;\r\n        let jobj=new Object();\r\n        jobj[\"valueType\"]=dropDownListControl.valueType;\r\n        if(dropDownListControl.enumValues!=null){\r\n            let jarray=jobj[\"enumValues\"]=[];\r\n            let convertor=new EnumValueConvert();\r\n            dropDownListControl.enumValues.forEach(element => {\r\n                if(dropDownListControl.valueType==EnumType.BoolType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumBoolValue(),element)));\r\n                }\r\n                else if(dropDownListControl.valueType==EnumType.IntType){\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumIntegerValue(),element)));\r\n                }\r\n                else{\r\n                    jarray.push(convertor.convertJObject(Object.assign(new EnumStringValue(),element)));\r\n                }\r\n            });\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    /**\r\n     * ååºåå\r\n     * @param jobj ä¸æåè¡¨æ§ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n     */\r\n    initFromObject(jobj:Object):DropDownControl{\r\n        let control=new DropDownControl();\r\n        if(jobj[\"valueType\"]!=null){\r\n            control.valueType=jobj[\"valueType\"] as number;\r\n        }\r\n        if(jobj[\"enumValues\"]!=null){\r\n            control.enumValues=new Array<IEnumValue>();\r\n            jobj[\"enumValues\"].forEach(element => {\r\n                let convertor=new EnumValueConvert();\r\n                control.enumValues.push(convertor.initFromJobject(element));\r\n            });\r\n        }\r\n        return control;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { DisplayType } from './displayType';\r\n\r\n/**\r\n * å¸®å©æ§ä»¶\r\n */\r\nexport class HelpContol implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Help;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * å¸®å©æ°æ®æº\r\n     */\r\n    uri:string;\r\n\r\n    /**\r\n     * å¸®å©çææ¬æ¾ç¤ºå­æ®µ\r\n     */\r\n    textField:string;\r\n\r\n    /**\r\n     * å¸®å©å¼å­æ®µ\r\n     */\r\n    valueField:string;\r\n\r\n    idField:string;\r\n    helpId:string;\r\n    displayType:DisplayType;\r\n    /**\r\n     * å­æ®µæ å°ä¿¡æ¯\r\n     */\r\n    mapFields:any;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n\r\n    /**\r\n     * å¸®å©åäºä»¶\r\n    */\r\n   preEventCmd: any;\r\n\r\n   /**\r\n   * å¸®å©åäºä»¶\r\n   */\r\n   postEventCmd: any;\r\n\r\n   /**\r\n     * è¿è¡æ¶åæ°éç½®ä¼ é\r\n    */\r\n   context: any;\r\n    /** å¯ç¨æé å®æ´æ è¿æ»¤ */\r\n   enableFullTree: boolean;\r\n   /** æ å½¢å¸®å©æ°æ®å è½½æ¹å¼ï¼ default: åç½®åæ°ï¼ loadall: å è½½ææ layerloadï¼åå±å è½½ */\r\n   loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    /**æ¯å¦æ¯æå¤é */\r\n   singleSelect: boolean;\r\n   /**å±å¼å°æå®çº§æ° */\r\n   expandLevel: number;\r\n   /** æ¯å¦å¯ç¨çº§èéæ©æ§å¶éé¡¹ */\r\n   enableCascade: boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´æ§ä»¶\r\n */\r\nexport class DateRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ¥æåºé´å¸¦æ¶é´æ§ä»¶\r\n */\r\nexport class DateRangeTimeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRangeTime;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CheckboxIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class CheckboxGroupControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.CheckboxGroup;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<CheckboxIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    boolcheck:boolean = false;\r\n    enableSearch:boolean=false;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { RadioIEnumValue } from './ienumvalue';\r\n\r\n/**\r\n * å¤éç»æ§ä»¶\r\n */\r\nexport class RadioControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    /**\r\n     * å¤éç»æ°æ®æºåè¡¨\r\n     */\r\n    enumValues:Array<RadioIEnumValue>;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class RadioGroupValue implements IValue {\r\n\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Radio;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    getValueText(): string {\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\nexport class YearValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n\r\n        return this.value;\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class MonthValue implements IValue {\r\n    value: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: string } = { value: '' }) {\r\n        this.value = value.value;\r\n    }\r\n\r\n    setOriginalValue(value: any): void {\r\n        this.value = value.formatted;\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Date;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        if (ctrl && ctrl.format) {\r\n            return new DateTimeHelperService().formatTo(this.value, ctrl.format);\r\n        }\r\n        return this.value;\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class YearRangeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?:any): string {\r\n        // å¯è½å­å¨this.startTimeæ¯undefinedçæåµ\r\n        if (this.startTime&&this.startTime.length&&this.endTime&&this.endTime.length) {\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class MonthRangeValue implements IValue {\r\n\r\n    startTime: string;\r\n    endTime: string;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { startTime: string, endTime: string } = { startTime: '', endTime: '' }) {\r\n        this.startTime = value.startTime;\r\n        this.endTime = value.endTime;\r\n    }\r\n\r\n    setOriginalValue(value: { formatted: string, delimiter: string }): void {\r\n        if (value.formatted) {\r\n            this.startTime = value.formatted.split(value.delimiter)[0];\r\n            this.endTime = value.formatted.split(value.delimiter)[1];\r\n        } else {\r\n            this.clearValue();\r\n        }\r\n    }\r\n    getOriginalValue() {\r\n        return `${this.startTime}~${this.endTime}`;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.DateRange;\r\n    }\r\n    clearValue(): void {\r\n        this.startTime = undefined;\r\n        this.endTime = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.startTime || !this.endTime;\r\n    }\r\n    getValueText(ctrl?: any): string {\r\n        // å¯è½å­å¨this.startTimeæ¯undefinedçæåµ\r\n        if (this.startTime&&this.startTime.length&&this.endTime&&this.endTime.length) {\r\n            if (ctrl && ctrl.format) {\r\n                const dateHlp = new DateTimeHelperService();\r\n                return dateHlp.formatTo(this.startTime, ctrl.format) +'~'+ dateHlp.formatTo(this.endTime, ctrl.format);\r\n            }\r\n\r\n            return (this.startTime + '~' + this.endTime);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ä»½æ§ä»¶\r\n */\r\nexport class YearControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Year;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\nimport { CompareType } from '../../comparetype';\r\n\r\n/**\r\n * å¹´ææ§ä»¶\r\n */\r\nexport class MonthControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Month;\r\n    }\r\n\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    //format:string;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æç´¢æ¥æç±»å\r\n     */\r\n    compareType:CompareType;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´åº¦åºé´æ§ä»¶\r\n */\r\nexport class YearRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.YearRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * å¹´æåºé´æ§ä»¶\r\n */\r\nexport class MonthRangeControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.MonthRange;\r\n    }\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    \r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    showType:string;\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æºè½è¾å¥æ¡æ§ä»¶\r\n */\r\nexport class InputGroupControl implements IControl {\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»åï¼è¿åå¼ï¼æºè½è¾å¥æ¡æ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n    isRequired(): boolean {\r\n        return !!this.required;\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦åè®¸è¾å¥\r\n     */\r\n    editable: boolean;\r\n\r\n    /**\r\n     * æé®æ¾ç¤ºææ¬\r\n     */\r\n    groupText: string;\r\n\r\n    /**\r\n     * ä½¿ç¨æ¨¡å¼ï¼ææ¬ãå¼¹åºè¡¨åï¼\r\n     */\r\n    usageMode: string;\r\n\r\n    /**\r\n     * å¼¹åºè¡¨åç¸å³éç½®\r\n     */\r\n    dialogOptions: DialogConfig;\r\n\r\n    /**\r\n     * æé®ç¹å»äºä»¶\r\n     */\r\n    click: any;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n}\r\n\r\nexport class DialogConfig {\r\n    modalId: string;\r\n    mapFields: any;\r\n    title: string;\r\n    width: number;\r\n    height: number;\r\n    // showButtons: boolean;\r\n    // buttons: DialogButtonConfig[];\r\n}\r\n\r\nexport class DialogButtonConfig {\r\n    text: string;\r\n    cls: any;\r\n    handle: any;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\nexport class InputGroupValue implements IValue{\r\n    //å¯è½æ¯ç¨æ·æå¨è¾å¥çå­ç¬¦ä¸²ï¼ä¹å¯è½æ¯éè¿å¼¹çªè¿åçå¤ä¸ªå¼\r\n    value: any[];\r\n    //æ§ä»¶åæ¾ç¤ºçå¼\r\n    textValue: string;\r\n    //å¼¹çªæ¨¡å¼ä¸ï¼åå¼¹çªåè¡¨ååªä¸ªå­æ®µçå¼æ å°å°å½åå­æ®µ\r\n    textField: string;\r\n    //æ¯å¦æ¯æå¨è¾å¥çå¼\r\n    isInputText: boolean;\r\n    clear$ = new EventEmitter();\r\n    constructor(data: {\r\n        value: any,\r\n        textValue: string,\r\n        textField: string,\r\n        isInputText: boolean\r\n    } = {value: [], textValue: undefined, textField: undefined, isInputText: undefined}){\r\n        this.value = data.value;\r\n        this.textValue = data.textValue ? data.textValue.trim() : '';\r\n        this.textField = data.textField;\r\n        this.isInputText = data.isInputText;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.InputGroup;\r\n    }\r\n\r\n    setOriginalValue(value: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getOriginalValue(): string {\r\n        if(this.textField){\r\n            const args = this.textField.split('.');\r\n            const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n            return textArr && textArr.length ? textArr.join(','): '';\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    clearValue(): void {\r\n        this.value = [];\r\n        this.textValue = undefined;\r\n        this.textField = undefined;\r\n        this.isInputText = undefined;\r\n        this.clear$.emit();\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return !this.textValue;\r\n    }\r\n\r\n\r\n    getTextValue(targetField: string): string {\r\n        const args = targetField.split('.');\r\n        const textArr = this.value.map(item => this.getPropValue(item, cloneDeep(args)));\r\n        return textArr && textArr.length ? textArr.join(','): '';\r\n    }\r\n\r\n    getPropValue(item: any, args: Array<string>): any{\r\n        if(args.length > 1){\r\n            const arg = args.shift();\r\n            if(arg){\r\n                return item[arg] ? this.getPropValue(item[arg], args) : '';\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n        return item[args[0]];\r\n    }\r\n\r\n    getValueText():string{\r\n        return this.textValue;\r\n    }\r\n}","import { IControl } from \"../icontrol\";\r\nimport { ControlType } from \"../../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class NumberControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.Number;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class NumberValue implements IValue {\r\n    value: number;\r\n    clear$ = new EventEmitter();\r\n    constructor(value: { value: number } = { value: null }) {\r\n        this.value = value.value;\r\n    }\r\n    getControlType(): ControlType {\r\n        return ControlType.Number;\r\n    }\r\n    clearValue(): void {\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return this.value;\r\n    }\r\n    isEmpty(): boolean {\r\n        return !this.value;\r\n    }\r\n\r\n    getValueText(): any {\r\n        if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined' && this.value != 0)) {\r\n            return this.value;\r\n        } else {\r\n            return '' + this.value;\r\n        }\r\n    }\r\n}\r\n","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nexport class FlexibleNumberValue implements IValue {\r\n    startValue: number;\r\n    endValue: number;\r\n    value: number;\r\n    single: boolean;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(value: { startValue: number, endValue: number, value: number } = { startValue: null, endValue: null, value: null }, single: boolean = true) {\r\n        this.startValue = value.startValue;\r\n        this.endValue = value.endValue;\r\n        this.value = value.value;\r\n        this.single = single;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleNumber;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        if (this.single) {\r\n            return !this.value;\r\n        }\r\n        else return (this.startValue == null && this.endValue == null);\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue,\r\n            value: this.value\r\n        };\r\n    }\r\n\r\n\r\n    getValueText(): any {\r\n        if (this.single) {\r\n            if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined' && this.value != 0)) {\r\n                return this.value;\r\n            }\r\n            else {\r\n                return '' + this.value;\r\n            }\r\n        }\r\n        else {\r\n            if (this.startValue == undefined && this.endValue == undefined) {\r\n                return '';\r\n            }\r\n            else if (this.startValue == undefined) {\r\n                return ('~' + this.endValue);\r\n            }\r\n            else if (this.endValue == undefined) {\r\n                return (this.startValue + '~');\r\n            }\r\n            else {\r\n                return (this.startValue + '~' + this.endValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"./icontrol\";\r\nimport { ControlType } from \"./../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class FlexibleNumberControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleNumber;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * ç²¾åº¦\r\n     */\r\n    precision:number;\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯å¤§æ° */\r\n    bigNumber:boolean;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single:boolean;\r\n}","import { IValue } from './ivalue';\r\nimport { ControlType } from '../controltype';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { DateTimeHelperService } from '@farris/ui-common/date';\r\n\r\nexport class FlexibleDateValue implements IValue {\r\n    startValue: string;\r\n    endValue: string;\r\n    value: string;\r\n    single: boolean;\r\n    clear$ = new EventEmitter();\r\n\r\n    constructor(value: { startValue: string, endValue: string, value: string } = { startValue: null, endValue: null, value: null }, single: boolean = true) {\r\n        this.startValue = value.startValue;\r\n        this.endValue = value.endValue;\r\n        this.value = value.value;\r\n        this.single = single;\r\n    }\r\n\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleDate;\r\n    }\r\n    isEmpty(): boolean {\r\n        if (this.single) {\r\n            return !this.value;\r\n        } else {\r\n            return (this.startValue == null && this.endValue == null);\r\n        }\r\n    }\r\n    clearValue(): void {\r\n        this.startValue = undefined;\r\n        this.endValue = undefined;\r\n        this.value = undefined;\r\n        this.clear$.emit();\r\n    }\r\n    setOriginalValue(value: any): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getOriginalValue() {\r\n        return {\r\n            begin: this.startValue,\r\n            end: this.endValue,\r\n            value: this.value\r\n        };\r\n    }\r\n\r\n\r\n    getValueText(ctrl?: any): any {\r\n\r\n        if (this.single) {\r\n            if (this.value == undefined || (!this.value && typeof (this.value) != 'undefined')) {\r\n                return this.value;\r\n            }\r\n            else {\r\n                if (ctrl && ctrl.format) {\r\n                    const dateHlp = new DateTimeHelperService();\r\n                    return dateHlp.formatTo(this.value, ctrl.format);\r\n                }\r\n                return this.value;\r\n            }\r\n        }\r\n        else {\r\n            if (this.startValue == undefined && this.endValue == undefined) {\r\n                return '';\r\n            } else {\r\n                if (ctrl && ctrl.format) {\r\n                    const dateHlp = new DateTimeHelperService();\r\n                    if (this.startValue == undefined) {\r\n                        return ('~' +  dateHlp.formatTo(this.endValue, ctrl.format));\r\n                    }\r\n                    else if (this.endValue == undefined) {\r\n                        return (dateHlp.formatTo(this.startValue, ctrl.format) + '~');\r\n                    }\r\n                    else {\r\n                        return dateHlp.formatTo(this.startValue, ctrl.format) +'~'+ dateHlp.formatTo(this.endValue, ctrl.format);\r\n                    }\r\n                } else {\r\n                    if (this.startValue == undefined) {\r\n                        return ('~' + this.endValue);\r\n                    }\r\n                    else if (this.endValue == undefined) {\r\n                        return (this.startValue + '~');\r\n                    }\r\n                    else {\r\n                        return (this.startValue + '~' + this.endValue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { IControl } from \"./icontrol\";\r\nimport { ControlType } from \"../controltype\";\r\n\r\n/**\r\n * æ°å­åºé´æ§ä»¶\r\n */\r\nexport class FlexibleDateControl implements IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType(): ControlType {\r\n        return ControlType.FlexibleDate;\r\n    }\r\n\r\n    /**\r\n     * é¿åº¦\r\n     */\r\n    length:number;\r\n\r\n    /**\r\n     * é»è®¤æ¾ç¤º\r\n     */\r\n    placeholder:string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n\r\n    /**æ¯å¦æ¾ç¤ºlabel */\r\n    showLabel:boolean;\r\n\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single:boolean;\r\n    showType:string;\r\n    /**\r\n     * æ¥ææ ¼å¼\r\n     */\r\n    format:string;\r\n    showTime:boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';\r\nimport { HelpValue } from './entity/conditionvalue/helpvalue';\r\nimport { TextValue } from './entity/conditionvalue/textvalue';\r\nimport { FieldConfig } from './entity/fieldconfig/fieldconfig';\r\nimport { TextControl } from './entity/controltype/text/textcontrol';\r\nimport { SearchValue } from './entity/conditionvalue/searchvalue';\r\nimport { DateValue } from './entity/conditionvalue/datevalue';\r\nimport { DateRangeValue } from './entity/conditionvalue/daterangevalue';\r\nimport { DateRangeTimeValue } from './entity/conditionvalue/daterangetimevalue';\r\nimport { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';\r\nimport { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';\r\nimport { IControl } from './entity/controltype/icontrol';\r\nimport { DateControl } from './entity/controltype/date/datecontrol';\r\nimport { NumberRangeControl } from './entity/controltype/numberrange/numberrangecontrol';\r\nimport { SearchControl } from './entity/controltype/search/searchcontrol';\r\nimport { DropDownControl } from './entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { EnumType } from './entity/controltype/dropdownlist/enumtype';\r\nimport { EnumBoolValue } from './entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumStringValue } from './entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumIntegerValue } from './entity/controltype/dropdownlist/integerenumvalue';\r\nimport { HelpContol } from './entity/controltype/help/helpcontrol';\r\nimport { CheckboxValue } from './entity/controltype/checkbox/checkboxvalue';\r\nimport { DateRangeControl } from './entity/controltype/datarange/daterangecontrol';\r\nimport { DateRangeTimeControl } from './entity/controltype/datarangetime/daterangetimecontrol';\r\nimport { CheckboxGroupControl } from './entity/controltype/checkbox/checkboxcontrol';\r\nimport { RadioControl } from './entity/controltype/radio/radiocontrol';\r\nimport { RadioGroupValue } from './entity/conditionvalue/radiovalue';\r\nimport { RadioIEnumValue } from './entity/controltype/radio/ienumvalue';\r\nimport { YearValue } from './entity/conditionvalue/yearvalue';\r\nimport { MonthValue } from './entity/conditionvalue/month';\r\nimport { YearRangeValue } from './entity/conditionvalue/yearrange';\r\nimport { MonthRangeValue } from './entity/conditionvalue/monthrange';\r\nimport { YearControl } from './entity/controltype/year/yearcontrol';\r\nimport { MonthControl } from './entity/controltype/month/monthcontrol';\r\nimport { YearRangeControl } from './entity/controltype/yearrange/yearrangecontrol';\r\nimport { MonthRangeControl } from './entity/controltype/monthrange/monthrangecontrol';\r\nimport { DialogButtonConfig, DialogConfig, InputGroupControl } from './entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from './entity/conditionvalue/inputgroup';\r\nimport { NumberControl } from './entity/controltype/number/numbercontrol';\r\nimport { NumberValue } from './entity/conditionvalue/numbervalue';\r\nimport { FlexibleNumberValue } from './entity/conditionvalue/flexiblenumbervalue';\r\nimport { FlexibleNumberControl } from './entity/controltype/flexiblenumbercontrol';\r\nimport { FlexibleDateValue } from './entity/conditionvalue/flexibledatevalue';\r\nimport { FlexibleDateControl } from './entity/controltype/flexibledatecontrol';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class FilterService {\r\n\r\n\tconstructor() { }\r\n\tfieldSchemasConvert(filedSchemas: Array<any>): Array<FieldConfig> {\r\n\t\tconst fieldConfigs = new Array<FieldConfig>();\r\n\t\tif (!(filedSchemas) || filedSchemas.length <= 0) {\r\n\t\t\treturn fieldConfigs;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfiledSchemas.forEach(filedSchema => {\r\n\t\t\t\tconst fieldConfig = new FieldConfig();\r\n\t\t\t\tfieldConfig.id = filedSchema.hasOwnProperty('id') ? filedSchema.id : '';\r\n\t\t\t\tfieldConfig.labelCode = filedSchema.labelCode;\r\n\t\t\t\tfieldConfig.code = filedSchema.hasOwnProperty('code') ? filedSchema.code : '';\r\n\t\t\t\tfieldConfig.placeHolder = filedSchema.placeHolder;\r\n\t\t\t\tfieldConfig.beginPlaceHolder = filedSchema.beginPlaceHolder;\r\n\t\t\t\tfieldConfig.endPlaceHolder = filedSchema.endPlaceHolder;\r\n\t\t\t\tfieldConfig.name = filedSchema.name || filedSchema.fieldName;\r\n\t\t\t\tif (filedSchema.value) {\r\n\t\t\t\t\tfieldConfig.filled = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfieldConfig.filled = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!(filedSchema.control) || !(filedSchema.control.controltype)) {\r\n\t\t\t\t\tfieldConfig.control = new TextControl();\r\n\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (filedSchema.control.controltype == 'text') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getTextControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'search') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getSearchControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new SearchValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'singleDate') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'year') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getYearControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new YearValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'month') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getMonthControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new MonthValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'yearRange') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getYearRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new YearRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'monthRange') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getMonthRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new MonthRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'date') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'datetime') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDateRangeTimeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DateRangeTimeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'dropdown') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getDropDownControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new DropDownListValue(filedSchema.value);\r\n\t\t\t\t\t\t// fieldConfig.control = this.getRadioControl(filedSchema);\r\n\t\t\t\t\t\t// fieldConfig.value = new RadioGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'number') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getNumberRangeControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new NumberRangeValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'help') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getLookUpEditControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new HelpValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'checkboxgroup') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getCheckboxGroupControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new CheckboxGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'radio') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getRadioControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new RadioGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'input-group') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getInputGroupControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new InputGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'singlenumber') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getNumberControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new NumberValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'flexibleNumber') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getFlexibleNumberControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new FlexibleNumberValue(filedSchema.value, fieldConfig.control['single']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'flexibleDate') {\r\n\t\t\t\t\t\tfieldConfig.control = this.getFlexibleDateControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new FlexibleDateValue(filedSchema.value, fieldConfig.control['single']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (filedSchema.control.controltype == 'bool-check') {\r\n\t\t\t\t\t\tfiledSchema.control.enumValues = [{ value: \"true\", name: filedSchema.name }];\r\n\t\t\t\t\t\tfieldConfig.control = this.getCheckboxGroupControl(filedSchema, true);\r\n\t\t\t\t\t\tfieldConfig.value = new CheckboxGroupValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfieldConfig.control = this.getTextControl(filedSchema);\r\n\t\t\t\t\t\tfieldConfig.value = new TextValue(filedSchema.value);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (filedSchema.control.enableClear == undefined) {\r\n\t\t\t\t\t\tfieldConfig.control.enableClear = true;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfieldConfig.control.enableClear=filedSchema.control.enableClear;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfieldConfig.valueText = fieldConfig.value.getValueText();\r\n\t\t\t\t// if(filedSchema.control.controltype == 'dropdown'){\r\n\t\t\t\t//   fieldConfig.control.controltype = 'radio'\r\n\t\t\t\t// }\r\n\t\t\t\t// else{\r\n\t\t\t\tfieldConfig.control.controltype = filedSchema.control.controltype;\r\n\t\t\t\t//  }\r\n\t\t\t\tfieldConfigs.push(fieldConfig);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn fieldConfigs;\r\n\t}\r\n\r\n\tprivate getTextControl(filedSchema: any): IControl {\r\n\t\tlet textControl = new TextControl();\r\n\t\ttextControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\ttextControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\ttextControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\ttextControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn textControl;\r\n\t}\r\n\tprivate getInputGroupControl(filedSchema: any): IControl {\r\n\t\tlet inputGroupControl = new InputGroupControl();\r\n\t\tinputGroupControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tinputGroupControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tinputGroupControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tinputGroupControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tinputGroupControl.editable = filedSchema.control.hasOwnProperty('editable') ? filedSchema.control.editable : true;\r\n\t\tinputGroupControl.groupText = filedSchema.control.hasOwnProperty('groupText') ? filedSchema.control.groupText : '<span class=\"f-icon f-icon-lookup\"></span>';\r\n\t\tinputGroupControl.usageMode = filedSchema.control.usageMode;\r\n\t\tinputGroupControl.dialogOptions = this.setInputGroupDialog(filedSchema.control.usageMode, filedSchema.control.modalConfig, filedSchema.id);\r\n\t\tinputGroupControl.click = filedSchema.control.click;\r\n\t\treturn inputGroupControl;\r\n\t}\r\n\tprivate getDateControl(filedSchema: any): IControl {\r\n\t\tlet dateControl = new DateControl();\r\n\t\tdateControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateControl.format = filedSchema.control.format;\r\n\t\tdateControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// dateControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn dateControl;\r\n\t}\r\n\tprivate getYearControl(filedSchema: any): IControl {\r\n\t\tlet yearControl = new YearControl();\r\n\t\tyearControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tyearControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tyearControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tyearControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tyearControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tyearControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn yearControl;\r\n\t}\r\n\tprivate getMonthControl(filedSchema: any): IControl {\r\n\t\tlet monthControl = new MonthControl();\r\n\t\tmonthControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tmonthControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tmonthControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tmonthControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tmonthControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tmonthControl.compareType = filedSchema.control.hasOwnProperty('compareType') ? filedSchema.control.compareType : 0;\r\n\t\t// yearControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn monthControl;\r\n\t}\r\n\tprivate getYearRangeControl(filedSchema: any): IControl {\r\n\t\tlet yearRangeControl = new YearRangeControl();\r\n\t\tyearRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tyearRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tyearRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tyearRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tyearRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tyearRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tyearRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\treturn yearRangeControl;\r\n\t}\r\n\tprivate getMonthRangeControl(filedSchema: any): IControl {\r\n\t\tlet monthRangeControl = new MonthRangeControl();\r\n\t\tmonthRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tmonthRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tmonthRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tmonthRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tmonthRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tmonthRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tmonthRangeControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\treturn monthRangeControl;\r\n\t}\r\n\tprivate getNumberRangeControl(filedSchema: any): IControl {\r\n\t\tlet numberRangeControl = new NumberRangeControl();\r\n\t\tnumberRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tnumberRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tnumberRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tnumberRangeControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tnumberRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tnumberRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tnumberRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tnumberRangeControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\treturn numberRangeControl;\r\n\t}\r\n\r\n\tprivate getNumberControl(filedSchema: any): IControl {\r\n\t\tlet numberControl = new NumberControl();\r\n\t\tnumberControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tnumberControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tnumberControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tnumberControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tnumberControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tnumberControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\treturn numberControl;\r\n\t}\r\n\r\n\tprivate getFlexibleNumberControl(filedSchema: any): IControl {\r\n\t\tlet flexiblenumberControl = new FlexibleNumberControl();\r\n\t\tflexiblenumberControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tflexiblenumberControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tflexiblenumberControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tflexiblenumberControl.precision = filedSchema.control.hasOwnProperty('precision') ? filedSchema.control.precision : 2;\r\n\t\tflexiblenumberControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tflexiblenumberControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tflexiblenumberControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tflexiblenumberControl.bigNumber = filedSchema.control.hasOwnProperty('bigNumber') ? filedSchema.control.bigNumber : false;\r\n\t\tflexiblenumberControl.single = filedSchema.control.hasOwnProperty('single') ? filedSchema.control.single : true;\r\n\t\treturn flexiblenumberControl;\r\n\t}\r\n\tprivate getFlexibleDateControl(filedSchema: any): IControl {\r\n\t\tlet flexibledateControl = new FlexibleDateControl();\r\n\t\tflexibledateControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tflexibledateControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tflexibledateControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tflexibledateControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tflexibledateControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tflexibledateControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tflexibledateControl.single = filedSchema.control.hasOwnProperty('single') ? filedSchema.control.single : true;\r\n\t\tflexibledateControl.format = filedSchema.control.hasOwnProperty('format') ? filedSchema.control.format : '';\r\n\t\tflexibledateControl.showType = filedSchema.control.showType;\r\n\t\tflexibledateControl.showTime = filedSchema.control.showTime;\r\n\t\treturn flexibledateControl;\r\n\t}\r\n\r\n\tprivate getSearchControl(filedSchema: any): IControl {\r\n\t\tlet searchControl = new SearchControl();\r\n\t\tsearchControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tsearchControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tsearchControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tsearchControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn searchControl;\r\n\t}\r\n\tprivate getDropDownControl(filedSchema: any): IControl {\r\n\t\tlet dropdowncontrol = new DropDownControl();\r\n\t\tdropdowncontrol.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tfiledSchema.control.valueType = filedSchema.control.valueType ? filedSchema.control.valueType : '1';\r\n\t\tdropdowncontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdropdowncontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdropdowncontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tif (filedSchema.control.valueType == \"1\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.StringType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumStringValue>;\r\n\t\t}\r\n\t\telse if (filedSchema.control.valueType == \"2\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.BoolType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumBoolValue>;\r\n\t\t}\r\n\t\telse if (filedSchema.control.valueType == \"0\") {\r\n\t\t\tdropdowncontrol.valueType = EnumType.IntType;\r\n\t\t\tdropdowncontrol.enumValues = filedSchema.control.enumValues as Array<EnumIntegerValue>;\r\n\t\t}\r\n\t\treturn dropdowncontrol;\r\n\t}\r\n\r\n\tprivate getLookUpEditControl(filedSchema: any): IControl {\r\n\t\tlet lookupEdit = new HelpContol();\r\n\t\tif (!!(filedSchema.control.uri)) {\r\n\t\t\tlookupEdit.uri = filedSchema.control.uri;\r\n\t\t}\r\n\t\tlookupEdit.textField = filedSchema.control.textField;\r\n\t\tlookupEdit.valueField = filedSchema.control.valueField;\r\n\t\tlookupEdit.idField = filedSchema.control.idField;\r\n\t\tlookupEdit.helpId = filedSchema.control.helpId;\r\n\t\tlookupEdit.mapFields = filedSchema.control.mapFields;\r\n\t\tlookupEdit.context = filedSchema.control.context;\r\n\t\tlookupEdit.preEventCmd = filedSchema.control.preEventCmd;\r\n\t\tlookupEdit.postEventCmd = filedSchema.control.postEventCmd;\r\n\t\tlookupEdit.enableFullTree = filedSchema.control.enableFullTree;\r\n\t\tlookupEdit.loadTreeDataType = filedSchema.control.loadTreeDataType;\r\n\t\t//æ°å¢\r\n\t\tlookupEdit.singleSelect = filedSchema.control.hasOwnProperty('singleSelect') ? filedSchema.control.singleSelect : true;\r\n\t\tlookupEdit.expandLevel = filedSchema.control.expandLevel;\r\n\t\tlookupEdit.enableCascade = filedSchema.control.enableCascade;\r\n\t\tlookupEdit.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tlookupEdit.displayType = filedSchema.control.hasOwnProperty('displayType') ? filedSchema.control.displayType : \"LIST\";\r\n\t\tlookupEdit.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tlookupEdit.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tlookupEdit.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\treturn lookupEdit;\r\n\t}\r\n\tprivate getCheckboxGroupControl(filedSchema: any, boolcheck: boolean = false): IControl {\r\n\t\tlet checkboxGroupcontrol = new CheckboxGroupControl();\r\n\t\tcheckboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<CheckboxValue>;\r\n\t\tcheckboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tcheckboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tcheckboxGroupcontrol.enableSearch = filedSchema.control.hasOwnProperty('enableSearch') ? filedSchema.control.enableSearch : false;\r\n\t\tcheckboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tif (boolcheck) checkboxGroupcontrol.boolcheck = true;\r\n\t\treturn checkboxGroupcontrol;\r\n\t}\r\n\tprivate getDateRangeControl(filedSchema: any): IControl {\r\n\t\tlet dateRangeControl = new DateRangeControl();\r\n\t\tdateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tdateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tdateRangeControl.format = filedSchema.control.format;\r\n\t\t// dateRangeControl.showType = filedSchema.control.hasOwnProperty('showType')? filedSchema.control.showType : '';\r\n\t\treturn dateRangeControl;\r\n\t}\r\n\tprivate getDateRangeTimeControl(filedSchema: any): IControl {\r\n\t\tlet dateRangeControl = new DateRangeTimeControl();\r\n\t\tdateRangeControl.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tdateRangeControl.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tdateRangeControl.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\tdateRangeControl.placeholder = filedSchema.control.placeholder ? filedSchema.control.placeholder : '';\r\n\t\tdateRangeControl.beginPlaceHolder = filedSchema.control.beginPlaceHolder ? filedSchema.control.beginPlaceHolder : '';\r\n\t\tdateRangeControl.endPlaceHolder = filedSchema.control.endPlaceHolder ? filedSchema.control.endPlaceHolder : '';\r\n\t\tdateRangeControl.format = filedSchema.control.format;\r\n\t\treturn dateRangeControl;\r\n\t}\r\n\r\n\tprivate getRadioControl(filedSchema: any): IControl {\r\n\t\tlet checkboxGroupcontrol = new RadioControl();\r\n\t\tcheckboxGroupcontrol.enumValues = filedSchema.control.enumValues as Array<RadioIEnumValue>;\r\n\t\tcheckboxGroupcontrol.isExtend = filedSchema.control.hasOwnProperty('isExtend') ? filedSchema.control.isExtend : false;\r\n\t\tcheckboxGroupcontrol.showLabel = filedSchema.control.hasOwnProperty('showLabel') ? filedSchema.control.showLabel : true;\r\n\t\tcheckboxGroupcontrol.required = filedSchema.control.hasOwnProperty('required') ? filedSchema.control.required : false;\r\n\t\treturn checkboxGroupcontrol;\r\n\t}\r\n\r\n\t/**\r\n   * æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°è¡¨åéç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   * @param usageMode æºè½è¾å¥æ¡æ§ä»¶ä½¿ç¨æ¨¡å¼\r\n   * @param modalConfigData è¡¨åéç½®JSONæè¿°\r\n   * @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªåæ°\r\n   */\r\n\tprivate setInputGroupDialog(usageMode: string, modalConfigData: any, id: string): DialogConfig {\r\n\t\tif (usageMode == 'text' || usageMode == undefined || modalConfigData == undefined || id == undefined) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\tlet dialogConfig = new DialogConfig();\r\n\t\t//dialogConfig.modalId = modalConfigData.modalId;\r\n\t\tdialogConfig.modalId = id;\r\n\t\tif (modalConfigData.mapFields) {\r\n\t\t\tdialogConfig.mapFields = JSON.parse(modalConfigData.mapFields.replace(/\\'/g, '\"'));\r\n\t\t}\r\n\t\tif (modalConfigData.showHeader) {\r\n\t\t\tdialogConfig.title = modalConfigData.title;\r\n\t\t}\r\n\t\tdialogConfig.width = modalConfigData.width;\r\n\t\tdialogConfig.height = modalConfigData.height;\r\n\t\t// dialogConfig.showButtons = modalConfigData.showFooterButtons;\r\n\t\t// dialogConfig.buttons = this.setInputGroupDialogButtons(modalConfigData.footerButtons);\r\n\t\treturn dialogConfig;\r\n\t}\r\n\r\n\t/**\r\n\t* æºè½è¾å¥æ¡æ§ä»¶éè¦å¼¹åºè¡¨åæ¶ï¼å°å¼¹çªæé®ç»éç½®JSONæè¿°è½¬æ¢ä¸ºå¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n\t* @param buttonData å¼¹çªæé®ç»éç½®JSONæè¿°\r\n\t* @returns å¼¹åºè¡¨åå½ä»¤å¯æ¥æ¶çå¼¹çªæé®ç»åæ°\r\n\t*/\r\n\tprivate setInputGroupDialogButtons(buttonData: any): Array<DialogButtonConfig> {\r\n\t\tif (!buttonData) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet button: DialogButtonConfig;\r\n\t\treturn buttonData.map(item => {\r\n\t\t\tbutton = new DialogButtonConfig();\r\n\t\t\tbutton.text = item.text;\r\n\t\t\tif (item.appearance && item.appearance.class) {\r\n\t\t\t\tbutton.cls = item.appearance.class;\r\n\t\t\t}\r\n\t\t\tbutton.handle = item.click;\r\n\t\t\treturn button;\r\n\t\t});\r\n\t}\r\n\r\n\t//æ ¹æ®ç±»åï¼new valueå¼\r\n\tsetValues(controltype, value, single: boolean = true) {\r\n\t\tif (controltype == 'input') {\r\n\t\t\treturn new TextValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'search') {\r\n\t\t\treturn new SearchValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'date') {\r\n\t\t\treturn new DateValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'year') {\r\n\t\t\treturn new YearValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'month') {\r\n\t\t\treturn new MonthValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'daterange') {\r\n\t\t\treturn new DateRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'daterangetime') {\r\n\t\t\treturn new DateRangeTimeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'yearrange') {\r\n\t\t\treturn new YearRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'monthrange') {\r\n\t\t\treturn new MonthRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'dropdown' || controltype == 'radio') {\r\n\t\t\treturn new RadioGroupValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'number') {\r\n\t\t\treturn new NumberRangeValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'help') {\r\n\t\t\treturn new HelpValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'checkboxgroup') {\r\n\t\t\treturn new CheckboxGroupValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'input-group') {\r\n\t\t\treturn new InputGroupValue(value);\r\n\t\t}\r\n\t\telse if (controltype == 'singlenumber') {\r\n\t\t\treturn new NumberValue({ 'value': value });\r\n\t\t}\r\n\t\telse if (controltype == 'flexiblenumber') {\r\n\t\t\treturn new FlexibleNumberValue(value, single);\r\n\t\t}\r\n\t\telse if (controltype == 'flexibledate') {\r\n\t\t\treturn new FlexibleDateValue(value, single);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new TextValue({ 'value': value });\r\n\t\t}\r\n\t}\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { CompareType } from \"./comparetype\";\r\nimport { ValueType } from \"./valuetype\";\r\nimport { RelationType } from \"./relationtype\";\r\nimport { IControl, ControlConvert } from \"./controltype/icontrol\";\r\nimport { IValue, ConditionValueConvert } from \"./conditionvalue/ivalue\";\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶å®ä½ç±»\r\n */\r\nexport class QueryCondition {\r\n\r\n    /**\r\n     * å¯ä¸æ§æ è¯\r\n     */\r\n    id: string;\r\n\r\n    /**\r\n     * å·¦æ¬å·\r\n     */\r\n    leftBrackets: string;\r\n\r\n    /**\r\n     * å­æ®µç¼å·\r\n     */\r\n    fieldCode: string;\r\n    labelCode?: string;\r\n\r\n    /**\r\n     * å­æ®µåç§°\r\n     */\r\n    fieldName: string;\r\n    name: string;\r\n\r\n    /**\r\n     * æ¯è¾ç¬¦\r\n     */\r\n    compareType: CompareType;\r\n\r\n    /**\r\n     * å¼ç±»å\r\n     */\r\n    valueType: ValueType;\r\n\r\n    /**\r\n     * å¼\r\n     * è¯¥å±æ§ä¸ºIValueæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åæä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextValue\r\n     * 2. ä¸æåè¡¨ï¼DropDownListValue\r\n     * 3. æ¥æåºé´ï¼DateRangeValue\r\n     * 4. æ°å­åºé´ï¼NumberRangeValue\r\n     * 5. å¸®å©ç±»åï¼SmartHelpValue\r\n     */\r\n    value: IValue;\r\n\r\n    /**\r\n     * å³æ¬å·\r\n     */\r\n    rightBrackets: string;\r\n\r\n    /**\r\n     * å³ç³»ç¬¦\r\n     */\r\n    relationType: RelationType;\r\n\r\n    /**\r\n     * æ§ä»¶ç±»åï¼ç®ååæ¬ææ¬ç±»åï¼ä¸æåè¡¨ï¼æ¥æåºé´ï¼æ°å­åºé´ï¼å¸®å©ç±»å\r\n     * æ§ä»¶ç±»åä¸ºIControlæ¥å£ï¼æ ¹æ®ä¸åçæ§ä»¶ç±»åå¯¹åºä¸åçå®ç°ç±»ï¼å·ä½å¦ä¸ï¼\r\n     * 1. ææ¬ç±»åï¼TextControl\r\n     * 2. ä¸æåè¡¨ï¼DropDownListControl\r\n     * 3. æ¥æåºé´ï¼DateRangeControl\r\n     * 4. æ°å­åºé´ï¼NumberRangeControl\r\n     * 5. å¸®å©ç±»åï¼SmartHelpContol\r\n     */\r\n    control: IControl;\r\n    //é»è®¤æ¾ç¤º\r\n    placeHolder: string;\r\n    //æ¯å¦æå¼\r\n    filled: boolean;\r\n    //éæ©åçå¼\r\n    valueText: string;\r\n    beginPlaceHolder?: string;\r\n    endPlaceHolder?: string;\r\n}\r\n\r\n/**\r\n * æ¥è¯¢æ¡ä»¶åºååä¸ååºååå¨\r\n */\r\n// export class QueryConditionConvert{\r\n\r\n//     /**\r\n//      * åºåå\r\n//      * @param obj æ¥è¯¢æ¡ä»¶å®ä½\r\n//      */\r\n//     convertJObject(obj:QueryCondition):Object{\r\n//         let queryCondition=obj as QueryCondition;\r\n//         let jobj=new Object();\r\n//         jobj[\"id\"]=queryCondition.id;\r\n//         jobj[\"leftBrackets\"]=queryCondition.leftBrackets;\r\n//         jobj[\"fieldCode\"]=queryCondition.fieldCode;\r\n//         jobj[\"fieldName\"]=queryCondition.fieldName;\r\n//         jobj[\"compareType\"]=queryCondition.compareType;\r\n//         jobj[\"valueType\"]=queryCondition.valueType;\r\n//         let valueConvert=new ConditionValueConvert();\r\n//         if(queryCondition.value){\r\n//             jobj[\"value\"]=valueConvert.convertToObject(queryCondition.value);\r\n//         }\r\n//         jobj[\"rightBrackets\"]=queryCondition.rightBrackets;\r\n//         jobj[\"relationType\"]=queryCondition.relationType;\r\n//         let controlConvertor=new ControlConvert();\r\n//         if(queryCondition.control){\r\n//             jobj[\"control\"]=controlConvertor.convertJObject(queryCondition.control);\r\n//         }\r\n//         return jobj;\r\n//     }\r\n\r\n//     /**\r\n//      * ååºåå\r\n//      * @param jobj æ¥è¯¢æ¡ä»¶å®ä½åºåååçJSONå¯¹è±¡\r\n//      */\r\n//     initFromJobject(jobj:Object):QueryCondition{\r\n//         let queryCondition=new QueryCondition();\r\n//         queryCondition.id=jobj[\"id\"];\r\n//         queryCondition.fieldCode=jobj[\"fieldCode\"];\r\n//         queryCondition.fieldName=jobj[\"fieldName\"];\r\n//         queryCondition.leftBrackets=jobj[\"leftBrackets\"];\r\n//         queryCondition.compareType=jobj[\"compareType\"] as CompareType;\r\n//         queryCondition.valueType=jobj[\"valueType\"] as ValueType;\r\n//         if(jobj[\"value\"]){\r\n//             let valueConvert=new ConditionValueConvert();\r\n//             queryCondition.value=valueConvert.initFromObject(jobj[\"value\"]);\r\n//         }\r\n//         queryCondition.rightBrackets=jobj[\"rightBrackets\"];\r\n//         queryCondition.relationType=jobj[\"relationType\"] as RelationType;\r\n//         if(jobj[\"control\"]){\r\n//             let controlConvertor=new ControlConvert();\r\n//             queryCondition.control=controlConvertor.initFromJobject(jobj[\"control\"]);\r\n//         }\r\n//         return queryCondition;\r\n//     }\r\n// }\r\n","/**\r\n * æ¯è¾ç¬¦\r\n */\r\nexport enum CompareType{\r\n\r\n    /**\r\n     * ç­äº\r\n     */\r\n    // Equal=1,\r\n    Equal = 0,\r\n\r\n    /**\r\n     * å¤§äº\r\n     */\r\n    GreaterThan=2,\r\n\r\n    /**\r\n     * å¤§äºæç­äº\r\n     */\r\n    GreaterThanOrEqual=3,\r\n\r\n    /**\r\n     * å°äº\r\n     */\r\n    LessThan =4,\r\n\r\n    /**\r\n     * å°äºæç­äº\r\n     */\r\n    LessThanOrEqual = 5, \r\n\r\n    /**\r\n     * ä¹é´\r\n     */\r\n    BetWeen=6\r\n}","export enum ValueType{\r\n\r\n    /**\r\n     *å¼ç±»å\r\n     */\r\n    Value=0,\r\n\r\n    /**\r\n     * å¸®å©ç±»å\r\n     */\r\n    SmartHelp=1,\r\n\r\n    /**\r\n     * æä¸¾ç±»å\r\n     */\r\n    Enum=2,\r\n\r\n    /**\r\n     * è¡¨è¾¾å¼\r\n     */\r\n    Express=3\r\n}","export enum RelationType{\r\n\r\n    /**\r\n     * ä¸\r\n     */\r\n    // And=0,\r\n    And = 1,\r\n\r\n    /**\r\n     * æ\r\n     */\r\n    // Or=1\r\n    Or = 2\r\n}","// import { EnumIntegerValue } from \"./integerenumvalue\";\r\n// import { EnumStringValue } from \"./stringenumvalue\";\r\n// import { EnumBoolValue } from \"./boolenumvalue\";\r\n\r\nexport interface CheckboxIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class CheckboxEnumValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { FieldConfig } from '../entity/fieldconfig/fieldconfig';\r\nimport { QueryCondition } from '../entity/querycondition';\r\nimport { EnumType } from '../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumBoolValue } from '../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { EnumIntegerValue } from '../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { ControlType } from '../entity/controltype';\r\nimport { CompareType } from '../entity/comparetype';\r\nimport { ValueType } from '../entity/valuetype';\r\nimport { RelationType } from '../entity/relationtype';\r\nimport { DropDownControl } from '../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { CheckboxGroupControl } from '../entity/controltype/checkbox/checkboxcontrol';\r\nimport { CheckboxIEnumValue, CheckboxEnumValue } from '../entity/controltype/checkbox/ienumvalue';\r\n\r\n@Injectable()\r\nexport class ConvertorService {\r\n\r\n    constructor() { }\r\n    // private solutionservice:SolutionService\r\n    /**\r\n    * è·åå·²éæ©çå­æ®µéç½®\r\n    * @param selectedConditions \r\n    */\r\n    getFeildConfigs(selectedConditions: Array<QueryCondition>) {\r\n        let fieldsConfigs = new Array<FieldConfig>();\r\n        if (!selectedConditions || selectedConditions.length <= 0) {\r\n            return fieldsConfigs;\r\n        }\r\n        else {\r\n            selectedConditions.forEach(condition => {\r\n                let fieldConfig = new FieldConfig();\r\n                fieldConfig.id = condition.id;\r\n                fieldConfig.labelCode = condition.fieldCode;\r\n                fieldConfig.name = condition.fieldName;\r\n                fieldConfig.control = condition.control;\r\n                fieldsConfigs.push(fieldConfig);\r\n            });\r\n        }\r\n        return fieldsConfigs;\r\n    }\r\n\r\n    getSelectedFieldConditions(fileds: Array<FieldConfig>, selectedFieldConditions: Array<QueryCondition>) {\r\n        // console.log(selectedFieldConditions);\r\n        let tempSelectedFieldConditions = new Array<QueryCondition>();\r\n        tempSelectedFieldConditions = this.arrayClone(selectedFieldConditions);\r\n        selectedFieldConditions = new Array<QueryCondition>();\r\n        fileds.forEach(filed => {\r\n\r\n            filed.control = this.getDropListEnumValues(filed.control as DropDownControl);\r\n            // filed.control = this.getCheckGroupEnumValues(filed.control as CheckboxGroupControl);\r\n            if (tempSelectedFieldConditions.length > 0) {\r\n                let tempIndex = tempSelectedFieldConditions.findIndex(x => x.id == filed.id);\r\n                if (tempIndex != (-1)) {\r\n                    selectedFieldConditions.push(tempSelectedFieldConditions[tempIndex]);\r\n                }\r\n                else {\r\n                    selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n                }\r\n            }\r\n            else {\r\n                selectedFieldConditions = this.getNewFieldConditions(filed, selectedFieldConditions);\r\n            }\r\n\r\n        });\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropListEnumValues(control: DropDownControl): DropDownControl {\r\n        if (control.valueType == EnumType.BoolType) {\r\n            let enumValues = new Array<EnumBoolValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumBoolValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.IntType) {\r\n            let enumValues = new Array<EnumIntegerValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumIntegerValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        else if (control.valueType == EnumType.StringType) {\r\n            let enumValues = new Array<EnumStringValue>();\r\n            control.enumValues.forEach(element => {\r\n                enumValues.push(Object.assign(new EnumStringValue(), element));\r\n            });\r\n            control.enumValues = enumValues;\r\n        }\r\n        return control;\r\n    }\r\n\r\n    private getCheckGroupEnumValues(control: CheckboxGroupControl): CheckboxGroupControl {\r\n        let enumValues = new Array<CheckboxIEnumValue>();\r\n        control.enumValues.forEach(element => {\r\n            enumValues.push(Object.assign(new CheckboxEnumValue(), element));\r\n        });\r\n        control.enumValues = enumValues;\r\n        return control;\r\n    }\r\n\r\n    public getNewFieldConditions(filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        let selectedFieldCondition = new QueryCondition();\r\n        selectedFieldCondition.id = filed.id;\r\n        selectedFieldCondition.fieldCode = filed.labelCode;\r\n        selectedFieldCondition.fieldName = filed.name;\r\n        selectedFieldCondition.valueType = ValueType.Value;\r\n        selectedFieldCondition.value = filed.value;\r\n        selectedFieldCondition.filled = filed.filled;\r\n        selectedFieldCondition.valueText = filed.valueText;\r\n        selectedFieldCondition.relationType = RelationType.And;\r\n        selectedFieldCondition.control = filed.control;\r\n        selectedFieldCondition.labelCode = filed.labelCode;\r\n\r\n        if (filed.control.getControlType() == ControlType.Text) {\r\n            selectedFieldConditions = this.getTextValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DateRangeTime) {\r\n            selectedFieldConditions = this.getDateRangeTimeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.MonthRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.YearRange) {\r\n            selectedFieldConditions = this.getDateRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Year) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Month) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.NumberRange) {\r\n            selectedFieldConditions = this.getNumberRangeValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Help) {\r\n            selectedFieldConditions = this.getSmartHelpValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.DropDown) {\r\n            selectedFieldConditions = this.getDropDownValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Search) {\r\n            selectedFieldConditions = this.getSearchValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Date) {\r\n            selectedFieldConditions = this.getDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.CheckboxGroup) {\r\n            selectedFieldConditions = this.getCheckboxGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Radio) {\r\n            selectedFieldConditions = this.getRadioValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.InputGroup) {\r\n            selectedFieldConditions = this.getInputGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.Number) {\r\n            selectedFieldConditions = this.getNumberValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.FlexibleNumber) {\r\n            selectedFieldConditions = this.getFlexibleNumberValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.FlexibleDate) {\r\n            selectedFieldConditions = this.getFlexibleDateValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        else if (filed.control.getControlType() == ControlType.BoolCheck) {\r\n            selectedFieldConditions = this.getCheckboxGroupValueFieldCondition(selectedFieldCondition, filed, selectedFieldConditions);\r\n        }\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDropDownValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getDropListEnumValues(selectedFieldCondition.control as DropDownControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getRadioValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getCheckboxGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        this.getCheckGroupEnumValues(selectedFieldCondition.control as CheckboxGroupControl);\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSmartHelpValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getFlexibleNumberValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getFlexibleDateValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n    private getNumberValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getNumberRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateRangeTimeValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.beginPlaceHolder = filed.beginPlaceHolder;\r\n        selectedFieldCondition.endPlaceHolder = filed.endPlaceHolder;\r\n        selectedFieldCondition.compareType = CompareType.BetWeen;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getTextValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getDateValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getInputGroupValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private getSearchValueFieldCondition(selectedFieldCondition: QueryCondition, filed: FieldConfig, selectedFieldConditions: Array<QueryCondition>) {\r\n        selectedFieldCondition.placeHolder = filed.placeHolder;\r\n        selectedFieldCondition.compareType = CompareType.Equal;\r\n        selectedFieldConditions.push(selectedFieldCondition);\r\n        return selectedFieldConditions;\r\n    }\r\n\r\n    private arrayClone(input: Array<any>): Array<any> {\r\n        let result = new Array<any>();\r\n        if (input && input.length > 0) {\r\n            input.forEach(element => {\r\n                result.push(Object.assign({}, element));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}","import { InjectionToken } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n\r\nexport interface FilterHandler{\r\n    setCurrentFilterConditions(conditions: QueryCondition[]): void;\r\n}\r\n\r\nexport const FILTER_HANDLER_TOKEN = new InjectionToken<FilterHandler>('gsp-cmp/FILTER_HANDLER');","// export function deepCopy (data) {\r\n//     return JSON.parse(JSON.stringify(data));\r\n//   }\r\n\r\nexport function deepCopy(obj) {\r\n    var newobj = obj.constructor === Array ? [] : {};\r\n    if (typeof obj !== 'object') {\r\n      return obj;\r\n    } else {\r\n        for (var i in obj) {\r\n            if (typeof obj[i] === 'object'){ //å¤æ­å¯¹è±¡çè¿æ¡å±æ§æ¯å¦ä¸ºå¯¹è±¡\r\n                const type = Object.prototype.toString.call(obj[i]);\r\n                if(type == '[object Null]'){\r\n                    newobj[i] = obj[i];\r\n                }\r\n                else{\r\n                    newobj[i] = deepCopy(obj[i]);  //è¥æ¯å¯¹è±¡è¿è¡åµå¥è°ç¨\r\n                }\r\n            }else{\r\n                newobj[i] = obj[i];\r\n            }\r\n        }\r\n    }\r\n    return newobj; //è¿åæ·±åº¦åéåçå¯¹è±¡\r\n}  ","import {\r\n    Component, OnInit, Input, ViewChild, ViewEncapsulation, ElementRef, AfterViewInit, ChangeDetectorRef, Renderer2, NgZone,\r\n    EventEmitter, Output, Injector, Optional, LOCALE_ID, InjectFlags, HostBinding, OnChanges, SimpleChanges, OnDestroy\r\n} from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { auditTime, debounceTime, filter } from 'rxjs/operators';\r\nimport { animationFrame } from 'rxjs/internal/scheduler/animationFrame';\r\nimport { FarrisSidebarComponent } from '@farris/ui-sidebar';\r\n\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { FilterPanelService } from '@farris/ui-filter-panel';\r\nimport { QuerySolutionService } from '@farris/ui-filter-condition';\r\n\r\nimport { FilterService } from './filter.service';\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\nimport { TextValue } from './entity/conditionvalue/textvalue';\r\nimport { HelpValue } from './entity/conditionvalue/helpvalue';\r\nimport { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';\r\nimport { DateRangeValue } from './entity/conditionvalue/daterangevalue';\r\nimport { DateRangeTimeValue } from './entity/conditionvalue/daterangetimevalue';\r\nimport { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';\r\nimport { SearchValue } from './entity/conditionvalue/searchvalue';\r\nimport { DateValue } from './entity/conditionvalue/datevalue';\r\nimport { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';\r\n\r\nimport { FieldConfig } from './entity/fieldconfig/fieldconfig';\r\nimport { FilterHandler, FILTER_HANDLER_TOKEN } from './interface/filterHandler';\r\nimport { deepCopy } from './utils';\r\nimport { DropDownControl } from './entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { CheckboxGroupControl } from './entity/controltype/checkbox/checkboxcontrol';\r\nimport { RadioGroupValue } from './entity/conditionvalue/radiovalue';\r\nimport { RadioControl } from './entity/controltype/radio/radiocontrol';\r\nimport { MonthRangeValue } from './entity/conditionvalue/monthrange';\r\nimport { YearRangeValue } from './entity/conditionvalue/yearrange';\r\nimport { MonthValue } from './entity/conditionvalue/month';\r\nimport { YearValue } from './entity/conditionvalue/yearvalue';\r\nimport { InputGroupValue } from './entity/conditionvalue/inputgroup';\r\nimport { NumberValue } from './entity/conditionvalue/numbervalue';\r\nimport { FlexibleNumberValue } from './entity/conditionvalue/flexiblenumbervalue';\r\nimport { FlexibleDateValue } from './entity/conditionvalue/flexibledatevalue';\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\nimport { IdService, OverLayHiddenService } from '@farris/ui-common';\r\n@Component({\r\n    selector: 'farris-filter',\r\n    templateUrl: './filter.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        FilterPanelService\r\n    ]\r\n})\r\nexport class FilterComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    _filterList: Array<any> = [];\r\n    @Input()\r\n    get filterList(): Array<any> {\r\n        return this._filterList;\r\n    }\r\n    set filterList(filterList: Array<any>) {\r\n        this._filterList = filterList || [];\r\n        this.initFilterList();\r\n    }\r\n    //æ¯å¦ç¦ç¨\r\n    @Input() disabled = false;\r\n    @Input() showReminder = false;\r\n    /**\r\n     * æ¯å¦å¯ç¨ä¾§è¾¹æ åæ:\r\n     * true-çé¢åºç°é«çº§ç­éæå­æé®ï¼ç¹å»æé®ï¼è¿æ»¤æ¡ä»¶å¨ä¾§è¾¹æ æ¾ç¤º\r\n     * false-çé¢åºç°ç­éæ¼æå¾æ æé®ï¼ç¹å»æé®ï¼è¿æ»¤æ¡ä»¶å¨å¾æ ä¸æ¹å±ç¤º\r\n     */ \r\n    @Input() floatFilter = true;\r\n    // å¯ç¨èªå¨å®½åº¦\r\n    private _enableAutoWidth = false;\r\n    // æ¸ç©ºå·²é\r\n    @Input() clearSelectedText='';\r\n    @Input()\r\n    set enableAutoWidth(value) {\r\n        if (value !== this._enableAutoWidth) {\r\n            if (value) {\r\n                this.filterEllipsis = false;\r\n                this.filterExtendShow = false;\r\n            }\r\n            this._enableAutoWidth = value;\r\n        }\r\n    }\r\n    get enableAutoWidth() {\r\n        return this._enableAutoWidth;\r\n    }\r\n\r\n    @Input() localStorageKey: string = 'farrisSearchRecord';\r\n    //åå§åå¼\r\n    _defaultValue: FieldConfig[];\r\n    // é»è®¤å¼æ¯ç©ºå¼æ¶æ§è¡æ¥è¯¢ï¼å¼å®¹æ§æ¹å¼\r\n    @Input() defaultEmptyValueSearch=true;\r\n    @Input()\r\n    set defaultValue(configs: FieldConfig[]) {\r\n        this._defaultValue = configs;\r\n        // å¦æåè®¸ç©ºç½®æ¶æ§è¡ï¼æèä¸åè®¸ï¼ä½ææ¡ä»¶\r\n        let canFilter=this.defaultEmptyValueSearch||configs&&configs.length>0;\r\n        if(canFilter){\r\n            setTimeout(() => {\r\n                this.setFilterValue(this._defaultValue);\r\n            });\r\n        }\r\n    }\r\n    get defaultValue() {\r\n        return this._defaultValue;\r\n    }\r\n    @HostBinding('class.f-filter') cla = true;\r\n    @Output() query = new EventEmitter();\r\n    @Output() searchChange = new EventEmitter();\r\n    @Output() resetChange = new EventEmitter();\r\n    @Output() clearFilter = new EventEmitter();\r\n    @Output() expandFilter = new EventEmitter();\r\n    @Output() packupFilter = new EventEmitter();\r\n    @Output() filterResize = new EventEmitter();\r\n    // æ¡ä»¶åæ´æ¶åè§¦å\r\n    @Output() conditionsChange = new EventEmitter();\r\n\r\n    @ViewChild('filterMain') filterMain: ElementRef;\r\n    @ViewChild('filterTool') filterTool: ElementRef;\r\n    @ViewChild('filterWrapper') filterWrapper: ElementRef;\r\n    @ViewChild('farrissidebar') farrissidebar: FarrisSidebarComponent;\r\n    @ViewChild('listWrapper') listWrapper: ElementRef;\r\n    @ViewChild('filterListWrapper') filterListWrapper: ElementRef;\r\n    @ViewChild('floatPanel') floatPanel: ElementRef;\r\n    currentFilterId;\r\n    // å±å¼\r\n    filterExtend = false;\r\n    // æ¯å¦æ¾ç¤ºä¸ä¸ªç¹\r\n    filterEllipsis = false;\r\n    // æ¯å¦æ¾ç¤ºå±å¼æ¶èµ·\r\n    filterExtendShow = false;\r\n    filterExtendText = 'å±å¼';\r\n    filterExtendIcon = 'f-icon-arrow-chevron-down';\r\n    expandText = 'å±å¼';\r\n    foldText = 'æ¶èµ·';\r\n    filterWrapperEl;\r\n    filterToolWidth: number;\r\n    sidebarOpen = false;\r\n    floatPanelOpen = false;\r\n    showExpandTag = false;\r\n    /** è¡¨åæ¯å¦åè®¸æäº¤ */\r\n    canSubmit = false;\r\n    /** è¡¨åæ¯å¦åè®¸æäº¤,ç¨äºé«çº§ç­éæ¸ç©ºå */\r\n    advancedCanSubmit = true;\r\n    /** é»è®¤å±å¼é¡¹æ¯å¦åè®¸æäº¤ */\r\n    showCanSubmit = true;\r\n    /** æ¯å¦æ¾ç¤ºæ¸ç©ºå·²é */\r\n    filledFilter = false;\r\n    /** é»è®¤å±å¼çç­éé¡¹ */\r\n    showFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­é */\r\n    extendFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    extendFilterListStore: Array<QueryCondition> = new Array<QueryCondition>();\r\n    extendFilterListTemporary: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** å·²å¡«åç­éæ°æ® */\r\n    filledFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­éä¸­å·²å¡«åç */\r\n    filledExtendFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** æ²¡æå¡«åçç­éé¡¹ */\r\n    // unFilledFilterList:Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é«çº§ç­éä¸­å¿å¡«é¡¹ */\r\n    extendRequiredList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é»è®¤ç­éä¸­å¿å¡«é¡¹ */\r\n    showRequiredList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** å¾ªç¯è¡¨å */\r\n    listFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** é»è®¤å±å¼ï¼é«çº§ç­éä¸­å·²å¡«åç */\r\n    loopFilterList: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** ç¨æ¥å­å¨setvalueåæ°æ® */\r\n    stagListFilterConditions: Array<QueryCondition> = new Array<QueryCondition>();\r\n    /** æ¾ç¤ºä¸­è¡¨åçå¿å¡«é¡¹ */\r\n    requiredListFilter: Array<QueryCondition> = [];\r\n\r\n    localeIds = {\r\n        'en': 'en',\r\n        'zh-CHS': 'zh-CHS'\r\n    };\r\n    currentLocale = 'zh-CHS';\r\n    isControlInline = true;\r\n    /**\r\n     * ç»ä»¶æå¡æ¥å£\r\n     */\r\n    filterHandler: FilterHandler;\r\n    filterPanelContainer;\r\n\r\n    showReminderItem: QueryCondition;\r\n    reminderLeft = 0;\r\n\r\n    floatPanelHeight = null;\r\n    floatFilterIconBottom = 0;\r\n    // ç»å®å¤§å°ååååº\r\n    private ro: ResizeObserver | null = null;\r\n    // è®°å½æ§çå®½åº¦æ°æ®\r\n    private containerWidthRecord = 0;\r\n    // éå¼\r\n    private distanceThreshold = 20;\r\n\r\n    private idService: IdService;\r\n    private overLayService: OverLayHiddenService = null;\r\n    constructor(\r\n        private filterPanelService: FilterPanelService,\r\n        private filterService: FilterService,\r\n        private convertorService: ConvertorService,\r\n        private handler: QuerySolutionService,\r\n        private cd: ChangeDetectorRef,\r\n        private render: Renderer2,\r\n        public ngzone: NgZone,\r\n        public localeService: LocaleService,\r\n        @Optional() private injector: Injector\r\n    ) {\r\n        if (this.injector) {\r\n            this.currentLocale = this.injector.get(LOCALE_ID);\r\n            this.filterHandler = this.injector.get<FilterHandler>(FILTER_HANDLER_TOKEN, null, InjectFlags.Optional);\r\n            this.idService = this.injector.get(IdService);\r\n        }\r\n\r\n        this.overLayService = this.injector.get(OverLayHiddenService, null);\r\n        if (!this.overLayService) {\r\n            this.overLayService = new OverLayHiddenService();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.filterWrapperEl = this.filterListWrapper && this.filterListWrapper.nativeElement;\r\n        // ç»å®äºä»¶\r\n        this.bindRoEvent();\r\n        this.foldText = this.localeService.getValue('filterPanel.fold');\r\n        this.expandText = this.localeService.getValue('filterPanel.expand');\r\n        this.filterExtendText = this.expandText;\r\n        if (this.currentLocale === this.localeIds['en']) {\r\n            this.isControlInline = false;\r\n        }\r\n        else {\r\n            this.isControlInline = true;\r\n        }\r\n\r\n        fromEvent(window, 'resize').pipe(\r\n            auditTime(50)\r\n        ).subscribe(() => {\r\n            this.floatPanelHeight = window.innerHeight - this.floatFilterIconBottom;\r\n        })\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.ro) {\r\n            this.ro.unobserve(this.filterWrapperEl);\r\n            this.ro = null;\r\n        }\r\n\r\n        if (this.floatPanel) {\r\n            this.overLayService.destory(this.floatPanel.nativeElement);\r\n        }\r\n    }\r\n    /**\r\n     * ç»å®çæ§å¤§å°çäºä»¶\r\n     */\r\n    private bindRoEvent(){\r\n        if(!this.filterWrapper){\r\n            return;\r\n        }\r\n        this.ngzone.runOutsideAngular(() => {\r\n            // è¿æ ·ä¸ç´é½ç»å®å¯è½ææ§è½é®é¢\r\n            this.ro = new ResizeObserver((entries, observer) => {\r\n                const tempWidth = entries[0].contentRect.width;\r\n                if (\r\n                    Math.abs(tempWidth - this.containerWidthRecord) >\r\n                    this.distanceThreshold\r\n                ) {\r\n                    if (!this.filterList.length) return;\r\n                    if (this.enableAutoWidth) {\r\n                        return;\r\n                    }\r\n                    this.listEllipsisInit();\r\n                    this.containerWidthRecord = tempWidth;\r\n                }\r\n            });\r\n            this.ro.observe(this.filterWrapper.nativeElement);\r\n            // fromEvent(window, 'resize')\r\n            //     .pipe(debounceTime(50, animationFrame))\r\n            //     .subscribe((): void => {\r\n            //         this.ngzone.run(() => {\r\n            //             // console.log('resize');\r\n            //             if (!this.filterList.length) return;\r\n            //             if (this.enableAutoWidth) {return;}\r\n            //             this.listEllipsisInit();\r\n            //         });\r\n            //     });\r\n        });\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.filterList && !changes.filterList.isFirstChange()) {\r\n        //   this.initFilterList();\r\n        // }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n    /**\r\n     * åå§åç­éé¡¹\r\n     */\r\n    initFilterList() {\r\n        this.listFilterConditions = new Array<QueryCondition>();\r\n        const filterDatas = this.filterService.fieldSchemasConvert(this.filterList);\r\n        if (filterDatas && filterDatas.length) {\r\n            this.listFilterConditions = this.convertorService.getSelectedFieldConditions(filterDatas, this.listFilterConditions);\r\n        }\r\n        this.stagListFilterConditions = this.listFilterConditions.map(o => ({ ...o }));\r\n        this.filterListClassify();\r\n        setTimeout(() => {\r\n            if (this.showReminder && this.showFilterList && this.showFilterList.length) {\r\n                this.showReminderItem = this.showFilterList[0];\r\n                if (this.showReminderItem) {\r\n                    let filterlistItems = this.filterListWrapper && this.filterListWrapper.nativeElement.children;\r\n                    if (filterlistItems && filterlistItems.length) {\r\n                        let showRemItem;\r\n                        for (let i = 0; i < filterlistItems.length; i++) {\r\n                            if (this.showReminderItem['id'] == filterlistItems[i].getAttribute('id')) {\r\n                                showRemItem = filterlistItems[i];\r\n                            }\r\n                        }\r\n                        if (showRemItem) {\r\n                            this.reminderLeft = showRemItem.offsetLeft >= 0 ? showRemItem.offsetLeft : 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.showReminderItem = null;\r\n            }\r\n        }, 0);\r\n        this.cd.detectChanges();\r\n    }\r\n    /** ç­éé¡¹åç±» */\r\n    filterListClassify() {\r\n        this.extendFilterList = [];\r\n        this.extendFilterListStore = [];\r\n        this.showFilterList = [];\r\n        this.filledFilterList = [];\r\n        this.filledExtendFilterList = [];\r\n        this.loopFilterList = [];\r\n        this.extendRequiredList = [];\r\n        this.showRequiredList = [];\r\n        // å¿å¡«\r\n        let requiredList = this.listFilterConditions.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (requiredList && requiredList.length) {\r\n            this.requiredListFilter = requiredList;\r\n            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n        } else {\r\n            this.requiredListFilter = [];\r\n            this.canSubmit = true;\r\n        }\r\n        // å ç§ç±»ååç±»\r\n        this.listFilterConditions.forEach(field => {\r\n            if (field.control.isExtend && field['filled']) {\r\n                this.filledExtendFilterList.push(field);\r\n            }\r\n            if (field['filled']) {\r\n                this.filledFilterList.push(field);\r\n            }\r\n            // else if(!field.control.isExtend){\r\n            //   this.unFilledFilterList.push(field);\r\n            // }\r\n\r\n            if (field.control.isExtend) {\r\n                this.extendFilterListStore.push(field);\r\n            } else {\r\n                this.showFilterList.push(field);\r\n            }\r\n        });\r\n\r\n        if (this.filledFilterList.length) {\r\n            this.filledFilter = true;\r\n        } else {\r\n            this.filledFilter = false;\r\n        }\r\n\r\n        const list = this.listFilterConditions.filter(item => {\r\n            return !item.control.isExtend || item['filled']\r\n        });\r\n        // this.loopFilterList = this.showFilterList.concat(this.filledExtendFilterList);\r\n        this.loopFilterList = list ? list : [];\r\n        this.loopFilterList.forEach(item => {\r\n            this.getValueText(item);\r\n        });\r\n        this.extendFilterList = this.extendFilterListStore.map(o => ({ ...o }));\r\n        const extendRequiredList = this.extendFilterList.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (extendRequiredList && extendRequiredList.length) {\r\n            this.extendRequiredList = extendRequiredList;\r\n        }\r\n\r\n        const showrequiredList = this.showFilterList.filter((listitem) => {\r\n            return listitem.control.required;\r\n        });\r\n        if (showrequiredList && showrequiredList.length) {\r\n            this.showRequiredList = showrequiredList;\r\n        }\r\n\r\n        this.showCanSubmit = this.canSubmitFilter(this.showRequiredList);\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        // console.log('å·²å¡«å',this.filledExtendFilterList);\r\n        // console.log('æ¾ç¤ºåºæ¥ç',this.loopFilterList);\r\n        // console.log('éèé¨å',this.extendFilterList);\r\n        this.filterExtendShow = true;\r\n        // å¦ææ¯æ¯æèªå¨å®½åº¦ï¼å°±æ¯ä¸åæ,å¤æ­æ¶åèµå¼æ¶æº\r\n        if (!this.enableAutoWidth) {\r\n            setTimeout(() => {\r\n                this.listEllipsisInit();\r\n            }, 0);\r\n        }\r\n    }\r\n    /**\r\n     * å·²å¡«åç­éé¡¹ç¹å»\r\n     * @param event \r\n     * @param data \r\n     */\r\n    filterClick(event, data, index) {\r\n        event.stopPropagation();\r\n        if (this.disabled) return;\r\n        if (data) {\r\n            this.showReminderItem = null;\r\n        }\r\n        const instanceID = this.localStorageKey + '_'+ data.id;\r\n        if (data && this.currentFilterId != data.id) {\r\n            const panelItem = deepCopy(data);\r\n            this.currentFilterId = data.id;\r\n            const { left, top, height, right } = event.currentTarget.getBoundingClientRect();\r\n            this.filterPanelContainer = this.filterPanelService.showPanel({\r\n                left: left,\r\n                top: top + height + 2,\r\n                right: right,\r\n                item: panelItem,\r\n                localStorageKey: instanceID\r\n            });\r\n            this.filterPanelContainer.hidePanel.subscribe(e => {\r\n                this.filterPanelService.hidePanel();\r\n                this.filterPanelContainer = null;\r\n                this.currentFilterId = null;\r\n            });\r\n            this.filterPanelContainer.clearFilter.subscribe(e => {\r\n                this.clearFilter.emit(e);\r\n            });\r\n            //æäº¤å¼¹çªå\r\n            const _this = this;\r\n            this.filterPanelContainer.submit.subscribe(e => {\r\n                e.filled = (e.valueText && e.valueText.length > 0) ? true : false;\r\n                _this.loopFilterList[index] = e;\r\n                let panelListIndex = _this.listFilterConditions.findIndex(item => {\r\n                    return item['id'] == e['id'];\r\n                });\r\n                if (panelListIndex >= 0) {\r\n                    _this.listFilterConditions[panelListIndex] = e;\r\n                }                \r\n                this.conditionChangeHandler();\r\n                this.inSetCurrentFilterConditions();\r\n                this.filterListClassify();\r\n                // valueTextæ¯æéè¦è®¡ç®çï¼æä»¥å»¶åå¤æ­æ¯å¦æ¾ç¤º\r\n                let findItem = _this.loopFilterList.find(item => {\r\n                    return item['id'] == e['id'];\r\n                });\r\n                if (findItem) {\r\n                    findItem['filled'] = findItem.valueText && findItem.valueText.length > 0 ? true : false;\r\n                }\r\n                this.cd.markForCheck();\r\n                this.submit('panelFormData', this.listFilterConditions, e);\r\n                this.filterPanelService.hidePanel();\r\n                this.filterPanelContainer = null;\r\n                this.currentFilterId = null;\r\n            });\r\n        }\r\n        else {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelContainer = null;\r\n            this.currentFilterId = null;\r\n        }\r\n    }\r\n    /**\r\n     * æ¸ç©ºç­éé¡¹\r\n     */\r\n    filterClear(data, index, event) {\r\n        event.stopPropagation();\r\n        this.filterPanelService.hidePanel();\r\n        this.currentFilterId = null;\r\n        this.resetListCondition(data);\r\n        this.filterListClassify();\r\n        this.cd.markForCheck();\r\n        this.conditionChangeHandler();\r\n        this.clearFilter.emit(data);\r\n        this.inSetCurrentFilterConditions();\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        this.submit('panelFormData', this.listFilterConditions);\r\n    }\r\n    /**\r\n     * å±å¼é«çº§ç­é\r\n     */\r\n    advancedFilter() {\r\n        this.showReminderItem = null;\r\n        this.extendFilterListTemporary = deepCopy(this.extendFilterList);\r\n        //this.farrissidebar.isOpen = true;\r\n         this.farrissidebar.openSideBar();\r\n    }\r\n    listCancel() {\r\n        this.extendFilterList = deepCopy(this.extendFilterListTemporary);\r\n       // this.farrissidebar.isOpen = false;\r\n        this.farrissidebar.closeSideBar();\r\n        this.floatPanelOpen = false;\r\n    }\r\n    /**\r\n     * è¿æ»¤æé®ç¹å¼çé¢æ¿\r\n     */\r\n    advancedPanelClose(){\r\n        this.extendFilterList = deepCopy(this.extendFilterListTemporary);\r\n         this.floatPanelOpen = false;\r\n    }\r\n    /**\r\n     * æå¼é¢æ¿é«çº§ç­é\r\n     */\r\n    floatFilterOpen($evnet: MouseEvent) {\r\n        this.floatPanelOpen = !this.floatPanelOpen;\r\n        if (this.floatPanelOpen) {\r\n            // è§£å³å·²ç»æä½è¿ä¾§è¾¹æ åï¼ååæ¢æ¯å¦ä¾§è¾¹æ å±ç¤ºçé®é¢\r\n           this.render.removeClass(this.filterWrapper.nativeElement.parentElement,'f-sidebar-parent-collapse');\r\n            this.extendFilterListTemporary = deepCopy(this.extendFilterList);\r\n            if (!this.floatFilterIconBottom) {\r\n                const { bottom } = (<any>$evnet.target).getBoundingClientRect();\r\n                this.floatFilterIconBottom = bottom + 100;\r\n            }\r\n            this.floatPanelHeight = window.innerHeight - this.floatFilterIconBottom;\r\n\r\n            this.overLayService.registerMouseEvent(this.floatPanel.nativeElement, (e: any) => {\r\n               \r\n                if (this.floatPanel.nativeElement.contains(e.target)) {\r\n                    return;\r\n                } else {\r\n                    if (e.target.nodeName === 'SPAN' && e.target.className.indexOf('f-icon-filtrate')) {\r\n                        return;\r\n                    }\r\n\r\n                    const cls = ['.f-datepicker-container', '.farris-timer-picker', '.farris-modal', '.f-combo-lookup', '.date-overlay-container']\r\n\r\n                    if (cls.find(k => e.target.closest(k))) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.floatPanelOpen = false;\r\n                this.overLayService.destory(this.floatPanel.nativeElement);\r\n            });\r\n\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.overLayService.destory(this.floatPanel.nativeElement);\r\n        }\r\n    }\r\n    /**\r\n     * åè¡¨å±ç¤ºåå§å\r\n     */\r\n    listEllipsisInit() {\r\n        if (this.enableAutoWidth) return;\r\n        // if(this.filterExtend) return;\r\n        const filterMainWidth = this.filterMain.nativeElement.offsetWidth;\r\n        this.filterToolWidth = 0;\r\n        // filterTool = this.filterTool.nativeElement.offsetWidth;\r\n        if (this.filterTool) {\r\n            this.filterToolWidth = this.filterTool.nativeElement.offsetWidth;\r\n        }\r\n        // ç­éæ¡ä»¶åºåæå¤§å®½åº¦\r\n        let filterListW;\r\n        if (this.filterExtend) {\r\n            filterListW = filterMainWidth - 26;\r\n        }\r\n        else {\r\n            // filterListW = filterMainWidth- 48 - this.filterToolWidth - 26;\r\n            filterListW = filterMainWidth - 48 - this.filterToolWidth - 26;\r\n        }\r\n        // const filterWrapper = this.filterListWrapper.nativeElement;\r\n        // const filterWrapperWidth = filterWrapper.offsetWidth;\r\n        // console.log(filterWrapperWidth);\r\n        const filterItems = this.filterWrapperEl ? this.filterWrapperEl.children : [];\r\n        let filterItemWidth = 0;\r\n        if (filterItems && filterItems.length) {\r\n            for (let i = 0, len = filterItems.length; i < len; i++) {\r\n                this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                let width = filterItems[i].offsetWidth;\r\n                filterItemWidth += width + 8;\r\n                if (filterItemWidth >= filterListW && !this.filterExtend) {\r\n                    this.render.setStyle(filterItems[i], 'display', 'none');\r\n                }\r\n                else {\r\n                    this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                }\r\n                // console.log(filterItemWidth,filterListW,i);\r\n            }\r\n        }\r\n        // if(filterItemWidth > this.filterWrapperEl.offsetWidth){\r\n        if (filterItemWidth >= filterListW) {\r\n            this.filterEllipsis = true;\r\n            this.filterExtendShow = true;\r\n        }\r\n        else {\r\n            this.filterEllipsis = false;\r\n            this.filterExtendShow = false;\r\n        }\r\n\r\n        \r\n\r\n        if (filterItems.length) this.filterResize.emit();\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n    /**\r\n     * ç­éé¡¹å±å¼æ¶èµ·åæ¢\r\n     */\r\n    filterExpand() {\r\n        this.showReminderItem = null;\r\n        this.filterExtend = !this.filterExtend;\r\n        if (this.filterExtend) {\r\n            this.filterEllipsis = false;\r\n            this.filterExtendText = this.foldText;\r\n            this.filterExtendIcon = 'f-icon-arrow-chevron-up';\r\n            const filterItems = this.filterWrapperEl.children;\r\n            if (filterItems && filterItems.length) {\r\n                for (let i = 0, len = filterItems.length; i < len; i++) {\r\n                    this.render.setStyle(filterItems[i], 'display', 'flex');\r\n                }\r\n            };\r\n            this.render.setStyle(this.filterWrapperEl, 'flex-wrap', 'wrap');\r\n            this.expandFilter.emit();\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.filterExtendText = this.expandText;\r\n            this.filterExtendIcon = 'f-icon-arrow-chevron-down';\r\n            setTimeout(() => {\r\n                this.listEllipsisInit();\r\n            }, 0);\r\n            this.packupFilter.emit();\r\n        }\r\n    }\r\n    /**\r\n     * é«çº§ç­éè¡¨åé¡¹æç´¢åå\r\n     * @param $event \r\n     * @param item \r\n     */\r\n    onSearch($event, item) {\r\n        if (this.disabled) { return; }\r\n        this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n        // console.log(this.advancedCanSubmit,this.canSubmit);\r\n        this.conditionChangeHandler(false);\r\n        this.searchChange.emit({ item, conditions: this.listFilterConditions, instance: this });\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦ææå¿å¡«é¡¹é½å¡«åå®æ¯ */\r\n    canSubmitFilter(requirelist) {\r\n        let formCanSubmit = false;\r\n        if (!requirelist || !requirelist.length) {\r\n            formCanSubmit = true;\r\n            return formCanSubmit;\r\n        } else {\r\n            for (let i = 0; i < requirelist.length; i++) {\r\n                const item = requirelist[i];\r\n                if (item.control.getControlType() === ControlType.Text) {\r\n                    const tv = (item.value as TextValue);\r\n                    if (Object.keys(tv).length < 0 || !tv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Help) {\r\n                    const shv = (item.value as HelpValue);\r\n                    if (Object.keys(shv).length === 0 || !shv.value || !shv.valueField) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DropDown) {\r\n                    const ddv = (item.value as DropDownListValue);\r\n                    if (Object.keys(ddv).length === 0 || !ddv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DateRange) {\r\n                    const drv = (item.value as DateRangeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.DateRangeTime) {\r\n                    const drv = (item.value as DateRangeTimeValue);\r\n                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.MonthRange) {\r\n                    const mrv = (item.value as MonthRangeValue);\r\n                    if (Object.keys(mrv).length === 0 || (!mrv.startTime && !mrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.YearRange) {\r\n                    const yrv = (item.value as YearRangeValue);\r\n                    if (Object.keys(yrv).length === 0 || (!yrv.startTime && !yrv.endTime)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.NumberRange) {\r\n                    const nrv = (item.value as NumberRangeValue);\r\n                    if (Object.keys(nrv).length === 0 || (nrv.startValue === null && nrv.endValue === null)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    } else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                } else if (item.control.getControlType() === ControlType.Search) {\r\n                    const sv = (item.value as SearchValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Date) {\r\n                    const dv = (item.value as DateValue);\r\n                    if (Object.keys(dv).length < 0 || !dv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Month) {\r\n                    const mv = (item.value as MonthValue);\r\n                    if (Object.keys(mv).length < 0 || !mv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Year) {\r\n                    const yv = (item.value as YearValue);\r\n                    if (Object.keys(yv).length < 0 || !yv.value) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.CheckboxGroup) {\r\n                    const cbgv = (item.value as CheckboxGroupValue);\r\n                    if (Object.keys(cbgv).length === 0 || Object.keys(cbgv.value).length === 0) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Radio) {\r\n                    const radiov = (item.value as RadioGroupValue);\r\n                    if (Object.keys(radiov).length < 0 || radiov.value === '') {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.InputGroup) {\r\n                    const sv = (item.value as InputGroupValue);\r\n                    if (Object.keys(sv).length < 0 || !sv.textValue) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.Number) {\r\n                    const nrv = (item.value as NumberValue);\r\n                    if (Object.keys(nrv).length === 0 || (nrv.value == null)) {\r\n                        formCanSubmit = false;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        formCanSubmit = true;\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.FlexibleNumber) {\r\n                    const flexv = (item.value as FlexibleNumberValue);\r\n                    if (flexv.single) {\r\n                        if (Object.keys(flexv).length < 0 || flexv.value == null) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Object.keys(flexv).length === 0 || (flexv.startValue == null && flexv.endValue == null)) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                }\r\n                else if (item.control.getControlType() === ControlType.FlexibleDate) {\r\n                    const flexdatev = (item.value as FlexibleDateValue);\r\n                    if (flexdatev.single) {\r\n                        if (Object.keys(flexdatev).length < 0 || !flexdatev.value) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Object.keys(flexdatev).length === 0 || (!flexdatev.startValue && !flexdatev.endValue)) {\r\n                            formCanSubmit = false;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            formCanSubmit = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            return formCanSubmit;\r\n        }\r\n\r\n    }\r\n\r\n    /** é«çº§ç­éç¹å»ç¡®å®æäº¤ */\r\n    listSearch() {\r\n        if (this.disabled) { return; };\r\n        this.extendFilterList.forEach(field => {\r\n            if ((field.control.getControlType() != ControlType.Date)\r\n                && (field.control.getControlType() != ControlType.DateRange)\r\n                && (field.control.getControlType() != ControlType.DateRangeTime)\r\n                && (field.control.getControlType() != ControlType.FlexibleDate)) {\r\n                    if (!field.valueText) {\r\n                        field.valueText = field.value.getValueText();\r\n                    }\r\n            }\r\n            // if(field.control.getControlType() == ControlType.Radio){\r\n            //   console.log(field);\r\n            // }\r\n            field.filled = (field.valueText && field.valueText.length > 0) ? true : false;\r\n\r\n            if (field.control.getControlType() == ControlType.Text) {\r\n                let farrisSearchRecord = field.valueText;\r\n                let farrisSearchRecordArray = [];\r\n                let storagelabelCode = field.labelCode;\r\n                let filterPanelArray = JSON.parse(localStorage.getItem(this.localStorageKey));\r\n                if (Array.isArray(filterPanelArray)) {\r\n                    filterPanelArray = null;\r\n                }\r\n                if (!filterPanelArray || !filterPanelArray[storagelabelCode] || !filterPanelArray[storagelabelCode].length && farrisSearchRecord && farrisSearchRecord.length) {\r\n                    farrisSearchRecordArray.push(farrisSearchRecord);\r\n                }\r\n                else {\r\n                    farrisSearchRecordArray = filterPanelArray[storagelabelCode];\r\n                    let index = filterPanelArray[storagelabelCode].indexOf(farrisSearchRecord);\r\n                    if (index < 0 && farrisSearchRecord && farrisSearchRecord.length) {\r\n                        farrisSearchRecordArray.unshift(farrisSearchRecord);\r\n                    }\r\n                    farrisSearchRecordArray = farrisSearchRecordArray.slice(0, 6);\r\n                }\r\n                if (filterPanelArray == null) filterPanelArray = {};\r\n                filterPanelArray[storagelabelCode] = farrisSearchRecordArray;\r\n                localStorage.setItem(this.localStorageKey, JSON.stringify(filterPanelArray));\r\n            }\r\n\r\n        });\r\n        //å¤æ­é«çº§ç­ééæ¯å¦å·²ä¿®æ¹\r\n        let extendAmendedList = this.extendFilterList.filter(item => { return item.filled });\r\n        if (extendAmendedList && extendAmendedList.length) {\r\n            this.showExpandTag = true;\r\n        }\r\n        else {\r\n            this.showExpandTag = false;\r\n        }\r\n        this.extendFilterListStore = this.extendFilterList.map(o => ({ ...o }));\r\n        this.extendFilterListStore.forEach(field => {\r\n            let extendListIndex = this.listFilterConditions.findIndex(item => {\r\n                return item['id'] == field['id'];\r\n            });\r\n            if (extendListIndex >= 0) {\r\n                this.listFilterConditions[extendListIndex] = field;\r\n            }\r\n        });\r\n        // console.log(this.listFilterConditions);\r\n        this.conditionChangeHandler();\r\n        this.inSetCurrentFilterConditions();\r\n        this.filterListClassify();\r\n        this.farrissidebar.isOpen = false;\r\n        this.floatPanelOpen = false;\r\n        this.cd.markForCheck();\r\n        this.submit('extendFormData', this.listFilterConditions);\r\n    }\r\n    /** æäº¤è¡¨å */\r\n    submit(type, filterlist, filterItem = null) {\r\n        if (this.disabled || !this.showCanSubmit || !this.advancedCanSubmit) { return; }\r\n        const queryList = this.handler.setFilterConditions(filterlist);\r\n        this.query.emit({ type: type, data: JSON.stringify(queryList), filterItem });\r\n    }\r\n    /** è®¾ç½®ç­éåå§å¼ */\r\n    setFilterValue(fieldConfigs: FieldConfig[]) {\r\n        // å¨åå§åç­éæ¡æ¡ä»¶åè¡¨æ¶ä¼ç»stagListFilterConditionsèµå¼\r\n        this.listFilterConditions = this.stagListFilterConditions.map(o => ({ ...o }));\r\n        if (this.listFilterConditions && this.listFilterConditions.length) {\r\n            this.setValues(this.listFilterConditions, fieldConfigs);\r\n            let listFilter = this.listFilterConditions.map(o => ({ ...o }));\r\n            this.listFilterConditions = listFilter;\r\n            this.filterListClassify();\r\n            this.conditionChangeHandler();\r\n            this.inSetCurrentFilterConditions();\r\n            // this.listSearch();\r\n            this.cd.detectChanges();\r\n            this.cd.markForCheck();\r\n            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);\r\n            if (!this.canSubmit) {\r\n                return;\r\n            }\r\n            this.submit('showFormData', this.listFilterConditions);\r\n        }\r\n    }\r\n    /**\r\n     * æ¸ç©ºç­éæä¸é¡¹\r\n     * @param labelCode å­æ®µç¼å·å¯ä¸æ è¯\r\n     */\r\n    resetFilterValue(labelCode: string) {\r\n        if (labelCode && this.listFilterConditions && this.listFilterConditions.length) {\r\n            let resetCondition = this.listFilterConditions.find((conditions) => {\r\n                return conditions['fieldCode'] === labelCode;\r\n            })\r\n            if (resetCondition) {\r\n                this.resetListCondition(resetCondition);\r\n                this.filterListClassify();\r\n                this.cd.markForCheck();\r\n                this.conditionChangeHandler();\r\n                this.inSetCurrentFilterConditions();\r\n                this.advancedCanSubmit = this.canSubmitFilter(this.extendRequiredList);\r\n                this.submit('panelFormData', this.listFilterConditions);\r\n            }\r\n        }\r\n    }\r\n\r\n    // è®¾ç½®value\r\n    setValues(conditions, fieldConfigs: FieldConfig[]) {\r\n        let qc: QueryCondition;\r\n        let controlType: string;\r\n        if (fieldConfigs && fieldConfigs.length) {\r\n            fieldConfigs.forEach(v => {\r\n                qc = conditions.find(c => c.fieldCode == v.labelCode);\r\n                if (qc) {\r\n                    controlType = this.getControlType(qc);\r\n                    qc.value = this.filterService.setValues(controlType, v.value, qc.control.single);\r\n                    qc.valueText = qc.value.getValueText(qc.control);\r\n                    if (v.value) {\r\n                        qc.filled = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getValue(fieldName: string) {\r\n        const queryList = this.handler.setFilterConditions(this.listFilterConditions);\r\n        const item = queryList.find((n: any) => n['FilterField'] === fieldName);\r\n        if (item) {\r\n            return item.value;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     * @param selectedFieldCondition \r\n     */\r\n    getControlType(selectedFieldCondition: QueryCondition): string {\r\n        if (selectedFieldCondition) {\r\n            if (selectedFieldCondition.control.getControlType() == ControlType.Text) {\r\n                return 'input';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Search) {\r\n                return 'search';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Date) {\r\n                return 'date';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Month) {\r\n                return 'month';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Year) {\r\n                return 'year';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRange) {\r\n                return 'daterange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.MonthRange) {\r\n                return 'monthrange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.YearRange) {\r\n                return 'yearrange';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRangeTime) {\r\n                return 'daterangetime';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.DropDown) {\r\n                return 'dropdown';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.NumberRange) {\r\n                return 'number';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Help) {\r\n                return 'help';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n                return 'checkboxgroup';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Radio) {\r\n                return 'radio';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.InputGroup) {\r\n                return 'input-group';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.Number) {\r\n                return 'singlenumber';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.FlexibleNumber) {\r\n                return 'flexiblenumber';\r\n            }\r\n            else if (selectedFieldCondition.control.getControlType() == ControlType.FlexibleDate) {\r\n                return 'flexibledate';\r\n            }\r\n            else {\r\n                return 'input';\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * æ´æ°ä¸ä¸æä¸­ç­éæ°æ®\r\n     */\r\n    inSetCurrentFilterConditions() {\r\n        if (this.filterHandler) {\r\n            this.filterHandler.setCurrentFilterConditions(this.listFilterConditions);\r\n        }\r\n    }\r\n\r\n    /** æ¸ç©ºæ¡ä»¶ */\r\n    resetListCondition(listFilterCondition: QueryCondition) {\r\n        if (listFilterCondition.control.getControlType() == ControlType.Text) {\r\n            listFilterCondition.value = new TextValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Search) {\r\n            listFilterCondition.value = new SearchValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Date) {\r\n            listFilterCondition.value = new DateValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Month) {\r\n            listFilterCondition.value = new MonthValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Year) {\r\n            listFilterCondition.value = new YearValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.DateRange) {\r\n            listFilterCondition.value = new DateRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.MonthRange) {\r\n            listFilterCondition.value = new MonthRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.YearRange) {\r\n            listFilterCondition.value = new YearRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.DropDown) {\r\n            listFilterCondition.value = new DropDownListValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.NumberRange) {\r\n            listFilterCondition.value = new NumberRangeValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Help) {\r\n            listFilterCondition.value = new HelpValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.CheckboxGroup) {\r\n            listFilterCondition.value = new CheckboxGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Radio) {\r\n            listFilterCondition.value = new RadioGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.InputGroup) {\r\n            listFilterCondition.value = new InputGroupValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.Number) {\r\n            listFilterCondition.value = new NumberValue();\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.FlexibleNumber) {\r\n            listFilterCondition.value = new FlexibleNumberValue({ startValue: null, endValue: null, value: null }, listFilterCondition.control.single);\r\n        }\r\n        else if (listFilterCondition.control.getControlType() == ControlType.FlexibleDate) {\r\n            listFilterCondition.value = new FlexibleDateValue({ startValue: null, endValue: null, value: null }, listFilterCondition.control.single);\r\n        }\r\n        else {\r\n            listFilterCondition.value = new TextValue();\r\n        }\r\n        listFilterCondition.valueText = '';\r\n        listFilterCondition.filled = false;\r\n        // return listFilterCondition;\r\n    }\r\n\r\n    resetSearch() {\r\n        if (this.disabled) { return; }\r\n        if (this.listFilterConditions && this.listFilterConditions.length) {\r\n            this.listFilterConditions.forEach(listFilterCondition => {\r\n                this.resetListCondition(listFilterCondition);\r\n            });\r\n            this.listFilterConditions = this.listFilterConditions.map(o => ({ ...o }));\r\n            this.filterListClassify();\r\n            this.showCanSubmit = true;\r\n            this.conditionChangeHandler(false);\r\n            this.submit('panelFormData', this.listFilterConditions);\r\n        }\r\n        this.resetChange.emit();\r\n        this.showExpandTag = false;\r\n    }\r\n    /**\r\n     * é«çº§ç­éæ¸ç©ºç­é\r\n     */\r\n    resetAdvancedSearch() {\r\n        if (this.extendFilterList && this.extendFilterList.length) {\r\n            this.extendFilterList.forEach(listFilterCondition => {\r\n                this.resetListCondition(listFilterCondition);\r\n            })\r\n            this.extendFilterList = this.extendFilterList.map(o => ({ ...o }));\r\n        }\r\n        if (this.extendRequiredList.length) {\r\n            this.advancedCanSubmit = false;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * valueText ç¹æ®ç±»åå¤ç\r\n     * @param item \r\n     */\r\n    getValueText(item: QueryCondition) {\r\n        // console.log(item.fieldName,item.control.getControlType());\r\n        if (item.control.getControlType() === ControlType.DropDown) {\r\n            const enumValue = (item.control as DropDownControl).enumValues;\r\n            const value = (item.value as DropDownListValue).value;\r\n            if (enumValue && enumValue.length) {\r\n                const texts = enumValue.find(val => {\r\n                    return val['value'] == value;\r\n                });\r\n                if (texts) {\r\n                    item.valueText = texts['name'];\r\n                }\r\n            }\r\n        }\r\n        else if (item.control.getControlType() === ControlType.CheckboxGroup) {\r\n            const enumValue = (item.control as CheckboxGroupControl).enumValues;\r\n            const value = (item.value as CheckboxGroupValue).value;\r\n            if (enumValue && enumValue.length && value && value['length'] > 0) {\r\n                if (item.control.boolcheck) {\r\n                    item.valueText = value[0].toString();\r\n                    if (item.valueText == 'true') {\r\n                        item.valueText = this.localeService.getValue('text.yes');\r\n                    } else if (item.valueText == 'false') {\r\n                        item.valueText = this.localeService.getValue('text.no');\r\n                    }\r\n                }\r\n                else {\r\n                    let texts = [];\r\n                    for (let i = 0; i <= value['length']; i++) {\r\n                        const enums = enumValue.find(val => {\r\n                            return val['value'] == value[i];\r\n                        });\r\n                        if (enums) {\r\n                            texts.push(enums['name']);\r\n                        }\r\n                    }\r\n                    item.valueText = texts.join(',');\r\n                }\r\n            }\r\n        }\r\n        else if (item.control.getControlType() === ControlType.Radio) {\r\n            const enumValue = (item.control as RadioControl).enumValues;\r\n            const value = (item.value as RadioGroupValue).value;\r\n            if (enumValue && enumValue.length) {\r\n                const texts = enumValue.find(val => {\r\n                    return val['value'] == value;\r\n                });\r\n                if (texts) {\r\n                    item.valueText = texts['name'];\r\n                    if (item.valueText == 'true') {\r\n                        item.valueText = this.localeService.getValue('text.yes');\r\n                    } else if (item.valueText == 'false') {\r\n                        item.valueText = this.localeService.getValue('text.no');\r\n                    }\r\n                }\r\n            }\r\n        } else if (item.control.getControlType() == ControlType.InputGroup) {\r\n            item.valueText = item.value.getValueText();\r\n        }\r\n    }\r\n\r\n    buildSmartHelpKey(value: string) {\r\n        if(this.idService) {\r\n            let prefix = '';\r\n            if (location.hash) {\r\n                const pathArr = location.hash.split('?');\r\n                prefix = pathArr ? pathArr[0] : '';\r\n            } else {\r\n                const pathArr  = location.pathname.split('/');\r\n                prefix = pathArr ? pathArr[pathArr.length - 1] : '';\r\n            }\r\n            return this.idService.encrypt(prefix + '/list-filter/' + value);\r\n        } else {\r\n            return 'list-filter/' + value;\r\n        }\r\n    }\r\n    private conditionChangeHandler(searchEmit=true){\r\n        const queryList = this.handler.setFilterConditions(this.listFilterConditions);\r\n        this.conditionsChange.emit({data:JSON.stringify(queryList)});\r\n        if(searchEmit){\r\n            this.searchChange.emit(this.listFilterConditions);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QueryCondition } from '../entity/querycondition';\r\n\r\n@Injectable()\r\nexport class SolutionService {\r\n\r\n  constructor() { }\r\n\r\n  getGuid() {\r\n    return (this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + this.s4() + this.s4());\r\n  }\r\n\r\n  private s4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  }\r\n  /**\r\n  * æ ¹æ®å­æ®µè·åLableæ§ä»¶çTitle\r\n  * @param field \r\n  */\r\n  getConditionItemTitle(field: QueryCondition) {\r\n    if (field.id && field.id !== '') {\r\n      return field.fieldName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ°ç»åé ä¹å¯ä½¿ç¨JSON.Parse(JSON.Stringify([input])),åæç±»ç»æä¸­æ²¡æåå£\r\n   * @param input \r\n   */\r\n  arrayClone(input: Array<any>): Array<any> {\r\n    let result = new Array<any>();\r\n    if (input && input.length > 0) {\r\n      input.forEach(element => {\r\n        result.push(Object.assign({}, element));\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-input',\r\n    templateUrl: './input.component.html'\r\n})\r\n\r\nexport class InputComponent implements OnInit,OnChanges,AfterViewInit{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n    \r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        //console.log(this.item);\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // if(!this.extend){\r\n        //     const El = this.element.nativeElement;\r\n        //     const itemWidth = El.clientWidth;\r\n        //     El.querySelector('.list-filter-input-item').style.width = itemWidth + 'px';\r\n        //     El.querySelector('.input-item-btns').style.width = itemWidth + 100 + 'px';\r\n        // }\r\n    }\r\n    ngOnChanges(): void {\r\n        \r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    InputChanged(e){\r\n        // let keycode = window.event ? e.keyCode : e.which;\r\n        // if(keycode == 13){//åè½¦é®\r\n        //     this.searchHandle.emit(this.item.value.value);\r\n        // }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(this.item.value.value);\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { NumberRangeValue, NumberRangeValueConvertor } from '../../entity/conditionvalue/numberrangevaue';\r\n// import { NumberRangeValue } from '../../entity/conditionvalue/numberrangevaue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-number',\r\n    templateUrl: './number.component.html'\r\n})\r\n\r\nexport class NumberComponent implements OnInit,AfterViewInit{\r\n   \r\n    // @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    canNull:boolean = true;\r\n\r\n    number:string;\r\n    beginValue: any;\r\n    endValue: any;\r\n    precision: number;\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    bigNumber:boolean;\r\n    max:number;\r\n    min:number;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    numberRange: string;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if(!this.bigNumber){\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n        this.constructMultiFieldNumberRange(nr.value as NumberRangeValue);\r\n        if(this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this._item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.beginPlaceHolder = this.item.beginPlaceHolder || '';\r\n            this.endPlaceHolder = this.item.endPlaceHolder || '';\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n\r\n    constructMultiFieldNumberRange(value: NumberRangeValue) {\r\n        this.beginValue = value.startValue == null ? null : value.startValue;\r\n        this.endValue = value.endValue == null ? null : value.endValue;\r\n      }\r\n\r\n    numberChange(event){\r\n        if(event){\r\n            const dataArray = event.split(\"~\");\r\n            this._item.value.startValue = dataArray[0] ? dataArray[0] : null;\r\n            this._item.value.endValue = dataArray[1] ? dataArray[1] : null;\r\n        }\r\n        else{\r\n            this._item.value.startValue = null;\r\n            this._item.value.endValue = null;\r\n        }\r\n        if (Object.keys(this._item.value).length === 0 || (this._item.value.startValue == null && this._item.value.endValue == null)) {\r\n            this._item.valueText = ''\r\n        } else if (this._item.value.startValue == null) {\r\n            this._item.valueText = '~' + this._item.value.endValue;\r\n        } else if (this._item.value.endValue == null) {\r\n            this._item.valueText = this._item.value.startValue + '~';\r\n        } else {\r\n            this._item.valueText = this._item.value.startValue + '~' + this._item.value.endValue;\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange($event) {\r\n        this.beginValue = $event;\r\n    }\r\n\r\n    endValueChange($event) {\r\n        this.endValue = $event;\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { DropDownControl } from '../../entity/controltype/dropdownlist/dropdowncontrol';\r\nimport { EnumType } from '../../entity/controltype/dropdownlist/enumtype';\r\nimport { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';\r\nimport { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';\r\nimport { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-dropdown',\r\n    templateUrl: './dropdown.component.html'\r\n})\r\n\r\nexport class DropDownComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() enableClear = true;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    dropDownListDataSource:Array<any>=new Array<any>();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    \r\n    selectedItemId: any;\r\n    placeholder: string;\r\n\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        // this.getDataSource();\r\n        // const initialValue = this.item.value as DropDownListValue;\r\n        // initialValue.value && (this.selectedItemId = initialValue.value.getEnumValue());\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        this.getDataSource();\r\n        const initialValue = this.item.value as DropDownListValue;\r\n        initialValue.value && (this.selectedItemId = initialValue.value);\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        \r\n        // this.testId = this.solutionService.getGuid();\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n        //console.log(this.dropDownListDataSource);\r\n    }\r\n\r\n    getDataSource(){\r\n        if(this.item&&this.item.value\r\n            &&this.item.control&&this.item.control.getControlType()==ControlType.DropDown){\r\n                let dropDownList=(this.item.control as DropDownControl);\r\n                if(dropDownList.valueType==EnumType.BoolType){\r\n                    this.dropDownListDataSource=Array<EnumBoolValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumBoolValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n                else if(dropDownList.valueType==EnumType.IntType){\r\n                    this.dropDownListDataSource=Array<EnumIntegerValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumIntegerValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n                else if(dropDownList.valueType==EnumType.StringType){\r\n                    this.dropDownListDataSource=Array<EnumStringValue>();\r\n                    if(dropDownList.enumValues&&dropDownList.enumValues.length>0){\r\n                        dropDownList.enumValues.forEach(element => {\r\n                            this.dropDownListDataSource.push(Object.assign(new EnumStringValue(),element));\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        if(event){\r\n            (this.item.value as DropDownListValue).value = event.data.value;\r\n        }else{\r\n            (this.item.value as DropDownListValue).value = '';\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    onClear(event){\r\n        (this.item.value as DropDownListValue).value = '';\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-search',\r\n    templateUrl: './search.component.html'\r\n})\r\n\r\nexport class SearchComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    groupIcon = '<span class=\"k-icon k-i-search\"></span>';\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        \r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch($event){\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit($event);\r\n    }\r\n}","import { CheckboxIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class CheckboxValue implements CheckboxIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { CheckboxGroupControl } from '../../entity/controltype/checkbox/checkboxcontrol';\r\nimport { CheckboxValue } from '../../entity/controltype/checkbox/checkboxvalue';\r\nimport { CheckboxGroupValue } from '../../entity/conditionvalue/checkboxgroupvalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-checkbox',\r\n    templateUrl: './checkbox.component.html'\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class filterCheckboxComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    boolcheck:boolean = false;\r\n    checkValue: any[];\r\n    indeterminate:boolean = true;\r\n    boolchecked:boolean;\r\n    boolCheckState:string = 'indeterminate';\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checkboxgroup') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    checkboxDataSource:Array<any>=new Array<any>();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        //this.checkValue = this.item.value.getOriginalValue();\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            this.boolcheck = this.item.control.boolcheck;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n        this.getDataSource();\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n    }\r\n\r\n    getDataSource(){\r\n        this.checkValue = this.item.value.getOriginalValue();\r\n        if(this.boolcheck){\r\n            if(this.checkValue.length) {\r\n                this.boolchecked = this.checkValue[0];\r\n                if(this.boolchecked) this.boolCheckState = 'checked';\r\n                else this.boolCheckState = 'unchecked';\r\n            }\r\n            else this.boolCheckState = 'indeterminate';\r\n        }\r\n        if(this.item && this.item.control && this.item.control.getControlType()==ControlType.CheckboxGroup){\r\n            let checkboxList=(this.item.control as CheckboxGroupControl);\r\n            this.checkboxDataSource = Array<CheckboxValue>();\r\n\r\n            if(checkboxList.enumValues && checkboxList.enumValues.length>0){\r\n                checkboxList.enumValues.forEach(element => {\r\n                    this.checkboxDataSource.push(Object.assign(new CheckboxValue(),element));\r\n                });\r\n            }\r\n        }\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n        //     this.extend = this.item.control.isExtend;\r\n        // }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        let checkboxValue = [];\r\n        if(event){\r\n            // let checkboxList = event.split(',');\r\n            let checkboxList = event;\r\n            if(checkboxList && checkboxList.length){\r\n                checkboxValue = checkboxList;\r\n            }\r\n            this.item.value.value = checkboxValue;\r\n        }\r\n        else{\r\n            this.item.value.value = new CheckboxGroupValue();\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    handleClick() {\r\n        if(this.boolCheckState == 'indeterminate'){\r\n            this.boolCheckState = 'checked';\r\n            this.boolchecked = true;\r\n            this.item.value.value = [true];\r\n        }\r\n        else if(this.boolCheckState == 'checked'){\r\n            this.boolCheckState = 'unchecked';\r\n            this.boolchecked = false;\r\n            this.item.value.value = [false];\r\n        }\r\n        else if(this.boolCheckState == 'unchecked'){\r\n            this.boolCheckState = 'indeterminate';\r\n            this.boolchecked = null;\r\n            this.item.value.value = [];\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { DateRangeValue } from '../../entity/conditionvalue/daterangevalue';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-daterange',\r\n    templateUrl: './daterange.component.html'\r\n})\r\n\r\nexport class DateRangeComponent implements OnInit,OnChanges{\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() showTime:boolean;\r\n    @Input() showType:string;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    startTime:Date;\r\n    endTime:Date;\r\n    //TODO: need 2 placeholder text for date range\r\n    // rangeDate = {\r\n    //     begin:null,\r\n    //     end:null\r\n    // };\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n\r\n    rangeDate: string;\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    dateFormat:string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.initDate();\r\n        if(this.item){\r\n            this.beginPlaceHolder = this.item.beginPlaceHolder || '';\r\n            this.endPlaceHolder = this.item.endPlaceHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n            // const beginplac = Object.prototype.toString.call(this.item.beginPlaceHolder);\r\n            // if(beginplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.beginPlaceHolder = this.item.control.beginPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.beginPlaceHolder = this.item.beginPlaceHolder;\r\n            // }\r\n            // const endplac = Object.prototype.toString.call(this.item.endPlaceHolder);\r\n            // if(endplac == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.endPlaceHolder = this.item.control.endPlaceHolder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.endPlaceHolder = this.item.endPlaceHolder;\r\n            // }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.initDate();\r\n    }\r\n\r\n    initDate(){\r\n        // if(this.item && this.item.control && this.item.control.hasOwnProperty('format') && this.item.control.format){\r\n        //     this.dateFormat = this.item.control.format;\r\n        //     if(this.showTime){\r\n        //         if(this.dateFormat.length > 0 && this.dateFormat.indexOf('HH:mm') == -1){\r\n        //             this.dateFormat = this.dateFormat + ' HH:mm:ss';\r\n        //         }\r\n        //     }\r\n        // }\r\n        // else{\r\n        //     this.dateFormat = this.showTime? 'yyyy-MM-dd HH:mm:ss':'yyyy-MM-dd';\r\n        // }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('format')){\r\n            let itemDateFormat = this.item.control.format;\r\n            if(this.showTime){\r\n                if(itemDateFormat.length > 0 && itemDateFormat.indexOf('HH:mm') == -1){\r\n                    itemDateFormat = itemDateFormat + ' HH:mm:ss';\r\n                }\r\n            }\r\n            const format = this.showTime ? 'yyyy-MM-dd HH:mm:ss': (this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd'));\r\n            this.dateFormat = itemDateFormat?itemDateFormat:format;\r\n        }\r\n        const rangeDateValue : DateRangeValue = this.item && this.item.value;\r\n        if(rangeDateValue.startTime && rangeDateValue.endTime){\r\n            this.rangeDate = `${rangeDateValue.startTime}~${rangeDateValue.endTime}`;\r\n        }\r\n    }\r\n\r\n    getDate(dateString:Date):Date{\r\n        // let arr1:Array<any> = dateString.split(\" \"); \r\n        // let sdate = arr1[0].split('-'); \r\n        // let date = new Date(sdate[0], sdate[1]-1, sdate[2]);\r\n        let date = new Date(dateString); \r\n        return date;\r\n    }\r\n   \r\n    onDateChange(event:any){\r\n        if(event.returnFormatted){\r\n            (this.item.value as DateRangeValue).startTime = event.returnFormatted.split('~')[0];\r\n            (this.item.value as DateRangeValue).endTime = event.returnFormatted.split('~')[1];\r\n        }else{\r\n            // this.item.value = new DateRangeValue();\r\n            this.item.value.startTime = '';\r\n            this.item.value.endTime = '';\r\n        }\r\n        this.item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(event);\r\n    }\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { HelpContol } from '../../entity/controltype/help/helpcontrol';\r\nimport { IControl } from '../../entity/controltype/icontrol';\r\nimport { deepCopy } from '../../utils';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { HelpValue } from '../../entity/conditionvalue/helpvalue';\r\nimport { DisplayType } from '../../entity/controltype/help/displayType';\r\n\r\n// import { ServerSideToken } from '@farris/ui-lookup';\r\n// import { LookupHttpBeQueryService } from './service/Lookup-http.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-filter-help',\r\n    templateUrl: './help.component.html'\r\n    // providers: [{ provide: ServerSideToken, useClass: LookupHttpBeQueryService }]\r\n})\r\n\r\nexport class HelpComponent implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item: any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() hostRef: any;\r\n\r\n    @Input() instanceId: string;\r\n\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    uri: string;\r\n    textField: string;\r\n    idField: string;\r\n    valueField: any;\r\n    textValue: any;\r\n    displayType: DisplayType;\r\n    mapFields: any;\r\n    context: any;\r\n    preEventCmd: any;\r\n    postEventCmd: any;\r\n    enableFullTree: boolean;\r\n    loadTreeDataType: 'default' | 'loadall' | 'layerload';\r\n    singleSelect: boolean;\r\n    expandLevel: number;\r\n    enableCascade: boolean;\r\n    helpId: string;\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    placeholder: string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.item) {\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        this.getHelpBindingInfo();\r\n        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this.item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getHelpBindingInfo();\r\n    }\r\n\r\n    selectedDataHandler(selectedItem: any) {\r\n        // console.log(selectedItem);\r\n        //    let mapFields=new Function('return'+(this.item.control as HelpContol).mapFields);\r\n        //    let mapFieldsKeys=Object.keys(mapFields());\r\n        //    (this.item.value as HelpValue).value=new Object();\r\n        //    mapFieldsKeys.forEach(mapFeildKey => {\r\n        //     (this.item.value as HelpValue).value[mapFeildKey]=selectedItem[mapFeildKey];\r\n        //    });\r\n        //    (this.item.value as HelpValue).valueField=(this.item.control as HelpContol).valueField;\r\n        //    let textField=(this.item.control as HelpContol).textField;\r\n        //    this.textValue=(this.item.value as HelpValue).value[textField];\r\n\r\n        const helpValue = (this.item.value as HelpValue);\r\n        helpValue.value = this.singleSelect ? [selectedItem] : selectedItem;//åéè¿åå¯¹è±¡ï¼å¤éè¿åæ°ç»\r\n        helpValue.valueField = this.valueField;\r\n        helpValue.textValue = helpValue.getTextValue(this.textField);\r\n        this.textValue = helpValue.textValue;\r\n        // this.conditionChange.emit();\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n\r\n    }\r\n\r\n    getHelpBindingInfo() {\r\n        if (this.item && this.item.control && this.item.control.getControlType() == ControlType.Help) {\r\n            let helpList = (this.item.control as HelpContol);\r\n            this.uri = helpList.uri;\r\n            this.textField = helpList.textField;\r\n            this.valueField = helpList.valueField;\r\n            this.idField = helpList.idField;\r\n            this.mapFields = helpList.mapFields;\r\n            this.context = helpList.context;\r\n            this.preEventCmd = helpList.preEventCmd;\r\n            this.postEventCmd = helpList.postEventCmd;\r\n\r\n            if (helpList.preEventCmd) {\r\n                this.preEventCmd = (e) => {\r\n                    e['hostRef'] = this.hostRef;\r\n                    return helpList.preEventCmd(e);\r\n                };\r\n            }\r\n\r\n            if (helpList.postEventCmd) {\r\n                this.postEventCmd = (e) => {\r\n                    let selectItem = deepCopy(e);\r\n                    selectItem['hostRef'] = this.hostRef;\r\n                    return helpList.postEventCmd(selectItem);\r\n                };\r\n            }\r\n\r\n\r\n            this.singleSelect = helpList.singleSelect;\r\n            this.enableFullTree = helpList.enableFullTree;\r\n            this.loadTreeDataType = helpList.loadTreeDataType;\r\n            this.expandLevel = helpList.expandLevel;\r\n            this.enableCascade = helpList.enableCascade;\r\n            this.helpId = helpList.helpId;\r\n            const helpValue = (this.item.value as HelpValue);\r\n            // if (helpValue && helpValue.value) {\r\n            //     // this.textValue = (this.item.value as HelpValue).value[this.textField];\r\n            //     this.textValue = HelpValue.getPropValue(helpValue.value, this.textField.split('.'));\r\n            // }\r\n            this.displayType = helpList.displayType;\r\n            if (helpValue.textValue == 'help-text-value-null') {// æ§æ°æ®å¼å®¹\r\n                this.textValue = helpValue.getTextValue(this.textField);\r\n            } else {\r\n                this.textValue = helpValue.textValue;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch = () => {\r\n        if (this.disabled) { return; }\r\n        this.searchHandle.emit();\r\n        return of(true);\r\n    }\r\n\r\n    // clearData(event){\r\n    //     (this.item.value as HelpValue).value = null;\r\n    //     (this.item.value as HelpValue).valueField = null;\r\n    //     this.searchHandle.emit();\r\n    // }\r\n\r\n    clearData(data: any) {\r\n        (this.item.value as HelpValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n}\r\n","import { Component, Input, OnInit, OnChanges, HostBinding, Output, EventEmitter} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { DateValue } from '../../entity/conditionvalue/datevalue';\r\n\r\n@Component({\r\n    selector: 'app-filter-date',\r\n    templateUrl: './date.component.html'\r\n})\r\n\r\nexport class DateComponent implements OnInit,OnChanges{\r\n\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Input() showType:string;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    // time:Date;\r\n    date: string;\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    placeholder: string;\r\n    dateFormat:string;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.initDate();\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder || '';\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.initDate();\r\n    }\r\n\r\n    initDate(){\r\n        // if(this.item && this.item.value.value){\r\n        //     //this.time = this.getDate((this.item.value as DateValue).value);\r\n        //     this.time = (this.item.value as DateValue).value;\r\n        // }\r\n\r\n        if(this.item&&this.item.value\r\n        &&(this.item.value as DateValue).value){\r\n            this.date = this.item.value.getOriginalValue();\r\n        }else{\r\n            this.date = undefined;\r\n        }\r\n\r\n        const format = this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd');\r\n        this.dateFormat = this.item.control.format?this.item.control.format: format;\r\n\r\n    }\r\n\r\n    // getDate(dateString:string):Date{\r\n    //     let arr1:Array<any> = dateString.split(\" \"); \r\n    //     let sdate = arr1[0].split('-'); \r\n    //     let date = new Date(sdate[0], sdate[1]-1, sdate[2]); \r\n    //     return date;\r\n    // }\r\n   \r\n    onDateChange(event:any){\r\n        // console.log(event);\r\n        if(event.returnFormatted){\r\n            (this.item.value as DateValue).value = event.returnFormatted;\r\n        }else{\r\n            (this.item.value as DateValue).value = '';\r\n            // this.item.value = new DateValue();\r\n        }\r\n        this.item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit(event);\r\n    }\r\n\r\n    // getConditionItemStyle(field: QueryCondition, controlType: any) {\r\n    //     return this.solutionService.getConditionItemStyle(field,controlType);\r\n    // }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { QueryCondition } from './entity/querycondition';\r\nimport { ControlType } from './entity/controltype';\r\n\r\n@Pipe({name: 'controlType'})\r\nexport class ControlTypeXPipe implements PipeTransform {\r\n    transform(value: QueryCondition): Array<any> {\r\n        let type;\r\n        switch(value.control.getControlType()){\r\n            case ControlType.Text:\r\n                type = 'input';\r\n                break;\r\n            case ControlType.Search:\r\n                type = 'search';\r\n                break;\r\n            case ControlType.Date:\r\n                type = 'date';\r\n                break;\r\n            case ControlType.Year:\r\n                type = 'year';\r\n                break;\r\n            case ControlType.Month:\r\n                type = 'month';\r\n                break;\r\n            case ControlType.MonthRange:\r\n                type = 'monthrange';\r\n                break;\r\n            case ControlType.YearRange:\r\n                type = 'yearrange';\r\n                break;\r\n            case ControlType.DateRange:\r\n                type = 'daterange';\r\n                break;\r\n            case ControlType.DateRangeTime:\r\n                type = 'daterangetime';\r\n                break;\r\n            case ControlType.DropDown:\r\n                type = 'dropdown';\r\n                break;\r\n            case ControlType.NumberRange:\r\n                type = 'number';\r\n                break;\r\n            case ControlType.Help:\r\n                type = 'help';\r\n                break;\r\n            case ControlType.CheckboxGroup:\r\n                type = 'checkboxgroup';\r\n                break; \r\n            case ControlType.Radio:\r\n                type = 'radio';\r\n                break;\r\n            case ControlType.InputGroup:\r\n                type = 'input-group';\r\n                break;\r\n            case ControlType.Number:\r\n                type = 'singlenumber';\r\n                break;\r\n            case ControlType.FlexibleNumber:\r\n                type = 'flexiblenumber';\r\n                break;\r\n            case ControlType.FlexibleDate:\r\n                type = 'flexibledate';\r\n                break;\r\n            case ControlType.BoolCheck:\r\n                type = 'bool-check';\r\n                break;\r\n            default:\r\n                type = 'input';\r\n                break;     \r\n        }\r\n        return type;\r\n    }\r\n}\r\n","import { RadioIEnumValue } from \"./ienumvalue\";\r\n\r\n/**\r\n * checboxgroupç±»å\r\n */\r\nexport class RadioValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","import { Component, Input, OnInit, OnChanges, ViewEncapsulation, HostBinding, EventEmitter, Output} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { ControlType } from '../../entity/controltype';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { RadioGroupValue } from '../../entity/conditionvalue/radiovalue';\r\nimport { RadioValue } from '../../entity/controltype/radio/radiovalue';\r\nimport { RadioControl } from '../../entity/controltype/radio/radiocontrol';\r\n\r\n@Component({\r\n    selector: 'app-filter-radio',\r\n    templateUrl: './radio.component.html'\r\n    // encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class filterRadioComponent implements OnInit,OnChanges{\r\n   \r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    radioValue: any[];\r\n\r\n    selectCheck = [];\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checbox-wrap')\r\n    get isCheckExtend(): boolean {\r\n        return !this.extend;\r\n    }\r\n\r\n    @HostBinding('class.filter-item-checkboxgroup') cla = true;\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    radioDataSource:Array<any>=new Array<any>();\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.getDataSource();\r\n        this.radioValue = this.item.value.getOriginalValue();\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.getDataSource();\r\n    }\r\n\r\n    getDataSource(){\r\n        if(this.item && this.item.control && this.item.control.getControlType()==ControlType.Radio){\r\n            let radioboxList=(this.item.control as RadioControl);\r\n            this.radioDataSource = Array<RadioValue>();\r\n\r\n            if(radioboxList.enumValues && radioboxList.enumValues.length>0){\r\n                radioboxList.enumValues.forEach(element => {\r\n                    this.radioDataSource.push(Object.assign(new RadioValue(),element));\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    onSearch(event){\r\n        if(event){\r\n            this.item.value.value = event;\r\n        }\r\n        else{\r\n            this.item.value.value = new RadioGroupValue();\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, OnChanges, EventEmitter, Output, HostBinding} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { InputGroupControl } from '../../entity/controltype/input-group/inputgroupcontrol';\r\nimport { InputGroupValue } from '../../entity/conditionvalue/inputgroup';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-inputgroup',\r\n    templateUrl: './inputgroup.component.html',\r\n})\r\n\r\nexport class SimpleInputGroupComponent implements OnInit{\r\n    /**\r\n     * QueryConditionç±»å\r\n     */\r\n    _item: QueryCondition;\r\n\r\n    testId: string;\r\n\r\n    usageMode: string;\r\n\r\n    dialogOptions: any;\r\n\r\n    @Input()\r\n    set item(textItem: any) {\r\n        this._item = textItem;\r\n    }\r\n    get item(): any{\r\n        return this.constructTextItem(this._item);\r\n    }\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    \r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    textField: string;\r\n    isTextFromDialog: boolean = false;\r\n    textFormDialog: string;\r\n\r\n    constructTextItem(textItem: QueryCondition): QueryCondition {\r\n        const textValueObj = textItem.value as InputGroupValue;\r\n        textValueObj.textValue = textValueObj.textValue && textValueObj.textValue.trim();\r\n        textItem.value = textValueObj;\r\n        return textItem;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService){}\r\n\r\n    ngOnInit(): void {\r\n        this.testId = this.solutionService.getGuid();\r\n        this.getInputGroupBindingInfo();\r\n\r\n        if(this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this.item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this.item.control.showLabel;\r\n            }\r\n        }\r\n    }\r\n\r\n    getInputGroupBindingInfo() {\r\n        const inputGroupControl = (this.item.control as InputGroupControl);\r\n        this.usageMode = inputGroupControl.usageMode;\r\n        if(this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            this.dialogOptions = inputGroupControl.dialogOptions;\r\n            /*\r\n                example of dialogOptions = {\r\n                   modalId: \"1e011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n                   mapFields: {hDepartment: \"Name\"}\r\n                   title: \"æµè¯æ é¢æ \"\r\n                   width: 800\r\n                   height: 600\r\n                }\r\n             */\r\n            if(this.dialogOptions.mapFields){\r\n                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('\"')[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    \r\n    /*\r\n        dialogOptions = {\r\n            modalId: \"ae011720-eb0f-4c9c-82b6-6844c89b2303\"\r\n            mapFields: {hDepartment: \"Name\"}\r\n            title: \"æµè¯æ é¢æ \"\r\n            width: 800\r\n            height: 600\r\n            showButtons: true\r\n            buttons: [\r\n                { text: \"ç¡®å®\", cls: \"btn-primary\", handle: _this.viewModel.rootviewmodelconfirm1 },\r\n                { text: \"åæ¶\", cls: \"btn-secondary\", handle: _this.viewModel.rootviewmodelcancel1}\r\n            ]\r\n        }\r\n    */\r\n   onClick(event: any){\r\n        if(this.usageMode == 'text'){\r\n            this.item.control.click();\r\n        }\r\n        else{\r\n            const options = this.dialogOptions;\r\n            options.handle = (selectedItem) => {\r\n                // let modalData = item[0];\r\n                // this.item.value.value = modalData[this.targetField];\r\n                let selectedItems = selectedItem.filter(n => n);\r\n                if(selectedItems && this.textField){\r\n                    this.item.value.value = selectedItems;\r\n                    this.item.value.textValue = this.item.value.getTextValue(this.textField);\r\n                    this.item.value.textField = this.textField;\r\n                    this.item.value.isInputText = false;\r\n\r\n                    this.isTextFromDialog = true;\r\n                    this.textFormDialog = this.item.value.textValue;\r\n                }\r\n            }\r\n            this.item.control.click({event, options});\r\n        }\r\n    }\r\n\r\n    onBlur(event){\r\n        if(this.disabled){return;}\r\n        if(this.usageMode == 'text') {\r\n            this.item.value.isInputText = true;\r\n        }\r\n        if(this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {\r\n            if(!this.isTextFromDialog) {\r\n                this.item.value.isInputText = true;\r\n            }\r\n            if(this.item.value.textValue != this.textFormDialog){\r\n                this.isTextFromDialog = false;\r\n                this.item.value.value = [];\r\n                this.item.value.textField = undefined;\r\n                this.item.value.isInputText = true;\r\n            }\r\n        }\r\n        this.searchHandle.emit(event);\r\n    }\r\n\r\n    onClear() {\r\n        (this.item.value as InputGroupValue).clearValue();\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, ElementRef} from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-single-number',\r\n    templateUrl: './number.component.html'\r\n})\r\n\r\nexport class SingleNumberComponent implements OnInit{\r\n   \r\n    // @Input() item:any;\r\n    @Input() autoLabel:boolean;\r\n    @Input() disabled:boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend:boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel:boolean = true;\r\n    canNull:boolean = true;\r\n\r\n    number:string;\r\n    precision: number;\r\n    placeholder: string;\r\n    bigNumber:boolean;\r\n    max:number;\r\n    min:number;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    numberRange: string;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if(this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')){\r\n            this.extend = this._item.control.isExtend;\r\n            if(!this.extend){\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n        if(!this.bigNumber){\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n    }\r\n\r\n    get item(){\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService:SolutionService,private readonly element: ElementRef){}\r\n\r\n    ngOnInit(): void {\r\n        if(this.item){\r\n            this.placeholder = this.item.placeHolder;\r\n            // const type = Object.prototype.toString.call(this.item.placeHolder);\r\n            // if(type == '[object Undefined]'){\r\n            //     if(this.item.control && this.item.control.hasOwnProperty('placeholder')){\r\n            //         this.placeholder = this.item.control.placeholder;\r\n            //     }\r\n            // }\r\n            // else{\r\n            //     this.placeholder = this.item.placeHolder;\r\n            // }\r\n        }\r\n    }\r\n\r\n    getConditionItemTitle(field:QueryCondition){\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    numberChange(event){\r\n        this.item.value.value = event;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n}","import { Component, Input, OnInit, HostBinding, EventEmitter, Output, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { FlexibleNumberValue } from '../../entity/conditionvalue/flexiblenumbervalue';\r\n\r\n\r\n@Component({\r\n    selector: 'app-filter-flexiblenumber',\r\n    templateUrl: './flexiblenumber.component.html'\r\n})\r\n\r\nexport class FlexibleNumberComponent implements OnInit, AfterViewInit {\r\n\r\n    // @Input() item:any;\r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n    canNull: boolean = true;\r\n\r\n    number: string;\r\n    value: any;\r\n    beginValue: any;\r\n    endValue: any;\r\n    precision: number;\r\n    placeholder: string;\r\n    beginPlaceHolder: string;\r\n    endPlaceHolder: string;\r\n    bigNumber: boolean;\r\n    max: number;\r\n    min: number;\r\n    single: boolean;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    @Input()\r\n    set item(nr: any) {\r\n        this._item = nr;\r\n        this.precision = nr.control.precision;\r\n        this.bigNumber = nr.control.bigNumber;\r\n        if (!this.bigNumber) {\r\n            this.min = -2147483648;\r\n            this.max = 2147483647;\r\n        }\r\n        if (this._item && this._item.control && this._item.control.hasOwnProperty('isExtend')) {\r\n            this.extend = this._item.control.isExtend;\r\n            if (!this.extend) {\r\n                this.showlabel = this._item.control.showLabel;\r\n            }\r\n        }\r\n        this.beginPlaceHolder = (this._item.hasOwnProperty('beginPlaceHolder') && this._item.beginPlaceHolder) ? this._item.beginPlaceHolder : this.localeService.getValue('filterPanel.beginPlaceHolder');\r\n        this.endPlaceHolder = (this._item.hasOwnProperty('endPlaceHolder') && this._item.beginPlaceHolder) ? this._item.endPlaceHolder : this.localeService.getValue('filterPanel.endPlaceHolder');\r\n        this.placeholder = (this._item.hasOwnProperty('placeHolder') && this._item.placeHolder) ? this._item.placeHolder : '';\r\n        this.single = this._item.control.single;\r\n        this._item.value.single = this.single;\r\n        this.constructMultiFieldNumberRange(nr.value as FlexibleNumberValue);\r\n    }\r\n\r\n    get item() {\r\n        return this._item;\r\n    }\r\n\r\n    constructor(private solutionService: SolutionService, private readonly element: ElementRef, private localeService: LocaleService) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngAfterViewInit() { }\r\n\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n\r\n    constructMultiFieldNumberRange(value: FlexibleNumberValue) {\r\n        if (this.single) {\r\n            this.value = value.value == null ? null : value.value;\r\n        }\r\n        else {\r\n            this.beginValue = value.startValue == null ? null : value.startValue;\r\n            this.endValue = value.endValue == null ? null : value.endValue;\r\n        }\r\n    }\r\n\r\n    numberChange(event) {\r\n        if (event) {\r\n            this._item.value.value = event;\r\n        }\r\n        else {\r\n            this._item.value.value = null;\r\n        }\r\n        if (Object.keys(this._item.value).length === 0) {\r\n            this._item.valueText = ''\r\n        }\r\n        else {\r\n            this._item.valueText = '' + this._item.value.value;\r\n        }\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange(event) {\r\n        this._item.value.startValue = event;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    endValueChange(event) {\r\n        this._item.value.endValue = event;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n    setValueText() {\r\n        if (Object.keys(this._item.value).length === 0 || (this._item.value.startValue == null && this._item.value.endValue == null)) {\r\n            this._item.valueText = ''\r\n        }\r\n        else if (this._item.value.startValue == null) {\r\n            this._item.valueText = '~' + this._item.value.endValue;\r\n        }\r\n        else if (this._item.value.endValue == null) {\r\n            this._item.valueText = this._item.value.startValue + '~';\r\n        }\r\n        else {\r\n            this._item.valueText = this._item.value.startValue + '~' + this._item.value.endValue;\r\n        }\r\n    }\r\n}","import { Component, Input, OnInit, EventEmitter, Output, HostBinding} from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { QueryCondition } from '../../entity/querycondition';\r\nimport { SolutionService } from '../../service/solution.service';\r\n\r\n@Component({\r\n    selector: 'app-filter-flexibledate',\r\n    templateUrl: './flexibledate.component.html'\r\n})\r\n\r\nexport class FlexibleDateComponent implements OnInit{\r\n   \r\n    @Input() autoLabel: boolean;\r\n    @Input() disabled: boolean;\r\n    @Output('searchHandle') searchHandle = new EventEmitter();\r\n\r\n    /**å¤æ­æ¯å¦æ¯å¨æ©å±åºåå±ç¤º */\r\n    extend: boolean = false;\r\n    /**å¤æ­æ¯å¦æ¾ç¤ºlabel */\r\n    showlabel: boolean = true;\r\n\r\n    placeholder: string;\r\n    beginPlaceHolder:string;\r\n    endPlaceHolder:string;\r\n    single:boolean;//æ¯å¦ä¸ºåæ¥æ\r\n    showTime: boolean;//æ¯å¦æ¾ç¤ºæ¶é´\r\n    showType:string;//æ¾ç¤ºç±»å\r\n    dateFormat: string;//æ ¼å¼\r\n    value: Date;\r\n    startValue: Date;\r\n    endValue: Date;\r\n\r\n    @HostBinding('class.filter-item-wrap')\r\n    get isExtend(): boolean {\r\n        return !this.extend && this.autoLabel;\r\n    }\r\n    @HostBinding('class.filter-item-hiddenlabel')\r\n    get hidenLabel(): boolean {\r\n        return !this.showlabel;\r\n    }\r\n\r\n    _item: any;\r\n    @Input() \r\n    set item(nr: any){\r\n        this._item = nr;\r\n        if(this._item){\r\n            if(!this._item.hasOwnProperty('value')) {\r\n                this._item.value = {\r\n                    startValue : null,\r\n                    endValue : null,\r\n                    value: null,\r\n                    single:true\r\n                }\r\n            }\r\n            if(!this._item.control.hasOwnProperty('single')) {\r\n                this._item.control.single = true;\r\n            }\r\n            this.beginPlaceHolder = (this._item.hasOwnProperty('beginPlaceHolder') && this._item.beginPlaceHolder) ? this._item.beginPlaceHolder: this.localeService.getValue('filterPanel.dateBeginPlaceHolder');\r\n            this.endPlaceHolder = (this._item.hasOwnProperty('endPlaceHolder') && this._item.beginPlaceHolder) ? this._item.endPlaceHolder: this.localeService.getValue('filterPanel.dateEndPlaceHolder');\r\n            this.placeholder = (this._item.hasOwnProperty('placeHolder') && this._item.placeHolder) ? this._item.placeHolder:'';\r\n            this.single = this._item.control.single;\r\n            this._item.value.single = this.single;\r\n            this.showTime = (this._item.control.hasOwnProperty('showTime') && this._item.control.showTime) ? this._item.control.showTime:'';\r\n            this.showType = (this._item.control.hasOwnProperty('showType') && this._item.control.showType) ? this._item.control.showType:'';\r\n            let itemDateFormat = this._item.control.format;\r\n            if(this.showTime && itemDateFormat){\r\n                if(itemDateFormat.length > 0 && itemDateFormat.indexOf('HH:mm') == -1){\r\n                    itemDateFormat = itemDateFormat + ' HH:mm:ss';\r\n                }\r\n            }\r\n            const format = this.showTime ? 'yyyy-MM-dd HH:mm:ss': (this.showType == '2'? 'yyyy-MM': (this.showType == '3'? 'yyyy':'yyyy-MM-dd'));\r\n            this.dateFormat = itemDateFormat?itemDateFormat:format;\r\n        }\r\n        this.constructMultiFieldDateRange(nr.value);\r\n    }\r\n    get item(){\r\n        return this._item;\r\n    }\r\n    constructor(private localeService: LocaleService,private solutionService: SolutionService){}\r\n\r\n    ngOnInit(): void {}\r\n    getConditionItemTitle(field: QueryCondition) {\r\n        return this.solutionService.getConditionItemTitle(field);\r\n    }\r\n    constructMultiFieldDateRange(value) {\r\n        if(this.single){\r\n            this.value = value.value == null ? null : value.value;\r\n        }\r\n        else{\r\n            this.startValue = value.startValue == null ? null : value.startValue;\r\n            this.endValue = value.endValue == null ? null : value.endValue;\r\n        }\r\n    }\r\n\r\n    onDateChange(event:any){\r\n        this._item.value.value = event.returnFormatted ? event.returnFormatted :null;\r\n        this._item.valueText = event.formatted;\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    beginValueChange(event) {\r\n        this._item.value.startValue = event.returnFormatted ? event.returnFormatted : null;\r\n        this._item.value.startValueText = event.formatted;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    endValueChange(event) {\r\n        this._item.value.endValue = event.returnFormatted ? event.returnFormatted : null;\r\n        this._item.value.endValueText = event.formatted;\r\n        this.setValueText();\r\n        if(this.disabled){return;}\r\n        this.searchHandle.emit();\r\n    }\r\n\r\n    setValueText(){\r\n        if (Object.keys(this._item.value).length === 0 || (!this._item.value.startValue && !this._item.value.endValue)) {\r\n            this._item.valueText = ''\r\n        }\r\n        else if(!this._item.value.startValueText){\r\n            this._item.valueText = '~' + this._item.value.endValueText;\r\n        }\r\n        else if(!this._item.value.endValueText){\r\n            this._item.valueText = this._item.value.startValueText + '~';\r\n        }\r\n        else{\r\n            this._item.valueText = this._item.value.startValueText + '~' + this._item.value.endValueText;\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FilterComponent } from './filter.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FarrisSidebarModule } from '@farris/ui-sidebar';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\nimport { FilterPanelModule } from '@farris/ui-filter-panel';\r\nimport { FilterConditionModule, QuerySolutionService } from '@farris/ui-filter-condition';\r\n\r\nimport { ConvertorService } from './service/convertorservice';\r\nimport { InputComponent } from './components/inputcomponent/input.component';\r\nimport { NumberComponent } from './components/numbercomponent/number.component';\r\nimport { DropDownComponent } from './components/dropdowncomponent/dropdown.component';\r\nimport { SearchComponent } from './components/searchcomponent/search.component';\r\nimport { filterCheckboxComponent } from './components/checkboxcomponent/checkbox.component';\r\nimport { DateRangeComponent } from './components/daterangecomponent/daterange.component';\r\nimport { HelpComponent } from './components/helpcomponent.ts/help.component';\r\nimport { SolutionService } from './service/solution.service';\r\nimport { DateComponent } from './components/datecomponent/date.component';\r\nimport { ControlTypeXPipe } from './controlType.pipe';\r\nimport { filterRadioComponent } from './components/radiocomponent/radio.component';\r\n\r\n\r\nimport { FilterService } from './filter.service';\r\nimport { SimpleInputGroupComponent } from './components/inputgroupcomponent/inputgroup.component';\r\nimport { SingleNumberComponent } from './components/singlenumbercomponent/number.component';\r\nimport { FlexibleNumberComponent } from './components/flexiblecomponent/flexiblenumber.component';\r\nimport { FlexibleDateComponent } from './components/flexibledatecomponent/flexibledate.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    filterCheckboxComponent,\r\n    DateRangeComponent,\r\n    filterRadioComponent,\r\n    SimpleInputGroupComponent,\r\n    SingleNumberComponent,\r\n    FlexibleNumberComponent,\r\n    FlexibleDateComponent,\r\n    ControlTypeXPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FilterPanelModule,\r\n    FarrisSidebarModule,\r\n    FarrisTooltipModule,\r\n    InputGroupModule,\r\n    FarrisDatePickerModule,\r\n    DatalistModule,\r\n    ComboListModule,\r\n    LookupModule,\r\n    FarrisFormsModule,\r\n    NumberSpinnerModule,\r\n    PerfectScrollbarModule,\r\n    FilterConditionModule,\r\n    LocaleModule.forRoot(),\r\n    FarrisCommonModule\r\n  ],\r\n  exports: [\r\n    FilterComponent,\r\n    DateComponent,\r\n    NumberComponent,\r\n    HelpComponent,\r\n    InputComponent,\r\n    DropDownComponent,\r\n    SearchComponent,\r\n    filterCheckboxComponent,\r\n    DateRangeComponent,\r\n    filterRadioComponent,\r\n    SimpleInputGroupComponent,\r\n    SingleNumberComponent,\r\n    FlexibleNumberComponent,\r\n    FlexibleDateComponent,\r\n    ControlTypeXPipe\r\n  ],\r\n  providers:[\r\n    FilterService,\r\n    ConvertorService,\r\n    SolutionService,\r\n    QuerySolutionService\r\n  ],\r\n})\r\nexport class SimpleFilterModule { }\r\n","import { ControlType } from \"../controltype\";\r\nimport { TextValue } from \"./textvalue\";\r\nimport { NumberRangeValueConvertor } from \"./numberrangevaue\";\r\nimport { DateRangeValue } from \"./daterangevalue\";\r\nimport { HelpValue } from \"./helpvalue\";\r\nimport { DropDownListValueConvert } from \"./dropdownlistvalue\";\r\nimport { IControl } from \"../controltype/icontrol\";\r\nexport interface IValue{\r\n    getControlType():ControlType;\r\n    getOriginalValue(): any;\r\n    setOriginalValue(value: any): void;\r\n    clearValue(): void;\r\n    isEmpty(): boolean;\r\n    getValueText(ctrl?: any):string;\r\n}\r\n\r\nexport class ConditionValueConvert{\r\n    convertToObject(obj:IValue):Object{\r\n        let conditionValue=obj as IValue;\r\n        let controlType=conditionValue.getControlType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=controlType;\r\n        if(controlType==ControlType.DropDown){\r\n            let convertor=new DropDownListValueConvert();\r\n            jobj[\"Content\"]=convertor.convertToObject(conditionValue);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            let convertor=new NumberRangeValueConvertor();\r\n            jobj[\"Content\"]=convertor.convertToObject(conditionValue);\r\n        }\r\n        else{\r\n            jobj[\"Content\"]=conditionValue;\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromObject(jobj:Object):IValue{\r\n        let controlType=jobj[\"Type\"] as ControlType;\r\n        let content:IValue=jobj[\"Content\"];\r\n        if(controlType==ControlType.Text){\r\n            return Object.assign(new TextValue(),content as TextValue);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            let convertor=new NumberRangeValueConvertor();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.DateRange){\r\n            return Object.assign(new DateRangeValue(),content as DateRangeValue);\r\n        }\r\n        else if(controlType==ControlType.DropDown){\r\n            let convertor=new DropDownListValueConvert();\r\n            return convertor.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.Help){\r\n            return Object.assign(new HelpValue(),content as HelpValue);\r\n        }\r\n    }\r\n}","export interface RadioIEnumValue{\r\n    getEnumValueName():string;\r\n    getEnumValue():any;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}\r\n\r\nexport class RadioEnumValue implements RadioIEnumValue{\r\n\r\n    getEnumValueName():string{\r\n        return this.name;\r\n    }\r\n\r\n    getEnumValue():any{\r\n        return this.value;\r\n    }\r\n    \r\n    /**\r\n     * ææ¬æ¾ç¤º\r\n     */\r\n    name:string;\r\n\r\n    /**\r\n     * å¼æ¾ç¤º\r\n     */\r\n    value:string;\r\n}","export enum DisplayType{\r\n    LIST=0,\r\n    TREELIST=1\r\n}","import { ControlType } from \"../controltype\";\r\nimport { DropDownControl, DropDownListControlConvert } from \"./dropdownlist/dropdowncontrol\";\r\nimport { TextControl } from \"./text/textcontrol\";\r\nimport { SearchControl } from './search/searchcontrol';\r\n\r\n\r\nimport { DateRangeControl } from \"./datarange/daterangecontrol\";\r\nimport { DateControl } from \"./date/datecontrol\";\r\nimport { HelpContol } from \"./help/helpcontrol\";\r\nimport { NumberRangeControl } from \"./numberrange/numberrangecontrol\";\r\nimport { CompareType } from '../comparetype';\r\n\r\n/**\r\n * æ§ä»¶æ¥å£\r\n */\r\nexport interface IControl{\r\n\r\n    /**\r\n     * è·åæ§ä»¶ç±»å\r\n     */\r\n    getControlType():ControlType;\r\n    \r\n    /**\r\n     * æ¯å¦æ¯å±ç¤ºå¨æ©å±åºååç\r\n     */\r\n    isExtend:boolean;\r\n    /**æ¯å¦å¿å¡« */\r\n    required:boolean;\r\n    /**æ¥æéè¦å¢å ç±»åæ¯è¾ */\r\n    compareType?:CompareType;\r\n    controltype?:string;\r\n    /**æ¯å¦æ¯åæ°å¼ */\r\n    single?:boolean;\r\n    boolcheck?:boolean;\r\n    /** åè®¸æ¸é¤ */\r\n    enableClear?: boolean;\r\n}\r\n\r\nexport class ControlConvert{\r\n    convertJObject(obj:IControl):Object{\r\n        let control=obj as IControl;\r\n        let controlType=control.getControlType();\r\n        let jobj=new Object();\r\n        jobj[\"Type\"]=controlType;\r\n        if(controlType!=ControlType.DropDown){\r\n            jobj[\"Content\"]=control;\r\n        }\r\n        else{\r\n            let convertor=new DropDownListControlConvert();\r\n            jobj[\"Content\"]=convertor.convertToObject(control as DropDownControl);\r\n        }\r\n        return jobj;\r\n    }\r\n\r\n    initFromJobject(jobj:Object):IControl{\r\n        let controlType=jobj[\"Type\"] as ControlType;\r\n        let content:IControl=jobj[\"Content\"];\r\n        if(controlType==ControlType.Text){\r\n            return Object.assign(new TextControl(),content as TextControl);\r\n        }\r\n        else if( controlType==ControlType.Search ){\r\n            return Object.assign(new SearchControl(),content as SearchControl);\r\n        }\r\n\r\n\r\n        else if(controlType==ControlType.DateRange){\r\n            return Object.assign(new DateRangeControl(),content as DateRangeControl);\r\n        }\r\n        else if(controlType==ControlType.NumberRange){\r\n            return Object.assign(new NumberRangeControl(),content as NumberRangeControl);\r\n        }\r\n        // else if(controlType==ControlType.DateTime){\r\n        //     return Object.assign(new DateControl(),content as DateControl);\r\n        // }\r\n        else if(controlType==ControlType.DropDown){\r\n            let convert=new DropDownListControlConvert();\r\n            return convert.initFromObject(content);\r\n        }\r\n        else if(controlType==ControlType.Help){\r\n            return Object.assign(new HelpContol(),content as HelpContol);\r\n        }\r\n    }\r\n}","import { FieldConfig } from './fieldconfig/fieldconfig';\r\n\r\nexport class listFilterItem{\r\n    id: string;\r\n    name: string;\r\n    width: Number; // è®°å½å®½åº¦\r\n    isExtend: boolean\r\n    constructor(_id: string, _groupName: string) {\r\n        this.id = _id;\r\n        this.name = _groupName;\r\n        this.width = 0;\r\n        this.isExtend = false;\r\n    }\r\n    // è®¾ç½®å®½åº¦\r\n    setWidth(value: string) {\r\n        this.width = parseInt(value, 10);\r\n    }\r\n    // è·åå®½åº¦\r\n    getWidth(): any {\r\n        return this.width;\r\n    }\r\n}\r\nexport class listFilterGroup {\r\n    listItems:Array<listFilterItem>;\r\n    responsedIndex:number = 0;\r\n    constructor(){\r\n        this.listItems = [];\r\n    }\r\n}\r\n\r\n// export class listFilterGroup {\r\n//     id: string;\r\n//     name: string;\r\n//     presetId: Array<string> = []; // è®°å½åç´ çId\r\n//     responsedIndex: Array<Number> = []; // è®°å½è½¬åä¸ºä¸ææ¶åç´ çä½ç½®\r\n//     width: number; // è®°å½å®½åº¦\r\n//     constructor(_id: string, _groupName: string) {\r\n//         this.id = _id;\r\n//         this.name = _groupName;\r\n//         this.width = 0;\r\n//     }\r\n//     // è®¾ç½®å®½åº¦\r\n//     setWidth(value: any) {\r\n//         this.width = parseInt(value + '', 10);\r\n//     }\r\n//     // è·åå®½åº¦\r\n//     getWidth(): any {\r\n//         return this.width;\r\n//     }\r\n//     // æ´æ°presetIndex\r\n//     setPreset(value: Array<string> | string) {\r\n//         if (Array.isArray(value)) {\r\n//             this.presetId = this.presetId.concat(value);\r\n//         } else {\r\n//             this.presetId.push(value);\r\n//         }\r\n//     }\r\n//     // æ¸é¤preset\r\n//     delPreset(){\r\n//         this.presetId=[];\r\n//     }\r\n//     // å é¤\r\n//     removeResponsed(index) {\r\n//         this.responsedIndex.splice(index, 1);\r\n//     }\r\n//     // æ´æ°responsedIndex\r\n//     setResponsed(value: Array<Number> | Number) {\r\n//         if (Array.isArray(value)) {\r\n//             this.responsedIndex = this.responsedIndex.concat(value);\r\n//         } else {\r\n//             this.responsedIndex.push(value);\r\n//         }\r\n//     }\r\n//     // æ¯å¦å·²ç»å¼å§å¤çååºå¼\r\n//     isResponsing() {\r\n//         return this.responsedIndex.length > 0;\r\n//     }\r\n//     // æ¯å¦å·²ç»å¤çå®ååºå¼\r\n//     isResponsed() {\r\n//         return this.presetId.length === this.responsedIndex.length;\r\n//     }\r\n// }\r\n"]}