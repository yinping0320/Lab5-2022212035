{"version":3,"file":"farris-ui-shortcuts.js.map","sources":["ng://@farris/ui-shortcuts/lib/keys.ts","ng://@farris/ui-shortcuts/lib/utils.ts","ng://@farris/ui-shortcuts/lib/shortcuts.service.ts","ng://@farris/ui-shortcuts/lib/shortcuts.module.ts"],"sourcesContent":["const isMac = (navigator.userAgent.indexOf('Mac OS') !== -1);\r\nexport const codes = {\r\n    'backspace': 8,\r\n    'tab': 9,\r\n    'enter': 13,\r\n    'pause/break': 19,\r\n    'caps lock': 20,\r\n    'esc': 27,\r\n    'space': 32,\r\n    'page up': 33,\r\n    'page down': 34,\r\n    'end': 35,\r\n    'home': 36,\r\n    'left': 37,\r\n    'up': 38,\r\n    'right': 39,\r\n    'down': 40,\r\n    'insert': 45,\r\n    'delete': 46,\r\n    'numpad *': 106,\r\n    'numpad +': 107,\r\n    'numpad -': 109,\r\n    'numpad .': 110,\r\n    'numpad /': 111,\r\n    'num lock': 144,\r\n    'scroll lock': 145,\r\n    'my computer': 182,\r\n    'my calculator': 183,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    \"'\": 222,\r\n    'windows': 91,\r\n    'â§': 16,\r\n    'â¥': 18,\r\n    'â': 17,\r\n    'pause': 19,\r\n    'break': 19,\r\n    'caps': 20,\r\n    'return': 13,\r\n    'escape': 27,\r\n    'spc': 32,\r\n    'pgup': 33,\r\n    'pgdn': 34,\r\n    'ins': 45,\r\n    'del': 46,\r\n    'F2': 113\r\n};\r\n\r\nexport const modifiers = {\r\n    'shift': 'shiftKey',\r\n    'ctrl': 'ctrlKey',\r\n    'alt': 'altKey',\r\n    'cmd': isMac ? 'metaKey' : 'ctrlKey',\r\n    'command': isMac ? 'metaKey' : 'ctrlKey',\r\n    'left command': 'metaKey',\r\n    'right command': 'MetaRight',\r\n    'â': isMac ? 'metaKey' : 'ctrlKey',\r\n    'option': 'altKey',\r\n    'ctl': 'ctrlKey',\r\n    'control': 'ctrlKey',\r\n};\r\n\r\nexport const symbols = {\r\n    'cmd': isMac ? 'â' : 'Ctrl',\r\n    'command': isMac ? 'â' : 'Ctrl',\r\n    'left command': isMac ? 'â' : 'Ctrl',\r\n    'right command': isMac ? 'â' : 'Ctrl',\r\n    'option': isMac ? 'â¥' : 'Alt',\r\n    'left': 'â',\r\n    'right': 'â',\r\n    'up': 'â',\r\n    'down': 'â',\r\n    'alt': isMac ? 'â¥' : 'Alt',\r\n    'ctrl': 'Ctrl',\r\n    'control': 'Ctrl',\r\n    'shift': 'â§'\r\n};\r\n","export function isFunction(x: any): x is Function {\r\n    return typeof x === 'function';\r\n}\r\n\r\nexport const any = (fn: Function, list: any[]) => {\r\n    let idx = 0;\r\n    while (idx < list.length) {\r\n        if (fn(list[idx])) {\r\n            return true;\r\n        }\r\n        idx += 1;\r\n    }\r\n    return false;\r\n};\r\nexport const identity = x => x;\r\n\r\nexport const isNill = x => x == null;\r\n\r\nexport const difference = (first: any[], second: any[]) =>\r\n    first.filter(item => !(<any>second).some(secondItem=>secondItem==item));\r\n\r\nexport const allPass = preds => (...args) => {\r\n    let idx = 0;\r\n    const len = preds.length;\r\n    while (idx < len) {\r\n        if (!preds[idx].apply(this, args)) {\r\n            return false;\r\n        }\r\n        idx += 1;\r\n    }\r\n    return true;\r\n};\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { codes, modifiers } from './keys';\r\n\r\nimport {Subscription, Observable, Subject, fromEvent, timer, of} from 'rxjs';\r\nimport { ShortcutEventOutput, ParsedShortcut, ShortcutInput } from './types';\r\nimport { map, filter, tap, debounce, catchError } from 'rxjs/operators';\r\nimport { allPass, any, difference, identity, isFunction, isNill } from './utils';\r\n\r\nconst $$ngOnDestroy = Symbol('OnDestroy');\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ShortcutsService implements OnDestroy {\r\n    /**\r\n     * è§£æå¿«æ·é®\r\n     * å¹¶ä¸ºæ¯ä¸ªKEY åå»ºä¸ä¸ªå½æ°\r\n     */\r\n    private _shortcuts: ParsedShortcut[] = [];\r\n\r\n    /**\r\n     * æ§å¶æé®æ¶é´.\r\n     */\r\n    private throttleTime = 0;\r\n\r\n    private _pressed = new Subject<ShortcutEventOutput>();\r\n\r\n    /**\r\n     * Streams of pressed events, can be used instead or with a command.\r\n     */\r\n    public pressed$ = this._pressed.asObservable();\r\n\r\n    /**\r\n     * ç¦ç¨å¿«æ·é®\r\n     */\r\n    private disabled = false;\r\n\r\n    private _ignored = ['INPUT', 'TEXTAREA', 'SELECT'];\r\n\r\n    /**\r\n     * Subscription for on destroy.\r\n     */\r\n    private readonly subscription: Subscription;\r\n\r\n    private keydown$;\r\n\r\n    private isAllowed = (shortcut: ParsedShortcut) => {\r\n        const target = shortcut.event.target as HTMLElement;\r\n        if (target === shortcut.target) {\r\n            return true;\r\n        }\r\n        if (shortcut.allowIn.length) {\r\n            return !(<any>difference(this._ignored, shortcut.allowIn)).includes(target.nodeName);\r\n        }\r\n        return !(<any>this._ignored).includes(target.nodeName);\r\n    }\r\n\r\n    private mapEvent = event => this._shortcuts\r\n        .map(shortcut =>\r\n            Object.assign({}, shortcut, {\r\n                predicates: any(\r\n                    identity,\r\n                    shortcut.predicates.map((predicates: any) => allPass(predicates)(event))\r\n                ),\r\n                event: event\r\n            })\r\n        )\r\n        .filter(shortcut => shortcut.predicates)\r\n        .reduce((acc, shortcut) => (acc.priority > shortcut.priority ? acc : shortcut), {\r\n            priority: 0\r\n        } as ParsedShortcut)\r\n\r\n    private get shortcuts() {\r\n        return this._shortcuts;\r\n    }\r\n\r\n\r\n\r\n    constructor() {\r\n        // this.keydown$ = fromEvent(document, 'keydown').pipe(\r\n        //     filter(_ => !this.disabled),\r\n        //     map(this.mapEvent),\r\n        //     filter(\r\n        //         (shortcut: ParsedShortcut) =>\r\n        //             !shortcut.target || shortcut.event.target === shortcut.target\r\n        //     ),\r\n        //     filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\r\n        //     filter(this.isAllowed),\r\n        //     tap((shortcut: any) => !shortcut.preventDefault || shortcut.event.preventDefault()),\r\n        //     debounce(shortcut => timer(shortcut.throttleTime)),\r\n        //     tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })),\r\n        //     tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\r\n        //     catchError(error => of(error))\r\n        // );\r\n        // this.subscription = this.keydown$.subscribe();\r\n    }\r\n\r\n    /**\r\n     * Remove subscription.\r\n     */\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable all keyboard shortcuts\r\n     */\r\n    enable(): ShortcutsService {\r\n        this.disabled = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Disable all keyboard shortcuts\r\n     */\r\n    disable(): ShortcutsService {\r\n        this.disabled = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if all keyboard shortcuts are disabled.\r\n     */\r\n    isDisabled() {\r\n        return this.disabled;\r\n    }\r\n\r\n    /**\r\n     * Add new shortcut/s\r\n     */\r\n    public add(shortcuts: ShortcutInput[] | ShortcutInput, instance?: any): ShortcutsService {\r\n        shortcuts = Array.isArray(shortcuts) ? shortcuts : [shortcuts];\r\n        if (instance) {\r\n            const [key] = [...shortcuts.map(shortcut => shortcut.key)];\r\n            this.bindOnDestroy(instance, key);\r\n        }\r\n\r\n        this._shortcuts.push(...this.parseCommand(shortcuts));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * bind to the component ngOnDestroy to remove related keys\r\n     * when component is destroyed.\r\n     * @param instance - component to remove keys when ngOnDestroy is called.\r\n     * @param keys\r\n     */\r\n    private bindOnDestroy(instance: any, keys: string | string[]): ShortcutsService {\r\n        if (instance.ngOnDestroy) {\r\n            instance[$$ngOnDestroy] = instance.ngOnDestroy;\r\n        }\r\n        const that = this;\r\n        instance.ngOnDestroy = function() {\r\n            const onDestroy = instance[$$ngOnDestroy];\r\n            if (onDestroy) {\r\n                onDestroy.apply(this);\r\n            }\r\n            that.remove(keys);\r\n        };\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove a command based on key or array of keys.\r\n     * can be used for cleanup.\r\n     * @param key\r\n     * @returns\r\n     */\r\n    public remove(key: string | string[]): ShortcutsService {\r\n        const keys: string[] = Array.isArray(key) ? key : [key];\r\n        this._shortcuts = this._shortcuts.filter(shortcut => {\r\n            return !shortcut.key.find(sKey => {\r\n                return keys.filter(k => k === sKey).length > 0;\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns an observable of keyboard shortcut filtered by a specific key.\r\n     * @param key - the key to filter the observable by.\r\n     */\r\n    public select(key: string): Observable<ShortcutEventOutput> {\r\n        return this.pressed$.pipe(\r\n            filter(({event, key: eventKeys}) => {\r\n                return !!eventKeys.find(eventKey => eventKey === key);\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * transforms a shortcut to:\r\n     * a predicate function\r\n     */\r\n    private getKeys = (command: string[]) => command.map(key => key.trim()).filter(key => key !== '+')\r\n    .map(key => {\r\n        // for modifiers like control key\r\n        // look for event['ctrlKey']\r\n        // otherwise use the keyCode\r\n        if (modifiers.hasOwnProperty(key)) {\r\n            return event => !!event[modifiers[key]];\r\n        }\r\n        return event =>\r\n            codes[key]\r\n                ? event.keyCode === codes[key] || event.key === key\r\n                : event.keyCode === key.toUpperCase().charCodeAt(0);\r\n    })\r\n\r\n    /**\r\n     * Parse each command using getKeys function\r\n     */\r\n    private parseCommand(command: ShortcutInput | ShortcutInput[]): ParsedShortcut[] {\r\n        const commands = Array.isArray(command) ? command : [command];\r\n        return commands.map( (cmd: ShortcutInput) => {\r\n            const keys = Array.isArray(cmd.key) ? cmd.key : [cmd.key];\r\n            const priority = Math.max(...keys.map(key => key.split(' ').length));\r\n            const predicates = keys.map(key => this.getKeys(key.split(' ')));\r\n            return {\r\n                ...cmd,\r\n                allowIn: cmd.allowIn || [],\r\n                key: keys,\r\n                throttle: isNill(cmd.throttleTime) ? this.throttleTime : cmd.throttleTime,\r\n                priority: priority,\r\n                predicates: predicates\r\n            } as ParsedShortcut;\r\n        });\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ShortcutsService } from './shortcuts.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n  ],\r\n  exports: []\r\n})\r\nexport class ShortcutsModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n        ngModule: ShortcutsModule,\r\n        providers: [\r\n          ShortcutsService\r\n        ]\r\n    };\r\n}\r\n}\r\n"],"names":["this"],"mappings":"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"}
