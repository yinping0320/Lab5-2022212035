/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, Renderer2, Input, NgZone } from '@angular/core';
import ResizeObserver from 'resize-observer-polyfill';
var FAreaResponseDirective = /** @class */ (function () {
    function FAreaResponseDirective(el, ngzone, render) {
        this.el = el;
        this.ngzone = ngzone;
        this.render = render;
        this.ro = null;
        // 顺序不一致，不用object，用数组
        this.breakPoints = [
            { size: 'sm', width: 576 },
            { size: 'md', width: 768 },
            { size: 'lg', width: 888 },
            { size: 'xl', width: 1200 },
            { size: 'el', width: 1690 }
        ];
        this.clsNames = [];
        /**
         * 是否处理宽度不固定
         */
        this.autoResponse = true;
        /**
         * 只处理固定宽度；
         */
        this.enableResponse = true;
    }
    /**
     * @return {?}
     */
    FAreaResponseDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.supportResponse();
        this.bindEvent();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    FAreaResponseDirective.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.hasOwnProperty('enableResponse')) {
            this.supportResponse();
        }
        if (changes.hasOwnProperty('autoResponse')) {
            this.bindEvent();
        }
    };
    /**
     * @private
     * @return {?}
     */
    FAreaResponseDirective.prototype.bindEvent = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.enableResponse && this.autoResponse) {
            // 已绑定过
            if (this.ro) {
                return;
            }
            else {
                this.ngzone.runOutsideAngular((/**
                 * @return {?}
                 */
                function () {
                    _this.ro = new ResizeObserver((/**
                     * @param {?} entries
                     * @param {?} observer
                     * @return {?}
                     */
                    function (entries, observer) {
                        _this.widthInterval(entries[0].contentRect.width);
                    }));
                    _this.ro.observe(_this.el.nativeElement);
                }));
            }
        }
        else {
            if (this.ro) {
                this.ro.unobserve(this.el.nativeElement);
                this.ro = null;
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    FAreaResponseDirective.prototype.supportResponse = /**
     * @private
     * @return {?}
     */
    function () {
        // 启用响应
        if (this.enableResponse) {
            this.render.addClass(this.el.nativeElement, 'f-area-response');
            this.widthInterval();
        }
        else {
            // 移除对应的样式
            this.render.removeClass(this.el.nativeElement, 'f-area-response');
            for (var m = this.clsNames.length; m > 0; m--) {
                this.render.addClass(this.el.nativeElement, 'f-area-response--' + this.clsNames[m]);
                this.clsNames = [];
            }
        }
        this.bindEvent();
    };
    /**
     * @private
     * @param {?=} tWidth
     * @return {?}
     */
    FAreaResponseDirective.prototype.widthInterval = /**
     * @private
     * @param {?=} tWidth
     * @return {?}
     */
    function (tWidth) {
        var _this = this;
        if (tWidth === void 0) { tWidth = 0; }
        this.ngzone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            setTimeout((/**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var result = [];
                if (!_this.el) {
                    return;
                }
                /** @type {?} */
                var areaWidth = tWidth ? tWidth : _this.el.nativeElement.getBoundingClientRect().width;
                /** @type {?} */
                var width = parseFloat(areaWidth);
                for (var k = 0; k < _this.breakPoints.length; k++) {
                    if (_this.breakPoints[k]['width'] <= width) {
                        result.push(_this.breakPoints[k]['size']);
                    }
                }
                if (_this.clsNames.join(',') != result.join(',')) {
                    // 旧的比新的多，应该移除class
                    /** @type {?} */
                    var distance = _this.clsNames.length - result.length;
                    if (distance > 0) {
                        for (var m = result.length; m < _this.clsNames.length; m++) {
                            _this.render.removeClass(_this.el.nativeElement, 'f-area-response--' + _this.clsNames[m]);
                        }
                    }
                    else {
                        for (var m = _this.clsNames.length; m < result.length; m++) {
                            _this.render.addClass(_this.el.nativeElement, 'f-area-response--' + result[m]);
                        }
                    }
                    _this.clsNames = tslib_1.__spread(result);
                }
            }), 0);
        }));
    };
    /**
     * @return {?}
     */
    FAreaResponseDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.ro) {
            this.ro.unobserve(this.el.nativeElement);
            this.ro = null;
        }
    };
    FAreaResponseDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[f-area-response]'
                },] }
    ];
    /** @nocollapse */
    FAreaResponseDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NgZone },
        { type: Renderer2 }
    ]; };
    FAreaResponseDirective.propDecorators = {
        autoResponse: [{ type: Input }],
        enableResponse: [{ type: Input, args: ['f-area-response',] }]
    };
    return FAreaResponseDirective;
}());
export { FAreaResponseDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FAreaResponseDirective.prototype.ro;
    /**
     * @type {?}
     * @private
     */
    FAreaResponseDirective.prototype.breakPoints;
    /**
     * @type {?}
     * @private
     */
    FAreaResponseDirective.prototype.clsNames;
    /**
     * 是否处理宽度不固定
     * @type {?}
     */
    FAreaResponseDirective.prototype.autoResponse;
    /**
     * 只处理固定宽度；
     * @type {?}
     */
    FAreaResponseDirective.prototype.enableResponse;
    /**
     * @type {?}
     * @private
     */
    FAreaResponseDirective.prototype.el;
    /** @type {?} */
    FAreaResponseDirective.prototype.ngzone;
    /**
     * @type {?}
     * @private
     */
    FAreaResponseDirective.prototype.render;
}
//# sourceMappingURL=data:application/json;base64,