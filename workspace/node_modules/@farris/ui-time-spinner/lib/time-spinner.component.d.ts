import { ElementRef, EventEmitter, NgZone } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export declare class TimeSpinnerComponent implements ControlValueAccessor {
    private ngZone;
    input: ElementRef;
    disabled: boolean;
    readonly: boolean;
    editable: any;
    use12Hours: boolean;
    placeHolder: string;
    format: string;
    hourStep: number;
    minuteStep: number;
    secondStep: number;
    max: string;
    min: string;
    disabledSeconds: boolean;
    separator: string;
    value: string;
    change: EventEmitter<any>;
    onBlur: EventEmitter<{}>;
    focus: EventEmitter<{}>;
    private _disabledSeconds;
    private _disabled;
    private _readonly;
    private _editable;
    private _use12Hours;
    _value: string;
    private selObj;
    private start;
    private end;
    private onTouchedCallback;
    private onChangeCallback;
    constructor(ngZone: NgZone);
    onClick(): void;
    blur(): void;
    onFocus(): void;
    up(): void;
    down(): void;
    compute(type: string): void;
    formatTime(value: any): any;
    parseTime(value: string): Date;
    clearDate(): void;
    onMouseEnter(event: any): void;
    onMouseLeave(event: any): void;
    onChange(): void;
    writeValue(val: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
}
