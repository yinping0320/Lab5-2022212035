!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("@farris/ui-time-spinner",["exports","@angular/core","@angular/forms","@angular/common"],e):e((t.farris=t.farris||{},t.farris["ui-time-spinner"]={}),t.ng.core,t.ng.forms,t.ng.common)}(this,function(t,e,n,i){"use strict";var s=(Object.defineProperty(o.prototype,"disabled",{get:function(){return this._disabled},set:function(t){this._disabled=!1!==t},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"readonly",{get:function(){return this._readonly},set:function(t){this._readonly=!1!==t},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"editable",{get:function(){return this._editable},set:function(t){this._editable=!0===t||""===t},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"use12Hours",{get:function(){return this._use12Hours},set:function(t){this._use12Hours=!1!==t},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"disabledSeconds",{get:function(){return this._disabledSeconds},set:function(t){this._disabledSeconds=!1!==t},enumerable:!0,configurable:!0}),Object.defineProperty(o.prototype,"value",{get:function(){return this._value},set:function(t){if(""!==t){var e=this.parseTime(t);if(e){var n=this.parseTime(this.max),i=this.parseTime(this.min);i&&e<i&&(e=i),n&&n<e&&(e=n);var s=[this.formatTime(e.getHours()),this.formatTime(e.getMinutes())];this.disabledSeconds||s.push(this.formatTime(e.getSeconds()));var o=s.join(this.separator);if(this.use12Hours){var r=Number(o.substr(0,2));12<=r?o=this.formatTime(r-12)+o.substr(2)+" PM":o+=" AM"}this._value!==o&&this.change.emit({newValue:o,oldValue:this._value}),this.onChangeCallback(o),this.onTouchedCallback(o),this._value=o}}},enumerable:!0,configurable:!0}),o.prototype.onClick=function(){var t=this.input.nativeElement.selectionStart;this.use12Hours?t<=2?(this.start=0,this.end=2):2<t&&t<=5?(this.start=3,this.end=5):5<t&&t<=8?(this.start=6,this.end=8):(this.start=9,this.end=11):t<=2?(this.start=0,this.end=2):2<t&&t<=5?(this.start=3,this.end=5):(this.start=6,this.end=8),this.input.nativeElement.setSelectionRange(this.start,this.end)},o.prototype.blur=function(){this.value=this.input.nativeElement.value,this.onBlur.emit()},o.prototype.onFocus=function(){this.focus.emit()},o.prototype.up=function(){this.compute("up")},o.prototype.down=function(){this.compute("down")},o.prototype.compute=function(t){var e=this;if(!this.disabled){var n,i,s=this.start<2?24:60;n=0===this.start?this.hourStep:3===this.start?this.minuteStep:this.secondStep,n=Number(n),this.use12Hours&&isNaN(this.selObj.toString())?"PM"===this.selObj.toString()?this.value=this.value.substr(0,this.value.length-2)+"AM":this.value=this.value.substr(0,this.value.length-2)+"PM":(i="up"===t?this.formatTime(Number(this.selObj.toString())+n):this.formatTime(Number(this.selObj.toString())-n),Number(i)>=s&&(i=this.formatTime(0)),Number(i)<0&&(i=this.formatTime(s+i)),this.value=this.value.substring(0,this.start)+i+this.value.substring(this.end,this.value.length)),this.ngZone.runOutsideAngular(function(){setTimeout(function(){e.input.nativeElement.focus(),e.input.nativeElement.setSelectionRange(e.start,e.end)},0)})}},o.prototype.formatTime=function(t){return t<0?t:(t<10?"0":"")+t},o.prototype.parseTime=function(t){if(t){var e=t.split(this.separator);this.use12Hours&&(0<e[e.length-1].indexOf("PM")&&(e[0]=Number(e[0])+12+"",e[e.length-1]=e[e.length-1].substr(0,2)),0<e[e.length-1].indexOf("AM")&&(e[e.length-1]=e[e.length-1].substr(0,2)));for(var n=0;n<e.length;n++)if(isNaN(e[n]))return null;for(;e.length<3;)e.push(0);return new Date(1900,0,0,e[0],e[1],e[2])}},o.prototype.clearDate=function(){this.disabled||(this.change.emit({newValue:"",oldValue:this._value}),this._value="",this.onChangeCallback(""))},o.prototype.onMouseEnter=function(t){!this.input.nativeElement.value||this.readonly||this.disabled||(t.target.querySelector(".input-group-clear").style.display="")},o.prototype.onMouseLeave=function(t){this.readonly||this.disabled||(t.target.querySelector(".input-group-clear").style.display="none")},o.prototype.onChange=function(){this.onChangeCallback(this.value)},o.prototype.writeValue=function(t){this.value=t||"0"},o.prototype.registerOnChange=function(t){this.onChangeCallback=t},o.prototype.registerOnTouched=function(t){this.onTouchedCallback=t},o.prototype.setDisabledState=function(t){},o.decorators=[{type:e.Component,args:[{selector:"farris-time-spinner",template:'\n        <div\n            class="input-group"\n            [ngClass]="{\n                \'f-state-disabled\': disabled,\n                \'f-state-readonly\': readonly && !disabled,\n                \'f-state-editable\': editable && !disabled && !readonly\n            }"\n        >\n            <input\n                type="text"\n                autocomplete="off"\n                class="form-control"\n                [(ngModel)]="_value"\n                #input\n                (click)="onClick()"\n                (blur)="blur()"\n                (focus)="onFocus()"\n                [placeholder]="disabled||readonly||!editable?\'\':placeHolder"\n                [readonly]="readonly || !editable"\n                [disabled]="disabled"\n                (change)="onChange()"\n            />\n            <div\n                class="input-group-append input-group-clear"\n                *ngIf="!readonly && !disabled"\n                style="display: none"\n            >\n                <button\n                    type="button"\n                    class="btn btn-secondary"\n                    style="box-shadow: none; padding: 0 5px"\n                    (click)="clearDate()"\n                >\n                    <i\n                        class="k-icon k-clear-value k-i-close "\n                        style="font-size: 0.8rem"\n                    ></i>\n                </button>\n            </div>\n            <div\n                class="input-group-append btn-group"\n                *ngIf="!readonly && !disabled"\n            >\n                <button\n                    class="btn btn-secondary half-btn"\n                    style="box-shadow: none; padding: 0 5px"\n                    (click)="up()"\n                >\n                    <span class="icon k-i-arrow-chevron-up"></span>\n                </button>\n                <button\n                    class="btn btn-secondary half-btn"\n                    style="box-shadow: none; padding: 0 5px"\n                    (click)="down()"\n                >\n                    <span\n                        class="icon k-i-arrow-chevron-down"\n                        style="transform: translateX(1px);"\n                    ></span>\n                </button>\n            </div>\n        </div>\n    ',providers:[{provide:n.NG_VALUE_ACCESSOR,useExisting:e.forwardRef(function(){return o}),multi:!0}],styles:["\n            .btn-group {\n                height: 1.50003rem;\n                flex-direction: column;\n            }\n            .half-btn {\n                height: 50%;\n                display: flex;\n            }\n            .icon {\n                flex: 1;\n                line-height: 1;\n            }\n        "]}]}],o.ctorParameters=function(){return[{type:e.NgZone}]},o.propDecorators={input:[{type:e.ViewChild,args:["input"]}],disabled:[{type:e.Input}],readonly:[{type:e.Input}],editable:[{type:e.Input}],use12Hours:[{type:e.Input}],placeHolder:[{type:e.Input}],format:[{type:e.Input}],hourStep:[{type:e.Input}],minuteStep:[{type:e.Input}],secondStep:[{type:e.Input}],max:[{type:e.Input}],min:[{type:e.Input}],disabledSeconds:[{type:e.Input}],separator:[{type:e.Input}],value:[{type:e.Input}],change:[{type:e.Output}],onBlur:[{type:e.Output}],focus:[{type:e.Output}],onMouseEnter:[{type:e.HostListener,args:["mouseenter",["$event"]]}],onMouseLeave:[{type:e.HostListener,args:["mouseleave",["$event"]]}]},o);function o(t){this.ngZone=t,this.placeHolder="请选择时间",this.format="hh:mm:ss",this.hourStep=1,this.minuteStep=1,this.secondStep=1,this.separator=":",this.change=new e.EventEmitter,this.onBlur=new e.EventEmitter,this.focus=new e.EventEmitter,this._disabledSeconds=!1,this._disabled=!1,this._readonly=!1,this._editable=!0,this._use12Hours=!1,this.start=0,this.end=2,this.onTouchedCallback=function(t){},this.onChangeCallback=function(t){},this.selObj=window.getSelection()}var r=(a.decorators=[{type:e.NgModule,args:[{declarations:[s],imports:[n.FormsModule,i.CommonModule],exports:[s]}]}],a);function a(){}t.TimeSpinnerComponent=s,t.FarrisTimeSpinnerModule=r,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-time-spinner.umd.min.js.map