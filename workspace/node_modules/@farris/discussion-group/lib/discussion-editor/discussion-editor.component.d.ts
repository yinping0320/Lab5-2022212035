import { OnInit, ElementRef, Renderer2, EventEmitter, ChangeDetectorRef, Injector } from '@angular/core';
import { UploaderOptions, FUploadFileExtend } from '@farris/extend-file-upload';
import { NotifyService } from '@farris/ui-notify';
import { LocaleService } from '@farris/ui-locale';
import { ValueConfig } from './discussion-editor.interface';
import { HttpClient } from '@angular/common/http';
export declare class DiscussionEditorComponent implements OnInit {
    private renderer;
    private elementRef;
    private cd;
    private notifyService;
    private injector;
    private http;
    personnelsPrimaryKey: string;
    personnelsDisplayKey: string;
    replyPersonnelsDisplayKey: string;
    cancelVisible: boolean;
    editHeight: number;
    type: string;
    orgUrl: string;
    personSearchUrl: string;
    treeIdField: string;
    treeDisplayText: string;
    sectionData: any[];
    options: UploaderOptions;
    placeholder: string;
    sectiontreeData: Array<any>;
    private _personnels;
    personnels: any[];
    private _replyUser;
    replyUser: any;
    _attachFiles: FUploadFileExtend[];
    attachFiles: FUploadFileExtend[];
    selectionsChange: EventEmitter<any>;
    lineDataChange: EventEmitter<any>;
    valueChange: EventEmitter<ValueConfig>;
    /** 附件预览 */
    filePreview: EventEmitter<{}>;
    /** 附件删除 */
    fileRemove: EventEmitter<{}>;
    fileUploadDone: EventEmitter<{}>;
    personnelSearch: EventEmitter<{}>;
    getOugUsers: EventEmitter<{}>;
    editor: any;
    personModal: any;
    textValue: string;
    tempTextValue: string;
    tempPersonnelsValue: string;
    tempSectionValue: string;
    personModalVisible: boolean;
    selectedPersonnels: Array<any>;
    selectedSection: Array<any>;
    personnelText: any;
    copyPersonnels: Array<any>;
    innerPersonnels: Array<any>;
    el: ElementRef;
    token: boolean;
    relativeVisible: boolean;
    permission: any;
    attachFilesModalVisible: boolean;
    pageSize: number;
    searchPersonnelList: any;
    showSearchList: boolean;
    permissionList: Array<any>;
    localeService: LocaleService;
    groupIcon: string;
    constructor(renderer: Renderer2, elementRef: ElementRef, cd: ChangeDetectorRef, notifyService: NotifyService, injector: Injector, http: HttpClient);
    ngOnInit(): void;
    /**
     * 单个附件上传完成
     * @param ev
     */
    fUploadDoneHandler(ev: any): void;
    /**
     * 上传附件中单个附件删除完成
     * @param ev
     */
    fUploadRemovedHandler(ev: any): void;
    /**附件列表中预览 */
    filePreviewEventHandler(info: any): void;
    /**附件列表中删除 */
    fileRemoveEventHandler(file: any): void;
    setTextValue(e?: any): void;
    listenEditorValueChange(e: any): void;
    /**
     * 搜索人员
     */
    serachPersonnel(): void;
    /**
     * 搜索下一页
     */
    getMoreSearchData(): void;
    getSearchData(text: string, pageIndex: number, pageSize?: number): import("rxjs").Observable<Object>;
    personnelChecked(item: any): void;
    appendPersonnels(): void;
    appendPersonnelsList(listData: any): void;
    appendPersonnel(listData: any, external?: boolean): void;
    /**
     * 添加部门
     * @param listData
     */
    appendSectionList(listData: any): void;
    appendSection(listData: any): void;
    private _isInArray;
    /**
     * 关闭人事管理弹窗
     */
    resetPersonnels(): void;
    /**
     * 打开人员管理
     * @param e 事件
     */
    openModalPerson(e: any): void;
    setPersonModalPosition(): void;
    openModalPermission(e: any): void;
    /**
     * 打开上传附件
     */
    openModalFile(e: any): void;
    stopBubble(e: any): void;
    /**
     * 提交评语
     */
    submitApproval(): void;
    cancel(): void;
    /**修改查看权限 */
    changePermission(value: string): void;
    editorFocus(): void;
    /**
     * 高级人员点确认
     */
    selectionsChangePar(event: any): void;
    /**高级人员中选中某行 */
    lineDataChangePar(event: any): void;
    /**获得占位头像 */
    getAvatar(item: any): any;
    ougUsers(event: any): void;
}
