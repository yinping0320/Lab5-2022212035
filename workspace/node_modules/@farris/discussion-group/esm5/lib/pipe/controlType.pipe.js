/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
var AvatarHtmlPipe = /** @class */ (function () {
    function AvatarHtmlPipe() {
    }
    /**
     * @param {?} item
     * @return {?}
     */
    AvatarHtmlPipe.prototype.transform = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        /** @type {?} */
        var str = item['name'];
        if (str) {
            return str.substring(str.length - 2, str.length);
        }
        else {
            return '';
        }
    };
    AvatarHtmlPipe.decorators = [
        { type: Pipe, args: [{ name: 'avatarHtml' },] }
    ];
    return AvatarHtmlPipe;
}());
export { AvatarHtmlPipe };
var GetOrgTextPipe = /** @class */ (function () {
    function GetOrgTextPipe() {
    }
    /**
     * @param {?} item
     * @param {?} orgs
     * @return {?}
     */
    GetOrgTextPipe.prototype.transform = /**
     * @param {?} item
     * @param {?} orgs
     * @return {?}
     */
    function (item, orgs) {
        /** @type {?} */
        var str = item['orgId'];
        if (orgs && orgs.length) {
            /** @type {?} */
            var sec_1 = orgs.find((/**
             * @param {?} org
             * @return {?}
             */
            function (org) {
                return org['id'] == str;
            }));
            /** @type {?} */
            var orgtext = '';
            if (sec_1) {
                if (sec_1['parentId'] != '') {
                    /** @type {?} */
                    var par = orgs.find((/**
                     * @param {?} org
                     * @return {?}
                     */
                    function (org) {
                        return org['id'] == sec_1['parentId'];
                    }));
                    orgtext = par ? par.name + "/" + sec_1['name'] : sec_1['name'];
                }
                else {
                    orgtext = sec_1['name'];
                }
            }
            return orgtext;
        }
        else {
            return '';
        }
    };
    GetOrgTextPipe.decorators = [
        { type: Pipe, args: [{ name: 'getOrgText' },] }
    ];
    return GetOrgTextPipe;
}());
export { GetOrgTextPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbFR5cGUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvZGlzY3Vzc2lvbi1ncm91cC8iLCJzb3VyY2VzIjpbImxpYi9waXBlL2NvbnRyb2xUeXBlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBEO0lBQUE7SUFXQSxDQUFDOzs7OztJQVRHLGtDQUFTOzs7O0lBQVQsVUFBVSxJQUFROztZQUNWLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3RCLElBQUcsR0FBRyxFQUFDO1lBQ0gsT0FBTyxHQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNqRDthQUNHO1lBQ0EsT0FBTyxFQUFFLENBQUM7U0FDYjtJQUNMLENBQUM7O2dCQVZKLElBQUksU0FBQyxFQUFDLElBQUksRUFBRSxZQUFZLEVBQUM7O0lBVzFCLHFCQUFDO0NBQUEsQUFYRCxJQVdDO1NBVlksY0FBYztBQVkzQjtJQUFBO0lBMEJBLENBQUM7Ozs7OztJQXhCRyxrQ0FBUzs7Ozs7SUFBVCxVQUFVLElBQVEsRUFBRSxJQUFXOztZQUN2QixHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN2QixJQUFHLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFDOztnQkFDZixLQUFHLEdBQUcsSUFBSSxDQUFDLElBQUk7Ozs7WUFBQyxVQUFBLEdBQUc7Z0JBQ25CLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQztZQUM1QixDQUFDLEVBQUM7O2dCQUNFLE9BQU8sR0FBRyxFQUFFO1lBQ2hCLElBQUcsS0FBRyxFQUFDO2dCQUNILElBQUcsS0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsRUFBQzs7d0JBQ2pCLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSTs7OztvQkFBQyxVQUFBLEdBQUc7d0JBQ25CLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztvQkFDeEMsQ0FBQyxFQUFDO29CQUNGLE9BQU8sR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFJLEdBQUcsQ0FBQyxJQUFJLFNBQUksS0FBRyxDQUFDLE1BQU0sQ0FBRyxDQUFBLENBQUMsQ0FBQSxLQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQzVEO3FCQUNHO29CQUNBLE9BQU8sR0FBRyxLQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ3pCO2FBQ0o7WUFDRCxPQUFPLE9BQU8sQ0FBQztTQUNsQjthQUNJO1lBQ0QsT0FBTyxFQUFFLENBQUM7U0FDYjtJQUNMLENBQUM7O2dCQXpCSixJQUFJLFNBQUMsRUFBQyxJQUFJLEVBQUUsWUFBWSxFQUFDOztJQTBCMUIscUJBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQXpCWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQFBpcGUoe25hbWU6ICdhdmF0YXJIdG1sJ30pXHJcbmV4cG9ydCBjbGFzcyBBdmF0YXJIdG1sUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgdHJhbnNmb3JtKGl0ZW06YW55KTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgc3RyID0gaXRlbVsnbmFtZSddO1xyXG4gICAgICAgIGlmKHN0cil7XHJcbiAgICAgICAgICAgIHJldHVybiBzdHIuc3Vic3RyaW5nKHN0ci5sZW5ndGgtMixzdHIubGVuZ3RoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQFBpcGUoe25hbWU6ICdnZXRPcmdUZXh0J30pXHJcbmV4cG9ydCBjbGFzcyBHZXRPcmdUZXh0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgdHJhbnNmb3JtKGl0ZW06YW55LCBvcmdzOiBhbnlbXSk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IHN0ciA9IGl0ZW1bJ29yZ0lkJ107XHJcbiAgICAgICAgaWYob3JncyAmJiBvcmdzLmxlbmd0aCl7XHJcbiAgICAgICAgICAgIGxldCBzZWMgPSBvcmdzLmZpbmQob3JnID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBvcmdbJ2lkJ10gPT0gc3RyO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgbGV0IG9yZ3RleHQgPSAnJztcclxuICAgICAgICAgICAgaWYoc2VjKXtcclxuICAgICAgICAgICAgICAgIGlmKHNlY1sncGFyZW50SWQnXSAhPSAnJyl7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBhciA9IG9yZ3MuZmluZChvcmcgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JnWydpZCddID09IHNlY1sncGFyZW50SWQnXTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBvcmd0ZXh0ID0gcGFyID8gYCR7cGFyLm5hbWV9LyR7c2VjWyduYW1lJ119YDpzZWNbJ25hbWUnXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgb3JndGV4dCA9IHNlY1snbmFtZSddO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBvcmd0ZXh0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=