/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ViewChild, ElementRef, Renderer2, NgZone, Output, EventEmitter, ChangeDetectorRef, Injector } from '@angular/core';
import { of, forkJoin, Subject } from 'rxjs';
import { HttpClient } from '@angular/common/http';
import { LocaleService } from '@farris/ui-locale';
import { LoadingService } from '@farris/ui-loading';
import { debounceTime } from 'rxjs/operators';
import { WEBAPI_PREFIX_TOKEN } from '@farris/ui-common';
var DiscussionPersonnelComponent = /** @class */ (function () {
    function DiscussionPersonnelComponent(renderer, elementRef, ngZone, http, cd, injector) {
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.ngZone = ngZone;
        this.http = http;
        this.cd = cd;
        this.injector = injector;
        // 操作列表或者分组所需要的主键字段
        this.listIdField = "id";
        // 列表中显示的字段
        this.listDisplayText = "userName";
        // 分层获取组织的链接
        // 使用方式 /api/runtime/sys/v1.0/sysOrgs?param={"parentId":"afa5ee9b-f9ba-2927-f9ce-2a30369267e9"}
        this.urlGetOrgByLayer = "/api/runtime/sys/v1.0/sysOrgs";
        // 新建还是维护自定义角色
        // @Output() customGroupChange = new EventEmitter<any>();
        // 对外暴露数据
        this.selectionsChange = new EventEmitter();
        // 选中的行
        this.lineDataChange = new EventEmitter();
        this.openDialog = new EventEmitter();
        this.ougUsers = new EventEmitter();
        this.loadingInstance = null;
        // 右侧项
        this.selections = [];
        this.selectedSections = [];
        this.selectedUsers = [];
        // 最重要显示的人员信息
        this.finalText = '';
        this.sectionDataTree = [];
        this.sectionDataTiled = [];
        this.currentSectionData = [];
        this.currentSection = {};
        this.currentSectionPerson = {};
        this.currentSectionId = '';
        this.sectionCrumbs = [];
        this.pageSize = 20;
        this.showSearchList = false;
        this.crumbsEllipsis = false;
        this.searchUserList = {};
        this.selectEmployee = "选择员工";
        this.placeholder = "请输入员工姓名搜索";
        this.allOrg = "全部组织";
        this.groupIcon = '<span class="f-icon f-icon-search"></span>';
        // 标记请求
        this.recordGetUserSubscribe = null;
        // 查询变化
        this.searchTextChangeSubject = new Subject();
        this.errorText = '';
        this.perfixStr = '';
        this.localeService = this.injector.get(LocaleService);
        this.loadingSer = this.injector.get(LoadingService);
        if (WEBAPI_PREFIX_TOKEN) {
            this.perfixStr = this.injector.get(WEBAPI_PREFIX_TOKEN, '');
        }
    }
    /**
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // let sectionDataTrees = this.initsectionData(this.sectionData,'');
        this.allOrg = this.localeService.getValue('discussionGroup.allOrg');
        /** @type {?} */
        var sectionDataTrees = this.initSectionData(this.sectionData, '');
        // this.sectionSort(sectionDataTrees);
        // if(sectionDataTrees.length>1){
        /** @type {?} */
        var sectionParent = [
            {
                data: {
                    id: 'discussionParent',
                    code: 'parent',
                    name: this.allOrg,
                    layer: 0,
                    parentId: "",
                    sortOrder: 1,
                    path: "",
                },
                children: [],
                personnels: {
                    count: 0,
                    pageCount: 0,
                    pageIndex: 1,
                    pageSize: 0,
                    totalCount: 0,
                    users: []
                },
                parent: null,
                parents: [],
                parentsArr: [],
                checked: false
            }
        ];
        sectionParent[0].children = sectionDataTrees;
        sectionParent[0].children.sort((/**
         * @param {?} a
         * @param {?} b
         * @return {?}
         */
        function (a, b) { return a.data['sortOrder'] - b.data['sortOrder']; }));
        this.initSectionTree(sectionParent[0].children);
        this.sectionDataTree = sectionParent;
        // }
        // else{
        //     this.sectionDataTree = sectionDataTrees;
        // }
        //console.log(this.sectionDataTree);
        if (this.sectionDataTree && this.sectionDataTree.length) {
            // 如果有组织树的数据，打平成数组数据
            this.sectionDataTiled = this.tileSectionData(this.sectionDataTree);
        }
        /**
         * 当前界面上的组织节点完整树数据
         * {
         *    checked:false,组织是否选中
         *    children:[],组织的子部门
         *    data:{ 来自于从服务器端返回的数据结构
         *      id:组织id,
         *      code:组织code,
         *      name:组织名称
         *      layer:组织层级
         *      parentId:父节点
         *      ....
         *      },
         *    parents:[],父节点Id
         *    parentsArr:[{id:'组织节点Id',name:'组织节点名称'}],
         *    personnels:{
         *          count:0,
         *          pageCount:,
         *          users:[] 用户信息
         *      }
         * }
         *
         */
        this.currentSection = this.sectionDataTree[0];
        // 面包屑数据[{id:'组织节点Id',name:'组织节点名称'}]
        this.sectionCrumbs = this.sectionDataTree[0].children.length ? this.sectionDataTree[0].children[0]['parentsArr'] : [];
        // 当前界面上的组织列表数据
        this.currentSectionData = this.sectionDataTree[0].children.length ? this.sectionDataTree[0].children : [];
        // 当前界面上的组织隶属的组织的数据Id
        this.currentSectionId = this.sectionDataTree[0].data.id;
        // 绑定当人员获取回数据时，执行的操作
        this.getPersonnel(this.currentSectionId, 0).subscribe((/**
         * @param {?} d
         * @return {?}
         */
        function (d) {
            if (d.hasOwnProperty("users")) {
                _this.sectionDataTree[0].personnels = d;
                _this.currentSectionPerson = _this.sectionDataTree[0].personnels;
                // console.log('cur',this.currentSectionPerson);
            }
        }));
        this.selectEmployee = this.localeService.getValue('discussionGroup.selectEmployee');
        this.placeholder = this.localeService.getValue('discussionGroup.placeholder');
        // console.log(this.sectionDataTiled);
        // 窗口打开时再调用也可以 this.dialogOpend();
    };
    /**
     * @param {?} data
     * @param {?=} parentId
     * @param {?=} parentName
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.initSectionTree = /**
     * @param {?} data
     * @param {?=} parentId
     * @param {?=} parentName
     * @return {?}
     */
    function (data, parentId, parentName) {
        var _this = this;
        if (parentId === void 0) { parentId = "discussionParent"; }
        if (parentName === void 0) { parentName = this.allOrg; }
        if (data && data.length) {
            data.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                /** @type {?} */
                var par = {
                    id: parentId,
                    name: parentName
                };
                item.parentsArr.unshift(par);
                item.parents.unshift(parentId);
                if (item.children.length) {
                    _this.initSectionTree(item.children);
                }
            }));
        }
    };
    /**
     * 初始化分组数据
     * 传递过来的数据是列表，需要转换成树的层级结构
     */
    /**
     * 初始化分组数据
     * 传递过来的数据是列表，需要转换成树的层级结构
     * @param {?} data
     * @param {?} parentId
     * @param {?=} parentIdField
     * @param {?=} idField
     * @param {?=} presetParent
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.initSectionData = /**
     * 初始化分组数据
     * 传递过来的数据是列表，需要转换成树的层级结构
     * @param {?} data
     * @param {?} parentId
     * @param {?=} parentIdField
     * @param {?=} idField
     * @param {?=} presetParent
     * @return {?}
     */
    function (data, parentId, parentIdField, idField, presetParent) {
        if (parentIdField === void 0) { parentIdField = 'parentId'; }
        if (idField === void 0) { idField = 'id'; }
        if (presetParent === void 0) { presetParent = null; }
        /** @type {?} */
        var nodes = new Map();
        /** @type {?} */
        var result = [];
        /** @type {?} */
        var unattached = [];
        if (presetParent) {
            nodes.set(presetParent.data.id, presetParent);
        }
        if (data && data.length) {
            data.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                /** @type {?} */
                var node = {
                    data: item,
                    children: [],
                    personnels: {},
                    parent: null,
                    parents: [],
                    parentsArr: [],
                    checked: false
                };
                /** @type {?} */
                var id = item[idField];
                nodes.set(id, node);
                /** @type {?} */
                var PID = item[parentIdField];
                // 初始
                if (PID === parentId || PID === null) {
                    result.push(node);
                }
                else {
                    /** @type {?} */
                    var parent_1 = nodes.get(PID);
                    // console.log(parent);
                    if (parent_1) {
                        /** @type {?} */
                        var par = {
                            id: PID,
                            name: parent_1.data.name
                        };
                        node['parent'] = PID;
                        node['parents'] = tslib_1.__spread(parent_1.parents, [PID]);
                        node['parentsArr'] = tslib_1.__spread(parent_1.parentsArr, [par]);
                        parent_1.children.push(node);
                        parent_1.children.sort((/**
                         * @param {?} a
                         * @param {?} b
                         * @return {?}
                         */
                        function (a, b) { return a.data['sortOrder'] - b.data['sortOrder']; }));
                    }
                    else {
                        unattached.push(node);
                    }
                }
            }));
            if (unattached.length) {
                unattached.forEach((/**
                 * @param {?} unItem
                 * @return {?}
                 */
                function (unItem) {
                    /** @type {?} */
                    var pid = unItem.data[parentIdField];
                    /** @type {?} */
                    var parent = nodes.get(pid);
                    if (parent) {
                        // 构造数据
                        unItem['parent'] = pid;
                        unItem['parents'] = tslib_1.__spread(parent.parents, [pid]);
                        unItem['parentsArr'] = tslib_1.__spread(parent.parentsArr, [{
                                id: pid,
                                name: parent.data.name
                            }]);
                        parent.children.push(unItem);
                        parent.children.sort((/**
                         * @param {?} a
                         * @param {?} b
                         * @return {?}
                         */
                        function (a, b) { return a.data['sortOrder'] - b.data['sortOrder']; }));
                    }
                }));
            }
        }
        return result;
    };
    /**
     * 所有nodes的子节点转化成数组，并返回数组
     * @param nodes
     */
    /**
     * 所有nodes的子节点转化成数组，并返回数组
     * @param {?} nodes
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.tileSectionData = /**
     * 所有nodes的子节点转化成数组，并返回数组
     * @param {?} nodes
     * @return {?}
     */
    function (nodes) {
        /** @type {?} */
        var r = [];
        this.getAllNodes(nodes, r);
        return r;
    };
    /**
     * 所有nodes的子节点转化成数组，并跟新数组r
     * @param nodes
     * @param r
     */
    /**
     * 所有nodes的子节点转化成数组，并跟新数组r
     * @param {?} nodes
     * @param {?} r
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getAllNodes = /**
     * 所有nodes的子节点转化成数组，并跟新数组r
     * @param {?} nodes
     * @param {?} r
     * @return {?}
     */
    function (nodes, r) {
        var _this = this;
        nodes.forEach((/**
         * @param {?} n
         * @return {?}
         */
        function (n) {
            r.push(n);
            if (n.children.length) {
                _this.getAllNodes(n.children, r);
            }
        }));
    };
    /**
     * 点击下级
     * @param section
     */
    /**
     * 点击下级
     * @param {?} section
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.sectionNext = /**
     * 点击下级
     * @param {?} section
     * @return {?}
     */
    function (section) {
        var _this = this;
        // 构造组织节点下面的人员信息，如果没有人员信息，就构造结构，然后发请求获取人员信息
        this.showOrHideLoading(true);
        forkJoin([this.getOrgByLayerHttp(section), this.getPersonByUrlHttp(section)])
            .subscribe((/**
         * @param {?} orgAndPersonDatas
         * @return {?}
         */
        function (orgAndPersonDatas) {
            _this.showOrHideLoading(false);
            // 获取组织数据
            /** @type {?} */
            var getOrgData = orgAndPersonDatas[0];
            if (getOrgData !== false) {
                // 从服务器端真实返回数据,直接在方法内更新section的结构
                _this.initSectionData(getOrgData, '', 'parentId', 'id', section);
                // 输入所有组织树的数据，看section变更是否更新
                // 更新数据
                _this.sectionDataTiled = _this.tileSectionData(_this.sectionDataTree);
            }
            // 获取人员数据
            /** @type {?} */
            var getPersonData = orgAndPersonDatas[1];
            if (getPersonData !== false) {
                // 构造数据
                section.personnels = {
                    count: 0,
                    pageCount: 0,
                    pageIndex: 1,
                    pageSize: 0,
                    totalCount: 0,
                    users: []
                };
                if (getPersonData.hasOwnProperty("users")) {
                    section.personnels.count = getPersonData['count'];
                    section.personnels.pageCount = getPersonData['pageCount'];
                    section.personnels.pageIndex = getPersonData['pageIndex'];
                    section.personnels.pageSize = getPersonData['pageSize'];
                    section.personnels.totalCount = getPersonData['totalCount'];
                    section.personnels['users'] = tslib_1.__spread(section.personnels['users'], getPersonData['users']);
                }
                else {
                    section['noPersonnel'] = true;
                }
            }
            _this.getNextData(section);
        }));
    };
    /**
     * 获取下级数据
     * 点击的组织对应的是：当前组织节点
     * @param section
     */
    /**
     * 获取下级数据
     * 点击的组织对应的是：当前组织节点
     * @param {?} section
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getNextData = /**
     * 获取下级数据
     * 点击的组织对应的是：当前组织节点
     * @param {?} section
     * @return {?}
     */
    function (section) {
        var _this = this;
        if ((section.children && section.children.length) || (JSON.stringify(section.personnels) !== '{}')) {
            // 如果当前组织节点有下级数据
            /** @type {?} */
            var sec = this.getSectionById(section.data.id);
            if (sec) {
                // 判断当前组织节点，是否勾选全选
                /** @type {?} */
                var secChecked_1 = sec['checked'];
                sec['disabled'] = secChecked_1 ? true : false;
                if (!sec['indeterminate']) {
                    // 当前组织的下一级组织都勾选
                    if (sec.children && sec.children.length) {
                        sec.children.forEach((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) {
                            item['checked'] = secChecked_1;
                            item['indeterminate'] = false;
                            // item['disabled'] = sec['disabled'];
                        }));
                    }
                    ;
                    // 如果有人员，当前人员都勾选
                    if (section.personnels['users'] && section.personnels['users'].length) {
                        section.personnels['users'].forEach((/**
                         * @param {?} user
                         * @return {?}
                         */
                        function (user) {
                            user['checked'] = secChecked_1;
                            user['indeterminate'] = false;
                            // user['disabled'] = sec['disabled'];
                        }));
                    }
                }
            }
            /** @type {?} */
            var secParent = {
                id: sec.data.id,
                name: sec.data.name
            };
            // 当前组织的父节点与当前组织节点数据合并
            /** @type {?} */
            var secCrumbs = tslib_1.__spread(sec['parentsArr'], [secParent]);
            // 如果当前组织有子节点，获取子节点的父数组，否则，按照上面数据合并获取
            this.sectionCrumbs = sec.children.length ? sec.children[0]['parentsArr'] : secCrumbs;
            // 新的组织节点是当前组织的子节点
            this.currentSectionData = sec.children.length ? sec.children : [];
            // 记录当前组织节点
            this.currentSection = sec;
            // 记录当前组织节点的数据
            this.currentSectionId = sec.data.id;
            // 当前组织下对应的人员信息
            this.currentSectionPerson = sec.personnels;
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.initCrumbsList();
            }), 0);
            // console.log(this.currentSection);
            this.cd.detectChanges();
        }
        else {
            this.currentSectionPerson = [];
        }
    };
    /**
     * 获取人员接口定义
     * @param ougId
     * @param pageIndex
     * @param pageSize
     */
    /**
     * 获取人员接口定义
     * @param {?} ougId
     * @param {?} pageIndex
     * @param {?=} pageSize
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getPersonnel = /**
     * 获取人员接口定义
     * @param {?} ougId
     * @param {?} pageIndex
     * @param {?=} pageSize
     * @return {?}
     */
    function (ougId, pageIndex, pageSize) {
        if (pageSize === void 0) { pageSize = this.pageSize; }
        // let data = {};
        if (this.orgUrl) {
            /** @type {?} */
            var url = "" + this.perfixStr + this.orgUrl + "?orgId=" + ougId + "&pageSize=" + pageSize + "&pageIndex=" + pageIndex;
            return this.http.get(url);
            // if(ougId == 'langchao'){
            //     return this.http.get('assets/data/discussionPerson.json');
            // }
            // else if(ougId == 'guoji'){
            //     return this.http.get('assets/data/discussionPerson2.json');
            // }
            // else if(ougId == 'yanfa'){
            //     return this.http.get('assets/data/discussionPerson3.json');
            // }
            // else{
            //     return of(true);
            // }
        }
        else {
            return of(false);
        }
        // return data;
    };
    /**
     * 分层获取数据
     */
    /**
     * 分层获取数据
     * @private
     * @param {?} section
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getOrgByLayerHttp = /**
     * 分层获取数据
     * @private
     * @param {?} section
     * @return {?}
     */
    function (section) {
        if (!section.data['isDetail'] && (!section.children || section.children.length == 0)) {
            //不是叶子节点，但是子为空
            if (this.urlGetOrgByLayer) {
                /** @type {?} */
                var url = "" + this.perfixStr + this.urlGetOrgByLayer + "?param={\"parentId\":\"" + section.data.id + "\"}";
                return this.http.get(url);
            }
        }
        // 处理过的数据
        return of(false);
    };
    /**
     * 获取人员
     * @param section
     */
    /**
     * 获取人员
     * @private
     * @param {?} section
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getPersonByUrlHttp = /**
     * 获取人员
     * @private
     * @param {?} section
     * @return {?}
     */
    function (section) {
        if (JSON.stringify(section.personnels) === '{}' && !section.hasOwnProperty('noPersonnel')) {
            return this.getPersonnel(section.data.id, 0);
        }
        return of(false);
    };
    /**
     * @param {?} id
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getSectionById = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var section = this.sectionDataTiled.find((/**
         * @param {?} sec
         * @return {?}
         */
        function (sec) {
            return sec.data.id == id;
        }));
        return section;
    };
    /**
     * 点击面包屑
     * @param crumbs
     */
    /**
     * 点击面包屑
     * @param {?} crumbs
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.crumbsClick = /**
     * 点击面包屑
     * @param {?} crumbs
     * @return {?}
     */
    function (crumbs) {
        var _this = this;
        if (crumbs.id == this.currentSectionId)
            return;
        /** @type {?} */
        var sec = this.getSectionById(crumbs.id);
        this.sectionCrumbs = sec.children.length ? sec.children[0]['parentsArr'] : [];
        this.currentSectionData = sec.children.length ? sec.children : [];
        this.currentSectionId = sec.data.id;
        this.currentSectionPerson = sec.personnels;
        this.currentSection = sec;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.initCrumbsList();
        }), 0);
    };
    /**
     * 部门或人员状态变化
     * @param event
     * @param section
     */
    /**
     * 部门或人员状态变化
     * @param {?} event
     * @param {?} section
     * @param {?} type
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.handleClick = /**
     * 部门或人员状态变化
     * @param {?} event
     * @param {?} section
     * @param {?} type
     * @return {?}
     */
    function (event, section, type) {
        var _this = this;
        if (this.currentSection.disabled)
            return;
        event.stopPropagation();
        section.checked = !section.checked;
        section['indeterminate'] = false;
        this.setSectionDataChecked();
        if (section.checked) {
            /** @type {?} */
            var selectedData = {
                parent: this.currentSection,
                data: section
            };
            if (type == 'user') {
                if (this._isSelectedInArray(section[this.listIdField], this.listIdField, this.selectedUsers)) {
                    return;
                }
                else {
                    this.selectedUsers.push(selectedData);
                }
            }
            else if (type == 'section') {
                this.addSection(section);
            }
        }
        else {
            if (type == 'user') {
                if (this._isSelectedInArray(section[this.listIdField], this.listIdField, this.selectedUsers)) {
                    this.selectedUsers.forEach((/**
                     * @param {?} item
                     * @param {?} index
                     * @return {?}
                     */
                    function (item, index) {
                        if (item['data'][_this.listIdField] === section[_this.listIdField]) {
                            _this.selectedUsers.splice(index, 1);
                        }
                    }));
                }
            }
            else if (type == 'section') {
                this.removeSection(section);
            }
        }
        // console.log(this.selectedUsers,this.selectedSections);
    };
    /**
     * @param {?} event
     * @param {?} user
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.handleSearchClick = /**
     * @param {?} event
     * @param {?} user
     * @return {?}
     */
    function (event, user) {
        var _this = this;
        event.stopPropagation();
        user.checked = !user.checked;
        if (user.checked) {
            if (this._isSelectedInArray(user[this.listIdField], this.listIdField, this.selectedUsers)) {
                return;
            }
            else {
                /** @type {?} */
                var selectedData = {
                    parent: null,
                    data: user
                };
                this.selectedUsers.push(selectedData);
            }
        }
        else {
            if (this._isSelectedInArray(user[this.listIdField], this.listIdField, this.selectedUsers)) {
                this.selectedUsers.forEach((/**
                 * @param {?} item
                 * @param {?} index
                 * @return {?}
                 */
                function (item, index) {
                    if (item['data'][_this.listIdField] === user[_this.listIdField]) {
                        _this.selectedUsers.splice(index, 1);
                    }
                }));
            }
        }
    };
    /**
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.setSectionDataChecked = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var curChecked = false;
        /** @type {?} */
        var sec = this.currentSection;
        /** @type {?} */
        var secArray = [];
        if (sec.children || (sec.personnels['users'] && sec.personnels['users'].length)) {
            secArray = secArray.concat(sec.children, sec.personnels['users']);
            /** @type {?} */
            var secCheckedList = secArray.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.hasOwnProperty('checked') && item['checked']) {
                    return item;
                }
            }));
            /** @type {?} */
            var secIndeList = sec.children.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.hasOwnProperty('indeterminate') && item['indeterminate']) {
                    return item;
                }
            }));
            this.currentSection['indeterminate'] = (secIndeList && secIndeList.length) ? true : false;
            if (secCheckedList && secCheckedList.length) {
                if (secCheckedList.length == secArray.length && sec.personnels.pageIndex >= sec.personnels.pageCount - 1) {
                    curChecked = true;
                }
                else {
                    this.currentSection['indeterminate'] = true;
                }
            }
            else {
                curChecked = false;
            }
            this.currentSection['checked'] = curChecked;
            // console.log(this.currentSection);
        }
        if (this.currentSection.parents.length > 0 && this.currentSection['indeterminate']) {
            this.currentSection.parents.forEach((/**
             * @param {?} par
             * @return {?}
             */
            function (par) {
                /** @type {?} */
                var parSec = _this.getSectionById(par);
                if (parSec) {
                    parSec['indeterminate'] = _this.currentSection['indeterminate'];
                }
            }));
        }
    };
    /**
     * @param {?=} status
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.setChildDisabledStatus = /**
     * @param {?=} status
     * @return {?}
     */
    function (status) {
        if (status === void 0) { status = true; }
        /** @type {?} */
        var sec = this.currentSection;
        // sec['disabled'] = status;
        if (sec.children || (sec.personnels['users'] && sec.personnels['users'].length)) {
            sec.children.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                item['disabled'] = status;
            }));
            // sec['childDisabled'] = status;
            sec.personnels['users'].forEach((/**
             * @param {?} user
             * @return {?}
             */
            function (user) {
                user['disabled'] = status;
            }));
        }
    };
    /**
     * 人员查看更多
     */
    /**
     * 人员查看更多
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getMoreData = /**
     * 人员查看更多
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.currentSectionId) {
            /** @type {?} */
            var sec_1 = this.getSectionById(this.currentSectionId);
            if (sec_1) {
                this.getPersonnel(this.currentSectionId, sec_1.personnels.pageIndex + 1).subscribe((/**
                 * @param {?} d
                 * @return {?}
                 */
                function (d) {
                    if (d.hasOwnProperty("users")) {
                        sec_1.personnels.pageIndex = d['pageIndex'];
                        sec_1.personnels['users'] = tslib_1.__spread(sec_1.personnels['users'], d['users']);
                        if (sec_1.personnels['users'].length) {
                            if (sec_1['checked']) {
                                sec_1.personnels['users'].forEach((/**
                                 * @param {?} user
                                 * @return {?}
                                 */
                                function (user) {
                                    user['checked'] = sec_1['checked'];
                                }));
                            }
                        }
                        // this.setSectionDataChecked();
                    }
                    _this.cd.detectChanges();
                }));
            }
        }
    };
    /**
     * 全选
     * @param event
     */
    /**
     * 全选
     * @param {?} event
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.handleClickAll = /**
     * 全选
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.currentSection.disabled)
            return;
        if (this.currentSection) {
            this.currentSection['checked'] = !this.currentSection['checked'];
            this.currentSection['indeterminate'] = false;
            /** @type {?} */
            var curChecked_1 = this.currentSection['checked'];
            this.currentSection.children.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                item['checked'] = curChecked_1;
            }));
            if (JSON.stringify(this.currentSection.personnels) != '{}' && this.currentSection['personnels']['users'].length) {
                this.currentSection['personnels']['users'].forEach((/**
                 * @param {?} user
                 * @return {?}
                 */
                function (user) {
                    user['checked'] = curChecked_1;
                }));
            }
            if (curChecked_1) {
                this.addSection(this.currentSection);
            }
            else {
                this.removeSection(this.currentSection);
            }
        }
    };
    /**
     * @param {?} section
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.addSection = /**
     * @param {?} section
     * @return {?}
     */
    function (section) {
        if (this._isSelectedInArray(section['data'][this.listIdField], this.listIdField, this.selectedSections)) {
            return;
        }
        else {
            this.selectedSections.push(section);
        }
    };
    /**
     * @param {?} section
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.removeSection = /**
     * @param {?} section
     * @return {?}
     */
    function (section) {
        var _this = this;
        if (this._isSelectedInArray(section['data'][this.listIdField], this.listIdField, this.selectedSections)) {
            this.selectedSections.forEach((/**
             * @param {?} item
             * @param {?} index
             * @return {?}
             */
            function (item, index) {
                if (item['data'][_this.listIdField] === section['data'][_this.listIdField]) {
                    _this.selectedSections.splice(index, 1);
                }
            }));
        }
    };
    /**
     * 搜索用户
     */
    /**
     * 搜索用户
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.searchUser = /**
     * 搜索用户
     * @return {?}
     */
    function () {
        if (this.searchText) {
            this.showSearchList = true;
            this.searchTextChangeSubject.next(this.searchText);
        }
        else {
            this.showSearchList = false;
        }
    };
    /**
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.clearSearch = /**
     * @return {?}
     */
    function () {
        this.showSearchList = false;
        this.searchText = '';
        this.errorText = '';
        // 取消挂起的请求
        if (this.recordGetUserSubscribe) {
            this.recordGetUserSubscribe.unsubscribe();
            this.recordGetUserSubscribe = null;
        }
        // 清除遮罩
        this.showOrHideLoading(false);
    };
    /**
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.dialogOpend = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.showOrHideLoading(false);
        this.searchTextChangeSubject = new Subject();
        this.searchTextChangeSubject.pipe(debounceTime(200)).subscribe((/**
         * @param {?} tsearchText
         * @return {?}
         */
        function (tsearchText) {
            _this.errorText = '';
            _this.showOrHideLoading(true);
            // 记录
            _this.recordGetUserSubscribe = _this.getSearchData(tsearchText, 0).subscribe((/**
             * @param {?} d
             * @return {?}
             */
            function (d) {
                _this.showOrHideLoading(false);
                if (d.hasOwnProperty("users")) {
                    _this.searchUserList = d;
                }
            }), (/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
                // 处理失败
                if (error && error.statusText) {
                    _this.errorText = error.statusText;
                }
                else {
                    _this.errorText = '出现异常';
                }
                _this.showOrHideLoading(false);
            }));
        }));
    };
    /**
     * 搜索人员查看更多
     */
    /**
     * 搜索人员查看更多
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getMoreSearchData = /**
     * 搜索人员查看更多
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.searchText && this.personSearchUrl) {
            this.getSearchData(this.searchText, this.searchUserList.pageIndex + 1).subscribe((/**
             * @param {?} d
             * @return {?}
             */
            function (d) {
                if (d.hasOwnProperty("users")) {
                    _this.searchUserList.pageIndex = d['pageIndex'];
                    _this.searchUserList['users'] = tslib_1.__spread(_this.searchUserList['users'], d['users']);
                }
            }));
        }
    };
    /**
     * @param {?} text
     * @param {?} pageIndex
     * @param {?=} pageSize
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.getSearchData = /**
     * @param {?} text
     * @param {?} pageIndex
     * @param {?=} pageSize
     * @return {?}
     */
    function (text, pageIndex, pageSize) {
        if (pageSize === void 0) { pageSize = this.pageSize; }
        if (this.personSearchUrl) {
            /** @type {?} */
            var url = "" + this.perfixStr + this.personSearchUrl + "?param=" + text + "&pageSize=" + pageSize + "&pageIndex=" + pageIndex;
            return this.http.get(url);
            //return this.http.get('assets/data/discussionPerson3.json');
        }
        else {
            return of(true);
        }
    };
    /**
     * 选中人员或组织删除
     * @param data
     * @param type
     */
    /**
     * 选中人员或组织删除
     * @param {?} data
     * @param {?} type
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.selectionRemove = /**
     * 选中人员或组织删除
     * @param {?} data
     * @param {?} type
     * @return {?}
     */
    function (data, type) {
        var _this = this;
        if (!data)
            return;
        if (type == 'user') {
            /** @type {?} */
            var index = this.selectedUsers.findIndex((/**
             * @param {?} user
             * @return {?}
             */
            function (user) {
                return user.data.id == data.data.id;
            }));
            if (index >= 0) {
                this.selectedUsers.splice(index, 1);
            }
            data.data['checked'] = false;
        }
        else if (type == 'section') {
            /** @type {?} */
            var index = this.selectedSections.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                return item.data.id == data.data.id;
            }));
            if (index >= 0) {
                this.selectedSections.splice(index, 1);
            }
            data['checked'] = false;
        }
        /** @type {?} */
        var dataParent = null;
        if (type == 'section') {
            dataParent = this.getSectionById(data.parent);
        }
        else if (type == 'user') {
            // bugNum:480649
            if (data['parent']) {
                dataParent = this.getSectionById(data.parent.data.id);
            }
        }
        if (dataParent && type == 'user') {
            // bugNum:480651
            // 如果删除的是用户并且还有父级别
            /** @type {?} */
            var delParentIndex = this.selectedSections.findIndex((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                return item.data.id == dataParent.data.id;
            }));
            if (delParentIndex > -1) {
                return;
            }
        }
        if (dataParent) {
            dataParent['checked'] = false;
            if ((dataParent.children && dataParent.children.length) || (dataParent.personnels.users && dataParent.personnels.users.length)) {
                /** @type {?} */
                var childrens = dataParent.children.filter((/**
                 * @param {?} child
                 * @return {?}
                 */
                function (child) {
                    return child['checked'];
                }));
                /** @type {?} */
                var users = dataParent.personnels.users.filter((/**
                 * @param {?} user
                 * @return {?}
                 */
                function (user) {
                    return user['checked'];
                }));
                if ((childrens && childrens.length) || (users && users.length)) {
                    dataParent['indeterminate'] = true;
                }
                else {
                    dataParent['indeterminate'] = false;
                }
                if (dataParent.parents.length > 0) {
                    dataParent.parents.forEach((/**
                     * @param {?} par
                     * @return {?}
                     */
                    function (par) {
                        /** @type {?} */
                        var parSec = _this.getSectionById(par);
                        if ((parSec.children && parSec.children.length) || (parSec.personnels.users && parSec.personnels.users.length)) {
                            /** @type {?} */
                            var parchildrens = parSec.children.filter((/**
                             * @param {?} child
                             * @return {?}
                             */
                            function (child) {
                                return child['checked'];
                            }));
                            /** @type {?} */
                            var parusers = parSec.personnels.users.filter((/**
                             * @param {?} user
                             * @return {?}
                             */
                            function (user) {
                                return user['checked'];
                            }));
                            if ((parchildrens && parchildrens.length) || (parusers && parusers.length)) {
                                parSec['indeterminate'] = true;
                            }
                            else {
                                if (dataParent['indeterminate']) {
                                    parSec['indeterminate'] = dataParent['indeterminate'];
                                }
                                else {
                                    parSec['indeterminate'] = false;
                                }
                            }
                        }
                    }));
                }
            }
        }
    };
    /**
     * 删除右侧全部数据
     */
    /**
     * 删除右侧全部数据
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.moveAllToLeft = /**
     * 删除右侧全部数据
     * @return {?}
     */
    function () {
        this.selectedUsers.forEach((/**
         * @param {?} user
         * @return {?}
         */
        function (user) {
            user.data['checked'] = false;
        }));
        this.selectedSections.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item['checked'] = false;
        }));
        this.sectionDataTiled.forEach((/**
         * @param {?} sec
         * @return {?}
         */
        function (sec) {
            sec['indeterminate'] = false;
            sec['checked'] = false;
            sec['disabled'] = false;
            if (JSON.stringify(sec.personnels) != '{}' && sec['personnels']['users'].length) {
                sec['personnels']['users'].forEach((/**
                 * @param {?} user
                 * @return {?}
                 */
                function (user) {
                    user['checked'] = false;
                }));
            }
        }));
        this.selectedUsers = [];
        this.selectedSections = [];
        this.cd.markForCheck();
    };
    /**
     *
     * @param numberType 0：取消；1：确定
     */
    /**
     *
     * @param {?} numberType 0：取消；1：确定
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.returnResult = /**
     *
     * @param {?} numberType 0：取消；1：确定
     * @return {?}
     */
    function (numberType) {
        this.finalText = '';
        if (numberType) {
            // console.log(this.selectedUsers,this.selectedSections);
            this.selectionsChange.emit({
                info: 'confirm',
                data: {
                    users: this.selectedUsers,
                    section: this.selectedSections
                }
            });
            // this.selections.forEach(item => {
            //     this.finalText += item[this.listDisplayText] + '；';
            // })
        }
        else {
            this.selectionsChange.emit({
                info: 'cancel',
                data: {
                    users: [],
                    section: []
                }
            });
        }
        this.moveAllToLeft();
        this.searchText = '';
        this.searchUser();
        this.personnelDialog.close();
    };
    /**
     *  面包屑列表显示
     */
    /**
     *  面包屑列表显示
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.initCrumbsList = /**
     *  面包屑列表显示
     * @return {?}
     */
    function () {
        /** @type {?} */
        var crumbsListWidth = this.crumbsList.nativeElement.offsetWidth - 30;
        /** @type {?} */
        var crumbsListItems = this.crumbsList.nativeElement.children;
        /** @type {?} */
        var crumbsListItemWidth = 0;
        if (crumbsListItems && crumbsListItems.length) {
            for (var i = crumbsListItems.length - 1; i >= 0; i--) {
                this.renderer.setStyle(crumbsListItems[i], 'display', 'flex');
                /** @type {?} */
                var width = crumbsListItems[i].offsetWidth;
                crumbsListItemWidth += width;
                if (crumbsListItemWidth >= crumbsListWidth) {
                    this.renderer.setStyle(crumbsListItems[i], 'display', 'none');
                }
                else {
                    this.renderer.setStyle(crumbsListItems[i], 'display', 'flex');
                }
            }
        }
        ;
        if (crumbsListItemWidth >= crumbsListWidth) {
            this.crumbsEllipsis = true;
        }
        else {
            this.crumbsEllipsis = false;
        }
    };
    /**
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.crumbsMore = /**
     * @return {?}
     */
    function () {
        if (this.sectionCrumbs && this.sectionCrumbs.length) {
            this.crumbsClick(this.sectionCrumbs[0]);
        }
    };
    /**
     * @param {?} value
     * @param {?} field
     * @param {?} array
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype._isInArray = /**
     * @param {?} value
     * @param {?} field
     * @param {?} array
     * @return {?}
     */
    function (value, field, array) {
        if (!field || !value) {
            throw new Error('前2个参数必填');
        }
        return array.find((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return value === item[field]; })) ? true : false;
    };
    /**
     * @param {?} value
     * @param {?} field
     * @param {?} array
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype._isSelectedInArray = /**
     * @param {?} value
     * @param {?} field
     * @param {?} array
     * @return {?}
     */
    function (value, field, array) {
        if (!field || !value) {
            throw new Error('前2个参数必填');
        }
        return array.find((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return value === item['data'][field]; })) ? true : false;
    };
    /**
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.closeDialog = /**
     * @return {?}
     */
    function () {
        this.moveAllToLeft();
        this.clearSearch();
        this.searchUser();
    };
    /**
     * 显示或隐藏正在加载
     * @param showOrHide ：true为显示，hide为隐藏
     */
    /**
     * 显示或隐藏正在加载
     * @private
     * @param {?} showOrHide ：true为显示，hide为隐藏
     * @return {?}
     */
    DiscussionPersonnelComponent.prototype.showOrHideLoading = /**
     * 显示或隐藏正在加载
     * @private
     * @param {?} showOrHide ：true为显示，hide为隐藏
     * @return {?}
     */
    function (showOrHide) {
        if (!this.discussionContent || !this.loadingSer) {
            return;
        }
        if (showOrHide) {
            // 打开
            if (!this.loadingInstance) {
                this.loadingInstance = this.loadingSer.show({ delay: 500, container: this.discussionContent, type: 1, message: '全力加载中...' });
            }
        }
        else if (this.loadingInstance) {
            // 关闭
            this.loadingSer.close(this.loadingInstance.id);
            this.loadingInstance = null;
        }
    };
    DiscussionPersonnelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-discussion-personnel',
                    template: "<div class=\"farris-discussion-personnel-wrapper\">\r\n    <button class=\"btn btn-link\" (click)=\"personnelDialog.show()\">{{ 'discussionGroup.advancedQuery' | locale }}</button>\r\n</div>\r\n<ng-template #buttonRef>\r\n    <div class=\"farris-input-wrap mr-auto f-utils-overflow-hidden\" *ngIf=\"errorText\" [title]=\"errorText\">\r\n        <div class=\"farris-feedback f-state-invalid position-static text-ellipse\"\r\n            style=\" white-space: nowrap;text-overflow: ellipsis;overflow: hidden;\">\r\n            <span class=\"f-icon f-icon-message_warning f-feedback-icon mr-2\"></span>{{errorText}}\r\n        </div>\r\n    </div>\r\n    <button class=\"btn btn-secondary\" (click)=\"returnResult(0)\">{{ 'discussionGroup.cancel' | locale }}</button>\r\n    <button class=\"btn btn-primary\" (click)=\"returnResult(1)\">{{ 'discussionGroup.confirm' | locale }}</button>\r\n</ng-template>\r\n<farris-dialog #personnelDialog [buttons]=\"buttonRef\" [width]=\"690\" [height]=\"520\" [resizable]=\"false\" [title]=\"selectEmployee\" (opened)=\"dialogOpend()\" (closed)=\"closeDialog()\">\r\n    <div class=\"f-discussion-dialog-content\" #discussionContent>\r\n        <div class=\"f-discussion-dialog-content-left col-6 d-flex flex-column\">\r\n            <div class=\"f-discussion-personnel-search\">\r\n                <input-group [placeholder]=\"placeholder\" [groupText]=\"groupIcon\" [(ngModel)]=\"searchText\" (clear)=\"clearSearch()\" (valueChange)=\"searchUser()\" (enterHandle)=\"searchUser()\" (clickHandle)=\"searchUser()\"></input-group>\r\n            </div>\r\n            <div class=\"f-discussion-tab-content f-utils-fill d-flex flex-column\" >\r\n                <div class=\"f-discussion-personnel-content f-utils-fill d-flex flex-column\" [ngClass]=\"{'f-discussion-personnel-content-hide': showSearchList}\">\r\n                    <div class=\"f-discussion-personnel-crumbs d-flex\">\r\n                        <ul class=\"crumbs-list d-flex\" #crumbsList [ngClass]=\"{'crumbs-list-padding': crumbsEllipsis}\" *ngIf=\"sectionCrumbs && sectionCrumbs.length\">\r\n                            <li class=\"crumbs-list-item\" *ngFor=\"let crumbs of sectionCrumbs;let first = first;let last = last;\" (click)=\"crumbsClick(crumbs)\"  \r\n                            [ngClass]=\"{'crumbs-list-item-disabled': !(first || !last)}\">\r\n                                <!-- bugNum\uFF1A449399 -->\r\n                                <span class=\"crumbs-text\" [title]=\"crumbs.name\">{{crumbs.name}}</span>\r\n                                <span class=\"crumbs-arrow f-icon f-icon-arrow-chevron-right\" *ngIf=\"first || !last\"></span>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"crumbs-list-ellipsis crumbs-list-item\" *ngIf=\"crumbsEllipsis\" (click)=\"crumbsMore()\">\r\n                            <span class=\"crumbs-text\">...</span>\r\n                            <span class=\"crumbs-arrow f-icon f-icon-arrow-chevron-right\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"f-discussion-section-content f-utils-fill\">\r\n                        <perfect-scrollbar>\r\n                            <ul class=\"f-discussion-section-list\">\r\n                                <!-- <li class=\"section-list-item\" *ngIf=\"currentSectionData.length || currentSectionPerson.users.length\" (click)=\"handleClickAll($event)\">\r\n                                    <div class=\"custom-control custom-checkbox  custom-control-inline section-list-item-checkbox\">\r\n                                        <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"currentSection.checked\" [disabled]=\"currentSection.disabled\" [indeterminate]=\"currentSection.indeterminate\">\r\n                                        <label class=\"custom-control-label\"></label>\r\n                                    </div>\r\n                                    <div class=\"section-list-item-name f-utils-fill\">\r\n                                        \u5168\u9009\r\n                                    </div>\r\n                                </li> -->\r\n                                <li class=\"section-list-item\" *ngFor=\"let section of currentSectionData\">\r\n                                    <div class=\"custom-control custom-checkbox custom-control-inline section-list-item-checkbox\" (click)=\"handleClick($event,section,'section')\">\r\n                                        <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"section.checked\" [indeterminate]=\"section.indeterminate\" [disabled]=\"currentSection.disabled\">\r\n                                        <label class=\"custom-control-label\"></label>\r\n                                    </div>\r\n                                    <div class=\"section-list-item-name f-utils-fill\" [attr.data-orgid]=\"section.data.id\" [title]=\"section.data.name\" (click)=\"handleClick($event,section,'section')\">\r\n                                        {{section.data.name}}\r\n                                    </div>\r\n                                    <div class=\"section-list-item-next\" (click)=\"sectionNext(section)\">\r\n                                        {{ 'discussionGroup.next' | locale }}\r\n                                    </div>\r\n                                </li>\r\n                                <ng-container *ngIf=\"currentSectionPerson\">\r\n                                    <li class=\"section-list-item person-list-item\" *ngFor=\"let person of currentSectionPerson.users\" (click)=\"handleClick($event,person,'user')\">\r\n                                        <div class=\"custom-control custom-checkbox  custom-control-inline section-list-item-checkbox\">\r\n                                            <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"person.checked\" [disabled]=\"currentSection.disabled\">\r\n                                            <label class=\"custom-control-label\"></label>\r\n                                        </div>\r\n                                        <div class=\"person-list-item-img\">\r\n                                            <img [src]=\"person.imgData\" alt=\"\" *ngIf=\"person.imgData\">\r\n                                            <div class=\"f-discussion-personnel-item-tip\" *ngIf=\"!person.imgData\" [innerHTML]=\"person | avatarHtml\"></div>\r\n                                        </div>\r\n                                        <div class=\"person-list-item-content f-utils-fill\">\r\n                                            <div class=\"section-list-item-name\" [title]=\"person.name\">\r\n                                                {{person.name}}\r\n                                            </div>\r\n                                            <div class=\"section-list-item-tip\">\r\n                                                <!-- {{person.email}} -->\r\n                                                <span *ngIf=\"sectionCrumbs.length>=2\">{{sectionCrumbs[sectionCrumbs.length - 2].name}}</span>\r\n                                                <span *ngIf=\"sectionCrumbs.length>=2\">/</span>\r\n                                                <span>{{sectionCrumbs[sectionCrumbs.length - 1].name}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- \u4EBA\u5458\u5217\u8868 -->\r\n                                    </li>\r\n                                    <div class=\"f-discussion-person-list-page\" *ngIf=\"currentSectionPerson['users'] && currentSectionPerson['users'].length\">\r\n                                        <span class=\"section-page-more section-page-text\" *ngIf=\"currentSectionPerson.pageIndex < currentSectionPerson.pageCount-1\" (click)=\"getMoreData()\">{{ 'discussionGroup.viewMore' | locale }}</span>\r\n                                        <!-- <span class=\"section-page-end section-page-text\"  *ngIf=\"currentSectionPerson.pageIndex >= currentSectionPerson.pageCount-1\">\u52A0\u8F7D\u5B8C\u6210</span> -->\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ul>\r\n                            <div class=\"f-discussion-section-list-empty\" *ngIf=\"!currentSectionData.length &&(currentSectionPerson.users && !currentSectionPerson.users.length)\">\r\n                                <span class=\"f-icon f-icon-top_my\"></span>\r\n                                <span class=\"section-list-empty-text\">{{ 'discussionGroup.emptyList' | locale }}</span>\r\n                            </div>\r\n                        </perfect-scrollbar>\r\n                    </div>\r\n                </div>\r\n                <div class=\"f-discussion-personnel-search-list f-utils-fill\" [hidden]=\"!showSearchList\">\r\n                    <perfect-scrollbar>\r\n                        <ul class=\"f-discussion-section-list\" *ngIf=\"searchUserList && searchUserList.users && searchUserList.users.length\">\r\n                            <li class=\"section-list-item person-list-item\" *ngFor=\"let user of searchUserList.users\" (click)=\"handleSearchClick($event,user)\">\r\n                                <div class=\"custom-control custom-checkbox  custom-control-inline section-list-item-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"user.checked\">\r\n                                    <label class=\"custom-control-label\"></label>\r\n                                </div>\r\n                                <div class=\"person-list-item-img\">\r\n                                    <img [src]=\"user.imgData\" alt=\"\" *ngIf=\"user.imgData\">\r\n                                    <div class=\"f-discussion-personnel-item-tip\" *ngIf=\"!user.imgData\" [innerHTML]=\"user | avatarHtml\"></div>\r\n                                </div>\r\n                                <div class=\"person-list-item-content f-utils-fill\">\r\n                                    <div class=\"section-list-item-name\" [title]=\"user.name\">\r\n                                        {{user.name}}\r\n                                    </div>\r\n                                    <div class=\"section-list-item-tip\">\r\n                                        <span [innerHTML]=\"user | getOrgText:sectionData\"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"f-discussion-person-list-page\">\r\n                                <span class=\"section-page-more section-page-text\" *ngIf=\"searchUserList.pageIndex < searchUserList.pageCount-1\" (click)=\"getMoreSearchData()\">{{ 'discussionGroup.viewMore' | locale }}</span>\r\n                            </div>\r\n                        </ul>\r\n                        <div class=\"f-discussion-section-list-empty\" *ngIf=\"!searchUserList.users || !searchUserList.users.length\">\r\n                            <span class=\"f-icon f-icon-top_my\"></span>\r\n                            <span class=\"section-list-empty-text\">{{ 'discussionGroup.emptyList' | locale }}</span>\r\n                        </div>\r\n                    </perfect-scrollbar>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-discussion-dialog-content-right f-utils-fill d-flex flex-column\">\r\n            <div class=\"f-discussion-selected-personnel f-utils-fill d-flex flex-column\">\r\n                <div class=\"f-discussion-selected-personnel-header\">\r\n                    <div class=\"f-discussion-selected-personnel-header-text\">\r\n                        <span>{{ 'discussionGroup.selected' | locale }}</span>(<span>{{ 'discussionGroup.people' | locale }}</span><span>{{selectedUsers.length}}</span><span>{{ 'discussionGroup.per' | locale }}</span>\uFF0C<span>{{ 'discussionGroup.section' | locale }}</span><span>{{selectedSections.length}}</span><span>{{ 'discussionGroup.pcs' | locale }}</span>)\r\n                    </div>\r\n                    <div class=\"f-discussion-selected-personnel-header-btn\" (click)=\"moveAllToLeft()\">\r\n                        <button class=\"btn btn-link\">{{ 'discussionGroup.emptySelected' | locale }}</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"f-discussion-selected-personnel-content f-utils-fill d-flex flex-column\">\r\n                    <div class=\"f-discussion-selected-list f-utils-fill\">\r\n                        <perfect-scrollbar>\r\n                            <div class=\"f-discussion-selected-item\" *ngFor=\"let user of selectedUsers\">\r\n                                <div class=\"f-discussion-personnel-item-avatar\">\r\n                                    <img [src]=\"user.data.imgData\" alt=\"\" *ngIf=\"user.data.imgData\">\r\n                                    <div class=\"f-discussion-personnel-item-tip\" *ngIf=\"!user.data.imgData\" [innerHTML]=\"user.data | avatarHtml\"></div>\r\n                                </div>\r\n                                <div class=\"f-discussion-selected-item-text f-utils-fill\">\r\n                                    <div class=\"f-discussion-selected-name\">\r\n                                        {{user.data.name}}\r\n                                    </div>\r\n                                    <div class=\"f-discussion-selected-item-tip\" *ngIf=\"user.parent\">\r\n                                        <span *ngIf=\"user.parent.parentsArr.length>=1\">{{user.parent.parentsArr[user.parent.parentsArr.length - 1].name}}</span>\r\n                                            <span *ngIf=\"user.parent.parentsArr.length>=1\">/</span>\r\n                                            <span>{{user.parent.data.name}}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"f-discussion-selected-item-remove\" (click)=\"selectionRemove(user,'user')\">\r\n                                    <span class=\"f-icon f-icon-close-outline\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"f-discussion-selected-item\" *ngFor=\"let section of selectedSections\">\r\n                                <div class=\"f-discussion-selected-item-text f-utils-fill\">\r\n                                    <div class=\"f-discussion-selected-name\">\r\n                                        {{section.data.name}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"f-discussion-selected-item-remove\" (click)=\"selectionRemove(section,'section')\">\r\n                                    <span class=\"f-icon f-icon-close-outline\"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"f-discussion-section-list-empty\" *ngIf=\"!selectedUsers.length && !selectedSections.length\">\r\n                                <span class=\"f-icon f-icon-top_my\"></span>\r\n                                <span class=\"section-list-empty-text\">{{ 'discussionGroup.emptyRight' | locale }}</span>\r\n                            </div>\r\n                        </perfect-scrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</farris-dialog>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    DiscussionPersonnelComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef },
        { type: NgZone },
        { type: HttpClient },
        { type: ChangeDetectorRef },
        { type: Injector }
    ]; };
    DiscussionPersonnelComponent.propDecorators = {
        listIdField: [{ type: Input }],
        listDisplayText: [{ type: Input }],
        sectionData: [{ type: Input }],
        orgUrl: [{ type: Input }],
        personSearchUrl: [{ type: Input }],
        urlGetOrgByLayer: [{ type: Input }],
        personnelDialog: [{ type: ViewChild, args: ['personnelDialog',] }],
        selectionsChange: [{ type: Output }],
        lineDataChange: [{ type: Output }],
        openDialog: [{ type: Output }],
        ougUsers: [{ type: Output }],
        crumbsList: [{ type: ViewChild, args: ['crumbsList',] }],
        discussionContent: [{ type: ViewChild, args: ['discussionContent',] }]
    };
    return DiscussionPersonnelComponent;
}());
export { DiscussionPersonnelComponent };
if (false) {
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.listIdField;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.listDisplayText;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.sectionData;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.orgUrl;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.personSearchUrl;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.urlGetOrgByLayer;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.personnelDialog;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.selectionsChange;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.lineDataChange;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.openDialog;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.ougUsers;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.crumbsList;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.discussionContent;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.loadingInstance;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.selections;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.selectedSections;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.selectedUsers;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.searchText;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.finalText;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.sectionDataTree;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.sectionDataTiled;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.currentSectionData;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.currentSection;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.currentSectionPerson;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.currentSectionId;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.sectionCrumbs;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.pageSize;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.showSearchList;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.crumbsEllipsis;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.searchUserList;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.selectEmployee;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.placeholder;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.allOrg;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.localeService;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.loadingSer;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.groupIcon;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.recordGetUserSubscribe;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.searchTextChangeSubject;
    /** @type {?} */
    DiscussionPersonnelComponent.prototype.errorText;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.perfixStr;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.http;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    DiscussionPersonnelComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,