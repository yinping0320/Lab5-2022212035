/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input } from '@angular/core';
import { DiscussionListService } from './discussion-list.service';
export class DiscussionListDirective {
    /**
     * @param {?} discussionListService
     */
    constructor(discussionListService) {
        this.discussionListService = discussionListService;
        // private comments=[];
        // @Input('discussionListData') 
        // set discussionListData(datas){
        //     if(datas){
        //         this.discussionListService.resetData(datas);
        //         this.comments=[...datas];
        //     }
        // };
        // get discussionListData(){
        //     return this.comments;
        // }
        this._discussionListData = [];
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set discussionListData(data) {
        if (data) {
            this._discussionListData = data;
            this.discussionListService.resetData(data);
            // this.comments=[...data];
        }
    }
    /**
     * @return {?}
     */
    get discussionListData() {
        return this._discussionListData;
    }
}
DiscussionListDirective.decorators = [
    { type: Directive, args: [{
                selector: '[fDiscussionList]'
            },] }
];
/** @nocollapse */
DiscussionListDirective.ctorParameters = () => [
    { type: DiscussionListService }
];
DiscussionListDirective.propDecorators = {
    discussionListData: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DiscussionListDirective.prototype._discussionListData;
    /**
     * @type {?}
     * @private
     */
    DiscussionListDirective.prototype.discussionListService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY3Vzc2lvbkxpc3QuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kaXNjdXNzaW9uLWdyb3VwLyIsInNvdXJjZXMiOlsibGliL2Rpc2N1c3Npb24tbGlzdC9kaXNjdXNzaW9uTGlzdC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR2pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBS2xFLE1BQU0sT0FBTyx1QkFBdUI7Ozs7SUEwQmhDLFlBQW9CLHFCQUEyQztRQUEzQywwQkFBcUIsR0FBckIscUJBQXFCLENBQXNCOzs7Ozs7Ozs7Ozs7UUFiL0Qsd0JBQW1CLEdBQUcsRUFBRSxDQUFDO0lBY3pCLENBQUM7Ozs7O0lBYkQsSUFDSSxrQkFBa0IsQ0FBQyxJQUFJO1FBQ3pCLElBQUcsSUFBSSxFQUFDO1lBQ04sSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQztZQUNoQyxJQUFJLENBQUMscUJBQXFCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzNDLDJCQUEyQjtTQUM1QjtJQUNILENBQUM7Ozs7SUFDRCxJQUFJLGtCQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztJQUNsQyxDQUFDOzs7WUEzQkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxtQkFBbUI7YUFDaEM7Ozs7WUFKUSxxQkFBcUI7OztpQ0FtQnpCLEtBQUs7Ozs7SUFETixzREFBeUI7Ozs7O0lBYWIsd0RBQW1EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBvZiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBkaXNjdXNzaW9uQ29uZmlnIH0gZnJvbSAnLi9kaXNjdXNzaW9uTGlzdC5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBEaXNjdXNzaW9uTGlzdFNlcnZpY2UgfSBmcm9tICcuL2Rpc2N1c3Npb24tbGlzdC5zZXJ2aWNlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbZkRpc2N1c3Npb25MaXN0XSdcclxufSlcclxuZXhwb3J0IGNsYXNzIERpc2N1c3Npb25MaXN0RGlyZWN0aXZlIHtcclxuICAgIC8vIHByaXZhdGUgY29tbWVudHM9W107XHJcbiAgICAvLyBASW5wdXQoJ2Rpc2N1c3Npb25MaXN0RGF0YScpIFxyXG4gICAgLy8gc2V0IGRpc2N1c3Npb25MaXN0RGF0YShkYXRhcyl7XHJcbiAgICAvLyAgICAgaWYoZGF0YXMpe1xyXG4gICAgLy8gICAgICAgICB0aGlzLmRpc2N1c3Npb25MaXN0U2VydmljZS5yZXNldERhdGEoZGF0YXMpO1xyXG4gICAgLy8gICAgICAgICB0aGlzLmNvbW1lbnRzPVsuLi5kYXRhc107XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfTtcclxuICAgIC8vIGdldCBkaXNjdXNzaW9uTGlzdERhdGEoKXtcclxuICAgIC8vICAgICByZXR1cm4gdGhpcy5jb21tZW50cztcclxuICAgIC8vIH1cclxuXHJcbiAgICBfZGlzY3Vzc2lvbkxpc3REYXRhID0gW107XHJcbiAgICBASW5wdXQoKSBcclxuICAgIHNldCBkaXNjdXNzaW9uTGlzdERhdGEoZGF0YSkge1xyXG4gICAgICBpZihkYXRhKXtcclxuICAgICAgICB0aGlzLl9kaXNjdXNzaW9uTGlzdERhdGEgPSBkYXRhO1xyXG4gICAgICAgIHRoaXMuZGlzY3Vzc2lvbkxpc3RTZXJ2aWNlLnJlc2V0RGF0YShkYXRhKTtcclxuICAgICAgICAvLyB0aGlzLmNvbW1lbnRzPVsuLi5kYXRhXTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZ2V0IGRpc2N1c3Npb25MaXN0RGF0YSgpe1xyXG4gICAgICByZXR1cm4gdGhpcy5fZGlzY3Vzc2lvbkxpc3REYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGlzY3Vzc2lvbkxpc3RTZXJ2aWNlOkRpc2N1c3Npb25MaXN0U2VydmljZSkge1xyXG4gICAgfVxyXG59Il19