!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("resize-observer-polyfill"),require("@angular/common"),require("@angular/core"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@farris/ui-view-change",["exports","resize-observer-polyfill","@angular/common","@angular/core","rxjs","rxjs/operators"],t):t((e.farris=e.farris||{},e.farris["ui-view-change"]={}),e.ResizeObserver,e.ng.common,e.ng.core,e.rxjs,e.rxjs.operators)}(this,function(e,t,i,n,r,s){"use strict";t=t&&t.hasOwnProperty("default")?t["default"]:t;var a=(o.prototype.addViewItem=function(e,t){if(void 0===t&&(t=this.defaultId),this.viewContainers[t]){if(this.hasElement(e,t))return;this.viewContainers[t].items.push(e)}else this.viewContainers[t]={items:[]},this.createViewContainerChange(t),this.viewContainers[t].items.push(e)},o.prototype.removeViewItem=function(t,e){if(void 0===e&&(e=this.defaultId),this.viewContainers&&this.viewContainers[e]){var i=this.viewContainers[e].items.filter(function(e){return e!==t});if(!i.length)return delete this.viewContainers[e],void(this.changeCurrentViewId[e]&&(this.changeCurrentViewId[e].unsubscribe(),this.changeCurrentViewId[e]=null,delete this.changeCurrentViewId[e]));this.viewContainers[e].items=i}},o.prototype.updateCurrentViewId=function(e,t){void 0===t&&(t=this.defaultId),this.currentViewType[t]=e;var i={};i[t]=this.currentViewType[t],this.createViewContainerChange(t),this.changeCurrentViewId[t].next(i)},o.prototype.getChangeCurrentViewId=function(e){return void 0===e&&(e=this.defaultId),this.changeCurrentViewId[e]},o.prototype.changeCurrentViewIdFromCMP=function(e,t){void 0===t&&(t=this.defaultId),this.currentViewType[t]||(this.currentViewType[t]=e),this.updateCurrentViewId(this.currentViewType[t],t)},o.prototype.hasElement=function(t,e){return this.viewContainers[e].items.some(function(e){return e===t})},o.prototype.createViewContainerChange=function(e){void 0===e&&(e=this.defaultId),this.changeCurrentViewId[e]||(this.changeCurrentViewId[e]=new r.BehaviorSubject(null))},o.prototype.hasViewContainer=function(){return 0==Object.keys(this.viewContainers).length&&0==Object.keys(this.changeCurrentViewId).length},o.decorators=[{type:n.Injectable}],o.ctorParameters=function(){return[]},o);function o(){this.defaultId="default",this.currentViewType={},this.viewContainers={},this.changeCurrentViewId={}}var c=(h.prototype.getModuleInfo=function(e){return void 0===e&&(e=""),e=e||this.current.guid,this.storeViewChangeSer[e]},h.prototype.removeModuleInfo=function(t){if(t&&this.storeViewChangeSer.hasOwnProperty(t)){this.storeViewChangeSer[t]=null,delete this.storeViewChangeSer[t];var e=this.storeViewChangeCmps.findIndex(function(e){return e.guid==t});this.storeViewChangeCmps.splice(e,1)}},h.prototype.getModuleChange=function(){return this.guidChangeSubject},h.prototype.createViewChangeCmp=function(e,t){var i=this.getGuidFromStoreViewChangeCmp(e.groupId,t);if(i)return i;this.current=Object.assign({guid:this.createGuid()},e),this.storeViewChangeSer.hasOwnProperty(this.current.guid)||(this.storeViewChangeSer[this.current.guid]=new a);var n=Object.assign({},this.current);if(this.currentInfos.push(n),this.storeViewChangeCmps.push(Object.assign({cmpId:t.id,cmpEl:t,parentEl:null},this.current)),0<this.currentDirectiveInstance.length){var r=this.currentDirectiveInstance[0].fViewGroupId;this.current.groupId==r?this.doDirectiveInstanceInit(this.currentDirectiveInstance,this.current.guid):(this.storeDirectiveInstances.push({groupId:r,instances:[].concat(this.currentDirectiveInstance)}),this.currentDirectiveInstance=[],this.findInstoreDirectiveInstances())}else this.findInstoreDirectiveInstances();return this.guidChangeSubject.next(this.currentInfos),n.guid},h.prototype.findInstoreDirectiveInstances=function(){var t=this,e=this.storeDirectiveInstances.findIndex(function(e){return e.groupId==t.current.groupId});-1<e&&this.doDirectiveInstanceInit(this.storeDirectiveInstances[e].instances,this.current.guid)},h.prototype.doDirectiveInstanceInit=function(e,t){for(var i=e.length,n=0;n<i&&e&&e.length==i;n++)e[n].viewChangeOnInit(t);e&&0<e.length&&e.length!=i&&this.doDirectiveInstanceInit(e,t)},h.prototype.storeViewChangeDirectiveInstance=function(t){if(this.current.groupId&&this.current.groupId!=t.fViewGroupId){var e=this.storeDirectiveInstances.find(function(e){return e.groupId==t.fViewGroupId});e?e.instances.push(t):this.storeDirectiveInstances.push({groupId:t.fViewGroupId,instances:[t]})}else this.currentDirectiveInstance.push(t)},h.prototype.removeViewChangeDirectiveInstance=function(t,i){if(i==this.current.guid&&0<this.currentDirectiveInstance.length){var e=this.currentDirectiveInstance.findIndex(function(e){return e.viewItemType==t});-1<e&&this.currentDirectiveInstance.splice(e,1)}var n=this.currentInfos.findIndex(function(e){return e.guid==i});if(-1<n){var r=this.currentInfos[n];if(r.count=r.count-1,r.count<=0){this.currentInfos.splice(n,1);var s=this.storeDirectiveInstances.findIndex(function(e){return e.groupId==r.groupId});this.storeDirectiveInstances.splice(s,1),this.current.guid==i&&(this.current={guid:"",groupId:"",count:0})}}},h.prototype.createGuid=function(){var e=function(){return(65536*(1+Math.random())|0).toString(16).substring(1)};return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},h.prototype.updatedStoreViewChangeCmp=function(t,e,i){var n=this.storeViewChangeCmps.find(function(e){return!e.parentEl&&e.guid==t});if(n){var r=this.findCommonParent(i,n.cmpEl);n.parentEl=r,n.cmpEl=null}},h.prototype.findCommonParent=function(e,t){for(var i=e;null!==i;){if(i.contains(t))return i;i=i.parentElement}return null},h.prototype.getGuidFromStoreViewChangeCmp=function(t,i){var e=this.storeViewChangeCmps.find(function(e){if(e.groupId==t&&e.cmpId==i.id)return!!e.parentEl&&e.parentEl.contains(i)});return e?e.guid:""},h.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],h.ctorParameters=function(){return[]},h.ngInjectableDef=n.defineInjectable({factory:function(){return new h},token:h,providedIn:"root"}),h);function h(){this.currentInfos=[],this.current={guid:"",groupId:"",count:0},this.storeDirectiveInstances=[],this.currentDirectiveInstance=[],this.guidChangeSubject=new r.BehaviorSubject([{guid:"",groupId:"",count:0}]),this.storeViewChangeSer={},this.storeViewChangeCmps=[]}var u=(p.prototype.ngOnInit=function(){var t=this;if(this.guid=this.viewChangeService.createViewChangeCmp({groupId:this.viewGroupId,count:this.toolbarData.length},this.viewchangewrapper.nativeElement.parentElement),this.viewChangeManageSer=this.viewChangeService.getModuleInfo(this.guid),this.toolbarData&&this.toolbarData.length)if(this.defaultType){var e=this.toolbarData.find(function(e){return e.type===t.defaultType});this.activeTypeItem=e,this.toolTypeChange.emit(this.activeTypeItem)}else this.activeTypeItem=this.toolbarData[0],this.toolTypeChange.emit(this.activeTypeItem)},p.prototype.ngAfterViewInit=function(){this.observerElement()},p.prototype.ngOnDestroy=function(){this.ro&&(this.ro.unobserve(this.viewchangewrapper.nativeElement),this.ro=null)},p.prototype.listItemClick=function(e){e.disable||this.activeTypeItem.type===e.type||(this.activeTypeItem=e,this.viewChangeManageSer.updateCurrentViewId(this.activeTypeItem.type,this.viewGroupId),this.toolTypeChange.emit(e),this.typelist&&this._renderer.setStyle(this.typelist.nativeElement,"display","none"))},p.prototype.dropdownMouseEnter=function(){this._renderer.setStyle(this.typelist.nativeElement,"display","block")},p.prototype.dropdownMouseLeave=function(){this._renderer.setStyle(this.typelist.nativeElement,"display","none")},p.prototype.observerElement=function(){var i=this;this.inject?(this.ngZone||(this.ngZone=this.inject.get(n.NgZone,null)),this.ro||this.ngZone.runOutsideAngular(function(){i.ro=new t(function(e,t){0<e[0].contentRect.width&&i.viewChangeManageSer.changeCurrentViewIdFromCMP(i.activeTypeItem.type,i.viewGroupId)}),i.ro.observe(i.viewchangewrapper.nativeElement)})):this.viewChangeManageSer.changeCurrentViewIdFromCMP(this.activeTypeItem.type,this.viewGroupId)},p.decorators=[{type:n.Component,args:[{selector:"farris-view-change",template:'<div class="f-view-change" #viewchangewrapper>\r\n    <div class="f-view-change-tile" *ngIf="viewType === \'tile\'; else dropdown">\r\n        <div class="f-view-change-tile-btn" *ngFor="let item of toolbarData" [ngClass]="{\'tile-btn-active\': item.type === activeTypeItem.type,\'tile-btn-disable\': item.disable}" (click)="listItemClick(item)" [title]="item.title">\r\n            <span class="tile-btn-icon {{item.iconName}}"></span>\r\n        </div>\r\n    </div>\r\n    <ng-template #dropdown>\r\n        <div class="f-view-change-dropdown" \r\n        (mouseenter)="dropdownMouseEnter()"\r\n        (mouseleave)="dropdownMouseLeave()"> \r\n            <div class="f-view-change-toggle" *ngIf="this.toolbarData.length">\r\n                <span class="toggle-btn-icon {{activeTypeItem.iconName}}"></span>\r\n            </div>\r\n            <div class="f-view-change-typelist" #typelist>\r\n                <div class="f-view-change-typelist-content">\r\n                    <div class="f-view-change-typelist-arrow"></div>\r\n                    <ul class="f-view-change-typelist-list">\r\n                        <li class="typelist-item" *ngFor="let item of toolbarData" [ngClass]="{\'typelist-item-active\': item.type === activeTypeItem.type,\'typelist-item-disable\': item.disable}" (click)="listItemClick(item)">\r\n                                <span class="typelist-item-icon {{item.iconName}}"></span>\r\n                                <span class="typelist-item-title">{{item.title}}</span>\r\n                            </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \x3c!-- <ul class="f-view-change-typelist" #typelist>\r\n                <li class="f-view-change-typelist-arrow"></li>\r\n                <li class="typelist-item" *ngFor="let item of toolbarData" [ngClass]="{\'typelist-item-active\': item.type === activeTypeItem.type,\'typelist-item-disable\': item.disable}" (click)="listItemClick(item)">\r\n                    <span class="typelist-item-icon {{item.iconName}}"></span>\r\n                    <span class="typelist-item-title">{{item.title}}</span>\r\n                </li>\r\n            </ul> --\x3e\r\n        </div>\r\n    </ng-template>\r\n</div>',encapsulation:n.ViewEncapsulation.None,styles:[".f-viewchange-view-none{display:none!important}"]}]}],p.ctorParameters=function(){return[{type:n.Renderer2},{type:c,decorators:[{type:n.Optional}]},{type:n.Injector,decorators:[{type:n.Optional}]}]},p.propDecorators={toolbarData:[{type:n.Input}],viewType:[{type:n.Input}],defaultType:[{type:n.Input}],viewGroupId:[{type:n.Input}],toolTypeChange:[{type:n.Output}],typelist:[{type:n.ViewChild,args:["typelist"]}],viewchangewrapper:[{type:n.ViewChild,args:["viewchangewrapper"]}]},p);function p(e,t,i){this._renderer=e,this.viewChangeService=t,this.inject=i,this.viewType="tile",this.viewGroupId="default",this.toolTypeChange=new n.EventEmitter,this.guid="",this.ngZone=null,this.ro=null,this.viewChangeService||(this.viewChangeService=new c)}var l=(d.prototype.ngOnInit=function(){var i=this;this.viewChangeService.storeViewChangeDirectiveInstance(this),this.viewChangeService.getModuleChange().pipe(s.takeUntil(this.cancelSignal)).subscribe(function(e){if(!i.hasInit){var t=e.find(function(e){return e.groupId==i.fViewGroupId});t&&i.viewChangeOnInit(t.guid)}})},d.prototype.viewChangeOnInit=function(e){var t=this;this.hasInit||(this.guid=e,this.hasInit=!0,this.cancelSignal.next(),this.cancelSignal.complete(),this.viewChangeManageSer=this.viewChangeService.getModuleInfo(e),this.viewChangeService.updatedStoreViewChangeCmp(this.guid,this.fViewGroupId,this.elementRef.nativeElement),this.viewChangeService.removeViewChangeDirectiveInstance(this.viewItemType,this.guid),this.viewChangeManageSer.addViewItem(this.viewItemType,this.fViewGroupId),this.viewChangeManageSer.getChangeCurrentViewId(this.fViewGroupId).subscribe(function(e){e&&e[t.fViewGroupId]&&(e[t.fViewGroupId]==t.viewItemType?t.render.removeClass(t.elementRef.nativeElement,"f-viewchange-view-none"):t.render.addClass(t.elementRef.nativeElement,"f-viewchange-view-none"))}))},d.prototype.ngOnDestroy=function(){this.viewChangeManageSer?(this.viewChangeManageSer.removeViewItem(this.viewItemType,this.fViewGroupId),this.viewChangeManageSer.hasViewContainer()&&this.viewChangeService.removeModuleInfo(this.guid)):this.cancelSignal=null},d.decorators=[{type:n.Directive,args:[{selector:"[fViewItem]"}]}],d.ctorParameters=function(){return[{type:n.ElementRef},{type:c},{type:n.Renderer2}]},d.propDecorators={viewItemType:[{type:n.Input,args:["fViewItem"]}],fViewGroupId:[{type:n.Input,args:["fViewGroupId"]}]},d);function d(e,t,i){this.elementRef=e,this.viewChangeService=t,this.render=i,this.fViewGroupId="default",this.guid="",this.hasInit=!1,this.cancelSignal=new r.Subject}var g=(v.decorators=[{type:n.NgModule,args:[{declarations:[u,l],imports:[i.CommonModule],providers:[c,a],exports:[u,l]}]}],v.ctorParameters=function(){return[]},v);function v(){}e.ViewChangeService=c,e.ViewChangeComponent=u,e.ViewChangeModule=g,e.FarrisViewItemDirective=l,e.ViewChangeManageService=a,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-view-change.umd.min.js.map