/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { AngularDraggableModule } from '@farris/ui-draggable';
import { ModalBackdropComponent } from './modal-backdrop.component';
import { ModalDirective } from './modal.directive';
import { ModalContainerComponent } from './modal-container.component';
import { BsModalService } from './bs-modal.service';
import { PositioningService } from '@farris/ui-modal/positioning';
import { ComponentLoaderFactory } from '@farris/ui-modal/component-loader';
import { ModalButtonDirective } from './modal-button.directive';
import { FAreaResponseModule } from '@farris/ui-area-response';
import { FarrisTooltipModule } from '@farris/ui-tooltip';
export class ModalModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: ModalModule,
            providers: [
                ComponentLoaderFactory,
                BsModalService,
                PositioningService
            ]
        };
    }
}
ModalModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    PerfectScrollbarModule,
                    AngularDraggableModule,
                    FAreaResponseModule,
                    FarrisTooltipModule
                ],
                declarations: [
                    ModalDirective,
                    ModalBackdropComponent,
                    ModalContainerComponent,
                    ModalButtonDirective
                ],
                exports: [
                    ModalBackdropComponent, ModalDirective
                ],
                entryComponents: [ModalBackdropComponent, ModalContainerComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1tb2RhbC8iLCJzb3VyY2VzIjpbImxpYi9tb2RhbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUU5RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU0sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQzVELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBb0J6RCxNQUFNLE9BQU8sV0FBVzs7OztJQUNwQixNQUFNLENBQUMsT0FBTztRQUNWLE9BQU87WUFDSCxRQUFRLEVBQUUsV0FBVztZQUNyQixTQUFTLEVBQUU7Z0JBQ1Asc0JBQXNCO2dCQUN0QixjQUFjO2dCQUNkLGtCQUFrQjthQUNyQjtTQUNKLENBQUM7SUFDTixDQUFDOzs7WUE3QkosUUFBUSxTQUFDO2dCQUNOLE9BQU8sRUFBRTtvQkFDTCxZQUFZO29CQUNaLHNCQUFzQjtvQkFDdEIsc0JBQXNCO29CQUN0QixtQkFBbUI7b0JBQ25CLG1CQUFtQjtpQkFDdEI7Z0JBQ0QsWUFBWSxFQUFFO29CQUNWLGNBQWM7b0JBQ2Qsc0JBQXNCO29CQUN0Qix1QkFBdUI7b0JBQ3ZCLG9CQUFvQjtpQkFDdkI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLHNCQUFzQixFQUFFLGNBQWM7aUJBQ3pDO2dCQUNELGVBQWUsRUFBRSxDQUFDLHNCQUFzQixFQUFFLHVCQUF1QixDQUFDO2FBQ3JFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgQnJvd3Nlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xyXG5pbXBvcnQgeyBQZXJmZWN0U2Nyb2xsYmFyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1wZXJmZWN0LXNjcm9sbGJhcic7XHJcbmltcG9ydCB7IEFuZ3VsYXJEcmFnZ2FibGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRyYWdnYWJsZSc7XHJcblxyXG5pbXBvcnQgeyBNb2RhbEJhY2tkcm9wQ29tcG9uZW50IH0gZnJvbSAnLi9tb2RhbC1iYWNrZHJvcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNb2RhbERpcmVjdGl2ZSB9IGZyb20gJy4vbW9kYWwuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTW9kYWxDb250YWluZXJDb21wb25lbnQgfSBmcm9tICcuL21vZGFsLWNvbnRhaW5lci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSB9IGZyb20gJy4vYnMtbW9kYWwuc2VydmljZSc7XHJcbmltcG9ydCB7IFBvc2l0aW9uaW5nU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwvcG9zaXRpb25pbmcnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRMb2FkZXJGYWN0b3J5IH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbC9jb21wb25lbnQtbG9hZGVyJztcclxuaW1wb3J0IHsgTW9kYWxCdXR0b25EaXJlY3RpdmUgfSBmcm9tICcuL21vZGFsLWJ1dHRvbi5kaXJlY3RpdmUnO1xyXG5pbXBvcnR7RkFyZWFSZXNwb25zZU1vZHVsZX0gZnJvbSAnQGZhcnJpcy91aS1hcmVhLXJlc3BvbnNlJztcclxuaW1wb3J0IHsgRmFycmlzVG9vbHRpcE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktdG9vbHRpcCc7XHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgICAgIFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICAgICAgQW5ndWxhckRyYWdnYWJsZU1vZHVsZSxcclxuICAgICAgICBGQXJlYVJlc3BvbnNlTW9kdWxlLFxyXG4gICAgICAgIEZhcnJpc1Rvb2x0aXBNb2R1bGVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBNb2RhbERpcmVjdGl2ZSxcclxuICAgICAgICBNb2RhbEJhY2tkcm9wQ29tcG9uZW50LFxyXG4gICAgICAgIE1vZGFsQ29udGFpbmVyQ29tcG9uZW50LFxyXG4gICAgICAgIE1vZGFsQnV0dG9uRGlyZWN0aXZlXHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIE1vZGFsQmFja2Ryb3BDb21wb25lbnQsIE1vZGFsRGlyZWN0aXZlXHJcbiAgICBdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbTW9kYWxCYWNrZHJvcENvbXBvbmVudCwgTW9kYWxDb250YWluZXJDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNb2RhbE1vZHVsZSB7XHJcbiAgICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuZ01vZHVsZTogTW9kYWxNb2R1bGUsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgICAgICAgICAgQ29tcG9uZW50TG9hZGVyRmFjdG9yeSxcclxuICAgICAgICAgICAgICAgIEJzTW9kYWxTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgUG9zaXRpb25pbmdTZXJ2aWNlXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==