import { TemplateRef } from '@angular/core';
import { Observable } from 'rxjs';
export declare class ModalOptions {
    /**
     *  Includes a modal-backdrop element. Alternatively,
     *  specify static for a backdrop which doesn't close the modal on click.
     */
    backdrop?: boolean | 'static';
    /**
     * Closes the modal when escape key is pressed.
     */
    keyboard?: boolean;
    focus?: boolean;
    /**
     * Shows the modal when initialized.
     */
    show?: boolean;
    /**
     * Ignore the backdrop click
     */
    ignoreBackdropClick?: boolean;
    /**
     * Css class for opened modal
     */
    class?: string;
    /**
     * Toggle animation
     */
    animated?: boolean;
    /**
     * Modal data
     */
    initialState?: object;
    /**
     * 窗口标题
     */
    title: string;
    /** 标题前图标 */
    iconCls?: string;
    /** 显示头部 */
    showHeader?: boolean;
    /**
     * 显示关闭按钮
     */
    showCloseButton?: boolean;
    /**
     * 显示最大化按钮
     */
    showMaxButton?: boolean;
    /**
     * 显示最小化按钮
     */
    showMinButton?: boolean;
    /**
     * 窗口宽度
     */
    width?: number;
    /**
     * 窗口高度
     */
    height?: number;
    minWidth?: number;
    minHeight?: number;
    maxWidth?: number;
    maxHeight?: number;
    /** 窗口标题栏高度 */
    dialogHeaderHeight?: number;
    /** 窗口按钮区高度 */
    dialogFooterHeight?: number;
    dialogFooterStyles?: any;
    /**
     * 显示按钮区
     */
    showButtons?: boolean;
    /** 按钮对齐方式 */
    buttonAlign?: string;
    /** 按钮列表模板 */
    buttons?: TemplateRef<any> | DialogButton[];
    /** 启用拖拽功能 */
    draggable?: boolean;
    /** 启用调整尺寸大小 */
    resizable?: boolean;
    /** 是否启用滚动条 */
    enableScroll?: boolean;
    beforeOpen?: () => Observable<boolean>;
    beforeClose?: (modalRef: any, args?: any) => Observable<boolean>;
    opened?: (p?: {
        [key: string]: any;
    }) => void;
    closed?: (isCloseButtonClick: boolean | any, args?: any) => void;
    okText?: string;
    cancelText?: string;
    /** 弹窗类型：default，弹出组件、模板等；iframe,弹出iframe; ngFactory, 弹出ngFactory; */
    dialogType?: string;
    fitContent?: boolean;
    areaResponse?: boolean;
    exception?: {
        date: string;
        message: string;
    };
    modeless?: boolean;
}
export interface DialogButton {
    text: string;
    cls?: string;
    iconCls?: string;
    disable?: boolean;
    defaultFocus?: boolean;
    handle?: (e: any) => any;
    display?: boolean;
    tipsEnable?: boolean;
    tipsText?: string | ((e?: any) => string);
}
export declare const modalConfigDefaults: ModalOptions;
export declare const CLASS_NAME: any;
export declare const SELECTOR: any;
export declare const TRANSITION_DURATIONS: any;
export declare const DISMISS_REASONS: {
    BACKRDOP: string;
    ESC: string;
};
