import { ElementRef, OnDestroy, OnInit, Renderer2, EventEmitter, AfterViewInit, QueryList } from '@angular/core';
import { AngularDraggableDirective } from '@farris/ui-draggable';
import { DomSanitizer, SafeResourceUrl } from "@angular/platform-browser";
import { ModalOptions } from './modal-options.class';
import { BsModalService } from './bs-modal.service';
import { ModalButtonDirective } from './modal-button.directive';
export declare class ModalContainerComponent implements OnInit, OnDestroy, AfterViewInit {
    protected el: ElementRef;
    private _renderer;
    private sanitizer;
    config: ModalOptions;
    isShown: boolean;
    level: number;
    isAnimated: boolean;
    bsModalService: BsModalService;
    dialogType: string;
    iframeSrc: SafeResourceUrl;
    isModeless: boolean;
    iframe: string;
    private isModalHiding;
    private originalWidth;
    private originalHeight;
    private prevWidth;
    private prevHeight;
    isMax: boolean;
    draggbar: AngularDraggableDirective;
    modalHeader: ElementRef;
    boundsElement: HTMLElement;
    closed: EventEmitter<{}>;
    opened: EventEmitter<{}>;
    resized: EventEmitter<{}>;
    modalID: string;
    buttons: QueryList<ModalButtonDirective>;
    dlgHeaderLineHeight: any;
    private _windowResizeToMax;
    private windowResize$;
    constructor(options: ModalOptions, el: ElementRef, _renderer: Renderer2, sanitizer: DomSanitizer);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private getDlgElement;
    private getDialogHeaderLineHeight;
    getContainerSize(): {
        width: any;
        height: any;
    };
    buildFooterStyles(): {};
    useButtonsTemplate(): boolean;
    onClick(event: MouseEvent): void;
    onEsc(event: any): void;
    ngOnDestroy(): void;
    close(e?: MouseEvent, isCloseButton?: boolean): void;
    toCenter(): void;
    moveTo(x: number, y: number): void;
    maxDialog(rememberPrevSize?: boolean): void;
    resize(width: number, height: number): void;
    dropdown(el: any): void;
    revertDialog(): void;
    changeDialogSize(): void;
    resizeStop(opts: any): void;
    /**
     * 是否非模态
     * @returns
     */
    setIsModeless(): void;
    updateDialogZindex(zIndex: any): void;
}
