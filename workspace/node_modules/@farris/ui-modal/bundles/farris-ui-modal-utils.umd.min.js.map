{"version":3,"sources":["ng://@farris/ui-modal/utils/theme-provider.ts","ng://@farris/ui-modal/utils/facade/browser.ts","ng://@farris/ui-modal/utils/trigger.class.ts","ng://@farris/ui-modal/utils/utils.class.ts","ng://@farris/ui-modal/utils/triggers.ts"],"names":["guessedVersion","win","window","document","location","gc","performance","Event","MouseEvent","KeyboardEvent","EventTarget","History","Location","EventListener","Trigger","prototype","isManual","this","open","close","Utils","reflow","element","offsetHeight","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","checkDialogSize","width","height","winSize","body","offsetWidth","innerHeight","DEFAULT_ALIASES","hover","focus","parseTriggers","triggers","aliases","trimmedTriggers","trim","length","parsedTriggers","split","map","trigger","triggerPair","alias","manualTriggers","filter","Error","isBs3","__theme","_guessBsVersion","spanEl","createElement","innerText","appendChild","classList","add","rect","getBoundingClientRect","removeChild","top","setTheme","theme","listenToTriggersV2","renderer","options","target","Function","listeners","_registerHide","registerHide","forEach","fn","push","useToggle","showFn","toggle","show","listen","hide","unsubscribeFn","registerOutsideClick","outsideClick","event","contains","targets","some"],"mappings":"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","sourcesContent":["import { window } from './facade/browser';\r\n\r\nlet guessedVersion: 'bs3' | 'bs4';\r\n\r\nfunction _guessBsVersion(): 'bs3' | 'bs4' {\r\n  if (typeof document === 'undefined') {\r\n    return null;\r\n  }\r\n  const spanEl = document.createElement('span');\r\n  spanEl.innerText = 'test bs version';\r\n  document.body.appendChild(spanEl);\r\n  spanEl.classList.add('d-none');\r\n  const rect = spanEl.getBoundingClientRect();\r\n  document.body.removeChild(spanEl);\r\n  if (!rect) {\r\n    return 'bs3';\r\n  }\r\n\r\n  return rect.top === 0 ? 'bs4' : 'bs3';\r\n}\r\n\r\nexport function setTheme(theme: 'bs3' | 'bs4'): void {\r\n  guessedVersion = theme;\r\n}\r\n\r\n// todo: in ngx-bootstrap, bs4 will became a default one\r\nexport function isBs3(): boolean {\r\n  if (typeof window === 'undefined') {\r\n    return true;\r\n  }\r\n\r\n  if (typeof window.__theme === 'undefined') {\r\n    if (guessedVersion) {\r\n      return guessedVersion === 'bs3';\r\n    }\r\n    guessedVersion = _guessBsVersion();\r\n\r\n    return guessedVersion === 'bs3';\r\n  }\r\n\r\n  return window.__theme !== 'bs4';\r\n}\r\n","/*tslint:disable */\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * JS version of browser APIs. This library can only run in the browser.\r\n */\r\nvar win = (typeof window !== 'undefined' && window) || <any>{};\r\n\r\nexport { win as window };\r\nexport var document = win.document;\r\nexport var location = win.location;\r\nexport var gc = win['gc'] ? () => win['gc']() : (): any => null;\r\nexport var performance = win['performance'] ? win['performance'] : null;\r\nexport const Event = win['Event'];\r\nexport const MouseEvent = win['MouseEvent'];\r\nexport const KeyboardEvent = win['KeyboardEvent'];\r\nexport const EventTarget = win['EventTarget'];\r\nexport const History = win['History'];\r\nexport const Location = win['Location'];\r\nexport const EventListener = win['EventListener'];\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\n\r\nexport class Trigger {\r\n  open: string;\r\n  close?: string;\r\n\r\n  constructor(open: string, close?: string) {\r\n    this.open = open;\r\n    this.close = close || open;\r\n  }\r\n\r\n  isManual(): boolean {\r\n    return this.open === 'manual' || this.close === 'manual';\r\n  }\r\n}\r\n","import { window } from './facade/browser';\r\n\r\nexport class Utils {\r\n    static reflow(element: any): void {\r\n        ((bs: any): void => bs)(element.offsetHeight);\r\n    }\r\n\r\n    // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\r\n    static getStyles(elem: any): any {\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        let view = elem.ownerDocument.defaultView;\r\n\r\n        if (!view || !view.opener) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle(elem);\r\n    }\r\n\r\n    static checkDialogSize(width: number, height: number) {\r\n\r\n        // å¯è§åºåå°ºå¯¸\r\n        const winSize = {\r\n            width: document.body.offsetWidth,\r\n            height: window.innerHeight\r\n        };\r\n\r\n        if (winSize.width < width) {\r\n            width = winSize.width;\r\n        }\r\n\r\n        if (winSize.height < height) {\r\n            height = winSize.height;\r\n        }\r\n\r\n        return  {\r\n            width,\r\n            height\r\n        };\r\n    }\r\n}\r\n","/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\nimport { Renderer2 } from \"@angular/core\";\r\nimport { Trigger } from \"./trigger.class\";\r\n\r\nexport type BsEventCallback = (event?: any) => boolean | void;\r\n\r\nexport interface ListenOptions {\r\n    target?: HTMLElement;\r\n    targets?: HTMLElement[];\r\n    triggers?: string;\r\n    outsideClick?: boolean;\r\n    show?: BsEventCallback;\r\n    hide?: BsEventCallback;\r\n    toggle?: BsEventCallback;\r\n}\r\n\r\nconst DEFAULT_ALIASES = {\r\n    hover: [\"mouseenter\", \"mouseleave\"],\r\n    focus: [\"focusin\", \"focusout\"],\r\n};\r\n\r\nexport function parseTriggers(\r\n    triggers: string,\r\n    aliases: any = DEFAULT_ALIASES\r\n): Trigger[] {\r\n    const trimmedTriggers = (triggers || \"\").trim();\r\n\r\n    if (trimmedTriggers.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    const parsedTriggers = trimmedTriggers\r\n        .split(/\\s+/)\r\n        .map((trigger: string) => trigger.split(\":\"))\r\n        .map((triggerPair: string[]) => {\r\n            const alias = aliases[triggerPair[0]] || triggerPair;\r\n\r\n            return new Trigger(alias[0], alias[1]);\r\n        });\r\n\r\n    const manualTriggers = parsedTriggers.filter((triggerPair: Trigger) =>\r\n        triggerPair.isManual()\r\n    );\r\n\r\n    if (manualTriggers.length > 1) {\r\n        throw new Error(\r\n            \"Triggers parse error: only one manual trigger is allowed\"\r\n        );\r\n    }\r\n\r\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\r\n        throw new Error(\r\n            \"Triggers parse error: manual trigger can't be mixed with other triggers\"\r\n        );\r\n    }\r\n\r\n    return parsedTriggers;\r\n}\r\n\r\nexport function listenToTriggers(\r\n    renderer: Renderer2,\r\n    target: any,\r\n    triggers: string,\r\n    showFn: BsEventCallback,\r\n    hideFn: BsEventCallback,\r\n    toggleFn: BsEventCallback\r\n): Function {\r\n    const parsedTriggers = parseTriggers(triggers);\r\n    const listeners: any[] = [];\r\n\r\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\r\n        return Function.prototype;\r\n    }\r\n\r\n    parsedTriggers.forEach((trigger: Trigger) => {\r\n        if (trigger.open === trigger.close) {\r\n            listeners.push(renderer.listen(target, trigger.open, toggleFn));\r\n\r\n            return;\r\n        }\r\n\r\n        listeners.push(\r\n            renderer.listen(target, trigger.open, showFn),\r\n            renderer.listen(target, trigger.close, hideFn)\r\n        );\r\n    });\r\n\r\n    return () => {\r\n        listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\r\n    };\r\n}\r\n\r\nexport function listenToTriggersV2(\r\n    renderer: Renderer2,\r\n    options: ListenOptions\r\n): Function {\r\n    const parsedTriggers = parseTriggers(options.triggers);\r\n    const target = options.target;\r\n    // do nothing\r\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\r\n        return Function.prototype;\r\n    }\r\n\r\n    // all listeners\r\n    const listeners: any[] = [];\r\n\r\n    // lazy listeners registration\r\n    const _registerHide: Function[] = [];\r\n    const registerHide = () => {\r\n        // add hide listeners to unregister array\r\n        _registerHide.forEach((fn: Function) => listeners.push(fn()));\r\n        // register hide events only once\r\n        _registerHide.length = 0;\r\n    };\r\n\r\n    // register open\\close\\toggle listeners\r\n    parsedTriggers.forEach((trigger: Trigger) => {\r\n        const useToggle = trigger.open === trigger.close;\r\n        const showFn = useToggle ? options.toggle : options.show;\r\n\r\n        if (!useToggle) {\r\n            _registerHide.push(() =>\r\n                renderer.listen(target, trigger.close, options.hide)\r\n            );\r\n        }\r\n\r\n        listeners.push(\r\n            renderer.listen(target, trigger.open, () => showFn(registerHide))\r\n        );\r\n    });\r\n\r\n    return () => {\r\n        listeners.forEach((unsubscribeFn: Function) => unsubscribeFn());\r\n    };\r\n}\r\n\r\nexport function registerOutsideClick(\r\n    renderer: Renderer2,\r\n    options: ListenOptions\r\n) {\r\n    if (!options.outsideClick) {\r\n        return Function.prototype;\r\n    }\r\n\r\n    return renderer.listen(\"document\", \"click\", (event: any) => {\r\n        if (options.target && options.target.contains(event.target)) {\r\n            return;\r\n        }\r\n        if (\r\n            options.targets &&\r\n            options.targets.some((target) => target.contains(event.target))\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        options.hide();\r\n    });\r\n}\r\n"]}