import { ExpressionContext } from "../context/index";
import { Expression } from "../expression/index";
import { AbstractExpressionEngine } from "./abstract_expression_engine";
export class ExpressionEngine extends AbstractExpressionEngine {
    constructor(context) {
        super(context);
    }
    eval(expr) {
        const expression = new Expression(expr);
        return expression.eval(this.getContext());
    }
    getContext() {
        if (!this.context) {
            this.context = new ExpressionContext();
        }
        return this.context;
    }
    addFun(name, func) {
        if (name && typeof func === 'function') {
            this.getContext().set(name, func);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzc2lvbl9lbmdpbmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4cHJlc3Npb24tZW5naW5lLyIsInNvdXJjZXMiOlsibGliL2V4cHJlc3Npb24tZW5naW5lL2V4cHJlc3Npb25fZW5naW5lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXJELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUV4RSxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsd0JBQXdCO0lBRTVELFlBQVksT0FBNEI7UUFDdEMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFNTSxJQUFJLENBQUMsSUFBWTtRQUN0QixNQUFNLFVBQVUsR0FBRyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QyxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUtNLFVBQVU7UUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNqQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksaUJBQWlCLEVBQUUsQ0FBQztTQUN4QztRQUNELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBTU0sTUFBTSxDQUFDLElBQVksRUFBRSxJQUE4QjtRQUN4RCxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxVQUFVLEVBQUU7WUFDdEMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDbkM7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHByZXNzaW9uQ29udGV4dCB9IGZyb20gXCIuLi9jb250ZXh0L2luZGV4XCI7XHJcbmltcG9ydCB7IEV4cHJlc3Npb25Db21tb25GdW5jdGlvbiwgSUV4cHJlc3Npb25Db250ZXh0IH0gZnJvbSBcIi4uL2NvcmUvaW5kZXhcIjtcclxuaW1wb3J0IHsgRXhwcmVzc2lvbiB9IGZyb20gXCIuLi9leHByZXNzaW9uL2luZGV4XCI7XHJcbmltcG9ydCB7IEFic3RyYWN0RXhwcmVzc2lvbkVuZ2luZSB9IGZyb20gXCIuL2Fic3RyYWN0X2V4cHJlc3Npb25fZW5naW5lXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgRXhwcmVzc2lvbkVuZ2luZSBleHRlbmRzIEFic3RyYWN0RXhwcmVzc2lvbkVuZ2luZSB7XHJcbiAgcHJvdGVjdGVkIGNvbnRleHQ6IElFeHByZXNzaW9uQ29udGV4dDtcclxuICBjb25zdHJ1Y3Rvcihjb250ZXh0PzogSUV4cHJlc3Npb25Db250ZXh0KSB7XHJcbiAgICBzdXBlcihjb250ZXh0KTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog6K6h566X6KGo6L6+5byPXHJcbiAgICogQHBhcmFtIGV4cHIg6KGo6L6+5byPXHJcbiAgICogQHJldHVybnMgXHJcbiAgICovXHJcbiAgcHVibGljIGV2YWwoZXhwcjogc3RyaW5nKTogYW55IHtcclxuICAgIGNvbnN0IGV4cHJlc3Npb24gPSBuZXcgRXhwcmVzc2lvbihleHByKTtcclxuICAgIHJldHVybiBleHByZXNzaW9uLmV2YWwodGhpcy5nZXRDb250ZXh0KCkpO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDojrflj5booajovr7lvI/kuIrkuIvmlodcclxuICAgKiBAcmV0dXJucyBcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0Q29udGV4dCgpOiBJRXhwcmVzc2lvbkNvbnRleHQge1xyXG4gICAgaWYgKCF0aGlzLmNvbnRleHQpIHtcclxuICAgICAgdGhpcy5jb250ZXh0ID0gbmV3IEV4cHJlc3Npb25Db250ZXh0KCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5jb250ZXh0O1xyXG4gIH1cclxuICAvKipcclxuICAgKiDmt7vliqDoh6rlrprkuYnmlrnms5VcclxuICAgKiBAcGFyYW0gbmFtZSDmlrnms5XlkI1cclxuICAgKiBAcGFyYW0gZnVuYyDmlrnms5XkvZNcclxuICAgKi9cclxuICBwdWJsaWMgYWRkRnVuKG5hbWU6IHN0cmluZywgZnVuYzogRXhwcmVzc2lvbkNvbW1vbkZ1bmN0aW9uKTogdm9pZCB7XHJcbiAgICBpZiAobmFtZSAmJiB0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICB0aGlzLmdldENvbnRleHQoKS5zZXQobmFtZSwgZnVuYyk7XHJcbiAgICB9XHJcbiAgfVxyXG59Il19