import { DefaultFunctions } from "../function/index";
export class Evaler {
    eval(expr, context) {
        const contexts = context && context.contexts || {};
        const args = contexts.arguments || {};
        const signature = Object.keys(args).join(',');
        const defaultFunction = new DefaultFunctions(context);
        contexts['DefaultFunction'] = defaultFunction;
        const hasReturnStatement = expr.match(/([\s\r\n{;}]+return)|(^return)\s+/g);
        if (!hasReturnStatement) {
            expr = `return ${expr}`;
        }
        const scopeNames = Object.getOwnPropertyNames(contexts);
        const scopeVariable = `__scope__${new Date().valueOf()}`;
        return new Function(scopeVariable, `
      ${scopeNames.map((key) => `var ${key} = ${scopeVariable}['${key}'];`).join('\r\n')}
      return function anonymous(${signature}) {
        try{ \n${expr}\n }catch(e){console.error(e);}
      };`)(contexts);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZhbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9leHByZXNzaW9uLWVuZ2luZS8iLCJzb3VyY2VzIjpbImxpYi9ldmFsZXIvZXZhbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXJELE1BQU0sT0FBTyxNQUFNO0lBQ1YsSUFBSSxDQUFDLElBQVksRUFBRSxPQUEyQjtRQUNuRCxNQUFNLFFBQVEsR0FBRyxPQUFPLElBQUksT0FBTyxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7UUFDbkQsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUM7UUFDdEMsTUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDN0MsTUFBTSxlQUFlLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN0RCxRQUFRLENBQUMsaUJBQWlCLENBQUMsR0FBRyxlQUFlLENBQUM7UUFDOUMsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7UUFDNUUsSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQ3ZCLElBQUksR0FBRyxVQUFVLElBQUksRUFBRSxDQUFDO1NBQ3pCO1FBQ0QsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sYUFBYSxHQUFHLFlBQVksSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDO1FBQ3pELE9BQU8sSUFBSSxRQUFRLENBQUMsYUFBYSxFQUFFO1FBQy9CLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFXLEVBQUUsRUFBRSxDQUFDLE9BQU8sR0FBRyxNQUFNLGFBQWEsS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7a0NBQzlELFNBQVM7aUJBQzFCLElBQUk7U0FDWixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUV2YWxlciwgSUV4cHJlc3Npb25Db250ZXh0LCBUeXBlZEZ1bmN0aW9uIH0gZnJvbSBcIi4uL2NvcmUvaW5kZXhcIjtcclxuaW1wb3J0IHsgRGVmYXVsdEZ1bmN0aW9ucyB9IGZyb20gXCIuLi9mdW5jdGlvbi9pbmRleFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEV2YWxlciBpbXBsZW1lbnRzIElFdmFsZXIge1xyXG4gIHB1YmxpYyBldmFsKGV4cHI6IHN0cmluZywgY29udGV4dDogSUV4cHJlc3Npb25Db250ZXh0KTogVHlwZWRGdW5jdGlvbiB7XHJcbiAgICBjb25zdCBjb250ZXh0cyA9IGNvbnRleHQgJiYgY29udGV4dC5jb250ZXh0cyB8fCB7fTtcclxuICAgIGNvbnN0IGFyZ3MgPSBjb250ZXh0cy5hcmd1bWVudHMgfHwge307XHJcbiAgICBjb25zdCBzaWduYXR1cmUgPSBPYmplY3Qua2V5cyhhcmdzKS5qb2luKCcsJylcclxuICAgIGNvbnN0IGRlZmF1bHRGdW5jdGlvbiA9IG5ldyBEZWZhdWx0RnVuY3Rpb25zKGNvbnRleHQpO1xyXG4gICAgY29udGV4dHNbJ0RlZmF1bHRGdW5jdGlvbiddID0gZGVmYXVsdEZ1bmN0aW9uO1xyXG4gICAgY29uc3QgaGFzUmV0dXJuU3RhdGVtZW50ID0gZXhwci5tYXRjaCgvKFtcXHNcXHJcXG57O31dK3JldHVybil8KF5yZXR1cm4pXFxzKy9nKTtcclxuICAgIGlmICghaGFzUmV0dXJuU3RhdGVtZW50KSB7XHJcbiAgICAgIGV4cHIgPSBgcmV0dXJuICR7ZXhwcn1gO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgc2NvcGVOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGNvbnRleHRzKTtcclxuICAgIGNvbnN0IHNjb3BlVmFyaWFibGUgPSBgX19zY29wZV9fJHtuZXcgRGF0ZSgpLnZhbHVlT2YoKX1gO1xyXG4gICAgcmV0dXJuIG5ldyBGdW5jdGlvbihzY29wZVZhcmlhYmxlLCBgXHJcbiAgICAgICR7c2NvcGVOYW1lcy5tYXAoKGtleTogc3RyaW5nKSA9PiBgdmFyICR7a2V5fSA9ICR7c2NvcGVWYXJpYWJsZX1bJyR7a2V5fSddO2ApLmpvaW4oJ1xcclxcbicpfVxyXG4gICAgICByZXR1cm4gZnVuY3Rpb24gYW5vbnltb3VzKCR7c2lnbmF0dXJlfSkge1xyXG4gICAgICAgIHRyeXsgXFxuJHtleHByfVxcbiB9Y2F0Y2goZSl7Y29uc29sZS5lcnJvcihlKTt9XHJcbiAgICAgIH07YCkoY29udGV4dHMpO1xyXG4gIH1cclxufSJdfQ==