import { DefaultFunctions } from "../function/index";
var Evaler = (function () {
    function Evaler() {
    }
    Evaler.prototype.eval = function (expr, context) {
        var contexts = context && context.contexts || {};
        var args = contexts.arguments || {};
        var signature = Object.keys(args).join(',');
        var defaultFunction = new DefaultFunctions(context);
        contexts['DefaultFunction'] = defaultFunction;
        var hasReturnStatement = expr.match(/([\s\r\n{;}]+return)|(^return)\s+/g);
        if (!hasReturnStatement) {
            expr = "return " + expr;
        }
        var scopeNames = Object.getOwnPropertyNames(contexts);
        var scopeVariable = "__scope__" + new Date().valueOf();
        return new Function(scopeVariable, "\n      " + scopeNames.map(function (key) { return "var " + key + " = " + scopeVariable + "['" + key + "'];"; }).join('\r\n') + "\n      return function anonymous(" + signature + ") {\n        try{ \n" + expr + "\n }catch(e){console.error(e);}\n      };")(contexts);
    };
    return Evaler;
}());
export { Evaler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZhbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9leHByZXNzaW9uLWVuZ2luZS8iLCJzb3VyY2VzIjpbImxpYi9ldmFsZXIvZXZhbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXJEO0lBQUE7SUFtQkEsQ0FBQztJQWxCUSxxQkFBSSxHQUFYLFVBQVksSUFBWSxFQUFFLE9BQTJCO1FBQ25ELElBQU0sUUFBUSxHQUFHLE9BQU8sSUFBSSxPQUFPLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztRQUNuRCxJQUFNLElBQUksR0FBRyxRQUFRLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztRQUN0QyxJQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUM3QyxJQUFNLGVBQWUsR0FBRyxJQUFJLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3RELFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLGVBQWUsQ0FBQztRQUM5QyxJQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsb0NBQW9DLENBQUMsQ0FBQztRQUM1RSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7WUFDdkIsSUFBSSxHQUFHLFlBQVUsSUFBTSxDQUFDO1NBQ3pCO1FBQ0QsSUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3hELElBQU0sYUFBYSxHQUFHLGNBQVksSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUksQ0FBQztRQUN6RCxPQUFPLElBQUksUUFBUSxDQUFDLGFBQWEsRUFBRSxhQUMvQixVQUFVLENBQUMsR0FBRyxDQUFDLFVBQUMsR0FBVyxJQUFLLE9BQUEsU0FBTyxHQUFHLFdBQU0sYUFBYSxVQUFLLEdBQUcsUUFBSyxFQUExQyxDQUEwQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQywwQ0FDOUQsU0FBUyw0QkFDMUIsSUFBSSw4Q0FDWixDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUNILGFBQUM7QUFBRCxDQUFDLEFBbkJELElBbUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUV2YWxlciwgSUV4cHJlc3Npb25Db250ZXh0LCBUeXBlZEZ1bmN0aW9uIH0gZnJvbSBcIi4uL2NvcmUvaW5kZXhcIjtcclxuaW1wb3J0IHsgRGVmYXVsdEZ1bmN0aW9ucyB9IGZyb20gXCIuLi9mdW5jdGlvbi9pbmRleFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEV2YWxlciBpbXBsZW1lbnRzIElFdmFsZXIge1xyXG4gIHB1YmxpYyBldmFsKGV4cHI6IHN0cmluZywgY29udGV4dDogSUV4cHJlc3Npb25Db250ZXh0KTogVHlwZWRGdW5jdGlvbiB7XHJcbiAgICBjb25zdCBjb250ZXh0cyA9IGNvbnRleHQgJiYgY29udGV4dC5jb250ZXh0cyB8fCB7fTtcclxuICAgIGNvbnN0IGFyZ3MgPSBjb250ZXh0cy5hcmd1bWVudHMgfHwge307XHJcbiAgICBjb25zdCBzaWduYXR1cmUgPSBPYmplY3Qua2V5cyhhcmdzKS5qb2luKCcsJylcclxuICAgIGNvbnN0IGRlZmF1bHRGdW5jdGlvbiA9IG5ldyBEZWZhdWx0RnVuY3Rpb25zKGNvbnRleHQpO1xyXG4gICAgY29udGV4dHNbJ0RlZmF1bHRGdW5jdGlvbiddID0gZGVmYXVsdEZ1bmN0aW9uO1xyXG4gICAgY29uc3QgaGFzUmV0dXJuU3RhdGVtZW50ID0gZXhwci5tYXRjaCgvKFtcXHNcXHJcXG57O31dK3JldHVybil8KF5yZXR1cm4pXFxzKy9nKTtcclxuICAgIGlmICghaGFzUmV0dXJuU3RhdGVtZW50KSB7XHJcbiAgICAgIGV4cHIgPSBgcmV0dXJuICR7ZXhwcn1gO1xyXG4gICAgfVxyXG4gICAgY29uc3Qgc2NvcGVOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGNvbnRleHRzKTtcclxuICAgIGNvbnN0IHNjb3BlVmFyaWFibGUgPSBgX19zY29wZV9fJHtuZXcgRGF0ZSgpLnZhbHVlT2YoKX1gO1xyXG4gICAgcmV0dXJuIG5ldyBGdW5jdGlvbihzY29wZVZhcmlhYmxlLCBgXHJcbiAgICAgICR7c2NvcGVOYW1lcy5tYXAoKGtleTogc3RyaW5nKSA9PiBgdmFyICR7a2V5fSA9ICR7c2NvcGVWYXJpYWJsZX1bJyR7a2V5fSddO2ApLmpvaW4oJ1xcclxcbicpfVxyXG4gICAgICByZXR1cm4gZnVuY3Rpb24gYW5vbnltb3VzKCR7c2lnbmF0dXJlfSkge1xyXG4gICAgICAgIHRyeXsgXFxuJHtleHByfVxcbiB9Y2F0Y2goZSl7Y29uc29sZS5lcnJvcihlKTt9XHJcbiAgICAgIH07YCkoY29udGV4dHMpO1xyXG4gIH1cclxufSJdfQ==