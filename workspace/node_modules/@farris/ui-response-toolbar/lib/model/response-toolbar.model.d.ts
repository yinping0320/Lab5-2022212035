export declare class ResponseToolbarBasic {
    id?: string;
    class?: string;
    icon?: string;
    groupId?: string;
    order?: number;
    asDropDownTop?: boolean;
    text: string;
    isDP: boolean;
    disabled: boolean;
    visible: boolean;
    responsed: boolean;
    tipsEnable?: boolean;
    tipsText?: string;
    width: Number;
    constructor(item: any);
    setWidth(value: string): void;
    getWidth(): any;
}
export declare class ResponseToolbarItem extends ResponseToolbarBasic {
    event: Function | null;
    constructor(item: any);
}
export declare class ResponseToolbarDropDown extends ResponseToolbarBasic {
    placement?: string;
    topItem?: ResponseToolbarItem | null;
    dropdownCls: string;
    menuCls: string;
    split: boolean;
    children: Array<ResponseToolbarItem | ResponseToolbarDropDown>;
    constructor(item: any);
    /**
     * 是否有子项
     */
    hasChild(): boolean;
    /**
     * 追加子项,默认从开头插入
     * @param item
     */
    addChild(item: any): void;
    removeChild(): void;
}
export declare class ResponseToolbarGroup {
    id: string;
    name: string;
    presetId: Array<string>;
    responsedIndex: Array<Number>;
    width: number;
    constructor(_id: string, _groupName: string);
    setWidth(value: any): void;
    getWidth(): any;
    setPreset(value: Array<string> | string): void;
    delPreset(): void;
    removeResponsed(index: any): void;
    setResponsed(value: Array<Number> | Number): void;
    isResponsing(): boolean;
    isResponsed(): boolean;
}
export interface ResponseToolbarClickEvent {
    id: string;
    text: string;
    hidden: boolean;
}
