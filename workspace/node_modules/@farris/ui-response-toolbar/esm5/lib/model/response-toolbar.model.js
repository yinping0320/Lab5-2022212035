/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
var ResponseToolbarBasic = /** @class */ (function () {
    function ResponseToolbarBasic(item) {
        var _this = this;
        /** @type {?} */
        var defaultData = {
            id: '',
            class: 'btn-secondary',
            icon: '',
            groupId: '',
            order: -1,
            asDropDownTop: false,
            text: '',
            isDP: false,
            disabled: false,
            visible: true,
            responsed: false,
            width: 0,
            tipsEnable: false,
            tipsText: ''
        };
        Object.keys(defaultData).forEach((/**
         * @param {?} propName
         * @return {?}
         */
        function (propName) {
            _this[propName] = item.hasOwnProperty(propName)
                ? item[propName]
                : defaultData[propName];
        }));
    }
    // 设置宽度
    // 设置宽度
    /**
     * @param {?} value
     * @return {?}
     */
    ResponseToolbarBasic.prototype.setWidth = 
    // 设置宽度
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.width = parseInt(value, 10);
    };
    // 获取宽度
    // 获取宽度
    /**
     * @return {?}
     */
    ResponseToolbarBasic.prototype.getWidth = 
    // 获取宽度
    /**
     * @return {?}
     */
    function () {
        if (this.visible) {
            return this.width;
        }
        return false;
    };
    return ResponseToolbarBasic;
}());
export { ResponseToolbarBasic };
if (false) {
    /** @type {?} */
    ResponseToolbarBasic.prototype.id;
    /** @type {?} */
    ResponseToolbarBasic.prototype.class;
    /** @type {?} */
    ResponseToolbarBasic.prototype.icon;
    /** @type {?} */
    ResponseToolbarBasic.prototype.groupId;
    /** @type {?} */
    ResponseToolbarBasic.prototype.order;
    /** @type {?} */
    ResponseToolbarBasic.prototype.asDropDownTop;
    /** @type {?} */
    ResponseToolbarBasic.prototype.text;
    /** @type {?} */
    ResponseToolbarBasic.prototype.isDP;
    /** @type {?} */
    ResponseToolbarBasic.prototype.disabled;
    /** @type {?} */
    ResponseToolbarBasic.prototype.visible;
    /** @type {?} */
    ResponseToolbarBasic.prototype.responsed;
    /** @type {?} */
    ResponseToolbarBasic.prototype.tipsEnable;
    /** @type {?} */
    ResponseToolbarBasic.prototype.tipsText;
    /** @type {?} */
    ResponseToolbarBasic.prototype.width;
}
var ResponseToolbarItem = /** @class */ (function (_super) {
    tslib_1.__extends(ResponseToolbarItem, _super);
    function ResponseToolbarItem(item) {
        var _this = _super.call(this, item) || this;
        /** @type {?} */
        var defaultData = {
            text: '',
            event: null,
            isDP: false
        };
        Object.keys(defaultData).forEach((/**
         * @param {?} propName
         * @return {?}
         */
        function (propName) {
            _this[propName] = item.hasOwnProperty(propName)
                ? item[propName]
                : defaultData[propName];
        }));
        return _this;
    }
    return ResponseToolbarItem;
}(ResponseToolbarBasic));
export { ResponseToolbarItem };
if (false) {
    /** @type {?} */
    ResponseToolbarItem.prototype.event;
}
var ResponseToolbarDropDown = /** @class */ (function (_super) {
    tslib_1.__extends(ResponseToolbarDropDown, _super);
    function ResponseToolbarDropDown(item) {
        var _this = _super.call(this, item) || this;
        /** @type {?} */
        var defaultData = {
            topItem: null,
            isDP: true,
            children: [],
            class: 'btn-secondary',
            dropdownCls: '',
            menuCls: '',
            placement: '',
            split: false
        };
        Object.keys(defaultData).forEach((/**
         * @param {?} propName
         * @return {?}
         */
        function (propName) {
            _this[propName] = item.hasOwnProperty(propName)
                ? item[propName]
                : defaultData[propName];
        }));
        return _this;
    }
    /**
     * 是否有子项
     */
    /**
     * 是否有子项
     * @return {?}
     */
    ResponseToolbarDropDown.prototype.hasChild = /**
     * 是否有子项
     * @return {?}
     */
    function () {
        return this.children.length > 0 ? true : false;
    };
    /**
     * 追加子项,默认从开头插入
     * @param item
     */
    /**
     * 追加子项,默认从开头插入
     * @param {?} item
     * @return {?}
     */
    ResponseToolbarDropDown.prototype.addChild = /**
     * 追加子项,默认从开头插入
     * @param {?} item
     * @return {?}
     */
    function (item) {
        this.children.unshift(item);
    };
    // 从头部开始删除子元素
    // 从头部开始删除子元素
    /**
     * @return {?}
     */
    ResponseToolbarDropDown.prototype.removeChild = 
    // 从头部开始删除子元素
    /**
     * @return {?}
     */
    function () {
        this.children.shift();
    };
    return ResponseToolbarDropDown;
}(ResponseToolbarBasic));
export { ResponseToolbarDropDown };
if (false) {
    /** @type {?} */
    ResponseToolbarDropDown.prototype.placement;
    /** @type {?} */
    ResponseToolbarDropDown.prototype.topItem;
    /** @type {?} */
    ResponseToolbarDropDown.prototype.dropdownCls;
    /** @type {?} */
    ResponseToolbarDropDown.prototype.menuCls;
    /** @type {?} */
    ResponseToolbarDropDown.prototype.split;
    /** @type {?} */
    ResponseToolbarDropDown.prototype.children;
}
var ResponseToolbarGroup = /** @class */ (function () {
    function ResponseToolbarGroup(_id, _groupName) {
        this.presetId = []; // 记录元素的Id
        // 记录元素的Id
        this.responsedIndex = []; // 记录转变为下拉时元素的位置
        this.id = _id;
        this.name = _groupName;
        this.width = 0;
    }
    // 设置宽度
    // 设置宽度
    /**
     * @param {?} value
     * @return {?}
     */
    ResponseToolbarGroup.prototype.setWidth = 
    // 设置宽度
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.width = parseInt(value + '', 10);
    };
    // 获取宽度
    // 获取宽度
    /**
     * @return {?}
     */
    ResponseToolbarGroup.prototype.getWidth = 
    // 获取宽度
    /**
     * @return {?}
     */
    function () {
        return this.width;
    };
    // 更新presetIndex
    // 更新presetIndex
    /**
     * @param {?} value
     * @return {?}
     */
    ResponseToolbarGroup.prototype.setPreset = 
    // 更新presetIndex
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (Array.isArray(value)) {
            this.presetId = this.presetId.concat(value);
        }
        else {
            this.presetId.push(value);
        }
    };
    // 清除preset
    // 清除preset
    /**
     * @return {?}
     */
    ResponseToolbarGroup.prototype.delPreset = 
    // 清除preset
    /**
     * @return {?}
     */
    function () {
        this.presetId = [];
    };
    // 删除
    // 删除
    /**
     * @param {?} index
     * @return {?}
     */
    ResponseToolbarGroup.prototype.removeResponsed = 
    // 删除
    /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.responsedIndex.splice(index, 1);
    };
    // 更新responsedIndex
    // 更新responsedIndex
    /**
     * @param {?} value
     * @return {?}
     */
    ResponseToolbarGroup.prototype.setResponsed = 
    // 更新responsedIndex
    /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (Array.isArray(value)) {
            this.responsedIndex = this.responsedIndex.concat(value);
        }
        else {
            this.responsedIndex.push(value);
        }
    };
    // 是否已经开始处理响应式
    // 是否已经开始处理响应式
    /**
     * @return {?}
     */
    ResponseToolbarGroup.prototype.isResponsing = 
    // 是否已经开始处理响应式
    /**
     * @return {?}
     */
    function () {
        return this.responsedIndex.length > 0;
    };
    // 是否已经处理完响应式
    // 是否已经处理完响应式
    /**
     * @return {?}
     */
    ResponseToolbarGroup.prototype.isResponsed = 
    // 是否已经处理完响应式
    /**
     * @return {?}
     */
    function () {
        return this.presetId.length === this.responsedIndex.length;
    };
    return ResponseToolbarGroup;
}());
export { ResponseToolbarGroup };
if (false) {
    /** @type {?} */
    ResponseToolbarGroup.prototype.id;
    /** @type {?} */
    ResponseToolbarGroup.prototype.name;
    /** @type {?} */
    ResponseToolbarGroup.prototype.presetId;
    /** @type {?} */
    ResponseToolbarGroup.prototype.responsedIndex;
    /** @type {?} */
    ResponseToolbarGroup.prototype.width;
}
/**
 * @record
 */
export function ResponseToolbarClickEvent() { }
if (false) {
    /** @type {?} */
    ResponseToolbarClickEvent.prototype.id;
    /** @type {?} */
    ResponseToolbarClickEvent.prototype.text;
    /** @type {?} */
    ResponseToolbarClickEvent.prototype.hidden;
}
//# sourceMappingURL=data:application/json;base64,