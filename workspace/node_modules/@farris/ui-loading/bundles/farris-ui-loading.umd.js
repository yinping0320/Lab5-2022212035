(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/operators'), require('rxjs'), require('lodash-es'), require('@angular/core'), require('@angular/common'), require('@farris/ui-common'), require('@farris/ui-locale')) :
    typeof define === 'function' && define.amd ? define('@farris/ui-loading', ['exports', 'rxjs/operators', 'rxjs', 'lodash-es', '@angular/core', '@angular/common', '@farris/ui-common', '@farris/ui-locale'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-loading'] = {}),global.rxjs.operators,global.rxjs,global.lodashEs,global.ng.core,global.ng.common,global.uiCommon,global.uiLocale));
}(this, (function (exports,operators,rxjs,lodashEs,core,common,uiCommon,uiLocale) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var loaddingDefaultConfig = {
        width: 30,
        container: 'body',
        message: '正在加载中，请稍候...',
        posion: 'center',
        type: 0,
        delay: 300
    };
    /** @type {?} */
    var LOADING_DEFAULT_CONFIG = new core.InjectionToken('loading default options.');

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var LOADING_STYLES = [
        "<div class=\"f-loading-round\"></div>",
        "<div class=\"f-loading-dot-wrapper\">\n    <div class=\"f-loading-dot\">\n        <div class=\"dot dot1\"></div>\n        <div class=\"dot dot2\"></div>\n        <div class=\"dot dot3\"></div>\n        <div class=\"dot dot4\"></div>\n    </div>\n</div>",
        "<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\" class=\"lds-coffee\"><defs><linearGradient id=\"gradient\" x1=\"0%\" x2=\"0%\" y1=\"0%\" y2=\"100%\"><stop offset=\"10%\" stop-color=\"black\" stop-opacity=\"0\"></stop><stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\"></stop></linearGradient><mask id=\"mask\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"100\" height=\"100\"><rect x=\"22\" y=\"8\" width=\"56\" height=\"54\" fill=\"url(#gradient)\"></rect></mask><path id=\"steam\" d=\"M0-4c-2.1,2.6-2.1,6.4,0,9l0,0c2.1,2.6,2.1,6.4,0,9l0,0c-2.1,2.6-2.1,6.4,0,9l0,0c2.1,2.6,2.1,6.4,0,9l0,0 c-2.1,2.6-2.1,6.4,0,9l0,0c2.1,2.6,2.1,6.4,0,9c-2.1,2.6-2.1,6.4,0,9l0,0c2.1,2.6,2.1,6.4,0,9l0,0c-2.1,2.6-2.1,6.4,0,9l0,0 c2.1,2.6,2.1,6.4,0,9l0,0c-2.1,2.6-2.1,6.4,0,9l0,0c2.1,2.6,2.1,6.4,0,9c-2.1,2.6-2.1,6.4,0,9l0,0c2.1,2.6,2.1,6.4,0,9l0,0 c-2.1,2.6-2.1,6.4,0,9h0c2.1,2.6,2.1,6.4,0,9h0c-2.1,2.6-2.1,6.4,0,9h0c2.1,2.6,2.1,6.4,0,9\" stroke-width=\"6\" stroke-linecap=\"round\" fill=\"#f00\" stroke=\"#58a8f6\"></path></defs><g mask=\"url(#mask)\"><use x=\"29\" y=\"1.00876\" href=\"#steam\"><animate attributeName=\"y\" calcMode=\"linear\" values=\"4;-14\" keyTimes=\"0;1\" dur=\"0.5\" begin=\"0s\" repeatCount=\"indefinite\"></animate></use><use x=\"47\" y=\"-5.98248\" href=\"#steam\"><animate attributeName=\"y\" calcMode=\"linear\" values=\"0;-18\" keyTimes=\"0;1\" dur=\"0.25\" begin=\"0s\" repeatCount=\"indefinite\"></animate></use><use x=\"64\" y=\"-8.48686\" href=\"#steam\"><animate attributeName=\"y\" calcMode=\"linear\" values=\"-4;-22\" keyTimes=\"0;1\" dur=\"0.3333333333333333\" begin=\"0s\" repeatCount=\"indefinite\"></animate></use></g><path d=\"M81.2,52.5l-5.2,0V49c0-1.6-1.3-3-3-3H20c-1.6,0-3,1.3-3,3v11.6C17,71.3,25.7,80,36.5,80h20.1 c7.1,0,13.3-3.8,16.7-9.5h8.3c5.2,0,9.3-4.4,9-9.6C90.2,56.1,86,52.5,81.2,52.5z M81.5,67.5h-6.8c0.8-2.2,1.3-4.5,1.3-7v-5h5.5 c3.3,0,6,2.7,6,6S84.8,67.5,81.5,67.5z\" fill=\"#58a8f6\"></path><path d=\"M78.8,88H19.2c-1.1,0-2-0.9-2-2s0.9-2,2-2h59.5c1.1,0,2,0.9,2,2S79.9,88,78.8,88z\" fill=\"rgba(80.78431372549018%,94.50980392156862%,72.15686274509802%,0)\"></path></svg>"
    ];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var LoadingComponent = /** @class */ (function () {
        function LoadingComponent(render, el) {
            this.render = render;
            this.el = el;
            this.showMessage = true;
            this.loadingStyleDom = LOADING_STYLES;
            this._isActive = false;
            this.activeSubject = new rxjs.BehaviorSubject(false);
            this.message = '';
            this.width = 30;
            /**
             * loading 样式
             */
            this.type = 0;
            this.delay = 300;
            this.closed = new core.EventEmitter();
            this.activedSubscrition = null;
            this.parentContainer = null;
            this.destroy$ = new rxjs.Subject();
            this.debugSer = null;
            this.commonUtils = null;
            if (!this.debugSer) {
                this.debugSer = new uiCommon.DebugService();
            }
            if (this.debugSer.useDebugMode) {
                this.debugSer.useDebugMode();
            }
        }
        Object.defineProperty(LoadingComponent.prototype, "isActive", {
            get: /**
             * @return {?}
             */ function () {
                return this._isActive;
            },
            set: /**
             * @param {?} val
             * @return {?}
             */ function (val) {
                this._isActive = val;
                if (this.activeSubject) {
                    this.activeSubject.next(val);
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        LoadingComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this_1 = this;
                this.activedSubscrition = this.activeSubject.pipe(operators.takeUntil(this.destroy$)).pipe(operators.filter(( /**
                 * @param {?} n
                 * @return {?}
                 */function (n) {
                    return n;
                })), operators.delay(this.delay)).subscribe(( /**
                 * @param {?} v
                 * @return {?}
                 */function (v) {
                    if (v && _this_1.isActive) {
                        // this.render.setStyle(this.loadingContainerEl.nativeElement, 'display', 'block');
                        _this_1.render.setStyle(_this_1.loadingBackdrop.nativeElement, 'display', 'block');
                        _this_1.render.setStyle(_this_1.loadingContainerEl.nativeElement, 'left', 0);
                        _this_1.setPosition();
                        _this_1.render.removeStyle(_this_1.loadingContainerEl.nativeElement, 'visibility');
                        _this_1.render.removeStyle(_this_1.loadingContainerEl.nativeElement, 'left');
                    }
                }));
            };
        /**
         * @return {?}
         */
        LoadingComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @return {?}
         */
        LoadingComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this.destroy$.next();
                this.destroy$.complete();
                this.commonUtils = null;
            };
        /**
         * @return {?}
         */
        LoadingComponent.prototype.close = /**
         * @return {?}
         */
            function () {
                if (this.loadingBackdrop) {
                    this.loadingBackdrop.nativeElement.remove();
                }
                this.isActive = false;
                this.render.removeAttribute(this.el.nativeElement, 'class');
                // this.animate('f-component-loading fadeOut animated animated-0.5');
                this.closed.emit(this.isActive);
            };
        /**
         * @private
         * @return {?}
         */
        LoadingComponent.prototype.setPosition = /**
         * @private
         * @return {?}
         */
            function () {
                if (!this.commonUtils) {
                    this.commonUtils = new uiCommon.CommonUtils();
                }
                /** @type {?} */
                var containerWidth = this.loadingContainerEl.nativeElement.clientWidth;
                /** @type {?} */
                var containerHeight = this.loadingContainerEl.nativeElement.clientHeight;
                this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginTop', -containerHeight / 2 + 'px');
                /** @type {?} */
                var ml = -containerWidth / 2 + 'px';
                if (this.parentContainer) {
                    if (this.parentContainer.clientWidth <= 200) {
                        ml = '-100px';
                    }
                }
                this.render.setStyle(this.loadingContainerEl.nativeElement, 'marginLeft', ml);
                /** @type {?} */
                var zindex = this.commonUtils.getFloatingLayerIndex();
                this.render.setStyle(this.loadingBackdrop.nativeElement, 'zIndex', zindex);
                this.render.setStyle(this.loadingContainerEl.nativeElement, 'zIndex', zindex + 1);
            };
        /**
         * @private
         * @param {?} animateCls
         * @return {?}
         */
        LoadingComponent.prototype.animate = /**
         * @private
         * @param {?} animateCls
         * @return {?}
         */
            function (animateCls) {
                this.addAnimationEndEvent('webkitAnimationEnd', 'mozAnimationEnd', 'MSAnimationEnd', 'oanimationend', 'animationend');
                this.render.setAttribute(this.el.nativeElement, 'class', animateCls);
            };
        /**
         * @private
         * @param {...?} events
         * @return {?}
         */
        LoadingComponent.prototype.addAnimationEndEvent = /**
         * @private
         * @param {...?} events
         * @return {?}
         */
            function () {
                var events = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    events[_i] = arguments[_i];
                }
                /** @type {?} */
                var _this = this;
                events.forEach(( /**
                 * @param {?} e
                 * @return {?}
                 */function (e) {
                    _this.el.nativeElement.addEventListener(e, ( /**
                     * @return {?}
                     */function handler() {
                        _this.el.nativeElement.removeEventListener(e, handler);
                        // _this.render.removeAttribute(_this.el.nativeElement, 'class');
                        ['fadeIn', 'fadeOut', 'animated', 'animated-0.5'].forEach(( /**
                         * @param {?} n
                         * @return {?}
                         */function (n) {
                            _this.render.removeClass(_this.el.nativeElement, n);
                        }));
                        _this.closed.emit(_this.isActive);
                    }));
                }));
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        LoadingComponent.prototype.closeWhenClick5 = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                var _this_1 = this;
                $event.stopPropagation();
                if (this.debugSer.isDebug) {
                    this.commonUtils.clickContinuity(( /**
                     * @return {?}
                     */function () {
                        _this_1.close();
                    }));
                }
            };
        LoadingComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'farris-loading',
                        template: "\n        <div #loadingBackdrop class=\"farris-loading-backdrop loading-wait\" (click)=\"closeWhenClick5($event)\"></div>\n        <div #loadingContainerEl class=\"farris-loading\" style=\"visibility: hidden\">\n            <div class=\"ng-busy-default-wrapper\">\n                <div class=\"ng-busy-default-sign\" >\n                    <div [style.width]=\"width+ 'px'\" [style.height]=\"width+'px'\" style=\"display: inline-block;margin:4px;\"\n                                [innerHTML]=\"loadingStyleDom[type] | safe: 'html'\"></div>\n                    <div class=\"ng-busy-default-text\" style=\"margin-left:0;\"\n                                 *ngIf=\"showMessage\" [innerHTML]=\"'loading.message' | locale: '' :message | safe: 'html'\"></div>\n                </div>\n            </div>\n        </div>\n    ",
                        styles: [".loading-wait {\n            cursor: wait\n        }\n        .animated-0.5 {\n            -webkit-animation-duration: 0s;\n            animation-duration: 0s;\n        }\n        "]
                    }] }
        ];
        /** @nocollapse */
        LoadingComponent.ctorParameters = function () {
            return [
                { type: core.Renderer2 },
                { type: core.ElementRef }
            ];
        };
        LoadingComponent.propDecorators = {
            showMessage: [{ type: core.Input }],
            loadingContainerEl: [{ type: core.ViewChild, args: ['loadingContainerEl',] }],
            loadingBackdrop: [{ type: core.ViewChild, args: ['loadingBackdrop',] }],
            closed: [{ type: core.Output }]
        };
        return LoadingComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var LoadingService = /** @class */ (function () {
        function LoadingService(appRef, cfr, injecotr) {
            this.appRef = appRef;
            this.cfr = cfr;
            this.injecotr = injecotr;
            this.currentLoadingInstanceID = null;
            this.loadingInstances = {};
            this.localeSer = this.injecotr.get(uiLocale.LocaleService);
        }
        /**
         * @param {?=} config
         * @return {?}
         */
        LoadingService.prototype.show = /**
         * @param {?=} config
         * @return {?}
         */
            function (config) {
                var _this = this;
                this.config = this.injecotr.get(LOADING_DEFAULT_CONFIG) || {};
                this.config = Object.assign(loaddingDefaultConfig, this.config);
                /** @type {?} */
                var _loadingCmpRef;
                /** @type {?} */
                var loadingFactory = this.cfr.resolveComponentFactory(LoadingComponent);
                _loadingCmpRef = loadingFactory.create(this.injecotr);
                if (config) {
                    this.config = Object.assign({}, this.config, config);
                }
                // const languageCode = localStorage.getItem('languageCode');
                // if (languageCode === 'en') {
                //     this.config.message = 'Loading...';
                // }
                if (this.localeSer) {
                    if (!this.config.message || this.config.message === '正在加载中，请稍候...') {
                        this.config.message = this.localeSer.getValue('loading.message');
                    }
                }
                /** @type {?} */
                var container = this.config.container;
                /** @type {?} */
                var parentContainer = null;
                if (container === 'body') {
                    document.querySelector(( /** @type {?} */(container))).appendChild(_loadingCmpRef.location.nativeElement);
                }
                else {
                    if (container instanceof core.ElementRef) {
                        container.nativeElement.appendChild(_loadingCmpRef.location.nativeElement);
                        parentContainer = container.nativeElement;
                    }
                    else {
                        if (container instanceof Element) {
                            container.appendChild(_loadingCmpRef.location.nativeElement);
                            parentContainer = container;
                        }
                    }
                }
                _loadingCmpRef.instance.delay = this.config.delay;
                _loadingCmpRef.instance.isActive = true;
                _loadingCmpRef.instance.parentContainer = parentContainer;
                Object.assign(_loadingCmpRef.instance, this.config);
                _loadingCmpRef.instance.closed.subscribe(( /**
                 * @param {?} state
                 * @return {?}
                 */function (state) {
                    if (!state) {
                        delete _this.loadingInstances[_loadingCmpRef.instance.id];
                        _this.currentLoadingInstanceID = _this.getMaxLoadingID();
                        _this.clearDom(_loadingCmpRef);
                    }
                }));
                _loadingCmpRef.changeDetectorRef.markForCheck();
                _loadingCmpRef.changeDetectorRef.detectChanges();
                /** @type {?} */
                var loadingID = this.createInsId();
                _loadingCmpRef.instance.id = loadingID;
                this.loadingInstances[loadingID] = _loadingCmpRef;
                this.currentLoadingInstanceID = loadingID;
                return _loadingCmpRef.instance;
            };
        /**
         * @param {?=} loadingId
         * @return {?}
         */
        LoadingService.prototype.close = /**
         * @param {?=} loadingId
         * @return {?}
         */
            function (loadingId) {
                /** @type {?} */
                var id = loadingId || this.currentLoadingInstanceID;
                /** @type {?} */
                var loadingRef = this.loadingInstances[id];
                if (loadingRef) {
                    loadingRef.instance.close();
                }
            };
        /**
         * @return {?}
         */
        LoadingService.prototype.clearAll = /**
         * @return {?}
         */
            function () {
                var _this = this;
                /** @type {?} */
                var keys = Object.keys(this.loadingInstances);
                if (keys.length) {
                    keys.forEach(( /**
                     * @param {?} id
                     * @return {?}
                     */function (id) {
                        _this.clearDom(_this.loadingInstances[id]);
                    }));
                }
                else {
                    /** @type {?} */
                    var loadings = document.querySelectorAll('farris-loading');
                    if (loadings.length) {
                        loadings.forEach(( /**
                         * @param {?} el
                         * @return {?}
                         */function (el) { return el.remove(); }));
                    }
                    this.loadingInstances = {};
                }
            };
        /**
         * @private
         * @param {?} _loadingCmpRef
         * @return {?}
         */
        LoadingService.prototype.clearDom = /**
         * @private
         * @param {?} _loadingCmpRef
         * @return {?}
         */
            function (_loadingCmpRef) {
                if (_loadingCmpRef && _loadingCmpRef.location) {
                    /** @type {?} */
                    var loadingEl = _loadingCmpRef.location.nativeElement;
                    if (loadingEl.parentNode) {
                        loadingEl.parentNode.removeChild(loadingEl);
                    }
                    _loadingCmpRef.destroy();
                }
                _loadingCmpRef = null;
            };
        /**
         * @private
         * @return {?}
         */
        LoadingService.prototype.createInsId = /**
         * @private
         * @return {?}
         */
            function () {
                return this.getMaxLoadingID() + 1;
            };
        /**
         * @private
         * @return {?}
         */
        LoadingService.prototype.getMaxLoadingID = /**
         * @private
         * @return {?}
         */
            function () {
                /** @type {?} */
                var ids = Object.keys(this.loadingInstances).map(( /**
                 * @param {?} k
                 * @return {?}
                 */function (k) { return parseInt(k, 10); }));
                if (ids.length) {
                    return lodashEs.max(ids);
                }
                return 0;
            };
        LoadingService.decorators = [
            { type: core.Injectable }
        ];
        /** @nocollapse */
        LoadingService.ctorParameters = function () {
            return [
                { type: core.ApplicationRef },
                { type: core.ComponentFactoryResolver },
                { type: core.Injector }
            ];
        };
        return LoadingService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var LoadingModule = /** @class */ (function () {
        function LoadingModule() {
        }
        /**
         * @param {?=} config
         * @return {?}
         */
        LoadingModule.forRoot = /**
         * @param {?=} config
         * @return {?}
         */
            function (config) {
                return {
                    ngModule: LoadingModule,
                    providers: [
                        { provide: LOADING_DEFAULT_CONFIG, useValue: config || loaddingDefaultConfig },
                        LoadingService
                    ]
                };
            };
        LoadingModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            uiCommon.FarrisCommonModule,
                            uiLocale.LocaleModule
                        ],
                        declarations: [
                            LoadingComponent
                        ],
                        entryComponents: [
                            LoadingComponent
                        ]
                    },] }
        ];
        return LoadingModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.loaddingDefaultConfig = loaddingDefaultConfig;
    exports.LOADING_DEFAULT_CONFIG = LOADING_DEFAULT_CONFIG;
    exports.LoadingComponent = LoadingComponent;
    exports.LoadingService = LoadingService;
    exports.LoadingModule = LoadingModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-loading.umd.js.map