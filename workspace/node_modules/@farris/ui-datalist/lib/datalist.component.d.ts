import { OnInit, TemplateRef, ElementRef, AfterViewInit, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';
import { FarrisDataItem } from '@farris/ui-common';
import { DataListFacadeService } from './core/datalist-facade.service';
import { SelectItem } from './core/types';
export declare class DataListItemTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
}
export declare class DatalistComponent implements OnInit, OnChanges, AfterViewInit {
    el: ElementRef;
    store: DataListFacadeService;
    cls: boolean;
    readonly fluid: boolean;
    itemHeight: number;
    title: string;
    data: any;
    textField: string;
    valueField: string;
    idField: string;
    fit: boolean;
    width: number;
    height: number | string;
    multiSelect: boolean;
    disabled: boolean;
    showHeader: boolean;
    showCheckBox: boolean;
    headerHeight: number;
    selectedValues: string;
    enableCancelSelected: boolean;
    disabledField: string;
    showDisabledItem: boolean;
    /** 分隔符，默认为 , */
    separator: string;
    itemTemplate: TemplateRef<any>;
    selected: EventEmitter<SelectItem>;
    unSelected: EventEmitter<SelectItem>;
    selectedValuesChange: EventEmitter<{}>;
    emptyMessage: string;
    scrollbarHeight$: import("rxjs").Observable<number>;
    _options$: import("rxjs").Observable<import("./core/types").DataListState>;
    data$: import("rxjs").Observable<any>;
    private _height;
    emptyMsgEl: ElementRef<any>;
    constructor(el: ElementRef, store: DataListFacadeService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private loadData;
    private initCtrlState;
    clearSelections(): void;
    resize(): void;
    private updateSelectValues;
    onSelectHandler(event: Event, index: number, item: FarrisDataItem): boolean;
    onCheckedChange($event: any): void;
    isChecked(item: FarrisDataItem): boolean;
    isSelected(item: FarrisDataItem): boolean;
    selectAll(): void;
    unSelectAll(): void;
}
export declare class DataListItemComponentDirective implements OnInit {
    private el;
    data: FarrisDataItem;
    constructor(el: ElementRef);
    ngOnInit(): void;
}
/**
 * 表体checkbox 组件
 */
export declare class DataListCheckboxComponent implements OnInit {
    checked: boolean;
    disabled: boolean;
    index: number;
    row: any;
    checkedChange: EventEmitter<{}>;
    chk: ElementRef;
    constructor();
    ngOnInit(): void;
    handleClick(event: any): void;
}
