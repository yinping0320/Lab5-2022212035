(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/operators'), require('@farris/ui-common'), require('@farris/ui-perfect-scrollbar'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@farris/ui-datalist', ['exports', 'rxjs/operators', '@farris/ui-common', '@farris/ui-perfect-scrollbar', '@angular/core'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-datalist'] = {}),global.rxjs.operators,global.uiCommon,global.uiPerfectScrollbar,global.ng.core));
}(this, (function (exports,operators,uiCommon,uiPerfectScrollbar,i0) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DatalistService = /** @class */ (function () {
        function DatalistService() {
        }
        DatalistService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        DatalistService.ctorParameters = function () { return []; };
        /** @nocollapse */ DatalistService.ngInjectableDef = i0.defineInjectable({ factory: function DatalistService_Factory() { return new DatalistService(); }, token: DatalistService, providedIn: "root" });
        return DatalistService;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var defaultDataState = {
        title: '',
        data: [],
        textField: '',
        idField: 'id',
        fit: true,
        width: 300,
        height: 400,
        multiSelect: false,
        showHeader: false,
        headerHeight: 40,
        disabled: false,
        containerHeight: 360,
        selections: []
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DataListFacadeService = /** @class */ (function (_super) {
        __extends(DataListFacadeService, _super);
        function DataListFacadeService() {
            var _this = _super.call(this, defaultDataState) || this;
            _this.containerHeight$ = _this.state$.pipe(operators.map(( /**
             * @param {?} state
             * @return {?}
             */function (state) {
                return state.containerHeight;
            })));
            _this.options$ = _this.state$;
            return _this;
        }
        /**
         * @param {?} width
         * @param {?} height
         * @return {?}
         */
        DataListFacadeService.prototype.updateContainerSize = /**
         * @param {?} width
         * @param {?} height
         * @return {?}
         */
            function (width, height) {
                // tslint:disable-next-line:variable-name
                /** @type {?} */
                var _height = height;
                if (this._state.showHeader) {
                    _height = height - this._state.headerHeight;
                }
                this.updateState({ containerHeight: _height, width: width, height: height });
            };
        DataListFacadeService.decorators = [
            { type: i0.Injectable }
        ];
        /** @nocollapse */
        DataListFacadeService.ctorParameters = function () { return []; };
        return DataListFacadeService;
    }(uiCommon.BaseDataFacadeService));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DataListItemTemplateDirective = /** @class */ (function () {
        function DataListItemTemplateDirective(template) {
            this.template = template;
        }
        DataListItemTemplateDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[list-item-tmp]'
                    },] }
        ];
        /** @nocollapse */
        DataListItemTemplateDirective.ctorParameters = function () {
            return [
                { type: i0.TemplateRef }
            ];
        };
        return DataListItemTemplateDirective;
    }());
    var DatalistComponent = /** @class */ (function () {
        function DatalistComponent(el, store) {
            this.el = el;
            this.store = store;
            this.cls = true;
            this.fit = true;
            this.width = 300;
            this.height = 400;
            this.multiSelect = false;
            this.disabled = false;
            this.showHeader = false;
            this.showCheckBox = false;
            this.headerHeight = 40;
            this.enableCancelSelected = true;
            this.disabledField = 'disabled';
            this.showDisabledItem = true;
            /**
             * 分隔符，默认为 ,
             */
            this.separator = ',';
            this.selected = new i0.EventEmitter();
            this.unSelected = new i0.EventEmitter();
            this.selectedValuesChange = new i0.EventEmitter();
            this.emptyMessage = '暂无数据';
            this.scrollbarHeight$ = this.store.containerHeight$;
            // tslint:disable-next-line:variable-name
            this._options$ = this.store.options$;
            this.data$ = this.store.data$;
        }
        Object.defineProperty(DatalistComponent.prototype, "fluid", {
            get: /**
             * @return {?}
             */ function () {
                return this._height === 'auto' ? false : this.fit;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} changes
         * @return {?}
         */
        DatalistComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
            function (changes) {
                if (changes && changes.data && !changes.data.isFirstChange()) {
                    this.initCtrlState();
                }
                if (changes.selectedValues && !changes.selectedValues.isFirstChange()) {
                    if (this.selectedValues !== '' && this.selectedValues !== undefined && this.selectedValues !== null) {
                        this.store.setSelections(this.selectedValues, this.separator);
                    }
                    else {
                        this.clearSelections();
                    }
                }
            };
        /**
         * @return {?}
         */
        DatalistComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this._height = this.height;
                this.initCtrlState();
            };
        /**
         * @return {?}
         */
        DatalistComponent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                setTimeout(( /**
                 * @return {?}
                 */function () {
                    if (_this.selectedValues && _this.height !== 'auto') {
                        /** @type {?} */
                        var val_1 = _this.selectedValues;
                        if (_this.selectedValues.indexOf(_this.separator) > -1) {
                            val_1 = _this.selectedValues.indexOf(_this.separator)[0];
                        }
                        /** @type {?} */
                        var index = _this.data.findIndex(( /**
                         * @param {?} n
                         * @return {?}
                         */function (n) { return n[_this.idField] == val_1; }));
                        /** @type {?} */
                        var ulEl = _this.el.nativeElement.querySelector('ul.list-group');
                        if (ulEl.children[index]) {
                            ulEl.children[index].scrollIntoView({ block: 'nearest' });
                        }
                    }
                }), 10);
            };
        /**
         * @private
         * @return {?}
         */
        DatalistComponent.prototype.loadData = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                if (this.data) {
                    this.store.loadData(this.data, this.selectedValues, this.separator);
                }
                setTimeout(( /**
                 * @return {?}
                 */function () {
                    if (_this.emptyMsgEl && (!_this.data || !_this.data.length)) {
                        _this.emptyMsgEl.nativeElement.innerHTML = _this.emptyMessage;
                    }
                }), 10);
            };
        /**
         * @private
         * @return {?}
         */
        DatalistComponent.prototype.initCtrlState = /**
         * @private
         * @return {?}
         */
            function () {
                var _a = __assign({}, this), title = _a.title, textField = _a.textField, fit = _a.fit, idField = _a.idField, valueField = _a.valueField, width = _a.width, height = _a.height, multiSelect = _a.multiSelect, disabled = _a.disabled, headerHeight = _a.headerHeight, separator = _a.separator, disabledField = _a.disabledField;
                this.store.initState({
                    title: title,
                    textField: textField,
                    valueField: valueField,
                    fit: fit,
                    idField: idField,
                    width: width,
                    height: height,
                    multiSelect: multiSelect,
                    disabled: disabled,
                    headerHeight: headerHeight,
                    separator: separator,
                    disabledField: disabledField
                });
                this.loadData();
            };
        /**
         * @return {?}
         */
        DatalistComponent.prototype.clearSelections = /**
         * @return {?}
         */
            function () {
                this.store.clearSelections();
            };
        /**
         * @return {?}
         */
        DatalistComponent.prototype.resize = /**
         * @return {?}
         */
            function () {
                if (this.fit) {
                    /** @type {?} */
                    var container = this.el.nativeElement.parentElement;
                    /** @type {?} */
                    var width = container.offsetWidth;
                    /** @type {?} */
                    var height = container.offsetHeight;
                    this.store.updateContainerSize(width, height);
                }
            };
        /**
         * @private
         * @return {?}
         */
        DatalistComponent.prototype.updateSelectValues = /**
         * @private
         * @return {?}
         */
            function () {
                var _this = this;
                /** @type {?} */
                var values = this.store.getSelections().map(( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) {
                    return item[_this.valueField];
                }));
                this.selectedValues = values.join(this.separator);
                this.selectedValuesChange.emit(this.selectedValues);
            };
        /**
         * @param {?} event
         * @param {?} index
         * @param {?} item
         * @return {?}
         */
        DatalistComponent.prototype.onSelectHandler = /**
         * @param {?} event
         * @param {?} index
         * @param {?} item
         * @return {?}
         */
            function (event, index, item) {
                event.stopPropagation();
                if (this.disabled) {
                    return false;
                }
                if (item.disabled) {
                    return;
                }
                var data = __assign({}, item).data;
                if (!this.store.isSelect(item.id)) {
                    this.store.selectItem(data, index);
                    this.updateSelectValues();
                    this.selected.emit({ index: index, data: data });
                }
                else {
                    if (this.enableCancelSelected) {
                        this.store.unSelectItem(data);
                        this.updateSelectValues();
                        this.unSelected.emit({ index: index, data: data });
                    }
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        DatalistComponent.prototype.onCheckedChange = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                var index = $event.index, row = $event.row, originalEvent = $event.originalEvent;
                this.onSelectHandler(originalEvent, index, row);
            };
        /**
         * @param {?} item
         * @return {?}
         */
        DatalistComponent.prototype.isChecked = /**
         * @param {?} item
         * @return {?}
         */
            function (item) {
                var _this = this;
                /** @type {?} */
                var val = this.selectedValues;
                if (this.selectedValues === null && this.selectedValues === undefined) {
                    val = '';
                }
                if (typeof val === 'boolean') {
                    val = '' + val;
                }
                if (val) {
                    /** @type {?} */
                    var _vals = [];
                    if (this.multiSelect) {
                        _vals = val.split(this.separator);
                    }
                    else {
                        _vals = [val];
                    }
                    return _vals.some(( /**
                     * @param {?} v
                     * @return {?}
                     */function (v) { return v == '' + item.data[_this.valueField]; }));
                }
                return false;
            };
        /**
         * @param {?} item
         * @return {?}
         */
        DatalistComponent.prototype.isSelected = /**
         * @param {?} item
         * @return {?}
         */
            function (item) {
                return this.isChecked(item);
            };
        /**
         * @return {?}
         */
        DatalistComponent.prototype.selectAll = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.selectedValues = this.data.map(( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) { return item[_this.valueField]; })).join(this.separator);
                this.store.selectAll();
            };
        /**
         * @return {?}
         */
        DatalistComponent.prototype.unSelectAll = /**
         * @return {?}
         */
            function () {
                this.selectedValues = '';
                this.store.clearSelections();
            };
        DatalistComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'farris-datalist',
                        template: "<div *ngIf=\"_options$ | async as opts\" class=\"card\" [style.width.%]=\"100\" [style.height]=\"opts.height === 'auto' ? 'auto' : opts.height + 'px'\" style=\"min-height: 10px;\">\r\n    <div class=\"card-header\" *ngIf=\"opts.showHeader\">\r\n        {{ opts.title }}\r\n    </div>\r\n    <div *ngIf=\"opts.height && opts.height !== 'auto' && (data$ | async).length > 0\" style=\"overflow: auto;\" [style.width.%]=\"100\" [style.height.px]=\"scrollbarHeight$ | async\">\r\n        <!-- <ul class=\"list-group list-group-flush\">\r\n            <li style=\"cursor: default;\" [farrist-datalist-item]=\"item\" [style.height.px]=\"itemHeight\"\r\n                [class.active]=\"store.isSelect(item.id)\" class=\"list-group-item list-group-item-action\" \r\n                [class.list-group-item-disabled]=\"item.disabled\" [style.display]=\"item.disabled && !showDisabledItem ? 'none': ''\"\r\n                *ngFor=\"let item of data$ | async; let i = index\" title=\"{{item.data[textField]}}\" (click)=\"onSelectHandler( $event, i, item)\">\r\n                <dl-checkbox *ngIf=\"multiSelect\" [checked]=\"isChecked(item)\" [index]=\"i\" [row]=\"item\" (checkedChange)=\"onCheckedChange($event)\"></dl-checkbox>\r\n                <ng-container *ngIf=\"!itemTemplate\">\r\n                    <span class=\"f-datalist-item-text\">{{ item.data[textField] }}</span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"itemTemplate\" [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{ data: item, index: i }\"></ng-container>\r\n            </li>\r\n        </ul> -->\r\n        <ng-container [ngTemplateOutlet]=\"itemsTemplate\"></ng-container>\r\n    </div>\r\n    <div *ngIf=\"opts.height === 'auto' && (data$ | async).length > 0\" >\r\n        <ng-container [ngTemplateOutlet]=\"itemsTemplate\"></ng-container>\r\n    </div>\r\n    <div *ngIf=\"(data$ | async).length === 0\" style=\"height: 200px;\">\r\n        <div class=\"f-table-norecords-content\" #emptyMsgEl></div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #itemsTemplate>\r\n    <ul class=\"list-group list-group-flush\">\r\n        <li style=\"cursor: default;\" [farrist-datalist-item]=\"item\" [style.height.px]=\"itemHeight\"\r\n            [class.active]=\"isSelected(item)\" class=\"list-group-item list-group-item-action\"\r\n            [class.list-group-item-disabled]=\"item.disabled\" [style.display]=\"item.disabled && !showDisabledItem ? 'none': ''\"\r\n            *ngFor=\"let item of data$ | async; let i = index\" title=\"{{item.data[textField]}}\" (click)=\"onSelectHandler( $event, i, item)\">\r\n            <dl-checkbox *ngIf=\"multiSelect\" [checked]=\"isChecked(item)\" [index]=\"i\" [row]=\"item\" (checkedChange)=\"onCheckedChange($event)\"></dl-checkbox>\r\n            <ng-container *ngIf=\"!itemTemplate\">\r\n                <span class=\"f-datalist-item-text\">{{ item.data[textField] }}</span>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"itemTemplate\" [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{ data: item, index: i }\"></ng-container>\r\n        </li>\r\n    </ul>\r\n</ng-template>",
                        providers: [DataListFacadeService],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        styles: ["\n            .ps__rail-x,\n            .ps__rail-y {\n                z-index: 9;\n            }\n            .norecords-content {\n                height: 8.125rem;\n                padding: 7.8125rem 0 0;\n                width: 100%;\n                text-align: center;\n                font-size: 1rem;\n                color: rgba(0,0,0,.25);\n                background: url(imgs/table-norecords.png) top center no-repeat;\n                margin: -4.0625rem 0 0 -.625rem;\n                line-height: 2.5rem;\n            }\n\n            .list-group-item-disabled {\n                color: #ccc!important;\n            }\n\n            .f-datalist .list-group .list-group-item.list-group-item-disabled:hover {\n                background: transparent!important;\n            }\n        "]
                    }] }
        ];
        /** @nocollapse */
        DatalistComponent.ctorParameters = function () {
            return [
                { type: i0.ElementRef },
                { type: DataListFacadeService }
            ];
        };
        DatalistComponent.propDecorators = {
            cls: [{ type: i0.HostBinding, args: ['class.f-datalist',] }],
            fluid: [{ type: i0.HostBinding, args: ['class.farris-main-area',] }],
            itemHeight: [{ type: i0.Input }],
            title: [{ type: i0.Input }],
            data: [{ type: i0.Input }],
            textField: [{ type: i0.Input }],
            valueField: [{ type: i0.Input }],
            idField: [{ type: i0.Input }],
            fit: [{ type: i0.Input }],
            width: [{ type: i0.Input }],
            height: [{ type: i0.Input }],
            multiSelect: [{ type: i0.Input }],
            disabled: [{ type: i0.Input }],
            showHeader: [{ type: i0.Input }],
            showCheckBox: [{ type: i0.Input }],
            headerHeight: [{ type: i0.Input }],
            selectedValues: [{ type: i0.Input }],
            enableCancelSelected: [{ type: i0.Input }],
            disabledField: [{ type: i0.Input }],
            showDisabledItem: [{ type: i0.Input }],
            separator: [{ type: i0.Input }],
            itemTemplate: [{ type: i0.ContentChild, args: [DataListItemTemplateDirective, { read: i0.TemplateRef },] }],
            selected: [{ type: i0.Output }],
            unSelected: [{ type: i0.Output }],
            selectedValuesChange: [{ type: i0.Output }],
            emptyMessage: [{ type: i0.Input }],
            emptyMsgEl: [{ type: i0.ViewChild, args: ['emptyMsgEl',] }]
        };
        return DatalistComponent;
    }());
    var DataListItemComponentDirective = /** @class */ (function () {
        function DataListItemComponentDirective(el) {
            this.el = el;
        }
        /**
         * @return {?}
         */
        DataListItemComponentDirective.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        DataListItemComponentDirective.decorators = [
            { type: i0.Directive, args: [{
                        // tslint:disable-next-line:directive-selector
                        selector: '[farrist-datalist-item]'
                    },] }
        ];
        /** @nocollapse */
        DataListItemComponentDirective.ctorParameters = function () {
            return [
                { type: i0.ElementRef }
            ];
        };
        DataListItemComponentDirective.propDecorators = {
            data: [{ type: i0.Input, args: ['farrist-datalist-item',] }]
        };
        return DataListItemComponentDirective;
    }());
    /**
     * 表体checkbox 组件
     */
    var DataListCheckboxComponent = /** @class */ (function () {
        function DataListCheckboxComponent() {
            this.checkedChange = new i0.EventEmitter();
        }
        /**
         * @return {?}
         */
        DataListCheckboxComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        /**
         * @param {?} event
         * @return {?}
         */
        DataListCheckboxComponent.prototype.handleClick = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                this.checked = !this.checked;
                this.checkedChange.emit({ originalEvent: event, index: this.index, row: this.row, state: this.checked });
                event.stopPropagation();
            };
        DataListCheckboxComponent.decorators = [
            { type: i0.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'dl-checkbox',
                        template: "\n        <div class=\"custom-control custom-checkbox  custom-control-inline dl-checkbox\">\n            <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\" />\n            <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\n        </div>\n    ",
                        styles: ["\n            :host .custom-checkbox {\n                opacity: 1;\n                float: none;\n                margin: 0;\n                vertical-align: top;\n                padding-right: 0px;\n            }\n        "]
                    }] }
        ];
        /** @nocollapse */
        DataListCheckboxComponent.ctorParameters = function () { return []; };
        DataListCheckboxComponent.propDecorators = {
            checked: [{ type: i0.Input }],
            disabled: [{ type: i0.Input }],
            index: [{ type: i0.Input }],
            row: [{ type: i0.Input }],
            checkedChange: [{ type: i0.Output }],
            chk: [{ type: i0.ViewChild, args: ['chk',] }]
        };
        return DataListCheckboxComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DatalistModule = /** @class */ (function () {
        function DatalistModule() {
        }
        DatalistModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [
                            DatalistComponent,
                            DataListItemTemplateDirective,
                            DataListItemComponentDirective,
                            DataListCheckboxComponent
                        ],
                        imports: [uiPerfectScrollbar.PerfectScrollbarModule],
                        exports: [
                            DatalistComponent,
                            DataListItemTemplateDirective,
                            DataListItemComponentDirective,
                            DataListCheckboxComponent
                        ]
                    },] }
        ];
        return DatalistModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.DatalistService = DatalistService;
    exports.DataListItemTemplateDirective = DataListItemTemplateDirective;
    exports.DatalistComponent = DatalistComponent;
    exports.DataListItemComponentDirective = DataListItemComponentDirective;
    exports.DataListCheckboxComponent = DataListCheckboxComponent;
    exports.DatalistModule = DatalistModule;
    exports.DataListFacadeService = DataListFacadeService;
    exports.defaultDataState = defaultDataState;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-datalist.umd.js.map