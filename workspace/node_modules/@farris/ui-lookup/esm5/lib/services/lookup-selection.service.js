/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { of, BehaviorSubject, Subject } from 'rxjs';
import { switchMap } from 'rxjs/operators';
import { FavoriteAction } from '../lookup-displaytype';
/**
 * @record
 */
export function SelectionState() { }
if (false) {
    /** @type {?} */
    SelectionState.prototype.selecteditems;
    /** @type {?} */
    SelectionState.prototype.favoriteItems;
    /** @type {?} */
    SelectionState.prototype.quickItems;
}
var LookupSelectionService = /** @class */ (function () {
    function LookupSelectionService(ins) {
        this.ins = ins;
        this.state = {
            selecteditems: [],
            favoriteItems: [],
            quickItems: []
        };
        this.state$ = new BehaviorSubject(this.state);
        this.selected$ = this.state$.pipe(switchMap((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return of(n.selecteditems); })));
        this.favoriteItems$ = new BehaviorSubject({ items: this.state.favoriteItems, action: null });
        this.quickItems$ = this.state$.pipe(switchMap((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return of(n.quickItems); })));
        this.selectionChanged$ = new Subject();
    }
    Object.defineProperty(LookupSelectionService.prototype, "idField", {
        get: /**
         * @private
         * @return {?}
         */
        function () {
            return this.ins.idField;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} items
     * @return {?}
     */
    LookupSelectionService.prototype.initFavoriteItems = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        this.state.favoriteItems = items || [];
    };
    //#region 收藏数据
    //#region 收藏数据
    /**
     * @param {?} data
     * @param {?} action
     * @return {?}
     */
    LookupSelectionService.prototype.updateFavoriteData = 
    //#region 收藏数据
    /**
     * @param {?} data
     * @param {?} action
     * @return {?}
     */
    function (data, action) {
        var _this = this;
        if (this.ins.savingFaoriteData) {
            return;
        }
        if (action === FavoriteAction.add) {
            this.state.favoriteItems = this.state.favoriteItems.concat([data]);
        }
        else {
            this.state.favoriteItems = this.state.favoriteItems.filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n[_this.idField] !== data[_this.idField]; }));
        }
        this.favoriteItems$.next({ items: this.state.favoriteItems, action: action, data: data });
    };
    //#endregion
    //#region 多选数据
    //#endregion
    //#region 多选数据
    /**
     * @param {?} data
     * @return {?}
     */
    LookupSelectionService.prototype.loadSelections = 
    //#endregion
    //#region 多选数据
    /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        this.state.selecteditems = tslib_1.__spread(data);
        this.state$.next(this.state);
    };
    /**
     * @return {?}
     */
    LookupSelectionService.prototype.getSelections = /**
     * @return {?}
     */
    function () {
        return tslib_1.__spread(this.state.selecteditems);
    };
    /**
     * @param {?} item
     * @return {?}
     */
    LookupSelectionService.prototype.select = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (item) {
            this.state.selecteditems = tslib_1.__spread(this.state.selecteditems, [item]);
            this.state$.next(this.state);
            this.selectionChanged$.next({ data: [item[this.idField]], selected: true });
        }
    };
    /**
     * @param {?} pathcode
     * @return {?}
     */
    LookupSelectionService.prototype.unselectByPathcode = /**
     * @param {?} pathcode
     * @return {?}
     */
    function (pathcode) {
        var _this = this;
        /** @type {?} */
        var ids = [];
        this.state.selecteditems = this.state.selecteditems.filter((/**
         * @param {?} n
         * @return {?}
         */
        function (n) {
            /** @type {?} */
            var _pathcode = _this.ins.getPathCode(n, _this.ins.treeInfo);
            /** @type {?} */
            var r = _pathcode && _pathcode.indexOf(pathcode) !== 0;
            if (!r) {
                ids.push(n[_this.idField]);
            }
            return r;
        }));
        this.selectionChanged$.next({ data: ids, selected: false });
    };
    /**
     * @param {?} data
     * @param {?=} checked
     * @return {?}
     */
    LookupSelectionService.prototype.updateSelections = /**
     * @param {?} data
     * @param {?=} checked
     * @return {?}
     */
    function (data, checked) {
        var _this = this;
        if (checked === void 0) { checked = true; }
        if (!Array.isArray(data)) {
            data = [data];
        }
        /** @type {?} */
        var items = tslib_1.__spread(data);
        /** @type {?} */
        var idField = this.idField;
        /** @type {?} */
        var ids = items.map((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n[idField]; }));
        if (checked) {
            if (this.state.selecteditems && !this.state.selecteditems.length) {
                this.state.selecteditems = items;
            }
            else {
                ids.forEach((/**
                 * @param {?} n
                 * @param {?} i
                 * @return {?}
                 */
                function (n, i) {
                    if (!_this.state.selecteditems.find((/**
                     * @param {?} r
                     * @return {?}
                     */
                    function (r) { return r[idField] == n; }))) {
                        _this.state.selecteditems.push(items[i]);
                    }
                }));
            }
        }
        else {
            if (data) {
                this.state.selecteditems = this.state.selecteditems.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) {
                    return ids.indexOf(n[idField]) === -1;
                }));
            }
        }
        this.state$.next(this.state);
        this.selectionChanged$.next({ data: ids, selected: checked });
    };
    /**
     * @param {?} id
     * @return {?}
     */
    LookupSelectionService.prototype.unSelect = /**
     * @param {?} id
     * @return {?}
     */
    function (id) {
        var _this = this;
        if (id) {
            if (Array.isArray(id)) {
                this.state.selecteditems = this.state.selecteditems.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) {
                    return id.indexOf(n[_this.idField]) === -1;
                }));
                this.selectionChanged$.next({ data: id, selected: false });
            }
            else {
                this.state.selecteditems = this.state.selecteditems.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return n[_this.idField] != id; }));
                this.selectionChanged$.next({ data: [id], selected: false });
            }
            this.state$.next(this.state);
        }
    };
    /**
     * @return {?}
     */
    LookupSelectionService.prototype.clearSelections = /**
     * @return {?}
     */
    function () {
        this.state.selecteditems = [];
        this.state$.next(this.state);
    };
    return LookupSelectionService;
}());
export { LookupSelectionService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LookupSelectionService.prototype.state;
    /** @type {?} */
    LookupSelectionService.prototype.state$;
    /** @type {?} */
    LookupSelectionService.prototype.selected$;
    /** @type {?} */
    LookupSelectionService.prototype.favoriteItems$;
    /** @type {?} */
    LookupSelectionService.prototype.quickItems$;
    /** @type {?} */
    LookupSelectionService.prototype.selectionChanged$;
    /**
     * @type {?}
     * @private
     */
    LookupSelectionService.prototype.ins;
}
//# sourceMappingURL=data:application/json;base64,