/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { fromEvent, of, race } from 'rxjs';
import { buffer, bufferCount, debounceTime, filter, first, map, repeat } from 'rxjs/operators';
var LookupDialogManager = /** @class */ (function () {
    function LookupDialogManager(ins) {
        this.ins = ins;
        this.lookupInit = null;
        this._loadDataWhenOpen = true;
        this._navSelectedId = '';
        this._selectFirstInNav = false;
        this.dialogClosedSubscription = null;
        this.dialogOpenedSubscription = null;
        this.keyDownHandler = null;
        this._okbtnclick$ = null;
    }
    /**
     * @private
     * @return {?}
     */
    LookupDialogManager.prototype.unsubscribes = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.lookupInit) {
            this.lookupInit.unsubscribe();
            this.lookupInit = null;
        }
        if (this.dialogClosedSubscription) {
            this.dialogClosedSubscription.unsubscribe();
            this.dialogClosedSubscription = null;
        }
        if (this.dialogOpenedSubscription) {
            this.dialogOpenedSubscription.unsubscribe();
            this.dialogOpenedSubscription = null;
        }
    };
    // 帮助窗口关闭后做一些清理工作
    // 帮助窗口关闭后做一些清理工作
    /**
     * @return {?}
     */
    LookupDialogManager.prototype.dialogClosed = 
    // 帮助窗口关闭后做一些清理工作
    /**
     * @return {?}
     */
    function () {
        if (this.ins.displayText !== this.ins.originalText && !this.ins.nosearch) {
            this.ins.displayText = this.ins.originalText;
            this.ins.setModelValue(this.ins.displayText);
        }
        if (this.ins.componentRef) {
            this.ins.componentRef.destroy();
            this.ins.componentRef = null;
        }
        if (this.ins.favoritesComponentRef) {
            this.ins.favoritesComponentRef.destroy();
            this.ins.favoritesComponentRef = null;
        }
        if (this.ins.contentContainer) {
            this.ins.contentContainer.clear();
        }
        if (this.ins.centerContainer) {
            this.ins.centerContainer.clear();
        }
        if (this.ins.leftComponentRef) {
            this.ins.leftComponentRef.destroy();
            this.ins.leftComponentRef = null;
        }
        if (this.ins.leftContainer) {
            this.ins.leftContainer.clear();
        }
        this.ins.isShow = false;
        this.ins.isTextChange = false;
        if (this.ins.dialog) {
            this.ins.content = null;
        }
        this.ins.navigationFilter = null;
        this.ins.lookupUtils.pendingEnd();
        if (this.ins.helpId) {
            this.ins.displayType = '';
        }
        this.unsubscribes();
        // this.ins.items = [];
        this.ins.favoriteItems = [];
        this.ins.lookupSelectionSer.initFavoriteItems([]);
        this.ins.isTabChanged = false;
        if (this.ins.uri) {
            this.ins.items = [];
        }
        this.ins._searchState = null;
        this.ins.pageIndex = 1;
        this.ins.loadDataWhenOpen = this._loadDataWhenOpen;
        this.ins.navSelectedIds = this._navSelectedId;
        this.ins.selectFirstInNav = this._selectFirstInNav;
        this.ins.isGetAllChidlNodes = false;
        this.ins.enableGetAllChildNodes = true;
        // 保存个性化数据
        if (this.ins.usePersionalConf && this.ins.favoriteDataFrom !== 'locale') {
            this.ins.httpMgr.submitFavoriteData('dialog closed event.');
        }
        if (this.keyDownHandler) {
            this.keyDownHandler();
            this.keyDownHandler = null;
        }
        if (this.ins.inputGroup) {
            this.ins.inputGroup.focus();
        }
        this.ins.userInitialConfig.reset();
        this.ins.treeInfo = this.ins._treeInfo_;
        this.ins.lookupUtils.destroy();
        this.ins.dialogClosed.emit();
        if (this.ins.includeSubordinates$$) {
            this.ins.includeSubordinates$$.unsubscribe();
            this.ins.includeSubordinates$$ = null;
        }
        this.ins.conditions = [];
        this.ins.searching = false;
        if (this.ins.dtEventMgr) {
            this.ins.dtEventMgr['_sortState'] = null;
        }
        if (this.ins.ttEventMgr) {
            this.ins.ttEventMgr['_sortState'] = null;
        }
        if (this._okbtnclick$) {
            this._okbtnclick$.unsubscribe();
            this._okbtnclick$ = null;
        }
    };
    /**
     * @return {?}
     */
    LookupDialogManager.prototype.onDialogCreated = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._loadDataWhenOpen = this.ins.loadDataWhenOpen;
        this._navSelectedId = this.ins.navSelectedIds;
        this._selectFirstInNav = this.ins.selectFirstInNav;
        this.ins.dialogCreatedSubscription = this.ins.dialogCreated.subscribe((/**
         * @param {?} dlg
         * @return {?}
         */
        function (dlg) {
            if (dlg) {
                _this.ins.setContainerMargin();
                if (_this.ins.dialogOpenedSubscription) {
                    _this.ins.dialogOpenedSubscription.unsubscribe();
                }
                if (_this.ins.dialogClosedSubscription) {
                    _this.ins.dialogClosedSubscription.unsubscribe();
                }
                _this.registerDialogEvent();
                if (_this.ins.isRecordSize) {
                    /** @type {?} */
                    var dlgSize = _this.ins.personalConfigService.getDialogSize();
                    if (dlgSize) {
                        var width = dlgSize.width, height = dlgSize.height;
                        _this.ins.dialogWidth = width ? width : _this.ins.dialogWidth;
                        _this.ins.dialogHeight = height ? height : _this.ins.dialogHeight;
                        // 20200908 更新现窗口的尺寸 by Lucas
                        dlg.width = _this.ins.dialogWidth;
                        dlg.height = _this.ins.dialogHeight;
                    }
                }
                dlg.show();
            }
        }));
        this.ins.subscriptions.push(this.ins.dialogCreatedSubscription);
    };
    /**
     * @param {?} pr
     * @return {?}
     */
    LookupDialogManager.prototype.checkDictPickingResult = /**
     * @param {?} pr
     * @return {?}
     */
    function (pr) {
        /** @type {?} */
        var o = true;
        if (pr === undefined || pr === null || pr === '') {
            o = true;
        }
        if (typeof pr === 'boolean') {
            o = pr;
        }
        /** @type {?} */
        var customData;
        /** @type {?} */
        var selectedIds;
        /** @type {?} */
        var message;
        customData = this.ins.customData;
        selectedIds = this.ins.selectedIds;
        if (typeof pr === 'object') {
            if (pr.showDialog === undefined) {
                o = true;
            }
            else {
                o = pr.showDialog;
            }
            if (pr.hasOwnProperty('data')) {
                /** 保存帮助前传递的数据 */
                customData = pr.data;
            }
            selectedIds = pr.selectedIds || null;
            if (pr.message) {
                message = pr.message;
            }
        }
        return { show: o, customData: customData, selectedIds: selectedIds, message: message };
    };
    /**
     * @param {?} pr
     * @return {?}
     */
    LookupDialogManager.prototype.canOpenDialog = /**
     * @param {?} pr
     * @return {?}
     */
    function (pr) {
        var _a = this.checkDictPickingResult(pr), show = _a.show, customData = _a.customData, selectedIds = _a.selectedIds, message = _a.message;
        this.ins.customData = customData;
        this.ins.selectedIds = selectedIds || null;
        if (message) {
            this.ins.notifyService.warning(message);
        }
        this.ins.isReady = false;
        this.ins.isShow = show;
    };
    /**
     * @return {?}
     */
    LookupDialogManager.prototype.getHeight = /**
     * @return {?}
     */
    function () {
        return this.ins.dialog.size.contentHeight -
            this.ins.containerMargin.bottom -
            this.ins.containerMargin.top -
            (!this.ins.useNewLayout ? (this.ins.useFavorite ? 40 : 0) : 56);
    };
    /**
     * @private
     * @return {?}
     */
    LookupDialogManager.prototype.getMainGridSize = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.ins.isDoublleList()) {
            return {
                width: this.ins.dialog.size.width - this.ins.leftPanel.width - 27,
                height: this.getHeight()
            };
        }
        return {
            width: this.ins.dialog.size.width - this.ins.containerMargin.left - this.ins.containerMargin.right,
            height: this.getHeight()
        };
    };
    /**
     * @return {?}
     */
    LookupDialogManager.prototype.resetDialogContentHeight = /**
     * @return {?}
     */
    function () {
        var _a = this.ins.dialog.size, hHeight = _a.header, fHeight = _a.footer;
        return this.ins.dialogHeight - hHeight - fHeight - this.ins.containerMargin.bottom - this.ins.containerMargin.top;
    };
    /**
     * @private
     * @return {?}
     */
    LookupDialogManager.prototype.registerOkBtnEvent = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.ins.okButton) {
            /** @type {?} */
            var doubleClickDuration = 250;
            /** @type {?} */
            var leftClick$ = fromEvent(this.ins.okButton.nativeElement, 'click').pipe(filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event.button === 0; })));
            /** @type {?} */
            var debounce$ = leftClick$.pipe(debounceTime(doubleClickDuration));
            /** @type {?} */
            var clickLimit$ = leftClick$.pipe(bufferCount(2));
            /** @type {?} */
            var bufferGate$ = race(debounce$, clickLimit$)
                .pipe(
            // We are only interested in the first event. After that
            // we want to restart.
            first(), repeat());
            this._okbtnclick$ = leftClick$.pipe(buffer(bufferGate$), 
            // Here we map the buffered events into the length of the buffer
            // If the user clicked once, the buffer is 1. If he clicked twice it is 2
            map((/**
             * @param {?} clicks
             * @return {?}
             */
            function (clicks) { return clicks.length; }))).subscribe((/**
             * @param {?} clicks
             * @return {?}
             */
            function (clicks) {
                _this.ins.selectItem();
            }));
        }
    };
    /** 注册弹出窗口的事件 */
    /**
     * 注册弹出窗口的事件
     * @private
     * @return {?}
     */
    LookupDialogManager.prototype.registerDialogEvent = /**
     * 注册弹出窗口的事件
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.dialogOpenedSubscription = this.ins.dialog.opened.subscribe((/**
         * @return {?}
         */
        function () {
            _this.ins.dialogContentHeight = _this.resetDialogContentHeight();
            _this.ins.gridOptions = Object.assign(_this.ins.gridOptions, _this.getMainGridSize());
            _this.ins.dialog.el.nativeElement.querySelector('.ps-content').style.height = '100%';
            if (_this.ins.displayType && _this.ins.customDisplayType) {
                _this.ins.componentRef = _this.ins.lookupCmpMgr.createContent(_this.ins.gridOptions);
                _this.ins.lookupCmpMgr.createFavoriteComponent();
            }
            _this.ins.initData();
            // 修改帮助窗口的状态
            _this.ins.lookupUtils.pendingEnd();
            _this.ins.dialogOpened.emit();
            // 注册确定按钮点击事件
            _this.registerOkBtnEvent();
        }));
        this.lookupInit = this.ins.lookupinitializationSubject.subscribe((/**
         * @return {?}
         */
        function () {
            _this.ins.loadDataWhenOpen = true;
            // 注册快捷键
            _this.registerShortcutKey();
            // 监听左侧尺寸变化事件
            if (_this.ins.leftPanel) {
                if (!_this.ins.leftPanel.resizing.observers.length) {
                    /** @type {?} */
                    var leftPanelResize$ = _this.ins.leftPanel.resizing.pipe(debounceTime(50)).subscribe((/**
                     * @param {?} s
                     * @return {?}
                     */
                    function (s) {
                        /** @type {?} */
                        var size = {
                            width: _this.ins.dialog.size.width - s.size.width - _this.ins.getSpaceWidth(true),
                            height: _this.getHeight() - _this.ins.getFilterBarHeight()
                        };
                        _this.ins.componentRef.instance.resize(size);
                        _this.ins.leftComponentRef.instance.resize(s.size);
                    }));
                    _this.ins.subscriptions.push(leftPanelResize$);
                }
                if (_this.ins.isDoublleList() && _this.ins.leftComponentRef) {
                    _this.ins.leftComponentRef.instance.updateScrollPosition();
                }
            }
            if (_this.ins.cascadeSelect) {
                var _a = _this.ins.cascadeSelect, selectEl_1 = _a.selectEl, panelRef_1 = _a.panelRef;
                _this.ins.cascadeSelect.beforeShow = (/**
                 * @return {?}
                 */
                function () {
                    if (selectEl_1 && panelRef_1) {
                        panelRef_1.style.left = selectEl_1.offsetLeft + "px";
                        if (_this.ins.localService.localeId.toLocaleLowerCase() == 'en') {
                            panelRef_1.style.width = 'auto';
                            panelRef_1.style.maxWidth = '200px';
                        }
                        return of(true);
                    }
                });
            }
        }));
        this.dialogClosedSubscription = this.ins.dialog.closed.subscribe((/**
         * @return {?}
         */
        function () {
            // 输入框变化后，弹出窗口未选择数据关闭窗口时，还原原始值
            _this.ins.dialogMgr.dialogClosed();
        }));
        // this.ins.subscriptions.push(this.ins.dialogClosedSubscription);
    };
    /**
     * @private
     * @return {?}
     */
    LookupDialogManager.prototype.registerShortcutKey = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        // 回车，与确定按钮处理逻辑一至。
        /** @type {?} */
        var dlgContainerDom = this.ins.dialog.el.nativeElement.querySelector('.farris-modal');
        if (dlgContainerDom && this.ins.shortcutKey && !this.keyDownHandler) {
            this.keyDownHandler = this.ins.eventManager.addEventListener(dlgContainerDom, 'keydown', (/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                e.stopPropagation();
                var _a = _this.ins.shortcutKey, moveUp = _a.moveUp, moveDown = _a.moveDown, searchFocus = _a.searchFocus, confirm = _a.confirm, nextPager = _a.nextPager, prevPager = _a.prevPager, expand = _a.expand, collapse = _a.collapse;
                /** @type {?} */
                var arrowKey = [moveUp, moveDown, expand, collapse];
                if (arrowKey.includes(e.code)) {
                    _this.ins.componentRef.instance.onKeydownEvent(e);
                }
                else if (e.key === confirm) {
                    if (e.target['nodeName'] === 'INPUT' && !e.ctrlKey) {
                        return;
                    }
                    _this.ins.okButton.nativeElement.click();
                }
                else if (e.code === searchFocus) { // 帮助窗口查询输入框焦点
                    e.preventDefault();
                    _this.ins.componentRef.instance.inputGroup.focus();
                }
                else if (!_this.ins.isTree() && (e.code === nextPager || e.code === prevPager)) { // 分页
                    // 分页
                    /** @type {?} */
                    var isNextPager = e.code === nextPager;
                    _this.paginationKeyDownHandler(isNextPager);
                }
            }));
        }
    };
    /**
     * @private
     * @param {?=} next
     * @return {?}
     */
    LookupDialogManager.prototype.paginationKeyDownHandler = /**
     * @private
     * @param {?=} next
     * @return {?}
     */
    function (next) {
        if (next === void 0) { next = true; }
        /** @type {?} */
        var datatableRef = this.ins.componentRef.instance;
        var pageIndex = datatableRef.pageIndex, pageSize = datatableRef.pageSize, total = datatableRef.total;
        /** @type {?} */
        var pagerCount = Math.ceil(total / pageSize);
        /** @type {?} */
        var newPageNum = pageIndex;
        if (next) {
            newPageNum = newPageNum + 1;
        }
        else {
            newPageNum = newPageNum - 1;
        }
        if (newPageNum > pagerCount || newPageNum < 1) {
            newPageNum = pageIndex;
        }
        this.ins.componentRef.instance.onPageChange({ pageSize: pageSize, pageIndex: newPageNum });
    };
    return LookupDialogManager;
}());
export { LookupDialogManager };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype.lookupInit;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype._loadDataWhenOpen;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype._navSelectedId;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype._selectFirstInNav;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype.dialogClosedSubscription;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype.dialogOpenedSubscription;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype.keyDownHandler;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype._okbtnclick$;
    /**
     * @type {?}
     * @private
     */
    LookupDialogManager.prototype.ins;
}
//# sourceMappingURL=data:application/json;base64,