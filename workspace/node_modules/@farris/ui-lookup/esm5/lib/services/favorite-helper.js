/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { TreeTableComponent } from '@farris/ui-treetable';
import { FavoriteAction, FavoriteIcon, FAVORITE_FIELD_NAME, LookupGridDisplayType } from '../lookup-displaytype';
var FavoriteHelper = /** @class */ (function () {
    function FavoriteHelper(instance) {
        var _this_1 = this;
        this.instance = instance;
        this.favoriteColumnFormatter = (/**
         * @param {?} v
         * @param {?} data
         * @return {?}
         */
        function (v, data) {
            /** @type {?} */
            var f = v ? FavoriteIcon.yes : FavoriteIcon.no;
            if (_this_1.instance.isTree()) {
                /** @type {?} */
                var id = data[_this_1.instance.idField];
                if (id) {
                    /** @type {?} */
                    var tt = (/** @type {?} */ (_this_1.instance.componentRef.instance));
                    /** @type {?} */
                    var rn = tt.findRowNode(id);
                    if (rn) {
                        if (rn.node.selectable) {
                            return f;
                        }
                        else {
                            return '';
                        }
                    }
                }
            }
            return f;
        });
        this.lookupSelectionSer = this.instance.lookupSelectionSer;
    }
    /**
     * @return {?}
     */
    FavoriteHelper.prototype.getFavoriteColumns = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var columns = this.instance.gridOptions.columns.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            /** @type {?} */
            var rtn = Object.assign({}, item);
            if (item.field === FAVORITE_FIELD_NAME) {
                rtn.formatter = (/**
                 * @return {?}
                 */
                function () { return FavoriteIcon.delete; });
            }
            return rtn;
        }));
        this.instance.initColumnWidth(columns, 'fav');
        return columns;
    };
    /**
     * @return {?}
     */
    FavoriteHelper.prototype.initPersonalInfo = /**
     * @return {?}
     */
    function () {
        if (this.instance.personalConfigService) {
            /** @type {?} */
            var controlID = this.instance.el.nativeElement.id || this.instance.controlId;
            if (!controlID) {
                this.instance.writeConsole('LookupGrid - 未设置组件id, 收藏功能将不能正常，请设置组件id.');
            }
            /** @type {?} */
            var pcstr = this.instance.getLookupBindingFields();
            this.instance.personalConfigService.controlID = controlID;
            this.instance.personalConfigService.personalConfigKey = pcstr;
            /** @type {?} */
            var conf = {
                displayType: this.instance.displayType,
                singleSelect: this.instance.singleSelect,
                idField: this.instance.idField,
                textField: this.instance.textField,
                mapFields: Object.assign({}, this.instance.mapFields || {})
            };
            this.instance.personalConfigService.initPersonalConf(conf);
            // 个性化配置的订阅事件处理
            this.listenPersonalConfigHandler();
        }
    };
    /**
     * 监听收藏TAB页中相关事件；
     * 数据选中，取消选中，移除收藏，双击事件
     */
    /**
     * 监听收藏TAB页中相关事件；
     * 数据选中，取消选中，移除收藏，双击事件
     * @param {?} cmpRef
     * @return {?}
     */
    FavoriteHelper.prototype.initFavoriteComponentEvent = /**
     * 监听收藏TAB页中相关事件；
     * 数据选中，取消选中，移除收藏，双击事件
     * @param {?} cmpRef
     * @return {?}
     */
    function (cmpRef) {
        var _this_1 = this;
        switch (this.instance.displayType) {
            case LookupGridDisplayType.NavList:
            case LookupGridDisplayType.NavTreeList:
            case LookupGridDisplayType.List: {
                /** @type {?} */
                var fdt_1 = (/** @type {?} */ (cmpRef.instance));
                fdt_1.remoteSort = false;
                fdt_1.selectedRow.subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    if (_this_1.instance.singleSelect) {
                        _this_1.lookupSelectionSer.clearSelections();
                    }
                    _this_1.lookupSelectionSer.updateSelections(e.data);
                }));
                fdt_1.unSelectRow.subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    _this_1.lookupSelectionSer.unSelect(e.data[_this_1.instance.idField]);
                }));
                if (!fdt_1.singleSelect) {
                    fdt_1.checkAll.subscribe((/**
                     * @param {?} e
                     * @return {?}
                     */
                    function (e) {
                        _this_1.lookupSelectionSer.updateSelections(fdt_1.data, e);
                    }));
                }
                fdt_1.cellClick.subscribe((/**
                 * @param {?} e
                 * @return {?}
                 */
                function (e) {
                    if (e.col.field === FAVORITE_FIELD_NAME) {
                        e.event.stopPropagation();
                        // tslint:disable-next-line: no-string-literal
                        /** @type {?} */
                        var classList = e.event.target['classList'];
                        if (classList.contains('f-lookup-unfavorite')) {
                            if (_this_1.instance.items) {
                                _this_1.instance.items.forEach((/**
                                 * @param {?} item
                                 * @return {?}
                                 */
                                function (item) {
                                    if (item[_this_1.instance.idField] === e.row[_this_1.instance.idField]) {
                                        item[FAVORITE_FIELD_NAME] = false;
                                    }
                                }));
                                /** @type {?} */
                                var dt = (/** @type {?} */ (_this_1.instance.componentRef.instance));
                                if (dt) {
                                    dt.loadData({
                                        pageSize: _this_1.instance.gridOptions.pageSize,
                                        pageIndex: _this_1.instance.gridOptions.pageIndex,
                                        total: _this_1.instance.gridOptions.total,
                                        data: _this_1.instance.gridOptions.items
                                    });
                                }
                            }
                            _this_1.instance.favoriteItems =
                                _this_1.instance.favoriteItems.filter((/**
                                 * @param {?} n
                                 * @return {?}
                                 */
                                function (n) { return n[_this_1.instance.idField] !== e.row[_this_1.instance.idField]; }));
                            _this_1.lookupSelectionSer.updateFavoriteData(e.row, FavoriteAction.delete);
                        }
                    }
                }));
                // 双击事件
                fdt_1.rowDblClick.subscribe((/**
                 * @param {?} rowData
                 * @return {?}
                 */
                function (rowData) {
                    if (_this_1.instance.gridOptions.singleSelect) {
                        _this_1.instance.selectItem(rowData);
                    }
                }));
                break;
            }
            case LookupGridDisplayType.TreeList: {
                if (cmpRef) {
                    /** @type {?} */
                    var ftt_1 = (/** @type {?} */ (cmpRef.instance));
                    ftt_1.remoteSort = false;
                    ftt_1.nodeSelected.subscribe((/**
                     * @param {?} e
                     * @return {?}
                     */
                    function (e) {
                        if (_this_1.instance.singleSelect) {
                            _this_1.lookupSelectionSer.clearSelections();
                        }
                        _this_1.lookupSelectionSer.updateSelections(e.node.data);
                    }));
                    ftt_1.nodeUnChecked.subscribe((/**
                     * @param {?} e
                     * @return {?}
                     */
                    function (e) {
                        if (e.nodes && e.nodes.length) {
                            _this_1.instance.multiSelMgr.remove(e.nodes.map((/**
                             * @param {?} n
                             * @return {?}
                             */
                            function (n) { return n.id; })));
                        }
                        else if (e && e.node && e.node.data && e.node.data.id) {
                            // const tt = this.instance.componentRef.instance as TreeTableComponent;
                            // tt.unSelectNode(e.node.data.id);
                            _this_1.lookupSelectionSer.unSelect(e.node.data.id);
                        }
                    }));
                    ftt_1.nodeChecked.subscribe((/**
                     * @param {?} e
                     * @return {?}
                     */
                    function (e) {
                        if (!_this_1.instance.singleSelect) {
                            if (e.nodes && e.nodes.length) {
                                _this_1.instance.multiSelMgr.updateSelections(e.nodes.map((/**
                                 * @param {?} n
                                 * @return {?}
                                 */
                                function (n) { return n.data; })));
                            }
                            else {
                                if (Array.isArray(e.node)) {
                                    _this_1.instance.multiSelMgr.updateSelections(e.node.map((/**
                                     * @param {?} n
                                     * @return {?}
                                     */
                                    function (n) { return n.data; })));
                                }
                                else {
                                    _this_1.instance.multiSelMgr.updateSelections([e.node.data]);
                                }
                            }
                        }
                    }));
                    ftt_1.cellClick.subscribe((/**
                     * @param {?} row
                     * @return {?}
                     */
                    function (row) {
                        if (row.col.field === FAVORITE_FIELD_NAME) {
                            row.event.stopPropagation();
                            /** @type {?} */
                            var classList = row.event.target['classList'];
                            if (classList.contains('f-lookup-unfavorite')) {
                                /** @type {?} */
                                var _this_2 = _this_1.instance;
                                ((/**
                                 * @param {?} items
                                 * @return {?}
                                 */
                                function every(items) {
                                    if (!items) {
                                        return;
                                    }
                                    /** @type {?} */
                                    var hasFinish = false;
                                    items.forEach((/**
                                     * @param {?} item
                                     * @return {?}
                                     */
                                    function (item) {
                                        if (hasFinish) {
                                            return;
                                        }
                                        if (item.data[_this_2.idField] === row.node[_this_2.idField]) {
                                            item.data[FAVORITE_FIELD_NAME] = false;
                                            hasFinish = true;
                                        }
                                        else if (item.children && item.children.length > 0) {
                                            every(item.children);
                                        }
                                    }));
                                }))(_this_1.instance.items);
                                /** @type {?} */
                                var tt = (/** @type {?} */ (_this_1.instance.componentRef.instance));
                                tt.loadData(_this_1.instance.items);
                                _this_1.lookupSelectionSer.updateFavoriteData(row.node.data, FavoriteAction.delete);
                            }
                        }
                    }));
                    ftt_1.dblClick.subscribe((/**
                     * @param {?} treeNode
                     * @return {?}
                     */
                    function (treeNode) {
                        if (_this_1.instance.gridOptions.singleSelect && treeNode.selectable) {
                            if (_this_1.instance.okButton) {
                                _this_1.instance.okButton.nativeElement.click();
                            }
                        }
                    }));
                    ftt_1.checkAll.subscribe((/**
                     * @param {?} e
                     * @return {?}
                     */
                    function (e) {
                        /** @type {?} */
                        var data = e.instance.checkeds.map((/**
                         * @param {?} n
                         * @return {?}
                         */
                        function (n) { return n.data; }));
                        _this_1.instance.multiSelMgr.updateSelections(data);
                        _this_1.instance.checkedChange.emit({ data: data, isCheck: true });
                    }));
                    ftt_1.unCheckAll.subscribe((/**
                     * @return {?}
                     */
                    function () {
                        // this.instance.multiSelMgr.clear();
                        /** @type {?} */
                        var nodeItems = ftt_1.state.rowNodes.map((/**
                         * @param {?} n
                         * @return {?}
                         */
                        function (n) { return n.node.data; }));
                        _this_1.lookupSelectionSer.updateSelections(nodeItems, false);
                        _this_1.instance.checkedChange.emit({ data: [], isCheck: false });
                    }));
                }
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    FavoriteHelper.prototype.getFavoritData = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.instance.personalConf) {
            /** @type {?} */
            var favData = this.instance.personalConf.favorite;
            /** @type {?} */
            var _data = (favData && favData[this.instance.localService.localeId]) ? favData[this.instance.localService.localeId] : [];
            return _data;
        }
        return [];
    };
    /**
     * @return {?}
     */
    FavoriteHelper.prototype.getFavoritIds = /**
     * @return {?}
     */
    function () {
        return this.getFavoritData();
    };
    /**
     * @param {?=} data
     * @return {?}
     */
    FavoriteHelper.prototype._loadFavoriteData = /**
     * @param {?=} data
     * @return {?}
     */
    function (data) {
        if (data === void 0) { data = null; }
        /** @type {?} */
        var fdt = (/** @type {?} */ (this.instance.favoritesComponentRef.instance));
        this.loadFavoriteDatatable(fdt, data);
        fdt.cd.markForCheck();
        this.instance.closeLoading();
    };
    // 加载收藏grid数据
    // 加载收藏grid数据
    /**
     * @param {?=} res
     * @return {?}
     */
    FavoriteHelper.prototype.loadFavoritesData = 
    // 加载收藏grid数据
    /**
     * @param {?=} res
     * @return {?}
     */
    function (res) {
        if (res === void 0) { res = null; }
        /** @type {?} */
        var favIds = this.getFavoritIds();
        switch (this.instance.displayType) {
            case LookupGridDisplayType.NavList:
            case LookupGridDisplayType.NavTreeList:
            case LookupGridDisplayType.List: {
                /** @type {?} */
                var fdt = (/** @type {?} */ (this.instance.favoritesComponentRef.instance));
                if (this.instance.favoriteDataFrom === 'locale') {
                    if (res) {
                        this._loadFavoriteData(res.items);
                    }
                    else {
                        // this.instance.httpMgr.getFavoriteData(favIds).subscribe(resData => {
                        //     if (resData) {
                        //         this._loadFavoriteData(resData.items);
                        //     }
                        //     this.instance.closeLoading();
                        // });
                    }
                }
                else {
                    /** @type {?} */
                    var favData = this.getFavoritData();
                    this.loadFavoriteDatatable(fdt, res ? res.items : favData);
                }
                break;
            }
            case LookupGridDisplayType.TreeList: {
                if (this.instance.favoritesComponentRef && this.instance.favoritesComponentRef.instance instanceof TreeTableComponent) {
                    /** @type {?} */
                    var ftt = (/** @type {?} */ (this.instance.favoritesComponentRef.instance));
                    this.bindFavTreetable(ftt);
                    if (this.instance.favoriteDataFrom === 'locale') {
                        if (res) {
                            this.loadFavoriteForTreeTable(res.items || [], ftt);
                        }
                        else {
                            // this.instance.httpMgr.getFavoriteData(favIds).subscribe(resData => {
                            //     if (resData) {
                            //         const items = resData.items;
                            //         this.loadFavoriteForTreeTable(items, ftt);
                            //     }
                            //     this.instance.closeLoading();
                            // });
                        }
                    }
                    else {
                        if (res) {
                            this.loadFavoriteForTreeTable(res.items, ftt);
                        }
                    }
                }
            }
        }
    };
    /**
     * @private
     * @param {?} fdt
     * @param {?=} data
     * @return {?}
     */
    FavoriteHelper.prototype.loadFavoriteDatatable = /**
     * @private
     * @param {?} fdt
     * @param {?=} data
     * @return {?}
     */
    function (fdt, data) {
        if (data !== undefined) {
            this.instance.favoriteItems = data;
        }
        if (fdt.columns && !fdt.columns.length) {
            fdt.columns = this.instance.favoriteColumns;
        }
        fdt.loadData({
            total: 0,
            pageSize: 20,
            pageIndex: 1,
            data: this.instance.favoriteItems
        });
        this.instance.selectionMgr.selectCurrentValue();
        fdt.cd.detectChanges();
    };
    /**
     * @private
     * @param {?} ftt
     * @return {?}
     */
    FavoriteHelper.prototype.bindFavTreetable = /**
     * @private
     * @param {?} ftt
     * @return {?}
     */
    function (ftt) {
        var _this_1 = this;
        ftt.allColumnsTitle = this.instance.allColumnsTitle;
        ftt.idField = this.instance.idField;
        /** @type {?} */
        var columns = this.instance.gridOptions.columns.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            /** @type {?} */
            var rtn = tslib_1.__assign({}, item);
            if (item.field === FAVORITE_FIELD_NAME) {
                rtn.formatter = (/**
                 * @param {?} v
                 * @param {?} data
                 * @return {?}
                 */
                function (v, data) {
                    /** @type {?} */
                    var favids = _this_1.getFavoritIds();
                    if (favids && favids.length) {
                        /** @type {?} */
                        var index = favids.findIndex((/**
                         * @param {?} el
                         * @return {?}
                         */
                        function (el) { return el === data[_this_1.instance.idField]; }));
                        if (index >= 0) {
                            return FavoriteIcon.delete;
                        }
                    }
                    return '';
                });
            }
            return rtn;
        }));
        this.instance.initColumnWidth(columns, 'fav');
        this.instance.favoriteColumns = columns;
        ftt.columns = columns;
        if (this.instance.gridOptions.treeInfo) {
            ftt.onlySelectLeaf = this.instance.gridOptions.treeInfo.onlySelectLeaf;
        }
        if (!ftt.singleSelect) {
            ftt.checkOnSelect = true;
            ftt.selectOnCheck = true;
            ftt.showCheckbox = true;
            // 启用多选后，同时启用级联选择
            if (this.instance.enableCascade) {
                this.instance.ttEventMgr.cascadeValueChanged(this.instance.cascadeStatus);
            }
            else {
                ftt.cascadeCheck = false;
                ftt.cascadeDown = false;
                ftt.cascadeUp = false;
            }
        }
    };
    /**
     * @private
     * @param {?} nodes
     * @return {?}
     */
    FavoriteHelper.prototype.checkNodeIsLeaf = /**
     * @private
     * @param {?} nodes
     * @return {?}
     */
    function (nodes) {
        var _this_1 = this;
        if (nodes && nodes.length) {
            return nodes.map((/**
             * @param {?} node
             * @return {?}
             */
            function (node) {
                if (node.hasOwnProperty("addtional")) {
                    node.selectable = !node["addtional"];
                }
                if (node.children && node.children.length) {
                    _this_1.checkNodeIsLeaf(node.children);
                }
                else {
                    node.leaf = true;
                }
                return node;
            }));
        }
        return nodes;
    };
    /**
     * @param {?} items
     * @return {?}
     */
    FavoriteHelper.prototype.initFavoriteTreeData = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        /** @type {?} */
        var treeInfo = this.instance.gridOptions.treeInfo;
        if (treeInfo && !treeInfo['treeDataIsInit']) {
            if (treeInfo.layerType.toLowerCase() === 'pathcode') {
                items = this.instance.lookupUtils.makeTree(items, treeInfo);
            }
            else {
                items = this.instance.lookupUtils.makeTreeWithParentID(items, '', treeInfo.dataField ? treeInfo.dataField + "." + treeInfo.parentField : treeInfo.parentField, this.instance.idField);
            }
        }
        // return this.instance.checkNodeCanBeSelect(items, true);
        return this.checkNodeIsLeaf(items);
    };
    /**
     * @param {?} items
     * @param {?} ftt
     * @return {?}
     */
    FavoriteHelper.prototype.loadFavoriteForTreeTable = /**
     * @param {?} items
     * @param {?} ftt
     * @return {?}
     */
    function (items, ftt) {
        items = this.initFavoriteTreeData(items);
        this.instance.favoriteItems = items;
        ftt.loadData(items);
        ftt.expandAll();
        this.instance.selectionMgr.selectCurrentValue();
        return items;
    };
    // 更新列表中的收藏数据标识
    // 更新列表中的收藏数据标识
    /**
     * @param {?} data
     * @return {?}
     */
    FavoriteHelper.prototype.updateFavoritesStatus = 
    // 更新列表中的收藏数据标识
    /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var _this_1 = this;
        if (!data || !this.instance.useFavorite) {
            return;
        }
        /** @type {?} */
        var favIds = this.getFavoritIds();
        if (favIds && favIds.length) {
            // 处理数据列表中的收藏数据标识
            if (this.instance.displayType !== LookupGridDisplayType.TreeList) {
                data.map((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    if (favIds && favIds.length && favIds.find((/**
                     * @param {?} v
                     * @return {?}
                     */
                    function (v) { return v === item[_this_1.instance.idField]; }))) {
                        item[FAVORITE_FIELD_NAME] = true;
                    }
                }));
            }
            else {
                /** @type {?} */
                var _this_3 = this.instance;
                ((/**
                 * @param {?} _data
                 * @return {?}
                 */
                function each(_data) {
                    _data.forEach((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) {
                        if (favIds && favIds.length && favIds.find((/**
                         * @param {?} v
                         * @return {?}
                         */
                        function (v) { return v === item.data[_this_3.idField]; }))) {
                            item.data[FAVORITE_FIELD_NAME] = true;
                        }
                        if (item.children && item.children.length > 0) {
                            each(item.children);
                        }
                    }));
                }))(data);
            }
        }
    };
    /**
     * @private
     * @param {?} value
     * @param {?} action
     * @param {?} data
     * @return {?}
     */
    FavoriteHelper.prototype._updateFavorites = /**
     * @private
     * @param {?} value
     * @param {?} action
     * @param {?} data
     * @return {?}
     */
    function (value, action, data) {
        var _this_1 = this;
        /** @type {?} */
        var localeID = this.instance.localService.localeId;
        this.instance.personalConf.favorite = this.instance.personalConf.favorite || {};
        /** @type {?} */
        var items = value.filter((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return !n['_addtional_']; }));
        /** @type {?} */
        var newVal = items.map((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n[_this_1.instance.idField]; })).filter((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n !== null && n !== undefined; }));
        /** @type {?} */
        var favItems = this.instance.personalConf.favorite[localeID] || [];
        this.instance.personalConf.favorite[localeID] = Array.from(new Set(tslib_1.__spread(favItems, newVal)));
        if (action === FavoriteAction.delete && data) {
            this.instance.personalConf.favorite[localeID] = this.instance.personalConf.favorite[localeID].filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n !== data[_this_1.instance.idField]; }));
        }
        return this.instance.personalConf.favorite[localeID];
    };
    // 收藏数据管理
    // 收藏数据管理
    /**
     * @private
     * @return {?}
     */
    FavoriteHelper.prototype.listenPersonalConfigHandler = 
    // 收藏数据管理
    /**
     * @private
     * @return {?}
     */
    function () {
        var _this_1 = this;
        this.lookupSelectionSer.favoriteItems$.subscribe((/**
         * @param {?} n
         * @return {?}
         */
        function (n) {
            if (!_this_1.instance.favoritesComponentRef) {
                return;
            }
            var items = n.items, action = n.action, data = n.data;
            /** @type {?} */
            var favids = _this_1._updateFavorites(items, action, data);
            _this_1.instance.httpMgr.submitFavoriteData(action);
            if (_this_1.instance.displayType === LookupGridDisplayType.List || _this_1.instance.displayType.includes('NAV')) {
                /** @type {?} */
                var dt = (/** @type {?} */ (_this_1.instance.favoritesComponentRef.instance));
                _this_1.loadFavoriteDatatable(dt, items);
            }
            else if (_this_1.instance.displayType === LookupGridDisplayType.TreeList) {
                /** @type {?} */
                var ftt_2 = (/** @type {?} */ (_this_1.instance.favoritesComponentRef.instance));
                // const favids = items.map(d => d.id);
                _this_1.instance.showLoading();
                _this_1.instance.httpMgr.getData({ favoriteIds: favids }, 'fav').subscribe((/**
                 * @param {?} resData
                 * @return {?}
                 */
                function (resData) {
                    if (resData) {
                        /** @type {?} */
                        var _items = resData.items;
                        _this_1.loadFavoriteForTreeTable(_items, ftt_2);
                    }
                    else {
                        _this_1.instance.favoriteItems = [];
                        ftt_2.loadData([]);
                    }
                    _this_1.instance.closeLoading();
                }));
            }
        }));
    };
    return FavoriteHelper;
}());
export { FavoriteHelper };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FavoriteHelper.prototype.lookupSelectionSer;
    /** @type {?} */
    FavoriteHelper.prototype.favoriteColumnFormatter;
    /**
     * @type {?}
     * @private
     */
    FavoriteHelper.prototype.instance;
}
//# sourceMappingURL=data:application/json;base64,