/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { of } from 'rxjs';
import { catchError, tap } from 'rxjs/operators';
import { FavoriteAction, FAVORITE_FIELD_NAME } from '../lookup-displaytype';
var DataTableEventManager = /** @class */ (function () {
    function DataTableEventManager(ins) {
        this.ins = ins;
        this._sortState = null;
        this.lookupSelectionSer = this.ins.lookupSelectionSer;
    }
    /**
     * @param {?} conditions
     * @return {?}
     */
    DataTableEventManager.prototype.conditionsChange = /**
     * @param {?} conditions
     * @return {?}
     */
    function (conditions) {
        this.ins.conditions = conditions;
        if (conditions && conditions.length === 1 && conditions[0].code == '*') {
            this.ins.conditions = [];
            this.onSearch({ field: '*', value: conditions[0].value });
        }
        else {
            this.onSearch();
        }
    };
    /**
     * @param {?=} $event
     * @return {?}
     */
    DataTableEventManager.prototype.onSearch = /**
     * @param {?=} $event
     * @return {?}
     */
    function ($event) {
        var _this = this;
        if ($event === void 0) { $event = { field: '*', value: '' }; }
        if ($event && $event.field !== '*' && !$event.value) {
            this.ins.messagerService.warning(this.ins.mustWriteSomething);
            return;
        }
        /** @type {?} */
        var p = {
            pageInfo: { pageIndex: 1, pageSize: this.ins.gridOptions.pageSize },
            search: $event
        };
        if (this._sortState) {
            var _a = this._sortState, sortName = _a.sortName, sortOrder = _a.sortOrder;
            if (sortName) {
                p['sortName'] = sortName;
                p['sortOrder'] = sortOrder;
            }
        }
        if (this.ins.uri) {
            if (!this.ins.searching) {
                this.ins.searching = true;
                if (this.ins['navNodePathCode']) {
                    p['navNodePathCode'] = this.ins['navNodePathCode'];
                }
                this.ins.httpMgr.getData(p, 'list').pipe(catchError((/**
                 * @param {?} err
                 * @return {?}
                 */
                function (err) {
                    _this.ins.searching = false;
                    return of({ "_ERROR_": err });
                })), tap((/**
                 * @return {?}
                 */
                function () {
                    _this.ins.searching = false;
                }))).subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    _this.ins.searching = false;
                    _this.ins.closeLoading();
                    if (!data['_ERROR_']) {
                        _this._loadData(data);
                    }
                    else {
                        throw new Error(data['_ERROR_']);
                    }
                }));
            }
        }
        else {
            if (this.ins.enableMultiFieldSearch) {
                this.ins.query.emit({ conditions: this.ins.conditions, instance: this.ins });
            }
            else {
                this.ins.search.emit(p);
            }
        }
    };
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    DataTableEventManager.prototype._loadData = /**
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var self = this.ins;
        self.closeLoading();
        self.favHelper.updateFavoritesStatus(data.items);
        self.loadDataTableData(data);
        // 选中数据
        this.ins.selectionMgr.selectCurrentValue();
    };
    /**
     * @return {?}
     */
    DataTableEventManager.prototype.bindDataTableEvent = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var self = this.ins;
        /** @type {?} */
        var dt = (/** @type {?} */ (self.componentRef.instance));
        dt.selectedRow.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (_this.ins.singleSelect) {
                _this.lookupSelectionSer.clearSelections();
            }
            _this.ins.checkedChange.emit({ data: [e.data], isCheck: true });
            _this.lookupSelectionSer.updateSelections([e.data]);
            dt.cd.detectChanges();
        }));
        dt.unSelectRow.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            _this.lookupSelectionSer.unSelect(e.data[self.idField]);
            _this.ins.checkedChange.emit({ data: [e.data], isCheck: false });
        }));
        dt.checkAll.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            _this.lookupSelectionSer.updateSelections(dt.data, e);
            _this.ins.checkedChange.emit({ data: dt.data, isCheck: e });
        }));
        dt.pageChanged.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (self.uri) {
                self.httpMgr.getData(e, 'list').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    _this._loadData(data);
                }));
            }
            else {
                self.pagerChanged.emit(self.httpMgr.buildQueryParams(e, 'list'));
            }
        }));
        dt.pageSizeChanged.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (self.uri) {
                self.httpMgr.getData(e, 'list').subscribe((/**
                 * @param {?} data
                 * @return {?}
                 */
                function (data) {
                    _this._loadData(data);
                }), (/**
                 * @param {?} err
                 * @return {?}
                 */
                function (err) {
                    self.closeLoading();
                }));
            }
            else {
                self.pagerChanged.emit(self.httpMgr.buildQueryParams(e, 'list'));
            }
        }));
        dt.search.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            // if (JSON.stringify(self._searchState || {}) !== JSON.stringify(e || {})) {
            //     this.ins.searching = false;
            // }
            self._searchState = tslib_1.__assign({}, (e || {}));
            _this.onSearch(e);
        }));
        dt.searchValueChange.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (e && e.value) {
                self._searchState = tslib_1.__assign({}, e);
            }
            else {
                self._searchState = null;
            }
        }));
        // 双击事件
        dt.rowDblClick.subscribe((/**
         * @param {?} rowData
         * @return {?}
         */
        function (rowData) {
            if (self.gridOptions.singleSelect) {
                // this.lookupSelectionSer.updateSelections([rowData]);
                self.selectItem(rowData);
            }
        }));
        // 收藏事件
        if (!dt.cellClick.observers.length) {
            dt.cellClick.subscribe((/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                if (e.col.field === FAVORITE_FIELD_NAME) {
                    /** @type {?} */
                    var classList = e.event.target['classList'];
                    if (classList.contains('f-lookup-favorite')) {
                        e.event.stopPropagation();
                        self.items.forEach((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) {
                            /** @type {?} */
                            var id = self.utils.getValue(self.idField, item);
                            if (id === self.utils.getValue(self.idField, e.row)) {
                                item[FAVORITE_FIELD_NAME] = !item[FAVORITE_FIELD_NAME];
                            }
                        }));
                        dt.loadData({
                            pageSize: self.gridOptions.pageSize,
                            pageIndex: self.gridOptions.pageIndex,
                            total: self.gridOptions.total,
                            data: self.gridOptions.items
                        });
                        // 更新收藏数据
                        /** @type {?} */
                        var faction = e.row[FAVORITE_FIELD_NAME] ? FavoriteAction.add : FavoriteAction.delete;
                        if (faction === FavoriteAction.add) {
                            _this.ins.favoriteItems = tslib_1.__spread(_this.ins.favoriteItems, [e.row]);
                        }
                        else {
                            _this.ins.favoriteItems = _this.ins.favoriteItems.filter((/**
                             * @param {?} n
                             * @return {?}
                             */
                            function (n) {
                                return self.utils.getValue(self.idField, n) !== self.utils.getValue(self.idField, e.row);
                            }));
                        }
                        _this.lookupSelectionSer.updateFavoriteData(e.row, faction);
                    }
                }
            }));
        }
        dt.columnSorted.subscribe((/**
         * @param {?} sort
         * @return {?}
         */
        function (sort) {
            _this._sortState = sort;
            if (!_this.ins.remoteSort) {
                return;
            }
            var _a = tslib_1.__assign({}, sort), sortName = _a.sortName, sortOrder = _a.sortOrder;
            /** @type {?} */
            var col = _this.ins.columns.find((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n.field === sortName; }));
            /** @type {?} */
            var _sortName = col ? col.fieldPath ? col.fieldPath : col.field : sortName;
            /** @type {?} */
            var param = {
                sortName: _sortName,
                sortOrder: sortOrder,
                search: self._searchState,
                pageInfo: {
                    pageSize: self.pageSize,
                    pageIndex: 1
                }
            };
            self.httpMgr.getData(param, 'search').subscribe((/**
             * @param {?} d
             * @return {?}
             */
            function (d) {
                self.loadDataTableData(d);
                self.closeLoading();
                // 选中数据 TFS 615008
                _this.ins.selectionMgr.selectCurrentValue();
            }));
        }));
        dt.clearSearchValue.subscribe((/**
         * @return {?}
         */
        function () {
            self._searchState = null;
            _this.onSearch();
        }));
        dt.cellStyler = (/**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            var field = val.field;
            if (field === FAVORITE_FIELD_NAME) {
                return {
                    'text-overflow': 'unset'
                };
            }
            return null;
        });
    };
    return DataTableEventManager;
}());
export { DataTableEventManager };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DataTableEventManager.prototype.lookupSelectionSer;
    /**
     * @type {?}
     * @private
     */
    DataTableEventManager.prototype._sortState;
    /**
     * @type {?}
     * @private
     */
    DataTableEventManager.prototype.ins;
}
//# sourceMappingURL=data:application/json;base64,