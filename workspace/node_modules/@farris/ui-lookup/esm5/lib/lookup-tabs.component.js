/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Output, EventEmitter, ViewChild, Injector, Renderer2, Input } from '@angular/core';
import { trigger, style, transition, animate } from '@angular/animations';
import { PersonalConfigService } from './lookup-presonalConfig.service';
import { LookupGridComponent } from './lookup-grid.component';
var LookupTabsComponent = /** @class */ (function () {
    function LookupTabsComponent(injector) {
        this.injector = injector;
        this.enableFav = false;
        this.activeTab = 'datalist';
        this.visible = false;
        this.layout = 'default';
        this.dialogTitle = '';
        this.tabChange = new EventEmitter();
        this.render = null;
        this.el = null;
        this.lookupIns = null;
        this.personalConfigService = this.injector.get(PersonalConfigService, null);
        this.render = this.injector.get(Renderer2);
        this.el = this.injector.get(ElementRef);
        this.lookupIns = this.injector.get(LookupGridComponent, null);
        if (!this.lookupIns.labels) {
            this.lookupIns.initLabels();
        }
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    LookupTabsComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.activeTab && !changes.activeTab.isFirstChange()) {
            this.initInkBarPos(changes.activeTab.currentValue);
        }
    };
    /**
     * @return {?}
     */
    LookupTabsComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.initInkBarPos(_this.activeTab);
        }), 300);
    };
    /**
     * @param {?} e
     * @param {?} v
     * @return {?}
     */
    LookupTabsComponent.prototype.navClickHandle = /**
     * @param {?} e
     * @param {?} v
     * @return {?}
     */
    function (e, v) {
        e.stopPropagation();
        if (this.activeTab !== v) {
            this.activeTab = v;
            this.tabChange.emit({ event: e, tabIndex: v });
            this.initInkBarPos(v);
        }
    };
    /**
     * @param {?} which
     * @return {?}
     */
    LookupTabsComponent.prototype.initInkBarPos = /**
     * @param {?} which
     * @return {?}
     */
    function (which) {
        if (this.layout !== 'default') {
            return;
        }
        if (!this.enableFav) {
            return;
        }
        /** @type {?} */
        var width = this.dataListNavRef.nativeElement.offsetWidth;
        /** @type {?} */
        var left = 0;
        if (which !== 'datalist') {
            left = this.dataListNavRef.nativeElement.offsetWidth;
        }
        if (which === 'favorite') {
            width = this.favoriteNavRef.nativeElement.offsetWidth;
        }
        else if (which === 'selected') {
            if (this.favoriteNavRef) {
                left += this.favoriteNavRef.nativeElement.offsetWidth;
            }
            if (this.selectedNavRef) {
                width = this.selectedNavRef.nativeElement.offsetWidth;
            }
            else {
                this.activeTab = 'datalist';
            }
        }
        this.inkBarRef.nativeElement.style = "width: " + width + "px; transform: translate3d(" + left + "px, 0px, 0px);";
    };
    /**
     * @return {?}
     */
    LookupTabsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    LookupTabsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lookup-tabs',
                    template: "<div class=\"lookup-tabs-nav\" *ngIf=\"enableFav && layout === 'default'\">\r\n    <div class=\"nav-item\" [class.nav-item-selected]=\"activeTab === 'datalist'\" (click)=\"navClickHandle($event, 'datalist')\" #dataListNav>{{ 'lookup.datalist' | locale: '\u6570\u636E\u5217\u8868' }}</div>\r\n    <div class=\"nav-item\" [class.nav-item-selected]=\"activeTab === 'favorite'\" *ngIf=\"enableFav\" (click)=\"navClickHandle($event, 'favorite')\" #favoriteNav>{{ 'lookup.favorites' | locale: '\u6536\u85CF\u5939' }}</div>\r\n    <div class=\"tabs-ink-bar tabs-ink-bar-animated\" #inkBar></div>\r\n</div>\r\n\r\n<lookup-advanced-layout *ngIf=\"layout !== 'default'\" \r\n#advanceLayout class=\"lookup-advanced-layout\"\r\n[title]=\"dialogTitle\"\r\n[enableFav]=\"enableFav\"\r\n[activeTab]=\"activeTab\"\r\n[dataTab]=\"lookupIns?.labels.dataTab\"\r\n[favTab]=\"lookupIns?.labels.favTab\"\r\n(tabChanged)=\"navClickHandle($event.$event, $event.tab)\"></lookup-advanced-layout>\r\n\r\n<div class=\"lookup-tabs-content\" style=\"transition: all 0.1s ease-in;\" [style.opacity]=\"visible ? 1: 0\">\r\n    <div class=\"lookup-datalist\" style=\"height:100%\"  @flyInOut *ngIf=\"activeTab === 'datalist'\">\r\n        <div style=\"height: 100%\">\r\n            <ng-content select=\"[datalist]\"></ng-content>\r\n        </div>\r\n    </div>\r\n    <div class=\"lookup-datalist lookup-favorites\" style=\"height:100%; padding-top: 10px;\" @flyInOut *ngIf=\"activeTab === 'favorite'\" >\r\n        <div style=\"height: 100%\">\r\n            <ng-content select=\"[favorites]\"></ng-content>\r\n        </div>\r\n    </div>\r\n</div>",
                    animations: [
                        trigger('flyInOut', [
                            transition(':enter', [style({ opacity: 0 }), animate('.3s', style({ opacity: 1 }))]),
                            transition(':leave', [animate('.3s', style({ opacity: 0 }))])
                        ])
                    ],
                    styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}:host .lookup-tabs-nav{position:relative;display:inline-block;box-sizing:border-box;margin:0;padding-left:0;list-style:none;-webkit-transition:-webkit-transform .3s cubic-bezier(.645,.045,.355,1);transition:transform .3s cubic-bezier(.645,.045,.355,1);transition:transform .3s cubic-bezier(.645,.045,.355,1),-webkit-transform .3s cubic-bezier(.645,.045,.355,1)}:host .lookup-tabs-nav .nav-item{position:relative;display:inline-block;text-decoration:none;box-sizing:border-box;padding:.625rem .8125rem;color:inherit;cursor:pointer}:host .lookup-tabs-nav .nav-item-selected{color:#1890ff}:host .lookup-tabs-nav .tabs-ink-bar{position:absolute;bottom:1px;left:0;z-index:1;box-sizing:border-box;height:2px;background-color:#1890ff;-webkit-transform-origin:0 0;transform-origin:0 0}:host .lookup-tabs-nav .tabs-ink-bar-animated{-webkit-transition:width .3s cubic-bezier(.645,.045,.355,1),left .3s cubic-bezier(.71,.03,.35,1),-webkit-transform .3s cubic-bezier(.645,.045,.355,1);transition:transform .3s cubic-bezier(.645,.045,.355,1),width .3s cubic-bezier(.645,.045,.355,1),left .3s cubic-bezier(.71,.03,.35,1),-webkit-transform .3s cubic-bezier(.645,.045,.355,1)}:host .lookup-tabs-content{-webkit-box-flex:1;flex:1;border-top:1px solid #cecece;position:relative;top:-2px}"]
                }] }
    ];
    /** @nocollapse */
    LookupTabsComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    LookupTabsComponent.propDecorators = {
        enableFav: [{ type: Input }],
        activeTab: [{ type: Input }],
        visible: [{ type: Input }],
        layout: [{ type: Input }],
        dialogTitle: [{ type: Input }],
        tabChange: [{ type: Output }],
        inkBarRef: [{ type: ViewChild, args: ['inkBar',] }],
        dataListNavRef: [{ type: ViewChild, args: ['dataListNav',] }],
        favoriteNavRef: [{ type: ViewChild, args: ['favoriteNav',] }],
        selectedNavRef: [{ type: ViewChild, args: ['selectedNav',] }],
        advanceLayoutRef: [{ type: ViewChild, args: ['advanceLayout',] }]
    };
    return LookupTabsComponent;
}());
export { LookupTabsComponent };
if (false) {
    /** @type {?} */
    LookupTabsComponent.prototype.enableFav;
    /** @type {?} */
    LookupTabsComponent.prototype.activeTab;
    /** @type {?} */
    LookupTabsComponent.prototype.visible;
    /** @type {?} */
    LookupTabsComponent.prototype.layout;
    /** @type {?} */
    LookupTabsComponent.prototype.dialogTitle;
    /** @type {?} */
    LookupTabsComponent.prototype.tabChange;
    /** @type {?} */
    LookupTabsComponent.prototype.inkBarRef;
    /** @type {?} */
    LookupTabsComponent.prototype.dataListNavRef;
    /** @type {?} */
    LookupTabsComponent.prototype.favoriteNavRef;
    /** @type {?} */
    LookupTabsComponent.prototype.selectedNavRef;
    /** @type {?} */
    LookupTabsComponent.prototype.advanceLayoutRef;
    /** @type {?} */
    LookupTabsComponent.prototype.personalConfigService;
    /**
     * @type {?}
     * @private
     */
    LookupTabsComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    LookupTabsComponent.prototype.el;
    /** @type {?} */
    LookupTabsComponent.prototype.lookupIns;
    /** @type {?} */
    LookupTabsComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,