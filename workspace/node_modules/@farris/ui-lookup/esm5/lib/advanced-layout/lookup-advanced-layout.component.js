/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Component, ElementRef, Injector, Input, NgZone, Output, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';
import { DialogComponent } from '@farris/ui-dialog';
var LookupAdvancedLayoutComponent = /** @class */ (function () {
    function LookupAdvancedLayoutComponent(elRef, injector, zone, render2) {
        this.elRef = elRef;
        this.injector = injector;
        this.zone = zone;
        this.render2 = render2;
        this.title = '帮助选择器';
        this.activeTab = 'datalist';
        this.dataTab = '数据列表';
        this.favTab = '收藏夹';
        this.tabChanged = new EventEmitter();
        this.close = new EventEmitter();
        this.dialogRef = this.injector.get(DialogComponent, null);
    }
    /**
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.activeTab && !changes.activeTab.isFirstChange()) {
            this.setCurrentTab();
        }
    };
    /**
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.dialogRef) {
            this.dialogRef.dragHandle = this.headerRel.nativeElement;
        }
        this.setCurrentTab();
    };
    /**
     * @private
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.setCurrentTab = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.activetabRef) {
            this.render2.setStyle(this.activetabRef.nativeElement, 'transform', "translate3d(" + (this.activeTab == 'datalist' ? 0 : 84) + "px, 0px, 0px)");
        }
    };
    /**
     * @param {?} $event
     * @param {?} tabstr
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.changeTabs = /**
     * @param {?} $event
     * @param {?} tabstr
     * @return {?}
     */
    function ($event, tabstr) {
        this.activeTab = tabstr;
        this.setCurrentTab();
        this.tabChanged.emit({ tab: tabstr, $event: $event });
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.closeDialog = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (this.dialogRef) {
            $event.stopPropagation();
            this.dialogRef.close();
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    LookupAdvancedLayoutComponent.prototype.changeDialogSize = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if (this.dialogRef) {
            $event.stopPropagation();
            this.dialogRef.changeDialogSize();
        }
    };
    LookupAdvancedLayoutComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lookup-advanced-layout',
                    template: "<div class=\"d-flex justify-content-between header\" #header [style.cursor]=\"dialogRef.isMax ? 'default': 'move'\">\r\n    <div class=\"title\" style=\"max-width: calc(50% - 100px);text-overflow: ellipsis;overflow: hidden;z-index: 3;cursor: default;\" title=\"{{title}}\">{{title}}</div>\r\n\r\n    <div style=\"width: 100%;\" class=\"tabs\">\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div class=\"d-flex tabs-labels\" *ngIf=\"enableFav\"  (mousedown)=\"$event.stopPropagation()\">\r\n                <div class=\"active-tab\" #activetab></div>\r\n                <div class=\"tab-title d-flex\" [class.active]=\"activeTab === 'datalist'\" (click)=\"changeTabs($event, 'datalist')\" >\r\n                    {{dataTab }}\r\n                </div>\r\n                <div class=\"tab-title d-flex\" [class.active]=\"activeTab === 'favorite'\" (click)=\"changeTabs($event, 'favorite')\">\r\n                    {{favTab}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"close d-flex flex-row h-100\">\r\n        <span class=\"f-icon modal_maximize\" [class.modalrevert]=\"dialogRef.isMax\" (click)=\"changeDialogSize($event)\"></span>\r\n        <span class=\"f-icon modal_close\" (click)=\"closeDialog($event)\"></span>\r\n    </div>\r\n</div>",
                    // styleUrls: ['./advanced-layout.scss'],
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    LookupAdvancedLayoutComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Injector },
        { type: NgZone },
        { type: Renderer2 }
    ]; };
    LookupAdvancedLayoutComponent.propDecorators = {
        title: [{ type: Input }],
        activeTab: [{ type: Input }],
        enableFav: [{ type: Input }],
        dataTab: [{ type: Input }],
        favTab: [{ type: Input }],
        tabChanged: [{ type: Output }],
        close: [{ type: Output }],
        headerRel: [{ type: ViewChild, args: ['header',] }],
        activetabRef: [{ type: ViewChild, args: ['activetab',] }]
    };
    return LookupAdvancedLayoutComponent;
}());
export { LookupAdvancedLayoutComponent };
if (false) {
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.title;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.activeTab;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.enableFav;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.dataTab;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.favTab;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.tabChanged;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.close;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.headerRel;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.activetabRef;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.dialogRef;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    LookupAdvancedLayoutComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    LookupAdvancedLayoutComponent.prototype.zone;
    /**
     * @type {?}
     * @private
     */
    LookupAdvancedLayoutComponent.prototype.render2;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLWFkdmFuY2VkLWxheW91dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWxvb2t1cC8iLCJzb3VyY2VzIjpbImxpYi9hZHZhbmNlZC1sYXlvdXQvbG9va3VwLWFkdmFuY2VkLWxheW91dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQWlCLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQWdDLE1BQU0sRUFBRSxTQUFTLEVBQWlCLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxTSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFcEQ7SUF1QkksdUNBQW1CLEtBQWlCLEVBQVUsUUFBa0IsRUFBVSxJQUFZLEVBQVUsT0FBa0I7UUFBL0YsVUFBSyxHQUFMLEtBQUssQ0FBWTtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxTQUFJLEdBQUosSUFBSSxDQUFRO1FBQVUsWUFBTyxHQUFQLE9BQU8sQ0FBVztRQWR6RyxVQUFLLEdBQUcsT0FBTyxDQUFBO1FBQ2YsY0FBUyxHQUFHLFVBQVUsQ0FBQztRQUd2QixZQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ2pCLFdBQU0sR0FBRyxLQUFLLENBQUE7UUFFYixlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNoQyxVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQU9qQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7O0lBRUQsZ0RBQVE7OztJQUFSO0lBRUEsQ0FBQzs7OztJQUVELG1EQUFXOzs7SUFBWDtJQUVBLENBQUM7Ozs7O0lBRUQsbURBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQzlCLElBQUksT0FBTyxDQUFDLFNBQVMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFLEVBQUU7WUFDekQsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1NBQ3hCO0lBQ0wsQ0FBQzs7OztJQUVELHVEQUFlOzs7SUFBZjtRQUNJLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNoQixJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztTQUM1RDtRQUVELElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN6QixDQUFDOzs7OztJQUVPLHFEQUFhOzs7O0lBQXJCO1FBQ0ksSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ25CLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLFdBQVcsRUFBRSxrQkFBZSxJQUFJLENBQUMsU0FBUyxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxFQUFFLG1CQUFlLENBQUMsQ0FBQztTQUMzSTtJQUNMLENBQUM7Ozs7OztJQUVELGtEQUFVOzs7OztJQUFWLFVBQVcsTUFBTSxFQUFFLE1BQU07UUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUM7UUFDeEIsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLFFBQUEsRUFBRSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7Ozs7SUFFRCxtREFBVzs7OztJQUFYLFVBQVksTUFBTTtRQUNkLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNoQixNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUMxQjtJQUNMLENBQUM7Ozs7O0lBRUQsd0RBQWdCOzs7O0lBQWhCLFVBQWlCLE1BQWtCO1FBQy9CLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNoQixNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1NBQ3JDO0lBQ0wsQ0FBQzs7Z0JBekVKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyw2ekNBQW9EOztvQkFFcEQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3hDOzs7O2dCQVJnRCxVQUFVO2dCQUFFLFFBQVE7Z0JBQVMsTUFBTTtnQkFBd0MsU0FBUzs7O3dCQVloSSxLQUFLOzRCQUNMLEtBQUs7NEJBQ0wsS0FBSzswQkFFTCxLQUFLO3lCQUNMLEtBQUs7NkJBRUwsTUFBTTt3QkFDTixNQUFNOzRCQUVOLFNBQVMsU0FBQyxRQUFROytCQUNsQixTQUFTLFNBQUMsV0FBVzs7SUFzRDFCLG9DQUFDO0NBQUEsQUExRUQsSUEwRUM7U0FuRVksNkJBQTZCOzs7SUFFdEMsOENBQXdCOztJQUN4QixrREFBZ0M7O0lBQ2hDLGtEQUE0Qjs7SUFFNUIsZ0RBQTBCOztJQUMxQiwrQ0FBdUI7O0lBRXZCLG1EQUEwQzs7SUFDMUMsOENBQXFDOztJQUVyQyxrREFBMkM7O0lBQzNDLHFEQUFnRDs7SUFFaEQsa0RBQTJCOztJQUNmLDhDQUF3Qjs7Ozs7SUFBRSxpREFBMEI7Ozs7O0lBQUUsNkNBQW9COzs7OztJQUFFLGdEQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbmplY3RvciwgSW5wdXQsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0LCBSZW5kZXJlcjIsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2xvb2t1cC1hZHZhbmNlZC1sYXlvdXQnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICdsb29rdXAtYWR2YW5jZWQtbGF5b3V0LmNvbXBvbmVudC5odG1sJyxcclxuICAgIC8vIHN0eWxlVXJsczogWycuL2FkdmFuY2VkLWxheW91dC5zY3NzJ10sXHJcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgTG9va3VwQWR2YW5jZWRMYXlvdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0IHtcclxuXHJcbiAgICBASW5wdXQoKSB0aXRsZSA9ICfluK7liqnpgInmi6nlmagnXHJcbiAgICBASW5wdXQoKSBhY3RpdmVUYWIgPSAnZGF0YWxpc3QnO1xyXG4gICAgQElucHV0KCkgZW5hYmxlRmF2OiBib29sZWFuO1xyXG5cclxuICAgIEBJbnB1dCgpIGRhdGFUYWIgPSAn5pWw5o2u5YiX6KGoJztcclxuICAgIEBJbnB1dCgpIGZhdlRhYiA9ICfmlLbol4/lpLknXHJcblxyXG4gICAgQE91dHB1dCgpIHRhYkNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgY2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgQFZpZXdDaGlsZCgnaGVhZGVyJykgaGVhZGVyUmVsOiBFbGVtZW50UmVmO1xyXG4gICAgQFZpZXdDaGlsZCgnYWN0aXZldGFiJykgYWN0aXZldGFiUmVmOkVsZW1lbnRSZWY7XHJcblxyXG4gICAgZGlhbG9nUmVmOiBEaWFsb2dDb21wb25lbnQ7XHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxSZWY6IEVsZW1lbnRSZWYsIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBwcml2YXRlIHpvbmU6IE5nWm9uZSwgcHJpdmF0ZSByZW5kZXIyOiBSZW5kZXJlcjIpIHtcclxuICAgICAgICB0aGlzLmRpYWxvZ1JlZiA9IHRoaXMuaW5qZWN0b3IuZ2V0KERpYWxvZ0NvbXBvbmVudCwgbnVsbCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgICAgIGlmIChjaGFuZ2VzLmFjdGl2ZVRhYiAmJiAhY2hhbmdlcy5hY3RpdmVUYWIuaXNGaXJzdENoYW5nZSgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0Q3VycmVudFRhYigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuZGlhbG9nUmVmKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGlhbG9nUmVmLmRyYWdIYW5kbGUgPSB0aGlzLmhlYWRlclJlbC5uYXRpdmVFbGVtZW50O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zZXRDdXJyZW50VGFiKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXRDdXJyZW50VGFiKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZXRhYlJlZikge1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcjIuc2V0U3R5bGUodGhpcy5hY3RpdmV0YWJSZWYubmF0aXZlRWxlbWVudCwgJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUzZCgke3RoaXMuYWN0aXZlVGFiID09ICdkYXRhbGlzdCcgPyAwOiA4NH1weCwgMHB4LCAwcHgpYCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNoYW5nZVRhYnMoJGV2ZW50LCB0YWJzdHIpIHtcclxuICAgICAgICB0aGlzLmFjdGl2ZVRhYiA9IHRhYnN0cjtcclxuICAgICAgICB0aGlzLnNldEN1cnJlbnRUYWIoKTtcclxuICAgICAgICB0aGlzLnRhYkNoYW5nZWQuZW1pdCh7IHRhYjogdGFic3RyLCAkZXZlbnQgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2VEaWFsb2coJGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZGlhbG9nUmVmKSB7XHJcbiAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlRGlhbG9nU2l6ZSgkZXZlbnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgICAgICBpZiAodGhpcy5kaWFsb2dSZWYpIHtcclxuICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICB0aGlzLmRpYWxvZ1JlZi5jaGFuZ2VEaWFsb2dTaXplKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19