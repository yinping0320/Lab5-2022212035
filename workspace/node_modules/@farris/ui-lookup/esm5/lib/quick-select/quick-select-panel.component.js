/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, Injector, Input, Output, ViewChild } from '@angular/core';
var LookupQuickSelectPanelComponent = /** @class */ (function () {
    function LookupQuickSelectPanelComponent(injector, cdr) {
        this.injector = injector;
        this.cdr = cdr;
        this.showMore = true;
        this.data = [];
        this.textField = '';
        this.maxItems = 10;
        this.moreClcik = new EventEmitter();
        this.itemClick = new EventEmitter();
        this.activeIndex = -1;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.onClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
    };
    /**
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} items
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.loadData = /**
     * @param {?} items
     * @return {?}
     */
    function (items) {
        this.data = items;
        if (!this.cdr['destroyed']) {
            this.cdr.detectChanges();
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.onMoreClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
        this.moreClcik.emit($event);
    };
    /**
     * @param {?} rowObj
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.formatData = /**
     * @param {?} rowObj
     * @return {?}
     */
    function (rowObj) {
        return this.formatter(rowObj);
    };
    /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.onItemClick = /**
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    function ($event, item) {
        this.itemClick.emit({ data: item, evnet: $event });
    };
    /**
     * @param {?} index
     * @return {?}
     */
    LookupQuickSelectPanelComponent.prototype.setActiveItem = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.activeIndex = index;
        if (!this.cdr['destroyed']) {
            this.cdr.detectChanges();
        }
    };
    LookupQuickSelectPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lookup-quick-select-panel',
                    template: "<div class=\"d-flex flex-column\" style=\"width: 100%;height:100%;padding-top: 5px\" #itemsContainer>\r\n    <!-- <div class=\"header\"></div> -->\r\n    <div class=\"list f-utils-fill f-datalist\" style=\"overflow: auto;\">\r\n        <ul class=\"list-group list-group-flush p-0\"  [class.h-100]=\"!data || !data.length\">\r\n            <li class=\"list-group-item list-group-item-action\" [class.active]=\"activeIndex === i\" *ngFor=\"let item of data; index as i\" (click)=\"onItemClick($event, item)\">\r\n                <span *ngIf=\"!formatter\">{{ textField | getvalue: item }}</span> \r\n                <span *ngIf=\"formatter\" [innerHTML]=\"formatData(item) | safe:'html'\"></span>\r\n            </li>\r\n\r\n            <li class=\"norecord\" *ngIf=\"!data || !data.length\">\r\n                {{ 'lookup.quick.notfind'|locale }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"more\" *ngIf=\"showMore && data && data.length && data.length >= maxItems\">\r\n        <button class=\"btn btn-link\" (click)=\"onMoreClick($event)\"> {{ 'lookup.quick.more'|locale }}</button>\r\n    </div>\r\n     <!-- <div class=\"footer\"></div> -->\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    LookupQuickSelectPanelComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ChangeDetectorRef }
    ]; };
    LookupQuickSelectPanelComponent.propDecorators = {
        showMore: [{ type: Input }],
        data: [{ type: Input }],
        textField: [{ type: Input }],
        formatter: [{ type: Input }],
        maxItems: [{ type: Input }],
        moreClcik: [{ type: Output }],
        itemClick: [{ type: Output }],
        itemsContainer: [{ type: ViewChild, args: ['itemsContainer',] }],
        onClick: [{ type: HostListener, args: ['mousedown', ['$event'],] }]
    };
    return LookupQuickSelectPanelComponent;
}());
export { LookupQuickSelectPanelComponent };
if (false) {
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.showMore;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.data;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.textField;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.formatter;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.maxItems;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.moreClcik;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.itemClick;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.itemsContainer;
    /** @type {?} */
    LookupQuickSelectPanelComponent.prototype.activeIndex;
    /**
     * @type {?}
     * @private
     */
    LookupQuickSelectPanelComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    LookupQuickSelectPanelComponent.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpY2stc2VsZWN0LXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbG9va3VwLyIsInNvdXJjZXMiOlsibGliL3F1aWNrLXNlbGVjdC9xdWljay1zZWxlY3QtcGFuZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQWUsWUFBWSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5SjtJQW9CSSx5Q0FBb0IsUUFBa0IsRUFBVSxHQUFzQjtRQUFsRCxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQVUsUUFBRyxHQUFILEdBQUcsQ0FBbUI7UUFiN0QsYUFBUSxHQUFHLElBQUksQ0FBQztRQUNoQixTQUFJLEdBQWUsRUFBRSxDQUFDO1FBQ3RCLGNBQVMsR0FBVyxFQUFFLENBQUM7UUFFdkIsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUViLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9CLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBSXpDLGdCQUFXLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFeUQsQ0FBQzs7Ozs7SUFHM0UsaURBQU87Ozs7SUFEUCxVQUNRLE1BQWtCO1FBQ3RCLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7O0lBRUQsa0RBQVE7OztJQUFSLGNBQWEsQ0FBQzs7Ozs7SUFFZCxrREFBUTs7OztJQUFSLFVBQVMsS0FBVTtRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBRWxCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFO1lBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDNUI7SUFDTCxDQUFDOzs7OztJQUVELHFEQUFXOzs7O0lBQVgsVUFBWSxNQUFrQjtRQUMxQixNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7Ozs7SUFFRCxvREFBVTs7OztJQUFWLFVBQVcsTUFBVztRQUNsQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7Ozs7O0lBRUQscURBQVc7Ozs7O0lBQVgsVUFBWSxNQUFNLEVBQUUsSUFBSTtRQUNwQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBQyxDQUFDLENBQUM7SUFDckQsQ0FBQzs7Ozs7SUFFRCx1REFBYTs7OztJQUFiLFVBQWMsS0FBYTtRQUN2QixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxDQUFDO1NBQzVCO0lBQ0wsQ0FBQzs7Z0JBdkRKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyx5cUNBQWtEO2lCQUNyRDs7OztnQkFMMkYsUUFBUTtnQkFBM0YsaUJBQWlCOzs7MkJBU3JCLEtBQUs7dUJBQ0wsS0FBSzs0QkFDTCxLQUFLOzRCQUNMLEtBQUs7MkJBQ0wsS0FBSzs0QkFFTCxNQUFNOzRCQUNOLE1BQU07aUNBRU4sU0FBUyxTQUFDLGdCQUFnQjswQkFNMUIsWUFBWSxTQUFDLFdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQzs7SUFrQ3pDLHNDQUFDO0NBQUEsQUF4REQsSUF3REM7U0FuRFksK0JBQStCOzs7SUFFeEMsbURBQXlCOztJQUN6QiwrQ0FBK0I7O0lBQy9CLG9EQUFnQzs7SUFDaEMsb0RBQTRDOztJQUM1QyxtREFBdUI7O0lBRXZCLG9EQUF5Qzs7SUFDekMsb0RBQXlDOztJQUV6Qyx5REFBNkQ7O0lBRTdELHNEQUFpQjs7Ozs7SUFFTCxtREFBMEI7Ozs7O0lBQUUsOENBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyLCBJbmplY3RvciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdsb29rdXAtcXVpY2stc2VsZWN0LXBhbmVsJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9xdWljay1zZWxlY3QtcGFuZWwuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgTG9va3VwUXVpY2tTZWxlY3RQYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgQElucHV0KCkgc2hvd01vcmUgPSB0cnVlO1xyXG4gICAgQElucHV0KCkgZGF0YTogQXJyYXk8YW55PiA9IFtdO1xyXG4gICAgQElucHV0KCkgdGV4dEZpZWxkOiBzdHJpbmcgPSAnJztcclxuICAgIEBJbnB1dCgpIGZvcm1hdHRlcjogKHJvd09iajogYW55KSA9PiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBtYXhJdGVtcyA9IDEwO1xyXG5cclxuICAgIEBPdXRwdXQoKSBtb3JlQ2xjaWsgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgaXRlbUNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIEBWaWV3Q2hpbGQoJ2l0ZW1zQ29udGFpbmVyJykgaXRlbXNDb250YWluZXI6IEVsZW1lbnRSZWY8YW55PjtcclxuXHJcbiAgICBhY3RpdmVJbmRleCA9IC0xO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgfVxyXG5cclxuICAgIEBIb3N0TGlzdGVuZXIoJ21vdXNlZG93bicsIFsnJGV2ZW50J10pXHJcbiAgICBvbkNsaWNrKCRldmVudDogTW91c2VFdmVudCkge1xyXG4gICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHsgfVxyXG5cclxuICAgIGxvYWREYXRhKGl0ZW1zOiBhbnkpIHtcclxuICAgICAgICB0aGlzLmRhdGEgPSBpdGVtcztcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLmNkclsnZGVzdHJveWVkJ10pIHtcclxuICAgICAgICAgICAgdGhpcy5jZHIuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbk1vcmVDbGljaygkZXZlbnQ6IE1vdXNlRXZlbnQpIHtcclxuICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5tb3JlQ2xjaWsuZW1pdCgkZXZlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGZvcm1hdERhdGEocm93T2JqOiBhbnkpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXR0ZXIocm93T2JqKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkl0ZW1DbGljaygkZXZlbnQsIGl0ZW0pIHtcclxuICAgICAgICB0aGlzLml0ZW1DbGljay5lbWl0KHtkYXRhOiBpdGVtLCBldm5ldDogJGV2ZW50fSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0QWN0aXZlSXRlbShpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5hY3RpdmVJbmRleCA9IGluZGV4O1xyXG4gICAgICAgIGlmICghdGhpcy5jZHJbJ2Rlc3Ryb3llZCddKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2RyLmRldGVjdENoYW5nZXMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=