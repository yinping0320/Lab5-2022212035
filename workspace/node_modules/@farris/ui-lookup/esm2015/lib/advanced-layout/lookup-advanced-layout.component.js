/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Component, ElementRef, Injector, Input, NgZone, Output, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';
import { DialogComponent } from '@farris/ui-dialog';
export class LookupAdvancedLayoutComponent {
    /**
     * @param {?} elRef
     * @param {?} injector
     * @param {?} zone
     * @param {?} render2
     */
    constructor(elRef, injector, zone, render2) {
        this.elRef = elRef;
        this.injector = injector;
        this.zone = zone;
        this.render2 = render2;
        this.title = '帮助选择器';
        this.activeTab = 'datalist';
        this.dataTab = '数据列表';
        this.favTab = '收藏夹';
        this.tabChanged = new EventEmitter();
        this.close = new EventEmitter();
        this.dialogRef = this.injector.get(DialogComponent, null);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.activeTab && !changes.activeTab.isFirstChange()) {
            this.setCurrentTab();
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        if (this.dialogRef) {
            this.dialogRef.dragHandle = this.headerRel.nativeElement;
        }
        this.setCurrentTab();
    }
    /**
     * @private
     * @return {?}
     */
    setCurrentTab() {
        if (this.activetabRef) {
            this.render2.setStyle(this.activetabRef.nativeElement, 'transform', `translate3d(${this.activeTab == 'datalist' ? 0 : 84}px, 0px, 0px)`);
        }
    }
    /**
     * @param {?} $event
     * @param {?} tabstr
     * @return {?}
     */
    changeTabs($event, tabstr) {
        this.activeTab = tabstr;
        this.setCurrentTab();
        this.tabChanged.emit({ tab: tabstr, $event });
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    closeDialog($event) {
        if (this.dialogRef) {
            $event.stopPropagation();
            this.dialogRef.close();
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    changeDialogSize($event) {
        if (this.dialogRef) {
            $event.stopPropagation();
            this.dialogRef.changeDialogSize();
        }
    }
}
LookupAdvancedLayoutComponent.decorators = [
    { type: Component, args: [{
                selector: 'lookup-advanced-layout',
                template: "<div class=\"d-flex justify-content-between header\" #header [style.cursor]=\"dialogRef.isMax ? 'default': 'move'\">\r\n    <div class=\"title\" style=\"max-width: calc(50% - 100px);text-overflow: ellipsis;overflow: hidden;z-index: 3;cursor: default;\" title=\"{{title}}\">{{title}}</div>\r\n\r\n    <div style=\"width: 100%;\" class=\"tabs\">\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div class=\"d-flex tabs-labels\" *ngIf=\"enableFav\"  (mousedown)=\"$event.stopPropagation()\">\r\n                <div class=\"active-tab\" #activetab></div>\r\n                <div class=\"tab-title d-flex\" [class.active]=\"activeTab === 'datalist'\" (click)=\"changeTabs($event, 'datalist')\" >\r\n                    {{dataTab }}\r\n                </div>\r\n                <div class=\"tab-title d-flex\" [class.active]=\"activeTab === 'favorite'\" (click)=\"changeTabs($event, 'favorite')\">\r\n                    {{favTab}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"close d-flex flex-row h-100\">\r\n        <span class=\"f-icon modal_maximize\" [class.modalrevert]=\"dialogRef.isMax\" (click)=\"changeDialogSize($event)\"></span>\r\n        <span class=\"f-icon modal_close\" (click)=\"closeDialog($event)\"></span>\r\n    </div>\r\n</div>",
                // styleUrls: ['./advanced-layout.scss'],
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
LookupAdvancedLayoutComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Injector },
    { type: NgZone },
    { type: Renderer2 }
];
LookupAdvancedLayoutComponent.propDecorators = {
    title: [{ type: Input }],
    activeTab: [{ type: Input }],
    enableFav: [{ type: Input }],
    dataTab: [{ type: Input }],
    favTab: [{ type: Input }],
    tabChanged: [{ type: Output }],
    close: [{ type: Output }],
    headerRel: [{ type: ViewChild, args: ['header',] }],
    activetabRef: [{ type: ViewChild, args: ['activetab',] }]
};
if (false) {
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.title;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.activeTab;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.enableFav;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.dataTab;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.favTab;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.tabChanged;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.close;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.headerRel;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.activetabRef;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.dialogRef;
    /** @type {?} */
    LookupAdvancedLayoutComponent.prototype.elRef;
    /**
     * @type {?}
     * @private
     */
    LookupAdvancedLayoutComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    LookupAdvancedLayoutComponent.prototype.zone;
    /**
     * @type {?}
     * @private
     */
    LookupAdvancedLayoutComponent.prototype.render2;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLWFkdmFuY2VkLWxheW91dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWxvb2t1cC8iLCJzb3VyY2VzIjpbImxpYi9hZHZhbmNlZC1sYXlvdXQvbG9va3VwLWFkdmFuY2VkLWxheW91dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQWlCLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQWdDLE1BQU0sRUFBRSxTQUFTLEVBQWlCLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxTSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFTcEQsTUFBTSxPQUFPLDZCQUE2Qjs7Ozs7OztJQWdCdEMsWUFBbUIsS0FBaUIsRUFBVSxRQUFrQixFQUFVLElBQVksRUFBVSxPQUFrQjtRQUEvRixVQUFLLEdBQUwsS0FBSyxDQUFZO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLFNBQUksR0FBSixJQUFJLENBQVE7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFXO1FBZHpHLFVBQUssR0FBRyxPQUFPLENBQUE7UUFDZixjQUFTLEdBQUcsVUFBVSxDQUFDO1FBR3ZCLFlBQU8sR0FBRyxNQUFNLENBQUM7UUFDakIsV0FBTSxHQUFHLEtBQUssQ0FBQTtRQUViLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2hDLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBT2pDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzlELENBQUM7Ozs7SUFFRCxRQUFRO0lBRVIsQ0FBQzs7OztJQUVELFdBQVc7SUFFWCxDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUM5QixJQUFJLE9BQU8sQ0FBQyxTQUFTLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRSxFQUFFO1lBQ3pELElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztTQUN4QjtJQUNMLENBQUM7Ozs7SUFFRCxlQUFlO1FBQ1gsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDO1NBQzVEO1FBRUQsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3pCLENBQUM7Ozs7O0lBRU8sYUFBYTtRQUNqQixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUUsV0FBVyxFQUFFLGVBQWUsSUFBSSxDQUFDLFNBQVMsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsRUFBRSxlQUFlLENBQUMsQ0FBQztTQUMzSTtJQUNMLENBQUM7Ozs7OztJQUVELFVBQVUsQ0FBQyxNQUFNLEVBQUUsTUFBTTtRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQztRQUN4QixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsTUFBTTtRQUNkLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNoQixNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUMxQjtJQUNMLENBQUM7Ozs7O0lBRUQsZ0JBQWdCLENBQUMsTUFBa0I7UUFDL0IsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hCLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUN6QixJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixFQUFFLENBQUM7U0FDckM7SUFDTCxDQUFDOzs7WUF6RUosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLDZ6Q0FBb0Q7O2dCQUVwRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTthQUN4Qzs7OztZQVJnRCxVQUFVO1lBQUUsUUFBUTtZQUFTLE1BQU07WUFBd0MsU0FBUzs7O29CQVloSSxLQUFLO3dCQUNMLEtBQUs7d0JBQ0wsS0FBSztzQkFFTCxLQUFLO3FCQUNMLEtBQUs7eUJBRUwsTUFBTTtvQkFDTixNQUFNO3dCQUVOLFNBQVMsU0FBQyxRQUFROzJCQUNsQixTQUFTLFNBQUMsV0FBVzs7OztJQVh0Qiw4Q0FBd0I7O0lBQ3hCLGtEQUFnQzs7SUFDaEMsa0RBQTRCOztJQUU1QixnREFBMEI7O0lBQzFCLCtDQUF1Qjs7SUFFdkIsbURBQTBDOztJQUMxQyw4Q0FBcUM7O0lBRXJDLGtEQUEyQzs7SUFDM0MscURBQWdEOztJQUVoRCxrREFBMkI7O0lBQ2YsOENBQXdCOzs7OztJQUFFLGlEQUEwQjs7Ozs7SUFBRSw2Q0FBb0I7Ozs7O0lBQUUsZ0RBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBJbnB1dCwgTmdab25lLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXQsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcywgVmlld0NoaWxkLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEaWFsb2dDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnbG9va3VwLWFkdmFuY2VkLWxheW91dCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJ2xvb2t1cC1hZHZhbmNlZC1sYXlvdXQuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgLy8gc3R5bGVVcmxzOiBbJy4vYWR2YW5jZWQtbGF5b3V0LnNjc3MnXSxcclxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBMb29rdXBBZHZhbmNlZExheW91dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIEFmdGVyVmlld0luaXQge1xyXG5cclxuICAgIEBJbnB1dCgpIHRpdGxlID0gJ+W4ruWKqemAieaLqeWZqCdcclxuICAgIEBJbnB1dCgpIGFjdGl2ZVRhYiA9ICdkYXRhbGlzdCc7XHJcbiAgICBASW5wdXQoKSBlbmFibGVGYXY6IGJvb2xlYW47XHJcblxyXG4gICAgQElucHV0KCkgZGF0YVRhYiA9ICfmlbDmja7liJfooagnO1xyXG4gICAgQElucHV0KCkgZmF2VGFiID0gJ+aUtuiXj+WkuSdcclxuXHJcbiAgICBAT3V0cHV0KCkgdGFiQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBAVmlld0NoaWxkKCdoZWFkZXInKSBoZWFkZXJSZWw6IEVsZW1lbnRSZWY7XHJcbiAgICBAVmlld0NoaWxkKCdhY3RpdmV0YWInKSBhY3RpdmV0YWJSZWY6RWxlbWVudFJlZjtcclxuXHJcbiAgICBkaWFsb2dSZWY6IERpYWxvZ0NvbXBvbmVudDtcclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbFJlZjogRWxlbWVudFJlZiwgcHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgem9uZTogTmdab25lLCBwcml2YXRlIHJlbmRlcjI6IFJlbmRlcmVyMikge1xyXG4gICAgICAgIHRoaXMuZGlhbG9nUmVmID0gdGhpcy5pbmplY3Rvci5nZXQoRGlhbG9nQ29tcG9uZW50LCBudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXMuYWN0aXZlVGFiICYmICFjaGFuZ2VzLmFjdGl2ZVRhYi5pc0ZpcnN0Q2hhbmdlKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5zZXRDdXJyZW50VGFiKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5kaWFsb2dSZWYpIHtcclxuICAgICAgICAgICAgdGhpcy5kaWFsb2dSZWYuZHJhZ0hhbmRsZSA9IHRoaXMuaGVhZGVyUmVsLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNldEN1cnJlbnRUYWIoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNldEN1cnJlbnRUYWIoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYWN0aXZldGFiUmVmKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyMi5zZXRTdHlsZSh0aGlzLmFjdGl2ZXRhYlJlZi5uYXRpdmVFbGVtZW50LCAndHJhbnNmb3JtJywgYHRyYW5zbGF0ZTNkKCR7dGhpcy5hY3RpdmVUYWIgPT0gJ2RhdGFsaXN0JyA/IDA6IDg0fXB4LCAwcHgsIDBweClgKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlVGFicygkZXZlbnQsIHRhYnN0cikge1xyXG4gICAgICAgIHRoaXMuYWN0aXZlVGFiID0gdGFic3RyO1xyXG4gICAgICAgIHRoaXMuc2V0Q3VycmVudFRhYigpO1xyXG4gICAgICAgIHRoaXMudGFiQ2hhbmdlZC5lbWl0KHsgdGFiOiB0YWJzdHIsICRldmVudCB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZURpYWxvZygkZXZlbnQpIHtcclxuICAgICAgICBpZiAodGhpcy5kaWFsb2dSZWYpIHtcclxuICAgICAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjaGFuZ2VEaWFsb2dTaXplKCRldmVudDogTW91c2VFdmVudCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpYWxvZ1JlZikge1xyXG4gICAgICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZGlhbG9nUmVmLmNoYW5nZURpYWxvZ1NpemUoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=