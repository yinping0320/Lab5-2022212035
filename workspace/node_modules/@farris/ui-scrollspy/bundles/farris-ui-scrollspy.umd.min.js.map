{"version":3,"sources":["ng://@farris/ui-scrollspy/lib/farris-scrollspy.service.ts","ng://@farris/ui-scrollspy/lib/utils.ts","ng://@farris/ui-scrollspy/lib/farris-scrollspy.component.ts","ng://@farris/ui-scrollspy/lib/farris-scrollspy.directive.ts","ng://@farris/ui-scrollspy/lib/scrollspy.module.ts"],"names":["FarrisScrollSpyService","prototype","getCurrentSectionId","groupId","this","defaultId","currentSectionIdObj","subject","setCurrentSectionId","value","next","setCurrentSectionIdObj","_this","idValue","Subject","setTimeout","scrollFollowSpipes","length","item","find","scrollFollowItem","fScrollFollowClick","ngOnDestroy","scrollSubscription","unsubscribe","updateScrollGroup","scrollSpyId","scrollChange","findMinInToViewElement","eles","$scrollContainer","offset","minIndex","temp","scrollInfo","getBoundaryInfo","len","recordEles","result","findInView","k","push","id","top","element","offsetTop","height","offsetHeight","i","j","min","scrollTopRatio","boundary","elRatio","contentHeight","fixedHeight","realRatio","scrollHeight","maxRound","Math","ceil","minRound","scrollContainerPaddingTop","parseFloat","getComputedStyle","paddingTop","scrollTop","bottom","subscribeScroll","key","ngzone","runOutsideAngular","fromEvent","scrollContents","pipe","debounceTime","animationFrame","subscribe","scrollSpies","_a","currentSectionId","elements","subject_1","findMinInViewIds","offsets","topElementId_1","clickChange","run","subscribeClick","forEach","follow","throttleTime","event","stopPropagation","topElementInView","el","round","parseInt","addContentElement","contentId","updateContainerClsName","removeContentElement","removeId","addFollowElement","followId","followContentId","follows","removeFollowElement","filter","addElement","scrollId","scrollGroupId","currentSection","hasElement","updateScrollSpyActiveClsName","sort","a","b","getBoundingClientRect","removeElement","elementId","some","setOffset","setGroupId","groupid","getGroupId","changeGroupIdFollowType","followTypeData","scrollSpyListFollowTypeChanges","hasOwnProperty","containerEl","className","replace","fixedTabContainerClsName","parentElement","classList","remove","parentFixedTabContainerClsName","add","updateScrollSpiesActiveClsName","currentId","map","indexOf","scrollSpyPartActiveClsName","scrollEl","Injectable","args","providedIn","NgZone","getUuid","s","hexDigits","substr","floor","random","join","ScrollspyItemTemplateDirective","Directive","selector","TemplateRef","template","Object","defineProperty","ScrollspyComponent","_followType","_emitFollowType","prev","changeFollowType","_scrollspyData","visible","scrollSpy","ngOnInit","ngAfterViewInit","parent","elementRef","nativeElement","style","position","fFollowType","Component","encapsulation","ViewEncapsulation","None","ElementRef","ChangeDetectorRef","Input","ContentChild","read","ViewChild","changeDetector","ctx","sidetabWidth","FarrisScrollSpyDirective","FscrollFollowElementDirective","followGroupId","FscrollSpyContainerDirective","fScrollGroupId","fOffset","fScrollChange","emit","Output","HostBinding","EventEmitter","ScrollspyModule","NgModule","declarations","imports","CommonModule","AngularDraggableModule","LocaleModule","forRoot","FarrisCommonModule","providers","exports"],"mappings":"kxBAAA,IAAAA,GA2EEA,EAAAC,UAAAC,oBAAA,SAAoBC,GAIlB,OAFEA,EADGA,GACOC,KAAKC,UAEVD,KAAKE,oBAAoBH,GAASI,SAI3CP,EAAAC,UAAAO,oBAAA,SAAoBL,EAAiBM,GAEjCN,EADGA,GACOC,KAAKC,UAEjBD,KAAKE,oBAAoBH,GAASI,QAAQG,KAAKD,IAKjDT,EAAAC,UAAAU,uBAAA,SAAuBR,EAAiBM,GAAxC,IAAAG,EAAAR,KAEID,EADGA,GACOC,KAAKC,UAEZD,KAAKE,oBAAoBH,GAO5BC,KAAKE,oBAAoBH,GAASU,QAAUJ,EAN5CL,KAAKE,oBAAoBH,GAAQ,CAC/BI,QAAS,IAAIO,EAAAA,QACbD,QAASJ,GAMbM,WAAU,WACR,GAAGH,EAAKI,mBAAmBb,IAAYS,EAAKI,mBAAmBb,GAASc,OAAO,KACzEC,EAAON,EAAKI,mBAAmBb,GAASgB,KAAI,SAACC,GAC/C,OAAOA,EAAqB,IAAKR,EAAKN,oBAAoBH,GAASU,UAElEK,GACDN,EAAKS,mBAAmBlB,EAAQe,KAGnC,IAUElB,EAAAC,UAAAqB,YAAP,WACElB,KAAKmB,mBAAmBC,eAanBxB,EAAAC,UAAAwB,kBAAP,SAAyBC,QAAA,IAAAA,IAAAA,EAAsBtB,KAAKC,eAC5CF,EAA0B,KAAhBuB,EAAqBA,EAActB,KAAKC,UAIxD,OAHKD,KAAKuB,aAAaxB,KACrBC,KAAKuB,aAAaxB,GAAW,IAAIW,EAAAA,SAE5BV,KAAKuB,aAAaxB,IAEjBH,EAAAC,UAAA2B,uBAAR,SAA+BC,EAAMC,EAAiBC,GAUrD,QAIMC,EAAUC,EAZZC,EAAW9B,KAAK+B,gBAAiBL,EAAiBC,GAElDK,EAAMP,EAAKZ,OAEXoB,EAAa,GACbC,EAAO,GAEPC,GAAa,EACRC,EAAI,EAAGA,EAAIJ,EAAKI,IACvBH,EAAWI,KAAK,CAAEC,GAAIb,EAAKW,GAAGE,GAAIC,IAAKd,EAAKW,GAAGI,QAAQC,UAAWC,OAAQjB,EAAKW,GAAGI,QAAQG,eAI1F,IAAK,IAAIC,EAAI,EAAGA,EAAIZ,EAAM,EAAGY,IAAK,CAE9B,IAAK,IAAIC,GADTjB,EAAWgB,GACM,EAAGC,EAAIb,EAAKa,IACrBZ,EAAWY,GAAGN,IAAMN,EAAWL,GAAUW,MACzCX,EAAWiB,GAGnBhB,EAAOI,EAAWW,GAClBX,EAAWW,GAAKX,EAAWL,GAC3BK,EAAWL,GAAYC,EAE7B,GAAGC,EAAWS,IAAIT,EAAWgB,IAAI,KAEzBC,GAAgBjB,EAAWS,IAAIT,EAAWgB,KAAKhB,EAAWkB,SAG3DC,EAAQ,EACJ,IAAQb,EAAE,EAAEA,EAAEJ,EAAII,IAEtB,IAAGH,EAAWG,GAAGG,IAAIT,EAAWH,QAAQG,EAAWS,KAAKN,EAAWG,GAAGG,IAAIN,EAAWG,GAAGM,OAAOZ,EAAWH,OAAOG,EAAWS,OAC3HU,GAAShB,EAAWG,GAAQ,IAAEH,EAAWG,GAAW,QAAGN,EAAWoB,eAC9Df,GAAYY,GAAgBE,GAAQ,CACtCd,GAAW,EACXD,EAAOG,KAAKJ,EAAWG,GAAGE,IAC1B,MAIP,OAAkB,GAAfJ,EAAOrB,OAEF,CAACoB,EAAWD,EAAI,GAAGM,IAErB,CAACJ,EAAO,IAGf,IAAQE,EAAE,EAAEA,EAAEJ,EAAII,IAEf,GAAGH,EAAWG,GAAGG,IAAIT,EAAWH,QAAQG,EAAWS,KAAKN,EAAWG,GAAGG,IAAIN,EAAWG,GAAGM,OAAOZ,EAAWH,QAAQG,EAAWS,IAAI,CAC9HL,EAAOG,KAAKJ,EAAWG,GAAGE,IAC1B,MAGN,OAAkB,GAAfJ,EAAOrB,OAED,CAACoB,EAAW,GAAGK,IAEjB,CAACJ,EAAOA,EAAOrB,OAAO,KAG1BjB,EAAAC,UAAAkC,gBAAR,SAAwBL,EAAiBC,OACnCwB,EAAYzB,EAAiBiB,aAC7BS,GAAW1B,EAAiB2B,aAAaF,GAAcA,EACnDG,EAASC,KAAKC,KAAKJ,GACnBK,EAAoB,EAAXH,EAAS,EAAIA,EAAS,EAAE,EAErCI,EAA0BC,WAAWC,iBAAiBlC,EAAiB,MAAMmC,YAEjF,MAAQ,CACNlC,OAAOA,GAAc+B,EACrBnB,IAAIb,EAAiBoC,UACrBC,OAAOrC,EAAiBoC,UAAYX,EACpCA,YAAYA,EACZD,cAAcxB,EAAiB2B,aAC/BP,IAAIW,EAASN,EACbH,SAAStB,EAAiB2B,cAAuB,EAATI,GAAYN,IAIhDvD,EAAAC,UAAAmE,gBAAR,SAAwBC,GAAxB,IAAAzD,EAAAR,KACEA,KAAKkE,OAAOC,kBAAiB,WAC3B3D,EAAKW,mBAAqBiD,EAAAA,UAAU5D,EAAK6D,eAAeJ,GAAM,UAC3DK,KAAKC,EAAAA,aAAa,IAAKC,EAAAA,iBACvBC,UAAS,WACR,GAAIjE,EAAKkE,YAAYT,GAAM,CACnB,IAAAU,EAAAnE,EAAAkE,YAAAT,GAAEW,EAAAD,EAAAC,iBAAkBC,EAAAF,EAAAE,SAAUC,EAAAH,EAAAxE,QAC9B4E,EAAkBvE,EAAKgB,uBAAuBqD,EAASrE,EAAK6D,eAAeJ,GAAKzD,EAAKwE,QAAQf,IACnG,IAAKc,IAAqBA,EAAiBlE,OACzC,WAEIoE,EAAsBF,EAAiB,GAE7C,GAAIvE,EAAKkE,YAAYT,GAAKiB,YAExB,YADA1E,EAAKkE,YAAYT,GAAKiB,aAAc,GAIpC1E,EAAKkE,YAAYT,GAAKiB,aAAc,EAChCD,IAAiBL,IACnBpE,EAAKkE,YAAYT,GAAKW,iBAAmBK,EACzCzE,EAAK0D,OAAOiB,IAAG,WACbL,EAAQxE,KAAK2E,YAUrBrF,EAAAC,UAAAuF,eAAR,SAAuBnB,GAAvB,IAAAzD,EAAAR,KAEMA,KAAKY,mBAAmBqD,IAAQjE,KAAKY,mBAAmBqD,GAAKpD,QAC/Db,KAAKY,mBAAmBqD,GAAKoB,QAAO,SAAEC,GACpClB,EAAAA,UAAUkB,EAAO9C,QAAS,SACvB8B,KAAKiB,EAAAA,aAAa,MAClBd,UAAS,SAAEe,GACVA,EAAMC,kBACNjF,EAAKS,mBAAmBgD,EAAKqB,QAsBvC1F,EAAAC,UAAAoB,mBAAA,SAAmBgD,EAAKqB,GACtB,GAAGtF,KAAK0E,YAAYT,GAAK,CACjB,IAAAU,EAAA3E,KAAA0E,YAAAT,GAAEW,EAAAD,EAAAC,iBAAkBC,EAAAF,EAAAE,SAAU1E,EAAAwE,EAAAxE,QAEpC,GADAH,KAAK0E,YAAYT,GAAKiB,aAAc,EAChCI,EAAOhD,KAAOsC,EAAkB,KAC5Bc,EAAmBb,EAAS9D,KAAI,SAAC4E,GAAM,OAAAA,EAAGrD,KAAOgD,EAAOhD,KAC9D,IAAKoD,EAAoB,OACzB1F,KAAK0E,YAAYT,GAAKW,iBAAmBU,EAAOhD,GAE5CtC,KAAKqE,eAAeJ,KAEtBjE,KAAKqE,eAAeJ,GAAKH,UAAYP,KAAKqC,MAAMF,EAAiBlD,QAAQC,UAAYzC,KAAKgF,QAAQf,GAAM4B,SAASjC,iBAAiB5D,KAAKqE,eAAeJ,IAAMJ,WAAW,MAEzK1D,EAAQG,KAAKgF,EAAOhD,OAOnB1C,EAAAC,UAAAiG,kBAAP,SAAyBtD,EAAsBuD,QAAA,IAAAA,IAAAA,EAAY/F,KAAKC,WAC5C,KAAd8F,GACF/F,KAAKqE,eAAe0B,GAAavD,EACjCxC,KAAKgE,gBAAgB+B,KAGrB/F,KAAKqE,eAAerE,KAAKC,WAAauC,EACtCxC,KAAKgE,gBAAgBhE,KAAKC,YAG5BD,KAAKgG,uBAAuBD,IAGvBnG,EAAAC,UAAAoG,qBAAP,SAA4BF,QAAA,IAAAA,IAAAA,EAAY/F,KAAKC,eACrCiG,EAAyB,KAAdH,EAAmBA,EAAY/F,KAAKC,iBAC9CD,KAAK0E,YAAYwB,IAGnBtG,EAAAC,UAAAsG,iBAAP,SAAwB3D,EAAsB4D,EAAUC,QAAA,IAAAA,IAAAA,EAAkBrG,KAAKC,eACvEF,EAA8B,KAApBsG,EAAyBA,EAAkBrG,KAAKC,UAE1DqF,EAAS,CACb9C,QAASA,EACTF,GAAI8D,GAEDpG,KAAKY,mBAAmBb,KAC3BC,KAAKY,mBAAmBb,GAAW,QAG/BuG,EAAUtG,KAAKY,mBAAmBb,GACxCuG,EAAQjE,KAAKiD,GACbtF,KAAKY,mBAAmBb,GAAWuG,EACnCtG,KAAKoF,eAAerF,IAGfH,EAAAC,UAAA0G,oBAAP,SAA2BH,EAAUC,QAAA,IAAAA,IAAAA,EAAkBrG,KAAKC,eACpD4E,EAAW7E,KAAKY,mBAAmByF,GAAiBG,OAAM,SAACb,GAC/D,OAAOA,EAAGrD,KAAO8D,IAEdvB,EAAShE,OAIdb,KAAKY,mBAAmByF,GAAmBxB,SAHlC7E,KAAKY,mBAAmByF,IAM5BzG,EAAAC,UAAA4G,WAAP,SAAkBjE,EAAsBkE,EAAkBC,GAA1D,IAAAnG,EAAAR,KAiBE,QAjBwD,IAAA2G,IAAAA,EAAwB3G,KAAKC,WAChFD,KAAK0E,YAAYiC,KACpB3G,KAAK0E,YAAYiC,GAAc,CAC7B9B,SAAU,GACVD,iBAAkB,GAClBzE,QAAS,IAAIO,EAAAA,SAGfV,KAAK0E,YAAYiC,GAAexG,QAC7BsE,UAAS,SAAEmC,GACNpG,EAAKe,aAAaoF,IACpBnG,EAAKe,aAAaoF,GAAerG,KAAKsG,OAM1C5G,KAAK6G,WAAWH,EAAUC,GAA9B,KAIMhB,EAAoB,CACxBnD,QAASA,EACTF,GAAIoE,GAGN1G,KAAK8G,6BAA6BH,EAAchB,OAC1Cd,EAAkB7E,KAAK0E,YAAYiC,GAAe9B,SACxDA,EAASxC,KAAKsD,GACdd,EAASkC,KAAI,SAAEC,EAAGC,GAAc,OAAAA,EAAEzE,QAAQ0E,wBAAwB3E,IAAMyE,EAAExE,QAAQ0E,wBAAwB3E,MAE1GvC,KAAK0E,YAAYiC,GAAe9B,SAAWA,IAGtCjF,EAAAC,UAAAsH,cAAP,SAAqBT,EAAkBC,QAAA,IAAAA,IAAAA,EAAwB3G,KAAKC,eAC5D4E,EAAW7E,KAAK0E,YAAYiC,GAAe9B,SAAS2B,OAAM,SAAEb,GAChE,OAAOA,EAAGrD,KAAOoE,IAGd7B,EAAShE,OAIdb,KAAK0E,YAAYiC,GAAe9B,SAAWA,SAHlC7E,KAAK0E,YAAYiC,IAMpB/G,EAAAC,UAAAgH,WAAR,SAAmBO,EAAmBT,GACpC,OAAO3G,KAAK0E,YAAYiC,GAAe9B,SAASwC,KAAI,SAAE7E,GAAqB,OAAAA,EAAQF,KAAO8E,KAGrFxH,EAAAC,UAAAyH,UAAP,SAAiB3F,EAAoBoE,QAApB,IAAApE,IAAAA,EAAA,QAAoB,IAAAoE,IAAAA,EAAoB/F,KAAKC,WAC1C,KAAd8F,EACF/F,KAAKgF,QAAQe,GAAapE,EAG1B3B,KAAKgF,QAAQhF,KAAKC,WAAa0B,GAInC/B,EAAAC,UAAA0H,WAAA,SAAWC,GACLA,IACFxH,KAAKC,UAAYuH,IAIrB5H,EAAAC,UAAA4H,WAAA,WACE,OAAOzH,KAAKC,WAGdL,EAAAC,UAAA6H,wBAAA,SAAwBF,EAASG,GAC/B3H,KAAK4H,+BAA+BJ,GAAWG,EAC/C3H,KAAKgG,uBAAuBwB,IAEtB5H,EAAAC,UAAAmG,uBAAR,SAA+BwB,GAE7B,GAAKxH,KAAK4H,+BAA+BC,eAAeL,IAInDxH,KAAKqE,eAAewD,eAAeL,GAAxC,KAGIG,EAAiB3H,KAAK4H,+BAA+BJ,GACrDM,EAAc9H,KAAKqE,eAAemD,GAER,YAA1BG,EAAqB,MAEvBG,EAAYC,UAAYD,EAAYC,UAAUC,QAAQhI,KAAKiI,yBAA0B,IACrFH,EAAYI,cAAcC,UAAUC,OAAOpI,KAAKqI,iCACb,YAA1BV,EAAqB,OAE9BG,EAAYC,WAAa,IAAM/H,KAAKiI,yBAEpCH,EAAYI,cAAcC,UAAUG,IAAItI,KAAKqI,iCAE/CrI,KAAK4H,+BAA+BJ,GAAW,OAGjD5H,EAAAC,UAAA0I,+BAAA,SAA+BxI,EAAQyI,GAAvC,IAAAhI,EAAAR,KAEEA,KAAK0E,YAAY3E,GAAS8E,SAAS4D,IAAG,SAAE3H,GAClCA,EAAKwB,IAAMkG,EAET1H,EAAK0B,QAAQuF,UAAUW,QAAQlI,EAAKmI,4BAA8B,IACpE7H,EAAK0B,QAAQuF,WAAa,IAAMvH,EAAKmI,4BAIvC7H,EAAK0B,QAAQuF,UAAYjH,EAAK0B,QAAQuF,UAAUC,QAAQxH,EAAKmI,2BAA4B,OAStF/I,EAAAC,UAAAiH,6BAAT,SAAsC/G,EAAQ6I,GAEzC5I,KAAKE,oBAAoBH,IACvBC,KAAKE,oBAAoBH,GAAkB,SAAG6I,EAAStG,KACxDsG,EAASpG,QAAQuF,WAAW,IAAI/H,KAAK2I,iDA7a5CE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAjDkBC,EAAAA,oIA0H9B,SAAApJ,EAAmBsE,GAAAlE,KAAAkE,OAAAA,EArEXlE,KAAA2I,2BAA6B,0BAC7B3I,KAAAiI,yBAA2B,8BAC3BjI,KAAAqI,+BAA+B,qCAGvCrI,KAAAqE,eAAiC,GAEjCrE,KAAA0E,YAA2B,GAE3B1E,KAAAY,mBAAyC,GACjCZ,KAAA4H,+BAAiC,GAIzC5H,KAAAgF,QAAmB,GAEnBhF,KAAAC,UAAoB,UAIpBD,KAAAE,oBAAoC,GA8CpCF,KAAAuB,aAA6B,GCvH/B,SAAgB0H,IAGZ,QAFIC,EAAI,GACJC,EAAY,uCACPvG,EAAI,EAAGA,EAAI,GAAIA,IACtBsG,EAAEtG,GAAKuG,EAAUC,OAAO7F,KAAK8F,MAAsB,GAAhB9F,KAAK+F,UAAkB,GAM5D,OAJAJ,EAAE,IAAM,IACRA,EAAE,IAAMC,EAAUC,OAAgB,EAARF,EAAE,IAAa,EAAK,GAC9CA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAM,IACpBA,EAAEK,KAAK,ICTtB,IAAAC,uBAMCC,EAAAA,UAASX,KAAA,CAAC,CACPY,SAAU,+DAPsEC,EAAAA,eAWlFH,GADE,SAAAA,EAAmBI,GAAA5J,KAAA4J,SAAAA,SAqCnBC,OAAAC,eACIC,EAAAlK,UAAA,cAAW,KAUf,WACE,OAAOG,KAAKgK,iBAZd,SACgB3J,GACXA,IAAQL,KAAKgK,cACdhK,KAAKiK,gBAAgB,CACnBC,KAAKlK,KAAKgK,YACV1J,KAAKD,GAEPL,KAAKmK,mBACLnK,KAAKgK,YAAY3J,oCAarBwJ,OAAAC,eACIC,EAAAlK,UAAA,gBAAa,KAgBjB,WACE,OAAOG,KAAKoK,oBAlBd,SACkB/J,GACbA,IACDL,KAAKoK,eAAiB/J,EAAMmG,OAAM,SAAE1F,GAClC,QAAGA,EAAK+G,eAAe,aAAe/G,EAAKuJ,WAO1CrK,KAAKoK,gBAAkBpK,KAAKoK,eAAevJ,SAAWb,KAAK4E,mBAC5D5E,KAAK4E,iBAAmB5E,KAAKoK,eAAe,GAAG9H,IAEjDtC,KAAKsK,UAAU/J,uBAAuBP,KAAK2G,cAAe3G,KAAK4E,oDAUnEmF,EAAAlK,UAAA0K,SAAA,WAAA,IAAA/J,EAAAR,KAMEA,KAAKsK,UAAU/C,WAAWvH,KAAK2G,eAC/B3G,KAAKmK,mBAELnK,KAAKsK,UAAUxK,oBAAoBE,KAAK2G,eAAelC,UAAS,SAAE+D,GAChEhI,EAAKoE,iBAAmB4D,EACxBhI,EAAK8J,UAAU/B,+BAA+B/H,EAAKmG,cAAc6B,KAInExI,KAAKsK,UAAUjJ,kBAAkBrB,KAAK2G,eAAelC,UAAS,SAAEmC,GAE5DpG,EAAK8J,UAAUlK,oBAAoBI,EAAKmG,cAAcC,MAK5DmD,EAAAlK,UAAAsK,iBAAA,WACKnK,KAAK2G,eAAe3G,KAAKiK,kBAC1BjK,KAAKsK,UAAU5C,wBAAwB1H,KAAK2G,cAAc3G,KAAKiK,iBAC/DjK,KAAKiK,gBAAgB,OAGzBF,EAAAlK,UAAA2K,gBAAA,eAEUC,EAASzK,KAAK0K,WAAWC,cAAczC,cACzCuC,EAAOG,MAAMC,UAAsC,aAA1BJ,EAAOG,MAAMC,UAAgD,SAArB7K,KAAK8K,cACtEL,EAAOG,MAAMC,SAAW,iCApGnCE,EAAAA,UAASjC,KAAA,CAAC,CACTY,SAAU,mBACVE,SAAA,61FAIAoB,cAAeC,EAAAA,kBAAkBC,s9JA9BAC,EAAAA,kBAC1BvL,SADiHwL,EAAAA,kDAiCrHC,EAAAA,0CAEAA,EAAAA,iCACAC,EAAAA,aAAYxC,KAAA,CAACU,EAAgC,CAAC+B,KAAM5B,EAAAA,wCAIpD0B,EAAAA,6BAEAA,EAAAA,2BAKAA,EAAAA,4BAeAA,EAAAA,gCAEAG,EAAAA,UAAS1C,KAAA,CAAC,yCAIVuC,EAAAA,SAyELtB,GAnDI,SAAAA,EAAqBW,EAAgCJ,EAA0CmB,GAA1EzL,KAAA0K,WAAAA,EAAgC1K,KAAAsK,UAAAA,EAA0CtK,KAAAyL,eAAAA,EAzDtFzL,KAAA0L,IAAI,KASJ1L,KAAA2G,cAAuBsC,IAExBjJ,KAAAgK,YAAY,OAEZhK,KAAAiK,gBAAwC,KAgBvCjK,KAAA2L,aAAsB,IC3DnC,IAAAC,GAYWA,EAAA/L,UAAA0K,SAAP,WACEvK,KAAK0K,WAAWC,cAAc5C,WAAW,oBACrC/H,KAAK2G,gBACP3G,KAAK2G,cAAgB3G,KAAKsK,UAAU7C,eAIxCmE,EAAA/L,UAAA2K,gBAAA,WACExK,KAAKsK,UAAU7D,WAAWzG,KAAK0K,WAAWC,cAAe3K,KAAK0G,SAAS1G,KAAK2G,gBAGvEiF,EAAA/L,UAAAqB,YAAP,WACElB,KAAKsK,UAAUnD,cAAcnH,KAAK0G,SAAU1G,KAAK2G,oCAxBtD8C,EAAAA,UAASX,KAAA,CAAC,CACPY,SAAU,4DAJ+CyB,EAAAA,kBACpDvL,uCAMJyL,EAAAA,MAAKvC,KAAA,CAAC,qCACNuC,EAAAA,MAAKvC,KAAA,CAAC,mBAqBT8C,GAnBE,SAAAA,EACUlB,EACAJ,GADAtK,KAAA0K,WAAAA,EACA1K,KAAAsK,UAAAA,EAmBd,IAAAuB,GAaWA,EAAAhM,UAAA0K,SAAP,WACMvK,KAAK8L,gBACP9L,KAAK8L,cAAgB9L,KAAKsK,UAAU7C,cAEtCzH,KAAKsK,UAAUnE,iBAAiBnG,KAAK0K,WAAWC,cAAe3K,KAAKoG,SAAUpG,KAAK8L,gBAG9ED,EAAAhM,UAAAqB,YAAP,WACElB,KAAKsK,UAAU/D,oBAAoBvG,KAAKoG,SAAUpG,KAAK8L,oCArB5DrC,EAAAA,UAASX,KAAA,CAAC,CACPY,SAAU,sEAhC+CyB,EAAAA,kBACpDvL,uCAoCJyL,EAAAA,MAAKvC,KAAA,CAAC,+CACNuC,EAAAA,MAAKvC,KAAA,CAAC,qBAiBT+C,GAhBE,SAAAA,EACUnB,EACAJ,GADAtK,KAAA0K,WAAAA,EACA1K,KAAAsK,UAAAA,EAiBd,IAAAyB,GAiBWA,EAAAlM,UAAA0K,SAAP,WAAA,IAAA/J,EAAAR,KACMA,KAAKgM,iBACPhM,KAAKgM,eAAiBhM,KAAKsK,UAAU7C,cAEvCzH,KAAK0K,WAAWC,cAAc5C,WAAW,yBACzC/H,KAAKsK,UAAUxE,kBAAkB9F,KAAK0K,WAAWC,cAAe3K,KAAKgM,gBACrEhM,KAAKsK,UAAUhD,UAAUtH,KAAKiM,QAASjM,KAAKgM,gBAC5ChM,KAAKsK,UAAUjJ,kBAAkBrB,KAAKgM,gBAAgBvH,UAAS,SAAEmC,GAI7DpG,EAAK0L,cAAcC,KAAKvF,MAQ9BmF,EAAAlM,UAAA2K,gBAAA,aAQOuB,EAAAlM,UAAAqB,YAAP,WACElB,KAAKsK,UAAUrE,qBAAqBjG,KAAKgM,qCA7C9CvC,EAAAA,UAASX,KAAA,CAAC,CACPY,SAAU,qEA3D+CyB,EAAAA,kBACpDvL,SADkGwL,EAAAA,sDA+DxGC,EAAAA,8BACAA,EAAAA,MAAKvC,KAAA,CAAC,8CACNsD,EAAAA,yBAEAC,EAAAA,YAAWvD,KAAA,CAAC,qBAuCbiD,GArCE,SAAAA,EACUrB,EACAJ,EACAmB,GAFAzL,KAAA0K,WAAAA,EACA1K,KAAAsK,UAAAA,EACAtK,KAAAyL,eAAAA,EAPFzL,KAAAkM,cAAgB,IAAII,EAAAA,aAECtM,KAAA6K,SAAW,WCnE5C,IAAA0B,uBASCC,EAAAA,SAAQ1D,KAAA,CAAC,CACR2D,aAAc,CAAC1C,EAAmBP,EAA+BoC,EAAyBC,EAA8BE,GACxHW,QAAS,CACPC,EAAAA,aACAC,EAAAA,uBACAC,EAAAA,aAAaC,UACbC,EAAAA,oBAEFC,UAAU,CACRpN,GAEFqN,QAAS,CAAClD,EAAmBP,EAA+BoC,EAAyBC,EAA8BE,OAEtFQ,GAb/B,SAAAA","sourcesContent":["import { Injectable, OnDestroy, NgZone } from '@angular/core';\r\nimport { fromEvent, Subject, Observable, Subscription } from 'rxjs';\r\nimport { throttleTime, debounceTime } from 'rxjs/operators';\r\nimport { animationFrame } from 'rxjs/internal/scheduler/animationFrame';\r\n\r\ninterface ScrollElement {\r\n  element: HTMLElement,\r\n  id: string\r\n}\r\n\r\ninterface ScrollSpy {\r\n  elements: ScrollElement[];\r\n  currentSectionId: string;\r\n  subject: Subject<string>;\r\n  clickChange?: boolean //å¤æ­æ¯å¦æ¯ç¹å»å¯¼è´çé¡µé¢æ»å¨\r\n}\r\n\r\ninterface ScrollSpies {\r\n  [scrollSpyId: string]: ScrollSpy\r\n}\r\n\r\ninterface ScrollFollow {\r\n  element: HTMLElement,\r\n  id: string\r\n}\r\ninterface ScrollFollowSpipes {\r\n  [scrollFollowId: string]: ScrollFollow[]\r\n}\r\n\r\ninterface ScrollContents {\r\n  [scrollFollowId: string]: HTMLElement\r\n}\r\ninterface Offsets {\r\n  [scrollFollowId: string]: number\r\n}\r\n\r\ninterface ScrollChange {\r\n  [scrollFollowId: string]: Subject<any>\r\n}\r\n\r\ninterface CurrentId {\r\n  subject: Subject<string>;\r\n  idValue: string\r\n}\r\ninterface CurrentIdObj {\r\n  [groupId: string]: CurrentId\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FarrisScrollSpyService implements OnDestroy {\r\n  // çå¬åºåå½åæ¶åçæ ·å¼\r\n  private scrollSpyPartActiveClsName = 'f-scrollspy-part-active';\r\n  private fixedTabContainerClsName = 'f-scrollspy-container-fixed';\r\n  private parentFixedTabContainerClsName='f-scrollspy-container-fixed-parent';\r\n  private scrollSubscription: Subscription;\r\n  /**è¢«çå¬æ»å¨çcontents */\r\n  scrollContents: ScrollContents = {};\r\n  /**è¢«çå¬æ»å¨çsections*/\r\n  scrollSpies: ScrollSpies = {};\r\n  /**çå¬æ»å¨çéç¹é¨å */\r\n  scrollFollowSpipes: ScrollFollowSpipes = {};\r\n  private scrollSpyListFollowTypeChanges = {};\r\n\r\n\r\n  /**æ»å¨çå¬åç§»è·ç¦» */\r\n  offsets: Offsets = {};\r\n  /**é»è®¤çå¬åç»åç§° */\r\n  defaultId: string = 'default';\r\n\r\n  // currentSectionId: Subject<any> = new Subject();\r\n\r\n  currentSectionIdObj: CurrentIdObj = {};\r\n  //è·åcurrentid\r\n  getCurrentSectionId(groupId: string) {\r\n    if (!groupId) {\r\n      groupId = this.defaultId;\r\n    }\r\n    return this.currentSectionIdObj[groupId].subject;\r\n    // return this.currentSectionId;\r\n  }\r\n  //æ»å¨ååæ¶æ¹åcurrentid\r\n  setCurrentSectionId(groupId: string, value: string) {\r\n    if (!groupId) {\r\n      groupId = this.defaultId;\r\n    }\r\n    this.currentSectionIdObj[groupId].subject.next(value);\r\n    //console.log(this.currentSectionIdObj);\r\n    // this.currentSectionId.next(value);\r\n  }\r\n  //è®¾ç½®ä¸ågroupç»çcurrentid\r\n  setCurrentSectionIdObj(groupId: string, value: string) {\r\n    if (!groupId) {\r\n      groupId = this.defaultId;\r\n    }\r\n    if (!this.currentSectionIdObj[groupId]) {\r\n      this.currentSectionIdObj[groupId] = {\r\n        subject: new Subject(),\r\n        idValue: value\r\n      } as CurrentId;\r\n    }\r\n    else {\r\n      this.currentSectionIdObj[groupId].idValue = value;\r\n    }\r\n    setTimeout(() => {\r\n      if(this.scrollFollowSpipes[groupId] && this.scrollFollowSpipes[groupId].length){\r\n        let item = this.scrollFollowSpipes[groupId].find(scrollFollowItem=>{\r\n          return scrollFollowItem['id'] == this.currentSectionIdObj[groupId].idValue;\r\n        })\r\n        if(item){\r\n          this.fScrollFollowClick(groupId,item);\r\n        }\r\n      }\r\n    }, 0);\r\n    // this.fScrollFollowClick(key,follow);\r\n  }\r\n\r\n\r\n  scrollChange: ScrollChange = {};\r\n\r\n\r\n  constructor(public ngzone: NgZone) { }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.scrollSubscription.unsubscribe();\r\n  }\r\n\r\n  /**Observeré¨å ä¾æä»¤åå§åè°ç¨ */\r\n  // public getCurrentSection$(scrollSpyId: string = this.defaultId): Observable<string> {\r\n  //   if(scrollSpyId !== ''){\r\n  //     return this.scrollChange[scrollSpyId];\r\n  //   }\r\n  //   else{\r\n  //     return this.scrollChange[this.defaultId];\r\n  //   }\r\n  // }\r\n\r\n  public updateScrollGroup(scrollSpyId: string = this.defaultId) {\r\n    const groupId = scrollSpyId !== '' ? scrollSpyId : this.defaultId;\r\n    if (!this.scrollChange[groupId]) {\r\n      this.scrollChange[groupId] = new Subject();\r\n    }\r\n    return this.scrollChange[groupId];\r\n  }\r\n    private findMinInToViewElement(eles, $scrollContainer,offset){\r\n     // è·åä¿¡æ¯\r\n     let scrollInfo=this.getBoundaryInfo( $scrollContainer,offset);\r\n              \r\n     let len = eles.length;\r\n     // [{el:åç´ ,top:é¡¶,height:é«åº¦}]\r\n     let recordEles = [];\r\n     let result=[];\r\n     // å¤æ­æ¯å¦å¨è§å£\r\n     let findInView = false;\r\n     for (var k = 0; k < len; k++) {\r\n       recordEles.push({ id: eles[k].id, top: eles[k].element.offsetTop, height: eles[k].element.offsetHeight});\r\n      // recordEles[k]['ratio']=(recordEles[k]['top']+recordEles[k]['height'])/scrollInfo.contentHeight\r\n     }\r\n       var minIndex, temp;\r\n       for (var i = 0; i < len - 1; i++) {\r\n           minIndex = i;\r\n           for (var j = i + 1; j < len; j++) {\r\n               if (recordEles[j].top < recordEles[minIndex].top) {//å¯»æ¾æå°çæ°\r\n                   minIndex = j;  //å°æå°æ°çç´¢å¼ä¿å­\r\n               }\r\n           }\r\n           temp = recordEles[i];\r\n           recordEles[i] = recordEles[minIndex];\r\n           recordEles[minIndex] = temp;\r\n       }\r\n     if(scrollInfo.top>scrollInfo.min){\r\n         // scrollTop æ»å¨å°æåå©ä¸å¨çé¢ä¸çåç´ å¤ä¸ªåç´ ä¸è½æ ¹æ®offsetTopæ¥å¤æ­ï¼åºè¯¥æ¾ç¤ºåªä¸ªï¼æç§æ¯ä¾æ¥è®¡ç®\r\n         let scrollTopRatio=(scrollInfo.top-scrollInfo.min)/scrollInfo.boundary;\r\n                // å¤æ­topçä½ç½®\r\n        //let ratioReferHeight=scrollInfo.boundary+scrollInfo.fixedHeight;\r\n        let elRatio=0;\r\n                for(var k=0;k<len;k++){\r\n            //recordEles[k]['radio']=(recordEles[k]['top']+recordEles[k]['height']-scrollInfo.min)/ratioReferHeight;\r\n            if(recordEles[k].top-scrollInfo.offset>=scrollInfo.top||recordEles[k].top+recordEles[k].height-scrollInfo.offset>scrollInfo.top){\r\n             elRatio=(recordEles[k]['top']+recordEles[k]['height'])/scrollInfo.contentHeight;\r\n             if(!findInView&&scrollTopRatio<=elRatio){\r\n               findInView=true;\r\n               result.push(recordEles[k].id);\r\n               break;\r\n             }\r\n           }\r\n                }\r\n        if(result.length==0){\r\n         // æ²¡æ¾å°ï¼å°±è¿åæå¤§ç\r\n         return [recordEles[len-1].id];\r\n       }\r\n       return [result[0]]; \r\n     }else{\r\n       // é¡µé¢è¾é¿æ¶ï¼æç§scrollTopåoffsetTopæ¯è¾\r\n       for(var k=0;k<len;k++){\r\n         // å°äºç­äºï¼èèå°å®¹å¨æåä¸é´è·çæåµ\r\n          if(recordEles[k].top-scrollInfo.offset<=scrollInfo.top&&recordEles[k].top+recordEles[k].height-scrollInfo.offset>=scrollInfo.top){\r\n             result.push(recordEles[k].id);\r\n             break;\r\n         }\r\n       }\r\n       if(result.length==0){\r\n         // æ²¡æ¾å°ï¼å°±è¿åæå°ç\r\n         return [recordEles[0].id];\r\n       }       \r\n       return [result[result.length-1]]; \r\n     }                       \r\n    }\r\n  private getBoundaryInfo($scrollContainer,offset){\r\n    let fixedHeight=$scrollContainer.offsetHeight;\r\n    let realRatio=($scrollContainer.scrollHeight-fixedHeight )/fixedHeight;\r\n        let maxRound=Math.ceil(realRatio);\r\n        let minRound=maxRound-1>0?maxRound-1:0;\r\n    // // ä¸ä¸é´è·,æ­¤å¤å½±åæ¯ä¾çè®¡ç®ï¼è¯æ³å®¹å¨æåä¸é´è·ï¼åç´ çoffsetTopä¸å¯è½ä¸º0ï¼ä½æ¯å®¹å¨çscrollTopåå§ä¸º0\r\n    let scrollContainerPaddingTop=parseFloat(getComputedStyle($scrollContainer,null).paddingTop);\r\n    // let(element.currentStyle? element.currentStyle : window.getComputedStyle(element, null)).height);\r\n    return  {\r\n      offset:offset?offset:scrollContainerPaddingTop,\r\n      top:$scrollContainer.scrollTop,\r\n      bottom:$scrollContainer.scrollTop + fixedHeight,\r\n      fixedHeight:fixedHeight,\r\n      contentHeight:$scrollContainer.scrollHeight,\r\n      min:minRound*fixedHeight,\r\n      boundary:$scrollContainer.scrollHeight-(minRound+1)*fixedHeight\r\n    }// ä»¥offsetHeightä¸ºåº¦éï¼è®°å½offsetTopä¸è¶³ä¸ä¸ªé«åº¦çå·ä½é¿åº¦,\r\n  }\r\n  /**contenté¨åæ»å¨äºä»¶çå¬ */\r\n  private subscribeScroll(key: string): void {\r\n    this.ngzone.runOutsideAngular(() => {\r\n      this.scrollSubscription = fromEvent(this.scrollContents[key], 'scroll')\r\n        .pipe(debounceTime(100, animationFrame))\r\n        .subscribe((): void => {\r\n          if (this.scrollSpies[key]) {\r\n            const { currentSectionId, elements, subject } = this.scrollSpies[key];\r\n            const findMinInViewIds= this.findMinInToViewElement(elements,this.scrollContents[key],this.offsets[key]);          \r\n            if (!findMinInViewIds || !findMinInViewIds.length) {\r\n              return;\r\n            }\r\n            const topElementId: string =findMinInViewIds[0];\r\n            //å¤æ­ ç¹å»æ¯å¦æ¯ç¹å»å¼èµ·çæ»å¨\r\n            if (this.scrollSpies[key].clickChange) {\r\n              this.scrollSpies[key].clickChange = false;\r\n              return;\r\n            }\r\n            else {\r\n              this.scrollSpies[key].clickChange = false;\r\n              if (topElementId !== currentSectionId) {\r\n                this.scrollSpies[key].currentSectionId = topElementId;\r\n                this.ngzone.run(() => {\r\n                  subject.next(topElementId);\r\n                })\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n    });\r\n  }\r\n  /**tabé¨åç¹å»äºä»¶çå¬ */\r\n  private subscribeClick(key): void {\r\n    //Object.keys(this.scrollFollowSpipes).forEach((key:string):void=>{\r\n    if (this.scrollFollowSpipes[key] && this.scrollFollowSpipes[key].length) {\r\n      this.scrollFollowSpipes[key].forEach((follow) => {\r\n        fromEvent(follow.element, 'click')\r\n          .pipe(throttleTime(100))\r\n          .subscribe((event) => {\r\n            event.stopPropagation();\r\n            this.fScrollFollowClick(key, follow);\r\n            // if(this.scrollSpies[key]){\r\n\r\n            //   const { currentSectionId, elements, subject } = this.scrollSpies[key];\r\n            //   this.scrollSpies[key].clickChange = true;\r\n            //   if(follow.id !== currentSectionId){\r\n            //     const topElementInView = elements.find(el => el.id === follow.id);\r\n            //     if(!topElementInView) { return; }\r\n            //     this.scrollSpies[key].currentSectionId = follow.id;\r\n            //     //this.scrollContents[key].offsetTop\r\n            //     this.scrollContents[key].scrollTop = Math.round(topElementInView.element.offsetTop - this.offsets[key]);\r\n            //     subject.next(follow.id);\r\n            //   }\r\n\r\n            // }\r\n\r\n          })\r\n      })\r\n    }\r\n    //});\r\n  }\r\n\r\n  fScrollFollowClick(key, follow){\r\n    if(this.scrollSpies[key]){\r\n      const { currentSectionId, elements, subject } = this.scrollSpies[key];\r\n      this.scrollSpies[key].clickChange = true;\r\n      if (follow.id !== currentSectionId) {\r\n        const topElementInView = elements.find(el => el.id === follow.id);\r\n        if (!topElementInView) { return; }\r\n        this.scrollSpies[key].currentSectionId = follow.id;\r\n        //this.scrollContents[key].offsetTop\r\n        if (this.scrollContents[key]) {\r\n          // åå®¹å»ææ»å¨\r\n          this.scrollContents[key].scrollTop = Math.round(topElementInView.element.offsetTop - this.offsets[key]- parseInt(getComputedStyle(this.scrollContents[key]).paddingTop,10));\r\n        }\r\n        subject.next(follow.id);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /**æ·»å éè¦è¢«æ»å¨çå¬é¨å */\r\n  public addContentElement(element: HTMLElement, contentId = this.defaultId): void {\r\n    if (contentId !== '') {\r\n      this.scrollContents[contentId] = element;\r\n      this.subscribeScroll(contentId);\r\n    }\r\n    else {\r\n      this.scrollContents[this.defaultId] = element;\r\n      this.subscribeScroll(this.defaultId);\r\n    }\r\n    // å¤æ­æ¯æå¾æ¹åçç¶æ\r\n    this.updateContainerClsName(contentId);\r\n  }\r\n  /**ç§»é¤éè¦è¢«æ»å¨çå¬é¨ååç´  */\r\n  public removeContentElement(contentId = this.defaultId): void {\r\n    const removeId = contentId !== '' ? contentId : this.defaultId;\r\n    delete this.scrollSpies[removeId];\r\n  }\r\n  /**æ·»å æ»å¨çå¬tabé¨ååç´ */\r\n  public addFollowElement(element: HTMLElement, followId, followContentId = this.defaultId): void {\r\n    const groupId = followContentId !== '' ? followContentId : this.defaultId;\r\n\r\n    const follow = {\r\n      element: element,\r\n      id: followId\r\n    };\r\n    if (!this.scrollFollowSpipes[groupId]) {\r\n      this.scrollFollowSpipes[groupId] = []\r\n    }\r\n    //-------------------------æ­¤å¤æ²¡æå¤çéå¤ID\r\n    const follows = this.scrollFollowSpipes[groupId];\r\n    follows.push(follow);\r\n    this.scrollFollowSpipes[groupId] = follows;\r\n    this.subscribeClick(groupId);\r\n  }\r\n  /**ç§»é¤æ»å¨çå¬tabé¨ååç´  */\r\n  public removeFollowElement(followId, followContentId = this.defaultId): void {\r\n    const elements = this.scrollFollowSpipes[followContentId].filter(el => {\r\n      return el.id !== followId;\r\n    })\r\n    if (!elements.length) {\r\n      delete this.scrollFollowSpipes[followContentId];\r\n      return;\r\n    }\r\n    this.scrollFollowSpipes[followContentId] = elements;\r\n  }\r\n  /**æ·»å æ»å¨çå¬éç¹é¨ååç´  */\r\n  public addElement(element: HTMLElement, scrollId: string, scrollGroupId: string = this.defaultId): void {\r\n    if (!this.scrollSpies[scrollGroupId]) {\r\n      this.scrollSpies[scrollGroupId] = {\r\n        elements: [],\r\n        currentSectionId: '',\r\n        subject: new Subject(),\r\n      } as ScrollSpy;\r\n\r\n      this.scrollSpies[scrollGroupId].subject\r\n        .subscribe((currentSection: string): void => {\r\n          if (this.scrollChange[scrollGroupId]) {\r\n            this.scrollChange[scrollGroupId].next(currentSection);\r\n          }\r\n        });\r\n\r\n    }\r\n\r\n    if (this.hasElement(scrollId, scrollGroupId)) {\r\n      return;\r\n    }\r\n\r\n    const el: ScrollElement = {\r\n      element: element,\r\n      id: scrollId\r\n    }\r\n    // å å¥æ¶ï¼å¤æ­æ¯å¦æ¯å½å\r\n    this.updateScrollSpyActiveClsName(scrollGroupId,el);\r\n    const elements: any[] = this.scrollSpies[scrollGroupId].elements;\r\n    elements.push(el);\r\n    elements.sort((a, b): number => b.element.getBoundingClientRect().top - a.element.getBoundingClientRect().top);\r\n\r\n    this.scrollSpies[scrollGroupId].elements = elements;\r\n  }\r\n  /**ç§»é¤æ»å¨çå¬éç¹é¨ååç´  */\r\n  public removeElement(scrollId: string, scrollGroupId: string = this.defaultId): void {\r\n    const elements = this.scrollSpies[scrollGroupId].elements.filter((el): boolean => {\r\n      return el.id !== scrollId\r\n    }\r\n    );\r\n    if (!elements.length) {\r\n      delete this.scrollSpies[scrollGroupId];\r\n      return;\r\n    }\r\n    this.scrollSpies[scrollGroupId].elements = elements;\r\n  }\r\n  /**å¤æ­scrollGroupId æ¯å¦æidåä¸ºelementId çåç´  */\r\n  private hasElement(elementId: string, scrollGroupId: string): boolean {\r\n    return this.scrollSpies[scrollGroupId].elements.some((element): boolean => element.id === elementId);\r\n  }\r\n  /**è®¾ç½®offset */\r\n  public setOffset(offset: number = 0, contentId: string = this.defaultId): void {\r\n    if (contentId !== '') {\r\n      this.offsets[contentId] = offset;\r\n    }\r\n    else {\r\n      this.offsets[this.defaultId] = offset;\r\n    }\r\n  }\r\n  /*ScrollSpyç»ä»¶(éç¹åè¡¨åºåï¼åå§åé¢è®¾defaultId */\r\n  setGroupId(groupid) {\r\n    if (groupid) {\r\n      this.defaultId = groupid;\r\n    }\r\n  }\r\n\r\n  getGroupId() {\r\n    return this.defaultId;\r\n  }\r\n  /*æ¹å ScrollSpyç»ä»¶ï¼éç¹åè¡¨åºåï¼çæ¾ç¤ºç¶ææ¶ */\r\n  changeGroupIdFollowType(groupid, followTypeData) {\r\n    this.scrollSpyListFollowTypeChanges[groupid] = followTypeData;\r\n    this.updateContainerClsName(groupid);\r\n  }\r\n  private updateContainerClsName(groupid) {\r\n    // æ²¡æå¾æ´æ°åå\r\n    if (!this.scrollSpyListFollowTypeChanges.hasOwnProperty(groupid)) {\r\n      return;\r\n    }\r\n    // containerå¹¶ä¸å­å¨çæ¶å\r\n    if (!this.scrollContents.hasOwnProperty(groupid)) {\r\n      return;\r\n    }\r\n    let followTypeData = this.scrollSpyListFollowTypeChanges[groupid];\r\n    let containerEl = this.scrollContents[groupid];\r\n    // ContainerçElement \r\n    if (followTypeData['prev'] == 'fixedTab') {\r\n      //ç§»é¤class\r\n      containerEl.className = containerEl.className.replace(this.fixedTabContainerClsName, '');\r\n      containerEl.parentElement.classList.remove(this.parentFixedTabContainerClsName);\r\n    } else if (followTypeData['next'] == 'fixedTab') {\r\n      // å¢å class\r\n      containerEl.className += ' ' + this.fixedTabContainerClsName;\r\n      // ç»ç¶åç´ å¢å é«åº¦\r\n      containerEl.parentElement.classList.add(this.parentFixedTabContainerClsName);\r\n    }\r\n    this.scrollSpyListFollowTypeChanges[groupid] = null;\r\n  }\r\n\r\n  updateScrollSpiesActiveClsName(groupId,currentId) {\r\n    // è¿½å ãç§»é¤class\r\n    this.scrollSpies[groupId].elements.map((item: ScrollElement) => {\r\n      if (item.id == currentId) {\r\n        // æ¾å°å½å\r\n        if (item.element.className.indexOf(this.scrollSpyPartActiveClsName) < 0) {\r\n          item.element.className += ' ' + this.scrollSpyPartActiveClsName;\r\n        }\r\n      } else {\r\n        // å¶ä»\r\n        item.element.className = item.element.className.replace(this.scrollSpyPartActiveClsName, '');\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * å½è¿½å ScrollSpyåçæ¶åï¼å¤æ­æ¯å¦æ¯å·²ç»è®¾ç½®çå½å\r\n   * @param groupId \r\n   * @param scrollEl \r\n   */\r\n  private  updateScrollSpyActiveClsName(groupId,scrollEl:ScrollElement){\r\n    // å¦æå·²è®¾ç½®\r\n    if(this.currentSectionIdObj[groupId]){\r\n      if(this.currentSectionIdObj[groupId]['idValue']==scrollEl.id){\r\n        scrollEl.element.className+=' '+this.scrollSpyPartActiveClsName;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export function getUuid () {\r\n    var s = [];\r\n    var hexDigits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    for (var i = 0; i < 36; i++) {\r\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n    }\r\n    s[14] = \"4\";\r\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\r\n    s[8] = s[13] = s[18] = s[23] = \"-\";\r\n    let uuid = s.join(\"\");\r\n    return uuid;\r\n}","import { Component, OnInit, Input, ElementRef, AfterViewInit, OnDestroy, Directive, TemplateRef, ContentChild, ViewChild, ChangeDetectorRef, ViewEncapsulation} from '@angular/core';\r\nimport { FarrisScrollSpyService } from './farris-scrollspy.service';\r\nimport { Subject } from 'rxjs';\r\nimport { getUuid } from './utils';\r\nimport {ComponentTemplateRef}from '@farris/ui-common';\r\n\r\n@Directive({\r\n    selector: '[scrollspyItem]'\r\n  })\r\n  export class ScrollspyItemTemplateDirective {\r\n    constructor(public template: TemplateRef<any>) {}\r\n  }\r\n\r\nexport interface scrollspyData {\r\n    \"id\": string,\r\n    \"title\": string,\r\n    \"visible\"?: boolean\r\n  }\r\n// æ»å¨çå¬åè¡¨ï¼æ¾ç¤ºæ¨¡å¼æ¹åï¼æåºäºä»¶ç»æ\r\ninterface SpyListFollowTypeChange{\r\n  prev:string,\r\n  next:string\r\n}\r\n\r\n@Component({\r\n  selector: 'farris-scrollspy',\r\n  templateUrl:'./farris-scrollspy.component.html',\r\n  styleUrls:[\r\n    './farris-scrollspy.component.scss'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrollspyComponent implements OnInit,AfterViewInit {\r\n    @Input() ctx=null;\r\n    // æ»å¨çå¬é¡¹æ¨¡æ¿\r\n    @Input() scrollspyItemComponentType: ComponentTemplateRef;\r\n    @ContentChild(ScrollspyItemTemplateDirective, {read: TemplateRef}) scrollspyTemplate: TemplateRef<any>;\r\n    /**æ»å¨æ°æ®åè¡¨ */\r\n    // @Input() scrollspyData:scrollspyData[];\r\n    /**å½åactiveé¨åid */\r\n    @Input() currentSectionId:string;\r\n    /**å½åæ»å¨æægroup */\r\n    @Input() scrollGroupId:string = getUuid();\r\n    /**å½åæ»å¨æ¾ç¤ºæ ·å¼ï¼é»è®¤ side å¯éåæ° tabãfixedTab */\r\n    private _followType='side';\r\n    // è®°å½ç¶ææ¹å\r\n    private _emitFollowType:SpyListFollowTypeChange=null;\r\n    @Input() \r\n    set fFollowType(value:string){\r\n      if(value!==this._followType){\r\n        this._emitFollowType={\r\n          prev:this._followType,\r\n          next:value\r\n        };\r\n        this.changeFollowType();\r\n        this._followType=value;\r\n      }\r\n    }    \r\n    get fFollowType():string{\r\n      return this._followType;\r\n    }\r\n\r\n    @Input() sidetabWidth:number = 145;\r\n\r\n    @ViewChild(\"scrollyspyList\") scrollyspyListEl;\r\n\r\n    _scrollspyData:scrollspyData[];\r\n\r\n    @Input()\r\n    set scrollspyData(value){\r\n      if(value){\r\n        this._scrollspyData = value.filter((item) =>{\r\n          if(item.hasOwnProperty('visible') && !item.visible){\r\n            return false\r\n          }\r\n          else{\r\n            return true;\r\n          }\r\n        });\r\n        if(this._scrollspyData && this._scrollspyData.length && !this.currentSectionId ){\r\n          this.currentSectionId = this._scrollspyData[0].id;\r\n        }\r\n        this.scrollSpy.setCurrentSectionIdObj(this.scrollGroupId, this.currentSectionId);\r\n      }\r\n    }\r\n    get scrollspyData(){\r\n      return this._scrollspyData;\r\n    }\r\n\r\n\r\n    constructor( private elementRef: ElementRef, private scrollSpy: FarrisScrollSpyService,private changeDetector: ChangeDetectorRef, ) { }\r\n\r\n    ngOnInit() {\r\n      // if(this.scrollspyData && this.scrollspyData.length && !this.currentSectionId ){\r\n      //   this.currentSectionId = this.scrollspyData[0].id;\r\n      // }\r\n      // this.scrollSpy.setCurrentSectionIdObj(this.scrollGroupId, this.currentSectionId);\r\n      // console.log(this.scrollGroupId);\r\n      this.scrollSpy.setGroupId(this.scrollGroupId);\r\n      this.changeFollowType();\r\n      // è·åå½åSectionçId\r\n      this.scrollSpy.getCurrentSectionId(this.scrollGroupId).subscribe((currentId)=>{\r\n        this.currentSectionId = currentId;\r\n        this.scrollSpy.updateScrollSpiesActiveClsName(this.scrollGroupId,currentId);\r\n      });\r\n\r\n      // è·åå¯¹åºContaineråºåï¼å¨æ»å¨æ¶çå½åSectionçåå\r\n      this.scrollSpy.updateScrollGroup(this.scrollGroupId).subscribe((currentSection: string): void => {\r\n\r\n          this.scrollSpy.setCurrentSectionId(this.scrollGroupId,currentSection);\r\n          \r\n        });\r\n    }\r\n    // æ¹åFollowTypeæ¶\r\n    changeFollowType(){\r\n      if(this.scrollGroupId&&this._emitFollowType){\r\n        this.scrollSpy.changeGroupIdFollowType(this.scrollGroupId,this._emitFollowType);\r\n        this._emitFollowType=null;\r\n      }\r\n    }\r\n    ngAfterViewInit(): void {\r\n        /**å½æ»å¨ä½ç½®ä¸ºsideæ¶ï¼è¯¥ç»ä»¶æè¿ç¶èç¹æ·»å relativeå®ä½ */\r\n        const parent = this.elementRef.nativeElement.parentElement;\r\n        if(!parent.style.position && parent.style.position !== 'relative' && this.fFollowType === 'side'){\r\n            parent.style.position = 'relative';\r\n        }\r\n        // if(this.scrollspyData && this.scrollspyData.length && this.currentSectionId){\r\n        //   if(this.currentSectionId !== this.scrollspyData[0].id){\r\n        //     console.log(222);\r\n        //     const element = this.scrollyspyListEl.nativeElement.querySelector(\"#scrollspy-\"+this.currentSectionId);\r\n        //     const follow = {\r\n        //       element: element,\r\n        //       id: this.currentSectionId\r\n        //     };\r\n        //     const groupId = this.scrollGroupId ? this.scrollGroupId: 'default';\r\n        //     this.scrollSpy.fScrollFollowClick(groupId,follow);\r\n        //   }\r\n        // }\r\n        \r\n    }\r\n\r\n}","import { Directive, Injectable, Input, EventEmitter, Output, ElementRef, OnInit, OnDestroy, AfterViewInit, ChangeDetectorRef, HostBinding } from '@angular/core';\r\nimport { FarrisScrollSpyService } from './farris-scrollspy.service';\r\n//éç¹é¨å\r\n@Directive({\r\n    selector: '[fScrollSpy]'\r\n})\r\nexport class FarrisScrollSpyDirective implements OnInit,AfterViewInit, OnDestroy {\r\n    @Input('fScrollSpy') scrollId: string;\r\n    @Input('fScrollGroup') scrollGroupId: string;\r\n  \r\n    constructor(\r\n      private elementRef: ElementRef,\r\n      private scrollSpy: FarrisScrollSpyService,\r\n    ) {}\r\n  \r\n    public ngOnInit(): void {\r\n      this.elementRef.nativeElement.className+=' f-scrollspy-part';\r\n      if(!this.scrollGroupId){\r\n        this.scrollGroupId = this.scrollSpy.getGroupId();\r\n      }\r\n      //this.scrollSpy.addElement(this.elementRef.nativeElement, this.scrollId,this.scrollGroupId);\r\n    }\r\n    ngAfterViewInit(){\r\n      this.scrollSpy.addElement(this.elementRef.nativeElement, this.scrollId,this.scrollGroupId);\r\n    }\r\n  \r\n    public ngOnDestroy(): void {\r\n      this.scrollSpy.removeElement(this.scrollId, this.scrollGroupId);\r\n    }\r\n  }\r\n//è·éç¹å»\r\n@Directive({\r\n    selector: '[fScrollFollowElement]'\r\n})\r\nexport class FscrollFollowElementDirective implements OnInit, OnDestroy {\r\n\r\n    //@Input() followId: string;\r\n    @Input('fScrollFollowElement') followId:string;\r\n    @Input('fScrollElement') followGroupId:string;\r\n    constructor(\r\n      private elementRef: ElementRef,\r\n      private scrollSpy: FarrisScrollSpyService,\r\n    ) {}\r\n  \r\n    public ngOnInit(): void {\r\n      if(!this.followGroupId){\r\n        this.followGroupId = this.scrollSpy.getGroupId();\r\n      }\r\n      this.scrollSpy.addFollowElement(this.elementRef.nativeElement, this.followId, this.followGroupId);\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n      this.scrollSpy.removeFollowElement(this.followId, this.followGroupId);\r\n    }\r\n\r\n  }\r\n\r\n//çå¬æ»å¨é¨åcontent\r\n@Directive({\r\n    selector: '[fScrollSpyContainer]'\r\n})\r\nexport class FscrollSpyContainerDirective implements OnInit,AfterViewInit, OnDestroy {\r\n  \r\n  @Input() fOffset:number;\r\n  @Input('fScrollSpyContainer') fScrollGroupId:string;\r\n  @Output() fScrollChange = new EventEmitter;\r\n\r\n  @HostBinding(\"style.position\") position = \"relative\";\r\n\r\n    constructor( \r\n      private elementRef: ElementRef,\r\n      private scrollSpy: FarrisScrollSpyService,\r\n      private changeDetector: ChangeDetectorRef,\r\n    ) {}\r\n  \r\n    public ngOnInit(): void {\r\n      if(!this.fScrollGroupId){\r\n        this.fScrollGroupId = this.scrollSpy.getGroupId();\r\n      }\r\n      this.elementRef.nativeElement.className+=' f-scrollspy-container';\r\n      this.scrollSpy.addContentElement(this.elementRef.nativeElement, this.fScrollGroupId);\r\n      this.scrollSpy.setOffset(this.fOffset, this.fScrollGroupId);\r\n      this.scrollSpy.updateScrollGroup(this.fScrollGroupId).subscribe((currentSection: string): void => {\r\n        //console.log('111',currentSection);\r\n        // bugNum:465991\r\n        // console.log('section-group'+currentSection);\r\n          this.fScrollChange.emit(currentSection);\r\n\r\n          // this.scrollSpy.setCurrentSectionId(this.fScrollGroupId,currentSection);\r\n\r\n          // this.changeDetector.markForCheck();\r\n        });\r\n    }\r\n  \r\n    ngAfterViewInit(){\r\n      // this.scrollSpy.getCurrentSection$(this.fScrollGroupId)\r\n      // .subscribe((currentSection: string): void => {\r\n      //   this.fScrollChange.next(currentSection);\r\n      //   this.changeDetector.markForCheck();\r\n      // });\r\n\r\n    }\r\n    public ngOnDestroy(): void {\r\n      this.scrollSpy.removeContentElement(this.fScrollGroupId);\r\n    }\r\n\r\n  }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FarrisScrollSpyDirective, FscrollFollowElementDirective, FscrollSpyContainerDirective } from './farris-scrollspy.directive';\r\nimport { ScrollspyComponent,ScrollspyItemTemplateDirective } from './farris-scrollspy.component';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { FarrisScrollSpyService } from './farris-scrollspy.service';\r\nimport {FarrisCommonModule} from '@farris/ui-common';\r\n\r\n@NgModule({\r\n  declarations: [ScrollspyComponent,ScrollspyItemTemplateDirective,FarrisScrollSpyDirective,FscrollFollowElementDirective,FscrollSpyContainerDirective],\r\n  imports: [\r\n    CommonModule,\r\n    AngularDraggableModule,\r\n    LocaleModule.forRoot(),\r\n    FarrisCommonModule\r\n  ],\r\n  providers:[\r\n    FarrisScrollSpyService\r\n  ],\r\n  exports: [ScrollspyComponent,ScrollspyItemTemplateDirective,FarrisScrollSpyDirective,FscrollFollowElementDirective,FscrollSpyContainerDirective]\r\n})\r\nexport class ScrollspyModule { }\r\n"]}