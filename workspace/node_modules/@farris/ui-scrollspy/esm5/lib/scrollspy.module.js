/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FarrisScrollSpyDirective, FscrollFollowElementDirective, FscrollSpyContainerDirective } from './farris-scrollspy.directive';
import { ScrollspyComponent, ScrollspyItemTemplateDirective } from './farris-scrollspy.component';
import { LocaleModule } from '@farris/ui-locale';
import { AngularDraggableModule } from '@farris/ui-draggable';
import { FarrisScrollSpyService } from './farris-scrollspy.service';
import { FarrisCommonModule } from '@farris/ui-common';
var ScrollspyModule = /** @class */ (function () {
    function ScrollspyModule() {
    }
    ScrollspyModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [ScrollspyComponent, ScrollspyItemTemplateDirective, FarrisScrollSpyDirective, FscrollFollowElementDirective, FscrollSpyContainerDirective],
                    imports: [
                        CommonModule,
                        AngularDraggableModule,
                        LocaleModule.forRoot(),
                        FarrisCommonModule
                    ],
                    providers: [
                        FarrisScrollSpyService
                    ],
                    exports: [ScrollspyComponent, ScrollspyItemTemplateDirective, FarrisScrollSpyDirective, FscrollFollowElementDirective, FscrollSpyContainerDirective]
                },] }
    ];
    return ScrollspyModule;
}());
export { ScrollspyModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsc3B5Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktc2Nyb2xsc3B5LyIsInNvdXJjZXMiOlsibGliL3Njcm9sbHNweS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSw2QkFBNkIsRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3JJLE9BQU8sRUFBRSxrQkFBa0IsRUFBQyw4QkFBOEIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2pHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUVyRDtJQUFBO0lBYStCLENBQUM7O2dCQWIvQixRQUFRLFNBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsa0JBQWtCLEVBQUMsOEJBQThCLEVBQUMsd0JBQXdCLEVBQUMsNkJBQTZCLEVBQUMsNEJBQTRCLENBQUM7b0JBQ3JKLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLHNCQUFzQjt3QkFDdEIsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsa0JBQWtCO3FCQUNuQjtvQkFDRCxTQUFTLEVBQUM7d0JBQ1Isc0JBQXNCO3FCQUN2QjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsRUFBQyw4QkFBOEIsRUFBQyx3QkFBd0IsRUFBQyw2QkFBNkIsRUFBQyw0QkFBNEIsQ0FBQztpQkFDako7O0lBQzhCLHNCQUFDO0NBQUEsQUFiaEMsSUFhZ0M7U0FBbkIsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZhcnJpc1Njcm9sbFNweURpcmVjdGl2ZSwgRnNjcm9sbEZvbGxvd0VsZW1lbnREaXJlY3RpdmUsIEZzY3JvbGxTcHlDb250YWluZXJEaXJlY3RpdmUgfSBmcm9tICcuL2ZhcnJpcy1zY3JvbGxzcHkuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgU2Nyb2xsc3B5Q29tcG9uZW50LFNjcm9sbHNweUl0ZW1UZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vZmFycmlzLXNjcm9sbHNweS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IEFuZ3VsYXJEcmFnZ2FibGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRyYWdnYWJsZSc7XHJcbmltcG9ydCB7IEZhcnJpc1Njcm9sbFNweVNlcnZpY2UgfSBmcm9tICcuL2ZhcnJpcy1zY3JvbGxzcHkuc2VydmljZSc7XHJcbmltcG9ydCB7RmFycmlzQ29tbW9uTW9kdWxlfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1Njcm9sbHNweUNvbXBvbmVudCxTY3JvbGxzcHlJdGVtVGVtcGxhdGVEaXJlY3RpdmUsRmFycmlzU2Nyb2xsU3B5RGlyZWN0aXZlLEZzY3JvbGxGb2xsb3dFbGVtZW50RGlyZWN0aXZlLEZzY3JvbGxTcHlDb250YWluZXJEaXJlY3RpdmVdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEFuZ3VsYXJEcmFnZ2FibGVNb2R1bGUsXHJcbiAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgRmFycmlzQ29tbW9uTW9kdWxlXHJcbiAgXSxcclxuICBwcm92aWRlcnM6W1xyXG4gICAgRmFycmlzU2Nyb2xsU3B5U2VydmljZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1Njcm9sbHNweUNvbXBvbmVudCxTY3JvbGxzcHlJdGVtVGVtcGxhdGVEaXJlY3RpdmUsRmFycmlzU2Nyb2xsU3B5RGlyZWN0aXZlLEZzY3JvbGxGb2xsb3dFbGVtZW50RGlyZWN0aXZlLEZzY3JvbGxTcHlDb250YWluZXJEaXJlY3RpdmVdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTY3JvbGxzcHlNb2R1bGUgeyB9XHJcbiJdfQ==