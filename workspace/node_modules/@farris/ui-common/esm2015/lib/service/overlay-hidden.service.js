/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from "@angular/core";
/**
 * @record
 */
export function OverLayOption() { }
if (false) {
    /**
     * 仅监听top Window 中的事件
     * @type {?|undefined}
     */
    OverLayOption.prototype.onlyTopWindow;
    /**
     * 仅处理滚轮滚动事件
     * @type {?|undefined}
     */
    OverLayOption.prototype.mouseWheel;
    /** @type {?|undefined} */
    OverLayOption.prototype.mouseDown;
    /** @type {?|undefined} */
    OverLayOption.prototype.scroll;
    /** @type {?|undefined} */
    OverLayOption.prototype.mouseUp;
    /** @type {?|undefined} */
    OverLayOption.prototype.click;
}
/** @type {?} */
const OverLayOptionDefaults = {
    onlyTopWindow: false,
    mouseWheel: true,
    mouseDown: true,
    scroll: false,
    mouseUp: false,
    click: false
};
export class OverLayHiddenService {
    constructor() {
        this.eventsMap = new WeakMap();
    }
    /**
     * @private
     * @param {?} el
     * @param {?} action
     * @return {?}
     */
    iframeEventHandle(el, action) {
        /** @type {?} */
        const iframes = Array.from(document.querySelectorAll('iframe'));
        if (iframes && iframes.length) {
            /** @type {?} */
            let _documentClickEvent = this.eventsMap.get(el);
            for (const iframe of iframes) {
                /** @type {?} */
                const iframeDoc = iframe.contentDocument;
                if (iframeDoc) {
                    iframeDoc[action]('mousedown', _documentClickEvent);
                    iframeDoc[action]('mousewheel', _documentClickEvent);
                    iframeDoc[action]('DOMMouseScroll', _documentClickEvent);
                }
            }
        }
    }
    /**
     * @private
     * @param {?} el
     * @return {?}
     */
    removeMouseEvent(el) {
        /** @type {?} */
        let _documentClickEvent = this.eventsMap.get(el);
        if (_documentClickEvent) {
            document.removeEventListener('mousedown', _documentClickEvent, true);
            document.removeEventListener('mousewheel', _documentClickEvent, true);
            document.removeEventListener('DOMMouseScroll', _documentClickEvent, true);
            if (top !== window) {
                top.document.body.removeEventListener('mousedown', _documentClickEvent, true);
            }
            this.iframeEventHandle(el, 'removeEventListener');
            _documentClickEvent = null;
            this.eventsMap.delete(el);
        }
    }
    /**
     * @param {?} el
     * @return {?}
     */
    destory(el) {
        this.removeMouseEvent(el);
    }
    /**
     * @param {?} el
     * @param {?} _documentClickEvent
     * @param {?=} options
     * @return {?}
     */
    registerMouseEvent(el, _documentClickEvent, options) {
        // const _documentClickEvent1 = (e) => {
        //     if (e && e.target && e.target.nodeName.toLowerCase() == 'svg') {
        //         return;
        //     }
        //     _documentClickEvent(e);
        // }
        if (this.eventsMap.has(el)) {
            return;
        }
        else {
            this.eventsMap.set(el, _documentClickEvent);
        }
        if (!options) {
            options = OverLayOptionDefaults;
        }
        else {
            options = Object.assign({}, OverLayOptionDefaults, options);
        }
        if (options.onlyTopWindow && top !== window) {
            top.document.body.addEventListener('mousedown', _documentClickEvent, true);
        }
        else {
            if (options.mouseDown) {
                // 注册 mousedown 事件 隐藏panel
                document.addEventListener('mousedown', _documentClickEvent, true);
            }
            if (options.mouseWheel) {
                document.addEventListener('mousewheel', _documentClickEvent, true);
                document.addEventListener('DOMMouseScroll', _documentClickEvent, true);
            }
            if (options.scroll) {
                document.addEventListener('scroll', _documentClickEvent, true);
            }
            if (options.mouseUp) {
                document.addEventListener('mouseup', _documentClickEvent);
            }
            if (options.click) {
                document.addEventListener('click', _documentClickEvent);
            }
            if (top !== window) {
                top.document.body.addEventListener('mousedown', _documentClickEvent, true);
            }
            this.iframeEventHandle(el, 'addEventListener');
        }
        return (/**
         * @return {?}
         */
        () => {
            this.destory(el);
        });
    }
}
OverLayHiddenService.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    OverLayHiddenService.prototype.eventsMap;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS1oaWRkZW4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktY29tbW9uLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2Uvb3ZlcmxheS1oaWRkZW4uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUczQyxtQ0FTQzs7Ozs7O0lBUEcsc0NBQXdCOzs7OztJQUV4QixtQ0FBcUI7O0lBQ3JCLGtDQUFvQjs7SUFDcEIsK0JBQWlCOztJQUNqQixnQ0FBa0I7O0lBQ2xCLDhCQUFnQjs7O01BR2QscUJBQXFCLEdBQWtCO0lBQ3pDLGFBQWEsRUFBRSxLQUFLO0lBQ3BCLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFNBQVMsRUFBRSxJQUFJO0lBQ2YsTUFBTSxFQUFFLEtBQUs7SUFDYixPQUFPLEVBQUUsS0FBSztJQUNkLEtBQUssRUFBRSxLQUFLO0NBQ2Y7QUFFRCxNQUFNLE9BQU8sb0JBQW9CO0lBRGpDO1FBR1ksY0FBUyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7SUFxR3RDLENBQUM7Ozs7Ozs7SUFuR1csaUJBQWlCLENBQUMsRUFBTyxFQUFFLE1BQWtEOztjQUMzRSxPQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0QsSUFBSSxPQUFPLElBQUksT0FBTyxDQUFDLE1BQU0sRUFBRTs7Z0JBQ3ZCLG1CQUFtQixHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUNoRCxLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTs7c0JBQ3BCLFNBQVMsR0FBRyxNQUFNLENBQUMsZUFBZTtnQkFDeEMsSUFBSSxTQUFTLEVBQUU7b0JBQ1gsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO29C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QyxTQUFTLEVBQUUsbUJBQW1CLENBQUMsQ0FBQzthQUM3RDtZQUVELElBQUksT0FBTyxDQUFDLEtBQUssRUFBRTtnQkFDZixRQUFRLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLG1CQUFtQixDQUFDLENBQUM7YUFDM0Q7WUFHRCxJQUFJLEdBQUcsS0FBSyxNQUFNLEVBQUU7Z0JBQ2hCLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUM5RTtZQUVELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLEVBQUUsa0JBQWtCLENBQUMsQ0FBQztTQUNsRDtRQUVEOzs7UUFBTyxHQUFHLEVBQUU7WUFDUixJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3JCLENBQUMsRUFBQTtJQUNMLENBQUM7OztZQXZHSixVQUFVOzs7Ozs7O0lBR1AseUNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBPdmVyTGF5T3B0aW9uIHtcclxuICAgIC8qKiDku4Xnm5HlkKx0b3AgV2luZG93IOS4reeahOS6i+S7tiAqL1xyXG4gICAgb25seVRvcFdpbmRvdz86IGJvb2xlYW47XHJcbiAgICAvKiog5LuF5aSE55CG5rua6L2u5rua5Yqo5LqL5Lu2ICovXHJcbiAgICBtb3VzZVdoZWVsPzogYm9vbGVhbjtcclxuICAgIG1vdXNlRG93bj86IGJvb2xlYW47XHJcbiAgICBzY3JvbGw/OiBib29sZWFuO1xyXG4gICAgbW91c2VVcD86IGJvb2xlYW47XHJcbiAgICBjbGljaz86IGJvb2xlYW47XHJcbn1cclxuXHJcbmNvbnN0IE92ZXJMYXlPcHRpb25EZWZhdWx0czogT3ZlckxheU9wdGlvbiA9IHtcclxuICAgIG9ubHlUb3BXaW5kb3c6IGZhbHNlLFxyXG4gICAgbW91c2VXaGVlbDogdHJ1ZSxcclxuICAgIG1vdXNlRG93bjogdHJ1ZSxcclxuICAgIHNjcm9sbDogZmFsc2UsXHJcbiAgICBtb3VzZVVwOiBmYWxzZSxcclxuICAgIGNsaWNrOiBmYWxzZVxyXG59XHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE92ZXJMYXlIaWRkZW5TZXJ2aWNlIHtcclxuICAgIFxyXG4gICAgcHJpdmF0ZSBldmVudHNNYXAgPSBuZXcgV2Vha01hcCgpO1xyXG5cclxuICAgIHByaXZhdGUgaWZyYW1lRXZlbnRIYW5kbGUoZWw6IGFueSwgYWN0aW9uOiAnYWRkRXZlbnRMaXN0ZW5lcicgfCAncmVtb3ZlRXZlbnRMaXN0ZW5lcicpIHtcclxuICAgICAgICBjb25zdCBpZnJhbWVzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpZnJhbWUnKSk7XHJcbiAgICAgICAgaWYgKGlmcmFtZXMgJiYgaWZyYW1lcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgbGV0IF9kb2N1bWVudENsaWNrRXZlbnQgPSB0aGlzLmV2ZW50c01hcC5nZXQoZWwpO1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGlmcmFtZSBvZiBpZnJhbWVzKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBpZnJhbWVEb2MgPSBpZnJhbWUuY29udGVudERvY3VtZW50O1xyXG4gICAgICAgICAgICAgICAgaWYgKGlmcmFtZURvYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmcmFtZURvY1thY3Rpb25dKCdtb3VzZWRvd24nLCBfZG9jdW1lbnRDbGlja0V2ZW50KTtcclxuICAgICAgICAgICAgICAgICAgICBpZnJhbWVEb2NbYWN0aW9uXSgnbW91c2V3aGVlbCcsIF9kb2N1bWVudENsaWNrRXZlbnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmcmFtZURvY1thY3Rpb25dKCdET01Nb3VzZVNjcm9sbCcsIF9kb2N1bWVudENsaWNrRXZlbnQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcmVtb3ZlTW91c2VFdmVudChlbDogRWxlbWVudCkge1xyXG4gICAgICAgIGxldCBfZG9jdW1lbnRDbGlja0V2ZW50ID0gdGhpcy5ldmVudHNNYXAuZ2V0KGVsKVxyXG4gICAgICAgIGlmIChfZG9jdW1lbnRDbGlja0V2ZW50KSB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIF9kb2N1bWVudENsaWNrRXZlbnQsIHRydWUpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXdoZWVsJywgX2RvY3VtZW50Q2xpY2tFdmVudCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ0RPTU1vdXNlU2Nyb2xsJywgX2RvY3VtZW50Q2xpY2tFdmVudCwgdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAodG9wICE9PSB3aW5kb3cpIHtcclxuICAgICAgICAgICAgICAgIHRvcC5kb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIF9kb2N1bWVudENsaWNrRXZlbnQsIHRydWUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmlmcmFtZUV2ZW50SGFuZGxlKGVsLCAncmVtb3ZlRXZlbnRMaXN0ZW5lcicpO1xyXG4gICAgICAgICAgICBfZG9jdW1lbnRDbGlja0V2ZW50ID0gbnVsbDtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZXZlbnRzTWFwLmRlbGV0ZShlbCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRlc3RvcnkoZWwpIHtcclxuICAgICAgICB0aGlzLnJlbW92ZU1vdXNlRXZlbnQoZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlZ2lzdGVyTW91c2VFdmVudChlbDogYW55LCBfZG9jdW1lbnRDbGlja0V2ZW50OiAoZSkgPT4gdm9pZCwgb3B0aW9ucz86IE92ZXJMYXlPcHRpb24pIHtcclxuICAgICAgICBcclxuICAgICAgICAvLyBjb25zdCBfZG9jdW1lbnRDbGlja0V2ZW50MSA9IChlKSA9PiB7XHJcbiAgICAgICAgLy8gICAgIGlmIChlICYmIGUudGFyZ2V0ICYmIGUudGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT0gJ3N2ZycpIHtcclxuICAgICAgICAvLyAgICAgICAgIHJldHVybjtcclxuICAgICAgICAvLyAgICAgfVxyXG5cclxuICAgICAgICAvLyAgICAgX2RvY3VtZW50Q2xpY2tFdmVudChlKTtcclxuICAgICAgICAvLyB9XHJcblxyXG5cclxuICAgICAgICBpZiAodGhpcy5ldmVudHNNYXAuaGFzKGVsKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5ldmVudHNNYXAuc2V0KGVsLCBfZG9jdW1lbnRDbGlja0V2ZW50KTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIW9wdGlvbnMpIHtcclxuICAgICAgICAgICAgb3B0aW9ucyA9IE92ZXJMYXlPcHRpb25EZWZhdWx0cztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbigge30sIE92ZXJMYXlPcHRpb25EZWZhdWx0cywgb3B0aW9ucyk7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgaWYgKG9wdGlvbnMub25seVRvcFdpbmRvdyAmJiB0b3AgIT09IHdpbmRvdykge1xyXG4gICAgICAgICAgICB0b3AuZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBfZG9jdW1lbnRDbGlja0V2ZW50LCB0cnVlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5tb3VzZURvd24pIHtcclxuICAgICAgICAgICAgICAgIC8vIOazqOWGjCBtb3VzZWRvd24g5LqL5Lu2IOmakOiXj3BhbmVsXHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBfZG9jdW1lbnRDbGlja0V2ZW50LCB0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKG9wdGlvbnMubW91c2VXaGVlbCkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V3aGVlbCcsIF9kb2N1bWVudENsaWNrRXZlbnQsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NTW91c2VTY3JvbGwnLCBfZG9jdW1lbnRDbGlja0V2ZW50LCB0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKG9wdGlvbnMuc2Nyb2xsKSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBfZG9jdW1lbnRDbGlja0V2ZW50LCB0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKG9wdGlvbnMubW91c2VVcCkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIF9kb2N1bWVudENsaWNrRXZlbnQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5jbGljaykge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBfZG9jdW1lbnRDbGlja0V2ZW50KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgIGlmICh0b3AgIT09IHdpbmRvdykge1xyXG4gICAgICAgICAgICAgICAgdG9wLmRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgX2RvY3VtZW50Q2xpY2tFdmVudCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMuaWZyYW1lRXZlbnRIYW5kbGUoZWwsICdhZGRFdmVudExpc3RlbmVyJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmRlc3RvcnkoZWwpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==