/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
const Compare = {
    Equal: 0,
    NotEqual: 1,
    Greater: 2,
    GreaterOrEqual: 3,
    Less: 4,
    LessOrEqual: 5,
    Like: 6,
    LikeStartWith: 7,
    LikeEndWith: 8,
    NotLike: 9,
    NotLikeStartWith: 10,
    NotLikeEndWith: 11,
    Is: 12,
    IsNot: 13,
    In: 14,
    NotIn: 15,
};
export { Compare };
Compare[Compare.Equal] = 'Equal';
Compare[Compare.NotEqual] = 'NotEqual';
Compare[Compare.Greater] = 'Greater';
Compare[Compare.GreaterOrEqual] = 'GreaterOrEqual';
Compare[Compare.Less] = 'Less';
Compare[Compare.LessOrEqual] = 'LessOrEqual';
Compare[Compare.Like] = 'Like';
Compare[Compare.LikeStartWith] = 'LikeStartWith';
Compare[Compare.LikeEndWith] = 'LikeEndWith';
Compare[Compare.NotLike] = 'NotLike';
Compare[Compare.NotLikeStartWith] = 'NotLikeStartWith';
Compare[Compare.NotLikeEndWith] = 'NotLikeEndWith';
Compare[Compare.Is] = 'Is';
Compare[Compare.IsNot] = 'IsNot';
Compare[Compare.In] = 'In';
Compare[Compare.NotIn] = 'NotIn';
/** @enum {number} */
const FilterRelation = {
    Empty: 0,
    And: 1,
    Or: 2,
};
export { FilterRelation };
FilterRelation[FilterRelation.Empty] = 'Empty';
FilterRelation[FilterRelation.And] = 'And';
FilterRelation[FilterRelation.Or] = 'Or';
/**
 * @record
 */
export function FilterCondition() { }
if (false) {
    /** @type {?} */
    FilterCondition.prototype.filterField;
    /** @type {?} */
    FilterCondition.prototype.value;
    /** @type {?|undefined} */
    FilterCondition.prototype.lbracket;
    /** @type {?|undefined} */
    FilterCondition.prototype.rbracket;
    /** @type {?|undefined} */
    FilterCondition.prototype.relation;
    /** @type {?|undefined} */
    FilterCondition.prototype.compare;
    /** @type {?|undefined} */
    FilterCondition.prototype.expresstype;
}
/** @enum {?} */
const ExpressValueType = {
    Value: 0,
    Expression: 1,
    FrontExpress: 'frontExpress',
};
export { ExpressValueType };
ExpressValueType[ExpressValueType.Value] = 'Value';
ExpressValueType[ExpressValueType.Expression] = 'Expression';
/** @type {?} */
export const LeftBracket = [
    '', '(', '((', '((('
];
/** @type {?} */
export const RighttBracket = [
    '', ')', '))', ')))'
];
/** @type {?} */
export const Relation = [
    { label: '', value: 0 },
    { label: '并且', value: 1 },
    { label: '或者', value: 2 }
];
/** @type {?} */
export const CompareOperators = [
    { label: '=', value: 0 },
    { label: '<>', value: 1 },
    { label: '>', value: 2 },
    { label: '>=', value: 3 },
    { label: '<', value: 4 },
    { label: '<=', value: 5 },
    { label: 'like %...%', value: 6 },
    { label: 'like ...%', value: 7 },
    { label: 'like %...', value: 8 },
    { label: 'not like %...%', value: 9 },
    { label: 'not like ...%', value: 10 },
    { label: 'not like %...', value: 11 },
    { label: 'is', value: 12 },
    { label: 'is not', value: 13 },
    { label: 'in', value: 14 },
    { label: 'not in', value: 15 },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLmNvbmRpdGlvbnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWNvbW1vbi90eXBlcy8iLCJzb3VyY2VzIjpbImZpbHRlci5jb25kaXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztJQUVJLFFBQVM7SUFDVCxXQUFZO0lBQ1osVUFBVztJQUNYLGlCQUFrQjtJQUNsQixPQUFRO0lBQ1IsY0FBZTtJQUNmLE9BQVE7SUFDUixnQkFBaUI7SUFDakIsY0FBZTtJQUNmLFVBQVc7SUFDWCxvQkFBcUI7SUFDckIsa0JBQW1CO0lBQ25CLE1BQU87SUFDUCxTQUFVO0lBQ1YsTUFBTztJQUNQLFNBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUlWLFFBQVM7SUFDVCxNQUFPO0lBQ1AsS0FBTTs7Ozs7Ozs7O0FBR1YscUNBUUM7OztJQVBHLHNDQUFvQjs7SUFDcEIsZ0NBQWM7O0lBQ2QsbUNBQWtCOztJQUNsQixtQ0FBa0I7O0lBQ2xCLG1DQUEwQjs7SUFDMUIsa0NBQWtCOztJQUNsQixzQ0FBK0I7Ozs7SUFLL0IsUUFBUztJQUNULGFBQWM7SUFDZCxjQUFlLGNBQWM7Ozs7OztBQUlqQyxNQUFNLE9BQU8sV0FBVyxHQUFHO0lBQ3ZCLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUs7Q0FDdkI7O0FBRUQsTUFBTSxPQUFPLGFBQWEsR0FBRztJQUN6QixFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxLQUFLO0NBQ3ZCOztBQUVELE1BQU0sT0FBTyxRQUFRLEdBQUc7SUFDcEIsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUM7SUFDdEIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUM7SUFDeEIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUM7Q0FDM0I7O0FBRUQsTUFBTSxPQUFPLGdCQUFnQixHQUFHO0lBQzVCLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQ3ZCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQ3hCLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQ3ZCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQ3hCLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQ3ZCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQ3hCLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQ2hDLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQy9CLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDO0lBQy9CLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUM7SUFDcEMsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUM7SUFDcEMsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUM7SUFDcEMsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUM7SUFDekIsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUM7SUFDN0IsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUM7SUFDekIsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUM7Q0FDaEMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGVudW0gQ29tcGFyZSB7XHJcbiAgICBFcXVhbCA9IDAsXHJcbiAgICBOb3RFcXVhbCA9IDEsXHJcbiAgICBHcmVhdGVyID0gMixcclxuICAgIEdyZWF0ZXJPckVxdWFsID0gMyxcclxuICAgIExlc3MgPSA0LFxyXG4gICAgTGVzc09yRXF1YWwgPSA1LFxyXG4gICAgTGlrZSA9IDYsXHJcbiAgICBMaWtlU3RhcnRXaXRoID0gNyxcclxuICAgIExpa2VFbmRXaXRoID0gOCxcclxuICAgIE5vdExpa2UgPSA5LFxyXG4gICAgTm90TGlrZVN0YXJ0V2l0aCA9IDEwLFxyXG4gICAgTm90TGlrZUVuZFdpdGggPSAxMSxcclxuICAgIElzID0gMTIsXHJcbiAgICBJc05vdCA9IDEzLFxyXG4gICAgSW4gPSAxNCxcclxuICAgIE5vdEluID0gMTVcclxufVxyXG5cclxuZXhwb3J0IGVudW0gRmlsdGVyUmVsYXRpb24ge1xyXG4gICAgRW1wdHkgPSAwLFxyXG4gICAgQW5kID0gMSxcclxuICAgIE9yID0gMlxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEZpbHRlckNvbmRpdGlvbiB7XHJcbiAgICBmaWx0ZXJGaWVsZDogc3RyaW5nO1xyXG4gICAgdmFsdWU6IHN0cmluZztcclxuICAgIGxicmFja2V0Pzogc3RyaW5nO1xyXG4gICAgcmJyYWNrZXQ/OiBzdHJpbmc7XHJcbiAgICByZWxhdGlvbj86IEZpbHRlclJlbGF0aW9uO1xyXG4gICAgY29tcGFyZT86IENvbXBhcmU7XHJcbiAgICBleHByZXNzdHlwZT86IEV4cHJlc3NWYWx1ZVR5cGU7XHJcbn1cclxuXHJcbi8qKiDlgLznsbvlnosgKi9cclxuZXhwb3J0IGVudW0gRXhwcmVzc1ZhbHVlVHlwZSB7XHJcbiAgICBWYWx1ZSA9IDAsICAgIC8vIOWAvFxyXG4gICAgRXhwcmVzc2lvbiA9IDEsIC8vIOihqOi+vuW8j1xyXG4gICAgRnJvbnRFeHByZXNzID0gJ2Zyb250RXhwcmVzcydcclxufVxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBMZWZ0QnJhY2tldCA9IFtcclxuICAgICcnLCAnKCcsICcoKCcsICcoKCgnXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3QgUmlnaHR0QnJhY2tldCA9IFtcclxuICAgICcnLCAnKScsICcpKScsICcpKSknXHJcbl07XHJcblxyXG5leHBvcnQgY29uc3QgUmVsYXRpb24gPSBbXHJcbiAgICB7IGxhYmVsOiAnJywgdmFsdWU6IDB9LFxyXG4gICAgeyBsYWJlbDogJ+W5tuS4lCcsIHZhbHVlOiAxfSxcclxuICAgIHsgbGFiZWw6ICfmiJbogIUnLCB2YWx1ZTogMn1cclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBDb21wYXJlT3BlcmF0b3JzID0gW1xyXG4gICAgeyBsYWJlbDogJz0nLCB2YWx1ZTogMH0sXHJcbiAgICB7IGxhYmVsOiAnPD4nLCB2YWx1ZTogMX0sXHJcbiAgICB7IGxhYmVsOiAnPicsIHZhbHVlOiAyfSxcclxuICAgIHsgbGFiZWw6ICc+PScsIHZhbHVlOiAzfSxcclxuICAgIHsgbGFiZWw6ICc8JywgdmFsdWU6IDR9LFxyXG4gICAgeyBsYWJlbDogJzw9JywgdmFsdWU6IDV9LFxyXG4gICAgeyBsYWJlbDogJ2xpa2UgJS4uLiUnLCB2YWx1ZTogNn0sXHJcbiAgICB7IGxhYmVsOiAnbGlrZSAuLi4lJywgdmFsdWU6IDd9LFxyXG4gICAgeyBsYWJlbDogJ2xpa2UgJS4uLicsIHZhbHVlOiA4fSxcclxuICAgIHsgbGFiZWw6ICdub3QgbGlrZSAlLi4uJScsIHZhbHVlOiA5fSxcclxuICAgIHsgbGFiZWw6ICdub3QgbGlrZSAuLi4lJywgdmFsdWU6IDEwfSxcclxuICAgIHsgbGFiZWw6ICdub3QgbGlrZSAlLi4uJywgdmFsdWU6IDExfSxcclxuICAgIHsgbGFiZWw6ICdpcycsIHZhbHVlOiAxMn0sXHJcbiAgICB7IGxhYmVsOiAnaXMgbm90JywgdmFsdWU6IDEzfSxcclxuICAgIHsgbGFiZWw6ICdpbicsIHZhbHVlOiAxNH0sXHJcbiAgICB7IGxhYmVsOiAnbm90IGluJywgdmFsdWU6IDE1fSxcclxuXTtcclxuXHJcbiJdfQ==