/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { DateTimeHelperService } from './date-helper.service';
var DateTimeFormatPipe = /** @class */ (function () {
    function DateTimeFormatPipe(dateSer) {
        this.dateSer = dateSer;
    }
    /**
     * @param {?} value
     * @param {...?} args
     * @return {?}
     */
    DateTimeFormatPipe.prototype.transform = /**
     * @param {?} value
     * @param {...?} args
     * @return {?}
     */
    function (value) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (value) {
            /** @type {?} */
            var fmt = 'yyyy-MM-dd';
            if (args && args.length) {
                fmt = args[0];
            }
            if (fmt === 'timeago') {
                /** @type {?} */
                var locale = args[1] || 'zh-CHS';
                return this.dateSer.relativeTime(value, locale);
            }
            return this.dateSer.formatTo(value, fmt);
        }
    };
    DateTimeFormatPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'dateformat'
                },] }
    ];
    /** @nocollapse */
    DateTimeFormatPipe.ctorParameters = function () { return [
        { type: DateTimeHelperService }
    ]; };
    return DateTimeFormatPipe;
}());
export { DateTimeFormatPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DateTimeFormatPipe.prototype.dateSer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mb3JtYXQucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktY29tbW9uL2RhdGUvIiwic291cmNlcyI6WyJsaWIvZGF0ZS1mb3JtYXQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFOUQ7SUFJSSw0QkFBb0IsT0FBOEI7UUFBOUIsWUFBTyxHQUFQLE9BQU8sQ0FBdUI7SUFBRyxDQUFDOzs7Ozs7SUFDdEQsc0NBQVM7Ozs7O0lBQVQsVUFBVSxLQUFVO1FBQUUsY0FBYzthQUFkLFVBQWMsRUFBZCxxQkFBYyxFQUFkLElBQWM7WUFBZCw2QkFBYzs7UUFDaEMsSUFBSSxLQUFLLEVBQUU7O2dCQUNILEdBQUcsR0FBRyxZQUFZO1lBQ3RCLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ3JCLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDakI7WUFFRCxJQUFJLEdBQUcsS0FBSyxTQUFTLEVBQUU7O29CQUNiLE1BQU0sR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUTtnQkFDbEMsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7YUFDbkQ7WUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztTQUM1QztJQUNMLENBQUM7O2dCQW5CSixJQUFJLFNBQUM7b0JBQ0YsSUFBSSxFQUFFLFlBQVk7aUJBQ3JCOzs7O2dCQUpRLHFCQUFxQjs7SUFzQjlCLHlCQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FqQlksa0JBQWtCOzs7Ozs7SUFDZixxQ0FBc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERhdGVUaW1lSGVscGVyU2VydmljZSB9IGZyb20gJy4vZGF0ZS1oZWxwZXIuc2VydmljZSc7XHJcblxyXG5AUGlwZSh7XHJcbiAgICBuYW1lOiAnZGF0ZWZvcm1hdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIERhdGVUaW1lRm9ybWF0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRlU2VyOiBEYXRlVGltZUhlbHBlclNlcnZpY2UpIHt9XHJcbiAgICB0cmFuc2Zvcm0odmFsdWU6IGFueSwgLi4uYXJnczogYW55W10pOiBhbnkge1xyXG4gICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICBsZXQgZm10ID0gJ3l5eXktTU0tZGQnO1xyXG4gICAgICAgICAgICBpZiAoYXJncyAmJiBhcmdzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgZm10ID0gYXJnc1swXTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGZtdCA9PT0gJ3RpbWVhZ28nKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBsb2NhbGUgPSBhcmdzWzFdIHx8ICd6aC1DSFMnO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZVNlci5yZWxhdGl2ZVRpbWUodmFsdWUsIGxvY2FsZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGVTZXIuZm9ybWF0VG8odmFsdWUsIGZtdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19