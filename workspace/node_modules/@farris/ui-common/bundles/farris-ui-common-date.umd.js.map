{"version":3,"file":"farris-ui-common-date.umd.js.map","sources":["ng://@farris/ui-common/date/lib/myDateConverter.ts","ng://@farris/ui-common/date/lib/timeago/lang/en.ts","ng://@farris/ui-common/date/lib/timeago/lang/zh_CHS.ts","ng://@farris/ui-common/date/lib/timeago/lang/zh_CHT.ts","ng://@farris/ui-common/date/lib/timeago/timeago.ts","ng://@farris/ui-common/date/lib/date-helper.service.ts","ng://@farris/ui-common/date/lib/date-format.pipe.ts","ng://@farris/ui-common/date/lib/date-helper.module.ts"],"sourcesContent":["export class MyDateConverter {\r\n    private MONTHNAMES = 'January February March April May June July August September October November December'.split(' ');\r\n    private MONTHNAMES_LOOKUP = { 'jan': 1, 'feb': 2, 'mar': 3, 'apr': 4, 'may': 5, 'jun': 6, 'jul': 7, 'aug': 8, 'sep': 9, 'oct': 10, 'nov': 11, 'dec': 12 };\r\n    /**\r\n     * @var {Array}  Abbreviated names for the months of the year\r\n     */\r\n    private ABBR_MONTHNAMES = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\r\n    /**\r\n     * @var {Array}  Names for the days of the week from Sunday to Saturday\r\n     */\r\n    private DAYNAMES = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' ');\r\n    private DAYNAMES_LOOKUP = { 'sun': 0, 'mon': 1, 'tue': 2, 'wed': 3, 'thu': 4, 'fri': 5, 'sat': 6 };\r\n    /**\r\n     * @var {Array}  Abbreviated names for the days of the week from Sunday to Saturday\r\n     */\r\n    private ABBR_DAYNAMES = 'Sun Mon Tue Wed Thu Fri Sat'.split(' ');\r\n    regexes = {\r\n        YEAR: '[1-9]\\\\d{3}',\r\n        MONTH: '1[0-2]|0?[1-9]',\r\n        MONTH2: '1[0-2]|0[1-9]',\r\n        MONTHNAME: 'jan|january|feb|february|mar|march|apr|april|may|jun|june|jul|july|aug|august|sep|september|oct|october|nov|november|dec|december',\r\n        DAYNAME: 'mon|monday|tue|tuesday|wed|wednesday|thu|thursday|fri|friday|sat|saturday|sun|sunday',\r\n        DAY: '3[01]|[12]\\\\d|0?[1-9]',\r\n        DAY2: '3[01]|[12]\\\\d|0[1-9]',\r\n        TIMEZONE: '[+-][01]\\\\d\\\\:?[0-5]\\\\d',\r\n        H24: '[01]\\\\d|2[0-3]',\r\n        MIN: '[0-5]\\\\d',\r\n        SEC: '[0-5]\\\\d',\r\n        MS: '\\\\d{3,}',\r\n        H12: '0?[1-9]|1[012]',\r\n        AMPM: 'am|pm',\r\n        UNIT: 'year|month|week|day|hour|minute|second|millisecond'\r\n    };\r\n\r\n    patterns = [\r\n        // 2010-03-15\r\n        [\r\n            'iso_8601',\r\n            this.makePattern('^(_YEAR_)-(_MONTH_)-(_DAY_)$'),\r\n            '$2/$3/$1'\r\n        ],\r\n\r\n        // 3-15-2010\r\n        [\r\n            'us',\r\n            this.makePattern('^(_MONTH_)([\\\\/-])(_DAY_)\\\\2(_YEAR_)$'),\r\n            '$1/$3/$4'\r\n        ],\r\n\r\n        // 15.03.2010\r\n        [\r\n            'world',\r\n            this.makePattern('^(_DAY_)([\\\\/\\\\.])(_MONTH_)\\\\2(_YEAR_)$'),\r\n            '$3/$1/$4'\r\n        ],\r\n\r\n        // 15-Mar-2010, 8 Dec 2011, \"Thu, 8 Dec 2011\"\r\n        [\r\n            'chicago',\r\n            this.makePattern('^(?:(?:_DAYNAME_),? )?(_DAY_)([ -])(_MONTHNAME_)\\\\2(_YEAR_)$'),\r\n            '$3 $1, $4'\r\n        ],\r\n\r\n        // \"March 4, 2012\", \"Mar 4 2012\", \"Sun Mar 4 2012\"\r\n        [\r\n            'conversational',\r\n            this.makePattern('^(?:(?:_DAYNAME_),? )?(_MONTHNAME_) (_DAY_),? (_YEAR_)$'),\r\n            '$1 $2, $3'\r\n        ],\r\n\r\n        // Tue Jun 22 17:47:27 +0000 2010\r\n        [\r\n            'month_day_time_year',\r\n            this.makePattern('^(?:_DAYNAME_) (_MONTHNAME_) (_DAY_) ((?:_H24_)\\\\:(?:_MIN_)(?:\\\\:_SEC_)?) (_TIMEZONE_) (_YEAR_)$'),\r\n            (m) => {\r\n                const month = this.zeroPad(this.getMonthByName(m[1]), 2);\r\n                const day = this.zeroPad(m[2], 2);\r\n                const date: any = this.create(m[5] + '-' + month + '-' + day + 'T' + m[3] + m[4]);\r\n                if (isNaN(date)) {\r\n                    return false;\r\n                }\r\n                return date;\r\n            }\r\n        ],\r\n\r\n        // @123456789\r\n        [\r\n            'unix',\r\n            /^@(-?\\d+)$/,\r\n            (match) => {\r\n                return this.create(parseInt(match[1], 10) * 1000);\r\n            }\r\n        ],\r\n\r\n        // 24-hour time (This will help catch Date objects that are casted to a string)\r\n        [\r\n            '24_hour',\r\n            this.makePattern('^(?:(.+?)(?: |T))?(_H24_)\\\\:(_MIN_)(?:\\\\:(_SEC_)(?:\\\\.(_MS_))?)? ?(?:GMT)?(_TIMEZONE_)?(?: \\\\([A-Z]+\\\\))?$'),\r\n            (match) => {\r\n                let d;\r\n                if (match[1]) {\r\n                    d = this.create(match[1]);\r\n                    if (isNaN(d)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    d = new Date();\r\n                    d.setMilliseconds(0);\r\n                }\r\n                d.setHours(parseFloat(match[2]), parseFloat(match[3]), parseFloat(match[4] || 0));\r\n                if (match[5]) {\r\n                    d.setMilliseconds(+String(match[5]).slice(0, 3));\r\n                }\r\n                if (match[6]) {\r\n                    d.setUTCOffsetString(match[6]);\r\n                }\r\n                return d;\r\n            }\r\n        ],\r\n\r\n        // 12-hour time\r\n        [\r\n            '12_hour',\r\n            this.makePattern('^(?:(.+) )?(_H12_)(?:\\\\:(_MIN_)(?:\\\\:(_SEC_))?)? ?(_AMPM_)$'),\r\n            (match) => {\r\n                let d;\r\n                if (match[1]) {\r\n                    d = this.create(match[1]);\r\n                    if (isNaN(d)) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    d = new Date();\r\n                    d.setMilliseconds(0);\r\n                }\r\n                let hour = parseFloat(match[2]);\r\n                hour = match[5].toLowerCase() == 'am' ? (hour == 12 ? 0 : hour) : (hour == 12 ? 12 : hour + 12);\r\n                d.setHours(hour, parseFloat(match[3] || 0), parseFloat(match[4] || 0));\r\n                return d;\r\n            }\r\n        ]\r\n\r\n    ];\r\n\r\n    makePattern(code) {\r\n        code = code.replace(/_([A-Z][A-Z0-9]+)_/g, ($0, $1) => {\r\n            return this.regexes[$1];\r\n        });\r\n        return new RegExp(code, 'i');\r\n    }\r\n\r\n    getMonthByName(monthname) {\r\n        return this.MONTHNAMES_LOOKUP[String(monthname).slice(0, 3).toLowerCase()];\r\n    }\r\n\r\n    getWeekdayByName(dayname) {\r\n        return this.DAYNAMES_LOOKUP[String(dayname).slice(0, 3).toLowerCase()];\r\n    }\r\n\r\n    private zeroPad(num, digits) {\r\n        switch (digits - String(num).length) {\r\n            case 2: return '00' + num;\r\n            case 1: return '0' + num;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    create(date) {\r\n        // 0 arguments or date is undefined\r\n        if (typeof date == 'undefined') {\r\n            return Date.now();\r\n        }\r\n        // If the passed value is already a date object, return it\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        const a = arguments;\r\n        switch (a.length) {\r\n            case 1:\r\n                // If the passed value is an integer, interpret it as ms past epoch\r\n                if (Object.prototype.toString.call(date) == '[object Number]') {\r\n                    return new Date(date);\r\n                }\r\n                // trim the date\r\n                date = String(date).replace(/^\\s*(.*)\\s*$/, '$1');\r\n                // normalize whitespace\r\n                date = date.replace(/\\s{2,}/g, ' ');\r\n                if (date === '') {\r\n                    return Date.now();\r\n                }\r\n                var i = 0, pattern, ms, obj, match, regex, fn;\r\n                // try each of our patterns\r\n                while ((pattern = this.patterns[i++])) {\r\n                    if (typeof pattern[0] == 'string') {\r\n                        // pattern[0] is the name of the pattern\r\n                        regex = pattern[1];\r\n                        fn = pattern[2];\r\n                    } else {\r\n                        // backwards compatibility with version 3.1\r\n                        regex = pattern[0];\r\n                        fn = pattern[1];\r\n                    }\r\n                    if (!(match = date.match(regex))) {\r\n                        continue;\r\n                    }\r\n                    if (typeof fn == 'function') {\r\n                        obj = fn(match, date);\r\n                        if (obj instanceof Date) {\r\n                            return obj;\r\n                        }\r\n                    } else {\r\n                        // fn is not a function but a string replace command\r\n                        ms = Date.parse(date.replace(regex, fn));\r\n                        if (!isNaN(ms)) {\r\n                            return new Date(ms);\r\n                        }\r\n                    }\r\n                }\r\n                return NaN;\r\n            case 2: return new Date(a[0], a[1], 1);\r\n            case 3: return new Date(a[0], a[1], a[2]);\r\n            case 4: return new Date(a[0], a[1], a[2], a[3]);\r\n            case 5: return new Date(a[0], a[1], a[2], a[3], a[4]);\r\n            case 6: return new Date(a[0], a[1], a[2], a[3], a[4], a[5]);\r\n            default: return new Date(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\r\n        }\r\n    }\r\n}\r\n","const EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\r\n\r\nexport default function (diff: number, idx: number): [string, string] {\r\n    if (idx === 0) return ['just now', 'right now'];\r\n    let unit = EN_US[Math.floor(idx / 2)];\r\n    if (diff > 1) unit += 's';\r\n    return [`${diff} ${unit} ago`, `in ${diff} ${unit}`];\r\n}\r\n","const ZH_CN = ['ç§', 'åé', 'å°æ¶', 'å¤©', 'å¨', 'ä¸ªæ', 'å¹´'];\r\n\r\nexport default function (diff: number, idx: number): [string, string] {\r\n    if (idx === 0) return ['åå', 'çå»å'];\r\n    const unit = ZH_CN[~~(idx / 2)];\r\n    return [`${diff} ${unit}å`, `${diff} ${unit}å`];\r\n}\r\n","export default function (number: number, index: number): [string, string] {\r\n    return [\r\n        ['åå', 'çå»å¾'],\r\n        ['%s ç§å', '%s ç§å¾'],\r\n        ['1 åéå', '1 åéå¾'],\r\n        ['%s åéå', '%s åéå¾'],\r\n        ['1 å°æå', '1 å°æå¾'],\r\n        ['%s å°æå', '%s å°æå¾'],\r\n        ['1 å¤©å', '1 å¤©å¾'],\r\n        ['%s å¤©å', '%s å¤©å¾'],\r\n        ['1 é±å', '1 é±å¾'],\r\n        ['%s é±å', '%s é±å¾'],\r\n        ['1 åæå', '1 åæå¾'],\r\n        ['%s åæå', '%s åæå¾'],\r\n        ['1 å¹´å', '1 å¹´å¾'],\r\n        ['%s å¹´å', '%s å¹´å¾'],\r\n    ][index] as [string, string];\r\n}\r\n","import {en, zh_CHS, zh_CHT} from './lang';\r\n\r\nexport type TDate = Date | string | number;\r\nexport type LocaleFunc = (diff: number, idx: number, totalSec?: number) => [string, string];\r\nexport type LocaleMap = Record<string, LocaleFunc>;\r\n\r\n/**\r\n * render / format options\r\n */\r\n export type Opts = {\r\n    /** the relative date */\r\n    readonly relativeDate?: TDate;\r\n    /** the realtime */\r\n    readonly minInterval?: number;\r\n  };\r\n  \r\n\r\nconst SEC_ARRAY = [\r\n    60, // 60 seconds in 1 min\r\n    60, // 60 mins in 1 hour\r\n    24, // 24 hours in 1 day\r\n    7, // 7 days in 1 week\r\n    365 / 7 / 12, // 4.345238095238096 weeks in 1 month\r\n    12, // 12 months in 1 year\r\n];\r\n\r\nexport function toDate(input?: Date | string | number): Date {\r\n    if (input instanceof Date) return input;\r\n    // @ts-ignore\r\n    if (!isNaN(input) || /^\\d+$/.test(input)) return new Date(parseInt(input));\r\n    input = (input || '')\r\n        // @ts-ignore\r\n        .trim()\r\n        .replace(/\\.\\d+/, '') // remove milliseconds\r\n        .replace(/-/, '/')\r\n        .replace(/-/, '/')\r\n        .replace(/(\\d)T(\\d)/, '$1 $2')\r\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\r\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\r\n    return new Date(input);\r\n}\r\n\r\n/**\r\n * format the diff second to *** time ago, with setting locale\r\n * @param diff\r\n * @param localeFunc\r\n * @returns\r\n */\r\nexport function formatDiff(diff: number, localeFunc: LocaleFunc): string {\r\n    /**\r\n     * if locale is not exist, use defaultLocale.\r\n     * if defaultLocale is not exist, use build-in `en`.\r\n     * be sure of no error when locale is not exist.\r\n     *\r\n     * If `time in`, then 1\r\n     * If `time ago`, then 0\r\n     */\r\n    const agoIn = diff < 0 ? 1 : 0;\r\n\r\n    /**\r\n     * Get absolute value of number (|diff| is non-negative) value of x\r\n     * |diff| = diff if diff is positive\r\n     * |diff| = -diff if diff is negative\r\n     * |0| = 0\r\n     */\r\n    diff = Math.abs(diff);\r\n\r\n    /**\r\n     * Time in seconds\r\n     */\r\n    const totalSec = diff;\r\n\r\n    /**\r\n     * Unit of time\r\n     */\r\n    let idx = 0;\r\n\r\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\r\n        diff /= SEC_ARRAY[idx];\r\n    }\r\n\r\n    /**\r\n     * Math.floor() is alternative of ~~\r\n     *\r\n     * The differences and bugs:\r\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\r\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\r\n     *\r\n     * More information about the performance of algebraic:\r\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\r\n     */\r\n    diff = Math.floor(diff);\r\n\r\n    idx *= 2;\r\n\r\n    if (diff > (idx === 0 ? 9 : 1)) idx += 1;\r\n\r\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\r\n}\r\n\r\n/**\r\n * calculate the diff second between date to be formatted an now date.\r\n * @param date\r\n * @param relativeDate\r\n */\r\nexport function diffSec(date: TDate, relativeDate: TDate): number {\r\n    const relDate = relativeDate ? toDate(relativeDate) : new Date();\r\n    return (+relDate - +toDate(date)) / 1000;\r\n}\r\n\r\n/**\r\n * nextInterval: calculate the next interval time.\r\n * - diff: the diff sec between now and date to be formatted.\r\n *\r\n * What's the meaning?\r\n * diff = 61 then return 59\r\n * diff = 3601 (an hour + 1 second), then return 3599\r\n * make the interval with high performance.\r\n **/\r\nexport function nextInterval(diff: number): number {\r\n    let rst = 1,\r\n        i = 0,\r\n        d = Math.abs(diff);\r\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\r\n        diff /= SEC_ARRAY[i];\r\n        rst *= SEC_ARRAY[i];\r\n    }\r\n    d = d % rst;\r\n    d = d ? rst - d : rst;\r\n    return Math.ceil(d);\r\n}\r\n\r\n\r\nexport const format = (date: TDate, locale?: string, opts?: Opts): string => {\r\n    // diff seconds\r\n    const sec = diffSec(date, opts && opts.relativeDate);\r\n    // format it with locale\r\n    return formatDiff(sec, getLocale(locale));\r\n};\r\n\r\n\r\n/**\r\n * All supported locales\r\n */\r\nconst Locales: LocaleMap = {};\r\n\r\n/**\r\n * register a locale\r\n * @param locale\r\n * @param func\r\n */\r\nexport const register = (locale: string, func: LocaleFunc) => {\r\n    Locales[locale] = func;\r\n};\r\n\r\n/**\r\n * get a locale, default is en_US\r\n * @param locale\r\n */\r\nexport const getLocale = (locale: string): LocaleFunc => {\r\n    return Locales[locale] || Locales['zh-CHS'];\r\n};\r\n\r\n\r\nregister('en', en);\r\nregister('zh-CHS', zh_CHS);\r\nregister('zh-CHT', zh_CHT);\r\n\r\n\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-09-02 17:55:57\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-23 16:57:28\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { addDays, differenceInMinutes, format, isValid, parseISO, subDays } from \"date-fns\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MyDateConverter } from \"./myDateConverter\";\r\n\r\nimport { format as timeagoFmt, TDate } from './timeago/timeago';\r\n\r\n\r\nexport type FirstDayOfWeek = 'ä¸' | 'æ¥';\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class DateTimeHelperService {\r\n    private $D = null;\r\n\r\n    constructor() {\r\n        this.$D = new MyDateConverter();\r\n    }\r\n\r\n    relativeTime(date: TDate, locale: 'en'|'zh-CHS'|'zh-CHT' = 'zh-CHS') {\r\n        if (date) {\r\n            return timeagoFmt(date, locale);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    addDays(date: Date, days: number) {\r\n        return addDays(date, days);\r\n    }\r\n\r\n    subDays(date: Date, days: number) {\r\n        return subDays(date, days);\r\n    }\r\n\r\n    differenceInMinutes(dateLeft: Date | number, dateRight: Date | number) {\r\n        return differenceInMinutes(dateLeft, dateRight);\r\n    }\r\n\r\n    /**\r\n     * @param value è¦è½¬æ¢æ ¼å¼çæ¥æ\r\n     * @param fmt æ ¼å¼åå­ç¬¦ä¸²\r\n     *\r\n     * æ´å¤çæ ¼å¼åè¯·åè\r\n     * [ç¹æç¹æ](https://date-fns.org/v1.30.1/docs/format)\r\n     */\r\n    formatTo(value: any, fmt: string = \"yyyy-MM-dd\") {\r\n        if (!value) {\r\n            return \"\";\r\n        }\r\n\r\n        if (typeof value === \"string\" && value.indexOf(\"0001\") === 0) {\r\n            return \"\";\r\n        }\r\n\r\n        if (value instanceof Date) {\r\n            return format(value, fmt);\r\n        }\r\n\r\n        let _d: any = parseISO(value);\r\n\r\n        if (_d == \"Invalid Date\") {\r\n            _d = this.createDate(value) || new Date(value);\r\n        }\r\n\r\n        // const d = parseISO(value);\r\n        if (isValid(_d)) {\r\n            const d = parseISO(format(_d, \"yyyy-MM-dd HH:mm:ss\"));\r\n            return format(d, fmt);\r\n        } else {\r\n            // console.error(`${value} è½¬æ¢ä¸ºDateæ¶å¤±è´¥ã`);\r\n            if (fmt.indexOf(\"HH\") === 0 || fmt.indexOf(\"hh\") === 0) {\r\n                // ä»ææ¶é´é¨å\r\n                // æåæ¶é´\r\n                const _time = value\r\n                    .match(/\\d*/g)\r\n                    .filter((n) => n !== \"\")\r\n                    .join(\":\");\r\n\r\n                if (fmt === \"HH\" || fmt === \"hh\") {\r\n                    fmt = fmt += \":mm\";\r\n                }\r\n\r\n                // const fullDateTime = new Date('2022-11-25 ' + _time);\r\n                const fullDateTime = parseISO(\"2022-11-25 \" + _time);\r\n                return format(fullDateTime, fmt);\r\n            }\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    private createDate(val) {\r\n        return this.$D.create(val);\r\n    }\r\n\r\n    // æ ¹æ®åæ°æ¥æè·åå·ä½æ¥æä¿¡æ¯\r\n    private formatDate(date = new Date(), firstDayOfWeek: FirstDayOfWeek = 'ä¸') {\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        let weekDay = date.getDay();\r\n        if (firstDayOfWeek === 'ä¸') {\r\n            if (!weekDay) {\r\n                weekDay = 6;\r\n            } else {\r\n                weekDay = weekDay - 1;\r\n            }\r\n        }\r\n\r\n        let week = [\"ä¸\", \"äº\", \"ä¸\", \"å\", \"äº\", \"å­\", \"æ¥\"][weekDay];\r\n\r\n        const dateInfo = {\r\n            date: new Date(date),\r\n            dateStr: `${year}-${month.toString().padStart(2, \"0\")}-${day\r\n                .toString()\r\n                .padStart(2, \"0\")}`,\r\n            year,\r\n            month,\r\n            day,\r\n            week,\r\n            isToday: false,\r\n        };\r\n\r\n        const today = new Date();\r\n        // å¤æ­æ¯å¦ä¸ºå½å¤©\r\n        if (\r\n            today.getFullYear() === year &&\r\n            today.getMonth() + 1 === month &&\r\n            today.getDate() === day\r\n        ) {\r\n            dateInfo[\"isToday\"] = true;\r\n        }\r\n        return dateInfo;\r\n    }\r\n\r\n    // æ ¹æ®åºåæ¥æï¼è·åé¿åº¦ä¸ºdayLenthçæ¥ææ°ç»\r\n    private setDate(date = new Date(), step = 7, firstDayOfWeek: FirstDayOfWeek = 'ä¸') {\r\n        let weekData = [];\r\n        const week = date.getDay() - 1;\r\n\r\n\r\n        let _rangeDays = week * -1; // ä»¥å¨ä¸ä¸ºç¬¬1å¤©\r\n\r\n        if (firstDayOfWeek === 'æ¥') {\r\n            _rangeDays = _rangeDays - 1;\r\n        }\r\n        date = this.getDateByDate(date, _rangeDays); // ä»¥å¨æ¥ä¸ºç¬¬1å¤©æ¶ -1\r\n        for (let i = 0; i < step; i++) {\r\n            weekData.push(\r\n                this.formatDate(i == 0 ? date : this.getDateByDate(date, 1), firstDayOfWeek)\r\n            );\r\n        }\r\n        return weekData;\r\n    }\r\n\r\n    // æ ¹æ®åºåæ¥æè·åååæå¤©çæ¥æå¯¹è±¡\r\n    private getDateByDate(date = new Date(), range = 0) {\r\n        date.setDate(date.getDate() + range);\r\n        return date;\r\n    }\r\n\r\n    /* \r\n    è·åä»¥baselineDateæå¨å¨çä¸å¨ãåä¸å¨ãä¸ä¸å¨çæ¥æåææä¿¡æ¯(åæ¢å¨æä¹å¯éè¿åæ°dayLenthèªè¡è®¾ç½®)\r\n    baselineDate: è®¾ç½®çåºåæ¥æ(è¿åçæ¥æåè¡¨çç¬¬ä¸ä¸ªæ¥æ)\r\n    range: ä»¥ baselineDate ä¸ºåºåæ¥æçååå¤©æ°èå´(å¦åºåæ¥æçrangeä¸º0ï¼éè¦è¿åå7å¤©æ¥æï¼årangeä¸º-7ï¼å7å¤©årangeä¸º7)\r\n    step: éè¦è·åçæ¥æä¿¡æ¯å¨æå¤©æ°ï¼é»è®¤è·åbaselineDateæå¨å¨çä¸å¨æ¥æä¿¡æ¯\r\n    firstDayOfWeek: æ¯å¨ç¬¬ä¸å¤© æ¯ å¨ä¸ï¼è¿æ¯å¨æ¥ï¼é»è®¤ä¸º å¨ä¸\r\n   */\r\n    getWeekDate({ baselineDate = new Date(), range = 0, step = 7 }, firstDayOfWeek: FirstDayOfWeek = 'ä¸') {\r\n        return this.setDate(this.getDateByDate(baselineDate, range), step, firstDayOfWeek);\r\n    }\r\n\r\n    /** æ ¹æ®å½åæ¥æï¼è·åå½åæ¯æå¨å¹´çç¬¬å å¨ */\r\n    getYearWeek(year, month, day) {//aä¸ºå¹´ bä¸ºæ cä¸ºæ¥\r\n        /*  \r\n        date1æ¯å½åæ¥æ  \r\n        date2æ¯å½å¹´ç¬¬ä¸å¤©  \r\n        dæ¯å½åæ¥ææ¯ä»å¹´ç¬¬å¤å°å¤©  \r\n        ç¨d + å½åå¹´çç¬¬ä¸å¤©çå¨å·®è·çåå¨é¤ä»¥7å°±æ¯æ¬å¹´ç¬¬å å¨  \r\n        */\r\n        var date1 = new Date(year, parseInt(month) - 1, day),\r\n            date2 = new Date(year, 0, 1),\r\n            d = Math.round((date1.valueOf() - date2.valueOf()) / 86400000);\r\n        return Math.ceil((d + ((date2.getDay() + 1) - 1)) / 7);\r\n    }\r\n\r\n    getMonthWeek(year, month, day) {\r\n        /**\r\n        * a = d = å½åæ¥æ\r\n        * b = 6 - w = å½åå¨çè¿æå å¤©è¿å®(ä¸ç®ä»å¤©)\r\n        * a + b çåå¨é¤ä»¥7 å°±æ¯å½å¤©æ¯å½åæä»½çç¬¬å å¨\r\n        */\r\n        var date = new Date(year, parseInt(month) - 1, day),\r\n            w = date.getDay(),\r\n            d = date.getDate();\r\n        if (w == 0) {\r\n            w = 7;\r\n        }\r\n        var config = {\r\n            getMonth: date.getMonth() + 1,\r\n            getYear: date.getFullYear(),\r\n            getWeek: Math.ceil((d + 6 - w) / 7),\r\n        }\r\n        return config;\r\n    }\r\n\r\n\r\n    getNowWeekTime(date: Date, firstDayOfWeek: FirstDayOfWeek) {\r\n        date.setDate(date.getDate() - ((date.getDay() + 6) % 7));\r\n        const begin = {\r\n            year: date.getFullYear(),\r\n            month: date.getMonth() + 1,\r\n            day: date.getDate()\r\n        };\r\n        date.setDate(date.getDate() + 6);\r\n        const end = {\r\n            year: date.getFullYear(),\r\n            month: date.getMonth() + 1,\r\n            day: date.getDate()\r\n        };\r\n\r\n        if (firstDayOfWeek === 'ä¸') {\r\n            return { begin, end };\r\n        } else {\r\n            if (date.getDay() != 0) {\r\n                date.setDate(date.getDate() - date.getDay());\r\n            }\r\n\r\n            const _begin = {\r\n                year: date.getFullYear(),\r\n                month: date.getMonth() + 1,\r\n                day: date.getDate()\r\n            };\r\n\r\n            date.setDate(date.getDate() + 6 - date.getDay());\r\n            const _end = {\r\n                year: date.getFullYear(),\r\n                month: date.getMonth() + 1,\r\n                day: date.getDate()\r\n            }\r\n\r\n            return {\r\n                begin: _begin,\r\n                end: _end\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DateTimeHelperService } from './date-helper.service';\r\n\r\n@Pipe({\r\n    name: 'dateformat'\r\n})\r\nexport class DateTimeFormatPipe implements PipeTransform {\r\n    constructor(private dateSer: DateTimeHelperService) {}\r\n    transform(value: any, ...args: any[]): any {\r\n        if (value) {\r\n            let fmt = 'yyyy-MM-dd';\r\n            if (args && args.length) {\r\n                fmt = args[0];\r\n            }\r\n\r\n            if (fmt === 'timeago') {\r\n                const locale = args[1] || 'zh-CHS';\r\n                return this.dateSer.relativeTime(value, locale);\r\n            }\r\n\r\n            return this.dateSer.formatTo(value, fmt);\r\n        }\r\n    }\r\n}","import { DateTimeHelperService } from './date-helper.service';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DateTimeFormatPipe } from './date-format.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DateTimeFormatPipe\r\n    ],\r\n    imports: [ CommonModule ],\r\n    exports: [\r\n        DateTimeFormatPipe\r\n    ],\r\n    providers: [],\r\n})\r\nexport class DateHelperModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: DateHelperModule,\r\n            providers: [\r\n                DateTimeHelperService\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["timeagoFmt","addDays","subDays","differenceInMinutes","format","parseISO","isValid","Injectable","Pipe","NgModule","CommonModule"],"mappings":"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"}
