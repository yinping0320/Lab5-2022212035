(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@farris/ui-common/types', ['exports'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-common'] = global.farris['ui-common'] || {}, global.farris['ui-common'].types = {})));
}(this, (function (exports) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var Compare = {
        Equal: 0,
        NotEqual: 1,
        Greater: 2,
        GreaterOrEqual: 3,
        Less: 4,
        LessOrEqual: 5,
        Like: 6,
        LikeStartWith: 7,
        LikeEndWith: 8,
        NotLike: 9,
        NotLikeStartWith: 10,
        NotLikeEndWith: 11,
        Is: 12,
        IsNot: 13,
        In: 14,
        NotIn: 15,
    };
    Compare[Compare.Equal] = 'Equal';
    Compare[Compare.NotEqual] = 'NotEqual';
    Compare[Compare.Greater] = 'Greater';
    Compare[Compare.GreaterOrEqual] = 'GreaterOrEqual';
    Compare[Compare.Less] = 'Less';
    Compare[Compare.LessOrEqual] = 'LessOrEqual';
    Compare[Compare.Like] = 'Like';
    Compare[Compare.LikeStartWith] = 'LikeStartWith';
    Compare[Compare.LikeEndWith] = 'LikeEndWith';
    Compare[Compare.NotLike] = 'NotLike';
    Compare[Compare.NotLikeStartWith] = 'NotLikeStartWith';
    Compare[Compare.NotLikeEndWith] = 'NotLikeEndWith';
    Compare[Compare.Is] = 'Is';
    Compare[Compare.IsNot] = 'IsNot';
    Compare[Compare.In] = 'In';
    Compare[Compare.NotIn] = 'NotIn';
    /** @enum {number} */
    var FilterRelation = {
        Empty: 0,
        And: 1,
        Or: 2,
    };
    FilterRelation[FilterRelation.Empty] = 'Empty';
    FilterRelation[FilterRelation.And] = 'And';
    FilterRelation[FilterRelation.Or] = 'Or';
    /** @enum {?} */
    var ExpressValueType = {
        Value: 0,
        Expression: 1,
        FrontExpress: 'frontExpress',
    };
    ExpressValueType[ExpressValueType.Value] = 'Value';
    ExpressValueType[ExpressValueType.Expression] = 'Expression';
    /** @type {?} */
    var LeftBracket = [
        '', '(', '((', '((('
    ];
    /** @type {?} */
    var RighttBracket = [
        '', ')', '))', ')))'
    ];
    /** @type {?} */
    var Relation = [
        { label: '', value: 0 },
        { label: '并且', value: 1 },
        { label: '或者', value: 2 }
    ];
    /** @type {?} */
    var CompareOperators = [
        { label: '=', value: 0 },
        { label: '<>', value: 1 },
        { label: '>', value: 2 },
        { label: '>=', value: 3 },
        { label: '<', value: 4 },
        { label: '<=', value: 5 },
        { label: 'like %...%', value: 6 },
        { label: 'like ...%', value: 7 },
        { label: 'like %...', value: 8 },
        { label: 'not like %...%', value: 9 },
        { label: 'not like ...%', value: 10 },
        { label: 'not like %...', value: 11 },
        { label: 'is', value: 12 },
        { label: 'is not', value: 13 },
        { label: 'in', value: 14 },
        { label: 'not in', value: 15 },
    ];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var SortType = {
        Asc: 0,
        Desc: 1,
    };
    SortType[SortType.Asc] = 'Asc';
    SortType[SortType.Desc] = 'Desc';
    /** @type {?} */
    var SortTypes = [
        { label: '升序', value: SortType.Asc },
        { label: '降序', value: SortType.Desc }
    ];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.Compare = Compare;
    exports.FilterRelation = FilterRelation;
    exports.ExpressValueType = ExpressValueType;
    exports.LeftBracket = LeftBracket;
    exports.RighttBracket = RighttBracket;
    exports.Relation = Relation;
    exports.CompareOperators = CompareOperators;
    exports.SortType = SortType;
    exports.SortTypes = SortTypes;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-common-types.umd.js.map