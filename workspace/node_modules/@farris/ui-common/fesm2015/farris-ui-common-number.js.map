{"version":3,"file":"farris-ui-common-number.js.map","sources":["ng://@farris/ui-common/number/numer-helper.service.ts","ng://@farris/ui-common/number/number-helper.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BigNumber } from 'bignumber.js';\r\n\r\nexport type NumberType = string | number;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NumberHelperService {\r\n    constructor() { }\r\n\r\n    formatMoney(value, opts: any = {}): string {\r\n        return this.formatValue(value, opts);\r\n    }\r\n\r\n    formatNumber(value, opts: any = {}): string {\r\n        return this.formatValue(value, opts);\r\n    }\r\n\r\n    unformat(value, opts: any = {}) {\r\n        return this._unformat(value, opts);\r\n    }\r\n\r\n    /** è·åæå¤§å¼ */\r\n    max(n1: any, n2 = null) {\r\n        if (Array.isArray(n1)) {\r\n            return BigNumber.max.apply(null, n1).toFixed();\r\n        } else {\r\n            if (n1 && n2) {\r\n                return BigNumber.maximum(n1, n2).toFixed();\r\n            } else {\r\n                console.error(`è¯·æä¾æ¯è¾çå¼n1ãn2.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æå°å¼ */\r\n    min(n1: any, n2 = null) {\r\n        if (Array.isArray(n1)) {\r\n            return BigNumber.min.apply(null, n1).toFixed();\r\n        } else {\r\n            if (n1 && n2) {\r\n                return BigNumber.minimum(n1, n2).toFixed();\r\n            } else {\r\n                console.error(`è¯·æä¾æ¯è¾çå¼n1ãn2.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ±å */\r\n    sum(n1: NumberType[]) {\r\n        return BigNumber.sum.apply(null, n1).toFixed();\r\n    }\r\n\r\n    /** å¹³åæ° */\r\n    avg(n1: NumberType, len: number) {\r\n        return new BigNumber(n1).div(len).toFixed();\r\n    }\r\n\r\n    /**  å æ³ */\r\n    plus(n1: NumberType, n2: NumberType) {\r\n        return new BigNumber(n1).plus(n2).toFixed();\r\n    }\r\n\r\n    /** ä¹æ³ */\r\n    multiplied(n1: NumberType, n2: NumberType) {\r\n        new BigNumber(n1).times(n2).toFixed();\r\n    }\r\n\r\n    /** åæ³ */\r\n    minus(n1: NumberType, n2: NumberType) {\r\n        return new BigNumber(n1).minus(n2).toFixed();\r\n    }\r\n\r\n    /** æ¯å¦ç¸ç­ */\r\n    eq(n1: NumberType, n2: NumberType): boolean {\r\n        return new BigNumber(n1).eq(n2);\r\n    }\r\n\r\n    lt(n1: NumberType, n2: NumberType): boolean {\r\n        return new BigNumber(n1).lt(n2);\r\n    }\r\n    gt(n1: NumberType, n2: NumberType): boolean {\r\n        return new BigNumber(n1).gt(n2);\r\n    }\r\n\r\n    toNumber(n1: string) {\r\n        return new BigNumber(n1).toNumber();\r\n    }\r\n\r\n    toFixed(n1: string, precision: number = 0) {\r\n        return new BigNumber(n1).toFixed(precision);\r\n    }\r\n\r\n    convertCurrency(money) {\r\n        // æ±å­çæ°å­\r\n        const cnNums = new Array('é¶', 'å£¹', 'è´°', 'å', 'è', 'ä¼', 'é', 'æ', 'æ', 'ç');\r\n        // åºæ¬åä½\r\n        const cnIntRadice = new Array('', 'æ¾', 'ä½°', 'ä»');\r\n        // å¯¹åºæ´æ°é¨åæ©å±åä½\r\n        const cnIntUnits = new Array('', 'ä¸', 'äº¿', 'å');\r\n        // å¯¹åºå°æ°é¨ååä½\r\n        const cnDecUnits = new Array('è§', 'å', 'æ¯«', 'å');\r\n        // æ´æ°éé¢æ¶åé¢è·çå­ç¬¦\r\n        const cnInteger = 'æ´';\r\n        // æ´åå®ä»¥åçåä½\r\n        const cnIntLast = 'å';\r\n        // æå¤§å¤ççæ°å­\r\n        const maxNum = 999999999999999.9999;\r\n        // éé¢æ´æ°é¨å\r\n        let integerNum;\r\n        // éé¢å°æ°é¨å\r\n        let decimalNum;\r\n        // è¾åºçä¸­æéé¢å­ç¬¦ä¸²\r\n        let chineseStr = '';\r\n        // åç¦»éé¢åç¨çæ°ç»ï¼é¢å®ä¹\r\n        let parts;\r\n        if (money == '') { return ''; }\r\n        money = parseFloat(money);\r\n        if (money >= maxNum) {\r\n            // è¶åºæå¤§å¤çæ°å­\r\n            return '';\r\n        }\r\n        if (money === 0) {\r\n            chineseStr = cnNums[0] + cnIntLast + cnInteger;\r\n            return chineseStr;\r\n        }\r\n        // è½¬æ¢ä¸ºå­ç¬¦ä¸²\r\n        money = money.toString();\r\n        if (money.indexOf('.') === -1) {\r\n            integerNum = money;\r\n            decimalNum = '';\r\n        } else {\r\n            parts = money.split('.');\r\n            integerNum = parts[0];\r\n            decimalNum = parts[1].substr(0, 4);\r\n        }\r\n        // è·åæ´åé¨åè½¬æ¢\r\n        if (parseInt(integerNum, 10) > 0) {\r\n            let zeroCount = 0;\r\n            const IntLen = integerNum.length;\r\n            for (let i = 0; i < IntLen; i++) {\r\n                const n = integerNum.substr(i, 1);\r\n                const p = IntLen - i - 1;\r\n                const q = p / 4;\r\n                const m = p % 4;\r\n                if (n == '0') {\r\n                    zeroCount++;\r\n                } else {\r\n                    if (zeroCount > 0) {\r\n                        chineseStr += cnNums[0];\r\n                    }\r\n                    // å½é¶\r\n                    zeroCount = 0;\r\n                    chineseStr += cnNums[parseInt(n, 10)] + cnIntRadice[m];\r\n                }\r\n                if (m == 0 && zeroCount < 4) {\r\n                    chineseStr += cnIntUnits[q];\r\n                }\r\n            }\r\n            chineseStr += cnIntLast;\r\n        }\r\n        // å°æ°é¨å\r\n        if (decimalNum !== '') {\r\n            const decLen = decimalNum.length;\r\n            for (let i = 0; i < decLen; i++) {\r\n                let n = decimalNum.substr(i, 1);\r\n                if (n !== '0') {\r\n                    chineseStr += cnNums[Number(n)] + cnDecUnits[i];\r\n                }\r\n            }\r\n        }\r\n        if (chineseStr === '') {\r\n            chineseStr += cnNums[0] + cnIntLast + cnInteger;\r\n        } else if (decimalNum === '') {\r\n            chineseStr += cnInteger;\r\n        }\r\n        return chineseStr;\r\n\r\n    }\r\n\r\n    private _unformat(val, opts) {\r\n        val = (val === null || val === undefined || isNaN(val)) ? '' : String(val);\r\n        if (opts) {\r\n            // å»åç¼\r\n            if (opts.prefix) {\r\n                val = val.replace(new RegExp(opts.prefix, 'g'), '');\r\n            }\r\n\r\n            // å»åç¼\r\n            if (opts.suffix) {\r\n                val = val.replace(new RegExp(opts.suffix, 'g'), '');\r\n            }\r\n\r\n            // å»æååä½åéç¬¦\r\n            val = val.replace(/\\,/g, '');\r\n        }\r\n        return val;\r\n    }\r\n\r\n    private formatValue(value, opts: any) {\r\n        const bignum = new BigNumber(value);\r\n        const fmt = {\r\n            prefix: opts.prefix || '',\r\n            suffix: opts.suffix || '',\r\n            decimalSeparator: opts.decimal || '.',\r\n            groupSeparator: opts.thousand || '',\r\n            groupSize: 3\r\n        };\r\n\r\n        if (bignum.isNaN()) {\r\n            return '';\r\n        }\r\n\r\n        let precision = opts.precision || 0;\r\n        precision = Number(precision);\r\n\r\n        return bignum.toFormat(precision, fmt);\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { NumberHelperService } from './numer-helper.service';\r\n\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [],\r\n})\r\nexport class NumberHelperModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: NumberHelperModule,\r\n            providers: [\r\n                NumberHelperService\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}
