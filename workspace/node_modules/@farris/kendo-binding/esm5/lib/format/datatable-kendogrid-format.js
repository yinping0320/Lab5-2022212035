import { Injectable } from '@angular/core';
import { DateTimeHelperService } from '@farris/ui-common/date';
import { NumberHelperService } from '@farris/ui-common/number';
import { DateUtil } from '@farris/devkit';
var FarrisKendoGridFormatService = /** @class */ (function () {
    function FarrisKendoGridFormatService(dateService, numberService) {
        this.dateService = dateService;
        this.numberService = numberService;
    }
    /**
     * 列格式化 方法
     * @param dataItem  行数据
     * @param column 列对象
     */
    FarrisKendoGridFormatService.prototype.getColumnFormat = function (dataItem, column) {
        var value = this.getValue(dataItem, column['dataField']);
        // 没有设置行编辑器
        var type = column['dataType'];
        if (type === 'enum') {
            return this.getEnumText(value, column);
        }
        else if (type === 'boolean') {
            return value ? '是' : '否';
        }
        else if (type === 'date') {
            return this.getFormatDate(value, column);
        }
        else if (type === 'number') {
            return this.getFormatNumber(value, column);
        }
        else {
            // 格式化多行文本  和string
            return this.getMultiText(value, column);
        }
    };
    /**
     * 根据id获取value
     * @param dataItem  行数据
     * @param field id,也可能是name.Name这种形式(关联对象id或者udt)
     */
    FarrisKendoGridFormatService.prototype.getValue = function (dataItem, field) {
        var index = field.indexOf('.');
        if (index < 0) {
            return dataItem[field];
        }
        var fields = field.split('.');
        // field字符串组合
        var a = fields.reduce(function (result, next) {
            return result[next];
        }, dataItem);
        return a;
    };
    /**
     * 枚举值格式化
     */
    FarrisKendoGridFormatService.prototype.getEnumText = function (value, column) {
        var enumData = column.enumData;
        if (!enumData) {
            return;
        }
        var tempColumnText;
        enumData.forEach(function (ele) {
            if (ele.value === value) {
                tempColumnText = ele.name;
            }
        });
        return tempColumnText;
    };
    /**
     * 日期格式化
     * @param value  单元格值
     * @param column 列对象
     */
    FarrisKendoGridFormatService.prototype.getFormatDate = function (value, column) {
        if (DateUtil.isEmptyDateString(value) === true) {
            return '';
        }
        var dateFormat = column.format;
        if (!dateFormat) {
            return value;
        }
        return this.dateService.formatTo(value, dateFormat);
    };
    /**
     * 数字格式化
     * @param value  单元格值
     * @param column 列对象
     * @todo 数字格式化还不完善  这个只是金额形式的格式化;   初始化value===null时,应该显示为'' 这个还没有
     */
    FarrisKendoGridFormatService.prototype.getFormatNumber = function (value, column) {
        var precision;
        if (column && column.format) {
            precision = parseInt(column.format.substr(1), 10);
        }
        else if (column && column.editor) {
            precision = column.editor.precision;
        }
        if (isNaN(precision)) {
            precision = 2;
        }
        if (!value && value !== 0) {
            return '';
        }
        var opts = {
            prefix: column.prefix ? column.prefix : '',
            suffix: column.suffix ? column.suffix : '',
            precision: precision,
            thousand: ',',
            stripZeros: false,
        };
        return this.numberService.formatMoney(value, opts);
    };
    /**
     * 多行文本格式化 shift+enter换行  失去焦点保留原格式
     * @param value  单元格值
     * @param column 列对象
     */
    FarrisKendoGridFormatService.prototype.getMultiText = function (value, column) {
        var strValue = value;
        if (strValue !== '' && !strValue) {
            strValue = '';
        }
        if (typeof strValue !== 'string') {
            var valueType = typeof strValue;
            throw new Error(valueType + "\u7C7B\u578B\u503C\u4E0D\u5408\u6CD5\uFF0C\u65E0\u6CD5\u8FDB\u884C\u683C\u5F0F\u5316");
        }
        // 防止xss
        strValue = strValue.replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/\"/g, '&quot;')
            .replace(/\'/g, '&#39;')
            .replace(/\//g, '&#x2F;');
        // 如果是多行文本框  保留格式
        if (column.editor && column.editor.type === 'MultiTextBox') {
            var INDEX = strValue.indexOf('\n');
            if (INDEX > -1) {
                return strValue.replace(/\n/g, '<br>');
            }
            return strValue;
        }
        // 若为string
        return strValue;
    };
    FarrisKendoGridFormatService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FarrisKendoGridFormatService.ctorParameters = function () { return [
        { type: DateTimeHelperService },
        { type: NumberHelperService }
    ]; };
    return FarrisKendoGridFormatService;
}());
export { FarrisKendoGridFormatService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLWtlbmRvZ3JpZC1mb3JtYXQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZm9ybWF0L2RhdGF0YWJsZS1rZW5kb2dyaWQtZm9ybWF0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTFDO0lBRUksc0NBQW9CLFdBQWtDLEVBQVUsYUFBa0M7UUFBOUUsZ0JBQVcsR0FBWCxXQUFXLENBQXVCO1FBQVUsa0JBQWEsR0FBYixhQUFhLENBQXFCO0lBQ2xHLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsc0RBQWUsR0FBZixVQUFnQixRQUFhLEVBQUUsTUFBVztRQUN0QyxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztRQUMzRCxXQUFXO1FBQ1gsSUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hDLElBQUksSUFBSSxLQUFLLE1BQU0sRUFBRTtZQUNqQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1NBQzFDO2FBQU0sSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQzNCLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztTQUM1QjthQUFNLElBQUksSUFBSSxLQUFLLE1BQU0sRUFBRTtZQUN4QixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLE1BQU0s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O2dCQUNaLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7YUFDMUM7WUFDRCxPQUFPLFFBQVEsQ0FBQztTQUNuQjtRQUNELFdBQVc7UUFDWCxPQUFPLFFBQVEsQ0FBQztJQUNwQixDQUFDOztnQkE5SUosVUFBVTs7OztnQkFKRixxQkFBcUI7Z0JBQ3JCLG1CQUFtQjs7SUFrSjVCLG1DQUFDO0NBQUEsQUEvSUQsSUErSUM7QUFDRCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0ZVRpbWVIZWxwZXJTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24vZGF0ZSc7XHJcbmltcG9ydCB7IE51bWJlckhlbHBlclNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi9udW1iZXInO1xyXG5pbXBvcnQgeyBEYXRlVXRpbCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuY2xhc3MgRmFycmlzS2VuZG9HcmlkRm9ybWF0U2VydmljZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRhdGVTZXJ2aWNlOiBEYXRlVGltZUhlbHBlclNlcnZpY2UsIHByaXZhdGUgbnVtYmVyU2VydmljZTogTnVtYmVySGVscGVyU2VydmljZSkge1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YiX5qC85byP5YyWIOaWueazlVxyXG4gICAgICogQHBhcmFtIGRhdGFJdGVtICDooYzmlbDmja5cclxuICAgICAqIEBwYXJhbSBjb2x1bW4g5YiX5a+56LGhXHJcbiAgICAgKi9cclxuICAgIGdldENvbHVtbkZvcm1hdChkYXRhSXRlbTogYW55LCBjb2x1bW46IGFueSkge1xyXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXRWYWx1ZShkYXRhSXRlbSwgY29sdW1uWydkYXRhRmllbGQnXSk7XHJcbiAgICAgICAgLy8g5rKh5pyJ6K6+572u6KGM57yW6L6R5ZmoXHJcbiAgICAgICAgY29uc3QgdHlwZSA9IGNvbHVtblsnZGF0YVR5cGUnXTtcclxuICAgICAgICBpZiAodHlwZSA9PT0gJ2VudW0nKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEVudW1UZXh0KHZhbHVlLCBjb2x1bW4pO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ2Jvb2xlYW4nKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA/ICfmmK8nIDogJ+WQpic7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnZGF0ZScpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Rm9ybWF0RGF0ZSh2YWx1ZSwgY29sdW1uKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEZvcm1hdE51bWJlcih2YWx1ZSwgY29sdW1uKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyDmoLzlvI/ljJblpJrooYzmlofmnKwgIOWSjHN0cmluZ1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRNdWx0aVRleHQodmFsdWUsIGNvbHVtbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5qC55o2uaWTojrflj5Z2YWx1ZVxyXG4gICAgICogQHBhcmFtIGRhdGFJdGVtICDooYzmlbDmja5cclxuICAgICAqIEBwYXJhbSBmaWVsZCBpZCzkuZ/lj6/og73mmK9uYW1lLk5hbWXov5nnp43lvaLlvI8o5YWz6IGU5a+56LGhaWTmiJbogIV1ZHQpXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ2V0VmFsdWUoZGF0YUl0ZW06IGFueSwgZmllbGQ6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IGluZGV4ID0gZmllbGQuaW5kZXhPZignLicpO1xyXG4gICAgICAgIGlmIChpbmRleCA8IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIGRhdGFJdGVtW2ZpZWxkXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZmllbGRzID0gZmllbGQuc3BsaXQoJy4nKTtcclxuICAgICAgICAvLyBmaWVsZOWtl+espuS4sue7hOWQiFxyXG4gICAgICAgIGNvbnN0IGEgPSBmaWVsZHMucmVkdWNlKChyZXN1bHQ6IGFueSwgbmV4dDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRbbmV4dF07XHJcbiAgICAgICAgfSwgZGF0YUl0ZW0pO1xyXG4gICAgICAgIHJldHVybiBhO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p6a5Li+5YC85qC85byP5YyWXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ2V0RW51bVRleHQodmFsdWU6IGFueSwgY29sdW1uOiBhbnkpIHtcclxuICAgICAgICBjb25zdCBlbnVtRGF0YSA9IChjb2x1bW4gYXMgYW55KS5lbnVtRGF0YTtcclxuICAgICAgICBpZiAoIWVudW1EYXRhKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHRlbXBDb2x1bW5UZXh0OiBhbnk7XHJcbiAgICAgICAgZW51bURhdGEuZm9yRWFjaCgoZWxlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYgKGVsZS52YWx1ZSA9PT0gdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRlbXBDb2x1bW5UZXh0ID0gZWxlLm5hbWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGVtcENvbHVtblRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDml6XmnJ/moLzlvI/ljJZcclxuICAgICAqIEBwYXJhbSB2YWx1ZSAg5Y2V5YWD5qC85YC8XHJcbiAgICAgKiBAcGFyYW0gY29sdW1uIOWIl+WvueixoVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0Rm9ybWF0RGF0ZSh2YWx1ZTogc3RyaW5nLCBjb2x1bW46IGFueSk6IHN0cmluZyB7XHJcblxyXG4gICAgICAgIGlmIChEYXRlVXRpbC5pc0VtcHR5RGF0ZVN0cmluZyh2YWx1ZSkgPT09IHRydWUpIHtcclxuICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGRhdGVGb3JtYXQgPSAoY29sdW1uIGFzIGFueSkuZm9ybWF0O1xyXG4gICAgICAgIGlmICghZGF0ZUZvcm1hdCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmRhdGVTZXJ2aWNlLmZvcm1hdFRvKHZhbHVlLCBkYXRlRm9ybWF0KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaVsOWtl+agvOW8j+WMllxyXG4gICAgICogQHBhcmFtIHZhbHVlICDljZXlhYPmoLzlgLxcclxuICAgICAqIEBwYXJhbSBjb2x1bW4g5YiX5a+56LGhXHJcbiAgICAgKiBAdG9kbyDmlbDlrZfmoLzlvI/ljJbov5jkuI3lrozlloQgIOi/meS4quWPquaYr+mHkemineW9ouW8j+eahOagvOW8j+WMljsgICDliJ3lp4vljJZ2YWx1ZT09PW51bGzml7Ys5bqU6K+l5pi+56S65Li6Jycg6L+Z5Liq6L+Y5rKh5pyJXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZ2V0Rm9ybWF0TnVtYmVyKHZhbHVlOiBhbnksIGNvbHVtbjogYW55KSB7XHJcbiAgICAgICAgbGV0IHByZWNpc2lvbjtcclxuICAgICAgICBpZiAoY29sdW1uICYmIGNvbHVtbi5mb3JtYXQpIHtcclxuICAgICAgICAgICAgcHJlY2lzaW9uID0gcGFyc2VJbnQoY29sdW1uLmZvcm1hdC5zdWJzdHIoMSksIDEwKTtcclxuICAgICAgICB9IGVsc2UgaWYgKGNvbHVtbiAmJiBjb2x1bW4uZWRpdG9yKSB7XHJcbiAgICAgICAgICAgIHByZWNpc2lvbiA9IGNvbHVtbi5lZGl0b3IucHJlY2lzaW9uO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNOYU4ocHJlY2lzaW9uKSkge1xyXG4gICAgICAgICAgICBwcmVjaXNpb24gPSAyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXZhbHVlICYmIHZhbHVlICE9PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IG9wdHMgPSB7XHJcbiAgICAgICAgICAgIHByZWZpeDogY29sdW1uLnByZWZpeCA/IGNvbHVtbi5wcmVmaXggOiAnJyxcclxuICAgICAgICAgICAgc3VmZml4OiBjb2x1bW4uc3VmZml4ID8gY29sdW1uLnN1ZmZpeCA6ICcnLFxyXG4gICAgICAgICAgICBwcmVjaXNpb246IHByZWNpc2lvbixcclxuICAgICAgICAgICAgdGhvdXNhbmQ6ICcsJyxcclxuICAgICAgICAgICAgc3RyaXBaZXJvczogZmFsc2UsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gdGhpcy5udW1iZXJTZXJ2aWNlLmZvcm1hdE1vbmV5KHZhbHVlLCBvcHRzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWkmuihjOaWh+acrOagvOW8j+WMliBzaGlmdCtlbnRlcuaNouihjCAg5aSx5Y6754Sm54K55L+d55WZ5Y6f5qC85byPXHJcbiAgICAgKiBAcGFyYW0gdmFsdWUgIOWNleWFg+agvOWAvFxyXG4gICAgICogQHBhcmFtIGNvbHVtbiDliJflr7nosaFcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBnZXRNdWx0aVRleHQodmFsdWU6IGFueSwgY29sdW1uOiBhbnkpIHtcclxuICAgICAgICBsZXQgc3RyVmFsdWUgPSB2YWx1ZTtcclxuICAgICAgICBpZiAoc3RyVmFsdWUgIT09ICcnICYmICFzdHJWYWx1ZSkge1xyXG4gICAgICAgICAgICBzdHJWYWx1ZSA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodHlwZW9mIHN0clZhbHVlICE9PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBjb25zdCB2YWx1ZVR5cGUgPSB0eXBlb2Ygc3RyVmFsdWU7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHt2YWx1ZVR5cGV957G75Z6L5YC85LiN5ZCI5rOV77yM5peg5rOV6L+b6KGM5qC85byP5YyWYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOmYsuatonhzc1xyXG4gICAgICAgIHN0clZhbHVlID0gc3RyVmFsdWUucmVwbGFjZSgvJi9nLCAnJmFtcDsnKVxyXG4gICAgICAgICAgICAucmVwbGFjZSgvPC9nLCAnJmx0OycpXHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC8+L2csICcmZ3Q7JylcclxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcXCIvZywgJyZxdW90OycpXHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXCcvZywgJyYjMzk7JylcclxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcLy9nLCAnJiN4MkY7Jyk7XHJcbiAgICAgICAgLy8g5aaC5p6c5piv5aSa6KGM5paH5pys5qGGICDkv53nlZnmoLzlvI9cclxuICAgICAgICBpZiAoY29sdW1uLmVkaXRvciAmJiBjb2x1bW4uZWRpdG9yLnR5cGUgPT09ICdNdWx0aVRleHRCb3gnKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IElOREVYID0gc3RyVmFsdWUuaW5kZXhPZignXFxuJyk7XHJcbiAgICAgICAgICAgIGlmIChJTkRFWCA+IC0xKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RyVmFsdWUucmVwbGFjZSgvXFxuL2csICc8YnI+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHN0clZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDoi6XkuLpzdHJpbmdcclxuICAgICAgICByZXR1cm4gc3RyVmFsdWU7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IHsgRmFycmlzS2VuZG9HcmlkRm9ybWF0U2VydmljZSB9O1xyXG4iXX0=