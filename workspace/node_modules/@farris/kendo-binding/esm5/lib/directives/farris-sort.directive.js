import { Directive, Input } from '@angular/core';
var FarrisSortDirective = /** @class */ (function () {
    function FarrisSortDirective() {
    }
    FarrisSortDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farrisSort]'
                },] }
    ];
    return FarrisSortDirective;
}());
export { FarrisSortDirective };
var FarrisTextareaEditDirective = /** @class */ (function () {
    function FarrisTextareaEditDirective() {
    }
    FarrisTextareaEditDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-textarea-edit]'
                },] }
    ];
    return FarrisTextareaEditDirective;
}());
export { FarrisTextareaEditDirective };
var FarrisDynamicColumnFormatDirective = /** @class */ (function () {
    function FarrisDynamicColumnFormatDirective() {
    }
    FarrisDynamicColumnFormatDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farrisDynamicColumnFormat]'
                },] }
    ];
    return FarrisDynamicColumnFormatDirective;
}());
export { FarrisDynamicColumnFormatDirective };
var FarrisEditEnterDirective = /** @class */ (function () {
    function FarrisEditEnterDirective() {
    }
    FarrisEditEnterDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-enter-edit]'
                },] }
    ];
    FarrisEditEnterDirective.propDecorators = {
        farrisForm: [{ type: Input, args: ['form-group',] }]
    };
    return FarrisEditEnterDirective;
}());
export { FarrisEditEnterDirective };
var FarrisTreeTableFormatDirective = /** @class */ (function () {
    function FarrisTreeTableFormatDirective() {
    }
    FarrisTreeTableFormatDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farrisTreeTableFormat]'
                },] }
    ];
    return FarrisTreeTableFormatDirective;
}());
export { FarrisTreeTableFormatDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzLXNvcnQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9rZW5kby1iaW5kaW5nLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvZmFycmlzLXNvcnQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBRTNEO0lBQUE7SUFLQSxDQUFDOztnQkFMQSxTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGNBQWM7aUJBQzNCOztJQUdELDBCQUFDO0NBQUEsQUFMRCxJQUtDO1NBRlksbUJBQW1CO0FBSWhDO0lBQUE7SUFLQSxDQUFDOztnQkFMQSxTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtpQkFDckM7O0lBR0Qsa0NBQUM7Q0FBQSxBQUxELElBS0M7U0FGWSwyQkFBMkI7QUFJeEM7SUFBQTtJQUtBLENBQUM7O2dCQUxBLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsNkJBQTZCO2lCQUMxQzs7SUFHRCx5Q0FBQztDQUFBLEFBTEQsSUFLQztTQUZZLGtDQUFrQztBQUkvQztJQUFBO0lBS0EsQ0FBQzs7Z0JBTEEsU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxxQkFBcUI7aUJBQ2xDOzs7NkJBRUksS0FBSyxTQUFDLFlBQVk7O0lBQ3ZCLCtCQUFDO0NBQUEsQUFMRCxJQUtDO1NBRlksd0JBQXdCO0FBSXJDO0lBQUE7SUFLQSxDQUFDOztnQkFMQSxTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHlCQUF5QjtpQkFDdEM7O0lBR0QscUNBQUM7Q0FBQSxBQUxELElBS0M7U0FGWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGcmFtZUNvbnRleHQsIEJpbmRpbmdEYXRhLCBWaWV3TW9kZWwgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbZmFycmlzU29ydF0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGYXJyaXNTb3J0RGlyZWN0aXZlIHtcclxuXHJcbn1cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbZmFycmlzLXRleHRhcmVhLWVkaXRdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzVGV4dGFyZWFFZGl0RGlyZWN0aXZlIHtcclxuXHJcbn1cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbZmFycmlzRHluYW1pY0NvbHVtbkZvcm1hdF0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGYXJyaXNEeW5hbWljQ29sdW1uRm9ybWF0RGlyZWN0aXZlIHtcclxuXHJcbn1cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbZmFycmlzLWVudGVyLWVkaXRdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzRWRpdEVudGVyRGlyZWN0aXZlIHtcclxuICAgIEBJbnB1dCgnZm9ybS1ncm91cCcpIGZhcnJpc0Zvcm06IGFueTtcclxufVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogJ1tmYXJyaXNUcmVlVGFibGVGb3JtYXRdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzVHJlZVRhYmxlRm9ybWF0RGlyZWN0aXZlIHtcclxuXHJcbn1cclxuXHJcbiJdfQ==