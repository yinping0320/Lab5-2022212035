import * as tslib_1 from "tslib";
import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { FilterComponent } from '@farris/ui-filter';
import { ComponentRef } from "./component-ref";
var FilterComponentRefDirective = /** @class */ (function (_super) {
    tslib_1.__extends(FilterComponentRefDirective, _super);
    function FilterComponentRefDirective(injector, component, elementRef, frameContext) {
        var _this = _super.call(this, frameContext, elementRef) || this;
        _this.injector = injector;
        _this.component = component;
        _this.elementRef = elementRef;
        _this.frameContext = frameContext;
        return _this;
    }
    FilterComponentRefDirective.prototype.ngAfterViewInit = function () {
        this.tryAddComponent(this.component);
    };
    FilterComponentRefDirective.prototype.ngOnInit = function () {
        this.addComponent(this.component);
    };
    FilterComponentRefDirective.prototype.ngOnDestroy = function () {
    };
    FilterComponentRefDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[filterRef]'
                },] }
    ];
    /** @nocollapse */
    FilterComponentRefDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: FilterComponent },
        { type: ElementRef },
        { type: FrameContext }
    ]; };
    return FilterComponentRefDirective;
}(ComponentRef));
export { FilterComponentRefDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWNvbXBvbmVudC1yZWYuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9rZW5kby1iaW5kaW5nLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvY29tcG9uZW50LXJlZi9maWx0ZXItY29tcG9uZW50LXJlZi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2xHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DO0lBR2lELHVEQUFZO0lBQzNELHFDQUFvQixRQUFrQixFQUFVLFNBQTBCLEVBQVMsVUFBc0IsRUFBUyxZQUEwQjtRQUE1SSxZQUNFLGtCQUFNLFlBQVksRUFBRSxVQUFVLENBQUMsU0FDaEM7UUFGbUIsY0FBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLGVBQVMsR0FBVCxTQUFTLENBQWlCO1FBQVMsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFBUyxrQkFBWSxHQUFaLFlBQVksQ0FBYzs7SUFFNUksQ0FBQztJQUNELHFEQUFlLEdBQWY7UUFDRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBQ0QsOENBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFDRCxpREFBVyxHQUFYO0lBQ0EsQ0FBQzs7Z0JBZEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO2lCQUN4Qjs7OztnQkFQOEMsUUFBUTtnQkFFOUMsZUFBZTtnQkFGVyxVQUFVO2dCQUNwQyxZQUFZOztJQW9CckIsa0NBQUM7Q0FBQSxBQWhCRCxDQUdpRCxZQUFZLEdBYTVEO1NBYlksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3RvciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGcmFtZUNvbnRleHQgfSBmcm9tIFwiQGZhcnJpcy9kZXZraXRcIjtcclxuaW1wb3J0IHsgRmlsdGVyQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1maWx0ZXInO1xyXG5pbXBvcnQgeyBDb21wb25lbnRSZWYgfSBmcm9tIFwiLi9jb21wb25lbnQtcmVmXCI7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tmaWx0ZXJSZWZdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmlsdGVyQ29tcG9uZW50UmVmRGlyZWN0aXZlIGV4dGVuZHMgQ29tcG9uZW50UmVmIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3ksIEFmdGVyVmlld0luaXQge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBwcml2YXRlIGNvbXBvbmVudDogRmlsdGVyQ29tcG9uZW50LCBwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcHVibGljIGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KSB7XHJcbiAgICBzdXBlcihmcmFtZUNvbnRleHQsIGVsZW1lbnRSZWYpO1xyXG4gIH1cclxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnRyeUFkZENvbXBvbmVudCh0aGlzLmNvbXBvbmVudCk7XHJcbiAgfVxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5hZGRDb21wb25lbnQodGhpcy5jb21wb25lbnQpO1xyXG4gIH1cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICB9XHJcblxyXG59Il19