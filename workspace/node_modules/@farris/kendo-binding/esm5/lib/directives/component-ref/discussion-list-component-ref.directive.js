import * as tslib_1 from "tslib";
import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { DiscussionListComponent } from '@farris/discussion-group';
import { ComponentRef } from "./component-ref";
var DiscussionListComponentRefDirective = /** @class */ (function (_super) {
    tslib_1.__extends(DiscussionListComponentRefDirective, _super);
    function DiscussionListComponentRefDirective(injector, component, elementRef, frameContext) {
        var _this = _super.call(this, frameContext, elementRef) || this;
        _this.injector = injector;
        _this.component = component;
        _this.elementRef = elementRef;
        _this.frameContext = frameContext;
        return _this;
    }
    DiscussionListComponentRefDirective.prototype.ngAfterViewInit = function () {
        this.tryAddComponent(this.component);
    };
    DiscussionListComponentRefDirective.prototype.ngOnInit = function () {
        this.addComponent(this.component);
    };
    DiscussionListComponentRefDirective.prototype.ngOnDestroy = function () {
    };
    DiscussionListComponentRefDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[discussionListRef]'
                },] }
    ];
    /** @nocollapse */
    DiscussionListComponentRefDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: DiscussionListComponent },
        { type: ElementRef },
        { type: FrameContext }
    ]; };
    return DiscussionListComponentRefDirective;
}(ComponentRef));
export { DiscussionListComponentRefDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY3Vzc2lvbi1saXN0LWNvbXBvbmVudC1yZWYuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9rZW5kby1iaW5kaW5nLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvY29tcG9uZW50LXJlZi9kaXNjdXNzaW9uLWxpc3QtY29tcG9uZW50LXJlZi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2xHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0M7SUFHeUQsK0RBQVk7SUFDbkUsNkNBQW9CLFFBQWtCLEVBQVUsU0FBa0MsRUFBUyxVQUFzQixFQUFTLFlBQTBCO1FBQXBKLFlBQ0Usa0JBQU0sWUFBWSxFQUFFLFVBQVUsQ0FBQyxTQUNoQztRQUZtQixjQUFRLEdBQVIsUUFBUSxDQUFVO1FBQVUsZUFBUyxHQUFULFNBQVMsQ0FBeUI7UUFBUyxnQkFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFTLGtCQUFZLEdBQVosWUFBWSxDQUFjOztJQUVwSixDQUFDO0lBQ0QsNkRBQWUsR0FBZjtRQUNFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFDRCxzREFBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUNELHlEQUFXLEdBQVg7SUFDQSxDQUFDOztnQkFkRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtpQkFDaEM7Ozs7Z0JBUDhDLFFBQVE7Z0JBRTlDLHVCQUF1QjtnQkFGRyxVQUFVO2dCQUNwQyxZQUFZOztJQW9CckIsMENBQUM7Q0FBQSxBQWhCRCxDQUd5RCxZQUFZLEdBYXBFO1NBYlksbUNBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3RvciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGcmFtZUNvbnRleHQgfSBmcm9tIFwiQGZhcnJpcy9kZXZraXRcIjtcclxuaW1wb3J0IHsgRGlzY3Vzc2lvbkxpc3RDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL2Rpc2N1c3Npb24tZ3JvdXAnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRSZWYgfSBmcm9tIFwiLi9jb21wb25lbnQtcmVmXCI7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tkaXNjdXNzaW9uTGlzdFJlZl0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEaXNjdXNzaW9uTGlzdENvbXBvbmVudFJlZkRpcmVjdGl2ZSBleHRlbmRzIENvbXBvbmVudFJlZiBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBBZnRlclZpZXdJbml0IHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBjb21wb25lbnQ6IERpc2N1c3Npb25MaXN0Q29tcG9uZW50LCBwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcHVibGljIGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KSB7XHJcbiAgICBzdXBlcihmcmFtZUNvbnRleHQsIGVsZW1lbnRSZWYpO1xyXG4gIH1cclxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnRyeUFkZENvbXBvbmVudCh0aGlzLmNvbXBvbmVudCk7XHJcbiAgfVxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5hZGRDb21wb25lbnQodGhpcy5jb21wb25lbnQpO1xyXG4gIH1cclxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICB9XHJcblxyXG59Il19