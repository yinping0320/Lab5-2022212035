import * as tslib_1 from "tslib";
import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { FarrisSectionComponent } from '@farris/ui-section';
import { ComponentRef } from "./component-ref";
var SectionComponentRefDirective = /** @class */ (function (_super) {
    tslib_1.__extends(SectionComponentRefDirective, _super);
    function SectionComponentRefDirective(injector, component, elementRef, frameContext) {
        var _this = _super.call(this, frameContext, elementRef) || this;
        _this.injector = injector;
        _this.component = component;
        _this.elementRef = elementRef;
        _this.frameContext = frameContext;
        return _this;
    }
    SectionComponentRefDirective.prototype.ngAfterViewInit = function () {
        this.tryAddComponent(this.component);
    };
    SectionComponentRefDirective.prototype.ngOnInit = function () {
        this.addComponent(this.component);
    };
    SectionComponentRefDirective.prototype.ngOnDestroy = function () {
    };
    SectionComponentRefDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[sectionRef]'
                },] }
    ];
    /** @nocollapse */
    SectionComponentRefDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: FarrisSectionComponent },
        { type: ElementRef },
        { type: FrameContext }
    ]; };
    return SectionComponentRefDirective;
}(ComponentRef));
export { SectionComponentRefDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VjdGlvbi1jb21wb25lbnQtcmVmLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMva2VuZG8tYmluZGluZy8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2NvbXBvbmVudC1yZWYvc2VjdGlvbi1jb21wb25lbnQtcmVmLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFpQixTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDbEcsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQztJQUdrRCx3REFBWTtJQUM1RCxzQ0FBb0IsUUFBa0IsRUFBVSxTQUFpQyxFQUFTLFVBQXNCLEVBQVMsWUFBMEI7UUFBbkosWUFDRSxrQkFBTSxZQUFZLEVBQUUsVUFBVSxDQUFDLFNBQ2hDO1FBRm1CLGNBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxlQUFTLEdBQVQsU0FBUyxDQUF3QjtRQUFTLGdCQUFVLEdBQVYsVUFBVSxDQUFZO1FBQVMsa0JBQVksR0FBWixZQUFZLENBQWM7O0lBRW5KLENBQUM7SUFDRCxzREFBZSxHQUFmO1FBQ0UsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUNELCtDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBQ0Qsa0RBQVcsR0FBWDtJQUNBLENBQUM7O2dCQWRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsY0FBYztpQkFDekI7Ozs7Z0JBUDhDLFFBQVE7Z0JBRTlDLHNCQUFzQjtnQkFGSSxVQUFVO2dCQUNwQyxZQUFZOztJQW9CckIsbUNBQUM7Q0FBQSxBQWhCRCxDQUdrRCxZQUFZLEdBYTdEO1NBYlksNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3RvciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGcmFtZUNvbnRleHQgfSBmcm9tIFwiQGZhcnJpcy9kZXZraXRcIjtcclxuaW1wb3J0IHsgRmFycmlzU2VjdGlvbkNvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktc2VjdGlvbic7XHJcbmltcG9ydCB7IENvbXBvbmVudFJlZiB9IGZyb20gXCIuL2NvbXBvbmVudC1yZWZcIjtcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW3NlY3Rpb25SZWZdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgU2VjdGlvbkNvbXBvbmVudFJlZkRpcmVjdGl2ZSBleHRlbmRzIENvbXBvbmVudFJlZiBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBBZnRlclZpZXdJbml0IHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBjb21wb25lbnQ6IEZhcnJpc1NlY3Rpb25Db21wb25lbnQsIHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwdWJsaWMgZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpIHtcclxuICAgIHN1cGVyKGZyYW1lQ29udGV4dCwgZWxlbWVudFJlZik7XHJcbiAgfVxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMudHJ5QWRkQ29tcG9uZW50KHRoaXMuY29tcG9uZW50KTtcclxuICB9XHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmFkZENvbXBvbmVudCh0aGlzLmNvbXBvbmVudCk7XHJcbiAgfVxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbn0iXX0=