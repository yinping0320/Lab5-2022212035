import * as tslib_1 from "tslib";
import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { LookupGridComponent } from '@farris/ui-lookup';
import { ComponentRef } from "./component-ref";
var LookupGridComponentRefDirective = /** @class */ (function (_super) {
    tslib_1.__extends(LookupGridComponentRefDirective, _super);
    function LookupGridComponentRefDirective(injector, component, elementRef, frameContext) {
        var _this = _super.call(this, frameContext, elementRef) || this;
        _this.injector = injector;
        _this.component = component;
        _this.elementRef = elementRef;
        _this.frameContext = frameContext;
        return _this;
    }
    LookupGridComponentRefDirective.prototype.ngAfterViewInit = function () {
        this.tryAddComponent(this.component);
    };
    LookupGridComponentRefDirective.prototype.ngOnInit = function () {
        this.addComponent(this.component);
    };
    LookupGridComponentRefDirective.prototype.ngOnDestroy = function () {
    };
    LookupGridComponentRefDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[lookupGridRef]'
                },] }
    ];
    /** @nocollapse */
    LookupGridComponentRefDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: LookupGridComponent },
        { type: ElementRef },
        { type: FrameContext }
    ]; };
    return LookupGridComponentRefDirective;
}(ComponentRef));
export { LookupGridComponentRefDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLWdyaWQtY29tcG9uZW50LXJlZi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9jb21wb25lbnQtcmVmL2xvb2t1cC1ncmlkLWNvbXBvbmVudC1yZWYuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNsRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DO0lBR3FELDJEQUFZO0lBQy9ELHlDQUFvQixRQUFrQixFQUFVLFNBQThCLEVBQVMsVUFBc0IsRUFBUyxZQUEwQjtRQUFoSixZQUNFLGtCQUFNLFlBQVksRUFBRSxVQUFVLENBQUMsU0FDaEM7UUFGbUIsY0FBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLGVBQVMsR0FBVCxTQUFTLENBQXFCO1FBQVMsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFBUyxrQkFBWSxHQUFaLFlBQVksQ0FBYzs7SUFFaEosQ0FBQztJQUNELHlEQUFlLEdBQWY7UUFDRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBQ0Qsa0RBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFDRCxxREFBVyxHQUFYO0lBQ0EsQ0FBQzs7Z0JBZEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7aUJBQzVCOzs7O2dCQVA4QyxRQUFRO2dCQUU5QyxtQkFBbUI7Z0JBRk8sVUFBVTtnQkFDcEMsWUFBWTs7SUFvQnJCLHNDQUFDO0NBQUEsQUFoQkQsQ0FHcUQsWUFBWSxHQWFoRTtTQWJZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0b3IsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRnJhbWVDb250ZXh0IH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcbmltcG9ydCB7IExvb2t1cEdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWxvb2t1cCc7XHJcbmltcG9ydCB7IENvbXBvbmVudFJlZiB9IGZyb20gXCIuL2NvbXBvbmVudC1yZWZcIjtcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2xvb2t1cEdyaWRSZWZdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTG9va3VwR3JpZENvbXBvbmVudFJlZkRpcmVjdGl2ZSBleHRlbmRzIENvbXBvbmVudFJlZiBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBBZnRlclZpZXdJbml0IHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBjb21wb25lbnQ6IExvb2t1cEdyaWRDb21wb25lbnQsIHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwdWJsaWMgZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpIHtcclxuICAgIHN1cGVyKGZyYW1lQ29udGV4dCwgZWxlbWVudFJlZik7XHJcbiAgfVxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMudHJ5QWRkQ29tcG9uZW50KHRoaXMuY29tcG9uZW50KTtcclxuICB9XHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmFkZENvbXBvbmVudCh0aGlzLmNvbXBvbmVudCk7XHJcbiAgfVxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcbn0iXX0=