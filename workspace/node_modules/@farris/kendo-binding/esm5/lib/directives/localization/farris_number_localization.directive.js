import { Directive, Inject, Injector } from "@angular/core";
import { UserSettingsToken } from "@farris/devkit";
import { NumberSpinnerComponent } from '@farris/ui-number-spinner';
var FarrisNumberLocalizationDirective = /** @class */ (function () {
    function FarrisNumberLocalizationDirective(injector, userSettings, componentRef) {
        this.injector = injector;
        this.userSettings = userSettings;
        this.componentRef = componentRef;
    }
    FarrisNumberLocalizationDirective.prototype.ngOnInit = function () {
        this.localize();
    };
    FarrisNumberLocalizationDirective.prototype.localize = function () {
        return;
        // 涉及金额等问题，数字格式化不予处理
        if (this.userSettings && this.userSettings.numberFormat && this.componentRef) {
            var _a = this.userSettings.numberFormat || {}, _b = _a.negativeSign, negativeSign = _b === void 0 ? null : _b, _c = _a.numberDecimalDigits, numberDecimalDigits = _c === void 0 ? null : _c, _d = _a.numberDecimalSeparator, numberDecimalSeparator = _d === void 0 ? null : _d, _e = _a.numberGroupSeparator, numberGroupSeparator = _e === void 0 ? null : _e;
            // 负号
            if (negativeSign) {
                // this.componentRef.prefix = negativeSign;
            }
            // 小数位数
            if (numberDecimalDigits !== null) {
                this.componentRef.precision = numberDecimalDigits;
                this.componentRef.formatOptions['precision'] = numberDecimalDigits;
            }
            // 小数点符号
            if (numberDecimalSeparator !== null) {
                this.componentRef.decimalSeparator = numberDecimalSeparator;
                this.componentRef.formatOptions['decimalSeparator'] = numberDecimalSeparator;
            }
            // 千分位符号
            if (numberGroupSeparator !== null) {
                this.componentRef.groupSeparator = numberGroupSeparator;
                this.componentRef.formatOptions['groupSeparator'] = numberGroupSeparator;
            }
            this.componentRef.updateValue(this.componentRef.value);
        }
    };
    FarrisNumberLocalizationDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-number-localization]'
                },] }
    ];
    /** @nocollapse */
    FarrisNumberLocalizationDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: undefined, decorators: [{ type: Inject, args: [UserSettingsToken,] }] },
        { type: NumberSpinnerComponent }
    ]; };
    return FarrisNumberLocalizationDirective;
}());
export { FarrisNumberLocalizationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzX251bWJlcl9sb2NhbGl6YXRpb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9rZW5kby1iaW5kaW5nLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvbG9jYWxpemF0aW9uL2ZhcnJpc19udW1iZXJfbG9jYWxpemF0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFnQixpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ25FO0lBSUUsMkNBQW9CLFFBQWtCLEVBQXFDLFlBQTBCLEVBQVUsWUFBb0M7UUFBL0gsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFxQyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUF3QjtJQUVuSixDQUFDO0lBQ0Qsb0RBQVEsR0FBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBQ08sb0RBQVEsR0FBaEI7UUFDRSxPQUFPO1FBQ1Asb0JBQW9CO1FBQ3BCLElBQUksSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3RFLElBQUEseUNBQXNKLEVBQXBKLG9CQUFtQixFQUFuQix3Q0FBbUIsRUFBRSwyQkFBMEIsRUFBMUIsK0NBQTBCLEVBQUUsOEJBQTZCLEVBQTdCLGtEQUE2QixFQUFFLDRCQUEyQixFQUEzQixnREFBb0UsQ0FBQztZQUM3SixLQUFLO1lBQ0wsSUFBSSxZQUFZLEVBQUU7Z0JBQ2hCLDJDQUEyQzthQUM1QztZQUNELE9BQU87WUFDUCxJQUFJLG1CQUFtQixLQUFLLElBQUksRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLEdBQUcsbUJBQW1CLENBQUM7Z0JBQ2xELElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxHQUFHLG1CQUFtQixDQUFDO2FBQ3BFO1lBQ0QsUUFBUTtZQUNSLElBQUksc0JBQXNCLEtBQUssSUFBSSxFQUFFO2dCQUNuQyxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixHQUFHLHNCQUFzQixDQUFDO2dCQUM1RCxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLHNCQUFzQixDQUFDO2FBQzlFO1lBQ0QsUUFBUTtZQUNSLElBQUksb0JBQW9CLEtBQUssSUFBSSxFQUFFO2dCQUNqQyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsR0FBRyxvQkFBb0IsQ0FBQztnQkFDeEQsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxvQkFBb0IsQ0FBQzthQUMxRTtZQUNELElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDeEQ7SUFDSCxDQUFDOztnQkFwQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw4QkFBOEI7aUJBQ3pDOzs7O2dCQUwyQixRQUFRO2dEQU9PLE1BQU0sU0FBQyxpQkFBaUI7Z0JBTDFELHNCQUFzQjs7SUFzQy9CLHdDQUFDO0NBQUEsQUFyQ0QsSUFxQ0M7U0FsQ1ksaUNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbmplY3QsIEluamVjdG9yLCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBVc2VyU2V0dGluZ3MsIFVzZXJTZXR0aW5nc1Rva2VuIH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcbmltcG9ydCB7IE51bWJlclNwaW5uZXJDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLW51bWJlci1zcGlubmVyJztcclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6ICdbZmFycmlzLW51bWJlci1sb2NhbGl6YXRpb25dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzTnVtYmVyTG9jYWxpemF0aW9uRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgQEluamVjdChVc2VyU2V0dGluZ3NUb2tlbikgcHJpdmF0ZSB1c2VyU2V0dGluZ3M6IFVzZXJTZXR0aW5ncywgcHJpdmF0ZSBjb21wb25lbnRSZWY6IE51bWJlclNwaW5uZXJDb21wb25lbnQpIHtcclxuXHJcbiAgfVxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5sb2NhbGl6ZSgpO1xyXG4gIH1cclxuICBwcml2YXRlIGxvY2FsaXplKCkge1xyXG4gICAgcmV0dXJuO1xyXG4gICAgLy8g5raJ5Y+K6YeR6aKd562J6Zeu6aKY77yM5pWw5a2X5qC85byP5YyW5LiN5LqI5aSE55CGXHJcbiAgICBpZiAodGhpcy51c2VyU2V0dGluZ3MgJiYgdGhpcy51c2VyU2V0dGluZ3MubnVtYmVyRm9ybWF0ICYmIHRoaXMuY29tcG9uZW50UmVmKSB7XHJcbiAgICAgIGNvbnN0IHsgbmVnYXRpdmVTaWduID0gbnVsbCwgbnVtYmVyRGVjaW1hbERpZ2l0cyA9IG51bGwsIG51bWJlckRlY2ltYWxTZXBhcmF0b3IgPSBudWxsLCBudW1iZXJHcm91cFNlcGFyYXRvciA9IG51bGwgfSA9IHRoaXMudXNlclNldHRpbmdzLm51bWJlckZvcm1hdCB8fCB7fTtcclxuICAgICAgLy8g6LSf5Y+3XHJcbiAgICAgIGlmIChuZWdhdGl2ZVNpZ24pIHtcclxuICAgICAgICAvLyB0aGlzLmNvbXBvbmVudFJlZi5wcmVmaXggPSBuZWdhdGl2ZVNpZ247XHJcbiAgICAgIH1cclxuICAgICAgLy8g5bCP5pWw5L2N5pWwXHJcbiAgICAgIGlmIChudW1iZXJEZWNpbWFsRGlnaXRzICE9PSBudWxsKSB7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWYucHJlY2lzaW9uID0gbnVtYmVyRGVjaW1hbERpZ2l0cztcclxuICAgICAgICB0aGlzLmNvbXBvbmVudFJlZi5mb3JtYXRPcHRpb25zWydwcmVjaXNpb24nXSA9IG51bWJlckRlY2ltYWxEaWdpdHM7XHJcbiAgICAgIH1cclxuICAgICAgLy8g5bCP5pWw54K556ym5Y+3XHJcbiAgICAgIGlmIChudW1iZXJEZWNpbWFsU2VwYXJhdG9yICE9PSBudWxsKSB7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWYuZGVjaW1hbFNlcGFyYXRvciA9IG51bWJlckRlY2ltYWxTZXBhcmF0b3I7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWYuZm9ybWF0T3B0aW9uc1snZGVjaW1hbFNlcGFyYXRvciddID0gbnVtYmVyRGVjaW1hbFNlcGFyYXRvcjtcclxuICAgICAgfVxyXG4gICAgICAvLyDljYPliIbkvY3nrKblj7dcclxuICAgICAgaWYgKG51bWJlckdyb3VwU2VwYXJhdG9yICE9PSBudWxsKSB7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWYuZ3JvdXBTZXBhcmF0b3IgPSBudW1iZXJHcm91cFNlcGFyYXRvcjtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudFJlZi5mb3JtYXRPcHRpb25zWydncm91cFNlcGFyYXRvciddID0gbnVtYmVyR3JvdXBTZXBhcmF0b3I7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5jb21wb25lbnRSZWYudXBkYXRlVmFsdWUodGhpcy5jb21wb25lbnRSZWYudmFsdWUpO1xyXG4gICAgfVxyXG4gIH1cclxufSJdfQ==