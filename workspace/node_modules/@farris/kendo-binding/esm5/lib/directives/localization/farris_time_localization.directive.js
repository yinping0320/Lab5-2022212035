import { Directive, Inject, Injector } from "@angular/core";
import { UserSettingsToken } from "@farris/devkit";
import { TimePickerComponent } from '@farris/ui-time-picker';
var FarrisTimeLocalizationDirective = /** @class */ (function () {
    function FarrisTimeLocalizationDirective(injector, userSettings, componentRef) {
        this.injector = injector;
        this.userSettings = userSettings;
        this.componentRef = componentRef;
    }
    FarrisTimeLocalizationDirective.prototype.ngOnInit = function () {
        this.localize();
    };
    FarrisTimeLocalizationDirective.prototype.localize = function () {
        if (this.userSettings && this.componentRef) {
            var _a = this.userSettings.timeFormat, timeFormat = _a === void 0 ? null : _a;
            if (timeFormat) {
                this.componentRef.format = timeFormat;
            }
        }
    };
    FarrisTimeLocalizationDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-time-localization]'
                },] }
    ];
    /** @nocollapse */
    FarrisTimeLocalizationDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: undefined, decorators: [{ type: Inject, args: [UserSettingsToken,] }] },
        { type: TimePickerComponent }
    ]; };
    return FarrisTimeLocalizationDirective;
}());
export { FarrisTimeLocalizationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzX3RpbWVfbG9jYWxpemF0aW9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMva2VuZG8tYmluZGluZy8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2xvY2FsaXphdGlvbi9mYXJyaXNfdGltZV9sb2NhbGl6YXRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQWdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDakUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFN0Q7SUFJRSx5Q0FBb0IsUUFBa0IsRUFBcUMsWUFBMEIsRUFBVSxZQUFpQztRQUE1SCxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQXFDLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQVUsaUJBQVksR0FBWixZQUFZLENBQXFCO0lBRWhKLENBQUM7SUFDRCxrREFBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2xCLENBQUM7SUFDTyxrREFBUSxHQUFoQjtRQUNFLElBQUksSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ2xDLElBQUEsaUNBQWlCLEVBQWpCLHNDQUFpQixDQUF1QjtZQUNoRCxJQUFJLFVBQVUsRUFBRTtnQkFDZCxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sR0FBRyxVQUFVLENBQUM7YUFDdkM7U0FDRjtJQUNILENBQUM7O2dCQWpCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtpQkFDdkM7Ozs7Z0JBTjJCLFFBQVE7Z0RBUU8sTUFBTSxTQUFDLGlCQUFpQjtnQkFOMUQsbUJBQW1COztJQW9CNUIsc0NBQUM7Q0FBQSxBQWxCRCxJQWtCQztTQWZZLCtCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5qZWN0LCBJbmplY3RvciwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgVXNlclNldHRpbmdzLCBVc2VyU2V0dGluZ3NUb2tlbiB9IGZyb20gXCJAZmFycmlzL2RldmtpdFwiO1xyXG5pbXBvcnQgeyBUaW1lUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS10aW1lLXBpY2tlcic7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tmYXJyaXMtdGltZS1sb2NhbGl6YXRpb25dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzVGltZUxvY2FsaXphdGlvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIEBJbmplY3QoVXNlclNldHRpbmdzVG9rZW4pIHByaXZhdGUgdXNlclNldHRpbmdzOiBVc2VyU2V0dGluZ3MsIHByaXZhdGUgY29tcG9uZW50UmVmOiBUaW1lUGlja2VyQ29tcG9uZW50KSB7XHJcblxyXG4gIH1cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMubG9jYWxpemUoKTtcclxuICB9XHJcbiAgcHJpdmF0ZSBsb2NhbGl6ZSgpIHtcclxuICAgIGlmICh0aGlzLnVzZXJTZXR0aW5ncyAmJiB0aGlzLmNvbXBvbmVudFJlZikge1xyXG4gICAgICBjb25zdCB7IHRpbWVGb3JtYXQgPSBudWxsIH0gPSB0aGlzLnVzZXJTZXR0aW5ncztcclxuICAgICAgaWYgKHRpbWVGb3JtYXQpIHtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudFJlZi5mb3JtYXQgPSB0aW1lRm9ybWF0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59Il19