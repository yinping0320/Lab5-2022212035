import { Directive, ElementRef, Injector, Input } from '@angular/core';
var FarrisLabelModificationDirective = /** @class */ (function () {
    function FarrisLabelModificationDirective(injector, elementRef) {
        this.injector = injector;
        this.elementRef = elementRef;
    }
    FarrisLabelModificationDirective.prototype.ngOnInit = function () {
        if (typeof this.index !== 'number' || !this.elementRef) {
            return;
        }
        var nativeElement = this.elementRef.nativeElement;
        if (nativeElement) {
            var labelFor = nativeElement.getAttribute('for');
            if (labelFor) {
                this.elementRef.nativeElement.setAttribute('for', labelFor + "_" + this.index);
            }
        }
    };
    FarrisLabelModificationDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-label-modification]'
                },] }
    ];
    /** @nocollapse */
    FarrisLabelModificationDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: ElementRef }
    ]; };
    FarrisLabelModificationDirective.propDecorators = {
        index: [{ type: Input }]
    };
    return FarrisLabelModificationDirective;
}());
export { FarrisLabelModificationDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzX2xhYmVsX21vZGlmaWNhdGlvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9mYXJyaXNfbGFiZWxfbW9kaWZpY2F0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQy9FO0lBS0UsMENBQW9CLFFBQWtCLEVBQVUsVUFBc0I7UUFBbEQsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLGVBQVUsR0FBVixVQUFVLENBQVk7SUFBSSxDQUFDO0lBQzNFLG1EQUFRLEdBQVI7UUFDRSxJQUFJLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ3RELE9BQU87U0FDUjtRQUNELElBQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBQ3BELElBQUksYUFBYSxFQUFFO1lBQ2pCLElBQU0sUUFBUSxHQUFHLGFBQWEsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDbkQsSUFBSSxRQUFRLEVBQUU7Z0JBQ1osSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBSyxRQUFRLFNBQUksSUFBSSxDQUFDLEtBQU8sQ0FBQyxDQUFDO2FBQ2hGO1NBQ0Y7SUFDSCxDQUFDOztnQkFqQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7aUJBQ3hDOzs7O2dCQUgrQixRQUFRO2dCQUFwQixVQUFVOzs7d0JBSzNCLEtBQUs7O0lBZVIsdUNBQUM7Q0FBQSxBQW5CRCxJQW1CQztTQWhCWSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2ZhcnJpcy1sYWJlbC1tb2RpZmljYXRpb25dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzTGFiZWxNb2RpZmljYXRpb25EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpIGluZGV4OiBudW1iZXI7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikgeyB9XHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICBpZiAodHlwZW9mIHRoaXMuaW5kZXggIT09ICdudW1iZXInIHx8ICF0aGlzLmVsZW1lbnRSZWYpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3QgbmF0aXZlRWxlbWVudCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xyXG4gICAgaWYgKG5hdGl2ZUVsZW1lbnQpIHtcclxuICAgICAgY29uc3QgbGFiZWxGb3IgPSBuYXRpdmVFbGVtZW50LmdldEF0dHJpYnV0ZSgnZm9yJyk7XHJcbiAgICAgIGlmIChsYWJlbEZvcikge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnNldEF0dHJpYnV0ZSgnZm9yJywgYCR7bGFiZWxGb3J9XyR7dGhpcy5pbmRleH1gKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuIl19