import { Directive, Input, Renderer2, Injector, ElementRef } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
var FarrisSetFocusDirective = /** @class */ (function () {
    function FarrisSetFocusDirective(rd, injector, el) {
        this.rd = rd;
        this.injector = injector;
        this.el = el;
        this._state = new BehaviorSubject({});
    }
    Object.defineProperty(FarrisSetFocusDirective.prototype, "focusState", {
        set: function (value) {
            this._state.next(value);
        },
        enumerable: true,
        configurable: true
    });
    FarrisSetFocusDirective.prototype.ngOnInit = function () {
        var _this = this;
        this.selfEl = this.el.nativeElement;
        this._state.subscribe(function (data) {
            if (data === false && _this.selfEl) {
                if (_this.selfEl.nodeName.toLowerCase() === 'farris-html-editor') {
                    _this.setHtmlEditorFocus();
                }
                else {
                    _this.setFocus();
                }
            }
        });
    };
    /**
     * 设置一般输入框的默认焦点
     */
    FarrisSetFocusDirective.prototype.setFocus = function () {
        var input = this.selfEl.querySelectorAll('input');
        if (input.length) {
            input[0].focus();
        }
        else {
            this.selfEl.focus();
        }
    };
    /**
     * 设置html编辑器的默认焦点  总是在文本最后
     */
    FarrisSetFocusDirective.prototype.setHtmlEditorFocus = function () {
        // 富文本编辑器不是input
        var ediotrArea = this.selfEl.querySelector('div[contenteditable="true"]');
        //创建range  存在浏览器兼容性问题
        var range = window.getSelection();
        //range 选择obj下所有子内容
        range.selectAllChildren(ediotrArea);
        //光标移至最后
        range.collapseToEnd();
    };
    FarrisSetFocusDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[farris-set-focus]'
                },] }
    ];
    /** @nocollapse */
    FarrisSetFocusDirective.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: Injector },
        { type: ElementRef }
    ]; };
    FarrisSetFocusDirective.propDecorators = {
        focusState: [{ type: Input }]
    };
    return FarrisSetFocusDirective;
}());
export { FarrisSetFocusDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzLXNldC1mb2N1cy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9mYXJyaXMtc2V0LWZvY3VzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFVLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXZDO0lBV0ksaUNBQ1ksRUFBYSxFQUNiLFFBQWtCLEVBQ2xCLEVBQWM7UUFGZCxPQUFFLEdBQUYsRUFBRSxDQUFXO1FBQ2IsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixPQUFFLEdBQUYsRUFBRSxDQUFZO1FBTGxCLFdBQU0sR0FBeUIsSUFBSSxlQUFlLENBQUMsRUFBRSxDQUFDLENBQUM7SUFRL0QsQ0FBQztJQVpELHNCQUFhLCtDQUFVO2FBQXZCLFVBQXdCLEtBQWM7WUFDbEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUIsQ0FBQzs7O09BQUE7SUFZRCwwQ0FBUSxHQUFSO1FBQUEsaUJBV0M7UUFWRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQUEsSUFBSTtZQUN0QixJQUFJLElBQUksS0FBSyxLQUFLLElBQUksS0FBSSxDQUFDLE1BQU0sRUFBRTtnQkFDL0IsSUFBSSxLQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsS0FBSyxvQkFBb0IsRUFBRTtvQkFDN0QsS0FBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7aUJBQzdCO3FCQUFNO29CQUNILEtBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztpQkFDbkI7YUFDSjtRQUNMLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVEOztPQUVHO0lBQ0gsMENBQVEsR0FBUjtRQUNJLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDcEQsSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ2QsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFBO1NBQ25CO2FBQU07WUFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ3ZCO0lBQ0wsQ0FBQztJQUVEOztPQUVHO0lBQ0gsb0RBQWtCLEdBQWxCO1FBQ0ksZ0JBQWdCO1FBQ2hCLElBQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLDZCQUE2QixDQUFDLENBQUM7UUFDNUUscUJBQXFCO1FBQ3JCLElBQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNwQyxtQkFBbUI7UUFDbkIsS0FBSyxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3BDLFFBQVE7UUFDUixLQUFLLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7Z0JBeERKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsb0JBQW9CO2lCQUNqQzs7OztnQkFMMEIsU0FBUztnQkFBRSxRQUFRO2dCQUFVLFVBQVU7Ozs2QkFRN0QsS0FBSzs7SUFvRFYsOEJBQUM7Q0FBQSxBQXpERCxJQXlEQztTQXREWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBSZW5kZXJlcjIsIEluamVjdG9yLCBPbkluaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW2ZhcnJpcy1zZXQtZm9jdXNdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzU2V0Rm9jdXNEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAgIEBJbnB1dCgpIHNldCBmb2N1c1N0YXRlKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fc3RhdGUubmV4dCh2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIHNlbGZFbDogSFRNTEVsZW1lbnRcclxuICAgIHByaXZhdGUgX3N0YXRlOiBCZWhhdmlvclN1YmplY3Q8YW55PiA9IG5ldyBCZWhhdmlvclN1YmplY3Qoe30pO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgcmQ6IFJlbmRlcmVyMixcclxuICAgICAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcclxuICAgICAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmXHJcbiAgICApIHtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxmRWwgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5fc3RhdGUuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGF0YSA9PT0gZmFsc2UgJiYgdGhpcy5zZWxmRWwpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlbGZFbC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnZmFycmlzLWh0bWwtZWRpdG9yJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0SHRtbEVkaXRvckZvY3VzKCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Rm9jdXMoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7kuIDoiKzovpPlhaXmoYbnmoTpu5jorqTnhKbngrlcclxuICAgICAqL1xyXG4gICAgc2V0Rm9jdXMoKSB7XHJcbiAgICAgICAgY29uc3QgaW5wdXQgPSB0aGlzLnNlbGZFbC5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpO1xyXG4gICAgICAgIGlmIChpbnB1dC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgaW5wdXRbMF0uZm9jdXMoKVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZkVsLmZvY3VzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6K6+572uaHRtbOe8lui+keWZqOeahOm7mOiupOeEpueCuSAg5oC75piv5Zyo5paH5pys5pyA5ZCOXHJcbiAgICAgKi9cclxuICAgIHNldEh0bWxFZGl0b3JGb2N1cygpIHtcclxuICAgICAgICAvLyDlr4zmlofmnKznvJbovpHlmajkuI3mmK9pbnB1dFxyXG4gICAgICAgIGNvbnN0IGVkaW90ckFyZWEgPSB0aGlzLnNlbGZFbC5xdWVyeVNlbGVjdG9yKCdkaXZbY29udGVudGVkaXRhYmxlPVwidHJ1ZVwiXScpO1xyXG4gICAgICAgIC8v5Yib5bu6cmFuZ2UgIOWtmOWcqOa1j+iniOWZqOWFvOWuueaAp+mXrumimFxyXG4gICAgICAgIGNvbnN0IHJhbmdlID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xyXG4gICAgICAgIC8vcmFuZ2Ug6YCJ5oupb2Jq5LiL5omA5pyJ5a2Q5YaF5a65XHJcbiAgICAgICAgcmFuZ2Uuc2VsZWN0QWxsQ2hpbGRyZW4oZWRpb3RyQXJlYSk7XHJcbiAgICAgICAgLy/lhYnmoIfnp7voh7PmnIDlkI5cclxuICAgICAgICByYW5nZS5jb2xsYXBzZVRvRW5kKCk7XHJcbiAgICB9XHJcbn0iXX0=