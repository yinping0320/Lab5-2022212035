import * as tslib_1 from "tslib";
import { Directive } from '@angular/core';
import { AppContext } from '@farris/devkit';
import { GridComponent } from '@progress/kendo-angular-grid';
import { AbstractEndEdit } from './abstract_end_edit';
var KendoGridEndEditDirective = /** @class */ (function (_super) {
    tslib_1.__extends(KendoGridEndEditDirective, _super);
    function KendoGridEndEditDirective(appContext, grid) {
        var _this = _super.call(this, appContext) || this;
        _this.appContext = appContext;
        _this.grid = grid;
        return _this;
    }
    KendoGridEndEditDirective.prototype.endEdit = function (message) {
        if (this.grid && typeof this.grid.closeCell === 'function') {
            this.grid.closeCell();
        }
    };
    KendoGridEndEditDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[kendo-grid-end-edit]'
                },] }
    ];
    /** @nocollapse */
    KendoGridEndEditDirective.ctorParameters = function () { return [
        { type: AppContext },
        { type: GridComponent }
    ]; };
    return KendoGridEndEditDirective;
}(AbstractEndEdit));
export { KendoGridEndEditDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2VuZG9fZ3JpZF9lbmRfZWRpdC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9lbmQtZWRpdC9rZW5kb19ncmlkX2VuZF9lZGl0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzdELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV0RDtJQUd3QyxxREFBZTtJQUNyRCxtQ0FBc0IsVUFBc0IsRUFBVSxJQUFtQjtRQUF6RSxZQUNFLGtCQUFNLFVBQVUsQ0FBQyxTQUNsQjtRQUZxQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFVLFVBQUksR0FBSixJQUFJLENBQWU7O0lBRXpFLENBQUM7SUFDTSwyQ0FBTyxHQUFkLFVBQWUsT0FBWTtRQUN6QixJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsS0FBSyxVQUFVLEVBQUU7WUFDMUQsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztTQUN2QjtJQUNILENBQUM7O2dCQVhGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2lCQUNsQzs7OztnQkFOUSxVQUFVO2dCQUNWLGFBQWE7O0lBZXRCLGdDQUFDO0NBQUEsQUFaRCxDQUd3QyxlQUFlLEdBU3REO0FBQ0QsT0FBTyxFQUFFLHlCQUF5QixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQXBwQ29udGV4dCB9IGZyb20gJ0BmYXJyaXMvZGV2a2l0JztcclxuaW1wb3J0IHsgR3JpZENvbXBvbmVudCB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWdyaWQnO1xyXG5pbXBvcnQgeyBBYnN0cmFjdEVuZEVkaXQgfSBmcm9tICcuL2Fic3RyYWN0X2VuZF9lZGl0JztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2tlbmRvLWdyaWQtZW5kLWVkaXRdJ1xyXG59KVxyXG5jbGFzcyBLZW5kb0dyaWRFbmRFZGl0RGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RFbmRFZGl0IHtcclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYXBwQ29udGV4dDogQXBwQ29udGV4dCwgcHJpdmF0ZSBncmlkOiBHcmlkQ29tcG9uZW50KSB7XHJcbiAgICBzdXBlcihhcHBDb250ZXh0KTtcclxuICB9XHJcbiAgcHVibGljIGVuZEVkaXQobWVzc2FnZTogYW55KSB7XHJcbiAgICBpZiAodGhpcy5ncmlkICYmIHR5cGVvZiB0aGlzLmdyaWQuY2xvc2VDZWxsID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgIHRoaXMuZ3JpZC5jbG9zZUNlbGwoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuZXhwb3J0IHsgS2VuZG9HcmlkRW5kRWRpdERpcmVjdGl2ZSB9O1xyXG4iXX0=