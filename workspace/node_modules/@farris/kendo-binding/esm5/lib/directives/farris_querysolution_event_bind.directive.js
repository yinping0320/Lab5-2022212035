import { Directive, HostListener, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { QuerySolutionComponent } from "@gsp-cmp/querysolution";
var FarrisQuerySolutionEventBindDirective = /** @class */ (function () {
    function FarrisQuerySolutionEventBindDirective(injector, component, frameContext) {
        this.injector = injector;
        this.component = component;
        this.frameContext = frameContext;
    }
    /**
     * 执行筛选
     * @param event event
     */
    FarrisQuerySolutionEventBindDirective.prototype.onQuery = function (event) {
        if (this.frameContext) {
            this.frameContext.repository.entityCollection.pageIndex = 1;
        }
    };
    FarrisQuerySolutionEventBindDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[farris-querysolution-event-bind]"
                },] }
    ];
    /** @nocollapse */
    FarrisQuerySolutionEventBindDirective.ctorParameters = function () { return [
        { type: Injector },
        { type: QuerySolutionComponent },
        { type: FrameContext }
    ]; };
    FarrisQuerySolutionEventBindDirective.propDecorators = {
        onQuery: [{ type: HostListener, args: ["queryEmitter",] }]
    };
    return FarrisQuerySolutionEventBindDirective;
}());
export { FarrisQuerySolutionEventBindDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzX3F1ZXJ5c29sdXRpb25fZXZlbnRfYmluZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9mYXJyaXNfcXVlcnlzb2x1dGlvbl9ldmVudF9iaW5kLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2hFO0lBSUUsK0NBQW9CLFFBQWtCLEVBQVUsU0FBaUMsRUFBVSxZQUEwQjtRQUFqRyxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBd0I7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUFJLENBQUM7SUFDMUg7OztPQUdHO0lBRUssdURBQU8sR0FEZixVQUNnQixLQUFVO1FBQ3hCLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDO1NBQzdEO0lBQ0gsQ0FBQzs7Z0JBZEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxtQ0FBbUM7aUJBQzlDOzs7O2dCQUxpQyxRQUFRO2dCQUVqQyxzQkFBc0I7Z0JBRHRCLFlBQVk7OzswQkFXbEIsWUFBWSxTQUFDLGNBQWM7O0lBTTlCLDRDQUFDO0NBQUEsQUFmRCxJQWVDO1NBWlkscUNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIEluamVjdG9yIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRnJhbWVDb250ZXh0IH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcbmltcG9ydCB7IFF1ZXJ5U29sdXRpb25Db21wb25lbnQgfSBmcm9tIFwiQGdzcC1jbXAvcXVlcnlzb2x1dGlvblwiO1xyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogXCJbZmFycmlzLXF1ZXJ5c29sdXRpb24tZXZlbnQtYmluZF1cIlxyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzUXVlcnlTb2x1dGlvbkV2ZW50QmluZERpcmVjdGl2ZSB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgY29tcG9uZW50OiBRdWVyeVNvbHV0aW9uQ29tcG9uZW50LCBwcml2YXRlIGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KSB7IH1cclxuICAvKipcclxuICAgKiDmiafooYznrZvpgIlcclxuICAgKiBAcGFyYW0gZXZlbnQgZXZlbnRcclxuICAgKi9cclxuICBASG9zdExpc3RlbmVyKFwicXVlcnlFbWl0dGVyXCIpXHJcbiAgcHJpdmF0ZSBvblF1ZXJ5KGV2ZW50OiBhbnkpIHtcclxuICAgIGlmICh0aGlzLmZyYW1lQ29udGV4dCkge1xyXG4gICAgICB0aGlzLmZyYW1lQ29udGV4dC5yZXBvc2l0b3J5LmVudGl0eUNvbGxlY3Rpb24ucGFnZUluZGV4ID0gMTtcclxuICAgIH1cclxuICB9XHJcbn0iXX0=