/*
 * @Author: Witt
 * @Date: 2018-10-29 10:26:58
 * @Last Modified by: Witt
 * @Last Modified time: 2018-10-29 15:49:12
 */
import { DateUtil } from '@farris/devkit';
/**
 * 日期转换器
 */
var DateConverter = /** @class */ (function () {
    /**
     * 构造函数
     * @param format 日期格式
     */
    function DateConverter(format) {
        this.format = format;
    }
    /**
     * 字符串=> 日期
     * @param value 待转换的值
     */
    DateConverter.prototype.convertFrom = function (value) {
        if (DateUtil.isEmptyDateString(value) === true) {
            return null;
        }
        return DateUtil.parse(value);
    };
    /**
     * 日期=>字符串
     * @param value
     */
    DateConverter.prototype.convertTo = function (value) {
        if (!value) {
            return null;
        }
        // 如果value不是日期类型，则不做处理，返回原始value
        if (Object.prototype.toString.call(value) !== '[object Date]') {
            return value;
        }
        // 年
        var year = value.getFullYear().toString();
        year = year.length < 4 ? '0'.repeat(4 - year.length) + year : year;
        // 月
        var month = (value.getMonth() + 1).toString();
        month = month.length === 1 ? ('0' + month) : month;
        // 日
        var day = value.getDate().toString();
        day = day.length === 1 ? ('0' + day) : day;
        // 时分秒
        var hours = value.getHours().toString();
        hours = hours.length === 1 ? ('0' + hours) : hours;
        var minutes = value.getMinutes().toString();
        minutes = minutes.length === 1 ? ('0' + minutes) : minutes;
        var seconds = value.getSeconds().toString();
        seconds = seconds.length === 1 ? ('0' + seconds) : seconds;
        return year + "-" + month + "-" + day + " " + hours + ":" + minutes + ":" + seconds;
    };
    return DateConverter;
}());
export { DateConverter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZV9jb252ZXJ0ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvY29udmVydGVycy9kYXRlX2NvbnZlcnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7R0FLRztBQUNILE9BQU8sRUFBeUIsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFakU7O0dBRUc7QUFDSDtJQUVFOzs7T0FHRztJQUNILHVCQUFvQixNQUFjO1FBQWQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtJQUNsQyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsbUNBQVcsR0FBWCxVQUFZLEtBQWE7UUFDdkIsSUFBSSxRQUFRLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQzlDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVEOzs7T0FHRztJQUNILGlDQUFTLEdBQVQsVUFBVSxLQUFXO1FBQ25CLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsZ0NBQWdDO1FBQ2hDLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGVBQWUsRUFBRTtZQUM3RCxPQUFPLEtBQUssQ0FBQztTQUNkO1FBQ0QsSUFBSTtRQUNKLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUMxQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNuRSxJQUFJO1FBQ0osSUFBSSxLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDOUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBRW5ELElBQUk7UUFDSixJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDckMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1FBRTNDLE1BQU07UUFDTixJQUFJLEtBQUssR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDeEMsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBRW5ELElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM1QyxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFFM0QsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzVDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUMzRCxPQUFVLElBQUksU0FBSSxLQUFLLFNBQUksR0FBRyxTQUFJLEtBQUssU0FBSSxPQUFPLFNBQUksT0FBUyxDQUFDO0lBQ2xFLENBQUM7SUFDSCxvQkFBQztBQUFELENBQUMsQUF2REQsSUF1REM7QUFDRCxPQUFPLEVBQUUsYUFBYSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiBXaXR0XHJcbiAqIEBEYXRlOiAyMDE4LTEwLTI5IDEwOjI2OjU4XHJcbiAqIEBMYXN0IE1vZGlmaWVkIGJ5OiBXaXR0XHJcbiAqIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTgtMTAtMjkgMTU6NDk6MTJcclxuICovXHJcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUNvbnZlcnRlciwgRGF0ZVV0aWwgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcblxyXG4vKipcclxuICog5pel5pyf6L2s5o2i5ZmoXHJcbiAqL1xyXG5jbGFzcyBEYXRlQ29udmVydGVyIGltcGxlbWVudHMgQ29udHJvbFZhbHVlQ29udmVydGVyIHtcclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Ye95pWwXHJcbiAgICogQHBhcmFtIGZvcm1hdCDml6XmnJ/moLzlvI9cclxuICAgKi9cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZvcm1hdDogc3RyaW5nKSB7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlrZfnrKbkuLI9PiDml6XmnJ9cclxuICAgKiBAcGFyYW0gdmFsdWUg5b6F6L2s5o2i55qE5YC8XHJcbiAgICovXHJcbiAgY29udmVydEZyb20odmFsdWU6IHN0cmluZyk6IERhdGUge1xyXG4gICAgaWYgKERhdGVVdGlsLmlzRW1wdHlEYXRlU3RyaW5nKHZhbHVlKSA9PT0gdHJ1ZSkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gRGF0ZVV0aWwucGFyc2UodmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5pel5pyfPT7lrZfnrKbkuLJcclxuICAgKiBAcGFyYW0gdmFsdWVcclxuICAgKi9cclxuICBjb252ZXJ0VG8odmFsdWU6IERhdGUpOiBzdHJpbmcgfCBhbnkge1xyXG4gICAgaWYgKCF2YWx1ZSkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIC8vIOWmguaenHZhbHVl5LiN5piv5pel5pyf57G75Z6L77yM5YiZ5LiN5YGa5aSE55CG77yM6L+U5Zue5Y6f5aeLdmFsdWVcclxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpICE9PSAnW29iamVjdCBEYXRlXScpIHtcclxuICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfVxyXG4gICAgLy8g5bm0XHJcbiAgICBsZXQgeWVhciA9IHZhbHVlLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKTtcclxuICAgIHllYXIgPSB5ZWFyLmxlbmd0aCA8IDQgPyAnMCcucmVwZWF0KDQgLSB5ZWFyLmxlbmd0aCkgKyB5ZWFyIDogeWVhcjtcclxuICAgIC8vIOaciFxyXG4gICAgbGV0IG1vbnRoID0gKHZhbHVlLmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpO1xyXG4gICAgbW9udGggPSBtb250aC5sZW5ndGggPT09IDEgPyAoJzAnICsgbW9udGgpIDogbW9udGg7XHJcblxyXG4gICAgLy8g5pelXHJcbiAgICBsZXQgZGF5ID0gdmFsdWUuZ2V0RGF0ZSgpLnRvU3RyaW5nKCk7XHJcbiAgICBkYXkgPSBkYXkubGVuZ3RoID09PSAxID8gKCcwJyArIGRheSkgOiBkYXk7XHJcblxyXG4gICAgLy8g5pe25YiG56eSXHJcbiAgICBsZXQgaG91cnMgPSB2YWx1ZS5nZXRIb3VycygpLnRvU3RyaW5nKCk7XHJcbiAgICBob3VycyA9IGhvdXJzLmxlbmd0aCA9PT0gMSA/ICgnMCcgKyBob3VycykgOiBob3VycztcclxuXHJcbiAgICBsZXQgbWludXRlcyA9IHZhbHVlLmdldE1pbnV0ZXMoKS50b1N0cmluZygpO1xyXG4gICAgbWludXRlcyA9IG1pbnV0ZXMubGVuZ3RoID09PSAxID8gKCcwJyArIG1pbnV0ZXMpIDogbWludXRlcztcclxuXHJcbiAgICBsZXQgc2Vjb25kcyA9IHZhbHVlLmdldFNlY29uZHMoKS50b1N0cmluZygpO1xyXG4gICAgc2Vjb25kcyA9IHNlY29uZHMubGVuZ3RoID09PSAxID8gKCcwJyArIHNlY29uZHMpIDogc2Vjb25kcztcclxuICAgIHJldHVybiBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX0gJHtob3Vyc306JHttaW51dGVzfToke3NlY29uZHN9YDtcclxuICB9XHJcbn1cclxuZXhwb3J0IHsgRGF0ZUNvbnZlcnRlciB9O1xyXG4iXX0=