import { Directive, Inject, Injector } from "@angular/core";
import { UserSettingsToken } from "@farris/devkit";
import { TimePickerComponent } from '@farris/ui-time-picker';
export class FarrisTimeLocalizationDirective {
    constructor(injector, userSettings, componentRef) {
        this.injector = injector;
        this.userSettings = userSettings;
        this.componentRef = componentRef;
    }
    ngOnInit() {
        this.localize();
    }
    localize() {
        if (this.userSettings && this.componentRef) {
            const { timeFormat = null } = this.userSettings;
            if (timeFormat) {
                this.componentRef.format = timeFormat;
            }
        }
    }
}
FarrisTimeLocalizationDirective.decorators = [
    { type: Directive, args: [{
                selector: '[farris-time-localization]'
            },] }
];
/** @nocollapse */
FarrisTimeLocalizationDirective.ctorParameters = () => [
    { type: Injector },
    { type: undefined, decorators: [{ type: Inject, args: [UserSettingsToken,] }] },
    { type: TimePickerComponent }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzX3RpbWVfbG9jYWxpemF0aW9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMva2VuZG8tYmluZGluZy8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2xvY2FsaXphdGlvbi9mYXJyaXNfdGltZV9sb2NhbGl6YXRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQWdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDakUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFLN0QsTUFBTSxPQUFPLCtCQUErQjtJQUMxQyxZQUFvQixRQUFrQixFQUFxQyxZQUEwQixFQUFVLFlBQWlDO1FBQTVILGFBQVEsR0FBUixRQUFRLENBQVU7UUFBcUMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFBVSxpQkFBWSxHQUFaLFlBQVksQ0FBcUI7SUFFaEosQ0FBQztJQUNELFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUNPLFFBQVE7UUFDZCxJQUFJLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUMxQyxNQUFNLEVBQUUsVUFBVSxHQUFHLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDaEQsSUFBSSxVQUFVLEVBQUU7Z0JBQ2QsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDO2FBQ3ZDO1NBQ0Y7SUFDSCxDQUFDOzs7WUFqQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw0QkFBNEI7YUFDdkM7Ozs7WUFOMkIsUUFBUTs0Q0FRTyxNQUFNLFNBQUMsaUJBQWlCO1lBTjFELG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5qZWN0LCBJbmplY3RvciwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgVXNlclNldHRpbmdzLCBVc2VyU2V0dGluZ3NUb2tlbiB9IGZyb20gXCJAZmFycmlzL2RldmtpdFwiO1xyXG5pbXBvcnQgeyBUaW1lUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS10aW1lLXBpY2tlcic7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tmYXJyaXMtdGltZS1sb2NhbGl6YXRpb25dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgRmFycmlzVGltZUxvY2FsaXphdGlvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIEBJbmplY3QoVXNlclNldHRpbmdzVG9rZW4pIHByaXZhdGUgdXNlclNldHRpbmdzOiBVc2VyU2V0dGluZ3MsIHByaXZhdGUgY29tcG9uZW50UmVmOiBUaW1lUGlja2VyQ29tcG9uZW50KSB7XHJcblxyXG4gIH1cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMubG9jYWxpemUoKTtcclxuICB9XHJcbiAgcHJpdmF0ZSBsb2NhbGl6ZSgpIHtcclxuICAgIGlmICh0aGlzLnVzZXJTZXR0aW5ncyAmJiB0aGlzLmNvbXBvbmVudFJlZikge1xyXG4gICAgICBjb25zdCB7IHRpbWVGb3JtYXQgPSBudWxsIH0gPSB0aGlzLnVzZXJTZXR0aW5ncztcclxuICAgICAgaWYgKHRpbWVGb3JtYXQpIHtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudFJlZi5mb3JtYXQgPSB0aW1lRm9ybWF0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59Il19