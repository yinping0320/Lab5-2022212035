import { Directive, HostListener, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { QuerySolutionComponent } from "@gsp-cmp/querysolution";
export class FarrisQuerySolutionEventBindDirective {
    constructor(injector, component, frameContext) {
        this.injector = injector;
        this.component = component;
        this.frameContext = frameContext;
    }
    /**
     * 执行筛选
     * @param event event
     */
    onQuery(event) {
        if (this.frameContext) {
            this.frameContext.repository.entityCollection.pageIndex = 1;
        }
    }
}
FarrisQuerySolutionEventBindDirective.decorators = [
    { type: Directive, args: [{
                selector: "[farris-querysolution-event-bind]"
            },] }
];
/** @nocollapse */
FarrisQuerySolutionEventBindDirective.ctorParameters = () => [
    { type: Injector },
    { type: QuerySolutionComponent },
    { type: FrameContext }
];
FarrisQuerySolutionEventBindDirective.propDecorators = {
    onQuery: [{ type: HostListener, args: ["queryEmitter",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFycmlzX3F1ZXJ5c29sdXRpb25fZXZlbnRfYmluZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9mYXJyaXNfcXVlcnlzb2x1dGlvbl9ldmVudF9iaW5kLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBSWhFLE1BQU0sT0FBTyxxQ0FBcUM7SUFDaEQsWUFBb0IsUUFBa0IsRUFBVSxTQUFpQyxFQUFVLFlBQTBCO1FBQWpHLGFBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUF3QjtRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUFjO0lBQUksQ0FBQztJQUMxSDs7O09BR0c7SUFFSyxPQUFPLENBQUMsS0FBVTtRQUN4QixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQztTQUM3RDtJQUNILENBQUM7OztZQWRGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUNBQW1DO2FBQzlDOzs7O1lBTGlDLFFBQVE7WUFFakMsc0JBQXNCO1lBRHRCLFlBQVk7OztzQkFXbEIsWUFBWSxTQUFDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciwgSW5qZWN0b3IgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGcmFtZUNvbnRleHQgfSBmcm9tIFwiQGZhcnJpcy9kZXZraXRcIjtcclxuaW1wb3J0IHsgUXVlcnlTb2x1dGlvbkNvbXBvbmVudCB9IGZyb20gXCJAZ3NwLWNtcC9xdWVyeXNvbHV0aW9uXCI7XHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiBcIltmYXJyaXMtcXVlcnlzb2x1dGlvbi1ldmVudC1iaW5kXVwiXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGYXJyaXNRdWVyeVNvbHV0aW9uRXZlbnRCaW5kRGlyZWN0aXZlIHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBjb21wb25lbnQ6IFF1ZXJ5U29sdXRpb25Db21wb25lbnQsIHByaXZhdGUgZnJhbWVDb250ZXh0OiBGcmFtZUNvbnRleHQpIHsgfVxyXG4gIC8qKlxyXG4gICAqIOaJp+ihjOetm+mAiVxyXG4gICAqIEBwYXJhbSBldmVudCBldmVudFxyXG4gICAqL1xyXG4gIEBIb3N0TGlzdGVuZXIoXCJxdWVyeUVtaXR0ZXJcIilcclxuICBwcml2YXRlIG9uUXVlcnkoZXZlbnQ6IGFueSkge1xyXG4gICAgaWYgKHRoaXMuZnJhbWVDb250ZXh0KSB7XHJcbiAgICAgIHRoaXMuZnJhbWVDb250ZXh0LnJlcG9zaXRvcnkuZW50aXR5Q29sbGVjdGlvbi5wYWdlSW5kZXggPSAxO1xyXG4gICAgfVxyXG4gIH1cclxufSJdfQ==