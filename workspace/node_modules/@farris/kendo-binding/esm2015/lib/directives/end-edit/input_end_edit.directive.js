import { Directive, ElementRef } from '@angular/core';
import { AppContext } from '@farris/devkit';
import { AbstractEndEdit } from './abstract_end_edit';
class InputEndEditDirective extends AbstractEndEdit {
    constructor(appContext, elementRef) {
        super(appContext);
        this.appContext = appContext;
        this.elementRef = elementRef;
    }
    ngOnInit() {
        if (this.elementRef) {
            this.nativeElement = this.elementRef.nativeElement;
        }
    }
    /**
     * 结束编辑
     * @param message 消息
     */
    endEdit(message) {
        if (this.nativeElement) {
            const parent = this.nativeElement.parentNode || this.nativeElement.parentElement;
            const inputs = parent && Array.from(parent.getElementsByTagName('input')) || [];
            if (inputs && inputs.length > 0) {
                inputs.forEach(input => {
                    if (input && typeof (input.blur) === 'function') {
                        input.blur();
                    }
                });
            }
        }
    }
}
InputEndEditDirective.decorators = [
    { type: Directive, args: [{
                selector: '[input-end-edit]'
            },] }
];
/** @nocollapse */
InputEndEditDirective.ctorParameters = () => [
    { type: AppContext },
    { type: ElementRef }
];
export { InputEndEditDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRfZW5kX2VkaXQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9rZW5kby1iaW5kaW5nLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvZW5kLWVkaXQvaW5wdXRfZW5kX2VkaXQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFvQyxNQUFNLGVBQWUsQ0FBQztBQUN4RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXRELE1BR00scUJBQXNCLFNBQVEsZUFBZTtJQUVqRCxZQUFzQixVQUFzQixFQUFVLFVBQXNCO1FBQzFFLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztRQURFLGVBQVUsR0FBVixVQUFVLENBQVk7UUFBVSxlQUFVLEdBQVYsVUFBVSxDQUFZO0lBRTVFLENBQUM7SUFDRCxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ25CLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7U0FDcEQ7SUFDSCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksT0FBTyxDQUFDLE9BQVk7UUFDekIsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3RCLE1BQU0sTUFBTSxHQUFRLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDO1lBQ3RGLE1BQU0sTUFBTSxHQUFlLE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUM1RixJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDL0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtvQkFDckIsSUFBSSxLQUFLLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7d0JBQy9DLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztxQkFDZDtnQkFDSCxDQUFDLENBQUMsQ0FBQzthQUNKO1NBQ0Y7SUFDSCxDQUFDOzs7WUE3QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7YUFDN0I7Ozs7WUFMUSxVQUFVO1lBREMsVUFBVTs7QUFtQzlCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBcHBDb250ZXh0IH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnO1xyXG5pbXBvcnQgeyBBYnN0cmFjdEVuZEVkaXQgfSBmcm9tICcuL2Fic3RyYWN0X2VuZF9lZGl0JztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2lucHV0LWVuZC1lZGl0XSdcclxufSlcclxuY2xhc3MgSW5wdXRFbmRFZGl0RGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RFbmRFZGl0IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBwcml2YXRlIG5hdGl2ZUVsZW1lbnQ6IGFueTtcclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYXBwQ29udGV4dDogQXBwQ29udGV4dCwgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XHJcbiAgICBzdXBlcihhcHBDb250ZXh0KTtcclxuICB9XHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5lbGVtZW50UmVmKSB7XHJcbiAgICAgIHRoaXMubmF0aXZlRWxlbWVudCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xyXG4gICAgfVxyXG4gIH1cclxuICAvKipcclxuICAgKiDnu5PmnZ/nvJbovpFcclxuICAgKiBAcGFyYW0gbWVzc2FnZSDmtojmga9cclxuICAgKi9cclxuICBwdWJsaWMgZW5kRWRpdChtZXNzYWdlOiBhbnkpIHtcclxuICAgIGlmICh0aGlzLm5hdGl2ZUVsZW1lbnQpIHtcclxuICAgICAgY29uc3QgcGFyZW50OiBhbnkgPSB0aGlzLm5hdGl2ZUVsZW1lbnQucGFyZW50Tm9kZSB8fCB0aGlzLm5hdGl2ZUVsZW1lbnQucGFyZW50RWxlbWVudDtcclxuICAgICAgY29uc3QgaW5wdXRzOiBBcnJheTxhbnk+ID0gcGFyZW50ICYmIEFycmF5LmZyb20ocGFyZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpbnB1dCcpKSB8fCBbXTtcclxuICAgICAgaWYgKGlucHV0cyAmJiBpbnB1dHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGlucHV0cy5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgICAgIGlmIChpbnB1dCAmJiB0eXBlb2YgKGlucHV0LmJsdXIpID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgIGlucHV0LmJsdXIoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5leHBvcnQgeyBJbnB1dEVuZEVkaXREaXJlY3RpdmUgfTtcclxuIl19