import { Directive, ElementRef, Injector } from "@angular/core";
import { FrameContext } from "@farris/devkit";
import { DiscussionEditorComponent } from '@farris/discussion-group';
import { ComponentRef } from "./component-ref";
export class DiscussionEditorComponentRefDirective extends ComponentRef {
    constructor(injector, component, elementRef, frameContext) {
        super(frameContext, elementRef);
        this.injector = injector;
        this.component = component;
        this.elementRef = elementRef;
        this.frameContext = frameContext;
    }
    ngAfterViewInit() {
        this.tryAddComponent(this.component);
    }
    ngOnInit() {
        this.addComponent(this.component);
    }
    ngOnDestroy() {
    }
}
DiscussionEditorComponentRefDirective.decorators = [
    { type: Directive, args: [{
                selector: '[discussionEditorRef]'
            },] }
];
/** @nocollapse */
DiscussionEditorComponentRefDirective.ctorParameters = () => [
    { type: Injector },
    { type: DiscussionEditorComponent },
    { type: ElementRef },
    { type: FrameContext }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY3Vzc2lvbi1lZGl0b3ItY29tcG9uZW50LXJlZi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2tlbmRvLWJpbmRpbmcvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9jb21wb25lbnQtcmVmL2Rpc2N1c3Npb24tZWRpdG9yLWNvbXBvbmVudC1yZWYuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQ2xHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFLL0MsTUFBTSxPQUFPLHFDQUFzQyxTQUFRLFlBQVk7SUFDckUsWUFBb0IsUUFBa0IsRUFBVSxTQUFvQyxFQUFTLFVBQXNCLEVBQVMsWUFBMEI7UUFDcEosS0FBSyxDQUFDLFlBQVksRUFBRSxVQUFVLENBQUMsQ0FBQztRQURkLGFBQVEsR0FBUixRQUFRLENBQVU7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUEyQjtRQUFTLGVBQVUsR0FBVixVQUFVLENBQVk7UUFBUyxpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUV0SixDQUFDO0lBQ0QsZUFBZTtRQUNiLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFDRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUNELFdBQVc7SUFDWCxDQUFDOzs7WUFkRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjthQUNsQzs7OztZQVA4QyxRQUFRO1lBRTlDLHlCQUF5QjtZQUZDLFVBQVU7WUFDcEMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0b3IsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRnJhbWVDb250ZXh0IH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcbmltcG9ydCB7IERpc2N1c3Npb25FZGl0b3JDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL2Rpc2N1c3Npb24tZ3JvdXAnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRSZWYgfSBmcm9tIFwiLi9jb21wb25lbnQtcmVmXCI7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tkaXNjdXNzaW9uRWRpdG9yUmVmXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIERpc2N1c3Npb25FZGl0b3JDb21wb25lbnRSZWZEaXJlY3RpdmUgZXh0ZW5kcyBDb21wb25lbnRSZWYgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IsIHByaXZhdGUgY29tcG9uZW50OiBEaXNjdXNzaW9uRWRpdG9yQ29tcG9uZW50LCBwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcHVibGljIGZyYW1lQ29udGV4dDogRnJhbWVDb250ZXh0KSB7IFxyXG4gICAgc3VwZXIoZnJhbWVDb250ZXh0LCBlbGVtZW50UmVmKTtcclxuICB9XHJcbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy50cnlBZGRDb21wb25lbnQodGhpcy5jb21wb25lbnQpO1xyXG4gIH1cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMuYWRkQ29tcG9uZW50KHRoaXMuY29tcG9uZW50KTtcclxuICB9XHJcbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgfVxyXG5cclxufSJdfQ==