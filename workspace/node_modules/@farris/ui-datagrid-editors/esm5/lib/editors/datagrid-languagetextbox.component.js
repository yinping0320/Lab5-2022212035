/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Renderer2, ElementRef, Injector, ViewChild } from '@angular/core';
import { LanguageTextboxComponent } from '@farris/ui-language-textbox';
import { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';
import { LanguageTextboxDefaultOptions } from '../editor-default-options';
var DatagridLanguageTextboxComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DatagridLanguageTextboxComponent, _super);
    function DatagridLanguageTextboxComponent(render, el, injector) {
        return _super.call(this, render, el, injector) || this;
    }
    /**
     * @return {?}
     */
    DatagridLanguageTextboxComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnInit.call(this);
        this.inputElement = this.instance.input.textbox.nativeElement;
        this.options = Object.assign({}, LanguageTextboxDefaultOptions, this.options);
        if (this.options && !this.options.valueChange) {
            this.options.valueChange = (/**
             * @param {?} val
             * @return {?}
             */
            function (val) { });
        }
    };
    DatagridLanguageTextboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'grid-editor-language-textbox',
                    template: "\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\" style=\"line-height:100%\">\n        <language-textbox #ins style=\"width: 100%\"\n            [languages]=\"options.languages\" [formControlName]=\"column.field\"\n            [enableClear]=\"options.enableClear\"\n            [readonly]=\"options.readonly\"\n            [currentLanguage]=\"options.currentLanguage\"\n            ></language-textbox>\n    </div>\n    "
                }] }
    ];
    /** @nocollapse */
    DatagridLanguageTextboxComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef },
        { type: Injector }
    ]; };
    DatagridLanguageTextboxComponent.propDecorators = {
        instance: [{ type: ViewChild, args: ['ins',] }]
    };
    return DatagridLanguageTextboxComponent;
}(DatagridBaseEditorDirective));
export { DatagridLanguageTextboxComponent };
if (false) {
    /** @type {?} */
    DatagridLanguageTextboxComponent.prototype.instance;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtbGFuZ3VhZ2V0ZXh0Ym94LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQtZWRpdG9ycy8iLCJzb3VyY2VzIjpbImxpYi9lZGl0b3JzL2RhdGFncmlkLWxhbmd1YWdldGV4dGJveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUUxRTtJQWFzRCw0REFBMkI7SUFHN0UsMENBQVksTUFBaUIsRUFBRSxFQUFjLEVBQUUsUUFBa0I7ZUFDN0Qsa0JBQU0sTUFBTSxFQUFFLEVBQUUsRUFBRSxRQUFRLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELG1EQUFROzs7SUFBUjtRQUNJLGlCQUFNLFFBQVEsV0FBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztRQUM5RCxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLDZCQUE2QixFQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMvRSxJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUMzQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVc7Ozs7WUFBRyxVQUFDLEdBQUcsSUFBTSxDQUFDLENBQUEsQ0FBQztTQUMxQztJQUNMLENBQUM7O2dCQTNCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLDhCQUE4QjtvQkFDeEMsUUFBUSxFQUFFLDJjQVNUO2lCQUNKOzs7O2dCQWpCMkIsU0FBUztnQkFBRSxVQUFVO2dCQUFFLFFBQVE7OzsyQkFvQnRELFNBQVMsU0FBQyxLQUFLOztJQWFwQix1Q0FBQztDQUFBLEFBNUJELENBYXNELDJCQUEyQixHQWVoRjtTQWZZLGdDQUFnQzs7O0lBRXpDLG9EQUFxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBSZW5kZXJlcjIsIEVsZW1lbnRSZWYsIEluamVjdG9yLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTGFuZ3VhZ2VUZXh0Ym94Q29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS1sYW5ndWFnZS10ZXh0Ym94JztcclxuaW1wb3J0IHsgRGF0YWdyaWRCYXNlRWRpdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi4vZGF0YWdyaWQtYmFzZS1lZGl0b3IuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTGFuZ3VhZ2VUZXh0Ym94RGVmYXVsdE9wdGlvbnMgfSBmcm9tICcuLi9lZGl0b3ItZGVmYXVsdC1vcHRpb25zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdncmlkLWVkaXRvci1sYW5ndWFnZS10ZXh0Ym94JyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZ3JvdXBcIiBjbGFzcz1cImYtZGF0YWdyaWQtY2VsbC1mb3JtZ3JvdXAgZmFycmlzLWdyb3VwLWF1dG9cIiBzdHlsZT1cImxpbmUtaGVpZ2h0OjEwMCVcIj5cclxuICAgICAgICA8bGFuZ3VhZ2UtdGV4dGJveCAjaW5zIHN0eWxlPVwid2lkdGg6IDEwMCVcIlxyXG4gICAgICAgICAgICBbbGFuZ3VhZ2VzXT1cIm9wdGlvbnMubGFuZ3VhZ2VzXCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb2x1bW4uZmllbGRcIlxyXG4gICAgICAgICAgICBbZW5hYmxlQ2xlYXJdPVwib3B0aW9ucy5lbmFibGVDbGVhclwiXHJcbiAgICAgICAgICAgIFtyZWFkb25seV09XCJvcHRpb25zLnJlYWRvbmx5XCJcclxuICAgICAgICAgICAgW2N1cnJlbnRMYW5ndWFnZV09XCJvcHRpb25zLmN1cnJlbnRMYW5ndWFnZVwiXHJcbiAgICAgICAgICAgID48L2xhbmd1YWdlLXRleHRib3g+XHJcbiAgICA8L2Rpdj5cclxuICAgIGAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhZ3JpZExhbmd1YWdlVGV4dGJveENvbXBvbmVudCBleHRlbmRzIERhdGFncmlkQmFzZUVkaXRvckRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gICAgQFZpZXdDaGlsZCgnaW5zJykgaW5zdGFuY2U6IExhbmd1YWdlVGV4dGJveENvbXBvbmVudDtcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcjogUmVuZGVyZXIyLCBlbDogRWxlbWVudFJlZiwgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIocmVuZGVyLCBlbCwgaW5qZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQgPSB0aGlzLmluc3RhbmNlLmlucHV0LnRleHRib3gubmF0aXZlRWxlbWVudDtcclxuICAgICAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBMYW5ndWFnZVRleHRib3hEZWZhdWx0T3B0aW9ucyAsIHRoaXMub3B0aW9ucyk7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucyAmJiAhdGhpcy5vcHRpb25zLnZhbHVlQ2hhbmdlKSB7XHJcbiAgICAgICAgICAgIHRoaXMub3B0aW9ucy52YWx1ZUNoYW5nZSA9ICh2YWwpID0+IHt9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=