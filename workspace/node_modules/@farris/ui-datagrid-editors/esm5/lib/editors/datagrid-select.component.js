/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-14 11:41:00
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-10-02 17:07:03
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Renderer2, ElementRef, ViewChild, Injector } from '@angular/core';
import { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';
var DatagridSelectComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DatagridSelectComponent, _super);
    function DatagridSelectComponent(render, el, injector) {
        var _this = _super.call(this, render, el, injector) || this;
        _this.enumData = [];
        return _this;
    }
    /**
     * @return {?}
     */
    DatagridSelectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnInit.call(this);
        this.inputElement = this.instance.nativeElement;
        if (this.options) {
            this.enumData = this.options.data;
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    DatagridSelectComponent.prototype.onClick = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        $event.stopPropagation();
        return false;
    };
    DatagridSelectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'grid-editor-select',
                    template: "\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup\">\n        <select #sel class=\"custom-select\" [formControlName]=\"column.field\" (click)=\"onClick($event)\" >\n            <option *ngFor=\"let col of enumData\" value=\"{{col[options.valueField]}}\">{{ col[options.textField] }}</option>\n        </select>\n    </div>\n    "
                }] }
    ];
    /** @nocollapse */
    DatagridSelectComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef },
        { type: Injector }
    ]; };
    DatagridSelectComponent.propDecorators = {
        instance: [{ type: ViewChild, args: ['sel',] }]
    };
    return DatagridSelectComponent;
}(DatagridBaseEditorDirective));
export { DatagridSelectComponent };
if (false) {
    /** @type {?} */
    DatagridSelectComponent.prototype.enumData;
    /** @type {?} */
    DatagridSelectComponent.prototype.instance;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQtZWRpdG9ycy8iLCJzb3VyY2VzIjpbImxpYi9lZGl0b3JzL2RhdGFncmlkLXNlbGVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRWhGO0lBVTZDLG1EQUEyQjtJQUdwRSxpQ0FBWSxNQUFpQixFQUFFLEVBQWMsRUFBRSxRQUFrQjtRQUFqRSxZQUNJLGtCQUFNLE1BQU0sRUFBRSxFQUFFLEVBQUUsUUFBUSxDQUFDLFNBQzlCO1FBSkQsY0FBUSxHQUFHLEVBQUUsQ0FBQzs7SUFJZCxDQUFDOzs7O0lBRUQsMENBQVE7OztJQUFSO1FBQ0ksaUJBQU0sUUFBUSxXQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQztRQUNoRCxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1NBQ3JDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCx5Q0FBTzs7OztJQUFQLFVBQVEsTUFBa0I7UUFDdEIsTUFBTSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3pCLE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7O2dCQTVCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsUUFBUSxFQUFFLDJWQU1UO2lCQUNKOzs7O2dCQVoyQixTQUFTO2dCQUFFLFVBQVU7Z0JBQWEsUUFBUTs7OzJCQWVqRSxTQUFTLFNBQUMsS0FBSzs7SUFpQnBCLDhCQUFDO0NBQUEsQUE3QkQsQ0FVNkMsMkJBQTJCLEdBbUJ2RTtTQW5CWSx1QkFBdUI7OztJQUNoQywyQ0FBYzs7SUFDZCwyQ0FBdUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBEYXRlOiAyMDE5LTA4LTE0IDExOjQxOjAwXHJcbiAqIEBMYXN0RWRpdG9yczog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDE5LTEwLTAyIDE3OjA3OjAzXHJcbiAqIEBRUTogMTA1NTgxODIzOVxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqL1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgUmVuZGVyZXIyLCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERhdGFncmlkQmFzZUVkaXRvckRpcmVjdGl2ZSB9IGZyb20gJy4uL2RhdGFncmlkLWJhc2UtZWRpdG9yLmRpcmVjdGl2ZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnZ3JpZC1lZGl0b3Itc2VsZWN0JyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IFtmb3JtR3JvdXBdPVwiZ3JvdXBcIiBjbGFzcz1cImYtZGF0YWdyaWQtY2VsbC1mb3JtZ3JvdXBcIj5cclxuICAgICAgICA8c2VsZWN0ICNzZWwgY2xhc3M9XCJjdXN0b20tc2VsZWN0XCIgW2Zvcm1Db250cm9sTmFtZV09XCJjb2x1bW4uZmllbGRcIiAoY2xpY2spPVwib25DbGljaygkZXZlbnQpXCIgPlxyXG4gICAgICAgICAgICA8b3B0aW9uICpuZ0Zvcj1cImxldCBjb2wgb2YgZW51bURhdGFcIiB2YWx1ZT1cInt7Y29sW29wdGlvbnMudmFsdWVGaWVsZF19fVwiPnt7IGNvbFtvcHRpb25zLnRleHRGaWVsZF0gfX08L29wdGlvbj5cclxuICAgICAgICA8L3NlbGVjdD5cclxuICAgIDwvZGl2PlxyXG4gICAgYCxcclxufSlcclxuZXhwb3J0IGNsYXNzIERhdGFncmlkU2VsZWN0Q29tcG9uZW50IGV4dGVuZHMgRGF0YWdyaWRCYXNlRWRpdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIGVudW1EYXRhID0gW107XHJcbiAgICBAVmlld0NoaWxkKCdzZWwnKSBpbnN0YW5jZTogRWxlbWVudFJlZjtcclxuICAgIGNvbnN0cnVjdG9yKHJlbmRlcjogUmVuZGVyZXIyLCBlbDogRWxlbWVudFJlZiwgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIocmVuZGVyLCBlbCwgaW5qZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQgPSB0aGlzLmluc3RhbmNlLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucykge1xyXG4gICAgICAgICAgICB0aGlzLmVudW1EYXRhID0gdGhpcy5vcHRpb25zLmRhdGE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xpY2soJGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgICAgJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxufVxyXG4iXX0=