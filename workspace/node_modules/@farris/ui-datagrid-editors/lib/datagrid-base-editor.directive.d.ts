import { OnInit, OnDestroy, AfterViewInit, Renderer2, ElementRef, Injector, NgZone } from '@angular/core';
import { FormGroup, FormControl } from '@angular/forms';
import { DataColumn, DatagridComponent, ValidatorMessagerService, DatagridFacadeService, DatagridRowDirective } from '@farris/ui-datagrid';
export declare class DatagridBaseEditorDirective implements OnInit, OnDestroy, AfterViewInit {
    render: Renderer2;
    el: ElementRef;
    injector: Injector;
    placeholder: string;
    height: string;
    controlId: string;
    type: string;
    options: any;
    group: FormGroup;
    column: DataColumn;
    formControl: FormControl;
    inputElement: any;
    /** 是否正在向server 发送请求 */
    pending: boolean;
    errorMessage: string;
    /** 禁止事件冒泡 */
    stopPropagation: boolean;
    /** 默认焦点 */
    focus: boolean;
    private clickEvent;
    private mouseDownEvent;
    private mouseUpEvent;
    private dblClickEvent;
    vms: ValidatorMessagerService;
    dg: DatagridComponent;
    dfs: DatagridFacadeService;
    validators: any[];
    ngZone: NgZone;
    private _inputKeydown;
    _editorClickEvent: MouseEvent;
    cls: string;
    width: string;
    readonly dr: DatagridRowDirective;
    private focusTimer;
    constructor(render: Renderer2, el: ElementRef, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private setErrorMessage;
    private setFocus;
    eventParams: ($event: any) => {
        rowData: any;
        rowId: any;
        value: any;
        form: FormGroup;
        formControl: FormControl;
    };
    onValueChange($event: any): void;
    startPending(): void;
    endPending(): void;
}
