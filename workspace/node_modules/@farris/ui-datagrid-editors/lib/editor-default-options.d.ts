import { ShowType } from '@farris/ui-datepicker';
export interface InputOptions {
    [key: string]: any;
    placeholder?: string;
    isPassword?: boolean;
    minLength?: number | undefined;
    maxLength?: number | undefined;
}
export declare const InputDefaultOptions: InputOptions;
export declare const TextareaDefaultOptions: {
    editType: string;
    dialogWidth: number;
    dialogHeight: number;
    enableWordCount: boolean;
    countType: string;
    onlyShowInDialog: boolean;
};
export declare const LookupDefaultOptions: {
    dialogWidth: number;
    textAlign: string;
    dialogHeight: number;
    showMaxButton: boolean;
    showCloseButton: boolean;
    resizable: boolean;
    buttonAlign: string;
    searchOnServer: boolean;
    nosearch: boolean;
    editable: boolean;
    expandLevel: number;
    readonly: boolean;
    useTip: boolean;
    useFavorite: boolean;
    isRecordSize: boolean;
    loadTreeDataType: string;
    enableFullTree: boolean;
    enableCascade: boolean;
    cascadeStatus: string;
    enableClear: boolean;
    useExtendInfo: boolean;
    extInfoFields: string;
    extInfoFormatter: any;
    customFormatter: any;
    customNavFormatter: any;
    selectFirstInNav: boolean;
    loadDataWhenOpen: boolean;
    treeInfo: any;
    treeTableOptions: any;
    showCheckAll: boolean;
    quickSelect: {
        enable: boolean;
        showMore: boolean;
        showItemsCount: number;
        footerHeight: number;
    };
    viewType: string;
    showCascadeControl: boolean;
    showNavigation: boolean;
    showSelected: boolean;
    beforeLoadData: any;
    beforeSelectData: any;
    allowQueryFields: any;
    useNewLayout: boolean;
    enableMultiFieldSearch: boolean;
    labels: any;
    searchBarMode: string;
    multipleChoiceSeparator: string;
};
export interface InputGroupOptions extends InputOptions {
    showClear: true;
    groupText: string;
    disabled: boolean;
    readonly: boolean;
    editable: boolean;
    enableViewPassword?: boolean;
    textAlign?: string;
}
export declare const InputGroupDefaultOptions: InputGroupOptions;
export interface DatePickerOptions extends InputOptions {
    disabled: boolean;
    readonly: boolean;
    editable: boolean;
    locale: string;
    dateRange: boolean;
    dateRangeDatesDelimiter: string;
    showTime: boolean;
    showType: ShowType;
    dateFormat: string;
    maxDate?: any;
    minDate?: any;
    showWeekNumbers?: boolean;
    viewType?: string;
    firstDayOfWeek?: 'mo' | 'su';
}
export declare const DatePickerDefaultOptions: DatePickerOptions;
export interface ComboListOptions extends InputOptions {
    disabled?: boolean;
    readonly?: boolean;
    editable?: boolean;
    panelWidth?: number;
    panelHeight?: number | string;
    data?: any;
    idField: string;
    valueField: string;
    textField: string;
    uri?: string;
    multiSelect?: boolean;
    selectedValues?: string;
    autoWidth?: boolean;
    enableCancelSelected: boolean;
    enableClear?: true;
    itemTemplate?: any;
    nosearch?: boolean;
    showDisabledItem?: boolean;
    disabledField?: string;
}
export declare const ComboListDefaultOptions: ComboListOptions;
export interface NumberSpinnerOptions extends InputOptions {
    disabled?: boolean;
    readonly?: boolean;
    editable?: boolean;
    bigNumber?: boolean;
    precision?: number;
    max?: number;
    min?: number;
    step?: number;
    canNull?: boolean;
    groupSeparator?: string;
    showZero?: boolean;
    showButton?: boolean;
}
export declare const NumberSpinnerDefaultOptions: NumberSpinnerOptions;
export declare const SwitchDefaultOptions: {
    readonly: boolean;
    disabled: boolean;
    square: boolean;
};
export declare const TimePickerDefaultOptions: {
    readonly: boolean;
    disabled: boolean;
    hourStep: number;
    minuteStep: number;
    secondStep: number;
    format: string;
    placeholder: string;
    use12Hours: boolean;
    showHeader: boolean;
};
export declare const ComboLookupDefaultOptions: {
    autoWidth: boolean;
    readonly: boolean;
    disabled: boolean;
    editable: boolean;
    panelHeight: number;
    panelWidth: number;
    enableClear: boolean;
    enableCancelSelected: boolean;
    nosearch: boolean;
    showHeader: boolean;
    treeToList: boolean;
    navTreeToList: boolean;
    separator: string;
};
export declare const LanguageTextboxDefaultOptions: {
    languages: any[];
    readonly: boolean;
    disabled: boolean;
    enableClear: boolean;
};
export declare const EnumEditorDefaultOptions: {
    outType: number;
    readonly: boolean;
    editable: boolean;
    disabled: boolean;
    enableClear: boolean;
    textField: string;
    valueField: string;
};
export declare const FilterEditorDefaultOptions: {
    columns: any[];
    showCode: boolean;
    showSql: boolean;
    disabled: boolean;
    readonly: boolean;
    editable: boolean;
    enableClear: boolean;
    fieldEditor: {
        type: string;
    };
    enableExpress: boolean;
    returnType: string;
};
export declare const SortEditorDefaultOptions: {
    columns: any[];
    enableClear: boolean;
    disabled: boolean;
    readonly: boolean;
    editable: boolean;
    fieldEditor: {
        type: string;
    };
    returnType: string;
};
