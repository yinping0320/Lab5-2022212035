{"version":3,"file":"farris-ui-datagrid-editors.js","sources":["ng://@farris/ui-datagrid-editors/lib/datagrid-base-editor.directive.ts","ng://@farris/ui-datagrid-editors/lib/editor-default-options.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-textbox.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-textarea.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-enumeditor.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-filtereditor.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-sorteditor.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-checkbox.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-datepicker.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-inputgroup.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-select.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-lookup.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-numberspinner.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-combolist.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-switch.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-timer.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-combolookup.component.ts","ng://@farris/ui-datagrid-editors/lib/editors/datagrid-languagetextbox.component.ts","ng://@farris/ui-datagrid-editors/lib/editors.ts","ng://@farris/ui-datagrid-editors/lib/tooltip/tooltip.component.ts","ng://@farris/ui-datagrid-editors/lib/datagrid-editors.module.ts"],"sourcesContent":["/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 11:07:01\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-02 15:23:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, OnInit, OnDestroy, AfterViewInit, Renderer2, ElementRef, Input, Injector, NgZone, HostBinding} from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { DataColumn, DatagridComponent, ValidatorMessagerService, DatagridFacadeService, DatagridRowDirective } from '@farris/ui-datagrid';\r\n\r\n@Directive({\r\n    selector: 'datagrid-editor',\r\n})\r\nexport class DatagridBaseEditorDirective implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    @Input() placeholder = '';\r\n    // ç»ä»¶é«åº¦\r\n    @Input() height = '';\r\n    controlId: string;\r\n    type: string;\r\n    options: any = {};\r\n    group: FormGroup;\r\n    column: DataColumn;\r\n    formControl: FormControl;\r\n\r\n    inputElement: any;\r\n    /** æ¯å¦æ­£å¨åserver åéè¯·æ± */\r\n    pending = false;\r\n\r\n    errorMessage: string;\r\n\r\n    /** ç¦æ­¢äºä»¶åæ³¡ */\r\n    stopPropagation = true;\r\n    /** é»è®¤ç¦ç¹ */\r\n    focus = true;\r\n\r\n    private clickEvent: any;\r\n    private mouseDownEvent: any;\r\n    private mouseUpEvent: any;\r\n    private dblClickEvent: any;\r\n    vms: ValidatorMessagerService;\r\n    dg: DatagridComponent;\r\n    dfs: DatagridFacadeService;\r\n    validators = [];\r\n\r\n    ngZone: NgZone;\r\n    private _inputKeydown = null;\r\n\r\n    _editorClickEvent: MouseEvent = null;\r\n    @HostBinding('class') cls = 'datagrid-editor';\r\n    @HostBinding('style.width') width = '100%';\r\n    get dr(): DatagridRowDirective {\r\n        return this.dg.selectedRow.dr;\r\n    }\r\n    private focusTimer = null;\r\n    constructor(public render: Renderer2, public el: ElementRef, public injector: Injector) {\r\n        this.vms = this.injector.get(ValidatorMessagerService);\r\n        this.dg = this.injector.get(DatagridComponent);\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        if (this.column && this.column.editor) {\r\n            this.options = this.column.editor.options;\r\n            this.validators = this.column.editor.validators || [];\r\n\r\n            // å¯ç¨ä»»æè¾å¥åï¼å­ç¬¦æå¤§é¿åº¦å±æ§å¼éªè¯\r\n            // å½maxLength <= 0 æ¶è®¤ä¸ºæ­¤å±æ§æ æ\r\n            if (this.options && this.options.nosearch !== undefined && this.options.nosearch) {\r\n                if ( this.options.maxLength !== undefined && this.options.maxLength <= 0) {\r\n                    this.options.maxLength = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.clickEvent = this.render.listen(this.el.nativeElement, 'click', (e: MouseEvent) => {\r\n            e.stopPropagation();\r\n            this.dg['focusElement'] = this.inputElement;\r\n        });\r\n\r\n        this.mouseDownEvent = this.render.listen(this.el.nativeElement, 'mousedown', (e: MouseEvent) => {\r\n            this._editorClickEvent = e;\r\n        });\r\n\r\n        this.mouseUpEvent = this.render.listen(this.el.nativeElement, 'mouseup', (e: MouseEvent) => {\r\n            this._editorClickEvent = null;\r\n        });\r\n\r\n\r\n        if (this.group) {\r\n            this.formControl = this.group.controls[this.column.field] as FormControl;\r\n        }\r\n        // this.dblClickEvent = this.render.listen(this.el.nativeElement, 'dblclick', (e: MouseEvent) => {\r\n        //     e.stopPropagation();\r\n        //     e.preventDefault();\r\n        // });\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.setFocus();\r\n        if (this['instance']) {\r\n            this['instance'].inDatagrid = true;\r\n        }\r\n        this.setErrorMessage();\r\n\r\n        this._inputKeydown =  this.render.listen(this.inputElement, 'keydown', (e) => {\r\n            if (e.ctrlKey || e.shiftKey) {\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n\r\n        if (this.formControl) {\r\n            this.formControl.valueChanges.subscribe( (val: any) => {\r\n                // è®°å½åæ´é\r\n                if (!this.formControl.pristine) {\r\n                    const rowId = this.dg.selectedRow ? this.dg.selectedRow.id : '';\r\n                    if (rowId) {\r\n                        const keyField = this.dg.idField;\r\n                        const changeData = { [keyField]: rowId, [this.column.field]: val };\r\n                        this.dfs.appendChanges(changeData);\r\n                    }\r\n                }\r\n                this.setErrorMessage();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.clickEvent) {\r\n            this.clickEvent();\r\n        }\r\n        if (this.dblClickEvent) {\r\n            this.dblClickEvent();\r\n        }\r\n\r\n        if (this.mouseDownEvent) {\r\n            this.mouseDownEvent();\r\n        }\r\n        if (this.mouseUpEvent) {\r\n            this.mouseUpEvent();\r\n        }\r\n\r\n        if (this.dg) {\r\n            this.dg['focusElement'] = null;\r\n        }\r\n        if (this._inputKeydown) {\r\n            this._inputKeydown();\r\n            this._inputKeydown = null;\r\n            this.inputElement = null;\r\n        }\r\n\r\n    }\r\n\r\n    private setErrorMessage() {\r\n        if (this.formControl && this.formControl.invalid) {\r\n            Object.keys(this.formControl.errors).forEach( (key: string) => {\r\n                this.errorMessage = this.vms.getValidatorErrorMessage(key, this.validators);\r\n            });\r\n        }\r\n    }\r\n\r\n    private setFocus() {\r\n        if (!this.focus) {\r\n            return;\r\n        }\r\n\r\n        if (this.ngZone) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                if (this.focusTimer) {\r\n                    clearTimeout(this.focusTimer);\r\n                }\r\n                this.focusTimer = setTimeout(() => {\r\n                    if (this.inputElement && this.dg.editMode === 'cell') {\r\n                        if (this.dg && this.dg.selectOnEditing) {\r\n                            if (this.inputElement.select) {\r\n                                this.inputElement.select();\r\n                            }\r\n                        } else {\r\n                            this.inputElement.focus();\r\n                        }\r\n\r\n                        this.dg['focusElement'] = this.inputElement;\r\n                    }\r\n                }, 10);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    eventParams = ($event) => {\r\n        let rowData = null;\r\n        let rowId = null;\r\n        if (this.dr) {\r\n            rowData = this.dr.rowData;\r\n            rowId = this.dr.rowId;\r\n        }\r\n\r\n        return {\r\n            rowData,\r\n            rowId,\r\n            value: $event,\r\n            form: this.group,\r\n            formControl: this.formControl\r\n        };\r\n    }\r\n\r\n    onValueChange($event) {\r\n        if (this.options.valueChange) {\r\n            this.options.valueChange(this.eventParams($event));\r\n        }\r\n    }\r\n\r\n    startPending() {\r\n        this.pending = true;\r\n        this.dg.pending = true;\r\n    }\r\n\r\n    endPending() {\r\n        this.pending = false;\r\n        this.dg.pending = false;\r\n    }\r\n}\r\n","import { ShowType } from '@farris/ui-datepicker';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-15 13:40:38\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-22 14:26:10\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nexport interface InputOptions {\r\n    [key: string]: any;\r\n    placeholder?: string;\r\n    isPassword?: boolean;\r\n    minLength?: number | undefined;\r\n    maxLength?: number | undefined;\r\n}\r\n\r\nexport const InputDefaultOptions: InputOptions = {\r\n    placeholder: '',\r\n    isPassword: false,\r\n    minLength: undefined,\r\n    maxLength: undefined\r\n};\r\n\r\nexport const TextareaDefaultOptions = {\r\n    editType: 'default', // 'dialog'\r\n    dialogWidth: 400,\r\n    dialogHeight: 300,\r\n    enableWordCount: false,\r\n    countType: 'length',\r\n    onlyShowInDialog: true\r\n};\r\n\r\nexport const LookupDefaultOptions = {\r\n    dialogWidth: 500,\r\n    textAlign: 'left',\r\n    dialogHeight: 600,\r\n    showMaxButton: true,\r\n    showCloseButton: true,\r\n    resizable: true,\r\n    buttonAlign: 'center',\r\n    searchOnServer: true,\r\n    nosearch: false,\r\n    editable: false,\r\n    expandLevel: -1,\r\n    readonly: false,\r\n    useTip: false,\r\n    useFavorite: false,\r\n    isRecordSize: false,\r\n    loadTreeDataType: 'default',\r\n    enableFullTree: false,\r\n    enableCascade: false,\r\n    cascadeStatus: 'enable',\r\n    enableClear: true,\r\n    useExtendInfo: false,\r\n    extInfoFields: '',\r\n    extInfoFormatter: null,\r\n    customFormatter: null,\r\n    customNavFormatter: null,\r\n    selectFirstInNav: false,\r\n    loadDataWhenOpen: true,\r\n    treeInfo: null,\r\n    treeTableOptions: null,\r\n    showCheckAll: false,\r\n    quickSelect: {\r\n        enable: false,\r\n        showMore: true,\r\n        showItemsCount: 10,\r\n        footerHeight: 0\r\n    },\r\n    viewType: 'text',\r\n    showCascadeControl: true,\r\n    showNavigation: true,\r\n    showSelected: false,\r\n    beforeLoadData: null,\r\n    beforeSelectData: null,\r\n    allowQueryFields: null,\r\n    useNewLayout: false,\r\n    enableMultiFieldSearch: false,\r\n    labels: null,\r\n    searchBarMode: 'both',\r\n    multipleChoiceSeparator: ','\r\n};\r\n\r\nexport interface InputGroupOptions extends InputOptions {\r\n    showClear: true;\r\n    groupText: string;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    editable: boolean;\r\n    enableViewPassword?: boolean;\r\n    textAlign?: string;\r\n}\r\n\r\n\r\nexport const InputGroupDefaultOptions: InputGroupOptions = {\r\n    showClear: true,\r\n    groupText: '',\r\n    disabled: false,\r\n    readonly: false,\r\n    editable: true,\r\n    isPassword: false,\r\n    enableViewPassword: true,\r\n    textAlign: 'left',\r\n    minLength: undefined,\r\n    maxLength: undefined\r\n};\r\n\r\nexport interface DatePickerOptions extends InputOptions {\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    editable: boolean;\r\n    locale: string;\r\n    dateRange: boolean;\r\n    dateRangeDatesDelimiter: string;\r\n    showTime: boolean;\r\n    showType: ShowType;\r\n    dateFormat: string;\r\n    maxDate?: any;\r\n    minDate?: any;\r\n    showWeekNumbers?: boolean;\r\n    viewType?: string;\r\n    firstDayOfWeek?: 'mo'|'su';\r\n}\r\n\r\n\r\nexport const DatePickerDefaultOptions: DatePickerOptions = {\r\n    disabled: false,\r\n    readonly: false,\r\n    editable: true,\r\n    locale: 'zh-cn',\r\n    dateRange: false,\r\n    dateRangeDatesDelimiter: '~',\r\n    showTime: false,\r\n    showType: ShowType.all,\r\n    dateFormat: '',\r\n    placeholder: '',\r\n    maxDate: {\r\n        year: 2030,\r\n        month: 12,\r\n        day: 31\r\n    },\r\n    minDate: {\r\n        year: 1840,\r\n        month: 1,\r\n        day: 1\r\n    },\r\n    useDefault: false,\r\n    returnType: 'String',\r\n    returnFormat: '',\r\n    showWeekNumbers: false,\r\n    viewType: 'switch',\r\n    showPresent: false,\r\n    hourStep: 1,\r\n    minuteStep: 1,\r\n    secondStep: 1,\r\n    firstDayOfWeek: 'mo'\r\n};\r\n\r\n\r\n\r\nexport interface ComboListOptions extends InputOptions {\r\n    disabled?: boolean;\r\n    readonly?: boolean;\r\n    editable?: boolean;\r\n    panelWidth?: number;\r\n    panelHeight?: number | string;\r\n    data?: any;\r\n    idField: string;\r\n    valueField: string;\r\n    textField: string;\r\n    uri?: string;\r\n    multiSelect?: boolean;\r\n    selectedValues?: string;\r\n    autoWidth?: boolean;\r\n    enableCancelSelected: boolean;\r\n    enableClear?: true;\r\n    itemTemplate?: any;\r\n    nosearch?: boolean;\r\n    showDisabledItem?: boolean;\r\n    disabledField?: string;\r\n}\r\n\r\nexport const ComboListDefaultOptions: ComboListOptions = {\r\n    disabled: false,\r\n    readonly: false,\r\n    editable: true,\r\n    placeholder: 'è¯·éæ©',\r\n    panelWidth: 300,\r\n    panelHeight: 'auto',\r\n    autoWidth: true,\r\n    data: [],\r\n    idField: 'id',\r\n    multiSelect: false,\r\n    uri: '',\r\n    textField: '',\r\n    valueField: '',\r\n    enableCancelSelected: true,\r\n    enableClear: true,\r\n    itemTemplate: null,\r\n    nosearch: false,\r\n    showDisabledItem: true,\r\n    disabledField: 'disabled' \r\n};\r\n\r\n\r\nexport interface NumberSpinnerOptions extends InputOptions {\r\n    disabled?: boolean;\r\n    readonly?: boolean;\r\n    editable?: boolean;\r\n    bigNumber?: boolean;\r\n    precision?: number;\r\n    max?: number;\r\n    min?: number;\r\n    step?: number;\r\n    canNull?: boolean;\r\n    groupSeparator?: string;\r\n    showZero?: boolean;\r\n    showButton?: boolean;\r\n}\r\n\r\nexport const NumberSpinnerDefaultOptions: NumberSpinnerOptions = {\r\n    disabled: false,\r\n    readonly: false,\r\n    editable: true,\r\n    bigNumber: false,\r\n    placeholder: '',\r\n    precision: 0,\r\n    step: 1,\r\n    canNull: true,\r\n    groupSeparator: ',',\r\n    showButton: true,\r\n    showZero: true,\r\n    textAlign: ''\r\n};\r\n\r\n\r\nexport const SwitchDefaultOptions = {\r\n    readonly: false,\r\n    disabled: false,\r\n    square: false,\r\n};\r\n\r\nexport const TimePickerDefaultOptions = {\r\n    readonly: false,\r\n    disabled: false,\r\n    hourStep: 1,\r\n    minuteStep: 1,\r\n    secondStep: 1,\r\n    format: 'HH:mm:ss',\r\n    placeholder: '',\r\n    use12Hours: false,\r\n    showHeader: false\r\n};\r\n\r\nexport const ComboLookupDefaultOptions = {\r\n    autoWidth: false,\r\n    readonly: false,\r\n    disabled: false,\r\n    editable: false,\r\n    panelHeight: 300,\r\n    panelWidth: 400,\r\n    enableClear: true,\r\n    enableCancelSelected: true,\r\n    nosearch: false,\r\n    showHeader: true,\r\n    treeToList: false,\r\n    navTreeToList: false,\r\n    separator: ','\r\n};\r\n\r\nexport const LanguageTextboxDefaultOptions = {\r\n    languages: [],\r\n    readonly: false,\r\n    disabled: false,\r\n    enableClear: true\r\n};\r\n\r\nexport const EnumEditorDefaultOptions = {\r\n    outType: 0,\r\n    readonly: false,\r\n    editable: false,\r\n    disabled: false,\r\n    enableClear: true,\r\n    textField: 'name',\r\n    valueField: 'value'\r\n};\r\n\r\nexport const FilterEditorDefaultOptions = {\r\n    columns: [],\r\n    showCode: false,\r\n    showSql: false,\r\n    disabled: false,\r\n    readonly: false,\r\n    editable: false,\r\n    enableClear: false,\r\n    fieldEditor: { type: 'select'},\r\n    enableExpress: false,\r\n    returnType: 'string'\r\n};\r\n\r\nexport const SortEditorDefaultOptions = {\r\n    columns: [],\r\n    enableClear: false,\r\n    disabled: false,\r\n    readonly: false,\r\n    editable: false,\r\n    fieldEditor: { type: 'select'},\r\n    returnType: 'string'\r\n};\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 11:10:33\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 13:19:18\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, OnDestroy, ViewChild, Input, Injector } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { InputDefaultOptions } from '../editor-default-options';\r\n\r\n@Component({\r\n    selector: 'grid-editor-textbox',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <input #input [attr.type]=\"inputType\" class=\"form-control \"\r\n            [attr.placeholder]=\"options?.placeholder\" [formControlName]=\"column.field\"  maxlength=\"{{options?.maxLength}}\">\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridTextboxComponent extends DatagridBaseEditorDirective implements OnInit, OnDestroy {\r\n    @ViewChild('input') instance: ElementRef;\r\n\r\n    inputType = 'text';\r\n    constructor(render: Renderer2, el: ElementRef, injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.options = Object.assign({}, InputDefaultOptions, this.options);\r\n        this.inputElement = this.instance.nativeElement;\r\n        if (this.options.isPassword) {\r\n            this.inputType = 'password';\r\n        } else {\r\n            this.inputType = 'text';\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        super.ngOnDestroy();\r\n        this.instance = null;\r\n        this.inputElement = null;\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:44:30\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 13:15:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ElementRef, ViewChild, Renderer2, NgZone, OnDestroy, Injector } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { TextareaWordcountDirective } from '@farris/ui-forms';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\n\r\n@Component({\r\n    selector: 'grid-editor-textarea',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\" style=\"position:relative\">\r\n        <datagrid-tooltip [control]=\"formControl\" [tooltipPosition]=\"'top-left'\" [message]=\"errorMessage\">\r\n            <textarea #input class=\"form-control\"\r\n                style=\"height:100%;resize:none;min-height:auto;\"\r\n                [formControlName]=\"column.field\"\r\n                [word-count]=\"options?.enableWordCount\"\r\n                [countType]=\"options?.countType\"\r\n                #wordcount=\"WordCountRef\"\r\n                [onlyShowInDialog]=\"options?.onlyShowInDialog\"\r\n                maxlength=\"{{options?.maxLength}}\"\r\n                [common-comments]=\"options?.comments\"></textarea>\r\n        </datagrid-tooltip>\r\n        <span class=\"f-icon modal_maximize\" title=\"å¼¹åºçªå£è¿è¡ç¼è¾\" *ngIf=\"options?.editType && options?.editType !== 'default'\"\r\n             style=\"position: absolute;top: 2px;right: 2px; cursor:pointer\" (click)=\"showDialog()\"></span>\r\n    </div>\r\n    `\r\n})\r\nexport class DatagridTextareaComponent extends DatagridBaseEditorDirective implements OnInit, OnDestroy {\r\n    @ViewChild('input') instance: ElementRef;\r\n    @ViewChild('wordcount') wordcountref: TextareaWordcountDirective;\r\n    private inputClickHandler: any;\r\n    private modalService: BsModalService;\r\n    private messagerService: MessagerService;\r\n    private eventManager: EventManager;\r\n\r\n    private altEnterHandler = null;\r\n    constructor(\r\n            render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector\r\n           ) {\r\n        super(render, el, injector);\r\n        this.modalService = this.injector.get(BsModalService);\r\n        this.messagerService = this.injector.get(MessagerService);\r\n        this.eventManager = this.injector.get(EventManager);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        if (!this.dg.nowrap) {\r\n            this.render.setStyle(this.instance.nativeElement, 'height', `${this.height}px`);\r\n        }\r\n        this.inputElement = this.instance.nativeElement;\r\n        this.ngzone.runOutsideAngular( () => {\r\n            this.inputClickHandler = this.render.listen(this.instance.nativeElement, 'click', (e: MouseEvent) => {\r\n                e.stopPropagation();\r\n                return false;\r\n            });\r\n        });\r\n\r\n        this.bindEventHandler();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.instance) {\r\n            this.inputClickHandler();\r\n\r\n            if (this.altEnterHandler) {\r\n                this.altEnterHandler();\r\n            }\r\n        }\r\n    }\r\n\r\n    private bindEventHandler() {\r\n        this.altEnterHandler = this.eventManager.addEventListener(this.inputElement, 'keydown.alt.enter',\r\n        (event: KeyboardEvent) => {\r\n            const target = (event.target as any);\r\n            const val = target.value + '\\n';\r\n            target.value = val;\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    showDialog() {\r\n\r\n        const { dialogWidth, dialogHeight } = this.options;\r\n        const opts = {\r\n            width: dialogWidth || 500,\r\n            height: dialogHeight || 400,\r\n            showFontSize: true,\r\n            enableWordCount: this.options.enableWordCount,\r\n            countType: this.options.countType,\r\n            maxLength: this.options.maxLength\r\n        };\r\n\r\n        this.messagerService.prompt2(this.column.title, this.formControl.value, opts).subscribe(v => {\r\n            // å¨å¼¹çªä¸­æ¸ç©ºåå®¹ï¼å³é­çªå£æ æ³æ¸ç©ºè¡åç¼è¾çåå®¹\r\n            if (v == null || v === undefined) {\r\n                v = '';\r\n            }\r\n\r\n            if(v !== false) {\r\n                this.formControl.setValue(v);\r\n            }\r\n            \r\n            this.inputElement.focus();\r\n\r\n            if (!this.options.onlyShowInDialog && this.wordcountref) {\r\n                this.wordcountref.updateWordsCount();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Renderer2, ElementRef, NgZone, Injector, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { EnumEditorInputComponent } from '@farris/ui-enum-editor';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { EnumEditorDefaultOptions } from '../editor-default-options';\r\n\r\n@Component({\r\n    selector: 'datagrid-enum-editor',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n    <enum-editor-input #eei\r\n        style=\"width: 100%\"\r\n        [formControlName]=\"column.field\"\r\n        [readonly]=\"options.readonly\"\r\n        [editable]=\"options.editable\"\r\n        [disabled]=\"options.disabled\"\r\n        [enableClear]=\"options.enableClear\"\r\n        [outType]=\"options.outType\"\r\n        [textField]=\"options.textField\"\r\n        [valueField]=\"options.valueField\">\r\n    </enum-editor-input>\r\n    </div>\r\n    `\r\n})\r\nexport class DatagridEnumEditorComponent  extends DatagridBaseEditorDirective implements OnInit, AfterViewInit {\r\n    @ViewChild('eei') instance: EnumEditorInputComponent;\r\n    constructor(\r\n        render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector\r\n    ) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.options = Object.assign( {} , EnumEditorDefaultOptions, this.options);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.inputElement = this.instance.inputGroupRef.textbox.nativeElement;\r\n        super.ngAfterViewInit();\r\n    }\r\n}\r\n","import { Component, OnInit, Renderer2, ElementRef, NgZone, Injector, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { FilterComponent } from '@farris/ui-filter-editor';\r\nimport { FilterEditorDefaultOptions } from '../editor-default-options';\r\n@Component({\r\n    selector: 'datagrid-filter-editor',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <filter #filterEditor\r\n            style=\"width: 100%\"\r\n            [formControlName]=\"column.field\"\r\n            [columns]=\"options.columns\"\r\n            [showCode]=\"options.showCode\"\r\n            [showSql]=\"options.showSql\"\r\n            [disabled]=\"options.disabled\"\r\n            [readonly]=\"options.readonly\"\r\n            [editable]=\"options.editable\"\r\n            [enableClear]=\"options.enableClear\"\r\n            [fieldEditor]=\"options.fieldEditor\"\r\n            [enableExpress]=\"options.enableExpress\"\r\n            [returnType]=\"options.returnType\"\r\n            (showExpress)=\"options?.onshowExpress($event)\"></filter>\r\n    </div>\r\n    `\r\n})\r\nexport class DatagridFilterEditorComponent  extends DatagridBaseEditorDirective implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('filterEditor') instance: FilterComponent;\r\n\r\n    constructor(\r\n        render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector\r\n    ) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.options = Object.assign( {} , FilterEditorDefaultOptions, this.options);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.inputElement = this.instance.textbox.nativeElement;\r\n        super.ngAfterViewInit();\r\n    }\r\n}\r\n","import { Component, OnInit, Renderer2, ElementRef, NgZone, Injector, ViewChild, AfterViewInit } from '@angular/core';\r\n\r\nimport { SorterComponent } from '@farris/ui-sort-editor';\r\n\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { SortEditorDefaultOptions } from '../editor-default-options';\r\n\r\n@Component({\r\n    selector: 'datagrid-sort-editor',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <sorter #sorter\r\n            style=\"width: 100%\"\r\n            [formControlName]=\"column.field\"\r\n            [columns]=\"options.columns\"\r\n            [fieldEditor]=\"options.fieldEditor\"\r\n            [enableClear]=\"options.enableClear\"\r\n            [disabled]=\"options.disabled\"\r\n            [readonly]=\"options.readonly\"\r\n            [editable]=\"options.editable\"\r\n            [returnType]=\"options.returnType\"\r\n        ></sorter>\r\n    </div>\r\n    `\r\n})\r\nexport class DatagridSortEditorComponent  extends DatagridBaseEditorDirective implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('sorter') instance: SorterComponent;\r\n\r\n    constructor(\r\n        render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector\r\n    ) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.options = Object.assign( {} , SortEditorDefaultOptions, this.options);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.inputElement = this.instance.textbox.nativeElement;\r\n        super.ngAfterViewInit();\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:44:10\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 12:46:12\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, NgZone, ViewChild, Injector } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\n\r\n@Component({\r\n    selector: 'grid-editor-checkbox',\r\n    template: `<div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup\" #chkbox>\r\n    <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [formControlName]=\"column.field\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div></div>\r\n    `\r\n})\r\nexport class DatagridCheckboxComponent extends DatagridBaseEditorDirective implements OnInit {\r\n\r\n    checked: boolean;\r\n    @ViewChild('chk') instance: ElementRef;\r\n    @ViewChild('chkbox') chkboxEl: ElementRef;\r\n\r\n    constructor(\r\n        render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector\r\n    ) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.inputElement = this.instance.nativeElement;\r\n        this.checked = this.formControl.value;\r\n\r\n        const align = this.column.align || 'left';\r\n        this.render.setStyle(this.chkboxEl.nativeElement, 'justify-content', align);\r\n\r\n        this.render.listen(this.inputElement, 'keydow.Sapce', this.onSpaceHandle);\r\n    }\r\n\r\n    onSpaceHandle($event: KeyboardEvent) {\r\n        $event.preventDefault();\r\n        $event.stopPropagation();\r\n        this.checkedChanges();\r\n    }\r\n\r\n    handleClick(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.checkedChanges();\r\n    }\r\n\r\n    private checkedChanges() {\r\n        this.checked = !this.checked;\r\n        this.formControl.setValue(this.checked);\r\n        this.formControl.markAsDirty();\r\n\r\n        if (this.options && this.options.valueChange) {\r\n            const p = this.eventParams(event);\r\n            p.value = this.checked;\r\n            p['instance'] = this.instance;\r\n            p['editor'] = this;\r\n            this.options.valueChange(p);\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Renderer2, ElementRef, NgZone, Input, ViewChild, Injector, AfterViewInit } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from './../datagrid-base-editor.directive';\r\nimport { FarrisDatepickerComponent } from '@farris/ui-datepicker';\r\nimport { DatePickerDefaultOptions } from '../editor-default-options';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:40:36\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 12:58:14\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\n@Component({\r\n    selector: 'grid-editor-datepicker',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <farris-datepicker\r\n            #datepicker\r\n            style=\"width: 100%\"\r\n            [formControlName]=\"column.field\"\r\n            [readonly]=\"options.readonly\"\r\n            [editable]=\"options.editable\"\r\n            [locale]=\"options.locale\"\r\n            [dateRange]=\"options.dateRange\"\r\n            [showTime]=\"options.showTime\"\r\n            [showType]=\"options.showType\"\r\n            [dateFormat]=\"options.dateFormat\"\r\n            [returnFormat]=\"options.returnFormat\"\r\n            [returnType]=\"options.returnType\"\r\n            [useDefault]=\"options.useDefault\"\r\n            [placeholder]=\"options.placeholder\"\r\n            [maxDate]=\"options.maxDate\"\r\n            [minDate]=\"options.minDate\"\r\n            [dateRangeDatesDelimiter]=\"options.dateRangeDatesDelimiter\"\r\n            [showWeekNumbers]=\"options?.showWeekNumbers\"\r\n            [shortcuts]=\"[]\"\r\n            (clear)=\"onClear($event)\"\r\n            (valueChange)=\"onValueChange($event)\"\r\n            [viewType]=\"options.viewType\"\r\n            [showPresent]=\"options.showPresent\"\r\n            [hourStep]=\"options.hourStep\"\r\n            [minuteStep]=\"options.minuteStep\"\r\n            [secondStep]=\"options.secondStep\"\r\n            [firstDayOfWeek]=\"options.firstDayOfWeek\"\r\n        ></farris-datepicker>\r\n    </div>\r\n\r\n\r\n    `,\r\n})\r\nexport class DatagridDatepickerComponent extends DatagridBaseEditorDirective implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('datepicker') instance: FarrisDatepickerComponent;\r\n\r\n    constructor(\r\n        render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector\r\n       ) {\r\n    super(render, el, injector);\r\n}\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.options = Object.assign( {} , DatePickerDefaultOptions, this.options);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.inputElement = this.instance.dateInput ? this.instance.dateInput.nativeElement : this.el.nativeElement.querySelector('input') ;\r\n        super.ngAfterViewInit();\r\n    }\r\n\r\n    onClear($event) {\r\n        if (this.options.clear) {\r\n            this.options.clear(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onValueChange($event) {\r\n        if (this.options.valueChange) {\r\n            this.options.valueChange(this.eventPrams($event));\r\n        }\r\n\r\n        if (this.inputElement) {\r\n            this.inputElement.focus();\r\n        }\r\n    }\r\n\r\n    private eventPrams($event) {\r\n        const p = this.eventParams($event);\r\n        p['instance'] = this.instance;\r\n        p['editor'] = this;\r\n        return p;\r\n    }\r\n}\r\n","import { EventEmitter, Injector } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:41:00\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 13:04:50\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, ViewChild, Input, Output } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { InputGroupDefaultOptions } from '../editor-default-options';\r\n\r\n@Component({\r\n    selector: 'grid-editor-inputgroup',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <input-group #ig style=\"width: 100%\"\r\n            (clear)=\"onClear($event)\"\r\n            (clickHandle)=\"onClick($event)\"\r\n            (valueChange)=\"onValueChange($event)\"\r\n            [readonly] = \"options.readonly\"\r\n            [editable] = \"options.editable\"\r\n            [enableClear] = \"options.showClear\"\r\n            [groupText] = \"options.groupText\"\r\n            [isPassword] = \"options.isPassword\"\r\n            [textAlign]=\"options.textAlign\"\r\n            [enableViewPassword]=\"options.enableViewPassword\"\r\n            [formControlName]=\"column.field\"\r\n            [maxLength]=\"options.maxLength\"\r\n            ></input-group>\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridInputGroupComponent extends DatagridBaseEditorDirective implements OnInit {\r\n\r\n    @Output() clear = new EventEmitter();\r\n    @Output() clickHandle = new EventEmitter();\r\n\r\n    @ViewChild('ig') instance: InputGroupComponent;\r\n    constructor(\r\n        render: Renderer2, el: ElementRef, public injector: Injector\r\n       ) {\r\n    super(render, el, injector);\r\n}\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.inputElement = this.instance.textbox.nativeElement;\r\n        this.options = Object.assign( {} , InputGroupDefaultOptions, this.options);\r\n    }\r\n\r\n    onClear($event) {\r\n        if (this.options.clear) {\r\n            this.options.clear.call(this, this.eParams($event));\r\n        } else {\r\n            this.clear.emit();\r\n        }\r\n        this.instance.cd.detectChanges();\r\n        return false;\r\n    }\r\n\r\n    onClick($event) {\r\n        if (this.options.clickHandle) {\r\n            this.options.clickHandle.call(this, this.eParams($event));\r\n        } else {\r\n            this.clickHandle.emit();\r\n        }\r\n        this.instance.cd.detectChanges();\r\n        return false;\r\n    }\r\n\r\n    onValueChange($event) {\r\n        if (this.options.valueChange) {\r\n            this.options.valueChange.call(this, this.eParams($event));\r\n        }\r\n    }\r\n\r\n    private eParams($event) {\r\n        const p = this.eventParams($event);\r\n        p['$event'] = $event;\r\n        p['instance'] = this.instance;\r\n        p['editor'] = this;\r\n        p.value = $event ? $event.value : '';\r\n        return p;\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:41:00\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-02 17:07:03\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, ViewChild, Injector } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\n\r\n@Component({\r\n    selector: 'grid-editor-select',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup\">\r\n        <select #sel class=\"custom-select\" [formControlName]=\"column.field\" (click)=\"onClick($event)\" >\r\n            <option *ngFor=\"let col of enumData\" value=\"{{col[options.valueField]}}\">{{ col[options.textField] }}</option>\r\n        </select>\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridSelectComponent extends DatagridBaseEditorDirective implements OnInit {\r\n    enumData = [];\r\n    @ViewChild('sel') instance: ElementRef;\r\n    constructor(render: Renderer2, el: ElementRef, injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.inputElement = this.instance.nativeElement;\r\n        if (this.options) {\r\n            this.enumData = this.options.data;\r\n        }\r\n    }\r\n\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n}\r\n","import { debounceTime } from 'rxjs/operators';\r\nimport { AfterViewInit, ApplicationRef, Inject, forwardRef, Injector } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:41:00\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 13:00:48\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, ViewChild } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { LookupDefaultOptions } from '../editor-default-options';\r\nimport { LookupGridComponent } from '@farris/ui-lookup';\r\nimport { RuntimeStateService } from '@farris/ui-common';\r\n\r\n\r\n// \r\n@Component({\r\n    selector: 'grid-editor-lookup',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <datagrid-tooltip [control]=\"formControl\" [tooltipPosition]=\"'top-left'\" [message]=\"errorMessage\">\r\n            <farris-lookup-grid #lookup style=\"width: 100%\"\r\n                id=\"{{ controlId }}\"\r\n                [formControlName]=\"column.field\"\r\n                [uri]=\"options.uri\"\r\n                [helpId]=\"options.helpId\"\r\n                [displayType]=\"options.displayType\"\r\n                [singleSelect]=\"options.singleSelect\"\r\n                [idField]=\"options.idField\"\r\n                [pageSize]=\"options.pageSize || 20\"\r\n                [pageIndex]=\"options.pageSize || 1\"\r\n                [pagination]=\"options.pageination\"\r\n                [textField]=\"options.textField\"\r\n                [valueField]=\"options.valueField\"\r\n                [title]=\"options.title\"\r\n                [useFavorite]=\"options.useFavorite\"\r\n                [isRecordSize]=\"options.isRecordSize\"\r\n                [useTip]=\"options.useTip\"\r\n                [editable]=\"options.editable\"\r\n                [readonly]=\"options.readonly\"\r\n                [dialogWidth]=\"options.dialogWidth\"\r\n                [dialogHeight]=\"options.dialogHeight\"\r\n                [showMaxButton]=\"options.showMaxButton\"\r\n                [showCloseButton]=\"options.showCloseButton\"\r\n                [resizable]=\"options.resizable\"\r\n                [buttonAlign]=\"options.buttonAlign\"\r\n                [enableClear]=\"options.enableClear\"\r\n                [searchOnServer]=\"options.searchOnServer\"\r\n                [nosearch]=\"options.nosearch\"\r\n                [maxLength]=\"options.maxLength\"\r\n                [mappingFn]=\"options.mappingFn\"\r\n                [mapFields]=\"options.mapFields\"\r\n                [context]=\"options.context\"\r\n                [expandLevel]=\"options.expandLevel\"\r\n                [dictPicking]=\"options.dictPicking\"\r\n                [dictPicked]=\"options.dictPicked\"\r\n                [enableFullTree]=\"options.enableFullTree\"\r\n                [loadTreeDataType]=\"options.loadTreeDataType\"\r\n                [enableCascade]=\"options.enableCascade\"\r\n                [cascadeStatus]=\"options.cascadeStatus\"\r\n                [useExtendInfo]=\"options.useExtendInfo\"\r\n                [extInfoFields]=\"options.extInfoFields\"\r\n                [extInfoFormatter]=\"options.extInfoFormatter\"\r\n                [textAlign]=\"options.textAlign\"\r\n                [loadDataWhenOpen]=\"options.loadDataWhenOpen\"\r\n                [selectFirstInNav]=\"options.selectFirstInNav\"\r\n                [customNavFormatter]=\"options.customNavFormatter\"\r\n                [customFormatter]=\"options.customFormatter\"\r\n                [treeInfo]=\"options?.treeInfo\"\r\n                [treeTableOptions]=\"options?.treeTableOptions\"\r\n                [showCheckAll]=\"options?.showCheckAll\"\r\n                [viewType]=\"options?.viewType\"\r\n                [quickSelect]=\"options?.quickSelect\"\r\n                [treeToList]=\"options?.treeToList\"\r\n                [navTreeToList]=\"options?.navTreeToList\"\r\n                [showCascadeControl]=\"options.showCascadeControl\"\r\n                [showNavigation]=\"options.showNavigation\"\r\n                [showSelected]=\"options.showSelected\"\r\n                [beforeLoadData]=\"options.beforeLoadData\"\r\n                [beforeSelectData]=\"options.beforeSelectData\"\r\n                [searchBarMode]=\"options.searchBarMode\"\r\n                [enableMultiFieldSearch]=\"options.enableMultiFieldSearch\"\r\n                [useNewLayout]=\"options.useNewLayout\"\r\n                (dialogClosed)=\"onDialogClosed()\"\r\n                (dialogOpened)=\"onDialogOpen()\"\r\n                (clear)=\"onClear($event)\"\r\n                (loadSuccess)=\"onLoadSuccess()\"\r\n                (tagRemoved)=\"onTagRemoved($event)\"\r\n                [multipleChoiceSeparator]=\"options.multipleChoiceSeparator\"\r\n                [labels]=\"options.labels\"\r\n                [allowQueryFields]=\"options.allowQueryFields\"\r\n            ></farris-lookup-grid>\r\n        </datagrid-tooltip>\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridLookupComponent extends DatagridBaseEditorDirective implements OnInit, AfterViewInit {\r\n    @ViewChild('lookup') instance: LookupGridComponent;\r\n\r\n\r\n    set controlId(id) {\r\n        this.instance.controlId = id;\r\n        if (this.instance.uri) {\r\n            this.instance.controlId += '_' + this.instance.uri;\r\n        }\r\n    }\r\n\r\n    stopPropagation = false;\r\n    constructor(render: Renderer2, el: ElementRef, private rts: RuntimeStateService,\r\n                injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n\r\n        if (!this.options.valueField) {\r\n            this.options.valueField = this.options.idField\r\n        }\r\n\r\n        if (this.options.showNavigation === undefined || this.options.showNavigation === null) {\r\n            this.options.showNavigation = true;\r\n        }\r\n\r\n        this.options = Object.assign( {} , LookupDefaultOptions, this.options);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.instance.changeDetector.detectChanges();\r\n        if (this.options.viewType === 'tag') {\r\n            this.inputElement = this.instance.tagbox.nativeElement;\r\n        } else {\r\n            this.inputElement = this.instance.inputGroup.textbox.nativeElement;\r\n        }\r\n        super.ngAfterViewInit();\r\n        if (this.options.loader) {\r\n            if (this.instance['http']) {\r\n                const getDataFn = this.instance['http'];\r\n                this.instance['http'] = {...getDataFn, getData: this.options.loader};\r\n            } else {\r\n                this.instance['http'] = {getData: this.options.loader};\r\n            }\r\n        }\r\n\r\n        this.instance['host'] = this.dg;\r\n\r\n        this.rts.state$.pipe(\r\n            debounceTime(10)\r\n        ).subscribe(state => {\r\n            if (state && state.form && state.form.lookup && this.dg) {\r\n                this.pending = state.form.lookup.pending;\r\n                this.dg.pending = this.pending;\r\n            }\r\n        });\r\n    }\r\n\r\n    onDialogClosed() {\r\n        // this.lookup.changeDetector.detectChanges();\r\n    }\r\n\r\n    onDialogOpen() {\r\n        this.instance.changeDetector.detectChanges();\r\n    }\r\n\r\n    onLoadSuccess() {\r\n        this.instance.changeDetector.detectChanges();\r\n    }\r\n\r\n    onClear(event: MouseEvent) {\r\n        // const rowData = this.instance.selectionMgr.getBindingData();\r\n        // this.instance['defaultMapping'].lookupFieldMap(null, this.instance.mapFields, rowData);\r\n\r\n        this.instance.changeDetector.detectChanges();\r\n        if (this.options.clear) {\r\n            this.options.clear();\r\n        }\r\n    }\r\n\r\n    onTagRemoved($evnet) {\r\n        if (this.options.tagRemoved) {\r\n            this.options.tagRemoved($evnet);\r\n        }\r\n    }\r\n\r\n    extInfoFormatter = (e) => {\r\n        if (this.options.extInfoFormatter) {\r\n            return this.options.extInfoFormatter({ bindingData: this.dr.rowData, instance: e.instance });\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:41:00\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-22 14:25:39\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, Injector, ViewChild } from '@angular/core';\r\nimport { NumberSpinnerComponent } from '@farris/ui-number-spinner';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { NumberSpinnerDefaultOptions } from '../editor-default-options';\r\n\r\n@Component({\r\n    selector: 'grid-editor-numberspinner',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <datagrid-tooltip [control]=\"formControl\" [tooltipPosition]=\"'top-left'\" [message]=\"errorMessage\">\r\n            <farris-number-spinner #num [step]=\"options.step\"\r\n                [max]=\"options.max\"\r\n                [min]=\"options.min\"\r\n                [canNull]=\"options.canNull\"\r\n                [precision]=\"options.precision\"\r\n                [editable]=\"options.editable\"\r\n                [bigNumber]=\"options.bigNumber\"\r\n                [showButton]=\"options.showButton\"\r\n                [showZero]=\"options.showZero\"\r\n                [groupSeparator]=\"options.groupSeparator\"\r\n                (valueChange)=\"onValueChange($event)\"\r\n                [textAlign]=\"options.textAlign\"\r\n                [formControlName]=\"column.field\" style=\"width: 100%\"></farris-number-spinner>\r\n        </datagrid-tooltip>\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridNumberSpinnerComponent extends DatagridBaseEditorDirective implements OnInit {\r\n\r\n    @ViewChild('num') instance: NumberSpinnerComponent;\r\n\r\n    constructor(render: Renderer2, el: ElementRef, injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.options = Object.assign( {} , NumberSpinnerDefaultOptions, this.options);\r\n        if (!this.options.textAlign) {\r\n            this.options.textAlign =  this.column.align || 'left';\r\n        }\r\n        this.inputElement = this.instance.input.nativeElement;\r\n        // this.stopPropagation = false;\r\n    }\r\n\r\n    onValueChange($event) {\r\n        if (this.options.valueChange) {\r\n            this.options.valueChange(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    private eventPrams($event) {\r\n        const p = this.eventParams($event);\r\n        p['instance'] = this.instance;\r\n        p['editor'] = this;\r\n        return p;\r\n    }\r\n}\r\n","import { Component, OnInit, Renderer2, ElementRef, NgZone, Injector, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { ComboListComponent } from '@farris/ui-combo-list';\r\nimport { ComboListDefaultOptions } from '../editor-default-options';\r\nimport { of } from 'rxjs';\r\nimport { ValueChangeParams } from '../editors';\r\n\r\n@Component({\r\n    selector: 'grid-editor-combolist',\r\n    template: `\r\n        <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n            <farris-combo-list #cmblist style=\"width: 100%\"\r\n                [formControlName]=\"column.field\"\r\n                [readonly]= \"options.readonly\"\r\n                [editable]= \"options.editable\"\r\n                [(selectedValues)]=\"options.selectedValues\"\r\n                [idField]=\"options.idField\"\r\n                [textField]=\"options.textField\"\r\n                [multiSelect]=\"options.multiSelect\"\r\n                [valueField]=\"options.valueField\"\r\n                [uri]=\"options.uri\"\r\n                [data]=\"options.data\"\r\n                [nosearch]=\"options.nosearch\"\r\n                [maxLength]=\"options?.maxLength\"\r\n                [context]=\"options?.context\"\r\n                [itemTemplate]=\"options?.itemTemplate\"\r\n                [enableClear]=\"options.enableClear\"\r\n                [autoWidth]=\"options.autoWidth\"\r\n                [panelHeight]=\"options.panelHeight\"\r\n                [panelWidth]=\"options.panelWidth\"\r\n                [enableCancelSelected]=\"options.enableCancelSelected\"\r\n                [beforeShow]=\"options?.beforeShow\"\r\n                [beforeHide]=\"options?.beforeHide\"\r\n                (showPanel)=\"onShowPanel($event)\"\r\n                (hidePanel)=\"onHidePanel($event)\"\r\n                (clear)=\"onClear($event)\"\r\n                (valueChange)=\"onValueChange($event)\"\r\n                (selectChange)=\"onSelectChange($event)\"\r\n                [showPanelType]=\"options?.showPanelEvent || 'click'\"\r\n                [mappingField]=\"options?.mappingField\"\r\n                [disabledField]=\"options?.disabledField\"\r\n                [showDisabledItem]=\"options?.showDisabledItem\"\r\n            ></farris-combo-list>\r\n        </div>\r\n    `\r\n})\r\nexport class DatagridComboListComponent extends DatagridBaseEditorDirective implements OnInit, AfterViewInit, OnDestroy {\r\n    stopPropagation = false;\r\n    @ViewChild('cmblist') instance: ComboListComponent;\r\n\r\n    constructor( render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n\r\n        this.options = Object.assign( {} , ComboListDefaultOptions, this.options);\r\n        if (this.options.showClear !== undefined) {\r\n            this.options.enableClear = this.options.showClear;\r\n        }\r\n\r\n        if (this.formControl && this.formControl.value) {\r\n            this.options.selectedValues = this.formControl.value;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.inputElement = this.instance.input.textbox.nativeElement;\r\n        super.ngAfterViewInit();\r\n        // setTimeout(() => {\r\n        //     this.instance.show();\r\n        // });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        super.ngOnDestroy();\r\n        this.inputElement = null;\r\n    }\r\n\r\n    // onBeforeShow = () => {\r\n    //     if (this.options.beforeShow) {\r\n    //         return this.options.beforeShow(this);\r\n    //     }\r\n    //     return of(true);\r\n    // }\r\n\r\n    // onBeforeHide = () => {\r\n    //     if (this.options.beforeHide) {\r\n    //         return this.options.beforeHide(this);\r\n    //     }\r\n    //     return of(true);\r\n    // }\r\n\r\n\r\n    onShowPanel($event) {\r\n        if (this.options.showPanel) {\r\n            this.options.showPanel(this.eventPrams($event));\r\n        } else if (this.options.onShown) {\r\n            this.options.onShown(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onHidePanel($event) {\r\n        if (this.options.hidePanel) {\r\n            this.options.hidePanel(this.eventPrams($event));\r\n        } else if (this.options.onHidden) {\r\n            this.options.onHidden(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onClear($event) {\r\n        if (this.options.clear) {\r\n            this.options.clear(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onValueChange($event) {\r\n        if (this.options.valueChange) {\r\n            this.options.valueChange(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onSelectChange($event) {\r\n        if (this.options.selectChange) {\r\n            this.options.selectChange(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.instance.hide();\r\n    }\r\n\r\n    private eventPrams($event): ValueChangeParams {\r\n        const p = this.eventParams($event);\r\n        p['instance'] = this.instance;\r\n        p['editor'] = this;\r\n        return p;\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:41:00\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-24 15:33:24\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, Injector, ViewChild } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { SwitchComponent } from '@farris/ui-switch';\r\nimport { SwitchDefaultOptions } from '../editor-default-options';\r\nimport { ValueChangeParams } from '../editors';\r\n\r\n@Component({\r\n    selector: 'grid-editor-switch',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\" style=\"line-height:100%\" #ctrlbox hidefocus=\"true\">\r\n        <farris-switch #switch [formControlName]=\"column.field\"\r\n        [square]=\"options.square\"\r\n        [readonly]=\"options.readonly\"\r\n        [disabled]=\"options.disabled\"\r\n        [checkedLabel]=\"options.checkedLabel\"\r\n        [uncheckedLabel]=\"options.uncheckedLabel\"\r\n        [trueValue]=\"options?.trueValue\"\r\n        [falseValue]=\"options?.falseValue\"\r\n        (valueChange)=\"onValueChange($event)\"></farris-switch>\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridSwitchComponent extends DatagridBaseEditorDirective implements OnInit {\r\n    @ViewChild('ctrlbox') ctrlBoxEl: ElementRef;\r\n    @ViewChild('switch') instance: SwitchComponent;\r\n    constructor(render: Renderer2, el: ElementRef, injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n\r\n        this.options = Object.assign({}, SwitchDefaultOptions, this.options);\r\n        if (this.options && !this.options.valueChange) {\r\n            this.options.valueChange = (val: ValueChangeParams) => {};\r\n        }\r\n\r\n        const align = this.column.align || 'left';\r\n        if (align === 'left') {\r\n            this.render.setStyle(this.ctrlBoxEl.nativeElement, 'justify-content', align);\r\n            this.render.setStyle(this.ctrlBoxEl.nativeElement, 'padding-left', '0.75rem');\r\n        }\r\n\r\n        this.inputElement = this.instance.switchElRef.nativeElement;\r\n    }\r\n\r\n    onValueChange($event) {\r\n        const p = this.eventParams($event);\r\n        p['checked'] = this.instance.checked;\r\n        p.value = this.instance['getValue']( this.instance.checked);\r\n        p['instance'] = this.instance;\r\n        p['editor'] = this;\r\n        this.options.valueChange(p);\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 11:41:00\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-24 15:33:24\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Renderer2, ElementRef, Injector, ViewChild } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { TimePickerComponent } from '@farris/ui-time-picker';\r\nimport { TimePickerDefaultOptions } from '../editor-default-options';\r\n\r\n\r\n@Component({\r\n    selector: 'grid-editor-timer',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\" >\r\n        <farris-time-picker #timepicker\r\n            style=\"width: 100%\"\r\n            [formControlName]=\"column.field\"\r\n            [readonly]= \"options.readonly\"\r\n            [editable]= \"options.editable\"\r\n            [hourStep] = \"options.hourStep\"\r\n            [minuteStep] = \"options.minuteStep\"\r\n            [secondStep] = \"options.secondStep\"\r\n            [format]=\"options.format\"\r\n            [placeholder]=\"options.placeholder\"\r\n            [use12Hours]=\"options.use12Hours\"\r\n            (valueChange)=\"onValueChange($event)\"\r\n            [showHeader]=\"options.showHeader\">\r\n        </farris-time-picker>\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridTimerComponent extends DatagridBaseEditorDirective implements OnInit {\r\n\r\n    @ViewChild('timepicker') instance: TimePickerComponent;\r\n    constructor(render: Renderer2, el: ElementRef, injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.inputElement = this.instance.timeInput.nativeElement;\r\n        this.options = Object.assign({}, TimePickerDefaultOptions , this.options);\r\n        if (this.options && !this.options.valueChange) {\r\n            this.options.valueChange = (val) => {};\r\n        }\r\n    }\r\n\r\n    onValueChange($event) {\r\n        const p = this.eventParams($event);\r\n        p.value = this.instance.value;\r\n        p['instance'] = this.instance;\r\n        p['editor'] = this;\r\n        this.options.valueChange(p);\r\n    }\r\n}\r\n","import { Component, OnInit, ViewChild, Renderer2, ElementRef, NgZone, Injector, AfterViewInit } from '@angular/core';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { ComboLookupComponent } from '@farris/ui-combo-lookup';\r\nimport { ComboLookupDefaultOptions } from '../editor-default-options';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'grid-editor-combolookup',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\">\r\n        <datagrid-tooltip [control]=\"formControl\" [tooltipPosition]=\"'top-left'\" [message]=\"errorMessage\">\r\n            <farris-combo-lookup style=\"width: 100%\"\r\n                #cmblookup\r\n                [formControlName]=\"column.field\"\r\n                [idField]=\"options.idField\"\r\n                [textField]=\"options.textField\"\r\n                [displayType]=\"options.displayType\"\r\n                [multiSelect]=\"options.multiSelect\"\r\n                [mapFields]=\"options.mapFields\"\r\n                [uri]=\"options.uri\"\r\n                [nosearch]=\"options.nosearch\"\r\n                [maxLength]=\"options?.maxLength\"\r\n                [readonly]= \"options.readonly\"\r\n                [editable]= \"options.editable\"\r\n                [autoWidth]=\"options.autoWidth\"\r\n                [panelWidth]=\"options.panelWidth\"\r\n                [panelHeight]=\"options.panelHeight\"\r\n                [enableCancelSelected]=\"options.enableCancelSelected\"\r\n                [beforeShow]=\"options?.beforeShow\"\r\n                [beforeHide]=\"options?.beforeHide\"\r\n                [context]=\"options?.context\"\r\n                [enableClear]=\"options.enableClear\"\r\n                [showHeader]=\"options.showHeader\"\r\n                (showPanel)=\"onShowPanel($event)\"\r\n                (hidePanel)=\"onHidePanel($event)\"\r\n                (clear)=\"onClear($event)\"\r\n                (valueChange)=\"onValueChange($event)\"\r\n                (selectChange)=\"onSelectChange($event)\"\r\n                [data]=\"options?.data\"\r\n                [useTreeView]=\"options?.useTreeView\"\r\n                [columns]=\"options?.columns\"\r\n                [enableFullTree]=\"options?.enableFullTree\"\r\n                [treeToList]=\"options?.treeToList\"\r\n                [navTreeToList]=\"options?.navTreeToList\"\r\n                [separator]=\"options.separator\"\r\n            ></farris-combo-lookup>\r\n        </datagrid-tooltip>\r\n    </div>\r\n    `\r\n})\r\nexport class DatagridCombolookupComponent extends DatagridBaseEditorDirective implements OnInit, AfterViewInit {\r\n    @ViewChild('cmblookup') instance: ComboLookupComponent;\r\n\r\n    constructor( render: Renderer2, el: ElementRef, private ngzone: NgZone, public injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.options = Object.assign( {} , ComboLookupDefaultOptions, this.options);\r\n\r\n        if (this.options.panelWidth === 'auto') {\r\n            this.options.autoWidth = true;\r\n        }\r\n\r\n        if (this.options.multiSelect === undefined) {\r\n            if (this.options.singleSelect !== undefined && this.options.singleSelect !== null) {\r\n                this.options.multiSelect = !this.options.singleSelect;\r\n            }\r\n        }\r\n\r\n        if (this.formControl && this.formControl.value) {\r\n            this.options.selectedValues = this.formControl.value;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.inputElement = this.instance.input.textbox.nativeElement;\r\n        super.ngAfterViewInit();\r\n    }\r\n\r\n    // onBeforeShow = () => {\r\n    //     if (this.options.beforeShow) {\r\n    //         return this.options.beforeShow(this);\r\n    //     }\r\n    //     return of(true);\r\n    // }\r\n\r\n    // onBeforeHide = () => {\r\n    //     if (this.options.beforeHide) {\r\n    //         return this.options.beforeHide(this);\r\n    //     }\r\n    //     return of(true);\r\n    // }\r\n\r\n    onShowPanel($event) {\r\n        if (this.options.showPanel) {\r\n            this.options.showPanel(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onHidePanel($event) {\r\n        if (this.options.hidePanel) {\r\n            this.options.hidePanel(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onClear($event) {\r\n        if (this.options.clear) {\r\n            this.options.clear(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onValueChange($event) {\r\n        if (this.options.valueChange) {\r\n            this.options.valueChange(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    onSelectChange($event) {\r\n        if (this.options.selectChange) {\r\n            this.options.selectChange(this.eventPrams($event));\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.instance.hide();\r\n    }\r\n\r\n    private eventPrams($event) {\r\n        const p = this.eventParams($event);\r\n        p['instance'] = this.instance;\r\n        p['editor'] = this;\r\n        return p;\r\n    }\r\n}\r\n","import { Component, OnInit, Renderer2, ElementRef, Injector, ViewChild } from '@angular/core';\r\nimport { LanguageTextboxComponent } from '@farris/ui-language-textbox';\r\nimport { DatagridBaseEditorDirective } from '../datagrid-base-editor.directive';\r\nimport { LanguageTextboxDefaultOptions } from '../editor-default-options';\r\n\r\n@Component({\r\n    selector: 'grid-editor-language-textbox',\r\n    template: `\r\n    <div [formGroup]=\"group\" class=\"f-datagrid-cell-formgroup farris-group-auto\" style=\"line-height:100%\">\r\n        <language-textbox #ins style=\"width: 100%\"\r\n            [languages]=\"options.languages\" [formControlName]=\"column.field\"\r\n            [enableClear]=\"options.enableClear\"\r\n            [readonly]=\"options.readonly\"\r\n            [currentLanguage]=\"options.currentLanguage\"\r\n            ></language-textbox>\r\n    </div>\r\n    `,\r\n})\r\nexport class DatagridLanguageTextboxComponent extends DatagridBaseEditorDirective implements OnInit {\r\n\r\n    @ViewChild('ins') instance: LanguageTextboxComponent;\r\n    constructor(render: Renderer2, el: ElementRef, injector: Injector) {\r\n        super(render, el, injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.inputElement = this.instance.input.textbox.nativeElement;\r\n        this.options = Object.assign({}, LanguageTextboxDefaultOptions , this.options);\r\n        if (this.options && !this.options.valueChange) {\r\n            this.options.valueChange = (val) => {};\r\n        }\r\n    }\r\n}\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-14 16:22:23\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 11:19:46\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { GRID_EDITORS } from '@farris/ui-datagrid';\r\nimport { DatagridTextareaComponent } from './editors/datagrid-textarea.component';\r\nimport { DatagridTextboxComponent } from './editors/datagrid-textbox.component';\r\nimport { DatagridCheckboxComponent } from './editors/datagrid-checkbox.component';\r\nimport { DatagridDatepickerComponent } from './editors/datagrid-datepicker.component';\r\nimport { DatagridInputGroupComponent } from './editors/datagrid-inputgroup.component';\r\nimport { DatagridSelectComponent } from './editors/datagrid-select.component';\r\nimport { DatagridLookupComponent } from './editors/datagrid-lookup.component';\r\nimport { DatagridNumberSpinnerComponent } from './editors/datagrid-numberspinner.component';\r\nimport { DatagridComboListComponent } from './editors/datagrid-combolist.component';\r\nimport { DatagridSwitchComponent } from './editors/datagrid-switch.component';\r\nimport { DatagridTimerComponent } from './editors/datagrid-timer.component';\r\nimport { DatagridCombolookupComponent } from './editors/datagrid-combolookup.component';\r\nimport { DatagridLanguageTextboxComponent } from './editors/datagrid-languagetextbox.component';\r\nimport { DatagridEnumEditorComponent } from './editors/datagrid-enumeditor.component';\r\nimport { DatagridSortEditorComponent } from './editors/datagrid-sorteditor.component';\r\nimport { DatagridFilterEditorComponent } from './editors/datagrid-filtereditor.component';\r\n\r\nexport const EditorTypes = {\r\n    TEXTAREA: 'textarea',\r\n    TEXTBOX: 'textbox',\r\n    CHECKBOX: 'checkbox',\r\n    DATEPICKER: 'datepicker',\r\n    INPUTGROUP: 'input-group',\r\n    SELECT: 'select',\r\n    LOOKUP: 'lookup',\r\n    NUMBERBOX: 'numberbox',\r\n    COMBOLIST: 'combolist',\r\n    SWITCH: 'switch',\r\n    TIMEPICKER: 'timepicker',\r\n    COMBOLOOKUP: 'combo-lookup',\r\n    LANGUAGETEXTBOX: 'language-textbox',\r\n    ENUMEDITOR: 'enum-editor',\r\n    FILTEREDITOR: 'filter-editor',\r\n    SORTEDITOR: 'sort-editor'\r\n};\r\n\r\n\r\nexport const EditorProviders = [\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.TEXTAREA, value: DatagridTextareaComponent }, multi: true },\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.TEXTBOX, value: DatagridTextboxComponent }, multi: true },\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.CHECKBOX, value: DatagridCheckboxComponent }, multi: true },\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.DATEPICKER, value: DatagridDatepickerComponent }, multi: true },\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.INPUTGROUP, value: DatagridInputGroupComponent }, multi: true },\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.SELECT, value: DatagridSelectComponent }, multi: true },\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.LOOKUP, value: DatagridLookupComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.NUMBERBOX, value: DatagridNumberSpinnerComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.COMBOLIST, value: DatagridComboListComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.SWITCH, value: DatagridSwitchComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.TIMEPICKER, value: DatagridTimerComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.COMBOLOOKUP, value: DatagridCombolookupComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.LANGUAGETEXTBOX, value: DatagridLanguageTextboxComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.ENUMEDITOR, value: DatagridEnumEditorComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.FILTEREDITOR, value: DatagridFilterEditorComponent }, multi: true},\r\n    { provide: GRID_EDITORS, useValue: { name: EditorTypes.SORTEDITOR, value: DatagridSortEditorComponent }, multi: true}\r\n];\r\n\r\n/** å¼åååæ° */\r\nexport interface ValueChangeParams {\r\n    [key: string]: any;\r\n    /** ç¼è¾å¨å®ä¾ */\r\n    editor?: any;\r\n    /** ç¼è¾å¨ç»ä»¶å®ä¾ */\r\n    instance?: any;\r\n    /** å½åè¡æ°æ® */\r\n    rowData?: any;\r\n    /** å½åè¡ID */\r\n    rowId?: any;\r\n    /** å½åç¼è¾å­æ®µå¼ */\r\n    value: any;\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 14:38:04\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-26 16:50:32\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnDestroy, ViewEncapsulation, Input, HostListener, ElementRef } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DomHandler } from '@farris/ui-datagrid';\r\n\r\n@Component({\r\n    selector: 'datagrid-tooltip',\r\n    template: `\r\n    <ng-content></ng-content>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridTooltipComponent implements OnDestroy {\r\n\r\n    @Input() tooltipPosition: 'top' | 'bottom' | 'left' | 'right' | 'top-left' = 'right';\r\n    @Input() control: FormControl;\r\n    @Input() positionStyle: string;\r\n    @Input() tooltipStyleClass: string;\r\n    @Input() message: string;\r\n\r\n    @Input() cls = '';\r\n    @Input() type: 'danger' | 'success' | 'info' | 'warning' = 'danger';\r\n\r\n    // @HostBinding('style.width') cmpWidth = '100%';\r\n\r\n    container: any;\r\n\r\n    @HostListener('mouseenter')\r\n    onMouseEnter() {\r\n        if (this.control.invalid) {\r\n            this.showErrMsg();\r\n        }\r\n    }\r\n\r\n    @HostListener('mouseleave')\r\n    onMouseLeave() {\r\n        this.hide();\r\n    }\r\n\r\n    @HostListener('focusin')\r\n    onFocusIn() {\r\n        if (this.control.invalid) {\r\n            this.showErrMsg();\r\n        }\r\n    }\r\n\r\n    @HostListener('focusout')\r\n    onFocusOut() {\r\n        this.hide();\r\n    }\r\n\r\n    @HostListener('keyup')\r\n    onKeyup() {\r\n        if (this.control.invalid) {\r\n            this.showErrMsg();\r\n        } else {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    showErrMsg(): void {\r\n        // this.errorMessage = this.getErrorMsg();\r\n        if (this.message !== null && this.message !== undefined) {\r\n            this.show();\r\n        }\r\n    }\r\n\r\n    // getErrorMsg(): string {\r\n    //     let errMsg = '';\r\n    //     Object.keys(this.control.errors).map(key => {\r\n    //         errMsg = this.vms.getValidatorErrorMessage(key, this.dg.validators );\r\n    //     });\r\n    //     return errMsg;\r\n    // }\r\n\r\n    hide() {\r\n        this.ngOnDestroy();\r\n    }\r\n\r\n    show() {\r\n        /** å¦æå­å¨åä¸æ°å»ºï¼åªéè¦ä¿®æ¹éé¢çåå®¹ */\r\n        if (!this.container) {\r\n            this.create();\r\n        } else {\r\n            DomHandler.findSingle(this.container, '.f-tooltip-text').innerText = this.message;\r\n        }\r\n\r\n        const boxEl = this.el.nativeElement.parentElement;\r\n\r\n        const offset = DomHandler.getOffset(boxEl);\r\n        const targetTop = offset.top;\r\n        const targetLeft = offset.left;\r\n        let left: number;\r\n        let top: number;\r\n\r\n        this.container.style.display = 'block';\r\n\r\n        switch (this.tooltipPosition) {\r\n            case 'right':\r\n                left = targetLeft + DomHandler.getOuterWidth(boxEl);\r\n                top = targetTop + (DomHandler.getOuterHeight(boxEl) - DomHandler.getOuterHeight(this.container)) / 2;\r\n                break;\r\n\r\n            case 'left':\r\n                left = targetLeft - DomHandler.getOuterWidth(this.container);\r\n                top = targetTop + (DomHandler.getOuterHeight(boxEl) - DomHandler.getOuterHeight(this.container)) / 2;\r\n                break;\r\n\r\n            case 'top':\r\n                left = targetLeft + (DomHandler.getOuterWidth(boxEl) - DomHandler.getOuterWidth(this.container)) / 2;\r\n                top = targetTop - DomHandler.getOuterHeight(this.container);\r\n                break;\r\n\r\n            case 'bottom':\r\n                left = targetLeft + (DomHandler.getOuterWidth(boxEl) - DomHandler.getOuterWidth(this.container)) / 2;\r\n                top = targetTop + DomHandler.getOuterHeight(boxEl);\r\n                break;\r\n\r\n            case 'top-left':\r\n                left = targetLeft;\r\n                top = targetTop - DomHandler.getOuterHeight(this.container);\r\n                break;\r\n        }\r\n\r\n        this.container.style.left = left + 'px';\r\n        this.container.style.top = top + 'px';\r\n\r\n        this.container.style.zIndex = 999999; // different from PrimeNg\r\n\r\n    }\r\n\r\n    create() {\r\n        let styleClass = 'f-tooltip ' + this.getThemeCls() + ' f-tooltip-' + this.tooltipPosition + ' ' + this.cls;\r\n        this.container = document.createElement('div');\r\n        if (this.tooltipStyleClass) {\r\n            styleClass += ' ' + this.tooltipStyleClass;\r\n        }\r\n        this.container.className = styleClass;\r\n\r\n        const tooltipArrow = document.createElement('div');\r\n        tooltipArrow.className = 'f-tooltip-arrow ';\r\n        this.container.appendChild(tooltipArrow);\r\n\r\n        const tooltipText = document.createElement('div');\r\n        tooltipText.className = 'f-tooltip-text ';\r\n        tooltipText.innerHTML = this.message;\r\n\r\n        if (this.positionStyle) {\r\n            this.container.style.position = this.positionStyle;\r\n        }\r\n\r\n        this.container.appendChild(tooltipText);\r\n\r\n        document.body.appendChild(this.container);\r\n\r\n    }\r\n\r\n    private getThemeCls() {\r\n        if (this.type) {\r\n            return 'f-tooltip-' + this.type;\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n\r\n    ngOnDestroy() {\r\n        if (this.container && this.container.parentElement) {\r\n            document.body.removeChild(this.container);\r\n        }\r\n        this.container = null;\r\n    }\r\n}\r\n","\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 10:56:11\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-14 11:27:18\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { LookupModule } from '@farris/ui-lookup';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { TimePickerModule } from '@farris/ui-time-picker';\r\nimport { ComboLookupModule } from '@farris/ui-combo-lookup';\r\nimport { LanguageTextboxModule } from '@farris/ui-language-textbox';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { EnumEditorModule } from '@farris/ui-enum-editor';\r\nimport { SorterModule } from '@farris/ui-sort-editor';\r\nimport { FilterModule } from '@farris/ui-filter-editor';\r\n\r\nimport { DatagridBaseEditorDirective } from './datagrid-base-editor.directive';\r\nimport { DatagridTextareaComponent } from './editors/datagrid-textarea.component';\r\nimport { DatagridCheckboxComponent } from './editors/datagrid-checkbox.component';\r\nimport { DatagridDatepickerComponent } from './editors/datagrid-datepicker.component';\r\nimport { DatagridInputGroupComponent } from './editors/datagrid-inputgroup.component';\r\nimport { DatagridSelectComponent } from './editors/datagrid-select.component';\r\nimport { DatagridLookupComponent } from './editors/datagrid-lookup.component';\r\nimport { DatagridTooltipComponent } from './tooltip/tooltip.component';\r\nimport { DatagridNumberSpinnerComponent } from './editors/datagrid-numberspinner.component';\r\nimport { DatagridTextboxComponent } from './editors/datagrid-textbox.component';\r\nimport { DatagridComboListComponent } from './editors/datagrid-combolist.component';\r\nimport { DatagridSwitchComponent } from './editors/datagrid-switch.component';\r\nimport { DatagridTimerComponent } from './editors/datagrid-timer.component';\r\nimport { DatagridCombolookupComponent } from './editors/datagrid-combolookup.component';\r\nimport { DatagridLanguageTextboxComponent } from './editors/datagrid-languagetextbox.component';\r\nimport { DatagridEnumEditorComponent } from './editors/datagrid-enumeditor.component';\r\nimport { DatagridSortEditorComponent } from './editors/datagrid-sorteditor.component';\r\nimport { DatagridFilterEditorComponent } from './editors/datagrid-filtereditor.component';\r\n\r\nconst editorComponents = [\r\n    DatagridTooltipComponent,\r\n    DatagridTextboxComponent,\r\n    DatagridTextareaComponent,\r\n    DatagridCheckboxComponent,\r\n    DatagridDatepickerComponent,\r\n    DatagridInputGroupComponent,\r\n    DatagridSelectComponent,\r\n    DatagridLookupComponent,\r\n    DatagridNumberSpinnerComponent,\r\n    DatagridComboListComponent,\r\n    DatagridSwitchComponent,\r\n    DatagridTimerComponent,\r\n    DatagridCombolookupComponent,\r\n    DatagridLanguageTextboxComponent,\r\n    DatagridEnumEditorComponent,\r\n    DatagridSortEditorComponent,\r\n    DatagridFilterEditorComponent\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatagridBaseEditorDirective,\r\n        ...editorComponents,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        FarrisDatePickerModule,\r\n        InputGroupModule,\r\n        LookupModule,\r\n        ComboListModule,\r\n        ComboLookupModule,\r\n        NumberSpinnerModule,\r\n        SwitchModule,\r\n        TimePickerModule,\r\n        LanguageTextboxModule,\r\n        ReactiveFormsModule,\r\n        EnumEditorModule,\r\n        FarrisFormsModule,\r\n        FilterModule,\r\n        SorterModule\r\n    ],\r\n    exports: [\r\n        DatagridBaseEditorDirective,\r\n        ...editorComponents\r\n    ],\r\n    entryComponents: [\r\n        ...editorComponents\r\n    ],\r\n    providers: [\r\n\r\n    ]\r\n})\r\nexport class DatagridEditorsModule {\r\n\r\n}\r\n"],"names":[],"mappings":"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"}