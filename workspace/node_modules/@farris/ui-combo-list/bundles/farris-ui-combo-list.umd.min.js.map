{"version":3,"sources":["ng://@farris/ui-combo-list/lib/http/ComboHttpService.ts","ng://@farris/ui-combo-list/lib/combo.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-combo-list/lib/services/combo.locale.service.ts","ng://@farris/ui-combo-list/lib/base-combo.component.ts","ng://@farris/ui-combo-list/lib/combo-list.component.ts","ng://@farris/ui-combo-list/lib/combo-list.module.ts"],"names":["ComboServerSideToken","InjectionToken","ComboService","Object","defineProperty","prototype","this","_uri","val","data$","next","_data","value","Array","isArray","injectService","injector","comboHttp","lookupUtils","get","LookupUtils","displayType","indexOf","ServerSideToken","toBoolean","selectItem","data","index","emitEvent","_this","multiSelect","selections","forEach","n","findIndex","s","idField","push","selections$","action","unSelectItem","filter","item","JSON","stringify","selectAll","datas","find","i","unSelectAll","isSelect","id","length","undefined","loadData","selectValues","callback","vals","split","separator","selectedItems","map","el","filterDataOnServer","params","getData","subscribe","r","closeLoading","loadingService","clearAll","items","loadLookUpDataTable","loadLookUpDataTree","filterData","field","itemval","getValueByObj","String","toLowerCase","getSelections","clearSelections","getValue","prop","tmp","join","hasOwnProperty","reduce","obj","key","initData","method","selectedIds","d","__data","uri","loadDataTree","loadDataTable","loadSuccess$","selectedValues","loadLookupData","treeNodesToFlatData","treeNodes","arr","children","isTree","enableFullTree","loadTreeDataType","searchValue","customData","category","treeloadconfig","isNaN","Number","expandLevel","pipe","switchMap","getSelectedItems","treeNodeToFlatData","textField","catchError","of","selIds","searchParam","favoriteIds","p","loadChild","showLoading","context","tap","http","request","delay","returnValue","dataArr","eachData","paramData","paramVal","rtnData","resData","sortable","columns","pageInfo","total","ids","isMaped","checkNodeCanBeSelect","nodes","allData","node","selectable","leaf","treeInfo","treeInfo$","layerType","makeTree","makeTreeWithParentID","dataField","parentField","loadDataType","loading","show","container","panelElement","close","Injectable","HttpClient","LoadingService","Injector","Subject","isOpen$","BehaviorSubject","serachValue$","remoteSearch","treeSearchHandler","debounceTime","extendStatics","b","setPrototypeOf","__proto__","__assign","assign","t","arguments","call","apply","ComboLocaleService","getLocaleConfig","locale","localeService","localeId","localeConfig","getResources","LocaleService","ZH_CN","placeholder","EN_US","nextUniqueId","BaseComboComponent","comboService","mapFields","v","valueField","cmp","_cmbPanel","ro","observe","nativeElement","_comboPanelCreated$","disconnect","ngOnInit","localConfig","emptyMsg","treeToList","navTreeToList","ngAfterViewInit","that","ngControl","NgControl","fromEvent","window","takeUntil","destroy$","throttle","ev","interval","updatePanelWidth","isOpen","willHide$","ngZone","runOutsideAngular","setTimeout","reszieTimer_1","ResizeObserver","e","clearTimeout","reqAnimFrame","updatePosition","className","render","addClass","ngOnDestroy","complete","unsubscribe","mouseWheelEvent","width","getInputSizeInfo","panelWidth","autoWidth","onClick","$event","stopPropagation","originalEvent","input","textbox","focus","onBlur","event","onTouched","onFocus","onInputclick","onEnter","blur","onClear","onValueChange","text","clear","emit","hidePanelOnClear","viewType","inputGroup","input2","getBoundingClientRect","emitTextChange","textChangeSubject","displayText","nosearch","valArr","appendVal","treeClientSearch","__createPanel","_p","_m","showDialog","initCreatPanelAction","updateSelectedValues","isLookup","disabled","focusInput","_expLevel","initdataSubscription","throwIfEmpty","cdr","detectChanges","registerDocumentEvent","onBeforeShow","beforeShow","take","onBeforeHide","beforeHide","hide","message","notifySer","warning","initToggleAction","skip","readonly","open","search","style","display","appendChild","transitionFlag","addEventListener","target","currentTarget","showPanel","height","panelHeight","panelListener","removePanelElement","iframeEventHandle","iframes","from","document","querySelectorAll","iframes_1","__values","o","m","Symbol","iterator","done","tslib_1.__values","iframes_1_1","iframeDoc","contentDocument","_documentClickEvent","removeDocumentListener","removeEventListener","top","body","type","contains","createPanel","listen","removeChild","initSelectionsChangeAction","onSelectionsChange","onSelectionsChangeDefault","initDatasChangeAction","_displayText","_selectedValues","originalText","updateMappingFieldValue","clearMapFields","mappingField","formDirective","form","bindingData","setValue","bindingPath","pathArr","concat","commonUtils","onTextChange","isTextChange","onChange","changes","useValue","valueChange","onSelect","onUnSelected","host","createElement","classList","add","_a","getPanelSize","top_1","left","overflow","setStyle","zindex","getFloatingLayerIndex","zIndex","innerPanelHeight","tagName","targetHeight","scrollHeight","querySelector","includes","right","bottom","innerHeight","maxHeight","h","below","fx","parseInt","innerWidth","offsetWidth","compatibleScrollTop","scrollingElement","scrollTop","Math","max","pageYOffset","documentElement","compatibleScrollLeft","scrollLeft","pageXOffset","comPosition","_top","_height","max-height","keys","transformOrigin","filterSelections","selectedItem","updateSelections","getDisplayText","writeValue","txtArr","c","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","searchField","ElementRef","ChangeDetectorRef","Inject","args","DOCUMENT","Renderer2","Input","Output","ViewChild","editable","enableClear","forcePlaceholder","enableTitle","enableCancelSelected","EventEmitter","hidePanel","selectChange","groupIcon","CommonUtils","NgZone","eventMgr","EventManager","NotifyService","_super","INPUT_COMBO_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ComboListComponent","multi","__extends","__","constructor","create","tslib_1.__extends","ngOnChanges","firstChange","currentValue","textArr","registerKeyboardEvent","code","preventDefault","scrollToCurrentItem","updateSelectValues","disabledField","getrealIndex","idx","nextIdx","isNext","_idx","newIdex_1","prevIdx","escHandlerEvent","dataListRef","instance","ulEl","scrollIntoView","block","onKeyup","onKeydown","showPanelType","removeSelectItem","idx_1","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","providers","HostBinding","HostListener","showDisabledItem","cls","ComboListModule","NgModule","declarations","imports","CommonModule","FormsModule","HttpClientModule","InputGroupModule","LoadingModule","forRoot","DatalistModule","NotifyModule","exports"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface ComboHttpService {\r\n    /**\r\n     * æ ¹æ®åæ°æ®IDåç¸å³åæ°è·åæ°æ®\r\n     * @param uri æ°æ®ID or Rest API\r\n     * @param data æå¡å¨ç«¯æ¥æ¶åæ° key/value\r\n     */\r\n    context?: any;\r\n    getData(uri: string, params?: any, method?: string): Observable<any>;\r\n}\r\nexport const ComboServerSideToken = new InjectionToken<ComboHttpService>('Combo Grid HTTP service');\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BehaviorSubject, Subject, Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { debounceTime, map, switchMap, catchError, tap, delay } from 'rxjs/operators';\r\nimport { LoadingService, LoadingComponent } from '@farris/ui-loading';\r\nimport { LookupUtils, ServerSideToken } from '@farris/ui-lookup';\r\nimport { ComboServerSideToken, ComboHttpService } from './http/ComboHttpService';\r\nimport { NormalObject } from './combo.interface';\r\n\r\n@Injectable()\r\nexport class ComboService {\r\n\r\n    selections$ = new Subject<any>();\r\n    isOpen$ = new BehaviorSubject<boolean|any>(false);\r\n\r\n    data$ = new BehaviorSubject<any>('');\r\n    serachValue$ = new Subject<any>();\r\n    loadSuccess$ = new Subject();\r\n    treeInfo$ = new BehaviorSubject<any>(null);\r\n\r\n    selections: NormalObject[];\r\n    idField: string;\r\n    valueField: string;\r\n    textField: string;\r\n    multiSelect: boolean;\r\n    displayType = 'LIST';\r\n    separator = ',';\r\n\r\n\r\n    _uri: string;\r\n    get uri() {\r\n        return this._uri;\r\n    }\r\n    set uri(val: string) {\r\n        this._uri = val;\r\n        this.data$.next([]);\r\n    }\r\n\r\n    selectedValues;\r\n    pageInfo: any;\r\n    treeInfo: any;\r\n    columns: NormalObject[] = [];\r\n    context: any;\r\n    remoteSearch = true;\r\n\r\n    panelElement: any = null;\r\n\r\n    treeSearchHandler: any = null;\r\n\r\n    // æ å¸®å©å è½½è®¾ç½®\r\n    private treeloadconfig = null;\r\n    private _data: NormalObject[] = [];\r\n    private loading: LoadingComponent;\r\n    private lookupUtils: LookupUtils;\r\n    private comboHttp: ComboHttpService;\r\n    get data(): NormalObject[] {\r\n        return this._data;\r\n    }\r\n    set data(value: NormalObject[]) {\r\n        this._data = value || [];\r\n        if (Array.isArray(value)) {\r\n            this.data$.next(value);\r\n        }\r\n    }\r\n\r\n\r\n    constructor(public http: HttpClient, public loadingService: LoadingService, private injector: Injector) {\r\n        this.serachValue$.pipe(debounceTime(300)).subscribe(value => {\r\n            if (!this.remoteSearch) {\r\n                this.filterData(value, this.textField);\r\n            } else {\r\n                this.filterDataOnServer(value);\r\n            }\r\n        });\r\n    }\r\n\r\n    injectService() {\r\n        if (this.injector && !this.comboHttp) {\r\n            this.lookupUtils = this.injector.get(LookupUtils, null);\r\n            if (this.displayType.indexOf('LOOKUP') > -1) {\r\n                this.comboHttp = this.injector.get(ServerSideToken, null);\r\n            } else {\r\n                this.comboHttp = this.injector.get(ComboServerSideToken, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    toBoolean(value: any): boolean {\r\n        return value != null && `${value}` !== 'false';\r\n    }\r\n\r\n    selectItem(data: any, index?: number, emitEvent = true) {\r\n        if (!this.multiSelect) {\r\n            this.selections = [];\r\n        }\r\n        if (Array.isArray(data)) {\r\n            data.forEach(n => {\r\n                if (this.selections.findIndex(s => s[this.idField] === n[this.idField]) === -1) {\r\n                    this.selections.push(n);\r\n                }\r\n            });\r\n        } else {\r\n            if (this.selections.findIndex(s => s[this.idField] === data[this.idField]) === -1) {\r\n                this.selections.push(data);\r\n            }\r\n        }\r\n        if (emitEvent) {\r\n            this.selections$.next({action: 'clicked'});\r\n        }\r\n    }\r\n\r\n    unSelectItem(data: any) {\r\n        this.selections = this.selections.filter(item => {\r\n            // return item[this.idField] !== data[this.idField];\r\n            return JSON.stringify(item) !== JSON.stringify(data);\r\n        });\r\n        this.selections$.next({action: 'clicked'});\r\n    }\r\n\r\n\r\n    selectAll(datas) {\r\n        (datas || []).forEach(n => {\r\n            if (!this.selections.find(i => i[this.idField] === n[this.idField])) {\r\n                this.selections.push(n);\r\n            }\r\n        });\r\n        // this.selections = datas;\r\n        this.selections$.next({action: 'clicked'});\r\n    }\r\n\r\n    unSelectAll(datas) {\r\n        // this.selections = [];\r\n        datas = datas || [];\r\n        this.selections = (this.selections || []).filter(n => datas.findIndex(i => i[this.idField] === n[this.idField]) === -1 );\r\n        this.selections$.next({action: 'clicked'});\r\n    }\r\n\r\n    isSelect(id: any) {\r\n        if (this.selections && this.selections.length) {\r\n            return this.selections.find(item => item[this.idField] === id) !== undefined;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadData(data: any, selectValues = '', callback) {\r\n        if (data) {\r\n\r\n            if (selectValues === null || selectValues === undefined) {\r\n                selectValues = '';\r\n            }\r\n\r\n            if (typeof selectValues === 'boolean') {\r\n                selectValues = '' + selectValues;\r\n            }\r\n\r\n            // this.data$.next(data);\r\n            if (selectValues) {\r\n                let vals = [(selectValues + '')];\r\n                if (this.multiSelect) {\r\n                    vals = (selectValues + '').split(this.separator);\r\n                }\r\n\r\n                let selectedItems = vals.map(val => {\r\n                    return callback(data, val);\r\n                });\r\n                selectedItems = selectedItems.filter(el => el);\r\n                if ((!this.selections || !this.selections.length) && selectedItems.length) {\r\n                    this.selections = selectedItems;\r\n                }\r\n            } else {\r\n                this.selections = [];\r\n            }\r\n            this.selections$.next({action: 'initData'});\r\n        }\r\n    }\r\n\r\n    filterDataOnServer(params) {\r\n        this.getData(params).subscribe(r => {\r\n            this.closeLoading();\r\n            this.loadingService.clearAll();\r\n            if (r && r.items) {\r\n                switch (this.displayType) {\r\n                    case 'LOOKUPLIST': {\r\n                        this.loadLookUpDataTable(r, true);\r\n                        break;\r\n                    }\r\n                    case 'LOOKUPTREELIST': {\r\n                        this.loadLookUpDataTree(r);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                this.data$.next([]);\r\n            }\r\n        });\r\n    }\r\n\r\n    // å®¢æ·ç«¯è¿æ»¤\r\n    filterData(val: string, field: any = 'text') {\r\n        if (val) {\r\n            let data = [];\r\n\r\n            if (this.displayType === 'LOOKUPLIST' || this.displayType === 'LIST') {\r\n                data = this.data.filter(item => {\r\n                    let itemval = this.getValueByObj(field, item);\r\n                    if (itemval != '' && itemval !== null && itemval !== undefined) {\r\n                        itemval = String(itemval).toLowerCase();\r\n                    }\r\n                    return itemval.indexOf(val.toLowerCase()) > -1;\r\n                });\r\n            }\r\n\r\n            // const data = this.data\r\n            //     ? this.data.filter(item => {\r\n            //         if (this.getValueByObj(filed, item)) {\r\n            //             return String(this.getValueByObj(filed, item)).indexOf(val) > -1;\r\n            //         } else if (item.data && this.getValueByObj(filed, item.data)) {\r\n            //             return String(this.getValueByObj(filed, item.data)).indexOf(val) > -1;\r\n            //         }\r\n            //     })\r\n            //     : [];\r\n            this.data$.next(data);\r\n        } else {\r\n            this.data$.next(this.data);\r\n        }\r\n    }\r\n\r\n\r\n    getSelections() {\r\n        return this.selections;\r\n    }\r\n\r\n    clearSelections() {\r\n        this.selections = [];\r\n    }\r\n\r\n    getValue(prop: string, selections?: any): string {\r\n        selections = selections ? selections : this.selections;\r\n        if (selections && selections.length) {\r\n            const tmp = selections.map(item => {\r\n                return this.getValueByObj(prop, item);\r\n            });\r\n            if (tmp && (tmp.length > 1 || tmp.length === 0)) {\r\n                return tmp.join(this.separator);\r\n            } else {\r\n                return tmp[0];\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    getValueByObj(field: string, data: any) {\r\n        if (!data) {\r\n            return '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1) {\r\n            if (data.hasOwnProperty(field)) {\r\n                resultVal = data[field];\r\n            } else {\r\n                // console.log(`%cError: The %c\"${field}\"%c is not in `,\r\n                //         'color: #bb0000;font-weight: bold;', 'color: red;font-style: italic', 'color: #bb0000;font-weight: bold;', data);\r\n                resultVal = null;\r\n            }\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    // console.log(`%cError: The %c\"${key}\"%c is not in  `,\r\n                    // 'color: #bb0000;font-weight: bold', 'color: red;font-style: italic', 'color: #bb0000;font-weight: bold;', obj);\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    initData(params: any = {}, method = 'get', selectedIds = '') {\r\n        switch (this.displayType) {\r\n            case 'TreeList':\r\n            case 'LIST': {\r\n                if (params.data) {\r\n                    params = params.data;\r\n                }\r\n                this.getData(params, method).subscribe(d => {\r\n                    let __data = d;\r\n                    if (!this.uri) {\r\n                        __data = this.data;\r\n                    }\r\n                    if (this.displayType === 'TreeList') {\r\n                        this.loadDataTree(__data);\r\n                    } else {\r\n                        this.loadDataTable(__data);\r\n                    }\r\n                    this.loadSuccess$.next(true);\r\n                });\r\n                break;\r\n            }\r\n            case 'LOOKUPLIST':\r\n            case 'LOOKUPTREELIST': {\r\n                // TFS 466104\r\n                if (!selectedIds) {\r\n                    this.selections = [];\r\n                    this.selectedValues = '';\r\n                }\r\n\r\n                \r\n                this.loadLookupData(params, selectedIds, 'get', this.displayType === 'LOOKUPTREELIST');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this.loadSuccess$;\r\n    }\r\n\r\n    // æ­¤æ¹æ³ç¨äºç­ééä¸­çæ°æ®\r\n    // è¿ä¸æ­¥ä¼åï¼éè¦æå¡å¨ç«¯æä¾ä¸ä¸ªä¸æé æ ç»æãæ ¹æ®IDè¿åç®åçåè¡¨å³å¯\r\n    private treeNodesToFlatData(treeNodes: [], arr = []) {\r\n        treeNodes.forEach((n: any) => {\r\n            if (!n['addtional']) {\r\n                arr.push(n.data);\r\n            }\r\n            if (n.children && n.children.length) {\r\n                this.treeNodesToFlatData(n.children, arr);\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadLookupData(params: any, selectedIds, method = 'get', isTree = false) {\r\n        const { data, enableFullTree, loadTreeDataType, searchValue } = params;\r\n        if (data) {\r\n            params = { customData: data };\r\n        }\r\n        if (this.displayType === 'LOOKUPTREELIST' && !this['treeToList']) {\r\n            params.enableFullTree = enableFullTree;\r\n            // params.loadTreeDataType = 'loadall'; \r\n            params.searchValue = {\"category\":\"all\"};\r\n            this.treeloadconfig = { enableFullTree, loadTreeDataType };\r\n\r\n            if (!isNaN(Number(params.expandLevel))) {\r\n                // åç«¯ -1 ä¸å±å¼   0 å¨å±å¼\r\n                // åç«¯  0 ä¸å±å¼  -1 å¨å±å¼\r\n                if (params.expandLevel) {\r\n                    if (params.expandLevel === -1) {\r\n                        params.expandLevel = 0;\r\n                    }\r\n                } else {\r\n                    params.expandLevel = -1;\r\n                }\r\n                params.searchValue['layerNum'] = params.expandLevel;\r\n            }\r\n\r\n            params.searchValue = JSON.stringify(params.searchValue);\r\n        }\r\n\r\n        if (searchValue) {\r\n            params.searchValue = searchValue;\r\n        }\r\n\r\n        if (this['treeToList']) {\r\n            isTree = false;\r\n            this.displayType = 'LOOKUPLIST';\r\n        }\r\n\r\n        this.getData(params, method).pipe(\r\n            switchMap((data) => {\r\n                if (selectedIds) {\r\n                    return this.getSelectedItems(selectedIds).pipe(\r\n                        map(d => {\r\n                            if (d && d.items) {\r\n                                // data.selectedItems = isTree ?  d.items.map(n => n.data) : d.items;\r\n                                if (isTree) {\r\n                                    const arr = [];\r\n                                    this.treeNodesToFlatData(d.items, arr);\r\n                                    data.selectedItems = arr;\r\n                                } else {\r\n                                    data.selectedItems =  d.items;\r\n                                }\r\n                            } else {\r\n                                if (Array.isArray(d)) {\r\n                                    data.selectedItems = (selectedIds + '').split(this.separator).map(val => {\r\n                                        if (isTree) {\r\n                                            return this.treeNodeToFlatData(d, val, this.idField);\r\n                                        } else {\r\n                                            return d.find(n => n[this.idField] + '' == val || n[this.textField] == val);\r\n                                        }\r\n                                    }).filter(n => n !=undefined && n != null);\r\n                                }\r\n                            }\r\n                            return data;\r\n                        }),\r\n                        catchError(() => {\r\n                            return of(data);\r\n                        })\r\n                    );\r\n                } else {\r\n                    data.selectedItems = [];\r\n                }\r\n                return of(data);\r\n            })\r\n        ).subscribe(data => {\r\n            this.loadingService.clearAll();\r\n\r\n            if (data) {\r\n                if (isTree) {\r\n                    this.loadLookUpDataTree(data);\r\n                } else {\r\n                    this.loadLookUpDataTable(data);\r\n                }\r\n            }\r\n\r\n            this.loadSuccess$.next(true);\r\n        });\r\n\r\n    }\r\n\r\n    getSelectedItems(selIds) {\r\n        const searchParam = {\r\n            category: 'fav', favoriteIds: ('' + selIds).split(this.separator)\r\n        };\r\n        const p = {searchValue: JSON.stringify(searchParam),  enableFullTree: false, loadTreeDataType: 'default'};\r\n        return this.getData(p);\r\n    }\r\n\r\n    getData(params = {}, method = 'get', loadChild = false): Observable<any> {\r\n        if (this.uri) {\r\n            // this.data = []\r\n            // tfs 470519\r\n            if (this.data && this.data.length && !loadChild) {\r\n                this.data = [];\r\n            }\r\n\r\n            params['treeToList'] = this['treeToList'];\r\n            params['navTreeToList'] = this['navTreeToList'];\r\n\r\n            if (this['treeToList']) {\r\n                this.displayType = 'LOOKUPLIST';\r\n            }\r\n\r\n            this.showLoading();\r\n            if (this.comboHttp) {\r\n                if (this.context) {\r\n                    this.comboHttp.context = this.context;\r\n                }\r\n                return this.comboHttp.getData(this.uri, params, method).pipe(\r\n                    tap(() => {\r\n                        this.closeLoading();\r\n                    }),\r\n                );\r\n            } else {\r\n                return this.http.request(method, this.uri, params).pipe(\r\n                    tap(() => {\r\n                        this.closeLoading();\r\n                    }),\r\n                );\r\n            }\r\n        } else {\r\n            if (this.data) {\r\n                return of(this.data).pipe(delay(10));\r\n            } else {\r\n                return of([]).pipe(delay(10));\r\n            }\r\n        }\r\n    }\r\n\r\n    loadDataTable(data: any) {\r\n        if (data instanceof Array) {\r\n            this.data = data;\r\n        } else {\r\n            this.data = data ? data.returnValue : [];\r\n        }\r\n        this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n            return dataArr.find(d => d[this.idField] + '' == val || d[this.textField] == val);\r\n        });\r\n        this.closeLoading();\r\n    }\r\n\r\n    loadDataTree(data: any) {\r\n        if (data instanceof Array) {\r\n            this.data = data;\r\n        } else {\r\n            this.data = data ? data.returnValue : [];\r\n        }\r\n        this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n            return eachData(dataArr, val, this.idField);\r\n            function eachData(paramData, paramVal, idField) {\r\n                let rtnData: any = '';\r\n                paramData.find(d => {\r\n                    if (d.data[idField] == paramVal) {\r\n                        rtnData = d.data;\r\n                        return true;\r\n                    } else if (d.children && d.children.length) {\r\n                        rtnData = eachData(d.children, paramVal, idField);\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n                return rtnData;\r\n            }\r\n        });\r\n        this.closeLoading();\r\n    }\r\n\r\n    loadLookUpDataTable(resData: any, sortable = false) {\r\n        this.closeLoading();\r\n\r\n        if (typeof resData === 'object') {\r\n\r\n            if (resData.returnValue) {\r\n                resData = resData.returnValue;\r\n            }\r\n\r\n            if (!sortable &&  resData.columns) {\r\n                this.columns = resData.columns;\r\n            }\r\n            if (resData.pageInfo) {\r\n                this.pageInfo = resData.pageInfo;\r\n                this.pageInfo.total = resData.total ? resData.total : 0;\r\n            }\r\n\r\n            if ( resData.items) {\r\n                this.data = resData.items;\r\n            }\r\n\r\n        }\r\n        if (resData && resData.selectedItems) {\r\n            this.selections = resData.selectedItems || [];\r\n        }\r\n        \r\n        if (this.selections) {\r\n            const ids = this.selections.map(n => n[this.idField]).join(this.separator);\r\n            if (ids !== this['__SELECTEDIDS__']) {\r\n                // this.selectedValues = ids;\r\n                this['__SELECTEDIDS__'] = ids;\r\n            }\r\n        }\r\n\r\n        this.loadData(this.data, this['__SELECTEDIDS__'], (dataArr, val) => {\r\n            let isMaped = dataArr.find(d => d[this.idField] + '' == val);\r\n            if (this.selections) {\r\n                isMaped = !isMaped ? this.selections.find(d => d[this.idField] + '' == val) : isMaped;\r\n            }\r\n            return isMaped;\r\n        });\r\n    }\r\n\r\n    checkNodeCanBeSelect(nodes, allData = true) {\r\n        if (nodes && nodes.length) {\r\n            return nodes.map((node: any) => {\r\n                if (node.hasOwnProperty('addtional')) {\r\n                    node.selectable = !node['addtional'];\r\n                }\r\n\r\n                if (node.children && node.children.length) {\r\n                    this.checkNodeCanBeSelect(node.children, allData);\r\n                } else {\r\n                    if (allData) {\r\n                        node.leaf = true;\r\n                    }\r\n                }\r\n\r\n                return node;\r\n            });\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    loadLookUpDataTree(resData: any) {\r\n        this.closeLoading();\r\n\r\n        if (!resData) {\r\n            return;\r\n        }\r\n\r\n        if (resData instanceof Array) {\r\n            this.data = resData;\r\n            if (resData['selectedItems']) {\r\n                this.selections = resData['selectedItems'] || [];\r\n            }\r\n        } else {\r\n            if (resData.returnValue) {\r\n                resData = resData.returnValue;\r\n            }\r\n            this.columns = resData.columns;\r\n            this.treeInfo = resData.treeInfo;\r\n\r\n            this.treeInfo$.next(this.treeInfo);\r\n            if (resData.selectedItems) {\r\n                this.selections = resData.selectedItems || [];\r\n            }\r\n           \r\n            if (this.treeInfo && !this.treeInfo['treeDataIsInit']) {\r\n                if (this.treeInfo.layerType.toLowerCase() === 'pathcode') {\r\n                    this.data = this.lookupUtils.makeTree(resData.items, this.treeInfo);\r\n                } else {\r\n                    this.data = this.lookupUtils.makeTreeWithParentID(\r\n                        resData.items,\r\n                        '',\r\n                        `${this.treeInfo.dataField}.${this.treeInfo.parentField}`,\r\n                        this.idField\r\n                    );\r\n                }\r\n            } else if (resData.items) {\r\n                // this.data = resData.items;\r\n\r\n                const isLoadAllTreeData = () => {\r\n                    if (this.treeloadconfig.loadTreeDataType === 'default') {\r\n                        return this.treeInfo.loadDataType === 'all';\r\n                    } else {\r\n                        return this.treeloadconfig.loadTreeDataType === 'loadall';\r\n                    }\r\n                };\r\n\r\n                this.data = this.checkNodeCanBeSelect(resData.items, isLoadAllTreeData());\r\n            }\r\n        }\r\n\r\n        if (this.selections) {\r\n            const ids = this.selections.map(n => n[this.idField]).join(this.separator);\r\n            if (ids !== this['__SELECTEDIDS__']) {\r\n                this['__SELECTEDIDS__'] = ids;\r\n            }\r\n        }\r\n\r\n        this.loadData(this.data, this['__SELECTEDIDS__'], (dataArr, val) => {\r\n            return this.treeNodeToFlatData(dataArr, val, this.idField);\r\n        });\r\n    }\r\n\r\n    treeNodeToFlatData(paramData, paramVal, idField) {\r\n        let rtnData: any = '';\r\n        paramData.find(d => {\r\n            if ((d.data && d.data[idField] == paramVal) || d[idField] == paramVal) {\r\n                rtnData = d.data;\r\n                return true;\r\n            } else if (d.children && d.children.length) {\r\n                rtnData = this.treeNodeToFlatData(d.children, paramVal, idField);\r\n                return rtnData ? true : false;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        return rtnData;\r\n    }\r\n\r\n    private showLoading() {\r\n        this.loading = this.loadingService.show({ container: this.panelElement, delay: 100 });\r\n    }\r\n\r\n    closeLoading() {\r\n        if (this.loading) {\r\n            this.loading.close();\r\n            this.loading = null;\r\n        }\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n@Injectable()\r\nexport class ComboLocaleService {\r\n    private localeConfig: any = {\r\n        'ZH_CN' : {\r\n            placeholder: 'è¯·éæ©'\r\n        },\r\n        'EN_US' : {\r\n            placeholder: 'Please Select'\r\n        }\r\n    };\r\n    constructor(private localeService: LocaleService) {}\r\n    public getLocaleConfig() {\r\n        const locale = this.localeService.localeId;\r\n\r\n        this.localeConfig = this.localeService.getResources(`${locale}.combo`);\r\n\r\n        return this.localeConfig;\r\n\r\n        // if (locale && this.localeConfig[locale]) {\r\n        //     return this.localeConfig[locale];\r\n        // } else {\r\n        //     return this.localeConfig.ZH_CN;\r\n        // }\r\n    }\r\n}\r\n","import { NotifyService } from '@farris/ui-notify';\r\nimport {\r\n    OnInit, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef,\r\n    Renderer2, ViewChild, AfterViewInit, OnDestroy, Inject, Injector, NgZone\r\n} from '@angular/core';\r\nimport { Subject, interval, of, Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { takeUntil, filter, skip, debounceTime, throttle, take, delayWhen, throwIfEmpty } from 'rxjs/operators';\r\nimport { ComboService } from './combo.service';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { SelectItem, NormalObject, ComboChanges } from './combo.interface';\r\nimport { ComboLocaleService } from './services/combo.locale.service';\r\nimport { CommonUtils, reqAnimFrame } from '@farris/ui-common';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nlet nextUniqueId = 0;\r\nexport class BaseComboComponent implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() editable = true;\r\n    @Input() placeholder = '';\r\n    @Input() panelWidth = 300;\r\n    @Input() panelHeight: number | string = 'auto';\r\n    /** ä¸æé¢æ¿å®½åº¦ä¸è¾å¥æ¡å®½åº¦ä¿æä¸è³ï¼ é»è®¤ä¸º true */\r\n    @Input() autoWidth = true;\r\n    @Input() enableClear = true;\r\n    @Input() mapFields: any;\r\n    /** ç¦ç¨åªè¯»æ¶æ¾ç¤º placeholder */\r\n    @Input() forcePlaceholder = false;\r\n\r\n    /** ä»»æè¾å¥ 20210202 */\r\n    @Input() nosearch = false;\r\n    /** åè®¸æå¤§è¾å¥é¿åº¦ */\r\n    @Input() maxLength;\r\n\r\n    // é¼ æ æ»è¿æ¾ç¤ºææ¬åå®¹\r\n    @Input() enableTitle = true;\r\n    /** å±ç¤ºç±»åï¼ textææ¬ï¼tagæ ç­¾ã é»è®¤ text */\r\n    @Input() viewType: 'text' | 'tag' = 'text';\r\n    @Input()\r\n    set context(value) {\r\n        this.comboService.context = value;\r\n    }\r\n    @Input()\r\n    set mappingField(v: any) {\r\n        this.mapFields = v;\r\n    }\r\n    get mappingField(): any {\r\n        return this.mapFields;\r\n    }\r\n    @Input()\r\n    set data(val: NormalObject[]) {\r\n        this.comboService.data = val;\r\n    }\r\n    get data(): NormalObject[] {\r\n        return this.comboService.data;\r\n    }\r\n    \r\n    @Input()\r\n    set idField(val: string) {\r\n        this.comboService.idField = val;\r\n    }\r\n    get idField(): string {\r\n        return this.comboService.idField;\r\n    }\r\n    @Input()\r\n    set valueField(val: string) {\r\n        this.comboService.valueField = val;\r\n    }\r\n    get valueField(): string {\r\n        return this.comboService.valueField ? this.comboService.valueField : this.idField;\r\n    }\r\n    @Input()\r\n    set textField(val: string) {\r\n        this.comboService.textField = val;\r\n    }\r\n    get textField(): string {\r\n        return this.comboService.textField;\r\n    }\r\n    @Input()\r\n    set multiSelect(val: boolean) {\r\n        this.comboService.multiSelect = val;\r\n    }\r\n    get multiSelect(): boolean {\r\n        return this.comboService.multiSelect;\r\n    }\r\n    @Input()\r\n    set uri(val: string) {\r\n        this.comboService.uri = val;\r\n    }\r\n    get uri(): string {\r\n        return this.comboService.uri;\r\n    }\r\n    @Input()\r\n    set selectedValues(val: string) {\r\n        this.comboService.selectedValues = val;\r\n    }\r\n    get selectedValues(): string {\r\n        return this.comboService.selectedValues;\r\n    }\r\n\r\n    get selectedValuesStr() {\r\n        if (this.selectedValues === null || this.selectedValues === undefined) {\r\n            this.selectedValues = '';\r\n        }\r\n        return (this.selectedValues) + '';\r\n    }\r\n    @Input() displayText = '';\r\n    @Input() maxHeight = 200;\r\n    @Input() enableCancelSelected = false;\r\n\r\n    /** è¿ç«¯è¿æ»¤ */\r\n    @Input() get remoteSearch(): boolean {\r\n        return this.comboService.remoteSearch;\r\n    }\r\n    set remoteSearch(val: boolean) {\r\n        this.comboService.remoteSearch = val;\r\n    }\r\n    @Input() beforeShow: (instance?: this) => Observable<any>;\r\n    @Input() beforeHide: (instance?: this) => Observable<any>;\r\n\r\n    // å¦æé¢æ¿å·²æå¼ï¼ ç¹å»æ¸ç©ºæé®æ¶æ¯å¦å³é­é¢æ¿ãtrue: å³é­ï¼ false: ä¸å³é­ï¼\r\n    @Input() hidePanelOnClear = false;\r\n    /** å¼å¯åï¼ngModel çå¼ä¸º valueField or  idField; å¦åä¸ºtextFieldçå¼ */\r\n    @Input() useValue = false;\r\n    /** åéç¬¦ */\r\n    @Input() separator = ',';\r\n\r\n    @Input() treeToList = false;\r\n    @Input() navTreeToList = false;\r\n\r\n    @Input() emptyMsg = 'ææ æ°æ®';\r\n\r\n    @Output() showPanel = new EventEmitter();\r\n    @Output() hidePanel = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n    @Output() valueChange = new EventEmitter<ComboChanges>();\r\n    @Output() selectChange = new EventEmitter<SelectItem>();\r\n\r\n    @ViewChild('comboPanel') set cmbPanel(cmp: ElementRef) {\r\n        if (cmp) {\r\n            this._cmbPanel = cmp;\r\n            this.ro.observe(cmp.nativeElement);\r\n            this._comboPanelCreated$.next(cmp);\r\n        } else {\r\n            this._cmbPanel = null;\r\n            // this.ro.unobserve(this.el.nativeElement);\r\n            if (this.ro) {\r\n                this.ro.disconnect();\r\n            }\r\n            this._comboPanelCreated$.next(null);\r\n        }\r\n\r\n    }\r\n    @ViewChild('input') input: InputGroupComponent;\r\n    @ViewChild('input2') input2: ElementRef;\r\n    public isOpen = false;\r\n    public comPosition = {};\r\n    public destroy$ = new Subject();\r\n    public ngControl: NgControl | any = null;\r\n    public groupIcon = '<span class=\"f-icon f-icon-arrow-60-down\"></span>';\r\n    public localeService: ComboLocaleService;\r\n    public innerPanelHeight: any;\r\n    public commonUtils: CommonUtils;\r\n    private _cmbPanel: ElementRef = null;\r\n    private _comboPanelCreated$ = new Subject();\r\n    // private _hasPosited = false;\r\n    // private _container: Element;\r\n    private willHide$: Subject<void> = new Subject();\r\n    private containerElement: any;\r\n    /** overlay */\r\n    private panelElement: any;\r\n    private _documentClickEvent: any;\r\n    set selections(value: NormalObject[]) {\r\n        this.comboService.selections = value;\r\n    }\r\n    get selections(): NormalObject[] {\r\n        if (this.comboService.selections) {\r\n            return this.comboService.selections.filter(n => n !== null && n !== undefined);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private panelListener = null;\r\n\r\n    private ngZone: NgZone = null;\r\n    private mouseWheelEvent = null;\r\n    textChangeSubject = new Subject();\r\n    private initdataSubscription: Subscription = null;\r\n\r\n    customData = null;\r\n\r\n    private originalText = '';\r\n    private isTextChange = false;\r\n\r\n    treeClientSearch = new Subject();\r\n\r\n    eventMgr: EventManager;\r\n    private notifySer: NotifyService;\r\n    private ro: ResizeObserver | null = null;\r\n    onChange: (value: string | string[]) => void = () => null;\r\n    onTouched: () => void = () => null;\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        public cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) public document: any,\r\n        public render: Renderer2,\r\n        public comboService: ComboService,\r\n        public injector: Injector\r\n    ) {\r\n        this.initToggleAction();\r\n        this.initSelectionsChangeAction();\r\n        this.initDatasChangeAction();\r\n\r\n        this.commonUtils = this.injector.get(CommonUtils, null);\r\n        this.willHide$.pipe(\r\n            takeUntil(this.destroy$),\r\n            debounceTime(110)\r\n        ).subscribe(e => {\r\n            if (!this.nosearch && this.displayText !== this.originalText) {\r\n                this.displayText = this.originalText;\r\n\r\n                if (this.isLookup()) {\r\n                    this.onChange(this.displayText);\r\n                } else {\r\n                    const _displayText = this.comboService.getValue(this.textField);\r\n                    this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n                }\r\n\r\n            }\r\n            this['_searchKeyWords'] = '';\r\n            this.onTouched();\r\n            this.hidePanel.emit(this);\r\n        });\r\n\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.eventMgr = this.injector.get(EventManager);\r\n        this.emitTextChange();\r\n\r\n        this.notifySer = this.injector.get(NotifyService, null);\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localeService = this.injector.get(ComboLocaleService, '');\r\n        if (this.localeService) {\r\n            const localConfig = this.localeService.getLocaleConfig();\r\n            if (localConfig) {\r\n                if (!this.placeholder) {\r\n                    this.placeholder = localConfig['placeholder'] || 'è¯·éæ©';\r\n                }\r\n\r\n                this.emptyMsg =  localConfig['emptyMsg'] || 'ææ æ°æ®';\r\n            }\r\n        }\r\n\r\n        this.comboService.separator = this.separator;\r\n        this.comboService['treeToList'] = this.treeToList;\r\n        this.comboService['navTreeToList'] = this.navTreeToList;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const that = this;\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n        fromEvent(window, 'resize').pipe(\r\n            takeUntil(this.destroy$)\r\n        ).pipe(\r\n            debounceTime(100),\r\n            throttle(ev => interval(100)),\r\n        ).subscribe(() => {\r\n            this.updatePanelWidth();\r\n            if (this.isOpen) {\r\n                this.comboService.isOpen$.next(false);\r\n                this.willHide$.next();\r\n            }\r\n        });\r\n\r\n        if (this.ngZone) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    that.updatePanelWidth();\r\n                });\r\n            });\r\n\r\n            let reszieTimer = null;\r\n            this.ro = new ResizeObserver((e) => {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    if (reszieTimer) {\r\n                        clearTimeout(reszieTimer);\r\n                    }\r\n                    reszieTimer = setTimeout(() => {\r\n                        if (that._cmbPanel && that.panelElement) {\r\n                            reqAnimFrame(() => {\r\n                                that.updatePosition(that._cmbPanel.nativeElement);\r\n                                if (that._cmbPanel.nativeElement.className.indexOf('f-area-show') === -1) {\r\n                                    that.render.addClass(that._cmbPanel.nativeElement, 'f-area-show');\r\n                                }\r\n                            });\r\n                        }\r\n                    }, 10);\r\n                });\r\n            });\r\n        }\r\n\r\n        this.comboService.injectService();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.comboService.serachValue$.unsubscribe();\r\n\r\n        if (this.mouseWheelEvent) {\r\n            this.mouseWheelEvent();\r\n        }\r\n    }\r\n\r\n    private updatePanelWidth() {\r\n        const { width } = this.getInputSizeInfo();\r\n        this.panelWidth = this.autoWidth ? width : this.panelWidth;\r\n    }\r\n\r\n    onClick($event: any = null) {\r\n        if ($event) {\r\n            if ($event.stopPropagation) {\r\n                $event.stopPropagation();\r\n            } else {\r\n                if ($event.originalEvent) {\r\n                    $event.originalEvent.stopPropagation();\r\n                }\r\n            }\r\n        }\r\n\r\n        // éå¤æ§è¡é¢æ¿å³é­äºä»¶ ææ³¨éæ 20220917\r\n        // if (this.isOpen) {\r\n        //     this.willHide$.next();\r\n        // } else {\r\n        //     this.comboService.isOpen$.next(!this.isOpen);\r\n        // }\r\n\r\n        this.comboService.isOpen$.next(!this.isOpen);\r\n\r\n        if (this.input && this.input.textbox) {\r\n            this.input.textbox.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    onBlur(event: Event) {\r\n        this.onTouched();\r\n    }\r\n\r\n    onFocus(event: Event) {\r\n        // // å¯ç¨ä»»æè¾å¥åï¼ææ¬æ¡å¾å°ç¦ç¹åä¸å¼¹åºä¸æé¢æ¿ã2021/02/19\r\n        // if (this.nosearch) {\r\n        //     return ;\r\n        // }\r\n\r\n        // if (!this.isOpen) {\r\n        //     this.comboService.isOpen$.next(true);\r\n        //     // å»¶è¿æ§è¡åæ´æ£æµ æ´æ°å¼¹åºæ¡ä½ç½®\r\n        // of('').pipe(debounceTime(0)).subscribe(() => {\r\n        //     this.cdr.detectChanges();\r\n        // });\r\n        // } else {\r\n        //     this.hide();\r\n        // }\r\n    }\r\n\r\n    onInputclick($event?: any) {\r\n        if ($event && $event.stopPropagation) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.comboService.isOpen$.next(!this.isOpen);\r\n    }\r\n\r\n    onEnter(event: Event) { }\r\n\r\n    blur() {\r\n        this.input.textbox.nativeElement.blur();\r\n    }\r\n\r\n    focus() {\r\n        this.input.textbox.nativeElement.focus();\r\n    }\r\n\r\n    onClear() {\r\n        this.selectedValues = '';\r\n        this.selections = [];\r\n        this.comboService.selections = [];\r\n        this.onValueChange({ text: '', value: '', selections: [] });\r\n        this.clear.emit();\r\n        if (this.isOpen && this.hidePanelOnClear) {\r\n            // this.comboService.isOpen$.next(false);\r\n            this.willHide$.next();\r\n        } else {\r\n            if (this.isOpen && this.comboService.displayType === 'LIST') {\r\n                this.comboService.serachValue$.next('');\r\n            }\r\n        }\r\n    }\r\n\r\n    private getInputSizeInfo() {\r\n        const el: any = this.viewType === 'text' ? this.input.inputGroup : this.input2;\r\n        return el.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n\r\n    private emitTextChange() {\r\n        return this.textChangeSubject.pipe(\r\n            debounceTime(200)\r\n        ).subscribe((r: any) => {\r\n            const _selectedValues = this.selectedValues;\r\n            const val = r ? r : this.displayText;\r\n\r\n            if (r === '') {\r\n                this.onClear();\r\n            } else if (this.nosearch) {\r\n                this.onValueChange({ text: r, value: '', selections: this.selections, nosearch: true });\r\n            }\r\n\r\n            if (!this.remoteSearch) {\r\n                if (!this.multiSelect) {\r\n                    if (this.comboService.displayType === 'LOOKUPTREELIST') {\r\n                        this.treeClientSearch.next(val);\r\n                    } else {\r\n                        this.comboService.serachValue$.next(val);\r\n                    }\r\n                } else {\r\n                    const valArr = (val + '').split(this.separator);\r\n                    const appendVal = valArr[valArr.length - 1] ? valArr[valArr.length - 1] : '';\r\n                    this.comboService.serachValue$.next(appendVal);\r\n                }\r\n                // if (_selectedValues !== this.selectedValues) {\r\n                //     this.onValueChange({ text: this.displayText, value: this.selectedValues, selections: this.selections });\r\n                // }\r\n\r\n            } else {\r\n                this.filterDataOnServer(val, '*');\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private __createPanel(value: any, searchParam = null) {\r\n        let params: any = {\r\n        };\r\n        let method = 'get';\r\n        if (value instanceof Object) {\r\n            const { params: _p, data, method: _m, showDialog } = value;\r\n            if (showDialog === false) {\r\n                return;\r\n            }\r\n\r\n            if (data) {\r\n                params = {data};\r\n                this.customData = data;\r\n            } else {\r\n                if (_p) {\r\n                    params = {data: _p};\r\n                    this.customData = _p;\r\n                } else {\r\n                    this.customData = null;\r\n                }\r\n            }\r\n\r\n            if (_m) {\r\n                method = _m;\r\n            }\r\n        } else if (typeof value === 'boolean') {\r\n            if (value === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        this.initCreatPanelAction();\r\n\r\n        if (this.uri) {\r\n            this.updateSelectedValues();\r\n\r\n            if (this.isLookup()) {\r\n                this.isOpen = true;\r\n            }\r\n        } else {\r\n            this.isOpen = true;\r\n        }\r\n\r\n\r\n        if (this.comboService.displayType === 'LOOKUPTREELIST') {\r\n            params.enableFullTree = this['enableFullTree'];\r\n            params.loadTreeDataType = this['loadTreeDataType'];\r\n        }\r\n\r\n        if (this.isLookup() && this.input && this.nosearch) {\r\n            this.input.textbox.nativeElement.disabled = true;\r\n        }\r\n\r\n        const focusInput = () => {\r\n            if (this.isLookup() && this.input  && this.nosearch) {\r\n                this.input.textbox.nativeElement.disabled = false;\r\n                this.input.focus();\r\n            }\r\n        };\r\n\r\n        if (searchParam) {\r\n            params.searchValue = searchParam.searchValue;\r\n        }\r\n\r\n        let selectedIds = this.selectedValues;\r\n\r\n        if (this.isLookup() ) {\r\n            if (this.el.nativeElement['__zone_symbol__UIStateBindingChangefalse'] || \r\n                (this.mapFields && !this.mapFields[this.idField])) {\r\n                selectedIds = this.comboService['__SELECTEDIDS__'];\r\n            }\r\n            const _expLevel = this['expandLevel'];\r\n            params['expandLevel'] = _expLevel;\r\n        }\r\n\r\n        this.initdataSubscription = this.comboService.initData(params, method, selectedIds).pipe(\r\n            throwIfEmpty(focusInput)\r\n        ).subscribe(n => {\r\n            if (!this.isOpen) {\r\n                this.isOpen = true;\r\n            }\r\n            focusInput();\r\n            this.cdr.detectChanges();\r\n        });\r\n\r\n        // ç¦æ­¢æ»å¨\r\n        // this.render.setStyle(this.containerElement, 'pointer-events', 'auto');\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.registerDocumentEvent();\r\n        });\r\n    }\r\n\r\n    // æ¾ç¤ºåäºä»¶\r\n    private onBeforeShow() {\r\n        if (!this.beforeShow) {\r\n            this.beforeShow = () => of('');\r\n        }\r\n        return this.beforeShow(this).pipe(take(1));\r\n    }\r\n    private isLookup() {\r\n        return this.comboService.displayType.indexOf('LOOKUP') > -1;\r\n    }\r\n\r\n    // éèåäºä»¶\r\n    private onBeforeHide() {\r\n        if (!this.beforeHide) {\r\n            this.beforeHide = () => of('');\r\n        }\r\n        this.beforeHide(this).pipe(\r\n            take(1)\r\n        ).subscribe(value => {\r\n            if (typeof value === 'boolean') {\r\n                if (value) {\r\n                    this.hide(true);\r\n                }\r\n            } else if (typeof value === 'object') {\r\n                if (value.hide) {\r\n                    this.hide(true);\r\n                } else {\r\n                    if (value.message) {\r\n                        if (this.notifySer) {\r\n                            this.notifySer.warning(value.message);\r\n                        } else {\r\n                            // console.info(value.message);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.hide(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    // æ¾ç¤ºæéèä¸ææ¡\r\n    private initToggleAction() {\r\n        this.comboService.isOpen$.pipe(\r\n            debounceTime(20),\r\n            takeUntil(this.destroy$),\r\n            skip(1)\r\n        ).subscribe(value => {\r\n            if (this.readonly || this.disabled) {\r\n                return;\r\n            }\r\n\r\n            let open = value;\r\n            let searchParam = null;\r\n            if (typeof value === 'object') {\r\n                open = value.isOpen;\r\n                searchParam = value.search;\r\n            }\r\n\r\n            if (open) {\r\n                this.onBeforeShow().subscribe((v) => {\r\n                    this.__createPanel(v, searchParam);\r\n                });\r\n                return;\r\n            } else {\r\n                this.onBeforeHide();\r\n            }\r\n\r\n            this.cdr.detectChanges();\r\n        });\r\n\r\n        this._comboPanelCreated$.pipe(\r\n            takeUntil(this.destroy$),\r\n            filter(value => !!value)\r\n        ).subscribe((cmp: ElementRef) => {\r\n            cmp.nativeElement.style.display = '';\r\n\r\n            this.initCreatPanelAction();\r\n\r\n\r\n            this.panelElement.appendChild(cmp.nativeElement);\r\n            let transitionFlag = true;\r\n            cmp.nativeElement.addEventListener('transitionend', (e: any) => {\r\n                if (e.target === e.currentTarget && transitionFlag) {\r\n                    transitionFlag = false;\r\n                    this.showPanel.emit(this);\r\n                }\r\n            });\r\n\r\n            if (this.isLookup()) {\r\n                cmp.nativeElement.style.width = `${this.panelWidth}px`;\r\n                cmp.nativeElement.style.height = `${this.panelHeight}px`;\r\n                setTimeout(() => {\r\n                    this.render.addClass(cmp.nativeElement, 'f-area-show');\r\n                }, 0);\r\n            }\r\n         \r\n            // this.updatePosition(cmp.nativeElement);\r\n            // this.cdr.detectChanges();\r\n        });\r\n\r\n        this.destroy$.pipe(take(1)).subscribe(() => {\r\n            this.comboService.closeLoading();\r\n            nextUniqueId = 0;\r\n            if (this.panelListener) {\r\n                this.panelListener();\r\n            }\r\n            if (this.initdataSubscription) {\r\n                this.initdataSubscription.unsubscribe();\r\n                this.initdataSubscription = null;\r\n            }\r\n            this.removePanelElement();\r\n        });\r\n    }\r\n\r\n    private iframeEventHandle(action: 'addEventListener' | 'removeEventListener') {\r\n        const iframes = Array.from(document.querySelectorAll('iframe'));\r\n        if (iframes && iframes.length) {\r\n            for (const iframe of iframes) {\r\n                const iframeDoc = iframe.contentDocument;\r\n                if (iframeDoc) {\r\n                    iframeDoc[action]('mousedown', this._documentClickEvent);\r\n                    iframeDoc[action]('mousewheel', this._documentClickEvent);\r\n                    iframeDoc[action]('DOMMouseScroll', this._documentClickEvent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeDocumentListener() {\r\n        if (this._documentClickEvent) {\r\n            document.removeEventListener('mousedown', this._documentClickEvent, true);\r\n            document.removeEventListener('mousewheel', this._documentClickEvent, true);\r\n            document.removeEventListener('DOMMouseScroll', this._documentClickEvent, true);\r\n\r\n            if (top !== window) {\r\n                top.document.body.removeEventListener('mousedown', this._documentClickEvent, true);\r\n            }\r\n\r\n            this.iframeEventHandle('removeEventListener');\r\n            this._documentClickEvent = null;\r\n        }\r\n    }\r\n\r\n    private registerDocumentEvent() {\r\n        // æ³¨å mousedown äºä»¶ éèpanel\r\n        document.addEventListener('mousedown', (this._documentClickEvent = event => {\r\n\r\n            if (event.type === 'mousewheel' && this.el.nativeElement.contains(event.target)) {\r\n                this.comboService.isOpen$.next(false);\r\n                return;\r\n            }\r\n\r\n            if (\r\n                !this.el.nativeElement.contains(event.target) && this._cmbPanel && !this.contains(this._cmbPanel, event)\r\n            ) {\r\n                this.comboService.isOpen$.next(false);\r\n                // this.willHide$.next();\r\n            }\r\n        }), true);\r\n\r\n        document.addEventListener('mousewheel', this._documentClickEvent, true);\r\n        document.addEventListener('DOMMouseScroll', this._documentClickEvent, true);\r\n\r\n        if (top !== window) {\r\n            top.document.body.addEventListener('mousedown', this._documentClickEvent, true);\r\n        }\r\n\r\n        this.iframeEventHandle('addEventListener');\r\n    }\r\n\r\n\r\n    // åå»ºä¸æé¢æ¿æ¶äºä»¶\r\n    private initCreatPanelAction() {\r\n        if (this.panelElement) {\r\n            return;\r\n        }\r\n        this.createPanel(document.body);\r\n        this.panelListener = this.render.listen(this.panelElement, 'click', (e: Event) => {\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    private removePanelElement() {\r\n        reqAnimFrame(() => {\r\n            if (this.panelElement) {\r\n                document.body.removeChild(this.panelElement);\r\n                this.panelElement = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    private initSelectionsChangeAction() {\r\n        this.comboService.selections$.pipe(\r\n            takeUntil(this.destroy$),\r\n            debounceTime(100)\r\n        ).subscribe(value => {\r\n            if (value.action === 'initData') {\r\n                this.onSelectionsChange(this.selections);\r\n            } else {\r\n                this.onSelectionsChangeDefault();\r\n                if(this.isLookup()) {\r\n                    this.updateSelectedValues();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    protected initDatasChangeAction() { }\r\n\r\n    // canNull è§£å³åæ¶éä¸­æ¶ä¾ç¶æ¾ç¤º\r\n    private onSelectionsChangeDefault() {\r\n\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        const _selectedValues = this.comboService.getValue(this.idField);\r\n\r\n        if (this.displayText !== _displayText && !this.nosearch) {\r\n            this.displayText = _displayText || this.displayText;\r\n            this.displayText = this.displayText || '';\r\n            this.originalText = _selectedValues ? _displayText : this.displayText;\r\n        }\r\n\r\n        if (this.input) {\r\n            this.input.textbox.nativeElement.value = this.displayText;\r\n        }\r\n\r\n        this.selectedValues =\r\n            (_selectedValues !== '' && _selectedValues !== undefined && _selectedValues !== null) ? _selectedValues : this.selectedValues;\r\n\r\n\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    protected onSelectionsChange(v: any[]) { }\r\n\r\n    updateMappingFieldValue(clearMapFields = false) {\r\n        if (\r\n            this.mappingField &&\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n\r\n            if (clearMapFields) {\r\n                this.selectedValues = '';\r\n            }\r\n\r\n            if (bindingData.setValue) {\r\n                const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n                let pathArr: string[] = [];\r\n                if (bindingPath) {\r\n                    pathArr = bindingPath.split('/').filter(n => n !== '');\r\n                }\r\n                const mappingField = this.mappingField ? this.mappingField : '';\r\n                bindingData.setValue(pathArr.concat(mappingField.split('.')), this.selectedValues, true, true);\r\n            } else if (this.commonUtils) {\r\n                this.commonUtils.setValue(bindingData, this.mappingField, this.selectedValues);\r\n            }\r\n            // if (!bindingData.setValue && this.commonUtils) {\r\n            //     this.commonUtils.setValue(bindingData, this.mappingField, this.selectedValues);\r\n            // }\r\n        }\r\n    }\r\n\r\n    updateSelectedValues() {\r\n        if (\r\n            this.mappingField &&\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            if (bindingData.getValue) {\r\n                const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n                let pathArr: string[] = [];\r\n                if (bindingPath) {\r\n                    pathArr = bindingPath.split('/').filter(value => value !== '');\r\n                }\r\n                const mappingField = this.mappingField ? this.mappingField : '';\r\n                this.selectedValues = bindingData.getValue(pathArr.concat(mappingField.split('.')));\r\n            } else if (this.commonUtils) {\r\n                this.selectedValues = this.commonUtils.getValue(this.mappingField, bindingData);\r\n            }\r\n        } else if (!this.mappingField) {\r\n            // this.selectedValues = this.displayText\r\n        }\r\n    }\r\n    onTextChange(val?: string) {\r\n        this.isTextChange = true;\r\n        if (this.nosearch) {\r\n            this.selectedValues = val;\r\n            this.updateMappingFieldValue(this.isLookup());\r\n            this.onChange(val);\r\n        }\r\n\r\n        if (!this.isOpen && this.comboService.displayType === 'LIST') {\r\n            this.isOpen = true;\r\n        }\r\n\r\n        this.textChangeSubject.next(val);\r\n    }\r\n\r\n    onValueChange(changes: ComboChanges) {\r\n        this.displayText = changes.text;\r\n        this.originalText = this.displayText;\r\n        if (!this.uri && this.data && this.data.length > 0 && (!this['displayType'] || this.useValue) ) {\r\n            this.onChange(this.selectedValues);\r\n        } else {\r\n            this.onChange(this.displayText);\r\n        }\r\n        // if (!changes.nosearch) {\r\n        // }\r\n        this.valueChange.emit(changes);\r\n        this.updateMappingFieldValue();\r\n        this.onTouched();\r\n        // if (this.isOpen && changes.emitHidePanel) { this.willHide$.next(); }\r\n    }\r\n\r\n    onSelect(item: any) { }\r\n    onUnSelected(item: any) { }\r\n\r\n    /**\r\n     * emit: é»è®¤ä¸º true;\r\n     */\r\n    hide(emit = true) {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        this.removeDocumentListener();\r\n        this.isOpen = false;\r\n        if (emit) {\r\n            this.willHide$.next();\r\n        }\r\n\r\n        if (this.initdataSubscription) {\r\n            this.initdataSubscription.unsubscribe();\r\n            this.initdataSubscription = null;\r\n        }\r\n        this.removePanelElement();\r\n    }\r\n\r\n    show() {\r\n        if (this.isOpen) {\r\n            return;\r\n        }\r\n        this.onBeforeShow().subscribe((value: any) => {\r\n            this.__createPanel(value);\r\n        });\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    private createPanel(host: HTMLElement) {\r\n        this.panelElement = this.document.createElement('div');\r\n\r\n        this.panelElement.id = `overlay-${nextUniqueId++}`;\r\n        this.panelElement.classList.add('overlay-pane');\r\n\r\n        this.panelElement.style.display = 'none';\r\n\r\n        host.appendChild(this.panelElement);\r\n\r\n        this.comboService.panelElement = this.panelElement;\r\n\r\n        if (this.isLookup()) {\r\n            const { panelWidth, top, left } = this.getPanelSize();\r\n            this.panelElement.style.width = `${panelWidth}px`;\r\n            this.panelElement.style.height = `${this.panelHeight}px`;\r\n            this.panelElement.style.top = `${top}px`;\r\n            this.panelElement.style.left = `${left}px`;\r\n        } else {\r\n            this.panelElement.style.overflow = 'hidden';\r\n            this.render.setStyle(this.panelElement, 'top', '0');\r\n            this.render.setStyle(this.panelElement, 'left', '0');\r\n        }\r\n\r\n        const zindex = this.commonUtils.getFloatingLayerIndex();\r\n        this.panelElement.style.zIndex = zindex;\r\n        this.panelElement.classList.add('f-combo-lookup');\r\n        this.panelElement.style.display = '';\r\n    }\r\n\r\n    private getPanelSize(target?: Element) {\r\n        let panelHeight = this.panelHeight;\r\n        this.innerPanelHeight = 202;\r\n\r\n        if (this.autoWidth) {\r\n            const { width } = this.getInputSizeInfo();\r\n            this.panelWidth = width ? width : this.panelWidth;\r\n        }\r\n        // å¦ætageté«åº¦å­å¨ ä¿®æ¹pnaelHeight ç¨äºéå®ä½å¼¹åºæ¡ä½ç½®\r\n        if (target && target.tagName && panelHeight === 'auto') {\r\n            const targetHeight = target.scrollHeight;\r\n            const isNoRecord = !!target.querySelector('.f-table-norecords-content');\r\n            // if (this.uri) {\r\n            //     if (this.data && this.data.length) {\r\n            //         if (this.comboService.displayType === 'LIST' && target.querySelector('.list-group')) {\r\n            //             this.innerPanelHeight = target.querySelector('.list-group')['offsetHeight'] + 2;\r\n            //         } else {\r\n            //             this.innerPanelHeight = targetHeight;\r\n            //         }\r\n            //     }\r\n            // } else {\r\n            //     this.innerPanelHeight = targetHeight && targetHeight > 10 && !isNoRecord ? Math.floor(targetHeight) : this.panelHeight;\r\n            // }\r\n\r\n            if (this.data && this.data.length) {\r\n                if (this.comboService.displayType === 'LIST' && target.querySelector('.list-group')) {\r\n                    this.innerPanelHeight = target.querySelector('.list-group')['offsetHeight'] + 2;\r\n                } else {\r\n                    this.innerPanelHeight = targetHeight;\r\n                }\r\n            }\r\n\r\n        } else if (target && target.tagName && panelHeight && !String(panelHeight).includes('px')) {\r\n            panelHeight = panelHeight;\r\n        }\r\n        let { top, height, left, right } = this.el.nativeElement.getBoundingClientRect();\r\n        height = height + 1;\r\n        const bottom = window.innerHeight - height - top;\r\n        if (panelHeight === 'auto') {\r\n            if (this.maxHeight && this.maxHeight > this.innerPanelHeight) {\r\n                panelHeight = this.innerPanelHeight;\r\n            } else {\r\n                panelHeight = this.maxHeight;\r\n            }\r\n        }\r\n\r\n        const h = top > bottom ? top : bottom;\r\n        const below = h === bottom;\r\n\r\n        let fx = 'top';\r\n        if (bottom > panelHeight) {\r\n            top = top + height;\r\n        } else {\r\n            if (top > bottom) {\r\n                if (h < panelHeight) {\r\n                    panelHeight = h - 10;\r\n                    top = 10;\r\n                } else {\r\n                    top = top - parseInt('' + panelHeight, 10) - 5;\r\n                }\r\n                fx = 'bottom'\r\n            } else {\r\n                if (h < panelHeight) {\r\n                    panelHeight = h - 10;\r\n                }\r\n                top = top + height;\r\n            }\r\n        }\r\n        let panelWidth = this.panelWidth;\r\n        if (window.innerWidth - left < this.panelWidth) {\r\n            // left = right - 400;\r\n            if (left + this.el.nativeElement.offsetWidth > this.panelWidth) {\r\n                left = left + this.el.nativeElement.offsetWidth - this.panelWidth;\r\n            } else {\r\n                left = 0;\r\n                panelWidth = window.innerWidth> this.panelWidth ? this.panelWidth : window.innerWidth - 10;\r\n            }\r\n        }\r\n\r\n        return { panelWidth, panelHeight, top, left, below, fx };\r\n    }\r\n    private compatibleScrollTop() {\r\n        if (document.scrollingElement) {\r\n            return document.scrollingElement.scrollTop;\r\n        }\r\n\r\n        return Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop);\r\n    }\r\n    private compatibleScrollLeft() {\r\n        if (document.scrollingElement) {\r\n            return document.scrollingElement.scrollLeft;\r\n        }\r\n\r\n        return Math.max(window.pageXOffset, document.documentElement.scrollLeft, document.body.scrollLeft);\r\n    }\r\n    // è®¾ç½®å¼¹åºæ¡ä½ç½®\r\n    updatePosition(target: any) {\r\n        const { panelHeight, left, top, below, fx } = this.getPanelSize(target);\r\n\r\n        if (!this.isLookup()) {\r\n            let _top = top;\r\n            let _height = panelHeight;\r\n            if (top < 0) {\r\n                _height = this.innerPanelHeight + top - 10;\r\n                _top = 10;\r\n            }\r\n            _top += this.compatibleScrollTop();\r\n\r\n            if (this.panelHeight !== 'auto') {\r\n                if (this.maxHeight < _height) {\r\n                    this.maxHeight = _height as number;\r\n                }\r\n            }\r\n\r\n            this.comPosition = {\r\n                'left': left + this.compatibleScrollLeft(),\r\n                'top': _top,\r\n                'width': this.panelWidth,\r\n                height: _height === 'auto' ? 'auto' : _height,\r\n                'max-height': this.maxHeight\r\n            };\r\n        } else {\r\n            this.comPosition = {\r\n                'width': this.panelWidth,\r\n                'height': panelHeight\r\n            };\r\n        }\r\n        this.panelElement.style.overflow = '';\r\n        target['style'].display = '';\r\n\r\n        Object.keys(this.comPosition).forEach(n => {\r\n            let val = this.comPosition[n];\r\n            if (val !== 'auto') {\r\n                val += 'px';\r\n            }\r\n            this.render.setStyle(target, n, val);\r\n        });\r\n        target.style.transformOrigin = '100% ' + fx;\r\n        // target['style'].visibility = 'visible';\r\n        return this.comPosition;\r\n    }\r\n\r\n    contains(el: ElementRef, event: any) {\r\n        return el.nativeElement.contains(event.target);\r\n    }\r\n\r\n    protected filterSelections(value: string, data: any[]) {\r\n        const selectedItems = String(value)\r\n            .split(this.separator)\r\n            .map(selectedItem => {\r\n                const item = data.find(val => selectedItem == this.commonUtils.getValue(this.idField, val) + '');\r\n                return item ? this.commonUtils.getValue(this.textField, item) : '';\r\n            });\r\n        return selectedItems.filter(el => el);\r\n    }\r\n\r\n    protected updateSelections(selectedValues: string, data: any[]) {\r\n        if (selectedValues === null || selectedValues === undefined) {\r\n            this.selections = [];\r\n        }\r\n\r\n        if (typeof selectedValues === 'boolean' || typeof selectedValues === 'number') {\r\n            selectedValues = '' + selectedValues;\r\n        }\r\n\r\n        const selectedItems = selectedValues ? String(selectedValues).split(this.separator).map(val => {\r\n            if (this.comboService.displayType === 'LOOKUPTREELIST') {\r\n                return this.comboService.treeNodeToFlatData(data, val, this.idField);\r\n            }\r\n            return data.find(_data => '' + val == this.commonUtils.getValue(this.idField, _data) + '');\r\n\r\n        }) : [];\r\n        this.selections = selectedItems || [];\r\n    }\r\n\r\n    private getDisplayText(value, data) {\r\n        if (value !== null && value !== undefined) {\r\n            const selectedItems = this.filterSelections(value, data);\r\n            if (!selectedItems || !selectedItems.length) {\r\n                return value;\r\n            } else {\r\n                return selectedItems.filter(v => !!v).join(this.separator);\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        let data = [];\r\n        if (this.data instanceof Array) {\r\n            data = this.data;\r\n        } else if (this.data) {\r\n            data = (this.data['items'] as any) instanceof Array ? this.data['items'] : data;\r\n        }\r\n\r\n        this.originalText = value;\r\n        // è§£å³ uistate binding ä¸­åæ¬¡ç»å®æ¶è®¾ç½®äº selectedValues å¼ ï¼æ­¤å¤æ¸ç©ºåå¯¼è³ä¸æå¸®å©è·åéä¸­è®°å½ä¸æ­£ç¡®\r\n        // this.selectedValues = '';\r\n\r\n        if (!this.uri && data && data.length > 0) {\r\n            if (this.isLookup()) {\r\n                if (this.selectedValues === undefined || this.selectedValues === null) {\r\n                    this.selectedValues = value;\r\n                }\r\n            } else {\r\n                this.selectedValues = value;\r\n            }\r\n            this.updateSelections(this.selectedValues, data);\r\n            this.displayText = this.getDisplayText(this.selectedValues, this.selections || []);\r\n\r\n            if (this.isLookup()) {\r\n                this.displayText = this.displayText === this.selectedValues ? value: this.displayText;\r\n            }\r\n\r\n            this.originalText = this.displayText;\r\n        } else {\r\n            // this.displayText = this.getDisplayText(value, this.selections);\r\n            this.displayText = value;\r\n            if (this.el.nativeElement['__zone_symbol__UIStateBindingChangefalse']) {\r\n                this.comboService['__SELECTEDIDS__'] = this.selectedValues;\r\n            }\r\n            \r\n            this.updateSelectedValues();\r\n            \r\n            if (this.selectedValues === undefined || this.selectedValues === null) {\r\n                this.selectedValues = value;\r\n            }\r\n            \r\n            if (this.viewType === 'tag' && this.multiSelect && (this.displayText !== null && this.displayText !== undefined)) {\r\n                const txtArr = this.displayText.split(this.separator).filter(n => n);\r\n                this.selections = txtArr.reduce((r, c, i) => {\r\n                    r.push({ [this.textField]: c });\r\n                    return r;\r\n                }, []);\r\n            }\r\n        }\r\n\r\n      \r\n        this.cdr.markForCheck();\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    filterDataOnServer(searchValue, searchField) {\r\n    }\r\n}\r\n","\r\nimport { Component, ElementRef, ChangeDetectorRef, Inject, Renderer2, forwardRef, ChangeDetectionStrategy,\r\n         ViewEncapsulation, Input, Injector, OnInit, OnChanges, SimpleChanges, ViewChild, HostBinding, HostListener } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DatalistComponent } from '@farris/ui-datalist';\r\nimport { BaseComboComponent } from './base-combo.component';\r\nimport { SelectItem } from './combo.interface';\r\nimport { ComboService } from './combo.service';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\n\r\n\r\nexport const INPUT_COMBO_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ComboListComponent),\r\n    multi: true\r\n};\r\n@Component({\r\n    selector: 'farris-combo-list',\r\n    templateUrl: './combo-list.component.html',\r\n    // styleUrls: ['./combo-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [INPUT_COMBO_VALUE_ACCESSOR, ComboService]\r\n})\r\nexport class ComboListComponent extends BaseComboComponent implements OnInit, OnChanges {\r\n    @Input() itemTemplate: any;\r\n\r\n    /** æ°æ®ä¸­æ è¯ç¦ç¨çå­æ®µåç§°ï¼é»è®¤ä¸º disabled */\r\n    @Input() disabledField = 'disabled';\r\n    /** åè¡¨ä¸­æ¯å¦æ¾ç¤ºå·²ç¦ç¨çé¡¹ï¼é»è®¤ true */\r\n    @Input() showDisabledItem = true;\r\n\r\n    /**\r\n     * æ¾ç¤ºé¢æ¿æ¹å¼ï¼ click | focus, é»è®¤ï¼ click\r\n     */\r\n    @Input() showPanelType: 'click'|'focus' = 'click';\r\n    @ViewChild('dl') dataListRef: DatalistComponent;\r\n    @Input() itemHeight: number;\r\n    @HostBinding('class.f-combo-list') cls = true;\r\n    @HostBinding('class.f-combo-list--tag')\r\n    get clsTag() {\r\n        return this.viewType === 'tag';\r\n    }\r\n\r\n    private filterData: any[] = [];\r\n    constructor(\r\n        public el: ElementRef,\r\n        public cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) public document: any,\r\n        public render: Renderer2,\r\n        public comboService: ComboService,\r\n        public injector: Injector\r\n    ) {\r\n        super(el, cdr, document, render, comboService, injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n       super.ngOnInit();\r\n       if (this.multiSelect) {\r\n            this.enableCancelSelected = this.multiSelect;\r\n       }\r\n       this.remoteSearch = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        /**\r\n         * å¦æç´æ¥ç»å®ä¸ä¸ªæ°ç»ä½ä¸ºåè¡¨æ°æ®å¹¶ä¸ data æ¯å¼æ­¥æ°æ®ï¼éè¦æ­¤æ¹æ³ï¼åæ­¥displayTextä¸selectedValues\r\n         */\r\n        if (changes.data && !changes.data.firstChange && !this.uri && !this.nosearch) {\r\n            const datas = changes.data.currentValue;\r\n            let val = this.ngControl ? this.ngControl.value || this.selectedValues : this.selectedValues;\r\n\r\n            if (this.selectedValues === undefined || this.selectedValues === null) {\r\n                val = this.displayText;\r\n            }\r\n\r\n            if (val !== undefined && val !== null && datas && datas.length > 0) {\r\n                const textArr = this.filterSelections(val, this.data);\r\n                this.displayText = textArr.filter(v => !!v).join(this.separator);\r\n                this.updateSelections(val, this.data);\r\n                this.comboService.selections$.next({action: 'initData'});\r\n            } else {\r\n                this.selections = [];\r\n                this.displayText = '';\r\n            }\r\n        }\r\n\r\n        // if (changes.multiSelect && !changes.multiSelect.isFirstChange()) {\r\n        //     this.enableCancelSelected = this.multiSelect;\r\n        // }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    registerKeyboardEvent($event: KeyboardEvent) {\r\n\r\n        if (this.multiSelect || (this.readonly || this.disabled))  {\r\n            return;\r\n        }\r\n\r\n        if ($event.code === 'ArrowUp' || $event.code === 'ArrowDown' ||\r\n            (!this.editable && !this.readonly && !this.disabled && $event.code === 'Space')) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        const selectItem = (index) => {\r\n            this.comboService.selectItem(data[index], index, false);\r\n            const params = {data: data[index], index};\r\n            if (this.isOpen) {\r\n                this.scrollToCurrentItem(index);\r\n            }\r\n            this.updateSelectValues(params);\r\n        };\r\n\r\n\r\n        let data = this.filterData && this.filterData.length ? this.filterData : this.data;\r\n\r\n        if (!this['_cmbPanel']) {\r\n            data = this.data;\r\n        }\r\n\r\n        let _data = [];\r\n\r\n        if (this.disabledField) {\r\n            _data = data.filter(n => !this.commonUtils.getValue(this.disabledField, n))\r\n        }\r\n\r\n        const getrealIndex = (idx, nextIdx, isNext = true) => {\r\n            if (data[nextIdx]) {\r\n                // å¤æ­ä¸ä¸é¡¹æ¯å¦ç¦ç¨\r\n                const isDisabled = this.commonUtils.getValue(this.disabledField, data[nextIdx]);\r\n                if (isDisabled) {\r\n\r\n                    const _idx = _data.findIndex(n => this.commonUtils.getValue(this.idField, n) === this.commonUtils.getValue(this.idField, data[idx]));\r\n                    if (isNext) {\r\n                        nextIdx = _idx + 1;\r\n                    } else {\r\n                        nextIdx = _idx - 1;\r\n                    }\r\n                    if (_data[nextIdx]) {\r\n                        return data.findIndex(n => this.commonUtils.getValue(this.idField, n) === this.commonUtils.getValue(this.idField, _data[nextIdx]));\r\n                    } else {\r\n                        const newIdex = nextIdx > 0 ? 0 : _data.length -1;\r\n                        return data.findIndex(n => this.commonUtils.getValue(this.idField, n) === this.commonUtils.getValue(this.idField, _data[newIdex]) && !this.commonUtils.getValue(this.disabledField, n))\r\n                    }\r\n                }\r\n                return nextIdx;\r\n            }\r\n        }\r\n\r\n        const idx = data.findIndex(n => this.commonUtils.getValue(this.idField, n) == this.selectedValues);\r\n\r\n        if ($event.code === 'ArrowUp') {  // up\r\n            let prevIdx = idx - 1;\r\n            if (prevIdx < 0) {\r\n                prevIdx = data.length - 1;\r\n            }\r\n\r\n            if (this.disabledField) {\r\n                prevIdx = getrealIndex(idx,prevIdx, false);\r\n            }\r\n\r\n            selectItem(prevIdx);\r\n        }\r\n        if ($event.code === 'ArrowDown' || ($event.code === 'Space' && !this.editable)) { // down\r\n            let nextIdx = idx + 1;\r\n            if (nextIdx >= data.length) {\r\n                nextIdx = 0;\r\n            }\r\n\r\n            if (this.disabledField) {\r\n                nextIdx = getrealIndex(idx,nextIdx);\r\n            }\r\n\r\n            selectItem(nextIdx);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @HostListener('keydown.esc', ['$event'])\r\n    escHandlerEvent($event: KeyboardEvent) {\r\n        if (this.isOpen) {\r\n            this.hide(false);\r\n        }\r\n    }\r\n\r\n\r\n    protected onSelectionsChange(v: any[]) {\r\n        if (this.uri) {\r\n            if (this.selections && this.selections.length) {\r\n                this.selectedValues = this.selections.map(n => n[this.idField]).join(this.separator);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateSelectValues(item: SelectItem, emitEvent = true) {\r\n        const { data, index } = { ...item };\r\n        this.comboService.selectItem(data, index);\r\n        if (this.dataListRef) {\r\n            this.selectedValues = this.dataListRef.selectedValues;\r\n        }\r\n        if (!this.multiSelect) {\r\n            this.selectedValues = data[this.idField];\r\n        }\r\n\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        if (emitEvent) {\r\n            this.selectChange.emit({ data, index, instance: this, selections: this.selections });\r\n            this.cdr.markForCheck();\r\n            this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n        }\r\n    }\r\n\r\n    private scrollToCurrentItem(index: number) {\r\n        if (this.dataListRef && this.dataListRef.el) {\r\n            const ulEl = this.dataListRef.el.nativeElement.querySelector('ul.list-group');\r\n            if (ulEl && ulEl.children && ulEl.children[index]) {\r\n                ulEl.children[index].scrollIntoView({block: 'nearest'});\r\n            }\r\n        }\r\n    }\r\n\r\n    onSelect(item: SelectItem) {\r\n        this.updateSelectValues(item, true);\r\n\r\n        if (!this.multiSelect) {\r\n            this.comboService.isOpen$.next(false);\r\n        }\r\n    }\r\n\r\n    onUnSelected(value: SelectItem) {\r\n        const { data } = { ...value };\r\n        this.comboService.unSelectItem(data);\r\n        if (this.dataListRef) {\r\n            this.selectedValues = this.dataListRef.selectedValues;\r\n        }\r\n        // if (!this.multiSelect) {\r\n        //     this.selectedValues = data[this.idField];\r\n        // }\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        this.cdr.markForCheck();\r\n        this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n    }\r\n\r\n    onEnter(event: Event) {\r\n        if (this.isOpen) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    onKeyup($event) {\r\n\r\n    }\r\n\r\n    onKeydown($event: KeyboardEvent) {\r\n        if ($event.code === 'Tab') {\r\n            this.hide(false);\r\n        }\r\n    }\r\n\r\n    onFocus($event) {\r\n        if (this.showPanelType === 'focus') {\r\n            this.show();\r\n        }\r\n    }\r\n\r\n    removeSelectItem($event: MouseEvent, item) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.comboService.unSelectItem(item);\r\n        this.selectedValues = this.comboService.getValue(this.idField);\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        this.cdr.detectChanges();\r\n        this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n    }\r\n\r\n    protected initDatasChangeAction() {\r\n        this.comboService.data$.subscribe(data => {\r\n            this.filterData = data;\r\n\r\n\r\n            if (data && data.length && !this.editable) {\r\n              \r\n                if (typeof this.selectedValues === 'boolean') {\r\n                    return;\r\n                }\r\n\r\n                if (this.selectedValues) {\r\n                    let idx = -1;\r\n                    let items = [];\r\n                    if (typeof this.selectedValues === 'number' || typeof this.selectedValues === 'boolean') {\r\n                        items = data.filter((n) => {\r\n                            return n[this.idField] === this.selectedValues || n[this.textField] === this.selectedValues;\r\n                        });\r\n                    } else {\r\n                        items = this.selectedValues.split(this.separator).map(val => {\r\n                            return data.find((n, i) => {\r\n                                return n[this.idField] === val || n[this.textField] === val;\r\n                            });\r\n                        });\r\n                    }\r\n\r\n\r\n                    if (!this.selections || !this.selections.length) {\r\n                        if (items && items.length) {\r\n                            this.selectedValues = items.map(i => {\r\n                                return this.commonUtils.getValue(this.idField, i);\r\n                            }).join(this.separator);\r\n                            this.selections = items;\r\n                        }\r\n                    }\r\n                    \r\n                    idx = data.findIndex(n => {\r\n                        return  this.commonUtils.getValue(this.idField, n)  === this.commonUtils.getValue(this.idField, this.selections[0]) || \r\n                        this.commonUtils.getValue(this.textField, n) === this.commonUtils.getValue(this.textField, this.selections[0]);\r\n                    });\r\n\r\n                    if (idx > -1) {\r\n                        setTimeout(() => {\r\n                            this.scrollToCurrentItem(idx);\r\n                        }, 300);\r\n                    }\r\n                }\r\n              \r\n              \r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import { NotifyModule } from '@farris/ui-notify';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ComboListComponent } from './combo-list.component';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { ComboLocaleService } from './services/combo.locale.service';\r\n@NgModule({\r\n    declarations: [\r\n        ComboListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        HttpClientModule, \r\n        InputGroupModule,\r\n        LoadingModule.forRoot(),\r\n        DatalistModule,\r\n        NotifyModule.forRoot()\r\n    ],\r\n    exports: [ComboListComponent],\r\n    providers: [ComboLocaleService]\r\n})\r\nexport class ComboListModule {}\r\n"]}