/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
var ComboLocaleService = /** @class */ (function () {
    function ComboLocaleService(localeService) {
        this.localeService = localeService;
        this.localeConfig = {
            'ZH_CN': {
                placeholder: '请选择'
            },
            'EN_US': {
                placeholder: 'Please Select'
            }
        };
    }
    /**
     * @return {?}
     */
    ComboLocaleService.prototype.getLocaleConfig = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var locale = this.localeService.localeId;
        this.localeConfig = this.localeService.getResources(locale + ".combo");
        return this.localeConfig;
        // if (locale && this.localeConfig[locale]) {
        //     return this.localeConfig[locale];
        // } else {
        //     return this.localeConfig.ZH_CN;
        // }
    };
    ComboLocaleService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ComboLocaleService.ctorParameters = function () { return [
        { type: LocaleService }
    ]; };
    return ComboLocaleService;
}());
export { ComboLocaleService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ComboLocaleService.prototype.localeConfig;
    /**
     * @type {?}
     * @private
     */
    ComboLocaleService.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8ubG9jYWxlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWNvbWJvLWxpc3QvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvY29tYm8ubG9jYWxlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWxEO0lBVUksNEJBQW9CLGFBQTRCO1FBQTVCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBUnhDLGlCQUFZLEdBQVE7WUFDeEIsT0FBTyxFQUFHO2dCQUNOLFdBQVcsRUFBRSxLQUFLO2FBQ3JCO1lBQ0QsT0FBTyxFQUFHO2dCQUNOLFdBQVcsRUFBRSxlQUFlO2FBQy9CO1NBQ0osQ0FBQztJQUNpRCxDQUFDOzs7O0lBQzdDLDRDQUFlOzs7SUFBdEI7O1lBQ1UsTUFBTSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUTtRQUUxQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFJLE1BQU0sV0FBUSxDQUFDLENBQUM7UUFFdkUsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBRXpCLDZDQUE2QztRQUM3Qyx3Q0FBd0M7UUFDeEMsV0FBVztRQUNYLHNDQUFzQztRQUN0QyxJQUFJO0lBQ1IsQ0FBQzs7Z0JBdkJKLFVBQVU7Ozs7Z0JBRkYsYUFBYTs7SUEwQnRCLHlCQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0F2Qlksa0JBQWtCOzs7Ozs7SUFDM0IsMENBT0U7Ozs7O0lBQ1UsMkNBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBMb2NhbGVTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ29tYm9Mb2NhbGVTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgbG9jYWxlQ29uZmlnOiBhbnkgPSB7XHJcbiAgICAgICAgJ1pIX0NOJyA6IHtcclxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICfor7fpgInmi6knXHJcbiAgICAgICAgfSxcclxuICAgICAgICAnRU5fVVMnIDoge1xyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcjogJ1BsZWFzZSBTZWxlY3QnXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbG9jYWxlU2VydmljZTogTG9jYWxlU2VydmljZSkge31cclxuICAgIHB1YmxpYyBnZXRMb2NhbGVDb25maWcoKSB7XHJcbiAgICAgICAgY29uc3QgbG9jYWxlID0gdGhpcy5sb2NhbGVTZXJ2aWNlLmxvY2FsZUlkO1xyXG5cclxuICAgICAgICB0aGlzLmxvY2FsZUNvbmZpZyA9IHRoaXMubG9jYWxlU2VydmljZS5nZXRSZXNvdXJjZXMoYCR7bG9jYWxlfS5jb21ib2ApO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbGVDb25maWc7XHJcblxyXG4gICAgICAgIC8vIGlmIChsb2NhbGUgJiYgdGhpcy5sb2NhbGVDb25maWdbbG9jYWxlXSkge1xyXG4gICAgICAgIC8vICAgICByZXR1cm4gdGhpcy5sb2NhbGVDb25maWdbbG9jYWxlXTtcclxuICAgICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgIC8vICAgICByZXR1cm4gdGhpcy5sb2NhbGVDb25maWcuWkhfQ047XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==