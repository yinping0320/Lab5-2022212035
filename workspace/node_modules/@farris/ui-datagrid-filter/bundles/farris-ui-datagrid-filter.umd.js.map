{"version":3,"file":"farris-ui-datagrid-filter.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid-filter/lib/operations/operators.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-row.service.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-panel.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-editor.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-textbox.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-checkbox.component.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-cell-editor.directive.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-row.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/condition-editor.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-datalist.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-select.component.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-row.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\r\n/**\r\n * æå¡å¨ç«¯æ¯ææ¯è¾æä½\r\n *  Equal(0),\r\n    NotEqual(1),\r\n    Greater(2),\r\n    GreaterOrEqual(3),\r\n    Less(4),\r\n    LessOrEqual(5),\r\n    Like(6),\r\n    LikeStartWith(7),\r\n    LikeEndWith(8),\r\n    NotLike(9),\r\n    NotLikeStartWith(10),\r\n    NotLikeEndWith(11),\r\n    Is(12),\r\n    IsNot(13),\r\n    In(14),\r\n    NotIn(15),\r\n    LikeIgnoreCase(16);\r\n */\r\n\r\nexport enum FilterOperator {\r\n    Equal = 0,\r\n    NotEqual = 1,\r\n    Greater = 2,\r\n    GreaterOrEqual = 3,\r\n    Less = 4,\r\n    LessOrEqual = 5,\r\n    Contains = 6,\r\n    NotContains = 9,\r\n    In = 14,\r\n    NotIn = 15,\r\n    Empty = 1001,\r\n    NotEmpty = 1002,\r\n    Null = 1003,\r\n    NotNull = 1004\r\n}\r\n\r\nexport enum FilterConditionValue {\r\n    All = '',\r\n    Empty = 'null'\r\n}\r\n\r\nexport interface FilterEnumSetting {\r\n    valueField?: string;\r\n    textField?: string;\r\n    data?: any[];\r\n    idField?: string;\r\n}\r\n\r\nexport interface FilterRowOperator {\r\n    code: FilterOperator;\r\n    label: string;\r\n    isDefault: boolean;\r\n}\r\n\r\nexport interface FilterCondition {\r\n    operator1?: FilterOperator;\r\n    value1?: any;\r\n    relation?: 'and' | 'or' | '';\r\n    operator2?: FilterOperator;\r\n    value2?: any;\r\n}\r\n\r\nexport type ColumnConditionType = FilterCondition | FilterConditionValue | string;\r\n\r\nexport interface ColumnFilterCondition {\r\n    [fieldName: string]: ColumnConditionType;\r\n}\r\n\r\n\r\nexport interface FilterData {\r\n    filterField: string;  value: string; lbracket?: string; rbracket?: string;\r\n    relation?: any; compare?: any;\r\n}\r\n\r\nexport const AllFilterOperator = {\r\n    [FilterOperator.Equal]: 'ç­äº',\r\n    [FilterOperator.NotEqual]: 'ä¸ç­äº' ,\r\n    [FilterOperator.Greater]: 'å¤§äº' ,\r\n    [FilterOperator.GreaterOrEqual]: 'å¤§äºç­äº' ,\r\n    [FilterOperator.Less]: 'å°äº',\r\n    [FilterOperator.LessOrEqual]: 'å°äºç­äº',\r\n    [FilterOperator.Contains]: 'åå«',\r\n    [FilterOperator.NotContains]: 'ä¸åå«',\r\n    [FilterOperator.NotEmpty]: 'ä¸ä¸ºç©º',\r\n    [FilterOperator.Empty]: 'ç©º',\r\n};\r\n\r\n/** ææ¬æä½ç¬¦ */\r\nexport const TextFilterOperators: FilterRowOperator[] = [\r\n    { code: FilterOperator.Empty, label: AllFilterOperator[FilterOperator.Empty], isDefault: false },\r\n    { code: FilterOperator.NotEmpty, label: AllFilterOperator[FilterOperator.NotEmpty], isDefault: false },\r\n    { code: FilterOperator.Equal, label: AllFilterOperator[FilterOperator.Equal], isDefault: false },\r\n    { code: FilterOperator.NotEqual, label: AllFilterOperator[FilterOperator.NotEqual] , isDefault: false},\r\n    { code: FilterOperator.Contains, label: AllFilterOperator[FilterOperator.Contains] , isDefault: true},\r\n    { code: FilterOperator.NotContains, label: AllFilterOperator[FilterOperator.NotContains] , isDefault: false}\r\n];\r\n/** æ¥æææ°å­æä½ç¬¦ */\r\nexport const NumberOrDateFilterOperators: FilterRowOperator[] = [\r\n    { code: FilterOperator.Empty, label: AllFilterOperator[FilterOperator.Empty], isDefault: false },\r\n    { code: FilterOperator.NotEmpty, label: AllFilterOperator[FilterOperator.NotEmpty], isDefault: false },\r\n    { code: FilterOperator.Equal, label: AllFilterOperator[FilterOperator.Equal], isDefault: false },\r\n    { code: FilterOperator.NotEqual, label: AllFilterOperator[FilterOperator.NotEqual] , isDefault: false},\r\n    { code: FilterOperator.Greater, label: AllFilterOperator[FilterOperator.Greater] , isDefault: false},\r\n    { code: FilterOperator.GreaterOrEqual, label: AllFilterOperator[FilterOperator.GreaterOrEqual] , isDefault: false},\r\n    { code: FilterOperator.Less, label: AllFilterOperator[FilterOperator.Less] , isDefault: false},\r\n    { code: FilterOperator.LessOrEqual, label: AllFilterOperator[FilterOperator.LessOrEqual] , isDefault: false}\r\n];\r\n","import { Injectable, ComponentRef, EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {ColumnFilterType, DataColumn, DatagridUtils, DatagridComponent, ColumnFilter } from '@farris/ui-datagrid';\r\n\r\nimport { ColumnFilterCondition, FilterCondition, FilterConditionValue, AllFilterOperator,\r\n    FilterEnumSetting, FilterOperator, FilterData } from './operations/operators';\r\nimport { FilterRowPanelComponent } from './filter-editors/filter-row-panel.component';\r\n\r\n@Injectable()\r\nexport class DatagridFilterRowService {\r\n    private columnConditionSubject = new Subject<FilterData[] | any>();\r\n    filterRowConditions$ = this.columnConditionSubject.asObservable();\r\n    columnConditions: ColumnFilterCondition = {};\r\n    currentFilterPanel: ComponentRef<FilterRowPanelComponent>;\r\n\r\n    gridInstance: DatagridComponent;\r\n\r\n    filterTextboxChanged = new EventEmitter();\r\n    removeField = new EventEmitter<string>();\r\n\r\n    constructor() { }\r\n\r\n    setFilterPanel(frp: ComponentRef<FilterRowPanelComponent>) {\r\n        this.currentFilterPanel = frp;\r\n    }\r\n\r\n    hasFilterPanel() {\r\n        return !!this.currentFilterPanel;\r\n    }\r\n\r\n    closeFilterPanel() {\r\n        if (this.hasFilterPanel()) {\r\n            if (this.currentFilterPanel.instance.documentClickHandle) {\r\n                this.currentFilterPanel.instance.documentClickHandle();\r\n            }\r\n            document.body.removeChild(this.currentFilterPanel.location.nativeElement);\r\n            this.currentFilterPanel.destroy();\r\n            this.currentFilterPanel = null;\r\n\r\n            // document.body.style.overflow = 'auto';\r\n        }\r\n    }\r\n\r\n    clear(emitEvent = true) {\r\n        this.columnConditions = {};\r\n        if (emitEvent) {\r\n            this.columnConditionSubject.next({});\r\n        }\r\n    }\r\n\r\n    removeFilterField(field: string, opts?: {emitEvent: boolean}) {\r\n        if (this.columnConditions) {\r\n            delete this.columnConditions[field];\r\n            this.removeField.emit(field);\r\n            if (!opts || (opts && opts.emitEvent)) {\r\n                this.emitColumnConditionChanged(this.columnConditions, field);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateColumnConditions(field: string, colCondition: FilterCondition | FilterConditionValue ) {\r\n        const currentCondition = this.columnConditions[field];\r\n        if (!currentCondition) {\r\n            this.columnConditions = Object.assign(this.columnConditions, {[field]: colCondition});\r\n        } else {\r\n            if (JSON.stringify(currentCondition) !== JSON.stringify(colCondition)) {\r\n                this.columnConditions = Object.assign(this.columnConditions, {[field]: colCondition});\r\n            }\r\n        }\r\n        // å¼ä¸º ââ ï¼åä»£è¡¨çä¸åä¸æ¥è¯¢\r\n        Object.keys(this.columnConditions).forEach(k => {\r\n            if (!this.columnConditions[k]) {\r\n                // delete this.columnConditions[k];\r\n                this.columnConditions[k] = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    updateColumnConditions(field: string, colCondition: FilterCondition | FilterConditionValue ) {\r\n        this._updateColumnConditions(field, colCondition);\r\n        this.emitColumnConditionChanged(this.columnConditions);\r\n    }\r\n\r\n    private emitColumnConditionChanged(conditions, removedFields?: string) {\r\n        // const farr = this.gridInstance.remoteFilter ? this.convert2FilterArray(this.columnConditions) : this.columnConditions;\r\n        this.columnConditionSubject.next({conditions, removedFields});\r\n    }\r\n\r\n    // è·åè¿æ»¤è¡æ¾ç¤ºææ¬\r\n    condition2string(column: DataColumn, condition: FilterCondition) {\r\n        if (!condition || typeof condition === 'string') {\r\n            return '';\r\n        }\r\n\r\n        const andText = this.gridInstance.localeService.getValue('datagrid.filter.and');\r\n        const orText = this.gridInstance.localeService.getValue('datagrid.filter.or');\r\n\r\n        const getRelationLabel = (r) => {\r\n            if (r === 'and') {\r\n                return andText;\r\n            } else if (r === 'or') {\r\n                return orText;\r\n            } else {\r\n                return  '';\r\n            }\r\n        };\r\n\r\n        let filterPreViewString = '';\r\n        if (column.filter.type === ColumnFilterType.fromdata) {\r\n            filterPreViewString = `(${condition.value1.length})`;\r\n            if (condition.value1) {\r\n                filterPreViewString += ` ${condition.value1.join(',')}`;\r\n            }\r\n        } else if (column.filter.type === ColumnFilterType.enum) {\r\n            const enumOpts = this.getEnumOptions(column) as FilterEnumSetting;\r\n            const { valueField, textField, data } = enumOpts;\r\n            filterPreViewString = `(${condition.value1.length})`;\r\n            if (condition.value1) {\r\n                filterPreViewString += ` ${condition.value1.map(v => {\r\n                    const enumItem = data.find(d => d[valueField] == v);\r\n                    return enumItem[textField];\r\n                }).join(',')}`;\r\n            }\r\n        } else {\r\n            if (condition) {\r\n                const operator1Label = this.getOperatorLabel(condition.operator1);\r\n                if ( !this.isEmpty(condition.value1)) {\r\n                    filterPreViewString = `${operator1Label} ${condition.value1}`;\r\n                    const operator2Label = this.getOperatorLabel(condition.operator2);\r\n                    if (!this.isEmpty(condition.value2)) {\r\n                        filterPreViewString += ` ${getRelationLabel(condition.relation)} ${operator2Label} ${condition.value2}`;\r\n                    } else {\r\n                        if (condition.operator2 !== undefined) {\r\n                            const op2 = parseInt('' + condition.operator2, 10);\r\n                            if (op2 === FilterOperator.Empty || op2 === FilterOperator.NotEmpty) {\r\n                                filterPreViewString += ` ${getRelationLabel(condition.relation)} ${operator2Label}`;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    const op1 = parseInt('' + condition.operator1, 10);\r\n                    if (op1 === FilterOperator.Empty || op1 === FilterOperator.NotEmpty) {\r\n                        filterPreViewString = `${operator1Label}`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filterPreViewString;\r\n    }\r\n\r\n    private isEmpty(v) {\r\n        return v === '' || v === undefined || v === null;\r\n    }\r\n\r\n\r\n    getEnumOptions(column: DataColumn) {\r\n        const colFilter = column.filter as ColumnFilter;\r\n        const datatype = colFilter.type;\r\n        let enumSetting = null;\r\n        if (datatype === ColumnFilterType.enum) {\r\n            const fmt = column.formatter as any;\r\n            if (fmt) {\r\n                enumSetting = fmt.options;\r\n            } else {\r\n                if (colFilter.options) {\r\n                    enumSetting = colFilter.options;\r\n                }\r\n            }\r\n        } else { // enum æ°æ®æºæ¥èªgrid æ°æ®åè¡¨\r\n            const columnData: string[] = this.gridInstance.dfs.getData(true).map(n => {\r\n                return DatagridUtils.getValue(column.field, n);\r\n            });\r\n            // å»é¤éå¤\r\n            const enumData = Array.from(new Set(columnData)).map(n => {\r\n                return {\r\n                    value: n, label: n\r\n                };\r\n            });\r\n            enumSetting = {\r\n                valueField: 'value', textField: 'label', data: enumData, idField: 'value'\r\n            };\r\n        }\r\n\r\n        return enumSetting;\r\n\r\n    }\r\n\r\n    // è·åæä½ç¬¦æ ç­¾\r\n    getOperatorLabel(code: any) {\r\n        const strOper = FilterOperator[code];\r\n        if (strOper) {\r\n            const operName = strOper[0].toLowerCase() + strOper.substr(1);\r\n            const key = `datagrid.filter.operators.${operName}`;\r\n            return this.gridInstance.localeService.getValue(key);\r\n        }\r\n        return '';\r\n    }\r\n\r\n}\r\n","import { Component, Input, NgZone, OnInit, ElementRef,\r\n            Renderer2, Output, EventEmitter, Injector, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DataColumn, ColumnFilterType } from '@farris/ui-datagrid';\r\n\r\nimport { DatagridFilterRowService } from '../datagrid-filter-row.service';\r\nimport { FilterEnumSetting, FilterCondition, FilterRowOperator } from '../operations/operators';\r\nimport { CommonUtils, OverLayHiddenService } from '@farris/ui-common';\r\n\r\n@Component({\r\n    selector: 'filter-row-panel',\r\n    templateUrl: './filter-row-panel.compoent.html'\r\n})\r\nexport class FilterRowPanelComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() width = 240;\r\n    @Input() height = 250;\r\n\r\n    @Input() column: DataColumn;\r\n    @Input() operators: FilterRowOperator[];\r\n\r\n    @Input() datatype = ColumnFilterType.string;\r\n\r\n    @Output() conditionChange = new EventEmitter();\r\n\r\n    @Output() panelHeightChange = new EventEmitter();\r\n\r\n    gridInstance = null;\r\n    enumSetting: FilterEnumSetting = {};\r\n    selectedValues: string;\r\n\r\n    condition: FilterCondition = {\r\n        operator1: 1,\r\n        value1: '',\r\n        relation: '',\r\n        operator2: 1,\r\n        value2: ''\r\n    };\r\n\r\n    documentClickHandle = null;\r\n\r\n    target: any;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    private zone: NgZone = null;\r\n    private commonUtils: CommonUtils;\r\n    private overlaySer: OverLayHiddenService;\r\n    constructor(\r\n        private ngzone: NgZone, private el: ElementRef,\r\n        private render: Renderer2, public dfrs: DatagridFilterRowService,\r\n        private inject: Injector) {\r\n        this.zone = this.inject.get(NgZone);\r\n        this.commonUtils = this.inject.get(CommonUtils, new CommonUtils());\r\n        this.overlaySer =  this.inject.get(OverLayHiddenService, new OverLayHiddenService());\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngzone.runOutsideAngular( () =>  {\r\n            this.render.listen(this.el.nativeElement, 'click',  (e: MouseEvent) => {\r\n                e.stopPropagation();\r\n                return false;\r\n            });\r\n        });\r\n\r\n        this.initEnumSetting();\r\n\r\n        // this.documentClickHandle = this.render.listen(document, 'click', (event) => {\r\n        //     this.close(event);\r\n        // });\r\n\r\n        this.overlaySer.registerMouseEvent(this.el.nativeElement, (e) => {\r\n            const tar = e.target as any;\r\n            if(tar && tar.closest('.overlay-container')) {\r\n                return;\r\n            }\r\n\r\n            if (document.body.className.indexOf('modal-open') > -1) {\r\n                return;\r\n            }\r\n\r\n            if (this.el.nativeElement.contains(e.target)) {\r\n                return;\r\n            }\r\n            this.close(e)\r\n        })\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.target) {\r\n            this.resetPanelPosition();\r\n\r\n            const panelDiv = this.el.nativeElement.querySelector('div');\r\n            panelDiv.style.transition =  'top 0.2s ease 0.05s';\r\n\r\n\r\n            const zindex = this.commonUtils.getFloatingLayerIndex();\r\n            panelDiv.style.zIndex = zindex;\r\n\r\n            const overlayEl = this.el.nativeElement.querySelector('.filter-panel-overlay');\r\n            if (overlayEl) {\r\n                overlayEl.style.zIndex = zindex;\r\n                panelDiv.style.zIndex = zindex + 1;\r\n            }\r\n\r\n            // this.el.nativeElement.style.position = 'fixed';\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.overlaySer) {\r\n            this.overlaySer.destory(this.el.nativeElement);\r\n        }\r\n    }\r\n\r\n    private resetPanelPosition() {\r\n        const panelDiv = this.el.nativeElement.querySelector('div');\r\n        const h = panelDiv.querySelector('.panel-content').clientHeight + 36;\r\n        const rect = this.target.target.parentElement.getBoundingClientRect();\r\n\r\n        const downAreaHeight = window['innerHeight'] - rect.top;\r\n\r\n        if (downAreaHeight < h) {\r\n            const top = window['innerHeight'] - h - 10;\r\n            panelDiv.style.top = top + 'px';\r\n        } else {\r\n            panelDiv.style.top = rect.top + 'px';\r\n        }\r\n    }\r\n\r\n    onPanelHeightChanged() {\r\n        this.resetPanelPosition();\r\n        this.panelHeightChange.emit();\r\n    }\r\n\r\n\r\n    close(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.dfrs.closeFilterPanel();\r\n    }\r\n\r\n\r\n    onValueChange(condition) {\r\n        this.conditionChange.emit(condition);\r\n    }\r\n\r\n    private initEnumSetting() {\r\n        if (this.datatype > 5) {\r\n            this.enumSetting = this.dfrs.getEnumOptions(this.column);\r\n            const currentColumnCondition = this.dfrs.columnConditions[this.column.field] as FilterCondition;\r\n            if (currentColumnCondition && currentColumnCondition.value1) {\r\n                this.selectedValues = currentColumnCondition.value1.join(',');\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { DataColumn } from '@farris/ui-datagrid';\r\nimport { Component, OnInit, Input, Injector } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'filter-editor',\r\n    template: '',\r\n})\r\nexport class FilterRowEditorComponent implements OnInit {\r\n\r\n    @Input() column: DataColumn;\r\n    id = '';\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.id = `filter-row_${this.column.field}`;\r\n    }\r\n\r\n    clearValue() {}\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Component, Input, ComponentFactoryResolver, Injector, ComponentRef, ApplicationRef,\r\n    Renderer2, ViewChild, ElementRef, ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { delay, filter, debounceTime } from 'rxjs/operators';\r\n\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { ColumnFilterType, DatagridComponent } from '@farris/ui-datagrid';\r\n\r\nimport { FilterOperator, FilterCondition,\r\n        TextFilterOperators, NumberOrDateFilterOperators, FilterConditionValue, } from './../operations/operators';\r\nimport { FilterRowPanelComponent } from './filter-row-panel.component';\r\nimport { DatagridFilterRowService } from '../datagrid-filter-row.service';\r\nimport { FilterRowEditorComponent } from './filter-row-editor.component';\r\n\r\n@Component({\r\n    selector: 'filter-textbox',\r\n    template: `\r\n    <div class=\"f-datagrid-header-cell-content f-datagrid-filter-cell d-flex\" style=\"padding-right: 5px\">\r\n        <div class=\"f-datagrid-cell-formgroup farris-group-auto flex-fill\">\r\n            <input *ngIf=\"!disabled\" class=\"form-control\" [attr.type]=\"inputType\" [value]=\"filterStr\"\r\n                (input)=\"onTextValueChange($event)\" #input [class.no-number-button]=\"inputType == 'number'\">\r\n            <input *ngIf=\"disabled\" class=\"form-control\" type=\"text\" [value]=\"filterStr\"\r\n            [attr.title]=\"filterStr\" [disabled]=\"disabled\" [class.filter-editor-disabled]=\"disabled\" >\r\n        </div>\r\n        <div style=\"min-width: 26px; text-align: center; align-items: center;\r\n            display: flex; justify-content: center;\" *ngIf=\"column.filter.enableOperator\">\r\n            <span style=\"cursor: pointer;\" class=\"f-icon f-icon-filter-sm\" (click)=\"show($event)\"></span>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        .no-number-button{-moz-appearance: textfield;}\r\n        .no-number-button::-webkit-outer-spin-button, .no-number-button::-webkit-inner-spin-button {\r\n              -webkit-appearance: none!important;\r\n        }`\r\n    ]\r\n})\r\nexport class FilterTextboxComponent extends FilterRowEditorComponent implements OnDestroy {\r\n    @Input() column: any;\r\n    @Input() disabled = false;\r\n    @Input() delay = 300;\r\n    filterStr = '';\r\n\r\n    get inputType() {\r\n        if (this.column.filter.type === ColumnFilterType.number ) {\r\n            return 'number';\r\n        }\r\n        return 'text';\r\n    }\r\n\r\n    gridInstance: DatagridComponent;\r\n\r\n    filterPanelRef: ComponentRef<FilterRowPanelComponent>;\r\n\r\n    filterPanelSubscription: Subscription = null;\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    private zone: NgZone = null;\r\n    private el: ElementRef = null;\r\n\r\n    constructor(\r\n        private cfr: ComponentFactoryResolver, private injector: Injector, private app: ApplicationRef,\r\n        public dfrs: DatagridFilterRowService, private render: Renderer2, private cd: ChangeDetectorRef,\r\n        private localSer: LocaleService\r\n    ) {\r\n        super();\r\n\r\n        this.zone = this.injector.get(NgZone);\r\n        this.el = this.injector.get(ElementRef);\r\n\r\n        this.dfrs.filterTextboxChanged.pipe(\r\n            filter(v => v[this.column.field] !== undefined),\r\n            delay(this.delay)\r\n        ).subscribe((obj: any) => {\r\n            const val = obj[this.column.field];\r\n            if (val !== '') {\r\n                const _condition = { operator1: FilterOperator.Contains, value1: val };\r\n                if (this.column.filter.type === ColumnFilterType.number) {\r\n                    _condition.operator1 = FilterOperator.Equal;\r\n                }\r\n\r\n                this.dfrs.updateColumnConditions(this.column.field, _condition );\r\n            } else {\r\n                this.dfrs.updateColumnConditions(this.column.field, FilterConditionValue.All );\r\n            }\r\n        });\r\n\r\n        this.dfrs.removeField.subscribe(f => {\r\n            if (f === this.column.field) {\r\n                this.clearValue();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.ro) {\r\n            this.ro.disconnect();\r\n            this.ro = null;\r\n        }\r\n    }\r\n\r\n    show(event: MouseEvent) {\r\n        this.close();\r\n        event.stopPropagation();\r\n\r\n        const dgContainerEle = (event.target as any).closest('.f-datagrid');\r\n        if (dgContainerEle) {\r\n            dgContainerEle.addEventListener('click', (e) => {\r\n                this.close();\r\n            });\r\n        }\r\n\r\n        if (!this.dfrs.gridInstance) {\r\n            this.dfrs.gridInstance = this.gridInstance;\r\n        }\r\n\r\n        const cf = this.cfr.resolveComponentFactory(FilterRowPanelComponent);\r\n        this.filterPanelRef = cf.create(this.injector);\r\n        this.app.attachView(this.filterPanelRef.hostView);\r\n        this.filterPanelRef.instance.column = this.column;\r\n        this.filterPanelRef.instance.gridInstance = this.gridInstance;\r\n\r\n        this.initOperators(this.filterPanelRef.instance);\r\n\r\n        if (this.column.filter !== false && this.column.filter !== undefined) {\r\n            this.filterPanelRef.instance.datatype = this.column.filter.type;\r\n\r\n            if (this.column.filter.type === ColumnFilterType.enum ||\r\n                this.column.filter.type === ColumnFilterType.fromdata) {\r\n                this.filterPanelRef.instance.height =  300;\r\n            }\r\n        }\r\n\r\n        const currentColumnCondition = this.dfrs.columnConditions[this.column.field];\r\n        if (currentColumnCondition) {\r\n            this.filterPanelRef.instance.condition = currentColumnCondition as FilterCondition;\r\n        } else {\r\n            this.filterPanelRef.instance.condition = {\r\n                operator1: 0,\r\n                value1: '',\r\n                relation: '',\r\n                operator2: 0,\r\n                value2: ''\r\n            };\r\n            // this.initOperators(this.filterPanelRef.instance);\r\n        }\r\n\r\n        this.filterPanelSubscription = this.filterPanelRef.instance.conditionChange.subscribe((condition: FilterCondition) => {\r\n            if (condition) {\r\n                this.dfrs.updateColumnConditions(this.column.field, condition );\r\n                this.filterStr = this.dfrs.condition2string(this.column, condition);\r\n                if (this.column.filter.type < 2) {\r\n                    this.disabled = !!this.filterStr;\r\n                }\r\n                this.cd.detectChanges();\r\n            } else {\r\n                this.clearValue();\r\n                this.dfrs.updateColumnConditions(this.column.field, FilterConditionValue.All);\r\n            }\r\n        });\r\n\r\n        // document.body.style.overflow = 'hidden';\r\n        document.body.appendChild(this.filterPanelRef.location.nativeElement);\r\n\r\n        this.updateFilterPanelPosition(event.target);\r\n        this.dfrs.setFilterPanel(this.filterPanelRef);\r\n        let { width: dgwidth, height: dgHeight } = dgContainerEle.getBoundingClientRect();\r\n        this['DG_CONTAINER_SIZE'] = { width: dgwidth, height: dgHeight };\r\n\r\n        this.filterPanelRef.instance.panelHeightChange.subscribe(() => {\r\n            let { width, height } = dgContainerEle.getBoundingClientRect();\r\n            this['DG_CONTAINER_SIZE'] = { width , height };\r\n        });\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            if (!this.ro) {\r\n                this.ro = new ResizeObserver((entries, observer) => {\r\n                    if (this['resize_timer_001']) {\r\n                        clearTimeout(this['resize_timer_001']);\r\n                    }\r\n                    this['resize_timer_001'] = setTimeout(() => {\r\n                        let { width, height } = entries[0].target.getBoundingClientRect();\r\n                        const { width: dgWidth, height: dgHeight } = this['DG_CONTAINER_SIZE'];\r\n            \r\n                        if (this.gridInstance.autoHeight) {\r\n                            if (dgWidth == width || dgWidth - width === 7 || dgWidth - width === -7) {\r\n                                return;\r\n                            }\r\n                        }\r\n            \r\n                        if (width !== dgWidth || height !== dgHeight) {\r\n                            this.close();\r\n                        }\r\n                    }, 30);\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.ro.observe(dgContainerEle);\r\n                });\r\n            }\r\n        });\r\n\r\n        this.filterPanelRef.instance.target = event;\r\n        this.filterPanelRef.changeDetectorRef.markForCheck();\r\n        this.filterPanelRef.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    close() {\r\n        this.dfrs.closeFilterPanel();\r\n        if (this.filterPanelSubscription) {\r\n            this.filterPanelSubscription.unsubscribe();\r\n            this.filterPanelSubscription = null;\r\n        }\r\n    }\r\n\r\n    private initOperators(ins: FilterRowPanelComponent) {\r\n        if (this.column.filter.type === ColumnFilterType.string) {\r\n            ins.operators = TextFilterOperators;\r\n            ins.condition.operator1 = FilterOperator.Contains;\r\n            ins.condition.operator2 = FilterOperator.Contains;\r\n        } else if (this.column.filter.type === ColumnFilterType.number || this.column.filter.type === ColumnFilterType.datetime\r\n            || this.column.filter.type === ColumnFilterType.date || this.column.filter.type === ColumnFilterType.time) {\r\n            ins.operators = NumberOrDateFilterOperators;\r\n            ins.condition.operator1 = FilterOperator.Equal;\r\n            ins.condition.operator2 = FilterOperator.Equal;\r\n        }\r\n\r\n        if (ins.operators) {\r\n            ins.operators.forEach(o => {\r\n                o.label = this.dfrs.getOperatorLabel(o.code);\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateFilterPanelPosition(target) {\r\n        if (target) {\r\n            const filterIconParent = target.parentElement;\r\n            if (filterIconParent) {\r\n                const pos = filterIconParent.getBoundingClientRect();\r\n                const tr = target.closest('tr');\r\n                const td = target.closest('td');\r\n\r\n                const headerPos = target.closest('.f-datagrid-header').getBoundingClientRect();\r\n                const panelWidth = this.filterPanelRef.instance.width;\r\n                let left = pos.left;\r\n                if (headerPos.width + headerPos.x < pos.x + panelWidth ) { // this.column.filter.type === ColumnFilterType.enum\r\n                    left = td.getBoundingClientRect().left + td.offsetWidth - panelWidth;\r\n                    this.filterPanelRef.location.nativeElement.querySelector('.panel-icon').style.left = `${panelWidth - 40}px`;\r\n                }\r\n                // const top = pos.top\r\n                const panel = this.filterPanelRef.location.nativeElement.querySelector('div');\r\n                if (panel) {\r\n                    this.render.setStyle(panel, 'top', `${pos.top}px`);\r\n                    this.render.setStyle(panel, 'left', `${left}px`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onTextValueChange($event) {\r\n        const value = $event.target.value;\r\n        this.dfrs.filterTextboxChanged.emit({ [this.column.field]: value });\r\n    }\r\n\r\n    clearValue() {\r\n        this.filterStr = '';\r\n        if (this.input) {\r\n            this.input.nativeElement.value = '';\r\n        }\r\n        if (this.column.filter.type < 2) {\r\n            this.disabled = false;\r\n        }\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    initFilter(condition: any) {\r\n        this.filterStr = this.dfrs.condition2string(this.column, condition);\r\n        this.disabled = !!this.filterStr;\r\n        this.dfrs._updateColumnConditions(this.column.field, condition);\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { FilterCondition, FilterOperator, FilterConditionValue } from './../operations/operators';\r\nimport { Component, OnInit, ViewChild, ElementRef, Input, ChangeDetectorRef, Injector } from '@angular/core';\r\nimport { FilterRowEditorComponent } from './filter-row-editor.component';\r\nimport { DatagridFilterRowService } from '../datagrid-filter-row.service';\r\nimport { FilterRowComponent } from '../datagrid-filter-row.component';\r\n\r\n\r\n\r\n// <input [checked]=\"chekced\" id=\"{{ id }}\" type=\"checkbox\" #chk >\r\n\r\n@Component({\r\n    selector: 'filter-checkbox',\r\n    template: `\r\n    <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input [name]=\"column.field\" [checked]=\"checked\" type=\"checkbox\" #chk class=\"custom-control-input\">\r\n        <label class=\"custom-control-label\" (click)=\"checkedChange($event)\"></label>\r\n    </div>\r\n    `\r\n\r\n})\r\nexport class FilterCheckboxComponent extends FilterRowEditorComponent implements OnInit {\r\n    i = 0;\r\n    checked = false;\r\n    @ViewChild('chk') chk: ElementRef;\r\n    constructor(\r\n        public dfrs: DatagridFilterRowService,\r\n        private cd: ChangeDetectorRef, private inject: Injector) {\r\n        super();\r\n\r\n        this.dfrs.removeField.subscribe(f => {\r\n            if (f === this.column.field) {\r\n                this.clearValue();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.chk.nativeElement.indeterminate = true;\r\n    }\r\n\r\n    checkedChange($event: MouseEvent) {\r\n        this.dfrs.closeFilterPanel();\r\n        if (this.i > 0) {\r\n            this.checked = !this.checked;\r\n        }\r\n        this.i += 1;\r\n        if (this.i > 2) {\r\n            this.i = 0;\r\n            this.chk.nativeElement.indeterminate = true;\r\n        } else {\r\n            this.chk.nativeElement.indeterminate = false;\r\n        }\r\n\r\n        if (this.i === 0) {\r\n            this.dfrs.updateColumnConditions(this.column.field, FilterConditionValue.All );\r\n            this.checked = false;\r\n        } else {\r\n            const condition: FilterCondition = {\r\n                operator1: FilterOperator.Equal,\r\n                value1: this.checked\r\n            };\r\n            this.dfrs.updateColumnConditions(this.column.field, condition );\r\n        }\r\n        this.cd.detectChanges();\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    clearValue() {\r\n        this.checked = false;\r\n        this.chk.nativeElement.indeterminate = true;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    initFilter(filterCondition: any) {\r\n        if (filterCondition && Object.keys(filterCondition).length) {\r\n            this.checked = filterCondition.value1;\r\n            this.chk.nativeElement.indeterminate = false;\r\n            this.i = this.checked ? 2 : 1;\r\n        } else {\r\n            this.checked = false;\r\n            this.chk.nativeElement.indeterminate = true;\r\n            this.i = 0;\r\n        }\r\n        this.dfrs._updateColumnConditions(this.column.field, filterCondition);\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\nimport { Directive, Input, Injector, ComponentFactoryResolver, ViewContainerRef, OnInit, ComponentRef, Renderer2 } from '@angular/core';\r\nimport { DataColumn, ColumnFilter, ColumnFilterType } from '@farris/ui-datagrid';\r\nimport { FilterTextboxComponent } from './filter-editors/filter-row-textbox.component';\r\nimport { FilterCheckboxComponent } from './filter-editors/filter-row-checkbox.component';\r\n\r\n@Directive({\r\n    selector: '[filter-cell-editor]',\r\n})\r\nexport class FilterCellEditorDirective implements OnInit {\r\n    @Input() column: DataColumn;\r\n    @Input() group: FormGroup;\r\n    @Input() gridInstance: any;\r\n    @Input() delay = 300;\r\n    componentRef: ComponentRef<any>;\r\n    constructor(\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private container: ViewContainerRef,\r\n        private render: Renderer2) {}\r\n\r\n    ngOnInit() {\r\n        this.createFilterEditor();\r\n    }\r\n\r\n    private createFilterEditor() {\r\n\r\n        if (this.column.filter) {\r\n            const columnFilter = this.column.filter as ColumnFilter;\r\n            columnFilter.type = columnFilter.type || ColumnFilterType.string;\r\n            let constructorCmp: any = FilterTextboxComponent;\r\n            switch (columnFilter.type) {\r\n                case ColumnFilterType.boolean:\r\n                    constructorCmp = FilterCheckboxComponent;\r\n                    break;\r\n                // case ColumnFilterType.enum:\r\n                //     constructorCmp = FilterEnumComponent;\r\n                //     break;\r\n            }\r\n            const factory = this.resolver.resolveComponentFactory( constructorCmp );\r\n            this.componentRef = this.container.createComponent(factory);\r\n            this.componentRef.instance.column = this.column;\r\n            this.componentRef.instance.group = this.group;\r\n            this.componentRef.instance.gridInstance = this.gridInstance;\r\n            this.componentRef.instance.disabled = columnFilter.type >= 3;\r\n            this.componentRef.instance.delay = this.delay;\r\n\r\n            if (this.gridInstance.conditions && Object.keys(this.gridInstance.conditions).length ) {\r\n                setTimeout(() => {\r\n                    this.componentRef.instance.initFilter(this.gridInstance.conditions[this.column.field]);\r\n                }, 100);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    clearValue() {\r\n        if (this.componentRef) {\r\n            this.componentRef.instance.clearValue();\r\n        }\r\n    }\r\n\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { DatagridFilterRowService } from './datagrid-filter-row.service';\r\nimport { Component, OnInit, Input, AfterViewInit, ElementRef, Renderer2,\r\n    NgZone, Output, EventEmitter, OnDestroy, Injector, ViewEncapsulation, ViewChildren, QueryList, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { debounce, debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { FilterCellEditorDirective } from './datagrid-filter-cell-editor.directive';\r\n\r\n@Component({\r\n    selector: '[filter-row]',\r\n    templateUrl: './datagrid-filter-row.component.html',\r\n    styleUrls: [\r\n        './datagrid-filter-row.scss'\r\n    ],\r\n    providers: [\r\n        DatagridFilterRowService\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FilterRowComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() fixedLeft = false;\r\n    @Input() fixedRight = false;\r\n    @Input() columns: DataColumn[];\r\n    /** datagrid Instance */\r\n    @Input() gridInstance: DatagridComponent;\r\n\r\n    @Input() delay = 300;\r\n\r\n    @Output() conditionChange = new EventEmitter();\r\n\r\n    @ViewChildren(FilterCellEditorDirective) editors: QueryList<FilterCellEditorDirective>;\r\n\r\n    filterRowConditionsScribe: Subscription;\r\n    form = new FormGroup({});\r\n    tr: HTMLTableRowElement;\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private el: ElementRef,\r\n        private ngzone: NgZone,\r\n        private cd: ChangeDetectorRef,\r\n        public dfrs: DatagridFilterRowService,\r\n        private render: Renderer2,\r\n        private inject: Injector) {\r\n            this.filterRowConditionsScribe = this.dfrs.filterRowConditions$.subscribe(ccs => {\r\n                this.conditionChange.emit(ccs);\r\n            });\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.createControl();\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.render.listen('document', 'click', () => {\r\n                this.dfrs.closeFilterPanel();\r\n            });\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const nativeEl = this.el.nativeElement;\r\n        this.tr = nativeEl.parentElement;\r\n        nativeEl.querySelectorAll('td').forEach(n => {\r\n            this.tr.append(n);\r\n        });\r\n        nativeEl.style.display = 'none';\r\n\r\n        this.dfrs.gridInstance = this.gridInstance;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.filterRowConditionsScribe) {\r\n            this.filterRowConditionsScribe.unsubscribe();\r\n            this.filterRowConditionsScribe = null;\r\n        }\r\n        if (this.tr) {\r\n            const tds = this.tr.querySelectorAll('td');\r\n            if (tds && tds.length) {\r\n                tds.forEach(a => {\r\n                    if (!a.classList.contains('f-datagrid-header-checkbox') && !a.classList.contains('f-datagrid-cell-rownumber')) {\r\n                        this.tr.removeChild(a);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    createControl() {\r\n        const group = this.fb.group({});\r\n        this.columns.forEach(col => {\r\n            if (col.colspan) {return; }\r\n            const control = this.fb.control('');\r\n            group.addControl(col.field, control);\r\n        });\r\n        return group;\r\n    }\r\n\r\n    clearFilterValue(emitEvent = true) {\r\n        // this.form.reset();\r\n        this.editors.forEach(c => {\r\n            c.clearValue();\r\n        });\r\n\r\n        this.dfrs.clear(emitEvent);\r\n    }\r\n\r\n    removeField(field: string, opts?: { emitEvent: boolean }) {\r\n        this.dfrs.removeFilterField(field, opts);\r\n    }\r\n}\r\n","import { NgForm, FormControl, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ColumnFilterType } from '@farris/ui-datagrid';\r\nimport { Subscription, of, merge } from 'rxjs';\r\n\r\nimport { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild,\r\n    Output, EventEmitter, Injector, OnDestroy, ChangeDetectorRef, AfterViewInit } from '@angular/core';\r\nimport { FilterRowOperator,  FilterCondition, FilterOperator } from '../operations/operators';\r\n\r\n\r\n@Component({\r\n    selector: 'condition-editor',\r\n    templateUrl: './condition-editor.component.html',\r\n    styles: [\r\n        `\r\n        .no-number-button{-moz-appearance: textfield;}\r\n        .no-number-button::-webkit-outer-spin-button, .no-number-button::-webkit-inner-spin-button {\r\n              -webkit-appearance: none!important;\r\n        }`\r\n    ]\r\n})\r\nexport class ConditionEditorComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n    @Input() operators: FilterRowOperator[];\r\n    @Input() datatype: ColumnFilterType = ColumnFilterType.string;\r\n\r\n    @Input() condition: FilterCondition = {\r\n        operator1: 0,\r\n        value1: '',\r\n        relation: '',\r\n        operator2: 0,\r\n        value2: ''\r\n    };\r\n\r\n    @Input() filterOptions: any = {};\r\n\r\n    @Output() conditionChange = new EventEmitter();\r\n\r\n    @Output() panelHeightChange =  new EventEmitter();\r\n\r\n    emptyCondition =  {...this.condition};\r\n\r\n    formValueChangesSubscription: Subscription = null;\r\n    originalCondition: FilterCondition = {};\r\n\r\n    form: FormGroup = this.fb.group({\r\n        operator1: new FormControl(0),\r\n        value1: new FormControl(''),\r\n        relation: new FormControl(''),\r\n        operator2: new FormControl(0),\r\n        value2: new FormControl(''),\r\n    });\r\n\r\n    private emptyConditonString = JSON.stringify(this.emptyCondition);\r\n\r\n    constructor(private inject: Injector, private cd: ChangeDetectorRef, private fb: FormBuilder) { }\r\n\r\n    ngOnInit(): void {\r\n        this.originalCondition = Object.assign({}, this.condition);\r\n        this.form.patchValue(this.condition);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.formValueChangesSubscription) {\r\n            this.formValueChangesSubscription.unsubscribe();\r\n            this.formValueChangesSubscription = null;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n\r\n    private emitConditionChange(v: any) {\r\n        this.condition = v;\r\n        const filter = this.checkFilterOperator();\r\n        this.conditionChange.emit(filter);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.form.valueChanges.subscribe((v: FilterCondition) => {\r\n            this.condition = Object.assign(this.emptyCondition, this.condition);\r\n\r\n            if (v.operator1 > 1000) {\r\n                this.emitConditionChange(v);\r\n                return;\r\n            }\r\n\r\n            const currentFilterJSON = JSON.stringify(v);\r\n            if (this.emptyConditonString === currentFilterJSON) {\r\n                this.emitConditionChange(v);\r\n            } else {\r\n                // if (this.condition.value1 != v.value1 || (this.condition.value2 !== undefined && this.condition.value2 != v.value2)) {\r\n                if (JSON.stringify(this.condition) !== currentFilterJSON) {\r\n                    this.emitConditionChange(v);\r\n                    if (v.value2 == '') {\r\n                        this.emitPanelHeightChanged();\r\n                    }\r\n                } else {\r\n                    if ((this.condition.operator1 != v.operator1) || \r\n                        (this.condition.relation != v.relation  || this.condition.operator2 != v.operator2)) {\r\n                        this.emitConditionChange(v);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkFilterOperator() {\r\n        const filter = {...this.condition};\r\n        const op1 = parseInt('' + filter.operator1, 10);\r\n        const f1 = {operator1: filter.operator1, value1: filter.value1};\r\n\r\n        if (op1 === FilterOperator.Empty || op1 === FilterOperator.NotEmpty) {\r\n            filter.value1 = '';\r\n            f1.value1 = '';\r\n        }\r\n\r\n        if ((filter.value1 === '' || filter.value1 === null) && op1 !== FilterOperator.Empty && op1 !== FilterOperator.NotEmpty) {\r\n            return '';\r\n        }\r\n\r\n        if (!filter.relation) {\r\n            return f1;\r\n        } else {\r\n            const op2 = parseInt('' + filter.operator2, 10);\r\n            if (op2 === FilterOperator.Empty || op2 === FilterOperator.NotEmpty) {\r\n                filter.value2 = '';\r\n                return filter;\r\n            } else {\r\n                if (filter.value2 == null || filter.value2 == undefined || filter.value2 === '') {\r\n                    return f1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return filter;\r\n    }\r\n\r\n    chooseRelation(relation: 'and' | 'or', $event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const emit = !this.form.get('relation').value;\r\n        this.form.get('relation').setValue(relation);\r\n        this.condition.relation = relation;\r\n        if (this.condition.operator2 === undefined) {\r\n            this.condition.operator2 = 0;\r\n        }\r\n\r\n        if (emit) {\r\n            this.emitPanelHeightChanged();\r\n        }\r\n        \r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    resetFilters($event: MouseEvent) {\r\n        if (this.emptyConditonString !== JSON.stringify(this.condition)) {\r\n            this.condition = JSON.parse(this.emptyConditonString);\r\n            this.form.reset(this.condition);\r\n\r\n            this.emitPanelHeightChanged();\r\n        }\r\n    }\r\n\r\n    private emitPanelHeightChanged() {\r\n        if (this['panelHeightChangedTimer']) {\r\n            clearTimeout(this['panelHeightChangedTimer']);\r\n        }\r\n        this['panelHeightChangedTimer'] = setTimeout(() => {\r\n            this.panelHeightChange.emit();\r\n        }, 20);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter,\r\n    AfterViewInit, Injector, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { DatalistComponent } from '@farris/ui-datalist';\r\nimport { FilterCondition, FilterOperator, FilterConditionValue } from './../operations/operators';\r\nimport { DatagridFilterRowService } from './../datagrid-filter-row.service';\r\n\r\n@Component({\r\n    selector: 'filter-datalist',\r\n    template: `\r\n    <ul class=\"list-group filter-condition\">\r\n        <li class=\"list-group-item border-0 border-b1\" *ngIf=\"showFilter\">\r\n            <input class=\"form-control form-control-sm\" [ngModel]=\"filterKeyWord\"\r\n                (input)=\"onTextChange($event)\" type=\"text\" >\r\n        </li>\r\n        <li class=\"list-group-item datalist border-0 border-b1\">\r\n            <farris-datalist\r\n                #dl\r\n                [data]=\"data\"\r\n                [idField]=\"idField\"\r\n                [height]=\"'auto'\"\r\n                [fit]=\"false\"\r\n                [multiSelect]=\"true\"\r\n                [selectedValues]=\"selectedValues\"\r\n                [valueField]=\"valueField\"\r\n                [textField]=\"textField\"\r\n                (selected)=\"onSelect($event)\"\r\n                (unSelected)=\"onUnSelected($event)\">\r\n            </farris-datalist>\r\n        </li>\r\n        <li class=\"list-group-item border-0\" style=\"border-bottom: 1px solid #dde2eb;\">\r\n            <div class=\"d-flex\">\r\n                <div class=\"custom-control custom-checkbox\" style=\"padding-left: 3px;\">\r\n                    <input id=\"filter-datalist-checkall\" #chkall type=\"checkbox\" class=\"custom-control-input\" [ngModel]=\"checked\" (ngModelChange)=\"checkAllHandler($event)\">\r\n                    <label class=\"custom-control-label\" for=\"filter-datalist-checkall\" >{{ 'datagrid.filter.checkAll' | locale }}</label>\r\n                </div>\r\n                <div class=\"ml-auto\"><button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"restFilter()\">\r\n                {{ 'datagrid.filter.reset' | locale }}</button></div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FilterDatalistComponent implements OnInit, AfterViewInit {\r\n    @Input() valueField: string;\r\n    @Input() textField: string;\r\n    @Input() idField: string;\r\n    @Input() selectedValues: string;\r\n    @Input() data = [];\r\n    @Input() showFilter = false;\r\n    @Input() filterKeyWord = '';\r\n\r\n    @ViewChild('chkall') chkall: ElementRef;\r\n    @ViewChild('dl') dataListInstance: DatalistComponent;\r\n\r\n    @Output() valueChange = new EventEmitter();\r\n\r\n    checked = false;\r\n    private originalData = [];\r\n\r\n    constructor(private inject: Injector, private cd: ChangeDetectorRef, private dfrs: DatagridFilterRowService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.originalData = cloneDeep(this.data);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.selectedValues === undefined) {\r\n            setTimeout(() => {\r\n                this.checkAll(true, false);\r\n                this.checked = true;\r\n                this.cd.detectChanges();\r\n            });\r\n        }\r\n\r\n        this.updateCheckboxState();\r\n    }\r\n\r\n    private checkAll(checked = true, emit = true) {\r\n        if (checked) {\r\n            this.dataListInstance.selectAll();\r\n            this.selectedValues = this.originalData.map(n => n[this.valueField]).join(',');\r\n        } else {\r\n            this.dataListInstance.unSelectAll();\r\n            this.selectedValues = '';\r\n        }\r\n        if (emit) {\r\n            this.buildCondition();\r\n        }\r\n    }\r\n\r\n    checkAllHandler($event) {\r\n        this.checked = $event;\r\n        this.chkall.nativeElement.indeterminate = false;\r\n        this.checkAll(this.checked);\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    onSelect($event) {\r\n        this.updateSelectedValues($event);\r\n        this.updateCheckboxState();\r\n        this.buildCondition();\r\n    }\r\n\r\n    private updateCheckboxState() {\r\n        if (this.selectedValues === undefined) {\r\n            return;\r\n        }\r\n        if ( this.selectedValues.split(',').length === this.originalData.length) {\r\n            this.checked = true;\r\n            this.chkall.nativeElement.indeterminate = false;\r\n        } else {\r\n            this.checked = false;\r\n            this.chkall.nativeElement.indeterminate = true;\r\n        }\r\n    }\r\n\r\n    onUnSelected($event) {\r\n        this.updateSelectedValues($event, false);\r\n        this.checked = false;\r\n        this.chkall.nativeElement.indeterminate = !!this.selectedValues;\r\n        this.buildCondition();\r\n    }\r\n\r\n    private buildCondition() {\r\n        const values = this.selectedValues.split(',');\r\n        if (this.selectedValues) {\r\n            if (values.length === this.originalData.length) {\r\n                this.valueChange.emit(FilterConditionValue.All);\r\n                return;\r\n            }\r\n            const condition: FilterCondition = {\r\n                operator1: FilterOperator.In,\r\n                value1: values\r\n            };\r\n            this.valueChange.emit(condition);\r\n        } else {\r\n            // this.valueChange.emit({ operator1: FilterOperator.Equal, value1: [] });\r\n            // æ²¡æéæ©ç¸å½äºæ­¤æ¡ä»¶æ æ\r\n            this.valueChange.emit(FilterConditionValue.All);\r\n        }\r\n    }\r\n\r\n    updateSelectedValues($event, selected = true) {\r\n        if ($event) {\r\n            const val = $event.data[this.valueField];\r\n            let valArr = this.selectedValues ? this.selectedValues.split(',') : [];\r\n            if (selected) {\r\n                if (valArr.findIndex( n => n == val) === -1) {\r\n                    valArr.push(val);\r\n                }\r\n            } else {\r\n                valArr = valArr.filter(n => n != val);\r\n            }\r\n\r\n            this.selectedValues = valArr.join(',');\r\n\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onTextChange($event) {\r\n        const val = $event.target[this.valueField];\r\n        this.filterKeyWord = val;\r\n        this.changeDataSource();\r\n    }\r\n\r\n    private changeDataSource() {\r\n        if (this.filterKeyWord) {\r\n            this.data = this.originalData.filter(n => {\r\n                return n[this.textField].indexOf(this.filterKeyWord) > -1;\r\n            });\r\n        } else {\r\n            this.data = cloneDeep(this.originalData);\r\n        }\r\n    }\r\n\r\n    restFilter() {\r\n        this.filterKeyWord = '';\r\n        this.changeDataSource();\r\n        this.checkAll();\r\n        this.checked = true;\r\n        this.chkall.nativeElement.indeterminate = false;\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'filter-select',\r\n    template: `\r\n    <select class=\"form-control form-control-sm\">\r\n        <option>Small select</option>\r\n    </select>\r\n    `\r\n})\r\nexport class FilterSelectComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { NgModule, Provider, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TimePickerModule } from '@farris/ui-time-picker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { DatagridModule, GRID_FILTER_ROW } from '@farris/ui-datagrid';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\n\r\nimport { FilterRowComponent } from './datagrid-filter-row.component';\r\nimport { FilterCellEditorDirective } from './datagrid-filter-cell-editor.directive';\r\nimport { FilterTextboxComponent } from './filter-editors/filter-row-textbox.component';\r\nimport { FilterRowPanelComponent } from './filter-editors/filter-row-panel.component';\r\nimport { FilterCheckboxComponent } from './filter-editors/filter-row-checkbox.component';\r\nimport { ConditionEditorComponent } from './filter-editors/condition-editor.component';\r\nimport { FilterDatalistComponent } from './filter-editors/filter-datalist.component';\r\nimport { FilterRowEditorComponent } from './filter-editors/filter-row-editor.component';\r\nimport { FilterSelectComponent } from './filter-editors/filter-row-select.component';\r\n\r\n\r\nexport const FilterRowProvider = { provide: GRID_FILTER_ROW, useValue: FilterRowComponent  };\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FilterRowComponent,\r\n        FilterCellEditorDirective,\r\n        FilterTextboxComponent,\r\n        FilterCheckboxComponent,\r\n        FilterRowPanelComponent,\r\n        FilterDatalistComponent,\r\n        FilterRowEditorComponent,\r\n        FilterSelectComponent,\r\n        ConditionEditorComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        DatagridModule,\r\n        FarrisDatePickerModule,\r\n        NumberSpinnerModule,\r\n        DatalistModule,\r\n        TimePickerModule,\r\n        LocaleModule.forRoot(),\r\n        FarrisFormsModule,\r\n        FarrisCommonModule\r\n    ],\r\n    entryComponents: [\r\n        FilterRowComponent,\r\n        FilterTextboxComponent,\r\n        FilterCheckboxComponent,\r\n        ConditionEditorComponent,\r\n        FilterDatalistComponent,\r\n        FilterRowPanelComponent,\r\n        FilterRowEditorComponent,\r\n        FilterSelectComponent\r\n    ],\r\n    exports: [\r\n        FilterRowComponent\r\n    ]\r\n})\r\nexport class DatagridFilterRowModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridFilterRowModule,\r\n            providers: [\r\n                { provide: GRID_FILTER_ROW, useValue: FilterRowComponent  }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["Subject","EventEmitter","ColumnFilterType","DatagridUtils","Injectable","NgZone","CommonUtils","OverLayHiddenService","Component","ElementRef","Renderer2","Injector","Input","Output","tslib_1.__extends","filter","delay","ComponentFactoryResolver","ApplicationRef","ChangeDetectorRef","LocaleService","ViewChild","Directive","ViewContainerRef","FormGroup","ViewEncapsulation","FormBuilder","ViewChildren","FormControl","cloneDeep","GRID_FILTER_ROW","NgModule","CommonModule","FormsModule","ReactiveFormsModule","DatagridModule","FarrisDatePickerModule","NumberSpinnerModule","DatalistModule","TimePickerModule","LocaleModule","FarrisFormsModule","FarrisCommonModule"],"mappings":"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"}