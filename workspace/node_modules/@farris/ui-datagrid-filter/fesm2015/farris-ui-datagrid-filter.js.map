{"version":3,"file":"farris-ui-datagrid-filter.js","sources":["ng://@farris/ui-datagrid-filter/lib/operations/operators.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-row.service.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-panel.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-editor.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-textbox.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-checkbox.component.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-cell-editor.directive.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-row.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/condition-editor.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-datalist.component.ts","ng://@farris/ui-datagrid-filter/lib/filter-editors/filter-row-select.component.ts","ng://@farris/ui-datagrid-filter/lib/datagrid-filter-row.module.ts"],"sourcesContent":["\r\n/**\r\n * æå¡å¨ç«¯æ¯ææ¯è¾æä½\r\n *  Equal(0),\r\n    NotEqual(1),\r\n    Greater(2),\r\n    GreaterOrEqual(3),\r\n    Less(4),\r\n    LessOrEqual(5),\r\n    Like(6),\r\n    LikeStartWith(7),\r\n    LikeEndWith(8),\r\n    NotLike(9),\r\n    NotLikeStartWith(10),\r\n    NotLikeEndWith(11),\r\n    Is(12),\r\n    IsNot(13),\r\n    In(14),\r\n    NotIn(15),\r\n    LikeIgnoreCase(16);\r\n */\r\n\r\nexport enum FilterOperator {\r\n    Equal = 0,\r\n    NotEqual = 1,\r\n    Greater = 2,\r\n    GreaterOrEqual = 3,\r\n    Less = 4,\r\n    LessOrEqual = 5,\r\n    Contains = 6,\r\n    NotContains = 9,\r\n    In = 14,\r\n    NotIn = 15,\r\n    Empty = 1001,\r\n    NotEmpty = 1002,\r\n    Null = 1003,\r\n    NotNull = 1004\r\n}\r\n\r\nexport enum FilterConditionValue {\r\n    All = '',\r\n    Empty = 'null'\r\n}\r\n\r\nexport interface FilterEnumSetting {\r\n    valueField?: string;\r\n    textField?: string;\r\n    data?: any[];\r\n    idField?: string;\r\n}\r\n\r\nexport interface FilterRowOperator {\r\n    code: FilterOperator;\r\n    label: string;\r\n    isDefault: boolean;\r\n}\r\n\r\nexport interface FilterCondition {\r\n    operator1?: FilterOperator;\r\n    value1?: any;\r\n    relation?: 'and' | 'or' | '';\r\n    operator2?: FilterOperator;\r\n    value2?: any;\r\n}\r\n\r\nexport type ColumnConditionType = FilterCondition | FilterConditionValue | string;\r\n\r\nexport interface ColumnFilterCondition {\r\n    [fieldName: string]: ColumnConditionType;\r\n}\r\n\r\n\r\nexport interface FilterData {\r\n    filterField: string;  value: string; lbracket?: string; rbracket?: string;\r\n    relation?: any; compare?: any;\r\n}\r\n\r\nexport const AllFilterOperator = {\r\n    [FilterOperator.Equal]: 'ç­äº',\r\n    [FilterOperator.NotEqual]: 'ä¸ç­äº' ,\r\n    [FilterOperator.Greater]: 'å¤§äº' ,\r\n    [FilterOperator.GreaterOrEqual]: 'å¤§äºç­äº' ,\r\n    [FilterOperator.Less]: 'å°äº',\r\n    [FilterOperator.LessOrEqual]: 'å°äºç­äº',\r\n    [FilterOperator.Contains]: 'åå«',\r\n    [FilterOperator.NotContains]: 'ä¸åå«',\r\n    [FilterOperator.NotEmpty]: 'ä¸ä¸ºç©º',\r\n    [FilterOperator.Empty]: 'ç©º',\r\n};\r\n\r\n/** ææ¬æä½ç¬¦ */\r\nexport const TextFilterOperators: FilterRowOperator[] = [\r\n    { code: FilterOperator.Empty, label: AllFilterOperator[FilterOperator.Empty], isDefault: false },\r\n    { code: FilterOperator.NotEmpty, label: AllFilterOperator[FilterOperator.NotEmpty], isDefault: false },\r\n    { code: FilterOperator.Equal, label: AllFilterOperator[FilterOperator.Equal], isDefault: false },\r\n    { code: FilterOperator.NotEqual, label: AllFilterOperator[FilterOperator.NotEqual] , isDefault: false},\r\n    { code: FilterOperator.Contains, label: AllFilterOperator[FilterOperator.Contains] , isDefault: true},\r\n    { code: FilterOperator.NotContains, label: AllFilterOperator[FilterOperator.NotContains] , isDefault: false}\r\n];\r\n/** æ¥æææ°å­æä½ç¬¦ */\r\nexport const NumberOrDateFilterOperators: FilterRowOperator[] = [\r\n    { code: FilterOperator.Empty, label: AllFilterOperator[FilterOperator.Empty], isDefault: false },\r\n    { code: FilterOperator.NotEmpty, label: AllFilterOperator[FilterOperator.NotEmpty], isDefault: false },\r\n    { code: FilterOperator.Equal, label: AllFilterOperator[FilterOperator.Equal], isDefault: false },\r\n    { code: FilterOperator.NotEqual, label: AllFilterOperator[FilterOperator.NotEqual] , isDefault: false},\r\n    { code: FilterOperator.Greater, label: AllFilterOperator[FilterOperator.Greater] , isDefault: false},\r\n    { code: FilterOperator.GreaterOrEqual, label: AllFilterOperator[FilterOperator.GreaterOrEqual] , isDefault: false},\r\n    { code: FilterOperator.Less, label: AllFilterOperator[FilterOperator.Less] , isDefault: false},\r\n    { code: FilterOperator.LessOrEqual, label: AllFilterOperator[FilterOperator.LessOrEqual] , isDefault: false}\r\n];\r\n","import { Injectable, ComponentRef, EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {ColumnFilterType, DataColumn, DatagridUtils, DatagridComponent, ColumnFilter } from '@farris/ui-datagrid';\r\n\r\nimport { ColumnFilterCondition, FilterCondition, FilterConditionValue, AllFilterOperator,\r\n    FilterEnumSetting, FilterOperator, FilterData } from './operations/operators';\r\nimport { FilterRowPanelComponent } from './filter-editors/filter-row-panel.component';\r\n\r\n@Injectable()\r\nexport class DatagridFilterRowService {\r\n    private columnConditionSubject = new Subject<FilterData[] | any>();\r\n    filterRowConditions$ = this.columnConditionSubject.asObservable();\r\n    columnConditions: ColumnFilterCondition = {};\r\n    currentFilterPanel: ComponentRef<FilterRowPanelComponent>;\r\n\r\n    gridInstance: DatagridComponent;\r\n\r\n    filterTextboxChanged = new EventEmitter();\r\n    removeField = new EventEmitter<string>();\r\n\r\n    constructor() { }\r\n\r\n    setFilterPanel(frp: ComponentRef<FilterRowPanelComponent>) {\r\n        this.currentFilterPanel = frp;\r\n    }\r\n\r\n    hasFilterPanel() {\r\n        return !!this.currentFilterPanel;\r\n    }\r\n\r\n    closeFilterPanel() {\r\n        if (this.hasFilterPanel()) {\r\n            if (this.currentFilterPanel.instance.documentClickHandle) {\r\n                this.currentFilterPanel.instance.documentClickHandle();\r\n            }\r\n            document.body.removeChild(this.currentFilterPanel.location.nativeElement);\r\n            this.currentFilterPanel.destroy();\r\n            this.currentFilterPanel = null;\r\n\r\n            // document.body.style.overflow = 'auto';\r\n        }\r\n    }\r\n\r\n    clear(emitEvent = true) {\r\n        this.columnConditions = {};\r\n        if (emitEvent) {\r\n            this.columnConditionSubject.next({});\r\n        }\r\n    }\r\n\r\n    removeFilterField(field: string, opts?: {emitEvent: boolean}) {\r\n        if (this.columnConditions) {\r\n            delete this.columnConditions[field];\r\n            this.removeField.emit(field);\r\n            if (!opts || (opts && opts.emitEvent)) {\r\n                this.emitColumnConditionChanged(this.columnConditions, field);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateColumnConditions(field: string, colCondition: FilterCondition | FilterConditionValue ) {\r\n        const currentCondition = this.columnConditions[field];\r\n        if (!currentCondition) {\r\n            this.columnConditions = Object.assign(this.columnConditions, {[field]: colCondition});\r\n        } else {\r\n            if (JSON.stringify(currentCondition) !== JSON.stringify(colCondition)) {\r\n                this.columnConditions = Object.assign(this.columnConditions, {[field]: colCondition});\r\n            }\r\n        }\r\n        // å¼ä¸º ââ ï¼åä»£è¡¨çä¸åä¸æ¥è¯¢\r\n        Object.keys(this.columnConditions).forEach(k => {\r\n            if (!this.columnConditions[k]) {\r\n                // delete this.columnConditions[k];\r\n                this.columnConditions[k] = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    updateColumnConditions(field: string, colCondition: FilterCondition | FilterConditionValue ) {\r\n        this._updateColumnConditions(field, colCondition);\r\n        this.emitColumnConditionChanged(this.columnConditions);\r\n    }\r\n\r\n    private emitColumnConditionChanged(conditions, removedFields?: string) {\r\n        // const farr = this.gridInstance.remoteFilter ? this.convert2FilterArray(this.columnConditions) : this.columnConditions;\r\n        this.columnConditionSubject.next({conditions, removedFields});\r\n    }\r\n\r\n    // è·åè¿æ»¤è¡æ¾ç¤ºææ¬\r\n    condition2string(column: DataColumn, condition: FilterCondition) {\r\n        if (!condition || typeof condition === 'string') {\r\n            return '';\r\n        }\r\n\r\n        const andText = this.gridInstance.localeService.getValue('datagrid.filter.and');\r\n        const orText = this.gridInstance.localeService.getValue('datagrid.filter.or');\r\n\r\n        const getRelationLabel = (r) => {\r\n            if (r === 'and') {\r\n                return andText;\r\n            } else if (r === 'or') {\r\n                return orText;\r\n            } else {\r\n                return  '';\r\n            }\r\n        };\r\n\r\n        let filterPreViewString = '';\r\n        if (column.filter.type === ColumnFilterType.fromdata) {\r\n            filterPreViewString = `(${condition.value1.length})`;\r\n            if (condition.value1) {\r\n                filterPreViewString += ` ${condition.value1.join(',')}`;\r\n            }\r\n        } else if (column.filter.type === ColumnFilterType.enum) {\r\n            const enumOpts = this.getEnumOptions(column) as FilterEnumSetting;\r\n            const { valueField, textField, data } = enumOpts;\r\n            filterPreViewString = `(${condition.value1.length})`;\r\n            if (condition.value1) {\r\n                filterPreViewString += ` ${condition.value1.map(v => {\r\n                    const enumItem = data.find(d => d[valueField] == v);\r\n                    return enumItem[textField];\r\n                }).join(',')}`;\r\n            }\r\n        } else {\r\n            if (condition) {\r\n                const operator1Label = this.getOperatorLabel(condition.operator1);\r\n                if ( !this.isEmpty(condition.value1)) {\r\n                    filterPreViewString = `${operator1Label} ${condition.value1}`;\r\n                    const operator2Label = this.getOperatorLabel(condition.operator2);\r\n                    if (!this.isEmpty(condition.value2)) {\r\n                        filterPreViewString += ` ${getRelationLabel(condition.relation)} ${operator2Label} ${condition.value2}`;\r\n                    } else {\r\n                        if (condition.operator2 !== undefined) {\r\n                            const op2 = parseInt('' + condition.operator2, 10);\r\n                            if (op2 === FilterOperator.Empty || op2 === FilterOperator.NotEmpty) {\r\n                                filterPreViewString += ` ${getRelationLabel(condition.relation)} ${operator2Label}`;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    const op1 = parseInt('' + condition.operator1, 10);\r\n                    if (op1 === FilterOperator.Empty || op1 === FilterOperator.NotEmpty) {\r\n                        filterPreViewString = `${operator1Label}`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return filterPreViewString;\r\n    }\r\n\r\n    private isEmpty(v) {\r\n        return v === '' || v === undefined || v === null;\r\n    }\r\n\r\n\r\n    getEnumOptions(column: DataColumn) {\r\n        const colFilter = column.filter as ColumnFilter;\r\n        const datatype = colFilter.type;\r\n        let enumSetting = null;\r\n        if (datatype === ColumnFilterType.enum) {\r\n            const fmt = column.formatter as any;\r\n            if (fmt) {\r\n                enumSetting = fmt.options;\r\n            } else {\r\n                if (colFilter.options) {\r\n                    enumSetting = colFilter.options;\r\n                }\r\n            }\r\n        } else { // enum æ°æ®æºæ¥èªgrid æ°æ®åè¡¨\r\n            const columnData: string[] = this.gridInstance.dfs.getData(true).map(n => {\r\n                return DatagridUtils.getValue(column.field, n);\r\n            });\r\n            // å»é¤éå¤\r\n            const enumData = Array.from(new Set(columnData)).map(n => {\r\n                return {\r\n                    value: n, label: n\r\n                };\r\n            });\r\n            enumSetting = {\r\n                valueField: 'value', textField: 'label', data: enumData, idField: 'value'\r\n            };\r\n        }\r\n\r\n        return enumSetting;\r\n\r\n    }\r\n\r\n    // è·åæä½ç¬¦æ ç­¾\r\n    getOperatorLabel(code: any) {\r\n        const strOper = FilterOperator[code];\r\n        if (strOper) {\r\n            const operName = strOper[0].toLowerCase() + strOper.substr(1);\r\n            const key = `datagrid.filter.operators.${operName}`;\r\n            return this.gridInstance.localeService.getValue(key);\r\n        }\r\n        return '';\r\n    }\r\n\r\n}\r\n","import { Component, Input, NgZone, OnInit, ElementRef,\r\n            Renderer2, Output, EventEmitter, Injector, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DataColumn, ColumnFilterType } from '@farris/ui-datagrid';\r\n\r\nimport { DatagridFilterRowService } from '../datagrid-filter-row.service';\r\nimport { FilterEnumSetting, FilterCondition, FilterRowOperator } from '../operations/operators';\r\nimport { CommonUtils, OverLayHiddenService } from '@farris/ui-common';\r\n\r\n@Component({\r\n    selector: 'filter-row-panel',\r\n    templateUrl: './filter-row-panel.compoent.html'\r\n})\r\nexport class FilterRowPanelComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() width = 240;\r\n    @Input() height = 250;\r\n\r\n    @Input() column: DataColumn;\r\n    @Input() operators: FilterRowOperator[];\r\n\r\n    @Input() datatype = ColumnFilterType.string;\r\n\r\n    @Output() conditionChange = new EventEmitter();\r\n\r\n    @Output() panelHeightChange = new EventEmitter();\r\n\r\n    gridInstance = null;\r\n    enumSetting: FilterEnumSetting = {};\r\n    selectedValues: string;\r\n\r\n    condition: FilterCondition = {\r\n        operator1: 1,\r\n        value1: '',\r\n        relation: '',\r\n        operator2: 1,\r\n        value2: ''\r\n    };\r\n\r\n    documentClickHandle = null;\r\n\r\n    target: any;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    private zone: NgZone = null;\r\n    private commonUtils: CommonUtils;\r\n    private overlaySer: OverLayHiddenService;\r\n    constructor(\r\n        private ngzone: NgZone, private el: ElementRef,\r\n        private render: Renderer2, public dfrs: DatagridFilterRowService,\r\n        private inject: Injector) {\r\n        this.zone = this.inject.get(NgZone);\r\n        this.commonUtils = this.inject.get(CommonUtils, new CommonUtils());\r\n        this.overlaySer =  this.inject.get(OverLayHiddenService, new OverLayHiddenService());\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.ngzone.runOutsideAngular( () =>  {\r\n            this.render.listen(this.el.nativeElement, 'click',  (e: MouseEvent) => {\r\n                e.stopPropagation();\r\n                return false;\r\n            });\r\n        });\r\n\r\n        this.initEnumSetting();\r\n\r\n        // this.documentClickHandle = this.render.listen(document, 'click', (event) => {\r\n        //     this.close(event);\r\n        // });\r\n\r\n        this.overlaySer.registerMouseEvent(this.el.nativeElement, (e) => {\r\n            const tar = e.target as any;\r\n            if(tar && tar.closest('.overlay-container')) {\r\n                return;\r\n            }\r\n\r\n            if (document.body.className.indexOf('modal-open') > -1) {\r\n                return;\r\n            }\r\n\r\n            if (this.el.nativeElement.contains(e.target)) {\r\n                return;\r\n            }\r\n            this.close(e)\r\n        })\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.target) {\r\n            this.resetPanelPosition();\r\n\r\n            const panelDiv = this.el.nativeElement.querySelector('div');\r\n            panelDiv.style.transition =  'top 0.2s ease 0.05s';\r\n\r\n\r\n            const zindex = this.commonUtils.getFloatingLayerIndex();\r\n            panelDiv.style.zIndex = zindex;\r\n\r\n            const overlayEl = this.el.nativeElement.querySelector('.filter-panel-overlay');\r\n            if (overlayEl) {\r\n                overlayEl.style.zIndex = zindex;\r\n                panelDiv.style.zIndex = zindex + 1;\r\n            }\r\n\r\n            // this.el.nativeElement.style.position = 'fixed';\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.overlaySer) {\r\n            this.overlaySer.destory(this.el.nativeElement);\r\n        }\r\n    }\r\n\r\n    private resetPanelPosition() {\r\n        const panelDiv = this.el.nativeElement.querySelector('div');\r\n        const h = panelDiv.querySelector('.panel-content').clientHeight + 36;\r\n        const rect = this.target.target.parentElement.getBoundingClientRect();\r\n\r\n        const downAreaHeight = window['innerHeight'] - rect.top;\r\n\r\n        if (downAreaHeight < h) {\r\n            const top = window['innerHeight'] - h - 10;\r\n            panelDiv.style.top = top + 'px';\r\n        } else {\r\n            panelDiv.style.top = rect.top + 'px';\r\n        }\r\n    }\r\n\r\n    onPanelHeightChanged() {\r\n        this.resetPanelPosition();\r\n        this.panelHeightChange.emit();\r\n    }\r\n\r\n\r\n    close(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.dfrs.closeFilterPanel();\r\n    }\r\n\r\n\r\n    onValueChange(condition) {\r\n        this.conditionChange.emit(condition);\r\n    }\r\n\r\n    private initEnumSetting() {\r\n        if (this.datatype > 5) {\r\n            this.enumSetting = this.dfrs.getEnumOptions(this.column);\r\n            const currentColumnCondition = this.dfrs.columnConditions[this.column.field] as FilterCondition;\r\n            if (currentColumnCondition && currentColumnCondition.value1) {\r\n                this.selectedValues = currentColumnCondition.value1.join(',');\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { DataColumn } from '@farris/ui-datagrid';\r\nimport { Component, OnInit, Input, Injector } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'filter-editor',\r\n    template: '',\r\n})\r\nexport class FilterRowEditorComponent implements OnInit {\r\n\r\n    @Input() column: DataColumn;\r\n    id = '';\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.id = `filter-row_${this.column.field}`;\r\n    }\r\n\r\n    clearValue() {}\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Component, Input, ComponentFactoryResolver, Injector, ComponentRef, ApplicationRef,\r\n    Renderer2, ViewChild, ElementRef, ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { delay, filter, debounceTime } from 'rxjs/operators';\r\n\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { ColumnFilterType, DatagridComponent } from '@farris/ui-datagrid';\r\n\r\nimport { FilterOperator, FilterCondition,\r\n        TextFilterOperators, NumberOrDateFilterOperators, FilterConditionValue, } from './../operations/operators';\r\nimport { FilterRowPanelComponent } from './filter-row-panel.component';\r\nimport { DatagridFilterRowService } from '../datagrid-filter-row.service';\r\nimport { FilterRowEditorComponent } from './filter-row-editor.component';\r\n\r\n@Component({\r\n    selector: 'filter-textbox',\r\n    template: `\r\n    <div class=\"f-datagrid-header-cell-content f-datagrid-filter-cell d-flex\" style=\"padding-right: 5px\">\r\n        <div class=\"f-datagrid-cell-formgroup farris-group-auto flex-fill\">\r\n            <input *ngIf=\"!disabled\" class=\"form-control\" [attr.type]=\"inputType\" [value]=\"filterStr\"\r\n                (input)=\"onTextValueChange($event)\" #input [class.no-number-button]=\"inputType == 'number'\">\r\n            <input *ngIf=\"disabled\" class=\"form-control\" type=\"text\" [value]=\"filterStr\"\r\n            [attr.title]=\"filterStr\" [disabled]=\"disabled\" [class.filter-editor-disabled]=\"disabled\" >\r\n        </div>\r\n        <div style=\"min-width: 26px; text-align: center; align-items: center;\r\n            display: flex; justify-content: center;\" *ngIf=\"column.filter.enableOperator\">\r\n            <span style=\"cursor: pointer;\" class=\"f-icon f-icon-filter-sm\" (click)=\"show($event)\"></span>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [\r\n        `\r\n        .no-number-button{-moz-appearance: textfield;}\r\n        .no-number-button::-webkit-outer-spin-button, .no-number-button::-webkit-inner-spin-button {\r\n              -webkit-appearance: none!important;\r\n        }`\r\n    ]\r\n})\r\nexport class FilterTextboxComponent extends FilterRowEditorComponent implements OnDestroy {\r\n    @Input() column: any;\r\n    @Input() disabled = false;\r\n    @Input() delay = 300;\r\n    filterStr = '';\r\n\r\n    get inputType() {\r\n        if (this.column.filter.type === ColumnFilterType.number ) {\r\n            return 'number';\r\n        }\r\n        return 'text';\r\n    }\r\n\r\n    gridInstance: DatagridComponent;\r\n\r\n    filterPanelRef: ComponentRef<FilterRowPanelComponent>;\r\n\r\n    filterPanelSubscription: Subscription = null;\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    private zone: NgZone = null;\r\n    private el: ElementRef = null;\r\n\r\n    constructor(\r\n        private cfr: ComponentFactoryResolver, private injector: Injector, private app: ApplicationRef,\r\n        public dfrs: DatagridFilterRowService, private render: Renderer2, private cd: ChangeDetectorRef,\r\n        private localSer: LocaleService\r\n    ) {\r\n        super();\r\n\r\n        this.zone = this.injector.get(NgZone);\r\n        this.el = this.injector.get(ElementRef);\r\n\r\n        this.dfrs.filterTextboxChanged.pipe(\r\n            filter(v => v[this.column.field] !== undefined),\r\n            delay(this.delay)\r\n        ).subscribe((obj: any) => {\r\n            const val = obj[this.column.field];\r\n            if (val !== '') {\r\n                const _condition = { operator1: FilterOperator.Contains, value1: val };\r\n                if (this.column.filter.type === ColumnFilterType.number) {\r\n                    _condition.operator1 = FilterOperator.Equal;\r\n                }\r\n\r\n                this.dfrs.updateColumnConditions(this.column.field, _condition );\r\n            } else {\r\n                this.dfrs.updateColumnConditions(this.column.field, FilterConditionValue.All );\r\n            }\r\n        });\r\n\r\n        this.dfrs.removeField.subscribe(f => {\r\n            if (f === this.column.field) {\r\n                this.clearValue();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.ro) {\r\n            this.ro.disconnect();\r\n            this.ro = null;\r\n        }\r\n    }\r\n\r\n    show(event: MouseEvent) {\r\n        this.close();\r\n        event.stopPropagation();\r\n\r\n        const dgContainerEle = (event.target as any).closest('.f-datagrid');\r\n        if (dgContainerEle) {\r\n            dgContainerEle.addEventListener('click', (e) => {\r\n                this.close();\r\n            });\r\n        }\r\n\r\n        if (!this.dfrs.gridInstance) {\r\n            this.dfrs.gridInstance = this.gridInstance;\r\n        }\r\n\r\n        const cf = this.cfr.resolveComponentFactory(FilterRowPanelComponent);\r\n        this.filterPanelRef = cf.create(this.injector);\r\n        this.app.attachView(this.filterPanelRef.hostView);\r\n        this.filterPanelRef.instance.column = this.column;\r\n        this.filterPanelRef.instance.gridInstance = this.gridInstance;\r\n\r\n        this.initOperators(this.filterPanelRef.instance);\r\n\r\n        if (this.column.filter !== false && this.column.filter !== undefined) {\r\n            this.filterPanelRef.instance.datatype = this.column.filter.type;\r\n\r\n            if (this.column.filter.type === ColumnFilterType.enum ||\r\n                this.column.filter.type === ColumnFilterType.fromdata) {\r\n                this.filterPanelRef.instance.height =  300;\r\n            }\r\n        }\r\n\r\n        const currentColumnCondition = this.dfrs.columnConditions[this.column.field];\r\n        if (currentColumnCondition) {\r\n            this.filterPanelRef.instance.condition = currentColumnCondition as FilterCondition;\r\n        } else {\r\n            this.filterPanelRef.instance.condition = {\r\n                operator1: 0,\r\n                value1: '',\r\n                relation: '',\r\n                operator2: 0,\r\n                value2: ''\r\n            };\r\n            // this.initOperators(this.filterPanelRef.instance);\r\n        }\r\n\r\n        this.filterPanelSubscription = this.filterPanelRef.instance.conditionChange.subscribe((condition: FilterCondition) => {\r\n            if (condition) {\r\n                this.dfrs.updateColumnConditions(this.column.field, condition );\r\n                this.filterStr = this.dfrs.condition2string(this.column, condition);\r\n                if (this.column.filter.type < 2) {\r\n                    this.disabled = !!this.filterStr;\r\n                }\r\n                this.cd.detectChanges();\r\n            } else {\r\n                this.clearValue();\r\n                this.dfrs.updateColumnConditions(this.column.field, FilterConditionValue.All);\r\n            }\r\n        });\r\n\r\n        // document.body.style.overflow = 'hidden';\r\n        document.body.appendChild(this.filterPanelRef.location.nativeElement);\r\n\r\n        this.updateFilterPanelPosition(event.target);\r\n        this.dfrs.setFilterPanel(this.filterPanelRef);\r\n        let { width: dgwidth, height: dgHeight } = dgContainerEle.getBoundingClientRect();\r\n        this['DG_CONTAINER_SIZE'] = { width: dgwidth, height: dgHeight };\r\n\r\n        this.filterPanelRef.instance.panelHeightChange.subscribe(() => {\r\n            let { width, height } = dgContainerEle.getBoundingClientRect();\r\n            this['DG_CONTAINER_SIZE'] = { width , height };\r\n        });\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            if (!this.ro) {\r\n                this.ro = new ResizeObserver((entries, observer) => {\r\n                    if (this['resize_timer_001']) {\r\n                        clearTimeout(this['resize_timer_001']);\r\n                    }\r\n                    this['resize_timer_001'] = setTimeout(() => {\r\n                        let { width, height } = entries[0].target.getBoundingClientRect();\r\n                        const { width: dgWidth, height: dgHeight } = this['DG_CONTAINER_SIZE'];\r\n            \r\n                        if (this.gridInstance.autoHeight) {\r\n                            if (dgWidth == width || dgWidth - width === 7 || dgWidth - width === -7) {\r\n                                return;\r\n                            }\r\n                        }\r\n            \r\n                        if (width !== dgWidth || height !== dgHeight) {\r\n                            this.close();\r\n                        }\r\n                    }, 30);\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.ro.observe(dgContainerEle);\r\n                });\r\n            }\r\n        });\r\n\r\n        this.filterPanelRef.instance.target = event;\r\n        this.filterPanelRef.changeDetectorRef.markForCheck();\r\n        this.filterPanelRef.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    close() {\r\n        this.dfrs.closeFilterPanel();\r\n        if (this.filterPanelSubscription) {\r\n            this.filterPanelSubscription.unsubscribe();\r\n            this.filterPanelSubscription = null;\r\n        }\r\n    }\r\n\r\n    private initOperators(ins: FilterRowPanelComponent) {\r\n        if (this.column.filter.type === ColumnFilterType.string) {\r\n            ins.operators = TextFilterOperators;\r\n            ins.condition.operator1 = FilterOperator.Contains;\r\n            ins.condition.operator2 = FilterOperator.Contains;\r\n        } else if (this.column.filter.type === ColumnFilterType.number || this.column.filter.type === ColumnFilterType.datetime\r\n            || this.column.filter.type === ColumnFilterType.date || this.column.filter.type === ColumnFilterType.time) {\r\n            ins.operators = NumberOrDateFilterOperators;\r\n            ins.condition.operator1 = FilterOperator.Equal;\r\n            ins.condition.operator2 = FilterOperator.Equal;\r\n        }\r\n\r\n        if (ins.operators) {\r\n            ins.operators.forEach(o => {\r\n                o.label = this.dfrs.getOperatorLabel(o.code);\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateFilterPanelPosition(target) {\r\n        if (target) {\r\n            const filterIconParent = target.parentElement;\r\n            if (filterIconParent) {\r\n                const pos = filterIconParent.getBoundingClientRect();\r\n                const tr = target.closest('tr');\r\n                const td = target.closest('td');\r\n\r\n                const headerPos = target.closest('.f-datagrid-header').getBoundingClientRect();\r\n                const panelWidth = this.filterPanelRef.instance.width;\r\n                let left = pos.left;\r\n                if (headerPos.width + headerPos.x < pos.x + panelWidth ) { // this.column.filter.type === ColumnFilterType.enum\r\n                    left = td.getBoundingClientRect().left + td.offsetWidth - panelWidth;\r\n                    this.filterPanelRef.location.nativeElement.querySelector('.panel-icon').style.left = `${panelWidth - 40}px`;\r\n                }\r\n                // const top = pos.top\r\n                const panel = this.filterPanelRef.location.nativeElement.querySelector('div');\r\n                if (panel) {\r\n                    this.render.setStyle(panel, 'top', `${pos.top}px`);\r\n                    this.render.setStyle(panel, 'left', `${left}px`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onTextValueChange($event) {\r\n        const value = $event.target.value;\r\n        this.dfrs.filterTextboxChanged.emit({ [this.column.field]: value });\r\n    }\r\n\r\n    clearValue() {\r\n        this.filterStr = '';\r\n        if (this.input) {\r\n            this.input.nativeElement.value = '';\r\n        }\r\n        if (this.column.filter.type < 2) {\r\n            this.disabled = false;\r\n        }\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    initFilter(condition: any) {\r\n        this.filterStr = this.dfrs.condition2string(this.column, condition);\r\n        this.disabled = !!this.filterStr;\r\n        this.dfrs._updateColumnConditions(this.column.field, condition);\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { FilterCondition, FilterOperator, FilterConditionValue } from './../operations/operators';\r\nimport { Component, OnInit, ViewChild, ElementRef, Input, ChangeDetectorRef, Injector } from '@angular/core';\r\nimport { FilterRowEditorComponent } from './filter-row-editor.component';\r\nimport { DatagridFilterRowService } from '../datagrid-filter-row.service';\r\nimport { FilterRowComponent } from '../datagrid-filter-row.component';\r\n\r\n\r\n\r\n// <input [checked]=\"chekced\" id=\"{{ id }}\" type=\"checkbox\" #chk >\r\n\r\n@Component({\r\n    selector: 'filter-checkbox',\r\n    template: `\r\n    <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input [name]=\"column.field\" [checked]=\"checked\" type=\"checkbox\" #chk class=\"custom-control-input\">\r\n        <label class=\"custom-control-label\" (click)=\"checkedChange($event)\"></label>\r\n    </div>\r\n    `\r\n\r\n})\r\nexport class FilterCheckboxComponent extends FilterRowEditorComponent implements OnInit {\r\n    i = 0;\r\n    checked = false;\r\n    @ViewChild('chk') chk: ElementRef;\r\n    constructor(\r\n        public dfrs: DatagridFilterRowService,\r\n        private cd: ChangeDetectorRef, private inject: Injector) {\r\n        super();\r\n\r\n        this.dfrs.removeField.subscribe(f => {\r\n            if (f === this.column.field) {\r\n                this.clearValue();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.chk.nativeElement.indeterminate = true;\r\n    }\r\n\r\n    checkedChange($event: MouseEvent) {\r\n        this.dfrs.closeFilterPanel();\r\n        if (this.i > 0) {\r\n            this.checked = !this.checked;\r\n        }\r\n        this.i += 1;\r\n        if (this.i > 2) {\r\n            this.i = 0;\r\n            this.chk.nativeElement.indeterminate = true;\r\n        } else {\r\n            this.chk.nativeElement.indeterminate = false;\r\n        }\r\n\r\n        if (this.i === 0) {\r\n            this.dfrs.updateColumnConditions(this.column.field, FilterConditionValue.All );\r\n            this.checked = false;\r\n        } else {\r\n            const condition: FilterCondition = {\r\n                operator1: FilterOperator.Equal,\r\n                value1: this.checked\r\n            };\r\n            this.dfrs.updateColumnConditions(this.column.field, condition );\r\n        }\r\n        this.cd.detectChanges();\r\n        $event.stopPropagation();\r\n    }\r\n\r\n    clearValue() {\r\n        this.checked = false;\r\n        this.chk.nativeElement.indeterminate = true;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    initFilter(filterCondition: any) {\r\n        if (filterCondition && Object.keys(filterCondition).length) {\r\n            this.checked = filterCondition.value1;\r\n            this.chk.nativeElement.indeterminate = false;\r\n            this.i = this.checked ? 2 : 1;\r\n        } else {\r\n            this.checked = false;\r\n            this.chk.nativeElement.indeterminate = true;\r\n            this.i = 0;\r\n        }\r\n        this.dfrs._updateColumnConditions(this.column.field, filterCondition);\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\nimport { Directive, Input, Injector, ComponentFactoryResolver, ViewContainerRef, OnInit, ComponentRef, Renderer2 } from '@angular/core';\r\nimport { DataColumn, ColumnFilter, ColumnFilterType } from '@farris/ui-datagrid';\r\nimport { FilterTextboxComponent } from './filter-editors/filter-row-textbox.component';\r\nimport { FilterCheckboxComponent } from './filter-editors/filter-row-checkbox.component';\r\n\r\n@Directive({\r\n    selector: '[filter-cell-editor]',\r\n})\r\nexport class FilterCellEditorDirective implements OnInit {\r\n    @Input() column: DataColumn;\r\n    @Input() group: FormGroup;\r\n    @Input() gridInstance: any;\r\n    @Input() delay = 300;\r\n    componentRef: ComponentRef<any>;\r\n    constructor(\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private container: ViewContainerRef,\r\n        private render: Renderer2) {}\r\n\r\n    ngOnInit() {\r\n        this.createFilterEditor();\r\n    }\r\n\r\n    private createFilterEditor() {\r\n\r\n        if (this.column.filter) {\r\n            const columnFilter = this.column.filter as ColumnFilter;\r\n            columnFilter.type = columnFilter.type || ColumnFilterType.string;\r\n            let constructorCmp: any = FilterTextboxComponent;\r\n            switch (columnFilter.type) {\r\n                case ColumnFilterType.boolean:\r\n                    constructorCmp = FilterCheckboxComponent;\r\n                    break;\r\n                // case ColumnFilterType.enum:\r\n                //     constructorCmp = FilterEnumComponent;\r\n                //     break;\r\n            }\r\n            const factory = this.resolver.resolveComponentFactory( constructorCmp );\r\n            this.componentRef = this.container.createComponent(factory);\r\n            this.componentRef.instance.column = this.column;\r\n            this.componentRef.instance.group = this.group;\r\n            this.componentRef.instance.gridInstance = this.gridInstance;\r\n            this.componentRef.instance.disabled = columnFilter.type >= 3;\r\n            this.componentRef.instance.delay = this.delay;\r\n\r\n            if (this.gridInstance.conditions && Object.keys(this.gridInstance.conditions).length ) {\r\n                setTimeout(() => {\r\n                    this.componentRef.instance.initFilter(this.gridInstance.conditions[this.column.field]);\r\n                }, 100);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    clearValue() {\r\n        if (this.componentRef) {\r\n            this.componentRef.instance.clearValue();\r\n        }\r\n    }\r\n\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { DatagridFilterRowService } from './datagrid-filter-row.service';\r\nimport { Component, OnInit, Input, AfterViewInit, ElementRef, Renderer2,\r\n    NgZone, Output, EventEmitter, OnDestroy, Injector, ViewEncapsulation, ViewChildren, QueryList, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { debounce, debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { FilterCellEditorDirective } from './datagrid-filter-cell-editor.directive';\r\n\r\n@Component({\r\n    selector: '[filter-row]',\r\n    templateUrl: './datagrid-filter-row.component.html',\r\n    styleUrls: [\r\n        './datagrid-filter-row.scss'\r\n    ],\r\n    providers: [\r\n        DatagridFilterRowService\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FilterRowComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() fixedLeft = false;\r\n    @Input() fixedRight = false;\r\n    @Input() columns: DataColumn[];\r\n    /** datagrid Instance */\r\n    @Input() gridInstance: DatagridComponent;\r\n\r\n    @Input() delay = 300;\r\n\r\n    @Output() conditionChange = new EventEmitter();\r\n\r\n    @ViewChildren(FilterCellEditorDirective) editors: QueryList<FilterCellEditorDirective>;\r\n\r\n    filterRowConditionsScribe: Subscription;\r\n    form = new FormGroup({});\r\n    tr: HTMLTableRowElement;\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private el: ElementRef,\r\n        private ngzone: NgZone,\r\n        private cd: ChangeDetectorRef,\r\n        public dfrs: DatagridFilterRowService,\r\n        private render: Renderer2,\r\n        private inject: Injector) {\r\n            this.filterRowConditionsScribe = this.dfrs.filterRowConditions$.subscribe(ccs => {\r\n                this.conditionChange.emit(ccs);\r\n            });\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.createControl();\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.render.listen('document', 'click', () => {\r\n                this.dfrs.closeFilterPanel();\r\n            });\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const nativeEl = this.el.nativeElement;\r\n        this.tr = nativeEl.parentElement;\r\n        nativeEl.querySelectorAll('td').forEach(n => {\r\n            this.tr.append(n);\r\n        });\r\n        nativeEl.style.display = 'none';\r\n\r\n        this.dfrs.gridInstance = this.gridInstance;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.filterRowConditionsScribe) {\r\n            this.filterRowConditionsScribe.unsubscribe();\r\n            this.filterRowConditionsScribe = null;\r\n        }\r\n        if (this.tr) {\r\n            const tds = this.tr.querySelectorAll('td');\r\n            if (tds && tds.length) {\r\n                tds.forEach(a => {\r\n                    if (!a.classList.contains('f-datagrid-header-checkbox') && !a.classList.contains('f-datagrid-cell-rownumber')) {\r\n                        this.tr.removeChild(a);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    createControl() {\r\n        const group = this.fb.group({});\r\n        this.columns.forEach(col => {\r\n            if (col.colspan) {return; }\r\n            const control = this.fb.control('');\r\n            group.addControl(col.field, control);\r\n        });\r\n        return group;\r\n    }\r\n\r\n    clearFilterValue(emitEvent = true) {\r\n        // this.form.reset();\r\n        this.editors.forEach(c => {\r\n            c.clearValue();\r\n        });\r\n\r\n        this.dfrs.clear(emitEvent);\r\n    }\r\n\r\n    removeField(field: string, opts?: { emitEvent: boolean }) {\r\n        this.dfrs.removeFilterField(field, opts);\r\n    }\r\n}\r\n","import { NgForm, FormControl, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ColumnFilterType } from '@farris/ui-datagrid';\r\nimport { Subscription, of, merge } from 'rxjs';\r\n\r\nimport { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild,\r\n    Output, EventEmitter, Injector, OnDestroy, ChangeDetectorRef, AfterViewInit } from '@angular/core';\r\nimport { FilterRowOperator,  FilterCondition, FilterOperator } from '../operations/operators';\r\n\r\n\r\n@Component({\r\n    selector: 'condition-editor',\r\n    templateUrl: './condition-editor.component.html',\r\n    styles: [\r\n        `\r\n        .no-number-button{-moz-appearance: textfield;}\r\n        .no-number-button::-webkit-outer-spin-button, .no-number-button::-webkit-inner-spin-button {\r\n              -webkit-appearance: none!important;\r\n        }`\r\n    ]\r\n})\r\nexport class ConditionEditorComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n    @Input() operators: FilterRowOperator[];\r\n    @Input() datatype: ColumnFilterType = ColumnFilterType.string;\r\n\r\n    @Input() condition: FilterCondition = {\r\n        operator1: 0,\r\n        value1: '',\r\n        relation: '',\r\n        operator2: 0,\r\n        value2: ''\r\n    };\r\n\r\n    @Input() filterOptions: any = {};\r\n\r\n    @Output() conditionChange = new EventEmitter();\r\n\r\n    @Output() panelHeightChange =  new EventEmitter();\r\n\r\n    emptyCondition =  {...this.condition};\r\n\r\n    formValueChangesSubscription: Subscription = null;\r\n    originalCondition: FilterCondition = {};\r\n\r\n    form: FormGroup = this.fb.group({\r\n        operator1: new FormControl(0),\r\n        value1: new FormControl(''),\r\n        relation: new FormControl(''),\r\n        operator2: new FormControl(0),\r\n        value2: new FormControl(''),\r\n    });\r\n\r\n    private emptyConditonString = JSON.stringify(this.emptyCondition);\r\n\r\n    constructor(private inject: Injector, private cd: ChangeDetectorRef, private fb: FormBuilder) { }\r\n\r\n    ngOnInit(): void {\r\n        this.originalCondition = Object.assign({}, this.condition);\r\n        this.form.patchValue(this.condition);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.formValueChangesSubscription) {\r\n            this.formValueChangesSubscription.unsubscribe();\r\n            this.formValueChangesSubscription = null;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n\r\n    private emitConditionChange(v: any) {\r\n        this.condition = v;\r\n        const filter = this.checkFilterOperator();\r\n        this.conditionChange.emit(filter);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.form.valueChanges.subscribe((v: FilterCondition) => {\r\n            this.condition = Object.assign(this.emptyCondition, this.condition);\r\n\r\n            if (v.operator1 > 1000) {\r\n                this.emitConditionChange(v);\r\n                return;\r\n            }\r\n\r\n            const currentFilterJSON = JSON.stringify(v);\r\n            if (this.emptyConditonString === currentFilterJSON) {\r\n                this.emitConditionChange(v);\r\n            } else {\r\n                // if (this.condition.value1 != v.value1 || (this.condition.value2 !== undefined && this.condition.value2 != v.value2)) {\r\n                if (JSON.stringify(this.condition) !== currentFilterJSON) {\r\n                    this.emitConditionChange(v);\r\n                    if (v.value2 == '') {\r\n                        this.emitPanelHeightChanged();\r\n                    }\r\n                } else {\r\n                    if ((this.condition.operator1 != v.operator1) || \r\n                        (this.condition.relation != v.relation  || this.condition.operator2 != v.operator2)) {\r\n                        this.emitConditionChange(v);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkFilterOperator() {\r\n        const filter = {...this.condition};\r\n        const op1 = parseInt('' + filter.operator1, 10);\r\n        const f1 = {operator1: filter.operator1, value1: filter.value1};\r\n\r\n        if (op1 === FilterOperator.Empty || op1 === FilterOperator.NotEmpty) {\r\n            filter.value1 = '';\r\n            f1.value1 = '';\r\n        }\r\n\r\n        if ((filter.value1 === '' || filter.value1 === null) && op1 !== FilterOperator.Empty && op1 !== FilterOperator.NotEmpty) {\r\n            return '';\r\n        }\r\n\r\n        if (!filter.relation) {\r\n            return f1;\r\n        } else {\r\n            const op2 = parseInt('' + filter.operator2, 10);\r\n            if (op2 === FilterOperator.Empty || op2 === FilterOperator.NotEmpty) {\r\n                filter.value2 = '';\r\n                return filter;\r\n            } else {\r\n                if (filter.value2 == null || filter.value2 == undefined || filter.value2 === '') {\r\n                    return f1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return filter;\r\n    }\r\n\r\n    chooseRelation(relation: 'and' | 'or', $event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const emit = !this.form.get('relation').value;\r\n        this.form.get('relation').setValue(relation);\r\n        this.condition.relation = relation;\r\n        if (this.condition.operator2 === undefined) {\r\n            this.condition.operator2 = 0;\r\n        }\r\n\r\n        if (emit) {\r\n            this.emitPanelHeightChanged();\r\n        }\r\n        \r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    resetFilters($event: MouseEvent) {\r\n        if (this.emptyConditonString !== JSON.stringify(this.condition)) {\r\n            this.condition = JSON.parse(this.emptyConditonString);\r\n            this.form.reset(this.condition);\r\n\r\n            this.emitPanelHeightChanged();\r\n        }\r\n    }\r\n\r\n    private emitPanelHeightChanged() {\r\n        if (this['panelHeightChangedTimer']) {\r\n            clearTimeout(this['panelHeightChangedTimer']);\r\n        }\r\n        this['panelHeightChangedTimer'] = setTimeout(() => {\r\n            this.panelHeightChange.emit();\r\n        }, 20);\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter,\r\n    AfterViewInit, Injector, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { DatalistComponent } from '@farris/ui-datalist';\r\nimport { FilterCondition, FilterOperator, FilterConditionValue } from './../operations/operators';\r\nimport { DatagridFilterRowService } from './../datagrid-filter-row.service';\r\n\r\n@Component({\r\n    selector: 'filter-datalist',\r\n    template: `\r\n    <ul class=\"list-group filter-condition\">\r\n        <li class=\"list-group-item border-0 border-b1\" *ngIf=\"showFilter\">\r\n            <input class=\"form-control form-control-sm\" [ngModel]=\"filterKeyWord\"\r\n                (input)=\"onTextChange($event)\" type=\"text\" >\r\n        </li>\r\n        <li class=\"list-group-item datalist border-0 border-b1\">\r\n            <farris-datalist\r\n                #dl\r\n                [data]=\"data\"\r\n                [idField]=\"idField\"\r\n                [height]=\"'auto'\"\r\n                [fit]=\"false\"\r\n                [multiSelect]=\"true\"\r\n                [selectedValues]=\"selectedValues\"\r\n                [valueField]=\"valueField\"\r\n                [textField]=\"textField\"\r\n                (selected)=\"onSelect($event)\"\r\n                (unSelected)=\"onUnSelected($event)\">\r\n            </farris-datalist>\r\n        </li>\r\n        <li class=\"list-group-item border-0\" style=\"border-bottom: 1px solid #dde2eb;\">\r\n            <div class=\"d-flex\">\r\n                <div class=\"custom-control custom-checkbox\" style=\"padding-left: 3px;\">\r\n                    <input id=\"filter-datalist-checkall\" #chkall type=\"checkbox\" class=\"custom-control-input\" [ngModel]=\"checked\" (ngModelChange)=\"checkAllHandler($event)\">\r\n                    <label class=\"custom-control-label\" for=\"filter-datalist-checkall\" >{{ 'datagrid.filter.checkAll' | locale }}</label>\r\n                </div>\r\n                <div class=\"ml-auto\"><button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"restFilter()\">\r\n                {{ 'datagrid.filter.reset' | locale }}</button></div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FilterDatalistComponent implements OnInit, AfterViewInit {\r\n    @Input() valueField: string;\r\n    @Input() textField: string;\r\n    @Input() idField: string;\r\n    @Input() selectedValues: string;\r\n    @Input() data = [];\r\n    @Input() showFilter = false;\r\n    @Input() filterKeyWord = '';\r\n\r\n    @ViewChild('chkall') chkall: ElementRef;\r\n    @ViewChild('dl') dataListInstance: DatalistComponent;\r\n\r\n    @Output() valueChange = new EventEmitter();\r\n\r\n    checked = false;\r\n    private originalData = [];\r\n\r\n    constructor(private inject: Injector, private cd: ChangeDetectorRef, private dfrs: DatagridFilterRowService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.originalData = cloneDeep(this.data);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.selectedValues === undefined) {\r\n            setTimeout(() => {\r\n                this.checkAll(true, false);\r\n                this.checked = true;\r\n                this.cd.detectChanges();\r\n            });\r\n        }\r\n\r\n        this.updateCheckboxState();\r\n    }\r\n\r\n    private checkAll(checked = true, emit = true) {\r\n        if (checked) {\r\n            this.dataListInstance.selectAll();\r\n            this.selectedValues = this.originalData.map(n => n[this.valueField]).join(',');\r\n        } else {\r\n            this.dataListInstance.unSelectAll();\r\n            this.selectedValues = '';\r\n        }\r\n        if (emit) {\r\n            this.buildCondition();\r\n        }\r\n    }\r\n\r\n    checkAllHandler($event) {\r\n        this.checked = $event;\r\n        this.chkall.nativeElement.indeterminate = false;\r\n        this.checkAll(this.checked);\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    onSelect($event) {\r\n        this.updateSelectedValues($event);\r\n        this.updateCheckboxState();\r\n        this.buildCondition();\r\n    }\r\n\r\n    private updateCheckboxState() {\r\n        if (this.selectedValues === undefined) {\r\n            return;\r\n        }\r\n        if ( this.selectedValues.split(',').length === this.originalData.length) {\r\n            this.checked = true;\r\n            this.chkall.nativeElement.indeterminate = false;\r\n        } else {\r\n            this.checked = false;\r\n            this.chkall.nativeElement.indeterminate = true;\r\n        }\r\n    }\r\n\r\n    onUnSelected($event) {\r\n        this.updateSelectedValues($event, false);\r\n        this.checked = false;\r\n        this.chkall.nativeElement.indeterminate = !!this.selectedValues;\r\n        this.buildCondition();\r\n    }\r\n\r\n    private buildCondition() {\r\n        const values = this.selectedValues.split(',');\r\n        if (this.selectedValues) {\r\n            if (values.length === this.originalData.length) {\r\n                this.valueChange.emit(FilterConditionValue.All);\r\n                return;\r\n            }\r\n            const condition: FilterCondition = {\r\n                operator1: FilterOperator.In,\r\n                value1: values\r\n            };\r\n            this.valueChange.emit(condition);\r\n        } else {\r\n            // this.valueChange.emit({ operator1: FilterOperator.Equal, value1: [] });\r\n            // æ²¡æéæ©ç¸å½äºæ­¤æ¡ä»¶æ æ\r\n            this.valueChange.emit(FilterConditionValue.All);\r\n        }\r\n    }\r\n\r\n    updateSelectedValues($event, selected = true) {\r\n        if ($event) {\r\n            const val = $event.data[this.valueField];\r\n            let valArr = this.selectedValues ? this.selectedValues.split(',') : [];\r\n            if (selected) {\r\n                if (valArr.findIndex( n => n == val) === -1) {\r\n                    valArr.push(val);\r\n                }\r\n            } else {\r\n                valArr = valArr.filter(n => n != val);\r\n            }\r\n\r\n            this.selectedValues = valArr.join(',');\r\n\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onTextChange($event) {\r\n        const val = $event.target[this.valueField];\r\n        this.filterKeyWord = val;\r\n        this.changeDataSource();\r\n    }\r\n\r\n    private changeDataSource() {\r\n        if (this.filterKeyWord) {\r\n            this.data = this.originalData.filter(n => {\r\n                return n[this.textField].indexOf(this.filterKeyWord) > -1;\r\n            });\r\n        } else {\r\n            this.data = cloneDeep(this.originalData);\r\n        }\r\n    }\r\n\r\n    restFilter() {\r\n        this.filterKeyWord = '';\r\n        this.changeDataSource();\r\n        this.checkAll();\r\n        this.checked = true;\r\n        this.chkall.nativeElement.indeterminate = false;\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'filter-select',\r\n    template: `\r\n    <select class=\"form-control form-control-sm\">\r\n        <option>Small select</option>\r\n    </select>\r\n    `\r\n})\r\nexport class FilterSelectComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { NgModule, Provider, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TimePickerModule } from '@farris/ui-time-picker';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { DatagridModule, GRID_FILTER_ROW } from '@farris/ui-datagrid';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\nimport { NumberSpinnerModule } from '@farris/ui-number-spinner';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { FarrisFormsModule } from '@farris/ui-forms';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\n\r\n\r\nimport { FilterRowComponent } from './datagrid-filter-row.component';\r\nimport { FilterCellEditorDirective } from './datagrid-filter-cell-editor.directive';\r\nimport { FilterTextboxComponent } from './filter-editors/filter-row-textbox.component';\r\nimport { FilterRowPanelComponent } from './filter-editors/filter-row-panel.component';\r\nimport { FilterCheckboxComponent } from './filter-editors/filter-row-checkbox.component';\r\nimport { ConditionEditorComponent } from './filter-editors/condition-editor.component';\r\nimport { FilterDatalistComponent } from './filter-editors/filter-datalist.component';\r\nimport { FilterRowEditorComponent } from './filter-editors/filter-row-editor.component';\r\nimport { FilterSelectComponent } from './filter-editors/filter-row-select.component';\r\n\r\n\r\nexport const FilterRowProvider = { provide: GRID_FILTER_ROW, useValue: FilterRowComponent  };\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FilterRowComponent,\r\n        FilterCellEditorDirective,\r\n        FilterTextboxComponent,\r\n        FilterCheckboxComponent,\r\n        FilterRowPanelComponent,\r\n        FilterDatalistComponent,\r\n        FilterRowEditorComponent,\r\n        FilterSelectComponent,\r\n        ConditionEditorComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        DatagridModule,\r\n        FarrisDatePickerModule,\r\n        NumberSpinnerModule,\r\n        DatalistModule,\r\n        TimePickerModule,\r\n        LocaleModule.forRoot(),\r\n        FarrisFormsModule,\r\n        FarrisCommonModule\r\n    ],\r\n    entryComponents: [\r\n        FilterRowComponent,\r\n        FilterTextboxComponent,\r\n        FilterCheckboxComponent,\r\n        ConditionEditorComponent,\r\n        FilterDatalistComponent,\r\n        FilterRowPanelComponent,\r\n        FilterRowEditorComponent,\r\n        FilterSelectComponent\r\n    ],\r\n    exports: [\r\n        FilterRowComponent\r\n    ]\r\n})\r\nexport class DatagridFilterRowModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridFilterRowModule,\r\n            providers: [\r\n                { provide: GRID_FILTER_ROW, useValue: FilterRowComponent  }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuBI,QAAS;IACT,WAAY;IACZ,UAAW;IACX,iBAAkB;IAClB,OAAQ;IACR,cAAe;IACf,WAAY;IACZ,cAAe;IACf,MAAO;IACP,SAAU;IACV,WAAY;IACZ,cAAe;IACf,UAAW;IACX,aAAc;;;;;;;;;;;;;;;;;;IAId,KAAM,EAAE;IACR,OAAQ,MAAM;;;AAoClB,MAAa,iBAAiB,GAAG;IAC7B,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI;IAC5B,CAAC,cAAc,CAAC,QAAQ,GAAG,KAAK;IAChC,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI;IAC9B,CAAC,cAAc,CAAC,cAAc,GAAG,MAAM;IACvC,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI;IAC3B,CAAC,cAAc,CAAC,WAAW,GAAG,MAAM;IACpC,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI;IAC/B,CAAC,cAAc,CAAC,WAAW,GAAG,KAAK;IACnC,CAAC,cAAc,CAAC,QAAQ,GAAG,KAAK;IAChC,CAAC,cAAc,CAAC,KAAK,GAAG,GAAG;CAC9B;;;;;AAGD,MAAa,mBAAmB,GAAwB;IACpD,EAAE,IAAI,EAAE,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IAChG,EAAE,IAAI,EAAE,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IACtG,EAAE,IAAI,EAAE,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IAChG,EAAE,IAAI,EAAE,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAG,SAAS,EAAE,KAAK,EAAC;IACtG,EAAE,IAAI,EAAE,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAG,SAAS,EAAE,IAAI,EAAC;IACrG,EAAE,IAAI,EAAE,cAAc,CAAC,WAAW,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,WAAW,CAAC,EAAG,SAAS,EAAE,KAAK,EAAC;CAC/G;;;;;AAED,MAAa,2BAA2B,GAAwB;IAC5D,EAAE,IAAI,EAAE,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IAChG,EAAE,IAAI,EAAE,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IACtG,EAAE,IAAI,EAAE,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;IAChG,EAAE,IAAI,EAAE,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAG,SAAS,EAAE,KAAK,EAAC;IACtG,EAAE,IAAI,EAAE,cAAc,CAAC,OAAO,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,EAAG,SAAS,EAAE,KAAK,EAAC;IACpG,EAAE,IAAI,EAAE,cAAc,CAAC,cAAc,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,cAAc,CAAC,EAAG,SAAS,EAAE,KAAK,EAAC;IAClH,EAAE,IAAI,EAAE,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,EAAG,SAAS,EAAE,KAAK,EAAC;IAC9F,EAAE,IAAI,EAAE,cAAc,CAAC,WAAW,EAAE,KAAK,EAAE,iBAAiB,CAAC,cAAc,CAAC,WAAW,CAAC,EAAG,SAAS,EAAE,KAAK,EAAC;CAC/G;;;;;;AC7GD,MAUa,wBAAwB;IAWjC;QAVQ,2BAAsB,GAAG,IAAI,OAAO,EAAsB,CAAC;QACnE,yBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC;QAClE,qBAAgB,GAA0B,EAAE,CAAC;QAK7C,yBAAoB,GAAG,IAAI,YAAY,EAAE,CAAC;QAC1C,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;KAExB;;;;;IAEjB,cAAc,CAAC,GAA0C;QACrD,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;KACjC;;;;IAED,cAAc;QACV,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;KACpC;;;;IAED,gBAAgB;QACZ,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACvB,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,EAAE;gBACtD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;aAC1D;YACD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC1E,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;;SAGlC;KACJ;;;;;IAED,KAAK,CAAC,SAAS,GAAG,IAAI;QAClB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACxC;KACJ;;;;;;IAED,iBAAiB,CAAC,KAAa,EAAE,IAA2B;QACxD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;gBACnC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;aACjE;SACJ;KACJ;;;;;;IAED,uBAAuB,CAAC,KAAa,EAAE,YAAoD;;cACjF,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACrD,IAAI,CAAC,gBAAgB,EAAE;YACnB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAC,CAAC,KAAK,GAAG,YAAY,EAAC,CAAC,CAAC;SACzF;aAAM;YACH,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBACnE,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAC,CAAC,KAAK,GAAG,YAAY,EAAC,CAAC,CAAC;aACzF;SACJ;;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO;;;;QAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE;;gBAE3B,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aACnC;SACJ,EAAC,CAAC;KACN;;;;;;IAED,sBAAsB,CAAC,KAAa,EAAE,YAAoD;QACtF,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC1D;;;;;;;IAEO,0BAA0B,CAAC,UAAU,EAAE,aAAsB;;QAEjE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,aAAa,EAAC,CAAC,CAAC;KACjE;;;;;;;IAGD,gBAAgB,CAAC,MAAkB,EAAE,SAA0B;QAC3D,IAAI,CAAC,SAAS,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YAC7C,OAAO,EAAE,CAAC;SACb;;cAEK,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,qBAAqB,CAAC;;cACzE,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,oBAAoB,CAAC;;cAEvE,gBAAgB;;;;QAAG,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,KAAK,EAAE;gBACb,OAAO,OAAO,CAAC;aAClB;iBAAM,IAAI,CAAC,KAAK,IAAI,EAAE;gBACnB,OAAO,MAAM,CAAC;aACjB;iBAAM;gBACH,OAAQ,EAAE,CAAC;aACd;SACJ,CAAA;;YAEG,mBAAmB,GAAG,EAAE;QAC5B,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,QAAQ,EAAE;YAClD,mBAAmB,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;YACrD,IAAI,SAAS,CAAC,MAAM,EAAE;gBAClB,mBAAmB,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;aAC3D;SACJ;aAAM,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,EAAE;;kBAC/C,QAAQ,sBAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAqB;kBAC3D,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,QAAQ;YAChD,mBAAmB,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;YACrD,IAAI,SAAS,CAAC,MAAM,EAAE;gBAClB,mBAAmB,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG;;;;gBAAC,CAAC;;0BACvC,QAAQ,GAAG,IAAI,CAAC,IAAI;;;;oBAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC;oBACnD,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC;iBAC9B,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;aAClB;SACJ;aAAM;YACH,IAAI,SAAS,EAAE;;sBACL,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC;gBACjE,IAAK,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAClC,mBAAmB,GAAG,GAAG,cAAc,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;;0BACxD,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC;oBACjE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;wBACjC,mBAAmB,IAAI,IAAI,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,cAAc,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;qBAC3G;yBAAM;wBACH,IAAI,SAAS,CAAC,SAAS,KAAK,SAAS,EAAE;;kCAC7B,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC;4BAClD,IAAI,GAAG,KAAK,cAAc,CAAC,KAAK,IAAI,GAAG,KAAK,cAAc,CAAC,QAAQ,EAAE;gCACjE,mBAAmB,IAAI,IAAI,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,cAAc,EAAE,CAAC;6BACvF;yBACJ;qBACJ;iBACJ;qBAAM;;0BACG,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,SAAS,CAAC,SAAS,EAAE,EAAE,CAAC;oBAClD,IAAI,GAAG,KAAK,cAAc,CAAC,KAAK,IAAI,GAAG,KAAK,cAAc,CAAC,QAAQ,EAAE;wBACjE,mBAAmB,GAAG,GAAG,cAAc,EAAE,CAAC;qBAC7C;iBACJ;aACJ;SACJ;QACD,OAAO,mBAAmB,CAAC;KAC9B;;;;;;IAEO,OAAO,CAAC,CAAC;QACb,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC;KACpD;;;;;IAGD,cAAc,CAAC,MAAkB;;cACvB,SAAS,sBAAG,MAAM,CAAC,MAAM,EAAgB;;cACzC,QAAQ,GAAG,SAAS,CAAC,IAAI;;YAC3B,WAAW,GAAG,IAAI;QACtB,IAAI,QAAQ,KAAK,gBAAgB,CAAC,IAAI,EAAE;;kBAC9B,GAAG,sBAAG,MAAM,CAAC,SAAS,EAAO;YACnC,IAAI,GAAG,EAAE;gBACL,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC;aAC7B;iBAAM;gBACH,IAAI,SAAS,CAAC,OAAO,EAAE;oBACnB,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC;iBACnC;aACJ;SACJ;aAAM;;;kBACG,UAAU,GAAa,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG;;;;YAAC,CAAC;gBAClE,OAAO,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAClD,EAAC;;;kBAEI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;;;;YAAC,CAAC;gBAClD,OAAO;oBACH,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;iBACrB,CAAC;aACL,EAAC;YACF,WAAW,GAAG;gBACV,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO;aAC5E,CAAC;SACL;QAED,OAAO,WAAW,CAAC;KAEtB;;;;;;IAGD,gBAAgB,CAAC,IAAS;;cAChB,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC;QACpC,IAAI,OAAO,EAAE;;kBACH,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;;kBACvD,GAAG,GAAG,6BAA6B,QAAQ,EAAE;YACnD,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACxD;QACD,OAAO,EAAE,CAAC;KACb;;;YA5LJ,UAAU;;;;;;;;;ACTX,MAaa,uBAAuB;;;;;;;;IAiChC,YACY,MAAc,EAAU,EAAc,EACtC,MAAiB,EAAS,IAA8B,EACxD,MAAgB;QAFhB,WAAM,GAAN,MAAM,CAAQ;QAAU,OAAE,GAAF,EAAE,CAAY;QACtC,WAAM,GAAN,MAAM,CAAW;QAAS,SAAI,GAAJ,IAAI,CAA0B;QACxD,WAAM,GAAN,MAAM,CAAU;QAnCnB,UAAK,GAAG,GAAG,CAAC;QACZ,WAAM,GAAG,GAAG,CAAC;QAKb,aAAQ,GAAG,gBAAgB,CAAC,MAAM,CAAC;QAElC,oBAAe,GAAG,IAAI,YAAY,EAAE,CAAC;QAErC,sBAAiB,GAAG,IAAI,YAAY,EAAE,CAAC;QAEjD,iBAAY,GAAG,IAAI,CAAC;QACpB,gBAAW,GAAsB,EAAE,CAAC;QAGpC,cAAS,GAAoB;YACzB,SAAS,EAAE,CAAC;YACZ,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,CAAC;YACZ,MAAM,EAAE,EAAE;SACb,CAAC;QAEF,wBAAmB,GAAG,IAAI,CAAC;QAInB,OAAE,GAA0B,IAAI,CAAC;QACjC,SAAI,GAAW,IAAI,CAAC;QAOxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,WAAW,EAAE,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,oBAAoB,EAAE,CAAC,CAAC;KAExF;;;;IAED,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,iBAAiB;;;QAAE;YAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO;;;;YAAG,CAAC,CAAa;gBAC9D,CAAC,CAAC,eAAe,EAAE,CAAC;gBACpB,OAAO,KAAK,CAAC;aAChB,EAAC,CAAC;SACN,EAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;;;;QAMvB,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa;;;;QAAE,CAAC,CAAC;;kBAClD,GAAG,sBAAG,CAAC,CAAC,MAAM,EAAO;YAC3B,IAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE;gBACzC,OAAO;aACV;YAED,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;gBACpD,OAAO;aACV;YAED,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;gBAC1C,OAAO;aACV;YACD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SAChB,EAAC,CAAA;KAEL;;;;IAED,eAAe;QACX,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;;kBAEpB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC;YAC3D,QAAQ,CAAC,KAAK,CAAC,UAAU,GAAI,qBAAqB,CAAC;;kBAG7C,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE;YACvD,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;;kBAEzB,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,CAAC;YAC9E,IAAI,SAAS,EAAE;gBACX,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBAChC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;aACtC;;SAGJ;KACJ;;;;IAED,WAAW;QACP,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;SAClD;KACJ;;;;;IAEO,kBAAkB;;cAChB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC;;cACrD,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,YAAY,GAAG,EAAE;;cAC9D,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,EAAE;;cAE/D,cAAc,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,GAAG;QAEvD,IAAI,cAAc,GAAG,CAAC,EAAE;;kBACd,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE;YAC1C,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;SACnC;aAAM;YACH,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;SACxC;KACJ;;;;IAED,oBAAoB;QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KACjC;;;;;IAGD,KAAK,CAAC,KAAiB;QACnB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAChC;;;;;IAGD,aAAa,CAAC,SAAS;QACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACxC;;;;;IAEO,eAAe;QACnB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;kBACnD,sBAAsB,sBAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAmB;YAC/F,IAAI,sBAAsB,IAAI,sBAAsB,CAAC,MAAM,EAAE;gBACzD,IAAI,CAAC,cAAc,GAAG,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACjE;SACJ;KACJ;;;YAjJJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,47CAA+C;aAClD;;;;YAZ0B,MAAM;YAAU,UAAU;YACzC,SAAS;YAIZ,wBAAwB;YAJY,QAAQ;;;oBAahD,KAAK;qBACL,KAAK;qBAEL,KAAK;wBACL,KAAK;uBAEL,KAAK;8BAEL,MAAM;gCAEN,MAAM;;;;;;;ACvBX,MAMa,wBAAwB;IAIjC;QADA,OAAE,GAAG,EAAE,CAAC;KACS;;;;IAEjB,QAAQ;QACJ,IAAI,CAAC,EAAE,GAAG,cAAc,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;KAC/C;;;;IAED,UAAU,MAAK;;;YAdlB,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,EAAE;aACf;;;;;qBAGI,KAAK;;;;;;;ACTV,MAwCa,sBAAuB,SAAQ,wBAAwB;;;;;;;;;;IAyBhE,YACY,GAA6B,EAAU,QAAkB,EAAU,GAAmB,EACvF,IAA8B,EAAU,MAAiB,EAAU,EAAqB,EACvF,QAAuB;QAE/B,KAAK,EAAE,CAAC;QAJA,QAAG,GAAH,GAAG,CAA0B;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,QAAG,GAAH,GAAG,CAAgB;QACvF,SAAI,GAAJ,IAAI,CAA0B;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,OAAE,GAAF,EAAE,CAAmB;QACvF,aAAQ,GAAR,QAAQ,CAAe;QA1B1B,aAAQ,GAAG,KAAK,CAAC;QACjB,UAAK,GAAG,GAAG,CAAC;QACrB,cAAS,GAAG,EAAE,CAAC;QAaf,4BAAuB,GAAiB,IAAI,CAAC;QAIrC,OAAE,GAA0B,IAAI,CAAC;QACjC,SAAI,GAAW,IAAI,CAAC;QACpB,OAAE,GAAe,IAAI,CAAC;QAS1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAExC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAC/B,MAAM;;;;QAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,SAAS,EAAC,EAC/C,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CACpB,CAAC,SAAS;;;;QAAC,CAAC,GAAQ;;kBACX,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAClC,IAAI,GAAG,KAAK,EAAE,EAAE;;sBACN,UAAU,GAAG,EAAE,SAAS,EAAE,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE;gBACtE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,MAAM,EAAE;oBACrD,UAAU,CAAC,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC;iBAC/C;gBAED,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAE,CAAC;aACpE;iBAAM;gBACH,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,oBAAoB,CAAC,GAAG,CAAE,CAAC;aAClF;SACJ,EAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS;;;;QAAC,CAAC;YAC7B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACzB,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;SACJ,EAAC,CAAC;KACN;;;;IAnDD,IAAI,SAAS;QACT,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,MAAM,EAAG;YACtD,OAAO,QAAQ,CAAC;SACnB;QACD,OAAO,MAAM,CAAC;KACjB;;;;IAgDD,WAAW;QACP,IAAI,IAAI,CAAC,EAAE,EAAE;YACT,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;YACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;SAClB;KACJ;;;;;IAED,IAAI,CAAC,KAAiB;QAClB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;;cAElB,cAAc,GAAG,oBAAC,KAAK,CAAC,MAAM,IAAS,OAAO,CAAC,aAAa,CAAC;QACnE,IAAI,cAAc,EAAE;YAChB,cAAc,CAAC,gBAAgB,CAAC,OAAO;;;;YAAE,CAAC,CAAC;gBACvC,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB,EAAC,CAAC;SACN;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAC9C;;cAEK,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,uBAAuB,CAAC;QACpE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAE9D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAEjD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;YAClE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;YAEhE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI;gBACjD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,QAAQ,EAAE;gBACvD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAI,GAAG,CAAC;aAC9C;SACJ;;cAEK,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC5E,IAAI,sBAAsB,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,sBAAG,sBAAsB,EAAmB,CAAC;SACtF;aAAM;YACH,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,GAAG;gBACrC,SAAS,EAAE,CAAC;gBACZ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC;gBACZ,MAAM,EAAE,EAAE;aACb,CAAC;;SAEL;QAED,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS;;;;QAAC,CAAC,SAA0B;YAC7G,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,CAAE,CAAC;gBAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBACpE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE;oBAC7B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;iBACpC;gBACD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;aAC3B;iBAAM;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,oBAAoB,CAAC,GAAG,CAAC,CAAC;aACjF;SACJ,EAAC,CAAC;;QAGH,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAEtE,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1C,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,cAAc,CAAC,qBAAqB,EAAE;QACjF,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;QAEjE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS;;;QAAC;gBACjD,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,cAAc,CAAC,qBAAqB,EAAE;YAC9D,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,KAAK,EAAG,MAAM,EAAE,CAAC;SAClD,EAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB;;;QAAC;YACxB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;gBACV,IAAI,CAAC,EAAE,GAAG,IAAI,cAAc;;;;;gBAAC,CAAC,OAAO,EAAE,QAAQ;oBAC3C,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE;wBAC1B,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;qBAC1C;oBACD,IAAI,CAAC,kBAAkB,CAAC,GAAG,UAAU;;;oBAAC;4BAC9B,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE;8BAC3D,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;wBAEtE,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;4BAC9B,IAAI,OAAO,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,KAAK,CAAC,IAAI,OAAO,GAAG,KAAK,KAAK,CAAC,CAAC,EAAE;gCACrE,OAAO;6BACV;yBACJ;wBAED,IAAI,KAAK,KAAK,OAAO,IAAI,MAAM,KAAK,QAAQ,EAAE;4BAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;yBAChB;qBACJ,GAAE,EAAE,CAAC,CAAC;iBACV,EAAC,CAAC;gBAEH,UAAU;;;gBAAC;oBACP,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;iBACnC,EAAC,CAAC;aACN;SACJ,EAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;KACzD;;;;IAED,KAAK;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC9B,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;SACvC;KACJ;;;;;;IAEO,aAAa,CAAC,GAA4B;QAC9C,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,MAAM,EAAE;YACrD,GAAG,CAAC,SAAS,GAAG,mBAAmB,CAAC;YACpC,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC,QAAQ,CAAC;YAClD,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC,QAAQ,CAAC;SACrD;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,QAAQ;eAChH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,gBAAgB,CAAC,IAAI,EAAE;YAC3G,GAAG,CAAC,SAAS,GAAG,2BAA2B,CAAC;YAC5C,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC;YAC/C,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC;SAClD;QAED,IAAI,GAAG,CAAC,SAAS,EAAE;YACf,GAAG,CAAC,SAAS,CAAC,OAAO;;;;YAAC,CAAC;gBACnB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAChD,EAAC,CAAC;SACN;KACJ;;;;;;IAEO,yBAAyB,CAAC,MAAM;QACpC,IAAI,MAAM,EAAE;;kBACF,gBAAgB,GAAG,MAAM,CAAC,aAAa;YAC7C,IAAI,gBAAgB,EAAE;;sBACZ,GAAG,GAAG,gBAAgB,CAAC,qBAAqB,EAAE;;sBAC9C,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;;sBACzB,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;;sBAEzB,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,qBAAqB,EAAE;;sBACxE,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK;;oBACjD,IAAI,GAAG,GAAG,CAAC,IAAI;gBACnB,IAAI,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,UAAU,EAAG;oBACrD,IAAI,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,WAAW,GAAG,UAAU,CAAC;oBACrE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,UAAU,GAAG,EAAE,IAAI,CAAC;iBAC/G;;;sBAEK,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC;gBAC7E,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;oBACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC;iBACpD;aACJ;SACJ;KACJ;;;;;IAED,iBAAiB,CAAC,MAAM;;cACd,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;QACjC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC;KACvE;;;;IAED,UAAU;QACN,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;SACvC;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB;QACD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KAC3B;;;;;IAED,UAAU,CAAC,SAAc;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAChE,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KAC3B;;;YA7QJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;;;;;;;;KAaT;yBAEG;;;;UAIE;aAET;;;;YAtC0B,wBAAwB;YAAE,QAAQ;YAAgB,cAAc;YAYlF,wBAAwB;YAX7B,SAAS;YAAyB,iBAAiB;YAF9C,aAAa;;;qBAyCjB,KAAK;uBACL,KAAK;oBACL,KAAK;oBAgBL,SAAS,SAAC,OAAO;;;;;;;AC3DtB;AAoBA,MAAa,uBAAwB,SAAQ,wBAAwB;;;;;;IAIjE,YACW,IAA8B,EAC7B,EAAqB,EAAU,MAAgB;QACvD,KAAK,EAAE,CAAC;QAFD,SAAI,GAAJ,IAAI,CAA0B;QAC7B,OAAE,GAAF,EAAE,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAU;QAL3D,MAAC,GAAG,CAAC,CAAC;QACN,YAAO,GAAG,KAAK,CAAC;QAOZ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS;;;;QAAC,CAAC;YAC7B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACzB,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;SACJ,EAAC,CAAC;KACN;;;;IAED,QAAQ;QACJ,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;KAC/C;;;;;IAED,aAAa,CAAC,MAAkB;QAC5B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAChC;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;YACZ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;SAC/C;aAAM;YACH,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;SAChD;QAED,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,oBAAoB,CAAC,GAAG,CAAE,CAAC;YAC/E,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACxB;aAAM;;kBACG,SAAS,GAAoB;gBAC/B,SAAS,EAAE,cAAc,CAAC,KAAK;gBAC/B,MAAM,EAAE,IAAI,CAAC,OAAO;aACvB;YACD,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,CAAE,CAAC;SACnE;QACD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,eAAe,EAAE,CAAC;KAC5B;;;;IAED,UAAU;QACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5C,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KAC3B;;;;;IAED,UAAU,CAAC,eAAoB;QAC3B,IAAI,eAAe,IAAI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE;YACxD,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;YAC7C,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;SACjC;aAAM;YACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5C,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;QACD,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;QACtE,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KAC3B;;;YA5EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE;;;;;KAKT;aAEJ;;;;YAhBQ,wBAAwB;YAFyB,iBAAiB;YAAE,QAAQ;;;kBAsBhF,SAAS,SAAC,KAAK;;;;;;;ACvBpB,MASa,yBAAyB;;;;;;;IAMlC,YACY,QAAkB,EAClB,QAAkC,EAClC,SAA2B,EAC3B,MAAiB;QAHjB,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAA0B;QAClC,cAAS,GAAT,SAAS,CAAkB;QAC3B,WAAM,GAAN,MAAM,CAAW;QANpB,UAAK,GAAG,GAAG,CAAC;KAMY;;;;IAEjC,QAAQ;QACJ,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;;;;;IAEO,kBAAkB;QAEtB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;;kBACd,YAAY,sBAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAgB;YACvD,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,IAAI,gBAAgB,CAAC,MAAM,CAAC;;gBAC7D,cAAc,GAAQ,sBAAsB;YAChD,QAAQ,YAAY,CAAC,IAAI;gBACrB,KAAK,gBAAgB,CAAC,OAAO;oBACzB,cAAc,GAAG,uBAAuB,CAAC;oBACzC,MAAM;;;;aAIb;;kBACK,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAE,cAAc,CAAE;YACvE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC5D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,GAAG,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAE9C,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,EAAG;gBACnF,UAAU;;;gBAAC;oBACP,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC1F,GAAE,GAAG,CAAC,CAAC;aACX;SACJ;KAEJ;;;;IAED,UAAU;QACN,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SAC3C;KACJ;;;YAtDJ,SAAS,SAAC;gBACP,QAAQ,EAAE,sBAAsB;aACnC;;;;YAP0B,QAAQ;YAAE,wBAAwB;YAAE,gBAAgB;YAAwB,SAAS;;;qBAS3G,KAAK;oBACL,KAAK;2BACL,KAAK;oBACL,KAAK;;;;;;;ACZV,MAmBa,kBAAkB;;;;;;;;;;IAgB3B,YACY,EAAe,EACf,EAAc,EACd,MAAc,EACd,EAAqB,EACtB,IAA8B,EAC7B,MAAiB,EACjB,MAAgB;QANhB,OAAE,GAAF,EAAE,CAAa;QACf,OAAE,GAAF,EAAE,CAAY;QACd,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAmB;QACtB,SAAI,GAAJ,IAAI,CAA0B;QAC7B,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAU;QAtBnB,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QAKnB,UAAK,GAAG,GAAG,CAAC;QAEX,oBAAe,GAAG,IAAI,YAAY,EAAE,CAAC;QAK/C,SAAI,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAUjB,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS;;;;QAAC,GAAG;YACzE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClC,EAAC,CAAC;KACN;;;;IAEL,QAAQ;QACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,iBAAiB;;;QAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO;;;YAAE;gBACpC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAChC,EAAC,CAAC;SACN,EAAC,CAAC;KACN;;;;IAED,eAAe;;cACL,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa;QACtC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC;QACjC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO;;;;QAAC,CAAC;YACrC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACrB,EAAC,CAAC;QACH,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;KAC9C;;;;IAED,WAAW;QACP,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAChC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;YAC7C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;SACzC;QACD,IAAI,IAAI,CAAC,EAAE,EAAE;;kBACH,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC1C,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;gBACnB,GAAG,CAAC,OAAO;;;;gBAAC,CAAC;oBACT,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;wBAC3G,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;qBAC1B;iBACJ,EAAC,CAAC;aACN;SACJ;KACJ;;;;IAED,aAAa;;cACH,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,OAAO;;;;QAAC,GAAG;YACpB,IAAI,GAAG,CAAC,OAAO,EAAE;gBAAC,OAAO;aAAE;;kBACrB,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;YACnC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACxC,EAAC,CAAC;QACH,OAAO,KAAK,CAAC;KAChB;;;;;IAED,gBAAgB,CAAC,SAAS,GAAG,IAAI;;QAE7B,IAAI,CAAC,OAAO,CAAC,OAAO;;;;QAAC,CAAC;YAClB,CAAC,CAAC,UAAU,EAAE,CAAC;SAClB,EAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KAC9B;;;;;;IAED,WAAW,CAAC,KAAa,EAAE,IAA6B;QACpD,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAC5C;;;YAlGJ,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,8hBAAmD;gBAInD,SAAS,EAAE;oBACP,wBAAwB;iBAC3B;gBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACxC;;;;YAfmB,WAAW;YAFmB,UAAU;YACxD,MAAM;YAAyF,iBAAiB;YAF3G,wBAAwB;YAC6B,SAAS;YAC1B,QAAQ;;;wBAkBhD,KAAK;yBACL,KAAK;sBACL,KAAK;2BAEL,KAAK;oBAEL,KAAK;8BAEL,MAAM;sBAEN,YAAY,SAAC,yBAAyB;;;;;;;AC/B3C,MAoBa,wBAAwB;;;;;;IAiCjC,YAAoB,MAAgB,EAAU,EAAqB,EAAU,EAAe;QAAxE,WAAM,GAAN,MAAM,CAAU;QAAU,OAAE,GAAF,EAAE,CAAmB;QAAU,OAAE,GAAF,EAAE,CAAa;QA/BnF,aAAQ,GAAqB,gBAAgB,CAAC,MAAM,CAAC;QAErD,cAAS,GAAoB;YAClC,SAAS,EAAE,CAAC;YACZ,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,CAAC;YACZ,MAAM,EAAE,EAAE;SACb,CAAC;QAEO,kBAAa,GAAQ,EAAE,CAAC;QAEvB,oBAAe,GAAG,IAAI,YAAY,EAAE,CAAC;QAErC,sBAAiB,GAAI,IAAI,YAAY,EAAE,CAAC;QAElD,mBAAc,qBAAQ,IAAI,CAAC,SAAS,EAAE;QAEtC,iCAA4B,GAAiB,IAAI,CAAC;QAClD,sBAAiB,GAAoB,EAAE,CAAC;QAExC,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,SAAS,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;YAC7B,MAAM,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;YAC3B,QAAQ,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;YAC7B,SAAS,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;YAC7B,MAAM,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;QAEK,wBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAE+B;;;;IAEjG,QAAQ;QACJ,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACxC;;;;IAED,WAAW;QACP,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACnC,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;YAChD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;SAC5C;KACJ;;;;;IAED,WAAW,CAAC,OAAsB;KACjC;;;;;;IAGO,mBAAmB,CAAC,CAAM;QAC9B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;;cACb,MAAM,GAAG,IAAI,CAAC,mBAAmB,EAAE;QACzC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACrC;;;;IAED,eAAe;QACX,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS;;;;QAAC,CAAC,CAAkB;YAChD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAEpE,IAAI,CAAC,CAAC,SAAS,GAAG,IAAI,EAAE;gBACpB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAC5B,OAAO;aACV;;kBAEK,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3C,IAAI,IAAI,CAAC,mBAAmB,KAAK,iBAAiB,EAAE;gBAChD,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;aAC/B;iBAAM;;gBAEH,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,iBAAiB,EAAE;oBACtD,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,CAAC,MAAM,IAAI,EAAE,EAAE;wBAChB,IAAI,CAAC,sBAAsB,EAAE,CAAC;qBACjC;iBACJ;qBAAM;oBACH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS;yBACvC,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,IAAK,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE;wBACrF,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;qBAC/B;iBACJ;aACJ;SACJ,EAAC,CAAC;KACN;;;;;IAEO,mBAAmB;;cACjB,MAAM,qBAAO,IAAI,CAAC,SAAS,CAAC;;cAC5B,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC;;cACzC,EAAE,GAAG,EAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAC;QAE/D,IAAI,GAAG,KAAK,cAAc,CAAC,KAAK,IAAI,GAAG,KAAK,cAAc,CAAC,QAAQ,EAAE;YACjE,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;YACnB,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC;SAClB;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,EAAE,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,KAAK,GAAG,KAAK,cAAc,CAAC,KAAK,IAAI,GAAG,KAAK,cAAc,CAAC,QAAQ,EAAE;YACrH,OAAO,EAAE,CAAC;SACb;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAClB,OAAO,EAAE,CAAC;SACb;aAAM;;kBACG,GAAG,GAAG,QAAQ,CAAC,EAAE,GAAG,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC;YAC/C,IAAI,GAAG,KAAK,cAAc,CAAC,KAAK,IAAI,GAAG,KAAK,cAAc,CAAC,QAAQ,EAAE;gBACjE,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;gBACnB,OAAO,MAAM,CAAC;aACjB;iBAAM;gBACH,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,IAAI,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,EAAE,EAAE;oBAC7E,OAAO,EAAE,CAAC;iBACb;aACJ;SACJ;QAED,OAAO,MAAM,CAAC;KACjB;;;;;;IAED,cAAc,CAAC,QAAsB,EAAE,MAAkB;QACrD,MAAM,CAAC,eAAe,EAAE,CAAC;;cACnB,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACnC,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,KAAK,SAAS,EAAE;YACxC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;SAChC;QAED,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACjC;QAED,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KAC3B;;;;;IAED,YAAY,CAAC,MAAkB;QAC3B,IAAI,IAAI,CAAC,mBAAmB,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACtD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEhC,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACjC;KACJ;;;;;IAEO,sBAAsB;QAC1B,IAAI,IAAI,CAAC,yBAAyB,CAAC,EAAE;YACjC,YAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;SACjD;QACD,IAAI,CAAC,yBAAyB,CAAC,GAAG,UAAU;;;QAAC;YACzC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;SACjC,GAAE,EAAE,CAAC,CAAC;KACV;;;YAhKJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,+1MAAgD;yBAE5C;;;;UAIE;aAET;;;;YAdyB,QAAQ;YAAa,iBAAiB;YALlC,WAAW;;;wBAqBpC,KAAK;uBACL,KAAK;wBAEL,KAAK;4BAQL,KAAK;8BAEL,MAAM;gCAEN,MAAM;;;;;;;ACpCX,MA4Ca,uBAAuB;;;;;;IAiBhC,YAAoB,MAAgB,EAAU,EAAqB,EAAU,IAA8B;QAAvF,WAAM,GAAN,MAAM,CAAU;QAAU,OAAE,GAAF,EAAE,CAAmB;QAAU,SAAI,GAAJ,IAAI,CAA0B;QAZlG,SAAI,GAAG,EAAE,CAAC;QACV,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,EAAE,CAAC;QAKlB,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QAE3C,YAAO,GAAG,KAAK,CAAC;QACR,iBAAY,GAAG,EAAE,CAAC;KAEsF;;;;IAEhH,QAAQ;QACJ,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5C;;;;IAED,eAAe;QACX,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;YACnC,UAAU;;;YAAC;gBACP,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;aAC3B,EAAC,CAAC;SACN;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;;;;;;;IAEO,QAAQ,CAAC,OAAO,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI;QACxC,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG;;;;YAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClF;aAAM;YACH,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC5B;QACD,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;KACJ;;;;;IAED,eAAe,CAAC,MAAM;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KAC3B;;;;;IAED,QAAQ,CAAC,MAAM;QACX,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;;;;;IAEO,mBAAmB;QACvB,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;YACnC,OAAO;SACV;QACD,IAAK,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YACrE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;SACnD;aAAM;YACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;SAClD;KACJ;;;;;IAED,YAAY,CAAC,MAAM;QACf,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QAChE,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;;;;;IAEO,cAAc;;cACZ,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC;QAC7C,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;gBAChD,OAAO;aACV;;kBACK,SAAS,GAAoB;gBAC/B,SAAS,EAAE,cAAc,CAAC,EAAE;gBAC5B,MAAM,EAAE,MAAM;aACjB;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;aAAM;;;YAGH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;SACnD;KACJ;;;;;;IAED,oBAAoB,CAAC,MAAM,EAAE,QAAQ,GAAG,IAAI;QACxC,IAAI,MAAM,EAAE;;kBACF,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;;gBACpC,MAAM,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;YACtE,IAAI,QAAQ,EAAE;gBACV,IAAI,MAAM,CAAC,SAAS;;;;gBAAE,CAAC,IAAI,CAAC,IAAI,GAAG,EAAC,KAAK,CAAC,CAAC,EAAE;oBACzC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACpB;aACJ;iBAAM;gBACH,MAAM,GAAG,MAAM,CAAC,MAAM;;;;gBAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAC,CAAC;aACzC;YAED,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEvC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;SAC3B;KACJ;;;;;IAED,YAAY,CAAC,MAAM;;cACT,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;;;IAEO,gBAAgB;QACpB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM;;;;YAAC,CAAC;gBAClC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7D,EAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC5C;KACJ;;;;IAED,UAAU;QACN,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;QAChD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;KAC3B;;;YAlLJ,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgCT;gBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACxC;;;;YA1CkB,QAAQ;YAAqB,iBAAiB;YAIxD,wBAAwB;;;yBAwC5B,KAAK;wBACL,KAAK;sBACL,KAAK;6BACL,KAAK;mBACL,KAAK;yBACL,KAAK;4BACL,KAAK;qBAEL,SAAS,SAAC,QAAQ;+BAClB,SAAS,SAAC,IAAI;0BAEd,MAAM;;;;;;;ACxDX,MAUa,qBAAqB;IAC9B,iBAAiB;;;;IAEjB,QAAQ,MAAY;;;YAXvB,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;KAIT;aACJ;;;;;;;;;ACTD;AAyBA,MAAa,iBAAiB,GAAG,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,kBAAkB,EAAG;AAyC5F,MAAa,uBAAuB;;;;IAChC,OAAO,OAAO;QACV,OAAO;YACH,QAAQ,EAAE,uBAAuB;YACjC,SAAS,EAAE;gBACP,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,kBAAkB,EAAG;aAC9D;SACJ,CAAC;KACL;;;YA/CJ,QAAQ,SAAC;gBACN,YAAY,EAAE;oBACV,kBAAkB;oBAClB,yBAAyB;oBACzB,sBAAsB;oBACtB,uBAAuB;oBACvB,uBAAuB;oBACvB,uBAAuB;oBACvB,wBAAwB;oBACxB,qBAAqB;oBACrB,wBAAwB;iBAC3B;gBACD,OAAO,EAAE;oBACL,YAAY;oBACZ,WAAW;oBACX,mBAAmB;oBACnB,cAAc;oBACd,sBAAsB;oBACtB,mBAAmB;oBACnB,cAAc;oBACd,gBAAgB;oBAChB,YAAY,CAAC,OAAO,EAAE;oBACtB,iBAAiB;oBACjB,kBAAkB;iBACrB;gBACD,eAAe,EAAE;oBACb,kBAAkB;oBAClB,sBAAsB;oBACtB,uBAAuB;oBACvB,wBAAwB;oBACxB,uBAAuB;oBACvB,uBAAuB;oBACvB,wBAAwB;oBACxB,qBAAqB;iBACxB;gBACD,OAAO,EAAE;oBACL,kBAAkB;iBACrB;aACJ;;;;;"}