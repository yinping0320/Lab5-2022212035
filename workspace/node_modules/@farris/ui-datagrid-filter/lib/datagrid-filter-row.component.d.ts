import { Subscription } from 'rxjs';
import { DatagridFilterRowService } from './datagrid-filter-row.service';
import { OnInit, AfterViewInit, ElementRef, Renderer2, NgZone, EventEmitter, OnDestroy, Injector, QueryList, ChangeDetectorRef } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import { DataColumn, DatagridComponent } from '@farris/ui-datagrid';
import { FilterCellEditorDirective } from './datagrid-filter-cell-editor.directive';
export declare class FilterRowComponent implements OnInit, AfterViewInit, OnDestroy {
    private fb;
    private el;
    private ngzone;
    private cd;
    dfrs: DatagridFilterRowService;
    private render;
    private inject;
    fixedLeft: boolean;
    fixedRight: boolean;
    columns: DataColumn[];
    /** datagrid Instance */
    gridInstance: DatagridComponent;
    delay: number;
    conditionChange: EventEmitter<{}>;
    editors: QueryList<FilterCellEditorDirective>;
    filterRowConditionsScribe: Subscription;
    form: FormGroup;
    tr: HTMLTableRowElement;
    constructor(fb: FormBuilder, el: ElementRef, ngzone: NgZone, cd: ChangeDetectorRef, dfrs: DatagridFilterRowService, render: Renderer2, inject: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    createControl(): FormGroup;
    clearFilterValue(emitEvent?: boolean): void;
    removeField(field: string, opts?: {
        emitEvent: boolean;
    }): void;
}
