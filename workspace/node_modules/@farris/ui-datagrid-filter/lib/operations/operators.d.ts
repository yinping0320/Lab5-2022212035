/**
 * 服务器端支持比较操作
 *  Equal(0),
    NotEqual(1),
    Greater(2),
    GreaterOrEqual(3),
    Less(4),
    LessOrEqual(5),
    Like(6),
    LikeStartWith(7),
    LikeEndWith(8),
    NotLike(9),
    NotLikeStartWith(10),
    NotLikeEndWith(11),
    Is(12),
    IsNot(13),
    In(14),
    NotIn(15),
    LikeIgnoreCase(16);
 */
export declare enum FilterOperator {
    Equal = 0,
    NotEqual = 1,
    Greater = 2,
    GreaterOrEqual = 3,
    Less = 4,
    LessOrEqual = 5,
    Contains = 6,
    NotContains = 9,
    In = 14,
    NotIn = 15,
    Empty = 1001,
    NotEmpty = 1002,
    Null = 1003,
    NotNull = 1004
}
export declare enum FilterConditionValue {
    All = "",
    Empty = "null"
}
export interface FilterEnumSetting {
    valueField?: string;
    textField?: string;
    data?: any[];
    idField?: string;
}
export interface FilterRowOperator {
    code: FilterOperator;
    label: string;
    isDefault: boolean;
}
export interface FilterCondition {
    operator1?: FilterOperator;
    value1?: any;
    relation?: 'and' | 'or' | '';
    operator2?: FilterOperator;
    value2?: any;
}
export declare type ColumnConditionType = FilterCondition | FilterConditionValue | string;
export interface ColumnFilterCondition {
    [fieldName: string]: ColumnConditionType;
}
export interface FilterData {
    filterField: string;
    value: string;
    lbracket?: string;
    rbracket?: string;
    relation?: any;
    compare?: any;
}
export declare const AllFilterOperator: {
    [FilterOperator.Equal]: string;
    [FilterOperator.NotEqual]: string;
    [FilterOperator.Greater]: string;
    [FilterOperator.GreaterOrEqual]: string;
    [FilterOperator.Less]: string;
    [FilterOperator.LessOrEqual]: string;
    [FilterOperator.Contains]: string;
    [FilterOperator.NotContains]: string;
    [FilterOperator.NotEmpty]: string;
    [FilterOperator.Empty]: string;
};
/** 文本操作符 */
export declare const TextFilterOperators: FilterRowOperator[];
/** 日期或数字操作符 */
export declare const NumberOrDateFilterOperators: FilterRowOperator[];
