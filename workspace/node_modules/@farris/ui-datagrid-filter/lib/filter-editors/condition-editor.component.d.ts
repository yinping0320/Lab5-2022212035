import { FormBuilder, FormGroup } from '@angular/forms';
import { ColumnFilterType } from '@farris/ui-datagrid';
import { Subscription } from 'rxjs';
import { OnInit, OnChanges, SimpleChanges, EventEmitter, Injector, OnDestroy, ChangeDetectorRef, AfterViewInit } from '@angular/core';
import { FilterRowOperator, FilterCondition, FilterOperator } from '../operations/operators';
export declare class ConditionEditorComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {
    private inject;
    private cd;
    private fb;
    operators: FilterRowOperator[];
    datatype: ColumnFilterType;
    condition: FilterCondition;
    filterOptions: any;
    conditionChange: EventEmitter<{}>;
    panelHeightChange: EventEmitter<{}>;
    emptyCondition: {
        operator1?: FilterOperator;
        value1?: any;
        relation?: "" | "and" | "or";
        operator2?: FilterOperator;
        value2?: any;
    };
    formValueChangesSubscription: Subscription;
    originalCondition: FilterCondition;
    form: FormGroup;
    private emptyConditonString;
    constructor(inject: Injector, cd: ChangeDetectorRef, fb: FormBuilder);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private emitConditionChange;
    ngAfterViewInit(): void;
    private checkFilterOperator;
    chooseRelation(relation: 'and' | 'or', $event: MouseEvent): void;
    resetFilters($event: MouseEvent): void;
    private emitPanelHeightChanged;
}
