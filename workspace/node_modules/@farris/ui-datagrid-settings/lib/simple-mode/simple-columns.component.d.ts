import { ChangeDetectorRef, EventEmitter, Injector, OnInit, ElementRef, AfterViewInit } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
import { DatagridComponent } from '@farris/ui-datagrid';
import { ColumnTreeOptions, SettingModel } from '../setting.model';
import { ColumnTreeComponent } from '../multi-headers/column-tree.component';
import { DatagridSchemeService } from '../datagrid-scheme.service';
export declare class SimpleColumnsComponent implements OnInit, AfterViewInit {
    private injector;
    cd: ChangeDetectorRef;
    enableScheme: boolean;
    seartTypes: any;
    /** 所有列 */
    columns: any[];
    /** 显示的列 */
    fields: any[];
    /** 点击侧边样式以外的区域隐藏面板。默认为 true */
    clickToHidden: boolean;
    top: number;
    private _schemeList;
    schemeList: any[];
    cls: string;
    container: ElementRef;
    btnOk: ElementRef;
    searchInput: ElementRef;
    schemeitemsEleRef: ElementRef;
    btnRef: ElementRef;
    multiHeaderRef: ColumnTreeComponent;
    formatChange: EventEmitter<{}>;
    fieldsChange: EventEmitter<{}>;
    submit: EventEmitter<{}>;
    /** 分组表头确定事件 */
    submitForGroupHeader: EventEmitter<{}>;
    closed: EventEmitter<{}>;
    advanced: EventEmitter<{}>;
    canceld: EventEmitter<{}>;
    addNewScheme: EventEmitter<{}>;
    showSchemeList: EventEmitter<{}>;
    activeItemChange: EventEmitter<{}>;
    schemeChanged: EventEmitter<{}>;
    allCols: any[];
    columnType: string;
    gridInstance: DatagridComponent;
    localeSer: LocaleService;
    isEn: boolean;
    showSchemePanel: boolean;
    switchValue: boolean;
    currentSchemeItem: any;
    searchResultIsVisibleAll: {
        checkAll: boolean;
        unCheckAll: boolean;
    };
    defaultSchemeName: string;
    /** 配置多表头相关设置 */
    multiHeaderOptions: Partial<ColumnTreeOptions>;
    enableMultipleHeaders: boolean;
    private messager;
    private notify;
    private prevSchemeItem;
    settings: SettingModel;
    schemeSer: DatagridSchemeService;
    noDisplyColumnTip: string;
    constructor(injector: Injector, cd: ChangeDetectorRef);
    onClick($event: MouseEvent): void;
    onEscKeydown($event: any): void;
    onEnterKeydown($event: any): void;
    onControlGKeydown($event: KeyboardEvent): void;
    private getCurrentSchemeSettings;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private getViewColumns;
    private _getViewColumns;
    filterColumns(searchWords?: string): void;
    private seachResultIsCheckAll;
    private onFieldsChanged;
    onDblClick($event: any, col: any): void;
    onCheckboxClick($event: any, col: any): void;
    searchColumn($event: any): void;
    onFieldDrop(fieldInfo: any, txt: any, ulElRef: any): void;
    /**
     * 0: 1个也没有选中； 1: 全部选中； 2: 有选中的也有没选中的
     */
    private getCheckAllState;
    onCheckAllClick($event: MouseEvent, txt: any): void;
    close($event?: MouseEvent): void;
    cancel($event?: MouseEvent): void;
    showAdvanced($event: any): void;
    onSettingReset($event?: any): void;
    resetToDefault(): void;
    private _reset2DefalutFormMultiHeaders;
    private _reset2Default;
    private getCurrentSettings;
    onSubmitClick($event?: any): void;
    collectSettings(): {
        columnFormat?: import("@farris/ui-datagrid").DataColumn[];
        viewColumns?: string[];
        groupField?: string | string[];
        sortInfo?: {
            sortName?: string[];
            sortOrder?: string[];
        };
        expandGroupRows?: boolean;
        multiHeaders?: {
            viewCols: Partial<import("@farris/ui-datagrid").DataColumn>[][];
            treeData: import("@farris/ui-treetable").TreeNode[];
        };
    };
    onChooseScheme($event: any): void;
    onlySeeVisibleColumns($event: any, searchWords: any): void;
    refresh(): void;
    hidePanel(): void;
    onNewSchemeClick($event: any, saveas?: string): void;
    onShowSchemeList($event: any): void;
    private schemeChangedForSingleHeader;
    private schemeChangedForMultiHeaders;
    onSchemeItemClick($event: any, item: any): void;
    /** 多表头默认设置 */
    private defaultSettings;
    dirtySettings(flag: any): void;
    clearSearch($event: any, input: any): void;
}
