import { DataColumn } from '@farris/ui-datagrid';
import { TreeNode } from '@farris/ui-treetable';
export interface SettingModel {
    columnFormat?: DataColumn[];
    viewColumns?: string[];
    groupField?: Array<string> | string;
    sortInfo?: {
        sortName?: string[];
        sortOrder?: string[];
    };
    expandGroupRows?: boolean;
    multiHeaders?: {
        viewCols: Array<Array<Partial<DataColumn>>>;
        treeData: Array<TreeNode>;
    };
}
export interface DatagridSchemeModel {
    id?: string;
    /** 表单中记录Datagrid方案列表的ID，理解为类别，获取Datagrid 方案列表时根据此ID进行查询 */
    belongId: string;
    code?: string;
    /** 是否为默认， 1 默认，0 非默认 */
    isDefault?: boolean;
    /** 是否为系统预制 */
    isSystem?: boolean;
    type?: 'private' | 'public' | 'org';
    /** 方案名称 */
    name: string;
    /** 方案内容JSON串 */
    queryConditionString?: string;
    /** 创建人 */
    userId?: string;
    userName?: string;
    userCode?: string;
    extendId?: string;
    /** 用于存放组织公共配置属于哪些组织，以组织选择组件的返回值为准 */
    extendInfo?: any[];
}
export interface SetPublicSchemeModel {
    id: string;
    businessId: string;
    code: string;
    name: string;
}
export interface SetOrgAuthSchemeModel {
    id: string;
    code: string;
    name: string;
}
export interface SchemeAuthModel {
    success: boolean;
    errorMessage?: any;
    authOperationData: SetPublicSchemeModel[];
    authOrganizationData: SetOrgAuthSchemeModel[];
    currentUserId?: string;
}
export interface BatchScheme {
    belongId: string;
    defaultId: string;
    deletedIds: string[];
}
export interface SchemeState {
    list?: DatagridSchemeModel[];
    current?: null;
}
export interface DgSchemeState {
    [gridId: string]: SchemeState;
}
export interface ColumnTreeOptions {
    columns?: Array<Array<Partial<DataColumn>>>;
    treeData?: Array<TreeNode>;
}
export declare const IS_MULTI_HEADER_STRING = "-$MULTIHEADER$";
