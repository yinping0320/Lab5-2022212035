{"version":3,"file":"farris-ui-datagrid-settings.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid-settings/lib/multi-headers/new-header.component.ts","ng://@farris/ui-datagrid-settings/lib/multi-headers/setcolumns.component.ts","ng://@farris/ui-datagrid-settings/lib/mutli-headers.helper.ts","ng://@farris/ui-datagrid-settings/lib/multi-headers/column-tree.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-format-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.component.ts","ng://@farris/ui-datagrid-settings/lib/getValueWithLocaleId.ts","ng://@farris/ui-datagrid-settings/lib/simple-mode/simple-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/setting.model.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-scheme.service.ts","ng://@farris/ui-datagrid-settings/lib/scheme/newscheme.component.ts","ng://@farris/ui-datagrid-settings/lib/scheme/scheme-list.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings-locale.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.service.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-sort-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-visible-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/dbl-click.directive.ts","ng://@farris/ui-datagrid-settings/lib/multi-headers/preview/preview-multi-headers.component.ts","ng://@farris/ui-datagrid-settings/lib/multi-headers/preview/show-preview.directive.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'group-header-form',\r\n    template: `\r\n    <div class=\"d-flex flex-row\" style=\"align-items: center;height: 100%;\">\r\n        <span style=\"width: 90px;text-align: right;\">{{label}}</span>\r\n        <input #txt placeholder=\"{{placeholder}}\" type=\"text\" [(ngModel)]=\"title\" class=\"form-control ml-2\" style=\"width: 210px\">\r\n    </div>\r\n    `,\r\n})\r\nexport class NewHeaderFormComponent implements OnInit {\r\n    @Input() label = 'è¡¨å¤´åç§°'\r\n    @Input() title: string;\r\n    @Input() placeholder = \"è¾å¥è¡¨å¤´åç§°\"\r\n\r\n    @ViewChild('txt') input: ElementRef<any>\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'set-columns',\r\n    templateUrl: './setcolumns.component.html'\r\n})\r\nexport class SetColumnsComponent implements OnInit {\r\n\r\n    @Input() data = [];\r\n    @Input() checkedItems = [];\r\n\r\n    selectedIds: string[] = []\r\n    constructor() {}\r\n\r\n    ngOnInit() {\r\n        this.selectedIds = (this.checkedItems || []).map(n => n.id);\r\n        if (this.data) {\r\n            this.data.forEach(item => {\r\n                if (!item.id) {\r\n                    item.id = item.field;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import { cloneDeep, flatten } from \"lodash-es\";\r\n\r\n\r\nfunction _setColumnId(c) {\r\n    c.id = c.id || c.field;\r\n    if (c.colspan && c.colspan > 1) {\r\n        c.groupHeader = true;\r\n        c.id = 'groupHeader_'+ c.id;\r\n    }\r\n}\r\n\r\n\r\nfunction _columnsToTreeNodes2(node, cols) {\r\n\tif (node.data.colspan) {\r\n        if (cols[node.level + 1] && cols[node.level + 1].length) {\r\n            var i = 0;\r\n            do {\r\n                let col = cols[node.level + 1].splice(0, 1)[0];\r\n                i += col.colspan || 1;\r\n                _setColumnId(col);\r\n                const child = { data: col, children: [], level: node.level + 1, expanded: true, visible: true };\r\n                node.children.push(child);\r\n\r\n                if (col.colspan && col.colspan > 1) {\r\n                    _columnsToTreeNodes2(child, cols);\r\n                }\r\n\r\n            } while(i< node.data.colspan && cols[node.level + 1].length)\r\n        }\r\n    }\r\n}\r\n\r\n/** å°å¤è¡¨å¤´åä¿¡æ¯ï¼è½¬æ¢ä¸ºæ ç»æ */\r\nexport function columnsToTreeNodes(cols) {\r\n\tvar nodes = [];\r\n\tcols[0].filter(n => n.field !== '_datagrid-setting-control_').forEach(c => {\r\n        _setColumnId(c);\r\n\t    var node = { data: c, children: [], level: 0, expanded: true, visible: true };\r\n\t    nodes.push(node);\r\n\t});\r\n    nodes.forEach(n => {\r\n    \t_columnsToTreeNodes2(n, cols);\r\n    });\r\n\r\n    return nodes;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// å¤è¡¨å¤´åè®¾ç½®æ¢å¤é»è®¤\r\nexport const reset2DefaultForMultiHeaders = (gridInstance) => {\r\n    const options = gridInstance.dfs['_state'].initialOptions;\r\n    const settings: any = {\r\n        viewColumns: [],\r\n        columnFormat: []\r\n    };\r\n\r\n    if (options.sort) {\r\n        const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n        const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n        settings.sortInfo = { sortName: sortNames, sortOrder:  sortOrders };\r\n    } else {\r\n        settings.sortInfo = {};\r\n    }\r\n    settings.groupField =  options.groupField ? options.groupField.split(',') : [];\r\n    settings.expandGroupRows = !!options.expandGroupRows;\r\n\r\n    settings.multiHeaders = {\r\n        treeData: null,\r\n        viewCols: []\r\n    };\r\n\r\n    return {\r\n        settings,\r\n        multiHeaderOptions: {\r\n            columns: options.groupHeaderFields,\r\n            treeData: null\r\n        }\r\n    }\r\n}\r\n\r\n/** ä¸ºæ°çå±ç¤ºååå¹¶ååä¸­çè®¾ç½®ï¼å¦ æ ¼å¼åï¼ååæ ¼æ ·å¼ãæ¨¡æ¿ */\r\nexport function mergetColumnOptions(viewCols: any, gridInitOptions: any) {\r\n    if (viewCols && gridInitOptions) {\r\n        const dataFields = flatten(gridInitOptions['designerColumns']);\r\n        const _cols = cloneDeep(viewCols).map((cols: any) => {\r\n            return cols.map((col: any) => {\r\n\r\n                if (!col.field || col.field.indexOf('farris-datagrid-column_') > -1) {\r\n                    col.filter = false;\r\n                }\r\n\r\n                if (!col.colspan || col.colspan === 1) { // æ°æ®å­æ®µ\r\n                    const old = dataFields.find((n: any) => n.field === col.field || n.field === col.id);\r\n                    if (old) {\r\n                        const _col = Object.assign({},old, col);\r\n                        if (!col.colspan) {\r\n                            delete _col.colspan;\r\n                        }\r\n                        if (!_col.rowspan) {\r\n                            delete _col.rowspan;\r\n                        }\r\n\r\n                        return _col;\r\n                    }\r\n                }\r\n                return col;\r\n            }).filter(n => n)\r\n        });\r\n\r\n        return _cols;\r\n    }\r\n}\r\n\r\n\r\nexport function refreshGridColumns(gridInstance: any, newColumns: any) {\r\n    if(!gridInstance) {\r\n        return;\r\n    }\r\n    const gridInitOptions = gridInstance.dfs['_state'].initialOptions;\r\n    if (newColumns && gridInitOptions) {\r\n        gridInstance.columns = mergetColumnOptions(newColumns, gridInitOptions)\r\n    }\r\n}\r\n\r\n/** å°æåºä¿¡æ¯åå¹¶å°åä¸ */\r\nexport function  mergeSortInfo(newColumns: any, sortInfo: any) {\r\n    if (sortInfo && Object.keys(sortInfo).length) {\r\n        const { sortName, sortOrder } = sortInfo;\r\n        if (sortName && sortName.length) {\r\n            newColumns.forEach((cols: any) => {\r\n                cols.forEach((col: any) => {\r\n                    const i = sortName.indexOf(col.field);\r\n                    if (i > -1) {\r\n                        col.sortable = true;\r\n                        col.order = sortOrder[i] || 'asc';\r\n                    } else {\r\n                        col.order = '';\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function multiHeadersHasDataFields(multiHeaderColumns: any) {\r\n    if (multiHeaderColumns && multiHeaderColumns.length) {\r\n        return flatten(multiHeaderColumns).filter((n: any) => n.field &&( !n.colspan || n.colspan === 1) ).length;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport function getDataFieldsForMultiHeaders(groupHeaderCols) {\r\n    return flatten(groupHeaderCols).filter((n: any) => n.field && ( !n.colspan || n.colspan === 1));\r\n}\r\n\r\n\r\nexport function cleanGroupFields(viewCols: any, groupFields: any) {\r\n    const cols: any = getDataFieldsForMultiHeaders(viewCols);\r\n    const groupColumns = groupFields.map( f => {\r\n        const col = cols.find(col => col.field === f);\r\n        return col;\r\n    }).filter(n => n);\r\n\r\n    return groupColumns.map(n => n.field);\r\n}\r\n\r\n\r\nexport function cleanSortFields(viewCols: any, sortInfo: { sortName: [], sortOrder: [] }) {\r\n    const cols: any = getDataFieldsForMultiHeaders(viewCols);\r\n    const sortNames = sortInfo.sortName.map( (f, i) => {\r\n        const col = cols.find(col => col.field === f);\r\n        if (!col) {\r\n            sortInfo.sortOrder.splice(i, 1);\r\n        }\r\n        return col;\r\n    }).filter(n => n);\r\n\r\n    return {\r\n        sortName: sortNames.map(n => n.field),\r\n        sortOrder: sortInfo.sortOrder\r\n    };\r\n}","import { AfterViewInit, ChangeDetectorRef,EventEmitter, Component, ElementRef, Injector, Input, NgZone, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation } from \"@angular/core\";\r\n\r\nimport { of } from \"rxjs\";\r\n\r\nimport { BsModalService } from \"@farris/ui-modal\";\r\nimport { RowNode, TreeNode, TreeTableComponent } from \"@farris/ui-treetable\";\r\nimport { OverLayHiddenService } from '@farris/ui-common';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { DatagridComponent, DataColumn } from '@farris/ui-datagrid';\r\n\r\nimport { NewHeaderFormComponent } from \"./new-header.component\";\r\nimport { SetColumnsComponent } from \"./setcolumns.component\";\r\nimport { columnsToTreeNodes } from \"../mutli-headers.helper\";\r\nimport { cloneDeep, flatten } from \"lodash-es\";\r\nimport { ColumnTreeOptions } from \"../setting.model\";\r\nimport { LocaleService } from \"@farris/ui-locale\";\r\n\r\n\r\n@Component({\r\n    selector: 'column-tree',\r\n    styleUrls: ['./column-tree.scss'],\r\n    templateUrl: './column-tree.component.html',\r\n    exportAs: 'groupHeaderTree',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnTreeComponent implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n\r\n    @Input() dg: DatagridComponent;\r\n    @Input() options: Partial<ColumnTreeOptions> = {};\r\n\r\n    @Input() inModal = false;\r\n\r\n    @Output() nodeSelected = new EventEmitter<any>();\r\n    \r\n    @ViewChild('nodeTemplate') cellTemp: TemplateRef<any>\r\n    @ViewChild('tt') tt: TreeTableComponent;\r\n    \r\n    fields = [];\r\n    treecols = [];\r\n    treeData = [];\r\n    contextMenus = [];\r\n\r\n    /** å¼ __HOU_XUAN_LIE_ID__ */\r\n    HOU_XUAN_LIE_ID = '__HOU_XUAN_LIE_ID__';\r\n\r\n\r\n    GROUP_HEADER_ICON = 'f-icon f-icon-file-folder-close';\r\n\r\n    Hou_Xuan_Qu = { id: this.HOU_XUAN_LIE_ID, title: '(åéå)', houxuanquNode: true };\r\n\r\n\r\n    languageRes = {\r\n        title: 'å¤è¡¨å¤´',\r\n        preview: 'é¢è§ææ',\r\n        tips: 'å¨ï¼åéåï¼ä¸­çå­æ®µï¼å°ä¸å¨åè¡¨ä¸­æ¾ç¤º; ç¹å»å­æ®µåç§°ï¼å¨å³ä¾§æ¾ç¤ºç¸å³æä½æé®ã',\r\n        contextMenus: {\r\n            new: 'æ°å»ºè¡¨å¤´',\r\n            newChild: 'æ°å»ºå­çº§è¡¨å¤´',\r\n            setDataField: 'åéæ°æ®å',\r\n            rename: 'éå½å',\r\n            top: 'ç½®é¡¶',\r\n            up: 'ä¸ç§»',\r\n            down: 'ä¸ç§»',\r\n            bottom: 'ç½®åº',\r\n            cancelGroup: 'åæ¶åç»',\r\n            remove: 'å¨åç»åç§»é¤'\r\n        },\r\n        candidate: '(åéå)',\r\n        setHeader: 'è®¾ä¸ºè¡¨å¤´',\r\n        ok: 'ç¡®å®',\r\n        cancel: 'åæ¶',\r\n        required: 'è¯·è¾å¥è¡¨å¤´åç§°ï¼',\r\n        defaultGroupHeaderName: 'åç»è¡¨å¤´1',\r\n        newHeaderPlaceholder: 'è¯·è¾å¥åç§°',\r\n        newHeaderLabel: 'è¡¨å¤´åç§°'\r\n    }\r\n\r\n    private localeSer: LocaleService = null;\r\n    constructor(private injector: Injector, private ngzone: NgZone, private cd: ChangeDetectorRef, private render: Renderer2,\r\n        private modalService: BsModalService, private el: ElementRef,\r\n        private notitySer: NotifyService) {\r\n            this.localeSer = this.injector.get(LocaleService, null);\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        const groupHeaders = this.dg.dfs['_state'].initialOptions.groupHeaderFields;\r\n        const allDataFields = flatten<DataColumn>(groupHeaders).filter((col: DataColumn) => !col.colspan || col.colspan == 1);\r\n        this.fields = allDataFields.filter(n => n.field && n.field !== this.dg.ControlPanelFeild);\r\n\r\n        // æ ç»ä»¶åä¿¡æ¯\r\n        this.treecols = [\r\n            { field: 'title', title: 'åç§°', template: this.cellTemp }\r\n        ];\r\n\r\n        this.languageRes = this.localeSer.getValue('headerGroup');\r\n        this.Hou_Xuan_Qu.title = this.languageRes.candidate;\r\n\r\n        this.initTreeData();\r\n\r\n        this.initTreenodeContextMenus();\r\n        this.listenTreeTableEvent();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.options && !changes.options.isFirstChange()) {\r\n            this.initTreeData();\r\n            this.tt.clearSelections();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n\r\n    private listenTreeTableEvent() {\r\n        this.tt.removed.subscribe(rowNode => {\r\n\r\n            if (rowNode && rowNode.parent) {\r\n                rowNode.parent.leaf = !(rowNode.parent.children && rowNode.parent.children.length);\r\n                if (rowNode.parent.leaf) {\r\n                    rowNode.parent.icon = this.GROUP_HEADER_ICON;\r\n                }\r\n            }\r\n\r\n            if (!rowNode.node.data.groupHeader) {\r\n                const hxl = this.getHouXuanNode();\r\n\r\n                if (!rowNode.parent) {\r\n                    this.treeData = this.treeData.filter(n => n.data.id !== rowNode.id);\r\n                }\r\n\r\n                this.tt.append(rowNode.node.data, hxl.node);\r\n            }\r\n\r\n          \r\n        });\r\n    }\r\n\r\n    private initTreenodeContextMenus() {\r\n        this.contextMenus = [\r\n            { id: 1, title: this.languageRes.contextMenus.new, icon: 'f-icon f-icon-add', \r\n                handle: (t) => {\r\n                    // console.log(t);\r\n                    this.addNewGroup(t.data, false);\r\n                }\r\n            },\r\n            { id: 2, title: this.languageRes.contextMenus.newChild, visible: (t: any) => {\r\n                    return this.isGroupHeader(t.data) && t.data.level + 1 < this.dg.maxMultiHeaders - 1;\r\n                },\r\n                handle: (t) => {\r\n                    this.addNewGroup(t.data, true);\r\n                }\r\n            },\r\n            { id: 3, title: this.languageRes.contextMenus.setDataField, visible: (t: any) => {return this.isGroupHeader(t.data) },\r\n                handle: (t) => {\r\n                    this.setColumnsForGroupHeader(null, t.data);\r\n                }\r\n            },\r\n            { id: 31, title: this.languageRes.contextMenus.rename, icon: 'f-icon f-icon-edit', \r\n                handle: (t) => {\r\n                    this.resetHeaderName(null, t.data);\r\n                }\r\n            },\r\n            '-',\r\n            {\r\n                id: 4, title: this.languageRes.contextMenus.top, icon: 'f-icon f-icon-roofing', \r\n                visible: (t: any) => {\r\n                    return this.moveMenuItemVisiblily(t.data);\r\n                },\r\n                handle: (t) => {\r\n                    this.moveTop(null, t.data);\r\n                }\r\n            },\r\n            {\r\n                id: 5, title: this.languageRes.contextMenus.up, icon: 'f-icon f-icon-arrow-chevron-up',\r\n                visible: (t: any) => {return this.moveMenuItemVisiblily(t.data)},\r\n                handle: (t) => {\r\n                    this.moveUp(null, t.data);\r\n                }\r\n            },\r\n            {\r\n                id: 6, title: this.languageRes.contextMenus.down, icon: 'f-icon f-icon-arrow-chevron-down',\r\n                visible: (t: any) => {return this.moveMenuItemVisiblily(t.data)},\r\n                handle: (t) => {\r\n                    this.moveDown(null, t.data);\r\n                }\r\n            },\r\n            {\r\n                id: 7, title: this.languageRes.contextMenus.bottom, icon: 'f-icon f-icon-bottomsetting',\r\n                visible: (t: any) => {return this.moveMenuItemVisiblily(t.data)},\r\n                handle: (t) => {\r\n                    this.moveBottom(null, t.data);\r\n                }\r\n            },\r\n            '-',\r\n            {\r\n                id: 8, title: this.languageRes.contextMenus.remove, icon: 'f-icon f-icon-minus',\r\n                visible: (t) => {\r\n                    return !t.data.node.data.houxuanquNode && !t.data.node.data.groupHeader;\r\n                },\r\n                handle: (t) => {\r\n                    this.tt.remove(t.data.id);\r\n                }\r\n            },\r\n            {\r\n                id: 9, title: this.languageRes.contextMenus.cancelGroup, icon: 'f-icon f-icon-x',\r\n                visible: (t) => {\r\n                    return t.data.node.data.groupHeader;\r\n                },\r\n                handle: (t) => {\r\n                    this.removeGroup(null, t.data);\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    /** ç§»å¨å½ä»¤é¡¹æ¯å¦æ¾ç¤º */\r\n    moveMenuItemVisiblily = (t: RowNode) => {\r\n        if (t) {\r\n            const rowData = t.node.data;\r\n            if (rowData) {\r\n                return rowData['id'] != this.HOU_XUAN_LIE_ID;\r\n            }\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isGroupHeader = (t: RowNode) => {\r\n        if (t) {\r\n            const rowData = t.node.data;\r\n            if (rowData) {\r\n                return !!rowData['groupHeader'];\r\n            }\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    initTreeData() {\r\n\r\n        if (this.options) {\r\n            const { treeData } = this.options;\r\n\r\n            if (treeData) {\r\n                this.treeData = treeData;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.options.columns && this.options.columns.length > 1) {\r\n            const _treeData = columnsToTreeNodes(cloneDeep(this.options.columns));\r\n            const houXuanLie = this.fields.filter(f => !flatten(this.options.columns).find(col => col.field === f.field)).map((a:any) => {\r\n                return {\r\n                    data: a,\r\n                    children: [],\r\n                    visible: true\r\n                }\r\n            });\r\n            _treeData.push({\r\n                data: this.Hou_Xuan_Qu,\r\n                children: houXuanLie,\r\n                expanded: true\r\n            });\r\n            this.treeData = _treeData;\r\n        } else {\r\n            this.treeData = [{\r\n                data: { id: 'groupHeader_1', title: this.languageRes.defaultGroupHeaderName, halign: 'left', groupHeader: true },\r\n                children: this.fields.map((n, i) => {\r\n                    n['index'] = i;\r\n                    n['id'] = n['field'];\r\n                    return {\r\n                        data: n,\r\n                        children: [],\r\n                        visible: true\r\n                    };\r\n                }),\r\n                icon: this.GROUP_HEADER_ICON,\r\n                expanded: true, visible: true\r\n            }, {\r\n                data: this.Hou_Xuan_Qu,\r\n                children: [],\r\n                expanded: true,\r\n                icon: this.GROUP_HEADER_ICON\r\n            }];\r\n        }\r\n    }\r\n\r\n    private getHouXuanNode() {\r\n        return this.tt.findRowNode(this.HOU_XUAN_LIE_ID);\r\n    }\r\n\r\n    onTreeSelected($event) {\r\n        this.nodeSelected.emit($event);\r\n    }\r\n\r\n    private showNewHeaderDialog(okCallback, dlgTitle) {\r\n        const modalRef = this.modalService.show(NewHeaderFormComponent, {\r\n            title: dlgTitle,\r\n            width: 340,\r\n            height: 190,\r\n            showMaxButton: false,\r\n            resizable: false,\r\n            initialState: {\r\n                title: '',\r\n                placeholder: this.languageRes.newHeaderPlaceholder,\r\n                label: this.languageRes.newHeaderLabel\r\n            },\r\n            buttons: [\r\n                {\r\n                    text: this.languageRes.cancel,\r\n                    cls: 'btn btn-secondary',\r\n                    handle: () => {\r\n                        modalRef.close();\r\n                    }\r\n                },\r\n                {\r\n                    text: this.languageRes.ok,\r\n                    cls: 'btn btn-primary',\r\n                    handle: okCallback\r\n                }\r\n            ]\r\n        });\r\n\r\n        return modalRef;\r\n    }\r\n\r\n    private generateGroupHeaderId() {\r\n        return `groupHeader_${new Date().getTime()}`;\r\n    }\r\n\r\n    private createNewGroupHeader(rn: RowNode, title: string, child = false) {\r\n        const ghid = this.generateGroupHeaderId();\r\n        const data = { id: ghid, title, groupHeader: true, halign: 'left', fixed: 'UNFIXED' };\r\n        const gh = {\r\n            data,\r\n            children: [],\r\n            expanded: true,\r\n            visible: true,\r\n            icon: this.GROUP_HEADER_ICON,\r\n        };\r\n        if (!child) {\r\n            if (!rn.parent) {\r\n                const i = this.treeData.findIndex(n => n.data.id === rn.id) + 1;\r\n                this.treeData.splice(i, 0, gh);\r\n                this.treeData = this.treeData.slice();\r\n            } else {\r\n                gh.data.fixed = rn.parent.data.fixed;\r\n                this.tt.appendChildren([gh], rn.parent);\r\n            }\r\n        } else {\r\n            gh.data.fixed = rn.node.data.fixed;\r\n            this.tt.appendChildren([gh], rn.node);\r\n        }\r\n    }\r\n\r\n    // å é¤åç»\r\n    removeGroup(event: MouseEvent, rowNode) {\r\n        if (this.tt.selectedRow && rowNode.id === this.tt.selectedRow.id) {\r\n            this.nodeSelected.emit(null);\r\n        }\r\n        const childs = this.tt.serializedValue.filter(n => n.parents.indexOf(rowNode.id) > -1 && !n.node.data.groupHeader).map(n => n.node);\r\n        this.treeData = this.treeData.filter(n => n.data.id !== rowNode.id);\r\n\r\n        this.tt.remove(rowNode.id);\r\n        this.tt.appendChildren(childs, this.getHouXuanNode().node);\r\n    }\r\n\r\n    // æ°å¢åç»\r\n    addNewGroup(rn: RowNode, child = false) {\r\n        const modalRef = this.showNewHeaderDialog(() => {\r\n            const ghfRef = modalRef.content as NewHeaderFormComponent;\r\n            if (ghfRef.title) {\r\n                if (!rn || rn.id === this.HOU_XUAN_LIE_ID) {\r\n                    this.treeData.splice(0, 0, {\r\n                        data: {\r\n                            id: this.generateGroupHeaderId(), halign: 'left',\r\n                            title: ghfRef.title, groupHeader: true, fixed: 'UNFIXED'\r\n                        },\r\n                        icon: this.GROUP_HEADER_ICON,\r\n                        children: []\r\n                    });\r\n                    this.tt.updateSerializedValue();\r\n                } else {\r\n                    this.createNewGroupHeader(rn, ghfRef.title, child);\r\n                }\r\n\r\n                modalRef.close();\r\n            } else {\r\n                this.notitySer.info(this.languageRes.required);\r\n                ghfRef.input.nativeElement.focus();\r\n            }\r\n       }, child? this.languageRes.contextMenus.newChild: this.languageRes.contextMenus.new);\r\n\r\n    }\r\n\r\n    // æ¾ç¤ºæ´æ°æé®\r\n    onMoreBtnClick($event: MouseEvent, nodeData) {\r\n        if (nodeData && nodeData.id) {\r\n            this.tt.selectNode(nodeData.id);\r\n        }\r\n        this.tt.ctxMenu.onContextMenu($event);\r\n    }\r\n\r\n    private getCanSelectColumns(rowNode: RowNode) {\r\n        // å¯åéå\r\n        // åéåºæ°æ® + å­èç¹\r\n\r\n        const hxl = this.getHouXuanNode();\r\n        let fields = rowNode ? rowNode.node.children : [];\r\n        fields = fields.filter((n: TreeNode) => !n.data.groupHeader)\r\n        return hxl.node.children.concat(fields).map(n => n.data);\r\n    }\r\n\r\n    private showSetColumnsDialog(okCallback, selectedItems, rowNode: RowNode) {\r\n        const modalRef = this.modalService.show(SetColumnsComponent, {\r\n            title: this.languageRes.contextMenus.setDataField,\r\n            width: 600,\r\n            height: 500,\r\n            showMaxButton: false,\r\n            resizable: false,\r\n            initialState: {\r\n                data: this.getCanSelectColumns(rowNode),\r\n                checkedItems: selectedItems,\r\n                groupEditorRef: this\r\n            },\r\n            buttons: [\r\n                {\r\n                    text: this.languageRes.cancel,\r\n                    cls: 'btn btn-secondary',\r\n                    handle: () => {\r\n                        modalRef.close();\r\n                    }\r\n                },\r\n                {\r\n                    text: this.languageRes.ok,\r\n                    cls: 'btn btn-primary',\r\n                    handle: () => {\r\n                        okCallback(modalRef.content.selectedIds)\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        return modalRef;\r\n    }\r\n\r\n    /** ä¸ºåç»è¡¨å¤´åéæ°æ®å */\r\n    setColumnsForGroupHeader($event, rowNode: RowNode) {\r\n        const childs = rowNode ? rowNode.node.children ? rowNode.node.children.map(n => n.data) : [] : [];\r\n        const modalRef = this.showSetColumnsDialog((selectedIds: string[]) => {\r\n            // åç»ä¸çå\r\n            const cols = selectedIds.map(n => {\r\n                return this.fields.find(f => f.field == n);\r\n            }).filter(n => n);\r\n            // åéåº\r\n            const hxl = this.getHouXuanNode();\r\n            // æ¸çåéæ°æ®ï¼å°å·²åéçåå¨åéåºç§»é¤\r\n            hxl.node.children = (hxl.node.children || []).filter(n => cols.findIndex(c => c.field == n.id) === -1);\r\n\r\n            // æ¥æ¾éè¦ç§»é¤ç\r\n            const needRemoveNodes = (rowNode.node.children || []).filter( (n) => {\r\n                return !n.data.groupHeader && cols.findIndex((c) => c.field === n.id) == -1\r\n            }).filter(n => n);\r\n\r\n            if (needRemoveNodes && needRemoveNodes.length) {\r\n                needRemoveNodes.forEach(n => {\r\n                    this.tt.remove(n.id);\r\n                });\r\n            }\r\n\r\n            // æ¥æ¾éè¦æ°å¢ç\r\n            const needAppendNodes = cols.filter(n =>  (rowNode.node.children || []).findIndex(c => c.id === n.field) === -1).map(n => {\r\n                if (!n.id) {\r\n                    n.id = n.field;\r\n                }\r\n                return n;\r\n            });\r\n            if (needAppendNodes && needAppendNodes.length) {\r\n                needAppendNodes.forEach(n => {\r\n                    const col = this.fields.find(f => f.field == n.field);\r\n                    if (col) {\r\n                        col.fixed =  rowNode.node.data.fixed;\r\n                    }\r\n                });\r\n\r\n                this.tt.appendChildren(needAppendNodes.map(n => {\r\n                    return {\r\n                        data: n,\r\n                        children: [],\r\n                        expanded: true\r\n                    };\r\n                }), rowNode.node);\r\n    \r\n                this.tt.expandNode(rowNode.id);\r\n            }\r\n\r\n            // æ´æ°å¾éåº\r\n            const hxlCols = needRemoveNodes.map(n => {\r\n                return {\r\n                    data: n.data,\r\n                    children: []\r\n                };\r\n            });\r\n            this.tt.appendChildren(hxlCols, hxl.node);\r\n\r\n            modalRef.close();\r\n        }, childs, rowNode);\r\n    }\r\n\r\n    // å°å¾éåºä¸­çæ°æ®åç´æ¥è®¾ä¸ºè¡¨å¤´\r\n    setColumnHeader(event: MouseEvent, col) {\r\n        const i = this.treeData.length - 1;\r\n        this.treeData.splice(i, 0, {  data: col, children: [] });\r\n\r\n        const hxl = this.getHouXuanNode();\r\n        if (hxl) {\r\n            hxl.node.children = hxl.node.children.filter(n => n.data.id !== col.id);\r\n            hxl.node.leaf = !(hxl.node.children && hxl.node.children.length);\r\n            if (hxl.node.leaf) {\r\n                hxl.node.icon = this.GROUP_HEADER_ICON;\r\n            }\r\n            this.tt.clearSelections();\r\n            this.tt.updateSerializedValue();\r\n            this.tt.selectNode(col.id, true);\r\n        }\r\n        \r\n    }\r\n    \r\n    moveUp(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        if (index !== 0) {\r\n            const tempArr = data.splice(index, 1);\r\n            data.splice(index - 1, 0, ...tempArr);\r\n\r\n            this.tt.updateSerializedValue();\r\n        }\r\n    }\r\n\r\n    moveDown(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        const len = data.length;\r\n\r\n        if (index !== len - 2) {\r\n            const tempArr = data.splice(index, 1);\r\n            data.splice(index + 1, 0, ...tempArr);\r\n            this.tt.updateSerializedValue();\r\n        } else {\r\n            this.moveBottom(event, rowNode);\r\n        }\r\n    }\r\n\r\n    moveTop(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        data.unshift(rowNode.node);\r\n        data.splice(index + 1, 1);\r\n        this.tt.updateSerializedValue();\r\n    }\r\n\r\n    moveBottom(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        data.push(rowNode.node);\r\n        data.splice(index, 1);\r\n\r\n        if (!rowNode.parent) {\r\n            this.moveUp(event, rowNode);\r\n        } else {\r\n            this.tt.updateSerializedValue();\r\n        }\r\n    }\r\n\r\n    /** è·åå¤è¡¨å¤´æ°æ® */\r\n    getPreviewGroupColumns() {\r\n        const treeNodes = this.getAllNodes();\r\n        return this.convert2Array(treeNodes); \r\n    }\r\n\r\n     /** è·ååéå */\r\n     getHouXuanFields() {\r\n        const hxl = this.treeData.find(n => n.data.houxuanquNode);\r\n        if (hxl) {\r\n            return hxl.children;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    private getAllNodes() {\r\n        const hxl = this.getHouXuanFields();\r\n        return this.tt.serializedValue.filter(n => {\r\n            return !n.node.data.houxuanquNode && hxl.findIndex(k => k.data.id === n.id) === -1;\r\n        });\r\n    }\r\n\r\n    /** å°æ èç¹æ°æ®è½¬æ¢ä¸º å¤è¡¨å¤´ç»æ */\r\n    convert2Array(rowNodes: RowNode[]) {\r\n        const r = [];\r\n        const maxBy = (arr, fn) => Math.max(...arr.map(typeof fn === 'function' ? fn : val => val[fn]));\r\n        const maxlevel = maxBy(rowNodes, (n) => n.level) ;\r\n        // æé¤æ²¡ææ°æ®å­æ®µçè¡¨å¤´\r\n        rowNodes = rowNodes.filter(n => (n.node.children&& n.node.children.length && n.node.data.groupHeader) || !n.node.data.groupHeader);\r\n\r\n        /**\r\n         * 1ãåªæä¸ç»è¡¨å¤´ï¼ä¸åºå®å¨å·¦ä¾§æå³ä¾§æ¶ï¼ææ åºå®åæ¹å¼å¤ç\r\n         * 2ãåªæå·¦ä¾§ãå³ä¾§åºå®åèæ²¡æå¶ä»æ­£å¸¸åæ¶ï¼åæ¶å³ä¾§åºå®å\r\n         * 3ãåªæå·¦ä¾§æå³ä¾§åºå®æ¶ï¼ææ åºå®åå¤ç\r\n         */\r\n        const parents = rowNodes.filter(e => !e.parent);\r\n        if (!parents.filter(n => !n.node.data.fixed || n.node.data.fixed === 'UNFIXED').length) {\r\n            const leftCols = parents.filter(n => n.node.data.fixed === 'left');\r\n            const rightCols = parents.filter(n => n.node.data.fixed === 'right');\r\n            if (leftCols.length == parents.length || rightCols.length == parents.length) {\r\n                rowNodes.forEach(n => {\r\n                    if (parents.find(p => p.id === n.id)) {\r\n                        n.node.data.fixed = ''\r\n                    }\r\n                });\r\n            } else {\r\n                if (rightCols.length === 1) {\r\n                    leftCols.forEach(t =>{\r\n                        rowNodes.forEach(n => {\r\n                            if (t.id === n.id) {\r\n                                n.node.data.fixed = ''\r\n                            }\r\n                        });\r\n                    });\r\n                } else {\r\n                    rightCols.forEach(t =>{\r\n                        rowNodes.forEach(n => {\r\n                            if (t.id === n.id) {\r\n                                n.node.data.fixed = ''\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i = 0; i <= maxlevel; i++ ) {\r\n            r.push(rowNodes.filter(n => n.level === i).map(n => {\r\n                const data = n.node.data;\r\n                const _fixed = n.parent ? this.tt.getRoot(n.id).node.data.fixed :  (data.fixed || '');\r\n\r\n\r\n                const _colspan = (n.node.children ? rowNodes.filter(k => k.parents.indexOf(n.id) > -1 && k.id.indexOf('groupHeader_') == -1).length : 1) || 1;\r\n                const _rowspan = (n.node.children && n.node.children.length > 0) ? 1 : (maxlevel - n.level + 1);\r\n\r\n                const newCol: any = {\r\n                    field: data.field,\r\n                    title: data.title,\r\n                    sortable: data.sortable,\r\n                    order: data.order,\r\n                    halign: data.halign || 'left',\r\n                    align: data.align || 'left',\r\n                    visible: true,\r\n                    allowGrouping: data.allowGrouping,\r\n                    groupFooter: data.groupFooter,\r\n                    footer: data.footer,\r\n                    width: (data.size ? data.size.width : 100),\r\n                    dataType: data.dataType || 'string',\r\n                    fixed: _fixed === 'UNFIXED'? '': _fixed,\r\n                    id: n.id,\r\n                    parentId: n.node.parent ? n.node.parent.id : null,\r\n                    rowspan: _rowspan,\r\n                    colspan: _colspan\r\n                };\r\n\r\n                const newCol2: any = {\r\n                    field: data.field,\r\n                    title: data.title,\r\n                    halign: data.halign || 'left',\r\n                    align: data.align || 'left',\r\n                    visible: true,\r\n                    groupFooter: {},\r\n                    footer: {},\r\n                    width: (data.size ? data.size.width : 100),\r\n                    dataType: data.dataType || 'string',\r\n                    fixed: _fixed === 'UNFIXED'? '': _fixed,\r\n                    id: n.id,\r\n                    parentId: n.node.parent ? n.node.parent.id : null,\r\n                    rowspan: _rowspan,\r\n                    colspan: _colspan\r\n                };\r\n\r\n                return n.node.data.groupHeader ?  newCol2: newCol;\r\n            }));\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    onBeforeShowContextMenu = (t) => {\r\n        if (t && t.data.parents.indexOf(this.HOU_XUAN_LIE_ID) > -1) {\r\n            // å¾éåºä¸­çæ°æ®åç¦ç¨å³é®èå\r\n            return of({show: false});\r\n        }\r\n        return of({show: true});\r\n    }\r\n\r\n\r\n    private clearTreeNodesData(nodes: TreeNode[]) {\r\n        nodes.forEach((n: any) =>{\r\n            delete n.parent;\r\n            delete n.elementRef;\r\n            if (n.children && n.children.length) {\r\n                this.clearTreeNodesData(n.children);\r\n            }\r\n        })\r\n    }\r\n\r\n    getSettings() {\r\n        this.clearTreeNodesData(this.treeData);\r\n        return {\r\n            viewCols: this.getPreviewGroupColumns(),\r\n            treeData: this.treeData\r\n        };\r\n    }\r\n\r\n    hiddenCol($event: MouseEvent, id) {\r\n        $event.stopPropagation();\r\n        \r\n        if (this.tt.selectedRow && id === this.tt.selectedRow.id) {\r\n            this.tt.clearSelections();\r\n            this.nodeSelected.emit(null);\r\n        }\r\n\r\n        this.tt.remove(id);\r\n\r\n    }\r\n\r\n    resetHeaderName($event: MouseEvent, rowNode: RowNode) {\r\n        const modalRef = this.showNewHeaderDialog(() => {\r\n            const ghfRef = modalRef.content as NewHeaderFormComponent;\r\n            if (ghfRef.title) {\r\n                rowNode.node.data.title = ghfRef.title;\r\n                modalRef.close();\r\n            } else {\r\n                this.notitySer.info(this.languageRes.required);\r\n                ghfRef.input.nativeElement.focus();\r\n            }\r\n       }, this.languageRes.contextMenus.rename);\r\n\r\n       const ghfRef = modalRef.content as NewHeaderFormComponent;\r\n       ghfRef.title = rowNode.node.data.title;\r\n    }\r\n    \r\n}","import { LocaleService } from '@farris/ui-locale';\r\nimport { Component, Input, OnInit, Injector, ViewChild, Output, EventEmitter, ChangeDetectorRef, OnChanges, SimpleChanges, ViewEncapsulation, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\nimport { ColumnTreeOptions } from '../setting.model';\r\nimport { RowNode, TreeNode } from '@farris/ui-treetable';\r\nimport { ColumnTreeComponent } from '../multi-headers/column-tree.component';\r\n\r\n\r\n@Component({\r\n    selector: 'column-format-setting',\r\n    templateUrl: './column-format-setting.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnFormatSettingComponent implements OnInit, OnChanges, AfterViewInit {\r\n    @Input() columns = [];\r\n    @Input() fields = [];\r\n\r\n    @ViewChild('colformatform') colForm: NgForm;\r\n    @ViewChild('gh') groupHeadersRef: ColumnTreeComponent;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n\r\n    allCols = [];\r\n\r\n    /** format Data */\r\n    formatData = [];\r\n    columnType = 'all';\r\n    activeField = null;\r\n    showGridFooter = false;\r\n\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    fixedItems = [];\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n\r\n    switchValue = false;\r\n\r\n    _searchResult = { checkAll: false, unCheckAll: false };\r\n\r\n\r\n    /** éç½®å¤è¡¨å¤´ç¸å³è®¾ç½® */\r\n    @Input() multiHeaderOptions: Partial<ColumnTreeOptions> = {};\r\n    // å¯ç¨å¤è¡¨å¤´\r\n    @Input() enableMultipleHeaders = false;\r\n\r\n    selectTreeNode = null;\r\n\r\n    get isShowfixed() {\r\n        if (this.groupHeadersRef && this.selectTreeNode && this.selectTreeNode.id !== '__HOU_XUAN_LIE_ID__' ) { // å¤è¡¨å¤´\r\n            const rn = this.groupHeadersRef.tt.findRowNode(this.selectTreeNode.id);\r\n            return rn && !rn.level;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) {\r\n        this.showGridFooter = this.gridSettingComponentRef.gridInstance.showFooter &&\r\n                                !this.gridSettingComponentRef.gridInstance.footerTemplate;\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            this.setFormatData();\r\n            this.allCols = this.columns[0];\r\n            this.setActiveField();\r\n            this.checkColumnOptions();\r\n            this._searchResult = this.seachResultIsCheckAll();\r\n        }\r\n\r\n        if (changes.multiHeaderOptions && !changes.multiHeaderOptions.isFirstChange()) {\r\n            this.setActiveField();\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isEn = this.localeSer.localeId === 'en';\r\n        this.initData();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.setActiveField();\r\n        \r\n        setTimeout(() => {\r\n            if (this.colForm) {\r\n                this.colForm.valueChanges.subscribe(v => {\r\n                    this.formatChange.emit(this.formatData);\r\n                });\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    private setActiveField() {\r\n        setTimeout(() => {\r\n            if (this.enableMultipleHeaders && this.multiHeaderOptions) {\r\n                const {columns} = this.multiHeaderOptions;\r\n                if (columns && columns.length) {\r\n                    this.groupHeadersRef.tt.selectFirstNode();\r\n                } else {\r\n                    this.activeField = null;\r\n                }\r\n            } else {\r\n                this.activeField = this.columns[0][0];\r\n            }\r\n        });\r\n    }\r\n\r\n    private setFormatData() {\r\n        // this.formatData = this.fields.map(n => {\r\n        //     return this.columns[0].find(col => col.field === n);\r\n        // });\r\n        this.formatData =  this.columns[0];\r\n    }\r\n\r\n    private initData() {\r\n\r\n        this.alignItems = this.gridSettingComponentRef.alignItems;\r\n        this.searchItems = this.gridSettingComponentRef.searchItems;\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n        this.fixedItems = this.gridSettingComponentRef.fixedItems;\r\n\r\n\r\n        this.setFormatData();\r\n        this.allCols = this.columns[0];\r\n        this.checkColumnOptions();\r\n\r\n        this.filterColumns();\r\n    }\r\n\r\n    private checkColumnOptions() {\r\n        if (this.activeField) {\r\n            if (this.activeField.allowGrouping === undefined) {\r\n                this.activeField.allowGrouping = true;\r\n            }\r\n\r\n            if (this.activeField.groupFooter === undefined) {\r\n                this.activeField.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.groupFooter.options = this.activeField.groupFooter.options || {calculationType: -1};\r\n                if (this.activeField.groupFooter.options.calculationType === undefined) {\r\n                    this.activeField.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            if (this.activeField.footer === undefined) {\r\n                this.activeField.footer =  { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n                if (this.activeField.footer.options.calculationType === undefined) {\r\n                    this.activeField.footer.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            if (!this.activeField.fixed || (this.activeField.fixed !== 'left' && this.activeField.fixed !== 'right')) {\r\n                this.activeField.fixed = 'UNFIXED';\r\n            }\r\n        }\r\n    }\r\n\r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns( searchWords = '') {\r\n        let cols = [];\r\n     \r\n        if (this.switchValue) {\r\n            cols = this.columns[0].filter(n => this.fields.indexOf(n.field) > -1);\r\n        } else {\r\n            cols = this.columns[0];\r\n        }\r\n\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n        this._searchResult = this.seachResultIsCheckAll(this.allCols.filter(n => n.visible));\r\n    }\r\n\r\n    private seachResultIsCheckAll(searchFields?: any) {\r\n        const allColsLength = this.allCols.filter(n => n.field != '_datagrid-setting-control_').length;\r\n        let fieldsLength = this.fields.filter(n => n !=  '_datagrid-setting-control_').length;\r\n\r\n        if (searchFields) {\r\n            fieldsLength = searchFields.length;\r\n        }\r\n\r\n\r\n        return {\r\n            checkAll: allColsLength && allColsLength === fieldsLength,\r\n            unCheckAll:!searchFields ? !this.fields.length : !fieldsLength\r\n        };\r\n    }\r\n\r\n    onFieldClick(col, $event) {\r\n        this.activeField = col;\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n\r\n    private onFieldsChanged() {\r\n        this.setFormatData();\r\n        this.fieldsChange.emit(this.fields);\r\n    }\r\n\r\n    onDblClick($event, col) {\r\n        $event.target.style.userSelect = 'none';\r\n        this.onCheckboxClick($event, col);\r\n        $event.target.style.userSelect = '';\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        $event.stopPropagation();\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        const _fields = this.allCols.filter(n => n.visible).map(n => n.field);\r\n        this._searchResult = this.seachResultIsCheckAll(_fields);\r\n      \r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event) {\r\n        this.switchValue = false;\r\n        const txt = $event.target.value;\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, txt, ulElRef: any) {\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(txt);\r\n\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState(search = false) {\r\n        if (this.fields.length === 0) {\r\n            return 0;\r\n        } else {\r\n            if (search) {\r\n                if (this._searchResult.checkAll) {\r\n                    return 1;\r\n                }\r\n            } else {\r\n                if (this.fields.length === this.columns[0].length) {\r\n                    return 1;\r\n                }\r\n            }\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onCheckAllClick($event, txt) {\r\n        if (!this.allCols || !this.allCols.length) {\r\n            return;\r\n        }\r\n        const state = this.getCheckAllState(txt);\r\n        const isVisible = state === 0 || state === 2;\r\n        let _fields = null;\r\n        if (txt == '') {\r\n            if (isVisible) {\r\n                // æ§è¡å¨é\r\n                this.columns[0].forEach(n => n.visible = true);\r\n                this.fields = this.columns[0].map(n => n.field);\r\n            } else {\r\n                // åæ¶å¨é\r\n                this.columns[0].forEach(n => n.visible = false);\r\n                this.fields = [];\r\n            }\r\n        } else {\r\n            this.allCols.forEach(c => {\r\n                const col = this.columns[0].find(n => c.field === n.field);\r\n                col.visible = isVisible;\r\n                c.visible = isVisible;\r\n            });\r\n            _fields = this.allCols.filter(n => n.visible).map(n => n.field);\r\n            this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        }\r\n        this._searchResult = this.seachResultIsCheckAll(!txt ? null: _fields);\r\n        this.cd.detectChanges();\r\n        this.onFieldsChanged();\r\n        // this.filterColumns(txt);\r\n    }\r\n\r\n     // ä»æ¾ç¤ºå¯è§å\r\n     onlySeeVisibleColumns($event, txt) {\r\n        this.switchValue = $event;\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    clearSearch($event, searchInput) {\r\n        if (searchInput && searchInput.value) {\r\n            this.filterColumns('');\r\n            searchInput.value = '';\r\n        }\r\n    }\r\n\r\n    onNodeSelected($event: RowNode) {\r\n        if ($event && $event.node.id !== \"__HOU_XUAN_LIE_ID__\") {\r\n            this.activeField = $event.node.data;\r\n            this.selectTreeNode = $event.node;\r\n            this.checkColumnOptions();\r\n        } else {\r\n            this.activeField = null;\r\n            this.selectTreeNode = null;\r\n        }\r\n    }\r\n\r\n    getMultiHeaders(): {\r\n        viewCols: any[];\r\n        treeData: any[];\r\n    } {\r\n        return this.groupHeadersRef? this.groupHeadersRef.getSettings() : null;\r\n    }\r\n}\r\n","import {\r\n    Component, ViewEncapsulation, ViewChild, ElementRef, Input, EventEmitter,\r\n    OnInit, OnChanges, SimpleChanges, ChangeDetectorRef, Injector, Output, Renderer2\r\n} from '@angular/core';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { ColumnTreeOptions, SettingModel } from './setting.model';\r\nimport { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';\r\nimport { getDataFieldsForMultiHeaders, mergeSortInfo, multiHeadersHasDataFields, reset2DefaultForMultiHeaders } from './mutli-headers.helper';\r\nimport { NotifyService } from '@farris/ui-notify';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings',\r\n    templateUrl: './datagrid-settings.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridSettingsComponent implements OnInit, OnChanges {\r\n    modalRef: BsModalRef;\r\n    gridInstance: DatagridComponent;\r\n    activeTabIndex = 1;\r\n\r\n    /** æåºåæ°æ® */\r\n    sortTreeData = [];\r\n    sortNames = [];\r\n    sortInfo: any = {};\r\n\r\n    /** æ¾ç¤ºåæ°æ® */\r\n    // viewTreeData = [];\r\n    viewColumns = [];\r\n\r\n    columnFormat = [];\r\n\r\n    groupField = [];\r\n    expandGroupRows = true;\r\n\r\n    canSetColumnSort = true;\r\n    canSetColumnVisible = true;\r\n    @Input() enableReset = false;\r\n    @Input() columns: DataColumn[][];\r\n\r\n    @Output() cancelHandle = new EventEmitter();\r\n    @Output() submitHandle = new EventEmitter();\r\n    @Output() reset = new EventEmitter();\r\n    @Output() concise = new EventEmitter();\r\n    @Input() schemeInfo: SettingModel = null;\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    @ViewChild('activeTab') activeTab: ElementRef;\r\n    @ViewChild('colFormatSettings') colFormatSettings: ColumnFormatSettingComponent\r\n\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n\r\n    enableGroupFooter = false;\r\n\r\n    fixedItems = [];\r\n\r\n    private localeSer: LocaleService;\r\n    private messager: MessagerService;\r\n    private render2: Renderer2;\r\n\r\n    /** éç½®å¤è¡¨å¤´ç¸å³è®¾ç½® */\r\n    multiHeaders: Partial<ColumnTreeOptions> = {};\r\n    // å¯ç¨å¤è¡¨å¤´\r\n    enableMultipleHeaders = false;\r\n    notifySer: NotifyService;\r\n\r\n    schemeName = '';\r\n\r\n    tabWidth = 70;\r\n\r\n    constructor(private cd: ChangeDetectorRef, private inject: Injector) {\r\n        this.messager = this.inject.get(MessagerService, null);\r\n        this.localeSer = this.inject.get(LocaleService);\r\n        this.render2 = this.inject.get(Renderer2, null);\r\n        this.notifySer = this.inject.get(NotifyService, null);\r\n        this.searchItems = [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n\r\n        this.alignItems = [\r\n            { value: 'left', title: this.localeSer.getValue('datagrid.settings.alignLeft')},\r\n            { value: 'center', title: this.localeSer.getValue('datagrid.settings.alignCenter')},\r\n            { value: 'right', title: this.localeSer.getValue('datagrid.settings.alignRight')},\r\n        ];\r\n\r\n        this.summaryItems = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 2, title: this.localeSer.getValue('datagrid.settings.summarySum') },\r\n            { value: 0, title: this.localeSer.getValue('datagrid.settings.summaryMax') },\r\n            { value: 1, title: this.localeSer.getValue('datagrid.settings.summaryMin') },\r\n            { value: 3, title: this.localeSer.getValue('datagrid.settings.summaryAverage') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n        this.summaryItems2 = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n        this.fixedItems = [\r\n            { value: 'UNFIXED', title: this.localeSer.getValue('datagrid-settings.column.unFixed') },\r\n            { value: 'left', title: this.localeSer.getValue('datagrid-settings.column.leftFixed') },\r\n            { value: 'right', title: this.localeSer.getValue('datagrid-settings.column.rightFixed') },\r\n        ]\r\n\r\n        if (this.localeSer.localeId === 'en') {\r\n            this.tabWidth = 80;\r\n        }\r\n\r\n    }\r\n\r\n    private initData() {\r\n        this.sortNames = this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [];\r\n        const sortOrders = this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : [];\r\n\r\n        this.viewColumns = this.getViewColumns();\r\n        this.sortInfo = {sortName: this.sortNames, sortOrder: sortOrders};\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n        this.expandGroupRows = this.gridInstance['expandGroupRows'];\r\n\r\n        this.enableGroupFooter = this.gridInstance.groupFooter;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.gridInstance.enableScheme) {\r\n            this.initData();\r\n        } else {\r\n            if (this.schemeInfo) {\r\n                this.sortInfo = this.schemeInfo.sortInfo || {};\r\n                if (this.sortInfo) {\r\n                    this.sortNames = this.sortInfo.sortName || '';\r\n                }\r\n                this.viewColumns = this.schemeInfo.viewColumns;\r\n                this.columnFormat = this.schemeInfo.columnFormat;\r\n                if (!this.columnFormat) {\r\n                    this.columnFormat = [...this.columns[0]];\r\n                }\r\n\r\n                if (this.schemeInfo.groupField) {\r\n                    if (typeof this.schemeInfo.groupField === 'string') {\r\n                        this.groupField = (this.schemeInfo.groupField as any).split(',');\r\n                    } else {\r\n                        this.groupField = this.schemeInfo.groupField || [];\r\n                    }\r\n                } else {\r\n                    this.groupField = [];\r\n                }\r\n                this.expandGroupRows = !!this.schemeInfo.expandGroupRows;\r\n            } else {\r\n                // ç³»ç»é¢å¶\r\n                this.reset2Default();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    close($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        if (this.modalRef) {\r\n            this.modalRef.close();\r\n        }\r\n    }\r\n\r\n    private setCurrentTab(tab: HTMLElement = null) {\r\n        if (this.render2) {\r\n\r\n            let left = 0;\r\n\r\n            const tabs = Array.from(this.header.nativeElement.querySelectorAll('.navitem'));\r\n            let index = this.activeTabIndex;\r\n            if (tabs.length !== 3) {\r\n                index = tabs.findIndex(n => n === tab) + 1;\r\n            }\r\n            switch(index) {\r\n                case 2:\r\n                    left = this.localeSer.localeId === 'en'? 78: 68;\r\n                    break;\r\n                case 3:\r\n                    left = this.localeSer.localeId === 'en' ?158: 138;\r\n                    break;\r\n                default:\r\n                    left = 0;\r\n                    break;\r\n            }\r\n\r\n            this.render2.setStyle(this.activeTab.nativeElement, 'transform', `translate3d(${left}px, 0px, 0px)`);\r\n        }\r\n    }\r\n\r\n    changeTabs($event: MouseEvent, idx) {\r\n        $event.stopPropagation();\r\n\r\n        const treeNodes = this.getCurrentGroupHeaders();\r\n        if(this.activeTabIndex === 1 && this.enableMultipleHeaders) {\r\n            this.setCurrentGroupHeaders(treeNodes);\r\n        } else {\r\n            this.multiHeaders.treeData = treeNodes? treeNodes.treeData: [];\r\n        }\r\n\r\n\r\n        if (idx === 2 && this.enableMultipleHeaders) {\r\n            this.sortTreeData = getDataFieldsForMultiHeaders(treeNodes.viewCols).filter( (n: any) => n.field.indexOf('farris-datagrid-column_') == -1 && n.sortable );\r\n        }\r\n\r\n        if (idx === 3) {\r\n            if (this.enableMultipleHeaders) {\r\n                this.columnFormat = treeNodes && treeNodes.viewCols ? getDataFieldsForMultiHeaders(treeNodes.viewCols).filter( (n: any) => n.field.indexOf('farris-datagrid-column_') == -1 ) : [];\r\n            } else {\r\n                this.columnFormat = getDataFieldsForMultiHeaders(this.columns);\r\n            }\r\n        }\r\n\r\n        this.activeTabIndex = idx;\r\n\r\n\r\n        let tabEl: any = $event.target;\r\n        if (!tabEl.classList.contains('navitem') && tabEl.closest('.navitem')) {\r\n            tabEl = tabEl.closest('.navitem');\r\n        }\r\n\r\n        this.setCurrentTab(tabEl);\r\n    }\r\n\r\n    onSortInfoChange(sortInfo: any) {\r\n        this.sortInfo = sortInfo;\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n\r\n\r\n    private mergeColumnFormats() {\r\n        if (this.sortInfo && Object.keys(this.sortInfo).length && this.columnFormat && this.columnFormat.length) {\r\n            const { sortName, sortOrder } = this.sortInfo;\r\n            if (sortName && sortName.length) {\r\n                sortName.forEach((n, i) => {\r\n                    const col = this.columnFormat.find((col: any) => {\r\n                        return col.field === n;\r\n                    });\r\n                    if (col) {\r\n                        col.sortable = true;\r\n                        col.order = sortOrder[i] || 'asc';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 1ãåªæä¸ç»è¡¨å¤´ï¼ä¸åºå®å¨å·¦ä¾§æå³ä¾§æ¶ï¼ææ åºå®åæ¹å¼å¤ç\r\n         * 2ãåªæå·¦ä¾§ãå³ä¾§åºå®åèæ²¡æå¶ä»æ­£å¸¸åæ¶ï¼åæ¶å³ä¾§åºå®å\r\n         * 3ãåªæå·¦ä¾§æå³ä¾§åºå®æ¶ï¼ææ åºå®åå¤ç\r\n         */\r\n        const _columnsFormat = this.columnFormat;\r\n        if (!_columnsFormat.filter(n => (!n.fixed || n.fixed === 'UNFIXED') && n.visible).length) {\r\n            const colsCount = _columnsFormat.length;\r\n            const rightCols = _columnsFormat.filter(n => n.fixed === 'right');\r\n            const leftCols = _columnsFormat.filter(n => n.fixed === 'left');\r\n            if ( leftCols.length == colsCount || rightCols.length == colsCount) {\r\n                _columnsFormat.forEach(n => {\r\n                    n.fixed = ''\r\n                });\r\n            } else {\r\n                if (rightCols.length === 1) {\r\n                    leftCols.forEach(t =>{\r\n                        t.fixed = '';\r\n                    });\r\n                } else {\r\n                    rightCols.forEach(t =>{\r\n                        t.fixed = '';\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onColumnFormatChange(colFormatData) {\r\n        this.columnFormat = colFormatData;\r\n    }\r\n\r\n    private _showMessager(msg: string) {\r\n        if (this.notifySer) {\r\n            this.notifySer.info(msg);\r\n        } else {\r\n            this.messager.info(msg);\r\n        }\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        if (this.enableMultipleHeaders) {\r\n            const _multiHeaders = this.getCurrentGroupHeaders();\r\n            if (_multiHeaders && !multiHeadersHasDataFields(_multiHeaders.viewCols)) {\r\n                this._showMessager('è¯·è®¾ç½®è¡¨å¤´ã');\r\n                return;\r\n            }\r\n\r\n            mergeSortInfo(_multiHeaders.viewCols, this.sortInfo);\r\n            this.multiHeaders = _multiHeaders;\r\n        } else {\r\n            this.multiHeaders = null;\r\n            this.mergeColumnFormats();\r\n        }\r\n        this.submitHandle.emit($event);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.cancelHandle.emit($event);\r\n    }\r\n\r\n    onSettingReset($event) {\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                if (this.enableMultipleHeaders) {\r\n                    const { settings, multiHeaderOptions } = reset2DefaultForMultiHeaders(this.gridInstance);\r\n                    const {viewColumns, columnFormat, sortInfo,groupField, expandGroupRows, multiHeaders} = settings;\r\n                    this.viewColumns = viewColumns;\r\n                    \r\n                    this.sortInfo = sortInfo;\r\n                    this.sortNames = sortInfo.sortName || [];\r\n                    this.groupField = groupField;\r\n                    this.expandGroupRows = expandGroupRows;\r\n                    this.multiHeaders = {\r\n                        columns: multiHeaderOptions.columns,\r\n                        treeData: multiHeaders.treeData\r\n                    };\r\n\r\n                    this.columnFormat = getDataFieldsForMultiHeaders( multiHeaderOptions.columns);\r\n                    this.setCurrentGroupHeaders({ viewCols: multiHeaderOptions.columns, treeData: null });\r\n\r\n                } else {\r\n                    this.reset2Default();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        col.title = c.title;\r\n                        col.fixed = c.fixed || '';\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.viewColumns = this.getViewColumns();\r\n\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            this.sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.sortInfo = { sortName: this.sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.sortNames = [];\r\n            this.sortInfo = {};\r\n        }\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupField =  options.groupField ? options.groupField.split(',') : [];\r\n        this.expandGroupRows = !!options.expandGroupRows;\r\n        this.enableGroupFooter = !!options.enableGroupFooter;\r\n\r\n    }\r\n    /** æ¾ç¤ºç®æ´æ¨¡å¼çªå£ */\r\n    showConcise($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        if (this.enableMultipleHeaders) {\r\n            this.multiHeaders = this.getCurrentGroupHeaders();\r\n        }\r\n\r\n        this.mergeColumnFormats();\r\n        this.concise.emit();\r\n    }\r\n\r\n    \r\n    private setCurrentGroupHeaders(p: {viewCols:any, treeData: any}) {\r\n        this['GROUP_HEADERS'] = p;\r\n    }\r\n\r\n    getCurrentGroupHeaders() {\r\n        if (this.colFormatSettings) {\r\n            return this.colFormatSettings.getMultiHeaders();\r\n        } else {\r\n            return this['GROUP_HEADERS'];\r\n        }\r\n    }\r\n\r\n}\r\n","export function getMultilingualValue(valObj, localeId) {\r\n    if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n        localeId = localeId || 'zh-CHS';\r\n        const val = valObj[localeId];\r\n        if (val !== undefined) {\r\n            return val;\r\n        } else {\r\n            return '';\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n}","\r\nimport { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, OnInit,\r\n        Output, ViewEncapsulation, HostListener, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ColumnTreeOptions, SettingModel } from '../setting.model';\r\nimport { getMultilingualValue } from '../getValueWithLocaleId';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ColumnTreeComponent } from '../multi-headers/column-tree.component';\r\nimport { mergeSortInfo, multiHeadersHasDataFields, reset2DefaultForMultiHeaders } from '../mutli-headers.helper';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { DatagridSchemeService } from '../datagrid-scheme.service';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings-simple',\r\n    templateUrl: './simple-columns.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SimpleColumnsComponent implements OnInit, AfterViewInit {\r\n    @Input() enableScheme = false;\r\n    @Input() seartTypes: any = [];\r\n    /** ææå */\r\n    @Input() columns = [];\r\n    /** æ¾ç¤ºçå */\r\n    @Input() fields = [];\r\n    /** ç¹å»ä¾§è¾¹æ ·å¼ä»¥å¤çåºåéèé¢æ¿ãé»è®¤ä¸º true */\r\n    @Input() clickToHidden = true;\r\n\r\n    @Input() top = 0;\r\n    private _schemeList = [];\r\n    @Input()\r\n    get schemeList() {\r\n        return this._schemeList;\r\n    }\r\n    set schemeList(val) {\r\n        if (val && val.length) {\r\n            val = val.filter(n => {\r\n                return JSON.parse(n.name)[this.localeSer.localeId]\r\n            }); // ä»è·åå½åè¯­è¨çæ¹æ¡\r\n            val.forEach(n => {\r\n                n['_title_'] = getMultilingualValue(JSON.parse(n.name), this.localeSer.localeId);\r\n                if (this.currentSchemeItem && n.id === this.currentSchemeItem.id) {\r\n                    this.currentSchemeItem['_title_'] = n['_title_'];\r\n                }\r\n            });\r\n        }\r\n        this._schemeList = val || [];\r\n    }\r\n\r\n    @HostBinding('class') cls = 'f-datagrid-settings-simple-host';\r\n\r\n    @ViewChild('colcontainer') container: ElementRef;\r\n    @ViewChild('okbtn') btnOk: ElementRef;\r\n    @ViewChild('inputWord') searchInput: ElementRef;\r\n\r\n    @ViewChild('schemeitems') schemeitemsEleRef: ElementRef;\r\n    @ViewChild('btnSchemeName') btnRef: ElementRef;\r\n\r\n    @ViewChild('gh') multiHeaderRef: ColumnTreeComponent;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n    @Output() submit = new EventEmitter();\r\n    /** åç»è¡¨å¤´ç¡®å®äºä»¶ */\r\n    @Output() submitForGroupHeader = new EventEmitter();\r\n    @Output() closed = new EventEmitter();\r\n    @Output() advanced = new EventEmitter();\r\n    @Output() canceld = new EventEmitter();\r\n\r\n    @Output() addNewScheme = new EventEmitter();\r\n    @Output() showSchemeList = new EventEmitter();\r\n    @Output() activeItemChange = new EventEmitter();\r\n\r\n    @Output() schemeChanged = new EventEmitter();\r\n\r\n    allCols = [];\r\n    columnType = 'all';\r\n\r\n    gridInstance: DatagridComponent;\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n\r\n    showSchemePanel = false;\r\n\r\n    switchValue = false;\r\n    // å½åæ¹æ¡\r\n    currentSchemeItem = null;\r\n\r\n    searchResultIsVisibleAll = { checkAll: false, unCheckAll: false };\r\n    defaultSchemeName = 'ç³»ç»é¢å¶';\r\n\r\n    \r\n    /** éç½®å¤è¡¨å¤´ç¸å³è®¾ç½® */\r\n    multiHeaderOptions: Partial<ColumnTreeOptions> = {};\r\n    // å¯ç¨å¤è¡¨å¤´\r\n    enableMultipleHeaders = false;\r\n\r\n    private messager: MessagerService;\r\n    private notify: NotifyService;\r\n\r\n    private prevSchemeItem = null;\r\n    \r\n    settings: SettingModel = {};\r\n\r\n    schemeSer: DatagridSchemeService = null;\r\n\r\n    noDisplyColumnTip = '';\r\n\r\n\r\n    constructor(private injector: Injector, public cd: ChangeDetectorRef) {\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n        this.messager = this.injector.get(MessagerService, null);\r\n        this.notify = this.injector.get(NotifyService, null);\r\n\r\n        this.noDisplyColumnTip = this.localeSer.getValue('datagrid-scheme.noDisplyColumnTip');\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const clsname = $event.target['className'] || '';\r\n        if (clsname.indexOf('f-datagrid-settings-simple-host') > -1) {\r\n            // éèä¾§è¾¹æ ï¼\r\n            if (this.clickToHidden) {\r\n                this.cancel();\r\n            }\r\n        }\r\n\r\n        this.showSchemePanel = false;\r\n    }\r\n\r\n    @HostListener('window:keydown.esc', ['$event'])\r\n    onEscKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.enter', ['$event'])\r\n    onEnterKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.onSubmitClick();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onControlGKeydown($event: KeyboardEvent) {\r\n        if ($event.ctrlKey && !document.querySelector('modal-container')) {\r\n            const _key = $event.key.toLowerCase();\r\n            if (['g', 'r', 's'].includes(_key)) {\r\n                $event.preventDefault();\r\n                $event.stopPropagation();\r\n            }\r\n            if (_key === 'g') {\r\n                this.showAdvanced($event);\r\n            } else if (_key === 'r') {\r\n                this.onSettingReset();\r\n            } else if (_key === 's') {\r\n                this.searchInput.nativeElement.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    private getCurrentSchemeSettings() {\r\n        if (this.currentSchemeItem && this.currentSchemeItem.queryConditionString) {\r\n            const schemeSettings = JSON.parse(this.currentSchemeItem.queryConditionString);\r\n            return schemeSettings[this.localeSer.localeId] as SettingModel;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // å¤æ­æ¯å¦å¯ç¨å¤è¡¨å¤´åè®¾ç½®\r\n        this.enableMultipleHeaders = this.gridInstance.enableSetMultiHeaders;\r\n        \r\n        // const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        // if (options.columnFields && options.columnFields.length) {\r\n        //     this.allCols = options.columnFields.filter((f: any) => f.field !== '_datagrid-setting-control_');\r\n        // } else {\r\n        //     this.allCols = this.columns[0];\r\n        // }\r\n        this.allCols = this.columns[0];\r\n        \r\n        if (this.gridInstance.enableScheme) {\r\n            if (!this.prevSchemeItem) {\r\n                this.prevSchemeItem = cloneDeep(this.currentSchemeItem);\r\n            }\r\n            if ( this.currentSchemeItem) {\r\n                this.settings = this.getCurrentSchemeSettings() || {};\r\n            } else {\r\n                if (!this.settings || !Object.keys(this.settings).length) {\r\n                    this._reset2Default();\r\n                }\r\n            }\r\n        }\r\n        \r\n        const { multiHeaders } = this.settings;\r\n\r\n        this.multiHeaderOptions = { columns: this.columns, treeData: multiHeaders?multiHeaders.treeData: null };\r\n        if (!this.enableMultipleHeaders) {\r\n            if (this.settings && this.settings.viewColumns) {\r\n                this.fields = this.settings.viewColumns.filter(n => n != '_datagrid-setting-control_');\r\n                this.dirtySettings(true);\r\n            } else {\r\n                this.fields = this.getViewColumns();\r\n            }\r\n        }\r\n\r\n        this.container.nativeElement.focus();\r\n        this.searchResultIsVisibleAll = this.seachResultIsCheckAll();\r\n        this.defaultSchemeName = this.localeSer.getValue('datagrid-scheme.syspreset') || this.gridInstance.defaultSchemeName;\r\n\r\n        if (this.schemeSer) {\r\n\r\n            if (this.settings && !Object.keys(this.settings).length) {\r\n                if (this.gridInstance.enableScheme) {\r\n                    this.resetToDefault();\r\n                } else {\r\n                    this.settings = this.getCurrentSettings();\r\n                }\r\n            }\r\n            this.schemeSer.setSettings(this.settings);\r\n\r\n            this.defaultSettings();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // console.log(this.fields);\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n    \r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(searchWords = '') {\r\n        let cols = [];\r\n\r\n        if (this.switchValue) {\r\n            cols = this.columns[0].filter(n => this.fields.indexOf(n.field) > -1);\r\n        } else {\r\n            cols = this.columns[0];\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords.toLowerCase()) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n        this.searchResultIsVisibleAll = this.seachResultIsCheckAll(this.allCols.filter(n => n.visible));\r\n    }\r\n\r\n    private seachResultIsCheckAll(searchFields?: any) {\r\n        const allColsLength = this.allCols.filter(n => n.field != '_datagrid-setting-control_').length;\r\n        let fieldsLength = this.fields.filter(n => n !=  '_datagrid-setting-control_').length;\r\n\r\n        if (searchFields) {\r\n            fieldsLength = searchFields.length;\r\n        }\r\n\r\n        return {\r\n            checkAll: allColsLength && allColsLength === fieldsLength,\r\n            unCheckAll:!searchFields ? !this.fields.length : !fieldsLength\r\n        };\r\n    }\r\n\r\n\r\n    private onFieldsChanged() {\r\n        if (!this.gridInstance.enableScheme) {\r\n            this.fieldsChange.emit(this.fields);\r\n        }\r\n    }\r\n\r\n    onDblClick($event, col) {\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        $event.stopPropagation();\r\n        this.showSchemePanel = false;\r\n        let checked = false;\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n            checked = true;\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n            checked = false;\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        \r\n        const _fields = this.allCols.filter(n => n.visible).map(n => n.field);\r\n        this.searchResultIsVisibleAll = this.seachResultIsCheckAll(_fields);\r\n      \r\n        this.dirtySettings(true);\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event) {\r\n        this.switchValue = false;\r\n        const txt = $event.target.value;\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, txt, ulElRef: any) {\r\n        this.showSchemePanel = false;\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(txt);\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (!this.searchInput.nativeElement.value) {\r\n            if (this.fields.length === 0) {\r\n                return 0;\r\n            } else {\r\n                if (this.fields.length === this.columns[0].length) {\r\n                    return 1;\r\n                }\r\n                return 2;\r\n            }\r\n        } else {\r\n            const visibleLen = this.allCols.filter(n => n.visible).length;\r\n            if (visibleLen === this.allCols.length) {\r\n                return 1;\r\n            } else {\r\n                if (visibleLen < this.allCols.length) {\r\n                    if (visibleLen === 0) {\r\n                        return 0\r\n                    }\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // å¨é\r\n    onCheckAllClick($event: MouseEvent, txt) {\r\n        $event.stopPropagation();\r\n        if (!this.allCols || !this.allCols.length) {\r\n            return;\r\n        }\r\n        this.showSchemePanel = false;\r\n        const state = this.getCheckAllState();\r\n\r\n        const isCheckAll = state === 0 || state === 2;\r\n\r\n        let _fields = null;\r\n        if (!txt) {\r\n            this.columns[0].forEach(n => n.visible = isCheckAll);\r\n        } else {\r\n            this.columns[0].forEach(n => {\r\n                const item = this.allCols.find(a => n.field == a.field);\r\n                if (item) {\r\n                    n.visible = isCheckAll;\r\n                    item.visible = isCheckAll;\r\n                }\r\n            });\r\n            _fields = this.allCols.filter(n => n.visible).map(n => n.field);\r\n        }\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        \r\n        this.searchResultIsVisibleAll = this.seachResultIsCheckAll(!txt ? null: _fields);\r\n\r\n        this.dirtySettings(true);\r\n        this.cd.detectChanges();\r\n        this.onFieldsChanged();\r\n        // this.filterColumns(txt);\r\n    }\r\n\r\n    close($event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.closed.emit();\r\n    }\r\n\r\n    cancel($event?: MouseEvent) {\r\n        this.currentSchemeItem = this.prevSchemeItem;\r\n        // this.schemeChanged.emit(this.prevSchemeItem);\r\n        this.close($event);\r\n        this.canceld.emit();\r\n    }\r\n\r\n    // æå¼é«çº§è®¾ç½®çªå£\r\n    showAdvanced($event) {\r\n        this.close($event);\r\n        \r\n        this.settings = this.getCurrentSettings();\r\n\r\n        if (this.enableMultipleHeaders) {\r\n            if (this.multiHeaderRef) {\r\n                this.settings.multiHeaders = this.multiHeaderRef.getSettings();\r\n            }\r\n        }    \r\n        this.advanced.emit({ viewFields: this.fields, settings: this.settings, columns: this.columns });\r\n    }\r\n\r\n    // æ¢å¤é»è®¤\r\n    onSettingReset($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.showSchemePanel = false;\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'æ¨ç¡®å®è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText, 2035).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.resetToDefault();\r\n                this.dirtySettings(true);\r\n\r\n                this.searchResultIsVisibleAll = this.seachResultIsCheckAll();\r\n            }\r\n        });\r\n    }\r\n\r\n    resetToDefault() {\r\n        if (this.enableMultipleHeaders) {\r\n            this._reset2DefalutFormMultiHeaders()\r\n        } else {\r\n            this._reset2Default();\r\n        }\r\n    }\r\n\r\n\r\n    private _reset2DefalutFormMultiHeaders() {\r\n        const { settings, multiHeaderOptions } = reset2DefaultForMultiHeaders(this.gridInstance);\r\n        this.settings = settings,\r\n        this.multiHeaderOptions = multiHeaderOptions;\r\n    }\r\n\r\n\r\n    private _reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        col.title = c.title;\r\n                        col.fixed = c.fixed || '';\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.allCols = this.columns[0];\r\n        this.settings = {};\r\n        this.fields = this.getViewColumns();\r\n        this.settings.viewColumns = this.fields;\r\n        this.settings.columnFormat = [...this.columns[0]];\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.settings.sortInfo = { sortName: sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.settings.sortInfo = {};\r\n        }\r\n        this.settings.groupField =  options.groupField ? options.groupField.split(',') : [];\r\n        this.settings.expandGroupRows = !!options.expandGroupRows;\r\n    }\r\n\r\n    private getCurrentSettings() {\r\n        let _settings: any = {};\r\n        _settings.viewColumns = this.fields;\r\n\r\n        if (!this.enableScheme) {\r\n            if (!_settings.columnFormat) {\r\n                _settings.columnFormat = [...this.columns[0]];\r\n            }\r\n\r\n            if (!_settings.sortInfo) {\r\n                _settings.sortInfo = {\r\n                    sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],\r\n                    sortOrder:  this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []\r\n                };\r\n            }\r\n\r\n            if (_settings.groupField === undefined) {\r\n                _settings.groupField = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n            }\r\n        } else {\r\n            _settings = Object.assign(this.settings|| {},  _settings);\r\n        }\r\n\r\n        if (_settings.expandGroupRows == undefined) {\r\n            _settings.expandGroupRows = this.gridInstance['expandGroupRows'];\r\n        }\r\n\r\n        return _settings;\r\n    }\r\n\r\n\r\n    // ç¡®å®æé®ç¹å»äºä»¶\r\n    onSubmitClick($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        if (!this.enableMultipleHeaders) {\r\n            if (!this.fields || !this.fields.length) {\r\n                this.notify.warning(this.noDisplyColumnTip);\r\n                return;\r\n            }\r\n        } \r\n\r\n        this.prevSchemeItem = this.currentSchemeItem;\r\n\r\n        this.showSchemePanel = false;\r\n\r\n        this.settings = this.getCurrentSettings();\r\n\r\n        // å¯ç¨å¤è¡¨å¤´æ¶ï¼è§¦åæ°çäºä»¶\r\n        if (this.enableMultipleHeaders) {\r\n            if (this.multiHeaderRef) {\r\n                const _multiHeaders = this.multiHeaderRef.getSettings();\r\n                if (!multiHeadersHasDataFields(_multiHeaders.viewCols)) {\r\n                    this.notify.info(this.noDisplyColumnTip);\r\n                    return;\r\n                }\r\n\r\n                mergeSortInfo(_multiHeaders.viewCols, this.settings.sortInfo);\r\n                this.settings.multiHeaders = _multiHeaders;\r\n            }\r\n\r\n\r\n            this.submitForGroupHeader.emit({\r\n                content: this.settings,\r\n                close: this.close.bind(this),\r\n                target: this.btnOk.nativeElement,\r\n                currentScheme: this.currentSchemeItem\r\n            });\r\n        } else {\r\n            this.submit.emit({\r\n                content: this.settings,\r\n                close: this.close.bind(this),\r\n                target: this.btnOk.nativeElement,\r\n                currentScheme: this.currentSchemeItem\r\n            });\r\n        }\r\n    }\r\n\r\n    collectSettings() {\r\n       \r\n        this.settings = this.getCurrentSettings();\r\n\r\n        // å¯ç¨å¤è¡¨å¤´æ¶ï¼è§¦åæ°çäºä»¶\r\n        if (this.enableMultipleHeaders) {\r\n            if (this.multiHeaderRef) {\r\n                const _multiHeaders = this.multiHeaderRef.getSettings();\r\n                if (!multiHeadersHasDataFields(_multiHeaders.viewCols)) {\r\n                    this.notify.info(this.noDisplyColumnTip);\r\n                    return;\r\n                }\r\n\r\n                mergeSortInfo(_multiHeaders.viewCols, this.settings.sortInfo);\r\n                this.settings.multiHeaders = _multiHeaders;\r\n            }\r\n        }\r\n\r\n        \r\n        return { ...this.settings };\r\n    }\r\n\r\n    // æ¾ç¤ºä¸ææ¹æ¡åè¡¨\r\n    onChooseScheme($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.showSchemePanel = !this.showSchemePanel;\r\n\r\n        setTimeout(() => {\r\n            if (this.schemeitemsEleRef && this.currentSchemeItem) {\r\n                const itemEl = this.schemeitemsEleRef.nativeElement.querySelector(`#schemeitem_${this.currentSchemeItem.id}`);\r\n                if (itemEl) {\r\n                    if (itemEl.scrollIntoViewIfNeeded) {\r\n                        itemEl.scrollIntoViewIfNeeded();\r\n                    } else {\r\n                        itemEl.scrollIntoView();\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    // ä»æ¾ç¤ºå¯è§å\r\n    onlySeeVisibleColumns($event, searchWords) {\r\n        this.switchValue = $event;\r\n        this.filterColumns(searchWords);\r\n    }\r\n\r\n    refresh() {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    hidePanel() {\r\n        this.showSchemePanel = false;\r\n        this.refresh();\r\n    }\r\n\r\n    // æ°å¢æ¹æ¡\r\n    onNewSchemeClick($event, saveas = 'new') {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.hidePanel();\r\n        this.addNewScheme.emit({ type: saveas || 'new' });\r\n\r\n        \r\n    }\r\n\r\n    // æ¾ç¤ºæ¹æ¡åè¡¨ç®¡ççªå£\r\n    onShowSchemeList($event) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.hidePanel();\r\n        this.showSchemeList.emit();\r\n    }\r\n\r\n\r\n    private schemeChangedForSingleHeader(schemeSettings) {\r\n        if (!schemeSettings) {\r\n            this._reset2Default();\r\n        } else {\r\n            this.settings = schemeSettings;\r\n            this.fields = schemeSettings.viewColumns;\r\n            this.columns[0].forEach(f => {\r\n                f.visible = this.fields.indexOf(f.field) > -1;\r\n            });\r\n        }\r\n\r\n        this.searchResultIsVisibleAll = this.seachResultIsCheckAll();\r\n    }\r\n\r\n    private schemeChangedForMultiHeaders(schemeSettings) {\r\n        if (schemeSettings) {\r\n            this.settings = schemeSettings;\r\n            const options = this.gridInstance.dfs['_state'].initialOptions;\r\n            this.multiHeaderOptions = {\r\n                treeData: this.settings.multiHeaders? this.settings.multiHeaders.treeData: null,\r\n                columns: options.groupHeaderFields\r\n            }\r\n        } else {\r\n            this._reset2DefalutFormMultiHeaders();\r\n        }\r\n    }\r\n\r\n    // æ¹æ¡ç¹å»\r\n    onSchemeItemClick($event, item) {\r\n        setTimeout(() => {\r\n            this.currentSchemeItem = item;\r\n            this.showSchemePanel = false;\r\n\r\n            let schemeSettings = null;\r\n            if (item && item.queryConditionString) {\r\n                schemeSettings = JSON.parse(item.queryConditionString);\r\n                schemeSettings = schemeSettings[this.localeSer.localeId];\r\n            }\r\n\r\n            if (this.enableMultipleHeaders) {\r\n                this.schemeChangedForMultiHeaders(schemeSettings);\r\n            } else {\r\n                this.schemeChangedForSingleHeader(schemeSettings);\r\n            }\r\n\r\n            this.schemeSer.setSettings(this.settings);\r\n\r\n            this.defaultSettings(item);\r\n\r\n            this.schemeChanged.emit(item);\r\n            this.refresh();\r\n        });\r\n    }\r\n\r\n    /** å¤è¡¨å¤´é»è®¤è®¾ç½® */\r\n    private defaultSettings(item?: any) {\r\n        if (this.enableMultipleHeaders) {\r\n            if (!item || (this.settings && this.settings.multiHeaders && !this.settings.multiHeaders.treeData)) { // ç³»ç»é¢ç½®\r\n                setTimeout(() => {\r\n                    this.settings.multiHeaders = this.multiHeaderRef.getSettings();\r\n                    this.schemeSer.setSettings(this.settings);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    dirtySettings(flag) {\r\n        // this.isChanged = flag;\r\n    }\r\n\r\n    clearSearch($event, input) {\r\n        if (input && input.value) {\r\n            this.filterColumns('');\r\n            input.value = '';\r\n        }\r\n    }\r\n}\r\n","import { DataColumn } from '@farris/ui-datagrid';\r\nimport { TreeNode } from '@farris/ui-treetable';\r\n\r\nexport interface SettingModel {\r\n    columnFormat?: DataColumn[];\r\n    viewColumns?: string[];\r\n    groupField?: Array<string> | string;\r\n    sortInfo?: {\r\n        sortName?: string[];\r\n        sortOrder?: string[];\r\n    }\r\n    expandGroupRows?: boolean;\r\n    // å¤è¡¨å¤´è®¾ç½®\r\n    multiHeaders?: {\r\n        viewCols: Array<Array<Partial<DataColumn>>>,\r\n        treeData: Array<TreeNode>\r\n    };\r\n};\r\n\r\n\r\n\r\nexport interface DatagridSchemeModel {\r\n    id?: string;\r\n     /** è¡¨åä¸­è®°å½Datagridæ¹æ¡åè¡¨çIDï¼çè§£ä¸ºç±»å«ï¼è·åDatagrid æ¹æ¡åè¡¨æ¶æ ¹æ®æ­¤IDè¿è¡æ¥è¯¢ */\r\n    belongId: string;\r\n    code?: string;\r\n    /** æ¯å¦ä¸ºé»è®¤ï¼ 1 é»è®¤ï¼0 éé»è®¤ */\r\n    isDefault?: boolean;\r\n    /** æ¯å¦ä¸ºç³»ç»é¢å¶ */\r\n    isSystem?: boolean;\r\n    type?: 'private'|'public'|'org'\r\n    /** æ¹æ¡åç§° */\r\n    name: string;\r\n    /** æ¹æ¡åå®¹JSONä¸² */\r\n    queryConditionString?: string;\r\n    /** åå»ºäºº */\r\n    userId?: string;\r\n    userName?: string;\r\n    userCode?: string;\r\n    /* å¯åºåéç½®å±äºåè¡¨è¿æ¯ç­éæ¹æ¡, ç­éæ¹æ¡ä¸ºé»è®¤å¼query-scheme-1; åè¡¨ä¸ºå¶ä» */\r\n    extendId?: string;\r\n    /** ç¨äºå­æ¾ç»ç»å¬å±éç½®å±äºåªäºç»ç»ï¼ä»¥ç»ç»éæ©ç»ä»¶çè¿åå¼ä¸ºå */\r\n    extendInfo?: any[];\r\n}\r\n\r\n\r\nexport interface SetPublicSchemeModel {\r\n    id: string;\r\n    businessId: string;\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\nexport interface SetOrgAuthSchemeModel {\r\n    id: string;\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\nexport interface SchemeAuthModel {\r\n    success: boolean;\r\n    errorMessage?: any;\r\n    authOperationData: SetPublicSchemeModel[];\r\n    authOrganizationData: SetOrgAuthSchemeModel[];\r\n    currentUserId?: string;\r\n}\r\n\r\nexport interface BatchScheme {\r\n    belongId: string;\r\n    defaultId: string;\r\n    deletedIds: string[];\r\n}\r\n\r\nexport interface SchemeState {\r\n    list?: DatagridSchemeModel[];\r\n    current?: null;\r\n}\r\n\r\nexport interface DgSchemeState {\r\n    [gridId: string]: SchemeState;\r\n}\r\n\r\n\r\nexport interface ColumnTreeOptions {\r\n    columns?: Array<Array<Partial<DataColumn>>>,\r\n    treeData?: Array<TreeNode>\r\n}\r\n\r\nexport const IS_MULTI_HEADER_STRING = '-$MULTIHEADER$';","import { Injector } from \"@angular/core\";\r\nimport { appendPerfixForUri, IdService } from \"@farris/ui-common\";\r\nimport { Observable, of, Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { BatchScheme, DatagridSchemeModel, DgSchemeState, IS_MULTI_HEADER_STRING, SchemeAuthModel, SchemeState, SettingModel } from \"./setting.model\";\r\nimport { cloneDeep } from \"lodash-es\";\r\n\r\n\r\n/** ä¿å­æ¹æ¡API */\r\nconst SCHEME_WEBAPI = '/api/runtime/sys/v1.0/querysolution';\r\n/** è·åæ¹æ¡åè¡¨API */\r\nconst SCHEME_WEBAPI_QUERY = `${SCHEME_WEBAPI}/belongId/`;\r\n/** æ¹æ¡åè¡¨ç®¡ç- è®¾é»è®¤ãå é¤ API */\r\nconst SCHEME_WEBAPI_UPDATE = `${SCHEME_WEBAPI}/batch`;\r\n/** æééªè¯ */\r\nconst SCHEME_WEBAPI_Auth = '/api/runtime/sys/v1.0/querysolution/componentType/Datagrid';\r\n\r\nconst LANGUAGE_WEBAPI = '/api/runtime/sys/v1.0/loginInfo?infoType=supportedLanguage';\r\n\r\n\r\nexport class DatagridSchemeService {\r\n    private restService = null;\r\n    private state: DgSchemeState = {};\r\n    private perfixStr = '';\r\n    schemeList$ = new Subject();\r\n\r\n    private schemeApi = {\r\n        SCHEME_WEBAPI,\r\n        /** è·åæ¹æ¡åè¡¨API */\r\n        SCHEME_WEBAPI_QUERY,\r\n        /** æ¹æ¡åè¡¨ç®¡ç- è®¾é»è®¤ãå é¤ API */\r\n        SCHEME_WEBAPI_UPDATE,\r\n        /** æééªè¯ */\r\n        SCHEME_WEBAPI_Auth,\r\n\r\n        LANGUAGE_WEBAPI\r\n    };\r\n\r\n    private schemeKey: any = {};\r\n\r\n    private currentSchemeSettings = null;\r\n\r\n    constructor(private inject: Injector) {\r\n    }\r\n\r\n    setUriPerfix(perfixStr: string) {\r\n        this.perfixStr = perfixStr || '';\r\n    }\r\n\r\n    update(d: SchemeState, gridId: string) {\r\n        if (!this.state[gridId]) {\r\n            this.state[gridId] = {};\r\n        }\r\n        this.state[gridId] = Object.assign(this.state[gridId], d);\r\n    }\r\n\r\n    setRestService(httpSer: any) {\r\n        if (httpSer && httpSer['befRepository']) {\r\n            this.restService = httpSer['befRepository']['restService'];\r\n        }\r\n    }\r\n\r\n    private mergeUri(uri, perfix) {\r\n        return appendPerfixForUri ? appendPerfixForUri(uri, perfix): uri;\r\n    }\r\n\r\n    private getWebFormKey() {\r\n        const webformHash = window.location.hash.split('?')[0];\r\n        return webformHash.substring(webformHash.lastIndexOf('/') + 1);\r\n    }\r\n\r\n    destory(gridId: string) {\r\n        delete this.schemeKey[gridId];\r\n    }\r\n\r\n    getSchemeKey(gridId: string) {\r\n        if (!this.schemeKey[gridId]) {\r\n            const formKey = this.getWebFormKey();\r\n            this.schemeKey[gridId] = `${formKey}_DatagridScheme_${gridId}`;\r\n        }\r\n        return this.schemeKey[gridId];\r\n    }\r\n\r\n    getSchemeList(gridID: string, isMultiHeader = false): Observable<DatagridSchemeModel[]> {\r\n        let uri = this.schemeApi.SCHEME_WEBAPI_QUERY + this.getBelongId(gridID, isMultiHeader);\r\n        uri = this.mergeUri(uri, this.perfixStr);\r\n        if (this.restService) {\r\n            return this.restService.invoke(uri, 'GET', null, null, false);\r\n        }\r\n    }\r\n\r\n    updateSchemeData(gridID: string, schemeData) {\r\n        let schemeList = this.getStateValue(gridID, 'list');\r\n        schemeList = schemeList.filter(n => n.id !== schemeData.id);\r\n        schemeList.push(schemeData);\r\n        this.setSchemeList(gridID, schemeList);\r\n    }\r\n\r\n    private getBelongId(gridID: string, isMultiHeader = false) {\r\n        let id = this.getSchemeKey(gridID);\r\n        if (isMultiHeader) {\r\n            id = id + IS_MULTI_HEADER_STRING;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    saveScheme(scheme: DatagridSchemeModel, gridID: string, isUpdate = false, isMultiHeader = false) {\r\n        if (this.restService) {\r\n            const httpMethod = isUpdate ? 'PUT': 'POST';\r\n            scheme.belongId = this.getBelongId(gridID, isMultiHeader);\r\n\r\n            const uri = this.mergeUri(this.schemeApi.SCHEME_WEBAPI, this.perfixStr);\r\n            return this.restService.invoke(uri, httpMethod, null, { body: scheme}, false);\r\n        }\r\n    }\r\n\r\n    updateScheme(param: BatchScheme, gridID: string, isMultiHeader = false): Observable<any> {\r\n        if (!param) {\r\n            return of(false);\r\n        }\r\n        const belongId = this.getBelongId(gridID, isMultiHeader);\r\n        param.belongId = belongId\r\n\r\n        if (param.belongId) {\r\n            const uri = this.mergeUri(this.schemeApi.SCHEME_WEBAPI_UPDATE, this.perfixStr);\r\n            return this.restService.invoke(uri, 'PUT', null, {body: param}, false);\r\n        }\r\n    }\r\n\r\n    getStateValue(gridId, ...statePro) {\r\n        const dgState = this.state[gridId];\r\n        if (dgState) {\r\n            if (statePro && statePro.length) {\r\n                return statePro.reduce((r, c) => {\r\n                    return r[c];\r\n                }, dgState)\r\n            }\r\n\r\n            return dgState;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private updateStateValue(gridId, propertyName, value) {\r\n        this.update({[propertyName]: value}, gridId);\r\n    }\r\n\r\n    setSchemeList(gridId, newSchemeList) {\r\n        this.updateStateValue(gridId, 'list', newSchemeList);\r\n        this.schemeList$.next(newSchemeList);\r\n    }\r\n\r\n    hasSchemeName(gridId, schemeName: any) {\r\n        const schemeList = this.getStateValue(gridId, 'list');\r\n        if (!schemeList || !schemeList.length) {\r\n            return false;\r\n        }\r\n\r\n        if (typeof schemeName === 'string') {\r\n            return !!schemeList.find(n => n.name === schemeName.trim());\r\n        } else {\r\n            if (typeof schemeName === 'object') {\r\n                const replayNames = [];\r\n                schemeList.forEach(n => {\r\n                    if (n.name) {\r\n                        const nameObj = JSON.parse(n.name);\r\n                        // const currentNames = Object.values(nameObj);\r\n                        for(let k in schemeName) {\r\n                            if (nameObj[k] === schemeName[k]) {\r\n                                replayNames.push(k);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return replayNames;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkAuthority(): Observable<SchemeAuthModel> {\r\n        const uri = this.mergeUri(this.schemeApi.SCHEME_WEBAPI_Auth, this.perfixStr);\r\n        return this.restService.invoke(uri, 'GET', null, null, false);\r\n    }\r\n\r\n    getLanguages() {\r\n        if (this.restService) {\r\n            const uri = this.mergeUri(this.schemeApi.LANGUAGE_WEBAPI, this.perfixStr);\r\n            return this.restService.invoke(uri, 'GET', null, null, false);\r\n        } else {\r\n            return of([]);\r\n        }\r\n    }\r\n\r\n    createSchemeTaskID() {\r\n        const idService: IdService = new IdService();\r\n        this['SCHEME_TASK_ID'] = idService.guid();\r\n        this.currentSchemeSettings = null;\r\n    }\r\n\r\n\r\n    setSettings(configs: any) {\r\n        this.currentSchemeSettings = {\r\n            taskid: this['SCHEME_TASK_ID'],\r\n            values: cloneDeep(configs)\r\n        }\r\n    }\r\n\r\n    getSettings() {\r\n        return this.currentSchemeSettings;\r\n    }\r\n\r\n    isSchemeChanged(nowSettings: SettingModel, isMultiHeader: boolean) : boolean {\r\n        let { sortInfo, viewColumns, groupField, columnFormat, expandGroupRows, multiHeaders } = nowSettings;\r\n        let { sortInfo: sortInfo1, viewColumns: viewColumns1, groupField: groupField1, columnFormat: columnFormat1, expandGroupRows: expandGroupRows1, multiHeaders: multiHeaders1 } = this.getSettings().values;\r\n\r\n        const checkSortInfo = (_sortInfo) => {\r\n            if (!_sortInfo || !Object.keys(_sortInfo).length) {\r\n                _sortInfo = {\r\n                    sortName: [],\r\n                    sortOrder: []\r\n                };\r\n            }\r\n\r\n            return _sortInfo;\r\n        }\r\n        sortInfo = checkSortInfo(sortInfo);\r\n        sortInfo1 = checkSortInfo(sortInfo1);\r\n\r\n        const checkGroupField = (_groupField) => {\r\n            if (!_groupField) {\r\n                _groupField = [];\r\n            }\r\n            return _groupField;\r\n        }\r\n        groupField = checkGroupField(groupField);\r\n        groupField1 = checkGroupField(groupField1);\r\n\r\n\r\n        let nowconfig, initConfig;\r\n        if (isMultiHeader) {\r\n            nowconfig =  { sortInfo, expandGroupRows, groupField, multiHeaders };\r\n            initConfig  =  { sortInfo: sortInfo1, expandGroupRows: expandGroupRows1, groupField:groupField1, multiHeaders: multiHeaders1 };\r\n        } else {\r\n            nowconfig =  { columnFormat,expandGroupRows,groupField, sortInfo, viewColumns };\r\n            initConfig  =  { \r\n                columnFormat: columnFormat1,\r\n                expandGroupRows: expandGroupRows1, \r\n                groupField:groupField1,\r\n                sortInfo: sortInfo1,\r\n                viewColumns: viewColumns1\r\n            };\r\n        }\r\n\r\n        const _clearData = (data) => {\r\n            return JSON.stringify(data).replace(/UNFIXED/g, '').replace(/\"calculationType\":-1,/g, '').replace(/\"calculationType\":-1/g, '');\r\n        }\r\n\r\n        return _clearData(nowconfig) != _clearData(initConfig);\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'new-scheme',\r\n    templateUrl: './newscheme.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NewSchemeComponent implements OnInit {\r\n\r\n    @ViewChild('header') header: ElementRef<any>;\r\n\r\n    @Input() dataPermissionIds = [];\r\n\r\n    @Output() closeModal = new EventEmitter();\r\n    @Output() submitModal = new EventEmitter();\r\n    @Output() checkAuthority = new EventEmitter();\r\n\r\n    schemeInfo = {\r\n        name: '',\r\n        isDefault: false,\r\n        type: 'private',\r\n        orgids: ''\r\n    }\r\n\r\n    schemeType = 'private';\r\n\r\n    noPublicAuthority = false;\r\n    noOrgAuthority = false;\r\n\r\n    languages = [{ code: 'zh-CHS', name: 'ä¸­æç®ä½', default: true },{ code: 'en', name: 'English' },{ code: 'zh-CHT', name: 'ä¸­æç¹ä½'}];\r\n    nameMaxLength = { 'zh-CHS': 9, 'zh-CHT': 9, en: 20 };\r\n    \r\n    constructor(private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    close($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    submit($event) {\r\n        this.submitModal.emit(this.schemeInfo);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.close($event);\r\n    }\r\n\r\n    onSelectedOrg($event) {\r\n        if ($event.selections && $event.selections.length ) {\r\n            let orgids = $event.selections.map(n => n.orgId);\r\n            this.schemeInfo.orgids = orgids;\r\n        }\r\n    }\r\n\r\n    onSetRangeType($event: MouseEvent, val) {\r\n        $event.stopPropagation();\r\n        this.schemeType = val;\r\n        if (val === 'public' || val === 'org') {\r\n            this.checkAuthority.emit({ value: val, schemeInfo: this.schemeInfo });\r\n        } else {\r\n            this.schemeInfo.type = val;\r\n        }\r\n    }\r\n\r\n    refresh(hasAuthority = { public: true, org: true }) {\r\n        this.schemeInfo = {...this.schemeInfo};\r\n        this.schemeType = this.schemeInfo.type;\r\n        this.noPublicAuthority = !hasAuthority.public;\r\n        this.noOrgAuthority = !hasAuthority.org;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    getSelectedId($event) {\r\n        if ($event.selections &&$event.selections.length) {\r\n            this.schemeInfo.orgids = $event.selections.map(n => n.orgId);\r\n        } else {\r\n            this.schemeInfo.orgids = '';\r\n        }\r\n    }\r\n\r\n    clearAllOrgs() {\r\n        this.schemeInfo.orgids = '';\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { getMultilingualValue } from '../getValueWithLocaleId';\r\n\r\n@Component({\r\n    selector: 'scheme-list',\r\n    templateUrl: 'scheme-list.component.html'\r\n})\r\n\r\nexport class SchemeListComponent implements OnInit {\r\n\r\n    @Input() items = [];\r\n    \r\n    @Output() closeModal = new EventEmitter();\r\n    @Output() submitModal = new EventEmitter();\r\n\r\n    @Input() removeItem = true;\r\n\r\n    @Input() currentSchemeId = '';\r\n    \r\n    @ViewChild('header') header: ElementRef<any>;\r\n    @ViewChild('schemeName') schemeName: TemplateRef<any>;\r\n    @ViewChild('schemeIsDefault') schemeIsDefault: TemplateRef<any>;\r\n    @ViewChild('btnDel') btnDel: TemplateRef<any>;\r\n    @ViewChild('dg') dg: DatagridComponent;\r\n\r\n    columns = [];\r\n\r\n    currentUserId = '';\r\n   \r\n    changes: {\r\n        defaultId?: string,\r\n        deletedIds?: any[]\r\n    } = null;\r\n    constructor(private cd: ChangeDetectorRef, private localeSer: LocaleService, private injector: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const colName = this.localeSer.getValue('datagrid-scheme.columns.name') || 'åç§°';\r\n        const colType = this.localeSer.getValue('datagrid-scheme.columns.type') || 'å±æ§';\r\n        const colDefault = this.localeSer.getValue('datagrid-scheme.columns.isDefault') || 'é»è®¤';\r\n        const colCreator = this.localeSer.getValue('datagrid-scheme.columns.username') || 'åå»ºäºº';\r\n        const colMgr = this.localeSer.getValue('datagrid-scheme.columns.mgr') || 'ç®¡ç';\r\n\r\n        const publicTxt = this.localeSer.getValue('datagrid-scheme.isPublic') || 'å¬å±';\r\n        const privateTxt = this.localeSer.getValue('datagrid-scheme.isPrivate') || 'ä¸ªäºº';\r\n        const orgTxt = this.localeSer.getValue('datagrid-scheme.isOrg') || 'ç»ç»';\r\n\r\n\r\n        this.columns = [\r\n            // {field: 'name', title: 'åç§°', width: 150, template: this.schemeName},\r\n            {field: 'name', title: colName, width: 150, formatter: (v) => {\r\n                return getMultilingualValue(JSON.parse(v), this.localeSer.localeId);\r\n            }},\r\n            {field: 'type', title: colType, width: 50, halign: 'center', align: 'center', formatter: (v, d) => {\r\n                switch(v) {\r\n                    case 'public':\r\n                        return '<span class=\"scheme-manager__label px-1 public\">'+ publicTxt +'</span>';\r\n                    case 'org':\r\n                        return '<span class=\"scheme-manager__label px-1 org\">'+ orgTxt +'</span>';\r\n                    case 'private':\r\n                    default:\r\n                        return '<span class=\"scheme-manager__label px-1 private\">'+ privateTxt +'</span>';\r\n                }\r\n            }},\r\n            {field: 'isDefault', title: colDefault, width: 50, halign: 'center', align: 'center', template: this.schemeIsDefault },\r\n            {field: 'userName', title: colCreator, width: 80},\r\n            {title: colMgr, width: 50, template: this.btnDel, halign: 'center', align: 'center',}\r\n        ];\r\n    \r\n    }\r\n\r\n    onClose($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        this.submitModal.emit( this.changes);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    setDefault($event: any, ctx) {\r\n        const r = $event == '1';\r\n        // $event.stopPropagation();\r\n        this.items.forEach(n => {\r\n            n.isDefault = false;\r\n            if (n.id === ctx.rowData.id && r) {\r\n                n.isDefault = r;\r\n            }\r\n        });\r\n\r\n        this.items = [...this.items];\r\n\r\n        const defaultItem = this.items.find(n => n.isDefault);\r\n        if (defaultItem) {\r\n            this.changes = this.changes || {};\r\n            this.changes.defaultId = defaultItem.id;\r\n        }\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    onSchemeDel($event, ctx) {\r\n        if ((this.currentUserId === ctx.rowData[\"userId\"] &&  ctx.rowData['type']=='private') || this.removeItem) {\r\n            $event.stopPropagation();\r\n            const id = ctx.rowData.id;\r\n            this.items = this.items.filter(n => n.id !== id);\r\n            this.changes = this.changes || {};\r\n            this.changes.deletedIds = [...(this.changes.deletedIds || []), id];\r\n            if (id === this.changes.defaultId) {\r\n                this.changes.defaultId = '';\r\n                delete this.changes.defaultId;\r\n            }\r\n        }\r\n    }\r\n}","/** åè®¾ç½®ç¸å³å¤è¯­èµæº */\r\nexport const DATAGRID_SETTINGS_LOCALEDATA = {\r\n    en: {\r\n        'datagrid-settings': {\r\n            noAuth: {\r\n                public: 'You do not have permission to set the usage scope of the scheme as public.',\r\n                org: 'You do not have permission to set the usage range of the scheme as organization.'\r\n            },\r\n            has: {\r\n                exist: 'The scheme name already exists, please modify it.',\r\n                chs: 'Simplified Chinese name already exists.',\r\n                cht: 'Traditional Chinese name already exists.',\r\n                en: 'English name already exists.'\r\n            },\r\n            required: {\r\n                schemeName: 'Please enter a scheme name.',\r\n                chs: 'Please enter a simplified Chinese name.',\r\n                cht: 'Please enter a name in Traditional Chinese.',\r\n                en: 'Please enter an English name.',\r\n                org: 'Please select an organization.'\r\n            },\r\n            groupRowStatus: {\r\n                label: 'Group Row Status',\r\n                expand: 'open',\r\n                collapse: 'fold'\r\n            },\r\n            column: {\r\n                title: 'Column title',\r\n                fixed: 'Fixed type',\r\n                unFixed: 'Unfixed',\r\n                leftFixed: 'Left fixed',\r\n                rightFixed: 'Right fixed'\r\n            }\r\n        },\r\n        'datagrid-scheme': {\r\n            saveTitle: 'Save Scheme',\r\n            namePlaceholder: 'Please enter a scheme name (no more than 9 characters)',\r\n            setPrivate: 'Private',\r\n            privateTip: 'When set as private, you can only view and use the scheme yourself',\r\n            setPublic: 'Public',\r\n            publicTip: 'When public, all users can view and use the scheme',\r\n            setOrg: 'Organization',\r\n            orgTip: 'When it is set to organization, users in the organization can view and use the scheme',\r\n            setDefault: 'Default',\r\n            defaultTip: 'The next time you enter this function, the scheme will be loaded by default',\r\n            syspreset: 'System preset',\r\n            isDefault: 'Default',\r\n            isPublic: 'Public',\r\n            isOrg: 'Org',\r\n            isPrivate: 'Private',\r\n            newScheme: 'Add New Scheme',\r\n            mgrScheme: 'Manage',\r\n            saveas: 'Save as',\r\n            onlyshowcolumns: 'only the display column',\r\n            schemeList: 'Scheme list',\r\n            delete: 'Delete this shceme',\r\n            columns:  {\r\n                name: 'Name',\r\n                type: 'Type',\r\n                isDefault: 'IsDefault',\r\n                username: 'Creator',\r\n                mgr: 'Manage'\r\n            },\r\n            currentSheme: 'Current schemeï¼',\r\n            schemeChanged: {\r\n                title: 'The scheme has been changed. Do you want to save it as a new scheme?',\r\n                tips: 'cancel: discard modifications; No: save the current scheme; Yes: save as a new scheme.',\r\n                yes: 'Yes',\r\n                no: 'No',\r\n                cancel: 'Cancel'\r\n            },\r\n            noDisplyColumnTip: 'Please set the fields to be displayed.'\r\n        },\r\n        'headerGroup': {\r\n            title: 'Multiple meter heads',\r\n            preview: 'Preview effect',\r\n            tips: 'The fields in the (candidate column) will not be displayed in the list; Click on the field name and display the relevant operation buttons on the right.',\r\n            contextMenus: {\r\n                new: 'New Header',\r\n                newChild: 'New Child Header',\r\n                setDataField: 'Assign Data Columns',\r\n                rename: 'Rename',\r\n                top: 'Top',\r\n                up: 'Up',\r\n                down: 'Down',\r\n                bottom: 'Bottom',\r\n                cancelGroup: 'Cancel',\r\n                remove: 'Remove'\r\n            },\r\n            candidate: 'Candidate columns',\r\n            setHeader: 'Set as header',\r\n            ok: 'Ok',\r\n            cancel: 'Cancel',\r\n            required: 'Please enter a header name!',\r\n            defaultGroupHeaderName: 'NewHeader',\r\n            newHeaderPlaceholder: 'Please enter a header name.',\r\n            newHeaderLabel: 'Header Name'\r\n        }\r\n    },\r\n    'zh-CHS': {\r\n        'datagrid-settings': {\r\n            noAuth: {\r\n                public: 'æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºå¬å±çæéã',\r\n                org: 'æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºç»ç»çæéã'\r\n            },\r\n            has: {\r\n                exist: 'æ¹æ¡åç§°å·²å­å¨ï¼è¯·ä¿®æ¹ã',\r\n                chs: 'ç®ä½ä¸­æåç§°å·²å­å¨ã',\r\n                cht: 'ç¹ä½ä¸­æåç§°å·²å­å¨ã',\r\n                en: 'è±æåç§°å·²å­å¨ã'\r\n            },\r\n            required: {\r\n                schemeName: 'è¯·è¾å¥æ¹æ¡åç§°ã',\r\n                chs: 'è¯·è¾å¥ç®ä½ä¸­æåç§°ã',\r\n                cht: 'è¯·è¾å¥ç¹ä½ä¸­æåç§°ã',\r\n                en: 'è¯·è¾å¥è±æåç§°ã',\r\n                org: 'è¯·éæ©ç»ç»ã'\r\n            },\r\n            groupRowStatus: {\r\n                label: 'åç»è¡ç¶æ',\r\n                expand: 'å±å¼',\r\n                collapse: 'æå '\r\n            },\r\n            column: {\r\n                title: 'åæ é¢',\r\n                fixed: 'åºå®å',\r\n                unFixed: 'ä¸åºå®',\r\n                leftFixed: 'åºå®å¨å·¦ä¾§',\r\n                rightFixed: 'åºå®å¨å³ä¾§'\r\n            }\r\n        },\r\n        'datagrid-scheme': {\r\n            saveTitle: 'ä¿å­æ¹æ¡',\r\n            namePlaceholder: 'è¯·è¾å¥æ¹æ¡åç§°ï¼æå¤ä¸è¶è¿9ä¸ªå­ç¬¦ï¼',\r\n            setPrivate: 'è®¾ä¸ºä¸ªäºº',\r\n            privateTip: 'è®¾ä¸ºä¸ªäººæ¶ï¼åªè½èªå·±æ¥çãä½¿ç¨è¯¥æ¹æ¡',\r\n            setPublic: 'è®¾ä¸ºå¬å±',\r\n            publicTip: 'è®¾ä¸ºå¬å±æ¶ï¼ææç¨æ·é½å¯æ¥çãä½¿ç¨è¯¥æ¹æ¡',\r\n            setOrg: 'è®¾ä¸ºç»ç»',\r\n            orgTip: 'è®¾ä¸ºç»ç»æ¶ï¼ç»ç»åçç¨æ·åè½æ¥çãä½¿ç¨è¯¥æ¹æ¡',\r\n            setDefault: 'è®¾ä¸ºé»è®¤',\r\n            defaultTip: 'ä¸æ¬¡è¿å¥æ­¤åè½æ¶ï¼é»è®¤å è½½è¯¥æ¹æ¡',\r\n            syspreset: 'ç³»ç»é¢å¶',\r\n            isDefault: 'é»è®¤',\r\n            isPublic: 'å¬å±',\r\n            isOrg: 'ç»ç»',\r\n            isPrivate: 'ä¸ªäºº',\r\n            newScheme: 'æ°å¢æ¹æ¡',\r\n            mgrScheme: 'ç®¡ç',\r\n            saveas: 'å¦å­ä¸º',\r\n            onlyshowcolumns: 'ä»çå±ç¤ºå',\r\n            schemeList: 'æ¹æ¡åè¡¨',\r\n            delete: 'å é¤',\r\n            columns:  {\r\n                name: 'åç§°',\r\n                type: 'å±æ§',\r\n                isDefault: 'é»è®¤',\r\n                username: 'åå»ºäºº',\r\n                mgr: 'ç®¡ç'\r\n            },\r\n            currentSheme: 'å½åæ¹æ¡ï¼',\r\n            schemeChanged: {\r\n                title: 'æ¹æ¡å·²æ´æ¹ï¼æ¯å¦å¦å­ä¸ºæ°æ¹æ¡ï¼',\r\n                tips: 'åæ¶ï¼æ¾å¼ä¿®æ¹ï¼å¦ï¼ä¿å­å½åæ¹æ¡ï¼æ¯ï¼æ¹æ¡å¦å­ä¸º',\r\n                yes: 'æ¯',\r\n                no: 'å¦',\r\n                cancel: 'åæ¶'\r\n            },\r\n            noDisplyColumnTip: 'è¯·è®¾ç½®è¦æ¾ç¤ºçå­æ®µ'\r\n\r\n        },\r\n        'headerGroup': {\r\n            title: 'å¤è¡¨å¤´',\r\n            preview: 'é¢è§ææ',\r\n            tips: 'å¨ï¼åéåï¼ä¸­çå­æ®µï¼å°ä¸å¨åè¡¨ä¸­æ¾ç¤º; ç¹å»å­æ®µåç§°ï¼å¨å³ä¾§æ¾ç¤ºç¸å³æä½æé®ã',\r\n            contextMenus: {\r\n                new: 'æ°å»ºè¡¨å¤´',\r\n                newChild: 'æ°å»ºå­çº§è¡¨å¤´',\r\n                setDataField: 'åéæ°æ®å',\r\n                rename: 'éå½å',\r\n                top: 'ç½®é¡¶',\r\n                up: 'ä¸ç§»',\r\n                down: 'ä¸ç§»',\r\n                bottom: 'ç½®åº',\r\n                cancelGroup: 'åæ¶åç»',\r\n                remove: 'ç§»é¤'\r\n            },\r\n            candidate: '(åéå)',\r\n            setHeader: 'è®¾ä¸ºè¡¨å¤´',\r\n            ok: 'ç¡®å®',\r\n            cancel: 'åæ¶',\r\n            required: 'è¯·è¾å¥è¡¨å¤´åç§°ï¼',\r\n            defaultGroupHeaderName: 'åç»è¡¨å¤´1',\r\n            newHeaderPlaceholder: 'è¯·è¾å¥åç§°',\r\n            newHeaderLabel: 'è¡¨å¤´åç§°'\r\n        }\r\n    },\r\n    'zh-CHT': {\r\n        'datagrid-settings': {\r\n            noAuth: {\r\n                public: 'æ¨æ²æå°æ¹æ¡çä½¿ç¨ç¯åè¨­ç½®ç²å¬å±çæ¬éã',\r\n                org: 'æ¨æ²æå°æ¹æ¡çä½¿ç¨ç¯åè¨­ç½®ç²çµç¹çæ¬éã'\r\n            },\r\n            has: {\r\n                exist: 'æ¹æ¡åç¨±å·²å­å¨ï¼è«ä¿®æ¹ã',\r\n                chs: 'ç°¡é«ä¸­æåç¨±å·²å­å¨ã',\r\n                cht: 'ç¹é«ä¸­æåç¨±å·²å­å¨ã',\r\n                en: 'è±æåç¨±å·²å­å¨ã'\r\n            },\r\n            required: {\r\n                schemeName: 'è«è¼¸å¥æ¹æ¡åç¨±.',\r\n                chs: 'è«è¼¸å¥ç°¡é«ä¸­æåç¨±ã',\r\n                cht: 'è«è¼¸å¥ç¹é«ä¸­æåç¨±ã',\r\n                en: 'è«è¼¸å¥è±æåç¨±ã',\r\n                org: 'è«é¸æçµç¹ã'\r\n            },\r\n            groupRowStatus: {\r\n                label: 'åçµè¡çæ',\r\n                expand: 'å±é',\r\n                collapse: 'æç'\r\n            },\r\n            column: {\r\n                title: 'åæ¨é¡',\r\n                fixed: 'åºå®å',\r\n                unFixed: 'ä¸åºå®',\r\n                leftFixed: 'åºå®å¨å·¦å´',\r\n                rightFixed: 'åºå®å¨å³å´'\r\n            }\r\n        },\r\n        'datagrid-scheme': {\r\n            saveTitle: 'ä¿å­æ¹æ¡',\r\n            namePlaceholder: 'è«è¼¸å¥æ¹æ¡åç¨±ï¼æå¤ä¸è¶é9åå­ç¬¦ï¼',\r\n            setPrivate: 'è¨­ç²åäºº',\r\n            privateTip: 'è¨­ç²åäººæï¼åªè½èªå·±æ¥çãä½¿ç¨è©²æ¹æ¡',\r\n            setPublic: 'è¨­ç²å¬å±',\r\n            publicTip: 'è¨­ç²å¬å±æ¶ï¼ææç¨æ¶é½å¯æ¥çãä½¿ç¨è©²æ¹æ¡',\r\n            setOrg: 'è¨­ç²çµç¹',\r\n            orgTip: 'è¨­ç²çµç¹æï¼çµç¹å§çç¨æ¶åè½æ¥çãä½¿ç¨è©²æ¹æ¡',\r\n            setDefault: 'è¨­ç²é»èª',\r\n            defaultTip: 'ä¸æ¬¡é²å¥æ­¤åè½æï¼é»èªå è¼è©²æ¹æ¡',\r\n            syspreset: 'ç³»çµ±é å¶',\r\n            isDefault: 'é»èª',\r\n            isPublic: 'å¬å±',\r\n            isOrg: 'çµç¹',\r\n            isPrivate: 'åäºº',\r\n            newScheme: 'æ°å¢æ¹æ¡',\r\n            mgrScheme: 'ç®¡ç',\r\n            saveas: 'å¦å­ç²',\r\n            onlyshowcolumns: 'åçå±ç¤ºå',\r\n            schemeList: 'æ¹æ¡åè¡¨',\r\n            delete: 'åªé¤',\r\n            columns:  {\r\n                name: 'åç¨±',\r\n                type: 'å±¬æ§',\r\n                isDefault: 'é»èª',\r\n                username: 'åµå»ºäºº',\r\n                mgr: 'ç®¡ç'\r\n            },\r\n            currentSheme: 'ç¶åæ¹æ¡ï¼',\r\n            schemeChanged: {\r\n                title: 'æ¹æ¡å·²æ´æ¹ï¼æ¯å¦å¦å­ç²æ°æ¹æ¡ï¼',\r\n                tips: 'åæ¶ï¼æ¾æ£ä¿®æ¹ï¼å¦ï¼ä¿å­ç¶åæ¹æ¡ï¼æ¯ï¼æ¹æ¡å¦å­ç²',\r\n                yes: 'æ¯',\r\n                no: 'å¦',\r\n                cancel: 'åæ¶'\r\n            },\r\n            noDisplyColumnTip: 'è«è¨­ç½®è¦é¡¯ç¤ºçå­æ®µ'\r\n        },\r\n        'headerGroup': {\r\n            title: 'å¤è¡¨é ­',\r\n            preview: 'é è¦½ææ',\r\n            tips: 'å¨ï¼åé¸åï¼ä¸­çå­æ®µï¼å°ä¸å¨åè¡¨ä¸­é¡¯ç¤º; é»æå­æ®µåç¨±ï¼å¨å³å´é¡¯ç¤ºç¸éæä½æéã',\r\n            contextMenus: {\r\n                new: 'æ°å»ºè¡¨é ­',\r\n                newChild: 'æ°å»ºå­ç´è¡¨é ­',\r\n                setDataField: 'åéæ¸æå',\r\n                rename: 'éå½å',\r\n                top: 'ç½®é ',\r\n                up: 'ä¸ç§»',\r\n                down: 'ä¸ç§»',\r\n                bottom: 'ç½®åº',\r\n                cancelGroup: 'åæ¶åçµ',\r\n                remove: 'ç§»é¤'\r\n            },\r\n            candidate: '(åé¸å)',\r\n            setHeader: 'è¨­ç²è¡¨é ­',\r\n            ok: 'ç¢ºå®',\r\n            cancel: 'åæ¶',\r\n            newHeaderPlaceholder: 'è«è¼¸å¥åç¨±',\r\n            newHeaderLabel: 'è¡¨é ­åç¨±',\r\n            \r\n        }\r\n    }\r\n}","import { debounceTime, filter, map, switchMap, tap } from 'rxjs/operators';\r\nimport { forkJoin, Observable, of, Subscription, timer } from 'rxjs';\r\nimport { Injectable, Injector, InjectionToken, ComponentFactoryResolver, ApplicationRef } from '@angular/core';\r\nimport { DatagridComponent, DataColumn } from '@farris/ui-datagrid';\r\nimport { BsModalService, ModalOptions, ModalContainerComponent } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\nimport { cloneDeep, debounce, flatten } from 'lodash-es';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { TreeNode } from '@farris/ui-treetable';\r\nimport { CommonUtils, DebugService, IdService, WEBAPI_PREFIX_TOKEN } from '@farris/ui-common';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\nimport { DatagridSchemeService } from './datagrid-scheme.service';\r\nimport { NewSchemeComponent } from './scheme/newscheme.component';\r\nimport { SchemeListComponent } from './scheme/scheme-list.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { DatagridSchemeModel, IS_MULTI_HEADER_STRING, SchemeAuthModel, SettingModel } from './setting.model';\r\n\r\nimport { DATAGRID_SETTINGS_LOCALEDATA }  from './datagrid-settings-locale';\r\nimport { cleanGroupFields, cleanSortFields, columnsToTreeNodes, getDataFieldsForMultiHeaders, mergetColumnOptions, refreshGridColumns } from './mutli-headers.helper';\r\n\r\n\r\nexport const GRID_SETTINGS_WEBAPI =  new InjectionToken(' Farris DataGrid User Setting WebApi URI.');\r\n\r\nexport type NewSchemeCallBack = {\r\n    cancel?: (p?: any) => void,\r\n    ok: (p: any) => void\r\n};\r\n\r\n@Injectable()\r\nexport class DatagridSettingsService {\r\n\r\n    private multiSortMsg = 'åè¡¨ä¸­æªå¼å¯å¤åæåºçåè½ã è¯·æ£æ¥ï¼';\r\n    private columnsSortableMsg = 'æªå¼å¯åçæåºåè½ãè¯·æ£æ¥ï¼';\r\n    private notShowDialog = 'å¤è¡¨å¤´æä¸æ¯æåæ¾ç¤ºè®¾ç½®ï¼åæ¶æªå¯ç¨åæåºåè½ã';\r\n\r\n    private _httpRestService = null;\r\n\r\n    private languages: any = [];\r\n\r\n    get httpRestService() {\r\n        return this._httpRestService;\r\n    };\r\n\r\n    set httpRestService(httpSer) {\r\n        this._httpRestService = httpSer;\r\n\r\n        if (this.schemeService) {\r\n            this.schemeService.setRestService(httpSer);\r\n        }\r\n    }\r\n\r\n    private gridRefs: {[key: string]: DatagridComponent} = null;\r\n    private activeSchemeItem: {[schemeid: string]: any} = null;\r\n\r\n    private saving = false;\r\n    private cfr: ComponentFactoryResolver = null;\r\n    private app: ApplicationRef = null;\r\n    private schemeListSubscription: Subscription = null;\r\n\r\n    private schemeService: DatagridSchemeService;\r\n    private notifyService: NotifyService;\r\n\r\n    private commonUtils: CommonUtils;\r\n\r\n    private currentSchemeitem = null;\r\n    private prevSchemeItem = null;\r\n    private debugSer: DebugService = null;\r\n\r\n    constructor(private injector: Injector, private modalSer: BsModalService,\r\n                private messager: MessagerService, private idService: IdService,\r\n                private localeSer: LocaleService) {\r\n\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.app = this.injector.get(ApplicationRef);\r\n        this.notifyService = this.injector.get(NotifyService, null);\r\n        this.debugSer = this.injector.get(DebugService, null);\r\n        this.commonUtils = this.injector.get(CommonUtils, new CommonUtils());\r\n        this.schemeService = new DatagridSchemeService(this.injector);\r\n\r\n \r\n        this.localeSer.setLocaleData(DATAGRID_SETTINGS_LOCALEDATA);\r\n    }\r\n\r\n    setUriPerfixStr(perfixStr: string) {\r\n\r\n        if (perfixStr == '') {\r\n            if (window['gspframeworkService'] && window['gspframeworkService'].common) {\r\n                const basePath = window['gspframeworkService'].common.getBasePath;\r\n                if (basePath && basePath.get) {\r\n                    perfixStr = basePath.get();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (perfixStr != '' && perfixStr !== null) {\r\n            this.schemeService.setUriPerfix(perfixStr);\r\n        }\r\n\r\n    }\r\n\r\n    destroy(id?: string) {\r\n        if (this.gridRefs) {\r\n            if (id && this.gridRefs[id]) {\r\n                this.gridRefs[id] = null;\r\n                delete this.gridRefs[id];\r\n            } else {\r\n                if (!Object.keys(this.gridRefs).length) {\r\n                    this.gridRefs = null;\r\n                }\r\n            }\r\n        }\r\n        this.saving = false;\r\n        this.setActiveSchemeItem(id, null);\r\n        this.schemeService.destory(id);\r\n    }\r\n\r\n    private writeDebugMsg(msg, type = 'warn') {\r\n        if (this.debugSer) {\r\n            if (this.debugSer[type]) {\r\n                this.debugSer[type](msg);\r\n            } else {\r\n                console[type](msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGridInstance(dg: DatagridComponent) {\r\n        if (!dg) {\r\n            this.writeDebugMsg('DatagridSettingService: grid instance is null.')\r\n            return;\r\n        }\r\n        const id = dg.id;\r\n        this.gridRefs = this.gridRefs || {};\r\n        if (!this.gridRefs[id]) {\r\n            this.gridRefs[id] = dg;\r\n        }\r\n    }\r\n\r\n    getGridInstance(dgID: string) {\r\n        return this.gridRefs ? this.gridRefs[dgID] : null;\r\n    }\r\n\r\n    /** æ´æ°æ¹æ¡ä¸­çéç½®æ°æ® */\r\n    private updateSchemeSettings(schemeItem: DatagridSchemeModel, settings: Partial<SettingModel>) {\r\n        if (schemeItem && settings) {\r\n            const schemeContentObj = schemeItem.queryConditionString ? JSON.parse(schemeItem.queryConditionString) : {};\r\n            if (schemeContentObj) {\r\n                if ( schemeContentObj[this.localeSer.localeId]) {\r\n                    const schemeSettings = schemeContentObj[this.localeSer.localeId] || {};\r\n                    schemeContentObj[this.localeSer.localeId] = Object.assign(schemeSettings, settings);\r\n                } else {\r\n                    schemeContentObj[this.localeSer.localeId] =  settings;\r\n                }\r\n                schemeItem.queryConditionString = JSON.stringify(schemeContentObj);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ´æ°å½åæ¹æ¡éç½®æ°æ® */\r\n    updateActiveSchemeItemSettings(dgId: string, settings: Partial<SettingModel>) {\r\n        const schemeItem = this.getActiveSchemeItem(dgId);\r\n        this.updateSchemeSettings(schemeItem, settings);\r\n        if (schemeItem) {\r\n            this.schemeService.updateSchemeData(dgId, schemeItem);\r\n        }\r\n    }\r\n\r\n    /** è®¾ç½®æ´»å¨çæ¹æ¡ */\r\n    setActiveSchemeItem(dgId: string, activeItem: any) {\r\n        const schemekey = this.schemeService.getSchemeKey(dgId);\r\n        this.activeSchemeItem = this.activeSchemeItem || {};\r\n        if (activeItem) {\r\n            this.activeSchemeItem[schemekey] = cloneDeep(activeItem);\r\n        } else {\r\n            delete this.activeSchemeItem[schemekey];\r\n        }\r\n    }\r\n    /** è·åå½åæ´»å¨çæ¹æ¡ */\r\n    getActiveSchemeItem(dgId: string): DatagridSchemeModel {\r\n        const schemekey = this.schemeService.getSchemeKey(dgId);\r\n        return this.activeSchemeItem ? this.activeSchemeItem[schemekey] : null;\r\n    }\r\n\r\n    getSearchTypes() {\r\n        return [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n    }\r\n\r\n    showSimple(gridInstance: DatagridComponent, settings?: Partial<SettingModel>, selectedSchemeItem?: DatagridSchemeModel) {\r\n        let _columns = this.getCurrentConfigs().columns || gridInstance.columns;\r\n\r\n        const columns = this.convertColumnsToSimple(_columns);\r\n        columns[0] = [...columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild)];\r\n\r\n        const searchTypes = this.getSearchTypes();\r\n\r\n        if (this.cfr) {\r\n            const cmpFactory = this.cfr.resolveComponentFactory(SimpleColumnsComponent);\r\n            let simpleRef = cmpFactory.create(this.injector);\r\n            this.app.attachView(simpleRef.hostView);\r\n            simpleRef.instance.columns = columns;\r\n            simpleRef.instance.seartTypes = searchTypes;\r\n            simpleRef.instance.gridInstance = gridInstance;\r\n\r\n            simpleRef.instance.schemeSer = this.schemeService;\r\n\r\n            if (document.querySelector('#page-wrapper')) {\r\n                simpleRef.instance.top = 76;\r\n            }\r\n\r\n            simpleRef.instance.enableScheme = gridInstance.enableScheme;\r\n\r\n            if (!settings) {\r\n                settings = this.getCurrentConfigs();\r\n            }\r\n            \r\n            if (gridInstance.enableScheme) {\r\n                const _currentSchemtItem = this.getActiveSchemeItem(gridInstance.id);\r\n                if (settings) {\r\n                    //  ä»é«çº§æ¨¡å¼ è½¬å° ç®æ´æ¨¡å¼æ¶ï¼ä¿å­åå§å¼\r\n                    if (!simpleRef.instance['prevSchemeItem'] && this.prevSchemeItem) {\r\n                        simpleRef.instance['prevSchemeItem'] = cloneDeep(this.prevSchemeItem);\r\n                    }\r\n\r\n                    if (selectedSchemeItem) {\r\n                        this.updateSchemeSettings(selectedSchemeItem, settings);\r\n                        simpleRef.instance.currentSchemeItem = selectedSchemeItem;\r\n                    } else {\r\n                        if (_currentSchemtItem) {\r\n                            this.currentSchemeitem = _currentSchemtItem;\r\n                            this.prevSchemeItem = cloneDeep(_currentSchemtItem);\r\n                            simpleRef.instance.currentSchemeItem = _currentSchemtItem;\r\n                        } else {\r\n\r\n                            if (!Object.keys(settings).length) {\r\n                                settings = this.getLocalSettings(this.createConfigKey(gridInstance.id));\r\n                            }\r\n\r\n                            simpleRef.instance.currentSchemeItem = null;\r\n                            simpleRef.instance.settings = settings;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.currentSchemeitem = _currentSchemtItem;\r\n                    this.prevSchemeItem = cloneDeep(_currentSchemtItem);\r\n                    simpleRef.instance.currentSchemeItem = _currentSchemtItem;\r\n                }\r\n            } else {\r\n                if (gridInstance.enableSetMultiHeaders) {\r\n                    simpleRef.instance.settings = this.getCurrentConfigs();\r\n                } else {\r\n                    simpleRef.instance.settings = settings;\r\n                }\r\n            }\r\n\r\n\r\n            const zIndex = this.commonUtils.getFloatingLayerIndex();\r\n            simpleRef.location.nativeElement.style.zIndex = '' + zIndex;\r\n\r\n            document.body.appendChild(simpleRef.location.nativeElement);\r\n\r\n            simpleRef.instance.canceld.subscribe( () =>{\r\n                this.restoreScheme(gridInstance);\r\n            });\r\n\r\n            simpleRef.instance.closed.pipe(\r\n                switchMap( () => {\r\n                    if (simpleRef) {\r\n                        simpleRef.instance.container.nativeElement.style.right = '-500px';\r\n                        return timer(500);\r\n                    }\r\n                })\r\n            ).subscribe(() => {\r\n                simpleRef.location.nativeElement.remove();\r\n                simpleRef.destroy();\r\n                simpleRef = null;\r\n                if (this.schemeListSubscription) {\r\n                    this.schemeListSubscription.unsubscribe();\r\n                }\r\n\r\n                const _activeSchemtItem = this.getActiveSchemeItem(gridInstance.id);\r\n                if ((!this.currentSchemeitem || (_activeSchemtItem && _activeSchemtItem.id !== this.currentSchemeitem.id)) && (_activeSchemtItem &&_activeSchemtItem.queryConditionString)) {\r\n                    const _currentSettings = JSON.parse(_activeSchemtItem.queryConditionString)[this.localeSer.localeId];\r\n                    if (_currentSettings) {\r\n                        columns[0].forEach(f => {\r\n                            f.visible = _currentSettings.viewColumns.indexOf(f.field) > -1;\r\n                        });\r\n                    }\r\n                }      \r\n            });\r\n\r\n            // æå¼é«çº§è®¾ç½®çªå£\r\n            simpleRef.instance.advanced.subscribe(({ viewFields, settings, columns }) => {\r\n                // if (viewFields && viewFields.length){\r\n                //     this.updateSchemeSettings(simpleRef.instance.currentSchemeItem, {viewColumns: viewFields});\r\n                // }\r\n                this.setCurrentConfigs({...settings, columns});\r\n                this.prevSchemeItem = simpleRef.instance['prevSchemeItem'];\r\n                this['SCHEME_DEFAULT_TITLE'] = simpleRef.instance.defaultSchemeName;\r\n                this.showAdvanced(gridInstance, null, simpleRef.instance.currentSchemeItem);\r\n            });\r\n\r\n            simpleRef.instance.submit.subscribe( (e: any) => {\r\n                this.applySettings(e, gridInstance);\r\n            });\r\n\r\n            // å¤è¡¨åè®¾ç½®\r\n            simpleRef.instance.submitForGroupHeader.subscribe((e: any) => {\r\n                this.applySettings(e, gridInstance);\r\n            });\r\n\r\n            // simpleRef.instance.fieldsChange.subscribe((visibleFields: string[]) => {\r\n            //     this.updateActiveSchemeItemSettings(gridInstance.id, {viewColumns: visibleFields})\r\n            // });\r\n\r\n            // æå¼æ°å¢æ¹æ¡çªå£\r\n            simpleRef.instance.addNewScheme.subscribe((e: { type: 'new' | 'saveas'}) => {\r\n                this.showNewSchemeDialog(gridInstance, e, simpleRef.instance.collectSettings(), {\r\n                    ok: (t: any) => {\r\n                        // æ´æ¢ä¸ºæ°çæ¹æ¡\r\n                        simpleRef.instance.onSchemeItemClick(null, t);\r\n\r\n                        this.saveUserConfig\r\n                    }\r\n                });\r\n            });\r\n\r\n            simpleRef.instance.schemeList = this.schemeService.getStateValue(gridInstance.id, 'list') || [];\r\n\r\n            // æå¼æ¹æ¡ç®¡çåè¡¨çªå£\r\n            simpleRef.instance.showSchemeList.subscribe(() => {\r\n                this.getSchemeList(gridInstance.id).pipe(\r\n                    switchMap((t) => {\r\n                        return this.schemeService.checkAuthority().pipe(\r\n                            map((auth: SchemeAuthModel) => {\r\n                                return {\r\n                                    list: t,\r\n                                    ...auth\r\n                                }\r\n                            })\r\n                        )\r\n                    })\r\n                ).subscribe((t: any) => {\r\n                    this.schemeService.setSchemeList(gridInstance.id, t.list || []);\r\n                    this.showSchemeListDialog(gridInstance, cloneDeep(t.list || []), t, simpleRef);\r\n                });\r\n            });\r\n\r\n            this.schemeListSubscription = this.schemeService.schemeList$.subscribe((list: any) => {\r\n                simpleRef.instance.schemeList = list;\r\n\r\n                if (!list || !list.length) {\r\n                    this.setActiveSchemeItem(gridInstance.id, null);\r\n                    return;\r\n                }\r\n\r\n                const _activeSchemeItem = this.getActiveSchemeItem(gridInstance.id);\r\n                if (_activeSchemeItem) {\r\n                    let hasActiveItem = list.find(n => n.id === _activeSchemeItem.id);\r\n                    if (!hasActiveItem) {\r\n                        hasActiveItem = this.getDefaultScheme(list); // è·åè®¾ç½®ä¸ºå½åæ¹æ¡çé¡¹\r\n                        this.setActiveSchemeItem(gridInstance.id, hasActiveItem || null);\r\n                    }\r\n\r\n                    simpleRef.instance.currentSchemeItem = hasActiveItem;\r\n                }\r\n            });\r\n\r\n            // åæ¢æ¹æ¡\r\n            simpleRef.instance.schemeChanged.subscribe((t: any) => {\r\n                this.currentSchemeitem = t;\r\n                this.setActiveSchemeItem(gridInstance.id, cloneDeep(t));\r\n            })\r\n\r\n            simpleRef.hostView.detectChanges();\r\n            simpleRef.instance.cd.detectChanges();\r\n            simpleRef.instance.container.nativeElement.style.right = '0px';\r\n\r\n            return simpleRef;\r\n        }\r\n    }\r\n\r\n\r\n    show(gridInstance: DatagridComponent, opts?: ModalOptions) {\r\n        this.registerGridInstance(gridInstance);\r\n\r\n        if (gridInstance.enableSimpleMode) {\r\n            this.schemeService.createSchemeTaskID();\r\n            return this.showSimple(gridInstance);\r\n        } else {\r\n            return this.showAdvanced(gridInstance, opts);\r\n        }\r\n    }\r\n\r\n    private restoreScheme(gridInstance) {\r\n        if (gridInstance.enableScheme) {\r\n            this.setActiveSchemeItem(gridInstance.id, this.prevSchemeItem);\r\n            if (!this.prevSchemeItem) {\r\n                this.setCurrentConfigs(null);    \r\n            }\r\n        } else {\r\n            this.setCurrentConfigs(null);\r\n        }\r\n    }\r\n\r\n    private showAdvanced(gridInstance: DatagridComponent, opts?: ModalOptions, selectedSchemeItem?: DatagridSchemeModel) {\r\n        let _editColSortInfo = true;\r\n        const editColSortInfo = this.canSetColumnSort(gridInstance);\r\n        if (editColSortInfo !== true) {\r\n            _editColSortInfo = false;\r\n        }\r\n\r\n        // å¤æ­æ¯å¦ä¸ºå¤è¡¨å¤´\r\n        const showSetColumnsTab = !gridInstance.isMultiHeader() || (gridInstance.isMultiHeader() && gridInstance.enableSetMultiHeaders);\r\n        const getActiveTabIndex = () => {\r\n            if (showSetColumnsTab) {\r\n                return 1;\r\n            } else {\r\n                if (_editColSortInfo) {\r\n                    return 2;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            }\r\n        };\r\n        const activeTabIndex = getActiveTabIndex();\r\n\r\n        if (activeTabIndex === -1) {\r\n            this.messager.warning(this.notShowDialog);\r\n            return;\r\n        }\r\n\r\n        const columns = this.convertColumnsToSimple(this.getCurrentConfigs().columns || gridInstance.columns);\r\n\r\n        // è·åå½åæ¹æ¡ä¸­å½åè¯­è¨çéç½®æ°æ®\r\n        let currentSettings: SettingModel = this.getCurrentConfigs();\r\n        const multiHeaderTree = currentSettings && currentSettings.multiHeaders? currentSettings.multiHeaders.treeData : null;\r\n        if (selectedSchemeItem && selectedSchemeItem.queryConditionString) {\r\n            const _currentSettings = JSON.parse(selectedSchemeItem.queryConditionString)[this.localeSer.localeId];\r\n            currentSettings = Object.assign(_currentSettings || {}, currentSettings || {});\r\n            \r\n            if (currentSettings.columnFormat && currentSettings.columnFormat.length) {\r\n                columns[0] = columns[0].map((col) => {\r\n                    const fcol = currentSettings.columnFormat.find(n => n.field === col.field);\r\n                    if (fcol) {\r\n                        col = Object.assign(col, fcol);\r\n                    }\r\n                    return col;\r\n                });\r\n            }\r\n        }\r\n        \r\n        \r\n        if (!gridInstance.enableSetMultiHeaders && currentSettings.viewColumns && currentSettings.viewColumns.length) {\r\n            columns[0].forEach(f => {\r\n                f.visible = currentSettings.viewColumns.indexOf(f.field) > -1;\r\n            });\r\n        }\r\n        \r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n        \r\n        let sortFields = getDataFieldsForMultiHeaders(cloneDeep(columns)).filter( (n: any) => n.field.indexOf('farris-datagrid-column_') == -1 && n.sortable);\r\n        \r\n        if (gridInstance.enableSetMultiHeaders && currentSettings && currentSettings.multiHeaders ) {\r\n            sortFields = getDataFieldsForMultiHeaders(currentSettings.multiHeaders.viewCols).filter( (n: any) => n.field.indexOf('farris-datagrid-column_') == -1 && n.sortable);\r\n        }\r\n\r\n        // const treeData = this.convertColumns2TreeData(cloneDeep(columns), true);\r\n        // const viewColumnsTreeData = this.convertColumns2TreeData(cloneDeep(columns), false);\r\n        // this.checkViewTreeNodes(viewColumnsTreeData);\r\n\r\n        let modalRef = null;\r\n\r\n        // const okText = this.localeSer.getValue('datagrid.settings.ok') || 'ç¡®å®';\r\n        // const cancelText = this.localeSer.getValue('datagrid.settings.cancel') || 'åæ¶';\r\n        // const resetText =  this.localeSer.getValue('datagrid.settings.reset') || 'éç½®';\r\n\r\n        const defaultOpts = {\r\n            width: 760, height: 560, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                columns,\r\n                sortTreeData: sortFields,\r\n                // viewTreeData: viewColumnsTreeData,\r\n                gridInstance,\r\n                canSetColumnSort: _editColSortInfo,\r\n                canSetColumnVisible: showSetColumnsTab,\r\n                activeTabIndex,\r\n                schemeInfo: currentSettings,\r\n                enableMultipleHeaders: gridInstance.enableSetMultiHeaders,\r\n                multiHeaders: {\r\n                    columns,\r\n                    treeData: multiHeaderTree\r\n                },\r\n                schemeName: selectedSchemeItem? selectedSchemeItem['_title_'] : this['SCHEME_DEFAULT_TITLE']\r\n            },\r\n            showButtons: false,\r\n            closed: (isCloseBtn, opts) => {\r\n                const {event} = opts;\r\n                if (event && event.code === 'Escape') {\r\n                    this.restoreScheme(gridInstance);\r\n                }\r\n            }\r\n        };\r\n        const modalOpts = Object.assign(defaultOpts, opts || {});\r\n\r\n        modalRef = this.modalSer.show(DatagridSettingsComponent, modalOpts);\r\n        const instance = modalRef.content as DatagridSettingsComponent;\r\n        instance.enableReset = true;\r\n        instance.modalRef = modalRef;\r\n        instance.canSetColumnSort = _editColSortInfo;\r\n        instance.canSetColumnVisible = showSetColumnsTab;\r\n\r\n        instance.submitHandle.subscribe((e) => {\r\n            this.applySettings(e, gridInstance, {modalRef, currentScheme: selectedSchemeItem});\r\n        });\r\n\r\n        instance.cancelHandle.subscribe((e) => {\r\n            modalRef.close();\r\n            this.restoreScheme(gridInstance);\r\n        });\r\n\r\n        // åæ¢å°ä¾§è¾¹æ ç®æ´æ¨¡å¼\r\n        instance.concise.subscribe((e) => {\r\n            modalRef.close();\r\n            const settings = modalRef.content;\r\n            const { sortInfo, viewColumns, columnFormat, groupField, multiHeaders } = settings;\r\n            this.setCurrentConfigs({ sortInfo, viewColumns, columnFormat, groupField, multiHeaders });\r\n            this.showSimple(gridInstance, \r\n                { sortInfo, viewColumns, columnFormat, groupField, multiHeaders }, \r\n                cloneDeep(selectedSchemeItem));\r\n        });\r\n\r\n        const modalContainer = modalRef.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n\r\n        return modalRef;\r\n    }\r\n\r\n\r\n\r\n    private canSetColumnSort(gridInstance: DatagridComponent) {\r\n        if (gridInstance.multiSort && this.hasEnableSortColumns(gridInstance)) {\r\n            return true;\r\n        } else {\r\n            if (!this.hasEnableSortColumns(gridInstance)) {\r\n                return this.columnsSortableMsg;\r\n            } else if (!gridInstance.multiSort) {\r\n                return this.multiSortMsg;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasEnableSortColumns(gridInstance: DatagridComponent) {\r\n        const sortColumnsCount = gridInstance.flatColumns.reduce((c, r) => {\r\n            if (r.sortable) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        }, 0);\r\n\r\n        return sortColumnsCount > 0;\r\n    }\r\n\r\n\r\n    // private getChilds(cols, rowIndex, colStartIndex, colCount, forSort = false) {\r\n    //     const childCols = [];\r\n    //     let _count = colStartIndex;\r\n    //     if (!cols[rowIndex]) {\r\n    //         return  [];\r\n    //     }\r\n\r\n    //     cols[rowIndex].slice().forEach(element => {\r\n    //         _count = _count + element.colspan;\r\n    //         if ( _count <= colCount ) {\r\n    //             childCols.push(element);\r\n    //         }\r\n    //     });\r\n\r\n    //     cols[rowIndex].splice(0, childCols.length);\r\n\r\n    //     return childCols.map((c, i) => {\r\n    //         let n: any = {\r\n    //             data: c,\r\n    //             selectable: forSort ? !!c.sortable : true\r\n    //         };\r\n\r\n    //         if (c.colspan && c.colspan > 1) {\r\n    //             n = {\r\n    //                 data: c,\r\n    //                 selectable: false,\r\n    //                 expanded: true,\r\n    //                 children: this.getChilds(cols, rowIndex + 1, 0 , c.colspan)\r\n    //             };\r\n    //         }\r\n    //         return n;\r\n    //     });\r\n    // }\r\n    // convertColumns2TreeData(cols: DataColumn[][], forSort = false) {\r\n\r\n\r\n\r\n    //     const columns = cols.map((c: any) => {\r\n    //         const aa = c.map((_) => {\r\n    //             if (_.field.indexOf('farris-datagrid-column_') == -1) {\r\n    //                 _.colspan = _.colspan || 1;\r\n    //                 return _;\r\n    //             }\r\n    //             return null;\r\n    //         });\r\n    //         return aa.filter(n => n);\r\n    //     });\r\n    //     if (columns.length === 1) {\r\n    //         return columns[0].map(c => {\r\n    //             return {\r\n    //                 data: c,\r\n    //                 selectable: forSort ? !!c.sortable : true\r\n    //             };\r\n    //         });\r\n    //     } else {\r\n    //         return columns[0].map((c, i) => {\r\n    //             if (c.colspan && c.colspan > 1) {\r\n    //                 return {\r\n    //                     data: c,\r\n    //                     selectable: false,\r\n    //                     expanded: true,\r\n    //                     children: this.getChilds(columns, 1, 0, c.colspan, forSort)\r\n    //                 };\r\n    //             } else {\r\n    //                 return {\r\n    //                     data: c,\r\n    //                     selectable: forSort ? !!c.sortable : true\r\n    //                 };\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // private checkViewTreeNodes(treeNodes: TreeNode[]) {\r\n    //     treeNodes.forEach((tn: TreeNode) => {\r\n    //         if (!tn.children || !tn.children.length) {\r\n    //             tn.selectable = true;\r\n    //         } else {\r\n    //             tn.selectable = false;\r\n    //             this.checkViewTreeNodes(tn.children);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    private _convertColumnsToSimple(gridInstance: any) {\r\n\r\n        let cols = gridInstance.columns;\r\n        // éç½®åé¡ºåºä¸ºæåè®¾è®¡æ¶çé¡ºåº\r\n        const gridOpts = gridInstance.dfs._state.initialOptions;\r\n        if (gridOpts.columnFields) {\r\n            let desginCols = gridOpts.columnFields;\r\n            const newColumns = [];\r\n\r\n            desginCols.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            cols = [newColumns];\r\n        }\r\n\r\n        return cols;\r\n    }\r\n\r\n    convertColumnsToSimple(cols: any) {\r\n        if (!Array.isArray(cols[0])) {\r\n            cols = [cols];\r\n        }\r\n\r\n        return cols.map( (_cols: DataColumn[]) => {\r\n            return _cols.map( (c: DataColumn) => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    return {\r\n                        field: c.field,\r\n                        title: c.title,\r\n                        colspan: c.colspan,\r\n                        rowspan: c.rowspan,\r\n                        sortable: c.sortable,\r\n                        order: c.order,\r\n                        halign: c.halign || 'left',\r\n                        align: c.align || 'left',\r\n                        visible: c.visible,\r\n                        allowGrouping: c.allowGrouping,\r\n                        groupFooter: c.groupFooter,\r\n                        footer: c.footer,\r\n                        width: c.width || 100,\r\n                        dataType: c.dataType || 'string',\r\n                        fixed: c.fixed || 'UNFIXED'\r\n                    };\r\n                }\r\n            }).filter(n => n);\r\n        });\r\n    }\r\n\r\n    private resetGridView(gridInstance: any) {\r\n        if (!gridInstance) {\r\n            return;\r\n        }\r\n        const dfs = gridInstance.dfs;\r\n        if (dfs) {\r\n            const options = dfs['_state'].initialOptions;\r\n\r\n            if (options.sort) {\r\n                if (options.sort.sortName) {\r\n                    gridInstance.sortName = options.sort.sortName;\r\n                }\r\n                if (options.sort.sortOrder) {\r\n                    gridInstance.sortOrder = options.sort.sortOrder;\r\n                }\r\n            }\r\n\r\n            gridInstance.groupField = options.groupField || '';\r\n            // TODO: è¿éè¦ä¿®æ­£é»è®¤åçæ¾ç¤ºé¡ºåº\r\n            if (options.columnFields && options.columnFields.length) {\r\n\r\n                const newColumns = [];\r\n                options.columnFields.forEach(c => {\r\n                    const col = gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = c.footer;\r\n                        col.groupFooter = c.groupFooter;\r\n                        newColumns.push(col);\r\n                    }\r\n                });\r\n\r\n                gridInstance.columns[0] = newColumns;\r\n            }\r\n\r\n            // gridInstance['checkOptions']();\r\n            gridInstance['columnsChanged']();\r\n        }\r\n    }\r\n\r\n \r\n\r\n    private updateGridView(modalRef, gridInstance, btn = null, _scheme = null) {\r\n        const settings = modalRef.content;\r\n\r\n        if (settings) {\r\n            const { sortInfo, viewColumns, columnFormat, groupField, expandGroupRows, multiHeaders } = settings;\r\n            const _colformats = columnFormat ? this.convertColumnsToSimple(columnFormat)[0] : [];\r\n            \r\n            this.saving = true;\r\n            \r\n            let _groupField = '';\r\n            if (gridInstance.groupRows && groupField && groupField.length) {\r\n                if (typeof groupField === 'string') {\r\n                    _groupField = groupField;\r\n                } else if(Array.isArray(groupField)) {\r\n                    _groupField = groupField.join(',');\r\n                }\r\n\r\n            }\r\n\r\n            let _sortInfo = sortInfo;\r\n            // å½å¤è¡¨å¤´éè¦æ¸çæåºå­æ®µä¸åç»å­æ®µï¼ä¿è¯è¿äºå­æ®µå¿é¡»å¨è¡¨å¤´ä¸­\r\n            if (gridInstance.enableSetMultiHeaders && multiHeaders) {\r\n                if (_groupField) {\r\n                    _groupField = cleanGroupFields(multiHeaders.viewCols, _groupField.split(','));\r\n                }\r\n\r\n                if (sortInfo && sortInfo.sortName && sortInfo.sortName.length) {\r\n                    _sortInfo = cleanSortFields(multiHeaders.viewCols, sortInfo);\r\n                }\r\n            }\r\n\r\n            \r\n            const saveData = { sortInfo: _sortInfo, viewColumns, groupField: _groupField, columnFormat: _colformats, expandGroupRows: expandGroupRows, multiHeaders };\r\n            \r\n            \r\n            const refreshGrid = () => {\r\n                if (gridInstance.groupRows) {\r\n                    gridInstance.expandGroupRows = expandGroupRows;\r\n                    gridInstance.groupField = _groupField;\r\n                }\r\n\r\n                if (gridInstance.enableSetMultiHeaders) {\r\n                    // è®¾ç½®è¡¨å¤´\r\n                    refreshGridColumns(gridInstance, multiHeaders.viewCols || []);\r\n                } else {\r\n                    if (viewColumns && viewColumns.length) {\r\n                        gridInstance.columns = gridInstance.columns.map(cols => {\r\n                            this.updateColumnFormat(cols, columnFormat, gridInstance);\r\n                            return this.newVisibleOrderColumns(cols, viewColumns, columnFormat, gridInstance);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                gridInstance.columnsChanged(true);\r\n                if (sortInfo && Object.keys(sortInfo).length) {\r\n                    const { sortName, sortOrder } = sortInfo;\r\n                    if (sortName && sortName.length) {\r\n                        gridInstance.sort(sortName.join(','), sortOrder.join(','));\r\n                    } else {\r\n                        gridInstance.clearSort();\r\n                    }\r\n                } else {\r\n                    gridInstance.clearSort();\r\n                }\r\n            }\r\n\r\n            const saveCurrent = () => {\r\n                this.setUserConfig(gridInstance.id, saveData).subscribe( () => {\r\n                    if (btn) {\r\n                        btn.disabled = false;\r\n                    }\r\n                    this.saving = false;\r\n                    refreshGrid();\r\n\r\n                    this.setActiveSchemeItem(gridInstance.id, _scheme);\r\n                    this.prevSchemeItem = _scheme;\r\n                    this.updateActiveSchemeItemSettings(gridInstance.id, saveData);\r\n                    this.setCurrentConfigs(saveData);\r\n                    modalRef.close();\r\n                });\r\n            }\r\n\r\n\r\n            if (gridInstance.showConfirmWhenSchemeChanged && gridInstance.enableScheme) {\r\n                const languageRes = this.localeSer.getValue('datagrid-scheme.schemeChanged')\r\n                const _changed = this.schemeService.isSchemeChanged(saveData, gridInstance.enableSetMultiHeaders);\r\n                if (_changed) {\r\n                    const msgDlg = this.messager.question2(languageRes.title, [\r\n                        {\r\n                            text: languageRes.cancel,\r\n                            cls: 'btn btn-light',\r\n                            handle: () => {\r\n                                this.saving = false;\r\n                                modalRef.close();\r\n                                msgDlg.close();\r\n                                this.restoreScheme(gridInstance);\r\n                            }\r\n                        },\r\n                        {\r\n                            text: languageRes.no,\r\n                            cls: 'btn btn-secondary',\r\n                            handle: () => {\r\n                                // ä¿å­å°å½åæ¹æ¡\r\n                                msgDlg.close();\r\n                                saveCurrent();\r\n                            }\r\n                        },\r\n                        {\r\n                            text: languageRes.yes,\r\n                            cls: 'btn btn-primary',\r\n                            handle: () => {\r\n                                // å¦å­æ°æ¹æ¡\r\n                                this.showNewSchemeDialog(gridInstance, {type: 'saveas'}, saveData, {\r\n                                    ok: (t) => {\r\n                                        this.saving = false;\r\n                                        modalRef.close();\r\n                                        this.currentSchemeitem = t;\r\n                                        this.setActiveSchemeItem(gridInstance.id, cloneDeep(t));\r\n                                        refreshGrid();\r\n                                    },\r\n                                    cancel: () => {\r\n                                        this.saving = false;\r\n                                        if (btn) {\r\n                                            btn.disabled = false;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                msgDlg.close();\r\n                            }\r\n                        },\r\n                    ]);  // , languageRes.tips å­æ é¢\r\n                } else {\r\n                    if (this.currentSchemeitem && this.prevSchemeItem && this.currentSchemeitem.id === this.prevSchemeItem.id) {\r\n                        this.saving = false;\r\n                        modalRef.close();        \r\n                        refreshGrid();\r\n                    } else {\r\n                        saveCurrent();\r\n                    }\r\n                }\r\n            } else {\r\n                saveCurrent();\r\n            }\r\n            \r\n        } else {\r\n            modalRef.close();\r\n        }\r\n    }\r\n\r\n\r\n    newVisibleOrderColumns(cols: any, viewColumns: any, columnFormat: any, gridInstance: any) {\r\n        const hideColumns = [];\r\n        cols.forEach((element, index) => {\r\n            if (this.isNewAddColumn(element.field, columnFormat) && element.field !== '_datagrid-setting-control_' && !gridInstance.enableScheme) {\r\n                viewColumns.push(element.field);\r\n            } else {\r\n                element.visible = viewColumns.includes(element.field);\r\n                if (!element.visible) {\r\n                    hideColumns.push(element);\r\n                }\r\n            }\r\n        });\r\n\r\n        // æ¸çä¸å­å¨çå\r\n        let newCols = viewColumns.map( field => {\r\n            return cols.find(c => c.field === field);\r\n        }).filter(n => n);\r\n\r\n        if (hideColumns.length) {\r\n            newCols = newCols.concat(hideColumns);\r\n        }\r\n\r\n        return newCols.filter(c => c && c.field && c.field !== '_datagrid-setting-control_' );\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦ä¸ºæ°å¢å çå­æ®µ\r\n     * æ°å¢çå­æ®µï¼éè¦å¨åè¡¨ä¸­å±ç¤ºåºæ¥ï¼å¹¶ä¿å­å°ä¸ªæ§åè®¾ç½®ä¸­\r\n     */\r\n    private isNewAddColumn(field: any, columns: any) {\r\n        columns = columns || [];\r\n        return !columns.find(c => c.field === field);\r\n    }\r\n\r\n\r\n    updateColumnFormat(cols: any[], columnFormat: any[], gridInstance) {\r\n        if (columnFormat && columnFormat.length) {\r\n            cols.forEach(col => {\r\n                const formatCol = columnFormat.find(f=> f.field === col.field);\r\n                if (formatCol) {\r\n                    col.width = formatCol.width;\r\n                    col.halign = formatCol.halign || 'left';\r\n                    col.align = formatCol.align || 'left';\r\n                    col.fixed = formatCol.fixed === 'UNFIXED'? '': formatCol.fixed;\r\n                    col.title = formatCol.title;\r\n\r\n                    if (gridInstance.groupRows && (col.allowGrouping || col.allowGrouping === undefined)) {\r\n                        if (!col.groupFooter) {\r\n                            col.groupFooter = formatCol.groupFooter;\r\n                        }\r\n\r\n                        if (col.groupFooter && col.groupFooter.options) {\r\n                            if (!formatCol.groupFooter.options) {\r\n                                formatCol.groupFooter.options = {};\r\n                            }\r\n                            col.groupFooter.options.text = formatCol.groupFooter.options.text || '';\r\n                            col.groupFooter.options.calculationType =\r\n                                formatCol.groupFooter.options.calculationType !== undefined &&\r\n                                formatCol.groupFooter.options.calculationType !== null ?\r\n                                parseInt(formatCol.groupFooter.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n\r\n                    if (gridInstance.showFooter && !gridInstance.footerTemplate) {\r\n\r\n                        if (!col.footer) {\r\n                            col.footer = formatCol.footer;\r\n                        }\r\n\r\n                        if (col.footer && col.footer.options) {\r\n                            if (!formatCol.footer.options) {\r\n                                formatCol.footer.options = {};\r\n                            }\r\n                            col.footer.options.text = formatCol.footer.options.text || '';\r\n                            col.footer.options.calculationType =\r\n                                formatCol.footer.options.calculationType !== undefined &&\r\n                                formatCol.footer.options.calculationType !== null ?\r\n                                parseInt(formatCol.footer.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // åå»ºå¯ä¸key, ç±uri + gridId ç»æï¼å¹¶æ··æ·\r\n    private createConfigKey(gridId: string) {\r\n        const grid = this.getGridInstance(gridId);\r\n        if (grid) {\r\n            return grid.dgs.createConfigKey(gridId);\r\n        } else {\r\n            this.writeDebugMsg('DatagridSettingService: Can not find the grid instance.');\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private getCurrentUserSettings(gridId: string) {\r\n        const gridInstance = this.getGridInstance(gridId);\r\n        const config = {sortInfo: {}, viewColumns: [], groupField: '', columnFormat: []};\r\n\r\n        if (gridInstance) {\r\n            const { sortName, sortOrder, columns} = gridInstance;\r\n            if (sortName) {\r\n                const sortInfo = {\r\n                    sortName: sortName.split(','),\r\n                    sortOrder: sortOrder.split(',')\r\n                };\r\n\r\n                config.sortInfo = sortInfo;\r\n            }\r\n\r\n            const viewColumns = columns[0].filter(n => n.visible || n.visible === undefined).map(n => n.field);\r\n            config.viewColumns = viewColumns;\r\n            config.columnFormat = this.convertColumnsToSimple(this._convertColumnsToSimple(gridInstance))[0];\r\n\r\n            if (gridInstance.groupRows) {\r\n                config.groupField = gridInstance.groupField;\r\n            }\r\n        }\r\n        return config;\r\n    }\r\n\r\n\r\n    saveUserConfig(gridId: string) {\r\n        const config = this.getCurrentUserSettings(gridId);\r\n        return this.setUserConfig(gridId, config);\r\n    }\r\n\r\n    setUserConfig(gridId: string, config: any ): Observable<any> {\r\n        const gridIns = this.getGridInstance(gridId);\r\n        const key = this.createConfigKey(gridId);\r\n        const LOCALEID = this.localeSer.localeId;\r\n        const currentConfig = localStorage.getItem(key);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (config) {\r\n            if (_config) {\r\n                _config[LOCALEID] = config;\r\n            }\r\n\r\n            if (gridIns && gridIns.enableSetMultiHeaders) {\r\n                _config['isMultiHeader'] = true;\r\n            }\r\n\r\n            localStorage.setItem(key, JSON.stringify(_config));\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n\r\n\r\n        if (this.httpRestService) {\r\n            if (gridIns && gridIns.enableScheme) {\r\n                const activeScheme = this.getActiveSchemeItem(gridId);\r\n                if (activeScheme) {\r\n                    this.updateSchemeSettings(activeScheme, config);\r\n                    if (activeScheme.type === 'private') {\r\n                        return this.schemeService.saveScheme(activeScheme, gridId, true, gridIns.enableSetMultiHeaders);\r\n                    } else {\r\n                        return this.schemeService.checkAuthority().pipe(\r\n                            switchMap((t: SchemeAuthModel) => {\r\n                                if (t.success) {\r\n                                    const hasOrgAuthority = t.authOrganizationData && t.authOrganizationData.length;\r\n                                    if (activeScheme.type === 'public' || (activeScheme.type === 'org' && hasOrgAuthority)) {\r\n                                        return this.schemeService.saveScheme(activeScheme, gridId, true, gridIns.enableSetMultiHeaders);\r\n                                    }\r\n                                }\r\n\r\n                                return of(true);\r\n                            }),\r\n                        )\r\n                    }\r\n                } else {\r\n                    // å¦ä¸ºç³»ç»é¢å¶æ¶ï¼ææ æ¹æ¡å¤ç\r\n                    return this._saveUserConfig(key,  config ? _config :  '');\r\n                    // return of(true);\r\n                }\r\n            }\r\n\r\n            // ä¿å­è³æ°æ®åº\r\n            return this._saveUserConfig(key,  config ? _config :  '');\r\n        }\r\n\r\n        return of(true);\r\n    }\r\n\r\n    getUserConfig(key, isMultiHeader = false): Observable<any> {\r\n        if (this.httpRestService) {\r\n            return this._getUserConfig(key, isMultiHeader);\r\n        } else {\r\n            return of(this.getLocalSettings(key, isMultiHeader));\r\n        }\r\n    }\r\n\r\n\r\n    getLocalSettings(key: string, isMultiHeader = false) {\r\n        const config = localStorage.getItem(key);\r\n        if (config) {\r\n            const con = JSON.parse(config);\r\n\r\n            if (isMultiHeader && !con['isMultiHeader']) {\r\n                return null;\r\n            } else {\r\n                if (con['isMultiHeader']) {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            if (con[this.localeSer.localeId]) {\r\n                return con[this.localeSer.localeId];\r\n            } else {\r\n                if (Object.keys(con).indexOf('viewColumns') > -1) {\r\n                    return con;\r\n                }\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    private getDefaultScheme(schemeList: Array<DatagridSchemeModel>) {\r\n        // 0ãè¿æ»¤åºå½åè¯­è¨çæ¹æ¡åè¡¨\r\n        // 1ãæä¸ªäººé»è®¤çè¿åä¸ªäººé»è®¤æ¹æ¡\r\n        // 2ãæ²¡æä¸ªäººé»è®¤æ¹æ¡çï¼è¿åå¬å±æ¹æ¡ç¬¬1ä¸ª\r\n        // 3ãæ²¡æå¬å±æ¹æ¡ï¼è¿åç»ç»æ¹æ¡ç¬¬1ä¸ª\r\n        // 4ãæ²¡æç»ç»æ¹æ¡ç, è¿åä¸ªäººæ¹æ¡ç¬¬1ä¸ª\r\n        // 5ãæ²¡æä¸ªäººæ¹æ¡çï¼è¿åç³»ç»é¢å¶ï¼å³è¡¨åè®¾è®¡æ¶çæ ¼å¼\r\n        schemeList = schemeList.filter(n => {\r\n            return JSON.parse(n.name)[this.localeSer.localeId]\r\n        });\r\n        \r\n        let defaultScheme = null;\r\n        if (!schemeList || !schemeList.length) {\r\n            return defaultScheme;\r\n        } else {\r\n            defaultScheme = schemeList.find(n => n.isDefault);\r\n            if (!defaultScheme) {\r\n                let publicSchemes = schemeList.filter(n => n.type === 'public');\r\n\r\n                if (!publicSchemes.length) {\r\n                    publicSchemes = schemeList.filter(n => n.type === 'org');\r\n                }\r\n\r\n                if (publicSchemes.length) {\r\n                    defaultScheme = publicSchemes[0];\r\n                } else {\r\n                    defaultScheme = schemeList[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return defaultScheme;\r\n    }\r\n\r\n\r\n    getSettings(gridId: string) {\r\n        const key = this.createConfigKey(gridId);\r\n        const gridIns = this.getGridInstance(gridId);\r\n\r\n        let schemeList$ = of([]);\r\n        if (gridIns && gridIns.enableScheme) {\r\n            schemeList$ = this.getSchemeList(gridId);\r\n        }\r\n\r\n        return forkJoin(schemeList$, this.getUserConfig(key), this.schemeService.getLanguages()).pipe(\r\n            map(([schemeList, userSetting, supportedLanguages]) => {\r\n                schemeList = schemeList || [];\r\n                this.languages = supportedLanguages;\r\n                if (!schemeList.length) {\r\n                    return userSetting;\r\n                } else {\r\n                    // ç¼å­æ¹æ¡åè¡¨\r\n                    this.setSchemeList(schemeList, gridId);\r\n                    // æ¥æ¾é»è®¤æ¹æ¡\r\n                    const defaultScheme: DatagridSchemeModel = this.getDefaultScheme(schemeList);\r\n                    if (!defaultScheme) {\r\n                        return userSetting;\r\n                    } else {\r\n                        this.setActiveSchemeItem(gridId, defaultScheme);\r\n                        let userSettings = null;\r\n                        if (defaultScheme.queryConditionString) {\r\n                            userSettings = JSON.parse(defaultScheme.queryConditionString);\r\n                        }\r\n                        if (userSettings) {\r\n                            const localeId = this.localeSer.localeId;\r\n                            if (userSettings[localeId]) {\r\n                                localStorage.setItem(key, JSON.stringify(userSettings));\r\n                                return userSettings[localeId];\r\n                            } else {\r\n                                userSettings[localeId] = null;\r\n                                localStorage.setItem(key, JSON.stringify(userSettings));\r\n                                return null;\r\n                            }\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    private _saveUserConfig(key, config) {\r\n        try {\r\n            const userConfigSetting = {\r\n                configkey1: key,\r\n                configkey2: '',\r\n                configkey3: '',\r\n                textvalue: config ? JSON.stringify(config) :  ''\r\n            };\r\n\r\n            return this.httpRestService.saveUserSettings(userConfigSetting);\r\n        } catch (e) {\r\n            this.writeDebugMsg(e, 'error');\r\n        }\r\n    }\r\n\r\n    resetUserConfig(gridInstance, modalRef) {\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).pipe(\r\n            switchMap( (t: boolean) => {\r\n                if (t) {\r\n                    return this.setUserConfig(gridInstance.id, '');\r\n                }\r\n                return of(t);\r\n            })\r\n        ).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.resetGridView(gridInstance);\r\n                modalRef.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _getUserConfig(key, isMultiHeader = false) {\r\n        try {\r\n            return this.httpRestService.getUserSettings(key).pipe(\r\n                map((ucs: any) => {\r\n                    if (ucs && ucs.textValue) {\r\n                        let c = JSON.parse(ucs.textValue);\r\n                        if (c) {\r\n                            if (isMultiHeader && !c['isMultiHeader']) {\r\n                                return null;\r\n                            } else {\r\n                                if (c['isMultiHeader']) {\r\n                                    return null;\r\n                                }\r\n                            }\r\n\r\n                            if (c[this.localeSer.localeId]) {\r\n                                localStorage.setItem(key, ucs.textValue);\r\n                                return c[this.localeSer.localeId];\r\n                            } else {\r\n                                c[this.localeSer.localeId] = null;\r\n                                localStorage.setItem(key, JSON.stringify(c));\r\n                                return null;\r\n                            }\r\n\r\n                        }\r\n                        return null;\r\n                    }\r\n                    return null;\r\n                })\r\n            );\r\n        } catch (e) {\r\n            if (this.debugSer) {\r\n                this.debugSer.error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    private buildSubmitData(gridId: string, settings = null) {\r\n        const LOCALEID = this.localeSer.localeId;\r\n        if (!settings) {\r\n            settings = this.getCurrentUserSettings(gridId);\r\n        }\r\n        const localeKey = this.createConfigKey(gridId);\r\n        const currentConfig = localStorage.getItem(localeKey);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (_config) {\r\n            _config[LOCALEID] = settings;\r\n        }\r\n\r\n        return _config;\r\n    }\r\n\r\n// ----------------------------------------------------------------------------------------------- \\\\\r\n\r\n    private showSchemeListDialog(gridInstance: any, schemeList: any, authInfo: SchemeAuthModel, simpleRef: any) {\r\n        const modalOpts = {\r\n            width: 760, height: 577, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                items: (schemeList || []).filter(n => {\r\n                    return JSON.parse(n.name)[this.localeSer.localeId]\r\n                }),\r\n                removeItem: authInfo.success,\r\n                currentUserId: authInfo.currentUserId,\r\n                currentSchemeId: this.currentSchemeitem ? this.currentSchemeitem.id: ''\r\n            },\r\n            showButtons: false\r\n        };\r\n\r\n        const schemeListDlg = this.modalSer.show(SchemeListComponent, modalOpts);\r\n        // schemeListDlg.dialog.location.nativeElement.style.zIndex = 2031;\r\n\r\n        const instance = schemeListDlg.content as SchemeListComponent;\r\n        instance.closeModal.subscribe( () => {\r\n            schemeListDlg.close();\r\n        });\r\n\r\n        instance.submitModal.subscribe((t: any) => {\r\n            this.schemeService.updateScheme(t, gridInstance.id, gridInstance.enableSetMultiHeaders).subscribe((e: any) => {\r\n                if(e === false) {\r\n                    schemeListDlg.close();\r\n                    return;\r\n                }\r\n                const msg = 'åè®¾ç½®æ¹æ¡ä¿å­æåã';\r\n                if (this.notifyService) {\r\n                    this.notifyService.success(msg);\r\n                } else {\r\n                    this.messager.success(msg);\r\n                }\r\n\r\n                if(t.defaultId) {\r\n                    schemeList.forEach(n => {\r\n                        n.isDefault = false;\r\n                        if (n.id === t.defaultId) {\r\n                            n.isDefault = true;\r\n                            // this.setActiveSchemeItem(gridInstance.id, n);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                let newSchemeList = schemeList;\r\n                if (t.deletedIds && t.deletedIds.length) {\r\n                    newSchemeList = schemeList.filter(n => {\r\n                        return !t.deletedIds.includes(n.id)\r\n                    });\r\n                }\r\n\r\n                this.schemeService.setSchemeList(gridInstance.id, newSchemeList);\r\n                schemeListDlg.close();\r\n\r\n                const currentScheme = this.getActiveSchemeItem(gridInstance.id);\r\n                if (!currentScheme) {\r\n                    this.setActiveSchemeItem(gridInstance.id, null);\r\n                    simpleRef.instance.currentSchemeItem = null;\r\n                    simpleRef.instance.resetToDefault();\r\n                    this.prevSchemeItem = null;\r\n                    simpleRef.instance.onSubmitClick();\r\n                }\r\n\r\n            });\r\n        });\r\n\r\n        const modalContainer = schemeListDlg.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n    }\r\n\r\n    // æ°å¢æå¦å­æ¹æ¡\r\n    private showNewSchemeDialog(gridInstance, e: { type: 'new' | 'saveas'}, settings, callback: NewSchemeCallBack) {\r\n        const modalOpts = {\r\n            width: 480, height: 269, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                languages: this.languages\r\n            },\r\n            showButtons: false,\r\n            resizable: false\r\n        };\r\n\r\n        const newSchemeDlg = this.modalSer.show(NewSchemeComponent, modalOpts);\r\n        // newSchemeDlg.dialog.location.nativeElement.style.zIndex = 2031;\r\n        const instance = newSchemeDlg.content as NewSchemeComponent;\r\n        instance.closeModal.subscribe( () => {\r\n            newSchemeDlg.close();\r\n            if (callback && callback.cancel) {\r\n                callback.cancel();\r\n            }\r\n        });\r\n\r\n        instance.submitModal.pipe(\r\n            switchMap((t: any) => {\r\n                return this.createNewScheme(gridInstance.id, t, e.type === 'new', settings);\r\n            })\r\n        ).subscribe((t: any) => {\r\n            if (t.flag === false) {\r\n                const msg = t.msg;\r\n                let _msg = msg;\r\n                if (msg) {\r\n                    if (msg.indexOf('|') > -1) {\r\n                        _msg = msg.split('|').map((langcode) => {\r\n                            return this.localeSer.getValue('datagrid-settings.'+ langcode)\r\n                        }).join('');\r\n                    } else {\r\n                        _msg = this.localeSer.getValue('datagrid-settings.'+ msg );\r\n                    }\r\n                    if (this.notifyService) {\r\n                        this.notifyService.info(_msg);\r\n                    } else {\r\n                        this.messager.info(_msg);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            // æ´æ°æ¹æ¡åè¡¨\r\n            const schemeList = this.schemeService.getStateValue(gridInstance.id, 'list') || [];\r\n            if (t.isDefault) {\r\n                schemeList.forEach(n => {\r\n                    n.isDefault = false;\r\n                });\r\n            }\r\n            schemeList.push(t);\r\n            this.schemeService.setSchemeList(gridInstance.id, schemeList);\r\n            if (callback && callback.ok) {\r\n                callback.ok(t);\r\n            }\r\n            newSchemeDlg.close();\r\n        });\r\n\r\n        instance.checkAuthority.pipe(\r\n            switchMap((t: any) => {\r\n                return this.schemeService.checkAuthority().pipe(\r\n                    map((auth: SchemeAuthModel) => {\r\n                        return {\r\n                            type: t,\r\n                            ...auth\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        ).subscribe((t: any) => {\r\n            let hasAuthority = { public: true, org: true };\r\n            // æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºå¬å±çæéã\r\n            let _msg = 'noAuth.public';\r\n            if (t.type.value === 'org') {\r\n                // æ¨æ²¡æå°æ¹æ¡çä½¿ç¨èå´è®¾ç½®ä¸ºç»ç»çæéã\r\n                _msg = 'noAuth.org';\r\n            }\r\n\r\n            const msg = this.localeSer.getValue('datagrid-settings.'+ _msg );\r\n            if (t.success) {\r\n                const hasPublicAuthority = t.authOperationData && t.authOperationData.length;\r\n                hasAuthority.public = hasPublicAuthority;\r\n                const hasOrgAuthority = t.authOrganizationData && t.authOrganizationData.length;\r\n                hasAuthority.org = hasOrgAuthority;\r\n                if (t.type.value === 'public') {\r\n                    instance.schemeInfo.type = t.type.value;\r\n                } else if (t.type.value === 'org') {\r\n                    if (!hasOrgAuthority) {\r\n                        this.notifyService.warning(msg);\r\n                    }else {\r\n                        instance.schemeInfo.type = t.type.value;\r\n                        instance.schemeInfo.orgids = t.authOrganizationData.join(',')\r\n                        instance.dataPermissionIds = t.authOrganizationData;\r\n                    }\r\n                }\r\n            } else {\r\n                this.notifyService.warning(msg);\r\n                hasAuthority = { public: false, org: false };;\r\n            }\r\n            instance.refresh(hasAuthority);\r\n        })\r\n\r\n        const modalContainer = newSchemeDlg.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n    }\r\n\r\n    getSchemeList(gridId: string) {\r\n        const gridIns = this.getGridInstance(gridId);\r\n        return this.schemeService.getSchemeList(gridId, gridIns.enableSetMultiHeaders);\r\n    }\r\n\r\n    /** æ°å¢æ¹æ¡\r\n     *  isNewSchemeï¼æ¯å¦æ°å æ¹æ¡ï¼å¦åä¸ºå¦å­ä¸º\r\n     *  currentSettingsï¼ å½åéç½®ä¿¡æ¯\r\n     *  data: æ°å»ºæ¹æ¡çªå£ä¼ éæ°æ®\r\n     */\r\n    createNewScheme(gridId: string, data: any, isNewScheme = true, currentSettings: any) {\r\n        if(!data.name) {\r\n            // msg è¯·è¾å¥æ¹æ¡åç§°\r\n            return of({flag: false, msg: 'required.schemeName'});\r\n        } else {\r\n            const hasName = this.schemeService.hasSchemeName(gridId, data.name);\r\n\r\n            if (typeof hasName === 'boolean' && hasName) {\r\n                // msg 'æ¹æ¡åç§°å·²å­å¨ï¼è¯·ä¿®æ¹ã'\r\n                return of({flag: false, msg: 'has.exist'});\r\n            } else if (Array.isArray(hasName) && hasName.length) {\r\n                \r\n                const getMessageCode = (langCode) => {\r\n                    if (langCode === 'zh-CHS') {\r\n                        return 'has.chs'; // ç®ä½ä¸­æåç§°å·²å­å¨ã\r\n                    } else if(langCode === 'zh-CHT') {\r\n                        return 'has.cht'; // ç¹é«ä¸­æåç¨±å·²å­å¨ã\r\n                    } else {\r\n                        return 'has.en'; // è±æåç§°å·²å­å¨\r\n                    }\r\n                }\r\n\r\n                if (hasName.includes(this.localeSer.localeId)) {\r\n                    const msg = getMessageCode(this.localeSer.localeId);\r\n                    return of({flag: false, msg});\r\n                } else {\r\n                    const msgs = hasName.map(n => {\r\n                        return getMessageCode(n);\r\n                    });\r\n\r\n                    return of({flag: false, msg: msgs.join('|')});\r\n                }\r\n            }\r\n        }\r\n\r\n        const requiredName = [];\r\n\r\n        if (!data.name[this.localeSer.localeId]) {\r\n            requiredName.push(this.localeSer.localeId);\r\n        }\r\n\r\n        // this.languages.forEach(n => {\r\n        //     if (data.name[n.code] === '' || data.name[n.code] === undefined) {\r\n        //         requiredName.push(n.code);\r\n        //     }\r\n        // });\r\n\r\n        if (requiredName.length) {\r\n            const msgs = requiredName.map(n => {\r\n                if (n === 'zh-CHS') {\r\n                    return 'required.chs'; //'è¯·è¾å¥ç®ä½ä¸­æåç§°ã';\r\n                } else if(n === 'zh-CHT') {\r\n                    return 'required.cht'; //'è¯·è¾å¥ç¹ä½ä¸­æåç§°ã';\r\n                } else {\r\n                    return 'required.en'; // 'è¯·è¾å¥è±æåç§°ã';\r\n                }\r\n            });\r\n            return of({flag: false, msg: msgs.join('|')});\r\n        }\r\n\r\n        if (data.type && data.type === 'org' && (!data.orgids || !data.orgids.length)) {\r\n            // msg 'è¯·éæ©ç»ç»'\r\n            return of({flag: false, msg: 'required.org'});\r\n        }\r\n        let _config = null;\r\n\r\n        if (!isNewScheme) {\r\n            const LOCALEID = this.localeSer.localeId;\r\n\r\n            if (currentSettings && currentSettings.columnFormat) {\r\n                currentSettings.columnFormat = this.convertColumnsToSimple(currentSettings.columnFormat);\r\n            }\r\n\r\n            _config ={ [LOCALEID]: currentSettings };\r\n        }\r\n\r\n        const newId = this.idService.guid();\r\n        let isDefault = data.isDefault;\r\n        if (isDefault) {\r\n            if (data.type !== 'private') {\r\n                isDefault = false;\r\n            }\r\n        }\r\n\r\n        if (data.name && typeof data.name === 'object') {\r\n            data.name = JSON.stringify(data.name);\r\n        }\r\n\r\n        const gridInstance = this.getGridInstance(gridId);\r\n        if (gridInstance && gridInstance.enableSetMultiHeaders && _config) {\r\n            _config['isMultiHeader'] = gridInstance.enableSetMultiHeaders;\r\n        }\r\n\r\n        const scheme: DatagridSchemeModel = {\r\n            id: newId,\r\n            belongId: '',\r\n            code: '',\r\n            name: data.name,\r\n            type: data.type,\r\n            isDefault: isDefault,\r\n            isSystem: false,\r\n            extendId: 'datagrid-settings-scheme',\r\n            extendInfo: this.buildOrgAndSchemeRelations(newId, data.orgids),\r\n            queryConditionString: _config? JSON.stringify(_config): '',\r\n        };\r\n\r\n        return this.schemeService.saveScheme(scheme, gridId, false, gridInstance.enableSetMultiHeaders).pipe(\r\n            map(() => {\r\n                return scheme;\r\n            })\r\n        );\r\n    }\r\n\r\n    setSchemeList(schemeList: DatagridSchemeModel[], gridId: string) {\r\n        this.schemeService.update({list: schemeList}, gridId);\r\n    }\r\n\r\n    private buildOrgAndSchemeRelations(schemeId: string, orgIds: any) {\r\n        if (!orgIds || !orgIds.length) {\r\n            return  [];\r\n        }\r\n        \r\n        if (typeof orgIds === 'string') {\r\n            orgIds = orgIds.split(',');\r\n        }\r\n\r\n        return orgIds.map(n => {\r\n            return {\r\n                id: this.idService.guid(),\r\n                orgId: n,\r\n                relatedId: schemeId\r\n            }\r\n        });\r\n    }\r\n\r\n    private getCurrentSchemeSettings(gridId: string): SettingModel {\r\n        const activeScheme = this.getActiveSchemeItem(gridId) as DatagridSchemeModel;\r\n        if (activeScheme && activeScheme.queryConditionString) {\r\n            return JSON.parse(activeScheme.queryConditionString);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setCurrentConfigs(settings: SettingModel) {\r\n        this['CURRENT_CONFIGS'] = settings;\r\n    }\r\n\r\n    private getCurrentConfigs() {\r\n        return this['CURRENT_CONFIGS'] || {};\r\n    }\r\n\r\n    private applySettings(e: any, gridInstance: any, modal?: any) {\r\n        e.target.disabled = true;\r\n        if (this.saving) {\r\n            return;\r\n        }\r\n        if (!this.saving) {\r\n            let _scheme, dlg;\r\n            if (modal){\r\n                const {modalRef, currentScheme} = modal;\r\n                dlg = modalRef;\r\n                _scheme = currentScheme;\r\n            } else {\r\n                dlg = e;\r\n                _scheme = e.currentScheme;\r\n            }\r\n\r\n            this.updateGridView(dlg, gridInstance, e.target, _scheme);\r\n        }\r\n    }\r\n\r\n    getMultiHeaderColumns(viewCols, gridInitOptions) {\r\n        return mergetColumnOptions(viewCols, gridInitOptions)\r\n    }\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n\r\n@Component({\r\n    selector: 'sort-setting',\r\n    templateUrl: './datagrid-sort-setting.component.html'\r\n})\r\nexport class DatagridSortSettingComponent implements OnInit {\r\n\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n    @Input() selectedIds = [];\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() sortInfoChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    setFieldSortOrder($event: MouseEvent, data: any, order: string) {\r\n        $event.stopPropagation();\r\n        data.sortable = true;\r\n        data.order = order;\r\n\r\n        if (!order) {\r\n            this.ms.moveToLeft(data);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        this.onSelectionsChange(null);\r\n        return false;\r\n    }\r\n\r\n    getSortInfo() {\r\n        if (this.ms.selections) {\r\n            const names = [];\r\n            const orders = [];\r\n            this.ms.selections.forEach(col => {\r\n                col.order = col.order || 'asc';\r\n                names.push(col.field);\r\n                orders.push(col.order);\r\n            });\r\n\r\n            return { sortName: names, sortOrder: orders };\r\n        }\r\n        return '';\r\n    }\r\n\r\n    onSelectionsChange($event) {\r\n        const si = this.getSortInfo();\r\n        this.sortInfoChange.emit(si);\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n        const items: any = $event.items as any;\r\n        if ($event.target.indexOf('rightAll') > -1) {\r\n            for (const id in items) {\r\n                if ($event.items[id]) {\r\n                    $event.items[id].order = 'asc';\r\n                }\r\n            }\r\n        } else {\r\n            if ($event.target === 'right') {\r\n                for (const id in items) {\r\n                    if ($event.items[id]) {\r\n                        $event.items[id].order = 'asc';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Injector, ChangeDetectorRef, ElementRef, ViewChild, EventEmitter, Output, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\nimport { getDataFieldsForMultiHeaders } from '../mutli-headers.helper';\r\n\r\n@Component({\r\n    selector: 'column-group-setting',\r\n    templateUrl: './column-group.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnGroupSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns;\r\n    @Input() fields = [];\r\n    @Input() formatColumns = [];\r\n\r\n    @Input() groupFields = [];\r\n    @Input() expandGroupRows = true;\r\n\r\n    @Input() enabelGroupFooter = false;\r\n\r\n    @Output() groupFieldsChange = new EventEmitter();\r\n    @Output() formatColumnsChange = new EventEmitter();\r\n    @Output() expandGroupRowsChange = new EventEmitter();\r\n\r\n    @ViewChild('groupingSetting') groupingSettingEl: ElementRef;\r\n    @ViewChild('selectcolumnspanel') selectcolumnspanel: ElementRef;\r\n    @ViewChild('groupSumform') colForm: NgForm;\r\n\r\n    // åç»å\r\n    groupColumns = [];\r\n\r\n    // ææåè®¸åç»å\r\n    allowGroupColumns = [];\r\n    activeCalculationCol = null;\r\n\r\n\r\n    showSelectColumnsPanel = false;\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n        //this.formatColumns = getDataFieldsForMultiHeaders(this.columns);\r\n\r\n\r\n        this.setGroupColumns();\r\n        this.registerEventHandle();\r\n        this.initCalculationColumns();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatColumnsChange.emit(this.formatColumns);\r\n                }\r\n            });\r\n        }\r\n        \r\n        this.formatColumns.forEach(n => {\r\n            this.checkColumnOptions(n);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.formatColumns && !changes.formatColumns.isFirstChange()) {\r\n            this.formatColumns.forEach(n => {\r\n                this.checkColumnOptions(n);\r\n            });\r\n            this.setGroupColumns();\r\n            this.initCalculationColumns();\r\n        }\r\n    }\r\n\r\n    private initCalculationColumns() {\r\n        if (this.formatColumns) {\r\n            this.activeCalculationCol = this.formatColumns[0];\r\n        }\r\n    }\r\n\r\n    private registerEventHandle() {\r\n        this.groupingSettingEl.nativeElement.addEventListener('click', (e) => {\r\n            if (e.target  !== this.selectcolumnspanel.nativeElement) {\r\n                this.showSelectColumnsPanel = false;\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    private setGroupColumns() {\r\n        if (this.groupFields && this.groupFields.length) {\r\n            const cols: any = this.formatColumns;\r\n            this.groupColumns = this.groupFields.map( f => {\r\n                const col = cols.find(col => col.field === f);\r\n                 return col;\r\n            }).filter(n => n);\r\n\r\n            this.groupFields = this.groupColumns.map(n => n.field);\r\n            this.groupFieldsChange.emit(this.groupFields);\r\n        } else {\r\n            this.groupColumns = [];\r\n        }\r\n        this.onGroupFieldsChange();\r\n    }\r\n\r\n    private getAllowGroupingColumns() {\r\n        const cols: any = this.formatColumns;\r\n        return cols.filter(n => {\r\n            if (n.field.indexOf('farris-datagrid-column_') > -1) {\r\n                return false;\r\n            }\r\n            return  n.allowGrouping || n.allowGrouping === undefined \r\n        });\r\n    }\r\n\r\n    private onGroupFieldsChange() {\r\n        this.groupFieldsChange.emit(this.groupFields);\r\n    }\r\n\r\n    private checkColumnOptions(col) {\r\n        if (col) {\r\n\r\n            if (col.groupFooter === undefined) {\r\n                col.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                col.groupFooter.options = col.groupFooter.options || {calculationType: -1};\r\n                if (col.groupFooter.options.calculationType === undefined) {\r\n                    col.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            // if (this.activeField.footer === undefined) {\r\n            //     this.activeField.footer =  { options: {calculationType: -1} };\r\n            // } else {\r\n            //     this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n            //     if (this.activeField.footer.options.calculationType === undefined) {\r\n            //         this.activeField.footer.options.calculationType = -1;\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¾ç¤ºæéèå­æ®µéåé¢æ¿\r\n     */\r\n    toggleGroupingColumnPanel($event) {\r\n        $event.stopPropagation();\r\n        this.showSelectColumnsPanel = !this.showSelectColumnsPanel;\r\n        this.allowGroupColumns = this.getAllowGroupingColumns();\r\n    }\r\n\r\n    /** æ·»å åç»å­æ®µ */\r\n    addGroupColumn($event, col) {\r\n        $event.stopPropagation();\r\n        if (this.groupFields.indexOf(col.field) === -1) {\r\n            this.groupColumns = [...this.groupColumns, col];\r\n            this.groupFields = this.groupColumns.map(n => n.field);\r\n            this.onGroupFieldsChange();\r\n            this.showSelectColumnsPanel = false;\r\n        }\r\n    }\r\n\r\n    /** ç§»é¤åç»å­æ®µ */\r\n    onRemoveGroupingField($event, col) {\r\n        $event.stopPropagation();\r\n        this.groupFields = this.groupFields.filter(n => n !== col.field);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    /** æå¨åç»å­æ®µè¿è¡æåº */\r\n    onGroupingFieldDropped($event) {\r\n        const { removedIndex, addedIndex } = $event;\r\n\r\n        const removedItem = this.groupFields.splice(removedIndex, 1);\r\n        this.groupFields.splice(addedIndex, 0, ...removedItem);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    onFieldClick($event, col) {\r\n        this.activeCalculationCol = col;\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,\r\n        OnChanges, SimpleChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForVisible, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDndForVisible.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForVisible.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[column-visible-drag]',\r\n})\r\nexport class ColumnVisibleDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.field-drag-handle',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForVisible(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n    }\r\n\r\n    private onDragStart(info) {\r\n\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n\r\n    }\r\n\r\n}\r\n","import { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,  Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForGroupingField, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\nSmoothDndForGroupingField.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForGroupingField.wrapChild = false;\r\n\r\n@Directive({\r\n    selector: '[column-group-drag]',\r\n})\r\nexport class ColumnGroupDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForGroupingField(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n    }\r\n\r\n    private onDragStart(info) {\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n    }\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, Output, EventEmitter, OnDestroy } from \"@angular/core\";\r\nimport { Subscription, fromEvent, race } from 'rxjs';\r\nimport { buffer, bufferCount, debounceTime, filter, first, map, repeat } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n    selector: '[f-dbl-click]'\r\n})\r\nexport class FarrisDblClickDirective implements OnInit, OnDestroy {\r\n\r\n    @Input('f-dbl-click') options;\r\n    @Output() dblClickHandler: EventEmitter<any> = new EventEmitter();\r\n\r\n    private _click$: Subscription  = null;\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit(): void {\r\n        const doubleClickDuration = 250;\r\n        const leftClick$ = fromEvent(this.el.nativeElement, 'click').pipe(filter((event: any) => event.button === 0));\r\n        const debounce$ = leftClick$.pipe(debounceTime(doubleClickDuration));\r\n        const clickLimit$ = leftClick$.pipe(bufferCount(2));\r\n        const bufferGate$ = race(debounce$, clickLimit$)\r\n        .pipe(\r\n          first(),\r\n          repeat(),\r\n        );\r\n\r\n        this._click$ = leftClick$.pipe(\r\n            buffer(bufferGate$),\r\n            filter(clicks => {\r\n                return clicks.length > 1;\r\n            })\r\n        ).subscribe(clicks => {\r\n            this.dblClickHandler.emit(clicks[0]);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._click$) {\r\n            this._click$.unsubscribe();\r\n            this._click$ = null;\r\n        }\r\n    }\r\n}","import { Component, Input } from \"@angular/core\";\r\n\r\n\r\n@Component({\r\n    selector: 'preview-table',\r\n    templateUrl: './preview-multi-headers.component.html'\r\n})\r\nexport class PreviewMultiHeadersComponent {\r\n    @Input() previewGroupColumns;\r\n\r\n\r\n    onWheel($event, tabsbox) {\r\n        const sw = tabsbox.scrollWidth;\r\n        const ow = tabsbox.offsetWidth;\r\n\r\n        if (sw > ow) {\r\n            const right = sw - ow;\r\n            const sl = tabsbox.scrollLeft;\r\n            if (sl < right && $event.deltaY > 0) {\r\n                $event.preventDefault();\r\n                tabsbox.scrollLeft = sl + 50;\r\n            }\r\n\r\n            if (sl > 0 && $event.deltaY < 0) {\r\n                $event.preventDefault();\r\n                tabsbox.scrollLeft = sl - 50;\r\n            }\r\n        }\r\n    }\r\n}","import { Directive, ElementRef, Input, HostListener, ComponentFactoryResolver } from \"@angular/core\";\r\nimport { ColumnTreeComponent } from \"../column-tree.component\";\r\nimport { BsModalService } from \"@farris/ui-modal\";\r\nimport { PreviewMultiHeadersComponent } from \"./preview-multi-headers.component\";\r\n\r\n@Directive({\r\n    selector: '[preview-headers]'\r\n})\r\nexport class ShowPreviewDirective {\r\n    @Input('preview-headers') treeIns: ColumnTreeComponent;\r\n    @Input() dlgTitle = 'ææé¢è§'\r\n    constructor(private el: ElementRef, private cfr: ComponentFactoryResolver, private modalSer: BsModalService) {}\r\n\r\n    @HostListener('click', ['$event'])\r\n    onPreviewBtnClick($event) {\r\n        const modalRef = this.modalSer.show(PreviewMultiHeadersComponent, {\r\n            title: this.dlgTitle,\r\n            width: 600,\r\n            height: 300,\r\n            showMaxButton: true,\r\n            resizable: true,\r\n            initialState: {\r\n                previewGroupColumns: this.treeIns.getPreviewGroupColumns()\r\n            },\r\n            showButtons: false\r\n        });\r\n    }\r\n}","\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { GRID_SETTINGS_SERVICE, DatagridModule} from '@farris/ui-datagrid';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { SwitchModule } from '@farris/ui-switch';\r\nimport { FarrisTooltipModule } from '@farris/ui-tooltip';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { OrganizationSelectorModule } from '@farris/ui-organization-selector';\r\n\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\n\r\nimport { DatagridSettingsService } from './datagrid-settings.service';\r\nimport { DatagridSortSettingComponent } from './datagrid-sort-setting.component';\r\nimport { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';\r\nimport { ColumnGroupSettingComponent } from './column-group/column-group.component';\r\nimport { ColumnVisibleDragDirective } from './column-format-setting/column-visible-drag.directive';\r\nimport { ColumnGroupDragDirective } from './column-group/column-group-drag.directive';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\nimport { NewSchemeComponent } from './scheme/newscheme.component';\r\nimport { SchemeListComponent } from './scheme/scheme-list.component';\r\nimport { LanguageTextboxModule } from '@farris/ui-language-textbox';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { ColumnTreeComponent } from './multi-headers/column-tree.component';\r\nimport { NewHeaderFormComponent } from './multi-headers/new-header.component';\r\nimport { SetColumnsComponent } from './multi-headers/setcolumns.component';\r\nimport { FarrisDblClickDirective } from './dbl-click.directive';\r\nimport { PreviewMultiHeadersComponent } from './multi-headers/preview/preview-multi-headers.component';\r\nimport { ShowPreviewDirective } from './multi-headers/preview/show-preview.directive';\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSettingsComponent,\r\n        DatagridSortSettingComponent,\r\n        ColumnFormatSettingComponent,\r\n        ColumnGroupSettingComponent,\r\n        ColumnVisibleDragDirective,\r\n        ColumnGroupDragDirective,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent,\r\n        ColumnTreeComponent,\r\n        NewHeaderFormComponent,\r\n        SetColumnsComponent,\r\n        FarrisDblClickDirective,\r\n        PreviewMultiHeadersComponent,\r\n        ShowPreviewDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MultiSelectModule,\r\n        ComboListModule,\r\n        DatagridModule,\r\n        FarrisCommonModule.forRoot(),\r\n        MessagerModule.forRoot(),\r\n        LocaleModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        SwitchModule,\r\n        FarrisTooltipModule,\r\n        NotifyModule.forRoot(),\r\n        OrganizationSelectorModule,\r\n        LanguageTextboxModule,\r\n        TreeTableModule\r\n    ],\r\n    entryComponents: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent,\r\n        NewHeaderFormComponent,\r\n        SetColumnsComponent,\r\n        PreviewMultiHeadersComponent\r\n    ],\r\n    exports: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent,\r\n        NewSchemeComponent,\r\n        SchemeListComponent,\r\n        FarrisDblClickDirective\r\n    ]\r\n})\r\nexport class DatagridSettingsModule {\r\n    static forRoot(apiUri = ''): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridSettingsModule,\r\n            providers: [\r\n                { provide: GRID_SETTINGS_SERVICE, useClass: DatagridSettingsService }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["Component","Input","ViewChild","flatten","cloneDeep","EventEmitter","of","LocaleService","ViewEncapsulation","Injector","NgZone","ChangeDetectorRef","Renderer2","BsModalService","ElementRef","NotifyService","Output","MessagerService","HostBinding","HostListener","Subject","appendPerfixForUri","IdService","InjectionToken","ComponentFactoryResolver","ApplicationRef","DebugService","CommonUtils","switchMap","timer","map","forkJoin","Injectable","SmoothDndForVisible","dropHandlers","Directive","smoothDnD","SmoothDndForGroupingField","fromEvent","filter","debounceTime","bufferCount","race","first","repeat","buffer","GRID_SETTINGS_SERVICE","NgModule","CommonModule","FormsModule","MultiSelectModule","ComboListModule","DatagridModule","FarrisCommonModule","MessagerModule","LocaleModule","ModalModule","SwitchModule","FarrisTooltipModule","NotifyModule","OrganizationSelectorModule","LanguageTextboxModule","TreeTableModule"],"mappings":"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"}