/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from "@angular/core";
var PreviewMultiHeadersComponent = /** @class */ (function () {
    function PreviewMultiHeadersComponent() {
    }
    /**
     * @param {?} $event
     * @param {?} tabsbox
     * @return {?}
     */
    PreviewMultiHeadersComponent.prototype.onWheel = /**
     * @param {?} $event
     * @param {?} tabsbox
     * @return {?}
     */
    function ($event, tabsbox) {
        /** @type {?} */
        var sw = tabsbox.scrollWidth;
        /** @type {?} */
        var ow = tabsbox.offsetWidth;
        if (sw > ow) {
            /** @type {?} */
            var right = sw - ow;
            /** @type {?} */
            var sl = tabsbox.scrollLeft;
            if (sl < right && $event.deltaY > 0) {
                $event.preventDefault();
                tabsbox.scrollLeft = sl + 50;
            }
            if (sl > 0 && $event.deltaY < 0) {
                $event.preventDefault();
                tabsbox.scrollLeft = sl - 50;
            }
        }
    };
    PreviewMultiHeadersComponent.decorators = [
        { type: Component, args: [{
                    selector: 'preview-table',
                    template: "\r\n<div #tablebox class=\"p-2 h-100 d-flex align-items-center\" style=\"overflow-x: auto;\" (wheel)=\"onWheel($event, tablebox)\">\r\n    <table class=\"table table-bordered bg-light\" style=\" border-color: #cbcbcb; table-layout: revert;\">\r\n\r\n        <tr *ngFor=\"let cls of previewGroupColumns\" style=\"height: 36px\">\r\n            <ng-container *ngFor=\"let c of cls\">\r\n                <ng-container *ngIf=\"c.colspan && c.colspan > 1\">\r\n                    <td style=\" vertical-align: middle;  border-color: #cbcbcb\" [attr.colspan]=\"c.colspan\" [attr.align]=\"c.halign || 'left'\">{{ c.title }}</td>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"!c.colspan || c.colspan == 1\">\r\n                    <td [style.width.px]=\"c.width\" [attr.align]=\"c.halign || 'left'\"\r\n                        [attr.rowspan]=\"c.rowspan || 1\" style=\" vertical-align: middle;  border-color: #cbcbcb\">{{ c.title }}</td>\r\n                </ng-container>\r\n            </ng-container>\r\n        </tr>\r\n    </table>\r\n</div>"
                }] }
    ];
    PreviewMultiHeadersComponent.propDecorators = {
        previewGroupColumns: [{ type: Input }]
    };
    return PreviewMultiHeadersComponent;
}());
export { PreviewMultiHeadersComponent };
if (false) {
    /** @type {?} */
    PreviewMultiHeadersComponent.prototype.previewGroupColumns;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldmlldy1tdWx0aS1oZWFkZXJzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQtc2V0dGluZ3MvIiwic291cmNlcyI6WyJsaWIvbXVsdGktaGVhZGVycy9wcmV2aWV3L3ByZXZpZXctbXVsdGktaGVhZGVycy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR2pEO0lBQUE7SUEwQkEsQ0FBQzs7Ozs7O0lBbEJHLDhDQUFPOzs7OztJQUFQLFVBQVEsTUFBTSxFQUFFLE9BQU87O1lBQ2IsRUFBRSxHQUFHLE9BQU8sQ0FBQyxXQUFXOztZQUN4QixFQUFFLEdBQUcsT0FBTyxDQUFDLFdBQVc7UUFFOUIsSUFBSSxFQUFFLEdBQUcsRUFBRSxFQUFFOztnQkFDSCxLQUFLLEdBQUcsRUFBRSxHQUFHLEVBQUU7O2dCQUNmLEVBQUUsR0FBRyxPQUFPLENBQUMsVUFBVTtZQUM3QixJQUFJLEVBQUUsR0FBRyxLQUFLLElBQUksTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ2pDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDeEIsT0FBTyxDQUFDLFVBQVUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDO2FBQ2hDO1lBRUQsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUM3QixNQUFNLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQ3hCLE9BQU8sQ0FBQyxVQUFVLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQzthQUNoQztTQUNKO0lBQ0wsQ0FBQzs7Z0JBekJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsNGpDQUFxRDtpQkFDeEQ7OztzQ0FFSSxLQUFLOztJQXFCVixtQ0FBQztDQUFBLEFBMUJELElBMEJDO1NBdEJZLDRCQUE0Qjs7O0lBQ3JDLDJEQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdwcmV2aWV3LXRhYmxlJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9wcmV2aWV3LW11bHRpLWhlYWRlcnMuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQcmV2aWV3TXVsdGlIZWFkZXJzQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dCgpIHByZXZpZXdHcm91cENvbHVtbnM7XHJcblxyXG5cclxuICAgIG9uV2hlZWwoJGV2ZW50LCB0YWJzYm94KSB7XHJcbiAgICAgICAgY29uc3Qgc3cgPSB0YWJzYm94LnNjcm9sbFdpZHRoO1xyXG4gICAgICAgIGNvbnN0IG93ID0gdGFic2JveC5vZmZzZXRXaWR0aDtcclxuXHJcbiAgICAgICAgaWYgKHN3ID4gb3cpIHtcclxuICAgICAgICAgICAgY29uc3QgcmlnaHQgPSBzdyAtIG93O1xyXG4gICAgICAgICAgICBjb25zdCBzbCA9IHRhYnNib3guc2Nyb2xsTGVmdDtcclxuICAgICAgICAgICAgaWYgKHNsIDwgcmlnaHQgJiYgJGV2ZW50LmRlbHRhWSA+IDApIHtcclxuICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgdGFic2JveC5zY3JvbGxMZWZ0ID0gc2wgKyA1MDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHNsID4gMCAmJiAkZXZlbnQuZGVsdGFZIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICB0YWJzYm94LnNjcm9sbExlZnQgPSBzbCAtIDUwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19