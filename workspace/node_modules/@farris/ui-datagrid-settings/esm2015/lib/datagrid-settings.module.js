/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ModalModule } from '@farris/ui-modal';
import { GRID_SETTINGS_SERVICE, DatagridModule } from '@farris/ui-datagrid';
import { MultiSelectModule } from '@farris/ui-multi-select';
import { FarrisCommonModule } from '@farris/ui-common';
import { LocaleModule } from '@farris/ui-locale';
import { MessagerModule } from '@farris/ui-messager';
import { ComboListModule } from '@farris/ui-combo-list';
import { SwitchModule } from '@farris/ui-switch';
import { FarrisTooltipModule } from '@farris/ui-tooltip';
import { NotifyModule } from '@farris/ui-notify';
import { OrganizationSelectorModule } from '@farris/ui-organization-selector';
import { DatagridSettingsComponent } from './datagrid-settings.component';
import { DatagridSettingsService } from './datagrid-settings.service';
import { DatagridSortSettingComponent } from './datagrid-sort-setting.component';
import { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';
import { ColumnGroupSettingComponent } from './column-group/column-group.component';
import { ColumnVisibleDragDirective } from './column-format-setting/column-visible-drag.directive';
import { ColumnGroupDragDirective } from './column-group/column-group-drag.directive';
import { SimpleColumnsComponent } from './simple-mode/simple-columns.component';
import { NewSchemeComponent } from './scheme/newscheme.component';
import { SchemeListComponent } from './scheme/scheme-list.component';
import { LanguageTextboxModule } from '@farris/ui-language-textbox';
import { TreeTableModule } from '@farris/ui-treetable';
import { ColumnTreeComponent } from './multi-headers/column-tree.component';
import { NewHeaderFormComponent } from './multi-headers/new-header.component';
import { SetColumnsComponent } from './multi-headers/setcolumns.component';
import { FarrisDblClickDirective } from './dbl-click.directive';
import { PreviewMultiHeadersComponent } from './multi-headers/preview/preview-multi-headers.component';
import { ShowPreviewDirective } from './multi-headers/preview/show-preview.directive';
export class DatagridSettingsModule {
    /**
     * @param {?=} apiUri
     * @return {?}
     */
    static forRoot(apiUri = '') {
        return {
            ngModule: DatagridSettingsModule,
            providers: [
                { provide: GRID_SETTINGS_SERVICE, useClass: DatagridSettingsService }
            ]
        };
    }
}
DatagridSettingsModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    DatagridSettingsComponent,
                    DatagridSortSettingComponent,
                    ColumnFormatSettingComponent,
                    ColumnGroupSettingComponent,
                    ColumnVisibleDragDirective,
                    ColumnGroupDragDirective,
                    SimpleColumnsComponent,
                    NewSchemeComponent,
                    SchemeListComponent,
                    ColumnTreeComponent,
                    NewHeaderFormComponent,
                    SetColumnsComponent,
                    FarrisDblClickDirective,
                    PreviewMultiHeadersComponent,
                    ShowPreviewDirective
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    MultiSelectModule,
                    ComboListModule,
                    DatagridModule,
                    FarrisCommonModule.forRoot(),
                    MessagerModule.forRoot(),
                    LocaleModule.forRoot(),
                    ModalModule.forRoot(),
                    SwitchModule,
                    FarrisTooltipModule,
                    NotifyModule.forRoot(),
                    OrganizationSelectorModule,
                    LanguageTextboxModule,
                    TreeTableModule
                ],
                entryComponents: [
                    DatagridSettingsComponent,
                    SimpleColumnsComponent,
                    NewSchemeComponent,
                    SchemeListComponent,
                    NewHeaderFormComponent,
                    SetColumnsComponent,
                    PreviewMultiHeadersComponent
                ],
                exports: [
                    DatagridSettingsComponent,
                    SimpleColumnsComponent,
                    NewSchemeComponent,
                    SchemeListComponent,
                    FarrisDblClickDirective
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,