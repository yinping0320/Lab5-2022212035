/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, NgZone, Injector, Renderer2, ElementRef, Input, Output, EventEmitter } from '@angular/core';
import { dropHandlers, smoothDnD as SmoothDndForGroupingField } from '@farris/smooth-dnd';
SmoothDndForGroupingField.dropHandler = dropHandlers.reactDropHandler().handler;
SmoothDndForGroupingField.wrapChild = false;
export class ColumnGroupDragDirective {
    /**
     * @param {?} ngzone
     * @param {?} injector
     * @param {?} render
     * @param {?} el
     */
    constructor(ngzone, injector, render, el) {
        this.ngzone = ngzone;
        this.injector = injector;
        this.render = render;
        this.el = el;
        this.drop = new EventEmitter();
        this.options = {
            orientation: 'horizontal',
            behaviour: 'move',
            dropPlaceholder: {
                className: 'drop-group-field',
            },
            getGhostParent: (/**
             * @return {?}
             */
            () => {
                return document.body;
            }),
            getChildPayload: this.getChildPayload.bind(this),
            shouldAcceptDrop: (/**
             * @param {?} sourceContainerOptions
             * @param {?} payload
             * @return {?}
             */
            (sourceContainerOptions, payload) => {
                return true;
            }),
            onDropReady: (/**
             * @param {?} dropResult
             * @return {?}
             */
            (dropResult) => {
                this.ngzone.run((/**
                 * @return {?}
                 */
                () => {
                    this.onDropReady(dropResult);
                }));
            }),
            onDrop: (/**
             * @param {?} dropResult
             * @return {?}
             */
            (dropResult) => {
                this.ngzone.run((/**
                 * @return {?}
                 */
                () => {
                    this.drop.emit(dropResult);
                }));
            }),
            onDragEnter: (/**
             * @return {?}
             */
            () => {
                this.ngzone.run((/**
                 * @return {?}
                 */
                () => {
                    this.onDragEnter();
                }));
            }),
            onDragStart: (/**
             * @param {?} info
             * @return {?}
             */
            (info) => {
                this.ngzone.run((/**
                 * @return {?}
                 */
                () => {
                    this.onDragStart(info);
                }));
            }),
            onDragEnd: (/**
             * @param {?} info
             * @return {?}
             */
            (info) => {
                this.ngzone.run((/**
                 * @return {?}
                 */
                () => {
                    this.onDragEnd(info);
                }));
            })
        };
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.initDnD();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.disposeDnd();
    }
    /**
     * @private
     * @return {?}
     */
    disposeDnd() {
        if (this.container) {
            this.container.dispose();
            this.container = null;
        }
    }
    /**
     * @private
     * @return {?}
     */
    initDnD() {
        this.disposeDnd();
        this.container = SmoothDndForGroupingField(this.el.nativeElement, this.options);
    }
    /**
     * @private
     * @param {?} index
     * @return {?}
     */
    getChildPayload(index) {
        return index;
    }
    /**
     * @private
     * @param {?} dropResult
     * @return {?}
     */
    onDropReady(dropResult) {
    }
    /**
     * @private
     * @param {?} info
     * @return {?}
     */
    onDragStart(info) {
    }
    /**
     * @private
     * @param {?} info
     * @return {?}
     */
    onDragEnd(info) {
    }
    /**
     * @private
     * @return {?}
     */
    onDragEnter() {
    }
}
ColumnGroupDragDirective.decorators = [
    { type: Directive, args: [{
                selector: '[column-group-drag]',
            },] }
];
/** @nocollapse */
ColumnGroupDragDirective.ctorParameters = () => [
    { type: NgZone },
    { type: Injector },
    { type: Renderer2 },
    { type: ElementRef }
];
ColumnGroupDragDirective.propDecorators = {
    drop: [{ type: Output }],
    options: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    ColumnGroupDragDirective.prototype.container;
    /** @type {?} */
    ColumnGroupDragDirective.prototype.drop;
    /** @type {?} */
    ColumnGroupDragDirective.prototype.options;
    /**
     * @type {?}
     * @private
     */
    ColumnGroupDragDirective.prototype.ngzone;
    /**
     * @type {?}
     * @private
     */
    ColumnGroupDragDirective.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ColumnGroupDragDirective.prototype.render;
    /**
     * @type {?}
     * @private
     */
    ColumnGroupDragDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWdyb3VwLWRyYWcuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1kYXRhZ3JpZC1zZXR0aW5ncy8iLCJzb3VyY2VzIjpbImxpYi9jb2x1bW4tZ3JvdXAvY29sdW1uLWdyb3VwLWRyYWcuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBaUIsS0FBSyxFQUFHLE1BQU0sRUFBRSxZQUFZLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDM0ksT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLElBQUkseUJBQXlCLEVBQTJDLE1BQU0sb0JBQW9CLENBQUM7QUFFbkkseUJBQXlCLENBQUMsV0FBVyxHQUFHLFlBQVksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLE9BQU8sQ0FBQztBQUNoRix5QkFBeUIsQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBSzVDLE1BQU0sT0FBTyx3QkFBd0I7Ozs7Ozs7SUEyQ2pDLFlBQW9CLE1BQWMsRUFBVSxRQUFrQixFQUFVLE1BQWlCLEVBQVUsRUFBYztRQUE3RixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUFVLFdBQU0sR0FBTixNQUFNLENBQVc7UUFBVSxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBekN2RyxTQUFJLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMzQixZQUFPLEdBQXFCO1lBQ2pDLFdBQVcsRUFBRSxZQUFZO1lBQ3pCLFNBQVMsRUFBRSxNQUFNO1lBQ2pCLGVBQWUsRUFBRTtnQkFDYixTQUFTLEVBQUUsa0JBQWtCO2FBQ2hDO1lBQ0QsY0FBYzs7O1lBQUUsR0FBRyxFQUFFO2dCQUNqQixPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUM7WUFDekIsQ0FBQyxDQUFBO1lBQ0QsZUFBZSxFQUFFLElBQUksQ0FBQyxlQUFlLENB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IERpcmVjdGl2ZSwgTmdab25lLCBJbmplY3RvciwgUmVuZGVyZXIyLCBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBJbnB1dCwgIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgZHJvcEhhbmRsZXJzLCBzbW9vdGhEbkQgYXMgU21vb3RoRG5kRm9yR3JvdXBpbmdGaWVsZCwgRHJvcFJlc3VsdCwgQ29udGFpbmVyT3B0aW9ucywgY29uc3RhbnRzIH0gZnJvbSAnQGZhcnJpcy9zbW9vdGgtZG5kJztcclxuXHJcblNtb290aERuZEZvckdyb3VwaW5nRmllbGQuZHJvcEhhbmRsZXIgPSBkcm9wSGFuZGxlcnMucmVhY3REcm9wSGFuZGxlcigpLmhhbmRsZXI7XHJcblNtb290aERuZEZvckdyb3VwaW5nRmllbGQud3JhcENoaWxkID0gZmFsc2U7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW2NvbHVtbi1ncm91cC1kcmFnXScsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb2x1bW5Hcm91cERyYWdEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xyXG4gICAgcHJpdmF0ZSBjb250YWluZXI6IGFueTtcclxuICAgIEBPdXRwdXQoKSBkcm9wID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQElucHV0KCkgb3B0aW9uczogQ29udGFpbmVyT3B0aW9ucyA9IHtcclxuICAgICAgICBvcmllbnRhdGlvbjogJ2hvcml6b250YWwnLFxyXG4gICAgICAgIGJlaGF2aW91cjogJ21vdmUnLFxyXG4gICAgICAgIGRyb3BQbGFjZWhvbGRlcjoge1xyXG4gICAgICAgICAgICBjbGFzc05hbWU6ICdkcm9wLWdyb3VwLWZpZWxkJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGdldEdob3N0UGFyZW50OiAoKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBkb2N1bWVudC5ib2R5O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0Q2hpbGRQYXlsb2FkOiB0aGlzLmdldENoaWxkUGF5bG9hZC5iaW5kKHRoaXMpLFxyXG4gICAgICAgIHNob3VsZEFjY2VwdERyb3A6IChzb3VyY2VDb250YWluZXJPcHRpb25zLCBwYXlsb2FkKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25Ecm9wUmVhZHk6IChkcm9wUmVzdWx0OiBEcm9wUmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubmd6b25lLnJ1bigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRHJvcFJlYWR5KGRyb3BSZXN1bHQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uRHJvcDogKGRyb3BSZXN1bHQ6IERyb3BSZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5uZ3pvbmUucnVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZHJvcC5lbWl0KGRyb3BSZXN1bHQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uRHJhZ0VudGVyOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubmd6b25lLnJ1bigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRHJhZ0VudGVyKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25EcmFnU3RhcnQ6IChpbmZvKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubmd6b25lLnJ1bigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uRHJhZ1N0YXJ0KGluZm8pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIG9uRHJhZ0VuZDogKGluZm8pID0+IHtcclxuICAgICAgICAgICAgdGhpcy5uZ3pvbmUucnVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25EcmFnRW5kKGluZm8pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbmd6b25lOiBOZ1pvbmUsIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBwcml2YXRlIHJlbmRlcjogUmVuZGVyZXIyLCBwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7IH1cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgICAgICB0aGlzLmluaXREbkQoKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uRGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLmRpc3Bvc2VEbmQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGRpc3Bvc2VEbmQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmRpc3Bvc2UoKTtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgcHJpdmF0ZSBpbml0RG5EKCkge1xyXG4gICAgICAgIHRoaXMuZGlzcG9zZURuZCgpO1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gU21vb3RoRG5kRm9yR3JvdXBpbmdGaWVsZChcclxuICAgICAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LFxyXG4gICAgICAgICAgICB0aGlzLm9wdGlvbnNcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0Q2hpbGRQYXlsb2FkKGluZGV4KSB7XHJcbiAgICAgICAgcmV0dXJuIGluZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25Ecm9wUmVhZHkoZHJvcFJlc3VsdCkge1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25EcmFnU3RhcnQoaW5mbykge1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25EcmFnRW5kKGluZm8pIHtcclxuICAgIH1cclxuXHJcblxyXG4gICAgcHJpdmF0ZSBvbkRyYWdFbnRlcigpIHtcclxuICAgIH1cclxufVxyXG4iXX0=