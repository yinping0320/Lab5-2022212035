/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from "@angular/core";
export class SetColumnsComponent {
    constructor() {
        this.data = [];
        this.checkedItems = [];
        this.selectedIds = [];
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.selectedIds = (this.checkedItems || []).map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.id));
        if (this.data) {
            this.data.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (!item.id) {
                    item.id = item.field;
                }
            }));
        }
    }
}
SetColumnsComponent.decorators = [
    { type: Component, args: [{
                selector: 'set-columns',
                template: "<multi-select [dataSource]=\"data\"\r\n[idField]=\"'id'\" [valueField]=\"'field'\" [textField]=\"'title'\" [displayType]=\"'List'\"\r\n[enableTargetSort]=\"true\" [showCheckbox]=\"true\" [enableMoveMore]=\"true\" [(selectedId)]=\"selectedIds\">\r\n</multi-select>"
            }] }
];
/** @nocollapse */
SetColumnsComponent.ctorParameters = () => [];
SetColumnsComponent.propDecorators = {
    data: [{ type: Input }],
    checkedItems: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SetColumnsComponent.prototype.data;
    /** @type {?} */
    SetColumnsComponent.prototype.checkedItems;
    /** @type {?} */
    SetColumnsComponent.prototype.selectedIds;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0Y29sdW1ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRhdGFncmlkLXNldHRpbmdzLyIsInNvdXJjZXMiOlsibGliL211bHRpLWhlYWRlcnMvc2V0Y29sdW1ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBTXpELE1BQU0sT0FBTyxtQkFBbUI7SUFNNUI7UUFKUyxTQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ1YsaUJBQVksR0FBRyxFQUFFLENBQUM7UUFFM0IsZ0JBQVcsR0FBYSxFQUFFLENBQUE7SUFDWCxDQUFDOzs7O0lBRWhCLFFBQVE7UUFDSixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFDLENBQUM7UUFDNUQsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPOzs7O1lBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO29CQUNWLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztpQkFDeEI7WUFDTCxDQUFDLEVBQUMsQ0FBQTtTQUNMO0lBQ0wsQ0FBQzs7O1lBckJKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsbVJBQTBDO2FBQzdDOzs7OzttQkFHSSxLQUFLOzJCQUNMLEtBQUs7Ozs7SUFETixtQ0FBbUI7O0lBQ25CLDJDQUEyQjs7SUFFM0IsMENBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdzZXQtY29sdW1ucycsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2V0Y29sdW1ucy5jb21wb25lbnQuaHRtbCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFNldENvbHVtbnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICAgIEBJbnB1dCgpIGRhdGEgPSBbXTtcclxuICAgIEBJbnB1dCgpIGNoZWNrZWRJdGVtcyA9IFtdO1xyXG5cclxuICAgIHNlbGVjdGVkSWRzOiBzdHJpbmdbXSA9IFtdXHJcbiAgICBjb25zdHJ1Y3RvcigpIHt9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZElkcyA9ICh0aGlzLmNoZWNrZWRJdGVtcyB8fCBbXSkubWFwKG4gPT4gbi5pZCk7XHJcbiAgICAgICAgaWYgKHRoaXMuZGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLmRhdGEuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghaXRlbS5pZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uaWQgPSBpdGVtLmZpZWxkO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==