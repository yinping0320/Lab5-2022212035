/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(lucas huang)
 * @Date: 2018-11-23 08:33:56
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-10-17 16:21:33
 * @Company: Inspur
 * @Version: v0.0.1
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { MessagerModule } from '@farris/ui-messager';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { LookupModule } from '@farris/ui-lookup';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisCommonModule } from '@farris/ui-common';
import { ComboLookupModule } from '@farris/ui-combo-lookup';
import { FarrisFormsModule } from '@farris/ui-forms';
import { SorterComponent } from './sort.component';
import { SortEditorComponent } from './sort-editor.component';
export class SorterModule {
}
SorterModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    MessagerModule.forRoot(),
                    PerfectScrollbarModule,
                    FarrisDialogModule,
                    LookupModule,
                    FarrisCommonModule,
                    ComboLookupModule,
                    LocaleModule,
                    FarrisFormsModule
                ],
                declarations: [
                    SortEditorComponent,
                    SorterComponent
                ],
                exports: [
                    SorterComponent,
                    SortEditorComponent
                ],
                entryComponents: [
                    SortEditorComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXNvcnQtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL3NvcnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVVBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDdEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUEwQjlELE1BQU0sT0FBTyxZQUFZOzs7WUF6QnhCLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixXQUFXO29CQUNYLGNBQWMsQ0FBQyxPQUFPLEVBQUU7b0JBQ3hCLHNCQUFzQjtvQkFDdEIsa0JBQWtCO29CQUNsQixZQUFZO29CQUNaLGtCQUFrQjtvQkFDbEIsaUJBQWlCO29CQUNqQixZQUFZO29CQUNaLGlCQUFpQjtpQkFDcEI7Z0JBQ0QsWUFBWSxFQUFFO29CQUNWLG1CQUFtQjtvQkFDbkIsZUFBZTtpQkFDbEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLGVBQWU7b0JBQ2YsbUJBQW1CO2lCQUN0QjtnQkFDRCxlQUFlLEVBQUU7b0JBQ2IsbUJBQW1CO2lCQUN0QjthQUNKIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8qXHJcbiAqIEBBdXRob3I6IOeWr+eLguengOaJjShsdWNhcyBodWFuZylcclxuICogQERhdGU6IDIwMTgtMTEtMjMgMDg6MzM6NTZcclxuICogQExhc3RFZGl0b3JzOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBMYXN0RWRpdFRpbWU6IDIwMTktMTAtMTcgMTY6MjE6MzNcclxuICogQENvbXBhbnk6IEluc3B1clxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5pbXBvcnQgeyBNZXNzYWdlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbWVzc2FnZXInO1xyXG5pbXBvcnQgeyBGYXJyaXNEaWFsb2dNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRpYWxvZyc7XHJcbmltcG9ydCB7IFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXBlcmZlY3Qtc2Nyb2xsYmFyJztcclxuaW1wb3J0IHsgTG9va3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb29rdXAnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgQ29tYm9Mb29rdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbWJvLWxvb2t1cCc7XHJcbmltcG9ydCB7IEZhcnJpc0Zvcm1zTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1mb3Jtcyc7XHJcblxyXG5pbXBvcnQgeyBTb3J0ZXJDb21wb25lbnQgfSBmcm9tICcuL3NvcnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU29ydEVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vc29ydC1lZGl0b3IuY29tcG9uZW50JztcclxuQE5nTW9kdWxlKHtcclxuICAgIGltcG9ydHM6IFtcclxuICAgICAgICBDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgRm9ybXNNb2R1bGUsXHJcbiAgICAgICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICAgICAgRmFycmlzRGlhbG9nTW9kdWxlLFxyXG4gICAgICAgIExvb2t1cE1vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUsXHJcbiAgICAgICAgQ29tYm9Mb29rdXBNb2R1bGUsXHJcbiAgICAgICAgTG9jYWxlTW9kdWxlLFxyXG4gICAgICAgIEZhcnJpc0Zvcm1zTW9kdWxlXHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICAgICAgU29ydEVkaXRvckNvbXBvbmVudCxcclxuICAgICAgICBTb3J0ZXJDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbXHJcbiAgICAgICAgU29ydGVyQ29tcG9uZW50LFxyXG4gICAgICAgIFNvcnRFZGl0b3JDb21wb25lbnRcclxuICAgIF0sXHJcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgICAgICBTb3J0RWRpdG9yQ29tcG9uZW50XHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTb3J0ZXJNb2R1bGUge31cclxuIl19