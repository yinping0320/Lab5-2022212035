!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@farris/ui-common/types"),require("@angular/platform-browser"),require("lodash-es"),require("@farris/ui-modal"),require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@farris/ui-messager"),require("@farris/ui-dialog"),require("@farris/ui-perfect-scrollbar"),require("@farris/ui-lookup"),require("@farris/ui-locale"),require("@farris/ui-common"),require("@farris/ui-combo-lookup"),require("@farris/ui-forms")):"function"==typeof define&&define.amd?define("@farris/ui-sort-editor",["exports","@farris/ui-common/types","@angular/platform-browser","lodash-es","@farris/ui-modal","@angular/core","@angular/common","@angular/forms","@farris/ui-messager","@farris/ui-dialog","@farris/ui-perfect-scrollbar","@farris/ui-lookup","@farris/ui-locale","@farris/ui-common","@farris/ui-combo-lookup","@farris/ui-forms"],o):o((t.farris=t.farris||{},t.farris["ui-sort-editor"]={}),t.types,t.ng.platformBrowser,t.lodashEs,t.uiModal,t.ng.core,t.ng.common,t.ng.forms,t.uiMessager,t.uiDialog,t.uiPerfectScrollbar,t.uiLookup,t.uiLocale,t.uiCommon,t.uiComboLookup,t.uiForms)}(this,function(t,n,o,i,e,r,s,l,c,a,d,u,p,h,f,b){"use strict";var m=function(t,o){return(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var e in o)o.hasOwnProperty(e)&&(t[e]=o[e])})(t,o)};function g(t,o){var e="function"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var n,i,r=e.call(t),s=[];try{for(;(void 0===o||0<o--)&&!(n=r.next()).done;)s.push(n.value)}catch(l){i={error:l}}finally{try{n&&!n.done&&(e=r["return"])&&e.call(r)}finally{if(i)throw i.error}}return s}function y(){for(var t=[],o=0;o<arguments.length;o++)t=t.concat(g(arguments[o]));return t}var v=(x.prototype.ngOnInit=function(){},x.prototype.itemIntoView=function(){var o=this;this.tablebodybox&&setTimeout(function(){var t=o.tablebodybox.nativeElement.querySelector("tr.selected");t&&(t.scrollIntoViewIfNeeded?t.scrollIntoViewIfNeeded(!1):t.scrollIntoView({block:"nearest"}))},50)},x.prototype.selected=function(t){this.currentCondition=t},x.prototype.isSelected=function(t){return!!this.currentCondition&&this.currentCondition.index===t},x.prototype.insertCondition=function(t){var o=Object.assign({},this.newCondition);if(0===t)this.conditions=y([o],this.conditions);else{var e=i.cloneDeep(this.conditions);e.splice(t,0,o),this.conditions=y(e)}this.changeConditionList("insert")},x.prototype.removeCondition=function(t){this.conditions.splice(t,1),this.changeConditionList("remove"),this.currentCondition&&(t===this.currentCondition.index?this.conditions[t]?this.currentCondition={index:t,condition:this.conditions[t]}:this.conditions[t-1]?this.currentCondition={index:t-1,condition:this.conditions[t-1]}:this.currentCondition=null:this.conditions[this.currentCondition.index]||(this.currentCondition.index>t?this.currentCondition.index=this.currentCondition.index-1:this.currentCondition.index=this.currentCondition.index+1))},x.prototype.onAdd=function(){var t=Object.assign({},this.newCondition);this.conditions=y(this.conditions,[t]),this.changeConditionList("add");var o=this.conditions.length-1;this.currentCondition={index:o,condition:t}},x.prototype.onClear=function(){var t=this;this.messagerService.question("确认要清空当前所有排序字段吗？",function(){t.conditions=[],t.currentCondition=null,t.changeConditionList("clear")})},x.prototype.onMoveTop=function(){this.currentCondition&&(this.conditions.unshift(this.currentCondition.condition),this.conditions.splice(this.currentCondition.index+1,1),this.currentCondition.index=0,this.changeConditionList("moveTop"))},x.prototype.onMovePrev=function(){var t;if(this.currentCondition){var o=this.currentCondition.index,e=this.conditions.splice(o,1);(t=this.conditions).splice.apply(t,y([o-1,0],e)),this.currentCondition.index=o-1,this.changeConditionList("movePrev")}},x.prototype.onMoveNext=function(){var t;if(this.currentCondition){var o=this.currentCondition.index,e=this.conditions.splice(o,1);(t=this.conditions).splice.apply(t,y([o+1,0],e)),this.currentCondition.index=o+1,this.changeConditionList("moveNext")}},x.prototype.onMoveBottom=function(){this.currentCondition&&(this.conditions.push(this.currentCondition.condition),this.conditions.splice(this.currentCondition.index,1),this.currentCondition.index=this.conditions.length-1,this.changeConditionList("moveBottom"))},x.prototype.canUse=function(){return!!this.currentCondition&&1<this.conditions.length},x.prototype.canMoveUp=function(){return!!this.canUse()&&0<this.currentCondition.index},x.prototype.canMoveDown=function(){return!!this.canUse()&&this.currentCondition.index<this.conditions.length-1},x.prototype.changeConditionList=function(t){var o=this;this.sortsChanged.emit({action:t,data:this.conditions}),setTimeout(function(){o.itemIntoView()})},x.decorators=[{type:r.Component,args:[{selector:"sort-editor",template:'\x3c!-- <div class="table-header " style="max-height: 35px;">\r\n    <table class="table table-bordered sort-col-header" style="margin-bottom: 0">\r\n        <colgroup>\r\n            <col *ngFor="let s of columnSizeData" [width]=" s + \'px\'">\r\n        </colgroup>\r\n        <thead>\r\n            <tr>\r\n                <th></th>\r\n                <th>&nbsp;<b>{{ \'sortEditor.field\'| locale }}</b></th>\r\n                <th>&nbsp;<b>{{ \'sortEditor.order\'| locale }}</b></th>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n</div> --\x3e\r\n<div style="\r\n    border-top: 1px solid  white;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: 2;\r\n"></div>\r\n<div class="table-body flex-fill  win11Scroll show nobtn" style="margin-left:14px; margin-right: 0; overflow-y: scroll;" #tablebodybox>\r\n    \x3c!-- <perfect-scrollbar [config]="{}" style="height: 100%" #ps> --\x3e\r\n        <table class="table table-bordered" style="margin: 0;">\r\n            <thead style="position: sticky; top: 0; z-index: 1;">\r\n                <tr>\r\n                    <th style="width: 30px"></th>\r\n                    <th style="width: 120px">&nbsp;<b>{{ \'sortEditor.field\'| locale }}</b></th>\r\n                    <th style="width: 60px">&nbsp;<b>{{ \'sortEditor.order\'| locale }}</b></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor="let condition of conditions; let index=index;" (click)="selected({\'index\':index, \'condition\': condition})" [class.selected]="isSelected(index)" >\r\n                    <td style="padding-left: 0; padding-right: 0; text-align: center">\r\n                        <button type="button" (click)="insertCondition(index)" class="k-button k-button-icon k-flat"><span class="k-icon k-i-plus"></span></button>\r\n                        <button type="button" (click)="removeCondition(index)" class="k-button k-button-icon k-flat"><span class="k-icon k-i-minus"></span></button>\r\n                    </td>\r\n                    <td>\r\n\r\n                        <ng-container *ngIf="fieldEditor.type === \'select\'" >\r\n                            <select class="form-control filter-select" [(ngModel)]="condition.sortField" name="sortField"  \r\n                            single-select [panelRef]="selectcolpanel" [items]="columns" [container]="tablebodybox">\r\n                                \x3c!-- <option *ngFor="let col of columns" [value]="col.value">{{ col.label }}</option> --\x3e\r\n                            </select>\r\n\r\n                            <div #selectcolpanel class="single-select-panel f-area-hide" style="max-height: 200px;overflow: auto;">\r\n                                <ul class="dropdown-menu show" style="position:relative;min-width: 100%;border:none; box-shadow: none;">\r\n                                    <li class="dropdown-item" *ngFor="let col of columns" [attr.value]="col.value" [class.active]="condition.sortField === col.value">{{ col.label }}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </ng-container>\r\n                        <farris-combo-lookup *ngIf="fieldEditor.type === \'combo-tree\'" name="sortField"\r\n                            [idField]="fieldEditor?.options?.idField ||\'value\'"\r\n                            [textField]="fieldEditor?.options?.textField ||\'label\'"\r\n                            [displayType]="\'LOOKUPTREELIST\'" [useValue]="true"\r\n                            [useTreeView]="true"\r\n                            [columns]="fieldEditor?.options?.columns || []"\r\n                            [data]="columns"\r\n                            [(ngModel)]="condition.sortField"\r\n                            [remoteSearch]="false"\r\n                            [autoWidth]="fieldEditor?.options?.autoWidth"\r\n                            [panelWidth]="fieldEditor?.options?.panelWidth || 200"\r\n                        >\r\n                        </farris-combo-lookup>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <select class="form-control filter-select" [(ngModel)]="condition.sortType" name="sortType"   single-select [panelRef]="selectpanel" [items]="sortTypes"  [container]="tablebodybox">\r\n                            \x3c!-- <option *ngFor="let item of sortTypes" [value]="item.value">{{ item.label }}</option> --\x3e\r\n                        </select>\r\n\r\n                        <div #selectpanel class="single-select-panel f-area-hide" style="max-height: 200px;overflow: auto;">\r\n                            <ul class="dropdown-menu show" style="position:relative;min-width: 100%;" >\r\n                                <li class="dropdown-item" *ngFor="let col of sortTypes" [attr.value]="col.value" [class.active]="condition.sortType === col.value">{{ col.label }}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    \x3c!-- </perfect-scrollbar> --\x3e\r\n</div>\r\n<div class="footer-container px-2" style="flex-shrink: 0;margin: 0 14px; height: 36px; ">\r\n    <button type="button" (click)="onAdd()"\r\n        class="k-button k-button-icontext k-flat "><span class="f-icon f-icon-add"></span> {{ \'sortEditor.add\'| locale }}</button>\r\n    <button type="button" (click)="onClear()" [disabled]="!conditions.length"\r\n        class="k-button k-button-icontext k-flat "><span class="f-icon f-icon-close"></span> {{ \'sortEditor.clear\'| locale }}</button>\r\n    <button type="button" [disabled]="!canMoveUp()" (click)="onMoveTop()"\r\n        class="k-button k-button-icontext k-flat "><span class="f-icon f-icon-arrow-end-up"></span> {{ \'sortEditor.moveTop\'| locale }}</button>\r\n    <button type="button" [disabled]="!canMoveUp()" (click)="onMovePrev()"\r\n        class="k-button k-button-icontext k-flat "><span class="f-icon f-icon-arrow-60-up"></span> {{ \'sortEditor.moveUp\'| locale }}</button>\r\n    <button type="button" [disabled]="!canMoveDown()" (click)="onMoveNext()"\r\n        class="k-button k-button-icontext k-flat "><span class="f-icon f-icon-arrow-60-down"></span> {{ \'sortEditor.moveDown\'| locale }}</button>\r\n    <button type="button" [disabled]="!canMoveDown()" (click)="onMoveBottom()"\r\n        class="k-button k-button-icontext k-flat"><span class="f-icon f-icon-arrow-end-down"></span> {{ \'sortEditor.moveBottom\'| locale }}</button>\r\n</div>',styles:["\n        .sort-col-header thead th { padding: 0; line-height: 35px;}\n        .filter-select { width:100%; padding-left: 0; padding-right: 0; }\n        .selected { background: #c2e4ff; }\n        "]}]}],x.ctorParameters=function(){return[{type:c.MessagerService},{type:o.DomSanitizer},{type:r.Injector}]},x.propDecorators={cls:[{type:r.HostBinding,args:["class"]}],fieldEditor:[{type:r.Input}],conditions:[{type:r.Input}],columns:[{type:r.Input}],height:[{type:r.Input}],psRef:[{type:r.ViewChild,args:["ps"]}],tablebodybox:[{type:r.ViewChild,args:["tablebodybox"]}],sortsChanged:[{type:r.Output}]},x);function x(t,o,e){this.messagerService=t,this.sanitizer=o,this.injector=e,this.sortTypes=n.SortTypes,this.columnSizeData=[30,120,60],this.cls="f-sort-editor f-utils-flex-column f-utils-absolute-all",this.fieldEditor={type:"select",options:null},this.conditions=[],this.columns=[],this.sortsChanged=new r.EventEmitter,this.newCondition={sortField:"",sortType:n.SortType.Asc},this.currentCondition=null,this.localeService=this.injector.get(p.LocaleService),this.sortTypes=[{label:this.localeService.getValue("sortEditor.asc"),value:n.SortType.Asc},{label:this.localeService.getValue("sortEditor.desc"),value:n.SortType.Desc}]}var C,w={provide:l.NG_VALUE_ACCESSOR,useExisting:r.forwardRef(function(){return E}),multi:!0},E=(function R(t,o){function e(){this.constructor=t}m(t,o),t.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}(k,C=u.LookupComponent),k.prototype.ngOnInit=function(){},k.prototype.onmouseover=function(){this.showClearButton=!0},k.prototype.onmouseleave=function(){this.showClearButton=!1},k.prototype.showDialog=function(){var o=this;if(!this.disabled){this.fieldEditor&&"combo-tree"===this.fieldEditor.type&&(this.fieldEditor.options=this.fieldEditor.options||{},this.fieldEditor.options.autoWidth===undefined&&(this.fieldEditor.options.autoWidth=!0),this.fieldEditor.options.columns||(this.fieldEditor.options.columns=[{field:"label",title:"label",width:100}]),this.fieldEditor.options.textField||(this.fieldEditor.options.textField="label"),this.fieldEditor.options.idField||(this.fieldEditor.options.idField="value"));var t=this.cfr.resolveComponentFactory(v);this.sortEditorRef=t.create(this.injector),this.sortEditorRef.instance.columns=this.columns,this.sortEditorRef.instance.conditions=this.conditions,this.originalData=i.cloneDeep(this.conditions),this.dlgRef=this.modalService.show(this.sortEditorRef,{width:500,height:400,title:this.localeService.getValue("sortEditor.title"),enableScroll:!1,minHeight:298,minWidth:498,iconCls:"f-icon f-icon-col-defaultsort",buttons:this.btnRef,showMaxButton:!1,buttonAlign:"right",initialState:{fieldEditor:this.fieldEditor}}),this.sortEditorRef.instance.height=this.dlgRef.dialog.instance.getContainerSize().height,this.dlgRef.dialog.instance.resized.subscribe(function(t){o.sortEditorRef.instance.height=t.containerHeight}),this.sortEditorRef.instance.sortsChanged.subscribe(function(t){o.conditions=t.data}),this.sortEditorRef.changeDetectorRef.detectChanges(),this.dlgRef.dialog.changeDetectorRef.reattach(),this.openDialog.emit()}},k.prototype.writeValue=function(t){t&&("string"==typeof t&&(t=JSON.parse(t)),this.conditions=t||[],this.text=this.commonUtils.buildSortString(t))},k.prototype.save=function(){this.conditions.length?(this.conditions=this.conditions.filter(function(t){return t.sortField}),this.text=this.commonUtils.buildSortString(this.conditions)):this.text="",this.closeDialog(),this.cd&&this.cd.detectChanges()},k.prototype.cancel=function(){this.conditions=this.originalData,this.closeDialog()},k.prototype.closeDialog=function(){this.updateModel(),this.sortEditorRef=null,this.dlgRef.close()},k.prototype.clear=function(){this.text="",this.conditions=[],this.updateModel()},k.prototype.updateModel=function(){var t=this.conditions;"string"===this.returnType&&(t=JSON.stringify(this.conditions)),this.onModelChange(t),this.onModelTouched(t)},k.decorators=[{type:r.Component,args:[{selector:"sorter",template:'\n    <div class="input-group">\n        <input class="form-control" [value]="text" #txtbox\n            [readonly]="!editable || readonly"\n            [class.f-state-disabled] = "disabled"\n            [class.f-state-readonly] = "readonly"\n            [class.f-state-editable] = "!editable"\n            [disabled]="disabled"/>\n        <div class="input-group-append" *ngIf="!readonly && !disabled">\n            <span *ngIf="showClearButton && enableClear" class="input-group-text input-group-clear" (click)="clear()">\n                <i class="f-icon modal_close"></i>\n            </span>\n            <span class="f-select input-group-text"  (click)="showDialog()">\n                <i class="f-icon f-icon-lookup"></i>\n            </span>\n        </div>\n    </div>\n\n    <ng-template #defaultButtonRef>\n        <button class="btn btn-outline-secondary" (click)="cancel()"> {{ \'sortEditor.cancel\'| locale }} </button>&nbsp;\n        <button class="btn btn-primary" (click)="save()"> {{ \'sortEditor.ok\'| locale }} </button>\n    </ng-template>\n    ',providers:[w],styles:["\n        .lookup-clear { cursor: pointer; background: #fff!important;}\n        .lookup-clear:hover { background: #e9ecef!important;}\n        "]}]}],k.ctorParameters=function(){return[{type:r.Injector},{type:r.ComponentFactoryResolver},{type:e.BsModalService},{type:r.ElementRef}]},k.propDecorators={hostCls:[{type:r.HostBinding,args:["class"]}],columns:[{type:r.Input}],fieldEditor:[{type:r.Input}],returnType:[{type:r.Input}],enableClear:[{type:r.Input}],openDialog:[{type:r.Output}],btnRef:[{type:r.ViewChild,args:["defaultButtonRef"]}],textbox:[{type:r.ViewChild,args:["txtbox"]}],onmouseover:[{type:r.HostListener,args:["mouseover"]}],onmouseleave:[{type:r.HostListener,args:["mouseleave"]}]},k);function k(t,o,e,n){var i=C.call(this,t,n)||this;return i.cfr=o,i.modalService=e,i.el=n,i.hostCls="f-cmp-inputgroup",i.text="",i.conditions=[],i.originalData=[],i.columns=[],i.fieldEditor={type:"select",options:{}},i.returnType="object",i.enableClear=!0,i.openDialog=new r.EventEmitter,i.cd=null,i.showClearButton=!1,i.commonUtils=null,i.localeService=i.injector.get(p.LocaleService),i.cd=i.injector.get(r.ChangeDetectorRef,null),i.commonUtils=i.injector.get(h.CommonUtils,null)||new h.CommonUtils,i}var S=(M.decorators=[{type:r.NgModule,args:[{imports:[s.CommonModule,l.FormsModule,c.MessagerModule.forRoot(),d.PerfectScrollbarModule,a.FarrisDialogModule,u.LookupModule,h.FarrisCommonModule,f.ComboLookupModule,p.LocaleModule,b.FarrisFormsModule],declarations:[v,E],exports:[E,v],entryComponents:[v]}]}],M);function M(){}t.SortEditorComponent=v,t.SORTER_LOOKUPGRID_VALUE_ACCESSOR=w,t.SorterComponent=E,t.SorterModule=S,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-sort-editor.umd.min.js.map