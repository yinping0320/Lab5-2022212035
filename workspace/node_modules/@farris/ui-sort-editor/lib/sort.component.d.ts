import { ChangeDetectorRef } from '@angular/core';
import { OnInit, EventEmitter, TemplateRef, ComponentRef, Injector, ComponentFactoryResolver, ElementRef } from '@angular/core';
import { LookupComponent } from '@farris/ui-lookup';
import { SortCondition } from '@farris/ui-common/types';
import { BsModalRef, BsModalService } from '@farris/ui-modal';
import { SortEditorComponent } from './sort-editor.component';
import { LocaleService } from '@farris/ui-locale';
import { CommonUtils } from '@farris/ui-common';
export interface SORT_FIELD_EDITOR {
    type: 'select' | 'combo-tree' | 'lookup';
    options?: any;
}
export declare const SORTER_LOOKUPGRID_VALUE_ACCESSOR: any;
export declare class SorterComponent extends LookupComponent implements OnInit {
    private cfr;
    private modalService;
    el: ElementRef;
    hostCls: string;
    text: string;
    conditions: SortCondition[];
    originalData: SortCondition[];
    columns: {
        label: string;
        value: string;
    }[];
    fieldEditor: SORT_FIELD_EDITOR;
    returnType: 'object' | 'string';
    enableClear: boolean;
    openDialog: EventEmitter<{}>;
    btnRef: TemplateRef<any>;
    textbox: ElementRef<any>;
    dlgRef: BsModalRef;
    sortEditorRef: ComponentRef<SortEditorComponent>;
    cd: ChangeDetectorRef;
    showClearButton: boolean;
    localeService: LocaleService;
    commonUtils: CommonUtils;
    constructor(injector: Injector, cfr: ComponentFactoryResolver, modalService: BsModalService, el: ElementRef);
    ngOnInit(): void;
    onmouseover(): void;
    onmouseleave(): void;
    showDialog(): void;
    writeValue(val: any): void;
    save(): void;
    cancel(): void;
    closeDialog(): void;
    clear(): void;
    private updateModel;
}
