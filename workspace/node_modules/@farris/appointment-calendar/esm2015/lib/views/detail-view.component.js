/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, Injector, Input, TemplateRef } from '@angular/core';
import { AppointmentCalendarService } from '../appointment-calendar.service';
export class ReserveDetailComponent {
    /**
     * @param {?} injector
     * @param {?} ser
     * @param {?} el
     */
    constructor(injector, ser, el) {
        this.injector = injector;
        this.ser = ser;
        this.el = el;
        /**
         * 弹出面板位置
         */
        this.position = null;
        /**
         * 预定信息字段配置
         */
        this.fieldConfigs = null;
        /**
         * 预定地点字段配置
         */
        this.placeFieldConfigs = null;
        this.customCls = null;
        this.showEditButton = true;
        this.showDeleteButton = true;
        this.showCloseButton = true;
        this.detailColumnWidth = 56;
        this.titleLength = 52;
        this.rooNameField = 'name';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.rooNameField = this.placeFieldConfigs.fullName || this.placeFieldConfigs.name;
    }
    /**
     * @param {?} $event
     * @param {?} t
     * @return {?}
     */
    toolbarBtnClick($event, t) {
        $event.stopPropagation();
        this.ser.cardBtnClick$.next({ $event, action: t, item: this.data });
    }
    /**
     * @param {?=} typ
     * @return {?}
     */
    getCustomCls(typ = 'cls') {
        /** @type {?} */
        let result = null;
        if (this.customCls) {
            if (!this.customCls['cls'] && !this.customCls['cls'] && typ == 'cls') {
                result = this.customCls;
            }
            else {
                result = this.customCls[typ] || {};
            }
        }
        // if (typ === 'styles' || typ === 'detail') {
        //     Object.keys(result).forEach((n: any) => {
        //         if (result[n].indexOf('important') === -1) {
        //             result[n] = result[n] +' !important' ;
        //         }
        //     });
        // }
        return result;
    }
    /**
     * @param {?} str
     * @return {?}
     */
    getLength(str) {
        /** @type {?} */
        let strLength = 0;
        // 记录str的总长度
        /** @type {?} */
        const Len = str.length;
        for (let i = 0; i < Len; i++) {
            /** @type {?} */
            var charCode = str.charCodeAt(i);
            if (charCode >= 0 && charCode <= 128) {
                strLength++; //英文字符加1
            }
            else {
                strLength = strLength + 2; //中文字符加2
            }
        }
        return strLength;
    }
    /**
     * @param {?} str
     * @param {?} len
     * @return {?}
     */
    subStrNum(str, len) {
        /** @type {?} */
        const strLen = str.length;
        /** @type {?} */
        let strCut = '';
        /** @type {?} */
        let strLength = 0;
        for (let i = 0; i < strLen; i++) {
            /** @type {?} */
            var charStr = str.charAt(i);
            strLength++;
            if (encodeURI(charStr).length > 4) { //使用encodeURI获取编码长度
                strLength++;
            }
            strCut = strCut.concat(charStr); //单个字符进行合并
            if (strLength >= len) {
                strCut = strCut.concat('...'); //大于指定长度后合并'...'并返回此字符串
                return strCut;
            }
        }
        if (strLength < len) {
            return str;
        }
    }
}
ReserveDetailComponent.decorators = [
    { type: Component, args: [{
                selector: 'reserve-detail',
                template: `
      <div class="reserve-detail-container" style="position: fixed; z-index: 99" [style.left.px]="position?.left" [style.top.px]="position?.top">
        <div class="detail-header" [ngClass]="getCustomCls()" [ngStyle]="getCustomCls('styles')">
            <div class="detail-toolbar" *ngIf="!toolbarButtons || !toolbarButtons.length">
                <span *ngIf="showEditButton" class="f-icon f-icon f-icon-new-edit" title="{{ 'appointment.detail.edit' | locale }}" (click)="toolbarBtnClick($event, 'edit')"></span>
                <span *ngIf="showDeleteButton" class="f-icon f-icon-trash" title="{{ 'appointment.detail.del' | locale }}" (click)="toolbarBtnClick($event, 'del')"></span>
                <span *ngIf="showCloseButton" class="f-icon f-icon-close" title="{{ 'appointment.detail.close' | locale }}" (click)="toolbarBtnClick($event, 'close')"></span>
            </div>

            <div class="detail-toolbar" *ngIf="toolbarButtons && toolbarButtons.length">
                <span *ngFor="let btn of toolbarButtons" class="{{ btn.icon }}" title="{{ btn.title }}" [style.display]="btn.visible ? '': 'none'"
                    (click)="!btn.disable && btn.handler && btn.handler({ item: data, $event: $event })"></span>
                <span *ngIf="showCloseButton" class="f-icon f-icon-close" title="{{ 'appointment.detail.close' | locale }}" (click)="toolbarBtnClick($event, 'close')"></span>
            </div>

            <div class="detail-title">
 
                <span class="detail-place">
                    {{rooNameField | getvalue: placeInfo}}
                </span>
                <div class="title-content" style='word-break:break-all; font-family:-apple-system,BlinkMacSystemFont,"Segoe UI","PingFang SC","Hiragino Sans GB","Microsoft YaHei","Helvetica Neue",Helvetica,Arial,sans-serif' title="{{fieldConfigs.title}}">
                    {{subStrNum(fieldConfigs.title | getvalue: data, titleLength)}}
                    <!-- <span class="detail-label">专项会议</span> -->
                    <ng-container [ngTemplateOutlet]="badgeTemplate" [ngTemplateOutletContext]="{ $implicit: {data: data}, item: data }"></ng-container>
                </div>
                <div class="detail-timer">
                    {{ fieldConfigs.startDate| getvalue: data | dateformat: ('appointment.detail.dateFormat'|locale) }} {{ fieldConfigs.startDate| getvalue: data | dateformat: 'HH:mm' }} 
                    &nbsp;-&nbsp;
                    {{ fieldConfigs.endDate | getvalue: data | dateformat: ('appointment.detail.dateFormat'|locale) }} {{ fieldConfigs.endDate | getvalue: data | dateformat: 'HH:mm' }} 
                    <!-- 9月4日（今天）08:00 — 9月7日（周三）17:30 -->
                </div>
            </div>
        </div>
        <div class="detail-info-content  win11Scroll nobtn" [ngStyle]="getCustomCls('detail')">
            <ng-container [ngTemplateOutlet]="detailTemplate" [ngTemplateOutletContext]="{ $implicit: {data: data}, item: data }"></ng-container>
            <ul *ngIf="!detailTemplate">
                <li *ngFor="let col of columns">
                    <ng-container *ngIf="!col.template">
                        <span class="detail-subtitle" [style.width.px]="detailColumnWidth" [style.minWidth.px]="detailColumnWidth" [title]="col.title">{{col.title}}</span> 
                        <span class="detail-content  d-flex flex-row" *ngIf="!col.formatter">
                            <span class="colon"></span>    
                            <span class="text">{{ col.field | getvalue: data: true}}</span>
                        </span>
                        <span class="detail-content  d-flex flex-row" *ngIf="col.formatter">
                            <span class="colon"></span>
                            <span class="text" [innerHtml]=" col.field | getvalue: data | columnformatter: col : data | safe: 'html'"></span>
                        </span>
                    </ng-container>
                    <ng-container *ngIf="col.template"  [ngTemplateOutlet]="col.template" [ngTemplateOutletContext]="{ $implicit: {data: data, field: col.field, label: col.title}, item: data }">
                    </ng-container>
                </li>
                
            </ul>
        </div>
    </div>

    `,
                styles: [`
            .detail-subtitle {
               text-align: justify;text-align-last: justify;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;
            }
            .detail-content>.colon:before {
                content: '：'
            }

            .detail-content>.text {
                word-break: break-all;
            }
        `]
            }] }
];
/** @nocollapse */
ReserveDetailComponent.ctorParameters = () => [
    { type: Injector },
    { type: AppointmentCalendarService },
    { type: ElementRef }
];
ReserveDetailComponent.propDecorators = {
    data: [{ type: Input }],
    position: [{ type: Input }],
    columns: [{ type: Input }],
    detailTemplate: [{ type: Input }],
    badgeTemplate: [{ type: Input }],
    fieldConfigs: [{ type: Input }],
    placeInfo: [{ type: Input }],
    placeFieldConfigs: [{ type: Input }],
    customCls: [{ type: Input }],
    showEditButton: [{ type: Input }],
    showDeleteButton: [{ type: Input }],
    showCloseButton: [{ type: Input }],
    toolbarButtons: [{ type: Input }],
    detailColumnWidth: [{ type: Input }],
    titleLength: [{ type: Input }]
};
if (false) {
    /**
     * 预定数据
     * @type {?}
     */
    ReserveDetailComponent.prototype.data;
    /**
     * 弹出面板位置
     * @type {?}
     */
    ReserveDetailComponent.prototype.position;
    /**
     * 预定详情字段
     * @type {?}
     */
    ReserveDetailComponent.prototype.columns;
    /**
     * 预定详情模板
     * @type {?}
     */
    ReserveDetailComponent.prototype.detailTemplate;
    /**
     * 徽章械板
     * @type {?}
     */
    ReserveDetailComponent.prototype.badgeTemplate;
    /**
     * 预定信息字段配置
     * @type {?}
     */
    ReserveDetailComponent.prototype.fieldConfigs;
    /**
     * 预定地点信息
     * @type {?}
     */
    ReserveDetailComponent.prototype.placeInfo;
    /**
     * 预定地点字段配置
     * @type {?}
     */
    ReserveDetailComponent.prototype.placeFieldConfigs;
    /** @type {?} */
    ReserveDetailComponent.prototype.customCls;
    /** @type {?} */
    ReserveDetailComponent.prototype.showEditButton;
    /** @type {?} */
    ReserveDetailComponent.prototype.showDeleteButton;
    /** @type {?} */
    ReserveDetailComponent.prototype.showCloseButton;
    /** @type {?} */
    ReserveDetailComponent.prototype.toolbarButtons;
    /** @type {?} */
    ReserveDetailComponent.prototype.detailColumnWidth;
    /** @type {?} */
    ReserveDetailComponent.prototype.titleLength;
    /** @type {?} */
    ReserveDetailComponent.prototype.rooNameField;
    /**
     * @type {?}
     * @private
     */
    ReserveDetailComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ReserveDetailComponent.prototype.ser;
    /** @type {?} */
    ReserveDetailComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,