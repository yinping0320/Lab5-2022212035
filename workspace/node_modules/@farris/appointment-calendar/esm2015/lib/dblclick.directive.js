/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Directive, ElementRef, HostListener, Input, Output } from '@angular/core';
export class ItemDblClickDirective {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        this.dblclickHandler = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} event
     * @return {?}
     */
    ondblclick(event) {
        event.stopPropagation();
        this.dblclickHandler.emit({ item: this.data, $event: event });
    }
}
ItemDblClickDirective.decorators = [
    { type: Directive, args: [{ selector: '[item-dblclick]' },] }
];
/** @nocollapse */
ItemDblClickDirective.ctorParameters = () => [
    { type: ElementRef }
];
ItemDblClickDirective.propDecorators = {
    data: [{ type: Input, args: ['item-dblclick',] }],
    dblclickHandler: [{ type: Output }],
    ondblclick: [{ type: HostListener, args: ['dblclick', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    ItemDblClickDirective.prototype.data;
    /** @type {?} */
    ItemDblClickDirective.prototype.dblclickHandler;
    /** @type {?} */
    ItemDblClickDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGJsY2xpY2suZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9hcHBvaW50bWVudC1jYWxlbmRhci8iLCJzb3VyY2VzIjpbImxpYi9kYmxjbGljay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUlqRyxNQUFNLE9BQU8scUJBQXFCOzs7O0lBSzlCLFlBQW1CLEVBQWM7UUFBZCxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBRnZCLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUcvQyxDQUFDOzs7O0lBRUQsUUFBUSxLQUFJLENBQUM7Ozs7O0lBR2IsVUFBVSxDQUFDLEtBQVk7UUFDbkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDbEUsQ0FBQzs7O1lBZkosU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFOzs7O1lBSFIsVUFBVTs7O21CQU12QyxLQUFLLFNBQUMsZUFBZTs4QkFDckIsTUFBTTt5QkFPTixZQUFZLFNBQUMsVUFBVSxFQUFFLENBQUMsUUFBUSxDQUFDOzs7O0lBUnBDLHFDQUE2Qjs7SUFDN0IsZ0RBQStDOztJQUVuQyxtQ0FBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSG9zdExpc3RlbmVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2l0ZW0tZGJsY2xpY2tdJyB9KVxyXG5leHBvcnQgY2xhc3MgSXRlbURibENsaWNrRGlyZWN0aXZlIHtcclxuXHJcbiAgICBASW5wdXQoJ2l0ZW0tZGJsY2xpY2snKSBkYXRhO1xyXG4gICAgQE91dHB1dCgpIGRibGNsaWNrSGFuZGxlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZWw6IEVsZW1lbnRSZWYpIHtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHt9XHJcblxyXG4gICAgQEhvc3RMaXN0ZW5lcignZGJsY2xpY2snLCBbJyRldmVudCddKVxyXG4gICAgb25kYmxjbGljayhldmVudDogRXZlbnQpIHtcclxuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB0aGlzLmRibGNsaWNrSGFuZGxlci5lbWl0KHsgaXRlbTogdGhpcy5kYXRhLCAkZXZlbnQ6IGV2ZW50IH0pO1xyXG4gICAgfVxyXG5cclxufSJdfQ==