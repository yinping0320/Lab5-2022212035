/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Injector, Input, NgZone, Output, Renderer2, TemplateRef, ViewChild, ViewEncapsulation } from "@angular/core";
import { DateTimeHelperService } from "@farris/ui-common/date";
import { differenceInMinutes, isSameDay } from "date-fns";
import { AppointmentCalendarService } from "./appointment-calendar.service";
import { CommonUtils } from "@farris/ui-common";
import { ReserveDetailComponent } from "./views/detail-view.component";
import { LocaleService } from "@farris/ui-locale";
import { APPOINTMENT_CALENDAR_LOCALES } from "./appointment-locales";
import { flatten } from "lodash-es";
export class AppointmentCalendarComponent {
    /**
     * @param {?} injector
     * @param {?} cd
     * @param {?} ngZone
     * @param {?} render
     * @param {?} roomSer
     * @param {?} dateHlp
     * @param {?} elRef
     * @param {?} utils
     * @param {?} localeSer
     */
    constructor(injector, cd, ngZone, render, roomSer, dateHlp, elRef, utils, localeSer) {
        this.injector = injector;
        this.cd = cd;
        this.ngZone = ngZone;
        this.render = render;
        this.roomSer = roomSer;
        this.dateHlp = dateHlp;
        this.elRef = elRef;
        this.utils = utils;
        this.localeSer = localeSer;
        /**
         * 预定数据
         */
        this.reserveData = [];
        /**
         * 房间列表数据
         */
        this.placeItems = [];
        /**
         * 房间标识字段 默认 id
         */
        this.placeIdField = 'id';
        /**
         * 房间名称字段
         */
        this.placeNameField = 'name';
        /**
         * 预定地点全名称
         */
        this.placeFullNameField = '';
        /**
         * 预定时间字段
         */
        this.reserveInfoFields = {
            /**
             * 预订标识字段
             */
            idField: 'id',
            /**
             * 开始时间字段
             */
            startDate: 'start',
            /**
             * 结束时间字段
             */
            endDate: 'end',
            /**
             * 对应房间ID 字段
             */
            placeid: 'roomid',
            /**
             * 预订主题名称字段
             */
            title: 'title'
        };
        this.placeTitle = '名称';
        /**
         * 天视图行高， 默认 62px
         */
        this.rowHeight = 62;
        /**
         * 周视图行高，默认 85px
         */
        this.weekRowHeight = 85;
        /**
         * 周视图单元格宽度，默认 150px
         */
        this.weekCellWidth = 150;
        /**
         * 房间列宽度，默认 300px
         */
        this.placeNameWidth = 300;
        /**
         * 默认视图 day 日， week 周。 默认 day
         */
        this.viewType = 'day';
        /**
         * 日视图下开始时间
         */
        this.startTime = 7;
        /**
         * 选中预订信息ID
         */
        this.selectedId = '';
        /**
         * 详情卡片显示编辑按钮
         */
        this.showEditButton = true;
        /**
         * 详情卡片显示删除按钮
         */
        this.showDeleteButton = true;
        this.showCloseButton = true;
        /**
         * 详情卡片标题列宽度，默认 56px 显示为4个字
         */
        this.detailColumnWidth = 56;
        /**
         * 双击事件
         */
        this.itemDblClick = new EventEmitter();
        /**
         * 日视图，鼠标滑过空白单元格显示文本
         */
        this.reservationTitle = '预订';
        /**
         * 过滤事件
         */
        this.filterChange = new EventEmitter();
        /**
         * 选中事件
         */
        this.selectChange = new EventEmitter();
        /**
         * 卡片详情编辑事件
         */
        this.editHandler = new EventEmitter();
        /**
         * 卡片详情删除事件
         */
        this.removeHandler = new EventEmitter();
        /**
         * 清除选中项
         */
        this.clearSelected = new EventEmitter();
        /**
         * 日视图单元格点击事件
         */
        this.reservation = new EventEmitter();
        this.weekDays = [];
        this.groupData = [];
        this.currentDateRangeStr = '';
        this.currentDateStr = '';
        this.currentSelectItem = null;
        this.position = null;
        this.showDetail = false;
        this.detailCustomCls = null;
        this._CLICK_DELAY_ = 180;
        // 框架头高高度；
        this._frameHeaderHeight = 0;
        this.minWeekViewWidth = 0;
        this._currentScrollPos = { 'day': { x: null, y: 0 }, 'week': { x: null, y: 0 } };
        this.rowWidth = 2450;
        this.cardBtnClickSub = this.roomSer.cardBtnClick$.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        (e) => {
            this.detailEventHandlers(e);
        }));
        this.localeSer.setLocaleData(APPOINTMENT_CALENDAR_LOCALES);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.groupData = this.mergeDate();
        this.showEditButton = !!this.editHandler.observers.length;
        this.showDeleteButton = !!this.removeHandler.observers.length;
        this.minWeekViewWidth = (this.weekCellWidth || 150) * 7 + this.placeNameWidth;
        this.rowWidth += this.placeNameWidth;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.reserveData && !changes.reserveData.isFirstChange()) {
            this.dataChanged();
        }
        if (changes.placeItems && !changes.placeItems.isFirstChange()) {
            this.dataChanged();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.cardBtnClickSub) {
            this.cardBtnClickSub.unsubscribe();
            this.cardBtnClickSub = null;
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
    }
    /**
     * @param {?} data
     * @return {?}
     */
    loadReserveData(data) {
        this.reserveData = data;
        this.dataChanged();
        this.cd.detectChanges();
    }
    /**
     * @param {?} data
     * @return {?}
     */
    loadPlaceData(data) {
        this.placeItems = data;
        this.dataChanged();
        this.cd.detectChanges();
    }
    /**
     * @private
     * @return {?}
     */
    dataChanged() {
        this.groupData = this.mergeDate();
        if (this['CALENDAR_SCROLL_POSITION']) {
            clearTimeout(this['CALENDAR_SCROLL_POSITION']);
        }
        this['CALENDAR_SCROLL_POSITION'] = setTimeout((/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            const roomBodyEl = this.elRef.nativeElement.querySelector('.body');
            const { x, y } = this._currentScrollPos[this.viewType] || { x: null, y: null };
            if (roomBodyEl) {
                /** @type {?} */
                let left = x;
                if (this.viewType === 'day' && x === null) {
                    left = this.startTime * 100;
                }
                roomBodyEl.scrollLeft = left;
                roomBodyEl.scrollTop = y || 0;
                roomBodyEl.scrollTo(left, y || 0);
            }
        }), 100);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onViewTypeChanged($event) {
        const { viewType, weekDays, dateValue, place } = $event;
        this.viewType = viewType;
        this.weekDays = weekDays;
        if (this.viewType === 'day') {
            this.currentDateStr = dateValue;
        }
        else {
            this.currentDateRangeStr = dateValue;
        }
        this.dataChanged();
        this.filterChange.emit({ viewType, dateValue, place });
        this.cd.detectChanges();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onPlaceSelected($event) {
        // TODO: 房间切换后，客户端过滤房间列表
    }
    /**
     * @private
     * @param {?} reserves
     * @return {?}
     */
    getUsedCells(reserves) {
        if (reserves && reserves.length) {
            /** @type {?} */
            const startField = this.reserveInfoFields.startDate;
            /** @type {?} */
            const endField = this.reserveInfoFields.endDate;
            /** @type {?} */
            const cells = reserves.map((/**
             * @param {?} n
             * @return {?}
             */
            n => {
                /** @type {?} */
                const startValue = this.utils.getValue(startField, n.data);
                /** @type {?} */
                const _startTimes = this.getTimes(startValue);
                /** @type {?} */
                const endValue = this.utils.getValue(endField, n.data);
                /** @type {?} */
                const _endTimes = this.getTimes(endValue);
                /** @type {?} */
                const beginIndex = _startTimes.hour;
                /** @type {?} */
                let endIndex = _endTimes.hour - 1;
                // if (_endTimes.minute > 0) {
                //     endIndex++;
                // } else {
                //     endIndex--;
                // }
                /** @type {?} */
                var c = [];
                for (let i = beginIndex - 1; i < endIndex; i++) {
                    c.push(i + 1);
                }
                return c;
            }));
            return flatten(cells);
        }
    }
    /**
     * @private
     * @return {?}
     */
    mergeDate() {
        if (this.placeItems && this.placeItems.length) {
            if (this.viewType === 'day') {
                return this.placeItems.map((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => {
                    /** @type {?} */
                    const reserves = this.reserveData.filter((/**
                     * @param {?} d
                     * @return {?}
                     */
                    d => this.utils.getValue(this.reserveInfoFields.placeid, d) === this.utils.getValue(this.placeIdField, n) &&
                        isSameDay(new Date(this.utils.getValue(this.reserveInfoFields.startDate, d)), new Date(this.currentDateStr)))).map((/**
                     * @param {?} r
                     * @return {?}
                     */
                    r => {
                        return {
                            data: r,
                            id: r[this.reserveInfoFields.idField],
                            position: this.getReservePositionInfo(r),
                        };
                    }));
                    return {
                        id: n[this.placeIdField],
                        data: n,
                        reserves,
                        disableCells: this.getUsedCells(reserves)
                    };
                }));
            }
            else {
                return this.placeItems.map((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => {
                    return {
                        id: n[this.placeIdField],
                        data: n,
                        reserves: this.weekDays.map((/**
                         * @param {?} weekday
                         * @return {?}
                         */
                        (weekday) => {
                            return {
                                date: weekday,
                                items: this.reserveData.filter((/**
                                 * @param {?} d
                                 * @return {?}
                                 */
                                d => this.utils.getValue(this.reserveInfoFields.placeid, d) === this.utils.getValue(this.placeIdField, n) &&
                                    isSameDay(new Date(this.utils.getValue(this.reserveInfoFields.startDate, d)), weekday.date))).map((/**
                                 * @param {?} r
                                 * @return {?}
                                 */
                                r => {
                                    return {
                                        data: r,
                                        id: r[this.reserveInfoFields.idField],
                                    };
                                })).sort((/**
                                 * @param {?} a
                                 * @param {?} b
                                 * @return {?}
                                 */
                                (a, b) => {
                                    /** @type {?} */
                                    const r = this.dateHlp.differenceInMinutes(new Date(this.utils.getValue(this.reserveInfoFields.startDate, a.data)), new Date(this.utils.getValue(this.reserveInfoFields.endDate, b.data)));
                                    return r > 0 ? 1 : r < 0 ? -1 : 0;
                                }))
                            };
                        }))
                    };
                }));
            }
        }
        return [];
    }
    /**
     * @param {?} dateStr
     * @return {?}
     */
    getTimes(dateStr) {
        if (dateStr) {
            /** @type {?} */
            const _startDate = this.dateHlp.formatTo(dateStr, 'yyyy-MM-dd HH:mm:ss');
            if (_startDate) {
                /** @type {?} */
                const startDate = new Date(_startDate);
                /** @type {?} */
                const hour = startDate.getHours();
                /** @type {?} */
                const minute = startDate.getMinutes();
                return {
                    hour, minute, date: new Date(_startDate.split(' ')[0])
                };
            }
        }
        return null;
    }
    /**
     * @private
     * @param {?} reserveItem
     * @return {?}
     */
    getReservePositionInfo(reserveItem) {
        /** @type {?} */
        const startField = this.reserveInfoFields.startDate;
        /** @type {?} */
        const endField = this.reserveInfoFields.endDate;
        /** @type {?} */
        let left = 0;
        /** @type {?} */
        let width = 0;
        /** @type {?} */
        const startDateStr = reserveItem[startField];
        /** @type {?} */
        const endDateStr = reserveItem[endField];
        if (startDateStr) {
            /** @type {?} */
            const _startTimes = this.getTimes(startDateStr);
            if (_startTimes) {
                const { hour, minute } = _startTimes;
                left = (hour) * 100;
                if (minute) {
                    left += minute / 60 * 100;
                }
                if (endDateStr) {
                    /** @type {?} */
                    const minutes = differenceInMinutes(new Date(endDateStr), new Date(startDateStr));
                    width = minutes / 60 * 100;
                }
            }
        }
        return { left, width };
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onSelectChange($event) {
        this.selectedId = $event.item.id;
        this.currentSelectItem = { room: $event.room, data: $event.item.data };
        /** @type {?} */
        let tar = null;
        if (this.viewType === 'week') {
            tar = $event.$event.target.closest('li');
        }
        else {
            tar = $event.$event.target.closest('.item-content');
        }
        this.getPositionForDetailPanel(tar);
        if (this.detailCls) {
            this.detailCustomCls = this.detailCls($event.item);
        }
        this.showDetail = true;
        this.selectChange.emit($event);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onItemDblClick($event) {
        this.selectedId = $event.item.id;
        this.currentSelectItem = { room: $event.room, data: $event.item.data };
        this.itemDblClick.emit($event);
    }
    /**
     * @param {?} reserveId
     * @return {?}
     */
    selectItem(reserveId) {
        this.selectedId = reserveId;
        this.cd.detectChanges();
        if (this.selectedId === null || this.selectedId === undefined || this.selectedId === '') {
            this.clearSelect();
        }
    }
    /**
     * @return {?}
     */
    clearSelect() {
        this.selectedId = null;
        this.clearSelected.emit({ ins: this });
    }
    /**
     * @private
     * @return {?}
     */
    getFrameheaderHeight() {
        if (this._frameHeaderHeight) {
            return this._frameHeaderHeight;
        }
        /** @type {?} */
        const tabset = document.querySelector('.framework-tab-origin.gw-container-tabset.tab-container');
        /** @type {?} */
        let h = 0;
        if (tabset) {
            h += tabset.offsetHeight;
        }
        /** @type {?} */
        const frameHeader = document.querySelector('.gw-header--wrapper.framework-tool-origin');
        if (frameHeader) {
            h += frameHeader.offsetHeight;
        }
        this._frameHeaderHeight = h;
        return this._frameHeaderHeight;
    }
    /**
     * @private
     * @param {?} target
     * @return {?}
     */
    getPositionForDetailPanel(target) {
        const { left, top, right, bottom, width, height } = target.getBoundingClientRect();
        /** @type {?} */
        const panelSize = { width: 368, height: 436 };
        /** @type {?} */
        let _left = left;
        /** @type {?} */
        let _top = top;
        /** @type {?} */
        const _right = window.innerWidth - right;
        /** @type {?} */
        const _bottom = window.innerHeight - bottom;
        if (_left > _right) {
            if (_left > panelSize.width) {
                _left = _left - panelSize.width;
            }
            else {
                if (window.innerWidth - left > panelSize.width) {
                    _left = left;
                }
                else {
                    if (right > panelSize.width) {
                        _left = right - panelSize.width;
                    }
                    else {
                        _left = (window.innerWidth - panelSize.width) / 2;
                    }
                }
            }
        }
        else {
            if (_right > panelSize.width) {
                _left = right;
            }
            else {
                if (right > panelSize.width) {
                    _left = left;
                }
                else {
                    _left = (window.innerWidth - panelSize.width) / 2;
                }
            }
        }
        if (_top > _bottom) {
            if (_top > panelSize.height) {
                if (left > panelSize.width || _right > panelSize.width) {
                    if (window.innerHeight - _top < height + 40) {
                        _top = window.innerHeight - panelSize.height - 20;
                    }
                    else {
                        _top = top - panelSize.height + height + 40;
                        if (_top < this.getFrameheaderHeight()) {
                            _top = this.getFrameheaderHeight() + 10;
                        }
                    }
                }
                else {
                    _top = top - panelSize.height;
                }
            }
            else {
                _top = 10 + this.getFrameheaderHeight();
            }
        }
        else {
            if (_bottom > panelSize.height) {
                if (_right > panelSize.width || left > panelSize.width) {
                    _top = bottom - height - 40;
                }
                else {
                    _top = bottom;
                }
            }
            else {
                _top = 10 + this.getFrameheaderHeight();
            }
        }
        this.position = { left: _left, top: _top };
    }
    /**
     * @return {?}
     */
    closeDetailPanel() {
        this.roomSer.cardBtnClick$.next({ action: 'close' });
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onAddNew($event) {
        this.reservation.emit($event);
    }
    /**
     * @param {?} $event
     * @param {?} typ
     * @return {?}
     */
    onScrollChange($event, typ) {
        this._currentScrollPos[this.viewType] = Object.assign({}, $event, { type: typ });
    }
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    detailEventHandlers(e) {
        const { action, item, $event } = e;
        /** @type {?} */
        let p = null;
        if (item) {
            p = { item: { data: item, id: this.utils.getValue(this.reserveInfoFields.idField, item) } };
        }
        switch (action) {
            case 'edit':
                this.editHandler.emit(p);
                break;
            case 'del':
                this.removeHandler.emit(p);
                break;
            case 'close':
                this.showDetail = false;
                break;
        }
    }
}
AppointmentCalendarComponent.decorators = [
    { type: Component, args: [{
                selector: "farris-appointment-calendar",
                template: "<div class=\"rtv-container\" resizeObserver (resize)=\"closeDetailPanel()\" [class.rtv-container-week]=\"viewType === 'week'\">\r\n    <toolbar (placeChanged)=\"onPlaceSelected($event)\" (dateChanged)=\"onViewTypeChanged($event)\" [currentViewType]=\"viewType\" [places]=\"placeItems\"></toolbar>\r\n    <div class=\"main\" style=\"position:relative\" #viewContainer>\r\n        <!-- <div style=\"border-right: 0.5px solid #0e6ded;height: 100%;position: absolute;left: 230px;width: 1px;z-index: 99;\"></div> -->\r\n\r\n        <day-view [data]=\"groupData\" class=\"h-100 d-flex flex-column\" *ngIf=\"viewType === 'day'\" [customCls]=\"dayViewCls\" [reservationTitle]=\"reservationTitle\"\r\n         (itemClick)=\"onSelectChange($event)\" (itemDblClick)=\"onItemDblClick($event)\" [selectId]=\"selectedId\" (cellClick)=\"onAddNew($event)\" (scrollChange)=\"onScrollChange($event, 'day')\"></day-view>\r\n        <week-view [data]=\"groupData\" class=\"h-100 d-flex flex-column\" *ngIf=\"viewType === 'week'\" [weekDays]=\"weekDays\" (scrollChange)=\"onScrollChange($event, 'week')\"\r\n         (itemClick)=\"onSelectChange($event)\" (itemDblClick)=\"onItemDblClick($event)\" [width]=\"viewContainer.offsetWidth < minWeekViewWidth ? minWeekViewWidth: viewContainer.offsetWidth\" [selectId]=\"selectedId\"></week-view>\r\n    </div>\r\n</div>\r\n\r\n<reserve-detail *ngIf=\"showDetail\" #detailRef\r\n    [data]=\"currentSelectItem?.data\"\r\n    [position]=\"position\"\r\n    [detailTemplate]=\"detailTemplate\"\r\n    [columns]=\"detailColumns\"\r\n    [placeInfo]=\"currentSelectItem?.room\"\r\n    [placeFieldConfigs]=\"{ name: placeNameField, fullName: placeFullNameField, id: placeIdField }\"\r\n    [fieldConfigs]=\"reserveInfoFields\"\r\n    [badgeTemplate]=\"detailBadgeTemplate\"\r\n    [customCls]=\"detailCustomCls\"\r\n    [showCloseButton]=\"showCloseButton\"\r\n    [showDeleteButton]=\"showDeleteButton\"\r\n    [showEditButton]=\"showEditButton\"\r\n    [toolbarButtons]=\"detailToolbars\"\r\n    [detailColumnWidth]=\"detailColumnWidth\"></reserve-detail>",
                // styleUrls: ['./appointment-calendar.component.css'],
                providers: [
                    AppointmentCalendarService
                ],
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
AppointmentCalendarComponent.ctorParameters = () => [
    { type: Injector },
    { type: ChangeDetectorRef },
    { type: NgZone },
    { type: Renderer2 },
    { type: AppointmentCalendarService },
    { type: DateTimeHelperService },
    { type: ElementRef },
    { type: CommonUtils },
    { type: LocaleService }
];
AppointmentCalendarComponent.propDecorators = {
    reserveData: [{ type: Input }],
    placeItems: [{ type: Input }],
    placeIdField: [{ type: Input }],
    placeNameField: [{ type: Input }],
    placeFullNameField: [{ type: Input }],
    reserveInfoFields: [{ type: Input }],
    roomNameFormatter: [{ type: Input }],
    placeNameTemplate: [{ type: Input }],
    contentTemplate: [{ type: Input }],
    detailTemplate: [{ type: Input }],
    detailBadgeTemplate: [{ type: Input }],
    detailCls: [{ type: Input }],
    dayViewCls: [{ type: Input }],
    placeTitle: [{ type: Input }],
    rowHeight: [{ type: Input }],
    weekRowHeight: [{ type: Input }],
    weekCellWidth: [{ type: Input }],
    placeNameWidth: [{ type: Input }],
    viewType: [{ type: Input }],
    startTime: [{ type: Input }],
    selectedId: [{ type: Input }],
    detailColumns: [{ type: Input }],
    showEditButton: [{ type: Input }],
    showDeleteButton: [{ type: Input }],
    showCloseButton: [{ type: Input }],
    detailToolbars: [{ type: Input }],
    detailColumnWidth: [{ type: Input }],
    itemDblClick: [{ type: Output }],
    reservationTitle: [{ type: Input }],
    filterChange: [{ type: Output }],
    selectChange: [{ type: Output }],
    editHandler: [{ type: Output }],
    removeHandler: [{ type: Output }],
    clearSelected: [{ type: Output }],
    reservation: [{ type: Output }],
    detailRef: [{ type: ViewChild, args: ['detailRef',] }]
};
if (false) {
    /**
     * 预定数据
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.reserveData;
    /**
     * 房间列表数据
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.placeItems;
    /**
     * 房间标识字段 默认 id
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.placeIdField;
    /**
     * 房间名称字段
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.placeNameField;
    /**
     * 预定地点全名称
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.placeFullNameField;
    /**
     * 预定时间字段
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.reserveInfoFields;
    /**
     * 房间名称格式化
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.roomNameFormatter;
    /**
     * 房间名称自定义模板
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.placeNameTemplate;
    /**
     * 预定内容模板
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.contentTemplate;
    /**
     * 详情卡片模板
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.detailTemplate;
    /**
     * 详情卡片徽章模板
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.detailBadgeTemplate;
    /**
     * 详情卡片自定义css 类
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.detailCls;
    /**
     * 日视图自定义样式类
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.dayViewCls;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.placeTitle;
    /**
     * 天视图行高， 默认 62px
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.rowHeight;
    /**
     * 周视图行高，默认 85px
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.weekRowHeight;
    /**
     * 周视图单元格宽度，默认 150px
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.weekCellWidth;
    /**
     * 房间列宽度，默认 300px
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.placeNameWidth;
    /**
     * 默认视图 day 日， week 周。 默认 day
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.viewType;
    /**
     * 日视图下开始时间
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.startTime;
    /**
     * 选中预订信息ID
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.selectedId;
    /**
     * 详情卡片列信息
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.detailColumns;
    /**
     * 详情卡片显示编辑按钮
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.showEditButton;
    /**
     * 详情卡片显示删除按钮
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.showDeleteButton;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.showCloseButton;
    /**
     * 详情卡片按钮配置
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.detailToolbars;
    /**
     * 详情卡片标题列宽度，默认 56px 显示为4个字
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.detailColumnWidth;
    /**
     * 双击事件
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.itemDblClick;
    /**
     * 日视图，鼠标滑过空白单元格显示文本
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.reservationTitle;
    /**
     * 过滤事件
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.filterChange;
    /**
     * 选中事件
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.selectChange;
    /**
     * 卡片详情编辑事件
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.editHandler;
    /**
     * 卡片详情删除事件
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.removeHandler;
    /**
     * 清除选中项
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.clearSelected;
    /**
     * 日视图单元格点击事件
     * @type {?}
     */
    AppointmentCalendarComponent.prototype.reservation;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.detailRef;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.weekDays;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.groupData;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.currentDateRangeStr;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.currentDateStr;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.currentSelectItem;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.position;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.showDetail;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.detailCustomCls;
    /** @type {?} */
    AppointmentCalendarComponent.prototype._CLICK_DELAY_;
    /** @type {?} */
    AppointmentCalendarComponent.prototype._frameHeaderHeight;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.minWeekViewWidth;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype._currentScrollPos;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.rowWidth;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.cardBtnClickSub;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.ngZone;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.render;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.roomSer;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.dateHlp;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.elRef;
    /** @type {?} */
    AppointmentCalendarComponent.prototype.utils;
    /**
     * @type {?}
     * @private
     */
    AppointmentCalendarComponent.prototype.localeSer;
}
//# sourceMappingURL=data:application/json;base64,