import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, Injector, NgZone, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from "@angular/core";
import { DateTimeHelperService } from "@farris/ui-common/date";
import { CalendarViewType, AppointmentData, ViewTypeChangedParam, WeekDayItem, DetailColumn, DetailToolbarButton } from "./models/calenday.types";
import { AppointmentCalendarService } from "./appointment-calendar.service";
import { CommonUtils } from "@farris/ui-common";
import { ReserveDetailComponent } from "./views/detail-view.component";
import { LocaleService } from "@farris/ui-locale";
export declare class AppointmentCalendarComponent implements OnInit, AfterViewInit, OnDestroy, OnChanges {
    private injector;
    private cd;
    private ngZone;
    private render;
    roomSer: AppointmentCalendarService;
    private dateHlp;
    private elRef;
    utils: CommonUtils;
    private localeSer;
    /** 预定数据 */
    reserveData: any[];
    /** 房间列表数据 */
    placeItems: any[];
    /** 房间标识字段 默认 id */
    placeIdField: string;
    /** 房间名称字段 */
    placeNameField: string;
    /** 预定地点全名称 */
    placeFullNameField: string;
    /** 预定时间字段 */
    reserveInfoFields: {
        /** 预订标识字段 */
        idField: string;
        /** 开始时间字段 */
        startDate: string;
        /** 结束时间字段 */
        endDate: string;
        /** 对应房间ID 字段 */
        placeid: string;
        /** 预订主题名称字段 */
        title: string;
    };
    /** 房间名称格式化 */
    roomNameFormatter: (item: any) => string;
    /** 房间名称自定义模板 */
    placeNameTemplate: TemplateRef<any>;
    /** 预定内容模板 */
    contentTemplate: TemplateRef<any>;
    /** 详情卡片模板 */
    detailTemplate: TemplateRef<any>;
    /** 详情卡片徽章模板 */
    detailBadgeTemplate: TemplateRef<any>;
    /** 详情卡片自定义css 类 */
    detailCls: ({ item }: {
        item: any;
    }) => {
        cls: {
            [className: string]: boolean;
        };
        styles: {
            [key: string]: any;
        };
    };
    /** 日视图自定义样式类 */
    dayViewCls: ({ item }: {
        item: any;
    }) => {
        cls: {
            [className: string]: boolean;
        };
        styles: {
            [key: string]: any;
        };
    };
    placeTitle: string;
    /** 天视图行高， 默认 62px */
    rowHeight: number;
    /** 周视图行高，默认 85px */
    weekRowHeight: number;
    /** 周视图单元格宽度，默认 150px */
    weekCellWidth: number;
    /** 房间列宽度，默认 300px */
    placeNameWidth: number;
    /** 默认视图 day 日， week 周。 默认 day */
    viewType: CalendarViewType;
    /** 日视图下开始时间 */
    startTime: number;
    /** 选中预订信息ID */
    selectedId: string;
    /** 详情卡片列信息 */
    detailColumns: Array<DetailColumn>;
    /** 详情卡片显示编辑按钮 */
    showEditButton: boolean;
    /** 详情卡片显示删除按钮 */
    showDeleteButton: boolean;
    showCloseButton: boolean;
    /** 详情卡片按钮配置 */
    detailToolbars: Array<DetailToolbarButton>;
    /** 详情卡片标题列宽度，默认 56px 显示为4个字 */
    detailColumnWidth: number;
    /** 双击事件 */
    itemDblClick: EventEmitter<{}>;
    /** 日视图，鼠标滑过空白单元格显示文本 */
    reservationTitle: string;
    /** 过滤事件 */
    filterChange: EventEmitter<{}>;
    /** 选中事件 */
    selectChange: EventEmitter<{}>;
    /** 卡片详情编辑事件 */
    editHandler: EventEmitter<{}>;
    /** 卡片详情删除事件 */
    removeHandler: EventEmitter<{}>;
    /** 清除选中项 */
    clearSelected: EventEmitter<{}>;
    /** 日视图单元格点击事件 */
    reservation: EventEmitter<{}>;
    detailRef: ReserveDetailComponent;
    weekDays: Array<WeekDayItem>;
    groupData: AppointmentData[];
    private currentDateRangeStr;
    private currentDateStr;
    currentSelectItem: {
        room: any;
        data: any;
    };
    position: any;
    showDetail: boolean;
    detailCustomCls: {
        [clsName: string]: any;
    };
    _CLICK_DELAY_: number;
    _frameHeaderHeight: number;
    minWeekViewWidth: number;
    private _currentScrollPos;
    rowWidth: number;
    private cardBtnClickSub;
    constructor(injector: Injector, cd: ChangeDetectorRef, ngZone: NgZone, render: Renderer2, roomSer: AppointmentCalendarService, dateHlp: DateTimeHelperService, elRef: ElementRef, utils: CommonUtils, localeSer: LocaleService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    loadReserveData(data: []): void;
    loadPlaceData(data: []): void;
    private dataChanged;
    onViewTypeChanged($event: ViewTypeChangedParam): void;
    onPlaceSelected($event: ViewTypeChangedParam): void;
    private getUsedCells;
    private mergeDate;
    getTimes(dateStr: string): {
        hour: number;
        minute: number;
        date: Date;
    };
    private getReservePositionInfo;
    onSelectChange($event: any): void;
    onItemDblClick($event: any): void;
    selectItem(reserveId: any): void;
    clearSelect(): void;
    private getFrameheaderHeight;
    private getPositionForDetailPanel;
    closeDetailPanel(): void;
    onAddNew($event: any): void;
    onScrollChange($event: any, typ: any): void;
    private detailEventHandlers;
}
