/**
 * @fileoverview added by tsickle
 * Generated from: lib/session/bef_session_manager.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from "@angular/core";
import { of } from "rxjs";
export class BefSessionManager {
    /**
     * @param {?} appContext
     * @param {?} sessionService
     * @return {?}
     */
    static getSessionId(appContext, sessionService) {
        /** @type {?} */
        const appId = appContext.ApplicationId;
        /** @type {?} */
        const beBaseUri = sessionService.beBaseUri;
        /** @type {?} */
        const key = `${appId}_${beBaseUri}`;
        /** @type {?} */
        const createSessionIsInvoked = this.createSessionHistory.includes(key);
        if (createSessionIsInvoked) {
            return of(null);
        }
        else {
            this.createSessionHistory.push(key);
            return sessionService.getBeSessionId();
        }
    }
}
BefSessionManager.createSessionHistory = [];
BefSessionManager.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    BefSessionManager.createSessionHistory;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX3Nlc3Npb25fbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvYmVmLyIsInNvdXJjZXMiOlsibGliL3Nlc3Npb24vYmVmX3Nlc3Npb25fbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUl0QyxNQUFNLE9BQU8saUJBQWlCOzs7Ozs7SUFFckIsTUFBTSxDQUFDLFlBQVksQ0FBQyxVQUFzQixFQUFFLGNBQWlDOztjQUM1RSxLQUFLLEdBQUcsVUFBVSxDQUFDLGFBQWE7O2NBQ2hDLFNBQVMsR0FBRyxjQUFjLENBQUMsU0FBUzs7Y0FDcEMsR0FBRyxHQUFHLEdBQUcsS0FBSyxJQUFJLFNBQVMsRUFBRTs7Y0FDN0Isc0JBQXNCLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUM7UUFDdEUsSUFBSSxzQkFBc0IsRUFBRTtZQUMxQixPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNqQjthQUFNO1lBQ0wsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNwQyxPQUFPLGNBQWMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN4QztJQUNILENBQUM7O0FBWmMsc0NBQW9CLEdBQUcsRUFBRSxDQUFDOztZQUYxQyxVQUFVOzs7Ozs7O0lBRVQsdUNBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IEFwcENvbnRleHQgfSBmcm9tIFwiQGZhcnJpcy9kZXZraXRcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tIFwicnhqc1wiO1xyXG5pbXBvcnQgeyBCZWZTZXNzaW9uU2VydmljZSB9IGZyb20gXCIuL2JlZl9zZXNzaW9uX3NlcnZpY2VcIjtcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEJlZlNlc3Npb25NYW5hZ2VyIHtcclxuICBwcml2YXRlIHN0YXRpYyBjcmVhdGVTZXNzaW9uSGlzdG9yeSA9IFtdO1xyXG4gIHB1YmxpYyBzdGF0aWMgZ2V0U2Vzc2lvbklkKGFwcENvbnRleHQ6IEFwcENvbnRleHQsIHNlc3Npb25TZXJ2aWNlOiBCZWZTZXNzaW9uU2VydmljZSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCBhcHBJZCA9IGFwcENvbnRleHQuQXBwbGljYXRpb25JZDtcclxuICAgIGNvbnN0IGJlQmFzZVVyaSA9IHNlc3Npb25TZXJ2aWNlLmJlQmFzZVVyaTtcclxuICAgIGNvbnN0IGtleSA9IGAke2FwcElkfV8ke2JlQmFzZVVyaX1gO1xyXG4gICAgY29uc3QgY3JlYXRlU2Vzc2lvbklzSW52b2tlZCA9IHRoaXMuY3JlYXRlU2Vzc2lvbkhpc3RvcnkuaW5jbHVkZXMoa2V5KTtcclxuICAgIGlmIChjcmVhdGVTZXNzaW9uSXNJbnZva2VkKSB7XHJcbiAgICAgIHJldHVybiBvZihudWxsKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuY3JlYXRlU2Vzc2lvbkhpc3RvcnkucHVzaChrZXkpO1xyXG4gICAgICByZXR1cm4gc2Vzc2lvblNlcnZpY2UuZ2V0QmVTZXNzaW9uSWQoKTtcclxuICAgIH1cclxuICB9XHJcbn0iXX0=