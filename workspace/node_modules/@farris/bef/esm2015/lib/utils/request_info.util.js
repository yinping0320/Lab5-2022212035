/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/request_info.util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class RequestInfoUtil {
    /**
     * 检查是否有requestInfo
     * @param {?} options
     * @return {?}
     */
    static hasRequestInfo(options) {
        if (!options || !options.body) {
            return false;
        }
        /** @type {?} */
        const body = options.body;
        // 有多个参数的时候
        if (body.requestInfo && body.requestInfo.dataChange) {
            return true;
        }
        if (body.dataChange) {
            return true;
        }
        return false;
    }
    /**
     * 检查是否有RquestInfo
     * \@summary
     * 产品部依赖了请求时传递RequestInfo，返回时直接取到returnValue的特性。
     * @param {?} options
     * @return {?}
     */
    static hasRequestInfoWithR(options) {
        if (!options || !options.body) {
            return false;
        }
        /** @type {?} */
        const body = options.body;
        // 有多个参数的时候
        if (body.RequestInfo && body.RequestInfo.dataChange) {
            return true;
        }
        if (body.dataChange) {
            return true;
        }
        return false;
    }
    /**
     * 构造RequestInfo
     * @param {?} repository
     * @return {?}
     */
    static buildRequestInfo(repository) {
        /** @type {?} */
        const requestInfo = {
            dataChange: repository.entityManager.buildAllEntityChangeDetails(),
            variableChange: repository.variableManager.buildChangeDetail()
        };
        return requestInfo;
    }
    /**
     * 构造带requestInfo的body（仅适用于body中有多个参数的情况）
     * \@summary
     * 一个参数时body=requestInfo，不适用该方法。
     * @param {?} body
     * @param {?} repository
     * @return {?}
     */
    static buildBodyWithRequestInfo(body, repository) {
        if (body.RequestInfo || body.requestInfo) {
            return body;
        }
        /** @type {?} */
        const requestInfo = this.buildRequestInfo(repository);
        /** @type {?} */
        const bodyWithRequestInfo = Object.assign({}, body, { requestInfo: requestInfo });
        return bodyWithRequestInfo;
    }
    /**
     * @param {?} options
     * @return {?}
     */
    static getRequestInfo(options) {
        if (!options || !options.body) {
            return null;
        }
        /** @type {?} */
        const body = options.body;
        // 有多个参数的时候
        if (body.requestInfo) {
            return body.requestInfo;
        }
        if (body.dataChange || body.variableChange) {
            return body;
        }
        return null;
    }
}
export { RequestInfoUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVxdWVzdF9pbmZvLnV0aWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2JlZi8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9yZXF1ZXN0X2luZm8udXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUlBLE1BQU0sZUFBZTs7Ozs7O0lBS1osTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFZO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFO1lBQzdCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7O2NBQ0ssSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJO1FBRXpCLFdBQVc7UUFDWCxJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUU7WUFDbkQsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOzs7Ozs7OztJQU9NLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxPQUFZO1FBQzVDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFO1lBQzdCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7O2NBQ0ssSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJO1FBRXpCLFdBQVc7UUFDWCxJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUU7WUFDbkQsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOzs7Ozs7SUFLTSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsVUFBaUM7O2NBQ3hELFdBQVcsR0FBZ0I7WUFDL0IsVUFBVSxFQUFFLFVBQVUsQ0FBQyxhQUFhLENBQUMsMkJBQTJCLEVBQUU7WUFDbEUsY0FBYyxFQUFFLFVBQVUsQ0FBQyxlQUFlLENBQUMsaUJBQWlCLEVBQUU7U0FDL0Q7UUFDRCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDOzs7Ozs7Ozs7SUFPTSxNQUFNLENBQUMsd0JBQXdCLENBQUMsSUFBUyxFQUFFLFVBQWlDO1FBQ2pGLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3hDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7O2NBQ0ssV0FBVyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLENBQUM7O2NBQy9DLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsQ0FBQztRQUNqRixPQUFPLG1CQUFtQixDQUFDO0lBQzdCLENBQUM7Ozs7O0lBQ00sTUFBTSxDQUFDLGNBQWMsQ0FBQyxPQUFZO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFO1lBQzdCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7O2NBQ0ssSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJO1FBRXpCLFdBQVc7UUFDWCxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1NBQ3pCO1FBQ0QsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDMUMsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGO0FBRUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5IH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnO1xyXG5pbXBvcnQgeyBCZWZSZXBvc2l0b3J5IH0gZnJvbSAnLi4vYmVmX3JlcG9zaXRvcnknO1xyXG5pbXBvcnQgeyBSZXF1ZXN0SW5mbyB9IGZyb20gJy4uL3R5cGVzJztcclxuXHJcbmNsYXNzIFJlcXVlc3RJbmZvVXRpbCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOajgOafpeaYr+WQpuaciXJlcXVlc3RJbmZvXHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBoYXNSZXF1ZXN0SW5mbyhvcHRpb25zOiBhbnkpOiBib29sZWFuIHtcclxuICAgIGlmICghb3B0aW9ucyB8fCAhb3B0aW9ucy5ib2R5KSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIGNvbnN0IGJvZHkgPSBvcHRpb25zLmJvZHk7XHJcblxyXG4gICAgLy8g5pyJ5aSa5Liq5Y+C5pWw55qE5pe25YCZXHJcbiAgICBpZiAoYm9keS5yZXF1ZXN0SW5mbyAmJiBib2R5LnJlcXVlc3RJbmZvLmRhdGFDaGFuZ2UpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBpZiAoYm9keS5kYXRhQ2hhbmdlKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5qOA5p+l5piv5ZCm5pyJUnF1ZXN0SW5mb1xyXG4gICAqIEBzdW1tYXJ5XHJcbiAgICog5Lqn5ZOB6YOo5L6d6LWW5LqG6K+35rGC5pe25Lyg6YCSUmVxdWVzdEluZm/vvIzov5Tlm57ml7bnm7TmjqXlj5bliLByZXR1cm5WYWx1ZeeahOeJueaAp+OAglxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgaGFzUmVxdWVzdEluZm9XaXRoUihvcHRpb25zOiBhbnkpOiBib29sZWFuIHtcclxuICAgIGlmICghb3B0aW9ucyB8fCAhb3B0aW9ucy5ib2R5KSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIGNvbnN0IGJvZHkgPSBvcHRpb25zLmJvZHk7XHJcblxyXG4gICAgLy8g5pyJ5aSa5Liq5Y+C5pWw55qE5pe25YCZXHJcbiAgICBpZiAoYm9keS5SZXF1ZXN0SW5mbyAmJiBib2R5LlJlcXVlc3RJbmZvLmRhdGFDaGFuZ2UpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBpZiAoYm9keS5kYXRhQ2hhbmdlKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCgUmVxdWVzdEluZm9cclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIGJ1aWxkUmVxdWVzdEluZm8ocmVwb3NpdG9yeTogQmVmUmVwb3NpdG9yeTxFbnRpdHk+KTogUmVxdWVzdEluZm8ge1xyXG4gICAgY29uc3QgcmVxdWVzdEluZm86IFJlcXVlc3RJbmZvID0ge1xyXG4gICAgICBkYXRhQ2hhbmdlOiByZXBvc2l0b3J5LmVudGl0eU1hbmFnZXIuYnVpbGRBbGxFbnRpdHlDaGFuZ2VEZXRhaWxzKCksXHJcbiAgICAgIHZhcmlhYmxlQ2hhbmdlOiByZXBvc2l0b3J5LnZhcmlhYmxlTWFuYWdlci5idWlsZENoYW5nZURldGFpbCgpXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHJlcXVlc3RJbmZvO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5bimcmVxdWVzdEluZm/nmoRib2R577yI5LuF6YCC55So5LqOYm9keeS4reacieWkmuS4quWPguaVsOeahOaDheWGte+8iVxyXG4gICAqIEBzdW1tYXJ5XHJcbiAgICog5LiA5Liq5Y+C5pWw5pe2Ym9keT1yZXF1ZXN0SW5mb++8jOS4jemAgueUqOivpeaWueazleOAglxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgYnVpbGRCb2R5V2l0aFJlcXVlc3RJbmZvKGJvZHk6IGFueSwgcmVwb3NpdG9yeTogQmVmUmVwb3NpdG9yeTxFbnRpdHk+KTogYW55IHtcclxuICAgIGlmIChib2R5LlJlcXVlc3RJbmZvIHx8IGJvZHkucmVxdWVzdEluZm8pIHtcclxuICAgICAgcmV0dXJuIGJvZHk7XHJcbiAgICB9XHJcbiAgICBjb25zdCByZXF1ZXN0SW5mbyA9IHRoaXMuYnVpbGRSZXF1ZXN0SW5mbyhyZXBvc2l0b3J5KTtcclxuICAgIGNvbnN0IGJvZHlXaXRoUmVxdWVzdEluZm8gPSBPYmplY3QuYXNzaWduKHt9LCBib2R5LCB7IHJlcXVlc3RJbmZvOiByZXF1ZXN0SW5mbyB9KTtcclxuICAgIHJldHVybiBib2R5V2l0aFJlcXVlc3RJbmZvO1xyXG4gIH1cclxuICBwdWJsaWMgc3RhdGljIGdldFJlcXVlc3RJbmZvKG9wdGlvbnM6IGFueSkge1xyXG4gICAgaWYgKCFvcHRpb25zIHx8ICFvcHRpb25zLmJvZHkpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICBjb25zdCBib2R5ID0gb3B0aW9ucy5ib2R5O1xyXG5cclxuICAgIC8vIOacieWkmuS4quWPguaVsOeahOaXtuWAmVxyXG4gICAgaWYgKGJvZHkucmVxdWVzdEluZm8pIHtcclxuICAgICAgcmV0dXJuIGJvZHkucmVxdWVzdEluZm87XHJcbiAgICB9XHJcbiAgICBpZiAoYm9keS5kYXRhQ2hhbmdlIHx8IGJvZHkudmFyaWFibGVDaGFuZ2UpIHtcclxuICAgICAgcmV0dXJuIGJvZHk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IFJlcXVlc3RJbmZvVXRpbCB9O1xyXG4iXX0=