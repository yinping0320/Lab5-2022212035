/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/response_info.util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ResponseInfoUtil {
    /**
     * 将ResponseInfo转换为老接口的数据返回格式
     * @param {?} result
     * @return {?}
     */
    static unWrapResponseInfo(result) {
        // 兼容cancel没有返回值的情况
        if (!result) {
            return result;
        }
        // 没有returnValue的情况下，兼容query取数的的格式
        if (result.hasOwnProperty('returnValue') === false) {
            if (result.hasOwnProperty('result') && result.hasOwnProperty('pagination')) {
                // 兼容返回带分页的列表数据
                return result.result;
            }
            return result;
        }
        // 其他：返回RequestInfo.returnValue的情况
        /** @type {?} */
        const returnValue = result.returnValue;
        if (returnValue && returnValue.hasOwnProperty('result') && returnValue.hasOwnProperty('pagination')) {
            // 兼容返回带分页的列表数据
            return returnValue.result;
        }
        return result.returnValue;
    }
    /**
     * @param {?} response
     * @return {?}
     */
    static isReported401Error(response) {
        return response.status === 401;
    }
    /**
     * 解析后端消息
     * @param {?} result result
     * @return {?}
     */
    static parseBackEndMessage(result) {
        if (result && result.message && Array.isArray(result.message) && result.message.length > 0) {
            return result.message;
        }
        return null;
    }
    /**
     * 解析后端错误消息
     * @param {?} e
     * @return {?}
     */
    static parseBackEndError(e) {
        /** @type {?} */
        const error = e && e.error;
        if (error && error.hasOwnProperty('extensionMessage') && error.extensionMessage && error.extensionMessage.hasOwnProperty('UIMsg') && error.extensionMessage.UIMsg && error.extensionMessage.UIMsg.length > 0) {
            return JSON.parse(error.extensionMessage.UIMsg);
        }
        return null;
    }
}
export { ResponseInfoUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2VfaW5mby51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9iZWYvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvcmVzcG9uc2VfaW5mby51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsTUFBTSxnQkFBZ0I7Ozs7OztJQUtiLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxNQUFXO1FBRTFDLG1CQUFtQjtRQUNuQixJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxNQUFNLENBQUM7U0FDZjtRQUVELGtDQUFrQztRQUNsQyxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLEtBQUssS0FBSyxFQUFFO1lBQ2xELElBQUksTUFBTSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxFQUFFO2dCQUUxRSxlQUFlO2dCQUNmLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQzthQUN0QjtZQUNELE9BQU8sTUFBTSxDQUFDO1NBQ2Y7OztjQUdLLFdBQVcsR0FBRyxNQUFNLENBQUMsV0FBVztRQUN0QyxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUU7WUFFbkcsZUFBZTtZQUNmLE9BQU8sV0FBVyxDQUFDLE1BQU0sQ0FBQztTQUMzQjtRQUNELE9BQU8sTUFBTSxDQUFDLFdBQVcsQ0FBQztJQUU1QixDQUFDOzs7OztJQUVNLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxRQUEwQjtRQUN6RCxPQUFPLFFBQVEsQ0FBQyxNQUFNLEtBQUssR0FBRyxDQUFDO0lBQ2pDLENBQUM7Ozs7OztJQUtNLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxNQUFXO1FBQzNDLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzFGLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQztTQUN2QjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7Ozs7O0lBS00sTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQU07O2NBQzlCLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUs7UUFDMUIsSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEtBQUssQ0FBQyxnQkFBZ0IsSUFBSSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzVNLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDakQ7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRjtBQUVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cEVycm9yUmVzcG9uc2UsIEh0dHBIZWFkZXJSZXNwb25zZSwgSHR0cFJlc3BvbnNlLCBIdHRwUmVzcG9uc2VCYXNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5cclxuY2xhc3MgUmVzcG9uc2VJbmZvVXRpbCB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOWwhlJlc3BvbnNlSW5mb+i9rOaNouS4uuiAgeaOpeWPo+eahOaVsOaNrui/lOWbnuagvOW8j1xyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgdW5XcmFwUmVzcG9uc2VJbmZvKHJlc3VsdDogYW55KSB7XHJcblxyXG4gICAgLy8g5YW85a65Y2FuY2Vs5rKh5pyJ6L+U5Zue5YC855qE5oOF5Ya1XHJcbiAgICBpZiAoIXJlc3VsdCkge1xyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOayoeaciXJldHVyblZhbHVl55qE5oOF5Ya15LiL77yM5YW85a65cXVlcnnlj5bmlbDnmoTnmoTmoLzlvI9cclxuICAgIGlmIChyZXN1bHQuaGFzT3duUHJvcGVydHkoJ3JldHVyblZhbHVlJykgPT09IGZhbHNlKSB7XHJcbiAgICAgIGlmIChyZXN1bHQuaGFzT3duUHJvcGVydHkoJ3Jlc3VsdCcpICYmIHJlc3VsdC5oYXNPd25Qcm9wZXJ0eSgncGFnaW5hdGlvbicpKSB7XHJcblxyXG4gICAgICAgIC8vIOWFvOWuuei/lOWbnuW4puWIhumhteeahOWIl+ihqOaVsOaNrlxyXG4gICAgICAgIHJldHVybiByZXN1bHQucmVzdWx0O1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5YW25LuW77ya6L+U5ZueUmVxdWVzdEluZm8ucmV0dXJuVmFsdWXnmoTmg4XlhrVcclxuICAgIGNvbnN0IHJldHVyblZhbHVlID0gcmVzdWx0LnJldHVyblZhbHVlO1xyXG4gICAgaWYgKHJldHVyblZhbHVlICYmIHJldHVyblZhbHVlLmhhc093blByb3BlcnR5KCdyZXN1bHQnKSAmJiByZXR1cm5WYWx1ZS5oYXNPd25Qcm9wZXJ0eSgncGFnaW5hdGlvbicpKSB7XHJcblxyXG4gICAgICAvLyDlhbzlrrnov5Tlm57luKbliIbpobXnmoTliJfooajmlbDmja5cclxuICAgICAgcmV0dXJuIHJldHVyblZhbHVlLnJlc3VsdDtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQucmV0dXJuVmFsdWU7XHJcblxyXG4gIH1cclxuXHJcbiAgcHVibGljIHN0YXRpYyBpc1JlcG9ydGVkNDAxRXJyb3IocmVzcG9uc2U6IEh0dHBSZXNwb25zZUJhc2UpIHtcclxuICAgIHJldHVybiByZXNwb25zZS5zdGF0dXMgPT09IDQwMTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog6Kej5p6Q5ZCO56uv5raI5oGvXHJcbiAgICogQHBhcmFtIHJlc3VsdCByZXN1bHRcclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIHBhcnNlQmFja0VuZE1lc3NhZ2UocmVzdWx0OiBhbnkpIHtcclxuICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0Lm1lc3NhZ2UgJiYgQXJyYXkuaXNBcnJheShyZXN1bHQubWVzc2FnZSkgJiYgcmVzdWx0Lm1lc3NhZ2UubGVuZ3RoID4gMCkge1xyXG4gICAgICByZXR1cm4gcmVzdWx0Lm1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog6Kej5p6Q5ZCO56uv6ZSZ6K+v5raI5oGvXHJcbiAgICogQHBhcmFtIGVycm9yIGVycm9yXHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBwYXJzZUJhY2tFbmRFcnJvcihlOiBhbnkpIHtcclxuICAgIGNvbnN0IGVycm9yID0gZSAmJiBlLmVycm9yO1xyXG4gICAgaWYgKGVycm9yICYmIGVycm9yLmhhc093blByb3BlcnR5KCdleHRlbnNpb25NZXNzYWdlJykgJiYgZXJyb3IuZXh0ZW5zaW9uTWVzc2FnZSAmJiBlcnJvci5leHRlbnNpb25NZXNzYWdlLmhhc093blByb3BlcnR5KCdVSU1zZycpICYmIGVycm9yLmV4dGVuc2lvbk1lc3NhZ2UuVUlNc2cgJiYgZXJyb3IuZXh0ZW5zaW9uTWVzc2FnZS5VSU1zZy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKGVycm9yLmV4dGVuc2lvbk1lc3NhZ2UuVUlNc2cpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBSZXNwb25zZUluZm9VdGlsIH07XHJcbiJdfQ==