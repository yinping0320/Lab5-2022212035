/**
 * @fileoverview added by tsickle
 * Generated from: lib/bef_combo.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Repository } from '@farris/devkit';
import { HttpHeaders } from '@angular/common/http';
export class DefaultComboHttpService {
    /**
     * @param {?} repository
     */
    constructor(repository) {
        this.befRest = (/** @type {?} */ (repository));
    }
    /**
     * @param {?} url
     * @param {?=} params
     * @param {?=} method
     * @return {?}
     */
    getData(url, params = {}, method = 'GET') {
        /** @type {?} */
        const headers = new HttpHeaders({ 'content-type': 'application/json' })
        // return this.befRest.restService.invoke(url, method, params, { headers });
        ;
        // return this.befRest.restService.invoke(url, method, params, { headers });
        if (method.toLowerCase() !== 'get') {
            return this.befRest.restService.invoke(url, method, null, { headers, body: params });
        }
        else {
            return this.befRest.restService.invoke(url, method, params, { headers });
        }
    }
}
DefaultComboHttpService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
DefaultComboHttpService.ctorParameters = () => [
    { type: Repository }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    DefaultComboHttpService.prototype.befRest;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX2NvbWJvLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2JlZi8iLCJzb3VyY2VzIjpbImxpYi9iZWZfY29tYm8uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTVDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUduRCxNQUFNLE9BQU8sdUJBQXVCOzs7O0lBR2xDLFlBQVksVUFBMkI7UUFDckMsSUFBSSxDQUFDLE9BQU8sR0FBRyxtQkFBQSxVQUFVLEVBQXNCLENBQUM7SUFDbEQsQ0FBQzs7Ozs7OztJQUNELE9BQU8sQ0FBQyxHQUFXLEVBQUUsTUFBTSxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsS0FBSzs7Y0FDeEMsT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFLENBQUM7UUFDdkUsNEVBQTRFOztRQUE1RSw0RUFBNEU7UUFDNUUsSUFBSSxNQUFNLENBQUMsV0FBVyxFQUFFLEtBQUssS0FBSyxFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO1NBQ3RGO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7U0FDMUU7SUFDSCxDQUFDOzs7WUFmRixVQUFVOzs7O1lBSkYsVUFBVTs7Ozs7OztJQU1qQiwwQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQ29tYm9IdHRwU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tYm8tbGlzdCc7XHJcbmltcG9ydCB7IFJlcG9zaXRvcnkgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcbmltcG9ydCB7IEJlZlJlcG9zaXRvcnkgfSBmcm9tICcuL2JlZl9yZXBvc2l0b3J5JztcclxuaW1wb3J0IHsgSHR0cEhlYWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEZWZhdWx0Q29tYm9IdHRwU2VydmljZSBpbXBsZW1lbnRzIENvbWJvSHR0cFNlcnZpY2Uge1xyXG4gIHByaXZhdGUgYmVmUmVzdDogQmVmUmVwb3NpdG9yeTxhbnk+O1xyXG5cclxuICBjb25zdHJ1Y3RvcihyZXBvc2l0b3J5OiBSZXBvc2l0b3J5PGFueT4pIHtcclxuICAgIHRoaXMuYmVmUmVzdCA9IHJlcG9zaXRvcnkgYXMgQmVmUmVwb3NpdG9yeTxhbnk+O1xyXG4gIH1cclxuICBnZXREYXRhKHVybDogc3RyaW5nLCBwYXJhbXMgPSB7fSwgbWV0aG9kID0gJ0dFVCcpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgY29uc3QgaGVhZGVycyA9IG5ldyBIdHRwSGVhZGVycyh7ICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSlcclxuICAgIC8vIHJldHVybiB0aGlzLmJlZlJlc3QucmVzdFNlcnZpY2UuaW52b2tlKHVybCwgbWV0aG9kLCBwYXJhbXMsIHsgaGVhZGVycyB9KTtcclxuICAgIGlmIChtZXRob2QudG9Mb3dlckNhc2UoKSAhPT0gJ2dldCcpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuYmVmUmVzdC5yZXN0U2VydmljZS5pbnZva2UodXJsLCBtZXRob2QsIG51bGwsIHsgaGVhZGVycywgYm9keTogcGFyYW1zIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHRoaXMuYmVmUmVzdC5yZXN0U2VydmljZS5pbnZva2UodXJsLCBtZXRob2QsIHBhcmFtcywgeyBoZWFkZXJzIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=