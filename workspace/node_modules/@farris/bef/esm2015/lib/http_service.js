/**
 * @fileoverview added by tsickle
 * Generated from: lib/http_service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
// tslint:disable: no-string-literal disable: max-line-length
export class HttpService {
    /**
     * @param {?} defaultHttpClient
     */
    constructor(defaultHttpClient) {
        this.defaultHttpClient = defaultHttpClient;
        this.httpClient = defaultHttpClient;
        this.rtf = this.getService();
    }
    /**
     * 遍历获取rtf服务
     * @private
     * @return {?}
     */
    getService() {
        /** @type {?} */
        let env = window;
        while (!env['gspframeworkService'] && env !== window.top && this.isSameOrigin(env)) {
            env = window.parent;
        }
        return env['gspframeworkService'] && env['gspframeworkService']['rtf'] || {};
    }
    /**
     * 是否同源
     * @private
     * @param {?} environment window
     * @return {?}
     */
    isSameOrigin(environment) {
        /** @type {?} */
        const host = window.location.host;
        try {
            if (environment && environment.location && typeof environment.location.host !== 'undefined') {
                return environment.location.host === host;
            }
        }
        catch (e) {
            return false;
        }
        return false;
    }
    /**
     * @private
     * @return {?}
     */
    get params() {
        if (this.rtf && this.rtf.hasOwnProperty('session') && typeof this.rtf['session']['getCommonVariable'] === 'function') {
            return this.rtf['session']['getCommonVariable']();
        }
        return null;
    }
    /**
     * 获取运行框架http服务
     * @return {?}
     */
    get httpService() {
        if (this.rtf && this.rtf.hasOwnProperty('http') && typeof this.rtf['http']['request'] === 'function') {
            return this.rtf.http;
        }
        return null;
    }
    /**
     * @param {?} method
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */
    request(method, url, options = {}) {
        // todo: 使用运行框架的httpclient导致帮助无法显示数据，暂时撤回
        // if (this.httpService && this.params && this.params.tabId) {
        //   return this.httpService.request$(method, url, options);
        // } else {
        //   return this.defaultHttpClient.request(method, url, options);
        // }
        return this.defaultHttpClient.request(method, url, options);
    }
}
HttpService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
HttpService.ctorParameters = () => [
    { type: HttpClient }
];
if (false) {
    /** @type {?} */
    HttpService.prototype.httpClient;
    /**
     * @type {?}
     * @private
     */
    HttpService.prototype.rtf;
    /**
     * @type {?}
     * @private
     */
    HttpService.prototype.defaultHttpClient;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cF9zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9iZWYvIiwic291cmNlcyI6WyJsaWIvaHR0cF9zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBSWxELE1BQU0sT0FBTyxXQUFXOzs7O0lBR3RCLFlBQW9CLGlCQUE2QjtRQUE3QixzQkFBaUIsR0FBakIsaUJBQWlCLENBQVk7UUFDL0MsSUFBSSxDQUFDLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQztRQUNwQyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUMvQixDQUFDOzs7Ozs7SUFJTyxVQUFVOztZQUNaLEdBQUcsR0FBVyxNQUFNO1FBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsSUFBSSxHQUFHLEtBQUssTUFBTSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2xGLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1NBQ3JCO1FBQ0QsT0FBTyxHQUFHLENBQUMscUJBQXFCLENBQUMsSUFBSSxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDL0UsQ0FBQzs7Ozs7OztJQUtPLFlBQVksQ0FBQyxXQUFtQjs7Y0FDaEMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSTtRQUNqQyxJQUFJO1lBQ0YsSUFBSSxXQUFXLElBQUksV0FBVyxDQUFDLFFBQVEsSUFBSSxPQUFPLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxLQUFLLFdBQVcsRUFBRTtnQkFDM0YsT0FBTyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUM7YUFDM0M7U0FDRjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFDRCxJQUFZLE1BQU07UUFDaEIsSUFBSSxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxJQUFJLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUNwSCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsbUJBQW1CLENBQUMsRUFBRSxDQUFDO1NBQ25EO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7OztJQUlELElBQVcsV0FBVztRQUNwQixJQUFJLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLElBQUksT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLFVBQVUsRUFBRTtZQUNwRyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO1NBQ3RCO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7Ozs7O0lBQ00sT0FBTyxDQUFDLE1BQWMsRUFBRSxHQUFXLEVBQUUsVUFBZSxFQUFFO1FBQzNELHlDQUF5QztRQUN6Qyw4REFBOEQ7UUFDOUQsNERBQTREO1FBQzVELFdBQVc7UUFDWCxpRUFBaUU7UUFDakUsSUFBSTtRQUNKLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzlELENBQUM7OztZQXpERixVQUFVOzs7O1lBSEYsVUFBVTs7OztJQUtqQixpQ0FBOEI7Ozs7O0lBQzlCLDBCQUFpQjs7Ozs7SUFDTCx3Q0FBcUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuLy8gdHNsaW50OmRpc2FibGU6IG5vLXN0cmluZy1saXRlcmFsIGRpc2FibGU6IG1heC1saW5lLWxlbmd0aFxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBIdHRwU2VydmljZSB7XHJcbiAgcHVibGljIGh0dHBDbGllbnQ6IEh0dHBDbGllbnQ7XHJcbiAgcHJpdmF0ZSBydGY6IGFueTtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRlZmF1bHRIdHRwQ2xpZW50OiBIdHRwQ2xpZW50KSB7XHJcbiAgICB0aGlzLmh0dHBDbGllbnQgPSBkZWZhdWx0SHR0cENsaWVudDtcclxuICAgIHRoaXMucnRmID0gdGhpcy5nZXRTZXJ2aWNlKCk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOmBjeWOhuiOt+WPlnJ0ZuacjeWKoVxyXG4gICAqL1xyXG4gIHByaXZhdGUgZ2V0U2VydmljZSgpIHtcclxuICAgIGxldCBlbnY6IFdpbmRvdyA9IHdpbmRvdztcclxuICAgIHdoaWxlICghZW52Wydnc3BmcmFtZXdvcmtTZXJ2aWNlJ10gJiYgZW52ICE9PSB3aW5kb3cudG9wICYmIHRoaXMuaXNTYW1lT3JpZ2luKGVudikpIHtcclxuICAgICAgZW52ID0gd2luZG93LnBhcmVudDtcclxuICAgIH1cclxuICAgIHJldHVybiBlbnZbJ2dzcGZyYW1ld29ya1NlcnZpY2UnXSAmJiBlbnZbJ2dzcGZyYW1ld29ya1NlcnZpY2UnXVsncnRmJ10gfHwge307XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOaYr+WQpuWQjOa6kFxyXG4gICAqIEBwYXJhbSBlbnZpcm9ubWVudCB3aW5kb3dcclxuICAgKi9cclxuICBwcml2YXRlIGlzU2FtZU9yaWdpbihlbnZpcm9ubWVudDogV2luZG93KSB7XHJcbiAgICBjb25zdCBob3N0ID0gd2luZG93LmxvY2F0aW9uLmhvc3Q7XHJcbiAgICB0cnkge1xyXG4gICAgICBpZiAoZW52aXJvbm1lbnQgJiYgZW52aXJvbm1lbnQubG9jYXRpb24gJiYgdHlwZW9mIGVudmlyb25tZW50LmxvY2F0aW9uLmhvc3QgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIGVudmlyb25tZW50LmxvY2F0aW9uLmhvc3QgPT09IGhvc3Q7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbiAgcHJpdmF0ZSBnZXQgcGFyYW1zKCkge1xyXG4gICAgaWYgKHRoaXMucnRmICYmIHRoaXMucnRmLmhhc093blByb3BlcnR5KCdzZXNzaW9uJykgJiYgdHlwZW9mIHRoaXMucnRmWydzZXNzaW9uJ11bJ2dldENvbW1vblZhcmlhYmxlJ10gPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucnRmWydzZXNzaW9uJ11bJ2dldENvbW1vblZhcmlhYmxlJ10oKTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDojrflj5bov5DooYzmoYbmnrZodHRw5pyN5YqhXHJcbiAgICovXHJcbiAgcHVibGljIGdldCBodHRwU2VydmljZSgpIHtcclxuICAgIGlmICh0aGlzLnJ0ZiAmJiB0aGlzLnJ0Zi5oYXNPd25Qcm9wZXJ0eSgnaHR0cCcpICYmIHR5cGVvZiB0aGlzLnJ0ZlsnaHR0cCddWydyZXF1ZXN0J10gPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgcmV0dXJuIHRoaXMucnRmLmh0dHA7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgcHVibGljIHJlcXVlc3QobWV0aG9kOiBzdHJpbmcsIHVybDogc3RyaW5nLCBvcHRpb25zOiBhbnkgPSB7fSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICAvLyB0b2RvOiDkvb/nlKjov5DooYzmoYbmnrbnmoRodHRwY2xpZW505a+86Ie05biu5Yqp5peg5rOV5pi+56S65pWw5o2u77yM5pqC5pe25pKk5ZueXHJcbiAgICAvLyBpZiAodGhpcy5odHRwU2VydmljZSAmJiB0aGlzLnBhcmFtcyAmJiB0aGlzLnBhcmFtcy50YWJJZCkge1xyXG4gICAgLy8gICByZXR1cm4gdGhpcy5odHRwU2VydmljZS5yZXF1ZXN0JChtZXRob2QsIHVybCwgb3B0aW9ucyk7XHJcbiAgICAvLyB9IGVsc2Uge1xyXG4gICAgLy8gICByZXR1cm4gdGhpcy5kZWZhdWx0SHR0cENsaWVudC5yZXF1ZXN0KG1ldGhvZCwgdXJsLCBvcHRpb25zKTtcclxuICAgIC8vIH1cclxuICAgIHJldHVybiB0aGlzLmRlZmF1bHRIdHRwQ2xpZW50LnJlcXVlc3QobWV0aG9kLCB1cmwsIG9wdGlvbnMpO1xyXG4gIH1cclxufVxyXG4iXX0=