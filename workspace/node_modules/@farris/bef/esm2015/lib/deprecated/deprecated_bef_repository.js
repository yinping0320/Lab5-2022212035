/**
 * @fileoverview added by tsickle
 * Generated from: lib/deprecated/deprecated_bef_repository.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: Sagi, Lucas, Witt
 * @Date: 2018-10-11 17:34:26
 * @Last Modified by: aalizzwell
 * @Last Modified time: 2019-06-29 11:39:02
 */
// tslint:disable: max-line-length
import { Injectable } from '@angular/core';
import { of } from 'rxjs';
import { Repository } from '@farris/devkit';
/**
 * 适配老的API，保持兼容
 * @abstract
 * @template T
 */
class DeprecatedBefRepository extends Repository {
    // #endregion
    /**
     * 构造函数
     */
    constructor() {
        super();
    }
    // #region 老的属性包装成get方法进行兼容
    /**
     * 取数服务
     * @return {?}
     */
    get restService() {
        return this.dataService.restService;
    }
    /**
     * 实体变更（前端）=> BE变更（后端）
     * @return {?}
     */
    get changeBuilder() {
        return this.entityManager.changeBuilder;
    }
    /**
     * BE变更（后端）=> 实体变更（前端）
     * @return {?}
     */
    get changeHandler() {
        return this.entityManager.changeHandler;
    }
    // #region 数据访问
    /**
     * 获取实体集合
     * @return {?}
     */
    getList() {
        return this.dataService.getList(null, null, null, null);
    }
    /**
     * 获取单个实体
     * @param {?} id 主实体id
     * @return {?}
     */
    getById(id) {
        return this.dataService.getById(id);
    }
    /**
     * 根据id更新实体
     * @param {?} id 实体id
     * @return {?}
     */
    updateById(id) {
        return this.dataService.updateById(id);
    }
    /**
     * 创建新实体，并加载
     * @param {?=} defaultValue
     * @return {?}
     */
    create(defaultValue) {
        return this.dataService.create(defaultValue);
    }
    /**
     * 追加实体
     * @param {?=} defaultValue
     * @return {?}
     */
    append(defaultValue) {
        return this.dataService.append(defaultValue);
    }
    /**
     * 创建子实体，并追加
     * @param {?} fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     * @return {?}
     */
    appendByPath(fpath) {
        return this.dataService.appendByPath(fpath);
    }
    /**
     * 根据id删除实体
     * @param {?} id 内码
     * @param {?=} ifSave
     * @return {?}
     */
    removeById(id, ifSave) {
        return this.dataService.removeById(id, ifSave);
    }
    /**
     * 批量删除
     * @param {?} ids
     * @param {?=} ifSave 是否保存
     * @return {?}
     */
    removeByIds(ids, ifSave) {
        return this.dataService.removeByIds(ids, ifSave);
    }
    /**
     * 删除子级
     * @param {?} fpath
     * @param {?} id   内码
     * @return {?}
     */
    removeByPath(fpath, id) {
        return this.dataService.removeByPath(fpath, id);
    }
    /**
     * 将id对应的实体的变更提交的服务器端
     * @param {?} id
     * @return {?}
     */
    updateChangesById(id) {
        return this.dataService.updateChangesById(id);
    }
    /**
     * 提交path对应实体的变更
     * @param {?} path
     * @param {?} id
     * @return {?}
     */
    updateChangesByPath(path, id) {
        throw new Error('Not Implement');
    }
    /**
     * 提交所有变更
     * @return {?}
     */
    updateAllChanges() {
        return this.dataService.updateAllChanges();
    }
    /**
     * 应用变更
     * @return {?}
     */
    applyChanges() {
        return this.dataService.applyChanges();
    }
    /**
     * 提交数据变更和变量变更，通过retrieve模拟
     * \@internal
     * @return {?}
     */
    updateDataAndVariableChanges() {
        /** @type {?} */
        const filterConditions = [];
        /** @type {?} */
        const sortConditions = [];
        /** @type {?} */
        const entityFilter = {
            FilterConditions: filterConditions,
            SortConditions: sortConditions,
            IsUsePagination: true,
            Pagination: {
                PageIndex: 1,
                PageSize: 1,
                PageCount: 0,
                TotalCount: 0
            }
        };
        /** @type {?} */
        const entityFilterJson = JSON.stringify(entityFilter);
        /** @type {?} */
        const requestInfo = this.restService.buildRequestInfo();
        // 没有变更时不再提交变更
        if (this.isEmptyRequestInfo(requestInfo)) {
            return of(null);
        }
        /** @type {?} */
        const url = `${this.restService.baseUri}/extension/query?entityFilter=${entityFilterJson}`;
        /** @type {?} */
        const body = requestInfo;
        /** @type {?} */
        const options = {
            body
        };
        return this.restService.invoke(url, 'PUT', null, options, false, true, true);
    }
    /**
     * 应用id对应数据的变更
     * @param {?} id
     * @return {?}
     */
    applyChangesById(id) {
        return this.dataService.applyChangesById(id);
    }
    /**
     * 取消变更
     * @param {?=} options
     * @return {?}
     */
    cancelChanges(options) {
        return this.dataService.cancelChanges(options);
    }
    // #endregion
    // #region 数据变更集处理
    /**
     * 清空所有本地实体的变更集
     * @return {?}
     */
    clearAllEntityChanges() {
        return this.entityManager.clearAllEntityChanges();
    }
    /**
     * 获取数据变更
     * @return {?}
     */
    getDataChangeDetails() {
        return this.entityManager.buildAllEntityChangeDetails();
    }
    /**
     * 处理数据变更
     * @param {?} changeDetails
     * @return {?}
     */
    handleDataChangeDetails(changeDetails) {
        return this.entityManager.handleDataChangeDetails(changeDetails);
    }
    // #endregion
    // #region 变量变更集处理
    /**
     * 获取变量变更
     * @return {?}
     */
    getVariableChangeDetail() {
        return this.variableManager.buildChangeDetail();
    }
    /**
     * 处理变量变更
     * @param {?} changeDetail
     * @return {?}
     */
    handleVariableChangeDetail(changeDetail) {
        this.variableManager.handleChangeDetail(changeDetail);
    }
    // #endregion
    /**
     * 变更集是否为空
     * @private
     * @param {?} requestInfo requestInfo
     * @return {?}
     */
    isEmptyRequestInfo(requestInfo) {
        if (!requestInfo) {
            return true;
        }
        if ((!requestInfo.dataChange || requestInfo.dataChange.length < 1) && (!requestInfo.variableChange || Object.keys(requestInfo.variableChange).length < 1)) {
            return true;
        }
        return false;
    }
}
DeprecatedBefRepository.decorators = [
    { type: Injectable }
];
/** @nocollapse */
DeprecatedBefRepository.ctorParameters = () => [];
if (false) {
    /**
     * 实体管理器
     * \@internal
     * @type {?}
     */
    DeprecatedBefRepository.prototype.entityManager;
    /**
     * 变量管理器
     * \@internal
     * @type {?}
     */
    DeprecatedBefRepository.prototype.variableManager;
    /**
     * 取数服务
     * \@internal
     * @type {?}
     * @protected
     */
    DeprecatedBefRepository.prototype.dataService;
}
export { DeprecatedBefRepository };
//# sourceMappingURL=data:application/json;base64,