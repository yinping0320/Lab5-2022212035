/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic_bef_repository.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpClient } from '@angular/common/http';
import { DataTypeInfo, EntityCollection } from '@farris/devkit';
import { BefDataService } from './bef_data_service';
import { BefEntityManager } from './bef_entity_manager';
import { BefProxy } from './bef_proxy';
import { BefRepository } from './bef_repository';
import { BE_SERVER_URI_TOKEN } from './tokens';
import { UriService } from './uri_service';
/**
 * @template T
 */
class DynamicBefRepository extends BefRepository {
    // public paginationInfo = {
    //   Entity: {
    //     pageSize: 20,
    //   },
    // };
    /**
     * @param {?} injector
     * @param {?} name
     * @param {?} entityType
     * @param {?} serverUri
     * @param {?} apiUri
     */
    constructor(injector, name, entityType, serverUri, apiUri) {
        super(injector);
        this.name = name;
        this.entityType = entityType;
        this.serverUri = serverUri;
        this.apiUri = apiUri;
        this.apiUri = apiUri;
        // 构造分页属性信息
        /** @type {?} */
        const paginationInfo = {};
        paginationInfo[entityType.typeName] = { pageSize: 20 };
        this.paginationInfo = paginationInfo;
        this.name = name;
        this.entityTypeInfo = new DataTypeInfo(this.entityType);
        this.entityCollection = new EntityCollection(this.entityType);
        // 初始化实体管理器
        this.entityManager = new BefEntityManager(this.entityCollection);
        // 设置proxy属性值
        /** @type {?} */
        const httpClient = injector.get(HttpClient);
        /** @type {?} */
        const uriService = new UriService(serverUri);
        /** @type {?} */
        const proxy = new BefProxy(httpClient, uriService);
        /** @type {?} */
        const baseUri = uriService.extendUri(apiUri);
        proxy.setBaseUri(baseUri);
        this.proxy = proxy;
        this.dataService = new BefDataService(injector, this);
        this.serverUri = injector.get(BE_SERVER_URI_TOKEN);
    }
    /**
     * @param {?} defaultValues
     * @return {?}
     */
    batchAppend(defaultValues) {
        throw new Error('Method not implemented.');
    }
}
if (false) {
    /** @type {?} */
    DynamicBefRepository.prototype.name;
    /** @type {?} */
    DynamicBefRepository.prototype.entityType;
    /** @type {?} */
    DynamicBefRepository.prototype.serverUri;
    /** @type {?} */
    DynamicBefRepository.prototype.apiUri;
}
export { DynamicBefRepository };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pY19iZWZfcmVwb3NpdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvYmVmLyIsInNvdXJjZXMiOlsibGliL2R5bmFtaWNfYmVmX3JlcG9zaXRvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFbEQsT0FBTyxFQUFFLFlBQVksRUFBVSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXhFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUUzQyxNQUFNLG9CQUF1QyxTQUFRLGFBQWdCOzs7Ozs7Ozs7Ozs7O0lBY25FLFlBQVksUUFBa0IsRUFBUyxJQUFZLEVBQVMsVUFBZSxFQUFTLFNBQWlCLEVBQVMsTUFBYztRQUMxSCxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7UUFEcUIsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUFTLGVBQVUsR0FBVixVQUFVLENBQUs7UUFBUyxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQVMsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUUxSCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQzs7O2NBRWYsY0FBYyxHQUFHLEVBQUU7UUFDekIsY0FBYyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUN2RCxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUVyQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUVqQixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUQsV0FBVztRQUNYLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzs7O2NBRzNELFVBQVUsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQzs7Y0FDckMsVUFBVSxHQUFHLElBQUksVUFBVSxDQUFDLFNBQVMsQ0FBQzs7Y0FDdEMsS0FBSyxHQUFHLElBQUksUUFBUSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUM7O2NBQzVDLE9BQU8sR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztRQUM1QyxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBRW5CLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxjQUFjLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RELElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBUyxtQkFBbUIsQ0FBQyxDQUFDO0lBQzdELENBQUM7Ozs7O0lBdENELFdBQVcsQ0FBQyxhQUFvQjtRQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDN0MsQ0FBQztDQXFDRjs7O0lBMUJpQyxvQ0FBbUI7O0lBQUUsMENBQXNCOztJQUFFLHlDQUF3Qjs7SUFBRSxzQ0FBcUI7O0FBNEI5SCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERhdGFUeXBlSW5mbywgRW50aXR5LCBFbnRpdHlDb2xsZWN0aW9uIH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEJlZkRhdGFTZXJ2aWNlIH0gZnJvbSAnLi9iZWZfZGF0YV9zZXJ2aWNlJztcclxuaW1wb3J0IHsgQmVmRW50aXR5TWFuYWdlciB9IGZyb20gJy4vYmVmX2VudGl0eV9tYW5hZ2VyJztcclxuaW1wb3J0IHsgQmVmUHJveHkgfSBmcm9tICcuL2JlZl9wcm94eSc7XHJcbmltcG9ydCB7IEJlZlJlcG9zaXRvcnkgfSBmcm9tICcuL2JlZl9yZXBvc2l0b3J5JztcclxuaW1wb3J0IHsgQkVfU0VSVkVSX1VSSV9UT0tFTiB9IGZyb20gJy4vdG9rZW5zJztcclxuaW1wb3J0IHsgVXJpU2VydmljZSB9IGZyb20gJy4vdXJpX3NlcnZpY2UnO1xyXG5cclxuY2xhc3MgRHluYW1pY0JlZlJlcG9zaXRvcnk8VCBleHRlbmRzIEVudGl0eT4gZXh0ZW5kcyBCZWZSZXBvc2l0b3J5PFQ+IHtcclxuICBiYXRjaEFwcGVuZChkZWZhdWx0VmFsdWVzOiBhbnlbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ01ldGhvZCBub3QgaW1wbGVtZW50ZWQuJyk7XHJcbiAgfVxyXG5cclxuICAvLyBwdWJsaWMgcGFnaW5hdGlvbkluZm8gPSB7XHJcbiAgLy8gICBFbnRpdHk6IHtcclxuICAvLyAgICAgcGFnZVNpemU6IDIwLFxyXG4gIC8vICAgfSxcclxuICAvLyB9O1xyXG5cclxuXHJcblxyXG5cclxuICBjb25zdHJ1Y3RvcihpbmplY3RvcjogSW5qZWN0b3IsIHB1YmxpYyBuYW1lOiBzdHJpbmcsIHB1YmxpYyBlbnRpdHlUeXBlOiBhbnksIHB1YmxpYyBzZXJ2ZXJVcmk6IHN0cmluZywgcHVibGljIGFwaVVyaTogc3RyaW5nKSB7XHJcbiAgICBzdXBlcihpbmplY3Rvcik7XHJcbiAgICB0aGlzLmFwaVVyaSA9IGFwaVVyaTtcclxuICAgIC8vIOaehOmAoOWIhumhteWxnuaAp+S/oeaBr1xyXG4gICAgY29uc3QgcGFnaW5hdGlvbkluZm8gPSB7fTtcclxuICAgIHBhZ2luYXRpb25JbmZvW2VudGl0eVR5cGUudHlwZU5hbWVdID0geyBwYWdlU2l6ZTogMjAgfTtcclxuICAgIHRoaXMucGFnaW5hdGlvbkluZm8gPSBwYWdpbmF0aW9uSW5mbztcclxuXHJcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG5cclxuICAgIHRoaXMuZW50aXR5VHlwZUluZm8gPSBuZXcgRGF0YVR5cGVJbmZvKHRoaXMuZW50aXR5VHlwZSk7XHJcbiAgICB0aGlzLmVudGl0eUNvbGxlY3Rpb24gPSBuZXcgRW50aXR5Q29sbGVjdGlvbih0aGlzLmVudGl0eVR5cGUpO1xyXG4gICAgLy8g5Yid5aeL5YyW5a6e5L2T566h55CG5ZmoXHJcbiAgICB0aGlzLmVudGl0eU1hbmFnZXIgPSBuZXcgQmVmRW50aXR5TWFuYWdlcih0aGlzLmVudGl0eUNvbGxlY3Rpb24pO1xyXG5cclxuICAgIC8vIOiuvue9rnByb3h55bGe5oCn5YC8XHJcbiAgICBjb25zdCBodHRwQ2xpZW50ID0gaW5qZWN0b3IuZ2V0KEh0dHBDbGllbnQpO1xyXG4gICAgY29uc3QgdXJpU2VydmljZSA9IG5ldyBVcmlTZXJ2aWNlKHNlcnZlclVyaSk7XHJcbiAgICBjb25zdCBwcm94eSA9IG5ldyBCZWZQcm94eShodHRwQ2xpZW50LCB1cmlTZXJ2aWNlKTtcclxuICAgIGNvbnN0IGJhc2VVcmkgPSB1cmlTZXJ2aWNlLmV4dGVuZFVyaShhcGlVcmkpO1xyXG4gICAgcHJveHkuc2V0QmFzZVVyaShiYXNlVXJpKTtcclxuICAgIHRoaXMucHJveHkgPSBwcm94eTtcclxuXHJcbiAgICB0aGlzLmRhdGFTZXJ2aWNlID0gbmV3IEJlZkRhdGFTZXJ2aWNlKGluamVjdG9yLCB0aGlzKTtcclxuICAgIHRoaXMuc2VydmVyVXJpID0gaW5qZWN0b3IuZ2V0PHN0cmluZz4oQkVfU0VSVkVSX1VSSV9UT0tFTik7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBEeW5hbWljQmVmUmVwb3NpdG9yeSB9O1xyXG4iXX0=