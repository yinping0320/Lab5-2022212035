import { Observable } from 'rxjs';
/**
 * --------------------------------------------------------------------------------
 * 变更集相关类型
 * --------------------------------------------------------------------------------
 */
/**
 * 变更类型
 */
export declare class ChangeDetailType {
    /**
     * 新增
     */
    static Added: string;
    /**
     * 修改
     */
    static Modify: string;
    /**
     * 删除
     */
    static Deleted: string;
}
/**
 * 行变更信息
 * 必须包含：
 * 1、DataId   => 主键值；
 * 2、属性名   => 新的属性值；
 * 3、子表名+s => 子表行的ChangeDetail数组
 */
export interface ChangeDetailInfo {
    DataId?: string;
    [key: string]: number | string | boolean | null | ChangeDetail | ChangeDetail[] | {
        [key: string]: any;
    };
}
/**
 * 行变更详情
 * 包含：
 * 1、变更类型；
 * 2、变更信息
 */
export interface ChangeDetail {
    ChangeType: ChangeDetailType;
    ChangeInfo: ChangeDetailInfo;
}
/**
 * 请求类型
 */
export interface RequestInfo {
    dataChange: ChangeDetail[];
    variableChange?: ChangeDetail;
}
/**
 * --------------------------------------------------------------------------------
 * 请求、响应相关类型定义
 * --------------------------------------------------------------------------------
 */
/**
 * 分页信息
 */
export interface Pagination {
    pageSize: number;
    totalCount: number;
    pageCount: number;
    pageIndex: number;
}
/**
 * 查询结果
 */
export interface QueryResult {
    result: any[];
    pagination: Pagination;
}
/**
 * 返回结果类型
 */
export interface ResponseInfo {
    returnValue: any;
    message: any[];
    innerDataChange: ChangeDetail[];
    innerVariableChange: ChangeDetail;
}
/**
 * 代理钩子
 */
export interface IProxyExtend {
    extendUrl(url: string, params: {
        [propName: string]: any;
    }): string;
    extendBody(body: any): {
        [propName: string]: any;
    };
    extendHeaders(headers: {
        [propName: string]: any;
    }, runtimeContext?: any): Observable<any>;
    onResponse?(response: ResponseInfo, ignoreChanges?: boolean, options?: any): any;
    onError?(error: any, selfHandError: boolean, ignoreError: boolean): Observable<any>;
    parseHeaders(response: any): any;
}
/**
 * 带RequestInfo的body对象
 */
export interface BodyWithRequestInfo {
    requestInfo: RequestInfo;
    [key: string]: any;
}
/**
 * request option格式
 */
export interface RequestOption {
    body: BodyWithRequestInfo;
    [key: string]: any;
}
/**
 * 子表分页参数
 */
export interface RetrieveParam {
    filters: {
        [nodeCode: string]: {
            pagination: {
                pageIndex: number;
                pageSize: number;
            };
        };
    };
    parentIds?: {
        [nodeCode: string]: string;
    };
}
