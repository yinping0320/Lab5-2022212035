import { Entity, EntityCollection, EntityManager } from '@farris/devkit';
import { ChangeDetail } from './types';
import { BefChangeBuilder } from './bef_change_builder';
import { BefChangeHandler } from './bef_change_handler';
/**
 * 实体管理类：管理Entity和
 * @todo
 * 1、实体管理应该放在Devkit中；
 * 2、目前只是简单代码拆分，待进一步明确职责。
 */
declare class BefEntityManager<T extends Entity> extends EntityManager<T> {
    /**
     * ChangeDetail构造器
     */
    changeBuilder: BefChangeBuilder;
    /**
     * ChangeDetail处理器
     */
    changeHandler: BefChangeHandler;
    /**
     * 构造函数
     */
    constructor(entityCollection: EntityCollection<T>);
    /**
     * 获取数据变更
     */
    buildAllEntityChangeDetails(): ChangeDetail[];
    /**
     * 获取单个实体
     */
    buildEntityChangeDetailById(id: string): ChangeDetail;
    /**
     * 应用数据变更
     * @param changeDetails ChangeDetail数组
     */
    handleDataChangeDetails(changeDetails: ChangeDetail[]): void;
    /**
     * 清空所有实体
     */
    reset(): void;
}
export { BefEntityManager };
