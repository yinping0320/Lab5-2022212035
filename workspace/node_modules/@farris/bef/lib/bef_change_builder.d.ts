import { Type } from '@angular/core';
import { Modification, Entity, EntityCollection } from '@farris/devkit';
import { ChangeDetail } from './types';
/**
 * BEF变更集构造器
 */
declare class BefChangeBuilder {
    private entityType;
    private entityCollection;
    /**
     * Bef变更集
     */
    changeDetail: ChangeDetail;
    /**
     * 构造函数
     * @param entityType 实体类型
     */
    constructor(entityType: Type<Entity>, entityCollection: EntityCollection<Entity>);
    /**
     * 构造Bef变更集
     * @param modifications
     */
    build(modifications: Modification[]): ChangeDetail;
    /**
     * 构造Bef变更详情
     */
    buildChangeDetail(modification: Modification): void;
    /**
     * 获取变更信息
     * 在整个ChangeDetail树上，存在两种类型的节点
     * ChangeDetail：实体变更、值对象变更（没有DataID）
     * PlainObject: 关联对象的变更
     * 从这两种节点上拿具体变更信息的时候，需要统一处理，屏蔽这个差异。
     * @todo：为这两种节点封装ChangeNode基类来解决这个差异。
     */
    private getChangeInfo;
    /**
     * 创建ChangeDetail
     * @param type BEF变更类型
     * @param dataId 数据内码
     */
    private createEmptyChangeDetail;
}
export { BefChangeBuilder };
