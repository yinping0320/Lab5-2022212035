import { Observable } from 'rxjs';
import { Entity, Repository } from '@farris/devkit';
import { ChangeDetail } from '../types';
import { BefRestService } from '../bef_rest_service';
import { BefChangeBuilder } from '../bef_change_builder';
import { BefChangeHandler } from '../bef_change_handler';
import { BefEntityManager } from '../bef_entity_manager';
import { BefVariableManager } from '../bef_variable_manager';
import { BefDataService } from '../bef_data_service';
/**
 * 适配老的API，保持兼容
 */
declare abstract class DeprecatedBefRepository<T extends Entity> extends Repository<T> {
    /**
     * 实体管理器
     * @internal
     */
    entityManager: BefEntityManager<T>;
    /**
     * 变量管理器
     * @internal
     */
    variableManager: BefVariableManager;
    /**
     * 取数服务
     * @internal
     */
    protected dataService: BefDataService<T>;
    /**
     * 取数服务
     */
    readonly restService: BefRestService;
    /**
     * 实体变更（前端）=> BE变更（后端）
     */
    readonly changeBuilder: BefChangeBuilder;
    /**
     * BE变更（后端）=> 实体变更（前端）
     */
    readonly changeHandler: BefChangeHandler;
    /**
    * 构造函数
    */
    constructor();
    /**
    * 获取实体集合
    */
    getList(): Observable<T[]>;
    /**
     * 获取单个实体
     * @param id 主实体id
     */
    getById(id: string): Observable<T>;
    /**
     * 根据id更新实体
     * @param id 实体id
     */
    updateById(id: string): Observable<T>;
    /**
     * 创建新实体，并加载
     */
    create(defaultValue?: any): Observable<any>;
    /**
     * 追加实体
     */
    append(defaultValue?: any): Observable<T>;
    /**
     * 创建子实体，并追加
     * @param fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     */
    appendByPath(fpath: string): Observable<any>;
    /**
     * 根据id删除实体
     * @param id 内码
     */
    removeById(id: string, ifSave?: boolean): Observable<boolean>;
    /**
     * 批量删除
     * @param id 内码
     * @param ifSave 是否保存
     */
    removeByIds(ids: string[], ifSave?: boolean): Observable<any>;
    /**
     * 删除子级
     * @param path 路径
     * @param id   内码
     */
    removeByPath(fpath: string, id: string): Observable<boolean>;
    /**
     * 将id对应的实体的变更提交的服务器端
     */
    updateChangesById(id: string): Observable<boolean>;
    /**
     * 提交path对应实体的变更
     */
    updateChangesByPath(path: string, id: string): Observable<any>;
    /**
     * 提交所有变更
     */
    updateAllChanges(): Observable<boolean>;
    /**
     * 应用变更
     */
    applyChanges(): Observable<boolean>;
    /**
     * 提交数据变更和变量变更，通过retrieve模拟
     * @internal
     */
    updateDataAndVariableChanges(): Observable<any>;
    /**
     * 应用id对应数据的变更
     */
    applyChangesById(id: string): Observable<boolean>;
    /**
     * 取消变更
     */
    cancelChanges(options?: any): Observable<boolean>;
    /**
     * 清空所有本地实体的变更集
     */
    clearAllEntityChanges(): void;
    /**
     * 获取数据变更
     */
    getDataChangeDetails(): ChangeDetail[];
    /**
     * 处理数据变更
     */
    handleDataChangeDetails(changeDetails: ChangeDetail[]): void;
    /**
     * 获取变量变更
     */
    getVariableChangeDetail(): ChangeDetail;
    /**
     * 处理变量变更
     */
    handleVariableChangeDetail(changeDetail: ChangeDetail): void;
    /**
     * 变更集是否为空
     * @param requestInfo requestInfo
     */
    private isEmptyRequestInfo;
}
export { DeprecatedBefRepository };
