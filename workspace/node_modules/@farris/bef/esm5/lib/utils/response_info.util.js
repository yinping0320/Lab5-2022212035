/**
 * @fileoverview added by tsickle
 * Generated from: lib/utils/response_info.util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ResponseInfoUtil = /** @class */ (function () {
    function ResponseInfoUtil() {
    }
    /**
     * 将ResponseInfo转换为老接口的数据返回格式
     */
    /**
     * 将ResponseInfo转换为老接口的数据返回格式
     * @param {?} result
     * @return {?}
     */
    ResponseInfoUtil.unWrapResponseInfo = /**
     * 将ResponseInfo转换为老接口的数据返回格式
     * @param {?} result
     * @return {?}
     */
    function (result) {
        // 兼容cancel没有返回值的情况
        if (!result) {
            return result;
        }
        // 没有returnValue的情况下，兼容query取数的的格式
        if (result.hasOwnProperty('returnValue') === false) {
            if (result.hasOwnProperty('result') && result.hasOwnProperty('pagination')) {
                // 兼容返回带分页的列表数据
                return result.result;
            }
            return result;
        }
        // 其他：返回RequestInfo.returnValue的情况
        /** @type {?} */
        var returnValue = result.returnValue;
        if (returnValue && returnValue.hasOwnProperty('result') && returnValue.hasOwnProperty('pagination')) {
            // 兼容返回带分页的列表数据
            return returnValue.result;
        }
        return result.returnValue;
    };
    /**
     * @param {?} response
     * @return {?}
     */
    ResponseInfoUtil.isReported401Error = /**
     * @param {?} response
     * @return {?}
     */
    function (response) {
        return response.status === 401;
    };
    /**
     * 解析后端消息
     * @param result result
     */
    /**
     * 解析后端消息
     * @param {?} result result
     * @return {?}
     */
    ResponseInfoUtil.parseBackEndMessage = /**
     * 解析后端消息
     * @param {?} result result
     * @return {?}
     */
    function (result) {
        if (result && result.message && Array.isArray(result.message) && result.message.length > 0) {
            return result.message;
        }
        return null;
    };
    /**
     * 解析后端错误消息
     * @param error error
     */
    /**
     * 解析后端错误消息
     * @param {?} e
     * @return {?}
     */
    ResponseInfoUtil.parseBackEndError = /**
     * 解析后端错误消息
     * @param {?} e
     * @return {?}
     */
    function (e) {
        /** @type {?} */
        var error = e && e.error;
        if (error && error.hasOwnProperty('extensionMessage') && error.extensionMessage && error.extensionMessage.hasOwnProperty('UIMsg') && error.extensionMessage.UIMsg && error.extensionMessage.UIMsg.length > 0) {
            return JSON.parse(error.extensionMessage.UIMsg);
        }
        return null;
    };
    return ResponseInfoUtil;
}());
export { ResponseInfoUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2VfaW5mby51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9iZWYvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvcmVzcG9uc2VfaW5mby51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUE7SUFBQTtJQXlEQSxDQUFDO0lBdkRDOztPQUVHOzs7Ozs7SUFDVyxtQ0FBa0I7Ozs7O0lBQWhDLFVBQWlDLE1BQVc7UUFFMUMsbUJBQW1CO1FBQ25CLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDWCxPQUFPLE1BQU0sQ0FBQztTQUNmO1FBRUQsa0NBQWtDO1FBQ2xDLElBQUksTUFBTSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsS0FBSyxLQUFLLEVBQUU7WUFDbEQsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUU7Z0JBRTFFLGVBQWU7Z0JBQ2YsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDO2FBQ3RCO1lBQ0QsT0FBTyxNQUFNLENBQUM7U0FDZjs7O1lBR0ssV0FBVyxHQUFHLE1BQU0sQ0FBQyxXQUFXO1FBQ3RDLElBQUksV0FBVyxJQUFJLFdBQVcsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLElBQUksV0FBVyxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUVuRyxlQUFlO1lBQ2YsT0FBTyxXQUFXLENBQUMsTUFBTSxDQUFDO1NBQzNCO1FBQ0QsT0FBTyxNQUFNLENBQUMsV0FBVyxDQUFDO0lBRTVCLENBQUM7Ozs7O0lBRWEsbUNBQWtCOzs7O0lBQWhDLFVBQWlDLFFBQTBCO1FBQ3pELE9BQU8sUUFBUSxDQUFDLE1BQU0sS0FBSyxHQUFHLENBQUM7SUFDakMsQ0FBQztJQUNEOzs7T0FHRzs7Ozs7O0lBQ1csb0NBQW1COzs7OztJQUFqQyxVQUFrQyxNQUFXO1FBQzNDLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzFGLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQztTQUN2QjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUNEOzs7T0FHRzs7Ozs7O0lBQ1csa0NBQWlCOzs7OztJQUEvQixVQUFnQyxDQUFNOztZQUM5QixLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLO1FBQzFCLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsSUFBSSxLQUFLLENBQUMsZ0JBQWdCLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM1TSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2pEO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0gsdUJBQUM7QUFBRCxDQUFDLEFBekRELElBeURDO0FBRUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSwgSHR0cEhlYWRlclJlc3BvbnNlLCBIdHRwUmVzcG9uc2UsIEh0dHBSZXNwb25zZUJhc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcblxyXG5jbGFzcyBSZXNwb25zZUluZm9VdGlsIHtcclxuXHJcbiAgLyoqXHJcbiAgICog5bCGUmVzcG9uc2VJbmZv6L2s5o2i5Li66ICB5o6l5Y+j55qE5pWw5o2u6L+U5Zue5qC85byPXHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyB1bldyYXBSZXNwb25zZUluZm8ocmVzdWx0OiBhbnkpIHtcclxuXHJcbiAgICAvLyDlhbzlrrljYW5jZWzmsqHmnInov5Tlm57lgLznmoTmg4XlhrVcclxuICAgIGlmICghcmVzdWx0KSB7XHJcbiAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5rKh5pyJcmV0dXJuVmFsdWXnmoTmg4XlhrXkuIvvvIzlhbzlrrlxdWVyeeWPluaVsOeahOeahOagvOW8j1xyXG4gICAgaWYgKHJlc3VsdC5oYXNPd25Qcm9wZXJ0eSgncmV0dXJuVmFsdWUnKSA9PT0gZmFsc2UpIHtcclxuICAgICAgaWYgKHJlc3VsdC5oYXNPd25Qcm9wZXJ0eSgncmVzdWx0JykgJiYgcmVzdWx0Lmhhc093blByb3BlcnR5KCdwYWdpbmF0aW9uJykpIHtcclxuXHJcbiAgICAgICAgLy8g5YW85a656L+U5Zue5bim5YiG6aG155qE5YiX6KGo5pWw5o2uXHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5yZXN1bHQ7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICAvLyDlhbbku5bvvJrov5Tlm55SZXF1ZXN0SW5mby5yZXR1cm5WYWx1ZeeahOaDheWGtVxyXG4gICAgY29uc3QgcmV0dXJuVmFsdWUgPSByZXN1bHQucmV0dXJuVmFsdWU7XHJcbiAgICBpZiAocmV0dXJuVmFsdWUgJiYgcmV0dXJuVmFsdWUuaGFzT3duUHJvcGVydHkoJ3Jlc3VsdCcpICYmIHJldHVyblZhbHVlLmhhc093blByb3BlcnR5KCdwYWdpbmF0aW9uJykpIHtcclxuXHJcbiAgICAgIC8vIOWFvOWuuei/lOWbnuW4puWIhumhteeahOWIl+ihqOaVsOaNrlxyXG4gICAgICByZXR1cm4gcmV0dXJuVmFsdWUucmVzdWx0O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdC5yZXR1cm5WYWx1ZTtcclxuXHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIGlzUmVwb3J0ZWQ0MDFFcnJvcihyZXNwb25zZTogSHR0cFJlc3BvbnNlQmFzZSkge1xyXG4gICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDop6PmnpDlkI7nq6/mtojmga9cclxuICAgKiBAcGFyYW0gcmVzdWx0IHJlc3VsdFxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgcGFyc2VCYWNrRW5kTWVzc2FnZShyZXN1bHQ6IGFueSkge1xyXG4gICAgaWYgKHJlc3VsdCAmJiByZXN1bHQubWVzc2FnZSAmJiBBcnJheS5pc0FycmF5KHJlc3VsdC5tZXNzYWdlKSAmJiByZXN1bHQubWVzc2FnZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHJldHVybiByZXN1bHQubWVzc2FnZTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDop6PmnpDlkI7nq6/plJnor6/mtojmga9cclxuICAgKiBAcGFyYW0gZXJyb3IgZXJyb3JcclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIHBhcnNlQmFja0VuZEVycm9yKGU6IGFueSkge1xyXG4gICAgY29uc3QgZXJyb3IgPSBlICYmIGUuZXJyb3I7XHJcbiAgICBpZiAoZXJyb3IgJiYgZXJyb3IuaGFzT3duUHJvcGVydHkoJ2V4dGVuc2lvbk1lc3NhZ2UnKSAmJiBlcnJvci5leHRlbnNpb25NZXNzYWdlICYmIGVycm9yLmV4dGVuc2lvbk1lc3NhZ2UuaGFzT3duUHJvcGVydHkoJ1VJTXNnJykgJiYgZXJyb3IuZXh0ZW5zaW9uTWVzc2FnZS5VSU1zZyAmJiBlcnJvci5leHRlbnNpb25NZXNzYWdlLlVJTXNnLmxlbmd0aCA+IDApIHtcclxuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZXJyb3IuZXh0ZW5zaW9uTWVzc2FnZS5VSU1zZyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IFJlc3BvbnNlSW5mb1V0aWwgfTtcclxuIl19