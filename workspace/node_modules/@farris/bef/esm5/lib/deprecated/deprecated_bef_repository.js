/**
 * @fileoverview added by tsickle
 * Generated from: lib/deprecated/deprecated_bef_repository.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 * @Author: Sagi, Lucas, Witt
 * @Date: 2018-10-11 17:34:26
 * @Last Modified by: aalizzwell
 * @Last Modified time: 2019-06-29 11:39:02
 */
// tslint:disable: max-line-length
import { Injectable } from '@angular/core';
import { of } from 'rxjs';
import { Repository } from '@farris/devkit';
/**
 * 适配老的API，保持兼容
 * @abstract
 * @template T
 */
var DeprecatedBefRepository = /** @class */ (function (_super) {
    tslib_1.__extends(DeprecatedBefRepository, _super);
    // #endregion
    /**
    * 构造函数
    */
    function DeprecatedBefRepository() {
        return _super.call(this) || this;
    }
    Object.defineProperty(DeprecatedBefRepository.prototype, "restService", {
        // #region 老的属性包装成get方法进行兼容
        /**
         * 取数服务
         */
        get: 
        // #region 老的属性包装成get方法进行兼容
        /**
         * 取数服务
         * @return {?}
         */
        function () {
            return this.dataService.restService;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeprecatedBefRepository.prototype, "changeBuilder", {
        /**
         * 实体变更（前端）=> BE变更（后端）
         */
        get: /**
         * 实体变更（前端）=> BE变更（后端）
         * @return {?}
         */
        function () {
            return this.entityManager.changeBuilder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeprecatedBefRepository.prototype, "changeHandler", {
        /**
         * BE变更（后端）=> 实体变更（前端）
         */
        get: /**
         * BE变更（后端）=> 实体变更（前端）
         * @return {?}
         */
        function () {
            return this.entityManager.changeHandler;
        },
        enumerable: true,
        configurable: true
    });
    // #region 数据访问
    /**
    * 获取实体集合
    */
    // #region 数据访问
    /**
     * 获取实体集合
     * @return {?}
     */
    DeprecatedBefRepository.prototype.getList = 
    // #region 数据访问
    /**
     * 获取实体集合
     * @return {?}
     */
    function () {
        return this.dataService.getList(null, null, null, null);
    };
    /**
     * 获取单个实体
     * @param id 主实体id
     */
    /**
     * 获取单个实体
     * @param {?} id 主实体id
     * @return {?}
     */
    DeprecatedBefRepository.prototype.getById = /**
     * 获取单个实体
     * @param {?} id 主实体id
     * @return {?}
     */
    function (id) {
        return this.dataService.getById(id);
    };
    /**
     * 根据id更新实体
     * @param id 实体id
     */
    /**
     * 根据id更新实体
     * @param {?} id 实体id
     * @return {?}
     */
    DeprecatedBefRepository.prototype.updateById = /**
     * 根据id更新实体
     * @param {?} id 实体id
     * @return {?}
     */
    function (id) {
        return this.dataService.updateById(id);
    };
    /**
     * 创建新实体，并加载
     */
    /**
     * 创建新实体，并加载
     * @param {?=} defaultValue
     * @return {?}
     */
    DeprecatedBefRepository.prototype.create = /**
     * 创建新实体，并加载
     * @param {?=} defaultValue
     * @return {?}
     */
    function (defaultValue) {
        return this.dataService.create(defaultValue);
    };
    /**
     * 追加实体
     */
    /**
     * 追加实体
     * @param {?=} defaultValue
     * @return {?}
     */
    DeprecatedBefRepository.prototype.append = /**
     * 追加实体
     * @param {?=} defaultValue
     * @return {?}
     */
    function (defaultValue) {
        return this.dataService.append(defaultValue);
    };
    /**
     * 创建子实体，并追加
     * @param fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     */
    /**
     * 创建子实体，并追加
     * @param {?} fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     * @return {?}
     */
    DeprecatedBefRepository.prototype.appendByPath = /**
     * 创建子实体，并追加
     * @param {?} fpath 父路径，格式形如：/1/edus（从表）或/1/edus/2/grades（从从表）
     * @return {?}
     */
    function (fpath) {
        return this.dataService.appendByPath(fpath);
    };
    /**
     * 根据id删除实体
     * @param id 内码
     */
    /**
     * 根据id删除实体
     * @param {?} id 内码
     * @param {?=} ifSave
     * @return {?}
     */
    DeprecatedBefRepository.prototype.removeById = /**
     * 根据id删除实体
     * @param {?} id 内码
     * @param {?=} ifSave
     * @return {?}
     */
    function (id, ifSave) {
        return this.dataService.removeById(id, ifSave);
    };
    /**
     * 批量删除
     * @param id 内码
     * @param ifSave 是否保存
     */
    /**
     * 批量删除
     * @param {?} ids
     * @param {?=} ifSave 是否保存
     * @return {?}
     */
    DeprecatedBefRepository.prototype.removeByIds = /**
     * 批量删除
     * @param {?} ids
     * @param {?=} ifSave 是否保存
     * @return {?}
     */
    function (ids, ifSave) {
        return this.dataService.removeByIds(ids, ifSave);
    };
    /**
     * 删除子级
     * @param path 路径
     * @param id   内码
     */
    /**
     * 删除子级
     * @param {?} fpath
     * @param {?} id   内码
     * @return {?}
     */
    DeprecatedBefRepository.prototype.removeByPath = /**
     * 删除子级
     * @param {?} fpath
     * @param {?} id   内码
     * @return {?}
     */
    function (fpath, id) {
        return this.dataService.removeByPath(fpath, id);
    };
    /**
     * 将id对应的实体的变更提交的服务器端
     */
    /**
     * 将id对应的实体的变更提交的服务器端
     * @param {?} id
     * @return {?}
     */
    DeprecatedBefRepository.prototype.updateChangesById = /**
     * 将id对应的实体的变更提交的服务器端
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.dataService.updateChangesById(id);
    };
    /**
     * 提交path对应实体的变更
     */
    /**
     * 提交path对应实体的变更
     * @param {?} path
     * @param {?} id
     * @return {?}
     */
    DeprecatedBefRepository.prototype.updateChangesByPath = /**
     * 提交path对应实体的变更
     * @param {?} path
     * @param {?} id
     * @return {?}
     */
    function (path, id) {
        throw new Error('Not Implement');
    };
    /**
     * 提交所有变更
     */
    /**
     * 提交所有变更
     * @return {?}
     */
    DeprecatedBefRepository.prototype.updateAllChanges = /**
     * 提交所有变更
     * @return {?}
     */
    function () {
        return this.dataService.updateAllChanges();
    };
    /**
     * 应用变更
     */
    /**
     * 应用变更
     * @return {?}
     */
    DeprecatedBefRepository.prototype.applyChanges = /**
     * 应用变更
     * @return {?}
     */
    function () {
        return this.dataService.applyChanges();
    };
    /**
     * 提交数据变更和变量变更，通过retrieve模拟
     * @internal
     */
    /**
     * 提交数据变更和变量变更，通过retrieve模拟
     * \@internal
     * @return {?}
     */
    DeprecatedBefRepository.prototype.updateDataAndVariableChanges = /**
     * 提交数据变更和变量变更，通过retrieve模拟
     * \@internal
     * @return {?}
     */
    function () {
        /** @type {?} */
        var filterConditions = [];
        /** @type {?} */
        var sortConditions = [];
        /** @type {?} */
        var entityFilter = {
            FilterConditions: filterConditions,
            SortConditions: sortConditions,
            IsUsePagination: true,
            Pagination: {
                PageIndex: 1,
                PageSize: 1,
                PageCount: 0,
                TotalCount: 0
            }
        };
        /** @type {?} */
        var entityFilterJson = JSON.stringify(entityFilter);
        /** @type {?} */
        var requestInfo = this.restService.buildRequestInfo();
        // 没有变更时不再提交变更
        if (this.isEmptyRequestInfo(requestInfo)) {
            return of(null);
        }
        /** @type {?} */
        var url = this.restService.baseUri + "/extension/query?entityFilter=" + entityFilterJson;
        /** @type {?} */
        var body = requestInfo;
        /** @type {?} */
        var options = {
            body: body
        };
        return this.restService.invoke(url, 'PUT', null, options, false, true, true);
    };
    /**
     * 应用id对应数据的变更
     */
    /**
     * 应用id对应数据的变更
     * @param {?} id
     * @return {?}
     */
    DeprecatedBefRepository.prototype.applyChangesById = /**
     * 应用id对应数据的变更
     * @param {?} id
     * @return {?}
     */
    function (id) {
        return this.dataService.applyChangesById(id);
    };
    /**
     * 取消变更
     */
    /**
     * 取消变更
     * @param {?=} options
     * @return {?}
     */
    DeprecatedBefRepository.prototype.cancelChanges = /**
     * 取消变更
     * @param {?=} options
     * @return {?}
     */
    function (options) {
        return this.dataService.cancelChanges(options);
    };
    // #endregion
    // #region 数据变更集处理
    /**
     * 清空所有本地实体的变更集
     */
    // #endregion
    // #region 数据变更集处理
    /**
     * 清空所有本地实体的变更集
     * @return {?}
     */
    DeprecatedBefRepository.prototype.clearAllEntityChanges = 
    // #endregion
    // #region 数据变更集处理
    /**
     * 清空所有本地实体的变更集
     * @return {?}
     */
    function () {
        return this.entityManager.clearAllEntityChanges();
    };
    /**
     * 获取数据变更
     */
    /**
     * 获取数据变更
     * @return {?}
     */
    DeprecatedBefRepository.prototype.getDataChangeDetails = /**
     * 获取数据变更
     * @return {?}
     */
    function () {
        return this.entityManager.buildAllEntityChangeDetails();
    };
    /**
     * 处理数据变更
     */
    /**
     * 处理数据变更
     * @param {?} changeDetails
     * @return {?}
     */
    DeprecatedBefRepository.prototype.handleDataChangeDetails = /**
     * 处理数据变更
     * @param {?} changeDetails
     * @return {?}
     */
    function (changeDetails) {
        return this.entityManager.handleDataChangeDetails(changeDetails);
    };
    // #endregion
    // #region 变量变更集处理
    /**
     * 获取变量变更
     */
    // #endregion
    // #region 变量变更集处理
    /**
     * 获取变量变更
     * @return {?}
     */
    DeprecatedBefRepository.prototype.getVariableChangeDetail = 
    // #endregion
    // #region 变量变更集处理
    /**
     * 获取变量变更
     * @return {?}
     */
    function () {
        return this.variableManager.buildChangeDetail();
    };
    /**
     * 处理变量变更
     */
    /**
     * 处理变量变更
     * @param {?} changeDetail
     * @return {?}
     */
    DeprecatedBefRepository.prototype.handleVariableChangeDetail = /**
     * 处理变量变更
     * @param {?} changeDetail
     * @return {?}
     */
    function (changeDetail) {
        this.variableManager.handleChangeDetail(changeDetail);
    };
    // #endregion
    /**
     * 变更集是否为空
     * @param requestInfo requestInfo
     */
    // #endregion
    /**
     * 变更集是否为空
     * @private
     * @param {?} requestInfo requestInfo
     * @return {?}
     */
    DeprecatedBefRepository.prototype.isEmptyRequestInfo = 
    // #endregion
    /**
     * 变更集是否为空
     * @private
     * @param {?} requestInfo requestInfo
     * @return {?}
     */
    function (requestInfo) {
        if (!requestInfo) {
            return true;
        }
        if ((!requestInfo.dataChange || requestInfo.dataChange.length < 1) && (!requestInfo.variableChange || Object.keys(requestInfo.variableChange).length < 1)) {
            return true;
        }
        return false;
    };
    DeprecatedBefRepository.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    DeprecatedBefRepository.ctorParameters = function () { return []; };
    return DeprecatedBefRepository;
}(Repository));
if (false) {
    /**
     * 实体管理器
     * \@internal
     * @type {?}
     */
    DeprecatedBefRepository.prototype.entityManager;
    /**
     * 变量管理器
     * \@internal
     * @type {?}
     */
    DeprecatedBefRepository.prototype.variableManager;
    /**
     * 取数服务
     * \@internal
     * @type {?}
     * @protected
     */
    DeprecatedBefRepository.prototype.dataService;
}
export { DeprecatedBefRepository };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwcmVjYXRlZF9iZWZfcmVwb3NpdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvYmVmLyIsInNvdXJjZXMiOlsibGliL2RlcHJlY2F0ZWQvZGVwcmVjYXRlZF9iZWZfcmVwb3NpdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBT0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBVSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7O0FBZXBEO0lBQ2lFLG1EQUFhO0lBNEM1RSxhQUFhO0lBR2I7O01BRUU7SUFDRjtlQUNFLGlCQUFPO0lBQ1QsQ0FBQztJQTFCRCxzQkFBVyxnREFBVztRQUx0QiwyQkFBMkI7UUFFM0I7O1dBRUc7Ozs7Ozs7UUFDSDtZQUNFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUM7UUFDdEMsQ0FBQzs7O09BQUE7SUFLRCxzQkFBVyxrREFBYTtRQUh4Qjs7V0FFRzs7Ozs7UUFDSDtZQUNFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUM7UUFDMUMsQ0FBQzs7O09BQUE7SUFLRCxzQkFBVyxrREFBYTtRQUh4Qjs7V0FFRzs7Ozs7UUFDSDtZQUNFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUM7UUFDMUMsQ0FBQzs7O09BQUE7SUFZRCxlQUFlO0lBRWY7O01BRUU7Ozs7OztJQUNLLHlDQUFPOzs7Ozs7SUFBZDtRQUNFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7O0lBQ0kseUNBQU87Ozs7O0lBQWQsVUFBZSxFQUFVO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxP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LENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUNsRCxDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNJLDREQUEwQjs7Ozs7SUFBakMsVUFBa0MsWUFBMEI7UUFDMUQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsYUFBYTtJQUNiOzs7T0FHRzs7Ozs7Ozs7SUFDSyxvREFBa0I7Ozs7Ozs7O0lBQTFCLFVBQTJCLFdBQXdCO1FBQ2pELElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDaEIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxVQUFVLElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxjQUFjLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ3pKLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7O2dCQWxRRixVQUFVOzs7O0lBbVFYLDhCQUFDO0NBQUEsQUFuUUQsQ0FDaUUsVUFBVSxHQWtRMUU7Ozs7Ozs7SUE1UEMsZ0RBQTBDOzs7Ozs7SUFNMUMsa0RBQTJDOzs7Ozs7O0lBTTNDLDhDQUF5Qzs7QUFrUDNDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQEF1dGhvcjogU2FnaSwgTHVjYXMsIFdpdHRcclxuICogQERhdGU6IDIwMTgtMTAtMTEgMTc6MzQ6MjZcclxuICogQExhc3QgTW9kaWZpZWQgYnk6IGFhbGl6endlbGxcclxuICogQExhc3QgTW9kaWZpZWQgdGltZTogMjAxOS0wNi0yOSAxMTozOTowMlxyXG4gKi9cclxuLy8gdHNsaW50OmRpc2FibGU6IG1heC1saW5lLWxlbmd0aFxyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBFbnRpdHksIFJlcG9zaXRvcnkgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcblxyXG5pbXBvcnQgeyBDaGFuZ2VEZXRhaWwsIFJlcXVlc3RJbmZvIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5cclxuaW1wb3J0IHsgQmVmUmVzdFNlcnZpY2UgfSBmcm9tICcuLi9iZWZfcmVzdF9zZXJ2aWNlJztcclxuaW1wb3J0IHsgQmVmQ2hhbmdlQnVpbGRlciB9IGZyb20gJy4uL2JlZl9jaGFuZ2VfYnVpbGRlcic7XHJcbmltcG9ydCB7IEJlZkNoYW5nZUhhbmRsZXIgfSBmcm9tICcuLi9iZWZfY2hhbmdlX2hhbmRsZXInO1xyXG5cclxuaW1wb3J0IHsgQmVmRW50aXR5TWFuYWdlciB9IGZyb20gJy4uL2JlZl9lbnRpdHlfbWFuYWdlcic7XHJcbmltcG9ydCB7IEJlZlZhcmlhYmxlTWFuYWdlciB9IGZyb20gJy4uL2JlZl92YXJpYWJsZV9tYW5hZ2VyJztcclxuaW1wb3J0IHsgQmVmRGF0YVNlcnZpY2UgfSBmcm9tICcuLi9iZWZfZGF0YV9zZXJ2aWNlJztcclxuXHJcbi8qKlxyXG4gKiDpgILphY3ogIHnmoRBUEnvvIzkv53mjIHlhbzlrrlcclxuICovXHJcbkBJbmplY3RhYmxlKClcclxuYWJzdHJhY3QgY2xhc3MgRGVwcmVjYXRlZEJlZlJlcG9zaXRvcnk8VCBleHRlbmRzIEVudGl0eT4gZXh0ZW5kcyBSZXBvc2l0b3J5PFQ+IHtcclxuXHJcbiAgLyoqXHJcbiAgICog5a6e5L2T566h55CG5ZmoXHJcbiAgICogQGludGVybmFsXHJcbiAgICovXHJcbiAgcHVibGljIGVudGl0eU1hbmFnZXI6IEJlZkVudGl0eU1hbmFnZXI8VD47XHJcblxyXG4gIC8qKlxyXG4gICAqIOWPmOmHj+euoeeQhuWZqFxyXG4gICAqIEBpbnRlcm5hbFxyXG4gICAqL1xyXG4gIHB1YmxpYyB2YXJpYWJsZU1hbmFnZXI6IEJlZlZhcmlhYmxlTWFuYWdlcjtcclxuXHJcbiAgLyoqXHJcbiAgICog5Y+W5pWw5pyN5YqhXHJcbiAgICogQGludGVybmFsXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGRhdGFTZXJ2aWNlOiBCZWZEYXRhU2VydmljZTxUPjtcclxuXHJcblxyXG4gIC8vICNyZWdpb24g6ICB55qE5bGe5oCn5YyF6KOF5oiQZ2V05pa55rOV6L+b6KGM5YW85a65XHJcblxyXG4gIC8qKlxyXG4gICAqIOWPluaVsOacjeWKoVxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQgcmVzdFNlcnZpY2UoKTogQmVmUmVzdFNlcnZpY2Uge1xyXG4gICAgcmV0dXJuIHRoaXMuZGF0YVNlcnZpY2UucmVzdFNlcnZpY2U7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlrp7kvZPlj5jmm7TvvIjliY3nq6/vvIk9PiBCReWPmOabtO+8iOWQjuerr++8iVxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXQgY2hhbmdlQnVpbGRlcigpOiBCZWZDaGFuZ2VCdWlsZGVyIHtcclxuICAgIHJldHVybiB0aGlzLmVudGl0eU1hbmFnZXIuY2hhbmdlQnVpbGRlcjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEJF5Y+Y5pu077yI5ZCO56uv77yJPT4g5a6e5L2T5Y+Y5pu077yI5YmN56uv77yJXHJcbiAgICovXHJcbiAgcHVibGljIGdldCBjaGFuZ2VIYW5kbGVyKCk6IEJlZkNoYW5nZUhhbmRsZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuZW50aXR5TWFuYWdlci5jaGFuZ2VIYW5kbGVyO1xyXG4gIH1cclxuXHJcbiAgLy8gI2VuZHJlZ2lvblxyXG5cclxuXHJcbiAgLyoqXHJcbiAgKiDmnoTpgKDlh73mlbBcclxuICAqL1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIC8vICNyZWdpb24g5pWw5o2u6K6/6ZeuXHJcblxyXG4gIC8qKlxyXG4gICog6I635Y+W5a6e5L2T6ZuG5ZCIXHJcbiAgKi9cclxuICBwdWJsaWMgZ2V0TGlzdCgpOiBPYnNlcnZhYmxlPFRbXT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZGF0YVNlcnZpY2UuZ2V0TGlzdChudWxsLCBudWxsLCBudWxsLCBudWxsKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWNleS4quWunuS9k1xyXG4gICAqIEBwYXJhbSBpZCDkuLvlrp7kvZNpZFxyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRCeUlkKGlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPFQ+IHtcclxuICAgIHJldHVybiB0aGlzLmRhdGFTZXJ2aWNlLmdldEJ5SWQoaWQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5qC55o2uaWTmm7TmlrDlrp7kvZNcclxuICAgKiBAcGFyYW0gaWQg5a6e5L2TaWRcclxuICAgKi9cclxuICBwdWJsaWMgdXBkYXRlQnlJZChpZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxUPiB7XHJcbiAgICByZXR1cm4gdGhpcy5kYXRhU2VydmljZS51cGRhdGVCeUlkKGlkKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWIm+W7uuaWsOWunuS9k++8jOW5tuWKoOi9vVxyXG4gICAqL1xyXG4gIHB1YmxpYyBjcmVhdGUoZGVmYXVsdFZhbHVlPzogYW55KTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybiB0aGlzLmRhdGFTZXJ2aWNlLmNyZWF0ZShkZWZhdWx0VmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6L+95Yqg5a6e5L2TXHJcbiAgICovXHJcbiAgcHVibGljIGFwcGVuZChkZWZhdWx0VmFsdWU/OiBhbnkpOiBPYnNlcnZhYmxlPFQ+IHtcclxuICAgIHJldHVybiB0aGlzLmRhdGFTZXJ2aWNlLmFwcGVuZChkZWZhdWx0VmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Yib5bu65a2Q5a6e5L2T77yM5bm26L+95YqgXHJcbiAgICogQHBhcmFtIGZwYXRoIOeItui3r+W+hO+8jOagvOW8j+W9ouWmgu+8mi8xL2VkdXPvvIjku47ooajvvInmiJYvMS9lZHVzLzIvZ3JhZGVz77yI5LuO5LuO6KGo77yJXHJcbiAgICovXHJcbiAgcHVibGljIGFwcGVuZEJ5UGF0aChmcGF0aDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybiB0aGlzLmRhdGFTZXJ2aWNlLmFwcGVuZEJ5UGF0aChmcGF0aCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmoLnmja5pZOWIoOmZpOWunuS9k1xyXG4gICAqIEBwYXJhbSBpZCDlhoXnoIFcclxuICAgKi9cclxuICBwdWJsaWMgcmVtb3ZlQnlJZChpZDogc3RyaW5nLCBpZlNhdmU/OiBib29sZWFuKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XHJcbiAgICByZXR1cm4gdGhpcy5kYXRhU2VydmljZS5yZW1vdmVCeUlkKGlkLCBpZlNhdmUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5om56YeP5Yig6ZmkXHJcbiAgICogQHBhcmFtIGlkIOWGheeggVxyXG4gICAqIEBwYXJhbSBpZlNhdmUg5piv5ZCm5L+d5a2YXHJcbiAgICovXHJcbiAgcHVibGljIHJlbW92ZUJ5SWRzKGlkczogc3RyaW5nW10sIGlmU2F2ZT86IGJvb2xlYW4pOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZGF0YVNlcnZpY2UucmVtb3ZlQnlJZHMoaWRzLCBpZlNhdmUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Yig6Zmk5a2Q57qnXHJcbiAgICogQHBhcmFtIHBhdGgg6Lev5b6EXHJcbiAgICogQHBhcmFtIGlkICAg5YaF56CBXHJcbiAgICovXHJcbiAgcHVibGljIHJlbW92ZUJ5UGF0aChmcGF0aDogc3RyaW5nLCBpZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XHJcbiAgICByZXR1cm4gdGhpcy5kYXRhU2VydmljZS5yZW1vdmVCeVBhdGgoZnBhdGgsIGlkKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog5bCGaWTlr7nlupTnmoTlrp7kvZPnmoTlj5jmm7Tmj5DkuqTnmoTmnI3liqHlmajnq69cclxuICAgKi9cclxuICBwdWJsaWMgdXBkYXRlQ2hhbmdlc0J5SWQoaWQ6IHN0cmluZyk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZGF0YVNlcnZpY2UudXBkYXRlQ2hhbmdlc0J5SWQoaWQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5o+Q5LqkcGF0aOWvueW6lOWunuS9k+eahOWPmOabtFxyXG4gICAqL1xyXG4gIHB1YmxpYyB1cGRhdGVDaGFuZ2VzQnlQYXRoKHBhdGg6IHN0cmluZywgaWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ05vdCBJbXBsZW1lbnQnKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog5o+Q5Lqk5omA5pyJ5Y+Y5pu0XHJcbiAgICovXHJcbiAgcHVibGljIHVwZGF0ZUFsbENoYW5nZXMoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XHJcbiAgICByZXR1cm4gdGhpcy5kYXRhU2VydmljZS51cGRhdGVBbGxDaGFuZ2VzKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlupTnlKjlj5jmm7RcclxuICAgKi9cclxuICBwdWJsaWMgYXBwbHlDaGFuZ2VzKCk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZGF0YVNlcnZpY2UuYXBwbHlDaGFuZ2VzKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmj5DkuqTmlbDmja7lj5jmm7Tlkozlj5jph4/lj5jmm7TvvIzpgJrov4dyZXRyaWV2ZeaooeaLn1xyXG4gICAqIEBpbnRlcm5hbFxyXG4gICAqL1xyXG4gIHB1YmxpYyB1cGRhdGVEYXRhQW5kVmFyaWFibGVDaGFuZ2VzKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICBjb25zdCBmaWx0ZXJDb25kaXRpb25zOiBhbnlbXSA9IFtdO1xyXG4gICAgY29uc3Qgc29ydENvbmRpdGlvbnM6IGFueVtdID0gW107XHJcbiAgICBjb25zdCBlbnRpdHlGaWx0ZXIgPSB7XHJcbiAgICAgIEZpbHRlckNvbmRpdGlvbnM6IGZpbHRlckNvbmRpdGlvbnMsXHJcbiAgICAgIFNvcnRDb25kaXRpb25zOiBzb3J0Q29uZGl0aW9ucyxcclxuICAgICAgSXNVc2VQYWdpbmF0aW9uOiB0cnVlLFxyXG4gICAgICBQYWdpbmF0aW9uOiB7XHJcbiAgICAgICAgUGFnZUluZGV4OiAxLFxyXG4gICAgICAgIFBhZ2VTaXplOiAxLFxyXG4gICAgICAgIFBhZ2VDb3VudDogMCxcclxuICAgICAgICBUb3RhbENvdW50OiAwXHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICBjb25zdCBlbnRpdHlGaWx0ZXJKc29uID0gSlNPTi5zdHJpbmdpZnkoZW50aXR5RmlsdGVyKTtcclxuICAgIGNvbnN0IHJlcXVlc3RJbmZvID0gdGhpcy5yZXN0U2VydmljZS5idWlsZFJlcXVlc3RJbmZvKCk7XHJcbiAgICAvLyDmsqHmnInlj5jmm7Tml7bkuI3lho3mj5DkuqTlj5jmm7RcclxuICAgIGlmICh0aGlzLmlzRW1wdHlSZXF1ZXN0SW5mbyhyZXF1ZXN0SW5mbykpIHtcclxuICAgICAgcmV0dXJuIG9mKG51bGwpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5yZXN0U2VydmljZS5iYXNlVXJpfS9leHRlbnNpb24vcXVlcnk/ZW50aXR5RmlsdGVyPSR7ZW50aXR5RmlsdGVySnNvbn1gO1xyXG4gICAgY29uc3QgYm9keSA9IHJlcXVlc3RJbmZvO1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgYm9keVxyXG4gICAgfTtcclxuICAgIHJldHVybiB0aGlzLnJlc3RTZXJ2aWNlLmludm9rZSh1cmwsICdQVVQnLCBudWxsLCBvcHRpb25zLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlupTnlKhpZOWvueW6lOaVsOaNrueahOWPmOabtFxyXG4gICAqL1xyXG4gIHB1YmxpYyBhcHBseUNoYW5nZXNCeUlkKGlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcclxuICAgIHJldHVybiB0aGlzLmRhdGFTZXJ2aWNlLmFwcGx5Q2hhbmdlc0J5SWQoaWQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Y+W5raI5Y+Y5pu0XHJcbiAgICovXHJcbiAgcHVibGljIGNhbmNlbENoYW5nZXMob3B0aW9ucz86IGFueSk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xyXG4gICAgcmV0dXJuIHRoaXMuZGF0YVNlcnZpY2UuY2FuY2VsQ2hhbmdlcyhvcHRpb25zKTtcclxuICB9XHJcblxyXG4gIC8vICNlbmRyZWdpb25cclxuXHJcblxyXG4gIC8vICNyZWdpb24g5pWw5o2u5Y+Y5pu06ZuG5aSE55CGXHJcblxyXG4gIC8qKlxyXG4gICAqIOa4heepuuaJgOacieacrOWcsOWunuS9k+eahOWPmOabtOmbhlxyXG4gICAqL1xyXG4gIHB1YmxpYyBjbGVhckFsbEVudGl0eUNoYW5nZXMoKTogdm9pZCB7XHJcbiAgICByZXR1cm4gdGhpcy5lbnRpdHlNYW5hZ2VyLmNsZWFyQWxsRW50aXR5Q2hhbmdlcygpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5pWw5o2u5Y+Y5pu0XHJcbiAgICovXHJcbiAgcHVibGljIGdldERhdGFDaGFuZ2VEZXRhaWxzKCk6IENoYW5nZURldGFpbFtdIHtcclxuICAgIHJldHVybiB0aGlzLmVudGl0eU1hbmFnZXIuYnVpbGRBbGxFbnRpdHlDaGFuZ2VEZXRhaWxzKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlpITnkIbmlbDmja7lj5jmm7RcclxuICAgKi9cclxuICBwdWJsaWMgaGFuZGxlRGF0YUNoYW5nZURldGFpbHMoY2hhbmdlRGV0YWlsczogQ2hhbmdlRGV0YWlsW10pOiB2b2lkIHtcclxuICAgIHJldHVybiB0aGlzLmVudGl0eU1hbmFnZXIuaGFuZGxlRGF0YUNoYW5nZURldGFpbHMoY2hhbmdlRGV0YWlscyk7XHJcbiAgfVxyXG5cclxuICAvLyAjZW5kcmVnaW9uXHJcblxyXG5cclxuICAvLyAjcmVnaW9uIOWPmOmHj+WPmOabtOmbhuWkhOeQhlxyXG5cclxuICAvKipcclxuICAgKiDojrflj5blj5jph4/lj5jmm7RcclxuICAgKi9cclxuICBwdWJsaWMgZ2V0VmFyaWFibGVDaGFuZ2VEZXRhaWwoKTogQ2hhbmdlRGV0YWlsIHtcclxuICAgIHJldHVybiB0aGlzLnZhcmlhYmxlTWFuYWdlci5idWlsZENoYW5nZURldGFpbCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5aSE55CG5Y+Y6YeP5Y+Y5pu0XHJcbiAgICovXHJcbiAgcHVibGljIGhhbmRsZVZhcmlhYmxlQ2hhbmdlRGV0YWlsKGNoYW5nZURldGFpbDogQ2hhbmdlRGV0YWlsKSB7XHJcbiAgICB0aGlzLnZhcmlhYmxlTWFuYWdlci5oYW5kbGVDaGFuZ2VEZXRhaWwoY2hhbmdlRGV0YWlsKTtcclxuICB9XHJcblxyXG4gIC8vICNlbmRyZWdpb25cclxuICAvKipcclxuICAgKiDlj5jmm7Tpm4bmmK/lkKbkuLrnqbpcclxuICAgKiBAcGFyYW0gcmVxdWVzdEluZm8gcmVxdWVzdEluZm9cclxuICAgKi9cclxuICBwcml2YXRlIGlzRW1wdHlSZXF1ZXN0SW5mbyhyZXF1ZXN0SW5mbzogUmVxdWVzdEluZm8pIHtcclxuICAgIGlmICghcmVxdWVzdEluZm8pIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBpZiAoKCFyZXF1ZXN0SW5mby5kYXRhQ2hhbmdlIHx8IHJlcXVlc3RJbmZvLmRhdGFDaGFuZ2UubGVuZ3RoIDwgMSkgJiYgKCFyZXF1ZXN0SW5mby52YXJpYWJsZUNoYW5nZSB8fCBPYmplY3Qua2V5cyhyZXF1ZXN0SW5mby52YXJpYWJsZUNoYW5nZSkubGVuZ3RoIDwgMSkpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBEZXByZWNhdGVkQmVmUmVwb3NpdG9yeSB9O1xyXG4iXX0=