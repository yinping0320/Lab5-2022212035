/**
 * @fileoverview added by tsickle
 * Generated from: lib/bef_entity_manager.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 * @Author: Witt
 * @Date: 2019-03-07 17:24:38
 * @Last Modified by:   Witt
 * @Last Modified time: 2019-03-07 17:24:38
 */
import { EntityManager } from '@farris/devkit';
import { BefChangeBuilder } from './bef_change_builder';
import { BefChangeHandler } from './bef_change_handler';
/**
 * 实体管理类：管理Entity和
 * \@todo
 * 1、实体管理应该放在Devkit中；
 * 2、目前只是简单代码拆分，待进一步明确职责。
 * @template T
 */
var /**
 * 实体管理类：管理Entity和
 * \@todo
 * 1、实体管理应该放在Devkit中；
 * 2、目前只是简单代码拆分，待进一步明确职责。
 * @template T
 */
BefEntityManager = /** @class */ (function (_super) {
    tslib_1.__extends(BefEntityManager, _super);
    /**
     * 构造函数
     */
    function BefEntityManager(entityCollection) {
        var _this = _super.call(this, entityCollection) || this;
        _this.changeBuilder = new BefChangeBuilder(_this.entityCollection.entityType, _this.entityCollection);
        _this.changeHandler = new BefChangeHandler();
        return _this;
    }
    // #region 处理ChangeDetail相关
    /**
     * 获取数据变更
     */
    // #region 处理ChangeDetail相关
    /**
     * 获取数据变更
     * @return {?}
     */
    BefEntityManager.prototype.buildAllEntityChangeDetails = 
    // #region 处理ChangeDetail相关
    /**
     * 获取数据变更
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var changeDetails = [];
        /** @type {?} */
        var entities = this.entityCollection.getAllEntities();
        entities.forEach((/**
         * @param {?} entity
         * @return {?}
         */
        function (entity) {
            if (entity.changes.length === 0) {
                return;
            }
            /** @type {?} */
            var changeDetail = _this.changeBuilder.build(entity.changes);
            // 防止空id的变更被提交
            // @todo：此处判断应该放到更底层，临时修复Bug。
            if (changeDetail && changeDetail.ChangeInfo && changeDetail.ChangeInfo.DataId) {
                changeDetails.push(changeDetail);
            }
        }));
        return changeDetails;
    };
    /**
     * 获取单个实体
     */
    /**
     * 获取单个实体
     * @param {?} id
     * @return {?}
     */
    BefEntityManager.prototype.buildEntityChangeDetailById = /**
     * 获取单个实体
     * @param {?} id
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var entity = this.entityCollection.getEntityById(id);
        if (entity.changes.length === 0) {
            return null;
        }
        /** @type {?} */
        var changeDetail = this.changeBuilder.build(entity.changes);
        return changeDetail;
    };
    /**
     * 应用数据变更
     * @param changeDetails ChangeDetail数组
     */
    /**
     * 应用数据变更
     * @param {?} changeDetails ChangeDetail数组
     * @return {?}
     */
    BefEntityManager.prototype.handleDataChangeDetails = /**
     * 应用数据变更
     * @param {?} changeDetails ChangeDetail数组
     * @return {?}
     */
    function (changeDetails) {
        this.changeHandler.handle(this.entityType, this.entityCollection, changeDetails);
    };
    // #endregion
    /**
     * 清空所有实体
     */
    // #endregion
    /**
     * 清空所有实体
     * @return {?}
     */
    BefEntityManager.prototype.reset = 
    // #endregion
    /**
     * 清空所有实体
     * @return {?}
     */
    function () {
        this.entityCollection.clear();
    };
    return BefEntityManager;
}(EntityManager));
if (false) {
    /**
     * ChangeDetail构造器
     * @type {?}
     */
    BefEntityManager.prototype.changeBuilder;
    /**
     * ChangeDetail处理器
     * @type {?}
     */
    BefEntityManager.prototype.changeHandler;
}
export { BefEntityManager };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX2VudGl0eV9tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9iZWYvIiwic291cmNlcyI6WyJsaWIvYmVmX2VudGl0eV9tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQU9BLE9BQU8sRUFBdUQsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHcEcsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7Ozs7Ozs7O0FBU3hEOzs7Ozs7OztJQUFpRCw0Q0FBZ0I7SUFhL0Q7O09BRUc7SUFDSCwwQkFBWSxnQkFBcUM7UUFBakQsWUFDRSxrQkFBTSxnQkFBZ0IsQ0FBQyxTQUd4QjtRQUZDLEtBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxnQkFBZ0IsQ0FBQyxLQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxFQUFFLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ25HLEtBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDOztJQUM5QyxDQUFDO0lBR0QsMkJBQTJCO0lBRzNCOztPQUVHOzs7Ozs7SUFDSSxzREFBMkI7Ozs7OztJQUFsQztRQUFBLGlCQWdCQzs7WUFmTyxhQUFhLEdBQW1CLEVBQUU7O1lBQ2xDLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFO1FBQ3ZELFFBQVEsQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQyxNQUFjO1lBQzlCLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUMvQixPQUFPO2FBQ1I7O2dCQUNLLFlBQVksR0FBRyxLQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO1lBRTdELGNBQWM7WUFDZCw2QkFBNkI7WUFDN0IsSUFBSSxZQUFZLElBQUksWUFBWSxDQUFDLFVBQVUsSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRTtnQkFDN0UsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUNsQztRQUNILENBQUMsRUFBQyxDQUFDO1FBQ0gsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztJQUVEOztPQUVHOzs7Ozs7SUFDSSxzREFBMkI7Ozs7O0lBQWxDLFVBQW1DLEVBQVU7O1lBQ3JDLE1BQU0sR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztRQUN0RCxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQztTQUNiOztZQUNLLFlBQVksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO1FBQzdELE9BQU8sWUFBWSxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7O09BR0c7Ozs7OztJQUNJLGtEQUF1Qjs7Ozs7SUFBOUIsVUFBK0IsYUFBNkI7UUFDMUQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDbkYsQ0FBQztJQUVELGFBQWE7SUFFYjs7T0FFRzs7Ozs7O0lBQ0ksZ0NBQUs7Ozs7OztJQUFaO1FBQ0UsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFSCx1QkFBQztBQUFELENBQUMsQUE1RUQsQ0FBaUQsYUFBYSxHQTRFN0Q7Ozs7OztJQXRFQyx5Q0FBdUM7Ozs7O0lBS3ZDLHlDQUF1Qzs7QUFtRXpDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQEF1dGhvcjogV2l0dFxyXG4gKiBARGF0ZTogMjAxOS0wMy0wNyAxNzoyNDozOFxyXG4gKiBATGFzdCBNb2RpZmllZCBieTogICBXaXR0XHJcbiAqIEBMYXN0IE1vZGlmaWVkIHRpbWU6IDIwMTktMDMtMDcgMTc6MjQ6MzhcclxuICovXHJcblxyXG5pbXBvcnQgeyBFbnRpdHksIEVudGl0eUxpc3QsIEVudGl0eUZhY3RvcnksIEVudGl0eUNvbGxlY3Rpb24sIEVudGl0eU1hbmFnZXIgfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcbmltcG9ydCB7IENoYW5nZURldGFpbH0gZnJvbSAnLi90eXBlcyc7XHJcbmltcG9ydCB7IEVudGl0eVV0aWwgfSBmcm9tICcuL2VudGl0eV91dGlsJztcclxuaW1wb3J0IHsgQmVmQ2hhbmdlQnVpbGRlciB9IGZyb20gJy4vYmVmX2NoYW5nZV9idWlsZGVyJztcclxuaW1wb3J0IHsgQmVmQ2hhbmdlSGFuZGxlciB9IGZyb20gJy4vYmVmX2NoYW5nZV9oYW5kbGVyJztcclxuXHJcblxyXG4vKipcclxuICog5a6e5L2T566h55CG57G777ya566h55CGRW50aXR55ZKMXHJcbiAqIEB0b2RvXHJcbiAqIDHjgIHlrp7kvZPnrqHnkIblupTor6XmlL7lnKhEZXZraXTkuK3vvJtcclxuICogMuOAgeebruWJjeWPquaYr+eugOWNleS7o+eggeaLhuWIhu+8jOW+hei/m+S4gOatpeaYjuehruiBjOi0o+OAglxyXG4gKi9cclxuY2xhc3MgQmVmRW50aXR5TWFuYWdlcjxUIGV4dGVuZHMgRW50aXR5PiBleHRlbmRzIEVudGl0eU1hbmFnZXI8VD4ge1xyXG5cclxuXHJcbiAgLyoqXHJcbiAgICogQ2hhbmdlRGV0YWls5p6E6YCg5ZmoXHJcbiAgICovXHJcbiAgcHVibGljIGNoYW5nZUJ1aWxkZXI6IEJlZkNoYW5nZUJ1aWxkZXI7XHJcblxyXG4gIC8qKlxyXG4gICAqIENoYW5nZURldGFpbOWkhOeQhuWZqFxyXG4gICAqL1xyXG4gIHB1YmxpYyBjaGFuZ2VIYW5kbGVyOiBCZWZDaGFuZ2VIYW5kbGVyO1xyXG5cclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihlbnRpdHlDb2xsZWN0aW9uOiBFbnRpdHlDb2xsZWN0aW9uPFQ+KSB7XHJcbiAgICBzdXBlcihlbnRpdHlDb2xsZWN0aW9uKTtcclxuICAgIHRoaXMuY2hhbmdlQnVpbGRlciA9IG5ldyBCZWZDaGFuZ2VCdWlsZGVyKHRoaXMuZW50aXR5Q29sbGVjdGlvbi5lbnRpdHlUeXBlLCB0aGlzLmVudGl0eUNvbGxlY3Rpb24pO1xyXG4gICAgdGhpcy5jaGFuZ2VIYW5kbGVyID0gbmV3IEJlZkNoYW5nZUhhbmRsZXIoKTtcclxuICB9XHJcblxyXG5cclxuICAvLyAjcmVnaW9uIOWkhOeQhkNoYW5nZURldGFpbOebuOWFs1xyXG5cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5pWw5o2u5Y+Y5pu0XHJcbiAgICovXHJcbiAgcHVibGljIGJ1aWxkQWxsRW50aXR5Q2hhbmdlRGV0YWlscygpOiBDaGFuZ2VEZXRhaWxbXSB7XHJcbiAgICBjb25zdCBjaGFuZ2VEZXRhaWxzOiBDaGFuZ2VEZXRhaWxbXSA9IFtdO1xyXG4gICAgY29uc3QgZW50aXRpZXMgPSB0aGlzLmVudGl0eUNvbGxlY3Rpb24uZ2V0QWxsRW50aXRpZXMoKTtcclxuICAgIGVudGl0aWVzLmZvckVhY2goKGVudGl0eTogRW50aXR5KSA9PiB7XHJcbiAgICAgIGlmIChlbnRpdHkuY2hhbmdlcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgY2hhbmdlRGV0YWlsID0gdGhpcy5jaGFuZ2VCdWlsZGVyLmJ1aWxkKGVudGl0eS5jaGFuZ2VzKTtcclxuICAgICAgXHJcbiAgICAgIC8vIOmYsuatouepumlk55qE5Y+Y5pu06KKr5o+Q5LqkXHJcbiAgICAgIC8vIEB0b2Rv77ya5q2k5aSE5Yik5pat5bqU6K+l5pS+5Yiw5pu05bqV5bGC77yM5Li05pe25L+u5aSNQnVn44CCXHJcbiAgICAgIGlmIChjaGFuZ2VEZXRhaWwgJiYgY2hhbmdlRGV0YWlsLkNoYW5nZUluZm8gJiYgY2hhbmdlRGV0YWlsLkNoYW5nZUluZm8uRGF0YUlkKSB7XHJcbiAgICAgICAgY2hhbmdlRGV0YWlscy5wdXNoKGNoYW5nZURldGFpbCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGNoYW5nZURldGFpbHM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDojrflj5bljZXkuKrlrp7kvZNcclxuICAgKi9cclxuICBwdWJsaWMgYnVpbGRFbnRpdHlDaGFuZ2VEZXRhaWxCeUlkKGlkOiBzdHJpbmcpOiBDaGFuZ2VEZXRhaWwge1xyXG4gICAgY29uc3QgZW50aXR5ID0gdGhpcy5lbnRpdHlDb2xsZWN0aW9uLmdldEVudGl0eUJ5SWQoaWQpO1xyXG4gICAgaWYgKGVudGl0eS5jaGFuZ2VzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIGNvbnN0IGNoYW5nZURldGFpbCA9IHRoaXMuY2hhbmdlQnVpbGRlci5idWlsZChlbnRpdHkuY2hhbmdlcyk7XHJcbiAgICByZXR1cm4gY2hhbmdlRGV0YWlsO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5bqU55So5pWw5o2u5Y+Y5pu0XHJcbiAgICogQHBhcmFtIGNoYW5nZURldGFpbHMgQ2hhbmdlRGV0YWls5pWw57uEXHJcbiAgICovXHJcbiAgcHVibGljIGhhbmRsZURhdGFDaGFuZ2VEZXRhaWxzKGNoYW5nZURldGFpbHM6IENoYW5nZURldGFpbFtdKTogdm9pZCB7XHJcbiAgICB0aGlzLmNoYW5nZUhhbmRsZXIuaGFuZGxlKHRoaXMuZW50aXR5VHlwZSwgdGhpcy5lbnRpdHlDb2xsZWN0aW9uLCBjaGFuZ2VEZXRhaWxzKTtcclxuICB9XHJcblxyXG4gIC8vICNlbmRyZWdpb25cclxuXHJcbiAgLyoqXHJcbiAgICog5riF56m65omA5pyJ5a6e5L2TXHJcbiAgICovXHJcbiAgcHVibGljIHJlc2V0KCkge1xyXG4gICAgdGhpcy5lbnRpdHlDb2xsZWN0aW9uLmNsZWFyKCk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IHsgQmVmRW50aXR5TWFuYWdlciB9O1xyXG4iXX0=