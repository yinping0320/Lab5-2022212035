/**
 * @fileoverview added by tsickle
 * Generated from: lib/preset_bef_repository.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { DataTypeInfo, EntityCollection, EntityTypeFactory } from '@farris/devkit';
import { BefEntityManager } from './bef_entity_manager';
import { BefRepository } from './bef_repository';
/**
 * @template T
 */
var /**
 * @template T
 */
PresetBefRepository = /** @class */ (function (_super) {
    tslib_1.__extends(PresetBefRepository, _super);
    function PresetBefRepository(injector, schema) {
        var _this = _super.call(this, injector) || this;
        _this.schema = schema;
        /** @type {?} */
        var entityTypeFactory = new EntityTypeFactory();
        _this.entityType = (/** @type {?} */ (entityTypeFactory.create(schema)));
        _this.entityTypeInfo = new DataTypeInfo(_this.entityType);
        _this.entityCollection = new EntityCollection(_this.entityType);
        // 初始化实体管理器
        _this.entityManager = new BefEntityManager(_this.entityCollection);
        return _this;
    }
    /**
     * @param {?} defaultValues
     * @return {?}
     */
    PresetBefRepository.prototype.batchAppend = /**
     * @param {?} defaultValues
     * @return {?}
     */
    function (defaultValues) {
        throw new Error('Method not implemented.');
    };
    return PresetBefRepository;
}(BefRepository));
if (false) {
    /** @type {?} */
    PresetBefRepository.prototype.schema;
}
export { PresetBefRepository };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2V0X2JlZl9yZXBvc2l0b3J5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9iZWYvIiwic291cmNlcyI6WyJsaWIvcHJlc2V0X2JlZl9yZXBvc2l0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQVUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7QUFFakQ7Ozs7SUFBb0QsK0NBQWdCO0lBS2xFLDZCQUFZLFFBQWtCLEVBQVMsTUFBVztRQUFsRCxZQUNFLGtCQUFNLFFBQVEsQ0FBQyxTQU9oQjtRQVJzQyxZQUFNLEdBQU4sTUFBTSxDQUFLOztZQUUxQyxpQkFBaUIsR0FBc0IsSUFBSSxpQkFBaUIsRUFBRTtRQUNwRSxLQUFJLENBQUMsVUFBVSxHQUFHLG1CQUFBLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBUSxDQUFDO1FBQzNELEtBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3hELEtBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLGdCQUFnQixDQUFDLEtBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM5RCxXQUFXO1FBQ1gsS0FBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLGdCQUFnQixDQUFDLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDOztJQUNuRSxDQUFDOzs7OztJQVpELHlDQUFXOzs7O0lBQVgsVUFBWSxhQUFvQjtRQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDN0MsQ0FBQztJQVdILDBCQUFDO0FBQUQsQ0FBQyxBQWRELENBQW9ELGFBQWEsR0FjaEU7OztJQVRpQyxxQ0FBa0I7O0FBV3BELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YVR5cGVJbmZvLCBFbnRpdHksIEVudGl0eUNvbGxlY3Rpb24sIEVudGl0eVR5cGVGYWN0b3J5IH0gZnJvbSAnQGZhcnJpcy9kZXZraXQnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEJlZkVudGl0eU1hbmFnZXIgfSBmcm9tICcuL2JlZl9lbnRpdHlfbWFuYWdlcic7XHJcbmltcG9ydCB7IEJlZlJlcG9zaXRvcnkgfSBmcm9tICcuL2JlZl9yZXBvc2l0b3J5JztcclxuXHJcbmNsYXNzIFByZXNldEJlZlJlcG9zaXRvcnk8VCBleHRlbmRzIEVudGl0eT4gZXh0ZW5kcyBCZWZSZXBvc2l0b3J5PFQ+IHtcclxuICBiYXRjaEFwcGVuZChkZWZhdWx0VmFsdWVzOiBhbnlbXSk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ01ldGhvZCBub3QgaW1wbGVtZW50ZWQuJyk7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcihpbmplY3RvcjogSW5qZWN0b3IsIHB1YmxpYyBzY2hlbWE6IGFueSkge1xyXG4gICAgc3VwZXIoaW5qZWN0b3IpO1xyXG4gICAgY29uc3QgZW50aXR5VHlwZUZhY3Rvcnk6IEVudGl0eVR5cGVGYWN0b3J5ID0gbmV3IEVudGl0eVR5cGVGYWN0b3J5KCk7XHJcbiAgICB0aGlzLmVudGl0eVR5cGUgPSBlbnRpdHlUeXBlRmFjdG9yeS5jcmVhdGUoc2NoZW1hKSBhcyAgYW55O1xyXG4gICAgdGhpcy5lbnRpdHlUeXBlSW5mbyA9IG5ldyBEYXRhVHlwZUluZm8odGhpcy5lbnRpdHlUeXBlKTtcclxuICAgIHRoaXMuZW50aXR5Q29sbGVjdGlvbiA9IG5ldyBFbnRpdHlDb2xsZWN0aW9uKHRoaXMuZW50aXR5VHlwZSk7XHJcbiAgICAvLyDliJ3lp4vljJblrp7kvZPnrqHnkIblmahcclxuICAgIHRoaXMuZW50aXR5TWFuYWdlciA9IG5ldyBCZWZFbnRpdHlNYW5hZ2VyKHRoaXMuZW50aXR5Q29sbGVjdGlvbik7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBQcmVzZXRCZWZSZXBvc2l0b3J5IH07XHJcbiJdfQ==