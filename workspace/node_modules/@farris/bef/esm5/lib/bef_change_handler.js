/**
 * @fileoverview added by tsickle
 * Generated from: lib/bef_change_handler.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EntityCollection } from '@farris/devkit';
import { EntityUtil } from './entity_util';
import { ChangeDetailType } from './types';
/**
 * 处理服务器端变更
 */
var /**
 * 处理服务器端变更
 */
BefChangeHandler = /** @class */ (function () {
    /**
     * 构造函数
     */
    function BefChangeHandler() {
    }
    /**
     * 处理Bef变更集
     */
    /**
     * 处理Bef变更集
     * @param {?} entityType
     * @param {?} entityCollection
     * @param {?} changeDetails
     * @return {?}
     */
    BefChangeHandler.prototype.handle = /**
     * 处理Bef变更集
     * @param {?} entityType
     * @param {?} entityCollection
     * @param {?} changeDetails
     * @return {?}
     */
    function (entityType, entityCollection, changeDetails) {
        this.handleChangeDetails(entityType, entityCollection, changeDetails);
    };
    /**
     * 处理Bef变更集（批量）
     * @param entities
     */
    /**
     * 处理Bef变更集（批量）
     * @param {?} entityType
     * @param {?} entityList
     * @param {?} changeDetails
     * @return {?}
     */
    BefChangeHandler.prototype.handleChangeDetails = /**
     * 处理Bef变更集（批量）
     * @param {?} entityType
     * @param {?} entityList
     * @param {?} changeDetails
     * @return {?}
     */
    function (entityType, entityList, changeDetails) {
        var _this = this;
        if (!changeDetails) {
            return;
        }
        changeDetails.forEach((/**
         * @param {?} changeDetail
         * @return {?}
         */
        function (changeDetail) {
            /** @type {?} */
            var id = (/** @type {?} */ ((changeDetail.ChangeInfo.dataId || changeDetail.ChangeInfo.DataId)));
            /** @type {?} */
            var entity = _this.getEntityById(entityList, id);
            if (!entity) {
                return;
            }
            _this.handleChangeDetail(entityType, entity, changeDetail);
        }));
    };
    /**
     * 处理Bef变更集（单条）
     */
    /**
     * 处理Bef变更集（单条）
     * @param {?} entityType
     * @param {?} entity
     * @param {?} changeDetail
     * @return {?}
     */
    BefChangeHandler.prototype.handleChangeDetail = /**
     * 处理Bef变更集（单条）
     * @param {?} entityType
     * @param {?} entity
     * @param {?} changeDetail
     * @return {?}
     */
    function (entityType, entity, changeDetail) {
        var _this = this;
        if (!changeDetail || !entity) {
            return;
        }
        // 只处理值变更，其他变更待进一步验证。
        if (changeDetail.ChangeType !== ChangeDetailType.Modify) {
            return;
        }
        /** @type {?} */
        var changeInfo = changeDetail.ChangeInfo;
        Object.keys(changeInfo).forEach((/**
         * @param {?} propName
         * @return {?}
         */
        function (propName) {
            var _a = EntityUtil.getPropInfo(entityType, propName), propType = _a.propType, propEntityType = _a.propEntityType;
            if (propType === 'NgField') {
                // 简单属性：更新值
                entity[propName] = changeInfo[propName];
            }
            else if (propType === 'NgObject') {
                /** @type {?} */
                var childEntity = (/** @type {?} */ (entity[propName]));
                if (childEntity.primaryKey) {
                    // 关联对象：重新加载数据
                    /** @type {?} */
                    var childEntityData = changeInfo[propName];
                    childEntity.load(childEntityData);
                }
                else {
                    // 值对象：递归处理变更
                    /** @type {?} */
                    var childChangeDetail = (/** @type {?} */ (changeInfo[propName]));
                    _this.handleChangeDetail(propEntityType, childEntity, childChangeDetail);
                }
            }
            else if (propType === 'NgList') {
                // 子列表：递归处理变更集合
                /** @type {?} */
                var childEntityList = (/** @type {?} */ (entity[propName]));
                /** @type {?} */
                var childChangeDetails = (/** @type {?} */ (changeInfo[propName]));
                _this.handleChangeDetails(propEntityType, childEntityList, childChangeDetails);
            }
        }));
    };
    /**
     * 根据id获取实体，屏蔽EntityCollection和EntityList之间的差异
     */
    /**
     * 根据id获取实体，屏蔽EntityCollection和EntityList之间的差异
     * @private
     * @param {?} entityList
     * @param {?} id
     * @return {?}
     */
    BefChangeHandler.prototype.getEntityById = /**
     * 根据id获取实体，屏蔽EntityCollection和EntityList之间的差异
     * @private
     * @param {?} entityList
     * @param {?} id
     * @return {?}
     */
    function (entityList, id) {
        /** @type {?} */
        var target;
        if (entityList instanceof EntityCollection) {
            target = entityList.getEntityById(id);
        }
        else {
            target = entityList.get(id);
        }
        return target ? target : null;
    };
    return BefChangeHandler;
}());
export { BefChangeHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVmX2NoYW5nZV9oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9iZWYvIiwic291cmNlcyI6WyJsaWIvYmVmX2NoYW5nZV9oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsT0FBTyxFQUFzQixnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFnQixNQUFNLFNBQVMsQ0FBQzs7OztBQUt6RDs7OztJQUVFOztPQUVHO0lBQ0g7SUFDQSxDQUFDO0lBRUQ7O09BRUc7Ozs7Ozs7O0lBQ0gsaUNBQU07Ozs7Ozs7SUFBTixVQUNFLFVBQXdCLEVBQ3hCLGdCQUEwQyxFQUMxQyxhQUE2QjtRQUU3QixJQUFJLENBQUMsbUJBQW1CLENBQUMsVUFBVSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFRDs7O09BR0c7Ozs7Ozs7O0lBQ0gsOENBQW1COzs7Ozs7O0lBQW5CLFVBQ0UsVUFBd0IsRUFDeEIsVUFBeUQsRUFDekQsYUFBNkI7UUFIL0IsaUJBaUJDO1FBWkMsSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUNsQixPQUFPO1NBQ1I7UUFFRCxhQUFhLENBQUMsT0FBTzs7OztRQUFDLFVBQUMsWUFBMEI7O2dCQUN6QyxFQUFFLEdBQUcsbUJBQUEsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFVOztnQkFDakYsTUFBTSxHQUFHLEtBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQztZQUNqRCxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNYLE9BQU87YUFDUjtZQUNELEtBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQzVELENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHOzs7Ozs7OztJQUNILDZDQUFrQjs7Ozs7OztJQUFsQixVQUNFLFVBQXdCLEVBQ3hCLE1BQWMsRUFDZCxZQUEwQjtRQUg1QixpQkE2Q0M7UUF2Q0MsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUM1QixPQUFPO1NBQ1I7UUFFRCxxQkFBcUI7UUFDckIsSUFBSSxZQUFZLENBQUMsVUFBVSxLQUFLLGdCQUFnQixDQUFDLE1BQU0sRUFBRTtZQUN2RCxPQUFPO1NBQ1I7O1lBRUssVUFBVSxHQUFHLFlBQVksQ0FBQyxVQUFVO1FBQzFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTzs7OztRQUFDLFVBQUMsUUFBZ0I7WUFDekMsSUFBQSxpREFBMkUsRUFBekUsc0JBQVEsRUFBRSxrQ0FBK0Q7WUFDakYsSUFBSSxRQUFRLEtBQUssU0FBUyxFQUFFO2dCQUUxQixXQUFXO2dCQUNYLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDekM7aUJBQU0sSUFBSSxRQUFRLEtBQUssVUFBVSxFQUFFOztvQkFDNUIsV0FBVyxHQUFHLG1CQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBVTtnQkFDOUMsSUFBSSxXQUFXLENBQUMsVUFBVSxFQUFFOzs7d0JBR3BCLGVBQWUsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDO29CQUM1QyxXQUFXLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO2lCQUVuQztxQkFBTTs7O3dCQUdDLGlCQUFpQixHQUFHLG1CQUFBLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBZ0I7b0JBQzlELEtBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixDQUFDLENBQUM7aUJBQ3pFO2FBRUY7aUJBQU0sSUFBSSxRQUFRLEtBQUssUUFBUSxFQUFFOzs7b0JBRzFCLGVBQWUsR0FBRyxtQkFBQSxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQXNCOztvQkFDeEQsa0JBQWtCLEdBQUcsbUJBQUEsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFrQjtnQkFDakUsS0FBSSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsRUFBRSxlQUFlLEVBQUUsa0JBQWtCLENBQUMsQ0FBQzthQUMvRTtRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHOzs7Ozs7OztJQUNLLHdDQUFhOzs7Ozs7O0lBQXJCLFVBQXNCLFVBQXlELEVBQUUsRUFBVTs7WUFDckYsTUFBYztRQUNsQixJQUFJLFVBQVUsWUFBWSxnQkFBZ0IsRUFBRTtZQUMxQyxNQUFNLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUN2QzthQUFNO1lBQ0wsTUFBTSxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDN0I7UUFDRCxPQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDaEMsQ0FBQztJQUdILHVCQUFDO0FBQUQsQ0FBQyxBQTFHRCxJQTBHQztBQUVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFbnRpdHksIEVudGl0eUxpc3QsIEVudGl0eUNvbGxlY3Rpb24gfSBmcm9tICdAZmFycmlzL2RldmtpdCc7XHJcbmltcG9ydCB7IEVudGl0eVV0aWwgfSBmcm9tICcuL2VudGl0eV91dGlsJztcclxuaW1wb3J0IHsgQ2hhbmdlRGV0YWlsVHlwZSwgQ2hhbmdlRGV0YWlsIH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG4vKipcclxuICog5aSE55CG5pyN5Yqh5Zmo56uv5Y+Y5pu0XHJcbiAqL1xyXG5jbGFzcyBCZWZDaGFuZ2VIYW5kbGVyIHtcclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Ye95pWwXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDlpITnkIZCZWblj5jmm7Tpm4ZcclxuICAgKi9cclxuICBoYW5kbGUoXHJcbiAgICBlbnRpdHlUeXBlOiBUeXBlPEVudGl0eT4sXHJcbiAgICBlbnRpdHlDb2xsZWN0aW9uOiBFbnRpdHlDb2xsZWN0aW9uPEVudGl0eT4sXHJcbiAgICBjaGFuZ2VEZXRhaWxzOiBDaGFuZ2VEZXRhaWxbXVxyXG4gICkge1xyXG4gICAgdGhpcy5oYW5kbGVDaGFuZ2VEZXRhaWxzKGVudGl0eVR5cGUsIGVudGl0eUNvbGxlY3Rpb24sIGNoYW5nZURldGFpbHMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5aSE55CGQmVm5Y+Y5pu06ZuG77yI5om56YeP77yJXHJcbiAgICogQHBhcmFtIGVudGl0aWVzXHJcbiAgICovXHJcbiAgaGFuZGxlQ2hhbmdlRGV0YWlscyhcclxuICAgIGVudGl0eVR5cGU6IFR5cGU8RW50aXR5PixcclxuICAgIGVudGl0eUxpc3Q6IEVudGl0eUxpc3Q8RW50aXR5PiB8IEVudGl0eUNvbGxlY3Rpb248RW50aXR5PixcclxuICAgIGNoYW5nZURldGFpbHM6IENoYW5nZURldGFpbFtdXHJcbiAgKSB7XHJcbiAgICBpZiAoIWNoYW5nZURldGFpbHMpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNoYW5nZURldGFpbHMuZm9yRWFjaCgoY2hhbmdlRGV0YWlsOiBDaGFuZ2VEZXRhaWwpID0+IHtcclxuICAgICAgY29uc3QgaWQgPSAoY2hhbmdlRGV0YWlsLkNoYW5nZUluZm8uZGF0YUlkIHx8IGNoYW5nZURldGFpbC5DaGFuZ2VJbmZvLkRhdGFJZCkgYXMgc3RyaW5nO1xyXG4gICAgICBjb25zdCBlbnRpdHkgPSB0aGlzLmdldEVudGl0eUJ5SWQoZW50aXR5TGlzdCwgaWQpO1xyXG4gICAgICBpZiAoIWVudGl0eSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmhhbmRsZUNoYW5nZURldGFpbChlbnRpdHlUeXBlLCBlbnRpdHksIGNoYW5nZURldGFpbCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWkhOeQhkJlZuWPmOabtOmbhu+8iOWNleadoe+8iVxyXG4gICAqL1xyXG4gIGhhbmRsZUNoYW5nZURldGFpbChcclxuICAgIGVudGl0eVR5cGU6IFR5cGU8RW50aXR5PixcclxuICAgIGVudGl0eTogRW50aXR5LFxyXG4gICAgY2hhbmdlRGV0YWlsOiBDaGFuZ2VEZXRhaWxcclxuICApIHtcclxuXHJcbiAgICBpZiAoIWNoYW5nZURldGFpbCB8fCAhZW50aXR5KSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyDlj6rlpITnkIblgLzlj5jmm7TvvIzlhbbku5blj5jmm7TlvoXov5vkuIDmraXpqozor4HjgIJcclxuICAgIGlmIChjaGFuZ2VEZXRhaWwuQ2hhbmdlVHlwZSAhPT0gQ2hhbmdlRGV0YWlsVHlwZS5Nb2RpZnkpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNoYW5nZUluZm8gPSBjaGFuZ2VEZXRhaWwuQ2hhbmdlSW5mbztcclxuICAgIE9iamVjdC5rZXlzKGNoYW5nZUluZm8pLmZvckVhY2goKHByb3BOYW1lOiBzdHJpbmcpID0+IHtcclxuICAgICAgY29uc3QgeyBwcm9wVHlwZSwgcHJvcEVudGl0eVR5cGUgfSA9IEVudGl0eVV0aWwuZ2V0UHJvcEluZm8oZW50aXR5VHlwZSwgcHJvcE5hbWUpO1xyXG4gICAgICBpZiAocHJvcFR5cGUgPT09ICdOZ0ZpZWxkJykge1xyXG5cclxuICAgICAgICAvLyDnroDljZXlsZ7mgKfvvJrmm7TmlrDlgLxcclxuICAgICAgICBlbnRpdHlbcHJvcE5hbWVdID0gY2hhbmdlSW5mb1twcm9wTmFtZV07XHJcbiAgICAgIH0gZWxzZSBpZiAocHJvcFR5cGUgPT09ICdOZ09iamVjdCcpIHtcclxuICAgICAgICBjb25zdCBjaGlsZEVudGl0eSA9IGVudGl0eVtwcm9wTmFtZV0gYXMgRW50aXR5O1xyXG4gICAgICAgIGlmIChjaGlsZEVudGl0eS5wcmltYXJ5S2V5KSB7XHJcblxyXG4gICAgICAgICAgLy8g5YWz6IGU5a+56LGh77ya6YeN5paw5Yqg6L295pWw5o2uXHJcbiAgICAgICAgICBjb25zdCBjaGlsZEVudGl0eURhdGEgPSBjaGFuZ2VJbmZvW3Byb3BOYW1lXTtcclxuICAgICAgICAgIGNoaWxkRW50aXR5LmxvYWQoY2hpbGRFbnRpdHlEYXRhKTtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuXHJcbiAgICAgICAgICAvLyDlgLzlr7nosaHvvJrpgJLlvZLlpITnkIblj5jmm7RcclxuICAgICAgICAgIGNvbnN0IGNoaWxkQ2hhbmdlRGV0YWlsID0gY2hhbmdlSW5mb1twcm9wTmFtZV0gYXMgQ2hhbmdlRGV0YWlsO1xyXG4gICAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2VEZXRhaWwocHJvcEVudGl0eVR5cGUsIGNoaWxkRW50aXR5LCBjaGlsZENoYW5nZURldGFpbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfSBlbHNlIGlmIChwcm9wVHlwZSA9PT0gJ05nTGlzdCcpIHtcclxuXHJcbiAgICAgICAgLy8g5a2Q5YiX6KGo77ya6YCS5b2S5aSE55CG5Y+Y5pu06ZuG5ZCIXHJcbiAgICAgICAgY29uc3QgY2hpbGRFbnRpdHlMaXN0ID0gZW50aXR5W3Byb3BOYW1lXSBhcyBFbnRpdHlMaXN0PEVudGl0eT47XHJcbiAgICAgICAgY29uc3QgY2hpbGRDaGFuZ2VEZXRhaWxzID0gY2hhbmdlSW5mb1twcm9wTmFtZV0gYXMgQ2hhbmdlRGV0YWlsW107XHJcbiAgICAgICAgdGhpcy5oYW5kbGVDaGFuZ2VEZXRhaWxzKHByb3BFbnRpdHlUeXBlLCBjaGlsZEVudGl0eUxpc3QsIGNoaWxkQ2hhbmdlRGV0YWlscyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5qC55o2uaWTojrflj5blrp7kvZPvvIzlsY/olL1FbnRpdHlDb2xsZWN0aW9u5ZKMRW50aXR5TGlzdOS5i+mXtOeahOW3ruW8glxyXG4gICAqL1xyXG4gIHByaXZhdGUgZ2V0RW50aXR5QnlJZChlbnRpdHlMaXN0OiBFbnRpdHlMaXN0PEVudGl0eT4gfCBFbnRpdHlDb2xsZWN0aW9uPEVudGl0eT4sIGlkOiBzdHJpbmcpOiBFbnRpdHkge1xyXG4gICAgbGV0IHRhcmdldDogRW50aXR5O1xyXG4gICAgaWYgKGVudGl0eUxpc3QgaW5zdGFuY2VvZiBFbnRpdHlDb2xsZWN0aW9uKSB7XHJcbiAgICAgIHRhcmdldCA9IGVudGl0eUxpc3QuZ2V0RW50aXR5QnlJZChpZCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0YXJnZXQgPSBlbnRpdHlMaXN0LmdldChpZCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGFyZ2V0ID8gdGFyZ2V0IDogbnVsbDtcclxuICB9XHJcblxyXG5cclxufVxyXG5cclxuZXhwb3J0IHsgQmVmQ2hhbmdlSGFuZGxlciB9O1xyXG4iXX0=