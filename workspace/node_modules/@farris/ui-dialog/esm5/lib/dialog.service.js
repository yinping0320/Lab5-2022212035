/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var DialogService = /** @class */ (function () {
    function DialogService() {
    }
    /**
     * @param {?=} tags
     * @return {?}
     */
    DialogService.prototype.hasDialogOpened = /**
     * @param {?=} tags
     * @return {?}
     */
    function (tags) {
        /** @type {?} */
        var k = 0;
        /** @type {?} */
        var _tags = 'farris-dialog,.overlay-pane';
        if (tags) {
            _tags += ',' + tags;
        }
        /** @type {?} */
        var dlgs = window.document.querySelectorAll(_tags);
        /** @type {?} */
        var elements = Array.from(dlgs).filter((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return !Array.from(dlgs[0].classList).some((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item == 'f-combo-list'; })); }));
        elements.forEach((/**
         * @param {?} n
         * @return {?}
         */
        function (n) {
            /** @type {?} */
            var n1 = '';
            if (n.tagName === 'DIV') {
                n1 = window.getComputedStyle(n).display;
            }
            else {
                n1 = window.getComputedStyle(n.querySelector('div')).display;
            }
            if (n1 === '' || n1 === 'block') {
                k++;
            }
        }));
        return k > 0;
    };
    DialogService.decorators = [
        { type: Injectable }
    ];
    return DialogService;
}());
export { DialogService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWRpYWxvZy8iLCJzb3VyY2VzIjpbImxpYi9kaWFsb2cuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQztJQUFBO0lBd0JBLENBQUM7Ozs7O0lBdEJHLHVDQUFlOzs7O0lBQWYsVUFBZ0IsSUFBYTs7WUFDdkIsQ0FBQyxHQUFHLENBQUM7O1lBQ0wsS0FBSyxHQUFHLDZCQUE2QjtRQUN6QyxJQUFJLElBQUksRUFBRTtZQUNOLEtBQUssSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFFO1NBQ3hCOztZQUNLLElBQUksR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQzs7WUFDOUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTTs7OztRQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJOzs7O1FBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxJQUFJLElBQUksY0FBYyxFQUF0QixDQUFzQixFQUFDLEVBQW5FLENBQW1FLEVBQUM7UUFDbEgsUUFBUSxDQUFDLE9BQU87Ozs7UUFBQyxVQUFDLENBQU07O2dCQUNoQixFQUFFLEdBQUcsRUFBRTtZQUNYLElBQUksQ0FBQyxDQUFDLE9BQU8sS0FBSyxLQUFLLEVBQUU7Z0JBQ3JCLEVBQUUsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO2FBQzNDO2lCQUFNO2dCQUNILEVBQUUsR0FBSSxNQUFNLENBQUMsZ0JBQWdCLENBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQzthQUNsRTtZQUNELElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssT0FBTyxFQUFFO2dCQUM3QixDQUFDLEVBQUUsQ0FBQzthQUNQO1FBQ0wsQ0FBQyxFQUFDLENBQUM7UUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDZixDQUFDOztnQkF2QkosVUFBVTs7SUF3Qlgsb0JBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXZCWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRGlhbG9nU2VydmljZSB7XHJcbiAgICBoYXNEaWFsb2dPcGVuZWQodGFncz86IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICBsZXQgayA9IDA7XHJcbiAgICAgIGxldCBfdGFncyA9ICdmYXJyaXMtZGlhbG9nLC5vdmVybGF5LXBhbmUnO1xyXG4gICAgICBpZiAodGFncykge1xyXG4gICAgICAgICAgX3RhZ3MgKz0gJywnICsgdGFncyA7XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgZGxncyA9IHdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKF90YWdzKTtcclxuICAgICAgY29uc3QgZWxlbWVudHMgPSBBcnJheS5mcm9tKGRsZ3MpLmZpbHRlcihuID0+ICFBcnJheS5mcm9tKGRsZ3NbMF0uY2xhc3NMaXN0KS5zb21lKGl0ZW0gPT4gaXRlbSA9PSAnZi1jb21iby1saXN0JykpO1xyXG4gICAgICBlbGVtZW50cy5mb3JFYWNoKChuOiBhbnkpID0+IHtcclxuICAgICAgICAgIGxldCBuMSA9ICcnO1xyXG4gICAgICAgICAgaWYgKG4udGFnTmFtZSA9PT0gJ0RJVicpIHtcclxuICAgICAgICAgICAgICBuMSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKG4pLmRpc3BsYXk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIG4xID0gIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBuLnF1ZXJ5U2VsZWN0b3IoJ2RpdicpKS5kaXNwbGF5O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaWYgKG4xID09PSAnJyB8fCBuMSA9PT0gJ2Jsb2NrJykge1xyXG4gICAgICAgICAgICAgIGsrKztcclxuICAgICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gICAgICByZXR1cm4gayA+IDA7XHJcbiAgICB9XHJcbn1cclxuIl19