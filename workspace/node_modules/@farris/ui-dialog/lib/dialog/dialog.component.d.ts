import { OnInit, Renderer2, ElementRef, EventEmitter, TemplateRef, AfterViewInit, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { AngularDraggableDirective } from '@farris/ui-draggable';
import { ModalDirective } from '@farris/ui-modal';
export declare class DialogComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {
    private render2;
    el: ElementRef;
    /** 窗口标题 */
    title: string;
    /** 标题图标 */
    iconCls: string;
    /** 宽度 */
    width: number;
    /** 高度 */
    height: number;
    minWidth: number;
    minHeight: number;
    maxWidth: number;
    maxHeight: number;
    /** 显示底部按钮区域，默认显示 */
    showButtons: boolean;
    /** 显示右上角关闭按钮，默认显示 */
    showCloseButton: boolean;
    /** 显示最大化按钮，默认显示 */
    showMaxButton: boolean;
    /** 显示最小化按钮，默认不显示, 显示出来也没有用 */
    showMinButton: boolean;
    /** 启用拖拽改变尺寸大小 */
    resizable: boolean;
    /** 启用拖动窗口 */
    draggable: boolean;
    /** 按钮对齐方式 */
    buttonAlign: string;
    scrollConfig: {};
    beforeOpen: () => Observable<any> | Promise<any> | boolean;
    beforeClose: () => Observable<any> | Promise<any> | boolean;
    modal: ModalDirective;
    draggbar: AngularDraggableDirective;
    opened: EventEmitter<{}>;
    closed: EventEmitter<{}>;
    resized: EventEmitter<{}>;
    resizing: EventEmitter<{}>;
    maxed: EventEmitter<{}>;
    widthChange: EventEmitter<{}>;
    heightChange: EventEmitter<{}>;
    moving: EventEmitter<{}>;
    enableScroll: boolean;
    buttons: TemplateRef<any>;
    /** 标题栏高度 */
    dialogHeaderHeight: number;
    /** 按钮区高度 */
    dialogFooterHeight: number;
    parentElement: any;
    /** 显示头部 */
    showHeader: boolean;
    /** Html Element */
    dragHandle: any;
    toolTemplate: TemplateRef<any>;
    isMax: boolean;
    dlgHeaderLineHeight: any;
    dlgFooterLineHeight: any;
    private originalWidth;
    private originalHeight;
    private prevWidth;
    private prevHeight;
    private hostId;
    modalContent: ElementRef;
    modalHeader: ElementRef;
    dialogEl: ElementRef;
    /** 窗口最大化时，是否与浏览器之间有间距，当为true时与浏览器边距为 0 */
    maxPadding: boolean;
    private windowResize$;
    postitionStyles: any;
    readonly size: {
        width: number;
        height: number;
        contentHeight: number;
        contentWidth: number;
        header: any;
        footer: any;
    };
    private _windowResizeToMax;
    private _mutationObserver;
    private _dialogEl;
    private footerEl;
    constructor(render2: Renderer2, el: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private getScreenSize;
    ngAfterViewInit(): void;
    toCenter(x: number, y: number): void;
    destroy(): void;
    private getDialogHeaderLineHeight;
    private getDialogFooterHeight;
    private _checkDialogSize;
    private checkDialogSize;
    updateModalBodyHeight(): void;
    private updatePosition;
    resetPosition(): void;
    private openDialog;
    private closeDialog;
    show(): void;
    close($event?: MouseEvent): void;
    reSize(size: {
        width?: number;
        height?: number;
    }): void;
    onResizing(opts: any): void;
    resizeStop(opts: any): void;
    dropdown(el: any): void;
    maxDialog(rememberPrevSize?: boolean): void;
    revertDialog(): void;
    changeDialogSize(): void;
    onMoving($event: any): void;
}
