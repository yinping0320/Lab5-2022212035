/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { TreeTableComponent } from '@farris/ui-treetable';
import { CommonUtils, } from '@farris/ui-common';
export class TreeComponent {
    /**
     * @param {?} utils
     */
    constructor(utils) {
        this.utils = utils;
        this.showTips = true;
        /**
         * 宽度
         */
        this.width = 500;
        /**
         * 高度
         */
        this.height = 400;
        this.showFilterBar = false;
        /**
         * 是否启用多选
         */
        this.singleSelect = true;
        /**
         * 启用多选后，是否显示checkbox
         */
        this.showCheckbox = true;
        /**
         * 显示图标
         */
        this.showIcon = false;
        /**
         * 显示边框线
         */
        this.showBorder = false;
        /**
         * 禁用。 禁用时不允许选中行
         */
        this.disabled = false;
        /**
         * 数据加载方式
         * - all: 全部加载
         * - async: 分层加载
         */
        this.loadDataType = 'all';
        /**
         * 当多选时，选中当前行并钩选
         */
        this.checkOnSelect = false;
        /**
         * 当多选时，钩选并选中当前行
         */
        this.selectOnCheck = false;
        /**
         * 启用多选时，此属性为true 时，仅当前行选中
         */
        this.onlySelectSelf = false;
        /**
         * 设置为true时自适应父容的尺寸
         */
        this.fit = false;
        /**
         * 启用级联选中功能
         */
        this.cascadeCheck = true;
        /**
         * 向下级联选中
         */
        this.cascadeDown = true;
        /**
         * 向上级联选中
         */
        this.cascadeUp = true;
        /**
         * 空数据时，显示的提示文本
         */
        this.emptyMessage = '暂无数据';
        /**
         * 单击行选中后，在次点击不会被取消选中状态;
         */
        this.keepSelect = true;
        /**
         * 虚拟加载
         */
        this.virtualized = false;
        /**
         * 仅允许选择叶子节点
         * - default: 应用服务器端传回的设置，如果服务器端没有设置，则与 no 保持一至；
         * - yes: 如果客户端设置为 `yes`, 服务器端的设置失效；
         * - no: 允许选择所有节点；服务器端设置失效
         */
        this.onlySelectLeaf = 'default';
        /**
         * 叶子节点图标
         */
        this.leafIcon = 'file';
        /**
         * 节点展开图标
         */
        this.expandIcon = 'folder-open';
        /**
         * 节点折叠图标
         */
        this.collapseIcon = 'folder';
        /**
         * 启用远端排序
         */
        this.remoteSort = true;
        this.data = [];
        /**
         * 附加按钮TXT
         */
        this.appendText = '';
        /**
         * 附加按钮点击事件
         */
        this.appendBtnClick = new EventEmitter();
        /**
         * 选中事件
         */
        this.nodeSelected = new EventEmitter();
        /**
         * 取消选中事件
         */
        this.nodeUnSelect = new EventEmitter();
        /**
         * 钩选
         */
        this.nodeChecked = new EventEmitter();
        /**
         * 取消钩选
         */
        this.nodeUnChecked = new EventEmitter();
        /**
         * 查询
         */
        this.search = new EventEmitter();
        this.dblClick = new EventEmitter();
        this.loadedData = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} $event
     * @return {?}
     */
    onMouseEnter($event) {
        if (this.appendText) {
            ((/** @type {?} */ ($event.target))).querySelector('.rbtn').style.display = 'inline-block';
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onMouseLeave($event) {
        if (this.appendText) {
            ((/** @type {?} */ ($event.target))).querySelector('.rbtn').style.display = 'none';
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onClickAppendBtn($event) {
        this.appendBtnClick.emit();
        $event.stopPropagation();
    }
}
TreeComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-tree',
                template: `
        <farris-treetable #t2
            [width]="width"
            [height]="height"
            [data]="data"
            [idField]="idField"
            [singleSelect]="singleSelect"
            [showCheckbox]="showCheckbox"
            [showIcon]="showIcon"
            [showFilterBar]="false"
            [showBorder]="showBorder"
            [disabled]="disabled"
            [loadDataType]="loadDataType"
            [checkOnSelect]="checkOnSelect"
            [selectOnCheck]="selectOnCheck"
            [onlySelectSelf]="onlySelectSelf"
            [fit]="fit"
            [cascadeCheck]="cascadeCheck"
            [cascadeDown]="cascadeDown"
            [cascadeUp]="cascadeUp"
            [emptyMessage]="emptyMessage"
            [keepSelect]="keepSelect"
            [virtualized]="virtualized"
            [onlySelectLeaf]="onlySelectLeaf"
            [leafIcon]="leafIcon"
            [expandIcon]="expandIcon"
            [collapseIcon]="collapseIcon"
            [remoteSort]="remoteSort"
            [sortName]="displayText"
            [sortOrder]="sortOrder"
            [multiSort]="false"
            (nodeSelected)="nodeSelected.emit($event)"
            (nodeUnSelect)="nodeUnSelect.emit($event)"
            (nodeChecked)="nodeChecked.emit($event)"
            (nodeUnChecked)="nodeUnChecked.emit($event)"
            (search)="search.emit($event)"
            (dblClick)="dblClick.emit($event)"
            (loadedData)="loadedData.emit($event)"
        >
            <ng-template farrisTemplate="body" let-rowNode let-treeNode="node" let-rowData="rowData">
                <tr
                    #row="row"
                    [selectRow]="rowNode"
                    [dblclick]="true"
                    (mouseenter)="onMouseEnter($event)"
                    (mouseleave)="onMouseLeave($event)"
                    class="farris-table-selectedrow"
                >
                    <td style="border: 0" [style.color]="row.selectRowDisabled ? '#a6a6a6' : '#333'">
                        <farris-treeTableToggler [rowNode]="rowNode"></farris-treeTableToggler>
                        <span [show-title]="showTips"
                            [innerHTML]="(utils || t2.utils).getValue(displayText, rowData, true) | safe: 'html'"></span>

                        <span
                            class="rbtn"
                            style=" float: right; width: 40px; display:none; cursor: pointer"
                            (click)="onClickAppendBtn($event)"
                            >{{ appendText }}</span
                        >
                    </td>
                </tr>
            </ng-template>
        </farris-treetable>
    `
            }] }
];
/** @nocollapse */
TreeComponent.ctorParameters = () => [
    { type: CommonUtils }
];
TreeComponent.propDecorators = {
    treeTable: [{ type: ViewChild, args: [TreeTableComponent,] }],
    showTips: [{ type: Input }],
    width: [{ type: Input }],
    height: [{ type: Input }],
    showFilterBar: [{ type: Input }],
    singleSelect: [{ type: Input }],
    showCheckbox: [{ type: Input }],
    idField: [{ type: Input }],
    displayText: [{ type: Input }],
    showIcon: [{ type: Input }],
    showBorder: [{ type: Input }],
    disabled: [{ type: Input }],
    loadDataType: [{ type: Input }],
    checkOnSelect: [{ type: Input }],
    selectOnCheck: [{ type: Input }],
    onlySelectSelf: [{ type: Input }],
    fit: [{ type: Input }],
    cascadeCheck: [{ type: Input }],
    cascadeDown: [{ type: Input }],
    cascadeUp: [{ type: Input }],
    emptyMessage: [{ type: Input }],
    keepSelect: [{ type: Input }],
    virtualized: [{ type: Input }],
    onlySelectLeaf: [{ type: Input }],
    leafIcon: [{ type: Input }],
    expandIcon: [{ type: Input }],
    collapseIcon: [{ type: Input }],
    remoteSort: [{ type: Input }],
    sortOrder: [{ type: Input }],
    data: [{ type: Input }],
    appendText: [{ type: Input }],
    appendBtnClick: [{ type: Output }],
    nodeSelected: [{ type: Output }],
    nodeUnSelect: [{ type: Output }],
    nodeChecked: [{ type: Output }],
    nodeUnChecked: [{ type: Output }],
    search: [{ type: Output }],
    dblClick: [{ type: Output }],
    loadedData: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TreeComponent.prototype.treeTable;
    /** @type {?} */
    TreeComponent.prototype.showTips;
    /**
     * 宽度
     * @type {?}
     */
    TreeComponent.prototype.width;
    /**
     * 高度
     * @type {?}
     */
    TreeComponent.prototype.height;
    /** @type {?} */
    TreeComponent.prototype.showFilterBar;
    /**
     * 是否启用多选
     * @type {?}
     */
    TreeComponent.prototype.singleSelect;
    /**
     * 启用多选后，是否显示checkbox
     * @type {?}
     */
    TreeComponent.prototype.showCheckbox;
    /**
     * 主键字段
     * @type {?}
     */
    TreeComponent.prototype.idField;
    /**
     * 文本字段
     * @type {?}
     */
    TreeComponent.prototype.displayText;
    /**
     * 显示图标
     * @type {?}
     */
    TreeComponent.prototype.showIcon;
    /**
     * 显示边框线
     * @type {?}
     */
    TreeComponent.prototype.showBorder;
    /**
     * 禁用。 禁用时不允许选中行
     * @type {?}
     */
    TreeComponent.prototype.disabled;
    /**
     * 数据加载方式
     * - all: 全部加载
     * - async: 分层加载
     * @type {?}
     */
    TreeComponent.prototype.loadDataType;
    /**
     * 当多选时，选中当前行并钩选
     * @type {?}
     */
    TreeComponent.prototype.checkOnSelect;
    /**
     * 当多选时，钩选并选中当前行
     * @type {?}
     */
    TreeComponent.prototype.selectOnCheck;
    /**
     * 启用多选时，此属性为true 时，仅当前行选中
     * @type {?}
     */
    TreeComponent.prototype.onlySelectSelf;
    /**
     * 设置为true时自适应父容的尺寸
     * @type {?}
     */
    TreeComponent.prototype.fit;
    /**
     * 启用级联选中功能
     * @type {?}
     */
    TreeComponent.prototype.cascadeCheck;
    /**
     * 向下级联选中
     * @type {?}
     */
    TreeComponent.prototype.cascadeDown;
    /**
     * 向上级联选中
     * @type {?}
     */
    TreeComponent.prototype.cascadeUp;
    /**
     * 空数据时，显示的提示文本
     * @type {?}
     */
    TreeComponent.prototype.emptyMessage;
    /**
     * 单击行选中后，在次点击不会被取消选中状态;
     * @type {?}
     */
    TreeComponent.prototype.keepSelect;
    /**
     * 虚拟加载
     * @type {?}
     */
    TreeComponent.prototype.virtualized;
    /**
     * 仅允许选择叶子节点
     * - default: 应用服务器端传回的设置，如果服务器端没有设置，则与 no 保持一至；
     * - yes: 如果客户端设置为 `yes`, 服务器端的设置失效；
     * - no: 允许选择所有节点；服务器端设置失效
     * @type {?}
     */
    TreeComponent.prototype.onlySelectLeaf;
    /**
     * 叶子节点图标
     * @type {?}
     */
    TreeComponent.prototype.leafIcon;
    /**
     * 节点展开图标
     * @type {?}
     */
    TreeComponent.prototype.expandIcon;
    /**
     * 节点折叠图标
     * @type {?}
     */
    TreeComponent.prototype.collapseIcon;
    /**
     * 启用远端排序
     * @type {?}
     */
    TreeComponent.prototype.remoteSort;
    /**
     * 排序方式 asc | desc
     * @type {?}
     */
    TreeComponent.prototype.sortOrder;
    /** @type {?} */
    TreeComponent.prototype.data;
    /**
     * 附加按钮TXT
     * @type {?}
     */
    TreeComponent.prototype.appendText;
    /**
     * 附加按钮点击事件
     * @type {?}
     */
    TreeComponent.prototype.appendBtnClick;
    /**
     * 选中事件
     * @type {?}
     */
    TreeComponent.prototype.nodeSelected;
    /**
     * 取消选中事件
     * @type {?}
     */
    TreeComponent.prototype.nodeUnSelect;
    /**
     * 钩选
     * @type {?}
     */
    TreeComponent.prototype.nodeChecked;
    /**
     * 取消钩选
     * @type {?}
     */
    TreeComponent.prototype.nodeUnChecked;
    /**
     * 查询
     * @type {?}
     */
    TreeComponent.prototype.search;
    /** @type {?} */
    TreeComponent.prototype.dblClick;
    /** @type {?} */
    TreeComponent.prototype.loadedData;
    /** @type {?} */
    TreeComponent.prototype.utils;
}
//# sourceMappingURL=data:application/json;base64,