import { OnInit, EventEmitter } from '@angular/core';
import { TreeNode, TreeTableComponent } from '@farris/ui-treetable';
import { CommonUtils } from '@farris/ui-common';
export declare class TreeComponent implements OnInit {
    utils: CommonUtils;
    treeTable: TreeTableComponent;
    showTips: boolean;
    /** 宽度 */
    width: number;
    /** 高度 */
    height: number;
    showFilterBar: boolean;
    /** 是否启用多选 */
    singleSelect: boolean;
    /** 启用多选后，是否显示checkbox */
    showCheckbox: boolean;
    /** 主键字段 */
    idField: string;
    /** 文本字段 */
    displayText: string;
    /** 显示图标 */
    showIcon: boolean;
    /** 显示边框线 */
    showBorder: boolean;
    /** 禁用。 禁用时不允许选中行 */
    disabled: boolean;
    /** 数据加载方式
     * - all: 全部加载
     * - async: 分层加载
     */
    loadDataType: 'all' | 'async';
    /** 当多选时，选中当前行并钩选 */
    checkOnSelect: boolean;
    /** 当多选时，钩选并选中当前行 */
    selectOnCheck: boolean;
    /**
     * 启用多选时，此属性为true 时，仅当前行选中
     */
    onlySelectSelf: boolean;
    /** 设置为true时自适应父容的尺寸 */
    fit: boolean;
    /** 启用级联选中功能 */
    cascadeCheck: boolean;
    /** 向下级联选中 */
    cascadeDown: boolean;
    /** 向上级联选中 */
    cascadeUp: boolean;
    /** 空数据时，显示的提示文本 */
    emptyMessage: string;
    /**
     * 单击行选中后，在次点击不会被取消选中状态;
     */
    keepSelect: boolean;
    /** 虚拟加载 */
    virtualized: boolean;
    /**
     * 仅允许选择叶子节点
     * - default: 应用服务器端传回的设置，如果服务器端没有设置，则与 no 保持一至；
     * - yes: 如果客户端设置为 `yes`, 服务器端的设置失效；
     * - no: 允许选择所有节点；服务器端设置失效
     */
    onlySelectLeaf: boolean | 'default' | 'yes' | 'no';
    /** 叶子节点图标 */
    leafIcon: string;
    /** 节点展开图标 */
    expandIcon: string;
    /** 节点折叠图标 */
    collapseIcon: string;
    /** 启用远端排序 */
    remoteSort: boolean;
    /** 排序方式 asc | desc */
    sortOrder: string;
    data: TreeNode[];
    /** 附加按钮TXT */
    appendText: string;
    /** 附加按钮点击事件 */
    appendBtnClick: EventEmitter<any>;
    /** 选中事件 */
    nodeSelected: EventEmitter<any>;
    /** 取消选中事件 */
    nodeUnSelect: EventEmitter<any>;
    /** 钩选 */
    nodeChecked: EventEmitter<any>;
    /** 取消钩选 */
    nodeUnChecked: EventEmitter<any>;
    /** 查询 */
    search: EventEmitter<any>;
    dblClick: EventEmitter<any>;
    loadedData: EventEmitter<any>;
    constructor(utils: CommonUtils);
    ngOnInit(): void;
    onMouseEnter($event: MouseEvent): void;
    onMouseLeave($event: MouseEvent): void;
    onClickAppendBtn($event: MouseEvent): void;
}
