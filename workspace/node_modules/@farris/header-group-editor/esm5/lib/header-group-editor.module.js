/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { HeaderGroupEditorComponent } from './header-group-editor.component';
import { TreeTableModule } from '@farris/ui-treetable';
import { ModalModule } from '@farris/ui-modal';
import { GroupHeaderFormComponent } from './group-header-form.component';
import { SelectColumnsComponent } from './group-header-select-columns.component';
import { ColumnGroupEditorComponent } from './column-group-editor.component';
import { MoveButtonsComponent } from './move-buttons.component';
import { MessagerModule } from '@farris/ui-messager';
var HeaderGroupEditorModule = /** @class */ (function () {
    function HeaderGroupEditorModule() {
    }
    HeaderGroupEditorModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        HeaderGroupEditorComponent,
                        GroupHeaderFormComponent,
                        SelectColumnsComponent,
                        ColumnGroupEditorComponent,
                        MoveButtonsComponent
                    ],
                    imports: [
                        CommonModule,
                        FormsModule,
                        MessagerModule.forRoot(),
                        TreeTableModule,
                        ModalModule.forRoot()
                    ],
                    entryComponents: [
                        GroupHeaderFormComponent,
                        SelectColumnsComponent
                    ],
                    exports: [HeaderGroupEditorComponent, ColumnGroupEditorComponent]
                },] }
    ];
    return HeaderGroupEditorModule;
}());
export { HeaderGroupEditorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWdyb3VwLWVkaXRvci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2hlYWRlci1ncm91cC1lZGl0b3IvIiwic291cmNlcyI6WyJsaWIvaGVhZGVyLWdyb3VwLWVkaXRvci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRDtJQUFBO0lBcUJ1QyxDQUFDOztnQkFyQnZDLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osMEJBQTBCO3dCQUMxQix3QkFBd0I7d0JBQ3hCLHNCQUFzQjt3QkFDdEIsMEJBQTBCO3dCQUMxQixvQkFBb0I7cUJBQ3JCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsY0FBYyxDQUFDLE9BQU8sRUFBRTt3QkFDeEIsZUFBZTt3QkFDZixXQUFXLENBQUMsT0FBTyxFQUFFO3FCQUN0QjtvQkFDRCxlQUFlLEVBQUU7d0JBQ2Ysd0JBQXdCO3dCQUN4QixzQkFBc0I7cUJBQ3ZCO29CQUNELE9BQU8sRUFBRSxDQUFDLDBCQUEwQixFQUFFLDBCQUEwQixDQUFDO2lCQUNsRTs7SUFDc0MsOEJBQUM7Q0FBQSxBQXJCeEMsSUFxQndDO1NBQTNCLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIZWFkZXJHcm91cEVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vaGVhZGVyLWdyb3VwLWVkaXRvci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBUcmVlVGFibGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXRyZWV0YWJsZSc7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IEdyb3VwSGVhZGVyRm9ybUNvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXAtaGVhZGVyLWZvcm0uY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2VsZWN0Q29sdW1uc0NvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXAtaGVhZGVyLXNlbGVjdC1jb2x1bW5zLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENvbHVtbkdyb3VwRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW4tZ3JvdXAtZWRpdG9yLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE1vdmVCdXR0b25zQ29tcG9uZW50IH0gZnJvbSAnLi9tb3ZlLWJ1dHRvbnMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWVzc2FnZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEhlYWRlckdyb3VwRWRpdG9yQ29tcG9uZW50LFxyXG4gICAgR3JvdXBIZWFkZXJGb3JtQ29tcG9uZW50LFxyXG4gICAgU2VsZWN0Q29sdW1uc0NvbXBvbmVudCxcclxuICAgIENvbHVtbkdyb3VwRWRpdG9yQ29tcG9uZW50LFxyXG4gICAgTW92ZUJ1dHRvbnNDb21wb25lbnRcclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgVHJlZVRhYmxlTW9kdWxlLFxyXG4gICAgTW9kYWxNb2R1bGUuZm9yUm9vdCgpXHJcbiAgXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtcclxuICAgIEdyb3VwSGVhZGVyRm9ybUNvbXBvbmVudCxcclxuICAgIFNlbGVjdENvbHVtbnNDb21wb25lbnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtIZWFkZXJHcm91cEVkaXRvckNvbXBvbmVudCwgQ29sdW1uR3JvdXBFZGl0b3JDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBIZWFkZXJHcm91cEVkaXRvck1vZHVsZSB7IH1cclxuIl19