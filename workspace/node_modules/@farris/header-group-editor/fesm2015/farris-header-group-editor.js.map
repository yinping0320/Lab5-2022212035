{"version":3,"file":"farris-header-group-editor.js","sources":["ng://@farris/header-group-editor/lib/group-header-select-columns.component.ts","ng://@farris/header-group-editor/lib/group-header-form.component.ts","ng://@farris/header-group-editor/lib/header-group-editor.component.ts","ng://@farris/header-group-editor/lib/column-group-editor.component.ts","ng://@farris/header-group-editor/lib/header-group-editor.service.ts","ng://@farris/header-group-editor/lib/move-buttons.component.ts","ng://@farris/header-group-editor/lib/header-group-editor.module.ts"],"sourcesContent":["import { HeaderGroupEditorComponent } from './header-group-editor.component';\r\nimport { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'select-columns',\r\n    template: `\r\n    <div style=\"margin: 10px 20px\" class=\"row\">\r\n        <div class=\"custom-control custom-checkbox col-4\" *ngFor=\"let f of fields\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"isChecked(f)\" [disabled]=\"isDisabled(f)\">\r\n            <label class=\"custom-control-label\" (click)=\"checkedCols(f)\" >{{ f.caption }}</label>\r\n        </div>\r\n    </div>\r\n    `\r\n})\r\nexport class SelectColumnsComponent implements OnInit {\r\n    @Input() fields = [];\r\n\r\n    checkeds = [];\r\n    uncheckeds = [];\r\n    childs = [];\r\n    groupEditorRef: HeaderGroupEditorComponent;\r\n    private checkedPropertyName = '__checked__';\r\n    // åéå\r\n    private hxl = [];\r\n    constructor(private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n        this.initCheckedProperty();\r\n\r\n        this.childs = Array.from(this.checkeds);\r\n\r\n        if (this.groupEditorRef) {\r\n            this.hxl = this.groupEditorRef.getHouXuanLie();\r\n            if (this.hxl.length) {\r\n                this.hxl = this.hxl.map(n => n.data);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initCheckedProperty() {\r\n        if (!this.checkeds) {\r\n            this.checkeds = [];\r\n            this.fields.forEach(f => {\r\n                f[this.checkedPropertyName] = false;\r\n            });\r\n        } else {\r\n            this.fields.forEach(f => {\r\n                f[this.checkedPropertyName] = this.isChecked(f);\r\n            });\r\n        }\r\n    }\r\n\r\n    checkedCols(f) {\r\n\r\n        if (this.isDisabled(f)) {\r\n            return;\r\n        }\r\n\r\n        const checked = this.isChecked(f);\r\n        f[this.checkedPropertyName] = !checked;\r\n\r\n        const _fields = this.fields.filter(n => !this.isDisabled(n));\r\n\r\n        this.checkeds = _fields.filter(n => n[this.checkedPropertyName]);\r\n        this.uncheckeds = _fields.filter(n => !n[this.checkedPropertyName] );\r\n\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    isChecked(f) {\r\n        let chk = false;\r\n        if (this.checkeds && this.checkeds.length) {\r\n            chk = this.checkeds.findIndex(n => n.id === f.id) > -1;\r\n        }\r\n\r\n        return chk;\r\n    }\r\n\r\n    /** å¨å¶ä»åç»ä¸­çåï¼ç¦ç¨éæ©\r\n     * ä»å½ååç»ä¸­çåååéåä¸­çé¡¹å¯ä»¥éæ©\r\n     */\r\n    isDisabled(f) {\r\n        let items = this.childs;\r\n        if (this.hxl && this.hxl.length) {\r\n            items = items.concat(this.hxl);\r\n        }\r\n\r\n        return !(items.findIndex(n => n.id === f.id) > -1);\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'group-header-form',\r\n    template: `\r\n        <input type=\"text\" [(ngModel)]=\"title\" style=\" margin: 10px; width: 280px; margin-top: 30px;\">\r\n    `,\r\n})\r\nexport class GroupHeaderFormComponent implements OnInit {\r\n\r\n    @Input() title: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { SelectColumnsComponent } from './group-header-select-columns.component';\r\nimport { Component, OnInit, Input, ViewChild, Injector, Output, EventEmitter, OnChanges, ViewEncapsulation } from '@angular/core';\r\nimport { TreeTableComponent, RowNode, TreeNode } from '@farris/ui-treetable';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { GroupHeaderFormComponent } from './group-header-form.component';\r\nimport { cloneDeep } from 'lodash-es';\r\n\r\n@Component({\r\n    selector: 'header-group-editor',\r\n    templateUrl: 'header-group-editor.component.html',\r\n    styles: [`\r\n    .farris-treetable .farris-treetable-tbody td .treetable-toggler {\r\n        vertical-align: middle;\r\n    }\r\n    .farris-treetable .farris-treetable-tbody td .treenode-icon {\r\n        margin-right: 2px\r\n    }\r\n    `],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HeaderGroupEditorComponent implements OnInit {\r\n\r\n    @Input() fields: any[];\r\n    @Input() idField = 'id';\r\n    @Input() treeData = [];\r\n\r\n    @ViewChild('tt') tt: TreeTableComponent;\r\n\r\n    @Output() selectedNode = new EventEmitter();\r\n\r\n    // preview group columns\r\n    groupCols = [];\r\n\r\n    HOU_XUN_LIE_ID = '__HOU_XUN_LIE_ID__';\r\n\r\n    constructor(public injector: Injector, private modalService: BsModalService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.treeData || !this.treeData.length) {\r\n            this.initTreeData();\r\n        } else {\r\n            // å¤è¡¨å¤´ä¸­ç°å­çå­æ®µIDéå\r\n            const currentFieldIds = this.treeData.filter(n => n.fieldRef).map(n => n.fieldRef);\r\n            // æ°å¢çå­æ®µ\r\n            const newFields = this.fields.filter(n => !currentFieldIds.includes(n.id));\r\n            // æ°å¢åéå­æ®µ\r\n            if (newFields && newFields.length) {\r\n                this.treeData = this.treeData.concat(newFields.map(n => {\r\n                    return {\r\n                        fieldRef: n.id,\r\n                        parent: '__HOU_XUN_LIE_ID__',\r\n                        level: 1\r\n                    };\r\n                }));\r\n            }\r\n            this.treeData = this.treeData.map(n => {\r\n                if (n.fieldRef) {\r\n                    const f = this.fields.find(m => m.id === n.fieldRef);\r\n                    if (f) {\r\n                        return {\r\n                            ...f,\r\n                            parent: n.parent\r\n                        };\r\n                    }\r\n                } else {\r\n                    return n;\r\n                }\r\n            }).filter(n => n);\r\n\r\n            this.treeData = this.convert2TreeNodes(this.treeData);\r\n        }\r\n\r\n\r\n        this.tt.removed.subscribe(rowNode => {\r\n            if (!rowNode.node.data.groupHeader) {\r\n                const hxl = this.getHxl();\r\n\r\n                if (!rowNode.parent) {\r\n                    this.treeData = this.treeData.filter(n => n.data.id !== rowNode.id);\r\n                }\r\n\r\n                this.tt.append(rowNode.node.data, hxl.node);\r\n            }\r\n        });\r\n    }\r\n\r\n    initTreeData() {\r\n        this.treeData = [{\r\n            data: { id: 'groupHeader_1', caption: 'åç»è¡¨å¤´1', halign: 'left', groupHeader: true },\r\n            children: this.fields.map((n, i) => {\r\n                n['index'] = i;\r\n                return {\r\n                    data: n,\r\n                    children: [],\r\n                    visible: true\r\n                };\r\n            }),\r\n            expanded: true, visible: true\r\n        }, {\r\n            data: { id: this.HOU_XUN_LIE_ID, caption: '(åéå)', houxunquNode: true },\r\n            children: [],\r\n            expanded: true\r\n        }];\r\n    }\r\n\r\n    getHxl() {\r\n        return this.tt.findRowNode(this.HOU_XUN_LIE_ID);\r\n    }\r\n\r\n    onMouseEnter($event: MouseEvent) {\r\n        ($event.target as any).querySelector('.rbtn').style.display = 'inline-block';\r\n    }\r\n\r\n    onMouseLeave($event: MouseEvent) {\r\n        ($event.target as any).querySelector('.rbtn').style.display = 'none';\r\n    }\r\n\r\n\r\n    // ç§»é¤å\r\n    removeColumn(event: MouseEvent, rowData: any) {\r\n        this.tt.remove(rowData.id);\r\n    }\r\n\r\n    // ç¼è¾åç»å\r\n    editGroupName(rowData: any) {\r\n       const modalRef = this.showDialog(() => {\r\n            const ghfRef = modalRef.content as GroupHeaderFormComponent;\r\n            if (ghfRef.title) {\r\n                rowData.caption = ghfRef.title;\r\n                modalRef.close();\r\n            } else {\r\n                alert('è¯·è¾å¥åç§°ï¼å¦åç¹åæ¶ã');\r\n            }\r\n       });\r\n\r\n       modalRef.content.title = rowData.caption;\r\n    }\r\n\r\n\r\n    private generateGroupHeaderId() {\r\n        return `groupHeader_${new Date().getTime()}`;\r\n    }\r\n\r\n    // æ°å¢åç»\r\n    addNewGroup(event: MouseEvent, rn: RowNode, child = false) {\r\n        const modalRef = this.showDialog(() => {\r\n            const ghfRef = modalRef.content as GroupHeaderFormComponent;\r\n            if (ghfRef.title) {\r\n                if (!rn) {\r\n                    this.treeData.splice(0, 0, {\r\n                        data: {\r\n                            id: this.generateGroupHeaderId(), halign: 'left',\r\n                            caption: ghfRef.title, groupHeader: true\r\n                        },\r\n                        icon: 'f-icon f-icon-aggregate-fields',\r\n                        children: []\r\n                    });\r\n                    this.tt.updateSerializedValue();\r\n                } else {\r\n                    this.createNewGroupHeader(rn, ghfRef.title, child);\r\n                }\r\n\r\n                modalRef.close();\r\n            } else {\r\n                alert('è¯·è¾å¥åç§°ï¼å¦åç¹åæ¶ã');\r\n            }\r\n       });\r\n    }\r\n\r\n    setColumn2Group(event: MouseEvent, col) {\r\n        const i = this.treeData.length - 1;\r\n        this.treeData.splice(i, 0, { data: col, children: [] });\r\n\r\n        const hxl = this.treeData.find(n => n.data.houxunquNode);\r\n        hxl.children = hxl.children.filter(n => n.data.id !== col.id);\r\n\r\n        this.tt.updateSerializedValue();\r\n    }\r\n\r\n    // å é¤åç»\r\n    removeGroup(event: MouseEvent, rowNode) {\r\n        const childs = this.tt.serializedValue.filter(n => n.parents.indexOf(rowNode.id) > -1 && !n.node.data.groupHeader).map(n => n.node);\r\n        this.treeData = this.treeData.filter(n => n.data.id !== rowNode.id);\r\n        this.tt.remove(rowNode.id);\r\n        this.tt.appendChildren(childs, this.getHxl().node);\r\n    }\r\n\r\n    setColumns(event: MouseEvent, rowNode) {\r\n\r\n        const childs =  rowNode.node.children ? rowNode.node.children.map(n => n.data) : [];\r\n\r\n        const modalRef = this.showSelectColumnsDialog(() => {\r\n            const scRef = modalRef.content as SelectColumnsComponent;\r\n            let needAppendNodes = scRef.checkeds;\r\n\r\n            const hxl = this.tt.findRowNode(this.HOU_XUN_LIE_ID);\r\n            hxl.node.children = (hxl.node.children || []).filter(n => needAppendNodes.findIndex(c => c.id === n.id) === -1);\r\n\r\n            rowNode.node.children = rowNode.node.children || [];\r\n            needAppendNodes = needAppendNodes.filter(n => rowNode.node.children.findIndex(c => c.id === n.id) === -1);\r\n            if (needAppendNodes && needAppendNodes.length) {\r\n                this.tt.appendChildren(needAppendNodes.map(n => {\r\n                    return {\r\n                        data: n,\r\n                        children: [],\r\n                        expanded: true\r\n                    };\r\n                }), rowNode.node);\r\n\r\n                this.tt.expandNode(rowNode.id);\r\n            }\r\n\r\n\r\n            if (scRef.uncheckeds && scRef.uncheckeds.length) {\r\n                // hxl.node.children =  [];\r\n\r\n                const hxlCols = scRef.uncheckeds.map(n => {\r\n                    return {\r\n                        data: n,\r\n                        children: []\r\n                    };\r\n                });\r\n\r\n                hxl.node.children = hxl.node.children.filter(n => scRef.uncheckeds.findIndex(c => c.id === n.id) === -1);\r\n                this.tt.appendChildren(hxlCols, hxl.node);\r\n            }\r\n\r\n            modalRef.close();\r\n\r\n        }, childs);\r\n    }\r\n\r\n    hasGroupHeader(rowNode: RowNode = null) {\r\n        if (!rowNode) {\r\n            return this.treeData.filter(n => n.groupHeader).length;\r\n        } else {\r\n            return rowNode.node.children.filter(n => n.data.groupHeader).length;\r\n        }\r\n    }\r\n\r\n    moveUp(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        if (index !== 0) {\r\n            const tempArr = data.splice(index, 1);\r\n            data.splice(index - 1, 0, ...tempArr);\r\n\r\n            this.tt.updateSerializedValue();\r\n        }\r\n    }\r\n\r\n    moveDown(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        const len = data.length;\r\n\r\n        if (index !== len - 2) {\r\n            const tempArr = data.splice(index, 1);\r\n            data.splice(index + 1, 0, ...tempArr);\r\n            this.tt.updateSerializedValue();\r\n        } else {\r\n            this.moveBottom(event, rowNode);\r\n        }\r\n    }\r\n\r\n    moveTop(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        data.unshift(rowNode.node);\r\n        data.splice(index + 1, 1);\r\n        this.tt.updateSerializedValue();\r\n    }\r\n\r\n    moveBottom(event: MouseEvent, rowNode) {\r\n        let data = this.treeData;\r\n        if (rowNode.parent) {\r\n            data = rowNode.parent.children;\r\n        }\r\n\r\n        const index = data.findIndex(n => n.data.id === rowNode.id);\r\n        data.push(rowNode.node);\r\n        data.splice(index, 1);\r\n\r\n        if (!rowNode.parent) {\r\n            this.moveUp(event, rowNode);\r\n        } else {\r\n            this.tt.updateSerializedValue();\r\n        }\r\n    }\r\n\r\n    /** è·ååéå */\r\n    getHouXuanLie() {\r\n        return this.treeData.find(n => n.data.houxunquNode).children;\r\n    }\r\n\r\n    getAllNodes() {\r\n        const hxl = this.getHouXuanLie();\r\n        return this.tt.serializedValue.filter(n => {\r\n            return !n.node.data.houxunquNode && hxl.findIndex(k => k.data.id === n.id) === -1;\r\n        });\r\n    }\r\n\r\n\r\n    private convert2TreeNodes(data: any[], parentId = null): TreeNode[] {\r\n        if (data.length) {\r\n            const nodes = data.filter((v) => v.parent === parentId).filter(n => n);\r\n            return nodes.map(item => {\r\n                const node: any = {\r\n                    data: item,\r\n                    children: [],\r\n                    expanded: true\r\n                };\r\n\r\n                node.children = this.convert2TreeNodes(data, item.id);\r\n                if (node.data.groupHeader && node.children.length === 0) {\r\n                    node.icon = 'f-icon f-icon-aggregate-fields';\r\n                }\r\n                return node;\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private flatNodes(nodes) {\r\n        let r = {};\r\n        nodes.forEach(e => {\r\n            r[e.data['id']] = e.data;\r\n            if (e.children && e.children.length) {\r\n                r = Object.assign(r, this.flatNodes(e.children));\r\n            }\r\n        });\r\n        return r;\r\n    }\r\n\r\n    convert2Array(treeNodes: any[]) {\r\n        const r = [];\r\n        const maxBy = (arr, fn) => Math.max(...arr.map(typeof fn === 'function' ? fn : val => val[fn]));\r\n        const maxlevel = maxBy(treeNodes, (n) => n.level) ;\r\n        for (let i = 0; i <= maxlevel; i++ ) {\r\n            r.push(treeNodes.filter(n => n.level === i).map(n => {\r\n                const data = n.node.data;\r\n                return {\r\n                    colspan: (n.node.children ? treeNodes.filter(k => k.parents.indexOf(n.id) > -1 && k.id.indexOf('groupHeader_') == -1).length : 1) || 1,\r\n                    rowspan: (n.node.children && n.node.children.length > 0) ? 1 : (maxlevel - n.level + 1),\r\n                    title: data.caption,\r\n                    field: data.dataField,\r\n                    width: (data.size ? data.size.width : 100),\r\n                    halign: data.halign,\r\n                    align: data.align,\r\n                    id: n.id\r\n                };\r\n            }));\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    onTreeSelected($event) {\r\n        this.selectedNode.emit($event.node);\r\n    }\r\n\r\n\r\n    private createNewGroupHeader(rn: RowNode, title: string, child = false) {\r\n        const ghid = this.generateGroupHeaderId();\r\n        const data = { id: ghid, caption: title, groupHeader: true, halign: 'left' };\r\n        const gh = {\r\n            data,\r\n            children: [],\r\n            expanded: true,\r\n            visible: true,\r\n            icon: 'f-icon f-icon-aggregate-fields',\r\n        };\r\n        if (!child) {\r\n            if (!rn.parent) {\r\n                const i = this.treeData.findIndex(n => n.data.id === rn.id) + 1;\r\n                this.treeData.splice(i, 0, gh);\r\n                this.treeData = this.treeData.slice();\r\n            } else {\r\n                this.tt.appendChildren([gh], rn.parent);\r\n            }\r\n        } else {\r\n            this.tt.appendChildren([gh], rn.node);\r\n        }\r\n    }\r\n\r\n    private showSelectColumnsDialog(okCallback, childs) {\r\n        const modalRef = this.modalService.show(SelectColumnsComponent, {\r\n            title: 'è®¾ç½®åç»å',\r\n            width: 500,\r\n            height: 300,\r\n            showMaxButton: false,\r\n            resizable: false,\r\n            initialState: {\r\n                fields: this.fields,\r\n                checkeds: childs,\r\n                groupEditorRef: this\r\n            },\r\n            buttons: [\r\n                {\r\n                    text: 'ç¡®å®',\r\n                    cls: 'btn btn-primary',\r\n                    handle: okCallback\r\n                },\r\n                {\r\n                    text: 'åæ¶',\r\n                    cls: 'btn btn-secondary',\r\n                    handle: () => {\r\n                        modalRef.close();\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        return modalRef;\r\n    }\r\n\r\n    private showDialog(okCallback) {\r\n        const modalRef = this.modalService.show(GroupHeaderFormComponent, {\r\n            title: 'åç»ååç§°',\r\n            width: 300,\r\n            height: 200,\r\n            showMaxButton: false,\r\n            resizable: false,\r\n            initialState: {\r\n                title: 'åç»è¡¨å¤´'\r\n            },\r\n            buttons: [\r\n                {\r\n                    text: 'ç¡®å®',\r\n                    cls: 'btn btn-primary',\r\n                    handle: okCallback\r\n                },\r\n                {\r\n                    text: 'åæ¶',\r\n                    cls: 'btn btn-secondary',\r\n                    handle: () => {\r\n                        modalRef.close();\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        return modalRef;\r\n    }\r\n}\r\n","import { BsModalService } from '@farris/ui-modal';\r\nimport { HeaderGroupEditorComponent } from './header-group-editor.component';\r\nimport { Component, OnInit, Input, ViewChild, EventEmitter, Output, TemplateRef,\r\n                ElementRef, Renderer2, Injector, HostBinding } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { flatten } from 'lodash-es';\r\n\r\n@Component({\r\n    selector: 'column-group-editor',\r\n    templateUrl: 'column-group-editor.component.html',\r\n    styles: [\r\n        `\r\n        .center::-webkit-scrollbar { width: 5px; height: 5px}\r\n        .south::-webkit-scrollbar { width: 5px; height: 5px }\r\n        .south {\r\n            height: 40px;\r\n            min-height: 40px;\r\n            overflow: hidden;\r\n            border-top: 1px solid #c8c8c8;\r\n            background: #F3F8FF;\r\n            transition: height 0.5s;\r\n            flex-shrink: 0!important;;\r\n        }\r\n        .preview-open {\r\n            height: 300px;\r\n        }\r\n        .preview-container {\r\n            flex-shrink: 0!important;overflow:auto\r\n        }\r\n        .preview-title {\r\n            height:36px;min-height: 36px; background: #F3F8FF; cursor:pointer;\r\n        }\r\n        .preview-title .text {\r\n            line-height: 36px;font-size: 16px;padding-left: 10px;\r\n        }\r\n        .preview-title button {\r\n            float: right;\r\n            line-height: 40px;\r\n            margin-right: 10px;\r\n        }\r\n        .preview-container table{\r\n            width: max-content; margin: 5px; background-color: #efefef; border-color: #adadad;\r\n        }\r\n        .preview-container table td{border: 1px solid #c2c2c2;}\r\n\r\n        .east.property-column {\r\n            width: 300px; min-width:260px;border-left: 1px solid #c8c8c8;overflow: auto;background:#F3F8FF\r\n        }\r\n        .close-btn {\r\n            display: inline-block;\r\n            float: right;\r\n            line-height: 36px;\r\n            margin-right: 10px;\r\n            width: 36px;\r\n            color: #ccc;\r\n            text-align: center;\r\n        }\r\n        .close-btn:hover {\r\n            color: red;\r\n        }\r\n        `\r\n    ]\r\n})\r\n\r\nexport class ColumnGroupEditorComponent implements OnInit {\r\n    @Input() editorParams: any = {};\r\n    @Input() fields: any[];\r\n    @Input() value: any[];\r\n\r\n\r\n    @HostBinding('class') cls = 'f-utils-absolute-all';\r\n\r\n    @Output() closeModal = new EventEmitter<any>();\r\n    // æ¨¡ææ¡ç¡®å®åå³é­ï¼å¹¶ä¼ éåæ°\r\n    @Output() submitModal = new EventEmitter<any>();\r\n\r\n    @ViewChild('hge') hge: HeaderGroupEditorComponent;\r\n    @ViewChild('dlgFooter') modalFooter: TemplateRef<any>;\r\n    @ViewChild('preview') previewEl: ElementRef;\r\n    @ViewChild('code') codeTemplate: TemplateRef<any>;\r\n\r\n    previewGroupColumns = [];\r\n    columnsCode = [];\r\n\r\n    btnTopActive = true;\r\n    btnBottomActive = true;\r\n\r\n    isOpen = false;\r\n    fieldInfo: any = {};\r\n\r\n\r\n    modalConfig = {\r\n        title: 'å¤è¡¨å¤´ç¼è¾å¨',\r\n        width: 700,\r\n        height: 500,\r\n        showButtons: true\r\n    };\r\n\r\n    constructor(\r\n        private render: Renderer2, private messagerSer: MessagerService, public injector: Injector,\r\n        private modalSer: BsModalService) { }\r\n\r\n    ngOnInit() {\r\n        if (!this.fields || !this.fields.length) {\r\n            if (this.editorParams && this.editorParams.fields  && this.editorParams.fields.length) {\r\n                this.fields = this.editorParams.fields;\r\n            } else {\r\n                console.warn('Pleasy Set Datagrid\\'s fields Give it 2 me.');\r\n            }\r\n        }\r\n    }\r\n\r\n    onTreenodeSelect($event) {\r\n        this.fieldInfo = $event.data;\r\n    }\r\n\r\n    private setPreviewColumns() {\r\n        const treeNodes = this.hge.getAllNodes();\r\n        this.previewGroupColumns = this.hge.convert2Array(treeNodes);\r\n    }\r\n\r\n    showPreview() {\r\n        this.setPreviewColumns();\r\n        if (!this.isOpen) {\r\n            this.isOpen = true;\r\n        }\r\n    }\r\n\r\n    closePreview(event?: MouseEvent) {\r\n        this.isOpen = false;\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    resetGroupColumns() {\r\n        this.messagerSer.question('è¡¨å¤´åç»éç½®åéè¦éæ°è®¾ç½®ãç¡®å®è¦éç½®ä¸ºåå§ç¶æåï¼', () => {\r\n            this.hge.initTreeData();\r\n        });\r\n    }\r\n\r\n    cancle() {\r\n        this.closeModal.emit();\r\n    }\r\n\r\n    ok() {\r\n        this.setPreviewColumns();\r\n\r\n        const flatgroupcols = flatten<any>(this.previewGroupColumns);\r\n\r\n        const value = this.hge.tt.serializedValue.map(n => {\r\n            const parent = n.parent ? n.parent.data.id : null;\r\n            if (n.node.data.groupHeader || n.node.data.houxunquNode) {\r\n                const _col = flatgroupcols.find(c => c.id === n.id);\r\n                const item = {\r\n                    ...n.node.data,\r\n                    parent,\r\n                    level: n.level\r\n                };\r\n\r\n                if (_col) {\r\n                    return Object.assign(item, { rowspan: _col ? _col.rowspan : 1,\r\n                        colspan: _col ? _col.colspan : 1});\r\n                }\r\n\r\n                return item;\r\n\r\n            } else {\r\n                return {\r\n                    fieldRef: n.node.data.id,\r\n                    parent,\r\n                    level: n.level\r\n                };\r\n            }\r\n        });\r\n        this.submitModal.emit({ value });\r\n    }\r\n\r\n    showCode() {\r\n        const treeNodes = this.hge.getAllNodes();\r\n        this.columnsCode = this.hge.convert2Array(treeNodes);\r\n\r\n        this.modalSer.show(this.codeTemplate, {\r\n            title: 'è¡¨å¤´åç»ä»£ç ',\r\n            width: 500, height: 400,\r\n            resizable: false,\r\n            showMaxButton: false,\r\n            showButtons: false\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderGroupEditorService {\n\n  constructor() { }\n}\n","import { HeaderGroupEditorComponent } from './header-group-editor.component';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'move-buttons',\r\n    template: `\r\n    <button class=\"btn btn-light mr-1\" style=\"padding: 2px 5px\" (click)=\"hge.moveTop($event, rowNode)\" title=\"ç½®é¡¶\">\r\n        <span class=\"f-icon f-icon-roofing\"></span>\r\n    </button>\r\n    <button class=\"btn btn-light mr-1\" style=\"padding: 2px 5px\" (click)=\"hge.moveUp($event, rowNode)\" title=\"ä¸ç§»\">\r\n        <span class=\"f-icon f-icon-arrow-chevron-up\"></span>\r\n    </button>\r\n    <button class=\"btn btn-light mr-1\"  style=\"padding: 2px 5px\" (click)=\"hge.moveDown($event, rowNode)\" title=\"ä¸ç§»\">\r\n        <span class=\"f-icon f-icon-arrow-chevron-down\"></span>\r\n    </button>\r\n    <button class=\"btn btn-light mr-1\" style=\"padding: 2px 5px\" (click)=\"hge.moveBottom($event, rowNode)\" title=\"ç½®åº\">\r\n        <span class=\"f-icon f-icon-bottomsetting\"></span>\r\n    </button>\r\n    `\r\n})\r\n\r\nexport class MoveButtonsComponent implements OnInit {\r\n    @Input() rowNode;\r\n    constructor(public hge: HeaderGroupEditorComponent) { }\r\n\r\n    ngOnInit() { }\r\n}\r\n\r\n","import { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { HeaderGroupEditorComponent } from './header-group-editor.component';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { GroupHeaderFormComponent } from './group-header-form.component';\r\nimport { SelectColumnsComponent } from './group-header-select-columns.component';\r\nimport { ColumnGroupEditorComponent } from './column-group-editor.component';\r\nimport { MoveButtonsComponent } from './move-buttons.component';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\n@NgModule({\r\n  declarations: [\r\n    HeaderGroupEditorComponent,\r\n    GroupHeaderFormComponent,\r\n    SelectColumnsComponent,\r\n    ColumnGroupEditorComponent,\r\n    MoveButtonsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MessagerModule.forRoot(),\r\n    TreeTableModule,\r\n    ModalModule.forRoot()\r\n  ],\r\n  entryComponents: [\r\n    GroupHeaderFormComponent,\r\n    SelectColumnsComponent\r\n  ],\r\n  exports: [HeaderGroupEditorComponent, ColumnGroupEditorComponent]\r\n})\r\nexport class HeaderGroupEditorModule { }\r\n"],"names":[],"mappings":"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"}