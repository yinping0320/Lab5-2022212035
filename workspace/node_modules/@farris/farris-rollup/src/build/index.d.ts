import { BuildEvent, Builder, BuilderConfiguration, BuilderContext } from '@angular-devkit/architect';
import { Observable } from 'rxjs';
import * as rollup from 'rollup';
import { DependencyList } from './external-module-id-strategy';
import { TransformHook } from 'rollup';
export interface NgRollupBuilderOptions {
    project: string;
    tsConfig?: string;
    watch?: boolean;
}
export interface RollupOptions {
    moduleName: string;
    entry: string;
    format: rollup.ModuleFormat;
    dest: string;
    sourceRoot: string;
    umdModuleIds?: {
        [key: string]: string;
    };
    amd?: {
        id: string;
    };
    dependencyList?: DependencyList;
    transform?: TransformHook;
    uglify: boolean;
    hash: boolean;
    indexHtml: boolean;
    indexHtmlTemplate: string;
    dist: string;
    serve: boolean;
}
export declare class NgRollupBuilder implements Builder<NgRollupBuilderOptions> {
    context: BuilderContext;
    constructor(context: BuilderContext);
    run(builderConfig: BuilderConfiguration<Partial<NgRollupBuilderOptions>>): Observable<BuildEvent>;
    runRollup(options: RollupOptions): Promise<any>;
}
export default NgRollupBuilder;
