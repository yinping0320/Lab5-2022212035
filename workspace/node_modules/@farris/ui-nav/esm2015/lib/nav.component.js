/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { of } from 'rxjs';
/**
 * @record
 */
function navItem() { }
if (false) {
    /** @type {?} */
    navItem.prototype.id;
    /** @type {?} */
    navItem.prototype.text;
    /** @type {?|undefined} */
    navItem.prototype.num;
    /** @type {?|undefined} */
    navItem.prototype.disable;
}
export class NavComponent {
    constructor() {
        /* 是否水平分布 */
        // @Input() horizontal: boolean = true;
        this._horizontal = true;
        this._activeNavId = '';
        this.maxNum = 99;
        this.navChange = new EventEmitter();
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set horizontal(val) {
        this._horizontal = val;
    }
    /**
     * @return {?}
     */
    get horizontal() {
        return this._horizontal;
    }
    /**
     * @return {?}
     */
    get navData() {
        return this._navData;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set navData(data) {
        this._navData = data;
        this.initNavData();
    }
    /**
     * @return {?}
     */
    get activeNavId() {
        return this._activeNavId;
    }
    /**
     * @param {?} data
     * @return {?}
     */
    set activeNavId(data) {
        this._activeNavId = data;
        if (this._activeNavId && this.navData && this.navData.length) {
            /** @type {?} */
            const nav = this.navData.find((/**
             * @param {?} nav
             * @return {?}
             */
            nav => {
                return nav['id'] === this._activeNavId;
            }));
            if (nav) {
                this.navChange.emit(nav);
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.initEvents();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.navPickingSubscription) {
            this.navPickingSubscription.unsubscribe();
        }
    }
    /**
     * @return {?}
     */
    initNavData() {
        if (this.navData && this.navData.length) {
            if (!this._activeNavId) {
                /** @type {?} */
                const activeNav = this.navData.find((/**
                 * @param {?} nav
                 * @return {?}
                 */
                nav => {
                    return !nav.disable;
                }));
                if (activeNav) {
                    this._activeNavId = activeNav['id'];
                }
            }
        }
    }
    /**
     * @param {?} nav
     * @return {?}
     */
    navClick(nav) {
        if (nav.disable || nav.id === this._activeNavId) {
            return;
        }
        else {
            this.navPickingSubscription = this.navPicking().subscribe((/**
             * @param {?} val
             * @return {?}
             */
            (val) => {
                if (val) {
                    this.navChange.emit(nav);
                    setTimeout((/**
                     * @return {?}
                     */
                    () => this._activeNavId = nav.id));
                }
            }));
        }
    }
    /**
     * @return {?}
     */
    initEvents() {
        if (!this.navPicking) {
            this.navPicking = (/**
             * @return {?}
             */
            () => of(true));
        }
    }
}
NavComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-nav',
                template: "<div class=\"farris-nav\" [class.farris-nav-vertical]=\"!horizontal\">\r\n    <div class=\"farris-nav-item\" *ngFor=\"let item of navData\" \r\n    [class.active]=\"item.id === activeNavId\" \r\n    [class.disabled]=\"item.disable\"\r\n    (click)=\"navClick(item)\"\r\n    >\r\n        <div class=\"farris-nav-item-link\">\r\n            <span class=\"farris-nav-item-link-text\">\r\n                {{item.text}}\r\n                <div class=\"farris-nav-item-tag\" *ngIf=\"item.num\">\r\n                    <ng-container *ngIf=\"item.num <= maxNum; else elseTemplate\">\r\n                        <span class=\"tag-text\">{{item.num}}</span>\r\n                    </ng-container>\r\n                    <ng-template #elseTemplate>\r\n                        <span class=\"tag-text\">{{maxNum}}+</span>\r\n                    </ng-template>\r\n                </div>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>",
                styles: [".farris-nav{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;border-bottom:1px solid #e9e9e9;overflow:hidden}.farris-nav-item{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.farris-nav-item-link{padding:.75rem 1rem;cursor:pointer}.farris-nav-item-link-text{position:relative;font-size:1rem;font-weight:400}.farris-nav-item-tag{position:absolute;right:-.75rem;top:calc(10px - 100%);padding:0 .375rem;color:#fff;font-size:.75rem;line-height:1.125rem;border-radius:1.125rem}.farris-nav.farris-nav-vertical{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:start;align-items:flex-start}.farris-nav.farris-nav-vertical .farris-nav-item{width:100%}"]
            }] }
];
/** @nocollapse */
NavComponent.ctorParameters = () => [];
NavComponent.propDecorators = {
    horizontal: [{ type: Input }],
    navData: [{ type: Input }],
    activeNavId: [{ type: Input }],
    navPicking: [{ type: Input }],
    maxNum: [{ type: Input }],
    navChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    NavComponent.prototype._horizontal;
    /** @type {?} */
    NavComponent.prototype._navData;
    /** @type {?} */
    NavComponent.prototype._activeNavId;
    /**
     * nav切换前事件
     * @type {?}
     */
    NavComponent.prototype.navPicking;
    /** @type {?} */
    NavComponent.prototype.navPickingSubscription;
    /** @type {?} */
    NavComponent.prototype.maxNum;
    /** @type {?} */
    NavComponent.prototype.navChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbmF2LyIsInNvdXJjZXMiOlsibGliL25hdi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDMUYsT0FBTyxFQUE0QixFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7QUFFcEQsc0JBS0M7OztJQUpDLHFCQUFVOztJQUNWLHVCQUFZOztJQUNaLHNCQUFZOztJQUNaLDBCQUFnQjs7QUFRbEIsTUFBTSxPQUFPLFlBQVk7SUFnRHZCOzs7UUEzQ0EsZ0JBQVcsR0FBVyxJQUFJLENBQUM7UUFtQjNCLGlCQUFZLEdBQVUsRUFBRSxDQUFBO1FBb0JmLFdBQU0sR0FBVSxFQUFFLENBQUM7UUFFbEIsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFekIsQ0FBQzs7Ozs7SUExQ2pCLElBQ0ksVUFBVSxDQUFDLEdBQUc7UUFDaEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUM7SUFDekIsQ0FBQzs7OztJQUNELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDOzs7O0lBSUQsSUFDSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBQ0QsSUFBSSxPQUFPLENBQUMsSUFBb0I7UUFDOUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxJQUNJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQzs7Ozs7SUFDRCxJQUFJLFdBQVcsQ0FBQyxJQUFXO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLElBQUcsSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFDOztrQkFDcEQsR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSTs7OztZQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUNsQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ3pDLENBQUMsRUFBQztZQUNGLElBQUcsR0FBRyxFQUFDO2dCQUNMLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzFCO1NBQ0Y7SUFDSCxDQUFDOzs7O0lBV0QsUUFBUTtRQUNOLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNwQixDQUFDOzs7O0lBQ0QsV0FBVztRQUNULElBQUcsSUFBSSxDQUFDLHNCQUFzQixFQUFDO1lBQzdCLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUMzQztJQUNILENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBRyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFDO1lBQ3JDLElBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFDOztzQkFDZCxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJOzs7O2dCQUFDLEdBQUcsQ0FBQSxFQUFFO29CQUN2QyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQztnQkFDdEIsQ0FBQyxFQUFDO2dCQUNGLElBQUcsU0FBUyxFQUFDO29CQUNYLElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUNyQzthQUNGO1NBQ0Y7SUFDSCxDQUFDOzs7OztJQUNELFFBQVEsQ0FBQyxHQUFHO1FBQ1YsSUFBRyxHQUFHLENBQUMsT0FBTyxJQUFJLEdBQUcsQ0FBQyxFQUFFLEtBQUssSUFBSSxDQUFDLFlBQVksRUFBQztZQUM3QyxPQUFNO1NBQ1A7YUFDRztZQUNGLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUMsU0FBUzs7OztZQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQzlELElBQUcsR0FBRyxFQUFDO29CQUNMLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUN6QixVQUFVOzs7b0JBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsRUFBRSxFQUFDLENBQUM7aUJBQzlDO1lBQ0wsQ0FBQyxFQUFDLENBQUM7U0FDSjtJQUNILENBQUM7Ozs7SUFDRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFVBQVU7OztZQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQzs7O1lBN0ZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsbzdCQUFtQzs7YUFFcEM7Ozs7O3lCQU9FLEtBQUs7c0JBVUwsS0FBSzswQkFTTCxLQUFLO3lCQWdCTCxLQUFLO3FCQUdMLEtBQUs7d0JBRUwsTUFBTTs7OztJQXpDUCxtQ0FBMkI7O0lBVTNCLGdDQUFrQjs7SUFTbEIsb0NBQXdCOzs7OztJQWlCeEIsa0NBQXdEOztJQUN4RCw4Q0FBcUM7O0lBRXJDLDhCQUE0Qjs7SUFFNUIsaUNBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YnNjcmlwdGlvbiwgb2YgfSBmcm9tICdyeGpzJztcclxuXHJcbmludGVyZmFjZSBuYXZJdGVtIHtcclxuICBpZDpzdHJpbmcsXHJcbiAgdGV4dDpzdHJpbmcsXHJcbiAgbnVtPzpudW1iZXIsXHJcbiAgZGlzYWJsZT86Ym9vbGVhblxyXG59XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2ZhcnJpcy1uYXYnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9uYXYuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL25hdi5jb21wb25lbnQuc2NzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmF2Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG5cclxuICAvKiDmmK/lkKbmsLTlubPliIbluIMgKi9cclxuICAvLyBASW5wdXQoKSBob3Jpem9udGFsOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgX2hvcml6b250YWw6Ym9vbGVhbiA9IHRydWU7XHJcbiAgQElucHV0KClcclxuICBzZXQgaG9yaXpvbnRhbCh2YWwpIHtcclxuICAgIHRoaXMuX2hvcml6b250YWwgPSB2YWw7XHJcbiAgfVxyXG4gIGdldCBob3Jpem9udGFsKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2hvcml6b250YWw7XHJcbiAgfVxyXG5cclxuICAvL+WvvOiIquaVsOaNrlxyXG4gIF9uYXZEYXRhOm5hdkl0ZW1bXVxyXG4gIEBJbnB1dCgpXHJcbiAgZ2V0IG5hdkRhdGEoKTogQXJyYXk8bmF2SXRlbT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX25hdkRhdGE7XHJcbiAgfVxyXG4gIHNldCBuYXZEYXRhKGRhdGE6IEFycmF5PG5hdkl0ZW0+KSB7XHJcbiAgICB0aGlzLl9uYXZEYXRhID0gZGF0YTtcclxuICAgIHRoaXMuaW5pdE5hdkRhdGEoKTtcclxuICB9XHJcbiAgX2FjdGl2ZU5hdklkOnN0cmluZyA9ICcnXHJcbiAgQElucHV0KClcclxuICBnZXQgYWN0aXZlTmF2SWQoKTpzdHJpbmcge1xyXG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZU5hdklkO1xyXG4gIH1cclxuICBzZXQgYWN0aXZlTmF2SWQoZGF0YTpzdHJpbmcpIHtcclxuICAgIHRoaXMuX2FjdGl2ZU5hdklkID0gZGF0YTtcclxuICAgIGlmKHRoaXMuX2FjdGl2ZU5hdklkICYmIHRoaXMubmF2RGF0YSAmJiB0aGlzLm5hdkRhdGEubGVuZ3RoKXtcclxuICAgICAgY29uc3QgbmF2ID0gdGhpcy5uYXZEYXRhLmZpbmQobmF2ID0+IHtcclxuICAgICAgICByZXR1cm4gbmF2WydpZCddID09PSB0aGlzLl9hY3RpdmVOYXZJZDtcclxuICAgICAgfSk7XHJcbiAgICAgIGlmKG5hdil7XHJcbiAgICAgICAgdGhpcy5uYXZDaGFuZ2UuZW1pdChuYXYpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKiBuYXbliIfmjaLliY3kuovku7YgKi9cclxuICBASW5wdXQoKSBuYXZQaWNraW5nOiAoZW1wdHlPYmo/OiB7fSkgPT4gT2JzZXJ2YWJsZTxhbnk+O1xyXG4gIG5hdlBpY2tpbmdTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcclxuXHJcbiAgQElucHV0KCkgbWF4TnVtOm51bWJlciA9IDk5O1xyXG5cclxuICBAT3V0cHV0KCkgbmF2Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuaW5pdEV2ZW50cygpO1xyXG4gIH1cclxuICBuZ09uRGVzdHJveSgpIHtcclxuICAgIGlmKHRoaXMubmF2UGlja2luZ1N1YnNjcmlwdGlvbil7XHJcbiAgICAgIHRoaXMubmF2UGlja2luZ1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW5pdE5hdkRhdGEoKXtcclxuICAgIGlmKHRoaXMubmF2RGF0YSAmJiB0aGlzLm5hdkRhdGEubGVuZ3RoKXtcclxuICAgICAgaWYoIXRoaXMuX2FjdGl2ZU5hdklkKXtcclxuICAgICAgICBjb25zdCBhY3RpdmVOYXYgPSB0aGlzLm5hdkRhdGEuZmluZChuYXY9PntcclxuICAgICAgICAgIHJldHVybiAhbmF2LmRpc2FibGU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYoYWN0aXZlTmF2KXtcclxuICAgICAgICAgIHRoaXMuX2FjdGl2ZU5hdklkID0gYWN0aXZlTmF2WydpZCddO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBuYXZDbGljayhuYXYpe1xyXG4gICAgaWYobmF2LmRpc2FibGUgfHwgbmF2LmlkID09PSB0aGlzLl9hY3RpdmVOYXZJZCl7XHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgZWxzZXtcclxuICAgICAgdGhpcy5uYXZQaWNraW5nU3Vic2NyaXB0aW9uID0gdGhpcy5uYXZQaWNraW5nKCkuc3Vic2NyaWJlKCh2YWwpID0+IHtcclxuICAgICAgICAgIGlmKHZhbCl7XHJcbiAgICAgICAgICAgIHRoaXMubmF2Q2hhbmdlLmVtaXQobmF2KTtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLl9hY3RpdmVOYXZJZCA9IG5hdi5pZCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuICBpbml0RXZlbnRzKCkge1xyXG4gICAgaWYgKCF0aGlzLm5hdlBpY2tpbmcpIHtcclxuICAgICAgICB0aGlzLm5hdlBpY2tpbmcgPSAoKSA9PiBvZih0cnVlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==