/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { of } from 'rxjs';
/**
 * @record
 */
function navItem() { }
if (false) {
    /** @type {?} */
    navItem.prototype.id;
    /** @type {?} */
    navItem.prototype.text;
    /** @type {?|undefined} */
    navItem.prototype.num;
    /** @type {?|undefined} */
    navItem.prototype.disable;
}
var NavComponent = /** @class */ (function () {
    function NavComponent() {
        /* 是否水平分布 */
        // @Input() horizontal: boolean = true;
        this._horizontal = true;
        this._activeNavId = '';
        this.maxNum = 99;
        this.navChange = new EventEmitter();
    }
    Object.defineProperty(NavComponent.prototype, "horizontal", {
        get: /**
         * @return {?}
         */
        function () {
            return this._horizontal;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._horizontal = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NavComponent.prototype, "navData", {
        get: /**
         * @return {?}
         */
        function () {
            return this._navData;
        },
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            this._navData = data;
            this.initNavData();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NavComponent.prototype, "activeNavId", {
        get: /**
         * @return {?}
         */
        function () {
            return this._activeNavId;
        },
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            var _this = this;
            this._activeNavId = data;
            if (this._activeNavId && this.navData && this.navData.length) {
                /** @type {?} */
                var nav = this.navData.find((/**
                 * @param {?} nav
                 * @return {?}
                 */
                function (nav) {
                    return nav['id'] === _this._activeNavId;
                }));
                if (nav) {
                    this.navChange.emit(nav);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NavComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initEvents();
    };
    /**
     * @return {?}
     */
    NavComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.navPickingSubscription) {
            this.navPickingSubscription.unsubscribe();
        }
    };
    /**
     * @return {?}
     */
    NavComponent.prototype.initNavData = /**
     * @return {?}
     */
    function () {
        if (this.navData && this.navData.length) {
            if (!this._activeNavId) {
                /** @type {?} */
                var activeNav = this.navData.find((/**
                 * @param {?} nav
                 * @return {?}
                 */
                function (nav) {
                    return !nav.disable;
                }));
                if (activeNav) {
                    this._activeNavId = activeNav['id'];
                }
            }
        }
    };
    /**
     * @param {?} nav
     * @return {?}
     */
    NavComponent.prototype.navClick = /**
     * @param {?} nav
     * @return {?}
     */
    function (nav) {
        var _this = this;
        if (nav.disable || nav.id === this._activeNavId) {
            return;
        }
        else {
            this.navPickingSubscription = this.navPicking().subscribe((/**
             * @param {?} val
             * @return {?}
             */
            function (val) {
                if (val) {
                    _this.navChange.emit(nav);
                    setTimeout((/**
                     * @return {?}
                     */
                    function () { return _this._activeNavId = nav.id; }));
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    NavComponent.prototype.initEvents = /**
     * @return {?}
     */
    function () {
        if (!this.navPicking) {
            this.navPicking = (/**
             * @return {?}
             */
            function () { return of(true); });
        }
    };
    NavComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-nav',
                    template: "<div class=\"farris-nav\" [class.farris-nav-vertical]=\"!horizontal\">\r\n    <div class=\"farris-nav-item\" *ngFor=\"let item of navData\" \r\n    [class.active]=\"item.id === activeNavId\" \r\n    [class.disabled]=\"item.disable\"\r\n    (click)=\"navClick(item)\"\r\n    >\r\n        <div class=\"farris-nav-item-link\">\r\n            <span class=\"farris-nav-item-link-text\">\r\n                {{item.text}}\r\n                <div class=\"farris-nav-item-tag\" *ngIf=\"item.num\">\r\n                    <ng-container *ngIf=\"item.num <= maxNum; else elseTemplate\">\r\n                        <span class=\"tag-text\">{{item.num}}</span>\r\n                    </ng-container>\r\n                    <ng-template #elseTemplate>\r\n                        <span class=\"tag-text\">{{maxNum}}+</span>\r\n                    </ng-template>\r\n                </div>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>",
                    styles: [".farris-nav{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-align:center;align-items:center;border-bottom:1px solid #e9e9e9;overflow:hidden}.farris-nav-item{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.farris-nav-item-link{padding:.75rem 1rem;cursor:pointer}.farris-nav-item-link-text{position:relative;font-size:1rem;font-weight:400}.farris-nav-item-tag{position:absolute;right:-.75rem;top:calc(10px - 100%);padding:0 .375rem;color:#fff;font-size:.75rem;line-height:1.125rem;border-radius:1.125rem}.farris-nav.farris-nav-vertical{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:start;align-items:flex-start}.farris-nav.farris-nav-vertical .farris-nav-item{width:100%}"]
                }] }
    ];
    /** @nocollapse */
    NavComponent.ctorParameters = function () { return []; };
    NavComponent.propDecorators = {
        horizontal: [{ type: Input }],
        navData: [{ type: Input }],
        activeNavId: [{ type: Input }],
        navPicking: [{ type: Input }],
        maxNum: [{ type: Input }],
        navChange: [{ type: Output }]
    };
    return NavComponent;
}());
export { NavComponent };
if (false) {
    /** @type {?} */
    NavComponent.prototype._horizontal;
    /** @type {?} */
    NavComponent.prototype._navData;
    /** @type {?} */
    NavComponent.prototype._activeNavId;
    /**
     * nav切换前事件
     * @type {?}
     */
    NavComponent.prototype.navPicking;
    /** @type {?} */
    NavComponent.prototype.navPickingSubscription;
    /** @type {?} */
    NavComponent.prototype.maxNum;
    /** @type {?} */
    NavComponent.prototype.navChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbmF2LyIsInNvdXJjZXMiOlsibGliL25hdi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDMUYsT0FBTyxFQUE0QixFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7QUFFcEQsc0JBS0M7OztJQUpDLHFCQUFVOztJQUNWLHVCQUFZOztJQUNaLHNCQUFZOztJQUNaLDBCQUFnQjs7QUFHbEI7SUFxREU7OztRQTNDQSxnQkFBVyxHQUFXLElBQUksQ0FBQztRQW1CM0IsaUJBQVksR0FBVSxFQUFFLENBQUE7UUFvQmYsV0FBTSxHQUFVLEVBQUUsQ0FBQztRQUVsQixjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUV6QixDQUFDO0lBMUNqQixzQkFDSSxvQ0FBVTs7OztRQUdkO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFCLENBQUM7Ozs7O1FBTkQsVUFDZSxHQUFHO1lBQ2hCLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO1FBQ3pCLENBQUM7OztPQUFBO0lBT0Qsc0JBQ0ksaUNBQU87Ozs7UUFEWDtZQUVFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN2QixDQUFDOzs7OztRQUNELFVBQVksSUFBb0I7WUFDOUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDckIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3JCLENBQUM7OztPQUpBO0lBTUQsc0JBQ0kscUNBQVc7Ozs7UUFEZjtZQUVFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzQixDQUFDOzs7OztRQUNELFVBQWdCLElBQVc7WUFBM0IsaUJBVUM7WUFUQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztZQUN6QixJQUFHLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBQzs7b0JBQ3BELEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7Ozs7Z0JBQUMsVUFBQSxHQUFHO29CQUMvQixPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFJLENBQUMsWUFBWSxDQUFDO2dCQUN6QyxDQUFDLEVBQUM7Z0JBQ0YsSUFBRyxHQUFHLEVBQUM7b0JBQ0wsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQzFCO2FBQ0Y7UUFDSCxDQUFDOzs7T0FYQTs7OztJQXNCRCwrQkFBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDcEIsQ0FBQzs7OztJQUNELGtDQUFXOzs7SUFBWDtRQUNFLElBQUcsSUFBSSxDQUFDLHNCQUFzQixFQUFDO1lBQzdCLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUMzQztJQUNILENBQUM7Ozs7SUFFRCxrQ0FBVzs7O0lBQVg7UUFDRSxJQUFHLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUM7WUFDckMsSUFBRyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUM7O29CQUNkLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7Ozs7Z0JBQUMsVUFBQSxHQUFHO29CQUNyQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQztnQkFDdEIsQ0FBQyxFQUFDO2dCQUNGLElBQUcsU0FBUyxFQUFDO29CQUNYLElBQUksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUNyQzthQUNGO1NBQ0Y7SUFDSCxDQUFDOzs7OztJQUNELCtCQUFROzs7O0lBQVIsVUFBUyxHQUFHO1FBQVosaUJBWUM7UUFYQyxJQUFHLEdBQUcsQ0FBQyxPQUFPLElBQUksR0FBRyxDQUFDLEVBQUUsS0FBSyxJQUFJLENBQUMsWUFBWSxFQUFDO1lBQzdDLE9BQU07U0FDUDthQUNHO1lBQ0YsSUFBSSxDQUFDLHNCQUFzQixHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxTQUFTOzs7O1lBQUMsVUFBQyxHQUFHO2dCQUMxRCxJQUFHLEdBQUcsRUFBQztvQkFDTCxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDekIsVUFBVTs7O29CQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEVBQTFCLENBQTBCLEVBQUMsQ0FBQztpQkFDOUM7WUFDTCxDQUFDLEVBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQzs7OztJQUNELGlDQUFVOzs7SUFBVjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxVQUFVOzs7WUFBRyxjQUFNLE9BQUEsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFSLENBQVEsQ0FBQSxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQzs7Z0JBN0ZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsbzdCQUFtQzs7aUJBRXBDOzs7Ozs2QkFPRSxLQUFLOzBCQVVMLEtBQUs7OEJBU0wsS0FBSzs2QkFnQkwsS0FBSzt5QkFHTCxLQUFLOzRCQUVMLE1BQU07O0lBNENULG1CQUFDO0NBQUEsQUEvRkQsSUErRkM7U0ExRlksWUFBWTs7O0lBS3ZCLG1DQUEyQjs7SUFVM0IsZ0NBQWtCOztJQVNsQixvQ0FBd0I7Ozs7O0lBaUJ4QixrQ0FBd0Q7O0lBQ3hELDhDQUFxQzs7SUFFckMsOEJBQTRCOztJQUU1QixpQ0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3Vic2NyaXB0aW9uLCBvZiB9IGZyb20gJ3J4anMnO1xyXG5cclxuaW50ZXJmYWNlIG5hdkl0ZW0ge1xyXG4gIGlkOnN0cmluZyxcclxuICB0ZXh0OnN0cmluZyxcclxuICBudW0/Om51bWJlcixcclxuICBkaXNhYmxlPzpib29sZWFuXHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZmFycmlzLW5hdicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL25hdi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbmF2LmNvbXBvbmVudC5zY3NzJ10sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOYXZDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcblxyXG4gIC8qIOaYr+WQpuawtOW5s+WIhuW4gyAqL1xyXG4gIC8vIEBJbnB1dCgpIGhvcml6b250YWw6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICBfaG9yaXpvbnRhbDpib29sZWFuID0gdHJ1ZTtcclxuICBASW5wdXQoKVxyXG4gIHNldCBob3Jpem9udGFsKHZhbCkge1xyXG4gICAgdGhpcy5faG9yaXpvbnRhbCA9IHZhbDtcclxuICB9XHJcbiAgZ2V0IGhvcml6b250YWwoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faG9yaXpvbnRhbDtcclxuICB9XHJcblxyXG4gIC8v5a+86Iiq5pWw5o2uXHJcbiAgX25hdkRhdGE6bmF2SXRlbVtdXHJcbiAgQElucHV0KClcclxuICBnZXQgbmF2RGF0YSgpOiBBcnJheTxuYXZJdGVtPiB7XHJcbiAgICByZXR1cm4gdGhpcy5fbmF2RGF0YTtcclxuICB9XHJcbiAgc2V0IG5hdkRhdGEoZGF0YTogQXJyYXk8bmF2SXRlbT4pIHtcclxuICAgIHRoaXMuX25hdkRhdGEgPSBkYXRhO1xyXG4gICAgdGhpcy5pbml0TmF2RGF0YSgpO1xyXG4gIH1cclxuICBfYWN0aXZlTmF2SWQ6c3RyaW5nID0gJydcclxuICBASW5wdXQoKVxyXG4gIGdldCBhY3RpdmVOYXZJZCgpOnN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWN0aXZlTmF2SWQ7XHJcbiAgfVxyXG4gIHNldCBhY3RpdmVOYXZJZChkYXRhOnN0cmluZykge1xyXG4gICAgdGhpcy5fYWN0aXZlTmF2SWQgPSBkYXRhO1xyXG4gICAgaWYodGhpcy5fYWN0aXZlTmF2SWQgJiYgdGhpcy5uYXZEYXRhICYmIHRoaXMubmF2RGF0YS5sZW5ndGgpe1xyXG4gICAgICBjb25zdCBuYXYgPSB0aGlzLm5hdkRhdGEuZmluZChuYXYgPT4ge1xyXG4gICAgICAgIHJldHVybiBuYXZbJ2lkJ10gPT09IHRoaXMuX2FjdGl2ZU5hdklkO1xyXG4gICAgICB9KTtcclxuICAgICAgaWYobmF2KXtcclxuICAgICAgICB0aGlzLm5hdkNoYW5nZS5lbWl0KG5hdik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLyoqIG5hduWIh+aNouWJjeS6i+S7tiAqL1xyXG4gIEBJbnB1dCgpIG5hdlBpY2tpbmc6IChlbXB0eU9iaj86IHt9KSA9PiBPYnNlcnZhYmxlPGFueT47XHJcbiAgbmF2UGlja2luZ1N1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xyXG5cclxuICBASW5wdXQoKSBtYXhOdW06bnVtYmVyID0gOTk7XHJcblxyXG4gIEBPdXRwdXQoKSBuYXZDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5pbml0RXZlbnRzKCk7XHJcbiAgfVxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgaWYodGhpcy5uYXZQaWNraW5nU3Vic2NyaXB0aW9uKXtcclxuICAgICAgdGhpcy5uYXZQaWNraW5nU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpbml0TmF2RGF0YSgpe1xyXG4gICAgaWYodGhpcy5uYXZEYXRhICYmIHRoaXMubmF2RGF0YS5sZW5ndGgpe1xyXG4gICAgICBpZighdGhpcy5fYWN0aXZlTmF2SWQpe1xyXG4gICAgICAgIGNvbnN0IGFjdGl2ZU5hdiA9IHRoaXMubmF2RGF0YS5maW5kKG5hdj0+e1xyXG4gICAgICAgICAgcmV0dXJuICFuYXYuZGlzYWJsZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZihhY3RpdmVOYXYpe1xyXG4gICAgICAgICAgdGhpcy5fYWN0aXZlTmF2SWQgPSBhY3RpdmVOYXZbJ2lkJ107XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIG5hdkNsaWNrKG5hdil7XHJcbiAgICBpZihuYXYuZGlzYWJsZSB8fCBuYXYuaWQgPT09IHRoaXMuX2FjdGl2ZU5hdklkKXtcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICBlbHNle1xyXG4gICAgICB0aGlzLm5hdlBpY2tpbmdTdWJzY3JpcHRpb24gPSB0aGlzLm5hdlBpY2tpbmcoKS5zdWJzY3JpYmUoKHZhbCkgPT4ge1xyXG4gICAgICAgICAgaWYodmFsKXtcclxuICAgICAgICAgICAgdGhpcy5uYXZDaGFuZ2UuZW1pdChuYXYpO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMuX2FjdGl2ZU5hdklkID0gbmF2LmlkKTtcclxuICAgICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGluaXRFdmVudHMoKSB7XHJcbiAgICBpZiAoIXRoaXMubmF2UGlja2luZykge1xyXG4gICAgICAgIHRoaXMubmF2UGlja2luZyA9ICgpID0+IG9mKHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuIl19