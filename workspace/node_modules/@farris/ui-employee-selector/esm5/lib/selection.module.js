/**
 * @fileoverview added by tsickle
 * Generated from: lib/selection.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DragDropModule } from '@angular/cdk/drag-drop';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { AvatarModule } from '@farris/ui-avatar';
import { FarrisCommonModule } from '@farris/ui-common';
import { DatagridModule } from '@farris/ui-datagrid';
import { DatagridEditorsModule } from '@farris/ui-datagrid-editors';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { FarrisFormsModule } from '@farris/ui-forms';
import { InputGroupModule } from '@farris/ui-input-group';
import { ListViewModule } from '@farris/ui-list-view';
import { LocaleModule } from '@farris/ui-locale';
import { MessagerModule } from '@farris/ui-messager';
import { ModalModule } from '@farris/ui-modal';
import { NotifyModule } from '@farris/ui-notify';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { SwitchModule } from '@farris/ui-switch';
import { FarrisTabsModule } from '@farris/ui-tabs';
import { TextModule } from '@farris/ui-text';
import { TreeModule } from '@farris/ui-tree';
import { TreeTableModule } from '@farris/ui-treetable';
import { CandidateComponent } from '../lib/tab-candidate/candidate.component';
import { FavoritesComponent } from '../lib/tab-favorites/favorites.component';
import { GroupComponent } from '../lib/tab-group/group.component';
import { RecentContactsComponent } from '../lib/tab-recent-contacts/trc.component';
import { ApiLocalService } from '../utils/api-service';
import { quickInputDatagridComponent } from './quickInputDatagrid.component';
import { SearchResultComponent } from './search-result-page/srp.component';
import { EmployeeSelectorComponent } from './selection.component';
import { SelectionService } from './selection.service';
import { UnSelectDatagridComponent } from './tab-org-mid/unselectdatagrid.component';
import { UserGroupUnSelectComponent } from './tab-usergroup-mid/usergroupunselect.component';
import { OrgPersonnelComponent } from './tab-org-personnel/op.component';
import { LoadingModule } from '@farris/ui-loading';
import { ComboListModule } from '@farris/ui-combo-list';
import { PopoverModule } from '@farris/ui-popover';
// 兼容保留
import { unSelectDatagridOrgComponent } from './unselectdatagridorg.component';
import { unSelectDatagridRoleComponent } from './unSelectDatagridRoleComponent';
import { QuickSelectComponent } from './quick-select-page/qsp.component';
import { SearchKeywordPipe } from './pipe/search-keyword.pipe';
var EmployeeSelectorModule = /** @class */ (function () {
    function EmployeeSelectorModule() {
    }
    EmployeeSelectorModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        EmployeeSelectorComponent,
                        UnSelectDatagridComponent,
                        UserGroupUnSelectComponent,
                        quickInputDatagridComponent,
                        CandidateComponent,
                        RecentContactsComponent,
                        FavoritesComponent,
                        GroupComponent,
                        unSelectDatagridRoleComponent,
                        unSelectDatagridOrgComponent,
                        OrgPersonnelComponent,
                        SearchResultComponent,
                        QuickSelectComponent,
                        SearchKeywordPipe,
                    ],
                    entryComponents: [
                        UnSelectDatagridComponent,
                        UserGroupUnSelectComponent,
                        quickInputDatagridComponent
                    ],
                    imports: [
                        DragDropModule,
                        CommonModule,
                        HttpClientModule,
                        LocaleModule,
                        PerfectScrollbarModule,
                        TreeModule,
                        TreeTableModule,
                        FarrisTabsModule,
                        FarrisFormsModule,
                        DatagridModule,
                        DatagridEditorsModule,
                        ListViewModule,
                        FarrisCommonModule,
                        FormsModule,
                        FarrisDialogModule,
                        InputGroupModule,
                        ModalModule,
                        SwitchModule,
                        AvatarModule,
                        TextModule,
                        MessagerModule,
                        NotifyModule,
                        ReactiveFormsModule,
                        LoadingModule.forRoot(),
                        ComboListModule,
                        PopoverModule
                    ],
                    providers: [
                        SelectionService,
                        ApiLocalService
                    ],
                    exports: [
                        EmployeeSelectorComponent,
                    ]
                },] }
    ];
    return EmployeeSelectorModule;
}());
export { EmployeeSelectorModule };
//# sourceMappingURL=data:application/json;base64,