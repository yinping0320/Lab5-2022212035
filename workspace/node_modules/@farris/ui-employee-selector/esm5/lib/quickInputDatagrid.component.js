/**
 * @fileoverview added by tsickle
 * Generated from: lib/quickInputDatagrid.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ViewChild } from "@angular/core";
import { ApiLocalService } from "../utils/api-service";
import { DatagridComponent } from "@farris/ui-datagrid";
import { of } from 'rxjs';
// 兼容保留，该组件无用
var quickInputDatagridComponent = /** @class */ (function () {
    function quickInputDatagridComponent(ApiLocalService) {
        var _this = this;
        this.ApiLocalService = ApiLocalService;
        this.isAllSelect = new EventEmitter();
        /**
         * 人员展示区的复选框取消勾选时触发逻辑
         * @param $event
         * @return
         */
        this.onBeforeUncheck = (/**
         * @param {?} $event
         * @return {?}
         */
        function ($event) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            function (selection, index) {
                if ($event.rowData["id"] === selection["id"]) {
                    _this.selections.splice(index, 1);
                }
            }));
            /** @type {?} */
            var emitojb = {
                items: _this.itemsQuick,
                pageIndex: _this.pageIndexQuick,
                pageSize: _this.pageSizeQuick,
                pageTotal: _this.pageTotalQuick,
                pageTotalAll: _this.pageTotalAllQuick,
                unSelectedList: _this.unSelectedListQuick
            };
            _this.isAllSelect.emit(emitojb);
            return of(true);
        });
    }
    /**
     * @return {?}
     */
    quickInputDatagridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.quickInputDatagrid.loadData(this.itemsQuick);
    };
    /**
     * @return {?}
     */
    quickInputDatagridComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.pageChangeCheck();
    };
    /**
       * 人员展示区datagrid用于数据加载
       */
    /**
     * 人员展示区datagrid用于数据加载
     * @return {?}
     */
    quickInputDatagridComponent.prototype.unSelectedListLoad = /**
     * 人员展示区datagrid用于数据加载
     * @return {?}
     */
    function () {
        var _this = this;
        this.itemsQuick = [];
        this.unSelectedListQuick.forEach((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.itemsQuick.push({ "displayname": res.displayname, "nameChs": res.nameChs, "id": res.id, "organization": res.organization, "organizationName": res.userOrganize, "userInFo": res.userInfo });
        }));
        this.quickInputDatagrid.loadData(this.itemsQuick);
        this.pageChangeCheck();
        /** @type {?} */
        var emitojb = {
            items: this.itemsQuick,
            pageIndex: this.pageIndexQuick,
            pageSize: this.pageSizeQuick,
            pageTotal: this.pageTotalQuick,
            pageTotalAll: this.pageTotalAllQuick,
            unSelectedList: this.unSelectedListQuick
        };
        this.isAllSelect.emit(emitojb);
    };
    /**
       * 当前行选中
       * @param data 当前行的数据（）
       */
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    quickInputDatagridComponent.prototype.selectLine = /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    function (data) {
        if (this.isSingleCheck) {
            if (this.selections.length == 0 || this._isInArray(data.id, "id", this.selections)) {
                this._insertOneIntoSelections(data.data);
            }
            else {
                alert(this.noSelectToRight);
            }
        }
        else {
            this._insertOneIntoSelections(data.data);
        }
        /** @type {?} */
        var emitojb = {
            items: this.itemsQuick,
            pageIndex: this.pageIndexQuick,
            pageSize: this.pageSizeQuick,
            pageTotal: this.pageTotalQuick,
            pageTotalAll: this.pageTotalAllQuick,
            unSelectedList: this.unSelectedListQuick
        };
        this.isAllSelect.emit(emitojb);
    };
    //人员展示翻页触发查询（！）
    //人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    quickInputDatagridComponent.prototype.switchPage = 
    //人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        this.pageIndexQuick = size.pageIndex;
        /** @type {?} */
        var isChinese;
        //中文
        if (/^[\u4e00-\u9fa5]+$/i.test(this.quickInput)) {
            isChinese = 0;
        }
        else if (!(/^[\u4e00-\u9fa5]+$/i.test(this.quickInput)) && !(escape(this.quickInput).indexOf("%u") < 0)) {
            alert("输入框禁止同时输入汉字和拼音或汉字和数字！");
            //英文
        }
        else if (/^[a-zA-Z]+$/.test(this.quickInput)) {
            if (this.quickInput.length > 3) {
                isChinese = 2;
            }
            else
                (isChinese = 3);
        }
        else {
            isChinese = 1;
        }
    };
    /**
       * 选中并插入当前行数据到右侧
       * @param data 当前行的数据
       * @param collection 暂存当前数据的集合
       */
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    quickInputDatagridComponent.prototype._insertOneIntoSelections = /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var collection = [];
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data["id"], "id", this.selections)) {
            return;
        }
        collection.push(data);
        this._insertSomeIntoSelections(collection);
    };
    /**
         * 判断是否在内
         * @param value
         * @param field
         * @param array
         * @returns
         */
    /**
     * 判断是否在内
     * @param {?} value
     * @param {?} field
     * @param {?} array
     * @return {?}
     */
    quickInputDatagridComponent.prototype._isInArray = /**
     * 判断是否在内
     * @param {?} value
     * @param {?} field
     * @param {?} array
     * @return {?}
     */
    function (value, field, array) {
        if (!field || !value) {
            throw new Error('前2个参数必填');
        }
        return array.find((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return value === item[field]; })) ? true : false;
    };
    /**
     * @param {?} userArray
     * @return {?}
     */
    quickInputDatagridComponent.prototype._insertSomeIntoSelections = /**
     * @param {?} userArray
     * @return {?}
     */
    function (userArray) {
        var _this = this;
        userArray.forEach((/**
         * @param {?} user
         * @return {?}
         */
        function (user) {
            if (!_this._isInArray(user["id"], "id", _this.selections)) {
                _this.selections.push(user);
            }
        }));
    };
    /**
         * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
         */
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    quickInputDatagridComponent.prototype.pageChangeCheck = /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.unSelectedListQuick) {
            this.unSelectedListQuick.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (_this._isInArray(item.id, "id", _this.selections)) {
                    _this.quickInputDatagrid.checkRow(item.id);
                }
                else {
                    _this.quickInputDatagrid.unCheckRow(item.id);
                }
            }));
        }
    };
    quickInputDatagridComponent.decorators = [
        { type: Component, args: [{
                    template: "<farris-datagrid #quickInputDatagrid class=\"s-unSelectDatagrid-query\" [pagerViewMode]=\"'simple'\" [checkOnSelect]=\"true\"\n    [selectOnCheck]=\"true\" [multiSelect]=\"true\" [columns]=\"columnsQuick\" [data]=\"itemsQuick\"\n    [enableSelectRow]=\"true\" [showHeader]=\"false\" [fitColumns]=\"true\" [height]=\"200\"\n    [showBorder]=\"false\" [striped]=\"false\" [fit]=\"true\" [showPageNumber]=\"false\"\n    [pageIndex]=\"pageIndexQuick\" [pageSize]=\"pageSizeQuick\" [total]=\"pageTotalAllQuick\"\n    (checked)=\"selectLine($event)\" (pageChanged)=\"switchPage($event)\"\n    [beforeUncheck]=\"onBeforeUncheck\">\n  </farris-datagrid>"
                }] }
    ];
    /** @nocollapse */
    quickInputDatagridComponent.ctorParameters = function () { return [
        { type: ApiLocalService }
    ]; };
    quickInputDatagridComponent.propDecorators = {
        quickInputDatagrid: [{ type: ViewChild, args: ['quickInputDatagrid',] }],
        columnsQuick: [{ type: Input }],
        url2: [{ type: Input }],
        itemsQuick: [{ type: Input }],
        pageIndexQuick: [{ type: Input }],
        pageSizeQuick: [{ type: Input }],
        pageTotalAllQuick: [{ type: Input }],
        pathQuick: [{ type: Input }],
        orgIdQuick: [{ type: Input }],
        isContainQuick: [{ type: Input }],
        pageTotalQuick: [{ type: Input }],
        isSingleCheck: [{ type: Input }],
        selections: [{ type: Input }],
        noSelectToRight: [{ type: Input }],
        quickInput: [{ type: Input }],
        isLoadOutData: [{ type: Input }],
        unSelectedQuickLists: [{ type: Input }],
        unSelectedListQuick: [{ type: Input }],
        organizationList: [{ type: Input }],
        listIdField: [{ type: Input }],
        searchPage: [{ type: Input }],
        isenabled: [{ type: Input }],
        isExcludeMe: [{ type: Input }],
        isAllSelect: [{ type: Output }]
    };
    return quickInputDatagridComponent;
}());
export { quickInputDatagridComponent };
if (false) {
    /** @type {?} */
    quickInputDatagridComponent.prototype.quickInputDatagrid;
    /** @type {?} */
    quickInputDatagridComponent.prototype.columnsQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.url2;
    /** @type {?} */
    quickInputDatagridComponent.prototype.itemsQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.pageIndexQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.pageSizeQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.pageTotalAllQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.pathQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.orgIdQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.isContainQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.pageTotalQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.isSingleCheck;
    /** @type {?} */
    quickInputDatagridComponent.prototype.selections;
    /** @type {?} */
    quickInputDatagridComponent.prototype.noSelectToRight;
    /** @type {?} */
    quickInputDatagridComponent.prototype.quickInput;
    /** @type {?} */
    quickInputDatagridComponent.prototype.isLoadOutData;
    /** @type {?} */
    quickInputDatagridComponent.prototype.unSelectedQuickLists;
    /** @type {?} */
    quickInputDatagridComponent.prototype.unSelectedListQuick;
    /** @type {?} */
    quickInputDatagridComponent.prototype.organizationList;
    /** @type {?} */
    quickInputDatagridComponent.prototype.listIdField;
    /** @type {?} */
    quickInputDatagridComponent.prototype.searchPage;
    /** @type {?} */
    quickInputDatagridComponent.prototype.isenabled;
    /** @type {?} */
    quickInputDatagridComponent.prototype.isExcludeMe;
    /** @type {?} */
    quickInputDatagridComponent.prototype.isAllSelect;
    /**
     * 人员展示区的复选框取消勾选时触发逻辑
     * \@param $event
     * \@return
     * @type {?}
     */
    quickInputDatagridComponent.prototype.onBeforeUncheck;
    /**
     * @type {?}
     * @private
     */
    quickInputDatagridComponent.prototype.ApiLocalService;
}
//# sourceMappingURL=data:application/json;base64,