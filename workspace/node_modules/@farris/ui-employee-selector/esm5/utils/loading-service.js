/**
 * @fileoverview added by tsickle
 * Generated from: utils/loading-service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var DataLoadingService = /** @class */ (function () {
    /**
     * 构造函数
     * 注入@farris/ui的LoadingService
     */
    function DataLoadingService() {
        //this.loadingService = this.injector.get(LoadingService);
    }
    /**
     * 显示加载中
     */
    /**
     * 显示加载中
     * @param {?=} configOrMessage
     * @return {?}
     */
    DataLoadingService.prototype.show = /**
     * 显示加载中
     * @param {?=} configOrMessage
     * @return {?}
     */
    function (configOrMessage) {
        if (this.loadingCmp) {
            this.loadingCmp.close();
            this.loadingCmp = null;
        }
        /** @type {?} */
        var loadingConfig = this.buildLoadingConfig(configOrMessage);
        this.loadingCmp = this.loadingService.show(loadingConfig);
        return this.loadingCmp;
    };
    /**
     * 构造LoadingConfig
     * @param configOrMessage 配置对象或消息字符串
     */
    /**
     * 构造LoadingConfig
     * @private
     * @param {?} configOrMessage 配置对象或消息字符串
     * @return {?}
     */
    DataLoadingService.prototype.buildLoadingConfig = /**
     * 构造LoadingConfig
     * @private
     * @param {?} configOrMessage 配置对象或消息字符串
     * @return {?}
     */
    function (configOrMessage) {
        /** @type {?} */
        var loadingConfig;
        if (!!configOrMessage) {
            if (typeof configOrMessage === 'object') {
                loadingConfig = configOrMessage;
            }
            else {
                loadingConfig = { 'message': configOrMessage };
            }
        }
        else {
            loadingConfig = {};
        }
        if (!loadingConfig.hasOwnProperty('delay')) {
            loadingConfig.delay = 0;
        }
        return loadingConfig;
    };
    /**
     * 隐藏加载中
     */
    /**
     * 隐藏加载中
     * @return {?}
     */
    DataLoadingService.prototype.hide = /**
     * 隐藏加载中
     * @return {?}
     */
    function () {
        if (!this.loadingCmp) {
            return;
        }
        this.loadingCmp.close();
        this.loadingCmp = null;
    };
    DataLoadingService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    DataLoadingService.ctorParameters = function () { return []; };
    return DataLoadingService;
}());
if (false) {
    /**
     * 加载中组件实例
     * @type {?}
     * @private
     */
    DataLoadingService.prototype.loadingCmp;
    /** @type {?} */
    DataLoadingService.prototype.loadingService;
}
export { DataLoadingService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1lbXBsb3llZS1zZWxlY3Rvci8iLCJzb3VyY2VzIjpbInV0aWxzL2xvYWRpbmctc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQVksTUFBTSxlQUFlLENBQUM7QUFHckQ7SUFVRTs7O09BR0c7SUFDSDtRQUNFLDBEQUEwRDtJQUM1RCxDQUFDO0lBRUQ7O09BRUc7Ozs7OztJQUNJLGlDQUFJOzs7OztJQUFYLFVBQVksZUFBcUI7UUFDL0IsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ25CLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDeEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7U0FDeEI7O1lBRUssYUFBYSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxlQUFlLENBQUM7UUFDOUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMxRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7OztJQUNLLCtDQUFrQjs7Ozs7O0lBQTFCLFVBQTJCLGVBQW9COztZQUN6QyxhQUE0QjtRQUNoQyxJQUFJLENBQUMsQ0FBQyxlQUFlLEVBQUU7WUFDckIsSUFBSSxPQUFPLGVBQWUsS0FBSyxRQUFRLEVBQUU7Z0JBQ3ZDLGFBQWEsR0FBRyxlQUFlLENBQUM7YUFDakM7aUJBQU07Z0JBQ0wsYUFBYSxHQUFHLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxDQUFDO2FBQ2hEO1NBQ0Y7YUFBTTtZQUNMLGFBQWEsR0FBRyxFQUFFLENBQUM7U0FDcEI7UUFDRCxJQUFJLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMxQyxhQUFhLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUN6QjtRQUNELE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7SUFFRDs7T0FFRzs7Ozs7SUFDSSxpQ0FBSTs7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDcEIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUN6QixDQUFDOztnQkE5REYsVUFBVTs7OztJQStEWCx5QkFBQztDQUFBLEFBL0RELElBK0RDOzs7Ozs7O0lBekRDLHdDQUFxQzs7SUFFckMsNENBQStCOztBQXlEakMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBMb2FkaW5nU2VydmljZSwgTG9hZGluZ0NvbmZpZywgTG9hZGluZ0NvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmNsYXNzIERhdGFMb2FkaW5nU2VydmljZSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIOWKoOi9veS4ree7hOS7tuWunuS+i1xyXG4gICAqL1xyXG4gIHByaXZhdGUgbG9hZGluZ0NtcDogTG9hZGluZ0NvbXBvbmVudDtcclxuXHJcbiAgbG9hZGluZ1NlcnZpY2U6IExvYWRpbmdTZXJ2aWNlO1xyXG5cclxuICAvKipcclxuICAgKiDmnoTpgKDlh73mlbBcclxuICAgKiDms6jlhaVAZmFycmlzL3Vp55qETG9hZGluZ1NlcnZpY2VcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIC8vdGhpcy5sb2FkaW5nU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KExvYWRpbmdTZXJ2aWNlKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOaYvuekuuWKoOi9veS4rVxyXG4gICAqL1xyXG4gIHB1YmxpYyBzaG93KGNvbmZpZ09yTWVzc2FnZT86IGFueSk6IExvYWRpbmdDb21wb25lbnQge1xyXG4gICAgaWYgKHRoaXMubG9hZGluZ0NtcCkge1xyXG4gICAgICB0aGlzLmxvYWRpbmdDbXAuY2xvc2UoKTtcclxuICAgICAgdGhpcy5sb2FkaW5nQ21wID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBsb2FkaW5nQ29uZmlnID0gdGhpcy5idWlsZExvYWRpbmdDb25maWcoY29uZmlnT3JNZXNzYWdlKTtcclxuICAgIHRoaXMubG9hZGluZ0NtcCA9IHRoaXMubG9hZGluZ1NlcnZpY2Uuc2hvdyhsb2FkaW5nQ29uZmlnKTtcclxuICAgIHJldHVybiB0aGlzLmxvYWRpbmdDbXA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDmnoTpgKBMb2FkaW5nQ29uZmlnXHJcbiAgICogQHBhcmFtIGNvbmZpZ09yTWVzc2FnZSDphY3nva7lr7nosaHmiJbmtojmga/lrZfnrKbkuLJcclxuICAgKi9cclxuICBwcml2YXRlIGJ1aWxkTG9hZGluZ0NvbmZpZyhjb25maWdPck1lc3NhZ2U6IGFueSk6IExvYWRpbmdDb25maWcge1xyXG4gICAgbGV0IGxvYWRpbmdDb25maWc6IExvYWRpbmdDb25maWc7XHJcbiAgICBpZiAoISFjb25maWdPck1lc3NhZ2UpIHtcclxuICAgICAgaWYgKHR5cGVvZiBjb25maWdPck1lc3NhZ2UgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgbG9hZGluZ0NvbmZpZyA9IGNvbmZpZ09yTWVzc2FnZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBsb2FkaW5nQ29uZmlnID0geyAnbWVzc2FnZSc6IGNvbmZpZ09yTWVzc2FnZSB9O1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBsb2FkaW5nQ29uZmlnID0ge307XHJcbiAgICB9XHJcbiAgICBpZiAoIWxvYWRpbmdDb25maWcuaGFzT3duUHJvcGVydHkoJ2RlbGF5JykpIHtcclxuICAgICAgbG9hZGluZ0NvbmZpZy5kZWxheSA9IDA7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbG9hZGluZ0NvbmZpZztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOmakOiXj+WKoOi9veS4rVxyXG4gICAqL1xyXG4gIHB1YmxpYyBoaWRlKCkge1xyXG4gICAgaWYgKCF0aGlzLmxvYWRpbmdDbXApIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5sb2FkaW5nQ21wLmNsb3NlKCk7XHJcbiAgICB0aGlzLmxvYWRpbmdDbXAgPSBudWxsO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgRGF0YUxvYWRpbmdTZXJ2aWNlIH07Il19