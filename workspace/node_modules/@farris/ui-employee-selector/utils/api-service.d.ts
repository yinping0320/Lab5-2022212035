import { HttpClient } from '@angular/common/http';
import { OrgRequestParam, PersonnelRequestParam } from './user.type';
export declare class ApiLocalService {
    http: HttpClient;
    getOrgsUrl: string;
    getOrgsWithLayer: string;
    getUsersUrl: string;
    constructor(http: HttpClient);
    filterGroupLeader(param: any): import("rxjs").Observable<Object>;
    getGroupLeaderStatus(param: any): import("rxjs").Observable<Object>;
    /**
     * 获取行政组织
     * @returns observable
     */
    getOrganization(url: string, param: OrgRequestParam): import("rxjs").Observable<Object>;
    /**
     * 获取行政组织（全加载）
     * @returns observable
     */
    getOrganizations(param: any): import("rxjs").Observable<Object>;
    /**
     * 根据id获取行政组织
     * @returns observable
     */
    getOrganizationsWithIds(ids: string): import("rxjs").Observable<Object>;
    /**
     * 获取行政组织（分层加载）
     * @returns observable
     */
    getOrganizationsWithLayer(param: any): import("rxjs").Observable<Object>;
    /**
     * 获取行政组织（搜索组织）
     * @returns observable
     */
    getOrganizationWithFilter(queryFilter: any): import("rxjs").Observable<Object>;
    /**
     * 根据人员id获取行政人员
     * @returns observable
     */
    getUsersById(ids: string): import("rxjs").Observable<Object>;
    /**
     * 根据人员code或者name获取行政人员
     * @returns observable
     */
    getUsersWithFilter(queryFilter: any): import("rxjs").Observable<Object>;
    /**
     * 获取系统用户分组
     * @returns observable
     */
    getSysUserGroup(param: any): import("rxjs").Observable<Object>;
    /**
     *
     * @param url url地址
     * @param absOrgType 系统组织
     * @param orgId 组织id
     * @param requestParam 请求参数
     * @returns observable
     */
    getPersonnelByOrgId(url: string, absOrgType: string, orgId: string, requestParam: PersonnelRequestParam): import("rxjs").Observable<Object>;
    getPersonnelByUserGroupId(url: string, requestParam: PersonnelRequestParam): import("rxjs").Observable<Object>;
    /**
     * 查询行政人员（根据人员id返回相关数据）
     * @param url url地址
     * @param absOrgType 系统类型
     * @param ids 人员id
     * @returns observable
     */
    getPersonnelByUserIds(url: string, absOrgType: string, ids: string): import("rxjs").Observable<Object>;
    /**
     * 搜索行政人员（根据名称、编号搜索）
     * @param url 传入的url
     * @param absOrgType 数据源类型
     * @param codeOrName 传入的搜索内容
     * @param requestParam 请求参数
     * @returns observable
     */
    getPersonnelBySearch(url: string, absOrgType: string, codeOrName: string, requestParam: PersonnelRequestParam): import("rxjs").Observable<Object>;
    /**
     * 获取群组信息
     * @param url 接口地址
     * @returns observable
     */
    getGroupOrGroupPersonnel(url: string, param?: {
        isenable: boolean;
        parentid: string;
    }): import("rxjs").Observable<Object>;
    getGlobalParamConfig(url: string): import("rxjs").Observable<Object>;
    getFilterPosition(url: string, absOrgType: string, requestParam: PersonnelRequestParam): import("rxjs").Observable<Object>;
    getFilterOrganization(url: string, absOrgType: string, requestParam: PersonnelRequestParam): import("rxjs").Observable<Object>;
}
