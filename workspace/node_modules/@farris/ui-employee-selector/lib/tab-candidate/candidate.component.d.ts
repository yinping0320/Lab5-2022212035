import { EventEmitter, OnInit, AfterViewInit, SimpleChanges, OnChanges, Injector } from '@angular/core';
import { ApiLocalService } from '../../utils/api-service';
import { FavoritesTool } from '../../utils/favorites.tool';
export declare class CandidateComponent implements OnInit, AfterViewInit, OnChanges {
    private apiService;
    private injector;
    private favoritesTool;
    idField: string;
    items: any[];
    absUserOrgUrl: any;
    absOrgType: any;
    multiSelect: any;
    searchText: any;
    unSelectedList: any[];
    userIds: string;
    unSelectedUserIds: string;
    type: any;
    includeStopUser: boolean;
    searchPage: boolean;
    includeCurrentUser: boolean;
    busNum: string;
    enableFavorites: boolean;
    validElementsInfo: string;
    selectionsChange: EventEmitter<any>;
    candidateItemsChange: EventEmitter<any[]>;
    private cdRef;
    allChecked: boolean;
    columns: any;
    selections: any[];
    cloneUserIds: string;
    cloneSelections: any[];
    itemsBackup: any[];
    allIndexId: string;
    noDataImg: string;
    favoritesList: any[];
    showUserCode: boolean;
    constructor(apiService: ApiLocalService, injector: Injector, favoritesTool: FavoritesTool);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    assembleData(): void;
    toggleFavorites(e: any, item: any): void;
    searchByCodeOrName(): void;
    restoreSelections(): void;
    toggleAll(): void;
    toggleOne(data: any): void;
    /**
     * datagrid用于数据展示
     */
    unSelectedListLoad(): void;
    /**
     * 全选后处理
     * @param dataArr 全选的值
     */
    checkAll(): void;
    /**
     * 全部取消
     * @param dataArr 取消的数据
     * @returns void
     */
    unCheckAll(): void;
    /**
     * 当前行选中
     * @param data 当前行的数据（）
     */
    selectLine(data: any): void;
    /**
     * 单选取消选中
     * @param data 取消选中行
     */
    unSelectLine(data: any): void;
    private emitSelections;
    /**
     * todo
     */
    assembleDataByUserId(ids: string, initLoad?: boolean): import("rxjs").Observable<Object>;
    /**
     *  取消选中
     * @param $event 取消勾选的数据
     */
    cancelSelections($event: any): void;
    /**
     * 全部取消勾选
     */
    clearCheckeds(): void;
    clearUserIds(): void;
    /**
     * 选中并插入当前行数据到右侧
     * @param data 当前行的数据
     * @param collection 暂存当前数据的集合
     */
    _insertOneIntoSelections(data: any): void;
    /**
     * 判断是否在内
     * @param value value
     * @param field field
     * @param array array
     * @returns 位置索引
     */
    _isInArray(value: string, field: string, array: any[]): number;
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     */
    toggleChecked(): void;
    private isAllChecked;
    trackByFn(index: any, item: any): any;
}
