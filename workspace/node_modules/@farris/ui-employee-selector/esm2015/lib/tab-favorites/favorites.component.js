/**
 * @fileoverview added by tsickle
 * Generated from: lib/tab-favorites/favorites.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ChangeDetectorRef, Injector } from '@angular/core';
import * as _ from 'lodash-es';
import { noDataImg } from '../../assets/resource';
import { NotifyService } from '@farris/ui-notify';
import { FavoritesTool } from '../../utils/favorites.tool';
export class FavoritesComponent {
    /**
     * @param {?} notifyService
     * @param {?} favoritesTool
     * @param {?} injector
     */
    constructor(notifyService, favoritesTool, injector) {
        this.notifyService = notifyService;
        this.favoritesTool = favoritesTool;
        this.injector = injector;
        this.orgId = '';
        this.userIds = '';
        this.selectionsChange = new EventEmitter();
        this.recentContactsChange = new EventEmitter();
        this.allChecked = false;
        this.selections = [];
        this.cloneUserIds = '';
        this.cloneSelections = [];
        this.allIndexId = 'allIndexId';
        this.noDataImg = noDataImg;
        this.items = [];
        this.favoritesList = [];
        // 是否显示用户编号
        this.showUserCode = true;
        this.allIndexId = Math.random().toString(16).substring(3, 12);
        this.cdRef = this.injector.get(ChangeDetectorRef);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.favoritesTool.favoritesSubject.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            this.favoritesList = data;
            this.loadFavoritesList();
        }));
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
    }
    // 不用搜索了，临时保留
    /**
     * @return {?}
     */
    assembleData() {
        if (this.searchPage) {
            this.searchByCodeOrName();
        }
        else {
            this.favoritesTool.getFavoritesList(this.withPermission).subscribe((/**
             * @param {?} res
             * @return {?}
             */
            (res) => {
                /** @type {?} */
                const flResData = res ? res.data : [];
                this.favoritesList = flResData;
                this.loadFavoritesList();
            }));
        }
    }
    /**
     * @return {?}
     */
    searchByCodeOrName() {
        this.items = this.items.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            return item.code.indexOf(this.searchText) !== -1 || item.name.indexOf(this.searchText) !== -1;
        }));
    }
    /**
     * @return {?}
     */
    restoreSelections() {
        this.selections = _.cloneDeep(this.cloneSelections);
        this.toggleChecked();
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    }
    /**
     * @return {?}
     */
    toggleAll() {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.cdRef.detectChanges();
        this.emitSelections();
    }
    /**
     * @param {?} data
     * @return {?}
     */
    toggleOne(data) {
        if (data.checked) {
            this.unSelectLine(data);
        }
        else {
            this.selectLine(data);
        }
        this.cdRef.detectChanges();
        this.emitSelections();
    }
    /**
     * 用于数据展示
     * @return {?}
     */
    loadFavoritesList() {
        this.items = [];
        this.favoritesList.forEach((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            // const indexId = Math.random().toString(16).substring(2);
            // const item = {
            //     abbreviation: res.abbreviation,
            //     code: res.code,
            //     defaultOrgId: res.defaultOrgId,
            //     defaultOrgPath: res.defaultOrgPath,
            //     ext1: res.ext1,
            //     ext2: res.ext2,
            //     fullPathName: res.fullPathName,
            //     name: res.name,
            //     orgTypeId: res.orgTypeId,
            //     secLevel: res.secLevel,
            //     sortOrder: res.sortOrder,
            //     state: res.state,
            //     su: res.su,
            //     userId: res.userId,
            //     orgAllPath: res.orgAllPath,
            //     type: 'people',
            //     checked: false,
            //     inFavorites: false,
            //     indexId
            // };
            /** @type {?} */
            const item = _.cloneDeep(res);
            item.checked = false;
            item.inFavorites = false;
            item.indexId = Math.random().toString(16).substring(2);
            if (this._isInArray(res['id'], 'id', this.selections) !== -1) {
                item.checked = true;
            }
            item.displayName = !!this.showUserCode ? ('[' + item.code + ']' + item.name) : item.name;
            this.items.push(item);
        }));
        this.toggleChecked();
    }
    /**
     * 全选后处理
     * @return {?}
     */
    checkAll() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    }
    /**
     * 全部取消
     * @return {?} void
     */
    unCheckAll() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            (selection, index) => {
                if (item['id'] === selection['id']) {
                    this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    }
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    selectLine(data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.userIds = '';
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    }
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    unSelectLine(data) {
        /** @type {?} */
        const index = this._isInArray(data['id'], 'id', this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        if (this.allChecked) {
            this.allChecked = false;
        }
    }
    /**
     * @private
     * @return {?}
     */
    emitSelections() {
        /** @type {?} */
        const emitObj = {
            selections: this.selections,
            token: 'recent'
        };
        this.selectionsChange.emit(emitObj);
    }
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    deleteFromFavorites(e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    }
    /**
     * 清空我的收藏
     * @return {?}
     */
    clearFavoritesList() {
        this.favoritesTool.clearFavoritesList();
        this.items = [];
        this.cdRef.detectChanges();
    }
    /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    cancelSelections($event) {
        if (this.items.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        item => item['id'] === $event.id)) === -1) {
            return;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (item['id'] === $event.id) {
                item.checked = false;
            }
        }));
        this.selections.forEach((/**
         * @param {?} selection
         * @param {?} index
         * @return {?}
         */
        (selection, index) => {
            if ($event.id === selection['id']) {
                this.selections.splice(index, 1);
            }
        }));
        this.allChecked = false;
    }
    /**
     * 全部取消勾选
     * @return {?}
     */
    clearCheckeds() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            item.checked = false;
        }));
        this.allChecked = false;
        this.selections = [];
    }
    /**
     * @return {?}
     */
    clearUserIds() {
        this.userIds = '';
    }
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    _insertOneIntoSelections(data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data['id'], 'id', this.selections) > -1) {
            return;
        }
        this.selections.push(data);
        this.selections = this.selections.slice();
    }
    /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    _isInArray(value, field, array) {
        if (!field || !value) {
            throw new Error(this.validElementsInfo);
        }
        return array.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        item => value === item[field]));
    }
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    toggleChecked() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (this._isInArray(item['id'], 'id', this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
        this.cdRef.detectChanges();
    }
    /**
     * @private
     * @return {?}
     */
    isAllChecked() {
        /** @type {?} */
        let count = 0;
        /** @type {?} */
        let allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            selection => {
                if (item['id'] === selection['id']) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    }
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    trackByFn(index, item) {
        return index;
    }
}
FavoritesComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-favorites',
                template: "<div class=\"candidate\">\r\n    <div class=\"candidate-title\">\r\n        <span *ngIf=\"!multiSelect\"></span>\r\n        <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect && items.length > 0\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll()\">{{'personnelSelector.tabCommon.checkAll' | locale}}</label>\r\n        </div>\r\n        <a *ngIf=\"items.length > 0\" (click)=\"clearFavoritesList()\" class=\"title-clearall\">{{'personnelSelector.tabCommon.clearAll' | locale}}</a>\r\n    </div>\r\n    <div class=\"candidate-content\">\r\n        <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n            <div class=\"custom-control custom-checkbox mb-2\">\r\n                <input class=\"custom-control-input\" [id]=\"data.indexId\" type=\"checkbox\" [(ngModel)]=\"data.checked\">\r\n                <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                    <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                        <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                        </farris-avatar>\r\n                        <div style=\"margin-left: 11px; margin-top: -2px;  padding-right: 10px; overflow: hidden;\">\r\n                            <p class=\"candidate-content-title\" title=\"{{data.displayName}}\">\r\n                                {{data.displayName}}\r\n                            </p>\r\n                            <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                {{data.orgAllPath}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            <span class=\"f-icon f-icon-minus-circle default-light-color\"\r\n                (click)=\"deleteFromFavorites($event, data)\"></span>\r\n        </div>\r\n        <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n            {{'personnelSelector.tabCommon.noUserData' | locale}}</div>\r\n    </div>\r\n</div>",
                styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-flex:1;flex:1;overflow:hidden;position:static;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .candidate-content{margin-top:3px;clear:both}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(50% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson .f-icon-minus-circle{position:absolute;top:13px;right:15px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f46160}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .k-checkbox-label::after,.candidate .k-checkbox-label::before{top:10px;font-size:16px;width:14px;height:14px}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;margin:80px auto 0;color:#b4bccc;padding-top:110px}.candidate .candidate-title{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .candidate-title .title-clearall{margin:10px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:8px}"]
            }] }
];
/** @nocollapse */
FavoritesComponent.ctorParameters = () => [
    { type: NotifyService },
    { type: FavoritesTool },
    { type: Injector }
];
FavoritesComponent.propDecorators = {
    idField: [{ type: Input }],
    absOrgType: [{ type: Input }],
    absUserOrgUrl: [{ type: Input }],
    multiSelect: [{ type: Input }],
    searchText: [{ type: Input }],
    orgId: [{ type: Input }],
    userIds: [{ type: Input }],
    includeStopUser: [{ type: Input }],
    searchPage: [{ type: Input }],
    includeCurrentUser: [{ type: Input }],
    busNum: [{ type: Input }],
    validElementsInfo: [{ type: Input }],
    withPermission: [{ type: Input }],
    selectionsChange: [{ type: Output }],
    recentContactsChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FavoritesComponent.prototype.idField;
    /** @type {?} */
    FavoritesComponent.prototype.absOrgType;
    /** @type {?} */
    FavoritesComponent.prototype.absUserOrgUrl;
    /** @type {?} */
    FavoritesComponent.prototype.multiSelect;
    /** @type {?} */
    FavoritesComponent.prototype.searchText;
    /** @type {?} */
    FavoritesComponent.prototype.orgId;
    /** @type {?} */
    FavoritesComponent.prototype.userIds;
    /** @type {?} */
    FavoritesComponent.prototype.includeStopUser;
    /** @type {?} */
    FavoritesComponent.prototype.searchPage;
    /** @type {?} */
    FavoritesComponent.prototype.includeCurrentUser;
    /** @type {?} */
    FavoritesComponent.prototype.busNum;
    /** @type {?} */
    FavoritesComponent.prototype.validElementsInfo;
    /** @type {?} */
    FavoritesComponent.prototype.withPermission;
    /** @type {?} */
    FavoritesComponent.prototype.selectionsChange;
    /** @type {?} */
    FavoritesComponent.prototype.recentContactsChange;
    /**
     * @type {?}
     * @private
     */
    FavoritesComponent.prototype.cdRef;
    /** @type {?} */
    FavoritesComponent.prototype.allChecked;
    /** @type {?} */
    FavoritesComponent.prototype.columns;
    /** @type {?} */
    FavoritesComponent.prototype.selections;
    /** @type {?} */
    FavoritesComponent.prototype.cloneUserIds;
    /** @type {?} */
    FavoritesComponent.prototype.cloneSelections;
    /** @type {?} */
    FavoritesComponent.prototype.allIndexId;
    /** @type {?} */
    FavoritesComponent.prototype.noDataImg;
    /** @type {?} */
    FavoritesComponent.prototype.items;
    /** @type {?} */
    FavoritesComponent.prototype.favoritesList;
    /** @type {?} */
    FavoritesComponent.prototype.showUserCode;
    /**
     * @type {?}
     * @private
     */
    FavoritesComponent.prototype.notifyService;
    /**
     * @type {?}
     * @private
     */
    FavoritesComponent.prototype.favoritesTool;
    /**
     * @type {?}
     * @private
     */
    FavoritesComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,