/**
 * @fileoverview added by tsickle
 * Generated from: lib/tab-group/group.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Inject, Input, Optional, Output, ViewChild } from '@angular/core';
import * as _ from 'lodash-es';
import { noDataImg } from '../../assets/resource';
import { GROUP_SERVICE } from '../../utils/app.token';
import { FavoritesTool } from '../../utils/favorites.tool';
import { OrgPersonnelComponent } from '../tab-org-personnel/op.component';
import { DataLoadingService } from '../../utils/loading-service';
export class GroupComponent {
    /**
     * @param {?} groupService
     * @param {?} favoritesTool
     */
    constructor(groupService, favoritesTool) {
        this.groupService = groupService;
        this.favoritesTool = favoritesTool;
        this.idField = 'userId';
        this.orgId = '';
        this.userIds = '';
        this.pageSize = 10;
        this.treeListData = [];
        this.selectionsChange = new EventEmitter();
        this.groupChange = new EventEmitter();
        this.groupIdField = 'id';
        this.userIdField = 'userId';
        this.selections = [];
        this.cloneUserIds = '';
        this.cloneSelections = [];
        this.noDataImg = noDataImg;
        this.allChecked = false;
        this.items = [];
        this.favoritesList = [];
        this.groupData = { public: [], personal: [] };
        this.personnelList = [];
        this.groupPersonnels = [];
        this.publicVisible = true;
        this.personalVisible = true;
        this.publicToken = 'public';
        this.personalToken = 'personal';
        this.showGroupPersonnelDialog = false;
        this.currentGroupType = 'public';
        // 是否显示用户编号
        this.showUserCode = true;
        this.allIndexId = Math.random().toString(16).substring(3, 10);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        // 兼容老表单
        if (this.favoritesTool) {
            this.favoritesTool.favoritesSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                this.favoritesList = data;
                if (this.enableFavorites && !!this.selectedGroupId) {
                    this.getPersonnelsByGroup({ id: this.selectedGroupId }, this.currentGroupType);
                }
            }));
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
    }
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    editGroup(e, item) {
        this.groupChange.next(item);
        e.stopPropagation();
        e.cancelBubble = true;
    }
    //群组触发事件类型 1：add 2：delete 3：update(title和description) 4：update(追加群组成员)
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    deleteGroup(e, item) {
        /** @type {?} */
        const helpExtend = window && ((/** @type {?} */ (window))).helpExtend;
        if (item[this.groupIdField] === this.selectedGroupId) {
            this.selectedGroupId = null;
            this.currentGroupType = this.publicToken;
        }
        if (helpExtend) {
            helpExtend.curdGroupData({
                id: item[this.groupIdField],
                type: 2
            }).then((/**
             * @return {?}
             */
            () => {
                this.items = [];
                this.getGroupList();
            }));
        }
        else {
            throw new Error(this.groupExtendInfo);
        }
        e.stopPropagation();
        e.cancelBubble = true;
    }
    /**
     * 添加群组成员
     * @return {?}
     */
    appendGroupPersonnel() {
        /** @type {?} */
        const helpExtend = window && ((/** @type {?} */ (window))).helpExtend;
        /** @type {?} */
        const userIds = [];
        this.groupPersonnelComponent.selections.forEach((/**
         * @param {?} selection
         * @return {?}
         */
        selection => {
            userIds.push(selection[this.idField]);
        }));
        if (helpExtend) {
            helpExtend.curdGroupData({
                id: this.selectedGroupId,
                userIds,
                type: 4
            }).then((/**
             * @return {?}
             */
            () => {
                this.toggleGroupPersonnelDialog(false);
                this.getPersonnelsByGroup({ id: this.selectedGroupId }, this.currentGroupType);
            }));
        }
        else {
            throw new Error(this.groupExtendInfo);
        }
    }
    /**
     * @param {?} show
     * @param {?=} groupType
     * @return {?}
     */
    toggleGroupPersonnelDialog(show, groupType = this.personalToken) {
        if (groupType === this.personalToken) {
            this.showGroupPersonnelDialog = show;
        }
    }
    // 设置我的群组
    // setMyGroup() {
    //     const options = {
    //         // 打开菜单，funcId需要指定，appId、appEntrance可以为空
    //         funcId: '2cea1078-eefb-b716-37b5-480afcbede03',
    //         tabId: '个人群组',
    //         appId: '',
    //         appEntrance: '',
    //         // 指定当前打开的是菜单
    //         appType: 'menu'
    //     };
    //     (window as any).gspframeworkService.rtf.func.openMenu(options);
    // }
    /**
     * @return {?}
     */
    assembleData() {
        if (this.searchPage) {
            this.searchByCodeOrName();
        }
        else {
            this.getGroupList();
        }
    }
    /**
     * @param {?} item
     * @param {?=} groupType
     * @return {?}
     */
    getPersonnelsByGroup(item, groupType = this.publicToken) {
        if (this.dataLoadingService) {
            this.dataLoadingService.show(this.loadingServiceMessage);
        }
        this.currentGroupType = groupType;
        this.allChecked = false;
        this.selectedGroupId = item[this.groupIdField];
        /** @type {?} */
        const helpExtend = window && ((/** @type {?} */ (window))).helpExtend;
        if (helpExtend) {
            helpExtend.getDataByGroupId(item[this.groupIdField], this.absOrgType).then((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                /** @type {?} */
                const res = data && data.items;
                this.items = res;
                this.groupData.personal.forEach((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => {
                    if (item[this.groupIdField] === this.selectedGroupId && item.total !== this.items.length) {
                        item.total = this.items.length;
                    }
                }));
                this.items.forEach((/**
                 * @param {?} it
                 * @return {?}
                 */
                it => {
                    if (this._isInArray(it[this.idField], this.idField, this.favoritesList) !== -1) {
                        it.inFavorites = true;
                    }
                    else {
                        it.inFavorites = false;
                    }
                    it.indexId = Math.random().toString(16).substring(2);
                    it.displayName = !!this.showUserCode ? ('[' + it.code + ']' + it.name) : it.name;
                }));
                this.toggleChecked();
                if (this.dataLoadingService) {
                    this.dataLoadingService.hide();
                }
            }));
        }
        else {
            throw new Error(this.groupExtendInfo);
        }
    }
    /**
     * @return {?}
     */
    getGroupList() {
        /** @type {?} */
        const helpExtend = window && ((/** @type {?} */ (window))).helpExtend;
        if (helpExtend) {
            helpExtend.getGroupData().then((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                /** @type {?} */
                const resPublic = data && data.items[0] && data.items[0].data;
                /** @type {?} */
                const resPersonal = data && data.items[1] && data.items[1].data;
                this.groupData.public = resPublic ? resPublic : [];
                this.groupData.personal = resPersonal ? resPersonal : [];
                /** @type {?} */
                const firstPublicGroup = resPublic[0] && resPublic[0][this.groupIdField];
                /** @type {?} */
                const firstPersonalGroup = resPersonal[0] && resPersonal[0][this.groupIdField];
                this.selectedGroupId = this.selectedGroupId ? this.selectedGroupId : firstPublicGroup;
                this.selectedGroupId = this.selectedGroupId ? this.selectedGroupId : firstPersonalGroup;
                if (!!this.selectedGroupId) {
                    this.getPersonnelsByGroup({ id: this.selectedGroupId }, this.currentGroupType);
                    if (this.groupData.public.findIndex((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item[this.groupIdField] === this.selectedGroupId)) !== -1) {
                        this.currentGroupType = this.publicToken;
                    }
                    else if (this.groupData.personal.findIndex((/**
                     * @param {?} item
                     * @return {?}
                     */
                    item => item[this.groupIdField] === this.selectedGroupId)) !== -1) {
                        this.currentGroupType = this.personalToken;
                    }
                }
            }));
        }
        else {
            throw new Error(this.groupExtendInfo);
        }
    }
    /**
     * @return {?}
     */
    searchByCodeOrName() {
        this.items = this.items.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            return item.code.indexOf(this.searchText) !== -1 || item.name.indexOf(this.searchText) !== -1;
        }));
    }
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    toggleFavorites(e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    }
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    toggleVisible(e, type) {
        if (type === this.publicToken) {
            this.publicVisible = !this.publicVisible;
        }
        else if (type === this.personalToken) {
            this.personalVisible = !this.personalVisible;
        }
        e.stopPropagation();
        e.cancelBubble = true;
    }
    /**
     * @return {?}
     */
    restoreSelections() {
        this.selections = _.cloneDeep(this.cloneSelections);
        // this.emitSelections();
        this.toggleChecked();
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    }
    /**
     * @return {?}
     */
    toggleAll() {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.emitSelections();
    }
    /**
     * @param {?} data
     * @return {?}
     */
    toggleOne(data) {
        if (data.checked) {
            this.unSelectLine(data);
        }
        else {
            this.selectLine(data);
        }
        this.emitSelections();
    }
    /**
     * datagrid用于数据展示
     * @return {?}
     */
    loadGroupList() {
        this.items = [];
        // this.unSelectedList.forEach(res => {
        //     const indexId = Math.random().toString(16).substring(3, 10);
        //     const item = {
        //         abbreviation: res.abbreviation,
        //         code: res.code,
        //         defaultOrgId: res.defaultOrgId,
        //         defaultOrgPath: res.defaultOrgPath,
        //         ext1: res.ext1,
        //         ext2: res.ext2,
        //         fullPathName: res.fullPathName,
        //         name: res.name,
        //         orgTypeId: res.orgTypeId,
        //         secLevel: res.secLevel,
        //         sortOrder: res.sortOrder,
        //         state: res.state,
        //         su: res.su,
        //         userId: res.userId,
        //         orgAllPath: res.orgAllPath,
        //         type: 'people',
        //         checked: false,
        //         inFavorites: false,
        //         indexId
        //     };
        //     if (this._isInArray(res[this.idField], this.idField, this.selections) !== -1) {
        //         item.checked = true;
        //     }
        //     if (this._isInArray(res[this.idField], this.idField, this.favoritesList) !== -1) {
        //         item.inFavorites = true;
        //     }
        //     this.items.push(item);
        //     this.itemsBackup.push(item);
        // });
        /** @type {?} */
        const tempSelections = _.cloneDeep(this.selections);
        this.toggleChecked();
        this.selections = _.cloneDeep(tempSelections);
    }
    /**
     * 全选后处理
     * @return {?}
     */
    checkAll() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    }
    /**
     * 全部取消
     * @return {?} void
     */
    unCheckAll() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            (selection, index) => {
                if (item[this.idField] === selection[this.idField]) {
                    this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    }
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    selectLine(data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.userIds = '';
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    }
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    unSelectLine(data) {
        /** @type {?} */
        const index = this._isInArray(data[this.idField], this.idField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        if (this.allChecked) {
            this.allChecked = false;
        }
    }
    /**
     * @private
     * @return {?}
     */
    emitSelections() {
        /** @type {?} */
        const emitObj = {
            selections: this.selections,
            token: 'candidate'
        };
        this.selectionsChange.emit(emitObj);
    }
    /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    cancelSelections($event) {
        if (this.items.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        item => item[this.idField] === $event.id)) === -1) {
            return;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (item[this.idField] === $event.id) {
                item.checked = false;
            }
        }));
        this.selections.forEach((/**
         * @param {?} selection
         * @param {?} index
         * @return {?}
         */
        (selection, index) => {
            if ($event.id === selection[this.idField]) {
                this.selections.splice(index, 1);
            }
        }));
        this.allChecked = false;
    }
    /**
     * 全部取消勾选
     * @return {?}
     */
    clearCheckeds() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            item.checked = false;
        }));
        this.allChecked = false;
        this.selections = [];
    }
    /**
     * @return {?}
     */
    clearUserIds() {
        this.userIds = '';
    }
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    _insertOneIntoSelections(data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data[this.idField], this.idField, this.selections) > -1) {
            return;
        }
        this.selections.push(data);
        this.selections = this.selections.slice();
    }
    /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    _isInArray(value, field, array) {
        if (!field || !value) {
            throw new Error(this.validElementsInfo);
        }
        return array.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        item => value === item[field]));
    }
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    toggleChecked() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (this._isInArray(item[this.idField], this.idField, this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    }
    /**
     * @private
     * @return {?}
     */
    isAllChecked() {
        /** @type {?} */
        let count = 0;
        /** @type {?} */
        let allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            selection => {
                if (item[this.idField] === selection[this.idField]) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    }
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    trackByFn(index, item) {
        return index;
    }
}
GroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-group',
                template: "<div class=\"candidate flex-left\" style=\"position:relative; border-right: 1px solid #DEE1EA; overflow: hidden;\">\r\n    <perfect-scrollbar *ngIf=\"groupData.personal.length || groupData.public.length\">\r\n        <div class=\"h-100\">\r\n            <div class=\"group_blank_15\"></div>\r\n            <div class=\"group-top-tree\">\r\n                <span class=\"f-icon\" [class.f-icon-minus-outline]=\"publicVisible\"\r\n                    [class.f-icon-plus-outline]=\"!publicVisible\" (click)=\"toggleVisible($event, publicToken)\"></span>\r\n                    {{'personnelSelector.group.publicGroup' | locale}}\r\n            </div>\r\n            <ng-template [ngIf]=\"publicVisible\">\r\n                <div class=\"s-opCell-f\" [class.active]=\"selectedGroupId === item[groupIdField]\" title=\"\"\r\n                    *ngFor=\"let item of groupData.public\" (click)=\"getPersonnelsByGroup(item, publicToken)\">\r\n                    <div class=\"s-opCell-f-group\">\r\n                        <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"item['avatar']\" [readonly]=\"true\"\r\n                            class=\"s-opCell-a\">\r\n                        </farris-avatar>\r\n                        <div class=\"s-opCell-d\">\r\n                            <p class=\"s-opCell-d1\">{{item.title}} {{item.total}}\u4EBA</p>\r\n                            <p class=\"s-opCell-d2\" title=\"{{item.description}}\">{{item.description}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <span class=\"span-find-details\">\u67E5\u770B\u8BE6\u60C5</span> -->\r\n                </div>\r\n            </ng-template>\r\n            <div class=\"group_blank_15\"></div>\r\n            <div class=\"group-top-tree\">\r\n                <span class=\"f-icon\" [class.f-icon-minus-outline]=\"personalVisible\"\r\n                    [class.f-icon-plus-outline]=\"!personalVisible\"\r\n                    (click)=\"toggleVisible($event, personalToken)\"></span>\r\n                    {{'personnelSelector.group.privateGroup' | locale}}\r\n            </div>\r\n            <ng-template [ngIf]=\"personalVisible\">\r\n                <div class=\"s-opCell-f\" [class.active]=\"selectedGroupId === item[groupIdField]\"\r\n                    *ngFor=\"let item of groupData.personal\" (click)=\"getPersonnelsByGroup(item, personalToken)\">\r\n                    <div class=\"s-opCell-f-group\">\r\n                        <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"item['avatar']\" [readonly]=\"true\"\r\n                            class=\"s-opCell-a\">\r\n                        </farris-avatar>\r\n                        <div class=\"s-opCell-d\">\r\n                            <p class=\"s-opCell-d1\">{{item.title}} {{item.total}} {{'personnelSelector.group.items' | locale}}</p>\r\n                            <p class=\"s-opCell-d2\" title=\"{{item.description}}\">{{item.description}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"s-opCell-edit\">\r\n                        <span class=\"f-icon f-icon-new-edit\" (click)=\"editGroup($event, item)\"></span>\r\n                        <span class=\"f-icon f-icon-minus-circle default-light-color\"\r\n                            (click)=\"deleteGroup($event, item)\"></span>\r\n                    </div>\r\n                    <!-- <span class=\"span-find-details\">\u67E5\u770B\u8BE6\u60C5</span> -->\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <!-- <div class=\"saved-group\" (click)=\"setMyGroup()\"><span class=\"f-icon f-icon-home-setup\"></span>\u8BBE\u7F6E\u6211\u7684\u7FA4\u7EC4\r\n    </div> -->\r\n    <div *ngIf=\"groupData.personal.length === 0 && groupData.public.length === 0\"\r\n        [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n        {{'personnelSelector.tabCommon.noUserData' | locale}}</div>\r\n</div>\r\n<div class=\"candidate flex-right\">\r\n    <div class=\"candidate-title\" *ngIf=\"groupData?.public.length > 0 || groupData?.personal.length > 0\">\r\n        <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll()\">{{'personnelSelector.tabCommon.checkAll' | locale}}</label>\r\n        </div>\r\n        <div *ngIf=\"!multiSelect\"></div>\r\n        <div (click)=\"toggleGroupPersonnelDialog(true, currentGroupType)\"\r\n            [ngStyle]=\"{'color': currentGroupType === publicToken ? '#d8d8d8' : '#2a87ff', 'cursor': currentGroupType === publicToken ? 'not-allowed' : 'pointer'}\">\r\n            <span class=\"f-icon f-icon-user\"></span>\r\n            {{'personnelSelector.group.appendMembers' | locale}}\r\n        </div>\r\n    </div>\r\n    <perfect-scrollbar *ngIf=\"items.length!==0\">\r\n        <div class=\"candidate-content\">\r\n            <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n                <div class=\"custom-control custom-checkbox mb-2\">\r\n                    <input class=\"custom-control-input\" [(ngModel)]=\"data.checked\" [id]=\"data.indexId\" type=\"checkbox\">\r\n                    <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                        <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                            <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                            </farris-avatar>\r\n                            <div style=\"margin-left: 11px; margin-top: -2px;  padding-right: 10px; overflow: hidden;\">\r\n                                <p class=\"candidate-content-title\" title=\"{{data.displayName}}\">\r\n                                    {{data.displayName}}</p>\r\n                                <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                    {{data.orgAllPath}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n                <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                    [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n        {{'personnelSelector.tabCommon.noUserData' | locale}}</div>\r\n</div>\r\n\r\n<!--\u7FA4\u7EC4\u5F39\u7A97\u9009\u4EBA--->\r\n<div class=\"s-group-dialog-container\" *ngIf=\"showGroupPersonnelDialog\">\r\n    <div class=\"s-personnel-group-title\">\r\n        <span class=\"f-icon f-sidebar-close\" (click)=\"toggleGroupPersonnelDialog(false)\"></span>{{'personnelSelector.group.appendMembers' | locale}}\r\n    </div>\r\n    <lib-org-personnel #groupPersonnels style=\"margin-top: 15px;\" [multiSelect]=\"true\" [idField]=\"idField\"\r\n        [pageSize]=\"pageSize\" [userTypeMode]=\"userTypeMode\" [personnelOrderField]=\"personnelOrderField\"\r\n        [includeStopUser]=\"includeStopUser\" [orgId]=\"orgId\" [enablePagination]=\"enablePagination\"\r\n        [absUserOrgUrl]=\"absUserOrgUrl\" [absOrgType]=\"absOrgType\" [includeStopOrg]=\"includeStopOrg\"\r\n        [originalTreeData]=\"originalTreeData\" [filterId]=\"filterId\" [enableFavorites]=\"enableFavorites\"\r\n        [treeListData]=\"treeListData\" [orgIdField]=\"orgIdField\" [enableHierarchicalLoading]=\"enableHierarchicalLoading\"\r\n        [showUserCode]=\"showUserCode\" [withPermission]=\"withPermission\" [onlyCurrentOrg]=\"onlyCurrentOrg\">\r\n    </lib-org-personnel>\r\n    <div class=\"s-personnel-group-footer\">\r\n        <input type=\"button\" class=\"btn btn-primary fr\" style=\"width: 100px;\" value=\"{{'personnelSelector.selection.confirm' | locale}}\"\r\n            (click)=\"appendGroupPersonnel()\" />\r\n        <input type=\"button\" class=\"btn btn-secondary fr mr-3\" value=\"{{'personnelSelector.selection.cancel' | locale}}\" (click)=\"toggleGroupPersonnelDialog(false)\" />\r\n    </div>\r\n</div>\r\n<div class=\"s-help-bg\" *ngIf=\"showGroupPersonnelDialog\"></div>",
                styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-flex:1;flex:1;overflow:hidden;position:static}.candidate{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;overflow:hidden}.candidate.flex-left{-webkit-box-flex:0;flex:0 0 49%}.candidate.flex-right{-webkit-box-flex:0;flex:0 0 51%}.candidate .s-opCell-f{display:-webkit-box;display:flex;height:40px;border-radius:6px;padding-left:10px;-webkit-box-pack:justify;justify-content:space-between;margin:1px 5px 0;cursor:pointer}.candidate .s-opCell-f .s-opCell-f-group{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.candidate .s-opCell-f.active,.candidate .s-opCell-f:hover{background-color:#eef5ff}.candidate .s-opCell-f:hover .s-opCell-edit{visibility:visible}.candidate .s-opCell-a{margin-top:4px;margin-left:6px}.candidate .s-opCell-d{-webkit-box-flex:1;flex:1;overflow:hidden;margin:1.5px 10px 0}.candidate .s-opCell-d1{line-height:20px;font-size:13px;height:20px;color:#2d2f33;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin:0;padding:0;max-width:210px}.candidate .s-opCell-d2{color:#a8adb8;font-size:12px;line-height:14px;height:14px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin:0;padding:0;max-width:210px}.candidate .s-opCell-f .f-avatar .f-avatar-image{display:block!important}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;margin:80px auto 0;color:#b4bccc;padding-top:110px}.candidate .s-opCell-f:hover .span-find-details{display:block}.candidate .s-opCell-f .span-find-details{margin-right:5px;line-height:40px;color:#2a87ff;width:60px;display:none}.candidate .s-opCell-f .s-opCell-edit{line-height:40px;width:60px;text-align:center;visibility:hidden}.candidate .s-opCell-f .s-opCell-edit .f-icon-new-edit{margin-right:10px;color:#949aa6}.candidate .s-opCell-f .s-opCell-edit .f-icon-minus-circle{color:#f46160}.candidate .group-top-tree{margin:0 15px 10px;font-size:13px}.candidate .group_blank_15{width:100%;height:15px}.candidate .group-top-tree .f-icon{color:#d5d4d7;margin-right:8px}.candidate .group-top-tree .k-checkbox-label::after,.candidate .group-top-tree .k-checkbox-label::before{top:1px}.candidate .candidate-content{clear:both}.candidate .s-selectedPerson:first-child{margin-top:0}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(100% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .f-icon{font-size:14px}.candidate .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:15px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f7b500}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .k-checkbox-label::before{top:10px;font-size:16px;width:14px;height:14px}.candidate .k-checkbox-label::after{top:10px;font-size:16px;width:15px;height:14px}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:8px}.candidate .candidate-title .title-clearall{margin:5px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .candidate-title div{line-height:35px;margin:9px 10px 0 0;color:#2a87ff;cursor:pointer}.candidate .saved-group{position:absolute;width:111px;height:26px;line-height:26px;background:#eaedf2;border-radius:5px;text-align:center;font-size:13px;bottom:10px;left:13px;z-index:999;color:#909ba2;cursor:pointer}.candidate .saved-group:hover{color:#2a87ff;background:#eaf4ff}.candidate .saved-group:hover .f-icon{color:#2a87ff}.candidate .saved-group .f-icon{color:#909ba2;margin-right:5px;cursor:pointer;font-size:14px}.s-group-dialog-container{height:520px;width:700px;position:fixed;left:50%;top:50%;margin:-260px 0 0 -350px;background:#fff;padding:15px 20px;border-radius:10px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;z-index:9999}.s-group-dialog-container .s-personnel-group-footer{margin-top:15px}.s-help-bg{background:rgb(0 0 0 / 15%);position:fixed;left:0;top:0;right:0;bottom:0;z-index:9997}.s-group-dialog-container .s-personnel-group-title{font-size:17px;line-height:24px;color:#2d2f33;font-weight:600}.s-group-dialog-container .s-personnel-group-title .f-icon{float:right;font-size:20px;color:#878d99;margin-top:3px;cursor:pointer}.s-group-dialog-container .s-personnel-group-footer .fr{float:right;height:32px}"]
            }] }
];
/** @nocollapse */
GroupComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [GROUP_SERVICE,] }] },
    { type: FavoritesTool, decorators: [{ type: Optional }] }
];
GroupComponent.propDecorators = {
    groupPersonnelComponent: [{ type: ViewChild, args: ['groupPersonnels',] }],
    idField: [{ type: Input }],
    multiSelect: [{ type: Input }],
    absOrgType: [{ type: Input }],
    searchText: [{ type: Input }],
    orgId: [{ type: Input }],
    userIds: [{ type: Input }],
    includeStopUser: [{ type: Input }],
    searchPage: [{ type: Input }],
    includeCurrentUser: [{ type: Input }],
    busNum: [{ type: Input }],
    enableFavorites: [{ type: Input }],
    pageSize: [{ type: Input }],
    userTypeMode: [{ type: Input }],
    orderField: [{ type: Input }],
    enablePagination: [{ type: Input }],
    absUserOrgUrl: [{ type: Input }],
    treeListData: [{ type: Input }],
    orgIdField: [{ type: Input }],
    enableHierarchicalLoading: [{ type: Input }],
    includeStopOrg: [{ type: Input }],
    originalTreeData: [{ type: Input }],
    personnelOrderField: [{ type: Input }],
    filterId: [{ type: Input }],
    dataLoadingService: [{ type: Input }],
    validElementsInfo: [{ type: Input }],
    groupExtendInfo: [{ type: Input }],
    onlyCurrentOrg: [{ type: Input }],
    withPermission: [{ type: Input }],
    selectionsChange: [{ type: Output }],
    groupChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    GroupComponent.prototype.groupPersonnelComponent;
    /** @type {?} */
    GroupComponent.prototype.idField;
    /** @type {?} */
    GroupComponent.prototype.multiSelect;
    /** @type {?} */
    GroupComponent.prototype.absOrgType;
    /** @type {?} */
    GroupComponent.prototype.searchText;
    /** @type {?} */
    GroupComponent.prototype.orgId;
    /** @type {?} */
    GroupComponent.prototype.userIds;
    /** @type {?} */
    GroupComponent.prototype.includeStopUser;
    /** @type {?} */
    GroupComponent.prototype.searchPage;
    /** @type {?} */
    GroupComponent.prototype.includeCurrentUser;
    /** @type {?} */
    GroupComponent.prototype.busNum;
    /** @type {?} */
    GroupComponent.prototype.enableFavorites;
    /** @type {?} */
    GroupComponent.prototype.pageSize;
    /** @type {?} */
    GroupComponent.prototype.userTypeMode;
    /** @type {?} */
    GroupComponent.prototype.orderField;
    /** @type {?} */
    GroupComponent.prototype.enablePagination;
    /** @type {?} */
    GroupComponent.prototype.absUserOrgUrl;
    /** @type {?} */
    GroupComponent.prototype.treeListData;
    /** @type {?} */
    GroupComponent.prototype.orgIdField;
    /** @type {?} */
    GroupComponent.prototype.enableHierarchicalLoading;
    /** @type {?} */
    GroupComponent.prototype.includeStopOrg;
    /** @type {?} */
    GroupComponent.prototype.originalTreeData;
    /** @type {?} */
    GroupComponent.prototype.personnelOrderField;
    /** @type {?} */
    GroupComponent.prototype.filterId;
    /** @type {?} */
    GroupComponent.prototype.dataLoadingService;
    /** @type {?} */
    GroupComponent.prototype.validElementsInfo;
    /** @type {?} */
    GroupComponent.prototype.groupExtendInfo;
    /** @type {?} */
    GroupComponent.prototype.onlyCurrentOrg;
    /** @type {?} */
    GroupComponent.prototype.withPermission;
    /** @type {?} */
    GroupComponent.prototype.selectionsChange;
    /** @type {?} */
    GroupComponent.prototype.groupChange;
    /** @type {?} */
    GroupComponent.prototype.groupIdField;
    /** @type {?} */
    GroupComponent.prototype.userIdField;
    /** @type {?} */
    GroupComponent.prototype.selections;
    /** @type {?} */
    GroupComponent.prototype.cloneUserIds;
    /** @type {?} */
    GroupComponent.prototype.cloneSelections;
    /** @type {?} */
    GroupComponent.prototype.noDataImg;
    /** @type {?} */
    GroupComponent.prototype.allChecked;
    /** @type {?} */
    GroupComponent.prototype.items;
    /** @type {?} */
    GroupComponent.prototype.favoritesList;
    /** @type {?} */
    GroupComponent.prototype.groupData;
    /** @type {?} */
    GroupComponent.prototype.personnelList;
    /** @type {?} */
    GroupComponent.prototype.groupPersonnels;
    /** @type {?} */
    GroupComponent.prototype.publicVisible;
    /** @type {?} */
    GroupComponent.prototype.personalVisible;
    /** @type {?} */
    GroupComponent.prototype.publicToken;
    /** @type {?} */
    GroupComponent.prototype.personalToken;
    /** @type {?} */
    GroupComponent.prototype.selectedGroupId;
    /** @type {?} */
    GroupComponent.prototype.allIndexId;
    /** @type {?} */
    GroupComponent.prototype.showGroupPersonnelDialog;
    /** @type {?} */
    GroupComponent.prototype.currentGroupType;
    /** @type {?} */
    GroupComponent.prototype.showUserCode;
    /** @type {?} */
    GroupComponent.prototype.loadingServiceMessage;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.groupService;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.favoritesTool;
}
//# sourceMappingURL=data:application/json;base64,