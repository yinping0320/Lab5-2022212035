(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/platform-browser'), require('@angular/forms'), require('@angular/common'), require('@farris/ui-locale'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@farris/ui-verify-detail', ['exports', '@angular/platform-browser', '@angular/forms', '@angular/common', '@farris/ui-locale', '@angular/core'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-verify-detail'] = {}),global.ng.platformBrowser,global.ng.forms,global.ng.common,global.uiLocale,global.ng.core));
}(this, (function (exports,platformBrowser,forms,common,uiLocale,i0) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var VerifyDetailComponent = /** @class */ (function () {
        function VerifyDetailComponent(localeService, sanitizer) {
            this.localeService = localeService;
            this.sanitizer = sanitizer;
            // 追加结果提示模板
            this.resultTipsTmpl = null;
            //@Input() maxHeight:number;
            //@Input() validatorList;
            //表单验证分组信息
            //@Input() tabList:tabListItem[];
            //表单验证默认显示的分组信息
            this.showType = '';
            //是否默认显示验证信息列表
            this.showList = false;
            //验证信息点击
            this.validatorClick = new i0.EventEmitter();
            //验证详情显示隐藏事件
            this.listshowChange = new i0.EventEmitter();
            //showList = false;
            //处理后带分组的表单验证信息
            this.errorLists = [];
            //默认传入的表单验证信息数组
            this._validatorList = [];
            //列表部分最大高度
            this._maxHeight = 60;
        }
        Object.defineProperty(VerifyDetailComponent.prototype, "maxHeight", {
            get: /**
             * @return {?}
             */ function () {
                return this._maxHeight;
            },
            //最大高度
            set: 
            //最大高度
            /**
             * @param {?} num
             * @return {?}
             */
            function (num) {
                if (num < 50)
                    return;
                this._maxHeight = num - 50;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VerifyDetailComponent.prototype, "tabList", {
            get: /**
             * @return {?}
             */ function () {
                return this._tablist;
            },
            set: /**
             * @param {?} item
             * @return {?}
             */ function (item) {
                if (item) {
                    this._tablist = item;
                }
                else {
                    /** @type {?} */
                    var allTitle = this.localeService.getValue('verifyDetail.vertifyTypeAll');
                    /** @type {?} */
                    var errorTitle = this.localeService.getValue('verifyDetail.vertifyTypeError');
                    /** @type {?} */
                    var emptyTitle = this.localeService.getValue('verifyDetail.vertifyTypeEmpty');
                    this._tablist = [
                        {
                            id: 'vertifyType1',
                            type: 'all',
                            title: allTitle
                        },
                        {
                            id: 'vertifyType2',
                            type: 'error',
                            title: errorTitle
                        },
                        {
                            id: 'vertifyType3',
                            type: 'empty',
                            title: emptyTitle
                        }
                    ];
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VerifyDetailComponent.prototype, "validatorList", {
            get: /**
             * @return {?}
             */ function () {
                return this._validatorList;
            },
            set: /**
             * @param {?} obj
             * @return {?}
             */ function (obj) {
                var _this = this;
                this._validatorList = obj;
                this.errorLists = [];
                if (this.tabList && this.tabList.length) {
                    this.tabList.forEach(( /**
                     * @param {?} item
                     * @return {?}
                     */function (item) {
                        item.active = false;
                    }));
                    //判断默认展示的类型
                    /** @type {?} */
                    var hasTab = this.tabList.find(( /**
                     * @param {?} tab
                     * @return {?}
                     */function (tab) {
                        return tab.type === _this.showType;
                    }));
                    if (this.showType === '' || !hasTab) {
                        this.showType = this.tabList[0].type;
                    }
                    this.tabList.forEach(( /**
                     * @param {?} tab
                     * @return {?}
                     */function (tab) {
                        /** @type {?} */
                        var tabType = tab.type;
                        if (tabType === 'all') {
                            // 所有类型
                            /** @type {?} */
                            var listObj = {
                                'list': obj,
                                'show': false,
                                'type': tabType
                            };
                            tab.length = listObj.list.length;
                            _this.errorLists.push(listObj);
                        }
                        else {
                            /** @type {?} */
                            var hasType = _this.errorLists.find(( /**
                             * @param {?} item
                             * @return {?}
                             */function (item) {
                                return item.type === tabType;
                            }));
                            if (hasType) {
                                // 能找到类型
                                /** @type {?} */
                                var valList = obj.filter(( /**
                                 * @param {?} error
                                 * @return {?}
                                 */function (error) {
                                    return error.type === tabType;
                                }));
                                if (valList && valList.length) {
                                    hasType.list = valList;
                                }
                            }
                            else {
                                // 找不到类型
                                /** @type {?} */
                                var listObj = {
                                    'list': [],
                                    'show': false,
                                    'type': tabType
                                };
                                /** @type {?} */
                                var valList = obj.filter(( /**
                                 * @param {?} error
                                 * @return {?}
                                 */function (error) {
                                    return error.type === tabType;
                                }));
                                if (valList && valList.length) {
                                    listObj.list = valList;
                                }
                                tab.length = listObj.list.length;
                                _this.errorLists.push(listObj);
                            }
                        }
                    }));
                    /** @type {?} */
                    var tabObj = this.tabList.find(( /**
                     * @param {?} item
                     * @return {?}
                     */function (item) {
                        return item.type === _this.showType;
                    }));
                    if (tabObj) {
                        tabObj.active = true;
                    }
                }
                /** @type {?} */
                var showObj = this.errorLists.find(( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) {
                    return item.type === _this.showType;
                }));
                if (showObj) {
                    showObj.show = true;
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        VerifyDetailComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () { };
        //显示详情
        //显示详情
        /**
         * @return {?}
         */
        VerifyDetailComponent.prototype.show =
            //显示详情
            /**
             * @return {?}
             */
            function () {
                this.showList = !this.showList;
                this.listshowChange.emit(this.showList);
            };
        /**点击分组切换
         * @param tab分组信息
         */
        /**
         * 点击分组切换
         * @param {?} tab
         * @return {?}
         */
        VerifyDetailComponent.prototype.showListContent = /**
         * 点击分组切换
         * @param {?} tab
         * @return {?}
         */
            function (tab) {
                if (tab.length <= 0) {
                    return;
                }
                this.tabList.forEach(( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) {
                    item.active = false;
                }));
                tab.active = true;
                this.errorLists.forEach(( /**
                 * @param {?} item
                 * @return {?}
                 */function (item) {
                    if (item.type === tab.type) {
                        item.show = true;
                    }
                    else {
                        item.show = false;
                    }
                }));
            };
        /**点击关闭按钮 */
        /**
         * 点击关闭按钮
         * @return {?}
         */
        VerifyDetailComponent.prototype.close = /**
         * 点击关闭按钮
         * @return {?}
         */
            function () {
                this.showList = false;
                this.listshowChange.emit(false);
            };
        /**点击表单验证列表事件 */
        /**
         * 点击表单验证列表事件
         * @param {?} item
         * @return {?}
         */
        VerifyDetailComponent.prototype.errorClick = /**
         * 点击表单验证列表事件
         * @param {?} item
         * @return {?}
         */
            function (item) {
                this.validatorClick.emit(item);
            };
        /**
         * 样式安全化
         * @param typeInfo
         */
        /**
         * 样式安全化
         * @param {?} typeInfo
         * @return {?}
         */
        VerifyDetailComponent.prototype.getStyle = /**
         * 样式安全化
         * @param {?} typeInfo
         * @return {?}
         */
            function (typeInfo) {
                if (this.sanitizer) {
                    if (typeInfo.hasOwnProperty('iconStyle') && typeInfo['iconStyle']) {
                        return this.sanitizer.bypassSecurityTrustStyle(typeInfo['iconStyle']);
                    }
                }
                return null;
            };
        /**
         * 判断是否有新属性
         */
        /**
         * 判断是否有新属性
         * @param {?} typeInfo
         * @return {?}
         */
        VerifyDetailComponent.prototype.hasSelfDefind = /**
         * 判断是否有新属性
         * @param {?} typeInfo
         * @return {?}
         */
            function (typeInfo) {
                if (typeInfo) {
                    if (typeInfo.hasOwnProperty('iconCls') && typeInfo['iconCls']) {
                        return true;
                    }
                    if (typeInfo.hasOwnProperty('iconStyle') && typeInfo['iconStyle']) {
                        return true;
                    }
                }
                return false;
            };
        VerifyDetailComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'farris-verify-detail',
                        template: "<div class=\"f-verify-detail\" *ngIf=\"validatorList.length > 0\">\r\n    <div class=\"f-verify-detail-content\">\r\n        <div class=\"f-verify-nums\" (click)=\"show()\">\r\n            <ng-container *ngIf=\"resultTipsTmpl\">\r\n                <ng-container [ngTemplateOutlet]=\"resultTipsTmpl\" [ngTemplateOutletContext]=\"{ $implicit: errorLists}\">\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"!resultTipsTmpl\">\r\n                <span class=\"nums-icon f-icon f-icon-warning\"></span>\r\n                <span class=\"nums-count\">{{validatorList.length}}</span>\r\n            </ng-container>\r\n        </div>\r\n        <div class=\"f-verify-form-main\" [hidden]=\"!showList\">\r\n            <div class=\"f-verify-form-content\">\r\n                <div class=\"f-verify-form-content-arrow\"></div>\r\n                <div class=\"f-verify-form-content-list\">\r\n                    <div class=\"f-verify-forms-title\">\r\n                        <div class=\"title-tabs\">\r\n                            <div class=\"btn-group\">\r\n                                <button class=\"btn btn-secondary\" *ngFor=\"let tab of tabList\"\r\n                                    [ngClass]=\"{'active': tab.active,'disabled': (tab.length<=0)}\"\r\n                                    (click)=\"showListContent(tab)\">{{tab.title}} <span>{{tab.length}}</span></button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"f-verify-close\" (click)=\"close()\">\r\n                            <span class=\"f-icon f-icon-close\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"f-verify-forms-list\" [ngStyle]=\"{'max-height': maxHeight+'px'}\">\r\n                        <ng-container *ngFor=\"let list of errorLists;let typeIndex = index;\">\r\n                            <ul class=\"f-verify-list-content\" *ngIf=\"list.list.length > 0\"\r\n                                [ngClass]=\"{'active': list.show}\">\r\n                                <li class=\"f-verify-list\" *ngFor=\"let item of list.list\" (click)=\"errorClick(item)\">\r\n                                    <ng-container *ngIf=\"hasSelfDefind(tabList[typeIndex])\">\r\n                                        <span class=\"f-icon f-icon-close-outline list-icon list-error\" [ngClass]=\"tabList[typeIndex]['iconCls']\" [attr.style]=\"getStyle(tabList[typeIndex])\"></span>\r\n                                    </ng-container>\r\n                                    <span *ngIf=\"!hasSelfDefind(tabList[typeIndex])\" class=\"f-icon f-icon-close-outline list-icon list-error\"\r\n                                    [ngClass]=\"{'list-warning': item.type === 'warn'}\"></span>\r\n                                    <div class=\"list-con\" >\r\n                                        <p class=\"list-title\" [attr.title]=\"item.title\">{{item.title}}</p>\r\n                                        <p class=\"list-msg\" [attr.title]=\"item.msg\">{{item.msg}}</p>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>",
                        styles: [".f-verify-detail{position:absolute;left:14px;bottom:16px;z-index:900}.f-verify-detail .f-verify-detail-content{position:relative}.f-verify-detail .f-verify-detail-content .f-verify-form-main{position:absolute;padding-bottom:.5rem;left:0;bottom:1.75rem;width:28.125rem}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content{background-color:#fff;box-shadow:0 2px 8px 0 rgba(0,0,0,.15);border-radius:.125rem;width:100%}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-arrow{display:block;position:absolute;left:1.125rem;bottom:.25rem;width:.625rem;height:.625rem;background:0 0;border-style:solid;border-width:.3125rem;box-shadow:2px 2px 5px rgba(0,0,0,.08);-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg);border-color:transparent #fff #fff transparent}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list{position:relative}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-title{padding:.75rem .875rem}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-close{position:absolute;right:.75rem;top:.625rem;color:rgba(0,0,0,.25);font-size:.75rem;cursor:pointer;width:1.25rem;height:1.25rem;line-height:1.25rem;text-align:center}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list{overflow-y:auto}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list-content{display:none}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list-content.active{display:block}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list{cursor:pointer;position:relative;border-top:1px solid #e9e9e9;padding:.5rem .875rem .5rem 2.5rem}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list .list-icon{position:absolute;left:.875rem;top:.75rem;font-size:.875rem;color:#f5222d}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list .list-icon.list-warning{color:#faad14}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list .list-con p{margin-bottom:0;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list .list-con .list-title{font-size:.875rem;color:rgba(0,0,0,.75);line-height:1.375rem}.f-verify-detail .f-verify-detail-content .f-verify-form-main .f-verify-form-content .f-verify-form-content-list .f-verify-forms-list .f-verify-list .list-con .list-msg{font-size:.75rem;color:rgba(0,0,0,.45);line-height:1.25rem}.f-verify-detail .f-verify-nums{padding:.125rem .5rem;background:#fde5e5;box-shadow:0 1px 6px 0 rgba(0,0,0,.15);border-radius:2px;cursor:pointer}.f-verify-detail .f-verify-nums .nums-icon{margin-right:.25rem;vertical-align:middle}.f-verify-detail .f-verify-nums .nums-count{font-size:.875rem;line-height:1.25rem}"]
                    }] }
        ];
        /** @nocollapse */
        VerifyDetailComponent.ctorParameters = function () {
            return [
                { type: uiLocale.LocaleService },
                { type: platformBrowser.DomSanitizer, decorators: [{ type: i0.Optional }] }
            ];
        };
        VerifyDetailComponent.propDecorators = {
            resultTipsTmpl: [{ type: i0.Input }],
            showType: [{ type: i0.Input }],
            showList: [{ type: i0.Input }],
            validatorClick: [{ type: i0.Output, args: ['validatorClick',] }],
            listshowChange: [{ type: i0.Output, args: ['listshowChange',] }],
            maxHeight: [{ type: i0.Input }],
            tabList: [{ type: i0.Input }],
            validatorList: [{ type: i0.Input }]
        };
        return VerifyDetailComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var VerifyDetailService = /** @class */ (function () {
        function VerifyDetailService(cfr, injector, appRef) {
            this.cfr = cfr;
            this.injector = injector;
            this.appRef = appRef;
        }
        /**
         * @param {?} option
         * @return {?}
         */
        VerifyDetailService.prototype.createVerify = /**
         * @param {?} option
         * @return {?}
         */
            function (option) {
                this.clear();
                //if (!this.verifyContainer) {
                /** @type {?} */
                var containerFac = this.cfr.resolveComponentFactory(VerifyDetailComponent);
                /** @type {?} */
                var cmpRef = containerFac.create(this.injector);
                this.appRef.attachView(cmpRef.hostView);
                /** @type {?} */
                var maxHeight;
                if (option.parent) {
                    // option.parent.nativeElement.style.position = 'relative';
                    maxHeight = option.parent.nativeElement.offsetHeight - 60;
                    option.parent.nativeElement.appendChild(cmpRef.location.nativeElement);
                }
                else {
                    maxHeight = document.documentElement.clientHeight - 60;
                    document.querySelector('body').appendChild(cmpRef.location.nativeElement);
                }
                this.verifyContainer = cmpRef;
                this.verifyContainer.instance.maxHeight = maxHeight;
                this.verifyContainer.instance.showList = option.showList;
                this.verifyContainer.instance.showType = option.showType;
                this.verifyContainer.instance.tabList = option.verifyType;
                this.verifyContainer.instance.validatorList = option.verifyList;
                if (option.hasOwnProperty('verifyResultTipsTmpl') && option['verifyResultTipsTmpl']) {
                    this.verifyContainer.instance.resultTipsTmpl = option.verifyResultTipsTmpl;
                }
                // this.verifyContainer.instance.listshowChange.subscribe((event)=>{
                //   console.log(event);
                // });
                // this.verifyContainer.instance.validatorClick.subscribe((event)=>{
                //   console.log(event);
                // });
                return this.verifyContainer.instance;
                //}
            };
        /**
         * @return {?}
         */
        VerifyDetailService.prototype.clear = /**
         * @return {?}
         */
            function () {
                if (this.verifyContainer) {
                    /** @type {?} */
                    var el = this.verifyContainer.location.nativeElement;
                    if (el.parentNode) {
                        el.parentNode.removeChild(el);
                    }
                    this.verifyContainer.destroy();
                    this.verifyContainer = undefined;
                }
            };
        VerifyDetailService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        VerifyDetailService.ctorParameters = function () {
            return [
                { type: i0.ComponentFactoryResolver },
                { type: i0.Injector },
                { type: i0.ApplicationRef }
            ];
        };
        /** @nocollapse */ VerifyDetailService.ngInjectableDef = i0.defineInjectable({ factory: function VerifyDetailService_Factory() { return new VerifyDetailService(i0.inject(i0.ComponentFactoryResolver), i0.inject(i0.INJECTOR), i0.inject(i0.ApplicationRef)); }, token: VerifyDetailService, providedIn: "root" });
        return VerifyDetailService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var VerifyDetailModule = /** @class */ (function () {
        function VerifyDetailModule() {
        }
        VerifyDetailModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [VerifyDetailComponent],
                        imports: [
                            common.CommonModule,
                            forms.FormsModule,
                            uiLocale.LocaleModule
                        ],
                        providers: [
                            VerifyDetailService
                        ],
                        exports: [VerifyDetailComponent],
                        entryComponents: [VerifyDetailComponent]
                    },] }
        ];
        return VerifyDetailModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var VerifyDetailOptions = /** @class */ (function () {
        function VerifyDetailOptions() {
        }
        VerifyDetailOptions.decorators = [
            { type: i0.Injectable }
        ];
        return VerifyDetailOptions;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.VerifyDetailService = VerifyDetailService;
    exports.VerifyDetailComponent = VerifyDetailComponent;
    exports.VerifyDetailModule = VerifyDetailModule;
    exports.VerifyDetailOptions = VerifyDetailOptions;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-verify-detail.umd.js.map