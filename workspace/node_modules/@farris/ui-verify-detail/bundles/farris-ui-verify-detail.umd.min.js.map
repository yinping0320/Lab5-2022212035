{"version":3,"sources":["ng://@farris/ui-verify-detail/lib/verify-detail.component.ts","ng://@farris/ui-verify-detail/lib/verify-detail.service.ts","ng://@farris/ui-verify-detail/lib/verify-detail.module.ts","ng://@farris/ui-verify-detail/lib/verify.options.ts"],"names":["VerifyDetailComponent","Object","defineProperty","prototype","this","_maxHeight","num","_tablist","item","allTitle","localeService","getValue","errorTitle","emptyTitle","id","type","title","_validatorList","obj","_this","errorLists","tabList","length","forEach","active","hasTab","find","tab","showType","tabType","listObj","list","show","push","valList","hasType","filter","error","tabObj","showObj","ngOnInit","showList","listshowChange","emit","showListContent","close","errorClick","validatorClick","getStyle","typeInfo","sanitizer","hasOwnProperty","bypassSecurityTrustStyle","hasSelfDefind","Component","args","selector","template","LocaleService","DomSanitizer","decorators","Optional","Input","Output","resultTipsTmpl","EventEmitter","VerifyDetailService","createVerify","option","clear","maxHeight","cmpRef","cfr","resolveComponentFactory","create","injector","appRef","attachView","hostView","parent","nativeElement","offsetHeight","appendChild","location","document","documentElement","clientHeight","querySelector","verifyContainer","instance","verifyType","validatorList","verifyList","verifyResultTipsTmpl","el","parentNode","removeChild","destroy","undefined","Injectable","providedIn","ComponentFactoryResolver","Injector","ApplicationRef","VerifyDetailModule","NgModule","declarations","imports","CommonModule","FormsModule","LocaleModule","providers","exports","entryComponents","VerifyDetailOptions"],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, TemplateRef, Optional } from '@angular/core';\r\nimport { tabListItem, ErrorListsItem, validatorListItem } from './verify-detail.interface';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n\r\n@Component({\r\n  selector: 'farris-verify-detail',\r\n  templateUrl: './verify-detail.component.html',\r\n  styleUrls: ['./verify-detail.component.scss']\r\n})\r\nexport class VerifyDetailComponent implements OnInit {\r\n  // è¿½å ç»ææç¤ºæ¨¡æ¿\r\n  @Input() resultTipsTmpl: TemplateRef<any>=null;\r\n  //@Input() maxHeight:number;\r\n  //@Input() validatorList;\r\n  //è¡¨åéªè¯åç»ä¿¡æ¯\r\n  //@Input() tabList:tabListItem[];\r\n  //è¡¨åéªè¯é»è®¤æ¾ç¤ºçåç»ä¿¡æ¯\r\n  @Input() showType: string = '';\r\n  //æ¯å¦é»è®¤æ¾ç¤ºéªè¯ä¿¡æ¯åè¡¨\r\n  @Input() showList: boolean = false\r\n  //éªè¯ä¿¡æ¯ç¹å»\r\n  @Output('validatorClick') validatorClick = new EventEmitter();\r\n  //éªè¯è¯¦ææ¾ç¤ºéèäºä»¶\r\n  @Output('listshowChange') listshowChange = new EventEmitter();\r\n  //showList = false;\r\n  //å¤çåå¸¦åç»çè¡¨åéªè¯ä¿¡æ¯\r\n  errorLists: ErrorListsItem[] = [];\r\n  //é»è®¤ä¼ å¥çè¡¨åéªè¯ä¿¡æ¯æ°ç»\r\n  _validatorList: validatorListItem[] = [];\r\n  //åè¡¨é¨åæå¤§é«åº¦\r\n  _maxHeight: number = 60;\r\n  _tablist: tabListItem[];\r\n  //æå¤§é«åº¦\r\n  @Input()\r\n  set maxHeight(num) {\r\n    if (num < 50) return;\r\n    this._maxHeight = num - 50;\r\n  }\r\n  get maxHeight() {\r\n    return this._maxHeight;\r\n  }\r\n\r\n  @Input()\r\n  set tabList(item) {\r\n    if (item) {\r\n      this._tablist = item;\r\n    }\r\n    else {\r\n      const allTitle = this.localeService.getValue('verifyDetail.vertifyTypeAll'),\r\n        errorTitle = this.localeService.getValue('verifyDetail.vertifyTypeError'),\r\n        emptyTitle = this.localeService.getValue('verifyDetail.vertifyTypeEmpty');\r\n      this._tablist = [\r\n        {\r\n          id: 'vertifyType1',\r\n          type: 'all',\r\n          title: allTitle\r\n        },\r\n        {\r\n          id: 'vertifyType2',\r\n          type: 'error',\r\n          title: errorTitle\r\n        },\r\n        {\r\n          id: 'vertifyType3',\r\n          type: 'empty',\r\n          title: emptyTitle\r\n        }\r\n      ]\r\n    }\r\n\r\n  }\r\n  get tabList() {\r\n    return this._tablist;\r\n  }\r\n\r\n  @Input()\r\n  set validatorList(obj) {\r\n    this._validatorList = obj;\r\n    this.errorLists = [];\r\n    if (this.tabList && this.tabList.length) {\r\n\r\n      this.tabList.forEach(item => {\r\n        item.active = false;\r\n      })\r\n      //å¤æ­é»è®¤å±ç¤ºçç±»å\r\n      let hasTab = this.tabList.find((tab) => {\r\n        return tab.type === this.showType;\r\n      })\r\n      if (this.showType === '' || !hasTab) {\r\n        this.showType = this.tabList[0].type;\r\n      }\r\n      this.tabList.forEach(tab => {\r\n        const tabType = tab.type;\r\n        if (tabType === 'all') {\r\n          // ææç±»å\r\n          let listObj = {\r\n            'list': obj,\r\n            'show': false,\r\n            'type': tabType\r\n          };\r\n          tab.length = listObj.list.length;\r\n          this.errorLists.push(listObj);\r\n        }\r\n        else {\r\n          let hasType = this.errorLists.find((item) => {\r\n            return item.type === tabType;\r\n          })\r\n          if (hasType) {\r\n            // è½æ¾å°ç±»å\r\n            let valList = obj.filter(error => {\r\n              return error.type === tabType;\r\n            })\r\n            if (valList && valList.length) {\r\n              hasType.list = valList;\r\n            }\r\n          }\r\n          else {\r\n            // æ¾ä¸å°ç±»å\r\n            let listObj = {\r\n              'list': [],\r\n              'show': false,\r\n              'type': tabType\r\n            }\r\n            let valList = obj.filter(error => {\r\n              return error.type === tabType;\r\n            })\r\n            if (valList && valList.length) {\r\n              listObj.list = valList;\r\n            }\r\n            tab.length = listObj.list.length;\r\n            this.errorLists.push(listObj);\r\n          }\r\n        }\r\n      });\r\n      let tabObj = this.tabList.find(item => {\r\n        return item.type === this.showType;\r\n      })\r\n      if (tabObj) {\r\n        tabObj.active = true;\r\n      }\r\n    }\r\n    let showObj = this.errorLists.find(item => {\r\n      return item.type === this.showType;\r\n    })\r\n    if (showObj) {\r\n      showObj.show = true;\r\n    }\r\n  };\r\n  get validatorList() {\r\n    return this._validatorList;\r\n  }\r\n\r\n  constructor(public localeService: LocaleService,@Optional() private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() { }\r\n  //æ¾ç¤ºè¯¦æ\r\n  show() {\r\n    this.showList = !this.showList;\r\n    this.listshowChange.emit(this.showList);\r\n  }\r\n  /**ç¹å»åç»åæ¢\r\n   * @param tabåç»ä¿¡æ¯\r\n   */\r\n  showListContent(tab) {\r\n    if (tab.length <= 0) {\r\n      return;\r\n    }\r\n    this.tabList.forEach(item => {\r\n      item.active = false;\r\n    })\r\n    tab.active = true;\r\n    this.errorLists.forEach((item) => {\r\n      if (item.type === tab.type) {\r\n        item.show = true;\r\n      }\r\n      else {\r\n        item.show = false;\r\n      }\r\n    })\r\n  }\r\n  /**ç¹å»å³é­æé® */\r\n  close() {\r\n    this.showList = false;\r\n    this.listshowChange.emit(false);\r\n  }\r\n  /**ç¹å»è¡¨åéªè¯åè¡¨äºä»¶ */\r\n  errorClick(item) {\r\n    this.validatorClick.emit(item);\r\n  }\r\n  /**\r\n   * æ ·å¼å®å¨å\r\n   * @param typeInfo \r\n   */\r\n  getStyle(typeInfo){\r\n    if(this.sanitizer){\r\n      if(typeInfo.hasOwnProperty('iconStyle')&&typeInfo['iconStyle']){\r\n        return this.sanitizer.bypassSecurityTrustStyle(typeInfo['iconStyle']);\r\n      }\r\n    }    \r\n    return null;\r\n  }\r\n  /**\r\n   * å¤æ­æ¯å¦ææ°å±æ§\r\n   */\r\n  hasSelfDefind(typeInfo){\r\n    if(typeInfo){\r\n      if(typeInfo.hasOwnProperty('iconCls')&&typeInfo['iconCls']){\r\n        return true;\r\n      }\r\n      if(typeInfo.hasOwnProperty('iconStyle')&&typeInfo['iconStyle']){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable, ComponentRef, ApplicationRef, Injector, ComponentFactoryResolver } from '@angular/core';\r\nimport { VerifyDetailComponent } from './verify-detail.component';\r\nimport { VerifyDetailOptions } from './verify.options';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VerifyDetailService {\r\n\r\n  verifyContainer: ComponentRef<VerifyDetailComponent>;\r\n  constructor(\r\n    private cfr: ComponentFactoryResolver,\r\n    private injector: Injector, \r\n    private appRef: ApplicationRef\r\n    ) {}\r\n\r\n  createVerify(option:VerifyDetailOptions){\r\n      this.clear();\r\n    //if (!this.verifyContainer) {\r\n        const containerFac = this.cfr.resolveComponentFactory(VerifyDetailComponent);\r\n        const cmpRef = containerFac.create(this.injector);\r\n        this.appRef.attachView(cmpRef.hostView);\r\n        let maxHeight:number;\r\n        if(option.parent){\r\n          // option.parent.nativeElement.style.position = 'relative';\r\n          maxHeight = option.parent.nativeElement.offsetHeight - 60;\r\n          option.parent.nativeElement.appendChild(cmpRef.location.nativeElement);\r\n        }\r\n        else{\r\n          maxHeight = document.documentElement.clientHeight - 60;\r\n          document.querySelector('body').appendChild(cmpRef.location.nativeElement);\r\n        }\r\n        this.verifyContainer = cmpRef;\r\n        this.verifyContainer.instance.maxHeight = maxHeight;\r\n        this.verifyContainer.instance.showList = option.showList;\r\n        this.verifyContainer.instance.showType = option.showType;\r\n        this.verifyContainer.instance.tabList = option.verifyType;\r\n        this.verifyContainer.instance.validatorList = option.verifyList;\r\n        if(option.hasOwnProperty('verifyResultTipsTmpl')&&option['verifyResultTipsTmpl']){\r\n          this.verifyContainer.instance.resultTipsTmpl=option.verifyResultTipsTmpl;\r\n        }\r\n        // this.verifyContainer.instance.listshowChange.subscribe((event)=>{\r\n        //   console.log(event);\r\n        // });\r\n        // this.verifyContainer.instance.validatorClick.subscribe((event)=>{\r\n        //   console.log(event);\r\n        // });\r\n        return this.verifyContainer.instance;\r\n    //}\r\n  }\r\n\r\n  public clear() {\r\n      if (this.verifyContainer) {\r\n        const el = this.verifyContainer.location.nativeElement;\r\n        if (el.parentNode) {\r\n            el.parentNode.removeChild(el);\r\n        }\r\n        this.verifyContainer.destroy();\r\n        this.verifyContainer = undefined;\r\n      }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { VerifyDetailComponent } from './verify-detail.component';\r\nimport { VerifyDetailService } from './verify-detail.service';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\n\r\n@NgModule({\r\n  declarations: [VerifyDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    LocaleModule\r\n  ],\r\n  providers: [\r\n    VerifyDetailService\r\n  ],\r\n  exports: [VerifyDetailComponent],\r\n  entryComponents: [ VerifyDetailComponent]\r\n})\r\nexport class VerifyDetailModule { }\r\n","import { Injectable, ElementRef, TemplateRef } from '@angular/core';\r\nimport { tabListItem, validatorListItem } from './verify-detail.interface';\r\n\r\n@Injectable()\r\nexport class VerifyDetailOptions {\r\n    'parent'?:ElementRef;\r\n    'verifyList':validatorListItem[];\r\n    'verifyType'?:tabListItem[];\r\n    'showType'?:string;\r\n    'showList'?:boolean;\r\n    'verifyResultTipsTmpl'?:TemplateRef<any>;// èªå®ä¹å·¦ä¸è§å¼å¸¸ä¿¡æ¯æ¾ç¤ºåå®¹æ¨¡æ¿\r\n}\r\n"]}