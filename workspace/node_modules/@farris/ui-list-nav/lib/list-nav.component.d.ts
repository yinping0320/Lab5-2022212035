import { OnInit, TemplateRef, EventEmitter, ElementRef, Renderer2 } from '@angular/core';
import { IResizeEvent } from '@farris/ui-draggable';
export declare class listNavHeaderTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
}
export declare class listNavContentTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
}
export declare class listNavFooterTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
}
export declare class ListNavComponent implements OnInit {
    private elementRef;
    private renderer;
    HeaderTemplate: TemplateRef<any>;
    NavContentTemplate: TemplateRef<any>;
    NavFooterTemplate: TemplateRef<any>;
    /**收起折叠状态变化 */
    navStateChange: EventEmitter<{}>;
    /** emitted when start resizing */
    rzStart: EventEmitter<IResizeEvent>;
    /** emitted when start resizing */
    rzResizing: EventEmitter<IResizeEvent>;
    /** emitted when stop resizing */
    rzStop: EventEmitter<IResizeEvent>;
    draggableWrapper: ElementRef;
    /**listnav 名称*/
    title: string;
    /**
     * listnav宽度
     * 不支持百分比，因为此处的宽度被用在内部是外部
     */
    listNavWidth: number;
    private initCollapse;
    hideNav: any;
    showEntry: boolean;
    hover: boolean;
    disabled: boolean;
    position: 'left' | 'right' | 'top' | 'bottom';
    resizeCollapseThreshold: number;
    enableDraggable: boolean;
    rzMinWidth: number;
    rzHandles: 'e' | 's' | 'n' | 'w';
    private _relatedIframeParent;
    private _relatedContainer;
    private _relatedContainerPosition;
    private _relatedIframeOverlay;
    private _iframeOverlayShownFlag;
    relatedIframeParent: string | ElementRef | any;
    private animateCls;
    private updateParamsFlag;
    private resizeDistance;
    private el;
    /**
     *  原构造函数是没有参数的
     * @param elementRef
     * @param renderer
     */
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    /**
     * 兼容旧表单写法
     */
    private compatibleEl;
    /**
     * 点击収折
     * @param event
     */
    toggle(event: any): void;
    hoverToggle(event: any): void;
    /**
      *  拖拽的变化中事件
      *  如果超过阈值，不处理
      *  暂未处理拖拽最大、最小值的问题
      */
    onRZResizing(pos: any): void;
    onRZStart(pos: any): void;
    onRZStop(pos: any): void;
    /**
   * 布局排列不一样，影响到是设置宽度还是高度
   */
    private getStyleProp;
    /**
     * 规范获取iframe所在的父容器
     */
    private getRelatedIframeParent;
}
