{"version":3,"sources":["ng://@farris/ui-list-nav/lib/list-nav.service.ts","ng://@farris/ui-list-nav/lib/list-nav.component.ts","ng://@farris/ui-list-nav/lib/list-nav.module.ts"],"names":["ListNavService","Injectable","args","providedIn","listNavHeaderTemplateDirective","Directive","selector","TemplateRef","template","this","listNavContentTemplateDirective","listNavFooterTemplateDirective","Object","defineProperty","ListNavComponent","prototype","initCollapse","value","undefined","_relatedContainer","getRelatedIframeParent","ngOnInit","elementRef","compatibleEl","ngAfterViewInit","el","nativeElement","_relatedIframeParent","_relatedIframeOverlay","toggle","event","stopPropagation","disabled","renderer","addClass","querySelector","animateCls","navStateChange","emit","showNav","hideNav","hoverToggle","onRZResizing","pos","changeProp","getStyleProp","resizeDirection","resizeDistance","resizeCollapseThreshold","hasOwnProperty","rzResizing","onRZStart","draggableWrapper","className","indexOf","removeClass","_iframeOverlayShownFlag","_relatedContainerPosition","setStyle","updateParamsFlag","fixedEdge","rzStart","onRZStop","rzStop","_this","findIndex","item","position","content","ElementRef","parentElement","createElement","appendChild","Component","Renderer2","ContentChild","read","Output","ViewChild","Input","EventEmitter","listNavWidth","showEntry","hover","enableDraggable","rzMinWidth","rzHandles","ListNavModule","NgModule","declarations","imports","CommonModule","FormsModule","RouterModule","AngularDraggableModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListNavService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit, Input, Directive, TemplateRef, ContentChild, Output, EventEmitter, ViewChild, ElementRef, Renderer2, ViewContainerRef } from '@angular/core';\r\nimport { IResizeEvent } from '@farris/ui-draggable';\r\n\r\n@Directive({\r\n  selector: '[listNavHeader]'\r\n})\r\nexport class listNavHeaderTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[listNavContent]'\r\n})\r\nexport class listNavContentTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n\r\n@Directive({\r\n  selector: '[listNavFooter]'\r\n})\r\nexport class listNavFooterTemplateDirective {\r\n  constructor(public template: TemplateRef<any>) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'farris-list-nav',\r\n  templateUrl: './list-nav.component.html',\r\n  styleUrls: ['./list-nav.component.scss']\r\n})\r\nexport class ListNavComponent implements OnInit {\r\n  @ContentChild(listNavHeaderTemplateDirective, { read: TemplateRef }) HeaderTemplate: TemplateRef<any>;\r\n  @ContentChild(listNavContentTemplateDirective, { read: TemplateRef }) NavContentTemplate: TemplateRef<any>;\r\n  @ContentChild(listNavFooterTemplateDirective, { read: TemplateRef }) NavFooterTemplate: TemplateRef<any>;\r\n  /**æ¶èµ·æå ç¶æåå */\r\n  @Output('navStateChange') navStateChange = new EventEmitter();\r\n\r\n  /** emitted when start resizing */\r\n  @Output() rzStart = new EventEmitter<IResizeEvent>();\r\n\r\n  /** emitted when start resizing */\r\n  @Output() rzResizing = new EventEmitter<IResizeEvent>();\r\n\r\n  /** emitted when stop resizing */\r\n  @Output() rzStop = new EventEmitter<IResizeEvent>();\r\n\r\n  // ææ½åç´ \r\n  @ViewChild('draggableWrapper') draggableWrapper: ElementRef;\r\n  /**listnav åç§°*/\r\n  @Input() title: string;\r\n  /**\r\n   * listnavå®½åº¦ \r\n   * ä¸æ¯æç¾åæ¯ï¼å ä¸ºæ­¤å¤çå®½åº¦è¢«ç¨å¨åé¨æ¯å¤é¨\r\n   */\r\n  @Input() listNavWidth: number = 218;\r\n\r\n  // åå§æ¶èµ·ç¶æ\r\n  private initCollapse = false;\r\n  // åå§æ¶ï¼æ¯å¦éèNav\r\n  @Input()\r\n  set hideNav(value) {\r\n    if (value !== undefined && value !== null) {\r\n      if (this.initCollapse !== value) {\r\n        this.initCollapse = value;\r\n        // this.toggleInitCollapseState();\r\n      }\r\n    }\r\n  }\r\n  get hideNav() {\r\n    return this.initCollapse;\r\n  }\r\n\r\n  // æ¾ç¤ºå¥å£\r\n  @Input() showEntry = true;\r\n  //--æªä½¿ç¨\r\n  @Input() hover: boolean = false;\r\n  // æ§ä»¶ç¦ç¨\r\n  @Input() disabled: boolean = false;\r\n  @Input() position: 'left' | 'right'|'top'|'bottom' = 'left';\r\n\r\n  // ææ½å°æä¸ªå¼æ¶ï¼èªå¨æ¶èµ·çéå¼ãå¦æéå¼è®¾ç½®å°äº0ï¼åä¸å¤çèªå¨æ¶èµ·\r\n  @Input() resizeCollapseThreshold = 20;\r\n\r\n  // å¯ç¨ææ½åè½\r\n  @Input() enableDraggable = false;\r\n  // è®¾ç½®ææ½çæå°å¼\r\n  @Input() rzMinWidth:number=null;\r\n  // è®¾ç½®ææ½çæ¹å\r\n  @Input() rzHandles: 'e' | 's' | 'n' | 'w' = 'e';\r\n  // å¤çå³èåå¨ä¸­ï¼å¦å¤ä¸å¤æiframeï¼iframeå½±åææ½çæ§è½\r\n  private _relatedIframeParent: string | ElementRef | any;\r\n  // è®°å½çå®çiframeç¶å®¹å¨\r\n  private _relatedContainer = null;\r\n  // æ è®°iframeç¶å®¹å¨çæ ·å¼å±æ§positionçå¼\r\n  private _relatedContainerPosition = \"\";\r\n  // è®°å½iframeå¨ææ½æ¶çé®ç½©å±\r\n  private _relatedIframeOverlay = null;\r\n  // æ è®°iframeé®ç½©å±æ¯å¦å·²æ¾ç¤º\r\n  private _iframeOverlayShownFlag = false;\r\n  @Input()\r\n  set relatedIframeParent(value: string | ElementRef | any) {\r\n    this.getRelatedIframeParent(value);\r\n  }\r\n  get relatedIframeParent() {\r\n    return this._relatedContainer;\r\n  }\r\n\r\n  // collapseçå¨ç»æ ·å¼å\r\n  private animateCls = \"splitter-pane-collapse-animate\";\r\n  // æ è®°æ¯å¦éè¦æ´æ°åé\r\n  private updateParamsFlag = false;\r\n  // æ è®°ææ½æ¶ä¸æ¬¡çå¤§å°\r\n  private resizeDistance = -1;\r\n  // å½ååç´ \r\n  private el:HTMLElement;\r\n  /**\r\n   *  åæé å½æ°æ¯æ²¡æåæ°ç\r\n   * @param elementRef \r\n   * @param renderer \r\n   */\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    if(this.elementRef){\r\n      this.compatibleEl();\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    if(!this.el){\r\n      this.compatibleEl();\r\n  }   \r\n  }\r\n  /**\r\n   * å¼å®¹æ§è¡¨ååæ³\r\n   */\r\n  private compatibleEl() {\r\n    this.el = this.elementRef.nativeElement;\r\n    // è®¾ç½®äºiframeå®¹å¨ï¼ä½æ¯æ²¡æåå»ºé®ç½©\r\n    if (this._relatedIframeParent && !this._relatedIframeOverlay) {\r\n      this.getRelatedIframeParent(this._relatedIframeParent);\r\n    }\r\n  }\r\n  /**\r\n   * ç¹å»åæ\r\n   * @param event \r\n   */\r\n  toggle(event) {\r\n    event&&event.stopPropagation();\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    // åå§æ²¡æå ä¸è¿ä¸ªæ ·å¼ï¼æ¯é¿ååå§è®¾ç½®æ¶èµ·çæ¶åï¼çå°æåæçå¨ç»\r\n    this.renderer&&this.renderer.addClass(this.el.querySelector('.f-list-nav-in'), this.animateCls);\r\n    this.initCollapse=!this.initCollapse;\r\n    this.navStateChange.emit({ 'showNav': !this.hideNav });\r\n  }\r\n\r\n\r\n\r\n  //--æªä½¿ç¨\r\n  hoverToggle(event) {\r\n    this.hideNav = !this.hideNav;\r\n    this.navStateChange.emit({ 'showNav': !this.hideNav });\r\n  }\r\n  /**\r\n    *  ææ½çååä¸­äºä»¶\r\n    *  å¦æè¶è¿éå¼ï¼ä¸å¤ç\r\n    *  ææªå¤çææ½æå¤§ãæå°å¼çé®é¢\r\n    */\r\n  onRZResizing(pos) {\r\n    if (pos && pos[\"size\"]) {\r\n      let changeProp = this.getStyleProp();\r\n      let resizeDirection = \"\";\r\n      if (this.resizeDistance >= 0) {\r\n        // å¼å§è®°å½å\r\n        // æ­¤æ¬¡å¼æ¯ä¸æ¬¡è®°å½å¤§ï¼è¯´æå¨expand\r\n        resizeDirection =\r\n          pos[\"size\"][changeProp] > this.resizeDistance\r\n            ? \"expand\"\r\n            : \"collapse\";\r\n      }\r\n      this.resizeDistance = pos[\"size\"][changeProp];\r\n      if (resizeDirection == \"expand\" && this.initCollapse) {\r\n        this.initCollapse = false;\r\n      }\r\n      if (\r\n        pos[\"size\"][changeProp] > this.resizeCollapseThreshold ||\r\n        !resizeDirection\r\n      ) {\r\n        // ææ½éåº¦å¿«çæ¶åï¼ä¼æ¼æè®¡ç®çæ¶æº\r\n        return;\r\n      }\r\n\r\n      if (this.resizeCollapseThreshold > 0) {\r\n        // è®¾ç½®äºèªå¨åæéå¼\r\n        if (!this.initCollapse && resizeDirection == \"collapse\") {\r\n          // å¤çææ½åæè¿ç¨ä¸­ï¼èªå¨æ¶èµ·ï¼ä¸å¤çå±å¼è¿ç¨ä¸­çï¼èªå¨å±å¼\r\n          if (\r\n            pos[\"actions\"] &&\r\n            pos[\"actions\"].hasOwnProperty(\"stopResize\")\r\n          ) {\r\n            pos[\"actions\"][\"stopResize\"]();\r\n          }\r\n          this.toggle(null);\r\n        }\r\n      } else {\r\n        // æªè®¾ç½®èªå¨åæéå¼ï¼éè¦åç¬å¤ç å³å°æ¶èµ·æ¶ç¶æãå³å°å±å¼æ¶ç¶æ\r\n        if (resizeDirection == \"collapse\") {\r\n          if (pos[\"size\"][changeProp] < 3 && !this.initCollapse) {\r\n            this.initCollapse = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.rzResizing.emit(pos);\r\n  }\r\n  // ææ½çå¼å§çäºä»¶\r\n  onRZStart(pos) {\r\n    // ç¦ç¨åæ\r\n \r\n      if (this.draggableWrapper.nativeElement.className.indexOf(this.animateCls) > -1) {\r\n        this.renderer.removeClass(this.draggableWrapper.nativeElement, this.animateCls);\r\n      }\r\n    // å¦ææiframeé®ç½©å¹¶ä¸æ²¡ææ¾ç¤º\r\n    if (this._relatedIframeOverlay && !this._iframeOverlayShownFlag) {\r\n      if (\r\n        [\"relative\", \"absolute\"].indexOf(\r\n          this._relatedContainerPosition\r\n        ) < 0\r\n      ) {\r\n        this.renderer.setStyle(\r\n          this._relatedContainer,\r\n          \"position\",\r\n          \"relative\"\r\n        );\r\n      }\r\n      this.renderer.setStyle(\r\n        this._relatedIframeOverlay,\r\n        \"display\",\r\n        \"block\"\r\n      );\r\n      this._iframeOverlayShownFlag = true;\r\n    }\r\n    if (\r\n      !this.updateParamsFlag &&\r\n      pos[\"actions\"] &&\r\n      pos[\"actions\"].hasOwnProperty(\"updateParams\")\r\n    ) {\r\n      pos[\"actions\"][\"updateParams\"]({ fixedEdge: true });\r\n      this.updateParamsFlag = true;\r\n    }\r\n    this.rzStart.emit(pos);\r\n  }\r\n  // ææ½çåæ­¢äºä»¶\r\n  onRZStop(pos) {\r\n    this.resizeDistance = -1;\r\n    // å¦ææiframeé®ç½©å¹¶ä¸æ¾ç¤ºäº\r\n    if (this._relatedIframeOverlay && this._iframeOverlayShownFlag) {\r\n      if (\r\n        [\"relative\", \"absolute\"].indexOf(\r\n          this._relatedContainerPosition\r\n        ) < 0\r\n      ) {\r\n        this.renderer.setStyle(\r\n          this._relatedContainer,\r\n          \"position\",\r\n          this._relatedContainerPosition\r\n        );\r\n      }\r\n      this.renderer.setStyle(\r\n        this._relatedIframeOverlay,\r\n        \"display\",\r\n        \"none\"\r\n      );\r\n      this._iframeOverlayShownFlag = false;\r\n    }\r\n    this.rzStop.emit(pos);\r\n  }\r\n  /**\r\n * å¸å±æåä¸ä¸æ ·ï¼å½±åå°æ¯è®¾ç½®å®½åº¦è¿æ¯é«åº¦\r\n */\r\n  private getStyleProp() {\r\n    let hori = [\"left\", \"right\"].findIndex(\r\n      item => item == this.position\r\n    );\r\n    return hori > -1 ? \"width\" : \"height\";\r\n  }\r\n\r\n  /**\r\n   * è§èè·åiframeæå¨çç¶å®¹å¨\r\n   */\r\n  private getRelatedIframeParent(content) {\r\n    if (!content || !this.elementRef) {\r\n      this._relatedContainer = null;\r\n    }\r\n    if (content instanceof ElementRef) {\r\n      this._relatedContainer = content.nativeElement;\r\n    } else if (typeof content == \"string\") {\r\n      this._relatedContainer = this.elementRef.nativeElement.parentElement.querySelector(\r\n        content\r\n      );\r\n    } else {\r\n      this._relatedContainer = content;\r\n    }\r\n    if (this._relatedContainer) {\r\n      this._relatedContainerPosition = this._relatedContainer[\"style\"][\r\n        \"position\"\r\n      ];\r\n      // æé é®ç½©å±\r\n      this._relatedIframeOverlay = this.renderer.createElement(\"div\");\r\n      this._relatedIframeOverlay.className = \"f-utils-absolute-all\";\r\n      this.renderer.setStyle(\r\n        this._relatedIframeOverlay,\r\n        \"display\",\r\n        \"none\"\r\n      );\r\n      this.renderer.appendChild(\r\n        this._relatedContainer,\r\n        this._relatedIframeOverlay\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { ListNavComponent,listNavHeaderTemplateDirective,listNavContentTemplateDirective,listNavFooterTemplateDirective } from './list-nav.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [ListNavComponent,listNavHeaderTemplateDirective,listNavContentTemplateDirective,listNavFooterTemplateDirective],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    AngularDraggableModule\r\n  ],\r\n  exports: [ListNavComponent,listNavHeaderTemplateDirective,listNavContentTemplateDirective,listNavFooterTemplateDirective]\r\n})\r\nexport class ListNavModule { }\r\n"]}