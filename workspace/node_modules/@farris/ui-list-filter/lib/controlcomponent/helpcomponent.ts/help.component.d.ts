import { OnInit, OnChanges, EventEmitter, SimpleChanges } from '@angular/core';
import { QueryCondition } from '../../entity/querycondition';
import { SolutionService } from '../../service/solution.service';
import { DisplayType } from '../../entity/controltype/help/displayType';
export declare class HelpComponent implements OnInit, OnChanges {
    private solutionService;
    /**
     * QueryCondition类型
     */
    item: any;
    autoLabel: boolean;
    disabled: boolean;
    hostRef: any;
    instanceId: string;
    searchHandle: EventEmitter<{}>;
    uri: string;
    textField: string;
    idField: string;
    valueField: any;
    textValue: any;
    displayType: DisplayType;
    mapFields: any;
    context: any;
    preEventCmd: any;
    postEventCmd: any;
    enableFullTree: boolean;
    loadTreeDataType: 'default' | 'loadall' | 'layerload';
    singleSelect: boolean;
    expandLevel: number;
    enableCascade: boolean;
    helpId: string;
    title: string;
    /** 判断是否是在扩展区域展示 */
    extend: boolean;
    /** 判断是否显示label */
    showlabel: boolean;
    placeholder: string;
    editable: boolean;
    /** 多字段查询 */
    enableMultiFieldSearch: boolean;
    readonly isExtend: boolean;
    readonly hidenLabel: boolean;
    /**
   * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
   */
    changeFields: Array<string>;
    /**
     * 要清空的关联字段
     */
    clearFields: string;
    constructor(solutionService: SolutionService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    selectedDataHandler(selectedItem: any): void;
    getHelpBindingInfo(): void;
    getConditionItemTitle(field: QueryCondition): string;
    onSearch: () => import("rxjs").Observable<boolean>;
    clearData(data: any): void;
}
