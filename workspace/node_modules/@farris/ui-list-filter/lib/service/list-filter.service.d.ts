import { FieldConfig } from '../entity/fieldconfig/fieldconfig';
import { DateRangeValue } from '../entity/conditionvalue/daterangevalue';
import { TextValue } from '../entity/conditionvalue/textvalue';
import { SearchValue } from '../entity/conditionvalue/searchvalue';
import { DateValue } from '../entity/conditionvalue/datevalue';
import { NumberRangeValue } from '../entity/conditionvalue/numberrangevaue';
import { DropDownListValue } from '../entity/conditionvalue/dropdownlistvalue';
import { HelpValue } from '../entity/conditionvalue/helpvalue';
import { CheckboxGroupValue } from '../entity/conditionvalue/checkboxgroupvalue';
import { DateRangeTimeValue } from '../entity/conditionvalue/daterangetimevalue';
import { RadioGroupValue } from '../entity/conditionvalue/radiovalue';
import { YearValue } from '../entity/conditionvalue/yearvalue';
import { MonthValue } from '../entity/conditionvalue/month';
import { YearRangeValue } from '../entity/conditionvalue/yearrange';
import { MonthRangeValue } from '../entity/conditionvalue/monthrange';
import { InputGroupValue } from '../entity/conditionvalue/inputgroup';
export declare class ListFilterService {
    constructor();
    fieldSchemasConvert(filedSchemas: Array<any>): Array<FieldConfig>;
    private getTextControl;
    private getInputGroupControl;
    private getDateControl;
    private getYearControl;
    private getMonthControl;
    private getNumberRangeControl;
    private getSearchControl;
    private getDropDownControl;
    private getLookUpEditControl;
    private getCheckboxGroupControl;
    private getDateRangeControl;
    private getYearRangeControl;
    private getMonthRangeControl;
    private getDateRangeTimeControl;
    private getRadioControl;
    setValues(controltype: any, value: any): TextValue | NumberRangeValue | DateRangeValue | HelpValue | DropDownListValue | SearchValue | DateValue | CheckboxGroupValue | DateRangeTimeValue | RadioGroupValue | YearValue | MonthValue | YearRangeValue | MonthRangeValue | InputGroupValue;
    /**
 * 智能输入框控件需要弹出表单时，将表单配置JSON描述转换为弹出表单命令可接收的弹窗参数
 * @param usageMode 智能输入框控件使用模式
 * @param modalConfigData 表单配置JSON描述
 * @returns 弹出表单命令可接收的弹窗参数
 */
    private setInputGroupDialog;
    /**
     * 智能输入框控件需要弹出表单时，将弹窗按钮组配置JSON描述转换为弹出表单命令可接收的弹窗按钮组参数
     * @param buttonData 弹窗按钮组配置JSON描述
     * @returns 弹出表单命令可接收的弹窗按钮组参数
     */
    private setInputGroupDialogButtons;
}
