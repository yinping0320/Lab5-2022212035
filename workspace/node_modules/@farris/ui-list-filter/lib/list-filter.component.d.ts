import { OnInit, AfterViewInit, ChangeDetectorRef, EventEmitter, ElementRef, Renderer2, Injector, OnDestroy } from '@angular/core';
import { FieldConfig } from './entity/fieldconfig/fieldconfig';
import { QueryCondition } from './entity/querycondition';
import { ListFilterService } from './service/list-filter.service';
import { QuerySolutionService } from './submithandlers/query-solution.service';
import { ConvertorService } from './service/convertorservice';
import { ListFilterHandler } from './interface/IistFilterHandler';
export declare class ListFilterComponent implements OnInit, AfterViewInit, OnDestroy {
    private filterService;
    private cd;
    private handler;
    private convertorService;
    private render;
    private injector;
    filterMainBasisRef: ElementRef;
    floatPanel: ElementRef;
    alLeft: boolean;
    autoWidth: boolean;
    liveSearch: boolean;
    autoLabel: boolean;
    disabled: boolean;
    filterClass: string;
    filterPaddingNone: boolean;
    filterType: string;
    _defaultValue: FieldConfig[];
    defaultEmptyValueSearch: boolean;
    defaultValue: FieldConfig[];
    query: EventEmitter<{}>;
    clear: EventEmitter<{}>;
    searchChange: EventEmitter<{}>;
    conditionsChange: EventEmitter<{}>;
    filterDatas: Array<FieldConfig>;
    showExpandTag: boolean;
    /** 搜索表单列表 */
    _filterList: Array<any>;
    /** 是否需要显示展开更多icon */
    showMoreIcon: boolean;
    showFilter: boolean;
    formExpand: boolean;
    /** 循环表单 */
    listFilterConditions: Array<QueryCondition>;
    /** 用来存储setvalue前数据 */
    stagListFilterConditions: Array<QueryCondition>;
    /** 记录默认收起的搜索表单列表 */
    extendFilterList: Array<QueryCondition>;
    /** 记录显示的搜索表单列表 */
    showFilterList: Array<QueryCondition>;
    /** 显示中表单的必填项 */
    requiredListFilter: Array<QueryCondition>;
    /** 隐藏中表单的必填项 */
    /** 表单是否允许提交 */
    canSubmit: boolean;
    /** 扩展表单是否允许提交 */
    localeIds: {
        en: string;
        'zh-CHS': string;
    };
    currentLocale: string;
    isControlInline: boolean;
    filterList: Array<any>;
    /**
     * 组件服务接口
     */
    listfilterHandler: ListFilterHandler;
    fieldCodeOfClearFields: Array<string>;
    private idService;
    UPDATE_FILTER_VALUES_TIMER: any;
    private overLayService;
    constructor(filterService: ListFilterService, cd: ChangeDetectorRef, handler: QuerySolutionService, convertorService: ConvertorService, render: Renderer2, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /** 初始化处理表单数据 */
    initFilterList(): void;
    inSetCurrentFilterConditions(): void;
    /**
     * 获取控件类型
     * @param selectedFieldCondition
     */
    getControlType(selectedFieldCondition: QueryCondition): string;
    /** 获得类名 */
    getStyle(currentItem: any): string;
    /** 判断是否需要显示更多按钮 */
    canShowMoreIcon(): void;
    /** 判断是否所有必填项都填写完毕 */
    canSubmitFilter(requirelist: any): boolean;
    /** 搜索表单变化 */
    onSearch($event: any, item: any): void;
    /** 开始筛选 */
    filterClick(): void;
    /** 收折部分点击确定提交 */
    listSearch(): void;
    /** 取消搜索 */
    listSearchCancel(): void;
    /** 提交表单 */
    submit(type: any, filterlist: any): void;
    /** 对外提供获得表单搜索数据 */
    getFilterData(): string;
    /** 获取展示在外部的表单长度 */
    getShowLength(): number;
    /** 清空条件 */
    resetSearch(): void;
    setFilterValue(fieldConfigs: FieldConfig[]): void;
    setValues(conditions: any, fieldConfigs: FieldConfig[]): void;
    getValue(fieldName: string): any;
    requiredListInit(): void;
    clearFilterValue(fields: any): void;
    updateValues(values: {
        [field: string]: any;
    }): void;
    buildSmartHelpKey(value: string): string;
    private conditionChangeHandler;
    /**
     * 浮动筛选面板通过方法展开和关闭
     * @param evt
     */
    floatFilterOpen(evt: MouseEvent): void;
}
