/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, Optional, Self, Injector } from '@angular/core';
import { NgControl } from '@angular/forms';
import { ListFilterComponent } from '../list-filter.component';
var ClearFieldsDirective = /** @class */ (function () {
    function ClearFieldsDirective(ngCtrl, listFilterCmp, inject) {
        this.ngCtrl = ngCtrl;
        this.listFilterCmp = listFilterCmp;
        this.inject = inject;
        this.clearFields = '';
    }
    /**
     * @return {?}
     */
    ClearFieldsDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.clearFields && this.ngCtrl) {
            this.ngCtrl.valueChanges.subscribe((/**
             * @param {?} v
             * @return {?}
             */
            function (v) {
                if (!_this.ngCtrl.dirty) {
                    return;
                }
                _this.listFilterCmp.fieldCodeOfClearFields = [];
                _this.clearFields.split(',').forEach((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) {
                    // 字段编号
                    /** @type {?} */
                    var conditionItem = _this.listFilterCmp.listFilterConditions.find((/**
                     * @param {?} c
                     * @return {?}
                     */
                    function (c) { return c.fieldCode === n; }));
                    if (conditionItem) {
                        // 触发清空字段列表变更，特殊控件类型的清空，不能只是清空值
                        _this.listFilterCmp.fieldCodeOfClearFields.push(n);
                        // 清空字段
                        conditionItem.value.clearValue();
                    }
                }));
            }));
        }
    };
    ClearFieldsDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[clear-fields]'
                },] }
    ];
    /** @nocollapse */
    ClearFieldsDirective.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },
        { type: ListFilterComponent },
        { type: Injector }
    ]; };
    ClearFieldsDirective.propDecorators = {
        clearFields: [{ type: Input, args: ['clear-fields',] }]
    };
    return ClearFieldsDirective;
}());
export { ClearFieldsDirective };
if (false) {
    /** @type {?} */
    ClearFieldsDirective.prototype.clearFields;
    /**
     * @type {?}
     * @private
     */
    ClearFieldsDirective.prototype.ngCtrl;
    /**
     * @type {?}
     * @private
     */
    ClearFieldsDirective.prototype.listFilterCmp;
    /**
     * @type {?}
     * @private
     */
    ClearFieldsDirective.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXItZmllbGRzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbGlzdC1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9jbGVhci1maWVsZHMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFL0Q7SUFNSSw4QkFBd0MsTUFBaUIsRUFBVSxhQUFrQyxFQUFVLE1BQWdCO1FBQXZGLFdBQU0sR0FBTixNQUFNLENBQVc7UUFBVSxrQkFBYSxHQUFiLGFBQWEsQ0FBcUI7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFVO1FBRnhHLGdCQUFXLEdBQUcsRUFBRSxDQUFDO0lBRTJGLENBQUM7Ozs7SUFFcEksdUNBQVE7OztJQUFSO1FBQUEsaUJBbUJDO1FBbEJHLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2pDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVM7Ozs7WUFBQyxVQUFDLENBQUM7Z0JBQ2pDLElBQUksQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRTtvQkFDcEIsT0FBTztpQkFDVjtnQkFDRCxLQUFJLENBQUMsYUFBYSxDQUFDLHNCQUFzQixHQUFHLEVBQUUsQ0FBQztnQkFDL0MsS0FBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTzs7OztnQkFBQyxVQUFBLENBQUM7Ozt3QkFFM0IsYUFBYSxHQUFHLEtBQUksQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsSUFBSTs7OztvQkFBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxTQUFTLEtBQUssQ0FBQyxFQUFqQixDQUFpQixFQUFDO29CQUMxRixJQUFJLGFBQWEsRUFBRTt3QkFDZiwrQkFBK0I7d0JBQy9CLEtBQUksQ0FBQyxhQUFhLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNsRCxPQUFPO3dCQUNQLGFBQWEsQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUM7cUJBQ3BDO2dCQUNMLENBQUMsRUFBQyxDQUFDO1lBQ1AsQ0FBQyxFQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7O2dCQTNCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGdCQUFnQjtpQkFDN0I7Ozs7Z0JBTFEsU0FBUyx1QkFTRCxRQUFRLFlBQUksSUFBSTtnQkFSeEIsbUJBQW1CO2dCQUZ1QixRQUFROzs7OEJBUXRELEtBQUssU0FBQyxjQUFjOztJQXdCekIsMkJBQUM7Q0FBQSxBQTVCRCxJQTRCQztTQXpCWSxvQkFBb0I7OztJQUM3QiwyQ0FBd0M7Ozs7O0lBRTVCLHNDQUE2Qzs7Ozs7SUFBRSw2Q0FBMEM7Ozs7O0lBQUUsc0NBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT25Jbml0LCBPcHRpb25hbCwgU2VsZiwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmdDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBMaXN0RmlsdGVyQ29tcG9uZW50IH0gZnJvbSAnLi4vbGlzdC1maWx0ZXIuY29tcG9uZW50JztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbY2xlYXItZmllbGRzXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIENsZWFyRmllbGRzRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIEBJbnB1dCgnY2xlYXItZmllbGRzJykgY2xlYXJGaWVsZHMgPSAnJztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBAU2VsZigpIHByaXZhdGUgbmdDdHJsOiBOZ0NvbnRyb2wsIHByaXZhdGUgbGlzdEZpbHRlckNtcDogTGlzdEZpbHRlckNvbXBvbmVudCwgcHJpdmF0ZSBpbmplY3Q6IEluamVjdG9yKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpIHtcclxuICAgICAgICBpZiAodGhpcy5jbGVhckZpZWxkcyAmJiB0aGlzLm5nQ3RybCkge1xyXG4gICAgICAgICAgICB0aGlzLm5nQ3RybC52YWx1ZUNoYW5nZXMuc3Vic2NyaWJlKCh2KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMubmdDdHJsLmRpcnR5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5saXN0RmlsdGVyQ21wLmZpZWxkQ29kZU9mQ2xlYXJGaWVsZHMgPSBbXTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJGaWVsZHMuc3BsaXQoJywnKS5mb3JFYWNoKG4gPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIOWtl+autee8luWPt1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbmRpdGlvbkl0ZW0gPSB0aGlzLmxpc3RGaWx0ZXJDbXAubGlzdEZpbHRlckNvbmRpdGlvbnMuZmluZChjID0+IGMuZmllbGRDb2RlID09PSBuKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29uZGl0aW9uSXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDop6blj5HmuIXnqbrlrZfmrrXliJfooajlj5jmm7TvvIznibnmrormjqfku7bnsbvlnovnmoTmuIXnqbrvvIzkuI3og73lj6rmmK/muIXnqbrlgLxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0RmlsdGVyQ21wLmZpZWxkQ29kZU9mQ2xlYXJGaWVsZHMucHVzaChuKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5riF56m65a2X5q61XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmRpdGlvbkl0ZW0udmFsdWUuY2xlYXJWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19