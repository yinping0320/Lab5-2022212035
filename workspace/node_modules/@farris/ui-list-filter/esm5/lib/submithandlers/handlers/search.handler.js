/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
var SearchHandler = /** @class */ (function () {
    function SearchHandler() {
    }
    /**
     * @param {?} qc
     * @return {?}
     */
    SearchHandler.prototype.convert = /**
     * @param {?} qc
     * @return {?}
     */
    function (qc) {
        /** @type {?} */
        var tv = ((/** @type {?} */ (qc.value)));
        return Object.keys(tv).length > 0 && tv.value ? [{
                'FilterField': qc.fieldCode,
                'Compare': CompareType.Like,
                //like CompareType.like undefined
                'Value': tv.value,
                'Relation': RelationType.And,
                //and undefined
                'Expresstype': ValueType.Value
            }] : [];
    };
    return SearchHandler;
}());
export { SearchHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLmhhbmRsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWxpc3QtZmlsdGVyLyIsInNvdXJjZXMiOlsibGliL3N1Ym1pdGhhbmRsZXJzL2hhbmRsZXJzL3NlYXJjaC5oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUkxRDtJQUFBO0lBV0EsQ0FBQzs7Ozs7SUFWRywrQkFBTzs7OztJQUFQLFVBQVEsRUFBa0I7O1lBQ2hCLEVBQUUsR0FBRyxDQUFDLG1CQUFBLEVBQUUsQ0FBQyxLQUFLLEVBQWUsQ0FBQztRQUNwQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUM3QyxhQUFhLEVBQUcsRUFBRSxDQUFDLFNBQVM7Z0JBQzVCLFNBQVMsRUFBRyxXQUFXLENBQUMsSUFBSTs7Z0JBQzVCLE9BQU8sRUFBRyxFQUFFLENBQUMsS0FBSztnQkFDbEIsVUFBVSxFQUFHLFlBQVksQ0FBQyxHQUFHOztnQkFDN0IsYUFBYSxFQUFDLFNBQVMsQ0FBQyxLQUFLO2FBQ2hDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0FBQyxBQVhELElBV0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUXVlcnlDb25kaXRpb25IYW5kbGVyIH0gZnJvbSBcIi4vaXF1ZXJ5Y29uZGl0aW9uLmhhbmRsZXJcIjtcclxuXHJcbmltcG9ydCB7IENvbXBhcmVUeXBlIH0gZnJvbSAnLi4vZW51bS9jb21wYXJlLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFZhbHVlVHlwZSB9IGZyb20gJy4uL2VudW0vdmFsdWUtdHlwZS5lbnVtJztcclxuaW1wb3J0IHsgUmVsYXRpb25UeXBlIH0gZnJvbSAnLi4vZW51bS9yZWxhdGlvbi10eXBlLmVudW0nO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJy4uLy4uL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IFNlYXJjaFZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL3NlYXJjaHZhbHVlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTZWFyY2hIYW5kbGVyIGltcGxlbWVudHMgSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlcntcclxuICAgIGNvbnZlcnQocWM6IFF1ZXJ5Q29uZGl0aW9uKSB7XHJcbiAgICAgICAgY29uc3QgdHYgPSAocWMudmFsdWUgYXMgU2VhcmNoVmFsdWUpO1xyXG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0dikubGVuZ3RoID4gMCAmJiB0di52YWx1ZSA/IFt7XHJcbiAgICAgICAgICAgICdGaWx0ZXJGaWVsZCcgOiBxYy5maWVsZENvZGUsXHJcbiAgICAgICAgICAgICdDb21wYXJlJyA6IENvbXBhcmVUeXBlLkxpa2UsIC8vbGlrZSBDb21wYXJlVHlwZS5saWtlIHVuZGVmaW5lZFxyXG4gICAgICAgICAgICAnVmFsdWUnIDogdHYudmFsdWUsXHJcbiAgICAgICAgICAgICdSZWxhdGlvbicgOiBSZWxhdGlvblR5cGUuQW5kLCAvL2FuZCB1bmRlZmluZWRcclxuICAgICAgICAgICAgJ0V4cHJlc3N0eXBlJzpWYWx1ZVR5cGUuVmFsdWVcclxuICAgICAgICB9XSA6IFtdO1xyXG4gICAgfVxyXG59Il19