/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
var InputGroupHandler = /** @class */ (function () {
    function InputGroupHandler() {
    }
    /**
     * @param {?} qc
     * @return {?}
     */
    InputGroupHandler.prototype.convert = /**
     * @param {?} qc
     * @return {?}
     */
    function (qc) {
        /** @type {?} */
        var igv = ((/** @type {?} */ (qc.value)));
        /** @type {?} */
        var arr = [];
        if (igv.textValue === undefined || igv.textValue === null || igv.textValue.length == 0) {
            return [];
        }
        else if (igv.isInputText) {
            arr.push({
                'FilterField': qc.fieldCode,
                'Compare': CompareType.Like,
                'Value': igv.textValue,
                'Relation': RelationType.And,
                'Expresstype': ValueType.Value
            });
            return arr;
        }
        else {
            igv.getOriginalValue().split(',').forEach((/**
             * @param {?} itemValue
             * @return {?}
             */
            function (itemValue) {
                itemValue && arr.push({
                    'FilterField': qc.fieldCode,
                    'Compare': CompareType.Equal,
                    'Value': itemValue,
                    'Relation': RelationType.Or,
                    'Expresstype': ValueType.Value
                });
            }));
            if (arr.length > 0) {
                arr[0]['Lbracket'] = '(';
                arr[arr.length - 1]['Rbracket'] = ')';
                arr[arr.length - 1]['Relation'] = RelationType.And;
                return arr;
            }
            else {
                return [];
            }
        }
    };
    return InputGroupHandler;
}());
export { InputGroupHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRncm91cC5oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1saXN0LWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9zdWJtaXRoYW5kbGVycy9oYW5kbGVycy9pbnB1dGdyb3VwLmhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBSTFEO0lBQUE7SUFxQ0EsQ0FBQzs7Ozs7SUFwQ0csbUNBQU87Ozs7SUFBUCxVQUFRLEVBQWtCOztZQUNoQixHQUFHLEdBQUcsQ0FBQyxtQkFBQSxFQUFFLENBQUMsS0FBSyxFQUFtQixDQUFDOztZQUNuQyxHQUFHLEdBQUcsRUFBRTtRQUNkLElBQUcsR0FBRyxDQUFDLFNBQVMsS0FBSyxTQUFTLElBQUksR0FBRyxDQUFDLFNBQVMsS0FBSyxJQUFJLElBQUksR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQ25GLE9BQU8sRUFBRSxDQUFDO1NBQ2I7YUFDSSxJQUFJLEdBQUcsQ0FBQyxXQUFXLEVBQUU7WUFDdEIsR0FBRyxDQUFDLElBQUksQ0FBQztnQkFDTCxhQUFhLEVBQUUsRUFBRSxDQUFDLFNBQVM7Z0JBQzNCLFNBQVMsRUFBRSxXQUFXLENBQUMsSUFBSTtnQkFDM0IsT0FBTyxFQUFFLEdBQUcsQ0FBQyxTQUFTO2dCQUN0QixVQUFVLEVBQUUsWUFBWSxDQUFDLEdBQUc7Z0JBQzVCLGFBQWEsRUFBRSxTQUFTLENBQUMsS0FBSzthQUNqQyxDQUFDLENBQUM7WUFDSCxPQUFPLEdBQUcsQ0FBQztTQUNkO2FBQ0k7WUFDRCxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTzs7OztZQUFDLFVBQUEsU0FBUztnQkFDL0MsU0FBUyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7b0JBQ2xCLGFBQWEsRUFBRSxFQUFFLENBQUMsU0FBUztvQkFDM0IsU0FBUyxFQUFFLFdBQVcsQ0FBQyxLQUFLO29CQUM1QixPQUFPLEVBQUUsU0FBUztvQkFDbEIsVUFBVSxFQUFFLFlBQVksQ0FBQyxFQUFFO29CQUMzQixhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7aUJBQ2pDLENBQUMsQ0FBQztZQUNQLENBQUMsRUFBQyxDQUFDO1lBQ0gsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDaEIsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLEdBQUcsQ0FBQztnQkFDekIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEdBQUcsR0FBRyxDQUFDO2dCQUN0QyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDO2dCQUNuRCxPQUFPLEdBQUcsQ0FBQzthQUNkO2lCQUFNO2dCQUNILE9BQU8sRUFBRSxDQUFDO2FBQ2I7U0FDSjtJQUNMLENBQUM7SUFDTCx3QkFBQztBQUFELENBQUMsQUFyQ0QsSUFxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUXVlcnlDb25kaXRpb25IYW5kbGVyIH0gZnJvbSBcIi4vaXF1ZXJ5Y29uZGl0aW9uLmhhbmRsZXJcIjtcclxuXHJcbmltcG9ydCB7IENvbXBhcmVUeXBlIH0gZnJvbSAnLi4vZW51bS9jb21wYXJlLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFZhbHVlVHlwZSB9IGZyb20gJy4uL2VudW0vdmFsdWUtdHlwZS5lbnVtJztcclxuaW1wb3J0IHsgUmVsYXRpb25UeXBlIH0gZnJvbSAnLi4vZW51bS9yZWxhdGlvbi10eXBlLmVudW0nO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJy4uLy4uL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IElucHV0R3JvdXBWYWx1ZSB9IGZyb20gXCIuLi8uLi9lbnRpdHkvY29uZGl0aW9udmFsdWUvaW5wdXRncm91cFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBIYW5kbGVyIGltcGxlbWVudHMgSVF1ZXJ5Q29uZGl0aW9uSGFuZGxlciB7XHJcbiAgICBjb252ZXJ0KHFjOiBRdWVyeUNvbmRpdGlvbikge1xyXG4gICAgICAgIGNvbnN0IGlndiA9IChxYy52YWx1ZSBhcyBJbnB1dEdyb3VwVmFsdWUpO1xyXG4gICAgICAgIGNvbnN0IGFyciA9IFtdO1xyXG4gICAgICAgIGlmKGlndi50ZXh0VmFsdWUgPT09IHVuZGVmaW5lZCB8fCBpZ3YudGV4dFZhbHVlID09PSBudWxsIHx8IGlndi50ZXh0VmFsdWUubGVuZ3RoID09IDAgKXtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChpZ3YuaXNJbnB1dFRleHQpIHtcclxuICAgICAgICAgICAgYXJyLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgJ0ZpbHRlckZpZWxkJzogcWMuZmllbGRDb2RlLFxyXG4gICAgICAgICAgICAgICAgJ0NvbXBhcmUnOiBDb21wYXJlVHlwZS5MaWtlLFxyXG4gICAgICAgICAgICAgICAgJ1ZhbHVlJzogaWd2LnRleHRWYWx1ZSxcclxuICAgICAgICAgICAgICAgICdSZWxhdGlvbic6IFJlbGF0aW9uVHlwZS5BbmQsXHJcbiAgICAgICAgICAgICAgICAnRXhwcmVzc3R5cGUnOiBWYWx1ZVR5cGUuVmFsdWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZ3YuZ2V0T3JpZ2luYWxWYWx1ZSgpLnNwbGl0KCcsJykuZm9yRWFjaChpdGVtVmFsdWUgPT4ge1xyXG4gICAgICAgICAgICAgICAgaXRlbVZhbHVlICYmIGFyci5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAnRmlsdGVyRmllbGQnOiBxYy5maWVsZENvZGUsXHJcbiAgICAgICAgICAgICAgICAgICAgJ0NvbXBhcmUnOiBDb21wYXJlVHlwZS5FcXVhbCxcclxuICAgICAgICAgICAgICAgICAgICAnVmFsdWUnOiBpdGVtVmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgJ1JlbGF0aW9uJzogUmVsYXRpb25UeXBlLk9yLFxyXG4gICAgICAgICAgICAgICAgICAgICdFeHByZXNzdHlwZSc6IFZhbHVlVHlwZS5WYWx1ZVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZiAoYXJyLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGFyclswXVsnTGJyYWNrZXQnXSA9ICcoJztcclxuICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoIC0gMV1bJ1JicmFja2V0J10gPSAnKSc7XHJcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aCAtIDFdWydSZWxhdGlvbiddID0gUmVsYXRpb25UeXBlLkFuZDtcclxuICAgICAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=