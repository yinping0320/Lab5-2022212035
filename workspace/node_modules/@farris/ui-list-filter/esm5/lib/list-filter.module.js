/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { ListFilterComponent } from './list-filter.component';
import { InputComponent } from './controlcomponent/inputcomponent/input.component';
import { SearchComponent } from './controlcomponent/searchcomponent/search.component';
import { HelpComponent } from './controlcomponent/helpcomponent.ts/help.component';
import { DateComponent } from './controlcomponent/datecomponent/date.component';
import { DropDownComponent } from './controlcomponent/dropdowncomponent/dropdown.component';
import { NumberComponent } from './controlcomponent/numbercomponent/number.component';
import { FilterCheckboxComponent } from './controlcomponent/checkboxcomponent/checkbox.component';
import { DateRangeComponent } from './controlcomponent/daterangecomponent/daterange.component';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { InputGroupModule } from '@farris/ui-input-group';
import { FarrisDatePickerModule } from '@farris/ui-datepicker';
import { DatalistModule } from '@farris/ui-datalist';
import { ComboListModule } from '@farris/ui-combo-list';
import { LookupModule } from '@farris/ui-lookup';
import { FarrisFormsModule } from '@farris/ui-forms';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
// import { InputsModule } from '@progress/kendo-angular-inputs';
import { SolutionService } from './service/solution.service';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { QuerySolutionService } from './submithandlers/query-solution.service';
import { ConvertorService } from './service/convertorservice';
import { ListFilterCommonComponent } from './list-filter-common';
import { LocaleModule } from '@farris/ui-locale';
import { ControlTypeXPipe } from './controlType.pipe';
import { FilterRadioComponent } from './controlcomponent/radiocomponent/radio.component';
import { FilterInputGroupComponent } from './controlcomponent/inputgroupcomponent/inputgroup.component';
import { ClearFieldsDirective } from './directives/clear-fields.directive';
var ListFilterModule = /** @class */ (function () {
    function ListFilterModule() {
    }
    ListFilterModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        ListFilterComponent,
                        DateComponent,
                        NumberComponent,
                        HelpComponent,
                        InputComponent,
                        DropDownComponent,
                        SearchComponent,
                        FilterCheckboxComponent,
                        DateRangeComponent,
                        ListFilterCommonComponent,
                        FilterRadioComponent,
                        FilterInputGroupComponent,
                        ControlTypeXPipe,
                        ClearFieldsDirective
                    ],
                    imports: [
                        CommonModule,
                        FormsModule,
                        InputGroupModule,
                        FarrisDatePickerModule,
                        DatalistModule,
                        ComboListModule,
                        LookupModule,
                        FarrisFormsModule,
                        NumberSpinnerModule,
                        PerfectScrollbarModule,
                        LocaleModule.forRoot()
                        // InputsModule
                    ],
                    providers: [
                        ConvertorService,
                        SolutionService,
                        QuerySolutionService
                    ],
                    exports: [
                        ListFilterComponent,
                        DateComponent,
                        NumberComponent,
                        HelpComponent,
                        InputComponent,
                        DropDownComponent,
                        SearchComponent,
                        FilterCheckboxComponent,
                        DateRangeComponent,
                        ListFilterCommonComponent,
                        FilterRadioComponent,
                        FilterInputGroupComponent,
                        ControlTypeXPipe
                    ]
                },] }
    ];
    return ListFilterModule;
}());
export { ListFilterModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1maWx0ZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1saXN0LWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9saXN0LWZpbHRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ25GLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUN0RixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDbkYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQzVGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUN0RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5REFBeUQsQ0FBQztBQUNsRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUUvRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQUd0RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFaEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFakUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3pGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQ3hHLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRTNFO0lBQUE7SUFvRGdDLENBQUM7O2dCQXBEaEMsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixtQkFBbUI7d0JBQ25CLGFBQWE7d0JBQ2IsZUFBZTt3QkFDZixhQUFhO3dCQUNiLGNBQWM7d0JBQ2QsaUJBQWlCO3dCQUNqQixlQUFlO3dCQUNmLHVCQUF1Qjt3QkFDdkIsa0JBQWtCO3dCQUNsQix5QkFBeUI7d0JBQ3pCLG9CQUFvQjt3QkFDcEIseUJBQXlCO3dCQUN6QixnQkFBZ0I7d0JBQ2hCLG9CQUFvQjtxQkFDckI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxnQkFBZ0I7d0JBQ2hCLHNCQUFzQjt3QkFDdEIsY0FBYzt3QkFDZCxlQUFlO3dCQUNmLFlBQVk7d0JBQ1osaUJBQWlCO3dCQUNqQixtQkFBbUI7d0JBQ25CLHNCQUFzQjt3QkFDdEIsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsZUFBZTtxQkFDaEI7b0JBQ0QsU0FBUyxFQUFDO3dCQUNSLGdCQUFnQjt3QkFDaEIsZUFBZTt3QkFDZixvQkFBb0I7cUJBQ3JCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxtQkFBbUI7d0JBQ25CLGFBQWE7d0JBQ2IsZUFBZTt3QkFDZixhQUFhO3dCQUNiLGNBQWM7d0JBQ2QsaUJBQWlCO3dCQUNqQixlQUFlO3dCQUNmLHVCQUF1Qjt3QkFDdkIsa0JBQWtCO3dCQUNsQix5QkFBeUI7d0JBQ3pCLG9CQUFvQjt3QkFDcEIseUJBQXlCO3dCQUN6QixnQkFBZ0I7cUJBQ2pCO2lCQUNGOztJQUMrQix1QkFBQztDQUFBLEFBcERqQyxJQW9EaUM7U0FBcEIsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTGlzdEZpbHRlckNvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1maWx0ZXIuY29tcG9uZW50JztcclxuXHJcbmltcG9ydCB7IElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9jb250cm9sY29tcG9uZW50L2lucHV0Y29tcG9uZW50L2lucHV0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFNlYXJjaENvbXBvbmVudCB9IGZyb20gJy4vY29udHJvbGNvbXBvbmVudC9zZWFyY2hjb21wb25lbnQvc2VhcmNoLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEhlbHBDb21wb25lbnQgfSBmcm9tICcuL2NvbnRyb2xjb21wb25lbnQvaGVscGNvbXBvbmVudC50cy9oZWxwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGVDb21wb25lbnQgfSBmcm9tICcuL2NvbnRyb2xjb21wb25lbnQvZGF0ZWNvbXBvbmVudC9kYXRlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERyb3BEb3duQ29tcG9uZW50IH0gZnJvbSAnLi9jb250cm9sY29tcG9uZW50L2Ryb3Bkb3duY29tcG9uZW50L2Ryb3Bkb3duLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE51bWJlckNvbXBvbmVudCB9IGZyb20gJy4vY29udHJvbGNvbXBvbmVudC9udW1iZXJjb21wb25lbnQvbnVtYmVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZpbHRlckNoZWNrYm94Q29tcG9uZW50IH0gZnJvbSAnLi9jb250cm9sY29tcG9uZW50L2NoZWNrYm94Y29tcG9uZW50L2NoZWNrYm94LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGVSYW5nZUNvbXBvbmVudCB9IGZyb20gJy4vY29udHJvbGNvbXBvbmVudC9kYXRlcmFuZ2Vjb21wb25lbnQvZGF0ZXJhbmdlLmNvbXBvbmVudCc7XHJcblxyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5pbXBvcnQgeyBGYXJyaXNEYXRlUGlja2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kYXRlcGlja2VyJztcclxuaW1wb3J0IHsgRGF0YWxpc3RNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFsaXN0JztcclxuaW1wb3J0IHsgQ29tYm9MaXN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21iby1saXN0JztcclxuaW1wb3J0IHsgTG9va3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb29rdXAnO1xyXG5pbXBvcnQgeyBGYXJyaXNGb3Jtc01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZm9ybXMnO1xyXG5pbXBvcnQgeyBQZXJmZWN0U2Nyb2xsYmFyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1wZXJmZWN0LXNjcm9sbGJhcic7XHJcblxyXG4vLyBpbXBvcnQgeyBJbnB1dHNNb2R1bGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1pbnB1dHMnO1xyXG5pbXBvcnQgeyBTb2x1dGlvblNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2Uvc29sdXRpb24uc2VydmljZSc7XHJcbmltcG9ydCB7IE51bWJlclNwaW5uZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW51bWJlci1zcGlubmVyJztcclxuXHJcbmltcG9ydCB7IFF1ZXJ5U29sdXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9zdWJtaXRoYW5kbGVycy9xdWVyeS1zb2x1dGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQ29udmVydG9yU2VydmljZSB9IGZyb20gJy4vc2VydmljZS9jb252ZXJ0b3JzZXJ2aWNlJztcclxuaW1wb3J0IHsgTGlzdEZpbHRlckNvbW1vbkNvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1maWx0ZXItY29tbW9uJztcclxuXHJcbmltcG9ydCB7IExvY2FsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgQ29udHJvbFR5cGVYUGlwZSB9IGZyb20gJy4vY29udHJvbFR5cGUucGlwZSc7XHJcbmltcG9ydCB7IEZpbHRlclJhZGlvQ29tcG9uZW50IH0gZnJvbSAnLi9jb250cm9sY29tcG9uZW50L3JhZGlvY29tcG9uZW50L3JhZGlvLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZpbHRlcklucHV0R3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2NvbnRyb2xjb21wb25lbnQvaW5wdXRncm91cGNvbXBvbmVudC9pbnB1dGdyb3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENsZWFyRmllbGRzRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2NsZWFyLWZpZWxkcy5kaXJlY3RpdmUnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIExpc3RGaWx0ZXJDb21wb25lbnQsXHJcbiAgICBEYXRlQ29tcG9uZW50LFxyXG4gICAgTnVtYmVyQ29tcG9uZW50LFxyXG4gICAgSGVscENvbXBvbmVudCxcclxuICAgIElucHV0Q29tcG9uZW50LFxyXG4gICAgRHJvcERvd25Db21wb25lbnQsXHJcbiAgICBTZWFyY2hDb21wb25lbnQsXHJcbiAgICBGaWx0ZXJDaGVja2JveENvbXBvbmVudCxcclxuICAgIERhdGVSYW5nZUNvbXBvbmVudCxcclxuICAgIExpc3RGaWx0ZXJDb21tb25Db21wb25lbnQsXHJcbiAgICBGaWx0ZXJSYWRpb0NvbXBvbmVudCxcclxuICAgIEZpbHRlcklucHV0R3JvdXBDb21wb25lbnQsXHJcbiAgICBDb250cm9sVHlwZVhQaXBlLFxyXG4gICAgQ2xlYXJGaWVsZHNEaXJlY3RpdmVcclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgIEZhcnJpc0RhdGVQaWNrZXJNb2R1bGUsXHJcbiAgICBEYXRhbGlzdE1vZHVsZSxcclxuICAgIENvbWJvTGlzdE1vZHVsZSxcclxuICAgIExvb2t1cE1vZHVsZSxcclxuICAgIEZhcnJpc0Zvcm1zTW9kdWxlLFxyXG4gICAgTnVtYmVyU3Bpbm5lck1vZHVsZSxcclxuICAgIFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpXHJcbiAgICAvLyBJbnB1dHNNb2R1bGVcclxuICBdLFxyXG4gIHByb3ZpZGVyczpbXHJcbiAgICBDb252ZXJ0b3JTZXJ2aWNlLFxyXG4gICAgU29sdXRpb25TZXJ2aWNlLFxyXG4gICAgUXVlcnlTb2x1dGlvblNlcnZpY2VcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIExpc3RGaWx0ZXJDb21wb25lbnQsXHJcbiAgICBEYXRlQ29tcG9uZW50LFxyXG4gICAgTnVtYmVyQ29tcG9uZW50LFxyXG4gICAgSGVscENvbXBvbmVudCxcclxuICAgIElucHV0Q29tcG9uZW50LFxyXG4gICAgRHJvcERvd25Db21wb25lbnQsXHJcbiAgICBTZWFyY2hDb21wb25lbnQsXHJcbiAgICBGaWx0ZXJDaGVja2JveENvbXBvbmVudCxcclxuICAgIERhdGVSYW5nZUNvbXBvbmVudCxcclxuICAgIExpc3RGaWx0ZXJDb21tb25Db21wb25lbnQsXHJcbiAgICBGaWx0ZXJSYWRpb0NvbXBvbmVudCxcclxuICAgIEZpbHRlcklucHV0R3JvdXBDb21wb25lbnQsXHJcbiAgICBDb250cm9sVHlwZVhQaXBlXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTGlzdEZpbHRlck1vZHVsZSB7IH1cclxuIl19