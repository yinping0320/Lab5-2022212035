/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { ControlType } from './entity/controltype';
var ControlTypeXPipe = /** @class */ (function () {
    function ControlTypeXPipe() {
    }
    /**
     * @param {?} value
     * @return {?}
     */
    ControlTypeXPipe.prototype.transform = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var type;
        switch (value.control.getControlType()) {
            case ControlType.Text:
                type = 'input';
                break;
            case ControlType.Search:
                type = 'search';
                break;
            case ControlType.Date:
                type = 'date';
                break;
            case ControlType.Year:
                type = 'year';
                break;
            case ControlType.Month:
                type = 'month';
                break;
            case ControlType.MonthRange:
                type = 'monthrange';
                break;
            case ControlType.YearRange:
                type = 'yearrange';
                break;
            case ControlType.DateRange:
                type = 'daterange';
                break;
            case ControlType.DateRangeTime:
                type = 'daterangetime';
                break;
            case ControlType.DropDown:
                type = 'dropdown';
                break;
            case ControlType.NumberRange:
                type = 'number';
                break;
            case ControlType.Help:
                type = 'help';
                break;
            case ControlType.CheckboxGroup:
                type = 'checkboxgroup';
                break;
            case ControlType.Radio:
                type = 'radio';
                break;
            case ControlType.InputGroup:
                type = 'input-group';
                break;
            default:
                type = 'input';
                break;
        }
        return type;
    };
    ControlTypeXPipe.decorators = [
        { type: Pipe, args: [{ name: 'controlType' },] }
    ];
    return ControlTypeXPipe;
}());
export { ControlTypeXPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbFR5cGUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbGlzdC1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvY29udHJvbFR5cGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFcEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRW5EO0lBQUE7SUF3REEsQ0FBQzs7Ozs7SUF0REcsb0NBQVM7Ozs7SUFBVCxVQUFVLEtBQXFCOztZQUN2QixJQUFJO1FBQ1IsUUFBTyxLQUFLLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxFQUFDO1lBQ2xDLEtBQUssV0FBVyxDQUFDLElBQUk7Z0JBQ2pCLElBQUksR0FBRyxPQUFPLENBQUM7Z0JBQ2YsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLE1BQU07Z0JBQ25CLElBQUksR0FBRyxRQUFRLENBQUM7Z0JBQ2hCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxJQUFJO2dCQUNqQixJQUFJLEdBQUcsTUFBTSxDQUFDO2dCQUNkLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxJQUFJO2dCQUNqQixJQUFJLEdBQUcsTUFBTSxDQUFDO2dCQUNkLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxLQUFLO2dCQUNsQixJQUFJLEdBQUcsT0FBTyxDQUFDO2dCQUNmLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxVQUFVO2dCQUN2QixJQUFJLEdBQUcsWUFBWSxDQUFDO2dCQUNwQixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsU0FBUztnQkFDdEIsSUFBSSxHQUFHLFdBQVcsQ0FBQztnQkFDbkIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFNBQVM7Z0JBQ3RCLElBQUksR0FBRyxXQUFXLENBQUM7Z0JBQ25CLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxhQUFhO2dCQUMxQixJQUFJLEdBQUcsZUFBZSxDQUFDO2dCQUN2QixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsUUFBUTtnQkFDckIsSUFBSSxHQUFHLFVBQVUsQ0FBQztnQkFDbEIsTUFBTTtZQUNWLEtBQUssV0FBVyxDQUFDLFdBQVc7Z0JBQ3hCLElBQUksR0FBRyxRQUFRLENBQUM7Z0JBQ2hCLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxJQUFJO2dCQUNqQixJQUFJLEdBQUcsTUFBTSxDQUFDO2dCQUNkLE1BQU07WUFDVixLQUFLLFdBQVcsQ0FBQyxhQUFhO2dCQUMxQixJQUFJLEdBQUcsZUFBZSxDQUFDO2dCQUN2QixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsS0FBSztnQkFDbEIsSUFBSSxHQUFHLE9BQU8sQ0FBQztnQkFDZixNQUFNO1lBQ1YsS0FBSyxXQUFXLENBQUMsVUFBVTtnQkFDdkIsSUFBSSxHQUFHLGFBQWEsQ0FBQztnQkFDckIsTUFBTTtZQUNWO2dCQUNJLElBQUksR0FBRyxPQUFPLENBQUM7Z0JBQ2YsTUFBTTtTQUNiO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQzs7Z0JBdkRKLElBQUksU0FBQyxFQUFDLElBQUksRUFBRSxhQUFhLEVBQUM7O0lBd0QzQix1QkFBQztDQUFBLEFBeERELElBd0RDO1NBdkRZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUXVlcnlDb25kaXRpb24gfSBmcm9tICcuL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSAnLi9lbnRpdHkvY29udHJvbHR5cGUnO1xyXG5cclxuQFBpcGUoe25hbWU6ICdjb250cm9sVHlwZSd9KVxyXG5leHBvcnQgY2xhc3MgQ29udHJvbFR5cGVYUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgdHJhbnNmb3JtKHZhbHVlOiBRdWVyeUNvbmRpdGlvbik6IEFycmF5PGFueT4ge1xyXG4gICAgICAgIGxldCB0eXBlO1xyXG4gICAgICAgIHN3aXRjaCh2YWx1ZS5jb250cm9sLmdldENvbnRyb2xUeXBlKCkpe1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLlRleHQ6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2lucHV0JztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLlNlYXJjaDpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnc2VhcmNoJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkRhdGU6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2RhdGUnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuWWVhcjpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAneWVhcic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5Nb250aDpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnbW9udGgnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuTW9udGhSYW5nZTpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnbW9udGhyYW5nZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5ZZWFyUmFuZ2U6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3llYXJyYW5nZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5EYXRlUmFuZ2U6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2RhdGVyYW5nZSc7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5EYXRlUmFuZ2VUaW1lOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdkYXRlcmFuZ2V0aW1lJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkRyb3BEb3duOlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdkcm9wZG93bic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb250cm9sVHlwZS5OdW1iZXJSYW5nZTpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnbnVtYmVyJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLkhlbHA6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2hlbHAnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuQ2hlY2tib3hHcm91cDpcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAnY2hlY2tib3hncm91cCc7XHJcbiAgICAgICAgICAgICAgICBicmVhazsgXHJcbiAgICAgICAgICAgIGNhc2UgQ29udHJvbFR5cGUuUmFkaW86XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ3JhZGlvJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbnRyb2xUeXBlLklucHV0R3JvdXA6XHJcbiAgICAgICAgICAgICAgICB0eXBlID0gJ2lucHV0LWdyb3VwJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgdHlwZSA9ICdpbnB1dCc7XHJcbiAgICAgICAgICAgICAgICBicmVhazsgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHlwZTtcclxuICAgIH1cclxufVxyXG4iXX0=