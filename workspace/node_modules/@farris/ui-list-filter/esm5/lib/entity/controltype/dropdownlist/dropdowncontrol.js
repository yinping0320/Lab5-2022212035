/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../../controltype";
import { EnumType } from "./enumtype";
import { EnumValueConvert } from "./ienumvalue";
import { EnumStringValue } from "./stringenumvalue";
import { EnumBoolValue } from "./boolenumvalue";
import { EnumIntegerValue } from "./integerenumvalue";
/**
 * 下拉列表控件
 */
var /**
 * 下拉列表控件
 */
DropDownControl = /** @class */ (function () {
    function DropDownControl() {
    }
    /**
     * 获取控件类型
     */
    /**
     * 获取控件类型
     * @return {?}
     */
    DropDownControl.prototype.getControlType = /**
     * 获取控件类型
     * @return {?}
     */
    function () {
        return ControlType.DropDown;
    };
    return DropDownControl;
}());
/**
 * 下拉列表控件
 */
export { DropDownControl };
if (false) {
    /**
     * 下拉值类型
     * @type {?}
     */
    DropDownControl.prototype.valueType;
    /**
     * 默认显示
     * @type {?}
     */
    DropDownControl.prototype.placeholder;
    /**
     * 下拉数据源列表
     * 该属性为IEnumValue接口类型，具体实现类如下：
     * 1.布尔类型：EnumBoolValue,布尔类型的控件会转成下拉列表，实现类使用EnumBoolValue
     * 2.字符串类型：EnumStringValue
     * 3.整型类型：EnumIntegerValue 例如Radio Button类型需要使用EnumIntegerValue实现类
     * @type {?}
     */
    DropDownControl.prototype.enumValues;
    /**
     * 是否是展示在扩展区域内的
     * @type {?}
     */
    DropDownControl.prototype.isExtend;
    /**
     * 是否显示label
     * @type {?}
     */
    DropDownControl.prototype.showLabel;
    /**
     * 是否必填
     * @type {?}
     */
    DropDownControl.prototype.required;
}
/**
 * 下拉列表控件序列化与反序列化器
 */
var /**
 * 下拉列表控件序列化与反序列化器
 */
DropDownListControlConvert = /** @class */ (function () {
    function DropDownListControlConvert() {
    }
    /**
     * 序列化
     * @param obj 下拉列表控件实体
     */
    /**
     * 序列化
     * @param {?} obj 下拉列表控件实体
     * @return {?}
     */
    DropDownListControlConvert.prototype.convertToObject = /**
     * 序列化
     * @param {?} obj 下拉列表控件实体
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var dropDownListControl = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        jobj["valueType"] = dropDownListControl.valueType;
        if (dropDownListControl.enumValues != null) {
            /** @type {?} */
            var jarray_1 = jobj["enumValues"] = [];
            /** @type {?} */
            var convertor_1 = new EnumValueConvert();
            dropDownListControl.enumValues.forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                if (dropDownListControl.valueType == EnumType.BoolType) {
                    jarray_1.push(convertor_1.convertJObject(Object.assign(new EnumBoolValue(), element)));
                }
                else if (dropDownListControl.valueType == EnumType.IntType) {
                    jarray_1.push(convertor_1.convertJObject(Object.assign(new EnumIntegerValue(), element)));
                }
                else {
                    jarray_1.push(convertor_1.convertJObject(Object.assign(new EnumStringValue(), element)));
                }
            }));
        }
        return jobj;
    };
    /**
     * 反序列化
     * @param jobj 下拉列表控件实体序列化后的JSON对象
     */
    /**
     * 反序列化
     * @param {?} jobj 下拉列表控件实体序列化后的JSON对象
     * @return {?}
     */
    DropDownListControlConvert.prototype.initFromObject = /**
     * 反序列化
     * @param {?} jobj 下拉列表控件实体序列化后的JSON对象
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var control = new DropDownControl();
        if (jobj["valueType"] != null) {
            control.valueType = (/** @type {?} */ (jobj["valueType"]));
        }
        if (jobj["enumValues"] != null) {
            control.enumValues = new Array();
            jobj["enumValues"].forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                /** @type {?} */
                var convertor = new EnumValueConvert();
                control.enumValues.push(convertor.initFromJobject(element));
            }));
        }
        return control;
    };
    return DropDownListControlConvert;
}());
/**
 * 下拉列表控件序列化与反序列化器
 */
export { DropDownListControlConvert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd25jb250cm9sLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1saXN0LWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvY29udHJvbHR5cGUvZHJvcGRvd25saXN0L2Ryb3Bkb3duY29udHJvbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFjLGdCQUFnQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7Ozs7QUFLdEQ7Ozs7SUFBQTtJQW1DQSxDQUFDO0lBakNHOztPQUVHOzs7OztJQUNILHdDQUFjOzs7O0lBQWQ7UUFDSSxPQUFPLFdBQVcsQ0FBQyxRQUFRLENBQUM7SUFDaEMsQ0FBQztJQTRCTCxzQkFBQztBQUFELENBQUMsQUFuQ0QsSUFtQ0M7Ozs7Ozs7Ozs7SUF2Qkcsb0NBQW1COzs7OztJQUluQixzQ0FBbUI7Ozs7Ozs7OztJQVFuQixxQ0FBNkI7Ozs7O0lBSzdCLG1DQUFpQjs7Ozs7SUFHakIsb0NBQWtCOzs7OztJQUVsQixtQ0FBaUI7Ozs7O0FBTXJCOzs7O0lBQUE7SUE4Q0EsQ0FBQztJQTVDRzs7O09BR0c7Ozs7OztJQUNILG9EQUFlOzs7OztJQUFmLFVBQWdCLEdBQW1COztZQUMzQixtQkFBbUIsR0FBRSxtQkFBQSxHQUFHLEVBQW1COztZQUMzQyxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7UUFDckIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQztRQUNoRCxJQUFHLG1CQUFtQixDQUFDLFVBQVUsSUFBRSxJQUFJLEVBQUM7O2dCQUNoQyxRQUFNLEdBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFDLEVBQUU7O2dCQUM1QixXQUFTLEdBQUMsSUFBSSxnQkFBZ0IsRUFBRTtZQUNwQyxtQkFBbUIsQ0FBQyxVQUFVLENBQUMsT0FBTzs7OztZQUFDLFVBQUEsT0FBTztnQkFDMUMsSUFBRyxtQkFBbUIsQ0FBQyxTQUFTLElBQUUsUUFBUSxDQUFDLFFBQVEsRUFBQztvQkFDaEQsUUFBTSxDQUFDLElBQUksQ0FBQyxXQUFTLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxhQUFhLEVBQUUsRUFBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQ3JGO3FCQUNJLElBQUcsbUJBQW1CLENBQUMsU0FBUyxJQUFFLFFBQVEsQ0FBQyxPQUFPLEVBQUM7b0JBQ3BELFFBQU0sQ0FBQyxJQUFJLENBQUMsV0FBUyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksZ0JBQWdCLEVBQUUsRUFBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQ3hGO3FCQUNHO29CQUNBLFFBQU0sQ0FBQyxJQUFJLENBQUMsV0FBUyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksZUFBZSxFQUFFLEVBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUN2RjtZQUNMLENBQUMsRUFBQyxDQUFDO1NBQ047UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHOzs7Ozs7SUFDSCxtREFBYzs7Ozs7SUFBZCxVQUFlLElBQVc7O1lBQ2xCLE9BQU8sR0FBQyxJQUFJLGVBQWUsRUFBRTtRQUNqQyxJQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBRSxJQUFJLEVBQUM7WUFDdkIsT0FBTyxDQUFDLFNBQVMsR0FBQyxtQkFBQSxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQVUsQ0FBQztTQUNqRDtRQUNELElBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFFLElBQUksRUFBQztZQUN4QixPQUFPLENBQUMsVUFBVSxHQUFDLElBQUksS0FBSyxFQUFjLENBQUM7WUFDM0MsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLE9BQU87Ozs7WUFBQyxVQUFBLE9BQU87O29CQUMxQixTQUFTLEdBQUMsSUFBSSxnQkFBZ0IsRUFBRTtnQkFDcEMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2hFLENBQUMsRUFBQyxDQUFDO1NBQ047UUFDRCxPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBQ0wsaUNBQUM7QUFBRCxDQUFDLEFBOUNELElBOENDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUNvbnRyb2wgfSBmcm9tIFwiLi4vaWNvbnRyb2xcIjtcclxuaW1wb3J0IHsgQ29udHJvbFR5cGUgfSBmcm9tIFwiLi4vLi4vY29udHJvbHR5cGVcIjtcclxuaW1wb3J0IHsgRW51bVR5cGUgfSBmcm9tIFwiLi9lbnVtdHlwZVwiO1xyXG5pbXBvcnQgeyBJRW51bVZhbHVlLCBFbnVtVmFsdWVDb252ZXJ0IH0gZnJvbSBcIi4vaWVudW12YWx1ZVwiO1xyXG5pbXBvcnQgeyBFbnVtU3RyaW5nVmFsdWUgfSBmcm9tIFwiLi9zdHJpbmdlbnVtdmFsdWVcIjtcclxuaW1wb3J0IHsgRW51bUJvb2xWYWx1ZSB9IGZyb20gXCIuL2Jvb2xlbnVtdmFsdWVcIjtcclxuaW1wb3J0IHsgRW51bUludGVnZXJWYWx1ZSB9IGZyb20gXCIuL2ludGVnZXJlbnVtdmFsdWVcIjtcclxuXHJcbi8qKlxyXG4gKiDkuIvmi4nliJfooajmjqfku7ZcclxuICovXHJcbmV4cG9ydCBjbGFzcyBEcm9wRG93bkNvbnRyb2wgaW1wbGVtZW50cyBJQ29udHJvbHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluaOp+S7tuexu+Wei1xyXG4gICAgICovXHJcbiAgICBnZXRDb250cm9sVHlwZSgpOiBDb250cm9sVHlwZSB7XHJcbiAgICAgICAgcmV0dXJuIENvbnRyb2xUeXBlLkRyb3BEb3duO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5LiL5ouJ5YC857G75Z6LXHJcbiAgICAgKi9cclxuICAgIHZhbHVlVHlwZTpFbnVtVHlwZTtcclxuICAgIC8qKlxyXG4gICAgICog6buY6K6k5pi+56S6XHJcbiAgICAgKi9cclxuICAgIHBsYWNlaG9sZGVyOnN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5LiL5ouJ5pWw5o2u5rqQ5YiX6KGoXHJcbiAgICAgKiDor6XlsZ7mgKfkuLpJRW51bVZhbHVl5o6l5Y+j57G75Z6L77yM5YW35L2T5a6e546w57G75aaC5LiL77yaXHJcbiAgICAgKiAxLuW4g+WwlOexu+Wei++8mkVudW1Cb29sVmFsdWUs5biD5bCU57G75Z6L55qE5o6n5Lu25Lya6L2s5oiQ5LiL5ouJ5YiX6KGo77yM5a6e546w57G75L2/55SoRW51bUJvb2xWYWx1ZVxyXG4gICAgICogMi7lrZfnrKbkuLLnsbvlnovvvJpFbnVtU3RyaW5nVmFsdWVcclxuICAgICAqIDMu5pW05Z6L57G75Z6L77yaRW51bUludGVnZXJWYWx1ZSDkvovlpoJSYWRpbyBCdXR0b27nsbvlnovpnIDopoHkvb/nlKhFbnVtSW50ZWdlclZhbHVl5a6e546w57G7XHJcbiAgICAgKi9cclxuICAgIGVudW1WYWx1ZXM6QXJyYXk8SUVudW1WYWx1ZT47XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmK/lkKbmmK/lsZXnpLrlnKjmianlsZXljLrln5/lhoXnmoRcclxuICAgICAqL1xyXG4gICAgaXNFeHRlbmQ6Ym9vbGVhbjtcclxuXHJcbiAgICAvKirmmK/lkKbmmL7npLpsYWJlbCAqL1xyXG4gICAgc2hvd0xhYmVsOmJvb2xlYW47XHJcbiAgICAvKirmmK/lkKblv4XloasgKi9cclxuICAgIHJlcXVpcmVkOmJvb2xlYW47XHJcbn1cclxuXHJcbi8qKlxyXG4gKiDkuIvmi4nliJfooajmjqfku7bluo/liJfljJbkuI7lj43luo/liJfljJblmahcclxuICovXHJcbmV4cG9ydCBjbGFzcyBEcm9wRG93bkxpc3RDb250cm9sQ29udmVydHtcclxuXHJcbiAgICAvKipcclxuICAgICAqIOW6j+WIl+WMllxyXG4gICAgICogQHBhcmFtIG9iaiDkuIvmi4nliJfooajmjqfku7blrp7kvZNcclxuICAgICAqL1xyXG4gICAgY29udmVydFRvT2JqZWN0KG9iajpEcm9wRG93bkNvbnRyb2wpe1xyXG4gICAgICAgIGxldCBkcm9wRG93bkxpc3RDb250cm9sPSBvYmogYXMgRHJvcERvd25Db250cm9sO1xyXG4gICAgICAgIGxldCBqb2JqPW5ldyBPYmplY3QoKTtcclxuICAgICAgICBqb2JqW1widmFsdWVUeXBlXCJdPWRyb3BEb3duTGlzdENvbnRyb2wudmFsdWVUeXBlO1xyXG4gICAgICAgIGlmKGRyb3BEb3duTGlzdENvbnRyb2wuZW51bVZhbHVlcyE9bnVsbCl7XHJcbiAgICAgICAgICAgIGxldCBqYXJyYXk9am9ialtcImVudW1WYWx1ZXNcIl09W107XHJcbiAgICAgICAgICAgIGxldCBjb252ZXJ0b3I9bmV3IEVudW1WYWx1ZUNvbnZlcnQoKTtcclxuICAgICAgICAgICAgZHJvcERvd25MaXN0Q29udHJvbC5lbnVtVmFsdWVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZihkcm9wRG93bkxpc3RDb250cm9sLnZhbHVlVHlwZT09RW51bVR5cGUuQm9vbFR5cGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGphcnJheS5wdXNoKGNvbnZlcnRvci5jb252ZXJ0Sk9iamVjdChPYmplY3QuYXNzaWduKG5ldyBFbnVtQm9vbFZhbHVlKCksZWxlbWVudCkpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYoZHJvcERvd25MaXN0Q29udHJvbC52YWx1ZVR5cGU9PUVudW1UeXBlLkludFR5cGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGphcnJheS5wdXNoKGNvbnZlcnRvci5jb252ZXJ0Sk9iamVjdChPYmplY3QuYXNzaWduKG5ldyBFbnVtSW50ZWdlclZhbHVlKCksZWxlbWVudCkpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgamFycmF5LnB1c2goY29udmVydG9yLmNvbnZlcnRKT2JqZWN0KE9iamVjdC5hc3NpZ24obmV3IEVudW1TdHJpbmdWYWx1ZSgpLGVsZW1lbnQpKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gam9iajtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPjeW6j+WIl+WMllxyXG4gICAgICogQHBhcmFtIGpvYmog5LiL5ouJ5YiX6KGo5o6n5Lu25a6e5L2T5bqP5YiX5YyW5ZCO55qESlNPTuWvueixoVxyXG4gICAgICovXHJcbiAgICBpbml0RnJvbU9iamVjdChqb2JqOk9iamVjdCk6RHJvcERvd25Db250cm9se1xyXG4gICAgICAgIGxldCBjb250cm9sPW5ldyBEcm9wRG93bkNvbnRyb2woKTtcclxuICAgICAgICBpZihqb2JqW1widmFsdWVUeXBlXCJdIT1udWxsKXtcclxuICAgICAgICAgICAgY29udHJvbC52YWx1ZVR5cGU9am9ialtcInZhbHVlVHlwZVwiXSBhcyBudW1iZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGpvYmpbXCJlbnVtVmFsdWVzXCJdIT1udWxsKXtcclxuICAgICAgICAgICAgY29udHJvbC5lbnVtVmFsdWVzPW5ldyBBcnJheTxJRW51bVZhbHVlPigpO1xyXG4gICAgICAgICAgICBqb2JqW1wiZW51bVZhbHVlc1wiXS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IGNvbnZlcnRvcj1uZXcgRW51bVZhbHVlQ29udmVydCgpO1xyXG4gICAgICAgICAgICAgICAgY29udHJvbC5lbnVtVmFsdWVzLnB1c2goY29udmVydG9yLmluaXRGcm9tSm9iamVjdChlbGVtZW50KSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY29udHJvbDtcclxuICAgIH1cclxufSJdfQ==