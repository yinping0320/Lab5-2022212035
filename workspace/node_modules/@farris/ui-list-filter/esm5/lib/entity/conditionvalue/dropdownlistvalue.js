/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
import { EnumValueConvert } from "../controltype/dropdownlist/ienumvalue";
import { EventEmitter } from "@angular/core";
var DropDownListValue = /** @class */ (function () {
    function DropDownListValue(data) {
        if (data === void 0) { data = ''; }
        this.clear$ = new EventEmitter();
        this.value = data;
    }
    /**
     * @return {?}
     */
    DropDownListValue.prototype.clearValue = /**
     * @return {?}
     */
    function () {
        this.value = undefined;
        this.clear$.emit();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    DropDownListValue.prototype.setOriginalValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.value = value;
    };
    /**
     * @return {?}
     */
    DropDownListValue.prototype.getOriginalValue = /**
     * @return {?}
     */
    function () {
        return this.value;
    };
    /**
     * @return {?}
     */
    DropDownListValue.prototype.getControlType = /**
     * @return {?}
     */
    function () {
        return ControlType.DropDown;
    };
    /**
     * @return {?}
     */
    DropDownListValue.prototype.isEmpty = /**
     * @return {?}
     */
    function () {
        return !this.value;
    };
    return DropDownListValue;
}());
export { DropDownListValue };
if (false) {
    /** @type {?} */
    DropDownListValue.prototype.clear$;
    /** @type {?} */
    DropDownListValue.prototype.value;
}
var DropDownListValueConvert = /** @class */ (function () {
    function DropDownListValueConvert() {
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    DropDownListValueConvert.prototype.convertToObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        /** @type {?} */
        var dropDownListValue = (/** @type {?} */ (obj));
        /** @type {?} */
        var jobj = new Object();
        /** @type {?} */
        var convertor = new EnumValueConvert();
        if (!!(dropDownListValue.value)) {
            // jobj["value"]=convertor.convertJObject(dropDownListValue.value);
            jobj["value"] = dropDownListValue.value;
        }
        return jobj;
    };
    /**
     * @param {?} jobj
     * @return {?}
     */
    DropDownListValueConvert.prototype.initFromObject = /**
     * @param {?} jobj
     * @return {?}
     */
    function (jobj) {
        /** @type {?} */
        var dropDownListValue = new DropDownListValue();
        if (!!(jobj["value"])) {
            /** @type {?} */
            var convertor = new EnumValueConvert();
            // dropDownListValue.value=convertor.initFromJobject(jobj["value"]);
            dropDownListValue.value = jobj["value"];
        }
        return dropDownListValue;
    };
    return DropDownListValueConvert;
}());
export { DropDownListValueConvert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd25saXN0dmFsdWUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWxpc3QtZmlsdGVyLyIsInNvdXJjZXMiOlsibGliL2VudGl0eS9jb25kaXRpb252YWx1ZS9kcm9wZG93bmxpc3R2YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBYyxnQkFBZ0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0M7SUFrQkksMkJBQVksSUFBaUI7UUFBakIscUJBQUEsRUFBQSxTQUFpQjtRQWhCN0IsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFpQnhCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLENBQUM7Ozs7SUFoQkQsc0NBQVU7OztJQUFWO1FBQ0ksSUFBSSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN2QixDQUFDOzs7OztJQUNELDRDQUFnQjs7OztJQUFoQixVQUFpQixLQUFVO1FBQ3ZCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFDRCw0Q0FBZ0I7OztJQUFoQjtRQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN0QixDQUFDOzs7O0lBQ0QsMENBQWM7OztJQUFkO1FBQ0ksT0FBTyxXQUFXLENBQUMsUUFBUSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFLRCxtQ0FBTzs7O0lBQVA7UUFDSSxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQUFDLEFBeEJELElBd0JDOzs7O0lBdEJHLG1DQUE0Qjs7SUFlNUIsa0NBQWM7O0FBU2xCO0lBQUE7SUFxQkEsQ0FBQzs7Ozs7SUFwQkcsa0RBQWU7Ozs7SUFBZixVQUFnQixHQUFVOztZQUNsQixpQkFBaUIsR0FBQyxtQkFBQSxHQUFHLEVBQXFCOztZQUMxQyxJQUFJLEdBQUMsSUFBSSxNQUFNLEVBQUU7O1lBQ2pCLFNBQVMsR0FBQyxJQUFJLGdCQUFnQixFQUFFO1FBQ3BDLElBQUcsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLEVBQUM7WUFDM0IsbUVBQW1FO1lBQ25FLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUM7U0FDM0M7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVELGlEQUFjOzs7O0lBQWQsVUFBZSxJQUFXOztZQUNsQixpQkFBaUIsR0FBQyxJQUFJLGlCQUFpQixFQUFFO1FBQzdDLElBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUM7O2dCQUNiLFNBQVMsR0FBQyxJQUFJLGdCQUFnQixFQUFFO1lBQ3BDLG9FQUFvRTtZQUNwRSxpQkFBaUIsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzNDO1FBQ0QsT0FBTyxpQkFBaUIsQ0FBQztJQUM3QixDQUFDO0lBQ0wsK0JBQUM7QUFBRCxDQUFDLEFBckJELElBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVZhbHVlIH0gZnJvbSBcIi4vaXZhbHVlXCI7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSBcIi4uL2NvbnRyb2x0eXBlXCI7XHJcbmltcG9ydCB7IElFbnVtVmFsdWUsIEVudW1WYWx1ZUNvbnZlcnQgfSBmcm9tIFwiLi4vY29udHJvbHR5cGUvZHJvcGRvd25saXN0L2llbnVtdmFsdWVcIjtcclxuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBEcm9wRG93bkxpc3RWYWx1ZSBpbXBsZW1lbnRzIElWYWx1ZXtcclxuXHJcbiAgICBjbGVhciQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgY2xlYXJWYWx1ZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnZhbHVlID0gdW5kZWZpbmVkO1xyXG4gICAgICAgIHRoaXMuY2xlYXIkLmVtaXQoKTtcclxuICAgIH1cclxuICAgIHNldE9yaWdpbmFsVmFsdWUodmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcclxuICAgIH1cclxuICAgIGdldE9yaWdpbmFsVmFsdWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWU7XHJcbiAgICB9XHJcbiAgICBnZXRDb250cm9sVHlwZSgpOiBDb250cm9sVHlwZSB7XHJcbiAgICAgICAgcmV0dXJuIENvbnRyb2xUeXBlLkRyb3BEb3duO1xyXG4gICAgfVxyXG4gICAgdmFsdWU6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKGRhdGE6IHN0cmluZyA9ICcnKXtcclxuICAgICAgICB0aGlzLnZhbHVlID0gZGF0YTtcclxuICAgIH1cclxuICAgIGlzRW1wdHkoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuICF0aGlzLnZhbHVlO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRHJvcERvd25MaXN0VmFsdWVDb252ZXJ0e1xyXG4gICAgY29udmVydFRvT2JqZWN0KG9iajpJVmFsdWUpOk9iamVjdHtcclxuICAgICAgICBsZXQgZHJvcERvd25MaXN0VmFsdWU9b2JqIGFzIERyb3BEb3duTGlzdFZhbHVlO1xyXG4gICAgICAgIGxldCBqb2JqPW5ldyBPYmplY3QoKTtcclxuICAgICAgICBsZXQgY29udmVydG9yPW5ldyBFbnVtVmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgaWYoISEoZHJvcERvd25MaXN0VmFsdWUudmFsdWUpKXtcclxuICAgICAgICAgICAgLy8gam9ialtcInZhbHVlXCJdPWNvbnZlcnRvci5jb252ZXJ0Sk9iamVjdChkcm9wRG93bkxpc3RWYWx1ZS52YWx1ZSk7XHJcbiAgICAgICAgICAgIGpvYmpbXCJ2YWx1ZVwiXSA9IGRyb3BEb3duTGlzdFZhbHVlLnZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gam9iajtcclxuICAgIH1cclxuXHJcbiAgICBpbml0RnJvbU9iamVjdChqb2JqOk9iamVjdCk6RHJvcERvd25MaXN0VmFsdWV7XHJcbiAgICAgICAgbGV0IGRyb3BEb3duTGlzdFZhbHVlPW5ldyBEcm9wRG93bkxpc3RWYWx1ZSgpO1xyXG4gICAgICAgIGlmKCEhKGpvYmpbXCJ2YWx1ZVwiXSkpe1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yPW5ldyBFbnVtVmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgICAgIC8vIGRyb3BEb3duTGlzdFZhbHVlLnZhbHVlPWNvbnZlcnRvci5pbml0RnJvbUpvYmplY3Qoam9ialtcInZhbHVlXCJdKTtcclxuICAgICAgICAgICAgZHJvcERvd25MaXN0VmFsdWUudmFsdWUgPSBqb2JqW1widmFsdWVcIl07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBkcm9wRG93bkxpc3RWYWx1ZTtcclxuICAgIH1cclxufVxyXG5cclxuIl19