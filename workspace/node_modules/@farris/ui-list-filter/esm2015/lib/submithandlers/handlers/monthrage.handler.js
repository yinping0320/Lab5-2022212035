/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
export class MonthRangeHandler {
    /**
     * @param {?} qc
     * @return {?}
     */
    convert(qc) {
        /** @type {?} */
        const arr = [];
        /** @type {?} */
        const drv = ((/** @type {?} */ (qc.value)));
        if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime))
            return arr;
        drv.startTime && arr.push({
            'FilterField': qc.fieldCode,
            'Compare': CompareType.GreaterThanOrEqual,
            //GreaterOrEqual
            'Value': drv.startTime,
            'Relation': RelationType.And,
            //and
            'Expresstype': ValueType.Value
        });
        drv.endTime && arr.push({
            'FilterField': qc.fieldCode,
            'Compare': CompareType.LessThanOrEqual,
            //LessOrEqual
            'Value': drv.endTime,
            'Relation': RelationType.And,
            //and
            'Expresstype': ValueType.Value
        });
        return arr;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGhyYWdlLmhhbmRsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWxpc3QtZmlsdGVyLyIsInNvdXJjZXMiOlsibGliL3N1Ym1pdGhhbmRsZXJzL2hhbmRsZXJzL21vbnRocmFnZS5oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUkxRCxNQUFNLE9BQU8saUJBQWlCOzs7OztJQUMxQixPQUFPLENBQUMsRUFBa0I7O2NBQ2hCLEdBQUcsR0FBRyxFQUFFOztjQUNSLEdBQUcsR0FBRyxDQUFDLG1CQUFBLEVBQUUsQ0FBQyxLQUFLLEVBQW1CLENBQUM7UUFDekMsSUFBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDO1lBQ2hFLE9BQU8sR0FBRyxDQUFDO1FBQ2YsR0FBRyxDQUFDLFNBQVMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQ3RCLGFBQWEsRUFBRyxFQUFFLENBQUMsU0FBUztZQUM1QixTQUFTLEVBQUcsV0FBVyxDQUFDLGtCQUFrQjs7WUFDMUMsT0FBTyxFQUFHLEdBQUcsQ0FBQyxTQUFTO1lBQ3ZCLFVBQVUsRUFBRyxZQUFZLENBQUMsR0FBRzs7WUFDN0IsYUFBYSxFQUFFLFNBQVMsQ0FBQyxLQUFLO1NBQ2pDLENBQUMsQ0FBQztRQUNILEdBQUcsQ0FBQyxPQUFPLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztZQUNwQixhQUFhLEVBQUcsRUFBRSxDQUFDLFNBQVM7WUFDNUIsU0FBUyxFQUFHLFdBQVcsQ0FBQyxlQUFlOztZQUN2QyxPQUFPLEVBQUcsR0FBRyxDQUFDLE9BQU87WUFDckIsVUFBVSxFQUFHLFlBQVksQ0FBQyxHQUFHOztZQUM3QixhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7U0FDakMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJUXVlcnlDb25kaXRpb25IYW5kbGVyIH0gZnJvbSBcIi4vaXF1ZXJ5Y29uZGl0aW9uLmhhbmRsZXJcIjtcclxuXHJcbmltcG9ydCB7IENvbXBhcmVUeXBlIH0gZnJvbSAnLi4vZW51bS9jb21wYXJlLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFZhbHVlVHlwZSB9IGZyb20gJy4uL2VudW0vdmFsdWUtdHlwZS5lbnVtJztcclxuaW1wb3J0IHsgUmVsYXRpb25UeXBlIH0gZnJvbSAnLi4vZW51bS9yZWxhdGlvbi10eXBlLmVudW0nO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJy4uLy4uL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IE1vbnRoUmFuZ2VWYWx1ZSB9IGZyb20gJy4uLy4uL2VudGl0eS9jb25kaXRpb252YWx1ZS9tb250aHJhbmdlJztcclxuXHJcbmV4cG9ydCBjbGFzcyBNb250aFJhbmdlSGFuZGxlciBpbXBsZW1lbnRzIElRdWVyeUNvbmRpdGlvbkhhbmRsZXJ7XHJcbiAgICBjb252ZXJ0KHFjOiBRdWVyeUNvbmRpdGlvbikge1xyXG4gICAgICAgIGNvbnN0IGFyciA9IFtdO1xyXG4gICAgICAgIGNvbnN0IGRydiA9IChxYy52YWx1ZSBhcyBNb250aFJhbmdlVmFsdWUpO1xyXG4gICAgICAgIGlmKE9iamVjdC5rZXlzKGRydikubGVuZ3RoID09PSAwIHx8ICghZHJ2LnN0YXJ0VGltZSAmJiAhZHJ2LmVuZFRpbWUpKVxyXG4gICAgICAgICAgICByZXR1cm4gYXJyO1xyXG4gICAgICAgIGRydi5zdGFydFRpbWUgJiYgYXJyLnB1c2goe1xyXG4gICAgICAgICAgICAnRmlsdGVyRmllbGQnIDogcWMuZmllbGRDb2RlLFxyXG4gICAgICAgICAgICAnQ29tcGFyZScgOiBDb21wYXJlVHlwZS5HcmVhdGVyVGhhbk9yRXF1YWwsIC8vR3JlYXRlck9yRXF1YWxcclxuICAgICAgICAgICAgJ1ZhbHVlJyA6IGRydi5zdGFydFRpbWUsXHJcbiAgICAgICAgICAgICdSZWxhdGlvbicgOiBSZWxhdGlvblR5cGUuQW5kLCAvL2FuZFxyXG4gICAgICAgICAgICAnRXhwcmVzc3R5cGUnOiBWYWx1ZVR5cGUuVmFsdWVcclxuICAgICAgICB9KTtcclxuICAgICAgICBkcnYuZW5kVGltZSAmJiBhcnIucHVzaCh7XHJcbiAgICAgICAgICAgICdGaWx0ZXJGaWVsZCcgOiBxYy5maWVsZENvZGUsXHJcbiAgICAgICAgICAgICdDb21wYXJlJyA6IENvbXBhcmVUeXBlLkxlc3NUaGFuT3JFcXVhbCwgLy9MZXNzT3JFcXVhbFxyXG4gICAgICAgICAgICAnVmFsdWUnIDogZHJ2LmVuZFRpbWUsXHJcbiAgICAgICAgICAgICdSZWxhdGlvbicgOiBSZWxhdGlvblR5cGUuQW5kLC8vYW5kXHJcbiAgICAgICAgICAgICdFeHByZXNzdHlwZSc6IFZhbHVlVHlwZS5WYWx1ZVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gYXJyO1xyXG4gICAgfVxyXG59Il19