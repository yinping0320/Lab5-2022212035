/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from '../controltype';
import { TextValue } from './textvalue';
import { NumberRangeValueConvertor } from './numberrangevaue';
import { DateRangeValue } from './daterangevalue';
import { HelpValue } from './helpvalue';
import { DropDownListValueConvert } from './dropdownlistvalue';
/**
 * @record
 */
export function IValue() { }
if (false) {
    /**
     * @return {?}
     */
    IValue.prototype.getControlType = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.getOriginalValue = function () { };
    /**
     * @param {?} value
     * @return {?}
     */
    IValue.prototype.setOriginalValue = function (value) { };
    /**
     * @return {?}
     */
    IValue.prototype.clearValue = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.isEmpty = function () { };
}
export class ConditionValueConvert {
    /**
     * @param {?} obj
     * @return {?}
     */
    convertToObject(obj) {
        /** @type {?} */
        let conditionValue = (/** @type {?} */ (obj));
        /** @type {?} */
        let controlType = conditionValue.getControlType();
        /** @type {?} */
        let jobj = new Object();
        jobj['Type'] = controlType;
        if (controlType == ControlType.DropDown) {
            /** @type {?} */
            let convertor = new DropDownListValueConvert();
            jobj['Content'] = convertor.convertToObject(conditionValue);
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            let convertor = new NumberRangeValueConvertor();
            jobj['Content'] = convertor.convertToObject(conditionValue);
        }
        else {
            jobj['Content'] = conditionValue;
        }
        return jobj;
    }
    /**
     * @param {?} jobj
     * @return {?}
     */
    initFromObject(jobj) {
        /** @type {?} */
        let controlType = (/** @type {?} */ (jobj['Type']));
        /** @type {?} */
        let content = jobj['Content'];
        if (controlType == ControlType.Text) {
            return Object.assign(new TextValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            let convertor = new NumberRangeValueConvertor();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.DateRange) {
            return Object.assign(new DateRangeValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.DropDown) {
            /** @type {?} */
            let convertor = new DropDownListValueConvert();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.Help) {
            return Object.assign(new HelpValue(), (/** @type {?} */ (content)));
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXZhbHVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1saXN0LWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvY29uZGl0aW9udmFsdWUvaXZhbHVlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQUUvRCw0QkFNQzs7Ozs7SUFMRyxrREFBOEI7Ozs7SUFDOUIsb0RBQXdCOzs7OztJQUN4Qix5REFBbUM7Ozs7SUFDbkMsOENBQW1COzs7O0lBQ25CLDJDQUFtQjs7QUFHdkIsTUFBTSxPQUFPLHFCQUFxQjs7Ozs7SUFDOUIsZUFBZSxDQUFDLEdBQVc7O1lBQ25CLGNBQWMsR0FBRyxtQkFBQSxHQUFHLEVBQVU7O1lBQzlCLFdBQVcsR0FBRyxjQUFjLENBQUMsY0FBYyxFQUFFOztZQUM3QyxJQUFJLEdBQUcsSUFBSSxNQUFNLEVBQUU7UUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLFdBQVcsQ0FBQztRQUMzQixJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsUUFBUSxFQUFFOztnQkFDakMsU0FBUyxHQUFHLElBQUksd0JBQXdCLEVBQUU7WUFDOUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDL0Q7YUFDSSxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsV0FBVyxFQUFFOztnQkFDekMsU0FBUyxHQUFHLElBQUkseUJBQXlCLEVBQUU7WUFDL0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDL0Q7YUFDSTtZQUNELElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxjQUFjLENBQUM7U0FDcEM7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVELGNBQWMsQ0FBQyxJQUFZOztZQUNuQixXQUFXLEdBQUcsbUJBQUEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFlOztZQUN6QyxPQUFPLEdBQVcsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNyQyxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFO1lBQ2pDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFNBQVMsRUFBRSxFQUFFLG1CQUFBLE9BQU8sRUFBYSxDQUFDLENBQUM7U0FDL0Q7YUFDSSxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsV0FBVyxFQUFFOztnQkFDekMsU0FBUyxHQUFHLElBQUkseUJBQXlCLEVBQUU7WUFDL0MsT0FBTyxTQUFTLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVDO2FBQ0ksSUFBSSxXQUFXLElBQUksV0FBVyxDQUFDLFNBQVMsRUFBRTtZQUMzQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxjQUFjLEVBQUUsRUFBRSxtQkFBQSxPQUFPLEVBQWtCLENBQUMsQ0FBQztTQUN6RTthQUNJLElBQUksV0FBVyxJQUFJLFdBQVcsQ0FBQyxRQUFRLEVBQUU7O2dCQUN0QyxTQUFTLEdBQUcsSUFBSSx3QkFBd0IsRUFBRTtZQUM5QyxPQUFPLFNBQVMsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDNUM7YUFDSSxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFO1lBQ3RDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFNBQVMsRUFBRSxFQUFFLG1CQUFBLE9BQU8sRUFBYSxDQUFDLENBQUM7U0FDL0Q7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250cm9sVHlwZSB9IGZyb20gJy4uL2NvbnRyb2x0eXBlJztcclxuaW1wb3J0IHsgVGV4dFZhbHVlIH0gZnJvbSAnLi90ZXh0dmFsdWUnO1xyXG5pbXBvcnQgeyBOdW1iZXJSYW5nZVZhbHVlQ29udmVydG9yIH0gZnJvbSAnLi9udW1iZXJyYW5nZXZhdWUnO1xyXG5pbXBvcnQgeyBEYXRlUmFuZ2VWYWx1ZSB9IGZyb20gJy4vZGF0ZXJhbmdldmFsdWUnO1xyXG5pbXBvcnQgeyBIZWxwVmFsdWUgfSBmcm9tICcuL2hlbHB2YWx1ZSc7XHJcbmltcG9ydCB7IERyb3BEb3duTGlzdFZhbHVlQ29udmVydCB9IGZyb20gJy4vZHJvcGRvd25saXN0dmFsdWUnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJVmFsdWUge1xyXG4gICAgZ2V0Q29udHJvbFR5cGUoKTogQ29udHJvbFR5cGU7XHJcbiAgICBnZXRPcmlnaW5hbFZhbHVlKCk6IGFueTtcclxuICAgIHNldE9yaWdpbmFsVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XHJcbiAgICBjbGVhclZhbHVlKCk6IHZvaWQ7XHJcbiAgICBpc0VtcHR5KCk6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb25kaXRpb25WYWx1ZUNvbnZlcnQge1xyXG4gICAgY29udmVydFRvT2JqZWN0KG9iajogSVZhbHVlKTogT2JqZWN0IHtcclxuICAgICAgICBsZXQgY29uZGl0aW9uVmFsdWUgPSBvYmogYXMgSVZhbHVlO1xyXG4gICAgICAgIGxldCBjb250cm9sVHlwZSA9IGNvbmRpdGlvblZhbHVlLmdldENvbnRyb2xUeXBlKCk7XHJcbiAgICAgICAgbGV0IGpvYmogPSBuZXcgT2JqZWN0KCk7XHJcbiAgICAgICAgam9ialsnVHlwZSddID0gY29udHJvbFR5cGU7XHJcbiAgICAgICAgaWYgKGNvbnRyb2xUeXBlID09IENvbnRyb2xUeXBlLkRyb3BEb3duKSB7XHJcbiAgICAgICAgICAgIGxldCBjb252ZXJ0b3IgPSBuZXcgRHJvcERvd25MaXN0VmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgICAgIGpvYmpbJ0NvbnRlbnQnXSA9IGNvbnZlcnRvci5jb252ZXJ0VG9PYmplY3QoY29uZGl0aW9uVmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChjb250cm9sVHlwZSA9PSBDb250cm9sVHlwZS5OdW1iZXJSYW5nZSkge1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yID0gbmV3IE51bWJlclJhbmdlVmFsdWVDb252ZXJ0b3IoKTtcclxuICAgICAgICAgICAgam9ialsnQ29udGVudCddID0gY29udmVydG9yLmNvbnZlcnRUb09iamVjdChjb25kaXRpb25WYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBqb2JqWydDb250ZW50J10gPSBjb25kaXRpb25WYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGpvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdEZyb21PYmplY3Qoam9iajogT2JqZWN0KTogSVZhbHVlIHtcclxuICAgICAgICBsZXQgY29udHJvbFR5cGUgPSBqb2JqWydUeXBlJ10gYXMgQ29udHJvbFR5cGU7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQ6IElWYWx1ZSA9IGpvYmpbJ0NvbnRlbnQnXTtcclxuICAgICAgICBpZiAoY29udHJvbFR5cGUgPT0gQ29udHJvbFR5cGUuVGV4dCkge1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgVGV4dFZhbHVlKCksIGNvbnRlbnQgYXMgVGV4dFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoY29udHJvbFR5cGUgPT0gQ29udHJvbFR5cGUuTnVtYmVyUmFuZ2UpIHtcclxuICAgICAgICAgICAgbGV0IGNvbnZlcnRvciA9IG5ldyBOdW1iZXJSYW5nZVZhbHVlQ29udmVydG9yKCk7XHJcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJ0b3IuaW5pdEZyb21PYmplY3QoY29udGVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGNvbnRyb2xUeXBlID09IENvbnRyb2xUeXBlLkRhdGVSYW5nZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgRGF0ZVJhbmdlVmFsdWUoKSwgY29udGVudCBhcyBEYXRlUmFuZ2VWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGNvbnRyb2xUeXBlID09IENvbnRyb2xUeXBlLkRyb3BEb3duKSB7XHJcbiAgICAgICAgICAgIGxldCBjb252ZXJ0b3IgPSBuZXcgRHJvcERvd25MaXN0VmFsdWVDb252ZXJ0KCk7XHJcbiAgICAgICAgICAgIHJldHVybiBjb252ZXJ0b3IuaW5pdEZyb21PYmplY3QoY29udGVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGNvbnRyb2xUeXBlID09IENvbnRyb2xUeXBlLkhlbHApIHtcclxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24obmV3IEhlbHBWYWx1ZSgpLCBjb250ZW50IGFzIEhlbHBWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19